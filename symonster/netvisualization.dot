digraph net{
"boolean"->"(static)org.joda.time.DateTimeZone.adjustOffset(org.joda.time.DateTimeZone long boolean )long"[label="1"]
"boolean"->"(static)org.joda.time.DateTimeZone.convertLocalToUTC(org.joda.time.DateTimeZone long boolean )long"[label="1"]
"boolean"->"(static)org.joda.time.format.DateTimeFormatterBuilder.appendTwoDigitWeekyear(org.joda.time.format.DateTimeFormatterBuilder int boolean )org.joda.time.format.DateTimeFormatterBuilder"[label="1"]
"boolean"->"(static)org.joda.time.format.DateTimeFormatterBuilder.appendTwoDigitYear(org.joda.time.format.DateTimeFormatterBuilder int boolean )org.joda.time.format.DateTimeFormatterBuilder"[label="1"]
"boolean"->"(static)org.joda.time.format.DateTimeParserBucket.computeMillis(org.joda.time.format.DateTimeParserBucket boolean )long"[label="1"]
"boolean"->"(static)org.joda.time.format.DateTimeParserBucket.computeMillis(org.joda.time.format.DateTimeParserBucket boolean java.lang.CharSequence )long"[label="1"]
"boolean"->"(static)org.joda.time.format.DateTimeParserBucket.computeMillis(org.joda.time.format.DateTimeParserBucket boolean java.lang.String )long"[label="1"]
"boolean"->"(static)org.joda.time.format.PeriodFormatterBuilder.rejectSignedValues(org.joda.time.format.PeriodFormatterBuilder boolean )org.joda.time.format.PeriodFormatterBuilder"[label="1"]
"boolean"->"(static)org.joda.time.tz.DateTimeZoneBuilder.toDateTimeZone(org.joda.time.tz.DateTimeZoneBuilder java.lang.String boolean )org.joda.time.DateTimeZone"[label="1"]
"char"->"(static)org.joda.time.format.DateTimeFormatterBuilder.appendLiteral(org.joda.time.format.DateTimeFormatterBuilder char )org.joda.time.format.DateTimeFormatterBuilder"[label="1"]
"double"->"org.joda.time.DateTimeUtils.fromJulianDay(double )long"[label="1"]
"int"->"(static)org.joda.time.DateMidnight$Property.addToCopy(org.joda.time.DateMidnight$Property int )org.joda.time.DateMidnight"[label="1"]
"int"->"(static)org.joda.time.DateMidnight$Property.addWrapFieldToCopy(org.joda.time.DateMidnight$Property int )org.joda.time.DateMidnight"[label="1"]
"int"->"(static)org.joda.time.DateMidnight$Property.setCopy(org.joda.time.DateMidnight$Property int )org.joda.time.DateMidnight"[label="1"]
"int"->"(static)org.joda.time.DateMidnight.minusDays(org.joda.time.DateMidnight int )org.joda.time.DateMidnight"[label="1"]
"int"->"(static)org.joda.time.DateMidnight.minusMonths(org.joda.time.DateMidnight int )org.joda.time.DateMidnight"[label="1"]
"int"->"(static)org.joda.time.DateMidnight.minusWeeks(org.joda.time.DateMidnight int )org.joda.time.DateMidnight"[label="1"]
"int"->"(static)org.joda.time.DateMidnight.minusYears(org.joda.time.DateMidnight int )org.joda.time.DateMidnight"[label="1"]
"int"->"(static)org.joda.time.DateMidnight.plusDays(org.joda.time.DateMidnight int )org.joda.time.DateMidnight"[label="1"]
"int"->"(static)org.joda.time.DateMidnight.plusMonths(org.joda.time.DateMidnight int )org.joda.time.DateMidnight"[label="1"]
"int"->"(static)org.joda.time.DateMidnight.plusWeeks(org.joda.time.DateMidnight int )org.joda.time.DateMidnight"[label="1"]
"int"->"(static)org.joda.time.DateMidnight.plusYears(org.joda.time.DateMidnight int )org.joda.time.DateMidnight"[label="1"]
"int"->"(static)org.joda.time.DateMidnight.withCenturyOfEra(org.joda.time.DateMidnight int )org.joda.time.DateMidnight"[label="1"]
"int"->"(static)org.joda.time.DateMidnight.withDayOfMonth(org.joda.time.DateMidnight int )org.joda.time.DateMidnight"[label="1"]
"int"->"(static)org.joda.time.DateMidnight.withDayOfWeek(org.joda.time.DateMidnight int )org.joda.time.DateMidnight"[label="1"]
"int"->"(static)org.joda.time.DateMidnight.withDayOfYear(org.joda.time.DateMidnight int )org.joda.time.DateMidnight"[label="1"]
"int"->"(static)org.joda.time.DateMidnight.withDurationAdded(org.joda.time.DateMidnight long int )org.joda.time.DateMidnight"[label="1"]
"int"->"(static)org.joda.time.DateMidnight.withDurationAdded(org.joda.time.DateMidnight org.joda.time.ReadableDuration int )org.joda.time.DateMidnight"[label="1"]
"int"->"(static)org.joda.time.DateMidnight.withEra(org.joda.time.DateMidnight int )org.joda.time.DateMidnight"[label="1"]
"int"->"(static)org.joda.time.DateMidnight.withField(org.joda.time.DateMidnight org.joda.time.DateTimeFieldType int )org.joda.time.DateMidnight"[label="1"]
"int"->"(static)org.joda.time.DateMidnight.withFieldAdded(org.joda.time.DateMidnight org.joda.time.DurationFieldType int )org.joda.time.DateMidnight"[label="1"]
"int"->"(static)org.joda.time.DateMidnight.withMonthOfYear(org.joda.time.DateMidnight int )org.joda.time.DateMidnight"[label="1"]
"int"->"(static)org.joda.time.DateMidnight.withPeriodAdded(org.joda.time.DateMidnight org.joda.time.ReadablePeriod int )org.joda.time.DateMidnight"[label="1"]
"int"->"(static)org.joda.time.DateMidnight.withWeekOfWeekyear(org.joda.time.DateMidnight int )org.joda.time.DateMidnight"[label="1"]
"int"->"(static)org.joda.time.DateMidnight.withWeekyear(org.joda.time.DateMidnight int )org.joda.time.DateMidnight"[label="1"]
"int"->"(static)org.joda.time.DateMidnight.withYear(org.joda.time.DateMidnight int )org.joda.time.DateMidnight"[label="1"]
"int"->"(static)org.joda.time.DateMidnight.withYearOfCentury(org.joda.time.DateMidnight int )org.joda.time.DateMidnight"[label="1"]
"int"->"(static)org.joda.time.DateMidnight.withYearOfEra(org.joda.time.DateMidnight int )org.joda.time.DateMidnight"[label="1"]
"int"->"(static)org.joda.time.DateTime$Property.addToCopy(org.joda.time.DateTime$Property int )org.joda.time.DateTime"[label="1"]
"int"->"(static)org.joda.time.DateTime$Property.addWrapFieldToCopy(org.joda.time.DateTime$Property int )org.joda.time.DateTime"[label="1"]
"int"->"(static)org.joda.time.DateTime$Property.setCopy(org.joda.time.DateTime$Property int )org.joda.time.DateTime"[label="1"]
"int"->"(static)org.joda.time.DateTime.minusDays(org.joda.time.DateTime int )org.joda.time.DateTime"[label="1"]
"int"->"(static)org.joda.time.DateTime.minusHours(org.joda.time.DateTime int )org.joda.time.DateTime"[label="1"]
"int"->"(static)org.joda.time.DateTime.minusMillis(org.joda.time.DateTime int )org.joda.time.DateTime"[label="1"]
"int"->"(static)org.joda.time.DateTime.minusMinutes(org.joda.time.DateTime int )org.joda.time.DateTime"[label="1"]
"int"->"(static)org.joda.time.DateTime.minusMonths(org.joda.time.DateTime int )org.joda.time.DateTime"[label="1"]
"int"->"(static)org.joda.time.DateTime.minusSeconds(org.joda.time.DateTime int )org.joda.time.DateTime"[label="1"]
"int"->"(static)org.joda.time.DateTime.minusWeeks(org.joda.time.DateTime int )org.joda.time.DateTime"[label="1"]
"int"->"(static)org.joda.time.DateTime.minusYears(org.joda.time.DateTime int )org.joda.time.DateTime"[label="1"]
"int"->"(static)org.joda.time.DateTime.plusDays(org.joda.time.DateTime int )org.joda.time.DateTime"[label="1"]
"int"->"(static)org.joda.time.DateTime.plusHours(org.joda.time.DateTime int )org.joda.time.DateTime"[label="1"]
"int"->"(static)org.joda.time.DateTime.plusMillis(org.joda.time.DateTime int )org.joda.time.DateTime"[label="1"]
"int"->"(static)org.joda.time.DateTime.plusMinutes(org.joda.time.DateTime int )org.joda.time.DateTime"[label="1"]
"int"->"(static)org.joda.time.DateTime.plusMonths(org.joda.time.DateTime int )org.joda.time.DateTime"[label="1"]
"int"->"(static)org.joda.time.DateTime.plusSeconds(org.joda.time.DateTime int )org.joda.time.DateTime"[label="1"]
"int"->"(static)org.joda.time.DateTime.plusWeeks(org.joda.time.DateTime int )org.joda.time.DateTime"[label="1"]
"int"->"(static)org.joda.time.DateTime.plusYears(org.joda.time.DateTime int )org.joda.time.DateTime"[label="1"]
"int"->"(static)org.joda.time.DateTime.withCenturyOfEra(org.joda.time.DateTime int )org.joda.time.DateTime"[label="1"]
"int"->"(static)org.joda.time.DateTime.withDayOfMonth(org.joda.time.DateTime int )org.joda.time.DateTime"[label="1"]
"int"->"(static)org.joda.time.DateTime.withDayOfWeek(org.joda.time.DateTime int )org.joda.time.DateTime"[label="1"]
"int"->"(static)org.joda.time.DateTime.withDayOfYear(org.joda.time.DateTime int )org.joda.time.DateTime"[label="1"]
"int"->"(static)org.joda.time.DateTime.withDurationAdded(org.joda.time.DateTime long int )org.joda.time.DateTime"[label="1"]
"int"->"(static)org.joda.time.DateTime.withDurationAdded(org.joda.time.DateTime org.joda.time.ReadableDuration int )org.joda.time.DateTime"[label="1"]
"int"->"(static)org.joda.time.DateTime.withEra(org.joda.time.DateTime int )org.joda.time.DateTime"[label="1"]
"int"->"(static)org.joda.time.DateTime.withField(org.joda.time.DateTime org.joda.time.DateTimeFieldType int )org.joda.time.DateTime"[label="1"]
"int"->"(static)org.joda.time.DateTime.withFieldAdded(org.joda.time.DateTime org.joda.time.DurationFieldType int )org.joda.time.DateTime"[label="1"]
"int"->"(static)org.joda.time.DateTime.withHourOfDay(org.joda.time.DateTime int )org.joda.time.DateTime"[label="1"]
"int"->"(static)org.joda.time.DateTime.withMillisOfDay(org.joda.time.DateTime int )org.joda.time.DateTime"[label="1"]
"int"->"(static)org.joda.time.DateTime.withMillisOfSecond(org.joda.time.DateTime int )org.joda.time.DateTime"[label="1"]
"int"->"(static)org.joda.time.DateTime.withMinuteOfHour(org.joda.time.DateTime int )org.joda.time.DateTime"[label="1"]
"int"->"(static)org.joda.time.DateTime.withMonthOfYear(org.joda.time.DateTime int )org.joda.time.DateTime"[label="1"]
"int"->"(static)org.joda.time.DateTime.withPeriodAdded(org.joda.time.DateTime org.joda.time.ReadablePeriod int )org.joda.time.DateTime"[label="1"]
"int"->"(static)org.joda.time.DateTime.withSecondOfMinute(org.joda.time.DateTime int )org.joda.time.DateTime"[label="1"]
"int"->"(static)org.joda.time.DateTime.withWeekOfWeekyear(org.joda.time.DateTime int )org.joda.time.DateTime"[label="1"]
"int"->"(static)org.joda.time.DateTime.withWeekyear(org.joda.time.DateTime int )org.joda.time.DateTime"[label="1"]
"int"->"(static)org.joda.time.DateTime.withYear(org.joda.time.DateTime int )org.joda.time.DateTime"[label="1"]
"int"->"(static)org.joda.time.DateTime.withYearOfCentury(org.joda.time.DateTime int )org.joda.time.DateTime"[label="1"]
"int"->"(static)org.joda.time.DateTime.withYearOfEra(org.joda.time.DateTime int )org.joda.time.DateTime"[label="1"]
"int"->"(static)org.joda.time.DateTimeField.addWrapField(org.joda.time.DateTimeField long int )long"[label="1"]
"int"->"(static)org.joda.time.DateTimeField.getAsShortText(org.joda.time.DateTimeField int java.util.Locale )java.lang.String"[label="1"]
"int"->"(static)org.joda.time.DateTimeField.getAsText(org.joda.time.DateTimeField int java.util.Locale )java.lang.String"[label="1"]
"int"->"(static)org.joda.time.DateTimeField.set(org.joda.time.DateTimeField long int )long"[label="1"]
"int"->"(static)org.joda.time.Days.dividedBy(org.joda.time.Days int )org.joda.time.Days"[label="1"]
"int"->"(static)org.joda.time.Days.minus(org.joda.time.Days int )org.joda.time.Days"[label="1"]
"int"->"(static)org.joda.time.Days.multipliedBy(org.joda.time.Days int )org.joda.time.Days"[label="1"]
"int"->"(static)org.joda.time.Days.plus(org.joda.time.Days int )org.joda.time.Days"[label="1"]
"int"->"(static)org.joda.time.Duration.withDurationAdded(org.joda.time.Duration long int )org.joda.time.Duration"[label="1"]
"int"->"(static)org.joda.time.Duration.withDurationAdded(org.joda.time.Duration org.joda.time.ReadableDuration int )org.joda.time.Duration"[label="1"]
"int"->"(static)org.joda.time.DurationField.getMillis(org.joda.time.DurationField int )long"[label="1"]
"int"->"(static)org.joda.time.DurationField.getMillis(org.joda.time.DurationField int long )long"[label="1"]
"int"->"(static)org.joda.time.DurationField.subtract(org.joda.time.DurationField long int )long"[label="1"]
"int"->"(static)org.joda.time.Hours.dividedBy(org.joda.time.Hours int )org.joda.time.Hours"[label="1"]
"int"->"(static)org.joda.time.Hours.minus(org.joda.time.Hours int )org.joda.time.Hours"[label="1"]
"int"->"(static)org.joda.time.Hours.multipliedBy(org.joda.time.Hours int )org.joda.time.Hours"[label="1"]
"int"->"(static)org.joda.time.Hours.plus(org.joda.time.Hours int )org.joda.time.Hours"[label="1"]
"int"->"(static)org.joda.time.Instant.withDurationAdded(org.joda.time.Instant long int )org.joda.time.Instant"[label="1"]
"int"->"(static)org.joda.time.Instant.withDurationAdded(org.joda.time.Instant org.joda.time.ReadableDuration int )org.joda.time.Instant"[label="1"]
"int"->"(static)org.joda.time.LocalDate$Property.addToCopy(org.joda.time.LocalDate$Property int )org.joda.time.LocalDate"[label="1"]
"int"->"(static)org.joda.time.LocalDate$Property.addWrapFieldToCopy(org.joda.time.LocalDate$Property int )org.joda.time.LocalDate"[label="1"]
"int"->"(static)org.joda.time.LocalDate$Property.setCopy(org.joda.time.LocalDate$Property int )org.joda.time.LocalDate"[label="1"]
"int"->"(static)org.joda.time.LocalDate.getValue(org.joda.time.LocalDate int )int"[label="1"]
"int"->"(static)org.joda.time.LocalDate.minusDays(org.joda.time.LocalDate int )org.joda.time.LocalDate"[label="1"]
"int"->"(static)org.joda.time.LocalDate.minusMonths(org.joda.time.LocalDate int )org.joda.time.LocalDate"[label="1"]
"int"->"(static)org.joda.time.LocalDate.minusWeeks(org.joda.time.LocalDate int )org.joda.time.LocalDate"[label="1"]
"int"->"(static)org.joda.time.LocalDate.minusYears(org.joda.time.LocalDate int )org.joda.time.LocalDate"[label="1"]
"int"->"(static)org.joda.time.LocalDate.plusDays(org.joda.time.LocalDate int )org.joda.time.LocalDate"[label="1"]
"int"->"(static)org.joda.time.LocalDate.plusMonths(org.joda.time.LocalDate int )org.joda.time.LocalDate"[label="1"]
"int"->"(static)org.joda.time.LocalDate.plusWeeks(org.joda.time.LocalDate int )org.joda.time.LocalDate"[label="1"]
"int"->"(static)org.joda.time.LocalDate.plusYears(org.joda.time.LocalDate int )org.joda.time.LocalDate"[label="1"]
"int"->"(static)org.joda.time.LocalDate.withCenturyOfEra(org.joda.time.LocalDate int )org.joda.time.LocalDate"[label="1"]
"int"->"(static)org.joda.time.LocalDate.withDayOfMonth(org.joda.time.LocalDate int )org.joda.time.LocalDate"[label="1"]
"int"->"(static)org.joda.time.LocalDate.withDayOfWeek(org.joda.time.LocalDate int )org.joda.time.LocalDate"[label="1"]
"int"->"(static)org.joda.time.LocalDate.withDayOfYear(org.joda.time.LocalDate int )org.joda.time.LocalDate"[label="1"]
"int"->"(static)org.joda.time.LocalDate.withEra(org.joda.time.LocalDate int )org.joda.time.LocalDate"[label="1"]
"int"->"(static)org.joda.time.LocalDate.withField(org.joda.time.LocalDate org.joda.time.DateTimeFieldType int )org.joda.time.LocalDate"[label="1"]
"int"->"(static)org.joda.time.LocalDate.withFieldAdded(org.joda.time.LocalDate org.joda.time.DurationFieldType int )org.joda.time.LocalDate"[label="1"]
"int"->"(static)org.joda.time.LocalDate.withMonthOfYear(org.joda.time.LocalDate int )org.joda.time.LocalDate"[label="1"]
"int"->"(static)org.joda.time.LocalDate.withPeriodAdded(org.joda.time.LocalDate org.joda.time.ReadablePeriod int )org.joda.time.LocalDate"[label="1"]
"int"->"(static)org.joda.time.LocalDate.withWeekOfWeekyear(org.joda.time.LocalDate int )org.joda.time.LocalDate"[label="1"]
"int"->"(static)org.joda.time.LocalDate.withWeekyear(org.joda.time.LocalDate int )org.joda.time.LocalDate"[label="1"]
"int"->"(static)org.joda.time.LocalDate.withYear(org.joda.time.LocalDate int )org.joda.time.LocalDate"[label="1"]
"int"->"(static)org.joda.time.LocalDate.withYearOfCentury(org.joda.time.LocalDate int )org.joda.time.LocalDate"[label="1"]
"int"->"(static)org.joda.time.LocalDate.withYearOfEra(org.joda.time.LocalDate int )org.joda.time.LocalDate"[label="1"]
"int"->"(static)org.joda.time.LocalDateTime$Property.addToCopy(org.joda.time.LocalDateTime$Property int )org.joda.time.LocalDateTime"[label="1"]
"int"->"(static)org.joda.time.LocalDateTime$Property.addWrapFieldToCopy(org.joda.time.LocalDateTime$Property int )org.joda.time.LocalDateTime"[label="1"]
"int"->"(static)org.joda.time.LocalDateTime$Property.setCopy(org.joda.time.LocalDateTime$Property int )org.joda.time.LocalDateTime"[label="1"]
"int"->"(static)org.joda.time.LocalDateTime.getValue(org.joda.time.LocalDateTime int )int"[label="1"]
"int"->"(static)org.joda.time.LocalDateTime.minusDays(org.joda.time.LocalDateTime int )org.joda.time.LocalDateTime"[label="1"]
"int"->"(static)org.joda.time.LocalDateTime.minusHours(org.joda.time.LocalDateTime int )org.joda.time.LocalDateTime"[label="1"]
"int"->"(static)org.joda.time.LocalDateTime.minusMillis(org.joda.time.LocalDateTime int )org.joda.time.LocalDateTime"[label="1"]
"int"->"(static)org.joda.time.LocalDateTime.minusMinutes(org.joda.time.LocalDateTime int )org.joda.time.LocalDateTime"[label="1"]
"int"->"(static)org.joda.time.LocalDateTime.minusMonths(org.joda.time.LocalDateTime int )org.joda.time.LocalDateTime"[label="1"]
"int"->"(static)org.joda.time.LocalDateTime.minusSeconds(org.joda.time.LocalDateTime int )org.joda.time.LocalDateTime"[label="1"]
"int"->"(static)org.joda.time.LocalDateTime.minusWeeks(org.joda.time.LocalDateTime int )org.joda.time.LocalDateTime"[label="1"]
"int"->"(static)org.joda.time.LocalDateTime.minusYears(org.joda.time.LocalDateTime int )org.joda.time.LocalDateTime"[label="1"]
"int"->"(static)org.joda.time.LocalDateTime.plusDays(org.joda.time.LocalDateTime int )org.joda.time.LocalDateTime"[label="1"]
"int"->"(static)org.joda.time.LocalDateTime.plusHours(org.joda.time.LocalDateTime int )org.joda.time.LocalDateTime"[label="1"]
"int"->"(static)org.joda.time.LocalDateTime.plusMillis(org.joda.time.LocalDateTime int )org.joda.time.LocalDateTime"[label="1"]
"int"->"(static)org.joda.time.LocalDateTime.plusMinutes(org.joda.time.LocalDateTime int )org.joda.time.LocalDateTime"[label="1"]
"int"->"(static)org.joda.time.LocalDateTime.plusMonths(org.joda.time.LocalDateTime int )org.joda.time.LocalDateTime"[label="1"]
"int"->"(static)org.joda.time.LocalDateTime.plusSeconds(org.joda.time.LocalDateTime int )org.joda.time.LocalDateTime"[label="1"]
"int"->"(static)org.joda.time.LocalDateTime.plusWeeks(org.joda.time.LocalDateTime int )org.joda.time.LocalDateTime"[label="1"]
"int"->"(static)org.joda.time.LocalDateTime.plusYears(org.joda.time.LocalDateTime int )org.joda.time.LocalDateTime"[label="1"]
"int"->"(static)org.joda.time.LocalDateTime.withCenturyOfEra(org.joda.time.LocalDateTime int )org.joda.time.LocalDateTime"[label="1"]
"int"->"(static)org.joda.time.LocalDateTime.withDayOfMonth(org.joda.time.LocalDateTime int )org.joda.time.LocalDateTime"[label="1"]
"int"->"(static)org.joda.time.LocalDateTime.withDayOfWeek(org.joda.time.LocalDateTime int )org.joda.time.LocalDateTime"[label="1"]
"int"->"(static)org.joda.time.LocalDateTime.withDayOfYear(org.joda.time.LocalDateTime int )org.joda.time.LocalDateTime"[label="1"]
"int"->"(static)org.joda.time.LocalDateTime.withDurationAdded(org.joda.time.LocalDateTime org.joda.time.ReadableDuration int )org.joda.time.LocalDateTime"[label="1"]
"int"->"(static)org.joda.time.LocalDateTime.withEra(org.joda.time.LocalDateTime int )org.joda.time.LocalDateTime"[label="1"]
"int"->"(static)org.joda.time.LocalDateTime.withField(org.joda.time.LocalDateTime org.joda.time.DateTimeFieldType int )org.joda.time.LocalDateTime"[label="1"]
"int"->"(static)org.joda.time.LocalDateTime.withFieldAdded(org.joda.time.LocalDateTime org.joda.time.DurationFieldType int )org.joda.time.LocalDateTime"[label="1"]
"int"->"(static)org.joda.time.LocalDateTime.withHourOfDay(org.joda.time.LocalDateTime int )org.joda.time.LocalDateTime"[label="1"]
"int"->"(static)org.joda.time.LocalDateTime.withMillisOfDay(org.joda.time.LocalDateTime int )org.joda.time.LocalDateTime"[label="1"]
"int"->"(static)org.joda.time.LocalDateTime.withMillisOfSecond(org.joda.time.LocalDateTime int )org.joda.time.LocalDateTime"[label="1"]
"int"->"(static)org.joda.time.LocalDateTime.withMinuteOfHour(org.joda.time.LocalDateTime int )org.joda.time.LocalDateTime"[label="1"]
"int"->"(static)org.joda.time.LocalDateTime.withMonthOfYear(org.joda.time.LocalDateTime int )org.joda.time.LocalDateTime"[label="1"]
"int"->"(static)org.joda.time.LocalDateTime.withPeriodAdded(org.joda.time.LocalDateTime org.joda.time.ReadablePeriod int )org.joda.time.LocalDateTime"[label="1"]
"int"->"(static)org.joda.time.LocalDateTime.withSecondOfMinute(org.joda.time.LocalDateTime int )org.joda.time.LocalDateTime"[label="1"]
"int"->"(static)org.joda.time.LocalDateTime.withWeekOfWeekyear(org.joda.time.LocalDateTime int )org.joda.time.LocalDateTime"[label="1"]
"int"->"(static)org.joda.time.LocalDateTime.withWeekyear(org.joda.time.LocalDateTime int )org.joda.time.LocalDateTime"[label="1"]
"int"->"(static)org.joda.time.LocalDateTime.withYear(org.joda.time.LocalDateTime int )org.joda.time.LocalDateTime"[label="1"]
"int"->"(static)org.joda.time.LocalDateTime.withYearOfCentury(org.joda.time.LocalDateTime int )org.joda.time.LocalDateTime"[label="1"]
"int"->"(static)org.joda.time.LocalDateTime.withYearOfEra(org.joda.time.LocalDateTime int )org.joda.time.LocalDateTime"[label="1"]
"int"->"(static)org.joda.time.LocalTime$Property.addCopy(org.joda.time.LocalTime$Property int )org.joda.time.LocalTime"[label="1"]
"int"->"(static)org.joda.time.LocalTime$Property.addNoWrapToCopy(org.joda.time.LocalTime$Property int )org.joda.time.LocalTime"[label="1"]
"int"->"(static)org.joda.time.LocalTime$Property.addWrapFieldToCopy(org.joda.time.LocalTime$Property int )org.joda.time.LocalTime"[label="1"]
"int"->"(static)org.joda.time.LocalTime$Property.setCopy(org.joda.time.LocalTime$Property int )org.joda.time.LocalTime"[label="1"]
"int"->"(static)org.joda.time.LocalTime.getValue(org.joda.time.LocalTime int )int"[label="1"]
"int"->"(static)org.joda.time.LocalTime.minusHours(org.joda.time.LocalTime int )org.joda.time.LocalTime"[label="1"]
"int"->"(static)org.joda.time.LocalTime.minusMillis(org.joda.time.LocalTime int )org.joda.time.LocalTime"[label="1"]
"int"->"(static)org.joda.time.LocalTime.minusMinutes(org.joda.time.LocalTime int )org.joda.time.LocalTime"[label="1"]
"int"->"(static)org.joda.time.LocalTime.minusSeconds(org.joda.time.LocalTime int )org.joda.time.LocalTime"[label="1"]
"int"->"(static)org.joda.time.LocalTime.plusHours(org.joda.time.LocalTime int )org.joda.time.LocalTime"[label="1"]
"int"->"(static)org.joda.time.LocalTime.plusMillis(org.joda.time.LocalTime int )org.joda.time.LocalTime"[label="1"]
"int"->"(static)org.joda.time.LocalTime.plusMinutes(org.joda.time.LocalTime int )org.joda.time.LocalTime"[label="1"]
"int"->"(static)org.joda.time.LocalTime.plusSeconds(org.joda.time.LocalTime int )org.joda.time.LocalTime"[label="1"]
"int"->"(static)org.joda.time.LocalTime.withField(org.joda.time.LocalTime org.joda.time.DateTimeFieldType int )org.joda.time.LocalTime"[label="1"]
"int"->"(static)org.joda.time.LocalTime.withFieldAdded(org.joda.time.LocalTime org.joda.time.DurationFieldType int )org.joda.time.LocalTime"[label="1"]
"int"->"(static)org.joda.time.LocalTime.withHourOfDay(org.joda.time.LocalTime int )org.joda.time.LocalTime"[label="1"]
"int"->"(static)org.joda.time.LocalTime.withMillisOfDay(org.joda.time.LocalTime int )org.joda.time.LocalTime"[label="1"]
"int"->"(static)org.joda.time.LocalTime.withMillisOfSecond(org.joda.time.LocalTime int )org.joda.time.LocalTime"[label="1"]
"int"->"(static)org.joda.time.LocalTime.withMinuteOfHour(org.joda.time.LocalTime int )org.joda.time.LocalTime"[label="1"]
"int"->"(static)org.joda.time.LocalTime.withPeriodAdded(org.joda.time.LocalTime org.joda.time.ReadablePeriod int )org.joda.time.LocalTime"[label="1"]
"int"->"(static)org.joda.time.LocalTime.withSecondOfMinute(org.joda.time.LocalTime int )org.joda.time.LocalTime"[label="1"]
"int"->"(static)org.joda.time.Minutes.dividedBy(org.joda.time.Minutes int )org.joda.time.Minutes"[label="1"]
"int"->"(static)org.joda.time.Minutes.minus(org.joda.time.Minutes int )org.joda.time.Minutes"[label="1"]
"int"->"(static)org.joda.time.Minutes.multipliedBy(org.joda.time.Minutes int )org.joda.time.Minutes"[label="1"]
"int"->"(static)org.joda.time.Minutes.plus(org.joda.time.Minutes int )org.joda.time.Minutes"[label="1"]
"int"->"(static)org.joda.time.MonthDay$Property.addToCopy(org.joda.time.MonthDay$Property int )org.joda.time.MonthDay"[label="1"]
"int"->"(static)org.joda.time.MonthDay$Property.addWrapFieldToCopy(org.joda.time.MonthDay$Property int )org.joda.time.MonthDay"[label="1"]
"int"->"(static)org.joda.time.MonthDay$Property.setCopy(org.joda.time.MonthDay$Property int )org.joda.time.MonthDay"[label="1"]
"int"->"(static)org.joda.time.MonthDay.getFieldType(org.joda.time.MonthDay int )org.joda.time.DateTimeFieldType"[label="1"]
"int"->"(static)org.joda.time.MonthDay.minusDays(org.joda.time.MonthDay int )org.joda.time.MonthDay"[label="1"]
"int"->"(static)org.joda.time.MonthDay.minusMonths(org.joda.time.MonthDay int )org.joda.time.MonthDay"[label="1"]
"int"->"(static)org.joda.time.MonthDay.plusDays(org.joda.time.MonthDay int )org.joda.time.MonthDay"[label="1"]
"int"->"(static)org.joda.time.MonthDay.plusMonths(org.joda.time.MonthDay int )org.joda.time.MonthDay"[label="1"]
"int"->"(static)org.joda.time.MonthDay.toLocalDate(org.joda.time.MonthDay int )org.joda.time.LocalDate"[label="1"]
"int"->"(static)org.joda.time.MonthDay.withDayOfMonth(org.joda.time.MonthDay int )org.joda.time.MonthDay"[label="1"]
"int"->"(static)org.joda.time.MonthDay.withField(org.joda.time.MonthDay org.joda.time.DateTimeFieldType int )org.joda.time.MonthDay"[label="1"]
"int"->"(static)org.joda.time.MonthDay.withFieldAdded(org.joda.time.MonthDay org.joda.time.DurationFieldType int )org.joda.time.MonthDay"[label="1"]
"int"->"(static)org.joda.time.MonthDay.withMonthOfYear(org.joda.time.MonthDay int )org.joda.time.MonthDay"[label="1"]
"int"->"(static)org.joda.time.MonthDay.withPeriodAdded(org.joda.time.MonthDay org.joda.time.ReadablePeriod int )org.joda.time.MonthDay"[label="1"]
"int"->"(static)org.joda.time.Months.dividedBy(org.joda.time.Months int )org.joda.time.Months"[label="1"]
"int"->"(static)org.joda.time.Months.minus(org.joda.time.Months int )org.joda.time.Months"[label="1"]
"int"->"(static)org.joda.time.Months.multipliedBy(org.joda.time.Months int )org.joda.time.Months"[label="1"]
"int"->"(static)org.joda.time.Months.plus(org.joda.time.Months int )org.joda.time.Months"[label="1"]
"int"->"(static)org.joda.time.MutableDateTime$Property.addWrapField(org.joda.time.MutableDateTime$Property int )org.joda.time.MutableDateTime"[label="1"]
"int"->"(static)org.joda.time.MutableDateTime$Property.set(org.joda.time.MutableDateTime$Property int )org.joda.time.MutableDateTime"[label="1"]
"int"->"(static)org.joda.time.Partial$Property.addToCopy(org.joda.time.Partial$Property int )org.joda.time.Partial"[label="1"]
"int"->"(static)org.joda.time.Partial$Property.addWrapFieldToCopy(org.joda.time.Partial$Property int )org.joda.time.Partial"[label="1"]
"int"->"(static)org.joda.time.Partial$Property.setCopy(org.joda.time.Partial$Property int )org.joda.time.Partial"[label="1"]
"int"->"(static)org.joda.time.Partial.getFieldType(org.joda.time.Partial int )org.joda.time.DateTimeFieldType"[label="1"]
"int"->"(static)org.joda.time.Partial.getValue(org.joda.time.Partial int )int"[label="1"]
"int"->"(static)org.joda.time.Partial.with(org.joda.time.Partial org.joda.time.DateTimeFieldType int )org.joda.time.Partial"[label="1"]
"int"->"(static)org.joda.time.Partial.withField(org.joda.time.Partial org.joda.time.DateTimeFieldType int )org.joda.time.Partial"[label="1"]
"int"->"(static)org.joda.time.Partial.withFieldAddWrapped(org.joda.time.Partial org.joda.time.DurationFieldType int )org.joda.time.Partial"[label="1"]
"int"->"(static)org.joda.time.Partial.withFieldAdded(org.joda.time.Partial org.joda.time.DurationFieldType int )org.joda.time.Partial"[label="1"]
"int"->"(static)org.joda.time.Partial.withPeriodAdded(org.joda.time.Partial org.joda.time.ReadablePeriod int )org.joda.time.Partial"[label="1"]
"int"->"(static)org.joda.time.Period.minusDays(org.joda.time.Period int )org.joda.time.Period"[label="1"]
"int"->"(static)org.joda.time.Period.minusHours(org.joda.time.Period int )org.joda.time.Period"[label="1"]
"int"->"(static)org.joda.time.Period.minusMillis(org.joda.time.Period int )org.joda.time.Period"[label="1"]
"int"->"(static)org.joda.time.Period.minusMinutes(org.joda.time.Period int )org.joda.time.Period"[label="1"]
"int"->"(static)org.joda.time.Period.minusMonths(org.joda.time.Period int )org.joda.time.Period"[label="1"]
"int"->"(static)org.joda.time.Period.minusSeconds(org.joda.time.Period int )org.joda.time.Period"[label="1"]
"int"->"(static)org.joda.time.Period.minusWeeks(org.joda.time.Period int )org.joda.time.Period"[label="1"]
"int"->"(static)org.joda.time.Period.minusYears(org.joda.time.Period int )org.joda.time.Period"[label="1"]
"int"->"(static)org.joda.time.Period.multipliedBy(org.joda.time.Period int )org.joda.time.Period"[label="1"]
"int"->"(static)org.joda.time.Period.plusDays(org.joda.time.Period int )org.joda.time.Period"[label="1"]
"int"->"(static)org.joda.time.Period.plusHours(org.joda.time.Period int )org.joda.time.Period"[label="1"]
"int"->"(static)org.joda.time.Period.plusMillis(org.joda.time.Period int )org.joda.time.Period"[label="1"]
"int"->"(static)org.joda.time.Period.plusMinutes(org.joda.time.Period int )org.joda.time.Period"[label="1"]
"int"->"(static)org.joda.time.Period.plusMonths(org.joda.time.Period int )org.joda.time.Period"[label="1"]
"int"->"(static)org.joda.time.Period.plusSeconds(org.joda.time.Period int )org.joda.time.Period"[label="1"]
"int"->"(static)org.joda.time.Period.plusWeeks(org.joda.time.Period int )org.joda.time.Period"[label="1"]
"int"->"(static)org.joda.time.Period.plusYears(org.joda.time.Period int )org.joda.time.Period"[label="1"]
"int"->"(static)org.joda.time.Period.withDays(org.joda.time.Period int )org.joda.time.Period"[label="1"]
"int"->"(static)org.joda.time.Period.withField(org.joda.time.Period org.joda.time.DurationFieldType int )org.joda.time.Period"[label="1"]
"int"->"(static)org.joda.time.Period.withFieldAdded(org.joda.time.Period org.joda.time.DurationFieldType int )org.joda.time.Period"[label="1"]
"int"->"(static)org.joda.time.Period.withHours(org.joda.time.Period int )org.joda.time.Period"[label="1"]
"int"->"(static)org.joda.time.Period.withMillis(org.joda.time.Period int )org.joda.time.Period"[label="1"]
"int"->"(static)org.joda.time.Period.withMinutes(org.joda.time.Period int )org.joda.time.Period"[label="1"]
"int"->"(static)org.joda.time.Period.withMonths(org.joda.time.Period int )org.joda.time.Period"[label="1"]
"int"->"(static)org.joda.time.Period.withSeconds(org.joda.time.Period int )org.joda.time.Period"[label="1"]
"int"->"(static)org.joda.time.Period.withWeeks(org.joda.time.Period int )org.joda.time.Period"[label="1"]
"int"->"(static)org.joda.time.Period.withYears(org.joda.time.Period int )org.joda.time.Period"[label="1"]
"int"->"(static)org.joda.time.PeriodType.getFieldType(org.joda.time.PeriodType int )org.joda.time.DurationFieldType"[label="1"]
"int"->"(static)org.joda.time.ReadablePartial.getField(org.joda.time.ReadablePartial int )org.joda.time.DateTimeField"[label="1"]
"int"->"(static)org.joda.time.ReadablePartial.getFieldType(org.joda.time.ReadablePartial int )org.joda.time.DateTimeFieldType"[label="1"]
"int"->"(static)org.joda.time.ReadablePartial.getValue(org.joda.time.ReadablePartial int )int"[label="1"]
"int"->"(static)org.joda.time.ReadablePeriod.getFieldType(org.joda.time.ReadablePeriod int )org.joda.time.DurationFieldType"[label="1"]
"int"->"(static)org.joda.time.ReadablePeriod.getValue(org.joda.time.ReadablePeriod int )int"[label="1"]
"int"->"(static)org.joda.time.Seconds.dividedBy(org.joda.time.Seconds int )org.joda.time.Seconds"[label="1"]
"int"->"(static)org.joda.time.Seconds.minus(org.joda.time.Seconds int )org.joda.time.Seconds"[label="1"]
"int"->"(static)org.joda.time.Seconds.multipliedBy(org.joda.time.Seconds int )org.joda.time.Seconds"[label="1"]
"int"->"(static)org.joda.time.Seconds.plus(org.joda.time.Seconds int )org.joda.time.Seconds"[label="1"]
"int"->"(static)org.joda.time.TimeOfDay$Property.addNoWrapToCopy(org.joda.time.TimeOfDay$Property int )org.joda.time.TimeOfDay"[label="1"]
"int"->"(static)org.joda.time.TimeOfDay$Property.addToCopy(org.joda.time.TimeOfDay$Property int )org.joda.time.TimeOfDay"[label="1"]
"int"->"(static)org.joda.time.TimeOfDay$Property.addWrapFieldToCopy(org.joda.time.TimeOfDay$Property int )org.joda.time.TimeOfDay"[label="1"]
"int"->"(static)org.joda.time.TimeOfDay$Property.setCopy(org.joda.time.TimeOfDay$Property int )org.joda.time.TimeOfDay"[label="1"]
"int"->"(static)org.joda.time.TimeOfDay.getFieldType(org.joda.time.TimeOfDay int )org.joda.time.DateTimeFieldType"[label="1"]
"int"->"(static)org.joda.time.TimeOfDay.minusHours(org.joda.time.TimeOfDay int )org.joda.time.TimeOfDay"[label="1"]
"int"->"(static)org.joda.time.TimeOfDay.minusMillis(org.joda.time.TimeOfDay int )org.joda.time.TimeOfDay"[label="1"]
"int"->"(static)org.joda.time.TimeOfDay.minusMinutes(org.joda.time.TimeOfDay int )org.joda.time.TimeOfDay"[label="1"]
"int"->"(static)org.joda.time.TimeOfDay.minusSeconds(org.joda.time.TimeOfDay int )org.joda.time.TimeOfDay"[label="1"]
"int"->"(static)org.joda.time.TimeOfDay.plusHours(org.joda.time.TimeOfDay int )org.joda.time.TimeOfDay"[label="1"]
"int"->"(static)org.joda.time.TimeOfDay.plusMillis(org.joda.time.TimeOfDay int )org.joda.time.TimeOfDay"[label="1"]
"int"->"(static)org.joda.time.TimeOfDay.plusMinutes(org.joda.time.TimeOfDay int )org.joda.time.TimeOfDay"[label="1"]
"int"->"(static)org.joda.time.TimeOfDay.plusSeconds(org.joda.time.TimeOfDay int )org.joda.time.TimeOfDay"[label="1"]
"int"->"(static)org.joda.time.TimeOfDay.withField(org.joda.time.TimeOfDay org.joda.time.DateTimeFieldType int )org.joda.time.TimeOfDay"[label="1"]
"int"->"(static)org.joda.time.TimeOfDay.withFieldAdded(org.joda.time.TimeOfDay org.joda.time.DurationFieldType int )org.joda.time.TimeOfDay"[label="1"]
"int"->"(static)org.joda.time.TimeOfDay.withHourOfDay(org.joda.time.TimeOfDay int )org.joda.time.TimeOfDay"[label="1"]
"int"->"(static)org.joda.time.TimeOfDay.withMillisOfSecond(org.joda.time.TimeOfDay int )org.joda.time.TimeOfDay"[label="1"]
"int"->"(static)org.joda.time.TimeOfDay.withMinuteOfHour(org.joda.time.TimeOfDay int )org.joda.time.TimeOfDay"[label="1"]
"int"->"(static)org.joda.time.TimeOfDay.withPeriodAdded(org.joda.time.TimeOfDay org.joda.time.ReadablePeriod int )org.joda.time.TimeOfDay"[label="1"]
"int"->"(static)org.joda.time.TimeOfDay.withSecondOfMinute(org.joda.time.TimeOfDay int )org.joda.time.TimeOfDay"[label="1"]
"int"->"(static)org.joda.time.Weeks.dividedBy(org.joda.time.Weeks int )org.joda.time.Weeks"[label="1"]
"int"->"(static)org.joda.time.Weeks.minus(org.joda.time.Weeks int )org.joda.time.Weeks"[label="1"]
"int"->"(static)org.joda.time.Weeks.multipliedBy(org.joda.time.Weeks int )org.joda.time.Weeks"[label="1"]
"int"->"(static)org.joda.time.Weeks.plus(org.joda.time.Weeks int )org.joda.time.Weeks"[label="1"]
"int"->"(static)org.joda.time.YearMonth$Property.addToCopy(org.joda.time.YearMonth$Property int )org.joda.time.YearMonth"[label="1"]
"int"->"(static)org.joda.time.YearMonth$Property.addWrapFieldToCopy(org.joda.time.YearMonth$Property int )org.joda.time.YearMonth"[label="1"]
"int"->"(static)org.joda.time.YearMonth$Property.setCopy(org.joda.time.YearMonth$Property int )org.joda.time.YearMonth"[label="1"]
"int"->"(static)org.joda.time.YearMonth.getFieldType(org.joda.time.YearMonth int )org.joda.time.DateTimeFieldType"[label="1"]
"int"->"(static)org.joda.time.YearMonth.minusMonths(org.joda.time.YearMonth int )org.joda.time.YearMonth"[label="1"]
"int"->"(static)org.joda.time.YearMonth.minusYears(org.joda.time.YearMonth int )org.joda.time.YearMonth"[label="1"]
"int"->"(static)org.joda.time.YearMonth.plusMonths(org.joda.time.YearMonth int )org.joda.time.YearMonth"[label="1"]
"int"->"(static)org.joda.time.YearMonth.plusYears(org.joda.time.YearMonth int )org.joda.time.YearMonth"[label="1"]
"int"->"(static)org.joda.time.YearMonth.toLocalDate(org.joda.time.YearMonth int )org.joda.time.LocalDate"[label="1"]
"int"->"(static)org.joda.time.YearMonth.withField(org.joda.time.YearMonth org.joda.time.DateTimeFieldType int )org.joda.time.YearMonth"[label="1"]
"int"->"(static)org.joda.time.YearMonth.withFieldAdded(org.joda.time.YearMonth org.joda.time.DurationFieldType int )org.joda.time.YearMonth"[label="1"]
"int"->"(static)org.joda.time.YearMonth.withMonthOfYear(org.joda.time.YearMonth int )org.joda.time.YearMonth"[label="1"]
"int"->"(static)org.joda.time.YearMonth.withPeriodAdded(org.joda.time.YearMonth org.joda.time.ReadablePeriod int )org.joda.time.YearMonth"[label="1"]
"int"->"(static)org.joda.time.YearMonth.withYear(org.joda.time.YearMonth int )org.joda.time.YearMonth"[label="1"]
"int"->"(static)org.joda.time.YearMonthDay$Property.addToCopy(org.joda.time.YearMonthDay$Property int )org.joda.time.YearMonthDay"[label="1"]
"int"->"(static)org.joda.time.YearMonthDay$Property.addWrapFieldToCopy(org.joda.time.YearMonthDay$Property int )org.joda.time.YearMonthDay"[label="1"]
"int"->"(static)org.joda.time.YearMonthDay$Property.setCopy(org.joda.time.YearMonthDay$Property int )org.joda.time.YearMonthDay"[label="1"]
"int"->"(static)org.joda.time.YearMonthDay.getFieldType(org.joda.time.YearMonthDay int )org.joda.time.DateTimeFieldType"[label="1"]
"int"->"(static)org.joda.time.YearMonthDay.minusDays(org.joda.time.YearMonthDay int )org.joda.time.YearMonthDay"[label="1"]
"int"->"(static)org.joda.time.YearMonthDay.minusMonths(org.joda.time.YearMonthDay int )org.joda.time.YearMonthDay"[label="1"]
"int"->"(static)org.joda.time.YearMonthDay.minusYears(org.joda.time.YearMonthDay int )org.joda.time.YearMonthDay"[label="1"]
"int"->"(static)org.joda.time.YearMonthDay.plusDays(org.joda.time.YearMonthDay int )org.joda.time.YearMonthDay"[label="1"]
"int"->"(static)org.joda.time.YearMonthDay.plusMonths(org.joda.time.YearMonthDay int )org.joda.time.YearMonthDay"[label="1"]
"int"->"(static)org.joda.time.YearMonthDay.plusYears(org.joda.time.YearMonthDay int )org.joda.time.YearMonthDay"[label="1"]
"int"->"(static)org.joda.time.YearMonthDay.withDayOfMonth(org.joda.time.YearMonthDay int )org.joda.time.YearMonthDay"[label="1"]
"int"->"(static)org.joda.time.YearMonthDay.withField(org.joda.time.YearMonthDay org.joda.time.DateTimeFieldType int )org.joda.time.YearMonthDay"[label="1"]
"int"->"(static)org.joda.time.YearMonthDay.withFieldAdded(org.joda.time.YearMonthDay org.joda.time.DurationFieldType int )org.joda.time.YearMonthDay"[label="1"]
"int"->"(static)org.joda.time.YearMonthDay.withMonthOfYear(org.joda.time.YearMonthDay int )org.joda.time.YearMonthDay"[label="1"]
"int"->"(static)org.joda.time.YearMonthDay.withPeriodAdded(org.joda.time.YearMonthDay org.joda.time.ReadablePeriod int )org.joda.time.YearMonthDay"[label="1"]
"int"->"(static)org.joda.time.YearMonthDay.withYear(org.joda.time.YearMonthDay int )org.joda.time.YearMonthDay"[label="1"]
"int"->"(static)org.joda.time.Years.dividedBy(org.joda.time.Years int )org.joda.time.Years"[label="1"]
"int"->"(static)org.joda.time.Years.minus(org.joda.time.Years int )org.joda.time.Years"[label="1"]
"int"->"(static)org.joda.time.Years.multipliedBy(org.joda.time.Years int )org.joda.time.Years"[label="1"]
"int"->"(static)org.joda.time.Years.plus(org.joda.time.Years int )org.joda.time.Years"[label="1"]
"int"->"(static)org.joda.time.base.AbstractPartial.getField(org.joda.time.base.AbstractPartial int )org.joda.time.DateTimeField"[label="1"]
"int"->"(static)org.joda.time.base.AbstractPartial.getFieldType(org.joda.time.base.AbstractPartial int )org.joda.time.DateTimeFieldType"[label="1"]
"int"->"(static)org.joda.time.base.AbstractPeriod.getFieldType(org.joda.time.base.AbstractPeriod int )org.joda.time.DurationFieldType"[label="1"]
"int"->"(static)org.joda.time.base.BasePartial.getValue(org.joda.time.base.BasePartial int )int"[label="1"]
"int"->"(static)org.joda.time.base.BasePeriod$1.getValue(org.joda.time.base.BasePeriod$1 int )int"[label="1"]
"int"->"(static)org.joda.time.base.BasePeriod.getValue(org.joda.time.base.BasePeriod int )int"[label="1"]
"int"->"(static)org.joda.time.base.BaseSingleFieldPeriod.getFieldType(org.joda.time.base.BaseSingleFieldPeriod int )org.joda.time.DurationFieldType"[label="1"]
"int"->"(static)org.joda.time.base.BaseSingleFieldPeriod.getValue(org.joda.time.base.BaseSingleFieldPeriod int )int"[label="1"]
"int"->"(static)org.joda.time.chrono.BasicChronology$HalfdayField.getAsText(org.joda.time.chrono.BasicChronology$HalfdayField int java.util.Locale )java.lang.String"[label="1"]
"int"->"(static)org.joda.time.chrono.BasicMonthOfYearDateTimeField.addWrapField(org.joda.time.chrono.BasicMonthOfYearDateTimeField long int )long"[label="1"]
"int"->"(static)org.joda.time.chrono.BasicMonthOfYearDateTimeField.set(org.joda.time.chrono.BasicMonthOfYearDateTimeField long int )long"[label="1"]
"int"->"(static)org.joda.time.chrono.BasicSingleEraDateTimeField.getAsText(org.joda.time.chrono.BasicSingleEraDateTimeField int java.util.Locale )java.lang.String"[label="1"]
"int"->"(static)org.joda.time.chrono.BasicSingleEraDateTimeField.set(org.joda.time.chrono.BasicSingleEraDateTimeField long int )long"[label="1"]
"int"->"(static)org.joda.time.chrono.BasicWeekyearDateTimeField.addWrapField(org.joda.time.chrono.BasicWeekyearDateTimeField long int )long"[label="1"]
"int"->"(static)org.joda.time.chrono.BasicWeekyearDateTimeField.set(org.joda.time.chrono.BasicWeekyearDateTimeField long int )long"[label="1"]
"int"->"(static)org.joda.time.chrono.BasicYearDateTimeField.addWrapField(org.joda.time.chrono.BasicYearDateTimeField long int )long"[label="1"]
"int"->"(static)org.joda.time.chrono.BasicYearDateTimeField.set(org.joda.time.chrono.BasicYearDateTimeField long int )long"[label="1"]
"int"->"(static)org.joda.time.chrono.GJChronology$CutoverField.getAsShortText(org.joda.time.chrono.GJChronology$CutoverField int java.util.Locale )java.lang.String"[label="1"]
"int"->"(static)org.joda.time.chrono.GJChronology$CutoverField.getAsText(org.joda.time.chrono.GJChronology$CutoverField int java.util.Locale )java.lang.String"[label="1"]
"int"->"(static)org.joda.time.chrono.GJChronology$CutoverField.set(org.joda.time.chrono.GJChronology$CutoverField long int )long"[label="1"]
"int"->"(static)org.joda.time.chrono.GJDayOfWeekDateTimeField.getAsShortText(org.joda.time.chrono.GJDayOfWeekDateTimeField int java.util.Locale )java.lang.String"[label="1"]
"int"->"(static)org.joda.time.chrono.GJDayOfWeekDateTimeField.getAsText(org.joda.time.chrono.GJDayOfWeekDateTimeField int java.util.Locale )java.lang.String"[label="1"]
"int"->"(static)org.joda.time.chrono.GJEraDateTimeField.getAsText(org.joda.time.chrono.GJEraDateTimeField int java.util.Locale )java.lang.String"[label="1"]
"int"->"(static)org.joda.time.chrono.GJEraDateTimeField.set(org.joda.time.chrono.GJEraDateTimeField long int )long"[label="1"]
"int"->"(static)org.joda.time.chrono.GJLocaleSymbols.dayOfWeekValueToShortText(org.joda.time.chrono.GJLocaleSymbols int )java.lang.String"[label="1"]
"int"->"(static)org.joda.time.chrono.GJLocaleSymbols.dayOfWeekValueToText(org.joda.time.chrono.GJLocaleSymbols int )java.lang.String"[label="1"]
"int"->"(static)org.joda.time.chrono.GJLocaleSymbols.eraValueToText(org.joda.time.chrono.GJLocaleSymbols int )java.lang.String"[label="1"]
"int"->"(static)org.joda.time.chrono.GJLocaleSymbols.halfdayValueToText(org.joda.time.chrono.GJLocaleSymbols int )java.lang.String"[label="1"]
"int"->"(static)org.joda.time.chrono.GJLocaleSymbols.monthOfYearValueToShortText(org.joda.time.chrono.GJLocaleSymbols int )java.lang.String"[label="1"]
"int"->"(static)org.joda.time.chrono.GJLocaleSymbols.monthOfYearValueToText(org.joda.time.chrono.GJLocaleSymbols int )java.lang.String"[label="1"]
"int"->"(static)org.joda.time.chrono.GJMonthOfYearDateTimeField.getAsShortText(org.joda.time.chrono.GJMonthOfYearDateTimeField int java.util.Locale )java.lang.String"[label="1"]
"int"->"(static)org.joda.time.chrono.GJMonthOfYearDateTimeField.getAsText(org.joda.time.chrono.GJMonthOfYearDateTimeField int java.util.Locale )java.lang.String"[label="1"]
"int"->"(static)org.joda.time.chrono.GJYearOfEraDateTimeField.addWrapField(org.joda.time.chrono.GJYearOfEraDateTimeField long int )long"[label="1"]
"int"->"(static)org.joda.time.chrono.GJYearOfEraDateTimeField.set(org.joda.time.chrono.GJYearOfEraDateTimeField long int )long"[label="1"]
"int"->"(static)org.joda.time.chrono.ISOYearOfEraDateTimeField.addWrapField(org.joda.time.chrono.ISOYearOfEraDateTimeField long int )long"[label="1"]
"int"->"(static)org.joda.time.chrono.ISOYearOfEraDateTimeField.set(org.joda.time.chrono.ISOYearOfEraDateTimeField long int )long"[label="1"]
"int"->"(static)org.joda.time.chrono.LimitChronology$LimitDateTimeField.addWrapField(org.joda.time.chrono.LimitChronology$LimitDateTimeField long int )long"[label="1"]
"int"->"(static)org.joda.time.chrono.LimitChronology$LimitDateTimeField.set(org.joda.time.chrono.LimitChronology$LimitDateTimeField long int )long"[label="1"]
"int"->"(static)org.joda.time.chrono.LimitChronology$LimitDurationField.getMillis(org.joda.time.chrono.LimitChronology$LimitDurationField int long )long"[label="1"]
"int"->"(static)org.joda.time.chrono.ZonedChronology$ZonedDateTimeField.addWrapField(org.joda.time.chrono.ZonedChronology$ZonedDateTimeField long int )long"[label="1"]
"int"->"(static)org.joda.time.chrono.ZonedChronology$ZonedDateTimeField.getAsShortText(org.joda.time.chrono.ZonedChronology$ZonedDateTimeField int java.util.Locale )java.lang.String"[label="1"]
"int"->"(static)org.joda.time.chrono.ZonedChronology$ZonedDateTimeField.getAsText(org.joda.time.chrono.ZonedChronology$ZonedDateTimeField int java.util.Locale )java.lang.String"[label="1"]
"int"->"(static)org.joda.time.chrono.ZonedChronology$ZonedDateTimeField.set(org.joda.time.chrono.ZonedChronology$ZonedDateTimeField long int )long"[label="1"]
"int"->"(static)org.joda.time.chrono.ZonedChronology$ZonedDurationField.getMillis(org.joda.time.chrono.ZonedChronology$ZonedDurationField int long )long"[label="1"]
"int"->"(static)org.joda.time.field.BaseDateTimeField.addWrapField(org.joda.time.field.BaseDateTimeField long int )long"[label="1"]
"int"->"(static)org.joda.time.field.BaseDateTimeField.getAsShortText(org.joda.time.field.BaseDateTimeField int java.util.Locale )java.lang.String"[label="1"]
"int"->"(static)org.joda.time.field.BaseDateTimeField.getAsText(org.joda.time.field.BaseDateTimeField int java.util.Locale )java.lang.String"[label="1"]
"int"->"(static)org.joda.time.field.BaseDateTimeField.set(org.joda.time.field.BaseDateTimeField long int )long"[label="1"]
"int"->"(static)org.joda.time.field.BaseDurationField.getMillis(org.joda.time.field.BaseDurationField int )long"[label="1"]
"int"->"(static)org.joda.time.field.DecoratedDateTimeField.set(org.joda.time.field.DecoratedDateTimeField long int )long"[label="1"]
"int"->"(static)org.joda.time.field.DecoratedDurationField.getMillis(org.joda.time.field.DecoratedDurationField int long )long"[label="1"]
"int"->"(static)org.joda.time.field.DelegatedDateTimeField.addWrapField(org.joda.time.field.DelegatedDateTimeField long int )long"[label="1"]
"int"->"(static)org.joda.time.field.DelegatedDateTimeField.getAsShortText(org.joda.time.field.DelegatedDateTimeField int java.util.Locale )java.lang.String"[label="1"]
"int"->"(static)org.joda.time.field.DelegatedDateTimeField.getAsText(org.joda.time.field.DelegatedDateTimeField int java.util.Locale )java.lang.String"[label="1"]
"int"->"(static)org.joda.time.field.DelegatedDateTimeField.set(org.joda.time.field.DelegatedDateTimeField long int )long"[label="1"]
"int"->"(static)org.joda.time.field.DelegatedDurationField.getMillis(org.joda.time.field.DelegatedDurationField int )long"[label="1"]
"int"->"(static)org.joda.time.field.DelegatedDurationField.getMillis(org.joda.time.field.DelegatedDurationField int long )long"[label="1"]
"int"->"(static)org.joda.time.field.DividedDateTimeField.addWrapField(org.joda.time.field.DividedDateTimeField long int )long"[label="1"]
"int"->"(static)org.joda.time.field.DividedDateTimeField.set(org.joda.time.field.DividedDateTimeField long int )long"[label="1"]
"int"->"(static)org.joda.time.field.ImpreciseDateTimeField$LinkedDurationField.getMillis(org.joda.time.field.ImpreciseDateTimeField$LinkedDurationField int long )long"[label="1"]
"int"->"(static)org.joda.time.field.ImpreciseDateTimeField.set(org.joda.time.field.ImpreciseDateTimeField long int )long"[label="1"]
"int"->"(static)org.joda.time.field.LenientDateTimeField.set(org.joda.time.field.LenientDateTimeField long int )long"[label="1"]
"int"->"(static)org.joda.time.field.MillisDurationField.getMillis(org.joda.time.field.MillisDurationField int )long"[label="1"]
"int"->"(static)org.joda.time.field.MillisDurationField.getMillis(org.joda.time.field.MillisDurationField int long )long"[label="1"]
"int"->"(static)org.joda.time.field.OffsetDateTimeField.addWrapField(org.joda.time.field.OffsetDateTimeField long int )long"[label="1"]
"int"->"(static)org.joda.time.field.OffsetDateTimeField.set(org.joda.time.field.OffsetDateTimeField long int )long"[label="1"]
"int"->"(static)org.joda.time.field.PreciseDateTimeField.addWrapField(org.joda.time.field.PreciseDateTimeField long int )long"[label="1"]
"int"->"(static)org.joda.time.field.PreciseDateTimeField.set(org.joda.time.field.PreciseDateTimeField long int )long"[label="1"]
"int"->"(static)org.joda.time.field.PreciseDurationDateTimeField.set(org.joda.time.field.PreciseDurationDateTimeField long int )long"[label="1"]
"int"->"(static)org.joda.time.field.PreciseDurationField.getMillis(org.joda.time.field.PreciseDurationField int long )long"[label="1"]
"int"->"(static)org.joda.time.field.RemainderDateTimeField.addWrapField(org.joda.time.field.RemainderDateTimeField long int )long"[label="1"]
"int"->"(static)org.joda.time.field.RemainderDateTimeField.set(org.joda.time.field.RemainderDateTimeField long int )long"[label="1"]
"int"->"(static)org.joda.time.field.ScaledDurationField.getMillis(org.joda.time.field.ScaledDurationField int )long"[label="1"]
"int"->"(static)org.joda.time.field.ScaledDurationField.getMillis(org.joda.time.field.ScaledDurationField int long )long"[label="1"]
"int"->"(static)org.joda.time.field.SkipDateTimeField.set(org.joda.time.field.SkipDateTimeField long int )long"[label="1"]
"int"->"(static)org.joda.time.field.SkipUndoDateTimeField.set(org.joda.time.field.SkipUndoDateTimeField long int )long"[label="1"]
"int"->"(static)org.joda.time.field.StrictDateTimeField.set(org.joda.time.field.StrictDateTimeField long int )long"[label="1"]
"int"->"(static)org.joda.time.field.UnsupportedDateTimeField.addWrapField(org.joda.time.field.UnsupportedDateTimeField long int )long"[label="1"]
"int"->"(static)org.joda.time.field.UnsupportedDateTimeField.getAsShortText(org.joda.time.field.UnsupportedDateTimeField int java.util.Locale )java.lang.String"[label="1"]
"int"->"(static)org.joda.time.field.UnsupportedDateTimeField.getAsText(org.joda.time.field.UnsupportedDateTimeField int java.util.Locale )java.lang.String"[label="1"]
"int"->"(static)org.joda.time.field.UnsupportedDateTimeField.set(org.joda.time.field.UnsupportedDateTimeField long int )long"[label="1"]
"int"->"(static)org.joda.time.field.UnsupportedDurationField.getMillis(org.joda.time.field.UnsupportedDurationField int )long"[label="1"]
"int"->"(static)org.joda.time.field.UnsupportedDurationField.getMillis(org.joda.time.field.UnsupportedDurationField int long )long"[label="1"]
"int"->"(static)org.joda.time.field.ZeroIsMaxDateTimeField.addWrapField(org.joda.time.field.ZeroIsMaxDateTimeField long int )long"[label="1"]
"int"->"(static)org.joda.time.field.ZeroIsMaxDateTimeField.set(org.joda.time.field.ZeroIsMaxDateTimeField long int )long"[label="1"]
"int"->"(static)org.joda.time.format.DateTimeFormatter.withDefaultYear(org.joda.time.format.DateTimeFormatter int )org.joda.time.format.DateTimeFormatter"[label="1"]
"int"->"(static)org.joda.time.format.DateTimeFormatter.withPivotYear(org.joda.time.format.DateTimeFormatter int )org.joda.time.format.DateTimeFormatter"[label="1"]
"int"->"(static)org.joda.time.format.DateTimeFormatterBuilder.appendCenturyOfEra(org.joda.time.format.DateTimeFormatterBuilder int int )org.joda.time.format.DateTimeFormatterBuilder"[label="2"]
"int"->"(static)org.joda.time.format.DateTimeFormatterBuilder.appendClockhourOfDay(org.joda.time.format.DateTimeFormatterBuilder int )org.joda.time.format.DateTimeFormatterBuilder"[label="1"]
"int"->"(static)org.joda.time.format.DateTimeFormatterBuilder.appendClockhourOfHalfday(org.joda.time.format.DateTimeFormatterBuilder int )org.joda.time.format.DateTimeFormatterBuilder"[label="1"]
"int"->"(static)org.joda.time.format.DateTimeFormatterBuilder.appendDayOfMonth(org.joda.time.format.DateTimeFormatterBuilder int )org.joda.time.format.DateTimeFormatterBuilder"[label="1"]
"int"->"(static)org.joda.time.format.DateTimeFormatterBuilder.appendDayOfWeek(org.joda.time.format.DateTimeFormatterBuilder int )org.joda.time.format.DateTimeFormatterBuilder"[label="1"]
"int"->"(static)org.joda.time.format.DateTimeFormatterBuilder.appendDayOfYear(org.joda.time.format.DateTimeFormatterBuilder int )org.joda.time.format.DateTimeFormatterBuilder"[label="1"]
"int"->"(static)org.joda.time.format.DateTimeFormatterBuilder.appendFixedDecimal(org.joda.time.format.DateTimeFormatterBuilder org.joda.time.DateTimeFieldType int )org.joda.time.format.DateTimeFormatterBuilder"[label="1"]
"int"->"(static)org.joda.time.format.DateTimeFormatterBuilder.appendFixedSignedDecimal(org.joda.time.format.DateTimeFormatterBuilder org.joda.time.DateTimeFieldType int )org.joda.time.format.DateTimeFormatterBuilder"[label="1"]
"int"->"(static)org.joda.time.format.DateTimeFormatterBuilder.appendFractionOfDay(org.joda.time.format.DateTimeFormatterBuilder int int )org.joda.time.format.DateTimeFormatterBuilder"[label="2"]
"int"->"(static)org.joda.time.format.DateTimeFormatterBuilder.appendFractionOfHour(org.joda.time.format.DateTimeFormatterBuilder int int )org.joda.time.format.DateTimeFormatterBuilder"[label="2"]
"int"->"(static)org.joda.time.format.DateTimeFormatterBuilder.appendFractionOfMinute(org.joda.time.format.DateTimeFormatterBuilder int int )org.joda.time.format.DateTimeFormatterBuilder"[label="2"]
"int"->"(static)org.joda.time.format.DateTimeFormatterBuilder.appendFractionOfSecond(org.joda.time.format.DateTimeFormatterBuilder int int )org.joda.time.format.DateTimeFormatterBuilder"[label="2"]
"int"->"(static)org.joda.time.format.DateTimeFormatterBuilder.appendHourOfDay(org.joda.time.format.DateTimeFormatterBuilder int )org.joda.time.format.DateTimeFormatterBuilder"[label="1"]
"int"->"(static)org.joda.time.format.DateTimeFormatterBuilder.appendHourOfHalfday(org.joda.time.format.DateTimeFormatterBuilder int )org.joda.time.format.DateTimeFormatterBuilder"[label="1"]
"int"->"(static)org.joda.time.format.DateTimeFormatterBuilder.appendMillisOfDay(org.joda.time.format.DateTimeFormatterBuilder int )org.joda.time.format.DateTimeFormatterBuilder"[label="1"]
"int"->"(static)org.joda.time.format.DateTimeFormatterBuilder.appendMillisOfSecond(org.joda.time.format.DateTimeFormatterBuilder int )org.joda.time.format.DateTimeFormatterBuilder"[label="1"]
"int"->"(static)org.joda.time.format.DateTimeFormatterBuilder.appendMinuteOfDay(org.joda.time.format.DateTimeFormatterBuilder int )org.joda.time.format.DateTimeFormatterBuilder"[label="1"]
"int"->"(static)org.joda.time.format.DateTimeFormatterBuilder.appendMinuteOfHour(org.joda.time.format.DateTimeFormatterBuilder int )org.joda.time.format.DateTimeFormatterBuilder"[label="1"]
"int"->"(static)org.joda.time.format.DateTimeFormatterBuilder.appendMonthOfYear(org.joda.time.format.DateTimeFormatterBuilder int )org.joda.time.format.DateTimeFormatterBuilder"[label="1"]
"int"->"(static)org.joda.time.format.DateTimeFormatterBuilder.appendSecondOfDay(org.joda.time.format.DateTimeFormatterBuilder int )org.joda.time.format.DateTimeFormatterBuilder"[label="1"]
"int"->"(static)org.joda.time.format.DateTimeFormatterBuilder.appendSecondOfMinute(org.joda.time.format.DateTimeFormatterBuilder int )org.joda.time.format.DateTimeFormatterBuilder"[label="1"]
"int"->"(static)org.joda.time.format.DateTimeFormatterBuilder.appendTwoDigitWeekyear(org.joda.time.format.DateTimeFormatterBuilder int )org.joda.time.format.DateTimeFormatterBuilder"[label="1"]
"int"->"(static)org.joda.time.format.DateTimeFormatterBuilder.appendTwoDigitWeekyear(org.joda.time.format.DateTimeFormatterBuilder int boolean )org.joda.time.format.DateTimeFormatterBuilder"[label="1"]
"int"->"(static)org.joda.time.format.DateTimeFormatterBuilder.appendTwoDigitYear(org.joda.time.format.DateTimeFormatterBuilder int )org.joda.time.format.DateTimeFormatterBuilder"[label="1"]
"int"->"(static)org.joda.time.format.DateTimeFormatterBuilder.appendTwoDigitYear(org.joda.time.format.DateTimeFormatterBuilder int boolean )org.joda.time.format.DateTimeFormatterBuilder"[label="1"]
"int"->"(static)org.joda.time.format.DateTimeFormatterBuilder.appendWeekOfWeekyear(org.joda.time.format.DateTimeFormatterBuilder int )org.joda.time.format.DateTimeFormatterBuilder"[label="1"]
"int"->"(static)org.joda.time.format.DateTimeFormatterBuilder.appendWeekyear(org.joda.time.format.DateTimeFormatterBuilder int int )org.joda.time.format.DateTimeFormatterBuilder"[label="2"]
"int"->"(static)org.joda.time.format.DateTimeFormatterBuilder.appendYear(org.joda.time.format.DateTimeFormatterBuilder int int )org.joda.time.format.DateTimeFormatterBuilder"[label="2"]
"int"->"(static)org.joda.time.format.DateTimeFormatterBuilder.appendYearOfCentury(org.joda.time.format.DateTimeFormatterBuilder int int )org.joda.time.format.DateTimeFormatterBuilder"[label="2"]
"int"->"(static)org.joda.time.format.DateTimeFormatterBuilder.appendYearOfEra(org.joda.time.format.DateTimeFormatterBuilder int int )org.joda.time.format.DateTimeFormatterBuilder"[label="2"]
"int"->"(static)org.joda.time.format.PeriodFormatterBuilder$CompositeAffix.calculatePrintedLength(org.joda.time.format.PeriodFormatterBuilder$CompositeAffix int )int"[label="1"]
"int"->"(static)org.joda.time.format.PeriodFormatterBuilder$CompositeAffix.parse(org.joda.time.format.PeriodFormatterBuilder$CompositeAffix java.lang.String int )int"[label="1"]
"int"->"(static)org.joda.time.format.PeriodFormatterBuilder$CompositeAffix.scan(org.joda.time.format.PeriodFormatterBuilder$CompositeAffix java.lang.String int )int"[label="1"]
"int"->"(static)org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix.calculatePrintedLength(org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix int )int"[label="1"]
"int"->"(static)org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix.parse(org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix java.lang.String int )int"[label="1"]
"int"->"(static)org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix.scan(org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix java.lang.String int )int"[label="1"]
"int"->"(static)org.joda.time.format.PeriodFormatterBuilder$PluralAffix.calculatePrintedLength(org.joda.time.format.PeriodFormatterBuilder$PluralAffix int )int"[label="1"]
"int"->"(static)org.joda.time.format.PeriodFormatterBuilder$PluralAffix.parse(org.joda.time.format.PeriodFormatterBuilder$PluralAffix java.lang.String int )int"[label="1"]
"int"->"(static)org.joda.time.format.PeriodFormatterBuilder$PluralAffix.scan(org.joda.time.format.PeriodFormatterBuilder$PluralAffix java.lang.String int )int"[label="1"]
"int"->"(static)org.joda.time.format.PeriodFormatterBuilder$RegExAffix.calculatePrintedLength(org.joda.time.format.PeriodFormatterBuilder$RegExAffix int )int"[label="1"]
"int"->"(static)org.joda.time.format.PeriodFormatterBuilder$RegExAffix.parse(org.joda.time.format.PeriodFormatterBuilder$RegExAffix java.lang.String int )int"[label="1"]
"int"->"(static)org.joda.time.format.PeriodFormatterBuilder$RegExAffix.scan(org.joda.time.format.PeriodFormatterBuilder$RegExAffix java.lang.String int )int"[label="1"]
"int"->"(static)org.joda.time.format.PeriodFormatterBuilder$SimpleAffix.calculatePrintedLength(org.joda.time.format.PeriodFormatterBuilder$SimpleAffix int )int"[label="1"]
"int"->"(static)org.joda.time.format.PeriodFormatterBuilder$SimpleAffix.parse(org.joda.time.format.PeriodFormatterBuilder$SimpleAffix java.lang.String int )int"[label="1"]
"int"->"(static)org.joda.time.format.PeriodFormatterBuilder$SimpleAffix.scan(org.joda.time.format.PeriodFormatterBuilder$SimpleAffix java.lang.String int )int"[label="1"]
"int"->"(static)org.joda.time.format.PeriodFormatterBuilder.maximumParsedDigits(org.joda.time.format.PeriodFormatterBuilder int )org.joda.time.format.PeriodFormatterBuilder"[label="1"]
"int"->"(static)org.joda.time.format.PeriodFormatterBuilder.minimumPrintedDigits(org.joda.time.format.PeriodFormatterBuilder int )org.joda.time.format.PeriodFormatterBuilder"[label="1"]
"int"->"(static)org.joda.time.tz.DateTimeZoneBuilder$RuleSet.getUpperLimit(org.joda.time.tz.DateTimeZoneBuilder$RuleSet int )long"[label="1"]
"int"->"(static)org.joda.time.tz.DateTimeZoneBuilder$RuleSet.nextTransition(org.joda.time.tz.DateTimeZoneBuilder$RuleSet long int )org.joda.time.tz.DateTimeZoneBuilder$Transition"[label="1"]
"int"->"(static)org.joda.time.tz.DateTimeZoneBuilder.setFixedSavings(org.joda.time.tz.DateTimeZoneBuilder java.lang.String int )org.joda.time.tz.DateTimeZoneBuilder"[label="1"]
"int"->"(static)org.joda.time.tz.DateTimeZoneBuilder.setStandardOffset(org.joda.time.tz.DateTimeZoneBuilder int )org.joda.time.tz.DateTimeZoneBuilder"[label="1"]
"int"->"org.joda.time.DateTimeZone.forOffsetHours(int )org.joda.time.DateTimeZone"[label="1"]
"int"->"org.joda.time.DateTimeZone.forOffsetHoursMinutes(int int )org.joda.time.DateTimeZone"[label="2"]
"int"->"org.joda.time.DateTimeZone.forOffsetMillis(int )org.joda.time.DateTimeZone"[label="1"]
"int"->"org.joda.time.Days.days(int )org.joda.time.Days"[label="1"]
"int"->"org.joda.time.Hours.hours(int )org.joda.time.Hours"[label="1"]
"int"->"org.joda.time.LocalTime(int int )"[label="2"]
"int"->"org.joda.time.Minutes.minutes(int )org.joda.time.Minutes"[label="1"]
"int"->"org.joda.time.MonthDay(int int )"[label="2"]
"int"->"org.joda.time.Months.months(int )org.joda.time.Months"[label="1"]
"int"->"org.joda.time.Partial(org.joda.time.DateTimeFieldType int )"[label="1"]
"int"->"org.joda.time.Period.days(int )org.joda.time.Period"[label="1"]
"int"->"org.joda.time.Period.hours(int )org.joda.time.Period"[label="1"]
"int"->"org.joda.time.Period.millis(int )org.joda.time.Period"[label="1"]
"int"->"org.joda.time.Period.minutes(int )org.joda.time.Period"[label="1"]
"int"->"org.joda.time.Period.months(int )org.joda.time.Period"[label="1"]
"int"->"org.joda.time.Period.seconds(int )org.joda.time.Period"[label="1"]
"int"->"org.joda.time.Period.weeks(int )org.joda.time.Period"[label="1"]
"int"->"org.joda.time.Period.years(int )org.joda.time.Period"[label="1"]
"int"->"org.joda.time.Seconds.seconds(int )org.joda.time.Seconds"[label="1"]
"int"->"org.joda.time.TimeOfDay(int int )"[label="2"]
"int"->"org.joda.time.Weeks.weeks(int )org.joda.time.Weeks"[label="1"]
"int"->"org.joda.time.YearMonth(int int )"[label="2"]
"int"->"org.joda.time.Years.years(int )org.joda.time.Years"[label="1"]
"int"->"org.joda.time.chrono.CopticChronology.getInstance(org.joda.time.DateTimeZone int )org.joda.time.chrono.CopticChronology"[label="1"]
"int"->"org.joda.time.chrono.EthiopicChronology.getInstance(org.joda.time.DateTimeZone int )org.joda.time.chrono.EthiopicChronology"[label="1"]
"int"->"org.joda.time.chrono.GregorianChronology.getInstance(org.joda.time.DateTimeZone int )org.joda.time.chrono.GregorianChronology"[label="1"]
"int"->"org.joda.time.chrono.JulianChronology.getInstance(org.joda.time.DateTimeZone int )org.joda.time.chrono.JulianChronology"[label="1"]
"int"->"org.joda.time.field.FieldUtils.safeAdd(int int )int"[label="2"]
"int"->"org.joda.time.field.FieldUtils.safeMultiply(int int )int"[label="2"]
"int"->"org.joda.time.field.FieldUtils.safeMultiply(long int )long"[label="1"]
"int"->"org.joda.time.field.FieldUtils.safeNegate(int )int"[label="1"]
"int"->"org.joda.time.field.OffsetDateTimeField(org.joda.time.DateTimeField int )"[label="1"]
"int[]"->"(static)org.joda.time.DateTimeField.getMaximumValue(org.joda.time.DateTimeField org.joda.time.ReadablePartial int[] )int"[label="1"]
"int[]"->"(static)org.joda.time.DateTimeField.getMinimumValue(org.joda.time.DateTimeField org.joda.time.ReadablePartial int[] )int"[label="1"]
"int[]"->"(static)org.joda.time.chrono.BasicDayOfMonthDateTimeField.getMaximumValue(org.joda.time.chrono.BasicDayOfMonthDateTimeField org.joda.time.ReadablePartial int[] )int"[label="1"]
"int[]"->"(static)org.joda.time.chrono.BasicDayOfYearDateTimeField.getMaximumValue(org.joda.time.chrono.BasicDayOfYearDateTimeField org.joda.time.ReadablePartial int[] )int"[label="1"]
"int[]"->"(static)org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField.getMaximumValue(org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField org.joda.time.ReadablePartial int[] )int"[label="1"]
"int[]"->"(static)org.joda.time.chrono.GJChronology$CutoverField.getMaximumValue(org.joda.time.chrono.GJChronology$CutoverField org.joda.time.ReadablePartial int[] )int"[label="1"]
"int[]"->"(static)org.joda.time.chrono.GJChronology$CutoverField.getMinimumValue(org.joda.time.chrono.GJChronology$CutoverField org.joda.time.ReadablePartial int[] )int"[label="1"]
"int[]"->"(static)org.joda.time.chrono.ZonedChronology$ZonedDateTimeField.getMaximumValue(org.joda.time.chrono.ZonedChronology$ZonedDateTimeField org.joda.time.ReadablePartial int[] )int"[label="1"]
"int[]"->"(static)org.joda.time.chrono.ZonedChronology$ZonedDateTimeField.getMinimumValue(org.joda.time.chrono.ZonedChronology$ZonedDateTimeField org.joda.time.ReadablePartial int[] )int"[label="1"]
"int[]"->"(static)org.joda.time.field.BaseDateTimeField.getMaximumValue(org.joda.time.field.BaseDateTimeField org.joda.time.ReadablePartial int[] )int"[label="1"]
"int[]"->"(static)org.joda.time.field.BaseDateTimeField.getMinimumValue(org.joda.time.field.BaseDateTimeField org.joda.time.ReadablePartial int[] )int"[label="1"]
"int[]"->"(static)org.joda.time.field.DelegatedDateTimeField.getMaximumValue(org.joda.time.field.DelegatedDateTimeField org.joda.time.ReadablePartial int[] )int"[label="1"]
"int[]"->"(static)org.joda.time.field.DelegatedDateTimeField.getMinimumValue(org.joda.time.field.DelegatedDateTimeField org.joda.time.ReadablePartial int[] )int"[label="1"]
"int[]"->"(static)org.joda.time.field.UnsupportedDateTimeField.getMaximumValue(org.joda.time.field.UnsupportedDateTimeField org.joda.time.ReadablePartial int[] )int"[label="1"]
"int[]"->"(static)org.joda.time.field.UnsupportedDateTimeField.getMinimumValue(org.joda.time.field.UnsupportedDateTimeField org.joda.time.ReadablePartial int[] )int"[label="1"]
"int[]"->"(static)org.joda.time.field.ZeroIsMaxDateTimeField.getMaximumValue(org.joda.time.field.ZeroIsMaxDateTimeField org.joda.time.ReadablePartial int[] )int"[label="1"]
"int[]"->"(static)org.joda.time.field.ZeroIsMaxDateTimeField.getMinimumValue(org.joda.time.field.ZeroIsMaxDateTimeField org.joda.time.ReadablePartial int[] )int"[label="1"]
"int[]"->"org.joda.time.Partial(org.joda.time.DateTimeFieldType[] int[] )"[label="1"]
"java.io.DataInput"->"org.joda.time.tz.DateTimeZoneBuilder.readFrom(java.io.DataInput java.lang.String )org.joda.time.DateTimeZone"[label="1"]
"java.io.File"->"(static)org.joda.time.tz.ZoneInfoCompiler.compile(org.joda.time.tz.ZoneInfoCompiler java.io.File java.io.File[] )java.util.Map"[label="1"]
"java.io.File"->"org.joda.time.tz.ZoneInfoProvider(java.io.File )"[label="1"]
"java.io.File[]"->"(static)org.joda.time.tz.ZoneInfoCompiler.compile(org.joda.time.tz.ZoneInfoCompiler java.io.File java.io.File[] )java.util.Map"[label="1"]
"java.io.InputStream"->"org.joda.time.tz.DateTimeZoneBuilder.readFrom(java.io.InputStream java.lang.String )org.joda.time.DateTimeZone"[label="1"]
"java.lang.CharSequence"->"(static)org.joda.time.format.DateTimeParserBucket.computeMillis(org.joda.time.format.DateTimeParserBucket boolean java.lang.CharSequence )long"[label="1"]
"java.lang.CharSequence"->"(static)org.joda.time.format.DateTimeParserBucket.parseMillis(org.joda.time.format.DateTimeParserBucket org.joda.time.format.DateTimeParser java.lang.CharSequence )long"[label="1"]
"java.lang.ClassLoader"->"org.joda.time.tz.ZoneInfoProvider(java.lang.String java.lang.ClassLoader )"[label="1"]
"java.lang.Integer"->"(static)org.joda.time.format.DateTimeFormatter.withPivotYear(org.joda.time.format.DateTimeFormatter java.lang.Integer )org.joda.time.format.DateTimeFormatter"[label="1"]
"java.lang.Object"->"(static)org.joda.time.DateTimeComparator.compare(org.joda.time.DateTimeComparator java.lang.Object java.lang.Object )int"[label="2"]
"java.lang.Object"->"(static)org.joda.time.DateTimeComparator.equals(org.joda.time.DateTimeComparator java.lang.Object )boolean"[label="1"]
"java.lang.Object"->"(static)org.joda.time.DateTimeFieldType$StandardDateTimeFieldType.equals(org.joda.time.DateTimeFieldType$StandardDateTimeFieldType java.lang.Object )boolean"[label="1"]
"java.lang.Object"->"(static)org.joda.time.DateTimeZone.equals(org.joda.time.DateTimeZone java.lang.Object )boolean"[label="1"]
"java.lang.Object"->"(static)org.joda.time.DurationFieldType$StandardDurationFieldType.equals(org.joda.time.DurationFieldType$StandardDurationFieldType java.lang.Object )boolean"[label="1"]
"java.lang.Object"->"(static)org.joda.time.LocalDate.equals(org.joda.time.LocalDate java.lang.Object )boolean"[label="1"]
"java.lang.Object"->"(static)org.joda.time.LocalDateTime.equals(org.joda.time.LocalDateTime java.lang.Object )boolean"[label="1"]
"java.lang.Object"->"(static)org.joda.time.LocalTime.equals(org.joda.time.LocalTime java.lang.Object )boolean"[label="1"]
"java.lang.Object"->"(static)org.joda.time.PeriodType.equals(org.joda.time.PeriodType java.lang.Object )boolean"[label="1"]
"java.lang.Object"->"(static)org.joda.time.ReadableDuration.equals(org.joda.time.ReadableDuration java.lang.Object )boolean"[label="1"]
"java.lang.Object"->"(static)org.joda.time.ReadableInstant.equals(org.joda.time.ReadableInstant java.lang.Object )boolean"[label="1"]
"java.lang.Object"->"(static)org.joda.time.ReadableInterval.equals(org.joda.time.ReadableInterval java.lang.Object )boolean"[label="1"]
"java.lang.Object"->"(static)org.joda.time.ReadablePartial.equals(org.joda.time.ReadablePartial java.lang.Object )boolean"[label="1"]
"java.lang.Object"->"(static)org.joda.time.ReadablePeriod.equals(org.joda.time.ReadablePeriod java.lang.Object )boolean"[label="1"]
"java.lang.Object"->"(static)org.joda.time.UTCDateTimeZone.equals(org.joda.time.UTCDateTimeZone java.lang.Object )boolean"[label="1"]
"java.lang.Object"->"(static)org.joda.time.base.AbstractDuration.equals(org.joda.time.base.AbstractDuration java.lang.Object )boolean"[label="1"]
"java.lang.Object"->"(static)org.joda.time.base.AbstractInstant.equals(org.joda.time.base.AbstractInstant java.lang.Object )boolean"[label="1"]
"java.lang.Object"->"(static)org.joda.time.base.AbstractInterval.equals(org.joda.time.base.AbstractInterval java.lang.Object )boolean"[label="1"]
"java.lang.Object"->"(static)org.joda.time.base.AbstractPartial.equals(org.joda.time.base.AbstractPartial java.lang.Object )boolean"[label="1"]
"java.lang.Object"->"(static)org.joda.time.base.AbstractPeriod.equals(org.joda.time.base.AbstractPeriod java.lang.Object )boolean"[label="1"]
"java.lang.Object"->"(static)org.joda.time.base.BaseSingleFieldPeriod.equals(org.joda.time.base.BaseSingleFieldPeriod java.lang.Object )boolean"[label="1"]
"java.lang.Object"->"(static)org.joda.time.chrono.BasicChronology.equals(org.joda.time.chrono.BasicChronology java.lang.Object )boolean"[label="1"]
"java.lang.Object"->"(static)org.joda.time.chrono.BuddhistChronology.equals(org.joda.time.chrono.BuddhistChronology java.lang.Object )boolean"[label="1"]
"java.lang.Object"->"(static)org.joda.time.chrono.GJCacheKey.equals(org.joda.time.chrono.GJCacheKey java.lang.Object )boolean"[label="1"]
"java.lang.Object"->"(static)org.joda.time.chrono.GJChronology.equals(org.joda.time.chrono.GJChronology java.lang.Object )boolean"[label="1"]
"java.lang.Object"->"(static)org.joda.time.chrono.ISOChronology.equals(org.joda.time.chrono.ISOChronology java.lang.Object )boolean"[label="1"]
"java.lang.Object"->"(static)org.joda.time.chrono.IslamicChronology$LeapYearPatternType.equals(org.joda.time.chrono.IslamicChronology$LeapYearPatternType java.lang.Object )boolean"[label="1"]
"java.lang.Object"->"(static)org.joda.time.chrono.IslamicChronology.equals(org.joda.time.chrono.IslamicChronology java.lang.Object )boolean"[label="1"]
"java.lang.Object"->"(static)org.joda.time.chrono.LenientChronology.equals(org.joda.time.chrono.LenientChronology java.lang.Object )boolean"[label="1"]
"java.lang.Object"->"(static)org.joda.time.chrono.LimitChronology.equals(org.joda.time.chrono.LimitChronology java.lang.Object )boolean"[label="1"]
"java.lang.Object"->"(static)org.joda.time.chrono.StrictChronology.equals(org.joda.time.chrono.StrictChronology java.lang.Object )boolean"[label="1"]
"java.lang.Object"->"(static)org.joda.time.chrono.ZonedChronology$ZonedDateTimeField.equals(org.joda.time.chrono.ZonedChronology$ZonedDateTimeField java.lang.Object )boolean"[label="1"]
"java.lang.Object"->"(static)org.joda.time.chrono.ZonedChronology$ZonedDurationField.equals(org.joda.time.chrono.ZonedChronology$ZonedDurationField java.lang.Object )boolean"[label="1"]
"java.lang.Object"->"(static)org.joda.time.chrono.ZonedChronology.equals(org.joda.time.chrono.ZonedChronology java.lang.Object )boolean"[label="1"]
"java.lang.Object"->"(static)org.joda.time.convert.AbstractConverter.getChronology(org.joda.time.convert.AbstractConverter java.lang.Object org.joda.time.Chronology )org.joda.time.Chronology"[label="1"]
"java.lang.Object"->"(static)org.joda.time.convert.AbstractConverter.getChronology(org.joda.time.convert.AbstractConverter java.lang.Object org.joda.time.DateTimeZone )org.joda.time.Chronology"[label="1"]
"java.lang.Object"->"(static)org.joda.time.convert.AbstractConverter.getInstantMillis(org.joda.time.convert.AbstractConverter java.lang.Object org.joda.time.Chronology )long"[label="1"]
"java.lang.Object"->"(static)org.joda.time.convert.AbstractConverter.getPeriodType(org.joda.time.convert.AbstractConverter java.lang.Object )org.joda.time.PeriodType"[label="1"]
"java.lang.Object"->"(static)org.joda.time.convert.AbstractConverter.isReadableInterval(org.joda.time.convert.AbstractConverter java.lang.Object org.joda.time.Chronology )boolean"[label="1"]
"java.lang.Object"->"(static)org.joda.time.convert.CalendarConverter.getChronology(org.joda.time.convert.CalendarConverter java.lang.Object org.joda.time.Chronology )org.joda.time.Chronology"[label="1"]
"java.lang.Object"->"(static)org.joda.time.convert.CalendarConverter.getChronology(org.joda.time.convert.CalendarConverter java.lang.Object org.joda.time.DateTimeZone )org.joda.time.Chronology"[label="1"]
"java.lang.Object"->"(static)org.joda.time.convert.CalendarConverter.getInstantMillis(org.joda.time.convert.CalendarConverter java.lang.Object org.joda.time.Chronology )long"[label="1"]
"java.lang.Object"->"(static)org.joda.time.convert.ConverterManager.getDurationConverter(org.joda.time.convert.ConverterManager java.lang.Object )org.joda.time.convert.DurationConverter"[label="1"]
"java.lang.Object"->"(static)org.joda.time.convert.ConverterManager.getInstantConverter(org.joda.time.convert.ConverterManager java.lang.Object )org.joda.time.convert.InstantConverter"[label="1"]
"java.lang.Object"->"(static)org.joda.time.convert.ConverterManager.getIntervalConverter(org.joda.time.convert.ConverterManager java.lang.Object )org.joda.time.convert.IntervalConverter"[label="1"]
"java.lang.Object"->"(static)org.joda.time.convert.ConverterManager.getPartialConverter(org.joda.time.convert.ConverterManager java.lang.Object )org.joda.time.convert.PartialConverter"[label="1"]
"java.lang.Object"->"(static)org.joda.time.convert.ConverterManager.getPeriodConverter(org.joda.time.convert.ConverterManager java.lang.Object )org.joda.time.convert.PeriodConverter"[label="1"]
"java.lang.Object"->"(static)org.joda.time.convert.DateConverter.getInstantMillis(org.joda.time.convert.DateConverter java.lang.Object org.joda.time.Chronology )long"[label="1"]
"java.lang.Object"->"(static)org.joda.time.convert.DurationConverter.getDurationMillis(org.joda.time.convert.DurationConverter java.lang.Object )long"[label="1"]
"java.lang.Object"->"(static)org.joda.time.convert.InstantConverter.getChronology(org.joda.time.convert.InstantConverter java.lang.Object org.joda.time.Chronology )org.joda.time.Chronology"[label="1"]
"java.lang.Object"->"(static)org.joda.time.convert.InstantConverter.getChronology(org.joda.time.convert.InstantConverter java.lang.Object org.joda.time.DateTimeZone )org.joda.time.Chronology"[label="1"]
"java.lang.Object"->"(static)org.joda.time.convert.InstantConverter.getInstantMillis(org.joda.time.convert.InstantConverter java.lang.Object org.joda.time.Chronology )long"[label="1"]
"java.lang.Object"->"(static)org.joda.time.convert.IntervalConverter.isReadableInterval(org.joda.time.convert.IntervalConverter java.lang.Object org.joda.time.Chronology )boolean"[label="1"]
"java.lang.Object"->"(static)org.joda.time.convert.LongConverter.getDurationMillis(org.joda.time.convert.LongConverter java.lang.Object )long"[label="1"]
"java.lang.Object"->"(static)org.joda.time.convert.LongConverter.getInstantMillis(org.joda.time.convert.LongConverter java.lang.Object org.joda.time.Chronology )long"[label="1"]
"java.lang.Object"->"(static)org.joda.time.convert.NullConverter.getDurationMillis(org.joda.time.convert.NullConverter java.lang.Object )long"[label="1"]
"java.lang.Object"->"(static)org.joda.time.convert.PartialConverter.getChronology(org.joda.time.convert.PartialConverter java.lang.Object org.joda.time.Chronology )org.joda.time.Chronology"[label="1"]
"java.lang.Object"->"(static)org.joda.time.convert.PartialConverter.getChronology(org.joda.time.convert.PartialConverter java.lang.Object org.joda.time.DateTimeZone )org.joda.time.Chronology"[label="1"]
"java.lang.Object"->"(static)org.joda.time.convert.PeriodConverter.getPeriodType(org.joda.time.convert.PeriodConverter java.lang.Object )org.joda.time.PeriodType"[label="1"]
"java.lang.Object"->"(static)org.joda.time.convert.ReadableDurationConverter.getDurationMillis(org.joda.time.convert.ReadableDurationConverter java.lang.Object )long"[label="1"]
"java.lang.Object"->"(static)org.joda.time.convert.ReadableInstantConverter.getChronology(org.joda.time.convert.ReadableInstantConverter java.lang.Object org.joda.time.Chronology )org.joda.time.Chronology"[label="1"]
"java.lang.Object"->"(static)org.joda.time.convert.ReadableInstantConverter.getChronology(org.joda.time.convert.ReadableInstantConverter java.lang.Object org.joda.time.DateTimeZone )org.joda.time.Chronology"[label="1"]
"java.lang.Object"->"(static)org.joda.time.convert.ReadableInstantConverter.getInstantMillis(org.joda.time.convert.ReadableInstantConverter java.lang.Object org.joda.time.Chronology )long"[label="1"]
"java.lang.Object"->"(static)org.joda.time.convert.ReadableIntervalConverter.getDurationMillis(org.joda.time.convert.ReadableIntervalConverter java.lang.Object )long"[label="1"]
"java.lang.Object"->"(static)org.joda.time.convert.ReadableIntervalConverter.isReadableInterval(org.joda.time.convert.ReadableIntervalConverter java.lang.Object org.joda.time.Chronology )boolean"[label="1"]
"java.lang.Object"->"(static)org.joda.time.convert.ReadablePartialConverter.getChronology(org.joda.time.convert.ReadablePartialConverter java.lang.Object org.joda.time.Chronology )org.joda.time.Chronology"[label="1"]
"java.lang.Object"->"(static)org.joda.time.convert.ReadablePartialConverter.getChronology(org.joda.time.convert.ReadablePartialConverter java.lang.Object org.joda.time.DateTimeZone )org.joda.time.Chronology"[label="1"]
"java.lang.Object"->"(static)org.joda.time.convert.ReadablePeriodConverter.getPeriodType(org.joda.time.convert.ReadablePeriodConverter java.lang.Object )org.joda.time.PeriodType"[label="1"]
"java.lang.Object"->"(static)org.joda.time.convert.StringConverter.getDurationMillis(org.joda.time.convert.StringConverter java.lang.Object )long"[label="1"]
"java.lang.Object"->"(static)org.joda.time.convert.StringConverter.getInstantMillis(org.joda.time.convert.StringConverter java.lang.Object org.joda.time.Chronology )long"[label="1"]
"java.lang.Object"->"(static)org.joda.time.field.AbstractPartialFieldProperty.equals(org.joda.time.field.AbstractPartialFieldProperty java.lang.Object )boolean"[label="1"]
"java.lang.Object"->"(static)org.joda.time.field.AbstractReadableInstantFieldProperty.equals(org.joda.time.field.AbstractReadableInstantFieldProperty java.lang.Object )boolean"[label="1"]
"java.lang.Object"->"(static)org.joda.time.field.DelegatedDurationField.equals(org.joda.time.field.DelegatedDurationField java.lang.Object )boolean"[label="1"]
"java.lang.Object"->"(static)org.joda.time.field.MillisDurationField.equals(org.joda.time.field.MillisDurationField java.lang.Object )boolean"[label="1"]
"java.lang.Object"->"(static)org.joda.time.field.PreciseDurationField.equals(org.joda.time.field.PreciseDurationField java.lang.Object )boolean"[label="1"]
"java.lang.Object"->"(static)org.joda.time.field.ScaledDurationField.equals(org.joda.time.field.ScaledDurationField java.lang.Object )boolean"[label="1"]
"java.lang.Object"->"(static)org.joda.time.field.UnsupportedDurationField.equals(org.joda.time.field.UnsupportedDurationField java.lang.Object )boolean"[label="1"]
"java.lang.Object"->"(static)org.joda.time.format.DateTimeFormat$StyleFormatterCacheKey.equals(org.joda.time.format.DateTimeFormat$StyleFormatterCacheKey java.lang.Object )boolean"[label="1"]
"java.lang.Object"->"(static)org.joda.time.format.DateTimeParserBucket.restoreState(org.joda.time.format.DateTimeParserBucket java.lang.Object )boolean"[label="1"]
"java.lang.Object"->"(static)org.joda.time.format.InternalParserDateTimeParser.equals(org.joda.time.format.InternalParserDateTimeParser java.lang.Object )boolean"[label="1"]
"java.lang.Object"->"(static)org.joda.time.format.InternalPrinterDateTimePrinter.equals(org.joda.time.format.InternalPrinterDateTimePrinter java.lang.Object )boolean"[label="1"]
"java.lang.Object"->"(static)org.joda.time.format.PeriodFormatterBuilder$RegExAffix$1.compare(org.joda.time.format.PeriodFormatterBuilder$RegExAffix$1 java.lang.Object java.lang.Object )int"[label="2"]
"java.lang.Object"->"(static)org.joda.time.tz.CachedDateTimeZone.equals(org.joda.time.tz.CachedDateTimeZone java.lang.Object )boolean"[label="1"]
"java.lang.Object"->"(static)org.joda.time.tz.DateTimeZoneBuilder$DSTZone.equals(org.joda.time.tz.DateTimeZoneBuilder$DSTZone java.lang.Object )boolean"[label="1"]
"java.lang.Object"->"(static)org.joda.time.tz.DateTimeZoneBuilder$OfYear.equals(org.joda.time.tz.DateTimeZoneBuilder$OfYear java.lang.Object )boolean"[label="1"]
"java.lang.Object"->"(static)org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.equals(org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone java.lang.Object )boolean"[label="1"]
"java.lang.Object"->"(static)org.joda.time.tz.DateTimeZoneBuilder$Recurrence.equals(org.joda.time.tz.DateTimeZoneBuilder$Recurrence java.lang.Object )boolean"[label="1"]
"java.lang.Object"->"(static)org.joda.time.tz.FixedDateTimeZone.equals(org.joda.time.tz.FixedDateTimeZone java.lang.Object )boolean"[label="1"]
"java.lang.Object"->"org.joda.time.DateMidnight(java.lang.Object )"[label="1"]
"java.lang.Object"->"org.joda.time.DateMidnight(java.lang.Object org.joda.time.Chronology )"[label="1"]
"java.lang.Object"->"org.joda.time.DateMidnight(java.lang.Object org.joda.time.DateTimeZone )"[label="1"]
"java.lang.Object"->"org.joda.time.DateTime(java.lang.Object )"[label="1"]
"java.lang.Object"->"org.joda.time.DateTime(java.lang.Object org.joda.time.Chronology )"[label="1"]
"java.lang.Object"->"org.joda.time.DateTime(java.lang.Object org.joda.time.DateTimeZone )"[label="1"]
"java.lang.Object"->"org.joda.time.Duration(java.lang.Object )"[label="1"]
"java.lang.Object"->"org.joda.time.Instant(java.lang.Object )"[label="1"]
"java.lang.Object"->"org.joda.time.Interval(java.lang.Object )"[label="1"]
"java.lang.Object"->"org.joda.time.Interval(java.lang.Object org.joda.time.Chronology )"[label="1"]
"java.lang.Object"->"org.joda.time.LocalDate(java.lang.Object )"[label="1"]
"java.lang.Object"->"org.joda.time.LocalDate(java.lang.Object org.joda.time.Chronology )"[label="1"]
"java.lang.Object"->"org.joda.time.LocalDate(java.lang.Object org.joda.time.DateTimeZone )"[label="1"]
"java.lang.Object"->"org.joda.time.LocalDateTime(java.lang.Object )"[label="1"]
"java.lang.Object"->"org.joda.time.LocalDateTime(java.lang.Object org.joda.time.Chronology )"[label="1"]
"java.lang.Object"->"org.joda.time.LocalDateTime(java.lang.Object org.joda.time.DateTimeZone )"[label="1"]
"java.lang.Object"->"org.joda.time.LocalTime(java.lang.Object )"[label="1"]
"java.lang.Object"->"org.joda.time.LocalTime(java.lang.Object org.joda.time.Chronology )"[label="1"]
"java.lang.Object"->"org.joda.time.LocalTime(java.lang.Object org.joda.time.DateTimeZone )"[label="1"]
"java.lang.Object"->"org.joda.time.MonthDay(java.lang.Object )"[label="1"]
"java.lang.Object"->"org.joda.time.MonthDay(java.lang.Object org.joda.time.Chronology )"[label="1"]
"java.lang.Object"->"org.joda.time.MutableDateTime(java.lang.Object )"[label="1"]
"java.lang.Object"->"org.joda.time.MutableDateTime(java.lang.Object org.joda.time.Chronology )"[label="1"]
"java.lang.Object"->"org.joda.time.MutableDateTime(java.lang.Object org.joda.time.DateTimeZone )"[label="1"]
"java.lang.Object"->"org.joda.time.MutableInterval(java.lang.Object )"[label="1"]
"java.lang.Object"->"org.joda.time.MutableInterval(java.lang.Object org.joda.time.Chronology )"[label="1"]
"java.lang.Object"->"org.joda.time.MutablePeriod(java.lang.Object )"[label="1"]
"java.lang.Object"->"org.joda.time.MutablePeriod(java.lang.Object org.joda.time.Chronology )"[label="1"]
"java.lang.Object"->"org.joda.time.MutablePeriod(java.lang.Object org.joda.time.PeriodType )"[label="1"]
"java.lang.Object"->"org.joda.time.Period(java.lang.Object )"[label="1"]
"java.lang.Object"->"org.joda.time.Period(java.lang.Object org.joda.time.Chronology )"[label="1"]
"java.lang.Object"->"org.joda.time.Period(java.lang.Object org.joda.time.PeriodType )"[label="1"]
"java.lang.Object"->"org.joda.time.TimeOfDay(java.lang.Object )"[label="1"]
"java.lang.Object"->"org.joda.time.TimeOfDay(java.lang.Object org.joda.time.Chronology )"[label="1"]
"java.lang.Object"->"org.joda.time.YearMonth(java.lang.Object )"[label="1"]
"java.lang.Object"->"org.joda.time.YearMonth(java.lang.Object org.joda.time.Chronology )"[label="1"]
"java.lang.Object"->"org.joda.time.YearMonthDay(java.lang.Object )"[label="1"]
"java.lang.Object"->"org.joda.time.YearMonthDay(java.lang.Object org.joda.time.Chronology )"[label="1"]
"java.lang.Object"->"org.joda.time.base.BaseDateTime(java.lang.Object org.joda.time.Chronology )"[label="1"]
"java.lang.Object"->"org.joda.time.base.BaseDateTime(java.lang.Object org.joda.time.DateTimeZone )"[label="1"]
"java.lang.Object"->"org.joda.time.field.FieldUtils.equals(java.lang.Object java.lang.Object )boolean"[label="2"]
"java.lang.String"->"(static)org.joda.time.DateMidnight$Property.setCopy(org.joda.time.DateMidnight$Property java.lang.String )org.joda.time.DateMidnight"[label="1"]
"java.lang.String"->"(static)org.joda.time.DateMidnight$Property.setCopy(org.joda.time.DateMidnight$Property java.lang.String java.util.Locale )org.joda.time.DateMidnight"[label="1"]
"java.lang.String"->"(static)org.joda.time.DateTime$Property.setCopy(org.joda.time.DateTime$Property java.lang.String )org.joda.time.DateTime"[label="1"]
"java.lang.String"->"(static)org.joda.time.DateTime$Property.setCopy(org.joda.time.DateTime$Property java.lang.String java.util.Locale )org.joda.time.DateTime"[label="1"]
"java.lang.String"->"(static)org.joda.time.DateTimeField.set(org.joda.time.DateTimeField long java.lang.String )long"[label="1"]
"java.lang.String"->"(static)org.joda.time.LocalDate$Property.setCopy(org.joda.time.LocalDate$Property java.lang.String )org.joda.time.LocalDate"[label="1"]
"java.lang.String"->"(static)org.joda.time.LocalDate$Property.setCopy(org.joda.time.LocalDate$Property java.lang.String java.util.Locale )org.joda.time.LocalDate"[label="1"]
"java.lang.String"->"(static)org.joda.time.LocalDateTime$Property.setCopy(org.joda.time.LocalDateTime$Property java.lang.String )org.joda.time.LocalDateTime"[label="1"]
"java.lang.String"->"(static)org.joda.time.LocalDateTime$Property.setCopy(org.joda.time.LocalDateTime$Property java.lang.String java.util.Locale )org.joda.time.LocalDateTime"[label="1"]
"java.lang.String"->"(static)org.joda.time.LocalTime$Property.setCopy(org.joda.time.LocalTime$Property java.lang.String )org.joda.time.LocalTime"[label="1"]
"java.lang.String"->"(static)org.joda.time.LocalTime$Property.setCopy(org.joda.time.LocalTime$Property java.lang.String java.util.Locale )org.joda.time.LocalTime"[label="1"]
"java.lang.String"->"(static)org.joda.time.MonthDay$Property.setCopy(org.joda.time.MonthDay$Property java.lang.String )org.joda.time.MonthDay"[label="1"]
"java.lang.String"->"(static)org.joda.time.MonthDay$Property.setCopy(org.joda.time.MonthDay$Property java.lang.String java.util.Locale )org.joda.time.MonthDay"[label="1"]
"java.lang.String"->"(static)org.joda.time.MutableDateTime$Property.set(org.joda.time.MutableDateTime$Property java.lang.String )org.joda.time.MutableDateTime"[label="1"]
"java.lang.String"->"(static)org.joda.time.MutableDateTime$Property.set(org.joda.time.MutableDateTime$Property java.lang.String java.util.Locale )org.joda.time.MutableDateTime"[label="1"]
"java.lang.String"->"(static)org.joda.time.Partial$Property.setCopy(org.joda.time.Partial$Property java.lang.String )org.joda.time.Partial"[label="1"]
"java.lang.String"->"(static)org.joda.time.Partial$Property.setCopy(org.joda.time.Partial$Property java.lang.String java.util.Locale )org.joda.time.Partial"[label="1"]
"java.lang.String"->"(static)org.joda.time.TimeOfDay$Property.setCopy(org.joda.time.TimeOfDay$Property java.lang.String )org.joda.time.TimeOfDay"[label="1"]
"java.lang.String"->"(static)org.joda.time.TimeOfDay$Property.setCopy(org.joda.time.TimeOfDay$Property java.lang.String java.util.Locale )org.joda.time.TimeOfDay"[label="1"]
"java.lang.String"->"(static)org.joda.time.YearMonth$Property.setCopy(org.joda.time.YearMonth$Property java.lang.String )org.joda.time.YearMonth"[label="1"]
"java.lang.String"->"(static)org.joda.time.YearMonth$Property.setCopy(org.joda.time.YearMonth$Property java.lang.String java.util.Locale )org.joda.time.YearMonth"[label="1"]
"java.lang.String"->"(static)org.joda.time.YearMonthDay$Property.setCopy(org.joda.time.YearMonthDay$Property java.lang.String )org.joda.time.YearMonthDay"[label="1"]
"java.lang.String"->"(static)org.joda.time.YearMonthDay$Property.setCopy(org.joda.time.YearMonthDay$Property java.lang.String java.util.Locale )org.joda.time.YearMonthDay"[label="1"]
"java.lang.String"->"(static)org.joda.time.chrono.GJLocaleSymbols.dayOfWeekTextToValue(org.joda.time.chrono.GJLocaleSymbols java.lang.String )int"[label="1"]
"java.lang.String"->"(static)org.joda.time.chrono.GJLocaleSymbols.eraTextToValue(org.joda.time.chrono.GJLocaleSymbols java.lang.String )int"[label="1"]
"java.lang.String"->"(static)org.joda.time.chrono.GJLocaleSymbols.halfdayTextToValue(org.joda.time.chrono.GJLocaleSymbols java.lang.String )int"[label="1"]
"java.lang.String"->"(static)org.joda.time.chrono.GJLocaleSymbols.monthOfYearTextToValue(org.joda.time.chrono.GJLocaleSymbols java.lang.String )int"[label="1"]
"java.lang.String"->"(static)org.joda.time.field.BaseDateTimeField.set(org.joda.time.field.BaseDateTimeField long java.lang.String )long"[label="1"]
"java.lang.String"->"(static)org.joda.time.field.DelegatedDateTimeField.set(org.joda.time.field.DelegatedDateTimeField long java.lang.String )long"[label="1"]
"java.lang.String"->"(static)org.joda.time.field.UnsupportedDateTimeField.set(org.joda.time.field.UnsupportedDateTimeField long java.lang.String )long"[label="1"]
"java.lang.String"->"(static)org.joda.time.format.DateTimeFormatter.parseDateTime(org.joda.time.format.DateTimeFormatter java.lang.String )org.joda.time.DateTime"[label="1"]
"java.lang.String"->"(static)org.joda.time.format.DateTimeFormatter.parseLocalDate(org.joda.time.format.DateTimeFormatter java.lang.String )org.joda.time.LocalDate"[label="1"]
"java.lang.String"->"(static)org.joda.time.format.DateTimeFormatter.parseLocalDateTime(org.joda.time.format.DateTimeFormatter java.lang.String )org.joda.time.LocalDateTime"[label="1"]
"java.lang.String"->"(static)org.joda.time.format.DateTimeFormatter.parseLocalTime(org.joda.time.format.DateTimeFormatter java.lang.String )org.joda.time.LocalTime"[label="1"]
"java.lang.String"->"(static)org.joda.time.format.DateTimeFormatter.parseMillis(org.joda.time.format.DateTimeFormatter java.lang.String )long"[label="1"]
"java.lang.String"->"(static)org.joda.time.format.DateTimeFormatter.parseMutableDateTime(org.joda.time.format.DateTimeFormatter java.lang.String )org.joda.time.MutableDateTime"[label="1"]
"java.lang.String"->"(static)org.joda.time.format.DateTimeFormatterBuilder.appendLiteral(org.joda.time.format.DateTimeFormatterBuilder java.lang.String )org.joda.time.format.DateTimeFormatterBuilder"[label="1"]
"java.lang.String"->"(static)org.joda.time.format.DateTimeFormatterBuilder.appendPattern(org.joda.time.format.DateTimeFormatterBuilder java.lang.String )org.joda.time.format.DateTimeFormatterBuilder"[label="1"]
"java.lang.String"->"(static)org.joda.time.format.DateTimeParserBucket.computeMillis(org.joda.time.format.DateTimeParserBucket boolean java.lang.String )long"[label="1"]
"java.lang.String"->"(static)org.joda.time.format.PeriodFormatter.parseMutablePeriod(org.joda.time.format.PeriodFormatter java.lang.String )org.joda.time.MutablePeriod"[label="1"]
"java.lang.String"->"(static)org.joda.time.format.PeriodFormatter.parsePeriod(org.joda.time.format.PeriodFormatter java.lang.String )org.joda.time.Period"[label="1"]
"java.lang.String"->"(static)org.joda.time.format.PeriodFormatterBuilder$CompositeAffix.parse(org.joda.time.format.PeriodFormatterBuilder$CompositeAffix java.lang.String int )int"[label="1"]
"java.lang.String"->"(static)org.joda.time.format.PeriodFormatterBuilder$CompositeAffix.scan(org.joda.time.format.PeriodFormatterBuilder$CompositeAffix java.lang.String int )int"[label="1"]
"java.lang.String"->"(static)org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix.parse(org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix java.lang.String int )int"[label="1"]
"java.lang.String"->"(static)org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix.scan(org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix java.lang.String int )int"[label="1"]
"java.lang.String"->"(static)org.joda.time.format.PeriodFormatterBuilder$PluralAffix.parse(org.joda.time.format.PeriodFormatterBuilder$PluralAffix java.lang.String int )int"[label="1"]
"java.lang.String"->"(static)org.joda.time.format.PeriodFormatterBuilder$PluralAffix.scan(org.joda.time.format.PeriodFormatterBuilder$PluralAffix java.lang.String int )int"[label="1"]
"java.lang.String"->"(static)org.joda.time.format.PeriodFormatterBuilder$RegExAffix$1.compare(org.joda.time.format.PeriodFormatterBuilder$RegExAffix$1 java.lang.String java.lang.String )int"[label="2"]
"java.lang.String"->"(static)org.joda.time.format.PeriodFormatterBuilder$RegExAffix.parse(org.joda.time.format.PeriodFormatterBuilder$RegExAffix java.lang.String int )int"[label="1"]
"java.lang.String"->"(static)org.joda.time.format.PeriodFormatterBuilder$RegExAffix.scan(org.joda.time.format.PeriodFormatterBuilder$RegExAffix java.lang.String int )int"[label="1"]
"java.lang.String"->"(static)org.joda.time.format.PeriodFormatterBuilder$SimpleAffix.parse(org.joda.time.format.PeriodFormatterBuilder$SimpleAffix java.lang.String int )int"[label="1"]
"java.lang.String"->"(static)org.joda.time.format.PeriodFormatterBuilder$SimpleAffix.scan(org.joda.time.format.PeriodFormatterBuilder$SimpleAffix java.lang.String int )int"[label="1"]
"java.lang.String"->"(static)org.joda.time.format.PeriodFormatterBuilder.appendLiteral(org.joda.time.format.PeriodFormatterBuilder java.lang.String )org.joda.time.format.PeriodFormatterBuilder"[label="1"]
"java.lang.String"->"(static)org.joda.time.format.PeriodFormatterBuilder.appendPrefix(org.joda.time.format.PeriodFormatterBuilder java.lang.String )org.joda.time.format.PeriodFormatterBuilder"[label="1"]
"java.lang.String"->"(static)org.joda.time.format.PeriodFormatterBuilder.appendPrefix(org.joda.time.format.PeriodFormatterBuilder java.lang.String java.lang.String )org.joda.time.format.PeriodFormatterBuilder"[label="2"]
"java.lang.String"->"(static)org.joda.time.format.PeriodFormatterBuilder.appendSeparator(org.joda.time.format.PeriodFormatterBuilder java.lang.String )org.joda.time.format.PeriodFormatterBuilder"[label="1"]
"java.lang.String"->"(static)org.joda.time.format.PeriodFormatterBuilder.appendSeparator(org.joda.time.format.PeriodFormatterBuilder java.lang.String java.lang.String )org.joda.time.format.PeriodFormatterBuilder"[label="2"]
"java.lang.String"->"(static)org.joda.time.format.PeriodFormatterBuilder.appendSeparatorIfFieldsAfter(org.joda.time.format.PeriodFormatterBuilder java.lang.String )org.joda.time.format.PeriodFormatterBuilder"[label="1"]
"java.lang.String"->"(static)org.joda.time.format.PeriodFormatterBuilder.appendSeparatorIfFieldsBefore(org.joda.time.format.PeriodFormatterBuilder java.lang.String )org.joda.time.format.PeriodFormatterBuilder"[label="1"]
"java.lang.String"->"(static)org.joda.time.format.PeriodFormatterBuilder.appendSuffix(org.joda.time.format.PeriodFormatterBuilder java.lang.String )org.joda.time.format.PeriodFormatterBuilder"[label="1"]
"java.lang.String"->"(static)org.joda.time.format.PeriodFormatterBuilder.appendSuffix(org.joda.time.format.PeriodFormatterBuilder java.lang.String java.lang.String )org.joda.time.format.PeriodFormatterBuilder"[label="2"]
"java.lang.String"->"(static)org.joda.time.tz.DateTimeZoneBuilder$RuleSet.buildTailZone(org.joda.time.tz.DateTimeZoneBuilder$RuleSet java.lang.String )org.joda.time.tz.DateTimeZoneBuilder$DSTZone"[label="1"]
"java.lang.String"->"(static)org.joda.time.tz.DateTimeZoneBuilder.setFixedSavings(org.joda.time.tz.DateTimeZoneBuilder java.lang.String int )org.joda.time.tz.DateTimeZoneBuilder"[label="1"]
"java.lang.String"->"(static)org.joda.time.tz.DateTimeZoneBuilder.toDateTimeZone(org.joda.time.tz.DateTimeZoneBuilder java.lang.String boolean )org.joda.time.DateTimeZone"[label="1"]
"java.lang.String"->"(static)org.joda.time.tz.Provider.getZone(org.joda.time.tz.Provider java.lang.String )org.joda.time.DateTimeZone"[label="1"]
"java.lang.String"->"(static)org.joda.time.tz.UTCProvider.getZone(org.joda.time.tz.UTCProvider java.lang.String )org.joda.time.DateTimeZone"[label="1"]
"java.lang.String"->"(static)org.joda.time.tz.ZoneInfoProvider.getZone(org.joda.time.tz.ZoneInfoProvider java.lang.String )org.joda.time.DateTimeZone"[label="1"]
"java.lang.String"->"org.joda.time.DateMidnight.parse(java.lang.String )org.joda.time.DateMidnight"[label="1"]
"java.lang.String"->"org.joda.time.DateMidnight.parse(java.lang.String org.joda.time.format.DateTimeFormatter )org.joda.time.DateMidnight"[label="1"]
"java.lang.String"->"org.joda.time.DateTime.parse(java.lang.String )org.joda.time.DateTime"[label="1"]
"java.lang.String"->"org.joda.time.DateTime.parse(java.lang.String org.joda.time.format.DateTimeFormatter )org.joda.time.DateTime"[label="1"]
"java.lang.String"->"org.joda.time.DateTimeZone.forID(java.lang.String )org.joda.time.DateTimeZone"[label="1"]
"java.lang.String"->"org.joda.time.Days.parseDays(java.lang.String )org.joda.time.Days"[label="1"]
"java.lang.String"->"org.joda.time.Duration.parse(java.lang.String )org.joda.time.Duration"[label="1"]
"java.lang.String"->"org.joda.time.Hours.parseHours(java.lang.String )org.joda.time.Hours"[label="1"]
"java.lang.String"->"org.joda.time.IllegalFieldValueException(java.lang.String java.lang.String )"[label="2"]
"java.lang.String"->"org.joda.time.IllegalFieldValueException(org.joda.time.DateTimeFieldType java.lang.String )"[label="1"]
"java.lang.String"->"org.joda.time.IllegalFieldValueException(org.joda.time.DurationFieldType java.lang.String )"[label="1"]
"java.lang.String"->"org.joda.time.IllegalInstantException(java.lang.String )"[label="1"]
"java.lang.String"->"org.joda.time.IllegalInstantException(long java.lang.String )"[label="1"]
"java.lang.String"->"org.joda.time.Instant.parse(java.lang.String )org.joda.time.Instant"[label="1"]
"java.lang.String"->"org.joda.time.Instant.parse(java.lang.String org.joda.time.format.DateTimeFormatter )org.joda.time.Instant"[label="1"]
"java.lang.String"->"org.joda.time.Interval.parse(java.lang.String )org.joda.time.Interval"[label="1"]
"java.lang.String"->"org.joda.time.JodaTimePermission(java.lang.String )"[label="1"]
"java.lang.String"->"org.joda.time.LocalDate.parse(java.lang.String )org.joda.time.LocalDate"[label="1"]
"java.lang.String"->"org.joda.time.LocalDate.parse(java.lang.String org.joda.time.format.DateTimeFormatter )org.joda.time.LocalDate"[label="1"]
"java.lang.String"->"org.joda.time.LocalDateTime.parse(java.lang.String )org.joda.time.LocalDateTime"[label="1"]
"java.lang.String"->"org.joda.time.LocalDateTime.parse(java.lang.String org.joda.time.format.DateTimeFormatter )org.joda.time.LocalDateTime"[label="1"]
"java.lang.String"->"org.joda.time.LocalTime.parse(java.lang.String )org.joda.time.LocalTime"[label="1"]
"java.lang.String"->"org.joda.time.LocalTime.parse(java.lang.String org.joda.time.format.DateTimeFormatter )org.joda.time.LocalTime"[label="1"]
"java.lang.String"->"org.joda.time.Minutes.parseMinutes(java.lang.String )org.joda.time.Minutes"[label="1"]
"java.lang.String"->"org.joda.time.MonthDay.parse(java.lang.String )org.joda.time.MonthDay"[label="1"]
"java.lang.String"->"org.joda.time.MonthDay.parse(java.lang.String org.joda.time.format.DateTimeFormatter )org.joda.time.MonthDay"[label="1"]
"java.lang.String"->"org.joda.time.Months.parseMonths(java.lang.String )org.joda.time.Months"[label="1"]
"java.lang.String"->"org.joda.time.MutableDateTime.parse(java.lang.String )org.joda.time.MutableDateTime"[label="1"]
"java.lang.String"->"org.joda.time.MutableDateTime.parse(java.lang.String org.joda.time.format.DateTimeFormatter )org.joda.time.MutableDateTime"[label="1"]
"java.lang.String"->"org.joda.time.MutableInterval.parse(java.lang.String )org.joda.time.MutableInterval"[label="1"]
"java.lang.String"->"org.joda.time.MutablePeriod.parse(java.lang.String )org.joda.time.MutablePeriod"[label="1"]
"java.lang.String"->"org.joda.time.MutablePeriod.parse(java.lang.String org.joda.time.format.PeriodFormatter )org.joda.time.MutablePeriod"[label="1"]
"java.lang.String"->"org.joda.time.Period.parse(java.lang.String )org.joda.time.Period"[label="1"]
"java.lang.String"->"org.joda.time.Period.parse(java.lang.String org.joda.time.format.PeriodFormatter )org.joda.time.Period"[label="1"]
"java.lang.String"->"org.joda.time.Seconds.parseSeconds(java.lang.String )org.joda.time.Seconds"[label="1"]
"java.lang.String"->"org.joda.time.Weeks.parseWeeks(java.lang.String )org.joda.time.Weeks"[label="1"]
"java.lang.String"->"org.joda.time.YearMonth.parse(java.lang.String )org.joda.time.YearMonth"[label="1"]
"java.lang.String"->"org.joda.time.YearMonth.parse(java.lang.String org.joda.time.format.DateTimeFormatter )org.joda.time.YearMonth"[label="1"]
"java.lang.String"->"org.joda.time.Years.parseYears(java.lang.String )org.joda.time.Years"[label="1"]
"java.lang.String"->"org.joda.time.format.DateTimeFormat.forPattern(java.lang.String )org.joda.time.format.DateTimeFormatter"[label="1"]
"java.lang.String"->"org.joda.time.format.DateTimeFormat.forStyle(java.lang.String )org.joda.time.format.DateTimeFormatter"[label="1"]
"java.lang.String"->"org.joda.time.format.DateTimeFormat.patternForStyle(java.lang.String java.util.Locale )java.lang.String"[label="1"]
"java.lang.String"->"org.joda.time.format.DateTimeFormatterBuilder$TimeZoneId.valueOf(java.lang.String )org.joda.time.format.DateTimeFormatterBuilder$TimeZoneId"[label="1"]
"java.lang.String"->"org.joda.time.tz.DateTimeZoneBuilder.readFrom(java.io.DataInput java.lang.String )org.joda.time.DateTimeZone"[label="1"]
"java.lang.String"->"org.joda.time.tz.DateTimeZoneBuilder.readFrom(java.io.InputStream java.lang.String )org.joda.time.DateTimeZone"[label="1"]
"java.lang.String"->"org.joda.time.tz.ZoneInfoProvider(java.lang.String )"[label="1"]
"java.lang.String"->"org.joda.time.tz.ZoneInfoProvider(java.lang.String java.lang.ClassLoader )"[label="1"]
"java.lang.String[]"->"(static)org.joda.time.format.PeriodFormatterBuilder.appendPrefix(org.joda.time.format.PeriodFormatterBuilder java.lang.String[] java.lang.String[] )org.joda.time.format.PeriodFormatterBuilder"[label="2"]
"java.lang.String[]"->"(static)org.joda.time.format.PeriodFormatterBuilder.appendSuffix(org.joda.time.format.PeriodFormatterBuilder java.lang.String[] java.lang.String[] )org.joda.time.format.PeriodFormatterBuilder"[label="2"]
"java.lang.Throwable"->"org.joda.time.IllegalInstantException.isIllegalInstant(java.lang.Throwable )boolean"[label="1"]
"java.util.Calendar"->"org.joda.time.LocalDate.fromCalendarFields(java.util.Calendar )org.joda.time.LocalDate"[label="1"]
"java.util.Calendar"->"org.joda.time.LocalDateTime.fromCalendarFields(java.util.Calendar )org.joda.time.LocalDateTime"[label="1"]
"java.util.Calendar"->"org.joda.time.LocalTime.fromCalendarFields(java.util.Calendar )org.joda.time.LocalTime"[label="1"]
"java.util.Calendar"->"org.joda.time.MonthDay.fromCalendarFields(java.util.Calendar )org.joda.time.MonthDay"[label="1"]
"java.util.Calendar"->"org.joda.time.TimeOfDay.fromCalendarFields(java.util.Calendar )org.joda.time.TimeOfDay"[label="1"]
"java.util.Calendar"->"org.joda.time.YearMonth.fromCalendarFields(java.util.Calendar )org.joda.time.YearMonth"[label="1"]
"java.util.Calendar"->"org.joda.time.YearMonthDay.fromCalendarFields(java.util.Calendar )org.joda.time.YearMonthDay"[label="1"]
"java.util.Date"->"org.joda.time.LocalDate.fromDateFields(java.util.Date )org.joda.time.LocalDate"[label="1"]
"java.util.Date"->"org.joda.time.LocalDateTime.fromDateFields(java.util.Date )org.joda.time.LocalDateTime"[label="1"]
"java.util.Date"->"org.joda.time.LocalTime.fromDateFields(java.util.Date )org.joda.time.LocalTime"[label="1"]
"java.util.Date"->"org.joda.time.MonthDay.fromDateFields(java.util.Date )org.joda.time.MonthDay"[label="1"]
"java.util.Date"->"org.joda.time.TimeOfDay.fromDateFields(java.util.Date )org.joda.time.TimeOfDay"[label="1"]
"java.util.Date"->"org.joda.time.YearMonth.fromDateFields(java.util.Date )org.joda.time.YearMonth"[label="1"]
"java.util.Date"->"org.joda.time.YearMonthDay.fromDateFields(java.util.Date )org.joda.time.YearMonthDay"[label="1"]
"java.util.Locale"->"(static)org.joda.time.DateMidnight$Property.setCopy(org.joda.time.DateMidnight$Property java.lang.String java.util.Locale )org.joda.time.DateMidnight"[label="1"]
"java.util.Locale"->"(static)org.joda.time.DateTime$Property.setCopy(org.joda.time.DateTime$Property java.lang.String java.util.Locale )org.joda.time.DateTime"[label="1"]
"java.util.Locale"->"(static)org.joda.time.DateTimeField.getAsShortText(org.joda.time.DateTimeField int java.util.Locale )java.lang.String"[label="1"]
"java.util.Locale"->"(static)org.joda.time.DateTimeField.getAsShortText(org.joda.time.DateTimeField long java.util.Locale )java.lang.String"[label="1"]
"java.util.Locale"->"(static)org.joda.time.DateTimeField.getAsShortText(org.joda.time.DateTimeField org.joda.time.ReadablePartial java.util.Locale )java.lang.String"[label="1"]
"java.util.Locale"->"(static)org.joda.time.DateTimeField.getAsText(org.joda.time.DateTimeField int java.util.Locale )java.lang.String"[label="1"]
"java.util.Locale"->"(static)org.joda.time.DateTimeField.getAsText(org.joda.time.DateTimeField long java.util.Locale )java.lang.String"[label="1"]
"java.util.Locale"->"(static)org.joda.time.DateTimeField.getAsText(org.joda.time.DateTimeField org.joda.time.ReadablePartial java.util.Locale )java.lang.String"[label="1"]
"java.util.Locale"->"(static)org.joda.time.DateTimeField.getMaximumShortTextLength(org.joda.time.DateTimeField java.util.Locale )int"[label="1"]
"java.util.Locale"->"(static)org.joda.time.DateTimeField.getMaximumTextLength(org.joda.time.DateTimeField java.util.Locale )int"[label="1"]
"java.util.Locale"->"(static)org.joda.time.DateTimeZone.getName(org.joda.time.DateTimeZone long java.util.Locale )java.lang.String"[label="1"]
"java.util.Locale"->"(static)org.joda.time.DateTimeZone.getShortName(org.joda.time.DateTimeZone long java.util.Locale )java.lang.String"[label="1"]
"java.util.Locale"->"(static)org.joda.time.LocalDate$Property.setCopy(org.joda.time.LocalDate$Property java.lang.String java.util.Locale )org.joda.time.LocalDate"[label="1"]
"java.util.Locale"->"(static)org.joda.time.LocalDateTime$Property.setCopy(org.joda.time.LocalDateTime$Property java.lang.String java.util.Locale )org.joda.time.LocalDateTime"[label="1"]
"java.util.Locale"->"(static)org.joda.time.LocalTime$Property.setCopy(org.joda.time.LocalTime$Property java.lang.String java.util.Locale )org.joda.time.LocalTime"[label="1"]
"java.util.Locale"->"(static)org.joda.time.MonthDay$Property.setCopy(org.joda.time.MonthDay$Property java.lang.String java.util.Locale )org.joda.time.MonthDay"[label="1"]
"java.util.Locale"->"(static)org.joda.time.MutableDateTime$Property.set(org.joda.time.MutableDateTime$Property java.lang.String java.util.Locale )org.joda.time.MutableDateTime"[label="1"]
"java.util.Locale"->"(static)org.joda.time.Partial$Property.setCopy(org.joda.time.Partial$Property java.lang.String java.util.Locale )org.joda.time.Partial"[label="1"]
"java.util.Locale"->"(static)org.joda.time.TimeOfDay$Property.setCopy(org.joda.time.TimeOfDay$Property java.lang.String java.util.Locale )org.joda.time.TimeOfDay"[label="1"]
"java.util.Locale"->"(static)org.joda.time.YearMonth$Property.setCopy(org.joda.time.YearMonth$Property java.lang.String java.util.Locale )org.joda.time.YearMonth"[label="1"]
"java.util.Locale"->"(static)org.joda.time.YearMonthDay$Property.setCopy(org.joda.time.YearMonthDay$Property java.lang.String java.util.Locale )org.joda.time.YearMonthDay"[label="1"]
"java.util.Locale"->"(static)org.joda.time.base.AbstractDateTime.toCalendar(org.joda.time.base.AbstractDateTime java.util.Locale )java.util.Calendar"[label="1"]
"java.util.Locale"->"(static)org.joda.time.chrono.BasicChronology$HalfdayField.getAsText(org.joda.time.chrono.BasicChronology$HalfdayField int java.util.Locale )java.lang.String"[label="1"]
"java.util.Locale"->"(static)org.joda.time.chrono.BasicChronology$HalfdayField.getMaximumTextLength(org.joda.time.chrono.BasicChronology$HalfdayField java.util.Locale )int"[label="1"]
"java.util.Locale"->"(static)org.joda.time.chrono.BasicSingleEraDateTimeField.getAsText(org.joda.time.chrono.BasicSingleEraDateTimeField int java.util.Locale )java.lang.String"[label="1"]
"java.util.Locale"->"(static)org.joda.time.chrono.BasicSingleEraDateTimeField.getMaximumTextLength(org.joda.time.chrono.BasicSingleEraDateTimeField java.util.Locale )int"[label="1"]
"java.util.Locale"->"(static)org.joda.time.chrono.GJChronology$CutoverField.getAsShortText(org.joda.time.chrono.GJChronology$CutoverField int java.util.Locale )java.lang.String"[label="1"]
"java.util.Locale"->"(static)org.joda.time.chrono.GJChronology$CutoverField.getAsShortText(org.joda.time.chrono.GJChronology$CutoverField long java.util.Locale )java.lang.String"[label="1"]
"java.util.Locale"->"(static)org.joda.time.chrono.GJChronology$CutoverField.getAsText(org.joda.time.chrono.GJChronology$CutoverField int java.util.Locale )java.lang.String"[label="1"]
"java.util.Locale"->"(static)org.joda.time.chrono.GJChronology$CutoverField.getAsText(org.joda.time.chrono.GJChronology$CutoverField long java.util.Locale )java.lang.String"[label="1"]
"java.util.Locale"->"(static)org.joda.time.chrono.GJChronology$CutoverField.getMaximumShortTextLength(org.joda.time.chrono.GJChronology$CutoverField java.util.Locale )int"[label="1"]
"java.util.Locale"->"(static)org.joda.time.chrono.GJChronology$CutoverField.getMaximumTextLength(org.joda.time.chrono.GJChronology$CutoverField java.util.Locale )int"[label="1"]
"java.util.Locale"->"(static)org.joda.time.chrono.GJDayOfWeekDateTimeField.getAsShortText(org.joda.time.chrono.GJDayOfWeekDateTimeField int java.util.Locale )java.lang.String"[label="1"]
"java.util.Locale"->"(static)org.joda.time.chrono.GJDayOfWeekDateTimeField.getAsText(org.joda.time.chrono.GJDayOfWeekDateTimeField int java.util.Locale )java.lang.String"[label="1"]
"java.util.Locale"->"(static)org.joda.time.chrono.GJDayOfWeekDateTimeField.getMaximumShortTextLength(org.joda.time.chrono.GJDayOfWeekDateTimeField java.util.Locale )int"[label="1"]
"java.util.Locale"->"(static)org.joda.time.chrono.GJDayOfWeekDateTimeField.getMaximumTextLength(org.joda.time.chrono.GJDayOfWeekDateTimeField java.util.Locale )int"[label="1"]
"java.util.Locale"->"(static)org.joda.time.chrono.GJEraDateTimeField.getAsText(org.joda.time.chrono.GJEraDateTimeField int java.util.Locale )java.lang.String"[label="1"]
"java.util.Locale"->"(static)org.joda.time.chrono.GJEraDateTimeField.getMaximumTextLength(org.joda.time.chrono.GJEraDateTimeField java.util.Locale )int"[label="1"]
"java.util.Locale"->"(static)org.joda.time.chrono.GJMonthOfYearDateTimeField.getAsShortText(org.joda.time.chrono.GJMonthOfYearDateTimeField int java.util.Locale )java.lang.String"[label="1"]
"java.util.Locale"->"(static)org.joda.time.chrono.GJMonthOfYearDateTimeField.getAsText(org.joda.time.chrono.GJMonthOfYearDateTimeField int java.util.Locale )java.lang.String"[label="1"]
"java.util.Locale"->"(static)org.joda.time.chrono.GJMonthOfYearDateTimeField.getMaximumShortTextLength(org.joda.time.chrono.GJMonthOfYearDateTimeField java.util.Locale )int"[label="1"]
"java.util.Locale"->"(static)org.joda.time.chrono.GJMonthOfYearDateTimeField.getMaximumTextLength(org.joda.time.chrono.GJMonthOfYearDateTimeField java.util.Locale )int"[label="1"]
"java.util.Locale"->"(static)org.joda.time.chrono.LimitChronology$LimitDateTimeField.getAsShortText(org.joda.time.chrono.LimitChronology$LimitDateTimeField long java.util.Locale )java.lang.String"[label="1"]
"java.util.Locale"->"(static)org.joda.time.chrono.LimitChronology$LimitDateTimeField.getAsText(org.joda.time.chrono.LimitChronology$LimitDateTimeField long java.util.Locale )java.lang.String"[label="1"]
"java.util.Locale"->"(static)org.joda.time.chrono.LimitChronology$LimitDateTimeField.getMaximumShortTextLength(org.joda.time.chrono.LimitChronology$LimitDateTimeField java.util.Locale )int"[label="1"]
"java.util.Locale"->"(static)org.joda.time.chrono.LimitChronology$LimitDateTimeField.getMaximumTextLength(org.joda.time.chrono.LimitChronology$LimitDateTimeField java.util.Locale )int"[label="1"]
"java.util.Locale"->"(static)org.joda.time.chrono.ZonedChronology$ZonedDateTimeField.getAsShortText(org.joda.time.chrono.ZonedChronology$ZonedDateTimeField int java.util.Locale )java.lang.String"[label="1"]
"java.util.Locale"->"(static)org.joda.time.chrono.ZonedChronology$ZonedDateTimeField.getAsShortText(org.joda.time.chrono.ZonedChronology$ZonedDateTimeField long java.util.Locale )java.lang.String"[label="1"]
"java.util.Locale"->"(static)org.joda.time.chrono.ZonedChronology$ZonedDateTimeField.getAsText(org.joda.time.chrono.ZonedChronology$ZonedDateTimeField int java.util.Locale )java.lang.String"[label="1"]
"java.util.Locale"->"(static)org.joda.time.chrono.ZonedChronology$ZonedDateTimeField.getAsText(org.joda.time.chrono.ZonedChronology$ZonedDateTimeField long java.util.Locale )java.lang.String"[label="1"]
"java.util.Locale"->"(static)org.joda.time.chrono.ZonedChronology$ZonedDateTimeField.getMaximumShortTextLength(org.joda.time.chrono.ZonedChronology$ZonedDateTimeField java.util.Locale )int"[label="1"]
"java.util.Locale"->"(static)org.joda.time.chrono.ZonedChronology$ZonedDateTimeField.getMaximumTextLength(org.joda.time.chrono.ZonedChronology$ZonedDateTimeField java.util.Locale )int"[label="1"]
"java.util.Locale"->"(static)org.joda.time.field.AbstractPartialFieldProperty.getAsShortText(org.joda.time.field.AbstractPartialFieldProperty java.util.Locale )java.lang.String"[label="1"]
"java.util.Locale"->"(static)org.joda.time.field.AbstractPartialFieldProperty.getAsText(org.joda.time.field.AbstractPartialFieldProperty java.util.Locale )java.lang.String"[label="1"]
"java.util.Locale"->"(static)org.joda.time.field.AbstractPartialFieldProperty.getMaximumShortTextLength(org.joda.time.field.AbstractPartialFieldProperty java.util.Locale )int"[label="1"]
"java.util.Locale"->"(static)org.joda.time.field.AbstractPartialFieldProperty.getMaximumTextLength(org.joda.time.field.AbstractPartialFieldProperty java.util.Locale )int"[label="1"]
"java.util.Locale"->"(static)org.joda.time.field.AbstractReadableInstantFieldProperty.getAsShortText(org.joda.time.field.AbstractReadableInstantFieldProperty java.util.Locale )java.lang.String"[label="1"]
"java.util.Locale"->"(static)org.joda.time.field.AbstractReadableInstantFieldProperty.getAsText(org.joda.time.field.AbstractReadableInstantFieldProperty java.util.Locale )java.lang.String"[label="1"]
"java.util.Locale"->"(static)org.joda.time.field.AbstractReadableInstantFieldProperty.getMaximumShortTextLength(org.joda.time.field.AbstractReadableInstantFieldProperty java.util.Locale )int"[label="1"]
"java.util.Locale"->"(static)org.joda.time.field.AbstractReadableInstantFieldProperty.getMaximumTextLength(org.joda.time.field.AbstractReadableInstantFieldProperty java.util.Locale )int"[label="1"]
"java.util.Locale"->"(static)org.joda.time.field.BaseDateTimeField.getAsShortText(org.joda.time.field.BaseDateTimeField int java.util.Locale )java.lang.String"[label="1"]
"java.util.Locale"->"(static)org.joda.time.field.BaseDateTimeField.getAsShortText(org.joda.time.field.BaseDateTimeField long java.util.Locale )java.lang.String"[label="1"]
"java.util.Locale"->"(static)org.joda.time.field.BaseDateTimeField.getAsShortText(org.joda.time.field.BaseDateTimeField org.joda.time.ReadablePartial java.util.Locale )java.lang.String"[label="1"]
"java.util.Locale"->"(static)org.joda.time.field.BaseDateTimeField.getAsText(org.joda.time.field.BaseDateTimeField int java.util.Locale )java.lang.String"[label="1"]
"java.util.Locale"->"(static)org.joda.time.field.BaseDateTimeField.getAsText(org.joda.time.field.BaseDateTimeField long java.util.Locale )java.lang.String"[label="1"]
"java.util.Locale"->"(static)org.joda.time.field.BaseDateTimeField.getAsText(org.joda.time.field.BaseDateTimeField org.joda.time.ReadablePartial java.util.Locale )java.lang.String"[label="1"]
"java.util.Locale"->"(static)org.joda.time.field.BaseDateTimeField.getMaximumShortTextLength(org.joda.time.field.BaseDateTimeField java.util.Locale )int"[label="1"]
"java.util.Locale"->"(static)org.joda.time.field.BaseDateTimeField.getMaximumTextLength(org.joda.time.field.BaseDateTimeField java.util.Locale )int"[label="1"]
"java.util.Locale"->"(static)org.joda.time.field.DelegatedDateTimeField.getAsShortText(org.joda.time.field.DelegatedDateTimeField int java.util.Locale )java.lang.String"[label="1"]
"java.util.Locale"->"(static)org.joda.time.field.DelegatedDateTimeField.getAsShortText(org.joda.time.field.DelegatedDateTimeField long java.util.Locale )java.lang.String"[label="1"]
"java.util.Locale"->"(static)org.joda.time.field.DelegatedDateTimeField.getAsShortText(org.joda.time.field.DelegatedDateTimeField org.joda.time.ReadablePartial java.util.Locale )java.lang.String"[label="1"]
"java.util.Locale"->"(static)org.joda.time.field.DelegatedDateTimeField.getAsText(org.joda.time.field.DelegatedDateTimeField int java.util.Locale )java.lang.String"[label="1"]
"java.util.Locale"->"(static)org.joda.time.field.DelegatedDateTimeField.getAsText(org.joda.time.field.DelegatedDateTimeField long java.util.Locale )java.lang.String"[label="1"]
"java.util.Locale"->"(static)org.joda.time.field.DelegatedDateTimeField.getAsText(org.joda.time.field.DelegatedDateTimeField org.joda.time.ReadablePartial java.util.Locale )java.lang.String"[label="1"]
"java.util.Locale"->"(static)org.joda.time.field.DelegatedDateTimeField.getMaximumShortTextLength(org.joda.time.field.DelegatedDateTimeField java.util.Locale )int"[label="1"]
"java.util.Locale"->"(static)org.joda.time.field.DelegatedDateTimeField.getMaximumTextLength(org.joda.time.field.DelegatedDateTimeField java.util.Locale )int"[label="1"]
"java.util.Locale"->"(static)org.joda.time.field.UnsupportedDateTimeField.getAsShortText(org.joda.time.field.UnsupportedDateTimeField int java.util.Locale )java.lang.String"[label="1"]
"java.util.Locale"->"(static)org.joda.time.field.UnsupportedDateTimeField.getAsShortText(org.joda.time.field.UnsupportedDateTimeField long java.util.Locale )java.lang.String"[label="1"]
"java.util.Locale"->"(static)org.joda.time.field.UnsupportedDateTimeField.getAsShortText(org.joda.time.field.UnsupportedDateTimeField org.joda.time.ReadablePartial java.util.Locale )java.lang.String"[label="1"]
"java.util.Locale"->"(static)org.joda.time.field.UnsupportedDateTimeField.getAsText(org.joda.time.field.UnsupportedDateTimeField int java.util.Locale )java.lang.String"[label="1"]
"java.util.Locale"->"(static)org.joda.time.field.UnsupportedDateTimeField.getAsText(org.joda.time.field.UnsupportedDateTimeField long java.util.Locale )java.lang.String"[label="1"]
"java.util.Locale"->"(static)org.joda.time.field.UnsupportedDateTimeField.getAsText(org.joda.time.field.UnsupportedDateTimeField org.joda.time.ReadablePartial java.util.Locale )java.lang.String"[label="1"]
"java.util.Locale"->"(static)org.joda.time.field.UnsupportedDateTimeField.getMaximumShortTextLength(org.joda.time.field.UnsupportedDateTimeField java.util.Locale )int"[label="1"]
"java.util.Locale"->"(static)org.joda.time.field.UnsupportedDateTimeField.getMaximumTextLength(org.joda.time.field.UnsupportedDateTimeField java.util.Locale )int"[label="1"]
"java.util.Locale"->"(static)org.joda.time.format.DateTimeFormatter.withLocale(org.joda.time.format.DateTimeFormatter java.util.Locale )org.joda.time.format.DateTimeFormatter"[label="1"]
"java.util.Locale"->"(static)org.joda.time.format.PeriodFormat$DynamicWordBased.calculatePrintedLength(org.joda.time.format.PeriodFormat$DynamicWordBased org.joda.time.ReadablePeriod java.util.Locale )int"[label="1"]
"java.util.Locale"->"(static)org.joda.time.format.PeriodFormatter.withLocale(org.joda.time.format.PeriodFormatter java.util.Locale )org.joda.time.format.PeriodFormatter"[label="1"]
"java.util.Locale"->"(static)org.joda.time.format.PeriodFormatterBuilder$Composite.calculatePrintedLength(org.joda.time.format.PeriodFormatterBuilder$Composite org.joda.time.ReadablePeriod java.util.Locale )int"[label="1"]
"java.util.Locale"->"(static)org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.calculatePrintedLength(org.joda.time.format.PeriodFormatterBuilder$FieldFormatter org.joda.time.ReadablePeriod java.util.Locale )int"[label="1"]
"java.util.Locale"->"(static)org.joda.time.format.PeriodFormatterBuilder$Literal.calculatePrintedLength(org.joda.time.format.PeriodFormatterBuilder$Literal org.joda.time.ReadablePeriod java.util.Locale )int"[label="1"]
"java.util.Locale"->"(static)org.joda.time.format.PeriodFormatterBuilder$Separator.calculatePrintedLength(org.joda.time.format.PeriodFormatterBuilder$Separator org.joda.time.ReadablePeriod java.util.Locale )int"[label="1"]
"java.util.Locale"->"(static)org.joda.time.format.PeriodPrinter.calculatePrintedLength(org.joda.time.format.PeriodPrinter org.joda.time.ReadablePeriod java.util.Locale )int"[label="1"]
"java.util.Locale"->"org.joda.time.DateTimeUtils.getDateFormatSymbols(java.util.Locale )java.text.DateFormatSymbols"[label="1"]
"java.util.Locale"->"org.joda.time.format.DateTimeFormat.patternForStyle(java.lang.String java.util.Locale )java.lang.String"[label="1"]
"java.util.Locale"->"org.joda.time.format.PeriodFormat.wordBased(java.util.Locale )org.joda.time.format.PeriodFormatter"[label="1"]
"java.util.Map"->"(static)org.joda.time.format.DateTimeFormatterBuilder.appendTimeZoneName(org.joda.time.format.DateTimeFormatterBuilder java.util.Map )org.joda.time.format.DateTimeFormatterBuilder"[label="1"]
"java.util.Map"->"(static)org.joda.time.format.DateTimeFormatterBuilder.appendTimeZoneShortName(org.joda.time.format.DateTimeFormatterBuilder java.util.Map )org.joda.time.format.DateTimeFormatterBuilder"[label="1"]
"java.util.TimeZone"->"(static)org.joda.time.LocalDateTime.toDate(org.joda.time.LocalDateTime java.util.TimeZone )java.util.Date"[label="1"]
"java.util.TimeZone"->"org.joda.time.DateTimeZone.forTimeZone(java.util.TimeZone )org.joda.time.DateTimeZone"[label="1"]
"long"->"(static)org.joda.time.Chronology.get(org.joda.time.Chronology org.joda.time.ReadablePartial long )int[]"[label="1"]
"long"->"(static)org.joda.time.Chronology.get(org.joda.time.Chronology org.joda.time.ReadablePeriod long )int[]"[label="1"]
"long"->"(static)org.joda.time.Chronology.set(org.joda.time.Chronology org.joda.time.ReadablePartial long )long"[label="1"]
"long"->"(static)org.joda.time.DateMidnight$Property.addToCopy(org.joda.time.DateMidnight$Property long )org.joda.time.DateMidnight"[label="1"]
"long"->"(static)org.joda.time.DateMidnight.minus(org.joda.time.DateMidnight long )org.joda.time.DateMidnight"[label="1"]
"long"->"(static)org.joda.time.DateMidnight.plus(org.joda.time.DateMidnight long )org.joda.time.DateMidnight"[label="1"]
"long"->"(static)org.joda.time.DateMidnight.withDurationAdded(org.joda.time.DateMidnight long int )org.joda.time.DateMidnight"[label="1"]
"long"->"(static)org.joda.time.DateMidnight.withMillis(org.joda.time.DateMidnight long )org.joda.time.DateMidnight"[label="1"]
"long"->"(static)org.joda.time.DateTime$Property.addToCopy(org.joda.time.DateTime$Property long )org.joda.time.DateTime"[label="1"]
"long"->"(static)org.joda.time.DateTime.minus(org.joda.time.DateTime long )org.joda.time.DateTime"[label="1"]
"long"->"(static)org.joda.time.DateTime.plus(org.joda.time.DateTime long )org.joda.time.DateTime"[label="1"]
"long"->"(static)org.joda.time.DateTime.withDurationAdded(org.joda.time.DateTime long int )org.joda.time.DateTime"[label="1"]
"long"->"(static)org.joda.time.DateTime.withMillis(org.joda.time.DateTime long )org.joda.time.DateTime"[label="1"]
"long"->"(static)org.joda.time.DateTimeField.addWrapField(org.joda.time.DateTimeField long int )long"[label="1"]
"long"->"(static)org.joda.time.DateTimeField.get(org.joda.time.DateTimeField long )int"[label="1"]
"long"->"(static)org.joda.time.DateTimeField.getAsShortText(org.joda.time.DateTimeField long )java.lang.String"[label="1"]
"long"->"(static)org.joda.time.DateTimeField.getAsShortText(org.joda.time.DateTimeField long java.util.Locale )java.lang.String"[label="1"]
"long"->"(static)org.joda.time.DateTimeField.getAsText(org.joda.time.DateTimeField long )java.lang.String"[label="1"]
"long"->"(static)org.joda.time.DateTimeField.getAsText(org.joda.time.DateTimeField long java.util.Locale )java.lang.String"[label="1"]
"long"->"(static)org.joda.time.DateTimeField.getDifference(org.joda.time.DateTimeField long long )int"[label="2"]
"long"->"(static)org.joda.time.DateTimeField.getDifferenceAsLong(org.joda.time.DateTimeField long long )long"[label="2"]
"long"->"(static)org.joda.time.DateTimeField.getLeapAmount(org.joda.time.DateTimeField long )int"[label="1"]
"long"->"(static)org.joda.time.DateTimeField.getMaximumValue(org.joda.time.DateTimeField long )int"[label="1"]
"long"->"(static)org.joda.time.DateTimeField.getMinimumValue(org.joda.time.DateTimeField long )int"[label="1"]
"long"->"(static)org.joda.time.DateTimeField.isLeap(org.joda.time.DateTimeField long )boolean"[label="1"]
"long"->"(static)org.joda.time.DateTimeField.remainder(org.joda.time.DateTimeField long )long"[label="1"]
"long"->"(static)org.joda.time.DateTimeField.roundCeiling(org.joda.time.DateTimeField long )long"[label="1"]
"long"->"(static)org.joda.time.DateTimeField.roundFloor(org.joda.time.DateTimeField long )long"[label="1"]
"long"->"(static)org.joda.time.DateTimeField.roundHalfCeiling(org.joda.time.DateTimeField long )long"[label="1"]
"long"->"(static)org.joda.time.DateTimeField.roundHalfEven(org.joda.time.DateTimeField long )long"[label="1"]
"long"->"(static)org.joda.time.DateTimeField.roundHalfFloor(org.joda.time.DateTimeField long )long"[label="1"]
"long"->"(static)org.joda.time.DateTimeField.set(org.joda.time.DateTimeField long int )long"[label="1"]
"long"->"(static)org.joda.time.DateTimeField.set(org.joda.time.DateTimeField long java.lang.String )long"[label="1"]
"long"->"(static)org.joda.time.DateTimeZone.adjustOffset(org.joda.time.DateTimeZone long boolean )long"[label="1"]
"long"->"(static)org.joda.time.DateTimeZone.convertLocalToUTC(org.joda.time.DateTimeZone long boolean )long"[label="1"]
"long"->"(static)org.joda.time.DateTimeZone.convertUTCToLocal(org.joda.time.DateTimeZone long )long"[label="1"]
"long"->"(static)org.joda.time.DateTimeZone.getMillisKeepLocal(org.joda.time.DateTimeZone org.joda.time.DateTimeZone long )long"[label="1"]
"long"->"(static)org.joda.time.DateTimeZone.getName(org.joda.time.DateTimeZone long )java.lang.String"[label="1"]
"long"->"(static)org.joda.time.DateTimeZone.getName(org.joda.time.DateTimeZone long java.util.Locale )java.lang.String"[label="1"]
"long"->"(static)org.joda.time.DateTimeZone.getNameKey(org.joda.time.DateTimeZone long )java.lang.String"[label="1"]
"long"->"(static)org.joda.time.DateTimeZone.getOffset(org.joda.time.DateTimeZone long )int"[label="1"]
"long"->"(static)org.joda.time.DateTimeZone.getOffsetFromLocal(org.joda.time.DateTimeZone long )int"[label="1"]
"long"->"(static)org.joda.time.DateTimeZone.getShortName(org.joda.time.DateTimeZone long )java.lang.String"[label="1"]
"long"->"(static)org.joda.time.DateTimeZone.getShortName(org.joda.time.DateTimeZone long java.util.Locale )java.lang.String"[label="1"]
"long"->"(static)org.joda.time.DateTimeZone.getStandardOffset(org.joda.time.DateTimeZone long )int"[label="1"]
"long"->"(static)org.joda.time.DateTimeZone.isStandardOffset(org.joda.time.DateTimeZone long )boolean"[label="1"]
"long"->"(static)org.joda.time.DateTimeZone.nextTransition(org.joda.time.DateTimeZone long )long"[label="1"]
"long"->"(static)org.joda.time.DateTimeZone.previousTransition(org.joda.time.DateTimeZone long )long"[label="1"]
"long"->"(static)org.joda.time.Duration.dividedBy(org.joda.time.Duration long )org.joda.time.Duration"[label="1"]
"long"->"(static)org.joda.time.Duration.minus(org.joda.time.Duration long )org.joda.time.Duration"[label="1"]
"long"->"(static)org.joda.time.Duration.multipliedBy(org.joda.time.Duration long )org.joda.time.Duration"[label="1"]
"long"->"(static)org.joda.time.Duration.plus(org.joda.time.Duration long )org.joda.time.Duration"[label="1"]
"long"->"(static)org.joda.time.Duration.withDurationAdded(org.joda.time.Duration long int )org.joda.time.Duration"[label="1"]
"long"->"(static)org.joda.time.Duration.withMillis(org.joda.time.Duration long )org.joda.time.Duration"[label="1"]
"long"->"(static)org.joda.time.DurationField.getDifference(org.joda.time.DurationField long long )int"[label="2"]
"long"->"(static)org.joda.time.DurationField.getDifferenceAsLong(org.joda.time.DurationField long long )long"[label="2"]
"long"->"(static)org.joda.time.DurationField.getMillis(org.joda.time.DurationField int long )long"[label="1"]
"long"->"(static)org.joda.time.DurationField.getMillis(org.joda.time.DurationField long )long"[label="1"]
"long"->"(static)org.joda.time.DurationField.getMillis(org.joda.time.DurationField long long )long"[label="2"]
"long"->"(static)org.joda.time.DurationField.getValue(org.joda.time.DurationField long )int"[label="1"]
"long"->"(static)org.joda.time.DurationField.getValue(org.joda.time.DurationField long long )int"[label="2"]
"long"->"(static)org.joda.time.DurationField.getValueAsLong(org.joda.time.DurationField long )long"[label="1"]
"long"->"(static)org.joda.time.DurationField.getValueAsLong(org.joda.time.DurationField long long )long"[label="2"]
"long"->"(static)org.joda.time.DurationField.subtract(org.joda.time.DurationField long int )long"[label="1"]
"long"->"(static)org.joda.time.DurationField.subtract(org.joda.time.DurationField long long )long"[label="2"]
"long"->"(static)org.joda.time.Instant.minus(org.joda.time.Instant long )org.joda.time.Instant"[label="1"]
"long"->"(static)org.joda.time.Instant.plus(org.joda.time.Instant long )org.joda.time.Instant"[label="1"]
"long"->"(static)org.joda.time.Instant.withDurationAdded(org.joda.time.Instant long int )org.joda.time.Instant"[label="1"]
"long"->"(static)org.joda.time.Instant.withMillis(org.joda.time.Instant long )org.joda.time.Instant"[label="1"]
"long"->"(static)org.joda.time.Interval.withEndMillis(org.joda.time.Interval long )org.joda.time.Interval"[label="1"]
"long"->"(static)org.joda.time.Interval.withStartMillis(org.joda.time.Interval long )org.joda.time.Interval"[label="1"]
"long"->"(static)org.joda.time.LocalDateTime$Property.addToCopy(org.joda.time.LocalDateTime$Property long )org.joda.time.LocalDateTime"[label="1"]
"long"->"(static)org.joda.time.LocalTime$Property.addCopy(org.joda.time.LocalTime$Property long )org.joda.time.LocalTime"[label="1"]
"long"->"(static)org.joda.time.UTCDateTimeZone.getNameKey(org.joda.time.UTCDateTimeZone long )java.lang.String"[label="1"]
"long"->"(static)org.joda.time.UTCDateTimeZone.getOffset(org.joda.time.UTCDateTimeZone long )int"[label="1"]
"long"->"(static)org.joda.time.UTCDateTimeZone.getOffsetFromLocal(org.joda.time.UTCDateTimeZone long )int"[label="1"]
"long"->"(static)org.joda.time.UTCDateTimeZone.getStandardOffset(org.joda.time.UTCDateTimeZone long )int"[label="1"]
"long"->"(static)org.joda.time.UTCDateTimeZone.nextTransition(org.joda.time.UTCDateTimeZone long )long"[label="1"]
"long"->"(static)org.joda.time.UTCDateTimeZone.previousTransition(org.joda.time.UTCDateTimeZone long )long"[label="1"]
"long"->"(static)org.joda.time.base.AbstractInstant.isAfter(org.joda.time.base.AbstractInstant long )boolean"[label="1"]
"long"->"(static)org.joda.time.base.AbstractInstant.isBefore(org.joda.time.base.AbstractInstant long )boolean"[label="1"]
"long"->"(static)org.joda.time.base.AbstractInstant.isEqual(org.joda.time.base.AbstractInstant long )boolean"[label="1"]
"long"->"(static)org.joda.time.base.AbstractInterval.isAfter(org.joda.time.base.AbstractInterval long )boolean"[label="1"]
"long"->"(static)org.joda.time.base.AbstractInterval.isBefore(org.joda.time.base.AbstractInterval long )boolean"[label="1"]
"long"->"(static)org.joda.time.chrono.BaseChronology.get(org.joda.time.chrono.BaseChronology org.joda.time.ReadablePartial long )int[]"[label="1"]
"long"->"(static)org.joda.time.chrono.BaseChronology.get(org.joda.time.chrono.BaseChronology org.joda.time.ReadablePeriod long )int[]"[label="1"]
"long"->"(static)org.joda.time.chrono.BaseChronology.set(org.joda.time.chrono.BaseChronology org.joda.time.ReadablePartial long )long"[label="1"]
"long"->"(static)org.joda.time.chrono.BasicDayOfMonthDateTimeField.get(org.joda.time.chrono.BasicDayOfMonthDateTimeField long )int"[label="1"]
"long"->"(static)org.joda.time.chrono.BasicDayOfMonthDateTimeField.getMaximumValue(org.joda.time.chrono.BasicDayOfMonthDateTimeField long )int"[label="1"]
"long"->"(static)org.joda.time.chrono.BasicDayOfMonthDateTimeField.isLeap(org.joda.time.chrono.BasicDayOfMonthDateTimeField long )boolean"[label="1"]
"long"->"(static)org.joda.time.chrono.BasicDayOfYearDateTimeField.get(org.joda.time.chrono.BasicDayOfYearDateTimeField long )int"[label="1"]
"long"->"(static)org.joda.time.chrono.BasicDayOfYearDateTimeField.getMaximumValue(org.joda.time.chrono.BasicDayOfYearDateTimeField long )int"[label="1"]
"long"->"(static)org.joda.time.chrono.BasicDayOfYearDateTimeField.isLeap(org.joda.time.chrono.BasicDayOfYearDateTimeField long )boolean"[label="1"]
"long"->"(static)org.joda.time.chrono.BasicMonthOfYearDateTimeField.addWrapField(org.joda.time.chrono.BasicMonthOfYearDateTimeField long int )long"[label="1"]
"long"->"(static)org.joda.time.chrono.BasicMonthOfYearDateTimeField.get(org.joda.time.chrono.BasicMonthOfYearDateTimeField long )int"[label="1"]
"long"->"(static)org.joda.time.chrono.BasicMonthOfYearDateTimeField.getDifferenceAsLong(org.joda.time.chrono.BasicMonthOfYearDateTimeField long long )long"[label="2"]
"long"->"(static)org.joda.time.chrono.BasicMonthOfYearDateTimeField.getLeapAmount(org.joda.time.chrono.BasicMonthOfYearDateTimeField long )int"[label="1"]
"long"->"(static)org.joda.time.chrono.BasicMonthOfYearDateTimeField.isLeap(org.joda.time.chrono.BasicMonthOfYearDateTimeField long )boolean"[label="1"]
"long"->"(static)org.joda.time.chrono.BasicMonthOfYearDateTimeField.remainder(org.joda.time.chrono.BasicMonthOfYearDateTimeField long )long"[label="1"]
"long"->"(static)org.joda.time.chrono.BasicMonthOfYearDateTimeField.roundFloor(org.joda.time.chrono.BasicMonthOfYearDateTimeField long )long"[label="1"]
"long"->"(static)org.joda.time.chrono.BasicMonthOfYearDateTimeField.set(org.joda.time.chrono.BasicMonthOfYearDateTimeField long int )long"[label="1"]
"long"->"(static)org.joda.time.chrono.BasicSingleEraDateTimeField.get(org.joda.time.chrono.BasicSingleEraDateTimeField long )int"[label="1"]
"long"->"(static)org.joda.time.chrono.BasicSingleEraDateTimeField.roundCeiling(org.joda.time.chrono.BasicSingleEraDateTimeField long )long"[label="1"]
"long"->"(static)org.joda.time.chrono.BasicSingleEraDateTimeField.roundFloor(org.joda.time.chrono.BasicSingleEraDateTimeField long )long"[label="1"]
"long"->"(static)org.joda.time.chrono.BasicSingleEraDateTimeField.roundHalfCeiling(org.joda.time.chrono.BasicSingleEraDateTimeField long )long"[label="1"]
"long"->"(static)org.joda.time.chrono.BasicSingleEraDateTimeField.roundHalfEven(org.joda.time.chrono.BasicSingleEraDateTimeField long )long"[label="1"]
"long"->"(static)org.joda.time.chrono.BasicSingleEraDateTimeField.roundHalfFloor(org.joda.time.chrono.BasicSingleEraDateTimeField long )long"[label="1"]
"long"->"(static)org.joda.time.chrono.BasicSingleEraDateTimeField.set(org.joda.time.chrono.BasicSingleEraDateTimeField long int )long"[label="1"]
"long"->"(static)org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField.get(org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField long )int"[label="1"]
"long"->"(static)org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField.getMaximumValue(org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField long )int"[label="1"]
"long"->"(static)org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField.remainder(org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField long )long"[label="1"]
"long"->"(static)org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField.roundCeiling(org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField long )long"[label="1"]
"long"->"(static)org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField.roundFloor(org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField long )long"[label="1"]
"long"->"(static)org.joda.time.chrono.BasicWeekyearDateTimeField.addWrapField(org.joda.time.chrono.BasicWeekyearDateTimeField long int )long"[label="1"]
"long"->"(static)org.joda.time.chrono.BasicWeekyearDateTimeField.get(org.joda.time.chrono.BasicWeekyearDateTimeField long )int"[label="1"]
"long"->"(static)org.joda.time.chrono.BasicWeekyearDateTimeField.getDifferenceAsLong(org.joda.time.chrono.BasicWeekyearDateTimeField long long )long"[label="2"]
"long"->"(static)org.joda.time.chrono.BasicWeekyearDateTimeField.getLeapAmount(org.joda.time.chrono.BasicWeekyearDateTimeField long )int"[label="1"]
"long"->"(static)org.joda.time.chrono.BasicWeekyearDateTimeField.isLeap(org.joda.time.chrono.BasicWeekyearDateTimeField long )boolean"[label="1"]
"long"->"(static)org.joda.time.chrono.BasicWeekyearDateTimeField.remainder(org.joda.time.chrono.BasicWeekyearDateTimeField long )long"[label="1"]
"long"->"(static)org.joda.time.chrono.BasicWeekyearDateTimeField.roundFloor(org.joda.time.chrono.BasicWeekyearDateTimeField long )long"[label="1"]
"long"->"(static)org.joda.time.chrono.BasicWeekyearDateTimeField.set(org.joda.time.chrono.BasicWeekyearDateTimeField long int )long"[label="1"]
"long"->"(static)org.joda.time.chrono.BasicYearDateTimeField.addWrapField(org.joda.time.chrono.BasicYearDateTimeField long int )long"[label="1"]
"long"->"(static)org.joda.time.chrono.BasicYearDateTimeField.get(org.joda.time.chrono.BasicYearDateTimeField long )int"[label="1"]
"long"->"(static)org.joda.time.chrono.BasicYearDateTimeField.getDifferenceAsLong(org.joda.time.chrono.BasicYearDateTimeField long long )long"[label="2"]
"long"->"(static)org.joda.time.chrono.BasicYearDateTimeField.getLeapAmount(org.joda.time.chrono.BasicYearDateTimeField long )int"[label="1"]
"long"->"(static)org.joda.time.chrono.BasicYearDateTimeField.isLeap(org.joda.time.chrono.BasicYearDateTimeField long )boolean"[label="1"]
"long"->"(static)org.joda.time.chrono.BasicYearDateTimeField.remainder(org.joda.time.chrono.BasicYearDateTimeField long )long"[label="1"]
"long"->"(static)org.joda.time.chrono.BasicYearDateTimeField.roundCeiling(org.joda.time.chrono.BasicYearDateTimeField long )long"[label="1"]
"long"->"(static)org.joda.time.chrono.BasicYearDateTimeField.roundFloor(org.joda.time.chrono.BasicYearDateTimeField long )long"[label="1"]
"long"->"(static)org.joda.time.chrono.BasicYearDateTimeField.set(org.joda.time.chrono.BasicYearDateTimeField long int )long"[label="1"]
"long"->"(static)org.joda.time.chrono.GJChronology$CutoverField.get(org.joda.time.chrono.GJChronology$CutoverField long )int"[label="1"]
"long"->"(static)org.joda.time.chrono.GJChronology$CutoverField.getAsShortText(org.joda.time.chrono.GJChronology$CutoverField long java.util.Locale )java.lang.String"[label="1"]
"long"->"(static)org.joda.time.chrono.GJChronology$CutoverField.getAsText(org.joda.time.chrono.GJChronology$CutoverField long java.util.Locale )java.lang.String"[label="1"]
"long"->"(static)org.joda.time.chrono.GJChronology$CutoverField.getDifference(org.joda.time.chrono.GJChronology$CutoverField long long )int"[label="2"]
"long"->"(static)org.joda.time.chrono.GJChronology$CutoverField.getDifferenceAsLong(org.joda.time.chrono.GJChronology$CutoverField long long )long"[label="2"]
"long"->"(static)org.joda.time.chrono.GJChronology$CutoverField.getLeapAmount(org.joda.time.chrono.GJChronology$CutoverField long )int"[label="1"]
"long"->"(static)org.joda.time.chrono.GJChronology$CutoverField.getMaximumValue(org.joda.time.chrono.GJChronology$CutoverField long )int"[label="1"]
"long"->"(static)org.joda.time.chrono.GJChronology$CutoverField.getMinimumValue(org.joda.time.chrono.GJChronology$CutoverField long )int"[label="1"]
"long"->"(static)org.joda.time.chrono.GJChronology$CutoverField.isLeap(org.joda.time.chrono.GJChronology$CutoverField long )boolean"[label="1"]
"long"->"(static)org.joda.time.chrono.GJChronology$CutoverField.roundCeiling(org.joda.time.chrono.GJChronology$CutoverField long )long"[label="1"]
"long"->"(static)org.joda.time.chrono.GJChronology$CutoverField.roundFloor(org.joda.time.chrono.GJChronology$CutoverField long )long"[label="1"]
"long"->"(static)org.joda.time.chrono.GJChronology$CutoverField.set(org.joda.time.chrono.GJChronology$CutoverField long int )long"[label="1"]
"long"->"(static)org.joda.time.chrono.GJChronology$ImpreciseCutoverField.getDifference(org.joda.time.chrono.GJChronology$ImpreciseCutoverField long long )int"[label="2"]
"long"->"(static)org.joda.time.chrono.GJChronology$ImpreciseCutoverField.getDifferenceAsLong(org.joda.time.chrono.GJChronology$ImpreciseCutoverField long long )long"[label="2"]
"long"->"(static)org.joda.time.chrono.GJChronology$ImpreciseCutoverField.getMaximumValue(org.joda.time.chrono.GJChronology$ImpreciseCutoverField long )int"[label="1"]
"long"->"(static)org.joda.time.chrono.GJChronology$ImpreciseCutoverField.getMinimumValue(org.joda.time.chrono.GJChronology$ImpreciseCutoverField long )int"[label="1"]
"long"->"(static)org.joda.time.chrono.GJChronology$LinkedDurationField.getDifference(org.joda.time.chrono.GJChronology$LinkedDurationField long long )int"[label="2"]
"long"->"(static)org.joda.time.chrono.GJChronology$LinkedDurationField.getDifferenceAsLong(org.joda.time.chrono.GJChronology$LinkedDurationField long long )long"[label="2"]
"long"->"(static)org.joda.time.chrono.GJDayOfWeekDateTimeField.get(org.joda.time.chrono.GJDayOfWeekDateTimeField long )int"[label="1"]
"long"->"(static)org.joda.time.chrono.GJEraDateTimeField.get(org.joda.time.chrono.GJEraDateTimeField long )int"[label="1"]
"long"->"(static)org.joda.time.chrono.GJEraDateTimeField.roundCeiling(org.joda.time.chrono.GJEraDateTimeField long )long"[label="1"]
"long"->"(static)org.joda.time.chrono.GJEraDateTimeField.roundFloor(org.joda.time.chrono.GJEraDateTimeField long )long"[label="1"]
"long"->"(static)org.joda.time.chrono.GJEraDateTimeField.roundHalfCeiling(org.joda.time.chrono.GJEraDateTimeField long )long"[label="1"]
"long"->"(static)org.joda.time.chrono.GJEraDateTimeField.roundHalfEven(org.joda.time.chrono.GJEraDateTimeField long )long"[label="1"]
"long"->"(static)org.joda.time.chrono.GJEraDateTimeField.roundHalfFloor(org.joda.time.chrono.GJEraDateTimeField long )long"[label="1"]
"long"->"(static)org.joda.time.chrono.GJEraDateTimeField.set(org.joda.time.chrono.GJEraDateTimeField long int )long"[label="1"]
"long"->"(static)org.joda.time.chrono.GJYearOfEraDateTimeField.addWrapField(org.joda.time.chrono.GJYearOfEraDateTimeField long int )long"[label="1"]
"long"->"(static)org.joda.time.chrono.GJYearOfEraDateTimeField.get(org.joda.time.chrono.GJYearOfEraDateTimeField long )int"[label="1"]
"long"->"(static)org.joda.time.chrono.GJYearOfEraDateTimeField.getDifference(org.joda.time.chrono.GJYearOfEraDateTimeField long long )int"[label="2"]
"long"->"(static)org.joda.time.chrono.GJYearOfEraDateTimeField.getDifferenceAsLong(org.joda.time.chrono.GJYearOfEraDateTimeField long long )long"[label="2"]
"long"->"(static)org.joda.time.chrono.GJYearOfEraDateTimeField.remainder(org.joda.time.chrono.GJYearOfEraDateTimeField long )long"[label="1"]
"long"->"(static)org.joda.time.chrono.GJYearOfEraDateTimeField.roundCeiling(org.joda.time.chrono.GJYearOfEraDateTimeField long )long"[label="1"]
"long"->"(static)org.joda.time.chrono.GJYearOfEraDateTimeField.roundFloor(org.joda.time.chrono.GJYearOfEraDateTimeField long )long"[label="1"]
"long"->"(static)org.joda.time.chrono.GJYearOfEraDateTimeField.set(org.joda.time.chrono.GJYearOfEraDateTimeField long int )long"[label="1"]
"long"->"(static)org.joda.time.chrono.ISOYearOfEraDateTimeField.addWrapField(org.joda.time.chrono.ISOYearOfEraDateTimeField long int )long"[label="1"]
"long"->"(static)org.joda.time.chrono.ISOYearOfEraDateTimeField.get(org.joda.time.chrono.ISOYearOfEraDateTimeField long )int"[label="1"]
"long"->"(static)org.joda.time.chrono.ISOYearOfEraDateTimeField.getDifference(org.joda.time.chrono.ISOYearOfEraDateTimeField long long )int"[label="2"]
"long"->"(static)org.joda.time.chrono.ISOYearOfEraDateTimeField.getDifferenceAsLong(org.joda.time.chrono.ISOYearOfEraDateTimeField long long )long"[label="2"]
"long"->"(static)org.joda.time.chrono.ISOYearOfEraDateTimeField.remainder(org.joda.time.chrono.ISOYearOfEraDateTimeField long )long"[label="1"]
"long"->"(static)org.joda.time.chrono.ISOYearOfEraDateTimeField.roundCeiling(org.joda.time.chrono.ISOYearOfEraDateTimeField long )long"[label="1"]
"long"->"(static)org.joda.time.chrono.ISOYearOfEraDateTimeField.roundFloor(org.joda.time.chrono.ISOYearOfEraDateTimeField long )long"[label="1"]
"long"->"(static)org.joda.time.chrono.ISOYearOfEraDateTimeField.set(org.joda.time.chrono.ISOYearOfEraDateTimeField long int )long"[label="1"]
"long"->"(static)org.joda.time.chrono.LimitChronology$LimitDateTimeField.addWrapField(org.joda.time.chrono.LimitChronology$LimitDateTimeField long int )long"[label="1"]
"long"->"(static)org.joda.time.chrono.LimitChronology$LimitDateTimeField.get(org.joda.time.chrono.LimitChronology$LimitDateTimeField long )int"[label="1"]
"long"->"(static)org.joda.time.chrono.LimitChronology$LimitDateTimeField.getAsShortText(org.joda.time.chrono.LimitChronology$LimitDateTimeField long java.util.Locale )java.lang.String"[label="1"]
"long"->"(static)org.joda.time.chrono.LimitChronology$LimitDateTimeField.getAsText(org.joda.time.chrono.LimitChronology$LimitDateTimeField long java.util.Locale )java.lang.String"[label="1"]
"long"->"(static)org.joda.time.chrono.LimitChronology$LimitDateTimeField.getDifference(org.joda.time.chrono.LimitChronology$LimitDateTimeField long long )int"[label="2"]
"long"->"(static)org.joda.time.chrono.LimitChronology$LimitDateTimeField.getDifferenceAsLong(org.joda.time.chrono.LimitChronology$LimitDateTimeField long long )long"[label="2"]
"long"->"(static)org.joda.time.chrono.LimitChronology$LimitDateTimeField.getLeapAmount(org.joda.time.chrono.LimitChronology$LimitDateTimeField long )int"[label="1"]
"long"->"(static)org.joda.time.chrono.LimitChronology$LimitDateTimeField.getMaximumValue(org.joda.time.chrono.LimitChronology$LimitDateTimeField long )int"[label="1"]
"long"->"(static)org.joda.time.chrono.LimitChronology$LimitDateTimeField.getMinimumValue(org.joda.time.chrono.LimitChronology$LimitDateTimeField long )int"[label="1"]
"long"->"(static)org.joda.time.chrono.LimitChronology$LimitDateTimeField.isLeap(org.joda.time.chrono.LimitChronology$LimitDateTimeField long )boolean"[label="1"]
"long"->"(static)org.joda.time.chrono.LimitChronology$LimitDateTimeField.remainder(org.joda.time.chrono.LimitChronology$LimitDateTimeField long )long"[label="1"]
"long"->"(static)org.joda.time.chrono.LimitChronology$LimitDateTimeField.roundCeiling(org.joda.time.chrono.LimitChronology$LimitDateTimeField long )long"[label="1"]
"long"->"(static)org.joda.time.chrono.LimitChronology$LimitDateTimeField.roundFloor(org.joda.time.chrono.LimitChronology$LimitDateTimeField long )long"[label="1"]
"long"->"(static)org.joda.time.chrono.LimitChronology$LimitDateTimeField.roundHalfCeiling(org.joda.time.chrono.LimitChronology$LimitDateTimeField long )long"[label="1"]
"long"->"(static)org.joda.time.chrono.LimitChronology$LimitDateTimeField.roundHalfEven(org.joda.time.chrono.LimitChronology$LimitDateTimeField long )long"[label="1"]
"long"->"(static)org.joda.time.chrono.LimitChronology$LimitDateTimeField.roundHalfFloor(org.joda.time.chrono.LimitChronology$LimitDateTimeField long )long"[label="1"]
"long"->"(static)org.joda.time.chrono.LimitChronology$LimitDateTimeField.set(org.joda.time.chrono.LimitChronology$LimitDateTimeField long int )long"[label="1"]
"long"->"(static)org.joda.time.chrono.LimitChronology$LimitDurationField.getDifference(org.joda.time.chrono.LimitChronology$LimitDurationField long long )int"[label="2"]
"long"->"(static)org.joda.time.chrono.LimitChronology$LimitDurationField.getDifferenceAsLong(org.joda.time.chrono.LimitChronology$LimitDurationField long long )long"[label="2"]
"long"->"(static)org.joda.time.chrono.LimitChronology$LimitDurationField.getMillis(org.joda.time.chrono.LimitChronology$LimitDurationField int long )long"[label="1"]
"long"->"(static)org.joda.time.chrono.LimitChronology$LimitDurationField.getMillis(org.joda.time.chrono.LimitChronology$LimitDurationField long long )long"[label="2"]
"long"->"(static)org.joda.time.chrono.LimitChronology$LimitDurationField.getValue(org.joda.time.chrono.LimitChronology$LimitDurationField long long )int"[label="2"]
"long"->"(static)org.joda.time.chrono.LimitChronology$LimitDurationField.getValueAsLong(org.joda.time.chrono.LimitChronology$LimitDurationField long long )long"[label="2"]
"long"->"(static)org.joda.time.chrono.ZonedChronology$ZonedDateTimeField.addWrapField(org.joda.time.chrono.ZonedChronology$ZonedDateTimeField long int )long"[label="1"]
"long"->"(static)org.joda.time.chrono.ZonedChronology$ZonedDateTimeField.get(org.joda.time.chrono.ZonedChronology$ZonedDateTimeField long )int"[label="1"]
"long"->"(static)org.joda.time.chrono.ZonedChronology$ZonedDateTimeField.getAsShortText(org.joda.time.chrono.ZonedChronology$ZonedDateTimeField long java.util.Locale )java.lang.String"[label="1"]
"long"->"(static)org.joda.time.chrono.ZonedChronology$ZonedDateTimeField.getAsText(org.joda.time.chrono.ZonedChronology$ZonedDateTimeField long java.util.Locale )java.lang.String"[label="1"]
"long"->"(static)org.joda.time.chrono.ZonedChronology$ZonedDateTimeField.getDifference(org.joda.time.chrono.ZonedChronology$ZonedDateTimeField long long )int"[label="2"]
"long"->"(static)org.joda.time.chrono.ZonedChronology$ZonedDateTimeField.getDifferenceAsLong(org.joda.time.chrono.ZonedChronology$ZonedDateTimeField long long )long"[label="2"]
"long"->"(static)org.joda.time.chrono.ZonedChronology$ZonedDateTimeField.getLeapAmount(org.joda.time.chrono.ZonedChronology$ZonedDateTimeField long )int"[label="1"]
"long"->"(static)org.joda.time.chrono.ZonedChronology$ZonedDateTimeField.getMaximumValue(org.joda.time.chrono.ZonedChronology$ZonedDateTimeField long )int"[label="1"]
"long"->"(static)org.joda.time.chrono.ZonedChronology$ZonedDateTimeField.getMinimumValue(org.joda.time.chrono.ZonedChronology$ZonedDateTimeField long )int"[label="1"]
"long"->"(static)org.joda.time.chrono.ZonedChronology$ZonedDateTimeField.isLeap(org.joda.time.chrono.ZonedChronology$ZonedDateTimeField long )boolean"[label="1"]
"long"->"(static)org.joda.time.chrono.ZonedChronology$ZonedDateTimeField.remainder(org.joda.time.chrono.ZonedChronology$ZonedDateTimeField long )long"[label="1"]
"long"->"(static)org.joda.time.chrono.ZonedChronology$ZonedDateTimeField.roundCeiling(org.joda.time.chrono.ZonedChronology$ZonedDateTimeField long )long"[label="1"]
"long"->"(static)org.joda.time.chrono.ZonedChronology$ZonedDateTimeField.roundFloor(org.joda.time.chrono.ZonedChronology$ZonedDateTimeField long )long"[label="1"]
"long"->"(static)org.joda.time.chrono.ZonedChronology$ZonedDateTimeField.set(org.joda.time.chrono.ZonedChronology$ZonedDateTimeField long int )long"[label="1"]
"long"->"(static)org.joda.time.chrono.ZonedChronology$ZonedDurationField.getDifference(org.joda.time.chrono.ZonedChronology$ZonedDurationField long long )int"[label="2"]
"long"->"(static)org.joda.time.chrono.ZonedChronology$ZonedDurationField.getDifferenceAsLong(org.joda.time.chrono.ZonedChronology$ZonedDurationField long long )long"[label="2"]
"long"->"(static)org.joda.time.chrono.ZonedChronology$ZonedDurationField.getMillis(org.joda.time.chrono.ZonedChronology$ZonedDurationField int long )long"[label="1"]
"long"->"(static)org.joda.time.chrono.ZonedChronology$ZonedDurationField.getMillis(org.joda.time.chrono.ZonedChronology$ZonedDurationField long long )long"[label="2"]
"long"->"(static)org.joda.time.chrono.ZonedChronology$ZonedDurationField.getValue(org.joda.time.chrono.ZonedChronology$ZonedDurationField long long )int"[label="2"]
"long"->"(static)org.joda.time.chrono.ZonedChronology$ZonedDurationField.getValueAsLong(org.joda.time.chrono.ZonedChronology$ZonedDurationField long long )long"[label="2"]
"long"->"(static)org.joda.time.field.BaseDateTimeField.addWrapField(org.joda.time.field.BaseDateTimeField long int )long"[label="1"]
"long"->"(static)org.joda.time.field.BaseDateTimeField.get(org.joda.time.field.BaseDateTimeField long )int"[label="1"]
"long"->"(static)org.joda.time.field.BaseDateTimeField.getAsShortText(org.joda.time.field.BaseDateTimeField long )java.lang.String"[label="1"]
"long"->"(static)org.joda.time.field.BaseDateTimeField.getAsShortText(org.joda.time.field.BaseDateTimeField long java.util.Locale )java.lang.String"[label="1"]
"long"->"(static)org.joda.time.field.BaseDateTimeField.getAsText(org.joda.time.field.BaseDateTimeField long )java.lang.String"[label="1"]
"long"->"(static)org.joda.time.field.BaseDateTimeField.getAsText(org.joda.time.field.BaseDateTimeField long java.util.Locale )java.lang.String"[label="1"]
"long"->"(static)org.joda.time.field.BaseDateTimeField.getDifference(org.joda.time.field.BaseDateTimeField long long )int"[label="2"]
"long"->"(static)org.joda.time.field.BaseDateTimeField.getDifferenceAsLong(org.joda.time.field.BaseDateTimeField long long )long"[label="2"]
"long"->"(static)org.joda.time.field.BaseDateTimeField.getLeapAmount(org.joda.time.field.BaseDateTimeField long )int"[label="1"]
"long"->"(static)org.joda.time.field.BaseDateTimeField.getMaximumValue(org.joda.time.field.BaseDateTimeField long )int"[label="1"]
"long"->"(static)org.joda.time.field.BaseDateTimeField.getMinimumValue(org.joda.time.field.BaseDateTimeField long )int"[label="1"]
"long"->"(static)org.joda.time.field.BaseDateTimeField.isLeap(org.joda.time.field.BaseDateTimeField long )boolean"[label="1"]
"long"->"(static)org.joda.time.field.BaseDateTimeField.remainder(org.joda.time.field.BaseDateTimeField long )long"[label="1"]
"long"->"(static)org.joda.time.field.BaseDateTimeField.roundCeiling(org.joda.time.field.BaseDateTimeField long )long"[label="1"]
"long"->"(static)org.joda.time.field.BaseDateTimeField.roundFloor(org.joda.time.field.BaseDateTimeField long )long"[label="1"]
"long"->"(static)org.joda.time.field.BaseDateTimeField.roundHalfCeiling(org.joda.time.field.BaseDateTimeField long )long"[label="1"]
"long"->"(static)org.joda.time.field.BaseDateTimeField.roundHalfEven(org.joda.time.field.BaseDateTimeField long )long"[label="1"]
"long"->"(static)org.joda.time.field.BaseDateTimeField.roundHalfFloor(org.joda.time.field.BaseDateTimeField long )long"[label="1"]
"long"->"(static)org.joda.time.field.BaseDateTimeField.set(org.joda.time.field.BaseDateTimeField long int )long"[label="1"]
"long"->"(static)org.joda.time.field.BaseDateTimeField.set(org.joda.time.field.BaseDateTimeField long java.lang.String )long"[label="1"]
"long"->"(static)org.joda.time.field.BaseDurationField.getDifference(org.joda.time.field.BaseDurationField long long )int"[label="2"]
"long"->"(static)org.joda.time.field.BaseDurationField.getMillis(org.joda.time.field.BaseDurationField long )long"[label="1"]
"long"->"(static)org.joda.time.field.BaseDurationField.getValue(org.joda.time.field.BaseDurationField long )int"[label="1"]
"long"->"(static)org.joda.time.field.BaseDurationField.getValue(org.joda.time.field.BaseDurationField long long )int"[label="2"]
"long"->"(static)org.joda.time.field.BaseDurationField.getValueAsLong(org.joda.time.field.BaseDurationField long )long"[label="1"]
"long"->"(static)org.joda.time.field.DecoratedDateTimeField.get(org.joda.time.field.DecoratedDateTimeField long )int"[label="1"]
"long"->"(static)org.joda.time.field.DecoratedDateTimeField.roundFloor(org.joda.time.field.DecoratedDateTimeField long )long"[label="1"]
"long"->"(static)org.joda.time.field.DecoratedDateTimeField.set(org.joda.time.field.DecoratedDateTimeField long int )long"[label="1"]
"long"->"(static)org.joda.time.field.DecoratedDurationField.getDifferenceAsLong(org.joda.time.field.DecoratedDurationField long long )long"[label="2"]
"long"->"(static)org.joda.time.field.DecoratedDurationField.getMillis(org.joda.time.field.DecoratedDurationField int long )long"[label="1"]
"long"->"(static)org.joda.time.field.DecoratedDurationField.getMillis(org.joda.time.field.DecoratedDurationField long long )long"[label="2"]
"long"->"(static)org.joda.time.field.DecoratedDurationField.getValueAsLong(org.joda.time.field.DecoratedDurationField long long )long"[label="2"]
"long"->"(static)org.joda.time.field.DelegatedDateTimeField.addWrapField(org.joda.time.field.DelegatedDateTimeField long int )long"[label="1"]
"long"->"(static)org.joda.time.field.DelegatedDateTimeField.get(org.joda.time.field.DelegatedDateTimeField long )int"[label="1"]
"long"->"(static)org.joda.time.field.DelegatedDateTimeField.getAsShortText(org.joda.time.field.DelegatedDateTimeField long )java.lang.String"[label="1"]
"long"->"(static)org.joda.time.field.DelegatedDateTimeField.getAsShortText(org.joda.time.field.DelegatedDateTimeField long java.util.Locale )java.lang.String"[label="1"]
"long"->"(static)org.joda.time.field.DelegatedDateTimeField.getAsText(org.joda.time.field.DelegatedDateTimeField long )java.lang.String"[label="1"]
"long"->"(static)org.joda.time.field.DelegatedDateTimeField.getAsText(org.joda.time.field.DelegatedDateTimeField long java.util.Locale )java.lang.String"[label="1"]
"long"->"(static)org.joda.time.field.DelegatedDateTimeField.getDifference(org.joda.time.field.DelegatedDateTimeField long long )int"[label="2"]
"long"->"(static)org.joda.time.field.DelegatedDateTimeField.getDifferenceAsLong(org.joda.time.field.DelegatedDateTimeField long long )long"[label="2"]
"long"->"(static)org.joda.time.field.DelegatedDateTimeField.getLeapAmount(org.joda.time.field.DelegatedDateTimeField long )int"[label="1"]
"long"->"(static)org.joda.time.field.DelegatedDateTimeField.getMaximumValue(org.joda.time.field.DelegatedDateTimeField long )int"[label="1"]
"long"->"(static)org.joda.time.field.DelegatedDateTimeField.getMinimumValue(org.joda.time.field.DelegatedDateTimeField long )int"[label="1"]
"long"->"(static)org.joda.time.field.DelegatedDateTimeField.isLeap(org.joda.time.field.DelegatedDateTimeField long )boolean"[label="1"]
"long"->"(static)org.joda.time.field.DelegatedDateTimeField.remainder(org.joda.time.field.DelegatedDateTimeField long )long"[label="1"]
"long"->"(static)org.joda.time.field.DelegatedDateTimeField.roundCeiling(org.joda.time.field.DelegatedDateTimeField long )long"[label="1"]
"long"->"(static)org.joda.time.field.DelegatedDateTimeField.roundFloor(org.joda.time.field.DelegatedDateTimeField long )long"[label="1"]
"long"->"(static)org.joda.time.field.DelegatedDateTimeField.roundHalfCeiling(org.joda.time.field.DelegatedDateTimeField long )long"[label="1"]
"long"->"(static)org.joda.time.field.DelegatedDateTimeField.roundHalfEven(org.joda.time.field.DelegatedDateTimeField long )long"[label="1"]
"long"->"(static)org.joda.time.field.DelegatedDateTimeField.roundHalfFloor(org.joda.time.field.DelegatedDateTimeField long )long"[label="1"]
"long"->"(static)org.joda.time.field.DelegatedDateTimeField.set(org.joda.time.field.DelegatedDateTimeField long int )long"[label="1"]
"long"->"(static)org.joda.time.field.DelegatedDateTimeField.set(org.joda.time.field.DelegatedDateTimeField long java.lang.String )long"[label="1"]
"long"->"(static)org.joda.time.field.DelegatedDurationField.getDifference(org.joda.time.field.DelegatedDurationField long long )int"[label="2"]
"long"->"(static)org.joda.time.field.DelegatedDurationField.getDifferenceAsLong(org.joda.time.field.DelegatedDurationField long long )long"[label="2"]
"long"->"(static)org.joda.time.field.DelegatedDurationField.getMillis(org.joda.time.field.DelegatedDurationField int long )long"[label="1"]
"long"->"(static)org.joda.time.field.DelegatedDurationField.getMillis(org.joda.time.field.DelegatedDurationField long )long"[label="1"]
"long"->"(static)org.joda.time.field.DelegatedDurationField.getMillis(org.joda.time.field.DelegatedDurationField long long )long"[label="2"]
"long"->"(static)org.joda.time.field.DelegatedDurationField.getValue(org.joda.time.field.DelegatedDurationField long )int"[label="1"]
"long"->"(static)org.joda.time.field.DelegatedDurationField.getValue(org.joda.time.field.DelegatedDurationField long long )int"[label="2"]
"long"->"(static)org.joda.time.field.DelegatedDurationField.getValueAsLong(org.joda.time.field.DelegatedDurationField long )long"[label="1"]
"long"->"(static)org.joda.time.field.DelegatedDurationField.getValueAsLong(org.joda.time.field.DelegatedDurationField long long )long"[label="2"]
"long"->"(static)org.joda.time.field.DividedDateTimeField.addWrapField(org.joda.time.field.DividedDateTimeField long int )long"[label="1"]
"long"->"(static)org.joda.time.field.DividedDateTimeField.get(org.joda.time.field.DividedDateTimeField long )int"[label="1"]
"long"->"(static)org.joda.time.field.DividedDateTimeField.getDifference(org.joda.time.field.DividedDateTimeField long long )int"[label="2"]
"long"->"(static)org.joda.time.field.DividedDateTimeField.getDifferenceAsLong(org.joda.time.field.DividedDateTimeField long long )long"[label="2"]
"long"->"(static)org.joda.time.field.DividedDateTimeField.remainder(org.joda.time.field.DividedDateTimeField long )long"[label="1"]
"long"->"(static)org.joda.time.field.DividedDateTimeField.roundFloor(org.joda.time.field.DividedDateTimeField long )long"[label="1"]
"long"->"(static)org.joda.time.field.DividedDateTimeField.set(org.joda.time.field.DividedDateTimeField long int )long"[label="1"]
"long"->"(static)org.joda.time.field.ImpreciseDateTimeField$LinkedDurationField.getDifference(org.joda.time.field.ImpreciseDateTimeField$LinkedDurationField long long )int"[label="2"]
"long"->"(static)org.joda.time.field.ImpreciseDateTimeField$LinkedDurationField.getDifferenceAsLong(org.joda.time.field.ImpreciseDateTimeField$LinkedDurationField long long )long"[label="2"]
"long"->"(static)org.joda.time.field.ImpreciseDateTimeField$LinkedDurationField.getMillis(org.joda.time.field.ImpreciseDateTimeField$LinkedDurationField int long )long"[label="1"]
"long"->"(static)org.joda.time.field.ImpreciseDateTimeField$LinkedDurationField.getMillis(org.joda.time.field.ImpreciseDateTimeField$LinkedDurationField long long )long"[label="2"]
"long"->"(static)org.joda.time.field.ImpreciseDateTimeField$LinkedDurationField.getValue(org.joda.time.field.ImpreciseDateTimeField$LinkedDurationField long long )int"[label="2"]
"long"->"(static)org.joda.time.field.ImpreciseDateTimeField$LinkedDurationField.getValueAsLong(org.joda.time.field.ImpreciseDateTimeField$LinkedDurationField long long )long"[label="2"]
"long"->"(static)org.joda.time.field.ImpreciseDateTimeField.get(org.joda.time.field.ImpreciseDateTimeField long )int"[label="1"]
"long"->"(static)org.joda.time.field.ImpreciseDateTimeField.getDifference(org.joda.time.field.ImpreciseDateTimeField long long )int"[label="2"]
"long"->"(static)org.joda.time.field.ImpreciseDateTimeField.getDifferenceAsLong(org.joda.time.field.ImpreciseDateTimeField long long )long"[label="2"]
"long"->"(static)org.joda.time.field.ImpreciseDateTimeField.roundFloor(org.joda.time.field.ImpreciseDateTimeField long )long"[label="1"]
"long"->"(static)org.joda.time.field.ImpreciseDateTimeField.set(org.joda.time.field.ImpreciseDateTimeField long int )long"[label="1"]
"long"->"(static)org.joda.time.field.LenientDateTimeField.set(org.joda.time.field.LenientDateTimeField long int )long"[label="1"]
"long"->"(static)org.joda.time.field.MillisDurationField.getDifference(org.joda.time.field.MillisDurationField long long )int"[label="2"]
"long"->"(static)org.joda.time.field.MillisDurationField.getDifferenceAsLong(org.joda.time.field.MillisDurationField long long )long"[label="2"]
"long"->"(static)org.joda.time.field.MillisDurationField.getMillis(org.joda.time.field.MillisDurationField int long )long"[label="1"]
"long"->"(static)org.joda.time.field.MillisDurationField.getMillis(org.joda.time.field.MillisDurationField long )long"[label="1"]
"long"->"(static)org.joda.time.field.MillisDurationField.getMillis(org.joda.time.field.MillisDurationField long long )long"[label="2"]
"long"->"(static)org.joda.time.field.MillisDurationField.getValue(org.joda.time.field.MillisDurationField long )int"[label="1"]
"long"->"(static)org.joda.time.field.MillisDurationField.getValue(org.joda.time.field.MillisDurationField long long )int"[label="2"]
"long"->"(static)org.joda.time.field.MillisDurationField.getValueAsLong(org.joda.time.field.MillisDurationField long )long"[label="1"]
"long"->"(static)org.joda.time.field.MillisDurationField.getValueAsLong(org.joda.time.field.MillisDurationField long long )long"[label="2"]
"long"->"(static)org.joda.time.field.OffsetDateTimeField.addWrapField(org.joda.time.field.OffsetDateTimeField long int )long"[label="1"]
"long"->"(static)org.joda.time.field.OffsetDateTimeField.get(org.joda.time.field.OffsetDateTimeField long )int"[label="1"]
"long"->"(static)org.joda.time.field.OffsetDateTimeField.getLeapAmount(org.joda.time.field.OffsetDateTimeField long )int"[label="1"]
"long"->"(static)org.joda.time.field.OffsetDateTimeField.isLeap(org.joda.time.field.OffsetDateTimeField long )boolean"[label="1"]
"long"->"(static)org.joda.time.field.OffsetDateTimeField.remainder(org.joda.time.field.OffsetDateTimeField long )long"[label="1"]
"long"->"(static)org.joda.time.field.OffsetDateTimeField.roundCeiling(org.joda.time.field.OffsetDateTimeField long )long"[label="1"]
"long"->"(static)org.joda.time.field.OffsetDateTimeField.roundFloor(org.joda.time.field.OffsetDateTimeField long )long"[label="1"]
"long"->"(static)org.joda.time.field.OffsetDateTimeField.roundHalfCeiling(org.joda.time.field.OffsetDateTimeField long )long"[label="1"]
"long"->"(static)org.joda.time.field.OffsetDateTimeField.roundHalfEven(org.joda.time.field.OffsetDateTimeField long )long"[label="1"]
"long"->"(static)org.joda.time.field.OffsetDateTimeField.roundHalfFloor(org.joda.time.field.OffsetDateTimeField long )long"[label="1"]
"long"->"(static)org.joda.time.field.OffsetDateTimeField.set(org.joda.time.field.OffsetDateTimeField long int )long"[label="1"]
"long"->"(static)org.joda.time.field.PreciseDateTimeField.addWrapField(org.joda.time.field.PreciseDateTimeField long int )long"[label="1"]
"long"->"(static)org.joda.time.field.PreciseDateTimeField.get(org.joda.time.field.PreciseDateTimeField long )int"[label="1"]
"long"->"(static)org.joda.time.field.PreciseDateTimeField.set(org.joda.time.field.PreciseDateTimeField long int )long"[label="1"]
"long"->"(static)org.joda.time.field.PreciseDurationDateTimeField.remainder(org.joda.time.field.PreciseDurationDateTimeField long )long"[label="1"]
"long"->"(static)org.joda.time.field.PreciseDurationDateTimeField.roundCeiling(org.joda.time.field.PreciseDurationDateTimeField long )long"[label="1"]
"long"->"(static)org.joda.time.field.PreciseDurationDateTimeField.roundFloor(org.joda.time.field.PreciseDurationDateTimeField long )long"[label="1"]
"long"->"(static)org.joda.time.field.PreciseDurationDateTimeField.set(org.joda.time.field.PreciseDurationDateTimeField long int )long"[label="1"]
"long"->"(static)org.joda.time.field.PreciseDurationField.getDifferenceAsLong(org.joda.time.field.PreciseDurationField long long )long"[label="2"]
"long"->"(static)org.joda.time.field.PreciseDurationField.getMillis(org.joda.time.field.PreciseDurationField int long )long"[label="1"]
"long"->"(static)org.joda.time.field.PreciseDurationField.getMillis(org.joda.time.field.PreciseDurationField long long )long"[label="2"]
"long"->"(static)org.joda.time.field.PreciseDurationField.getValueAsLong(org.joda.time.field.PreciseDurationField long long )long"[label="2"]
"long"->"(static)org.joda.time.field.RemainderDateTimeField.addWrapField(org.joda.time.field.RemainderDateTimeField long int )long"[label="1"]
"long"->"(static)org.joda.time.field.RemainderDateTimeField.get(org.joda.time.field.RemainderDateTimeField long )int"[label="1"]
"long"->"(static)org.joda.time.field.RemainderDateTimeField.remainder(org.joda.time.field.RemainderDateTimeField long )long"[label="1"]
"long"->"(static)org.joda.time.field.RemainderDateTimeField.roundCeiling(org.joda.time.field.RemainderDateTimeField long )long"[label="1"]
"long"->"(static)org.joda.time.field.RemainderDateTimeField.roundFloor(org.joda.time.field.RemainderDateTimeField long )long"[label="1"]
"long"->"(static)org.joda.time.field.RemainderDateTimeField.roundHalfCeiling(org.joda.time.field.RemainderDateTimeField long )long"[label="1"]
"long"->"(static)org.joda.time.field.RemainderDateTimeField.roundHalfEven(org.joda.time.field.RemainderDateTimeField long )long"[label="1"]
"long"->"(static)org.joda.time.field.RemainderDateTimeField.roundHalfFloor(org.joda.time.field.RemainderDateTimeField long )long"[label="1"]
"long"->"(static)org.joda.time.field.RemainderDateTimeField.set(org.joda.time.field.RemainderDateTimeField long int )long"[label="1"]
"long"->"(static)org.joda.time.field.ScaledDurationField.getDifference(org.joda.time.field.ScaledDurationField long long )int"[label="2"]
"long"->"(static)org.joda.time.field.ScaledDurationField.getDifferenceAsLong(org.joda.time.field.ScaledDurationField long long )long"[label="2"]
"long"->"(static)org.joda.time.field.ScaledDurationField.getMillis(org.joda.time.field.ScaledDurationField int long )long"[label="1"]
"long"->"(static)org.joda.time.field.ScaledDurationField.getMillis(org.joda.time.field.ScaledDurationField long )long"[label="1"]
"long"->"(static)org.joda.time.field.ScaledDurationField.getMillis(org.joda.time.field.ScaledDurationField long long )long"[label="2"]
"long"->"(static)org.joda.time.field.ScaledDurationField.getValue(org.joda.time.field.ScaledDurationField long )int"[label="1"]
"long"->"(static)org.joda.time.field.ScaledDurationField.getValue(org.joda.time.field.ScaledDurationField long long )int"[label="2"]
"long"->"(static)org.joda.time.field.ScaledDurationField.getValueAsLong(org.joda.time.field.ScaledDurationField long )long"[label="1"]
"long"->"(static)org.joda.time.field.ScaledDurationField.getValueAsLong(org.joda.time.field.ScaledDurationField long long )long"[label="2"]
"long"->"(static)org.joda.time.field.SkipDateTimeField.get(org.joda.time.field.SkipDateTimeField long )int"[label="1"]
"long"->"(static)org.joda.time.field.SkipDateTimeField.set(org.joda.time.field.SkipDateTimeField long int )long"[label="1"]
"long"->"(static)org.joda.time.field.SkipUndoDateTimeField.get(org.joda.time.field.SkipUndoDateTimeField long )int"[label="1"]
"long"->"(static)org.joda.time.field.SkipUndoDateTimeField.set(org.joda.time.field.SkipUndoDateTimeField long int )long"[label="1"]
"long"->"(static)org.joda.time.field.StrictDateTimeField.set(org.joda.time.field.StrictDateTimeField long int )long"[label="1"]
"long"->"(static)org.joda.time.field.UnsupportedDateTimeField.addWrapField(org.joda.time.field.UnsupportedDateTimeField long int )long"[label="1"]
"long"->"(static)org.joda.time.field.UnsupportedDateTimeField.get(org.joda.time.field.UnsupportedDateTimeField long )int"[label="1"]
"long"->"(static)org.joda.time.field.UnsupportedDateTimeField.getAsShortText(org.joda.time.field.UnsupportedDateTimeField long )java.lang.String"[label="1"]
"long"->"(static)org.joda.time.field.UnsupportedDateTimeField.getAsShortText(org.joda.time.field.UnsupportedDateTimeField long java.util.Locale )java.lang.String"[label="1"]
"long"->"(static)org.joda.time.field.UnsupportedDateTimeField.getAsText(org.joda.time.field.UnsupportedDateTimeField long )java.lang.String"[label="1"]
"long"->"(static)org.joda.time.field.UnsupportedDateTimeField.getAsText(org.joda.time.field.UnsupportedDateTimeField long java.util.Locale )java.lang.String"[label="1"]
"long"->"(static)org.joda.time.field.UnsupportedDateTimeField.getDifference(org.joda.time.field.UnsupportedDateTimeField long long )int"[label="2"]
"long"->"(static)org.joda.time.field.UnsupportedDateTimeField.getDifferenceAsLong(org.joda.time.field.UnsupportedDateTimeField long long )long"[label="2"]
"long"->"(static)org.joda.time.field.UnsupportedDateTimeField.getLeapAmount(org.joda.time.field.UnsupportedDateTimeField long )int"[label="1"]
"long"->"(static)org.joda.time.field.UnsupportedDateTimeField.getMaximumValue(org.joda.time.field.UnsupportedDateTimeField long )int"[label="1"]
"long"->"(static)org.joda.time.field.UnsupportedDateTimeField.getMinimumValue(org.joda.time.field.UnsupportedDateTimeField long )int"[label="1"]
"long"->"(static)org.joda.time.field.UnsupportedDateTimeField.isLeap(org.joda.time.field.UnsupportedDateTimeField long )boolean"[label="1"]
"long"->"(static)org.joda.time.field.UnsupportedDateTimeField.remainder(org.joda.time.field.UnsupportedDateTimeField long )long"[label="1"]
"long"->"(static)org.joda.time.field.UnsupportedDateTimeField.roundCeiling(org.joda.time.field.UnsupportedDateTimeField long )long"[label="1"]
"long"->"(static)org.joda.time.field.UnsupportedDateTimeField.roundFloor(org.joda.time.field.UnsupportedDateTimeField long )long"[label="1"]
"long"->"(static)org.joda.time.field.UnsupportedDateTimeField.roundHalfCeiling(org.joda.time.field.UnsupportedDateTimeField long )long"[label="1"]
"long"->"(static)org.joda.time.field.UnsupportedDateTimeField.roundHalfEven(org.joda.time.field.UnsupportedDateTimeField long )long"[label="1"]
"long"->"(static)org.joda.time.field.UnsupportedDateTimeField.roundHalfFloor(org.joda.time.field.UnsupportedDateTimeField long )long"[label="1"]
"long"->"(static)org.joda.time.field.UnsupportedDateTimeField.set(org.joda.time.field.UnsupportedDateTimeField long int )long"[label="1"]
"long"->"(static)org.joda.time.field.UnsupportedDateTimeField.set(org.joda.time.field.UnsupportedDateTimeField long java.lang.String )long"[label="1"]
"long"->"(static)org.joda.time.field.UnsupportedDurationField.getDifference(org.joda.time.field.UnsupportedDurationField long long )int"[label="2"]
"long"->"(static)org.joda.time.field.UnsupportedDurationField.getDifferenceAsLong(org.joda.time.field.UnsupportedDurationField long long )long"[label="2"]
"long"->"(static)org.joda.time.field.UnsupportedDurationField.getMillis(org.joda.time.field.UnsupportedDurationField int long )long"[label="1"]
"long"->"(static)org.joda.time.field.UnsupportedDurationField.getMillis(org.joda.time.field.UnsupportedDurationField long )long"[label="1"]
"long"->"(static)org.joda.time.field.UnsupportedDurationField.getMillis(org.joda.time.field.UnsupportedDurationField long long )long"[label="2"]
"long"->"(static)org.joda.time.field.UnsupportedDurationField.getValue(org.joda.time.field.UnsupportedDurationField long )int"[label="1"]
"long"->"(static)org.joda.time.field.UnsupportedDurationField.getValue(org.joda.time.field.UnsupportedDurationField long long )int"[label="2"]
"long"->"(static)org.joda.time.field.UnsupportedDurationField.getValueAsLong(org.joda.time.field.UnsupportedDurationField long )long"[label="1"]
"long"->"(static)org.joda.time.field.UnsupportedDurationField.getValueAsLong(org.joda.time.field.UnsupportedDurationField long long )long"[label="2"]
"long"->"(static)org.joda.time.field.ZeroIsMaxDateTimeField.addWrapField(org.joda.time.field.ZeroIsMaxDateTimeField long int )long"[label="1"]
"long"->"(static)org.joda.time.field.ZeroIsMaxDateTimeField.get(org.joda.time.field.ZeroIsMaxDateTimeField long )int"[label="1"]
"long"->"(static)org.joda.time.field.ZeroIsMaxDateTimeField.getDifference(org.joda.time.field.ZeroIsMaxDateTimeField long long )int"[label="2"]
"long"->"(static)org.joda.time.field.ZeroIsMaxDateTimeField.getDifferenceAsLong(org.joda.time.field.ZeroIsMaxDateTimeField long long )long"[label="2"]
"long"->"(static)org.joda.time.field.ZeroIsMaxDateTimeField.getLeapAmount(org.joda.time.field.ZeroIsMaxDateTimeField long )int"[label="1"]
"long"->"(static)org.joda.time.field.ZeroIsMaxDateTimeField.getMaximumValue(org.joda.time.field.ZeroIsMaxDateTimeField long )int"[label="1"]
"long"->"(static)org.joda.time.field.ZeroIsMaxDateTimeField.getMinimumValue(org.joda.time.field.ZeroIsMaxDateTimeField long )int"[label="1"]
"long"->"(static)org.joda.time.field.ZeroIsMaxDateTimeField.isLeap(org.joda.time.field.ZeroIsMaxDateTimeField long )boolean"[label="1"]
"long"->"(static)org.joda.time.field.ZeroIsMaxDateTimeField.remainder(org.joda.time.field.ZeroIsMaxDateTimeField long )long"[label="1"]
"long"->"(static)org.joda.time.field.ZeroIsMaxDateTimeField.roundCeiling(org.joda.time.field.ZeroIsMaxDateTimeField long )long"[label="1"]
"long"->"(static)org.joda.time.field.ZeroIsMaxDateTimeField.roundFloor(org.joda.time.field.ZeroIsMaxDateTimeField long )long"[label="1"]
"long"->"(static)org.joda.time.field.ZeroIsMaxDateTimeField.roundHalfCeiling(org.joda.time.field.ZeroIsMaxDateTimeField long )long"[label="1"]
"long"->"(static)org.joda.time.field.ZeroIsMaxDateTimeField.roundHalfEven(org.joda.time.field.ZeroIsMaxDateTimeField long )long"[label="1"]
"long"->"(static)org.joda.time.field.ZeroIsMaxDateTimeField.roundHalfFloor(org.joda.time.field.ZeroIsMaxDateTimeField long )long"[label="1"]
"long"->"(static)org.joda.time.field.ZeroIsMaxDateTimeField.set(org.joda.time.field.ZeroIsMaxDateTimeField long int )long"[label="1"]
"long"->"(static)org.joda.time.format.DateTimeFormatter.print(org.joda.time.format.DateTimeFormatter long )java.lang.String"[label="1"]
"long"->"(static)org.joda.time.tz.CachedDateTimeZone$Info.getNameKey(org.joda.time.tz.CachedDateTimeZone$Info long )java.lang.String"[label="1"]
"long"->"(static)org.joda.time.tz.CachedDateTimeZone$Info.getOffset(org.joda.time.tz.CachedDateTimeZone$Info long )int"[label="1"]
"long"->"(static)org.joda.time.tz.CachedDateTimeZone$Info.getStandardOffset(org.joda.time.tz.CachedDateTimeZone$Info long )int"[label="1"]
"long"->"(static)org.joda.time.tz.CachedDateTimeZone.getNameKey(org.joda.time.tz.CachedDateTimeZone long )java.lang.String"[label="1"]
"long"->"(static)org.joda.time.tz.CachedDateTimeZone.getOffset(org.joda.time.tz.CachedDateTimeZone long )int"[label="1"]
"long"->"(static)org.joda.time.tz.CachedDateTimeZone.getStandardOffset(org.joda.time.tz.CachedDateTimeZone long )int"[label="1"]
"long"->"(static)org.joda.time.tz.CachedDateTimeZone.nextTransition(org.joda.time.tz.CachedDateTimeZone long )long"[label="1"]
"long"->"(static)org.joda.time.tz.CachedDateTimeZone.previousTransition(org.joda.time.tz.CachedDateTimeZone long )long"[label="1"]
"long"->"(static)org.joda.time.tz.DateTimeZoneBuilder$DSTZone.getNameKey(org.joda.time.tz.DateTimeZoneBuilder$DSTZone long )java.lang.String"[label="1"]
"long"->"(static)org.joda.time.tz.DateTimeZoneBuilder$DSTZone.getOffset(org.joda.time.tz.DateTimeZoneBuilder$DSTZone long )int"[label="1"]
"long"->"(static)org.joda.time.tz.DateTimeZoneBuilder$DSTZone.getStandardOffset(org.joda.time.tz.DateTimeZoneBuilder$DSTZone long )int"[label="1"]
"long"->"(static)org.joda.time.tz.DateTimeZoneBuilder$DSTZone.nextTransition(org.joda.time.tz.DateTimeZoneBuilder$DSTZone long )long"[label="1"]
"long"->"(static)org.joda.time.tz.DateTimeZoneBuilder$DSTZone.previousTransition(org.joda.time.tz.DateTimeZoneBuilder$DSTZone long )long"[label="1"]
"long"->"(static)org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.getNameKey(org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone long )java.lang.String"[label="1"]
"long"->"(static)org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.getOffset(org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone long )int"[label="1"]
"long"->"(static)org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.getStandardOffset(org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone long )int"[label="1"]
"long"->"(static)org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.nextTransition(org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone long )long"[label="1"]
"long"->"(static)org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.previousTransition(org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone long )long"[label="1"]
"long"->"(static)org.joda.time.tz.DateTimeZoneBuilder$RuleSet.firstTransition(org.joda.time.tz.DateTimeZoneBuilder$RuleSet long )org.joda.time.tz.DateTimeZoneBuilder$Transition"[label="1"]
"long"->"(static)org.joda.time.tz.DateTimeZoneBuilder$RuleSet.nextTransition(org.joda.time.tz.DateTimeZoneBuilder$RuleSet long int )org.joda.time.tz.DateTimeZoneBuilder$Transition"[label="1"]
"long"->"(static)org.joda.time.tz.FixedDateTimeZone.getNameKey(org.joda.time.tz.FixedDateTimeZone long )java.lang.String"[label="1"]
"long"->"(static)org.joda.time.tz.FixedDateTimeZone.getOffset(org.joda.time.tz.FixedDateTimeZone long )int"[label="1"]
"long"->"(static)org.joda.time.tz.FixedDateTimeZone.getOffsetFromLocal(org.joda.time.tz.FixedDateTimeZone long )int"[label="1"]
"long"->"(static)org.joda.time.tz.FixedDateTimeZone.getStandardOffset(org.joda.time.tz.FixedDateTimeZone long )int"[label="1"]
"long"->"(static)org.joda.time.tz.FixedDateTimeZone.nextTransition(org.joda.time.tz.FixedDateTimeZone long )long"[label="1"]
"long"->"(static)org.joda.time.tz.FixedDateTimeZone.previousTransition(org.joda.time.tz.FixedDateTimeZone long )long"[label="1"]
"long"->"org.joda.time.DateMidnight(long )"[label="1"]
"long"->"org.joda.time.DateMidnight(long org.joda.time.Chronology )"[label="1"]
"long"->"org.joda.time.DateMidnight(long org.joda.time.DateTimeZone )"[label="1"]
"long"->"org.joda.time.DateTime(long )"[label="1"]
"long"->"org.joda.time.DateTime(long org.joda.time.Chronology )"[label="1"]
"long"->"org.joda.time.DateTime(long org.joda.time.DateTimeZone )"[label="1"]
"long"->"org.joda.time.DateTimeUtils.toJulianDay(long )double"[label="1"]
"long"->"org.joda.time.DateTimeUtils.toJulianDayNumber(long )long"[label="1"]
"long"->"org.joda.time.Duration(long )"[label="1"]
"long"->"org.joda.time.Duration(long long )"[label="2"]
"long"->"org.joda.time.Duration.millis(long )org.joda.time.Duration"[label="1"]
"long"->"org.joda.time.Duration.standardDays(long )org.joda.time.Duration"[label="1"]
"long"->"org.joda.time.Duration.standardHours(long )org.joda.time.Duration"[label="1"]
"long"->"org.joda.time.Duration.standardMinutes(long )org.joda.time.Duration"[label="1"]
"long"->"org.joda.time.Duration.standardSeconds(long )org.joda.time.Duration"[label="1"]
"long"->"org.joda.time.IllegalInstantException(long java.lang.String )"[label="1"]
"long"->"org.joda.time.Instant(long )"[label="1"]
"long"->"org.joda.time.Interval(long long )"[label="2"]
"long"->"org.joda.time.LocalDate(long )"[label="1"]
"long"->"org.joda.time.LocalDate(long org.joda.time.Chronology )"[label="1"]
"long"->"org.joda.time.LocalDate(long org.joda.time.DateTimeZone )"[label="1"]
"long"->"org.joda.time.LocalDateTime(long )"[label="1"]
"long"->"org.joda.time.LocalDateTime(long org.joda.time.Chronology )"[label="1"]
"long"->"org.joda.time.LocalDateTime(long org.joda.time.DateTimeZone )"[label="1"]
"long"->"org.joda.time.LocalTime(long )"[label="1"]
"long"->"org.joda.time.LocalTime(long org.joda.time.Chronology )"[label="1"]
"long"->"org.joda.time.LocalTime(long org.joda.time.DateTimeZone )"[label="1"]
"long"->"org.joda.time.LocalTime.fromMillisOfDay(long )org.joda.time.LocalTime"[label="1"]
"long"->"org.joda.time.LocalTime.fromMillisOfDay(long org.joda.time.Chronology )org.joda.time.LocalTime"[label="1"]
"long"->"org.joda.time.MonthDay(long )"[label="1"]
"long"->"org.joda.time.MonthDay(long org.joda.time.Chronology )"[label="1"]
"long"->"org.joda.time.MutableDateTime(long )"[label="1"]
"long"->"org.joda.time.MutableDateTime(long org.joda.time.Chronology )"[label="1"]
"long"->"org.joda.time.MutableDateTime(long org.joda.time.DateTimeZone )"[label="1"]
"long"->"org.joda.time.MutableInterval(long long )"[label="2"]
"long"->"org.joda.time.MutablePeriod(long )"[label="1"]
"long"->"org.joda.time.MutablePeriod(long long )"[label="2"]
"long"->"org.joda.time.MutablePeriod(long org.joda.time.Chronology )"[label="1"]
"long"->"org.joda.time.MutablePeriod(long org.joda.time.PeriodType )"[label="1"]
"long"->"org.joda.time.Period(long )"[label="1"]
"long"->"org.joda.time.Period(long long )"[label="2"]
"long"->"org.joda.time.Period(long org.joda.time.Chronology )"[label="1"]
"long"->"org.joda.time.Period(long org.joda.time.PeriodType )"[label="1"]
"long"->"org.joda.time.TimeOfDay(long )"[label="1"]
"long"->"org.joda.time.TimeOfDay(long org.joda.time.Chronology )"[label="1"]
"long"->"org.joda.time.TimeOfDay.fromMillisOfDay(long )org.joda.time.TimeOfDay"[label="1"]
"long"->"org.joda.time.TimeOfDay.fromMillisOfDay(long org.joda.time.Chronology )org.joda.time.TimeOfDay"[label="1"]
"long"->"org.joda.time.YearMonth(long )"[label="1"]
"long"->"org.joda.time.YearMonth(long org.joda.time.Chronology )"[label="1"]
"long"->"org.joda.time.YearMonthDay(long )"[label="1"]
"long"->"org.joda.time.YearMonthDay(long org.joda.time.Chronology )"[label="1"]
"long"->"org.joda.time.base.BaseDateTime(long )"[label="1"]
"long"->"org.joda.time.base.BaseDateTime(long org.joda.time.Chronology )"[label="1"]
"long"->"org.joda.time.base.BaseDateTime(long org.joda.time.DateTimeZone )"[label="1"]
"long"->"org.joda.time.field.FieldUtils.safeAdd(long long )long"[label="2"]
"long"->"org.joda.time.field.FieldUtils.safeDivide(long long )long"[label="2"]
"long"->"org.joda.time.field.FieldUtils.safeMultiply(long int )long"[label="1"]
"long"->"org.joda.time.field.FieldUtils.safeMultiply(long long )long"[label="2"]
"long"->"org.joda.time.field.FieldUtils.safeMultiplyToInt(long long )int"[label="2"]
"long"->"org.joda.time.field.FieldUtils.safeSubtract(long long )long"[label="2"]
"long"->"org.joda.time.field.FieldUtils.safeToInt(long )int"[label="1"]
"long"->"org.joda.time.field.ImpreciseDateTimeField(org.joda.time.DateTimeFieldType long )"[label="1"]
"long"->"org.joda.time.field.PreciseDurationField(org.joda.time.DurationFieldType long )"[label="1"]
"long"->"org.joda.time.format.FormatUtils.calculateDigitCount(long )int"[label="1"]
"org.joda.time.Chronology"->"(static)org.joda.time.Chronology.centuries(org.joda.time.Chronology )org.joda.time.DurationField"[label="1"]
"org.joda.time.Chronology"->"(static)org.joda.time.Chronology.centuryOfEra(org.joda.time.Chronology )org.joda.time.DateTimeField"[label="1"]
"org.joda.time.Chronology"->"(static)org.joda.time.Chronology.clockhourOfDay(org.joda.time.Chronology )org.joda.time.DateTimeField"[label="1"]
"org.joda.time.Chronology"->"(static)org.joda.time.Chronology.clockhourOfHalfday(org.joda.time.Chronology )org.joda.time.DateTimeField"[label="1"]
"org.joda.time.Chronology"->"(static)org.joda.time.Chronology.dayOfMonth(org.joda.time.Chronology )org.joda.time.DateTimeField"[label="1"]
"org.joda.time.Chronology"->"(static)org.joda.time.Chronology.dayOfWeek(org.joda.time.Chronology )org.joda.time.DateTimeField"[label="1"]
"org.joda.time.Chronology"->"(static)org.joda.time.Chronology.dayOfYear(org.joda.time.Chronology )org.joda.time.DateTimeField"[label="1"]
"org.joda.time.Chronology"->"(static)org.joda.time.Chronology.days(org.joda.time.Chronology )org.joda.time.DurationField"[label="1"]
"org.joda.time.Chronology"->"(static)org.joda.time.Chronology.era(org.joda.time.Chronology )org.joda.time.DateTimeField"[label="1"]
"org.joda.time.Chronology"->"(static)org.joda.time.Chronology.eras(org.joda.time.Chronology )org.joda.time.DurationField"[label="1"]
"org.joda.time.Chronology"->"(static)org.joda.time.Chronology.get(org.joda.time.Chronology org.joda.time.ReadablePartial long )int[]"[label="1"]
"org.joda.time.Chronology"->"(static)org.joda.time.Chronology.get(org.joda.time.Chronology org.joda.time.ReadablePeriod long )int[]"[label="1"]
"org.joda.time.Chronology"->"(static)org.joda.time.Chronology.getZone(org.joda.time.Chronology )org.joda.time.DateTimeZone"[label="1"]
"org.joda.time.Chronology"->"(static)org.joda.time.Chronology.halfdayOfDay(org.joda.time.Chronology )org.joda.time.DateTimeField"[label="1"]
"org.joda.time.Chronology"->"(static)org.joda.time.Chronology.halfdays(org.joda.time.Chronology )org.joda.time.DurationField"[label="1"]
"org.joda.time.Chronology"->"(static)org.joda.time.Chronology.hourOfDay(org.joda.time.Chronology )org.joda.time.DateTimeField"[label="1"]
"org.joda.time.Chronology"->"(static)org.joda.time.Chronology.hourOfHalfday(org.joda.time.Chronology )org.joda.time.DateTimeField"[label="1"]
"org.joda.time.Chronology"->"(static)org.joda.time.Chronology.hours(org.joda.time.Chronology )org.joda.time.DurationField"[label="1"]
"org.joda.time.Chronology"->"(static)org.joda.time.Chronology.millis(org.joda.time.Chronology )org.joda.time.DurationField"[label="1"]
"org.joda.time.Chronology"->"(static)org.joda.time.Chronology.millisOfDay(org.joda.time.Chronology )org.joda.time.DateTimeField"[label="1"]
"org.joda.time.Chronology"->"(static)org.joda.time.Chronology.millisOfSecond(org.joda.time.Chronology )org.joda.time.DateTimeField"[label="1"]
"org.joda.time.Chronology"->"(static)org.joda.time.Chronology.minuteOfDay(org.joda.time.Chronology )org.joda.time.DateTimeField"[label="1"]
"org.joda.time.Chronology"->"(static)org.joda.time.Chronology.minuteOfHour(org.joda.time.Chronology )org.joda.time.DateTimeField"[label="1"]
"org.joda.time.Chronology"->"(static)org.joda.time.Chronology.minutes(org.joda.time.Chronology )org.joda.time.DurationField"[label="1"]
"org.joda.time.Chronology"->"(static)org.joda.time.Chronology.monthOfYear(org.joda.time.Chronology )org.joda.time.DateTimeField"[label="1"]
"org.joda.time.Chronology"->"(static)org.joda.time.Chronology.months(org.joda.time.Chronology )org.joda.time.DurationField"[label="1"]
"org.joda.time.Chronology"->"(static)org.joda.time.Chronology.secondOfDay(org.joda.time.Chronology )org.joda.time.DateTimeField"[label="1"]
"org.joda.time.Chronology"->"(static)org.joda.time.Chronology.secondOfMinute(org.joda.time.Chronology )org.joda.time.DateTimeField"[label="1"]
"org.joda.time.Chronology"->"(static)org.joda.time.Chronology.seconds(org.joda.time.Chronology )org.joda.time.DurationField"[label="1"]
"org.joda.time.Chronology"->"(static)org.joda.time.Chronology.set(org.joda.time.Chronology org.joda.time.ReadablePartial long )long"[label="1"]
"org.joda.time.Chronology"->"(static)org.joda.time.Chronology.weekOfWeekyear(org.joda.time.Chronology )org.joda.time.DateTimeField"[label="1"]
"org.joda.time.Chronology"->"(static)org.joda.time.Chronology.weeks(org.joda.time.Chronology )org.joda.time.DurationField"[label="1"]
"org.joda.time.Chronology"->"(static)org.joda.time.Chronology.weekyear(org.joda.time.Chronology )org.joda.time.DateTimeField"[label="1"]
"org.joda.time.Chronology"->"(static)org.joda.time.Chronology.weekyearOfCentury(org.joda.time.Chronology )org.joda.time.DateTimeField"[label="1"]
"org.joda.time.Chronology"->"(static)org.joda.time.Chronology.weekyears(org.joda.time.Chronology )org.joda.time.DurationField"[label="1"]
"org.joda.time.Chronology"->"(static)org.joda.time.Chronology.withUTC(org.joda.time.Chronology )org.joda.time.Chronology"[label="1"]
"org.joda.time.Chronology"->"(static)org.joda.time.Chronology.withZone(org.joda.time.Chronology org.joda.time.DateTimeZone )org.joda.time.Chronology"[label="1"]
"org.joda.time.Chronology"->"(static)org.joda.time.Chronology.year(org.joda.time.Chronology )org.joda.time.DateTimeField"[label="1"]
"org.joda.time.Chronology"->"(static)org.joda.time.Chronology.yearOfCentury(org.joda.time.Chronology )org.joda.time.DateTimeField"[label="1"]
"org.joda.time.Chronology"->"(static)org.joda.time.Chronology.yearOfEra(org.joda.time.Chronology )org.joda.time.DateTimeField"[label="1"]
"org.joda.time.Chronology"->"(static)org.joda.time.Chronology.years(org.joda.time.Chronology )org.joda.time.DurationField"[label="1"]
"org.joda.time.Chronology"->"(static)org.joda.time.DateMidnight.withChronology(org.joda.time.DateMidnight org.joda.time.Chronology )org.joda.time.DateMidnight"[label="1"]
"org.joda.time.Chronology"->"(static)org.joda.time.DateTime.toDateTime(org.joda.time.DateTime org.joda.time.Chronology )org.joda.time.DateTime"[label="1"]
"org.joda.time.Chronology"->"(static)org.joda.time.DateTime.withChronology(org.joda.time.DateTime org.joda.time.Chronology )org.joda.time.DateTime"[label="1"]
"org.joda.time.Chronology"->"(static)org.joda.time.DateTimeFieldType$StandardDateTimeFieldType.getField(org.joda.time.DateTimeFieldType$StandardDateTimeFieldType org.joda.time.Chronology )org.joda.time.DateTimeField"[label="1"]
"org.joda.time.Chronology"->"(static)org.joda.time.DateTimeFieldType.getField(org.joda.time.DateTimeFieldType org.joda.time.Chronology )org.joda.time.DateTimeField"[label="1"]
"org.joda.time.Chronology"->"(static)org.joda.time.DateTimeFieldType.isSupported(org.joda.time.DateTimeFieldType org.joda.time.Chronology )boolean"[label="1"]
"org.joda.time.Chronology"->"(static)org.joda.time.DurationFieldType$StandardDurationFieldType.getField(org.joda.time.DurationFieldType$StandardDurationFieldType org.joda.time.Chronology )org.joda.time.DurationField"[label="1"]
"org.joda.time.Chronology"->"(static)org.joda.time.DurationFieldType.getField(org.joda.time.DurationFieldType org.joda.time.Chronology )org.joda.time.DurationField"[label="1"]
"org.joda.time.Chronology"->"(static)org.joda.time.DurationFieldType.isSupported(org.joda.time.DurationFieldType org.joda.time.Chronology )boolean"[label="1"]
"org.joda.time.Chronology"->"(static)org.joda.time.Interval.withChronology(org.joda.time.Interval org.joda.time.Chronology )org.joda.time.Interval"[label="1"]
"org.joda.time.Chronology"->"(static)org.joda.time.MonthDay.withChronologyRetainFields(org.joda.time.MonthDay org.joda.time.Chronology )org.joda.time.MonthDay"[label="1"]
"org.joda.time.Chronology"->"(static)org.joda.time.Partial.withChronologyRetainFields(org.joda.time.Partial org.joda.time.Chronology )org.joda.time.Partial"[label="1"]
"org.joda.time.Chronology"->"(static)org.joda.time.TimeOfDay.withChronologyRetainFields(org.joda.time.TimeOfDay org.joda.time.Chronology )org.joda.time.TimeOfDay"[label="1"]
"org.joda.time.Chronology"->"(static)org.joda.time.YearMonth.withChronologyRetainFields(org.joda.time.YearMonth org.joda.time.Chronology )org.joda.time.YearMonth"[label="1"]
"org.joda.time.Chronology"->"(static)org.joda.time.YearMonthDay.withChronologyRetainFields(org.joda.time.YearMonthDay org.joda.time.Chronology )org.joda.time.YearMonthDay"[label="1"]
"org.joda.time.Chronology"->"(static)org.joda.time.base.AbstractInstant.toDateTime(org.joda.time.base.AbstractInstant org.joda.time.Chronology )org.joda.time.DateTime"[label="1"]
"org.joda.time.Chronology"->"(static)org.joda.time.base.AbstractInstant.toMutableDateTime(org.joda.time.base.AbstractInstant org.joda.time.Chronology )org.joda.time.MutableDateTime"[label="1"]
"org.joda.time.Chronology"->"(static)org.joda.time.base.BaseDuration.toPeriod(org.joda.time.base.BaseDuration org.joda.time.Chronology )org.joda.time.Period"[label="1"]
"org.joda.time.Chronology"->"(static)org.joda.time.base.BaseDuration.toPeriod(org.joda.time.base.BaseDuration org.joda.time.PeriodType org.joda.time.Chronology )org.joda.time.Period"[label="1"]
"org.joda.time.Chronology"->"(static)org.joda.time.convert.AbstractConverter.getChronology(org.joda.time.convert.AbstractConverter java.lang.Object org.joda.time.Chronology )org.joda.time.Chronology"[label="1"]
"org.joda.time.Chronology"->"(static)org.joda.time.convert.AbstractConverter.getInstantMillis(org.joda.time.convert.AbstractConverter java.lang.Object org.joda.time.Chronology )long"[label="1"]
"org.joda.time.Chronology"->"(static)org.joda.time.convert.AbstractConverter.isReadableInterval(org.joda.time.convert.AbstractConverter java.lang.Object org.joda.time.Chronology )boolean"[label="1"]
"org.joda.time.Chronology"->"(static)org.joda.time.convert.CalendarConverter.getChronology(org.joda.time.convert.CalendarConverter java.lang.Object org.joda.time.Chronology )org.joda.time.Chronology"[label="1"]
"org.joda.time.Chronology"->"(static)org.joda.time.convert.CalendarConverter.getInstantMillis(org.joda.time.convert.CalendarConverter java.lang.Object org.joda.time.Chronology )long"[label="1"]
"org.joda.time.Chronology"->"(static)org.joda.time.convert.DateConverter.getInstantMillis(org.joda.time.convert.DateConverter java.lang.Object org.joda.time.Chronology )long"[label="1"]
"org.joda.time.Chronology"->"(static)org.joda.time.convert.InstantConverter.getChronology(org.joda.time.convert.InstantConverter java.lang.Object org.joda.time.Chronology )org.joda.time.Chronology"[label="1"]
"org.joda.time.Chronology"->"(static)org.joda.time.convert.InstantConverter.getInstantMillis(org.joda.time.convert.InstantConverter java.lang.Object org.joda.time.Chronology )long"[label="1"]
"org.joda.time.Chronology"->"(static)org.joda.time.convert.IntervalConverter.isReadableInterval(org.joda.time.convert.IntervalConverter java.lang.Object org.joda.time.Chronology )boolean"[label="1"]
"org.joda.time.Chronology"->"(static)org.joda.time.convert.LongConverter.getInstantMillis(org.joda.time.convert.LongConverter java.lang.Object org.joda.time.Chronology )long"[label="1"]
"org.joda.time.Chronology"->"(static)org.joda.time.convert.PartialConverter.getChronology(org.joda.time.convert.PartialConverter java.lang.Object org.joda.time.Chronology )org.joda.time.Chronology"[label="1"]
"org.joda.time.Chronology"->"(static)org.joda.time.convert.ReadableInstantConverter.getChronology(org.joda.time.convert.ReadableInstantConverter java.lang.Object org.joda.time.Chronology )org.joda.time.Chronology"[label="1"]
"org.joda.time.Chronology"->"(static)org.joda.time.convert.ReadableInstantConverter.getInstantMillis(org.joda.time.convert.ReadableInstantConverter java.lang.Object org.joda.time.Chronology )long"[label="1"]
"org.joda.time.Chronology"->"(static)org.joda.time.convert.ReadableIntervalConverter.isReadableInterval(org.joda.time.convert.ReadableIntervalConverter java.lang.Object org.joda.time.Chronology )boolean"[label="1"]
"org.joda.time.Chronology"->"(static)org.joda.time.convert.ReadablePartialConverter.getChronology(org.joda.time.convert.ReadablePartialConverter java.lang.Object org.joda.time.Chronology )org.joda.time.Chronology"[label="1"]
"org.joda.time.Chronology"->"(static)org.joda.time.convert.StringConverter.getInstantMillis(org.joda.time.convert.StringConverter java.lang.Object org.joda.time.Chronology )long"[label="1"]
"org.joda.time.Chronology"->"(static)org.joda.time.format.DateTimeFormatter.withChronology(org.joda.time.format.DateTimeFormatter org.joda.time.Chronology )org.joda.time.format.DateTimeFormatter"[label="1"]
"org.joda.time.Chronology"->"org.joda.time.DateMidnight(java.lang.Object org.joda.time.Chronology )"[label="1"]
"org.joda.time.Chronology"->"org.joda.time.DateMidnight(long org.joda.time.Chronology )"[label="1"]
"org.joda.time.Chronology"->"org.joda.time.DateMidnight(org.joda.time.Chronology )"[label="1"]
"org.joda.time.Chronology"->"org.joda.time.DateMidnight.now(org.joda.time.Chronology )org.joda.time.DateMidnight"[label="1"]
"org.joda.time.Chronology"->"org.joda.time.DateTime(java.lang.Object org.joda.time.Chronology )"[label="1"]
"org.joda.time.Chronology"->"org.joda.time.DateTime(long org.joda.time.Chronology )"[label="1"]
"org.joda.time.Chronology"->"org.joda.time.DateTime(org.joda.time.Chronology )"[label="1"]
"org.joda.time.Chronology"->"org.joda.time.DateTime.now(org.joda.time.Chronology )org.joda.time.DateTime"[label="1"]
"org.joda.time.Chronology"->"org.joda.time.DateTimeUtils.getChronology(org.joda.time.Chronology )org.joda.time.Chronology"[label="1"]
"org.joda.time.Chronology"->"org.joda.time.Interval(java.lang.Object org.joda.time.Chronology )"[label="1"]
"org.joda.time.Chronology"->"org.joda.time.LocalDate(java.lang.Object org.joda.time.Chronology )"[label="1"]
"org.joda.time.Chronology"->"org.joda.time.LocalDate(long org.joda.time.Chronology )"[label="1"]
"org.joda.time.Chronology"->"org.joda.time.LocalDate(org.joda.time.Chronology )"[label="1"]
"org.joda.time.Chronology"->"org.joda.time.LocalDate.now(org.joda.time.Chronology )org.joda.time.LocalDate"[label="1"]
"org.joda.time.Chronology"->"org.joda.time.LocalDateTime(java.lang.Object org.joda.time.Chronology )"[label="1"]
"org.joda.time.Chronology"->"org.joda.time.LocalDateTime(long org.joda.time.Chronology )"[label="1"]
"org.joda.time.Chronology"->"org.joda.time.LocalDateTime(org.joda.time.Chronology )"[label="1"]
"org.joda.time.Chronology"->"org.joda.time.LocalDateTime.now(org.joda.time.Chronology )org.joda.time.LocalDateTime"[label="1"]
"org.joda.time.Chronology"->"org.joda.time.LocalTime(java.lang.Object org.joda.time.Chronology )"[label="1"]
"org.joda.time.Chronology"->"org.joda.time.LocalTime(long org.joda.time.Chronology )"[label="1"]
"org.joda.time.Chronology"->"org.joda.time.LocalTime(org.joda.time.Chronology )"[label="1"]
"org.joda.time.Chronology"->"org.joda.time.LocalTime.fromMillisOfDay(long org.joda.time.Chronology )org.joda.time.LocalTime"[label="1"]
"org.joda.time.Chronology"->"org.joda.time.LocalTime.now(org.joda.time.Chronology )org.joda.time.LocalTime"[label="1"]
"org.joda.time.Chronology"->"org.joda.time.MonthDay(java.lang.Object org.joda.time.Chronology )"[label="1"]
"org.joda.time.Chronology"->"org.joda.time.MonthDay(long org.joda.time.Chronology )"[label="1"]
"org.joda.time.Chronology"->"org.joda.time.MonthDay(org.joda.time.Chronology )"[label="1"]
"org.joda.time.Chronology"->"org.joda.time.MonthDay.now(org.joda.time.Chronology )org.joda.time.MonthDay"[label="1"]
"org.joda.time.Chronology"->"org.joda.time.MutableDateTime(java.lang.Object org.joda.time.Chronology )"[label="1"]
"org.joda.time.Chronology"->"org.joda.time.MutableDateTime(long org.joda.time.Chronology )"[label="1"]
"org.joda.time.Chronology"->"org.joda.time.MutableDateTime(org.joda.time.Chronology )"[label="1"]
"org.joda.time.Chronology"->"org.joda.time.MutableDateTime.now(org.joda.time.Chronology )org.joda.time.MutableDateTime"[label="1"]
"org.joda.time.Chronology"->"org.joda.time.MutableInterval(java.lang.Object org.joda.time.Chronology )"[label="1"]
"org.joda.time.Chronology"->"org.joda.time.MutablePeriod(java.lang.Object org.joda.time.Chronology )"[label="1"]
"org.joda.time.Chronology"->"org.joda.time.MutablePeriod(long org.joda.time.Chronology )"[label="1"]
"org.joda.time.Chronology"->"org.joda.time.Partial(org.joda.time.Chronology )"[label="1"]
"org.joda.time.Chronology"->"org.joda.time.Period(java.lang.Object org.joda.time.Chronology )"[label="1"]
"org.joda.time.Chronology"->"org.joda.time.Period(long org.joda.time.Chronology )"[label="1"]
"org.joda.time.Chronology"->"org.joda.time.TimeOfDay(java.lang.Object org.joda.time.Chronology )"[label="1"]
"org.joda.time.Chronology"->"org.joda.time.TimeOfDay(long org.joda.time.Chronology )"[label="1"]
"org.joda.time.Chronology"->"org.joda.time.TimeOfDay(org.joda.time.Chronology )"[label="1"]
"org.joda.time.Chronology"->"org.joda.time.TimeOfDay.fromMillisOfDay(long org.joda.time.Chronology )org.joda.time.TimeOfDay"[label="1"]
"org.joda.time.Chronology"->"org.joda.time.YearMonth(java.lang.Object org.joda.time.Chronology )"[label="1"]
"org.joda.time.Chronology"->"org.joda.time.YearMonth(long org.joda.time.Chronology )"[label="1"]
"org.joda.time.Chronology"->"org.joda.time.YearMonth(org.joda.time.Chronology )"[label="1"]
"org.joda.time.Chronology"->"org.joda.time.YearMonth.now(org.joda.time.Chronology )org.joda.time.YearMonth"[label="1"]
"org.joda.time.Chronology"->"org.joda.time.YearMonthDay(java.lang.Object org.joda.time.Chronology )"[label="1"]
"org.joda.time.Chronology"->"org.joda.time.YearMonthDay(long org.joda.time.Chronology )"[label="1"]
"org.joda.time.Chronology"->"org.joda.time.YearMonthDay(org.joda.time.Chronology )"[label="1"]
"org.joda.time.Chronology"->"org.joda.time.base.BaseDateTime(java.lang.Object org.joda.time.Chronology )"[label="1"]
"org.joda.time.Chronology"->"org.joda.time.base.BaseDateTime(long org.joda.time.Chronology )"[label="1"]
"org.joda.time.Chronology"->"org.joda.time.base.BaseDateTime(org.joda.time.Chronology )"[label="1"]
"org.joda.time.Chronology"->"org.joda.time.chrono.LenientChronology.getInstance(org.joda.time.Chronology )org.joda.time.chrono.LenientChronology"[label="1"]
"org.joda.time.Chronology"->"org.joda.time.chrono.StrictChronology.getInstance(org.joda.time.Chronology )org.joda.time.chrono.StrictChronology"[label="1"]
"org.joda.time.Chronology"->"org.joda.time.chrono.ZonedChronology.getInstance(org.joda.time.Chronology org.joda.time.DateTimeZone )org.joda.time.chrono.ZonedChronology"[label="1"]
"org.joda.time.Chronology"->"org.joda.time.field.LenientDateTimeField.getInstance(org.joda.time.DateTimeField org.joda.time.Chronology )org.joda.time.DateTimeField"[label="1"]
"org.joda.time.Chronology"->"org.joda.time.field.SkipDateTimeField(org.joda.time.Chronology org.joda.time.DateTimeField )"[label="1"]
"org.joda.time.Chronology"->"org.joda.time.field.SkipUndoDateTimeField(org.joda.time.Chronology org.joda.time.DateTimeField )"[label="1"]
"org.joda.time.DateMidnight"->"(static)org.joda.time.DateMidnight.centuryOfEra(org.joda.time.DateMidnight )org.joda.time.DateMidnight$Property"[label="1"]
"org.joda.time.DateMidnight"->"(static)org.joda.time.DateMidnight.dayOfMonth(org.joda.time.DateMidnight )org.joda.time.DateMidnight$Property"[label="1"]
"org.joda.time.DateMidnight"->"(static)org.joda.time.DateMidnight.dayOfWeek(org.joda.time.DateMidnight )org.joda.time.DateMidnight$Property"[label="1"]
"org.joda.time.DateMidnight"->"(static)org.joda.time.DateMidnight.dayOfYear(org.joda.time.DateMidnight )org.joda.time.DateMidnight$Property"[label="1"]
"org.joda.time.DateMidnight"->"(static)org.joda.time.DateMidnight.era(org.joda.time.DateMidnight )org.joda.time.DateMidnight$Property"[label="1"]
"org.joda.time.DateMidnight"->"(static)org.joda.time.DateMidnight.minus(org.joda.time.DateMidnight long )org.joda.time.DateMidnight"[label="1"]
"org.joda.time.DateMidnight"->"(static)org.joda.time.DateMidnight.minus(org.joda.time.DateMidnight org.joda.time.ReadableDuration )org.joda.time.DateMidnight"[label="1"]
"org.joda.time.DateMidnight"->"(static)org.joda.time.DateMidnight.minus(org.joda.time.DateMidnight org.joda.time.ReadablePeriod )org.joda.time.DateMidnight"[label="1"]
"org.joda.time.DateMidnight"->"(static)org.joda.time.DateMidnight.minusDays(org.joda.time.DateMidnight int )org.joda.time.DateMidnight"[label="1"]
"org.joda.time.DateMidnight"->"(static)org.joda.time.DateMidnight.minusMonths(org.joda.time.DateMidnight int )org.joda.time.DateMidnight"[label="1"]
"org.joda.time.DateMidnight"->"(static)org.joda.time.DateMidnight.minusWeeks(org.joda.time.DateMidnight int )org.joda.time.DateMidnight"[label="1"]
"org.joda.time.DateMidnight"->"(static)org.joda.time.DateMidnight.minusYears(org.joda.time.DateMidnight int )org.joda.time.DateMidnight"[label="1"]
"org.joda.time.DateMidnight"->"(static)org.joda.time.DateMidnight.monthOfYear(org.joda.time.DateMidnight )org.joda.time.DateMidnight$Property"[label="1"]
"org.joda.time.DateMidnight"->"(static)org.joda.time.DateMidnight.plus(org.joda.time.DateMidnight long )org.joda.time.DateMidnight"[label="1"]
"org.joda.time.DateMidnight"->"(static)org.joda.time.DateMidnight.plus(org.joda.time.DateMidnight org.joda.time.ReadableDuration )org.joda.time.DateMidnight"[label="1"]
"org.joda.time.DateMidnight"->"(static)org.joda.time.DateMidnight.plus(org.joda.time.DateMidnight org.joda.time.ReadablePeriod )org.joda.time.DateMidnight"[label="1"]
"org.joda.time.DateMidnight"->"(static)org.joda.time.DateMidnight.plusDays(org.joda.time.DateMidnight int )org.joda.time.DateMidnight"[label="1"]
"org.joda.time.DateMidnight"->"(static)org.joda.time.DateMidnight.plusMonths(org.joda.time.DateMidnight int )org.joda.time.DateMidnight"[label="1"]
"org.joda.time.DateMidnight"->"(static)org.joda.time.DateMidnight.plusWeeks(org.joda.time.DateMidnight int )org.joda.time.DateMidnight"[label="1"]
"org.joda.time.DateMidnight"->"(static)org.joda.time.DateMidnight.plusYears(org.joda.time.DateMidnight int )org.joda.time.DateMidnight"[label="1"]
"org.joda.time.DateMidnight"->"(static)org.joda.time.DateMidnight.property(org.joda.time.DateMidnight org.joda.time.DateTimeFieldType )org.joda.time.DateMidnight$Property"[label="1"]
"org.joda.time.DateMidnight"->"(static)org.joda.time.DateMidnight.toInterval(org.joda.time.DateMidnight )org.joda.time.Interval"[label="1"]
"org.joda.time.DateMidnight"->"(static)org.joda.time.DateMidnight.toLocalDate(org.joda.time.DateMidnight )org.joda.time.LocalDate"[label="1"]
"org.joda.time.DateMidnight"->"(static)org.joda.time.DateMidnight.toYearMonthDay(org.joda.time.DateMidnight )org.joda.time.YearMonthDay"[label="1"]
"org.joda.time.DateMidnight"->"(static)org.joda.time.DateMidnight.weekOfWeekyear(org.joda.time.DateMidnight )org.joda.time.DateMidnight$Property"[label="1"]
"org.joda.time.DateMidnight"->"(static)org.joda.time.DateMidnight.weekyear(org.joda.time.DateMidnight )org.joda.time.DateMidnight$Property"[label="1"]
"org.joda.time.DateMidnight"->"(static)org.joda.time.DateMidnight.withCenturyOfEra(org.joda.time.DateMidnight int )org.joda.time.DateMidnight"[label="1"]
"org.joda.time.DateMidnight"->"(static)org.joda.time.DateMidnight.withChronology(org.joda.time.DateMidnight org.joda.time.Chronology )org.joda.time.DateMidnight"[label="1"]
"org.joda.time.DateMidnight"->"(static)org.joda.time.DateMidnight.withDayOfMonth(org.joda.time.DateMidnight int )org.joda.time.DateMidnight"[label="1"]
"org.joda.time.DateMidnight"->"(static)org.joda.time.DateMidnight.withDayOfWeek(org.joda.time.DateMidnight int )org.joda.time.DateMidnight"[label="1"]
"org.joda.time.DateMidnight"->"(static)org.joda.time.DateMidnight.withDayOfYear(org.joda.time.DateMidnight int )org.joda.time.DateMidnight"[label="1"]
"org.joda.time.DateMidnight"->"(static)org.joda.time.DateMidnight.withDurationAdded(org.joda.time.DateMidnight long int )org.joda.time.DateMidnight"[label="1"]
"org.joda.time.DateMidnight"->"(static)org.joda.time.DateMidnight.withDurationAdded(org.joda.time.DateMidnight org.joda.time.ReadableDuration int )org.joda.time.DateMidnight"[label="1"]
"org.joda.time.DateMidnight"->"(static)org.joda.time.DateMidnight.withEra(org.joda.time.DateMidnight int )org.joda.time.DateMidnight"[label="1"]
"org.joda.time.DateMidnight"->"(static)org.joda.time.DateMidnight.withField(org.joda.time.DateMidnight org.joda.time.DateTimeFieldType int )org.joda.time.DateMidnight"[label="1"]
"org.joda.time.DateMidnight"->"(static)org.joda.time.DateMidnight.withFieldAdded(org.joda.time.DateMidnight org.joda.time.DurationFieldType int )org.joda.time.DateMidnight"[label="1"]
"org.joda.time.DateMidnight"->"(static)org.joda.time.DateMidnight.withFields(org.joda.time.DateMidnight org.joda.time.ReadablePartial )org.joda.time.DateMidnight"[label="1"]
"org.joda.time.DateMidnight"->"(static)org.joda.time.DateMidnight.withMillis(org.joda.time.DateMidnight long )org.joda.time.DateMidnight"[label="1"]
"org.joda.time.DateMidnight"->"(static)org.joda.time.DateMidnight.withMonthOfYear(org.joda.time.DateMidnight int )org.joda.time.DateMidnight"[label="1"]
"org.joda.time.DateMidnight"->"(static)org.joda.time.DateMidnight.withPeriodAdded(org.joda.time.DateMidnight org.joda.time.ReadablePeriod int )org.joda.time.DateMidnight"[label="1"]
"org.joda.time.DateMidnight"->"(static)org.joda.time.DateMidnight.withWeekOfWeekyear(org.joda.time.DateMidnight int )org.joda.time.DateMidnight"[label="1"]
"org.joda.time.DateMidnight"->"(static)org.joda.time.DateMidnight.withWeekyear(org.joda.time.DateMidnight int )org.joda.time.DateMidnight"[label="1"]
"org.joda.time.DateMidnight"->"(static)org.joda.time.DateMidnight.withYear(org.joda.time.DateMidnight int )org.joda.time.DateMidnight"[label="1"]
"org.joda.time.DateMidnight"->"(static)org.joda.time.DateMidnight.withYearOfCentury(org.joda.time.DateMidnight int )org.joda.time.DateMidnight"[label="1"]
"org.joda.time.DateMidnight"->"(static)org.joda.time.DateMidnight.withYearOfEra(org.joda.time.DateMidnight int )org.joda.time.DateMidnight"[label="1"]
"org.joda.time.DateMidnight"->"(static)org.joda.time.DateMidnight.withZoneRetainFields(org.joda.time.DateMidnight org.joda.time.DateTimeZone )org.joda.time.DateMidnight"[label="1"]
"org.joda.time.DateMidnight"->"(static)org.joda.time.DateMidnight.year(org.joda.time.DateMidnight )org.joda.time.DateMidnight$Property"[label="1"]
"org.joda.time.DateMidnight"->"(static)org.joda.time.DateMidnight.yearOfCentury(org.joda.time.DateMidnight )org.joda.time.DateMidnight$Property"[label="1"]
"org.joda.time.DateMidnight"->"(static)org.joda.time.DateMidnight.yearOfEra(org.joda.time.DateMidnight )org.joda.time.DateMidnight$Property"[label="1"]
"org.joda.time.DateMidnight"->"org.joda.time.DateMidnightIsPolymorphicToorg.joda.time.base.AbstractDateTime"[label="1"]
"org.joda.time.DateMidnight$Property"->"(static)org.joda.time.DateMidnight$Property.addToCopy(org.joda.time.DateMidnight$Property int )org.joda.time.DateMidnight"[label="1"]
"org.joda.time.DateMidnight$Property"->"(static)org.joda.time.DateMidnight$Property.addToCopy(org.joda.time.DateMidnight$Property long )org.joda.time.DateMidnight"[label="1"]
"org.joda.time.DateMidnight$Property"->"(static)org.joda.time.DateMidnight$Property.addWrapFieldToCopy(org.joda.time.DateMidnight$Property int )org.joda.time.DateMidnight"[label="1"]
"org.joda.time.DateMidnight$Property"->"(static)org.joda.time.DateMidnight$Property.getDateMidnight(org.joda.time.DateMidnight$Property )org.joda.time.DateMidnight"[label="1"]
"org.joda.time.DateMidnight$Property"->"(static)org.joda.time.DateMidnight$Property.getField(org.joda.time.DateMidnight$Property )org.joda.time.DateTimeField"[label="1"]
"org.joda.time.DateMidnight$Property"->"(static)org.joda.time.DateMidnight$Property.roundCeilingCopy(org.joda.time.DateMidnight$Property )org.joda.time.DateMidnight"[label="1"]
"org.joda.time.DateMidnight$Property"->"(static)org.joda.time.DateMidnight$Property.roundFloorCopy(org.joda.time.DateMidnight$Property )org.joda.time.DateMidnight"[label="1"]
"org.joda.time.DateMidnight$Property"->"(static)org.joda.time.DateMidnight$Property.roundHalfCeilingCopy(org.joda.time.DateMidnight$Property )org.joda.time.DateMidnight"[label="1"]
"org.joda.time.DateMidnight$Property"->"(static)org.joda.time.DateMidnight$Property.roundHalfEvenCopy(org.joda.time.DateMidnight$Property )org.joda.time.DateMidnight"[label="1"]
"org.joda.time.DateMidnight$Property"->"(static)org.joda.time.DateMidnight$Property.roundHalfFloorCopy(org.joda.time.DateMidnight$Property )org.joda.time.DateMidnight"[label="1"]
"org.joda.time.DateMidnight$Property"->"(static)org.joda.time.DateMidnight$Property.setCopy(org.joda.time.DateMidnight$Property int )org.joda.time.DateMidnight"[label="1"]
"org.joda.time.DateMidnight$Property"->"(static)org.joda.time.DateMidnight$Property.setCopy(org.joda.time.DateMidnight$Property java.lang.String )org.joda.time.DateMidnight"[label="1"]
"org.joda.time.DateMidnight$Property"->"(static)org.joda.time.DateMidnight$Property.setCopy(org.joda.time.DateMidnight$Property java.lang.String java.util.Locale )org.joda.time.DateMidnight"[label="1"]
"org.joda.time.DateMidnight$Property"->"(static)org.joda.time.DateMidnight$Property.withMaximumValue(org.joda.time.DateMidnight$Property )org.joda.time.DateMidnight"[label="1"]
"org.joda.time.DateMidnight$Property"->"(static)org.joda.time.DateMidnight$Property.withMinimumValue(org.joda.time.DateMidnight$Property )org.joda.time.DateMidnight"[label="1"]
"org.joda.time.DateMidnight$Property"->"org.joda.time.DateMidnight$PropertyIsPolymorphicToorg.joda.time.field.AbstractReadableInstantFieldProperty"[label="1"]
"org.joda.time.DateTime"->"(static)org.joda.time.DateTime.centuryOfEra(org.joda.time.DateTime )org.joda.time.DateTime$Property"[label="1"]
"org.joda.time.DateTime"->"(static)org.joda.time.DateTime.dayOfMonth(org.joda.time.DateTime )org.joda.time.DateTime$Property"[label="1"]
"org.joda.time.DateTime"->"(static)org.joda.time.DateTime.dayOfWeek(org.joda.time.DateTime )org.joda.time.DateTime$Property"[label="1"]
"org.joda.time.DateTime"->"(static)org.joda.time.DateTime.dayOfYear(org.joda.time.DateTime )org.joda.time.DateTime$Property"[label="1"]
"org.joda.time.DateTime"->"(static)org.joda.time.DateTime.era(org.joda.time.DateTime )org.joda.time.DateTime$Property"[label="1"]
"org.joda.time.DateTime"->"(static)org.joda.time.DateTime.hourOfDay(org.joda.time.DateTime )org.joda.time.DateTime$Property"[label="1"]
"org.joda.time.DateTime"->"(static)org.joda.time.DateTime.millisOfDay(org.joda.time.DateTime )org.joda.time.DateTime$Property"[label="1"]
"org.joda.time.DateTime"->"(static)org.joda.time.DateTime.millisOfSecond(org.joda.time.DateTime )org.joda.time.DateTime$Property"[label="1"]
"org.joda.time.DateTime"->"(static)org.joda.time.DateTime.minus(org.joda.time.DateTime long )org.joda.time.DateTime"[label="1"]
"org.joda.time.DateTime"->"(static)org.joda.time.DateTime.minus(org.joda.time.DateTime org.joda.time.ReadableDuration )org.joda.time.DateTime"[label="1"]
"org.joda.time.DateTime"->"(static)org.joda.time.DateTime.minus(org.joda.time.DateTime org.joda.time.ReadablePeriod )org.joda.time.DateTime"[label="1"]
"org.joda.time.DateTime"->"(static)org.joda.time.DateTime.minusDays(org.joda.time.DateTime int )org.joda.time.DateTime"[label="1"]
"org.joda.time.DateTime"->"(static)org.joda.time.DateTime.minusHours(org.joda.time.DateTime int )org.joda.time.DateTime"[label="1"]
"org.joda.time.DateTime"->"(static)org.joda.time.DateTime.minusMillis(org.joda.time.DateTime int )org.joda.time.DateTime"[label="1"]
"org.joda.time.DateTime"->"(static)org.joda.time.DateTime.minusMinutes(org.joda.time.DateTime int )org.joda.time.DateTime"[label="1"]
"org.joda.time.DateTime"->"(static)org.joda.time.DateTime.minusMonths(org.joda.time.DateTime int )org.joda.time.DateTime"[label="1"]
"org.joda.time.DateTime"->"(static)org.joda.time.DateTime.minusSeconds(org.joda.time.DateTime int )org.joda.time.DateTime"[label="1"]
"org.joda.time.DateTime"->"(static)org.joda.time.DateTime.minusWeeks(org.joda.time.DateTime int )org.joda.time.DateTime"[label="1"]
"org.joda.time.DateTime"->"(static)org.joda.time.DateTime.minusYears(org.joda.time.DateTime int )org.joda.time.DateTime"[label="1"]
"org.joda.time.DateTime"->"(static)org.joda.time.DateTime.minuteOfDay(org.joda.time.DateTime )org.joda.time.DateTime$Property"[label="1"]
"org.joda.time.DateTime"->"(static)org.joda.time.DateTime.minuteOfHour(org.joda.time.DateTime )org.joda.time.DateTime$Property"[label="1"]
"org.joda.time.DateTime"->"(static)org.joda.time.DateTime.monthOfYear(org.joda.time.DateTime )org.joda.time.DateTime$Property"[label="1"]
"org.joda.time.DateTime"->"(static)org.joda.time.DateTime.plus(org.joda.time.DateTime long )org.joda.time.DateTime"[label="1"]
"org.joda.time.DateTime"->"(static)org.joda.time.DateTime.plus(org.joda.time.DateTime org.joda.time.ReadableDuration )org.joda.time.DateTime"[label="1"]
"org.joda.time.DateTime"->"(static)org.joda.time.DateTime.plus(org.joda.time.DateTime org.joda.time.ReadablePeriod )org.joda.time.DateTime"[label="1"]
"org.joda.time.DateTime"->"(static)org.joda.time.DateTime.plusDays(org.joda.time.DateTime int )org.joda.time.DateTime"[label="1"]
"org.joda.time.DateTime"->"(static)org.joda.time.DateTime.plusHours(org.joda.time.DateTime int )org.joda.time.DateTime"[label="1"]
"org.joda.time.DateTime"->"(static)org.joda.time.DateTime.plusMillis(org.joda.time.DateTime int )org.joda.time.DateTime"[label="1"]
"org.joda.time.DateTime"->"(static)org.joda.time.DateTime.plusMinutes(org.joda.time.DateTime int )org.joda.time.DateTime"[label="1"]
"org.joda.time.DateTime"->"(static)org.joda.time.DateTime.plusMonths(org.joda.time.DateTime int )org.joda.time.DateTime"[label="1"]
"org.joda.time.DateTime"->"(static)org.joda.time.DateTime.plusSeconds(org.joda.time.DateTime int )org.joda.time.DateTime"[label="1"]
"org.joda.time.DateTime"->"(static)org.joda.time.DateTime.plusWeeks(org.joda.time.DateTime int )org.joda.time.DateTime"[label="1"]
"org.joda.time.DateTime"->"(static)org.joda.time.DateTime.plusYears(org.joda.time.DateTime int )org.joda.time.DateTime"[label="1"]
"org.joda.time.DateTime"->"(static)org.joda.time.DateTime.property(org.joda.time.DateTime org.joda.time.DateTimeFieldType )org.joda.time.DateTime$Property"[label="1"]
"org.joda.time.DateTime"->"(static)org.joda.time.DateTime.secondOfDay(org.joda.time.DateTime )org.joda.time.DateTime$Property"[label="1"]
"org.joda.time.DateTime"->"(static)org.joda.time.DateTime.secondOfMinute(org.joda.time.DateTime )org.joda.time.DateTime$Property"[label="1"]
"org.joda.time.DateTime"->"(static)org.joda.time.DateTime.toDateMidnight(org.joda.time.DateTime )org.joda.time.DateMidnight"[label="1"]
"org.joda.time.DateTime"->"(static)org.joda.time.DateTime.toDateTime(org.joda.time.DateTime )org.joda.time.DateTime"[label="1"]
"org.joda.time.DateTime"->"(static)org.joda.time.DateTime.toDateTime(org.joda.time.DateTime org.joda.time.Chronology )org.joda.time.DateTime"[label="1"]
"org.joda.time.DateTime"->"(static)org.joda.time.DateTime.toDateTime(org.joda.time.DateTime org.joda.time.DateTimeZone )org.joda.time.DateTime"[label="1"]
"org.joda.time.DateTime"->"(static)org.joda.time.DateTime.toDateTimeISO(org.joda.time.DateTime )org.joda.time.DateTime"[label="1"]
"org.joda.time.DateTime"->"(static)org.joda.time.DateTime.toLocalDate(org.joda.time.DateTime )org.joda.time.LocalDate"[label="1"]
"org.joda.time.DateTime"->"(static)org.joda.time.DateTime.toLocalDateTime(org.joda.time.DateTime )org.joda.time.LocalDateTime"[label="1"]
"org.joda.time.DateTime"->"(static)org.joda.time.DateTime.toLocalTime(org.joda.time.DateTime )org.joda.time.LocalTime"[label="1"]
"org.joda.time.DateTime"->"(static)org.joda.time.DateTime.toTimeOfDay(org.joda.time.DateTime )org.joda.time.TimeOfDay"[label="1"]
"org.joda.time.DateTime"->"(static)org.joda.time.DateTime.toYearMonthDay(org.joda.time.DateTime )org.joda.time.YearMonthDay"[label="1"]
"org.joda.time.DateTime"->"(static)org.joda.time.DateTime.weekOfWeekyear(org.joda.time.DateTime )org.joda.time.DateTime$Property"[label="1"]
"org.joda.time.DateTime"->"(static)org.joda.time.DateTime.weekyear(org.joda.time.DateTime )org.joda.time.DateTime$Property"[label="1"]
"org.joda.time.DateTime"->"(static)org.joda.time.DateTime.withCenturyOfEra(org.joda.time.DateTime int )org.joda.time.DateTime"[label="1"]
"org.joda.time.DateTime"->"(static)org.joda.time.DateTime.withChronology(org.joda.time.DateTime org.joda.time.Chronology )org.joda.time.DateTime"[label="1"]
"org.joda.time.DateTime"->"(static)org.joda.time.DateTime.withDate(org.joda.time.DateTime org.joda.time.LocalDate )org.joda.time.DateTime"[label="1"]
"org.joda.time.DateTime"->"(static)org.joda.time.DateTime.withDayOfMonth(org.joda.time.DateTime int )org.joda.time.DateTime"[label="1"]
"org.joda.time.DateTime"->"(static)org.joda.time.DateTime.withDayOfWeek(org.joda.time.DateTime int )org.joda.time.DateTime"[label="1"]
"org.joda.time.DateTime"->"(static)org.joda.time.DateTime.withDayOfYear(org.joda.time.DateTime int )org.joda.time.DateTime"[label="1"]
"org.joda.time.DateTime"->"(static)org.joda.time.DateTime.withDurationAdded(org.joda.time.DateTime long int )org.joda.time.DateTime"[label="1"]
"org.joda.time.DateTime"->"(static)org.joda.time.DateTime.withDurationAdded(org.joda.time.DateTime org.joda.time.ReadableDuration int )org.joda.time.DateTime"[label="1"]
"org.joda.time.DateTime"->"(static)org.joda.time.DateTime.withEarlierOffsetAtOverlap(org.joda.time.DateTime )org.joda.time.DateTime"[label="1"]
"org.joda.time.DateTime"->"(static)org.joda.time.DateTime.withEra(org.joda.time.DateTime int )org.joda.time.DateTime"[label="1"]
"org.joda.time.DateTime"->"(static)org.joda.time.DateTime.withField(org.joda.time.DateTime org.joda.time.DateTimeFieldType int )org.joda.time.DateTime"[label="1"]
"org.joda.time.DateTime"->"(static)org.joda.time.DateTime.withFieldAdded(org.joda.time.DateTime org.joda.time.DurationFieldType int )org.joda.time.DateTime"[label="1"]
"org.joda.time.DateTime"->"(static)org.joda.time.DateTime.withFields(org.joda.time.DateTime org.joda.time.ReadablePartial )org.joda.time.DateTime"[label="1"]
"org.joda.time.DateTime"->"(static)org.joda.time.DateTime.withHourOfDay(org.joda.time.DateTime int )org.joda.time.DateTime"[label="1"]
"org.joda.time.DateTime"->"(static)org.joda.time.DateTime.withLaterOffsetAtOverlap(org.joda.time.DateTime )org.joda.time.DateTime"[label="1"]
"org.joda.time.DateTime"->"(static)org.joda.time.DateTime.withMillis(org.joda.time.DateTime long )org.joda.time.DateTime"[label="1"]
"org.joda.time.DateTime"->"(static)org.joda.time.DateTime.withMillisOfDay(org.joda.time.DateTime int )org.joda.time.DateTime"[label="1"]
"org.joda.time.DateTime"->"(static)org.joda.time.DateTime.withMillisOfSecond(org.joda.time.DateTime int )org.joda.time.DateTime"[label="1"]
"org.joda.time.DateTime"->"(static)org.joda.time.DateTime.withMinuteOfHour(org.joda.time.DateTime int )org.joda.time.DateTime"[label="1"]
"org.joda.time.DateTime"->"(static)org.joda.time.DateTime.withMonthOfYear(org.joda.time.DateTime int )org.joda.time.DateTime"[label="1"]
"org.joda.time.DateTime"->"(static)org.joda.time.DateTime.withPeriodAdded(org.joda.time.DateTime org.joda.time.ReadablePeriod int )org.joda.time.DateTime"[label="1"]
"org.joda.time.DateTime"->"(static)org.joda.time.DateTime.withSecondOfMinute(org.joda.time.DateTime int )org.joda.time.DateTime"[label="1"]
"org.joda.time.DateTime"->"(static)org.joda.time.DateTime.withTime(org.joda.time.DateTime org.joda.time.LocalTime )org.joda.time.DateTime"[label="1"]
"org.joda.time.DateTime"->"(static)org.joda.time.DateTime.withTimeAtStartOfDay(org.joda.time.DateTime )org.joda.time.DateTime"[label="1"]
"org.joda.time.DateTime"->"(static)org.joda.time.DateTime.withWeekOfWeekyear(org.joda.time.DateTime int )org.joda.time.DateTime"[label="1"]
"org.joda.time.DateTime"->"(static)org.joda.time.DateTime.withWeekyear(org.joda.time.DateTime int )org.joda.time.DateTime"[label="1"]
"org.joda.time.DateTime"->"(static)org.joda.time.DateTime.withYear(org.joda.time.DateTime int )org.joda.time.DateTime"[label="1"]
"org.joda.time.DateTime"->"(static)org.joda.time.DateTime.withYearOfCentury(org.joda.time.DateTime int )org.joda.time.DateTime"[label="1"]
"org.joda.time.DateTime"->"(static)org.joda.time.DateTime.withYearOfEra(org.joda.time.DateTime int )org.joda.time.DateTime"[label="1"]
"org.joda.time.DateTime"->"(static)org.joda.time.DateTime.withZone(org.joda.time.DateTime org.joda.time.DateTimeZone )org.joda.time.DateTime"[label="1"]
"org.joda.time.DateTime"->"(static)org.joda.time.DateTime.withZoneRetainFields(org.joda.time.DateTime org.joda.time.DateTimeZone )org.joda.time.DateTime"[label="1"]
"org.joda.time.DateTime"->"(static)org.joda.time.DateTime.year(org.joda.time.DateTime )org.joda.time.DateTime$Property"[label="1"]
"org.joda.time.DateTime"->"(static)org.joda.time.DateTime.yearOfCentury(org.joda.time.DateTime )org.joda.time.DateTime$Property"[label="1"]
"org.joda.time.DateTime"->"(static)org.joda.time.DateTime.yearOfEra(org.joda.time.DateTime )org.joda.time.DateTime$Property"[label="1"]
"org.joda.time.DateTime"->"org.joda.time.DateTimeIsPolymorphicToorg.joda.time.base.AbstractDateTime"[label="1"]
"org.joda.time.DateTime$Property"->"(static)org.joda.time.DateTime$Property.addToCopy(org.joda.time.DateTime$Property int )org.joda.time.DateTime"[label="1"]
"org.joda.time.DateTime$Property"->"(static)org.joda.time.DateTime$Property.addToCopy(org.joda.time.DateTime$Property long )org.joda.time.DateTime"[label="1"]
"org.joda.time.DateTime$Property"->"(static)org.joda.time.DateTime$Property.addWrapFieldToCopy(org.joda.time.DateTime$Property int )org.joda.time.DateTime"[label="1"]
"org.joda.time.DateTime$Property"->"(static)org.joda.time.DateTime$Property.getDateTime(org.joda.time.DateTime$Property )org.joda.time.DateTime"[label="1"]
"org.joda.time.DateTime$Property"->"(static)org.joda.time.DateTime$Property.getField(org.joda.time.DateTime$Property )org.joda.time.DateTimeField"[label="1"]
"org.joda.time.DateTime$Property"->"(static)org.joda.time.DateTime$Property.roundCeilingCopy(org.joda.time.DateTime$Property )org.joda.time.DateTime"[label="1"]
"org.joda.time.DateTime$Property"->"(static)org.joda.time.DateTime$Property.roundFloorCopy(org.joda.time.DateTime$Property )org.joda.time.DateTime"[label="1"]
"org.joda.time.DateTime$Property"->"(static)org.joda.time.DateTime$Property.roundHalfCeilingCopy(org.joda.time.DateTime$Property )org.joda.time.DateTime"[label="1"]
"org.joda.time.DateTime$Property"->"(static)org.joda.time.DateTime$Property.roundHalfEvenCopy(org.joda.time.DateTime$Property )org.joda.time.DateTime"[label="1"]
"org.joda.time.DateTime$Property"->"(static)org.joda.time.DateTime$Property.roundHalfFloorCopy(org.joda.time.DateTime$Property )org.joda.time.DateTime"[label="1"]
"org.joda.time.DateTime$Property"->"(static)org.joda.time.DateTime$Property.setCopy(org.joda.time.DateTime$Property int )org.joda.time.DateTime"[label="1"]
"org.joda.time.DateTime$Property"->"(static)org.joda.time.DateTime$Property.setCopy(org.joda.time.DateTime$Property java.lang.String )org.joda.time.DateTime"[label="1"]
"org.joda.time.DateTime$Property"->"(static)org.joda.time.DateTime$Property.setCopy(org.joda.time.DateTime$Property java.lang.String java.util.Locale )org.joda.time.DateTime"[label="1"]
"org.joda.time.DateTime$Property"->"(static)org.joda.time.DateTime$Property.withMaximumValue(org.joda.time.DateTime$Property )org.joda.time.DateTime"[label="1"]
"org.joda.time.DateTime$Property"->"(static)org.joda.time.DateTime$Property.withMinimumValue(org.joda.time.DateTime$Property )org.joda.time.DateTime"[label="1"]
"org.joda.time.DateTime$Property"->"org.joda.time.DateTime$PropertyIsPolymorphicToorg.joda.time.field.AbstractReadableInstantFieldProperty"[label="1"]
"org.joda.time.DateTimeComparator"->"(static)org.joda.time.DateTimeComparator.compare(org.joda.time.DateTimeComparator java.lang.Object java.lang.Object )int"[label="1"]
"org.joda.time.DateTimeComparator"->"(static)org.joda.time.DateTimeComparator.equals(org.joda.time.DateTimeComparator java.lang.Object )boolean"[label="1"]
"org.joda.time.DateTimeComparator"->"(static)org.joda.time.DateTimeComparator.getLowerLimit(org.joda.time.DateTimeComparator )org.joda.time.DateTimeFieldType"[label="1"]
"org.joda.time.DateTimeComparator"->"(static)org.joda.time.DateTimeComparator.getUpperLimit(org.joda.time.DateTimeComparator )org.joda.time.DateTimeFieldType"[label="1"]
"org.joda.time.DateTimeField"->"(static)org.joda.time.DateTimeField.addWrapField(org.joda.time.DateTimeField long int )long"[label="1"]
"org.joda.time.DateTimeField"->"(static)org.joda.time.DateTimeField.get(org.joda.time.DateTimeField long )int"[label="1"]
"org.joda.time.DateTimeField"->"(static)org.joda.time.DateTimeField.getAsShortText(org.joda.time.DateTimeField int java.util.Locale )java.lang.String"[label="1"]
"org.joda.time.DateTimeField"->"(static)org.joda.time.DateTimeField.getAsShortText(org.joda.time.DateTimeField long )java.lang.String"[label="1"]
"org.joda.time.DateTimeField"->"(static)org.joda.time.DateTimeField.getAsShortText(org.joda.time.DateTimeField long java.util.Locale )java.lang.String"[label="1"]
"org.joda.time.DateTimeField"->"(static)org.joda.time.DateTimeField.getAsShortText(org.joda.time.DateTimeField org.joda.time.ReadablePartial java.util.Locale )java.lang.String"[label="1"]
"org.joda.time.DateTimeField"->"(static)org.joda.time.DateTimeField.getAsText(org.joda.time.DateTimeField int java.util.Locale )java.lang.String"[label="1"]
"org.joda.time.DateTimeField"->"(static)org.joda.time.DateTimeField.getAsText(org.joda.time.DateTimeField long )java.lang.String"[label="1"]
"org.joda.time.DateTimeField"->"(static)org.joda.time.DateTimeField.getAsText(org.joda.time.DateTimeField long java.util.Locale )java.lang.String"[label="1"]
"org.joda.time.DateTimeField"->"(static)org.joda.time.DateTimeField.getAsText(org.joda.time.DateTimeField org.joda.time.ReadablePartial java.util.Locale )java.lang.String"[label="1"]
"org.joda.time.DateTimeField"->"(static)org.joda.time.DateTimeField.getDifference(org.joda.time.DateTimeField long long )int"[label="1"]
"org.joda.time.DateTimeField"->"(static)org.joda.time.DateTimeField.getDifferenceAsLong(org.joda.time.DateTimeField long long )long"[label="1"]
"org.joda.time.DateTimeField"->"(static)org.joda.time.DateTimeField.getDurationField(org.joda.time.DateTimeField )org.joda.time.DurationField"[label="1"]
"org.joda.time.DateTimeField"->"(static)org.joda.time.DateTimeField.getLeapAmount(org.joda.time.DateTimeField long )int"[label="1"]
"org.joda.time.DateTimeField"->"(static)org.joda.time.DateTimeField.getLeapDurationField(org.joda.time.DateTimeField )org.joda.time.DurationField"[label="1"]
"org.joda.time.DateTimeField"->"(static)org.joda.time.DateTimeField.getMaximumShortTextLength(org.joda.time.DateTimeField java.util.Locale )int"[label="1"]
"org.joda.time.DateTimeField"->"(static)org.joda.time.DateTimeField.getMaximumTextLength(org.joda.time.DateTimeField java.util.Locale )int"[label="1"]
"org.joda.time.DateTimeField"->"(static)org.joda.time.DateTimeField.getMaximumValue(org.joda.time.DateTimeField )int"[label="1"]
"org.joda.time.DateTimeField"->"(static)org.joda.time.DateTimeField.getMaximumValue(org.joda.time.DateTimeField long )int"[label="1"]
"org.joda.time.DateTimeField"->"(static)org.joda.time.DateTimeField.getMaximumValue(org.joda.time.DateTimeField org.joda.time.ReadablePartial )int"[label="1"]
"org.joda.time.DateTimeField"->"(static)org.joda.time.DateTimeField.getMaximumValue(org.joda.time.DateTimeField org.joda.time.ReadablePartial int[] )int"[label="1"]
"org.joda.time.DateTimeField"->"(static)org.joda.time.DateTimeField.getMinimumValue(org.joda.time.DateTimeField )int"[label="1"]
"org.joda.time.DateTimeField"->"(static)org.joda.time.DateTimeField.getMinimumValue(org.joda.time.DateTimeField long )int"[label="1"]
"org.joda.time.DateTimeField"->"(static)org.joda.time.DateTimeField.getMinimumValue(org.joda.time.DateTimeField org.joda.time.ReadablePartial )int"[label="1"]
"org.joda.time.DateTimeField"->"(static)org.joda.time.DateTimeField.getMinimumValue(org.joda.time.DateTimeField org.joda.time.ReadablePartial int[] )int"[label="1"]
"org.joda.time.DateTimeField"->"(static)org.joda.time.DateTimeField.getName(org.joda.time.DateTimeField )java.lang.String"[label="1"]
"org.joda.time.DateTimeField"->"(static)org.joda.time.DateTimeField.getRangeDurationField(org.joda.time.DateTimeField )org.joda.time.DurationField"[label="1"]
"org.joda.time.DateTimeField"->"(static)org.joda.time.DateTimeField.getType(org.joda.time.DateTimeField )org.joda.time.DateTimeFieldType"[label="1"]
"org.joda.time.DateTimeField"->"(static)org.joda.time.DateTimeField.isLeap(org.joda.time.DateTimeField long )boolean"[label="1"]
"org.joda.time.DateTimeField"->"(static)org.joda.time.DateTimeField.isLenient(org.joda.time.DateTimeField )boolean"[label="1"]
"org.joda.time.DateTimeField"->"(static)org.joda.time.DateTimeField.isSupported(org.joda.time.DateTimeField )boolean"[label="1"]
"org.joda.time.DateTimeField"->"(static)org.joda.time.DateTimeField.remainder(org.joda.time.DateTimeField long )long"[label="1"]
"org.joda.time.DateTimeField"->"(static)org.joda.time.DateTimeField.roundCeiling(org.joda.time.DateTimeField long )long"[label="1"]
"org.joda.time.DateTimeField"->"(static)org.joda.time.DateTimeField.roundFloor(org.joda.time.DateTimeField long )long"[label="1"]
"org.joda.time.DateTimeField"->"(static)org.joda.time.DateTimeField.roundHalfCeiling(org.joda.time.DateTimeField long )long"[label="1"]
"org.joda.time.DateTimeField"->"(static)org.joda.time.DateTimeField.roundHalfEven(org.joda.time.DateTimeField long )long"[label="1"]
"org.joda.time.DateTimeField"->"(static)org.joda.time.DateTimeField.roundHalfFloor(org.joda.time.DateTimeField long )long"[label="1"]
"org.joda.time.DateTimeField"->"(static)org.joda.time.DateTimeField.set(org.joda.time.DateTimeField long int )long"[label="1"]
"org.joda.time.DateTimeField"->"(static)org.joda.time.DateTimeField.set(org.joda.time.DateTimeField long java.lang.String )long"[label="1"]
"org.joda.time.DateTimeField"->"(static)org.joda.time.base.AbstractInstant.get(org.joda.time.base.AbstractInstant org.joda.time.DateTimeField )int"[label="1"]
"org.joda.time.DateTimeField"->"org.joda.time.field.DelegatedDateTimeField(org.joda.time.DateTimeField )"[label="1"]
"org.joda.time.DateTimeField"->"org.joda.time.field.DelegatedDateTimeField(org.joda.time.DateTimeField org.joda.time.DateTimeFieldType )"[label="1"]
"org.joda.time.DateTimeField"->"org.joda.time.field.LenientDateTimeField.getInstance(org.joda.time.DateTimeField org.joda.time.Chronology )org.joda.time.DateTimeField"[label="1"]
"org.joda.time.DateTimeField"->"org.joda.time.field.OffsetDateTimeField(org.joda.time.DateTimeField int )"[label="1"]
"org.joda.time.DateTimeField"->"org.joda.time.field.SkipDateTimeField(org.joda.time.Chronology org.joda.time.DateTimeField )"[label="1"]
"org.joda.time.DateTimeField"->"org.joda.time.field.SkipUndoDateTimeField(org.joda.time.Chronology org.joda.time.DateTimeField )"[label="1"]
"org.joda.time.DateTimeField"->"org.joda.time.field.StrictDateTimeField.getInstance(org.joda.time.DateTimeField )org.joda.time.DateTimeField"[label="1"]
"org.joda.time.DateTimeField"->"org.joda.time.field.ZeroIsMaxDateTimeField(org.joda.time.DateTimeField org.joda.time.DateTimeFieldType )"[label="1"]
"org.joda.time.DateTimeFieldType"->"(static)org.joda.time.DateMidnight.property(org.joda.time.DateMidnight org.joda.time.DateTimeFieldType )org.joda.time.DateMidnight$Property"[label="1"]
"org.joda.time.DateTimeFieldType"->"(static)org.joda.time.DateMidnight.withField(org.joda.time.DateMidnight org.joda.time.DateTimeFieldType int )org.joda.time.DateMidnight"[label="1"]
"org.joda.time.DateTimeFieldType"->"(static)org.joda.time.DateTime.property(org.joda.time.DateTime org.joda.time.DateTimeFieldType )org.joda.time.DateTime$Property"[label="1"]
"org.joda.time.DateTimeFieldType"->"(static)org.joda.time.DateTime.withField(org.joda.time.DateTime org.joda.time.DateTimeFieldType int )org.joda.time.DateTime"[label="1"]
"org.joda.time.DateTimeFieldType"->"(static)org.joda.time.DateTimeFieldType.getDurationType(org.joda.time.DateTimeFieldType )org.joda.time.DurationFieldType"[label="1"]
"org.joda.time.DateTimeFieldType"->"(static)org.joda.time.DateTimeFieldType.getField(org.joda.time.DateTimeFieldType org.joda.time.Chronology )org.joda.time.DateTimeField"[label="1"]
"org.joda.time.DateTimeFieldType"->"(static)org.joda.time.DateTimeFieldType.getName(org.joda.time.DateTimeFieldType )java.lang.String"[label="1"]
"org.joda.time.DateTimeFieldType"->"(static)org.joda.time.DateTimeFieldType.getRangeDurationType(org.joda.time.DateTimeFieldType )org.joda.time.DurationFieldType"[label="1"]
"org.joda.time.DateTimeFieldType"->"(static)org.joda.time.DateTimeFieldType.isSupported(org.joda.time.DateTimeFieldType org.joda.time.Chronology )boolean"[label="1"]
"org.joda.time.DateTimeFieldType"->"(static)org.joda.time.LocalDate.get(org.joda.time.LocalDate org.joda.time.DateTimeFieldType )int"[label="1"]
"org.joda.time.DateTimeFieldType"->"(static)org.joda.time.LocalDate.isSupported(org.joda.time.LocalDate org.joda.time.DateTimeFieldType )boolean"[label="1"]
"org.joda.time.DateTimeFieldType"->"(static)org.joda.time.LocalDate.property(org.joda.time.LocalDate org.joda.time.DateTimeFieldType )org.joda.time.LocalDate$Property"[label="1"]
"org.joda.time.DateTimeFieldType"->"(static)org.joda.time.LocalDate.withField(org.joda.time.LocalDate org.joda.time.DateTimeFieldType int )org.joda.time.LocalDate"[label="1"]
"org.joda.time.DateTimeFieldType"->"(static)org.joda.time.LocalDateTime.get(org.joda.time.LocalDateTime org.joda.time.DateTimeFieldType )int"[label="1"]
"org.joda.time.DateTimeFieldType"->"(static)org.joda.time.LocalDateTime.isSupported(org.joda.time.LocalDateTime org.joda.time.DateTimeFieldType )boolean"[label="1"]
"org.joda.time.DateTimeFieldType"->"(static)org.joda.time.LocalDateTime.property(org.joda.time.LocalDateTime org.joda.time.DateTimeFieldType )org.joda.time.LocalDateTime$Property"[label="1"]
"org.joda.time.DateTimeFieldType"->"(static)org.joda.time.LocalDateTime.withField(org.joda.time.LocalDateTime org.joda.time.DateTimeFieldType int )org.joda.time.LocalDateTime"[label="1"]
"org.joda.time.DateTimeFieldType"->"(static)org.joda.time.LocalTime.get(org.joda.time.LocalTime org.joda.time.DateTimeFieldType )int"[label="1"]
"org.joda.time.DateTimeFieldType"->"(static)org.joda.time.LocalTime.isSupported(org.joda.time.LocalTime org.joda.time.DateTimeFieldType )boolean"[label="1"]
"org.joda.time.DateTimeFieldType"->"(static)org.joda.time.LocalTime.property(org.joda.time.LocalTime org.joda.time.DateTimeFieldType )org.joda.time.LocalTime$Property"[label="1"]
"org.joda.time.DateTimeFieldType"->"(static)org.joda.time.LocalTime.withField(org.joda.time.LocalTime org.joda.time.DateTimeFieldType int )org.joda.time.LocalTime"[label="1"]
"org.joda.time.DateTimeFieldType"->"(static)org.joda.time.MonthDay.property(org.joda.time.MonthDay org.joda.time.DateTimeFieldType )org.joda.time.MonthDay$Property"[label="1"]
"org.joda.time.DateTimeFieldType"->"(static)org.joda.time.MonthDay.withField(org.joda.time.MonthDay org.joda.time.DateTimeFieldType int )org.joda.time.MonthDay"[label="1"]
"org.joda.time.DateTimeFieldType"->"(static)org.joda.time.MutableDateTime.property(org.joda.time.MutableDateTime org.joda.time.DateTimeFieldType )org.joda.time.MutableDateTime$Property"[label="1"]
"org.joda.time.DateTimeFieldType"->"(static)org.joda.time.Partial.property(org.joda.time.Partial org.joda.time.DateTimeFieldType )org.joda.time.Partial$Property"[label="1"]
"org.joda.time.DateTimeFieldType"->"(static)org.joda.time.Partial.with(org.joda.time.Partial org.joda.time.DateTimeFieldType int )org.joda.time.Partial"[label="1"]
"org.joda.time.DateTimeFieldType"->"(static)org.joda.time.Partial.withField(org.joda.time.Partial org.joda.time.DateTimeFieldType int )org.joda.time.Partial"[label="1"]
"org.joda.time.DateTimeFieldType"->"(static)org.joda.time.Partial.without(org.joda.time.Partial org.joda.time.DateTimeFieldType )org.joda.time.Partial"[label="1"]
"org.joda.time.DateTimeFieldType"->"(static)org.joda.time.ReadableInstant.get(org.joda.time.ReadableInstant org.joda.time.DateTimeFieldType )int"[label="1"]
"org.joda.time.DateTimeFieldType"->"(static)org.joda.time.ReadableInstant.isSupported(org.joda.time.ReadableInstant org.joda.time.DateTimeFieldType )boolean"[label="1"]
"org.joda.time.DateTimeFieldType"->"(static)org.joda.time.ReadablePartial.get(org.joda.time.ReadablePartial org.joda.time.DateTimeFieldType )int"[label="1"]
"org.joda.time.DateTimeFieldType"->"(static)org.joda.time.ReadablePartial.isSupported(org.joda.time.ReadablePartial org.joda.time.DateTimeFieldType )boolean"[label="1"]
"org.joda.time.DateTimeFieldType"->"(static)org.joda.time.TimeOfDay.property(org.joda.time.TimeOfDay org.joda.time.DateTimeFieldType )org.joda.time.TimeOfDay$Property"[label="1"]
"org.joda.time.DateTimeFieldType"->"(static)org.joda.time.TimeOfDay.withField(org.joda.time.TimeOfDay org.joda.time.DateTimeFieldType int )org.joda.time.TimeOfDay"[label="1"]
"org.joda.time.DateTimeFieldType"->"(static)org.joda.time.YearMonth.property(org.joda.time.YearMonth org.joda.time.DateTimeFieldType )org.joda.time.YearMonth$Property"[label="1"]
"org.joda.time.DateTimeFieldType"->"(static)org.joda.time.YearMonth.withField(org.joda.time.YearMonth org.joda.time.DateTimeFieldType int )org.joda.time.YearMonth"[label="1"]
"org.joda.time.DateTimeFieldType"->"(static)org.joda.time.YearMonthDay.property(org.joda.time.YearMonthDay org.joda.time.DateTimeFieldType )org.joda.time.YearMonthDay$Property"[label="1"]
"org.joda.time.DateTimeFieldType"->"(static)org.joda.time.YearMonthDay.withField(org.joda.time.YearMonthDay org.joda.time.DateTimeFieldType int )org.joda.time.YearMonthDay"[label="1"]
"org.joda.time.DateTimeFieldType"->"(static)org.joda.time.base.AbstractDateTime.get(org.joda.time.base.AbstractDateTime org.joda.time.DateTimeFieldType )int"[label="1"]
"org.joda.time.DateTimeFieldType"->"(static)org.joda.time.base.AbstractInstant.get(org.joda.time.base.AbstractInstant org.joda.time.DateTimeFieldType )int"[label="1"]
"org.joda.time.DateTimeFieldType"->"(static)org.joda.time.base.AbstractInstant.isSupported(org.joda.time.base.AbstractInstant org.joda.time.DateTimeFieldType )boolean"[label="1"]
"org.joda.time.DateTimeFieldType"->"(static)org.joda.time.base.AbstractPartial.get(org.joda.time.base.AbstractPartial org.joda.time.DateTimeFieldType )int"[label="1"]
"org.joda.time.DateTimeFieldType"->"(static)org.joda.time.base.AbstractPartial.indexOf(org.joda.time.base.AbstractPartial org.joda.time.DateTimeFieldType )int"[label="1"]
"org.joda.time.DateTimeFieldType"->"(static)org.joda.time.base.AbstractPartial.isSupported(org.joda.time.base.AbstractPartial org.joda.time.DateTimeFieldType )boolean"[label="1"]
"org.joda.time.DateTimeFieldType"->"(static)org.joda.time.format.DateTimeFormatterBuilder.appendFixedDecimal(org.joda.time.format.DateTimeFormatterBuilder org.joda.time.DateTimeFieldType int )org.joda.time.format.DateTimeFormatterBuilder"[label="1"]
"org.joda.time.DateTimeFieldType"->"(static)org.joda.time.format.DateTimeFormatterBuilder.appendFixedSignedDecimal(org.joda.time.format.DateTimeFormatterBuilder org.joda.time.DateTimeFieldType int )org.joda.time.format.DateTimeFormatterBuilder"[label="1"]
"org.joda.time.DateTimeFieldType"->"(static)org.joda.time.format.DateTimeFormatterBuilder.appendShortText(org.joda.time.format.DateTimeFormatterBuilder org.joda.time.DateTimeFieldType )org.joda.time.format.DateTimeFormatterBuilder"[label="1"]
"org.joda.time.DateTimeFieldType"->"(static)org.joda.time.format.DateTimeFormatterBuilder.appendText(org.joda.time.format.DateTimeFormatterBuilder org.joda.time.DateTimeFieldType )org.joda.time.format.DateTimeFormatterBuilder"[label="1"]
"org.joda.time.DateTimeFieldType"->"org.joda.time.DateTimeComparator.getInstance(org.joda.time.DateTimeFieldType )org.joda.time.DateTimeComparator"[label="1"]
"org.joda.time.DateTimeFieldType"->"org.joda.time.DateTimeComparator.getInstance(org.joda.time.DateTimeFieldType org.joda.time.DateTimeFieldType )org.joda.time.DateTimeComparator"[label="2"]
"org.joda.time.DateTimeFieldType"->"org.joda.time.IllegalFieldValueException(org.joda.time.DateTimeFieldType java.lang.String )"[label="1"]
"org.joda.time.DateTimeFieldType"->"org.joda.time.Partial(org.joda.time.DateTimeFieldType int )"[label="1"]
"org.joda.time.DateTimeFieldType"->"org.joda.time.field.DelegatedDateTimeField(org.joda.time.DateTimeField org.joda.time.DateTimeFieldType )"[label="1"]
"org.joda.time.DateTimeFieldType"->"org.joda.time.field.DividedDateTimeField(org.joda.time.field.RemainderDateTimeField org.joda.time.DateTimeFieldType )"[label="1"]
"org.joda.time.DateTimeFieldType"->"org.joda.time.field.ImpreciseDateTimeField(org.joda.time.DateTimeFieldType long )"[label="1"]
"org.joda.time.DateTimeFieldType"->"org.joda.time.field.PreciseDurationDateTimeField(org.joda.time.DateTimeFieldType org.joda.time.DurationField )"[label="1"]
"org.joda.time.DateTimeFieldType"->"org.joda.time.field.RemainderDateTimeField(org.joda.time.field.DividedDateTimeField org.joda.time.DateTimeFieldType )"[label="1"]
"org.joda.time.DateTimeFieldType"->"org.joda.time.field.UnsupportedDateTimeField.getInstance(org.joda.time.DateTimeFieldType org.joda.time.DurationField )org.joda.time.field.UnsupportedDateTimeField"[label="1"]
"org.joda.time.DateTimeFieldType"->"org.joda.time.field.ZeroIsMaxDateTimeField(org.joda.time.DateTimeField org.joda.time.DateTimeFieldType )"[label="1"]
"org.joda.time.DateTimeFieldType$StandardDateTimeFieldType"->"(static)org.joda.time.DateTimeFieldType$StandardDateTimeFieldType.equals(org.joda.time.DateTimeFieldType$StandardDateTimeFieldType java.lang.Object )boolean"[label="1"]
"org.joda.time.DateTimeFieldType$StandardDateTimeFieldType"->"(static)org.joda.time.DateTimeFieldType$StandardDateTimeFieldType.getDurationType(org.joda.time.DateTimeFieldType$StandardDateTimeFieldType )org.joda.time.DurationFieldType"[label="1"]
"org.joda.time.DateTimeFieldType$StandardDateTimeFieldType"->"(static)org.joda.time.DateTimeFieldType$StandardDateTimeFieldType.getField(org.joda.time.DateTimeFieldType$StandardDateTimeFieldType org.joda.time.Chronology )org.joda.time.DateTimeField"[label="1"]
"org.joda.time.DateTimeFieldType$StandardDateTimeFieldType"->"(static)org.joda.time.DateTimeFieldType$StandardDateTimeFieldType.getRangeDurationType(org.joda.time.DateTimeFieldType$StandardDateTimeFieldType )org.joda.time.DurationFieldType"[label="1"]
"org.joda.time.DateTimeFieldType[]"->"org.joda.time.Partial(org.joda.time.DateTimeFieldType[] int[] )"[label="1"]
"org.joda.time.DateTimeUtils$FixedMillisProvider"->"(static)org.joda.time.DateTimeUtils$FixedMillisProvider.getMillis(org.joda.time.DateTimeUtils$FixedMillisProvider )long"[label="1"]
"org.joda.time.DateTimeUtils$MillisProvider"->"(static)org.joda.time.DateTimeUtils$MillisProvider.getMillis(org.joda.time.DateTimeUtils$MillisProvider )long"[label="1"]
"org.joda.time.DateTimeUtils$OffsetMillisProvider"->"(static)org.joda.time.DateTimeUtils$OffsetMillisProvider.getMillis(org.joda.time.DateTimeUtils$OffsetMillisProvider )long"[label="1"]
"org.joda.time.DateTimeUtils$SystemMillisProvider"->"(static)org.joda.time.DateTimeUtils$SystemMillisProvider.getMillis(org.joda.time.DateTimeUtils$SystemMillisProvider )long"[label="1"]
"org.joda.time.DateTimeZone"->"(static)org.joda.time.Chronology.withZone(org.joda.time.Chronology org.joda.time.DateTimeZone )org.joda.time.Chronology"[label="1"]
"org.joda.time.DateTimeZone"->"(static)org.joda.time.DateMidnight.withZoneRetainFields(org.joda.time.DateMidnight org.joda.time.DateTimeZone )org.joda.time.DateMidnight"[label="1"]
"org.joda.time.DateTimeZone"->"(static)org.joda.time.DateTime.toDateTime(org.joda.time.DateTime org.joda.time.DateTimeZone )org.joda.time.DateTime"[label="1"]
"org.joda.time.DateTimeZone"->"(static)org.joda.time.DateTime.withZone(org.joda.time.DateTime org.joda.time.DateTimeZone )org.joda.time.DateTime"[label="1"]
"org.joda.time.DateTimeZone"->"(static)org.joda.time.DateTime.withZoneRetainFields(org.joda.time.DateTime org.joda.time.DateTimeZone )org.joda.time.DateTime"[label="1"]
"org.joda.time.DateTimeZone"->"(static)org.joda.time.DateTimeZone$LazyInit$1.withZone(org.joda.time.DateTimeZone$LazyInit$1 org.joda.time.DateTimeZone )org.joda.time.Chronology"[label="1"]
"org.joda.time.DateTimeZone"->"(static)org.joda.time.DateTimeZone.adjustOffset(org.joda.time.DateTimeZone long boolean )long"[label="1"]
"org.joda.time.DateTimeZone"->"(static)org.joda.time.DateTimeZone.convertLocalToUTC(org.joda.time.DateTimeZone long boolean )long"[label="1"]
"org.joda.time.DateTimeZone"->"(static)org.joda.time.DateTimeZone.convertUTCToLocal(org.joda.time.DateTimeZone long )long"[label="1"]
"org.joda.time.DateTimeZone"->"(static)org.joda.time.DateTimeZone.equals(org.joda.time.DateTimeZone java.lang.Object )boolean"[label="1"]
"org.joda.time.DateTimeZone"->"(static)org.joda.time.DateTimeZone.getID(org.joda.time.DateTimeZone )java.lang.String"[label="1"]
"org.joda.time.DateTimeZone"->"(static)org.joda.time.DateTimeZone.getMillisKeepLocal(org.joda.time.DateTimeZone org.joda.time.DateTimeZone long )long"[label="2"]
"org.joda.time.DateTimeZone"->"(static)org.joda.time.DateTimeZone.getName(org.joda.time.DateTimeZone long )java.lang.String"[label="1"]
"org.joda.time.DateTimeZone"->"(static)org.joda.time.DateTimeZone.getName(org.joda.time.DateTimeZone long java.util.Locale )java.lang.String"[label="1"]
"org.joda.time.DateTimeZone"->"(static)org.joda.time.DateTimeZone.getNameKey(org.joda.time.DateTimeZone long )java.lang.String"[label="1"]
"org.joda.time.DateTimeZone"->"(static)org.joda.time.DateTimeZone.getOffset(org.joda.time.DateTimeZone long )int"[label="1"]
"org.joda.time.DateTimeZone"->"(static)org.joda.time.DateTimeZone.getOffset(org.joda.time.DateTimeZone org.joda.time.ReadableInstant )int"[label="1"]
"org.joda.time.DateTimeZone"->"(static)org.joda.time.DateTimeZone.getOffsetFromLocal(org.joda.time.DateTimeZone long )int"[label="1"]
"org.joda.time.DateTimeZone"->"(static)org.joda.time.DateTimeZone.getShortName(org.joda.time.DateTimeZone long )java.lang.String"[label="1"]
"org.joda.time.DateTimeZone"->"(static)org.joda.time.DateTimeZone.getShortName(org.joda.time.DateTimeZone long java.util.Locale )java.lang.String"[label="1"]
"org.joda.time.DateTimeZone"->"(static)org.joda.time.DateTimeZone.getStandardOffset(org.joda.time.DateTimeZone long )int"[label="1"]
"org.joda.time.DateTimeZone"->"(static)org.joda.time.DateTimeZone.isFixed(org.joda.time.DateTimeZone )boolean"[label="1"]
"org.joda.time.DateTimeZone"->"(static)org.joda.time.DateTimeZone.isLocalDateTimeGap(org.joda.time.DateTimeZone org.joda.time.LocalDateTime )boolean"[label="1"]
"org.joda.time.DateTimeZone"->"(static)org.joda.time.DateTimeZone.isStandardOffset(org.joda.time.DateTimeZone long )boolean"[label="1"]
"org.joda.time.DateTimeZone"->"(static)org.joda.time.DateTimeZone.nextTransition(org.joda.time.DateTimeZone long )long"[label="1"]
"org.joda.time.DateTimeZone"->"(static)org.joda.time.DateTimeZone.previousTransition(org.joda.time.DateTimeZone long )long"[label="1"]
"org.joda.time.DateTimeZone"->"(static)org.joda.time.DateTimeZone.toTimeZone(org.joda.time.DateTimeZone )java.util.TimeZone"[label="1"]
"org.joda.time.DateTimeZone"->"(static)org.joda.time.LocalDate.toDateMidnight(org.joda.time.LocalDate org.joda.time.DateTimeZone )org.joda.time.DateMidnight"[label="1"]
"org.joda.time.DateTimeZone"->"(static)org.joda.time.LocalDate.toDateTime(org.joda.time.LocalDate org.joda.time.LocalTime org.joda.time.DateTimeZone )org.joda.time.DateTime"[label="1"]
"org.joda.time.DateTimeZone"->"(static)org.joda.time.LocalDate.toDateTimeAtCurrentTime(org.joda.time.LocalDate org.joda.time.DateTimeZone )org.joda.time.DateTime"[label="1"]
"org.joda.time.DateTimeZone"->"(static)org.joda.time.LocalDate.toDateTimeAtMidnight(org.joda.time.LocalDate org.joda.time.DateTimeZone )org.joda.time.DateTime"[label="1"]
"org.joda.time.DateTimeZone"->"(static)org.joda.time.LocalDate.toDateTimeAtStartOfDay(org.joda.time.LocalDate org.joda.time.DateTimeZone )org.joda.time.DateTime"[label="1"]
"org.joda.time.DateTimeZone"->"(static)org.joda.time.LocalDate.toInterval(org.joda.time.LocalDate org.joda.time.DateTimeZone )org.joda.time.Interval"[label="1"]
"org.joda.time.DateTimeZone"->"(static)org.joda.time.LocalDateTime.toDateTime(org.joda.time.LocalDateTime org.joda.time.DateTimeZone )org.joda.time.DateTime"[label="1"]
"org.joda.time.DateTimeZone"->"(static)org.joda.time.LocalTime.toDateTimeToday(org.joda.time.LocalTime org.joda.time.DateTimeZone )org.joda.time.DateTime"[label="1"]
"org.joda.time.DateTimeZone"->"(static)org.joda.time.TimeOfDay.toDateTimeToday(org.joda.time.TimeOfDay org.joda.time.DateTimeZone )org.joda.time.DateTime"[label="1"]
"org.joda.time.DateTimeZone"->"(static)org.joda.time.YearMonth.toInterval(org.joda.time.YearMonth org.joda.time.DateTimeZone )org.joda.time.Interval"[label="1"]
"org.joda.time.DateTimeZone"->"(static)org.joda.time.YearMonthDay.toDateMidnight(org.joda.time.YearMonthDay org.joda.time.DateTimeZone )org.joda.time.DateMidnight"[label="1"]
"org.joda.time.DateTimeZone"->"(static)org.joda.time.YearMonthDay.toDateTime(org.joda.time.YearMonthDay org.joda.time.TimeOfDay org.joda.time.DateTimeZone )org.joda.time.DateTime"[label="1"]
"org.joda.time.DateTimeZone"->"(static)org.joda.time.YearMonthDay.toDateTimeAtCurrentTime(org.joda.time.YearMonthDay org.joda.time.DateTimeZone )org.joda.time.DateTime"[label="1"]
"org.joda.time.DateTimeZone"->"(static)org.joda.time.YearMonthDay.toDateTimeAtMidnight(org.joda.time.YearMonthDay org.joda.time.DateTimeZone )org.joda.time.DateTime"[label="1"]
"org.joda.time.DateTimeZone"->"(static)org.joda.time.YearMonthDay.toInterval(org.joda.time.YearMonthDay org.joda.time.DateTimeZone )org.joda.time.Interval"[label="1"]
"org.joda.time.DateTimeZone"->"(static)org.joda.time.base.AbstractInstant.toDateTime(org.joda.time.base.AbstractInstant org.joda.time.DateTimeZone )org.joda.time.DateTime"[label="1"]
"org.joda.time.DateTimeZone"->"(static)org.joda.time.base.AbstractInstant.toMutableDateTime(org.joda.time.base.AbstractInstant org.joda.time.DateTimeZone )org.joda.time.MutableDateTime"[label="1"]
"org.joda.time.DateTimeZone"->"(static)org.joda.time.chrono.BaseChronology.withZone(org.joda.time.chrono.BaseChronology org.joda.time.DateTimeZone )org.joda.time.Chronology"[label="1"]
"org.joda.time.DateTimeZone"->"(static)org.joda.time.chrono.BuddhistChronology.withZone(org.joda.time.chrono.BuddhistChronology org.joda.time.DateTimeZone )org.joda.time.Chronology"[label="1"]
"org.joda.time.DateTimeZone"->"(static)org.joda.time.chrono.CopticChronology.withZone(org.joda.time.chrono.CopticChronology org.joda.time.DateTimeZone )org.joda.time.Chronology"[label="1"]
"org.joda.time.DateTimeZone"->"(static)org.joda.time.chrono.EthiopicChronology.withZone(org.joda.time.chrono.EthiopicChronology org.joda.time.DateTimeZone )org.joda.time.Chronology"[label="1"]
"org.joda.time.DateTimeZone"->"(static)org.joda.time.chrono.GJChronology.withZone(org.joda.time.chrono.GJChronology org.joda.time.DateTimeZone )org.joda.time.Chronology"[label="1"]
"org.joda.time.DateTimeZone"->"(static)org.joda.time.chrono.GregorianChronology.withZone(org.joda.time.chrono.GregorianChronology org.joda.time.DateTimeZone )org.joda.time.Chronology"[label="1"]
"org.joda.time.DateTimeZone"->"(static)org.joda.time.chrono.ISOChronology.withZone(org.joda.time.chrono.ISOChronology org.joda.time.DateTimeZone )org.joda.time.Chronology"[label="1"]
"org.joda.time.DateTimeZone"->"(static)org.joda.time.chrono.IslamicChronology.withZone(org.joda.time.chrono.IslamicChronology org.joda.time.DateTimeZone )org.joda.time.Chronology"[label="1"]
"org.joda.time.DateTimeZone"->"(static)org.joda.time.chrono.JulianChronology.withZone(org.joda.time.chrono.JulianChronology org.joda.time.DateTimeZone )org.joda.time.Chronology"[label="1"]
"org.joda.time.DateTimeZone"->"(static)org.joda.time.chrono.LenientChronology.withZone(org.joda.time.chrono.LenientChronology org.joda.time.DateTimeZone )org.joda.time.Chronology"[label="1"]
"org.joda.time.DateTimeZone"->"(static)org.joda.time.chrono.LimitChronology.withZone(org.joda.time.chrono.LimitChronology org.joda.time.DateTimeZone )org.joda.time.Chronology"[label="1"]
"org.joda.time.DateTimeZone"->"(static)org.joda.time.chrono.StrictChronology.withZone(org.joda.time.chrono.StrictChronology org.joda.time.DateTimeZone )org.joda.time.Chronology"[label="1"]
"org.joda.time.DateTimeZone"->"(static)org.joda.time.chrono.ZonedChronology.withZone(org.joda.time.chrono.ZonedChronology org.joda.time.DateTimeZone )org.joda.time.Chronology"[label="1"]
"org.joda.time.DateTimeZone"->"(static)org.joda.time.convert.AbstractConverter.getChronology(org.joda.time.convert.AbstractConverter java.lang.Object org.joda.time.DateTimeZone )org.joda.time.Chronology"[label="1"]
"org.joda.time.DateTimeZone"->"(static)org.joda.time.convert.CalendarConverter.getChronology(org.joda.time.convert.CalendarConverter java.lang.Object org.joda.time.DateTimeZone )org.joda.time.Chronology"[label="1"]
"org.joda.time.DateTimeZone"->"(static)org.joda.time.convert.InstantConverter.getChronology(org.joda.time.convert.InstantConverter java.lang.Object org.joda.time.DateTimeZone )org.joda.time.Chronology"[label="1"]
"org.joda.time.DateTimeZone"->"(static)org.joda.time.convert.PartialConverter.getChronology(org.joda.time.convert.PartialConverter java.lang.Object org.joda.time.DateTimeZone )org.joda.time.Chronology"[label="1"]
"org.joda.time.DateTimeZone"->"(static)org.joda.time.convert.ReadableInstantConverter.getChronology(org.joda.time.convert.ReadableInstantConverter java.lang.Object org.joda.time.DateTimeZone )org.joda.time.Chronology"[label="1"]
"org.joda.time.DateTimeZone"->"(static)org.joda.time.convert.ReadablePartialConverter.getChronology(org.joda.time.convert.ReadablePartialConverter java.lang.Object org.joda.time.DateTimeZone )org.joda.time.Chronology"[label="1"]
"org.joda.time.DateTimeZone"->"(static)org.joda.time.format.DateTimeFormatter.withZone(org.joda.time.format.DateTimeFormatter org.joda.time.DateTimeZone )org.joda.time.format.DateTimeFormatter"[label="1"]
"org.joda.time.DateTimeZone"->"org.joda.time.DateMidnight(java.lang.Object org.joda.time.DateTimeZone )"[label="1"]
"org.joda.time.DateTimeZone"->"org.joda.time.DateMidnight(long org.joda.time.DateTimeZone )"[label="1"]
"org.joda.time.DateTimeZone"->"org.joda.time.DateMidnight(org.joda.time.DateTimeZone )"[label="1"]
"org.joda.time.DateTimeZone"->"org.joda.time.DateMidnight.now(org.joda.time.DateTimeZone )org.joda.time.DateMidnight"[label="1"]
"org.joda.time.DateTimeZone"->"org.joda.time.DateTime(java.lang.Object org.joda.time.DateTimeZone )"[label="1"]
"org.joda.time.DateTimeZone"->"org.joda.time.DateTime(long org.joda.time.DateTimeZone )"[label="1"]
"org.joda.time.DateTimeZone"->"org.joda.time.DateTime(org.joda.time.DateTimeZone )"[label="1"]
"org.joda.time.DateTimeZone"->"org.joda.time.DateTime.now(org.joda.time.DateTimeZone )org.joda.time.DateTime"[label="1"]
"org.joda.time.DateTimeZone"->"org.joda.time.DateTimeUtils.getZone(org.joda.time.DateTimeZone )org.joda.time.DateTimeZone"[label="1"]
"org.joda.time.DateTimeZone"->"org.joda.time.LocalDate(java.lang.Object org.joda.time.DateTimeZone )"[label="1"]
"org.joda.time.DateTimeZone"->"org.joda.time.LocalDate(long org.joda.time.DateTimeZone )"[label="1"]
"org.joda.time.DateTimeZone"->"org.joda.time.LocalDate(org.joda.time.DateTimeZone )"[label="1"]
"org.joda.time.DateTimeZone"->"org.joda.time.LocalDate.now(org.joda.time.DateTimeZone )org.joda.time.LocalDate"[label="1"]
"org.joda.time.DateTimeZone"->"org.joda.time.LocalDateTime(java.lang.Object org.joda.time.DateTimeZone )"[label="1"]
"org.joda.time.DateTimeZone"->"org.joda.time.LocalDateTime(long org.joda.time.DateTimeZone )"[label="1"]
"org.joda.time.DateTimeZone"->"org.joda.time.LocalDateTime(org.joda.time.DateTimeZone )"[label="1"]
"org.joda.time.DateTimeZone"->"org.joda.time.LocalDateTime.now(org.joda.time.DateTimeZone )org.joda.time.LocalDateTime"[label="1"]
"org.joda.time.DateTimeZone"->"org.joda.time.LocalTime(java.lang.Object org.joda.time.DateTimeZone )"[label="1"]
"org.joda.time.DateTimeZone"->"org.joda.time.LocalTime(long org.joda.time.DateTimeZone )"[label="1"]
"org.joda.time.DateTimeZone"->"org.joda.time.LocalTime(org.joda.time.DateTimeZone )"[label="1"]
"org.joda.time.DateTimeZone"->"org.joda.time.LocalTime.now(org.joda.time.DateTimeZone )org.joda.time.LocalTime"[label="1"]
"org.joda.time.DateTimeZone"->"org.joda.time.MonthDay(org.joda.time.DateTimeZone )"[label="1"]
"org.joda.time.DateTimeZone"->"org.joda.time.MonthDay.now(org.joda.time.DateTimeZone )org.joda.time.MonthDay"[label="1"]
"org.joda.time.DateTimeZone"->"org.joda.time.MutableDateTime(java.lang.Object org.joda.time.DateTimeZone )"[label="1"]
"org.joda.time.DateTimeZone"->"org.joda.time.MutableDateTime(long org.joda.time.DateTimeZone )"[label="1"]
"org.joda.time.DateTimeZone"->"org.joda.time.MutableDateTime(org.joda.time.DateTimeZone )"[label="1"]
"org.joda.time.DateTimeZone"->"org.joda.time.MutableDateTime.now(org.joda.time.DateTimeZone )org.joda.time.MutableDateTime"[label="1"]
"org.joda.time.DateTimeZone"->"org.joda.time.TimeOfDay(org.joda.time.DateTimeZone )"[label="1"]
"org.joda.time.DateTimeZone"->"org.joda.time.YearMonth(org.joda.time.DateTimeZone )"[label="1"]
"org.joda.time.DateTimeZone"->"org.joda.time.YearMonth.now(org.joda.time.DateTimeZone )org.joda.time.YearMonth"[label="1"]
"org.joda.time.DateTimeZone"->"org.joda.time.YearMonthDay(org.joda.time.DateTimeZone )"[label="1"]
"org.joda.time.DateTimeZone"->"org.joda.time.base.BaseDateTime(java.lang.Object org.joda.time.DateTimeZone )"[label="1"]
"org.joda.time.DateTimeZone"->"org.joda.time.base.BaseDateTime(long org.joda.time.DateTimeZone )"[label="1"]
"org.joda.time.DateTimeZone"->"org.joda.time.base.BaseDateTime(org.joda.time.DateTimeZone )"[label="1"]
"org.joda.time.DateTimeZone"->"org.joda.time.chrono.BuddhistChronology.getInstance(org.joda.time.DateTimeZone )org.joda.time.chrono.BuddhistChronology"[label="1"]
"org.joda.time.DateTimeZone"->"org.joda.time.chrono.CopticChronology.getInstance(org.joda.time.DateTimeZone )org.joda.time.chrono.CopticChronology"[label="1"]
"org.joda.time.DateTimeZone"->"org.joda.time.chrono.CopticChronology.getInstance(org.joda.time.DateTimeZone int )org.joda.time.chrono.CopticChronology"[label="1"]
"org.joda.time.DateTimeZone"->"org.joda.time.chrono.EthiopicChronology.getInstance(org.joda.time.DateTimeZone )org.joda.time.chrono.EthiopicChronology"[label="1"]
"org.joda.time.DateTimeZone"->"org.joda.time.chrono.EthiopicChronology.getInstance(org.joda.time.DateTimeZone int )org.joda.time.chrono.EthiopicChronology"[label="1"]
"org.joda.time.DateTimeZone"->"org.joda.time.chrono.GJChronology.getInstance(org.joda.time.DateTimeZone )org.joda.time.chrono.GJChronology"[label="1"]
"org.joda.time.DateTimeZone"->"org.joda.time.chrono.GJChronology.getInstance(org.joda.time.DateTimeZone org.joda.time.ReadableInstant )org.joda.time.chrono.GJChronology"[label="1"]
"org.joda.time.DateTimeZone"->"org.joda.time.chrono.GregorianChronology.getInstance(org.joda.time.DateTimeZone )org.joda.time.chrono.GregorianChronology"[label="1"]
"org.joda.time.DateTimeZone"->"org.joda.time.chrono.GregorianChronology.getInstance(org.joda.time.DateTimeZone int )org.joda.time.chrono.GregorianChronology"[label="1"]
"org.joda.time.DateTimeZone"->"org.joda.time.chrono.ISOChronology.getInstance(org.joda.time.DateTimeZone )org.joda.time.chrono.ISOChronology"[label="1"]
"org.joda.time.DateTimeZone"->"org.joda.time.chrono.IslamicChronology.getInstance(org.joda.time.DateTimeZone )org.joda.time.chrono.IslamicChronology"[label="1"]
"org.joda.time.DateTimeZone"->"org.joda.time.chrono.IslamicChronology.getInstance(org.joda.time.DateTimeZone org.joda.time.chrono.IslamicChronology$LeapYearPatternType )org.joda.time.chrono.IslamicChronology"[label="1"]
"org.joda.time.DateTimeZone"->"org.joda.time.chrono.JulianChronology.getInstance(org.joda.time.DateTimeZone )org.joda.time.chrono.JulianChronology"[label="1"]
"org.joda.time.DateTimeZone"->"org.joda.time.chrono.JulianChronology.getInstance(org.joda.time.DateTimeZone int )org.joda.time.chrono.JulianChronology"[label="1"]
"org.joda.time.DateTimeZone"->"org.joda.time.chrono.ZonedChronology.getInstance(org.joda.time.Chronology org.joda.time.DateTimeZone )org.joda.time.chrono.ZonedChronology"[label="1"]
"org.joda.time.DateTimeZone"->"org.joda.time.tz.CachedDateTimeZone.forZone(org.joda.time.DateTimeZone )org.joda.time.tz.CachedDateTimeZone"[label="1"]
"org.joda.time.DateTimeZone$LazyInit$1"->"(static)org.joda.time.DateTimeZone$LazyInit$1.getZone(org.joda.time.DateTimeZone$LazyInit$1 )org.joda.time.DateTimeZone"[label="1"]
"org.joda.time.DateTimeZone$LazyInit$1"->"(static)org.joda.time.DateTimeZone$LazyInit$1.withUTC(org.joda.time.DateTimeZone$LazyInit$1 )org.joda.time.Chronology"[label="1"]
"org.joda.time.DateTimeZone$LazyInit$1"->"(static)org.joda.time.DateTimeZone$LazyInit$1.withZone(org.joda.time.DateTimeZone$LazyInit$1 org.joda.time.DateTimeZone )org.joda.time.Chronology"[label="1"]
"org.joda.time.Days"->"(static)org.joda.time.Days.dividedBy(org.joda.time.Days int )org.joda.time.Days"[label="1"]
"org.joda.time.Days"->"(static)org.joda.time.Days.getDays(org.joda.time.Days )int"[label="1"]
"org.joda.time.Days"->"(static)org.joda.time.Days.getFieldType(org.joda.time.Days )org.joda.time.DurationFieldType"[label="1"]
"org.joda.time.Days"->"(static)org.joda.time.Days.getPeriodType(org.joda.time.Days )org.joda.time.PeriodType"[label="1"]
"org.joda.time.Days"->"(static)org.joda.time.Days.isGreaterThan(org.joda.time.Days org.joda.time.Days )boolean"[label="2"]
"org.joda.time.Days"->"(static)org.joda.time.Days.isLessThan(org.joda.time.Days org.joda.time.Days )boolean"[label="2"]
"org.joda.time.Days"->"(static)org.joda.time.Days.minus(org.joda.time.Days int )org.joda.time.Days"[label="1"]
"org.joda.time.Days"->"(static)org.joda.time.Days.minus(org.joda.time.Days org.joda.time.Days )org.joda.time.Days"[label="2"]
"org.joda.time.Days"->"(static)org.joda.time.Days.multipliedBy(org.joda.time.Days int )org.joda.time.Days"[label="1"]
"org.joda.time.Days"->"(static)org.joda.time.Days.negated(org.joda.time.Days )org.joda.time.Days"[label="1"]
"org.joda.time.Days"->"(static)org.joda.time.Days.plus(org.joda.time.Days int )org.joda.time.Days"[label="1"]
"org.joda.time.Days"->"(static)org.joda.time.Days.plus(org.joda.time.Days org.joda.time.Days )org.joda.time.Days"[label="2"]
"org.joda.time.Days"->"(static)org.joda.time.Days.toStandardDuration(org.joda.time.Days )org.joda.time.Duration"[label="1"]
"org.joda.time.Days"->"(static)org.joda.time.Days.toStandardHours(org.joda.time.Days )org.joda.time.Hours"[label="1"]
"org.joda.time.Days"->"(static)org.joda.time.Days.toStandardMinutes(org.joda.time.Days )org.joda.time.Minutes"[label="1"]
"org.joda.time.Days"->"(static)org.joda.time.Days.toStandardSeconds(org.joda.time.Days )org.joda.time.Seconds"[label="1"]
"org.joda.time.Days"->"(static)org.joda.time.Days.toStandardWeeks(org.joda.time.Days )org.joda.time.Weeks"[label="1"]
"org.joda.time.Duration"->"(static)org.joda.time.Duration.dividedBy(org.joda.time.Duration long )org.joda.time.Duration"[label="1"]
"org.joda.time.Duration"->"(static)org.joda.time.Duration.getStandardDays(org.joda.time.Duration )long"[label="1"]
"org.joda.time.Duration"->"(static)org.joda.time.Duration.getStandardHours(org.joda.time.Duration )long"[label="1"]
"org.joda.time.Duration"->"(static)org.joda.time.Duration.getStandardMinutes(org.joda.time.Duration )long"[label="1"]
"org.joda.time.Duration"->"(static)org.joda.time.Duration.getStandardSeconds(org.joda.time.Duration )long"[label="1"]
"org.joda.time.Duration"->"(static)org.joda.time.Duration.minus(org.joda.time.Duration long )org.joda.time.Duration"[label="1"]
"org.joda.time.Duration"->"(static)org.joda.time.Duration.minus(org.joda.time.Duration org.joda.time.ReadableDuration )org.joda.time.Duration"[label="1"]
"org.joda.time.Duration"->"(static)org.joda.time.Duration.multipliedBy(org.joda.time.Duration long )org.joda.time.Duration"[label="1"]
"org.joda.time.Duration"->"(static)org.joda.time.Duration.negated(org.joda.time.Duration )org.joda.time.Duration"[label="1"]
"org.joda.time.Duration"->"(static)org.joda.time.Duration.plus(org.joda.time.Duration long )org.joda.time.Duration"[label="1"]
"org.joda.time.Duration"->"(static)org.joda.time.Duration.plus(org.joda.time.Duration org.joda.time.ReadableDuration )org.joda.time.Duration"[label="1"]
"org.joda.time.Duration"->"(static)org.joda.time.Duration.toDuration(org.joda.time.Duration )org.joda.time.Duration"[label="1"]
"org.joda.time.Duration"->"(static)org.joda.time.Duration.toStandardDays(org.joda.time.Duration )org.joda.time.Days"[label="1"]
"org.joda.time.Duration"->"(static)org.joda.time.Duration.toStandardHours(org.joda.time.Duration )org.joda.time.Hours"[label="1"]
"org.joda.time.Duration"->"(static)org.joda.time.Duration.toStandardMinutes(org.joda.time.Duration )org.joda.time.Minutes"[label="1"]
"org.joda.time.Duration"->"(static)org.joda.time.Duration.toStandardSeconds(org.joda.time.Duration )org.joda.time.Seconds"[label="1"]
"org.joda.time.Duration"->"(static)org.joda.time.Duration.withDurationAdded(org.joda.time.Duration long int )org.joda.time.Duration"[label="1"]
"org.joda.time.Duration"->"(static)org.joda.time.Duration.withDurationAdded(org.joda.time.Duration org.joda.time.ReadableDuration int )org.joda.time.Duration"[label="1"]
"org.joda.time.Duration"->"(static)org.joda.time.Duration.withMillis(org.joda.time.Duration long )org.joda.time.Duration"[label="1"]
"org.joda.time.DurationField"->"(static)org.joda.time.DurationField.getDifference(org.joda.time.DurationField long long )int"[label="1"]
"org.joda.time.DurationField"->"(static)org.joda.time.DurationField.getDifferenceAsLong(org.joda.time.DurationField long long )long"[label="1"]
"org.joda.time.DurationField"->"(static)org.joda.time.DurationField.getMillis(org.joda.time.DurationField int )long"[label="1"]
"org.joda.time.DurationField"->"(static)org.joda.time.DurationField.getMillis(org.joda.time.DurationField int long )long"[label="1"]
"org.joda.time.DurationField"->"(static)org.joda.time.DurationField.getMillis(org.joda.time.DurationField long )long"[label="1"]
"org.joda.time.DurationField"->"(static)org.joda.time.DurationField.getMillis(org.joda.time.DurationField long long )long"[label="1"]
"org.joda.time.DurationField"->"(static)org.joda.time.DurationField.getName(org.joda.time.DurationField )java.lang.String"[label="1"]
"org.joda.time.DurationField"->"(static)org.joda.time.DurationField.getType(org.joda.time.DurationField )org.joda.time.DurationFieldType"[label="1"]
"org.joda.time.DurationField"->"(static)org.joda.time.DurationField.getUnitMillis(org.joda.time.DurationField )long"[label="1"]
"org.joda.time.DurationField"->"(static)org.joda.time.DurationField.getValue(org.joda.time.DurationField long )int"[label="1"]
"org.joda.time.DurationField"->"(static)org.joda.time.DurationField.getValue(org.joda.time.DurationField long long )int"[label="1"]
"org.joda.time.DurationField"->"(static)org.joda.time.DurationField.getValueAsLong(org.joda.time.DurationField long )long"[label="1"]
"org.joda.time.DurationField"->"(static)org.joda.time.DurationField.getValueAsLong(org.joda.time.DurationField long long )long"[label="1"]
"org.joda.time.DurationField"->"(static)org.joda.time.DurationField.isPrecise(org.joda.time.DurationField )boolean"[label="1"]
"org.joda.time.DurationField"->"(static)org.joda.time.DurationField.isSupported(org.joda.time.DurationField )boolean"[label="1"]
"org.joda.time.DurationField"->"(static)org.joda.time.DurationField.subtract(org.joda.time.DurationField long int )long"[label="1"]
"org.joda.time.DurationField"->"(static)org.joda.time.DurationField.subtract(org.joda.time.DurationField long long )long"[label="1"]
"org.joda.time.DurationField"->"org.joda.time.field.DecoratedDurationField(org.joda.time.DurationField org.joda.time.DurationFieldType )"[label="1"]
"org.joda.time.DurationField"->"org.joda.time.field.PreciseDurationDateTimeField(org.joda.time.DateTimeFieldType org.joda.time.DurationField )"[label="1"]
"org.joda.time.DurationField"->"org.joda.time.field.UnsupportedDateTimeField.getInstance(org.joda.time.DateTimeFieldType org.joda.time.DurationField )org.joda.time.field.UnsupportedDateTimeField"[label="1"]
"org.joda.time.DurationFieldType"->"(static)org.joda.time.DateMidnight.withFieldAdded(org.joda.time.DateMidnight org.joda.time.DurationFieldType int )org.joda.time.DateMidnight"[label="1"]
"org.joda.time.DurationFieldType"->"(static)org.joda.time.DateTime.withFieldAdded(org.joda.time.DateTime org.joda.time.DurationFieldType int )org.joda.time.DateTime"[label="1"]
"org.joda.time.DurationFieldType"->"(static)org.joda.time.DurationFieldType.getField(org.joda.time.DurationFieldType org.joda.time.Chronology )org.joda.time.DurationField"[label="1"]
"org.joda.time.DurationFieldType"->"(static)org.joda.time.DurationFieldType.getName(org.joda.time.DurationFieldType )java.lang.String"[label="1"]
"org.joda.time.DurationFieldType"->"(static)org.joda.time.DurationFieldType.isSupported(org.joda.time.DurationFieldType org.joda.time.Chronology )boolean"[label="1"]
"org.joda.time.DurationFieldType"->"(static)org.joda.time.LocalDate.isSupported(org.joda.time.LocalDate org.joda.time.DurationFieldType )boolean"[label="1"]
"org.joda.time.DurationFieldType"->"(static)org.joda.time.LocalDate.withFieldAdded(org.joda.time.LocalDate org.joda.time.DurationFieldType int )org.joda.time.LocalDate"[label="1"]
"org.joda.time.DurationFieldType"->"(static)org.joda.time.LocalDateTime.isSupported(org.joda.time.LocalDateTime org.joda.time.DurationFieldType )boolean"[label="1"]
"org.joda.time.DurationFieldType"->"(static)org.joda.time.LocalDateTime.withFieldAdded(org.joda.time.LocalDateTime org.joda.time.DurationFieldType int )org.joda.time.LocalDateTime"[label="1"]
"org.joda.time.DurationFieldType"->"(static)org.joda.time.LocalTime.isSupported(org.joda.time.LocalTime org.joda.time.DurationFieldType )boolean"[label="1"]
"org.joda.time.DurationFieldType"->"(static)org.joda.time.LocalTime.withFieldAdded(org.joda.time.LocalTime org.joda.time.DurationFieldType int )org.joda.time.LocalTime"[label="1"]
"org.joda.time.DurationFieldType"->"(static)org.joda.time.MonthDay.withFieldAdded(org.joda.time.MonthDay org.joda.time.DurationFieldType int )org.joda.time.MonthDay"[label="1"]
"org.joda.time.DurationFieldType"->"(static)org.joda.time.Partial.withFieldAddWrapped(org.joda.time.Partial org.joda.time.DurationFieldType int )org.joda.time.Partial"[label="1"]
"org.joda.time.DurationFieldType"->"(static)org.joda.time.Partial.withFieldAdded(org.joda.time.Partial org.joda.time.DurationFieldType int )org.joda.time.Partial"[label="1"]
"org.joda.time.DurationFieldType"->"(static)org.joda.time.Period.withField(org.joda.time.Period org.joda.time.DurationFieldType int )org.joda.time.Period"[label="1"]
"org.joda.time.DurationFieldType"->"(static)org.joda.time.Period.withFieldAdded(org.joda.time.Period org.joda.time.DurationFieldType int )org.joda.time.Period"[label="1"]
"org.joda.time.DurationFieldType"->"(static)org.joda.time.PeriodType.indexOf(org.joda.time.PeriodType org.joda.time.DurationFieldType )int"[label="1"]
"org.joda.time.DurationFieldType"->"(static)org.joda.time.PeriodType.isSupported(org.joda.time.PeriodType org.joda.time.DurationFieldType )boolean"[label="1"]
"org.joda.time.DurationFieldType"->"(static)org.joda.time.ReadablePeriod.get(org.joda.time.ReadablePeriod org.joda.time.DurationFieldType )int"[label="1"]
"org.joda.time.DurationFieldType"->"(static)org.joda.time.ReadablePeriod.isSupported(org.joda.time.ReadablePeriod org.joda.time.DurationFieldType )boolean"[label="1"]
"org.joda.time.DurationFieldType"->"(static)org.joda.time.TimeOfDay.withFieldAdded(org.joda.time.TimeOfDay org.joda.time.DurationFieldType int )org.joda.time.TimeOfDay"[label="1"]
"org.joda.time.DurationFieldType"->"(static)org.joda.time.YearMonth.withFieldAdded(org.joda.time.YearMonth org.joda.time.DurationFieldType int )org.joda.time.YearMonth"[label="1"]
"org.joda.time.DurationFieldType"->"(static)org.joda.time.YearMonthDay.withFieldAdded(org.joda.time.YearMonthDay org.joda.time.DurationFieldType int )org.joda.time.YearMonthDay"[label="1"]
"org.joda.time.DurationFieldType"->"(static)org.joda.time.base.AbstractPeriod.get(org.joda.time.base.AbstractPeriod org.joda.time.DurationFieldType )int"[label="1"]
"org.joda.time.DurationFieldType"->"(static)org.joda.time.base.AbstractPeriod.indexOf(org.joda.time.base.AbstractPeriod org.joda.time.DurationFieldType )int"[label="1"]
"org.joda.time.DurationFieldType"->"(static)org.joda.time.base.AbstractPeriod.isSupported(org.joda.time.base.AbstractPeriod org.joda.time.DurationFieldType )boolean"[label="1"]
"org.joda.time.DurationFieldType"->"(static)org.joda.time.base.BaseSingleFieldPeriod.get(org.joda.time.base.BaseSingleFieldPeriod org.joda.time.DurationFieldType )int"[label="1"]
"org.joda.time.DurationFieldType"->"(static)org.joda.time.base.BaseSingleFieldPeriod.isSupported(org.joda.time.base.BaseSingleFieldPeriod org.joda.time.DurationFieldType )boolean"[label="1"]
"org.joda.time.DurationFieldType"->"org.joda.time.IllegalFieldValueException(org.joda.time.DurationFieldType java.lang.String )"[label="1"]
"org.joda.time.DurationFieldType"->"org.joda.time.field.DecoratedDurationField(org.joda.time.DurationField org.joda.time.DurationFieldType )"[label="1"]
"org.joda.time.DurationFieldType"->"org.joda.time.field.PreciseDurationField(org.joda.time.DurationFieldType long )"[label="1"]
"org.joda.time.DurationFieldType"->"org.joda.time.field.UnsupportedDurationField.getInstance(org.joda.time.DurationFieldType )org.joda.time.field.UnsupportedDurationField"[label="1"]
"org.joda.time.DurationFieldType$StandardDurationFieldType"->"(static)org.joda.time.DurationFieldType$StandardDurationFieldType.equals(org.joda.time.DurationFieldType$StandardDurationFieldType java.lang.Object )boolean"[label="1"]
"org.joda.time.DurationFieldType$StandardDurationFieldType"->"(static)org.joda.time.DurationFieldType$StandardDurationFieldType.getField(org.joda.time.DurationFieldType$StandardDurationFieldType org.joda.time.Chronology )org.joda.time.DurationField"[label="1"]
"org.joda.time.DurationFieldType[]"->"org.joda.time.PeriodType.forFields(org.joda.time.DurationFieldType[] )org.joda.time.PeriodType"[label="1"]
"org.joda.time.Hours"->"(static)org.joda.time.Hours.dividedBy(org.joda.time.Hours int )org.joda.time.Hours"[label="1"]
"org.joda.time.Hours"->"(static)org.joda.time.Hours.getFieldType(org.joda.time.Hours )org.joda.time.DurationFieldType"[label="1"]
"org.joda.time.Hours"->"(static)org.joda.time.Hours.getHours(org.joda.time.Hours )int"[label="1"]
"org.joda.time.Hours"->"(static)org.joda.time.Hours.getPeriodType(org.joda.time.Hours )org.joda.time.PeriodType"[label="1"]
"org.joda.time.Hours"->"(static)org.joda.time.Hours.isGreaterThan(org.joda.time.Hours org.joda.time.Hours )boolean"[label="2"]
"org.joda.time.Hours"->"(static)org.joda.time.Hours.isLessThan(org.joda.time.Hours org.joda.time.Hours )boolean"[label="2"]
"org.joda.time.Hours"->"(static)org.joda.time.Hours.minus(org.joda.time.Hours int )org.joda.time.Hours"[label="1"]
"org.joda.time.Hours"->"(static)org.joda.time.Hours.minus(org.joda.time.Hours org.joda.time.Hours )org.joda.time.Hours"[label="2"]
"org.joda.time.Hours"->"(static)org.joda.time.Hours.multipliedBy(org.joda.time.Hours int )org.joda.time.Hours"[label="1"]
"org.joda.time.Hours"->"(static)org.joda.time.Hours.negated(org.joda.time.Hours )org.joda.time.Hours"[label="1"]
"org.joda.time.Hours"->"(static)org.joda.time.Hours.plus(org.joda.time.Hours int )org.joda.time.Hours"[label="1"]
"org.joda.time.Hours"->"(static)org.joda.time.Hours.plus(org.joda.time.Hours org.joda.time.Hours )org.joda.time.Hours"[label="2"]
"org.joda.time.Hours"->"(static)org.joda.time.Hours.toStandardDays(org.joda.time.Hours )org.joda.time.Days"[label="1"]
"org.joda.time.Hours"->"(static)org.joda.time.Hours.toStandardDuration(org.joda.time.Hours )org.joda.time.Duration"[label="1"]
"org.joda.time.Hours"->"(static)org.joda.time.Hours.toStandardMinutes(org.joda.time.Hours )org.joda.time.Minutes"[label="1"]
"org.joda.time.Hours"->"(static)org.joda.time.Hours.toStandardSeconds(org.joda.time.Hours )org.joda.time.Seconds"[label="1"]
"org.joda.time.Hours"->"(static)org.joda.time.Hours.toStandardWeeks(org.joda.time.Hours )org.joda.time.Weeks"[label="1"]
"org.joda.time.IllegalFieldValueException"->"(static)org.joda.time.IllegalFieldValueException.getDateTimeFieldType(org.joda.time.IllegalFieldValueException )org.joda.time.DateTimeFieldType"[label="1"]
"org.joda.time.IllegalFieldValueException"->"(static)org.joda.time.IllegalFieldValueException.getDurationFieldType(org.joda.time.IllegalFieldValueException )org.joda.time.DurationFieldType"[label="1"]
"org.joda.time.IllegalFieldValueException"->"(static)org.joda.time.IllegalFieldValueException.getFieldName(org.joda.time.IllegalFieldValueException )java.lang.String"[label="1"]
"org.joda.time.IllegalFieldValueException"->"(static)org.joda.time.IllegalFieldValueException.getIllegalNumberValue(org.joda.time.IllegalFieldValueException )java.lang.Number"[label="1"]
"org.joda.time.IllegalFieldValueException"->"(static)org.joda.time.IllegalFieldValueException.getIllegalStringValue(org.joda.time.IllegalFieldValueException )java.lang.String"[label="1"]
"org.joda.time.IllegalFieldValueException"->"(static)org.joda.time.IllegalFieldValueException.getIllegalValueAsString(org.joda.time.IllegalFieldValueException )java.lang.String"[label="1"]
"org.joda.time.IllegalFieldValueException"->"(static)org.joda.time.IllegalFieldValueException.getLowerBound(org.joda.time.IllegalFieldValueException )java.lang.Number"[label="1"]
"org.joda.time.IllegalFieldValueException"->"(static)org.joda.time.IllegalFieldValueException.getMessage(org.joda.time.IllegalFieldValueException )java.lang.String"[label="1"]
"org.joda.time.IllegalFieldValueException"->"(static)org.joda.time.IllegalFieldValueException.getUpperBound(org.joda.time.IllegalFieldValueException )java.lang.Number"[label="1"]
"org.joda.time.Instant"->"(static)org.joda.time.Instant.getChronology(org.joda.time.Instant )org.joda.time.Chronology"[label="1"]
"org.joda.time.Instant"->"(static)org.joda.time.Instant.getMillis(org.joda.time.Instant )long"[label="1"]
"org.joda.time.Instant"->"(static)org.joda.time.Instant.minus(org.joda.time.Instant long )org.joda.time.Instant"[label="1"]
"org.joda.time.Instant"->"(static)org.joda.time.Instant.minus(org.joda.time.Instant org.joda.time.ReadableDuration )org.joda.time.Instant"[label="1"]
"org.joda.time.Instant"->"(static)org.joda.time.Instant.plus(org.joda.time.Instant long )org.joda.time.Instant"[label="1"]
"org.joda.time.Instant"->"(static)org.joda.time.Instant.plus(org.joda.time.Instant org.joda.time.ReadableDuration )org.joda.time.Instant"[label="1"]
"org.joda.time.Instant"->"(static)org.joda.time.Instant.toDateTime(org.joda.time.Instant )org.joda.time.DateTime"[label="1"]
"org.joda.time.Instant"->"(static)org.joda.time.Instant.toDateTimeISO(org.joda.time.Instant )org.joda.time.DateTime"[label="1"]
"org.joda.time.Instant"->"(static)org.joda.time.Instant.toInstant(org.joda.time.Instant )org.joda.time.Instant"[label="1"]
"org.joda.time.Instant"->"(static)org.joda.time.Instant.toMutableDateTime(org.joda.time.Instant )org.joda.time.MutableDateTime"[label="1"]
"org.joda.time.Instant"->"(static)org.joda.time.Instant.toMutableDateTimeISO(org.joda.time.Instant )org.joda.time.MutableDateTime"[label="1"]
"org.joda.time.Instant"->"(static)org.joda.time.Instant.withDurationAdded(org.joda.time.Instant long int )org.joda.time.Instant"[label="1"]
"org.joda.time.Instant"->"(static)org.joda.time.Instant.withDurationAdded(org.joda.time.Instant org.joda.time.ReadableDuration int )org.joda.time.Instant"[label="1"]
"org.joda.time.Instant"->"(static)org.joda.time.Instant.withMillis(org.joda.time.Instant long )org.joda.time.Instant"[label="1"]
"org.joda.time.Interval"->"(static)org.joda.time.Interval.abuts(org.joda.time.Interval org.joda.time.ReadableInterval )boolean"[label="1"]
"org.joda.time.Interval"->"(static)org.joda.time.Interval.gap(org.joda.time.Interval org.joda.time.ReadableInterval )org.joda.time.Interval"[label="1"]
"org.joda.time.Interval"->"(static)org.joda.time.Interval.overlap(org.joda.time.Interval org.joda.time.ReadableInterval )org.joda.time.Interval"[label="1"]
"org.joda.time.Interval"->"(static)org.joda.time.Interval.toInterval(org.joda.time.Interval )org.joda.time.Interval"[label="1"]
"org.joda.time.Interval"->"(static)org.joda.time.Interval.withChronology(org.joda.time.Interval org.joda.time.Chronology )org.joda.time.Interval"[label="1"]
"org.joda.time.Interval"->"(static)org.joda.time.Interval.withDurationAfterStart(org.joda.time.Interval org.joda.time.ReadableDuration )org.joda.time.Interval"[label="1"]
"org.joda.time.Interval"->"(static)org.joda.time.Interval.withDurationBeforeEnd(org.joda.time.Interval org.joda.time.ReadableDuration )org.joda.time.Interval"[label="1"]
"org.joda.time.Interval"->"(static)org.joda.time.Interval.withEnd(org.joda.time.Interval org.joda.time.ReadableInstant )org.joda.time.Interval"[label="1"]
"org.joda.time.Interval"->"(static)org.joda.time.Interval.withEndMillis(org.joda.time.Interval long )org.joda.time.Interval"[label="1"]
"org.joda.time.Interval"->"(static)org.joda.time.Interval.withPeriodAfterStart(org.joda.time.Interval org.joda.time.ReadablePeriod )org.joda.time.Interval"[label="1"]
"org.joda.time.Interval"->"(static)org.joda.time.Interval.withPeriodBeforeEnd(org.joda.time.Interval org.joda.time.ReadablePeriod )org.joda.time.Interval"[label="1"]
"org.joda.time.Interval"->"(static)org.joda.time.Interval.withStart(org.joda.time.Interval org.joda.time.ReadableInstant )org.joda.time.Interval"[label="1"]
"org.joda.time.Interval"->"(static)org.joda.time.Interval.withStartMillis(org.joda.time.Interval long )org.joda.time.Interval"[label="1"]
"org.joda.time.LocalDate"->"(static)org.joda.time.DateTime.withDate(org.joda.time.DateTime org.joda.time.LocalDate )org.joda.time.DateTime"[label="1"]
"org.joda.time.LocalDate"->"(static)org.joda.time.LocalDate.centuryOfEra(org.joda.time.LocalDate )org.joda.time.LocalDate$Property"[label="1"]
"org.joda.time.LocalDate"->"(static)org.joda.time.LocalDate.dayOfMonth(org.joda.time.LocalDate )org.joda.time.LocalDate$Property"[label="1"]
"org.joda.time.LocalDate"->"(static)org.joda.time.LocalDate.dayOfWeek(org.joda.time.LocalDate )org.joda.time.LocalDate$Property"[label="1"]
"org.joda.time.LocalDate"->"(static)org.joda.time.LocalDate.dayOfYear(org.joda.time.LocalDate )org.joda.time.LocalDate$Property"[label="1"]
"org.joda.time.LocalDate"->"(static)org.joda.time.LocalDate.equals(org.joda.time.LocalDate java.lang.Object )boolean"[label="1"]
"org.joda.time.LocalDate"->"(static)org.joda.time.LocalDate.era(org.joda.time.LocalDate )org.joda.time.LocalDate$Property"[label="1"]
"org.joda.time.LocalDate"->"(static)org.joda.time.LocalDate.get(org.joda.time.LocalDate org.joda.time.DateTimeFieldType )int"[label="1"]
"org.joda.time.LocalDate"->"(static)org.joda.time.LocalDate.getCenturyOfEra(org.joda.time.LocalDate )int"[label="1"]
"org.joda.time.LocalDate"->"(static)org.joda.time.LocalDate.getChronology(org.joda.time.LocalDate )org.joda.time.Chronology"[label="1"]
"org.joda.time.LocalDate"->"(static)org.joda.time.LocalDate.getDayOfMonth(org.joda.time.LocalDate )int"[label="1"]
"org.joda.time.LocalDate"->"(static)org.joda.time.LocalDate.getDayOfWeek(org.joda.time.LocalDate )int"[label="1"]
"org.joda.time.LocalDate"->"(static)org.joda.time.LocalDate.getDayOfYear(org.joda.time.LocalDate )int"[label="1"]
"org.joda.time.LocalDate"->"(static)org.joda.time.LocalDate.getEra(org.joda.time.LocalDate )int"[label="1"]
"org.joda.time.LocalDate"->"(static)org.joda.time.LocalDate.getMonthOfYear(org.joda.time.LocalDate )int"[label="1"]
"org.joda.time.LocalDate"->"(static)org.joda.time.LocalDate.getValue(org.joda.time.LocalDate int )int"[label="1"]
"org.joda.time.LocalDate"->"(static)org.joda.time.LocalDate.getWeekOfWeekyear(org.joda.time.LocalDate )int"[label="1"]
"org.joda.time.LocalDate"->"(static)org.joda.time.LocalDate.getWeekyear(org.joda.time.LocalDate )int"[label="1"]
"org.joda.time.LocalDate"->"(static)org.joda.time.LocalDate.getYear(org.joda.time.LocalDate )int"[label="1"]
"org.joda.time.LocalDate"->"(static)org.joda.time.LocalDate.getYearOfCentury(org.joda.time.LocalDate )int"[label="1"]
"org.joda.time.LocalDate"->"(static)org.joda.time.LocalDate.getYearOfEra(org.joda.time.LocalDate )int"[label="1"]
"org.joda.time.LocalDate"->"(static)org.joda.time.LocalDate.isSupported(org.joda.time.LocalDate org.joda.time.DateTimeFieldType )boolean"[label="1"]
"org.joda.time.LocalDate"->"(static)org.joda.time.LocalDate.isSupported(org.joda.time.LocalDate org.joda.time.DurationFieldType )boolean"[label="1"]
"org.joda.time.LocalDate"->"(static)org.joda.time.LocalDate.minus(org.joda.time.LocalDate org.joda.time.ReadablePeriod )org.joda.time.LocalDate"[label="1"]
"org.joda.time.LocalDate"->"(static)org.joda.time.LocalDate.minusDays(org.joda.time.LocalDate int )org.joda.time.LocalDate"[label="1"]
"org.joda.time.LocalDate"->"(static)org.joda.time.LocalDate.minusMonths(org.joda.time.LocalDate int )org.joda.time.LocalDate"[label="1"]
"org.joda.time.LocalDate"->"(static)org.joda.time.LocalDate.minusWeeks(org.joda.time.LocalDate int )org.joda.time.LocalDate"[label="1"]
"org.joda.time.LocalDate"->"(static)org.joda.time.LocalDate.minusYears(org.joda.time.LocalDate int )org.joda.time.LocalDate"[label="1"]
"org.joda.time.LocalDate"->"(static)org.joda.time.LocalDate.monthOfYear(org.joda.time.LocalDate )org.joda.time.LocalDate$Property"[label="1"]
"org.joda.time.LocalDate"->"(static)org.joda.time.LocalDate.plus(org.joda.time.LocalDate org.joda.time.ReadablePeriod )org.joda.time.LocalDate"[label="1"]
"org.joda.time.LocalDate"->"(static)org.joda.time.LocalDate.plusDays(org.joda.time.LocalDate int )org.joda.time.LocalDate"[label="1"]
"org.joda.time.LocalDate"->"(static)org.joda.time.LocalDate.plusMonths(org.joda.time.LocalDate int )org.joda.time.LocalDate"[label="1"]
"org.joda.time.LocalDate"->"(static)org.joda.time.LocalDate.plusWeeks(org.joda.time.LocalDate int )org.joda.time.LocalDate"[label="1"]
"org.joda.time.LocalDate"->"(static)org.joda.time.LocalDate.plusYears(org.joda.time.LocalDate int )org.joda.time.LocalDate"[label="1"]
"org.joda.time.LocalDate"->"(static)org.joda.time.LocalDate.property(org.joda.time.LocalDate org.joda.time.DateTimeFieldType )org.joda.time.LocalDate$Property"[label="1"]
"org.joda.time.LocalDate"->"(static)org.joda.time.LocalDate.size(org.joda.time.LocalDate )int"[label="1"]
"org.joda.time.LocalDate"->"(static)org.joda.time.LocalDate.toDate(org.joda.time.LocalDate )java.util.Date"[label="1"]
"org.joda.time.LocalDate"->"(static)org.joda.time.LocalDate.toDateMidnight(org.joda.time.LocalDate )org.joda.time.DateMidnight"[label="1"]
"org.joda.time.LocalDate"->"(static)org.joda.time.LocalDate.toDateMidnight(org.joda.time.LocalDate org.joda.time.DateTimeZone )org.joda.time.DateMidnight"[label="1"]
"org.joda.time.LocalDate"->"(static)org.joda.time.LocalDate.toDateTime(org.joda.time.LocalDate org.joda.time.LocalTime )org.joda.time.DateTime"[label="1"]
"org.joda.time.LocalDate"->"(static)org.joda.time.LocalDate.toDateTime(org.joda.time.LocalDate org.joda.time.LocalTime org.joda.time.DateTimeZone )org.joda.time.DateTime"[label="1"]
"org.joda.time.LocalDate"->"(static)org.joda.time.LocalDate.toDateTimeAtCurrentTime(org.joda.time.LocalDate )org.joda.time.DateTime"[label="1"]
"org.joda.time.LocalDate"->"(static)org.joda.time.LocalDate.toDateTimeAtCurrentTime(org.joda.time.LocalDate org.joda.time.DateTimeZone )org.joda.time.DateTime"[label="1"]
"org.joda.time.LocalDate"->"(static)org.joda.time.LocalDate.toDateTimeAtMidnight(org.joda.time.LocalDate )org.joda.time.DateTime"[label="1"]
"org.joda.time.LocalDate"->"(static)org.joda.time.LocalDate.toDateTimeAtMidnight(org.joda.time.LocalDate org.joda.time.DateTimeZone )org.joda.time.DateTime"[label="1"]
"org.joda.time.LocalDate"->"(static)org.joda.time.LocalDate.toDateTimeAtStartOfDay(org.joda.time.LocalDate )org.joda.time.DateTime"[label="1"]
"org.joda.time.LocalDate"->"(static)org.joda.time.LocalDate.toDateTimeAtStartOfDay(org.joda.time.LocalDate org.joda.time.DateTimeZone )org.joda.time.DateTime"[label="1"]
"org.joda.time.LocalDate"->"(static)org.joda.time.LocalDate.toInterval(org.joda.time.LocalDate )org.joda.time.Interval"[label="1"]
"org.joda.time.LocalDate"->"(static)org.joda.time.LocalDate.toInterval(org.joda.time.LocalDate org.joda.time.DateTimeZone )org.joda.time.Interval"[label="1"]
"org.joda.time.LocalDate"->"(static)org.joda.time.LocalDate.toLocalDateTime(org.joda.time.LocalDate org.joda.time.LocalTime )org.joda.time.LocalDateTime"[label="1"]
"org.joda.time.LocalDate"->"(static)org.joda.time.LocalDate.weekOfWeekyear(org.joda.time.LocalDate )org.joda.time.LocalDate$Property"[label="1"]
"org.joda.time.LocalDate"->"(static)org.joda.time.LocalDate.weekyear(org.joda.time.LocalDate )org.joda.time.LocalDate$Property"[label="1"]
"org.joda.time.LocalDate"->"(static)org.joda.time.LocalDate.withCenturyOfEra(org.joda.time.LocalDate int )org.joda.time.LocalDate"[label="1"]
"org.joda.time.LocalDate"->"(static)org.joda.time.LocalDate.withDayOfMonth(org.joda.time.LocalDate int )org.joda.time.LocalDate"[label="1"]
"org.joda.time.LocalDate"->"(static)org.joda.time.LocalDate.withDayOfWeek(org.joda.time.LocalDate int )org.joda.time.LocalDate"[label="1"]
"org.joda.time.LocalDate"->"(static)org.joda.time.LocalDate.withDayOfYear(org.joda.time.LocalDate int )org.joda.time.LocalDate"[label="1"]
"org.joda.time.LocalDate"->"(static)org.joda.time.LocalDate.withEra(org.joda.time.LocalDate int )org.joda.time.LocalDate"[label="1"]
"org.joda.time.LocalDate"->"(static)org.joda.time.LocalDate.withField(org.joda.time.LocalDate org.joda.time.DateTimeFieldType int )org.joda.time.LocalDate"[label="1"]
"org.joda.time.LocalDate"->"(static)org.joda.time.LocalDate.withFieldAdded(org.joda.time.LocalDate org.joda.time.DurationFieldType int )org.joda.time.LocalDate"[label="1"]
"org.joda.time.LocalDate"->"(static)org.joda.time.LocalDate.withFields(org.joda.time.LocalDate org.joda.time.ReadablePartial )org.joda.time.LocalDate"[label="1"]
"org.joda.time.LocalDate"->"(static)org.joda.time.LocalDate.withMonthOfYear(org.joda.time.LocalDate int )org.joda.time.LocalDate"[label="1"]
"org.joda.time.LocalDate"->"(static)org.joda.time.LocalDate.withPeriodAdded(org.joda.time.LocalDate org.joda.time.ReadablePeriod int )org.joda.time.LocalDate"[label="1"]
"org.joda.time.LocalDate"->"(static)org.joda.time.LocalDate.withWeekOfWeekyear(org.joda.time.LocalDate int )org.joda.time.LocalDate"[label="1"]
"org.joda.time.LocalDate"->"(static)org.joda.time.LocalDate.withWeekyear(org.joda.time.LocalDate int )org.joda.time.LocalDate"[label="1"]
"org.joda.time.LocalDate"->"(static)org.joda.time.LocalDate.withYear(org.joda.time.LocalDate int )org.joda.time.LocalDate"[label="1"]
"org.joda.time.LocalDate"->"(static)org.joda.time.LocalDate.withYearOfCentury(org.joda.time.LocalDate int )org.joda.time.LocalDate"[label="1"]
"org.joda.time.LocalDate"->"(static)org.joda.time.LocalDate.withYearOfEra(org.joda.time.LocalDate int )org.joda.time.LocalDate"[label="1"]
"org.joda.time.LocalDate"->"(static)org.joda.time.LocalDate.year(org.joda.time.LocalDate )org.joda.time.LocalDate$Property"[label="1"]
"org.joda.time.LocalDate"->"(static)org.joda.time.LocalDate.yearOfCentury(org.joda.time.LocalDate )org.joda.time.LocalDate$Property"[label="1"]
"org.joda.time.LocalDate"->"(static)org.joda.time.LocalDate.yearOfEra(org.joda.time.LocalDate )org.joda.time.LocalDate$Property"[label="1"]
"org.joda.time.LocalDate"->"org.joda.time.LocalDateIsPolymorphicToorg.joda.time.ReadablePartial"[label="1"]
"org.joda.time.LocalDate$Property"->"(static)org.joda.time.LocalDate$Property.addToCopy(org.joda.time.LocalDate$Property int )org.joda.time.LocalDate"[label="1"]
"org.joda.time.LocalDate$Property"->"(static)org.joda.time.LocalDate$Property.addWrapFieldToCopy(org.joda.time.LocalDate$Property int )org.joda.time.LocalDate"[label="1"]
"org.joda.time.LocalDate$Property"->"(static)org.joda.time.LocalDate$Property.getField(org.joda.time.LocalDate$Property )org.joda.time.DateTimeField"[label="1"]
"org.joda.time.LocalDate$Property"->"(static)org.joda.time.LocalDate$Property.getLocalDate(org.joda.time.LocalDate$Property )org.joda.time.LocalDate"[label="1"]
"org.joda.time.LocalDate$Property"->"(static)org.joda.time.LocalDate$Property.roundCeilingCopy(org.joda.time.LocalDate$Property )org.joda.time.LocalDate"[label="1"]
"org.joda.time.LocalDate$Property"->"(static)org.joda.time.LocalDate$Property.roundFloorCopy(org.joda.time.LocalDate$Property )org.joda.time.LocalDate"[label="1"]
"org.joda.time.LocalDate$Property"->"(static)org.joda.time.LocalDate$Property.roundHalfCeilingCopy(org.joda.time.LocalDate$Property )org.joda.time.LocalDate"[label="1"]
"org.joda.time.LocalDate$Property"->"(static)org.joda.time.LocalDate$Property.roundHalfEvenCopy(org.joda.time.LocalDate$Property )org.joda.time.LocalDate"[label="1"]
"org.joda.time.LocalDate$Property"->"(static)org.joda.time.LocalDate$Property.roundHalfFloorCopy(org.joda.time.LocalDate$Property )org.joda.time.LocalDate"[label="1"]
"org.joda.time.LocalDate$Property"->"(static)org.joda.time.LocalDate$Property.setCopy(org.joda.time.LocalDate$Property int )org.joda.time.LocalDate"[label="1"]
"org.joda.time.LocalDate$Property"->"(static)org.joda.time.LocalDate$Property.setCopy(org.joda.time.LocalDate$Property java.lang.String )org.joda.time.LocalDate"[label="1"]
"org.joda.time.LocalDate$Property"->"(static)org.joda.time.LocalDate$Property.setCopy(org.joda.time.LocalDate$Property java.lang.String java.util.Locale )org.joda.time.LocalDate"[label="1"]
"org.joda.time.LocalDate$Property"->"(static)org.joda.time.LocalDate$Property.withMaximumValue(org.joda.time.LocalDate$Property )org.joda.time.LocalDate"[label="1"]
"org.joda.time.LocalDate$Property"->"(static)org.joda.time.LocalDate$Property.withMinimumValue(org.joda.time.LocalDate$Property )org.joda.time.LocalDate"[label="1"]
"org.joda.time.LocalDate$Property"->"org.joda.time.LocalDate$PropertyIsPolymorphicToorg.joda.time.field.AbstractReadableInstantFieldProperty"[label="1"]
"org.joda.time.LocalDateTime"->"(static)org.joda.time.DateTimeZone.isLocalDateTimeGap(org.joda.time.DateTimeZone org.joda.time.LocalDateTime )boolean"[label="1"]
"org.joda.time.LocalDateTime"->"(static)org.joda.time.LocalDateTime.centuryOfEra(org.joda.time.LocalDateTime )org.joda.time.LocalDateTime$Property"[label="1"]
"org.joda.time.LocalDateTime"->"(static)org.joda.time.LocalDateTime.dayOfMonth(org.joda.time.LocalDateTime )org.joda.time.LocalDateTime$Property"[label="1"]
"org.joda.time.LocalDateTime"->"(static)org.joda.time.LocalDateTime.dayOfWeek(org.joda.time.LocalDateTime )org.joda.time.LocalDateTime$Property"[label="1"]
"org.joda.time.LocalDateTime"->"(static)org.joda.time.LocalDateTime.dayOfYear(org.joda.time.LocalDateTime )org.joda.time.LocalDateTime$Property"[label="1"]
"org.joda.time.LocalDateTime"->"(static)org.joda.time.LocalDateTime.equals(org.joda.time.LocalDateTime java.lang.Object )boolean"[label="1"]
"org.joda.time.LocalDateTime"->"(static)org.joda.time.LocalDateTime.era(org.joda.time.LocalDateTime )org.joda.time.LocalDateTime$Property"[label="1"]
"org.joda.time.LocalDateTime"->"(static)org.joda.time.LocalDateTime.get(org.joda.time.LocalDateTime org.joda.time.DateTimeFieldType )int"[label="1"]
"org.joda.time.LocalDateTime"->"(static)org.joda.time.LocalDateTime.getCenturyOfEra(org.joda.time.LocalDateTime )int"[label="1"]
"org.joda.time.LocalDateTime"->"(static)org.joda.time.LocalDateTime.getChronology(org.joda.time.LocalDateTime )org.joda.time.Chronology"[label="1"]
"org.joda.time.LocalDateTime"->"(static)org.joda.time.LocalDateTime.getDayOfMonth(org.joda.time.LocalDateTime )int"[label="1"]
"org.joda.time.LocalDateTime"->"(static)org.joda.time.LocalDateTime.getDayOfWeek(org.joda.time.LocalDateTime )int"[label="1"]
"org.joda.time.LocalDateTime"->"(static)org.joda.time.LocalDateTime.getDayOfYear(org.joda.time.LocalDateTime )int"[label="1"]
"org.joda.time.LocalDateTime"->"(static)org.joda.time.LocalDateTime.getEra(org.joda.time.LocalDateTime )int"[label="1"]
"org.joda.time.LocalDateTime"->"(static)org.joda.time.LocalDateTime.getHourOfDay(org.joda.time.LocalDateTime )int"[label="1"]
"org.joda.time.LocalDateTime"->"(static)org.joda.time.LocalDateTime.getMillisOfDay(org.joda.time.LocalDateTime )int"[label="1"]
"org.joda.time.LocalDateTime"->"(static)org.joda.time.LocalDateTime.getMillisOfSecond(org.joda.time.LocalDateTime )int"[label="1"]
"org.joda.time.LocalDateTime"->"(static)org.joda.time.LocalDateTime.getMinuteOfHour(org.joda.time.LocalDateTime )int"[label="1"]
"org.joda.time.LocalDateTime"->"(static)org.joda.time.LocalDateTime.getMonthOfYear(org.joda.time.LocalDateTime )int"[label="1"]
"org.joda.time.LocalDateTime"->"(static)org.joda.time.LocalDateTime.getSecondOfMinute(org.joda.time.LocalDateTime )int"[label="1"]
"org.joda.time.LocalDateTime"->"(static)org.joda.time.LocalDateTime.getValue(org.joda.time.LocalDateTime int )int"[label="1"]
"org.joda.time.LocalDateTime"->"(static)org.joda.time.LocalDateTime.getWeekOfWeekyear(org.joda.time.LocalDateTime )int"[label="1"]
"org.joda.time.LocalDateTime"->"(static)org.joda.time.LocalDateTime.getWeekyear(org.joda.time.LocalDateTime )int"[label="1"]
"org.joda.time.LocalDateTime"->"(static)org.joda.time.LocalDateTime.getYear(org.joda.time.LocalDateTime )int"[label="1"]
"org.joda.time.LocalDateTime"->"(static)org.joda.time.LocalDateTime.getYearOfCentury(org.joda.time.LocalDateTime )int"[label="1"]
"org.joda.time.LocalDateTime"->"(static)org.joda.time.LocalDateTime.getYearOfEra(org.joda.time.LocalDateTime )int"[label="1"]
"org.joda.time.LocalDateTime"->"(static)org.joda.time.LocalDateTime.hourOfDay(org.joda.time.LocalDateTime )org.joda.time.LocalDateTime$Property"[label="1"]
"org.joda.time.LocalDateTime"->"(static)org.joda.time.LocalDateTime.isSupported(org.joda.time.LocalDateTime org.joda.time.DateTimeFieldType )boolean"[label="1"]
"org.joda.time.LocalDateTime"->"(static)org.joda.time.LocalDateTime.isSupported(org.joda.time.LocalDateTime org.joda.time.DurationFieldType )boolean"[label="1"]
"org.joda.time.LocalDateTime"->"(static)org.joda.time.LocalDateTime.millisOfDay(org.joda.time.LocalDateTime )org.joda.time.LocalDateTime$Property"[label="1"]
"org.joda.time.LocalDateTime"->"(static)org.joda.time.LocalDateTime.millisOfSecond(org.joda.time.LocalDateTime )org.joda.time.LocalDateTime$Property"[label="1"]
"org.joda.time.LocalDateTime"->"(static)org.joda.time.LocalDateTime.minus(org.joda.time.LocalDateTime org.joda.time.ReadableDuration )org.joda.time.LocalDateTime"[label="1"]
"org.joda.time.LocalDateTime"->"(static)org.joda.time.LocalDateTime.minus(org.joda.time.LocalDateTime org.joda.time.ReadablePeriod )org.joda.time.LocalDateTime"[label="1"]
"org.joda.time.LocalDateTime"->"(static)org.joda.time.LocalDateTime.minusDays(org.joda.time.LocalDateTime int )org.joda.time.LocalDateTime"[label="1"]
"org.joda.time.LocalDateTime"->"(static)org.joda.time.LocalDateTime.minusHours(org.joda.time.LocalDateTime int )org.joda.time.LocalDateTime"[label="1"]
"org.joda.time.LocalDateTime"->"(static)org.joda.time.LocalDateTime.minusMillis(org.joda.time.LocalDateTime int )org.joda.time.LocalDateTime"[label="1"]
"org.joda.time.LocalDateTime"->"(static)org.joda.time.LocalDateTime.minusMinutes(org.joda.time.LocalDateTime int )org.joda.time.LocalDateTime"[label="1"]
"org.joda.time.LocalDateTime"->"(static)org.joda.time.LocalDateTime.minusMonths(org.joda.time.LocalDateTime int )org.joda.time.LocalDateTime"[label="1"]
"org.joda.time.LocalDateTime"->"(static)org.joda.time.LocalDateTime.minusSeconds(org.joda.time.LocalDateTime int )org.joda.time.LocalDateTime"[label="1"]
"org.joda.time.LocalDateTime"->"(static)org.joda.time.LocalDateTime.minusWeeks(org.joda.time.LocalDateTime int )org.joda.time.LocalDateTime"[label="1"]
"org.joda.time.LocalDateTime"->"(static)org.joda.time.LocalDateTime.minusYears(org.joda.time.LocalDateTime int )org.joda.time.LocalDateTime"[label="1"]
"org.joda.time.LocalDateTime"->"(static)org.joda.time.LocalDateTime.minuteOfHour(org.joda.time.LocalDateTime )org.joda.time.LocalDateTime$Property"[label="1"]
"org.joda.time.LocalDateTime"->"(static)org.joda.time.LocalDateTime.monthOfYear(org.joda.time.LocalDateTime )org.joda.time.LocalDateTime$Property"[label="1"]
"org.joda.time.LocalDateTime"->"(static)org.joda.time.LocalDateTime.plus(org.joda.time.LocalDateTime org.joda.time.ReadableDuration )org.joda.time.LocalDateTime"[label="1"]
"org.joda.time.LocalDateTime"->"(static)org.joda.time.LocalDateTime.plus(org.joda.time.LocalDateTime org.joda.time.ReadablePeriod )org.joda.time.LocalDateTime"[label="1"]
"org.joda.time.LocalDateTime"->"(static)org.joda.time.LocalDateTime.plusDays(org.joda.time.LocalDateTime int )org.joda.time.LocalDateTime"[label="1"]
"org.joda.time.LocalDateTime"->"(static)org.joda.time.LocalDateTime.plusHours(org.joda.time.LocalDateTime int )org.joda.time.LocalDateTime"[label="1"]
"org.joda.time.LocalDateTime"->"(static)org.joda.time.LocalDateTime.plusMillis(org.joda.time.LocalDateTime int )org.joda.time.LocalDateTime"[label="1"]
"org.joda.time.LocalDateTime"->"(static)org.joda.time.LocalDateTime.plusMinutes(org.joda.time.LocalDateTime int )org.joda.time.LocalDateTime"[label="1"]
"org.joda.time.LocalDateTime"->"(static)org.joda.time.LocalDateTime.plusMonths(org.joda.time.LocalDateTime int )org.joda.time.LocalDateTime"[label="1"]
"org.joda.time.LocalDateTime"->"(static)org.joda.time.LocalDateTime.plusSeconds(org.joda.time.LocalDateTime int )org.joda.time.LocalDateTime"[label="1"]
"org.joda.time.LocalDateTime"->"(static)org.joda.time.LocalDateTime.plusWeeks(org.joda.time.LocalDateTime int )org.joda.time.LocalDateTime"[label="1"]
"org.joda.time.LocalDateTime"->"(static)org.joda.time.LocalDateTime.plusYears(org.joda.time.LocalDateTime int )org.joda.time.LocalDateTime"[label="1"]
"org.joda.time.LocalDateTime"->"(static)org.joda.time.LocalDateTime.property(org.joda.time.LocalDateTime org.joda.time.DateTimeFieldType )org.joda.time.LocalDateTime$Property"[label="1"]
"org.joda.time.LocalDateTime"->"(static)org.joda.time.LocalDateTime.secondOfMinute(org.joda.time.LocalDateTime )org.joda.time.LocalDateTime$Property"[label="1"]
"org.joda.time.LocalDateTime"->"(static)org.joda.time.LocalDateTime.size(org.joda.time.LocalDateTime )int"[label="1"]
"org.joda.time.LocalDateTime"->"(static)org.joda.time.LocalDateTime.toDate(org.joda.time.LocalDateTime )java.util.Date"[label="1"]
"org.joda.time.LocalDateTime"->"(static)org.joda.time.LocalDateTime.toDate(org.joda.time.LocalDateTime java.util.TimeZone )java.util.Date"[label="1"]
"org.joda.time.LocalDateTime"->"(static)org.joda.time.LocalDateTime.toDateTime(org.joda.time.LocalDateTime )org.joda.time.DateTime"[label="1"]
"org.joda.time.LocalDateTime"->"(static)org.joda.time.LocalDateTime.toDateTime(org.joda.time.LocalDateTime org.joda.time.DateTimeZone )org.joda.time.DateTime"[label="1"]
"org.joda.time.LocalDateTime"->"(static)org.joda.time.LocalDateTime.toLocalDate(org.joda.time.LocalDateTime )org.joda.time.LocalDate"[label="1"]
"org.joda.time.LocalDateTime"->"(static)org.joda.time.LocalDateTime.toLocalTime(org.joda.time.LocalDateTime )org.joda.time.LocalTime"[label="1"]
"org.joda.time.LocalDateTime"->"(static)org.joda.time.LocalDateTime.weekOfWeekyear(org.joda.time.LocalDateTime )org.joda.time.LocalDateTime$Property"[label="1"]
"org.joda.time.LocalDateTime"->"(static)org.joda.time.LocalDateTime.weekyear(org.joda.time.LocalDateTime )org.joda.time.LocalDateTime$Property"[label="1"]
"org.joda.time.LocalDateTime"->"(static)org.joda.time.LocalDateTime.withCenturyOfEra(org.joda.time.LocalDateTime int )org.joda.time.LocalDateTime"[label="1"]
"org.joda.time.LocalDateTime"->"(static)org.joda.time.LocalDateTime.withDayOfMonth(org.joda.time.LocalDateTime int )org.joda.time.LocalDateTime"[label="1"]
"org.joda.time.LocalDateTime"->"(static)org.joda.time.LocalDateTime.withDayOfWeek(org.joda.time.LocalDateTime int )org.joda.time.LocalDateTime"[label="1"]
"org.joda.time.LocalDateTime"->"(static)org.joda.time.LocalDateTime.withDayOfYear(org.joda.time.LocalDateTime int )org.joda.time.LocalDateTime"[label="1"]
"org.joda.time.LocalDateTime"->"(static)org.joda.time.LocalDateTime.withDurationAdded(org.joda.time.LocalDateTime org.joda.time.ReadableDuration int )org.joda.time.LocalDateTime"[label="1"]
"org.joda.time.LocalDateTime"->"(static)org.joda.time.LocalDateTime.withEra(org.joda.time.LocalDateTime int )org.joda.time.LocalDateTime"[label="1"]
"org.joda.time.LocalDateTime"->"(static)org.joda.time.LocalDateTime.withField(org.joda.time.LocalDateTime org.joda.time.DateTimeFieldType int )org.joda.time.LocalDateTime"[label="1"]
"org.joda.time.LocalDateTime"->"(static)org.joda.time.LocalDateTime.withFieldAdded(org.joda.time.LocalDateTime org.joda.time.DurationFieldType int )org.joda.time.LocalDateTime"[label="1"]
"org.joda.time.LocalDateTime"->"(static)org.joda.time.LocalDateTime.withFields(org.joda.time.LocalDateTime org.joda.time.ReadablePartial )org.joda.time.LocalDateTime"[label="1"]
"org.joda.time.LocalDateTime"->"(static)org.joda.time.LocalDateTime.withHourOfDay(org.joda.time.LocalDateTime int )org.joda.time.LocalDateTime"[label="1"]
"org.joda.time.LocalDateTime"->"(static)org.joda.time.LocalDateTime.withMillisOfDay(org.joda.time.LocalDateTime int )org.joda.time.LocalDateTime"[label="1"]
"org.joda.time.LocalDateTime"->"(static)org.joda.time.LocalDateTime.withMillisOfSecond(org.joda.time.LocalDateTime int )org.joda.time.LocalDateTime"[label="1"]
"org.joda.time.LocalDateTime"->"(static)org.joda.time.LocalDateTime.withMinuteOfHour(org.joda.time.LocalDateTime int )org.joda.time.LocalDateTime"[label="1"]
"org.joda.time.LocalDateTime"->"(static)org.joda.time.LocalDateTime.withMonthOfYear(org.joda.time.LocalDateTime int )org.joda.time.LocalDateTime"[label="1"]
"org.joda.time.LocalDateTime"->"(static)org.joda.time.LocalDateTime.withPeriodAdded(org.joda.time.LocalDateTime org.joda.time.ReadablePeriod int )org.joda.time.LocalDateTime"[label="1"]
"org.joda.time.LocalDateTime"->"(static)org.joda.time.LocalDateTime.withSecondOfMinute(org.joda.time.LocalDateTime int )org.joda.time.LocalDateTime"[label="1"]
"org.joda.time.LocalDateTime"->"(static)org.joda.time.LocalDateTime.withWeekOfWeekyear(org.joda.time.LocalDateTime int )org.joda.time.LocalDateTime"[label="1"]
"org.joda.time.LocalDateTime"->"(static)org.joda.time.LocalDateTime.withWeekyear(org.joda.time.LocalDateTime int )org.joda.time.LocalDateTime"[label="1"]
"org.joda.time.LocalDateTime"->"(static)org.joda.time.LocalDateTime.withYear(org.joda.time.LocalDateTime int )org.joda.time.LocalDateTime"[label="1"]
"org.joda.time.LocalDateTime"->"(static)org.joda.time.LocalDateTime.withYearOfCentury(org.joda.time.LocalDateTime int )org.joda.time.LocalDateTime"[label="1"]
"org.joda.time.LocalDateTime"->"(static)org.joda.time.LocalDateTime.withYearOfEra(org.joda.time.LocalDateTime int )org.joda.time.LocalDateTime"[label="1"]
"org.joda.time.LocalDateTime"->"(static)org.joda.time.LocalDateTime.year(org.joda.time.LocalDateTime )org.joda.time.LocalDateTime$Property"[label="1"]
"org.joda.time.LocalDateTime"->"(static)org.joda.time.LocalDateTime.yearOfCentury(org.joda.time.LocalDateTime )org.joda.time.LocalDateTime$Property"[label="1"]
"org.joda.time.LocalDateTime"->"(static)org.joda.time.LocalDateTime.yearOfEra(org.joda.time.LocalDateTime )org.joda.time.LocalDateTime$Property"[label="1"]
"org.joda.time.LocalDateTime"->"org.joda.time.LocalDateTimeIsPolymorphicToorg.joda.time.ReadablePartial"[label="1"]
"org.joda.time.LocalDateTime$Property"->"(static)org.joda.time.LocalDateTime$Property.addToCopy(org.joda.time.LocalDateTime$Property int )org.joda.time.LocalDateTime"[label="1"]
"org.joda.time.LocalDateTime$Property"->"(static)org.joda.time.LocalDateTime$Property.addToCopy(org.joda.time.LocalDateTime$Property long )org.joda.time.LocalDateTime"[label="1"]
"org.joda.time.LocalDateTime$Property"->"(static)org.joda.time.LocalDateTime$Property.addWrapFieldToCopy(org.joda.time.LocalDateTime$Property int )org.joda.time.LocalDateTime"[label="1"]
"org.joda.time.LocalDateTime$Property"->"(static)org.joda.time.LocalDateTime$Property.getField(org.joda.time.LocalDateTime$Property )org.joda.time.DateTimeField"[label="1"]
"org.joda.time.LocalDateTime$Property"->"(static)org.joda.time.LocalDateTime$Property.getLocalDateTime(org.joda.time.LocalDateTime$Property )org.joda.time.LocalDateTime"[label="1"]
"org.joda.time.LocalDateTime$Property"->"(static)org.joda.time.LocalDateTime$Property.roundCeilingCopy(org.joda.time.LocalDateTime$Property )org.joda.time.LocalDateTime"[label="1"]
"org.joda.time.LocalDateTime$Property"->"(static)org.joda.time.LocalDateTime$Property.roundFloorCopy(org.joda.time.LocalDateTime$Property )org.joda.time.LocalDateTime"[label="1"]
"org.joda.time.LocalDateTime$Property"->"(static)org.joda.time.LocalDateTime$Property.roundHalfCeilingCopy(org.joda.time.LocalDateTime$Property )org.joda.time.LocalDateTime"[label="1"]
"org.joda.time.LocalDateTime$Property"->"(static)org.joda.time.LocalDateTime$Property.roundHalfEvenCopy(org.joda.time.LocalDateTime$Property )org.joda.time.LocalDateTime"[label="1"]
"org.joda.time.LocalDateTime$Property"->"(static)org.joda.time.LocalDateTime$Property.roundHalfFloorCopy(org.joda.time.LocalDateTime$Property )org.joda.time.LocalDateTime"[label="1"]
"org.joda.time.LocalDateTime$Property"->"(static)org.joda.time.LocalDateTime$Property.setCopy(org.joda.time.LocalDateTime$Property int )org.joda.time.LocalDateTime"[label="1"]
"org.joda.time.LocalDateTime$Property"->"(static)org.joda.time.LocalDateTime$Property.setCopy(org.joda.time.LocalDateTime$Property java.lang.String )org.joda.time.LocalDateTime"[label="1"]
"org.joda.time.LocalDateTime$Property"->"(static)org.joda.time.LocalDateTime$Property.setCopy(org.joda.time.LocalDateTime$Property java.lang.String java.util.Locale )org.joda.time.LocalDateTime"[label="1"]
"org.joda.time.LocalDateTime$Property"->"(static)org.joda.time.LocalDateTime$Property.withMaximumValue(org.joda.time.LocalDateTime$Property )org.joda.time.LocalDateTime"[label="1"]
"org.joda.time.LocalDateTime$Property"->"(static)org.joda.time.LocalDateTime$Property.withMinimumValue(org.joda.time.LocalDateTime$Property )org.joda.time.LocalDateTime"[label="1"]
"org.joda.time.LocalDateTime$Property"->"org.joda.time.LocalDateTime$PropertyIsPolymorphicToorg.joda.time.field.AbstractReadableInstantFieldProperty"[label="1"]
"org.joda.time.LocalTime"->"(static)org.joda.time.DateTime.withTime(org.joda.time.DateTime org.joda.time.LocalTime )org.joda.time.DateTime"[label="1"]
"org.joda.time.LocalTime"->"(static)org.joda.time.LocalDate.toDateTime(org.joda.time.LocalDate org.joda.time.LocalTime )org.joda.time.DateTime"[label="1"]
"org.joda.time.LocalTime"->"(static)org.joda.time.LocalDate.toDateTime(org.joda.time.LocalDate org.joda.time.LocalTime org.joda.time.DateTimeZone )org.joda.time.DateTime"[label="1"]
"org.joda.time.LocalTime"->"(static)org.joda.time.LocalDate.toLocalDateTime(org.joda.time.LocalDate org.joda.time.LocalTime )org.joda.time.LocalDateTime"[label="1"]
"org.joda.time.LocalTime"->"(static)org.joda.time.LocalTime.equals(org.joda.time.LocalTime java.lang.Object )boolean"[label="1"]
"org.joda.time.LocalTime"->"(static)org.joda.time.LocalTime.get(org.joda.time.LocalTime org.joda.time.DateTimeFieldType )int"[label="1"]
"org.joda.time.LocalTime"->"(static)org.joda.time.LocalTime.getChronology(org.joda.time.LocalTime )org.joda.time.Chronology"[label="1"]
"org.joda.time.LocalTime"->"(static)org.joda.time.LocalTime.getHourOfDay(org.joda.time.LocalTime )int"[label="1"]
"org.joda.time.LocalTime"->"(static)org.joda.time.LocalTime.getMillisOfDay(org.joda.time.LocalTime )int"[label="1"]
"org.joda.time.LocalTime"->"(static)org.joda.time.LocalTime.getMillisOfSecond(org.joda.time.LocalTime )int"[label="1"]
"org.joda.time.LocalTime"->"(static)org.joda.time.LocalTime.getMinuteOfHour(org.joda.time.LocalTime )int"[label="1"]
"org.joda.time.LocalTime"->"(static)org.joda.time.LocalTime.getSecondOfMinute(org.joda.time.LocalTime )int"[label="1"]
"org.joda.time.LocalTime"->"(static)org.joda.time.LocalTime.getValue(org.joda.time.LocalTime int )int"[label="1"]
"org.joda.time.LocalTime"->"(static)org.joda.time.LocalTime.hourOfDay(org.joda.time.LocalTime )org.joda.time.LocalTime$Property"[label="1"]
"org.joda.time.LocalTime"->"(static)org.joda.time.LocalTime.isSupported(org.joda.time.LocalTime org.joda.time.DateTimeFieldType )boolean"[label="1"]
"org.joda.time.LocalTime"->"(static)org.joda.time.LocalTime.isSupported(org.joda.time.LocalTime org.joda.time.DurationFieldType )boolean"[label="1"]
"org.joda.time.LocalTime"->"(static)org.joda.time.LocalTime.millisOfDay(org.joda.time.LocalTime )org.joda.time.LocalTime$Property"[label="1"]
"org.joda.time.LocalTime"->"(static)org.joda.time.LocalTime.millisOfSecond(org.joda.time.LocalTime )org.joda.time.LocalTime$Property"[label="1"]
"org.joda.time.LocalTime"->"(static)org.joda.time.LocalTime.minus(org.joda.time.LocalTime org.joda.time.ReadablePeriod )org.joda.time.LocalTime"[label="1"]
"org.joda.time.LocalTime"->"(static)org.joda.time.LocalTime.minusHours(org.joda.time.LocalTime int )org.joda.time.LocalTime"[label="1"]
"org.joda.time.LocalTime"->"(static)org.joda.time.LocalTime.minusMillis(org.joda.time.LocalTime int )org.joda.time.LocalTime"[label="1"]
"org.joda.time.LocalTime"->"(static)org.joda.time.LocalTime.minusMinutes(org.joda.time.LocalTime int )org.joda.time.LocalTime"[label="1"]
"org.joda.time.LocalTime"->"(static)org.joda.time.LocalTime.minusSeconds(org.joda.time.LocalTime int )org.joda.time.LocalTime"[label="1"]
"org.joda.time.LocalTime"->"(static)org.joda.time.LocalTime.minuteOfHour(org.joda.time.LocalTime )org.joda.time.LocalTime$Property"[label="1"]
"org.joda.time.LocalTime"->"(static)org.joda.time.LocalTime.plus(org.joda.time.LocalTime org.joda.time.ReadablePeriod )org.joda.time.LocalTime"[label="1"]
"org.joda.time.LocalTime"->"(static)org.joda.time.LocalTime.plusHours(org.joda.time.LocalTime int )org.joda.time.LocalTime"[label="1"]
"org.joda.time.LocalTime"->"(static)org.joda.time.LocalTime.plusMillis(org.joda.time.LocalTime int )org.joda.time.LocalTime"[label="1"]
"org.joda.time.LocalTime"->"(static)org.joda.time.LocalTime.plusMinutes(org.joda.time.LocalTime int )org.joda.time.LocalTime"[label="1"]
"org.joda.time.LocalTime"->"(static)org.joda.time.LocalTime.plusSeconds(org.joda.time.LocalTime int )org.joda.time.LocalTime"[label="1"]
"org.joda.time.LocalTime"->"(static)org.joda.time.LocalTime.property(org.joda.time.LocalTime org.joda.time.DateTimeFieldType )org.joda.time.LocalTime$Property"[label="1"]
"org.joda.time.LocalTime"->"(static)org.joda.time.LocalTime.secondOfMinute(org.joda.time.LocalTime )org.joda.time.LocalTime$Property"[label="1"]
"org.joda.time.LocalTime"->"(static)org.joda.time.LocalTime.size(org.joda.time.LocalTime )int"[label="1"]
"org.joda.time.LocalTime"->"(static)org.joda.time.LocalTime.toDateTimeToday(org.joda.time.LocalTime )org.joda.time.DateTime"[label="1"]
"org.joda.time.LocalTime"->"(static)org.joda.time.LocalTime.toDateTimeToday(org.joda.time.LocalTime org.joda.time.DateTimeZone )org.joda.time.DateTime"[label="1"]
"org.joda.time.LocalTime"->"(static)org.joda.time.LocalTime.withField(org.joda.time.LocalTime org.joda.time.DateTimeFieldType int )org.joda.time.LocalTime"[label="1"]
"org.joda.time.LocalTime"->"(static)org.joda.time.LocalTime.withFieldAdded(org.joda.time.LocalTime org.joda.time.DurationFieldType int )org.joda.time.LocalTime"[label="1"]
"org.joda.time.LocalTime"->"(static)org.joda.time.LocalTime.withFields(org.joda.time.LocalTime org.joda.time.ReadablePartial )org.joda.time.LocalTime"[label="1"]
"org.joda.time.LocalTime"->"(static)org.joda.time.LocalTime.withHourOfDay(org.joda.time.LocalTime int )org.joda.time.LocalTime"[label="1"]
"org.joda.time.LocalTime"->"(static)org.joda.time.LocalTime.withMillisOfDay(org.joda.time.LocalTime int )org.joda.time.LocalTime"[label="1"]
"org.joda.time.LocalTime"->"(static)org.joda.time.LocalTime.withMillisOfSecond(org.joda.time.LocalTime int )org.joda.time.LocalTime"[label="1"]
"org.joda.time.LocalTime"->"(static)org.joda.time.LocalTime.withMinuteOfHour(org.joda.time.LocalTime int )org.joda.time.LocalTime"[label="1"]
"org.joda.time.LocalTime"->"(static)org.joda.time.LocalTime.withPeriodAdded(org.joda.time.LocalTime org.joda.time.ReadablePeriod int )org.joda.time.LocalTime"[label="1"]
"org.joda.time.LocalTime"->"(static)org.joda.time.LocalTime.withSecondOfMinute(org.joda.time.LocalTime int )org.joda.time.LocalTime"[label="1"]
"org.joda.time.LocalTime"->"org.joda.time.LocalTimeIsPolymorphicToorg.joda.time.ReadablePartial"[label="1"]
"org.joda.time.LocalTime$Property"->"(static)org.joda.time.LocalTime$Property.addCopy(org.joda.time.LocalTime$Property int )org.joda.time.LocalTime"[label="1"]
"org.joda.time.LocalTime$Property"->"(static)org.joda.time.LocalTime$Property.addCopy(org.joda.time.LocalTime$Property long )org.joda.time.LocalTime"[label="1"]
"org.joda.time.LocalTime$Property"->"(static)org.joda.time.LocalTime$Property.addNoWrapToCopy(org.joda.time.LocalTime$Property int )org.joda.time.LocalTime"[label="1"]
"org.joda.time.LocalTime$Property"->"(static)org.joda.time.LocalTime$Property.addWrapFieldToCopy(org.joda.time.LocalTime$Property int )org.joda.time.LocalTime"[label="1"]
"org.joda.time.LocalTime$Property"->"(static)org.joda.time.LocalTime$Property.getField(org.joda.time.LocalTime$Property )org.joda.time.DateTimeField"[label="1"]
"org.joda.time.LocalTime$Property"->"(static)org.joda.time.LocalTime$Property.getLocalTime(org.joda.time.LocalTime$Property )org.joda.time.LocalTime"[label="1"]
"org.joda.time.LocalTime$Property"->"(static)org.joda.time.LocalTime$Property.roundCeilingCopy(org.joda.time.LocalTime$Property )org.joda.time.LocalTime"[label="1"]
"org.joda.time.LocalTime$Property"->"(static)org.joda.time.LocalTime$Property.roundFloorCopy(org.joda.time.LocalTime$Property )org.joda.time.LocalTime"[label="1"]
"org.joda.time.LocalTime$Property"->"(static)org.joda.time.LocalTime$Property.roundHalfCeilingCopy(org.joda.time.LocalTime$Property )org.joda.time.LocalTime"[label="1"]
"org.joda.time.LocalTime$Property"->"(static)org.joda.time.LocalTime$Property.roundHalfEvenCopy(org.joda.time.LocalTime$Property )org.joda.time.LocalTime"[label="1"]
"org.joda.time.LocalTime$Property"->"(static)org.joda.time.LocalTime$Property.roundHalfFloorCopy(org.joda.time.LocalTime$Property )org.joda.time.LocalTime"[label="1"]
"org.joda.time.LocalTime$Property"->"(static)org.joda.time.LocalTime$Property.setCopy(org.joda.time.LocalTime$Property int )org.joda.time.LocalTime"[label="1"]
"org.joda.time.LocalTime$Property"->"(static)org.joda.time.LocalTime$Property.setCopy(org.joda.time.LocalTime$Property java.lang.String )org.joda.time.LocalTime"[label="1"]
"org.joda.time.LocalTime$Property"->"(static)org.joda.time.LocalTime$Property.setCopy(org.joda.time.LocalTime$Property java.lang.String java.util.Locale )org.joda.time.LocalTime"[label="1"]
"org.joda.time.LocalTime$Property"->"(static)org.joda.time.LocalTime$Property.withMaximumValue(org.joda.time.LocalTime$Property )org.joda.time.LocalTime"[label="1"]
"org.joda.time.LocalTime$Property"->"(static)org.joda.time.LocalTime$Property.withMinimumValue(org.joda.time.LocalTime$Property )org.joda.time.LocalTime"[label="1"]
"org.joda.time.LocalTime$Property"->"org.joda.time.LocalTime$PropertyIsPolymorphicToorg.joda.time.field.AbstractReadableInstantFieldProperty"[label="1"]
"org.joda.time.Minutes"->"(static)org.joda.time.Minutes.dividedBy(org.joda.time.Minutes int )org.joda.time.Minutes"[label="1"]
"org.joda.time.Minutes"->"(static)org.joda.time.Minutes.getFieldType(org.joda.time.Minutes )org.joda.time.DurationFieldType"[label="1"]
"org.joda.time.Minutes"->"(static)org.joda.time.Minutes.getMinutes(org.joda.time.Minutes )int"[label="1"]
"org.joda.time.Minutes"->"(static)org.joda.time.Minutes.getPeriodType(org.joda.time.Minutes )org.joda.time.PeriodType"[label="1"]
"org.joda.time.Minutes"->"(static)org.joda.time.Minutes.isGreaterThan(org.joda.time.Minutes org.joda.time.Minutes )boolean"[label="2"]
"org.joda.time.Minutes"->"(static)org.joda.time.Minutes.isLessThan(org.joda.time.Minutes org.joda.time.Minutes )boolean"[label="2"]
"org.joda.time.Minutes"->"(static)org.joda.time.Minutes.minus(org.joda.time.Minutes int )org.joda.time.Minutes"[label="1"]
"org.joda.time.Minutes"->"(static)org.joda.time.Minutes.minus(org.joda.time.Minutes org.joda.time.Minutes )org.joda.time.Minutes"[label="2"]
"org.joda.time.Minutes"->"(static)org.joda.time.Minutes.multipliedBy(org.joda.time.Minutes int )org.joda.time.Minutes"[label="1"]
"org.joda.time.Minutes"->"(static)org.joda.time.Minutes.negated(org.joda.time.Minutes )org.joda.time.Minutes"[label="1"]
"org.joda.time.Minutes"->"(static)org.joda.time.Minutes.plus(org.joda.time.Minutes int )org.joda.time.Minutes"[label="1"]
"org.joda.time.Minutes"->"(static)org.joda.time.Minutes.plus(org.joda.time.Minutes org.joda.time.Minutes )org.joda.time.Minutes"[label="2"]
"org.joda.time.Minutes"->"(static)org.joda.time.Minutes.toStandardDays(org.joda.time.Minutes )org.joda.time.Days"[label="1"]
"org.joda.time.Minutes"->"(static)org.joda.time.Minutes.toStandardDuration(org.joda.time.Minutes )org.joda.time.Duration"[label="1"]
"org.joda.time.Minutes"->"(static)org.joda.time.Minutes.toStandardHours(org.joda.time.Minutes )org.joda.time.Hours"[label="1"]
"org.joda.time.Minutes"->"(static)org.joda.time.Minutes.toStandardSeconds(org.joda.time.Minutes )org.joda.time.Seconds"[label="1"]
"org.joda.time.Minutes"->"(static)org.joda.time.Minutes.toStandardWeeks(org.joda.time.Minutes )org.joda.time.Weeks"[label="1"]
"org.joda.time.MonthDay"->"(static)org.joda.time.MonthDay.dayOfMonth(org.joda.time.MonthDay )org.joda.time.MonthDay$Property"[label="1"]
"org.joda.time.MonthDay"->"(static)org.joda.time.MonthDay.getDayOfMonth(org.joda.time.MonthDay )int"[label="1"]
"org.joda.time.MonthDay"->"(static)org.joda.time.MonthDay.getFieldType(org.joda.time.MonthDay int )org.joda.time.DateTimeFieldType"[label="1"]
"org.joda.time.MonthDay"->"(static)org.joda.time.MonthDay.getFieldTypes(org.joda.time.MonthDay )org.joda.time.DateTimeFieldType[]"[label="1"]
"org.joda.time.MonthDay"->"(static)org.joda.time.MonthDay.getMonthOfYear(org.joda.time.MonthDay )int"[label="1"]
"org.joda.time.MonthDay"->"(static)org.joda.time.MonthDay.minus(org.joda.time.MonthDay org.joda.time.ReadablePeriod )org.joda.time.MonthDay"[label="1"]
"org.joda.time.MonthDay"->"(static)org.joda.time.MonthDay.minusDays(org.joda.time.MonthDay int )org.joda.time.MonthDay"[label="1"]
"org.joda.time.MonthDay"->"(static)org.joda.time.MonthDay.minusMonths(org.joda.time.MonthDay int )org.joda.time.MonthDay"[label="1"]
"org.joda.time.MonthDay"->"(static)org.joda.time.MonthDay.monthOfYear(org.joda.time.MonthDay )org.joda.time.MonthDay$Property"[label="1"]
"org.joda.time.MonthDay"->"(static)org.joda.time.MonthDay.plus(org.joda.time.MonthDay org.joda.time.ReadablePeriod )org.joda.time.MonthDay"[label="1"]
"org.joda.time.MonthDay"->"(static)org.joda.time.MonthDay.plusDays(org.joda.time.MonthDay int )org.joda.time.MonthDay"[label="1"]
"org.joda.time.MonthDay"->"(static)org.joda.time.MonthDay.plusMonths(org.joda.time.MonthDay int )org.joda.time.MonthDay"[label="1"]
"org.joda.time.MonthDay"->"(static)org.joda.time.MonthDay.property(org.joda.time.MonthDay org.joda.time.DateTimeFieldType )org.joda.time.MonthDay$Property"[label="1"]
"org.joda.time.MonthDay"->"(static)org.joda.time.MonthDay.size(org.joda.time.MonthDay )int"[label="1"]
"org.joda.time.MonthDay"->"(static)org.joda.time.MonthDay.toLocalDate(org.joda.time.MonthDay int )org.joda.time.LocalDate"[label="1"]
"org.joda.time.MonthDay"->"(static)org.joda.time.MonthDay.withChronologyRetainFields(org.joda.time.MonthDay org.joda.time.Chronology )org.joda.time.MonthDay"[label="1"]
"org.joda.time.MonthDay"->"(static)org.joda.time.MonthDay.withDayOfMonth(org.joda.time.MonthDay int )org.joda.time.MonthDay"[label="1"]
"org.joda.time.MonthDay"->"(static)org.joda.time.MonthDay.withField(org.joda.time.MonthDay org.joda.time.DateTimeFieldType int )org.joda.time.MonthDay"[label="1"]
"org.joda.time.MonthDay"->"(static)org.joda.time.MonthDay.withFieldAdded(org.joda.time.MonthDay org.joda.time.DurationFieldType int )org.joda.time.MonthDay"[label="1"]
"org.joda.time.MonthDay"->"(static)org.joda.time.MonthDay.withMonthOfYear(org.joda.time.MonthDay int )org.joda.time.MonthDay"[label="1"]
"org.joda.time.MonthDay"->"(static)org.joda.time.MonthDay.withPeriodAdded(org.joda.time.MonthDay org.joda.time.ReadablePeriod int )org.joda.time.MonthDay"[label="1"]
"org.joda.time.MonthDay"->"org.joda.time.MonthDayIsPolymorphicToorg.joda.time.ReadablePartial"[label="1"]
"org.joda.time.MonthDay$Property"->"(static)org.joda.time.MonthDay$Property.addToCopy(org.joda.time.MonthDay$Property int )org.joda.time.MonthDay"[label="1"]
"org.joda.time.MonthDay$Property"->"(static)org.joda.time.MonthDay$Property.addWrapFieldToCopy(org.joda.time.MonthDay$Property int )org.joda.time.MonthDay"[label="1"]
"org.joda.time.MonthDay$Property"->"(static)org.joda.time.MonthDay$Property.get(org.joda.time.MonthDay$Property )int"[label="1"]
"org.joda.time.MonthDay$Property"->"(static)org.joda.time.MonthDay$Property.getField(org.joda.time.MonthDay$Property )org.joda.time.DateTimeField"[label="1"]
"org.joda.time.MonthDay$Property"->"(static)org.joda.time.MonthDay$Property.getMonthDay(org.joda.time.MonthDay$Property )org.joda.time.MonthDay"[label="1"]
"org.joda.time.MonthDay$Property"->"(static)org.joda.time.MonthDay$Property.setCopy(org.joda.time.MonthDay$Property int )org.joda.time.MonthDay"[label="1"]
"org.joda.time.MonthDay$Property"->"(static)org.joda.time.MonthDay$Property.setCopy(org.joda.time.MonthDay$Property java.lang.String )org.joda.time.MonthDay"[label="1"]
"org.joda.time.MonthDay$Property"->"(static)org.joda.time.MonthDay$Property.setCopy(org.joda.time.MonthDay$Property java.lang.String java.util.Locale )org.joda.time.MonthDay"[label="1"]
"org.joda.time.Months"->"(static)org.joda.time.Months.dividedBy(org.joda.time.Months int )org.joda.time.Months"[label="1"]
"org.joda.time.Months"->"(static)org.joda.time.Months.getFieldType(org.joda.time.Months )org.joda.time.DurationFieldType"[label="1"]
"org.joda.time.Months"->"(static)org.joda.time.Months.getMonths(org.joda.time.Months )int"[label="1"]
"org.joda.time.Months"->"(static)org.joda.time.Months.getPeriodType(org.joda.time.Months )org.joda.time.PeriodType"[label="1"]
"org.joda.time.Months"->"(static)org.joda.time.Months.isGreaterThan(org.joda.time.Months org.joda.time.Months )boolean"[label="2"]
"org.joda.time.Months"->"(static)org.joda.time.Months.isLessThan(org.joda.time.Months org.joda.time.Months )boolean"[label="2"]
"org.joda.time.Months"->"(static)org.joda.time.Months.minus(org.joda.time.Months int )org.joda.time.Months"[label="1"]
"org.joda.time.Months"->"(static)org.joda.time.Months.minus(org.joda.time.Months org.joda.time.Months )org.joda.time.Months"[label="2"]
"org.joda.time.Months"->"(static)org.joda.time.Months.multipliedBy(org.joda.time.Months int )org.joda.time.Months"[label="1"]
"org.joda.time.Months"->"(static)org.joda.time.Months.negated(org.joda.time.Months )org.joda.time.Months"[label="1"]
"org.joda.time.Months"->"(static)org.joda.time.Months.plus(org.joda.time.Months int )org.joda.time.Months"[label="1"]
"org.joda.time.Months"->"(static)org.joda.time.Months.plus(org.joda.time.Months org.joda.time.Months )org.joda.time.Months"[label="2"]
"org.joda.time.MutableDateTime"->"(static)org.joda.time.MutableDateTime.centuryOfEra(org.joda.time.MutableDateTime )org.joda.time.MutableDateTime$Property"[label="1"]
"org.joda.time.MutableDateTime"->"(static)org.joda.time.MutableDateTime.clone(org.joda.time.MutableDateTime )java.lang.Object"[label="1"]
"org.joda.time.MutableDateTime"->"(static)org.joda.time.MutableDateTime.copy(org.joda.time.MutableDateTime )org.joda.time.MutableDateTime"[label="1"]
"org.joda.time.MutableDateTime"->"(static)org.joda.time.MutableDateTime.dayOfMonth(org.joda.time.MutableDateTime )org.joda.time.MutableDateTime$Property"[label="1"]
"org.joda.time.MutableDateTime"->"(static)org.joda.time.MutableDateTime.dayOfWeek(org.joda.time.MutableDateTime )org.joda.time.MutableDateTime$Property"[label="1"]
"org.joda.time.MutableDateTime"->"(static)org.joda.time.MutableDateTime.dayOfYear(org.joda.time.MutableDateTime )org.joda.time.MutableDateTime$Property"[label="1"]
"org.joda.time.MutableDateTime"->"(static)org.joda.time.MutableDateTime.era(org.joda.time.MutableDateTime )org.joda.time.MutableDateTime$Property"[label="1"]
"org.joda.time.MutableDateTime"->"(static)org.joda.time.MutableDateTime.getRoundingField(org.joda.time.MutableDateTime )org.joda.time.DateTimeField"[label="1"]
"org.joda.time.MutableDateTime"->"(static)org.joda.time.MutableDateTime.getRoundingMode(org.joda.time.MutableDateTime )int"[label="1"]
"org.joda.time.MutableDateTime"->"(static)org.joda.time.MutableDateTime.hourOfDay(org.joda.time.MutableDateTime )org.joda.time.MutableDateTime$Property"[label="1"]
"org.joda.time.MutableDateTime"->"(static)org.joda.time.MutableDateTime.millisOfDay(org.joda.time.MutableDateTime )org.joda.time.MutableDateTime$Property"[label="1"]
"org.joda.time.MutableDateTime"->"(static)org.joda.time.MutableDateTime.millisOfSecond(org.joda.time.MutableDateTime )org.joda.time.MutableDateTime$Property"[label="1"]
"org.joda.time.MutableDateTime"->"(static)org.joda.time.MutableDateTime.minuteOfDay(org.joda.time.MutableDateTime )org.joda.time.MutableDateTime$Property"[label="1"]
"org.joda.time.MutableDateTime"->"(static)org.joda.time.MutableDateTime.minuteOfHour(org.joda.time.MutableDateTime )org.joda.time.MutableDateTime$Property"[label="1"]
"org.joda.time.MutableDateTime"->"(static)org.joda.time.MutableDateTime.monthOfYear(org.joda.time.MutableDateTime )org.joda.time.MutableDateTime$Property"[label="1"]
"org.joda.time.MutableDateTime"->"(static)org.joda.time.MutableDateTime.property(org.joda.time.MutableDateTime org.joda.time.DateTimeFieldType )org.joda.time.MutableDateTime$Property"[label="1"]
"org.joda.time.MutableDateTime"->"(static)org.joda.time.MutableDateTime.secondOfDay(org.joda.time.MutableDateTime )org.joda.time.MutableDateTime$Property"[label="1"]
"org.joda.time.MutableDateTime"->"(static)org.joda.time.MutableDateTime.secondOfMinute(org.joda.time.MutableDateTime )org.joda.time.MutableDateTime$Property"[label="1"]
"org.joda.time.MutableDateTime"->"(static)org.joda.time.MutableDateTime.weekOfWeekyear(org.joda.time.MutableDateTime )org.joda.time.MutableDateTime$Property"[label="1"]
"org.joda.time.MutableDateTime"->"(static)org.joda.time.MutableDateTime.weekyear(org.joda.time.MutableDateTime )org.joda.time.MutableDateTime$Property"[label="1"]
"org.joda.time.MutableDateTime"->"(static)org.joda.time.MutableDateTime.year(org.joda.time.MutableDateTime )org.joda.time.MutableDateTime$Property"[label="1"]
"org.joda.time.MutableDateTime"->"(static)org.joda.time.MutableDateTime.yearOfCentury(org.joda.time.MutableDateTime )org.joda.time.MutableDateTime$Property"[label="1"]
"org.joda.time.MutableDateTime"->"(static)org.joda.time.MutableDateTime.yearOfEra(org.joda.time.MutableDateTime )org.joda.time.MutableDateTime$Property"[label="1"]
"org.joda.time.MutableDateTime"->"org.joda.time.MutableDateTimeIsPolymorphicToorg.joda.time.base.AbstractDateTime"[label="1"]
"org.joda.time.MutableDateTime$Property"->"(static)org.joda.time.MutableDateTime$Property.addWrapField(org.joda.time.MutableDateTime$Property int )org.joda.time.MutableDateTime"[label="1"]
"org.joda.time.MutableDateTime$Property"->"(static)org.joda.time.MutableDateTime$Property.getField(org.joda.time.MutableDateTime$Property )org.joda.time.DateTimeField"[label="1"]
"org.joda.time.MutableDateTime$Property"->"(static)org.joda.time.MutableDateTime$Property.getMutableDateTime(org.joda.time.MutableDateTime$Property )org.joda.time.MutableDateTime"[label="1"]
"org.joda.time.MutableDateTime$Property"->"(static)org.joda.time.MutableDateTime$Property.roundCeiling(org.joda.time.MutableDateTime$Property )org.joda.time.MutableDateTime"[label="1"]
"org.joda.time.MutableDateTime$Property"->"(static)org.joda.time.MutableDateTime$Property.roundFloor(org.joda.time.MutableDateTime$Property )org.joda.time.MutableDateTime"[label="1"]
"org.joda.time.MutableDateTime$Property"->"(static)org.joda.time.MutableDateTime$Property.roundHalfCeiling(org.joda.time.MutableDateTime$Property )org.joda.time.MutableDateTime"[label="1"]
"org.joda.time.MutableDateTime$Property"->"(static)org.joda.time.MutableDateTime$Property.roundHalfEven(org.joda.time.MutableDateTime$Property )org.joda.time.MutableDateTime"[label="1"]
"org.joda.time.MutableDateTime$Property"->"(static)org.joda.time.MutableDateTime$Property.roundHalfFloor(org.joda.time.MutableDateTime$Property )org.joda.time.MutableDateTime"[label="1"]
"org.joda.time.MutableDateTime$Property"->"(static)org.joda.time.MutableDateTime$Property.set(org.joda.time.MutableDateTime$Property int )org.joda.time.MutableDateTime"[label="1"]
"org.joda.time.MutableDateTime$Property"->"(static)org.joda.time.MutableDateTime$Property.set(org.joda.time.MutableDateTime$Property java.lang.String )org.joda.time.MutableDateTime"[label="1"]
"org.joda.time.MutableDateTime$Property"->"(static)org.joda.time.MutableDateTime$Property.set(org.joda.time.MutableDateTime$Property java.lang.String java.util.Locale )org.joda.time.MutableDateTime"[label="1"]
"org.joda.time.MutableDateTime$Property"->"org.joda.time.MutableDateTime$PropertyIsPolymorphicToorg.joda.time.field.AbstractReadableInstantFieldProperty"[label="1"]
"org.joda.time.MutableInterval"->"(static)org.joda.time.MutableInterval.clone(org.joda.time.MutableInterval )java.lang.Object"[label="1"]
"org.joda.time.MutableInterval"->"(static)org.joda.time.MutableInterval.copy(org.joda.time.MutableInterval )org.joda.time.MutableInterval"[label="1"]
"org.joda.time.MutablePeriod"->"(static)org.joda.time.MutablePeriod.clone(org.joda.time.MutablePeriod )java.lang.Object"[label="1"]
"org.joda.time.MutablePeriod"->"(static)org.joda.time.MutablePeriod.copy(org.joda.time.MutablePeriod )org.joda.time.MutablePeriod"[label="1"]
"org.joda.time.MutablePeriod"->"(static)org.joda.time.MutablePeriod.getDays(org.joda.time.MutablePeriod )int"[label="1"]
"org.joda.time.MutablePeriod"->"(static)org.joda.time.MutablePeriod.getHours(org.joda.time.MutablePeriod )int"[label="1"]
"org.joda.time.MutablePeriod"->"(static)org.joda.time.MutablePeriod.getMillis(org.joda.time.MutablePeriod )int"[label="1"]
"org.joda.time.MutablePeriod"->"(static)org.joda.time.MutablePeriod.getMinutes(org.joda.time.MutablePeriod )int"[label="1"]
"org.joda.time.MutablePeriod"->"(static)org.joda.time.MutablePeriod.getMonths(org.joda.time.MutablePeriod )int"[label="1"]
"org.joda.time.MutablePeriod"->"(static)org.joda.time.MutablePeriod.getSeconds(org.joda.time.MutablePeriod )int"[label="1"]
"org.joda.time.MutablePeriod"->"(static)org.joda.time.MutablePeriod.getWeeks(org.joda.time.MutablePeriod )int"[label="1"]
"org.joda.time.MutablePeriod"->"(static)org.joda.time.MutablePeriod.getYears(org.joda.time.MutablePeriod )int"[label="1"]
"org.joda.time.Partial"->"(static)org.joda.time.Partial.getChronology(org.joda.time.Partial )org.joda.time.Chronology"[label="1"]
"org.joda.time.Partial"->"(static)org.joda.time.Partial.getFieldType(org.joda.time.Partial int )org.joda.time.DateTimeFieldType"[label="1"]
"org.joda.time.Partial"->"(static)org.joda.time.Partial.getFieldTypes(org.joda.time.Partial )org.joda.time.DateTimeFieldType[]"[label="1"]
"org.joda.time.Partial"->"(static)org.joda.time.Partial.getFormatter(org.joda.time.Partial )org.joda.time.format.DateTimeFormatter"[label="1"]
"org.joda.time.Partial"->"(static)org.joda.time.Partial.getValue(org.joda.time.Partial int )int"[label="1"]
"org.joda.time.Partial"->"(static)org.joda.time.Partial.getValues(org.joda.time.Partial )int[]"[label="1"]
"org.joda.time.Partial"->"(static)org.joda.time.Partial.isMatch(org.joda.time.Partial org.joda.time.ReadableInstant )boolean"[label="1"]
"org.joda.time.Partial"->"(static)org.joda.time.Partial.isMatch(org.joda.time.Partial org.joda.time.ReadablePartial )boolean"[label="1"]
"org.joda.time.Partial"->"(static)org.joda.time.Partial.minus(org.joda.time.Partial org.joda.time.ReadablePeriod )org.joda.time.Partial"[label="1"]
"org.joda.time.Partial"->"(static)org.joda.time.Partial.plus(org.joda.time.Partial org.joda.time.ReadablePeriod )org.joda.time.Partial"[label="1"]
"org.joda.time.Partial"->"(static)org.joda.time.Partial.property(org.joda.time.Partial org.joda.time.DateTimeFieldType )org.joda.time.Partial$Property"[label="1"]
"org.joda.time.Partial"->"(static)org.joda.time.Partial.size(org.joda.time.Partial )int"[label="1"]
"org.joda.time.Partial"->"(static)org.joda.time.Partial.toStringList(org.joda.time.Partial )java.lang.String"[label="1"]
"org.joda.time.Partial"->"(static)org.joda.time.Partial.with(org.joda.time.Partial org.joda.time.DateTimeFieldType int )org.joda.time.Partial"[label="1"]
"org.joda.time.Partial"->"(static)org.joda.time.Partial.withChronologyRetainFields(org.joda.time.Partial org.joda.time.Chronology )org.joda.time.Partial"[label="1"]
"org.joda.time.Partial"->"(static)org.joda.time.Partial.withField(org.joda.time.Partial org.joda.time.DateTimeFieldType int )org.joda.time.Partial"[label="1"]
"org.joda.time.Partial"->"(static)org.joda.time.Partial.withFieldAddWrapped(org.joda.time.Partial org.joda.time.DurationFieldType int )org.joda.time.Partial"[label="1"]
"org.joda.time.Partial"->"(static)org.joda.time.Partial.withFieldAdded(org.joda.time.Partial org.joda.time.DurationFieldType int )org.joda.time.Partial"[label="1"]
"org.joda.time.Partial"->"(static)org.joda.time.Partial.withPeriodAdded(org.joda.time.Partial org.joda.time.ReadablePeriod int )org.joda.time.Partial"[label="1"]
"org.joda.time.Partial"->"(static)org.joda.time.Partial.without(org.joda.time.Partial org.joda.time.DateTimeFieldType )org.joda.time.Partial"[label="1"]
"org.joda.time.Partial"->"org.joda.time.PartialIsPolymorphicToorg.joda.time.ReadablePartial"[label="1"]
"org.joda.time.Partial$Property"->"(static)org.joda.time.Partial$Property.addToCopy(org.joda.time.Partial$Property int )org.joda.time.Partial"[label="1"]
"org.joda.time.Partial$Property"->"(static)org.joda.time.Partial$Property.addWrapFieldToCopy(org.joda.time.Partial$Property int )org.joda.time.Partial"[label="1"]
"org.joda.time.Partial$Property"->"(static)org.joda.time.Partial$Property.get(org.joda.time.Partial$Property )int"[label="1"]
"org.joda.time.Partial$Property"->"(static)org.joda.time.Partial$Property.getField(org.joda.time.Partial$Property )org.joda.time.DateTimeField"[label="1"]
"org.joda.time.Partial$Property"->"(static)org.joda.time.Partial$Property.getPartial(org.joda.time.Partial$Property )org.joda.time.Partial"[label="1"]
"org.joda.time.Partial$Property"->"(static)org.joda.time.Partial$Property.setCopy(org.joda.time.Partial$Property int )org.joda.time.Partial"[label="1"]
"org.joda.time.Partial$Property"->"(static)org.joda.time.Partial$Property.setCopy(org.joda.time.Partial$Property java.lang.String )org.joda.time.Partial"[label="1"]
"org.joda.time.Partial$Property"->"(static)org.joda.time.Partial$Property.setCopy(org.joda.time.Partial$Property java.lang.String java.util.Locale )org.joda.time.Partial"[label="1"]
"org.joda.time.Partial$Property"->"(static)org.joda.time.Partial$Property.withMaximumValue(org.joda.time.Partial$Property )org.joda.time.Partial"[label="1"]
"org.joda.time.Partial$Property"->"(static)org.joda.time.Partial$Property.withMinimumValue(org.joda.time.Partial$Property )org.joda.time.Partial"[label="1"]
"org.joda.time.Period"->"(static)org.joda.time.Period.getDays(org.joda.time.Period )int"[label="1"]
"org.joda.time.Period"->"(static)org.joda.time.Period.getHours(org.joda.time.Period )int"[label="1"]
"org.joda.time.Period"->"(static)org.joda.time.Period.getMillis(org.joda.time.Period )int"[label="1"]
"org.joda.time.Period"->"(static)org.joda.time.Period.getMinutes(org.joda.time.Period )int"[label="1"]
"org.joda.time.Period"->"(static)org.joda.time.Period.getMonths(org.joda.time.Period )int"[label="1"]
"org.joda.time.Period"->"(static)org.joda.time.Period.getSeconds(org.joda.time.Period )int"[label="1"]
"org.joda.time.Period"->"(static)org.joda.time.Period.getWeeks(org.joda.time.Period )int"[label="1"]
"org.joda.time.Period"->"(static)org.joda.time.Period.getYears(org.joda.time.Period )int"[label="1"]
"org.joda.time.Period"->"(static)org.joda.time.Period.minus(org.joda.time.Period org.joda.time.ReadablePeriod )org.joda.time.Period"[label="1"]
"org.joda.time.Period"->"(static)org.joda.time.Period.minusDays(org.joda.time.Period int )org.joda.time.Period"[label="1"]
"org.joda.time.Period"->"(static)org.joda.time.Period.minusHours(org.joda.time.Period int )org.joda.time.Period"[label="1"]
"org.joda.time.Period"->"(static)org.joda.time.Period.minusMillis(org.joda.time.Period int )org.joda.time.Period"[label="1"]
"org.joda.time.Period"->"(static)org.joda.time.Period.minusMinutes(org.joda.time.Period int )org.joda.time.Period"[label="1"]
"org.joda.time.Period"->"(static)org.joda.time.Period.minusMonths(org.joda.time.Period int )org.joda.time.Period"[label="1"]
"org.joda.time.Period"->"(static)org.joda.time.Period.minusSeconds(org.joda.time.Period int )org.joda.time.Period"[label="1"]
"org.joda.time.Period"->"(static)org.joda.time.Period.minusWeeks(org.joda.time.Period int )org.joda.time.Period"[label="1"]
"org.joda.time.Period"->"(static)org.joda.time.Period.minusYears(org.joda.time.Period int )org.joda.time.Period"[label="1"]
"org.joda.time.Period"->"(static)org.joda.time.Period.multipliedBy(org.joda.time.Period int )org.joda.time.Period"[label="1"]
"org.joda.time.Period"->"(static)org.joda.time.Period.negated(org.joda.time.Period )org.joda.time.Period"[label="1"]
"org.joda.time.Period"->"(static)org.joda.time.Period.normalizedStandard(org.joda.time.Period )org.joda.time.Period"[label="1"]
"org.joda.time.Period"->"(static)org.joda.time.Period.normalizedStandard(org.joda.time.Period org.joda.time.PeriodType )org.joda.time.Period"[label="1"]
"org.joda.time.Period"->"(static)org.joda.time.Period.plus(org.joda.time.Period org.joda.time.ReadablePeriod )org.joda.time.Period"[label="1"]
"org.joda.time.Period"->"(static)org.joda.time.Period.plusDays(org.joda.time.Period int )org.joda.time.Period"[label="1"]
"org.joda.time.Period"->"(static)org.joda.time.Period.plusHours(org.joda.time.Period int )org.joda.time.Period"[label="1"]
"org.joda.time.Period"->"(static)org.joda.time.Period.plusMillis(org.joda.time.Period int )org.joda.time.Period"[label="1"]
"org.joda.time.Period"->"(static)org.joda.time.Period.plusMinutes(org.joda.time.Period int )org.joda.time.Period"[label="1"]
"org.joda.time.Period"->"(static)org.joda.time.Period.plusMonths(org.joda.time.Period int )org.joda.time.Period"[label="1"]
"org.joda.time.Period"->"(static)org.joda.time.Period.plusSeconds(org.joda.time.Period int )org.joda.time.Period"[label="1"]
"org.joda.time.Period"->"(static)org.joda.time.Period.plusWeeks(org.joda.time.Period int )org.joda.time.Period"[label="1"]
"org.joda.time.Period"->"(static)org.joda.time.Period.plusYears(org.joda.time.Period int )org.joda.time.Period"[label="1"]
"org.joda.time.Period"->"(static)org.joda.time.Period.toPeriod(org.joda.time.Period )org.joda.time.Period"[label="1"]
"org.joda.time.Period"->"(static)org.joda.time.Period.toStandardDays(org.joda.time.Period )org.joda.time.Days"[label="1"]
"org.joda.time.Period"->"(static)org.joda.time.Period.toStandardDuration(org.joda.time.Period )org.joda.time.Duration"[label="1"]
"org.joda.time.Period"->"(static)org.joda.time.Period.toStandardHours(org.joda.time.Period )org.joda.time.Hours"[label="1"]
"org.joda.time.Period"->"(static)org.joda.time.Period.toStandardMinutes(org.joda.time.Period )org.joda.time.Minutes"[label="1"]
"org.joda.time.Period"->"(static)org.joda.time.Period.toStandardSeconds(org.joda.time.Period )org.joda.time.Seconds"[label="1"]
"org.joda.time.Period"->"(static)org.joda.time.Period.toStandardWeeks(org.joda.time.Period )org.joda.time.Weeks"[label="1"]
"org.joda.time.Period"->"(static)org.joda.time.Period.withDays(org.joda.time.Period int )org.joda.time.Period"[label="1"]
"org.joda.time.Period"->"(static)org.joda.time.Period.withField(org.joda.time.Period org.joda.time.DurationFieldType int )org.joda.time.Period"[label="1"]
"org.joda.time.Period"->"(static)org.joda.time.Period.withFieldAdded(org.joda.time.Period org.joda.time.DurationFieldType int )org.joda.time.Period"[label="1"]
"org.joda.time.Period"->"(static)org.joda.time.Period.withFields(org.joda.time.Period org.joda.time.ReadablePeriod )org.joda.time.Period"[label="1"]
"org.joda.time.Period"->"(static)org.joda.time.Period.withHours(org.joda.time.Period int )org.joda.time.Period"[label="1"]
"org.joda.time.Period"->"(static)org.joda.time.Period.withMillis(org.joda.time.Period int )org.joda.time.Period"[label="1"]
"org.joda.time.Period"->"(static)org.joda.time.Period.withMinutes(org.joda.time.Period int )org.joda.time.Period"[label="1"]
"org.joda.time.Period"->"(static)org.joda.time.Period.withMonths(org.joda.time.Period int )org.joda.time.Period"[label="1"]
"org.joda.time.Period"->"(static)org.joda.time.Period.withPeriodType(org.joda.time.Period org.joda.time.PeriodType )org.joda.time.Period"[label="1"]
"org.joda.time.Period"->"(static)org.joda.time.Period.withSeconds(org.joda.time.Period int )org.joda.time.Period"[label="1"]
"org.joda.time.Period"->"(static)org.joda.time.Period.withWeeks(org.joda.time.Period int )org.joda.time.Period"[label="1"]
"org.joda.time.Period"->"(static)org.joda.time.Period.withYears(org.joda.time.Period int )org.joda.time.Period"[label="1"]
"org.joda.time.PeriodType"->"(static)org.joda.time.Period.normalizedStandard(org.joda.time.Period org.joda.time.PeriodType )org.joda.time.Period"[label="1"]
"org.joda.time.PeriodType"->"(static)org.joda.time.Period.withPeriodType(org.joda.time.Period org.joda.time.PeriodType )org.joda.time.Period"[label="1"]
"org.joda.time.PeriodType"->"(static)org.joda.time.PeriodType.equals(org.joda.time.PeriodType java.lang.Object )boolean"[label="1"]
"org.joda.time.PeriodType"->"(static)org.joda.time.PeriodType.getFieldType(org.joda.time.PeriodType int )org.joda.time.DurationFieldType"[label="1"]
"org.joda.time.PeriodType"->"(static)org.joda.time.PeriodType.getName(org.joda.time.PeriodType )java.lang.String"[label="1"]
"org.joda.time.PeriodType"->"(static)org.joda.time.PeriodType.indexOf(org.joda.time.PeriodType org.joda.time.DurationFieldType )int"[label="1"]
"org.joda.time.PeriodType"->"(static)org.joda.time.PeriodType.isSupported(org.joda.time.PeriodType org.joda.time.DurationFieldType )boolean"[label="1"]
"org.joda.time.PeriodType"->"(static)org.joda.time.PeriodType.size(org.joda.time.PeriodType )int"[label="1"]
"org.joda.time.PeriodType"->"(static)org.joda.time.PeriodType.withDaysRemoved(org.joda.time.PeriodType )org.joda.time.PeriodType"[label="1"]
"org.joda.time.PeriodType"->"(static)org.joda.time.PeriodType.withHoursRemoved(org.joda.time.PeriodType )org.joda.time.PeriodType"[label="1"]
"org.joda.time.PeriodType"->"(static)org.joda.time.PeriodType.withMillisRemoved(org.joda.time.PeriodType )org.joda.time.PeriodType"[label="1"]
"org.joda.time.PeriodType"->"(static)org.joda.time.PeriodType.withMinutesRemoved(org.joda.time.PeriodType )org.joda.time.PeriodType"[label="1"]
"org.joda.time.PeriodType"->"(static)org.joda.time.PeriodType.withMonthsRemoved(org.joda.time.PeriodType )org.joda.time.PeriodType"[label="1"]
"org.joda.time.PeriodType"->"(static)org.joda.time.PeriodType.withSecondsRemoved(org.joda.time.PeriodType )org.joda.time.PeriodType"[label="1"]
"org.joda.time.PeriodType"->"(static)org.joda.time.PeriodType.withWeeksRemoved(org.joda.time.PeriodType )org.joda.time.PeriodType"[label="1"]
"org.joda.time.PeriodType"->"(static)org.joda.time.PeriodType.withYearsRemoved(org.joda.time.PeriodType )org.joda.time.PeriodType"[label="1"]
"org.joda.time.PeriodType"->"(static)org.joda.time.ReadableInterval.toPeriod(org.joda.time.ReadableInterval org.joda.time.PeriodType )org.joda.time.Period"[label="1"]
"org.joda.time.PeriodType"->"(static)org.joda.time.base.AbstractInterval.toPeriod(org.joda.time.base.AbstractInterval org.joda.time.PeriodType )org.joda.time.Period"[label="1"]
"org.joda.time.PeriodType"->"(static)org.joda.time.base.BaseDuration.toPeriod(org.joda.time.base.BaseDuration org.joda.time.PeriodType )org.joda.time.Period"[label="1"]
"org.joda.time.PeriodType"->"(static)org.joda.time.base.BaseDuration.toPeriod(org.joda.time.base.BaseDuration org.joda.time.PeriodType org.joda.time.Chronology )org.joda.time.Period"[label="1"]
"org.joda.time.PeriodType"->"(static)org.joda.time.base.BaseDuration.toPeriodFrom(org.joda.time.base.BaseDuration org.joda.time.ReadableInstant org.joda.time.PeriodType )org.joda.time.Period"[label="1"]
"org.joda.time.PeriodType"->"(static)org.joda.time.base.BaseDuration.toPeriodTo(org.joda.time.base.BaseDuration org.joda.time.ReadableInstant org.joda.time.PeriodType )org.joda.time.Period"[label="1"]
"org.joda.time.PeriodType"->"(static)org.joda.time.format.PeriodFormatter.withParseType(org.joda.time.format.PeriodFormatter org.joda.time.PeriodType )org.joda.time.format.PeriodFormatter"[label="1"]
"org.joda.time.PeriodType"->"org.joda.time.DateTimeUtils.getPeriodType(org.joda.time.PeriodType )org.joda.time.PeriodType"[label="1"]
"org.joda.time.PeriodType"->"org.joda.time.MutablePeriod(java.lang.Object org.joda.time.PeriodType )"[label="1"]
"org.joda.time.PeriodType"->"org.joda.time.MutablePeriod(long org.joda.time.PeriodType )"[label="1"]
"org.joda.time.PeriodType"->"org.joda.time.MutablePeriod(org.joda.time.PeriodType )"[label="1"]
"org.joda.time.PeriodType"->"org.joda.time.Period(java.lang.Object org.joda.time.PeriodType )"[label="1"]
"org.joda.time.PeriodType"->"org.joda.time.Period(long org.joda.time.PeriodType )"[label="1"]
"org.joda.time.ReadableDateTime"->"(static)org.joda.time.ReadableDateTime.getCenturyOfEra(org.joda.time.ReadableDateTime )int"[label="1"]
"org.joda.time.ReadableDateTime"->"(static)org.joda.time.ReadableDateTime.getDayOfMonth(org.joda.time.ReadableDateTime )int"[label="1"]
"org.joda.time.ReadableDateTime"->"(static)org.joda.time.ReadableDateTime.getDayOfWeek(org.joda.time.ReadableDateTime )int"[label="1"]
"org.joda.time.ReadableDateTime"->"(static)org.joda.time.ReadableDateTime.getDayOfYear(org.joda.time.ReadableDateTime )int"[label="1"]
"org.joda.time.ReadableDateTime"->"(static)org.joda.time.ReadableDateTime.getEra(org.joda.time.ReadableDateTime )int"[label="1"]
"org.joda.time.ReadableDateTime"->"(static)org.joda.time.ReadableDateTime.getHourOfDay(org.joda.time.ReadableDateTime )int"[label="1"]
"org.joda.time.ReadableDateTime"->"(static)org.joda.time.ReadableDateTime.getMillisOfDay(org.joda.time.ReadableDateTime )int"[label="1"]
"org.joda.time.ReadableDateTime"->"(static)org.joda.time.ReadableDateTime.getMillisOfSecond(org.joda.time.ReadableDateTime )int"[label="1"]
"org.joda.time.ReadableDateTime"->"(static)org.joda.time.ReadableDateTime.getMinuteOfDay(org.joda.time.ReadableDateTime )int"[label="1"]
"org.joda.time.ReadableDateTime"->"(static)org.joda.time.ReadableDateTime.getMinuteOfHour(org.joda.time.ReadableDateTime )int"[label="1"]
"org.joda.time.ReadableDateTime"->"(static)org.joda.time.ReadableDateTime.getMonthOfYear(org.joda.time.ReadableDateTime )int"[label="1"]
"org.joda.time.ReadableDateTime"->"(static)org.joda.time.ReadableDateTime.getSecondOfDay(org.joda.time.ReadableDateTime )int"[label="1"]
"org.joda.time.ReadableDateTime"->"(static)org.joda.time.ReadableDateTime.getSecondOfMinute(org.joda.time.ReadableDateTime )int"[label="1"]
"org.joda.time.ReadableDateTime"->"(static)org.joda.time.ReadableDateTime.getWeekOfWeekyear(org.joda.time.ReadableDateTime )int"[label="1"]
"org.joda.time.ReadableDateTime"->"(static)org.joda.time.ReadableDateTime.getWeekyear(org.joda.time.ReadableDateTime )int"[label="1"]
"org.joda.time.ReadableDateTime"->"(static)org.joda.time.ReadableDateTime.getYear(org.joda.time.ReadableDateTime )int"[label="1"]
"org.joda.time.ReadableDateTime"->"(static)org.joda.time.ReadableDateTime.getYearOfCentury(org.joda.time.ReadableDateTime )int"[label="1"]
"org.joda.time.ReadableDateTime"->"(static)org.joda.time.ReadableDateTime.getYearOfEra(org.joda.time.ReadableDateTime )int"[label="1"]
"org.joda.time.ReadableDateTime"->"(static)org.joda.time.ReadableDateTime.toDateTime(org.joda.time.ReadableDateTime )org.joda.time.DateTime"[label="1"]
"org.joda.time.ReadableDateTime"->"(static)org.joda.time.ReadableDateTime.toMutableDateTime(org.joda.time.ReadableDateTime )org.joda.time.MutableDateTime"[label="1"]
"org.joda.time.ReadableDuration"->"(static)org.joda.time.DateMidnight.minus(org.joda.time.DateMidnight org.joda.time.ReadableDuration )org.joda.time.DateMidnight"[label="1"]
"org.joda.time.ReadableDuration"->"(static)org.joda.time.DateMidnight.plus(org.joda.time.DateMidnight org.joda.time.ReadableDuration )org.joda.time.DateMidnight"[label="1"]
"org.joda.time.ReadableDuration"->"(static)org.joda.time.DateMidnight.withDurationAdded(org.joda.time.DateMidnight org.joda.time.ReadableDuration int )org.joda.time.DateMidnight"[label="1"]
"org.joda.time.ReadableDuration"->"(static)org.joda.time.DateTime.minus(org.joda.time.DateTime org.joda.time.ReadableDuration )org.joda.time.DateTime"[label="1"]
"org.joda.time.ReadableDuration"->"(static)org.joda.time.DateTime.plus(org.joda.time.DateTime org.joda.time.ReadableDuration )org.joda.time.DateTime"[label="1"]
"org.joda.time.ReadableDuration"->"(static)org.joda.time.DateTime.withDurationAdded(org.joda.time.DateTime org.joda.time.ReadableDuration int )org.joda.time.DateTime"[label="1"]
"org.joda.time.ReadableDuration"->"(static)org.joda.time.Duration.minus(org.joda.time.Duration org.joda.time.ReadableDuration )org.joda.time.Duration"[label="1"]
"org.joda.time.ReadableDuration"->"(static)org.joda.time.Duration.plus(org.joda.time.Duration org.joda.time.ReadableDuration )org.joda.time.Duration"[label="1"]
"org.joda.time.ReadableDuration"->"(static)org.joda.time.Duration.withDurationAdded(org.joda.time.Duration org.joda.time.ReadableDuration int )org.joda.time.Duration"[label="1"]
"org.joda.time.ReadableDuration"->"(static)org.joda.time.Instant.minus(org.joda.time.Instant org.joda.time.ReadableDuration )org.joda.time.Instant"[label="1"]
"org.joda.time.ReadableDuration"->"(static)org.joda.time.Instant.plus(org.joda.time.Instant org.joda.time.ReadableDuration )org.joda.time.Instant"[label="1"]
"org.joda.time.ReadableDuration"->"(static)org.joda.time.Instant.withDurationAdded(org.joda.time.Instant org.joda.time.ReadableDuration int )org.joda.time.Instant"[label="1"]
"org.joda.time.ReadableDuration"->"(static)org.joda.time.Interval.withDurationAfterStart(org.joda.time.Interval org.joda.time.ReadableDuration )org.joda.time.Interval"[label="1"]
"org.joda.time.ReadableDuration"->"(static)org.joda.time.Interval.withDurationBeforeEnd(org.joda.time.Interval org.joda.time.ReadableDuration )org.joda.time.Interval"[label="1"]
"org.joda.time.ReadableDuration"->"(static)org.joda.time.LocalDateTime.minus(org.joda.time.LocalDateTime org.joda.time.ReadableDuration )org.joda.time.LocalDateTime"[label="1"]
"org.joda.time.ReadableDuration"->"(static)org.joda.time.LocalDateTime.plus(org.joda.time.LocalDateTime org.joda.time.ReadableDuration )org.joda.time.LocalDateTime"[label="1"]
"org.joda.time.ReadableDuration"->"(static)org.joda.time.LocalDateTime.withDurationAdded(org.joda.time.LocalDateTime org.joda.time.ReadableDuration int )org.joda.time.LocalDateTime"[label="1"]
"org.joda.time.ReadableDuration"->"(static)org.joda.time.ReadableDuration.equals(org.joda.time.ReadableDuration java.lang.Object )boolean"[label="1"]
"org.joda.time.ReadableDuration"->"(static)org.joda.time.ReadableDuration.getMillis(org.joda.time.ReadableDuration )long"[label="1"]
"org.joda.time.ReadableDuration"->"(static)org.joda.time.ReadableDuration.isEqual(org.joda.time.ReadableDuration org.joda.time.ReadableDuration )boolean"[label="2"]
"org.joda.time.ReadableDuration"->"(static)org.joda.time.ReadableDuration.isLongerThan(org.joda.time.ReadableDuration org.joda.time.ReadableDuration )boolean"[label="2"]
"org.joda.time.ReadableDuration"->"(static)org.joda.time.ReadableDuration.isShorterThan(org.joda.time.ReadableDuration org.joda.time.ReadableDuration )boolean"[label="2"]
"org.joda.time.ReadableDuration"->"(static)org.joda.time.ReadableDuration.toDuration(org.joda.time.ReadableDuration )org.joda.time.Duration"[label="1"]
"org.joda.time.ReadableDuration"->"(static)org.joda.time.ReadableDuration.toPeriod(org.joda.time.ReadableDuration )org.joda.time.Period"[label="1"]
"org.joda.time.ReadableDuration"->"(static)org.joda.time.base.AbstractDuration.isEqual(org.joda.time.base.AbstractDuration org.joda.time.ReadableDuration )boolean"[label="1"]
"org.joda.time.ReadableDuration"->"(static)org.joda.time.base.AbstractDuration.isLongerThan(org.joda.time.base.AbstractDuration org.joda.time.ReadableDuration )boolean"[label="1"]
"org.joda.time.ReadableDuration"->"(static)org.joda.time.base.AbstractDuration.isShorterThan(org.joda.time.base.AbstractDuration org.joda.time.ReadableDuration )boolean"[label="1"]
"org.joda.time.ReadableDuration"->"org.joda.time.DateTimeUtils.getDurationMillis(org.joda.time.ReadableDuration )long"[label="1"]
"org.joda.time.ReadableDuration"->"org.joda.time.Interval(org.joda.time.ReadableDuration org.joda.time.ReadableInstant )"[label="1"]
"org.joda.time.ReadableDuration"->"org.joda.time.Interval(org.joda.time.ReadableInstant org.joda.time.ReadableDuration )"[label="1"]
"org.joda.time.ReadableDuration"->"org.joda.time.MutableInterval(org.joda.time.ReadableDuration org.joda.time.ReadableInstant )"[label="1"]
"org.joda.time.ReadableDuration"->"org.joda.time.MutableInterval(org.joda.time.ReadableInstant org.joda.time.ReadableDuration )"[label="1"]
"org.joda.time.ReadableDuration"->"org.joda.time.MutablePeriod(org.joda.time.ReadableDuration org.joda.time.ReadableInstant )"[label="1"]
"org.joda.time.ReadableDuration"->"org.joda.time.MutablePeriod(org.joda.time.ReadableInstant org.joda.time.ReadableDuration )"[label="1"]
"org.joda.time.ReadableDuration"->"org.joda.time.Period(org.joda.time.ReadableDuration org.joda.time.ReadableInstant )"[label="1"]
"org.joda.time.ReadableDuration"->"org.joda.time.Period(org.joda.time.ReadableInstant org.joda.time.ReadableDuration )"[label="1"]
"org.joda.time.ReadableInstant"->"(static)org.joda.time.DateTimeZone.getOffset(org.joda.time.DateTimeZone org.joda.time.ReadableInstant )int"[label="1"]
"org.joda.time.ReadableInstant"->"(static)org.joda.time.Interval.withEnd(org.joda.time.Interval org.joda.time.ReadableInstant )org.joda.time.Interval"[label="1"]
"org.joda.time.ReadableInstant"->"(static)org.joda.time.Interval.withStart(org.joda.time.Interval org.joda.time.ReadableInstant )org.joda.time.Interval"[label="1"]
"org.joda.time.ReadableInstant"->"(static)org.joda.time.Partial.isMatch(org.joda.time.Partial org.joda.time.ReadableInstant )boolean"[label="1"]
"org.joda.time.ReadableInstant"->"(static)org.joda.time.ReadableInstant.equals(org.joda.time.ReadableInstant java.lang.Object )boolean"[label="1"]
"org.joda.time.ReadableInstant"->"(static)org.joda.time.ReadableInstant.get(org.joda.time.ReadableInstant org.joda.time.DateTimeFieldType )int"[label="1"]
"org.joda.time.ReadableInstant"->"(static)org.joda.time.ReadableInstant.getChronology(org.joda.time.ReadableInstant )org.joda.time.Chronology"[label="1"]
"org.joda.time.ReadableInstant"->"(static)org.joda.time.ReadableInstant.getMillis(org.joda.time.ReadableInstant )long"[label="1"]
"org.joda.time.ReadableInstant"->"(static)org.joda.time.ReadableInstant.getZone(org.joda.time.ReadableInstant )org.joda.time.DateTimeZone"[label="1"]
"org.joda.time.ReadableInstant"->"(static)org.joda.time.ReadableInstant.isAfter(org.joda.time.ReadableInstant org.joda.time.ReadableInstant )boolean"[label="2"]
"org.joda.time.ReadableInstant"->"(static)org.joda.time.ReadableInstant.isBefore(org.joda.time.ReadableInstant org.joda.time.ReadableInstant )boolean"[label="2"]
"org.joda.time.ReadableInstant"->"(static)org.joda.time.ReadableInstant.isEqual(org.joda.time.ReadableInstant org.joda.time.ReadableInstant )boolean"[label="2"]
"org.joda.time.ReadableInstant"->"(static)org.joda.time.ReadableInstant.isSupported(org.joda.time.ReadableInstant org.joda.time.DateTimeFieldType )boolean"[label="1"]
"org.joda.time.ReadableInstant"->"(static)org.joda.time.ReadableInstant.toInstant(org.joda.time.ReadableInstant )org.joda.time.Instant"[label="1"]
"org.joda.time.ReadableInstant"->"(static)org.joda.time.ReadableInterval.isAfter(org.joda.time.ReadableInterval org.joda.time.ReadableInstant )boolean"[label="1"]
"org.joda.time.ReadableInstant"->"(static)org.joda.time.ReadableInterval.isBefore(org.joda.time.ReadableInterval org.joda.time.ReadableInstant )boolean"[label="1"]
"org.joda.time.ReadableInstant"->"(static)org.joda.time.ReadablePartial.toDateTime(org.joda.time.ReadablePartial org.joda.time.ReadableInstant )org.joda.time.DateTime"[label="1"]
"org.joda.time.ReadableInstant"->"(static)org.joda.time.base.AbstractInstant.isAfter(org.joda.time.base.AbstractInstant org.joda.time.ReadableInstant )boolean"[label="1"]
"org.joda.time.ReadableInstant"->"(static)org.joda.time.base.AbstractInstant.isBefore(org.joda.time.base.AbstractInstant org.joda.time.ReadableInstant )boolean"[label="1"]
"org.joda.time.ReadableInstant"->"(static)org.joda.time.base.AbstractInstant.isEqual(org.joda.time.base.AbstractInstant org.joda.time.ReadableInstant )boolean"[label="1"]
"org.joda.time.ReadableInstant"->"(static)org.joda.time.base.AbstractInterval.isAfter(org.joda.time.base.AbstractInterval org.joda.time.ReadableInstant )boolean"[label="1"]
"org.joda.time.ReadableInstant"->"(static)org.joda.time.base.AbstractInterval.isBefore(org.joda.time.base.AbstractInterval org.joda.time.ReadableInstant )boolean"[label="1"]
"org.joda.time.ReadableInstant"->"(static)org.joda.time.base.AbstractPartial.toDateTime(org.joda.time.base.AbstractPartial org.joda.time.ReadableInstant )org.joda.time.DateTime"[label="1"]
"org.joda.time.ReadableInstant"->"(static)org.joda.time.base.BaseDuration.toIntervalFrom(org.joda.time.base.BaseDuration org.joda.time.ReadableInstant )org.joda.time.Interval"[label="1"]
"org.joda.time.ReadableInstant"->"(static)org.joda.time.base.BaseDuration.toIntervalTo(org.joda.time.base.BaseDuration org.joda.time.ReadableInstant )org.joda.time.Interval"[label="1"]
"org.joda.time.ReadableInstant"->"(static)org.joda.time.base.BaseDuration.toPeriodFrom(org.joda.time.base.BaseDuration org.joda.time.ReadableInstant )org.joda.time.Period"[label="1"]
"org.joda.time.ReadableInstant"->"(static)org.joda.time.base.BaseDuration.toPeriodFrom(org.joda.time.base.BaseDuration org.joda.time.ReadableInstant org.joda.time.PeriodType )org.joda.time.Period"[label="1"]
"org.joda.time.ReadableInstant"->"(static)org.joda.time.base.BaseDuration.toPeriodTo(org.joda.time.base.BaseDuration org.joda.time.ReadableInstant )org.joda.time.Period"[label="1"]
"org.joda.time.ReadableInstant"->"(static)org.joda.time.base.BaseDuration.toPeriodTo(org.joda.time.base.BaseDuration org.joda.time.ReadableInstant org.joda.time.PeriodType )org.joda.time.Period"[label="1"]
"org.joda.time.ReadableInstant"->"(static)org.joda.time.base.BasePeriod.toDurationFrom(org.joda.time.base.BasePeriod org.joda.time.ReadableInstant )org.joda.time.Duration"[label="1"]
"org.joda.time.ReadableInstant"->"(static)org.joda.time.base.BasePeriod.toDurationTo(org.joda.time.base.BasePeriod org.joda.time.ReadableInstant )org.joda.time.Duration"[label="1"]
"org.joda.time.ReadableInstant"->"(static)org.joda.time.field.AbstractReadableInstantFieldProperty.getDifference(org.joda.time.field.AbstractReadableInstantFieldProperty org.joda.time.ReadableInstant )int"[label="1"]
"org.joda.time.ReadableInstant"->"(static)org.joda.time.field.AbstractReadableInstantFieldProperty.getDifferenceAsLong(org.joda.time.field.AbstractReadableInstantFieldProperty org.joda.time.ReadableInstant )long"[label="1"]
"org.joda.time.ReadableInstant"->"(static)org.joda.time.format.DateTimeFormatter.print(org.joda.time.format.DateTimeFormatter org.joda.time.ReadableInstant )java.lang.String"[label="1"]
"org.joda.time.ReadableInstant"->"org.joda.time.DateTimeUtils.getInstantChronology(org.joda.time.ReadableInstant )org.joda.time.Chronology"[label="1"]
"org.joda.time.ReadableInstant"->"org.joda.time.DateTimeUtils.getInstantMillis(org.joda.time.ReadableInstant )long"[label="1"]
"org.joda.time.ReadableInstant"->"org.joda.time.DateTimeUtils.getIntervalChronology(org.joda.time.ReadableInstant org.joda.time.ReadableInstant )org.joda.time.Chronology"[label="2"]
"org.joda.time.ReadableInstant"->"org.joda.time.Days.daysBetween(org.joda.time.ReadableInstant org.joda.time.ReadableInstant )org.joda.time.Days"[label="2"]
"org.joda.time.ReadableInstant"->"org.joda.time.Duration(org.joda.time.ReadableInstant org.joda.time.ReadableInstant )"[label="2"]
"org.joda.time.ReadableInstant"->"org.joda.time.Hours.hoursBetween(org.joda.time.ReadableInstant org.joda.time.ReadableInstant )org.joda.time.Hours"[label="2"]
"org.joda.time.ReadableInstant"->"org.joda.time.Interval(org.joda.time.ReadableDuration org.joda.time.ReadableInstant )"[label="1"]
"org.joda.time.ReadableInstant"->"org.joda.time.Interval(org.joda.time.ReadableInstant org.joda.time.ReadableDuration )"[label="1"]
"org.joda.time.ReadableInstant"->"org.joda.time.Interval(org.joda.time.ReadableInstant org.joda.time.ReadableInstant )"[label="2"]
"org.joda.time.ReadableInstant"->"org.joda.time.Interval(org.joda.time.ReadableInstant org.joda.time.ReadablePeriod )"[label="1"]
"org.joda.time.ReadableInstant"->"org.joda.time.Interval(org.joda.time.ReadablePeriod org.joda.time.ReadableInstant )"[label="1"]
"org.joda.time.ReadableInstant"->"org.joda.time.Minutes.minutesBetween(org.joda.time.ReadableInstant org.joda.time.ReadableInstant )org.joda.time.Minutes"[label="2"]
"org.joda.time.ReadableInstant"->"org.joda.time.Months.monthsBetween(org.joda.time.ReadableInstant org.joda.time.ReadableInstant )org.joda.time.Months"[label="2"]
"org.joda.time.ReadableInstant"->"org.joda.time.MutableInterval(org.joda.time.ReadableDuration org.joda.time.ReadableInstant )"[label="1"]
"org.joda.time.ReadableInstant"->"org.joda.time.MutableInterval(org.joda.time.ReadableInstant org.joda.time.ReadableDuration )"[label="1"]
"org.joda.time.ReadableInstant"->"org.joda.time.MutableInterval(org.joda.time.ReadableInstant org.joda.time.ReadableInstant )"[label="2"]
"org.joda.time.ReadableInstant"->"org.joda.time.MutableInterval(org.joda.time.ReadableInstant org.joda.time.ReadablePeriod )"[label="1"]
"org.joda.time.ReadableInstant"->"org.joda.time.MutableInterval(org.joda.time.ReadablePeriod org.joda.time.ReadableInstant )"[label="1"]
"org.joda.time.ReadableInstant"->"org.joda.time.MutablePeriod(org.joda.time.ReadableDuration org.joda.time.ReadableInstant )"[label="1"]
"org.joda.time.ReadableInstant"->"org.joda.time.MutablePeriod(org.joda.time.ReadableInstant org.joda.time.ReadableDuration )"[label="1"]
"org.joda.time.ReadableInstant"->"org.joda.time.MutablePeriod(org.joda.time.ReadableInstant org.joda.time.ReadableInstant )"[label="2"]
"org.joda.time.ReadableInstant"->"org.joda.time.Period(org.joda.time.ReadableDuration org.joda.time.ReadableInstant )"[label="1"]
"org.joda.time.ReadableInstant"->"org.joda.time.Period(org.joda.time.ReadableInstant org.joda.time.ReadableDuration )"[label="1"]
"org.joda.time.ReadableInstant"->"org.joda.time.Period(org.joda.time.ReadableInstant org.joda.time.ReadableInstant )"[label="2"]
"org.joda.time.ReadableInstant"->"org.joda.time.Seconds.secondsBetween(org.joda.time.ReadableInstant org.joda.time.ReadableInstant )org.joda.time.Seconds"[label="2"]
"org.joda.time.ReadableInstant"->"org.joda.time.Weeks.weeksBetween(org.joda.time.ReadableInstant org.joda.time.ReadableInstant )org.joda.time.Weeks"[label="2"]
"org.joda.time.ReadableInstant"->"org.joda.time.Years.yearsBetween(org.joda.time.ReadableInstant org.joda.time.ReadableInstant )org.joda.time.Years"[label="2"]
"org.joda.time.ReadableInstant"->"org.joda.time.chrono.GJChronology.getInstance(org.joda.time.DateTimeZone org.joda.time.ReadableInstant )org.joda.time.chrono.GJChronology"[label="1"]
"org.joda.time.ReadableInterval"->"(static)org.joda.time.Interval.abuts(org.joda.time.Interval org.joda.time.ReadableInterval )boolean"[label="1"]
"org.joda.time.ReadableInterval"->"(static)org.joda.time.Interval.gap(org.joda.time.Interval org.joda.time.ReadableInterval )org.joda.time.Interval"[label="1"]
"org.joda.time.ReadableInterval"->"(static)org.joda.time.Interval.overlap(org.joda.time.Interval org.joda.time.ReadableInterval )org.joda.time.Interval"[label="1"]
"org.joda.time.ReadableInterval"->"(static)org.joda.time.ReadableInterval.equals(org.joda.time.ReadableInterval java.lang.Object )boolean"[label="1"]
"org.joda.time.ReadableInterval"->"(static)org.joda.time.ReadableInterval.getChronology(org.joda.time.ReadableInterval )org.joda.time.Chronology"[label="1"]
"org.joda.time.ReadableInterval"->"(static)org.joda.time.ReadableInterval.getEnd(org.joda.time.ReadableInterval )org.joda.time.DateTime"[label="1"]
"org.joda.time.ReadableInterval"->"(static)org.joda.time.ReadableInterval.getEndMillis(org.joda.time.ReadableInterval )long"[label="1"]
"org.joda.time.ReadableInterval"->"(static)org.joda.time.ReadableInterval.getStart(org.joda.time.ReadableInterval )org.joda.time.DateTime"[label="1"]
"org.joda.time.ReadableInterval"->"(static)org.joda.time.ReadableInterval.getStartMillis(org.joda.time.ReadableInterval )long"[label="1"]
"org.joda.time.ReadableInterval"->"(static)org.joda.time.ReadableInterval.isAfter(org.joda.time.ReadableInterval org.joda.time.ReadableInstant )boolean"[label="1"]
"org.joda.time.ReadableInterval"->"(static)org.joda.time.ReadableInterval.isAfter(org.joda.time.ReadableInterval org.joda.time.ReadableInterval )boolean"[label="2"]
"org.joda.time.ReadableInterval"->"(static)org.joda.time.ReadableInterval.isBefore(org.joda.time.ReadableInterval org.joda.time.ReadableInstant )boolean"[label="1"]
"org.joda.time.ReadableInterval"->"(static)org.joda.time.ReadableInterval.isBefore(org.joda.time.ReadableInterval org.joda.time.ReadableInterval )boolean"[label="2"]
"org.joda.time.ReadableInterval"->"(static)org.joda.time.ReadableInterval.overlaps(org.joda.time.ReadableInterval org.joda.time.ReadableInterval )boolean"[label="2"]
"org.joda.time.ReadableInterval"->"(static)org.joda.time.ReadableInterval.toDuration(org.joda.time.ReadableInterval )org.joda.time.Duration"[label="1"]
"org.joda.time.ReadableInterval"->"(static)org.joda.time.ReadableInterval.toDurationMillis(org.joda.time.ReadableInterval )long"[label="1"]
"org.joda.time.ReadableInterval"->"(static)org.joda.time.ReadableInterval.toInterval(org.joda.time.ReadableInterval )org.joda.time.Interval"[label="1"]
"org.joda.time.ReadableInterval"->"(static)org.joda.time.ReadableInterval.toMutableInterval(org.joda.time.ReadableInterval )org.joda.time.MutableInterval"[label="1"]
"org.joda.time.ReadableInterval"->"(static)org.joda.time.ReadableInterval.toPeriod(org.joda.time.ReadableInterval )org.joda.time.Period"[label="1"]
"org.joda.time.ReadableInterval"->"(static)org.joda.time.ReadableInterval.toPeriod(org.joda.time.ReadableInterval org.joda.time.PeriodType )org.joda.time.Period"[label="1"]
"org.joda.time.ReadableInterval"->"(static)org.joda.time.base.AbstractInterval.isAfter(org.joda.time.base.AbstractInterval org.joda.time.ReadableInterval )boolean"[label="1"]
"org.joda.time.ReadableInterval"->"(static)org.joda.time.base.AbstractInterval.isBefore(org.joda.time.base.AbstractInterval org.joda.time.ReadableInterval )boolean"[label="1"]
"org.joda.time.ReadableInterval"->"(static)org.joda.time.base.AbstractInterval.isEqual(org.joda.time.base.AbstractInterval org.joda.time.ReadableInterval )boolean"[label="1"]
"org.joda.time.ReadableInterval"->"(static)org.joda.time.base.AbstractInterval.overlaps(org.joda.time.base.AbstractInterval org.joda.time.ReadableInterval )boolean"[label="1"]
"org.joda.time.ReadableInterval"->"org.joda.time.DateTimeUtils.getIntervalChronology(org.joda.time.ReadableInterval )org.joda.time.Chronology"[label="1"]
"org.joda.time.ReadableInterval"->"org.joda.time.DateTimeUtils.getReadableInterval(org.joda.time.ReadableInterval )org.joda.time.ReadableInterval"[label="1"]
"org.joda.time.ReadableInterval"->"org.joda.time.Days.daysIn(org.joda.time.ReadableInterval )org.joda.time.Days"[label="1"]
"org.joda.time.ReadableInterval"->"org.joda.time.Hours.hoursIn(org.joda.time.ReadableInterval )org.joda.time.Hours"[label="1"]
"org.joda.time.ReadableInterval"->"org.joda.time.Minutes.minutesIn(org.joda.time.ReadableInterval )org.joda.time.Minutes"[label="1"]
"org.joda.time.ReadableInterval"->"org.joda.time.Months.monthsIn(org.joda.time.ReadableInterval )org.joda.time.Months"[label="1"]
"org.joda.time.ReadableInterval"->"org.joda.time.Seconds.secondsIn(org.joda.time.ReadableInterval )org.joda.time.Seconds"[label="1"]
"org.joda.time.ReadableInterval"->"org.joda.time.Weeks.weeksIn(org.joda.time.ReadableInterval )org.joda.time.Weeks"[label="1"]
"org.joda.time.ReadableInterval"->"org.joda.time.Years.yearsIn(org.joda.time.ReadableInterval )org.joda.time.Years"[label="1"]
"org.joda.time.ReadablePartial"->"(static)org.joda.time.Chronology.get(org.joda.time.Chronology org.joda.time.ReadablePartial long )int[]"[label="1"]
"org.joda.time.ReadablePartial"->"(static)org.joda.time.Chronology.set(org.joda.time.Chronology org.joda.time.ReadablePartial long )long"[label="1"]
"org.joda.time.ReadablePartial"->"(static)org.joda.time.DateMidnight.withFields(org.joda.time.DateMidnight org.joda.time.ReadablePartial )org.joda.time.DateMidnight"[label="1"]
"org.joda.time.ReadablePartial"->"(static)org.joda.time.DateTime.withFields(org.joda.time.DateTime org.joda.time.ReadablePartial )org.joda.time.DateTime"[label="1"]
"org.joda.time.ReadablePartial"->"(static)org.joda.time.DateTimeField.getAsShortText(org.joda.time.DateTimeField org.joda.time.ReadablePartial java.util.Locale )java.lang.String"[label="1"]
"org.joda.time.ReadablePartial"->"(static)org.joda.time.DateTimeField.getAsText(org.joda.time.DateTimeField org.joda.time.ReadablePartial java.util.Locale )java.lang.String"[label="1"]
"org.joda.time.ReadablePartial"->"(static)org.joda.time.DateTimeField.getMaximumValue(org.joda.time.DateTimeField org.joda.time.ReadablePartial )int"[label="1"]
"org.joda.time.ReadablePartial"->"(static)org.joda.time.DateTimeField.getMaximumValue(org.joda.time.DateTimeField org.joda.time.ReadablePartial int[] )int"[label="1"]
"org.joda.time.ReadablePartial"->"(static)org.joda.time.DateTimeField.getMinimumValue(org.joda.time.DateTimeField org.joda.time.ReadablePartial )int"[label="1"]
"org.joda.time.ReadablePartial"->"(static)org.joda.time.DateTimeField.getMinimumValue(org.joda.time.DateTimeField org.joda.time.ReadablePartial int[] )int"[label="1"]
"org.joda.time.ReadablePartial"->"(static)org.joda.time.LocalDate.withFields(org.joda.time.LocalDate org.joda.time.ReadablePartial )org.joda.time.LocalDate"[label="1"]
"org.joda.time.ReadablePartial"->"(static)org.joda.time.LocalDateTime.withFields(org.joda.time.LocalDateTime org.joda.time.ReadablePartial )org.joda.time.LocalDateTime"[label="1"]
"org.joda.time.ReadablePartial"->"(static)org.joda.time.LocalTime.withFields(org.joda.time.LocalTime org.joda.time.ReadablePartial )org.joda.time.LocalTime"[label="1"]
"org.joda.time.ReadablePartial"->"(static)org.joda.time.Partial.isMatch(org.joda.time.Partial org.joda.time.ReadablePartial )boolean"[label="1"]
"org.joda.time.ReadablePartial"->"(static)org.joda.time.ReadablePartial.equals(org.joda.time.ReadablePartial java.lang.Object )boolean"[label="1"]
"org.joda.time.ReadablePartial"->"(static)org.joda.time.ReadablePartial.get(org.joda.time.ReadablePartial org.joda.time.DateTimeFieldType )int"[label="1"]
"org.joda.time.ReadablePartial"->"(static)org.joda.time.ReadablePartial.getChronology(org.joda.time.ReadablePartial )org.joda.time.Chronology"[label="1"]
"org.joda.time.ReadablePartial"->"(static)org.joda.time.ReadablePartial.getField(org.joda.time.ReadablePartial int )org.joda.time.DateTimeField"[label="1"]
"org.joda.time.ReadablePartial"->"(static)org.joda.time.ReadablePartial.getFieldType(org.joda.time.ReadablePartial int )org.joda.time.DateTimeFieldType"[label="1"]
"org.joda.time.ReadablePartial"->"(static)org.joda.time.ReadablePartial.getValue(org.joda.time.ReadablePartial int )int"[label="1"]
"org.joda.time.ReadablePartial"->"(static)org.joda.time.ReadablePartial.isSupported(org.joda.time.ReadablePartial org.joda.time.DateTimeFieldType )boolean"[label="1"]
"org.joda.time.ReadablePartial"->"(static)org.joda.time.ReadablePartial.size(org.joda.time.ReadablePartial )int"[label="1"]
"org.joda.time.ReadablePartial"->"(static)org.joda.time.ReadablePartial.toDateTime(org.joda.time.ReadablePartial org.joda.time.ReadableInstant )org.joda.time.DateTime"[label="1"]
"org.joda.time.ReadablePartial"->"(static)org.joda.time.base.AbstractPartial.isAfter(org.joda.time.base.AbstractPartial org.joda.time.ReadablePartial )boolean"[label="1"]
"org.joda.time.ReadablePartial"->"(static)org.joda.time.base.AbstractPartial.isBefore(org.joda.time.base.AbstractPartial org.joda.time.ReadablePartial )boolean"[label="1"]
"org.joda.time.ReadablePartial"->"(static)org.joda.time.base.AbstractPartial.isEqual(org.joda.time.base.AbstractPartial org.joda.time.ReadablePartial )boolean"[label="1"]
"org.joda.time.ReadablePartial"->"(static)org.joda.time.chrono.BaseChronology.get(org.joda.time.chrono.BaseChronology org.joda.time.ReadablePartial long )int[]"[label="1"]
"org.joda.time.ReadablePartial"->"(static)org.joda.time.chrono.BaseChronology.set(org.joda.time.chrono.BaseChronology org.joda.time.ReadablePartial long )long"[label="1"]
"org.joda.time.ReadablePartial"->"(static)org.joda.time.chrono.BasicDayOfMonthDateTimeField.getMaximumValue(org.joda.time.chrono.BasicDayOfMonthDateTimeField org.joda.time.ReadablePartial )int"[label="1"]
"org.joda.time.ReadablePartial"->"(static)org.joda.time.chrono.BasicDayOfMonthDateTimeField.getMaximumValue(org.joda.time.chrono.BasicDayOfMonthDateTimeField org.joda.time.ReadablePartial int[] )int"[label="1"]
"org.joda.time.ReadablePartial"->"(static)org.joda.time.chrono.BasicDayOfYearDateTimeField.getMaximumValue(org.joda.time.chrono.BasicDayOfYearDateTimeField org.joda.time.ReadablePartial )int"[label="1"]
"org.joda.time.ReadablePartial"->"(static)org.joda.time.chrono.BasicDayOfYearDateTimeField.getMaximumValue(org.joda.time.chrono.BasicDayOfYearDateTimeField org.joda.time.ReadablePartial int[] )int"[label="1"]
"org.joda.time.ReadablePartial"->"(static)org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField.getMaximumValue(org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField org.joda.time.ReadablePartial )int"[label="1"]
"org.joda.time.ReadablePartial"->"(static)org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField.getMaximumValue(org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField org.joda.time.ReadablePartial int[] )int"[label="1"]
"org.joda.time.ReadablePartial"->"(static)org.joda.time.chrono.GJChronology$CutoverField.getMaximumValue(org.joda.time.chrono.GJChronology$CutoverField org.joda.time.ReadablePartial )int"[label="1"]
"org.joda.time.ReadablePartial"->"(static)org.joda.time.chrono.GJChronology$CutoverField.getMaximumValue(org.joda.time.chrono.GJChronology$CutoverField org.joda.time.ReadablePartial int[] )int"[label="1"]
"org.joda.time.ReadablePartial"->"(static)org.joda.time.chrono.GJChronology$CutoverField.getMinimumValue(org.joda.time.chrono.GJChronology$CutoverField org.joda.time.ReadablePartial )int"[label="1"]
"org.joda.time.ReadablePartial"->"(static)org.joda.time.chrono.GJChronology$CutoverField.getMinimumValue(org.joda.time.chrono.GJChronology$CutoverField org.joda.time.ReadablePartial int[] )int"[label="1"]
"org.joda.time.ReadablePartial"->"(static)org.joda.time.chrono.ZonedChronology$ZonedDateTimeField.getMaximumValue(org.joda.time.chrono.ZonedChronology$ZonedDateTimeField org.joda.time.ReadablePartial )int"[label="1"]
"org.joda.time.ReadablePartial"->"(static)org.joda.time.chrono.ZonedChronology$ZonedDateTimeField.getMaximumValue(org.joda.time.chrono.ZonedChronology$ZonedDateTimeField org.joda.time.ReadablePartial int[] )int"[label="1"]
"org.joda.time.ReadablePartial"->"(static)org.joda.time.chrono.ZonedChronology$ZonedDateTimeField.getMinimumValue(org.joda.time.chrono.ZonedChronology$ZonedDateTimeField org.joda.time.ReadablePartial )int"[label="1"]
"org.joda.time.ReadablePartial"->"(static)org.joda.time.chrono.ZonedChronology$ZonedDateTimeField.getMinimumValue(org.joda.time.chrono.ZonedChronology$ZonedDateTimeField org.joda.time.ReadablePartial int[] )int"[label="1"]
"org.joda.time.ReadablePartial"->"(static)org.joda.time.field.BaseDateTimeField.getAsShortText(org.joda.time.field.BaseDateTimeField org.joda.time.ReadablePartial java.util.Locale )java.lang.String"[label="1"]
"org.joda.time.ReadablePartial"->"(static)org.joda.time.field.BaseDateTimeField.getAsText(org.joda.time.field.BaseDateTimeField org.joda.time.ReadablePartial java.util.Locale )java.lang.String"[label="1"]
"org.joda.time.ReadablePartial"->"(static)org.joda.time.field.BaseDateTimeField.getMaximumValue(org.joda.time.field.BaseDateTimeField org.joda.time.ReadablePartial )int"[label="1"]
"org.joda.time.ReadablePartial"->"(static)org.joda.time.field.BaseDateTimeField.getMaximumValue(org.joda.time.field.BaseDateTimeField org.joda.time.ReadablePartial int[] )int"[label="1"]
"org.joda.time.ReadablePartial"->"(static)org.joda.time.field.BaseDateTimeField.getMinimumValue(org.joda.time.field.BaseDateTimeField org.joda.time.ReadablePartial )int"[label="1"]
"org.joda.time.ReadablePartial"->"(static)org.joda.time.field.BaseDateTimeField.getMinimumValue(org.joda.time.field.BaseDateTimeField org.joda.time.ReadablePartial int[] )int"[label="1"]
"org.joda.time.ReadablePartial"->"(static)org.joda.time.field.DelegatedDateTimeField.getAsShortText(org.joda.time.field.DelegatedDateTimeField org.joda.time.ReadablePartial java.util.Locale )java.lang.String"[label="1"]
"org.joda.time.ReadablePartial"->"(static)org.joda.time.field.DelegatedDateTimeField.getAsText(org.joda.time.field.DelegatedDateTimeField org.joda.time.ReadablePartial java.util.Locale )java.lang.String"[label="1"]
"org.joda.time.ReadablePartial"->"(static)org.joda.time.field.DelegatedDateTimeField.getMaximumValue(org.joda.time.field.DelegatedDateTimeField org.joda.time.ReadablePartial )int"[label="1"]
"org.joda.time.ReadablePartial"->"(static)org.joda.time.field.DelegatedDateTimeField.getMaximumValue(org.joda.time.field.DelegatedDateTimeField org.joda.time.ReadablePartial int[] )int"[label="1"]
"org.joda.time.ReadablePartial"->"(static)org.joda.time.field.DelegatedDateTimeField.getMinimumValue(org.joda.time.field.DelegatedDateTimeField org.joda.time.ReadablePartial )int"[label="1"]
"org.joda.time.ReadablePartial"->"(static)org.joda.time.field.DelegatedDateTimeField.getMinimumValue(org.joda.time.field.DelegatedDateTimeField org.joda.time.ReadablePartial int[] )int"[label="1"]
"org.joda.time.ReadablePartial"->"(static)org.joda.time.field.UnsupportedDateTimeField.getAsShortText(org.joda.time.field.UnsupportedDateTimeField org.joda.time.ReadablePartial java.util.Locale )java.lang.String"[label="1"]
"org.joda.time.ReadablePartial"->"(static)org.joda.time.field.UnsupportedDateTimeField.getAsText(org.joda.time.field.UnsupportedDateTimeField org.joda.time.ReadablePartial java.util.Locale )java.lang.String"[label="1"]
"org.joda.time.ReadablePartial"->"(static)org.joda.time.field.UnsupportedDateTimeField.getMaximumValue(org.joda.time.field.UnsupportedDateTimeField org.joda.time.ReadablePartial )int"[label="1"]
"org.joda.time.ReadablePartial"->"(static)org.joda.time.field.UnsupportedDateTimeField.getMaximumValue(org.joda.time.field.UnsupportedDateTimeField org.joda.time.ReadablePartial int[] )int"[label="1"]
"org.joda.time.ReadablePartial"->"(static)org.joda.time.field.UnsupportedDateTimeField.getMinimumValue(org.joda.time.field.UnsupportedDateTimeField org.joda.time.ReadablePartial )int"[label="1"]
"org.joda.time.ReadablePartial"->"(static)org.joda.time.field.UnsupportedDateTimeField.getMinimumValue(org.joda.time.field.UnsupportedDateTimeField org.joda.time.ReadablePartial int[] )int"[label="1"]
"org.joda.time.ReadablePartial"->"(static)org.joda.time.field.ZeroIsMaxDateTimeField.getMaximumValue(org.joda.time.field.ZeroIsMaxDateTimeField org.joda.time.ReadablePartial )int"[label="1"]
"org.joda.time.ReadablePartial"->"(static)org.joda.time.field.ZeroIsMaxDateTimeField.getMaximumValue(org.joda.time.field.ZeroIsMaxDateTimeField org.joda.time.ReadablePartial int[] )int"[label="1"]
"org.joda.time.ReadablePartial"->"(static)org.joda.time.field.ZeroIsMaxDateTimeField.getMinimumValue(org.joda.time.field.ZeroIsMaxDateTimeField org.joda.time.ReadablePartial )int"[label="1"]
"org.joda.time.ReadablePartial"->"(static)org.joda.time.field.ZeroIsMaxDateTimeField.getMinimumValue(org.joda.time.field.ZeroIsMaxDateTimeField org.joda.time.ReadablePartial int[] )int"[label="1"]
"org.joda.time.ReadablePartial"->"(static)org.joda.time.format.DateTimeFormatter.print(org.joda.time.format.DateTimeFormatter org.joda.time.ReadablePartial )java.lang.String"[label="1"]
"org.joda.time.ReadablePartial"->"org.joda.time.DateTimeUtils.isContiguous(org.joda.time.ReadablePartial )boolean"[label="1"]
"org.joda.time.ReadablePartial"->"org.joda.time.Days.daysBetween(org.joda.time.ReadablePartial org.joda.time.ReadablePartial )org.joda.time.Days"[label="2"]
"org.joda.time.ReadablePartial"->"org.joda.time.Hours.hoursBetween(org.joda.time.ReadablePartial org.joda.time.ReadablePartial )org.joda.time.Hours"[label="2"]
"org.joda.time.ReadablePartial"->"org.joda.time.Minutes.minutesBetween(org.joda.time.ReadablePartial org.joda.time.ReadablePartial )org.joda.time.Minutes"[label="2"]
"org.joda.time.ReadablePartial"->"org.joda.time.Months.monthsBetween(org.joda.time.ReadablePartial org.joda.time.ReadablePartial )org.joda.time.Months"[label="2"]
"org.joda.time.ReadablePartial"->"org.joda.time.Partial(org.joda.time.ReadablePartial )"[label="1"]
"org.joda.time.ReadablePartial"->"org.joda.time.Period(org.joda.time.ReadablePartial org.joda.time.ReadablePartial )"[label="2"]
"org.joda.time.ReadablePartial"->"org.joda.time.Period.fieldDifference(org.joda.time.ReadablePartial org.joda.time.ReadablePartial )org.joda.time.Period"[label="2"]
"org.joda.time.ReadablePartial"->"org.joda.time.Seconds.secondsBetween(org.joda.time.ReadablePartial org.joda.time.ReadablePartial )org.joda.time.Seconds"[label="2"]
"org.joda.time.ReadablePartial"->"org.joda.time.Weeks.weeksBetween(org.joda.time.ReadablePartial org.joda.time.ReadablePartial )org.joda.time.Weeks"[label="2"]
"org.joda.time.ReadablePartial"->"org.joda.time.Years.yearsBetween(org.joda.time.ReadablePartial org.joda.time.ReadablePartial )org.joda.time.Years"[label="2"]
"org.joda.time.ReadablePeriod"->"(static)org.joda.time.Chronology.get(org.joda.time.Chronology org.joda.time.ReadablePeriod long )int[]"[label="1"]
"org.joda.time.ReadablePeriod"->"(static)org.joda.time.DateMidnight.minus(org.joda.time.DateMidnight org.joda.time.ReadablePeriod )org.joda.time.DateMidnight"[label="1"]
"org.joda.time.ReadablePeriod"->"(static)org.joda.time.DateMidnight.plus(org.joda.time.DateMidnight org.joda.time.ReadablePeriod )org.joda.time.DateMidnight"[label="1"]
"org.joda.time.ReadablePeriod"->"(static)org.joda.time.DateMidnight.withPeriodAdded(org.joda.time.DateMidnight org.joda.time.ReadablePeriod int )org.joda.time.DateMidnight"[label="1"]
"org.joda.time.ReadablePeriod"->"(static)org.joda.time.DateTime.minus(org.joda.time.DateTime org.joda.time.ReadablePeriod )org.joda.time.DateTime"[label="1"]
"org.joda.time.ReadablePeriod"->"(static)org.joda.time.DateTime.plus(org.joda.time.DateTime org.joda.time.ReadablePeriod )org.joda.time.DateTime"[label="1"]
"org.joda.time.ReadablePeriod"->"(static)org.joda.time.DateTime.withPeriodAdded(org.joda.time.DateTime org.joda.time.ReadablePeriod int )org.joda.time.DateTime"[label="1"]
"org.joda.time.ReadablePeriod"->"(static)org.joda.time.Interval.withPeriodAfterStart(org.joda.time.Interval org.joda.time.ReadablePeriod )org.joda.time.Interval"[label="1"]
"org.joda.time.ReadablePeriod"->"(static)org.joda.time.Interval.withPeriodBeforeEnd(org.joda.time.Interval org.joda.time.ReadablePeriod )org.joda.time.Interval"[label="1"]
"org.joda.time.ReadablePeriod"->"(static)org.joda.time.LocalDate.minus(org.joda.time.LocalDate org.joda.time.ReadablePeriod )org.joda.time.LocalDate"[label="1"]
"org.joda.time.ReadablePeriod"->"(static)org.joda.time.LocalDate.plus(org.joda.time.LocalDate org.joda.time.ReadablePeriod )org.joda.time.LocalDate"[label="1"]
"org.joda.time.ReadablePeriod"->"(static)org.joda.time.LocalDate.withPeriodAdded(org.joda.time.LocalDate org.joda.time.ReadablePeriod int )org.joda.time.LocalDate"[label="1"]
"org.joda.time.ReadablePeriod"->"(static)org.joda.time.LocalDateTime.minus(org.joda.time.LocalDateTime org.joda.time.ReadablePeriod )org.joda.time.LocalDateTime"[label="1"]
"org.joda.time.ReadablePeriod"->"(static)org.joda.time.LocalDateTime.plus(org.joda.time.LocalDateTime org.joda.time.ReadablePeriod )org.joda.time.LocalDateTime"[label="1"]
"org.joda.time.ReadablePeriod"->"(static)org.joda.time.LocalDateTime.withPeriodAdded(org.joda.time.LocalDateTime org.joda.time.ReadablePeriod int )org.joda.time.LocalDateTime"[label="1"]
"org.joda.time.ReadablePeriod"->"(static)org.joda.time.LocalTime.minus(org.joda.time.LocalTime org.joda.time.ReadablePeriod )org.joda.time.LocalTime"[label="1"]
"org.joda.time.ReadablePeriod"->"(static)org.joda.time.LocalTime.plus(org.joda.time.LocalTime org.joda.time.ReadablePeriod )org.joda.time.LocalTime"[label="1"]
"org.joda.time.ReadablePeriod"->"(static)org.joda.time.LocalTime.withPeriodAdded(org.joda.time.LocalTime org.joda.time.ReadablePeriod int )org.joda.time.LocalTime"[label="1"]
"org.joda.time.ReadablePeriod"->"(static)org.joda.time.MonthDay.minus(org.joda.time.MonthDay org.joda.time.ReadablePeriod )org.joda.time.MonthDay"[label="1"]
"org.joda.time.ReadablePeriod"->"(static)org.joda.time.MonthDay.plus(org.joda.time.MonthDay org.joda.time.ReadablePeriod )org.joda.time.MonthDay"[label="1"]
"org.joda.time.ReadablePeriod"->"(static)org.joda.time.MonthDay.withPeriodAdded(org.joda.time.MonthDay org.joda.time.ReadablePeriod int )org.joda.time.MonthDay"[label="1"]
"org.joda.time.ReadablePeriod"->"(static)org.joda.time.Partial.minus(org.joda.time.Partial org.joda.time.ReadablePeriod )org.joda.time.Partial"[label="1"]
"org.joda.time.ReadablePeriod"->"(static)org.joda.time.Partial.plus(org.joda.time.Partial org.joda.time.ReadablePeriod )org.joda.time.Partial"[label="1"]
"org.joda.time.ReadablePeriod"->"(static)org.joda.time.Partial.withPeriodAdded(org.joda.time.Partial org.joda.time.ReadablePeriod int )org.joda.time.Partial"[label="1"]
"org.joda.time.ReadablePeriod"->"(static)org.joda.time.Period.minus(org.joda.time.Period org.joda.time.ReadablePeriod )org.joda.time.Period"[label="1"]
"org.joda.time.ReadablePeriod"->"(static)org.joda.time.Period.plus(org.joda.time.Period org.joda.time.ReadablePeriod )org.joda.time.Period"[label="1"]
"org.joda.time.ReadablePeriod"->"(static)org.joda.time.Period.withFields(org.joda.time.Period org.joda.time.ReadablePeriod )org.joda.time.Period"[label="1"]
"org.joda.time.ReadablePeriod"->"(static)org.joda.time.ReadablePeriod.equals(org.joda.time.ReadablePeriod java.lang.Object )boolean"[label="1"]
"org.joda.time.ReadablePeriod"->"(static)org.joda.time.ReadablePeriod.get(org.joda.time.ReadablePeriod org.joda.time.DurationFieldType )int"[label="1"]
"org.joda.time.ReadablePeriod"->"(static)org.joda.time.ReadablePeriod.getFieldType(org.joda.time.ReadablePeriod int )org.joda.time.DurationFieldType"[label="1"]
"org.joda.time.ReadablePeriod"->"(static)org.joda.time.ReadablePeriod.getPeriodType(org.joda.time.ReadablePeriod )org.joda.time.PeriodType"[label="1"]
"org.joda.time.ReadablePeriod"->"(static)org.joda.time.ReadablePeriod.getValue(org.joda.time.ReadablePeriod int )int"[label="1"]
"org.joda.time.ReadablePeriod"->"(static)org.joda.time.ReadablePeriod.isSupported(org.joda.time.ReadablePeriod org.joda.time.DurationFieldType )boolean"[label="1"]
"org.joda.time.ReadablePeriod"->"(static)org.joda.time.ReadablePeriod.size(org.joda.time.ReadablePeriod )int"[label="1"]
"org.joda.time.ReadablePeriod"->"(static)org.joda.time.ReadablePeriod.toMutablePeriod(org.joda.time.ReadablePeriod )org.joda.time.MutablePeriod"[label="1"]
"org.joda.time.ReadablePeriod"->"(static)org.joda.time.ReadablePeriod.toPeriod(org.joda.time.ReadablePeriod )org.joda.time.Period"[label="1"]
"org.joda.time.ReadablePeriod"->"(static)org.joda.time.TimeOfDay.minus(org.joda.time.TimeOfDay org.joda.time.ReadablePeriod )org.joda.time.TimeOfDay"[label="1"]
"org.joda.time.ReadablePeriod"->"(static)org.joda.time.TimeOfDay.plus(org.joda.time.TimeOfDay org.joda.time.ReadablePeriod )org.joda.time.TimeOfDay"[label="1"]
"org.joda.time.ReadablePeriod"->"(static)org.joda.time.TimeOfDay.withPeriodAdded(org.joda.time.TimeOfDay org.joda.time.ReadablePeriod int )org.joda.time.TimeOfDay"[label="1"]
"org.joda.time.ReadablePeriod"->"(static)org.joda.time.YearMonth.minus(org.joda.time.YearMonth org.joda.time.ReadablePeriod )org.joda.time.YearMonth"[label="1"]
"org.joda.time.ReadablePeriod"->"(static)org.joda.time.YearMonth.plus(org.joda.time.YearMonth org.joda.time.ReadablePeriod )org.joda.time.YearMonth"[label="1"]
"org.joda.time.ReadablePeriod"->"(static)org.joda.time.YearMonth.withPeriodAdded(org.joda.time.YearMonth org.joda.time.ReadablePeriod int )org.joda.time.YearMonth"[label="1"]
"org.joda.time.ReadablePeriod"->"(static)org.joda.time.YearMonthDay.minus(org.joda.time.YearMonthDay org.joda.time.ReadablePeriod )org.joda.time.YearMonthDay"[label="1"]
"org.joda.time.ReadablePeriod"->"(static)org.joda.time.YearMonthDay.plus(org.joda.time.YearMonthDay org.joda.time.ReadablePeriod )org.joda.time.YearMonthDay"[label="1"]
"org.joda.time.ReadablePeriod"->"(static)org.joda.time.YearMonthDay.withPeriodAdded(org.joda.time.YearMonthDay org.joda.time.ReadablePeriod int )org.joda.time.YearMonthDay"[label="1"]
"org.joda.time.ReadablePeriod"->"(static)org.joda.time.chrono.BaseChronology.get(org.joda.time.chrono.BaseChronology org.joda.time.ReadablePeriod long )int[]"[label="1"]
"org.joda.time.ReadablePeriod"->"(static)org.joda.time.format.PeriodFormat$DynamicWordBased.calculatePrintedLength(org.joda.time.format.PeriodFormat$DynamicWordBased org.joda.time.ReadablePeriod java.util.Locale )int"[label="1"]
"org.joda.time.ReadablePeriod"->"(static)org.joda.time.format.PeriodFormatter.print(org.joda.time.format.PeriodFormatter org.joda.time.ReadablePeriod )java.lang.String"[label="1"]
"org.joda.time.ReadablePeriod"->"(static)org.joda.time.format.PeriodFormatterBuilder$Composite.calculatePrintedLength(org.joda.time.format.PeriodFormatterBuilder$Composite org.joda.time.ReadablePeriod java.util.Locale )int"[label="1"]
"org.joda.time.ReadablePeriod"->"(static)org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.calculatePrintedLength(org.joda.time.format.PeriodFormatterBuilder$FieldFormatter org.joda.time.ReadablePeriod java.util.Locale )int"[label="1"]
"org.joda.time.ReadablePeriod"->"(static)org.joda.time.format.PeriodFormatterBuilder$Literal.calculatePrintedLength(org.joda.time.format.PeriodFormatterBuilder$Literal org.joda.time.ReadablePeriod java.util.Locale )int"[label="1"]
"org.joda.time.ReadablePeriod"->"(static)org.joda.time.format.PeriodFormatterBuilder$Separator.calculatePrintedLength(org.joda.time.format.PeriodFormatterBuilder$Separator org.joda.time.ReadablePeriod java.util.Locale )int"[label="1"]
"org.joda.time.ReadablePeriod"->"(static)org.joda.time.format.PeriodPrinter.calculatePrintedLength(org.joda.time.format.PeriodPrinter org.joda.time.ReadablePeriod java.util.Locale )int"[label="1"]
"org.joda.time.ReadablePeriod"->"org.joda.time.Days.standardDaysIn(org.joda.time.ReadablePeriod )org.joda.time.Days"[label="1"]
"org.joda.time.ReadablePeriod"->"org.joda.time.Hours.standardHoursIn(org.joda.time.ReadablePeriod )org.joda.time.Hours"[label="1"]
"org.joda.time.ReadablePeriod"->"org.joda.time.Interval(org.joda.time.ReadableInstant org.joda.time.ReadablePeriod )"[label="1"]
"org.joda.time.ReadablePeriod"->"org.joda.time.Interval(org.joda.time.ReadablePeriod org.joda.time.ReadableInstant )"[label="1"]
"org.joda.time.ReadablePeriod"->"org.joda.time.Minutes.standardMinutesIn(org.joda.time.ReadablePeriod )org.joda.time.Minutes"[label="1"]
"org.joda.time.ReadablePeriod"->"org.joda.time.MutableInterval(org.joda.time.ReadableInstant org.joda.time.ReadablePeriod )"[label="1"]
"org.joda.time.ReadablePeriod"->"org.joda.time.MutableInterval(org.joda.time.ReadablePeriod org.joda.time.ReadableInstant )"[label="1"]
"org.joda.time.ReadablePeriod"->"org.joda.time.Seconds.standardSecondsIn(org.joda.time.ReadablePeriod )org.joda.time.Seconds"[label="1"]
"org.joda.time.ReadablePeriod"->"org.joda.time.Weeks.standardWeeksIn(org.joda.time.ReadablePeriod )org.joda.time.Weeks"[label="1"]
"org.joda.time.Seconds"->"(static)org.joda.time.Seconds.dividedBy(org.joda.time.Seconds int )org.joda.time.Seconds"[label="1"]
"org.joda.time.Seconds"->"(static)org.joda.time.Seconds.getFieldType(org.joda.time.Seconds )org.joda.time.DurationFieldType"[label="1"]
"org.joda.time.Seconds"->"(static)org.joda.time.Seconds.getPeriodType(org.joda.time.Seconds )org.joda.time.PeriodType"[label="1"]
"org.joda.time.Seconds"->"(static)org.joda.time.Seconds.getSeconds(org.joda.time.Seconds )int"[label="1"]
"org.joda.time.Seconds"->"(static)org.joda.time.Seconds.isGreaterThan(org.joda.time.Seconds org.joda.time.Seconds )boolean"[label="2"]
"org.joda.time.Seconds"->"(static)org.joda.time.Seconds.isLessThan(org.joda.time.Seconds org.joda.time.Seconds )boolean"[label="2"]
"org.joda.time.Seconds"->"(static)org.joda.time.Seconds.minus(org.joda.time.Seconds int )org.joda.time.Seconds"[label="1"]
"org.joda.time.Seconds"->"(static)org.joda.time.Seconds.minus(org.joda.time.Seconds org.joda.time.Seconds )org.joda.time.Seconds"[label="2"]
"org.joda.time.Seconds"->"(static)org.joda.time.Seconds.multipliedBy(org.joda.time.Seconds int )org.joda.time.Seconds"[label="1"]
"org.joda.time.Seconds"->"(static)org.joda.time.Seconds.negated(org.joda.time.Seconds )org.joda.time.Seconds"[label="1"]
"org.joda.time.Seconds"->"(static)org.joda.time.Seconds.plus(org.joda.time.Seconds int )org.joda.time.Seconds"[label="1"]
"org.joda.time.Seconds"->"(static)org.joda.time.Seconds.plus(org.joda.time.Seconds org.joda.time.Seconds )org.joda.time.Seconds"[label="2"]
"org.joda.time.Seconds"->"(static)org.joda.time.Seconds.toStandardDays(org.joda.time.Seconds )org.joda.time.Days"[label="1"]
"org.joda.time.Seconds"->"(static)org.joda.time.Seconds.toStandardDuration(org.joda.time.Seconds )org.joda.time.Duration"[label="1"]
"org.joda.time.Seconds"->"(static)org.joda.time.Seconds.toStandardHours(org.joda.time.Seconds )org.joda.time.Hours"[label="1"]
"org.joda.time.Seconds"->"(static)org.joda.time.Seconds.toStandardMinutes(org.joda.time.Seconds )org.joda.time.Minutes"[label="1"]
"org.joda.time.Seconds"->"(static)org.joda.time.Seconds.toStandardWeeks(org.joda.time.Seconds )org.joda.time.Weeks"[label="1"]
"org.joda.time.TimeOfDay"->"(static)org.joda.time.TimeOfDay.getFieldType(org.joda.time.TimeOfDay int )org.joda.time.DateTimeFieldType"[label="1"]
"org.joda.time.TimeOfDay"->"(static)org.joda.time.TimeOfDay.getFieldTypes(org.joda.time.TimeOfDay )org.joda.time.DateTimeFieldType[]"[label="1"]
"org.joda.time.TimeOfDay"->"(static)org.joda.time.TimeOfDay.getHourOfDay(org.joda.time.TimeOfDay )int"[label="1"]
"org.joda.time.TimeOfDay"->"(static)org.joda.time.TimeOfDay.getMillisOfSecond(org.joda.time.TimeOfDay )int"[label="1"]
"org.joda.time.TimeOfDay"->"(static)org.joda.time.TimeOfDay.getMinuteOfHour(org.joda.time.TimeOfDay )int"[label="1"]
"org.joda.time.TimeOfDay"->"(static)org.joda.time.TimeOfDay.getSecondOfMinute(org.joda.time.TimeOfDay )int"[label="1"]
"org.joda.time.TimeOfDay"->"(static)org.joda.time.TimeOfDay.hourOfDay(org.joda.time.TimeOfDay )org.joda.time.TimeOfDay$Property"[label="1"]
"org.joda.time.TimeOfDay"->"(static)org.joda.time.TimeOfDay.millisOfSecond(org.joda.time.TimeOfDay )org.joda.time.TimeOfDay$Property"[label="1"]
"org.joda.time.TimeOfDay"->"(static)org.joda.time.TimeOfDay.minus(org.joda.time.TimeOfDay org.joda.time.ReadablePeriod )org.joda.time.TimeOfDay"[label="1"]
"org.joda.time.TimeOfDay"->"(static)org.joda.time.TimeOfDay.minusHours(org.joda.time.TimeOfDay int )org.joda.time.TimeOfDay"[label="1"]
"org.joda.time.TimeOfDay"->"(static)org.joda.time.TimeOfDay.minusMillis(org.joda.time.TimeOfDay int )org.joda.time.TimeOfDay"[label="1"]
"org.joda.time.TimeOfDay"->"(static)org.joda.time.TimeOfDay.minusMinutes(org.joda.time.TimeOfDay int )org.joda.time.TimeOfDay"[label="1"]
"org.joda.time.TimeOfDay"->"(static)org.joda.time.TimeOfDay.minusSeconds(org.joda.time.TimeOfDay int )org.joda.time.TimeOfDay"[label="1"]
"org.joda.time.TimeOfDay"->"(static)org.joda.time.TimeOfDay.minuteOfHour(org.joda.time.TimeOfDay )org.joda.time.TimeOfDay$Property"[label="1"]
"org.joda.time.TimeOfDay"->"(static)org.joda.time.TimeOfDay.plus(org.joda.time.TimeOfDay org.joda.time.ReadablePeriod )org.joda.time.TimeOfDay"[label="1"]
"org.joda.time.TimeOfDay"->"(static)org.joda.time.TimeOfDay.plusHours(org.joda.time.TimeOfDay int )org.joda.time.TimeOfDay"[label="1"]
"org.joda.time.TimeOfDay"->"(static)org.joda.time.TimeOfDay.plusMillis(org.joda.time.TimeOfDay int )org.joda.time.TimeOfDay"[label="1"]
"org.joda.time.TimeOfDay"->"(static)org.joda.time.TimeOfDay.plusMinutes(org.joda.time.TimeOfDay int )org.joda.time.TimeOfDay"[label="1"]
"org.joda.time.TimeOfDay"->"(static)org.joda.time.TimeOfDay.plusSeconds(org.joda.time.TimeOfDay int )org.joda.time.TimeOfDay"[label="1"]
"org.joda.time.TimeOfDay"->"(static)org.joda.time.TimeOfDay.property(org.joda.time.TimeOfDay org.joda.time.DateTimeFieldType )org.joda.time.TimeOfDay$Property"[label="1"]
"org.joda.time.TimeOfDay"->"(static)org.joda.time.TimeOfDay.secondOfMinute(org.joda.time.TimeOfDay )org.joda.time.TimeOfDay$Property"[label="1"]
"org.joda.time.TimeOfDay"->"(static)org.joda.time.TimeOfDay.size(org.joda.time.TimeOfDay )int"[label="1"]
"org.joda.time.TimeOfDay"->"(static)org.joda.time.TimeOfDay.toDateTimeToday(org.joda.time.TimeOfDay )org.joda.time.DateTime"[label="1"]
"org.joda.time.TimeOfDay"->"(static)org.joda.time.TimeOfDay.toDateTimeToday(org.joda.time.TimeOfDay org.joda.time.DateTimeZone )org.joda.time.DateTime"[label="1"]
"org.joda.time.TimeOfDay"->"(static)org.joda.time.TimeOfDay.toLocalTime(org.joda.time.TimeOfDay )org.joda.time.LocalTime"[label="1"]
"org.joda.time.TimeOfDay"->"(static)org.joda.time.TimeOfDay.withChronologyRetainFields(org.joda.time.TimeOfDay org.joda.time.Chronology )org.joda.time.TimeOfDay"[label="1"]
"org.joda.time.TimeOfDay"->"(static)org.joda.time.TimeOfDay.withField(org.joda.time.TimeOfDay org.joda.time.DateTimeFieldType int )org.joda.time.TimeOfDay"[label="1"]
"org.joda.time.TimeOfDay"->"(static)org.joda.time.TimeOfDay.withFieldAdded(org.joda.time.TimeOfDay org.joda.time.DurationFieldType int )org.joda.time.TimeOfDay"[label="1"]
"org.joda.time.TimeOfDay"->"(static)org.joda.time.TimeOfDay.withHourOfDay(org.joda.time.TimeOfDay int )org.joda.time.TimeOfDay"[label="1"]
"org.joda.time.TimeOfDay"->"(static)org.joda.time.TimeOfDay.withMillisOfSecond(org.joda.time.TimeOfDay int )org.joda.time.TimeOfDay"[label="1"]
"org.joda.time.TimeOfDay"->"(static)org.joda.time.TimeOfDay.withMinuteOfHour(org.joda.time.TimeOfDay int )org.joda.time.TimeOfDay"[label="1"]
"org.joda.time.TimeOfDay"->"(static)org.joda.time.TimeOfDay.withPeriodAdded(org.joda.time.TimeOfDay org.joda.time.ReadablePeriod int )org.joda.time.TimeOfDay"[label="1"]
"org.joda.time.TimeOfDay"->"(static)org.joda.time.TimeOfDay.withSecondOfMinute(org.joda.time.TimeOfDay int )org.joda.time.TimeOfDay"[label="1"]
"org.joda.time.TimeOfDay"->"(static)org.joda.time.YearMonthDay.toDateTime(org.joda.time.YearMonthDay org.joda.time.TimeOfDay )org.joda.time.DateTime"[label="1"]
"org.joda.time.TimeOfDay"->"(static)org.joda.time.YearMonthDay.toDateTime(org.joda.time.YearMonthDay org.joda.time.TimeOfDay org.joda.time.DateTimeZone )org.joda.time.DateTime"[label="1"]
"org.joda.time.TimeOfDay"->"org.joda.time.TimeOfDayIsPolymorphicToorg.joda.time.ReadablePartial"[label="1"]
"org.joda.time.TimeOfDay$Property"->"(static)org.joda.time.TimeOfDay$Property.addNoWrapToCopy(org.joda.time.TimeOfDay$Property int )org.joda.time.TimeOfDay"[label="1"]
"org.joda.time.TimeOfDay$Property"->"(static)org.joda.time.TimeOfDay$Property.addToCopy(org.joda.time.TimeOfDay$Property int )org.joda.time.TimeOfDay"[label="1"]
"org.joda.time.TimeOfDay$Property"->"(static)org.joda.time.TimeOfDay$Property.addWrapFieldToCopy(org.joda.time.TimeOfDay$Property int )org.joda.time.TimeOfDay"[label="1"]
"org.joda.time.TimeOfDay$Property"->"(static)org.joda.time.TimeOfDay$Property.get(org.joda.time.TimeOfDay$Property )int"[label="1"]
"org.joda.time.TimeOfDay$Property"->"(static)org.joda.time.TimeOfDay$Property.getField(org.joda.time.TimeOfDay$Property )org.joda.time.DateTimeField"[label="1"]
"org.joda.time.TimeOfDay$Property"->"(static)org.joda.time.TimeOfDay$Property.getTimeOfDay(org.joda.time.TimeOfDay$Property )org.joda.time.TimeOfDay"[label="1"]
"org.joda.time.TimeOfDay$Property"->"(static)org.joda.time.TimeOfDay$Property.setCopy(org.joda.time.TimeOfDay$Property int )org.joda.time.TimeOfDay"[label="1"]
"org.joda.time.TimeOfDay$Property"->"(static)org.joda.time.TimeOfDay$Property.setCopy(org.joda.time.TimeOfDay$Property java.lang.String )org.joda.time.TimeOfDay"[label="1"]
"org.joda.time.TimeOfDay$Property"->"(static)org.joda.time.TimeOfDay$Property.setCopy(org.joda.time.TimeOfDay$Property java.lang.String java.util.Locale )org.joda.time.TimeOfDay"[label="1"]
"org.joda.time.TimeOfDay$Property"->"(static)org.joda.time.TimeOfDay$Property.withMaximumValue(org.joda.time.TimeOfDay$Property )org.joda.time.TimeOfDay"[label="1"]
"org.joda.time.TimeOfDay$Property"->"(static)org.joda.time.TimeOfDay$Property.withMinimumValue(org.joda.time.TimeOfDay$Property )org.joda.time.TimeOfDay"[label="1"]
"org.joda.time.UTCDateTimeZone"->"(static)org.joda.time.UTCDateTimeZone.equals(org.joda.time.UTCDateTimeZone java.lang.Object )boolean"[label="1"]
"org.joda.time.UTCDateTimeZone"->"(static)org.joda.time.UTCDateTimeZone.getNameKey(org.joda.time.UTCDateTimeZone long )java.lang.String"[label="1"]
"org.joda.time.UTCDateTimeZone"->"(static)org.joda.time.UTCDateTimeZone.getOffset(org.joda.time.UTCDateTimeZone long )int"[label="1"]
"org.joda.time.UTCDateTimeZone"->"(static)org.joda.time.UTCDateTimeZone.getOffsetFromLocal(org.joda.time.UTCDateTimeZone long )int"[label="1"]
"org.joda.time.UTCDateTimeZone"->"(static)org.joda.time.UTCDateTimeZone.getStandardOffset(org.joda.time.UTCDateTimeZone long )int"[label="1"]
"org.joda.time.UTCDateTimeZone"->"(static)org.joda.time.UTCDateTimeZone.isFixed(org.joda.time.UTCDateTimeZone )boolean"[label="1"]
"org.joda.time.UTCDateTimeZone"->"(static)org.joda.time.UTCDateTimeZone.nextTransition(org.joda.time.UTCDateTimeZone long )long"[label="1"]
"org.joda.time.UTCDateTimeZone"->"(static)org.joda.time.UTCDateTimeZone.previousTransition(org.joda.time.UTCDateTimeZone long )long"[label="1"]
"org.joda.time.UTCDateTimeZone"->"(static)org.joda.time.UTCDateTimeZone.toTimeZone(org.joda.time.UTCDateTimeZone )java.util.TimeZone"[label="1"]
"org.joda.time.Weeks"->"(static)org.joda.time.Weeks.dividedBy(org.joda.time.Weeks int )org.joda.time.Weeks"[label="1"]
"org.joda.time.Weeks"->"(static)org.joda.time.Weeks.getFieldType(org.joda.time.Weeks )org.joda.time.DurationFieldType"[label="1"]
"org.joda.time.Weeks"->"(static)org.joda.time.Weeks.getPeriodType(org.joda.time.Weeks )org.joda.time.PeriodType"[label="1"]
"org.joda.time.Weeks"->"(static)org.joda.time.Weeks.getWeeks(org.joda.time.Weeks )int"[label="1"]
"org.joda.time.Weeks"->"(static)org.joda.time.Weeks.isGreaterThan(org.joda.time.Weeks org.joda.time.Weeks )boolean"[label="2"]
"org.joda.time.Weeks"->"(static)org.joda.time.Weeks.isLessThan(org.joda.time.Weeks org.joda.time.Weeks )boolean"[label="2"]
"org.joda.time.Weeks"->"(static)org.joda.time.Weeks.minus(org.joda.time.Weeks int )org.joda.time.Weeks"[label="1"]
"org.joda.time.Weeks"->"(static)org.joda.time.Weeks.minus(org.joda.time.Weeks org.joda.time.Weeks )org.joda.time.Weeks"[label="2"]
"org.joda.time.Weeks"->"(static)org.joda.time.Weeks.multipliedBy(org.joda.time.Weeks int )org.joda.time.Weeks"[label="1"]
"org.joda.time.Weeks"->"(static)org.joda.time.Weeks.negated(org.joda.time.Weeks )org.joda.time.Weeks"[label="1"]
"org.joda.time.Weeks"->"(static)org.joda.time.Weeks.plus(org.joda.time.Weeks int )org.joda.time.Weeks"[label="1"]
"org.joda.time.Weeks"->"(static)org.joda.time.Weeks.plus(org.joda.time.Weeks org.joda.time.Weeks )org.joda.time.Weeks"[label="2"]
"org.joda.time.Weeks"->"(static)org.joda.time.Weeks.toStandardDays(org.joda.time.Weeks )org.joda.time.Days"[label="1"]
"org.joda.time.Weeks"->"(static)org.joda.time.Weeks.toStandardDuration(org.joda.time.Weeks )org.joda.time.Duration"[label="1"]
"org.joda.time.Weeks"->"(static)org.joda.time.Weeks.toStandardHours(org.joda.time.Weeks )org.joda.time.Hours"[label="1"]
"org.joda.time.Weeks"->"(static)org.joda.time.Weeks.toStandardMinutes(org.joda.time.Weeks )org.joda.time.Minutes"[label="1"]
"org.joda.time.Weeks"->"(static)org.joda.time.Weeks.toStandardSeconds(org.joda.time.Weeks )org.joda.time.Seconds"[label="1"]
"org.joda.time.YearMonth"->"(static)org.joda.time.YearMonth.getFieldType(org.joda.time.YearMonth int )org.joda.time.DateTimeFieldType"[label="1"]
"org.joda.time.YearMonth"->"(static)org.joda.time.YearMonth.getFieldTypes(org.joda.time.YearMonth )org.joda.time.DateTimeFieldType[]"[label="1"]
"org.joda.time.YearMonth"->"(static)org.joda.time.YearMonth.getMonthOfYear(org.joda.time.YearMonth )int"[label="1"]
"org.joda.time.YearMonth"->"(static)org.joda.time.YearMonth.getYear(org.joda.time.YearMonth )int"[label="1"]
"org.joda.time.YearMonth"->"(static)org.joda.time.YearMonth.minus(org.joda.time.YearMonth org.joda.time.ReadablePeriod )org.joda.time.YearMonth"[label="1"]
"org.joda.time.YearMonth"->"(static)org.joda.time.YearMonth.minusMonths(org.joda.time.YearMonth int )org.joda.time.YearMonth"[label="1"]
"org.joda.time.YearMonth"->"(static)org.joda.time.YearMonth.minusYears(org.joda.time.YearMonth int )org.joda.time.YearMonth"[label="1"]
"org.joda.time.YearMonth"->"(static)org.joda.time.YearMonth.monthOfYear(org.joda.time.YearMonth )org.joda.time.YearMonth$Property"[label="1"]
"org.joda.time.YearMonth"->"(static)org.joda.time.YearMonth.plus(org.joda.time.YearMonth org.joda.time.ReadablePeriod )org.joda.time.YearMonth"[label="1"]
"org.joda.time.YearMonth"->"(static)org.joda.time.YearMonth.plusMonths(org.joda.time.YearMonth int )org.joda.time.YearMonth"[label="1"]
"org.joda.time.YearMonth"->"(static)org.joda.time.YearMonth.plusYears(org.joda.time.YearMonth int )org.joda.time.YearMonth"[label="1"]
"org.joda.time.YearMonth"->"(static)org.joda.time.YearMonth.property(org.joda.time.YearMonth org.joda.time.DateTimeFieldType )org.joda.time.YearMonth$Property"[label="1"]
"org.joda.time.YearMonth"->"(static)org.joda.time.YearMonth.size(org.joda.time.YearMonth )int"[label="1"]
"org.joda.time.YearMonth"->"(static)org.joda.time.YearMonth.toInterval(org.joda.time.YearMonth )org.joda.time.Interval"[label="1"]
"org.joda.time.YearMonth"->"(static)org.joda.time.YearMonth.toInterval(org.joda.time.YearMonth org.joda.time.DateTimeZone )org.joda.time.Interval"[label="1"]
"org.joda.time.YearMonth"->"(static)org.joda.time.YearMonth.toLocalDate(org.joda.time.YearMonth int )org.joda.time.LocalDate"[label="1"]
"org.joda.time.YearMonth"->"(static)org.joda.time.YearMonth.withChronologyRetainFields(org.joda.time.YearMonth org.joda.time.Chronology )org.joda.time.YearMonth"[label="1"]
"org.joda.time.YearMonth"->"(static)org.joda.time.YearMonth.withField(org.joda.time.YearMonth org.joda.time.DateTimeFieldType int )org.joda.time.YearMonth"[label="1"]
"org.joda.time.YearMonth"->"(static)org.joda.time.YearMonth.withFieldAdded(org.joda.time.YearMonth org.joda.time.DurationFieldType int )org.joda.time.YearMonth"[label="1"]
"org.joda.time.YearMonth"->"(static)org.joda.time.YearMonth.withMonthOfYear(org.joda.time.YearMonth int )org.joda.time.YearMonth"[label="1"]
"org.joda.time.YearMonth"->"(static)org.joda.time.YearMonth.withPeriodAdded(org.joda.time.YearMonth org.joda.time.ReadablePeriod int )org.joda.time.YearMonth"[label="1"]
"org.joda.time.YearMonth"->"(static)org.joda.time.YearMonth.withYear(org.joda.time.YearMonth int )org.joda.time.YearMonth"[label="1"]
"org.joda.time.YearMonth"->"(static)org.joda.time.YearMonth.year(org.joda.time.YearMonth )org.joda.time.YearMonth$Property"[label="1"]
"org.joda.time.YearMonth"->"org.joda.time.YearMonthIsPolymorphicToorg.joda.time.ReadablePartial"[label="1"]
"org.joda.time.YearMonth$Property"->"(static)org.joda.time.YearMonth$Property.addToCopy(org.joda.time.YearMonth$Property int )org.joda.time.YearMonth"[label="1"]
"org.joda.time.YearMonth$Property"->"(static)org.joda.time.YearMonth$Property.addWrapFieldToCopy(org.joda.time.YearMonth$Property int )org.joda.time.YearMonth"[label="1"]
"org.joda.time.YearMonth$Property"->"(static)org.joda.time.YearMonth$Property.get(org.joda.time.YearMonth$Property )int"[label="1"]
"org.joda.time.YearMonth$Property"->"(static)org.joda.time.YearMonth$Property.getField(org.joda.time.YearMonth$Property )org.joda.time.DateTimeField"[label="1"]
"org.joda.time.YearMonth$Property"->"(static)org.joda.time.YearMonth$Property.getYearMonth(org.joda.time.YearMonth$Property )org.joda.time.YearMonth"[label="1"]
"org.joda.time.YearMonth$Property"->"(static)org.joda.time.YearMonth$Property.setCopy(org.joda.time.YearMonth$Property int )org.joda.time.YearMonth"[label="1"]
"org.joda.time.YearMonth$Property"->"(static)org.joda.time.YearMonth$Property.setCopy(org.joda.time.YearMonth$Property java.lang.String )org.joda.time.YearMonth"[label="1"]
"org.joda.time.YearMonth$Property"->"(static)org.joda.time.YearMonth$Property.setCopy(org.joda.time.YearMonth$Property java.lang.String java.util.Locale )org.joda.time.YearMonth"[label="1"]
"org.joda.time.YearMonthDay"->"(static)org.joda.time.YearMonthDay.dayOfMonth(org.joda.time.YearMonthDay )org.joda.time.YearMonthDay$Property"[label="1"]
"org.joda.time.YearMonthDay"->"(static)org.joda.time.YearMonthDay.getDayOfMonth(org.joda.time.YearMonthDay )int"[label="1"]
"org.joda.time.YearMonthDay"->"(static)org.joda.time.YearMonthDay.getFieldType(org.joda.time.YearMonthDay int )org.joda.time.DateTimeFieldType"[label="1"]
"org.joda.time.YearMonthDay"->"(static)org.joda.time.YearMonthDay.getFieldTypes(org.joda.time.YearMonthDay )org.joda.time.DateTimeFieldType[]"[label="1"]
"org.joda.time.YearMonthDay"->"(static)org.joda.time.YearMonthDay.getMonthOfYear(org.joda.time.YearMonthDay )int"[label="1"]
"org.joda.time.YearMonthDay"->"(static)org.joda.time.YearMonthDay.getYear(org.joda.time.YearMonthDay )int"[label="1"]
"org.joda.time.YearMonthDay"->"(static)org.joda.time.YearMonthDay.minus(org.joda.time.YearMonthDay org.joda.time.ReadablePeriod )org.joda.time.YearMonthDay"[label="1"]
"org.joda.time.YearMonthDay"->"(static)org.joda.time.YearMonthDay.minusDays(org.joda.time.YearMonthDay int )org.joda.time.YearMonthDay"[label="1"]
"org.joda.time.YearMonthDay"->"(static)org.joda.time.YearMonthDay.minusMonths(org.joda.time.YearMonthDay int )org.joda.time.YearMonthDay"[label="1"]
"org.joda.time.YearMonthDay"->"(static)org.joda.time.YearMonthDay.minusYears(org.joda.time.YearMonthDay int )org.joda.time.YearMonthDay"[label="1"]
"org.joda.time.YearMonthDay"->"(static)org.joda.time.YearMonthDay.monthOfYear(org.joda.time.YearMonthDay )org.joda.time.YearMonthDay$Property"[label="1"]
"org.joda.time.YearMonthDay"->"(static)org.joda.time.YearMonthDay.plus(org.joda.time.YearMonthDay org.joda.time.ReadablePeriod )org.joda.time.YearMonthDay"[label="1"]
"org.joda.time.YearMonthDay"->"(static)org.joda.time.YearMonthDay.plusDays(org.joda.time.YearMonthDay int )org.joda.time.YearMonthDay"[label="1"]
"org.joda.time.YearMonthDay"->"(static)org.joda.time.YearMonthDay.plusMonths(org.joda.time.YearMonthDay int )org.joda.time.YearMonthDay"[label="1"]
"org.joda.time.YearMonthDay"->"(static)org.joda.time.YearMonthDay.plusYears(org.joda.time.YearMonthDay int )org.joda.time.YearMonthDay"[label="1"]
"org.joda.time.YearMonthDay"->"(static)org.joda.time.YearMonthDay.property(org.joda.time.YearMonthDay org.joda.time.DateTimeFieldType )org.joda.time.YearMonthDay$Property"[label="1"]
"org.joda.time.YearMonthDay"->"(static)org.joda.time.YearMonthDay.size(org.joda.time.YearMonthDay )int"[label="1"]
"org.joda.time.YearMonthDay"->"(static)org.joda.time.YearMonthDay.toDateMidnight(org.joda.time.YearMonthDay )org.joda.time.DateMidnight"[label="1"]
"org.joda.time.YearMonthDay"->"(static)org.joda.time.YearMonthDay.toDateMidnight(org.joda.time.YearMonthDay org.joda.time.DateTimeZone )org.joda.time.DateMidnight"[label="1"]
"org.joda.time.YearMonthDay"->"(static)org.joda.time.YearMonthDay.toDateTime(org.joda.time.YearMonthDay org.joda.time.TimeOfDay )org.joda.time.DateTime"[label="1"]
"org.joda.time.YearMonthDay"->"(static)org.joda.time.YearMonthDay.toDateTime(org.joda.time.YearMonthDay org.joda.time.TimeOfDay org.joda.time.DateTimeZone )org.joda.time.DateTime"[label="1"]
"org.joda.time.YearMonthDay"->"(static)org.joda.time.YearMonthDay.toDateTimeAtCurrentTime(org.joda.time.YearMonthDay )org.joda.time.DateTime"[label="1"]
"org.joda.time.YearMonthDay"->"(static)org.joda.time.YearMonthDay.toDateTimeAtCurrentTime(org.joda.time.YearMonthDay org.joda.time.DateTimeZone )org.joda.time.DateTime"[label="1"]
"org.joda.time.YearMonthDay"->"(static)org.joda.time.YearMonthDay.toDateTimeAtMidnight(org.joda.time.YearMonthDay )org.joda.time.DateTime"[label="1"]
"org.joda.time.YearMonthDay"->"(static)org.joda.time.YearMonthDay.toDateTimeAtMidnight(org.joda.time.YearMonthDay org.joda.time.DateTimeZone )org.joda.time.DateTime"[label="1"]
"org.joda.time.YearMonthDay"->"(static)org.joda.time.YearMonthDay.toInterval(org.joda.time.YearMonthDay )org.joda.time.Interval"[label="1"]
"org.joda.time.YearMonthDay"->"(static)org.joda.time.YearMonthDay.toInterval(org.joda.time.YearMonthDay org.joda.time.DateTimeZone )org.joda.time.Interval"[label="1"]
"org.joda.time.YearMonthDay"->"(static)org.joda.time.YearMonthDay.toLocalDate(org.joda.time.YearMonthDay )org.joda.time.LocalDate"[label="1"]
"org.joda.time.YearMonthDay"->"(static)org.joda.time.YearMonthDay.withChronologyRetainFields(org.joda.time.YearMonthDay org.joda.time.Chronology )org.joda.time.YearMonthDay"[label="1"]
"org.joda.time.YearMonthDay"->"(static)org.joda.time.YearMonthDay.withDayOfMonth(org.joda.time.YearMonthDay int )org.joda.time.YearMonthDay"[label="1"]
"org.joda.time.YearMonthDay"->"(static)org.joda.time.YearMonthDay.withField(org.joda.time.YearMonthDay org.joda.time.DateTimeFieldType int )org.joda.time.YearMonthDay"[label="1"]
"org.joda.time.YearMonthDay"->"(static)org.joda.time.YearMonthDay.withFieldAdded(org.joda.time.YearMonthDay org.joda.time.DurationFieldType int )org.joda.time.YearMonthDay"[label="1"]
"org.joda.time.YearMonthDay"->"(static)org.joda.time.YearMonthDay.withMonthOfYear(org.joda.time.YearMonthDay int )org.joda.time.YearMonthDay"[label="1"]
"org.joda.time.YearMonthDay"->"(static)org.joda.time.YearMonthDay.withPeriodAdded(org.joda.time.YearMonthDay org.joda.time.ReadablePeriod int )org.joda.time.YearMonthDay"[label="1"]
"org.joda.time.YearMonthDay"->"(static)org.joda.time.YearMonthDay.withYear(org.joda.time.YearMonthDay int )org.joda.time.YearMonthDay"[label="1"]
"org.joda.time.YearMonthDay"->"(static)org.joda.time.YearMonthDay.year(org.joda.time.YearMonthDay )org.joda.time.YearMonthDay$Property"[label="1"]
"org.joda.time.YearMonthDay"->"org.joda.time.YearMonthDayIsPolymorphicToorg.joda.time.ReadablePartial"[label="1"]
"org.joda.time.YearMonthDay$Property"->"(static)org.joda.time.YearMonthDay$Property.addToCopy(org.joda.time.YearMonthDay$Property int )org.joda.time.YearMonthDay"[label="1"]
"org.joda.time.YearMonthDay$Property"->"(static)org.joda.time.YearMonthDay$Property.addWrapFieldToCopy(org.joda.time.YearMonthDay$Property int )org.joda.time.YearMonthDay"[label="1"]
"org.joda.time.YearMonthDay$Property"->"(static)org.joda.time.YearMonthDay$Property.get(org.joda.time.YearMonthDay$Property )int"[label="1"]
"org.joda.time.YearMonthDay$Property"->"(static)org.joda.time.YearMonthDay$Property.getField(org.joda.time.YearMonthDay$Property )org.joda.time.DateTimeField"[label="1"]
"org.joda.time.YearMonthDay$Property"->"(static)org.joda.time.YearMonthDay$Property.getYearMonthDay(org.joda.time.YearMonthDay$Property )org.joda.time.YearMonthDay"[label="1"]
"org.joda.time.YearMonthDay$Property"->"(static)org.joda.time.YearMonthDay$Property.setCopy(org.joda.time.YearMonthDay$Property int )org.joda.time.YearMonthDay"[label="1"]
"org.joda.time.YearMonthDay$Property"->"(static)org.joda.time.YearMonthDay$Property.setCopy(org.joda.time.YearMonthDay$Property java.lang.String )org.joda.time.YearMonthDay"[label="1"]
"org.joda.time.YearMonthDay$Property"->"(static)org.joda.time.YearMonthDay$Property.setCopy(org.joda.time.YearMonthDay$Property java.lang.String java.util.Locale )org.joda.time.YearMonthDay"[label="1"]
"org.joda.time.YearMonthDay$Property"->"(static)org.joda.time.YearMonthDay$Property.withMaximumValue(org.joda.time.YearMonthDay$Property )org.joda.time.YearMonthDay"[label="1"]
"org.joda.time.YearMonthDay$Property"->"(static)org.joda.time.YearMonthDay$Property.withMinimumValue(org.joda.time.YearMonthDay$Property )org.joda.time.YearMonthDay"[label="1"]
"org.joda.time.Years"->"(static)org.joda.time.Years.dividedBy(org.joda.time.Years int )org.joda.time.Years"[label="1"]
"org.joda.time.Years"->"(static)org.joda.time.Years.getFieldType(org.joda.time.Years )org.joda.time.DurationFieldType"[label="1"]
"org.joda.time.Years"->"(static)org.joda.time.Years.getPeriodType(org.joda.time.Years )org.joda.time.PeriodType"[label="1"]
"org.joda.time.Years"->"(static)org.joda.time.Years.getYears(org.joda.time.Years )int"[label="1"]
"org.joda.time.Years"->"(static)org.joda.time.Years.isGreaterThan(org.joda.time.Years org.joda.time.Years )boolean"[label="2"]
"org.joda.time.Years"->"(static)org.joda.time.Years.isLessThan(org.joda.time.Years org.joda.time.Years )boolean"[label="2"]
"org.joda.time.Years"->"(static)org.joda.time.Years.minus(org.joda.time.Years int )org.joda.time.Years"[label="1"]
"org.joda.time.Years"->"(static)org.joda.time.Years.minus(org.joda.time.Years org.joda.time.Years )org.joda.time.Years"[label="2"]
"org.joda.time.Years"->"(static)org.joda.time.Years.multipliedBy(org.joda.time.Years int )org.joda.time.Years"[label="1"]
"org.joda.time.Years"->"(static)org.joda.time.Years.negated(org.joda.time.Years )org.joda.time.Years"[label="1"]
"org.joda.time.Years"->"(static)org.joda.time.Years.plus(org.joda.time.Years int )org.joda.time.Years"[label="1"]
"org.joda.time.Years"->"(static)org.joda.time.Years.plus(org.joda.time.Years org.joda.time.Years )org.joda.time.Years"[label="2"]
"org.joda.time.base.AbstractDateTime"->"(static)org.joda.time.base.AbstractDateTime.get(org.joda.time.base.AbstractDateTime org.joda.time.DateTimeFieldType )int"[label="1"]
"org.joda.time.base.AbstractDateTime"->"(static)org.joda.time.base.AbstractDateTime.getCenturyOfEra(org.joda.time.base.AbstractDateTime )int"[label="1"]
"org.joda.time.base.AbstractDateTime"->"(static)org.joda.time.base.AbstractDateTime.getDayOfMonth(org.joda.time.base.AbstractDateTime )int"[label="1"]
"org.joda.time.base.AbstractDateTime"->"(static)org.joda.time.base.AbstractDateTime.getDayOfWeek(org.joda.time.base.AbstractDateTime )int"[label="1"]
"org.joda.time.base.AbstractDateTime"->"(static)org.joda.time.base.AbstractDateTime.getDayOfYear(org.joda.time.base.AbstractDateTime )int"[label="1"]
"org.joda.time.base.AbstractDateTime"->"(static)org.joda.time.base.AbstractDateTime.getEra(org.joda.time.base.AbstractDateTime )int"[label="1"]
"org.joda.time.base.AbstractDateTime"->"(static)org.joda.time.base.AbstractDateTime.getHourOfDay(org.joda.time.base.AbstractDateTime )int"[label="1"]
"org.joda.time.base.AbstractDateTime"->"(static)org.joda.time.base.AbstractDateTime.getMillisOfDay(org.joda.time.base.AbstractDateTime )int"[label="1"]
"org.joda.time.base.AbstractDateTime"->"(static)org.joda.time.base.AbstractDateTime.getMillisOfSecond(org.joda.time.base.AbstractDateTime )int"[label="1"]
"org.joda.time.base.AbstractDateTime"->"(static)org.joda.time.base.AbstractDateTime.getMinuteOfDay(org.joda.time.base.AbstractDateTime )int"[label="1"]
"org.joda.time.base.AbstractDateTime"->"(static)org.joda.time.base.AbstractDateTime.getMinuteOfHour(org.joda.time.base.AbstractDateTime )int"[label="1"]
"org.joda.time.base.AbstractDateTime"->"(static)org.joda.time.base.AbstractDateTime.getMonthOfYear(org.joda.time.base.AbstractDateTime )int"[label="1"]
"org.joda.time.base.AbstractDateTime"->"(static)org.joda.time.base.AbstractDateTime.getSecondOfDay(org.joda.time.base.AbstractDateTime )int"[label="1"]
"org.joda.time.base.AbstractDateTime"->"(static)org.joda.time.base.AbstractDateTime.getSecondOfMinute(org.joda.time.base.AbstractDateTime )int"[label="1"]
"org.joda.time.base.AbstractDateTime"->"(static)org.joda.time.base.AbstractDateTime.getWeekOfWeekyear(org.joda.time.base.AbstractDateTime )int"[label="1"]
"org.joda.time.base.AbstractDateTime"->"(static)org.joda.time.base.AbstractDateTime.getWeekyear(org.joda.time.base.AbstractDateTime )int"[label="1"]
"org.joda.time.base.AbstractDateTime"->"(static)org.joda.time.base.AbstractDateTime.getYear(org.joda.time.base.AbstractDateTime )int"[label="1"]
"org.joda.time.base.AbstractDateTime"->"(static)org.joda.time.base.AbstractDateTime.getYearOfCentury(org.joda.time.base.AbstractDateTime )int"[label="1"]
"org.joda.time.base.AbstractDateTime"->"(static)org.joda.time.base.AbstractDateTime.getYearOfEra(org.joda.time.base.AbstractDateTime )int"[label="1"]
"org.joda.time.base.AbstractDateTime"->"(static)org.joda.time.base.AbstractDateTime.toCalendar(org.joda.time.base.AbstractDateTime java.util.Locale )java.util.Calendar"[label="1"]
"org.joda.time.base.AbstractDateTime"->"(static)org.joda.time.base.AbstractDateTime.toGregorianCalendar(org.joda.time.base.AbstractDateTime )java.util.GregorianCalendar"[label="1"]
"org.joda.time.base.AbstractDuration"->"(static)org.joda.time.base.AbstractDuration.equals(org.joda.time.base.AbstractDuration java.lang.Object )boolean"[label="1"]
"org.joda.time.base.AbstractDuration"->"(static)org.joda.time.base.AbstractDuration.isEqual(org.joda.time.base.AbstractDuration org.joda.time.ReadableDuration )boolean"[label="1"]
"org.joda.time.base.AbstractDuration"->"(static)org.joda.time.base.AbstractDuration.isLongerThan(org.joda.time.base.AbstractDuration org.joda.time.ReadableDuration )boolean"[label="1"]
"org.joda.time.base.AbstractDuration"->"(static)org.joda.time.base.AbstractDuration.isShorterThan(org.joda.time.base.AbstractDuration org.joda.time.ReadableDuration )boolean"[label="1"]
"org.joda.time.base.AbstractDuration"->"(static)org.joda.time.base.AbstractDuration.toDuration(org.joda.time.base.AbstractDuration )org.joda.time.Duration"[label="1"]
"org.joda.time.base.AbstractDuration"->"(static)org.joda.time.base.AbstractDuration.toPeriod(org.joda.time.base.AbstractDuration )org.joda.time.Period"[label="1"]
"org.joda.time.base.AbstractInstant"->"(static)org.joda.time.base.AbstractInstant.equals(org.joda.time.base.AbstractInstant java.lang.Object )boolean"[label="1"]
"org.joda.time.base.AbstractInstant"->"(static)org.joda.time.base.AbstractInstant.get(org.joda.time.base.AbstractInstant org.joda.time.DateTimeField )int"[label="1"]
"org.joda.time.base.AbstractInstant"->"(static)org.joda.time.base.AbstractInstant.get(org.joda.time.base.AbstractInstant org.joda.time.DateTimeFieldType )int"[label="1"]
"org.joda.time.base.AbstractInstant"->"(static)org.joda.time.base.AbstractInstant.getZone(org.joda.time.base.AbstractInstant )org.joda.time.DateTimeZone"[label="1"]
"org.joda.time.base.AbstractInstant"->"(static)org.joda.time.base.AbstractInstant.isAfter(org.joda.time.base.AbstractInstant long )boolean"[label="1"]
"org.joda.time.base.AbstractInstant"->"(static)org.joda.time.base.AbstractInstant.isAfter(org.joda.time.base.AbstractInstant org.joda.time.ReadableInstant )boolean"[label="1"]
"org.joda.time.base.AbstractInstant"->"(static)org.joda.time.base.AbstractInstant.isAfterNow(org.joda.time.base.AbstractInstant )boolean"[label="1"]
"org.joda.time.base.AbstractInstant"->"(static)org.joda.time.base.AbstractInstant.isBefore(org.joda.time.base.AbstractInstant long )boolean"[label="1"]
"org.joda.time.base.AbstractInstant"->"(static)org.joda.time.base.AbstractInstant.isBefore(org.joda.time.base.AbstractInstant org.joda.time.ReadableInstant )boolean"[label="1"]
"org.joda.time.base.AbstractInstant"->"(static)org.joda.time.base.AbstractInstant.isBeforeNow(org.joda.time.base.AbstractInstant )boolean"[label="1"]
"org.joda.time.base.AbstractInstant"->"(static)org.joda.time.base.AbstractInstant.isEqual(org.joda.time.base.AbstractInstant long )boolean"[label="1"]
"org.joda.time.base.AbstractInstant"->"(static)org.joda.time.base.AbstractInstant.isEqual(org.joda.time.base.AbstractInstant org.joda.time.ReadableInstant )boolean"[label="1"]
"org.joda.time.base.AbstractInstant"->"(static)org.joda.time.base.AbstractInstant.isEqualNow(org.joda.time.base.AbstractInstant )boolean"[label="1"]
"org.joda.time.base.AbstractInstant"->"(static)org.joda.time.base.AbstractInstant.isSupported(org.joda.time.base.AbstractInstant org.joda.time.DateTimeFieldType )boolean"[label="1"]
"org.joda.time.base.AbstractInstant"->"(static)org.joda.time.base.AbstractInstant.toDate(org.joda.time.base.AbstractInstant )java.util.Date"[label="1"]
"org.joda.time.base.AbstractInstant"->"(static)org.joda.time.base.AbstractInstant.toDateTime(org.joda.time.base.AbstractInstant )org.joda.time.DateTime"[label="1"]
"org.joda.time.base.AbstractInstant"->"(static)org.joda.time.base.AbstractInstant.toDateTime(org.joda.time.base.AbstractInstant org.joda.time.Chronology )org.joda.time.DateTime"[label="1"]
"org.joda.time.base.AbstractInstant"->"(static)org.joda.time.base.AbstractInstant.toDateTime(org.joda.time.base.AbstractInstant org.joda.time.DateTimeZone )org.joda.time.DateTime"[label="1"]
"org.joda.time.base.AbstractInstant"->"(static)org.joda.time.base.AbstractInstant.toDateTimeISO(org.joda.time.base.AbstractInstant )org.joda.time.DateTime"[label="1"]
"org.joda.time.base.AbstractInstant"->"(static)org.joda.time.base.AbstractInstant.toInstant(org.joda.time.base.AbstractInstant )org.joda.time.Instant"[label="1"]
"org.joda.time.base.AbstractInstant"->"(static)org.joda.time.base.AbstractInstant.toMutableDateTime(org.joda.time.base.AbstractInstant )org.joda.time.MutableDateTime"[label="1"]
"org.joda.time.base.AbstractInstant"->"(static)org.joda.time.base.AbstractInstant.toMutableDateTime(org.joda.time.base.AbstractInstant org.joda.time.Chronology )org.joda.time.MutableDateTime"[label="1"]
"org.joda.time.base.AbstractInstant"->"(static)org.joda.time.base.AbstractInstant.toMutableDateTime(org.joda.time.base.AbstractInstant org.joda.time.DateTimeZone )org.joda.time.MutableDateTime"[label="1"]
"org.joda.time.base.AbstractInstant"->"(static)org.joda.time.base.AbstractInstant.toMutableDateTimeISO(org.joda.time.base.AbstractInstant )org.joda.time.MutableDateTime"[label="1"]
"org.joda.time.base.AbstractInterval"->"(static)org.joda.time.base.AbstractInterval.containsNow(org.joda.time.base.AbstractInterval )boolean"[label="1"]
"org.joda.time.base.AbstractInterval"->"(static)org.joda.time.base.AbstractInterval.equals(org.joda.time.base.AbstractInterval java.lang.Object )boolean"[label="1"]
"org.joda.time.base.AbstractInterval"->"(static)org.joda.time.base.AbstractInterval.getEnd(org.joda.time.base.AbstractInterval )org.joda.time.DateTime"[label="1"]
"org.joda.time.base.AbstractInterval"->"(static)org.joda.time.base.AbstractInterval.getStart(org.joda.time.base.AbstractInterval )org.joda.time.DateTime"[label="1"]
"org.joda.time.base.AbstractInterval"->"(static)org.joda.time.base.AbstractInterval.isAfter(org.joda.time.base.AbstractInterval long )boolean"[label="1"]
"org.joda.time.base.AbstractInterval"->"(static)org.joda.time.base.AbstractInterval.isAfter(org.joda.time.base.AbstractInterval org.joda.time.ReadableInstant )boolean"[label="1"]
"org.joda.time.base.AbstractInterval"->"(static)org.joda.time.base.AbstractInterval.isAfter(org.joda.time.base.AbstractInterval org.joda.time.ReadableInterval )boolean"[label="1"]
"org.joda.time.base.AbstractInterval"->"(static)org.joda.time.base.AbstractInterval.isAfterNow(org.joda.time.base.AbstractInterval )boolean"[label="1"]
"org.joda.time.base.AbstractInterval"->"(static)org.joda.time.base.AbstractInterval.isBefore(org.joda.time.base.AbstractInterval long )boolean"[label="1"]
"org.joda.time.base.AbstractInterval"->"(static)org.joda.time.base.AbstractInterval.isBefore(org.joda.time.base.AbstractInterval org.joda.time.ReadableInstant )boolean"[label="1"]
"org.joda.time.base.AbstractInterval"->"(static)org.joda.time.base.AbstractInterval.isBefore(org.joda.time.base.AbstractInterval org.joda.time.ReadableInterval )boolean"[label="1"]
"org.joda.time.base.AbstractInterval"->"(static)org.joda.time.base.AbstractInterval.isBeforeNow(org.joda.time.base.AbstractInterval )boolean"[label="1"]
"org.joda.time.base.AbstractInterval"->"(static)org.joda.time.base.AbstractInterval.isEqual(org.joda.time.base.AbstractInterval org.joda.time.ReadableInterval )boolean"[label="1"]
"org.joda.time.base.AbstractInterval"->"(static)org.joda.time.base.AbstractInterval.overlaps(org.joda.time.base.AbstractInterval org.joda.time.ReadableInterval )boolean"[label="1"]
"org.joda.time.base.AbstractInterval"->"(static)org.joda.time.base.AbstractInterval.toDuration(org.joda.time.base.AbstractInterval )org.joda.time.Duration"[label="1"]
"org.joda.time.base.AbstractInterval"->"(static)org.joda.time.base.AbstractInterval.toDurationMillis(org.joda.time.base.AbstractInterval )long"[label="1"]
"org.joda.time.base.AbstractInterval"->"(static)org.joda.time.base.AbstractInterval.toInterval(org.joda.time.base.AbstractInterval )org.joda.time.Interval"[label="1"]
"org.joda.time.base.AbstractInterval"->"(static)org.joda.time.base.AbstractInterval.toMutableInterval(org.joda.time.base.AbstractInterval )org.joda.time.MutableInterval"[label="1"]
"org.joda.time.base.AbstractInterval"->"(static)org.joda.time.base.AbstractInterval.toPeriod(org.joda.time.base.AbstractInterval )org.joda.time.Period"[label="1"]
"org.joda.time.base.AbstractInterval"->"(static)org.joda.time.base.AbstractInterval.toPeriod(org.joda.time.base.AbstractInterval org.joda.time.PeriodType )org.joda.time.Period"[label="1"]
"org.joda.time.base.AbstractPartial"->"(static)org.joda.time.base.AbstractPartial.equals(org.joda.time.base.AbstractPartial java.lang.Object )boolean"[label="1"]
"org.joda.time.base.AbstractPartial"->"(static)org.joda.time.base.AbstractPartial.get(org.joda.time.base.AbstractPartial org.joda.time.DateTimeFieldType )int"[label="1"]
"org.joda.time.base.AbstractPartial"->"(static)org.joda.time.base.AbstractPartial.getField(org.joda.time.base.AbstractPartial int )org.joda.time.DateTimeField"[label="1"]
"org.joda.time.base.AbstractPartial"->"(static)org.joda.time.base.AbstractPartial.getFieldType(org.joda.time.base.AbstractPartial int )org.joda.time.DateTimeFieldType"[label="1"]
"org.joda.time.base.AbstractPartial"->"(static)org.joda.time.base.AbstractPartial.getFieldTypes(org.joda.time.base.AbstractPartial )org.joda.time.DateTimeFieldType[]"[label="1"]
"org.joda.time.base.AbstractPartial"->"(static)org.joda.time.base.AbstractPartial.getFields(org.joda.time.base.AbstractPartial )org.joda.time.DateTimeField[]"[label="1"]
"org.joda.time.base.AbstractPartial"->"(static)org.joda.time.base.AbstractPartial.getValues(org.joda.time.base.AbstractPartial )int[]"[label="1"]
"org.joda.time.base.AbstractPartial"->"(static)org.joda.time.base.AbstractPartial.indexOf(org.joda.time.base.AbstractPartial org.joda.time.DateTimeFieldType )int"[label="1"]
"org.joda.time.base.AbstractPartial"->"(static)org.joda.time.base.AbstractPartial.isAfter(org.joda.time.base.AbstractPartial org.joda.time.ReadablePartial )boolean"[label="1"]
"org.joda.time.base.AbstractPartial"->"(static)org.joda.time.base.AbstractPartial.isBefore(org.joda.time.base.AbstractPartial org.joda.time.ReadablePartial )boolean"[label="1"]
"org.joda.time.base.AbstractPartial"->"(static)org.joda.time.base.AbstractPartial.isEqual(org.joda.time.base.AbstractPartial org.joda.time.ReadablePartial )boolean"[label="1"]
"org.joda.time.base.AbstractPartial"->"(static)org.joda.time.base.AbstractPartial.isSupported(org.joda.time.base.AbstractPartial org.joda.time.DateTimeFieldType )boolean"[label="1"]
"org.joda.time.base.AbstractPartial"->"(static)org.joda.time.base.AbstractPartial.toDateTime(org.joda.time.base.AbstractPartial org.joda.time.ReadableInstant )org.joda.time.DateTime"[label="1"]
"org.joda.time.base.AbstractPartial"->"org.joda.time.base.AbstractPartialIsPolymorphicToorg.joda.time.ReadablePartial"[label="1"]
"org.joda.time.base.AbstractPeriod"->"(static)org.joda.time.base.AbstractPeriod.equals(org.joda.time.base.AbstractPeriod java.lang.Object )boolean"[label="1"]
"org.joda.time.base.AbstractPeriod"->"(static)org.joda.time.base.AbstractPeriod.get(org.joda.time.base.AbstractPeriod org.joda.time.DurationFieldType )int"[label="1"]
"org.joda.time.base.AbstractPeriod"->"(static)org.joda.time.base.AbstractPeriod.getFieldType(org.joda.time.base.AbstractPeriod int )org.joda.time.DurationFieldType"[label="1"]
"org.joda.time.base.AbstractPeriod"->"(static)org.joda.time.base.AbstractPeriod.getFieldTypes(org.joda.time.base.AbstractPeriod )org.joda.time.DurationFieldType[]"[label="1"]
"org.joda.time.base.AbstractPeriod"->"(static)org.joda.time.base.AbstractPeriod.getValues(org.joda.time.base.AbstractPeriod )int[]"[label="1"]
"org.joda.time.base.AbstractPeriod"->"(static)org.joda.time.base.AbstractPeriod.indexOf(org.joda.time.base.AbstractPeriod org.joda.time.DurationFieldType )int"[label="1"]
"org.joda.time.base.AbstractPeriod"->"(static)org.joda.time.base.AbstractPeriod.isSupported(org.joda.time.base.AbstractPeriod org.joda.time.DurationFieldType )boolean"[label="1"]
"org.joda.time.base.AbstractPeriod"->"(static)org.joda.time.base.AbstractPeriod.size(org.joda.time.base.AbstractPeriod )int"[label="1"]
"org.joda.time.base.AbstractPeriod"->"(static)org.joda.time.base.AbstractPeriod.toMutablePeriod(org.joda.time.base.AbstractPeriod )org.joda.time.MutablePeriod"[label="1"]
"org.joda.time.base.AbstractPeriod"->"(static)org.joda.time.base.AbstractPeriod.toPeriod(org.joda.time.base.AbstractPeriod )org.joda.time.Period"[label="1"]
"org.joda.time.base.BaseDateTime"->"(static)org.joda.time.base.BaseDateTime.getChronology(org.joda.time.base.BaseDateTime )org.joda.time.Chronology"[label="1"]
"org.joda.time.base.BaseDateTime"->"(static)org.joda.time.base.BaseDateTime.getMillis(org.joda.time.base.BaseDateTime )long"[label="1"]
"org.joda.time.base.BaseDateTime"->"org.joda.time.base.BaseDateTimeIsPolymorphicToorg.joda.time.base.AbstractDateTime"[label="1"]
"org.joda.time.base.BaseDuration"->"(static)org.joda.time.base.BaseDuration.getMillis(org.joda.time.base.BaseDuration )long"[label="1"]
"org.joda.time.base.BaseDuration"->"(static)org.joda.time.base.BaseDuration.toIntervalFrom(org.joda.time.base.BaseDuration org.joda.time.ReadableInstant )org.joda.time.Interval"[label="1"]
"org.joda.time.base.BaseDuration"->"(static)org.joda.time.base.BaseDuration.toIntervalTo(org.joda.time.base.BaseDuration org.joda.time.ReadableInstant )org.joda.time.Interval"[label="1"]
"org.joda.time.base.BaseDuration"->"(static)org.joda.time.base.BaseDuration.toPeriod(org.joda.time.base.BaseDuration org.joda.time.Chronology )org.joda.time.Period"[label="1"]
"org.joda.time.base.BaseDuration"->"(static)org.joda.time.base.BaseDuration.toPeriod(org.joda.time.base.BaseDuration org.joda.time.PeriodType )org.joda.time.Period"[label="1"]
"org.joda.time.base.BaseDuration"->"(static)org.joda.time.base.BaseDuration.toPeriod(org.joda.time.base.BaseDuration org.joda.time.PeriodType org.joda.time.Chronology )org.joda.time.Period"[label="1"]
"org.joda.time.base.BaseDuration"->"(static)org.joda.time.base.BaseDuration.toPeriodFrom(org.joda.time.base.BaseDuration org.joda.time.ReadableInstant )org.joda.time.Period"[label="1"]
"org.joda.time.base.BaseDuration"->"(static)org.joda.time.base.BaseDuration.toPeriodFrom(org.joda.time.base.BaseDuration org.joda.time.ReadableInstant org.joda.time.PeriodType )org.joda.time.Period"[label="1"]
"org.joda.time.base.BaseDuration"->"(static)org.joda.time.base.BaseDuration.toPeriodTo(org.joda.time.base.BaseDuration org.joda.time.ReadableInstant )org.joda.time.Period"[label="1"]
"org.joda.time.base.BaseDuration"->"(static)org.joda.time.base.BaseDuration.toPeriodTo(org.joda.time.base.BaseDuration org.joda.time.ReadableInstant org.joda.time.PeriodType )org.joda.time.Period"[label="1"]
"org.joda.time.base.BaseInterval"->"(static)org.joda.time.base.BaseInterval.getChronology(org.joda.time.base.BaseInterval )org.joda.time.Chronology"[label="1"]
"org.joda.time.base.BaseInterval"->"(static)org.joda.time.base.BaseInterval.getEndMillis(org.joda.time.base.BaseInterval )long"[label="1"]
"org.joda.time.base.BaseInterval"->"(static)org.joda.time.base.BaseInterval.getStartMillis(org.joda.time.base.BaseInterval )long"[label="1"]
"org.joda.time.base.BaseLocal"->"org.joda.time.base.BaseLocalIsPolymorphicToorg.joda.time.ReadablePartial"[label="1"]
"org.joda.time.base.BasePartial"->"(static)org.joda.time.base.BasePartial.getChronology(org.joda.time.base.BasePartial )org.joda.time.Chronology"[label="1"]
"org.joda.time.base.BasePartial"->"(static)org.joda.time.base.BasePartial.getValue(org.joda.time.base.BasePartial int )int"[label="1"]
"org.joda.time.base.BasePartial"->"(static)org.joda.time.base.BasePartial.getValues(org.joda.time.base.BasePartial )int[]"[label="1"]
"org.joda.time.base.BasePartial"->"org.joda.time.base.BasePartialIsPolymorphicToorg.joda.time.ReadablePartial"[label="1"]
"org.joda.time.base.BasePeriod"->"(static)org.joda.time.base.BasePeriod.getPeriodType(org.joda.time.base.BasePeriod )org.joda.time.PeriodType"[label="1"]
"org.joda.time.base.BasePeriod"->"(static)org.joda.time.base.BasePeriod.getValue(org.joda.time.base.BasePeriod int )int"[label="1"]
"org.joda.time.base.BasePeriod"->"(static)org.joda.time.base.BasePeriod.toDurationFrom(org.joda.time.base.BasePeriod org.joda.time.ReadableInstant )org.joda.time.Duration"[label="1"]
"org.joda.time.base.BasePeriod"->"(static)org.joda.time.base.BasePeriod.toDurationTo(org.joda.time.base.BasePeriod org.joda.time.ReadableInstant )org.joda.time.Duration"[label="1"]
"org.joda.time.base.BasePeriod$1"->"(static)org.joda.time.base.BasePeriod$1.getPeriodType(org.joda.time.base.BasePeriod$1 )org.joda.time.PeriodType"[label="1"]
"org.joda.time.base.BasePeriod$1"->"(static)org.joda.time.base.BasePeriod$1.getValue(org.joda.time.base.BasePeriod$1 int )int"[label="1"]
"org.joda.time.base.BaseSingleFieldPeriod"->"(static)org.joda.time.base.BaseSingleFieldPeriod.equals(org.joda.time.base.BaseSingleFieldPeriod java.lang.Object )boolean"[label="1"]
"org.joda.time.base.BaseSingleFieldPeriod"->"(static)org.joda.time.base.BaseSingleFieldPeriod.get(org.joda.time.base.BaseSingleFieldPeriod org.joda.time.DurationFieldType )int"[label="1"]
"org.joda.time.base.BaseSingleFieldPeriod"->"(static)org.joda.time.base.BaseSingleFieldPeriod.getFieldType(org.joda.time.base.BaseSingleFieldPeriod )org.joda.time.DurationFieldType"[label="1"]
"org.joda.time.base.BaseSingleFieldPeriod"->"(static)org.joda.time.base.BaseSingleFieldPeriod.getFieldType(org.joda.time.base.BaseSingleFieldPeriod int )org.joda.time.DurationFieldType"[label="1"]
"org.joda.time.base.BaseSingleFieldPeriod"->"(static)org.joda.time.base.BaseSingleFieldPeriod.getPeriodType(org.joda.time.base.BaseSingleFieldPeriod )org.joda.time.PeriodType"[label="1"]
"org.joda.time.base.BaseSingleFieldPeriod"->"(static)org.joda.time.base.BaseSingleFieldPeriod.getValue(org.joda.time.base.BaseSingleFieldPeriod int )int"[label="1"]
"org.joda.time.base.BaseSingleFieldPeriod"->"(static)org.joda.time.base.BaseSingleFieldPeriod.isSupported(org.joda.time.base.BaseSingleFieldPeriod org.joda.time.DurationFieldType )boolean"[label="1"]
"org.joda.time.base.BaseSingleFieldPeriod"->"(static)org.joda.time.base.BaseSingleFieldPeriod.size(org.joda.time.base.BaseSingleFieldPeriod )int"[label="1"]
"org.joda.time.base.BaseSingleFieldPeriod"->"(static)org.joda.time.base.BaseSingleFieldPeriod.toMutablePeriod(org.joda.time.base.BaseSingleFieldPeriod )org.joda.time.MutablePeriod"[label="1"]
"org.joda.time.base.BaseSingleFieldPeriod"->"(static)org.joda.time.base.BaseSingleFieldPeriod.toPeriod(org.joda.time.base.BaseSingleFieldPeriod )org.joda.time.Period"[label="1"]
"org.joda.time.chrono.AssembledChronology"->"(static)org.joda.time.chrono.AssembledChronology.centuries(org.joda.time.chrono.AssembledChronology )org.joda.time.DurationField"[label="1"]
"org.joda.time.chrono.AssembledChronology"->"(static)org.joda.time.chrono.AssembledChronology.centuryOfEra(org.joda.time.chrono.AssembledChronology )org.joda.time.DateTimeField"[label="1"]
"org.joda.time.chrono.AssembledChronology"->"(static)org.joda.time.chrono.AssembledChronology.clockhourOfDay(org.joda.time.chrono.AssembledChronology )org.joda.time.DateTimeField"[label="1"]
"org.joda.time.chrono.AssembledChronology"->"(static)org.joda.time.chrono.AssembledChronology.clockhourOfHalfday(org.joda.time.chrono.AssembledChronology )org.joda.time.DateTimeField"[label="1"]
"org.joda.time.chrono.AssembledChronology"->"(static)org.joda.time.chrono.AssembledChronology.dayOfMonth(org.joda.time.chrono.AssembledChronology )org.joda.time.DateTimeField"[label="1"]
"org.joda.time.chrono.AssembledChronology"->"(static)org.joda.time.chrono.AssembledChronology.dayOfWeek(org.joda.time.chrono.AssembledChronology )org.joda.time.DateTimeField"[label="1"]
"org.joda.time.chrono.AssembledChronology"->"(static)org.joda.time.chrono.AssembledChronology.dayOfYear(org.joda.time.chrono.AssembledChronology )org.joda.time.DateTimeField"[label="1"]
"org.joda.time.chrono.AssembledChronology"->"(static)org.joda.time.chrono.AssembledChronology.days(org.joda.time.chrono.AssembledChronology )org.joda.time.DurationField"[label="1"]
"org.joda.time.chrono.AssembledChronology"->"(static)org.joda.time.chrono.AssembledChronology.era(org.joda.time.chrono.AssembledChronology )org.joda.time.DateTimeField"[label="1"]
"org.joda.time.chrono.AssembledChronology"->"(static)org.joda.time.chrono.AssembledChronology.eras(org.joda.time.chrono.AssembledChronology )org.joda.time.DurationField"[label="1"]
"org.joda.time.chrono.AssembledChronology"->"(static)org.joda.time.chrono.AssembledChronology.getZone(org.joda.time.chrono.AssembledChronology )org.joda.time.DateTimeZone"[label="1"]
"org.joda.time.chrono.AssembledChronology"->"(static)org.joda.time.chrono.AssembledChronology.halfdayOfDay(org.joda.time.chrono.AssembledChronology )org.joda.time.DateTimeField"[label="1"]
"org.joda.time.chrono.AssembledChronology"->"(static)org.joda.time.chrono.AssembledChronology.halfdays(org.joda.time.chrono.AssembledChronology )org.joda.time.DurationField"[label="1"]
"org.joda.time.chrono.AssembledChronology"->"(static)org.joda.time.chrono.AssembledChronology.hourOfDay(org.joda.time.chrono.AssembledChronology )org.joda.time.DateTimeField"[label="1"]
"org.joda.time.chrono.AssembledChronology"->"(static)org.joda.time.chrono.AssembledChronology.hourOfHalfday(org.joda.time.chrono.AssembledChronology )org.joda.time.DateTimeField"[label="1"]
"org.joda.time.chrono.AssembledChronology"->"(static)org.joda.time.chrono.AssembledChronology.hours(org.joda.time.chrono.AssembledChronology )org.joda.time.DurationField"[label="1"]
"org.joda.time.chrono.AssembledChronology"->"(static)org.joda.time.chrono.AssembledChronology.millis(org.joda.time.chrono.AssembledChronology )org.joda.time.DurationField"[label="1"]
"org.joda.time.chrono.AssembledChronology"->"(static)org.joda.time.chrono.AssembledChronology.millisOfDay(org.joda.time.chrono.AssembledChronology )org.joda.time.DateTimeField"[label="1"]
"org.joda.time.chrono.AssembledChronology"->"(static)org.joda.time.chrono.AssembledChronology.millisOfSecond(org.joda.time.chrono.AssembledChronology )org.joda.time.DateTimeField"[label="1"]
"org.joda.time.chrono.AssembledChronology"->"(static)org.joda.time.chrono.AssembledChronology.minuteOfDay(org.joda.time.chrono.AssembledChronology )org.joda.time.DateTimeField"[label="1"]
"org.joda.time.chrono.AssembledChronology"->"(static)org.joda.time.chrono.AssembledChronology.minuteOfHour(org.joda.time.chrono.AssembledChronology )org.joda.time.DateTimeField"[label="1"]
"org.joda.time.chrono.AssembledChronology"->"(static)org.joda.time.chrono.AssembledChronology.minutes(org.joda.time.chrono.AssembledChronology )org.joda.time.DurationField"[label="1"]
"org.joda.time.chrono.AssembledChronology"->"(static)org.joda.time.chrono.AssembledChronology.monthOfYear(org.joda.time.chrono.AssembledChronology )org.joda.time.DateTimeField"[label="1"]
"org.joda.time.chrono.AssembledChronology"->"(static)org.joda.time.chrono.AssembledChronology.months(org.joda.time.chrono.AssembledChronology )org.joda.time.DurationField"[label="1"]
"org.joda.time.chrono.AssembledChronology"->"(static)org.joda.time.chrono.AssembledChronology.secondOfDay(org.joda.time.chrono.AssembledChronology )org.joda.time.DateTimeField"[label="1"]
"org.joda.time.chrono.AssembledChronology"->"(static)org.joda.time.chrono.AssembledChronology.secondOfMinute(org.joda.time.chrono.AssembledChronology )org.joda.time.DateTimeField"[label="1"]
"org.joda.time.chrono.AssembledChronology"->"(static)org.joda.time.chrono.AssembledChronology.seconds(org.joda.time.chrono.AssembledChronology )org.joda.time.DurationField"[label="1"]
"org.joda.time.chrono.AssembledChronology"->"(static)org.joda.time.chrono.AssembledChronology.weekOfWeekyear(org.joda.time.chrono.AssembledChronology )org.joda.time.DateTimeField"[label="1"]
"org.joda.time.chrono.AssembledChronology"->"(static)org.joda.time.chrono.AssembledChronology.weeks(org.joda.time.chrono.AssembledChronology )org.joda.time.DurationField"[label="1"]
"org.joda.time.chrono.AssembledChronology"->"(static)org.joda.time.chrono.AssembledChronology.weekyear(org.joda.time.chrono.AssembledChronology )org.joda.time.DateTimeField"[label="1"]
"org.joda.time.chrono.AssembledChronology"->"(static)org.joda.time.chrono.AssembledChronology.weekyearOfCentury(org.joda.time.chrono.AssembledChronology )org.joda.time.DateTimeField"[label="1"]
"org.joda.time.chrono.AssembledChronology"->"(static)org.joda.time.chrono.AssembledChronology.weekyears(org.joda.time.chrono.AssembledChronology )org.joda.time.DurationField"[label="1"]
"org.joda.time.chrono.AssembledChronology"->"(static)org.joda.time.chrono.AssembledChronology.year(org.joda.time.chrono.AssembledChronology )org.joda.time.DateTimeField"[label="1"]
"org.joda.time.chrono.AssembledChronology"->"(static)org.joda.time.chrono.AssembledChronology.yearOfCentury(org.joda.time.chrono.AssembledChronology )org.joda.time.DateTimeField"[label="1"]
"org.joda.time.chrono.AssembledChronology"->"(static)org.joda.time.chrono.AssembledChronology.yearOfEra(org.joda.time.chrono.AssembledChronology )org.joda.time.DateTimeField"[label="1"]
"org.joda.time.chrono.AssembledChronology"->"(static)org.joda.time.chrono.AssembledChronology.years(org.joda.time.chrono.AssembledChronology )org.joda.time.DurationField"[label="1"]
"org.joda.time.chrono.BaseChronology"->"(static)org.joda.time.chrono.BaseChronology.centuries(org.joda.time.chrono.BaseChronology )org.joda.time.DurationField"[label="1"]
"org.joda.time.chrono.BaseChronology"->"(static)org.joda.time.chrono.BaseChronology.centuryOfEra(org.joda.time.chrono.BaseChronology )org.joda.time.DateTimeField"[label="1"]
"org.joda.time.chrono.BaseChronology"->"(static)org.joda.time.chrono.BaseChronology.clockhourOfDay(org.joda.time.chrono.BaseChronology )org.joda.time.DateTimeField"[label="1"]
"org.joda.time.chrono.BaseChronology"->"(static)org.joda.time.chrono.BaseChronology.clockhourOfHalfday(org.joda.time.chrono.BaseChronology )org.joda.time.DateTimeField"[label="1"]
"org.joda.time.chrono.BaseChronology"->"(static)org.joda.time.chrono.BaseChronology.dayOfMonth(org.joda.time.chrono.BaseChronology )org.joda.time.DateTimeField"[label="1"]
"org.joda.time.chrono.BaseChronology"->"(static)org.joda.time.chrono.BaseChronology.dayOfWeek(org.joda.time.chrono.BaseChronology )org.joda.time.DateTimeField"[label="1"]
"org.joda.time.chrono.BaseChronology"->"(static)org.joda.time.chrono.BaseChronology.dayOfYear(org.joda.time.chrono.BaseChronology )org.joda.time.DateTimeField"[label="1"]
"org.joda.time.chrono.BaseChronology"->"(static)org.joda.time.chrono.BaseChronology.days(org.joda.time.chrono.BaseChronology )org.joda.time.DurationField"[label="1"]
"org.joda.time.chrono.BaseChronology"->"(static)org.joda.time.chrono.BaseChronology.era(org.joda.time.chrono.BaseChronology )org.joda.time.DateTimeField"[label="1"]
"org.joda.time.chrono.BaseChronology"->"(static)org.joda.time.chrono.BaseChronology.eras(org.joda.time.chrono.BaseChronology )org.joda.time.DurationField"[label="1"]
"org.joda.time.chrono.BaseChronology"->"(static)org.joda.time.chrono.BaseChronology.get(org.joda.time.chrono.BaseChronology org.joda.time.ReadablePartial long )int[]"[label="1"]
"org.joda.time.chrono.BaseChronology"->"(static)org.joda.time.chrono.BaseChronology.get(org.joda.time.chrono.BaseChronology org.joda.time.ReadablePeriod long )int[]"[label="1"]
"org.joda.time.chrono.BaseChronology"->"(static)org.joda.time.chrono.BaseChronology.getZone(org.joda.time.chrono.BaseChronology )org.joda.time.DateTimeZone"[label="1"]
"org.joda.time.chrono.BaseChronology"->"(static)org.joda.time.chrono.BaseChronology.halfdayOfDay(org.joda.time.chrono.BaseChronology )org.joda.time.DateTimeField"[label="1"]
"org.joda.time.chrono.BaseChronology"->"(static)org.joda.time.chrono.BaseChronology.halfdays(org.joda.time.chrono.BaseChronology )org.joda.time.DurationField"[label="1"]
"org.joda.time.chrono.BaseChronology"->"(static)org.joda.time.chrono.BaseChronology.hourOfDay(org.joda.time.chrono.BaseChronology )org.joda.time.DateTimeField"[label="1"]
"org.joda.time.chrono.BaseChronology"->"(static)org.joda.time.chrono.BaseChronology.hourOfHalfday(org.joda.time.chrono.BaseChronology )org.joda.time.DateTimeField"[label="1"]
"org.joda.time.chrono.BaseChronology"->"(static)org.joda.time.chrono.BaseChronology.hours(org.joda.time.chrono.BaseChronology )org.joda.time.DurationField"[label="1"]
"org.joda.time.chrono.BaseChronology"->"(static)org.joda.time.chrono.BaseChronology.millis(org.joda.time.chrono.BaseChronology )org.joda.time.DurationField"[label="1"]
"org.joda.time.chrono.BaseChronology"->"(static)org.joda.time.chrono.BaseChronology.millisOfDay(org.joda.time.chrono.BaseChronology )org.joda.time.DateTimeField"[label="1"]
"org.joda.time.chrono.BaseChronology"->"(static)org.joda.time.chrono.BaseChronology.millisOfSecond(org.joda.time.chrono.BaseChronology )org.joda.time.DateTimeField"[label="1"]
"org.joda.time.chrono.BaseChronology"->"(static)org.joda.time.chrono.BaseChronology.minuteOfDay(org.joda.time.chrono.BaseChronology )org.joda.time.DateTimeField"[label="1"]
"org.joda.time.chrono.BaseChronology"->"(static)org.joda.time.chrono.BaseChronology.minuteOfHour(org.joda.time.chrono.BaseChronology )org.joda.time.DateTimeField"[label="1"]
"org.joda.time.chrono.BaseChronology"->"(static)org.joda.time.chrono.BaseChronology.minutes(org.joda.time.chrono.BaseChronology )org.joda.time.DurationField"[label="1"]
"org.joda.time.chrono.BaseChronology"->"(static)org.joda.time.chrono.BaseChronology.monthOfYear(org.joda.time.chrono.BaseChronology )org.joda.time.DateTimeField"[label="1"]
"org.joda.time.chrono.BaseChronology"->"(static)org.joda.time.chrono.BaseChronology.months(org.joda.time.chrono.BaseChronology )org.joda.time.DurationField"[label="1"]
"org.joda.time.chrono.BaseChronology"->"(static)org.joda.time.chrono.BaseChronology.secondOfDay(org.joda.time.chrono.BaseChronology )org.joda.time.DateTimeField"[label="1"]
"org.joda.time.chrono.BaseChronology"->"(static)org.joda.time.chrono.BaseChronology.secondOfMinute(org.joda.time.chrono.BaseChronology )org.joda.time.DateTimeField"[label="1"]
"org.joda.time.chrono.BaseChronology"->"(static)org.joda.time.chrono.BaseChronology.seconds(org.joda.time.chrono.BaseChronology )org.joda.time.DurationField"[label="1"]
"org.joda.time.chrono.BaseChronology"->"(static)org.joda.time.chrono.BaseChronology.set(org.joda.time.chrono.BaseChronology org.joda.time.ReadablePartial long )long"[label="1"]
"org.joda.time.chrono.BaseChronology"->"(static)org.joda.time.chrono.BaseChronology.weekOfWeekyear(org.joda.time.chrono.BaseChronology )org.joda.time.DateTimeField"[label="1"]
"org.joda.time.chrono.BaseChronology"->"(static)org.joda.time.chrono.BaseChronology.weeks(org.joda.time.chrono.BaseChronology )org.joda.time.DurationField"[label="1"]
"org.joda.time.chrono.BaseChronology"->"(static)org.joda.time.chrono.BaseChronology.weekyear(org.joda.time.chrono.BaseChronology )org.joda.time.DateTimeField"[label="1"]
"org.joda.time.chrono.BaseChronology"->"(static)org.joda.time.chrono.BaseChronology.weekyearOfCentury(org.joda.time.chrono.BaseChronology )org.joda.time.DateTimeField"[label="1"]
"org.joda.time.chrono.BaseChronology"->"(static)org.joda.time.chrono.BaseChronology.weekyears(org.joda.time.chrono.BaseChronology )org.joda.time.DurationField"[label="1"]
"org.joda.time.chrono.BaseChronology"->"(static)org.joda.time.chrono.BaseChronology.withUTC(org.joda.time.chrono.BaseChronology )org.joda.time.Chronology"[label="1"]
"org.joda.time.chrono.BaseChronology"->"(static)org.joda.time.chrono.BaseChronology.withZone(org.joda.time.chrono.BaseChronology org.joda.time.DateTimeZone )org.joda.time.Chronology"[label="1"]
"org.joda.time.chrono.BaseChronology"->"(static)org.joda.time.chrono.BaseChronology.year(org.joda.time.chrono.BaseChronology )org.joda.time.DateTimeField"[label="1"]
"org.joda.time.chrono.BaseChronology"->"(static)org.joda.time.chrono.BaseChronology.yearOfCentury(org.joda.time.chrono.BaseChronology )org.joda.time.DateTimeField"[label="1"]
"org.joda.time.chrono.BaseChronology"->"(static)org.joda.time.chrono.BaseChronology.yearOfEra(org.joda.time.chrono.BaseChronology )org.joda.time.DateTimeField"[label="1"]
"org.joda.time.chrono.BaseChronology"->"(static)org.joda.time.chrono.BaseChronology.years(org.joda.time.chrono.BaseChronology )org.joda.time.DurationField"[label="1"]
"org.joda.time.chrono.BasicChronology"->"(static)org.joda.time.chrono.BasicChronology.equals(org.joda.time.chrono.BasicChronology java.lang.Object )boolean"[label="1"]
"org.joda.time.chrono.BasicChronology"->"(static)org.joda.time.chrono.BasicChronology.getMinimumDaysInFirstWeek(org.joda.time.chrono.BasicChronology )int"[label="1"]
"org.joda.time.chrono.BasicChronology"->"(static)org.joda.time.chrono.BasicChronology.getZone(org.joda.time.chrono.BasicChronology )org.joda.time.DateTimeZone"[label="1"]
"org.joda.time.chrono.BasicChronology$HalfdayField"->"(static)org.joda.time.chrono.BasicChronology$HalfdayField.getAsText(org.joda.time.chrono.BasicChronology$HalfdayField int java.util.Locale )java.lang.String"[label="1"]
"org.joda.time.chrono.BasicChronology$HalfdayField"->"(static)org.joda.time.chrono.BasicChronology$HalfdayField.getMaximumTextLength(org.joda.time.chrono.BasicChronology$HalfdayField java.util.Locale )int"[label="1"]
"org.joda.time.chrono.BasicDayOfMonthDateTimeField"->"(static)org.joda.time.chrono.BasicDayOfMonthDateTimeField.get(org.joda.time.chrono.BasicDayOfMonthDateTimeField long )int"[label="1"]
"org.joda.time.chrono.BasicDayOfMonthDateTimeField"->"(static)org.joda.time.chrono.BasicDayOfMonthDateTimeField.getMaximumValue(org.joda.time.chrono.BasicDayOfMonthDateTimeField )int"[label="1"]
"org.joda.time.chrono.BasicDayOfMonthDateTimeField"->"(static)org.joda.time.chrono.BasicDayOfMonthDateTimeField.getMaximumValue(org.joda.time.chrono.BasicDayOfMonthDateTimeField long )int"[label="1"]
"org.joda.time.chrono.BasicDayOfMonthDateTimeField"->"(static)org.joda.time.chrono.BasicDayOfMonthDateTimeField.getMaximumValue(org.joda.time.chrono.BasicDayOfMonthDateTimeField org.joda.time.ReadablePartial )int"[label="1"]
"org.joda.time.chrono.BasicDayOfMonthDateTimeField"->"(static)org.joda.time.chrono.BasicDayOfMonthDateTimeField.getMaximumValue(org.joda.time.chrono.BasicDayOfMonthDateTimeField org.joda.time.ReadablePartial int[] )int"[label="1"]
"org.joda.time.chrono.BasicDayOfMonthDateTimeField"->"(static)org.joda.time.chrono.BasicDayOfMonthDateTimeField.getMinimumValue(org.joda.time.chrono.BasicDayOfMonthDateTimeField )int"[label="1"]
"org.joda.time.chrono.BasicDayOfMonthDateTimeField"->"(static)org.joda.time.chrono.BasicDayOfMonthDateTimeField.getRangeDurationField(org.joda.time.chrono.BasicDayOfMonthDateTimeField )org.joda.time.DurationField"[label="1"]
"org.joda.time.chrono.BasicDayOfMonthDateTimeField"->"(static)org.joda.time.chrono.BasicDayOfMonthDateTimeField.isLeap(org.joda.time.chrono.BasicDayOfMonthDateTimeField long )boolean"[label="1"]
"org.joda.time.chrono.BasicDayOfYearDateTimeField"->"(static)org.joda.time.chrono.BasicDayOfYearDateTimeField.get(org.joda.time.chrono.BasicDayOfYearDateTimeField long )int"[label="1"]
"org.joda.time.chrono.BasicDayOfYearDateTimeField"->"(static)org.joda.time.chrono.BasicDayOfYearDateTimeField.getMaximumValue(org.joda.time.chrono.BasicDayOfYearDateTimeField )int"[label="1"]
"org.joda.time.chrono.BasicDayOfYearDateTimeField"->"(static)org.joda.time.chrono.BasicDayOfYearDateTimeField.getMaximumValue(org.joda.time.chrono.BasicDayOfYearDateTimeField long )int"[label="1"]
"org.joda.time.chrono.BasicDayOfYearDateTimeField"->"(static)org.joda.time.chrono.BasicDayOfYearDateTimeField.getMaximumValue(org.joda.time.chrono.BasicDayOfYearDateTimeField org.joda.time.ReadablePartial )int"[label="1"]
"org.joda.time.chrono.BasicDayOfYearDateTimeField"->"(static)org.joda.time.chrono.BasicDayOfYearDateTimeField.getMaximumValue(org.joda.time.chrono.BasicDayOfYearDateTimeField org.joda.time.ReadablePartial int[] )int"[label="1"]
"org.joda.time.chrono.BasicDayOfYearDateTimeField"->"(static)org.joda.time.chrono.BasicDayOfYearDateTimeField.getMinimumValue(org.joda.time.chrono.BasicDayOfYearDateTimeField )int"[label="1"]
"org.joda.time.chrono.BasicDayOfYearDateTimeField"->"(static)org.joda.time.chrono.BasicDayOfYearDateTimeField.getRangeDurationField(org.joda.time.chrono.BasicDayOfYearDateTimeField )org.joda.time.DurationField"[label="1"]
"org.joda.time.chrono.BasicDayOfYearDateTimeField"->"(static)org.joda.time.chrono.BasicDayOfYearDateTimeField.isLeap(org.joda.time.chrono.BasicDayOfYearDateTimeField long )boolean"[label="1"]
"org.joda.time.chrono.BasicMonthOfYearDateTimeField"->"(static)org.joda.time.chrono.BasicMonthOfYearDateTimeField.addWrapField(org.joda.time.chrono.BasicMonthOfYearDateTimeField long int )long"[label="1"]
"org.joda.time.chrono.BasicMonthOfYearDateTimeField"->"(static)org.joda.time.chrono.BasicMonthOfYearDateTimeField.get(org.joda.time.chrono.BasicMonthOfYearDateTimeField long )int"[label="1"]
"org.joda.time.chrono.BasicMonthOfYearDateTimeField"->"(static)org.joda.time.chrono.BasicMonthOfYearDateTimeField.getDifferenceAsLong(org.joda.time.chrono.BasicMonthOfYearDateTimeField long long )long"[label="1"]
"org.joda.time.chrono.BasicMonthOfYearDateTimeField"->"(static)org.joda.time.chrono.BasicMonthOfYearDateTimeField.getLeapAmount(org.joda.time.chrono.BasicMonthOfYearDateTimeField long )int"[label="1"]
"org.joda.time.chrono.BasicMonthOfYearDateTimeField"->"(static)org.joda.time.chrono.BasicMonthOfYearDateTimeField.getLeapDurationField(org.joda.time.chrono.BasicMonthOfYearDateTimeField )org.joda.time.DurationField"[label="1"]
"org.joda.time.chrono.BasicMonthOfYearDateTimeField"->"(static)org.joda.time.chrono.BasicMonthOfYearDateTimeField.getMaximumValue(org.joda.time.chrono.BasicMonthOfYearDateTimeField )int"[label="1"]
"org.joda.time.chrono.BasicMonthOfYearDateTimeField"->"(static)org.joda.time.chrono.BasicMonthOfYearDateTimeField.getMinimumValue(org.joda.time.chrono.BasicMonthOfYearDateTimeField )int"[label="1"]
"org.joda.time.chrono.BasicMonthOfYearDateTimeField"->"(static)org.joda.time.chrono.BasicMonthOfYearDateTimeField.getRangeDurationField(org.joda.time.chrono.BasicMonthOfYearDateTimeField )org.joda.time.DurationField"[label="1"]
"org.joda.time.chrono.BasicMonthOfYearDateTimeField"->"(static)org.joda.time.chrono.BasicMonthOfYearDateTimeField.isLeap(org.joda.time.chrono.BasicMonthOfYearDateTimeField long )boolean"[label="1"]
"org.joda.time.chrono.BasicMonthOfYearDateTimeField"->"(static)org.joda.time.chrono.BasicMonthOfYearDateTimeField.isLenient(org.joda.time.chrono.BasicMonthOfYearDateTimeField )boolean"[label="1"]
"org.joda.time.chrono.BasicMonthOfYearDateTimeField"->"(static)org.joda.time.chrono.BasicMonthOfYearDateTimeField.remainder(org.joda.time.chrono.BasicMonthOfYearDateTimeField long )long"[label="1"]
"org.joda.time.chrono.BasicMonthOfYearDateTimeField"->"(static)org.joda.time.chrono.BasicMonthOfYearDateTimeField.roundFloor(org.joda.time.chrono.BasicMonthOfYearDateTimeField long )long"[label="1"]
"org.joda.time.chrono.BasicMonthOfYearDateTimeField"->"(static)org.joda.time.chrono.BasicMonthOfYearDateTimeField.set(org.joda.time.chrono.BasicMonthOfYearDateTimeField long int )long"[label="1"]
"org.joda.time.chrono.BasicSingleEraDateTimeField"->"(static)org.joda.time.chrono.BasicSingleEraDateTimeField.get(org.joda.time.chrono.BasicSingleEraDateTimeField long )int"[label="1"]
"org.joda.time.chrono.BasicSingleEraDateTimeField"->"(static)org.joda.time.chrono.BasicSingleEraDateTimeField.getAsText(org.joda.time.chrono.BasicSingleEraDateTimeField int java.util.Locale )java.lang.String"[label="1"]
"org.joda.time.chrono.BasicSingleEraDateTimeField"->"(static)org.joda.time.chrono.BasicSingleEraDateTimeField.getDurationField(org.joda.time.chrono.BasicSingleEraDateTimeField )org.joda.time.DurationField"[label="1"]
"org.joda.time.chrono.BasicSingleEraDateTimeField"->"(static)org.joda.time.chrono.BasicSingleEraDateTimeField.getMaximumTextLength(org.joda.time.chrono.BasicSingleEraDateTimeField java.util.Locale )int"[label="1"]
"org.joda.time.chrono.BasicSingleEraDateTimeField"->"(static)org.joda.time.chrono.BasicSingleEraDateTimeField.getMaximumValue(org.joda.time.chrono.BasicSingleEraDateTimeField )int"[label="1"]
"org.joda.time.chrono.BasicSingleEraDateTimeField"->"(static)org.joda.time.chrono.BasicSingleEraDateTimeField.getMinimumValue(org.joda.time.chrono.BasicSingleEraDateTimeField )int"[label="1"]
"org.joda.time.chrono.BasicSingleEraDateTimeField"->"(static)org.joda.time.chrono.BasicSingleEraDateTimeField.getRangeDurationField(org.joda.time.chrono.BasicSingleEraDateTimeField )org.joda.time.DurationField"[label="1"]
"org.joda.time.chrono.BasicSingleEraDateTimeField"->"(static)org.joda.time.chrono.BasicSingleEraDateTimeField.isLenient(org.joda.time.chrono.BasicSingleEraDateTimeField )boolean"[label="1"]
"org.joda.time.chrono.BasicSingleEraDateTimeField"->"(static)org.joda.time.chrono.BasicSingleEraDateTimeField.roundCeiling(org.joda.time.chrono.BasicSingleEraDateTimeField long )long"[label="1"]
"org.joda.time.chrono.BasicSingleEraDateTimeField"->"(static)org.joda.time.chrono.BasicSingleEraDateTimeField.roundFloor(org.joda.time.chrono.BasicSingleEraDateTimeField long )long"[label="1"]
"org.joda.time.chrono.BasicSingleEraDateTimeField"->"(static)org.joda.time.chrono.BasicSingleEraDateTimeField.roundHalfCeiling(org.joda.time.chrono.BasicSingleEraDateTimeField long )long"[label="1"]
"org.joda.time.chrono.BasicSingleEraDateTimeField"->"(static)org.joda.time.chrono.BasicSingleEraDateTimeField.roundHalfEven(org.joda.time.chrono.BasicSingleEraDateTimeField long )long"[label="1"]
"org.joda.time.chrono.BasicSingleEraDateTimeField"->"(static)org.joda.time.chrono.BasicSingleEraDateTimeField.roundHalfFloor(org.joda.time.chrono.BasicSingleEraDateTimeField long )long"[label="1"]
"org.joda.time.chrono.BasicSingleEraDateTimeField"->"(static)org.joda.time.chrono.BasicSingleEraDateTimeField.set(org.joda.time.chrono.BasicSingleEraDateTimeField long int )long"[label="1"]
"org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField"->"(static)org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField.get(org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField long )int"[label="1"]
"org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField"->"(static)org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField.getMaximumValue(org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField )int"[label="1"]
"org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField"->"(static)org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField.getMaximumValue(org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField long )int"[label="1"]
"org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField"->"(static)org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField.getMaximumValue(org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField org.joda.time.ReadablePartial )int"[label="1"]
"org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField"->"(static)org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField.getMaximumValue(org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField org.joda.time.ReadablePartial int[] )int"[label="1"]
"org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField"->"(static)org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField.getMinimumValue(org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField )int"[label="1"]
"org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField"->"(static)org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField.getRangeDurationField(org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField )org.joda.time.DurationField"[label="1"]
"org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField"->"(static)org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField.remainder(org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField long )long"[label="1"]
"org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField"->"(static)org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField.roundCeiling(org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField long )long"[label="1"]
"org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField"->"(static)org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField.roundFloor(org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField long )long"[label="1"]
"org.joda.time.chrono.BasicWeekyearDateTimeField"->"(static)org.joda.time.chrono.BasicWeekyearDateTimeField.addWrapField(org.joda.time.chrono.BasicWeekyearDateTimeField long int )long"[label="1"]
"org.joda.time.chrono.BasicWeekyearDateTimeField"->"(static)org.joda.time.chrono.BasicWeekyearDateTimeField.get(org.joda.time.chrono.BasicWeekyearDateTimeField long )int"[label="1"]
"org.joda.time.chrono.BasicWeekyearDateTimeField"->"(static)org.joda.time.chrono.BasicWeekyearDateTimeField.getDifferenceAsLong(org.joda.time.chrono.BasicWeekyearDateTimeField long long )long"[label="1"]
"org.joda.time.chrono.BasicWeekyearDateTimeField"->"(static)org.joda.time.chrono.BasicWeekyearDateTimeField.getLeapAmount(org.joda.time.chrono.BasicWeekyearDateTimeField long )int"[label="1"]
"org.joda.time.chrono.BasicWeekyearDateTimeField"->"(static)org.joda.time.chrono.BasicWeekyearDateTimeField.getLeapDurationField(org.joda.time.chrono.BasicWeekyearDateTimeField )org.joda.time.DurationField"[label="1"]
"org.joda.time.chrono.BasicWeekyearDateTimeField"->"(static)org.joda.time.chrono.BasicWeekyearDateTimeField.getMaximumValue(org.joda.time.chrono.BasicWeekyearDateTimeField )int"[label="1"]
"org.joda.time.chrono.BasicWeekyearDateTimeField"->"(static)org.joda.time.chrono.BasicWeekyearDateTimeField.getMinimumValue(org.joda.time.chrono.BasicWeekyearDateTimeField )int"[label="1"]
"org.joda.time.chrono.BasicWeekyearDateTimeField"->"(static)org.joda.time.chrono.BasicWeekyearDateTimeField.getRangeDurationField(org.joda.time.chrono.BasicWeekyearDateTimeField )org.joda.time.DurationField"[label="1"]
"org.joda.time.chrono.BasicWeekyearDateTimeField"->"(static)org.joda.time.chrono.BasicWeekyearDateTimeField.isLeap(org.joda.time.chrono.BasicWeekyearDateTimeField long )boolean"[label="1"]
"org.joda.time.chrono.BasicWeekyearDateTimeField"->"(static)org.joda.time.chrono.BasicWeekyearDateTimeField.isLenient(org.joda.time.chrono.BasicWeekyearDateTimeField )boolean"[label="1"]
"org.joda.time.chrono.BasicWeekyearDateTimeField"->"(static)org.joda.time.chrono.BasicWeekyearDateTimeField.remainder(org.joda.time.chrono.BasicWeekyearDateTimeField long )long"[label="1"]
"org.joda.time.chrono.BasicWeekyearDateTimeField"->"(static)org.joda.time.chrono.BasicWeekyearDateTimeField.roundFloor(org.joda.time.chrono.BasicWeekyearDateTimeField long )long"[label="1"]
"org.joda.time.chrono.BasicWeekyearDateTimeField"->"(static)org.joda.time.chrono.BasicWeekyearDateTimeField.set(org.joda.time.chrono.BasicWeekyearDateTimeField long int )long"[label="1"]
"org.joda.time.chrono.BasicYearDateTimeField"->"(static)org.joda.time.chrono.BasicYearDateTimeField.addWrapField(org.joda.time.chrono.BasicYearDateTimeField long int )long"[label="1"]
"org.joda.time.chrono.BasicYearDateTimeField"->"(static)org.joda.time.chrono.BasicYearDateTimeField.get(org.joda.time.chrono.BasicYearDateTimeField long )int"[label="1"]
"org.joda.time.chrono.BasicYearDateTimeField"->"(static)org.joda.time.chrono.BasicYearDateTimeField.getDifferenceAsLong(org.joda.time.chrono.BasicYearDateTimeField long long )long"[label="1"]
"org.joda.time.chrono.BasicYearDateTimeField"->"(static)org.joda.time.chrono.BasicYearDateTimeField.getLeapAmount(org.joda.time.chrono.BasicYearDateTimeField long )int"[label="1"]
"org.joda.time.chrono.BasicYearDateTimeField"->"(static)org.joda.time.chrono.BasicYearDateTimeField.getLeapDurationField(org.joda.time.chrono.BasicYearDateTimeField )org.joda.time.DurationField"[label="1"]
"org.joda.time.chrono.BasicYearDateTimeField"->"(static)org.joda.time.chrono.BasicYearDateTimeField.getMaximumValue(org.joda.time.chrono.BasicYearDateTimeField )int"[label="1"]
"org.joda.time.chrono.BasicYearDateTimeField"->"(static)org.joda.time.chrono.BasicYearDateTimeField.getMinimumValue(org.joda.time.chrono.BasicYearDateTimeField )int"[label="1"]
"org.joda.time.chrono.BasicYearDateTimeField"->"(static)org.joda.time.chrono.BasicYearDateTimeField.getRangeDurationField(org.joda.time.chrono.BasicYearDateTimeField )org.joda.time.DurationField"[label="1"]
"org.joda.time.chrono.BasicYearDateTimeField"->"(static)org.joda.time.chrono.BasicYearDateTimeField.isLeap(org.joda.time.chrono.BasicYearDateTimeField long )boolean"[label="1"]
"org.joda.time.chrono.BasicYearDateTimeField"->"(static)org.joda.time.chrono.BasicYearDateTimeField.isLenient(org.joda.time.chrono.BasicYearDateTimeField )boolean"[label="1"]
"org.joda.time.chrono.BasicYearDateTimeField"->"(static)org.joda.time.chrono.BasicYearDateTimeField.remainder(org.joda.time.chrono.BasicYearDateTimeField long )long"[label="1"]
"org.joda.time.chrono.BasicYearDateTimeField"->"(static)org.joda.time.chrono.BasicYearDateTimeField.roundCeiling(org.joda.time.chrono.BasicYearDateTimeField long )long"[label="1"]
"org.joda.time.chrono.BasicYearDateTimeField"->"(static)org.joda.time.chrono.BasicYearDateTimeField.roundFloor(org.joda.time.chrono.BasicYearDateTimeField long )long"[label="1"]
"org.joda.time.chrono.BasicYearDateTimeField"->"(static)org.joda.time.chrono.BasicYearDateTimeField.set(org.joda.time.chrono.BasicYearDateTimeField long int )long"[label="1"]
"org.joda.time.chrono.BuddhistChronology"->"(static)org.joda.time.chrono.BuddhistChronology.equals(org.joda.time.chrono.BuddhistChronology java.lang.Object )boolean"[label="1"]
"org.joda.time.chrono.BuddhistChronology"->"(static)org.joda.time.chrono.BuddhistChronology.withUTC(org.joda.time.chrono.BuddhistChronology )org.joda.time.Chronology"[label="1"]
"org.joda.time.chrono.BuddhistChronology"->"(static)org.joda.time.chrono.BuddhistChronology.withZone(org.joda.time.chrono.BuddhistChronology org.joda.time.DateTimeZone )org.joda.time.Chronology"[label="1"]
"org.joda.time.chrono.CopticChronology"->"(static)org.joda.time.chrono.CopticChronology.withUTC(org.joda.time.chrono.CopticChronology )org.joda.time.Chronology"[label="1"]
"org.joda.time.chrono.CopticChronology"->"(static)org.joda.time.chrono.CopticChronology.withZone(org.joda.time.chrono.CopticChronology org.joda.time.DateTimeZone )org.joda.time.Chronology"[label="1"]
"org.joda.time.chrono.EthiopicChronology"->"(static)org.joda.time.chrono.EthiopicChronology.withUTC(org.joda.time.chrono.EthiopicChronology )org.joda.time.Chronology"[label="1"]
"org.joda.time.chrono.EthiopicChronology"->"(static)org.joda.time.chrono.EthiopicChronology.withZone(org.joda.time.chrono.EthiopicChronology org.joda.time.DateTimeZone )org.joda.time.Chronology"[label="1"]
"org.joda.time.chrono.GJCacheKey"->"(static)org.joda.time.chrono.GJCacheKey.equals(org.joda.time.chrono.GJCacheKey java.lang.Object )boolean"[label="1"]
"org.joda.time.chrono.GJChronology"->"(static)org.joda.time.chrono.GJChronology.equals(org.joda.time.chrono.GJChronology java.lang.Object )boolean"[label="1"]
"org.joda.time.chrono.GJChronology"->"(static)org.joda.time.chrono.GJChronology.getGregorianCutover(org.joda.time.chrono.GJChronology )org.joda.time.Instant"[label="1"]
"org.joda.time.chrono.GJChronology"->"(static)org.joda.time.chrono.GJChronology.getMinimumDaysInFirstWeek(org.joda.time.chrono.GJChronology )int"[label="1"]
"org.joda.time.chrono.GJChronology"->"(static)org.joda.time.chrono.GJChronology.getZone(org.joda.time.chrono.GJChronology )org.joda.time.DateTimeZone"[label="1"]
"org.joda.time.chrono.GJChronology"->"(static)org.joda.time.chrono.GJChronology.withUTC(org.joda.time.chrono.GJChronology )org.joda.time.Chronology"[label="1"]
"org.joda.time.chrono.GJChronology"->"(static)org.joda.time.chrono.GJChronology.withZone(org.joda.time.chrono.GJChronology org.joda.time.DateTimeZone )org.joda.time.Chronology"[label="1"]
"org.joda.time.chrono.GJChronology$CutoverField"->"(static)org.joda.time.chrono.GJChronology$CutoverField.get(org.joda.time.chrono.GJChronology$CutoverField long )int"[label="1"]
"org.joda.time.chrono.GJChronology$CutoverField"->"(static)org.joda.time.chrono.GJChronology$CutoverField.getAsShortText(org.joda.time.chrono.GJChronology$CutoverField int java.util.Locale )java.lang.String"[label="1"]
"org.joda.time.chrono.GJChronology$CutoverField"->"(static)org.joda.time.chrono.GJChronology$CutoverField.getAsShortText(org.joda.time.chrono.GJChronology$CutoverField long java.util.Locale )java.lang.String"[label="1"]
"org.joda.time.chrono.GJChronology$CutoverField"->"(static)org.joda.time.chrono.GJChronology$CutoverField.getAsText(org.joda.time.chrono.GJChronology$CutoverField int java.util.Locale )java.lang.String"[label="1"]
"org.joda.time.chrono.GJChronology$CutoverField"->"(static)org.joda.time.chrono.GJChronology$CutoverField.getAsText(org.joda.time.chrono.GJChronology$CutoverField long java.util.Locale )java.lang.String"[label="1"]
"org.joda.time.chrono.GJChronology$CutoverField"->"(static)org.joda.time.chrono.GJChronology$CutoverField.getDifference(org.joda.time.chrono.GJChronology$CutoverField long long )int"[label="1"]
"org.joda.time.chrono.GJChronology$CutoverField"->"(static)org.joda.time.chrono.GJChronology$CutoverField.getDifferenceAsLong(org.joda.time.chrono.GJChronology$CutoverField long long )long"[label="1"]
"org.joda.time.chrono.GJChronology$CutoverField"->"(static)org.joda.time.chrono.GJChronology$CutoverField.getDurationField(org.joda.time.chrono.GJChronology$CutoverField )org.joda.time.DurationField"[label="1"]
"org.joda.time.chrono.GJChronology$CutoverField"->"(static)org.joda.time.chrono.GJChronology$CutoverField.getLeapAmount(org.joda.time.chrono.GJChronology$CutoverField long )int"[label="1"]
"org.joda.time.chrono.GJChronology$CutoverField"->"(static)org.joda.time.chrono.GJChronology$CutoverField.getLeapDurationField(org.joda.time.chrono.GJChronology$CutoverField )org.joda.time.DurationField"[label="1"]
"org.joda.time.chrono.GJChronology$CutoverField"->"(static)org.joda.time.chrono.GJChronology$CutoverField.getMaximumShortTextLength(org.joda.time.chrono.GJChronology$CutoverField java.util.Locale )int"[label="1"]
"org.joda.time.chrono.GJChronology$CutoverField"->"(static)org.joda.time.chrono.GJChronology$CutoverField.getMaximumTextLength(org.joda.time.chrono.GJChronology$CutoverField java.util.Locale )int"[label="1"]
"org.joda.time.chrono.GJChronology$CutoverField"->"(static)org.joda.time.chrono.GJChronology$CutoverField.getMaximumValue(org.joda.time.chrono.GJChronology$CutoverField )int"[label="1"]
"org.joda.time.chrono.GJChronology$CutoverField"->"(static)org.joda.time.chrono.GJChronology$CutoverField.getMaximumValue(org.joda.time.chrono.GJChronology$CutoverField long )int"[label="1"]
"org.joda.time.chrono.GJChronology$CutoverField"->"(static)org.joda.time.chrono.GJChronology$CutoverField.getMaximumValue(org.joda.time.chrono.GJChronology$CutoverField org.joda.time.ReadablePartial )int"[label="1"]
"org.joda.time.chrono.GJChronology$CutoverField"->"(static)org.joda.time.chrono.GJChronology$CutoverField.getMaximumValue(org.joda.time.chrono.GJChronology$CutoverField org.joda.time.ReadablePartial int[] )int"[label="1"]
"org.joda.time.chrono.GJChronology$CutoverField"->"(static)org.joda.time.chrono.GJChronology$CutoverField.getMinimumValue(org.joda.time.chrono.GJChronology$CutoverField )int"[label="1"]
"org.joda.time.chrono.GJChronology$CutoverField"->"(static)org.joda.time.chrono.GJChronology$CutoverField.getMinimumValue(org.joda.time.chrono.GJChronology$CutoverField long )int"[label="1"]
"org.joda.time.chrono.GJChronology$CutoverField"->"(static)org.joda.time.chrono.GJChronology$CutoverField.getMinimumValue(org.joda.time.chrono.GJChronology$CutoverField org.joda.time.ReadablePartial )int"[label="1"]
"org.joda.time.chrono.GJChronology$CutoverField"->"(static)org.joda.time.chrono.GJChronology$CutoverField.getMinimumValue(org.joda.time.chrono.GJChronology$CutoverField org.joda.time.ReadablePartial int[] )int"[label="1"]
"org.joda.time.chrono.GJChronology$CutoverField"->"(static)org.joda.time.chrono.GJChronology$CutoverField.getRangeDurationField(org.joda.time.chrono.GJChronology$CutoverField )org.joda.time.DurationField"[label="1"]
"org.joda.time.chrono.GJChronology$CutoverField"->"(static)org.joda.time.chrono.GJChronology$CutoverField.isLeap(org.joda.time.chrono.GJChronology$CutoverField long )boolean"[label="1"]
"org.joda.time.chrono.GJChronology$CutoverField"->"(static)org.joda.time.chrono.GJChronology$CutoverField.isLenient(org.joda.time.chrono.GJChronology$CutoverField )boolean"[label="1"]
"org.joda.time.chrono.GJChronology$CutoverField"->"(static)org.joda.time.chrono.GJChronology$CutoverField.roundCeiling(org.joda.time.chrono.GJChronology$CutoverField long )long"[label="1"]
"org.joda.time.chrono.GJChronology$CutoverField"->"(static)org.joda.time.chrono.GJChronology$CutoverField.roundFloor(org.joda.time.chrono.GJChronology$CutoverField long )long"[label="1"]
"org.joda.time.chrono.GJChronology$CutoverField"->"(static)org.joda.time.chrono.GJChronology$CutoverField.set(org.joda.time.chrono.GJChronology$CutoverField long int )long"[label="1"]
"org.joda.time.chrono.GJChronology$ImpreciseCutoverField"->"(static)org.joda.time.chrono.GJChronology$ImpreciseCutoverField.getDifference(org.joda.time.chrono.GJChronology$ImpreciseCutoverField long long )int"[label="1"]
"org.joda.time.chrono.GJChronology$ImpreciseCutoverField"->"(static)org.joda.time.chrono.GJChronology$ImpreciseCutoverField.getDifferenceAsLong(org.joda.time.chrono.GJChronology$ImpreciseCutoverField long long )long"[label="1"]
"org.joda.time.chrono.GJChronology$ImpreciseCutoverField"->"(static)org.joda.time.chrono.GJChronology$ImpreciseCutoverField.getMaximumValue(org.joda.time.chrono.GJChronology$ImpreciseCutoverField long )int"[label="1"]
"org.joda.time.chrono.GJChronology$ImpreciseCutoverField"->"(static)org.joda.time.chrono.GJChronology$ImpreciseCutoverField.getMinimumValue(org.joda.time.chrono.GJChronology$ImpreciseCutoverField long )int"[label="1"]
"org.joda.time.chrono.GJChronology$LinkedDurationField"->"(static)org.joda.time.chrono.GJChronology$LinkedDurationField.getDifference(org.joda.time.chrono.GJChronology$LinkedDurationField long long )int"[label="1"]
"org.joda.time.chrono.GJChronology$LinkedDurationField"->"(static)org.joda.time.chrono.GJChronology$LinkedDurationField.getDifferenceAsLong(org.joda.time.chrono.GJChronology$LinkedDurationField long long )long"[label="1"]
"org.joda.time.chrono.GJDayOfWeekDateTimeField"->"(static)org.joda.time.chrono.GJDayOfWeekDateTimeField.get(org.joda.time.chrono.GJDayOfWeekDateTimeField long )int"[label="1"]
"org.joda.time.chrono.GJDayOfWeekDateTimeField"->"(static)org.joda.time.chrono.GJDayOfWeekDateTimeField.getAsShortText(org.joda.time.chrono.GJDayOfWeekDateTimeField int java.util.Locale )java.lang.String"[label="1"]
"org.joda.time.chrono.GJDayOfWeekDateTimeField"->"(static)org.joda.time.chrono.GJDayOfWeekDateTimeField.getAsText(org.joda.time.chrono.GJDayOfWeekDateTimeField int java.util.Locale )java.lang.String"[label="1"]
"org.joda.time.chrono.GJDayOfWeekDateTimeField"->"(static)org.joda.time.chrono.GJDayOfWeekDateTimeField.getMaximumShortTextLength(org.joda.time.chrono.GJDayOfWeekDateTimeField java.util.Locale )int"[label="1"]
"org.joda.time.chrono.GJDayOfWeekDateTimeField"->"(static)org.joda.time.chrono.GJDayOfWeekDateTimeField.getMaximumTextLength(org.joda.time.chrono.GJDayOfWeekDateTimeField java.util.Locale )int"[label="1"]
"org.joda.time.chrono.GJDayOfWeekDateTimeField"->"(static)org.joda.time.chrono.GJDayOfWeekDateTimeField.getMaximumValue(org.joda.time.chrono.GJDayOfWeekDateTimeField )int"[label="1"]
"org.joda.time.chrono.GJDayOfWeekDateTimeField"->"(static)org.joda.time.chrono.GJDayOfWeekDateTimeField.getMinimumValue(org.joda.time.chrono.GJDayOfWeekDateTimeField )int"[label="1"]
"org.joda.time.chrono.GJDayOfWeekDateTimeField"->"(static)org.joda.time.chrono.GJDayOfWeekDateTimeField.getRangeDurationField(org.joda.time.chrono.GJDayOfWeekDateTimeField )org.joda.time.DurationField"[label="1"]
"org.joda.time.chrono.GJEraDateTimeField"->"(static)org.joda.time.chrono.GJEraDateTimeField.get(org.joda.time.chrono.GJEraDateTimeField long )int"[label="1"]
"org.joda.time.chrono.GJEraDateTimeField"->"(static)org.joda.time.chrono.GJEraDateTimeField.getAsText(org.joda.time.chrono.GJEraDateTimeField int java.util.Locale )java.lang.String"[label="1"]
"org.joda.time.chrono.GJEraDateTimeField"->"(static)org.joda.time.chrono.GJEraDateTimeField.getDurationField(org.joda.time.chrono.GJEraDateTimeField )org.joda.time.DurationField"[label="1"]
"org.joda.time.chrono.GJEraDateTimeField"->"(static)org.joda.time.chrono.GJEraDateTimeField.getMaximumTextLength(org.joda.time.chrono.GJEraDateTimeField java.util.Locale )int"[label="1"]
"org.joda.time.chrono.GJEraDateTimeField"->"(static)org.joda.time.chrono.GJEraDateTimeField.getMaximumValue(org.joda.time.chrono.GJEraDateTimeField )int"[label="1"]
"org.joda.time.chrono.GJEraDateTimeField"->"(static)org.joda.time.chrono.GJEraDateTimeField.getMinimumValue(org.joda.time.chrono.GJEraDateTimeField )int"[label="1"]
"org.joda.time.chrono.GJEraDateTimeField"->"(static)org.joda.time.chrono.GJEraDateTimeField.getRangeDurationField(org.joda.time.chrono.GJEraDateTimeField )org.joda.time.DurationField"[label="1"]
"org.joda.time.chrono.GJEraDateTimeField"->"(static)org.joda.time.chrono.GJEraDateTimeField.isLenient(org.joda.time.chrono.GJEraDateTimeField )boolean"[label="1"]
"org.joda.time.chrono.GJEraDateTimeField"->"(static)org.joda.time.chrono.GJEraDateTimeField.roundCeiling(org.joda.time.chrono.GJEraDateTimeField long )long"[label="1"]
"org.joda.time.chrono.GJEraDateTimeField"->"(static)org.joda.time.chrono.GJEraDateTimeField.roundFloor(org.joda.time.chrono.GJEraDateTimeField long )long"[label="1"]
"org.joda.time.chrono.GJEraDateTimeField"->"(static)org.joda.time.chrono.GJEraDateTimeField.roundHalfCeiling(org.joda.time.chrono.GJEraDateTimeField long )long"[label="1"]
"org.joda.time.chrono.GJEraDateTimeField"->"(static)org.joda.time.chrono.GJEraDateTimeField.roundHalfEven(org.joda.time.chrono.GJEraDateTimeField long )long"[label="1"]
"org.joda.time.chrono.GJEraDateTimeField"->"(static)org.joda.time.chrono.GJEraDateTimeField.roundHalfFloor(org.joda.time.chrono.GJEraDateTimeField long )long"[label="1"]
"org.joda.time.chrono.GJEraDateTimeField"->"(static)org.joda.time.chrono.GJEraDateTimeField.set(org.joda.time.chrono.GJEraDateTimeField long int )long"[label="1"]
"org.joda.time.chrono.GJLocaleSymbols"->"(static)org.joda.time.chrono.GJLocaleSymbols.dayOfWeekTextToValue(org.joda.time.chrono.GJLocaleSymbols java.lang.String )int"[label="1"]
"org.joda.time.chrono.GJLocaleSymbols"->"(static)org.joda.time.chrono.GJLocaleSymbols.dayOfWeekValueToShortText(org.joda.time.chrono.GJLocaleSymbols int )java.lang.String"[label="1"]
"org.joda.time.chrono.GJLocaleSymbols"->"(static)org.joda.time.chrono.GJLocaleSymbols.dayOfWeekValueToText(org.joda.time.chrono.GJLocaleSymbols int )java.lang.String"[label="1"]
"org.joda.time.chrono.GJLocaleSymbols"->"(static)org.joda.time.chrono.GJLocaleSymbols.eraTextToValue(org.joda.time.chrono.GJLocaleSymbols java.lang.String )int"[label="1"]
"org.joda.time.chrono.GJLocaleSymbols"->"(static)org.joda.time.chrono.GJLocaleSymbols.eraValueToText(org.joda.time.chrono.GJLocaleSymbols int )java.lang.String"[label="1"]
"org.joda.time.chrono.GJLocaleSymbols"->"(static)org.joda.time.chrono.GJLocaleSymbols.getDayOfWeekMaxShortTextLength(org.joda.time.chrono.GJLocaleSymbols )int"[label="1"]
"org.joda.time.chrono.GJLocaleSymbols"->"(static)org.joda.time.chrono.GJLocaleSymbols.getDayOfWeekMaxTextLength(org.joda.time.chrono.GJLocaleSymbols )int"[label="1"]
"org.joda.time.chrono.GJLocaleSymbols"->"(static)org.joda.time.chrono.GJLocaleSymbols.getEraMaxTextLength(org.joda.time.chrono.GJLocaleSymbols )int"[label="1"]
"org.joda.time.chrono.GJLocaleSymbols"->"(static)org.joda.time.chrono.GJLocaleSymbols.getHalfdayMaxTextLength(org.joda.time.chrono.GJLocaleSymbols )int"[label="1"]
"org.joda.time.chrono.GJLocaleSymbols"->"(static)org.joda.time.chrono.GJLocaleSymbols.getMonthMaxShortTextLength(org.joda.time.chrono.GJLocaleSymbols )int"[label="1"]
"org.joda.time.chrono.GJLocaleSymbols"->"(static)org.joda.time.chrono.GJLocaleSymbols.getMonthMaxTextLength(org.joda.time.chrono.GJLocaleSymbols )int"[label="1"]
"org.joda.time.chrono.GJLocaleSymbols"->"(static)org.joda.time.chrono.GJLocaleSymbols.halfdayTextToValue(org.joda.time.chrono.GJLocaleSymbols java.lang.String )int"[label="1"]
"org.joda.time.chrono.GJLocaleSymbols"->"(static)org.joda.time.chrono.GJLocaleSymbols.halfdayValueToText(org.joda.time.chrono.GJLocaleSymbols int )java.lang.String"[label="1"]
"org.joda.time.chrono.GJLocaleSymbols"->"(static)org.joda.time.chrono.GJLocaleSymbols.monthOfYearTextToValue(org.joda.time.chrono.GJLocaleSymbols java.lang.String )int"[label="1"]
"org.joda.time.chrono.GJLocaleSymbols"->"(static)org.joda.time.chrono.GJLocaleSymbols.monthOfYearValueToShortText(org.joda.time.chrono.GJLocaleSymbols int )java.lang.String"[label="1"]
"org.joda.time.chrono.GJLocaleSymbols"->"(static)org.joda.time.chrono.GJLocaleSymbols.monthOfYearValueToText(org.joda.time.chrono.GJLocaleSymbols int )java.lang.String"[label="1"]
"org.joda.time.chrono.GJMonthOfYearDateTimeField"->"(static)org.joda.time.chrono.GJMonthOfYearDateTimeField.getAsShortText(org.joda.time.chrono.GJMonthOfYearDateTimeField int java.util.Locale )java.lang.String"[label="1"]
"org.joda.time.chrono.GJMonthOfYearDateTimeField"->"(static)org.joda.time.chrono.GJMonthOfYearDateTimeField.getAsText(org.joda.time.chrono.GJMonthOfYearDateTimeField int java.util.Locale )java.lang.String"[label="1"]
"org.joda.time.chrono.GJMonthOfYearDateTimeField"->"(static)org.joda.time.chrono.GJMonthOfYearDateTimeField.getMaximumShortTextLength(org.joda.time.chrono.GJMonthOfYearDateTimeField java.util.Locale )int"[label="1"]
"org.joda.time.chrono.GJMonthOfYearDateTimeField"->"(static)org.joda.time.chrono.GJMonthOfYearDateTimeField.getMaximumTextLength(org.joda.time.chrono.GJMonthOfYearDateTimeField java.util.Locale )int"[label="1"]
"org.joda.time.chrono.GJYearOfEraDateTimeField"->"(static)org.joda.time.chrono.GJYearOfEraDateTimeField.addWrapField(org.joda.time.chrono.GJYearOfEraDateTimeField long int )long"[label="1"]
"org.joda.time.chrono.GJYearOfEraDateTimeField"->"(static)org.joda.time.chrono.GJYearOfEraDateTimeField.get(org.joda.time.chrono.GJYearOfEraDateTimeField long )int"[label="1"]
"org.joda.time.chrono.GJYearOfEraDateTimeField"->"(static)org.joda.time.chrono.GJYearOfEraDateTimeField.getDifference(org.joda.time.chrono.GJYearOfEraDateTimeField long long )int"[label="1"]
"org.joda.time.chrono.GJYearOfEraDateTimeField"->"(static)org.joda.time.chrono.GJYearOfEraDateTimeField.getDifferenceAsLong(org.joda.time.chrono.GJYearOfEraDateTimeField long long )long"[label="1"]
"org.joda.time.chrono.GJYearOfEraDateTimeField"->"(static)org.joda.time.chrono.GJYearOfEraDateTimeField.getMaximumValue(org.joda.time.chrono.GJYearOfEraDateTimeField )int"[label="1"]
"org.joda.time.chrono.GJYearOfEraDateTimeField"->"(static)org.joda.time.chrono.GJYearOfEraDateTimeField.getMinimumValue(org.joda.time.chrono.GJYearOfEraDateTimeField )int"[label="1"]
"org.joda.time.chrono.GJYearOfEraDateTimeField"->"(static)org.joda.time.chrono.GJYearOfEraDateTimeField.getRangeDurationField(org.joda.time.chrono.GJYearOfEraDateTimeField )org.joda.time.DurationField"[label="1"]
"org.joda.time.chrono.GJYearOfEraDateTimeField"->"(static)org.joda.time.chrono.GJYearOfEraDateTimeField.remainder(org.joda.time.chrono.GJYearOfEraDateTimeField long )long"[label="1"]
"org.joda.time.chrono.GJYearOfEraDateTimeField"->"(static)org.joda.time.chrono.GJYearOfEraDateTimeField.roundCeiling(org.joda.time.chrono.GJYearOfEraDateTimeField long )long"[label="1"]
"org.joda.time.chrono.GJYearOfEraDateTimeField"->"(static)org.joda.time.chrono.GJYearOfEraDateTimeField.roundFloor(org.joda.time.chrono.GJYearOfEraDateTimeField long )long"[label="1"]
"org.joda.time.chrono.GJYearOfEraDateTimeField"->"(static)org.joda.time.chrono.GJYearOfEraDateTimeField.set(org.joda.time.chrono.GJYearOfEraDateTimeField long int )long"[label="1"]
"org.joda.time.chrono.GregorianChronology"->"(static)org.joda.time.chrono.GregorianChronology.withUTC(org.joda.time.chrono.GregorianChronology )org.joda.time.Chronology"[label="1"]
"org.joda.time.chrono.GregorianChronology"->"(static)org.joda.time.chrono.GregorianChronology.withZone(org.joda.time.chrono.GregorianChronology org.joda.time.DateTimeZone )org.joda.time.Chronology"[label="1"]
"org.joda.time.chrono.ISOChronology"->"(static)org.joda.time.chrono.ISOChronology.equals(org.joda.time.chrono.ISOChronology java.lang.Object )boolean"[label="1"]
"org.joda.time.chrono.ISOChronology"->"(static)org.joda.time.chrono.ISOChronology.withUTC(org.joda.time.chrono.ISOChronology )org.joda.time.Chronology"[label="1"]
"org.joda.time.chrono.ISOChronology"->"(static)org.joda.time.chrono.ISOChronology.withZone(org.joda.time.chrono.ISOChronology org.joda.time.DateTimeZone )org.joda.time.Chronology"[label="1"]
"org.joda.time.chrono.ISOYearOfEraDateTimeField"->"(static)org.joda.time.chrono.ISOYearOfEraDateTimeField.addWrapField(org.joda.time.chrono.ISOYearOfEraDateTimeField long int )long"[label="1"]
"org.joda.time.chrono.ISOYearOfEraDateTimeField"->"(static)org.joda.time.chrono.ISOYearOfEraDateTimeField.get(org.joda.time.chrono.ISOYearOfEraDateTimeField long )int"[label="1"]
"org.joda.time.chrono.ISOYearOfEraDateTimeField"->"(static)org.joda.time.chrono.ISOYearOfEraDateTimeField.getDifference(org.joda.time.chrono.ISOYearOfEraDateTimeField long long )int"[label="1"]
"org.joda.time.chrono.ISOYearOfEraDateTimeField"->"(static)org.joda.time.chrono.ISOYearOfEraDateTimeField.getDifferenceAsLong(org.joda.time.chrono.ISOYearOfEraDateTimeField long long )long"[label="1"]
"org.joda.time.chrono.ISOYearOfEraDateTimeField"->"(static)org.joda.time.chrono.ISOYearOfEraDateTimeField.getMaximumValue(org.joda.time.chrono.ISOYearOfEraDateTimeField )int"[label="1"]
"org.joda.time.chrono.ISOYearOfEraDateTimeField"->"(static)org.joda.time.chrono.ISOYearOfEraDateTimeField.getMinimumValue(org.joda.time.chrono.ISOYearOfEraDateTimeField )int"[label="1"]
"org.joda.time.chrono.ISOYearOfEraDateTimeField"->"(static)org.joda.time.chrono.ISOYearOfEraDateTimeField.getRangeDurationField(org.joda.time.chrono.ISOYearOfEraDateTimeField )org.joda.time.DurationField"[label="1"]
"org.joda.time.chrono.ISOYearOfEraDateTimeField"->"(static)org.joda.time.chrono.ISOYearOfEraDateTimeField.remainder(org.joda.time.chrono.ISOYearOfEraDateTimeField long )long"[label="1"]
"org.joda.time.chrono.ISOYearOfEraDateTimeField"->"(static)org.joda.time.chrono.ISOYearOfEraDateTimeField.roundCeiling(org.joda.time.chrono.ISOYearOfEraDateTimeField long )long"[label="1"]
"org.joda.time.chrono.ISOYearOfEraDateTimeField"->"(static)org.joda.time.chrono.ISOYearOfEraDateTimeField.roundFloor(org.joda.time.chrono.ISOYearOfEraDateTimeField long )long"[label="1"]
"org.joda.time.chrono.ISOYearOfEraDateTimeField"->"(static)org.joda.time.chrono.ISOYearOfEraDateTimeField.set(org.joda.time.chrono.ISOYearOfEraDateTimeField long int )long"[label="1"]
"org.joda.time.chrono.IslamicChronology"->"(static)org.joda.time.chrono.IslamicChronology.equals(org.joda.time.chrono.IslamicChronology java.lang.Object )boolean"[label="1"]
"org.joda.time.chrono.IslamicChronology"->"(static)org.joda.time.chrono.IslamicChronology.getLeapYearPatternType(org.joda.time.chrono.IslamicChronology )org.joda.time.chrono.IslamicChronology$LeapYearPatternType"[label="1"]
"org.joda.time.chrono.IslamicChronology"->"(static)org.joda.time.chrono.IslamicChronology.withUTC(org.joda.time.chrono.IslamicChronology )org.joda.time.Chronology"[label="1"]
"org.joda.time.chrono.IslamicChronology"->"(static)org.joda.time.chrono.IslamicChronology.withZone(org.joda.time.chrono.IslamicChronology org.joda.time.DateTimeZone )org.joda.time.Chronology"[label="1"]
"org.joda.time.chrono.IslamicChronology$LeapYearPatternType"->"(static)org.joda.time.chrono.IslamicChronology$LeapYearPatternType.equals(org.joda.time.chrono.IslamicChronology$LeapYearPatternType java.lang.Object )boolean"[label="1"]
"org.joda.time.chrono.IslamicChronology$LeapYearPatternType"->"org.joda.time.chrono.IslamicChronology.getInstance(org.joda.time.DateTimeZone org.joda.time.chrono.IslamicChronology$LeapYearPatternType )org.joda.time.chrono.IslamicChronology"[label="1"]
"org.joda.time.chrono.JulianChronology"->"(static)org.joda.time.chrono.JulianChronology.withUTC(org.joda.time.chrono.JulianChronology )org.joda.time.Chronology"[label="1"]
"org.joda.time.chrono.JulianChronology"->"(static)org.joda.time.chrono.JulianChronology.withZone(org.joda.time.chrono.JulianChronology org.joda.time.DateTimeZone )org.joda.time.Chronology"[label="1"]
"org.joda.time.chrono.LenientChronology"->"(static)org.joda.time.chrono.LenientChronology.equals(org.joda.time.chrono.LenientChronology java.lang.Object )boolean"[label="1"]
"org.joda.time.chrono.LenientChronology"->"(static)org.joda.time.chrono.LenientChronology.withUTC(org.joda.time.chrono.LenientChronology )org.joda.time.Chronology"[label="1"]
"org.joda.time.chrono.LenientChronology"->"(static)org.joda.time.chrono.LenientChronology.withZone(org.joda.time.chrono.LenientChronology org.joda.time.DateTimeZone )org.joda.time.Chronology"[label="1"]
"org.joda.time.chrono.LimitChronology"->"(static)org.joda.time.chrono.LimitChronology.equals(org.joda.time.chrono.LimitChronology java.lang.Object )boolean"[label="1"]
"org.joda.time.chrono.LimitChronology"->"(static)org.joda.time.chrono.LimitChronology.getLowerLimit(org.joda.time.chrono.LimitChronology )org.joda.time.DateTime"[label="1"]
"org.joda.time.chrono.LimitChronology"->"(static)org.joda.time.chrono.LimitChronology.getUpperLimit(org.joda.time.chrono.LimitChronology )org.joda.time.DateTime"[label="1"]
"org.joda.time.chrono.LimitChronology"->"(static)org.joda.time.chrono.LimitChronology.withUTC(org.joda.time.chrono.LimitChronology )org.joda.time.Chronology"[label="1"]
"org.joda.time.chrono.LimitChronology"->"(static)org.joda.time.chrono.LimitChronology.withZone(org.joda.time.chrono.LimitChronology org.joda.time.DateTimeZone )org.joda.time.Chronology"[label="1"]
"org.joda.time.chrono.LimitChronology$LimitDateTimeField"->"(static)org.joda.time.chrono.LimitChronology$LimitDateTimeField.addWrapField(org.joda.time.chrono.LimitChronology$LimitDateTimeField long int )long"[label="1"]
"org.joda.time.chrono.LimitChronology$LimitDateTimeField"->"(static)org.joda.time.chrono.LimitChronology$LimitDateTimeField.get(org.joda.time.chrono.LimitChronology$LimitDateTimeField long )int"[label="1"]
"org.joda.time.chrono.LimitChronology$LimitDateTimeField"->"(static)org.joda.time.chrono.LimitChronology$LimitDateTimeField.getAsShortText(org.joda.time.chrono.LimitChronology$LimitDateTimeField long java.util.Locale )java.lang.String"[label="1"]
"org.joda.time.chrono.LimitChronology$LimitDateTimeField"->"(static)org.joda.time.chrono.LimitChronology$LimitDateTimeField.getAsText(org.joda.time.chrono.LimitChronology$LimitDateTimeField long java.util.Locale )java.lang.String"[label="1"]
"org.joda.time.chrono.LimitChronology$LimitDateTimeField"->"(static)org.joda.time.chrono.LimitChronology$LimitDateTimeField.getDifference(org.joda.time.chrono.LimitChronology$LimitDateTimeField long long )int"[label="1"]
"org.joda.time.chrono.LimitChronology$LimitDateTimeField"->"(static)org.joda.time.chrono.LimitChronology$LimitDateTimeField.getDifferenceAsLong(org.joda.time.chrono.LimitChronology$LimitDateTimeField long long )long"[label="1"]
"org.joda.time.chrono.LimitChronology$LimitDateTimeField"->"(static)org.joda.time.chrono.LimitChronology$LimitDateTimeField.getDurationField(org.joda.time.chrono.LimitChronology$LimitDateTimeField )org.joda.time.DurationField"[label="1"]
"org.joda.time.chrono.LimitChronology$LimitDateTimeField"->"(static)org.joda.time.chrono.LimitChronology$LimitDateTimeField.getLeapAmount(org.joda.time.chrono.LimitChronology$LimitDateTimeField long )int"[label="1"]
"org.joda.time.chrono.LimitChronology$LimitDateTimeField"->"(static)org.joda.time.chrono.LimitChronology$LimitDateTimeField.getLeapDurationField(org.joda.time.chrono.LimitChronology$LimitDateTimeField )org.joda.time.DurationField"[label="1"]
"org.joda.time.chrono.LimitChronology$LimitDateTimeField"->"(static)org.joda.time.chrono.LimitChronology$LimitDateTimeField.getMaximumShortTextLength(org.joda.time.chrono.LimitChronology$LimitDateTimeField java.util.Locale )int"[label="1"]
"org.joda.time.chrono.LimitChronology$LimitDateTimeField"->"(static)org.joda.time.chrono.LimitChronology$LimitDateTimeField.getMaximumTextLength(org.joda.time.chrono.LimitChronology$LimitDateTimeField java.util.Locale )int"[label="1"]
"org.joda.time.chrono.LimitChronology$LimitDateTimeField"->"(static)org.joda.time.chrono.LimitChronology$LimitDateTimeField.getMaximumValue(org.joda.time.chrono.LimitChronology$LimitDateTimeField long )int"[label="1"]
"org.joda.time.chrono.LimitChronology$LimitDateTimeField"->"(static)org.joda.time.chrono.LimitChronology$LimitDateTimeField.getMinimumValue(org.joda.time.chrono.LimitChronology$LimitDateTimeField long )int"[label="1"]
"org.joda.time.chrono.LimitChronology$LimitDateTimeField"->"(static)org.joda.time.chrono.LimitChronology$LimitDateTimeField.getRangeDurationField(org.joda.time.chrono.LimitChronology$LimitDateTimeField )org.joda.time.DurationField"[label="1"]
"org.joda.time.chrono.LimitChronology$LimitDateTimeField"->"(static)org.joda.time.chrono.LimitChronology$LimitDateTimeField.isLeap(org.joda.time.chrono.LimitChronology$LimitDateTimeField long )boolean"[label="1"]
"org.joda.time.chrono.LimitChronology$LimitDateTimeField"->"(static)org.joda.time.chrono.LimitChronology$LimitDateTimeField.remainder(org.joda.time.chrono.LimitChronology$LimitDateTimeField long )long"[label="1"]
"org.joda.time.chrono.LimitChronology$LimitDateTimeField"->"(static)org.joda.time.chrono.LimitChronology$LimitDateTimeField.roundCeiling(org.joda.time.chrono.LimitChronology$LimitDateTimeField long )long"[label="1"]
"org.joda.time.chrono.LimitChronology$LimitDateTimeField"->"(static)org.joda.time.chrono.LimitChronology$LimitDateTimeField.roundFloor(org.joda.time.chrono.LimitChronology$LimitDateTimeField long )long"[label="1"]
"org.joda.time.chrono.LimitChronology$LimitDateTimeField"->"(static)org.joda.time.chrono.LimitChronology$LimitDateTimeField.roundHalfCeiling(org.joda.time.chrono.LimitChronology$LimitDateTimeField long )long"[label="1"]
"org.joda.time.chrono.LimitChronology$LimitDateTimeField"->"(static)org.joda.time.chrono.LimitChronology$LimitDateTimeField.roundHalfEven(org.joda.time.chrono.LimitChronology$LimitDateTimeField long )long"[label="1"]
"org.joda.time.chrono.LimitChronology$LimitDateTimeField"->"(static)org.joda.time.chrono.LimitChronology$LimitDateTimeField.roundHalfFloor(org.joda.time.chrono.LimitChronology$LimitDateTimeField long )long"[label="1"]
"org.joda.time.chrono.LimitChronology$LimitDateTimeField"->"(static)org.joda.time.chrono.LimitChronology$LimitDateTimeField.set(org.joda.time.chrono.LimitChronology$LimitDateTimeField long int )long"[label="1"]
"org.joda.time.chrono.LimitChronology$LimitDurationField"->"(static)org.joda.time.chrono.LimitChronology$LimitDurationField.getDifference(org.joda.time.chrono.LimitChronology$LimitDurationField long long )int"[label="1"]
"org.joda.time.chrono.LimitChronology$LimitDurationField"->"(static)org.joda.time.chrono.LimitChronology$LimitDurationField.getDifferenceAsLong(org.joda.time.chrono.LimitChronology$LimitDurationField long long )long"[label="1"]
"org.joda.time.chrono.LimitChronology$LimitDurationField"->"(static)org.joda.time.chrono.LimitChronology$LimitDurationField.getMillis(org.joda.time.chrono.LimitChronology$LimitDurationField int long )long"[label="1"]
"org.joda.time.chrono.LimitChronology$LimitDurationField"->"(static)org.joda.time.chrono.LimitChronology$LimitDurationField.getMillis(org.joda.time.chrono.LimitChronology$LimitDurationField long long )long"[label="1"]
"org.joda.time.chrono.LimitChronology$LimitDurationField"->"(static)org.joda.time.chrono.LimitChronology$LimitDurationField.getValue(org.joda.time.chrono.LimitChronology$LimitDurationField long long )int"[label="1"]
"org.joda.time.chrono.LimitChronology$LimitDurationField"->"(static)org.joda.time.chrono.LimitChronology$LimitDurationField.getValueAsLong(org.joda.time.chrono.LimitChronology$LimitDurationField long long )long"[label="1"]
"org.joda.time.chrono.LimitChronology$LimitException"->"(static)org.joda.time.chrono.LimitChronology$LimitException.getMessage(org.joda.time.chrono.LimitChronology$LimitException )java.lang.String"[label="1"]
"org.joda.time.chrono.StrictChronology"->"(static)org.joda.time.chrono.StrictChronology.equals(org.joda.time.chrono.StrictChronology java.lang.Object )boolean"[label="1"]
"org.joda.time.chrono.StrictChronology"->"(static)org.joda.time.chrono.StrictChronology.withUTC(org.joda.time.chrono.StrictChronology )org.joda.time.Chronology"[label="1"]
"org.joda.time.chrono.StrictChronology"->"(static)org.joda.time.chrono.StrictChronology.withZone(org.joda.time.chrono.StrictChronology org.joda.time.DateTimeZone )org.joda.time.Chronology"[label="1"]
"org.joda.time.chrono.ZonedChronology"->"(static)org.joda.time.chrono.ZonedChronology.equals(org.joda.time.chrono.ZonedChronology java.lang.Object )boolean"[label="1"]
"org.joda.time.chrono.ZonedChronology"->"(static)org.joda.time.chrono.ZonedChronology.getZone(org.joda.time.chrono.ZonedChronology )org.joda.time.DateTimeZone"[label="1"]
"org.joda.time.chrono.ZonedChronology"->"(static)org.joda.time.chrono.ZonedChronology.withUTC(org.joda.time.chrono.ZonedChronology )org.joda.time.Chronology"[label="1"]
"org.joda.time.chrono.ZonedChronology"->"(static)org.joda.time.chrono.ZonedChronology.withZone(org.joda.time.chrono.ZonedChronology org.joda.time.DateTimeZone )org.joda.time.Chronology"[label="1"]
"org.joda.time.chrono.ZonedChronology$ZonedDateTimeField"->"(static)org.joda.time.chrono.ZonedChronology$ZonedDateTimeField.addWrapField(org.joda.time.chrono.ZonedChronology$ZonedDateTimeField long int )long"[label="1"]
"org.joda.time.chrono.ZonedChronology$ZonedDateTimeField"->"(static)org.joda.time.chrono.ZonedChronology$ZonedDateTimeField.equals(org.joda.time.chrono.ZonedChronology$ZonedDateTimeField java.lang.Object )boolean"[label="1"]
"org.joda.time.chrono.ZonedChronology$ZonedDateTimeField"->"(static)org.joda.time.chrono.ZonedChronology$ZonedDateTimeField.get(org.joda.time.chrono.ZonedChronology$ZonedDateTimeField long )int"[label="1"]
"org.joda.time.chrono.ZonedChronology$ZonedDateTimeField"->"(static)org.joda.time.chrono.ZonedChronology$ZonedDateTimeField.getAsShortText(org.joda.time.chrono.ZonedChronology$ZonedDateTimeField int java.util.Locale )java.lang.String"[label="1"]
"org.joda.time.chrono.ZonedChronology$ZonedDateTimeField"->"(static)org.joda.time.chrono.ZonedChronology$ZonedDateTimeField.getAsShortText(org.joda.time.chrono.ZonedChronology$ZonedDateTimeField long java.util.Locale )java.lang.String"[label="1"]
"org.joda.time.chrono.ZonedChronology$ZonedDateTimeField"->"(static)org.joda.time.chrono.ZonedChronology$ZonedDateTimeField.getAsText(org.joda.time.chrono.ZonedChronology$ZonedDateTimeField int java.util.Locale )java.lang.String"[label="1"]
"org.joda.time.chrono.ZonedChronology$ZonedDateTimeField"->"(static)org.joda.time.chrono.ZonedChronology$ZonedDateTimeField.getAsText(org.joda.time.chrono.ZonedChronology$ZonedDateTimeField long java.util.Locale )java.lang.String"[label="1"]
"org.joda.time.chrono.ZonedChronology$ZonedDateTimeField"->"(static)org.joda.time.chrono.ZonedChronology$ZonedDateTimeField.getDifference(org.joda.time.chrono.ZonedChronology$ZonedDateTimeField long long )int"[label="1"]
"org.joda.time.chrono.ZonedChronology$ZonedDateTimeField"->"(static)org.joda.time.chrono.ZonedChronology$ZonedDateTimeField.getDifferenceAsLong(org.joda.time.chrono.ZonedChronology$ZonedDateTimeField long long )long"[label="1"]
"org.joda.time.chrono.ZonedChronology$ZonedDateTimeField"->"(static)org.joda.time.chrono.ZonedChronology$ZonedDateTimeField.getDurationField(org.joda.time.chrono.ZonedChronology$ZonedDateTimeField )org.joda.time.DurationField"[label="1"]
"org.joda.time.chrono.ZonedChronology$ZonedDateTimeField"->"(static)org.joda.time.chrono.ZonedChronology$ZonedDateTimeField.getLeapAmount(org.joda.time.chrono.ZonedChronology$ZonedDateTimeField long )int"[label="1"]
"org.joda.time.chrono.ZonedChronology$ZonedDateTimeField"->"(static)org.joda.time.chrono.ZonedChronology$ZonedDateTimeField.getLeapDurationField(org.joda.time.chrono.ZonedChronology$ZonedDateTimeField )org.joda.time.DurationField"[label="1"]
"org.joda.time.chrono.ZonedChronology$ZonedDateTimeField"->"(static)org.joda.time.chrono.ZonedChronology$ZonedDateTimeField.getMaximumShortTextLength(org.joda.time.chrono.ZonedChronology$ZonedDateTimeField java.util.Locale )int"[label="1"]
"org.joda.time.chrono.ZonedChronology$ZonedDateTimeField"->"(static)org.joda.time.chrono.ZonedChronology$ZonedDateTimeField.getMaximumTextLength(org.joda.time.chrono.ZonedChronology$ZonedDateTimeField java.util.Locale )int"[label="1"]
"org.joda.time.chrono.ZonedChronology$ZonedDateTimeField"->"(static)org.joda.time.chrono.ZonedChronology$ZonedDateTimeField.getMaximumValue(org.joda.time.chrono.ZonedChronology$ZonedDateTimeField )int"[label="1"]
"org.joda.time.chrono.ZonedChronology$ZonedDateTimeField"->"(static)org.joda.time.chrono.ZonedChronology$ZonedDateTimeField.getMaximumValue(org.joda.time.chrono.ZonedChronology$ZonedDateTimeField long )int"[label="1"]
"org.joda.time.chrono.ZonedChronology$ZonedDateTimeField"->"(static)org.joda.time.chrono.ZonedChronology$ZonedDateTimeField.getMaximumValue(org.joda.time.chrono.ZonedChronology$ZonedDateTimeField org.joda.time.ReadablePartial )int"[label="1"]
"org.joda.time.chrono.ZonedChronology$ZonedDateTimeField"->"(static)org.joda.time.chrono.ZonedChronology$ZonedDateTimeField.getMaximumValue(org.joda.time.chrono.ZonedChronology$ZonedDateTimeField org.joda.time.ReadablePartial int[] )int"[label="1"]
"org.joda.time.chrono.ZonedChronology$ZonedDateTimeField"->"(static)org.joda.time.chrono.ZonedChronology$ZonedDateTimeField.getMinimumValue(org.joda.time.chrono.ZonedChronology$ZonedDateTimeField )int"[label="1"]
"org.joda.time.chrono.ZonedChronology$ZonedDateTimeField"->"(static)org.joda.time.chrono.ZonedChronology$ZonedDateTimeField.getMinimumValue(org.joda.time.chrono.ZonedChronology$ZonedDateTimeField long )int"[label="1"]
"org.joda.time.chrono.ZonedChronology$ZonedDateTimeField"->"(static)org.joda.time.chrono.ZonedChronology$ZonedDateTimeField.getMinimumValue(org.joda.time.chrono.ZonedChronology$ZonedDateTimeField org.joda.time.ReadablePartial )int"[label="1"]
"org.joda.time.chrono.ZonedChronology$ZonedDateTimeField"->"(static)org.joda.time.chrono.ZonedChronology$ZonedDateTimeField.getMinimumValue(org.joda.time.chrono.ZonedChronology$ZonedDateTimeField org.joda.time.ReadablePartial int[] )int"[label="1"]
"org.joda.time.chrono.ZonedChronology$ZonedDateTimeField"->"(static)org.joda.time.chrono.ZonedChronology$ZonedDateTimeField.getRangeDurationField(org.joda.time.chrono.ZonedChronology$ZonedDateTimeField )org.joda.time.DurationField"[label="1"]
"org.joda.time.chrono.ZonedChronology$ZonedDateTimeField"->"(static)org.joda.time.chrono.ZonedChronology$ZonedDateTimeField.isLeap(org.joda.time.chrono.ZonedChronology$ZonedDateTimeField long )boolean"[label="1"]
"org.joda.time.chrono.ZonedChronology$ZonedDateTimeField"->"(static)org.joda.time.chrono.ZonedChronology$ZonedDateTimeField.isLenient(org.joda.time.chrono.ZonedChronology$ZonedDateTimeField )boolean"[label="1"]
"org.joda.time.chrono.ZonedChronology$ZonedDateTimeField"->"(static)org.joda.time.chrono.ZonedChronology$ZonedDateTimeField.remainder(org.joda.time.chrono.ZonedChronology$ZonedDateTimeField long )long"[label="1"]
"org.joda.time.chrono.ZonedChronology$ZonedDateTimeField"->"(static)org.joda.time.chrono.ZonedChronology$ZonedDateTimeField.roundCeiling(org.joda.time.chrono.ZonedChronology$ZonedDateTimeField long )long"[label="1"]
"org.joda.time.chrono.ZonedChronology$ZonedDateTimeField"->"(static)org.joda.time.chrono.ZonedChronology$ZonedDateTimeField.roundFloor(org.joda.time.chrono.ZonedChronology$ZonedDateTimeField long )long"[label="1"]
"org.joda.time.chrono.ZonedChronology$ZonedDateTimeField"->"(static)org.joda.time.chrono.ZonedChronology$ZonedDateTimeField.set(org.joda.time.chrono.ZonedChronology$ZonedDateTimeField long int )long"[label="1"]
"org.joda.time.chrono.ZonedChronology$ZonedDurationField"->"(static)org.joda.time.chrono.ZonedChronology$ZonedDurationField.equals(org.joda.time.chrono.ZonedChronology$ZonedDurationField java.lang.Object )boolean"[label="1"]
"org.joda.time.chrono.ZonedChronology$ZonedDurationField"->"(static)org.joda.time.chrono.ZonedChronology$ZonedDurationField.getDifference(org.joda.time.chrono.ZonedChronology$ZonedDurationField long long )int"[label="1"]
"org.joda.time.chrono.ZonedChronology$ZonedDurationField"->"(static)org.joda.time.chrono.ZonedChronology$ZonedDurationField.getDifferenceAsLong(org.joda.time.chrono.ZonedChronology$ZonedDurationField long long )long"[label="1"]
"org.joda.time.chrono.ZonedChronology$ZonedDurationField"->"(static)org.joda.time.chrono.ZonedChronology$ZonedDurationField.getMillis(org.joda.time.chrono.ZonedChronology$ZonedDurationField int long )long"[label="1"]
"org.joda.time.chrono.ZonedChronology$ZonedDurationField"->"(static)org.joda.time.chrono.ZonedChronology$ZonedDurationField.getMillis(org.joda.time.chrono.ZonedChronology$ZonedDurationField long long )long"[label="1"]
"org.joda.time.chrono.ZonedChronology$ZonedDurationField"->"(static)org.joda.time.chrono.ZonedChronology$ZonedDurationField.getUnitMillis(org.joda.time.chrono.ZonedChronology$ZonedDurationField )long"[label="1"]
"org.joda.time.chrono.ZonedChronology$ZonedDurationField"->"(static)org.joda.time.chrono.ZonedChronology$ZonedDurationField.getValue(org.joda.time.chrono.ZonedChronology$ZonedDurationField long long )int"[label="1"]
"org.joda.time.chrono.ZonedChronology$ZonedDurationField"->"(static)org.joda.time.chrono.ZonedChronology$ZonedDurationField.getValueAsLong(org.joda.time.chrono.ZonedChronology$ZonedDurationField long long )long"[label="1"]
"org.joda.time.chrono.ZonedChronology$ZonedDurationField"->"(static)org.joda.time.chrono.ZonedChronology$ZonedDurationField.isPrecise(org.joda.time.chrono.ZonedChronology$ZonedDurationField )boolean"[label="1"]
"org.joda.time.convert.AbstractConverter"->"(static)org.joda.time.convert.AbstractConverter.getChronology(org.joda.time.convert.AbstractConverter java.lang.Object org.joda.time.Chronology )org.joda.time.Chronology"[label="1"]
"org.joda.time.convert.AbstractConverter"->"(static)org.joda.time.convert.AbstractConverter.getChronology(org.joda.time.convert.AbstractConverter java.lang.Object org.joda.time.DateTimeZone )org.joda.time.Chronology"[label="1"]
"org.joda.time.convert.AbstractConverter"->"(static)org.joda.time.convert.AbstractConverter.getInstantMillis(org.joda.time.convert.AbstractConverter java.lang.Object org.joda.time.Chronology )long"[label="1"]
"org.joda.time.convert.AbstractConverter"->"(static)org.joda.time.convert.AbstractConverter.getPeriodType(org.joda.time.convert.AbstractConverter java.lang.Object )org.joda.time.PeriodType"[label="1"]
"org.joda.time.convert.AbstractConverter"->"(static)org.joda.time.convert.AbstractConverter.isReadableInterval(org.joda.time.convert.AbstractConverter java.lang.Object org.joda.time.Chronology )boolean"[label="1"]
"org.joda.time.convert.CalendarConverter"->"(static)org.joda.time.convert.CalendarConverter.getChronology(org.joda.time.convert.CalendarConverter java.lang.Object org.joda.time.Chronology )org.joda.time.Chronology"[label="1"]
"org.joda.time.convert.CalendarConverter"->"(static)org.joda.time.convert.CalendarConverter.getChronology(org.joda.time.convert.CalendarConverter java.lang.Object org.joda.time.DateTimeZone )org.joda.time.Chronology"[label="1"]
"org.joda.time.convert.CalendarConverter"->"(static)org.joda.time.convert.CalendarConverter.getInstantMillis(org.joda.time.convert.CalendarConverter java.lang.Object org.joda.time.Chronology )long"[label="1"]
"org.joda.time.convert.CalendarConverter"->"(static)org.joda.time.convert.CalendarConverter.getSupportedType(org.joda.time.convert.CalendarConverter )java.lang.Class"[label="1"]
"org.joda.time.convert.Converter"->"(static)org.joda.time.convert.Converter.getSupportedType(org.joda.time.convert.Converter )java.lang.Class"[label="1"]
"org.joda.time.convert.ConverterManager"->"(static)org.joda.time.convert.ConverterManager.addDurationConverter(org.joda.time.convert.ConverterManager org.joda.time.convert.DurationConverter )org.joda.time.convert.DurationConverter"[label="1"]
"org.joda.time.convert.ConverterManager"->"(static)org.joda.time.convert.ConverterManager.addInstantConverter(org.joda.time.convert.ConverterManager org.joda.time.convert.InstantConverter )org.joda.time.convert.InstantConverter"[label="1"]
"org.joda.time.convert.ConverterManager"->"(static)org.joda.time.convert.ConverterManager.addIntervalConverter(org.joda.time.convert.ConverterManager org.joda.time.convert.IntervalConverter )org.joda.time.convert.IntervalConverter"[label="1"]
"org.joda.time.convert.ConverterManager"->"(static)org.joda.time.convert.ConverterManager.addPartialConverter(org.joda.time.convert.ConverterManager org.joda.time.convert.PartialConverter )org.joda.time.convert.PartialConverter"[label="1"]
"org.joda.time.convert.ConverterManager"->"(static)org.joda.time.convert.ConverterManager.addPeriodConverter(org.joda.time.convert.ConverterManager org.joda.time.convert.PeriodConverter )org.joda.time.convert.PeriodConverter"[label="1"]
"org.joda.time.convert.ConverterManager"->"(static)org.joda.time.convert.ConverterManager.getDurationConverter(org.joda.time.convert.ConverterManager java.lang.Object )org.joda.time.convert.DurationConverter"[label="1"]
"org.joda.time.convert.ConverterManager"->"(static)org.joda.time.convert.ConverterManager.getDurationConverters(org.joda.time.convert.ConverterManager )org.joda.time.convert.DurationConverter[]"[label="1"]
"org.joda.time.convert.ConverterManager"->"(static)org.joda.time.convert.ConverterManager.getInstantConverter(org.joda.time.convert.ConverterManager java.lang.Object )org.joda.time.convert.InstantConverter"[label="1"]
"org.joda.time.convert.ConverterManager"->"(static)org.joda.time.convert.ConverterManager.getInstantConverters(org.joda.time.convert.ConverterManager )org.joda.time.convert.InstantConverter[]"[label="1"]
"org.joda.time.convert.ConverterManager"->"(static)org.joda.time.convert.ConverterManager.getIntervalConverter(org.joda.time.convert.ConverterManager java.lang.Object )org.joda.time.convert.IntervalConverter"[label="1"]
"org.joda.time.convert.ConverterManager"->"(static)org.joda.time.convert.ConverterManager.getIntervalConverters(org.joda.time.convert.ConverterManager )org.joda.time.convert.IntervalConverter[]"[label="1"]
"org.joda.time.convert.ConverterManager"->"(static)org.joda.time.convert.ConverterManager.getPartialConverter(org.joda.time.convert.ConverterManager java.lang.Object )org.joda.time.convert.PartialConverter"[label="1"]
"org.joda.time.convert.ConverterManager"->"(static)org.joda.time.convert.ConverterManager.getPartialConverters(org.joda.time.convert.ConverterManager )org.joda.time.convert.PartialConverter[]"[label="1"]
"org.joda.time.convert.ConverterManager"->"(static)org.joda.time.convert.ConverterManager.getPeriodConverter(org.joda.time.convert.ConverterManager java.lang.Object )org.joda.time.convert.PeriodConverter"[label="1"]
"org.joda.time.convert.ConverterManager"->"(static)org.joda.time.convert.ConverterManager.getPeriodConverters(org.joda.time.convert.ConverterManager )org.joda.time.convert.PeriodConverter[]"[label="1"]
"org.joda.time.convert.ConverterManager"->"(static)org.joda.time.convert.ConverterManager.removeDurationConverter(org.joda.time.convert.ConverterManager org.joda.time.convert.DurationConverter )org.joda.time.convert.DurationConverter"[label="1"]
"org.joda.time.convert.ConverterManager"->"(static)org.joda.time.convert.ConverterManager.removeInstantConverter(org.joda.time.convert.ConverterManager org.joda.time.convert.InstantConverter )org.joda.time.convert.InstantConverter"[label="1"]
"org.joda.time.convert.ConverterManager"->"(static)org.joda.time.convert.ConverterManager.removeIntervalConverter(org.joda.time.convert.ConverterManager org.joda.time.convert.IntervalConverter )org.joda.time.convert.IntervalConverter"[label="1"]
"org.joda.time.convert.ConverterManager"->"(static)org.joda.time.convert.ConverterManager.removePartialConverter(org.joda.time.convert.ConverterManager org.joda.time.convert.PartialConverter )org.joda.time.convert.PartialConverter"[label="1"]
"org.joda.time.convert.ConverterManager"->"(static)org.joda.time.convert.ConverterManager.removePeriodConverter(org.joda.time.convert.ConverterManager org.joda.time.convert.PeriodConverter )org.joda.time.convert.PeriodConverter"[label="1"]
"org.joda.time.convert.DateConverter"->"(static)org.joda.time.convert.DateConverter.getInstantMillis(org.joda.time.convert.DateConverter java.lang.Object org.joda.time.Chronology )long"[label="1"]
"org.joda.time.convert.DateConverter"->"(static)org.joda.time.convert.DateConverter.getSupportedType(org.joda.time.convert.DateConverter )java.lang.Class"[label="1"]
"org.joda.time.convert.DurationConverter"->"(static)org.joda.time.convert.ConverterManager.addDurationConverter(org.joda.time.convert.ConverterManager org.joda.time.convert.DurationConverter )org.joda.time.convert.DurationConverter"[label="1"]
"org.joda.time.convert.DurationConverter"->"(static)org.joda.time.convert.ConverterManager.removeDurationConverter(org.joda.time.convert.ConverterManager org.joda.time.convert.DurationConverter )org.joda.time.convert.DurationConverter"[label="1"]
"org.joda.time.convert.DurationConverter"->"(static)org.joda.time.convert.DurationConverter.getDurationMillis(org.joda.time.convert.DurationConverter java.lang.Object )long"[label="1"]
"org.joda.time.convert.InstantConverter"->"(static)org.joda.time.convert.ConverterManager.addInstantConverter(org.joda.time.convert.ConverterManager org.joda.time.convert.InstantConverter )org.joda.time.convert.InstantConverter"[label="1"]
"org.joda.time.convert.InstantConverter"->"(static)org.joda.time.convert.ConverterManager.removeInstantConverter(org.joda.time.convert.ConverterManager org.joda.time.convert.InstantConverter )org.joda.time.convert.InstantConverter"[label="1"]
"org.joda.time.convert.InstantConverter"->"(static)org.joda.time.convert.InstantConverter.getChronology(org.joda.time.convert.InstantConverter java.lang.Object org.joda.time.Chronology )org.joda.time.Chronology"[label="1"]
"org.joda.time.convert.InstantConverter"->"(static)org.joda.time.convert.InstantConverter.getChronology(org.joda.time.convert.InstantConverter java.lang.Object org.joda.time.DateTimeZone )org.joda.time.Chronology"[label="1"]
"org.joda.time.convert.InstantConverter"->"(static)org.joda.time.convert.InstantConverter.getInstantMillis(org.joda.time.convert.InstantConverter java.lang.Object org.joda.time.Chronology )long"[label="1"]
"org.joda.time.convert.IntervalConverter"->"(static)org.joda.time.convert.ConverterManager.addIntervalConverter(org.joda.time.convert.ConverterManager org.joda.time.convert.IntervalConverter )org.joda.time.convert.IntervalConverter"[label="1"]
"org.joda.time.convert.IntervalConverter"->"(static)org.joda.time.convert.ConverterManager.removeIntervalConverter(org.joda.time.convert.ConverterManager org.joda.time.convert.IntervalConverter )org.joda.time.convert.IntervalConverter"[label="1"]
"org.joda.time.convert.IntervalConverter"->"(static)org.joda.time.convert.IntervalConverter.isReadableInterval(org.joda.time.convert.IntervalConverter java.lang.Object org.joda.time.Chronology )boolean"[label="1"]
"org.joda.time.convert.LongConverter"->"(static)org.joda.time.convert.LongConverter.getDurationMillis(org.joda.time.convert.LongConverter java.lang.Object )long"[label="1"]
"org.joda.time.convert.LongConverter"->"(static)org.joda.time.convert.LongConverter.getInstantMillis(org.joda.time.convert.LongConverter java.lang.Object org.joda.time.Chronology )long"[label="1"]
"org.joda.time.convert.LongConverter"->"(static)org.joda.time.convert.LongConverter.getSupportedType(org.joda.time.convert.LongConverter )java.lang.Class"[label="1"]
"org.joda.time.convert.NullConverter"->"(static)org.joda.time.convert.NullConverter.getDurationMillis(org.joda.time.convert.NullConverter java.lang.Object )long"[label="1"]
"org.joda.time.convert.NullConverter"->"(static)org.joda.time.convert.NullConverter.getSupportedType(org.joda.time.convert.NullConverter )java.lang.Class"[label="1"]
"org.joda.time.convert.PartialConverter"->"(static)org.joda.time.convert.ConverterManager.addPartialConverter(org.joda.time.convert.ConverterManager org.joda.time.convert.PartialConverter )org.joda.time.convert.PartialConverter"[label="1"]
"org.joda.time.convert.PartialConverter"->"(static)org.joda.time.convert.ConverterManager.removePartialConverter(org.joda.time.convert.ConverterManager org.joda.time.convert.PartialConverter )org.joda.time.convert.PartialConverter"[label="1"]
"org.joda.time.convert.PartialConverter"->"(static)org.joda.time.convert.PartialConverter.getChronology(org.joda.time.convert.PartialConverter java.lang.Object org.joda.time.Chronology )org.joda.time.Chronology"[label="1"]
"org.joda.time.convert.PartialConverter"->"(static)org.joda.time.convert.PartialConverter.getChronology(org.joda.time.convert.PartialConverter java.lang.Object org.joda.time.DateTimeZone )org.joda.time.Chronology"[label="1"]
"org.joda.time.convert.PeriodConverter"->"(static)org.joda.time.convert.ConverterManager.addPeriodConverter(org.joda.time.convert.ConverterManager org.joda.time.convert.PeriodConverter )org.joda.time.convert.PeriodConverter"[label="1"]
"org.joda.time.convert.PeriodConverter"->"(static)org.joda.time.convert.ConverterManager.removePeriodConverter(org.joda.time.convert.ConverterManager org.joda.time.convert.PeriodConverter )org.joda.time.convert.PeriodConverter"[label="1"]
"org.joda.time.convert.PeriodConverter"->"(static)org.joda.time.convert.PeriodConverter.getPeriodType(org.joda.time.convert.PeriodConverter java.lang.Object )org.joda.time.PeriodType"[label="1"]
"org.joda.time.convert.ReadableDurationConverter"->"(static)org.joda.time.convert.ReadableDurationConverter.getDurationMillis(org.joda.time.convert.ReadableDurationConverter java.lang.Object )long"[label="1"]
"org.joda.time.convert.ReadableDurationConverter"->"(static)org.joda.time.convert.ReadableDurationConverter.getSupportedType(org.joda.time.convert.ReadableDurationConverter )java.lang.Class"[label="1"]
"org.joda.time.convert.ReadableInstantConverter"->"(static)org.joda.time.convert.ReadableInstantConverter.getChronology(org.joda.time.convert.ReadableInstantConverter java.lang.Object org.joda.time.Chronology )org.joda.time.Chronology"[label="1"]
"org.joda.time.convert.ReadableInstantConverter"->"(static)org.joda.time.convert.ReadableInstantConverter.getChronology(org.joda.time.convert.ReadableInstantConverter java.lang.Object org.joda.time.DateTimeZone )org.joda.time.Chronology"[label="1"]
"org.joda.time.convert.ReadableInstantConverter"->"(static)org.joda.time.convert.ReadableInstantConverter.getInstantMillis(org.joda.time.convert.ReadableInstantConverter java.lang.Object org.joda.time.Chronology )long"[label="1"]
"org.joda.time.convert.ReadableInstantConverter"->"(static)org.joda.time.convert.ReadableInstantConverter.getSupportedType(org.joda.time.convert.ReadableInstantConverter )java.lang.Class"[label="1"]
"org.joda.time.convert.ReadableIntervalConverter"->"(static)org.joda.time.convert.ReadableIntervalConverter.getDurationMillis(org.joda.time.convert.ReadableIntervalConverter java.lang.Object )long"[label="1"]
"org.joda.time.convert.ReadableIntervalConverter"->"(static)org.joda.time.convert.ReadableIntervalConverter.getSupportedType(org.joda.time.convert.ReadableIntervalConverter )java.lang.Class"[label="1"]
"org.joda.time.convert.ReadableIntervalConverter"->"(static)org.joda.time.convert.ReadableIntervalConverter.isReadableInterval(org.joda.time.convert.ReadableIntervalConverter java.lang.Object org.joda.time.Chronology )boolean"[label="1"]
"org.joda.time.convert.ReadablePartialConverter"->"(static)org.joda.time.convert.ReadablePartialConverter.getChronology(org.joda.time.convert.ReadablePartialConverter java.lang.Object org.joda.time.Chronology )org.joda.time.Chronology"[label="1"]
"org.joda.time.convert.ReadablePartialConverter"->"(static)org.joda.time.convert.ReadablePartialConverter.getChronology(org.joda.time.convert.ReadablePartialConverter java.lang.Object org.joda.time.DateTimeZone )org.joda.time.Chronology"[label="1"]
"org.joda.time.convert.ReadablePartialConverter"->"(static)org.joda.time.convert.ReadablePartialConverter.getSupportedType(org.joda.time.convert.ReadablePartialConverter )java.lang.Class"[label="1"]
"org.joda.time.convert.ReadablePeriodConverter"->"(static)org.joda.time.convert.ReadablePeriodConverter.getPeriodType(org.joda.time.convert.ReadablePeriodConverter java.lang.Object )org.joda.time.PeriodType"[label="1"]
"org.joda.time.convert.ReadablePeriodConverter"->"(static)org.joda.time.convert.ReadablePeriodConverter.getSupportedType(org.joda.time.convert.ReadablePeriodConverter )java.lang.Class"[label="1"]
"org.joda.time.convert.StringConverter"->"(static)org.joda.time.convert.StringConverter.getDurationMillis(org.joda.time.convert.StringConverter java.lang.Object )long"[label="1"]
"org.joda.time.convert.StringConverter"->"(static)org.joda.time.convert.StringConverter.getInstantMillis(org.joda.time.convert.StringConverter java.lang.Object org.joda.time.Chronology )long"[label="1"]
"org.joda.time.convert.StringConverter"->"(static)org.joda.time.convert.StringConverter.getSupportedType(org.joda.time.convert.StringConverter )java.lang.Class"[label="1"]
"org.joda.time.field.AbstractPartialFieldProperty"->"(static)org.joda.time.field.AbstractPartialFieldProperty.equals(org.joda.time.field.AbstractPartialFieldProperty java.lang.Object )boolean"[label="1"]
"org.joda.time.field.AbstractPartialFieldProperty"->"(static)org.joda.time.field.AbstractPartialFieldProperty.get(org.joda.time.field.AbstractPartialFieldProperty )int"[label="1"]
"org.joda.time.field.AbstractPartialFieldProperty"->"(static)org.joda.time.field.AbstractPartialFieldProperty.getAsShortText(org.joda.time.field.AbstractPartialFieldProperty )java.lang.String"[label="1"]
"org.joda.time.field.AbstractPartialFieldProperty"->"(static)org.joda.time.field.AbstractPartialFieldProperty.getAsShortText(org.joda.time.field.AbstractPartialFieldProperty java.util.Locale )java.lang.String"[label="1"]
"org.joda.time.field.AbstractPartialFieldProperty"->"(static)org.joda.time.field.AbstractPartialFieldProperty.getAsString(org.joda.time.field.AbstractPartialFieldProperty )java.lang.String"[label="1"]
"org.joda.time.field.AbstractPartialFieldProperty"->"(static)org.joda.time.field.AbstractPartialFieldProperty.getAsText(org.joda.time.field.AbstractPartialFieldProperty )java.lang.String"[label="1"]
"org.joda.time.field.AbstractPartialFieldProperty"->"(static)org.joda.time.field.AbstractPartialFieldProperty.getAsText(org.joda.time.field.AbstractPartialFieldProperty java.util.Locale )java.lang.String"[label="1"]
"org.joda.time.field.AbstractPartialFieldProperty"->"(static)org.joda.time.field.AbstractPartialFieldProperty.getDurationField(org.joda.time.field.AbstractPartialFieldProperty )org.joda.time.DurationField"[label="1"]
"org.joda.time.field.AbstractPartialFieldProperty"->"(static)org.joda.time.field.AbstractPartialFieldProperty.getField(org.joda.time.field.AbstractPartialFieldProperty )org.joda.time.DateTimeField"[label="1"]
"org.joda.time.field.AbstractPartialFieldProperty"->"(static)org.joda.time.field.AbstractPartialFieldProperty.getFieldType(org.joda.time.field.AbstractPartialFieldProperty )org.joda.time.DateTimeFieldType"[label="1"]
"org.joda.time.field.AbstractPartialFieldProperty"->"(static)org.joda.time.field.AbstractPartialFieldProperty.getMaximumShortTextLength(org.joda.time.field.AbstractPartialFieldProperty java.util.Locale )int"[label="1"]
"org.joda.time.field.AbstractPartialFieldProperty"->"(static)org.joda.time.field.AbstractPartialFieldProperty.getMaximumTextLength(org.joda.time.field.AbstractPartialFieldProperty java.util.Locale )int"[label="1"]
"org.joda.time.field.AbstractPartialFieldProperty"->"(static)org.joda.time.field.AbstractPartialFieldProperty.getMaximumValue(org.joda.time.field.AbstractPartialFieldProperty )int"[label="1"]
"org.joda.time.field.AbstractPartialFieldProperty"->"(static)org.joda.time.field.AbstractPartialFieldProperty.getMaximumValueOverall(org.joda.time.field.AbstractPartialFieldProperty )int"[label="1"]
"org.joda.time.field.AbstractPartialFieldProperty"->"(static)org.joda.time.field.AbstractPartialFieldProperty.getMinimumValue(org.joda.time.field.AbstractPartialFieldProperty )int"[label="1"]
"org.joda.time.field.AbstractPartialFieldProperty"->"(static)org.joda.time.field.AbstractPartialFieldProperty.getMinimumValueOverall(org.joda.time.field.AbstractPartialFieldProperty )int"[label="1"]
"org.joda.time.field.AbstractPartialFieldProperty"->"(static)org.joda.time.field.AbstractPartialFieldProperty.getName(org.joda.time.field.AbstractPartialFieldProperty )java.lang.String"[label="1"]
"org.joda.time.field.AbstractPartialFieldProperty"->"(static)org.joda.time.field.AbstractPartialFieldProperty.getRangeDurationField(org.joda.time.field.AbstractPartialFieldProperty )org.joda.time.DurationField"[label="1"]
"org.joda.time.field.AbstractReadableInstantFieldProperty"->"(static)org.joda.time.field.AbstractReadableInstantFieldProperty.equals(org.joda.time.field.AbstractReadableInstantFieldProperty java.lang.Object )boolean"[label="1"]
"org.joda.time.field.AbstractReadableInstantFieldProperty"->"(static)org.joda.time.field.AbstractReadableInstantFieldProperty.get(org.joda.time.field.AbstractReadableInstantFieldProperty )int"[label="1"]
"org.joda.time.field.AbstractReadableInstantFieldProperty"->"(static)org.joda.time.field.AbstractReadableInstantFieldProperty.getAsShortText(org.joda.time.field.AbstractReadableInstantFieldProperty )java.lang.String"[label="1"]
"org.joda.time.field.AbstractReadableInstantFieldProperty"->"(static)org.joda.time.field.AbstractReadableInstantFieldProperty.getAsShortText(org.joda.time.field.AbstractReadableInstantFieldProperty java.util.Locale )java.lang.String"[label="1"]
"org.joda.time.field.AbstractReadableInstantFieldProperty"->"(static)org.joda.time.field.AbstractReadableInstantFieldProperty.getAsString(org.joda.time.field.AbstractReadableInstantFieldProperty )java.lang.String"[label="1"]
"org.joda.time.field.AbstractReadableInstantFieldProperty"->"(static)org.joda.time.field.AbstractReadableInstantFieldProperty.getAsText(org.joda.time.field.AbstractReadableInstantFieldProperty )java.lang.String"[label="1"]
"org.joda.time.field.AbstractReadableInstantFieldProperty"->"(static)org.joda.time.field.AbstractReadableInstantFieldProperty.getAsText(org.joda.time.field.AbstractReadableInstantFieldProperty java.util.Locale )java.lang.String"[label="1"]
"org.joda.time.field.AbstractReadableInstantFieldProperty"->"(static)org.joda.time.field.AbstractReadableInstantFieldProperty.getDifference(org.joda.time.field.AbstractReadableInstantFieldProperty org.joda.time.ReadableInstant )int"[label="1"]
"org.joda.time.field.AbstractReadableInstantFieldProperty"->"(static)org.joda.time.field.AbstractReadableInstantFieldProperty.getDifferenceAsLong(org.joda.time.field.AbstractReadableInstantFieldProperty org.joda.time.ReadableInstant )long"[label="1"]
"org.joda.time.field.AbstractReadableInstantFieldProperty"->"(static)org.joda.time.field.AbstractReadableInstantFieldProperty.getDurationField(org.joda.time.field.AbstractReadableInstantFieldProperty )org.joda.time.DurationField"[label="1"]
"org.joda.time.field.AbstractReadableInstantFieldProperty"->"(static)org.joda.time.field.AbstractReadableInstantFieldProperty.getField(org.joda.time.field.AbstractReadableInstantFieldProperty )org.joda.time.DateTimeField"[label="1"]
"org.joda.time.field.AbstractReadableInstantFieldProperty"->"(static)org.joda.time.field.AbstractReadableInstantFieldProperty.getFieldType(org.joda.time.field.AbstractReadableInstantFieldProperty )org.joda.time.DateTimeFieldType"[label="1"]
"org.joda.time.field.AbstractReadableInstantFieldProperty"->"(static)org.joda.time.field.AbstractReadableInstantFieldProperty.getLeapAmount(org.joda.time.field.AbstractReadableInstantFieldProperty )int"[label="1"]
"org.joda.time.field.AbstractReadableInstantFieldProperty"->"(static)org.joda.time.field.AbstractReadableInstantFieldProperty.getLeapDurationField(org.joda.time.field.AbstractReadableInstantFieldProperty )org.joda.time.DurationField"[label="1"]
"org.joda.time.field.AbstractReadableInstantFieldProperty"->"(static)org.joda.time.field.AbstractReadableInstantFieldProperty.getMaximumShortTextLength(org.joda.time.field.AbstractReadableInstantFieldProperty java.util.Locale )int"[label="1"]
"org.joda.time.field.AbstractReadableInstantFieldProperty"->"(static)org.joda.time.field.AbstractReadableInstantFieldProperty.getMaximumTextLength(org.joda.time.field.AbstractReadableInstantFieldProperty java.util.Locale )int"[label="1"]
"org.joda.time.field.AbstractReadableInstantFieldProperty"->"(static)org.joda.time.field.AbstractReadableInstantFieldProperty.getMaximumValue(org.joda.time.field.AbstractReadableInstantFieldProperty )int"[label="1"]
"org.joda.time.field.AbstractReadableInstantFieldProperty"->"(static)org.joda.time.field.AbstractReadableInstantFieldProperty.getMaximumValueOverall(org.joda.time.field.AbstractReadableInstantFieldProperty )int"[label="1"]
"org.joda.time.field.AbstractReadableInstantFieldProperty"->"(static)org.joda.time.field.AbstractReadableInstantFieldProperty.getMinimumValue(org.joda.time.field.AbstractReadableInstantFieldProperty )int"[label="1"]
"org.joda.time.field.AbstractReadableInstantFieldProperty"->"(static)org.joda.time.field.AbstractReadableInstantFieldProperty.getMinimumValueOverall(org.joda.time.field.AbstractReadableInstantFieldProperty )int"[label="1"]
"org.joda.time.field.AbstractReadableInstantFieldProperty"->"(static)org.joda.time.field.AbstractReadableInstantFieldProperty.getName(org.joda.time.field.AbstractReadableInstantFieldProperty )java.lang.String"[label="1"]
"org.joda.time.field.AbstractReadableInstantFieldProperty"->"(static)org.joda.time.field.AbstractReadableInstantFieldProperty.getRangeDurationField(org.joda.time.field.AbstractReadableInstantFieldProperty )org.joda.time.DurationField"[label="1"]
"org.joda.time.field.AbstractReadableInstantFieldProperty"->"(static)org.joda.time.field.AbstractReadableInstantFieldProperty.isLeap(org.joda.time.field.AbstractReadableInstantFieldProperty )boolean"[label="1"]
"org.joda.time.field.AbstractReadableInstantFieldProperty"->"(static)org.joda.time.field.AbstractReadableInstantFieldProperty.remainder(org.joda.time.field.AbstractReadableInstantFieldProperty )long"[label="1"]
"org.joda.time.field.AbstractReadableInstantFieldProperty"->"(static)org.joda.time.field.AbstractReadableInstantFieldProperty.toInterval(org.joda.time.field.AbstractReadableInstantFieldProperty )org.joda.time.Interval"[label="1"]
"org.joda.time.field.BaseDateTimeField"->"(static)org.joda.time.field.BaseDateTimeField.addWrapField(org.joda.time.field.BaseDateTimeField long int )long"[label="1"]
"org.joda.time.field.BaseDateTimeField"->"(static)org.joda.time.field.BaseDateTimeField.get(org.joda.time.field.BaseDateTimeField long )int"[label="1"]
"org.joda.time.field.BaseDateTimeField"->"(static)org.joda.time.field.BaseDateTimeField.getAsShortText(org.joda.time.field.BaseDateTimeField int java.util.Locale )java.lang.String"[label="1"]
"org.joda.time.field.BaseDateTimeField"->"(static)org.joda.time.field.BaseDateTimeField.getAsShortText(org.joda.time.field.BaseDateTimeField long )java.lang.String"[label="1"]
"org.joda.time.field.BaseDateTimeField"->"(static)org.joda.time.field.BaseDateTimeField.getAsShortText(org.joda.time.field.BaseDateTimeField long java.util.Locale )java.lang.String"[label="1"]
"org.joda.time.field.BaseDateTimeField"->"(static)org.joda.time.field.BaseDateTimeField.getAsShortText(org.joda.time.field.BaseDateTimeField org.joda.time.ReadablePartial java.util.Locale )java.lang.String"[label="1"]
"org.joda.time.field.BaseDateTimeField"->"(static)org.joda.time.field.BaseDateTimeField.getAsText(org.joda.time.field.BaseDateTimeField int java.util.Locale )java.lang.String"[label="1"]
"org.joda.time.field.BaseDateTimeField"->"(static)org.joda.time.field.BaseDateTimeField.getAsText(org.joda.time.field.BaseDateTimeField long )java.lang.String"[label="1"]
"org.joda.time.field.BaseDateTimeField"->"(static)org.joda.time.field.BaseDateTimeField.getAsText(org.joda.time.field.BaseDateTimeField long java.util.Locale )java.lang.String"[label="1"]
"org.joda.time.field.BaseDateTimeField"->"(static)org.joda.time.field.BaseDateTimeField.getAsText(org.joda.time.field.BaseDateTimeField org.joda.time.ReadablePartial java.util.Locale )java.lang.String"[label="1"]
"org.joda.time.field.BaseDateTimeField"->"(static)org.joda.time.field.BaseDateTimeField.getDifference(org.joda.time.field.BaseDateTimeField long long )int"[label="1"]
"org.joda.time.field.BaseDateTimeField"->"(static)org.joda.time.field.BaseDateTimeField.getDifferenceAsLong(org.joda.time.field.BaseDateTimeField long long )long"[label="1"]
"org.joda.time.field.BaseDateTimeField"->"(static)org.joda.time.field.BaseDateTimeField.getDurationField(org.joda.time.field.BaseDateTimeField )org.joda.time.DurationField"[label="1"]
"org.joda.time.field.BaseDateTimeField"->"(static)org.joda.time.field.BaseDateTimeField.getLeapAmount(org.joda.time.field.BaseDateTimeField long )int"[label="1"]
"org.joda.time.field.BaseDateTimeField"->"(static)org.joda.time.field.BaseDateTimeField.getLeapDurationField(org.joda.time.field.BaseDateTimeField )org.joda.time.DurationField"[label="1"]
"org.joda.time.field.BaseDateTimeField"->"(static)org.joda.time.field.BaseDateTimeField.getMaximumShortTextLength(org.joda.time.field.BaseDateTimeField java.util.Locale )int"[label="1"]
"org.joda.time.field.BaseDateTimeField"->"(static)org.joda.time.field.BaseDateTimeField.getMaximumTextLength(org.joda.time.field.BaseDateTimeField java.util.Locale )int"[label="1"]
"org.joda.time.field.BaseDateTimeField"->"(static)org.joda.time.field.BaseDateTimeField.getMaximumValue(org.joda.time.field.BaseDateTimeField )int"[label="1"]
"org.joda.time.field.BaseDateTimeField"->"(static)org.joda.time.field.BaseDateTimeField.getMaximumValue(org.joda.time.field.BaseDateTimeField long )int"[label="1"]
"org.joda.time.field.BaseDateTimeField"->"(static)org.joda.time.field.BaseDateTimeField.getMaximumValue(org.joda.time.field.BaseDateTimeField org.joda.time.ReadablePartial )int"[label="1"]
"org.joda.time.field.BaseDateTimeField"->"(static)org.joda.time.field.BaseDateTimeField.getMaximumValue(org.joda.time.field.BaseDateTimeField org.joda.time.ReadablePartial int[] )int"[label="1"]
"org.joda.time.field.BaseDateTimeField"->"(static)org.joda.time.field.BaseDateTimeField.getMinimumValue(org.joda.time.field.BaseDateTimeField )int"[label="1"]
"org.joda.time.field.BaseDateTimeField"->"(static)org.joda.time.field.BaseDateTimeField.getMinimumValue(org.joda.time.field.BaseDateTimeField long )int"[label="1"]
"org.joda.time.field.BaseDateTimeField"->"(static)org.joda.time.field.BaseDateTimeField.getMinimumValue(org.joda.time.field.BaseDateTimeField org.joda.time.ReadablePartial )int"[label="1"]
"org.joda.time.field.BaseDateTimeField"->"(static)org.joda.time.field.BaseDateTimeField.getMinimumValue(org.joda.time.field.BaseDateTimeField org.joda.time.ReadablePartial int[] )int"[label="1"]
"org.joda.time.field.BaseDateTimeField"->"(static)org.joda.time.field.BaseDateTimeField.getName(org.joda.time.field.BaseDateTimeField )java.lang.String"[label="1"]
"org.joda.time.field.BaseDateTimeField"->"(static)org.joda.time.field.BaseDateTimeField.getRangeDurationField(org.joda.time.field.BaseDateTimeField )org.joda.time.DurationField"[label="1"]
"org.joda.time.field.BaseDateTimeField"->"(static)org.joda.time.field.BaseDateTimeField.getType(org.joda.time.field.BaseDateTimeField )org.joda.time.DateTimeFieldType"[label="1"]
"org.joda.time.field.BaseDateTimeField"->"(static)org.joda.time.field.BaseDateTimeField.isLeap(org.joda.time.field.BaseDateTimeField long )boolean"[label="1"]
"org.joda.time.field.BaseDateTimeField"->"(static)org.joda.time.field.BaseDateTimeField.isSupported(org.joda.time.field.BaseDateTimeField )boolean"[label="1"]
"org.joda.time.field.BaseDateTimeField"->"(static)org.joda.time.field.BaseDateTimeField.remainder(org.joda.time.field.BaseDateTimeField long )long"[label="1"]
"org.joda.time.field.BaseDateTimeField"->"(static)org.joda.time.field.BaseDateTimeField.roundCeiling(org.joda.time.field.BaseDateTimeField long )long"[label="1"]
"org.joda.time.field.BaseDateTimeField"->"(static)org.joda.time.field.BaseDateTimeField.roundFloor(org.joda.time.field.BaseDateTimeField long )long"[label="1"]
"org.joda.time.field.BaseDateTimeField"->"(static)org.joda.time.field.BaseDateTimeField.roundHalfCeiling(org.joda.time.field.BaseDateTimeField long )long"[label="1"]
"org.joda.time.field.BaseDateTimeField"->"(static)org.joda.time.field.BaseDateTimeField.roundHalfEven(org.joda.time.field.BaseDateTimeField long )long"[label="1"]
"org.joda.time.field.BaseDateTimeField"->"(static)org.joda.time.field.BaseDateTimeField.roundHalfFloor(org.joda.time.field.BaseDateTimeField long )long"[label="1"]
"org.joda.time.field.BaseDateTimeField"->"(static)org.joda.time.field.BaseDateTimeField.set(org.joda.time.field.BaseDateTimeField long int )long"[label="1"]
"org.joda.time.field.BaseDateTimeField"->"(static)org.joda.time.field.BaseDateTimeField.set(org.joda.time.field.BaseDateTimeField long java.lang.String )long"[label="1"]
"org.joda.time.field.BaseDurationField"->"(static)org.joda.time.field.BaseDurationField.getDifference(org.joda.time.field.BaseDurationField long long )int"[label="1"]
"org.joda.time.field.BaseDurationField"->"(static)org.joda.time.field.BaseDurationField.getMillis(org.joda.time.field.BaseDurationField int )long"[label="1"]
"org.joda.time.field.BaseDurationField"->"(static)org.joda.time.field.BaseDurationField.getMillis(org.joda.time.field.BaseDurationField long )long"[label="1"]
"org.joda.time.field.BaseDurationField"->"(static)org.joda.time.field.BaseDurationField.getName(org.joda.time.field.BaseDurationField )java.lang.String"[label="1"]
"org.joda.time.field.BaseDurationField"->"(static)org.joda.time.field.BaseDurationField.getType(org.joda.time.field.BaseDurationField )org.joda.time.DurationFieldType"[label="1"]
"org.joda.time.field.BaseDurationField"->"(static)org.joda.time.field.BaseDurationField.getValue(org.joda.time.field.BaseDurationField long )int"[label="1"]
"org.joda.time.field.BaseDurationField"->"(static)org.joda.time.field.BaseDurationField.getValue(org.joda.time.field.BaseDurationField long long )int"[label="1"]
"org.joda.time.field.BaseDurationField"->"(static)org.joda.time.field.BaseDurationField.getValueAsLong(org.joda.time.field.BaseDurationField long )long"[label="1"]
"org.joda.time.field.BaseDurationField"->"(static)org.joda.time.field.BaseDurationField.isSupported(org.joda.time.field.BaseDurationField )boolean"[label="1"]
"org.joda.time.field.DecoratedDateTimeField"->"(static)org.joda.time.field.DecoratedDateTimeField.get(org.joda.time.field.DecoratedDateTimeField long )int"[label="1"]
"org.joda.time.field.DecoratedDateTimeField"->"(static)org.joda.time.field.DecoratedDateTimeField.getDurationField(org.joda.time.field.DecoratedDateTimeField )org.joda.time.DurationField"[label="1"]
"org.joda.time.field.DecoratedDateTimeField"->"(static)org.joda.time.field.DecoratedDateTimeField.getMaximumValue(org.joda.time.field.DecoratedDateTimeField )int"[label="1"]
"org.joda.time.field.DecoratedDateTimeField"->"(static)org.joda.time.field.DecoratedDateTimeField.getMinimumValue(org.joda.time.field.DecoratedDateTimeField )int"[label="1"]
"org.joda.time.field.DecoratedDateTimeField"->"(static)org.joda.time.field.DecoratedDateTimeField.getRangeDurationField(org.joda.time.field.DecoratedDateTimeField )org.joda.time.DurationField"[label="1"]
"org.joda.time.field.DecoratedDateTimeField"->"(static)org.joda.time.field.DecoratedDateTimeField.getWrappedField(org.joda.time.field.DecoratedDateTimeField )org.joda.time.DateTimeField"[label="1"]
"org.joda.time.field.DecoratedDateTimeField"->"(static)org.joda.time.field.DecoratedDateTimeField.isLenient(org.joda.time.field.DecoratedDateTimeField )boolean"[label="1"]
"org.joda.time.field.DecoratedDateTimeField"->"(static)org.joda.time.field.DecoratedDateTimeField.roundFloor(org.joda.time.field.DecoratedDateTimeField long )long"[label="1"]
"org.joda.time.field.DecoratedDateTimeField"->"(static)org.joda.time.field.DecoratedDateTimeField.set(org.joda.time.field.DecoratedDateTimeField long int )long"[label="1"]
"org.joda.time.field.DecoratedDurationField"->"(static)org.joda.time.field.DecoratedDurationField.getDifferenceAsLong(org.joda.time.field.DecoratedDurationField long long )long"[label="1"]
"org.joda.time.field.DecoratedDurationField"->"(static)org.joda.time.field.DecoratedDurationField.getMillis(org.joda.time.field.DecoratedDurationField int long )long"[label="1"]
"org.joda.time.field.DecoratedDurationField"->"(static)org.joda.time.field.DecoratedDurationField.getMillis(org.joda.time.field.DecoratedDurationField long long )long"[label="1"]
"org.joda.time.field.DecoratedDurationField"->"(static)org.joda.time.field.DecoratedDurationField.getUnitMillis(org.joda.time.field.DecoratedDurationField )long"[label="1"]
"org.joda.time.field.DecoratedDurationField"->"(static)org.joda.time.field.DecoratedDurationField.getValueAsLong(org.joda.time.field.DecoratedDurationField long long )long"[label="1"]
"org.joda.time.field.DecoratedDurationField"->"(static)org.joda.time.field.DecoratedDurationField.getWrappedField(org.joda.time.field.DecoratedDurationField )org.joda.time.DurationField"[label="1"]
"org.joda.time.field.DecoratedDurationField"->"(static)org.joda.time.field.DecoratedDurationField.isPrecise(org.joda.time.field.DecoratedDurationField )boolean"[label="1"]
"org.joda.time.field.DelegatedDateTimeField"->"(static)org.joda.time.field.DelegatedDateTimeField.addWrapField(org.joda.time.field.DelegatedDateTimeField long int )long"[label="1"]
"org.joda.time.field.DelegatedDateTimeField"->"(static)org.joda.time.field.DelegatedDateTimeField.get(org.joda.time.field.DelegatedDateTimeField long )int"[label="1"]
"org.joda.time.field.DelegatedDateTimeField"->"(static)org.joda.time.field.DelegatedDateTimeField.getAsShortText(org.joda.time.field.DelegatedDateTimeField int java.util.Locale )java.lang.String"[label="1"]
"org.joda.time.field.DelegatedDateTimeField"->"(static)org.joda.time.field.DelegatedDateTimeField.getAsShortText(org.joda.time.field.DelegatedDateTimeField long )java.lang.String"[label="1"]
"org.joda.time.field.DelegatedDateTimeField"->"(static)org.joda.time.field.DelegatedDateTimeField.getAsShortText(org.joda.time.field.DelegatedDateTimeField long java.util.Locale )java.lang.String"[label="1"]
"org.joda.time.field.DelegatedDateTimeField"->"(static)org.joda.time.field.DelegatedDateTimeField.getAsShortText(org.joda.time.field.DelegatedDateTimeField org.joda.time.ReadablePartial java.util.Locale )java.lang.String"[label="1"]
"org.joda.time.field.DelegatedDateTimeField"->"(static)org.joda.time.field.DelegatedDateTimeField.getAsText(org.joda.time.field.DelegatedDateTimeField int java.util.Locale )java.lang.String"[label="1"]
"org.joda.time.field.DelegatedDateTimeField"->"(static)org.joda.time.field.DelegatedDateTimeField.getAsText(org.joda.time.field.DelegatedDateTimeField long )java.lang.String"[label="1"]
"org.joda.time.field.DelegatedDateTimeField"->"(static)org.joda.time.field.DelegatedDateTimeField.getAsText(org.joda.time.field.DelegatedDateTimeField long java.util.Locale )java.lang.String"[label="1"]
"org.joda.time.field.DelegatedDateTimeField"->"(static)org.joda.time.field.DelegatedDateTimeField.getAsText(org.joda.time.field.DelegatedDateTimeField org.joda.time.ReadablePartial java.util.Locale )java.lang.String"[label="1"]
"org.joda.time.field.DelegatedDateTimeField"->"(static)org.joda.time.field.DelegatedDateTimeField.getDifference(org.joda.time.field.DelegatedDateTimeField long long )int"[label="1"]
"org.joda.time.field.DelegatedDateTimeField"->"(static)org.joda.time.field.DelegatedDateTimeField.getDifferenceAsLong(org.joda.time.field.DelegatedDateTimeField long long )long"[label="1"]
"org.joda.time.field.DelegatedDateTimeField"->"(static)org.joda.time.field.DelegatedDateTimeField.getDurationField(org.joda.time.field.DelegatedDateTimeField )org.joda.time.DurationField"[label="1"]
"org.joda.time.field.DelegatedDateTimeField"->"(static)org.joda.time.field.DelegatedDateTimeField.getLeapAmount(org.joda.time.field.DelegatedDateTimeField long )int"[label="1"]
"org.joda.time.field.DelegatedDateTimeField"->"(static)org.joda.time.field.DelegatedDateTimeField.getLeapDurationField(org.joda.time.field.DelegatedDateTimeField )org.joda.time.DurationField"[label="1"]
"org.joda.time.field.DelegatedDateTimeField"->"(static)org.joda.time.field.DelegatedDateTimeField.getMaximumShortTextLength(org.joda.time.field.DelegatedDateTimeField java.util.Locale )int"[label="1"]
"org.joda.time.field.DelegatedDateTimeField"->"(static)org.joda.time.field.DelegatedDateTimeField.getMaximumTextLength(org.joda.time.field.DelegatedDateTimeField java.util.Locale )int"[label="1"]
"org.joda.time.field.DelegatedDateTimeField"->"(static)org.joda.time.field.DelegatedDateTimeField.getMaximumValue(org.joda.time.field.DelegatedDateTimeField )int"[label="1"]
"org.joda.time.field.DelegatedDateTimeField"->"(static)org.joda.time.field.DelegatedDateTimeField.getMaximumValue(org.joda.time.field.DelegatedDateTimeField long )int"[label="1"]
"org.joda.time.field.DelegatedDateTimeField"->"(static)org.joda.time.field.DelegatedDateTimeField.getMaximumValue(org.joda.time.field.DelegatedDateTimeField org.joda.time.ReadablePartial )int"[label="1"]
"org.joda.time.field.DelegatedDateTimeField"->"(static)org.joda.time.field.DelegatedDateTimeField.getMaximumValue(org.joda.time.field.DelegatedDateTimeField org.joda.time.ReadablePartial int[] )int"[label="1"]
"org.joda.time.field.DelegatedDateTimeField"->"(static)org.joda.time.field.DelegatedDateTimeField.getMinimumValue(org.joda.time.field.DelegatedDateTimeField )int"[label="1"]
"org.joda.time.field.DelegatedDateTimeField"->"(static)org.joda.time.field.DelegatedDateTimeField.getMinimumValue(org.joda.time.field.DelegatedDateTimeField long )int"[label="1"]
"org.joda.time.field.DelegatedDateTimeField"->"(static)org.joda.time.field.DelegatedDateTimeField.getMinimumValue(org.joda.time.field.DelegatedDateTimeField org.joda.time.ReadablePartial )int"[label="1"]
"org.joda.time.field.DelegatedDateTimeField"->"(static)org.joda.time.field.DelegatedDateTimeField.getMinimumValue(org.joda.time.field.DelegatedDateTimeField org.joda.time.ReadablePartial int[] )int"[label="1"]
"org.joda.time.field.DelegatedDateTimeField"->"(static)org.joda.time.field.DelegatedDateTimeField.getName(org.joda.time.field.DelegatedDateTimeField )java.lang.String"[label="1"]
"org.joda.time.field.DelegatedDateTimeField"->"(static)org.joda.time.field.DelegatedDateTimeField.getRangeDurationField(org.joda.time.field.DelegatedDateTimeField )org.joda.time.DurationField"[label="1"]
"org.joda.time.field.DelegatedDateTimeField"->"(static)org.joda.time.field.DelegatedDateTimeField.getType(org.joda.time.field.DelegatedDateTimeField )org.joda.time.DateTimeFieldType"[label="1"]
"org.joda.time.field.DelegatedDateTimeField"->"(static)org.joda.time.field.DelegatedDateTimeField.getWrappedField(org.joda.time.field.DelegatedDateTimeField )org.joda.time.DateTimeField"[label="1"]
"org.joda.time.field.DelegatedDateTimeField"->"(static)org.joda.time.field.DelegatedDateTimeField.isLeap(org.joda.time.field.DelegatedDateTimeField long )boolean"[label="1"]
"org.joda.time.field.DelegatedDateTimeField"->"(static)org.joda.time.field.DelegatedDateTimeField.isLenient(org.joda.time.field.DelegatedDateTimeField )boolean"[label="1"]
"org.joda.time.field.DelegatedDateTimeField"->"(static)org.joda.time.field.DelegatedDateTimeField.isSupported(org.joda.time.field.DelegatedDateTimeField )boolean"[label="1"]
"org.joda.time.field.DelegatedDateTimeField"->"(static)org.joda.time.field.DelegatedDateTimeField.remainder(org.joda.time.field.DelegatedDateTimeField long )long"[label="1"]
"org.joda.time.field.DelegatedDateTimeField"->"(static)org.joda.time.field.DelegatedDateTimeField.roundCeiling(org.joda.time.field.DelegatedDateTimeField long )long"[label="1"]
"org.joda.time.field.DelegatedDateTimeField"->"(static)org.joda.time.field.DelegatedDateTimeField.roundFloor(org.joda.time.field.DelegatedDateTimeField long )long"[label="1"]
"org.joda.time.field.DelegatedDateTimeField"->"(static)org.joda.time.field.DelegatedDateTimeField.roundHalfCeiling(org.joda.time.field.DelegatedDateTimeField long )long"[label="1"]
"org.joda.time.field.DelegatedDateTimeField"->"(static)org.joda.time.field.DelegatedDateTimeField.roundHalfEven(org.joda.time.field.DelegatedDateTimeField long )long"[label="1"]
"org.joda.time.field.DelegatedDateTimeField"->"(static)org.joda.time.field.DelegatedDateTimeField.roundHalfFloor(org.joda.time.field.DelegatedDateTimeField long )long"[label="1"]
"org.joda.time.field.DelegatedDateTimeField"->"(static)org.joda.time.field.DelegatedDateTimeField.set(org.joda.time.field.DelegatedDateTimeField long int )long"[label="1"]
"org.joda.time.field.DelegatedDateTimeField"->"(static)org.joda.time.field.DelegatedDateTimeField.set(org.joda.time.field.DelegatedDateTimeField long java.lang.String )long"[label="1"]
"org.joda.time.field.DelegatedDurationField"->"(static)org.joda.time.field.DelegatedDurationField.equals(org.joda.time.field.DelegatedDurationField java.lang.Object )boolean"[label="1"]
"org.joda.time.field.DelegatedDurationField"->"(static)org.joda.time.field.DelegatedDurationField.getDifference(org.joda.time.field.DelegatedDurationField long long )int"[label="1"]
"org.joda.time.field.DelegatedDurationField"->"(static)org.joda.time.field.DelegatedDurationField.getDifferenceAsLong(org.joda.time.field.DelegatedDurationField long long )long"[label="1"]
"org.joda.time.field.DelegatedDurationField"->"(static)org.joda.time.field.DelegatedDurationField.getMillis(org.joda.time.field.DelegatedDurationField int )long"[label="1"]
"org.joda.time.field.DelegatedDurationField"->"(static)org.joda.time.field.DelegatedDurationField.getMillis(org.joda.time.field.DelegatedDurationField int long )long"[label="1"]
"org.joda.time.field.DelegatedDurationField"->"(static)org.joda.time.field.DelegatedDurationField.getMillis(org.joda.time.field.DelegatedDurationField long )long"[label="1"]
"org.joda.time.field.DelegatedDurationField"->"(static)org.joda.time.field.DelegatedDurationField.getMillis(org.joda.time.field.DelegatedDurationField long long )long"[label="1"]
"org.joda.time.field.DelegatedDurationField"->"(static)org.joda.time.field.DelegatedDurationField.getName(org.joda.time.field.DelegatedDurationField )java.lang.String"[label="1"]
"org.joda.time.field.DelegatedDurationField"->"(static)org.joda.time.field.DelegatedDurationField.getType(org.joda.time.field.DelegatedDurationField )org.joda.time.DurationFieldType"[label="1"]
"org.joda.time.field.DelegatedDurationField"->"(static)org.joda.time.field.DelegatedDurationField.getUnitMillis(org.joda.time.field.DelegatedDurationField )long"[label="1"]
"org.joda.time.field.DelegatedDurationField"->"(static)org.joda.time.field.DelegatedDurationField.getValue(org.joda.time.field.DelegatedDurationField long )int"[label="1"]
"org.joda.time.field.DelegatedDurationField"->"(static)org.joda.time.field.DelegatedDurationField.getValue(org.joda.time.field.DelegatedDurationField long long )int"[label="1"]
"org.joda.time.field.DelegatedDurationField"->"(static)org.joda.time.field.DelegatedDurationField.getValueAsLong(org.joda.time.field.DelegatedDurationField long )long"[label="1"]
"org.joda.time.field.DelegatedDurationField"->"(static)org.joda.time.field.DelegatedDurationField.getValueAsLong(org.joda.time.field.DelegatedDurationField long long )long"[label="1"]
"org.joda.time.field.DelegatedDurationField"->"(static)org.joda.time.field.DelegatedDurationField.getWrappedField(org.joda.time.field.DelegatedDurationField )org.joda.time.DurationField"[label="1"]
"org.joda.time.field.DelegatedDurationField"->"(static)org.joda.time.field.DelegatedDurationField.isPrecise(org.joda.time.field.DelegatedDurationField )boolean"[label="1"]
"org.joda.time.field.DelegatedDurationField"->"(static)org.joda.time.field.DelegatedDurationField.isSupported(org.joda.time.field.DelegatedDurationField )boolean"[label="1"]
"org.joda.time.field.DividedDateTimeField"->"(static)org.joda.time.field.DividedDateTimeField.addWrapField(org.joda.time.field.DividedDateTimeField long int )long"[label="1"]
"org.joda.time.field.DividedDateTimeField"->"(static)org.joda.time.field.DividedDateTimeField.get(org.joda.time.field.DividedDateTimeField long )int"[label="1"]
"org.joda.time.field.DividedDateTimeField"->"(static)org.joda.time.field.DividedDateTimeField.getDifference(org.joda.time.field.DividedDateTimeField long long )int"[label="1"]
"org.joda.time.field.DividedDateTimeField"->"(static)org.joda.time.field.DividedDateTimeField.getDifferenceAsLong(org.joda.time.field.DividedDateTimeField long long )long"[label="1"]
"org.joda.time.field.DividedDateTimeField"->"(static)org.joda.time.field.DividedDateTimeField.getDivisor(org.joda.time.field.DividedDateTimeField )int"[label="1"]
"org.joda.time.field.DividedDateTimeField"->"(static)org.joda.time.field.DividedDateTimeField.getDurationField(org.joda.time.field.DividedDateTimeField )org.joda.time.DurationField"[label="1"]
"org.joda.time.field.DividedDateTimeField"->"(static)org.joda.time.field.DividedDateTimeField.getMaximumValue(org.joda.time.field.DividedDateTimeField )int"[label="1"]
"org.joda.time.field.DividedDateTimeField"->"(static)org.joda.time.field.DividedDateTimeField.getMinimumValue(org.joda.time.field.DividedDateTimeField )int"[label="1"]
"org.joda.time.field.DividedDateTimeField"->"(static)org.joda.time.field.DividedDateTimeField.getRangeDurationField(org.joda.time.field.DividedDateTimeField )org.joda.time.DurationField"[label="1"]
"org.joda.time.field.DividedDateTimeField"->"(static)org.joda.time.field.DividedDateTimeField.remainder(org.joda.time.field.DividedDateTimeField long )long"[label="1"]
"org.joda.time.field.DividedDateTimeField"->"(static)org.joda.time.field.DividedDateTimeField.roundFloor(org.joda.time.field.DividedDateTimeField long )long"[label="1"]
"org.joda.time.field.DividedDateTimeField"->"(static)org.joda.time.field.DividedDateTimeField.set(org.joda.time.field.DividedDateTimeField long int )long"[label="1"]
"org.joda.time.field.DividedDateTimeField"->"org.joda.time.field.RemainderDateTimeField(org.joda.time.field.DividedDateTimeField )"[label="1"]
"org.joda.time.field.DividedDateTimeField"->"org.joda.time.field.RemainderDateTimeField(org.joda.time.field.DividedDateTimeField org.joda.time.DateTimeFieldType )"[label="1"]
"org.joda.time.field.ImpreciseDateTimeField"->"(static)org.joda.time.field.ImpreciseDateTimeField.get(org.joda.time.field.ImpreciseDateTimeField long )int"[label="1"]
"org.joda.time.field.ImpreciseDateTimeField"->"(static)org.joda.time.field.ImpreciseDateTimeField.getDifference(org.joda.time.field.ImpreciseDateTimeField long long )int"[label="1"]
"org.joda.time.field.ImpreciseDateTimeField"->"(static)org.joda.time.field.ImpreciseDateTimeField.getDifferenceAsLong(org.joda.time.field.ImpreciseDateTimeField long long )long"[label="1"]
"org.joda.time.field.ImpreciseDateTimeField"->"(static)org.joda.time.field.ImpreciseDateTimeField.getDurationField(org.joda.time.field.ImpreciseDateTimeField )org.joda.time.DurationField"[label="1"]
"org.joda.time.field.ImpreciseDateTimeField"->"(static)org.joda.time.field.ImpreciseDateTimeField.getRangeDurationField(org.joda.time.field.ImpreciseDateTimeField )org.joda.time.DurationField"[label="1"]
"org.joda.time.field.ImpreciseDateTimeField"->"(static)org.joda.time.field.ImpreciseDateTimeField.roundFloor(org.joda.time.field.ImpreciseDateTimeField long )long"[label="1"]
"org.joda.time.field.ImpreciseDateTimeField"->"(static)org.joda.time.field.ImpreciseDateTimeField.set(org.joda.time.field.ImpreciseDateTimeField long int )long"[label="1"]
"org.joda.time.field.ImpreciseDateTimeField$LinkedDurationField"->"(static)org.joda.time.field.ImpreciseDateTimeField$LinkedDurationField.getDifference(org.joda.time.field.ImpreciseDateTimeField$LinkedDurationField long long )int"[label="1"]
"org.joda.time.field.ImpreciseDateTimeField$LinkedDurationField"->"(static)org.joda.time.field.ImpreciseDateTimeField$LinkedDurationField.getDifferenceAsLong(org.joda.time.field.ImpreciseDateTimeField$LinkedDurationField long long )long"[label="1"]
"org.joda.time.field.ImpreciseDateTimeField$LinkedDurationField"->"(static)org.joda.time.field.ImpreciseDateTimeField$LinkedDurationField.getMillis(org.joda.time.field.ImpreciseDateTimeField$LinkedDurationField int long )long"[label="1"]
"org.joda.time.field.ImpreciseDateTimeField$LinkedDurationField"->"(static)org.joda.time.field.ImpreciseDateTimeField$LinkedDurationField.getMillis(org.joda.time.field.ImpreciseDateTimeField$LinkedDurationField long long )long"[label="1"]
"org.joda.time.field.ImpreciseDateTimeField$LinkedDurationField"->"(static)org.joda.time.field.ImpreciseDateTimeField$LinkedDurationField.getUnitMillis(org.joda.time.field.ImpreciseDateTimeField$LinkedDurationField )long"[label="1"]
"org.joda.time.field.ImpreciseDateTimeField$LinkedDurationField"->"(static)org.joda.time.field.ImpreciseDateTimeField$LinkedDurationField.getValue(org.joda.time.field.ImpreciseDateTimeField$LinkedDurationField long long )int"[label="1"]
"org.joda.time.field.ImpreciseDateTimeField$LinkedDurationField"->"(static)org.joda.time.field.ImpreciseDateTimeField$LinkedDurationField.getValueAsLong(org.joda.time.field.ImpreciseDateTimeField$LinkedDurationField long long )long"[label="1"]
"org.joda.time.field.ImpreciseDateTimeField$LinkedDurationField"->"(static)org.joda.time.field.ImpreciseDateTimeField$LinkedDurationField.isPrecise(org.joda.time.field.ImpreciseDateTimeField$LinkedDurationField )boolean"[label="1"]
"org.joda.time.field.LenientDateTimeField"->"(static)org.joda.time.field.LenientDateTimeField.isLenient(org.joda.time.field.LenientDateTimeField )boolean"[label="1"]
"org.joda.time.field.LenientDateTimeField"->"(static)org.joda.time.field.LenientDateTimeField.set(org.joda.time.field.LenientDateTimeField long int )long"[label="1"]
"org.joda.time.field.MillisDurationField"->"(static)org.joda.time.field.MillisDurationField.equals(org.joda.time.field.MillisDurationField java.lang.Object )boolean"[label="1"]
"org.joda.time.field.MillisDurationField"->"(static)org.joda.time.field.MillisDurationField.getDifference(org.joda.time.field.MillisDurationField long long )int"[label="1"]
"org.joda.time.field.MillisDurationField"->"(static)org.joda.time.field.MillisDurationField.getDifferenceAsLong(org.joda.time.field.MillisDurationField long long )long"[label="1"]
"org.joda.time.field.MillisDurationField"->"(static)org.joda.time.field.MillisDurationField.getMillis(org.joda.time.field.MillisDurationField int )long"[label="1"]
"org.joda.time.field.MillisDurationField"->"(static)org.joda.time.field.MillisDurationField.getMillis(org.joda.time.field.MillisDurationField int long )long"[label="1"]
"org.joda.time.field.MillisDurationField"->"(static)org.joda.time.field.MillisDurationField.getMillis(org.joda.time.field.MillisDurationField long )long"[label="1"]
"org.joda.time.field.MillisDurationField"->"(static)org.joda.time.field.MillisDurationField.getMillis(org.joda.time.field.MillisDurationField long long )long"[label="1"]
"org.joda.time.field.MillisDurationField"->"(static)org.joda.time.field.MillisDurationField.getName(org.joda.time.field.MillisDurationField )java.lang.String"[label="1"]
"org.joda.time.field.MillisDurationField"->"(static)org.joda.time.field.MillisDurationField.getType(org.joda.time.field.MillisDurationField )org.joda.time.DurationFieldType"[label="1"]
"org.joda.time.field.MillisDurationField"->"(static)org.joda.time.field.MillisDurationField.getUnitMillis(org.joda.time.field.MillisDurationField )long"[label="1"]
"org.joda.time.field.MillisDurationField"->"(static)org.joda.time.field.MillisDurationField.getValue(org.joda.time.field.MillisDurationField long )int"[label="1"]
"org.joda.time.field.MillisDurationField"->"(static)org.joda.time.field.MillisDurationField.getValue(org.joda.time.field.MillisDurationField long long )int"[label="1"]
"org.joda.time.field.MillisDurationField"->"(static)org.joda.time.field.MillisDurationField.getValueAsLong(org.joda.time.field.MillisDurationField long )long"[label="1"]
"org.joda.time.field.MillisDurationField"->"(static)org.joda.time.field.MillisDurationField.getValueAsLong(org.joda.time.field.MillisDurationField long long )long"[label="1"]
"org.joda.time.field.MillisDurationField"->"(static)org.joda.time.field.MillisDurationField.isPrecise(org.joda.time.field.MillisDurationField )boolean"[label="1"]
"org.joda.time.field.MillisDurationField"->"(static)org.joda.time.field.MillisDurationField.isSupported(org.joda.time.field.MillisDurationField )boolean"[label="1"]
"org.joda.time.field.OffsetDateTimeField"->"(static)org.joda.time.field.OffsetDateTimeField.addWrapField(org.joda.time.field.OffsetDateTimeField long int )long"[label="1"]
"org.joda.time.field.OffsetDateTimeField"->"(static)org.joda.time.field.OffsetDateTimeField.get(org.joda.time.field.OffsetDateTimeField long )int"[label="1"]
"org.joda.time.field.OffsetDateTimeField"->"(static)org.joda.time.field.OffsetDateTimeField.getLeapAmount(org.joda.time.field.OffsetDateTimeField long )int"[label="1"]
"org.joda.time.field.OffsetDateTimeField"->"(static)org.joda.time.field.OffsetDateTimeField.getLeapDurationField(org.joda.time.field.OffsetDateTimeField )org.joda.time.DurationField"[label="1"]
"org.joda.time.field.OffsetDateTimeField"->"(static)org.joda.time.field.OffsetDateTimeField.getMaximumValue(org.joda.time.field.OffsetDateTimeField )int"[label="1"]
"org.joda.time.field.OffsetDateTimeField"->"(static)org.joda.time.field.OffsetDateTimeField.getMinimumValue(org.joda.time.field.OffsetDateTimeField )int"[label="1"]
"org.joda.time.field.OffsetDateTimeField"->"(static)org.joda.time.field.OffsetDateTimeField.getOffset(org.joda.time.field.OffsetDateTimeField )int"[label="1"]
"org.joda.time.field.OffsetDateTimeField"->"(static)org.joda.time.field.OffsetDateTimeField.isLeap(org.joda.time.field.OffsetDateTimeField long )boolean"[label="1"]
"org.joda.time.field.OffsetDateTimeField"->"(static)org.joda.time.field.OffsetDateTimeField.remainder(org.joda.time.field.OffsetDateTimeField long )long"[label="1"]
"org.joda.time.field.OffsetDateTimeField"->"(static)org.joda.time.field.OffsetDateTimeField.roundCeiling(org.joda.time.field.OffsetDateTimeField long )long"[label="1"]
"org.joda.time.field.OffsetDateTimeField"->"(static)org.joda.time.field.OffsetDateTimeField.roundFloor(org.joda.time.field.OffsetDateTimeField long )long"[label="1"]
"org.joda.time.field.OffsetDateTimeField"->"(static)org.joda.time.field.OffsetDateTimeField.roundHalfCeiling(org.joda.time.field.OffsetDateTimeField long )long"[label="1"]
"org.joda.time.field.OffsetDateTimeField"->"(static)org.joda.time.field.OffsetDateTimeField.roundHalfEven(org.joda.time.field.OffsetDateTimeField long )long"[label="1"]
"org.joda.time.field.OffsetDateTimeField"->"(static)org.joda.time.field.OffsetDateTimeField.roundHalfFloor(org.joda.time.field.OffsetDateTimeField long )long"[label="1"]
"org.joda.time.field.OffsetDateTimeField"->"(static)org.joda.time.field.OffsetDateTimeField.set(org.joda.time.field.OffsetDateTimeField long int )long"[label="1"]
"org.joda.time.field.PreciseDateTimeField"->"(static)org.joda.time.field.PreciseDateTimeField.addWrapField(org.joda.time.field.PreciseDateTimeField long int )long"[label="1"]
"org.joda.time.field.PreciseDateTimeField"->"(static)org.joda.time.field.PreciseDateTimeField.get(org.joda.time.field.PreciseDateTimeField long )int"[label="1"]
"org.joda.time.field.PreciseDateTimeField"->"(static)org.joda.time.field.PreciseDateTimeField.getMaximumValue(org.joda.time.field.PreciseDateTimeField )int"[label="1"]
"org.joda.time.field.PreciseDateTimeField"->"(static)org.joda.time.field.PreciseDateTimeField.getRange(org.joda.time.field.PreciseDateTimeField )int"[label="1"]
"org.joda.time.field.PreciseDateTimeField"->"(static)org.joda.time.field.PreciseDateTimeField.getRangeDurationField(org.joda.time.field.PreciseDateTimeField )org.joda.time.DurationField"[label="1"]
"org.joda.time.field.PreciseDateTimeField"->"(static)org.joda.time.field.PreciseDateTimeField.set(org.joda.time.field.PreciseDateTimeField long int )long"[label="1"]
"org.joda.time.field.PreciseDurationDateTimeField"->"(static)org.joda.time.field.PreciseDurationDateTimeField.getDurationField(org.joda.time.field.PreciseDurationDateTimeField )org.joda.time.DurationField"[label="1"]
"org.joda.time.field.PreciseDurationDateTimeField"->"(static)org.joda.time.field.PreciseDurationDateTimeField.getMinimumValue(org.joda.time.field.PreciseDurationDateTimeField )int"[label="1"]
"org.joda.time.field.PreciseDurationDateTimeField"->"(static)org.joda.time.field.PreciseDurationDateTimeField.getUnitMillis(org.joda.time.field.PreciseDurationDateTimeField )long"[label="1"]
"org.joda.time.field.PreciseDurationDateTimeField"->"(static)org.joda.time.field.PreciseDurationDateTimeField.isLenient(org.joda.time.field.PreciseDurationDateTimeField )boolean"[label="1"]
"org.joda.time.field.PreciseDurationDateTimeField"->"(static)org.joda.time.field.PreciseDurationDateTimeField.remainder(org.joda.time.field.PreciseDurationDateTimeField long )long"[label="1"]
"org.joda.time.field.PreciseDurationDateTimeField"->"(static)org.joda.time.field.PreciseDurationDateTimeField.roundCeiling(org.joda.time.field.PreciseDurationDateTimeField long )long"[label="1"]
"org.joda.time.field.PreciseDurationDateTimeField"->"(static)org.joda.time.field.PreciseDurationDateTimeField.roundFloor(org.joda.time.field.PreciseDurationDateTimeField long )long"[label="1"]
"org.joda.time.field.PreciseDurationDateTimeField"->"(static)org.joda.time.field.PreciseDurationDateTimeField.set(org.joda.time.field.PreciseDurationDateTimeField long int )long"[label="1"]
"org.joda.time.field.PreciseDurationField"->"(static)org.joda.time.field.PreciseDurationField.equals(org.joda.time.field.PreciseDurationField java.lang.Object )boolean"[label="1"]
"org.joda.time.field.PreciseDurationField"->"(static)org.joda.time.field.PreciseDurationField.getDifferenceAsLong(org.joda.time.field.PreciseDurationField long long )long"[label="1"]
"org.joda.time.field.PreciseDurationField"->"(static)org.joda.time.field.PreciseDurationField.getMillis(org.joda.time.field.PreciseDurationField int long )long"[label="1"]
"org.joda.time.field.PreciseDurationField"->"(static)org.joda.time.field.PreciseDurationField.getMillis(org.joda.time.field.PreciseDurationField long long )long"[label="1"]
"org.joda.time.field.PreciseDurationField"->"(static)org.joda.time.field.PreciseDurationField.getUnitMillis(org.joda.time.field.PreciseDurationField )long"[label="1"]
"org.joda.time.field.PreciseDurationField"->"(static)org.joda.time.field.PreciseDurationField.getValueAsLong(org.joda.time.field.PreciseDurationField long long )long"[label="1"]
"org.joda.time.field.PreciseDurationField"->"(static)org.joda.time.field.PreciseDurationField.isPrecise(org.joda.time.field.PreciseDurationField )boolean"[label="1"]
"org.joda.time.field.RemainderDateTimeField"->"(static)org.joda.time.field.RemainderDateTimeField.addWrapField(org.joda.time.field.RemainderDateTimeField long int )long"[label="1"]
"org.joda.time.field.RemainderDateTimeField"->"(static)org.joda.time.field.RemainderDateTimeField.get(org.joda.time.field.RemainderDateTimeField long )int"[label="1"]
"org.joda.time.field.RemainderDateTimeField"->"(static)org.joda.time.field.RemainderDateTimeField.getDivisor(org.joda.time.field.RemainderDateTimeField )int"[label="1"]
"org.joda.time.field.RemainderDateTimeField"->"(static)org.joda.time.field.RemainderDateTimeField.getDurationField(org.joda.time.field.RemainderDateTimeField )org.joda.time.DurationField"[label="1"]
"org.joda.time.field.RemainderDateTimeField"->"(static)org.joda.time.field.RemainderDateTimeField.getMaximumValue(org.joda.time.field.RemainderDateTimeField )int"[label="1"]
"org.joda.time.field.RemainderDateTimeField"->"(static)org.joda.time.field.RemainderDateTimeField.getMinimumValue(org.joda.time.field.RemainderDateTimeField )int"[label="1"]
"org.joda.time.field.RemainderDateTimeField"->"(static)org.joda.time.field.RemainderDateTimeField.getRangeDurationField(org.joda.time.field.RemainderDateTimeField )org.joda.time.DurationField"[label="1"]
"org.joda.time.field.RemainderDateTimeField"->"(static)org.joda.time.field.RemainderDateTimeField.remainder(org.joda.time.field.RemainderDateTimeField long )long"[label="1"]
"org.joda.time.field.RemainderDateTimeField"->"(static)org.joda.time.field.RemainderDateTimeField.roundCeiling(org.joda.time.field.RemainderDateTimeField long )long"[label="1"]
"org.joda.time.field.RemainderDateTimeField"->"(static)org.joda.time.field.RemainderDateTimeField.roundFloor(org.joda.time.field.RemainderDateTimeField long )long"[label="1"]
"org.joda.time.field.RemainderDateTimeField"->"(static)org.joda.time.field.RemainderDateTimeField.roundHalfCeiling(org.joda.time.field.RemainderDateTimeField long )long"[label="1"]
"org.joda.time.field.RemainderDateTimeField"->"(static)org.joda.time.field.RemainderDateTimeField.roundHalfEven(org.joda.time.field.RemainderDateTimeField long )long"[label="1"]
"org.joda.time.field.RemainderDateTimeField"->"(static)org.joda.time.field.RemainderDateTimeField.roundHalfFloor(org.joda.time.field.RemainderDateTimeField long )long"[label="1"]
"org.joda.time.field.RemainderDateTimeField"->"(static)org.joda.time.field.RemainderDateTimeField.set(org.joda.time.field.RemainderDateTimeField long int )long"[label="1"]
"org.joda.time.field.RemainderDateTimeField"->"org.joda.time.field.DividedDateTimeField(org.joda.time.field.RemainderDateTimeField org.joda.time.DateTimeFieldType )"[label="1"]
"org.joda.time.field.ScaledDurationField"->"(static)org.joda.time.field.ScaledDurationField.equals(org.joda.time.field.ScaledDurationField java.lang.Object )boolean"[label="1"]
"org.joda.time.field.ScaledDurationField"->"(static)org.joda.time.field.ScaledDurationField.getDifference(org.joda.time.field.ScaledDurationField long long )int"[label="1"]
"org.joda.time.field.ScaledDurationField"->"(static)org.joda.time.field.ScaledDurationField.getDifferenceAsLong(org.joda.time.field.ScaledDurationField long long )long"[label="1"]
"org.joda.time.field.ScaledDurationField"->"(static)org.joda.time.field.ScaledDurationField.getMillis(org.joda.time.field.ScaledDurationField int )long"[label="1"]
"org.joda.time.field.ScaledDurationField"->"(static)org.joda.time.field.ScaledDurationField.getMillis(org.joda.time.field.ScaledDurationField int long )long"[label="1"]
"org.joda.time.field.ScaledDurationField"->"(static)org.joda.time.field.ScaledDurationField.getMillis(org.joda.time.field.ScaledDurationField long )long"[label="1"]
"org.joda.time.field.ScaledDurationField"->"(static)org.joda.time.field.ScaledDurationField.getMillis(org.joda.time.field.ScaledDurationField long long )long"[label="1"]
"org.joda.time.field.ScaledDurationField"->"(static)org.joda.time.field.ScaledDurationField.getScalar(org.joda.time.field.ScaledDurationField )int"[label="1"]
"org.joda.time.field.ScaledDurationField"->"(static)org.joda.time.field.ScaledDurationField.getUnitMillis(org.joda.time.field.ScaledDurationField )long"[label="1"]
"org.joda.time.field.ScaledDurationField"->"(static)org.joda.time.field.ScaledDurationField.getValue(org.joda.time.field.ScaledDurationField long )int"[label="1"]
"org.joda.time.field.ScaledDurationField"->"(static)org.joda.time.field.ScaledDurationField.getValue(org.joda.time.field.ScaledDurationField long long )int"[label="1"]
"org.joda.time.field.ScaledDurationField"->"(static)org.joda.time.field.ScaledDurationField.getValueAsLong(org.joda.time.field.ScaledDurationField long )long"[label="1"]
"org.joda.time.field.ScaledDurationField"->"(static)org.joda.time.field.ScaledDurationField.getValueAsLong(org.joda.time.field.ScaledDurationField long long )long"[label="1"]
"org.joda.time.field.SkipDateTimeField"->"(static)org.joda.time.field.SkipDateTimeField.get(org.joda.time.field.SkipDateTimeField long )int"[label="1"]
"org.joda.time.field.SkipDateTimeField"->"(static)org.joda.time.field.SkipDateTimeField.getMinimumValue(org.joda.time.field.SkipDateTimeField )int"[label="1"]
"org.joda.time.field.SkipDateTimeField"->"(static)org.joda.time.field.SkipDateTimeField.set(org.joda.time.field.SkipDateTimeField long int )long"[label="1"]
"org.joda.time.field.SkipUndoDateTimeField"->"(static)org.joda.time.field.SkipUndoDateTimeField.get(org.joda.time.field.SkipUndoDateTimeField long )int"[label="1"]
"org.joda.time.field.SkipUndoDateTimeField"->"(static)org.joda.time.field.SkipUndoDateTimeField.getMinimumValue(org.joda.time.field.SkipUndoDateTimeField )int"[label="1"]
"org.joda.time.field.SkipUndoDateTimeField"->"(static)org.joda.time.field.SkipUndoDateTimeField.set(org.joda.time.field.SkipUndoDateTimeField long int )long"[label="1"]
"org.joda.time.field.StrictDateTimeField"->"(static)org.joda.time.field.StrictDateTimeField.isLenient(org.joda.time.field.StrictDateTimeField )boolean"[label="1"]
"org.joda.time.field.StrictDateTimeField"->"(static)org.joda.time.field.StrictDateTimeField.set(org.joda.time.field.StrictDateTimeField long int )long"[label="1"]
"org.joda.time.field.UnsupportedDateTimeField"->"(static)org.joda.time.field.UnsupportedDateTimeField.addWrapField(org.joda.time.field.UnsupportedDateTimeField long int )long"[label="1"]
"org.joda.time.field.UnsupportedDateTimeField"->"(static)org.joda.time.field.UnsupportedDateTimeField.get(org.joda.time.field.UnsupportedDateTimeField long )int"[label="1"]
"org.joda.time.field.UnsupportedDateTimeField"->"(static)org.joda.time.field.UnsupportedDateTimeField.getAsShortText(org.joda.time.field.UnsupportedDateTimeField int java.util.Locale )java.lang.String"[label="1"]
"org.joda.time.field.UnsupportedDateTimeField"->"(static)org.joda.time.field.UnsupportedDateTimeField.getAsShortText(org.joda.time.field.UnsupportedDateTimeField long )java.lang.String"[label="1"]
"org.joda.time.field.UnsupportedDateTimeField"->"(static)org.joda.time.field.UnsupportedDateTimeField.getAsShortText(org.joda.time.field.UnsupportedDateTimeField long java.util.Locale )java.lang.String"[label="1"]
"org.joda.time.field.UnsupportedDateTimeField"->"(static)org.joda.time.field.UnsupportedDateTimeField.getAsShortText(org.joda.time.field.UnsupportedDateTimeField org.joda.time.ReadablePartial java.util.Locale )java.lang.String"[label="1"]
"org.joda.time.field.UnsupportedDateTimeField"->"(static)org.joda.time.field.UnsupportedDateTimeField.getAsText(org.joda.time.field.UnsupportedDateTimeField int java.util.Locale )java.lang.String"[label="1"]
"org.joda.time.field.UnsupportedDateTimeField"->"(static)org.joda.time.field.UnsupportedDateTimeField.getAsText(org.joda.time.field.UnsupportedDateTimeField long )java.lang.String"[label="1"]
"org.joda.time.field.UnsupportedDateTimeField"->"(static)org.joda.time.field.UnsupportedDateTimeField.getAsText(org.joda.time.field.UnsupportedDateTimeField long java.util.Locale )java.lang.String"[label="1"]
"org.joda.time.field.UnsupportedDateTimeField"->"(static)org.joda.time.field.UnsupportedDateTimeField.getAsText(org.joda.time.field.UnsupportedDateTimeField org.joda.time.ReadablePartial java.util.Locale )java.lang.String"[label="1"]
"org.joda.time.field.UnsupportedDateTimeField"->"(static)org.joda.time.field.UnsupportedDateTimeField.getDifference(org.joda.time.field.UnsupportedDateTimeField long long )int"[label="1"]
"org.joda.time.field.UnsupportedDateTimeField"->"(static)org.joda.time.field.UnsupportedDateTimeField.getDifferenceAsLong(org.joda.time.field.UnsupportedDateTimeField long long )long"[label="1"]
"org.joda.time.field.UnsupportedDateTimeField"->"(static)org.joda.time.field.UnsupportedDateTimeField.getDurationField(org.joda.time.field.UnsupportedDateTimeField )org.joda.time.DurationField"[label="1"]
"org.joda.time.field.UnsupportedDateTimeField"->"(static)org.joda.time.field.UnsupportedDateTimeField.getLeapAmount(org.joda.time.field.UnsupportedDateTimeField long )int"[label="1"]
"org.joda.time.field.UnsupportedDateTimeField"->"(static)org.joda.time.field.UnsupportedDateTimeField.getLeapDurationField(org.joda.time.field.UnsupportedDateTimeField )org.joda.time.DurationField"[label="1"]
"org.joda.time.field.UnsupportedDateTimeField"->"(static)org.joda.time.field.UnsupportedDateTimeField.getMaximumShortTextLength(org.joda.time.field.UnsupportedDateTimeField java.util.Locale )int"[label="1"]
"org.joda.time.field.UnsupportedDateTimeField"->"(static)org.joda.time.field.UnsupportedDateTimeField.getMaximumTextLength(org.joda.time.field.UnsupportedDateTimeField java.util.Locale )int"[label="1"]
"org.joda.time.field.UnsupportedDateTimeField"->"(static)org.joda.time.field.UnsupportedDateTimeField.getMaximumValue(org.joda.time.field.UnsupportedDateTimeField )int"[label="1"]
"org.joda.time.field.UnsupportedDateTimeField"->"(static)org.joda.time.field.UnsupportedDateTimeField.getMaximumValue(org.joda.time.field.UnsupportedDateTimeField long )int"[label="1"]
"org.joda.time.field.UnsupportedDateTimeField"->"(static)org.joda.time.field.UnsupportedDateTimeField.getMaximumValue(org.joda.time.field.UnsupportedDateTimeField org.joda.time.ReadablePartial )int"[label="1"]
"org.joda.time.field.UnsupportedDateTimeField"->"(static)org.joda.time.field.UnsupportedDateTimeField.getMaximumValue(org.joda.time.field.UnsupportedDateTimeField org.joda.time.ReadablePartial int[] )int"[label="1"]
"org.joda.time.field.UnsupportedDateTimeField"->"(static)org.joda.time.field.UnsupportedDateTimeField.getMinimumValue(org.joda.time.field.UnsupportedDateTimeField )int"[label="1"]
"org.joda.time.field.UnsupportedDateTimeField"->"(static)org.joda.time.field.UnsupportedDateTimeField.getMinimumValue(org.joda.time.field.UnsupportedDateTimeField long )int"[label="1"]
"org.joda.time.field.UnsupportedDateTimeField"->"(static)org.joda.time.field.UnsupportedDateTimeField.getMinimumValue(org.joda.time.field.UnsupportedDateTimeField org.joda.time.ReadablePartial )int"[label="1"]
"org.joda.time.field.UnsupportedDateTimeField"->"(static)org.joda.time.field.UnsupportedDateTimeField.getMinimumValue(org.joda.time.field.UnsupportedDateTimeField org.joda.time.ReadablePartial int[] )int"[label="1"]
"org.joda.time.field.UnsupportedDateTimeField"->"(static)org.joda.time.field.UnsupportedDateTimeField.getName(org.joda.time.field.UnsupportedDateTimeField )java.lang.String"[label="1"]
"org.joda.time.field.UnsupportedDateTimeField"->"(static)org.joda.time.field.UnsupportedDateTimeField.getRangeDurationField(org.joda.time.field.UnsupportedDateTimeField )org.joda.time.DurationField"[label="1"]
"org.joda.time.field.UnsupportedDateTimeField"->"(static)org.joda.time.field.UnsupportedDateTimeField.getType(org.joda.time.field.UnsupportedDateTimeField )org.joda.time.DateTimeFieldType"[label="1"]
"org.joda.time.field.UnsupportedDateTimeField"->"(static)org.joda.time.field.UnsupportedDateTimeField.isLeap(org.joda.time.field.UnsupportedDateTimeField long )boolean"[label="1"]
"org.joda.time.field.UnsupportedDateTimeField"->"(static)org.joda.time.field.UnsupportedDateTimeField.isLenient(org.joda.time.field.UnsupportedDateTimeField )boolean"[label="1"]
"org.joda.time.field.UnsupportedDateTimeField"->"(static)org.joda.time.field.UnsupportedDateTimeField.isSupported(org.joda.time.field.UnsupportedDateTimeField )boolean"[label="1"]
"org.joda.time.field.UnsupportedDateTimeField"->"(static)org.joda.time.field.UnsupportedDateTimeField.remainder(org.joda.time.field.UnsupportedDateTimeField long )long"[label="1"]
"org.joda.time.field.UnsupportedDateTimeField"->"(static)org.joda.time.field.UnsupportedDateTimeField.roundCeiling(org.joda.time.field.UnsupportedDateTimeField long )long"[label="1"]
"org.joda.time.field.UnsupportedDateTimeField"->"(static)org.joda.time.field.UnsupportedDateTimeField.roundFloor(org.joda.time.field.UnsupportedDateTimeField long )long"[label="1"]
"org.joda.time.field.UnsupportedDateTimeField"->"(static)org.joda.time.field.UnsupportedDateTimeField.roundHalfCeiling(org.joda.time.field.UnsupportedDateTimeField long )long"[label="1"]
"org.joda.time.field.UnsupportedDateTimeField"->"(static)org.joda.time.field.UnsupportedDateTimeField.roundHalfEven(org.joda.time.field.UnsupportedDateTimeField long )long"[label="1"]
"org.joda.time.field.UnsupportedDateTimeField"->"(static)org.joda.time.field.UnsupportedDateTimeField.roundHalfFloor(org.joda.time.field.UnsupportedDateTimeField long )long"[label="1"]
"org.joda.time.field.UnsupportedDateTimeField"->"(static)org.joda.time.field.UnsupportedDateTimeField.set(org.joda.time.field.UnsupportedDateTimeField long int )long"[label="1"]
"org.joda.time.field.UnsupportedDateTimeField"->"(static)org.joda.time.field.UnsupportedDateTimeField.set(org.joda.time.field.UnsupportedDateTimeField long java.lang.String )long"[label="1"]
"org.joda.time.field.UnsupportedDurationField"->"(static)org.joda.time.field.UnsupportedDurationField.equals(org.joda.time.field.UnsupportedDurationField java.lang.Object )boolean"[label="1"]
"org.joda.time.field.UnsupportedDurationField"->"(static)org.joda.time.field.UnsupportedDurationField.getDifference(org.joda.time.field.UnsupportedDurationField long long )int"[label="1"]
"org.joda.time.field.UnsupportedDurationField"->"(static)org.joda.time.field.UnsupportedDurationField.getDifferenceAsLong(org.joda.time.field.UnsupportedDurationField long long )long"[label="1"]
"org.joda.time.field.UnsupportedDurationField"->"(static)org.joda.time.field.UnsupportedDurationField.getMillis(org.joda.time.field.UnsupportedDurationField int )long"[label="1"]
"org.joda.time.field.UnsupportedDurationField"->"(static)org.joda.time.field.UnsupportedDurationField.getMillis(org.joda.time.field.UnsupportedDurationField int long )long"[label="1"]
"org.joda.time.field.UnsupportedDurationField"->"(static)org.joda.time.field.UnsupportedDurationField.getMillis(org.joda.time.field.UnsupportedDurationField long )long"[label="1"]
"org.joda.time.field.UnsupportedDurationField"->"(static)org.joda.time.field.UnsupportedDurationField.getMillis(org.joda.time.field.UnsupportedDurationField long long )long"[label="1"]
"org.joda.time.field.UnsupportedDurationField"->"(static)org.joda.time.field.UnsupportedDurationField.getName(org.joda.time.field.UnsupportedDurationField )java.lang.String"[label="1"]
"org.joda.time.field.UnsupportedDurationField"->"(static)org.joda.time.field.UnsupportedDurationField.getType(org.joda.time.field.UnsupportedDurationField )org.joda.time.DurationFieldType"[label="1"]
"org.joda.time.field.UnsupportedDurationField"->"(static)org.joda.time.field.UnsupportedDurationField.getUnitMillis(org.joda.time.field.UnsupportedDurationField )long"[label="1"]
"org.joda.time.field.UnsupportedDurationField"->"(static)org.joda.time.field.UnsupportedDurationField.getValue(org.joda.time.field.UnsupportedDurationField long )int"[label="1"]
"org.joda.time.field.UnsupportedDurationField"->"(static)org.joda.time.field.UnsupportedDurationField.getValue(org.joda.time.field.UnsupportedDurationField long long )int"[label="1"]
"org.joda.time.field.UnsupportedDurationField"->"(static)org.joda.time.field.UnsupportedDurationField.getValueAsLong(org.joda.time.field.UnsupportedDurationField long )long"[label="1"]
"org.joda.time.field.UnsupportedDurationField"->"(static)org.joda.time.field.UnsupportedDurationField.getValueAsLong(org.joda.time.field.UnsupportedDurationField long long )long"[label="1"]
"org.joda.time.field.UnsupportedDurationField"->"(static)org.joda.time.field.UnsupportedDurationField.isPrecise(org.joda.time.field.UnsupportedDurationField )boolean"[label="1"]
"org.joda.time.field.UnsupportedDurationField"->"(static)org.joda.time.field.UnsupportedDurationField.isSupported(org.joda.time.field.UnsupportedDurationField )boolean"[label="1"]
"org.joda.time.field.ZeroIsMaxDateTimeField"->"(static)org.joda.time.field.ZeroIsMaxDateTimeField.addWrapField(org.joda.time.field.ZeroIsMaxDateTimeField long int )long"[label="1"]
"org.joda.time.field.ZeroIsMaxDateTimeField"->"(static)org.joda.time.field.ZeroIsMaxDateTimeField.get(org.joda.time.field.ZeroIsMaxDateTimeField long )int"[label="1"]
"org.joda.time.field.ZeroIsMaxDateTimeField"->"(static)org.joda.time.field.ZeroIsMaxDateTimeField.getDifference(org.joda.time.field.ZeroIsMaxDateTimeField long long )int"[label="1"]
"org.joda.time.field.ZeroIsMaxDateTimeField"->"(static)org.joda.time.field.ZeroIsMaxDateTimeField.getDifferenceAsLong(org.joda.time.field.ZeroIsMaxDateTimeField long long )long"[label="1"]
"org.joda.time.field.ZeroIsMaxDateTimeField"->"(static)org.joda.time.field.ZeroIsMaxDateTimeField.getLeapAmount(org.joda.time.field.ZeroIsMaxDateTimeField long )int"[label="1"]
"org.joda.time.field.ZeroIsMaxDateTimeField"->"(static)org.joda.time.field.ZeroIsMaxDateTimeField.getLeapDurationField(org.joda.time.field.ZeroIsMaxDateTimeField )org.joda.time.DurationField"[label="1"]
"org.joda.time.field.ZeroIsMaxDateTimeField"->"(static)org.joda.time.field.ZeroIsMaxDateTimeField.getMaximumValue(org.joda.time.field.ZeroIsMaxDateTimeField )int"[label="1"]
"org.joda.time.field.ZeroIsMaxDateTimeField"->"(static)org.joda.time.field.ZeroIsMaxDateTimeField.getMaximumValue(org.joda.time.field.ZeroIsMaxDateTimeField long )int"[label="1"]
"org.joda.time.field.ZeroIsMaxDateTimeField"->"(static)org.joda.time.field.ZeroIsMaxDateTimeField.getMaximumValue(org.joda.time.field.ZeroIsMaxDateTimeField org.joda.time.ReadablePartial )int"[label="1"]
"org.joda.time.field.ZeroIsMaxDateTimeField"->"(static)org.joda.time.field.ZeroIsMaxDateTimeField.getMaximumValue(org.joda.time.field.ZeroIsMaxDateTimeField org.joda.time.ReadablePartial int[] )int"[label="1"]
"org.joda.time.field.ZeroIsMaxDateTimeField"->"(static)org.joda.time.field.ZeroIsMaxDateTimeField.getMinimumValue(org.joda.time.field.ZeroIsMaxDateTimeField )int"[label="1"]
"org.joda.time.field.ZeroIsMaxDateTimeField"->"(static)org.joda.time.field.ZeroIsMaxDateTimeField.getMinimumValue(org.joda.time.field.ZeroIsMaxDateTimeField long )int"[label="1"]
"org.joda.time.field.ZeroIsMaxDateTimeField"->"(static)org.joda.time.field.ZeroIsMaxDateTimeField.getMinimumValue(org.joda.time.field.ZeroIsMaxDateTimeField org.joda.time.ReadablePartial )int"[label="1"]
"org.joda.time.field.ZeroIsMaxDateTimeField"->"(static)org.joda.time.field.ZeroIsMaxDateTimeField.getMinimumValue(org.joda.time.field.ZeroIsMaxDateTimeField org.joda.time.ReadablePartial int[] )int"[label="1"]
"org.joda.time.field.ZeroIsMaxDateTimeField"->"(static)org.joda.time.field.ZeroIsMaxDateTimeField.isLeap(org.joda.time.field.ZeroIsMaxDateTimeField long )boolean"[label="1"]
"org.joda.time.field.ZeroIsMaxDateTimeField"->"(static)org.joda.time.field.ZeroIsMaxDateTimeField.remainder(org.joda.time.field.ZeroIsMaxDateTimeField long )long"[label="1"]
"org.joda.time.field.ZeroIsMaxDateTimeField"->"(static)org.joda.time.field.ZeroIsMaxDateTimeField.roundCeiling(org.joda.time.field.ZeroIsMaxDateTimeField long )long"[label="1"]
"org.joda.time.field.ZeroIsMaxDateTimeField"->"(static)org.joda.time.field.ZeroIsMaxDateTimeField.roundFloor(org.joda.time.field.ZeroIsMaxDateTimeField long )long"[label="1"]
"org.joda.time.field.ZeroIsMaxDateTimeField"->"(static)org.joda.time.field.ZeroIsMaxDateTimeField.roundHalfCeiling(org.joda.time.field.ZeroIsMaxDateTimeField long )long"[label="1"]
"org.joda.time.field.ZeroIsMaxDateTimeField"->"(static)org.joda.time.field.ZeroIsMaxDateTimeField.roundHalfEven(org.joda.time.field.ZeroIsMaxDateTimeField long )long"[label="1"]
"org.joda.time.field.ZeroIsMaxDateTimeField"->"(static)org.joda.time.field.ZeroIsMaxDateTimeField.roundHalfFloor(org.joda.time.field.ZeroIsMaxDateTimeField long )long"[label="1"]
"org.joda.time.field.ZeroIsMaxDateTimeField"->"(static)org.joda.time.field.ZeroIsMaxDateTimeField.set(org.joda.time.field.ZeroIsMaxDateTimeField long int )long"[label="1"]
"org.joda.time.format.DateTimeFormat$StyleFormatter"->"(static)org.joda.time.format.DateTimeFormat$StyleFormatter.estimateParsedLength(org.joda.time.format.DateTimeFormat$StyleFormatter )int"[label="1"]
"org.joda.time.format.DateTimeFormat$StyleFormatter"->"(static)org.joda.time.format.DateTimeFormat$StyleFormatter.estimatePrintedLength(org.joda.time.format.DateTimeFormat$StyleFormatter )int"[label="1"]
"org.joda.time.format.DateTimeFormat$StyleFormatterCacheKey"->"(static)org.joda.time.format.DateTimeFormat$StyleFormatterCacheKey.equals(org.joda.time.format.DateTimeFormat$StyleFormatterCacheKey java.lang.Object )boolean"[label="1"]
"org.joda.time.format.DateTimeFormatter"->"(static)org.joda.time.format.DateTimeFormatter.getChronolgy(org.joda.time.format.DateTimeFormatter )org.joda.time.Chronology"[label="1"]
"org.joda.time.format.DateTimeFormatter"->"(static)org.joda.time.format.DateTimeFormatter.getChronology(org.joda.time.format.DateTimeFormatter )org.joda.time.Chronology"[label="1"]
"org.joda.time.format.DateTimeFormatter"->"(static)org.joda.time.format.DateTimeFormatter.getDefaultYear(org.joda.time.format.DateTimeFormatter )int"[label="1"]
"org.joda.time.format.DateTimeFormatter"->"(static)org.joda.time.format.DateTimeFormatter.getLocale(org.joda.time.format.DateTimeFormatter )java.util.Locale"[label="1"]
"org.joda.time.format.DateTimeFormatter"->"(static)org.joda.time.format.DateTimeFormatter.getParser(org.joda.time.format.DateTimeFormatter )org.joda.time.format.DateTimeParser"[label="1"]
"org.joda.time.format.DateTimeFormatter"->"(static)org.joda.time.format.DateTimeFormatter.getPivotYear(org.joda.time.format.DateTimeFormatter )java.lang.Integer"[label="1"]
"org.joda.time.format.DateTimeFormatter"->"(static)org.joda.time.format.DateTimeFormatter.getPrinter(org.joda.time.format.DateTimeFormatter )org.joda.time.format.DateTimePrinter"[label="1"]
"org.joda.time.format.DateTimeFormatter"->"(static)org.joda.time.format.DateTimeFormatter.getZone(org.joda.time.format.DateTimeFormatter )org.joda.time.DateTimeZone"[label="1"]
"org.joda.time.format.DateTimeFormatter"->"(static)org.joda.time.format.DateTimeFormatter.isOffsetParsed(org.joda.time.format.DateTimeFormatter )boolean"[label="1"]
"org.joda.time.format.DateTimeFormatter"->"(static)org.joda.time.format.DateTimeFormatter.isParser(org.joda.time.format.DateTimeFormatter )boolean"[label="1"]
"org.joda.time.format.DateTimeFormatter"->"(static)org.joda.time.format.DateTimeFormatter.isPrinter(org.joda.time.format.DateTimeFormatter )boolean"[label="1"]
"org.joda.time.format.DateTimeFormatter"->"(static)org.joda.time.format.DateTimeFormatter.parseDateTime(org.joda.time.format.DateTimeFormatter java.lang.String )org.joda.time.DateTime"[label="1"]
"org.joda.time.format.DateTimeFormatter"->"(static)org.joda.time.format.DateTimeFormatter.parseLocalDate(org.joda.time.format.DateTimeFormatter java.lang.String )org.joda.time.LocalDate"[label="1"]
"org.joda.time.format.DateTimeFormatter"->"(static)org.joda.time.format.DateTimeFormatter.parseLocalDateTime(org.joda.time.format.DateTimeFormatter java.lang.String )org.joda.time.LocalDateTime"[label="1"]
"org.joda.time.format.DateTimeFormatter"->"(static)org.joda.time.format.DateTimeFormatter.parseLocalTime(org.joda.time.format.DateTimeFormatter java.lang.String )org.joda.time.LocalTime"[label="1"]
"org.joda.time.format.DateTimeFormatter"->"(static)org.joda.time.format.DateTimeFormatter.parseMillis(org.joda.time.format.DateTimeFormatter java.lang.String )long"[label="1"]
"org.joda.time.format.DateTimeFormatter"->"(static)org.joda.time.format.DateTimeFormatter.parseMutableDateTime(org.joda.time.format.DateTimeFormatter java.lang.String )org.joda.time.MutableDateTime"[label="1"]
"org.joda.time.format.DateTimeFormatter"->"(static)org.joda.time.format.DateTimeFormatter.print(org.joda.time.format.DateTimeFormatter long )java.lang.String"[label="1"]
"org.joda.time.format.DateTimeFormatter"->"(static)org.joda.time.format.DateTimeFormatter.print(org.joda.time.format.DateTimeFormatter org.joda.time.ReadableInstant )java.lang.String"[label="1"]
"org.joda.time.format.DateTimeFormatter"->"(static)org.joda.time.format.DateTimeFormatter.print(org.joda.time.format.DateTimeFormatter org.joda.time.ReadablePartial )java.lang.String"[label="1"]
"org.joda.time.format.DateTimeFormatter"->"(static)org.joda.time.format.DateTimeFormatter.withChronology(org.joda.time.format.DateTimeFormatter org.joda.time.Chronology )org.joda.time.format.DateTimeFormatter"[label="1"]
"org.joda.time.format.DateTimeFormatter"->"(static)org.joda.time.format.DateTimeFormatter.withDefaultYear(org.joda.time.format.DateTimeFormatter int )org.joda.time.format.DateTimeFormatter"[label="1"]
"org.joda.time.format.DateTimeFormatter"->"(static)org.joda.time.format.DateTimeFormatter.withLocale(org.joda.time.format.DateTimeFormatter java.util.Locale )org.joda.time.format.DateTimeFormatter"[label="1"]
"org.joda.time.format.DateTimeFormatter"->"(static)org.joda.time.format.DateTimeFormatter.withOffsetParsed(org.joda.time.format.DateTimeFormatter )org.joda.time.format.DateTimeFormatter"[label="1"]
"org.joda.time.format.DateTimeFormatter"->"(static)org.joda.time.format.DateTimeFormatter.withPivotYear(org.joda.time.format.DateTimeFormatter int )org.joda.time.format.DateTimeFormatter"[label="1"]
"org.joda.time.format.DateTimeFormatter"->"(static)org.joda.time.format.DateTimeFormatter.withPivotYear(org.joda.time.format.DateTimeFormatter java.lang.Integer )org.joda.time.format.DateTimeFormatter"[label="1"]
"org.joda.time.format.DateTimeFormatter"->"(static)org.joda.time.format.DateTimeFormatter.withZone(org.joda.time.format.DateTimeFormatter org.joda.time.DateTimeZone )org.joda.time.format.DateTimeFormatter"[label="1"]
"org.joda.time.format.DateTimeFormatter"->"(static)org.joda.time.format.DateTimeFormatter.withZoneUTC(org.joda.time.format.DateTimeFormatter )org.joda.time.format.DateTimeFormatter"[label="1"]
"org.joda.time.format.DateTimeFormatter"->"(static)org.joda.time.format.DateTimeFormatterBuilder.append(org.joda.time.format.DateTimeFormatterBuilder org.joda.time.format.DateTimeFormatter )org.joda.time.format.DateTimeFormatterBuilder"[label="1"]
"org.joda.time.format.DateTimeFormatter"->"org.joda.time.DateMidnight.parse(java.lang.String org.joda.time.format.DateTimeFormatter )org.joda.time.DateMidnight"[label="1"]
"org.joda.time.format.DateTimeFormatter"->"org.joda.time.DateTime.parse(java.lang.String org.joda.time.format.DateTimeFormatter )org.joda.time.DateTime"[label="1"]
"org.joda.time.format.DateTimeFormatter"->"org.joda.time.Instant.parse(java.lang.String org.joda.time.format.DateTimeFormatter )org.joda.time.Instant"[label="1"]
"org.joda.time.format.DateTimeFormatter"->"org.joda.time.LocalDate.parse(java.lang.String org.joda.time.format.DateTimeFormatter )org.joda.time.LocalDate"[label="1"]
"org.joda.time.format.DateTimeFormatter"->"org.joda.time.LocalDateTime.parse(java.lang.String org.joda.time.format.DateTimeFormatter )org.joda.time.LocalDateTime"[label="1"]
"org.joda.time.format.DateTimeFormatter"->"org.joda.time.LocalTime.parse(java.lang.String org.joda.time.format.DateTimeFormatter )org.joda.time.LocalTime"[label="1"]
"org.joda.time.format.DateTimeFormatter"->"org.joda.time.MonthDay.parse(java.lang.String org.joda.time.format.DateTimeFormatter )org.joda.time.MonthDay"[label="1"]
"org.joda.time.format.DateTimeFormatter"->"org.joda.time.MutableDateTime.parse(java.lang.String org.joda.time.format.DateTimeFormatter )org.joda.time.MutableDateTime"[label="1"]
"org.joda.time.format.DateTimeFormatter"->"org.joda.time.YearMonth.parse(java.lang.String org.joda.time.format.DateTimeFormatter )org.joda.time.YearMonth"[label="1"]
"org.joda.time.format.DateTimeFormatterBuilder"->"(static)org.joda.time.format.DateTimeFormatterBuilder.append(org.joda.time.format.DateTimeFormatterBuilder org.joda.time.format.DateTimeFormatter )org.joda.time.format.DateTimeFormatterBuilder"[label="1"]
"org.joda.time.format.DateTimeFormatterBuilder"->"(static)org.joda.time.format.DateTimeFormatterBuilder.append(org.joda.time.format.DateTimeFormatterBuilder org.joda.time.format.DateTimeParser )org.joda.time.format.DateTimeFormatterBuilder"[label="1"]
"org.joda.time.format.DateTimeFormatterBuilder"->"(static)org.joda.time.format.DateTimeFormatterBuilder.append(org.joda.time.format.DateTimeFormatterBuilder org.joda.time.format.DateTimePrinter )org.joda.time.format.DateTimeFormatterBuilder"[label="1"]
"org.joda.time.format.DateTimeFormatterBuilder"->"(static)org.joda.time.format.DateTimeFormatterBuilder.append(org.joda.time.format.DateTimeFormatterBuilder org.joda.time.format.DateTimePrinter org.joda.time.format.DateTimeParser )org.joda.time.format.DateTimeFormatterBuilder"[label="1"]
"org.joda.time.format.DateTimeFormatterBuilder"->"(static)org.joda.time.format.DateTimeFormatterBuilder.append(org.joda.time.format.DateTimeFormatterBuilder org.joda.time.format.DateTimePrinter org.joda.time.format.DateTimeParser[] )org.joda.time.format.DateTimeFormatterBuilder"[label="1"]
"org.joda.time.format.DateTimeFormatterBuilder"->"(static)org.joda.time.format.DateTimeFormatterBuilder.appendCenturyOfEra(org.joda.time.format.DateTimeFormatterBuilder int int )org.joda.time.format.DateTimeFormatterBuilder"[label="1"]
"org.joda.time.format.DateTimeFormatterBuilder"->"(static)org.joda.time.format.DateTimeFormatterBuilder.appendClockhourOfDay(org.joda.time.format.DateTimeFormatterBuilder int )org.joda.time.format.DateTimeFormatterBuilder"[label="1"]
"org.joda.time.format.DateTimeFormatterBuilder"->"(static)org.joda.time.format.DateTimeFormatterBuilder.appendClockhourOfHalfday(org.joda.time.format.DateTimeFormatterBuilder int )org.joda.time.format.DateTimeFormatterBuilder"[label="1"]
"org.joda.time.format.DateTimeFormatterBuilder"->"(static)org.joda.time.format.DateTimeFormatterBuilder.appendDayOfMonth(org.joda.time.format.DateTimeFormatterBuilder int )org.joda.time.format.DateTimeFormatterBuilder"[label="1"]
"org.joda.time.format.DateTimeFormatterBuilder"->"(static)org.joda.time.format.DateTimeFormatterBuilder.appendDayOfWeek(org.joda.time.format.DateTimeFormatterBuilder int )org.joda.time.format.DateTimeFormatterBuilder"[label="1"]
"org.joda.time.format.DateTimeFormatterBuilder"->"(static)org.joda.time.format.DateTimeFormatterBuilder.appendDayOfWeekShortText(org.joda.time.format.DateTimeFormatterBuilder )org.joda.time.format.DateTimeFormatterBuilder"[label="1"]
"org.joda.time.format.DateTimeFormatterBuilder"->"(static)org.joda.time.format.DateTimeFormatterBuilder.appendDayOfWeekText(org.joda.time.format.DateTimeFormatterBuilder )org.joda.time.format.DateTimeFormatterBuilder"[label="1"]
"org.joda.time.format.DateTimeFormatterBuilder"->"(static)org.joda.time.format.DateTimeFormatterBuilder.appendDayOfYear(org.joda.time.format.DateTimeFormatterBuilder int )org.joda.time.format.DateTimeFormatterBuilder"[label="1"]
"org.joda.time.format.DateTimeFormatterBuilder"->"(static)org.joda.time.format.DateTimeFormatterBuilder.appendEraText(org.joda.time.format.DateTimeFormatterBuilder )org.joda.time.format.DateTimeFormatterBuilder"[label="1"]
"org.joda.time.format.DateTimeFormatterBuilder"->"(static)org.joda.time.format.DateTimeFormatterBuilder.appendFixedDecimal(org.joda.time.format.DateTimeFormatterBuilder org.joda.time.DateTimeFieldType int )org.joda.time.format.DateTimeFormatterBuilder"[label="1"]
"org.joda.time.format.DateTimeFormatterBuilder"->"(static)org.joda.time.format.DateTimeFormatterBuilder.appendFixedSignedDecimal(org.joda.time.format.DateTimeFormatterBuilder org.joda.time.DateTimeFieldType int )org.joda.time.format.DateTimeFormatterBuilder"[label="1"]
"org.joda.time.format.DateTimeFormatterBuilder"->"(static)org.joda.time.format.DateTimeFormatterBuilder.appendFractionOfDay(org.joda.time.format.DateTimeFormatterBuilder int int )org.joda.time.format.DateTimeFormatterBuilder"[label="1"]
"org.joda.time.format.DateTimeFormatterBuilder"->"(static)org.joda.time.format.DateTimeFormatterBuilder.appendFractionOfHour(org.joda.time.format.DateTimeFormatterBuilder int int )org.joda.time.format.DateTimeFormatterBuilder"[label="1"]
"org.joda.time.format.DateTimeFormatterBuilder"->"(static)org.joda.time.format.DateTimeFormatterBuilder.appendFractionOfMinute(org.joda.time.format.DateTimeFormatterBuilder int int )org.joda.time.format.DateTimeFormatterBuilder"[label="1"]
"org.joda.time.format.DateTimeFormatterBuilder"->"(static)org.joda.time.format.DateTimeFormatterBuilder.appendFractionOfSecond(org.joda.time.format.DateTimeFormatterBuilder int int )org.joda.time.format.DateTimeFormatterBuilder"[label="1"]
"org.joda.time.format.DateTimeFormatterBuilder"->"(static)org.joda.time.format.DateTimeFormatterBuilder.appendHalfdayOfDayText(org.joda.time.format.DateTimeFormatterBuilder )org.joda.time.format.DateTimeFormatterBuilder"[label="1"]
"org.joda.time.format.DateTimeFormatterBuilder"->"(static)org.joda.time.format.DateTimeFormatterBuilder.appendHourOfDay(org.joda.time.format.DateTimeFormatterBuilder int )org.joda.time.format.DateTimeFormatterBuilder"[label="1"]
"org.joda.time.format.DateTimeFormatterBuilder"->"(static)org.joda.time.format.DateTimeFormatterBuilder.appendHourOfHalfday(org.joda.time.format.DateTimeFormatterBuilder int )org.joda.time.format.DateTimeFormatterBuilder"[label="1"]
"org.joda.time.format.DateTimeFormatterBuilder"->"(static)org.joda.time.format.DateTimeFormatterBuilder.appendLiteral(org.joda.time.format.DateTimeFormatterBuilder char )org.joda.time.format.DateTimeFormatterBuilder"[label="1"]
"org.joda.time.format.DateTimeFormatterBuilder"->"(static)org.joda.time.format.DateTimeFormatterBuilder.appendLiteral(org.joda.time.format.DateTimeFormatterBuilder java.lang.String )org.joda.time.format.DateTimeFormatterBuilder"[label="1"]
"org.joda.time.format.DateTimeFormatterBuilder"->"(static)org.joda.time.format.DateTimeFormatterBuilder.appendMillisOfDay(org.joda.time.format.DateTimeFormatterBuilder int )org.joda.time.format.DateTimeFormatterBuilder"[label="1"]
"org.joda.time.format.DateTimeFormatterBuilder"->"(static)org.joda.time.format.DateTimeFormatterBuilder.appendMillisOfSecond(org.joda.time.format.DateTimeFormatterBuilder int )org.joda.time.format.DateTimeFormatterBuilder"[label="1"]
"org.joda.time.format.DateTimeFormatterBuilder"->"(static)org.joda.time.format.DateTimeFormatterBuilder.appendMinuteOfDay(org.joda.time.format.DateTimeFormatterBuilder int )org.joda.time.format.DateTimeFormatterBuilder"[label="1"]
"org.joda.time.format.DateTimeFormatterBuilder"->"(static)org.joda.time.format.DateTimeFormatterBuilder.appendMinuteOfHour(org.joda.time.format.DateTimeFormatterBuilder int )org.joda.time.format.DateTimeFormatterBuilder"[label="1"]
"org.joda.time.format.DateTimeFormatterBuilder"->"(static)org.joda.time.format.DateTimeFormatterBuilder.appendMonthOfYear(org.joda.time.format.DateTimeFormatterBuilder int )org.joda.time.format.DateTimeFormatterBuilder"[label="1"]
"org.joda.time.format.DateTimeFormatterBuilder"->"(static)org.joda.time.format.DateTimeFormatterBuilder.appendMonthOfYearShortText(org.joda.time.format.DateTimeFormatterBuilder )org.joda.time.format.DateTimeFormatterBuilder"[label="1"]
"org.joda.time.format.DateTimeFormatterBuilder"->"(static)org.joda.time.format.DateTimeFormatterBuilder.appendMonthOfYearText(org.joda.time.format.DateTimeFormatterBuilder )org.joda.time.format.DateTimeFormatterBuilder"[label="1"]
"org.joda.time.format.DateTimeFormatterBuilder"->"(static)org.joda.time.format.DateTimeFormatterBuilder.appendOptional(org.joda.time.format.DateTimeFormatterBuilder org.joda.time.format.DateTimeParser )org.joda.time.format.DateTimeFormatterBuilder"[label="1"]
"org.joda.time.format.DateTimeFormatterBuilder"->"(static)org.joda.time.format.DateTimeFormatterBuilder.appendPattern(org.joda.time.format.DateTimeFormatterBuilder java.lang.String )org.joda.time.format.DateTimeFormatterBuilder"[label="1"]
"org.joda.time.format.DateTimeFormatterBuilder"->"(static)org.joda.time.format.DateTimeFormatterBuilder.appendSecondOfDay(org.joda.time.format.DateTimeFormatterBuilder int )org.joda.time.format.DateTimeFormatterBuilder"[label="1"]
"org.joda.time.format.DateTimeFormatterBuilder"->"(static)org.joda.time.format.DateTimeFormatterBuilder.appendSecondOfMinute(org.joda.time.format.DateTimeFormatterBuilder int )org.joda.time.format.DateTimeFormatterBuilder"[label="1"]
"org.joda.time.format.DateTimeFormatterBuilder"->"(static)org.joda.time.format.DateTimeFormatterBuilder.appendShortText(org.joda.time.format.DateTimeFormatterBuilder org.joda.time.DateTimeFieldType )org.joda.time.format.DateTimeFormatterBuilder"[label="1"]
"org.joda.time.format.DateTimeFormatterBuilder"->"(static)org.joda.time.format.DateTimeFormatterBuilder.appendText(org.joda.time.format.DateTimeFormatterBuilder org.joda.time.DateTimeFieldType )org.joda.time.format.DateTimeFormatterBuilder"[label="1"]
"org.joda.time.format.DateTimeFormatterBuilder"->"(static)org.joda.time.format.DateTimeFormatterBuilder.appendTimeZoneId(org.joda.time.format.DateTimeFormatterBuilder )org.joda.time.format.DateTimeFormatterBuilder"[label="1"]
"org.joda.time.format.DateTimeFormatterBuilder"->"(static)org.joda.time.format.DateTimeFormatterBuilder.appendTimeZoneName(org.joda.time.format.DateTimeFormatterBuilder )org.joda.time.format.DateTimeFormatterBuilder"[label="1"]
"org.joda.time.format.DateTimeFormatterBuilder"->"(static)org.joda.time.format.DateTimeFormatterBuilder.appendTimeZoneName(org.joda.time.format.DateTimeFormatterBuilder java.util.Map )org.joda.time.format.DateTimeFormatterBuilder"[label="1"]
"org.joda.time.format.DateTimeFormatterBuilder"->"(static)org.joda.time.format.DateTimeFormatterBuilder.appendTimeZoneShortName(org.joda.time.format.DateTimeFormatterBuilder )org.joda.time.format.DateTimeFormatterBuilder"[label="1"]
"org.joda.time.format.DateTimeFormatterBuilder"->"(static)org.joda.time.format.DateTimeFormatterBuilder.appendTimeZoneShortName(org.joda.time.format.DateTimeFormatterBuilder java.util.Map )org.joda.time.format.DateTimeFormatterBuilder"[label="1"]
"org.joda.time.format.DateTimeFormatterBuilder"->"(static)org.joda.time.format.DateTimeFormatterBuilder.appendTwoDigitWeekyear(org.joda.time.format.DateTimeFormatterBuilder int )org.joda.time.format.DateTimeFormatterBuilder"[label="1"]
"org.joda.time.format.DateTimeFormatterBuilder"->"(static)org.joda.time.format.DateTimeFormatterBuilder.appendTwoDigitWeekyear(org.joda.time.format.DateTimeFormatterBuilder int boolean )org.joda.time.format.DateTimeFormatterBuilder"[label="1"]
"org.joda.time.format.DateTimeFormatterBuilder"->"(static)org.joda.time.format.DateTimeFormatterBuilder.appendTwoDigitYear(org.joda.time.format.DateTimeFormatterBuilder int )org.joda.time.format.DateTimeFormatterBuilder"[label="1"]
"org.joda.time.format.DateTimeFormatterBuilder"->"(static)org.joda.time.format.DateTimeFormatterBuilder.appendTwoDigitYear(org.joda.time.format.DateTimeFormatterBuilder int boolean )org.joda.time.format.DateTimeFormatterBuilder"[label="1"]
"org.joda.time.format.DateTimeFormatterBuilder"->"(static)org.joda.time.format.DateTimeFormatterBuilder.appendWeekOfWeekyear(org.joda.time.format.DateTimeFormatterBuilder int )org.joda.time.format.DateTimeFormatterBuilder"[label="1"]
"org.joda.time.format.DateTimeFormatterBuilder"->"(static)org.joda.time.format.DateTimeFormatterBuilder.appendWeekyear(org.joda.time.format.DateTimeFormatterBuilder int int )org.joda.time.format.DateTimeFormatterBuilder"[label="1"]
"org.joda.time.format.DateTimeFormatterBuilder"->"(static)org.joda.time.format.DateTimeFormatterBuilder.appendYear(org.joda.time.format.DateTimeFormatterBuilder int int )org.joda.time.format.DateTimeFormatterBuilder"[label="1"]
"org.joda.time.format.DateTimeFormatterBuilder"->"(static)org.joda.time.format.DateTimeFormatterBuilder.appendYearOfCentury(org.joda.time.format.DateTimeFormatterBuilder int int )org.joda.time.format.DateTimeFormatterBuilder"[label="1"]
"org.joda.time.format.DateTimeFormatterBuilder"->"(static)org.joda.time.format.DateTimeFormatterBuilder.appendYearOfEra(org.joda.time.format.DateTimeFormatterBuilder int int )org.joda.time.format.DateTimeFormatterBuilder"[label="1"]
"org.joda.time.format.DateTimeFormatterBuilder"->"(static)org.joda.time.format.DateTimeFormatterBuilder.canBuildFormatter(org.joda.time.format.DateTimeFormatterBuilder )boolean"[label="1"]
"org.joda.time.format.DateTimeFormatterBuilder"->"(static)org.joda.time.format.DateTimeFormatterBuilder.canBuildParser(org.joda.time.format.DateTimeFormatterBuilder )boolean"[label="1"]
"org.joda.time.format.DateTimeFormatterBuilder"->"(static)org.joda.time.format.DateTimeFormatterBuilder.canBuildPrinter(org.joda.time.format.DateTimeFormatterBuilder )boolean"[label="1"]
"org.joda.time.format.DateTimeFormatterBuilder"->"(static)org.joda.time.format.DateTimeFormatterBuilder.toFormatter(org.joda.time.format.DateTimeFormatterBuilder )org.joda.time.format.DateTimeFormatter"[label="1"]
"org.joda.time.format.DateTimeFormatterBuilder"->"(static)org.joda.time.format.DateTimeFormatterBuilder.toParser(org.joda.time.format.DateTimeFormatterBuilder )org.joda.time.format.DateTimeParser"[label="1"]
"org.joda.time.format.DateTimeFormatterBuilder"->"(static)org.joda.time.format.DateTimeFormatterBuilder.toPrinter(org.joda.time.format.DateTimeFormatterBuilder )org.joda.time.format.DateTimePrinter"[label="1"]
"org.joda.time.format.DateTimeFormatterBuilder$CharacterLiteral"->"(static)org.joda.time.format.DateTimeFormatterBuilder$CharacterLiteral.estimateParsedLength(org.joda.time.format.DateTimeFormatterBuilder$CharacterLiteral )int"[label="1"]
"org.joda.time.format.DateTimeFormatterBuilder$CharacterLiteral"->"(static)org.joda.time.format.DateTimeFormatterBuilder$CharacterLiteral.estimatePrintedLength(org.joda.time.format.DateTimeFormatterBuilder$CharacterLiteral )int"[label="1"]
"org.joda.time.format.DateTimeFormatterBuilder$Composite"->"(static)org.joda.time.format.DateTimeFormatterBuilder$Composite.estimateParsedLength(org.joda.time.format.DateTimeFormatterBuilder$Composite )int"[label="1"]
"org.joda.time.format.DateTimeFormatterBuilder$Composite"->"(static)org.joda.time.format.DateTimeFormatterBuilder$Composite.estimatePrintedLength(org.joda.time.format.DateTimeFormatterBuilder$Composite )int"[label="1"]
"org.joda.time.format.DateTimeFormatterBuilder$Fraction"->"(static)org.joda.time.format.DateTimeFormatterBuilder$Fraction.estimateParsedLength(org.joda.time.format.DateTimeFormatterBuilder$Fraction )int"[label="1"]
"org.joda.time.format.DateTimeFormatterBuilder$Fraction"->"(static)org.joda.time.format.DateTimeFormatterBuilder$Fraction.estimatePrintedLength(org.joda.time.format.DateTimeFormatterBuilder$Fraction )int"[label="1"]
"org.joda.time.format.DateTimeFormatterBuilder$MatchingParser"->"(static)org.joda.time.format.DateTimeFormatterBuilder$MatchingParser.estimateParsedLength(org.joda.time.format.DateTimeFormatterBuilder$MatchingParser )int"[label="1"]
"org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter"->"(static)org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter.estimateParsedLength(org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter )int"[label="1"]
"org.joda.time.format.DateTimeFormatterBuilder$PaddedNumber"->"(static)org.joda.time.format.DateTimeFormatterBuilder$PaddedNumber.estimatePrintedLength(org.joda.time.format.DateTimeFormatterBuilder$PaddedNumber )int"[label="1"]
"org.joda.time.format.DateTimeFormatterBuilder$StringLiteral"->"(static)org.joda.time.format.DateTimeFormatterBuilder$StringLiteral.estimateParsedLength(org.joda.time.format.DateTimeFormatterBuilder$StringLiteral )int"[label="1"]
"org.joda.time.format.DateTimeFormatterBuilder$StringLiteral"->"(static)org.joda.time.format.DateTimeFormatterBuilder$StringLiteral.estimatePrintedLength(org.joda.time.format.DateTimeFormatterBuilder$StringLiteral )int"[label="1"]
"org.joda.time.format.DateTimeFormatterBuilder$TextField"->"(static)org.joda.time.format.DateTimeFormatterBuilder$TextField.estimateParsedLength(org.joda.time.format.DateTimeFormatterBuilder$TextField )int"[label="1"]
"org.joda.time.format.DateTimeFormatterBuilder$TextField"->"(static)org.joda.time.format.DateTimeFormatterBuilder$TextField.estimatePrintedLength(org.joda.time.format.DateTimeFormatterBuilder$TextField )int"[label="1"]
"org.joda.time.format.DateTimeFormatterBuilder$TimeZoneId"->"(static)org.joda.time.format.DateTimeFormatterBuilder$TimeZoneId.estimateParsedLength(org.joda.time.format.DateTimeFormatterBuilder$TimeZoneId )int"[label="1"]
"org.joda.time.format.DateTimeFormatterBuilder$TimeZoneId"->"(static)org.joda.time.format.DateTimeFormatterBuilder$TimeZoneId.estimatePrintedLength(org.joda.time.format.DateTimeFormatterBuilder$TimeZoneId )int"[label="1"]
"org.joda.time.format.DateTimeFormatterBuilder$TimeZoneName"->"(static)org.joda.time.format.DateTimeFormatterBuilder$TimeZoneName.estimateParsedLength(org.joda.time.format.DateTimeFormatterBuilder$TimeZoneName )int"[label="1"]
"org.joda.time.format.DateTimeFormatterBuilder$TimeZoneName"->"(static)org.joda.time.format.DateTimeFormatterBuilder$TimeZoneName.estimatePrintedLength(org.joda.time.format.DateTimeFormatterBuilder$TimeZoneName )int"[label="1"]
"org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset"->"(static)org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset.estimateParsedLength(org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset )int"[label="1"]
"org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset"->"(static)org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset.estimatePrintedLength(org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset )int"[label="1"]
"org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear"->"(static)org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear.estimateParsedLength(org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear )int"[label="1"]
"org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear"->"(static)org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear.estimatePrintedLength(org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear )int"[label="1"]
"org.joda.time.format.DateTimeFormatterBuilder$UnpaddedNumber"->"(static)org.joda.time.format.DateTimeFormatterBuilder$UnpaddedNumber.estimatePrintedLength(org.joda.time.format.DateTimeFormatterBuilder$UnpaddedNumber )int"[label="1"]
"org.joda.time.format.DateTimeParser"->"(static)org.joda.time.format.DateTimeFormatterBuilder.append(org.joda.time.format.DateTimeFormatterBuilder org.joda.time.format.DateTimeParser )org.joda.time.format.DateTimeFormatterBuilder"[label="1"]
"org.joda.time.format.DateTimeParser"->"(static)org.joda.time.format.DateTimeFormatterBuilder.append(org.joda.time.format.DateTimeFormatterBuilder org.joda.time.format.DateTimePrinter org.joda.time.format.DateTimeParser )org.joda.time.format.DateTimeFormatterBuilder"[label="1"]
"org.joda.time.format.DateTimeParser"->"(static)org.joda.time.format.DateTimeFormatterBuilder.appendOptional(org.joda.time.format.DateTimeFormatterBuilder org.joda.time.format.DateTimeParser )org.joda.time.format.DateTimeFormatterBuilder"[label="1"]
"org.joda.time.format.DateTimeParser"->"(static)org.joda.time.format.DateTimeParser.estimateParsedLength(org.joda.time.format.DateTimeParser )int"[label="1"]
"org.joda.time.format.DateTimeParser"->"(static)org.joda.time.format.DateTimeParserBucket.parseMillis(org.joda.time.format.DateTimeParserBucket org.joda.time.format.DateTimeParser java.lang.CharSequence )long"[label="1"]
"org.joda.time.format.DateTimeParser"->"org.joda.time.format.DateTimeFormatter(org.joda.time.format.DateTimePrinter org.joda.time.format.DateTimeParser )"[label="1"]
"org.joda.time.format.DateTimeParserBucket"->"(static)org.joda.time.format.DateTimeParserBucket.computeMillis(org.joda.time.format.DateTimeParserBucket )long"[label="1"]
"org.joda.time.format.DateTimeParserBucket"->"(static)org.joda.time.format.DateTimeParserBucket.computeMillis(org.joda.time.format.DateTimeParserBucket boolean )long"[label="1"]
"org.joda.time.format.DateTimeParserBucket"->"(static)org.joda.time.format.DateTimeParserBucket.computeMillis(org.joda.time.format.DateTimeParserBucket boolean java.lang.CharSequence )long"[label="1"]
"org.joda.time.format.DateTimeParserBucket"->"(static)org.joda.time.format.DateTimeParserBucket.computeMillis(org.joda.time.format.DateTimeParserBucket boolean java.lang.String )long"[label="1"]
"org.joda.time.format.DateTimeParserBucket"->"(static)org.joda.time.format.DateTimeParserBucket.getChronology(org.joda.time.format.DateTimeParserBucket )org.joda.time.Chronology"[label="1"]
"org.joda.time.format.DateTimeParserBucket"->"(static)org.joda.time.format.DateTimeParserBucket.getLocale(org.joda.time.format.DateTimeParserBucket )java.util.Locale"[label="1"]
"org.joda.time.format.DateTimeParserBucket"->"(static)org.joda.time.format.DateTimeParserBucket.getOffset(org.joda.time.format.DateTimeParserBucket )int"[label="1"]
"org.joda.time.format.DateTimeParserBucket"->"(static)org.joda.time.format.DateTimeParserBucket.getOffsetInteger(org.joda.time.format.DateTimeParserBucket )java.lang.Integer"[label="1"]
"org.joda.time.format.DateTimeParserBucket"->"(static)org.joda.time.format.DateTimeParserBucket.getPivotYear(org.joda.time.format.DateTimeParserBucket )java.lang.Integer"[label="1"]
"org.joda.time.format.DateTimeParserBucket"->"(static)org.joda.time.format.DateTimeParserBucket.getZone(org.joda.time.format.DateTimeParserBucket )org.joda.time.DateTimeZone"[label="1"]
"org.joda.time.format.DateTimeParserBucket"->"(static)org.joda.time.format.DateTimeParserBucket.parseMillis(org.joda.time.format.DateTimeParserBucket org.joda.time.format.DateTimeParser java.lang.CharSequence )long"[label="1"]
"org.joda.time.format.DateTimeParserBucket"->"(static)org.joda.time.format.DateTimeParserBucket.restoreState(org.joda.time.format.DateTimeParserBucket java.lang.Object )boolean"[label="1"]
"org.joda.time.format.DateTimeParserBucket"->"(static)org.joda.time.format.DateTimeParserBucket.saveState(org.joda.time.format.DateTimeParserBucket )java.lang.Object"[label="1"]
"org.joda.time.format.DateTimeParserInternalParser"->"(static)org.joda.time.format.DateTimeParserInternalParser.estimateParsedLength(org.joda.time.format.DateTimeParserInternalParser )int"[label="1"]
"org.joda.time.format.DateTimeParser[]"->"(static)org.joda.time.format.DateTimeFormatterBuilder.append(org.joda.time.format.DateTimeFormatterBuilder org.joda.time.format.DateTimePrinter org.joda.time.format.DateTimeParser[] )org.joda.time.format.DateTimeFormatterBuilder"[label="1"]
"org.joda.time.format.DateTimePrinter"->"(static)org.joda.time.format.DateTimeFormatterBuilder.append(org.joda.time.format.DateTimeFormatterBuilder org.joda.time.format.DateTimePrinter )org.joda.time.format.DateTimeFormatterBuilder"[label="1"]
"org.joda.time.format.DateTimePrinter"->"(static)org.joda.time.format.DateTimeFormatterBuilder.append(org.joda.time.format.DateTimeFormatterBuilder org.joda.time.format.DateTimePrinter org.joda.time.format.DateTimeParser )org.joda.time.format.DateTimeFormatterBuilder"[label="1"]
"org.joda.time.format.DateTimePrinter"->"(static)org.joda.time.format.DateTimeFormatterBuilder.append(org.joda.time.format.DateTimeFormatterBuilder org.joda.time.format.DateTimePrinter org.joda.time.format.DateTimeParser[] )org.joda.time.format.DateTimeFormatterBuilder"[label="1"]
"org.joda.time.format.DateTimePrinter"->"(static)org.joda.time.format.DateTimePrinter.estimatePrintedLength(org.joda.time.format.DateTimePrinter )int"[label="1"]
"org.joda.time.format.DateTimePrinter"->"org.joda.time.format.DateTimeFormatter(org.joda.time.format.DateTimePrinter org.joda.time.format.DateTimeParser )"[label="1"]
"org.joda.time.format.DateTimePrinterInternalPrinter"->"(static)org.joda.time.format.DateTimePrinterInternalPrinter.estimatePrintedLength(org.joda.time.format.DateTimePrinterInternalPrinter )int"[label="1"]
"org.joda.time.format.InternalParser"->"(static)org.joda.time.format.InternalParser.estimateParsedLength(org.joda.time.format.InternalParser )int"[label="1"]
"org.joda.time.format.InternalParserDateTimeParser"->"(static)org.joda.time.format.InternalParserDateTimeParser.equals(org.joda.time.format.InternalParserDateTimeParser java.lang.Object )boolean"[label="1"]
"org.joda.time.format.InternalParserDateTimeParser"->"(static)org.joda.time.format.InternalParserDateTimeParser.estimateParsedLength(org.joda.time.format.InternalParserDateTimeParser )int"[label="1"]
"org.joda.time.format.InternalPrinter"->"(static)org.joda.time.format.InternalPrinter.estimatePrintedLength(org.joda.time.format.InternalPrinter )int"[label="1"]
"org.joda.time.format.InternalPrinterDateTimePrinter"->"(static)org.joda.time.format.InternalPrinterDateTimePrinter.equals(org.joda.time.format.InternalPrinterDateTimePrinter java.lang.Object )boolean"[label="1"]
"org.joda.time.format.InternalPrinterDateTimePrinter"->"(static)org.joda.time.format.InternalPrinterDateTimePrinter.estimatePrintedLength(org.joda.time.format.InternalPrinterDateTimePrinter )int"[label="1"]
"org.joda.time.format.PeriodFormat$DynamicWordBased"->"(static)org.joda.time.format.PeriodFormat$DynamicWordBased.calculatePrintedLength(org.joda.time.format.PeriodFormat$DynamicWordBased org.joda.time.ReadablePeriod java.util.Locale )int"[label="1"]
"org.joda.time.format.PeriodFormatter"->"(static)org.joda.time.format.PeriodFormatter.getLocale(org.joda.time.format.PeriodFormatter )java.util.Locale"[label="1"]
"org.joda.time.format.PeriodFormatter"->"(static)org.joda.time.format.PeriodFormatter.getParseType(org.joda.time.format.PeriodFormatter )org.joda.time.PeriodType"[label="1"]
"org.joda.time.format.PeriodFormatter"->"(static)org.joda.time.format.PeriodFormatter.getParser(org.joda.time.format.PeriodFormatter )org.joda.time.format.PeriodParser"[label="1"]
"org.joda.time.format.PeriodFormatter"->"(static)org.joda.time.format.PeriodFormatter.getPrinter(org.joda.time.format.PeriodFormatter )org.joda.time.format.PeriodPrinter"[label="1"]
"org.joda.time.format.PeriodFormatter"->"(static)org.joda.time.format.PeriodFormatter.isParser(org.joda.time.format.PeriodFormatter )boolean"[label="1"]
"org.joda.time.format.PeriodFormatter"->"(static)org.joda.time.format.PeriodFormatter.isPrinter(org.joda.time.format.PeriodFormatter )boolean"[label="1"]
"org.joda.time.format.PeriodFormatter"->"(static)org.joda.time.format.PeriodFormatter.parseMutablePeriod(org.joda.time.format.PeriodFormatter java.lang.String )org.joda.time.MutablePeriod"[label="1"]
"org.joda.time.format.PeriodFormatter"->"(static)org.joda.time.format.PeriodFormatter.parsePeriod(org.joda.time.format.PeriodFormatter java.lang.String )org.joda.time.Period"[label="1"]
"org.joda.time.format.PeriodFormatter"->"(static)org.joda.time.format.PeriodFormatter.print(org.joda.time.format.PeriodFormatter org.joda.time.ReadablePeriod )java.lang.String"[label="1"]
"org.joda.time.format.PeriodFormatter"->"(static)org.joda.time.format.PeriodFormatter.withLocale(org.joda.time.format.PeriodFormatter java.util.Locale )org.joda.time.format.PeriodFormatter"[label="1"]
"org.joda.time.format.PeriodFormatter"->"(static)org.joda.time.format.PeriodFormatter.withParseType(org.joda.time.format.PeriodFormatter org.joda.time.PeriodType )org.joda.time.format.PeriodFormatter"[label="1"]
"org.joda.time.format.PeriodFormatter"->"(static)org.joda.time.format.PeriodFormatterBuilder.append(org.joda.time.format.PeriodFormatterBuilder org.joda.time.format.PeriodFormatter )org.joda.time.format.PeriodFormatterBuilder"[label="1"]
"org.joda.time.format.PeriodFormatter"->"org.joda.time.MutablePeriod.parse(java.lang.String org.joda.time.format.PeriodFormatter )org.joda.time.MutablePeriod"[label="1"]
"org.joda.time.format.PeriodFormatter"->"org.joda.time.Period.parse(java.lang.String org.joda.time.format.PeriodFormatter )org.joda.time.Period"[label="1"]
"org.joda.time.format.PeriodFormatterBuilder"->"(static)org.joda.time.format.PeriodFormatterBuilder.append(org.joda.time.format.PeriodFormatterBuilder org.joda.time.format.PeriodFormatter )org.joda.time.format.PeriodFormatterBuilder"[label="1"]
"org.joda.time.format.PeriodFormatterBuilder"->"(static)org.joda.time.format.PeriodFormatterBuilder.append(org.joda.time.format.PeriodFormatterBuilder org.joda.time.format.PeriodPrinter org.joda.time.format.PeriodParser )org.joda.time.format.PeriodFormatterBuilder"[label="1"]
"org.joda.time.format.PeriodFormatterBuilder"->"(static)org.joda.time.format.PeriodFormatterBuilder.appendDays(org.joda.time.format.PeriodFormatterBuilder )org.joda.time.format.PeriodFormatterBuilder"[label="1"]
"org.joda.time.format.PeriodFormatterBuilder"->"(static)org.joda.time.format.PeriodFormatterBuilder.appendHours(org.joda.time.format.PeriodFormatterBuilder )org.joda.time.format.PeriodFormatterBuilder"[label="1"]
"org.joda.time.format.PeriodFormatterBuilder"->"(static)org.joda.time.format.PeriodFormatterBuilder.appendLiteral(org.joda.time.format.PeriodFormatterBuilder java.lang.String )org.joda.time.format.PeriodFormatterBuilder"[label="1"]
"org.joda.time.format.PeriodFormatterBuilder"->"(static)org.joda.time.format.PeriodFormatterBuilder.appendMillis(org.joda.time.format.PeriodFormatterBuilder )org.joda.time.format.PeriodFormatterBuilder"[label="1"]
"org.joda.time.format.PeriodFormatterBuilder"->"(static)org.joda.time.format.PeriodFormatterBuilder.appendMillis3Digit(org.joda.time.format.PeriodFormatterBuilder )org.joda.time.format.PeriodFormatterBuilder"[label="1"]
"org.joda.time.format.PeriodFormatterBuilder"->"(static)org.joda.time.format.PeriodFormatterBuilder.appendMinutes(org.joda.time.format.PeriodFormatterBuilder )org.joda.time.format.PeriodFormatterBuilder"[label="1"]
"org.joda.time.format.PeriodFormatterBuilder"->"(static)org.joda.time.format.PeriodFormatterBuilder.appendMonths(org.joda.time.format.PeriodFormatterBuilder )org.joda.time.format.PeriodFormatterBuilder"[label="1"]
"org.joda.time.format.PeriodFormatterBuilder"->"(static)org.joda.time.format.PeriodFormatterBuilder.appendPrefix(org.joda.time.format.PeriodFormatterBuilder java.lang.String )org.joda.time.format.PeriodFormatterBuilder"[label="1"]
"org.joda.time.format.PeriodFormatterBuilder"->"(static)org.joda.time.format.PeriodFormatterBuilder.appendPrefix(org.joda.time.format.PeriodFormatterBuilder java.lang.String java.lang.String )org.joda.time.format.PeriodFormatterBuilder"[label="1"]
"org.joda.time.format.PeriodFormatterBuilder"->"(static)org.joda.time.format.PeriodFormatterBuilder.appendPrefix(org.joda.time.format.PeriodFormatterBuilder java.lang.String[] java.lang.String[] )org.joda.time.format.PeriodFormatterBuilder"[label="1"]
"org.joda.time.format.PeriodFormatterBuilder"->"(static)org.joda.time.format.PeriodFormatterBuilder.appendSeconds(org.joda.time.format.PeriodFormatterBuilder )org.joda.time.format.PeriodFormatterBuilder"[label="1"]
"org.joda.time.format.PeriodFormatterBuilder"->"(static)org.joda.time.format.PeriodFormatterBuilder.appendSecondsWithMillis(org.joda.time.format.PeriodFormatterBuilder )org.joda.time.format.PeriodFormatterBuilder"[label="1"]
"org.joda.time.format.PeriodFormatterBuilder"->"(static)org.joda.time.format.PeriodFormatterBuilder.appendSecondsWithOptionalMillis(org.joda.time.format.PeriodFormatterBuilder )org.joda.time.format.PeriodFormatterBuilder"[label="1"]
"org.joda.time.format.PeriodFormatterBuilder"->"(static)org.joda.time.format.PeriodFormatterBuilder.appendSeparator(org.joda.time.format.PeriodFormatterBuilder java.lang.String )org.joda.time.format.PeriodFormatterBuilder"[label="1"]
"org.joda.time.format.PeriodFormatterBuilder"->"(static)org.joda.time.format.PeriodFormatterBuilder.appendSeparator(org.joda.time.format.PeriodFormatterBuilder java.lang.String java.lang.String )org.joda.time.format.PeriodFormatterBuilder"[label="1"]
"org.joda.time.format.PeriodFormatterBuilder"->"(static)org.joda.time.format.PeriodFormatterBuilder.appendSeparatorIfFieldsAfter(org.joda.time.format.PeriodFormatterBuilder java.lang.String )org.joda.time.format.PeriodFormatterBuilder"[label="1"]
"org.joda.time.format.PeriodFormatterBuilder"->"(static)org.joda.time.format.PeriodFormatterBuilder.appendSeparatorIfFieldsBefore(org.joda.time.format.PeriodFormatterBuilder java.lang.String )org.joda.time.format.PeriodFormatterBuilder"[label="1"]
"org.joda.time.format.PeriodFormatterBuilder"->"(static)org.joda.time.format.PeriodFormatterBuilder.appendSuffix(org.joda.time.format.PeriodFormatterBuilder java.lang.String )org.joda.time.format.PeriodFormatterBuilder"[label="1"]
"org.joda.time.format.PeriodFormatterBuilder"->"(static)org.joda.time.format.PeriodFormatterBuilder.appendSuffix(org.joda.time.format.PeriodFormatterBuilder java.lang.String java.lang.String )org.joda.time.format.PeriodFormatterBuilder"[label="1"]
"org.joda.time.format.PeriodFormatterBuilder"->"(static)org.joda.time.format.PeriodFormatterBuilder.appendSuffix(org.joda.time.format.PeriodFormatterBuilder java.lang.String[] java.lang.String[] )org.joda.time.format.PeriodFormatterBuilder"[label="1"]
"org.joda.time.format.PeriodFormatterBuilder"->"(static)org.joda.time.format.PeriodFormatterBuilder.appendWeeks(org.joda.time.format.PeriodFormatterBuilder )org.joda.time.format.PeriodFormatterBuilder"[label="1"]
"org.joda.time.format.PeriodFormatterBuilder"->"(static)org.joda.time.format.PeriodFormatterBuilder.appendYears(org.joda.time.format.PeriodFormatterBuilder )org.joda.time.format.PeriodFormatterBuilder"[label="1"]
"org.joda.time.format.PeriodFormatterBuilder"->"(static)org.joda.time.format.PeriodFormatterBuilder.maximumParsedDigits(org.joda.time.format.PeriodFormatterBuilder int )org.joda.time.format.PeriodFormatterBuilder"[label="1"]
"org.joda.time.format.PeriodFormatterBuilder"->"(static)org.joda.time.format.PeriodFormatterBuilder.minimumPrintedDigits(org.joda.time.format.PeriodFormatterBuilder int )org.joda.time.format.PeriodFormatterBuilder"[label="1"]
"org.joda.time.format.PeriodFormatterBuilder"->"(static)org.joda.time.format.PeriodFormatterBuilder.printZeroAlways(org.joda.time.format.PeriodFormatterBuilder )org.joda.time.format.PeriodFormatterBuilder"[label="1"]
"org.joda.time.format.PeriodFormatterBuilder"->"(static)org.joda.time.format.PeriodFormatterBuilder.printZeroIfSupported(org.joda.time.format.PeriodFormatterBuilder )org.joda.time.format.PeriodFormatterBuilder"[label="1"]
"org.joda.time.format.PeriodFormatterBuilder"->"(static)org.joda.time.format.PeriodFormatterBuilder.printZeroNever(org.joda.time.format.PeriodFormatterBuilder )org.joda.time.format.PeriodFormatterBuilder"[label="1"]
"org.joda.time.format.PeriodFormatterBuilder"->"(static)org.joda.time.format.PeriodFormatterBuilder.printZeroRarelyFirst(org.joda.time.format.PeriodFormatterBuilder )org.joda.time.format.PeriodFormatterBuilder"[label="1"]
"org.joda.time.format.PeriodFormatterBuilder"->"(static)org.joda.time.format.PeriodFormatterBuilder.printZeroRarelyLast(org.joda.time.format.PeriodFormatterBuilder )org.joda.time.format.PeriodFormatterBuilder"[label="1"]
"org.joda.time.format.PeriodFormatterBuilder"->"(static)org.joda.time.format.PeriodFormatterBuilder.rejectSignedValues(org.joda.time.format.PeriodFormatterBuilder boolean )org.joda.time.format.PeriodFormatterBuilder"[label="1"]
"org.joda.time.format.PeriodFormatterBuilder"->"(static)org.joda.time.format.PeriodFormatterBuilder.toFormatter(org.joda.time.format.PeriodFormatterBuilder )org.joda.time.format.PeriodFormatter"[label="1"]
"org.joda.time.format.PeriodFormatterBuilder"->"(static)org.joda.time.format.PeriodFormatterBuilder.toParser(org.joda.time.format.PeriodFormatterBuilder )org.joda.time.format.PeriodParser"[label="1"]
"org.joda.time.format.PeriodFormatterBuilder"->"(static)org.joda.time.format.PeriodFormatterBuilder.toPrinter(org.joda.time.format.PeriodFormatterBuilder )org.joda.time.format.PeriodPrinter"[label="1"]
"org.joda.time.format.PeriodFormatterBuilder$Composite"->"(static)org.joda.time.format.PeriodFormatterBuilder$Composite.calculatePrintedLength(org.joda.time.format.PeriodFormatterBuilder$Composite org.joda.time.ReadablePeriod java.util.Locale )int"[label="1"]
"org.joda.time.format.PeriodFormatterBuilder$CompositeAffix"->"(static)org.joda.time.format.PeriodFormatterBuilder$CompositeAffix.calculatePrintedLength(org.joda.time.format.PeriodFormatterBuilder$CompositeAffix int )int"[label="1"]
"org.joda.time.format.PeriodFormatterBuilder$CompositeAffix"->"(static)org.joda.time.format.PeriodFormatterBuilder$CompositeAffix.getAffixes(org.joda.time.format.PeriodFormatterBuilder$CompositeAffix )java.lang.String[]"[label="1"]
"org.joda.time.format.PeriodFormatterBuilder$CompositeAffix"->"(static)org.joda.time.format.PeriodFormatterBuilder$CompositeAffix.parse(org.joda.time.format.PeriodFormatterBuilder$CompositeAffix java.lang.String int )int"[label="1"]
"org.joda.time.format.PeriodFormatterBuilder$CompositeAffix"->"(static)org.joda.time.format.PeriodFormatterBuilder$CompositeAffix.scan(org.joda.time.format.PeriodFormatterBuilder$CompositeAffix java.lang.String int )int"[label="1"]
"org.joda.time.format.PeriodFormatterBuilder$FieldFormatter"->"(static)org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.calculatePrintedLength(org.joda.time.format.PeriodFormatterBuilder$FieldFormatter org.joda.time.ReadablePeriod java.util.Locale )int"[label="1"]
"org.joda.time.format.PeriodFormatterBuilder$Literal"->"(static)org.joda.time.format.PeriodFormatterBuilder$Literal.calculatePrintedLength(org.joda.time.format.PeriodFormatterBuilder$Literal org.joda.time.ReadablePeriod java.util.Locale )int"[label="1"]
"org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix"->"(static)org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix.calculatePrintedLength(org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix int )int"[label="1"]
"org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix"->"(static)org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix.getAffixes(org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix )java.lang.String[]"[label="1"]
"org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix"->"(static)org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix.parse(org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix java.lang.String int )int"[label="1"]
"org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix"->"(static)org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix.scan(org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix java.lang.String int )int"[label="1"]
"org.joda.time.format.PeriodFormatterBuilder$PluralAffix"->"(static)org.joda.time.format.PeriodFormatterBuilder$PluralAffix.calculatePrintedLength(org.joda.time.format.PeriodFormatterBuilder$PluralAffix int )int"[label="1"]
"org.joda.time.format.PeriodFormatterBuilder$PluralAffix"->"(static)org.joda.time.format.PeriodFormatterBuilder$PluralAffix.getAffixes(org.joda.time.format.PeriodFormatterBuilder$PluralAffix )java.lang.String[]"[label="1"]
"org.joda.time.format.PeriodFormatterBuilder$PluralAffix"->"(static)org.joda.time.format.PeriodFormatterBuilder$PluralAffix.parse(org.joda.time.format.PeriodFormatterBuilder$PluralAffix java.lang.String int )int"[label="1"]
"org.joda.time.format.PeriodFormatterBuilder$PluralAffix"->"(static)org.joda.time.format.PeriodFormatterBuilder$PluralAffix.scan(org.joda.time.format.PeriodFormatterBuilder$PluralAffix java.lang.String int )int"[label="1"]
"org.joda.time.format.PeriodFormatterBuilder$RegExAffix"->"(static)org.joda.time.format.PeriodFormatterBuilder$RegExAffix.calculatePrintedLength(org.joda.time.format.PeriodFormatterBuilder$RegExAffix int )int"[label="1"]
"org.joda.time.format.PeriodFormatterBuilder$RegExAffix"->"(static)org.joda.time.format.PeriodFormatterBuilder$RegExAffix.getAffixes(org.joda.time.format.PeriodFormatterBuilder$RegExAffix )java.lang.String[]"[label="1"]
"org.joda.time.format.PeriodFormatterBuilder$RegExAffix"->"(static)org.joda.time.format.PeriodFormatterBuilder$RegExAffix.parse(org.joda.time.format.PeriodFormatterBuilder$RegExAffix java.lang.String int )int"[label="1"]
"org.joda.time.format.PeriodFormatterBuilder$RegExAffix"->"(static)org.joda.time.format.PeriodFormatterBuilder$RegExAffix.scan(org.joda.time.format.PeriodFormatterBuilder$RegExAffix java.lang.String int )int"[label="1"]
"org.joda.time.format.PeriodFormatterBuilder$RegExAffix$1"->"(static)org.joda.time.format.PeriodFormatterBuilder$RegExAffix$1.compare(org.joda.time.format.PeriodFormatterBuilder$RegExAffix$1 java.lang.Object java.lang.Object )int"[label="1"]
"org.joda.time.format.PeriodFormatterBuilder$RegExAffix$1"->"(static)org.joda.time.format.PeriodFormatterBuilder$RegExAffix$1.compare(org.joda.time.format.PeriodFormatterBuilder$RegExAffix$1 java.lang.String java.lang.String )int"[label="1"]
"org.joda.time.format.PeriodFormatterBuilder$Separator"->"(static)org.joda.time.format.PeriodFormatterBuilder$Separator.calculatePrintedLength(org.joda.time.format.PeriodFormatterBuilder$Separator org.joda.time.ReadablePeriod java.util.Locale )int"[label="1"]
"org.joda.time.format.PeriodFormatterBuilder$SimpleAffix"->"(static)org.joda.time.format.PeriodFormatterBuilder$SimpleAffix.calculatePrintedLength(org.joda.time.format.PeriodFormatterBuilder$SimpleAffix int )int"[label="1"]
"org.joda.time.format.PeriodFormatterBuilder$SimpleAffix"->"(static)org.joda.time.format.PeriodFormatterBuilder$SimpleAffix.getAffixes(org.joda.time.format.PeriodFormatterBuilder$SimpleAffix )java.lang.String[]"[label="1"]
"org.joda.time.format.PeriodFormatterBuilder$SimpleAffix"->"(static)org.joda.time.format.PeriodFormatterBuilder$SimpleAffix.parse(org.joda.time.format.PeriodFormatterBuilder$SimpleAffix java.lang.String int )int"[label="1"]
"org.joda.time.format.PeriodFormatterBuilder$SimpleAffix"->"(static)org.joda.time.format.PeriodFormatterBuilder$SimpleAffix.scan(org.joda.time.format.PeriodFormatterBuilder$SimpleAffix java.lang.String int )int"[label="1"]
"org.joda.time.format.PeriodParser"->"(static)org.joda.time.format.PeriodFormatterBuilder.append(org.joda.time.format.PeriodFormatterBuilder org.joda.time.format.PeriodPrinter org.joda.time.format.PeriodParser )org.joda.time.format.PeriodFormatterBuilder"[label="1"]
"org.joda.time.format.PeriodParser"->"org.joda.time.format.PeriodFormatter(org.joda.time.format.PeriodPrinter org.joda.time.format.PeriodParser )"[label="1"]
"org.joda.time.format.PeriodPrinter"->"(static)org.joda.time.format.PeriodFormatterBuilder.append(org.joda.time.format.PeriodFormatterBuilder org.joda.time.format.PeriodPrinter org.joda.time.format.PeriodParser )org.joda.time.format.PeriodFormatterBuilder"[label="1"]
"org.joda.time.format.PeriodPrinter"->"(static)org.joda.time.format.PeriodPrinter.calculatePrintedLength(org.joda.time.format.PeriodPrinter org.joda.time.ReadablePeriod java.util.Locale )int"[label="1"]
"org.joda.time.format.PeriodPrinter"->"org.joda.time.format.PeriodFormatter(org.joda.time.format.PeriodPrinter org.joda.time.format.PeriodParser )"[label="1"]
"org.joda.time.tz.CachedDateTimeZone"->"(static)org.joda.time.tz.CachedDateTimeZone.equals(org.joda.time.tz.CachedDateTimeZone java.lang.Object )boolean"[label="1"]
"org.joda.time.tz.CachedDateTimeZone"->"(static)org.joda.time.tz.CachedDateTimeZone.getNameKey(org.joda.time.tz.CachedDateTimeZone long )java.lang.String"[label="1"]
"org.joda.time.tz.CachedDateTimeZone"->"(static)org.joda.time.tz.CachedDateTimeZone.getOffset(org.joda.time.tz.CachedDateTimeZone long )int"[label="1"]
"org.joda.time.tz.CachedDateTimeZone"->"(static)org.joda.time.tz.CachedDateTimeZone.getStandardOffset(org.joda.time.tz.CachedDateTimeZone long )int"[label="1"]
"org.joda.time.tz.CachedDateTimeZone"->"(static)org.joda.time.tz.CachedDateTimeZone.getUncachedZone(org.joda.time.tz.CachedDateTimeZone )org.joda.time.DateTimeZone"[label="1"]
"org.joda.time.tz.CachedDateTimeZone"->"(static)org.joda.time.tz.CachedDateTimeZone.isFixed(org.joda.time.tz.CachedDateTimeZone )boolean"[label="1"]
"org.joda.time.tz.CachedDateTimeZone"->"(static)org.joda.time.tz.CachedDateTimeZone.nextTransition(org.joda.time.tz.CachedDateTimeZone long )long"[label="1"]
"org.joda.time.tz.CachedDateTimeZone"->"(static)org.joda.time.tz.CachedDateTimeZone.previousTransition(org.joda.time.tz.CachedDateTimeZone long )long"[label="1"]
"org.joda.time.tz.CachedDateTimeZone$Info"->"(static)org.joda.time.tz.CachedDateTimeZone$Info.getNameKey(org.joda.time.tz.CachedDateTimeZone$Info long )java.lang.String"[label="1"]
"org.joda.time.tz.CachedDateTimeZone$Info"->"(static)org.joda.time.tz.CachedDateTimeZone$Info.getOffset(org.joda.time.tz.CachedDateTimeZone$Info long )int"[label="1"]
"org.joda.time.tz.CachedDateTimeZone$Info"->"(static)org.joda.time.tz.CachedDateTimeZone$Info.getStandardOffset(org.joda.time.tz.CachedDateTimeZone$Info long )int"[label="1"]
"org.joda.time.tz.DateTimeZoneBuilder"->"(static)org.joda.time.tz.DateTimeZoneBuilder.setFixedSavings(org.joda.time.tz.DateTimeZoneBuilder java.lang.String int )org.joda.time.tz.DateTimeZoneBuilder"[label="1"]
"org.joda.time.tz.DateTimeZoneBuilder"->"(static)org.joda.time.tz.DateTimeZoneBuilder.setStandardOffset(org.joda.time.tz.DateTimeZoneBuilder int )org.joda.time.tz.DateTimeZoneBuilder"[label="1"]
"org.joda.time.tz.DateTimeZoneBuilder"->"(static)org.joda.time.tz.DateTimeZoneBuilder.toDateTimeZone(org.joda.time.tz.DateTimeZoneBuilder java.lang.String boolean )org.joda.time.DateTimeZone"[label="1"]
"org.joda.time.tz.DateTimeZoneBuilder$DSTZone"->"(static)org.joda.time.tz.DateTimeZoneBuilder$DSTZone.equals(org.joda.time.tz.DateTimeZoneBuilder$DSTZone java.lang.Object )boolean"[label="1"]
"org.joda.time.tz.DateTimeZoneBuilder$DSTZone"->"(static)org.joda.time.tz.DateTimeZoneBuilder$DSTZone.getNameKey(org.joda.time.tz.DateTimeZoneBuilder$DSTZone long )java.lang.String"[label="1"]
"org.joda.time.tz.DateTimeZoneBuilder$DSTZone"->"(static)org.joda.time.tz.DateTimeZoneBuilder$DSTZone.getOffset(org.joda.time.tz.DateTimeZoneBuilder$DSTZone long )int"[label="1"]
"org.joda.time.tz.DateTimeZoneBuilder$DSTZone"->"(static)org.joda.time.tz.DateTimeZoneBuilder$DSTZone.getStandardOffset(org.joda.time.tz.DateTimeZoneBuilder$DSTZone long )int"[label="1"]
"org.joda.time.tz.DateTimeZoneBuilder$DSTZone"->"(static)org.joda.time.tz.DateTimeZoneBuilder$DSTZone.isFixed(org.joda.time.tz.DateTimeZoneBuilder$DSTZone )boolean"[label="1"]
"org.joda.time.tz.DateTimeZoneBuilder$DSTZone"->"(static)org.joda.time.tz.DateTimeZoneBuilder$DSTZone.nextTransition(org.joda.time.tz.DateTimeZoneBuilder$DSTZone long )long"[label="1"]
"org.joda.time.tz.DateTimeZoneBuilder$DSTZone"->"(static)org.joda.time.tz.DateTimeZoneBuilder$DSTZone.previousTransition(org.joda.time.tz.DateTimeZoneBuilder$DSTZone long )long"[label="1"]
"org.joda.time.tz.DateTimeZoneBuilder$OfYear"->"(static)org.joda.time.tz.DateTimeZoneBuilder$OfYear.equals(org.joda.time.tz.DateTimeZoneBuilder$OfYear java.lang.Object )boolean"[label="1"]
"org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone"->"(static)org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.equals(org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone java.lang.Object )boolean"[label="1"]
"org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone"->"(static)org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.getNameKey(org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone long )java.lang.String"[label="1"]
"org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone"->"(static)org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.getOffset(org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone long )int"[label="1"]
"org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone"->"(static)org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.getStandardOffset(org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone long )int"[label="1"]
"org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone"->"(static)org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.isCachable(org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone )boolean"[label="1"]
"org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone"->"(static)org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.isFixed(org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone )boolean"[label="1"]
"org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone"->"(static)org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.nextTransition(org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone long )long"[label="1"]
"org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone"->"(static)org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.previousTransition(org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone long )long"[label="1"]
"org.joda.time.tz.DateTimeZoneBuilder$Recurrence"->"(static)org.joda.time.tz.DateTimeZoneBuilder$Recurrence.equals(org.joda.time.tz.DateTimeZoneBuilder$Recurrence java.lang.Object )boolean"[label="1"]
"org.joda.time.tz.DateTimeZoneBuilder$Recurrence"->"(static)org.joda.time.tz.DateTimeZoneBuilder$Recurrence.getNameKey(org.joda.time.tz.DateTimeZoneBuilder$Recurrence )java.lang.String"[label="1"]
"org.joda.time.tz.DateTimeZoneBuilder$Recurrence"->"(static)org.joda.time.tz.DateTimeZoneBuilder$Recurrence.getOfYear(org.joda.time.tz.DateTimeZoneBuilder$Recurrence )org.joda.time.tz.DateTimeZoneBuilder$OfYear"[label="1"]
"org.joda.time.tz.DateTimeZoneBuilder$Recurrence"->"(static)org.joda.time.tz.DateTimeZoneBuilder$Recurrence.getSaveMillis(org.joda.time.tz.DateTimeZoneBuilder$Recurrence )int"[label="1"]
"org.joda.time.tz.DateTimeZoneBuilder$Rule"->"(static)org.joda.time.tz.DateTimeZoneBuilder$Rule.getFromYear(org.joda.time.tz.DateTimeZoneBuilder$Rule )int"[label="1"]
"org.joda.time.tz.DateTimeZoneBuilder$Rule"->"(static)org.joda.time.tz.DateTimeZoneBuilder$Rule.getNameKey(org.joda.time.tz.DateTimeZoneBuilder$Rule )java.lang.String"[label="1"]
"org.joda.time.tz.DateTimeZoneBuilder$Rule"->"(static)org.joda.time.tz.DateTimeZoneBuilder$Rule.getOfYear(org.joda.time.tz.DateTimeZoneBuilder$Rule )org.joda.time.tz.DateTimeZoneBuilder$OfYear"[label="1"]
"org.joda.time.tz.DateTimeZoneBuilder$Rule"->"(static)org.joda.time.tz.DateTimeZoneBuilder$Rule.getSaveMillis(org.joda.time.tz.DateTimeZoneBuilder$Rule )int"[label="1"]
"org.joda.time.tz.DateTimeZoneBuilder$Rule"->"(static)org.joda.time.tz.DateTimeZoneBuilder$Rule.getToYear(org.joda.time.tz.DateTimeZoneBuilder$Rule )int"[label="1"]
"org.joda.time.tz.DateTimeZoneBuilder$RuleSet"->"(static)org.joda.time.tz.DateTimeZoneBuilder$RuleSet.buildTailZone(org.joda.time.tz.DateTimeZoneBuilder$RuleSet java.lang.String )org.joda.time.tz.DateTimeZoneBuilder$DSTZone"[label="1"]
"org.joda.time.tz.DateTimeZoneBuilder$RuleSet"->"(static)org.joda.time.tz.DateTimeZoneBuilder$RuleSet.firstTransition(org.joda.time.tz.DateTimeZoneBuilder$RuleSet long )org.joda.time.tz.DateTimeZoneBuilder$Transition"[label="1"]
"org.joda.time.tz.DateTimeZoneBuilder$RuleSet"->"(static)org.joda.time.tz.DateTimeZoneBuilder$RuleSet.getStandardOffset(org.joda.time.tz.DateTimeZoneBuilder$RuleSet )int"[label="1"]
"org.joda.time.tz.DateTimeZoneBuilder$RuleSet"->"(static)org.joda.time.tz.DateTimeZoneBuilder$RuleSet.getUpperLimit(org.joda.time.tz.DateTimeZoneBuilder$RuleSet int )long"[label="1"]
"org.joda.time.tz.DateTimeZoneBuilder$RuleSet"->"(static)org.joda.time.tz.DateTimeZoneBuilder$RuleSet.nextTransition(org.joda.time.tz.DateTimeZoneBuilder$RuleSet long int )org.joda.time.tz.DateTimeZoneBuilder$Transition"[label="1"]
"org.joda.time.tz.DateTimeZoneBuilder$Transition"->"(static)org.joda.time.tz.DateTimeZoneBuilder$Transition.getMillis(org.joda.time.tz.DateTimeZoneBuilder$Transition )long"[label="1"]
"org.joda.time.tz.DateTimeZoneBuilder$Transition"->"(static)org.joda.time.tz.DateTimeZoneBuilder$Transition.getNameKey(org.joda.time.tz.DateTimeZoneBuilder$Transition )java.lang.String"[label="1"]
"org.joda.time.tz.DateTimeZoneBuilder$Transition"->"(static)org.joda.time.tz.DateTimeZoneBuilder$Transition.getSaveMillis(org.joda.time.tz.DateTimeZoneBuilder$Transition )int"[label="1"]
"org.joda.time.tz.DateTimeZoneBuilder$Transition"->"(static)org.joda.time.tz.DateTimeZoneBuilder$Transition.getStandardOffset(org.joda.time.tz.DateTimeZoneBuilder$Transition )int"[label="1"]
"org.joda.time.tz.DateTimeZoneBuilder$Transition"->"(static)org.joda.time.tz.DateTimeZoneBuilder$Transition.getWallOffset(org.joda.time.tz.DateTimeZoneBuilder$Transition )int"[label="1"]
"org.joda.time.tz.DateTimeZoneBuilder$Transition"->"(static)org.joda.time.tz.DateTimeZoneBuilder$Transition.isTransitionFrom(org.joda.time.tz.DateTimeZoneBuilder$Transition org.joda.time.tz.DateTimeZoneBuilder$Transition )boolean"[label="2"]
"org.joda.time.tz.FixedDateTimeZone"->"(static)org.joda.time.tz.FixedDateTimeZone.equals(org.joda.time.tz.FixedDateTimeZone java.lang.Object )boolean"[label="1"]
"org.joda.time.tz.FixedDateTimeZone"->"(static)org.joda.time.tz.FixedDateTimeZone.getNameKey(org.joda.time.tz.FixedDateTimeZone long )java.lang.String"[label="1"]
"org.joda.time.tz.FixedDateTimeZone"->"(static)org.joda.time.tz.FixedDateTimeZone.getOffset(org.joda.time.tz.FixedDateTimeZone long )int"[label="1"]
"org.joda.time.tz.FixedDateTimeZone"->"(static)org.joda.time.tz.FixedDateTimeZone.getOffsetFromLocal(org.joda.time.tz.FixedDateTimeZone long )int"[label="1"]
"org.joda.time.tz.FixedDateTimeZone"->"(static)org.joda.time.tz.FixedDateTimeZone.getStandardOffset(org.joda.time.tz.FixedDateTimeZone long )int"[label="1"]
"org.joda.time.tz.FixedDateTimeZone"->"(static)org.joda.time.tz.FixedDateTimeZone.isFixed(org.joda.time.tz.FixedDateTimeZone )boolean"[label="1"]
"org.joda.time.tz.FixedDateTimeZone"->"(static)org.joda.time.tz.FixedDateTimeZone.nextTransition(org.joda.time.tz.FixedDateTimeZone long )long"[label="1"]
"org.joda.time.tz.FixedDateTimeZone"->"(static)org.joda.time.tz.FixedDateTimeZone.previousTransition(org.joda.time.tz.FixedDateTimeZone long )long"[label="1"]
"org.joda.time.tz.FixedDateTimeZone"->"(static)org.joda.time.tz.FixedDateTimeZone.toTimeZone(org.joda.time.tz.FixedDateTimeZone )java.util.TimeZone"[label="1"]
"org.joda.time.tz.Provider"->"(static)org.joda.time.tz.Provider.getAvailableIDs(org.joda.time.tz.Provider )java.util.Set"[label="1"]
"org.joda.time.tz.Provider"->"(static)org.joda.time.tz.Provider.getZone(org.joda.time.tz.Provider java.lang.String )org.joda.time.DateTimeZone"[label="1"]
"org.joda.time.tz.UTCProvider"->"(static)org.joda.time.tz.UTCProvider.getAvailableIDs(org.joda.time.tz.UTCProvider )java.util.Set"[label="1"]
"org.joda.time.tz.UTCProvider"->"(static)org.joda.time.tz.UTCProvider.getZone(org.joda.time.tz.UTCProvider java.lang.String )org.joda.time.DateTimeZone"[label="1"]
"org.joda.time.tz.ZoneInfoCompiler"->"(static)org.joda.time.tz.ZoneInfoCompiler.compile(org.joda.time.tz.ZoneInfoCompiler java.io.File java.io.File[] )java.util.Map"[label="1"]
"org.joda.time.tz.ZoneInfoProvider"->"(static)org.joda.time.tz.ZoneInfoProvider.getAvailableIDs(org.joda.time.tz.ZoneInfoProvider )java.util.Set"[label="1"]
"org.joda.time.tz.ZoneInfoProvider"->"(static)org.joda.time.tz.ZoneInfoProvider.getZone(org.joda.time.tz.ZoneInfoProvider java.lang.String )org.joda.time.DateTimeZone"[label="1"]
"(static)org.joda.time.Chronology.centuries(org.joda.time.Chronology )org.joda.time.DurationField"->"org.joda.time.DurationField"[label="1"]
"(static)org.joda.time.Chronology.centuryOfEra(org.joda.time.Chronology )org.joda.time.DateTimeField"->"org.joda.time.DateTimeField"[label="1"]
"(static)org.joda.time.Chronology.clockhourOfDay(org.joda.time.Chronology )org.joda.time.DateTimeField"->"org.joda.time.DateTimeField"[label="1"]
"(static)org.joda.time.Chronology.clockhourOfHalfday(org.joda.time.Chronology )org.joda.time.DateTimeField"->"org.joda.time.DateTimeField"[label="1"]
"(static)org.joda.time.Chronology.dayOfMonth(org.joda.time.Chronology )org.joda.time.DateTimeField"->"org.joda.time.DateTimeField"[label="1"]
"(static)org.joda.time.Chronology.dayOfWeek(org.joda.time.Chronology )org.joda.time.DateTimeField"->"org.joda.time.DateTimeField"[label="1"]
"(static)org.joda.time.Chronology.dayOfYear(org.joda.time.Chronology )org.joda.time.DateTimeField"->"org.joda.time.DateTimeField"[label="1"]
"(static)org.joda.time.Chronology.days(org.joda.time.Chronology )org.joda.time.DurationField"->"org.joda.time.DurationField"[label="1"]
"(static)org.joda.time.Chronology.era(org.joda.time.Chronology )org.joda.time.DateTimeField"->"org.joda.time.DateTimeField"[label="1"]
"(static)org.joda.time.Chronology.eras(org.joda.time.Chronology )org.joda.time.DurationField"->"org.joda.time.DurationField"[label="1"]
"(static)org.joda.time.Chronology.get(org.joda.time.Chronology org.joda.time.ReadablePartial long )int[]"->"int[]"[label="1"]
"(static)org.joda.time.Chronology.get(org.joda.time.Chronology org.joda.time.ReadablePeriod long )int[]"->"int[]"[label="1"]
"(static)org.joda.time.Chronology.getZone(org.joda.time.Chronology )org.joda.time.DateTimeZone"->"org.joda.time.DateTimeZone"[label="1"]
"(static)org.joda.time.Chronology.halfdayOfDay(org.joda.time.Chronology )org.joda.time.DateTimeField"->"org.joda.time.DateTimeField"[label="1"]
"(static)org.joda.time.Chronology.halfdays(org.joda.time.Chronology )org.joda.time.DurationField"->"org.joda.time.DurationField"[label="1"]
"(static)org.joda.time.Chronology.hourOfDay(org.joda.time.Chronology )org.joda.time.DateTimeField"->"org.joda.time.DateTimeField"[label="1"]
"(static)org.joda.time.Chronology.hourOfHalfday(org.joda.time.Chronology )org.joda.time.DateTimeField"->"org.joda.time.DateTimeField"[label="1"]
"(static)org.joda.time.Chronology.hours(org.joda.time.Chronology )org.joda.time.DurationField"->"org.joda.time.DurationField"[label="1"]
"(static)org.joda.time.Chronology.millis(org.joda.time.Chronology )org.joda.time.DurationField"->"org.joda.time.DurationField"[label="1"]
"(static)org.joda.time.Chronology.millisOfDay(org.joda.time.Chronology )org.joda.time.DateTimeField"->"org.joda.time.DateTimeField"[label="1"]
"(static)org.joda.time.Chronology.millisOfSecond(org.joda.time.Chronology )org.joda.time.DateTimeField"->"org.joda.time.DateTimeField"[label="1"]
"(static)org.joda.time.Chronology.minuteOfDay(org.joda.time.Chronology )org.joda.time.DateTimeField"->"org.joda.time.DateTimeField"[label="1"]
"(static)org.joda.time.Chronology.minuteOfHour(org.joda.time.Chronology )org.joda.time.DateTimeField"->"org.joda.time.DateTimeField"[label="1"]
"(static)org.joda.time.Chronology.minutes(org.joda.time.Chronology )org.joda.time.DurationField"->"org.joda.time.DurationField"[label="1"]
"(static)org.joda.time.Chronology.monthOfYear(org.joda.time.Chronology )org.joda.time.DateTimeField"->"org.joda.time.DateTimeField"[label="1"]
"(static)org.joda.time.Chronology.months(org.joda.time.Chronology )org.joda.time.DurationField"->"org.joda.time.DurationField"[label="1"]
"(static)org.joda.time.Chronology.secondOfDay(org.joda.time.Chronology )org.joda.time.DateTimeField"->"org.joda.time.DateTimeField"[label="1"]
"(static)org.joda.time.Chronology.secondOfMinute(org.joda.time.Chronology )org.joda.time.DateTimeField"->"org.joda.time.DateTimeField"[label="1"]
"(static)org.joda.time.Chronology.seconds(org.joda.time.Chronology )org.joda.time.DurationField"->"org.joda.time.DurationField"[label="1"]
"(static)org.joda.time.Chronology.set(org.joda.time.Chronology org.joda.time.ReadablePartial long )long"->"long"[label="1"]
"(static)org.joda.time.Chronology.weekOfWeekyear(org.joda.time.Chronology )org.joda.time.DateTimeField"->"org.joda.time.DateTimeField"[label="1"]
"(static)org.joda.time.Chronology.weeks(org.joda.time.Chronology )org.joda.time.DurationField"->"org.joda.time.DurationField"[label="1"]
"(static)org.joda.time.Chronology.weekyear(org.joda.time.Chronology )org.joda.time.DateTimeField"->"org.joda.time.DateTimeField"[label="1"]
"(static)org.joda.time.Chronology.weekyearOfCentury(org.joda.time.Chronology )org.joda.time.DateTimeField"->"org.joda.time.DateTimeField"[label="1"]
"(static)org.joda.time.Chronology.weekyears(org.joda.time.Chronology )org.joda.time.DurationField"->"org.joda.time.DurationField"[label="1"]
"(static)org.joda.time.Chronology.withUTC(org.joda.time.Chronology )org.joda.time.Chronology"->"org.joda.time.Chronology"[label="1"]
"(static)org.joda.time.Chronology.withZone(org.joda.time.Chronology org.joda.time.DateTimeZone )org.joda.time.Chronology"->"org.joda.time.Chronology"[label="1"]
"(static)org.joda.time.Chronology.year(org.joda.time.Chronology )org.joda.time.DateTimeField"->"org.joda.time.DateTimeField"[label="1"]
"(static)org.joda.time.Chronology.yearOfCentury(org.joda.time.Chronology )org.joda.time.DateTimeField"->"org.joda.time.DateTimeField"[label="1"]
"(static)org.joda.time.Chronology.yearOfEra(org.joda.time.Chronology )org.joda.time.DateTimeField"->"org.joda.time.DateTimeField"[label="1"]
"(static)org.joda.time.Chronology.years(org.joda.time.Chronology )org.joda.time.DurationField"->"org.joda.time.DurationField"[label="1"]
"(static)org.joda.time.DateMidnight$Property.addToCopy(org.joda.time.DateMidnight$Property int )org.joda.time.DateMidnight"->"org.joda.time.DateMidnight"[label="1"]
"(static)org.joda.time.DateMidnight$Property.addToCopy(org.joda.time.DateMidnight$Property long )org.joda.time.DateMidnight"->"org.joda.time.DateMidnight"[label="1"]
"(static)org.joda.time.DateMidnight$Property.addWrapFieldToCopy(org.joda.time.DateMidnight$Property int )org.joda.time.DateMidnight"->"org.joda.time.DateMidnight"[label="1"]
"(static)org.joda.time.DateMidnight$Property.getDateMidnight(org.joda.time.DateMidnight$Property )org.joda.time.DateMidnight"->"org.joda.time.DateMidnight"[label="1"]
"(static)org.joda.time.DateMidnight$Property.getField(org.joda.time.DateMidnight$Property )org.joda.time.DateTimeField"->"org.joda.time.DateTimeField"[label="1"]
"(static)org.joda.time.DateMidnight$Property.roundCeilingCopy(org.joda.time.DateMidnight$Property )org.joda.time.DateMidnight"->"org.joda.time.DateMidnight"[label="1"]
"(static)org.joda.time.DateMidnight$Property.roundFloorCopy(org.joda.time.DateMidnight$Property )org.joda.time.DateMidnight"->"org.joda.time.DateMidnight"[label="1"]
"(static)org.joda.time.DateMidnight$Property.roundHalfCeilingCopy(org.joda.time.DateMidnight$Property )org.joda.time.DateMidnight"->"org.joda.time.DateMidnight"[label="1"]
"(static)org.joda.time.DateMidnight$Property.roundHalfEvenCopy(org.joda.time.DateMidnight$Property )org.joda.time.DateMidnight"->"org.joda.time.DateMidnight"[label="1"]
"(static)org.joda.time.DateMidnight$Property.roundHalfFloorCopy(org.joda.time.DateMidnight$Property )org.joda.time.DateMidnight"->"org.joda.time.DateMidnight"[label="1"]
"(static)org.joda.time.DateMidnight$Property.setCopy(org.joda.time.DateMidnight$Property int )org.joda.time.DateMidnight"->"org.joda.time.DateMidnight"[label="1"]
"(static)org.joda.time.DateMidnight$Property.setCopy(org.joda.time.DateMidnight$Property java.lang.String )org.joda.time.DateMidnight"->"org.joda.time.DateMidnight"[label="1"]
"(static)org.joda.time.DateMidnight$Property.setCopy(org.joda.time.DateMidnight$Property java.lang.String java.util.Locale )org.joda.time.DateMidnight"->"org.joda.time.DateMidnight"[label="1"]
"(static)org.joda.time.DateMidnight$Property.withMaximumValue(org.joda.time.DateMidnight$Property )org.joda.time.DateMidnight"->"org.joda.time.DateMidnight"[label="1"]
"(static)org.joda.time.DateMidnight$Property.withMinimumValue(org.joda.time.DateMidnight$Property )org.joda.time.DateMidnight"->"org.joda.time.DateMidnight"[label="1"]
"(static)org.joda.time.DateMidnight.centuryOfEra(org.joda.time.DateMidnight )org.joda.time.DateMidnight$Property"->"org.joda.time.DateMidnight$Property"[label="1"]
"(static)org.joda.time.DateMidnight.dayOfMonth(org.joda.time.DateMidnight )org.joda.time.DateMidnight$Property"->"org.joda.time.DateMidnight$Property"[label="1"]
"(static)org.joda.time.DateMidnight.dayOfWeek(org.joda.time.DateMidnight )org.joda.time.DateMidnight$Property"->"org.joda.time.DateMidnight$Property"[label="1"]
"(static)org.joda.time.DateMidnight.dayOfYear(org.joda.time.DateMidnight )org.joda.time.DateMidnight$Property"->"org.joda.time.DateMidnight$Property"[label="1"]
"(static)org.joda.time.DateMidnight.era(org.joda.time.DateMidnight )org.joda.time.DateMidnight$Property"->"org.joda.time.DateMidnight$Property"[label="1"]
"(static)org.joda.time.DateMidnight.minus(org.joda.time.DateMidnight long )org.joda.time.DateMidnight"->"org.joda.time.DateMidnight"[label="1"]
"(static)org.joda.time.DateMidnight.minus(org.joda.time.DateMidnight org.joda.time.ReadableDuration )org.joda.time.DateMidnight"->"org.joda.time.DateMidnight"[label="1"]
"(static)org.joda.time.DateMidnight.minus(org.joda.time.DateMidnight org.joda.time.ReadablePeriod )org.joda.time.DateMidnight"->"org.joda.time.DateMidnight"[label="1"]
"(static)org.joda.time.DateMidnight.minusDays(org.joda.time.DateMidnight int )org.joda.time.DateMidnight"->"org.joda.time.DateMidnight"[label="1"]
"(static)org.joda.time.DateMidnight.minusMonths(org.joda.time.DateMidnight int )org.joda.time.DateMidnight"->"org.joda.time.DateMidnight"[label="1"]
"(static)org.joda.time.DateMidnight.minusWeeks(org.joda.time.DateMidnight int )org.joda.time.DateMidnight"->"org.joda.time.DateMidnight"[label="1"]
"(static)org.joda.time.DateMidnight.minusYears(org.joda.time.DateMidnight int )org.joda.time.DateMidnight"->"org.joda.time.DateMidnight"[label="1"]
"(static)org.joda.time.DateMidnight.monthOfYear(org.joda.time.DateMidnight )org.joda.time.DateMidnight$Property"->"org.joda.time.DateMidnight$Property"[label="1"]
"(static)org.joda.time.DateMidnight.plus(org.joda.time.DateMidnight long )org.joda.time.DateMidnight"->"org.joda.time.DateMidnight"[label="1"]
"(static)org.joda.time.DateMidnight.plus(org.joda.time.DateMidnight org.joda.time.ReadableDuration )org.joda.time.DateMidnight"->"org.joda.time.DateMidnight"[label="1"]
"(static)org.joda.time.DateMidnight.plus(org.joda.time.DateMidnight org.joda.time.ReadablePeriod )org.joda.time.DateMidnight"->"org.joda.time.DateMidnight"[label="1"]
"(static)org.joda.time.DateMidnight.plusDays(org.joda.time.DateMidnight int )org.joda.time.DateMidnight"->"org.joda.time.DateMidnight"[label="1"]
"(static)org.joda.time.DateMidnight.plusMonths(org.joda.time.DateMidnight int )org.joda.time.DateMidnight"->"org.joda.time.DateMidnight"[label="1"]
"(static)org.joda.time.DateMidnight.plusWeeks(org.joda.time.DateMidnight int )org.joda.time.DateMidnight"->"org.joda.time.DateMidnight"[label="1"]
"(static)org.joda.time.DateMidnight.plusYears(org.joda.time.DateMidnight int )org.joda.time.DateMidnight"->"org.joda.time.DateMidnight"[label="1"]
"(static)org.joda.time.DateMidnight.property(org.joda.time.DateMidnight org.joda.time.DateTimeFieldType )org.joda.time.DateMidnight$Property"->"org.joda.time.DateMidnight$Property"[label="1"]
"(static)org.joda.time.DateMidnight.toInterval(org.joda.time.DateMidnight )org.joda.time.Interval"->"org.joda.time.Interval"[label="1"]
"(static)org.joda.time.DateMidnight.toLocalDate(org.joda.time.DateMidnight )org.joda.time.LocalDate"->"org.joda.time.LocalDate"[label="1"]
"(static)org.joda.time.DateMidnight.toYearMonthDay(org.joda.time.DateMidnight )org.joda.time.YearMonthDay"->"org.joda.time.YearMonthDay"[label="1"]
"(static)org.joda.time.DateMidnight.weekOfWeekyear(org.joda.time.DateMidnight )org.joda.time.DateMidnight$Property"->"org.joda.time.DateMidnight$Property"[label="1"]
"(static)org.joda.time.DateMidnight.weekyear(org.joda.time.DateMidnight )org.joda.time.DateMidnight$Property"->"org.joda.time.DateMidnight$Property"[label="1"]
"(static)org.joda.time.DateMidnight.withCenturyOfEra(org.joda.time.DateMidnight int )org.joda.time.DateMidnight"->"org.joda.time.DateMidnight"[label="1"]
"(static)org.joda.time.DateMidnight.withChronology(org.joda.time.DateMidnight org.joda.time.Chronology )org.joda.time.DateMidnight"->"org.joda.time.DateMidnight"[label="1"]
"(static)org.joda.time.DateMidnight.withDayOfMonth(org.joda.time.DateMidnight int )org.joda.time.DateMidnight"->"org.joda.time.DateMidnight"[label="1"]
"(static)org.joda.time.DateMidnight.withDayOfWeek(org.joda.time.DateMidnight int )org.joda.time.DateMidnight"->"org.joda.time.DateMidnight"[label="1"]
"(static)org.joda.time.DateMidnight.withDayOfYear(org.joda.time.DateMidnight int )org.joda.time.DateMidnight"->"org.joda.time.DateMidnight"[label="1"]
"(static)org.joda.time.DateMidnight.withDurationAdded(org.joda.time.DateMidnight long int )org.joda.time.DateMidnight"->"org.joda.time.DateMidnight"[label="1"]
"(static)org.joda.time.DateMidnight.withDurationAdded(org.joda.time.DateMidnight org.joda.time.ReadableDuration int )org.joda.time.DateMidnight"->"org.joda.time.DateMidnight"[label="1"]
"(static)org.joda.time.DateMidnight.withEra(org.joda.time.DateMidnight int )org.joda.time.DateMidnight"->"org.joda.time.DateMidnight"[label="1"]
"(static)org.joda.time.DateMidnight.withField(org.joda.time.DateMidnight org.joda.time.DateTimeFieldType int )org.joda.time.DateMidnight"->"org.joda.time.DateMidnight"[label="1"]
"(static)org.joda.time.DateMidnight.withFieldAdded(org.joda.time.DateMidnight org.joda.time.DurationFieldType int )org.joda.time.DateMidnight"->"org.joda.time.DateMidnight"[label="1"]
"(static)org.joda.time.DateMidnight.withFields(org.joda.time.DateMidnight org.joda.time.ReadablePartial )org.joda.time.DateMidnight"->"org.joda.time.DateMidnight"[label="1"]
"(static)org.joda.time.DateMidnight.withMillis(org.joda.time.DateMidnight long )org.joda.time.DateMidnight"->"org.joda.time.DateMidnight"[label="1"]
"(static)org.joda.time.DateMidnight.withMonthOfYear(org.joda.time.DateMidnight int )org.joda.time.DateMidnight"->"org.joda.time.DateMidnight"[label="1"]
"(static)org.joda.time.DateMidnight.withPeriodAdded(org.joda.time.DateMidnight org.joda.time.ReadablePeriod int )org.joda.time.DateMidnight"->"org.joda.time.DateMidnight"[label="1"]
"(static)org.joda.time.DateMidnight.withWeekOfWeekyear(org.joda.time.DateMidnight int )org.joda.time.DateMidnight"->"org.joda.time.DateMidnight"[label="1"]
"(static)org.joda.time.DateMidnight.withWeekyear(org.joda.time.DateMidnight int )org.joda.time.DateMidnight"->"org.joda.time.DateMidnight"[label="1"]
"(static)org.joda.time.DateMidnight.withYear(org.joda.time.DateMidnight int )org.joda.time.DateMidnight"->"org.joda.time.DateMidnight"[label="1"]
"(static)org.joda.time.DateMidnight.withYearOfCentury(org.joda.time.DateMidnight int )org.joda.time.DateMidnight"->"org.joda.time.DateMidnight"[label="1"]
"(static)org.joda.time.DateMidnight.withYearOfEra(org.joda.time.DateMidnight int )org.joda.time.DateMidnight"->"org.joda.time.DateMidnight"[label="1"]
"(static)org.joda.time.DateMidnight.withZoneRetainFields(org.joda.time.DateMidnight org.joda.time.DateTimeZone )org.joda.time.DateMidnight"->"org.joda.time.DateMidnight"[label="1"]
"(static)org.joda.time.DateMidnight.year(org.joda.time.DateMidnight )org.joda.time.DateMidnight$Property"->"org.joda.time.DateMidnight$Property"[label="1"]
"(static)org.joda.time.DateMidnight.yearOfCentury(org.joda.time.DateMidnight )org.joda.time.DateMidnight$Property"->"org.joda.time.DateMidnight$Property"[label="1"]
"(static)org.joda.time.DateMidnight.yearOfEra(org.joda.time.DateMidnight )org.joda.time.DateMidnight$Property"->"org.joda.time.DateMidnight$Property"[label="1"]
"(static)org.joda.time.DateTime$Property.addToCopy(org.joda.time.DateTime$Property int )org.joda.time.DateTime"->"org.joda.time.DateTime"[label="1"]
"(static)org.joda.time.DateTime$Property.addToCopy(org.joda.time.DateTime$Property long )org.joda.time.DateTime"->"org.joda.time.DateTime"[label="1"]
"(static)org.joda.time.DateTime$Property.addWrapFieldToCopy(org.joda.time.DateTime$Property int )org.joda.time.DateTime"->"org.joda.time.DateTime"[label="1"]
"(static)org.joda.time.DateTime$Property.getDateTime(org.joda.time.DateTime$Property )org.joda.time.DateTime"->"org.joda.time.DateTime"[label="1"]
"(static)org.joda.time.DateTime$Property.getField(org.joda.time.DateTime$Property )org.joda.time.DateTimeField"->"org.joda.time.DateTimeField"[label="1"]
"(static)org.joda.time.DateTime$Property.roundCeilingCopy(org.joda.time.DateTime$Property )org.joda.time.DateTime"->"org.joda.time.DateTime"[label="1"]
"(static)org.joda.time.DateTime$Property.roundFloorCopy(org.joda.time.DateTime$Property )org.joda.time.DateTime"->"org.joda.time.DateTime"[label="1"]
"(static)org.joda.time.DateTime$Property.roundHalfCeilingCopy(org.joda.time.DateTime$Property )org.joda.time.DateTime"->"org.joda.time.DateTime"[label="1"]
"(static)org.joda.time.DateTime$Property.roundHalfEvenCopy(org.joda.time.DateTime$Property )org.joda.time.DateTime"->"org.joda.time.DateTime"[label="1"]
"(static)org.joda.time.DateTime$Property.roundHalfFloorCopy(org.joda.time.DateTime$Property )org.joda.time.DateTime"->"org.joda.time.DateTime"[label="1"]
"(static)org.joda.time.DateTime$Property.setCopy(org.joda.time.DateTime$Property int )org.joda.time.DateTime"->"org.joda.time.DateTime"[label="1"]
"(static)org.joda.time.DateTime$Property.setCopy(org.joda.time.DateTime$Property java.lang.String )org.joda.time.DateTime"->"org.joda.time.DateTime"[label="1"]
"(static)org.joda.time.DateTime$Property.setCopy(org.joda.time.DateTime$Property java.lang.String java.util.Locale )org.joda.time.DateTime"->"org.joda.time.DateTime"[label="1"]
"(static)org.joda.time.DateTime$Property.withMaximumValue(org.joda.time.DateTime$Property )org.joda.time.DateTime"->"org.joda.time.DateTime"[label="1"]
"(static)org.joda.time.DateTime$Property.withMinimumValue(org.joda.time.DateTime$Property )org.joda.time.DateTime"->"org.joda.time.DateTime"[label="1"]
"(static)org.joda.time.DateTime.centuryOfEra(org.joda.time.DateTime )org.joda.time.DateTime$Property"->"org.joda.time.DateTime$Property"[label="1"]
"(static)org.joda.time.DateTime.dayOfMonth(org.joda.time.DateTime )org.joda.time.DateTime$Property"->"org.joda.time.DateTime$Property"[label="1"]
"(static)org.joda.time.DateTime.dayOfWeek(org.joda.time.DateTime )org.joda.time.DateTime$Property"->"org.joda.time.DateTime$Property"[label="1"]
"(static)org.joda.time.DateTime.dayOfYear(org.joda.time.DateTime )org.joda.time.DateTime$Property"->"org.joda.time.DateTime$Property"[label="1"]
"(static)org.joda.time.DateTime.era(org.joda.time.DateTime )org.joda.time.DateTime$Property"->"org.joda.time.DateTime$Property"[label="1"]
"(static)org.joda.time.DateTime.hourOfDay(org.joda.time.DateTime )org.joda.time.DateTime$Property"->"org.joda.time.DateTime$Property"[label="1"]
"(static)org.joda.time.DateTime.millisOfDay(org.joda.time.DateTime )org.joda.time.DateTime$Property"->"org.joda.time.DateTime$Property"[label="1"]
"(static)org.joda.time.DateTime.millisOfSecond(org.joda.time.DateTime )org.joda.time.DateTime$Property"->"org.joda.time.DateTime$Property"[label="1"]
"(static)org.joda.time.DateTime.minus(org.joda.time.DateTime long )org.joda.time.DateTime"->"org.joda.time.DateTime"[label="1"]
"(static)org.joda.time.DateTime.minus(org.joda.time.DateTime org.joda.time.ReadableDuration )org.joda.time.DateTime"->"org.joda.time.DateTime"[label="1"]
"(static)org.joda.time.DateTime.minus(org.joda.time.DateTime org.joda.time.ReadablePeriod )org.joda.time.DateTime"->"org.joda.time.DateTime"[label="1"]
"(static)org.joda.time.DateTime.minusDays(org.joda.time.DateTime int )org.joda.time.DateTime"->"org.joda.time.DateTime"[label="1"]
"(static)org.joda.time.DateTime.minusHours(org.joda.time.DateTime int )org.joda.time.DateTime"->"org.joda.time.DateTime"[label="1"]
"(static)org.joda.time.DateTime.minusMillis(org.joda.time.DateTime int )org.joda.time.DateTime"->"org.joda.time.DateTime"[label="1"]
"(static)org.joda.time.DateTime.minusMinutes(org.joda.time.DateTime int )org.joda.time.DateTime"->"org.joda.time.DateTime"[label="1"]
"(static)org.joda.time.DateTime.minusMonths(org.joda.time.DateTime int )org.joda.time.DateTime"->"org.joda.time.DateTime"[label="1"]
"(static)org.joda.time.DateTime.minusSeconds(org.joda.time.DateTime int )org.joda.time.DateTime"->"org.joda.time.DateTime"[label="1"]
"(static)org.joda.time.DateTime.minusWeeks(org.joda.time.DateTime int )org.joda.time.DateTime"->"org.joda.time.DateTime"[label="1"]
"(static)org.joda.time.DateTime.minusYears(org.joda.time.DateTime int )org.joda.time.DateTime"->"org.joda.time.DateTime"[label="1"]
"(static)org.joda.time.DateTime.minuteOfDay(org.joda.time.DateTime )org.joda.time.DateTime$Property"->"org.joda.time.DateTime$Property"[label="1"]
"(static)org.joda.time.DateTime.minuteOfHour(org.joda.time.DateTime )org.joda.time.DateTime$Property"->"org.joda.time.DateTime$Property"[label="1"]
"(static)org.joda.time.DateTime.monthOfYear(org.joda.time.DateTime )org.joda.time.DateTime$Property"->"org.joda.time.DateTime$Property"[label="1"]
"(static)org.joda.time.DateTime.plus(org.joda.time.DateTime long )org.joda.time.DateTime"->"org.joda.time.DateTime"[label="1"]
"(static)org.joda.time.DateTime.plus(org.joda.time.DateTime org.joda.time.ReadableDuration )org.joda.time.DateTime"->"org.joda.time.DateTime"[label="1"]
"(static)org.joda.time.DateTime.plus(org.joda.time.DateTime org.joda.time.ReadablePeriod )org.joda.time.DateTime"->"org.joda.time.DateTime"[label="1"]
"(static)org.joda.time.DateTime.plusDays(org.joda.time.DateTime int )org.joda.time.DateTime"->"org.joda.time.DateTime"[label="1"]
"(static)org.joda.time.DateTime.plusHours(org.joda.time.DateTime int )org.joda.time.DateTime"->"org.joda.time.DateTime"[label="1"]
"(static)org.joda.time.DateTime.plusMillis(org.joda.time.DateTime int )org.joda.time.DateTime"->"org.joda.time.DateTime"[label="1"]
"(static)org.joda.time.DateTime.plusMinutes(org.joda.time.DateTime int )org.joda.time.DateTime"->"org.joda.time.DateTime"[label="1"]
"(static)org.joda.time.DateTime.plusMonths(org.joda.time.DateTime int )org.joda.time.DateTime"->"org.joda.time.DateTime"[label="1"]
"(static)org.joda.time.DateTime.plusSeconds(org.joda.time.DateTime int )org.joda.time.DateTime"->"org.joda.time.DateTime"[label="1"]
"(static)org.joda.time.DateTime.plusWeeks(org.joda.time.DateTime int )org.joda.time.DateTime"->"org.joda.time.DateTime"[label="1"]
"(static)org.joda.time.DateTime.plusYears(org.joda.time.DateTime int )org.joda.time.DateTime"->"org.joda.time.DateTime"[label="1"]
"(static)org.joda.time.DateTime.property(org.joda.time.DateTime org.joda.time.DateTimeFieldType )org.joda.time.DateTime$Property"->"org.joda.time.DateTime$Property"[label="1"]
"(static)org.joda.time.DateTime.secondOfDay(org.joda.time.DateTime )org.joda.time.DateTime$Property"->"org.joda.time.DateTime$Property"[label="1"]
"(static)org.joda.time.DateTime.secondOfMinute(org.joda.time.DateTime )org.joda.time.DateTime$Property"->"org.joda.time.DateTime$Property"[label="1"]
"(static)org.joda.time.DateTime.toDateMidnight(org.joda.time.DateTime )org.joda.time.DateMidnight"->"org.joda.time.DateMidnight"[label="1"]
"(static)org.joda.time.DateTime.toDateTime(org.joda.time.DateTime )org.joda.time.DateTime"->"org.joda.time.DateTime"[label="1"]
"(static)org.joda.time.DateTime.toDateTime(org.joda.time.DateTime org.joda.time.Chronology )org.joda.time.DateTime"->"org.joda.time.DateTime"[label="1"]
"(static)org.joda.time.DateTime.toDateTime(org.joda.time.DateTime org.joda.time.DateTimeZone )org.joda.time.DateTime"->"org.joda.time.DateTime"[label="1"]
"(static)org.joda.time.DateTime.toDateTimeISO(org.joda.time.DateTime )org.joda.time.DateTime"->"org.joda.time.DateTime"[label="1"]
"(static)org.joda.time.DateTime.toLocalDate(org.joda.time.DateTime )org.joda.time.LocalDate"->"org.joda.time.LocalDate"[label="1"]
"(static)org.joda.time.DateTime.toLocalDateTime(org.joda.time.DateTime )org.joda.time.LocalDateTime"->"org.joda.time.LocalDateTime"[label="1"]
"(static)org.joda.time.DateTime.toLocalTime(org.joda.time.DateTime )org.joda.time.LocalTime"->"org.joda.time.LocalTime"[label="1"]
"(static)org.joda.time.DateTime.toTimeOfDay(org.joda.time.DateTime )org.joda.time.TimeOfDay"->"org.joda.time.TimeOfDay"[label="1"]
"(static)org.joda.time.DateTime.toYearMonthDay(org.joda.time.DateTime )org.joda.time.YearMonthDay"->"org.joda.time.YearMonthDay"[label="1"]
"(static)org.joda.time.DateTime.weekOfWeekyear(org.joda.time.DateTime )org.joda.time.DateTime$Property"->"org.joda.time.DateTime$Property"[label="1"]
"(static)org.joda.time.DateTime.weekyear(org.joda.time.DateTime )org.joda.time.DateTime$Property"->"org.joda.time.DateTime$Property"[label="1"]
"(static)org.joda.time.DateTime.withCenturyOfEra(org.joda.time.DateTime int )org.joda.time.DateTime"->"org.joda.time.DateTime"[label="1"]
"(static)org.joda.time.DateTime.withChronology(org.joda.time.DateTime org.joda.time.Chronology )org.joda.time.DateTime"->"org.joda.time.DateTime"[label="1"]
"(static)org.joda.time.DateTime.withDate(org.joda.time.DateTime org.joda.time.LocalDate )org.joda.time.DateTime"->"org.joda.time.DateTime"[label="1"]
"(static)org.joda.time.DateTime.withDayOfMonth(org.joda.time.DateTime int )org.joda.time.DateTime"->"org.joda.time.DateTime"[label="1"]
"(static)org.joda.time.DateTime.withDayOfWeek(org.joda.time.DateTime int )org.joda.time.DateTime"->"org.joda.time.DateTime"[label="1"]
"(static)org.joda.time.DateTime.withDayOfYear(org.joda.time.DateTime int )org.joda.time.DateTime"->"org.joda.time.DateTime"[label="1"]
"(static)org.joda.time.DateTime.withDurationAdded(org.joda.time.DateTime long int )org.joda.time.DateTime"->"org.joda.time.DateTime"[label="1"]
"(static)org.joda.time.DateTime.withDurationAdded(org.joda.time.DateTime org.joda.time.ReadableDuration int )org.joda.time.DateTime"->"org.joda.time.DateTime"[label="1"]
"(static)org.joda.time.DateTime.withEarlierOffsetAtOverlap(org.joda.time.DateTime )org.joda.time.DateTime"->"org.joda.time.DateTime"[label="1"]
"(static)org.joda.time.DateTime.withEra(org.joda.time.DateTime int )org.joda.time.DateTime"->"org.joda.time.DateTime"[label="1"]
"(static)org.joda.time.DateTime.withField(org.joda.time.DateTime org.joda.time.DateTimeFieldType int )org.joda.time.DateTime"->"org.joda.time.DateTime"[label="1"]
"(static)org.joda.time.DateTime.withFieldAdded(org.joda.time.DateTime org.joda.time.DurationFieldType int )org.joda.time.DateTime"->"org.joda.time.DateTime"[label="1"]
"(static)org.joda.time.DateTime.withFields(org.joda.time.DateTime org.joda.time.ReadablePartial )org.joda.time.DateTime"->"org.joda.time.DateTime"[label="1"]
"(static)org.joda.time.DateTime.withHourOfDay(org.joda.time.DateTime int )org.joda.time.DateTime"->"org.joda.time.DateTime"[label="1"]
"(static)org.joda.time.DateTime.withLaterOffsetAtOverlap(org.joda.time.DateTime )org.joda.time.DateTime"->"org.joda.time.DateTime"[label="1"]
"(static)org.joda.time.DateTime.withMillis(org.joda.time.DateTime long )org.joda.time.DateTime"->"org.joda.time.DateTime"[label="1"]
"(static)org.joda.time.DateTime.withMillisOfDay(org.joda.time.DateTime int )org.joda.time.DateTime"->"org.joda.time.DateTime"[label="1"]
"(static)org.joda.time.DateTime.withMillisOfSecond(org.joda.time.DateTime int )org.joda.time.DateTime"->"org.joda.time.DateTime"[label="1"]
"(static)org.joda.time.DateTime.withMinuteOfHour(org.joda.time.DateTime int )org.joda.time.DateTime"->"org.joda.time.DateTime"[label="1"]
"(static)org.joda.time.DateTime.withMonthOfYear(org.joda.time.DateTime int )org.joda.time.DateTime"->"org.joda.time.DateTime"[label="1"]
"(static)org.joda.time.DateTime.withPeriodAdded(org.joda.time.DateTime org.joda.time.ReadablePeriod int )org.joda.time.DateTime"->"org.joda.time.DateTime"[label="1"]
"(static)org.joda.time.DateTime.withSecondOfMinute(org.joda.time.DateTime int )org.joda.time.DateTime"->"org.joda.time.DateTime"[label="1"]
"(static)org.joda.time.DateTime.withTime(org.joda.time.DateTime org.joda.time.LocalTime )org.joda.time.DateTime"->"org.joda.time.DateTime"[label="1"]
"(static)org.joda.time.DateTime.withTimeAtStartOfDay(org.joda.time.DateTime )org.joda.time.DateTime"->"org.joda.time.DateTime"[label="1"]
"(static)org.joda.time.DateTime.withWeekOfWeekyear(org.joda.time.DateTime int )org.joda.time.DateTime"->"org.joda.time.DateTime"[label="1"]
"(static)org.joda.time.DateTime.withWeekyear(org.joda.time.DateTime int )org.joda.time.DateTime"->"org.joda.time.DateTime"[label="1"]
"(static)org.joda.time.DateTime.withYear(org.joda.time.DateTime int )org.joda.time.DateTime"->"org.joda.time.DateTime"[label="1"]
"(static)org.joda.time.DateTime.withYearOfCentury(org.joda.time.DateTime int )org.joda.time.DateTime"->"org.joda.time.DateTime"[label="1"]
"(static)org.joda.time.DateTime.withYearOfEra(org.joda.time.DateTime int )org.joda.time.DateTime"->"org.joda.time.DateTime"[label="1"]
"(static)org.joda.time.DateTime.withZone(org.joda.time.DateTime org.joda.time.DateTimeZone )org.joda.time.DateTime"->"org.joda.time.DateTime"[label="1"]
"(static)org.joda.time.DateTime.withZoneRetainFields(org.joda.time.DateTime org.joda.time.DateTimeZone )org.joda.time.DateTime"->"org.joda.time.DateTime"[label="1"]
"(static)org.joda.time.DateTime.year(org.joda.time.DateTime )org.joda.time.DateTime$Property"->"org.joda.time.DateTime$Property"[label="1"]
"(static)org.joda.time.DateTime.yearOfCentury(org.joda.time.DateTime )org.joda.time.DateTime$Property"->"org.joda.time.DateTime$Property"[label="1"]
"(static)org.joda.time.DateTime.yearOfEra(org.joda.time.DateTime )org.joda.time.DateTime$Property"->"org.joda.time.DateTime$Property"[label="1"]
"(static)org.joda.time.DateTimeComparator.compare(org.joda.time.DateTimeComparator java.lang.Object java.lang.Object )int"->"int"[label="1"]
"(static)org.joda.time.DateTimeComparator.equals(org.joda.time.DateTimeComparator java.lang.Object )boolean"->"boolean"[label="1"]
"(static)org.joda.time.DateTimeComparator.getLowerLimit(org.joda.time.DateTimeComparator )org.joda.time.DateTimeFieldType"->"org.joda.time.DateTimeFieldType"[label="1"]
"(static)org.joda.time.DateTimeComparator.getUpperLimit(org.joda.time.DateTimeComparator )org.joda.time.DateTimeFieldType"->"org.joda.time.DateTimeFieldType"[label="1"]
"(static)org.joda.time.DateTimeField.addWrapField(org.joda.time.DateTimeField long int )long"->"long"[label="1"]
"(static)org.joda.time.DateTimeField.get(org.joda.time.DateTimeField long )int"->"int"[label="1"]
"(static)org.joda.time.DateTimeField.getAsShortText(org.joda.time.DateTimeField int java.util.Locale )java.lang.String"->"java.lang.String"[label="1"]
"(static)org.joda.time.DateTimeField.getAsShortText(org.joda.time.DateTimeField long )java.lang.String"->"java.lang.String"[label="1"]
"(static)org.joda.time.DateTimeField.getAsShortText(org.joda.time.DateTimeField long java.util.Locale )java.lang.String"->"java.lang.String"[label="1"]
"(static)org.joda.time.DateTimeField.getAsShortText(org.joda.time.DateTimeField org.joda.time.ReadablePartial java.util.Locale )java.lang.String"->"java.lang.String"[label="1"]
"(static)org.joda.time.DateTimeField.getAsText(org.joda.time.DateTimeField int java.util.Locale )java.lang.String"->"java.lang.String"[label="1"]
"(static)org.joda.time.DateTimeField.getAsText(org.joda.time.DateTimeField long )java.lang.String"->"java.lang.String"[label="1"]
"(static)org.joda.time.DateTimeField.getAsText(org.joda.time.DateTimeField long java.util.Locale )java.lang.String"->"java.lang.String"[label="1"]
"(static)org.joda.time.DateTimeField.getAsText(org.joda.time.DateTimeField org.joda.time.ReadablePartial java.util.Locale )java.lang.String"->"java.lang.String"[label="1"]
"(static)org.joda.time.DateTimeField.getDifference(org.joda.time.DateTimeField long long )int"->"int"[label="1"]
"(static)org.joda.time.DateTimeField.getDifferenceAsLong(org.joda.time.DateTimeField long long )long"->"long"[label="1"]
"(static)org.joda.time.DateTimeField.getDurationField(org.joda.time.DateTimeField )org.joda.time.DurationField"->"org.joda.time.DurationField"[label="1"]
"(static)org.joda.time.DateTimeField.getLeapAmount(org.joda.time.DateTimeField long )int"->"int"[label="1"]
"(static)org.joda.time.DateTimeField.getLeapDurationField(org.joda.time.DateTimeField )org.joda.time.DurationField"->"org.joda.time.DurationField"[label="1"]
"(static)org.joda.time.DateTimeField.getMaximumShortTextLength(org.joda.time.DateTimeField java.util.Locale )int"->"int"[label="1"]
"(static)org.joda.time.DateTimeField.getMaximumTextLength(org.joda.time.DateTimeField java.util.Locale )int"->"int"[label="1"]
"(static)org.joda.time.DateTimeField.getMaximumValue(org.joda.time.DateTimeField )int"->"int"[label="1"]
"(static)org.joda.time.DateTimeField.getMaximumValue(org.joda.time.DateTimeField long )int"->"int"[label="1"]
"(static)org.joda.time.DateTimeField.getMaximumValue(org.joda.time.DateTimeField org.joda.time.ReadablePartial )int"->"int"[label="1"]
"(static)org.joda.time.DateTimeField.getMaximumValue(org.joda.time.DateTimeField org.joda.time.ReadablePartial int[] )int"->"int"[label="1"]
"(static)org.joda.time.DateTimeField.getMinimumValue(org.joda.time.DateTimeField )int"->"int"[label="1"]
"(static)org.joda.time.DateTimeField.getMinimumValue(org.joda.time.DateTimeField long )int"->"int"[label="1"]
"(static)org.joda.time.DateTimeField.getMinimumValue(org.joda.time.DateTimeField org.joda.time.ReadablePartial )int"->"int"[label="1"]
"(static)org.joda.time.DateTimeField.getMinimumValue(org.joda.time.DateTimeField org.joda.time.ReadablePartial int[] )int"->"int"[label="1"]
"(static)org.joda.time.DateTimeField.getName(org.joda.time.DateTimeField )java.lang.String"->"java.lang.String"[label="1"]
"(static)org.joda.time.DateTimeField.getRangeDurationField(org.joda.time.DateTimeField )org.joda.time.DurationField"->"org.joda.time.DurationField"[label="1"]
"(static)org.joda.time.DateTimeField.getType(org.joda.time.DateTimeField )org.joda.time.DateTimeFieldType"->"org.joda.time.DateTimeFieldType"[label="1"]
"(static)org.joda.time.DateTimeField.isLeap(org.joda.time.DateTimeField long )boolean"->"boolean"[label="1"]
"(static)org.joda.time.DateTimeField.isLenient(org.joda.time.DateTimeField )boolean"->"boolean"[label="1"]
"(static)org.joda.time.DateTimeField.isSupported(org.joda.time.DateTimeField )boolean"->"boolean"[label="1"]
"(static)org.joda.time.DateTimeField.remainder(org.joda.time.DateTimeField long )long"->"long"[label="1"]
"(static)org.joda.time.DateTimeField.roundCeiling(org.joda.time.DateTimeField long )long"->"long"[label="1"]
"(static)org.joda.time.DateTimeField.roundFloor(org.joda.time.DateTimeField long )long"->"long"[label="1"]
"(static)org.joda.time.DateTimeField.roundHalfCeiling(org.joda.time.DateTimeField long )long"->"long"[label="1"]
"(static)org.joda.time.DateTimeField.roundHalfEven(org.joda.time.DateTimeField long )long"->"long"[label="1"]
"(static)org.joda.time.DateTimeField.roundHalfFloor(org.joda.time.DateTimeField long )long"->"long"[label="1"]
"(static)org.joda.time.DateTimeField.set(org.joda.time.DateTimeField long int )long"->"long"[label="1"]
"(static)org.joda.time.DateTimeField.set(org.joda.time.DateTimeField long java.lang.String )long"->"long"[label="1"]
"(static)org.joda.time.DateTimeFieldType$StandardDateTimeFieldType.equals(org.joda.time.DateTimeFieldType$StandardDateTimeFieldType java.lang.Object )boolean"->"boolean"[label="1"]
"(static)org.joda.time.DateTimeFieldType$StandardDateTimeFieldType.getDurationType(org.joda.time.DateTimeFieldType$StandardDateTimeFieldType )org.joda.time.DurationFieldType"->"org.joda.time.DurationFieldType"[label="1"]
"(static)org.joda.time.DateTimeFieldType$StandardDateTimeFieldType.getField(org.joda.time.DateTimeFieldType$StandardDateTimeFieldType org.joda.time.Chronology )org.joda.time.DateTimeField"->"org.joda.time.DateTimeField"[label="1"]
"(static)org.joda.time.DateTimeFieldType$StandardDateTimeFieldType.getRangeDurationType(org.joda.time.DateTimeFieldType$StandardDateTimeFieldType )org.joda.time.DurationFieldType"->"org.joda.time.DurationFieldType"[label="1"]
"(static)org.joda.time.DateTimeFieldType.getDurationType(org.joda.time.DateTimeFieldType )org.joda.time.DurationFieldType"->"org.joda.time.DurationFieldType"[label="1"]
"(static)org.joda.time.DateTimeFieldType.getField(org.joda.time.DateTimeFieldType org.joda.time.Chronology )org.joda.time.DateTimeField"->"org.joda.time.DateTimeField"[label="1"]
"(static)org.joda.time.DateTimeFieldType.getName(org.joda.time.DateTimeFieldType )java.lang.String"->"java.lang.String"[label="1"]
"(static)org.joda.time.DateTimeFieldType.getRangeDurationType(org.joda.time.DateTimeFieldType )org.joda.time.DurationFieldType"->"org.joda.time.DurationFieldType"[label="1"]
"(static)org.joda.time.DateTimeFieldType.isSupported(org.joda.time.DateTimeFieldType org.joda.time.Chronology )boolean"->"boolean"[label="1"]
"(static)org.joda.time.DateTimeUtils$FixedMillisProvider.getMillis(org.joda.time.DateTimeUtils$FixedMillisProvider )long"->"long"[label="1"]
"(static)org.joda.time.DateTimeUtils$MillisProvider.getMillis(org.joda.time.DateTimeUtils$MillisProvider )long"->"long"[label="1"]
"(static)org.joda.time.DateTimeUtils$OffsetMillisProvider.getMillis(org.joda.time.DateTimeUtils$OffsetMillisProvider )long"->"long"[label="1"]
"(static)org.joda.time.DateTimeUtils$SystemMillisProvider.getMillis(org.joda.time.DateTimeUtils$SystemMillisProvider )long"->"long"[label="1"]
"(static)org.joda.time.DateTimeZone$LazyInit$1.getZone(org.joda.time.DateTimeZone$LazyInit$1 )org.joda.time.DateTimeZone"->"org.joda.time.DateTimeZone"[label="1"]
"(static)org.joda.time.DateTimeZone$LazyInit$1.withUTC(org.joda.time.DateTimeZone$LazyInit$1 )org.joda.time.Chronology"->"org.joda.time.Chronology"[label="1"]
"(static)org.joda.time.DateTimeZone$LazyInit$1.withZone(org.joda.time.DateTimeZone$LazyInit$1 org.joda.time.DateTimeZone )org.joda.time.Chronology"->"org.joda.time.Chronology"[label="1"]
"(static)org.joda.time.DateTimeZone.adjustOffset(org.joda.time.DateTimeZone long boolean )long"->"long"[label="1"]
"(static)org.joda.time.DateTimeZone.convertLocalToUTC(org.joda.time.DateTimeZone long boolean )long"->"long"[label="1"]
"(static)org.joda.time.DateTimeZone.convertUTCToLocal(org.joda.time.DateTimeZone long )long"->"long"[label="1"]
"(static)org.joda.time.DateTimeZone.equals(org.joda.time.DateTimeZone java.lang.Object )boolean"->"boolean"[label="1"]
"(static)org.joda.time.DateTimeZone.getID(org.joda.time.DateTimeZone )java.lang.String"->"java.lang.String"[label="1"]
"(static)org.joda.time.DateTimeZone.getMillisKeepLocal(org.joda.time.DateTimeZone org.joda.time.DateTimeZone long )long"->"long"[label="1"]
"(static)org.joda.time.DateTimeZone.getName(org.joda.time.DateTimeZone long )java.lang.String"->"java.lang.String"[label="1"]
"(static)org.joda.time.DateTimeZone.getName(org.joda.time.DateTimeZone long java.util.Locale )java.lang.String"->"java.lang.String"[label="1"]
"(static)org.joda.time.DateTimeZone.getNameKey(org.joda.time.DateTimeZone long )java.lang.String"->"java.lang.String"[label="1"]
"(static)org.joda.time.DateTimeZone.getOffset(org.joda.time.DateTimeZone long )int"->"int"[label="1"]
"(static)org.joda.time.DateTimeZone.getOffset(org.joda.time.DateTimeZone org.joda.time.ReadableInstant )int"->"int"[label="1"]
"(static)org.joda.time.DateTimeZone.getOffsetFromLocal(org.joda.time.DateTimeZone long )int"->"int"[label="1"]
"(static)org.joda.time.DateTimeZone.getShortName(org.joda.time.DateTimeZone long )java.lang.String"->"java.lang.String"[label="1"]
"(static)org.joda.time.DateTimeZone.getShortName(org.joda.time.DateTimeZone long java.util.Locale )java.lang.String"->"java.lang.String"[label="1"]
"(static)org.joda.time.DateTimeZone.getStandardOffset(org.joda.time.DateTimeZone long )int"->"int"[label="1"]
"(static)org.joda.time.DateTimeZone.isFixed(org.joda.time.DateTimeZone )boolean"->"boolean"[label="1"]
"(static)org.joda.time.DateTimeZone.isLocalDateTimeGap(org.joda.time.DateTimeZone org.joda.time.LocalDateTime )boolean"->"boolean"[label="1"]
"(static)org.joda.time.DateTimeZone.isStandardOffset(org.joda.time.DateTimeZone long )boolean"->"boolean"[label="1"]
"(static)org.joda.time.DateTimeZone.nextTransition(org.joda.time.DateTimeZone long )long"->"long"[label="1"]
"(static)org.joda.time.DateTimeZone.previousTransition(org.joda.time.DateTimeZone long )long"->"long"[label="1"]
"(static)org.joda.time.DateTimeZone.toTimeZone(org.joda.time.DateTimeZone )java.util.TimeZone"->"java.util.TimeZone"[label="1"]
"(static)org.joda.time.Days.dividedBy(org.joda.time.Days int )org.joda.time.Days"->"org.joda.time.Days"[label="1"]
"(static)org.joda.time.Days.getDays(org.joda.time.Days )int"->"int"[label="1"]
"(static)org.joda.time.Days.getFieldType(org.joda.time.Days )org.joda.time.DurationFieldType"->"org.joda.time.DurationFieldType"[label="1"]
"(static)org.joda.time.Days.getPeriodType(org.joda.time.Days )org.joda.time.PeriodType"->"org.joda.time.PeriodType"[label="1"]
"(static)org.joda.time.Days.isGreaterThan(org.joda.time.Days org.joda.time.Days )boolean"->"boolean"[label="1"]
"(static)org.joda.time.Days.isLessThan(org.joda.time.Days org.joda.time.Days )boolean"->"boolean"[label="1"]
"(static)org.joda.time.Days.minus(org.joda.time.Days int )org.joda.time.Days"->"org.joda.time.Days"[label="1"]
"(static)org.joda.time.Days.minus(org.joda.time.Days org.joda.time.Days )org.joda.time.Days"->"org.joda.time.Days"[label="1"]
"(static)org.joda.time.Days.multipliedBy(org.joda.time.Days int )org.joda.time.Days"->"org.joda.time.Days"[label="1"]
"(static)org.joda.time.Days.negated(org.joda.time.Days )org.joda.time.Days"->"org.joda.time.Days"[label="1"]
"(static)org.joda.time.Days.plus(org.joda.time.Days int )org.joda.time.Days"->"org.joda.time.Days"[label="1"]
"(static)org.joda.time.Days.plus(org.joda.time.Days org.joda.time.Days )org.joda.time.Days"->"org.joda.time.Days"[label="1"]
"(static)org.joda.time.Days.toStandardDuration(org.joda.time.Days )org.joda.time.Duration"->"org.joda.time.Duration"[label="1"]
"(static)org.joda.time.Days.toStandardHours(org.joda.time.Days )org.joda.time.Hours"->"org.joda.time.Hours"[label="1"]
"(static)org.joda.time.Days.toStandardMinutes(org.joda.time.Days )org.joda.time.Minutes"->"org.joda.time.Minutes"[label="1"]
"(static)org.joda.time.Days.toStandardSeconds(org.joda.time.Days )org.joda.time.Seconds"->"org.joda.time.Seconds"[label="1"]
"(static)org.joda.time.Days.toStandardWeeks(org.joda.time.Days )org.joda.time.Weeks"->"org.joda.time.Weeks"[label="1"]
"(static)org.joda.time.Duration.dividedBy(org.joda.time.Duration long )org.joda.time.Duration"->"org.joda.time.Duration"[label="1"]
"(static)org.joda.time.Duration.getStandardDays(org.joda.time.Duration )long"->"long"[label="1"]
"(static)org.joda.time.Duration.getStandardHours(org.joda.time.Duration )long"->"long"[label="1"]
"(static)org.joda.time.Duration.getStandardMinutes(org.joda.time.Duration )long"->"long"[label="1"]
"(static)org.joda.time.Duration.getStandardSeconds(org.joda.time.Duration )long"->"long"[label="1"]
"(static)org.joda.time.Duration.minus(org.joda.time.Duration long )org.joda.time.Duration"->"org.joda.time.Duration"[label="1"]
"(static)org.joda.time.Duration.minus(org.joda.time.Duration org.joda.time.ReadableDuration )org.joda.time.Duration"->"org.joda.time.Duration"[label="1"]
"(static)org.joda.time.Duration.multipliedBy(org.joda.time.Duration long )org.joda.time.Duration"->"org.joda.time.Duration"[label="1"]
"(static)org.joda.time.Duration.negated(org.joda.time.Duration )org.joda.time.Duration"->"org.joda.time.Duration"[label="1"]
"(static)org.joda.time.Duration.plus(org.joda.time.Duration long )org.joda.time.Duration"->"org.joda.time.Duration"[label="1"]
"(static)org.joda.time.Duration.plus(org.joda.time.Duration org.joda.time.ReadableDuration )org.joda.time.Duration"->"org.joda.time.Duration"[label="1"]
"(static)org.joda.time.Duration.toDuration(org.joda.time.Duration )org.joda.time.Duration"->"org.joda.time.Duration"[label="1"]
"(static)org.joda.time.Duration.toStandardDays(org.joda.time.Duration )org.joda.time.Days"->"org.joda.time.Days"[label="1"]
"(static)org.joda.time.Duration.toStandardHours(org.joda.time.Duration )org.joda.time.Hours"->"org.joda.time.Hours"[label="1"]
"(static)org.joda.time.Duration.toStandardMinutes(org.joda.time.Duration )org.joda.time.Minutes"->"org.joda.time.Minutes"[label="1"]
"(static)org.joda.time.Duration.toStandardSeconds(org.joda.time.Duration )org.joda.time.Seconds"->"org.joda.time.Seconds"[label="1"]
"(static)org.joda.time.Duration.withDurationAdded(org.joda.time.Duration long int )org.joda.time.Duration"->"org.joda.time.Duration"[label="1"]
"(static)org.joda.time.Duration.withDurationAdded(org.joda.time.Duration org.joda.time.ReadableDuration int )org.joda.time.Duration"->"org.joda.time.Duration"[label="1"]
"(static)org.joda.time.Duration.withMillis(org.joda.time.Duration long )org.joda.time.Duration"->"org.joda.time.Duration"[label="1"]
"(static)org.joda.time.DurationField.getDifference(org.joda.time.DurationField long long )int"->"int"[label="1"]
"(static)org.joda.time.DurationField.getDifferenceAsLong(org.joda.time.DurationField long long )long"->"long"[label="1"]
"(static)org.joda.time.DurationField.getMillis(org.joda.time.DurationField int )long"->"long"[label="1"]
"(static)org.joda.time.DurationField.getMillis(org.joda.time.DurationField int long )long"->"long"[label="1"]
"(static)org.joda.time.DurationField.getMillis(org.joda.time.DurationField long )long"->"long"[label="1"]
"(static)org.joda.time.DurationField.getMillis(org.joda.time.DurationField long long )long"->"long"[label="1"]
"(static)org.joda.time.DurationField.getName(org.joda.time.DurationField )java.lang.String"->"java.lang.String"[label="1"]
"(static)org.joda.time.DurationField.getType(org.joda.time.DurationField )org.joda.time.DurationFieldType"->"org.joda.time.DurationFieldType"[label="1"]
"(static)org.joda.time.DurationField.getUnitMillis(org.joda.time.DurationField )long"->"long"[label="1"]
"(static)org.joda.time.DurationField.getValue(org.joda.time.DurationField long )int"->"int"[label="1"]
"(static)org.joda.time.DurationField.getValue(org.joda.time.DurationField long long )int"->"int"[label="1"]
"(static)org.joda.time.DurationField.getValueAsLong(org.joda.time.DurationField long )long"->"long"[label="1"]
"(static)org.joda.time.DurationField.getValueAsLong(org.joda.time.DurationField long long )long"->"long"[label="1"]
"(static)org.joda.time.DurationField.isPrecise(org.joda.time.DurationField )boolean"->"boolean"[label="1"]
"(static)org.joda.time.DurationField.isSupported(org.joda.time.DurationField )boolean"->"boolean"[label="1"]
"(static)org.joda.time.DurationField.subtract(org.joda.time.DurationField long int )long"->"long"[label="1"]
"(static)org.joda.time.DurationField.subtract(org.joda.time.DurationField long long )long"->"long"[label="1"]
"(static)org.joda.time.DurationFieldType$StandardDurationFieldType.equals(org.joda.time.DurationFieldType$StandardDurationFieldType java.lang.Object )boolean"->"boolean"[label="1"]
"(static)org.joda.time.DurationFieldType$StandardDurationFieldType.getField(org.joda.time.DurationFieldType$StandardDurationFieldType org.joda.time.Chronology )org.joda.time.DurationField"->"org.joda.time.DurationField"[label="1"]
"(static)org.joda.time.DurationFieldType.getField(org.joda.time.DurationFieldType org.joda.time.Chronology )org.joda.time.DurationField"->"org.joda.time.DurationField"[label="1"]
"(static)org.joda.time.DurationFieldType.getName(org.joda.time.DurationFieldType )java.lang.String"->"java.lang.String"[label="1"]
"(static)org.joda.time.DurationFieldType.isSupported(org.joda.time.DurationFieldType org.joda.time.Chronology )boolean"->"boolean"[label="1"]
"(static)org.joda.time.Hours.dividedBy(org.joda.time.Hours int )org.joda.time.Hours"->"org.joda.time.Hours"[label="1"]
"(static)org.joda.time.Hours.getFieldType(org.joda.time.Hours )org.joda.time.DurationFieldType"->"org.joda.time.DurationFieldType"[label="1"]
"(static)org.joda.time.Hours.getHours(org.joda.time.Hours )int"->"int"[label="1"]
"(static)org.joda.time.Hours.getPeriodType(org.joda.time.Hours )org.joda.time.PeriodType"->"org.joda.time.PeriodType"[label="1"]
"(static)org.joda.time.Hours.isGreaterThan(org.joda.time.Hours org.joda.time.Hours )boolean"->"boolean"[label="1"]
"(static)org.joda.time.Hours.isLessThan(org.joda.time.Hours org.joda.time.Hours )boolean"->"boolean"[label="1"]
"(static)org.joda.time.Hours.minus(org.joda.time.Hours int )org.joda.time.Hours"->"org.joda.time.Hours"[label="1"]
"(static)org.joda.time.Hours.minus(org.joda.time.Hours org.joda.time.Hours )org.joda.time.Hours"->"org.joda.time.Hours"[label="1"]
"(static)org.joda.time.Hours.multipliedBy(org.joda.time.Hours int )org.joda.time.Hours"->"org.joda.time.Hours"[label="1"]
"(static)org.joda.time.Hours.negated(org.joda.time.Hours )org.joda.time.Hours"->"org.joda.time.Hours"[label="1"]
"(static)org.joda.time.Hours.plus(org.joda.time.Hours int )org.joda.time.Hours"->"org.joda.time.Hours"[label="1"]
"(static)org.joda.time.Hours.plus(org.joda.time.Hours org.joda.time.Hours )org.joda.time.Hours"->"org.joda.time.Hours"[label="1"]
"(static)org.joda.time.Hours.toStandardDays(org.joda.time.Hours )org.joda.time.Days"->"org.joda.time.Days"[label="1"]
"(static)org.joda.time.Hours.toStandardDuration(org.joda.time.Hours )org.joda.time.Duration"->"org.joda.time.Duration"[label="1"]
"(static)org.joda.time.Hours.toStandardMinutes(org.joda.time.Hours )org.joda.time.Minutes"->"org.joda.time.Minutes"[label="1"]
"(static)org.joda.time.Hours.toStandardSeconds(org.joda.time.Hours )org.joda.time.Seconds"->"org.joda.time.Seconds"[label="1"]
"(static)org.joda.time.Hours.toStandardWeeks(org.joda.time.Hours )org.joda.time.Weeks"->"org.joda.time.Weeks"[label="1"]
"(static)org.joda.time.IllegalFieldValueException.getDateTimeFieldType(org.joda.time.IllegalFieldValueException )org.joda.time.DateTimeFieldType"->"org.joda.time.DateTimeFieldType"[label="1"]
"(static)org.joda.time.IllegalFieldValueException.getDurationFieldType(org.joda.time.IllegalFieldValueException )org.joda.time.DurationFieldType"->"org.joda.time.DurationFieldType"[label="1"]
"(static)org.joda.time.IllegalFieldValueException.getFieldName(org.joda.time.IllegalFieldValueException )java.lang.String"->"java.lang.String"[label="1"]
"(static)org.joda.time.IllegalFieldValueException.getIllegalNumberValue(org.joda.time.IllegalFieldValueException )java.lang.Number"->"java.lang.Number"[label="1"]
"(static)org.joda.time.IllegalFieldValueException.getIllegalStringValue(org.joda.time.IllegalFieldValueException )java.lang.String"->"java.lang.String"[label="1"]
"(static)org.joda.time.IllegalFieldValueException.getIllegalValueAsString(org.joda.time.IllegalFieldValueException )java.lang.String"->"java.lang.String"[label="1"]
"(static)org.joda.time.IllegalFieldValueException.getLowerBound(org.joda.time.IllegalFieldValueException )java.lang.Number"->"java.lang.Number"[label="1"]
"(static)org.joda.time.IllegalFieldValueException.getMessage(org.joda.time.IllegalFieldValueException )java.lang.String"->"java.lang.String"[label="1"]
"(static)org.joda.time.IllegalFieldValueException.getUpperBound(org.joda.time.IllegalFieldValueException )java.lang.Number"->"java.lang.Number"[label="1"]
"(static)org.joda.time.Instant.getChronology(org.joda.time.Instant )org.joda.time.Chronology"->"org.joda.time.Chronology"[label="1"]
"(static)org.joda.time.Instant.getMillis(org.joda.time.Instant )long"->"long"[label="1"]
"(static)org.joda.time.Instant.minus(org.joda.time.Instant long )org.joda.time.Instant"->"org.joda.time.Instant"[label="1"]
"(static)org.joda.time.Instant.minus(org.joda.time.Instant org.joda.time.ReadableDuration )org.joda.time.Instant"->"org.joda.time.Instant"[label="1"]
"(static)org.joda.time.Instant.plus(org.joda.time.Instant long )org.joda.time.Instant"->"org.joda.time.Instant"[label="1"]
"(static)org.joda.time.Instant.plus(org.joda.time.Instant org.joda.time.ReadableDuration )org.joda.time.Instant"->"org.joda.time.Instant"[label="1"]
"(static)org.joda.time.Instant.toDateTime(org.joda.time.Instant )org.joda.time.DateTime"->"org.joda.time.DateTime"[label="1"]
"(static)org.joda.time.Instant.toDateTimeISO(org.joda.time.Instant )org.joda.time.DateTime"->"org.joda.time.DateTime"[label="1"]
"(static)org.joda.time.Instant.toInstant(org.joda.time.Instant )org.joda.time.Instant"->"org.joda.time.Instant"[label="1"]
"(static)org.joda.time.Instant.toMutableDateTime(org.joda.time.Instant )org.joda.time.MutableDateTime"->"org.joda.time.MutableDateTime"[label="1"]
"(static)org.joda.time.Instant.toMutableDateTimeISO(org.joda.time.Instant )org.joda.time.MutableDateTime"->"org.joda.time.MutableDateTime"[label="1"]
"(static)org.joda.time.Instant.withDurationAdded(org.joda.time.Instant long int )org.joda.time.Instant"->"org.joda.time.Instant"[label="1"]
"(static)org.joda.time.Instant.withDurationAdded(org.joda.time.Instant org.joda.time.ReadableDuration int )org.joda.time.Instant"->"org.joda.time.Instant"[label="1"]
"(static)org.joda.time.Instant.withMillis(org.joda.time.Instant long )org.joda.time.Instant"->"org.joda.time.Instant"[label="1"]
"(static)org.joda.time.Interval.abuts(org.joda.time.Interval org.joda.time.ReadableInterval )boolean"->"boolean"[label="1"]
"(static)org.joda.time.Interval.gap(org.joda.time.Interval org.joda.time.ReadableInterval )org.joda.time.Interval"->"org.joda.time.Interval"[label="1"]
"(static)org.joda.time.Interval.overlap(org.joda.time.Interval org.joda.time.ReadableInterval )org.joda.time.Interval"->"org.joda.time.Interval"[label="1"]
"(static)org.joda.time.Interval.toInterval(org.joda.time.Interval )org.joda.time.Interval"->"org.joda.time.Interval"[label="1"]
"(static)org.joda.time.Interval.withChronology(org.joda.time.Interval org.joda.time.Chronology )org.joda.time.Interval"->"org.joda.time.Interval"[label="1"]
"(static)org.joda.time.Interval.withDurationAfterStart(org.joda.time.Interval org.joda.time.ReadableDuration )org.joda.time.Interval"->"org.joda.time.Interval"[label="1"]
"(static)org.joda.time.Interval.withDurationBeforeEnd(org.joda.time.Interval org.joda.time.ReadableDuration )org.joda.time.Interval"->"org.joda.time.Interval"[label="1"]
"(static)org.joda.time.Interval.withEnd(org.joda.time.Interval org.joda.time.ReadableInstant )org.joda.time.Interval"->"org.joda.time.Interval"[label="1"]
"(static)org.joda.time.Interval.withEndMillis(org.joda.time.Interval long )org.joda.time.Interval"->"org.joda.time.Interval"[label="1"]
"(static)org.joda.time.Interval.withPeriodAfterStart(org.joda.time.Interval org.joda.time.ReadablePeriod )org.joda.time.Interval"->"org.joda.time.Interval"[label="1"]
"(static)org.joda.time.Interval.withPeriodBeforeEnd(org.joda.time.Interval org.joda.time.ReadablePeriod )org.joda.time.Interval"->"org.joda.time.Interval"[label="1"]
"(static)org.joda.time.Interval.withStart(org.joda.time.Interval org.joda.time.ReadableInstant )org.joda.time.Interval"->"org.joda.time.Interval"[label="1"]
"(static)org.joda.time.Interval.withStartMillis(org.joda.time.Interval long )org.joda.time.Interval"->"org.joda.time.Interval"[label="1"]
"(static)org.joda.time.LocalDate$Property.addToCopy(org.joda.time.LocalDate$Property int )org.joda.time.LocalDate"->"org.joda.time.LocalDate"[label="1"]
"(static)org.joda.time.LocalDate$Property.addWrapFieldToCopy(org.joda.time.LocalDate$Property int )org.joda.time.LocalDate"->"org.joda.time.LocalDate"[label="1"]
"(static)org.joda.time.LocalDate$Property.getField(org.joda.time.LocalDate$Property )org.joda.time.DateTimeField"->"org.joda.time.DateTimeField"[label="1"]
"(static)org.joda.time.LocalDate$Property.getLocalDate(org.joda.time.LocalDate$Property )org.joda.time.LocalDate"->"org.joda.time.LocalDate"[label="1"]
"(static)org.joda.time.LocalDate$Property.roundCeilingCopy(org.joda.time.LocalDate$Property )org.joda.time.LocalDate"->"org.joda.time.LocalDate"[label="1"]
"(static)org.joda.time.LocalDate$Property.roundFloorCopy(org.joda.time.LocalDate$Property )org.joda.time.LocalDate"->"org.joda.time.LocalDate"[label="1"]
"(static)org.joda.time.LocalDate$Property.roundHalfCeilingCopy(org.joda.time.LocalDate$Property )org.joda.time.LocalDate"->"org.joda.time.LocalDate"[label="1"]
"(static)org.joda.time.LocalDate$Property.roundHalfEvenCopy(org.joda.time.LocalDate$Property )org.joda.time.LocalDate"->"org.joda.time.LocalDate"[label="1"]
"(static)org.joda.time.LocalDate$Property.roundHalfFloorCopy(org.joda.time.LocalDate$Property )org.joda.time.LocalDate"->"org.joda.time.LocalDate"[label="1"]
"(static)org.joda.time.LocalDate$Property.setCopy(org.joda.time.LocalDate$Property int )org.joda.time.LocalDate"->"org.joda.time.LocalDate"[label="1"]
"(static)org.joda.time.LocalDate$Property.setCopy(org.joda.time.LocalDate$Property java.lang.String )org.joda.time.LocalDate"->"org.joda.time.LocalDate"[label="1"]
"(static)org.joda.time.LocalDate$Property.setCopy(org.joda.time.LocalDate$Property java.lang.String java.util.Locale )org.joda.time.LocalDate"->"org.joda.time.LocalDate"[label="1"]
"(static)org.joda.time.LocalDate$Property.withMaximumValue(org.joda.time.LocalDate$Property )org.joda.time.LocalDate"->"org.joda.time.LocalDate"[label="1"]
"(static)org.joda.time.LocalDate$Property.withMinimumValue(org.joda.time.LocalDate$Property )org.joda.time.LocalDate"->"org.joda.time.LocalDate"[label="1"]
"(static)org.joda.time.LocalDate.centuryOfEra(org.joda.time.LocalDate )org.joda.time.LocalDate$Property"->"org.joda.time.LocalDate$Property"[label="1"]
"(static)org.joda.time.LocalDate.dayOfMonth(org.joda.time.LocalDate )org.joda.time.LocalDate$Property"->"org.joda.time.LocalDate$Property"[label="1"]
"(static)org.joda.time.LocalDate.dayOfWeek(org.joda.time.LocalDate )org.joda.time.LocalDate$Property"->"org.joda.time.LocalDate$Property"[label="1"]
"(static)org.joda.time.LocalDate.dayOfYear(org.joda.time.LocalDate )org.joda.time.LocalDate$Property"->"org.joda.time.LocalDate$Property"[label="1"]
"(static)org.joda.time.LocalDate.equals(org.joda.time.LocalDate java.lang.Object )boolean"->"boolean"[label="1"]
"(static)org.joda.time.LocalDate.era(org.joda.time.LocalDate )org.joda.time.LocalDate$Property"->"org.joda.time.LocalDate$Property"[label="1"]
"(static)org.joda.time.LocalDate.get(org.joda.time.LocalDate org.joda.time.DateTimeFieldType )int"->"int"[label="1"]
"(static)org.joda.time.LocalDate.getCenturyOfEra(org.joda.time.LocalDate )int"->"int"[label="1"]
"(static)org.joda.time.LocalDate.getChronology(org.joda.time.LocalDate )org.joda.time.Chronology"->"org.joda.time.Chronology"[label="1"]
"(static)org.joda.time.LocalDate.getDayOfMonth(org.joda.time.LocalDate )int"->"int"[label="1"]
"(static)org.joda.time.LocalDate.getDayOfWeek(org.joda.time.LocalDate )int"->"int"[label="1"]
"(static)org.joda.time.LocalDate.getDayOfYear(org.joda.time.LocalDate )int"->"int"[label="1"]
"(static)org.joda.time.LocalDate.getEra(org.joda.time.LocalDate )int"->"int"[label="1"]
"(static)org.joda.time.LocalDate.getMonthOfYear(org.joda.time.LocalDate )int"->"int"[label="1"]
"(static)org.joda.time.LocalDate.getValue(org.joda.time.LocalDate int )int"->"int"[label="1"]
"(static)org.joda.time.LocalDate.getWeekOfWeekyear(org.joda.time.LocalDate )int"->"int"[label="1"]
"(static)org.joda.time.LocalDate.getWeekyear(org.joda.time.LocalDate )int"->"int"[label="1"]
"(static)org.joda.time.LocalDate.getYear(org.joda.time.LocalDate )int"->"int"[label="1"]
"(static)org.joda.time.LocalDate.getYearOfCentury(org.joda.time.LocalDate )int"->"int"[label="1"]
"(static)org.joda.time.LocalDate.getYearOfEra(org.joda.time.LocalDate )int"->"int"[label="1"]
"(static)org.joda.time.LocalDate.isSupported(org.joda.time.LocalDate org.joda.time.DateTimeFieldType )boolean"->"boolean"[label="1"]
"(static)org.joda.time.LocalDate.isSupported(org.joda.time.LocalDate org.joda.time.DurationFieldType )boolean"->"boolean"[label="1"]
"(static)org.joda.time.LocalDate.minus(org.joda.time.LocalDate org.joda.time.ReadablePeriod )org.joda.time.LocalDate"->"org.joda.time.LocalDate"[label="1"]
"(static)org.joda.time.LocalDate.minusDays(org.joda.time.LocalDate int )org.joda.time.LocalDate"->"org.joda.time.LocalDate"[label="1"]
"(static)org.joda.time.LocalDate.minusMonths(org.joda.time.LocalDate int )org.joda.time.LocalDate"->"org.joda.time.LocalDate"[label="1"]
"(static)org.joda.time.LocalDate.minusWeeks(org.joda.time.LocalDate int )org.joda.time.LocalDate"->"org.joda.time.LocalDate"[label="1"]
"(static)org.joda.time.LocalDate.minusYears(org.joda.time.LocalDate int )org.joda.time.LocalDate"->"org.joda.time.LocalDate"[label="1"]
"(static)org.joda.time.LocalDate.monthOfYear(org.joda.time.LocalDate )org.joda.time.LocalDate$Property"->"org.joda.time.LocalDate$Property"[label="1"]
"(static)org.joda.time.LocalDate.plus(org.joda.time.LocalDate org.joda.time.ReadablePeriod )org.joda.time.LocalDate"->"org.joda.time.LocalDate"[label="1"]
"(static)org.joda.time.LocalDate.plusDays(org.joda.time.LocalDate int )org.joda.time.LocalDate"->"org.joda.time.LocalDate"[label="1"]
"(static)org.joda.time.LocalDate.plusMonths(org.joda.time.LocalDate int )org.joda.time.LocalDate"->"org.joda.time.LocalDate"[label="1"]
"(static)org.joda.time.LocalDate.plusWeeks(org.joda.time.LocalDate int )org.joda.time.LocalDate"->"org.joda.time.LocalDate"[label="1"]
"(static)org.joda.time.LocalDate.plusYears(org.joda.time.LocalDate int )org.joda.time.LocalDate"->"org.joda.time.LocalDate"[label="1"]
"(static)org.joda.time.LocalDate.property(org.joda.time.LocalDate org.joda.time.DateTimeFieldType )org.joda.time.LocalDate$Property"->"org.joda.time.LocalDate$Property"[label="1"]
"(static)org.joda.time.LocalDate.size(org.joda.time.LocalDate )int"->"int"[label="1"]
"(static)org.joda.time.LocalDate.toDate(org.joda.time.LocalDate )java.util.Date"->"java.util.Date"[label="1"]
"(static)org.joda.time.LocalDate.toDateMidnight(org.joda.time.LocalDate )org.joda.time.DateMidnight"->"org.joda.time.DateMidnight"[label="1"]
"(static)org.joda.time.LocalDate.toDateMidnight(org.joda.time.LocalDate org.joda.time.DateTimeZone )org.joda.time.DateMidnight"->"org.joda.time.DateMidnight"[label="1"]
"(static)org.joda.time.LocalDate.toDateTime(org.joda.time.LocalDate org.joda.time.LocalTime )org.joda.time.DateTime"->"org.joda.time.DateTime"[label="1"]
"(static)org.joda.time.LocalDate.toDateTime(org.joda.time.LocalDate org.joda.time.LocalTime org.joda.time.DateTimeZone )org.joda.time.DateTime"->"org.joda.time.DateTime"[label="1"]
"(static)org.joda.time.LocalDate.toDateTimeAtCurrentTime(org.joda.time.LocalDate )org.joda.time.DateTime"->"org.joda.time.DateTime"[label="1"]
"(static)org.joda.time.LocalDate.toDateTimeAtCurrentTime(org.joda.time.LocalDate org.joda.time.DateTimeZone )org.joda.time.DateTime"->"org.joda.time.DateTime"[label="1"]
"(static)org.joda.time.LocalDate.toDateTimeAtMidnight(org.joda.time.LocalDate )org.joda.time.DateTime"->"org.joda.time.DateTime"[label="1"]
"(static)org.joda.time.LocalDate.toDateTimeAtMidnight(org.joda.time.LocalDate org.joda.time.DateTimeZone )org.joda.time.DateTime"->"org.joda.time.DateTime"[label="1"]
"(static)org.joda.time.LocalDate.toDateTimeAtStartOfDay(org.joda.time.LocalDate )org.joda.time.DateTime"->"org.joda.time.DateTime"[label="1"]
"(static)org.joda.time.LocalDate.toDateTimeAtStartOfDay(org.joda.time.LocalDate org.joda.time.DateTimeZone )org.joda.time.DateTime"->"org.joda.time.DateTime"[label="1"]
"(static)org.joda.time.LocalDate.toInterval(org.joda.time.LocalDate )org.joda.time.Interval"->"org.joda.time.Interval"[label="1"]
"(static)org.joda.time.LocalDate.toInterval(org.joda.time.LocalDate org.joda.time.DateTimeZone )org.joda.time.Interval"->"org.joda.time.Interval"[label="1"]
"(static)org.joda.time.LocalDate.toLocalDateTime(org.joda.time.LocalDate org.joda.time.LocalTime )org.joda.time.LocalDateTime"->"org.joda.time.LocalDateTime"[label="1"]
"(static)org.joda.time.LocalDate.weekOfWeekyear(org.joda.time.LocalDate )org.joda.time.LocalDate$Property"->"org.joda.time.LocalDate$Property"[label="1"]
"(static)org.joda.time.LocalDate.weekyear(org.joda.time.LocalDate )org.joda.time.LocalDate$Property"->"org.joda.time.LocalDate$Property"[label="1"]
"(static)org.joda.time.LocalDate.withCenturyOfEra(org.joda.time.LocalDate int )org.joda.time.LocalDate"->"org.joda.time.LocalDate"[label="1"]
"(static)org.joda.time.LocalDate.withDayOfMonth(org.joda.time.LocalDate int )org.joda.time.LocalDate"->"org.joda.time.LocalDate"[label="1"]
"(static)org.joda.time.LocalDate.withDayOfWeek(org.joda.time.LocalDate int )org.joda.time.LocalDate"->"org.joda.time.LocalDate"[label="1"]
"(static)org.joda.time.LocalDate.withDayOfYear(org.joda.time.LocalDate int )org.joda.time.LocalDate"->"org.joda.time.LocalDate"[label="1"]
"(static)org.joda.time.LocalDate.withEra(org.joda.time.LocalDate int )org.joda.time.LocalDate"->"org.joda.time.LocalDate"[label="1"]
"(static)org.joda.time.LocalDate.withField(org.joda.time.LocalDate org.joda.time.DateTimeFieldType int )org.joda.time.LocalDate"->"org.joda.time.LocalDate"[label="1"]
"(static)org.joda.time.LocalDate.withFieldAdded(org.joda.time.LocalDate org.joda.time.DurationFieldType int )org.joda.time.LocalDate"->"org.joda.time.LocalDate"[label="1"]
"(static)org.joda.time.LocalDate.withFields(org.joda.time.LocalDate org.joda.time.ReadablePartial )org.joda.time.LocalDate"->"org.joda.time.LocalDate"[label="1"]
"(static)org.joda.time.LocalDate.withMonthOfYear(org.joda.time.LocalDate int )org.joda.time.LocalDate"->"org.joda.time.LocalDate"[label="1"]
"(static)org.joda.time.LocalDate.withPeriodAdded(org.joda.time.LocalDate org.joda.time.ReadablePeriod int )org.joda.time.LocalDate"->"org.joda.time.LocalDate"[label="1"]
"(static)org.joda.time.LocalDate.withWeekOfWeekyear(org.joda.time.LocalDate int )org.joda.time.LocalDate"->"org.joda.time.LocalDate"[label="1"]
"(static)org.joda.time.LocalDate.withWeekyear(org.joda.time.LocalDate int )org.joda.time.LocalDate"->"org.joda.time.LocalDate"[label="1"]
"(static)org.joda.time.LocalDate.withYear(org.joda.time.LocalDate int )org.joda.time.LocalDate"->"org.joda.time.LocalDate"[label="1"]
"(static)org.joda.time.LocalDate.withYearOfCentury(org.joda.time.LocalDate int )org.joda.time.LocalDate"->"org.joda.time.LocalDate"[label="1"]
"(static)org.joda.time.LocalDate.withYearOfEra(org.joda.time.LocalDate int )org.joda.time.LocalDate"->"org.joda.time.LocalDate"[label="1"]
"(static)org.joda.time.LocalDate.year(org.joda.time.LocalDate )org.joda.time.LocalDate$Property"->"org.joda.time.LocalDate$Property"[label="1"]
"(static)org.joda.time.LocalDate.yearOfCentury(org.joda.time.LocalDate )org.joda.time.LocalDate$Property"->"org.joda.time.LocalDate$Property"[label="1"]
"(static)org.joda.time.LocalDate.yearOfEra(org.joda.time.LocalDate )org.joda.time.LocalDate$Property"->"org.joda.time.LocalDate$Property"[label="1"]
"(static)org.joda.time.LocalDateTime$Property.addToCopy(org.joda.time.LocalDateTime$Property int )org.joda.time.LocalDateTime"->"org.joda.time.LocalDateTime"[label="1"]
"(static)org.joda.time.LocalDateTime$Property.addToCopy(org.joda.time.LocalDateTime$Property long )org.joda.time.LocalDateTime"->"org.joda.time.LocalDateTime"[label="1"]
"(static)org.joda.time.LocalDateTime$Property.addWrapFieldToCopy(org.joda.time.LocalDateTime$Property int )org.joda.time.LocalDateTime"->"org.joda.time.LocalDateTime"[label="1"]
"(static)org.joda.time.LocalDateTime$Property.getField(org.joda.time.LocalDateTime$Property )org.joda.time.DateTimeField"->"org.joda.time.DateTimeField"[label="1"]
"(static)org.joda.time.LocalDateTime$Property.getLocalDateTime(org.joda.time.LocalDateTime$Property )org.joda.time.LocalDateTime"->"org.joda.time.LocalDateTime"[label="1"]
"(static)org.joda.time.LocalDateTime$Property.roundCeilingCopy(org.joda.time.LocalDateTime$Property )org.joda.time.LocalDateTime"->"org.joda.time.LocalDateTime"[label="1"]
"(static)org.joda.time.LocalDateTime$Property.roundFloorCopy(org.joda.time.LocalDateTime$Property )org.joda.time.LocalDateTime"->"org.joda.time.LocalDateTime"[label="1"]
"(static)org.joda.time.LocalDateTime$Property.roundHalfCeilingCopy(org.joda.time.LocalDateTime$Property )org.joda.time.LocalDateTime"->"org.joda.time.LocalDateTime"[label="1"]
"(static)org.joda.time.LocalDateTime$Property.roundHalfEvenCopy(org.joda.time.LocalDateTime$Property )org.joda.time.LocalDateTime"->"org.joda.time.LocalDateTime"[label="1"]
"(static)org.joda.time.LocalDateTime$Property.roundHalfFloorCopy(org.joda.time.LocalDateTime$Property )org.joda.time.LocalDateTime"->"org.joda.time.LocalDateTime"[label="1"]
"(static)org.joda.time.LocalDateTime$Property.setCopy(org.joda.time.LocalDateTime$Property int )org.joda.time.LocalDateTime"->"org.joda.time.LocalDateTime"[label="1"]
"(static)org.joda.time.LocalDateTime$Property.setCopy(org.joda.time.LocalDateTime$Property java.lang.String )org.joda.time.LocalDateTime"->"org.joda.time.LocalDateTime"[label="1"]
"(static)org.joda.time.LocalDateTime$Property.setCopy(org.joda.time.LocalDateTime$Property java.lang.String java.util.Locale )org.joda.time.LocalDateTime"->"org.joda.time.LocalDateTime"[label="1"]
"(static)org.joda.time.LocalDateTime$Property.withMaximumValue(org.joda.time.LocalDateTime$Property )org.joda.time.LocalDateTime"->"org.joda.time.LocalDateTime"[label="1"]
"(static)org.joda.time.LocalDateTime$Property.withMinimumValue(org.joda.time.LocalDateTime$Property )org.joda.time.LocalDateTime"->"org.joda.time.LocalDateTime"[label="1"]
"(static)org.joda.time.LocalDateTime.centuryOfEra(org.joda.time.LocalDateTime )org.joda.time.LocalDateTime$Property"->"org.joda.time.LocalDateTime$Property"[label="1"]
"(static)org.joda.time.LocalDateTime.dayOfMonth(org.joda.time.LocalDateTime )org.joda.time.LocalDateTime$Property"->"org.joda.time.LocalDateTime$Property"[label="1"]
"(static)org.joda.time.LocalDateTime.dayOfWeek(org.joda.time.LocalDateTime )org.joda.time.LocalDateTime$Property"->"org.joda.time.LocalDateTime$Property"[label="1"]
"(static)org.joda.time.LocalDateTime.dayOfYear(org.joda.time.LocalDateTime )org.joda.time.LocalDateTime$Property"->"org.joda.time.LocalDateTime$Property"[label="1"]
"(static)org.joda.time.LocalDateTime.equals(org.joda.time.LocalDateTime java.lang.Object )boolean"->"boolean"[label="1"]
"(static)org.joda.time.LocalDateTime.era(org.joda.time.LocalDateTime )org.joda.time.LocalDateTime$Property"->"org.joda.time.LocalDateTime$Property"[label="1"]
"(static)org.joda.time.LocalDateTime.get(org.joda.time.LocalDateTime org.joda.time.DateTimeFieldType )int"->"int"[label="1"]
"(static)org.joda.time.LocalDateTime.getCenturyOfEra(org.joda.time.LocalDateTime )int"->"int"[label="1"]
"(static)org.joda.time.LocalDateTime.getChronology(org.joda.time.LocalDateTime )org.joda.time.Chronology"->"org.joda.time.Chronology"[label="1"]
"(static)org.joda.time.LocalDateTime.getDayOfMonth(org.joda.time.LocalDateTime )int"->"int"[label="1"]
"(static)org.joda.time.LocalDateTime.getDayOfWeek(org.joda.time.LocalDateTime )int"->"int"[label="1"]
"(static)org.joda.time.LocalDateTime.getDayOfYear(org.joda.time.LocalDateTime )int"->"int"[label="1"]
"(static)org.joda.time.LocalDateTime.getEra(org.joda.time.LocalDateTime )int"->"int"[label="1"]
"(static)org.joda.time.LocalDateTime.getHourOfDay(org.joda.time.LocalDateTime )int"->"int"[label="1"]
"(static)org.joda.time.LocalDateTime.getMillisOfDay(org.joda.time.LocalDateTime )int"->"int"[label="1"]
"(static)org.joda.time.LocalDateTime.getMillisOfSecond(org.joda.time.LocalDateTime )int"->"int"[label="1"]
"(static)org.joda.time.LocalDateTime.getMinuteOfHour(org.joda.time.LocalDateTime )int"->"int"[label="1"]
"(static)org.joda.time.LocalDateTime.getMonthOfYear(org.joda.time.LocalDateTime )int"->"int"[label="1"]
"(static)org.joda.time.LocalDateTime.getSecondOfMinute(org.joda.time.LocalDateTime )int"->"int"[label="1"]
"(static)org.joda.time.LocalDateTime.getValue(org.joda.time.LocalDateTime int )int"->"int"[label="1"]
"(static)org.joda.time.LocalDateTime.getWeekOfWeekyear(org.joda.time.LocalDateTime )int"->"int"[label="1"]
"(static)org.joda.time.LocalDateTime.getWeekyear(org.joda.time.LocalDateTime )int"->"int"[label="1"]
"(static)org.joda.time.LocalDateTime.getYear(org.joda.time.LocalDateTime )int"->"int"[label="1"]
"(static)org.joda.time.LocalDateTime.getYearOfCentury(org.joda.time.LocalDateTime )int"->"int"[label="1"]
"(static)org.joda.time.LocalDateTime.getYearOfEra(org.joda.time.LocalDateTime )int"->"int"[label="1"]
"(static)org.joda.time.LocalDateTime.hourOfDay(org.joda.time.LocalDateTime )org.joda.time.LocalDateTime$Property"->"org.joda.time.LocalDateTime$Property"[label="1"]
"(static)org.joda.time.LocalDateTime.isSupported(org.joda.time.LocalDateTime org.joda.time.DateTimeFieldType )boolean"->"boolean"[label="1"]
"(static)org.joda.time.LocalDateTime.isSupported(org.joda.time.LocalDateTime org.joda.time.DurationFieldType )boolean"->"boolean"[label="1"]
"(static)org.joda.time.LocalDateTime.millisOfDay(org.joda.time.LocalDateTime )org.joda.time.LocalDateTime$Property"->"org.joda.time.LocalDateTime$Property"[label="1"]
"(static)org.joda.time.LocalDateTime.millisOfSecond(org.joda.time.LocalDateTime )org.joda.time.LocalDateTime$Property"->"org.joda.time.LocalDateTime$Property"[label="1"]
"(static)org.joda.time.LocalDateTime.minus(org.joda.time.LocalDateTime org.joda.time.ReadableDuration )org.joda.time.LocalDateTime"->"org.joda.time.LocalDateTime"[label="1"]
"(static)org.joda.time.LocalDateTime.minus(org.joda.time.LocalDateTime org.joda.time.ReadablePeriod )org.joda.time.LocalDateTime"->"org.joda.time.LocalDateTime"[label="1"]
"(static)org.joda.time.LocalDateTime.minusDays(org.joda.time.LocalDateTime int )org.joda.time.LocalDateTime"->"org.joda.time.LocalDateTime"[label="1"]
"(static)org.joda.time.LocalDateTime.minusHours(org.joda.time.LocalDateTime int )org.joda.time.LocalDateTime"->"org.joda.time.LocalDateTime"[label="1"]
"(static)org.joda.time.LocalDateTime.minusMillis(org.joda.time.LocalDateTime int )org.joda.time.LocalDateTime"->"org.joda.time.LocalDateTime"[label="1"]
"(static)org.joda.time.LocalDateTime.minusMinutes(org.joda.time.LocalDateTime int )org.joda.time.LocalDateTime"->"org.joda.time.LocalDateTime"[label="1"]
"(static)org.joda.time.LocalDateTime.minusMonths(org.joda.time.LocalDateTime int )org.joda.time.LocalDateTime"->"org.joda.time.LocalDateTime"[label="1"]
"(static)org.joda.time.LocalDateTime.minusSeconds(org.joda.time.LocalDateTime int )org.joda.time.LocalDateTime"->"org.joda.time.LocalDateTime"[label="1"]
"(static)org.joda.time.LocalDateTime.minusWeeks(org.joda.time.LocalDateTime int )org.joda.time.LocalDateTime"->"org.joda.time.LocalDateTime"[label="1"]
"(static)org.joda.time.LocalDateTime.minusYears(org.joda.time.LocalDateTime int )org.joda.time.LocalDateTime"->"org.joda.time.LocalDateTime"[label="1"]
"(static)org.joda.time.LocalDateTime.minuteOfHour(org.joda.time.LocalDateTime )org.joda.time.LocalDateTime$Property"->"org.joda.time.LocalDateTime$Property"[label="1"]
"(static)org.joda.time.LocalDateTime.monthOfYear(org.joda.time.LocalDateTime )org.joda.time.LocalDateTime$Property"->"org.joda.time.LocalDateTime$Property"[label="1"]
"(static)org.joda.time.LocalDateTime.plus(org.joda.time.LocalDateTime org.joda.time.ReadableDuration )org.joda.time.LocalDateTime"->"org.joda.time.LocalDateTime"[label="1"]
"(static)org.joda.time.LocalDateTime.plus(org.joda.time.LocalDateTime org.joda.time.ReadablePeriod )org.joda.time.LocalDateTime"->"org.joda.time.LocalDateTime"[label="1"]
"(static)org.joda.time.LocalDateTime.plusDays(org.joda.time.LocalDateTime int )org.joda.time.LocalDateTime"->"org.joda.time.LocalDateTime"[label="1"]
"(static)org.joda.time.LocalDateTime.plusHours(org.joda.time.LocalDateTime int )org.joda.time.LocalDateTime"->"org.joda.time.LocalDateTime"[label="1"]
"(static)org.joda.time.LocalDateTime.plusMillis(org.joda.time.LocalDateTime int )org.joda.time.LocalDateTime"->"org.joda.time.LocalDateTime"[label="1"]
"(static)org.joda.time.LocalDateTime.plusMinutes(org.joda.time.LocalDateTime int )org.joda.time.LocalDateTime"->"org.joda.time.LocalDateTime"[label="1"]
"(static)org.joda.time.LocalDateTime.plusMonths(org.joda.time.LocalDateTime int )org.joda.time.LocalDateTime"->"org.joda.time.LocalDateTime"[label="1"]
"(static)org.joda.time.LocalDateTime.plusSeconds(org.joda.time.LocalDateTime int )org.joda.time.LocalDateTime"->"org.joda.time.LocalDateTime"[label="1"]
"(static)org.joda.time.LocalDateTime.plusWeeks(org.joda.time.LocalDateTime int )org.joda.time.LocalDateTime"->"org.joda.time.LocalDateTime"[label="1"]
"(static)org.joda.time.LocalDateTime.plusYears(org.joda.time.LocalDateTime int )org.joda.time.LocalDateTime"->"org.joda.time.LocalDateTime"[label="1"]
"(static)org.joda.time.LocalDateTime.property(org.joda.time.LocalDateTime org.joda.time.DateTimeFieldType )org.joda.time.LocalDateTime$Property"->"org.joda.time.LocalDateTime$Property"[label="1"]
"(static)org.joda.time.LocalDateTime.secondOfMinute(org.joda.time.LocalDateTime )org.joda.time.LocalDateTime$Property"->"org.joda.time.LocalDateTime$Property"[label="1"]
"(static)org.joda.time.LocalDateTime.size(org.joda.time.LocalDateTime )int"->"int"[label="1"]
"(static)org.joda.time.LocalDateTime.toDate(org.joda.time.LocalDateTime )java.util.Date"->"java.util.Date"[label="1"]
"(static)org.joda.time.LocalDateTime.toDate(org.joda.time.LocalDateTime java.util.TimeZone )java.util.Date"->"java.util.Date"[label="1"]
"(static)org.joda.time.LocalDateTime.toDateTime(org.joda.time.LocalDateTime )org.joda.time.DateTime"->"org.joda.time.DateTime"[label="1"]
"(static)org.joda.time.LocalDateTime.toDateTime(org.joda.time.LocalDateTime org.joda.time.DateTimeZone )org.joda.time.DateTime"->"org.joda.time.DateTime"[label="1"]
"(static)org.joda.time.LocalDateTime.toLocalDate(org.joda.time.LocalDateTime )org.joda.time.LocalDate"->"org.joda.time.LocalDate"[label="1"]
"(static)org.joda.time.LocalDateTime.toLocalTime(org.joda.time.LocalDateTime )org.joda.time.LocalTime"->"org.joda.time.LocalTime"[label="1"]
"(static)org.joda.time.LocalDateTime.weekOfWeekyear(org.joda.time.LocalDateTime )org.joda.time.LocalDateTime$Property"->"org.joda.time.LocalDateTime$Property"[label="1"]
"(static)org.joda.time.LocalDateTime.weekyear(org.joda.time.LocalDateTime )org.joda.time.LocalDateTime$Property"->"org.joda.time.LocalDateTime$Property"[label="1"]
"(static)org.joda.time.LocalDateTime.withCenturyOfEra(org.joda.time.LocalDateTime int )org.joda.time.LocalDateTime"->"org.joda.time.LocalDateTime"[label="1"]
"(static)org.joda.time.LocalDateTime.withDayOfMonth(org.joda.time.LocalDateTime int )org.joda.time.LocalDateTime"->"org.joda.time.LocalDateTime"[label="1"]
"(static)org.joda.time.LocalDateTime.withDayOfWeek(org.joda.time.LocalDateTime int )org.joda.time.LocalDateTime"->"org.joda.time.LocalDateTime"[label="1"]
"(static)org.joda.time.LocalDateTime.withDayOfYear(org.joda.time.LocalDateTime int )org.joda.time.LocalDateTime"->"org.joda.time.LocalDateTime"[label="1"]
"(static)org.joda.time.LocalDateTime.withDurationAdded(org.joda.time.LocalDateTime org.joda.time.ReadableDuration int )org.joda.time.LocalDateTime"->"org.joda.time.LocalDateTime"[label="1"]
"(static)org.joda.time.LocalDateTime.withEra(org.joda.time.LocalDateTime int )org.joda.time.LocalDateTime"->"org.joda.time.LocalDateTime"[label="1"]
"(static)org.joda.time.LocalDateTime.withField(org.joda.time.LocalDateTime org.joda.time.DateTimeFieldType int )org.joda.time.LocalDateTime"->"org.joda.time.LocalDateTime"[label="1"]
"(static)org.joda.time.LocalDateTime.withFieldAdded(org.joda.time.LocalDateTime org.joda.time.DurationFieldType int )org.joda.time.LocalDateTime"->"org.joda.time.LocalDateTime"[label="1"]
"(static)org.joda.time.LocalDateTime.withFields(org.joda.time.LocalDateTime org.joda.time.ReadablePartial )org.joda.time.LocalDateTime"->"org.joda.time.LocalDateTime"[label="1"]
"(static)org.joda.time.LocalDateTime.withHourOfDay(org.joda.time.LocalDateTime int )org.joda.time.LocalDateTime"->"org.joda.time.LocalDateTime"[label="1"]
"(static)org.joda.time.LocalDateTime.withMillisOfDay(org.joda.time.LocalDateTime int )org.joda.time.LocalDateTime"->"org.joda.time.LocalDateTime"[label="1"]
"(static)org.joda.time.LocalDateTime.withMillisOfSecond(org.joda.time.LocalDateTime int )org.joda.time.LocalDateTime"->"org.joda.time.LocalDateTime"[label="1"]
"(static)org.joda.time.LocalDateTime.withMinuteOfHour(org.joda.time.LocalDateTime int )org.joda.time.LocalDateTime"->"org.joda.time.LocalDateTime"[label="1"]
"(static)org.joda.time.LocalDateTime.withMonthOfYear(org.joda.time.LocalDateTime int )org.joda.time.LocalDateTime"->"org.joda.time.LocalDateTime"[label="1"]
"(static)org.joda.time.LocalDateTime.withPeriodAdded(org.joda.time.LocalDateTime org.joda.time.ReadablePeriod int )org.joda.time.LocalDateTime"->"org.joda.time.LocalDateTime"[label="1"]
"(static)org.joda.time.LocalDateTime.withSecondOfMinute(org.joda.time.LocalDateTime int )org.joda.time.LocalDateTime"->"org.joda.time.LocalDateTime"[label="1"]
"(static)org.joda.time.LocalDateTime.withWeekOfWeekyear(org.joda.time.LocalDateTime int )org.joda.time.LocalDateTime"->"org.joda.time.LocalDateTime"[label="1"]
"(static)org.joda.time.LocalDateTime.withWeekyear(org.joda.time.LocalDateTime int )org.joda.time.LocalDateTime"->"org.joda.time.LocalDateTime"[label="1"]
"(static)org.joda.time.LocalDateTime.withYear(org.joda.time.LocalDateTime int )org.joda.time.LocalDateTime"->"org.joda.time.LocalDateTime"[label="1"]
"(static)org.joda.time.LocalDateTime.withYearOfCentury(org.joda.time.LocalDateTime int )org.joda.time.LocalDateTime"->"org.joda.time.LocalDateTime"[label="1"]
"(static)org.joda.time.LocalDateTime.withYearOfEra(org.joda.time.LocalDateTime int )org.joda.time.LocalDateTime"->"org.joda.time.LocalDateTime"[label="1"]
"(static)org.joda.time.LocalDateTime.year(org.joda.time.LocalDateTime )org.joda.time.LocalDateTime$Property"->"org.joda.time.LocalDateTime$Property"[label="1"]
"(static)org.joda.time.LocalDateTime.yearOfCentury(org.joda.time.LocalDateTime )org.joda.time.LocalDateTime$Property"->"org.joda.time.LocalDateTime$Property"[label="1"]
"(static)org.joda.time.LocalDateTime.yearOfEra(org.joda.time.LocalDateTime )org.joda.time.LocalDateTime$Property"->"org.joda.time.LocalDateTime$Property"[label="1"]
"(static)org.joda.time.LocalTime$Property.addCopy(org.joda.time.LocalTime$Property int )org.joda.time.LocalTime"->"org.joda.time.LocalTime"[label="1"]
"(static)org.joda.time.LocalTime$Property.addCopy(org.joda.time.LocalTime$Property long )org.joda.time.LocalTime"->"org.joda.time.LocalTime"[label="1"]
"(static)org.joda.time.LocalTime$Property.addNoWrapToCopy(org.joda.time.LocalTime$Property int )org.joda.time.LocalTime"->"org.joda.time.LocalTime"[label="1"]
"(static)org.joda.time.LocalTime$Property.addWrapFieldToCopy(org.joda.time.LocalTime$Property int )org.joda.time.LocalTime"->"org.joda.time.LocalTime"[label="1"]
"(static)org.joda.time.LocalTime$Property.getField(org.joda.time.LocalTime$Property )org.joda.time.DateTimeField"->"org.joda.time.DateTimeField"[label="1"]
"(static)org.joda.time.LocalTime$Property.getLocalTime(org.joda.time.LocalTime$Property )org.joda.time.LocalTime"->"org.joda.time.LocalTime"[label="1"]
"(static)org.joda.time.LocalTime$Property.roundCeilingCopy(org.joda.time.LocalTime$Property )org.joda.time.LocalTime"->"org.joda.time.LocalTime"[label="1"]
"(static)org.joda.time.LocalTime$Property.roundFloorCopy(org.joda.time.LocalTime$Property )org.joda.time.LocalTime"->"org.joda.time.LocalTime"[label="1"]
"(static)org.joda.time.LocalTime$Property.roundHalfCeilingCopy(org.joda.time.LocalTime$Property )org.joda.time.LocalTime"->"org.joda.time.LocalTime"[label="1"]
"(static)org.joda.time.LocalTime$Property.roundHalfEvenCopy(org.joda.time.LocalTime$Property )org.joda.time.LocalTime"->"org.joda.time.LocalTime"[label="1"]
"(static)org.joda.time.LocalTime$Property.roundHalfFloorCopy(org.joda.time.LocalTime$Property )org.joda.time.LocalTime"->"org.joda.time.LocalTime"[label="1"]
"(static)org.joda.time.LocalTime$Property.setCopy(org.joda.time.LocalTime$Property int )org.joda.time.LocalTime"->"org.joda.time.LocalTime"[label="1"]
"(static)org.joda.time.LocalTime$Property.setCopy(org.joda.time.LocalTime$Property java.lang.String )org.joda.time.LocalTime"->"org.joda.time.LocalTime"[label="1"]
"(static)org.joda.time.LocalTime$Property.setCopy(org.joda.time.LocalTime$Property java.lang.String java.util.Locale )org.joda.time.LocalTime"->"org.joda.time.LocalTime"[label="1"]
"(static)org.joda.time.LocalTime$Property.withMaximumValue(org.joda.time.LocalTime$Property )org.joda.time.LocalTime"->"org.joda.time.LocalTime"[label="1"]
"(static)org.joda.time.LocalTime$Property.withMinimumValue(org.joda.time.LocalTime$Property )org.joda.time.LocalTime"->"org.joda.time.LocalTime"[label="1"]
"(static)org.joda.time.LocalTime.equals(org.joda.time.LocalTime java.lang.Object )boolean"->"boolean"[label="1"]
"(static)org.joda.time.LocalTime.get(org.joda.time.LocalTime org.joda.time.DateTimeFieldType )int"->"int"[label="1"]
"(static)org.joda.time.LocalTime.getChronology(org.joda.time.LocalTime )org.joda.time.Chronology"->"org.joda.time.Chronology"[label="1"]
"(static)org.joda.time.LocalTime.getHourOfDay(org.joda.time.LocalTime )int"->"int"[label="1"]
"(static)org.joda.time.LocalTime.getMillisOfDay(org.joda.time.LocalTime )int"->"int"[label="1"]
"(static)org.joda.time.LocalTime.getMillisOfSecond(org.joda.time.LocalTime )int"->"int"[label="1"]
"(static)org.joda.time.LocalTime.getMinuteOfHour(org.joda.time.LocalTime )int"->"int"[label="1"]
"(static)org.joda.time.LocalTime.getSecondOfMinute(org.joda.time.LocalTime )int"->"int"[label="1"]
"(static)org.joda.time.LocalTime.getValue(org.joda.time.LocalTime int )int"->"int"[label="1"]
"(static)org.joda.time.LocalTime.hourOfDay(org.joda.time.LocalTime )org.joda.time.LocalTime$Property"->"org.joda.time.LocalTime$Property"[label="1"]
"(static)org.joda.time.LocalTime.isSupported(org.joda.time.LocalTime org.joda.time.DateTimeFieldType )boolean"->"boolean"[label="1"]
"(static)org.joda.time.LocalTime.isSupported(org.joda.time.LocalTime org.joda.time.DurationFieldType )boolean"->"boolean"[label="1"]
"(static)org.joda.time.LocalTime.millisOfDay(org.joda.time.LocalTime )org.joda.time.LocalTime$Property"->"org.joda.time.LocalTime$Property"[label="1"]
"(static)org.joda.time.LocalTime.millisOfSecond(org.joda.time.LocalTime )org.joda.time.LocalTime$Property"->"org.joda.time.LocalTime$Property"[label="1"]
"(static)org.joda.time.LocalTime.minus(org.joda.time.LocalTime org.joda.time.ReadablePeriod )org.joda.time.LocalTime"->"org.joda.time.LocalTime"[label="1"]
"(static)org.joda.time.LocalTime.minusHours(org.joda.time.LocalTime int )org.joda.time.LocalTime"->"org.joda.time.LocalTime"[label="1"]
"(static)org.joda.time.LocalTime.minusMillis(org.joda.time.LocalTime int )org.joda.time.LocalTime"->"org.joda.time.LocalTime"[label="1"]
"(static)org.joda.time.LocalTime.minusMinutes(org.joda.time.LocalTime int )org.joda.time.LocalTime"->"org.joda.time.LocalTime"[label="1"]
"(static)org.joda.time.LocalTime.minusSeconds(org.joda.time.LocalTime int )org.joda.time.LocalTime"->"org.joda.time.LocalTime"[label="1"]
"(static)org.joda.time.LocalTime.minuteOfHour(org.joda.time.LocalTime )org.joda.time.LocalTime$Property"->"org.joda.time.LocalTime$Property"[label="1"]
"(static)org.joda.time.LocalTime.plus(org.joda.time.LocalTime org.joda.time.ReadablePeriod )org.joda.time.LocalTime"->"org.joda.time.LocalTime"[label="1"]
"(static)org.joda.time.LocalTime.plusHours(org.joda.time.LocalTime int )org.joda.time.LocalTime"->"org.joda.time.LocalTime"[label="1"]
"(static)org.joda.time.LocalTime.plusMillis(org.joda.time.LocalTime int )org.joda.time.LocalTime"->"org.joda.time.LocalTime"[label="1"]
"(static)org.joda.time.LocalTime.plusMinutes(org.joda.time.LocalTime int )org.joda.time.LocalTime"->"org.joda.time.LocalTime"[label="1"]
"(static)org.joda.time.LocalTime.plusSeconds(org.joda.time.LocalTime int )org.joda.time.LocalTime"->"org.joda.time.LocalTime"[label="1"]
"(static)org.joda.time.LocalTime.property(org.joda.time.LocalTime org.joda.time.DateTimeFieldType )org.joda.time.LocalTime$Property"->"org.joda.time.LocalTime$Property"[label="1"]
"(static)org.joda.time.LocalTime.secondOfMinute(org.joda.time.LocalTime )org.joda.time.LocalTime$Property"->"org.joda.time.LocalTime$Property"[label="1"]
"(static)org.joda.time.LocalTime.size(org.joda.time.LocalTime )int"->"int"[label="1"]
"(static)org.joda.time.LocalTime.toDateTimeToday(org.joda.time.LocalTime )org.joda.time.DateTime"->"org.joda.time.DateTime"[label="1"]
"(static)org.joda.time.LocalTime.toDateTimeToday(org.joda.time.LocalTime org.joda.time.DateTimeZone )org.joda.time.DateTime"->"org.joda.time.DateTime"[label="1"]
"(static)org.joda.time.LocalTime.withField(org.joda.time.LocalTime org.joda.time.DateTimeFieldType int )org.joda.time.LocalTime"->"org.joda.time.LocalTime"[label="1"]
"(static)org.joda.time.LocalTime.withFieldAdded(org.joda.time.LocalTime org.joda.time.DurationFieldType int )org.joda.time.LocalTime"->"org.joda.time.LocalTime"[label="1"]
"(static)org.joda.time.LocalTime.withFields(org.joda.time.LocalTime org.joda.time.ReadablePartial )org.joda.time.LocalTime"->"org.joda.time.LocalTime"[label="1"]
"(static)org.joda.time.LocalTime.withHourOfDay(org.joda.time.LocalTime int )org.joda.time.LocalTime"->"org.joda.time.LocalTime"[label="1"]
"(static)org.joda.time.LocalTime.withMillisOfDay(org.joda.time.LocalTime int )org.joda.time.LocalTime"->"org.joda.time.LocalTime"[label="1"]
"(static)org.joda.time.LocalTime.withMillisOfSecond(org.joda.time.LocalTime int )org.joda.time.LocalTime"->"org.joda.time.LocalTime"[label="1"]
"(static)org.joda.time.LocalTime.withMinuteOfHour(org.joda.time.LocalTime int )org.joda.time.LocalTime"->"org.joda.time.LocalTime"[label="1"]
"(static)org.joda.time.LocalTime.withPeriodAdded(org.joda.time.LocalTime org.joda.time.ReadablePeriod int )org.joda.time.LocalTime"->"org.joda.time.LocalTime"[label="1"]
"(static)org.joda.time.LocalTime.withSecondOfMinute(org.joda.time.LocalTime int )org.joda.time.LocalTime"->"org.joda.time.LocalTime"[label="1"]
"(static)org.joda.time.Minutes.dividedBy(org.joda.time.Minutes int )org.joda.time.Minutes"->"org.joda.time.Minutes"[label="1"]
"(static)org.joda.time.Minutes.getFieldType(org.joda.time.Minutes )org.joda.time.DurationFieldType"->"org.joda.time.DurationFieldType"[label="1"]
"(static)org.joda.time.Minutes.getMinutes(org.joda.time.Minutes )int"->"int"[label="1"]
"(static)org.joda.time.Minutes.getPeriodType(org.joda.time.Minutes )org.joda.time.PeriodType"->"org.joda.time.PeriodType"[label="1"]
"(static)org.joda.time.Minutes.isGreaterThan(org.joda.time.Minutes org.joda.time.Minutes )boolean"->"boolean"[label="1"]
"(static)org.joda.time.Minutes.isLessThan(org.joda.time.Minutes org.joda.time.Minutes )boolean"->"boolean"[label="1"]
"(static)org.joda.time.Minutes.minus(org.joda.time.Minutes int )org.joda.time.Minutes"->"org.joda.time.Minutes"[label="1"]
"(static)org.joda.time.Minutes.minus(org.joda.time.Minutes org.joda.time.Minutes )org.joda.time.Minutes"->"org.joda.time.Minutes"[label="1"]
"(static)org.joda.time.Minutes.multipliedBy(org.joda.time.Minutes int )org.joda.time.Minutes"->"org.joda.time.Minutes"[label="1"]
"(static)org.joda.time.Minutes.negated(org.joda.time.Minutes )org.joda.time.Minutes"->"org.joda.time.Minutes"[label="1"]
"(static)org.joda.time.Minutes.plus(org.joda.time.Minutes int )org.joda.time.Minutes"->"org.joda.time.Minutes"[label="1"]
"(static)org.joda.time.Minutes.plus(org.joda.time.Minutes org.joda.time.Minutes )org.joda.time.Minutes"->"org.joda.time.Minutes"[label="1"]
"(static)org.joda.time.Minutes.toStandardDays(org.joda.time.Minutes )org.joda.time.Days"->"org.joda.time.Days"[label="1"]
"(static)org.joda.time.Minutes.toStandardDuration(org.joda.time.Minutes )org.joda.time.Duration"->"org.joda.time.Duration"[label="1"]
"(static)org.joda.time.Minutes.toStandardHours(org.joda.time.Minutes )org.joda.time.Hours"->"org.joda.time.Hours"[label="1"]
"(static)org.joda.time.Minutes.toStandardSeconds(org.joda.time.Minutes )org.joda.time.Seconds"->"org.joda.time.Seconds"[label="1"]
"(static)org.joda.time.Minutes.toStandardWeeks(org.joda.time.Minutes )org.joda.time.Weeks"->"org.joda.time.Weeks"[label="1"]
"(static)org.joda.time.MonthDay$Property.addToCopy(org.joda.time.MonthDay$Property int )org.joda.time.MonthDay"->"org.joda.time.MonthDay"[label="1"]
"(static)org.joda.time.MonthDay$Property.addWrapFieldToCopy(org.joda.time.MonthDay$Property int )org.joda.time.MonthDay"->"org.joda.time.MonthDay"[label="1"]
"(static)org.joda.time.MonthDay$Property.get(org.joda.time.MonthDay$Property )int"->"int"[label="1"]
"(static)org.joda.time.MonthDay$Property.getField(org.joda.time.MonthDay$Property )org.joda.time.DateTimeField"->"org.joda.time.DateTimeField"[label="1"]
"(static)org.joda.time.MonthDay$Property.getMonthDay(org.joda.time.MonthDay$Property )org.joda.time.MonthDay"->"org.joda.time.MonthDay"[label="1"]
"(static)org.joda.time.MonthDay$Property.setCopy(org.joda.time.MonthDay$Property int )org.joda.time.MonthDay"->"org.joda.time.MonthDay"[label="1"]
"(static)org.joda.time.MonthDay$Property.setCopy(org.joda.time.MonthDay$Property java.lang.String )org.joda.time.MonthDay"->"org.joda.time.MonthDay"[label="1"]
"(static)org.joda.time.MonthDay$Property.setCopy(org.joda.time.MonthDay$Property java.lang.String java.util.Locale )org.joda.time.MonthDay"->"org.joda.time.MonthDay"[label="1"]
"(static)org.joda.time.MonthDay.dayOfMonth(org.joda.time.MonthDay )org.joda.time.MonthDay$Property"->"org.joda.time.MonthDay$Property"[label="1"]
"(static)org.joda.time.MonthDay.getDayOfMonth(org.joda.time.MonthDay )int"->"int"[label="1"]
"(static)org.joda.time.MonthDay.getFieldType(org.joda.time.MonthDay int )org.joda.time.DateTimeFieldType"->"org.joda.time.DateTimeFieldType"[label="1"]
"(static)org.joda.time.MonthDay.getFieldTypes(org.joda.time.MonthDay )org.joda.time.DateTimeFieldType[]"->"org.joda.time.DateTimeFieldType[]"[label="1"]
"(static)org.joda.time.MonthDay.getMonthOfYear(org.joda.time.MonthDay )int"->"int"[label="1"]
"(static)org.joda.time.MonthDay.minus(org.joda.time.MonthDay org.joda.time.ReadablePeriod )org.joda.time.MonthDay"->"org.joda.time.MonthDay"[label="1"]
"(static)org.joda.time.MonthDay.minusDays(org.joda.time.MonthDay int )org.joda.time.MonthDay"->"org.joda.time.MonthDay"[label="1"]
"(static)org.joda.time.MonthDay.minusMonths(org.joda.time.MonthDay int )org.joda.time.MonthDay"->"org.joda.time.MonthDay"[label="1"]
"(static)org.joda.time.MonthDay.monthOfYear(org.joda.time.MonthDay )org.joda.time.MonthDay$Property"->"org.joda.time.MonthDay$Property"[label="1"]
"(static)org.joda.time.MonthDay.plus(org.joda.time.MonthDay org.joda.time.ReadablePeriod )org.joda.time.MonthDay"->"org.joda.time.MonthDay"[label="1"]
"(static)org.joda.time.MonthDay.plusDays(org.joda.time.MonthDay int )org.joda.time.MonthDay"->"org.joda.time.MonthDay"[label="1"]
"(static)org.joda.time.MonthDay.plusMonths(org.joda.time.MonthDay int )org.joda.time.MonthDay"->"org.joda.time.MonthDay"[label="1"]
"(static)org.joda.time.MonthDay.property(org.joda.time.MonthDay org.joda.time.DateTimeFieldType )org.joda.time.MonthDay$Property"->"org.joda.time.MonthDay$Property"[label="1"]
"(static)org.joda.time.MonthDay.size(org.joda.time.MonthDay )int"->"int"[label="1"]
"(static)org.joda.time.MonthDay.toLocalDate(org.joda.time.MonthDay int )org.joda.time.LocalDate"->"org.joda.time.LocalDate"[label="1"]
"(static)org.joda.time.MonthDay.withChronologyRetainFields(org.joda.time.MonthDay org.joda.time.Chronology )org.joda.time.MonthDay"->"org.joda.time.MonthDay"[label="1"]
"(static)org.joda.time.MonthDay.withDayOfMonth(org.joda.time.MonthDay int )org.joda.time.MonthDay"->"org.joda.time.MonthDay"[label="1"]
"(static)org.joda.time.MonthDay.withField(org.joda.time.MonthDay org.joda.time.DateTimeFieldType int )org.joda.time.MonthDay"->"org.joda.time.MonthDay"[label="1"]
"(static)org.joda.time.MonthDay.withFieldAdded(org.joda.time.MonthDay org.joda.time.DurationFieldType int )org.joda.time.MonthDay"->"org.joda.time.MonthDay"[label="1"]
"(static)org.joda.time.MonthDay.withMonthOfYear(org.joda.time.MonthDay int )org.joda.time.MonthDay"->"org.joda.time.MonthDay"[label="1"]
"(static)org.joda.time.MonthDay.withPeriodAdded(org.joda.time.MonthDay org.joda.time.ReadablePeriod int )org.joda.time.MonthDay"->"org.joda.time.MonthDay"[label="1"]
"(static)org.joda.time.Months.dividedBy(org.joda.time.Months int )org.joda.time.Months"->"org.joda.time.Months"[label="1"]
"(static)org.joda.time.Months.getFieldType(org.joda.time.Months )org.joda.time.DurationFieldType"->"org.joda.time.DurationFieldType"[label="1"]
"(static)org.joda.time.Months.getMonths(org.joda.time.Months )int"->"int"[label="1"]
"(static)org.joda.time.Months.getPeriodType(org.joda.time.Months )org.joda.time.PeriodType"->"org.joda.time.PeriodType"[label="1"]
"(static)org.joda.time.Months.isGreaterThan(org.joda.time.Months org.joda.time.Months )boolean"->"boolean"[label="1"]
"(static)org.joda.time.Months.isLessThan(org.joda.time.Months org.joda.time.Months )boolean"->"boolean"[label="1"]
"(static)org.joda.time.Months.minus(org.joda.time.Months int )org.joda.time.Months"->"org.joda.time.Months"[label="1"]
"(static)org.joda.time.Months.minus(org.joda.time.Months org.joda.time.Months )org.joda.time.Months"->"org.joda.time.Months"[label="1"]
"(static)org.joda.time.Months.multipliedBy(org.joda.time.Months int )org.joda.time.Months"->"org.joda.time.Months"[label="1"]
"(static)org.joda.time.Months.negated(org.joda.time.Months )org.joda.time.Months"->"org.joda.time.Months"[label="1"]
"(static)org.joda.time.Months.plus(org.joda.time.Months int )org.joda.time.Months"->"org.joda.time.Months"[label="1"]
"(static)org.joda.time.Months.plus(org.joda.time.Months org.joda.time.Months )org.joda.time.Months"->"org.joda.time.Months"[label="1"]
"(static)org.joda.time.MutableDateTime$Property.addWrapField(org.joda.time.MutableDateTime$Property int )org.joda.time.MutableDateTime"->"org.joda.time.MutableDateTime"[label="1"]
"(static)org.joda.time.MutableDateTime$Property.getField(org.joda.time.MutableDateTime$Property )org.joda.time.DateTimeField"->"org.joda.time.DateTimeField"[label="1"]
"(static)org.joda.time.MutableDateTime$Property.getMutableDateTime(org.joda.time.MutableDateTime$Property )org.joda.time.MutableDateTime"->"org.joda.time.MutableDateTime"[label="1"]
"(static)org.joda.time.MutableDateTime$Property.roundCeiling(org.joda.time.MutableDateTime$Property )org.joda.time.MutableDateTime"->"org.joda.time.MutableDateTime"[label="1"]
"(static)org.joda.time.MutableDateTime$Property.roundFloor(org.joda.time.MutableDateTime$Property )org.joda.time.MutableDateTime"->"org.joda.time.MutableDateTime"[label="1"]
"(static)org.joda.time.MutableDateTime$Property.roundHalfCeiling(org.joda.time.MutableDateTime$Property )org.joda.time.MutableDateTime"->"org.joda.time.MutableDateTime"[label="1"]
"(static)org.joda.time.MutableDateTime$Property.roundHalfEven(org.joda.time.MutableDateTime$Property )org.joda.time.MutableDateTime"->"org.joda.time.MutableDateTime"[label="1"]
"(static)org.joda.time.MutableDateTime$Property.roundHalfFloor(org.joda.time.MutableDateTime$Property )org.joda.time.MutableDateTime"->"org.joda.time.MutableDateTime"[label="1"]
"(static)org.joda.time.MutableDateTime$Property.set(org.joda.time.MutableDateTime$Property int )org.joda.time.MutableDateTime"->"org.joda.time.MutableDateTime"[label="1"]
"(static)org.joda.time.MutableDateTime$Property.set(org.joda.time.MutableDateTime$Property java.lang.String )org.joda.time.MutableDateTime"->"org.joda.time.MutableDateTime"[label="1"]
"(static)org.joda.time.MutableDateTime$Property.set(org.joda.time.MutableDateTime$Property java.lang.String java.util.Locale )org.joda.time.MutableDateTime"->"org.joda.time.MutableDateTime"[label="1"]
"(static)org.joda.time.MutableDateTime.centuryOfEra(org.joda.time.MutableDateTime )org.joda.time.MutableDateTime$Property"->"org.joda.time.MutableDateTime$Property"[label="1"]
"(static)org.joda.time.MutableDateTime.clone(org.joda.time.MutableDateTime )java.lang.Object"->"java.lang.Object"[label="1"]
"(static)org.joda.time.MutableDateTime.copy(org.joda.time.MutableDateTime )org.joda.time.MutableDateTime"->"org.joda.time.MutableDateTime"[label="1"]
"(static)org.joda.time.MutableDateTime.dayOfMonth(org.joda.time.MutableDateTime )org.joda.time.MutableDateTime$Property"->"org.joda.time.MutableDateTime$Property"[label="1"]
"(static)org.joda.time.MutableDateTime.dayOfWeek(org.joda.time.MutableDateTime )org.joda.time.MutableDateTime$Property"->"org.joda.time.MutableDateTime$Property"[label="1"]
"(static)org.joda.time.MutableDateTime.dayOfYear(org.joda.time.MutableDateTime )org.joda.time.MutableDateTime$Property"->"org.joda.time.MutableDateTime$Property"[label="1"]
"(static)org.joda.time.MutableDateTime.era(org.joda.time.MutableDateTime )org.joda.time.MutableDateTime$Property"->"org.joda.time.MutableDateTime$Property"[label="1"]
"(static)org.joda.time.MutableDateTime.getRoundingField(org.joda.time.MutableDateTime )org.joda.time.DateTimeField"->"org.joda.time.DateTimeField"[label="1"]
"(static)org.joda.time.MutableDateTime.getRoundingMode(org.joda.time.MutableDateTime )int"->"int"[label="1"]
"(static)org.joda.time.MutableDateTime.hourOfDay(org.joda.time.MutableDateTime )org.joda.time.MutableDateTime$Property"->"org.joda.time.MutableDateTime$Property"[label="1"]
"(static)org.joda.time.MutableDateTime.millisOfDay(org.joda.time.MutableDateTime )org.joda.time.MutableDateTime$Property"->"org.joda.time.MutableDateTime$Property"[label="1"]
"(static)org.joda.time.MutableDateTime.millisOfSecond(org.joda.time.MutableDateTime )org.joda.time.MutableDateTime$Property"->"org.joda.time.MutableDateTime$Property"[label="1"]
"(static)org.joda.time.MutableDateTime.minuteOfDay(org.joda.time.MutableDateTime )org.joda.time.MutableDateTime$Property"->"org.joda.time.MutableDateTime$Property"[label="1"]
"(static)org.joda.time.MutableDateTime.minuteOfHour(org.joda.time.MutableDateTime )org.joda.time.MutableDateTime$Property"->"org.joda.time.MutableDateTime$Property"[label="1"]
"(static)org.joda.time.MutableDateTime.monthOfYear(org.joda.time.MutableDateTime )org.joda.time.MutableDateTime$Property"->"org.joda.time.MutableDateTime$Property"[label="1"]
"(static)org.joda.time.MutableDateTime.property(org.joda.time.MutableDateTime org.joda.time.DateTimeFieldType )org.joda.time.MutableDateTime$Property"->"org.joda.time.MutableDateTime$Property"[label="1"]
"(static)org.joda.time.MutableDateTime.secondOfDay(org.joda.time.MutableDateTime )org.joda.time.MutableDateTime$Property"->"org.joda.time.MutableDateTime$Property"[label="1"]
"(static)org.joda.time.MutableDateTime.secondOfMinute(org.joda.time.MutableDateTime )org.joda.time.MutableDateTime$Property"->"org.joda.time.MutableDateTime$Property"[label="1"]
"(static)org.joda.time.MutableDateTime.weekOfWeekyear(org.joda.time.MutableDateTime )org.joda.time.MutableDateTime$Property"->"org.joda.time.MutableDateTime$Property"[label="1"]
"(static)org.joda.time.MutableDateTime.weekyear(org.joda.time.MutableDateTime )org.joda.time.MutableDateTime$Property"->"org.joda.time.MutableDateTime$Property"[label="1"]
"(static)org.joda.time.MutableDateTime.year(org.joda.time.MutableDateTime )org.joda.time.MutableDateTime$Property"->"org.joda.time.MutableDateTime$Property"[label="1"]
"(static)org.joda.time.MutableDateTime.yearOfCentury(org.joda.time.MutableDateTime )org.joda.time.MutableDateTime$Property"->"org.joda.time.MutableDateTime$Property"[label="1"]
"(static)org.joda.time.MutableDateTime.yearOfEra(org.joda.time.MutableDateTime )org.joda.time.MutableDateTime$Property"->"org.joda.time.MutableDateTime$Property"[label="1"]
"(static)org.joda.time.MutableInterval.clone(org.joda.time.MutableInterval )java.lang.Object"->"java.lang.Object"[label="1"]
"(static)org.joda.time.MutableInterval.copy(org.joda.time.MutableInterval )org.joda.time.MutableInterval"->"org.joda.time.MutableInterval"[label="1"]
"(static)org.joda.time.MutablePeriod.clone(org.joda.time.MutablePeriod )java.lang.Object"->"java.lang.Object"[label="1"]
"(static)org.joda.time.MutablePeriod.copy(org.joda.time.MutablePeriod )org.joda.time.MutablePeriod"->"org.joda.time.MutablePeriod"[label="1"]
"(static)org.joda.time.MutablePeriod.getDays(org.joda.time.MutablePeriod )int"->"int"[label="1"]
"(static)org.joda.time.MutablePeriod.getHours(org.joda.time.MutablePeriod )int"->"int"[label="1"]
"(static)org.joda.time.MutablePeriod.getMillis(org.joda.time.MutablePeriod )int"->"int"[label="1"]
"(static)org.joda.time.MutablePeriod.getMinutes(org.joda.time.MutablePeriod )int"->"int"[label="1"]
"(static)org.joda.time.MutablePeriod.getMonths(org.joda.time.MutablePeriod )int"->"int"[label="1"]
"(static)org.joda.time.MutablePeriod.getSeconds(org.joda.time.MutablePeriod )int"->"int"[label="1"]
"(static)org.joda.time.MutablePeriod.getWeeks(org.joda.time.MutablePeriod )int"->"int"[label="1"]
"(static)org.joda.time.MutablePeriod.getYears(org.joda.time.MutablePeriod )int"->"int"[label="1"]
"(static)org.joda.time.Partial$Property.addToCopy(org.joda.time.Partial$Property int )org.joda.time.Partial"->"org.joda.time.Partial"[label="1"]
"(static)org.joda.time.Partial$Property.addWrapFieldToCopy(org.joda.time.Partial$Property int )org.joda.time.Partial"->"org.joda.time.Partial"[label="1"]
"(static)org.joda.time.Partial$Property.get(org.joda.time.Partial$Property )int"->"int"[label="1"]
"(static)org.joda.time.Partial$Property.getField(org.joda.time.Partial$Property )org.joda.time.DateTimeField"->"org.joda.time.DateTimeField"[label="1"]
"(static)org.joda.time.Partial$Property.getPartial(org.joda.time.Partial$Property )org.joda.time.Partial"->"org.joda.time.Partial"[label="1"]
"(static)org.joda.time.Partial$Property.setCopy(org.joda.time.Partial$Property int )org.joda.time.Partial"->"org.joda.time.Partial"[label="1"]
"(static)org.joda.time.Partial$Property.setCopy(org.joda.time.Partial$Property java.lang.String )org.joda.time.Partial"->"org.joda.time.Partial"[label="1"]
"(static)org.joda.time.Partial$Property.setCopy(org.joda.time.Partial$Property java.lang.String java.util.Locale )org.joda.time.Partial"->"org.joda.time.Partial"[label="1"]
"(static)org.joda.time.Partial$Property.withMaximumValue(org.joda.time.Partial$Property )org.joda.time.Partial"->"org.joda.time.Partial"[label="1"]
"(static)org.joda.time.Partial$Property.withMinimumValue(org.joda.time.Partial$Property )org.joda.time.Partial"->"org.joda.time.Partial"[label="1"]
"(static)org.joda.time.Partial.getChronology(org.joda.time.Partial )org.joda.time.Chronology"->"org.joda.time.Chronology"[label="1"]
"(static)org.joda.time.Partial.getFieldType(org.joda.time.Partial int )org.joda.time.DateTimeFieldType"->"org.joda.time.DateTimeFieldType"[label="1"]
"(static)org.joda.time.Partial.getFieldTypes(org.joda.time.Partial )org.joda.time.DateTimeFieldType[]"->"org.joda.time.DateTimeFieldType[]"[label="1"]
"(static)org.joda.time.Partial.getFormatter(org.joda.time.Partial )org.joda.time.format.DateTimeFormatter"->"org.joda.time.format.DateTimeFormatter"[label="1"]
"(static)org.joda.time.Partial.getValue(org.joda.time.Partial int )int"->"int"[label="1"]
"(static)org.joda.time.Partial.getValues(org.joda.time.Partial )int[]"->"int[]"[label="1"]
"(static)org.joda.time.Partial.isMatch(org.joda.time.Partial org.joda.time.ReadableInstant )boolean"->"boolean"[label="1"]
"(static)org.joda.time.Partial.isMatch(org.joda.time.Partial org.joda.time.ReadablePartial )boolean"->"boolean"[label="1"]
"(static)org.joda.time.Partial.minus(org.joda.time.Partial org.joda.time.ReadablePeriod )org.joda.time.Partial"->"org.joda.time.Partial"[label="1"]
"(static)org.joda.time.Partial.plus(org.joda.time.Partial org.joda.time.ReadablePeriod )org.joda.time.Partial"->"org.joda.time.Partial"[label="1"]
"(static)org.joda.time.Partial.property(org.joda.time.Partial org.joda.time.DateTimeFieldType )org.joda.time.Partial$Property"->"org.joda.time.Partial$Property"[label="1"]
"(static)org.joda.time.Partial.size(org.joda.time.Partial )int"->"int"[label="1"]
"(static)org.joda.time.Partial.toStringList(org.joda.time.Partial )java.lang.String"->"java.lang.String"[label="1"]
"(static)org.joda.time.Partial.with(org.joda.time.Partial org.joda.time.DateTimeFieldType int )org.joda.time.Partial"->"org.joda.time.Partial"[label="1"]
"(static)org.joda.time.Partial.withChronologyRetainFields(org.joda.time.Partial org.joda.time.Chronology )org.joda.time.Partial"->"org.joda.time.Partial"[label="1"]
"(static)org.joda.time.Partial.withField(org.joda.time.Partial org.joda.time.DateTimeFieldType int )org.joda.time.Partial"->"org.joda.time.Partial"[label="1"]
"(static)org.joda.time.Partial.withFieldAddWrapped(org.joda.time.Partial org.joda.time.DurationFieldType int )org.joda.time.Partial"->"org.joda.time.Partial"[label="1"]
"(static)org.joda.time.Partial.withFieldAdded(org.joda.time.Partial org.joda.time.DurationFieldType int )org.joda.time.Partial"->"org.joda.time.Partial"[label="1"]
"(static)org.joda.time.Partial.withPeriodAdded(org.joda.time.Partial org.joda.time.ReadablePeriod int )org.joda.time.Partial"->"org.joda.time.Partial"[label="1"]
"(static)org.joda.time.Partial.without(org.joda.time.Partial org.joda.time.DateTimeFieldType )org.joda.time.Partial"->"org.joda.time.Partial"[label="1"]
"(static)org.joda.time.Period.getDays(org.joda.time.Period )int"->"int"[label="1"]
"(static)org.joda.time.Period.getHours(org.joda.time.Period )int"->"int"[label="1"]
"(static)org.joda.time.Period.getMillis(org.joda.time.Period )int"->"int"[label="1"]
"(static)org.joda.time.Period.getMinutes(org.joda.time.Period )int"->"int"[label="1"]
"(static)org.joda.time.Period.getMonths(org.joda.time.Period )int"->"int"[label="1"]
"(static)org.joda.time.Period.getSeconds(org.joda.time.Period )int"->"int"[label="1"]
"(static)org.joda.time.Period.getWeeks(org.joda.time.Period )int"->"int"[label="1"]
"(static)org.joda.time.Period.getYears(org.joda.time.Period )int"->"int"[label="1"]
"(static)org.joda.time.Period.minus(org.joda.time.Period org.joda.time.ReadablePeriod )org.joda.time.Period"->"org.joda.time.Period"[label="1"]
"(static)org.joda.time.Period.minusDays(org.joda.time.Period int )org.joda.time.Period"->"org.joda.time.Period"[label="1"]
"(static)org.joda.time.Period.minusHours(org.joda.time.Period int )org.joda.time.Period"->"org.joda.time.Period"[label="1"]
"(static)org.joda.time.Period.minusMillis(org.joda.time.Period int )org.joda.time.Period"->"org.joda.time.Period"[label="1"]
"(static)org.joda.time.Period.minusMinutes(org.joda.time.Period int )org.joda.time.Period"->"org.joda.time.Period"[label="1"]
"(static)org.joda.time.Period.minusMonths(org.joda.time.Period int )org.joda.time.Period"->"org.joda.time.Period"[label="1"]
"(static)org.joda.time.Period.minusSeconds(org.joda.time.Period int )org.joda.time.Period"->"org.joda.time.Period"[label="1"]
"(static)org.joda.time.Period.minusWeeks(org.joda.time.Period int )org.joda.time.Period"->"org.joda.time.Period"[label="1"]
"(static)org.joda.time.Period.minusYears(org.joda.time.Period int )org.joda.time.Period"->"org.joda.time.Period"[label="1"]
"(static)org.joda.time.Period.multipliedBy(org.joda.time.Period int )org.joda.time.Period"->"org.joda.time.Period"[label="1"]
"(static)org.joda.time.Period.negated(org.joda.time.Period )org.joda.time.Period"->"org.joda.time.Period"[label="1"]
"(static)org.joda.time.Period.normalizedStandard(org.joda.time.Period )org.joda.time.Period"->"org.joda.time.Period"[label="1"]
"(static)org.joda.time.Period.normalizedStandard(org.joda.time.Period org.joda.time.PeriodType )org.joda.time.Period"->"org.joda.time.Period"[label="1"]
"(static)org.joda.time.Period.plus(org.joda.time.Period org.joda.time.ReadablePeriod )org.joda.time.Period"->"org.joda.time.Period"[label="1"]
"(static)org.joda.time.Period.plusDays(org.joda.time.Period int )org.joda.time.Period"->"org.joda.time.Period"[label="1"]
"(static)org.joda.time.Period.plusHours(org.joda.time.Period int )org.joda.time.Period"->"org.joda.time.Period"[label="1"]
"(static)org.joda.time.Period.plusMillis(org.joda.time.Period int )org.joda.time.Period"->"org.joda.time.Period"[label="1"]
"(static)org.joda.time.Period.plusMinutes(org.joda.time.Period int )org.joda.time.Period"->"org.joda.time.Period"[label="1"]
"(static)org.joda.time.Period.plusMonths(org.joda.time.Period int )org.joda.time.Period"->"org.joda.time.Period"[label="1"]
"(static)org.joda.time.Period.plusSeconds(org.joda.time.Period int )org.joda.time.Period"->"org.joda.time.Period"[label="1"]
"(static)org.joda.time.Period.plusWeeks(org.joda.time.Period int )org.joda.time.Period"->"org.joda.time.Period"[label="1"]
"(static)org.joda.time.Period.plusYears(org.joda.time.Period int )org.joda.time.Period"->"org.joda.time.Period"[label="1"]
"(static)org.joda.time.Period.toPeriod(org.joda.time.Period )org.joda.time.Period"->"org.joda.time.Period"[label="1"]
"(static)org.joda.time.Period.toStandardDays(org.joda.time.Period )org.joda.time.Days"->"org.joda.time.Days"[label="1"]
"(static)org.joda.time.Period.toStandardDuration(org.joda.time.Period )org.joda.time.Duration"->"org.joda.time.Duration"[label="1"]
"(static)org.joda.time.Period.toStandardHours(org.joda.time.Period )org.joda.time.Hours"->"org.joda.time.Hours"[label="1"]
"(static)org.joda.time.Period.toStandardMinutes(org.joda.time.Period )org.joda.time.Minutes"->"org.joda.time.Minutes"[label="1"]
"(static)org.joda.time.Period.toStandardSeconds(org.joda.time.Period )org.joda.time.Seconds"->"org.joda.time.Seconds"[label="1"]
"(static)org.joda.time.Period.toStandardWeeks(org.joda.time.Period )org.joda.time.Weeks"->"org.joda.time.Weeks"[label="1"]
"(static)org.joda.time.Period.withDays(org.joda.time.Period int )org.joda.time.Period"->"org.joda.time.Period"[label="1"]
"(static)org.joda.time.Period.withField(org.joda.time.Period org.joda.time.DurationFieldType int )org.joda.time.Period"->"org.joda.time.Period"[label="1"]
"(static)org.joda.time.Period.withFieldAdded(org.joda.time.Period org.joda.time.DurationFieldType int )org.joda.time.Period"->"org.joda.time.Period"[label="1"]
"(static)org.joda.time.Period.withFields(org.joda.time.Period org.joda.time.ReadablePeriod )org.joda.time.Period"->"org.joda.time.Period"[label="1"]
"(static)org.joda.time.Period.withHours(org.joda.time.Period int )org.joda.time.Period"->"org.joda.time.Period"[label="1"]
"(static)org.joda.time.Period.withMillis(org.joda.time.Period int )org.joda.time.Period"->"org.joda.time.Period"[label="1"]
"(static)org.joda.time.Period.withMinutes(org.joda.time.Period int )org.joda.time.Period"->"org.joda.time.Period"[label="1"]
"(static)org.joda.time.Period.withMonths(org.joda.time.Period int )org.joda.time.Period"->"org.joda.time.Period"[label="1"]
"(static)org.joda.time.Period.withPeriodType(org.joda.time.Period org.joda.time.PeriodType )org.joda.time.Period"->"org.joda.time.Period"[label="1"]
"(static)org.joda.time.Period.withSeconds(org.joda.time.Period int )org.joda.time.Period"->"org.joda.time.Period"[label="1"]
"(static)org.joda.time.Period.withWeeks(org.joda.time.Period int )org.joda.time.Period"->"org.joda.time.Period"[label="1"]
"(static)org.joda.time.Period.withYears(org.joda.time.Period int )org.joda.time.Period"->"org.joda.time.Period"[label="1"]
"(static)org.joda.time.PeriodType.equals(org.joda.time.PeriodType java.lang.Object )boolean"->"boolean"[label="1"]
"(static)org.joda.time.PeriodType.getFieldType(org.joda.time.PeriodType int )org.joda.time.DurationFieldType"->"org.joda.time.DurationFieldType"[label="1"]
"(static)org.joda.time.PeriodType.getName(org.joda.time.PeriodType )java.lang.String"->"java.lang.String"[label="1"]
"(static)org.joda.time.PeriodType.indexOf(org.joda.time.PeriodType org.joda.time.DurationFieldType )int"->"int"[label="1"]
"(static)org.joda.time.PeriodType.isSupported(org.joda.time.PeriodType org.joda.time.DurationFieldType )boolean"->"boolean"[label="1"]
"(static)org.joda.time.PeriodType.size(org.joda.time.PeriodType )int"->"int"[label="1"]
"(static)org.joda.time.PeriodType.withDaysRemoved(org.joda.time.PeriodType )org.joda.time.PeriodType"->"org.joda.time.PeriodType"[label="1"]
"(static)org.joda.time.PeriodType.withHoursRemoved(org.joda.time.PeriodType )org.joda.time.PeriodType"->"org.joda.time.PeriodType"[label="1"]
"(static)org.joda.time.PeriodType.withMillisRemoved(org.joda.time.PeriodType )org.joda.time.PeriodType"->"org.joda.time.PeriodType"[label="1"]
"(static)org.joda.time.PeriodType.withMinutesRemoved(org.joda.time.PeriodType )org.joda.time.PeriodType"->"org.joda.time.PeriodType"[label="1"]
"(static)org.joda.time.PeriodType.withMonthsRemoved(org.joda.time.PeriodType )org.joda.time.PeriodType"->"org.joda.time.PeriodType"[label="1"]
"(static)org.joda.time.PeriodType.withSecondsRemoved(org.joda.time.PeriodType )org.joda.time.PeriodType"->"org.joda.time.PeriodType"[label="1"]
"(static)org.joda.time.PeriodType.withWeeksRemoved(org.joda.time.PeriodType )org.joda.time.PeriodType"->"org.joda.time.PeriodType"[label="1"]
"(static)org.joda.time.PeriodType.withYearsRemoved(org.joda.time.PeriodType )org.joda.time.PeriodType"->"org.joda.time.PeriodType"[label="1"]
"(static)org.joda.time.ReadableDateTime.getCenturyOfEra(org.joda.time.ReadableDateTime )int"->"int"[label="1"]
"(static)org.joda.time.ReadableDateTime.getDayOfMonth(org.joda.time.ReadableDateTime )int"->"int"[label="1"]
"(static)org.joda.time.ReadableDateTime.getDayOfWeek(org.joda.time.ReadableDateTime )int"->"int"[label="1"]
"(static)org.joda.time.ReadableDateTime.getDayOfYear(org.joda.time.ReadableDateTime )int"->"int"[label="1"]
"(static)org.joda.time.ReadableDateTime.getEra(org.joda.time.ReadableDateTime )int"->"int"[label="1"]
"(static)org.joda.time.ReadableDateTime.getHourOfDay(org.joda.time.ReadableDateTime )int"->"int"[label="1"]
"(static)org.joda.time.ReadableDateTime.getMillisOfDay(org.joda.time.ReadableDateTime )int"->"int"[label="1"]
"(static)org.joda.time.ReadableDateTime.getMillisOfSecond(org.joda.time.ReadableDateTime )int"->"int"[label="1"]
"(static)org.joda.time.ReadableDateTime.getMinuteOfDay(org.joda.time.ReadableDateTime )int"->"int"[label="1"]
"(static)org.joda.time.ReadableDateTime.getMinuteOfHour(org.joda.time.ReadableDateTime )int"->"int"[label="1"]
"(static)org.joda.time.ReadableDateTime.getMonthOfYear(org.joda.time.ReadableDateTime )int"->"int"[label="1"]
"(static)org.joda.time.ReadableDateTime.getSecondOfDay(org.joda.time.ReadableDateTime )int"->"int"[label="1"]
"(static)org.joda.time.ReadableDateTime.getSecondOfMinute(org.joda.time.ReadableDateTime )int"->"int"[label="1"]
"(static)org.joda.time.ReadableDateTime.getWeekOfWeekyear(org.joda.time.ReadableDateTime )int"->"int"[label="1"]
"(static)org.joda.time.ReadableDateTime.getWeekyear(org.joda.time.ReadableDateTime )int"->"int"[label="1"]
"(static)org.joda.time.ReadableDateTime.getYear(org.joda.time.ReadableDateTime )int"->"int"[label="1"]
"(static)org.joda.time.ReadableDateTime.getYearOfCentury(org.joda.time.ReadableDateTime )int"->"int"[label="1"]
"(static)org.joda.time.ReadableDateTime.getYearOfEra(org.joda.time.ReadableDateTime )int"->"int"[label="1"]
"(static)org.joda.time.ReadableDateTime.toDateTime(org.joda.time.ReadableDateTime )org.joda.time.DateTime"->"org.joda.time.DateTime"[label="1"]
"(static)org.joda.time.ReadableDateTime.toMutableDateTime(org.joda.time.ReadableDateTime )org.joda.time.MutableDateTime"->"org.joda.time.MutableDateTime"[label="1"]
"(static)org.joda.time.ReadableDuration.equals(org.joda.time.ReadableDuration java.lang.Object )boolean"->"boolean"[label="1"]
"(static)org.joda.time.ReadableDuration.getMillis(org.joda.time.ReadableDuration )long"->"long"[label="1"]
"(static)org.joda.time.ReadableDuration.isEqual(org.joda.time.ReadableDuration org.joda.time.ReadableDuration )boolean"->"boolean"[label="1"]
"(static)org.joda.time.ReadableDuration.isLongerThan(org.joda.time.ReadableDuration org.joda.time.ReadableDuration )boolean"->"boolean"[label="1"]
"(static)org.joda.time.ReadableDuration.isShorterThan(org.joda.time.ReadableDuration org.joda.time.ReadableDuration )boolean"->"boolean"[label="1"]
"(static)org.joda.time.ReadableDuration.toDuration(org.joda.time.ReadableDuration )org.joda.time.Duration"->"org.joda.time.Duration"[label="1"]
"(static)org.joda.time.ReadableDuration.toPeriod(org.joda.time.ReadableDuration )org.joda.time.Period"->"org.joda.time.Period"[label="1"]
"(static)org.joda.time.ReadableInstant.equals(org.joda.time.ReadableInstant java.lang.Object )boolean"->"boolean"[label="1"]
"(static)org.joda.time.ReadableInstant.get(org.joda.time.ReadableInstant org.joda.time.DateTimeFieldType )int"->"int"[label="1"]
"(static)org.joda.time.ReadableInstant.getChronology(org.joda.time.ReadableInstant )org.joda.time.Chronology"->"org.joda.time.Chronology"[label="1"]
"(static)org.joda.time.ReadableInstant.getMillis(org.joda.time.ReadableInstant )long"->"long"[label="1"]
"(static)org.joda.time.ReadableInstant.getZone(org.joda.time.ReadableInstant )org.joda.time.DateTimeZone"->"org.joda.time.DateTimeZone"[label="1"]
"(static)org.joda.time.ReadableInstant.isAfter(org.joda.time.ReadableInstant org.joda.time.ReadableInstant )boolean"->"boolean"[label="1"]
"(static)org.joda.time.ReadableInstant.isBefore(org.joda.time.ReadableInstant org.joda.time.ReadableInstant )boolean"->"boolean"[label="1"]
"(static)org.joda.time.ReadableInstant.isEqual(org.joda.time.ReadableInstant org.joda.time.ReadableInstant )boolean"->"boolean"[label="1"]
"(static)org.joda.time.ReadableInstant.isSupported(org.joda.time.ReadableInstant org.joda.time.DateTimeFieldType )boolean"->"boolean"[label="1"]
"(static)org.joda.time.ReadableInstant.toInstant(org.joda.time.ReadableInstant )org.joda.time.Instant"->"org.joda.time.Instant"[label="1"]
"(static)org.joda.time.ReadableInterval.equals(org.joda.time.ReadableInterval java.lang.Object )boolean"->"boolean"[label="1"]
"(static)org.joda.time.ReadableInterval.getChronology(org.joda.time.ReadableInterval )org.joda.time.Chronology"->"org.joda.time.Chronology"[label="1"]
"(static)org.joda.time.ReadableInterval.getEnd(org.joda.time.ReadableInterval )org.joda.time.DateTime"->"org.joda.time.DateTime"[label="1"]
"(static)org.joda.time.ReadableInterval.getEndMillis(org.joda.time.ReadableInterval )long"->"long"[label="1"]
"(static)org.joda.time.ReadableInterval.getStart(org.joda.time.ReadableInterval )org.joda.time.DateTime"->"org.joda.time.DateTime"[label="1"]
"(static)org.joda.time.ReadableInterval.getStartMillis(org.joda.time.ReadableInterval )long"->"long"[label="1"]
"(static)org.joda.time.ReadableInterval.isAfter(org.joda.time.ReadableInterval org.joda.time.ReadableInstant )boolean"->"boolean"[label="1"]
"(static)org.joda.time.ReadableInterval.isAfter(org.joda.time.ReadableInterval org.joda.time.ReadableInterval )boolean"->"boolean"[label="1"]
"(static)org.joda.time.ReadableInterval.isBefore(org.joda.time.ReadableInterval org.joda.time.ReadableInstant )boolean"->"boolean"[label="1"]
"(static)org.joda.time.ReadableInterval.isBefore(org.joda.time.ReadableInterval org.joda.time.ReadableInterval )boolean"->"boolean"[label="1"]
"(static)org.joda.time.ReadableInterval.overlaps(org.joda.time.ReadableInterval org.joda.time.ReadableInterval )boolean"->"boolean"[label="1"]
"(static)org.joda.time.ReadableInterval.toDuration(org.joda.time.ReadableInterval )org.joda.time.Duration"->"org.joda.time.Duration"[label="1"]
"(static)org.joda.time.ReadableInterval.toDurationMillis(org.joda.time.ReadableInterval )long"->"long"[label="1"]
"(static)org.joda.time.ReadableInterval.toInterval(org.joda.time.ReadableInterval )org.joda.time.Interval"->"org.joda.time.Interval"[label="1"]
"(static)org.joda.time.ReadableInterval.toMutableInterval(org.joda.time.ReadableInterval )org.joda.time.MutableInterval"->"org.joda.time.MutableInterval"[label="1"]
"(static)org.joda.time.ReadableInterval.toPeriod(org.joda.time.ReadableInterval )org.joda.time.Period"->"org.joda.time.Period"[label="1"]
"(static)org.joda.time.ReadableInterval.toPeriod(org.joda.time.ReadableInterval org.joda.time.PeriodType )org.joda.time.Period"->"org.joda.time.Period"[label="1"]
"(static)org.joda.time.ReadablePartial.equals(org.joda.time.ReadablePartial java.lang.Object )boolean"->"boolean"[label="1"]
"(static)org.joda.time.ReadablePartial.get(org.joda.time.ReadablePartial org.joda.time.DateTimeFieldType )int"->"int"[label="1"]
"(static)org.joda.time.ReadablePartial.getChronology(org.joda.time.ReadablePartial )org.joda.time.Chronology"->"org.joda.time.Chronology"[label="1"]
"(static)org.joda.time.ReadablePartial.getField(org.joda.time.ReadablePartial int )org.joda.time.DateTimeField"->"org.joda.time.DateTimeField"[label="1"]
"(static)org.joda.time.ReadablePartial.getFieldType(org.joda.time.ReadablePartial int )org.joda.time.DateTimeFieldType"->"org.joda.time.DateTimeFieldType"[label="1"]
"(static)org.joda.time.ReadablePartial.getValue(org.joda.time.ReadablePartial int )int"->"int"[label="1"]
"(static)org.joda.time.ReadablePartial.isSupported(org.joda.time.ReadablePartial org.joda.time.DateTimeFieldType )boolean"->"boolean"[label="1"]
"(static)org.joda.time.ReadablePartial.size(org.joda.time.ReadablePartial )int"->"int"[label="1"]
"(static)org.joda.time.ReadablePartial.toDateTime(org.joda.time.ReadablePartial org.joda.time.ReadableInstant )org.joda.time.DateTime"->"org.joda.time.DateTime"[label="1"]
"(static)org.joda.time.ReadablePeriod.equals(org.joda.time.ReadablePeriod java.lang.Object )boolean"->"boolean"[label="1"]
"(static)org.joda.time.ReadablePeriod.get(org.joda.time.ReadablePeriod org.joda.time.DurationFieldType )int"->"int"[label="1"]
"(static)org.joda.time.ReadablePeriod.getFieldType(org.joda.time.ReadablePeriod int )org.joda.time.DurationFieldType"->"org.joda.time.DurationFieldType"[label="1"]
"(static)org.joda.time.ReadablePeriod.getPeriodType(org.joda.time.ReadablePeriod )org.joda.time.PeriodType"->"org.joda.time.PeriodType"[label="1"]
"(static)org.joda.time.ReadablePeriod.getValue(org.joda.time.ReadablePeriod int )int"->"int"[label="1"]
"(static)org.joda.time.ReadablePeriod.isSupported(org.joda.time.ReadablePeriod org.joda.time.DurationFieldType )boolean"->"boolean"[label="1"]
"(static)org.joda.time.ReadablePeriod.size(org.joda.time.ReadablePeriod )int"->"int"[label="1"]
"(static)org.joda.time.ReadablePeriod.toMutablePeriod(org.joda.time.ReadablePeriod )org.joda.time.MutablePeriod"->"org.joda.time.MutablePeriod"[label="1"]
"(static)org.joda.time.ReadablePeriod.toPeriod(org.joda.time.ReadablePeriod )org.joda.time.Period"->"org.joda.time.Period"[label="1"]
"(static)org.joda.time.Seconds.dividedBy(org.joda.time.Seconds int )org.joda.time.Seconds"->"org.joda.time.Seconds"[label="1"]
"(static)org.joda.time.Seconds.getFieldType(org.joda.time.Seconds )org.joda.time.DurationFieldType"->"org.joda.time.DurationFieldType"[label="1"]
"(static)org.joda.time.Seconds.getPeriodType(org.joda.time.Seconds )org.joda.time.PeriodType"->"org.joda.time.PeriodType"[label="1"]
"(static)org.joda.time.Seconds.getSeconds(org.joda.time.Seconds )int"->"int"[label="1"]
"(static)org.joda.time.Seconds.isGreaterThan(org.joda.time.Seconds org.joda.time.Seconds )boolean"->"boolean"[label="1"]
"(static)org.joda.time.Seconds.isLessThan(org.joda.time.Seconds org.joda.time.Seconds )boolean"->"boolean"[label="1"]
"(static)org.joda.time.Seconds.minus(org.joda.time.Seconds int )org.joda.time.Seconds"->"org.joda.time.Seconds"[label="1"]
"(static)org.joda.time.Seconds.minus(org.joda.time.Seconds org.joda.time.Seconds )org.joda.time.Seconds"->"org.joda.time.Seconds"[label="1"]
"(static)org.joda.time.Seconds.multipliedBy(org.joda.time.Seconds int )org.joda.time.Seconds"->"org.joda.time.Seconds"[label="1"]
"(static)org.joda.time.Seconds.negated(org.joda.time.Seconds )org.joda.time.Seconds"->"org.joda.time.Seconds"[label="1"]
"(static)org.joda.time.Seconds.plus(org.joda.time.Seconds int )org.joda.time.Seconds"->"org.joda.time.Seconds"[label="1"]
"(static)org.joda.time.Seconds.plus(org.joda.time.Seconds org.joda.time.Seconds )org.joda.time.Seconds"->"org.joda.time.Seconds"[label="1"]
"(static)org.joda.time.Seconds.toStandardDays(org.joda.time.Seconds )org.joda.time.Days"->"org.joda.time.Days"[label="1"]
"(static)org.joda.time.Seconds.toStandardDuration(org.joda.time.Seconds )org.joda.time.Duration"->"org.joda.time.Duration"[label="1"]
"(static)org.joda.time.Seconds.toStandardHours(org.joda.time.Seconds )org.joda.time.Hours"->"org.joda.time.Hours"[label="1"]
"(static)org.joda.time.Seconds.toStandardMinutes(org.joda.time.Seconds )org.joda.time.Minutes"->"org.joda.time.Minutes"[label="1"]
"(static)org.joda.time.Seconds.toStandardWeeks(org.joda.time.Seconds )org.joda.time.Weeks"->"org.joda.time.Weeks"[label="1"]
"(static)org.joda.time.TimeOfDay$Property.addNoWrapToCopy(org.joda.time.TimeOfDay$Property int )org.joda.time.TimeOfDay"->"org.joda.time.TimeOfDay"[label="1"]
"(static)org.joda.time.TimeOfDay$Property.addToCopy(org.joda.time.TimeOfDay$Property int )org.joda.time.TimeOfDay"->"org.joda.time.TimeOfDay"[label="1"]
"(static)org.joda.time.TimeOfDay$Property.addWrapFieldToCopy(org.joda.time.TimeOfDay$Property int )org.joda.time.TimeOfDay"->"org.joda.time.TimeOfDay"[label="1"]
"(static)org.joda.time.TimeOfDay$Property.get(org.joda.time.TimeOfDay$Property )int"->"int"[label="1"]
"(static)org.joda.time.TimeOfDay$Property.getField(org.joda.time.TimeOfDay$Property )org.joda.time.DateTimeField"->"org.joda.time.DateTimeField"[label="1"]
"(static)org.joda.time.TimeOfDay$Property.getTimeOfDay(org.joda.time.TimeOfDay$Property )org.joda.time.TimeOfDay"->"org.joda.time.TimeOfDay"[label="1"]
"(static)org.joda.time.TimeOfDay$Property.setCopy(org.joda.time.TimeOfDay$Property int )org.joda.time.TimeOfDay"->"org.joda.time.TimeOfDay"[label="1"]
"(static)org.joda.time.TimeOfDay$Property.setCopy(org.joda.time.TimeOfDay$Property java.lang.String )org.joda.time.TimeOfDay"->"org.joda.time.TimeOfDay"[label="1"]
"(static)org.joda.time.TimeOfDay$Property.setCopy(org.joda.time.TimeOfDay$Property java.lang.String java.util.Locale )org.joda.time.TimeOfDay"->"org.joda.time.TimeOfDay"[label="1"]
"(static)org.joda.time.TimeOfDay$Property.withMaximumValue(org.joda.time.TimeOfDay$Property )org.joda.time.TimeOfDay"->"org.joda.time.TimeOfDay"[label="1"]
"(static)org.joda.time.TimeOfDay$Property.withMinimumValue(org.joda.time.TimeOfDay$Property )org.joda.time.TimeOfDay"->"org.joda.time.TimeOfDay"[label="1"]
"(static)org.joda.time.TimeOfDay.getFieldType(org.joda.time.TimeOfDay int )org.joda.time.DateTimeFieldType"->"org.joda.time.DateTimeFieldType"[label="1"]
"(static)org.joda.time.TimeOfDay.getFieldTypes(org.joda.time.TimeOfDay )org.joda.time.DateTimeFieldType[]"->"org.joda.time.DateTimeFieldType[]"[label="1"]
"(static)org.joda.time.TimeOfDay.getHourOfDay(org.joda.time.TimeOfDay )int"->"int"[label="1"]
"(static)org.joda.time.TimeOfDay.getMillisOfSecond(org.joda.time.TimeOfDay )int"->"int"[label="1"]
"(static)org.joda.time.TimeOfDay.getMinuteOfHour(org.joda.time.TimeOfDay )int"->"int"[label="1"]
"(static)org.joda.time.TimeOfDay.getSecondOfMinute(org.joda.time.TimeOfDay )int"->"int"[label="1"]
"(static)org.joda.time.TimeOfDay.hourOfDay(org.joda.time.TimeOfDay )org.joda.time.TimeOfDay$Property"->"org.joda.time.TimeOfDay$Property"[label="1"]
"(static)org.joda.time.TimeOfDay.millisOfSecond(org.joda.time.TimeOfDay )org.joda.time.TimeOfDay$Property"->"org.joda.time.TimeOfDay$Property"[label="1"]
"(static)org.joda.time.TimeOfDay.minus(org.joda.time.TimeOfDay org.joda.time.ReadablePeriod )org.joda.time.TimeOfDay"->"org.joda.time.TimeOfDay"[label="1"]
"(static)org.joda.time.TimeOfDay.minusHours(org.joda.time.TimeOfDay int )org.joda.time.TimeOfDay"->"org.joda.time.TimeOfDay"[label="1"]
"(static)org.joda.time.TimeOfDay.minusMillis(org.joda.time.TimeOfDay int )org.joda.time.TimeOfDay"->"org.joda.time.TimeOfDay"[label="1"]
"(static)org.joda.time.TimeOfDay.minusMinutes(org.joda.time.TimeOfDay int )org.joda.time.TimeOfDay"->"org.joda.time.TimeOfDay"[label="1"]
"(static)org.joda.time.TimeOfDay.minusSeconds(org.joda.time.TimeOfDay int )org.joda.time.TimeOfDay"->"org.joda.time.TimeOfDay"[label="1"]
"(static)org.joda.time.TimeOfDay.minuteOfHour(org.joda.time.TimeOfDay )org.joda.time.TimeOfDay$Property"->"org.joda.time.TimeOfDay$Property"[label="1"]
"(static)org.joda.time.TimeOfDay.plus(org.joda.time.TimeOfDay org.joda.time.ReadablePeriod )org.joda.time.TimeOfDay"->"org.joda.time.TimeOfDay"[label="1"]
"(static)org.joda.time.TimeOfDay.plusHours(org.joda.time.TimeOfDay int )org.joda.time.TimeOfDay"->"org.joda.time.TimeOfDay"[label="1"]
"(static)org.joda.time.TimeOfDay.plusMillis(org.joda.time.TimeOfDay int )org.joda.time.TimeOfDay"->"org.joda.time.TimeOfDay"[label="1"]
"(static)org.joda.time.TimeOfDay.plusMinutes(org.joda.time.TimeOfDay int )org.joda.time.TimeOfDay"->"org.joda.time.TimeOfDay"[label="1"]
"(static)org.joda.time.TimeOfDay.plusSeconds(org.joda.time.TimeOfDay int )org.joda.time.TimeOfDay"->"org.joda.time.TimeOfDay"[label="1"]
"(static)org.joda.time.TimeOfDay.property(org.joda.time.TimeOfDay org.joda.time.DateTimeFieldType )org.joda.time.TimeOfDay$Property"->"org.joda.time.TimeOfDay$Property"[label="1"]
"(static)org.joda.time.TimeOfDay.secondOfMinute(org.joda.time.TimeOfDay )org.joda.time.TimeOfDay$Property"->"org.joda.time.TimeOfDay$Property"[label="1"]
"(static)org.joda.time.TimeOfDay.size(org.joda.time.TimeOfDay )int"->"int"[label="1"]
"(static)org.joda.time.TimeOfDay.toDateTimeToday(org.joda.time.TimeOfDay )org.joda.time.DateTime"->"org.joda.time.DateTime"[label="1"]
"(static)org.joda.time.TimeOfDay.toDateTimeToday(org.joda.time.TimeOfDay org.joda.time.DateTimeZone )org.joda.time.DateTime"->"org.joda.time.DateTime"[label="1"]
"(static)org.joda.time.TimeOfDay.toLocalTime(org.joda.time.TimeOfDay )org.joda.time.LocalTime"->"org.joda.time.LocalTime"[label="1"]
"(static)org.joda.time.TimeOfDay.withChronologyRetainFields(org.joda.time.TimeOfDay org.joda.time.Chronology )org.joda.time.TimeOfDay"->"org.joda.time.TimeOfDay"[label="1"]
"(static)org.joda.time.TimeOfDay.withField(org.joda.time.TimeOfDay org.joda.time.DateTimeFieldType int )org.joda.time.TimeOfDay"->"org.joda.time.TimeOfDay"[label="1"]
"(static)org.joda.time.TimeOfDay.withFieldAdded(org.joda.time.TimeOfDay org.joda.time.DurationFieldType int )org.joda.time.TimeOfDay"->"org.joda.time.TimeOfDay"[label="1"]
"(static)org.joda.time.TimeOfDay.withHourOfDay(org.joda.time.TimeOfDay int )org.joda.time.TimeOfDay"->"org.joda.time.TimeOfDay"[label="1"]
"(static)org.joda.time.TimeOfDay.withMillisOfSecond(org.joda.time.TimeOfDay int )org.joda.time.TimeOfDay"->"org.joda.time.TimeOfDay"[label="1"]
"(static)org.joda.time.TimeOfDay.withMinuteOfHour(org.joda.time.TimeOfDay int )org.joda.time.TimeOfDay"->"org.joda.time.TimeOfDay"[label="1"]
"(static)org.joda.time.TimeOfDay.withPeriodAdded(org.joda.time.TimeOfDay org.joda.time.ReadablePeriod int )org.joda.time.TimeOfDay"->"org.joda.time.TimeOfDay"[label="1"]
"(static)org.joda.time.TimeOfDay.withSecondOfMinute(org.joda.time.TimeOfDay int )org.joda.time.TimeOfDay"->"org.joda.time.TimeOfDay"[label="1"]
"(static)org.joda.time.UTCDateTimeZone.equals(org.joda.time.UTCDateTimeZone java.lang.Object )boolean"->"boolean"[label="1"]
"(static)org.joda.time.UTCDateTimeZone.getNameKey(org.joda.time.UTCDateTimeZone long )java.lang.String"->"java.lang.String"[label="1"]
"(static)org.joda.time.UTCDateTimeZone.getOffset(org.joda.time.UTCDateTimeZone long )int"->"int"[label="1"]
"(static)org.joda.time.UTCDateTimeZone.getOffsetFromLocal(org.joda.time.UTCDateTimeZone long )int"->"int"[label="1"]
"(static)org.joda.time.UTCDateTimeZone.getStandardOffset(org.joda.time.UTCDateTimeZone long )int"->"int"[label="1"]
"(static)org.joda.time.UTCDateTimeZone.isFixed(org.joda.time.UTCDateTimeZone )boolean"->"boolean"[label="1"]
"(static)org.joda.time.UTCDateTimeZone.nextTransition(org.joda.time.UTCDateTimeZone long )long"->"long"[label="1"]
"(static)org.joda.time.UTCDateTimeZone.previousTransition(org.joda.time.UTCDateTimeZone long )long"->"long"[label="1"]
"(static)org.joda.time.UTCDateTimeZone.toTimeZone(org.joda.time.UTCDateTimeZone )java.util.TimeZone"->"java.util.TimeZone"[label="1"]
"(static)org.joda.time.Weeks.dividedBy(org.joda.time.Weeks int )org.joda.time.Weeks"->"org.joda.time.Weeks"[label="1"]
"(static)org.joda.time.Weeks.getFieldType(org.joda.time.Weeks )org.joda.time.DurationFieldType"->"org.joda.time.DurationFieldType"[label="1"]
"(static)org.joda.time.Weeks.getPeriodType(org.joda.time.Weeks )org.joda.time.PeriodType"->"org.joda.time.PeriodType"[label="1"]
"(static)org.joda.time.Weeks.getWeeks(org.joda.time.Weeks )int"->"int"[label="1"]
"(static)org.joda.time.Weeks.isGreaterThan(org.joda.time.Weeks org.joda.time.Weeks )boolean"->"boolean"[label="1"]
"(static)org.joda.time.Weeks.isLessThan(org.joda.time.Weeks org.joda.time.Weeks )boolean"->"boolean"[label="1"]
"(static)org.joda.time.Weeks.minus(org.joda.time.Weeks int )org.joda.time.Weeks"->"org.joda.time.Weeks"[label="1"]
"(static)org.joda.time.Weeks.minus(org.joda.time.Weeks org.joda.time.Weeks )org.joda.time.Weeks"->"org.joda.time.Weeks"[label="1"]
"(static)org.joda.time.Weeks.multipliedBy(org.joda.time.Weeks int )org.joda.time.Weeks"->"org.joda.time.Weeks"[label="1"]
"(static)org.joda.time.Weeks.negated(org.joda.time.Weeks )org.joda.time.Weeks"->"org.joda.time.Weeks"[label="1"]
"(static)org.joda.time.Weeks.plus(org.joda.time.Weeks int )org.joda.time.Weeks"->"org.joda.time.Weeks"[label="1"]
"(static)org.joda.time.Weeks.plus(org.joda.time.Weeks org.joda.time.Weeks )org.joda.time.Weeks"->"org.joda.time.Weeks"[label="1"]
"(static)org.joda.time.Weeks.toStandardDays(org.joda.time.Weeks )org.joda.time.Days"->"org.joda.time.Days"[label="1"]
"(static)org.joda.time.Weeks.toStandardDuration(org.joda.time.Weeks )org.joda.time.Duration"->"org.joda.time.Duration"[label="1"]
"(static)org.joda.time.Weeks.toStandardHours(org.joda.time.Weeks )org.joda.time.Hours"->"org.joda.time.Hours"[label="1"]
"(static)org.joda.time.Weeks.toStandardMinutes(org.joda.time.Weeks )org.joda.time.Minutes"->"org.joda.time.Minutes"[label="1"]
"(static)org.joda.time.Weeks.toStandardSeconds(org.joda.time.Weeks )org.joda.time.Seconds"->"org.joda.time.Seconds"[label="1"]
"(static)org.joda.time.YearMonth$Property.addToCopy(org.joda.time.YearMonth$Property int )org.joda.time.YearMonth"->"org.joda.time.YearMonth"[label="1"]
"(static)org.joda.time.YearMonth$Property.addWrapFieldToCopy(org.joda.time.YearMonth$Property int )org.joda.time.YearMonth"->"org.joda.time.YearMonth"[label="1"]
"(static)org.joda.time.YearMonth$Property.get(org.joda.time.YearMonth$Property )int"->"int"[label="1"]
"(static)org.joda.time.YearMonth$Property.getField(org.joda.time.YearMonth$Property )org.joda.time.DateTimeField"->"org.joda.time.DateTimeField"[label="1"]
"(static)org.joda.time.YearMonth$Property.getYearMonth(org.joda.time.YearMonth$Property )org.joda.time.YearMonth"->"org.joda.time.YearMonth"[label="1"]
"(static)org.joda.time.YearMonth$Property.setCopy(org.joda.time.YearMonth$Property int )org.joda.time.YearMonth"->"org.joda.time.YearMonth"[label="1"]
"(static)org.joda.time.YearMonth$Property.setCopy(org.joda.time.YearMonth$Property java.lang.String )org.joda.time.YearMonth"->"org.joda.time.YearMonth"[label="1"]
"(static)org.joda.time.YearMonth$Property.setCopy(org.joda.time.YearMonth$Property java.lang.String java.util.Locale )org.joda.time.YearMonth"->"org.joda.time.YearMonth"[label="1"]
"(static)org.joda.time.YearMonth.getFieldType(org.joda.time.YearMonth int )org.joda.time.DateTimeFieldType"->"org.joda.time.DateTimeFieldType"[label="1"]
"(static)org.joda.time.YearMonth.getFieldTypes(org.joda.time.YearMonth )org.joda.time.DateTimeFieldType[]"->"org.joda.time.DateTimeFieldType[]"[label="1"]
"(static)org.joda.time.YearMonth.getMonthOfYear(org.joda.time.YearMonth )int"->"int"[label="1"]
"(static)org.joda.time.YearMonth.getYear(org.joda.time.YearMonth )int"->"int"[label="1"]
"(static)org.joda.time.YearMonth.minus(org.joda.time.YearMonth org.joda.time.ReadablePeriod )org.joda.time.YearMonth"->"org.joda.time.YearMonth"[label="1"]
"(static)org.joda.time.YearMonth.minusMonths(org.joda.time.YearMonth int )org.joda.time.YearMonth"->"org.joda.time.YearMonth"[label="1"]
"(static)org.joda.time.YearMonth.minusYears(org.joda.time.YearMonth int )org.joda.time.YearMonth"->"org.joda.time.YearMonth"[label="1"]
"(static)org.joda.time.YearMonth.monthOfYear(org.joda.time.YearMonth )org.joda.time.YearMonth$Property"->"org.joda.time.YearMonth$Property"[label="1"]
"(static)org.joda.time.YearMonth.plus(org.joda.time.YearMonth org.joda.time.ReadablePeriod )org.joda.time.YearMonth"->"org.joda.time.YearMonth"[label="1"]
"(static)org.joda.time.YearMonth.plusMonths(org.joda.time.YearMonth int )org.joda.time.YearMonth"->"org.joda.time.YearMonth"[label="1"]
"(static)org.joda.time.YearMonth.plusYears(org.joda.time.YearMonth int )org.joda.time.YearMonth"->"org.joda.time.YearMonth"[label="1"]
"(static)org.joda.time.YearMonth.property(org.joda.time.YearMonth org.joda.time.DateTimeFieldType )org.joda.time.YearMonth$Property"->"org.joda.time.YearMonth$Property"[label="1"]
"(static)org.joda.time.YearMonth.size(org.joda.time.YearMonth )int"->"int"[label="1"]
"(static)org.joda.time.YearMonth.toInterval(org.joda.time.YearMonth )org.joda.time.Interval"->"org.joda.time.Interval"[label="1"]
"(static)org.joda.time.YearMonth.toInterval(org.joda.time.YearMonth org.joda.time.DateTimeZone )org.joda.time.Interval"->"org.joda.time.Interval"[label="1"]
"(static)org.joda.time.YearMonth.toLocalDate(org.joda.time.YearMonth int )org.joda.time.LocalDate"->"org.joda.time.LocalDate"[label="1"]
"(static)org.joda.time.YearMonth.withChronologyRetainFields(org.joda.time.YearMonth org.joda.time.Chronology )org.joda.time.YearMonth"->"org.joda.time.YearMonth"[label="1"]
"(static)org.joda.time.YearMonth.withField(org.joda.time.YearMonth org.joda.time.DateTimeFieldType int )org.joda.time.YearMonth"->"org.joda.time.YearMonth"[label="1"]
"(static)org.joda.time.YearMonth.withFieldAdded(org.joda.time.YearMonth org.joda.time.DurationFieldType int )org.joda.time.YearMonth"->"org.joda.time.YearMonth"[label="1"]
"(static)org.joda.time.YearMonth.withMonthOfYear(org.joda.time.YearMonth int )org.joda.time.YearMonth"->"org.joda.time.YearMonth"[label="1"]
"(static)org.joda.time.YearMonth.withPeriodAdded(org.joda.time.YearMonth org.joda.time.ReadablePeriod int )org.joda.time.YearMonth"->"org.joda.time.YearMonth"[label="1"]
"(static)org.joda.time.YearMonth.withYear(org.joda.time.YearMonth int )org.joda.time.YearMonth"->"org.joda.time.YearMonth"[label="1"]
"(static)org.joda.time.YearMonth.year(org.joda.time.YearMonth )org.joda.time.YearMonth$Property"->"org.joda.time.YearMonth$Property"[label="1"]
"(static)org.joda.time.YearMonthDay$Property.addToCopy(org.joda.time.YearMonthDay$Property int )org.joda.time.YearMonthDay"->"org.joda.time.YearMonthDay"[label="1"]
"(static)org.joda.time.YearMonthDay$Property.addWrapFieldToCopy(org.joda.time.YearMonthDay$Property int )org.joda.time.YearMonthDay"->"org.joda.time.YearMonthDay"[label="1"]
"(static)org.joda.time.YearMonthDay$Property.get(org.joda.time.YearMonthDay$Property )int"->"int"[label="1"]
"(static)org.joda.time.YearMonthDay$Property.getField(org.joda.time.YearMonthDay$Property )org.joda.time.DateTimeField"->"org.joda.time.DateTimeField"[label="1"]
"(static)org.joda.time.YearMonthDay$Property.getYearMonthDay(org.joda.time.YearMonthDay$Property )org.joda.time.YearMonthDay"->"org.joda.time.YearMonthDay"[label="1"]
"(static)org.joda.time.YearMonthDay$Property.setCopy(org.joda.time.YearMonthDay$Property int )org.joda.time.YearMonthDay"->"org.joda.time.YearMonthDay"[label="1"]
"(static)org.joda.time.YearMonthDay$Property.setCopy(org.joda.time.YearMonthDay$Property java.lang.String )org.joda.time.YearMonthDay"->"org.joda.time.YearMonthDay"[label="1"]
"(static)org.joda.time.YearMonthDay$Property.setCopy(org.joda.time.YearMonthDay$Property java.lang.String java.util.Locale )org.joda.time.YearMonthDay"->"org.joda.time.YearMonthDay"[label="1"]
"(static)org.joda.time.YearMonthDay$Property.withMaximumValue(org.joda.time.YearMonthDay$Property )org.joda.time.YearMonthDay"->"org.joda.time.YearMonthDay"[label="1"]
"(static)org.joda.time.YearMonthDay$Property.withMinimumValue(org.joda.time.YearMonthDay$Property )org.joda.time.YearMonthDay"->"org.joda.time.YearMonthDay"[label="1"]
"(static)org.joda.time.YearMonthDay.dayOfMonth(org.joda.time.YearMonthDay )org.joda.time.YearMonthDay$Property"->"org.joda.time.YearMonthDay$Property"[label="1"]
"(static)org.joda.time.YearMonthDay.getDayOfMonth(org.joda.time.YearMonthDay )int"->"int"[label="1"]
"(static)org.joda.time.YearMonthDay.getFieldType(org.joda.time.YearMonthDay int )org.joda.time.DateTimeFieldType"->"org.joda.time.DateTimeFieldType"[label="1"]
"(static)org.joda.time.YearMonthDay.getFieldTypes(org.joda.time.YearMonthDay )org.joda.time.DateTimeFieldType[]"->"org.joda.time.DateTimeFieldType[]"[label="1"]
"(static)org.joda.time.YearMonthDay.getMonthOfYear(org.joda.time.YearMonthDay )int"->"int"[label="1"]
"(static)org.joda.time.YearMonthDay.getYear(org.joda.time.YearMonthDay )int"->"int"[label="1"]
"(static)org.joda.time.YearMonthDay.minus(org.joda.time.YearMonthDay org.joda.time.ReadablePeriod )org.joda.time.YearMonthDay"->"org.joda.time.YearMonthDay"[label="1"]
"(static)org.joda.time.YearMonthDay.minusDays(org.joda.time.YearMonthDay int )org.joda.time.YearMonthDay"->"org.joda.time.YearMonthDay"[label="1"]
"(static)org.joda.time.YearMonthDay.minusMonths(org.joda.time.YearMonthDay int )org.joda.time.YearMonthDay"->"org.joda.time.YearMonthDay"[label="1"]
"(static)org.joda.time.YearMonthDay.minusYears(org.joda.time.YearMonthDay int )org.joda.time.YearMonthDay"->"org.joda.time.YearMonthDay"[label="1"]
"(static)org.joda.time.YearMonthDay.monthOfYear(org.joda.time.YearMonthDay )org.joda.time.YearMonthDay$Property"->"org.joda.time.YearMonthDay$Property"[label="1"]
"(static)org.joda.time.YearMonthDay.plus(org.joda.time.YearMonthDay org.joda.time.ReadablePeriod )org.joda.time.YearMonthDay"->"org.joda.time.YearMonthDay"[label="1"]
"(static)org.joda.time.YearMonthDay.plusDays(org.joda.time.YearMonthDay int )org.joda.time.YearMonthDay"->"org.joda.time.YearMonthDay"[label="1"]
"(static)org.joda.time.YearMonthDay.plusMonths(org.joda.time.YearMonthDay int )org.joda.time.YearMonthDay"->"org.joda.time.YearMonthDay"[label="1"]
"(static)org.joda.time.YearMonthDay.plusYears(org.joda.time.YearMonthDay int )org.joda.time.YearMonthDay"->"org.joda.time.YearMonthDay"[label="1"]
"(static)org.joda.time.YearMonthDay.property(org.joda.time.YearMonthDay org.joda.time.DateTimeFieldType )org.joda.time.YearMonthDay$Property"->"org.joda.time.YearMonthDay$Property"[label="1"]
"(static)org.joda.time.YearMonthDay.size(org.joda.time.YearMonthDay )int"->"int"[label="1"]
"(static)org.joda.time.YearMonthDay.toDateMidnight(org.joda.time.YearMonthDay )org.joda.time.DateMidnight"->"org.joda.time.DateMidnight"[label="1"]
"(static)org.joda.time.YearMonthDay.toDateMidnight(org.joda.time.YearMonthDay org.joda.time.DateTimeZone )org.joda.time.DateMidnight"->"org.joda.time.DateMidnight"[label="1"]
"(static)org.joda.time.YearMonthDay.toDateTime(org.joda.time.YearMonthDay org.joda.time.TimeOfDay )org.joda.time.DateTime"->"org.joda.time.DateTime"[label="1"]
"(static)org.joda.time.YearMonthDay.toDateTime(org.joda.time.YearMonthDay org.joda.time.TimeOfDay org.joda.time.DateTimeZone )org.joda.time.DateTime"->"org.joda.time.DateTime"[label="1"]
"(static)org.joda.time.YearMonthDay.toDateTimeAtCurrentTime(org.joda.time.YearMonthDay )org.joda.time.DateTime"->"org.joda.time.DateTime"[label="1"]
"(static)org.joda.time.YearMonthDay.toDateTimeAtCurrentTime(org.joda.time.YearMonthDay org.joda.time.DateTimeZone )org.joda.time.DateTime"->"org.joda.time.DateTime"[label="1"]
"(static)org.joda.time.YearMonthDay.toDateTimeAtMidnight(org.joda.time.YearMonthDay )org.joda.time.DateTime"->"org.joda.time.DateTime"[label="1"]
"(static)org.joda.time.YearMonthDay.toDateTimeAtMidnight(org.joda.time.YearMonthDay org.joda.time.DateTimeZone )org.joda.time.DateTime"->"org.joda.time.DateTime"[label="1"]
"(static)org.joda.time.YearMonthDay.toInterval(org.joda.time.YearMonthDay )org.joda.time.Interval"->"org.joda.time.Interval"[label="1"]
"(static)org.joda.time.YearMonthDay.toInterval(org.joda.time.YearMonthDay org.joda.time.DateTimeZone )org.joda.time.Interval"->"org.joda.time.Interval"[label="1"]
"(static)org.joda.time.YearMonthDay.toLocalDate(org.joda.time.YearMonthDay )org.joda.time.LocalDate"->"org.joda.time.LocalDate"[label="1"]
"(static)org.joda.time.YearMonthDay.withChronologyRetainFields(org.joda.time.YearMonthDay org.joda.time.Chronology )org.joda.time.YearMonthDay"->"org.joda.time.YearMonthDay"[label="1"]
"(static)org.joda.time.YearMonthDay.withDayOfMonth(org.joda.time.YearMonthDay int )org.joda.time.YearMonthDay"->"org.joda.time.YearMonthDay"[label="1"]
"(static)org.joda.time.YearMonthDay.withField(org.joda.time.YearMonthDay org.joda.time.DateTimeFieldType int )org.joda.time.YearMonthDay"->"org.joda.time.YearMonthDay"[label="1"]
"(static)org.joda.time.YearMonthDay.withFieldAdded(org.joda.time.YearMonthDay org.joda.time.DurationFieldType int )org.joda.time.YearMonthDay"->"org.joda.time.YearMonthDay"[label="1"]
"(static)org.joda.time.YearMonthDay.withMonthOfYear(org.joda.time.YearMonthDay int )org.joda.time.YearMonthDay"->"org.joda.time.YearMonthDay"[label="1"]
"(static)org.joda.time.YearMonthDay.withPeriodAdded(org.joda.time.YearMonthDay org.joda.time.ReadablePeriod int )org.joda.time.YearMonthDay"->"org.joda.time.YearMonthDay"[label="1"]
"(static)org.joda.time.YearMonthDay.withYear(org.joda.time.YearMonthDay int )org.joda.time.YearMonthDay"->"org.joda.time.YearMonthDay"[label="1"]
"(static)org.joda.time.YearMonthDay.year(org.joda.time.YearMonthDay )org.joda.time.YearMonthDay$Property"->"org.joda.time.YearMonthDay$Property"[label="1"]
"(static)org.joda.time.Years.dividedBy(org.joda.time.Years int )org.joda.time.Years"->"org.joda.time.Years"[label="1"]
"(static)org.joda.time.Years.getFieldType(org.joda.time.Years )org.joda.time.DurationFieldType"->"org.joda.time.DurationFieldType"[label="1"]
"(static)org.joda.time.Years.getPeriodType(org.joda.time.Years )org.joda.time.PeriodType"->"org.joda.time.PeriodType"[label="1"]
"(static)org.joda.time.Years.getYears(org.joda.time.Years )int"->"int"[label="1"]
"(static)org.joda.time.Years.isGreaterThan(org.joda.time.Years org.joda.time.Years )boolean"->"boolean"[label="1"]
"(static)org.joda.time.Years.isLessThan(org.joda.time.Years org.joda.time.Years )boolean"->"boolean"[label="1"]
"(static)org.joda.time.Years.minus(org.joda.time.Years int )org.joda.time.Years"->"org.joda.time.Years"[label="1"]
"(static)org.joda.time.Years.minus(org.joda.time.Years org.joda.time.Years )org.joda.time.Years"->"org.joda.time.Years"[label="1"]
"(static)org.joda.time.Years.multipliedBy(org.joda.time.Years int )org.joda.time.Years"->"org.joda.time.Years"[label="1"]
"(static)org.joda.time.Years.negated(org.joda.time.Years )org.joda.time.Years"->"org.joda.time.Years"[label="1"]
"(static)org.joda.time.Years.plus(org.joda.time.Years int )org.joda.time.Years"->"org.joda.time.Years"[label="1"]
"(static)org.joda.time.Years.plus(org.joda.time.Years org.joda.time.Years )org.joda.time.Years"->"org.joda.time.Years"[label="1"]
"(static)org.joda.time.base.AbstractDateTime.get(org.joda.time.base.AbstractDateTime org.joda.time.DateTimeFieldType )int"->"int"[label="1"]
"(static)org.joda.time.base.AbstractDateTime.getCenturyOfEra(org.joda.time.base.AbstractDateTime )int"->"int"[label="1"]
"(static)org.joda.time.base.AbstractDateTime.getDayOfMonth(org.joda.time.base.AbstractDateTime )int"->"int"[label="1"]
"(static)org.joda.time.base.AbstractDateTime.getDayOfWeek(org.joda.time.base.AbstractDateTime )int"->"int"[label="1"]
"(static)org.joda.time.base.AbstractDateTime.getDayOfYear(org.joda.time.base.AbstractDateTime )int"->"int"[label="1"]
"(static)org.joda.time.base.AbstractDateTime.getEra(org.joda.time.base.AbstractDateTime )int"->"int"[label="1"]
"(static)org.joda.time.base.AbstractDateTime.getHourOfDay(org.joda.time.base.AbstractDateTime )int"->"int"[label="1"]
"(static)org.joda.time.base.AbstractDateTime.getMillisOfDay(org.joda.time.base.AbstractDateTime )int"->"int"[label="1"]
"(static)org.joda.time.base.AbstractDateTime.getMillisOfSecond(org.joda.time.base.AbstractDateTime )int"->"int"[label="1"]
"(static)org.joda.time.base.AbstractDateTime.getMinuteOfDay(org.joda.time.base.AbstractDateTime )int"->"int"[label="1"]
"(static)org.joda.time.base.AbstractDateTime.getMinuteOfHour(org.joda.time.base.AbstractDateTime )int"->"int"[label="1"]
"(static)org.joda.time.base.AbstractDateTime.getMonthOfYear(org.joda.time.base.AbstractDateTime )int"->"int"[label="1"]
"(static)org.joda.time.base.AbstractDateTime.getSecondOfDay(org.joda.time.base.AbstractDateTime )int"->"int"[label="1"]
"(static)org.joda.time.base.AbstractDateTime.getSecondOfMinute(org.joda.time.base.AbstractDateTime )int"->"int"[label="1"]
"(static)org.joda.time.base.AbstractDateTime.getWeekOfWeekyear(org.joda.time.base.AbstractDateTime )int"->"int"[label="1"]
"(static)org.joda.time.base.AbstractDateTime.getWeekyear(org.joda.time.base.AbstractDateTime )int"->"int"[label="1"]
"(static)org.joda.time.base.AbstractDateTime.getYear(org.joda.time.base.AbstractDateTime )int"->"int"[label="1"]
"(static)org.joda.time.base.AbstractDateTime.getYearOfCentury(org.joda.time.base.AbstractDateTime )int"->"int"[label="1"]
"(static)org.joda.time.base.AbstractDateTime.getYearOfEra(org.joda.time.base.AbstractDateTime )int"->"int"[label="1"]
"(static)org.joda.time.base.AbstractDateTime.toCalendar(org.joda.time.base.AbstractDateTime java.util.Locale )java.util.Calendar"->"java.util.Calendar"[label="1"]
"(static)org.joda.time.base.AbstractDateTime.toGregorianCalendar(org.joda.time.base.AbstractDateTime )java.util.GregorianCalendar"->"java.util.GregorianCalendar"[label="1"]
"(static)org.joda.time.base.AbstractDuration.equals(org.joda.time.base.AbstractDuration java.lang.Object )boolean"->"boolean"[label="1"]
"(static)org.joda.time.base.AbstractDuration.isEqual(org.joda.time.base.AbstractDuration org.joda.time.ReadableDuration )boolean"->"boolean"[label="1"]
"(static)org.joda.time.base.AbstractDuration.isLongerThan(org.joda.time.base.AbstractDuration org.joda.time.ReadableDuration )boolean"->"boolean"[label="1"]
"(static)org.joda.time.base.AbstractDuration.isShorterThan(org.joda.time.base.AbstractDuration org.joda.time.ReadableDuration )boolean"->"boolean"[label="1"]
"(static)org.joda.time.base.AbstractDuration.toDuration(org.joda.time.base.AbstractDuration )org.joda.time.Duration"->"org.joda.time.Duration"[label="1"]
"(static)org.joda.time.base.AbstractDuration.toPeriod(org.joda.time.base.AbstractDuration )org.joda.time.Period"->"org.joda.time.Period"[label="1"]
"(static)org.joda.time.base.AbstractInstant.equals(org.joda.time.base.AbstractInstant java.lang.Object )boolean"->"boolean"[label="1"]
"(static)org.joda.time.base.AbstractInstant.get(org.joda.time.base.AbstractInstant org.joda.time.DateTimeField )int"->"int"[label="1"]
"(static)org.joda.time.base.AbstractInstant.get(org.joda.time.base.AbstractInstant org.joda.time.DateTimeFieldType )int"->"int"[label="1"]
"(static)org.joda.time.base.AbstractInstant.getZone(org.joda.time.base.AbstractInstant )org.joda.time.DateTimeZone"->"org.joda.time.DateTimeZone"[label="1"]
"(static)org.joda.time.base.AbstractInstant.isAfter(org.joda.time.base.AbstractInstant long )boolean"->"boolean"[label="1"]
"(static)org.joda.time.base.AbstractInstant.isAfter(org.joda.time.base.AbstractInstant org.joda.time.ReadableInstant )boolean"->"boolean"[label="1"]
"(static)org.joda.time.base.AbstractInstant.isAfterNow(org.joda.time.base.AbstractInstant )boolean"->"boolean"[label="1"]
"(static)org.joda.time.base.AbstractInstant.isBefore(org.joda.time.base.AbstractInstant long )boolean"->"boolean"[label="1"]
"(static)org.joda.time.base.AbstractInstant.isBefore(org.joda.time.base.AbstractInstant org.joda.time.ReadableInstant )boolean"->"boolean"[label="1"]
"(static)org.joda.time.base.AbstractInstant.isBeforeNow(org.joda.time.base.AbstractInstant )boolean"->"boolean"[label="1"]
"(static)org.joda.time.base.AbstractInstant.isEqual(org.joda.time.base.AbstractInstant long )boolean"->"boolean"[label="1"]
"(static)org.joda.time.base.AbstractInstant.isEqual(org.joda.time.base.AbstractInstant org.joda.time.ReadableInstant )boolean"->"boolean"[label="1"]
"(static)org.joda.time.base.AbstractInstant.isEqualNow(org.joda.time.base.AbstractInstant )boolean"->"boolean"[label="1"]
"(static)org.joda.time.base.AbstractInstant.isSupported(org.joda.time.base.AbstractInstant org.joda.time.DateTimeFieldType )boolean"->"boolean"[label="1"]
"(static)org.joda.time.base.AbstractInstant.toDate(org.joda.time.base.AbstractInstant )java.util.Date"->"java.util.Date"[label="1"]
"(static)org.joda.time.base.AbstractInstant.toDateTime(org.joda.time.base.AbstractInstant )org.joda.time.DateTime"->"org.joda.time.DateTime"[label="1"]
"(static)org.joda.time.base.AbstractInstant.toDateTime(org.joda.time.base.AbstractInstant org.joda.time.Chronology )org.joda.time.DateTime"->"org.joda.time.DateTime"[label="1"]
"(static)org.joda.time.base.AbstractInstant.toDateTime(org.joda.time.base.AbstractInstant org.joda.time.DateTimeZone )org.joda.time.DateTime"->"org.joda.time.DateTime"[label="1"]
"(static)org.joda.time.base.AbstractInstant.toDateTimeISO(org.joda.time.base.AbstractInstant )org.joda.time.DateTime"->"org.joda.time.DateTime"[label="1"]
"(static)org.joda.time.base.AbstractInstant.toInstant(org.joda.time.base.AbstractInstant )org.joda.time.Instant"->"org.joda.time.Instant"[label="1"]
"(static)org.joda.time.base.AbstractInstant.toMutableDateTime(org.joda.time.base.AbstractInstant )org.joda.time.MutableDateTime"->"org.joda.time.MutableDateTime"[label="1"]
"(static)org.joda.time.base.AbstractInstant.toMutableDateTime(org.joda.time.base.AbstractInstant org.joda.time.Chronology )org.joda.time.MutableDateTime"->"org.joda.time.MutableDateTime"[label="1"]
"(static)org.joda.time.base.AbstractInstant.toMutableDateTime(org.joda.time.base.AbstractInstant org.joda.time.DateTimeZone )org.joda.time.MutableDateTime"->"org.joda.time.MutableDateTime"[label="1"]
"(static)org.joda.time.base.AbstractInstant.toMutableDateTimeISO(org.joda.time.base.AbstractInstant )org.joda.time.MutableDateTime"->"org.joda.time.MutableDateTime"[label="1"]
"(static)org.joda.time.base.AbstractInterval.containsNow(org.joda.time.base.AbstractInterval )boolean"->"boolean"[label="1"]
"(static)org.joda.time.base.AbstractInterval.equals(org.joda.time.base.AbstractInterval java.lang.Object )boolean"->"boolean"[label="1"]
"(static)org.joda.time.base.AbstractInterval.getEnd(org.joda.time.base.AbstractInterval )org.joda.time.DateTime"->"org.joda.time.DateTime"[label="1"]
"(static)org.joda.time.base.AbstractInterval.getStart(org.joda.time.base.AbstractInterval )org.joda.time.DateTime"->"org.joda.time.DateTime"[label="1"]
"(static)org.joda.time.base.AbstractInterval.isAfter(org.joda.time.base.AbstractInterval long )boolean"->"boolean"[label="1"]
"(static)org.joda.time.base.AbstractInterval.isAfter(org.joda.time.base.AbstractInterval org.joda.time.ReadableInstant )boolean"->"boolean"[label="1"]
"(static)org.joda.time.base.AbstractInterval.isAfter(org.joda.time.base.AbstractInterval org.joda.time.ReadableInterval )boolean"->"boolean"[label="1"]
"(static)org.joda.time.base.AbstractInterval.isAfterNow(org.joda.time.base.AbstractInterval )boolean"->"boolean"[label="1"]
"(static)org.joda.time.base.AbstractInterval.isBefore(org.joda.time.base.AbstractInterval long )boolean"->"boolean"[label="1"]
"(static)org.joda.time.base.AbstractInterval.isBefore(org.joda.time.base.AbstractInterval org.joda.time.ReadableInstant )boolean"->"boolean"[label="1"]
"(static)org.joda.time.base.AbstractInterval.isBefore(org.joda.time.base.AbstractInterval org.joda.time.ReadableInterval )boolean"->"boolean"[label="1"]
"(static)org.joda.time.base.AbstractInterval.isBeforeNow(org.joda.time.base.AbstractInterval )boolean"->"boolean"[label="1"]
"(static)org.joda.time.base.AbstractInterval.isEqual(org.joda.time.base.AbstractInterval org.joda.time.ReadableInterval )boolean"->"boolean"[label="1"]
"(static)org.joda.time.base.AbstractInterval.overlaps(org.joda.time.base.AbstractInterval org.joda.time.ReadableInterval )boolean"->"boolean"[label="1"]
"(static)org.joda.time.base.AbstractInterval.toDuration(org.joda.time.base.AbstractInterval )org.joda.time.Duration"->"org.joda.time.Duration"[label="1"]
"(static)org.joda.time.base.AbstractInterval.toDurationMillis(org.joda.time.base.AbstractInterval )long"->"long"[label="1"]
"(static)org.joda.time.base.AbstractInterval.toInterval(org.joda.time.base.AbstractInterval )org.joda.time.Interval"->"org.joda.time.Interval"[label="1"]
"(static)org.joda.time.base.AbstractInterval.toMutableInterval(org.joda.time.base.AbstractInterval )org.joda.time.MutableInterval"->"org.joda.time.MutableInterval"[label="1"]
"(static)org.joda.time.base.AbstractInterval.toPeriod(org.joda.time.base.AbstractInterval )org.joda.time.Period"->"org.joda.time.Period"[label="1"]
"(static)org.joda.time.base.AbstractInterval.toPeriod(org.joda.time.base.AbstractInterval org.joda.time.PeriodType )org.joda.time.Period"->"org.joda.time.Period"[label="1"]
"(static)org.joda.time.base.AbstractPartial.equals(org.joda.time.base.AbstractPartial java.lang.Object )boolean"->"boolean"[label="1"]
"(static)org.joda.time.base.AbstractPartial.get(org.joda.time.base.AbstractPartial org.joda.time.DateTimeFieldType )int"->"int"[label="1"]
"(static)org.joda.time.base.AbstractPartial.getField(org.joda.time.base.AbstractPartial int )org.joda.time.DateTimeField"->"org.joda.time.DateTimeField"[label="1"]
"(static)org.joda.time.base.AbstractPartial.getFieldType(org.joda.time.base.AbstractPartial int )org.joda.time.DateTimeFieldType"->"org.joda.time.DateTimeFieldType"[label="1"]
"(static)org.joda.time.base.AbstractPartial.getFieldTypes(org.joda.time.base.AbstractPartial )org.joda.time.DateTimeFieldType[]"->"org.joda.time.DateTimeFieldType[]"[label="1"]
"(static)org.joda.time.base.AbstractPartial.getFields(org.joda.time.base.AbstractPartial )org.joda.time.DateTimeField[]"->"org.joda.time.DateTimeField[]"[label="1"]
"(static)org.joda.time.base.AbstractPartial.getValues(org.joda.time.base.AbstractPartial )int[]"->"int[]"[label="1"]
"(static)org.joda.time.base.AbstractPartial.indexOf(org.joda.time.base.AbstractPartial org.joda.time.DateTimeFieldType )int"->"int"[label="1"]
"(static)org.joda.time.base.AbstractPartial.isAfter(org.joda.time.base.AbstractPartial org.joda.time.ReadablePartial )boolean"->"boolean"[label="1"]
"(static)org.joda.time.base.AbstractPartial.isBefore(org.joda.time.base.AbstractPartial org.joda.time.ReadablePartial )boolean"->"boolean"[label="1"]
"(static)org.joda.time.base.AbstractPartial.isEqual(org.joda.time.base.AbstractPartial org.joda.time.ReadablePartial )boolean"->"boolean"[label="1"]
"(static)org.joda.time.base.AbstractPartial.isSupported(org.joda.time.base.AbstractPartial org.joda.time.DateTimeFieldType )boolean"->"boolean"[label="1"]
"(static)org.joda.time.base.AbstractPartial.toDateTime(org.joda.time.base.AbstractPartial org.joda.time.ReadableInstant )org.joda.time.DateTime"->"org.joda.time.DateTime"[label="1"]
"(static)org.joda.time.base.AbstractPeriod.equals(org.joda.time.base.AbstractPeriod java.lang.Object )boolean"->"boolean"[label="1"]
"(static)org.joda.time.base.AbstractPeriod.get(org.joda.time.base.AbstractPeriod org.joda.time.DurationFieldType )int"->"int"[label="1"]
"(static)org.joda.time.base.AbstractPeriod.getFieldType(org.joda.time.base.AbstractPeriod int )org.joda.time.DurationFieldType"->"org.joda.time.DurationFieldType"[label="1"]
"(static)org.joda.time.base.AbstractPeriod.getFieldTypes(org.joda.time.base.AbstractPeriod )org.joda.time.DurationFieldType[]"->"org.joda.time.DurationFieldType[]"[label="1"]
"(static)org.joda.time.base.AbstractPeriod.getValues(org.joda.time.base.AbstractPeriod )int[]"->"int[]"[label="1"]
"(static)org.joda.time.base.AbstractPeriod.indexOf(org.joda.time.base.AbstractPeriod org.joda.time.DurationFieldType )int"->"int"[label="1"]
"(static)org.joda.time.base.AbstractPeriod.isSupported(org.joda.time.base.AbstractPeriod org.joda.time.DurationFieldType )boolean"->"boolean"[label="1"]
"(static)org.joda.time.base.AbstractPeriod.size(org.joda.time.base.AbstractPeriod )int"->"int"[label="1"]
"(static)org.joda.time.base.AbstractPeriod.toMutablePeriod(org.joda.time.base.AbstractPeriod )org.joda.time.MutablePeriod"->"org.joda.time.MutablePeriod"[label="1"]
"(static)org.joda.time.base.AbstractPeriod.toPeriod(org.joda.time.base.AbstractPeriod )org.joda.time.Period"->"org.joda.time.Period"[label="1"]
"(static)org.joda.time.base.BaseDateTime.getChronology(org.joda.time.base.BaseDateTime )org.joda.time.Chronology"->"org.joda.time.Chronology"[label="1"]
"(static)org.joda.time.base.BaseDateTime.getMillis(org.joda.time.base.BaseDateTime )long"->"long"[label="1"]
"(static)org.joda.time.base.BaseDuration.getMillis(org.joda.time.base.BaseDuration )long"->"long"[label="1"]
"(static)org.joda.time.base.BaseDuration.toIntervalFrom(org.joda.time.base.BaseDuration org.joda.time.ReadableInstant )org.joda.time.Interval"->"org.joda.time.Interval"[label="1"]
"(static)org.joda.time.base.BaseDuration.toIntervalTo(org.joda.time.base.BaseDuration org.joda.time.ReadableInstant )org.joda.time.Interval"->"org.joda.time.Interval"[label="1"]
"(static)org.joda.time.base.BaseDuration.toPeriod(org.joda.time.base.BaseDuration org.joda.time.Chronology )org.joda.time.Period"->"org.joda.time.Period"[label="1"]
"(static)org.joda.time.base.BaseDuration.toPeriod(org.joda.time.base.BaseDuration org.joda.time.PeriodType )org.joda.time.Period"->"org.joda.time.Period"[label="1"]
"(static)org.joda.time.base.BaseDuration.toPeriod(org.joda.time.base.BaseDuration org.joda.time.PeriodType org.joda.time.Chronology )org.joda.time.Period"->"org.joda.time.Period"[label="1"]
"(static)org.joda.time.base.BaseDuration.toPeriodFrom(org.joda.time.base.BaseDuration org.joda.time.ReadableInstant )org.joda.time.Period"->"org.joda.time.Period"[label="1"]
"(static)org.joda.time.base.BaseDuration.toPeriodFrom(org.joda.time.base.BaseDuration org.joda.time.ReadableInstant org.joda.time.PeriodType )org.joda.time.Period"->"org.joda.time.Period"[label="1"]
"(static)org.joda.time.base.BaseDuration.toPeriodTo(org.joda.time.base.BaseDuration org.joda.time.ReadableInstant )org.joda.time.Period"->"org.joda.time.Period"[label="1"]
"(static)org.joda.time.base.BaseDuration.toPeriodTo(org.joda.time.base.BaseDuration org.joda.time.ReadableInstant org.joda.time.PeriodType )org.joda.time.Period"->"org.joda.time.Period"[label="1"]
"(static)org.joda.time.base.BaseInterval.getChronology(org.joda.time.base.BaseInterval )org.joda.time.Chronology"->"org.joda.time.Chronology"[label="1"]
"(static)org.joda.time.base.BaseInterval.getEndMillis(org.joda.time.base.BaseInterval )long"->"long"[label="1"]
"(static)org.joda.time.base.BaseInterval.getStartMillis(org.joda.time.base.BaseInterval )long"->"long"[label="1"]
"(static)org.joda.time.base.BasePartial.getChronology(org.joda.time.base.BasePartial )org.joda.time.Chronology"->"org.joda.time.Chronology"[label="1"]
"(static)org.joda.time.base.BasePartial.getValue(org.joda.time.base.BasePartial int )int"->"int"[label="1"]
"(static)org.joda.time.base.BasePartial.getValues(org.joda.time.base.BasePartial )int[]"->"int[]"[label="1"]
"(static)org.joda.time.base.BasePeriod$1.getPeriodType(org.joda.time.base.BasePeriod$1 )org.joda.time.PeriodType"->"org.joda.time.PeriodType"[label="1"]
"(static)org.joda.time.base.BasePeriod$1.getValue(org.joda.time.base.BasePeriod$1 int )int"->"int"[label="1"]
"(static)org.joda.time.base.BasePeriod.getPeriodType(org.joda.time.base.BasePeriod )org.joda.time.PeriodType"->"org.joda.time.PeriodType"[label="1"]
"(static)org.joda.time.base.BasePeriod.getValue(org.joda.time.base.BasePeriod int )int"->"int"[label="1"]
"(static)org.joda.time.base.BasePeriod.toDurationFrom(org.joda.time.base.BasePeriod org.joda.time.ReadableInstant )org.joda.time.Duration"->"org.joda.time.Duration"[label="1"]
"(static)org.joda.time.base.BasePeriod.toDurationTo(org.joda.time.base.BasePeriod org.joda.time.ReadableInstant )org.joda.time.Duration"->"org.joda.time.Duration"[label="1"]
"(static)org.joda.time.base.BaseSingleFieldPeriod.equals(org.joda.time.base.BaseSingleFieldPeriod java.lang.Object )boolean"->"boolean"[label="1"]
"(static)org.joda.time.base.BaseSingleFieldPeriod.get(org.joda.time.base.BaseSingleFieldPeriod org.joda.time.DurationFieldType )int"->"int"[label="1"]
"(static)org.joda.time.base.BaseSingleFieldPeriod.getFieldType(org.joda.time.base.BaseSingleFieldPeriod )org.joda.time.DurationFieldType"->"org.joda.time.DurationFieldType"[label="1"]
"(static)org.joda.time.base.BaseSingleFieldPeriod.getFieldType(org.joda.time.base.BaseSingleFieldPeriod int )org.joda.time.DurationFieldType"->"org.joda.time.DurationFieldType"[label="1"]
"(static)org.joda.time.base.BaseSingleFieldPeriod.getPeriodType(org.joda.time.base.BaseSingleFieldPeriod )org.joda.time.PeriodType"->"org.joda.time.PeriodType"[label="1"]
"(static)org.joda.time.base.BaseSingleFieldPeriod.getValue(org.joda.time.base.BaseSingleFieldPeriod int )int"->"int"[label="1"]
"(static)org.joda.time.base.BaseSingleFieldPeriod.isSupported(org.joda.time.base.BaseSingleFieldPeriod org.joda.time.DurationFieldType )boolean"->"boolean"[label="1"]
"(static)org.joda.time.base.BaseSingleFieldPeriod.size(org.joda.time.base.BaseSingleFieldPeriod )int"->"int"[label="1"]
"(static)org.joda.time.base.BaseSingleFieldPeriod.toMutablePeriod(org.joda.time.base.BaseSingleFieldPeriod )org.joda.time.MutablePeriod"->"org.joda.time.MutablePeriod"[label="1"]
"(static)org.joda.time.base.BaseSingleFieldPeriod.toPeriod(org.joda.time.base.BaseSingleFieldPeriod )org.joda.time.Period"->"org.joda.time.Period"[label="1"]
"(static)org.joda.time.chrono.AssembledChronology.centuries(org.joda.time.chrono.AssembledChronology )org.joda.time.DurationField"->"org.joda.time.DurationField"[label="1"]
"(static)org.joda.time.chrono.AssembledChronology.centuryOfEra(org.joda.time.chrono.AssembledChronology )org.joda.time.DateTimeField"->"org.joda.time.DateTimeField"[label="1"]
"(static)org.joda.time.chrono.AssembledChronology.clockhourOfDay(org.joda.time.chrono.AssembledChronology )org.joda.time.DateTimeField"->"org.joda.time.DateTimeField"[label="1"]
"(static)org.joda.time.chrono.AssembledChronology.clockhourOfHalfday(org.joda.time.chrono.AssembledChronology )org.joda.time.DateTimeField"->"org.joda.time.DateTimeField"[label="1"]
"(static)org.joda.time.chrono.AssembledChronology.dayOfMonth(org.joda.time.chrono.AssembledChronology )org.joda.time.DateTimeField"->"org.joda.time.DateTimeField"[label="1"]
"(static)org.joda.time.chrono.AssembledChronology.dayOfWeek(org.joda.time.chrono.AssembledChronology )org.joda.time.DateTimeField"->"org.joda.time.DateTimeField"[label="1"]
"(static)org.joda.time.chrono.AssembledChronology.dayOfYear(org.joda.time.chrono.AssembledChronology )org.joda.time.DateTimeField"->"org.joda.time.DateTimeField"[label="1"]
"(static)org.joda.time.chrono.AssembledChronology.days(org.joda.time.chrono.AssembledChronology )org.joda.time.DurationField"->"org.joda.time.DurationField"[label="1"]
"(static)org.joda.time.chrono.AssembledChronology.era(org.joda.time.chrono.AssembledChronology )org.joda.time.DateTimeField"->"org.joda.time.DateTimeField"[label="1"]
"(static)org.joda.time.chrono.AssembledChronology.eras(org.joda.time.chrono.AssembledChronology )org.joda.time.DurationField"->"org.joda.time.DurationField"[label="1"]
"(static)org.joda.time.chrono.AssembledChronology.getZone(org.joda.time.chrono.AssembledChronology )org.joda.time.DateTimeZone"->"org.joda.time.DateTimeZone"[label="1"]
"(static)org.joda.time.chrono.AssembledChronology.halfdayOfDay(org.joda.time.chrono.AssembledChronology )org.joda.time.DateTimeField"->"org.joda.time.DateTimeField"[label="1"]
"(static)org.joda.time.chrono.AssembledChronology.halfdays(org.joda.time.chrono.AssembledChronology )org.joda.time.DurationField"->"org.joda.time.DurationField"[label="1"]
"(static)org.joda.time.chrono.AssembledChronology.hourOfDay(org.joda.time.chrono.AssembledChronology )org.joda.time.DateTimeField"->"org.joda.time.DateTimeField"[label="1"]
"(static)org.joda.time.chrono.AssembledChronology.hourOfHalfday(org.joda.time.chrono.AssembledChronology )org.joda.time.DateTimeField"->"org.joda.time.DateTimeField"[label="1"]
"(static)org.joda.time.chrono.AssembledChronology.hours(org.joda.time.chrono.AssembledChronology )org.joda.time.DurationField"->"org.joda.time.DurationField"[label="1"]
"(static)org.joda.time.chrono.AssembledChronology.millis(org.joda.time.chrono.AssembledChronology )org.joda.time.DurationField"->"org.joda.time.DurationField"[label="1"]
"(static)org.joda.time.chrono.AssembledChronology.millisOfDay(org.joda.time.chrono.AssembledChronology )org.joda.time.DateTimeField"->"org.joda.time.DateTimeField"[label="1"]
"(static)org.joda.time.chrono.AssembledChronology.millisOfSecond(org.joda.time.chrono.AssembledChronology )org.joda.time.DateTimeField"->"org.joda.time.DateTimeField"[label="1"]
"(static)org.joda.time.chrono.AssembledChronology.minuteOfDay(org.joda.time.chrono.AssembledChronology )org.joda.time.DateTimeField"->"org.joda.time.DateTimeField"[label="1"]
"(static)org.joda.time.chrono.AssembledChronology.minuteOfHour(org.joda.time.chrono.AssembledChronology )org.joda.time.DateTimeField"->"org.joda.time.DateTimeField"[label="1"]
"(static)org.joda.time.chrono.AssembledChronology.minutes(org.joda.time.chrono.AssembledChronology )org.joda.time.DurationField"->"org.joda.time.DurationField"[label="1"]
"(static)org.joda.time.chrono.AssembledChronology.monthOfYear(org.joda.time.chrono.AssembledChronology )org.joda.time.DateTimeField"->"org.joda.time.DateTimeField"[label="1"]
"(static)org.joda.time.chrono.AssembledChronology.months(org.joda.time.chrono.AssembledChronology )org.joda.time.DurationField"->"org.joda.time.DurationField"[label="1"]
"(static)org.joda.time.chrono.AssembledChronology.secondOfDay(org.joda.time.chrono.AssembledChronology )org.joda.time.DateTimeField"->"org.joda.time.DateTimeField"[label="1"]
"(static)org.joda.time.chrono.AssembledChronology.secondOfMinute(org.joda.time.chrono.AssembledChronology )org.joda.time.DateTimeField"->"org.joda.time.DateTimeField"[label="1"]
"(static)org.joda.time.chrono.AssembledChronology.seconds(org.joda.time.chrono.AssembledChronology )org.joda.time.DurationField"->"org.joda.time.DurationField"[label="1"]
"(static)org.joda.time.chrono.AssembledChronology.weekOfWeekyear(org.joda.time.chrono.AssembledChronology )org.joda.time.DateTimeField"->"org.joda.time.DateTimeField"[label="1"]
"(static)org.joda.time.chrono.AssembledChronology.weeks(org.joda.time.chrono.AssembledChronology )org.joda.time.DurationField"->"org.joda.time.DurationField"[label="1"]
"(static)org.joda.time.chrono.AssembledChronology.weekyear(org.joda.time.chrono.AssembledChronology )org.joda.time.DateTimeField"->"org.joda.time.DateTimeField"[label="1"]
"(static)org.joda.time.chrono.AssembledChronology.weekyearOfCentury(org.joda.time.chrono.AssembledChronology )org.joda.time.DateTimeField"->"org.joda.time.DateTimeField"[label="1"]
"(static)org.joda.time.chrono.AssembledChronology.weekyears(org.joda.time.chrono.AssembledChronology )org.joda.time.DurationField"->"org.joda.time.DurationField"[label="1"]
"(static)org.joda.time.chrono.AssembledChronology.year(org.joda.time.chrono.AssembledChronology )org.joda.time.DateTimeField"->"org.joda.time.DateTimeField"[label="1"]
"(static)org.joda.time.chrono.AssembledChronology.yearOfCentury(org.joda.time.chrono.AssembledChronology )org.joda.time.DateTimeField"->"org.joda.time.DateTimeField"[label="1"]
"(static)org.joda.time.chrono.AssembledChronology.yearOfEra(org.joda.time.chrono.AssembledChronology )org.joda.time.DateTimeField"->"org.joda.time.DateTimeField"[label="1"]
"(static)org.joda.time.chrono.AssembledChronology.years(org.joda.time.chrono.AssembledChronology )org.joda.time.DurationField"->"org.joda.time.DurationField"[label="1"]
"(static)org.joda.time.chrono.BaseChronology.centuries(org.joda.time.chrono.BaseChronology )org.joda.time.DurationField"->"org.joda.time.DurationField"[label="1"]
"(static)org.joda.time.chrono.BaseChronology.centuryOfEra(org.joda.time.chrono.BaseChronology )org.joda.time.DateTimeField"->"org.joda.time.DateTimeField"[label="1"]
"(static)org.joda.time.chrono.BaseChronology.clockhourOfDay(org.joda.time.chrono.BaseChronology )org.joda.time.DateTimeField"->"org.joda.time.DateTimeField"[label="1"]
"(static)org.joda.time.chrono.BaseChronology.clockhourOfHalfday(org.joda.time.chrono.BaseChronology )org.joda.time.DateTimeField"->"org.joda.time.DateTimeField"[label="1"]
"(static)org.joda.time.chrono.BaseChronology.dayOfMonth(org.joda.time.chrono.BaseChronology )org.joda.time.DateTimeField"->"org.joda.time.DateTimeField"[label="1"]
"(static)org.joda.time.chrono.BaseChronology.dayOfWeek(org.joda.time.chrono.BaseChronology )org.joda.time.DateTimeField"->"org.joda.time.DateTimeField"[label="1"]
"(static)org.joda.time.chrono.BaseChronology.dayOfYear(org.joda.time.chrono.BaseChronology )org.joda.time.DateTimeField"->"org.joda.time.DateTimeField"[label="1"]
"(static)org.joda.time.chrono.BaseChronology.days(org.joda.time.chrono.BaseChronology )org.joda.time.DurationField"->"org.joda.time.DurationField"[label="1"]
"(static)org.joda.time.chrono.BaseChronology.era(org.joda.time.chrono.BaseChronology )org.joda.time.DateTimeField"->"org.joda.time.DateTimeField"[label="1"]
"(static)org.joda.time.chrono.BaseChronology.eras(org.joda.time.chrono.BaseChronology )org.joda.time.DurationField"->"org.joda.time.DurationField"[label="1"]
"(static)org.joda.time.chrono.BaseChronology.get(org.joda.time.chrono.BaseChronology org.joda.time.ReadablePartial long )int[]"->"int[]"[label="1"]
"(static)org.joda.time.chrono.BaseChronology.get(org.joda.time.chrono.BaseChronology org.joda.time.ReadablePeriod long )int[]"->"int[]"[label="1"]
"(static)org.joda.time.chrono.BaseChronology.getZone(org.joda.time.chrono.BaseChronology )org.joda.time.DateTimeZone"->"org.joda.time.DateTimeZone"[label="1"]
"(static)org.joda.time.chrono.BaseChronology.halfdayOfDay(org.joda.time.chrono.BaseChronology )org.joda.time.DateTimeField"->"org.joda.time.DateTimeField"[label="1"]
"(static)org.joda.time.chrono.BaseChronology.halfdays(org.joda.time.chrono.BaseChronology )org.joda.time.DurationField"->"org.joda.time.DurationField"[label="1"]
"(static)org.joda.time.chrono.BaseChronology.hourOfDay(org.joda.time.chrono.BaseChronology )org.joda.time.DateTimeField"->"org.joda.time.DateTimeField"[label="1"]
"(static)org.joda.time.chrono.BaseChronology.hourOfHalfday(org.joda.time.chrono.BaseChronology )org.joda.time.DateTimeField"->"org.joda.time.DateTimeField"[label="1"]
"(static)org.joda.time.chrono.BaseChronology.hours(org.joda.time.chrono.BaseChronology )org.joda.time.DurationField"->"org.joda.time.DurationField"[label="1"]
"(static)org.joda.time.chrono.BaseChronology.millis(org.joda.time.chrono.BaseChronology )org.joda.time.DurationField"->"org.joda.time.DurationField"[label="1"]
"(static)org.joda.time.chrono.BaseChronology.millisOfDay(org.joda.time.chrono.BaseChronology )org.joda.time.DateTimeField"->"org.joda.time.DateTimeField"[label="1"]
"(static)org.joda.time.chrono.BaseChronology.millisOfSecond(org.joda.time.chrono.BaseChronology )org.joda.time.DateTimeField"->"org.joda.time.DateTimeField"[label="1"]
"(static)org.joda.time.chrono.BaseChronology.minuteOfDay(org.joda.time.chrono.BaseChronology )org.joda.time.DateTimeField"->"org.joda.time.DateTimeField"[label="1"]
"(static)org.joda.time.chrono.BaseChronology.minuteOfHour(org.joda.time.chrono.BaseChronology )org.joda.time.DateTimeField"->"org.joda.time.DateTimeField"[label="1"]
"(static)org.joda.time.chrono.BaseChronology.minutes(org.joda.time.chrono.BaseChronology )org.joda.time.DurationField"->"org.joda.time.DurationField"[label="1"]
"(static)org.joda.time.chrono.BaseChronology.monthOfYear(org.joda.time.chrono.BaseChronology )org.joda.time.DateTimeField"->"org.joda.time.DateTimeField"[label="1"]
"(static)org.joda.time.chrono.BaseChronology.months(org.joda.time.chrono.BaseChronology )org.joda.time.DurationField"->"org.joda.time.DurationField"[label="1"]
"(static)org.joda.time.chrono.BaseChronology.secondOfDay(org.joda.time.chrono.BaseChronology )org.joda.time.DateTimeField"->"org.joda.time.DateTimeField"[label="1"]
"(static)org.joda.time.chrono.BaseChronology.secondOfMinute(org.joda.time.chrono.BaseChronology )org.joda.time.DateTimeField"->"org.joda.time.DateTimeField"[label="1"]
"(static)org.joda.time.chrono.BaseChronology.seconds(org.joda.time.chrono.BaseChronology )org.joda.time.DurationField"->"org.joda.time.DurationField"[label="1"]
"(static)org.joda.time.chrono.BaseChronology.set(org.joda.time.chrono.BaseChronology org.joda.time.ReadablePartial long )long"->"long"[label="1"]
"(static)org.joda.time.chrono.BaseChronology.weekOfWeekyear(org.joda.time.chrono.BaseChronology )org.joda.time.DateTimeField"->"org.joda.time.DateTimeField"[label="1"]
"(static)org.joda.time.chrono.BaseChronology.weeks(org.joda.time.chrono.BaseChronology )org.joda.time.DurationField"->"org.joda.time.DurationField"[label="1"]
"(static)org.joda.time.chrono.BaseChronology.weekyear(org.joda.time.chrono.BaseChronology )org.joda.time.DateTimeField"->"org.joda.time.DateTimeField"[label="1"]
"(static)org.joda.time.chrono.BaseChronology.weekyearOfCentury(org.joda.time.chrono.BaseChronology )org.joda.time.DateTimeField"->"org.joda.time.DateTimeField"[label="1"]
"(static)org.joda.time.chrono.BaseChronology.weekyears(org.joda.time.chrono.BaseChronology )org.joda.time.DurationField"->"org.joda.time.DurationField"[label="1"]
"(static)org.joda.time.chrono.BaseChronology.withUTC(org.joda.time.chrono.BaseChronology )org.joda.time.Chronology"->"org.joda.time.Chronology"[label="1"]
"(static)org.joda.time.chrono.BaseChronology.withZone(org.joda.time.chrono.BaseChronology org.joda.time.DateTimeZone )org.joda.time.Chronology"->"org.joda.time.Chronology"[label="1"]
"(static)org.joda.time.chrono.BaseChronology.year(org.joda.time.chrono.BaseChronology )org.joda.time.DateTimeField"->"org.joda.time.DateTimeField"[label="1"]
"(static)org.joda.time.chrono.BaseChronology.yearOfCentury(org.joda.time.chrono.BaseChronology )org.joda.time.DateTimeField"->"org.joda.time.DateTimeField"[label="1"]
"(static)org.joda.time.chrono.BaseChronology.yearOfEra(org.joda.time.chrono.BaseChronology )org.joda.time.DateTimeField"->"org.joda.time.DateTimeField"[label="1"]
"(static)org.joda.time.chrono.BaseChronology.years(org.joda.time.chrono.BaseChronology )org.joda.time.DurationField"->"org.joda.time.DurationField"[label="1"]
"(static)org.joda.time.chrono.BasicChronology$HalfdayField.getAsText(org.joda.time.chrono.BasicChronology$HalfdayField int java.util.Locale )java.lang.String"->"java.lang.String"[label="1"]
"(static)org.joda.time.chrono.BasicChronology$HalfdayField.getMaximumTextLength(org.joda.time.chrono.BasicChronology$HalfdayField java.util.Locale )int"->"int"[label="1"]
"(static)org.joda.time.chrono.BasicChronology.equals(org.joda.time.chrono.BasicChronology java.lang.Object )boolean"->"boolean"[label="1"]
"(static)org.joda.time.chrono.BasicChronology.getMinimumDaysInFirstWeek(org.joda.time.chrono.BasicChronology )int"->"int"[label="1"]
"(static)org.joda.time.chrono.BasicChronology.getZone(org.joda.time.chrono.BasicChronology )org.joda.time.DateTimeZone"->"org.joda.time.DateTimeZone"[label="1"]
"(static)org.joda.time.chrono.BasicDayOfMonthDateTimeField.get(org.joda.time.chrono.BasicDayOfMonthDateTimeField long )int"->"int"[label="1"]
"(static)org.joda.time.chrono.BasicDayOfMonthDateTimeField.getMaximumValue(org.joda.time.chrono.BasicDayOfMonthDateTimeField )int"->"int"[label="1"]
"(static)org.joda.time.chrono.BasicDayOfMonthDateTimeField.getMaximumValue(org.joda.time.chrono.BasicDayOfMonthDateTimeField long )int"->"int"[label="1"]
"(static)org.joda.time.chrono.BasicDayOfMonthDateTimeField.getMaximumValue(org.joda.time.chrono.BasicDayOfMonthDateTimeField org.joda.time.ReadablePartial )int"->"int"[label="1"]
"(static)org.joda.time.chrono.BasicDayOfMonthDateTimeField.getMaximumValue(org.joda.time.chrono.BasicDayOfMonthDateTimeField org.joda.time.ReadablePartial int[] )int"->"int"[label="1"]
"(static)org.joda.time.chrono.BasicDayOfMonthDateTimeField.getMinimumValue(org.joda.time.chrono.BasicDayOfMonthDateTimeField )int"->"int"[label="1"]
"(static)org.joda.time.chrono.BasicDayOfMonthDateTimeField.getRangeDurationField(org.joda.time.chrono.BasicDayOfMonthDateTimeField )org.joda.time.DurationField"->"org.joda.time.DurationField"[label="1"]
"(static)org.joda.time.chrono.BasicDayOfMonthDateTimeField.isLeap(org.joda.time.chrono.BasicDayOfMonthDateTimeField long )boolean"->"boolean"[label="1"]
"(static)org.joda.time.chrono.BasicDayOfYearDateTimeField.get(org.joda.time.chrono.BasicDayOfYearDateTimeField long )int"->"int"[label="1"]
"(static)org.joda.time.chrono.BasicDayOfYearDateTimeField.getMaximumValue(org.joda.time.chrono.BasicDayOfYearDateTimeField )int"->"int"[label="1"]
"(static)org.joda.time.chrono.BasicDayOfYearDateTimeField.getMaximumValue(org.joda.time.chrono.BasicDayOfYearDateTimeField long )int"->"int"[label="1"]
"(static)org.joda.time.chrono.BasicDayOfYearDateTimeField.getMaximumValue(org.joda.time.chrono.BasicDayOfYearDateTimeField org.joda.time.ReadablePartial )int"->"int"[label="1"]
"(static)org.joda.time.chrono.BasicDayOfYearDateTimeField.getMaximumValue(org.joda.time.chrono.BasicDayOfYearDateTimeField org.joda.time.ReadablePartial int[] )int"->"int"[label="1"]
"(static)org.joda.time.chrono.BasicDayOfYearDateTimeField.getMinimumValue(org.joda.time.chrono.BasicDayOfYearDateTimeField )int"->"int"[label="1"]
"(static)org.joda.time.chrono.BasicDayOfYearDateTimeField.getRangeDurationField(org.joda.time.chrono.BasicDayOfYearDateTimeField )org.joda.time.DurationField"->"org.joda.time.DurationField"[label="1"]
"(static)org.joda.time.chrono.BasicDayOfYearDateTimeField.isLeap(org.joda.time.chrono.BasicDayOfYearDateTimeField long )boolean"->"boolean"[label="1"]
"(static)org.joda.time.chrono.BasicMonthOfYearDateTimeField.addWrapField(org.joda.time.chrono.BasicMonthOfYearDateTimeField long int )long"->"long"[label="1"]
"(static)org.joda.time.chrono.BasicMonthOfYearDateTimeField.get(org.joda.time.chrono.BasicMonthOfYearDateTimeField long )int"->"int"[label="1"]
"(static)org.joda.time.chrono.BasicMonthOfYearDateTimeField.getDifferenceAsLong(org.joda.time.chrono.BasicMonthOfYearDateTimeField long long )long"->"long"[label="1"]
"(static)org.joda.time.chrono.BasicMonthOfYearDateTimeField.getLeapAmount(org.joda.time.chrono.BasicMonthOfYearDateTimeField long )int"->"int"[label="1"]
"(static)org.joda.time.chrono.BasicMonthOfYearDateTimeField.getLeapDurationField(org.joda.time.chrono.BasicMonthOfYearDateTimeField )org.joda.time.DurationField"->"org.joda.time.DurationField"[label="1"]
"(static)org.joda.time.chrono.BasicMonthOfYearDateTimeField.getMaximumValue(org.joda.time.chrono.BasicMonthOfYearDateTimeField )int"->"int"[label="1"]
"(static)org.joda.time.chrono.BasicMonthOfYearDateTimeField.getMinimumValue(org.joda.time.chrono.BasicMonthOfYearDateTimeField )int"->"int"[label="1"]
"(static)org.joda.time.chrono.BasicMonthOfYearDateTimeField.getRangeDurationField(org.joda.time.chrono.BasicMonthOfYearDateTimeField )org.joda.time.DurationField"->"org.joda.time.DurationField"[label="1"]
"(static)org.joda.time.chrono.BasicMonthOfYearDateTimeField.isLeap(org.joda.time.chrono.BasicMonthOfYearDateTimeField long )boolean"->"boolean"[label="1"]
"(static)org.joda.time.chrono.BasicMonthOfYearDateTimeField.isLenient(org.joda.time.chrono.BasicMonthOfYearDateTimeField )boolean"->"boolean"[label="1"]
"(static)org.joda.time.chrono.BasicMonthOfYearDateTimeField.remainder(org.joda.time.chrono.BasicMonthOfYearDateTimeField long )long"->"long"[label="1"]
"(static)org.joda.time.chrono.BasicMonthOfYearDateTimeField.roundFloor(org.joda.time.chrono.BasicMonthOfYearDateTimeField long )long"->"long"[label="1"]
"(static)org.joda.time.chrono.BasicMonthOfYearDateTimeField.set(org.joda.time.chrono.BasicMonthOfYearDateTimeField long int )long"->"long"[label="1"]
"(static)org.joda.time.chrono.BasicSingleEraDateTimeField.get(org.joda.time.chrono.BasicSingleEraDateTimeField long )int"->"int"[label="1"]
"(static)org.joda.time.chrono.BasicSingleEraDateTimeField.getAsText(org.joda.time.chrono.BasicSingleEraDateTimeField int java.util.Locale )java.lang.String"->"java.lang.String"[label="1"]
"(static)org.joda.time.chrono.BasicSingleEraDateTimeField.getDurationField(org.joda.time.chrono.BasicSingleEraDateTimeField )org.joda.time.DurationField"->"org.joda.time.DurationField"[label="1"]
"(static)org.joda.time.chrono.BasicSingleEraDateTimeField.getMaximumTextLength(org.joda.time.chrono.BasicSingleEraDateTimeField java.util.Locale )int"->"int"[label="1"]
"(static)org.joda.time.chrono.BasicSingleEraDateTimeField.getMaximumValue(org.joda.time.chrono.BasicSingleEraDateTimeField )int"->"int"[label="1"]
"(static)org.joda.time.chrono.BasicSingleEraDateTimeField.getMinimumValue(org.joda.time.chrono.BasicSingleEraDateTimeField )int"->"int"[label="1"]
"(static)org.joda.time.chrono.BasicSingleEraDateTimeField.getRangeDurationField(org.joda.time.chrono.BasicSingleEraDateTimeField )org.joda.time.DurationField"->"org.joda.time.DurationField"[label="1"]
"(static)org.joda.time.chrono.BasicSingleEraDateTimeField.isLenient(org.joda.time.chrono.BasicSingleEraDateTimeField )boolean"->"boolean"[label="1"]
"(static)org.joda.time.chrono.BasicSingleEraDateTimeField.roundCeiling(org.joda.time.chrono.BasicSingleEraDateTimeField long )long"->"long"[label="1"]
"(static)org.joda.time.chrono.BasicSingleEraDateTimeField.roundFloor(org.joda.time.chrono.BasicSingleEraDateTimeField long )long"->"long"[label="1"]
"(static)org.joda.time.chrono.BasicSingleEraDateTimeField.roundHalfCeiling(org.joda.time.chrono.BasicSingleEraDateTimeField long )long"->"long"[label="1"]
"(static)org.joda.time.chrono.BasicSingleEraDateTimeField.roundHalfEven(org.joda.time.chrono.BasicSingleEraDateTimeField long )long"->"long"[label="1"]
"(static)org.joda.time.chrono.BasicSingleEraDateTimeField.roundHalfFloor(org.joda.time.chrono.BasicSingleEraDateTimeField long )long"->"long"[label="1"]
"(static)org.joda.time.chrono.BasicSingleEraDateTimeField.set(org.joda.time.chrono.BasicSingleEraDateTimeField long int )long"->"long"[label="1"]
"(static)org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField.get(org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField long )int"->"int"[label="1"]
"(static)org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField.getMaximumValue(org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField )int"->"int"[label="1"]
"(static)org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField.getMaximumValue(org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField long )int"->"int"[label="1"]
"(static)org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField.getMaximumValue(org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField org.joda.time.ReadablePartial )int"->"int"[label="1"]
"(static)org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField.getMaximumValue(org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField org.joda.time.ReadablePartial int[] )int"->"int"[label="1"]
"(static)org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField.getMinimumValue(org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField )int"->"int"[label="1"]
"(static)org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField.getRangeDurationField(org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField )org.joda.time.DurationField"->"org.joda.time.DurationField"[label="1"]
"(static)org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField.remainder(org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField long )long"->"long"[label="1"]
"(static)org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField.roundCeiling(org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField long )long"->"long"[label="1"]
"(static)org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField.roundFloor(org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField long )long"->"long"[label="1"]
"(static)org.joda.time.chrono.BasicWeekyearDateTimeField.addWrapField(org.joda.time.chrono.BasicWeekyearDateTimeField long int )long"->"long"[label="1"]
"(static)org.joda.time.chrono.BasicWeekyearDateTimeField.get(org.joda.time.chrono.BasicWeekyearDateTimeField long )int"->"int"[label="1"]
"(static)org.joda.time.chrono.BasicWeekyearDateTimeField.getDifferenceAsLong(org.joda.time.chrono.BasicWeekyearDateTimeField long long )long"->"long"[label="1"]
"(static)org.joda.time.chrono.BasicWeekyearDateTimeField.getLeapAmount(org.joda.time.chrono.BasicWeekyearDateTimeField long )int"->"int"[label="1"]
"(static)org.joda.time.chrono.BasicWeekyearDateTimeField.getLeapDurationField(org.joda.time.chrono.BasicWeekyearDateTimeField )org.joda.time.DurationField"->"org.joda.time.DurationField"[label="1"]
"(static)org.joda.time.chrono.BasicWeekyearDateTimeField.getMaximumValue(org.joda.time.chrono.BasicWeekyearDateTimeField )int"->"int"[label="1"]
"(static)org.joda.time.chrono.BasicWeekyearDateTimeField.getMinimumValue(org.joda.time.chrono.BasicWeekyearDateTimeField )int"->"int"[label="1"]
"(static)org.joda.time.chrono.BasicWeekyearDateTimeField.getRangeDurationField(org.joda.time.chrono.BasicWeekyearDateTimeField )org.joda.time.DurationField"->"org.joda.time.DurationField"[label="1"]
"(static)org.joda.time.chrono.BasicWeekyearDateTimeField.isLeap(org.joda.time.chrono.BasicWeekyearDateTimeField long )boolean"->"boolean"[label="1"]
"(static)org.joda.time.chrono.BasicWeekyearDateTimeField.isLenient(org.joda.time.chrono.BasicWeekyearDateTimeField )boolean"->"boolean"[label="1"]
"(static)org.joda.time.chrono.BasicWeekyearDateTimeField.remainder(org.joda.time.chrono.BasicWeekyearDateTimeField long )long"->"long"[label="1"]
"(static)org.joda.time.chrono.BasicWeekyearDateTimeField.roundFloor(org.joda.time.chrono.BasicWeekyearDateTimeField long )long"->"long"[label="1"]
"(static)org.joda.time.chrono.BasicWeekyearDateTimeField.set(org.joda.time.chrono.BasicWeekyearDateTimeField long int )long"->"long"[label="1"]
"(static)org.joda.time.chrono.BasicYearDateTimeField.addWrapField(org.joda.time.chrono.BasicYearDateTimeField long int )long"->"long"[label="1"]
"(static)org.joda.time.chrono.BasicYearDateTimeField.get(org.joda.time.chrono.BasicYearDateTimeField long )int"->"int"[label="1"]
"(static)org.joda.time.chrono.BasicYearDateTimeField.getDifferenceAsLong(org.joda.time.chrono.BasicYearDateTimeField long long )long"->"long"[label="1"]
"(static)org.joda.time.chrono.BasicYearDateTimeField.getLeapAmount(org.joda.time.chrono.BasicYearDateTimeField long )int"->"int"[label="1"]
"(static)org.joda.time.chrono.BasicYearDateTimeField.getLeapDurationField(org.joda.time.chrono.BasicYearDateTimeField )org.joda.time.DurationField"->"org.joda.time.DurationField"[label="1"]
"(static)org.joda.time.chrono.BasicYearDateTimeField.getMaximumValue(org.joda.time.chrono.BasicYearDateTimeField )int"->"int"[label="1"]
"(static)org.joda.time.chrono.BasicYearDateTimeField.getMinimumValue(org.joda.time.chrono.BasicYearDateTimeField )int"->"int"[label="1"]
"(static)org.joda.time.chrono.BasicYearDateTimeField.getRangeDurationField(org.joda.time.chrono.BasicYearDateTimeField )org.joda.time.DurationField"->"org.joda.time.DurationField"[label="1"]
"(static)org.joda.time.chrono.BasicYearDateTimeField.isLeap(org.joda.time.chrono.BasicYearDateTimeField long )boolean"->"boolean"[label="1"]
"(static)org.joda.time.chrono.BasicYearDateTimeField.isLenient(org.joda.time.chrono.BasicYearDateTimeField )boolean"->"boolean"[label="1"]
"(static)org.joda.time.chrono.BasicYearDateTimeField.remainder(org.joda.time.chrono.BasicYearDateTimeField long )long"->"long"[label="1"]
"(static)org.joda.time.chrono.BasicYearDateTimeField.roundCeiling(org.joda.time.chrono.BasicYearDateTimeField long )long"->"long"[label="1"]
"(static)org.joda.time.chrono.BasicYearDateTimeField.roundFloor(org.joda.time.chrono.BasicYearDateTimeField long )long"->"long"[label="1"]
"(static)org.joda.time.chrono.BasicYearDateTimeField.set(org.joda.time.chrono.BasicYearDateTimeField long int )long"->"long"[label="1"]
"(static)org.joda.time.chrono.BuddhistChronology.equals(org.joda.time.chrono.BuddhistChronology java.lang.Object )boolean"->"boolean"[label="1"]
"(static)org.joda.time.chrono.BuddhistChronology.withUTC(org.joda.time.chrono.BuddhistChronology )org.joda.time.Chronology"->"org.joda.time.Chronology"[label="1"]
"(static)org.joda.time.chrono.BuddhistChronology.withZone(org.joda.time.chrono.BuddhistChronology org.joda.time.DateTimeZone )org.joda.time.Chronology"->"org.joda.time.Chronology"[label="1"]
"(static)org.joda.time.chrono.CopticChronology.withUTC(org.joda.time.chrono.CopticChronology )org.joda.time.Chronology"->"org.joda.time.Chronology"[label="1"]
"(static)org.joda.time.chrono.CopticChronology.withZone(org.joda.time.chrono.CopticChronology org.joda.time.DateTimeZone )org.joda.time.Chronology"->"org.joda.time.Chronology"[label="1"]
"(static)org.joda.time.chrono.EthiopicChronology.withUTC(org.joda.time.chrono.EthiopicChronology )org.joda.time.Chronology"->"org.joda.time.Chronology"[label="1"]
"(static)org.joda.time.chrono.EthiopicChronology.withZone(org.joda.time.chrono.EthiopicChronology org.joda.time.DateTimeZone )org.joda.time.Chronology"->"org.joda.time.Chronology"[label="1"]
"(static)org.joda.time.chrono.GJCacheKey.equals(org.joda.time.chrono.GJCacheKey java.lang.Object )boolean"->"boolean"[label="1"]
"(static)org.joda.time.chrono.GJChronology$CutoverField.get(org.joda.time.chrono.GJChronology$CutoverField long )int"->"int"[label="1"]
"(static)org.joda.time.chrono.GJChronology$CutoverField.getAsShortText(org.joda.time.chrono.GJChronology$CutoverField int java.util.Locale )java.lang.String"->"java.lang.String"[label="1"]
"(static)org.joda.time.chrono.GJChronology$CutoverField.getAsShortText(org.joda.time.chrono.GJChronology$CutoverField long java.util.Locale )java.lang.String"->"java.lang.String"[label="1"]
"(static)org.joda.time.chrono.GJChronology$CutoverField.getAsText(org.joda.time.chrono.GJChronology$CutoverField int java.util.Locale )java.lang.String"->"java.lang.String"[label="1"]
"(static)org.joda.time.chrono.GJChronology$CutoverField.getAsText(org.joda.time.chrono.GJChronology$CutoverField long java.util.Locale )java.lang.String"->"java.lang.String"[label="1"]
"(static)org.joda.time.chrono.GJChronology$CutoverField.getDifference(org.joda.time.chrono.GJChronology$CutoverField long long )int"->"int"[label="1"]
"(static)org.joda.time.chrono.GJChronology$CutoverField.getDifferenceAsLong(org.joda.time.chrono.GJChronology$CutoverField long long )long"->"long"[label="1"]
"(static)org.joda.time.chrono.GJChronology$CutoverField.getDurationField(org.joda.time.chrono.GJChronology$CutoverField )org.joda.time.DurationField"->"org.joda.time.DurationField"[label="1"]
"(static)org.joda.time.chrono.GJChronology$CutoverField.getLeapAmount(org.joda.time.chrono.GJChronology$CutoverField long )int"->"int"[label="1"]
"(static)org.joda.time.chrono.GJChronology$CutoverField.getLeapDurationField(org.joda.time.chrono.GJChronology$CutoverField )org.joda.time.DurationField"->"org.joda.time.DurationField"[label="1"]
"(static)org.joda.time.chrono.GJChronology$CutoverField.getMaximumShortTextLength(org.joda.time.chrono.GJChronology$CutoverField java.util.Locale )int"->"int"[label="1"]
"(static)org.joda.time.chrono.GJChronology$CutoverField.getMaximumTextLength(org.joda.time.chrono.GJChronology$CutoverField java.util.Locale )int"->"int"[label="1"]
"(static)org.joda.time.chrono.GJChronology$CutoverField.getMaximumValue(org.joda.time.chrono.GJChronology$CutoverField )int"->"int"[label="1"]
"(static)org.joda.time.chrono.GJChronology$CutoverField.getMaximumValue(org.joda.time.chrono.GJChronology$CutoverField long )int"->"int"[label="1"]
"(static)org.joda.time.chrono.GJChronology$CutoverField.getMaximumValue(org.joda.time.chrono.GJChronology$CutoverField org.joda.time.ReadablePartial )int"->"int"[label="1"]
"(static)org.joda.time.chrono.GJChronology$CutoverField.getMaximumValue(org.joda.time.chrono.GJChronology$CutoverField org.joda.time.ReadablePartial int[] )int"->"int"[label="1"]
"(static)org.joda.time.chrono.GJChronology$CutoverField.getMinimumValue(org.joda.time.chrono.GJChronology$CutoverField )int"->"int"[label="1"]
"(static)org.joda.time.chrono.GJChronology$CutoverField.getMinimumValue(org.joda.time.chrono.GJChronology$CutoverField long )int"->"int"[label="1"]
"(static)org.joda.time.chrono.GJChronology$CutoverField.getMinimumValue(org.joda.time.chrono.GJChronology$CutoverField org.joda.time.ReadablePartial )int"->"int"[label="1"]
"(static)org.joda.time.chrono.GJChronology$CutoverField.getMinimumValue(org.joda.time.chrono.GJChronology$CutoverField org.joda.time.ReadablePartial int[] )int"->"int"[label="1"]
"(static)org.joda.time.chrono.GJChronology$CutoverField.getRangeDurationField(org.joda.time.chrono.GJChronology$CutoverField )org.joda.time.DurationField"->"org.joda.time.DurationField"[label="1"]
"(static)org.joda.time.chrono.GJChronology$CutoverField.isLeap(org.joda.time.chrono.GJChronology$CutoverField long )boolean"->"boolean"[label="1"]
"(static)org.joda.time.chrono.GJChronology$CutoverField.isLenient(org.joda.time.chrono.GJChronology$CutoverField )boolean"->"boolean"[label="1"]
"(static)org.joda.time.chrono.GJChronology$CutoverField.roundCeiling(org.joda.time.chrono.GJChronology$CutoverField long )long"->"long"[label="1"]
"(static)org.joda.time.chrono.GJChronology$CutoverField.roundFloor(org.joda.time.chrono.GJChronology$CutoverField long )long"->"long"[label="1"]
"(static)org.joda.time.chrono.GJChronology$CutoverField.set(org.joda.time.chrono.GJChronology$CutoverField long int )long"->"long"[label="1"]
"(static)org.joda.time.chrono.GJChronology$ImpreciseCutoverField.getDifference(org.joda.time.chrono.GJChronology$ImpreciseCutoverField long long )int"->"int"[label="1"]
"(static)org.joda.time.chrono.GJChronology$ImpreciseCutoverField.getDifferenceAsLong(org.joda.time.chrono.GJChronology$ImpreciseCutoverField long long )long"->"long"[label="1"]
"(static)org.joda.time.chrono.GJChronology$ImpreciseCutoverField.getMaximumValue(org.joda.time.chrono.GJChronology$ImpreciseCutoverField long )int"->"int"[label="1"]
"(static)org.joda.time.chrono.GJChronology$ImpreciseCutoverField.getMinimumValue(org.joda.time.chrono.GJChronology$ImpreciseCutoverField long )int"->"int"[label="1"]
"(static)org.joda.time.chrono.GJChronology$LinkedDurationField.getDifference(org.joda.time.chrono.GJChronology$LinkedDurationField long long )int"->"int"[label="1"]
"(static)org.joda.time.chrono.GJChronology$LinkedDurationField.getDifferenceAsLong(org.joda.time.chrono.GJChronology$LinkedDurationField long long )long"->"long"[label="1"]
"(static)org.joda.time.chrono.GJChronology.equals(org.joda.time.chrono.GJChronology java.lang.Object )boolean"->"boolean"[label="1"]
"(static)org.joda.time.chrono.GJChronology.getGregorianCutover(org.joda.time.chrono.GJChronology )org.joda.time.Instant"->"org.joda.time.Instant"[label="1"]
"(static)org.joda.time.chrono.GJChronology.getMinimumDaysInFirstWeek(org.joda.time.chrono.GJChronology )int"->"int"[label="1"]
"(static)org.joda.time.chrono.GJChronology.getZone(org.joda.time.chrono.GJChronology )org.joda.time.DateTimeZone"->"org.joda.time.DateTimeZone"[label="1"]
"(static)org.joda.time.chrono.GJChronology.withUTC(org.joda.time.chrono.GJChronology )org.joda.time.Chronology"->"org.joda.time.Chronology"[label="1"]
"(static)org.joda.time.chrono.GJChronology.withZone(org.joda.time.chrono.GJChronology org.joda.time.DateTimeZone )org.joda.time.Chronology"->"org.joda.time.Chronology"[label="1"]
"(static)org.joda.time.chrono.GJDayOfWeekDateTimeField.get(org.joda.time.chrono.GJDayOfWeekDateTimeField long )int"->"int"[label="1"]
"(static)org.joda.time.chrono.GJDayOfWeekDateTimeField.getAsShortText(org.joda.time.chrono.GJDayOfWeekDateTimeField int java.util.Locale )java.lang.String"->"java.lang.String"[label="1"]
"(static)org.joda.time.chrono.GJDayOfWeekDateTimeField.getAsText(org.joda.time.chrono.GJDayOfWeekDateTimeField int java.util.Locale )java.lang.String"->"java.lang.String"[label="1"]
"(static)org.joda.time.chrono.GJDayOfWeekDateTimeField.getMaximumShortTextLength(org.joda.time.chrono.GJDayOfWeekDateTimeField java.util.Locale )int"->"int"[label="1"]
"(static)org.joda.time.chrono.GJDayOfWeekDateTimeField.getMaximumTextLength(org.joda.time.chrono.GJDayOfWeekDateTimeField java.util.Locale )int"->"int"[label="1"]
"(static)org.joda.time.chrono.GJDayOfWeekDateTimeField.getMaximumValue(org.joda.time.chrono.GJDayOfWeekDateTimeField )int"->"int"[label="1"]
"(static)org.joda.time.chrono.GJDayOfWeekDateTimeField.getMinimumValue(org.joda.time.chrono.GJDayOfWeekDateTimeField )int"->"int"[label="1"]
"(static)org.joda.time.chrono.GJDayOfWeekDateTimeField.getRangeDurationField(org.joda.time.chrono.GJDayOfWeekDateTimeField )org.joda.time.DurationField"->"org.joda.time.DurationField"[label="1"]
"(static)org.joda.time.chrono.GJEraDateTimeField.get(org.joda.time.chrono.GJEraDateTimeField long )int"->"int"[label="1"]
"(static)org.joda.time.chrono.GJEraDateTimeField.getAsText(org.joda.time.chrono.GJEraDateTimeField int java.util.Locale )java.lang.String"->"java.lang.String"[label="1"]
"(static)org.joda.time.chrono.GJEraDateTimeField.getDurationField(org.joda.time.chrono.GJEraDateTimeField )org.joda.time.DurationField"->"org.joda.time.DurationField"[label="1"]
"(static)org.joda.time.chrono.GJEraDateTimeField.getMaximumTextLength(org.joda.time.chrono.GJEraDateTimeField java.util.Locale )int"->"int"[label="1"]
"(static)org.joda.time.chrono.GJEraDateTimeField.getMaximumValue(org.joda.time.chrono.GJEraDateTimeField )int"->"int"[label="1"]
"(static)org.joda.time.chrono.GJEraDateTimeField.getMinimumValue(org.joda.time.chrono.GJEraDateTimeField )int"->"int"[label="1"]
"(static)org.joda.time.chrono.GJEraDateTimeField.getRangeDurationField(org.joda.time.chrono.GJEraDateTimeField )org.joda.time.DurationField"->"org.joda.time.DurationField"[label="1"]
"(static)org.joda.time.chrono.GJEraDateTimeField.isLenient(org.joda.time.chrono.GJEraDateTimeField )boolean"->"boolean"[label="1"]
"(static)org.joda.time.chrono.GJEraDateTimeField.roundCeiling(org.joda.time.chrono.GJEraDateTimeField long )long"->"long"[label="1"]
"(static)org.joda.time.chrono.GJEraDateTimeField.roundFloor(org.joda.time.chrono.GJEraDateTimeField long )long"->"long"[label="1"]
"(static)org.joda.time.chrono.GJEraDateTimeField.roundHalfCeiling(org.joda.time.chrono.GJEraDateTimeField long )long"->"long"[label="1"]
"(static)org.joda.time.chrono.GJEraDateTimeField.roundHalfEven(org.joda.time.chrono.GJEraDateTimeField long )long"->"long"[label="1"]
"(static)org.joda.time.chrono.GJEraDateTimeField.roundHalfFloor(org.joda.time.chrono.GJEraDateTimeField long )long"->"long"[label="1"]
"(static)org.joda.time.chrono.GJEraDateTimeField.set(org.joda.time.chrono.GJEraDateTimeField long int )long"->"long"[label="1"]
"(static)org.joda.time.chrono.GJLocaleSymbols.dayOfWeekTextToValue(org.joda.time.chrono.GJLocaleSymbols java.lang.String )int"->"int"[label="1"]
"(static)org.joda.time.chrono.GJLocaleSymbols.dayOfWeekValueToShortText(org.joda.time.chrono.GJLocaleSymbols int )java.lang.String"->"java.lang.String"[label="1"]
"(static)org.joda.time.chrono.GJLocaleSymbols.dayOfWeekValueToText(org.joda.time.chrono.GJLocaleSymbols int )java.lang.String"->"java.lang.String"[label="1"]
"(static)org.joda.time.chrono.GJLocaleSymbols.eraTextToValue(org.joda.time.chrono.GJLocaleSymbols java.lang.String )int"->"int"[label="1"]
"(static)org.joda.time.chrono.GJLocaleSymbols.eraValueToText(org.joda.time.chrono.GJLocaleSymbols int )java.lang.String"->"java.lang.String"[label="1"]
"(static)org.joda.time.chrono.GJLocaleSymbols.getDayOfWeekMaxShortTextLength(org.joda.time.chrono.GJLocaleSymbols )int"->"int"[label="1"]
"(static)org.joda.time.chrono.GJLocaleSymbols.getDayOfWeekMaxTextLength(org.joda.time.chrono.GJLocaleSymbols )int"->"int"[label="1"]
"(static)org.joda.time.chrono.GJLocaleSymbols.getEraMaxTextLength(org.joda.time.chrono.GJLocaleSymbols )int"->"int"[label="1"]
"(static)org.joda.time.chrono.GJLocaleSymbols.getHalfdayMaxTextLength(org.joda.time.chrono.GJLocaleSymbols )int"->"int"[label="1"]
"(static)org.joda.time.chrono.GJLocaleSymbols.getMonthMaxShortTextLength(org.joda.time.chrono.GJLocaleSymbols )int"->"int"[label="1"]
"(static)org.joda.time.chrono.GJLocaleSymbols.getMonthMaxTextLength(org.joda.time.chrono.GJLocaleSymbols )int"->"int"[label="1"]
"(static)org.joda.time.chrono.GJLocaleSymbols.halfdayTextToValue(org.joda.time.chrono.GJLocaleSymbols java.lang.String )int"->"int"[label="1"]
"(static)org.joda.time.chrono.GJLocaleSymbols.halfdayValueToText(org.joda.time.chrono.GJLocaleSymbols int )java.lang.String"->"java.lang.String"[label="1"]
"(static)org.joda.time.chrono.GJLocaleSymbols.monthOfYearTextToValue(org.joda.time.chrono.GJLocaleSymbols java.lang.String )int"->"int"[label="1"]
"(static)org.joda.time.chrono.GJLocaleSymbols.monthOfYearValueToShortText(org.joda.time.chrono.GJLocaleSymbols int )java.lang.String"->"java.lang.String"[label="1"]
"(static)org.joda.time.chrono.GJLocaleSymbols.monthOfYearValueToText(org.joda.time.chrono.GJLocaleSymbols int )java.lang.String"->"java.lang.String"[label="1"]
"(static)org.joda.time.chrono.GJMonthOfYearDateTimeField.getAsShortText(org.joda.time.chrono.GJMonthOfYearDateTimeField int java.util.Locale )java.lang.String"->"java.lang.String"[label="1"]
"(static)org.joda.time.chrono.GJMonthOfYearDateTimeField.getAsText(org.joda.time.chrono.GJMonthOfYearDateTimeField int java.util.Locale )java.lang.String"->"java.lang.String"[label="1"]
"(static)org.joda.time.chrono.GJMonthOfYearDateTimeField.getMaximumShortTextLength(org.joda.time.chrono.GJMonthOfYearDateTimeField java.util.Locale )int"->"int"[label="1"]
"(static)org.joda.time.chrono.GJMonthOfYearDateTimeField.getMaximumTextLength(org.joda.time.chrono.GJMonthOfYearDateTimeField java.util.Locale )int"->"int"[label="1"]
"(static)org.joda.time.chrono.GJYearOfEraDateTimeField.addWrapField(org.joda.time.chrono.GJYearOfEraDateTimeField long int )long"->"long"[label="1"]
"(static)org.joda.time.chrono.GJYearOfEraDateTimeField.get(org.joda.time.chrono.GJYearOfEraDateTimeField long )int"->"int"[label="1"]
"(static)org.joda.time.chrono.GJYearOfEraDateTimeField.getDifference(org.joda.time.chrono.GJYearOfEraDateTimeField long long )int"->"int"[label="1"]
"(static)org.joda.time.chrono.GJYearOfEraDateTimeField.getDifferenceAsLong(org.joda.time.chrono.GJYearOfEraDateTimeField long long )long"->"long"[label="1"]
"(static)org.joda.time.chrono.GJYearOfEraDateTimeField.getMaximumValue(org.joda.time.chrono.GJYearOfEraDateTimeField )int"->"int"[label="1"]
"(static)org.joda.time.chrono.GJYearOfEraDateTimeField.getMinimumValue(org.joda.time.chrono.GJYearOfEraDateTimeField )int"->"int"[label="1"]
"(static)org.joda.time.chrono.GJYearOfEraDateTimeField.getRangeDurationField(org.joda.time.chrono.GJYearOfEraDateTimeField )org.joda.time.DurationField"->"org.joda.time.DurationField"[label="1"]
"(static)org.joda.time.chrono.GJYearOfEraDateTimeField.remainder(org.joda.time.chrono.GJYearOfEraDateTimeField long )long"->"long"[label="1"]
"(static)org.joda.time.chrono.GJYearOfEraDateTimeField.roundCeiling(org.joda.time.chrono.GJYearOfEraDateTimeField long )long"->"long"[label="1"]
"(static)org.joda.time.chrono.GJYearOfEraDateTimeField.roundFloor(org.joda.time.chrono.GJYearOfEraDateTimeField long )long"->"long"[label="1"]
"(static)org.joda.time.chrono.GJYearOfEraDateTimeField.set(org.joda.time.chrono.GJYearOfEraDateTimeField long int )long"->"long"[label="1"]
"(static)org.joda.time.chrono.GregorianChronology.withUTC(org.joda.time.chrono.GregorianChronology )org.joda.time.Chronology"->"org.joda.time.Chronology"[label="1"]
"(static)org.joda.time.chrono.GregorianChronology.withZone(org.joda.time.chrono.GregorianChronology org.joda.time.DateTimeZone )org.joda.time.Chronology"->"org.joda.time.Chronology"[label="1"]
"(static)org.joda.time.chrono.ISOChronology.equals(org.joda.time.chrono.ISOChronology java.lang.Object )boolean"->"boolean"[label="1"]
"(static)org.joda.time.chrono.ISOChronology.withUTC(org.joda.time.chrono.ISOChronology )org.joda.time.Chronology"->"org.joda.time.Chronology"[label="1"]
"(static)org.joda.time.chrono.ISOChronology.withZone(org.joda.time.chrono.ISOChronology org.joda.time.DateTimeZone )org.joda.time.Chronology"->"org.joda.time.Chronology"[label="1"]
"(static)org.joda.time.chrono.ISOYearOfEraDateTimeField.addWrapField(org.joda.time.chrono.ISOYearOfEraDateTimeField long int )long"->"long"[label="1"]
"(static)org.joda.time.chrono.ISOYearOfEraDateTimeField.get(org.joda.time.chrono.ISOYearOfEraDateTimeField long )int"->"int"[label="1"]
"(static)org.joda.time.chrono.ISOYearOfEraDateTimeField.getDifference(org.joda.time.chrono.ISOYearOfEraDateTimeField long long )int"->"int"[label="1"]
"(static)org.joda.time.chrono.ISOYearOfEraDateTimeField.getDifferenceAsLong(org.joda.time.chrono.ISOYearOfEraDateTimeField long long )long"->"long"[label="1"]
"(static)org.joda.time.chrono.ISOYearOfEraDateTimeField.getMaximumValue(org.joda.time.chrono.ISOYearOfEraDateTimeField )int"->"int"[label="1"]
"(static)org.joda.time.chrono.ISOYearOfEraDateTimeField.getMinimumValue(org.joda.time.chrono.ISOYearOfEraDateTimeField )int"->"int"[label="1"]
"(static)org.joda.time.chrono.ISOYearOfEraDateTimeField.getRangeDurationField(org.joda.time.chrono.ISOYearOfEraDateTimeField )org.joda.time.DurationField"->"org.joda.time.DurationField"[label="1"]
"(static)org.joda.time.chrono.ISOYearOfEraDateTimeField.remainder(org.joda.time.chrono.ISOYearOfEraDateTimeField long )long"->"long"[label="1"]
"(static)org.joda.time.chrono.ISOYearOfEraDateTimeField.roundCeiling(org.joda.time.chrono.ISOYearOfEraDateTimeField long )long"->"long"[label="1"]
"(static)org.joda.time.chrono.ISOYearOfEraDateTimeField.roundFloor(org.joda.time.chrono.ISOYearOfEraDateTimeField long )long"->"long"[label="1"]
"(static)org.joda.time.chrono.ISOYearOfEraDateTimeField.set(org.joda.time.chrono.ISOYearOfEraDateTimeField long int )long"->"long"[label="1"]
"(static)org.joda.time.chrono.IslamicChronology$LeapYearPatternType.equals(org.joda.time.chrono.IslamicChronology$LeapYearPatternType java.lang.Object )boolean"->"boolean"[label="1"]
"(static)org.joda.time.chrono.IslamicChronology.equals(org.joda.time.chrono.IslamicChronology java.lang.Object )boolean"->"boolean"[label="1"]
"(static)org.joda.time.chrono.IslamicChronology.getLeapYearPatternType(org.joda.time.chrono.IslamicChronology )org.joda.time.chrono.IslamicChronology$LeapYearPatternType"->"org.joda.time.chrono.IslamicChronology$LeapYearPatternType"[label="1"]
"(static)org.joda.time.chrono.IslamicChronology.withUTC(org.joda.time.chrono.IslamicChronology )org.joda.time.Chronology"->"org.joda.time.Chronology"[label="1"]
"(static)org.joda.time.chrono.IslamicChronology.withZone(org.joda.time.chrono.IslamicChronology org.joda.time.DateTimeZone )org.joda.time.Chronology"->"org.joda.time.Chronology"[label="1"]
"(static)org.joda.time.chrono.JulianChronology.withUTC(org.joda.time.chrono.JulianChronology )org.joda.time.Chronology"->"org.joda.time.Chronology"[label="1"]
"(static)org.joda.time.chrono.JulianChronology.withZone(org.joda.time.chrono.JulianChronology org.joda.time.DateTimeZone )org.joda.time.Chronology"->"org.joda.time.Chronology"[label="1"]
"(static)org.joda.time.chrono.LenientChronology.equals(org.joda.time.chrono.LenientChronology java.lang.Object )boolean"->"boolean"[label="1"]
"(static)org.joda.time.chrono.LenientChronology.withUTC(org.joda.time.chrono.LenientChronology )org.joda.time.Chronology"->"org.joda.time.Chronology"[label="1"]
"(static)org.joda.time.chrono.LenientChronology.withZone(org.joda.time.chrono.LenientChronology org.joda.time.DateTimeZone )org.joda.time.Chronology"->"org.joda.time.Chronology"[label="1"]
"(static)org.joda.time.chrono.LimitChronology$LimitDateTimeField.addWrapField(org.joda.time.chrono.LimitChronology$LimitDateTimeField long int )long"->"long"[label="1"]
"(static)org.joda.time.chrono.LimitChronology$LimitDateTimeField.get(org.joda.time.chrono.LimitChronology$LimitDateTimeField long )int"->"int"[label="1"]
"(static)org.joda.time.chrono.LimitChronology$LimitDateTimeField.getAsShortText(org.joda.time.chrono.LimitChronology$LimitDateTimeField long java.util.Locale )java.lang.String"->"java.lang.String"[label="1"]
"(static)org.joda.time.chrono.LimitChronology$LimitDateTimeField.getAsText(org.joda.time.chrono.LimitChronology$LimitDateTimeField long java.util.Locale )java.lang.String"->"java.lang.String"[label="1"]
"(static)org.joda.time.chrono.LimitChronology$LimitDateTimeField.getDifference(org.joda.time.chrono.LimitChronology$LimitDateTimeField long long )int"->"int"[label="1"]
"(static)org.joda.time.chrono.LimitChronology$LimitDateTimeField.getDifferenceAsLong(org.joda.time.chrono.LimitChronology$LimitDateTimeField long long )long"->"long"[label="1"]
"(static)org.joda.time.chrono.LimitChronology$LimitDateTimeField.getDurationField(org.joda.time.chrono.LimitChronology$LimitDateTimeField )org.joda.time.DurationField"->"org.joda.time.DurationField"[label="1"]
"(static)org.joda.time.chrono.LimitChronology$LimitDateTimeField.getLeapAmount(org.joda.time.chrono.LimitChronology$LimitDateTimeField long )int"->"int"[label="1"]
"(static)org.joda.time.chrono.LimitChronology$LimitDateTimeField.getLeapDurationField(org.joda.time.chrono.LimitChronology$LimitDateTimeField )org.joda.time.DurationField"->"org.joda.time.DurationField"[label="1"]
"(static)org.joda.time.chrono.LimitChronology$LimitDateTimeField.getMaximumShortTextLength(org.joda.time.chrono.LimitChronology$LimitDateTimeField java.util.Locale )int"->"int"[label="1"]
"(static)org.joda.time.chrono.LimitChronology$LimitDateTimeField.getMaximumTextLength(org.joda.time.chrono.LimitChronology$LimitDateTimeField java.util.Locale )int"->"int"[label="1"]
"(static)org.joda.time.chrono.LimitChronology$LimitDateTimeField.getMaximumValue(org.joda.time.chrono.LimitChronology$LimitDateTimeField long )int"->"int"[label="1"]
"(static)org.joda.time.chrono.LimitChronology$LimitDateTimeField.getMinimumValue(org.joda.time.chrono.LimitChronology$LimitDateTimeField long )int"->"int"[label="1"]
"(static)org.joda.time.chrono.LimitChronology$LimitDateTimeField.getRangeDurationField(org.joda.time.chrono.LimitChronology$LimitDateTimeField )org.joda.time.DurationField"->"org.joda.time.DurationField"[label="1"]
"(static)org.joda.time.chrono.LimitChronology$LimitDateTimeField.isLeap(org.joda.time.chrono.LimitChronology$LimitDateTimeField long )boolean"->"boolean"[label="1"]
"(static)org.joda.time.chrono.LimitChronology$LimitDateTimeField.remainder(org.joda.time.chrono.LimitChronology$LimitDateTimeField long )long"->"long"[label="1"]
"(static)org.joda.time.chrono.LimitChronology$LimitDateTimeField.roundCeiling(org.joda.time.chrono.LimitChronology$LimitDateTimeField long )long"->"long"[label="1"]
"(static)org.joda.time.chrono.LimitChronology$LimitDateTimeField.roundFloor(org.joda.time.chrono.LimitChronology$LimitDateTimeField long )long"->"long"[label="1"]
"(static)org.joda.time.chrono.LimitChronology$LimitDateTimeField.roundHalfCeiling(org.joda.time.chrono.LimitChronology$LimitDateTimeField long )long"->"long"[label="1"]
"(static)org.joda.time.chrono.LimitChronology$LimitDateTimeField.roundHalfEven(org.joda.time.chrono.LimitChronology$LimitDateTimeField long )long"->"long"[label="1"]
"(static)org.joda.time.chrono.LimitChronology$LimitDateTimeField.roundHalfFloor(org.joda.time.chrono.LimitChronology$LimitDateTimeField long )long"->"long"[label="1"]
"(static)org.joda.time.chrono.LimitChronology$LimitDateTimeField.set(org.joda.time.chrono.LimitChronology$LimitDateTimeField long int )long"->"long"[label="1"]
"(static)org.joda.time.chrono.LimitChronology$LimitDurationField.getDifference(org.joda.time.chrono.LimitChronology$LimitDurationField long long )int"->"int"[label="1"]
"(static)org.joda.time.chrono.LimitChronology$LimitDurationField.getDifferenceAsLong(org.joda.time.chrono.LimitChronology$LimitDurationField long long )long"->"long"[label="1"]
"(static)org.joda.time.chrono.LimitChronology$LimitDurationField.getMillis(org.joda.time.chrono.LimitChronology$LimitDurationField int long )long"->"long"[label="1"]
"(static)org.joda.time.chrono.LimitChronology$LimitDurationField.getMillis(org.joda.time.chrono.LimitChronology$LimitDurationField long long )long"->"long"[label="1"]
"(static)org.joda.time.chrono.LimitChronology$LimitDurationField.getValue(org.joda.time.chrono.LimitChronology$LimitDurationField long long )int"->"int"[label="1"]
"(static)org.joda.time.chrono.LimitChronology$LimitDurationField.getValueAsLong(org.joda.time.chrono.LimitChronology$LimitDurationField long long )long"->"long"[label="1"]
"(static)org.joda.time.chrono.LimitChronology$LimitException.getMessage(org.joda.time.chrono.LimitChronology$LimitException )java.lang.String"->"java.lang.String"[label="1"]
"(static)org.joda.time.chrono.LimitChronology.equals(org.joda.time.chrono.LimitChronology java.lang.Object )boolean"->"boolean"[label="1"]
"(static)org.joda.time.chrono.LimitChronology.getLowerLimit(org.joda.time.chrono.LimitChronology )org.joda.time.DateTime"->"org.joda.time.DateTime"[label="1"]
"(static)org.joda.time.chrono.LimitChronology.getUpperLimit(org.joda.time.chrono.LimitChronology )org.joda.time.DateTime"->"org.joda.time.DateTime"[label="1"]
"(static)org.joda.time.chrono.LimitChronology.withUTC(org.joda.time.chrono.LimitChronology )org.joda.time.Chronology"->"org.joda.time.Chronology"[label="1"]
"(static)org.joda.time.chrono.LimitChronology.withZone(org.joda.time.chrono.LimitChronology org.joda.time.DateTimeZone )org.joda.time.Chronology"->"org.joda.time.Chronology"[label="1"]
"(static)org.joda.time.chrono.StrictChronology.equals(org.joda.time.chrono.StrictChronology java.lang.Object )boolean"->"boolean"[label="1"]
"(static)org.joda.time.chrono.StrictChronology.withUTC(org.joda.time.chrono.StrictChronology )org.joda.time.Chronology"->"org.joda.time.Chronology"[label="1"]
"(static)org.joda.time.chrono.StrictChronology.withZone(org.joda.time.chrono.StrictChronology org.joda.time.DateTimeZone )org.joda.time.Chronology"->"org.joda.time.Chronology"[label="1"]
"(static)org.joda.time.chrono.ZonedChronology$ZonedDateTimeField.addWrapField(org.joda.time.chrono.ZonedChronology$ZonedDateTimeField long int )long"->"long"[label="1"]
"(static)org.joda.time.chrono.ZonedChronology$ZonedDateTimeField.equals(org.joda.time.chrono.ZonedChronology$ZonedDateTimeField java.lang.Object )boolean"->"boolean"[label="1"]
"(static)org.joda.time.chrono.ZonedChronology$ZonedDateTimeField.get(org.joda.time.chrono.ZonedChronology$ZonedDateTimeField long )int"->"int"[label="1"]
"(static)org.joda.time.chrono.ZonedChronology$ZonedDateTimeField.getAsShortText(org.joda.time.chrono.ZonedChronology$ZonedDateTimeField int java.util.Locale )java.lang.String"->"java.lang.String"[label="1"]
"(static)org.joda.time.chrono.ZonedChronology$ZonedDateTimeField.getAsShortText(org.joda.time.chrono.ZonedChronology$ZonedDateTimeField long java.util.Locale )java.lang.String"->"java.lang.String"[label="1"]
"(static)org.joda.time.chrono.ZonedChronology$ZonedDateTimeField.getAsText(org.joda.time.chrono.ZonedChronology$ZonedDateTimeField int java.util.Locale )java.lang.String"->"java.lang.String"[label="1"]
"(static)org.joda.time.chrono.ZonedChronology$ZonedDateTimeField.getAsText(org.joda.time.chrono.ZonedChronology$ZonedDateTimeField long java.util.Locale )java.lang.String"->"java.lang.String"[label="1"]
"(static)org.joda.time.chrono.ZonedChronology$ZonedDateTimeField.getDifference(org.joda.time.chrono.ZonedChronology$ZonedDateTimeField long long )int"->"int"[label="1"]
"(static)org.joda.time.chrono.ZonedChronology$ZonedDateTimeField.getDifferenceAsLong(org.joda.time.chrono.ZonedChronology$ZonedDateTimeField long long )long"->"long"[label="1"]
"(static)org.joda.time.chrono.ZonedChronology$ZonedDateTimeField.getDurationField(org.joda.time.chrono.ZonedChronology$ZonedDateTimeField )org.joda.time.DurationField"->"org.joda.time.DurationField"[label="1"]
"(static)org.joda.time.chrono.ZonedChronology$ZonedDateTimeField.getLeapAmount(org.joda.time.chrono.ZonedChronology$ZonedDateTimeField long )int"->"int"[label="1"]
"(static)org.joda.time.chrono.ZonedChronology$ZonedDateTimeField.getLeapDurationField(org.joda.time.chrono.ZonedChronology$ZonedDateTimeField )org.joda.time.DurationField"->"org.joda.time.DurationField"[label="1"]
"(static)org.joda.time.chrono.ZonedChronology$ZonedDateTimeField.getMaximumShortTextLength(org.joda.time.chrono.ZonedChronology$ZonedDateTimeField java.util.Locale )int"->"int"[label="1"]
"(static)org.joda.time.chrono.ZonedChronology$ZonedDateTimeField.getMaximumTextLength(org.joda.time.chrono.ZonedChronology$ZonedDateTimeField java.util.Locale )int"->"int"[label="1"]
"(static)org.joda.time.chrono.ZonedChronology$ZonedDateTimeField.getMaximumValue(org.joda.time.chrono.ZonedChronology$ZonedDateTimeField )int"->"int"[label="1"]
"(static)org.joda.time.chrono.ZonedChronology$ZonedDateTimeField.getMaximumValue(org.joda.time.chrono.ZonedChronology$ZonedDateTimeField long )int"->"int"[label="1"]
"(static)org.joda.time.chrono.ZonedChronology$ZonedDateTimeField.getMaximumValue(org.joda.time.chrono.ZonedChronology$ZonedDateTimeField org.joda.time.ReadablePartial )int"->"int"[label="1"]
"(static)org.joda.time.chrono.ZonedChronology$ZonedDateTimeField.getMaximumValue(org.joda.time.chrono.ZonedChronology$ZonedDateTimeField org.joda.time.ReadablePartial int[] )int"->"int"[label="1"]
"(static)org.joda.time.chrono.ZonedChronology$ZonedDateTimeField.getMinimumValue(org.joda.time.chrono.ZonedChronology$ZonedDateTimeField )int"->"int"[label="1"]
"(static)org.joda.time.chrono.ZonedChronology$ZonedDateTimeField.getMinimumValue(org.joda.time.chrono.ZonedChronology$ZonedDateTimeField long )int"->"int"[label="1"]
"(static)org.joda.time.chrono.ZonedChronology$ZonedDateTimeField.getMinimumValue(org.joda.time.chrono.ZonedChronology$ZonedDateTimeField org.joda.time.ReadablePartial )int"->"int"[label="1"]
"(static)org.joda.time.chrono.ZonedChronology$ZonedDateTimeField.getMinimumValue(org.joda.time.chrono.ZonedChronology$ZonedDateTimeField org.joda.time.ReadablePartial int[] )int"->"int"[label="1"]
"(static)org.joda.time.chrono.ZonedChronology$ZonedDateTimeField.getRangeDurationField(org.joda.time.chrono.ZonedChronology$ZonedDateTimeField )org.joda.time.DurationField"->"org.joda.time.DurationField"[label="1"]
"(static)org.joda.time.chrono.ZonedChronology$ZonedDateTimeField.isLeap(org.joda.time.chrono.ZonedChronology$ZonedDateTimeField long )boolean"->"boolean"[label="1"]
"(static)org.joda.time.chrono.ZonedChronology$ZonedDateTimeField.isLenient(org.joda.time.chrono.ZonedChronology$ZonedDateTimeField )boolean"->"boolean"[label="1"]
"(static)org.joda.time.chrono.ZonedChronology$ZonedDateTimeField.remainder(org.joda.time.chrono.ZonedChronology$ZonedDateTimeField long )long"->"long"[label="1"]
"(static)org.joda.time.chrono.ZonedChronology$ZonedDateTimeField.roundCeiling(org.joda.time.chrono.ZonedChronology$ZonedDateTimeField long )long"->"long"[label="1"]
"(static)org.joda.time.chrono.ZonedChronology$ZonedDateTimeField.roundFloor(org.joda.time.chrono.ZonedChronology$ZonedDateTimeField long )long"->"long"[label="1"]
"(static)org.joda.time.chrono.ZonedChronology$ZonedDateTimeField.set(org.joda.time.chrono.ZonedChronology$ZonedDateTimeField long int )long"->"long"[label="1"]
"(static)org.joda.time.chrono.ZonedChronology$ZonedDurationField.equals(org.joda.time.chrono.ZonedChronology$ZonedDurationField java.lang.Object )boolean"->"boolean"[label="1"]
"(static)org.joda.time.chrono.ZonedChronology$ZonedDurationField.getDifference(org.joda.time.chrono.ZonedChronology$ZonedDurationField long long )int"->"int"[label="1"]
"(static)org.joda.time.chrono.ZonedChronology$ZonedDurationField.getDifferenceAsLong(org.joda.time.chrono.ZonedChronology$ZonedDurationField long long )long"->"long"[label="1"]
"(static)org.joda.time.chrono.ZonedChronology$ZonedDurationField.getMillis(org.joda.time.chrono.ZonedChronology$ZonedDurationField int long )long"->"long"[label="1"]
"(static)org.joda.time.chrono.ZonedChronology$ZonedDurationField.getMillis(org.joda.time.chrono.ZonedChronology$ZonedDurationField long long )long"->"long"[label="1"]
"(static)org.joda.time.chrono.ZonedChronology$ZonedDurationField.getUnitMillis(org.joda.time.chrono.ZonedChronology$ZonedDurationField )long"->"long"[label="1"]
"(static)org.joda.time.chrono.ZonedChronology$ZonedDurationField.getValue(org.joda.time.chrono.ZonedChronology$ZonedDurationField long long )int"->"int"[label="1"]
"(static)org.joda.time.chrono.ZonedChronology$ZonedDurationField.getValueAsLong(org.joda.time.chrono.ZonedChronology$ZonedDurationField long long )long"->"long"[label="1"]
"(static)org.joda.time.chrono.ZonedChronology$ZonedDurationField.isPrecise(org.joda.time.chrono.ZonedChronology$ZonedDurationField )boolean"->"boolean"[label="1"]
"(static)org.joda.time.chrono.ZonedChronology.equals(org.joda.time.chrono.ZonedChronology java.lang.Object )boolean"->"boolean"[label="1"]
"(static)org.joda.time.chrono.ZonedChronology.getZone(org.joda.time.chrono.ZonedChronology )org.joda.time.DateTimeZone"->"org.joda.time.DateTimeZone"[label="1"]
"(static)org.joda.time.chrono.ZonedChronology.withUTC(org.joda.time.chrono.ZonedChronology )org.joda.time.Chronology"->"org.joda.time.Chronology"[label="1"]
"(static)org.joda.time.chrono.ZonedChronology.withZone(org.joda.time.chrono.ZonedChronology org.joda.time.DateTimeZone )org.joda.time.Chronology"->"org.joda.time.Chronology"[label="1"]
"(static)org.joda.time.convert.AbstractConverter.getChronology(org.joda.time.convert.AbstractConverter java.lang.Object org.joda.time.Chronology )org.joda.time.Chronology"->"org.joda.time.Chronology"[label="1"]
"(static)org.joda.time.convert.AbstractConverter.getChronology(org.joda.time.convert.AbstractConverter java.lang.Object org.joda.time.DateTimeZone )org.joda.time.Chronology"->"org.joda.time.Chronology"[label="1"]
"(static)org.joda.time.convert.AbstractConverter.getInstantMillis(org.joda.time.convert.AbstractConverter java.lang.Object org.joda.time.Chronology )long"->"long"[label="1"]
"(static)org.joda.time.convert.AbstractConverter.getPeriodType(org.joda.time.convert.AbstractConverter java.lang.Object )org.joda.time.PeriodType"->"org.joda.time.PeriodType"[label="1"]
"(static)org.joda.time.convert.AbstractConverter.isReadableInterval(org.joda.time.convert.AbstractConverter java.lang.Object org.joda.time.Chronology )boolean"->"boolean"[label="1"]
"(static)org.joda.time.convert.CalendarConverter.getChronology(org.joda.time.convert.CalendarConverter java.lang.Object org.joda.time.Chronology )org.joda.time.Chronology"->"org.joda.time.Chronology"[label="1"]
"(static)org.joda.time.convert.CalendarConverter.getChronology(org.joda.time.convert.CalendarConverter java.lang.Object org.joda.time.DateTimeZone )org.joda.time.Chronology"->"org.joda.time.Chronology"[label="1"]
"(static)org.joda.time.convert.CalendarConverter.getInstantMillis(org.joda.time.convert.CalendarConverter java.lang.Object org.joda.time.Chronology )long"->"long"[label="1"]
"(static)org.joda.time.convert.CalendarConverter.getSupportedType(org.joda.time.convert.CalendarConverter )java.lang.Class"->"java.lang.Class"[label="1"]
"(static)org.joda.time.convert.Converter.getSupportedType(org.joda.time.convert.Converter )java.lang.Class"->"java.lang.Class"[label="1"]
"(static)org.joda.time.convert.ConverterManager.addDurationConverter(org.joda.time.convert.ConverterManager org.joda.time.convert.DurationConverter )org.joda.time.convert.DurationConverter"->"org.joda.time.convert.DurationConverter"[label="1"]
"(static)org.joda.time.convert.ConverterManager.addInstantConverter(org.joda.time.convert.ConverterManager org.joda.time.convert.InstantConverter )org.joda.time.convert.InstantConverter"->"org.joda.time.convert.InstantConverter"[label="1"]
"(static)org.joda.time.convert.ConverterManager.addIntervalConverter(org.joda.time.convert.ConverterManager org.joda.time.convert.IntervalConverter )org.joda.time.convert.IntervalConverter"->"org.joda.time.convert.IntervalConverter"[label="1"]
"(static)org.joda.time.convert.ConverterManager.addPartialConverter(org.joda.time.convert.ConverterManager org.joda.time.convert.PartialConverter )org.joda.time.convert.PartialConverter"->"org.joda.time.convert.PartialConverter"[label="1"]
"(static)org.joda.time.convert.ConverterManager.addPeriodConverter(org.joda.time.convert.ConverterManager org.joda.time.convert.PeriodConverter )org.joda.time.convert.PeriodConverter"->"org.joda.time.convert.PeriodConverter"[label="1"]
"(static)org.joda.time.convert.ConverterManager.getDurationConverter(org.joda.time.convert.ConverterManager java.lang.Object )org.joda.time.convert.DurationConverter"->"org.joda.time.convert.DurationConverter"[label="1"]
"(static)org.joda.time.convert.ConverterManager.getDurationConverters(org.joda.time.convert.ConverterManager )org.joda.time.convert.DurationConverter[]"->"org.joda.time.convert.DurationConverter[]"[label="1"]
"(static)org.joda.time.convert.ConverterManager.getInstantConverter(org.joda.time.convert.ConverterManager java.lang.Object )org.joda.time.convert.InstantConverter"->"org.joda.time.convert.InstantConverter"[label="1"]
"(static)org.joda.time.convert.ConverterManager.getInstantConverters(org.joda.time.convert.ConverterManager )org.joda.time.convert.InstantConverter[]"->"org.joda.time.convert.InstantConverter[]"[label="1"]
"(static)org.joda.time.convert.ConverterManager.getIntervalConverter(org.joda.time.convert.ConverterManager java.lang.Object )org.joda.time.convert.IntervalConverter"->"org.joda.time.convert.IntervalConverter"[label="1"]
"(static)org.joda.time.convert.ConverterManager.getIntervalConverters(org.joda.time.convert.ConverterManager )org.joda.time.convert.IntervalConverter[]"->"org.joda.time.convert.IntervalConverter[]"[label="1"]
"(static)org.joda.time.convert.ConverterManager.getPartialConverter(org.joda.time.convert.ConverterManager java.lang.Object )org.joda.time.convert.PartialConverter"->"org.joda.time.convert.PartialConverter"[label="1"]
"(static)org.joda.time.convert.ConverterManager.getPartialConverters(org.joda.time.convert.ConverterManager )org.joda.time.convert.PartialConverter[]"->"org.joda.time.convert.PartialConverter[]"[label="1"]
"(static)org.joda.time.convert.ConverterManager.getPeriodConverter(org.joda.time.convert.ConverterManager java.lang.Object )org.joda.time.convert.PeriodConverter"->"org.joda.time.convert.PeriodConverter"[label="1"]
"(static)org.joda.time.convert.ConverterManager.getPeriodConverters(org.joda.time.convert.ConverterManager )org.joda.time.convert.PeriodConverter[]"->"org.joda.time.convert.PeriodConverter[]"[label="1"]
"(static)org.joda.time.convert.ConverterManager.removeDurationConverter(org.joda.time.convert.ConverterManager org.joda.time.convert.DurationConverter )org.joda.time.convert.DurationConverter"->"org.joda.time.convert.DurationConverter"[label="1"]
"(static)org.joda.time.convert.ConverterManager.removeInstantConverter(org.joda.time.convert.ConverterManager org.joda.time.convert.InstantConverter )org.joda.time.convert.InstantConverter"->"org.joda.time.convert.InstantConverter"[label="1"]
"(static)org.joda.time.convert.ConverterManager.removeIntervalConverter(org.joda.time.convert.ConverterManager org.joda.time.convert.IntervalConverter )org.joda.time.convert.IntervalConverter"->"org.joda.time.convert.IntervalConverter"[label="1"]
"(static)org.joda.time.convert.ConverterManager.removePartialConverter(org.joda.time.convert.ConverterManager org.joda.time.convert.PartialConverter )org.joda.time.convert.PartialConverter"->"org.joda.time.convert.PartialConverter"[label="1"]
"(static)org.joda.time.convert.ConverterManager.removePeriodConverter(org.joda.time.convert.ConverterManager org.joda.time.convert.PeriodConverter )org.joda.time.convert.PeriodConverter"->"org.joda.time.convert.PeriodConverter"[label="1"]
"(static)org.joda.time.convert.DateConverter.getInstantMillis(org.joda.time.convert.DateConverter java.lang.Object org.joda.time.Chronology )long"->"long"[label="1"]
"(static)org.joda.time.convert.DateConverter.getSupportedType(org.joda.time.convert.DateConverter )java.lang.Class"->"java.lang.Class"[label="1"]
"(static)org.joda.time.convert.DurationConverter.getDurationMillis(org.joda.time.convert.DurationConverter java.lang.Object )long"->"long"[label="1"]
"(static)org.joda.time.convert.InstantConverter.getChronology(org.joda.time.convert.InstantConverter java.lang.Object org.joda.time.Chronology )org.joda.time.Chronology"->"org.joda.time.Chronology"[label="1"]
"(static)org.joda.time.convert.InstantConverter.getChronology(org.joda.time.convert.InstantConverter java.lang.Object org.joda.time.DateTimeZone )org.joda.time.Chronology"->"org.joda.time.Chronology"[label="1"]
"(static)org.joda.time.convert.InstantConverter.getInstantMillis(org.joda.time.convert.InstantConverter java.lang.Object org.joda.time.Chronology )long"->"long"[label="1"]
"(static)org.joda.time.convert.IntervalConverter.isReadableInterval(org.joda.time.convert.IntervalConverter java.lang.Object org.joda.time.Chronology )boolean"->"boolean"[label="1"]
"(static)org.joda.time.convert.LongConverter.getDurationMillis(org.joda.time.convert.LongConverter java.lang.Object )long"->"long"[label="1"]
"(static)org.joda.time.convert.LongConverter.getInstantMillis(org.joda.time.convert.LongConverter java.lang.Object org.joda.time.Chronology )long"->"long"[label="1"]
"(static)org.joda.time.convert.LongConverter.getSupportedType(org.joda.time.convert.LongConverter )java.lang.Class"->"java.lang.Class"[label="1"]
"(static)org.joda.time.convert.NullConverter.getDurationMillis(org.joda.time.convert.NullConverter java.lang.Object )long"->"long"[label="1"]
"(static)org.joda.time.convert.NullConverter.getSupportedType(org.joda.time.convert.NullConverter )java.lang.Class"->"java.lang.Class"[label="1"]
"(static)org.joda.time.convert.PartialConverter.getChronology(org.joda.time.convert.PartialConverter java.lang.Object org.joda.time.Chronology )org.joda.time.Chronology"->"org.joda.time.Chronology"[label="1"]
"(static)org.joda.time.convert.PartialConverter.getChronology(org.joda.time.convert.PartialConverter java.lang.Object org.joda.time.DateTimeZone )org.joda.time.Chronology"->"org.joda.time.Chronology"[label="1"]
"(static)org.joda.time.convert.PeriodConverter.getPeriodType(org.joda.time.convert.PeriodConverter java.lang.Object )org.joda.time.PeriodType"->"org.joda.time.PeriodType"[label="1"]
"(static)org.joda.time.convert.ReadableDurationConverter.getDurationMillis(org.joda.time.convert.ReadableDurationConverter java.lang.Object )long"->"long"[label="1"]
"(static)org.joda.time.convert.ReadableDurationConverter.getSupportedType(org.joda.time.convert.ReadableDurationConverter )java.lang.Class"->"java.lang.Class"[label="1"]
"(static)org.joda.time.convert.ReadableInstantConverter.getChronology(org.joda.time.convert.ReadableInstantConverter java.lang.Object org.joda.time.Chronology )org.joda.time.Chronology"->"org.joda.time.Chronology"[label="1"]
"(static)org.joda.time.convert.ReadableInstantConverter.getChronology(org.joda.time.convert.ReadableInstantConverter java.lang.Object org.joda.time.DateTimeZone )org.joda.time.Chronology"->"org.joda.time.Chronology"[label="1"]
"(static)org.joda.time.convert.ReadableInstantConverter.getInstantMillis(org.joda.time.convert.ReadableInstantConverter java.lang.Object org.joda.time.Chronology )long"->"long"[label="1"]
"(static)org.joda.time.convert.ReadableInstantConverter.getSupportedType(org.joda.time.convert.ReadableInstantConverter )java.lang.Class"->"java.lang.Class"[label="1"]
"(static)org.joda.time.convert.ReadableIntervalConverter.getDurationMillis(org.joda.time.convert.ReadableIntervalConverter java.lang.Object )long"->"long"[label="1"]
"(static)org.joda.time.convert.ReadableIntervalConverter.getSupportedType(org.joda.time.convert.ReadableIntervalConverter )java.lang.Class"->"java.lang.Class"[label="1"]
"(static)org.joda.time.convert.ReadableIntervalConverter.isReadableInterval(org.joda.time.convert.ReadableIntervalConverter java.lang.Object org.joda.time.Chronology )boolean"->"boolean"[label="1"]
"(static)org.joda.time.convert.ReadablePartialConverter.getChronology(org.joda.time.convert.ReadablePartialConverter java.lang.Object org.joda.time.Chronology )org.joda.time.Chronology"->"org.joda.time.Chronology"[label="1"]
"(static)org.joda.time.convert.ReadablePartialConverter.getChronology(org.joda.time.convert.ReadablePartialConverter java.lang.Object org.joda.time.DateTimeZone )org.joda.time.Chronology"->"org.joda.time.Chronology"[label="1"]
"(static)org.joda.time.convert.ReadablePartialConverter.getSupportedType(org.joda.time.convert.ReadablePartialConverter )java.lang.Class"->"java.lang.Class"[label="1"]
"(static)org.joda.time.convert.ReadablePeriodConverter.getPeriodType(org.joda.time.convert.ReadablePeriodConverter java.lang.Object )org.joda.time.PeriodType"->"org.joda.time.PeriodType"[label="1"]
"(static)org.joda.time.convert.ReadablePeriodConverter.getSupportedType(org.joda.time.convert.ReadablePeriodConverter )java.lang.Class"->"java.lang.Class"[label="1"]
"(static)org.joda.time.convert.StringConverter.getDurationMillis(org.joda.time.convert.StringConverter java.lang.Object )long"->"long"[label="1"]
"(static)org.joda.time.convert.StringConverter.getInstantMillis(org.joda.time.convert.StringConverter java.lang.Object org.joda.time.Chronology )long"->"long"[label="1"]
"(static)org.joda.time.convert.StringConverter.getSupportedType(org.joda.time.convert.StringConverter )java.lang.Class"->"java.lang.Class"[label="1"]
"(static)org.joda.time.field.AbstractPartialFieldProperty.equals(org.joda.time.field.AbstractPartialFieldProperty java.lang.Object )boolean"->"boolean"[label="1"]
"(static)org.joda.time.field.AbstractPartialFieldProperty.get(org.joda.time.field.AbstractPartialFieldProperty )int"->"int"[label="1"]
"(static)org.joda.time.field.AbstractPartialFieldProperty.getAsShortText(org.joda.time.field.AbstractPartialFieldProperty )java.lang.String"->"java.lang.String"[label="1"]
"(static)org.joda.time.field.AbstractPartialFieldProperty.getAsShortText(org.joda.time.field.AbstractPartialFieldProperty java.util.Locale )java.lang.String"->"java.lang.String"[label="1"]
"(static)org.joda.time.field.AbstractPartialFieldProperty.getAsString(org.joda.time.field.AbstractPartialFieldProperty )java.lang.String"->"java.lang.String"[label="1"]
"(static)org.joda.time.field.AbstractPartialFieldProperty.getAsText(org.joda.time.field.AbstractPartialFieldProperty )java.lang.String"->"java.lang.String"[label="1"]
"(static)org.joda.time.field.AbstractPartialFieldProperty.getAsText(org.joda.time.field.AbstractPartialFieldProperty java.util.Locale )java.lang.String"->"java.lang.String"[label="1"]
"(static)org.joda.time.field.AbstractPartialFieldProperty.getDurationField(org.joda.time.field.AbstractPartialFieldProperty )org.joda.time.DurationField"->"org.joda.time.DurationField"[label="1"]
"(static)org.joda.time.field.AbstractPartialFieldProperty.getField(org.joda.time.field.AbstractPartialFieldProperty )org.joda.time.DateTimeField"->"org.joda.time.DateTimeField"[label="1"]
"(static)org.joda.time.field.AbstractPartialFieldProperty.getFieldType(org.joda.time.field.AbstractPartialFieldProperty )org.joda.time.DateTimeFieldType"->"org.joda.time.DateTimeFieldType"[label="1"]
"(static)org.joda.time.field.AbstractPartialFieldProperty.getMaximumShortTextLength(org.joda.time.field.AbstractPartialFieldProperty java.util.Locale )int"->"int"[label="1"]
"(static)org.joda.time.field.AbstractPartialFieldProperty.getMaximumTextLength(org.joda.time.field.AbstractPartialFieldProperty java.util.Locale )int"->"int"[label="1"]
"(static)org.joda.time.field.AbstractPartialFieldProperty.getMaximumValue(org.joda.time.field.AbstractPartialFieldProperty )int"->"int"[label="1"]
"(static)org.joda.time.field.AbstractPartialFieldProperty.getMaximumValueOverall(org.joda.time.field.AbstractPartialFieldProperty )int"->"int"[label="1"]
"(static)org.joda.time.field.AbstractPartialFieldProperty.getMinimumValue(org.joda.time.field.AbstractPartialFieldProperty )int"->"int"[label="1"]
"(static)org.joda.time.field.AbstractPartialFieldProperty.getMinimumValueOverall(org.joda.time.field.AbstractPartialFieldProperty )int"->"int"[label="1"]
"(static)org.joda.time.field.AbstractPartialFieldProperty.getName(org.joda.time.field.AbstractPartialFieldProperty )java.lang.String"->"java.lang.String"[label="1"]
"(static)org.joda.time.field.AbstractPartialFieldProperty.getRangeDurationField(org.joda.time.field.AbstractPartialFieldProperty )org.joda.time.DurationField"->"org.joda.time.DurationField"[label="1"]
"(static)org.joda.time.field.AbstractReadableInstantFieldProperty.equals(org.joda.time.field.AbstractReadableInstantFieldProperty java.lang.Object )boolean"->"boolean"[label="1"]
"(static)org.joda.time.field.AbstractReadableInstantFieldProperty.get(org.joda.time.field.AbstractReadableInstantFieldProperty )int"->"int"[label="1"]
"(static)org.joda.time.field.AbstractReadableInstantFieldProperty.getAsShortText(org.joda.time.field.AbstractReadableInstantFieldProperty )java.lang.String"->"java.lang.String"[label="1"]
"(static)org.joda.time.field.AbstractReadableInstantFieldProperty.getAsShortText(org.joda.time.field.AbstractReadableInstantFieldProperty java.util.Locale )java.lang.String"->"java.lang.String"[label="1"]
"(static)org.joda.time.field.AbstractReadableInstantFieldProperty.getAsString(org.joda.time.field.AbstractReadableInstantFieldProperty )java.lang.String"->"java.lang.String"[label="1"]
"(static)org.joda.time.field.AbstractReadableInstantFieldProperty.getAsText(org.joda.time.field.AbstractReadableInstantFieldProperty )java.lang.String"->"java.lang.String"[label="1"]
"(static)org.joda.time.field.AbstractReadableInstantFieldProperty.getAsText(org.joda.time.field.AbstractReadableInstantFieldProperty java.util.Locale )java.lang.String"->"java.lang.String"[label="1"]
"(static)org.joda.time.field.AbstractReadableInstantFieldProperty.getDifference(org.joda.time.field.AbstractReadableInstantFieldProperty org.joda.time.ReadableInstant )int"->"int"[label="1"]
"(static)org.joda.time.field.AbstractReadableInstantFieldProperty.getDifferenceAsLong(org.joda.time.field.AbstractReadableInstantFieldProperty org.joda.time.ReadableInstant )long"->"long"[label="1"]
"(static)org.joda.time.field.AbstractReadableInstantFieldProperty.getDurationField(org.joda.time.field.AbstractReadableInstantFieldProperty )org.joda.time.DurationField"->"org.joda.time.DurationField"[label="1"]
"(static)org.joda.time.field.AbstractReadableInstantFieldProperty.getField(org.joda.time.field.AbstractReadableInstantFieldProperty )org.joda.time.DateTimeField"->"org.joda.time.DateTimeField"[label="1"]
"(static)org.joda.time.field.AbstractReadableInstantFieldProperty.getFieldType(org.joda.time.field.AbstractReadableInstantFieldProperty )org.joda.time.DateTimeFieldType"->"org.joda.time.DateTimeFieldType"[label="1"]
"(static)org.joda.time.field.AbstractReadableInstantFieldProperty.getLeapAmount(org.joda.time.field.AbstractReadableInstantFieldProperty )int"->"int"[label="1"]
"(static)org.joda.time.field.AbstractReadableInstantFieldProperty.getLeapDurationField(org.joda.time.field.AbstractReadableInstantFieldProperty )org.joda.time.DurationField"->"org.joda.time.DurationField"[label="1"]
"(static)org.joda.time.field.AbstractReadableInstantFieldProperty.getMaximumShortTextLength(org.joda.time.field.AbstractReadableInstantFieldProperty java.util.Locale )int"->"int"[label="1"]
"(static)org.joda.time.field.AbstractReadableInstantFieldProperty.getMaximumTextLength(org.joda.time.field.AbstractReadableInstantFieldProperty java.util.Locale )int"->"int"[label="1"]
"(static)org.joda.time.field.AbstractReadableInstantFieldProperty.getMaximumValue(org.joda.time.field.AbstractReadableInstantFieldProperty )int"->"int"[label="1"]
"(static)org.joda.time.field.AbstractReadableInstantFieldProperty.getMaximumValueOverall(org.joda.time.field.AbstractReadableInstantFieldProperty )int"->"int"[label="1"]
"(static)org.joda.time.field.AbstractReadableInstantFieldProperty.getMinimumValue(org.joda.time.field.AbstractReadableInstantFieldProperty )int"->"int"[label="1"]
"(static)org.joda.time.field.AbstractReadableInstantFieldProperty.getMinimumValueOverall(org.joda.time.field.AbstractReadableInstantFieldProperty )int"->"int"[label="1"]
"(static)org.joda.time.field.AbstractReadableInstantFieldProperty.getName(org.joda.time.field.AbstractReadableInstantFieldProperty )java.lang.String"->"java.lang.String"[label="1"]
"(static)org.joda.time.field.AbstractReadableInstantFieldProperty.getRangeDurationField(org.joda.time.field.AbstractReadableInstantFieldProperty )org.joda.time.DurationField"->"org.joda.time.DurationField"[label="1"]
"(static)org.joda.time.field.AbstractReadableInstantFieldProperty.isLeap(org.joda.time.field.AbstractReadableInstantFieldProperty )boolean"->"boolean"[label="1"]
"(static)org.joda.time.field.AbstractReadableInstantFieldProperty.remainder(org.joda.time.field.AbstractReadableInstantFieldProperty )long"->"long"[label="1"]
"(static)org.joda.time.field.AbstractReadableInstantFieldProperty.toInterval(org.joda.time.field.AbstractReadableInstantFieldProperty )org.joda.time.Interval"->"org.joda.time.Interval"[label="1"]
"(static)org.joda.time.field.BaseDateTimeField.addWrapField(org.joda.time.field.BaseDateTimeField long int )long"->"long"[label="1"]
"(static)org.joda.time.field.BaseDateTimeField.get(org.joda.time.field.BaseDateTimeField long )int"->"int"[label="1"]
"(static)org.joda.time.field.BaseDateTimeField.getAsShortText(org.joda.time.field.BaseDateTimeField int java.util.Locale )java.lang.String"->"java.lang.String"[label="1"]
"(static)org.joda.time.field.BaseDateTimeField.getAsShortText(org.joda.time.field.BaseDateTimeField long )java.lang.String"->"java.lang.String"[label="1"]
"(static)org.joda.time.field.BaseDateTimeField.getAsShortText(org.joda.time.field.BaseDateTimeField long java.util.Locale )java.lang.String"->"java.lang.String"[label="1"]
"(static)org.joda.time.field.BaseDateTimeField.getAsShortText(org.joda.time.field.BaseDateTimeField org.joda.time.ReadablePartial java.util.Locale )java.lang.String"->"java.lang.String"[label="1"]
"(static)org.joda.time.field.BaseDateTimeField.getAsText(org.joda.time.field.BaseDateTimeField int java.util.Locale )java.lang.String"->"java.lang.String"[label="1"]
"(static)org.joda.time.field.BaseDateTimeField.getAsText(org.joda.time.field.BaseDateTimeField long )java.lang.String"->"java.lang.String"[label="1"]
"(static)org.joda.time.field.BaseDateTimeField.getAsText(org.joda.time.field.BaseDateTimeField long java.util.Locale )java.lang.String"->"java.lang.String"[label="1"]
"(static)org.joda.time.field.BaseDateTimeField.getAsText(org.joda.time.field.BaseDateTimeField org.joda.time.ReadablePartial java.util.Locale )java.lang.String"->"java.lang.String"[label="1"]
"(static)org.joda.time.field.BaseDateTimeField.getDifference(org.joda.time.field.BaseDateTimeField long long )int"->"int"[label="1"]
"(static)org.joda.time.field.BaseDateTimeField.getDifferenceAsLong(org.joda.time.field.BaseDateTimeField long long )long"->"long"[label="1"]
"(static)org.joda.time.field.BaseDateTimeField.getDurationField(org.joda.time.field.BaseDateTimeField )org.joda.time.DurationField"->"org.joda.time.DurationField"[label="1"]
"(static)org.joda.time.field.BaseDateTimeField.getLeapAmount(org.joda.time.field.BaseDateTimeField long )int"->"int"[label="1"]
"(static)org.joda.time.field.BaseDateTimeField.getLeapDurationField(org.joda.time.field.BaseDateTimeField )org.joda.time.DurationField"->"org.joda.time.DurationField"[label="1"]
"(static)org.joda.time.field.BaseDateTimeField.getMaximumShortTextLength(org.joda.time.field.BaseDateTimeField java.util.Locale )int"->"int"[label="1"]
"(static)org.joda.time.field.BaseDateTimeField.getMaximumTextLength(org.joda.time.field.BaseDateTimeField java.util.Locale )int"->"int"[label="1"]
"(static)org.joda.time.field.BaseDateTimeField.getMaximumValue(org.joda.time.field.BaseDateTimeField )int"->"int"[label="1"]
"(static)org.joda.time.field.BaseDateTimeField.getMaximumValue(org.joda.time.field.BaseDateTimeField long )int"->"int"[label="1"]
"(static)org.joda.time.field.BaseDateTimeField.getMaximumValue(org.joda.time.field.BaseDateTimeField org.joda.time.ReadablePartial )int"->"int"[label="1"]
"(static)org.joda.time.field.BaseDateTimeField.getMaximumValue(org.joda.time.field.BaseDateTimeField org.joda.time.ReadablePartial int[] )int"->"int"[label="1"]
"(static)org.joda.time.field.BaseDateTimeField.getMinimumValue(org.joda.time.field.BaseDateTimeField )int"->"int"[label="1"]
"(static)org.joda.time.field.BaseDateTimeField.getMinimumValue(org.joda.time.field.BaseDateTimeField long )int"->"int"[label="1"]
"(static)org.joda.time.field.BaseDateTimeField.getMinimumValue(org.joda.time.field.BaseDateTimeField org.joda.time.ReadablePartial )int"->"int"[label="1"]
"(static)org.joda.time.field.BaseDateTimeField.getMinimumValue(org.joda.time.field.BaseDateTimeField org.joda.time.ReadablePartial int[] )int"->"int"[label="1"]
"(static)org.joda.time.field.BaseDateTimeField.getName(org.joda.time.field.BaseDateTimeField )java.lang.String"->"java.lang.String"[label="1"]
"(static)org.joda.time.field.BaseDateTimeField.getRangeDurationField(org.joda.time.field.BaseDateTimeField )org.joda.time.DurationField"->"org.joda.time.DurationField"[label="1"]
"(static)org.joda.time.field.BaseDateTimeField.getType(org.joda.time.field.BaseDateTimeField )org.joda.time.DateTimeFieldType"->"org.joda.time.DateTimeFieldType"[label="1"]
"(static)org.joda.time.field.BaseDateTimeField.isLeap(org.joda.time.field.BaseDateTimeField long )boolean"->"boolean"[label="1"]
"(static)org.joda.time.field.BaseDateTimeField.isSupported(org.joda.time.field.BaseDateTimeField )boolean"->"boolean"[label="1"]
"(static)org.joda.time.field.BaseDateTimeField.remainder(org.joda.time.field.BaseDateTimeField long )long"->"long"[label="1"]
"(static)org.joda.time.field.BaseDateTimeField.roundCeiling(org.joda.time.field.BaseDateTimeField long )long"->"long"[label="1"]
"(static)org.joda.time.field.BaseDateTimeField.roundFloor(org.joda.time.field.BaseDateTimeField long )long"->"long"[label="1"]
"(static)org.joda.time.field.BaseDateTimeField.roundHalfCeiling(org.joda.time.field.BaseDateTimeField long )long"->"long"[label="1"]
"(static)org.joda.time.field.BaseDateTimeField.roundHalfEven(org.joda.time.field.BaseDateTimeField long )long"->"long"[label="1"]
"(static)org.joda.time.field.BaseDateTimeField.roundHalfFloor(org.joda.time.field.BaseDateTimeField long )long"->"long"[label="1"]
"(static)org.joda.time.field.BaseDateTimeField.set(org.joda.time.field.BaseDateTimeField long int )long"->"long"[label="1"]
"(static)org.joda.time.field.BaseDateTimeField.set(org.joda.time.field.BaseDateTimeField long java.lang.String )long"->"long"[label="1"]
"(static)org.joda.time.field.BaseDurationField.getDifference(org.joda.time.field.BaseDurationField long long )int"->"int"[label="1"]
"(static)org.joda.time.field.BaseDurationField.getMillis(org.joda.time.field.BaseDurationField int )long"->"long"[label="1"]
"(static)org.joda.time.field.BaseDurationField.getMillis(org.joda.time.field.BaseDurationField long )long"->"long"[label="1"]
"(static)org.joda.time.field.BaseDurationField.getName(org.joda.time.field.BaseDurationField )java.lang.String"->"java.lang.String"[label="1"]
"(static)org.joda.time.field.BaseDurationField.getType(org.joda.time.field.BaseDurationField )org.joda.time.DurationFieldType"->"org.joda.time.DurationFieldType"[label="1"]
"(static)org.joda.time.field.BaseDurationField.getValue(org.joda.time.field.BaseDurationField long )int"->"int"[label="1"]
"(static)org.joda.time.field.BaseDurationField.getValue(org.joda.time.field.BaseDurationField long long )int"->"int"[label="1"]
"(static)org.joda.time.field.BaseDurationField.getValueAsLong(org.joda.time.field.BaseDurationField long )long"->"long"[label="1"]
"(static)org.joda.time.field.BaseDurationField.isSupported(org.joda.time.field.BaseDurationField )boolean"->"boolean"[label="1"]
"(static)org.joda.time.field.DecoratedDateTimeField.get(org.joda.time.field.DecoratedDateTimeField long )int"->"int"[label="1"]
"(static)org.joda.time.field.DecoratedDateTimeField.getDurationField(org.joda.time.field.DecoratedDateTimeField )org.joda.time.DurationField"->"org.joda.time.DurationField"[label="1"]
"(static)org.joda.time.field.DecoratedDateTimeField.getMaximumValue(org.joda.time.field.DecoratedDateTimeField )int"->"int"[label="1"]
"(static)org.joda.time.field.DecoratedDateTimeField.getMinimumValue(org.joda.time.field.DecoratedDateTimeField )int"->"int"[label="1"]
"(static)org.joda.time.field.DecoratedDateTimeField.getRangeDurationField(org.joda.time.field.DecoratedDateTimeField )org.joda.time.DurationField"->"org.joda.time.DurationField"[label="1"]
"(static)org.joda.time.field.DecoratedDateTimeField.getWrappedField(org.joda.time.field.DecoratedDateTimeField )org.joda.time.DateTimeField"->"org.joda.time.DateTimeField"[label="1"]
"(static)org.joda.time.field.DecoratedDateTimeField.isLenient(org.joda.time.field.DecoratedDateTimeField )boolean"->"boolean"[label="1"]
"(static)org.joda.time.field.DecoratedDateTimeField.roundFloor(org.joda.time.field.DecoratedDateTimeField long )long"->"long"[label="1"]
"(static)org.joda.time.field.DecoratedDateTimeField.set(org.joda.time.field.DecoratedDateTimeField long int )long"->"long"[label="1"]
"(static)org.joda.time.field.DecoratedDurationField.getDifferenceAsLong(org.joda.time.field.DecoratedDurationField long long )long"->"long"[label="1"]
"(static)org.joda.time.field.DecoratedDurationField.getMillis(org.joda.time.field.DecoratedDurationField int long )long"->"long"[label="1"]
"(static)org.joda.time.field.DecoratedDurationField.getMillis(org.joda.time.field.DecoratedDurationField long long )long"->"long"[label="1"]
"(static)org.joda.time.field.DecoratedDurationField.getUnitMillis(org.joda.time.field.DecoratedDurationField )long"->"long"[label="1"]
"(static)org.joda.time.field.DecoratedDurationField.getValueAsLong(org.joda.time.field.DecoratedDurationField long long )long"->"long"[label="1"]
"(static)org.joda.time.field.DecoratedDurationField.getWrappedField(org.joda.time.field.DecoratedDurationField )org.joda.time.DurationField"->"org.joda.time.DurationField"[label="1"]
"(static)org.joda.time.field.DecoratedDurationField.isPrecise(org.joda.time.field.DecoratedDurationField )boolean"->"boolean"[label="1"]
"(static)org.joda.time.field.DelegatedDateTimeField.addWrapField(org.joda.time.field.DelegatedDateTimeField long int )long"->"long"[label="1"]
"(static)org.joda.time.field.DelegatedDateTimeField.get(org.joda.time.field.DelegatedDateTimeField long )int"->"int"[label="1"]
"(static)org.joda.time.field.DelegatedDateTimeField.getAsShortText(org.joda.time.field.DelegatedDateTimeField int java.util.Locale )java.lang.String"->"java.lang.String"[label="1"]
"(static)org.joda.time.field.DelegatedDateTimeField.getAsShortText(org.joda.time.field.DelegatedDateTimeField long )java.lang.String"->"java.lang.String"[label="1"]
"(static)org.joda.time.field.DelegatedDateTimeField.getAsShortText(org.joda.time.field.DelegatedDateTimeField long java.util.Locale )java.lang.String"->"java.lang.String"[label="1"]
"(static)org.joda.time.field.DelegatedDateTimeField.getAsShortText(org.joda.time.field.DelegatedDateTimeField org.joda.time.ReadablePartial java.util.Locale )java.lang.String"->"java.lang.String"[label="1"]
"(static)org.joda.time.field.DelegatedDateTimeField.getAsText(org.joda.time.field.DelegatedDateTimeField int java.util.Locale )java.lang.String"->"java.lang.String"[label="1"]
"(static)org.joda.time.field.DelegatedDateTimeField.getAsText(org.joda.time.field.DelegatedDateTimeField long )java.lang.String"->"java.lang.String"[label="1"]
"(static)org.joda.time.field.DelegatedDateTimeField.getAsText(org.joda.time.field.DelegatedDateTimeField long java.util.Locale )java.lang.String"->"java.lang.String"[label="1"]
"(static)org.joda.time.field.DelegatedDateTimeField.getAsText(org.joda.time.field.DelegatedDateTimeField org.joda.time.ReadablePartial java.util.Locale )java.lang.String"->"java.lang.String"[label="1"]
"(static)org.joda.time.field.DelegatedDateTimeField.getDifference(org.joda.time.field.DelegatedDateTimeField long long )int"->"int"[label="1"]
"(static)org.joda.time.field.DelegatedDateTimeField.getDifferenceAsLong(org.joda.time.field.DelegatedDateTimeField long long )long"->"long"[label="1"]
"(static)org.joda.time.field.DelegatedDateTimeField.getDurationField(org.joda.time.field.DelegatedDateTimeField )org.joda.time.DurationField"->"org.joda.time.DurationField"[label="1"]
"(static)org.joda.time.field.DelegatedDateTimeField.getLeapAmount(org.joda.time.field.DelegatedDateTimeField long )int"->"int"[label="1"]
"(static)org.joda.time.field.DelegatedDateTimeField.getLeapDurationField(org.joda.time.field.DelegatedDateTimeField )org.joda.time.DurationField"->"org.joda.time.DurationField"[label="1"]
"(static)org.joda.time.field.DelegatedDateTimeField.getMaximumShortTextLength(org.joda.time.field.DelegatedDateTimeField java.util.Locale )int"->"int"[label="1"]
"(static)org.joda.time.field.DelegatedDateTimeField.getMaximumTextLength(org.joda.time.field.DelegatedDateTimeField java.util.Locale )int"->"int"[label="1"]
"(static)org.joda.time.field.DelegatedDateTimeField.getMaximumValue(org.joda.time.field.DelegatedDateTimeField )int"->"int"[label="1"]
"(static)org.joda.time.field.DelegatedDateTimeField.getMaximumValue(org.joda.time.field.DelegatedDateTimeField long )int"->"int"[label="1"]
"(static)org.joda.time.field.DelegatedDateTimeField.getMaximumValue(org.joda.time.field.DelegatedDateTimeField org.joda.time.ReadablePartial )int"->"int"[label="1"]
"(static)org.joda.time.field.DelegatedDateTimeField.getMaximumValue(org.joda.time.field.DelegatedDateTimeField org.joda.time.ReadablePartial int[] )int"->"int"[label="1"]
"(static)org.joda.time.field.DelegatedDateTimeField.getMinimumValue(org.joda.time.field.DelegatedDateTimeField )int"->"int"[label="1"]
"(static)org.joda.time.field.DelegatedDateTimeField.getMinimumValue(org.joda.time.field.DelegatedDateTimeField long )int"->"int"[label="1"]
"(static)org.joda.time.field.DelegatedDateTimeField.getMinimumValue(org.joda.time.field.DelegatedDateTimeField org.joda.time.ReadablePartial )int"->"int"[label="1"]
"(static)org.joda.time.field.DelegatedDateTimeField.getMinimumValue(org.joda.time.field.DelegatedDateTimeField org.joda.time.ReadablePartial int[] )int"->"int"[label="1"]
"(static)org.joda.time.field.DelegatedDateTimeField.getName(org.joda.time.field.DelegatedDateTimeField )java.lang.String"->"java.lang.String"[label="1"]
"(static)org.joda.time.field.DelegatedDateTimeField.getRangeDurationField(org.joda.time.field.DelegatedDateTimeField )org.joda.time.DurationField"->"org.joda.time.DurationField"[label="1"]
"(static)org.joda.time.field.DelegatedDateTimeField.getType(org.joda.time.field.DelegatedDateTimeField )org.joda.time.DateTimeFieldType"->"org.joda.time.DateTimeFieldType"[label="1"]
"(static)org.joda.time.field.DelegatedDateTimeField.getWrappedField(org.joda.time.field.DelegatedDateTimeField )org.joda.time.DateTimeField"->"org.joda.time.DateTimeField"[label="1"]
"(static)org.joda.time.field.DelegatedDateTimeField.isLeap(org.joda.time.field.DelegatedDateTimeField long )boolean"->"boolean"[label="1"]
"(static)org.joda.time.field.DelegatedDateTimeField.isLenient(org.joda.time.field.DelegatedDateTimeField )boolean"->"boolean"[label="1"]
"(static)org.joda.time.field.DelegatedDateTimeField.isSupported(org.joda.time.field.DelegatedDateTimeField )boolean"->"boolean"[label="1"]
"(static)org.joda.time.field.DelegatedDateTimeField.remainder(org.joda.time.field.DelegatedDateTimeField long )long"->"long"[label="1"]
"(static)org.joda.time.field.DelegatedDateTimeField.roundCeiling(org.joda.time.field.DelegatedDateTimeField long )long"->"long"[label="1"]
"(static)org.joda.time.field.DelegatedDateTimeField.roundFloor(org.joda.time.field.DelegatedDateTimeField long )long"->"long"[label="1"]
"(static)org.joda.time.field.DelegatedDateTimeField.roundHalfCeiling(org.joda.time.field.DelegatedDateTimeField long )long"->"long"[label="1"]
"(static)org.joda.time.field.DelegatedDateTimeField.roundHalfEven(org.joda.time.field.DelegatedDateTimeField long )long"->"long"[label="1"]
"(static)org.joda.time.field.DelegatedDateTimeField.roundHalfFloor(org.joda.time.field.DelegatedDateTimeField long )long"->"long"[label="1"]
"(static)org.joda.time.field.DelegatedDateTimeField.set(org.joda.time.field.DelegatedDateTimeField long int )long"->"long"[label="1"]
"(static)org.joda.time.field.DelegatedDateTimeField.set(org.joda.time.field.DelegatedDateTimeField long java.lang.String )long"->"long"[label="1"]
"(static)org.joda.time.field.DelegatedDurationField.equals(org.joda.time.field.DelegatedDurationField java.lang.Object )boolean"->"boolean"[label="1"]
"(static)org.joda.time.field.DelegatedDurationField.getDifference(org.joda.time.field.DelegatedDurationField long long )int"->"int"[label="1"]
"(static)org.joda.time.field.DelegatedDurationField.getDifferenceAsLong(org.joda.time.field.DelegatedDurationField long long )long"->"long"[label="1"]
"(static)org.joda.time.field.DelegatedDurationField.getMillis(org.joda.time.field.DelegatedDurationField int )long"->"long"[label="1"]
"(static)org.joda.time.field.DelegatedDurationField.getMillis(org.joda.time.field.DelegatedDurationField int long )long"->"long"[label="1"]
"(static)org.joda.time.field.DelegatedDurationField.getMillis(org.joda.time.field.DelegatedDurationField long )long"->"long"[label="1"]
"(static)org.joda.time.field.DelegatedDurationField.getMillis(org.joda.time.field.DelegatedDurationField long long )long"->"long"[label="1"]
"(static)org.joda.time.field.DelegatedDurationField.getName(org.joda.time.field.DelegatedDurationField )java.lang.String"->"java.lang.String"[label="1"]
"(static)org.joda.time.field.DelegatedDurationField.getType(org.joda.time.field.DelegatedDurationField )org.joda.time.DurationFieldType"->"org.joda.time.DurationFieldType"[label="1"]
"(static)org.joda.time.field.DelegatedDurationField.getUnitMillis(org.joda.time.field.DelegatedDurationField )long"->"long"[label="1"]
"(static)org.joda.time.field.DelegatedDurationField.getValue(org.joda.time.field.DelegatedDurationField long )int"->"int"[label="1"]
"(static)org.joda.time.field.DelegatedDurationField.getValue(org.joda.time.field.DelegatedDurationField long long )int"->"int"[label="1"]
"(static)org.joda.time.field.DelegatedDurationField.getValueAsLong(org.joda.time.field.DelegatedDurationField long )long"->"long"[label="1"]
"(static)org.joda.time.field.DelegatedDurationField.getValueAsLong(org.joda.time.field.DelegatedDurationField long long )long"->"long"[label="1"]
"(static)org.joda.time.field.DelegatedDurationField.getWrappedField(org.joda.time.field.DelegatedDurationField )org.joda.time.DurationField"->"org.joda.time.DurationField"[label="1"]
"(static)org.joda.time.field.DelegatedDurationField.isPrecise(org.joda.time.field.DelegatedDurationField )boolean"->"boolean"[label="1"]
"(static)org.joda.time.field.DelegatedDurationField.isSupported(org.joda.time.field.DelegatedDurationField )boolean"->"boolean"[label="1"]
"(static)org.joda.time.field.DividedDateTimeField.addWrapField(org.joda.time.field.DividedDateTimeField long int )long"->"long"[label="1"]
"(static)org.joda.time.field.DividedDateTimeField.get(org.joda.time.field.DividedDateTimeField long )int"->"int"[label="1"]
"(static)org.joda.time.field.DividedDateTimeField.getDifference(org.joda.time.field.DividedDateTimeField long long )int"->"int"[label="1"]
"(static)org.joda.time.field.DividedDateTimeField.getDifferenceAsLong(org.joda.time.field.DividedDateTimeField long long )long"->"long"[label="1"]
"(static)org.joda.time.field.DividedDateTimeField.getDivisor(org.joda.time.field.DividedDateTimeField )int"->"int"[label="1"]
"(static)org.joda.time.field.DividedDateTimeField.getDurationField(org.joda.time.field.DividedDateTimeField )org.joda.time.DurationField"->"org.joda.time.DurationField"[label="1"]
"(static)org.joda.time.field.DividedDateTimeField.getMaximumValue(org.joda.time.field.DividedDateTimeField )int"->"int"[label="1"]
"(static)org.joda.time.field.DividedDateTimeField.getMinimumValue(org.joda.time.field.DividedDateTimeField )int"->"int"[label="1"]
"(static)org.joda.time.field.DividedDateTimeField.getRangeDurationField(org.joda.time.field.DividedDateTimeField )org.joda.time.DurationField"->"org.joda.time.DurationField"[label="1"]
"(static)org.joda.time.field.DividedDateTimeField.remainder(org.joda.time.field.DividedDateTimeField long )long"->"long"[label="1"]
"(static)org.joda.time.field.DividedDateTimeField.roundFloor(org.joda.time.field.DividedDateTimeField long )long"->"long"[label="1"]
"(static)org.joda.time.field.DividedDateTimeField.set(org.joda.time.field.DividedDateTimeField long int )long"->"long"[label="1"]
"(static)org.joda.time.field.ImpreciseDateTimeField$LinkedDurationField.getDifference(org.joda.time.field.ImpreciseDateTimeField$LinkedDurationField long long )int"->"int"[label="1"]
"(static)org.joda.time.field.ImpreciseDateTimeField$LinkedDurationField.getDifferenceAsLong(org.joda.time.field.ImpreciseDateTimeField$LinkedDurationField long long )long"->"long"[label="1"]
"(static)org.joda.time.field.ImpreciseDateTimeField$LinkedDurationField.getMillis(org.joda.time.field.ImpreciseDateTimeField$LinkedDurationField int long )long"->"long"[label="1"]
"(static)org.joda.time.field.ImpreciseDateTimeField$LinkedDurationField.getMillis(org.joda.time.field.ImpreciseDateTimeField$LinkedDurationField long long )long"->"long"[label="1"]
"(static)org.joda.time.field.ImpreciseDateTimeField$LinkedDurationField.getUnitMillis(org.joda.time.field.ImpreciseDateTimeField$LinkedDurationField )long"->"long"[label="1"]
"(static)org.joda.time.field.ImpreciseDateTimeField$LinkedDurationField.getValue(org.joda.time.field.ImpreciseDateTimeField$LinkedDurationField long long )int"->"int"[label="1"]
"(static)org.joda.time.field.ImpreciseDateTimeField$LinkedDurationField.getValueAsLong(org.joda.time.field.ImpreciseDateTimeField$LinkedDurationField long long )long"->"long"[label="1"]
"(static)org.joda.time.field.ImpreciseDateTimeField$LinkedDurationField.isPrecise(org.joda.time.field.ImpreciseDateTimeField$LinkedDurationField )boolean"->"boolean"[label="1"]
"(static)org.joda.time.field.ImpreciseDateTimeField.get(org.joda.time.field.ImpreciseDateTimeField long )int"->"int"[label="1"]
"(static)org.joda.time.field.ImpreciseDateTimeField.getDifference(org.joda.time.field.ImpreciseDateTimeField long long )int"->"int"[label="1"]
"(static)org.joda.time.field.ImpreciseDateTimeField.getDifferenceAsLong(org.joda.time.field.ImpreciseDateTimeField long long )long"->"long"[label="1"]
"(static)org.joda.time.field.ImpreciseDateTimeField.getDurationField(org.joda.time.field.ImpreciseDateTimeField )org.joda.time.DurationField"->"org.joda.time.DurationField"[label="1"]
"(static)org.joda.time.field.ImpreciseDateTimeField.getRangeDurationField(org.joda.time.field.ImpreciseDateTimeField )org.joda.time.DurationField"->"org.joda.time.DurationField"[label="1"]
"(static)org.joda.time.field.ImpreciseDateTimeField.roundFloor(org.joda.time.field.ImpreciseDateTimeField long )long"->"long"[label="1"]
"(static)org.joda.time.field.ImpreciseDateTimeField.set(org.joda.time.field.ImpreciseDateTimeField long int )long"->"long"[label="1"]
"(static)org.joda.time.field.LenientDateTimeField.isLenient(org.joda.time.field.LenientDateTimeField )boolean"->"boolean"[label="1"]
"(static)org.joda.time.field.LenientDateTimeField.set(org.joda.time.field.LenientDateTimeField long int )long"->"long"[label="1"]
"(static)org.joda.time.field.MillisDurationField.equals(org.joda.time.field.MillisDurationField java.lang.Object )boolean"->"boolean"[label="1"]
"(static)org.joda.time.field.MillisDurationField.getDifference(org.joda.time.field.MillisDurationField long long )int"->"int"[label="1"]
"(static)org.joda.time.field.MillisDurationField.getDifferenceAsLong(org.joda.time.field.MillisDurationField long long )long"->"long"[label="1"]
"(static)org.joda.time.field.MillisDurationField.getMillis(org.joda.time.field.MillisDurationField int )long"->"long"[label="1"]
"(static)org.joda.time.field.MillisDurationField.getMillis(org.joda.time.field.MillisDurationField int long )long"->"long"[label="1"]
"(static)org.joda.time.field.MillisDurationField.getMillis(org.joda.time.field.MillisDurationField long )long"->"long"[label="1"]
"(static)org.joda.time.field.MillisDurationField.getMillis(org.joda.time.field.MillisDurationField long long )long"->"long"[label="1"]
"(static)org.joda.time.field.MillisDurationField.getName(org.joda.time.field.MillisDurationField )java.lang.String"->"java.lang.String"[label="1"]
"(static)org.joda.time.field.MillisDurationField.getType(org.joda.time.field.MillisDurationField )org.joda.time.DurationFieldType"->"org.joda.time.DurationFieldType"[label="1"]
"(static)org.joda.time.field.MillisDurationField.getUnitMillis(org.joda.time.field.MillisDurationField )long"->"long"[label="1"]
"(static)org.joda.time.field.MillisDurationField.getValue(org.joda.time.field.MillisDurationField long )int"->"int"[label="1"]
"(static)org.joda.time.field.MillisDurationField.getValue(org.joda.time.field.MillisDurationField long long )int"->"int"[label="1"]
"(static)org.joda.time.field.MillisDurationField.getValueAsLong(org.joda.time.field.MillisDurationField long )long"->"long"[label="1"]
"(static)org.joda.time.field.MillisDurationField.getValueAsLong(org.joda.time.field.MillisDurationField long long )long"->"long"[label="1"]
"(static)org.joda.time.field.MillisDurationField.isPrecise(org.joda.time.field.MillisDurationField )boolean"->"boolean"[label="1"]
"(static)org.joda.time.field.MillisDurationField.isSupported(org.joda.time.field.MillisDurationField )boolean"->"boolean"[label="1"]
"(static)org.joda.time.field.OffsetDateTimeField.addWrapField(org.joda.time.field.OffsetDateTimeField long int )long"->"long"[label="1"]
"(static)org.joda.time.field.OffsetDateTimeField.get(org.joda.time.field.OffsetDateTimeField long )int"->"int"[label="1"]
"(static)org.joda.time.field.OffsetDateTimeField.getLeapAmount(org.joda.time.field.OffsetDateTimeField long )int"->"int"[label="1"]
"(static)org.joda.time.field.OffsetDateTimeField.getLeapDurationField(org.joda.time.field.OffsetDateTimeField )org.joda.time.DurationField"->"org.joda.time.DurationField"[label="1"]
"(static)org.joda.time.field.OffsetDateTimeField.getMaximumValue(org.joda.time.field.OffsetDateTimeField )int"->"int"[label="1"]
"(static)org.joda.time.field.OffsetDateTimeField.getMinimumValue(org.joda.time.field.OffsetDateTimeField )int"->"int"[label="1"]
"(static)org.joda.time.field.OffsetDateTimeField.getOffset(org.joda.time.field.OffsetDateTimeField )int"->"int"[label="1"]
"(static)org.joda.time.field.OffsetDateTimeField.isLeap(org.joda.time.field.OffsetDateTimeField long )boolean"->"boolean"[label="1"]
"(static)org.joda.time.field.OffsetDateTimeField.remainder(org.joda.time.field.OffsetDateTimeField long )long"->"long"[label="1"]
"(static)org.joda.time.field.OffsetDateTimeField.roundCeiling(org.joda.time.field.OffsetDateTimeField long )long"->"long"[label="1"]
"(static)org.joda.time.field.OffsetDateTimeField.roundFloor(org.joda.time.field.OffsetDateTimeField long )long"->"long"[label="1"]
"(static)org.joda.time.field.OffsetDateTimeField.roundHalfCeiling(org.joda.time.field.OffsetDateTimeField long )long"->"long"[label="1"]
"(static)org.joda.time.field.OffsetDateTimeField.roundHalfEven(org.joda.time.field.OffsetDateTimeField long )long"->"long"[label="1"]
"(static)org.joda.time.field.OffsetDateTimeField.roundHalfFloor(org.joda.time.field.OffsetDateTimeField long )long"->"long"[label="1"]
"(static)org.joda.time.field.OffsetDateTimeField.set(org.joda.time.field.OffsetDateTimeField long int )long"->"long"[label="1"]
"(static)org.joda.time.field.PreciseDateTimeField.addWrapField(org.joda.time.field.PreciseDateTimeField long int )long"->"long"[label="1"]
"(static)org.joda.time.field.PreciseDateTimeField.get(org.joda.time.field.PreciseDateTimeField long )int"->"int"[label="1"]
"(static)org.joda.time.field.PreciseDateTimeField.getMaximumValue(org.joda.time.field.PreciseDateTimeField )int"->"int"[label="1"]
"(static)org.joda.time.field.PreciseDateTimeField.getRange(org.joda.time.field.PreciseDateTimeField )int"->"int"[label="1"]
"(static)org.joda.time.field.PreciseDateTimeField.getRangeDurationField(org.joda.time.field.PreciseDateTimeField )org.joda.time.DurationField"->"org.joda.time.DurationField"[label="1"]
"(static)org.joda.time.field.PreciseDateTimeField.set(org.joda.time.field.PreciseDateTimeField long int )long"->"long"[label="1"]
"(static)org.joda.time.field.PreciseDurationDateTimeField.getDurationField(org.joda.time.field.PreciseDurationDateTimeField )org.joda.time.DurationField"->"org.joda.time.DurationField"[label="1"]
"(static)org.joda.time.field.PreciseDurationDateTimeField.getMinimumValue(org.joda.time.field.PreciseDurationDateTimeField )int"->"int"[label="1"]
"(static)org.joda.time.field.PreciseDurationDateTimeField.getUnitMillis(org.joda.time.field.PreciseDurationDateTimeField )long"->"long"[label="1"]
"(static)org.joda.time.field.PreciseDurationDateTimeField.isLenient(org.joda.time.field.PreciseDurationDateTimeField )boolean"->"boolean"[label="1"]
"(static)org.joda.time.field.PreciseDurationDateTimeField.remainder(org.joda.time.field.PreciseDurationDateTimeField long )long"->"long"[label="1"]
"(static)org.joda.time.field.PreciseDurationDateTimeField.roundCeiling(org.joda.time.field.PreciseDurationDateTimeField long )long"->"long"[label="1"]
"(static)org.joda.time.field.PreciseDurationDateTimeField.roundFloor(org.joda.time.field.PreciseDurationDateTimeField long )long"->"long"[label="1"]
"(static)org.joda.time.field.PreciseDurationDateTimeField.set(org.joda.time.field.PreciseDurationDateTimeField long int )long"->"long"[label="1"]
"(static)org.joda.time.field.PreciseDurationField.equals(org.joda.time.field.PreciseDurationField java.lang.Object )boolean"->"boolean"[label="1"]
"(static)org.joda.time.field.PreciseDurationField.getDifferenceAsLong(org.joda.time.field.PreciseDurationField long long )long"->"long"[label="1"]
"(static)org.joda.time.field.PreciseDurationField.getMillis(org.joda.time.field.PreciseDurationField int long )long"->"long"[label="1"]
"(static)org.joda.time.field.PreciseDurationField.getMillis(org.joda.time.field.PreciseDurationField long long )long"->"long"[label="1"]
"(static)org.joda.time.field.PreciseDurationField.getUnitMillis(org.joda.time.field.PreciseDurationField )long"->"long"[label="1"]
"(static)org.joda.time.field.PreciseDurationField.getValueAsLong(org.joda.time.field.PreciseDurationField long long )long"->"long"[label="1"]
"(static)org.joda.time.field.PreciseDurationField.isPrecise(org.joda.time.field.PreciseDurationField )boolean"->"boolean"[label="1"]
"(static)org.joda.time.field.RemainderDateTimeField.addWrapField(org.joda.time.field.RemainderDateTimeField long int )long"->"long"[label="1"]
"(static)org.joda.time.field.RemainderDateTimeField.get(org.joda.time.field.RemainderDateTimeField long )int"->"int"[label="1"]
"(static)org.joda.time.field.RemainderDateTimeField.getDivisor(org.joda.time.field.RemainderDateTimeField )int"->"int"[label="1"]
"(static)org.joda.time.field.RemainderDateTimeField.getDurationField(org.joda.time.field.RemainderDateTimeField )org.joda.time.DurationField"->"org.joda.time.DurationField"[label="1"]
"(static)org.joda.time.field.RemainderDateTimeField.getMaximumValue(org.joda.time.field.RemainderDateTimeField )int"->"int"[label="1"]
"(static)org.joda.time.field.RemainderDateTimeField.getMinimumValue(org.joda.time.field.RemainderDateTimeField )int"->"int"[label="1"]
"(static)org.joda.time.field.RemainderDateTimeField.getRangeDurationField(org.joda.time.field.RemainderDateTimeField )org.joda.time.DurationField"->"org.joda.time.DurationField"[label="1"]
"(static)org.joda.time.field.RemainderDateTimeField.remainder(org.joda.time.field.RemainderDateTimeField long )long"->"long"[label="1"]
"(static)org.joda.time.field.RemainderDateTimeField.roundCeiling(org.joda.time.field.RemainderDateTimeField long )long"->"long"[label="1"]
"(static)org.joda.time.field.RemainderDateTimeField.roundFloor(org.joda.time.field.RemainderDateTimeField long )long"->"long"[label="1"]
"(static)org.joda.time.field.RemainderDateTimeField.roundHalfCeiling(org.joda.time.field.RemainderDateTimeField long )long"->"long"[label="1"]
"(static)org.joda.time.field.RemainderDateTimeField.roundHalfEven(org.joda.time.field.RemainderDateTimeField long )long"->"long"[label="1"]
"(static)org.joda.time.field.RemainderDateTimeField.roundHalfFloor(org.joda.time.field.RemainderDateTimeField long )long"->"long"[label="1"]
"(static)org.joda.time.field.RemainderDateTimeField.set(org.joda.time.field.RemainderDateTimeField long int )long"->"long"[label="1"]
"(static)org.joda.time.field.ScaledDurationField.equals(org.joda.time.field.ScaledDurationField java.lang.Object )boolean"->"boolean"[label="1"]
"(static)org.joda.time.field.ScaledDurationField.getDifference(org.joda.time.field.ScaledDurationField long long )int"->"int"[label="1"]
"(static)org.joda.time.field.ScaledDurationField.getDifferenceAsLong(org.joda.time.field.ScaledDurationField long long )long"->"long"[label="1"]
"(static)org.joda.time.field.ScaledDurationField.getMillis(org.joda.time.field.ScaledDurationField int )long"->"long"[label="1"]
"(static)org.joda.time.field.ScaledDurationField.getMillis(org.joda.time.field.ScaledDurationField int long )long"->"long"[label="1"]
"(static)org.joda.time.field.ScaledDurationField.getMillis(org.joda.time.field.ScaledDurationField long )long"->"long"[label="1"]
"(static)org.joda.time.field.ScaledDurationField.getMillis(org.joda.time.field.ScaledDurationField long long )long"->"long"[label="1"]
"(static)org.joda.time.field.ScaledDurationField.getScalar(org.joda.time.field.ScaledDurationField )int"->"int"[label="1"]
"(static)org.joda.time.field.ScaledDurationField.getUnitMillis(org.joda.time.field.ScaledDurationField )long"->"long"[label="1"]
"(static)org.joda.time.field.ScaledDurationField.getValue(org.joda.time.field.ScaledDurationField long )int"->"int"[label="1"]
"(static)org.joda.time.field.ScaledDurationField.getValue(org.joda.time.field.ScaledDurationField long long )int"->"int"[label="1"]
"(static)org.joda.time.field.ScaledDurationField.getValueAsLong(org.joda.time.field.ScaledDurationField long )long"->"long"[label="1"]
"(static)org.joda.time.field.ScaledDurationField.getValueAsLong(org.joda.time.field.ScaledDurationField long long )long"->"long"[label="1"]
"(static)org.joda.time.field.SkipDateTimeField.get(org.joda.time.field.SkipDateTimeField long )int"->"int"[label="1"]
"(static)org.joda.time.field.SkipDateTimeField.getMinimumValue(org.joda.time.field.SkipDateTimeField )int"->"int"[label="1"]
"(static)org.joda.time.field.SkipDateTimeField.set(org.joda.time.field.SkipDateTimeField long int )long"->"long"[label="1"]
"(static)org.joda.time.field.SkipUndoDateTimeField.get(org.joda.time.field.SkipUndoDateTimeField long )int"->"int"[label="1"]
"(static)org.joda.time.field.SkipUndoDateTimeField.getMinimumValue(org.joda.time.field.SkipUndoDateTimeField )int"->"int"[label="1"]
"(static)org.joda.time.field.SkipUndoDateTimeField.set(org.joda.time.field.SkipUndoDateTimeField long int )long"->"long"[label="1"]
"(static)org.joda.time.field.StrictDateTimeField.isLenient(org.joda.time.field.StrictDateTimeField )boolean"->"boolean"[label="1"]
"(static)org.joda.time.field.StrictDateTimeField.set(org.joda.time.field.StrictDateTimeField long int )long"->"long"[label="1"]
"(static)org.joda.time.field.UnsupportedDateTimeField.addWrapField(org.joda.time.field.UnsupportedDateTimeField long int )long"->"long"[label="1"]
"(static)org.joda.time.field.UnsupportedDateTimeField.get(org.joda.time.field.UnsupportedDateTimeField long )int"->"int"[label="1"]
"(static)org.joda.time.field.UnsupportedDateTimeField.getAsShortText(org.joda.time.field.UnsupportedDateTimeField int java.util.Locale )java.lang.String"->"java.lang.String"[label="1"]
"(static)org.joda.time.field.UnsupportedDateTimeField.getAsShortText(org.joda.time.field.UnsupportedDateTimeField long )java.lang.String"->"java.lang.String"[label="1"]
"(static)org.joda.time.field.UnsupportedDateTimeField.getAsShortText(org.joda.time.field.UnsupportedDateTimeField long java.util.Locale )java.lang.String"->"java.lang.String"[label="1"]
"(static)org.joda.time.field.UnsupportedDateTimeField.getAsShortText(org.joda.time.field.UnsupportedDateTimeField org.joda.time.ReadablePartial java.util.Locale )java.lang.String"->"java.lang.String"[label="1"]
"(static)org.joda.time.field.UnsupportedDateTimeField.getAsText(org.joda.time.field.UnsupportedDateTimeField int java.util.Locale )java.lang.String"->"java.lang.String"[label="1"]
"(static)org.joda.time.field.UnsupportedDateTimeField.getAsText(org.joda.time.field.UnsupportedDateTimeField long )java.lang.String"->"java.lang.String"[label="1"]
"(static)org.joda.time.field.UnsupportedDateTimeField.getAsText(org.joda.time.field.UnsupportedDateTimeField long java.util.Locale )java.lang.String"->"java.lang.String"[label="1"]
"(static)org.joda.time.field.UnsupportedDateTimeField.getAsText(org.joda.time.field.UnsupportedDateTimeField org.joda.time.ReadablePartial java.util.Locale )java.lang.String"->"java.lang.String"[label="1"]
"(static)org.joda.time.field.UnsupportedDateTimeField.getDifference(org.joda.time.field.UnsupportedDateTimeField long long )int"->"int"[label="1"]
"(static)org.joda.time.field.UnsupportedDateTimeField.getDifferenceAsLong(org.joda.time.field.UnsupportedDateTimeField long long )long"->"long"[label="1"]
"(static)org.joda.time.field.UnsupportedDateTimeField.getDurationField(org.joda.time.field.UnsupportedDateTimeField )org.joda.time.DurationField"->"org.joda.time.DurationField"[label="1"]
"(static)org.joda.time.field.UnsupportedDateTimeField.getLeapAmount(org.joda.time.field.UnsupportedDateTimeField long )int"->"int"[label="1"]
"(static)org.joda.time.field.UnsupportedDateTimeField.getLeapDurationField(org.joda.time.field.UnsupportedDateTimeField )org.joda.time.DurationField"->"org.joda.time.DurationField"[label="1"]
"(static)org.joda.time.field.UnsupportedDateTimeField.getMaximumShortTextLength(org.joda.time.field.UnsupportedDateTimeField java.util.Locale )int"->"int"[label="1"]
"(static)org.joda.time.field.UnsupportedDateTimeField.getMaximumTextLength(org.joda.time.field.UnsupportedDateTimeField java.util.Locale )int"->"int"[label="1"]
"(static)org.joda.time.field.UnsupportedDateTimeField.getMaximumValue(org.joda.time.field.UnsupportedDateTimeField )int"->"int"[label="1"]
"(static)org.joda.time.field.UnsupportedDateTimeField.getMaximumValue(org.joda.time.field.UnsupportedDateTimeField long )int"->"int"[label="1"]
"(static)org.joda.time.field.UnsupportedDateTimeField.getMaximumValue(org.joda.time.field.UnsupportedDateTimeField org.joda.time.ReadablePartial )int"->"int"[label="1"]
"(static)org.joda.time.field.UnsupportedDateTimeField.getMaximumValue(org.joda.time.field.UnsupportedDateTimeField org.joda.time.ReadablePartial int[] )int"->"int"[label="1"]
"(static)org.joda.time.field.UnsupportedDateTimeField.getMinimumValue(org.joda.time.field.UnsupportedDateTimeField )int"->"int"[label="1"]
"(static)org.joda.time.field.UnsupportedDateTimeField.getMinimumValue(org.joda.time.field.UnsupportedDateTimeField long )int"->"int"[label="1"]
"(static)org.joda.time.field.UnsupportedDateTimeField.getMinimumValue(org.joda.time.field.UnsupportedDateTimeField org.joda.time.ReadablePartial )int"->"int"[label="1"]
"(static)org.joda.time.field.UnsupportedDateTimeField.getMinimumValue(org.joda.time.field.UnsupportedDateTimeField org.joda.time.ReadablePartial int[] )int"->"int"[label="1"]
"(static)org.joda.time.field.UnsupportedDateTimeField.getName(org.joda.time.field.UnsupportedDateTimeField )java.lang.String"->"java.lang.String"[label="1"]
"(static)org.joda.time.field.UnsupportedDateTimeField.getRangeDurationField(org.joda.time.field.UnsupportedDateTimeField )org.joda.time.DurationField"->"org.joda.time.DurationField"[label="1"]
"(static)org.joda.time.field.UnsupportedDateTimeField.getType(org.joda.time.field.UnsupportedDateTimeField )org.joda.time.DateTimeFieldType"->"org.joda.time.DateTimeFieldType"[label="1"]
"(static)org.joda.time.field.UnsupportedDateTimeField.isLeap(org.joda.time.field.UnsupportedDateTimeField long )boolean"->"boolean"[label="1"]
"(static)org.joda.time.field.UnsupportedDateTimeField.isLenient(org.joda.time.field.UnsupportedDateTimeField )boolean"->"boolean"[label="1"]
"(static)org.joda.time.field.UnsupportedDateTimeField.isSupported(org.joda.time.field.UnsupportedDateTimeField )boolean"->"boolean"[label="1"]
"(static)org.joda.time.field.UnsupportedDateTimeField.remainder(org.joda.time.field.UnsupportedDateTimeField long )long"->"long"[label="1"]
"(static)org.joda.time.field.UnsupportedDateTimeField.roundCeiling(org.joda.time.field.UnsupportedDateTimeField long )long"->"long"[label="1"]
"(static)org.joda.time.field.UnsupportedDateTimeField.roundFloor(org.joda.time.field.UnsupportedDateTimeField long )long"->"long"[label="1"]
"(static)org.joda.time.field.UnsupportedDateTimeField.roundHalfCeiling(org.joda.time.field.UnsupportedDateTimeField long )long"->"long"[label="1"]
"(static)org.joda.time.field.UnsupportedDateTimeField.roundHalfEven(org.joda.time.field.UnsupportedDateTimeField long )long"->"long"[label="1"]
"(static)org.joda.time.field.UnsupportedDateTimeField.roundHalfFloor(org.joda.time.field.UnsupportedDateTimeField long )long"->"long"[label="1"]
"(static)org.joda.time.field.UnsupportedDateTimeField.set(org.joda.time.field.UnsupportedDateTimeField long int )long"->"long"[label="1"]
"(static)org.joda.time.field.UnsupportedDateTimeField.set(org.joda.time.field.UnsupportedDateTimeField long java.lang.String )long"->"long"[label="1"]
"(static)org.joda.time.field.UnsupportedDurationField.equals(org.joda.time.field.UnsupportedDurationField java.lang.Object )boolean"->"boolean"[label="1"]
"(static)org.joda.time.field.UnsupportedDurationField.getDifference(org.joda.time.field.UnsupportedDurationField long long )int"->"int"[label="1"]
"(static)org.joda.time.field.UnsupportedDurationField.getDifferenceAsLong(org.joda.time.field.UnsupportedDurationField long long )long"->"long"[label="1"]
"(static)org.joda.time.field.UnsupportedDurationField.getMillis(org.joda.time.field.UnsupportedDurationField int )long"->"long"[label="1"]
"(static)org.joda.time.field.UnsupportedDurationField.getMillis(org.joda.time.field.UnsupportedDurationField int long )long"->"long"[label="1"]
"(static)org.joda.time.field.UnsupportedDurationField.getMillis(org.joda.time.field.UnsupportedDurationField long )long"->"long"[label="1"]
"(static)org.joda.time.field.UnsupportedDurationField.getMillis(org.joda.time.field.UnsupportedDurationField long long )long"->"long"[label="1"]
"(static)org.joda.time.field.UnsupportedDurationField.getName(org.joda.time.field.UnsupportedDurationField )java.lang.String"->"java.lang.String"[label="1"]
"(static)org.joda.time.field.UnsupportedDurationField.getType(org.joda.time.field.UnsupportedDurationField )org.joda.time.DurationFieldType"->"org.joda.time.DurationFieldType"[label="1"]
"(static)org.joda.time.field.UnsupportedDurationField.getUnitMillis(org.joda.time.field.UnsupportedDurationField )long"->"long"[label="1"]
"(static)org.joda.time.field.UnsupportedDurationField.getValue(org.joda.time.field.UnsupportedDurationField long )int"->"int"[label="1"]
"(static)org.joda.time.field.UnsupportedDurationField.getValue(org.joda.time.field.UnsupportedDurationField long long )int"->"int"[label="1"]
"(static)org.joda.time.field.UnsupportedDurationField.getValueAsLong(org.joda.time.field.UnsupportedDurationField long )long"->"long"[label="1"]
"(static)org.joda.time.field.UnsupportedDurationField.getValueAsLong(org.joda.time.field.UnsupportedDurationField long long )long"->"long"[label="1"]
"(static)org.joda.time.field.UnsupportedDurationField.isPrecise(org.joda.time.field.UnsupportedDurationField )boolean"->"boolean"[label="1"]
"(static)org.joda.time.field.UnsupportedDurationField.isSupported(org.joda.time.field.UnsupportedDurationField )boolean"->"boolean"[label="1"]
"(static)org.joda.time.field.ZeroIsMaxDateTimeField.addWrapField(org.joda.time.field.ZeroIsMaxDateTimeField long int )long"->"long"[label="1"]
"(static)org.joda.time.field.ZeroIsMaxDateTimeField.get(org.joda.time.field.ZeroIsMaxDateTimeField long )int"->"int"[label="1"]
"(static)org.joda.time.field.ZeroIsMaxDateTimeField.getDifference(org.joda.time.field.ZeroIsMaxDateTimeField long long )int"->"int"[label="1"]
"(static)org.joda.time.field.ZeroIsMaxDateTimeField.getDifferenceAsLong(org.joda.time.field.ZeroIsMaxDateTimeField long long )long"->"long"[label="1"]
"(static)org.joda.time.field.ZeroIsMaxDateTimeField.getLeapAmount(org.joda.time.field.ZeroIsMaxDateTimeField long )int"->"int"[label="1"]
"(static)org.joda.time.field.ZeroIsMaxDateTimeField.getLeapDurationField(org.joda.time.field.ZeroIsMaxDateTimeField )org.joda.time.DurationField"->"org.joda.time.DurationField"[label="1"]
"(static)org.joda.time.field.ZeroIsMaxDateTimeField.getMaximumValue(org.joda.time.field.ZeroIsMaxDateTimeField )int"->"int"[label="1"]
"(static)org.joda.time.field.ZeroIsMaxDateTimeField.getMaximumValue(org.joda.time.field.ZeroIsMaxDateTimeField long )int"->"int"[label="1"]
"(static)org.joda.time.field.ZeroIsMaxDateTimeField.getMaximumValue(org.joda.time.field.ZeroIsMaxDateTimeField org.joda.time.ReadablePartial )int"->"int"[label="1"]
"(static)org.joda.time.field.ZeroIsMaxDateTimeField.getMaximumValue(org.joda.time.field.ZeroIsMaxDateTimeField org.joda.time.ReadablePartial int[] )int"->"int"[label="1"]
"(static)org.joda.time.field.ZeroIsMaxDateTimeField.getMinimumValue(org.joda.time.field.ZeroIsMaxDateTimeField )int"->"int"[label="1"]
"(static)org.joda.time.field.ZeroIsMaxDateTimeField.getMinimumValue(org.joda.time.field.ZeroIsMaxDateTimeField long )int"->"int"[label="1"]
"(static)org.joda.time.field.ZeroIsMaxDateTimeField.getMinimumValue(org.joda.time.field.ZeroIsMaxDateTimeField org.joda.time.ReadablePartial )int"->"int"[label="1"]
"(static)org.joda.time.field.ZeroIsMaxDateTimeField.getMinimumValue(org.joda.time.field.ZeroIsMaxDateTimeField org.joda.time.ReadablePartial int[] )int"->"int"[label="1"]
"(static)org.joda.time.field.ZeroIsMaxDateTimeField.isLeap(org.joda.time.field.ZeroIsMaxDateTimeField long )boolean"->"boolean"[label="1"]
"(static)org.joda.time.field.ZeroIsMaxDateTimeField.remainder(org.joda.time.field.ZeroIsMaxDateTimeField long )long"->"long"[label="1"]
"(static)org.joda.time.field.ZeroIsMaxDateTimeField.roundCeiling(org.joda.time.field.ZeroIsMaxDateTimeField long )long"->"long"[label="1"]
"(static)org.joda.time.field.ZeroIsMaxDateTimeField.roundFloor(org.joda.time.field.ZeroIsMaxDateTimeField long )long"->"long"[label="1"]
"(static)org.joda.time.field.ZeroIsMaxDateTimeField.roundHalfCeiling(org.joda.time.field.ZeroIsMaxDateTimeField long )long"->"long"[label="1"]
"(static)org.joda.time.field.ZeroIsMaxDateTimeField.roundHalfEven(org.joda.time.field.ZeroIsMaxDateTimeField long )long"->"long"[label="1"]
"(static)org.joda.time.field.ZeroIsMaxDateTimeField.roundHalfFloor(org.joda.time.field.ZeroIsMaxDateTimeField long )long"->"long"[label="1"]
"(static)org.joda.time.field.ZeroIsMaxDateTimeField.set(org.joda.time.field.ZeroIsMaxDateTimeField long int )long"->"long"[label="1"]
"(static)org.joda.time.format.DateTimeFormat$StyleFormatter.estimateParsedLength(org.joda.time.format.DateTimeFormat$StyleFormatter )int"->"int"[label="1"]
"(static)org.joda.time.format.DateTimeFormat$StyleFormatter.estimatePrintedLength(org.joda.time.format.DateTimeFormat$StyleFormatter )int"->"int"[label="1"]
"(static)org.joda.time.format.DateTimeFormat$StyleFormatterCacheKey.equals(org.joda.time.format.DateTimeFormat$StyleFormatterCacheKey java.lang.Object )boolean"->"boolean"[label="1"]
"(static)org.joda.time.format.DateTimeFormatter.getChronolgy(org.joda.time.format.DateTimeFormatter )org.joda.time.Chronology"->"org.joda.time.Chronology"[label="1"]
"(static)org.joda.time.format.DateTimeFormatter.getChronology(org.joda.time.format.DateTimeFormatter )org.joda.time.Chronology"->"org.joda.time.Chronology"[label="1"]
"(static)org.joda.time.format.DateTimeFormatter.getDefaultYear(org.joda.time.format.DateTimeFormatter )int"->"int"[label="1"]
"(static)org.joda.time.format.DateTimeFormatter.getLocale(org.joda.time.format.DateTimeFormatter )java.util.Locale"->"java.util.Locale"[label="1"]
"(static)org.joda.time.format.DateTimeFormatter.getParser(org.joda.time.format.DateTimeFormatter )org.joda.time.format.DateTimeParser"->"org.joda.time.format.DateTimeParser"[label="1"]
"(static)org.joda.time.format.DateTimeFormatter.getPivotYear(org.joda.time.format.DateTimeFormatter )java.lang.Integer"->"java.lang.Integer"[label="1"]
"(static)org.joda.time.format.DateTimeFormatter.getPrinter(org.joda.time.format.DateTimeFormatter )org.joda.time.format.DateTimePrinter"->"org.joda.time.format.DateTimePrinter"[label="1"]
"(static)org.joda.time.format.DateTimeFormatter.getZone(org.joda.time.format.DateTimeFormatter )org.joda.time.DateTimeZone"->"org.joda.time.DateTimeZone"[label="1"]
"(static)org.joda.time.format.DateTimeFormatter.isOffsetParsed(org.joda.time.format.DateTimeFormatter )boolean"->"boolean"[label="1"]
"(static)org.joda.time.format.DateTimeFormatter.isParser(org.joda.time.format.DateTimeFormatter )boolean"->"boolean"[label="1"]
"(static)org.joda.time.format.DateTimeFormatter.isPrinter(org.joda.time.format.DateTimeFormatter )boolean"->"boolean"[label="1"]
"(static)org.joda.time.format.DateTimeFormatter.parseDateTime(org.joda.time.format.DateTimeFormatter java.lang.String )org.joda.time.DateTime"->"org.joda.time.DateTime"[label="1"]
"(static)org.joda.time.format.DateTimeFormatter.parseLocalDate(org.joda.time.format.DateTimeFormatter java.lang.String )org.joda.time.LocalDate"->"org.joda.time.LocalDate"[label="1"]
"(static)org.joda.time.format.DateTimeFormatter.parseLocalDateTime(org.joda.time.format.DateTimeFormatter java.lang.String )org.joda.time.LocalDateTime"->"org.joda.time.LocalDateTime"[label="1"]
"(static)org.joda.time.format.DateTimeFormatter.parseLocalTime(org.joda.time.format.DateTimeFormatter java.lang.String )org.joda.time.LocalTime"->"org.joda.time.LocalTime"[label="1"]
"(static)org.joda.time.format.DateTimeFormatter.parseMillis(org.joda.time.format.DateTimeFormatter java.lang.String )long"->"long"[label="1"]
"(static)org.joda.time.format.DateTimeFormatter.parseMutableDateTime(org.joda.time.format.DateTimeFormatter java.lang.String )org.joda.time.MutableDateTime"->"org.joda.time.MutableDateTime"[label="1"]
"(static)org.joda.time.format.DateTimeFormatter.print(org.joda.time.format.DateTimeFormatter long )java.lang.String"->"java.lang.String"[label="1"]
"(static)org.joda.time.format.DateTimeFormatter.print(org.joda.time.format.DateTimeFormatter org.joda.time.ReadableInstant )java.lang.String"->"java.lang.String"[label="1"]
"(static)org.joda.time.format.DateTimeFormatter.print(org.joda.time.format.DateTimeFormatter org.joda.time.ReadablePartial )java.lang.String"->"java.lang.String"[label="1"]
"(static)org.joda.time.format.DateTimeFormatter.withChronology(org.joda.time.format.DateTimeFormatter org.joda.time.Chronology )org.joda.time.format.DateTimeFormatter"->"org.joda.time.format.DateTimeFormatter"[label="1"]
"(static)org.joda.time.format.DateTimeFormatter.withDefaultYear(org.joda.time.format.DateTimeFormatter int )org.joda.time.format.DateTimeFormatter"->"org.joda.time.format.DateTimeFormatter"[label="1"]
"(static)org.joda.time.format.DateTimeFormatter.withLocale(org.joda.time.format.DateTimeFormatter java.util.Locale )org.joda.time.format.DateTimeFormatter"->"org.joda.time.format.DateTimeFormatter"[label="1"]
"(static)org.joda.time.format.DateTimeFormatter.withOffsetParsed(org.joda.time.format.DateTimeFormatter )org.joda.time.format.DateTimeFormatter"->"org.joda.time.format.DateTimeFormatter"[label="1"]
"(static)org.joda.time.format.DateTimeFormatter.withPivotYear(org.joda.time.format.DateTimeFormatter int )org.joda.time.format.DateTimeFormatter"->"org.joda.time.format.DateTimeFormatter"[label="1"]
"(static)org.joda.time.format.DateTimeFormatter.withPivotYear(org.joda.time.format.DateTimeFormatter java.lang.Integer )org.joda.time.format.DateTimeFormatter"->"org.joda.time.format.DateTimeFormatter"[label="1"]
"(static)org.joda.time.format.DateTimeFormatter.withZone(org.joda.time.format.DateTimeFormatter org.joda.time.DateTimeZone )org.joda.time.format.DateTimeFormatter"->"org.joda.time.format.DateTimeFormatter"[label="1"]
"(static)org.joda.time.format.DateTimeFormatter.withZoneUTC(org.joda.time.format.DateTimeFormatter )org.joda.time.format.DateTimeFormatter"->"org.joda.time.format.DateTimeFormatter"[label="1"]
"(static)org.joda.time.format.DateTimeFormatterBuilder$CharacterLiteral.estimateParsedLength(org.joda.time.format.DateTimeFormatterBuilder$CharacterLiteral )int"->"int"[label="1"]
"(static)org.joda.time.format.DateTimeFormatterBuilder$CharacterLiteral.estimatePrintedLength(org.joda.time.format.DateTimeFormatterBuilder$CharacterLiteral )int"->"int"[label="1"]
"(static)org.joda.time.format.DateTimeFormatterBuilder$Composite.estimateParsedLength(org.joda.time.format.DateTimeFormatterBuilder$Composite )int"->"int"[label="1"]
"(static)org.joda.time.format.DateTimeFormatterBuilder$Composite.estimatePrintedLength(org.joda.time.format.DateTimeFormatterBuilder$Composite )int"->"int"[label="1"]
"(static)org.joda.time.format.DateTimeFormatterBuilder$Fraction.estimateParsedLength(org.joda.time.format.DateTimeFormatterBuilder$Fraction )int"->"int"[label="1"]
"(static)org.joda.time.format.DateTimeFormatterBuilder$Fraction.estimatePrintedLength(org.joda.time.format.DateTimeFormatterBuilder$Fraction )int"->"int"[label="1"]
"(static)org.joda.time.format.DateTimeFormatterBuilder$MatchingParser.estimateParsedLength(org.joda.time.format.DateTimeFormatterBuilder$MatchingParser )int"->"int"[label="1"]
"(static)org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter.estimateParsedLength(org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter )int"->"int"[label="1"]
"(static)org.joda.time.format.DateTimeFormatterBuilder$PaddedNumber.estimatePrintedLength(org.joda.time.format.DateTimeFormatterBuilder$PaddedNumber )int"->"int"[label="1"]
"(static)org.joda.time.format.DateTimeFormatterBuilder$StringLiteral.estimateParsedLength(org.joda.time.format.DateTimeFormatterBuilder$StringLiteral )int"->"int"[label="1"]
"(static)org.joda.time.format.DateTimeFormatterBuilder$StringLiteral.estimatePrintedLength(org.joda.time.format.DateTimeFormatterBuilder$StringLiteral )int"->"int"[label="1"]
"(static)org.joda.time.format.DateTimeFormatterBuilder$TextField.estimateParsedLength(org.joda.time.format.DateTimeFormatterBuilder$TextField )int"->"int"[label="1"]
"(static)org.joda.time.format.DateTimeFormatterBuilder$TextField.estimatePrintedLength(org.joda.time.format.DateTimeFormatterBuilder$TextField )int"->"int"[label="1"]
"(static)org.joda.time.format.DateTimeFormatterBuilder$TimeZoneId.estimateParsedLength(org.joda.time.format.DateTimeFormatterBuilder$TimeZoneId )int"->"int"[label="1"]
"(static)org.joda.time.format.DateTimeFormatterBuilder$TimeZoneId.estimatePrintedLength(org.joda.time.format.DateTimeFormatterBuilder$TimeZoneId )int"->"int"[label="1"]
"(static)org.joda.time.format.DateTimeFormatterBuilder$TimeZoneName.estimateParsedLength(org.joda.time.format.DateTimeFormatterBuilder$TimeZoneName )int"->"int"[label="1"]
"(static)org.joda.time.format.DateTimeFormatterBuilder$TimeZoneName.estimatePrintedLength(org.joda.time.format.DateTimeFormatterBuilder$TimeZoneName )int"->"int"[label="1"]
"(static)org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset.estimateParsedLength(org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset )int"->"int"[label="1"]
"(static)org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset.estimatePrintedLength(org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset )int"->"int"[label="1"]
"(static)org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear.estimateParsedLength(org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear )int"->"int"[label="1"]
"(static)org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear.estimatePrintedLength(org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear )int"->"int"[label="1"]
"(static)org.joda.time.format.DateTimeFormatterBuilder$UnpaddedNumber.estimatePrintedLength(org.joda.time.format.DateTimeFormatterBuilder$UnpaddedNumber )int"->"int"[label="1"]
"(static)org.joda.time.format.DateTimeFormatterBuilder.append(org.joda.time.format.DateTimeFormatterBuilder org.joda.time.format.DateTimeFormatter )org.joda.time.format.DateTimeFormatterBuilder"->"org.joda.time.format.DateTimeFormatterBuilder"[label="1"]
"(static)org.joda.time.format.DateTimeFormatterBuilder.append(org.joda.time.format.DateTimeFormatterBuilder org.joda.time.format.DateTimeParser )org.joda.time.format.DateTimeFormatterBuilder"->"org.joda.time.format.DateTimeFormatterBuilder"[label="1"]
"(static)org.joda.time.format.DateTimeFormatterBuilder.append(org.joda.time.format.DateTimeFormatterBuilder org.joda.time.format.DateTimePrinter )org.joda.time.format.DateTimeFormatterBuilder"->"org.joda.time.format.DateTimeFormatterBuilder"[label="1"]
"(static)org.joda.time.format.DateTimeFormatterBuilder.append(org.joda.time.format.DateTimeFormatterBuilder org.joda.time.format.DateTimePrinter org.joda.time.format.DateTimeParser )org.joda.time.format.DateTimeFormatterBuilder"->"org.joda.time.format.DateTimeFormatterBuilder"[label="1"]
"(static)org.joda.time.format.DateTimeFormatterBuilder.append(org.joda.time.format.DateTimeFormatterBuilder org.joda.time.format.DateTimePrinter org.joda.time.format.DateTimeParser[] )org.joda.time.format.DateTimeFormatterBuilder"->"org.joda.time.format.DateTimeFormatterBuilder"[label="1"]
"(static)org.joda.time.format.DateTimeFormatterBuilder.appendCenturyOfEra(org.joda.time.format.DateTimeFormatterBuilder int int )org.joda.time.format.DateTimeFormatterBuilder"->"org.joda.time.format.DateTimeFormatterBuilder"[label="1"]
"(static)org.joda.time.format.DateTimeFormatterBuilder.appendClockhourOfDay(org.joda.time.format.DateTimeFormatterBuilder int )org.joda.time.format.DateTimeFormatterBuilder"->"org.joda.time.format.DateTimeFormatterBuilder"[label="1"]
"(static)org.joda.time.format.DateTimeFormatterBuilder.appendClockhourOfHalfday(org.joda.time.format.DateTimeFormatterBuilder int )org.joda.time.format.DateTimeFormatterBuilder"->"org.joda.time.format.DateTimeFormatterBuilder"[label="1"]
"(static)org.joda.time.format.DateTimeFormatterBuilder.appendDayOfMonth(org.joda.time.format.DateTimeFormatterBuilder int )org.joda.time.format.DateTimeFormatterBuilder"->"org.joda.time.format.DateTimeFormatterBuilder"[label="1"]
"(static)org.joda.time.format.DateTimeFormatterBuilder.appendDayOfWeek(org.joda.time.format.DateTimeFormatterBuilder int )org.joda.time.format.DateTimeFormatterBuilder"->"org.joda.time.format.DateTimeFormatterBuilder"[label="1"]
"(static)org.joda.time.format.DateTimeFormatterBuilder.appendDayOfWeekShortText(org.joda.time.format.DateTimeFormatterBuilder )org.joda.time.format.DateTimeFormatterBuilder"->"org.joda.time.format.DateTimeFormatterBuilder"[label="1"]
"(static)org.joda.time.format.DateTimeFormatterBuilder.appendDayOfWeekText(org.joda.time.format.DateTimeFormatterBuilder )org.joda.time.format.DateTimeFormatterBuilder"->"org.joda.time.format.DateTimeFormatterBuilder"[label="1"]
"(static)org.joda.time.format.DateTimeFormatterBuilder.appendDayOfYear(org.joda.time.format.DateTimeFormatterBuilder int )org.joda.time.format.DateTimeFormatterBuilder"->"org.joda.time.format.DateTimeFormatterBuilder"[label="1"]
"(static)org.joda.time.format.DateTimeFormatterBuilder.appendEraText(org.joda.time.format.DateTimeFormatterBuilder )org.joda.time.format.DateTimeFormatterBuilder"->"org.joda.time.format.DateTimeFormatterBuilder"[label="1"]
"(static)org.joda.time.format.DateTimeFormatterBuilder.appendFixedDecimal(org.joda.time.format.DateTimeFormatterBuilder org.joda.time.DateTimeFieldType int )org.joda.time.format.DateTimeFormatterBuilder"->"org.joda.time.format.DateTimeFormatterBuilder"[label="1"]
"(static)org.joda.time.format.DateTimeFormatterBuilder.appendFixedSignedDecimal(org.joda.time.format.DateTimeFormatterBuilder org.joda.time.DateTimeFieldType int )org.joda.time.format.DateTimeFormatterBuilder"->"org.joda.time.format.DateTimeFormatterBuilder"[label="1"]
"(static)org.joda.time.format.DateTimeFormatterBuilder.appendFractionOfDay(org.joda.time.format.DateTimeFormatterBuilder int int )org.joda.time.format.DateTimeFormatterBuilder"->"org.joda.time.format.DateTimeFormatterBuilder"[label="1"]
"(static)org.joda.time.format.DateTimeFormatterBuilder.appendFractionOfHour(org.joda.time.format.DateTimeFormatterBuilder int int )org.joda.time.format.DateTimeFormatterBuilder"->"org.joda.time.format.DateTimeFormatterBuilder"[label="1"]
"(static)org.joda.time.format.DateTimeFormatterBuilder.appendFractionOfMinute(org.joda.time.format.DateTimeFormatterBuilder int int )org.joda.time.format.DateTimeFormatterBuilder"->"org.joda.time.format.DateTimeFormatterBuilder"[label="1"]
"(static)org.joda.time.format.DateTimeFormatterBuilder.appendFractionOfSecond(org.joda.time.format.DateTimeFormatterBuilder int int )org.joda.time.format.DateTimeFormatterBuilder"->"org.joda.time.format.DateTimeFormatterBuilder"[label="1"]
"(static)org.joda.time.format.DateTimeFormatterBuilder.appendHalfdayOfDayText(org.joda.time.format.DateTimeFormatterBuilder )org.joda.time.format.DateTimeFormatterBuilder"->"org.joda.time.format.DateTimeFormatterBuilder"[label="1"]
"(static)org.joda.time.format.DateTimeFormatterBuilder.appendHourOfDay(org.joda.time.format.DateTimeFormatterBuilder int )org.joda.time.format.DateTimeFormatterBuilder"->"org.joda.time.format.DateTimeFormatterBuilder"[label="1"]
"(static)org.joda.time.format.DateTimeFormatterBuilder.appendHourOfHalfday(org.joda.time.format.DateTimeFormatterBuilder int )org.joda.time.format.DateTimeFormatterBuilder"->"org.joda.time.format.DateTimeFormatterBuilder"[label="1"]
"(static)org.joda.time.format.DateTimeFormatterBuilder.appendLiteral(org.joda.time.format.DateTimeFormatterBuilder char )org.joda.time.format.DateTimeFormatterBuilder"->"org.joda.time.format.DateTimeFormatterBuilder"[label="1"]
"(static)org.joda.time.format.DateTimeFormatterBuilder.appendLiteral(org.joda.time.format.DateTimeFormatterBuilder java.lang.String )org.joda.time.format.DateTimeFormatterBuilder"->"org.joda.time.format.DateTimeFormatterBuilder"[label="1"]
"(static)org.joda.time.format.DateTimeFormatterBuilder.appendMillisOfDay(org.joda.time.format.DateTimeFormatterBuilder int )org.joda.time.format.DateTimeFormatterBuilder"->"org.joda.time.format.DateTimeFormatterBuilder"[label="1"]
"(static)org.joda.time.format.DateTimeFormatterBuilder.appendMillisOfSecond(org.joda.time.format.DateTimeFormatterBuilder int )org.joda.time.format.DateTimeFormatterBuilder"->"org.joda.time.format.DateTimeFormatterBuilder"[label="1"]
"(static)org.joda.time.format.DateTimeFormatterBuilder.appendMinuteOfDay(org.joda.time.format.DateTimeFormatterBuilder int )org.joda.time.format.DateTimeFormatterBuilder"->"org.joda.time.format.DateTimeFormatterBuilder"[label="1"]
"(static)org.joda.time.format.DateTimeFormatterBuilder.appendMinuteOfHour(org.joda.time.format.DateTimeFormatterBuilder int )org.joda.time.format.DateTimeFormatterBuilder"->"org.joda.time.format.DateTimeFormatterBuilder"[label="1"]
"(static)org.joda.time.format.DateTimeFormatterBuilder.appendMonthOfYear(org.joda.time.format.DateTimeFormatterBuilder int )org.joda.time.format.DateTimeFormatterBuilder"->"org.joda.time.format.DateTimeFormatterBuilder"[label="1"]
"(static)org.joda.time.format.DateTimeFormatterBuilder.appendMonthOfYearShortText(org.joda.time.format.DateTimeFormatterBuilder )org.joda.time.format.DateTimeFormatterBuilder"->"org.joda.time.format.DateTimeFormatterBuilder"[label="1"]
"(static)org.joda.time.format.DateTimeFormatterBuilder.appendMonthOfYearText(org.joda.time.format.DateTimeFormatterBuilder )org.joda.time.format.DateTimeFormatterBuilder"->"org.joda.time.format.DateTimeFormatterBuilder"[label="1"]
"(static)org.joda.time.format.DateTimeFormatterBuilder.appendOptional(org.joda.time.format.DateTimeFormatterBuilder org.joda.time.format.DateTimeParser )org.joda.time.format.DateTimeFormatterBuilder"->"org.joda.time.format.DateTimeFormatterBuilder"[label="1"]
"(static)org.joda.time.format.DateTimeFormatterBuilder.appendPattern(org.joda.time.format.DateTimeFormatterBuilder java.lang.String )org.joda.time.format.DateTimeFormatterBuilder"->"org.joda.time.format.DateTimeFormatterBuilder"[label="1"]
"(static)org.joda.time.format.DateTimeFormatterBuilder.appendSecondOfDay(org.joda.time.format.DateTimeFormatterBuilder int )org.joda.time.format.DateTimeFormatterBuilder"->"org.joda.time.format.DateTimeFormatterBuilder"[label="1"]
"(static)org.joda.time.format.DateTimeFormatterBuilder.appendSecondOfMinute(org.joda.time.format.DateTimeFormatterBuilder int )org.joda.time.format.DateTimeFormatterBuilder"->"org.joda.time.format.DateTimeFormatterBuilder"[label="1"]
"(static)org.joda.time.format.DateTimeFormatterBuilder.appendShortText(org.joda.time.format.DateTimeFormatterBuilder org.joda.time.DateTimeFieldType )org.joda.time.format.DateTimeFormatterBuilder"->"org.joda.time.format.DateTimeFormatterBuilder"[label="1"]
"(static)org.joda.time.format.DateTimeFormatterBuilder.appendText(org.joda.time.format.DateTimeFormatterBuilder org.joda.time.DateTimeFieldType )org.joda.time.format.DateTimeFormatterBuilder"->"org.joda.time.format.DateTimeFormatterBuilder"[label="1"]
"(static)org.joda.time.format.DateTimeFormatterBuilder.appendTimeZoneId(org.joda.time.format.DateTimeFormatterBuilder )org.joda.time.format.DateTimeFormatterBuilder"->"org.joda.time.format.DateTimeFormatterBuilder"[label="1"]
"(static)org.joda.time.format.DateTimeFormatterBuilder.appendTimeZoneName(org.joda.time.format.DateTimeFormatterBuilder )org.joda.time.format.DateTimeFormatterBuilder"->"org.joda.time.format.DateTimeFormatterBuilder"[label="1"]
"(static)org.joda.time.format.DateTimeFormatterBuilder.appendTimeZoneName(org.joda.time.format.DateTimeFormatterBuilder java.util.Map )org.joda.time.format.DateTimeFormatterBuilder"->"org.joda.time.format.DateTimeFormatterBuilder"[label="1"]
"(static)org.joda.time.format.DateTimeFormatterBuilder.appendTimeZoneShortName(org.joda.time.format.DateTimeFormatterBuilder )org.joda.time.format.DateTimeFormatterBuilder"->"org.joda.time.format.DateTimeFormatterBuilder"[label="1"]
"(static)org.joda.time.format.DateTimeFormatterBuilder.appendTimeZoneShortName(org.joda.time.format.DateTimeFormatterBuilder java.util.Map )org.joda.time.format.DateTimeFormatterBuilder"->"org.joda.time.format.DateTimeFormatterBuilder"[label="1"]
"(static)org.joda.time.format.DateTimeFormatterBuilder.appendTwoDigitWeekyear(org.joda.time.format.DateTimeFormatterBuilder int )org.joda.time.format.DateTimeFormatterBuilder"->"org.joda.time.format.DateTimeFormatterBuilder"[label="1"]
"(static)org.joda.time.format.DateTimeFormatterBuilder.appendTwoDigitWeekyear(org.joda.time.format.DateTimeFormatterBuilder int boolean )org.joda.time.format.DateTimeFormatterBuilder"->"org.joda.time.format.DateTimeFormatterBuilder"[label="1"]
"(static)org.joda.time.format.DateTimeFormatterBuilder.appendTwoDigitYear(org.joda.time.format.DateTimeFormatterBuilder int )org.joda.time.format.DateTimeFormatterBuilder"->"org.joda.time.format.DateTimeFormatterBuilder"[label="1"]
"(static)org.joda.time.format.DateTimeFormatterBuilder.appendTwoDigitYear(org.joda.time.format.DateTimeFormatterBuilder int boolean )org.joda.time.format.DateTimeFormatterBuilder"->"org.joda.time.format.DateTimeFormatterBuilder"[label="1"]
"(static)org.joda.time.format.DateTimeFormatterBuilder.appendWeekOfWeekyear(org.joda.time.format.DateTimeFormatterBuilder int )org.joda.time.format.DateTimeFormatterBuilder"->"org.joda.time.format.DateTimeFormatterBuilder"[label="1"]
"(static)org.joda.time.format.DateTimeFormatterBuilder.appendWeekyear(org.joda.time.format.DateTimeFormatterBuilder int int )org.joda.time.format.DateTimeFormatterBuilder"->"org.joda.time.format.DateTimeFormatterBuilder"[label="1"]
"(static)org.joda.time.format.DateTimeFormatterBuilder.appendYear(org.joda.time.format.DateTimeFormatterBuilder int int )org.joda.time.format.DateTimeFormatterBuilder"->"org.joda.time.format.DateTimeFormatterBuilder"[label="1"]
"(static)org.joda.time.format.DateTimeFormatterBuilder.appendYearOfCentury(org.joda.time.format.DateTimeFormatterBuilder int int )org.joda.time.format.DateTimeFormatterBuilder"->"org.joda.time.format.DateTimeFormatterBuilder"[label="1"]
"(static)org.joda.time.format.DateTimeFormatterBuilder.appendYearOfEra(org.joda.time.format.DateTimeFormatterBuilder int int )org.joda.time.format.DateTimeFormatterBuilder"->"org.joda.time.format.DateTimeFormatterBuilder"[label="1"]
"(static)org.joda.time.format.DateTimeFormatterBuilder.canBuildFormatter(org.joda.time.format.DateTimeFormatterBuilder )boolean"->"boolean"[label="1"]
"(static)org.joda.time.format.DateTimeFormatterBuilder.canBuildParser(org.joda.time.format.DateTimeFormatterBuilder )boolean"->"boolean"[label="1"]
"(static)org.joda.time.format.DateTimeFormatterBuilder.canBuildPrinter(org.joda.time.format.DateTimeFormatterBuilder )boolean"->"boolean"[label="1"]
"(static)org.joda.time.format.DateTimeFormatterBuilder.toFormatter(org.joda.time.format.DateTimeFormatterBuilder )org.joda.time.format.DateTimeFormatter"->"org.joda.time.format.DateTimeFormatter"[label="1"]
"(static)org.joda.time.format.DateTimeFormatterBuilder.toParser(org.joda.time.format.DateTimeFormatterBuilder )org.joda.time.format.DateTimeParser"->"org.joda.time.format.DateTimeParser"[label="1"]
"(static)org.joda.time.format.DateTimeFormatterBuilder.toPrinter(org.joda.time.format.DateTimeFormatterBuilder )org.joda.time.format.DateTimePrinter"->"org.joda.time.format.DateTimePrinter"[label="1"]
"(static)org.joda.time.format.DateTimeParser.estimateParsedLength(org.joda.time.format.DateTimeParser )int"->"int"[label="1"]
"(static)org.joda.time.format.DateTimeParserBucket.computeMillis(org.joda.time.format.DateTimeParserBucket )long"->"long"[label="1"]
"(static)org.joda.time.format.DateTimeParserBucket.computeMillis(org.joda.time.format.DateTimeParserBucket boolean )long"->"long"[label="1"]
"(static)org.joda.time.format.DateTimeParserBucket.computeMillis(org.joda.time.format.DateTimeParserBucket boolean java.lang.CharSequence )long"->"long"[label="1"]
"(static)org.joda.time.format.DateTimeParserBucket.computeMillis(org.joda.time.format.DateTimeParserBucket boolean java.lang.String )long"->"long"[label="1"]
"(static)org.joda.time.format.DateTimeParserBucket.getChronology(org.joda.time.format.DateTimeParserBucket )org.joda.time.Chronology"->"org.joda.time.Chronology"[label="1"]
"(static)org.joda.time.format.DateTimeParserBucket.getLocale(org.joda.time.format.DateTimeParserBucket )java.util.Locale"->"java.util.Locale"[label="1"]
"(static)org.joda.time.format.DateTimeParserBucket.getOffset(org.joda.time.format.DateTimeParserBucket )int"->"int"[label="1"]
"(static)org.joda.time.format.DateTimeParserBucket.getOffsetInteger(org.joda.time.format.DateTimeParserBucket )java.lang.Integer"->"java.lang.Integer"[label="1"]
"(static)org.joda.time.format.DateTimeParserBucket.getPivotYear(org.joda.time.format.DateTimeParserBucket )java.lang.Integer"->"java.lang.Integer"[label="1"]
"(static)org.joda.time.format.DateTimeParserBucket.getZone(org.joda.time.format.DateTimeParserBucket )org.joda.time.DateTimeZone"->"org.joda.time.DateTimeZone"[label="1"]
"(static)org.joda.time.format.DateTimeParserBucket.parseMillis(org.joda.time.format.DateTimeParserBucket org.joda.time.format.DateTimeParser java.lang.CharSequence )long"->"long"[label="1"]
"(static)org.joda.time.format.DateTimeParserBucket.restoreState(org.joda.time.format.DateTimeParserBucket java.lang.Object )boolean"->"boolean"[label="1"]
"(static)org.joda.time.format.DateTimeParserBucket.saveState(org.joda.time.format.DateTimeParserBucket )java.lang.Object"->"java.lang.Object"[label="1"]
"(static)org.joda.time.format.DateTimeParserInternalParser.estimateParsedLength(org.joda.time.format.DateTimeParserInternalParser )int"->"int"[label="1"]
"(static)org.joda.time.format.DateTimePrinter.estimatePrintedLength(org.joda.time.format.DateTimePrinter )int"->"int"[label="1"]
"(static)org.joda.time.format.DateTimePrinterInternalPrinter.estimatePrintedLength(org.joda.time.format.DateTimePrinterInternalPrinter )int"->"int"[label="1"]
"(static)org.joda.time.format.InternalParser.estimateParsedLength(org.joda.time.format.InternalParser )int"->"int"[label="1"]
"(static)org.joda.time.format.InternalParserDateTimeParser.equals(org.joda.time.format.InternalParserDateTimeParser java.lang.Object )boolean"->"boolean"[label="1"]
"(static)org.joda.time.format.InternalParserDateTimeParser.estimateParsedLength(org.joda.time.format.InternalParserDateTimeParser )int"->"int"[label="1"]
"(static)org.joda.time.format.InternalPrinter.estimatePrintedLength(org.joda.time.format.InternalPrinter )int"->"int"[label="1"]
"(static)org.joda.time.format.InternalPrinterDateTimePrinter.equals(org.joda.time.format.InternalPrinterDateTimePrinter java.lang.Object )boolean"->"boolean"[label="1"]
"(static)org.joda.time.format.InternalPrinterDateTimePrinter.estimatePrintedLength(org.joda.time.format.InternalPrinterDateTimePrinter )int"->"int"[label="1"]
"(static)org.joda.time.format.PeriodFormat$DynamicWordBased.calculatePrintedLength(org.joda.time.format.PeriodFormat$DynamicWordBased org.joda.time.ReadablePeriod java.util.Locale )int"->"int"[label="1"]
"(static)org.joda.time.format.PeriodFormatter.getLocale(org.joda.time.format.PeriodFormatter )java.util.Locale"->"java.util.Locale"[label="1"]
"(static)org.joda.time.format.PeriodFormatter.getParseType(org.joda.time.format.PeriodFormatter )org.joda.time.PeriodType"->"org.joda.time.PeriodType"[label="1"]
"(static)org.joda.time.format.PeriodFormatter.getParser(org.joda.time.format.PeriodFormatter )org.joda.time.format.PeriodParser"->"org.joda.time.format.PeriodParser"[label="1"]
"(static)org.joda.time.format.PeriodFormatter.getPrinter(org.joda.time.format.PeriodFormatter )org.joda.time.format.PeriodPrinter"->"org.joda.time.format.PeriodPrinter"[label="1"]
"(static)org.joda.time.format.PeriodFormatter.isParser(org.joda.time.format.PeriodFormatter )boolean"->"boolean"[label="1"]
"(static)org.joda.time.format.PeriodFormatter.isPrinter(org.joda.time.format.PeriodFormatter )boolean"->"boolean"[label="1"]
"(static)org.joda.time.format.PeriodFormatter.parseMutablePeriod(org.joda.time.format.PeriodFormatter java.lang.String )org.joda.time.MutablePeriod"->"org.joda.time.MutablePeriod"[label="1"]
"(static)org.joda.time.format.PeriodFormatter.parsePeriod(org.joda.time.format.PeriodFormatter java.lang.String )org.joda.time.Period"->"org.joda.time.Period"[label="1"]
"(static)org.joda.time.format.PeriodFormatter.print(org.joda.time.format.PeriodFormatter org.joda.time.ReadablePeriod )java.lang.String"->"java.lang.String"[label="1"]
"(static)org.joda.time.format.PeriodFormatter.withLocale(org.joda.time.format.PeriodFormatter java.util.Locale )org.joda.time.format.PeriodFormatter"->"org.joda.time.format.PeriodFormatter"[label="1"]
"(static)org.joda.time.format.PeriodFormatter.withParseType(org.joda.time.format.PeriodFormatter org.joda.time.PeriodType )org.joda.time.format.PeriodFormatter"->"org.joda.time.format.PeriodFormatter"[label="1"]
"(static)org.joda.time.format.PeriodFormatterBuilder$Composite.calculatePrintedLength(org.joda.time.format.PeriodFormatterBuilder$Composite org.joda.time.ReadablePeriod java.util.Locale )int"->"int"[label="1"]
"(static)org.joda.time.format.PeriodFormatterBuilder$CompositeAffix.calculatePrintedLength(org.joda.time.format.PeriodFormatterBuilder$CompositeAffix int )int"->"int"[label="1"]
"(static)org.joda.time.format.PeriodFormatterBuilder$CompositeAffix.getAffixes(org.joda.time.format.PeriodFormatterBuilder$CompositeAffix )java.lang.String[]"->"java.lang.String[]"[label="1"]
"(static)org.joda.time.format.PeriodFormatterBuilder$CompositeAffix.parse(org.joda.time.format.PeriodFormatterBuilder$CompositeAffix java.lang.String int )int"->"int"[label="1"]
"(static)org.joda.time.format.PeriodFormatterBuilder$CompositeAffix.scan(org.joda.time.format.PeriodFormatterBuilder$CompositeAffix java.lang.String int )int"->"int"[label="1"]
"(static)org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.calculatePrintedLength(org.joda.time.format.PeriodFormatterBuilder$FieldFormatter org.joda.time.ReadablePeriod java.util.Locale )int"->"int"[label="1"]
"(static)org.joda.time.format.PeriodFormatterBuilder$Literal.calculatePrintedLength(org.joda.time.format.PeriodFormatterBuilder$Literal org.joda.time.ReadablePeriod java.util.Locale )int"->"int"[label="1"]
"(static)org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix.calculatePrintedLength(org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix int )int"->"int"[label="1"]
"(static)org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix.getAffixes(org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix )java.lang.String[]"->"java.lang.String[]"[label="1"]
"(static)org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix.parse(org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix java.lang.String int )int"->"int"[label="1"]
"(static)org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix.scan(org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix java.lang.String int )int"->"int"[label="1"]
"(static)org.joda.time.format.PeriodFormatterBuilder$PluralAffix.calculatePrintedLength(org.joda.time.format.PeriodFormatterBuilder$PluralAffix int )int"->"int"[label="1"]
"(static)org.joda.time.format.PeriodFormatterBuilder$PluralAffix.getAffixes(org.joda.time.format.PeriodFormatterBuilder$PluralAffix )java.lang.String[]"->"java.lang.String[]"[label="1"]
"(static)org.joda.time.format.PeriodFormatterBuilder$PluralAffix.parse(org.joda.time.format.PeriodFormatterBuilder$PluralAffix java.lang.String int )int"->"int"[label="1"]
"(static)org.joda.time.format.PeriodFormatterBuilder$PluralAffix.scan(org.joda.time.format.PeriodFormatterBuilder$PluralAffix java.lang.String int )int"->"int"[label="1"]
"(static)org.joda.time.format.PeriodFormatterBuilder$RegExAffix$1.compare(org.joda.time.format.PeriodFormatterBuilder$RegExAffix$1 java.lang.Object java.lang.Object )int"->"int"[label="1"]
"(static)org.joda.time.format.PeriodFormatterBuilder$RegExAffix$1.compare(org.joda.time.format.PeriodFormatterBuilder$RegExAffix$1 java.lang.String java.lang.String )int"->"int"[label="1"]
"(static)org.joda.time.format.PeriodFormatterBuilder$RegExAffix.calculatePrintedLength(org.joda.time.format.PeriodFormatterBuilder$RegExAffix int )int"->"int"[label="1"]
"(static)org.joda.time.format.PeriodFormatterBuilder$RegExAffix.getAffixes(org.joda.time.format.PeriodFormatterBuilder$RegExAffix )java.lang.String[]"->"java.lang.String[]"[label="1"]
"(static)org.joda.time.format.PeriodFormatterBuilder$RegExAffix.parse(org.joda.time.format.PeriodFormatterBuilder$RegExAffix java.lang.String int )int"->"int"[label="1"]
"(static)org.joda.time.format.PeriodFormatterBuilder$RegExAffix.scan(org.joda.time.format.PeriodFormatterBuilder$RegExAffix java.lang.String int )int"->"int"[label="1"]
"(static)org.joda.time.format.PeriodFormatterBuilder$Separator.calculatePrintedLength(org.joda.time.format.PeriodFormatterBuilder$Separator org.joda.time.ReadablePeriod java.util.Locale )int"->"int"[label="1"]
"(static)org.joda.time.format.PeriodFormatterBuilder$SimpleAffix.calculatePrintedLength(org.joda.time.format.PeriodFormatterBuilder$SimpleAffix int )int"->"int"[label="1"]
"(static)org.joda.time.format.PeriodFormatterBuilder$SimpleAffix.getAffixes(org.joda.time.format.PeriodFormatterBuilder$SimpleAffix )java.lang.String[]"->"java.lang.String[]"[label="1"]
"(static)org.joda.time.format.PeriodFormatterBuilder$SimpleAffix.parse(org.joda.time.format.PeriodFormatterBuilder$SimpleAffix java.lang.String int )int"->"int"[label="1"]
"(static)org.joda.time.format.PeriodFormatterBuilder$SimpleAffix.scan(org.joda.time.format.PeriodFormatterBuilder$SimpleAffix java.lang.String int )int"->"int"[label="1"]
"(static)org.joda.time.format.PeriodFormatterBuilder.append(org.joda.time.format.PeriodFormatterBuilder org.joda.time.format.PeriodFormatter )org.joda.time.format.PeriodFormatterBuilder"->"org.joda.time.format.PeriodFormatterBuilder"[label="1"]
"(static)org.joda.time.format.PeriodFormatterBuilder.append(org.joda.time.format.PeriodFormatterBuilder org.joda.time.format.PeriodPrinter org.joda.time.format.PeriodParser )org.joda.time.format.PeriodFormatterBuilder"->"org.joda.time.format.PeriodFormatterBuilder"[label="1"]
"(static)org.joda.time.format.PeriodFormatterBuilder.appendDays(org.joda.time.format.PeriodFormatterBuilder )org.joda.time.format.PeriodFormatterBuilder"->"org.joda.time.format.PeriodFormatterBuilder"[label="1"]
"(static)org.joda.time.format.PeriodFormatterBuilder.appendHours(org.joda.time.format.PeriodFormatterBuilder )org.joda.time.format.PeriodFormatterBuilder"->"org.joda.time.format.PeriodFormatterBuilder"[label="1"]
"(static)org.joda.time.format.PeriodFormatterBuilder.appendLiteral(org.joda.time.format.PeriodFormatterBuilder java.lang.String )org.joda.time.format.PeriodFormatterBuilder"->"org.joda.time.format.PeriodFormatterBuilder"[label="1"]
"(static)org.joda.time.format.PeriodFormatterBuilder.appendMillis(org.joda.time.format.PeriodFormatterBuilder )org.joda.time.format.PeriodFormatterBuilder"->"org.joda.time.format.PeriodFormatterBuilder"[label="1"]
"(static)org.joda.time.format.PeriodFormatterBuilder.appendMillis3Digit(org.joda.time.format.PeriodFormatterBuilder )org.joda.time.format.PeriodFormatterBuilder"->"org.joda.time.format.PeriodFormatterBuilder"[label="1"]
"(static)org.joda.time.format.PeriodFormatterBuilder.appendMinutes(org.joda.time.format.PeriodFormatterBuilder )org.joda.time.format.PeriodFormatterBuilder"->"org.joda.time.format.PeriodFormatterBuilder"[label="1"]
"(static)org.joda.time.format.PeriodFormatterBuilder.appendMonths(org.joda.time.format.PeriodFormatterBuilder )org.joda.time.format.PeriodFormatterBuilder"->"org.joda.time.format.PeriodFormatterBuilder"[label="1"]
"(static)org.joda.time.format.PeriodFormatterBuilder.appendPrefix(org.joda.time.format.PeriodFormatterBuilder java.lang.String )org.joda.time.format.PeriodFormatterBuilder"->"org.joda.time.format.PeriodFormatterBuilder"[label="1"]
"(static)org.joda.time.format.PeriodFormatterBuilder.appendPrefix(org.joda.time.format.PeriodFormatterBuilder java.lang.String java.lang.String )org.joda.time.format.PeriodFormatterBuilder"->"org.joda.time.format.PeriodFormatterBuilder"[label="1"]
"(static)org.joda.time.format.PeriodFormatterBuilder.appendPrefix(org.joda.time.format.PeriodFormatterBuilder java.lang.String[] java.lang.String[] )org.joda.time.format.PeriodFormatterBuilder"->"org.joda.time.format.PeriodFormatterBuilder"[label="1"]
"(static)org.joda.time.format.PeriodFormatterBuilder.appendSeconds(org.joda.time.format.PeriodFormatterBuilder )org.joda.time.format.PeriodFormatterBuilder"->"org.joda.time.format.PeriodFormatterBuilder"[label="1"]
"(static)org.joda.time.format.PeriodFormatterBuilder.appendSecondsWithMillis(org.joda.time.format.PeriodFormatterBuilder )org.joda.time.format.PeriodFormatterBuilder"->"org.joda.time.format.PeriodFormatterBuilder"[label="1"]
"(static)org.joda.time.format.PeriodFormatterBuilder.appendSecondsWithOptionalMillis(org.joda.time.format.PeriodFormatterBuilder )org.joda.time.format.PeriodFormatterBuilder"->"org.joda.time.format.PeriodFormatterBuilder"[label="1"]
"(static)org.joda.time.format.PeriodFormatterBuilder.appendSeparator(org.joda.time.format.PeriodFormatterBuilder java.lang.String )org.joda.time.format.PeriodFormatterBuilder"->"org.joda.time.format.PeriodFormatterBuilder"[label="1"]
"(static)org.joda.time.format.PeriodFormatterBuilder.appendSeparator(org.joda.time.format.PeriodFormatterBuilder java.lang.String java.lang.String )org.joda.time.format.PeriodFormatterBuilder"->"org.joda.time.format.PeriodFormatterBuilder"[label="1"]
"(static)org.joda.time.format.PeriodFormatterBuilder.appendSeparatorIfFieldsAfter(org.joda.time.format.PeriodFormatterBuilder java.lang.String )org.joda.time.format.PeriodFormatterBuilder"->"org.joda.time.format.PeriodFormatterBuilder"[label="1"]
"(static)org.joda.time.format.PeriodFormatterBuilder.appendSeparatorIfFieldsBefore(org.joda.time.format.PeriodFormatterBuilder java.lang.String )org.joda.time.format.PeriodFormatterBuilder"->"org.joda.time.format.PeriodFormatterBuilder"[label="1"]
"(static)org.joda.time.format.PeriodFormatterBuilder.appendSuffix(org.joda.time.format.PeriodFormatterBuilder java.lang.String )org.joda.time.format.PeriodFormatterBuilder"->"org.joda.time.format.PeriodFormatterBuilder"[label="1"]
"(static)org.joda.time.format.PeriodFormatterBuilder.appendSuffix(org.joda.time.format.PeriodFormatterBuilder java.lang.String java.lang.String )org.joda.time.format.PeriodFormatterBuilder"->"org.joda.time.format.PeriodFormatterBuilder"[label="1"]
"(static)org.joda.time.format.PeriodFormatterBuilder.appendSuffix(org.joda.time.format.PeriodFormatterBuilder java.lang.String[] java.lang.String[] )org.joda.time.format.PeriodFormatterBuilder"->"org.joda.time.format.PeriodFormatterBuilder"[label="1"]
"(static)org.joda.time.format.PeriodFormatterBuilder.appendWeeks(org.joda.time.format.PeriodFormatterBuilder )org.joda.time.format.PeriodFormatterBuilder"->"org.joda.time.format.PeriodFormatterBuilder"[label="1"]
"(static)org.joda.time.format.PeriodFormatterBuilder.appendYears(org.joda.time.format.PeriodFormatterBuilder )org.joda.time.format.PeriodFormatterBuilder"->"org.joda.time.format.PeriodFormatterBuilder"[label="1"]
"(static)org.joda.time.format.PeriodFormatterBuilder.maximumParsedDigits(org.joda.time.format.PeriodFormatterBuilder int )org.joda.time.format.PeriodFormatterBuilder"->"org.joda.time.format.PeriodFormatterBuilder"[label="1"]
"(static)org.joda.time.format.PeriodFormatterBuilder.minimumPrintedDigits(org.joda.time.format.PeriodFormatterBuilder int )org.joda.time.format.PeriodFormatterBuilder"->"org.joda.time.format.PeriodFormatterBuilder"[label="1"]
"(static)org.joda.time.format.PeriodFormatterBuilder.printZeroAlways(org.joda.time.format.PeriodFormatterBuilder )org.joda.time.format.PeriodFormatterBuilder"->"org.joda.time.format.PeriodFormatterBuilder"[label="1"]
"(static)org.joda.time.format.PeriodFormatterBuilder.printZeroIfSupported(org.joda.time.format.PeriodFormatterBuilder )org.joda.time.format.PeriodFormatterBuilder"->"org.joda.time.format.PeriodFormatterBuilder"[label="1"]
"(static)org.joda.time.format.PeriodFormatterBuilder.printZeroNever(org.joda.time.format.PeriodFormatterBuilder )org.joda.time.format.PeriodFormatterBuilder"->"org.joda.time.format.PeriodFormatterBuilder"[label="1"]
"(static)org.joda.time.format.PeriodFormatterBuilder.printZeroRarelyFirst(org.joda.time.format.PeriodFormatterBuilder )org.joda.time.format.PeriodFormatterBuilder"->"org.joda.time.format.PeriodFormatterBuilder"[label="1"]
"(static)org.joda.time.format.PeriodFormatterBuilder.printZeroRarelyLast(org.joda.time.format.PeriodFormatterBuilder )org.joda.time.format.PeriodFormatterBuilder"->"org.joda.time.format.PeriodFormatterBuilder"[label="1"]
"(static)org.joda.time.format.PeriodFormatterBuilder.rejectSignedValues(org.joda.time.format.PeriodFormatterBuilder boolean )org.joda.time.format.PeriodFormatterBuilder"->"org.joda.time.format.PeriodFormatterBuilder"[label="1"]
"(static)org.joda.time.format.PeriodFormatterBuilder.toFormatter(org.joda.time.format.PeriodFormatterBuilder )org.joda.time.format.PeriodFormatter"->"org.joda.time.format.PeriodFormatter"[label="1"]
"(static)org.joda.time.format.PeriodFormatterBuilder.toParser(org.joda.time.format.PeriodFormatterBuilder )org.joda.time.format.PeriodParser"->"org.joda.time.format.PeriodParser"[label="1"]
"(static)org.joda.time.format.PeriodFormatterBuilder.toPrinter(org.joda.time.format.PeriodFormatterBuilder )org.joda.time.format.PeriodPrinter"->"org.joda.time.format.PeriodPrinter"[label="1"]
"(static)org.joda.time.format.PeriodPrinter.calculatePrintedLength(org.joda.time.format.PeriodPrinter org.joda.time.ReadablePeriod java.util.Locale )int"->"int"[label="1"]
"(static)org.joda.time.tz.CachedDateTimeZone$Info.getNameKey(org.joda.time.tz.CachedDateTimeZone$Info long )java.lang.String"->"java.lang.String"[label="1"]
"(static)org.joda.time.tz.CachedDateTimeZone$Info.getOffset(org.joda.time.tz.CachedDateTimeZone$Info long )int"->"int"[label="1"]
"(static)org.joda.time.tz.CachedDateTimeZone$Info.getStandardOffset(org.joda.time.tz.CachedDateTimeZone$Info long )int"->"int"[label="1"]
"(static)org.joda.time.tz.CachedDateTimeZone.equals(org.joda.time.tz.CachedDateTimeZone java.lang.Object )boolean"->"boolean"[label="1"]
"(static)org.joda.time.tz.CachedDateTimeZone.getNameKey(org.joda.time.tz.CachedDateTimeZone long )java.lang.String"->"java.lang.String"[label="1"]
"(static)org.joda.time.tz.CachedDateTimeZone.getOffset(org.joda.time.tz.CachedDateTimeZone long )int"->"int"[label="1"]
"(static)org.joda.time.tz.CachedDateTimeZone.getStandardOffset(org.joda.time.tz.CachedDateTimeZone long )int"->"int"[label="1"]
"(static)org.joda.time.tz.CachedDateTimeZone.getUncachedZone(org.joda.time.tz.CachedDateTimeZone )org.joda.time.DateTimeZone"->"org.joda.time.DateTimeZone"[label="1"]
"(static)org.joda.time.tz.CachedDateTimeZone.isFixed(org.joda.time.tz.CachedDateTimeZone )boolean"->"boolean"[label="1"]
"(static)org.joda.time.tz.CachedDateTimeZone.nextTransition(org.joda.time.tz.CachedDateTimeZone long )long"->"long"[label="1"]
"(static)org.joda.time.tz.CachedDateTimeZone.previousTransition(org.joda.time.tz.CachedDateTimeZone long )long"->"long"[label="1"]
"(static)org.joda.time.tz.DateTimeZoneBuilder$DSTZone.equals(org.joda.time.tz.DateTimeZoneBuilder$DSTZone java.lang.Object )boolean"->"boolean"[label="1"]
"(static)org.joda.time.tz.DateTimeZoneBuilder$DSTZone.getNameKey(org.joda.time.tz.DateTimeZoneBuilder$DSTZone long )java.lang.String"->"java.lang.String"[label="1"]
"(static)org.joda.time.tz.DateTimeZoneBuilder$DSTZone.getOffset(org.joda.time.tz.DateTimeZoneBuilder$DSTZone long )int"->"int"[label="1"]
"(static)org.joda.time.tz.DateTimeZoneBuilder$DSTZone.getStandardOffset(org.joda.time.tz.DateTimeZoneBuilder$DSTZone long )int"->"int"[label="1"]
"(static)org.joda.time.tz.DateTimeZoneBuilder$DSTZone.isFixed(org.joda.time.tz.DateTimeZoneBuilder$DSTZone )boolean"->"boolean"[label="1"]
"(static)org.joda.time.tz.DateTimeZoneBuilder$DSTZone.nextTransition(org.joda.time.tz.DateTimeZoneBuilder$DSTZone long )long"->"long"[label="1"]
"(static)org.joda.time.tz.DateTimeZoneBuilder$DSTZone.previousTransition(org.joda.time.tz.DateTimeZoneBuilder$DSTZone long )long"->"long"[label="1"]
"(static)org.joda.time.tz.DateTimeZoneBuilder$OfYear.equals(org.joda.time.tz.DateTimeZoneBuilder$OfYear java.lang.Object )boolean"->"boolean"[label="1"]
"(static)org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.equals(org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone java.lang.Object )boolean"->"boolean"[label="1"]
"(static)org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.getNameKey(org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone long )java.lang.String"->"java.lang.String"[label="1"]
"(static)org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.getOffset(org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone long )int"->"int"[label="1"]
"(static)org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.getStandardOffset(org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone long )int"->"int"[label="1"]
"(static)org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.isCachable(org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone )boolean"->"boolean"[label="1"]
"(static)org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.isFixed(org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone )boolean"->"boolean"[label="1"]
"(static)org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.nextTransition(org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone long )long"->"long"[label="1"]
"(static)org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.previousTransition(org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone long )long"->"long"[label="1"]
"(static)org.joda.time.tz.DateTimeZoneBuilder$Recurrence.equals(org.joda.time.tz.DateTimeZoneBuilder$Recurrence java.lang.Object )boolean"->"boolean"[label="1"]
"(static)org.joda.time.tz.DateTimeZoneBuilder$Recurrence.getNameKey(org.joda.time.tz.DateTimeZoneBuilder$Recurrence )java.lang.String"->"java.lang.String"[label="1"]
"(static)org.joda.time.tz.DateTimeZoneBuilder$Recurrence.getOfYear(org.joda.time.tz.DateTimeZoneBuilder$Recurrence )org.joda.time.tz.DateTimeZoneBuilder$OfYear"->"org.joda.time.tz.DateTimeZoneBuilder$OfYear"[label="1"]
"(static)org.joda.time.tz.DateTimeZoneBuilder$Recurrence.getSaveMillis(org.joda.time.tz.DateTimeZoneBuilder$Recurrence )int"->"int"[label="1"]
"(static)org.joda.time.tz.DateTimeZoneBuilder$Rule.getFromYear(org.joda.time.tz.DateTimeZoneBuilder$Rule )int"->"int"[label="1"]
"(static)org.joda.time.tz.DateTimeZoneBuilder$Rule.getNameKey(org.joda.time.tz.DateTimeZoneBuilder$Rule )java.lang.String"->"java.lang.String"[label="1"]
"(static)org.joda.time.tz.DateTimeZoneBuilder$Rule.getOfYear(org.joda.time.tz.DateTimeZoneBuilder$Rule )org.joda.time.tz.DateTimeZoneBuilder$OfYear"->"org.joda.time.tz.DateTimeZoneBuilder$OfYear"[label="1"]
"(static)org.joda.time.tz.DateTimeZoneBuilder$Rule.getSaveMillis(org.joda.time.tz.DateTimeZoneBuilder$Rule )int"->"int"[label="1"]
"(static)org.joda.time.tz.DateTimeZoneBuilder$Rule.getToYear(org.joda.time.tz.DateTimeZoneBuilder$Rule )int"->"int"[label="1"]
"(static)org.joda.time.tz.DateTimeZoneBuilder$RuleSet.buildTailZone(org.joda.time.tz.DateTimeZoneBuilder$RuleSet java.lang.String )org.joda.time.tz.DateTimeZoneBuilder$DSTZone"->"org.joda.time.tz.DateTimeZoneBuilder$DSTZone"[label="1"]
"(static)org.joda.time.tz.DateTimeZoneBuilder$RuleSet.firstTransition(org.joda.time.tz.DateTimeZoneBuilder$RuleSet long )org.joda.time.tz.DateTimeZoneBuilder$Transition"->"org.joda.time.tz.DateTimeZoneBuilder$Transition"[label="1"]
"(static)org.joda.time.tz.DateTimeZoneBuilder$RuleSet.getStandardOffset(org.joda.time.tz.DateTimeZoneBuilder$RuleSet )int"->"int"[label="1"]
"(static)org.joda.time.tz.DateTimeZoneBuilder$RuleSet.getUpperLimit(org.joda.time.tz.DateTimeZoneBuilder$RuleSet int )long"->"long"[label="1"]
"(static)org.joda.time.tz.DateTimeZoneBuilder$RuleSet.nextTransition(org.joda.time.tz.DateTimeZoneBuilder$RuleSet long int )org.joda.time.tz.DateTimeZoneBuilder$Transition"->"org.joda.time.tz.DateTimeZoneBuilder$Transition"[label="1"]
"(static)org.joda.time.tz.DateTimeZoneBuilder$Transition.getMillis(org.joda.time.tz.DateTimeZoneBuilder$Transition )long"->"long"[label="1"]
"(static)org.joda.time.tz.DateTimeZoneBuilder$Transition.getNameKey(org.joda.time.tz.DateTimeZoneBuilder$Transition )java.lang.String"->"java.lang.String"[label="1"]
"(static)org.joda.time.tz.DateTimeZoneBuilder$Transition.getSaveMillis(org.joda.time.tz.DateTimeZoneBuilder$Transition )int"->"int"[label="1"]
"(static)org.joda.time.tz.DateTimeZoneBuilder$Transition.getStandardOffset(org.joda.time.tz.DateTimeZoneBuilder$Transition )int"->"int"[label="1"]
"(static)org.joda.time.tz.DateTimeZoneBuilder$Transition.getWallOffset(org.joda.time.tz.DateTimeZoneBuilder$Transition )int"->"int"[label="1"]
"(static)org.joda.time.tz.DateTimeZoneBuilder$Transition.isTransitionFrom(org.joda.time.tz.DateTimeZoneBuilder$Transition org.joda.time.tz.DateTimeZoneBuilder$Transition )boolean"->"boolean"[label="1"]
"(static)org.joda.time.tz.DateTimeZoneBuilder.setFixedSavings(org.joda.time.tz.DateTimeZoneBuilder java.lang.String int )org.joda.time.tz.DateTimeZoneBuilder"->"org.joda.time.tz.DateTimeZoneBuilder"[label="1"]
"(static)org.joda.time.tz.DateTimeZoneBuilder.setStandardOffset(org.joda.time.tz.DateTimeZoneBuilder int )org.joda.time.tz.DateTimeZoneBuilder"->"org.joda.time.tz.DateTimeZoneBuilder"[label="1"]
"(static)org.joda.time.tz.DateTimeZoneBuilder.toDateTimeZone(org.joda.time.tz.DateTimeZoneBuilder java.lang.String boolean )org.joda.time.DateTimeZone"->"org.joda.time.DateTimeZone"[label="1"]
"(static)org.joda.time.tz.FixedDateTimeZone.equals(org.joda.time.tz.FixedDateTimeZone java.lang.Object )boolean"->"boolean"[label="1"]
"(static)org.joda.time.tz.FixedDateTimeZone.getNameKey(org.joda.time.tz.FixedDateTimeZone long )java.lang.String"->"java.lang.String"[label="1"]
"(static)org.joda.time.tz.FixedDateTimeZone.getOffset(org.joda.time.tz.FixedDateTimeZone long )int"->"int"[label="1"]
"(static)org.joda.time.tz.FixedDateTimeZone.getOffsetFromLocal(org.joda.time.tz.FixedDateTimeZone long )int"->"int"[label="1"]
"(static)org.joda.time.tz.FixedDateTimeZone.getStandardOffset(org.joda.time.tz.FixedDateTimeZone long )int"->"int"[label="1"]
"(static)org.joda.time.tz.FixedDateTimeZone.isFixed(org.joda.time.tz.FixedDateTimeZone )boolean"->"boolean"[label="1"]
"(static)org.joda.time.tz.FixedDateTimeZone.nextTransition(org.joda.time.tz.FixedDateTimeZone long )long"->"long"[label="1"]
"(static)org.joda.time.tz.FixedDateTimeZone.previousTransition(org.joda.time.tz.FixedDateTimeZone long )long"->"long"[label="1"]
"(static)org.joda.time.tz.FixedDateTimeZone.toTimeZone(org.joda.time.tz.FixedDateTimeZone )java.util.TimeZone"->"java.util.TimeZone"[label="1"]
"(static)org.joda.time.tz.Provider.getAvailableIDs(org.joda.time.tz.Provider )java.util.Set"->"java.util.Set"[label="1"]
"(static)org.joda.time.tz.Provider.getZone(org.joda.time.tz.Provider java.lang.String )org.joda.time.DateTimeZone"->"org.joda.time.DateTimeZone"[label="1"]
"(static)org.joda.time.tz.UTCProvider.getAvailableIDs(org.joda.time.tz.UTCProvider )java.util.Set"->"java.util.Set"[label="1"]
"(static)org.joda.time.tz.UTCProvider.getZone(org.joda.time.tz.UTCProvider java.lang.String )org.joda.time.DateTimeZone"->"org.joda.time.DateTimeZone"[label="1"]
"(static)org.joda.time.tz.ZoneInfoCompiler.compile(org.joda.time.tz.ZoneInfoCompiler java.io.File java.io.File[] )java.util.Map"->"java.util.Map"[label="1"]
"(static)org.joda.time.tz.ZoneInfoProvider.getAvailableIDs(org.joda.time.tz.ZoneInfoProvider )java.util.Set"->"java.util.Set"[label="1"]
"(static)org.joda.time.tz.ZoneInfoProvider.getZone(org.joda.time.tz.ZoneInfoProvider java.lang.String )org.joda.time.DateTimeZone"->"org.joda.time.DateTimeZone"[label="1"]
"org.joda.time.Chronology()"->"org.joda.time.Chronology"[label="1"]
"org.joda.time.DateMidnight$PropertyIsPolymorphicToorg.joda.time.field.AbstractReadableInstantFieldProperty"->"org.joda.time.field.AbstractReadableInstantFieldProperty"[label="1"]
"org.joda.time.DateMidnight()"->"org.joda.time.DateMidnight"[label="1"]
"org.joda.time.DateMidnight(java.lang.Object )"->"org.joda.time.DateMidnight"[label="1"]
"org.joda.time.DateMidnight(java.lang.Object org.joda.time.Chronology )"->"org.joda.time.DateMidnight"[label="1"]
"org.joda.time.DateMidnight(java.lang.Object org.joda.time.DateTimeZone )"->"org.joda.time.DateMidnight"[label="1"]
"org.joda.time.DateMidnight(long )"->"org.joda.time.DateMidnight"[label="1"]
"org.joda.time.DateMidnight(long org.joda.time.Chronology )"->"org.joda.time.DateMidnight"[label="1"]
"org.joda.time.DateMidnight(long org.joda.time.DateTimeZone )"->"org.joda.time.DateMidnight"[label="1"]
"org.joda.time.DateMidnight(org.joda.time.Chronology )"->"org.joda.time.DateMidnight"[label="1"]
"org.joda.time.DateMidnight(org.joda.time.DateTimeZone )"->"org.joda.time.DateMidnight"[label="1"]
"org.joda.time.DateMidnight.now()org.joda.time.DateMidnight"->"org.joda.time.DateMidnight"[label="1"]
"org.joda.time.DateMidnight.now(org.joda.time.Chronology )org.joda.time.DateMidnight"->"org.joda.time.DateMidnight"[label="1"]
"org.joda.time.DateMidnight.now(org.joda.time.DateTimeZone )org.joda.time.DateMidnight"->"org.joda.time.DateMidnight"[label="1"]
"org.joda.time.DateMidnight.parse(java.lang.String )org.joda.time.DateMidnight"->"org.joda.time.DateMidnight"[label="1"]
"org.joda.time.DateMidnight.parse(java.lang.String org.joda.time.format.DateTimeFormatter )org.joda.time.DateMidnight"->"org.joda.time.DateMidnight"[label="1"]
"org.joda.time.DateMidnightIsPolymorphicToorg.joda.time.base.AbstractDateTime"->"org.joda.time.base.AbstractDateTime"[label="1"]
"org.joda.time.DateTime$PropertyIsPolymorphicToorg.joda.time.field.AbstractReadableInstantFieldProperty"->"org.joda.time.field.AbstractReadableInstantFieldProperty"[label="1"]
"org.joda.time.DateTime()"->"org.joda.time.DateTime"[label="1"]
"org.joda.time.DateTime(java.lang.Object )"->"org.joda.time.DateTime"[label="1"]
"org.joda.time.DateTime(java.lang.Object org.joda.time.Chronology )"->"org.joda.time.DateTime"[label="1"]
"org.joda.time.DateTime(java.lang.Object org.joda.time.DateTimeZone )"->"org.joda.time.DateTime"[label="1"]
"org.joda.time.DateTime(long )"->"org.joda.time.DateTime"[label="1"]
"org.joda.time.DateTime(long org.joda.time.Chronology )"->"org.joda.time.DateTime"[label="1"]
"org.joda.time.DateTime(long org.joda.time.DateTimeZone )"->"org.joda.time.DateTime"[label="1"]
"org.joda.time.DateTime(org.joda.time.Chronology )"->"org.joda.time.DateTime"[label="1"]
"org.joda.time.DateTime(org.joda.time.DateTimeZone )"->"org.joda.time.DateTime"[label="1"]
"org.joda.time.DateTime.now()org.joda.time.DateTime"->"org.joda.time.DateTime"[label="1"]
"org.joda.time.DateTime.now(org.joda.time.Chronology )org.joda.time.DateTime"->"org.joda.time.DateTime"[label="1"]
"org.joda.time.DateTime.now(org.joda.time.DateTimeZone )org.joda.time.DateTime"->"org.joda.time.DateTime"[label="1"]
"org.joda.time.DateTime.parse(java.lang.String )org.joda.time.DateTime"->"org.joda.time.DateTime"[label="1"]
"org.joda.time.DateTime.parse(java.lang.String org.joda.time.format.DateTimeFormatter )org.joda.time.DateTime"->"org.joda.time.DateTime"[label="1"]
"org.joda.time.DateTimeComparator.getDateOnlyInstance()org.joda.time.DateTimeComparator"->"org.joda.time.DateTimeComparator"[label="1"]
"org.joda.time.DateTimeComparator.getInstance()org.joda.time.DateTimeComparator"->"org.joda.time.DateTimeComparator"[label="1"]
"org.joda.time.DateTimeComparator.getInstance(org.joda.time.DateTimeFieldType )org.joda.time.DateTimeComparator"->"org.joda.time.DateTimeComparator"[label="1"]
"org.joda.time.DateTimeComparator.getInstance(org.joda.time.DateTimeFieldType org.joda.time.DateTimeFieldType )org.joda.time.DateTimeComparator"->"org.joda.time.DateTimeComparator"[label="1"]
"org.joda.time.DateTimeComparator.getTimeOnlyInstance()org.joda.time.DateTimeComparator"->"org.joda.time.DateTimeComparator"[label="1"]
"org.joda.time.DateTimeField()"->"org.joda.time.DateTimeField"[label="1"]
"org.joda.time.DateTimeFieldType.centuryOfEra()org.joda.time.DateTimeFieldType"->"org.joda.time.DateTimeFieldType"[label="1"]
"org.joda.time.DateTimeFieldType.clockhourOfDay()org.joda.time.DateTimeFieldType"->"org.joda.time.DateTimeFieldType"[label="1"]
"org.joda.time.DateTimeFieldType.clockhourOfHalfday()org.joda.time.DateTimeFieldType"->"org.joda.time.DateTimeFieldType"[label="1"]
"org.joda.time.DateTimeFieldType.dayOfMonth()org.joda.time.DateTimeFieldType"->"org.joda.time.DateTimeFieldType"[label="1"]
"org.joda.time.DateTimeFieldType.dayOfWeek()org.joda.time.DateTimeFieldType"->"org.joda.time.DateTimeFieldType"[label="1"]
"org.joda.time.DateTimeFieldType.dayOfYear()org.joda.time.DateTimeFieldType"->"org.joda.time.DateTimeFieldType"[label="1"]
"org.joda.time.DateTimeFieldType.era()org.joda.time.DateTimeFieldType"->"org.joda.time.DateTimeFieldType"[label="1"]
"org.joda.time.DateTimeFieldType.halfdayOfDay()org.joda.time.DateTimeFieldType"->"org.joda.time.DateTimeFieldType"[label="1"]
"org.joda.time.DateTimeFieldType.hourOfDay()org.joda.time.DateTimeFieldType"->"org.joda.time.DateTimeFieldType"[label="1"]
"org.joda.time.DateTimeFieldType.hourOfHalfday()org.joda.time.DateTimeFieldType"->"org.joda.time.DateTimeFieldType"[label="1"]
"org.joda.time.DateTimeFieldType.millisOfDay()org.joda.time.DateTimeFieldType"->"org.joda.time.DateTimeFieldType"[label="1"]
"org.joda.time.DateTimeFieldType.millisOfSecond()org.joda.time.DateTimeFieldType"->"org.joda.time.DateTimeFieldType"[label="1"]
"org.joda.time.DateTimeFieldType.minuteOfDay()org.joda.time.DateTimeFieldType"->"org.joda.time.DateTimeFieldType"[label="1"]
"org.joda.time.DateTimeFieldType.minuteOfHour()org.joda.time.DateTimeFieldType"->"org.joda.time.DateTimeFieldType"[label="1"]
"org.joda.time.DateTimeFieldType.monthOfYear()org.joda.time.DateTimeFieldType"->"org.joda.time.DateTimeFieldType"[label="1"]
"org.joda.time.DateTimeFieldType.secondOfDay()org.joda.time.DateTimeFieldType"->"org.joda.time.DateTimeFieldType"[label="1"]
"org.joda.time.DateTimeFieldType.secondOfMinute()org.joda.time.DateTimeFieldType"->"org.joda.time.DateTimeFieldType"[label="1"]
"org.joda.time.DateTimeFieldType.weekOfWeekyear()org.joda.time.DateTimeFieldType"->"org.joda.time.DateTimeFieldType"[label="1"]
"org.joda.time.DateTimeFieldType.weekyear()org.joda.time.DateTimeFieldType"->"org.joda.time.DateTimeFieldType"[label="1"]
"org.joda.time.DateTimeFieldType.weekyearOfCentury()org.joda.time.DateTimeFieldType"->"org.joda.time.DateTimeFieldType"[label="1"]
"org.joda.time.DateTimeFieldType.year()org.joda.time.DateTimeFieldType"->"org.joda.time.DateTimeFieldType"[label="1"]
"org.joda.time.DateTimeFieldType.yearOfCentury()org.joda.time.DateTimeFieldType"->"org.joda.time.DateTimeFieldType"[label="1"]
"org.joda.time.DateTimeFieldType.yearOfEra()org.joda.time.DateTimeFieldType"->"org.joda.time.DateTimeFieldType"[label="1"]
"org.joda.time.DateTimeIsPolymorphicToorg.joda.time.base.AbstractDateTime"->"org.joda.time.base.AbstractDateTime"[label="1"]
"org.joda.time.DateTimeUtils.currentTimeMillis()long"->"long"[label="1"]
"org.joda.time.DateTimeUtils.fromJulianDay(double )long"->"long"[label="1"]
"org.joda.time.DateTimeUtils.getChronology(org.joda.time.Chronology )org.joda.time.Chronology"->"org.joda.time.Chronology"[label="1"]
"org.joda.time.DateTimeUtils.getDateFormatSymbols(java.util.Locale )java.text.DateFormatSymbols"->"java.text.DateFormatSymbols"[label="1"]
"org.joda.time.DateTimeUtils.getDefaultTimeZoneNames()java.util.Map"->"java.util.Map"[label="1"]
"org.joda.time.DateTimeUtils.getDurationMillis(org.joda.time.ReadableDuration )long"->"long"[label="1"]
"org.joda.time.DateTimeUtils.getInstantChronology(org.joda.time.ReadableInstant )org.joda.time.Chronology"->"org.joda.time.Chronology"[label="1"]
"org.joda.time.DateTimeUtils.getInstantMillis(org.joda.time.ReadableInstant )long"->"long"[label="1"]
"org.joda.time.DateTimeUtils.getIntervalChronology(org.joda.time.ReadableInstant org.joda.time.ReadableInstant )org.joda.time.Chronology"->"org.joda.time.Chronology"[label="1"]
"org.joda.time.DateTimeUtils.getIntervalChronology(org.joda.time.ReadableInterval )org.joda.time.Chronology"->"org.joda.time.Chronology"[label="1"]
"org.joda.time.DateTimeUtils.getPeriodType(org.joda.time.PeriodType )org.joda.time.PeriodType"->"org.joda.time.PeriodType"[label="1"]
"org.joda.time.DateTimeUtils.getReadableInterval(org.joda.time.ReadableInterval )org.joda.time.ReadableInterval"->"org.joda.time.ReadableInterval"[label="1"]
"org.joda.time.DateTimeUtils.getZone(org.joda.time.DateTimeZone )org.joda.time.DateTimeZone"->"org.joda.time.DateTimeZone"[label="1"]
"org.joda.time.DateTimeUtils.isContiguous(org.joda.time.ReadablePartial )boolean"->"boolean"[label="1"]
"org.joda.time.DateTimeUtils.toJulianDay(long )double"->"double"[label="1"]
"org.joda.time.DateTimeUtils.toJulianDayNumber(long )long"->"long"[label="1"]
"org.joda.time.DateTimeZone.forID(java.lang.String )org.joda.time.DateTimeZone"->"org.joda.time.DateTimeZone"[label="1"]
"org.joda.time.DateTimeZone.forOffsetHours(int )org.joda.time.DateTimeZone"->"org.joda.time.DateTimeZone"[label="1"]
"org.joda.time.DateTimeZone.forOffsetHoursMinutes(int int )org.joda.time.DateTimeZone"->"org.joda.time.DateTimeZone"[label="1"]
"org.joda.time.DateTimeZone.forOffsetMillis(int )org.joda.time.DateTimeZone"->"org.joda.time.DateTimeZone"[label="1"]
"org.joda.time.DateTimeZone.forTimeZone(java.util.TimeZone )org.joda.time.DateTimeZone"->"org.joda.time.DateTimeZone"[label="1"]
"org.joda.time.DateTimeZone.getAvailableIDs()java.util.Set"->"java.util.Set"[label="1"]
"org.joda.time.DateTimeZone.getDefault()org.joda.time.DateTimeZone"->"org.joda.time.DateTimeZone"[label="1"]
"org.joda.time.DateTimeZone.getNameProvider()org.joda.time.tz.NameProvider"->"org.joda.time.tz.NameProvider"[label="1"]
"org.joda.time.DateTimeZone.getProvider()org.joda.time.tz.Provider"->"org.joda.time.tz.Provider"[label="1"]
"org.joda.time.Days.days(int )org.joda.time.Days"->"org.joda.time.Days"[label="1"]
"org.joda.time.Days.daysBetween(org.joda.time.ReadableInstant org.joda.time.ReadableInstant )org.joda.time.Days"->"org.joda.time.Days"[label="1"]
"org.joda.time.Days.daysBetween(org.joda.time.ReadablePartial org.joda.time.ReadablePartial )org.joda.time.Days"->"org.joda.time.Days"[label="1"]
"org.joda.time.Days.daysIn(org.joda.time.ReadableInterval )org.joda.time.Days"->"org.joda.time.Days"[label="1"]
"org.joda.time.Days.parseDays(java.lang.String )org.joda.time.Days"->"org.joda.time.Days"[label="1"]
"org.joda.time.Days.standardDaysIn(org.joda.time.ReadablePeriod )org.joda.time.Days"->"org.joda.time.Days"[label="1"]
"org.joda.time.Duration(java.lang.Object )"->"org.joda.time.Duration"[label="1"]
"org.joda.time.Duration(long )"->"org.joda.time.Duration"[label="1"]
"org.joda.time.Duration(long long )"->"org.joda.time.Duration"[label="1"]
"org.joda.time.Duration(org.joda.time.ReadableInstant org.joda.time.ReadableInstant )"->"org.joda.time.Duration"[label="1"]
"org.joda.time.Duration.millis(long )org.joda.time.Duration"->"org.joda.time.Duration"[label="1"]
"org.joda.time.Duration.parse(java.lang.String )org.joda.time.Duration"->"org.joda.time.Duration"[label="1"]
"org.joda.time.Duration.standardDays(long )org.joda.time.Duration"->"org.joda.time.Duration"[label="1"]
"org.joda.time.Duration.standardHours(long )org.joda.time.Duration"->"org.joda.time.Duration"[label="1"]
"org.joda.time.Duration.standardMinutes(long )org.joda.time.Duration"->"org.joda.time.Duration"[label="1"]
"org.joda.time.Duration.standardSeconds(long )org.joda.time.Duration"->"org.joda.time.Duration"[label="1"]
"org.joda.time.DurationField()"->"org.joda.time.DurationField"[label="1"]
"org.joda.time.DurationFieldType.centuries()org.joda.time.DurationFieldType"->"org.joda.time.DurationFieldType"[label="1"]
"org.joda.time.DurationFieldType.days()org.joda.time.DurationFieldType"->"org.joda.time.DurationFieldType"[label="1"]
"org.joda.time.DurationFieldType.eras()org.joda.time.DurationFieldType"->"org.joda.time.DurationFieldType"[label="1"]
"org.joda.time.DurationFieldType.halfdays()org.joda.time.DurationFieldType"->"org.joda.time.DurationFieldType"[label="1"]
"org.joda.time.DurationFieldType.hours()org.joda.time.DurationFieldType"->"org.joda.time.DurationFieldType"[label="1"]
"org.joda.time.DurationFieldType.millis()org.joda.time.DurationFieldType"->"org.joda.time.DurationFieldType"[label="1"]
"org.joda.time.DurationFieldType.minutes()org.joda.time.DurationFieldType"->"org.joda.time.DurationFieldType"[label="1"]
"org.joda.time.DurationFieldType.months()org.joda.time.DurationFieldType"->"org.joda.time.DurationFieldType"[label="1"]
"org.joda.time.DurationFieldType.seconds()org.joda.time.DurationFieldType"->"org.joda.time.DurationFieldType"[label="1"]
"org.joda.time.DurationFieldType.weeks()org.joda.time.DurationFieldType"->"org.joda.time.DurationFieldType"[label="1"]
"org.joda.time.DurationFieldType.weekyears()org.joda.time.DurationFieldType"->"org.joda.time.DurationFieldType"[label="1"]
"org.joda.time.DurationFieldType.years()org.joda.time.DurationFieldType"->"org.joda.time.DurationFieldType"[label="1"]
"org.joda.time.Hours.hours(int )org.joda.time.Hours"->"org.joda.time.Hours"[label="1"]
"org.joda.time.Hours.hoursBetween(org.joda.time.ReadableInstant org.joda.time.ReadableInstant )org.joda.time.Hours"->"org.joda.time.Hours"[label="1"]
"org.joda.time.Hours.hoursBetween(org.joda.time.ReadablePartial org.joda.time.ReadablePartial )org.joda.time.Hours"->"org.joda.time.Hours"[label="1"]
"org.joda.time.Hours.hoursIn(org.joda.time.ReadableInterval )org.joda.time.Hours"->"org.joda.time.Hours"[label="1"]
"org.joda.time.Hours.parseHours(java.lang.String )org.joda.time.Hours"->"org.joda.time.Hours"[label="1"]
"org.joda.time.Hours.standardHoursIn(org.joda.time.ReadablePeriod )org.joda.time.Hours"->"org.joda.time.Hours"[label="1"]
"org.joda.time.IllegalFieldValueException(java.lang.String java.lang.String )"->"org.joda.time.IllegalFieldValueException"[label="1"]
"org.joda.time.IllegalFieldValueException(org.joda.time.DateTimeFieldType java.lang.String )"->"org.joda.time.IllegalFieldValueException"[label="1"]
"org.joda.time.IllegalFieldValueException(org.joda.time.DurationFieldType java.lang.String )"->"org.joda.time.IllegalFieldValueException"[label="1"]
"org.joda.time.IllegalInstantException(java.lang.String )"->"org.joda.time.IllegalInstantException"[label="1"]
"org.joda.time.IllegalInstantException(long java.lang.String )"->"org.joda.time.IllegalInstantException"[label="1"]
"org.joda.time.IllegalInstantException.isIllegalInstant(java.lang.Throwable )boolean"->"boolean"[label="1"]
"org.joda.time.Instant()"->"org.joda.time.Instant"[label="1"]
"org.joda.time.Instant(java.lang.Object )"->"org.joda.time.Instant"[label="1"]
"org.joda.time.Instant(long )"->"org.joda.time.Instant"[label="1"]
"org.joda.time.Instant.now()org.joda.time.Instant"->"org.joda.time.Instant"[label="1"]
"org.joda.time.Instant.parse(java.lang.String )org.joda.time.Instant"->"org.joda.time.Instant"[label="1"]
"org.joda.time.Instant.parse(java.lang.String org.joda.time.format.DateTimeFormatter )org.joda.time.Instant"->"org.joda.time.Instant"[label="1"]
"org.joda.time.Interval(java.lang.Object )"->"org.joda.time.Interval"[label="1"]
"org.joda.time.Interval(java.lang.Object org.joda.time.Chronology )"->"org.joda.time.Interval"[label="1"]
"org.joda.time.Interval(long long )"->"org.joda.time.Interval"[label="1"]
"org.joda.time.Interval(org.joda.time.ReadableDuration org.joda.time.ReadableInstant )"->"org.joda.time.Interval"[label="1"]
"org.joda.time.Interval(org.joda.time.ReadableInstant org.joda.time.ReadableDuration )"->"org.joda.time.Interval"[label="1"]
"org.joda.time.Interval(org.joda.time.ReadableInstant org.joda.time.ReadableInstant )"->"org.joda.time.Interval"[label="1"]
"org.joda.time.Interval(org.joda.time.ReadableInstant org.joda.time.ReadablePeriod )"->"org.joda.time.Interval"[label="1"]
"org.joda.time.Interval(org.joda.time.ReadablePeriod org.joda.time.ReadableInstant )"->"org.joda.time.Interval"[label="1"]
"org.joda.time.Interval.parse(java.lang.String )org.joda.time.Interval"->"org.joda.time.Interval"[label="1"]
"org.joda.time.JodaTimePermission(java.lang.String )"->"org.joda.time.JodaTimePermission"[label="1"]
"org.joda.time.LocalDate$PropertyIsPolymorphicToorg.joda.time.field.AbstractReadableInstantFieldProperty"->"org.joda.time.field.AbstractReadableInstantFieldProperty"[label="1"]
"org.joda.time.LocalDate()"->"org.joda.time.LocalDate"[label="1"]
"org.joda.time.LocalDate(java.lang.Object )"->"org.joda.time.LocalDate"[label="1"]
"org.joda.time.LocalDate(java.lang.Object org.joda.time.Chronology )"->"org.joda.time.LocalDate"[label="1"]
"org.joda.time.LocalDate(java.lang.Object org.joda.time.DateTimeZone )"->"org.joda.time.LocalDate"[label="1"]
"org.joda.time.LocalDate(long )"->"org.joda.time.LocalDate"[label="1"]
"org.joda.time.LocalDate(long org.joda.time.Chronology )"->"org.joda.time.LocalDate"[label="1"]
"org.joda.time.LocalDate(long org.joda.time.DateTimeZone )"->"org.joda.time.LocalDate"[label="1"]
"org.joda.time.LocalDate(org.joda.time.Chronology )"->"org.joda.time.LocalDate"[label="1"]
"org.joda.time.LocalDate(org.joda.time.DateTimeZone )"->"org.joda.time.LocalDate"[label="1"]
"org.joda.time.LocalDate.fromCalendarFields(java.util.Calendar )org.joda.time.LocalDate"->"org.joda.time.LocalDate"[label="1"]
"org.joda.time.LocalDate.fromDateFields(java.util.Date )org.joda.time.LocalDate"->"org.joda.time.LocalDate"[label="1"]
"org.joda.time.LocalDate.now()org.joda.time.LocalDate"->"org.joda.time.LocalDate"[label="1"]
"org.joda.time.LocalDate.now(org.joda.time.Chronology )org.joda.time.LocalDate"->"org.joda.time.LocalDate"[label="1"]
"org.joda.time.LocalDate.now(org.joda.time.DateTimeZone )org.joda.time.LocalDate"->"org.joda.time.LocalDate"[label="1"]
"org.joda.time.LocalDate.parse(java.lang.String )org.joda.time.LocalDate"->"org.joda.time.LocalDate"[label="1"]
"org.joda.time.LocalDate.parse(java.lang.String org.joda.time.format.DateTimeFormatter )org.joda.time.LocalDate"->"org.joda.time.LocalDate"[label="1"]
"org.joda.time.LocalDateIsPolymorphicToorg.joda.time.ReadablePartial"->"org.joda.time.ReadablePartial"[label="1"]
"org.joda.time.LocalDateTime$PropertyIsPolymorphicToorg.joda.time.field.AbstractReadableInstantFieldProperty"->"org.joda.time.field.AbstractReadableInstantFieldProperty"[label="1"]
"org.joda.time.LocalDateTime()"->"org.joda.time.LocalDateTime"[label="1"]
"org.joda.time.LocalDateTime(java.lang.Object )"->"org.joda.time.LocalDateTime"[label="1"]
"org.joda.time.LocalDateTime(java.lang.Object org.joda.time.Chronology )"->"org.joda.time.LocalDateTime"[label="1"]
"org.joda.time.LocalDateTime(java.lang.Object org.joda.time.DateTimeZone )"->"org.joda.time.LocalDateTime"[label="1"]
"org.joda.time.LocalDateTime(long )"->"org.joda.time.LocalDateTime"[label="1"]
"org.joda.time.LocalDateTime(long org.joda.time.Chronology )"->"org.joda.time.LocalDateTime"[label="1"]
"org.joda.time.LocalDateTime(long org.joda.time.DateTimeZone )"->"org.joda.time.LocalDateTime"[label="1"]
"org.joda.time.LocalDateTime(org.joda.time.Chronology )"->"org.joda.time.LocalDateTime"[label="1"]
"org.joda.time.LocalDateTime(org.joda.time.DateTimeZone )"->"org.joda.time.LocalDateTime"[label="1"]
"org.joda.time.LocalDateTime.fromCalendarFields(java.util.Calendar )org.joda.time.LocalDateTime"->"org.joda.time.LocalDateTime"[label="1"]
"org.joda.time.LocalDateTime.fromDateFields(java.util.Date )org.joda.time.LocalDateTime"->"org.joda.time.LocalDateTime"[label="1"]
"org.joda.time.LocalDateTime.now()org.joda.time.LocalDateTime"->"org.joda.time.LocalDateTime"[label="1"]
"org.joda.time.LocalDateTime.now(org.joda.time.Chronology )org.joda.time.LocalDateTime"->"org.joda.time.LocalDateTime"[label="1"]
"org.joda.time.LocalDateTime.now(org.joda.time.DateTimeZone )org.joda.time.LocalDateTime"->"org.joda.time.LocalDateTime"[label="1"]
"org.joda.time.LocalDateTime.parse(java.lang.String )org.joda.time.LocalDateTime"->"org.joda.time.LocalDateTime"[label="1"]
"org.joda.time.LocalDateTime.parse(java.lang.String org.joda.time.format.DateTimeFormatter )org.joda.time.LocalDateTime"->"org.joda.time.LocalDateTime"[label="1"]
"org.joda.time.LocalDateTimeIsPolymorphicToorg.joda.time.ReadablePartial"->"org.joda.time.ReadablePartial"[label="1"]
"org.joda.time.LocalTime$PropertyIsPolymorphicToorg.joda.time.field.AbstractReadableInstantFieldProperty"->"org.joda.time.field.AbstractReadableInstantFieldProperty"[label="1"]
"org.joda.time.LocalTime()"->"org.joda.time.LocalTime"[label="1"]
"org.joda.time.LocalTime(int int )"->"org.joda.time.LocalTime"[label="1"]
"org.joda.time.LocalTime(java.lang.Object )"->"org.joda.time.LocalTime"[label="1"]
"org.joda.time.LocalTime(java.lang.Object org.joda.time.Chronology )"->"org.joda.time.LocalTime"[label="1"]
"org.joda.time.LocalTime(java.lang.Object org.joda.time.DateTimeZone )"->"org.joda.time.LocalTime"[label="1"]
"org.joda.time.LocalTime(long )"->"org.joda.time.LocalTime"[label="1"]
"org.joda.time.LocalTime(long org.joda.time.Chronology )"->"org.joda.time.LocalTime"[label="1"]
"org.joda.time.LocalTime(long org.joda.time.DateTimeZone )"->"org.joda.time.LocalTime"[label="1"]
"org.joda.time.LocalTime(org.joda.time.Chronology )"->"org.joda.time.LocalTime"[label="1"]
"org.joda.time.LocalTime(org.joda.time.DateTimeZone )"->"org.joda.time.LocalTime"[label="1"]
"org.joda.time.LocalTime.fromCalendarFields(java.util.Calendar )org.joda.time.LocalTime"->"org.joda.time.LocalTime"[label="1"]
"org.joda.time.LocalTime.fromDateFields(java.util.Date )org.joda.time.LocalTime"->"org.joda.time.LocalTime"[label="1"]
"org.joda.time.LocalTime.fromMillisOfDay(long )org.joda.time.LocalTime"->"org.joda.time.LocalTime"[label="1"]
"org.joda.time.LocalTime.fromMillisOfDay(long org.joda.time.Chronology )org.joda.time.LocalTime"->"org.joda.time.LocalTime"[label="1"]
"org.joda.time.LocalTime.now()org.joda.time.LocalTime"->"org.joda.time.LocalTime"[label="1"]
"org.joda.time.LocalTime.now(org.joda.time.Chronology )org.joda.time.LocalTime"->"org.joda.time.LocalTime"[label="1"]
"org.joda.time.LocalTime.now(org.joda.time.DateTimeZone )org.joda.time.LocalTime"->"org.joda.time.LocalTime"[label="1"]
"org.joda.time.LocalTime.parse(java.lang.String )org.joda.time.LocalTime"->"org.joda.time.LocalTime"[label="1"]
"org.joda.time.LocalTime.parse(java.lang.String org.joda.time.format.DateTimeFormatter )org.joda.time.LocalTime"->"org.joda.time.LocalTime"[label="1"]
"org.joda.time.LocalTimeIsPolymorphicToorg.joda.time.ReadablePartial"->"org.joda.time.ReadablePartial"[label="1"]
"org.joda.time.Minutes.minutes(int )org.joda.time.Minutes"->"org.joda.time.Minutes"[label="1"]
"org.joda.time.Minutes.minutesBetween(org.joda.time.ReadableInstant org.joda.time.ReadableInstant )org.joda.time.Minutes"->"org.joda.time.Minutes"[label="1"]
"org.joda.time.Minutes.minutesBetween(org.joda.time.ReadablePartial org.joda.time.ReadablePartial )org.joda.time.Minutes"->"org.joda.time.Minutes"[label="1"]
"org.joda.time.Minutes.minutesIn(org.joda.time.ReadableInterval )org.joda.time.Minutes"->"org.joda.time.Minutes"[label="1"]
"org.joda.time.Minutes.parseMinutes(java.lang.String )org.joda.time.Minutes"->"org.joda.time.Minutes"[label="1"]
"org.joda.time.Minutes.standardMinutesIn(org.joda.time.ReadablePeriod )org.joda.time.Minutes"->"org.joda.time.Minutes"[label="1"]
"org.joda.time.MonthDay()"->"org.joda.time.MonthDay"[label="1"]
"org.joda.time.MonthDay(int int )"->"org.joda.time.MonthDay"[label="1"]
"org.joda.time.MonthDay(java.lang.Object )"->"org.joda.time.MonthDay"[label="1"]
"org.joda.time.MonthDay(java.lang.Object org.joda.time.Chronology )"->"org.joda.time.MonthDay"[label="1"]
"org.joda.time.MonthDay(long )"->"org.joda.time.MonthDay"[label="1"]
"org.joda.time.MonthDay(long org.joda.time.Chronology )"->"org.joda.time.MonthDay"[label="1"]
"org.joda.time.MonthDay(org.joda.time.Chronology )"->"org.joda.time.MonthDay"[label="1"]
"org.joda.time.MonthDay(org.joda.time.DateTimeZone )"->"org.joda.time.MonthDay"[label="1"]
"org.joda.time.MonthDay.fromCalendarFields(java.util.Calendar )org.joda.time.MonthDay"->"org.joda.time.MonthDay"[label="1"]
"org.joda.time.MonthDay.fromDateFields(java.util.Date )org.joda.time.MonthDay"->"org.joda.time.MonthDay"[label="1"]
"org.joda.time.MonthDay.now()org.joda.time.MonthDay"->"org.joda.time.MonthDay"[label="1"]
"org.joda.time.MonthDay.now(org.joda.time.Chronology )org.joda.time.MonthDay"->"org.joda.time.MonthDay"[label="1"]
"org.joda.time.MonthDay.now(org.joda.time.DateTimeZone )org.joda.time.MonthDay"->"org.joda.time.MonthDay"[label="1"]
"org.joda.time.MonthDay.parse(java.lang.String )org.joda.time.MonthDay"->"org.joda.time.MonthDay"[label="1"]
"org.joda.time.MonthDay.parse(java.lang.String org.joda.time.format.DateTimeFormatter )org.joda.time.MonthDay"->"org.joda.time.MonthDay"[label="1"]
"org.joda.time.MonthDayIsPolymorphicToorg.joda.time.ReadablePartial"->"org.joda.time.ReadablePartial"[label="1"]
"org.joda.time.Months.months(int )org.joda.time.Months"->"org.joda.time.Months"[label="1"]
"org.joda.time.Months.monthsBetween(org.joda.time.ReadableInstant org.joda.time.ReadableInstant )org.joda.time.Months"->"org.joda.time.Months"[label="1"]
"org.joda.time.Months.monthsBetween(org.joda.time.ReadablePartial org.joda.time.ReadablePartial )org.joda.time.Months"->"org.joda.time.Months"[label="1"]
"org.joda.time.Months.monthsIn(org.joda.time.ReadableInterval )org.joda.time.Months"->"org.joda.time.Months"[label="1"]
"org.joda.time.Months.parseMonths(java.lang.String )org.joda.time.Months"->"org.joda.time.Months"[label="1"]
"org.joda.time.MutableDateTime$PropertyIsPolymorphicToorg.joda.time.field.AbstractReadableInstantFieldProperty"->"org.joda.time.field.AbstractReadableInstantFieldProperty"[label="1"]
"org.joda.time.MutableDateTime()"->"org.joda.time.MutableDateTime"[label="1"]
"org.joda.time.MutableDateTime(java.lang.Object )"->"org.joda.time.MutableDateTime"[label="1"]
"org.joda.time.MutableDateTime(java.lang.Object org.joda.time.Chronology )"->"org.joda.time.MutableDateTime"[label="1"]
"org.joda.time.MutableDateTime(java.lang.Object org.joda.time.DateTimeZone )"->"org.joda.time.MutableDateTime"[label="1"]
"org.joda.time.MutableDateTime(long )"->"org.joda.time.MutableDateTime"[label="1"]
"org.joda.time.MutableDateTime(long org.joda.time.Chronology )"->"org.joda.time.MutableDateTime"[label="1"]
"org.joda.time.MutableDateTime(long org.joda.time.DateTimeZone )"->"org.joda.time.MutableDateTime"[label="1"]
"org.joda.time.MutableDateTime(org.joda.time.Chronology )"->"org.joda.time.MutableDateTime"[label="1"]
"org.joda.time.MutableDateTime(org.joda.time.DateTimeZone )"->"org.joda.time.MutableDateTime"[label="1"]
"org.joda.time.MutableDateTime.now()org.joda.time.MutableDateTime"->"org.joda.time.MutableDateTime"[label="1"]
"org.joda.time.MutableDateTime.now(org.joda.time.Chronology )org.joda.time.MutableDateTime"->"org.joda.time.MutableDateTime"[label="1"]
"org.joda.time.MutableDateTime.now(org.joda.time.DateTimeZone )org.joda.time.MutableDateTime"->"org.joda.time.MutableDateTime"[label="1"]
"org.joda.time.MutableDateTime.parse(java.lang.String )org.joda.time.MutableDateTime"->"org.joda.time.MutableDateTime"[label="1"]
"org.joda.time.MutableDateTime.parse(java.lang.String org.joda.time.format.DateTimeFormatter )org.joda.time.MutableDateTime"->"org.joda.time.MutableDateTime"[label="1"]
"org.joda.time.MutableDateTimeIsPolymorphicToorg.joda.time.base.AbstractDateTime"->"org.joda.time.base.AbstractDateTime"[label="1"]
"org.joda.time.MutableInterval()"->"org.joda.time.MutableInterval"[label="1"]
"org.joda.time.MutableInterval(java.lang.Object )"->"org.joda.time.MutableInterval"[label="1"]
"org.joda.time.MutableInterval(java.lang.Object org.joda.time.Chronology )"->"org.joda.time.MutableInterval"[label="1"]
"org.joda.time.MutableInterval(long long )"->"org.joda.time.MutableInterval"[label="1"]
"org.joda.time.MutableInterval(org.joda.time.ReadableDuration org.joda.time.ReadableInstant )"->"org.joda.time.MutableInterval"[label="1"]
"org.joda.time.MutableInterval(org.joda.time.ReadableInstant org.joda.time.ReadableDuration )"->"org.joda.time.MutableInterval"[label="1"]
"org.joda.time.MutableInterval(org.joda.time.ReadableInstant org.joda.time.ReadableInstant )"->"org.joda.time.MutableInterval"[label="1"]
"org.joda.time.MutableInterval(org.joda.time.ReadableInstant org.joda.time.ReadablePeriod )"->"org.joda.time.MutableInterval"[label="1"]
"org.joda.time.MutableInterval(org.joda.time.ReadablePeriod org.joda.time.ReadableInstant )"->"org.joda.time.MutableInterval"[label="1"]
"org.joda.time.MutableInterval.parse(java.lang.String )org.joda.time.MutableInterval"->"org.joda.time.MutableInterval"[label="1"]
"org.joda.time.MutablePeriod()"->"org.joda.time.MutablePeriod"[label="1"]
"org.joda.time.MutablePeriod(java.lang.Object )"->"org.joda.time.MutablePeriod"[label="1"]
"org.joda.time.MutablePeriod(java.lang.Object org.joda.time.Chronology )"->"org.joda.time.MutablePeriod"[label="1"]
"org.joda.time.MutablePeriod(java.lang.Object org.joda.time.PeriodType )"->"org.joda.time.MutablePeriod"[label="1"]
"org.joda.time.MutablePeriod(long )"->"org.joda.time.MutablePeriod"[label="1"]
"org.joda.time.MutablePeriod(long long )"->"org.joda.time.MutablePeriod"[label="1"]
"org.joda.time.MutablePeriod(long org.joda.time.Chronology )"->"org.joda.time.MutablePeriod"[label="1"]
"org.joda.time.MutablePeriod(long org.joda.time.PeriodType )"->"org.joda.time.MutablePeriod"[label="1"]
"org.joda.time.MutablePeriod(org.joda.time.PeriodType )"->"org.joda.time.MutablePeriod"[label="1"]
"org.joda.time.MutablePeriod(org.joda.time.ReadableDuration org.joda.time.ReadableInstant )"->"org.joda.time.MutablePeriod"[label="1"]
"org.joda.time.MutablePeriod(org.joda.time.ReadableInstant org.joda.time.ReadableDuration )"->"org.joda.time.MutablePeriod"[label="1"]
"org.joda.time.MutablePeriod(org.joda.time.ReadableInstant org.joda.time.ReadableInstant )"->"org.joda.time.MutablePeriod"[label="1"]
"org.joda.time.MutablePeriod.parse(java.lang.String )org.joda.time.MutablePeriod"->"org.joda.time.MutablePeriod"[label="1"]
"org.joda.time.MutablePeriod.parse(java.lang.String org.joda.time.format.PeriodFormatter )org.joda.time.MutablePeriod"->"org.joda.time.MutablePeriod"[label="1"]
"org.joda.time.Partial()"->"org.joda.time.Partial"[label="1"]
"org.joda.time.Partial(org.joda.time.Chronology )"->"org.joda.time.Partial"[label="1"]
"org.joda.time.Partial(org.joda.time.DateTimeFieldType int )"->"org.joda.time.Partial"[label="1"]
"org.joda.time.Partial(org.joda.time.DateTimeFieldType[] int[] )"->"org.joda.time.Partial"[label="1"]
"org.joda.time.Partial(org.joda.time.ReadablePartial )"->"org.joda.time.Partial"[label="1"]
"org.joda.time.PartialIsPolymorphicToorg.joda.time.ReadablePartial"->"org.joda.time.ReadablePartial"[label="1"]
"org.joda.time.Period()"->"org.joda.time.Period"[label="1"]
"org.joda.time.Period(java.lang.Object )"->"org.joda.time.Period"[label="1"]
"org.joda.time.Period(java.lang.Object org.joda.time.Chronology )"->"org.joda.time.Period"[label="1"]
"org.joda.time.Period(java.lang.Object org.joda.time.PeriodType )"->"org.joda.time.Period"[label="1"]
"org.joda.time.Period(long )"->"org.joda.time.Period"[label="1"]
"org.joda.time.Period(long long )"->"org.joda.time.Period"[label="1"]
"org.joda.time.Period(long org.joda.time.Chronology )"->"org.joda.time.Period"[label="1"]
"org.joda.time.Period(long org.joda.time.PeriodType )"->"org.joda.time.Period"[label="1"]
"org.joda.time.Period(org.joda.time.ReadableDuration org.joda.time.ReadableInstant )"->"org.joda.time.Period"[label="1"]
"org.joda.time.Period(org.joda.time.ReadableInstant org.joda.time.ReadableDuration )"->"org.joda.time.Period"[label="1"]
"org.joda.time.Period(org.joda.time.ReadableInstant org.joda.time.ReadableInstant )"->"org.joda.time.Period"[label="1"]
"org.joda.time.Period(org.joda.time.ReadablePartial org.joda.time.ReadablePartial )"->"org.joda.time.Period"[label="1"]
"org.joda.time.Period.days(int )org.joda.time.Period"->"org.joda.time.Period"[label="1"]
"org.joda.time.Period.fieldDifference(org.joda.time.ReadablePartial org.joda.time.ReadablePartial )org.joda.time.Period"->"org.joda.time.Period"[label="1"]
"org.joda.time.Period.hours(int )org.joda.time.Period"->"org.joda.time.Period"[label="1"]
"org.joda.time.Period.millis(int )org.joda.time.Period"->"org.joda.time.Period"[label="1"]
"org.joda.time.Period.minutes(int )org.joda.time.Period"->"org.joda.time.Period"[label="1"]
"org.joda.time.Period.months(int )org.joda.time.Period"->"org.joda.time.Period"[label="1"]
"org.joda.time.Period.parse(java.lang.String )org.joda.time.Period"->"org.joda.time.Period"[label="1"]
"org.joda.time.Period.parse(java.lang.String org.joda.time.format.PeriodFormatter )org.joda.time.Period"->"org.joda.time.Period"[label="1"]
"org.joda.time.Period.seconds(int )org.joda.time.Period"->"org.joda.time.Period"[label="1"]
"org.joda.time.Period.weeks(int )org.joda.time.Period"->"org.joda.time.Period"[label="1"]
"org.joda.time.Period.years(int )org.joda.time.Period"->"org.joda.time.Period"[label="1"]
"org.joda.time.PeriodType.dayTime()org.joda.time.PeriodType"->"org.joda.time.PeriodType"[label="1"]
"org.joda.time.PeriodType.days()org.joda.time.PeriodType"->"org.joda.time.PeriodType"[label="1"]
"org.joda.time.PeriodType.forFields(org.joda.time.DurationFieldType[] )org.joda.time.PeriodType"->"org.joda.time.PeriodType"[label="1"]
"org.joda.time.PeriodType.hours()org.joda.time.PeriodType"->"org.joda.time.PeriodType"[label="1"]
"org.joda.time.PeriodType.millis()org.joda.time.PeriodType"->"org.joda.time.PeriodType"[label="1"]
"org.joda.time.PeriodType.minutes()org.joda.time.PeriodType"->"org.joda.time.PeriodType"[label="1"]
"org.joda.time.PeriodType.months()org.joda.time.PeriodType"->"org.joda.time.PeriodType"[label="1"]
"org.joda.time.PeriodType.seconds()org.joda.time.PeriodType"->"org.joda.time.PeriodType"[label="1"]
"org.joda.time.PeriodType.standard()org.joda.time.PeriodType"->"org.joda.time.PeriodType"[label="1"]
"org.joda.time.PeriodType.time()org.joda.time.PeriodType"->"org.joda.time.PeriodType"[label="1"]
"org.joda.time.PeriodType.weeks()org.joda.time.PeriodType"->"org.joda.time.PeriodType"[label="1"]
"org.joda.time.PeriodType.yearDay()org.joda.time.PeriodType"->"org.joda.time.PeriodType"[label="1"]
"org.joda.time.PeriodType.yearDayTime()org.joda.time.PeriodType"->"org.joda.time.PeriodType"[label="1"]
"org.joda.time.PeriodType.yearMonthDay()org.joda.time.PeriodType"->"org.joda.time.PeriodType"[label="1"]
"org.joda.time.PeriodType.yearMonthDayTime()org.joda.time.PeriodType"->"org.joda.time.PeriodType"[label="1"]
"org.joda.time.PeriodType.yearWeekDay()org.joda.time.PeriodType"->"org.joda.time.PeriodType"[label="1"]
"org.joda.time.PeriodType.yearWeekDayTime()org.joda.time.PeriodType"->"org.joda.time.PeriodType"[label="1"]
"org.joda.time.PeriodType.years()org.joda.time.PeriodType"->"org.joda.time.PeriodType"[label="1"]
"org.joda.time.Seconds.parseSeconds(java.lang.String )org.joda.time.Seconds"->"org.joda.time.Seconds"[label="1"]
"org.joda.time.Seconds.seconds(int )org.joda.time.Seconds"->"org.joda.time.Seconds"[label="1"]
"org.joda.time.Seconds.secondsBetween(org.joda.time.ReadableInstant org.joda.time.ReadableInstant )org.joda.time.Seconds"->"org.joda.time.Seconds"[label="1"]
"org.joda.time.Seconds.secondsBetween(org.joda.time.ReadablePartial org.joda.time.ReadablePartial )org.joda.time.Seconds"->"org.joda.time.Seconds"[label="1"]
"org.joda.time.Seconds.secondsIn(org.joda.time.ReadableInterval )org.joda.time.Seconds"->"org.joda.time.Seconds"[label="1"]
"org.joda.time.Seconds.standardSecondsIn(org.joda.time.ReadablePeriod )org.joda.time.Seconds"->"org.joda.time.Seconds"[label="1"]
"org.joda.time.TimeOfDay()"->"org.joda.time.TimeOfDay"[label="1"]
"org.joda.time.TimeOfDay(int int )"->"org.joda.time.TimeOfDay"[label="1"]
"org.joda.time.TimeOfDay(java.lang.Object )"->"org.joda.time.TimeOfDay"[label="1"]
"org.joda.time.TimeOfDay(java.lang.Object org.joda.time.Chronology )"->"org.joda.time.TimeOfDay"[label="1"]
"org.joda.time.TimeOfDay(long )"->"org.joda.time.TimeOfDay"[label="1"]
"org.joda.time.TimeOfDay(long org.joda.time.Chronology )"->"org.joda.time.TimeOfDay"[label="1"]
"org.joda.time.TimeOfDay(org.joda.time.Chronology )"->"org.joda.time.TimeOfDay"[label="1"]
"org.joda.time.TimeOfDay(org.joda.time.DateTimeZone )"->"org.joda.time.TimeOfDay"[label="1"]
"org.joda.time.TimeOfDay.fromCalendarFields(java.util.Calendar )org.joda.time.TimeOfDay"->"org.joda.time.TimeOfDay"[label="1"]
"org.joda.time.TimeOfDay.fromDateFields(java.util.Date )org.joda.time.TimeOfDay"->"org.joda.time.TimeOfDay"[label="1"]
"org.joda.time.TimeOfDay.fromMillisOfDay(long )org.joda.time.TimeOfDay"->"org.joda.time.TimeOfDay"[label="1"]
"org.joda.time.TimeOfDay.fromMillisOfDay(long org.joda.time.Chronology )org.joda.time.TimeOfDay"->"org.joda.time.TimeOfDay"[label="1"]
"org.joda.time.TimeOfDayIsPolymorphicToorg.joda.time.ReadablePartial"->"org.joda.time.ReadablePartial"[label="1"]
"org.joda.time.UTCDateTimeZone()"->"org.joda.time.UTCDateTimeZone"[label="1"]
"org.joda.time.Weeks.parseWeeks(java.lang.String )org.joda.time.Weeks"->"org.joda.time.Weeks"[label="1"]
"org.joda.time.Weeks.standardWeeksIn(org.joda.time.ReadablePeriod )org.joda.time.Weeks"->"org.joda.time.Weeks"[label="1"]
"org.joda.time.Weeks.weeks(int )org.joda.time.Weeks"->"org.joda.time.Weeks"[label="1"]
"org.joda.time.Weeks.weeksBetween(org.joda.time.ReadableInstant org.joda.time.ReadableInstant )org.joda.time.Weeks"->"org.joda.time.Weeks"[label="1"]
"org.joda.time.Weeks.weeksBetween(org.joda.time.ReadablePartial org.joda.time.ReadablePartial )org.joda.time.Weeks"->"org.joda.time.Weeks"[label="1"]
"org.joda.time.Weeks.weeksIn(org.joda.time.ReadableInterval )org.joda.time.Weeks"->"org.joda.time.Weeks"[label="1"]
"org.joda.time.YearMonth()"->"org.joda.time.YearMonth"[label="1"]
"org.joda.time.YearMonth(int int )"->"org.joda.time.YearMonth"[label="1"]
"org.joda.time.YearMonth(java.lang.Object )"->"org.joda.time.YearMonth"[label="1"]
"org.joda.time.YearMonth(java.lang.Object org.joda.time.Chronology )"->"org.joda.time.YearMonth"[label="1"]
"org.joda.time.YearMonth(long )"->"org.joda.time.YearMonth"[label="1"]
"org.joda.time.YearMonth(long org.joda.time.Chronology )"->"org.joda.time.YearMonth"[label="1"]
"org.joda.time.YearMonth(org.joda.time.Chronology )"->"org.joda.time.YearMonth"[label="1"]
"org.joda.time.YearMonth(org.joda.time.DateTimeZone )"->"org.joda.time.YearMonth"[label="1"]
"org.joda.time.YearMonth.fromCalendarFields(java.util.Calendar )org.joda.time.YearMonth"->"org.joda.time.YearMonth"[label="1"]
"org.joda.time.YearMonth.fromDateFields(java.util.Date )org.joda.time.YearMonth"->"org.joda.time.YearMonth"[label="1"]
"org.joda.time.YearMonth.now()org.joda.time.YearMonth"->"org.joda.time.YearMonth"[label="1"]
"org.joda.time.YearMonth.now(org.joda.time.Chronology )org.joda.time.YearMonth"->"org.joda.time.YearMonth"[label="1"]
"org.joda.time.YearMonth.now(org.joda.time.DateTimeZone )org.joda.time.YearMonth"->"org.joda.time.YearMonth"[label="1"]
"org.joda.time.YearMonth.parse(java.lang.String )org.joda.time.YearMonth"->"org.joda.time.YearMonth"[label="1"]
"org.joda.time.YearMonth.parse(java.lang.String org.joda.time.format.DateTimeFormatter )org.joda.time.YearMonth"->"org.joda.time.YearMonth"[label="1"]
"org.joda.time.YearMonthDay()"->"org.joda.time.YearMonthDay"[label="1"]
"org.joda.time.YearMonthDay(java.lang.Object )"->"org.joda.time.YearMonthDay"[label="1"]
"org.joda.time.YearMonthDay(java.lang.Object org.joda.time.Chronology )"->"org.joda.time.YearMonthDay"[label="1"]
"org.joda.time.YearMonthDay(long )"->"org.joda.time.YearMonthDay"[label="1"]
"org.joda.time.YearMonthDay(long org.joda.time.Chronology )"->"org.joda.time.YearMonthDay"[label="1"]
"org.joda.time.YearMonthDay(org.joda.time.Chronology )"->"org.joda.time.YearMonthDay"[label="1"]
"org.joda.time.YearMonthDay(org.joda.time.DateTimeZone )"->"org.joda.time.YearMonthDay"[label="1"]
"org.joda.time.YearMonthDay.fromCalendarFields(java.util.Calendar )org.joda.time.YearMonthDay"->"org.joda.time.YearMonthDay"[label="1"]
"org.joda.time.YearMonthDay.fromDateFields(java.util.Date )org.joda.time.YearMonthDay"->"org.joda.time.YearMonthDay"[label="1"]
"org.joda.time.YearMonthDayIsPolymorphicToorg.joda.time.ReadablePartial"->"org.joda.time.ReadablePartial"[label="1"]
"org.joda.time.YearMonthIsPolymorphicToorg.joda.time.ReadablePartial"->"org.joda.time.ReadablePartial"[label="1"]
"org.joda.time.Years.parseYears(java.lang.String )org.joda.time.Years"->"org.joda.time.Years"[label="1"]
"org.joda.time.Years.years(int )org.joda.time.Years"->"org.joda.time.Years"[label="1"]
"org.joda.time.Years.yearsBetween(org.joda.time.ReadableInstant org.joda.time.ReadableInstant )org.joda.time.Years"->"org.joda.time.Years"[label="1"]
"org.joda.time.Years.yearsBetween(org.joda.time.ReadablePartial org.joda.time.ReadablePartial )org.joda.time.Years"->"org.joda.time.Years"[label="1"]
"org.joda.time.Years.yearsIn(org.joda.time.ReadableInterval )org.joda.time.Years"->"org.joda.time.Years"[label="1"]
"org.joda.time.base.AbstractPartialIsPolymorphicToorg.joda.time.ReadablePartial"->"org.joda.time.ReadablePartial"[label="1"]
"org.joda.time.base.BaseDateTime()"->"org.joda.time.base.BaseDateTime"[label="1"]
"org.joda.time.base.BaseDateTime(java.lang.Object org.joda.time.Chronology )"->"org.joda.time.base.BaseDateTime"[label="1"]
"org.joda.time.base.BaseDateTime(java.lang.Object org.joda.time.DateTimeZone )"->"org.joda.time.base.BaseDateTime"[label="1"]
"org.joda.time.base.BaseDateTime(long )"->"org.joda.time.base.BaseDateTime"[label="1"]
"org.joda.time.base.BaseDateTime(long org.joda.time.Chronology )"->"org.joda.time.base.BaseDateTime"[label="1"]
"org.joda.time.base.BaseDateTime(long org.joda.time.DateTimeZone )"->"org.joda.time.base.BaseDateTime"[label="1"]
"org.joda.time.base.BaseDateTime(org.joda.time.Chronology )"->"org.joda.time.base.BaseDateTime"[label="1"]
"org.joda.time.base.BaseDateTime(org.joda.time.DateTimeZone )"->"org.joda.time.base.BaseDateTime"[label="1"]
"org.joda.time.base.BaseDateTimeIsPolymorphicToorg.joda.time.base.AbstractDateTime"->"org.joda.time.base.AbstractDateTime"[label="1"]
"org.joda.time.base.BaseLocalIsPolymorphicToorg.joda.time.ReadablePartial"->"org.joda.time.ReadablePartial"[label="1"]
"org.joda.time.base.BasePartialIsPolymorphicToorg.joda.time.ReadablePartial"->"org.joda.time.ReadablePartial"[label="1"]
"org.joda.time.chrono.BuddhistChronology.getInstance()org.joda.time.chrono.BuddhistChronology"->"org.joda.time.chrono.BuddhistChronology"[label="1"]
"org.joda.time.chrono.BuddhistChronology.getInstance(org.joda.time.DateTimeZone )org.joda.time.chrono.BuddhistChronology"->"org.joda.time.chrono.BuddhistChronology"[label="1"]
"org.joda.time.chrono.BuddhistChronology.getInstanceUTC()org.joda.time.chrono.BuddhistChronology"->"org.joda.time.chrono.BuddhistChronology"[label="1"]
"org.joda.time.chrono.CopticChronology.getInstance()org.joda.time.chrono.CopticChronology"->"org.joda.time.chrono.CopticChronology"[label="1"]
"org.joda.time.chrono.CopticChronology.getInstance(org.joda.time.DateTimeZone )org.joda.time.chrono.CopticChronology"->"org.joda.time.chrono.CopticChronology"[label="1"]
"org.joda.time.chrono.CopticChronology.getInstance(org.joda.time.DateTimeZone int )org.joda.time.chrono.CopticChronology"->"org.joda.time.chrono.CopticChronology"[label="1"]
"org.joda.time.chrono.CopticChronology.getInstanceUTC()org.joda.time.chrono.CopticChronology"->"org.joda.time.chrono.CopticChronology"[label="1"]
"org.joda.time.chrono.EthiopicChronology.getInstance()org.joda.time.chrono.EthiopicChronology"->"org.joda.time.chrono.EthiopicChronology"[label="1"]
"org.joda.time.chrono.EthiopicChronology.getInstance(org.joda.time.DateTimeZone )org.joda.time.chrono.EthiopicChronology"->"org.joda.time.chrono.EthiopicChronology"[label="1"]
"org.joda.time.chrono.EthiopicChronology.getInstance(org.joda.time.DateTimeZone int )org.joda.time.chrono.EthiopicChronology"->"org.joda.time.chrono.EthiopicChronology"[label="1"]
"org.joda.time.chrono.EthiopicChronology.getInstanceUTC()org.joda.time.chrono.EthiopicChronology"->"org.joda.time.chrono.EthiopicChronology"[label="1"]
"org.joda.time.chrono.GJChronology.getInstance()org.joda.time.chrono.GJChronology"->"org.joda.time.chrono.GJChronology"[label="1"]
"org.joda.time.chrono.GJChronology.getInstance(org.joda.time.DateTimeZone )org.joda.time.chrono.GJChronology"->"org.joda.time.chrono.GJChronology"[label="1"]
"org.joda.time.chrono.GJChronology.getInstance(org.joda.time.DateTimeZone org.joda.time.ReadableInstant )org.joda.time.chrono.GJChronology"->"org.joda.time.chrono.GJChronology"[label="1"]
"org.joda.time.chrono.GJChronology.getInstanceUTC()org.joda.time.chrono.GJChronology"->"org.joda.time.chrono.GJChronology"[label="1"]
"org.joda.time.chrono.GregorianChronology.getInstance()org.joda.time.chrono.GregorianChronology"->"org.joda.time.chrono.GregorianChronology"[label="1"]
"org.joda.time.chrono.GregorianChronology.getInstance(org.joda.time.DateTimeZone )org.joda.time.chrono.GregorianChronology"->"org.joda.time.chrono.GregorianChronology"[label="1"]
"org.joda.time.chrono.GregorianChronology.getInstance(org.joda.time.DateTimeZone int )org.joda.time.chrono.GregorianChronology"->"org.joda.time.chrono.GregorianChronology"[label="1"]
"org.joda.time.chrono.GregorianChronology.getInstanceUTC()org.joda.time.chrono.GregorianChronology"->"org.joda.time.chrono.GregorianChronology"[label="1"]
"org.joda.time.chrono.ISOChronology.getInstance()org.joda.time.chrono.ISOChronology"->"org.joda.time.chrono.ISOChronology"[label="1"]
"org.joda.time.chrono.ISOChronology.getInstance(org.joda.time.DateTimeZone )org.joda.time.chrono.ISOChronology"->"org.joda.time.chrono.ISOChronology"[label="1"]
"org.joda.time.chrono.ISOChronology.getInstanceUTC()org.joda.time.chrono.ISOChronology"->"org.joda.time.chrono.ISOChronology"[label="1"]
"org.joda.time.chrono.IslamicChronology.getInstance()org.joda.time.chrono.IslamicChronology"->"org.joda.time.chrono.IslamicChronology"[label="1"]
"org.joda.time.chrono.IslamicChronology.getInstance(org.joda.time.DateTimeZone )org.joda.time.chrono.IslamicChronology"->"org.joda.time.chrono.IslamicChronology"[label="1"]
"org.joda.time.chrono.IslamicChronology.getInstance(org.joda.time.DateTimeZone org.joda.time.chrono.IslamicChronology$LeapYearPatternType )org.joda.time.chrono.IslamicChronology"->"org.joda.time.chrono.IslamicChronology"[label="1"]
"org.joda.time.chrono.IslamicChronology.getInstanceUTC()org.joda.time.chrono.IslamicChronology"->"org.joda.time.chrono.IslamicChronology"[label="1"]
"org.joda.time.chrono.JulianChronology.getInstance()org.joda.time.chrono.JulianChronology"->"org.joda.time.chrono.JulianChronology"[label="1"]
"org.joda.time.chrono.JulianChronology.getInstance(org.joda.time.DateTimeZone )org.joda.time.chrono.JulianChronology"->"org.joda.time.chrono.JulianChronology"[label="1"]
"org.joda.time.chrono.JulianChronology.getInstance(org.joda.time.DateTimeZone int )org.joda.time.chrono.JulianChronology"->"org.joda.time.chrono.JulianChronology"[label="1"]
"org.joda.time.chrono.JulianChronology.getInstanceUTC()org.joda.time.chrono.JulianChronology"->"org.joda.time.chrono.JulianChronology"[label="1"]
"org.joda.time.chrono.LenientChronology.getInstance(org.joda.time.Chronology )org.joda.time.chrono.LenientChronology"->"org.joda.time.chrono.LenientChronology"[label="1"]
"org.joda.time.chrono.StrictChronology.getInstance(org.joda.time.Chronology )org.joda.time.chrono.StrictChronology"->"org.joda.time.chrono.StrictChronology"[label="1"]
"org.joda.time.chrono.ZonedChronology.getInstance(org.joda.time.Chronology org.joda.time.DateTimeZone )org.joda.time.chrono.ZonedChronology"->"org.joda.time.chrono.ZonedChronology"[label="1"]
"org.joda.time.convert.ConverterManager.getInstance()org.joda.time.convert.ConverterManager"->"org.joda.time.convert.ConverterManager"[label="1"]
"org.joda.time.field.AbstractReadableInstantFieldProperty()"->"org.joda.time.field.AbstractReadableInstantFieldProperty"[label="1"]
"org.joda.time.field.DecoratedDurationField(org.joda.time.DurationField org.joda.time.DurationFieldType )"->"org.joda.time.field.DecoratedDurationField"[label="1"]
"org.joda.time.field.DelegatedDateTimeField(org.joda.time.DateTimeField )"->"org.joda.time.field.DelegatedDateTimeField"[label="1"]
"org.joda.time.field.DelegatedDateTimeField(org.joda.time.DateTimeField org.joda.time.DateTimeFieldType )"->"org.joda.time.field.DelegatedDateTimeField"[label="1"]
"org.joda.time.field.DividedDateTimeField(org.joda.time.field.RemainderDateTimeField org.joda.time.DateTimeFieldType )"->"org.joda.time.field.DividedDateTimeField"[label="1"]
"org.joda.time.field.FieldUtils.equals(java.lang.Object java.lang.Object )boolean"->"boolean"[label="1"]
"org.joda.time.field.FieldUtils.safeAdd(int int )int"->"int"[label="1"]
"org.joda.time.field.FieldUtils.safeAdd(long long )long"->"long"[label="1"]
"org.joda.time.field.FieldUtils.safeDivide(long long )long"->"long"[label="1"]
"org.joda.time.field.FieldUtils.safeMultiply(int int )int"->"int"[label="1"]
"org.joda.time.field.FieldUtils.safeMultiply(long int )long"->"long"[label="1"]
"org.joda.time.field.FieldUtils.safeMultiply(long long )long"->"long"[label="1"]
"org.joda.time.field.FieldUtils.safeMultiplyToInt(long long )int"->"int"[label="1"]
"org.joda.time.field.FieldUtils.safeNegate(int )int"->"int"[label="1"]
"org.joda.time.field.FieldUtils.safeSubtract(long long )long"->"long"[label="1"]
"org.joda.time.field.FieldUtils.safeToInt(long )int"->"int"[label="1"]
"org.joda.time.field.ImpreciseDateTimeField(org.joda.time.DateTimeFieldType long )"->"org.joda.time.field.ImpreciseDateTimeField"[label="1"]
"org.joda.time.field.LenientDateTimeField.getInstance(org.joda.time.DateTimeField org.joda.time.Chronology )org.joda.time.DateTimeField"->"org.joda.time.DateTimeField"[label="1"]
"org.joda.time.field.OffsetDateTimeField(org.joda.time.DateTimeField int )"->"org.joda.time.field.OffsetDateTimeField"[label="1"]
"org.joda.time.field.PreciseDurationDateTimeField(org.joda.time.DateTimeFieldType org.joda.time.DurationField )"->"org.joda.time.field.PreciseDurationDateTimeField"[label="1"]
"org.joda.time.field.PreciseDurationField(org.joda.time.DurationFieldType long )"->"org.joda.time.field.PreciseDurationField"[label="1"]
"org.joda.time.field.RemainderDateTimeField(org.joda.time.field.DividedDateTimeField )"->"org.joda.time.field.RemainderDateTimeField"[label="1"]
"org.joda.time.field.RemainderDateTimeField(org.joda.time.field.DividedDateTimeField org.joda.time.DateTimeFieldType )"->"org.joda.time.field.RemainderDateTimeField"[label="1"]
"org.joda.time.field.SkipDateTimeField(org.joda.time.Chronology org.joda.time.DateTimeField )"->"org.joda.time.field.SkipDateTimeField"[label="1"]
"org.joda.time.field.SkipUndoDateTimeField(org.joda.time.Chronology org.joda.time.DateTimeField )"->"org.joda.time.field.SkipUndoDateTimeField"[label="1"]
"org.joda.time.field.StrictDateTimeField.getInstance(org.joda.time.DateTimeField )org.joda.time.DateTimeField"->"org.joda.time.DateTimeField"[label="1"]
"org.joda.time.field.UnsupportedDateTimeField.getInstance(org.joda.time.DateTimeFieldType org.joda.time.DurationField )org.joda.time.field.UnsupportedDateTimeField"->"org.joda.time.field.UnsupportedDateTimeField"[label="1"]
"org.joda.time.field.UnsupportedDurationField.getInstance(org.joda.time.DurationFieldType )org.joda.time.field.UnsupportedDurationField"->"org.joda.time.field.UnsupportedDurationField"[label="1"]
"org.joda.time.field.ZeroIsMaxDateTimeField(org.joda.time.DateTimeField org.joda.time.DateTimeFieldType )"->"org.joda.time.field.ZeroIsMaxDateTimeField"[label="1"]
"org.joda.time.format.DateTimeFormat.forPattern(java.lang.String )org.joda.time.format.DateTimeFormatter"->"org.joda.time.format.DateTimeFormatter"[label="1"]
"org.joda.time.format.DateTimeFormat.forStyle(java.lang.String )org.joda.time.format.DateTimeFormatter"->"org.joda.time.format.DateTimeFormatter"[label="1"]
"org.joda.time.format.DateTimeFormat.fullDate()org.joda.time.format.DateTimeFormatter"->"org.joda.time.format.DateTimeFormatter"[label="1"]
"org.joda.time.format.DateTimeFormat.fullDateTime()org.joda.time.format.DateTimeFormatter"->"org.joda.time.format.DateTimeFormatter"[label="1"]
"org.joda.time.format.DateTimeFormat.fullTime()org.joda.time.format.DateTimeFormatter"->"org.joda.time.format.DateTimeFormatter"[label="1"]
"org.joda.time.format.DateTimeFormat.longDate()org.joda.time.format.DateTimeFormatter"->"org.joda.time.format.DateTimeFormatter"[label="1"]
"org.joda.time.format.DateTimeFormat.longDateTime()org.joda.time.format.DateTimeFormatter"->"org.joda.time.format.DateTimeFormatter"[label="1"]
"org.joda.time.format.DateTimeFormat.longTime()org.joda.time.format.DateTimeFormatter"->"org.joda.time.format.DateTimeFormatter"[label="1"]
"org.joda.time.format.DateTimeFormat.mediumDate()org.joda.time.format.DateTimeFormatter"->"org.joda.time.format.DateTimeFormatter"[label="1"]
"org.joda.time.format.DateTimeFormat.mediumDateTime()org.joda.time.format.DateTimeFormatter"->"org.joda.time.format.DateTimeFormatter"[label="1"]
"org.joda.time.format.DateTimeFormat.mediumTime()org.joda.time.format.DateTimeFormatter"->"org.joda.time.format.DateTimeFormatter"[label="1"]
"org.joda.time.format.DateTimeFormat.patternForStyle(java.lang.String java.util.Locale )java.lang.String"->"java.lang.String"[label="1"]
"org.joda.time.format.DateTimeFormat.shortDate()org.joda.time.format.DateTimeFormatter"->"org.joda.time.format.DateTimeFormatter"[label="1"]
"org.joda.time.format.DateTimeFormat.shortDateTime()org.joda.time.format.DateTimeFormatter"->"org.joda.time.format.DateTimeFormatter"[label="1"]
"org.joda.time.format.DateTimeFormat.shortTime()org.joda.time.format.DateTimeFormatter"->"org.joda.time.format.DateTimeFormatter"[label="1"]
"org.joda.time.format.DateTimeFormatter(org.joda.time.format.DateTimePrinter org.joda.time.format.DateTimeParser )"->"org.joda.time.format.DateTimeFormatter"[label="1"]
"org.joda.time.format.DateTimeFormatterBuilder$TimeZoneId.valueOf(java.lang.String )org.joda.time.format.DateTimeFormatterBuilder$TimeZoneId"->"org.joda.time.format.DateTimeFormatterBuilder$TimeZoneId"[label="1"]
"org.joda.time.format.DateTimeFormatterBuilder$TimeZoneId.values()org.joda.time.format.DateTimeFormatterBuilder$TimeZoneId[]"->"org.joda.time.format.DateTimeFormatterBuilder$TimeZoneId[]"[label="1"]
"org.joda.time.format.DateTimeFormatterBuilder()"->"org.joda.time.format.DateTimeFormatterBuilder"[label="1"]
"org.joda.time.format.FormatUtils.calculateDigitCount(long )int"->"int"[label="1"]
"org.joda.time.format.ISODateTimeFormat.basicDate()org.joda.time.format.DateTimeFormatter"->"org.joda.time.format.DateTimeFormatter"[label="1"]
"org.joda.time.format.ISODateTimeFormat.basicDateTime()org.joda.time.format.DateTimeFormatter"->"org.joda.time.format.DateTimeFormatter"[label="1"]
"org.joda.time.format.ISODateTimeFormat.basicDateTimeNoMillis()org.joda.time.format.DateTimeFormatter"->"org.joda.time.format.DateTimeFormatter"[label="1"]
"org.joda.time.format.ISODateTimeFormat.basicOrdinalDate()org.joda.time.format.DateTimeFormatter"->"org.joda.time.format.DateTimeFormatter"[label="1"]
"org.joda.time.format.ISODateTimeFormat.basicOrdinalDateTime()org.joda.time.format.DateTimeFormatter"->"org.joda.time.format.DateTimeFormatter"[label="1"]
"org.joda.time.format.ISODateTimeFormat.basicOrdinalDateTimeNoMillis()org.joda.time.format.DateTimeFormatter"->"org.joda.time.format.DateTimeFormatter"[label="1"]
"org.joda.time.format.ISODateTimeFormat.basicTTime()org.joda.time.format.DateTimeFormatter"->"org.joda.time.format.DateTimeFormatter"[label="1"]
"org.joda.time.format.ISODateTimeFormat.basicTTimeNoMillis()org.joda.time.format.DateTimeFormatter"->"org.joda.time.format.DateTimeFormatter"[label="1"]
"org.joda.time.format.ISODateTimeFormat.basicTime()org.joda.time.format.DateTimeFormatter"->"org.joda.time.format.DateTimeFormatter"[label="1"]
"org.joda.time.format.ISODateTimeFormat.basicTimeNoMillis()org.joda.time.format.DateTimeFormatter"->"org.joda.time.format.DateTimeFormatter"[label="1"]
"org.joda.time.format.ISODateTimeFormat.basicWeekDate()org.joda.time.format.DateTimeFormatter"->"org.joda.time.format.DateTimeFormatter"[label="1"]
"org.joda.time.format.ISODateTimeFormat.basicWeekDateTime()org.joda.time.format.DateTimeFormatter"->"org.joda.time.format.DateTimeFormatter"[label="1"]
"org.joda.time.format.ISODateTimeFormat.basicWeekDateTimeNoMillis()org.joda.time.format.DateTimeFormatter"->"org.joda.time.format.DateTimeFormatter"[label="1"]
"org.joda.time.format.ISODateTimeFormat.date()org.joda.time.format.DateTimeFormatter"->"org.joda.time.format.DateTimeFormatter"[label="1"]
"org.joda.time.format.ISODateTimeFormat.dateElementParser()org.joda.time.format.DateTimeFormatter"->"org.joda.time.format.DateTimeFormatter"[label="1"]
"org.joda.time.format.ISODateTimeFormat.dateHour()org.joda.time.format.DateTimeFormatter"->"org.joda.time.format.DateTimeFormatter"[label="1"]
"org.joda.time.format.ISODateTimeFormat.dateHourMinute()org.joda.time.format.DateTimeFormatter"->"org.joda.time.format.DateTimeFormatter"[label="1"]
"org.joda.time.format.ISODateTimeFormat.dateHourMinuteSecond()org.joda.time.format.DateTimeFormatter"->"org.joda.time.format.DateTimeFormatter"[label="1"]
"org.joda.time.format.ISODateTimeFormat.dateHourMinuteSecondFraction()org.joda.time.format.DateTimeFormatter"->"org.joda.time.format.DateTimeFormatter"[label="1"]
"org.joda.time.format.ISODateTimeFormat.dateHourMinuteSecondMillis()org.joda.time.format.DateTimeFormatter"->"org.joda.time.format.DateTimeFormatter"[label="1"]
"org.joda.time.format.ISODateTimeFormat.dateOptionalTimeParser()org.joda.time.format.DateTimeFormatter"->"org.joda.time.format.DateTimeFormatter"[label="1"]
"org.joda.time.format.ISODateTimeFormat.dateParser()org.joda.time.format.DateTimeFormatter"->"org.joda.time.format.DateTimeFormatter"[label="1"]
"org.joda.time.format.ISODateTimeFormat.dateTime()org.joda.time.format.DateTimeFormatter"->"org.joda.time.format.DateTimeFormatter"[label="1"]
"org.joda.time.format.ISODateTimeFormat.dateTimeNoMillis()org.joda.time.format.DateTimeFormatter"->"org.joda.time.format.DateTimeFormatter"[label="1"]
"org.joda.time.format.ISODateTimeFormat.dateTimeParser()org.joda.time.format.DateTimeFormatter"->"org.joda.time.format.DateTimeFormatter"[label="1"]
"org.joda.time.format.ISODateTimeFormat.hour()org.joda.time.format.DateTimeFormatter"->"org.joda.time.format.DateTimeFormatter"[label="1"]
"org.joda.time.format.ISODateTimeFormat.hourMinute()org.joda.time.format.DateTimeFormatter"->"org.joda.time.format.DateTimeFormatter"[label="1"]
"org.joda.time.format.ISODateTimeFormat.hourMinuteSecond()org.joda.time.format.DateTimeFormatter"->"org.joda.time.format.DateTimeFormatter"[label="1"]
"org.joda.time.format.ISODateTimeFormat.hourMinuteSecondFraction()org.joda.time.format.DateTimeFormatter"->"org.joda.time.format.DateTimeFormatter"[label="1"]
"org.joda.time.format.ISODateTimeFormat.hourMinuteSecondMillis()org.joda.time.format.DateTimeFormatter"->"org.joda.time.format.DateTimeFormatter"[label="1"]
"org.joda.time.format.ISODateTimeFormat.localDateOptionalTimeParser()org.joda.time.format.DateTimeFormatter"->"org.joda.time.format.DateTimeFormatter"[label="1"]
"org.joda.time.format.ISODateTimeFormat.localDateParser()org.joda.time.format.DateTimeFormatter"->"org.joda.time.format.DateTimeFormatter"[label="1"]
"org.joda.time.format.ISODateTimeFormat.localTimeParser()org.joda.time.format.DateTimeFormatter"->"org.joda.time.format.DateTimeFormatter"[label="1"]
"org.joda.time.format.ISODateTimeFormat.ordinalDate()org.joda.time.format.DateTimeFormatter"->"org.joda.time.format.DateTimeFormatter"[label="1"]
"org.joda.time.format.ISODateTimeFormat.ordinalDateTime()org.joda.time.format.DateTimeFormatter"->"org.joda.time.format.DateTimeFormatter"[label="1"]
"org.joda.time.format.ISODateTimeFormat.ordinalDateTimeNoMillis()org.joda.time.format.DateTimeFormatter"->"org.joda.time.format.DateTimeFormatter"[label="1"]
"org.joda.time.format.ISODateTimeFormat.tTime()org.joda.time.format.DateTimeFormatter"->"org.joda.time.format.DateTimeFormatter"[label="1"]
"org.joda.time.format.ISODateTimeFormat.tTimeNoMillis()org.joda.time.format.DateTimeFormatter"->"org.joda.time.format.DateTimeFormatter"[label="1"]
"org.joda.time.format.ISODateTimeFormat.time()org.joda.time.format.DateTimeFormatter"->"org.joda.time.format.DateTimeFormatter"[label="1"]
"org.joda.time.format.ISODateTimeFormat.timeElementParser()org.joda.time.format.DateTimeFormatter"->"org.joda.time.format.DateTimeFormatter"[label="1"]
"org.joda.time.format.ISODateTimeFormat.timeNoMillis()org.joda.time.format.DateTimeFormatter"->"org.joda.time.format.DateTimeFormatter"[label="1"]
"org.joda.time.format.ISODateTimeFormat.timeParser()org.joda.time.format.DateTimeFormatter"->"org.joda.time.format.DateTimeFormatter"[label="1"]
"org.joda.time.format.ISODateTimeFormat.weekDate()org.joda.time.format.DateTimeFormatter"->"org.joda.time.format.DateTimeFormatter"[label="1"]
"org.joda.time.format.ISODateTimeFormat.weekDateTime()org.joda.time.format.DateTimeFormatter"->"org.joda.time.format.DateTimeFormatter"[label="1"]
"org.joda.time.format.ISODateTimeFormat.weekDateTimeNoMillis()org.joda.time.format.DateTimeFormatter"->"org.joda.time.format.DateTimeFormatter"[label="1"]
"org.joda.time.format.ISODateTimeFormat.weekyear()org.joda.time.format.DateTimeFormatter"->"org.joda.time.format.DateTimeFormatter"[label="1"]
"org.joda.time.format.ISODateTimeFormat.weekyearWeek()org.joda.time.format.DateTimeFormatter"->"org.joda.time.format.DateTimeFormatter"[label="1"]
"org.joda.time.format.ISODateTimeFormat.weekyearWeekDay()org.joda.time.format.DateTimeFormatter"->"org.joda.time.format.DateTimeFormatter"[label="1"]
"org.joda.time.format.ISODateTimeFormat.year()org.joda.time.format.DateTimeFormatter"->"org.joda.time.format.DateTimeFormatter"[label="1"]
"org.joda.time.format.ISODateTimeFormat.yearMonth()org.joda.time.format.DateTimeFormatter"->"org.joda.time.format.DateTimeFormatter"[label="1"]
"org.joda.time.format.ISODateTimeFormat.yearMonthDay()org.joda.time.format.DateTimeFormatter"->"org.joda.time.format.DateTimeFormatter"[label="1"]
"org.joda.time.format.ISOPeriodFormat.alternate()org.joda.time.format.PeriodFormatter"->"org.joda.time.format.PeriodFormatter"[label="1"]
"org.joda.time.format.ISOPeriodFormat.alternateExtended()org.joda.time.format.PeriodFormatter"->"org.joda.time.format.PeriodFormatter"[label="1"]
"org.joda.time.format.ISOPeriodFormat.alternateExtendedWithWeeks()org.joda.time.format.PeriodFormatter"->"org.joda.time.format.PeriodFormatter"[label="1"]
"org.joda.time.format.ISOPeriodFormat.alternateWithWeeks()org.joda.time.format.PeriodFormatter"->"org.joda.time.format.PeriodFormatter"[label="1"]
"org.joda.time.format.ISOPeriodFormat.standard()org.joda.time.format.PeriodFormatter"->"org.joda.time.format.PeriodFormatter"[label="1"]
"org.joda.time.format.PeriodFormat.getDefault()org.joda.time.format.PeriodFormatter"->"org.joda.time.format.PeriodFormatter"[label="1"]
"org.joda.time.format.PeriodFormat.wordBased()org.joda.time.format.PeriodFormatter"->"org.joda.time.format.PeriodFormatter"[label="1"]
"org.joda.time.format.PeriodFormat.wordBased(java.util.Locale )org.joda.time.format.PeriodFormatter"->"org.joda.time.format.PeriodFormatter"[label="1"]
"org.joda.time.format.PeriodFormatter(org.joda.time.format.PeriodPrinter org.joda.time.format.PeriodParser )"->"org.joda.time.format.PeriodFormatter"[label="1"]
"org.joda.time.format.PeriodFormatterBuilder()"->"org.joda.time.format.PeriodFormatterBuilder"[label="1"]
"org.joda.time.tz.CachedDateTimeZone.forZone(org.joda.time.DateTimeZone )org.joda.time.tz.CachedDateTimeZone"->"org.joda.time.tz.CachedDateTimeZone"[label="1"]
"org.joda.time.tz.DateTimeZoneBuilder()"->"org.joda.time.tz.DateTimeZoneBuilder"[label="1"]
"org.joda.time.tz.DateTimeZoneBuilder.readFrom(java.io.DataInput java.lang.String )org.joda.time.DateTimeZone"->"org.joda.time.DateTimeZone"[label="1"]
"org.joda.time.tz.DateTimeZoneBuilder.readFrom(java.io.InputStream java.lang.String )org.joda.time.DateTimeZone"->"org.joda.time.DateTimeZone"[label="1"]
"org.joda.time.tz.DefaultNameProvider()"->"org.joda.time.tz.DefaultNameProvider"[label="1"]
"org.joda.time.tz.UTCProvider()"->"org.joda.time.tz.UTCProvider"[label="1"]
"org.joda.time.tz.ZoneInfoCompiler()"->"org.joda.time.tz.ZoneInfoCompiler"[label="1"]
"org.joda.time.tz.ZoneInfoLogger()"->"org.joda.time.tz.ZoneInfoLogger"[label="1"]
"org.joda.time.tz.ZoneInfoLogger.verbose()boolean"->"boolean"[label="1"]
"org.joda.time.tz.ZoneInfoProvider(java.io.File )"->"org.joda.time.tz.ZoneInfoProvider"[label="1"]
"org.joda.time.tz.ZoneInfoProvider(java.lang.String )"->"org.joda.time.tz.ZoneInfoProvider"[label="1"]
"org.joda.time.tz.ZoneInfoProvider(java.lang.String java.lang.ClassLoader )"->"org.joda.time.tz.ZoneInfoProvider"[label="1"]
}