public class com.opengamma.analytics.math.interpolation.data.InterpolatorNDDataBundle extends java.lang.Object
{
    private final java.util.List _data;

    public void <init>(java.util.List)
    {
        com.opengamma.analytics.math.interpolation.data.InterpolatorNDDataBundle r0;
        java.util.List r1;

        r0 := @this: com.opengamma.analytics.math.interpolation.data.InterpolatorNDDataBundle;

        r1 := @parameter0: java.util.List;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        specialinvoke r0.<com.opengamma.analytics.math.interpolation.data.InterpolatorNDDataBundle: void validateData(java.util.List)>(r1);

        r0.<com.opengamma.analytics.math.interpolation.data.InterpolatorNDDataBundle: java.util.List _data> = r1;

        return;
    }

    public java.util.List getData()
    {
        com.opengamma.analytics.math.interpolation.data.InterpolatorNDDataBundle r0;
        java.util.List $r1;

        r0 := @this: com.opengamma.analytics.math.interpolation.data.InterpolatorNDDataBundle;

        $r1 = r0.<com.opengamma.analytics.math.interpolation.data.InterpolatorNDDataBundle: java.util.List _data>;

        return $r1;
    }

    private void validateData(java.util.List)
    {
        com.opengamma.analytics.math.interpolation.data.InterpolatorNDDataBundle r0;
        java.util.List r1;
        java.util.Iterator r2;
        int i0, $i1;
        java.lang.Object $r3, $r5, $r7, $r9;
        com.opengamma.util.tuple.Pair $r4, $r8;
        double[] $r6, $r10;
        boolean $z0, $z1, $z2;

        r0 := @this: com.opengamma.analytics.math.interpolation.data.InterpolatorNDDataBundle;

        r1 := @parameter0: java.util.List;

        staticinvoke <org.apache.commons.lang.Validate: void notEmpty(java.util.Collection,java.lang.String)>(r1, "no data");

        r2 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>();

        $r3 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        $r4 = (com.opengamma.util.tuple.Pair) $r3;

        $r5 = virtualinvoke $r4.<com.opengamma.util.tuple.Pair: java.lang.Object getFirst()>();

        $r6 = (double[]) $r5;

        i0 = lengthof $r6;

        if i0 <= 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        staticinvoke <org.apache.commons.lang.Validate: void isTrue(boolean,java.lang.String)>($z0, "no actual data");

     label3:
        $z1 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label6;

        $r7 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        $r8 = (com.opengamma.util.tuple.Pair) $r7;

        $r9 = virtualinvoke $r8.<com.opengamma.util.tuple.Pair: java.lang.Object getFirst()>();

        $r10 = (double[]) $r9;

        $i1 = lengthof $r10;

        if $i1 != i0 goto label4;

        $z2 = 1;

        goto label5;

     label4:
        $z2 = 0;

     label5:
        staticinvoke <org.apache.commons.lang.Validate: void isTrue(boolean,java.lang.String)>($z2, "different dimensions in data");

        goto label3;

     label6:
        return;
    }

    public int hashCode()
    {
        com.opengamma.analytics.math.interpolation.data.InterpolatorNDDataBundle r0;
        java.util.List $r1, $r2;
        int $i1, $i3, i4;

        r0 := @this: com.opengamma.analytics.math.interpolation.data.InterpolatorNDDataBundle;

        $i1 = 31 * 1;

        $r1 = r0.<com.opengamma.analytics.math.interpolation.data.InterpolatorNDDataBundle: java.util.List _data>;

        if $r1 != null goto label1;

        $i3 = 0;

        goto label2;

     label1:
        $r2 = r0.<com.opengamma.analytics.math.interpolation.data.InterpolatorNDDataBundle: java.util.List _data>;

        $i3 = interfaceinvoke $r2.<java.util.List: int hashCode()>();

     label2:
        i4 = $i1 + $i3;

        return i4;
    }

    public boolean equals(java.lang.Object)
    {
        com.opengamma.analytics.math.interpolation.data.InterpolatorNDDataBundle r0, r2;
        java.lang.Object r1;
        boolean $z0, $z1;
        java.util.List $r3, $r4;

        r0 := @this: com.opengamma.analytics.math.interpolation.data.InterpolatorNDDataBundle;

        r1 := @parameter0: java.lang.Object;

        if r0 != r1 goto label1;

        return 1;

     label1:
        $z0 = r1 instanceof com.opengamma.analytics.math.interpolation.data.InterpolatorNDDataBundle;

        if $z0 != 0 goto label2;

        return 0;

     label2:
        r2 = (com.opengamma.analytics.math.interpolation.data.InterpolatorNDDataBundle) r1;

        $r4 = r0.<com.opengamma.analytics.math.interpolation.data.InterpolatorNDDataBundle: java.util.List _data>;

        $r3 = r2.<com.opengamma.analytics.math.interpolation.data.InterpolatorNDDataBundle: java.util.List _data>;

        $z1 = staticinvoke <org.apache.commons.lang.ObjectUtils: boolean equals(java.lang.Object,java.lang.Object)>($r4, $r3);

        if $z1 != 0 goto label3;

        return 0;

     label3:
        return 1;
    }
}
