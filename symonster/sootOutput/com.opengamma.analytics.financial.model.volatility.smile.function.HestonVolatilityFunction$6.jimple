class com.opengamma.analytics.financial.model.volatility.smile.function.HestonVolatilityFunction$6 extends com.opengamma.analytics.math.function.Function1D
{
    final com.opengamma.analytics.financial.model.option.pricing.fourier.FFTModelGreeks val$greekCal;
    final double val$forward;
    final double val$timeToExpiry;
    final double val$lowestStrike;
    final double val$highestStrike;
    final int val$n;
    final double[][] val$nodeSense;
    final double[] val$strikes;
    final com.opengamma.analytics.financial.model.volatility.smile.function.HestonVolatilityFunction this$0;

    void <init>(com.opengamma.analytics.financial.model.volatility.smile.function.HestonVolatilityFunction, com.opengamma.analytics.financial.model.option.pricing.fourier.FFTModelGreeks, double, double, double, double, int, double[][], double[])
    {
        com.opengamma.analytics.financial.model.volatility.smile.function.HestonVolatilityFunction$6 r0;
        com.opengamma.analytics.financial.model.volatility.smile.function.HestonVolatilityFunction r1;
        com.opengamma.analytics.financial.model.option.pricing.fourier.FFTModelGreeks r2;
        double d0, d1, d2, d3;
        int i0;
        double[][] r3;
        double[] r4;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.smile.function.HestonVolatilityFunction$6;

        r1 := @parameter0: com.opengamma.analytics.financial.model.volatility.smile.function.HestonVolatilityFunction;

        r2 := @parameter1: com.opengamma.analytics.financial.model.option.pricing.fourier.FFTModelGreeks;

        d0 := @parameter2: double;

        d1 := @parameter3: double;

        d2 := @parameter4: double;

        d3 := @parameter5: double;

        i0 := @parameter6: int;

        r3 := @parameter7: double[][];

        r4 := @parameter8: double[];

        r0.<com.opengamma.analytics.financial.model.volatility.smile.function.HestonVolatilityFunction$6: com.opengamma.analytics.financial.model.volatility.smile.function.HestonVolatilityFunction this$0> = r1;

        r0.<com.opengamma.analytics.financial.model.volatility.smile.function.HestonVolatilityFunction$6: com.opengamma.analytics.financial.model.option.pricing.fourier.FFTModelGreeks val$greekCal> = r2;

        r0.<com.opengamma.analytics.financial.model.volatility.smile.function.HestonVolatilityFunction$6: double val$forward> = d0;

        r0.<com.opengamma.analytics.financial.model.volatility.smile.function.HestonVolatilityFunction$6: double val$timeToExpiry> = d1;

        r0.<com.opengamma.analytics.financial.model.volatility.smile.function.HestonVolatilityFunction$6: double val$lowestStrike> = d2;

        r0.<com.opengamma.analytics.financial.model.volatility.smile.function.HestonVolatilityFunction$6: double val$highestStrike> = d3;

        r0.<com.opengamma.analytics.financial.model.volatility.smile.function.HestonVolatilityFunction$6: int val$n> = i0;

        r0.<com.opengamma.analytics.financial.model.volatility.smile.function.HestonVolatilityFunction$6: double[][] val$nodeSense> = r3;

        r0.<com.opengamma.analytics.financial.model.volatility.smile.function.HestonVolatilityFunction$6: double[] val$strikes> = r4;

        specialinvoke r0.<com.opengamma.analytics.math.function.Function1D: void <init>()>();

        return;
    }

    public double[][] evaluate(com.opengamma.analytics.financial.model.volatility.smile.function.HestonModelData)
    {
        com.opengamma.analytics.financial.model.volatility.smile.function.HestonVolatilityFunction$6 r0;
        com.opengamma.analytics.financial.model.volatility.smile.function.HestonModelData r1;
        double[][] r3, r9, r10, $r20, $r25, r39, r44;
        double[] r4, r5, r6, r7, r8, r11, r12, $r21, $r22, $r23, $r27, $r29, $r30, $r31, $r32, $r33, r36, r37, r38, r40, r41, r42;
        int i0, $i1, $i2, $i3, $i4, i5, i6, i7, i8, i9, $i10, i11, i12, i13, i14, i15, i16;
        com.opengamma.analytics.financial.model.option.pricing.fourier.HestonCharacteristicExponent $r13;
        com.opengamma.analytics.financial.model.volatility.smile.function.HestonVolatilityFunction $r14, $r16, $r17, $r18, $r24;
        com.opengamma.analytics.financial.model.option.pricing.fourier.FFTModelGreeks $r15;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21, $d22, $d23, d24, d25;
        com.opengamma.analytics.math.interpolation.Interpolator1D $r19, $r26;
        java.lang.Double $r28;
        java.lang.IllegalArgumentException $r34;
        com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle r43;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.smile.function.HestonVolatilityFunction$6;

        r1 := @parameter0: com.opengamma.analytics.financial.model.volatility.smile.function.HestonModelData;

        $r13 = new com.opengamma.analytics.financial.model.option.pricing.fourier.HestonCharacteristicExponent;

        specialinvoke $r13.<com.opengamma.analytics.financial.model.option.pricing.fourier.HestonCharacteristicExponent: void <init>(com.opengamma.analytics.financial.model.volatility.smile.function.HestonModelData)>(r1);

        $r15 = r0.<com.opengamma.analytics.financial.model.volatility.smile.function.HestonVolatilityFunction$6: com.opengamma.analytics.financial.model.option.pricing.fourier.FFTModelGreeks val$greekCal>;

        $d0 = r0.<com.opengamma.analytics.financial.model.volatility.smile.function.HestonVolatilityFunction$6: double val$forward>;

        $d1 = r0.<com.opengamma.analytics.financial.model.volatility.smile.function.HestonVolatilityFunction$6: double val$timeToExpiry>;

        $d2 = r0.<com.opengamma.analytics.financial.model.volatility.smile.function.HestonVolatilityFunction$6: double val$lowestStrike>;

        $d3 = r0.<com.opengamma.analytics.financial.model.volatility.smile.function.HestonVolatilityFunction$6: double val$highestStrike>;

        $i1 = r0.<com.opengamma.analytics.financial.model.volatility.smile.function.HestonVolatilityFunction$6: int val$n>;

        $r14 = r0.<com.opengamma.analytics.financial.model.volatility.smile.function.HestonVolatilityFunction$6: com.opengamma.analytics.financial.model.volatility.smile.function.HestonVolatilityFunction this$0>;

        $d4 = staticinvoke <com.opengamma.analytics.financial.model.volatility.smile.function.HestonVolatilityFunction: double access$000(com.opengamma.analytics.financial.model.volatility.smile.function.HestonVolatilityFunction)>($r14);

        $r16 = r0.<com.opengamma.analytics.financial.model.volatility.smile.function.HestonVolatilityFunction$6: com.opengamma.analytics.financial.model.volatility.smile.function.HestonVolatilityFunction this$0>;

        $d5 = staticinvoke <com.opengamma.analytics.financial.model.volatility.smile.function.HestonVolatilityFunction: double access$100(com.opengamma.analytics.financial.model.volatility.smile.function.HestonVolatilityFunction)>($r16);

        $r17 = r0.<com.opengamma.analytics.financial.model.volatility.smile.function.HestonVolatilityFunction$6: com.opengamma.analytics.financial.model.volatility.smile.function.HestonVolatilityFunction this$0>;

        $d6 = staticinvoke <com.opengamma.analytics.financial.model.volatility.smile.function.HestonVolatilityFunction: double access$200(com.opengamma.analytics.financial.model.volatility.smile.function.HestonVolatilityFunction)>($r17);

        r3 = virtualinvoke $r15.<com.opengamma.analytics.financial.model.option.pricing.fourier.FFTModelGreeks: double[][] getGreeks(double,double,double,boolean,com.opengamma.analytics.financial.model.option.pricing.fourier.MartingaleCharacteristicExponent,double,double,int,double,double,double)>($d0, 1.0, $d1, 1, $r13, $d2, $d3, $i1, $d4, $d5, $d6);

        r4 = r3[0];

        r5 = r3[1];

        i0 = lengthof r4;

        r6 = newarray (double)[i0];

        r7 = newarray (double)[i0];

        r8 = newarray (double)[i0];

        r9 = newmultiarray (double)[5][i0];

        i5 = 0;

        i6 = 0;

     label01:
        if i6 >= i0 goto label08;

     label02:
        $d17 = r5[i6];

        $d16 = r0.<com.opengamma.analytics.financial.model.volatility.smile.function.HestonVolatilityFunction$6: double val$forward>;

        $d15 = r4[i6];

        $d14 = r0.<com.opengamma.analytics.financial.model.volatility.smile.function.HestonVolatilityFunction$6: double val$timeToExpiry>;

        d24 = staticinvoke <com.opengamma.analytics.financial.model.volatility.BlackFormulaRepository: double impliedVolatility(double,double,double,double,boolean)>($d17, $d16, $d15, $d14, 1);

        r7[i5] = d24;

        $d20 = r0.<com.opengamma.analytics.financial.model.volatility.smile.function.HestonVolatilityFunction$6: double val$forward>;

        $d19 = r4[i6];

        $d18 = r0.<com.opengamma.analytics.financial.model.volatility.smile.function.HestonVolatilityFunction$6: double val$timeToExpiry>;

        $d21 = staticinvoke <com.opengamma.analytics.financial.model.volatility.BlackFormulaRepository: double vega(double,double,double,double)>($d20, $d19, $d18, d24);

        r8[i5] = $d21;

        $d22 = r4[i6];

        r6[i5] = $d22;

        i7 = 0;

     label03:
        if i7 >= 5 goto label04;

        $r33 = r9[i7];

        $i4 = i7 + 2;

        $r32 = r3[$i4];

        $d23 = $r32[i6];

        $r33[i5] = $d23;

        i7 = i7 + 1;

        goto label03;

     label04:
        i5 = i5 + 1;

     label05:
        goto label07;

     label06:
        $r34 := @caughtexception;

     label07:
        i6 = i6 + 1;

        goto label01;

     label08:
        r36 = newarray (double)[i5];

        r37 = newarray (double)[i5];

        r38 = newarray (double)[i5];

        r39 = newmultiarray (double)[5][i5];

        if i5 != i0 goto label09;

        r40 = r6;

        r41 = r7;

        r42 = r8;

        r39 = r9;

        goto label11;

     label09:
        r40 = staticinvoke <java.util.Arrays: double[] copyOfRange(double[],int,int)>(r4, 0, i5);

        r41 = staticinvoke <java.util.Arrays: double[] copyOfRange(double[],int,int)>(r7, 0, i5);

        r42 = staticinvoke <java.util.Arrays: double[] copyOfRange(double[],int,int)>(r8, 0, i5);

        i8 = 0;

     label10:
        if i8 >= 5 goto label11;

        $r30 = r9[i8];

        $r31 = staticinvoke <java.util.Arrays: double[] copyOfRange(double[],int,int)>($r30, 0, i5);

        r39[i8] = $r31;

        i8 = i8 + 1;

        goto label10;

     label11:
        $r18 = r0.<com.opengamma.analytics.financial.model.volatility.smile.function.HestonVolatilityFunction$6: com.opengamma.analytics.financial.model.volatility.smile.function.HestonVolatilityFunction this$0>;

        $r19 = staticinvoke <com.opengamma.analytics.financial.model.volatility.smile.function.HestonVolatilityFunction: com.opengamma.analytics.math.interpolation.Interpolator1D access$400(com.opengamma.analytics.financial.model.volatility.smile.function.HestonVolatilityFunction)>($r18);

        r43 = virtualinvoke $r19.<com.opengamma.analytics.math.interpolation.Interpolator1D: com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle getDataBundleFromSortedArrays(double[],double[])>(r40, r41);

        i9 = 0;

     label12:
        $i10 = r0.<com.opengamma.analytics.financial.model.volatility.smile.function.HestonVolatilityFunction$6: int val$n>;

        if i9 >= $i10 goto label13;

        $r25 = r0.<com.opengamma.analytics.financial.model.volatility.smile.function.HestonVolatilityFunction$6: double[][] val$nodeSense>;

        $r24 = r0.<com.opengamma.analytics.financial.model.volatility.smile.function.HestonVolatilityFunction$6: com.opengamma.analytics.financial.model.volatility.smile.function.HestonVolatilityFunction this$0>;

        $r26 = staticinvoke <com.opengamma.analytics.financial.model.volatility.smile.function.HestonVolatilityFunction: com.opengamma.analytics.math.interpolation.Interpolator1D access$400(com.opengamma.analytics.financial.model.volatility.smile.function.HestonVolatilityFunction)>($r24);

        $r27 = r0.<com.opengamma.analytics.financial.model.volatility.smile.function.HestonVolatilityFunction$6: double[] val$strikes>;

        $d13 = $r27[i9];

        $r28 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d13);

        $r29 = virtualinvoke $r26.<com.opengamma.analytics.math.interpolation.Interpolator1D: double[] getNodeSensitivitiesForValue(com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle,java.lang.Double)>(r43, $r28);

        $r25[i9] = $r29;

        i9 = i9 + 1;

        goto label12;

     label13:
        i11 = lengthof r9;

        r10 = newmultiarray (double)[i11][i5];

        i12 = 0;

     label14:
        if i12 >= i11 goto label17;

        i13 = 0;

     label15:
        if i13 >= i5 goto label16;

        $r23 = r10[i12];

        $r22 = r39[i12];

        $d11 = $r22[i13];

        $d10 = r42[i13];

        $d12 = $d11 / $d10;

        $r23[i13] = $d12;

        i13 = i13 + 1;

        goto label15;

     label16:
        i12 = i12 + 1;

        goto label14;

     label17:
        $i2 = r0.<com.opengamma.analytics.financial.model.volatility.smile.function.HestonVolatilityFunction$6: int val$n>;

        r44 = newmultiarray (double)[$i2][i11];

        i14 = 0;

     label18:
        if i14 >= i11 goto label23;

        r11 = r10[i14];

        i15 = 0;

     label19:
        $i3 = r0.<com.opengamma.analytics.financial.model.volatility.smile.function.HestonVolatilityFunction$6: int val$n>;

        if i15 >= $i3 goto label22;

        $r20 = r0.<com.opengamma.analytics.financial.model.volatility.smile.function.HestonVolatilityFunction$6: double[][] val$nodeSense>;

        r12 = $r20[i15];

        d25 = 0.0;

        i16 = 0;

     label20:
        if i16 >= i5 goto label21;

        $d8 = r11[i16];

        $d7 = r12[i16];

        $d9 = $d8 * $d7;

        d25 = d25 + $d9;

        i16 = i16 + 1;

        goto label20;

     label21:
        $r21 = r44[i15];

        $r21[i14] = d25;

        i15 = i15 + 1;

        goto label19;

     label22:
        i14 = i14 + 1;

        goto label18;

     label23:
        return r44;

        catch java.lang.IllegalArgumentException from label02 to label05 with label06;
    }

    public volatile java.lang.Object evaluate(java.lang.Object)
    {
        com.opengamma.analytics.financial.model.volatility.smile.function.HestonVolatilityFunction$6 r0;
        java.lang.Object r1;
        com.opengamma.analytics.financial.model.volatility.smile.function.HestonModelData $r2;
        double[][] $r3;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.smile.function.HestonVolatilityFunction$6;

        r1 := @parameter0: java.lang.Object;

        $r2 = (com.opengamma.analytics.financial.model.volatility.smile.function.HestonModelData) r1;

        $r3 = virtualinvoke r0.<com.opengamma.analytics.financial.model.volatility.smile.function.HestonVolatilityFunction$6: double[][] evaluate(com.opengamma.analytics.financial.model.volatility.smile.function.HestonModelData)>($r2);

        return $r3;
    }
}
