public class com.opengamma.analytics.math.statistics.distribution.GeneralizedExtremeValueDistribution extends java.lang.Object implements com.opengamma.analytics.math.statistics.distribution.ProbabilityDistribution
{
    private final double _mu;
    private final double _sigma;
    private final double _ksi;
    private final boolean _ksiIsZero;

    public void <init>(double, double, double)
    {
        com.opengamma.analytics.math.statistics.distribution.GeneralizedExtremeValueDistribution r0;
        double d0, d1, d2;
        byte $b0;
        boolean $z0, $z1;

        r0 := @this: com.opengamma.analytics.math.statistics.distribution.GeneralizedExtremeValueDistribution;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        d2 := @parameter2: double;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $b0 = d1 cmpl 0.0;

        if $b0 < 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        staticinvoke <org.apache.commons.lang.Validate: void isTrue(boolean,java.lang.String)>($z1, "sigma must be >= 0");

        r0.<com.opengamma.analytics.math.statistics.distribution.GeneralizedExtremeValueDistribution: double _mu> = d0;

        r0.<com.opengamma.analytics.math.statistics.distribution.GeneralizedExtremeValueDistribution: double _sigma> = d1;

        r0.<com.opengamma.analytics.math.statistics.distribution.GeneralizedExtremeValueDistribution: double _ksi> = d2;

        $z0 = staticinvoke <com.opengamma.util.CompareUtils: boolean closeEquals(double,double,double)>(d2, 0.0, 1.0E-13);

        r0.<com.opengamma.analytics.math.statistics.distribution.GeneralizedExtremeValueDistribution: boolean _ksiIsZero> = $z0;

        return;
    }

    public double getCDF(java.lang.Double)
    {
        com.opengamma.analytics.math.statistics.distribution.GeneralizedExtremeValueDistribution r0;
        java.lang.Double r1;
        double $d0, $d1, $d2, $d3;

        r0 := @this: com.opengamma.analytics.math.statistics.distribution.GeneralizedExtremeValueDistribution;

        r1 := @parameter0: java.lang.Double;

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object)>(r1);

        $d0 = virtualinvoke r1.<java.lang.Double: double doubleValue()>();

        $d1 = specialinvoke r0.<com.opengamma.analytics.math.statistics.distribution.GeneralizedExtremeValueDistribution: double getT(double)>($d0);

        $d2 = neg $d1;

        $d3 = staticinvoke <java.lang.Math: double exp(double)>($d2);

        return $d3;
    }

    public double getInverseCDF(java.lang.Double)
    {
        com.opengamma.analytics.math.statistics.distribution.GeneralizedExtremeValueDistribution r0;
        java.lang.Double r1;
        org.apache.commons.lang.NotImplementedException $r2;

        r0 := @this: com.opengamma.analytics.math.statistics.distribution.GeneralizedExtremeValueDistribution;

        r1 := @parameter0: java.lang.Double;

        $r2 = new org.apache.commons.lang.NotImplementedException;

        specialinvoke $r2.<org.apache.commons.lang.NotImplementedException: void <init>()>();

        throw $r2;
    }

    public double getPDF(java.lang.Double)
    {
        com.opengamma.analytics.math.statistics.distribution.GeneralizedExtremeValueDistribution r0;
        java.lang.Double r1;
        double d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9;

        r0 := @this: com.opengamma.analytics.math.statistics.distribution.GeneralizedExtremeValueDistribution;

        r1 := @parameter0: java.lang.Double;

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object)>(r1);

        $d1 = virtualinvoke r1.<java.lang.Double: double doubleValue()>();

        d0 = specialinvoke r0.<com.opengamma.analytics.math.statistics.distribution.GeneralizedExtremeValueDistribution: double getT(double)>($d1);

        $d2 = r0.<com.opengamma.analytics.math.statistics.distribution.GeneralizedExtremeValueDistribution: double _ksi>;

        $d3 = $d2 + 1.0;

        $d4 = staticinvoke <java.lang.Math: double pow(double,double)>(d0, $d3);

        $d5 = neg d0;

        $d6 = staticinvoke <java.lang.Math: double exp(double)>($d5);

        $d8 = $d4 * $d6;

        $d7 = r0.<com.opengamma.analytics.math.statistics.distribution.GeneralizedExtremeValueDistribution: double _sigma>;

        $d9 = $d8 / $d7;

        return $d9;
    }

    public double nextRandom()
    {
        com.opengamma.analytics.math.statistics.distribution.GeneralizedExtremeValueDistribution r0;
        org.apache.commons.lang.NotImplementedException $r1;

        r0 := @this: com.opengamma.analytics.math.statistics.distribution.GeneralizedExtremeValueDistribution;

        $r1 = new org.apache.commons.lang.NotImplementedException;

        specialinvoke $r1.<org.apache.commons.lang.NotImplementedException: void <init>()>();

        throw $r1;
    }

    public double getMu()
    {
        com.opengamma.analytics.math.statistics.distribution.GeneralizedExtremeValueDistribution r0;
        double $d0;

        r0 := @this: com.opengamma.analytics.math.statistics.distribution.GeneralizedExtremeValueDistribution;

        $d0 = r0.<com.opengamma.analytics.math.statistics.distribution.GeneralizedExtremeValueDistribution: double _mu>;

        return $d0;
    }

    public double getSigma()
    {
        com.opengamma.analytics.math.statistics.distribution.GeneralizedExtremeValueDistribution r0;
        double $d0;

        r0 := @this: com.opengamma.analytics.math.statistics.distribution.GeneralizedExtremeValueDistribution;

        $d0 = r0.<com.opengamma.analytics.math.statistics.distribution.GeneralizedExtremeValueDistribution: double _sigma>;

        return $d0;
    }

    public double getKsi()
    {
        com.opengamma.analytics.math.statistics.distribution.GeneralizedExtremeValueDistribution r0;
        double $d0;

        r0 := @this: com.opengamma.analytics.math.statistics.distribution.GeneralizedExtremeValueDistribution;

        $d0 = r0.<com.opengamma.analytics.math.statistics.distribution.GeneralizedExtremeValueDistribution: double _ksi>;

        return $d0;
    }

    private double getT(double)
    {
        com.opengamma.analytics.math.statistics.distribution.GeneralizedExtremeValueDistribution r0;
        double d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21, $d22, $d23, $d24, $d25, $d26, $d27, $d28;
        boolean $z0;
        byte $b0, $b1, $b2, $b3;
        java.lang.IllegalArgumentException $r1, $r2;

        r0 := @this: com.opengamma.analytics.math.statistics.distribution.GeneralizedExtremeValueDistribution;

        d0 := @parameter0: double;

        $z0 = r0.<com.opengamma.analytics.math.statistics.distribution.GeneralizedExtremeValueDistribution: boolean _ksiIsZero>;

        if $z0 == 0 goto label1;

        $d23 = r0.<com.opengamma.analytics.math.statistics.distribution.GeneralizedExtremeValueDistribution: double _mu>;

        $d24 = d0 - $d23;

        $d26 = neg $d24;

        $d25 = r0.<com.opengamma.analytics.math.statistics.distribution.GeneralizedExtremeValueDistribution: double _sigma>;

        $d27 = $d26 / $d25;

        $d28 = staticinvoke <java.lang.Math: double exp(double)>($d27);

        return $d28;

     label1:
        $d1 = r0.<com.opengamma.analytics.math.statistics.distribution.GeneralizedExtremeValueDistribution: double _ksi>;

        $b0 = $d1 cmpg 0.0;

        if $b0 >= 0 goto label2;

        $d21 = r0.<com.opengamma.analytics.math.statistics.distribution.GeneralizedExtremeValueDistribution: double _mu>;

        $d19 = r0.<com.opengamma.analytics.math.statistics.distribution.GeneralizedExtremeValueDistribution: double _sigma>;

        $d18 = r0.<com.opengamma.analytics.math.statistics.distribution.GeneralizedExtremeValueDistribution: double _ksi>;

        $d20 = $d19 / $d18;

        $d22 = $d21 - $d20;

        $b3 = d0 cmpl $d22;

        if $b3 <= 0 goto label2;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Support for GEV is in the range -infinity -> mu - sigma / ksi when ksi < 0");

        throw $r2;

     label2:
        $d2 = r0.<com.opengamma.analytics.math.statistics.distribution.GeneralizedExtremeValueDistribution: double _ksi>;

        $b1 = $d2 cmpl 0.0;

        if $b1 <= 0 goto label3;

        $d16 = r0.<com.opengamma.analytics.math.statistics.distribution.GeneralizedExtremeValueDistribution: double _mu>;

        $d14 = r0.<com.opengamma.analytics.math.statistics.distribution.GeneralizedExtremeValueDistribution: double _sigma>;

        $d13 = r0.<com.opengamma.analytics.math.statistics.distribution.GeneralizedExtremeValueDistribution: double _ksi>;

        $d15 = $d14 / $d13;

        $d17 = $d16 - $d15;

        $b2 = d0 cmpg $d17;

        if $b2 >= 0 goto label3;

        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Support for GEV is in the range mu - sigma / ksi -> +infinity when ksi > 0");

        throw $r1;

     label3:
        $d5 = r0.<com.opengamma.analytics.math.statistics.distribution.GeneralizedExtremeValueDistribution: double _ksi>;

        $d3 = r0.<com.opengamma.analytics.math.statistics.distribution.GeneralizedExtremeValueDistribution: double _mu>;

        $d4 = d0 - $d3;

        $d7 = $d5 * $d4;

        $d6 = r0.<com.opengamma.analytics.math.statistics.distribution.GeneralizedExtremeValueDistribution: double _sigma>;

        $d8 = $d7 / $d6;

        $d11 = 1.0 + $d8;

        $d9 = r0.<com.opengamma.analytics.math.statistics.distribution.GeneralizedExtremeValueDistribution: double _ksi>;

        $d10 = -1.0 / $d9;

        $d12 = staticinvoke <java.lang.Math: double pow(double,double)>($d11, $d10);

        return $d12;
    }

    public int hashCode()
    {
        com.opengamma.analytics.math.statistics.distribution.GeneralizedExtremeValueDistribution r0;
        double $d0, $d1, $d2;
        long $l1, $l2, $l5, $l6, $l9, $l10, l14, l16, l18;
        int $i3, $i4, $i7, $i8, $i11, $i12, i15, i17, i19;

        r0 := @this: com.opengamma.analytics.math.statistics.distribution.GeneralizedExtremeValueDistribution;

        $d0 = r0.<com.opengamma.analytics.math.statistics.distribution.GeneralizedExtremeValueDistribution: double _ksi>;

        l14 = staticinvoke <java.lang.Double: long doubleToLongBits(double)>($d0);

        $i4 = 31 * 1;

        $l1 = l14 >>> 32;

        $l2 = l14 ^ $l1;

        $i3 = (int) $l2;

        i15 = $i4 + $i3;

        $d1 = r0.<com.opengamma.analytics.math.statistics.distribution.GeneralizedExtremeValueDistribution: double _mu>;

        l16 = staticinvoke <java.lang.Double: long doubleToLongBits(double)>($d1);

        $i8 = 31 * i15;

        $l5 = l16 >>> 32;

        $l6 = l16 ^ $l5;

        $i7 = (int) $l6;

        i17 = $i8 + $i7;

        $d2 = r0.<com.opengamma.analytics.math.statistics.distribution.GeneralizedExtremeValueDistribution: double _sigma>;

        l18 = staticinvoke <java.lang.Double: long doubleToLongBits(double)>($d2);

        $i12 = 31 * i17;

        $l9 = l18 >>> 32;

        $l10 = l18 ^ $l9;

        $i11 = (int) $l10;

        i19 = $i12 + $i11;

        return i19;
    }

    public boolean equals(java.lang.Object)
    {
        com.opengamma.analytics.math.statistics.distribution.GeneralizedExtremeValueDistribution r0, r2;
        java.lang.Object r1;
        java.lang.Class $r3, $r4;
        double $d0, $d1, $d2, $d3, $d4, $d5;
        long $l0, $l1, $l3, $l4, $l6, $l7;
        byte $b2, $b5, $b8;
        boolean $z0;

        r0 := @this: com.opengamma.analytics.math.statistics.distribution.GeneralizedExtremeValueDistribution;

        r1 := @parameter0: java.lang.Object;

        if r0 != r1 goto label1;

        return 1;

     label1:
        if r1 != null goto label2;

        return 0;

     label2:
        $r3 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r4 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        if $r3 == $r4 goto label3;

        return 0;

     label3:
        r2 = (com.opengamma.analytics.math.statistics.distribution.GeneralizedExtremeValueDistribution) r1;

        $d0 = r0.<com.opengamma.analytics.math.statistics.distribution.GeneralizedExtremeValueDistribution: double _ksi>;

        $l0 = staticinvoke <java.lang.Double: long doubleToLongBits(double)>($d0);

        $d1 = r2.<com.opengamma.analytics.math.statistics.distribution.GeneralizedExtremeValueDistribution: double _ksi>;

        $l1 = staticinvoke <java.lang.Double: long doubleToLongBits(double)>($d1);

        $b2 = $l0 cmp $l1;

        if $b2 == 0 goto label4;

        return 0;

     label4:
        $d2 = r0.<com.opengamma.analytics.math.statistics.distribution.GeneralizedExtremeValueDistribution: double _mu>;

        $l3 = staticinvoke <java.lang.Double: long doubleToLongBits(double)>($d2);

        $d3 = r2.<com.opengamma.analytics.math.statistics.distribution.GeneralizedExtremeValueDistribution: double _mu>;

        $l4 = staticinvoke <java.lang.Double: long doubleToLongBits(double)>($d3);

        $b5 = $l3 cmp $l4;

        if $b5 == 0 goto label5;

        return 0;

     label5:
        $d4 = r0.<com.opengamma.analytics.math.statistics.distribution.GeneralizedExtremeValueDistribution: double _sigma>;

        $l6 = staticinvoke <java.lang.Double: long doubleToLongBits(double)>($d4);

        $d5 = r2.<com.opengamma.analytics.math.statistics.distribution.GeneralizedExtremeValueDistribution: double _sigma>;

        $l7 = staticinvoke <java.lang.Double: long doubleToLongBits(double)>($d5);

        $b8 = $l6 cmp $l7;

        if $b8 != 0 goto label6;

        $z0 = 1;

        goto label7;

     label6:
        $z0 = 0;

     label7:
        return $z0;
    }

    public volatile double getInverseCDF(java.lang.Object)
    {
        com.opengamma.analytics.math.statistics.distribution.GeneralizedExtremeValueDistribution r0;
        java.lang.Object r1;
        java.lang.Double $r2;
        double $d0;

        r0 := @this: com.opengamma.analytics.math.statistics.distribution.GeneralizedExtremeValueDistribution;

        r1 := @parameter0: java.lang.Object;

        $r2 = (java.lang.Double) r1;

        $d0 = virtualinvoke r0.<com.opengamma.analytics.math.statistics.distribution.GeneralizedExtremeValueDistribution: double getInverseCDF(java.lang.Double)>($r2);

        return $d0;
    }

    public volatile double getCDF(java.lang.Object)
    {
        com.opengamma.analytics.math.statistics.distribution.GeneralizedExtremeValueDistribution r0;
        java.lang.Object r1;
        java.lang.Double $r2;
        double $d0;

        r0 := @this: com.opengamma.analytics.math.statistics.distribution.GeneralizedExtremeValueDistribution;

        r1 := @parameter0: java.lang.Object;

        $r2 = (java.lang.Double) r1;

        $d0 = virtualinvoke r0.<com.opengamma.analytics.math.statistics.distribution.GeneralizedExtremeValueDistribution: double getCDF(java.lang.Double)>($r2);

        return $d0;
    }

    public volatile double getPDF(java.lang.Object)
    {
        com.opengamma.analytics.math.statistics.distribution.GeneralizedExtremeValueDistribution r0;
        java.lang.Object r1;
        java.lang.Double $r2;
        double $d0;

        r0 := @this: com.opengamma.analytics.math.statistics.distribution.GeneralizedExtremeValueDistribution;

        r1 := @parameter0: java.lang.Object;

        $r2 = (java.lang.Double) r1;

        $d0 = virtualinvoke r0.<com.opengamma.analytics.math.statistics.distribution.GeneralizedExtremeValueDistribution: double getPDF(java.lang.Double)>($r2);

        return $d0;
    }
}
