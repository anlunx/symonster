public abstract class org.apache.commons.math3.analysis.integration.gauss.BaseRuleFactory extends java.lang.Object
{
    private final java.util.Map pointsAndWeights;
    private final java.util.Map pointsAndWeightsDouble;

    public void <init>()
    {
        org.apache.commons.math3.analysis.integration.gauss.BaseRuleFactory r0;
        java.util.TreeMap $r1, $r2;

        r0 := @this: org.apache.commons.math3.analysis.integration.gauss.BaseRuleFactory;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.TreeMap;

        specialinvoke $r1.<java.util.TreeMap: void <init>()>();

        r0.<org.apache.commons.math3.analysis.integration.gauss.BaseRuleFactory: java.util.Map pointsAndWeights> = $r1;

        $r2 = new java.util.TreeMap;

        specialinvoke $r2.<java.util.TreeMap: void <init>()>();

        r0.<org.apache.commons.math3.analysis.integration.gauss.BaseRuleFactory: java.util.Map pointsAndWeightsDouble> = $r2;

        return;
    }

    public org.apache.commons.math3.util.Pair getRule(int) throws org.apache.commons.math3.exception.NotStrictlyPositiveException, org.apache.commons.math3.exception.DimensionMismatchException
    {
        org.apache.commons.math3.analysis.integration.gauss.BaseRuleFactory r0;
        int i0;
        org.apache.commons.math3.util.Pair r1, $r5, r18;
        java.util.Map $r2, $r12;
        java.lang.Integer $r3, $r13, $r17;
        java.lang.Object $r4, $r6, $r8, $r9, $r11;
        double[] $r7, $r10;
        org.apache.commons.math3.exception.NotStrictlyPositiveException $r15;
        org.apache.commons.math3.exception.util.LocalizedFormats $r16;

        r0 := @this: org.apache.commons.math3.analysis.integration.gauss.BaseRuleFactory;

        i0 := @parameter0: int;

        if i0 > 0 goto label1;

        $r15 = new org.apache.commons.math3.exception.NotStrictlyPositiveException;

        $r16 = <org.apache.commons.math3.exception.util.LocalizedFormats: org.apache.commons.math3.exception.util.LocalizedFormats NUMBER_OF_POINTS>;

        $r17 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        specialinvoke $r15.<org.apache.commons.math3.exception.NotStrictlyPositiveException: void <init>(org.apache.commons.math3.exception.util.Localizable,java.lang.Number)>($r16, $r17);

        throw $r15;

     label1:
        $r2 = r0.<org.apache.commons.math3.analysis.integration.gauss.BaseRuleFactory: java.util.Map pointsAndWeightsDouble>;

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r4 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>($r3);

        r18 = (org.apache.commons.math3.util.Pair) $r4;

        if r18 != null goto label2;

        r1 = virtualinvoke r0.<org.apache.commons.math3.analysis.integration.gauss.BaseRuleFactory: org.apache.commons.math3.util.Pair getRuleInternal(int)>(i0);

        r18 = staticinvoke <org.apache.commons.math3.analysis.integration.gauss.BaseRuleFactory: org.apache.commons.math3.util.Pair convertToDouble(org.apache.commons.math3.util.Pair)>(r1);

        $r12 = r0.<org.apache.commons.math3.analysis.integration.gauss.BaseRuleFactory: java.util.Map pointsAndWeightsDouble>;

        $r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        interfaceinvoke $r12.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r13, r18);

     label2:
        $r5 = new org.apache.commons.math3.util.Pair;

        $r6 = virtualinvoke r18.<org.apache.commons.math3.util.Pair: java.lang.Object getFirst()>();

        $r7 = (double[]) $r6;

        $r8 = virtualinvoke $r7.<java.lang.Object: java.lang.Object clone()>();

        $r9 = virtualinvoke r18.<org.apache.commons.math3.util.Pair: java.lang.Object getSecond()>();

        $r10 = (double[]) $r9;

        $r11 = virtualinvoke $r10.<java.lang.Object: java.lang.Object clone()>();

        specialinvoke $r5.<org.apache.commons.math3.util.Pair: void <init>(java.lang.Object,java.lang.Object)>($r8, $r11);

        return $r5;
    }

    protected synchronized org.apache.commons.math3.util.Pair getRuleInternal(int) throws org.apache.commons.math3.exception.DimensionMismatchException
    {
        org.apache.commons.math3.analysis.integration.gauss.BaseRuleFactory r0;
        int i0;
        org.apache.commons.math3.util.Pair r1, $r5, $r6;
        java.util.Map $r2;
        java.lang.Integer $r3;
        java.lang.Object $r4;

        r0 := @this: org.apache.commons.math3.analysis.integration.gauss.BaseRuleFactory;

        i0 := @parameter0: int;

        $r2 = r0.<org.apache.commons.math3.analysis.integration.gauss.BaseRuleFactory: java.util.Map pointsAndWeights>;

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r4 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>($r3);

        r1 = (org.apache.commons.math3.util.Pair) $r4;

        if r1 != null goto label1;

        $r5 = virtualinvoke r0.<org.apache.commons.math3.analysis.integration.gauss.BaseRuleFactory: org.apache.commons.math3.util.Pair computeRule(int)>(i0);

        virtualinvoke r0.<org.apache.commons.math3.analysis.integration.gauss.BaseRuleFactory: void addRule(org.apache.commons.math3.util.Pair)>($r5);

        $r6 = virtualinvoke r0.<org.apache.commons.math3.analysis.integration.gauss.BaseRuleFactory: org.apache.commons.math3.util.Pair getRuleInternal(int)>(i0);

        return $r6;

     label1:
        return r1;
    }

    protected void addRule(org.apache.commons.math3.util.Pair) throws org.apache.commons.math3.exception.DimensionMismatchException
    {
        org.apache.commons.math3.analysis.integration.gauss.BaseRuleFactory r0;
        org.apache.commons.math3.util.Pair r1;
        java.lang.Object $r2, $r4, $r7, $r12, $r14;
        java.lang.Number[] $r3, $r5, $r8, $r13, $r15;
        int $i0, $i1, $i2, $i3, $i4;
        java.util.Map $r6;
        java.lang.Integer $r9;
        org.apache.commons.math3.exception.DimensionMismatchException $r11;

        r0 := @this: org.apache.commons.math3.analysis.integration.gauss.BaseRuleFactory;

        r1 := @parameter0: org.apache.commons.math3.util.Pair;

        $r2 = virtualinvoke r1.<org.apache.commons.math3.util.Pair: java.lang.Object getFirst()>();

        $r3 = (java.lang.Number[]) $r2;

        $i0 = lengthof $r3;

        $r4 = virtualinvoke r1.<org.apache.commons.math3.util.Pair: java.lang.Object getSecond()>();

        $r5 = (java.lang.Number[]) $r4;

        $i1 = lengthof $r5;

        if $i0 == $i1 goto label1;

        $r11 = new org.apache.commons.math3.exception.DimensionMismatchException;

        $r12 = virtualinvoke r1.<org.apache.commons.math3.util.Pair: java.lang.Object getFirst()>();

        $r13 = (java.lang.Number[]) $r12;

        $i3 = lengthof $r13;

        $r14 = virtualinvoke r1.<org.apache.commons.math3.util.Pair: java.lang.Object getSecond()>();

        $r15 = (java.lang.Number[]) $r14;

        $i4 = lengthof $r15;

        specialinvoke $r11.<org.apache.commons.math3.exception.DimensionMismatchException: void <init>(int,int)>($i3, $i4);

        throw $r11;

     label1:
        $r6 = r0.<org.apache.commons.math3.analysis.integration.gauss.BaseRuleFactory: java.util.Map pointsAndWeights>;

        $r7 = virtualinvoke r1.<org.apache.commons.math3.util.Pair: java.lang.Object getFirst()>();

        $r8 = (java.lang.Number[]) $r7;

        $i2 = lengthof $r8;

        $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        interfaceinvoke $r6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r9, r1);

        return;
    }

    protected abstract org.apache.commons.math3.util.Pair computeRule(int) throws org.apache.commons.math3.exception.DimensionMismatchException;

    private static org.apache.commons.math3.util.Pair convertToDouble(org.apache.commons.math3.util.Pair)
    {
        org.apache.commons.math3.util.Pair r0, $r7;
        java.lang.Number[] r1, r2;
        int i0, i1;
        double[] r3, r4;
        java.lang.Object $r5, $r6;
        java.lang.Number $r8, $r9;
        double $d0, $d1;

        r0 := @parameter0: org.apache.commons.math3.util.Pair;

        $r5 = virtualinvoke r0.<org.apache.commons.math3.util.Pair: java.lang.Object getFirst()>();

        r1 = (java.lang.Number[]) $r5;

        $r6 = virtualinvoke r0.<org.apache.commons.math3.util.Pair: java.lang.Object getSecond()>();

        r2 = (java.lang.Number[]) $r6;

        i0 = lengthof r1;

        r3 = newarray (double)[i0];

        r4 = newarray (double)[i0];

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        $r8 = r1[i1];

        $d0 = virtualinvoke $r8.<java.lang.Number: double doubleValue()>();

        r3[i1] = $d0;

        $r9 = r2[i1];

        $d1 = virtualinvoke $r9.<java.lang.Number: double doubleValue()>();

        r4[i1] = $d1;

        i1 = i1 + 1;

        goto label1;

     label2:
        $r7 = new org.apache.commons.math3.util.Pair;

        specialinvoke $r7.<org.apache.commons.math3.util.Pair: void <init>(java.lang.Object,java.lang.Object)>(r3, r4);

        return $r7;
    }
}
