public abstract class com.opengamma.analytics.math.curve.Curve extends java.lang.Object implements org.joda.beans.Bean
{
    private static final java.util.concurrent.atomic.AtomicLong ATOMIC;
    private java.lang.String _name;

    protected void <init>()
    {
        com.opengamma.analytics.math.curve.Curve r0;
        java.util.concurrent.atomic.AtomicLong $r1;
        long $l0;
        java.lang.String $r2;

        r0 := @this: com.opengamma.analytics.math.curve.Curve;

        $r1 = <com.opengamma.analytics.math.curve.Curve: java.util.concurrent.atomic.AtomicLong ATOMIC>;

        $l0 = virtualinvoke $r1.<java.util.concurrent.atomic.AtomicLong: long getAndIncrement()>();

        $r2 = staticinvoke <java.lang.Long: java.lang.String toString(long)>($l0);

        specialinvoke r0.<com.opengamma.analytics.math.curve.Curve: void <init>(java.lang.String)>($r2);

        return;
    }

    protected void <init>(java.lang.String)
    {
        com.opengamma.analytics.math.curve.Curve r0;
        java.lang.String r1;

        r0 := @this: com.opengamma.analytics.math.curve.Curve;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "name");

        r0.<com.opengamma.analytics.math.curve.Curve: java.lang.String _name> = r1;

        return;
    }

    public abstract java.lang.Comparable[] getXData();

    public abstract java.lang.Object[] getYData();

    public abstract int size();

    public abstract java.lang.Object getYValue(java.lang.Comparable);

    public com.opengamma.analytics.math.function.Function1D toFunction1D()
    {
        com.opengamma.analytics.math.curve.Curve r0;
        com.opengamma.analytics.math.curve.Curve$1 $r1;

        r0 := @this: com.opengamma.analytics.math.curve.Curve;

        $r1 = new com.opengamma.analytics.math.curve.Curve$1;

        specialinvoke $r1.<com.opengamma.analytics.math.curve.Curve$1: void <init>(com.opengamma.analytics.math.curve.Curve)>(r0);

        return $r1;
    }

    public int hashCode()
    {
        com.opengamma.analytics.math.curve.Curve r0;
        java.lang.String $r1, $r2;
        int $i1, $i3, i4;

        r0 := @this: com.opengamma.analytics.math.curve.Curve;

        $i1 = 31 * 1;

        $r1 = r0.<com.opengamma.analytics.math.curve.Curve: java.lang.String _name>;

        if $r1 != null goto label1;

        $i3 = 0;

        goto label2;

     label1:
        $r2 = r0.<com.opengamma.analytics.math.curve.Curve: java.lang.String _name>;

        $i3 = virtualinvoke $r2.<java.lang.String: int hashCode()>();

     label2:
        i4 = $i1 + $i3;

        return i4;
    }

    public boolean equals(java.lang.Object)
    {
        com.opengamma.analytics.math.curve.Curve r0, r2;
        java.lang.Object r1;
        java.lang.Class $r3, $r4;
        java.lang.String $r5, $r6;
        boolean $z0;

        r0 := @this: com.opengamma.analytics.math.curve.Curve;

        r1 := @parameter0: java.lang.Object;

        if r0 != r1 goto label1;

        return 1;

     label1:
        if r1 != null goto label2;

        return 0;

     label2:
        $r3 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r4 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        if $r3 == $r4 goto label3;

        return 0;

     label3:
        r2 = (com.opengamma.analytics.math.curve.Curve) r1;

        $r6 = r0.<com.opengamma.analytics.math.curve.Curve: java.lang.String _name>;

        $r5 = r2.<com.opengamma.analytics.math.curve.Curve: java.lang.String _name>;

        $z0 = staticinvoke <org.apache.commons.lang.ObjectUtils: boolean equals(java.lang.Object,java.lang.Object)>($r6, $r5);

        return $z0;
    }

    public static com.opengamma.analytics.math.curve.Curve$Meta meta()
    {
        com.opengamma.analytics.math.curve.Curve$Meta $r0;

        $r0 = <com.opengamma.analytics.math.curve.Curve$Meta: com.opengamma.analytics.math.curve.Curve$Meta INSTANCE>;

        return $r0;
    }

    public static com.opengamma.analytics.math.curve.Curve$Meta metaCurve(java.lang.Class, java.lang.Class)
    {
        java.lang.Class r0, r1;
        com.opengamma.analytics.math.curve.Curve$Meta $r2;

        r0 := @parameter0: java.lang.Class;

        r1 := @parameter1: java.lang.Class;

        $r2 = <com.opengamma.analytics.math.curve.Curve$Meta: com.opengamma.analytics.math.curve.Curve$Meta INSTANCE>;

        return $r2;
    }

    public com.opengamma.analytics.math.curve.Curve$Meta metaBean()
    {
        com.opengamma.analytics.math.curve.Curve r0;
        com.opengamma.analytics.math.curve.Curve$Meta $r1;

        r0 := @this: com.opengamma.analytics.math.curve.Curve;

        $r1 = <com.opengamma.analytics.math.curve.Curve$Meta: com.opengamma.analytics.math.curve.Curve$Meta INSTANCE>;

        return $r1;
    }

    public org.joda.beans.Property property(java.lang.String)
    {
        com.opengamma.analytics.math.curve.Curve r0;
        java.lang.String r1;
        com.opengamma.analytics.math.curve.Curve$Meta $r2;
        org.joda.beans.MetaProperty $r3;
        org.joda.beans.Property $r4;

        r0 := @this: com.opengamma.analytics.math.curve.Curve;

        r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<com.opengamma.analytics.math.curve.Curve: com.opengamma.analytics.math.curve.Curve$Meta metaBean()>();

        $r3 = virtualinvoke $r2.<com.opengamma.analytics.math.curve.Curve$Meta: org.joda.beans.MetaProperty metaProperty(java.lang.String)>(r1);

        $r4 = interfaceinvoke $r3.<org.joda.beans.MetaProperty: org.joda.beans.Property createProperty(org.joda.beans.Bean)>(r0);

        return $r4;
    }

    public java.util.Set propertyNames()
    {
        com.opengamma.analytics.math.curve.Curve r0;
        com.opengamma.analytics.math.curve.Curve$Meta $r1;
        java.util.Map $r2;
        java.util.Set $r3;

        r0 := @this: com.opengamma.analytics.math.curve.Curve;

        $r1 = virtualinvoke r0.<com.opengamma.analytics.math.curve.Curve: com.opengamma.analytics.math.curve.Curve$Meta metaBean()>();

        $r2 = virtualinvoke $r1.<com.opengamma.analytics.math.curve.Curve$Meta: java.util.Map metaPropertyMap()>();

        $r3 = interfaceinvoke $r2.<java.util.Map: java.util.Set keySet()>();

        return $r3;
    }

    public java.lang.String getName()
    {
        com.opengamma.analytics.math.curve.Curve r0;
        java.lang.String $r1;

        r0 := @this: com.opengamma.analytics.math.curve.Curve;

        $r1 = r0.<com.opengamma.analytics.math.curve.Curve: java.lang.String _name>;

        return $r1;
    }

    private void setName(java.lang.String)
    {
        com.opengamma.analytics.math.curve.Curve r0;
        java.lang.String r1;

        r0 := @this: com.opengamma.analytics.math.curve.Curve;

        r1 := @parameter0: java.lang.String;

        staticinvoke <org.joda.beans.JodaBeanUtils: void notNull(java.lang.Object,java.lang.String)>(r1, "name");

        r0.<com.opengamma.analytics.math.curve.Curve: java.lang.String _name> = r1;

        return;
    }

    public final org.joda.beans.Property name()
    {
        com.opengamma.analytics.math.curve.Curve r0;
        com.opengamma.analytics.math.curve.Curve$Meta $r1;
        org.joda.beans.MetaProperty $r2;
        org.joda.beans.Property $r3;

        r0 := @this: com.opengamma.analytics.math.curve.Curve;

        $r1 = virtualinvoke r0.<com.opengamma.analytics.math.curve.Curve: com.opengamma.analytics.math.curve.Curve$Meta metaBean()>();

        $r2 = virtualinvoke $r1.<com.opengamma.analytics.math.curve.Curve$Meta: org.joda.beans.MetaProperty name()>();

        $r3 = interfaceinvoke $r2.<org.joda.beans.MetaProperty: org.joda.beans.Property createProperty(org.joda.beans.Bean)>(r0);

        return $r3;
    }

    public com.opengamma.analytics.math.curve.Curve clone()
    {
        com.opengamma.analytics.math.curve.Curve r0, $r2;
        org.joda.beans.Bean $r1;

        r0 := @this: com.opengamma.analytics.math.curve.Curve;

        $r1 = staticinvoke <org.joda.beans.JodaBeanUtils: org.joda.beans.Bean cloneAlways(org.joda.beans.Bean)>(r0);

        $r2 = (com.opengamma.analytics.math.curve.Curve) $r1;

        return $r2;
    }

    public java.lang.String toString()
    {
        com.opengamma.analytics.math.curve.Curve r0;
        int i0, $i1, $i2, $i3;
        java.lang.StringBuilder $r2;
        java.lang.String $r5;

        r0 := @this: com.opengamma.analytics.math.curve.Curve;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(int)>(64);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Curve{");

        i0 = virtualinvoke $r2.<java.lang.StringBuilder: int length()>();

        virtualinvoke r0.<com.opengamma.analytics.math.curve.Curve: void toString(java.lang.StringBuilder)>($r2);

        $i1 = virtualinvoke $r2.<java.lang.StringBuilder: int length()>();

        if $i1 <= i0 goto label1;

        $i2 = virtualinvoke $r2.<java.lang.StringBuilder: int length()>();

        $i3 = $i2 - 2;

        virtualinvoke $r2.<java.lang.StringBuilder: void setLength(int)>($i3);

     label1:
        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(125);

        $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r5;
    }

    protected void toString(java.lang.StringBuilder)
    {
        com.opengamma.analytics.math.curve.Curve r0;
        java.lang.StringBuilder r1, $r2, $r3, $r6, $r7;
        java.lang.String $r4, $r5;

        r0 := @this: com.opengamma.analytics.math.curve.Curve;

        r1 := @parameter0: java.lang.StringBuilder;

        $r2 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("name");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(61);

        $r4 = virtualinvoke r0.<com.opengamma.analytics.math.curve.Curve: java.lang.String getName()>();

        $r5 = staticinvoke <org.joda.beans.JodaBeanUtils: java.lang.String toString(java.lang.Object)>($r4);

        $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(44);

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

        return;
    }

    public volatile java.lang.Object clone() throws java.lang.CloneNotSupportedException
    {
        com.opengamma.analytics.math.curve.Curve r0, $r1;

        r0 := @this: com.opengamma.analytics.math.curve.Curve;

        $r1 = virtualinvoke r0.<com.opengamma.analytics.math.curve.Curve: com.opengamma.analytics.math.curve.Curve clone()>();

        return $r1;
    }

    public volatile org.joda.beans.MetaBean metaBean()
    {
        com.opengamma.analytics.math.curve.Curve r0;
        com.opengamma.analytics.math.curve.Curve$Meta $r1;
        org.joda.beans.MetaBean r2;

        r0 := @this: com.opengamma.analytics.math.curve.Curve;

        $r1 = virtualinvoke r0.<com.opengamma.analytics.math.curve.Curve: com.opengamma.analytics.math.curve.Curve$Meta metaBean()>();

        r2 = (org.joda.beans.MetaBean) $r1;

        return r2;
    }

    static void access$000(com.opengamma.analytics.math.curve.Curve, java.lang.String)
    {
        com.opengamma.analytics.math.curve.Curve r0;
        java.lang.String r1;

        r0 := @parameter0: com.opengamma.analytics.math.curve.Curve;

        r1 := @parameter1: java.lang.String;

        specialinvoke r0.<com.opengamma.analytics.math.curve.Curve: void setName(java.lang.String)>(r1);

        return;
    }

    static java.lang.String access$100(com.opengamma.analytics.math.curve.Curve)
    {
        com.opengamma.analytics.math.curve.Curve r0;
        java.lang.String $r1;

        r0 := @parameter0: com.opengamma.analytics.math.curve.Curve;

        $r1 = r0.<com.opengamma.analytics.math.curve.Curve: java.lang.String _name>;

        return $r1;
    }

    static void <clinit>()
    {
        com.opengamma.analytics.math.curve.Curve$Meta $r1;
        java.util.concurrent.atomic.AtomicLong r2;
        org.joda.beans.MetaBean r3;

        r2 = new java.util.concurrent.atomic.AtomicLong;

        specialinvoke r2.<java.util.concurrent.atomic.AtomicLong: void <init>()>();

        <com.opengamma.analytics.math.curve.Curve: java.util.concurrent.atomic.AtomicLong ATOMIC> = r2;

        $r1 = <com.opengamma.analytics.math.curve.Curve$Meta: com.opengamma.analytics.math.curve.Curve$Meta INSTANCE>;

        r3 = (org.joda.beans.MetaBean) $r1;

        staticinvoke <org.joda.beans.JodaBeanUtils: void registerMetaBean(org.joda.beans.MetaBean)>(r3);

        return;
    }
}
