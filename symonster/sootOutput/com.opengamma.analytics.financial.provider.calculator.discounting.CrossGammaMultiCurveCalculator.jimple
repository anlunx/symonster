public class com.opengamma.analytics.financial.provider.calculator.discounting.CrossGammaMultiCurveCalculator extends java.lang.Object
{
    private static final double BP1;
    private final com.opengamma.analytics.financial.provider.sensitivity.parameter.ParameterSensitivityParameterCalculator _psc;
    private final double _shift;

    public void <init>(double, com.opengamma.analytics.financial.interestrate.InstrumentDerivativeVisitor)
    {
        com.opengamma.analytics.financial.provider.calculator.discounting.CrossGammaMultiCurveCalculator r0;
        double d0, $d1;
        com.opengamma.analytics.financial.interestrate.InstrumentDerivativeVisitor r1;
        byte $b0;
        com.opengamma.analytics.financial.provider.sensitivity.parameter.ParameterSensitivityParameterCalculator $r3;
        boolean $z0;

        r0 := @this: com.opengamma.analytics.financial.provider.calculator.discounting.CrossGammaMultiCurveCalculator;

        d0 := @parameter0: double;

        r1 := @parameter1: com.opengamma.analytics.financial.interestrate.InstrumentDerivativeVisitor;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "sensitivity calculator");

        $d1 = staticinvoke <java.lang.Math: double abs(double)>(d0);

        $b0 = $d1 cmpl 1.0E-10;

        if $b0 <= 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z0, "shift should not be larger in absolute value than 1.0E-10");

        $r3 = new com.opengamma.analytics.financial.provider.sensitivity.parameter.ParameterSensitivityParameterCalculator;

        specialinvoke $r3.<com.opengamma.analytics.financial.provider.sensitivity.parameter.ParameterSensitivityParameterCalculator: void <init>(com.opengamma.analytics.financial.interestrate.InstrumentDerivativeVisitor)>(r1);

        r0.<com.opengamma.analytics.financial.provider.calculator.discounting.CrossGammaMultiCurveCalculator: com.opengamma.analytics.financial.provider.sensitivity.parameter.ParameterSensitivityParameterCalculator _psc> = $r3;

        r0.<com.opengamma.analytics.financial.provider.calculator.discounting.CrossGammaMultiCurveCalculator: double _shift> = d0;

        return;
    }

    public void <init>(com.opengamma.analytics.financial.interestrate.InstrumentDerivativeVisitor)
    {
        com.opengamma.analytics.financial.provider.calculator.discounting.CrossGammaMultiCurveCalculator r0;
        com.opengamma.analytics.financial.interestrate.InstrumentDerivativeVisitor r1;
        com.opengamma.analytics.financial.provider.sensitivity.parameter.ParameterSensitivityParameterCalculator $r3;

        r0 := @this: com.opengamma.analytics.financial.provider.calculator.discounting.CrossGammaMultiCurveCalculator;

        r1 := @parameter0: com.opengamma.analytics.financial.interestrate.InstrumentDerivativeVisitor;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "sensitivity calculator");

        $r3 = new com.opengamma.analytics.financial.provider.sensitivity.parameter.ParameterSensitivityParameterCalculator;

        specialinvoke $r3.<com.opengamma.analytics.financial.provider.sensitivity.parameter.ParameterSensitivityParameterCalculator: void <init>(com.opengamma.analytics.financial.interestrate.InstrumentDerivativeVisitor)>(r1);

        r0.<com.opengamma.analytics.financial.provider.calculator.discounting.CrossGammaMultiCurveCalculator: com.opengamma.analytics.financial.provider.sensitivity.parameter.ParameterSensitivityParameterCalculator _psc> = $r3;

        r0.<com.opengamma.analytics.financial.provider.calculator.discounting.CrossGammaMultiCurveCalculator: double _shift> = 1.0E-4;

        return;
    }

    public java.util.HashMap calculateCrossGammaIntraCurve(com.opengamma.analytics.financial.interestrate.InstrumentDerivative, com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount)
    {
        com.opengamma.analytics.financial.provider.calculator.discounting.CrossGammaMultiCurveCalculator r0;
        com.opengamma.analytics.financial.interestrate.InstrumentDerivative r1;
        com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount r2, r15;
        java.util.Set r3;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, i7, i8, i9, i10, $i11;
        java.lang.String[] r4, $r19;
        com.opengamma.util.money.Currency r5;
        com.opengamma.analytics.math.curve.InterpolatedDoublesCurve[] r6;
        double[][] r7, r8, r10, r13;
        int[] r9;
        com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyParameterSensitivity[] r12;
        double[] r14, $r26, $r31, $r36, $r37, $r39, $r41, $r42, r44;
        com.opengamma.analytics.math.matrix.DoubleMatrix1D r16;
        java.lang.Object[] $r20;
        com.opengamma.analytics.financial.provider.sensitivity.parameter.ParameterSensitivityParameterCalculator $r21, $r32;
        java.util.HashMap $r22;
        com.opengamma.analytics.math.matrix.DoubleMatrix2D $r23;
        java.lang.String $r24, $r29, $r34;
        java.lang.Object $r27;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7;
        com.opengamma.analytics.math.curve.InterpolatedDoublesCurve $r28, $r38, $r40;
        com.opengamma.analytics.math.interpolation.Interpolator1D $r30;
        com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyParameterSensitivity $r33, $r35, r43;

        r0 := @this: com.opengamma.analytics.financial.provider.calculator.discounting.CrossGammaMultiCurveCalculator;

        r1 := @parameter0: com.opengamma.analytics.financial.interestrate.InstrumentDerivative;

        r2 := @parameter1: com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "instrument");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, "multi-curve provider");

        r3 = virtualinvoke r2.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount: java.util.Set getAllNames()>();

        i0 = interfaceinvoke r3.<java.util.Set: int size()>();

        $r19 = newarray (java.lang.String)[i0];

        $r20 = interfaceinvoke r3.<java.util.Set: java.lang.Object[] toArray(java.lang.Object[])>($r19);

        r4 = (java.lang.String[]) $r20;

        r5 = specialinvoke r0.<com.opengamma.analytics.financial.provider.calculator.discounting.CrossGammaMultiCurveCalculator: com.opengamma.util.money.Currency checkUniqueCurrency(com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount)>(r2);

        r6 = specialinvoke r0.<com.opengamma.analytics.financial.provider.calculator.discounting.CrossGammaMultiCurveCalculator: com.opengamma.analytics.math.curve.InterpolatedDoublesCurve[] interpolatedCurves(com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount,int,java.lang.String[])>(r2, i0, r4);

        r7 = newarray (double[])[i0];

        r8 = newarray (double[])[i0];

        r9 = newarray (int)[i0];

        i7 = 0;

     label01:
        if i7 >= i0 goto label02;

        $r38 = r6[i7];

        $r39 = virtualinvoke $r38.<com.opengamma.analytics.math.curve.InterpolatedDoublesCurve: double[] getYDataAsPrimitive()>();

        r7[i7] = $r39;

        $r40 = r6[i7];

        $r41 = virtualinvoke $r40.<com.opengamma.analytics.math.curve.InterpolatedDoublesCurve: double[] getXDataAsPrimitive()>();

        r8[i7] = $r41;

        $r42 = r8[i7];

        $i6 = lengthof $r42;

        r9[i7] = $i6;

        i7 = i7 + 1;

        goto label01;

     label02:
        $r21 = r0.<com.opengamma.analytics.financial.provider.calculator.discounting.CrossGammaMultiCurveCalculator: com.opengamma.analytics.financial.provider.sensitivity.parameter.ParameterSensitivityParameterCalculator _psc>;

        r43 = virtualinvoke $r21.<com.opengamma.analytics.financial.provider.sensitivity.parameter.ParameterSensitivityParameterCalculator: com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyParameterSensitivity calculateSensitivity(com.opengamma.analytics.financial.interestrate.InstrumentDerivative,com.opengamma.analytics.financial.provider.description.interestrate.ParameterProviderInterface)>(r1, r2);

        r10 = specialinvoke r0.<com.opengamma.analytics.financial.provider.calculator.discounting.CrossGammaMultiCurveCalculator: double[][] sensitivitiesAsArrayOfMatrix(int,java.lang.String[],com.opengamma.util.money.Currency,int[],com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyParameterSensitivity)>(i0, r4, r5, r9, r43);

        $r22 = new java.util.HashMap;

        specialinvoke $r22.<java.util.HashMap: void <init>()>();

        i8 = 0;

     label03:
        if i8 >= i0 goto label10;

        $i1 = r9[i8];

        r12 = newarray (com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyParameterSensitivity)[$i1];

        $i3 = r9[i8];

        $i2 = r9[i8];

        r13 = newmultiarray (double)[$i3][$i2];

        i9 = 0;

     label04:
        $i4 = r9[i8];

        if i9 >= $i4 goto label09;

        $r26 = r7[i8];

        $r27 = virtualinvoke $r26.<java.lang.Object: java.lang.Object clone()>();

        r14 = (double[]) $r27;

        $d1 = r14[i9];

        $d0 = r0.<com.opengamma.analytics.financial.provider.calculator.discounting.CrossGammaMultiCurveCalculator: double _shift>;

        $d2 = $d1 + $d0;

        r14[i9] = $d2;

        $r29 = r4[i8];

        $r28 = r6[i8];

        $r30 = virtualinvoke $r28.<com.opengamma.analytics.math.curve.InterpolatedDoublesCurve: com.opengamma.analytics.math.interpolation.Interpolator1D getInterpolator()>();

        $r31 = r8[i8];

        r15 = specialinvoke r0.<com.opengamma.analytics.financial.provider.calculator.discounting.CrossGammaMultiCurveCalculator: com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount bumpedProvider(com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount,java.lang.String,com.opengamma.analytics.math.interpolation.Interpolator1D,double[],double[])>(r2, $r29, $r30, $r31, r14);

        $r32 = r0.<com.opengamma.analytics.financial.provider.calculator.discounting.CrossGammaMultiCurveCalculator: com.opengamma.analytics.financial.provider.sensitivity.parameter.ParameterSensitivityParameterCalculator _psc>;

        $r33 = virtualinvoke $r32.<com.opengamma.analytics.financial.provider.sensitivity.parameter.ParameterSensitivityParameterCalculator: com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyParameterSensitivity calculateSensitivity(com.opengamma.analytics.financial.interestrate.InstrumentDerivative,com.opengamma.analytics.financial.provider.description.interestrate.ParameterProviderInterface)>(r1, r15);

        r12[i9] = $r33;

        $r35 = r12[i9];

        $r34 = r4[i8];

        r16 = virtualinvoke $r35.<com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyParameterSensitivity: com.opengamma.analytics.math.matrix.DoubleMatrix1D getSensitivity(java.lang.String,com.opengamma.util.money.Currency)>($r34, r5);

        if r16 == null goto label05;

        r44 = virtualinvoke r16.<com.opengamma.analytics.math.matrix.DoubleMatrix1D: double[] getData()>();

        goto label06;

     label05:
        $i5 = r9[i8];

        r44 = newarray (double)[$i5];

     label06:
        i10 = 0;

     label07:
        $i11 = r9[i8];

        if i10 >= $i11 goto label08;

        $r37 = r13[i9];

        $d4 = r44[i10];

        $r36 = r10[i8];

        $d3 = $r36[i10];

        $d6 = $d4 - $d3;

        $d5 = r0.<com.opengamma.analytics.financial.provider.calculator.discounting.CrossGammaMultiCurveCalculator: double _shift>;

        $d7 = $d6 / $d5;

        $r37[i10] = $d7;

        i10 = i10 + 1;

        goto label07;

     label08:
        i9 = i9 + 1;

        goto label04;

     label09:
        $r23 = new com.opengamma.analytics.math.matrix.DoubleMatrix2D;

        specialinvoke $r23.<com.opengamma.analytics.math.matrix.DoubleMatrix2D: void <init>(double[][])>(r13);

        $r24 = r4[i8];

        virtualinvoke $r22.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r24, $r23);

        i8 = i8 + 1;

        goto label03;

     label10:
        return $r22;
    }

    public com.opengamma.analytics.math.matrix.DoubleMatrix2D calculateCrossGammaCrossCurve(com.opengamma.analytics.financial.interestrate.InstrumentDerivative, com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount)
    {
        com.opengamma.analytics.financial.provider.calculator.discounting.CrossGammaMultiCurveCalculator r0;
        com.opengamma.analytics.financial.interestrate.InstrumentDerivative r1;
        com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount r2, r14;
        java.util.Set r3;
        int i0, $i1, $i2, $i3, $i4, $i5, i6, i7, i8, i9, i10, i11, i12, i13, $i14;
        java.lang.String[] r4, $r18;
        com.opengamma.util.money.Currency r5;
        com.opengamma.analytics.math.curve.InterpolatedDoublesCurve[] r6;
        double[][] r7, r8, r10, r11;
        int[] r9;
        com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyParameterSensitivity[] r12;
        double[] r13, $r22, $r27, $r32, $r33, $r35, $r37, $r38, r40;
        com.opengamma.analytics.math.matrix.DoubleMatrix1D r15;
        java.lang.Object[] $r19;
        com.opengamma.analytics.financial.provider.sensitivity.parameter.ParameterSensitivityParameterCalculator $r20, $r28;
        com.opengamma.analytics.math.matrix.DoubleMatrix2D $r21;
        java.lang.Object $r23;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7;
        com.opengamma.analytics.math.curve.InterpolatedDoublesCurve $r24, $r34, $r36;
        java.lang.String $r25, $r30;
        com.opengamma.analytics.math.interpolation.Interpolator1D $r26;
        com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyParameterSensitivity $r29, $r31, r39;

        r0 := @this: com.opengamma.analytics.financial.provider.calculator.discounting.CrossGammaMultiCurveCalculator;

        r1 := @parameter0: com.opengamma.analytics.financial.interestrate.InstrumentDerivative;

        r2 := @parameter1: com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "instrument");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, "multi-curve provider");

        r3 = virtualinvoke r2.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount: java.util.Set getAllNames()>();

        i0 = interfaceinvoke r3.<java.util.Set: int size()>();

        $r18 = newarray (java.lang.String)[i0];

        $r19 = interfaceinvoke r3.<java.util.Set: java.lang.Object[] toArray(java.lang.Object[])>($r18);

        r4 = (java.lang.String[]) $r19;

        r5 = specialinvoke r0.<com.opengamma.analytics.financial.provider.calculator.discounting.CrossGammaMultiCurveCalculator: com.opengamma.util.money.Currency checkUniqueCurrency(com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount)>(r2);

        r6 = specialinvoke r0.<com.opengamma.analytics.financial.provider.calculator.discounting.CrossGammaMultiCurveCalculator: com.opengamma.analytics.math.curve.InterpolatedDoublesCurve[] interpolatedCurves(com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount,int,java.lang.String[])>(r2, i0, r4);

        r7 = newarray (double[])[i0];

        r8 = newarray (double[])[i0];

        r9 = newarray (int)[i0];

        i6 = 0;

        i7 = 0;

     label01:
        if i7 >= i0 goto label02;

        $r34 = r6[i7];

        $r35 = virtualinvoke $r34.<com.opengamma.analytics.math.curve.InterpolatedDoublesCurve: double[] getYDataAsPrimitive()>();

        r7[i7] = $r35;

        $r36 = r6[i7];

        $r37 = virtualinvoke $r36.<com.opengamma.analytics.math.curve.InterpolatedDoublesCurve: double[] getXDataAsPrimitive()>();

        r8[i7] = $r37;

        $r38 = r8[i7];

        $i4 = lengthof $r38;

        r9[i7] = $i4;

        $i5 = r9[i7];

        i6 = i6 + $i5;

        i7 = i7 + 1;

        goto label01;

     label02:
        $r20 = r0.<com.opengamma.analytics.financial.provider.calculator.discounting.CrossGammaMultiCurveCalculator: com.opengamma.analytics.financial.provider.sensitivity.parameter.ParameterSensitivityParameterCalculator _psc>;

        r39 = virtualinvoke $r20.<com.opengamma.analytics.financial.provider.sensitivity.parameter.ParameterSensitivityParameterCalculator: com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyParameterSensitivity calculateSensitivity(com.opengamma.analytics.financial.interestrate.InstrumentDerivative,com.opengamma.analytics.financial.provider.description.interestrate.ParameterProviderInterface)>(r1, r2);

        r10 = specialinvoke r0.<com.opengamma.analytics.financial.provider.calculator.discounting.CrossGammaMultiCurveCalculator: double[][] sensitivitiesAsArrayOfMatrix(int,java.lang.String[],com.opengamma.util.money.Currency,int[],com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyParameterSensitivity)>(i0, r4, r5, r9, r39);

        r11 = newmultiarray (double)[i6][i6];

        i8 = 0;

        i9 = 0;

     label03:
        if i9 >= i0 goto label11;

        $i1 = r9[i9];

        r12 = newarray (com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyParameterSensitivity)[$i1];

        i10 = 0;

     label04:
        $i2 = r9[i9];

        if i10 >= $i2 goto label10;

        $r22 = r7[i9];

        $r23 = virtualinvoke $r22.<java.lang.Object: java.lang.Object clone()>();

        r13 = (double[]) $r23;

        $d1 = r13[i10];

        $d0 = r0.<com.opengamma.analytics.financial.provider.calculator.discounting.CrossGammaMultiCurveCalculator: double _shift>;

        $d2 = $d1 + $d0;

        r13[i10] = $d2;

        $r25 = r4[i9];

        $r24 = r6[i9];

        $r26 = virtualinvoke $r24.<com.opengamma.analytics.math.curve.InterpolatedDoublesCurve: com.opengamma.analytics.math.interpolation.Interpolator1D getInterpolator()>();

        $r27 = r8[i9];

        r14 = specialinvoke r0.<com.opengamma.analytics.financial.provider.calculator.discounting.CrossGammaMultiCurveCalculator: com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount bumpedProvider(com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount,java.lang.String,com.opengamma.analytics.math.interpolation.Interpolator1D,double[],double[])>(r2, $r25, $r26, $r27, r13);

        $r28 = r0.<com.opengamma.analytics.financial.provider.calculator.discounting.CrossGammaMultiCurveCalculator: com.opengamma.analytics.financial.provider.sensitivity.parameter.ParameterSensitivityParameterCalculator _psc>;

        $r29 = virtualinvoke $r28.<com.opengamma.analytics.financial.provider.sensitivity.parameter.ParameterSensitivityParameterCalculator: com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyParameterSensitivity calculateSensitivity(com.opengamma.analytics.financial.interestrate.InstrumentDerivative,com.opengamma.analytics.financial.provider.description.interestrate.ParameterProviderInterface)>(r1, r14);

        r12[i10] = $r29;

        i11 = 0;

        i12 = 0;

     label05:
        if i12 >= i0 goto label09;

        $r31 = r12[i10];

        $r30 = r4[i12];

        r15 = virtualinvoke $r31.<com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyParameterSensitivity: com.opengamma.analytics.math.matrix.DoubleMatrix1D getSensitivity(java.lang.String,com.opengamma.util.money.Currency)>($r30, r5);

        $i3 = r9[i12];

        r40 = newarray (double)[$i3];

        if r15 == null goto label06;

        r40 = virtualinvoke r15.<com.opengamma.analytics.math.matrix.DoubleMatrix1D: double[] getData()>();

     label06:
        i13 = 0;

     label07:
        $i14 = r9[i12];

        if i13 >= $i14 goto label08;

        $r33 = r11[i8];

        $d4 = r40[i13];

        $r32 = r10[i12];

        $d3 = $r32[i13];

        $d6 = $d4 - $d3;

        $d5 = r0.<com.opengamma.analytics.financial.provider.calculator.discounting.CrossGammaMultiCurveCalculator: double _shift>;

        $d7 = $d6 / $d5;

        $r33[i11] = $d7;

        i11 = i11 + 1;

        i13 = i13 + 1;

        goto label07;

     label08:
        i12 = i12 + 1;

        goto label05;

     label09:
        i8 = i8 + 1;

        i10 = i10 + 1;

        goto label04;

     label10:
        i9 = i9 + 1;

        goto label03;

     label11:
        $r21 = new com.opengamma.analytics.math.matrix.DoubleMatrix2D;

        specialinvoke $r21.<com.opengamma.analytics.math.matrix.DoubleMatrix2D: void <init>(double[][])>(r11);

        return $r21;
    }

    private double[][] sensitivitiesAsArrayOfMatrix(int, java.lang.String[], com.opengamma.util.money.Currency, int[], com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyParameterSensitivity)
    {
        com.opengamma.analytics.financial.provider.calculator.discounting.CrossGammaMultiCurveCalculator r0;
        int i0, $i1, i2;
        java.lang.String[] r1;
        com.opengamma.util.money.Currency r2;
        int[] r3;
        com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyParameterSensitivity r4;
        com.opengamma.analytics.math.matrix.DoubleMatrix1D[] r5;
        double[][] r6;
        java.lang.String $r7;
        com.opengamma.analytics.math.matrix.DoubleMatrix1D $r8, $r9, $r10;
        double[] $r11, $r12;

        r0 := @this: com.opengamma.analytics.financial.provider.calculator.discounting.CrossGammaMultiCurveCalculator;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String[];

        r2 := @parameter2: com.opengamma.util.money.Currency;

        r3 := @parameter3: int[];

        r4 := @parameter4: com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyParameterSensitivity;

        r5 = newarray (com.opengamma.analytics.math.matrix.DoubleMatrix1D)[i0];

        r6 = newarray (double[])[i0];

        i2 = 0;

     label1:
        if i2 >= i0 goto label4;

        $r7 = r1[i2];

        $r8 = virtualinvoke r4.<com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyParameterSensitivity: com.opengamma.analytics.math.matrix.DoubleMatrix1D getSensitivity(java.lang.String,com.opengamma.util.money.Currency)>($r7, r2);

        r5[i2] = $r8;

        $r9 = r5[i2];

        if $r9 != null goto label2;

        $i1 = r3[i2];

        $r12 = newarray (double)[$i1];

        r6[i2] = $r12;

        goto label3;

     label2:
        $r10 = r5[i2];

        $r11 = virtualinvoke $r10.<com.opengamma.analytics.math.matrix.DoubleMatrix1D: double[] getData()>();

        r6[i2] = $r11;

     label3:
        i2 = i2 + 1;

        goto label1;

     label4:
        return r6;
    }

    private com.opengamma.util.money.Currency checkUniqueCurrency(com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount)
    {
        com.opengamma.analytics.financial.provider.calculator.discounting.CrossGammaMultiCurveCalculator r0;
        com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount r1;
        java.util.Set r2, r4, r14;
        com.opengamma.util.money.Currency r3, $r9, $r11;
        com.opengamma.analytics.financial.instrument.index.IndexON r5;
        int $i0;
        java.util.Iterator $r6, r12, r15;
        java.lang.Object $r7, $r8, $r10;
        boolean $z0, $z1, $z2, $z3, $z4;
        com.opengamma.analytics.financial.instrument.index.IborIndex r13;

        r0 := @this: com.opengamma.analytics.financial.provider.calculator.discounting.CrossGammaMultiCurveCalculator;

        r1 := @parameter0: com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount;

        r2 = virtualinvoke r1.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount: java.util.Set getCurrencies()>();

        $i0 = interfaceinvoke r2.<java.util.Set: int size()>();

        if $i0 != 1 goto label1;

        $z3 = 1;

        goto label2;

     label1:
        $z3 = 0;

     label2:
        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z3, "only one currency allowed for multi-curve gamma");

        $r6 = interfaceinvoke r2.<java.util.Set: java.util.Iterator iterator()>();

        $r7 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        r3 = (com.opengamma.util.money.Currency) $r7;

        r4 = virtualinvoke r1.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount: java.util.Set getIndexesIbor()>();

        r12 = interfaceinvoke r4.<java.util.Set: java.util.Iterator iterator()>();

     label3:
        $z4 = interfaceinvoke r12.<java.util.Iterator: boolean hasNext()>();

        if $z4 == 0 goto label4;

        $r10 = interfaceinvoke r12.<java.util.Iterator: java.lang.Object next()>();

        r13 = (com.opengamma.analytics.financial.instrument.index.IborIndex) $r10;

        $r11 = virtualinvoke r13.<com.opengamma.analytics.financial.instrument.index.IborIndex: com.opengamma.util.money.Currency getCurrency()>();

        $z2 = virtualinvoke $r11.<com.opengamma.util.money.Currency: boolean equals(java.lang.Object)>(r3);

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z2, "Ibor index should be in the same currency as discounting curve");

        goto label3;

     label4:
        r14 = virtualinvoke r1.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount: java.util.Set getIndexesON()>();

        r15 = interfaceinvoke r14.<java.util.Set: java.util.Iterator iterator()>();

     label5:
        $z0 = interfaceinvoke r15.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label6;

        $r8 = interfaceinvoke r15.<java.util.Iterator: java.lang.Object next()>();

        r5 = (com.opengamma.analytics.financial.instrument.index.IndexON) $r8;

        $r9 = virtualinvoke r5.<com.opengamma.analytics.financial.instrument.index.IndexON: com.opengamma.util.money.Currency getCurrency()>();

        $z1 = virtualinvoke $r9.<com.opengamma.util.money.Currency: boolean equals(java.lang.Object)>(r3);

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z1, "Overnight index should be in the same currency as discounting curve");

        goto label5;

     label6:
        return r3;
    }

    private com.opengamma.analytics.math.curve.InterpolatedDoublesCurve[] interpolatedCurves(com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount, int, java.lang.String[])
    {
        com.opengamma.analytics.financial.provider.calculator.discounting.CrossGammaMultiCurveCalculator r0;
        com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount r1;
        int i0, i1;
        java.lang.String[] r2;
        com.opengamma.analytics.math.curve.InterpolatedDoublesCurve[] r3;
        com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve r4;
        com.opengamma.analytics.financial.model.interestrate.curve.YieldCurve r5;
        java.lang.String $r6;
        boolean $z0, $z1;
        com.opengamma.analytics.math.curve.DoublesCurve $r7, $r8;
        com.opengamma.analytics.math.curve.InterpolatedDoublesCurve $r9;

        r0 := @this: com.opengamma.analytics.financial.provider.calculator.discounting.CrossGammaMultiCurveCalculator;

        r1 := @parameter0: com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.String[];

        r3 = newarray (com.opengamma.analytics.math.curve.InterpolatedDoublesCurve)[i0];

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        $r6 = r2[i1];

        r4 = virtualinvoke r1.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount: com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve getCurve(java.lang.String)>($r6);

        $z0 = r4 instanceof com.opengamma.analytics.financial.model.interestrate.curve.YieldCurve;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z0, "curve should be YieldCurve");

        r5 = (com.opengamma.analytics.financial.model.interestrate.curve.YieldCurve) r4;

        $r7 = virtualinvoke r5.<com.opengamma.analytics.financial.model.interestrate.curve.YieldCurve: com.opengamma.analytics.math.curve.DoublesCurve getCurve()>();

        $z1 = $r7 instanceof com.opengamma.analytics.math.curve.InterpolatedDoublesCurve;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z1, "Yield curve should be based on InterpolatedDoublesCurve");

        $r8 = virtualinvoke r5.<com.opengamma.analytics.financial.model.interestrate.curve.YieldCurve: com.opengamma.analytics.math.curve.DoublesCurve getCurve()>();

        $r9 = (com.opengamma.analytics.math.curve.InterpolatedDoublesCurve) $r8;

        r3[i1] = $r9;

        i1 = i1 + 1;

        goto label1;

     label2:
        return r3;
    }

    private com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount bumpedProvider(com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount, java.lang.String, com.opengamma.analytics.math.interpolation.Interpolator1D, double[], double[])
    {
        com.opengamma.analytics.financial.provider.calculator.discounting.CrossGammaMultiCurveCalculator r0;
        com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount r1, $r13;
        java.lang.String r2;
        com.opengamma.analytics.math.interpolation.Interpolator1D r3;
        double[] r4, r5;
        java.util.List r6, r7, r8;
        com.opengamma.analytics.financial.model.interestrate.curve.YieldCurve $r11;
        com.opengamma.analytics.math.curve.InterpolatedDoublesCurve $r12;
        com.opengamma.analytics.financial.forex.method.FXMatrix $r14;
        java.util.Set $r15, $r16, $r17;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        java.lang.Object $r18, $r20, $r22;
        com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve $r19, $r21, $r23;
        java.util.Iterator r24, r26, r28;
        com.opengamma.util.money.Currency r25;
        com.opengamma.analytics.financial.instrument.index.IborIndex r27;
        com.opengamma.analytics.financial.instrument.index.IndexON r29;

        r0 := @this: com.opengamma.analytics.financial.provider.calculator.discounting.CrossGammaMultiCurveCalculator;

        r1 := @parameter0: com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: com.opengamma.analytics.math.interpolation.Interpolator1D;

        r4 := @parameter3: double[];

        r5 := @parameter4: double[];

        r6 = virtualinvoke r1.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount: java.util.List getCurrencyForName(java.lang.String)>(r2);

        r7 = virtualinvoke r1.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount: java.util.List getIborIndexForName(java.lang.String)>(r2);

        r8 = virtualinvoke r1.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount: java.util.List getOvernightIndexForName(java.lang.String)>(r2);

        $r11 = new com.opengamma.analytics.financial.model.interestrate.curve.YieldCurve;

        $r12 = new com.opengamma.analytics.math.curve.InterpolatedDoublesCurve;

        specialinvoke $r12.<com.opengamma.analytics.math.curve.InterpolatedDoublesCurve: void <init>(double[],double[],com.opengamma.analytics.math.interpolation.Interpolator1D,boolean)>(r4, r5, r3, 1);

        specialinvoke $r11.<com.opengamma.analytics.financial.model.interestrate.curve.YieldCurve: void <init>(java.lang.String,com.opengamma.analytics.math.curve.DoublesCurve)>(r2, $r12);

        $r13 = new com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount;

        specialinvoke $r13.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount: void <init>()>();

        $r14 = virtualinvoke r1.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount: com.opengamma.analytics.financial.forex.method.FXMatrix getFxRates()>();

        virtualinvoke $r13.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount: void setForexMatrix(com.opengamma.analytics.financial.forex.method.FXMatrix)>($r14);

        $r15 = virtualinvoke r1.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount: java.util.Set getCurrencies()>();

        r24 = interfaceinvoke $r15.<java.util.Set: java.util.Iterator iterator()>();

     label01:
        $z0 = interfaceinvoke r24.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label04;

        $r22 = interfaceinvoke r24.<java.util.Iterator: java.lang.Object next()>();

        r25 = (com.opengamma.util.money.Currency) $r22;

        $z5 = interfaceinvoke r6.<java.util.List: boolean contains(java.lang.Object)>(r25);

        if $z5 == 0 goto label02;

        virtualinvoke $r13.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount: void setCurve(com.opengamma.util.money.Currency,com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve)>(r25, $r11);

        goto label03;

     label02:
        $r23 = virtualinvoke r1.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount: com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve getCurve(com.opengamma.util.money.Currency)>(r25);

        virtualinvoke $r13.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount: void setCurve(com.opengamma.util.money.Currency,com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve)>(r25, $r23);

     label03:
        goto label01;

     label04:
        $r16 = virtualinvoke r1.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount: java.util.Set getIndexesIbor()>();

        r26 = interfaceinvoke $r16.<java.util.Set: java.util.Iterator iterator()>();

     label05:
        $z1 = interfaceinvoke r26.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label08;

        $r20 = interfaceinvoke r26.<java.util.Iterator: java.lang.Object next()>();

        r27 = (com.opengamma.analytics.financial.instrument.index.IborIndex) $r20;

        $z4 = interfaceinvoke r7.<java.util.List: boolean contains(java.lang.Object)>(r27);

        if $z4 == 0 goto label06;

        virtualinvoke $r13.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount: void setCurve(com.opengamma.analytics.financial.instrument.index.IborIndex,com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve)>(r27, $r11);

        goto label07;

     label06:
        $r21 = virtualinvoke r1.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount: com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve getCurve(com.opengamma.analytics.financial.instrument.index.IborIndex)>(r27);

        virtualinvoke $r13.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount: void setCurve(com.opengamma.analytics.financial.instrument.index.IborIndex,com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve)>(r27, $r21);

     label07:
        goto label05;

     label08:
        $r17 = virtualinvoke r1.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount: java.util.Set getIndexesON()>();

        r28 = interfaceinvoke $r17.<java.util.Set: java.util.Iterator iterator()>();

     label09:
        $z2 = interfaceinvoke r28.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label12;

        $r18 = interfaceinvoke r28.<java.util.Iterator: java.lang.Object next()>();

        r29 = (com.opengamma.analytics.financial.instrument.index.IndexON) $r18;

        $z3 = interfaceinvoke r8.<java.util.List: boolean contains(java.lang.Object)>(r29);

        if $z3 == 0 goto label10;

        virtualinvoke $r13.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount: void setCurve(com.opengamma.analytics.financial.instrument.index.IndexON,com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve)>(r29, $r11);

        goto label11;

     label10:
        $r19 = virtualinvoke r1.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount: com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve getCurve(com.opengamma.analytics.financial.instrument.index.IndexON)>(r29);

        virtualinvoke $r13.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount: void setCurve(com.opengamma.analytics.financial.instrument.index.IndexON,com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve)>(r29, $r19);

     label11:
        goto label09;

     label12:
        return $r13;
    }

    public static void <clinit>()
    {
        <com.opengamma.analytics.financial.provider.calculator.discounting.CrossGammaMultiCurveCalculator: double BP1> = 1.0E-4;

        return;
    }
}
