class com.opengamma.analytics.financial.model.volatility.smile.function.HestonVolatilityFunction$2 extends com.opengamma.analytics.math.function.Function1D
{
    final double val$forward;
    final double val$timeToExpiry;
    final double val$lowestStrike;
    final double val$highestStrike;
    final int val$n;
    final double[] val$strikes;
    final com.opengamma.analytics.financial.model.volatility.smile.function.HestonVolatilityFunction this$0;

    void <init>(com.opengamma.analytics.financial.model.volatility.smile.function.HestonVolatilityFunction, double, double, double, double, int, double[])
    {
        com.opengamma.analytics.financial.model.volatility.smile.function.HestonVolatilityFunction$2 r0;
        com.opengamma.analytics.financial.model.volatility.smile.function.HestonVolatilityFunction r1;
        double d0, d1, d2, d3;
        int i0;
        double[] r2;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.smile.function.HestonVolatilityFunction$2;

        r1 := @parameter0: com.opengamma.analytics.financial.model.volatility.smile.function.HestonVolatilityFunction;

        d0 := @parameter1: double;

        d1 := @parameter2: double;

        d2 := @parameter3: double;

        d3 := @parameter4: double;

        i0 := @parameter5: int;

        r2 := @parameter6: double[];

        r0.<com.opengamma.analytics.financial.model.volatility.smile.function.HestonVolatilityFunction$2: com.opengamma.analytics.financial.model.volatility.smile.function.HestonVolatilityFunction this$0> = r1;

        r0.<com.opengamma.analytics.financial.model.volatility.smile.function.HestonVolatilityFunction$2: double val$forward> = d0;

        r0.<com.opengamma.analytics.financial.model.volatility.smile.function.HestonVolatilityFunction$2: double val$timeToExpiry> = d1;

        r0.<com.opengamma.analytics.financial.model.volatility.smile.function.HestonVolatilityFunction$2: double val$lowestStrike> = d2;

        r0.<com.opengamma.analytics.financial.model.volatility.smile.function.HestonVolatilityFunction$2: double val$highestStrike> = d3;

        r0.<com.opengamma.analytics.financial.model.volatility.smile.function.HestonVolatilityFunction$2: int val$n> = i0;

        r0.<com.opengamma.analytics.financial.model.volatility.smile.function.HestonVolatilityFunction$2: double[] val$strikes> = r2;

        specialinvoke r0.<com.opengamma.analytics.math.function.Function1D: void <init>()>();

        return;
    }

    public double[] evaluate(com.opengamma.analytics.financial.model.volatility.smile.function.HestonModelData)
    {
        com.opengamma.analytics.financial.model.volatility.smile.function.HestonVolatilityFunction$2 r0;
        com.opengamma.analytics.financial.model.volatility.smile.function.HestonModelData r1;
        double[][] r3;
        int i0, $i1, $i2, $i3, i5, i6, i7, i8, $i9;
        double[] r4, r5, $r16, $r19, $r20, r22, r23, r24, r25, r26;
        double d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, d12, d13;
        com.opengamma.analytics.financial.model.option.pricing.fourier.HestonCharacteristicExponent $r7;
        com.opengamma.analytics.financial.model.option.pricing.fourier.FFTPricer $r8;
        com.opengamma.analytics.financial.model.volatility.smile.function.HestonVolatilityFunction $r9, $r10, $r11, $r12, $r14;
        com.opengamma.analytics.math.interpolation.Interpolator1D $r13, $r15;
        java.lang.Double $r17, $r18;
        byte $b4;
        java.lang.IllegalArgumentException $r21;
        com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle r27;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.smile.function.HestonVolatilityFunction$2;

        r1 := @parameter0: com.opengamma.analytics.financial.model.volatility.smile.function.HestonModelData;

        $r7 = new com.opengamma.analytics.financial.model.option.pricing.fourier.HestonCharacteristicExponent;

        specialinvoke $r7.<com.opengamma.analytics.financial.model.option.pricing.fourier.HestonCharacteristicExponent: void <init>(com.opengamma.analytics.financial.model.volatility.smile.function.HestonModelData)>(r1);

        $r8 = staticinvoke <com.opengamma.analytics.financial.model.volatility.smile.function.HestonVolatilityFunction: com.opengamma.analytics.financial.model.option.pricing.fourier.FFTPricer access$300()>();

        $d1 = r0.<com.opengamma.analytics.financial.model.volatility.smile.function.HestonVolatilityFunction$2: double val$forward>;

        $d2 = r0.<com.opengamma.analytics.financial.model.volatility.smile.function.HestonVolatilityFunction$2: double val$timeToExpiry>;

        $d3 = r0.<com.opengamma.analytics.financial.model.volatility.smile.function.HestonVolatilityFunction$2: double val$lowestStrike>;

        $d4 = r0.<com.opengamma.analytics.financial.model.volatility.smile.function.HestonVolatilityFunction$2: double val$highestStrike>;

        $i1 = r0.<com.opengamma.analytics.financial.model.volatility.smile.function.HestonVolatilityFunction$2: int val$n>;

        $r9 = r0.<com.opengamma.analytics.financial.model.volatility.smile.function.HestonVolatilityFunction$2: com.opengamma.analytics.financial.model.volatility.smile.function.HestonVolatilityFunction this$0>;

        $d5 = staticinvoke <com.opengamma.analytics.financial.model.volatility.smile.function.HestonVolatilityFunction: double access$000(com.opengamma.analytics.financial.model.volatility.smile.function.HestonVolatilityFunction)>($r9);

        $r10 = r0.<com.opengamma.analytics.financial.model.volatility.smile.function.HestonVolatilityFunction$2: com.opengamma.analytics.financial.model.volatility.smile.function.HestonVolatilityFunction this$0>;

        $d6 = staticinvoke <com.opengamma.analytics.financial.model.volatility.smile.function.HestonVolatilityFunction: double access$100(com.opengamma.analytics.financial.model.volatility.smile.function.HestonVolatilityFunction)>($r10);

        $r11 = r0.<com.opengamma.analytics.financial.model.volatility.smile.function.HestonVolatilityFunction$2: com.opengamma.analytics.financial.model.volatility.smile.function.HestonVolatilityFunction this$0>;

        $d7 = staticinvoke <com.opengamma.analytics.financial.model.volatility.smile.function.HestonVolatilityFunction: double access$200(com.opengamma.analytics.financial.model.volatility.smile.function.HestonVolatilityFunction)>($r11);

        r3 = virtualinvoke $r8.<com.opengamma.analytics.financial.model.option.pricing.fourier.FFTPricer: double[][] price(double,double,double,boolean,com.opengamma.analytics.financial.model.option.pricing.fourier.MartingaleCharacteristicExponent,double,double,int,double,double,double)>($d1, 1.0, $d2, 1, $r7, $d3, $d4, $i1, $d5, $d6, $d7);

        i0 = lengthof r3;

        r4 = newarray (double)[i0];

        r5 = newarray (double)[i0];

        i5 = 0;

        i6 = 0;

     label01:
        if i6 >= i0 goto label06;

        $r19 = r3[i6];

        d12 = $r19[0];

        $r20 = r3[i6];

        d13 = $r20[1];

        $b4 = d13 cmpl 0.0;

        if $b4 <= 0 goto label05;

     label02:
        $d11 = r0.<com.opengamma.analytics.financial.model.volatility.smile.function.HestonVolatilityFunction$2: double val$forward>;

        $d10 = r0.<com.opengamma.analytics.financial.model.volatility.smile.function.HestonVolatilityFunction$2: double val$timeToExpiry>;

        d0 = staticinvoke <com.opengamma.analytics.financial.model.volatility.BlackFormulaRepository: double impliedVolatility(double,double,double,double,boolean)>(d13, $d11, d12, $d10, 1);

        r4[i5] = d12;

        r5[i5] = d0;

        i5 = i5 + 1;

     label03:
        goto label05;

     label04:
        $r21 := @caughtexception;

     label05:
        i6 = i6 + 1;

        goto label01;

     label06:
        $i2 = r0.<com.opengamma.analytics.financial.model.volatility.smile.function.HestonVolatilityFunction$2: int val$n>;

        r22 = newarray (double)[$i2];

        if i5 != 0 goto label09;

        i7 = 0;

     label07:
        $i3 = r0.<com.opengamma.analytics.financial.model.volatility.smile.function.HestonVolatilityFunction$2: int val$n>;

        if i7 >= $i3 goto label08;

        r22[i7] = 0.0;

        i7 = i7 + 1;

        goto label07;

     label08:
        goto label13;

     label09:
        r23 = newarray (double)[i5];

        r24 = newarray (double)[i5];

        if i5 != i0 goto label10;

        r25 = r4;

        r26 = r5;

        goto label11;

     label10:
        r25 = staticinvoke <java.util.Arrays: double[] copyOfRange(double[],int,int)>(r4, 0, i5);

        r26 = staticinvoke <java.util.Arrays: double[] copyOfRange(double[],int,int)>(r5, 0, i5);

     label11:
        $r12 = r0.<com.opengamma.analytics.financial.model.volatility.smile.function.HestonVolatilityFunction$2: com.opengamma.analytics.financial.model.volatility.smile.function.HestonVolatilityFunction this$0>;

        $r13 = staticinvoke <com.opengamma.analytics.financial.model.volatility.smile.function.HestonVolatilityFunction: com.opengamma.analytics.math.interpolation.Interpolator1D access$400(com.opengamma.analytics.financial.model.volatility.smile.function.HestonVolatilityFunction)>($r12);

        r27 = virtualinvoke $r13.<com.opengamma.analytics.math.interpolation.Interpolator1D: com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle getDataBundleFromSortedArrays(double[],double[])>(r25, r26);

        i8 = 0;

     label12:
        $i9 = r0.<com.opengamma.analytics.financial.model.volatility.smile.function.HestonVolatilityFunction$2: int val$n>;

        if i8 >= $i9 goto label13;

        $r14 = r0.<com.opengamma.analytics.financial.model.volatility.smile.function.HestonVolatilityFunction$2: com.opengamma.analytics.financial.model.volatility.smile.function.HestonVolatilityFunction this$0>;

        $r15 = staticinvoke <com.opengamma.analytics.financial.model.volatility.smile.function.HestonVolatilityFunction: com.opengamma.analytics.math.interpolation.Interpolator1D access$400(com.opengamma.analytics.financial.model.volatility.smile.function.HestonVolatilityFunction)>($r14);

        $r16 = r0.<com.opengamma.analytics.financial.model.volatility.smile.function.HestonVolatilityFunction$2: double[] val$strikes>;

        $d8 = $r16[i8];

        $r17 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d8);

        $r18 = virtualinvoke $r15.<com.opengamma.analytics.math.interpolation.Interpolator1D: java.lang.Double interpolate(com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle,java.lang.Double)>(r27, $r17);

        $d9 = virtualinvoke $r18.<java.lang.Double: double doubleValue()>();

        r22[i8] = $d9;

        i8 = i8 + 1;

        goto label12;

     label13:
        return r22;

        catch java.lang.IllegalArgumentException from label02 to label03 with label04;
    }

    public volatile java.lang.Object evaluate(java.lang.Object)
    {
        com.opengamma.analytics.financial.model.volatility.smile.function.HestonVolatilityFunction$2 r0;
        java.lang.Object r1;
        com.opengamma.analytics.financial.model.volatility.smile.function.HestonModelData $r2;
        double[] $r3;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.smile.function.HestonVolatilityFunction$2;

        r1 := @parameter0: java.lang.Object;

        $r2 = (com.opengamma.analytics.financial.model.volatility.smile.function.HestonModelData) r1;

        $r3 = virtualinvoke r0.<com.opengamma.analytics.financial.model.volatility.smile.function.HestonVolatilityFunction$2: double[] evaluate(com.opengamma.analytics.financial.model.volatility.smile.function.HestonModelData)>($r2);

        return $r3;
    }
}
