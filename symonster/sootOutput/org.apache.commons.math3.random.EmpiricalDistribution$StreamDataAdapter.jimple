class org.apache.commons.math3.random.EmpiricalDistribution$StreamDataAdapter extends org.apache.commons.math3.random.EmpiricalDistribution$DataAdapter
{
    private java.io.BufferedReader inputStream;
    final org.apache.commons.math3.random.EmpiricalDistribution this$0;

    public void <init>(org.apache.commons.math3.random.EmpiricalDistribution, java.io.BufferedReader)
    {
        org.apache.commons.math3.random.EmpiricalDistribution$StreamDataAdapter r0;
        org.apache.commons.math3.random.EmpiricalDistribution r1;
        java.io.BufferedReader r2;

        r0 := @this: org.apache.commons.math3.random.EmpiricalDistribution$StreamDataAdapter;

        r1 := @parameter0: org.apache.commons.math3.random.EmpiricalDistribution;

        r2 := @parameter1: java.io.BufferedReader;

        r0.<org.apache.commons.math3.random.EmpiricalDistribution$StreamDataAdapter: org.apache.commons.math3.random.EmpiricalDistribution this$0> = r1;

        specialinvoke r0.<org.apache.commons.math3.random.EmpiricalDistribution$DataAdapter: void <init>(org.apache.commons.math3.random.EmpiricalDistribution,org.apache.commons.math3.random.EmpiricalDistribution$1)>(r1, null);

        r0.<org.apache.commons.math3.random.EmpiricalDistribution$StreamDataAdapter: java.io.BufferedReader inputStream> = r2;

        return;
    }

    public void computeBinStats() throws java.io.IOException
    {
        org.apache.commons.math3.random.EmpiricalDistribution$StreamDataAdapter r0;
        org.apache.commons.math3.stat.descriptive.SummaryStatistics r1;
        java.io.BufferedReader $r2, $r4;
        java.lang.String $r3;
        org.apache.commons.math3.random.EmpiricalDistribution $r5, $r7;
        java.util.List $r6;
        int $i0;
        java.lang.Object $r8;
        double d0;

        r0 := @this: org.apache.commons.math3.random.EmpiricalDistribution$StreamDataAdapter;

     label1:
        $r2 = r0.<org.apache.commons.math3.random.EmpiricalDistribution$StreamDataAdapter: java.io.BufferedReader inputStream>;

        $r3 = virtualinvoke $r2.<java.io.BufferedReader: java.lang.String readLine()>();

        if $r3 == null goto label2;

        d0 = staticinvoke <java.lang.Double: double parseDouble(java.lang.String)>($r3);

        $r5 = r0.<org.apache.commons.math3.random.EmpiricalDistribution$StreamDataAdapter: org.apache.commons.math3.random.EmpiricalDistribution this$0>;

        $r6 = staticinvoke <org.apache.commons.math3.random.EmpiricalDistribution: java.util.List access$200(org.apache.commons.math3.random.EmpiricalDistribution)>($r5);

        $r7 = r0.<org.apache.commons.math3.random.EmpiricalDistribution$StreamDataAdapter: org.apache.commons.math3.random.EmpiricalDistribution this$0>;

        $i0 = staticinvoke <org.apache.commons.math3.random.EmpiricalDistribution: int access$100(org.apache.commons.math3.random.EmpiricalDistribution,double)>($r7, d0);

        $r8 = interfaceinvoke $r6.<java.util.List: java.lang.Object get(int)>($i0);

        r1 = (org.apache.commons.math3.stat.descriptive.SummaryStatistics) $r8;

        virtualinvoke r1.<org.apache.commons.math3.stat.descriptive.SummaryStatistics: void addValue(double)>(d0);

        goto label1;

     label2:
        $r4 = r0.<org.apache.commons.math3.random.EmpiricalDistribution$StreamDataAdapter: java.io.BufferedReader inputStream>;

        virtualinvoke $r4.<java.io.BufferedReader: void close()>();

        r0.<org.apache.commons.math3.random.EmpiricalDistribution$StreamDataAdapter: java.io.BufferedReader inputStream> = null;

        return;
    }

    public void computeStats() throws java.io.IOException
    {
        org.apache.commons.math3.random.EmpiricalDistribution$StreamDataAdapter r0;
        org.apache.commons.math3.stat.descriptive.SummaryStatistics $r1, $r7;
        org.apache.commons.math3.random.EmpiricalDistribution $r2, $r6;
        java.io.BufferedReader $r3, $r5;
        java.lang.String $r4;
        double d0;

        r0 := @this: org.apache.commons.math3.random.EmpiricalDistribution$StreamDataAdapter;

        $r2 = r0.<org.apache.commons.math3.random.EmpiricalDistribution$StreamDataAdapter: org.apache.commons.math3.random.EmpiricalDistribution this$0>;

        $r1 = new org.apache.commons.math3.stat.descriptive.SummaryStatistics;

        specialinvoke $r1.<org.apache.commons.math3.stat.descriptive.SummaryStatistics: void <init>()>();

        staticinvoke <org.apache.commons.math3.random.EmpiricalDistribution: org.apache.commons.math3.stat.descriptive.SummaryStatistics access$302(org.apache.commons.math3.random.EmpiricalDistribution,org.apache.commons.math3.stat.descriptive.SummaryStatistics)>($r2, $r1);

     label1:
        $r3 = r0.<org.apache.commons.math3.random.EmpiricalDistribution$StreamDataAdapter: java.io.BufferedReader inputStream>;

        $r4 = virtualinvoke $r3.<java.io.BufferedReader: java.lang.String readLine()>();

        if $r4 == null goto label2;

        d0 = staticinvoke <java.lang.Double: double parseDouble(java.lang.String)>($r4);

        $r6 = r0.<org.apache.commons.math3.random.EmpiricalDistribution$StreamDataAdapter: org.apache.commons.math3.random.EmpiricalDistribution this$0>;

        $r7 = staticinvoke <org.apache.commons.math3.random.EmpiricalDistribution: org.apache.commons.math3.stat.descriptive.SummaryStatistics access$300(org.apache.commons.math3.random.EmpiricalDistribution)>($r6);

        virtualinvoke $r7.<org.apache.commons.math3.stat.descriptive.SummaryStatistics: void addValue(double)>(d0);

        goto label1;

     label2:
        $r5 = r0.<org.apache.commons.math3.random.EmpiricalDistribution$StreamDataAdapter: java.io.BufferedReader inputStream>;

        virtualinvoke $r5.<java.io.BufferedReader: void close()>();

        r0.<org.apache.commons.math3.random.EmpiricalDistribution$StreamDataAdapter: java.io.BufferedReader inputStream> = null;

        return;
    }
}
