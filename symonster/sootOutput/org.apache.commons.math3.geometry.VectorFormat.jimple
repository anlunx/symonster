public abstract class org.apache.commons.math3.geometry.VectorFormat extends java.lang.Object
{
    public static final java.lang.String DEFAULT_PREFIX;
    public static final java.lang.String DEFAULT_SUFFIX;
    public static final java.lang.String DEFAULT_SEPARATOR;
    private final java.lang.String prefix;
    private final java.lang.String suffix;
    private final java.lang.String separator;
    private final java.lang.String trimmedPrefix;
    private final java.lang.String trimmedSuffix;
    private final java.lang.String trimmedSeparator;
    private final java.text.NumberFormat format;

    protected void <init>()
    {
        org.apache.commons.math3.geometry.VectorFormat r0;
        java.text.NumberFormat $r1;

        r0 := @this: org.apache.commons.math3.geometry.VectorFormat;

        $r1 = staticinvoke <org.apache.commons.math3.util.CompositeFormat: java.text.NumberFormat getDefaultNumberFormat()>();

        specialinvoke r0.<org.apache.commons.math3.geometry.VectorFormat: void <init>(java.lang.String,java.lang.String,java.lang.String,java.text.NumberFormat)>("{", "}", "; ", $r1);

        return;
    }

    protected void <init>(java.text.NumberFormat)
    {
        org.apache.commons.math3.geometry.VectorFormat r0;
        java.text.NumberFormat r1;

        r0 := @this: org.apache.commons.math3.geometry.VectorFormat;

        r1 := @parameter0: java.text.NumberFormat;

        specialinvoke r0.<org.apache.commons.math3.geometry.VectorFormat: void <init>(java.lang.String,java.lang.String,java.lang.String,java.text.NumberFormat)>("{", "}", "; ", r1);

        return;
    }

    protected void <init>(java.lang.String, java.lang.String, java.lang.String)
    {
        org.apache.commons.math3.geometry.VectorFormat r0;
        java.lang.String r1, r2, r3;
        java.text.NumberFormat $r4;

        r0 := @this: org.apache.commons.math3.geometry.VectorFormat;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        $r4 = staticinvoke <org.apache.commons.math3.util.CompositeFormat: java.text.NumberFormat getDefaultNumberFormat()>();

        specialinvoke r0.<org.apache.commons.math3.geometry.VectorFormat: void <init>(java.lang.String,java.lang.String,java.lang.String,java.text.NumberFormat)>(r1, r2, r3, $r4);

        return;
    }

    protected void <init>(java.lang.String, java.lang.String, java.lang.String, java.text.NumberFormat)
    {
        org.apache.commons.math3.geometry.VectorFormat r0;
        java.lang.String r1, r2, r3, $r5, $r6, $r7;
        java.text.NumberFormat r4;

        r0 := @this: org.apache.commons.math3.geometry.VectorFormat;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.text.NumberFormat;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.commons.math3.geometry.VectorFormat: java.lang.String prefix> = r1;

        r0.<org.apache.commons.math3.geometry.VectorFormat: java.lang.String suffix> = r2;

        r0.<org.apache.commons.math3.geometry.VectorFormat: java.lang.String separator> = r3;

        $r5 = virtualinvoke r1.<java.lang.String: java.lang.String trim()>();

        r0.<org.apache.commons.math3.geometry.VectorFormat: java.lang.String trimmedPrefix> = $r5;

        $r6 = virtualinvoke r2.<java.lang.String: java.lang.String trim()>();

        r0.<org.apache.commons.math3.geometry.VectorFormat: java.lang.String trimmedSuffix> = $r6;

        $r7 = virtualinvoke r3.<java.lang.String: java.lang.String trim()>();

        r0.<org.apache.commons.math3.geometry.VectorFormat: java.lang.String trimmedSeparator> = $r7;

        r0.<org.apache.commons.math3.geometry.VectorFormat: java.text.NumberFormat format> = r4;

        return;
    }

    public static java.util.Locale[] getAvailableLocales()
    {
        java.util.Locale[] $r0;

        $r0 = staticinvoke <java.text.NumberFormat: java.util.Locale[] getAvailableLocales()>();

        return $r0;
    }

    public java.lang.String getPrefix()
    {
        org.apache.commons.math3.geometry.VectorFormat r0;
        java.lang.String $r1;

        r0 := @this: org.apache.commons.math3.geometry.VectorFormat;

        $r1 = r0.<org.apache.commons.math3.geometry.VectorFormat: java.lang.String prefix>;

        return $r1;
    }

    public java.lang.String getSuffix()
    {
        org.apache.commons.math3.geometry.VectorFormat r0;
        java.lang.String $r1;

        r0 := @this: org.apache.commons.math3.geometry.VectorFormat;

        $r1 = r0.<org.apache.commons.math3.geometry.VectorFormat: java.lang.String suffix>;

        return $r1;
    }

    public java.lang.String getSeparator()
    {
        org.apache.commons.math3.geometry.VectorFormat r0;
        java.lang.String $r1;

        r0 := @this: org.apache.commons.math3.geometry.VectorFormat;

        $r1 = r0.<org.apache.commons.math3.geometry.VectorFormat: java.lang.String separator>;

        return $r1;
    }

    public java.text.NumberFormat getFormat()
    {
        org.apache.commons.math3.geometry.VectorFormat r0;
        java.text.NumberFormat $r1;

        r0 := @this: org.apache.commons.math3.geometry.VectorFormat;

        $r1 = r0.<org.apache.commons.math3.geometry.VectorFormat: java.text.NumberFormat format>;

        return $r1;
    }

    public java.lang.String format(org.apache.commons.math3.geometry.Vector)
    {
        org.apache.commons.math3.geometry.VectorFormat r0;
        org.apache.commons.math3.geometry.Vector r1;
        java.lang.StringBuffer $r2, $r4;
        java.text.FieldPosition $r3;
        java.lang.String $r5;

        r0 := @this: org.apache.commons.math3.geometry.VectorFormat;

        r1 := @parameter0: org.apache.commons.math3.geometry.Vector;

        $r2 = new java.lang.StringBuffer;

        specialinvoke $r2.<java.lang.StringBuffer: void <init>()>();

        $r3 = new java.text.FieldPosition;

        specialinvoke $r3.<java.text.FieldPosition: void <init>(int)>(0);

        $r4 = virtualinvoke r0.<org.apache.commons.math3.geometry.VectorFormat: java.lang.StringBuffer format(org.apache.commons.math3.geometry.Vector,java.lang.StringBuffer,java.text.FieldPosition)>(r1, $r2, $r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r5;
    }

    public abstract java.lang.StringBuffer format(org.apache.commons.math3.geometry.Vector, java.lang.StringBuffer, java.text.FieldPosition);

    protected transient java.lang.StringBuffer format(java.lang.StringBuffer, java.text.FieldPosition, double[])
    {
        org.apache.commons.math3.geometry.VectorFormat r0;
        java.lang.StringBuffer r1;
        java.text.FieldPosition r2;
        double[] r3;
        java.lang.String $r4, $r6, $r10;
        int $i0, i1;
        java.text.NumberFormat $r8;
        double $d0;

        r0 := @this: org.apache.commons.math3.geometry.VectorFormat;

        r1 := @parameter0: java.lang.StringBuffer;

        r2 := @parameter1: java.text.FieldPosition;

        r3 := @parameter2: double[];

        virtualinvoke r2.<java.text.FieldPosition: void setBeginIndex(int)>(0);

        virtualinvoke r2.<java.text.FieldPosition: void setEndIndex(int)>(0);

        $r4 = r0.<org.apache.commons.math3.geometry.VectorFormat: java.lang.String prefix>;

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);

        i1 = 0;

     label1:
        $i0 = lengthof r3;

        if i1 >= $i0 goto label3;

        if i1 <= 0 goto label2;

        $r10 = r0.<org.apache.commons.math3.geometry.VectorFormat: java.lang.String separator>;

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r10);

     label2:
        $d0 = r3[i1];

        $r8 = r0.<org.apache.commons.math3.geometry.VectorFormat: java.text.NumberFormat format>;

        staticinvoke <org.apache.commons.math3.util.CompositeFormat: java.lang.StringBuffer formatDouble(double,java.text.NumberFormat,java.lang.StringBuffer,java.text.FieldPosition)>($d0, $r8, r1, r2);

        i1 = i1 + 1;

        goto label1;

     label3:
        $r6 = r0.<org.apache.commons.math3.geometry.VectorFormat: java.lang.String suffix>;

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r6);

        return r1;
    }

    public abstract org.apache.commons.math3.geometry.Vector parse(java.lang.String) throws org.apache.commons.math3.exception.MathParseException;

    public abstract org.apache.commons.math3.geometry.Vector parse(java.lang.String, java.text.ParsePosition);

    protected double[] parseCoordinates(int, java.lang.String, java.text.ParsePosition)
    {
        org.apache.commons.math3.geometry.VectorFormat r0;
        int i0, i1, i2;
        java.lang.String r1, $r5, $r6, $r8;
        java.text.ParsePosition r2;
        double[] r3;
        java.lang.Number r4;
        boolean $z0, $z1, $z2;
        java.text.NumberFormat $r7;
        double $d0;

        r0 := @this: org.apache.commons.math3.geometry.VectorFormat;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.text.ParsePosition;

        i1 = virtualinvoke r2.<java.text.ParsePosition: int getIndex()>();

        r3 = newarray (double)[i0];

        staticinvoke <org.apache.commons.math3.util.CompositeFormat: void parseAndIgnoreWhitespace(java.lang.String,java.text.ParsePosition)>(r1, r2);

        $r5 = r0.<org.apache.commons.math3.geometry.VectorFormat: java.lang.String trimmedPrefix>;

        $z0 = staticinvoke <org.apache.commons.math3.util.CompositeFormat: boolean parseFixedstring(java.lang.String,java.lang.String,java.text.ParsePosition)>(r1, $r5, r2);

        if $z0 != 0 goto label1;

        return null;

     label1:
        i2 = 0;

     label2:
        if i2 >= i0 goto label5;

        staticinvoke <org.apache.commons.math3.util.CompositeFormat: void parseAndIgnoreWhitespace(java.lang.String,java.text.ParsePosition)>(r1, r2);

        if i2 <= 0 goto label3;

        $r8 = r0.<org.apache.commons.math3.geometry.VectorFormat: java.lang.String trimmedSeparator>;

        $z2 = staticinvoke <org.apache.commons.math3.util.CompositeFormat: boolean parseFixedstring(java.lang.String,java.lang.String,java.text.ParsePosition)>(r1, $r8, r2);

        if $z2 != 0 goto label3;

        return null;

     label3:
        staticinvoke <org.apache.commons.math3.util.CompositeFormat: void parseAndIgnoreWhitespace(java.lang.String,java.text.ParsePosition)>(r1, r2);

        $r7 = r0.<org.apache.commons.math3.geometry.VectorFormat: java.text.NumberFormat format>;

        r4 = staticinvoke <org.apache.commons.math3.util.CompositeFormat: java.lang.Number parseNumber(java.lang.String,java.text.NumberFormat,java.text.ParsePosition)>(r1, $r7, r2);

        if r4 != null goto label4;

        virtualinvoke r2.<java.text.ParsePosition: void setIndex(int)>(i1);

        return null;

     label4:
        $d0 = virtualinvoke r4.<java.lang.Number: double doubleValue()>();

        r3[i2] = $d0;

        i2 = i2 + 1;

        goto label2;

     label5:
        staticinvoke <org.apache.commons.math3.util.CompositeFormat: void parseAndIgnoreWhitespace(java.lang.String,java.text.ParsePosition)>(r1, r2);

        $r6 = r0.<org.apache.commons.math3.geometry.VectorFormat: java.lang.String trimmedSuffix>;

        $z1 = staticinvoke <org.apache.commons.math3.util.CompositeFormat: boolean parseFixedstring(java.lang.String,java.lang.String,java.text.ParsePosition)>(r1, $r6, r2);

        if $z1 != 0 goto label6;

        return null;

     label6:
        return r3;
    }

    public static void <clinit>()
    {
        <org.apache.commons.math3.geometry.VectorFormat: java.lang.String DEFAULT_SEPARATOR> = "; ";

        <org.apache.commons.math3.geometry.VectorFormat: java.lang.String DEFAULT_SUFFIX> = "}";

        <org.apache.commons.math3.geometry.VectorFormat: java.lang.String DEFAULT_PREFIX> = "{";

        return;
    }
}
