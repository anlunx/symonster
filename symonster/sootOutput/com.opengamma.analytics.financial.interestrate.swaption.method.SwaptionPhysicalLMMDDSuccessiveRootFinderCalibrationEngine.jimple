public class com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionPhysicalLMMDDSuccessiveRootFinderCalibrationEngine extends com.opengamma.analytics.financial.interestrate.method.SuccessiveRootFinderCalibrationEngine
{
    private final java.util.List _instrumentIndex;

    public void <init>(com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionPhysicalLMMDDSuccessiveRootFinderCalibrationObjective)
    {
        com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionPhysicalLMMDDSuccessiveRootFinderCalibrationEngine r0;
        com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionPhysicalLMMDDSuccessiveRootFinderCalibrationObjective r1;
        java.util.ArrayList $r2;
        java.util.List $r3;
        java.lang.Integer $r4;

        r0 := @this: com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionPhysicalLMMDDSuccessiveRootFinderCalibrationEngine;

        r1 := @parameter0: com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionPhysicalLMMDDSuccessiveRootFinderCalibrationObjective;

        specialinvoke r0.<com.opengamma.analytics.financial.interestrate.method.SuccessiveRootFinderCalibrationEngine: void <init>(com.opengamma.analytics.financial.interestrate.method.SuccessiveRootFinderCalibrationObjective)>(r1);

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        r0.<com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionPhysicalLMMDDSuccessiveRootFinderCalibrationEngine: java.util.List _instrumentIndex> = $r2;

        $r3 = r0.<com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionPhysicalLMMDDSuccessiveRootFinderCalibrationEngine: java.util.List _instrumentIndex>;

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>($r4);

        return;
    }

    public java.util.List getInstrumentIndex()
    {
        com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionPhysicalLMMDDSuccessiveRootFinderCalibrationEngine r0;
        java.util.List $r1;

        r0 := @this: com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionPhysicalLMMDDSuccessiveRootFinderCalibrationEngine;

        $r1 = r0.<com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionPhysicalLMMDDSuccessiveRootFinderCalibrationEngine: java.util.List _instrumentIndex>;

        return $r1;
    }

    public void addInstrument(com.opengamma.analytics.financial.interestrate.InstrumentDerivative, com.opengamma.analytics.financial.interestrate.method.PricingMethod)
    {
        com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionPhysicalLMMDDSuccessiveRootFinderCalibrationEngine r0;
        com.opengamma.analytics.financial.interestrate.InstrumentDerivative r1;
        com.opengamma.analytics.financial.interestrate.method.PricingMethod r2;
        com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionPhysicalFixedIbor r3;
        boolean $z0;
        java.util.List $r6, $r7, $r8, $r10;
        java.lang.Double $r9;
        com.opengamma.analytics.financial.interestrate.method.SuccessiveRootFinderCalibrationObjective $r11;
        com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionPhysicalLMMDDSuccessiveRootFinderCalibrationObjective $r12;
        com.opengamma.analytics.financial.model.interestrate.definition.LiborMarketModelDisplacedDiffusionParameters $r13;
        double[] $r14;
        com.opengamma.analytics.financial.interestrate.swap.derivative.SwapFixedCoupon $r15, $r17;
        com.opengamma.analytics.financial.interestrate.annuity.derivative.Annuity $r16, $r18;
        int $i0, $i1, $i2;
        com.opengamma.analytics.financial.interestrate.payments.derivative.Payment $r19;
        com.opengamma.analytics.financial.interestrate.payments.derivative.Coupon $r20;
        double $d0;
        java.lang.Integer $r21;

        r0 := @this: com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionPhysicalLMMDDSuccessiveRootFinderCalibrationEngine;

        r1 := @parameter0: com.opengamma.analytics.financial.interestrate.InstrumentDerivative;

        r2 := @parameter1: com.opengamma.analytics.financial.interestrate.method.PricingMethod;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "Instrument");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, "Method");

        $z0 = r1 instanceof com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionPhysicalFixedIbor;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z0, "Calibration instruments should be swaptions");

        r3 = (com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionPhysicalFixedIbor) r1;

        $r6 = virtualinvoke r0.<com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionPhysicalLMMDDSuccessiveRootFinderCalibrationEngine: java.util.List getBasket()>();

        interfaceinvoke $r6.<java.util.List: boolean add(java.lang.Object)>(r1);

        $r7 = virtualinvoke r0.<com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionPhysicalLMMDDSuccessiveRootFinderCalibrationEngine: java.util.List getMethod()>();

        interfaceinvoke $r7.<java.util.List: boolean add(java.lang.Object)>(r2);

        $r8 = virtualinvoke r0.<com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionPhysicalLMMDDSuccessiveRootFinderCalibrationEngine: java.util.List getCalibrationPrice()>();

        $r9 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(0.0);

        interfaceinvoke $r8.<java.util.List: boolean add(java.lang.Object)>($r9);

        $r10 = r0.<com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionPhysicalLMMDDSuccessiveRootFinderCalibrationEngine: java.util.List _instrumentIndex>;

        $r11 = virtualinvoke r0.<com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionPhysicalLMMDDSuccessiveRootFinderCalibrationEngine: com.opengamma.analytics.financial.interestrate.method.SuccessiveRootFinderCalibrationObjective getCalibrationObjective()>();

        $r12 = (com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionPhysicalLMMDDSuccessiveRootFinderCalibrationObjective) $r11;

        $r13 = virtualinvoke $r12.<com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionPhysicalLMMDDSuccessiveRootFinderCalibrationObjective: com.opengamma.analytics.financial.model.interestrate.definition.LiborMarketModelDisplacedDiffusionParameters getLMMParameters()>();

        $r14 = virtualinvoke $r13.<com.opengamma.analytics.financial.model.interestrate.definition.LiborMarketModelDisplacedDiffusionParameters: double[] getIborTime()>();

        $r15 = virtualinvoke r3.<com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionPhysicalFixedIbor: com.opengamma.analytics.financial.interestrate.swap.derivative.SwapFixedCoupon getUnderlyingSwap()>();

        $r16 = virtualinvoke $r15.<com.opengamma.analytics.financial.interestrate.swap.derivative.SwapFixedCoupon: com.opengamma.analytics.financial.interestrate.annuity.derivative.Annuity getSecondLeg()>();

        $r17 = virtualinvoke r3.<com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionPhysicalFixedIbor: com.opengamma.analytics.financial.interestrate.swap.derivative.SwapFixedCoupon getUnderlyingSwap()>();

        $r18 = virtualinvoke $r17.<com.opengamma.analytics.financial.interestrate.swap.derivative.SwapFixedCoupon: com.opengamma.analytics.financial.interestrate.annuity.derivative.Annuity getSecondLeg()>();

        $i0 = virtualinvoke $r18.<com.opengamma.analytics.financial.interestrate.annuity.derivative.Annuity: int getNumberOfPayments()>();

        $i1 = $i0 - 1;

        $r19 = virtualinvoke $r16.<com.opengamma.analytics.financial.interestrate.annuity.derivative.Annuity: com.opengamma.analytics.financial.interestrate.payments.derivative.Payment getNthPayment(int)>($i1);

        $r20 = (com.opengamma.analytics.financial.interestrate.payments.derivative.Coupon) $r19;

        $d0 = virtualinvoke $r20.<com.opengamma.analytics.financial.interestrate.payments.derivative.Coupon: double getPaymentTime()>();

        $i2 = staticinvoke <java.util.Arrays: int binarySearch(double[],double)>($r14, $d0);

        $r21 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        interfaceinvoke $r10.<java.util.List: boolean add(java.lang.Object)>($r21);

        return;
    }

    public void calibrate(com.opengamma.analytics.financial.interestrate.YieldCurveBundle)
    {
        com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionPhysicalLMMDDSuccessiveRootFinderCalibrationEngine r0;
        com.opengamma.analytics.financial.interestrate.YieldCurveBundle r1;
        int i0, $i1, $i2, $i3, $i4, i5;
        com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionPhysicalLMMDDSuccessiveRootFinderCalibrationObjective r2;
        com.opengamma.analytics.financial.interestrate.InstrumentDerivative r5;
        double[] r6;
        com.opengamma.analytics.financial.interestrate.method.SuccessiveRootFinderCalibrationObjective $r7, $r9, $r14, $r21, $r25, $r26;
        java.util.List $r8, $r12, $r15, $r18, $r22;
        com.opengamma.analytics.math.rootfinding.RidderSingleRootFinder $r10;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6;
        com.opengamma.analytics.math.rootfinding.BracketRoot $r11;
        java.lang.Object $r13, $r16, $r19, $r23;
        java.lang.Integer $r17, $r20;
        java.lang.Double $r24, $r27, $r28;

        r0 := @this: com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionPhysicalLMMDDSuccessiveRootFinderCalibrationEngine;

        r1 := @parameter0: com.opengamma.analytics.financial.interestrate.YieldCurveBundle;

        virtualinvoke r0.<com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionPhysicalLMMDDSuccessiveRootFinderCalibrationEngine: void computeCalibrationPrice(com.opengamma.analytics.financial.interestrate.YieldCurveBundle)>(r1);

        $r7 = virtualinvoke r0.<com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionPhysicalLMMDDSuccessiveRootFinderCalibrationEngine: com.opengamma.analytics.financial.interestrate.method.SuccessiveRootFinderCalibrationObjective getCalibrationObjective()>();

        virtualinvoke $r7.<com.opengamma.analytics.financial.interestrate.method.SuccessiveRootFinderCalibrationObjective: void setCurves(com.opengamma.analytics.financial.interestrate.YieldCurveBundle)>(r1);

        $r8 = virtualinvoke r0.<com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionPhysicalLMMDDSuccessiveRootFinderCalibrationEngine: java.util.List getBasket()>();

        i0 = interfaceinvoke $r8.<java.util.List: int size()>();

        $r9 = virtualinvoke r0.<com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionPhysicalLMMDDSuccessiveRootFinderCalibrationEngine: com.opengamma.analytics.financial.interestrate.method.SuccessiveRootFinderCalibrationObjective getCalibrationObjective()>();

        r2 = (com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionPhysicalLMMDDSuccessiveRootFinderCalibrationObjective) $r9;

        $r10 = new com.opengamma.analytics.math.rootfinding.RidderSingleRootFinder;

        $d0 = virtualinvoke r2.<com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionPhysicalLMMDDSuccessiveRootFinderCalibrationObjective: double getFunctionValueAccuracy()>();

        $d1 = virtualinvoke r2.<com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionPhysicalLMMDDSuccessiveRootFinderCalibrationObjective: double getVariableAbsoluteAccuracy()>();

        specialinvoke $r10.<com.opengamma.analytics.math.rootfinding.RidderSingleRootFinder: void <init>(double,double)>($d0, $d1);

        $r11 = new com.opengamma.analytics.math.rootfinding.BracketRoot;

        specialinvoke $r11.<com.opengamma.analytics.math.rootfinding.BracketRoot: void <init>()>();

        i5 = 0;

     label1:
        if i5 >= i0 goto label2;

        $r12 = virtualinvoke r0.<com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionPhysicalLMMDDSuccessiveRootFinderCalibrationEngine: java.util.List getBasket()>();

        $r13 = interfaceinvoke $r12.<java.util.List: java.lang.Object get(int)>(i5);

        r5 = (com.opengamma.analytics.financial.interestrate.InstrumentDerivative) $r13;

        $r14 = virtualinvoke r0.<com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionPhysicalLMMDDSuccessiveRootFinderCalibrationEngine: com.opengamma.analytics.financial.interestrate.method.SuccessiveRootFinderCalibrationObjective getCalibrationObjective()>();

        virtualinvoke $r14.<com.opengamma.analytics.financial.interestrate.method.SuccessiveRootFinderCalibrationObjective: void setInstrument(com.opengamma.analytics.financial.interestrate.InstrumentDerivative)>(r5);

        $r15 = r0.<com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionPhysicalLMMDDSuccessiveRootFinderCalibrationEngine: java.util.List _instrumentIndex>;

        $r16 = interfaceinvoke $r15.<java.util.List: java.lang.Object get(int)>(i5);

        $r17 = (java.lang.Integer) $r16;

        $i1 = virtualinvoke $r17.<java.lang.Integer: int intValue()>();

        virtualinvoke r2.<com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionPhysicalLMMDDSuccessiveRootFinderCalibrationObjective: void setStartIndex(int)>($i1);

        $r18 = r0.<com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionPhysicalLMMDDSuccessiveRootFinderCalibrationEngine: java.util.List _instrumentIndex>;

        $i2 = i5 + 1;

        $r19 = interfaceinvoke $r18.<java.util.List: java.lang.Object get(int)>($i2);

        $r20 = (java.lang.Integer) $r19;

        $i3 = virtualinvoke $r20.<java.lang.Integer: int intValue()>();

        $i4 = $i3 - 1;

        virtualinvoke r2.<com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionPhysicalLMMDDSuccessiveRootFinderCalibrationObjective: void setEndIndex(int)>($i4);

        $r21 = virtualinvoke r0.<com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionPhysicalLMMDDSuccessiveRootFinderCalibrationEngine: com.opengamma.analytics.financial.interestrate.method.SuccessiveRootFinderCalibrationObjective getCalibrationObjective()>();

        $r22 = virtualinvoke r0.<com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionPhysicalLMMDDSuccessiveRootFinderCalibrationEngine: java.util.List getCalibrationPrice()>();

        $r23 = interfaceinvoke $r22.<java.util.List: java.lang.Object get(int)>(i5);

        $r24 = (java.lang.Double) $r23;

        $d2 = virtualinvoke $r24.<java.lang.Double: double doubleValue()>();

        virtualinvoke $r21.<com.opengamma.analytics.financial.interestrate.method.SuccessiveRootFinderCalibrationObjective: void setPrice(double)>($d2);

        $r25 = virtualinvoke r0.<com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionPhysicalLMMDDSuccessiveRootFinderCalibrationEngine: com.opengamma.analytics.financial.interestrate.method.SuccessiveRootFinderCalibrationObjective getCalibrationObjective()>();

        $d3 = virtualinvoke r2.<com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionPhysicalLMMDDSuccessiveRootFinderCalibrationObjective: double getMinimumParameter()>();

        $d4 = virtualinvoke r2.<com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionPhysicalLMMDDSuccessiveRootFinderCalibrationObjective: double getMaximumParameter()>();

        r6 = virtualinvoke $r11.<com.opengamma.analytics.math.rootfinding.BracketRoot: double[] getBracketedPoints(com.opengamma.analytics.math.function.Function1D,double,double)>($r25, $d3, $d4);

        $r26 = virtualinvoke r0.<com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionPhysicalLMMDDSuccessiveRootFinderCalibrationEngine: com.opengamma.analytics.financial.interestrate.method.SuccessiveRootFinderCalibrationObjective getCalibrationObjective()>();

        $d5 = r6[0];

        $r27 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d5);

        $d6 = r6[1];

        $r28 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d6);

        virtualinvoke $r10.<com.opengamma.analytics.math.rootfinding.RidderSingleRootFinder: java.lang.Double getRoot(com.opengamma.analytics.math.function.Function1D,java.lang.Double,java.lang.Double)>($r26, $r27, $r28);

        i5 = i5 + 1;

        goto label1;

     label2:
        return;
    }
}
