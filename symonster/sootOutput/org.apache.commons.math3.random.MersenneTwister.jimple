public class org.apache.commons.math3.random.MersenneTwister extends org.apache.commons.math3.random.BitsStreamGenerator implements java.io.Serializable
{
    private static final long serialVersionUID;
    private static final int N;
    private static final int M;
    private static final int[] MAG01;
    private int[] mt;
    private int mti;

    public void <init>()
    {
        org.apache.commons.math3.random.MersenneTwister r0;
        int[] $r1;
        long $l0, $l2, $l3;
        int $i1;

        r0 := @this: org.apache.commons.math3.random.MersenneTwister;

        specialinvoke r0.<org.apache.commons.math3.random.BitsStreamGenerator: void <init>()>();

        $r1 = newarray (int)[624];

        r0.<org.apache.commons.math3.random.MersenneTwister: int[] mt> = $r1;

        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $i1 = staticinvoke <java.lang.System: int identityHashCode(java.lang.Object)>(r0);

        $l2 = (long) $i1;

        $l3 = $l0 + $l2;

        virtualinvoke r0.<org.apache.commons.math3.random.MersenneTwister: void setSeed(long)>($l3);

        return;
    }

    public void <init>(int)
    {
        org.apache.commons.math3.random.MersenneTwister r0;
        int i0;
        int[] $r1;

        r0 := @this: org.apache.commons.math3.random.MersenneTwister;

        i0 := @parameter0: int;

        specialinvoke r0.<org.apache.commons.math3.random.BitsStreamGenerator: void <init>()>();

        $r1 = newarray (int)[624];

        r0.<org.apache.commons.math3.random.MersenneTwister: int[] mt> = $r1;

        virtualinvoke r0.<org.apache.commons.math3.random.MersenneTwister: void setSeed(int)>(i0);

        return;
    }

    public void <init>(int[])
    {
        org.apache.commons.math3.random.MersenneTwister r0;
        int[] r1, $r2;

        r0 := @this: org.apache.commons.math3.random.MersenneTwister;

        r1 := @parameter0: int[];

        specialinvoke r0.<org.apache.commons.math3.random.BitsStreamGenerator: void <init>()>();

        $r2 = newarray (int)[624];

        r0.<org.apache.commons.math3.random.MersenneTwister: int[] mt> = $r2;

        virtualinvoke r0.<org.apache.commons.math3.random.MersenneTwister: void setSeed(int[])>(r1);

        return;
    }

    public void <init>(long)
    {
        org.apache.commons.math3.random.MersenneTwister r0;
        long l0;
        int[] $r1;

        r0 := @this: org.apache.commons.math3.random.MersenneTwister;

        l0 := @parameter0: long;

        specialinvoke r0.<org.apache.commons.math3.random.BitsStreamGenerator: void <init>()>();

        $r1 = newarray (int)[624];

        r0.<org.apache.commons.math3.random.MersenneTwister: int[] mt> = $r1;

        virtualinvoke r0.<org.apache.commons.math3.random.MersenneTwister: void setSeed(long)>(l0);

        return;
    }

    public void setSeed(int)
    {
        org.apache.commons.math3.random.MersenneTwister r0;
        int i0, $i1, $i2, $i5, $i9, $i10, $i11, $i12;
        int[] $r1, $r2;
        long $l3, $l4, $l6, $l7, $l8, l13;

        r0 := @this: org.apache.commons.math3.random.MersenneTwister;

        i0 := @parameter0: int;

        l13 = (long) i0;

        $r1 = r0.<org.apache.commons.math3.random.MersenneTwister: int[] mt>;

        $i1 = (int) l13;

        $r1[0] = $i1;

        r0.<org.apache.commons.math3.random.MersenneTwister: int mti> = 1;

     label1:
        $i2 = r0.<org.apache.commons.math3.random.MersenneTwister: int mti>;

        if $i2 >= 624 goto label2;

        $l3 = l13 >> 30;

        $l4 = l13 ^ $l3;

        $l7 = 1812433253L * $l4;

        $i5 = r0.<org.apache.commons.math3.random.MersenneTwister: int mti>;

        $l6 = (long) $i5;

        $l8 = $l7 + $l6;

        l13 = $l8 & 4294967295L;

        $r2 = r0.<org.apache.commons.math3.random.MersenneTwister: int[] mt>;

        $i10 = r0.<org.apache.commons.math3.random.MersenneTwister: int mti>;

        $i9 = (int) l13;

        $r2[$i10] = $i9;

        $i11 = r0.<org.apache.commons.math3.random.MersenneTwister: int mti>;

        $i12 = $i11 + 1;

        r0.<org.apache.commons.math3.random.MersenneTwister: int mti> = $i12;

        goto label1;

     label2:
        virtualinvoke r0.<org.apache.commons.math3.random.MersenneTwister: void clear()>();

        return;
    }

    public void setSeed(int[])
    {
        org.apache.commons.math3.random.MersenneTwister r0;
        int[] r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16;
        int $i0, $i1, $i3, $i5, $i6, $i8, $i9, $i17, $i18, $i19, $i21, $i23, $i24, $i26, $i27, $i32, $i38, $i39, $i40, $i42, i45, i46, i47, i53;
        long $l2, $l4, $l7, $l10, $l11, $l12, $l13, $l14, $l15, $l16, $l20, $l22, $l25, $l28, $l29, $l30, $l31, $l33, $l34, $l35, $l36, $l37, $l41, $l43, $l44, $l48, l49, $l50, l51, l52, $l54, l55, $l56, l57, l58;

        r0 := @this: org.apache.commons.math3.random.MersenneTwister;

        r1 := @parameter0: int[];

        if r1 != null goto label01;

        $l41 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $i42 = staticinvoke <java.lang.System: int identityHashCode(java.lang.Object)>(r0);

        $l43 = (long) $i42;

        $l44 = $l41 + $l43;

        virtualinvoke r0.<org.apache.commons.math3.random.MersenneTwister: void setSeed(long)>($l44);

        return;

     label01:
        virtualinvoke r0.<org.apache.commons.math3.random.MersenneTwister: void setSeed(int)>(19650218);

        i45 = 1;

        i46 = 0;

        $i0 = lengthof r1;

        i47 = staticinvoke <org.apache.commons.math3.util.FastMath: int max(int,int)>(624, $i0);

     label02:
        if i47 == 0 goto label09;

        $r10 = r0.<org.apache.commons.math3.random.MersenneTwister: int[] mt>;

        $i19 = $r10[i45];

        $l20 = (long) $i19;

        $l22 = $l20 & 2147483647L;

        $r11 = r0.<org.apache.commons.math3.random.MersenneTwister: int[] mt>;

        $i21 = $r11[i45];

        if $i21 >= 0 goto label03;

        $l48 = 2147483648L;

        goto label04;

     label03:
        $l48 = 0L;

     label04:
        l49 = $l22 | $l48;

        $r12 = r0.<org.apache.commons.math3.random.MersenneTwister: int[] mt>;

        $i23 = i45 - 1;

        $i24 = $r12[$i23];

        $l25 = (long) $i24;

        $l28 = $l25 & 2147483647L;

        $r13 = r0.<org.apache.commons.math3.random.MersenneTwister: int[] mt>;

        $i26 = i45 - 1;

        $i27 = $r13[$i26];

        if $i27 >= 0 goto label05;

        $l50 = 2147483648L;

        goto label06;

     label05:
        $l50 = 0L;

     label06:
        l51 = $l28 | $l50;

        $l29 = l51 >> 30;

        $l30 = l51 ^ $l29;

        $l31 = $l30 * 1664525L;

        $l34 = l49 ^ $l31;

        $i32 = r1[i46];

        $l33 = (long) $i32;

        $l36 = $l34 + $l33;

        $l35 = (long) i46;

        l52 = $l36 + $l35;

        $r14 = r0.<org.apache.commons.math3.random.MersenneTwister: int[] mt>;

        $l37 = l52 & 4294967295L;

        $i38 = (int) $l37;

        $r14[i45] = $i38;

        i45 = i45 + 1;

        i46 = i46 + 1;

        if i45 < 624 goto label07;

        $r16 = r0.<org.apache.commons.math3.random.MersenneTwister: int[] mt>;

        $r15 = r0.<org.apache.commons.math3.random.MersenneTwister: int[] mt>;

        $i40 = $r15[623];

        $r16[0] = $i40;

        i45 = 1;

     label07:
        $i39 = lengthof r1;

        if i46 < $i39 goto label08;

        i46 = 0;

     label08:
        i47 = i47 + -1;

        goto label02;

     label09:
        i53 = 623;

     label10:
        if i53 == 0 goto label16;

        $r3 = r0.<org.apache.commons.math3.random.MersenneTwister: int[] mt>;

        $i1 = $r3[i45];

        $l2 = (long) $i1;

        $l4 = $l2 & 2147483647L;

        $r4 = r0.<org.apache.commons.math3.random.MersenneTwister: int[] mt>;

        $i3 = $r4[i45];

        if $i3 >= 0 goto label11;

        $l54 = 2147483648L;

        goto label12;

     label11:
        $l54 = 0L;

     label12:
        l55 = $l4 | $l54;

        $r5 = r0.<org.apache.commons.math3.random.MersenneTwister: int[] mt>;

        $i5 = i45 - 1;

        $i6 = $r5[$i5];

        $l7 = (long) $i6;

        $l10 = $l7 & 2147483647L;

        $r6 = r0.<org.apache.commons.math3.random.MersenneTwister: int[] mt>;

        $i8 = i45 - 1;

        $i9 = $r6[$i8];

        if $i9 >= 0 goto label13;

        $l56 = 2147483648L;

        goto label14;

     label13:
        $l56 = 0L;

     label14:
        l57 = $l10 | $l56;

        $l11 = l57 >> 30;

        $l12 = l57 ^ $l11;

        $l13 = $l12 * 1566083941L;

        $l15 = l55 ^ $l13;

        $l14 = (long) i45;

        l58 = $l15 - $l14;

        $r7 = r0.<org.apache.commons.math3.random.MersenneTwister: int[] mt>;

        $l16 = l58 & 4294967295L;

        $i17 = (int) $l16;

        $r7[i45] = $i17;

        i45 = i45 + 1;

        if i45 < 624 goto label15;

        $r9 = r0.<org.apache.commons.math3.random.MersenneTwister: int[] mt>;

        $r8 = r0.<org.apache.commons.math3.random.MersenneTwister: int[] mt>;

        $i18 = $r8[623];

        $r9[0] = $i18;

        i45 = 1;

     label15:
        i53 = i53 + -1;

        goto label10;

     label16:
        $r2 = r0.<org.apache.commons.math3.random.MersenneTwister: int[] mt>;

        $r2[0] = -2147483648;

        virtualinvoke r0.<org.apache.commons.math3.random.MersenneTwister: void clear()>();

        return;
    }

    public void setSeed(long)
    {
        org.apache.commons.math3.random.MersenneTwister r0;
        long l0, $l1, $l3;
        int[] $r1;
        int $i2, $i4;

        r0 := @this: org.apache.commons.math3.random.MersenneTwister;

        l0 := @parameter0: long;

        $r1 = newarray (int)[2];

        $l1 = l0 >>> 32;

        $i2 = (int) $l1;

        $r1[0] = $i2;

        $l3 = l0 & 4294967295L;

        $i4 = (int) $l3;

        $r1[1] = $i4;

        virtualinvoke r0.<org.apache.commons.math3.random.MersenneTwister: void setSeed(int[])>($r1);

        return;
    }

    protected int next(int)
    {
        org.apache.commons.math3.random.MersenneTwister r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, i41, i42, i43, i44, i45, i46, i47, i48, i49, i50, i51, i52, i53;
        int[] $r1, $r2, $r3, $r4, $r5, $r6, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15;

        r0 := @this: org.apache.commons.math3.random.MersenneTwister;

        i0 := @parameter0: int;

        $i1 = r0.<org.apache.commons.math3.random.MersenneTwister: int mti>;

        if $i1 < 624 goto label5;

        $r2 = r0.<org.apache.commons.math3.random.MersenneTwister: int[] mt>;

        i41 = $r2[0];

        i42 = 0;

     label1:
        if i42 >= 227 goto label2;

        i43 = i41;

        $r12 = r0.<org.apache.commons.math3.random.MersenneTwister: int[] mt>;

        $i31 = i42 + 1;

        i41 = $r12[$i31];

        $i33 = i43 & -2147483648;

        $i32 = i41 & 2147483647;

        i44 = $i33 | $i32;

        $r15 = r0.<org.apache.commons.math3.random.MersenneTwister: int[] mt>;

        $r13 = r0.<org.apache.commons.math3.random.MersenneTwister: int[] mt>;

        $i34 = i42 + 397;

        $i36 = $r13[$i34];

        $i35 = i44 >>> 1;

        $i39 = $i36 ^ $i35;

        $r14 = <org.apache.commons.math3.random.MersenneTwister: int[] MAG01>;

        $i37 = i44 & 1;

        $i38 = $r14[$i37];

        $i40 = $i39 ^ $i38;

        $r15[i42] = $i40;

        i42 = i42 + 1;

        goto label1;

     label2:
        i45 = 227;

     label3:
        if i45 >= 623 goto label4;

        i46 = i41;

        $r8 = r0.<org.apache.commons.math3.random.MersenneTwister: int[] mt>;

        $i21 = i45 + 1;

        i41 = $r8[$i21];

        $i23 = i46 & -2147483648;

        $i22 = i41 & 2147483647;

        i47 = $i23 | $i22;

        $r11 = r0.<org.apache.commons.math3.random.MersenneTwister: int[] mt>;

        $r9 = r0.<org.apache.commons.math3.random.MersenneTwister: int[] mt>;

        $i24 = i45 + -227;

        $i26 = $r9[$i24];

        $i25 = i47 >>> 1;

        $i29 = $i26 ^ $i25;

        $r10 = <org.apache.commons.math3.random.MersenneTwister: int[] MAG01>;

        $i27 = i47 & 1;

        $i28 = $r10[$i27];

        $i30 = $i29 ^ $i28;

        $r11[i45] = $i30;

        i45 = i45 + 1;

        goto label3;

     label4:
        $i14 = i41 & -2147483648;

        $r3 = r0.<org.apache.commons.math3.random.MersenneTwister: int[] mt>;

        $i12 = $r3[0];

        $i13 = $i12 & 2147483647;

        i48 = $i14 | $i13;

        $r6 = r0.<org.apache.commons.math3.random.MersenneTwister: int[] mt>;

        $r4 = r0.<org.apache.commons.math3.random.MersenneTwister: int[] mt>;

        $i16 = $r4[396];

        $i15 = i48 >>> 1;

        $i19 = $i16 ^ $i15;

        $r5 = <org.apache.commons.math3.random.MersenneTwister: int[] MAG01>;

        $i17 = i48 & 1;

        $i18 = $r5[$i17];

        $i20 = $i19 ^ $i18;

        $r6[623] = $i20;

        r0.<org.apache.commons.math3.random.MersenneTwister: int mti> = 0;

     label5:
        $r1 = r0.<org.apache.commons.math3.random.MersenneTwister: int[] mt>;

        $i2 = r0.<org.apache.commons.math3.random.MersenneTwister: int mti>;

        $i3 = $i2 + 1;

        r0.<org.apache.commons.math3.random.MersenneTwister: int mti> = $i3;

        i49 = $r1[$i2];

        $i4 = i49 >>> 11;

        i50 = i49 ^ $i4;

        $i5 = i50 << 7;

        $i6 = $i5 & -1658038656;

        i51 = i50 ^ $i6;

        $i7 = i51 << 15;

        $i8 = $i7 & -272236544;

        i52 = i51 ^ $i8;

        $i9 = i52 >>> 18;

        i53 = i52 ^ $i9;

        $i10 = 32 - i0;

        $i11 = i53 >>> $i10;

        return $i11;
    }

    static void <clinit>()
    {
        int[] $r0;

        <org.apache.commons.math3.random.MersenneTwister: int M> = 397;

        <org.apache.commons.math3.random.MersenneTwister: int N> = 624;

        <org.apache.commons.math3.random.MersenneTwister: long serialVersionUID> = 8661194735290153518L;

        $r0 = newarray (int)[2];

        $r0[0] = 0;

        $r0[1] = -1727483681;

        <org.apache.commons.math3.random.MersenneTwister: int[] MAG01> = $r0;

        return;
    }
}
