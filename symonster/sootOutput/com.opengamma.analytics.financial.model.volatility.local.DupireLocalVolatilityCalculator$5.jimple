class com.opengamma.analytics.financial.model.volatility.local.DupireLocalVolatilityCalculator$5 extends java.lang.Object implements com.opengamma.analytics.math.function.Function
{
    final com.opengamma.analytics.financial.model.volatility.surface.BlackVolatilitySurfaceStrike val$impliedVolatilitySurface;
    final double val$spot;
    final double val$drift;
    final com.opengamma.analytics.financial.model.volatility.local.DupireLocalVolatilityCalculator this$0;

    void <init>(com.opengamma.analytics.financial.model.volatility.local.DupireLocalVolatilityCalculator, com.opengamma.analytics.financial.model.volatility.surface.BlackVolatilitySurfaceStrike, double, double)
    {
        com.opengamma.analytics.financial.model.volatility.local.DupireLocalVolatilityCalculator$5 r0;
        com.opengamma.analytics.financial.model.volatility.local.DupireLocalVolatilityCalculator r1;
        com.opengamma.analytics.financial.model.volatility.surface.BlackVolatilitySurfaceStrike r2;
        double d0, d1;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.local.DupireLocalVolatilityCalculator$5;

        r1 := @parameter0: com.opengamma.analytics.financial.model.volatility.local.DupireLocalVolatilityCalculator;

        r2 := @parameter1: com.opengamma.analytics.financial.model.volatility.surface.BlackVolatilitySurfaceStrike;

        d0 := @parameter2: double;

        d1 := @parameter3: double;

        r0.<com.opengamma.analytics.financial.model.volatility.local.DupireLocalVolatilityCalculator$5: com.opengamma.analytics.financial.model.volatility.local.DupireLocalVolatilityCalculator this$0> = r1;

        r0.<com.opengamma.analytics.financial.model.volatility.local.DupireLocalVolatilityCalculator$5: com.opengamma.analytics.financial.model.volatility.surface.BlackVolatilitySurfaceStrike val$impliedVolatilitySurface> = r2;

        r0.<com.opengamma.analytics.financial.model.volatility.local.DupireLocalVolatilityCalculator$5: double val$spot> = d0;

        r0.<com.opengamma.analytics.financial.model.volatility.local.DupireLocalVolatilityCalculator$5: double val$drift> = d1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public transient java.lang.Double evaluate(java.lang.Double[])
    {
        com.opengamma.analytics.financial.model.volatility.local.DupireLocalVolatilityCalculator$5 r0;
        java.lang.Double[] r1;
        double d0, d1, d2, d3, d4, d5, d6, d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21, $d22, $d23, $d24, $d25, $d26, $d27, $d28, $d29, $d30, $d31, $d32, $d33, $d34, $d35, $d36, $d37, $d38, $d39, $d40, $d41, $d42, $d43, $d44, $d45, d46, $d47;
        java.lang.Double $r2, $r3, $r15;
        com.opengamma.analytics.financial.model.volatility.surface.BlackVolatilitySurfaceStrike $r4, $r5, $r8, $r11;
        com.opengamma.analytics.financial.model.volatility.local.DupireLocalVolatilityCalculator $r6, $r9, $r12;
        com.opengamma.analytics.math.surface.Surface $r7, $r10, $r13;
        byte $b0, $b1;
        org.slf4j.Logger $r14;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.local.DupireLocalVolatilityCalculator$5;

        r1 := @parameter0: java.lang.Double[];

        $r2 = r1[0];

        d0 = virtualinvoke $r2.<java.lang.Double: double doubleValue()>();

        $r3 = r1[1];

        d1 = virtualinvoke $r3.<java.lang.Double: double doubleValue()>();

        $r4 = r0.<com.opengamma.analytics.financial.model.volatility.local.DupireLocalVolatilityCalculator$5: com.opengamma.analytics.financial.model.volatility.surface.BlackVolatilitySurfaceStrike val$impliedVolatilitySurface>;

        d2 = virtualinvoke $r4.<com.opengamma.analytics.financial.model.volatility.surface.BlackVolatilitySurfaceStrike: double getVolatility(double,double)>(d0, d1);

        $r6 = r0.<com.opengamma.analytics.financial.model.volatility.local.DupireLocalVolatilityCalculator$5: com.opengamma.analytics.financial.model.volatility.local.DupireLocalVolatilityCalculator this$0>;

        $r5 = r0.<com.opengamma.analytics.financial.model.volatility.local.DupireLocalVolatilityCalculator$5: com.opengamma.analytics.financial.model.volatility.surface.BlackVolatilitySurfaceStrike val$impliedVolatilitySurface>;

        $r7 = virtualinvoke $r5.<com.opengamma.analytics.financial.model.volatility.surface.BlackVolatilitySurfaceStrike: com.opengamma.analytics.math.surface.Surface getSurface()>();

        d3 = staticinvoke <com.opengamma.analytics.financial.model.volatility.local.DupireLocalVolatilityCalculator: double access$000(com.opengamma.analytics.financial.model.volatility.local.DupireLocalVolatilityCalculator,com.opengamma.analytics.math.surface.Surface,double,double,double)>($r6, $r7, d0, d1, d2);

        $b0 = d1 cmpl 0.0;

        if $b0 != 0 goto label1;

        $d45 = d2 * d2;

        $d42 = 2.0 * d2;

        $d43 = $d42 * d0;

        $d44 = $d43 * d3;

        d46 = $d45 + $d44;

        goto label2;

     label1:
        $r9 = r0.<com.opengamma.analytics.financial.model.volatility.local.DupireLocalVolatilityCalculator$5: com.opengamma.analytics.financial.model.volatility.local.DupireLocalVolatilityCalculator this$0>;

        $r8 = r0.<com.opengamma.analytics.financial.model.volatility.local.DupireLocalVolatilityCalculator$5: com.opengamma.analytics.financial.model.volatility.surface.BlackVolatilitySurfaceStrike val$impliedVolatilitySurface>;

        $r10 = virtualinvoke $r8.<com.opengamma.analytics.financial.model.volatility.surface.BlackVolatilitySurfaceStrike: com.opengamma.analytics.math.surface.Surface getSurface()>();

        $d8 = r0.<com.opengamma.analytics.financial.model.volatility.local.DupireLocalVolatilityCalculator$5: double val$spot>;

        d4 = staticinvoke <com.opengamma.analytics.financial.model.volatility.local.DupireLocalVolatilityCalculator: double access$100(com.opengamma.analytics.financial.model.volatility.local.DupireLocalVolatilityCalculator,com.opengamma.analytics.math.surface.Surface,double,double,double,double)>($r9, $r10, d0, d1, d2, $d8);

        $r12 = r0.<com.opengamma.analytics.financial.model.volatility.local.DupireLocalVolatilityCalculator$5: com.opengamma.analytics.financial.model.volatility.local.DupireLocalVolatilityCalculator this$0>;

        $r11 = r0.<com.opengamma.analytics.financial.model.volatility.local.DupireLocalVolatilityCalculator$5: com.opengamma.analytics.financial.model.volatility.surface.BlackVolatilitySurfaceStrike val$impliedVolatilitySurface>;

        $r13 = virtualinvoke $r11.<com.opengamma.analytics.financial.model.volatility.surface.BlackVolatilitySurfaceStrike: com.opengamma.analytics.math.surface.Surface getSurface()>();

        $d9 = r0.<com.opengamma.analytics.financial.model.volatility.local.DupireLocalVolatilityCalculator$5: double val$spot>;

        d5 = staticinvoke <com.opengamma.analytics.financial.model.volatility.local.DupireLocalVolatilityCalculator: double access$200(com.opengamma.analytics.financial.model.volatility.local.DupireLocalVolatilityCalculator,com.opengamma.analytics.math.surface.Surface,double,double,double,double)>($r12, $r13, d0, d1, d2, $d9);

        $d10 = r0.<com.opengamma.analytics.financial.model.volatility.local.DupireLocalVolatilityCalculator$5: double val$spot>;

        $d11 = $d10 / d1;

        $d12 = staticinvoke <java.lang.Math: double log(double)>($d11);

        $d15 = r0.<com.opengamma.analytics.financial.model.volatility.local.DupireLocalVolatilityCalculator$5: double val$drift>;

        $d13 = d2 * d2;

        $d14 = $d13 / 2.0;

        $d16 = $d15 + $d14;

        $d17 = $d16 * d0;

        $d18 = $d12 + $d17;

        d6 = $d18 / d2;

        $d19 = d2 * d0;

        d7 = d6 - $d19;

        $d27 = d2 * d2;

        $d20 = 2.0 * d2;

        $d25 = $d20 * d0;

        $d21 = r0.<com.opengamma.analytics.financial.model.volatility.local.DupireLocalVolatilityCalculator$5: double val$drift>;

        $d22 = $d21 * d1;

        $d23 = $d22 * d4;

        $d24 = d3 + $d23;

        $d26 = $d25 * $d24;

        $d41 = $d27 + $d26;

        $d28 = 2.0 * d6;

        $d29 = $d28 * d1;

        $d30 = $d29 * d4;

        $d39 = 1.0 + $d30;

        $d37 = d1 * d1;

        $d31 = d6 * d7;

        $d32 = $d31 * d4;

        $d35 = $d32 * d4;

        $d33 = d0 * d2;

        $d34 = $d33 * d5;

        $d36 = $d35 + $d34;

        $d38 = $d37 * $d36;

        $d40 = $d39 + $d38;

        d46 = $d41 / $d40;

        $b1 = d46 cmpg 0.0;

        if $b1 >= 0 goto label2;

        $r14 = staticinvoke <com.opengamma.analytics.financial.model.volatility.local.DupireLocalVolatilityCalculator: org.slf4j.Logger access$300()>();

        interfaceinvoke $r14.<org.slf4j.Logger: void error(java.lang.String)>("Negative variance; returning 0");

        d46 = 0.0;

     label2:
        $d47 = staticinvoke <java.lang.Math: double sqrt(double)>(d46);

        $r15 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d47);

        return $r15;
    }

    public java.lang.Object writeReplace()
    {
        com.opengamma.analytics.financial.model.volatility.local.DupireLocalVolatilityCalculator$5 r0;
        com.opengamma.analytics.util.serialization.InvokedSerializedForm $r1, $r2, $r3;
        java.lang.Object[] $r4;
        com.opengamma.analytics.financial.model.volatility.surface.BlackVolatilitySurfaceStrike $r5;
        double $d0, $d1;
        com.opengamma.analytics.financial.model.volatility.local.DupireLocalVolatilityCalculator $r6;
        java.lang.Double $r7, $r8;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.local.DupireLocalVolatilityCalculator$5;

        $r1 = new com.opengamma.analytics.util.serialization.InvokedSerializedForm;

        $r2 = new com.opengamma.analytics.util.serialization.InvokedSerializedForm;

        $r3 = new com.opengamma.analytics.util.serialization.InvokedSerializedForm;

        $r6 = r0.<com.opengamma.analytics.financial.model.volatility.local.DupireLocalVolatilityCalculator$5: com.opengamma.analytics.financial.model.volatility.local.DupireLocalVolatilityCalculator this$0>;

        $r4 = newarray (java.lang.Object)[3];

        $r5 = r0.<com.opengamma.analytics.financial.model.volatility.local.DupireLocalVolatilityCalculator$5: com.opengamma.analytics.financial.model.volatility.surface.BlackVolatilitySurfaceStrike val$impliedVolatilitySurface>;

        $r4[0] = $r5;

        $d0 = r0.<com.opengamma.analytics.financial.model.volatility.local.DupireLocalVolatilityCalculator$5: double val$spot>;

        $r7 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        $r4[1] = $r7;

        $d1 = r0.<com.opengamma.analytics.financial.model.volatility.local.DupireLocalVolatilityCalculator$5: double val$drift>;

        $r8 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d1);

        $r4[2] = $r8;

        specialinvoke $r3.<com.opengamma.analytics.util.serialization.InvokedSerializedForm: void <init>(java.lang.Object,java.lang.String,java.lang.Object[])>($r6, "getLocalVolatility", $r4);

        specialinvoke $r2.<com.opengamma.analytics.util.serialization.InvokedSerializedForm: void <init>(java.lang.Object,java.lang.String)>($r3, "getSurface");

        specialinvoke $r1.<com.opengamma.analytics.util.serialization.InvokedSerializedForm: void <init>(java.lang.Object,java.lang.String)>($r2, "getFunction");

        return $r1;
    }

    public volatile java.lang.Object evaluate(java.lang.Object[])
    {
        com.opengamma.analytics.financial.model.volatility.local.DupireLocalVolatilityCalculator$5 r0;
        java.lang.Object[] r1;
        java.lang.Double[] $r2;
        java.lang.Double $r3;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.local.DupireLocalVolatilityCalculator$5;

        r1 := @parameter0: java.lang.Object[];

        $r2 = (java.lang.Double[]) r1;

        $r3 = virtualinvoke r0.<com.opengamma.analytics.financial.model.volatility.local.DupireLocalVolatilityCalculator$5: java.lang.Double evaluate(java.lang.Double[])>($r2);

        return $r3;
    }
}
