public final class org.jcp.xml.dsig.internal.dom.DOMPGPData extends org.jcp.xml.dsig.internal.dom.DOMStructure implements javax.xml.crypto.dsig.keyinfo.PGPData
{
    private final byte[] keyId;
    private final byte[] keyPacket;
    private final java.util.List externalElements;

    public void <init>(byte[], java.util.List)
    {
        org.jcp.xml.dsig.internal.dom.DOMPGPData r0;
        byte[] r1, $r6, $r7;
        java.util.List r2, $r4, $r9;
        int i0, i1;
        java.lang.Object $r5, $r10;
        boolean $z0, $z1;
        java.util.ArrayList $r8;
        java.lang.ClassCastException $r11;
        java.lang.StringBuilder $r12, $r13, $r14, $r15;
        java.lang.String $r16;
        java.lang.NullPointerException $r17;

        r0 := @this: org.jcp.xml.dsig.internal.dom.DOMPGPData;

        r1 := @parameter0: byte[];

        r2 := @parameter1: java.util.List;

        specialinvoke r0.<org.jcp.xml.dsig.internal.dom.DOMStructure: void <init>()>();

        if r1 != null goto label1;

        $r17 = new java.lang.NullPointerException;

        specialinvoke $r17.<java.lang.NullPointerException: void <init>(java.lang.String)>("keyPacket cannot be null");

        throw $r17;

     label1:
        if r2 == null goto label2;

        $z0 = interfaceinvoke r2.<java.util.List: boolean isEmpty()>();

        if $z0 == 0 goto label3;

     label2:
        $r4 = <java.util.Collections: java.util.List EMPTY_LIST>;

        r0.<org.jcp.xml.dsig.internal.dom.DOMPGPData: java.util.List externalElements> = $r4;

        goto label7;

     label3:
        $r8 = new java.util.ArrayList;

        specialinvoke $r8.<java.util.ArrayList: void <init>(java.util.Collection)>(r2);

        i1 = 0;

        i0 = interfaceinvoke $r8.<java.util.List: int size()>();

     label4:
        if i1 >= i0 goto label6;

        $r10 = interfaceinvoke $r8.<java.util.List: java.lang.Object get(int)>(i1);

        $z1 = $r10 instanceof javax.xml.crypto.XMLStructure;

        if $z1 != 0 goto label5;

        $r11 = new java.lang.ClassCastException;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("other[");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("] is not a valid PGPData type");

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r11.<java.lang.ClassCastException: void <init>(java.lang.String)>($r16);

        throw $r11;

     label5:
        i1 = i1 + 1;

        goto label4;

     label6:
        $r9 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r8);

        r0.<org.jcp.xml.dsig.internal.dom.DOMPGPData: java.util.List externalElements> = $r9;

     label7:
        $r5 = virtualinvoke r1.<java.lang.Object: java.lang.Object clone()>();

        $r6 = (byte[]) $r5;

        $r7 = (byte[]) $r6;

        r0.<org.jcp.xml.dsig.internal.dom.DOMPGPData: byte[] keyPacket> = $r7;

        specialinvoke r0.<org.jcp.xml.dsig.internal.dom.DOMPGPData: void checkKeyPacket(byte[])>(r1);

        r0.<org.jcp.xml.dsig.internal.dom.DOMPGPData: byte[] keyId> = null;

        return;
    }

    public void <init>(byte[], byte[], java.util.List)
    {
        org.jcp.xml.dsig.internal.dom.DOMPGPData r0;
        byte[] r1, r2, $r7, $r8, $r10, $r23;
        java.util.List r3, $r5, $r13;
        int i0, $i1, i2;
        java.lang.Object $r6, $r9, $r14;
        boolean $z0, $z1;
        java.util.ArrayList $r12;
        java.lang.ClassCastException $r15;
        java.lang.StringBuilder $r16, $r17, $r18, $r19;
        java.lang.String $r20;
        java.lang.IllegalArgumentException $r21;
        java.lang.NullPointerException $r22;

        r0 := @this: org.jcp.xml.dsig.internal.dom.DOMPGPData;

        r1 := @parameter0: byte[];

        r2 := @parameter1: byte[];

        r3 := @parameter2: java.util.List;

        specialinvoke r0.<org.jcp.xml.dsig.internal.dom.DOMStructure: void <init>()>();

        if r1 != null goto label01;

        $r22 = new java.lang.NullPointerException;

        specialinvoke $r22.<java.lang.NullPointerException: void <init>(java.lang.String)>("keyId cannot be null");

        throw $r22;

     label01:
        $i1 = lengthof r1;

        if $i1 == 8 goto label02;

        $r21 = new java.lang.IllegalArgumentException;

        specialinvoke $r21.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("keyId must be 8 bytes long");

        throw $r21;

     label02:
        if r3 == null goto label03;

        $z0 = interfaceinvoke r3.<java.util.List: boolean isEmpty()>();

        if $z0 == 0 goto label04;

     label03:
        $r5 = <java.util.Collections: java.util.List EMPTY_LIST>;

        r0.<org.jcp.xml.dsig.internal.dom.DOMPGPData: java.util.List externalElements> = $r5;

        goto label08;

     label04:
        $r12 = new java.util.ArrayList;

        specialinvoke $r12.<java.util.ArrayList: void <init>(java.util.Collection)>(r3);

        i2 = 0;

        i0 = interfaceinvoke $r12.<java.util.List: int size()>();

     label05:
        if i2 >= i0 goto label07;

        $r14 = interfaceinvoke $r12.<java.util.List: java.lang.Object get(int)>(i2);

        $z1 = $r14 instanceof javax.xml.crypto.XMLStructure;

        if $z1 != 0 goto label06;

        $r15 = new java.lang.ClassCastException;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("other[");

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("] is not a valid PGPData type");

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r15.<java.lang.ClassCastException: void <init>(java.lang.String)>($r20);

        throw $r15;

     label06:
        i2 = i2 + 1;

        goto label05;

     label07:
        $r13 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r12);

        r0.<org.jcp.xml.dsig.internal.dom.DOMPGPData: java.util.List externalElements> = $r13;

     label08:
        $r6 = virtualinvoke r1.<java.lang.Object: java.lang.Object clone()>();

        $r7 = (byte[]) $r6;

        $r8 = (byte[]) $r7;

        r0.<org.jcp.xml.dsig.internal.dom.DOMPGPData: byte[] keyId> = $r8;

        if r2 != null goto label09;

        $r23 = null;

        goto label10;

     label09:
        $r9 = virtualinvoke r2.<java.lang.Object: java.lang.Object clone()>();

        $r10 = (byte[]) $r9;

        $r23 = (byte[]) $r10;

     label10:
        r0.<org.jcp.xml.dsig.internal.dom.DOMPGPData: byte[] keyPacket> = $r23;

        if r2 == null goto label11;

        specialinvoke r0.<org.jcp.xml.dsig.internal.dom.DOMPGPData: void checkKeyPacket(byte[])>(r2);

     label11:
        return;
    }

    public void <init>(org.w3c.dom.Element) throws javax.xml.crypto.MarshalException
    {
        org.jcp.xml.dsig.internal.dom.DOMPGPData r0;
        org.w3c.dom.Element r1, r5;
        org.w3c.dom.NodeList r2;
        int i0, i2;
        org.w3c.dom.Node r4;
        java.lang.String r6;
        java.util.ArrayList $r8;
        java.util.List $r9;
        short $s1;
        boolean $z0, $z1;
        javax.xml.crypto.dom.DOMStructure $r10;
        com.sun.org.apache.xml.internal.security.exceptions.Base64DecodingException $r11;
        javax.xml.crypto.MarshalException $r12;
        byte[] r13, r14;

        r0 := @this: org.jcp.xml.dsig.internal.dom.DOMPGPData;

        r1 := @parameter0: org.w3c.dom.Element;

        specialinvoke r0.<org.jcp.xml.dsig.internal.dom.DOMStructure: void <init>()>();

        r13 = null;

        r14 = null;

        r2 = interfaceinvoke r1.<org.w3c.dom.Element: org.w3c.dom.NodeList getChildNodes()>();

        i0 = interfaceinvoke r2.<org.w3c.dom.NodeList: int getLength()>();

        $r8 = new java.util.ArrayList;

        specialinvoke $r8.<java.util.ArrayList: void <init>(int)>(i0);

        i2 = 0;

     label1:
        if i2 >= i0 goto label8;

        r4 = interfaceinvoke r2.<org.w3c.dom.NodeList: org.w3c.dom.Node item(int)>(i2);

        $s1 = interfaceinvoke r4.<org.w3c.dom.Node: short getNodeType()>();

        if $s1 != 1 goto label7;

        r5 = (org.w3c.dom.Element) r4;

        r6 = interfaceinvoke r5.<org.w3c.dom.Element: java.lang.String getLocalName()>();

     label2:
        $z0 = virtualinvoke r6.<java.lang.String: boolean equals(java.lang.Object)>("PGPKeyID");

        if $z0 == 0 goto label3;

        r13 = staticinvoke <com.sun.org.apache.xml.internal.security.utils.Base64: byte[] decode(org.w3c.dom.Element)>(r5);

        goto label5;

     label3:
        $z1 = virtualinvoke r6.<java.lang.String: boolean equals(java.lang.Object)>("PGPKeyPacket");

        if $z1 == 0 goto label4;

        r14 = staticinvoke <com.sun.org.apache.xml.internal.security.utils.Base64: byte[] decode(org.w3c.dom.Element)>(r5);

        goto label5;

     label4:
        $r10 = new javax.xml.crypto.dom.DOMStructure;

        specialinvoke $r10.<javax.xml.crypto.dom.DOMStructure: void <init>(org.w3c.dom.Node)>(r5);

        interfaceinvoke $r8.<java.util.List: boolean add(java.lang.Object)>($r10);

     label5:
        goto label7;

     label6:
        $r11 := @caughtexception;

        $r12 = new javax.xml.crypto.MarshalException;

        specialinvoke $r12.<javax.xml.crypto.MarshalException: void <init>(java.lang.Throwable)>($r11);

        throw $r12;

     label7:
        i2 = i2 + 1;

        goto label1;

     label8:
        r0.<org.jcp.xml.dsig.internal.dom.DOMPGPData: byte[] keyId> = r13;

        r0.<org.jcp.xml.dsig.internal.dom.DOMPGPData: byte[] keyPacket> = r14;

        $r9 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r8);

        r0.<org.jcp.xml.dsig.internal.dom.DOMPGPData: java.util.List externalElements> = $r9;

        return;

        catch com.sun.org.apache.xml.internal.security.exceptions.Base64DecodingException from label2 to label5 with label6;
    }

    public byte[] getKeyId()
    {
        org.jcp.xml.dsig.internal.dom.DOMPGPData r0;
        byte[] $r1, $r2, $r4, $r5;
        java.lang.Object $r3;

        r0 := @this: org.jcp.xml.dsig.internal.dom.DOMPGPData;

        $r1 = r0.<org.jcp.xml.dsig.internal.dom.DOMPGPData: byte[] keyId>;

        if $r1 != null goto label1;

        $r5 = null;

        goto label2;

     label1:
        $r2 = r0.<org.jcp.xml.dsig.internal.dom.DOMPGPData: byte[] keyId>;

        $r3 = virtualinvoke $r2.<java.lang.Object: java.lang.Object clone()>();

        $r4 = (byte[]) $r3;

        $r5 = (byte[]) $r4;

     label2:
        return $r5;
    }

    public byte[] getKeyPacket()
    {
        org.jcp.xml.dsig.internal.dom.DOMPGPData r0;
        byte[] $r1, $r2, $r4, $r5;
        java.lang.Object $r3;

        r0 := @this: org.jcp.xml.dsig.internal.dom.DOMPGPData;

        $r1 = r0.<org.jcp.xml.dsig.internal.dom.DOMPGPData: byte[] keyPacket>;

        if $r1 != null goto label1;

        $r5 = null;

        goto label2;

     label1:
        $r2 = r0.<org.jcp.xml.dsig.internal.dom.DOMPGPData: byte[] keyPacket>;

        $r3 = virtualinvoke $r2.<java.lang.Object: java.lang.Object clone()>();

        $r4 = (byte[]) $r3;

        $r5 = (byte[]) $r4;

     label2:
        return $r5;
    }

    public java.util.List getExternalElements()
    {
        org.jcp.xml.dsig.internal.dom.DOMPGPData r0;
        java.util.List $r1;

        r0 := @this: org.jcp.xml.dsig.internal.dom.DOMPGPData;

        $r1 = r0.<org.jcp.xml.dsig.internal.dom.DOMPGPData: java.util.List externalElements>;

        return $r1;
    }

    public void marshal(org.w3c.dom.Node, java.lang.String, javax.xml.crypto.dom.DOMCryptoContext) throws javax.xml.crypto.MarshalException
    {
        org.jcp.xml.dsig.internal.dom.DOMPGPData r0;
        org.w3c.dom.Node r1, $r13;
        java.lang.String r2, $r15, $r20;
        javax.xml.crypto.dom.DOMCryptoContext r3;
        org.w3c.dom.Document r4;
        org.w3c.dom.Element r5, r24, r25;
        int i0, i1;
        byte[] $r6, $r7, $r14, $r19;
        java.util.List $r8, $r10;
        java.lang.Object $r11;
        javax.xml.crypto.dom.DOMStructure $r12;
        org.w3c.dom.Text $r16, $r21;

        r0 := @this: org.jcp.xml.dsig.internal.dom.DOMPGPData;

        r1 := @parameter0: org.w3c.dom.Node;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: javax.xml.crypto.dom.DOMCryptoContext;

        r4 = staticinvoke <org.jcp.xml.dsig.internal.dom.DOMUtils: org.w3c.dom.Document getOwnerDocument(org.w3c.dom.Node)>(r1);

        r5 = staticinvoke <org.jcp.xml.dsig.internal.dom.DOMUtils: org.w3c.dom.Element createElement(org.w3c.dom.Document,java.lang.String,java.lang.String,java.lang.String)>(r4, "PGPData", "http://www.w3.org/2000/09/xmldsig#", r2);

        $r6 = r0.<org.jcp.xml.dsig.internal.dom.DOMPGPData: byte[] keyId>;

        if $r6 == null goto label1;

        r24 = staticinvoke <org.jcp.xml.dsig.internal.dom.DOMUtils: org.w3c.dom.Element createElement(org.w3c.dom.Document,java.lang.String,java.lang.String,java.lang.String)>(r4, "PGPKeyID", "http://www.w3.org/2000/09/xmldsig#", r2);

        $r19 = r0.<org.jcp.xml.dsig.internal.dom.DOMPGPData: byte[] keyId>;

        $r20 = staticinvoke <com.sun.org.apache.xml.internal.security.utils.Base64: java.lang.String encode(byte[])>($r19);

        $r21 = interfaceinvoke r4.<org.w3c.dom.Document: org.w3c.dom.Text createTextNode(java.lang.String)>($r20);

        interfaceinvoke r24.<org.w3c.dom.Element: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>($r21);

        interfaceinvoke r5.<org.w3c.dom.Element: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>(r24);

     label1:
        $r7 = r0.<org.jcp.xml.dsig.internal.dom.DOMPGPData: byte[] keyPacket>;

        if $r7 == null goto label2;

        r25 = staticinvoke <org.jcp.xml.dsig.internal.dom.DOMUtils: org.w3c.dom.Element createElement(org.w3c.dom.Document,java.lang.String,java.lang.String,java.lang.String)>(r4, "PGPKeyPacket", "http://www.w3.org/2000/09/xmldsig#", r2);

        $r14 = r0.<org.jcp.xml.dsig.internal.dom.DOMPGPData: byte[] keyPacket>;

        $r15 = staticinvoke <com.sun.org.apache.xml.internal.security.utils.Base64: java.lang.String encode(byte[])>($r14);

        $r16 = interfaceinvoke r4.<org.w3c.dom.Document: org.w3c.dom.Text createTextNode(java.lang.String)>($r15);

        interfaceinvoke r25.<org.w3c.dom.Element: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>($r16);

        interfaceinvoke r5.<org.w3c.dom.Element: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>(r25);

     label2:
        i1 = 0;

        $r8 = r0.<org.jcp.xml.dsig.internal.dom.DOMPGPData: java.util.List externalElements>;

        i0 = interfaceinvoke $r8.<java.util.List: int size()>();

     label3:
        if i1 >= i0 goto label4;

        $r10 = r0.<org.jcp.xml.dsig.internal.dom.DOMPGPData: java.util.List externalElements>;

        $r11 = interfaceinvoke $r10.<java.util.List: java.lang.Object get(int)>(i1);

        $r12 = (javax.xml.crypto.dom.DOMStructure) $r11;

        $r13 = virtualinvoke $r12.<javax.xml.crypto.dom.DOMStructure: org.w3c.dom.Node getNode()>();

        staticinvoke <org.jcp.xml.dsig.internal.dom.DOMUtils: void appendChild(org.w3c.dom.Node,org.w3c.dom.Node)>(r5, $r13);

        i1 = i1 + 1;

        goto label3;

     label4:
        interfaceinvoke r1.<org.w3c.dom.Node: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>(r5);

        return;
    }

    private void checkKeyPacket(byte[])
    {
        org.jcp.xml.dsig.internal.dom.DOMPGPData r0;
        byte[] r1;
        byte b0, $b3, $b4, $b5, $b6, $b7;
        int $i1;
        short $s2;
        java.lang.IllegalArgumentException $r2, $r3, $r4, $r5;

        r0 := @this: org.jcp.xml.dsig.internal.dom.DOMPGPData;

        r1 := @parameter0: byte[];

        $i1 = lengthof r1;

        if $i1 >= 3 goto label1;

        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("keypacket must be at least 3 bytes long");

        throw $r5;

     label1:
        b0 = r1[0];

        $s2 = b0 & 128;

        if $s2 == 128 goto label2;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("keypacket tag is invalid: bit 7 is not set");

        throw $r4;

     label2:
        $b3 = b0 & 64;

        if $b3 == 64 goto label3;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("old keypacket tag format is unsupported");

        throw $r3;

     label3:
        $b4 = b0 & 6;

        if $b4 == 6 goto label4;

        $b5 = b0 & 14;

        if $b5 == 14 goto label4;

        $b6 = b0 & 5;

        if $b6 == 5 goto label4;

        $b7 = b0 & 7;

        if $b7 == 7 goto label4;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("keypacket tag is invalid: must be 6, 14, 5, or 7");

        throw $r2;

     label4:
        return;
    }
}
