public abstract class com.opengamma.analytics.financial.model.volatility.BlackScholesFormulaRepository extends java.lang.Object
{
    private static final com.opengamma.analytics.math.statistics.distribution.ProbabilityDistribution NORMAL;
    private static final double SMALL;
    private static final double LARGE;

    public void <init>()
    {
        com.opengamma.analytics.financial.model.volatility.BlackScholesFormulaRepository r0;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.BlackScholesFormulaRepository;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static double price(double, double, double, double, double, double, boolean)
    {
        double d0, d1, d2, d3, d4, d5, d6, d7, d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21, $d22, $d23, $d24, $d25, $d26, $d27, $d28, $d29, $d30, $d31, $d32, $d33, $d34, $d35, $d37, d38, d39, $d40, $d41, d42, $d43, d44, d45, $d46, $d48, d51, d52, d53, $d54, d55, $d56, d57, d58, $d59, d60, $d61, $d63, $d64, $d65, $d66, $d67, $d68, $d69, $d70, $d71, $d72, $d73, $d74, $d75, $d76, $d77, $d78, d79, $d80;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13;
        byte b0, $b1, $b2, $b3, $b4, $b5, $b6, $b7, $b8, $b9, $b10, $b11, $b12, $b13, $b14, $b15, $b16, $b17, $b18, $b19, $b20, $b21, $b22, $b23, $b24, $b25, $b26, $b27;
        java.lang.Object[] $r0, $r2, $r4, $r6;
        java.lang.Double $r1, $r3, $r5, $r7, $r9, $r11;
        com.opengamma.analytics.math.statistics.distribution.ProbabilityDistribution $r8, $r10;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        d2 := @parameter2: double;

        d3 := @parameter3: double;

        d4 := @parameter4: double;

        d5 := @parameter5: double;

        z0 := @parameter6: boolean;

        $b1 = d0 cmpl 0.0;

        if $b1 < 0 goto label01;

        $z7 = 1;

        goto label02;

     label01:
        $z7 = 0;

     label02:
        $r0 = newarray (java.lang.Object)[1];

        $r1 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d0);

        $r0[0] = $r1;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String,java.lang.Object[])>($z7, "negative/NaN spot; have {}", $r0);

        $b2 = d1 cmpl 0.0;

        if $b2 < 0 goto label03;

        $z8 = 1;

        goto label04;

     label03:
        $z8 = 0;

     label04:
        $r2 = newarray (java.lang.Object)[1];

        $r3 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d1);

        $r2[0] = $r3;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String,java.lang.Object[])>($z8, "negative/NaN strike; have {}", $r2);

        $b3 = d2 cmpl 0.0;

        if $b3 < 0 goto label05;

        $z9 = 1;

        goto label06;

     label05:
        $z9 = 0;

     label06:
        $r4 = newarray (java.lang.Object)[1];

        $r5 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d2);

        $r4[0] = $r5;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String,java.lang.Object[])>($z9, "negative/NaN timeToExpiry; have {}", $r4);

        $b4 = d3 cmpl 0.0;

        if $b4 < 0 goto label07;

        $z10 = 1;

        goto label08;

     label07:
        $z10 = 0;

     label08:
        $r6 = newarray (java.lang.Object)[1];

        $r7 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d3);

        $r6[0] = $r7;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String,java.lang.Object[])>($z10, "negative/NaN lognormalVol; have {}", $r6);

        $z1 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d4);

        staticinvoke <com.opengamma.util.ArgumentChecker: void isFalse(boolean,java.lang.String)>($z1, "interestRate is NaN");

        $z2 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d5);

        staticinvoke <com.opengamma.util.ArgumentChecker: void isFalse(boolean,java.lang.String)>($z2, "costOfCarry is NaN");

        $b5 = d4 cmpl 1.0E13;

        if $b5 <= 0 goto label09;

        return 0.0;

     label09:
        $d9 = neg d4;

        $b6 = $d9 cmpl 1.0E13;

        if $b6 <= 0 goto label10;

        return #Infinity;

     label10:
        $d10 = staticinvoke <java.lang.Math: double abs(double)>(d4);

        $b7 = $d10 cmpg 1.0E-13;

        if $b7 >= 0 goto label11;

        $d33 = 1.0;

        goto label12;

     label11:
        $d11 = neg d4;

        $d12 = $d11 * d2;

        $d33 = staticinvoke <java.lang.Math: double exp(double)>($d12);

     label12:
        d6 = $d33;

        $b8 = d5 cmpl 1.0E13;

        if $b8 <= 0 goto label15;

        if z0 == 0 goto label13;

        $d34 = #Infinity;

        goto label14;

     label13:
        $d34 = 0.0;

     label14:
        return $d34;

     label15:
        $d13 = neg d5;

        $b9 = $d13 cmpl 1.0E13;

        if $b9 <= 0 goto label21;

        if z0 == 0 goto label16;

        $d35 = 0.0;

        goto label18;

     label16:
        $b26 = $d33 cmpl 1.0E-13;

        if $b26 <= 0 goto label17;

        $d35 = d1 * $d33;

        goto label18;

     label17:
        $d35 = 0.0;

     label18:
        $z11 = staticinvoke <java.lang.Double: boolean isNaN(double)>($d35);

        if $z11 == 0 goto label19;

        $d37 = d6;

        goto label20;

     label19:
        $d37 = $d35;

     label20:
        return $d37;

     label21:
        $d14 = d5 * d2;

        d38 = staticinvoke <java.lang.Math: double exp(double)>($d14);

        $d15 = 1.0E13 * d1;

        $b10 = d0 cmpl $d15;

        if $b10 <= 0 goto label25;

        $d31 = d5 - d4;

        $d32 = $d31 * d2;

        d39 = staticinvoke <java.lang.Math: double exp(double)>($d32);

        if z0 == 0 goto label23;

        $b25 = d39 cmpl 1.0E-13;

        if $b25 <= 0 goto label22;

        $d40 = d0 * d39;

        goto label24;

     label22:
        $d40 = 0.0;

        goto label24;

     label23:
        $d40 = 0.0;

     label24:
        return $d40;

     label25:
        $d16 = 1.0E13 * d0;

        $b11 = $d16 cmpg d1;

        if $b11 >= 0 goto label29;

        if z0 != 0 goto label26;

        $b24 = $d33 cmpg 1.0E-13;

        if $b24 >= 0 goto label27;

     label26:
        $d41 = 0.0;

        goto label28;

     label27:
        $d41 = d1 * $d33;

     label28:
        return $d41;

     label29:
        $b12 = d0 cmpl 1.0E13;

        if $b12 <= 0 goto label34;

        $b21 = d1 cmpl 1.0E13;

        if $b21 <= 0 goto label34;

        $d29 = d5 - d4;

        $d30 = $d29 * d2;

        d42 = staticinvoke <java.lang.Math: double exp(double)>($d30);

        if z0 == 0 goto label31;

        $b23 = d42 cmpl 1.0E-13;

        if $b23 <= 0 goto label30;

        $d43 = d0 * d42;

        goto label33;

     label30:
        $d43 = 0.0;

        goto label33;

     label31:
        $b22 = $d33 cmpl 1.0E-13;

        if $b22 <= 0 goto label32;

        $d43 = d1 * $d33;

        goto label33;

     label32:
        $d43 = 0.0;

     label33:
        return $d43;

     label34:
        d44 = staticinvoke <java.lang.Math: double sqrt(double)>(d2);

        d45 = d3 * d44;

        $z3 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d45);

        if $z3 == 0 goto label35;

        d45 = 1.0;

     label35:
        if z0 == 0 goto label36;

        $b27 = 1;

        goto label37;

     label36:
        $b27 = -1;

     label37:
        b0 = $b27;

        d7 = d38 * d0;

        $b13 = d45 cmpg 1.0E-13;

        if $b13 >= 0 goto label44;

        if z0 == 0 goto label39;

        $b20 = d7 cmpl d1;

        if $b20 <= 0 goto label38;

        $d28 = d7 - d1;

        $d46 = d6 * $d28;

        goto label41;

     label38:
        $d46 = 0.0;

        goto label41;

     label39:
        $b19 = d7 cmpg d1;

        if $b19 >= 0 goto label40;

        $d27 = d1 - d7;

        $d46 = d6 * $d27;

        goto label41;

     label40:
        $d46 = 0.0;

     label41:
        $z12 = staticinvoke <java.lang.Double: boolean isNaN(double)>($d46);

        if $z12 == 0 goto label42;

        $d26 = (double) b0;

        $d24 = d6 * d1;

        $d25 = d0 - $d24;

        $d48 = $d26 * $d25;

        goto label43;

     label42:
        $d48 = $d46;

     label43:
        return $d48;

     label44:
        $d17 = d0 - d1;

        $d18 = staticinvoke <java.lang.Math: double abs(double)>($d17);

        $b14 = $d18 cmpg 1.0E-13;

        if $b14 < 0 goto label45;

        $b15 = d45 cmpl 1.0E13;

        if $b15 <= 0 goto label50;

     label45:
        $d20 = d5 / d3;

        $d19 = 0.5 * d3;

        d51 = $d20 + $d19;

        $d22 = d5 / d3;

        $d21 = 0.5 * d3;

        d52 = $d22 - $d21;

        d53 = d51 * d44;

        d8 = d52 * d44;

        $z4 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d53);

        if $z4 == 0 goto label46;

        $d54 = 0.0;

        goto label47;

     label46:
        $d54 = d53;

     label47:
        d55 = $d54;

        $z5 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d8);

        if $z5 == 0 goto label48;

        $d56 = 0.0;

        goto label49;

     label48:
        $d56 = d8;

     label49:
        d57 = $d56;

        goto label56;

     label50:
        $d23 = d5 * d44;

        d58 = $d23 / d3;

        $b16 = d5 cmpl 0.0;

        if $b16 < 0 goto label51;

        $d59 = 1.0;

        goto label52;

     label51:
        $d59 = -1.0;

     label52:
        d60 = $d59;

        $z6 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d58);

        if $z6 == 0 goto label54;

        $b17 = d3 cmpg 1.0E13;

        if $b17 >= 0 goto label53;

        $b18 = d3 cmpl 1.0E-13;

        if $b18 <= 0 goto label53;

        $d61 = $d59 / d3;

        goto label55;

     label53:
        $d61 = d60 * d44;

        goto label55;

     label54:
        $d61 = d58;

     label55:
        $d63 = d0 / d1;

        $d64 = staticinvoke <java.lang.Math: double log(double)>($d63);

        $d65 = $d64 / d45;

        $d66 = $d65 + $d61;

        $d67 = 0.5 * d45;

        d55 = $d66 + $d67;

        d57 = d55 - d45;

     label56:
        $d68 = (double) b0;

        $d69 = $d68 * d6;

        $r8 = <com.opengamma.analytics.financial.model.volatility.BlackScholesFormulaRepository: com.opengamma.analytics.math.statistics.distribution.ProbabilityDistribution NORMAL>;

        $d70 = (double) b0;

        $d71 = $d70 * d55;

        $r9 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d71);

        $d72 = interfaceinvoke $r8.<com.opengamma.analytics.math.statistics.distribution.ProbabilityDistribution: double getCDF(java.lang.Object)>($r9);

        $d73 = d7 * $d72;

        $r10 = <com.opengamma.analytics.financial.model.volatility.BlackScholesFormulaRepository: com.opengamma.analytics.math.statistics.distribution.ProbabilityDistribution NORMAL>;

        $d74 = (double) b0;

        $d75 = $d74 * d57;

        $r11 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d75);

        $d76 = interfaceinvoke $r10.<com.opengamma.analytics.math.statistics.distribution.ProbabilityDistribution: double getCDF(java.lang.Object)>($r11);

        $d77 = d1 * $d76;

        $d78 = $d73 - $d77;

        d79 = $d69 * $d78;

        $z13 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d79);

        if $z13 == 0 goto label57;

        $d80 = 0.0;

        goto label58;

     label57:
        $d80 = staticinvoke <java.lang.Math: double max(double,double)>(d79, 0.0);

     label58:
        return $d80;
    }

    public static double delta(double, double, double, double, double, double, boolean)
    {
        double d0, d1, d2, d3, d4, d5, d6, d7, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21, $d22, d24, d25, $d26, $d27, $d28, d29, d30, $d32, $d33, d34, d35, $d36, d37, $d38, d39, $d40, d41, $d42, $d43, $d44, $d45, $d46, $d47, $d48, $d49, d50, $d51;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10;
        byte $b0, $b1, $b2, $b3, $b4, $b5, $b6, $b7, $b8, $b9, $b10, $b11, $b12, $b13, $b14, $b15, $b16, $b17, $b18, $b19, $b20, $b21, $b22, $b23, $b24, b25, $b26;
        java.lang.Object[] $r0, $r2, $r4, $r6;
        java.lang.Double $r1, $r3, $r5, $r7, $r9;
        com.opengamma.analytics.math.statistics.distribution.ProbabilityDistribution $r8;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        d2 := @parameter2: double;

        d3 := @parameter3: double;

        d4 := @parameter4: double;

        d5 := @parameter5: double;

        z0 := @parameter6: boolean;

        $b0 = d0 cmpl 0.0;

        if $b0 < 0 goto label01;

        $z6 = 1;

        goto label02;

     label01:
        $z6 = 0;

     label02:
        $r0 = newarray (java.lang.Object)[1];

        $r1 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d0);

        $r0[0] = $r1;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String,java.lang.Object[])>($z6, "negative/NaN spot; have {}", $r0);

        $b1 = d1 cmpl 0.0;

        if $b1 < 0 goto label03;

        $z7 = 1;

        goto label04;

     label03:
        $z7 = 0;

     label04:
        $r2 = newarray (java.lang.Object)[1];

        $r3 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d1);

        $r2[0] = $r3;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String,java.lang.Object[])>($z7, "negative/NaN strike; have {}", $r2);

        $b2 = d2 cmpl 0.0;

        if $b2 < 0 goto label05;

        $z8 = 1;

        goto label06;

     label05:
        $z8 = 0;

     label06:
        $r4 = newarray (java.lang.Object)[1];

        $r5 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d2);

        $r4[0] = $r5;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String,java.lang.Object[])>($z8, "negative/NaN timeToExpiry; have {}", $r4);

        $b3 = d3 cmpl 0.0;

        if $b3 < 0 goto label07;

        $z9 = 1;

        goto label08;

     label07:
        $z9 = 0;

     label08:
        $r6 = newarray (java.lang.Object)[1];

        $r7 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d3);

        $r6[0] = $r7;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String,java.lang.Object[])>($z9, "negative/NaN lognormalVol; have {}", $r6);

        $z1 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d4);

        staticinvoke <com.opengamma.util.ArgumentChecker: void isFalse(boolean,java.lang.String)>($z1, "interestRate is NaN");

        $z2 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d5);

        staticinvoke <com.opengamma.util.ArgumentChecker: void isFalse(boolean,java.lang.String)>($z2, "costOfCarry is NaN");

        $b4 = d4 cmpl 1.0E13;

        if $b4 <= 0 goto label09;

        $b23 = d5 cmpl 1.0E13;

        if $b23 > 0 goto label11;

     label09:
        $d9 = neg d4;

        $b5 = $d9 cmpl 1.0E13;

        if $b5 <= 0 goto label10;

        $d22 = neg d5;

        $b22 = $d22 cmpl 1.0E13;

        if $b22 > 0 goto label11;

     label10:
        $d10 = d5 - d4;

        $d11 = staticinvoke <java.lang.Math: double abs(double)>($d10);

        $b6 = $d11 cmpg 1.0E-13;

        if $b6 >= 0 goto label12;

     label11:
        d24 = 1.0;

        goto label18;

     label12:
        d25 = d5 - d4;

        $b7 = d25 cmpl 1.0E13;

        if $b7 <= 0 goto label16;

        if z0 == 0 goto label13;

        $d26 = #Infinity;

        goto label15;

     label13:
        $b21 = d5 cmpl 1.0E13;

        if $b21 <= 0 goto label14;

        $d26 = 0.0;

        goto label15;

     label14:
        $d26 = #-Infinity;

     label15:
        return $d26;

     label16:
        $d12 = neg d25;

        $b8 = $d12 cmpl 1.0E13;

        if $b8 <= 0 goto label17;

        return 0.0;

     label17:
        $d13 = d25 * d2;

        d24 = staticinvoke <java.lang.Math: double exp(double)>($d13);

     label18:
        $d14 = 1.0E13 * d1;

        $b9 = d0 cmpl $d14;

        if $b9 <= 0 goto label21;

        if z0 == 0 goto label19;

        $d27 = d24;

        goto label20;

     label19:
        $d27 = 0.0;

     label20:
        return $d27;

     label21:
        $d15 = 1.0E-13 * d1;

        $b10 = d0 cmpg $d15;

        if $b10 >= 0 goto label24;

        if z0 == 0 goto label22;

        $d28 = 0.0;

        goto label23;

     label22:
        $d28 = neg d24;

     label23:
        return $d28;

     label24:
        if z0 == 0 goto label25;

        $b24 = 1;

        goto label26;

     label25:
        $b24 = -1;

     label26:
        b25 = $b24;

        d6 = staticinvoke <java.lang.Math: double sqrt(double)>(d2);

        d29 = d3 * d6;

        $z3 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d29);

        if $z3 == 0 goto label27;

        d29 = 1.0;

     label27:
        $d16 = d5 * d2;

        d30 = staticinvoke <java.lang.Math: double exp(double)>($d16);

        $z4 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d30);

        if $z4 == 0 goto label28;

        d30 = 1.0;

     label28:
        d7 = d0 * d30;

        $d17 = d0 - d1;

        $d18 = staticinvoke <java.lang.Math: double abs(double)>($d17);

        $b11 = $d18 cmpg 1.0E-13;

        if $b11 < 0 goto label29;

        $b12 = d29 cmpl 1.0E13;

        if $b12 > 0 goto label29;

        $b13 = d0 cmpl 1.0E13;

        if $b13 <= 0 goto label32;

        $b20 = d1 cmpl 1.0E13;

        if $b20 <= 0 goto label32;

     label29:
        $d32 = d5 / d3;

        $d33 = 0.5 * d3;

        d34 = $d32 + $d33;

        d35 = d34 * d6;

        $z10 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d35);

        if $z10 == 0 goto label30;

        $d36 = 0.0;

        goto label31;

     label30:
        $d36 = d35;

     label31:
        d37 = $d36;

        goto label43;

     label32:
        $b14 = d29 cmpg 1.0E-13;

        if $b14 >= 0 goto label37;

        if z0 == 0 goto label34;

        $b19 = d7 cmpl d1;

        if $b19 <= 0 goto label33;

        $d38 = d24;

        goto label36;

     label33:
        $d38 = 0.0;

        goto label36;

     label34:
        $b18 = d7 cmpg d1;

        if $b18 >= 0 goto label35;

        $d38 = neg d24;

        goto label36;

     label35:
        $d38 = 0.0;

     label36:
        return $d38;

     label37:
        $d21 = d5 * d6;

        d39 = $d21 / d3;

        $b15 = d5 cmpl 0.0;

        if $b15 < 0 goto label38;

        $d40 = 1.0;

        goto label39;

     label38:
        $d40 = -1.0;

     label39:
        d41 = $d40;

        $z5 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d39);

        if $z5 == 0 goto label41;

        $b16 = d3 cmpg 1.0E13;

        if $b16 >= 0 goto label40;

        $b17 = d3 cmpl 1.0E-13;

        if $b17 <= 0 goto label40;

        $d42 = $d40 / d3;

        goto label42;

     label40:
        $d42 = d41 * d6;

        goto label42;

     label41:
        $d42 = d39;

     label42:
        $d43 = d0 / d1;

        $d44 = staticinvoke <java.lang.Math: double log(double)>($d43);

        $d45 = $d44 / d29;

        $d46 = $d45 + $d42;

        $d47 = 0.5 * d29;

        d37 = $d46 + $d47;

     label43:
        $r8 = <com.opengamma.analytics.financial.model.volatility.BlackScholesFormulaRepository: com.opengamma.analytics.math.statistics.distribution.ProbabilityDistribution NORMAL>;

        $d48 = (double) b25;

        $d49 = $d48 * d37;

        $r9 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d49);

        d50 = interfaceinvoke $r8.<com.opengamma.analytics.math.statistics.distribution.ProbabilityDistribution: double getCDF(java.lang.Object)>($r9);

        $b26 = d50 cmpg 1.0E-13;

        if $b26 >= 0 goto label44;

        $d51 = 0.0;

        goto label45;

     label44:
        $d19 = (double) b25;

        $d20 = $d19 * d24;

        $d51 = $d20 * d50;

     label45:
        return $d51;
    }

    public static double strikeForDelta(double, double, double, double, double, double, boolean)
    {
        double d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21, $d22, $d23, $d24, $d25, $d26, $d27;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12;
        byte $b1, $b2, $b3, $b4, $b5, $b6, $b7, $b8;
        java.lang.Object[] $r0, $r2, $r4;
        java.lang.Double $r1, $r3, $r5, $r7;
        com.opengamma.analytics.math.statistics.distribution.ProbabilityDistribution $r6;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        d2 := @parameter2: double;

        d3 := @parameter3: double;

        d4 := @parameter4: double;

        d5 := @parameter5: double;

        z0 := @parameter6: boolean;

        $b1 = d0 cmpl 0.0;

        if $b1 <= 0 goto label01;

        $z9 = 1;

        goto label02;

     label01:
        $z9 = 0;

     label02:
        $r0 = newarray (java.lang.Object)[1];

        $r1 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d0);

        $r0[0] = $r1;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String,java.lang.Object[])>($z9, "non-positive/NaN spot; have {}", $r0);

        $b2 = d2 cmpl 0.0;

        if $b2 <= 0 goto label03;

        $z10 = 1;

        goto label04;

     label03:
        $z10 = 0;

     label04:
        $r2 = newarray (java.lang.Object)[1];

        $r3 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d2);

        $r2[0] = $r3;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String,java.lang.Object[])>($z10, "non-positive/NaN timeToExpiry; have {}", $r2);

        $b3 = d3 cmpl 0.0;

        if $b3 <= 0 goto label05;

        $z11 = 1;

        goto label06;

     label05:
        $z11 = 0;

     label06:
        $r4 = newarray (java.lang.Object)[1];

        $r5 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d3);

        $r4[0] = $r5;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String,java.lang.Object[])>($z11, "non-positive/NaN lognormalVol; have {}", $r4);

        $z1 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d4);

        staticinvoke <com.opengamma.util.ArgumentChecker: void isFalse(boolean,java.lang.String)>($z1, "interestRate is NaN");

        $z2 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d5);

        staticinvoke <com.opengamma.util.ArgumentChecker: void isFalse(boolean,java.lang.String)>($z2, "costOfCarry is NaN");

        $z3 = staticinvoke <java.lang.Double: boolean isInfinite(double)>(d0);

        staticinvoke <com.opengamma.util.ArgumentChecker: void isFalse(boolean,java.lang.String)>($z3, "spot is infinite");

        $z4 = staticinvoke <java.lang.Double: boolean isInfinite(double)>(d1);

        staticinvoke <com.opengamma.util.ArgumentChecker: void isFalse(boolean,java.lang.String)>($z4, "spotDelta is infinite");

        $z5 = staticinvoke <java.lang.Double: boolean isInfinite(double)>(d2);

        staticinvoke <com.opengamma.util.ArgumentChecker: void isFalse(boolean,java.lang.String)>($z5, "timeToExpiry is infinite");

        $z6 = staticinvoke <java.lang.Double: boolean isInfinite(double)>(d3);

        staticinvoke <com.opengamma.util.ArgumentChecker: void isFalse(boolean,java.lang.String)>($z6, "lognormalVol is infinite");

        $z7 = staticinvoke <java.lang.Double: boolean isInfinite(double)>(d4);

        staticinvoke <com.opengamma.util.ArgumentChecker: void isFalse(boolean,java.lang.String)>($z7, "interestRate is infinite");

        $z8 = staticinvoke <java.lang.Double: boolean isInfinite(double)>(d5);

        staticinvoke <com.opengamma.util.ArgumentChecker: void isFalse(boolean,java.lang.String)>($z8, "costOfCarry is infinite");

        $d10 = neg d5;

        $d11 = $d10 + d4;

        $d12 = $d11 * d2;

        $d13 = staticinvoke <java.lang.Math: double exp(double)>($d12);

        d6 = d1 * $d13;

        if z0 == 0 goto label07;

        $b6 = d6 cmpl 0.0;

        if $b6 <= 0 goto label07;

        $b7 = d6 cmpg 1.0;

        if $b7 < 0 goto label08;

     label07:
        if z0 != 0 goto label09;

        $b4 = d1 cmpg 0.0;

        if $b4 >= 0 goto label09;

        $b5 = d6 cmpl -1.0;

        if $b5 <= 0 goto label09;

     label08:
        $z12 = 1;

        goto label10;

     label09:
        $z12 = 0;

     label10:
        staticinvoke <org.apache.commons.lang.Validate: void isTrue(boolean,java.lang.String,double)>($z12, "delta/Math.exp((costOfCarry - interestRate) * timeToExpiry) out of range, ", d6);

        $d25 = staticinvoke <java.lang.Math: double sqrt(double)>(d2);

        d7 = d3 * $d25;

        $d26 = d5 * d2;

        $d27 = staticinvoke <java.lang.Math: double exp(double)>($d26);

        d8 = d0 * $d27;

        if z0 == 0 goto label11;

        $b8 = 1;

        goto label12;

     label11:
        $b8 = -1;

     label12:
        $d16 = (double) $b8;

        $r6 = <com.opengamma.analytics.financial.model.volatility.BlackScholesFormulaRepository: com.opengamma.analytics.math.statistics.distribution.ProbabilityDistribution NORMAL>;

        $d14 = (double) $b8;

        $d15 = $d14 * d6;

        $r7 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d15);

        $d17 = interfaceinvoke $r6.<com.opengamma.analytics.math.statistics.distribution.ProbabilityDistribution: double getInverseCDF(java.lang.Object)>($r7);

        d9 = $d16 * $d17;

        $d18 = neg d9;

        $d21 = $d18 * d7;

        $d19 = 0.5 * d7;

        $d20 = $d19 * d7;

        $d22 = $d21 + $d20;

        $d23 = staticinvoke <java.lang.Math: double exp(double)>($d22);

        $d24 = d8 * $d23;

        return $d24;
    }

    public static double dualDelta(double, double, double, double, double, double, boolean)
    {
        double d0, d1, d2, d3, d4, d5, d6, d7, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d21, $d22, d23, $d24, $d25, $d26, d27, d28, $d30, $d31, d32, d33, $d34, d35, $d36, d37, $d38, d39, $d40, $d41, $d42, $d43, $d44, $d45, $d46, $d47, d48, $d49;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10;
        byte b0, $b1, $b2, $b3, $b4, $b5, $b6, $b7, $b8, $b9, $b10, $b11, $b12, $b13, $b14, $b15, $b16, $b17, $b18, $b19, $b20, $b21, $b22, $b23, $b24;
        java.lang.Object[] $r0, $r2, $r4, $r6;
        java.lang.Double $r1, $r3, $r5, $r7, $r9;
        com.opengamma.analytics.math.statistics.distribution.ProbabilityDistribution $r8;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        d2 := @parameter2: double;

        d3 := @parameter3: double;

        d4 := @parameter4: double;

        d5 := @parameter5: double;

        z0 := @parameter6: boolean;

        $b1 = d0 cmpl 0.0;

        if $b1 < 0 goto label01;

        $z6 = 1;

        goto label02;

     label01:
        $z6 = 0;

     label02:
        $r0 = newarray (java.lang.Object)[1];

        $r1 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d0);

        $r0[0] = $r1;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String,java.lang.Object[])>($z6, "negative/NaN spot; have {}", $r0);

        $b2 = d1 cmpl 0.0;

        if $b2 < 0 goto label03;

        $z7 = 1;

        goto label04;

     label03:
        $z7 = 0;

     label04:
        $r2 = newarray (java.lang.Object)[1];

        $r3 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d1);

        $r2[0] = $r3;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String,java.lang.Object[])>($z7, "negative/NaN strike; have {}", $r2);

        $b3 = d2 cmpl 0.0;

        if $b3 < 0 goto label05;

        $z8 = 1;

        goto label06;

     label05:
        $z8 = 0;

     label06:
        $r4 = newarray (java.lang.Object)[1];

        $r5 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d2);

        $r4[0] = $r5;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String,java.lang.Object[])>($z8, "negative/NaN timeToExpiry; have {}", $r4);

        $b4 = d3 cmpl 0.0;

        if $b4 < 0 goto label07;

        $z9 = 1;

        goto label08;

     label07:
        $z9 = 0;

     label08:
        $r6 = newarray (java.lang.Object)[1];

        $r7 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d3);

        $r6[0] = $r7;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String,java.lang.Object[])>($z9, "negative/NaN lognormalVol; have {}", $r6);

        $z1 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d4);

        staticinvoke <com.opengamma.util.ArgumentChecker: void isFalse(boolean,java.lang.String)>($z1, "interestRate is NaN");

        $z2 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d5);

        staticinvoke <com.opengamma.util.ArgumentChecker: void isFalse(boolean,java.lang.String)>($z2, "costOfCarry is NaN");

        $d9 = neg d4;

        $b5 = $d9 cmpl 1.0E13;

        if $b5 <= 0 goto label12;

        if z0 == 0 goto label09;

        $d21 = #-Infinity;

        goto label11;

     label09:
        $b21 = d5 cmpl 1.0E13;

        if $b21 <= 0 goto label10;

        $d21 = 0.0;

        goto label11;

     label10:
        $d21 = #Infinity;

     label11:
        return $d21;

     label12:
        $b6 = d4 cmpl 1.0E13;

        if $b6 <= 0 goto label13;

        return 0.0;

     label13:
        $d10 = staticinvoke <java.lang.Math: double abs(double)>(d4);

        $b7 = $d10 cmpg 1.0E-13;

        if $b7 >= 0 goto label14;

        $b20 = d2 cmpl 1.0E13;

        if $b20 <= 0 goto label14;

        $d22 = 1.0;

        goto label15;

     label14:
        $d11 = neg d4;

        $d12 = $d11 * d2;

        $d22 = staticinvoke <java.lang.Math: double exp(double)>($d12);

     label15:
        d23 = $d22;

        $d24 = 1.0E13 * d1;

        $b22 = d0 cmpl $d24;

        if $b22 <= 0 goto label18;

        if z0 == 0 goto label16;

        $d25 = neg $d22;

        goto label17;

     label16:
        $d25 = 0.0;

     label17:
        return $d25;

     label18:
        $d13 = 1.0E-13 * d1;

        $b8 = d0 cmpg $d13;

        if $b8 >= 0 goto label21;

        if z0 == 0 goto label19;

        $d26 = 0.0;

        goto label20;

     label19:
        $d26 = $d22;

     label20:
        return $d26;

     label21:
        if z0 == 0 goto label22;

        $b23 = 1;

        goto label23;

     label22:
        $b23 = -1;

     label23:
        b0 = $b23;

        d6 = staticinvoke <java.lang.Math: double sqrt(double)>(d2);

        d27 = d3 * d6;

        $z3 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d27);

        if $z3 == 0 goto label24;

        d27 = 1.0;

     label24:
        $d14 = d5 * d2;

        d28 = staticinvoke <java.lang.Math: double exp(double)>($d14);

        $z4 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d28);

        if $z4 == 0 goto label25;

        d28 = 1.0;

     label25:
        d7 = d0 * d28;

        $d15 = d0 - d1;

        $d16 = staticinvoke <java.lang.Math: double abs(double)>($d15);

        $b9 = $d16 cmpg 1.0E-13;

        if $b9 < 0 goto label26;

        $b11 = d27 cmpl 1.0E13;

        if $b11 > 0 goto label26;

        $b12 = d0 cmpl 1.0E13;

        if $b12 <= 0 goto label29;

        $b19 = d1 cmpl 1.0E13;

        if $b19 <= 0 goto label29;

     label26:
        $d30 = d5 / d3;

        $d31 = 0.5 * d3;

        d32 = $d30 - $d31;

        d33 = d32 * d6;

        $z10 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d33);

        if $z10 == 0 goto label27;

        $d34 = 0.0;

        goto label28;

     label27:
        $d34 = d33;

     label28:
        d35 = $d34;

        goto label40;

     label29:
        $b13 = d27 cmpg 1.0E-13;

        if $b13 >= 0 goto label34;

        if z0 == 0 goto label31;

        $b18 = d7 cmpl d1;

        if $b18 <= 0 goto label30;

        $d36 = neg d23;

        goto label33;

     label30:
        $d36 = 0.0;

        goto label33;

     label31:
        $b17 = d7 cmpg d1;

        if $b17 >= 0 goto label32;

        $d36 = d23;

        goto label33;

     label32:
        $d36 = 0.0;

     label33:
        return $d36;

     label34:
        $d19 = d5 * d6;

        d37 = $d19 / d3;

        $b14 = d5 cmpl 0.0;

        if $b14 < 0 goto label35;

        $d38 = 1.0;

        goto label36;

     label35:
        $d38 = -1.0;

     label36:
        d39 = $d38;

        $z5 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d37);

        if $z5 == 0 goto label38;

        $b15 = d3 cmpg 1.0E13;

        if $b15 >= 0 goto label37;

        $b16 = d3 cmpl 1.0E-13;

        if $b16 <= 0 goto label37;

        $d40 = $d38 / d3;

        goto label39;

     label37:
        $d40 = d39 * d6;

        goto label39;

     label38:
        $d40 = d37;

     label39:
        $d41 = d0 / d1;

        $d42 = staticinvoke <java.lang.Math: double log(double)>($d41);

        $d43 = $d42 / d27;

        $d44 = $d43 + $d40;

        $d45 = 0.5 * d27;

        d35 = $d44 - $d45;

     label40:
        $r8 = <com.opengamma.analytics.financial.model.volatility.BlackScholesFormulaRepository: com.opengamma.analytics.math.statistics.distribution.ProbabilityDistribution NORMAL>;

        $d46 = (double) b0;

        $d47 = $d46 * d35;

        $r9 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d47);

        d48 = interfaceinvoke $r8.<com.opengamma.analytics.math.statistics.distribution.ProbabilityDistribution: double getCDF(java.lang.Object)>($r9);

        $b24 = d48 cmpg 1.0E-13;

        if $b24 >= 0 goto label41;

        $d49 = 0.0;

        goto label42;

     label41:
        $b10 = neg b0;

        $d17 = (double) $b10;

        $d18 = $d17 * d23;

        $d49 = $d18 * d48;

     label42:
        return $d49;
    }

    public static double gamma(double, double, double, double, double, double)
    {
        double d0, d1, d2, d3, d4, d5, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21, $d22, $d23, $d24, $d25, $d26, d28, d29, $d30, d31, d32, d33, $d36, d38, $d39, d40, $d41, $d43, $d44, $d45, $d46, d47, $d48, d49, $d50, d51, $d52, $d53, $d54, $d55, $d56, $d57, d58, $d59, $d61;
        byte $b0, $b1, $b2, $b3, $b4, $b5, $b6, $b7, $b8, $b9, $b10, $b11, $b12, $b13, $b14, $b15, $b16, $b17, $b18, $b19, $b20, $b21, $b22, $b23, $b24, $b25, $b26;
        java.lang.Object[] $r0, $r2, $r4, $r6;
        java.lang.Double $r1, $r3, $r5, $r7, $r9;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11;
        com.opengamma.analytics.math.statistics.distribution.ProbabilityDistribution $r8;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        d2 := @parameter2: double;

        d3 := @parameter3: double;

        d4 := @parameter4: double;

        d5 := @parameter5: double;

        $b0 = d0 cmpl 0.0;

        if $b0 < 0 goto label01;

        $z6 = 1;

        goto label02;

     label01:
        $z6 = 0;

     label02:
        $r0 = newarray (java.lang.Object)[1];

        $r1 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d0);

        $r0[0] = $r1;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String,java.lang.Object[])>($z6, "negative/NaN spot; have {}", $r0);

        $b1 = d1 cmpl 0.0;

        if $b1 < 0 goto label03;

        $z7 = 1;

        goto label04;

     label03:
        $z7 = 0;

     label04:
        $r2 = newarray (java.lang.Object)[1];

        $r3 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d1);

        $r2[0] = $r3;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String,java.lang.Object[])>($z7, "negative/NaN strike; have {}", $r2);

        $b2 = d2 cmpl 0.0;

        if $b2 < 0 goto label05;

        $z8 = 1;

        goto label06;

     label05:
        $z8 = 0;

     label06:
        $r4 = newarray (java.lang.Object)[1];

        $r5 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d2);

        $r4[0] = $r5;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String,java.lang.Object[])>($z8, "negative/NaN timeToExpiry; have {}", $r4);

        $b3 = d3 cmpl 0.0;

        if $b3 < 0 goto label07;

        $z9 = 1;

        goto label08;

     label07:
        $z9 = 0;

     label08:
        $r6 = newarray (java.lang.Object)[1];

        $r7 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d3);

        $r6[0] = $r7;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String,java.lang.Object[])>($z9, "negative/NaN lognormalVol; have {}", $r6);

        $z0 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d4);

        staticinvoke <com.opengamma.util.ArgumentChecker: void isFalse(boolean,java.lang.String)>($z0, "interestRate is NaN");

        $z1 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d5);

        staticinvoke <com.opengamma.util.ArgumentChecker: void isFalse(boolean,java.lang.String)>($z1, "costOfCarry is NaN");

        $b4 = d4 cmpl 1.0E13;

        if $b4 <= 0 goto label09;

        $b25 = d5 cmpl 1.0E13;

        if $b25 > 0 goto label11;

     label09:
        $d7 = neg d4;

        $b5 = $d7 cmpl 1.0E13;

        if $b5 <= 0 goto label10;

        $d26 = neg d5;

        $b24 = $d26 cmpl 1.0E13;

        if $b24 > 0 goto label11;

     label10:
        $d8 = d5 - d4;

        $d9 = staticinvoke <java.lang.Math: double abs(double)>($d8);

        $b6 = $d9 cmpg 1.0E-13;

        if $b6 >= 0 goto label12;

     label11:
        d28 = 1.0;

        goto label17;

     label12:
        d29 = d5 - d4;

        $b7 = d29 cmpl 1.0E13;

        if $b7 <= 0 goto label15;

        $b23 = d5 cmpl 1.0E13;

        if $b23 <= 0 goto label13;

        $d30 = 0.0;

        goto label14;

     label13:
        $d30 = #Infinity;

     label14:
        return $d30;

     label15:
        $d10 = neg d29;

        $b8 = $d10 cmpl 1.0E13;

        if $b8 <= 0 goto label16;

        return 0.0;

     label16:
        $d11 = d29 * d2;

        d28 = staticinvoke <java.lang.Math: double exp(double)>($d11);

     label17:
        d31 = staticinvoke <java.lang.Math: double sqrt(double)>(d2);

        d32 = d3 * d31;

        $z2 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d32);

        if $z2 == 0 goto label18;

        d32 = 1.0;

     label18:
        $d12 = 1.0E13 * d1;

        $b9 = d0 cmpl $d12;

        if $b9 > 0 goto label19;

        $d13 = 1.0E-13 * d1;

        $b10 = d0 cmpg $d13;

        if $b10 < 0 goto label19;

        $b11 = d32 cmpl 1.0E13;

        if $b11 <= 0 goto label20;

     label19:
        return 0.0;

     label20:
        $d14 = d5 * d2;

        d33 = staticinvoke <java.lang.Math: double exp(double)>($d14);

        $z3 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d33);

        if $z3 == 0 goto label21;

     label21:
        $d15 = d0 - d1;

        $d16 = staticinvoke <java.lang.Math: double abs(double)>($d15);

        $b12 = $d16 cmpg 1.0E-13;

        if $b12 < 0 goto label22;

        $b15 = d0 cmpl 1.0E13;

        if $b15 <= 0 goto label27;

        $b22 = d1 cmpl 1.0E13;

        if $b22 <= 0 goto label27;

     label22:
        $d17 = staticinvoke <java.lang.Math: double abs(double)>(d5);

        $b13 = $d17 cmpg 1.0E-13;

        if $b13 >= 0 goto label23;

        $b14 = d3 cmpg 1.0E-13;

        if $b14 >= 0 goto label23;

        $d22 = staticinvoke <java.lang.Math: double signum(double)>(d5);

        $d23 = 0.5 * d3;

        $d36 = $d22 + $d23;

        goto label24;

     label23:
        $d19 = d5 / d3;

        $d18 = 0.5 * d3;

        $d36 = $d19 + $d18;

     label24:
        d38 = $d36 * d31;

        $z10 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d38);

        if $z10 == 0 goto label25;

        $d39 = 0.0;

        goto label26;

     label25:
        $d39 = d38;

     label26:
        d40 = $d39;

        goto label38;

     label27:
        $b16 = d32 cmpg 1.0E-13;

        if $b16 >= 0 goto label32;

        $d25 = staticinvoke <java.lang.Math: double abs(double)>(d5);

        $b20 = $d25 cmpl 1.0E13;

        if $b20 <= 0 goto label28;

        $b21 = d31 cmpg 1.0E-13;

        if $b21 >= 0 goto label28;

        $d41 = staticinvoke <java.lang.Math: double signum(double)>(d5);

        goto label29;

     label28:
        $d41 = d5 * d31;

     label29:
        $d43 = d0 / d1;

        $d44 = staticinvoke <java.lang.Math: double log(double)>($d43);

        $d45 = $d44 / d31;

        $d46 = $d45 + $d41;

        d47 = $d46 / d3;

        $z11 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d47);

        if $z11 == 0 goto label30;

        $d48 = 0.0;

        goto label31;

     label30:
        $d48 = d47;

     label31:
        d40 = $d48;

        goto label38;

     label32:
        $d24 = d5 * d31;

        d49 = $d24 / d3;

        $b17 = d5 cmpl 0.0;

        if $b17 < 0 goto label33;

        $d50 = 1.0;

        goto label34;

     label33:
        $d50 = -1.0;

     label34:
        d51 = $d50;

        $z5 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d49);

        if $z5 == 0 goto label36;

        $b18 = d3 cmpg 1.0E13;

        if $b18 >= 0 goto label35;

        $b19 = d3 cmpl 1.0E-13;

        if $b19 <= 0 goto label35;

        $d52 = $d50 / d3;

        goto label37;

     label35:
        $d52 = d51 * d31;

        goto label37;

     label36:
        $d52 = d49;

     label37:
        $d53 = d0 / d1;

        $d54 = staticinvoke <java.lang.Math: double log(double)>($d53);

        $d55 = $d54 / d32;

        $d56 = $d55 + $d52;

        $d57 = 0.5 * d32;

        d40 = $d56 + $d57;

     label38:
        $r8 = <com.opengamma.analytics.financial.model.volatility.BlackScholesFormulaRepository: com.opengamma.analytics.math.statistics.distribution.ProbabilityDistribution NORMAL>;

        $r9 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d40);

        d58 = interfaceinvoke $r8.<com.opengamma.analytics.math.statistics.distribution.ProbabilityDistribution: double getPDF(java.lang.Object)>($r9);

        $b26 = d58 cmpg 1.0E-13;

        if $b26 >= 0 goto label39;

        $d59 = 0.0;

        goto label40;

     label39:
        $d20 = d28 * d58;

        $d21 = $d20 / d0;

        $d59 = $d21 / d32;

     label40:
        $z4 = staticinvoke <java.lang.Double: boolean isNaN(double)>($d59);

        if $z4 == 0 goto label41;

        $d61 = #Infinity;

        goto label42;

     label41:
        $d61 = $d59;

     label42:
        return $d61;
    }

    public static double dualGamma(double, double, double, double, double, double)
    {
        double d0, d1, d2, d3, d4, d5, d6, d7, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21, $d22, $d23, $d24, $d25, $d26, $d27, $d28, d29, d30, $d33, d35, $d36, d37, $d38, $d40, $d41, $d42, $d43, d44, $d45, d46, $d47, d48, $d49, $d50, $d51, $d52, $d53, $d54, d55, $d56, $d58;
        byte $b0, $b1, $b2, $b3, $b4, $b5, $b6, $b7, $b8, $b9, $b10, $b11, $b12, $b13, $b14, $b15, $b16, $b17, $b18, $b19, $b20, $b21, $b22, $b23;
        java.lang.Object[] $r0, $r2, $r4, $r6;
        java.lang.Double $r1, $r3, $r5, $r7, $r9;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11;
        com.opengamma.analytics.math.statistics.distribution.ProbabilityDistribution $r8;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        d2 := @parameter2: double;

        d3 := @parameter3: double;

        d4 := @parameter4: double;

        d5 := @parameter5: double;

        $b0 = d0 cmpl 0.0;

        if $b0 < 0 goto label01;

        $z5 = 1;

        goto label02;

     label01:
        $z5 = 0;

     label02:
        $r0 = newarray (java.lang.Object)[1];

        $r1 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d0);

        $r0[0] = $r1;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String,java.lang.Object[])>($z5, "negative/NaN spot; have {}", $r0);

        $b1 = d1 cmpl 0.0;

        if $b1 < 0 goto label03;

        $z6 = 1;

        goto label04;

     label03:
        $z6 = 0;

     label04:
        $r2 = newarray (java.lang.Object)[1];

        $r3 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d1);

        $r2[0] = $r3;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String,java.lang.Object[])>($z6, "negative/NaN strike; have {}", $r2);

        $b2 = d2 cmpl 0.0;

        if $b2 < 0 goto label05;

        $z7 = 1;

        goto label06;

     label05:
        $z7 = 0;

     label06:
        $r4 = newarray (java.lang.Object)[1];

        $r5 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d2);

        $r4[0] = $r5;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String,java.lang.Object[])>($z7, "negative/NaN timeToExpiry; have {}", $r4);

        $b3 = d3 cmpl 0.0;

        if $b3 < 0 goto label07;

        $z8 = 1;

        goto label08;

     label07:
        $z8 = 0;

     label08:
        $r6 = newarray (java.lang.Object)[1];

        $r7 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d3);

        $r6[0] = $r7;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String,java.lang.Object[])>($z8, "negative/NaN lognormalVol; have {}", $r6);

        $z0 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d4);

        staticinvoke <com.opengamma.util.ArgumentChecker: void isFalse(boolean,java.lang.String)>($z0, "interestRate is NaN");

        $z1 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d5);

        staticinvoke <com.opengamma.util.ArgumentChecker: void isFalse(boolean,java.lang.String)>($z1, "costOfCarry is NaN");

        $d9 = neg d4;

        $b4 = $d9 cmpl 1.0E13;

        if $b4 <= 0 goto label11;

        $b22 = d5 cmpl 1.0E13;

        if $b22 <= 0 goto label09;

        $d27 = 0.0;

        goto label10;

     label09:
        $d27 = #Infinity;

     label10:
        return $d27;

     label11:
        $b5 = d4 cmpl 1.0E13;

        if $b5 <= 0 goto label12;

        return 0.0;

     label12:
        $d10 = staticinvoke <java.lang.Math: double abs(double)>(d4);

        $b6 = $d10 cmpg 1.0E-13;

        if $b6 >= 0 goto label13;

        $b21 = d2 cmpl 1.0E13;

        if $b21 <= 0 goto label13;

        $d28 = 1.0;

        goto label14;

     label13:
        $d11 = neg d4;

        $d12 = $d11 * d2;

        $d28 = staticinvoke <java.lang.Math: double exp(double)>($d12);

     label14:
        d6 = $d28;

        d7 = staticinvoke <java.lang.Math: double sqrt(double)>(d2);

        d29 = d3 * d7;

        $z9 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d29);

        if $z9 == 0 goto label15;

        d29 = 1.0;

     label15:
        $d13 = 1.0E13 * d1;

        $b7 = d0 cmpl $d13;

        if $b7 > 0 goto label16;

        $d14 = 1.0E-13 * d1;

        $b8 = d0 cmpg $d14;

        if $b8 < 0 goto label16;

        $b9 = d29 cmpl 1.0E13;

        if $b9 <= 0 goto label17;

     label16:
        return 0.0;

     label17:
        $d15 = d5 * d2;

        d30 = staticinvoke <java.lang.Math: double exp(double)>($d15);

        $z2 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d30);

        if $z2 == 0 goto label18;

     label18:
        $d16 = d0 - d1;

        $d17 = staticinvoke <java.lang.Math: double abs(double)>($d16);

        $b10 = $d17 cmpg 1.0E-13;

        if $b10 < 0 goto label19;

        $b13 = d0 cmpl 1.0E13;

        if $b13 <= 0 goto label24;

        $b20 = d1 cmpl 1.0E13;

        if $b20 <= 0 goto label24;

     label19:
        $d18 = staticinvoke <java.lang.Math: double abs(double)>(d5);

        $b11 = $d18 cmpg 1.0E-13;

        if $b11 >= 0 goto label20;

        $b12 = d3 cmpg 1.0E-13;

        if $b12 >= 0 goto label20;

        $d23 = staticinvoke <java.lang.Math: double signum(double)>(d5);

        $d24 = 0.5 * d3;

        $d33 = $d23 - $d24;

        goto label21;

     label20:
        $d20 = d5 / d3;

        $d19 = 0.5 * d3;

        $d33 = $d20 - $d19;

     label21:
        d35 = $d33 * d7;

        $z10 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d35);

        if $z10 == 0 goto label22;

        $d36 = 0.0;

        goto label23;

     label22:
        $d36 = d35;

     label23:
        d37 = $d36;

        goto label35;

     label24:
        $b14 = d29 cmpg 1.0E-13;

        if $b14 >= 0 goto label29;

        $d26 = staticinvoke <java.lang.Math: double abs(double)>(d5);

        $b18 = $d26 cmpl 1.0E13;

        if $b18 <= 0 goto label25;

        $b19 = d7 cmpg 1.0E-13;

        if $b19 >= 0 goto label25;

        $d38 = staticinvoke <java.lang.Math: double signum(double)>(d5);

        goto label26;

     label25:
        $d38 = d5 * d7;

     label26:
        $d40 = d0 / d1;

        $d41 = staticinvoke <java.lang.Math: double log(double)>($d40);

        $d42 = $d41 / d7;

        $d43 = $d42 + $d38;

        d44 = $d43 / d3;

        $z11 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d44);

        if $z11 == 0 goto label27;

        $d45 = 0.0;

        goto label28;

     label27:
        $d45 = d44;

     label28:
        d37 = $d45;

        goto label35;

     label29:
        $d25 = d5 * d7;

        d46 = $d25 / d3;

        $b15 = d5 cmpl 0.0;

        if $b15 < 0 goto label30;

        $d47 = 1.0;

        goto label31;

     label30:
        $d47 = -1.0;

     label31:
        d48 = $d47;

        $z4 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d46);

        if $z4 == 0 goto label33;

        $b16 = d3 cmpg 1.0E13;

        if $b16 >= 0 goto label32;

        $b17 = d3 cmpl 1.0E-13;

        if $b17 <= 0 goto label32;

        $d49 = $d47 / d3;

        goto label34;

     label32:
        $d49 = d48 * d7;

        goto label34;

     label33:
        $d49 = d46;

     label34:
        $d50 = d0 / d1;

        $d51 = staticinvoke <java.lang.Math: double log(double)>($d50);

        $d52 = $d51 / d29;

        $d53 = $d52 + $d49;

        $d54 = 0.5 * d29;

        d37 = $d53 - $d54;

     label35:
        $r8 = <com.opengamma.analytics.financial.model.volatility.BlackScholesFormulaRepository: com.opengamma.analytics.math.statistics.distribution.ProbabilityDistribution NORMAL>;

        $r9 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d37);

        d55 = interfaceinvoke $r8.<com.opengamma.analytics.math.statistics.distribution.ProbabilityDistribution: double getPDF(java.lang.Object)>($r9);

        $b23 = d55 cmpg 1.0E-13;

        if $b23 >= 0 goto label36;

        $d56 = 0.0;

        goto label37;

     label36:
        $d21 = d6 * d55;

        $d22 = $d21 / d1;

        $d56 = $d22 / d29;

     label37:
        $z3 = staticinvoke <java.lang.Double: boolean isNaN(double)>($d56);

        if $z3 == 0 goto label38;

        $d58 = #Infinity;

        goto label39;

     label38:
        $d58 = $d56;

     label39:
        return $d58;
    }

    public static double crossGamma(double, double, double, double, double, double)
    {
        double d0, d1, d2, d3, d4, d5, d6, d7, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21, $d22, $d23, $d24, $d25, $d26, $d27, $d28, $d29, d30, d31, $d34, d36, $d37, d38, $d39, $d41, $d42, $d43, $d44, d45, $d46, d47, $d48, d49, $d50, $d51, $d52, $d53, $d54, $d55, d56, $d57, $d59;
        byte $b0, $b1, $b2, $b3, $b4, $b5, $b6, $b7, $b8, $b9, $b10, $b11, $b12, $b13, $b14, $b15, $b16, $b17, $b18, $b19, $b20, $b21, $b22, $b23;
        java.lang.Object[] $r0, $r2, $r4, $r6;
        java.lang.Double $r1, $r3, $r5, $r7, $r9;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11;
        com.opengamma.analytics.math.statistics.distribution.ProbabilityDistribution $r8;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        d2 := @parameter2: double;

        d3 := @parameter3: double;

        d4 := @parameter4: double;

        d5 := @parameter5: double;

        $b0 = d0 cmpl 0.0;

        if $b0 < 0 goto label01;

        $z5 = 1;

        goto label02;

     label01:
        $z5 = 0;

     label02:
        $r0 = newarray (java.lang.Object)[1];

        $r1 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d0);

        $r0[0] = $r1;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String,java.lang.Object[])>($z5, "negative/NaN spot; have {}", $r0);

        $b1 = d1 cmpl 0.0;

        if $b1 < 0 goto label03;

        $z6 = 1;

        goto label04;

     label03:
        $z6 = 0;

     label04:
        $r2 = newarray (java.lang.Object)[1];

        $r3 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d1);

        $r2[0] = $r3;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String,java.lang.Object[])>($z6, "negative/NaN strike; have {}", $r2);

        $b2 = d2 cmpl 0.0;

        if $b2 < 0 goto label05;

        $z7 = 1;

        goto label06;

     label05:
        $z7 = 0;

     label06:
        $r4 = newarray (java.lang.Object)[1];

        $r5 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d2);

        $r4[0] = $r5;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String,java.lang.Object[])>($z7, "negative/NaN timeToExpiry; have {}", $r4);

        $b3 = d3 cmpl 0.0;

        if $b3 < 0 goto label07;

        $z8 = 1;

        goto label08;

     label07:
        $z8 = 0;

     label08:
        $r6 = newarray (java.lang.Object)[1];

        $r7 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d3);

        $r6[0] = $r7;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String,java.lang.Object[])>($z8, "negative/NaN lognormalVol; have {}", $r6);

        $z0 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d4);

        staticinvoke <com.opengamma.util.ArgumentChecker: void isFalse(boolean,java.lang.String)>($z0, "interestRate is NaN");

        $z1 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d5);

        staticinvoke <com.opengamma.util.ArgumentChecker: void isFalse(boolean,java.lang.String)>($z1, "costOfCarry is NaN");

        $d9 = neg d4;

        $b4 = $d9 cmpl 1.0E13;

        if $b4 <= 0 goto label11;

        $b22 = d5 cmpl 1.0E13;

        if $b22 <= 0 goto label09;

        $d28 = 0.0;

        goto label10;

     label09:
        $d28 = #-Infinity;

     label10:
        return $d28;

     label11:
        $b5 = d4 cmpl 1.0E13;

        if $b5 <= 0 goto label12;

        return 0.0;

     label12:
        $d10 = staticinvoke <java.lang.Math: double abs(double)>(d4);

        $b6 = $d10 cmpg 1.0E-13;

        if $b6 >= 0 goto label13;

        $b21 = d2 cmpl 1.0E13;

        if $b21 <= 0 goto label13;

        $d29 = 1.0;

        goto label14;

     label13:
        $d11 = neg d4;

        $d12 = $d11 * d2;

        $d29 = staticinvoke <java.lang.Math: double exp(double)>($d12);

     label14:
        d6 = $d29;

        d7 = staticinvoke <java.lang.Math: double sqrt(double)>(d2);

        d30 = d3 * d7;

        $z9 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d30);

        if $z9 == 0 goto label15;

        d30 = 1.0;

     label15:
        $d13 = 1.0E13 * d1;

        $b7 = d0 cmpl $d13;

        if $b7 > 0 goto label16;

        $d14 = 1.0E-13 * d1;

        $b8 = d0 cmpg $d14;

        if $b8 < 0 goto label16;

        $b9 = d30 cmpl 1.0E13;

        if $b9 <= 0 goto label17;

     label16:
        return 0.0;

     label17:
        $d15 = d5 * d2;

        d31 = staticinvoke <java.lang.Math: double exp(double)>($d15);

        $z2 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d31);

        if $z2 == 0 goto label18;

     label18:
        $d16 = d0 - d1;

        $d17 = staticinvoke <java.lang.Math: double abs(double)>($d16);

        $b10 = $d17 cmpg 1.0E-13;

        if $b10 < 0 goto label19;

        $b13 = d0 cmpl 1.0E13;

        if $b13 <= 0 goto label24;

        $b20 = d1 cmpl 1.0E13;

        if $b20 <= 0 goto label24;

     label19:
        $d18 = staticinvoke <java.lang.Math: double abs(double)>(d5);

        $b11 = $d18 cmpg 1.0E-13;

        if $b11 >= 0 goto label20;

        $b12 = d3 cmpg 1.0E-13;

        if $b12 >= 0 goto label20;

        $d24 = staticinvoke <java.lang.Math: double signum(double)>(d5);

        $d25 = 0.5 * d3;

        $d34 = $d24 - $d25;

        goto label21;

     label20:
        $d20 = d5 / d3;

        $d19 = 0.5 * d3;

        $d34 = $d20 - $d19;

     label21:
        d36 = $d34 * d7;

        $z10 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d36);

        if $z10 == 0 goto label22;

        $d37 = 0.0;

        goto label23;

     label22:
        $d37 = d36;

     label23:
        d38 = $d37;

        goto label35;

     label24:
        $b14 = d30 cmpg 1.0E-13;

        if $b14 >= 0 goto label29;

        $d27 = staticinvoke <java.lang.Math: double abs(double)>(d5);

        $b18 = $d27 cmpl 1.0E13;

        if $b18 <= 0 goto label25;

        $b19 = d7 cmpg 1.0E-13;

        if $b19 >= 0 goto label25;

        $d39 = staticinvoke <java.lang.Math: double signum(double)>(d5);

        goto label26;

     label25:
        $d39 = d5 * d7;

     label26:
        $d41 = d0 / d1;

        $d42 = staticinvoke <java.lang.Math: double log(double)>($d41);

        $d43 = $d42 / d7;

        $d44 = $d43 + $d39;

        d45 = $d44 / d3;

        $z11 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d45);

        if $z11 == 0 goto label27;

        $d46 = 0.0;

        goto label28;

     label27:
        $d46 = d45;

     label28:
        d38 = $d46;

        goto label35;

     label29:
        $d26 = d5 * d7;

        d47 = $d26 / d3;

        $b15 = d5 cmpl 0.0;

        if $b15 < 0 goto label30;

        $d48 = 1.0;

        goto label31;

     label30:
        $d48 = -1.0;

     label31:
        d49 = $d48;

        $z4 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d47);

        if $z4 == 0 goto label33;

        $b16 = d3 cmpg 1.0E13;

        if $b16 >= 0 goto label32;

        $b17 = d3 cmpl 1.0E-13;

        if $b17 <= 0 goto label32;

        $d50 = $d48 / d3;

        goto label34;

     label32:
        $d50 = d49 * d7;

        goto label34;

     label33:
        $d50 = d47;

     label34:
        $d51 = d0 / d1;

        $d52 = staticinvoke <java.lang.Math: double log(double)>($d51);

        $d53 = $d52 / d30;

        $d54 = $d53 + $d50;

        $d55 = 0.5 * d30;

        d38 = $d54 - $d55;

     label35:
        $r8 = <com.opengamma.analytics.financial.model.volatility.BlackScholesFormulaRepository: com.opengamma.analytics.math.statistics.distribution.ProbabilityDistribution NORMAL>;

        $r9 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d38);

        d56 = interfaceinvoke $r8.<com.opengamma.analytics.math.statistics.distribution.ProbabilityDistribution: double getPDF(java.lang.Object)>($r9);

        $b23 = d56 cmpg 1.0E-13;

        if $b23 >= 0 goto label36;

        $d57 = 0.0;

        goto label37;

     label36:
        $d21 = neg d6;

        $d22 = $d21 * d56;

        $d23 = $d22 / d0;

        $d57 = $d23 / d30;

     label37:
        $z3 = staticinvoke <java.lang.Double: boolean isNaN(double)>($d57);

        if $z3 == 0 goto label38;

        $d59 = #-Infinity;

        goto label39;

     label38:
        $d59 = $d57;

     label39:
        return $d59;
    }

    public static double theta(double, double, double, double, double, double, boolean)
    {
        double d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21, $d22, $d23, $d24, $d25, $d26, $d27, $d28, $d29, $d30, $d31, $d32, $d33, $d34, $d35, $d36, $d37, $d38, $d39, $d40, $d41, $d42, $d43, $d44, $d45, $d46, $d47, $d48, $d49, $d50, $d51, $d52, $d53, $d54, $d55, $d56, $d57, $d58, $d59, $d60, $d61, $d62, $d63, $d64, $d65, $d66, $d68, d69, $d70, $d72, $d73, $d75, d76, d77, $d80, d81, $d82, $d83, $d85, d86, $d87, d88, $d89, $d90, $d92, d93, $d94, $d96, $d97, $d98, $d99, $d100, d101, $d102, $d103, $d104, d105, d106, $d107, $d108, d109, $d110, $d111, $d112, $d113, $d114, d115, $d116, $d117;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16;
        byte b0, $b1, $b2, $b3, $b4, $b5, $b6, $b7, $b8, $b9, $b10, $b11, $b12, $b13, $b14, $b15, $b16, $b17, $b18, $b19, $b20, $b21, $b22, $b23, $b24, $b25, $b26, $b27, $b28, $b29, $b30, $b31, $b32, $b33, $b34, $b35;
        java.lang.Object[] $r0, $r2, $r4, $r6;
        java.lang.Double $r1, $r3, $r5, $r7, $r9, $r11, $r13;
        com.opengamma.analytics.math.statistics.distribution.ProbabilityDistribution $r8, $r10, $r12;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        d2 := @parameter2: double;

        d3 := @parameter3: double;

        d4 := @parameter4: double;

        d5 := @parameter5: double;

        z0 := @parameter6: boolean;

        $b1 = d0 cmpl 0.0;

        if $b1 < 0 goto label01;

        $z9 = 1;

        goto label02;

     label01:
        $z9 = 0;

     label02:
        $r0 = newarray (java.lang.Object)[1];

        $r1 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d0);

        $r0[0] = $r1;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String,java.lang.Object[])>($z9, "negative/NaN spot; have {}", $r0);

        $b2 = d1 cmpl 0.0;

        if $b2 < 0 goto label03;

        $z10 = 1;

        goto label04;

     label03:
        $z10 = 0;

     label04:
        $r2 = newarray (java.lang.Object)[1];

        $r3 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d1);

        $r2[0] = $r3;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String,java.lang.Object[])>($z10, "negative/NaN strike; have {}", $r2);

        $b3 = d2 cmpl 0.0;

        if $b3 < 0 goto label05;

        $z11 = 1;

        goto label06;

     label05:
        $z11 = 0;

     label06:
        $r4 = newarray (java.lang.Object)[1];

        $r5 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d2);

        $r4[0] = $r5;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String,java.lang.Object[])>($z11, "negative/NaN timeToExpiry; have {}", $r4);

        $b4 = d3 cmpl 0.0;

        if $b4 < 0 goto label07;

        $z12 = 1;

        goto label08;

     label07:
        $z12 = 0;

     label08:
        $r6 = newarray (java.lang.Object)[1];

        $r7 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d3);

        $r6[0] = $r7;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String,java.lang.Object[])>($z12, "negative/NaN lognormalVol; have {}", $r6);

        $z1 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d4);

        staticinvoke <com.opengamma.util.ArgumentChecker: void isFalse(boolean,java.lang.String)>($z1, "interestRate is NaN");

        $z2 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d5);

        staticinvoke <com.opengamma.util.ArgumentChecker: void isFalse(boolean,java.lang.String)>($z2, "costOfCarry is NaN");

        $d12 = staticinvoke <java.lang.Math: double abs(double)>(d4);

        $b5 = $d12 cmpl 1.0E13;

        if $b5 <= 0 goto label09;

        return 0.0;

     label09:
        $d13 = staticinvoke <java.lang.Math: double abs(double)>(d4);

        $b6 = $d13 cmpg 1.0E-13;

        if $b6 >= 0 goto label10;

        $b29 = d2 cmpl 1.0E13;

        if $b29 <= 0 goto label10;

        $d64 = 1.0;

        goto label11;

     label10:
        $d14 = neg d4;

        $d15 = $d14 * d2;

        $d64 = staticinvoke <java.lang.Math: double exp(double)>($d15);

     label11:
        d6 = $d64;

        $b30 = d5 cmpl 1.0E13;

        if $b30 <= 0 goto label14;

        if z0 == 0 goto label12;

        $d65 = #-Infinity;

        goto label13;

     label12:
        $d65 = 0.0;

     label13:
        return $d65;

     label14:
        $d16 = neg d5;

        $b7 = $d16 cmpl 1.0E13;

        if $b7 <= 0 goto label20;

        if z0 == 0 goto label15;

        $d66 = 0.0;

        goto label17;

     label15:
        $b28 = $d64 cmpl 1.0E-13;

        if $b28 <= 0 goto label16;

        $d63 = d1 * $d64;

        $d66 = $d63 * d4;

        goto label17;

     label16:
        $d66 = 0.0;

     label17:
        $z13 = staticinvoke <java.lang.Double: boolean isNaN(double)>($d66);

        if $z13 == 0 goto label18;

        $d68 = d6;

        goto label19;

     label18:
        $d68 = $d66;

     label19:
        return $d68;

     label20:
        $d17 = 1.0E13 * d1;

        $b8 = d0 cmpl $d17;

        if $b8 <= 0 goto label26;

        $d58 = d5 - d4;

        $d59 = $d58 * d2;

        d69 = staticinvoke <java.lang.Math: double exp(double)>($d59);

        if z0 == 0 goto label22;

        $b27 = d69 cmpl 1.0E-13;

        if $b27 <= 0 goto label21;

        $d60 = d5 - d4;

        $d61 = neg $d60;

        $d62 = $d61 * d0;

        $d70 = $d62 * d69;

        goto label23;

     label21:
        $d70 = 0.0;

        goto label23;

     label22:
        $d70 = 0.0;

     label23:
        $z14 = staticinvoke <java.lang.Double: boolean isNaN(double)>($d70);

        if $z14 == 0 goto label24;

        $d72 = d69;

        goto label25;

     label24:
        $d72 = $d70;

     label25:
        return $d72;

     label26:
        $d18 = 1.0E13 * d0;

        $b9 = $d18 cmpg d1;

        if $b9 >= 0 goto label32;

        if z0 == 0 goto label27;

        $d73 = 0.0;

        goto label29;

     label27:
        $b26 = $d64 cmpl 1.0E-13;

        if $b26 <= 0 goto label28;

        $d57 = d1 * $d64;

        $d73 = $d57 * d4;

        goto label29;

     label28:
        $d73 = 0.0;

     label29:
        $z15 = staticinvoke <java.lang.Double: boolean isNaN(double)>($d73);

        if $z15 == 0 goto label30;

        $d75 = d6;

        goto label31;

     label30:
        $d75 = $d73;

     label31:
        return $d75;

     label32:
        $b10 = d0 cmpl 1.0E13;

        if $b10 <= 0 goto label33;

        $b25 = d1 cmpl 1.0E13;

        if $b25 <= 0 goto label33;

        return #Infinity;

     label33:
        d76 = staticinvoke <java.lang.Math: double sqrt(double)>(d2);

        d77 = d3 * d76;

        $z3 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d77);

        if $z3 == 0 goto label34;

        d77 = 1.0;

     label34:
        if z0 == 0 goto label35;

        $b31 = 1;

        goto label36;

     label35:
        $b31 = -1;

     label36:
        b0 = $b31;

        $d19 = d0 - d1;

        $d20 = staticinvoke <java.lang.Math: double abs(double)>($d19);

        $b11 = $d20 cmpg 1.0E-13;

        if $b11 < 0 goto label37;

        $b19 = d77 cmpl 1.0E13;

        if $b19 <= 0 goto label50;

     label37:
        $d21 = staticinvoke <java.lang.Math: double abs(double)>(d5);

        $b12 = $d21 cmpg 1.0E-13;

        if $b12 >= 0 goto label38;

        $b18 = d3 cmpg 1.0E-13;

        if $b18 >= 0 goto label38;

        $d47 = staticinvoke <java.lang.Math: double signum(double)>(d5);

        $d48 = 0.5 * d3;

        $d80 = $d47 + $d48;

        goto label39;

     label38:
        $d23 = d5 / d3;

        $d22 = 0.5 * d3;

        $d80 = $d23 + $d22;

     label39:
        d81 = $d80;

        $d82 = staticinvoke <java.lang.Math: double abs(double)>($d80);

        $b32 = $d82 cmpg 1.0E-13;

        if $b32 >= 0 goto label40;

        $d83 = 0.0;

        goto label41;

     label40:
        $d83 = $d80 * d76;

     label41:
        $z4 = staticinvoke <java.lang.Double: boolean isNaN(double)>($d83);

        if $z4 == 0 goto label42;

        $d85 = staticinvoke <java.lang.Math: double signum(double)>(d81);

        goto label43;

     label42:
        $d85 = $d83;

     label43:
        d86 = $d85;

        $d24 = staticinvoke <java.lang.Math: double abs(double)>(d5);

        $b13 = $d24 cmpg 1.0E-13;

        if $b13 >= 0 goto label44;

        $b17 = d3 cmpg 1.0E-13;

        if $b17 >= 0 goto label44;

        $d45 = staticinvoke <java.lang.Math: double signum(double)>(d5);

        $d46 = 0.5 * d3;

        $d87 = $d45 - $d46;

        goto label45;

     label44:
        $d26 = d5 / d3;

        $d25 = 0.5 * d3;

        $d87 = $d26 - $d25;

     label45:
        d88 = $d87;

        $d89 = staticinvoke <java.lang.Math: double abs(double)>($d87);

        $b33 = $d89 cmpg 1.0E-13;

        if $b33 >= 0 goto label46;

        $d90 = 0.0;

        goto label47;

     label46:
        $d90 = $d87 * d76;

     label47:
        $z5 = staticinvoke <java.lang.Double: boolean isNaN(double)>($d90);

        if $z5 == 0 goto label48;

        $d92 = staticinvoke <java.lang.Math: double signum(double)>(d88);

        goto label49;

     label48:
        $d92 = $d90;

     label49:
        d93 = $d92;

        goto label55;

     label50:
        $b20 = d77 cmpg 1.0E-13;

        if $b20 >= 0 goto label51;

        $d52 = d0 / d1;

        $d53 = staticinvoke <java.lang.Math: double log(double)>($d52);

        $d55 = $d53 / d76;

        $d54 = d5 * d76;

        $d56 = $d55 + $d54;

        d86 = $d56 / d3;

        d93 = d86;

        goto label55;

     label51:
        $d49 = staticinvoke <java.lang.Math: double abs(double)>(d5);

        $b21 = $d49 cmpg 1.0E-13;

        if $b21 >= 0 goto label52;

        $b24 = d3 cmpg 1.0E-13;

        if $b24 >= 0 goto label52;

        $d94 = d76;

        goto label54;

     label52:
        $d50 = staticinvoke <java.lang.Math: double abs(double)>(d5);

        $b22 = $d50 cmpg 1.0E-13;

        if $b22 >= 0 goto label53;

        $b23 = d76 cmpl 1.0E13;

        if $b23 <= 0 goto label53;

        $d94 = 1.0 / d3;

        goto label54;

     label53:
        $d51 = d5 / d3;

        $d94 = $d51 * d76;

     label54:
        $d96 = d0 / d1;

        $d97 = staticinvoke <java.lang.Math: double log(double)>($d96);

        $d98 = $d97 / d77;

        $d99 = $d98 + $d94;

        $d100 = 0.5 * d77;

        d86 = $d99 + $d100;

        d93 = d86 - d77;

     label55:
        $r8 = <com.opengamma.analytics.financial.model.volatility.BlackScholesFormulaRepository: com.opengamma.analytics.math.statistics.distribution.ProbabilityDistribution NORMAL>;

        $r9 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d86);

        d101 = interfaceinvoke $r8.<com.opengamma.analytics.math.statistics.distribution.ProbabilityDistribution: double getPDF(java.lang.Object)>($r9);

        $d102 = d5 - d4;

        $d103 = $d102 * d2;

        $d104 = staticinvoke <java.lang.Math: double exp(double)>($d103);

        d105 = $d104 * d0;

        d106 = d6 * d1;

        $r10 = <com.opengamma.analytics.financial.model.volatility.BlackScholesFormulaRepository: com.opengamma.analytics.math.statistics.distribution.ProbabilityDistribution NORMAL>;

        $d107 = (double) b0;

        $d108 = $d107 * d86;

        $r11 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d108);

        d109 = interfaceinvoke $r10.<com.opengamma.analytics.math.statistics.distribution.ProbabilityDistribution: double getCDF(java.lang.Object)>($r11);

        $r12 = <com.opengamma.analytics.financial.model.volatility.BlackScholesFormulaRepository: com.opengamma.analytics.math.statistics.distribution.ProbabilityDistribution NORMAL>;

        $d110 = (double) b0;

        $d111 = $d110 * d93;

        $r13 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d111);

        d7 = interfaceinvoke $r12.<com.opengamma.analytics.math.statistics.distribution.ProbabilityDistribution: double getCDF(java.lang.Object)>($r13);

        $b34 = d109 cmpg 1.0E-13;

        if $b34 >= 0 goto label56;

        $d112 = 0.0;

        goto label58;

     label56:
        $z6 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d105);

        if $z6 == 0 goto label57;

        $b16 = neg b0;

        $d42 = (double) $b16;

        $d41 = d5 - d4;

        $d43 = staticinvoke <java.lang.Math: double signum(double)>($d41);

        $d44 = $d42 * $d43;

        $d112 = $d44 * d105;

        goto label58;

     label57:
        $b14 = neg b0;

        $d30 = (double) $b14;

        $d27 = d5 - d4;

        $d28 = $d27 * d105;

        $d29 = $d28 * d109;

        $d112 = $d30 * $d29;

     label58:
        d8 = $d112;

        $b35 = d7 cmpg 1.0E-13;

        if $b35 >= 0 goto label59;

        $d113 = 0.0;

        goto label61;

     label59:
        $z7 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d105);

        if $z7 == 0 goto label60;

        $d37 = (double) b0;

        $d38 = staticinvoke <java.lang.Math: double signum(double)>(d4);

        $d39 = neg $d38;

        $d40 = $d39 * d6;

        $d113 = $d37 * $d40;

        goto label61;

     label60:
        $d34 = (double) b0;

        $d31 = neg d4;

        $d32 = $d31 * d106;

        $d33 = $d32 * d7;

        $d113 = $d34 * $d33;

     label61:
        d9 = $d113;

        $d114 = d105 * d3;

        d115 = $d114 / d76;

        $z16 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d115);

        if $z16 == 0 goto label62;

        d115 = 1.0;

     label62:
        $b15 = d101 cmpg 1.0E-13;

        if $b15 >= 0 goto label63;

        $d116 = 0.0;

        goto label64;

     label63:
        $d35 = -0.5 * d101;

        $d116 = $d35 * d115;

     label64:
        $d36 = $d116 + d8;

        d11 = $d36 + d9;

        $z8 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d11);

        if $z8 == 0 goto label65;

        $d117 = 0.0;

        goto label66;

     label65:
        $d117 = d11;

     label66:
        return $d117;
    }

    public static double charm(double, double, double, double, double, double, boolean)
    {
        double d0, d1, d2, d3, d4, d5, d6, d7, d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21, $d22, $d23, $d24, $d25, $d26, $d27, $d28, $d29, $d30, $d31, $d32, d33, d34, $d37, $d38, $d39, d40, $d41, $d43, d44, $d45, d46, $d47, $d49, d50, $d51, $d53, $d54, $d55, $d56, d57, $d58, d59, $d60, d61, $d62, $d64, $d65, $d66, $d67, $d68, d69, $d70, $d71, $d72, $d73, $d74, d75, $d76, $d77, d78, d79, $d80, $d82, d83, d84, $d85, $d86, d87, $d88, $d89, $d90;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19, $z20;
        byte b0, $b1, $b2, $b3, $b4, $b5, $b6, $b7, $b8, $b9, $b10, $b11, $b12, $b13, $b14, $b15, $b16, $b17, $b18, $b19, $b20, $b21;
        java.lang.Object[] $r0, $r2, $r4, $r6;
        java.lang.Double $r1, $r3, $r5, $r7, $r9, $r11;
        com.opengamma.analytics.math.statistics.distribution.ProbabilityDistribution $r8, $r10;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        d2 := @parameter2: double;

        d3 := @parameter3: double;

        d4 := @parameter4: double;

        d5 := @parameter5: double;

        z0 := @parameter6: boolean;

        $b1 = d0 cmpl 0.0;

        if $b1 < 0 goto label01;

        $z13 = 1;

        goto label02;

     label01:
        $z13 = 0;

     label02:
        $r0 = newarray (java.lang.Object)[1];

        $r1 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d0);

        $r0[0] = $r1;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String,java.lang.Object[])>($z13, "negative/NaN spot; have {}", $r0);

        $b2 = d1 cmpl 0.0;

        if $b2 < 0 goto label03;

        $z14 = 1;

        goto label04;

     label03:
        $z14 = 0;

     label04:
        $r2 = newarray (java.lang.Object)[1];

        $r3 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d1);

        $r2[0] = $r3;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String,java.lang.Object[])>($z14, "negative/NaN strike; have {}", $r2);

        $b3 = d2 cmpl 0.0;

        if $b3 < 0 goto label05;

        $z15 = 1;

        goto label06;

     label05:
        $z15 = 0;

     label06:
        $r4 = newarray (java.lang.Object)[1];

        $r5 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d2);

        $r4[0] = $r5;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String,java.lang.Object[])>($z15, "negative/NaN timeToExpiry; have {}", $r4);

        $b4 = d3 cmpl 0.0;

        if $b4 < 0 goto label07;

        $z16 = 1;

        goto label08;

     label07:
        $z16 = 0;

     label08:
        $r6 = newarray (java.lang.Object)[1];

        $r7 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d3);

        $r6[0] = $r7;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String,java.lang.Object[])>($z16, "negative/NaN lognormalVol; have {}", $r6);

        $z1 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d4);

        staticinvoke <com.opengamma.util.ArgumentChecker: void isFalse(boolean,java.lang.String)>($z1, "interestRate is NaN");

        $z2 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d5);

        staticinvoke <com.opengamma.util.ArgumentChecker: void isFalse(boolean,java.lang.String)>($z2, "costOfCarry is NaN");

        d6 = staticinvoke <java.lang.Math: double sqrt(double)>(d2);

        d33 = d3 * d6;

        $z3 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d33);

        if $z3 == 0 goto label09;

        d33 = 1.0;

     label09:
        $d10 = d5 - d4;

        $d11 = $d10 * d2;

        d34 = staticinvoke <java.lang.Math: double exp(double)>($d11);

        $b5 = d34 cmpg 1.0E-13;

        if $b5 >= 0 goto label10;

        return 0.0;

     label10:
        $z4 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d34);

        if $z4 == 0 goto label11;

        d34 = 1.0;

     label11:
        if z0 == 0 goto label12;

        $b19 = 1;

        goto label13;

     label12:
        $b19 = -1;

     label13:
        b0 = $b19;

        $d12 = d0 - d1;

        $d13 = staticinvoke <java.lang.Math: double abs(double)>($d12);

        $b6 = $d13 cmpg 1.0E-13;

        if $b6 < 0 goto label15;

        $b10 = d0 cmpl 1.0E13;

        if $b10 <= 0 goto label14;

        $b18 = d1 cmpl 1.0E13;

        if $b18 > 0 goto label15;

     label14:
        $b11 = d33 cmpl 1.0E13;

        if $b11 <= 0 goto label28;

     label15:
        $d37 = staticinvoke <java.lang.Math: double abs(double)>(d5);

        $d38 = $d37 / d3;

        $z17 = staticinvoke <java.lang.Double: boolean isNaN(double)>($d38);

        if $z17 == 0 goto label16;

        $d29 = staticinvoke <java.lang.Math: double signum(double)>(d5);

        $d30 = 0.5 * d3;

        $d39 = $d29 + $d30;

        goto label17;

     label16:
        $d15 = d5 / d3;

        $d14 = 0.5 * d3;

        $d39 = $d15 + $d14;

     label17:
        d40 = $d39;

        $d16 = staticinvoke <java.lang.Math: double abs(double)>($d39);

        $b7 = $d16 cmpg 1.0E-13;

        if $b7 >= 0 goto label18;

        $d41 = 0.0;

        goto label19;

     label18:
        $d41 = $d39 * d6;

     label19:
        $z5 = staticinvoke <java.lang.Double: boolean isNaN(double)>($d41);

        if $z5 == 0 goto label20;

        $d43 = staticinvoke <java.lang.Math: double signum(double)>(d40);

        goto label21;

     label20:
        $d43 = $d41;

     label21:
        d44 = $d43;

        $d17 = staticinvoke <java.lang.Math: double abs(double)>(d5);

        $d18 = $d17 / d3;

        $z6 = staticinvoke <java.lang.Double: boolean isNaN(double)>($d18);

        if $z6 == 0 goto label22;

        $d27 = staticinvoke <java.lang.Math: double signum(double)>(d5);

        $d28 = 0.5 * d3;

        $d45 = $d27 - $d28;

        goto label23;

     label22:
        $d20 = d5 / d3;

        $d19 = 0.5 * d3;

        $d45 = $d20 - $d19;

     label23:
        d46 = $d45;

        $d21 = staticinvoke <java.lang.Math: double abs(double)>($d45);

        $b8 = $d21 cmpg 1.0E-13;

        if $b8 >= 0 goto label24;

        $d47 = 0.0;

        goto label25;

     label24:
        $d47 = $d45 * d6;

     label25:
        $z7 = staticinvoke <java.lang.Double: boolean isNaN(double)>($d47);

        if $z7 == 0 goto label26;

        $d49 = staticinvoke <java.lang.Math: double signum(double)>(d46);

        goto label27;

     label26:
        $d49 = $d47;

     label27:
        d50 = $d49;

        goto label43;

     label28:
        $b12 = d33 cmpg 1.0E-13;

        if $b12 >= 0 goto label33;

        $d32 = staticinvoke <java.lang.Math: double abs(double)>(d5);

        $b16 = $d32 cmpl 1.0E13;

        if $b16 <= 0 goto label29;

        $b17 = d6 cmpg 1.0E-13;

        if $b17 >= 0 goto label29;

        $d51 = staticinvoke <java.lang.Math: double signum(double)>(d5);

        goto label30;

     label29:
        $d51 = d5 * d6;

     label30:
        $d53 = d0 / d1;

        $d54 = staticinvoke <java.lang.Math: double log(double)>($d53);

        $d55 = $d54 / d6;

        $d56 = $d55 + $d51;

        d57 = $d56 / d3;

        $z18 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d57);

        if $z18 == 0 goto label31;

        $d58 = 0.0;

        goto label32;

     label31:
        $d58 = d57;

     label32:
        d44 = $d58;

        d50 = $d58;

        goto label43;

     label33:
        $d31 = d5 * d6;

        d59 = $d31 / d3;

        $b13 = d5 cmpl 0.0;

        if $b13 < 0 goto label34;

        $d60 = 1.0;

        goto label35;

     label34:
        $d60 = -1.0;

     label35:
        d61 = $d60;

        $z11 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d59);

        if $z11 == 0 goto label37;

        $b14 = d3 cmpg 1.0E13;

        if $b14 >= 0 goto label36;

        $b15 = d3 cmpl 1.0E-13;

        if $b15 <= 0 goto label36;

        $d62 = $d60 / d3;

        goto label38;

     label36:
        $d62 = d61 * d6;

        goto label38;

     label37:
        $d62 = d59;

     label38:
        $d64 = d0 / d1;

        $d65 = staticinvoke <java.lang.Math: double log(double)>($d64);

        $d66 = $d65 / d33;

        $d67 = $d66 + $d62;

        $d68 = 0.5 * d33;

        d69 = $d67 + $d68;

        $d70 = d0 / d1;

        $d71 = staticinvoke <java.lang.Math: double log(double)>($d70);

        $d72 = $d71 / d33;

        $d73 = $d72 + $d62;

        $d74 = 0.5 * d33;

        d75 = $d73 - $d74;

        $z19 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d69);

        if $z19 == 0 goto label39;

        $d76 = 0.0;

        goto label40;

     label39:
        $d76 = d69;

     label40:
        d44 = $d76;

        $z12 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d75);

        if $z12 == 0 goto label41;

        $d77 = 0.0;

        goto label42;

     label41:
        $d77 = d75;

     label42:
        d50 = $d77;

     label43:
        d78 = d5 / d33;

        $z20 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d78);

        if $z20 == 0 goto label44;

        d78 = 1.0;

     label44:
        d79 = d50 / d2;

        $z8 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d79);

        if $z8 == 0 goto label46;

        $b9 = d50 cmpl 0.0;

        if $b9 < 0 goto label45;

        $d80 = 1.0;

        goto label47;

     label45:
        $d80 = -1.0;

        goto label47;

     label46:
        $d80 = d79;

     label47:
        $d82 = 0.5 * $d80;

        d83 = d78 - $d82;

        $r8 = <com.opengamma.analytics.financial.model.volatility.BlackScholesFormulaRepository: com.opengamma.analytics.math.statistics.distribution.ProbabilityDistribution NORMAL>;

        $r9 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d44);

        d84 = interfaceinvoke $r8.<com.opengamma.analytics.math.statistics.distribution.ProbabilityDistribution: double getPDF(java.lang.Object)>($r9);

        $r10 = <com.opengamma.analytics.financial.model.volatility.BlackScholesFormulaRepository: com.opengamma.analytics.math.statistics.distribution.ProbabilityDistribution NORMAL>;

        $d85 = (double) b0;

        $d86 = $d85 * d44;

        $r11 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d86);

        d87 = interfaceinvoke $r10.<com.opengamma.analytics.math.statistics.distribution.ProbabilityDistribution: double getCDF(java.lang.Object)>($r11);

        $b20 = d84 cmpg 1.0E-13;

        if $b20 >= 0 goto label48;

        $d88 = 0.0;

        goto label50;

     label48:
        $z9 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d83);

        if $z9 == 0 goto label49;

        $d88 = 0.0;

        goto label50;

     label49:
        $d88 = d84 * d83;

     label50:
        d7 = $d88;

        $b21 = d87 cmpg 1.0E-13;

        if $b21 >= 0 goto label51;

        $d89 = 0.0;

        goto label52;

     label51:
        $d22 = d5 - d4;

        $d89 = $d22 * d87;

     label52:
        $d26 = neg d34;

        $d23 = (double) b0;

        $d24 = $d23 * $d89;

        $d25 = d7 + $d24;

        d9 = $d26 * $d25;

        $z10 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d9);

        if $z10 == 0 goto label53;

        $d90 = 0.0;

        goto label54;

     label53:
        $d90 = d9;

     label54:
        return $d90;
    }

    public static double dualCharm(double, double, double, double, double, double, boolean)
    {
        double d0, d1, d2, d3, d4, d5, d6, d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21, $d22, $d23, $d24, $d25, $d26, $d27, $d28, $d29, $d30, $d31, $d32, $d33, d34, d35, $d38, $d39, $d40, d41, $d42, $d44, d45, $d46, d47, $d48, $d50, d51, $d52, $d54, $d55, $d56, $d57, d58, $d59, d60, $d61, d62, $d63, $d65, $d66, $d67, $d68, $d69, d70, $d71, $d72, $d73, $d74, $d75, d76, $d77, $d78, $d80, d81, d82, d83, $d84, $d86, d87, $d88, $d89, d90, $d91, d92, $d93, $d95;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19, $z20;
        byte b0, $b1, $b2, $b3, $b4, $b5, $b6, $b7, $b8, $b9, $b10, $b11, $b12, $b13, $b14, $b15, $b16, $b17, $b18, $b19, $b20, $b21, $b22, $b23, $b24, $b25;
        java.lang.Object[] $r0, $r2, $r4, $r6;
        java.lang.Double $r1, $r3, $r5, $r7, $r9, $r11;
        com.opengamma.analytics.math.statistics.distribution.ProbabilityDistribution $r8, $r10;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        d2 := @parameter2: double;

        d3 := @parameter3: double;

        d4 := @parameter4: double;

        d5 := @parameter5: double;

        z0 := @parameter6: boolean;

        $b1 = d0 cmpl 0.0;

        if $b1 < 0 goto label01;

        $z14 = 1;

        goto label02;

     label01:
        $z14 = 0;

     label02:
        $r0 = newarray (java.lang.Object)[1];

        $r1 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d0);

        $r0[0] = $r1;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String,java.lang.Object[])>($z14, "negative/NaN spot; have {}", $r0);

        $b2 = d1 cmpl 0.0;

        if $b2 < 0 goto label03;

        $z15 = 1;

        goto label04;

     label03:
        $z15 = 0;

     label04:
        $r2 = newarray (java.lang.Object)[1];

        $r3 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d1);

        $r2[0] = $r3;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String,java.lang.Object[])>($z15, "negative/NaN strike; have {}", $r2);

        $b3 = d2 cmpl 0.0;

        if $b3 < 0 goto label05;

        $z16 = 1;

        goto label06;

     label05:
        $z16 = 0;

     label06:
        $r4 = newarray (java.lang.Object)[1];

        $r5 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d2);

        $r4[0] = $r5;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String,java.lang.Object[])>($z16, "negative/NaN timeToExpiry; have {}", $r4);

        $b4 = d3 cmpl 0.0;

        if $b4 < 0 goto label07;

        $z17 = 1;

        goto label08;

     label07:
        $z17 = 0;

     label08:
        $r6 = newarray (java.lang.Object)[1];

        $r7 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d3);

        $r6[0] = $r7;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String,java.lang.Object[])>($z17, "negative/NaN lognormalVol; have {}", $r6);

        $z1 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d4);

        staticinvoke <com.opengamma.util.ArgumentChecker: void isFalse(boolean,java.lang.String)>($z1, "interestRate is NaN");

        $z2 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d5);

        staticinvoke <com.opengamma.util.ArgumentChecker: void isFalse(boolean,java.lang.String)>($z2, "costOfCarry is NaN");

        d6 = staticinvoke <java.lang.Math: double sqrt(double)>(d2);

        d34 = d3 * d6;

        $z3 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d34);

        if $z3 == 0 goto label09;

        d34 = 1.0;

     label09:
        $d8 = neg d4;

        $d9 = $d8 * d2;

        d35 = staticinvoke <java.lang.Math: double exp(double)>($d9);

        $b5 = d35 cmpg 1.0E-13;

        if $b5 >= 0 goto label10;

        return 0.0;

     label10:
        $z4 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d35);

        if $z4 == 0 goto label11;

        d35 = 1.0;

     label11:
        if z0 == 0 goto label12;

        $b22 = 1;

        goto label13;

     label12:
        $b22 = -1;

     label13:
        b0 = $b22;

        $d10 = d0 - d1;

        $d11 = staticinvoke <java.lang.Math: double abs(double)>($d10);

        $b6 = $d11 cmpg 1.0E-13;

        if $b6 < 0 goto label15;

        $b13 = d0 cmpl 1.0E13;

        if $b13 <= 0 goto label14;

        $b21 = d1 cmpl 1.0E13;

        if $b21 > 0 goto label15;

     label14:
        $b14 = d34 cmpl 1.0E13;

        if $b14 <= 0 goto label28;

     label15:
        $d38 = staticinvoke <java.lang.Math: double abs(double)>(d5);

        $d39 = $d38 / d3;

        $z18 = staticinvoke <java.lang.Double: boolean isNaN(double)>($d39);

        if $z18 == 0 goto label16;

        $d30 = staticinvoke <java.lang.Math: double signum(double)>(d5);

        $d31 = 0.5 * d3;

        $d40 = $d30 + $d31;

        goto label17;

     label16:
        $d13 = d5 / d3;

        $d12 = 0.5 * d3;

        $d40 = $d13 + $d12;

     label17:
        d41 = $d40;

        $d14 = staticinvoke <java.lang.Math: double abs(double)>($d40);

        $b7 = $d14 cmpg 1.0E-13;

        if $b7 >= 0 goto label18;

        $d42 = 0.0;

        goto label19;

     label18:
        $d42 = $d40 * d6;

     label19:
        $z5 = staticinvoke <java.lang.Double: boolean isNaN(double)>($d42);

        if $z5 == 0 goto label20;

        $d44 = staticinvoke <java.lang.Math: double signum(double)>(d41);

        goto label21;

     label20:
        $d44 = $d42;

     label21:
        d45 = $d44;

        $d15 = staticinvoke <java.lang.Math: double abs(double)>(d5);

        $d16 = $d15 / d3;

        $z6 = staticinvoke <java.lang.Double: boolean isNaN(double)>($d16);

        if $z6 == 0 goto label22;

        $d28 = staticinvoke <java.lang.Math: double signum(double)>(d5);

        $d29 = 0.5 * d3;

        $d46 = $d28 - $d29;

        goto label23;

     label22:
        $d18 = d5 / d3;

        $d17 = 0.5 * d3;

        $d46 = $d18 - $d17;

     label23:
        d47 = $d46;

        $d19 = staticinvoke <java.lang.Math: double abs(double)>($d46);

        $b8 = $d19 cmpg 1.0E-13;

        if $b8 >= 0 goto label24;

        $d48 = 0.0;

        goto label25;

     label24:
        $d48 = $d46 * d6;

     label25:
        $z7 = staticinvoke <java.lang.Double: boolean isNaN(double)>($d48);

        if $z7 == 0 goto label26;

        $d50 = staticinvoke <java.lang.Math: double signum(double)>(d47);

        goto label27;

     label26:
        $d50 = $d48;

     label27:
        d51 = $d50;

        goto label43;

     label28:
        $b15 = d34 cmpg 1.0E-13;

        if $b15 >= 0 goto label33;

        $d33 = staticinvoke <java.lang.Math: double abs(double)>(d5);

        $b19 = $d33 cmpl 1.0E13;

        if $b19 <= 0 goto label29;

        $b20 = d6 cmpg 1.0E-13;

        if $b20 >= 0 goto label29;

        $d52 = staticinvoke <java.lang.Math: double signum(double)>(d5);

        goto label30;

     label29:
        $d52 = d5 * d6;

     label30:
        $d54 = d0 / d1;

        $d55 = staticinvoke <java.lang.Math: double log(double)>($d54);

        $d56 = $d55 / d6;

        $d57 = $d56 + $d52;

        d58 = $d57 / d3;

        $z19 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d58);

        if $z19 == 0 goto label31;

        $d59 = 0.0;

        goto label32;

     label31:
        $d59 = d58;

     label32:
        d45 = $d59;

        d51 = $d59;

        goto label43;

     label33:
        $d32 = d5 * d6;

        d60 = $d32 / d3;

        $b16 = d5 cmpl 0.0;

        if $b16 < 0 goto label34;

        $d61 = 1.0;

        goto label35;

     label34:
        $d61 = -1.0;

     label35:
        d62 = $d61;

        $z12 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d60);

        if $z12 == 0 goto label37;

        $b17 = d3 cmpg 1.0E13;

        if $b17 >= 0 goto label36;

        $b18 = d3 cmpl 1.0E-13;

        if $b18 <= 0 goto label36;

        $d63 = $d61 / d3;

        goto label38;

     label36:
        $d63 = d62 * d6;

        goto label38;

     label37:
        $d63 = d60;

     label38:
        $d65 = d0 / d1;

        $d66 = staticinvoke <java.lang.Math: double log(double)>($d65);

        $d67 = $d66 / d34;

        $d68 = $d67 + $d63;

        $d69 = 0.5 * d34;

        d70 = $d68 + $d69;

        $d71 = d0 / d1;

        $d72 = staticinvoke <java.lang.Math: double log(double)>($d71);

        $d73 = $d72 / d34;

        $d74 = $d73 + $d63;

        $d75 = 0.5 * d34;

        d76 = $d74 - $d75;

        $z20 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d70);

        if $z20 == 0 goto label39;

        $d77 = 0.0;

        goto label40;

     label39:
        $d77 = d70;

     label40:
        d45 = $d77;

        $z13 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d76);

        if $z13 == 0 goto label41;

        $d78 = 0.0;

        goto label42;

     label41:
        $d78 = d76;

     label42:
        d51 = $d78;

     label43:
        $b23 = d2 cmpg 1.0E-13;

        if $b23 >= 0 goto label47;

        $d23 = d0 - d1;

        $d24 = staticinvoke <java.lang.Math: double abs(double)>($d23);

        $b10 = $d24 cmpg 1.0E-13;

        if $b10 < 0 goto label44;

        $b11 = d0 cmpl 1.0E13;

        if $b11 <= 0 goto label45;

        $b12 = d1 cmpl 1.0E13;

        if $b12 <= 0 goto label45;

     label44:
        $d80 = 1.0 / d34;

        goto label46;

     label45:
        $d25 = d0 / d1;

        $d26 = staticinvoke <java.lang.Math: double log(double)>($d25);

        $d27 = $d26 / d34;

        $d80 = $d27 / d2;

     label46:
        d81 = $d80;

        goto label52;

     label47:
        d82 = d5 / d34;

        $z8 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d82);

        if $z8 == 0 goto label48;

        d82 = 1.0;

     label48:
        d83 = d45 / d2;

        $z9 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d83);

        if $z9 == 0 goto label50;

        $b9 = d45 cmpl 0.0;

        if $b9 < 0 goto label49;

        $d84 = 1.0;

        goto label51;

     label49:
        $d84 = -1.0;

        goto label51;

     label50:
        $d84 = d83;

     label51:
        $d86 = 0.5 * $d84;

        d81 = d82 - $d86;

     label52:
        $r8 = <com.opengamma.analytics.financial.model.volatility.BlackScholesFormulaRepository: com.opengamma.analytics.math.statistics.distribution.ProbabilityDistribution NORMAL>;

        $r9 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d51);

        d87 = interfaceinvoke $r8.<com.opengamma.analytics.math.statistics.distribution.ProbabilityDistribution: double getPDF(java.lang.Object)>($r9);

        $r10 = <com.opengamma.analytics.financial.model.volatility.BlackScholesFormulaRepository: com.opengamma.analytics.math.statistics.distribution.ProbabilityDistribution NORMAL>;

        $d88 = (double) b0;

        $d89 = $d88 * d51;

        $r11 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d89);

        d90 = interfaceinvoke $r10.<com.opengamma.analytics.math.statistics.distribution.ProbabilityDistribution: double getCDF(java.lang.Object)>($r11);

        $b24 = d87 cmpg 1.0E-13;

        if $b24 >= 0 goto label53;

        $d91 = 0.0;

        goto label55;

     label53:
        $z10 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d81);

        if $z10 == 0 goto label54;

        $d91 = 0.0;

        goto label55;

     label54:
        $d91 = d87 * d81;

     label55:
        d92 = $d91;

        $b25 = d90 cmpg 1.0E-13;

        if $b25 >= 0 goto label56;

        $d93 = 0.0;

        goto label57;

     label56:
        $d93 = d4 * d90;

     label57:
        $d20 = (double) b0;

        $d21 = $d20 * $d93;

        $d22 = d92 - $d21;

        d7 = d35 * $d22;

        $z11 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d7);

        if $z11 == 0 goto label58;

        $d95 = 0.0;

        goto label59;

     label58:
        $d95 = d7;

     label59:
        return $d95;
    }

    public static double vega(double, double, double, double, double, double)
    {
        double d0, d1, d2, d3, d4, d5, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21, $d22, $d23, $d24, d26, d27, $d28, d29, d30, d31, $d34, $d35, d37, $d38, d39, $d40, $d41, $d43, $d44, $d45, $d46, d47, $d48, d49, $d50, d51, $d52, $d53, $d54, $d55, $d56, $d57, d58, $d59, $d61;
        byte $b0, $b1, $b2, $b3, $b4, $b5, $b6, $b7, $b8, $b9, $b10, $b11, $b12, $b13, $b14, $b15, $b16, $b17, $b18, $b19, $b20, $b21, $b22, $b23, $b24, $b25, $b26;
        java.lang.Object[] $r0, $r2, $r4, $r6;
        java.lang.Double $r1, $r3, $r5, $r7, $r9;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11;
        com.opengamma.analytics.math.statistics.distribution.ProbabilityDistribution $r8;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        d2 := @parameter2: double;

        d3 := @parameter3: double;

        d4 := @parameter4: double;

        d5 := @parameter5: double;

        $b0 = d0 cmpl 0.0;

        if $b0 < 0 goto label01;

        $z6 = 1;

        goto label02;

     label01:
        $z6 = 0;

     label02:
        $r0 = newarray (java.lang.Object)[1];

        $r1 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d0);

        $r0[0] = $r1;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String,java.lang.Object[])>($z6, "negative/NaN spot; have {}", $r0);

        $b1 = d1 cmpl 0.0;

        if $b1 < 0 goto label03;

        $z7 = 1;

        goto label04;

     label03:
        $z7 = 0;

     label04:
        $r2 = newarray (java.lang.Object)[1];

        $r3 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d1);

        $r2[0] = $r3;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String,java.lang.Object[])>($z7, "negative/NaN strike; have {}", $r2);

        $b2 = d2 cmpl 0.0;

        if $b2 < 0 goto label05;

        $z8 = 1;

        goto label06;

     label05:
        $z8 = 0;

     label06:
        $r4 = newarray (java.lang.Object)[1];

        $r5 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d2);

        $r4[0] = $r5;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String,java.lang.Object[])>($z8, "negative/NaN timeToExpiry; have {}", $r4);

        $b3 = d3 cmpl 0.0;

        if $b3 < 0 goto label07;

        $z9 = 1;

        goto label08;

     label07:
        $z9 = 0;

     label08:
        $r6 = newarray (java.lang.Object)[1];

        $r7 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d3);

        $r6[0] = $r7;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String,java.lang.Object[])>($z9, "negative/NaN lognormalVol; have {}", $r6);

        $z0 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d4);

        staticinvoke <com.opengamma.util.ArgumentChecker: void isFalse(boolean,java.lang.String)>($z0, "interestRate is NaN");

        $z1 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d5);

        staticinvoke <com.opengamma.util.ArgumentChecker: void isFalse(boolean,java.lang.String)>($z1, "costOfCarry is NaN");

        $b4 = d4 cmpl 1.0E13;

        if $b4 <= 0 goto label09;

        $b23 = d5 cmpl 1.0E13;

        if $b23 > 0 goto label11;

     label09:
        $d7 = neg d4;

        $b5 = $d7 cmpl 1.0E13;

        if $b5 <= 0 goto label10;

        $d24 = neg d5;

        $b22 = $d24 cmpl 1.0E13;

        if $b22 > 0 goto label11;

     label10:
        $d8 = d5 - d4;

        $d9 = staticinvoke <java.lang.Math: double abs(double)>($d8);

        $b6 = $d9 cmpg 1.0E-13;

        if $b6 >= 0 goto label12;

     label11:
        d26 = 1.0;

        goto label17;

     label12:
        d27 = d5 - d4;

        $b7 = d27 cmpl 1.0E13;

        if $b7 <= 0 goto label15;

        $b21 = d5 cmpl 1.0E13;

        if $b21 <= 0 goto label13;

        $d28 = 0.0;

        goto label14;

     label13:
        $d28 = #Infinity;

     label14:
        return $d28;

     label15:
        $d10 = neg d27;

        $b8 = $d10 cmpl 1.0E13;

        if $b8 <= 0 goto label16;

        return 0.0;

     label16:
        $d11 = d27 * d2;

        d26 = staticinvoke <java.lang.Math: double exp(double)>($d11);

     label17:
        d29 = staticinvoke <java.lang.Math: double sqrt(double)>(d2);

        d30 = d3 * d29;

        $z2 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d30);

        if $z2 == 0 goto label18;

        d30 = 1.0;

     label18:
        $d12 = d5 * d2;

        d31 = staticinvoke <java.lang.Math: double exp(double)>($d12);

        $z3 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d31);

        if $z3 == 0 goto label19;

     label19:
        $d13 = d0 - d1;

        $d14 = staticinvoke <java.lang.Math: double abs(double)>($d13);

        $b9 = $d14 cmpg 1.0E-13;

        if $b9 < 0 goto label21;

        $b11 = d0 cmpl 1.0E13;

        if $b11 <= 0 goto label20;

        $b20 = d1 cmpl 1.0E13;

        if $b20 > 0 goto label21;

     label20:
        $b12 = d30 cmpl 1.0E13;

        if $b12 <= 0 goto label26;

     label21:
        $d34 = staticinvoke <java.lang.Math: double abs(double)>(d5);

        $b24 = $d34 cmpg 1.0E-13;

        if $b24 >= 0 goto label22;

        $b10 = d3 cmpg 1.0E-13;

        if $b10 >= 0 goto label22;

        $d19 = staticinvoke <java.lang.Math: double signum(double)>(d5);

        $d20 = 0.5 * d3;

        $d35 = $d19 + $d20;

        goto label23;

     label22:
        $d16 = d5 / d3;

        $d15 = 0.5 * d3;

        $d35 = $d16 + $d15;

     label23:
        d37 = $d35 * d29;

        $z10 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d37);

        if $z10 == 0 goto label24;

        $d38 = 0.0;

        goto label25;

     label24:
        $d38 = d37;

     label25:
        d39 = $d38;

        goto label38;

     label26:
        $b13 = d30 cmpg 1.0E-13;

        if $b13 < 0 goto label27;

        $d21 = 1.0E13 * d1;

        $b15 = d0 cmpl $d21;

        if $b15 > 0 goto label27;

        $d22 = 1.0E13 * d0;

        $b16 = d1 cmpl $d22;

        if $b16 <= 0 goto label32;

     label27:
        $d40 = staticinvoke <java.lang.Math: double abs(double)>(d5);

        $b25 = $d40 cmpl 1.0E13;

        if $b25 <= 0 goto label28;

        $b14 = d29 cmpg 1.0E-13;

        if $b14 >= 0 goto label28;

        $d41 = staticinvoke <java.lang.Math: double signum(double)>(d5);

        goto label29;

     label28:
        $d41 = d5 * d29;

     label29:
        $d43 = d0 / d1;

        $d44 = staticinvoke <java.lang.Math: double log(double)>($d43);

        $d45 = $d44 / d29;

        $d46 = $d45 + $d41;

        d47 = $d46 / d3;

        $z11 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d47);

        if $z11 == 0 goto label30;

        $d48 = 0.0;

        goto label31;

     label30:
        $d48 = d47;

     label31:
        d39 = $d48;

        goto label38;

     label32:
        $d23 = d5 * d29;

        d49 = $d23 / d3;

        $b17 = d5 cmpl 0.0;

        if $b17 < 0 goto label33;

        $d50 = 1.0;

        goto label34;

     label33:
        $d50 = -1.0;

     label34:
        d51 = $d50;

        $z5 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d49);

        if $z5 == 0 goto label36;

        $b18 = d3 cmpg 1.0E13;

        if $b18 >= 0 goto label35;

        $b19 = d3 cmpl 1.0E-13;

        if $b19 <= 0 goto label35;

        $d52 = $d50 / d3;

        goto label37;

     label35:
        $d52 = d51 * d29;

        goto label37;

     label36:
        $d52 = d49;

     label37:
        $d53 = d0 / d1;

        $d54 = staticinvoke <java.lang.Math: double log(double)>($d53);

        $d55 = $d54 / d30;

        $d56 = $d55 + $d52;

        $d57 = 0.5 * d30;

        d39 = $d56 + $d57;

     label38:
        $r8 = <com.opengamma.analytics.financial.model.volatility.BlackScholesFormulaRepository: com.opengamma.analytics.math.statistics.distribution.ProbabilityDistribution NORMAL>;

        $r9 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d39);

        d58 = interfaceinvoke $r8.<com.opengamma.analytics.math.statistics.distribution.ProbabilityDistribution: double getPDF(java.lang.Object)>($r9);

        $b26 = d58 cmpg 1.0E-13;

        if $b26 >= 0 goto label39;

        $d59 = 0.0;

        goto label40;

     label39:
        $d17 = d26 * d58;

        $d18 = $d17 * d0;

        $d59 = $d18 * d29;

     label40:
        $z4 = staticinvoke <java.lang.Double: boolean isNaN(double)>($d59);

        if $z4 == 0 goto label41;

        $d61 = #Infinity;

        goto label42;

     label41:
        $d61 = $d59;

     label42:
        return $d61;
    }

    public static double vanna(double, double, double, double, double, double)
    {
        double d0, d1, d2, d3, d4, d5, d6, d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21, $d22, $d23, $d24, $d25, $d26, $d27, $d28, $d29, $d30, $d31, d32, $d35, $d36, $d37, d38, $d39, $d41, d42, $d43, d44, $d45, $d47, d48, $d49, $d51, $d52, $d53, $d54, d55, $d56, d57, $d58, d59, $d60, $d62, $d63, $d64, $d65, $d66, d67, $d68, $d69, $d70, $d71, $d72, $d73, $d74, d76, d77, $d78, d79, d80, $d81;
        byte $b0, $b1, $b2, $b3, $b4, $b5, $b6, $b7, $b8, $b9, $b10, $b11, $b12, $b13, $b14, $b15, $b16, $b17, $b18, $b19, $b20, $b21, $b22, $b23, $b24, $b25;
        java.lang.Object[] $r0, $r2, $r4, $r6;
        java.lang.Double $r1, $r3, $r5, $r7, $r9;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15;
        com.opengamma.analytics.math.statistics.distribution.ProbabilityDistribution $r8;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        d2 := @parameter2: double;

        d3 := @parameter3: double;

        d4 := @parameter4: double;

        d5 := @parameter5: double;

        $b0 = d0 cmpl 0.0;

        if $b0 < 0 goto label01;

        $z9 = 1;

        goto label02;

     label01:
        $z9 = 0;

     label02:
        $r0 = newarray (java.lang.Object)[1];

        $r1 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d0);

        $r0[0] = $r1;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String,java.lang.Object[])>($z9, "negative/NaN spot; have {}", $r0);

        $b1 = d1 cmpl 0.0;

        if $b1 < 0 goto label03;

        $z10 = 1;

        goto label04;

     label03:
        $z10 = 0;

     label04:
        $r2 = newarray (java.lang.Object)[1];

        $r3 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d1);

        $r2[0] = $r3;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String,java.lang.Object[])>($z10, "negative/NaN strike; have {}", $r2);

        $b2 = d2 cmpl 0.0;

        if $b2 < 0 goto label05;

        $z11 = 1;

        goto label06;

     label05:
        $z11 = 0;

     label06:
        $r4 = newarray (java.lang.Object)[1];

        $r5 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d2);

        $r4[0] = $r5;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String,java.lang.Object[])>($z11, "negative/NaN timeToExpiry; have {}", $r4);

        $b3 = d3 cmpl 0.0;

        if $b3 < 0 goto label07;

        $z12 = 1;

        goto label08;

     label07:
        $z12 = 0;

     label08:
        $r6 = newarray (java.lang.Object)[1];

        $r7 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d3);

        $r6[0] = $r7;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String,java.lang.Object[])>($z12, "negative/NaN lognormalVol; have {}", $r6);

        $z0 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d4);

        staticinvoke <com.opengamma.util.ArgumentChecker: void isFalse(boolean,java.lang.String)>($z0, "interestRate is NaN");

        $z1 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d5);

        staticinvoke <com.opengamma.util.ArgumentChecker: void isFalse(boolean,java.lang.String)>($z1, "costOfCarry is NaN");

        d6 = staticinvoke <java.lang.Math: double sqrt(double)>(d2);

        d32 = d3 * d6;

        $z2 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d32);

        if $z2 == 0 goto label09;

        d32 = 1.0;

     label09:
        $d8 = d0 - d1;

        $d9 = staticinvoke <java.lang.Math: double abs(double)>($d8);

        $b4 = $d9 cmpg 1.0E-13;

        if $b4 < 0 goto label11;

        $b16 = d0 cmpl 1.0E13;

        if $b16 <= 0 goto label10;

        $b24 = d1 cmpl 1.0E13;

        if $b24 > 0 goto label11;

     label10:
        $b17 = d32 cmpl 1.0E13;

        if $b17 <= 0 goto label24;

     label11:
        $d35 = staticinvoke <java.lang.Math: double abs(double)>(d5);

        $d36 = $d35 / d3;

        $z13 = staticinvoke <java.lang.Double: boolean isNaN(double)>($d36);

        if $z13 == 0 goto label12;

        $d28 = staticinvoke <java.lang.Math: double signum(double)>(d5);

        $d29 = 0.5 * d3;

        $d37 = $d28 + $d29;

        goto label13;

     label12:
        $d11 = d5 / d3;

        $d10 = 0.5 * d3;

        $d37 = $d11 + $d10;

     label13:
        d38 = $d37;

        $d12 = staticinvoke <java.lang.Math: double abs(double)>($d37);

        $b5 = $d12 cmpg 1.0E-13;

        if $b5 >= 0 goto label14;

        $d39 = 0.0;

        goto label15;

     label14:
        $d39 = $d37 * d6;

     label15:
        $z3 = staticinvoke <java.lang.Double: boolean isNaN(double)>($d39);

        if $z3 == 0 goto label16;

        $d41 = staticinvoke <java.lang.Math: double signum(double)>(d38);

        goto label17;

     label16:
        $d41 = $d39;

     label17:
        d42 = $d41;

        $d13 = staticinvoke <java.lang.Math: double abs(double)>(d5);

        $d14 = $d13 / d3;

        $z4 = staticinvoke <java.lang.Double: boolean isNaN(double)>($d14);

        if $z4 == 0 goto label18;

        $d26 = staticinvoke <java.lang.Math: double signum(double)>(d5);

        $d27 = 0.5 * d3;

        $d43 = $d26 - $d27;

        goto label19;

     label18:
        $d16 = d5 / d3;

        $d15 = 0.5 * d3;

        $d43 = $d16 - $d15;

     label19:
        d44 = $d43;

        $d17 = staticinvoke <java.lang.Math: double abs(double)>($d43);

        $b6 = $d17 cmpg 1.0E-13;

        if $b6 >= 0 goto label20;

        $d45 = 0.0;

        goto label21;

     label20:
        $d45 = $d43 * d6;

     label21:
        $z5 = staticinvoke <java.lang.Double: boolean isNaN(double)>($d45);

        if $z5 == 0 goto label22;

        $d47 = staticinvoke <java.lang.Math: double signum(double)>(d44);

        goto label23;

     label22:
        $d47 = $d45;

     label23:
        d48 = $d47;

        goto label39;

     label24:
        $b18 = d32 cmpg 1.0E-13;

        if $b18 >= 0 goto label29;

        $d31 = staticinvoke <java.lang.Math: double abs(double)>(d5);

        $b22 = $d31 cmpl 1.0E13;

        if $b22 <= 0 goto label25;

        $b23 = d6 cmpg 1.0E-13;

        if $b23 >= 0 goto label25;

        $d49 = staticinvoke <java.lang.Math: double signum(double)>(d5);

        goto label26;

     label25:
        $d49 = d5 * d6;

     label26:
        $d51 = d0 / d1;

        $d52 = staticinvoke <java.lang.Math: double log(double)>($d51);

        $d53 = $d52 / d6;

        $d54 = $d53 + $d49;

        d55 = $d54 / d3;

        $z14 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d55);

        if $z14 == 0 goto label27;

        $d56 = 0.0;

        goto label28;

     label27:
        $d56 = d55;

     label28:
        d42 = $d56;

        d48 = $d56;

        goto label39;

     label29:
        $d30 = d5 * d6;

        d57 = $d30 / d3;

        $b19 = d5 cmpl 0.0;

        if $b19 < 0 goto label30;

        $d58 = 1.0;

        goto label31;

     label30:
        $d58 = -1.0;

     label31:
        d59 = $d58;

        $z7 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d57);

        if $z7 == 0 goto label33;

        $b20 = d3 cmpg 1.0E13;

        if $b20 >= 0 goto label32;

        $b21 = d3 cmpl 1.0E-13;

        if $b21 <= 0 goto label32;

        $d60 = $d58 / d3;

        goto label34;

     label32:
        $d60 = d59 * d6;

        goto label34;

     label33:
        $d60 = d57;

     label34:
        $d62 = d0 / d1;

        $d63 = staticinvoke <java.lang.Math: double log(double)>($d62);

        $d64 = $d63 / d32;

        $d65 = $d64 + $d60;

        $d66 = 0.5 * d32;

        d67 = $d65 + $d66;

        $d68 = d0 / d1;

        $d69 = staticinvoke <java.lang.Math: double log(double)>($d68);

        $d70 = $d69 / d32;

        $d71 = $d70 + $d60;

        $d72 = 0.5 * d32;

        d7 = $d71 - $d72;

        $z15 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d67);

        if $z15 == 0 goto label35;

        $d73 = 0.0;

        goto label36;

     label35:
        $d73 = d67;

     label36:
        d42 = $d73;

        $z8 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d7);

        if $z8 == 0 goto label37;

        $d74 = 0.0;

        goto label38;

     label37:
        $d74 = d7;

     label38:
        d48 = $d74;

     label39:
        $b25 = d4 cmpl 1.0E13;

        if $b25 <= 0 goto label40;

        $b15 = d5 cmpl 1.0E13;

        if $b15 > 0 goto label42;

     label40:
        $d18 = neg d4;

        $b7 = $d18 cmpl 1.0E13;

        if $b7 <= 0 goto label41;

        $d25 = neg d5;

        $b14 = $d25 cmpl 1.0E13;

        if $b14 > 0 goto label42;

     label41:
        $d19 = d5 - d4;

        $d20 = staticinvoke <java.lang.Math: double abs(double)>($d19);

        $b8 = $d20 cmpg 1.0E-13;

        if $b8 >= 0 goto label43;

     label42:
        d76 = 1.0;

        goto label49;

     label43:
        d77 = d5 - d4;

        $b9 = d77 cmpl 1.0E13;

        if $b9 <= 0 goto label47;

        $b12 = d5 cmpl 1.0E13;

        if $b12 <= 0 goto label44;

        $d78 = 0.0;

        goto label46;

     label44:
        $b13 = d48 cmpl 0.0;

        if $b13 < 0 goto label45;

        $d78 = #-Infinity;

        goto label46;

     label45:
        $d78 = #Infinity;

     label46:
        return $d78;

     label47:
        $d21 = neg d77;

        $b10 = $d21 cmpl 1.0E13;

        if $b10 <= 0 goto label48;

        return 0.0;

     label48:
        $d22 = d77 * d2;

        d76 = staticinvoke <java.lang.Math: double exp(double)>($d22);

     label49:
        $r8 = <com.opengamma.analytics.financial.model.volatility.BlackScholesFormulaRepository: com.opengamma.analytics.math.statistics.distribution.ProbabilityDistribution NORMAL>;

        $r9 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d42);

        d79 = interfaceinvoke $r8.<com.opengamma.analytics.math.statistics.distribution.ProbabilityDistribution: double getPDF(java.lang.Object)>($r9);

        $d23 = d48 * d76;

        d80 = $d23 / d3;

        $z6 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d80);

        if $z6 == 0 goto label50;

        d80 = d76;

     label50:
        $b11 = d79 cmpg 1.0E-13;

        if $b11 >= 0 goto label51;

        $d81 = 0.0;

        goto label52;

     label51:
        $d24 = neg d79;

        $d81 = $d24 * d80;

     label52:
        return $d81;
    }

    public static double dualVanna(double, double, double, double, double, double)
    {
        double d0, d1, d2, d3, d4, d5, d6, d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21, $d22, $d23, $d24, d25, $d28, $d29, $d30, d31, $d32, $d34, d35, $d36, d37, $d38, $d40, d41, $d42, $d44, $d45, $d46, $d47, d48, $d49, d50, $d51, d52, $d53, $d55, $d56, $d57, $d58, $d59, d60, $d61, $d62, $d63, $d64, $d65, $d66, $d67, $d68, $d69, d70, d71, d72, $d73;
        byte $b0, $b1, $b2, $b3, $b4, $b5, $b6, $b7, $b8, $b9, $b10, $b11, $b12, $b13, $b14, $b15, $b16, $b17;
        java.lang.Object[] $r0, $r2, $r4, $r6;
        java.lang.Double $r1, $r3, $r5, $r7, $r9;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16;
        com.opengamma.analytics.math.statistics.distribution.ProbabilityDistribution $r8;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        d2 := @parameter2: double;

        d3 := @parameter3: double;

        d4 := @parameter4: double;

        d5 := @parameter5: double;

        $b0 = d0 cmpl 0.0;

        if $b0 < 0 goto label01;

        $z10 = 1;

        goto label02;

     label01:
        $z10 = 0;

     label02:
        $r0 = newarray (java.lang.Object)[1];

        $r1 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d0);

        $r0[0] = $r1;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String,java.lang.Object[])>($z10, "negative/NaN spot; have {}", $r0);

        $b1 = d1 cmpl 0.0;

        if $b1 < 0 goto label03;

        $z11 = 1;

        goto label04;

     label03:
        $z11 = 0;

     label04:
        $r2 = newarray (java.lang.Object)[1];

        $r3 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d1);

        $r2[0] = $r3;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String,java.lang.Object[])>($z11, "negative/NaN strike; have {}", $r2);

        $b2 = d2 cmpl 0.0;

        if $b2 < 0 goto label05;

        $z12 = 1;

        goto label06;

     label05:
        $z12 = 0;

     label06:
        $r4 = newarray (java.lang.Object)[1];

        $r5 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d2);

        $r4[0] = $r5;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String,java.lang.Object[])>($z12, "negative/NaN timeToExpiry; have {}", $r4);

        $b3 = d3 cmpl 0.0;

        if $b3 < 0 goto label07;

        $z13 = 1;

        goto label08;

     label07:
        $z13 = 0;

     label08:
        $r6 = newarray (java.lang.Object)[1];

        $r7 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d3);

        $r6[0] = $r7;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String,java.lang.Object[])>($z13, "negative/NaN lognormalVol; have {}", $r6);

        $z0 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d4);

        staticinvoke <com.opengamma.util.ArgumentChecker: void isFalse(boolean,java.lang.String)>($z0, "interestRate is NaN");

        $z1 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d5);

        staticinvoke <com.opengamma.util.ArgumentChecker: void isFalse(boolean,java.lang.String)>($z1, "costOfCarry is NaN");

        d6 = staticinvoke <java.lang.Math: double sqrt(double)>(d2);

        d25 = d3 * d6;

        $z2 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d25);

        if $z2 == 0 goto label09;

        d25 = 1.0;

     label09:
        $d8 = d0 - d1;

        $d9 = staticinvoke <java.lang.Math: double abs(double)>($d8);

        $b4 = $d9 cmpg 1.0E-13;

        if $b4 < 0 goto label11;

        $b8 = d0 cmpl 1.0E13;

        if $b8 <= 0 goto label10;

        $b16 = d1 cmpl 1.0E13;

        if $b16 > 0 goto label11;

     label10:
        $b9 = d25 cmpl 1.0E13;

        if $b9 <= 0 goto label24;

     label11:
        $d28 = staticinvoke <java.lang.Math: double abs(double)>(d5);

        $d29 = $d28 / d3;

        $z14 = staticinvoke <java.lang.Double: boolean isNaN(double)>($d29);

        if $z14 == 0 goto label12;

        $d21 = staticinvoke <java.lang.Math: double signum(double)>(d5);

        $d22 = 0.5 * d3;

        $d30 = $d21 + $d22;

        goto label13;

     label12:
        $d11 = d5 / d3;

        $d10 = 0.5 * d3;

        $d30 = $d11 + $d10;

     label13:
        d31 = $d30;

        $d12 = staticinvoke <java.lang.Math: double abs(double)>($d30);

        $b5 = $d12 cmpg 1.0E-13;

        if $b5 >= 0 goto label14;

        $d32 = 0.0;

        goto label15;

     label14:
        $d32 = $d30 * d6;

     label15:
        $z3 = staticinvoke <java.lang.Double: boolean isNaN(double)>($d32);

        if $z3 == 0 goto label16;

        $d34 = staticinvoke <java.lang.Math: double signum(double)>(d31);

        goto label17;

     label16:
        $d34 = $d32;

     label17:
        d35 = $d34;

        $d13 = staticinvoke <java.lang.Math: double abs(double)>(d5);

        $d14 = $d13 / d3;

        $z4 = staticinvoke <java.lang.Double: boolean isNaN(double)>($d14);

        if $z4 == 0 goto label18;

        $d19 = staticinvoke <java.lang.Math: double signum(double)>(d5);

        $d20 = 0.5 * d3;

        $d36 = $d19 - $d20;

        goto label19;

     label18:
        $d16 = d5 / d3;

        $d15 = 0.5 * d3;

        $d36 = $d16 - $d15;

     label19:
        d37 = $d36;

        $d17 = staticinvoke <java.lang.Math: double abs(double)>($d36);

        $b6 = $d17 cmpg 1.0E-13;

        if $b6 >= 0 goto label20;

        $d38 = 0.0;

        goto label21;

     label20:
        $d38 = $d36 * d6;

     label21:
        $z5 = staticinvoke <java.lang.Double: boolean isNaN(double)>($d38);

        if $z5 == 0 goto label22;

        $d40 = staticinvoke <java.lang.Math: double signum(double)>(d37);

        goto label23;

     label22:
        $d40 = $d38;

     label23:
        d41 = $d40;

        goto label39;

     label24:
        $b10 = d25 cmpg 1.0E-13;

        if $b10 >= 0 goto label29;

        $d24 = staticinvoke <java.lang.Math: double abs(double)>(d5);

        $b14 = $d24 cmpl 1.0E13;

        if $b14 <= 0 goto label25;

        $b15 = d6 cmpg 1.0E-13;

        if $b15 >= 0 goto label25;

        $d42 = staticinvoke <java.lang.Math: double signum(double)>(d5);

        goto label26;

     label25:
        $d42 = d5 * d6;

     label26:
        $d44 = d0 / d1;

        $d45 = staticinvoke <java.lang.Math: double log(double)>($d44);

        $d46 = $d45 / d6;

        $d47 = $d46 + $d42;

        d48 = $d47 / d3;

        $z15 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d48);

        if $z15 == 0 goto label27;

        $d49 = 0.0;

        goto label28;

     label27:
        $d49 = d48;

     label28:
        d35 = $d49;

        d41 = $d49;

        goto label39;

     label29:
        $d23 = d5 * d6;

        d50 = $d23 / d3;

        $b11 = d5 cmpl 0.0;

        if $b11 < 0 goto label30;

        $d51 = 1.0;

        goto label31;

     label30:
        $d51 = -1.0;

     label31:
        d52 = $d51;

        $z8 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d50);

        if $z8 == 0 goto label33;

        $b12 = d3 cmpg 1.0E13;

        if $b12 >= 0 goto label32;

        $b13 = d3 cmpl 1.0E-13;

        if $b13 <= 0 goto label32;

        $d53 = $d51 / d3;

        goto label34;

     label32:
        $d53 = d52 * d6;

        goto label34;

     label33:
        $d53 = d50;

     label34:
        $d55 = d0 / d1;

        $d56 = staticinvoke <java.lang.Math: double log(double)>($d55);

        $d57 = $d56 / d25;

        $d58 = $d57 + $d53;

        $d59 = 0.5 * d25;

        d60 = $d58 + $d59;

        $d61 = d0 / d1;

        $d62 = staticinvoke <java.lang.Math: double log(double)>($d61);

        $d63 = $d62 / d25;

        $d64 = $d63 + $d53;

        $d65 = 0.5 * d25;

        d7 = $d64 - $d65;

        $z16 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d60);

        if $z16 == 0 goto label35;

        $d66 = 0.0;

        goto label36;

     label35:
        $d66 = d60;

     label36:
        d35 = $d66;

        $z9 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d7);

        if $z9 == 0 goto label37;

        $d67 = 0.0;

        goto label38;

     label37:
        $d67 = d7;

     label38:
        d41 = $d67;

     label39:
        $d68 = neg d4;

        $d69 = $d68 * d2;

        d70 = staticinvoke <java.lang.Math: double exp(double)>($d69);

        $b17 = d70 cmpg 1.0E-13;

        if $b17 >= 0 goto label40;

        return 0.0;

     label40:
        $z6 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d70);

        if $z6 == 0 goto label41;

        d70 = 1.0;

     label41:
        $r8 = <com.opengamma.analytics.financial.model.volatility.BlackScholesFormulaRepository: com.opengamma.analytics.math.statistics.distribution.ProbabilityDistribution NORMAL>;

        $r9 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d41);

        d71 = interfaceinvoke $r8.<com.opengamma.analytics.math.statistics.distribution.ProbabilityDistribution: double getPDF(java.lang.Object)>($r9);

        $d18 = d35 * d70;

        d72 = $d18 / d3;

        $z7 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d72);

        if $z7 == 0 goto label42;

        d72 = d70;

     label42:
        $b7 = d71 cmpg 1.0E-13;

        if $b7 >= 0 goto label43;

        $d73 = 0.0;

        goto label44;

     label43:
        $d73 = d71 * d72;

     label44:
        return $d73;
    }

    public static double vomma(double, double, double, double, double, double)
    {
        double d0, d1, d2, d3, d4, d5, d6, d7, d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21, $d22, $d23, $d24, $d25, $d26, $d27, $d28, $d29, $d30, $d31, $d32, $d33, $d34, $d35, $d36, $d37, $d38, d39, $d42, $d43, $d45, d46, $d47, $d48, $d49, d50, $d51, $d52, d53, $d54, d55, d56, $d57, d58, d60, d61, $d62, d63, d64, $d65;
        byte $b0, $b1, $b2, $b3, $b4, $b5, $b6, $b7, $b8, $b9, $b10, $b11, $b12, $b13, $b14, $b15, $b16, $b17, $b18, $b19, $b20, $b21, $b22, $b23, $b24;
        java.lang.Object[] $r0, $r2, $r4, $r6;
        java.lang.Double $r1, $r3, $r5, $r7, $r9;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10;
        com.opengamma.analytics.math.statistics.distribution.ProbabilityDistribution $r8;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        d2 := @parameter2: double;

        d3 := @parameter3: double;

        d4 := @parameter4: double;

        d5 := @parameter5: double;

        $b0 = d0 cmpl 0.0;

        if $b0 < 0 goto label01;

        $z6 = 1;

        goto label02;

     label01:
        $z6 = 0;

     label02:
        $r0 = newarray (java.lang.Object)[1];

        $r1 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d0);

        $r0[0] = $r1;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String,java.lang.Object[])>($z6, "negative/NaN spot; have {}", $r0);

        $b1 = d1 cmpl 0.0;

        if $b1 < 0 goto label03;

        $z7 = 1;

        goto label04;

     label03:
        $z7 = 0;

     label04:
        $r2 = newarray (java.lang.Object)[1];

        $r3 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d1);

        $r2[0] = $r3;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String,java.lang.Object[])>($z7, "negative/NaN strike; have {}", $r2);

        $b2 = d2 cmpl 0.0;

        if $b2 < 0 goto label05;

        $z8 = 1;

        goto label06;

     label05:
        $z8 = 0;

     label06:
        $r4 = newarray (java.lang.Object)[1];

        $r5 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d2);

        $r4[0] = $r5;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String,java.lang.Object[])>($z8, "negative/NaN timeToExpiry; have {}", $r4);

        $b3 = d3 cmpl 0.0;

        if $b3 < 0 goto label07;

        $z9 = 1;

        goto label08;

     label07:
        $z9 = 0;

     label08:
        $r6 = newarray (java.lang.Object)[1];

        $r7 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d3);

        $r6[0] = $r7;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String,java.lang.Object[])>($z9, "negative/NaN lognormalVol; have {}", $r6);

        $z0 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d4);

        staticinvoke <com.opengamma.util.ArgumentChecker: void isFalse(boolean,java.lang.String)>($z0, "interestRate is NaN");

        $z1 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d5);

        staticinvoke <com.opengamma.util.ArgumentChecker: void isFalse(boolean,java.lang.String)>($z1, "costOfCarry is NaN");

        d6 = staticinvoke <java.lang.Math: double sqrt(double)>(d2);

        d39 = d3 * d6;

        $z2 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d39);

        if $z2 == 0 goto label09;

        d39 = 1.0;

     label09:
        $d9 = 1.0E13 * d1;

        $b4 = d0 cmpl $d9;

        if $b4 > 0 goto label10;

        $d10 = 1.0E13 * d0;

        $b5 = d1 cmpl $d10;

        if $b5 > 0 goto label10;

        $b6 = d6 cmpg 1.0E-13;

        if $b6 >= 0 goto label11;

     label10:
        return 0.0;

     label11:
        $d11 = d0 - d1;

        $d12 = staticinvoke <java.lang.Math: double abs(double)>($d11);

        $b7 = $d12 cmpg 1.0E-13;

        if $b7 < 0 goto label13;

        $b18 = d0 cmpl 1.0E13;

        if $b18 <= 0 goto label12;

        $b22 = d1 cmpl 1.0E13;

        if $b22 > 0 goto label13;

     label12:
        $b19 = d6 cmpl 1.0E13;

        if $b19 <= 0 goto label20;

     label13:
        $d42 = staticinvoke <java.lang.Math: double abs(double)>(d5);

        $b23 = $d42 cmpg 1.0E-13;

        if $b23 >= 0 goto label14;

        $b17 = d3 cmpg 1.0E-13;

        if $b17 >= 0 goto label14;

        $d43 = staticinvoke <java.lang.Math: double signum(double)>(d5);

        goto label15;

     label14:
        $d43 = d5 / d3;

     label15:
        $d45 = 0.5 * d3;

        d46 = $d43 + $d45;

        $d47 = $d43 * $d43;

        $d48 = $d47 / d3;

        $d49 = 0.25 * d3;

        d50 = $d48 - $d49;

        d7 = d46 * d6;

        $d51 = d50 * d6;

        d8 = $d51 * d2;

        $z10 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d7);

        if $z10 == 0 goto label16;

        $d52 = 0.0;

        goto label17;

     label16:
        $d52 = d7;

     label17:
        d53 = $d52;

        $z3 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d8);

        if $z3 == 0 goto label18;

        $d54 = 1.0;

        goto label19;

     label18:
        $d54 = d8;

     label19:
        d55 = $d54;

        goto label25;

     label20:
        $b20 = d3 cmpl 1.0E13;

        if $b20 <= 0 goto label21;

        d53 = 0.5 * d39;

        $d38 = -0.25 * d39;

        d55 = $d38 * d2;

        goto label25;

     label21:
        $b21 = d3 cmpg 1.0E-13;

        if $b21 >= 0 goto label24;

        $d31 = d0 / d1;

        $d32 = staticinvoke <java.lang.Math: double log(double)>($d31);

        $d34 = $d32 / d6;

        $d33 = d5 * d6;

        $d35 = $d34 + $d33;

        d56 = $d35 / d3;

        $z5 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d56);

        if $z5 == 0 goto label22;

        $d57 = 1.0;

        goto label23;

     label22:
        $d57 = d56;

     label23:
        d53 = $d57;

        $d36 = $d57 * $d57;

        $d37 = $d36 * d6;

        d55 = $d37 / d3;

        goto label25;

     label24:
        $d20 = d0 / d1;

        $d21 = staticinvoke <java.lang.Math: double log(double)>($d20);

        $d24 = $d21 / d39;

        $d22 = d5 * d6;

        $d23 = $d22 / d3;

        d58 = $d24 + $d23;

        $d25 = 0.5 * d39;

        d53 = d58 + $d25;

        $d28 = d58 * d58;

        $d26 = 0.25 * d39;

        $d27 = $d26 * d39;

        $d29 = $d28 - $d27;

        $d30 = $d29 * d6;

        d55 = $d30 / d3;

     label25:
        $b24 = d4 cmpl 1.0E13;

        if $b24 <= 0 goto label26;

        $b16 = d5 cmpl 1.0E13;

        if $b16 > 0 goto label28;

     label26:
        $d13 = neg d4;

        $b8 = $d13 cmpl 1.0E13;

        if $b8 <= 0 goto label27;

        $d19 = neg d5;

        $b15 = $d19 cmpl 1.0E13;

        if $b15 > 0 goto label28;

     label27:
        $d14 = d5 - d4;

        $d15 = staticinvoke <java.lang.Math: double abs(double)>($d14);

        $b9 = $d15 cmpg 1.0E-13;

        if $b9 >= 0 goto label29;

     label28:
        d60 = 1.0;

        goto label35;

     label29:
        d61 = d5 - d4;

        $b10 = d61 cmpl 1.0E13;

        if $b10 <= 0 goto label33;

        $b13 = d5 cmpl 1.0E13;

        if $b13 <= 0 goto label30;

        $d62 = 0.0;

        goto label32;

     label30:
        $b14 = d55 cmpl 0.0;

        if $b14 < 0 goto label31;

        $d62 = #Infinity;

        goto label32;

     label31:
        $d62 = #-Infinity;

     label32:
        return $d62;

     label33:
        $d16 = neg d61;

        $b11 = $d16 cmpl 1.0E13;

        if $b11 <= 0 goto label34;

        return 0.0;

     label34:
        $d17 = d61 * d2;

        d60 = staticinvoke <java.lang.Math: double exp(double)>($d17);

     label35:
        $r8 = <com.opengamma.analytics.financial.model.volatility.BlackScholesFormulaRepository: com.opengamma.analytics.math.statistics.distribution.ProbabilityDistribution NORMAL>;

        $r9 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d53);

        d63 = interfaceinvoke $r8.<com.opengamma.analytics.math.statistics.distribution.ProbabilityDistribution: double getPDF(java.lang.Object)>($r9);

        $d18 = d55 * d0;

        d64 = $d18 * d60;

        $z4 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d64);

        if $z4 == 0 goto label36;

        d64 = d60;

     label36:
        $b12 = d63 cmpg 1.0E-13;

        if $b12 >= 0 goto label37;

        $d65 = 0.0;

        goto label38;

     label37:
        $d65 = d63 * d64;

     label38:
        return $d65;
    }

    public static double vegaBleed(double, double, double, double, double, double)
    {
        double d0, d1, d2, d3, d4, d5, d6, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21, $d22, $d23, $d24, $d25, $d26, $d27, $d28, $d29, $d30, $d31, $d32, $d33, $d34, $d35, $d36, $d37, $d38, $d39, $d40, $d41, $d42, $d43, $d44, $d45, $d46, $d47, $d48, $d49, $d50, $d51, $d52, $d53, $d54, $d55, $d56, $d57, $d58, d59, $d62, $d63, d64, $d65, d66, d67, $d68, d69, d70, $d71, $d72, d73, d74, d75, $d76, d77, $d78, d79, d80, d81, $d82, d85, d86, $d87, d88, d89, $d90;
        byte $b0, $b1, $b2, $b3, $b4, $b5, $b6, $b7, $b8, $b9, $b10, $b11, $b12, $b13, $b14, $b15, $b16, $b17, $b18, $b19, $b20, $b21, $b22, $b23, $b24;
        java.lang.Object[] $r0, $r2, $r4, $r6;
        java.lang.Double $r1, $r3, $r5, $r7, $r9;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13;
        com.opengamma.analytics.math.statistics.distribution.ProbabilityDistribution $r8;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        d2 := @parameter2: double;

        d3 := @parameter3: double;

        d4 := @parameter4: double;

        d5 := @parameter5: double;

        $b0 = d0 cmpl 0.0;

        if $b0 < 0 goto label01;

        $z9 = 1;

        goto label02;

     label01:
        $z9 = 0;

     label02:
        $r0 = newarray (java.lang.Object)[1];

        $r1 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d0);

        $r0[0] = $r1;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String,java.lang.Object[])>($z9, "negative/NaN spot; have {}", $r0);

        $b1 = d1 cmpl 0.0;

        if $b1 < 0 goto label03;

        $z10 = 1;

        goto label04;

     label03:
        $z10 = 0;

     label04:
        $r2 = newarray (java.lang.Object)[1];

        $r3 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d1);

        $r2[0] = $r3;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String,java.lang.Object[])>($z10, "negative/NaN strike; have {}", $r2);

        $b2 = d2 cmpl 0.0;

        if $b2 < 0 goto label05;

        $z11 = 1;

        goto label06;

     label05:
        $z11 = 0;

     label06:
        $r4 = newarray (java.lang.Object)[1];

        $r5 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d2);

        $r4[0] = $r5;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String,java.lang.Object[])>($z11, "negative/NaN timeToExpiry; have {}", $r4);

        $b3 = d3 cmpl 0.0;

        if $b3 < 0 goto label07;

        $z12 = 1;

        goto label08;

     label07:
        $z12 = 0;

     label08:
        $r6 = newarray (java.lang.Object)[1];

        $r7 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d3);

        $r6[0] = $r7;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String,java.lang.Object[])>($z12, "negative/NaN lognormalVol; have {}", $r6);

        $z0 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d4);

        staticinvoke <com.opengamma.util.ArgumentChecker: void isFalse(boolean,java.lang.String)>($z0, "interestRate is NaN");

        $z1 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d5);

        staticinvoke <com.opengamma.util.ArgumentChecker: void isFalse(boolean,java.lang.String)>($z1, "costOfCarry is NaN");

        d6 = staticinvoke <java.lang.Math: double sqrt(double)>(d2);

        d59 = d3 * d6;

        $z2 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d59);

        if $z2 == 0 goto label09;

        d59 = 1.0;

     label09:
        $d8 = 1.0E13 * d1;

        $b4 = d0 cmpl $d8;

        if $b4 > 0 goto label10;

        $d9 = 1.0E13 * d0;

        $b5 = d1 cmpl $d9;

        if $b5 > 0 goto label10;

        $b6 = d6 cmpg 1.0E-13;

        if $b6 >= 0 goto label11;

     label10:
        return 0.0;

     label11:
        $d10 = d0 - d1;

        $d11 = staticinvoke <java.lang.Math: double abs(double)>($d10);

        $b7 = $d11 cmpg 1.0E-13;

        if $b7 < 0 goto label13;

        $b18 = d0 cmpl 1.0E13;

        if $b18 <= 0 goto label12;

        $b22 = d1 cmpl 1.0E13;

        if $b22 > 0 goto label13;

     label12:
        $b19 = d6 cmpl 1.0E13;

        if $b19 <= 0 goto label22;

     label13:
        $d62 = staticinvoke <java.lang.Math: double abs(double)>(d5);

        $b23 = $d62 cmpg 1.0E-13;

        if $b23 >= 0 goto label14;

        $b17 = d3 cmpg 1.0E-13;

        if $b17 >= 0 goto label14;

        $d63 = staticinvoke <java.lang.Math: double signum(double)>(d5);

        goto label15;

     label14:
        $d63 = d5 / d3;

     label15:
        d64 = $d63;

        $d65 = 0.5 * d3;

        d66 = $d63 + $d65;

        d67 = d66 * d6;

        $z13 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d67);

        if $z13 == 0 goto label16;

        $d68 = 0.0;

        goto label17;

     label16:
        $d68 = d67;

     label17:
        d69 = $d68;

        $d12 = 0.5 * d5;

        $d15 = d4 - $d12;

        $d13 = 0.5 * d64;

        $d14 = $d13 * d64;

        $d18 = $d15 + $d14;

        $d16 = 0.125 * d3;

        $d17 = $d16 * d3;

        d70 = $d18 + $d17;

        $z3 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d70);

        if $z3 == 0 goto label18;

        $d71 = d6;

        goto label19;

     label18:
        $d71 = d70 * d6;

     label19:
        $z4 = staticinvoke <java.lang.Double: boolean isNaN(double)>($d71);

        if $z4 == 0 goto label20;

        $d27 = 0.5 / d6;

        $d72 = 1.0 - $d27;

        goto label21;

     label20:
        $d19 = 0.5 / d6;

        $d72 = $d71 - $d19;

     label21:
        d73 = $d72;

        goto label31;

     label22:
        $b20 = d3 cmpl 1.0E13;

        if $b20 <= 0 goto label23;

        d69 = 0.5 * d59;

        $d58 = 0.125 * d3;

        d73 = $d58 * d59;

        goto label31;

     label23:
        $b21 = d3 cmpg 1.0E-13;

        if $b21 >= 0 goto label28;

        $d46 = d0 / d1;

        $d47 = staticinvoke <java.lang.Math: double log(double)>($d46);

        d74 = $d47 / d6;

        $d48 = d5 * d6;

        $d49 = d74 + $d48;

        d75 = $d49 / d3;

        $z7 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d75);

        if $z7 == 0 goto label24;

        $d76 = 1.0;

        goto label25;

     label24:
        $d76 = d75;

     label25:
        d69 = $d76;

        $d50 = -0.5 * d74;

        $d51 = $d50 * d74;

        $d55 = $d51 / d6;

        $d52 = 0.5 * d5;

        $d53 = $d52 * d5;

        $d54 = $d53 * d6;

        $d56 = $d55 + $d54;

        $d57 = $d56 / d3;

        d77 = $d57 / d3;

        $z8 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d77);

        if $z8 == 0 goto label26;

        $d78 = 1.0;

        goto label27;

     label26:
        $d78 = 0.0;

     label27:
        d73 = $d78;

        goto label31;

     label28:
        $d28 = d0 / d1;

        $d29 = staticinvoke <java.lang.Math: double log(double)>($d28);

        d79 = $d29 / d59;

        $d30 = d5 * d6;

        $d31 = $d30 / d3;

        d80 = d79 + $d31;

        $d32 = 0.5 * d59;

        d69 = d80 + $d32;

        $d36 = 0.5 * d5;

        $d33 = d5 / d3;

        $d34 = $d33 / d3;

        $d35 = 1.0 - $d34;

        $d37 = $d36 * $d35;

        d81 = d4 - $d37;

        $z6 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d81);

        if $z6 == 0 goto label29;

        $d82 = d6;

        goto label30;

     label29:
        $d82 = d81 * d6;

     label30:
        $d38 = 0.5 / d6;

        $d42 = $d82 - $d38;

        $d39 = 0.5 * d79;

        $d40 = $d39 * d79;

        $d41 = $d40 / d6;

        $d45 = $d42 - $d41;

        $d43 = 0.125 * d3;

        $d44 = $d43 * d59;

        d73 = $d45 + $d44;

     label31:
        $b24 = d4 cmpl 1.0E13;

        if $b24 <= 0 goto label32;

        $b16 = d5 cmpl 1.0E13;

        if $b16 > 0 goto label34;

     label32:
        $d20 = neg d4;

        $b8 = $d20 cmpl 1.0E13;

        if $b8 <= 0 goto label33;

        $d26 = neg d5;

        $b15 = $d26 cmpl 1.0E13;

        if $b15 > 0 goto label34;

     label33:
        $d21 = d5 - d4;

        $d22 = staticinvoke <java.lang.Math: double abs(double)>($d21);

        $b9 = $d22 cmpg 1.0E-13;

        if $b9 >= 0 goto label35;

     label34:
        d85 = 1.0;

        goto label41;

     label35:
        d86 = d5 - d4;

        $b10 = d86 cmpl 1.0E13;

        if $b10 <= 0 goto label39;

        $b13 = d5 cmpl 1.0E13;

        if $b13 <= 0 goto label36;

        $d87 = 0.0;

        goto label38;

     label36:
        $b14 = d73 cmpl 0.0;

        if $b14 < 0 goto label37;

        $d87 = #Infinity;

        goto label38;

     label37:
        $d87 = #-Infinity;

     label38:
        return $d87;

     label39:
        $d23 = neg d86;

        $b11 = $d23 cmpl 1.0E13;

        if $b11 <= 0 goto label40;

        return 0.0;

     label40:
        $d24 = d86 * d2;

        d85 = staticinvoke <java.lang.Math: double exp(double)>($d24);

     label41:
        $r8 = <com.opengamma.analytics.financial.model.volatility.BlackScholesFormulaRepository: com.opengamma.analytics.math.statistics.distribution.ProbabilityDistribution NORMAL>;

        $r9 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d69);

        d88 = interfaceinvoke $r8.<com.opengamma.analytics.math.statistics.distribution.ProbabilityDistribution: double getPDF(java.lang.Object)>($r9);

        $d25 = d0 * d85;

        d89 = $d25 * d73;

        $z5 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d89);

        if $z5 == 0 goto label42;

        d89 = d85;

     label42:
        $b12 = d88 cmpg 1.0E-13;

        if $b12 >= 0 goto label43;

        $d90 = 0.0;

        goto label44;

     label43:
        $d90 = d89 * d88;

     label44:
        return $d90;
    }

    public static double rho(double, double, double, double, double, double, boolean)
    {
        double d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21, $d22, $d23, $d24, $d25, $d26, $d27, $d28, $d29, $d30, $d32, $d33, d34, $d35, $d36, $d38, $d39, $d41, $d43, $d44, d45, d46, $d47, d48, $d49, d50, $d51, d52, $d53, $d54, $d55, $d56, $d57, $d58, $d59, $d60, d61, $d62, $d64;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11;
        byte $b0, $b1, $b2, $b3, $b4, $b5, $b6, $b7, $b8, $b9, $b10, $b11, $b12, $b13, $b14, $b15, $b16, $b17, $b18, $b19, $b20, $b21, $b22, b23, $b24;
        java.lang.Object[] $r0, $r2, $r4, $r6;
        java.lang.Double $r1, $r3, $r5, $r7, $r9;
        com.opengamma.analytics.math.statistics.distribution.ProbabilityDistribution $r8;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        d2 := @parameter2: double;

        d3 := @parameter3: double;

        d4 := @parameter4: double;

        d5 := @parameter5: double;

        z0 := @parameter6: boolean;

        $b0 = d0 cmpl 0.0;

        if $b0 < 0 goto label01;

        $z7 = 1;

        goto label02;

     label01:
        $z7 = 0;

     label02:
        $r0 = newarray (java.lang.Object)[1];

        $r1 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d0);

        $r0[0] = $r1;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String,java.lang.Object[])>($z7, "negative/NaN spot; have {}", $r0);

        $b1 = d1 cmpl 0.0;

        if $b1 < 0 goto label03;

        $z8 = 1;

        goto label04;

     label03:
        $z8 = 0;

     label04:
        $r2 = newarray (java.lang.Object)[1];

        $r3 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d1);

        $r2[0] = $r3;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String,java.lang.Object[])>($z8, "negative/NaN strike; have {}", $r2);

        $b2 = d2 cmpl 0.0;

        if $b2 < 0 goto label05;

        $z9 = 1;

        goto label06;

     label05:
        $z9 = 0;

     label06:
        $r4 = newarray (java.lang.Object)[1];

        $r5 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d2);

        $r4[0] = $r5;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String,java.lang.Object[])>($z9, "negative/NaN timeToExpiry; have {}", $r4);

        $b3 = d3 cmpl 0.0;

        if $b3 < 0 goto label07;

        $z10 = 1;

        goto label08;

     label07:
        $z10 = 0;

     label08:
        $r6 = newarray (java.lang.Object)[1];

        $r7 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d3);

        $r6[0] = $r7;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String,java.lang.Object[])>($z10, "negative/NaN lognormalVol; have {}", $r6);

        $z1 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d4);

        staticinvoke <com.opengamma.util.ArgumentChecker: void isFalse(boolean,java.lang.String)>($z1, "interestRate is NaN");

        $z2 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d5);

        staticinvoke <com.opengamma.util.ArgumentChecker: void isFalse(boolean,java.lang.String)>($z2, "costOfCarry is NaN");

        $d11 = neg d4;

        $b4 = $d11 cmpl 1.0E13;

        if $b4 <= 0 goto label11;

        if z0 == 0 goto label09;

        $d32 = #Infinity;

        goto label10;

     label09:
        $d32 = #-Infinity;

     label10:
        return $d32;

     label11:
        $b5 = d4 cmpl 1.0E13;

        if $b5 <= 0 goto label12;

        return 0.0;

     label12:
        $d12 = staticinvoke <java.lang.Math: double abs(double)>(d4);

        $b6 = $d12 cmpg 1.0E-13;

        if $b6 >= 0 goto label13;

        $b20 = d2 cmpl 1.0E13;

        if $b20 <= 0 goto label13;

        $d33 = 1.0;

        goto label14;

     label13:
        $d13 = neg d4;

        $d14 = $d13 * d2;

        $d33 = staticinvoke <java.lang.Math: double exp(double)>($d14);

     label14:
        d34 = $d33;

        $d35 = 1.0E13 * d0;

        $b21 = $d35 cmpg d1;

        if $b21 < 0 goto label15;

        $b7 = d2 cmpl 1.0E13;

        if $b7 <= 0 goto label20;

     label15:
        if z0 == 0 goto label16;

        $d36 = 0.0;

        goto label17;

     label16:
        $d15 = neg d34;

        $d16 = $d15 * d1;

        $d36 = $d16 * d2;

     label17:
        $z3 = staticinvoke <java.lang.Double: boolean isNaN(double)>($d36);

        if $z3 == 0 goto label18;

        $d38 = neg d34;

        goto label19;

     label18:
        $d38 = $d36;

     label19:
        return $d38;

     label20:
        $d17 = 1.0E13 * d1;

        $b8 = d0 cmpl $d17;

        if $b8 > 0 goto label21;

        $b9 = d2 cmpg 1.0E-13;

        if $b9 >= 0 goto label26;

     label21:
        if z0 == 0 goto label22;

        $d18 = d34 * d1;

        $d39 = $d18 * d2;

        goto label23;

     label22:
        $d39 = 0.0;

     label23:
        $z4 = staticinvoke <java.lang.Double: boolean isNaN(double)>($d39);

        if $z4 == 0 goto label24;

        $d41 = d34;

        goto label25;

     label24:
        $d41 = $d39;

     label25:
        return $d41;

     label26:
        if z0 == 0 goto label27;

        $b22 = 1;

        goto label28;

     label27:
        $b22 = -1;

     label28:
        b23 = $b22;

        d6 = staticinvoke <java.lang.Math: double sqrt(double)>(d2);

        d7 = d3 * d6;

        $d19 = d5 * d2;

        d8 = staticinvoke <java.lang.Math: double exp(double)>($d19);

        d9 = d0 * d8;

        $d20 = d0 - d1;

        $d21 = staticinvoke <java.lang.Math: double abs(double)>($d20);

        $b10 = $d21 cmpg 1.0E-13;

        if $b10 < 0 goto label29;

        $b11 = d7 cmpl 1.0E13;

        if $b11 > 0 goto label29;

        $b12 = d0 cmpl 1.0E13;

        if $b12 <= 0 goto label32;

        $b19 = d1 cmpl 1.0E13;

        if $b19 <= 0 goto label32;

     label29:
        $d43 = d5 / d3;

        $d44 = 0.5 * d3;

        d45 = $d43 - $d44;

        d46 = d45 * d6;

        $z11 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d46);

        if $z11 == 0 goto label30;

        $d47 = 0.0;

        goto label31;

     label30:
        $d47 = d46;

     label31:
        d48 = $d47;

        goto label43;

     label32:
        $b13 = d7 cmpg 1.0E-13;

        if $b13 >= 0 goto label37;

        if z0 == 0 goto label34;

        $b18 = d9 cmpl d1;

        if $b18 <= 0 goto label33;

        $d30 = d34 * d1;

        $d49 = $d30 * d2;

        goto label36;

     label33:
        $d49 = 0.0;

        goto label36;

     label34:
        $b17 = d9 cmpg d1;

        if $b17 >= 0 goto label35;

        $d28 = neg d34;

        $d29 = $d28 * d1;

        $d49 = $d29 * d2;

        goto label36;

     label35:
        $d49 = 0.0;

     label36:
        return $d49;

     label37:
        $d27 = d5 * d6;

        d50 = $d27 / d3;

        $b14 = d5 cmpl 0.0;

        if $b14 < 0 goto label38;

        $d51 = 1.0;

        goto label39;

     label38:
        $d51 = -1.0;

     label39:
        d52 = $d51;

        $z6 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d50);

        if $z6 == 0 goto label41;

        $b15 = d3 cmpg 1.0E13;

        if $b15 >= 0 goto label40;

        $b16 = d3 cmpl 1.0E-13;

        if $b16 <= 0 goto label40;

        $d53 = $d51 / d3;

        goto label42;

     label40:
        $d53 = d52 * d6;

        goto label42;

     label41:
        $d53 = d50;

     label42:
        $d54 = d0 / d1;

        $d55 = staticinvoke <java.lang.Math: double log(double)>($d54);

        $d56 = $d55 / d7;

        $d57 = $d56 + $d53;

        $d58 = 0.5 * d7;

        d48 = $d57 - $d58;

     label43:
        $r8 = <com.opengamma.analytics.financial.model.volatility.BlackScholesFormulaRepository: com.opengamma.analytics.math.statistics.distribution.ProbabilityDistribution NORMAL>;

        $d59 = (double) b23;

        $d60 = $d59 * d48;

        $r9 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d60);

        d61 = interfaceinvoke $r8.<com.opengamma.analytics.math.statistics.distribution.ProbabilityDistribution: double getCDF(java.lang.Object)>($r9);

        $b24 = d61 cmpg 1.0E-13;

        if $b24 >= 0 goto label44;

        $d62 = 0.0;

        goto label45;

     label44:
        $d22 = (double) b23;

        $d23 = $d22 * d34;

        $d24 = $d23 * d1;

        $d25 = $d24 * d2;

        $d62 = $d25 * d61;

     label45:
        $z5 = staticinvoke <java.lang.Double: boolean isNaN(double)>($d62);

        if $z5 == 0 goto label46;

        $d26 = (double) b23;

        $d64 = $d26 * d34;

        goto label47;

     label46:
        $d64 = $d62;

     label47:
        return $d64;
    }

    public static double carryRho(double, double, double, double, double, double, boolean)
    {
        double d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21, $d22, $d23, $d24, $d25, $d26, $d27, $d28, $d29, $d30, $d31, $d32, $d33, d35, d36, $d37, $d38, $d40, $d41, $d43, $d45, $d46, d47, d48, $d49, d50, $d51, d52, $d53, d54, $d55, $d56, $d57, $d58, $d59, $d60, $d61, $d62, d63, $d64, $d66;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11;
        byte $b0, $b1, $b2, $b3, $b4, $b5, $b6, $b7, $b8, $b9, $b10, $b11, $b12, $b13, $b14, $b15, $b16, $b17, $b18, $b19, $b20, $b21, $b22, $b23, $b24, $b25, $b26, b27, $b28;
        java.lang.Object[] $r0, $r2, $r4, $r6;
        java.lang.Double $r1, $r3, $r5, $r7, $r9;
        com.opengamma.analytics.math.statistics.distribution.ProbabilityDistribution $r8;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        d2 := @parameter2: double;

        d3 := @parameter3: double;

        d4 := @parameter4: double;

        d5 := @parameter5: double;

        z0 := @parameter6: boolean;

        $b0 = d0 cmpl 0.0;

        if $b0 < 0 goto label01;

        $z7 = 1;

        goto label02;

     label01:
        $z7 = 0;

     label02:
        $r0 = newarray (java.lang.Object)[1];

        $r1 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d0);

        $r0[0] = $r1;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String,java.lang.Object[])>($z7, "negative/NaN spot; have {}", $r0);

        $b1 = d1 cmpl 0.0;

        if $b1 < 0 goto label03;

        $z8 = 1;

        goto label04;

     label03:
        $z8 = 0;

     label04:
        $r2 = newarray (java.lang.Object)[1];

        $r3 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d1);

        $r2[0] = $r3;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String,java.lang.Object[])>($z8, "negative/NaN strike; have {}", $r2);

        $b2 = d2 cmpl 0.0;

        if $b2 < 0 goto label05;

        $z9 = 1;

        goto label06;

     label05:
        $z9 = 0;

     label06:
        $r4 = newarray (java.lang.Object)[1];

        $r5 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d2);

        $r4[0] = $r5;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String,java.lang.Object[])>($z9, "negative/NaN timeToExpiry; have {}", $r4);

        $b3 = d3 cmpl 0.0;

        if $b3 < 0 goto label07;

        $z10 = 1;

        goto label08;

     label07:
        $z10 = 0;

     label08:
        $r6 = newarray (java.lang.Object)[1];

        $r7 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d3);

        $r6[0] = $r7;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String,java.lang.Object[])>($z10, "negative/NaN lognormalVol; have {}", $r6);

        $z1 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d4);

        staticinvoke <com.opengamma.util.ArgumentChecker: void isFalse(boolean,java.lang.String)>($z1, "interestRate is NaN");

        $z2 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d5);

        staticinvoke <com.opengamma.util.ArgumentChecker: void isFalse(boolean,java.lang.String)>($z2, "costOfCarry is NaN");

        $b4 = d4 cmpl 1.0E13;

        if $b4 <= 0 goto label09;

        $b25 = d5 cmpl 1.0E13;

        if $b25 > 0 goto label11;

     label09:
        $d11 = neg d4;

        $b5 = $d11 cmpl 1.0E13;

        if $b5 <= 0 goto label10;

        $d33 = neg d5;

        $b24 = $d33 cmpl 1.0E13;

        if $b24 > 0 goto label11;

     label10:
        $d12 = d5 - d4;

        $d13 = staticinvoke <java.lang.Math: double abs(double)>($d12);

        $b6 = $d13 cmpg 1.0E-13;

        if $b6 >= 0 goto label12;

     label11:
        d35 = 1.0;

        goto label18;

     label12:
        d36 = d5 - d4;

        $b7 = d36 cmpl 1.0E13;

        if $b7 <= 0 goto label16;

        if z0 == 0 goto label13;

        $d37 = #Infinity;

        goto label15;

     label13:
        $b23 = d5 cmpl 1.0E13;

        if $b23 <= 0 goto label14;

        $d37 = 0.0;

        goto label15;

     label14:
        $d37 = #-Infinity;

     label15:
        return $d37;

     label16:
        $d14 = neg d36;

        $b8 = $d14 cmpl 1.0E13;

        if $b8 <= 0 goto label17;

        return 0.0;

     label17:
        $d15 = d36 * d2;

        d35 = staticinvoke <java.lang.Math: double exp(double)>($d15);

     label18:
        $d16 = 1.0E13 * d1;

        $b9 = d0 cmpl $d16;

        if $b9 > 0 goto label19;

        $b10 = d2 cmpl 1.0E13;

        if $b10 <= 0 goto label24;

     label19:
        if z0 == 0 goto label20;

        $d17 = d35 * d0;

        $d38 = $d17 * d2;

        goto label21;

     label20:
        $d38 = 0.0;

     label21:
        $z3 = staticinvoke <java.lang.Double: boolean isNaN(double)>($d38);

        if $z3 == 0 goto label22;

        $d40 = d35;

        goto label23;

     label22:
        $d40 = $d38;

     label23:
        return $d40;

     label24:
        $d18 = 1.0E13 * d0;

        $b11 = $d18 cmpg d1;

        if $b11 < 0 goto label25;

        $b12 = d2 cmpg 1.0E-13;

        if $b12 >= 0 goto label30;

     label25:
        if z0 == 0 goto label26;

        $d41 = 0.0;

        goto label27;

     label26:
        $d19 = neg d35;

        $d20 = $d19 * d0;

        $d41 = $d20 * d2;

     label27:
        $z4 = staticinvoke <java.lang.Double: boolean isNaN(double)>($d41);

        if $z4 == 0 goto label28;

        $d43 = neg d35;

        goto label29;

     label28:
        $d43 = $d41;

     label29:
        return $d43;

     label30:
        if z0 == 0 goto label31;

        $b26 = 1;

        goto label32;

     label31:
        $b26 = -1;

     label32:
        b27 = $b26;

        d6 = staticinvoke <java.lang.Math: double sqrt(double)>(d2);

        d7 = d3 * d6;

        $d21 = d5 * d2;

        d8 = staticinvoke <java.lang.Math: double exp(double)>($d21);

        d9 = d0 * d8;

        $d22 = d0 - d1;

        $d23 = staticinvoke <java.lang.Math: double abs(double)>($d22);

        $b13 = $d23 cmpg 1.0E-13;

        if $b13 < 0 goto label33;

        $b14 = d7 cmpl 1.0E13;

        if $b14 > 0 goto label33;

        $b15 = d0 cmpl 1.0E13;

        if $b15 <= 0 goto label36;

        $b22 = d1 cmpl 1.0E13;

        if $b22 <= 0 goto label36;

     label33:
        $d45 = d5 / d3;

        $d46 = 0.5 * d3;

        d47 = $d45 + $d46;

        d48 = d47 * d6;

        $z11 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d48);

        if $z11 == 0 goto label34;

        $d49 = 0.0;

        goto label35;

     label34:
        $d49 = d48;

     label35:
        d50 = $d49;

        goto label47;

     label36:
        $b16 = d7 cmpg 1.0E-13;

        if $b16 >= 0 goto label41;

        if z0 == 0 goto label38;

        $b21 = d9 cmpl d1;

        if $b21 <= 0 goto label37;

        $d32 = d35 * d2;

        $d51 = $d32 * d0;

        goto label40;

     label37:
        $d51 = 0.0;

        goto label40;

     label38:
        $b20 = d9 cmpg d1;

        if $b20 >= 0 goto label39;

        $d30 = neg d35;

        $d31 = $d30 * d2;

        $d51 = $d31 * d0;

        goto label40;

     label39:
        $d51 = 0.0;

     label40:
        return $d51;

     label41:
        $d29 = d5 * d6;

        d52 = $d29 / d3;

        $b17 = d5 cmpl 0.0;

        if $b17 < 0 goto label42;

        $d53 = 1.0;

        goto label43;

     label42:
        $d53 = -1.0;

     label43:
        d54 = $d53;

        $z6 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d52);

        if $z6 == 0 goto label45;

        $b18 = d3 cmpg 1.0E13;

        if $b18 >= 0 goto label44;

        $b19 = d3 cmpl 1.0E-13;

        if $b19 <= 0 goto label44;

        $d55 = $d53 / d3;

        goto label46;

     label44:
        $d55 = d54 * d6;

        goto label46;

     label45:
        $d55 = d52;

     label46:
        $d56 = d0 / d1;

        $d57 = staticinvoke <java.lang.Math: double log(double)>($d56);

        $d58 = $d57 / d7;

        $d59 = $d58 + $d55;

        $d60 = 0.5 * d7;

        d50 = $d59 + $d60;

     label47:
        $r8 = <com.opengamma.analytics.financial.model.volatility.BlackScholesFormulaRepository: com.opengamma.analytics.math.statistics.distribution.ProbabilityDistribution NORMAL>;

        $d61 = (double) b27;

        $d62 = $d61 * d50;

        $r9 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d62);

        d63 = interfaceinvoke $r8.<com.opengamma.analytics.math.statistics.distribution.ProbabilityDistribution: double getCDF(java.lang.Object)>($r9);

        $b28 = d63 cmpg 1.0E-13;

        if $b28 >= 0 goto label48;

        $d64 = 0.0;

        goto label49;

     label48:
        $d24 = (double) b27;

        $d25 = $d24 * d35;

        $d26 = $d25 * d2;

        $d27 = $d26 * d0;

        $d64 = $d27 * d63;

     label49:
        $z5 = staticinvoke <java.lang.Double: boolean isNaN(double)>($d64);

        if $z5 == 0 goto label50;

        $d28 = (double) b27;

        $d66 = $d28 * d35;

        goto label51;

     label50:
        $d66 = $d64;

     label51:
        return $d66;
    }

    static void <clinit>()
    {
        com.opengamma.analytics.math.statistics.distribution.NormalDistribution $r0;

        <com.opengamma.analytics.financial.model.volatility.BlackScholesFormulaRepository: double LARGE> = 1.0E13;

        <com.opengamma.analytics.financial.model.volatility.BlackScholesFormulaRepository: double SMALL> = 1.0E-13;

        $r0 = new com.opengamma.analytics.math.statistics.distribution.NormalDistribution;

        specialinvoke $r0.<com.opengamma.analytics.math.statistics.distribution.NormalDistribution: void <init>(double,double)>(0.0, 1.0);

        <com.opengamma.analytics.financial.model.volatility.BlackScholesFormulaRepository: com.opengamma.analytics.math.statistics.distribution.ProbabilityDistribution NORMAL> = $r0;

        return;
    }
}
