public abstract enum class org.apache.commons.math3.stat.descriptive.rank.Percentile$EstimationType extends java.lang.Enum
{
    public static final enum org.apache.commons.math3.stat.descriptive.rank.Percentile$EstimationType LEGACY;
    public static final enum org.apache.commons.math3.stat.descriptive.rank.Percentile$EstimationType R_1;
    public static final enum org.apache.commons.math3.stat.descriptive.rank.Percentile$EstimationType R_2;
    public static final enum org.apache.commons.math3.stat.descriptive.rank.Percentile$EstimationType R_3;
    public static final enum org.apache.commons.math3.stat.descriptive.rank.Percentile$EstimationType R_4;
    public static final enum org.apache.commons.math3.stat.descriptive.rank.Percentile$EstimationType R_5;
    public static final enum org.apache.commons.math3.stat.descriptive.rank.Percentile$EstimationType R_6;
    public static final enum org.apache.commons.math3.stat.descriptive.rank.Percentile$EstimationType R_7;
    public static final enum org.apache.commons.math3.stat.descriptive.rank.Percentile$EstimationType R_8;
    public static final enum org.apache.commons.math3.stat.descriptive.rank.Percentile$EstimationType R_9;
    private final java.lang.String name;
    private static final org.apache.commons.math3.stat.descriptive.rank.Percentile$EstimationType[] $VALUES;

    public static org.apache.commons.math3.stat.descriptive.rank.Percentile$EstimationType[] values()
    {
        org.apache.commons.math3.stat.descriptive.rank.Percentile$EstimationType[] $r0, $r2;
        java.lang.Object $r1;

        $r0 = <org.apache.commons.math3.stat.descriptive.rank.Percentile$EstimationType: org.apache.commons.math3.stat.descriptive.rank.Percentile$EstimationType[] $VALUES>;

        $r1 = virtualinvoke $r0.<java.lang.Object: java.lang.Object clone()>();

        $r2 = (org.apache.commons.math3.stat.descriptive.rank.Percentile$EstimationType[]) $r1;

        return $r2;
    }

    public static org.apache.commons.math3.stat.descriptive.rank.Percentile$EstimationType valueOf(java.lang.String)
    {
        java.lang.String r0;
        java.lang.Enum $r1;
        org.apache.commons.math3.stat.descriptive.rank.Percentile$EstimationType $r2;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "org/apache/commons/math3/stat/descriptive/rank/Percentile$EstimationType", r0);

        $r2 = (org.apache.commons.math3.stat.descriptive.rank.Percentile$EstimationType) $r1;

        return $r2;
    }

    private void <init>(java.lang.String, int, java.lang.String)
    {
        org.apache.commons.math3.stat.descriptive.rank.Percentile$EstimationType r0;
        java.lang.String r1, r2;
        int i0;

        r0 := @this: org.apache.commons.math3.stat.descriptive.rank.Percentile$EstimationType;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.String;

        specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>(r1, i0);

        r0.<org.apache.commons.math3.stat.descriptive.rank.Percentile$EstimationType: java.lang.String name> = r2;

        return;
    }

    protected abstract double index(double, int);

    protected double estimate(double[], int[], double, int, org.apache.commons.math3.util.KthSelector)
    {
        org.apache.commons.math3.stat.descriptive.rank.Percentile$EstimationType r0;
        double[] r1;
        int[] r2;
        double d0, d1, d2, d3, d4, $d5, $d6, $d7, $d8, $d9, $d10;
        int i0, i1, $i4, $i5;
        org.apache.commons.math3.util.KthSelector r3;
        byte $b2, $b3;

        r0 := @this: org.apache.commons.math3.stat.descriptive.rank.Percentile$EstimationType;

        r1 := @parameter0: double[];

        r2 := @parameter1: int[];

        d0 := @parameter2: double;

        i0 := @parameter3: int;

        r3 := @parameter4: org.apache.commons.math3.util.KthSelector;

        d1 = staticinvoke <org.apache.commons.math3.util.FastMath: double floor(double)>(d0);

        i1 = (int) d1;

        d2 = d0 - d1;

        $b2 = d0 cmpg 1.0;

        if $b2 >= 0 goto label1;

        $d10 = virtualinvoke r3.<org.apache.commons.math3.util.KthSelector: double select(double[],int[],int)>(r1, r2, 0);

        return $d10;

     label1:
        $d5 = (double) i0;

        $b3 = d0 cmpl $d5;

        if $b3 < 0 goto label2;

        $i5 = i0 - 1;

        $d9 = virtualinvoke r3.<org.apache.commons.math3.util.KthSelector: double select(double[],int[],int)>(r1, r2, $i5);

        return $d9;

     label2:
        $i4 = i1 - 1;

        d3 = virtualinvoke r3.<org.apache.commons.math3.util.KthSelector: double select(double[],int[],int)>(r1, r2, $i4);

        d4 = virtualinvoke r3.<org.apache.commons.math3.util.KthSelector: double select(double[],int[],int)>(r1, r2, i1);

        $d6 = d4 - d3;

        $d7 = d2 * $d6;

        $d8 = d3 + $d7;

        return $d8;
    }

    protected double evaluate(double[], int[], double, org.apache.commons.math3.util.KthSelector)
    {
        org.apache.commons.math3.stat.descriptive.rank.Percentile$EstimationType r0;
        double[] r1;
        int[] r2;
        double d0, $d1, $d2, $d3;
        org.apache.commons.math3.util.KthSelector r3;
        byte $b0, $b1;
        org.apache.commons.math3.exception.OutOfRangeException $r4;
        org.apache.commons.math3.exception.util.LocalizedFormats $r5;
        java.lang.Double $r6;
        java.lang.Integer $r7, $r8;
        int $i2, $i3;

        r0 := @this: org.apache.commons.math3.stat.descriptive.rank.Percentile$EstimationType;

        r1 := @parameter0: double[];

        r2 := @parameter1: int[];

        d0 := @parameter2: double;

        r3 := @parameter3: org.apache.commons.math3.util.KthSelector;

        staticinvoke <org.apache.commons.math3.util.MathUtils: void checkNotNull(java.lang.Object)>(r1);

        $b0 = d0 cmpl 100.0;

        if $b0 > 0 goto label1;

        $b1 = d0 cmpg 0.0;

        if $b1 > 0 goto label2;

     label1:
        $r4 = new org.apache.commons.math3.exception.OutOfRangeException;

        $r5 = <org.apache.commons.math3.exception.util.LocalizedFormats: org.apache.commons.math3.exception.util.LocalizedFormats OUT_OF_BOUNDS_QUANTILE_VALUE>;

        $r6 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d0);

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(100);

        specialinvoke $r4.<org.apache.commons.math3.exception.OutOfRangeException: void <init>(org.apache.commons.math3.exception.util.Localizable,java.lang.Number,java.lang.Number,java.lang.Number)>($r5, $r6, $r7, $r8);

        throw $r4;

     label2:
        $d1 = d0 / 100.0;

        $i2 = lengthof r1;

        $d2 = virtualinvoke r0.<org.apache.commons.math3.stat.descriptive.rank.Percentile$EstimationType: double index(double,int)>($d1, $i2);

        $i3 = lengthof r1;

        $d3 = virtualinvoke r0.<org.apache.commons.math3.stat.descriptive.rank.Percentile$EstimationType: double estimate(double[],int[],double,int,org.apache.commons.math3.util.KthSelector)>(r1, r2, $d2, $i3, r3);

        return $d3;
    }

    public double evaluate(double[], double, org.apache.commons.math3.util.KthSelector)
    {
        org.apache.commons.math3.stat.descriptive.rank.Percentile$EstimationType r0;
        double[] r1;
        double d0, $d1;
        org.apache.commons.math3.util.KthSelector r2;

        r0 := @this: org.apache.commons.math3.stat.descriptive.rank.Percentile$EstimationType;

        r1 := @parameter0: double[];

        d0 := @parameter1: double;

        r2 := @parameter2: org.apache.commons.math3.util.KthSelector;

        $d1 = virtualinvoke r0.<org.apache.commons.math3.stat.descriptive.rank.Percentile$EstimationType: double evaluate(double[],int[],double,org.apache.commons.math3.util.KthSelector)>(r1, null, d0, r2);

        return $d1;
    }

    java.lang.String getName()
    {
        org.apache.commons.math3.stat.descriptive.rank.Percentile$EstimationType r0;
        java.lang.String $r1;

        r0 := @this: org.apache.commons.math3.stat.descriptive.rank.Percentile$EstimationType;

        $r1 = r0.<org.apache.commons.math3.stat.descriptive.rank.Percentile$EstimationType: java.lang.String name>;

        return $r1;
    }

    void <init>(java.lang.String, int, java.lang.String, org.apache.commons.math3.stat.descriptive.rank.Percentile$1)
    {
        org.apache.commons.math3.stat.descriptive.rank.Percentile$EstimationType r0;
        java.lang.String r1, r2;
        int i0;
        org.apache.commons.math3.stat.descriptive.rank.Percentile$1 r3;

        r0 := @this: org.apache.commons.math3.stat.descriptive.rank.Percentile$EstimationType;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: org.apache.commons.math3.stat.descriptive.rank.Percentile$1;

        specialinvoke r0.<org.apache.commons.math3.stat.descriptive.rank.Percentile$EstimationType: void <init>(java.lang.String,int,java.lang.String)>(r1, i0, r2);

        return;
    }

    static void <clinit>()
    {
        org.apache.commons.math3.stat.descriptive.rank.Percentile$EstimationType$1 $r0;
        org.apache.commons.math3.stat.descriptive.rank.Percentile$EstimationType$2 $r1;
        org.apache.commons.math3.stat.descriptive.rank.Percentile$EstimationType$3 $r2;
        org.apache.commons.math3.stat.descriptive.rank.Percentile$EstimationType$4 $r3;
        org.apache.commons.math3.stat.descriptive.rank.Percentile$EstimationType$5 $r4;
        org.apache.commons.math3.stat.descriptive.rank.Percentile$EstimationType$6 $r5;
        org.apache.commons.math3.stat.descriptive.rank.Percentile$EstimationType$7 $r6;
        org.apache.commons.math3.stat.descriptive.rank.Percentile$EstimationType$8 $r7;
        org.apache.commons.math3.stat.descriptive.rank.Percentile$EstimationType$9 $r8;
        org.apache.commons.math3.stat.descriptive.rank.Percentile$EstimationType$10 $r9;
        org.apache.commons.math3.stat.descriptive.rank.Percentile$EstimationType[] $r10;
        org.apache.commons.math3.stat.descriptive.rank.Percentile$EstimationType $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20;

        $r0 = new org.apache.commons.math3.stat.descriptive.rank.Percentile$EstimationType$1;

        specialinvoke $r0.<org.apache.commons.math3.stat.descriptive.rank.Percentile$EstimationType$1: void <init>(java.lang.String,int,java.lang.String)>("LEGACY", 0, "Legacy Apache Commons Math");

        <org.apache.commons.math3.stat.descriptive.rank.Percentile$EstimationType: org.apache.commons.math3.stat.descriptive.rank.Percentile$EstimationType LEGACY> = $r0;

        $r1 = new org.apache.commons.math3.stat.descriptive.rank.Percentile$EstimationType$2;

        specialinvoke $r1.<org.apache.commons.math3.stat.descriptive.rank.Percentile$EstimationType$2: void <init>(java.lang.String,int,java.lang.String)>("R_1", 1, "R-1");

        <org.apache.commons.math3.stat.descriptive.rank.Percentile$EstimationType: org.apache.commons.math3.stat.descriptive.rank.Percentile$EstimationType R_1> = $r1;

        $r2 = new org.apache.commons.math3.stat.descriptive.rank.Percentile$EstimationType$3;

        specialinvoke $r2.<org.apache.commons.math3.stat.descriptive.rank.Percentile$EstimationType$3: void <init>(java.lang.String,int,java.lang.String)>("R_2", 2, "R-2");

        <org.apache.commons.math3.stat.descriptive.rank.Percentile$EstimationType: org.apache.commons.math3.stat.descriptive.rank.Percentile$EstimationType R_2> = $r2;

        $r3 = new org.apache.commons.math3.stat.descriptive.rank.Percentile$EstimationType$4;

        specialinvoke $r3.<org.apache.commons.math3.stat.descriptive.rank.Percentile$EstimationType$4: void <init>(java.lang.String,int,java.lang.String)>("R_3", 3, "R-3");

        <org.apache.commons.math3.stat.descriptive.rank.Percentile$EstimationType: org.apache.commons.math3.stat.descriptive.rank.Percentile$EstimationType R_3> = $r3;

        $r4 = new org.apache.commons.math3.stat.descriptive.rank.Percentile$EstimationType$5;

        specialinvoke $r4.<org.apache.commons.math3.stat.descriptive.rank.Percentile$EstimationType$5: void <init>(java.lang.String,int,java.lang.String)>("R_4", 4, "R-4");

        <org.apache.commons.math3.stat.descriptive.rank.Percentile$EstimationType: org.apache.commons.math3.stat.descriptive.rank.Percentile$EstimationType R_4> = $r4;

        $r5 = new org.apache.commons.math3.stat.descriptive.rank.Percentile$EstimationType$6;

        specialinvoke $r5.<org.apache.commons.math3.stat.descriptive.rank.Percentile$EstimationType$6: void <init>(java.lang.String,int,java.lang.String)>("R_5", 5, "R-5");

        <org.apache.commons.math3.stat.descriptive.rank.Percentile$EstimationType: org.apache.commons.math3.stat.descriptive.rank.Percentile$EstimationType R_5> = $r5;

        $r6 = new org.apache.commons.math3.stat.descriptive.rank.Percentile$EstimationType$7;

        specialinvoke $r6.<org.apache.commons.math3.stat.descriptive.rank.Percentile$EstimationType$7: void <init>(java.lang.String,int,java.lang.String)>("R_6", 6, "R-6");

        <org.apache.commons.math3.stat.descriptive.rank.Percentile$EstimationType: org.apache.commons.math3.stat.descriptive.rank.Percentile$EstimationType R_6> = $r6;

        $r7 = new org.apache.commons.math3.stat.descriptive.rank.Percentile$EstimationType$8;

        specialinvoke $r7.<org.apache.commons.math3.stat.descriptive.rank.Percentile$EstimationType$8: void <init>(java.lang.String,int,java.lang.String)>("R_7", 7, "R-7");

        <org.apache.commons.math3.stat.descriptive.rank.Percentile$EstimationType: org.apache.commons.math3.stat.descriptive.rank.Percentile$EstimationType R_7> = $r7;

        $r8 = new org.apache.commons.math3.stat.descriptive.rank.Percentile$EstimationType$9;

        specialinvoke $r8.<org.apache.commons.math3.stat.descriptive.rank.Percentile$EstimationType$9: void <init>(java.lang.String,int,java.lang.String)>("R_8", 8, "R-8");

        <org.apache.commons.math3.stat.descriptive.rank.Percentile$EstimationType: org.apache.commons.math3.stat.descriptive.rank.Percentile$EstimationType R_8> = $r8;

        $r9 = new org.apache.commons.math3.stat.descriptive.rank.Percentile$EstimationType$10;

        specialinvoke $r9.<org.apache.commons.math3.stat.descriptive.rank.Percentile$EstimationType$10: void <init>(java.lang.String,int,java.lang.String)>("R_9", 9, "R-9");

        <org.apache.commons.math3.stat.descriptive.rank.Percentile$EstimationType: org.apache.commons.math3.stat.descriptive.rank.Percentile$EstimationType R_9> = $r9;

        $r10 = newarray (org.apache.commons.math3.stat.descriptive.rank.Percentile$EstimationType)[10];

        $r11 = <org.apache.commons.math3.stat.descriptive.rank.Percentile$EstimationType: org.apache.commons.math3.stat.descriptive.rank.Percentile$EstimationType LEGACY>;

        $r10[0] = $r11;

        $r12 = <org.apache.commons.math3.stat.descriptive.rank.Percentile$EstimationType: org.apache.commons.math3.stat.descriptive.rank.Percentile$EstimationType R_1>;

        $r10[1] = $r12;

        $r13 = <org.apache.commons.math3.stat.descriptive.rank.Percentile$EstimationType: org.apache.commons.math3.stat.descriptive.rank.Percentile$EstimationType R_2>;

        $r10[2] = $r13;

        $r14 = <org.apache.commons.math3.stat.descriptive.rank.Percentile$EstimationType: org.apache.commons.math3.stat.descriptive.rank.Percentile$EstimationType R_3>;

        $r10[3] = $r14;

        $r15 = <org.apache.commons.math3.stat.descriptive.rank.Percentile$EstimationType: org.apache.commons.math3.stat.descriptive.rank.Percentile$EstimationType R_4>;

        $r10[4] = $r15;

        $r16 = <org.apache.commons.math3.stat.descriptive.rank.Percentile$EstimationType: org.apache.commons.math3.stat.descriptive.rank.Percentile$EstimationType R_5>;

        $r10[5] = $r16;

        $r17 = <org.apache.commons.math3.stat.descriptive.rank.Percentile$EstimationType: org.apache.commons.math3.stat.descriptive.rank.Percentile$EstimationType R_6>;

        $r10[6] = $r17;

        $r18 = <org.apache.commons.math3.stat.descriptive.rank.Percentile$EstimationType: org.apache.commons.math3.stat.descriptive.rank.Percentile$EstimationType R_7>;

        $r10[7] = $r18;

        $r19 = <org.apache.commons.math3.stat.descriptive.rank.Percentile$EstimationType: org.apache.commons.math3.stat.descriptive.rank.Percentile$EstimationType R_8>;

        $r10[8] = $r19;

        $r20 = <org.apache.commons.math3.stat.descriptive.rank.Percentile$EstimationType: org.apache.commons.math3.stat.descriptive.rank.Percentile$EstimationType R_9>;

        $r10[9] = $r20;

        <org.apache.commons.math3.stat.descriptive.rank.Percentile$EstimationType: org.apache.commons.math3.stat.descriptive.rank.Percentile$EstimationType[] $VALUES> = $r10;

        return;
    }
}
