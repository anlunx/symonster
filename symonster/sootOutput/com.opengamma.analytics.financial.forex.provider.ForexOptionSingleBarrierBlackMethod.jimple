public final class com.opengamma.analytics.financial.forex.provider.ForexOptionSingleBarrierBlackMethod extends java.lang.Object
{
    private static final com.opengamma.analytics.financial.forex.provider.ForexOptionSingleBarrierBlackMethod INSTANCE;
    private static final double DEFAULT_GAMMA_SHIFT;
    private static final double DEFAULT_VOMMA_SHIFT;
    private static final double DEFAULT_VANNA_SHIFT;
    private static final com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackBarrierPriceFunction BARRIER_FUNCTION;

    private void <init>()
    {
        com.opengamma.analytics.financial.forex.provider.ForexOptionSingleBarrierBlackMethod r0;

        r0 := @this: com.opengamma.analytics.financial.forex.provider.ForexOptionSingleBarrierBlackMethod;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static com.opengamma.analytics.financial.forex.provider.ForexOptionSingleBarrierBlackMethod getInstance()
    {
        com.opengamma.analytics.financial.forex.provider.ForexOptionSingleBarrierBlackMethod $r0;

        $r0 = <com.opengamma.analytics.financial.forex.provider.ForexOptionSingleBarrierBlackMethod: com.opengamma.analytics.financial.forex.provider.ForexOptionSingleBarrierBlackMethod INSTANCE>;

        return $r0;
    }

    public com.opengamma.util.money.MultipleCurrencyAmount presentValue(com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier, com.opengamma.analytics.financial.provider.description.forex.BlackForexSmileProviderInterface)
    {
        com.opengamma.analytics.financial.forex.provider.ForexOptionSingleBarrierBlackMethod r0;
        com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier r1;
        com.opengamma.analytics.financial.provider.description.forex.BlackForexSmileProviderInterface r2;
        com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface r3;
        double d0, d1, d2, d3, d4, d5, d6, d7, d8, d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21, $d22, $d23, d24, d25;
        com.opengamma.util.money.CurrencyAmount r4;
        com.opengamma.util.money.Currency $r7, $r8, $r11, $r13, $r15, $r16, $r21, $r22, $r30;
        boolean $z0, $z1;
        com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla $r9, $r17, $r20, $r23, $r24, $r26, $r28;
        com.opengamma.analytics.financial.forex.derivative.Forex $r10, $r18, $r29;
        java.lang.Double $r12, $r14;
        com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed $r19;
        com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackBarrierPriceFunction $r25;
        com.opengamma.analytics.financial.model.option.definition.Barrier $r27;
        com.opengamma.util.money.CurrencyAmount[] $r31;
        com.opengamma.util.money.MultipleCurrencyAmount $r32;

        r0 := @this: com.opengamma.analytics.financial.forex.provider.ForexOptionSingleBarrierBlackMethod;

        r1 := @parameter0: com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier;

        r2 := @parameter1: com.opengamma.analytics.financial.provider.description.forex.BlackForexSmileProviderInterface;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "Forex option");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, "Smile");

        $r7 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.util.money.Currency getCurrency1()>();

        $r8 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.util.money.Currency getCurrency2()>();

        $z0 = interfaceinvoke r2.<com.opengamma.analytics.financial.provider.description.forex.BlackForexSmileProviderInterface: boolean checkCurrencies(com.opengamma.util.money.Currency,com.opengamma.util.money.Currency)>($r7, $r8);

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z0, "Option currencies not compatible with smile data");

        r3 = interfaceinvoke r2.<com.opengamma.analytics.financial.provider.description.forex.BlackForexSmileProviderInterface: com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface getMulticurveProvider()>();

        $r9 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla getUnderlyingOption()>();

        $r10 = virtualinvoke $r9.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        d0 = virtualinvoke $r10.<com.opengamma.analytics.financial.forex.derivative.Forex: double getPaymentTime()>();

        $r11 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.util.money.Currency getCurrency2()>();

        $r12 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d0);

        d1 = interfaceinvoke r3.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface: double getDiscountFactor(com.opengamma.util.money.Currency,java.lang.Double)>($r11, $r12);

        $r13 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.util.money.Currency getCurrency1()>();

        $r14 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d0);

        d2 = interfaceinvoke r3.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface: double getDiscountFactor(com.opengamma.util.money.Currency,java.lang.Double)>($r13, $r14);

        $d11 = staticinvoke <java.lang.Math: double log(double)>(d1);

        $d12 = neg $d11;

        d3 = $d12 / d0;

        $d13 = staticinvoke <java.lang.Math: double log(double)>(d2);

        $d14 = neg $d13;

        d4 = $d14 / d0;

        $r15 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.util.money.Currency getCurrency1()>();

        $r16 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.util.money.Currency getCurrency2()>();

        d5 = interfaceinvoke r3.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface: double getFxRate(com.opengamma.util.money.Currency,com.opengamma.util.money.Currency)>($r15, $r16);

        $d15 = d5 * d2;

        d6 = $d15 / d1;

        $r17 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla getUnderlyingOption()>();

        $r18 = virtualinvoke $r17.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        $r19 = virtualinvoke $r18.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed getPaymentCurrency1()>();

        d7 = virtualinvoke $r19.<com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed: double getAmount()>();

        $d16 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: double getRebate()>();

        $d17 = staticinvoke <java.lang.Math: double abs(double)>(d7);

        d8 = $d16 / $d17;

        $r20 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla getUnderlyingOption()>();

        $z1 = virtualinvoke $r20.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: boolean isLong()>();

        if $z1 == 0 goto label1;

        $d23 = 1.0;

        goto label2;

     label1:
        $d23 = -1.0;

     label2:
        $r21 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.util.money.Currency getCurrency1()>();

        $r22 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.util.money.Currency getCurrency2()>();

        $r23 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla getUnderlyingOption()>();

        $d18 = virtualinvoke $r23.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: double getTimeToExpiry()>();

        $r24 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla getUnderlyingOption()>();

        $d19 = virtualinvoke $r24.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: double getStrike()>();

        d10 = interfaceinvoke r2.<com.opengamma.analytics.financial.provider.description.forex.BlackForexSmileProviderInterface: double getVolatility(com.opengamma.util.money.Currency,com.opengamma.util.money.Currency,double,double,double)>($r21, $r22, $d18, $d19, d6);

        $r25 = <com.opengamma.analytics.financial.forex.provider.ForexOptionSingleBarrierBlackMethod: com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackBarrierPriceFunction BARRIER_FUNCTION>;

        $r26 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla getUnderlyingOption()>();

        $r27 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.analytics.financial.model.option.definition.Barrier getBarrier()>();

        $d20 = d3 - d4;

        d24 = virtualinvoke $r25.<com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackBarrierPriceFunction: double getPrice(com.opengamma.analytics.financial.model.option.pricing.analytic.formula.EuropeanVanillaOption,com.opengamma.analytics.financial.model.option.definition.Barrier,double,double,double,double,double)>($r26, $r27, d8, d5, $d20, d3, d10);

        $d21 = staticinvoke <java.lang.Math: double abs(double)>(d7);

        $d22 = $d21 * $d23;

        d25 = d24 * $d22;

        $r28 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla getUnderlyingOption()>();

        $r29 = virtualinvoke $r28.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        $r30 = virtualinvoke $r29.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.util.money.Currency getCurrency2()>();

        r4 = staticinvoke <com.opengamma.util.money.CurrencyAmount: com.opengamma.util.money.CurrencyAmount of(com.opengamma.util.money.Currency,double)>($r30, d25);

        $r31 = newarray (com.opengamma.util.money.CurrencyAmount)[1];

        $r31[0] = r4;

        $r32 = staticinvoke <com.opengamma.util.money.MultipleCurrencyAmount: com.opengamma.util.money.MultipleCurrencyAmount of(com.opengamma.util.money.CurrencyAmount[])>($r31);

        return $r32;
    }

    public com.opengamma.util.money.MultipleCurrencyAmount currencyExposure(com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier, com.opengamma.analytics.financial.provider.description.forex.BlackForexSmileProviderInterface)
    {
        com.opengamma.analytics.financial.forex.provider.ForexOptionSingleBarrierBlackMethod r0;
        com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier r1;
        com.opengamma.analytics.financial.provider.description.forex.BlackForexSmileProviderInterface r2;
        com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface r3;
        double d0, d1, d2, d3, d4, d5, d6, d7, d8, d10, d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21, $d22, $d23, $d24, $d25, $d26, $d27, $d28, $d29, $d30, $d31, $d32, $d33, $d34, $d35, $d36, $d37, $d38, $d39, $d40, d41, d42;
        double[] r4;
        com.opengamma.util.money.CurrencyAmount[] r5;
        com.opengamma.util.money.Currency $r8, $r9, $r12, $r14, $r16, $r17, $r22, $r23, $r31, $r35;
        boolean $z0, $z1;
        com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla $r10, $r18, $r21, $r24, $r25, $r27, $r29, $r33, $r36;
        com.opengamma.analytics.financial.forex.derivative.Forex $r11, $r19, $r30, $r34, $r37;
        java.lang.Double $r13, $r15;
        com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed $r20, $r38;
        com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackBarrierPriceFunction $r26;
        com.opengamma.analytics.financial.model.option.definition.Barrier $r28;
        com.opengamma.util.money.CurrencyAmount $r32, $r39;
        com.opengamma.util.money.MultipleCurrencyAmount $r40;

        r0 := @this: com.opengamma.analytics.financial.forex.provider.ForexOptionSingleBarrierBlackMethod;

        r1 := @parameter0: com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier;

        r2 := @parameter1: com.opengamma.analytics.financial.provider.description.forex.BlackForexSmileProviderInterface;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "Forex option");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, "Smile");

        $r8 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.util.money.Currency getCurrency1()>();

        $r9 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.util.money.Currency getCurrency2()>();

        $z0 = interfaceinvoke r2.<com.opengamma.analytics.financial.provider.description.forex.BlackForexSmileProviderInterface: boolean checkCurrencies(com.opengamma.util.money.Currency,com.opengamma.util.money.Currency)>($r8, $r9);

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z0, "Option currencies not compatible with smile data");

        r3 = interfaceinvoke r2.<com.opengamma.analytics.financial.provider.description.forex.BlackForexSmileProviderInterface: com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface getMulticurveProvider()>();

        $r10 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla getUnderlyingOption()>();

        $r11 = virtualinvoke $r10.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        d0 = virtualinvoke $r11.<com.opengamma.analytics.financial.forex.derivative.Forex: double getPaymentTime()>();

        $r12 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.util.money.Currency getCurrency2()>();

        $r13 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d0);

        d1 = interfaceinvoke r3.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface: double getDiscountFactor(com.opengamma.util.money.Currency,java.lang.Double)>($r12, $r13);

        $r14 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.util.money.Currency getCurrency1()>();

        $r15 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d0);

        d2 = interfaceinvoke r3.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface: double getDiscountFactor(com.opengamma.util.money.Currency,java.lang.Double)>($r14, $r15);

        $d12 = staticinvoke <java.lang.Math: double log(double)>(d1);

        $d13 = neg $d12;

        d3 = $d13 / d0;

        $d14 = staticinvoke <java.lang.Math: double log(double)>(d2);

        $d15 = neg $d14;

        d4 = $d15 / d0;

        $r16 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.util.money.Currency getCurrency1()>();

        $r17 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.util.money.Currency getCurrency2()>();

        d5 = interfaceinvoke r3.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface: double getFxRate(com.opengamma.util.money.Currency,com.opengamma.util.money.Currency)>($r16, $r17);

        $d16 = neg d4;

        $d17 = $d16 * d0;

        $d18 = staticinvoke <java.lang.Math: double exp(double)>($d17);

        $d21 = d5 * $d18;

        $d19 = neg d3;

        $d20 = $d19 * d0;

        $d22 = staticinvoke <java.lang.Math: double exp(double)>($d20);

        d6 = $d21 / $d22;

        $r18 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla getUnderlyingOption()>();

        $r19 = virtualinvoke $r18.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        $r20 = virtualinvoke $r19.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed getPaymentCurrency1()>();

        d7 = virtualinvoke $r20.<com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed: double getAmount()>();

        $d23 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: double getRebate()>();

        $d24 = staticinvoke <java.lang.Math: double abs(double)>(d7);

        d8 = $d23 / $d24;

        $r21 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla getUnderlyingOption()>();

        $z1 = virtualinvoke $r21.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: boolean isLong()>();

        if $z1 == 0 goto label1;

        $d40 = 1.0;

        goto label2;

     label1:
        $d40 = -1.0;

     label2:
        $r22 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.util.money.Currency getCurrency1()>();

        $r23 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.util.money.Currency getCurrency2()>();

        $r24 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla getUnderlyingOption()>();

        $d25 = virtualinvoke $r24.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: double getTimeToExpiry()>();

        $r25 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla getUnderlyingOption()>();

        $d26 = virtualinvoke $r25.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: double getStrike()>();

        d10 = interfaceinvoke r2.<com.opengamma.analytics.financial.provider.description.forex.BlackForexSmileProviderInterface: double getVolatility(com.opengamma.util.money.Currency,com.opengamma.util.money.Currency,double,double,double)>($r22, $r23, $d25, $d26, d6);

        r4 = newarray (double)[5];

        $r26 = <com.opengamma.analytics.financial.forex.provider.ForexOptionSingleBarrierBlackMethod: com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackBarrierPriceFunction BARRIER_FUNCTION>;

        $r27 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla getUnderlyingOption()>();

        $r28 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.analytics.financial.model.option.definition.Barrier getBarrier()>();

        $d27 = d3 - d4;

        d41 = virtualinvoke $r26.<com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackBarrierPriceFunction: double getPriceAdjoint(com.opengamma.analytics.financial.model.option.pricing.analytic.formula.EuropeanVanillaOption,com.opengamma.analytics.financial.model.option.definition.Barrier,double,double,double,double,double,double[])>($r27, $r28, d8, d5, $d27, d3, d10, r4);

        $d28 = staticinvoke <java.lang.Math: double abs(double)>(d7);

        $d29 = $d28 * $d40;

        d42 = d41 * $d29;

        d11 = r4[0];

        r5 = newarray (com.opengamma.util.money.CurrencyAmount)[2];

        $r29 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla getUnderlyingOption()>();

        $r30 = virtualinvoke $r29.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        $r31 = virtualinvoke $r30.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.util.money.Currency getCurrency1()>();

        $d30 = staticinvoke <java.lang.Math: double abs(double)>(d7);

        $d31 = d11 * $d30;

        $d32 = $d31 * $d40;

        $r32 = staticinvoke <com.opengamma.util.money.CurrencyAmount: com.opengamma.util.money.CurrencyAmount of(com.opengamma.util.money.Currency,double)>($r31, $d32);

        r5[0] = $r32;

        $r33 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla getUnderlyingOption()>();

        $r34 = virtualinvoke $r33.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        $r35 = virtualinvoke $r34.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.util.money.Currency getCurrency2()>();

        $d33 = neg d11;

        $r36 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla getUnderlyingOption()>();

        $r37 = virtualinvoke $r36.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        $r38 = virtualinvoke $r37.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed getPaymentCurrency1()>();

        $d34 = virtualinvoke $r38.<com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed: double getAmount()>();

        $d35 = staticinvoke <java.lang.Math: double abs(double)>($d34);

        $d36 = $d33 * $d35;

        $d37 = $d36 * d5;

        $d38 = $d37 * $d40;

        $d39 = $d38 + d42;

        $r39 = staticinvoke <com.opengamma.util.money.CurrencyAmount: com.opengamma.util.money.CurrencyAmount of(com.opengamma.util.money.Currency,double)>($r35, $d39);

        r5[1] = $r39;

        $r40 = staticinvoke <com.opengamma.util.money.MultipleCurrencyAmount: com.opengamma.util.money.MultipleCurrencyAmount of(com.opengamma.util.money.CurrencyAmount[])>(r5);

        return $r40;
    }

    public com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyMulticurveSensitivity presentValueCurveSensitivity(com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier, com.opengamma.analytics.financial.provider.description.forex.BlackForexSmileProviderInterface)
    {
        com.opengamma.analytics.financial.forex.provider.ForexOptionSingleBarrierBlackMethod r0;
        com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier r1;
        com.opengamma.analytics.financial.provider.description.forex.BlackForexSmileProviderInterface r2;
        com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface r3;
        double d0, d1, d2, d3, d4, d5, d6, d7, d8, d10, d12, d13, d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21, $d22, $d23, $d24, $d25, $d26, $d27, $d28, $d29, $d30, $d32, $d33, $d34, $d35, $d36, $d37, $d38, $d39, $d40, $d41, $d42;
        double[] r4;
        com.opengamma.analytics.financial.provider.sensitivity.multicurve.MulticurveSensitivity r8;
        com.opengamma.util.money.Currency $r11, $r12, $r15, $r17, $r19, $r20, $r25, $r26, $r35, $r40, $r45;
        boolean $z0, $z1;
        com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla $r13, $r21, $r24, $r27, $r28, $r30, $r43;
        com.opengamma.analytics.financial.forex.derivative.Forex $r14, $r22, $r44;
        java.lang.Double $r16, $r18;
        com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed $r23;
        com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackBarrierPriceFunction $r29;
        com.opengamma.analytics.financial.model.option.definition.Barrier $r31;
        java.util.HashMap $r32;
        java.util.ArrayList $r33, $r38;
        com.opengamma.util.tuple.DoublesPair $r34, $r39;
        java.lang.String $r36, $r41;
        com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyMulticurveSensitivity $r46;

        r0 := @this: com.opengamma.analytics.financial.forex.provider.ForexOptionSingleBarrierBlackMethod;

        r1 := @parameter0: com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier;

        r2 := @parameter1: com.opengamma.analytics.financial.provider.description.forex.BlackForexSmileProviderInterface;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "Forex option");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, "Smile");

        $r11 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.util.money.Currency getCurrency1()>();

        $r12 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.util.money.Currency getCurrency2()>();

        $z0 = interfaceinvoke r2.<com.opengamma.analytics.financial.provider.description.forex.BlackForexSmileProviderInterface: boolean checkCurrencies(com.opengamma.util.money.Currency,com.opengamma.util.money.Currency)>($r11, $r12);

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z0, "Option currencies not compatible with smile data");

        r3 = interfaceinvoke r2.<com.opengamma.analytics.financial.provider.description.forex.BlackForexSmileProviderInterface: com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface getMulticurveProvider()>();

        $r13 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla getUnderlyingOption()>();

        $r14 = virtualinvoke $r13.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        d0 = virtualinvoke $r14.<com.opengamma.analytics.financial.forex.derivative.Forex: double getPaymentTime()>();

        $r15 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.util.money.Currency getCurrency2()>();

        $r16 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d0);

        d1 = interfaceinvoke r3.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface: double getDiscountFactor(com.opengamma.util.money.Currency,java.lang.Double)>($r15, $r16);

        $r17 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.util.money.Currency getCurrency1()>();

        $r18 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d0);

        d2 = interfaceinvoke r3.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface: double getDiscountFactor(com.opengamma.util.money.Currency,java.lang.Double)>($r17, $r18);

        $d15 = staticinvoke <java.lang.Math: double log(double)>(d1);

        $d16 = neg $d15;

        d3 = $d16 / d0;

        $d17 = staticinvoke <java.lang.Math: double log(double)>(d2);

        $d18 = neg $d17;

        d4 = $d18 / d0;

        $r19 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.util.money.Currency getCurrency1()>();

        $r20 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.util.money.Currency getCurrency2()>();

        d5 = interfaceinvoke r3.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface: double getFxRate(com.opengamma.util.money.Currency,com.opengamma.util.money.Currency)>($r19, $r20);

        $d19 = neg d4;

        $d20 = $d19 * d0;

        $d21 = staticinvoke <java.lang.Math: double exp(double)>($d20);

        $d24 = d5 * $d21;

        $d22 = neg d3;

        $d23 = $d22 * d0;

        $d25 = staticinvoke <java.lang.Math: double exp(double)>($d23);

        d6 = $d24 / $d25;

        $r21 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla getUnderlyingOption()>();

        $r22 = virtualinvoke $r21.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        $r23 = virtualinvoke $r22.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed getPaymentCurrency1()>();

        d7 = virtualinvoke $r23.<com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed: double getAmount()>();

        $d26 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: double getRebate()>();

        $d27 = staticinvoke <java.lang.Math: double abs(double)>(d7);

        d8 = $d26 / $d27;

        $r24 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla getUnderlyingOption()>();

        $z1 = virtualinvoke $r24.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: boolean isLong()>();

        if $z1 == 0 goto label1;

        $d42 = 1.0;

        goto label2;

     label1:
        $d42 = -1.0;

     label2:
        $r25 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.util.money.Currency getCurrency1()>();

        $r26 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.util.money.Currency getCurrency2()>();

        $r27 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla getUnderlyingOption()>();

        $d28 = virtualinvoke $r27.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: double getTimeToExpiry()>();

        $r28 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla getUnderlyingOption()>();

        $d29 = virtualinvoke $r28.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: double getStrike()>();

        d10 = interfaceinvoke r2.<com.opengamma.analytics.financial.provider.description.forex.BlackForexSmileProviderInterface: double getVolatility(com.opengamma.util.money.Currency,com.opengamma.util.money.Currency,double,double,double)>($r25, $r26, $d28, $d29, d6);

        r4 = newarray (double)[5];

        $r29 = <com.opengamma.analytics.financial.forex.provider.ForexOptionSingleBarrierBlackMethod: com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackBarrierPriceFunction BARRIER_FUNCTION>;

        $r30 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla getUnderlyingOption()>();

        $r31 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.analytics.financial.model.option.definition.Barrier getBarrier()>();

        $d30 = d3 - d4;

        virtualinvoke $r29.<com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackBarrierPriceFunction: double getPriceAdjoint(com.opengamma.analytics.financial.model.option.pricing.analytic.formula.EuropeanVanillaOption,com.opengamma.analytics.financial.model.option.definition.Barrier,double,double,double,double,double,double[])>($r30, $r31, d8, d5, $d30, d3, d10, r4);

        $d32 = r4[3];

        $d33 = staticinvoke <java.lang.Math: double abs(double)>(d7);

        $d34 = $d32 * $d33;

        $d35 = $d34 * $d42;

        d12 = $d35 * 1.0;

        $d37 = r4[2];

        $d36 = r4[3];

        $d38 = $d37 + $d36;

        $d39 = staticinvoke <java.lang.Math: double abs(double)>(d7);

        $d40 = $d38 * $d39;

        $d41 = $d40 * $d42;

        d13 = $d41 * 1.0;

        d14 = -1.0 * d12;

        $r32 = new java.util.HashMap;

        specialinvoke $r32.<java.util.HashMap: void <init>()>();

        $r33 = new java.util.ArrayList;

        specialinvoke $r33.<java.util.ArrayList: void <init>()>();

        $r34 = staticinvoke <com.opengamma.util.tuple.DoublesPair: com.opengamma.util.tuple.DoublesPair of(double,double)>(d0, d14);

        interfaceinvoke $r33.<java.util.List: boolean add(java.lang.Object)>($r34);

        $r35 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.util.money.Currency getCurrency1()>();

        $r36 = interfaceinvoke r3.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface: java.lang.String getName(com.opengamma.util.money.Currency)>($r35);

        interfaceinvoke $r32.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r36, $r33);

        $r38 = new java.util.ArrayList;

        specialinvoke $r38.<java.util.ArrayList: void <init>()>();

        $r39 = staticinvoke <com.opengamma.util.tuple.DoublesPair: com.opengamma.util.tuple.DoublesPair of(double,double)>(d0, d13);

        interfaceinvoke $r38.<java.util.List: boolean add(java.lang.Object)>($r39);

        $r40 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.util.money.Currency getCurrency2()>();

        $r41 = interfaceinvoke r3.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface: java.lang.String getName(com.opengamma.util.money.Currency)>($r40);

        interfaceinvoke $r32.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r41, $r38);

        r8 = staticinvoke <com.opengamma.analytics.financial.provider.sensitivity.multicurve.MulticurveSensitivity: com.opengamma.analytics.financial.provider.sensitivity.multicurve.MulticurveSensitivity ofYieldDiscounting(java.util.Map)>($r32);

        $r43 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla getUnderlyingOption()>();

        $r44 = virtualinvoke $r43.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        $r45 = virtualinvoke $r44.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.util.money.Currency getCurrency2()>();

        $r46 = staticinvoke <com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyMulticurveSensitivity: com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyMulticurveSensitivity of(com.opengamma.util.money.Currency,com.opengamma.analytics.financial.provider.sensitivity.multicurve.MulticurveSensitivity)>($r45, r8);

        return $r46;
    }

    public com.opengamma.analytics.financial.forex.method.PresentValueForexBlackVolatilitySensitivity presentValueBlackVolatilitySensitivity(com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier, com.opengamma.analytics.financial.provider.description.forex.BlackForexSmileProviderInterface)
    {
        com.opengamma.analytics.financial.forex.provider.ForexOptionSingleBarrierBlackMethod r0;
        com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier r1;
        com.opengamma.analytics.financial.provider.description.forex.BlackForexSmileProviderInterface r2;
        com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface r3;
        double d0, d1, d2, d3, d4, d5, d6, d7, d8, d10, d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21, $d22, $d23, $d24, $d25, $d26, $d27, $d29, $d30, $d31, $d32, $d33, $d34;
        double[] r4;
        com.opengamma.util.tuple.DoublesPair r5;
        com.opengamma.analytics.util.amount.SurfaceValue r6;
        com.opengamma.util.money.Currency $r10, $r11, $r14, $r16, $r18, $r19, $r24, $r25, $r37, $r40;
        boolean $z0, $z1;
        com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla $r12, $r20, $r23, $r26, $r27, $r29, $r31, $r32, $r35, $r38;
        com.opengamma.analytics.financial.forex.derivative.Forex $r13, $r21, $r36, $r39;
        java.lang.Double $r15, $r17, $r33;
        com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed $r22;
        com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackBarrierPriceFunction $r28;
        com.opengamma.analytics.financial.model.option.definition.Barrier $r30;
        com.opengamma.analytics.financial.forex.method.PresentValueForexBlackVolatilitySensitivity $r34;

        r0 := @this: com.opengamma.analytics.financial.forex.provider.ForexOptionSingleBarrierBlackMethod;

        r1 := @parameter0: com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier;

        r2 := @parameter1: com.opengamma.analytics.financial.provider.description.forex.BlackForexSmileProviderInterface;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "Forex option");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, "Smile");

        $r10 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.util.money.Currency getCurrency1()>();

        $r11 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.util.money.Currency getCurrency2()>();

        $z0 = interfaceinvoke r2.<com.opengamma.analytics.financial.provider.description.forex.BlackForexSmileProviderInterface: boolean checkCurrencies(com.opengamma.util.money.Currency,com.opengamma.util.money.Currency)>($r10, $r11);

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z0, "Option currencies not compatible with smile data");

        r3 = interfaceinvoke r2.<com.opengamma.analytics.financial.provider.description.forex.BlackForexSmileProviderInterface: com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface getMulticurveProvider()>();

        $r12 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla getUnderlyingOption()>();

        $r13 = virtualinvoke $r12.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        d0 = virtualinvoke $r13.<com.opengamma.analytics.financial.forex.derivative.Forex: double getPaymentTime()>();

        $r14 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.util.money.Currency getCurrency2()>();

        $r15 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d0);

        d1 = interfaceinvoke r3.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface: double getDiscountFactor(com.opengamma.util.money.Currency,java.lang.Double)>($r14, $r15);

        $r16 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.util.money.Currency getCurrency1()>();

        $r17 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d0);

        d2 = interfaceinvoke r3.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface: double getDiscountFactor(com.opengamma.util.money.Currency,java.lang.Double)>($r16, $r17);

        $d12 = staticinvoke <java.lang.Math: double log(double)>(d1);

        $d13 = neg $d12;

        d3 = $d13 / d0;

        $d14 = staticinvoke <java.lang.Math: double log(double)>(d2);

        $d15 = neg $d14;

        d4 = $d15 / d0;

        $r18 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.util.money.Currency getCurrency1()>();

        $r19 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.util.money.Currency getCurrency2()>();

        d5 = interfaceinvoke r3.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface: double getFxRate(com.opengamma.util.money.Currency,com.opengamma.util.money.Currency)>($r18, $r19);

        $d16 = neg d4;

        $d17 = $d16 * d0;

        $d18 = staticinvoke <java.lang.Math: double exp(double)>($d17);

        $d21 = d5 * $d18;

        $d19 = neg d3;

        $d20 = $d19 * d0;

        $d22 = staticinvoke <java.lang.Math: double exp(double)>($d20);

        d6 = $d21 / $d22;

        $r20 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla getUnderlyingOption()>();

        $r21 = virtualinvoke $r20.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        $r22 = virtualinvoke $r21.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed getPaymentCurrency1()>();

        d7 = virtualinvoke $r22.<com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed: double getAmount()>();

        $d23 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: double getRebate()>();

        $d24 = staticinvoke <java.lang.Math: double abs(double)>(d7);

        d8 = $d23 / $d24;

        $r23 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla getUnderlyingOption()>();

        $z1 = virtualinvoke $r23.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: boolean isLong()>();

        if $z1 == 0 goto label1;

        $d34 = 1.0;

        goto label2;

     label1:
        $d34 = -1.0;

     label2:
        $r24 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.util.money.Currency getCurrency1()>();

        $r25 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.util.money.Currency getCurrency2()>();

        $r26 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla getUnderlyingOption()>();

        $d25 = virtualinvoke $r26.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: double getTimeToExpiry()>();

        $r27 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla getUnderlyingOption()>();

        $d26 = virtualinvoke $r27.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: double getStrike()>();

        d10 = interfaceinvoke r2.<com.opengamma.analytics.financial.provider.description.forex.BlackForexSmileProviderInterface: double getVolatility(com.opengamma.util.money.Currency,com.opengamma.util.money.Currency,double,double,double)>($r24, $r25, $d25, $d26, d6);

        r4 = newarray (double)[5];

        $r28 = <com.opengamma.analytics.financial.forex.provider.ForexOptionSingleBarrierBlackMethod: com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackBarrierPriceFunction BARRIER_FUNCTION>;

        $r29 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla getUnderlyingOption()>();

        $r30 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.analytics.financial.model.option.definition.Barrier getBarrier()>();

        $d27 = d3 - d4;

        virtualinvoke $r28.<com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackBarrierPriceFunction: double getPriceAdjoint(com.opengamma.analytics.financial.model.option.pricing.analytic.formula.EuropeanVanillaOption,com.opengamma.analytics.financial.model.option.definition.Barrier,double,double,double,double,double,double[])>($r29, $r30, d8, d5, $d27, d3, d10, r4);

        $d29 = r4[4];

        $d30 = staticinvoke <java.lang.Math: double abs(double)>(d7);

        $d31 = $d29 * $d30;

        d11 = $d31 * $d34;

        $r31 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla getUnderlyingOption()>();

        $d32 = virtualinvoke $r31.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: double getTimeToExpiry()>();

        $r32 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla getUnderlyingOption()>();

        $d33 = virtualinvoke $r32.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: double getStrike()>();

        r5 = staticinvoke <com.opengamma.util.tuple.DoublesPair: com.opengamma.util.tuple.DoublesPair of(double,double)>($d32, $d33);

        $r33 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d11);

        r6 = staticinvoke <com.opengamma.analytics.util.amount.SurfaceValue: com.opengamma.analytics.util.amount.SurfaceValue 'from'(com.opengamma.util.tuple.DoublesPair,java.lang.Double)>(r5, $r33);

        $r34 = new com.opengamma.analytics.financial.forex.method.PresentValueForexBlackVolatilitySensitivity;

        $r35 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla getUnderlyingOption()>();

        $r36 = virtualinvoke $r35.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        $r37 = virtualinvoke $r36.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.util.money.Currency getCurrency1()>();

        $r38 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla getUnderlyingOption()>();

        $r39 = virtualinvoke $r38.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        $r40 = virtualinvoke $r39.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.util.money.Currency getCurrency2()>();

        specialinvoke $r34.<com.opengamma.analytics.financial.forex.method.PresentValueForexBlackVolatilitySensitivity: void <init>(com.opengamma.util.money.Currency,com.opengamma.util.money.Currency,com.opengamma.analytics.util.amount.SurfaceValue)>($r37, $r40, r6);

        return $r34;
    }

    public com.opengamma.analytics.financial.forex.method.PresentValueForexBlackVolatilityNodeSensitivityDataBundle presentValueBlackVolatilityNodeSensitivity(com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier, com.opengamma.analytics.financial.provider.description.forex.BlackForexSmileProviderInterface)
    {
        com.opengamma.analytics.financial.forex.provider.ForexOptionSingleBarrierBlackMethod r0;
        com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier r1;
        com.opengamma.analytics.financial.provider.description.forex.BlackForexSmileProviderInterface r2;
        com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface r3;
        com.opengamma.analytics.financial.forex.method.PresentValueForexBlackVolatilitySensitivity r4;
        com.opengamma.analytics.financial.model.volatility.surface.SmileDeltaTermStructureParametersStrikeInterpolation r5;
        double d0, d1, d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13;
        com.opengamma.analytics.financial.model.volatility.VolatilityAndBucketedSensitivities r6;
        double[][] r7, r9;
        com.opengamma.util.tuple.DoublesPair r8;
        com.opengamma.util.money.Currency $r12, $r13, $r17, $r21, $r22, $r25, $r36, $r39;
        boolean $z0;
        java.lang.Object $r14, $r49;
        com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla $r15, $r18, $r23, $r26, $r29, $r30, $r31, $r32, $r34, $r37;
        com.opengamma.analytics.financial.forex.derivative.Forex $r16, $r19, $r24, $r27, $r35, $r38;
        java.lang.Double $r20, $r28, $r50;
        int $i0, $i1, $i2, $i3, i4, i5;
        com.opengamma.analytics.financial.forex.method.PresentValueForexBlackVolatilityNodeSensitivityDataBundle $r33;
        com.opengamma.analytics.math.matrix.DoubleMatrix1D $r40, $r42;
        double[] $r41, $r43, $r45, $r46;
        com.opengamma.analytics.math.matrix.DoubleMatrix2D $r44;
        com.opengamma.analytics.util.amount.SurfaceValue $r47;
        java.util.HashMap $r48;

        r0 := @this: com.opengamma.analytics.financial.forex.provider.ForexOptionSingleBarrierBlackMethod;

        r1 := @parameter0: com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier;

        r2 := @parameter1: com.opengamma.analytics.financial.provider.description.forex.BlackForexSmileProviderInterface;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "Forex option");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, "Smile");

        $r12 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.util.money.Currency getCurrency1()>();

        $r13 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.util.money.Currency getCurrency2()>();

        $z0 = interfaceinvoke r2.<com.opengamma.analytics.financial.provider.description.forex.BlackForexSmileProviderInterface: boolean checkCurrencies(com.opengamma.util.money.Currency,com.opengamma.util.money.Currency)>($r12, $r13);

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z0, "Option currencies not compatible with smile data");

        r3 = interfaceinvoke r2.<com.opengamma.analytics.financial.provider.description.forex.BlackForexSmileProviderInterface: com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface getMulticurveProvider()>();

        r4 = virtualinvoke r0.<com.opengamma.analytics.financial.forex.provider.ForexOptionSingleBarrierBlackMethod: com.opengamma.analytics.financial.forex.method.PresentValueForexBlackVolatilitySensitivity presentValueBlackVolatilitySensitivity(com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier,com.opengamma.analytics.financial.provider.description.forex.BlackForexSmileProviderInterface)>(r1, r2);

        $r14 = interfaceinvoke r2.<com.opengamma.analytics.financial.provider.description.forex.BlackForexSmileProviderInterface: java.lang.Object getVolatility()>();

        r5 = (com.opengamma.analytics.financial.model.volatility.surface.SmileDeltaTermStructureParametersStrikeInterpolation) $r14;

        $r15 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla getUnderlyingOption()>();

        $r16 = virtualinvoke $r15.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        $r17 = virtualinvoke $r16.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.util.money.Currency getCurrency2()>();

        $r18 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla getUnderlyingOption()>();

        $r19 = virtualinvoke $r18.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        $d3 = virtualinvoke $r19.<com.opengamma.analytics.financial.forex.derivative.Forex: double getPaymentTime()>();

        $r20 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d3);

        d0 = interfaceinvoke r3.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface: double getDiscountFactor(com.opengamma.util.money.Currency,java.lang.Double)>($r17, $r20);

        $r21 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.util.money.Currency getCurrency1()>();

        $r22 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.util.money.Currency getCurrency2()>();

        d1 = interfaceinvoke r3.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface: double getFxRate(com.opengamma.util.money.Currency,com.opengamma.util.money.Currency)>($r21, $r22);

        $r23 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla getUnderlyingOption()>();

        $r24 = virtualinvoke $r23.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        $r25 = virtualinvoke $r24.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.util.money.Currency getCurrency1()>();

        $r26 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla getUnderlyingOption()>();

        $r27 = virtualinvoke $r26.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        $d4 = virtualinvoke $r27.<com.opengamma.analytics.financial.forex.derivative.Forex: double getPaymentTime()>();

        $r28 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d4);

        $d5 = interfaceinvoke r3.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface: double getDiscountFactor(com.opengamma.util.money.Currency,java.lang.Double)>($r25, $r28);

        $d6 = d1 * $d5;

        d2 = $d6 / d0;

        $r29 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla getUnderlyingOption()>();

        $d7 = virtualinvoke $r29.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: double getTimeToExpiry()>();

        $r30 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla getUnderlyingOption()>();

        $d8 = virtualinvoke $r30.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: double getStrike()>();

        r6 = virtualinvoke r5.<com.opengamma.analytics.financial.model.volatility.surface.SmileDeltaTermStructureParametersStrikeInterpolation: com.opengamma.analytics.financial.model.volatility.VolatilityAndBucketedSensitivities getVolatilityAndSensitivities(double,double,double)>($d7, $d8, d2);

        r7 = virtualinvoke r6.<com.opengamma.analytics.financial.model.volatility.VolatilityAndBucketedSensitivities: double[][] getBucketedSensitivities()>();

        $r31 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla getUnderlyingOption()>();

        $d9 = virtualinvoke $r31.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: double getTimeToExpiry()>();

        $r32 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla getUnderlyingOption()>();

        $d10 = virtualinvoke $r32.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: double getStrike()>();

        r8 = staticinvoke <com.opengamma.util.tuple.DoublesPair: com.opengamma.util.tuple.DoublesPair of(double,double)>($d9, $d10);

        $i0 = virtualinvoke r5.<com.opengamma.analytics.financial.model.volatility.surface.SmileDeltaTermStructureParametersStrikeInterpolation: int getNumberExpiration()>();

        $i1 = virtualinvoke r5.<com.opengamma.analytics.financial.model.volatility.surface.SmileDeltaTermStructureParametersStrikeInterpolation: int getNumberStrike()>();

        r9 = newmultiarray (double)[$i0][$i1];

        i4 = 0;

     label1:
        $i2 = virtualinvoke r5.<com.opengamma.analytics.financial.model.volatility.surface.SmileDeltaTermStructureParametersStrikeInterpolation: int getNumberExpiration()>();

        if i4 >= $i2 goto label4;

        i5 = 0;

     label2:
        $i3 = virtualinvoke r5.<com.opengamma.analytics.financial.model.volatility.surface.SmileDeltaTermStructureParametersStrikeInterpolation: int getNumberStrike()>();

        if i5 >= $i3 goto label3;

        $r46 = r9[i4];

        $r45 = r7[i4];

        $d11 = $r45[i5];

        $r47 = virtualinvoke r4.<com.opengamma.analytics.financial.forex.method.PresentValueForexBlackVolatilitySensitivity: com.opengamma.analytics.util.amount.SurfaceValue getVega()>();

        $r48 = virtualinvoke $r47.<com.opengamma.analytics.util.amount.SurfaceValue: java.util.HashMap getMap()>();

        $r49 = virtualinvoke $r48.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r8);

        $r50 = (java.lang.Double) $r49;

        $d12 = virtualinvoke $r50.<java.lang.Double: double doubleValue()>();

        $d13 = $d11 * $d12;

        $r46[i5] = $d13;

        i5 = i5 + 1;

        goto label2;

     label3:
        i4 = i4 + 1;

        goto label1;

     label4:
        $r33 = new com.opengamma.analytics.financial.forex.method.PresentValueForexBlackVolatilityNodeSensitivityDataBundle;

        $r34 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla getUnderlyingOption()>();

        $r35 = virtualinvoke $r34.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        $r36 = virtualinvoke $r35.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.util.money.Currency getCurrency1()>();

        $r37 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla getUnderlyingOption()>();

        $r38 = virtualinvoke $r37.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        $r39 = virtualinvoke $r38.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.util.money.Currency getCurrency2()>();

        $r40 = new com.opengamma.analytics.math.matrix.DoubleMatrix1D;

        $r41 = virtualinvoke r5.<com.opengamma.analytics.financial.model.volatility.surface.SmileDeltaTermStructureParametersStrikeInterpolation: double[] getTimeToExpiration()>();

        specialinvoke $r40.<com.opengamma.analytics.math.matrix.DoubleMatrix1D: void <init>(double[])>($r41);

        $r42 = new com.opengamma.analytics.math.matrix.DoubleMatrix1D;

        $r43 = virtualinvoke r5.<com.opengamma.analytics.financial.model.volatility.surface.SmileDeltaTermStructureParametersStrikeInterpolation: double[] getDeltaFull()>();

        specialinvoke $r42.<com.opengamma.analytics.math.matrix.DoubleMatrix1D: void <init>(double[])>($r43);

        $r44 = new com.opengamma.analytics.math.matrix.DoubleMatrix2D;

        specialinvoke $r44.<com.opengamma.analytics.math.matrix.DoubleMatrix2D: void <init>(double[][])>(r9);

        specialinvoke $r33.<com.opengamma.analytics.financial.forex.method.PresentValueForexBlackVolatilityNodeSensitivityDataBundle: void <init>(com.opengamma.util.money.Currency,com.opengamma.util.money.Currency,com.opengamma.analytics.math.matrix.DoubleMatrix1D,com.opengamma.analytics.math.matrix.DoubleMatrix1D,com.opengamma.analytics.math.matrix.DoubleMatrix2D)>($r36, $r39, $r40, $r42, $r44);

        return $r33;
    }

    public com.opengamma.util.money.CurrencyAmount gammaFd(com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier, com.opengamma.analytics.financial.provider.description.forex.BlackForexSmileProviderInterface, double)
    {
        com.opengamma.analytics.financial.forex.provider.ForexOptionSingleBarrierBlackMethod r0;
        com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier r1;
        com.opengamma.analytics.financial.provider.description.forex.BlackForexSmileProviderInterface r2;
        double d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, d11, d12, d13, d14, d15, d16, $d17, $d18, $d19, $d20, $d21, $d22, $d23, $d24, $d25, $d26, $d27, $d28, $d29, $d30, $d31, $d32, $d33, $d34, $d36, $d38, $d39, $d40, $d41, $d42, $d43, $d44, $d45, $d46, $d47;
        com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface r3;
        double[] r4, r5;
        com.opengamma.util.money.Currency r6, $r9, $r10, $r13, $r15, $r17, $r18, $r23, $r24;
        boolean $z0, $z1;
        com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla $r11, $r19, $r22, $r25, $r26, $r28, $r31, $r33;
        com.opengamma.analytics.financial.forex.derivative.Forex $r12, $r20, $r34;
        java.lang.Double $r14, $r16;
        com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed $r21;
        com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackBarrierPriceFunction $r27, $r30;
        com.opengamma.analytics.financial.model.option.definition.Barrier $r29, $r32;
        com.opengamma.util.money.CurrencyAmount $r35;

        r0 := @this: com.opengamma.analytics.financial.forex.provider.ForexOptionSingleBarrierBlackMethod;

        r1 := @parameter0: com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier;

        r2 := @parameter1: com.opengamma.analytics.financial.provider.description.forex.BlackForexSmileProviderInterface;

        d0 := @parameter2: double;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "Forex option");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, "Smile");

        $r9 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.util.money.Currency getCurrency1()>();

        $r10 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.util.money.Currency getCurrency2()>();

        $z0 = interfaceinvoke r2.<com.opengamma.analytics.financial.provider.description.forex.BlackForexSmileProviderInterface: boolean checkCurrencies(com.opengamma.util.money.Currency,com.opengamma.util.money.Currency)>($r9, $r10);

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z0, "Option currencies not compatible with smile data");

        r3 = interfaceinvoke r2.<com.opengamma.analytics.financial.provider.description.forex.BlackForexSmileProviderInterface: com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface getMulticurveProvider()>();

        $r11 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla getUnderlyingOption()>();

        $r12 = virtualinvoke $r11.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        d1 = virtualinvoke $r12.<com.opengamma.analytics.financial.forex.derivative.Forex: double getPaymentTime()>();

        $r13 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.util.money.Currency getCurrency2()>();

        $r14 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d1);

        d2 = interfaceinvoke r3.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface: double getDiscountFactor(com.opengamma.util.money.Currency,java.lang.Double)>($r13, $r14);

        $r15 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.util.money.Currency getCurrency1()>();

        $r16 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d1);

        d3 = interfaceinvoke r3.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface: double getDiscountFactor(com.opengamma.util.money.Currency,java.lang.Double)>($r15, $r16);

        $d17 = staticinvoke <java.lang.Math: double log(double)>(d2);

        $d18 = neg $d17;

        d4 = $d18 / d1;

        $d19 = staticinvoke <java.lang.Math: double log(double)>(d3);

        $d20 = neg $d19;

        d5 = $d20 / d1;

        $r17 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.util.money.Currency getCurrency1()>();

        $r18 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.util.money.Currency getCurrency2()>();

        d6 = interfaceinvoke r3.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface: double getFxRate(com.opengamma.util.money.Currency,com.opengamma.util.money.Currency)>($r17, $r18);

        $d21 = neg d5;

        $d22 = $d21 * d1;

        $d23 = staticinvoke <java.lang.Math: double exp(double)>($d22);

        $d26 = d6 * $d23;

        $d24 = neg d4;

        $d25 = $d24 * d1;

        $d27 = staticinvoke <java.lang.Math: double exp(double)>($d25);

        d7 = $d26 / $d27;

        $r19 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla getUnderlyingOption()>();

        $r20 = virtualinvoke $r19.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        $r21 = virtualinvoke $r20.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed getPaymentCurrency1()>();

        d8 = virtualinvoke $r21.<com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed: double getAmount()>();

        $d28 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: double getRebate()>();

        $d29 = staticinvoke <java.lang.Math: double abs(double)>(d8);

        d9 = $d28 / $d29;

        $r22 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla getUnderlyingOption()>();

        $z1 = virtualinvoke $r22.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: boolean isLong()>();

        if $z1 == 0 goto label1;

        $d47 = 1.0;

        goto label2;

     label1:
        $d47 = -1.0;

     label2:
        $r23 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.util.money.Currency getCurrency1()>();

        $r24 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.util.money.Currency getCurrency2()>();

        $r25 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla getUnderlyingOption()>();

        $d30 = virtualinvoke $r25.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: double getTimeToExpiry()>();

        $r26 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla getUnderlyingOption()>();

        $d31 = virtualinvoke $r26.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: double getStrike()>();

        d11 = interfaceinvoke r2.<com.opengamma.analytics.financial.provider.description.forex.BlackForexSmileProviderInterface: double getVolatility(com.opengamma.util.money.Currency,com.opengamma.util.money.Currency,double,double,double)>($r23, $r24, $d30, $d31, d7);

        $d32 = 1.0 + d0;

        d12 = $d32 * d6;

        $d33 = 1.0 - d0;

        d13 = $d33 * d6;

        r4 = newarray (double)[5];

        r5 = newarray (double)[5];

        $r27 = <com.opengamma.analytics.financial.forex.provider.ForexOptionSingleBarrierBlackMethod: com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackBarrierPriceFunction BARRIER_FUNCTION>;

        $r28 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla getUnderlyingOption()>();

        $r29 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.analytics.financial.model.option.definition.Barrier getBarrier()>();

        $d34 = d4 - d5;

        virtualinvoke $r27.<com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackBarrierPriceFunction: double getPriceAdjoint(com.opengamma.analytics.financial.model.option.pricing.analytic.formula.EuropeanVanillaOption,com.opengamma.analytics.financial.model.option.definition.Barrier,double,double,double,double,double,double[])>($r28, $r29, d9, d12, $d34, d4, d11, r4);

        $r30 = <com.opengamma.analytics.financial.forex.provider.ForexOptionSingleBarrierBlackMethod: com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackBarrierPriceFunction BARRIER_FUNCTION>;

        $r31 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla getUnderlyingOption()>();

        $r32 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.analytics.financial.model.option.definition.Barrier getBarrier()>();

        $d36 = d4 - d5;

        virtualinvoke $r30.<com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackBarrierPriceFunction: double getPriceAdjoint(com.opengamma.analytics.financial.model.option.pricing.analytic.formula.EuropeanVanillaOption,com.opengamma.analytics.financial.model.option.definition.Barrier,double,double,double,double,double,double[])>($r31, $r32, d9, d13, $d36, d4, d11, r5);

        $d38 = r4[0];

        $d39 = staticinvoke <java.lang.Math: double abs(double)>(d8);

        $d40 = $d38 * $d39;

        d14 = $d40 * $d47;

        $d41 = r5[0];

        $d42 = staticinvoke <java.lang.Math: double abs(double)>(d8);

        $d43 = $d41 * $d42;

        d15 = $d43 * $d47;

        $d46 = d14 - d15;

        $d44 = 2.0 * d0;

        $d45 = $d44 * d6;

        d16 = $d46 / $d45;

        $r33 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla getUnderlyingOption()>();

        $r34 = virtualinvoke $r33.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        r6 = virtualinvoke $r34.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.util.money.Currency getCurrency2()>();

        $r35 = staticinvoke <com.opengamma.util.money.CurrencyAmount: com.opengamma.util.money.CurrencyAmount of(com.opengamma.util.money.Currency,double)>(r6, d16);

        return $r35;
    }

    public com.opengamma.util.money.CurrencyAmount gammaFd(com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier, com.opengamma.analytics.financial.provider.description.forex.BlackForexSmileProviderInterface)
    {
        com.opengamma.analytics.financial.forex.provider.ForexOptionSingleBarrierBlackMethod r0;
        com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier r1;
        com.opengamma.analytics.financial.provider.description.forex.BlackForexSmileProviderInterface r2;
        com.opengamma.util.money.CurrencyAmount $r3;

        r0 := @this: com.opengamma.analytics.financial.forex.provider.ForexOptionSingleBarrierBlackMethod;

        r1 := @parameter0: com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier;

        r2 := @parameter1: com.opengamma.analytics.financial.provider.description.forex.BlackForexSmileProviderInterface;

        $r3 = virtualinvoke r0.<com.opengamma.analytics.financial.forex.provider.ForexOptionSingleBarrierBlackMethod: com.opengamma.util.money.CurrencyAmount gammaFd(com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier,com.opengamma.analytics.financial.provider.description.forex.BlackForexSmileProviderInterface,double)>(r1, r2, 1.0E-5);

        return $r3;
    }

    public com.opengamma.util.money.CurrencyAmount vommaFd(com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier, com.opengamma.analytics.financial.provider.description.forex.BlackForexSmileProviderInterface, double)
    {
        com.opengamma.analytics.financial.forex.provider.ForexOptionSingleBarrierBlackMethod r0;
        com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier r1;
        com.opengamma.analytics.financial.provider.description.forex.BlackForexSmileProviderInterface r2;
        double d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, d11, d12, d13, d14, d15, d16, $d17, $d18, $d19, $d20, $d21, $d22, $d23, $d24, $d25, $d26, $d27, $d28, $d29, $d30, $d31, $d32, $d33, $d34, $d36, $d38, $d39, $d40, $d41, $d42, $d43, $d44, $d45, $d46, $d47;
        com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface r3;
        double[] r4, r5;
        com.opengamma.util.money.Currency r6, $r9, $r10, $r13, $r15, $r17, $r18, $r23, $r24;
        boolean $z0, $z1;
        com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla $r11, $r19, $r22, $r25, $r26, $r28, $r31, $r33;
        com.opengamma.analytics.financial.forex.derivative.Forex $r12, $r20, $r34;
        java.lang.Double $r14, $r16;
        com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed $r21;
        com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackBarrierPriceFunction $r27, $r30;
        com.opengamma.analytics.financial.model.option.definition.Barrier $r29, $r32;
        com.opengamma.util.money.CurrencyAmount $r35;

        r0 := @this: com.opengamma.analytics.financial.forex.provider.ForexOptionSingleBarrierBlackMethod;

        r1 := @parameter0: com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier;

        r2 := @parameter1: com.opengamma.analytics.financial.provider.description.forex.BlackForexSmileProviderInterface;

        d0 := @parameter2: double;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "Forex option");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, "Smile");

        $r9 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.util.money.Currency getCurrency1()>();

        $r10 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.util.money.Currency getCurrency2()>();

        $z0 = interfaceinvoke r2.<com.opengamma.analytics.financial.provider.description.forex.BlackForexSmileProviderInterface: boolean checkCurrencies(com.opengamma.util.money.Currency,com.opengamma.util.money.Currency)>($r9, $r10);

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z0, "Option currencies not compatible with smile data");

        r3 = interfaceinvoke r2.<com.opengamma.analytics.financial.provider.description.forex.BlackForexSmileProviderInterface: com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface getMulticurveProvider()>();

        $r11 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla getUnderlyingOption()>();

        $r12 = virtualinvoke $r11.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        d1 = virtualinvoke $r12.<com.opengamma.analytics.financial.forex.derivative.Forex: double getPaymentTime()>();

        $r13 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.util.money.Currency getCurrency2()>();

        $r14 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d1);

        d2 = interfaceinvoke r3.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface: double getDiscountFactor(com.opengamma.util.money.Currency,java.lang.Double)>($r13, $r14);

        $r15 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.util.money.Currency getCurrency1()>();

        $r16 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d1);

        d3 = interfaceinvoke r3.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface: double getDiscountFactor(com.opengamma.util.money.Currency,java.lang.Double)>($r15, $r16);

        $d17 = staticinvoke <java.lang.Math: double log(double)>(d2);

        $d18 = neg $d17;

        d4 = $d18 / d1;

        $d19 = staticinvoke <java.lang.Math: double log(double)>(d3);

        $d20 = neg $d19;

        d5 = $d20 / d1;

        $r17 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.util.money.Currency getCurrency1()>();

        $r18 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.util.money.Currency getCurrency2()>();

        d6 = interfaceinvoke r3.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface: double getFxRate(com.opengamma.util.money.Currency,com.opengamma.util.money.Currency)>($r17, $r18);

        $d21 = neg d5;

        $d22 = $d21 * d1;

        $d23 = staticinvoke <java.lang.Math: double exp(double)>($d22);

        $d26 = d6 * $d23;

        $d24 = neg d4;

        $d25 = $d24 * d1;

        $d27 = staticinvoke <java.lang.Math: double exp(double)>($d25);

        d7 = $d26 / $d27;

        $r19 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla getUnderlyingOption()>();

        $r20 = virtualinvoke $r19.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        $r21 = virtualinvoke $r20.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed getPaymentCurrency1()>();

        d8 = virtualinvoke $r21.<com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed: double getAmount()>();

        $d28 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: double getRebate()>();

        $d29 = staticinvoke <java.lang.Math: double abs(double)>(d8);

        d9 = $d28 / $d29;

        $r22 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla getUnderlyingOption()>();

        $z1 = virtualinvoke $r22.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: boolean isLong()>();

        if $z1 == 0 goto label1;

        $d47 = 1.0;

        goto label2;

     label1:
        $d47 = -1.0;

     label2:
        $r23 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.util.money.Currency getCurrency1()>();

        $r24 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.util.money.Currency getCurrency2()>();

        $r25 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla getUnderlyingOption()>();

        $d30 = virtualinvoke $r25.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: double getTimeToExpiry()>();

        $r26 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla getUnderlyingOption()>();

        $d31 = virtualinvoke $r26.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: double getStrike()>();

        d11 = interfaceinvoke r2.<com.opengamma.analytics.financial.provider.description.forex.BlackForexSmileProviderInterface: double getVolatility(com.opengamma.util.money.Currency,com.opengamma.util.money.Currency,double,double,double)>($r23, $r24, $d30, $d31, d7);

        $d32 = 1.0 + d0;

        d12 = $d32 * d11;

        $d33 = 1.0 - d0;

        d13 = $d33 * d11;

        r4 = newarray (double)[5];

        r5 = newarray (double)[5];

        $r27 = <com.opengamma.analytics.financial.forex.provider.ForexOptionSingleBarrierBlackMethod: com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackBarrierPriceFunction BARRIER_FUNCTION>;

        $r28 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla getUnderlyingOption()>();

        $r29 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.analytics.financial.model.option.definition.Barrier getBarrier()>();

        $d34 = d4 - d5;

        virtualinvoke $r27.<com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackBarrierPriceFunction: double getPriceAdjoint(com.opengamma.analytics.financial.model.option.pricing.analytic.formula.EuropeanVanillaOption,com.opengamma.analytics.financial.model.option.definition.Barrier,double,double,double,double,double,double[])>($r28, $r29, d9, d6, $d34, d4, d12, r4);

        $r30 = <com.opengamma.analytics.financial.forex.provider.ForexOptionSingleBarrierBlackMethod: com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackBarrierPriceFunction BARRIER_FUNCTION>;

        $r31 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla getUnderlyingOption()>();

        $r32 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.analytics.financial.model.option.definition.Barrier getBarrier()>();

        $d36 = d4 - d5;

        virtualinvoke $r30.<com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackBarrierPriceFunction: double getPriceAdjoint(com.opengamma.analytics.financial.model.option.pricing.analytic.formula.EuropeanVanillaOption,com.opengamma.analytics.financial.model.option.definition.Barrier,double,double,double,double,double,double[])>($r31, $r32, d9, d6, $d36, d4, d13, r5);

        $d38 = r4[4];

        $d39 = staticinvoke <java.lang.Math: double abs(double)>(d8);

        $d40 = $d38 * $d39;

        d14 = $d40 * $d47;

        $d41 = r5[4];

        $d42 = staticinvoke <java.lang.Math: double abs(double)>(d8);

        $d43 = $d41 * $d42;

        d15 = $d43 * $d47;

        $d46 = d14 - d15;

        $d44 = 2.0 * d0;

        $d45 = $d44 * d11;

        d16 = $d46 / $d45;

        $r33 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla getUnderlyingOption()>();

        $r34 = virtualinvoke $r33.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        r6 = virtualinvoke $r34.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.util.money.Currency getCurrency2()>();

        $r35 = staticinvoke <com.opengamma.util.money.CurrencyAmount: com.opengamma.util.money.CurrencyAmount of(com.opengamma.util.money.Currency,double)>(r6, d16);

        return $r35;
    }

    public com.opengamma.util.money.CurrencyAmount vommaFd(com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier, com.opengamma.analytics.financial.provider.description.forex.BlackForexSmileProviderInterface)
    {
        com.opengamma.analytics.financial.forex.provider.ForexOptionSingleBarrierBlackMethod r0;
        com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier r1;
        com.opengamma.analytics.financial.provider.description.forex.BlackForexSmileProviderInterface r2;
        com.opengamma.util.money.CurrencyAmount $r3;

        r0 := @this: com.opengamma.analytics.financial.forex.provider.ForexOptionSingleBarrierBlackMethod;

        r1 := @parameter0: com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier;

        r2 := @parameter1: com.opengamma.analytics.financial.provider.description.forex.BlackForexSmileProviderInterface;

        $r3 = virtualinvoke r0.<com.opengamma.analytics.financial.forex.provider.ForexOptionSingleBarrierBlackMethod: com.opengamma.util.money.CurrencyAmount vommaFd(com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier,com.opengamma.analytics.financial.provider.description.forex.BlackForexSmileProviderInterface,double)>(r1, r2, 1.0E-5);

        return $r3;
    }

    public com.opengamma.util.money.CurrencyAmount vannaFd(com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier, com.opengamma.analytics.financial.provider.description.forex.BlackForexSmileProviderInterface, double)
    {
        com.opengamma.analytics.financial.forex.provider.ForexOptionSingleBarrierBlackMethod r0;
        com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier r1;
        com.opengamma.analytics.financial.provider.description.forex.BlackForexSmileProviderInterface r2;
        double d0;
        com.opengamma.util.money.CurrencyAmount $r3;

        r0 := @this: com.opengamma.analytics.financial.forex.provider.ForexOptionSingleBarrierBlackMethod;

        r1 := @parameter0: com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier;

        r2 := @parameter1: com.opengamma.analytics.financial.provider.description.forex.BlackForexSmileProviderInterface;

        d0 := @parameter2: double;

        $r3 = virtualinvoke r0.<com.opengamma.analytics.financial.forex.provider.ForexOptionSingleBarrierBlackMethod: com.opengamma.util.money.CurrencyAmount d2PriceDSpotDVolFD(com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier,com.opengamma.analytics.financial.provider.description.forex.BlackForexSmileProviderInterface,double)>(r1, r2, d0);

        return $r3;
    }

    public com.opengamma.util.money.CurrencyAmount vannaFd(com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier, com.opengamma.analytics.financial.provider.description.forex.BlackForexSmileProviderInterface)
    {
        com.opengamma.analytics.financial.forex.provider.ForexOptionSingleBarrierBlackMethod r0;
        com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier r1;
        com.opengamma.analytics.financial.provider.description.forex.BlackForexSmileProviderInterface r2;
        com.opengamma.util.money.CurrencyAmount $r3;

        r0 := @this: com.opengamma.analytics.financial.forex.provider.ForexOptionSingleBarrierBlackMethod;

        r1 := @parameter0: com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier;

        r2 := @parameter1: com.opengamma.analytics.financial.provider.description.forex.BlackForexSmileProviderInterface;

        $r3 = virtualinvoke r0.<com.opengamma.analytics.financial.forex.provider.ForexOptionSingleBarrierBlackMethod: com.opengamma.util.money.CurrencyAmount vannaFd(com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier,com.opengamma.analytics.financial.provider.description.forex.BlackForexSmileProviderInterface,double)>(r1, r2, 1.0E-5);

        return $r3;
    }

    public com.opengamma.util.money.CurrencyAmount dVegaDSpotFD(com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier, com.opengamma.analytics.financial.provider.description.forex.BlackForexSmileProviderInterface, double)
    {
        com.opengamma.analytics.financial.forex.provider.ForexOptionSingleBarrierBlackMethod r0;
        com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier r1;
        com.opengamma.analytics.financial.provider.description.forex.BlackForexSmileProviderInterface r2;
        double d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, d11, d12, d13, d14, d15, d16, $d17, $d18, $d19, $d20, $d21, $d22, $d23, $d24, $d25, $d26, $d27, $d28, $d29, $d30, $d31, $d32, $d33, $d34, $d36, $d38, $d39, $d40, $d41, $d42, $d43, $d44, $d45, $d46, $d47;
        com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface r3;
        double[] r4, r5;
        com.opengamma.util.money.Currency r6, $r9, $r10, $r13, $r15, $r17, $r18, $r23, $r24;
        boolean $z0, $z1;
        com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla $r11, $r19, $r22, $r25, $r26, $r28, $r31, $r33;
        com.opengamma.analytics.financial.forex.derivative.Forex $r12, $r20, $r34;
        java.lang.Double $r14, $r16;
        com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed $r21;
        com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackBarrierPriceFunction $r27, $r30;
        com.opengamma.analytics.financial.model.option.definition.Barrier $r29, $r32;
        com.opengamma.util.money.CurrencyAmount $r35;

        r0 := @this: com.opengamma.analytics.financial.forex.provider.ForexOptionSingleBarrierBlackMethod;

        r1 := @parameter0: com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier;

        r2 := @parameter1: com.opengamma.analytics.financial.provider.description.forex.BlackForexSmileProviderInterface;

        d0 := @parameter2: double;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "Forex option");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, "Smile");

        $r9 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.util.money.Currency getCurrency1()>();

        $r10 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.util.money.Currency getCurrency2()>();

        $z0 = interfaceinvoke r2.<com.opengamma.analytics.financial.provider.description.forex.BlackForexSmileProviderInterface: boolean checkCurrencies(com.opengamma.util.money.Currency,com.opengamma.util.money.Currency)>($r9, $r10);

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z0, "Option currencies not compatible with smile data");

        r3 = interfaceinvoke r2.<com.opengamma.analytics.financial.provider.description.forex.BlackForexSmileProviderInterface: com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface getMulticurveProvider()>();

        $r11 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla getUnderlyingOption()>();

        $r12 = virtualinvoke $r11.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        d1 = virtualinvoke $r12.<com.opengamma.analytics.financial.forex.derivative.Forex: double getPaymentTime()>();

        $r13 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.util.money.Currency getCurrency2()>();

        $r14 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d1);

        d2 = interfaceinvoke r3.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface: double getDiscountFactor(com.opengamma.util.money.Currency,java.lang.Double)>($r13, $r14);

        $r15 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.util.money.Currency getCurrency1()>();

        $r16 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d1);

        d3 = interfaceinvoke r3.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface: double getDiscountFactor(com.opengamma.util.money.Currency,java.lang.Double)>($r15, $r16);

        $d17 = staticinvoke <java.lang.Math: double log(double)>(d2);

        $d18 = neg $d17;

        d4 = $d18 / d1;

        $d19 = staticinvoke <java.lang.Math: double log(double)>(d3);

        $d20 = neg $d19;

        d5 = $d20 / d1;

        $r17 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.util.money.Currency getCurrency1()>();

        $r18 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.util.money.Currency getCurrency2()>();

        d6 = interfaceinvoke r3.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface: double getFxRate(com.opengamma.util.money.Currency,com.opengamma.util.money.Currency)>($r17, $r18);

        $d21 = neg d5;

        $d22 = $d21 * d1;

        $d23 = staticinvoke <java.lang.Math: double exp(double)>($d22);

        $d26 = d6 * $d23;

        $d24 = neg d4;

        $d25 = $d24 * d1;

        $d27 = staticinvoke <java.lang.Math: double exp(double)>($d25);

        d7 = $d26 / $d27;

        $r19 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla getUnderlyingOption()>();

        $r20 = virtualinvoke $r19.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        $r21 = virtualinvoke $r20.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed getPaymentCurrency1()>();

        d8 = virtualinvoke $r21.<com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed: double getAmount()>();

        $d28 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: double getRebate()>();

        $d29 = staticinvoke <java.lang.Math: double abs(double)>(d8);

        d9 = $d28 / $d29;

        $r22 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla getUnderlyingOption()>();

        $z1 = virtualinvoke $r22.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: boolean isLong()>();

        if $z1 == 0 goto label1;

        $d47 = 1.0;

        goto label2;

     label1:
        $d47 = -1.0;

     label2:
        $r23 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.util.money.Currency getCurrency1()>();

        $r24 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.util.money.Currency getCurrency2()>();

        $r25 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla getUnderlyingOption()>();

        $d30 = virtualinvoke $r25.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: double getTimeToExpiry()>();

        $r26 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla getUnderlyingOption()>();

        $d31 = virtualinvoke $r26.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: double getStrike()>();

        d11 = interfaceinvoke r2.<com.opengamma.analytics.financial.provider.description.forex.BlackForexSmileProviderInterface: double getVolatility(com.opengamma.util.money.Currency,com.opengamma.util.money.Currency,double,double,double)>($r23, $r24, $d30, $d31, d7);

        $d32 = 1.0 + d0;

        d12 = $d32 * d6;

        $d33 = 1.0 - d0;

        d13 = $d33 * d6;

        r4 = newarray (double)[5];

        r5 = newarray (double)[5];

        $r27 = <com.opengamma.analytics.financial.forex.provider.ForexOptionSingleBarrierBlackMethod: com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackBarrierPriceFunction BARRIER_FUNCTION>;

        $r28 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla getUnderlyingOption()>();

        $r29 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.analytics.financial.model.option.definition.Barrier getBarrier()>();

        $d34 = d4 - d5;

        virtualinvoke $r27.<com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackBarrierPriceFunction: double getPriceAdjoint(com.opengamma.analytics.financial.model.option.pricing.analytic.formula.EuropeanVanillaOption,com.opengamma.analytics.financial.model.option.definition.Barrier,double,double,double,double,double,double[])>($r28, $r29, d9, d12, $d34, d4, d11, r4);

        $r30 = <com.opengamma.analytics.financial.forex.provider.ForexOptionSingleBarrierBlackMethod: com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackBarrierPriceFunction BARRIER_FUNCTION>;

        $r31 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla getUnderlyingOption()>();

        $r32 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.analytics.financial.model.option.definition.Barrier getBarrier()>();

        $d36 = d4 - d5;

        virtualinvoke $r30.<com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackBarrierPriceFunction: double getPriceAdjoint(com.opengamma.analytics.financial.model.option.pricing.analytic.formula.EuropeanVanillaOption,com.opengamma.analytics.financial.model.option.definition.Barrier,double,double,double,double,double,double[])>($r31, $r32, d9, d13, $d36, d4, d11, r5);

        $d38 = r4[4];

        $d39 = staticinvoke <java.lang.Math: double abs(double)>(d8);

        $d40 = $d38 * $d39;

        d14 = $d40 * $d47;

        $d41 = r5[4];

        $d42 = staticinvoke <java.lang.Math: double abs(double)>(d8);

        $d43 = $d41 * $d42;

        d15 = $d43 * $d47;

        $d46 = d14 - d15;

        $d44 = 2.0 * d0;

        $d45 = $d44 * d11;

        d16 = $d46 / $d45;

        $r33 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla getUnderlyingOption()>();

        $r34 = virtualinvoke $r33.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        r6 = virtualinvoke $r34.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.util.money.Currency getCurrency2()>();

        $r35 = staticinvoke <com.opengamma.util.money.CurrencyAmount: com.opengamma.util.money.CurrencyAmount of(com.opengamma.util.money.Currency,double)>(r6, d16);

        return $r35;
    }

    public com.opengamma.util.money.CurrencyAmount dDeltaDVolFD(com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier, com.opengamma.analytics.financial.provider.description.forex.BlackForexSmileProviderInterface, double)
    {
        com.opengamma.analytics.financial.forex.provider.ForexOptionSingleBarrierBlackMethod r0;
        com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier r1;
        com.opengamma.analytics.financial.provider.description.forex.BlackForexSmileProviderInterface r2;
        double d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, d11, d12, d13, d14, d15, d16, $d17, $d18, $d19, $d20, $d21, $d22, $d23, $d24, $d25, $d26, $d27, $d28, $d29, $d30, $d31, $d32, $d33, $d34, $d36, $d38, $d39, $d40, $d41, $d42, $d43, $d44, $d45, $d46, $d47;
        com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface r3;
        double[] r4, r5;
        com.opengamma.util.money.Currency r6, $r9, $r10, $r13, $r15, $r17, $r18, $r23, $r24;
        boolean $z0, $z1;
        com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla $r11, $r19, $r22, $r25, $r26, $r28, $r31, $r33;
        com.opengamma.analytics.financial.forex.derivative.Forex $r12, $r20, $r34;
        java.lang.Double $r14, $r16;
        com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed $r21;
        com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackBarrierPriceFunction $r27, $r30;
        com.opengamma.analytics.financial.model.option.definition.Barrier $r29, $r32;
        com.opengamma.util.money.CurrencyAmount $r35;

        r0 := @this: com.opengamma.analytics.financial.forex.provider.ForexOptionSingleBarrierBlackMethod;

        r1 := @parameter0: com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier;

        r2 := @parameter1: com.opengamma.analytics.financial.provider.description.forex.BlackForexSmileProviderInterface;

        d0 := @parameter2: double;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "Forex option");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, "Smile");

        $r9 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.util.money.Currency getCurrency1()>();

        $r10 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.util.money.Currency getCurrency2()>();

        $z0 = interfaceinvoke r2.<com.opengamma.analytics.financial.provider.description.forex.BlackForexSmileProviderInterface: boolean checkCurrencies(com.opengamma.util.money.Currency,com.opengamma.util.money.Currency)>($r9, $r10);

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z0, "Option currencies not compatible with smile data");

        r3 = interfaceinvoke r2.<com.opengamma.analytics.financial.provider.description.forex.BlackForexSmileProviderInterface: com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface getMulticurveProvider()>();

        $r11 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla getUnderlyingOption()>();

        $r12 = virtualinvoke $r11.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        d1 = virtualinvoke $r12.<com.opengamma.analytics.financial.forex.derivative.Forex: double getPaymentTime()>();

        $r13 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.util.money.Currency getCurrency2()>();

        $r14 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d1);

        d2 = interfaceinvoke r3.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface: double getDiscountFactor(com.opengamma.util.money.Currency,java.lang.Double)>($r13, $r14);

        $r15 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.util.money.Currency getCurrency1()>();

        $r16 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d1);

        d3 = interfaceinvoke r3.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface: double getDiscountFactor(com.opengamma.util.money.Currency,java.lang.Double)>($r15, $r16);

        $d17 = staticinvoke <java.lang.Math: double log(double)>(d2);

        $d18 = neg $d17;

        d4 = $d18 / d1;

        $d19 = staticinvoke <java.lang.Math: double log(double)>(d3);

        $d20 = neg $d19;

        d5 = $d20 / d1;

        $r17 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.util.money.Currency getCurrency1()>();

        $r18 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.util.money.Currency getCurrency2()>();

        d6 = interfaceinvoke r3.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface: double getFxRate(com.opengamma.util.money.Currency,com.opengamma.util.money.Currency)>($r17, $r18);

        $d21 = neg d5;

        $d22 = $d21 * d1;

        $d23 = staticinvoke <java.lang.Math: double exp(double)>($d22);

        $d26 = d6 * $d23;

        $d24 = neg d4;

        $d25 = $d24 * d1;

        $d27 = staticinvoke <java.lang.Math: double exp(double)>($d25);

        d7 = $d26 / $d27;

        $r19 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla getUnderlyingOption()>();

        $r20 = virtualinvoke $r19.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        $r21 = virtualinvoke $r20.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed getPaymentCurrency1()>();

        d8 = virtualinvoke $r21.<com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed: double getAmount()>();

        $d28 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: double getRebate()>();

        $d29 = staticinvoke <java.lang.Math: double abs(double)>(d8);

        d9 = $d28 / $d29;

        $r22 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla getUnderlyingOption()>();

        $z1 = virtualinvoke $r22.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: boolean isLong()>();

        if $z1 == 0 goto label1;

        $d47 = 1.0;

        goto label2;

     label1:
        $d47 = -1.0;

     label2:
        $r23 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.util.money.Currency getCurrency1()>();

        $r24 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.util.money.Currency getCurrency2()>();

        $r25 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla getUnderlyingOption()>();

        $d30 = virtualinvoke $r25.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: double getTimeToExpiry()>();

        $r26 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla getUnderlyingOption()>();

        $d31 = virtualinvoke $r26.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: double getStrike()>();

        d11 = interfaceinvoke r2.<com.opengamma.analytics.financial.provider.description.forex.BlackForexSmileProviderInterface: double getVolatility(com.opengamma.util.money.Currency,com.opengamma.util.money.Currency,double,double,double)>($r23, $r24, $d30, $d31, d7);

        $d32 = 1.0 + d0;

        d12 = $d32 * d11;

        $d33 = 1.0 - d0;

        d13 = $d33 * d11;

        r4 = newarray (double)[5];

        r5 = newarray (double)[5];

        $r27 = <com.opengamma.analytics.financial.forex.provider.ForexOptionSingleBarrierBlackMethod: com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackBarrierPriceFunction BARRIER_FUNCTION>;

        $r28 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla getUnderlyingOption()>();

        $r29 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.analytics.financial.model.option.definition.Barrier getBarrier()>();

        $d34 = d4 - d5;

        virtualinvoke $r27.<com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackBarrierPriceFunction: double getPriceAdjoint(com.opengamma.analytics.financial.model.option.pricing.analytic.formula.EuropeanVanillaOption,com.opengamma.analytics.financial.model.option.definition.Barrier,double,double,double,double,double,double[])>($r28, $r29, d9, d6, $d34, d4, d12, r4);

        $r30 = <com.opengamma.analytics.financial.forex.provider.ForexOptionSingleBarrierBlackMethod: com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackBarrierPriceFunction BARRIER_FUNCTION>;

        $r31 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla getUnderlyingOption()>();

        $r32 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.analytics.financial.model.option.definition.Barrier getBarrier()>();

        $d36 = d4 - d5;

        virtualinvoke $r30.<com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackBarrierPriceFunction: double getPriceAdjoint(com.opengamma.analytics.financial.model.option.pricing.analytic.formula.EuropeanVanillaOption,com.opengamma.analytics.financial.model.option.definition.Barrier,double,double,double,double,double,double[])>($r31, $r32, d9, d6, $d36, d4, d13, r5);

        $d38 = r4[0];

        $d39 = staticinvoke <java.lang.Math: double abs(double)>(d8);

        $d40 = $d38 * $d39;

        d14 = $d40 * $d47;

        $d41 = r5[0];

        $d42 = staticinvoke <java.lang.Math: double abs(double)>(d8);

        $d43 = $d41 * $d42;

        d15 = $d43 * $d47;

        $d46 = d14 - d15;

        $d44 = 2.0 * d0;

        $d45 = $d44 * d6;

        d16 = $d46 / $d45;

        $r33 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla getUnderlyingOption()>();

        $r34 = virtualinvoke $r33.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        r6 = virtualinvoke $r34.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.util.money.Currency getCurrency2()>();

        $r35 = staticinvoke <com.opengamma.util.money.CurrencyAmount: com.opengamma.util.money.CurrencyAmount of(com.opengamma.util.money.Currency,double)>(r6, d16);

        return $r35;
    }

    public com.opengamma.util.money.CurrencyAmount d2PriceDSpotDVolFD(com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier, com.opengamma.analytics.financial.provider.description.forex.BlackForexSmileProviderInterface, double)
    {
        com.opengamma.analytics.financial.forex.provider.ForexOptionSingleBarrierBlackMethod r0;
        com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier r1;
        com.opengamma.analytics.financial.provider.description.forex.BlackForexSmileProviderInterface r2;
        double d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, d10, d12, d13, d14, d15, d16, d17, d18, d19, d20, d21, $d22, $d23, $d24, $d25, $d26, $d27, $d28, $d29, $d30, $d31, $d32, $d33, $d34, $d35, $d36, $d37, $d38, $d39, $d40, $d41, $d42, $d43, $d44, $d45, $d46, $d47, $d48, $d49, $d50, $d51, $d52;
        com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface r3;
        com.opengamma.util.money.Currency r4, $r7, $r8, $r11, $r13, $r15, $r16, $r21, $r22;
        boolean $z0, $z1;
        com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla $r9, $r17, $r20, $r23, $r24, $r26, $r29, $r32, $r35, $r37;
        com.opengamma.analytics.financial.forex.derivative.Forex $r10, $r18, $r38;
        java.lang.Double $r12, $r14;
        com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed $r19;
        com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackBarrierPriceFunction $r25, $r28, $r31, $r34;
        com.opengamma.analytics.financial.model.option.definition.Barrier $r27, $r30, $r33, $r36;
        com.opengamma.util.money.CurrencyAmount $r39;

        r0 := @this: com.opengamma.analytics.financial.forex.provider.ForexOptionSingleBarrierBlackMethod;

        r1 := @parameter0: com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier;

        r2 := @parameter1: com.opengamma.analytics.financial.provider.description.forex.BlackForexSmileProviderInterface;

        d0 := @parameter2: double;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "Forex option");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, "Smile");

        $r7 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.util.money.Currency getCurrency1()>();

        $r8 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.util.money.Currency getCurrency2()>();

        $z0 = interfaceinvoke r2.<com.opengamma.analytics.financial.provider.description.forex.BlackForexSmileProviderInterface: boolean checkCurrencies(com.opengamma.util.money.Currency,com.opengamma.util.money.Currency)>($r7, $r8);

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z0, "Option currencies not compatible with smile data");

        r3 = interfaceinvoke r2.<com.opengamma.analytics.financial.provider.description.forex.BlackForexSmileProviderInterface: com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface getMulticurveProvider()>();

        $r9 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla getUnderlyingOption()>();

        $r10 = virtualinvoke $r9.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        d1 = virtualinvoke $r10.<com.opengamma.analytics.financial.forex.derivative.Forex: double getPaymentTime()>();

        $r11 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.util.money.Currency getCurrency2()>();

        $r12 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d1);

        d2 = interfaceinvoke r3.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface: double getDiscountFactor(com.opengamma.util.money.Currency,java.lang.Double)>($r11, $r12);

        $r13 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.util.money.Currency getCurrency1()>();

        $r14 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d1);

        d3 = interfaceinvoke r3.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface: double getDiscountFactor(com.opengamma.util.money.Currency,java.lang.Double)>($r13, $r14);

        $d22 = staticinvoke <java.lang.Math: double log(double)>(d2);

        $d23 = neg $d22;

        d4 = $d23 / d1;

        $d24 = staticinvoke <java.lang.Math: double log(double)>(d3);

        $d25 = neg $d24;

        d5 = $d25 / d1;

        d6 = d4 - d5;

        $r15 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.util.money.Currency getCurrency1()>();

        $r16 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.util.money.Currency getCurrency2()>();

        d7 = interfaceinvoke r3.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface: double getFxRate(com.opengamma.util.money.Currency,com.opengamma.util.money.Currency)>($r15, $r16);

        $d26 = neg d5;

        $d27 = $d26 * d1;

        $d28 = staticinvoke <java.lang.Math: double exp(double)>($d27);

        $d31 = d7 * $d28;

        $d29 = neg d4;

        $d30 = $d29 * d1;

        $d32 = staticinvoke <java.lang.Math: double exp(double)>($d30);

        d8 = $d31 / $d32;

        $r17 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla getUnderlyingOption()>();

        $r18 = virtualinvoke $r17.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        $r19 = virtualinvoke $r18.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed getPaymentCurrency1()>();

        d9 = virtualinvoke $r19.<com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed: double getAmount()>();

        $d33 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: double getRebate()>();

        $d34 = staticinvoke <java.lang.Math: double abs(double)>(d9);

        d10 = $d33 / $d34;

        $r20 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla getUnderlyingOption()>();

        $z1 = virtualinvoke $r20.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: boolean isLong()>();

        if $z1 == 0 goto label1;

        $d52 = 1.0;

        goto label2;

     label1:
        $d52 = -1.0;

     label2:
        $r21 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.util.money.Currency getCurrency1()>();

        $r22 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.util.money.Currency getCurrency2()>();

        $r23 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla getUnderlyingOption()>();

        $d35 = virtualinvoke $r23.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: double getTimeToExpiry()>();

        $r24 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla getUnderlyingOption()>();

        $d36 = virtualinvoke $r24.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: double getStrike()>();

        d12 = interfaceinvoke r2.<com.opengamma.analytics.financial.provider.description.forex.BlackForexSmileProviderInterface: double getVolatility(com.opengamma.util.money.Currency,com.opengamma.util.money.Currency,double,double,double)>($r21, $r22, $d35, $d36, d8);

        $d37 = 1.0 + d0;

        d13 = $d37 * d12;

        $d38 = 1.0 - d0;

        d14 = $d38 * d12;

        $d39 = 1.0 + d0;

        d15 = $d39 * d7;

        $d40 = 1.0 - d0;

        d16 = $d40 * d7;

        $r25 = <com.opengamma.analytics.financial.forex.provider.ForexOptionSingleBarrierBlackMethod: com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackBarrierPriceFunction BARRIER_FUNCTION>;

        $r26 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla getUnderlyingOption()>();

        $r27 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.analytics.financial.model.option.definition.Barrier getBarrier()>();

        d17 = virtualinvoke $r25.<com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackBarrierPriceFunction: double getPrice(com.opengamma.analytics.financial.model.option.pricing.analytic.formula.EuropeanVanillaOption,com.opengamma.analytics.financial.model.option.definition.Barrier,double,double,double,double,double)>($r26, $r27, d10, d15, d6, d4, d13);

        $r28 = <com.opengamma.analytics.financial.forex.provider.ForexOptionSingleBarrierBlackMethod: com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackBarrierPriceFunction BARRIER_FUNCTION>;

        $r29 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla getUnderlyingOption()>();

        $r30 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.analytics.financial.model.option.definition.Barrier getBarrier()>();

        d18 = virtualinvoke $r28.<com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackBarrierPriceFunction: double getPrice(com.opengamma.analytics.financial.model.option.pricing.analytic.formula.EuropeanVanillaOption,com.opengamma.analytics.financial.model.option.definition.Barrier,double,double,double,double,double)>($r29, $r30, d10, d16, d6, d4, d14);

        $r31 = <com.opengamma.analytics.financial.forex.provider.ForexOptionSingleBarrierBlackMethod: com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackBarrierPriceFunction BARRIER_FUNCTION>;

        $r32 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla getUnderlyingOption()>();

        $r33 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.analytics.financial.model.option.definition.Barrier getBarrier()>();

        d19 = virtualinvoke $r31.<com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackBarrierPriceFunction: double getPrice(com.opengamma.analytics.financial.model.option.pricing.analytic.formula.EuropeanVanillaOption,com.opengamma.analytics.financial.model.option.definition.Barrier,double,double,double,double,double)>($r32, $r33, d10, d15, d6, d4, d14);

        $r34 = <com.opengamma.analytics.financial.forex.provider.ForexOptionSingleBarrierBlackMethod: com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackBarrierPriceFunction BARRIER_FUNCTION>;

        $r35 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla getUnderlyingOption()>();

        $r36 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.analytics.financial.model.option.definition.Barrier getBarrier()>();

        d20 = virtualinvoke $r34.<com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackBarrierPriceFunction: double getPrice(com.opengamma.analytics.financial.model.option.pricing.analytic.formula.EuropeanVanillaOption,com.opengamma.analytics.financial.model.option.definition.Barrier,double,double,double,double,double)>($r35, $r36, d10, d16, d6, d4, d13);

        $d41 = d17 - d19;

        $d42 = $d41 - d20;

        $d45 = $d42 + d18;

        $d43 = 2.0 * d0;

        $d44 = $d43 * d7;

        $d48 = $d45 / $d44;

        $d46 = 2.0 * d0;

        $d47 = $d46 * d12;

        $d49 = $d48 / $d47;

        $d50 = staticinvoke <java.lang.Math: double abs(double)>(d9);

        $d51 = $d49 * $d50;

        d21 = $d51 * $d52;

        $r37 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla getUnderlyingOption()>();

        $r38 = virtualinvoke $r37.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        r4 = virtualinvoke $r38.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.util.money.Currency getCurrency2()>();

        $r39 = staticinvoke <com.opengamma.util.money.CurrencyAmount: com.opengamma.util.money.CurrencyAmount of(com.opengamma.util.money.Currency,double)>(r4, d21);

        return $r39;
    }

    public com.opengamma.util.money.CurrencyAmount d2PriceDSpotDVolFdAlt(com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier, com.opengamma.analytics.financial.provider.description.forex.BlackForexSmileProviderInterface, double)
    {
        com.opengamma.analytics.financial.forex.provider.ForexOptionSingleBarrierBlackMethod r0;
        com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier r1;
        com.opengamma.analytics.financial.provider.description.forex.BlackForexSmileProviderInterface r2;
        double d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, d10, d12, d13, d14, d15, d16, d17, d18, d19, d20, d21, d22, d23, d24, $d25, $d26, $d27, $d28, $d29, $d30, $d31, $d32, $d33, $d34, $d35, $d36, $d37, $d38, $d39, $d40, $d41, $d42, $d43, $d44, $d45, $d46, $d47, $d48, $d49, $d50, $d51, $d52, $d53, $d54, $d55, $d56, $d57, $d58;
        com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface r3;
        com.opengamma.util.money.Currency r4, $r7, $r8, $r11, $r13, $r15, $r16, $r21, $r22;
        boolean $z0, $z1;
        com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla $r9, $r17, $r20, $r23, $r24, $r26, $r29, $r32, $r35, $r38, $r41, $r44, $r46;
        com.opengamma.analytics.financial.forex.derivative.Forex $r10, $r18, $r47;
        java.lang.Double $r12, $r14;
        com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed $r19;
        com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackBarrierPriceFunction $r25, $r28, $r31, $r34, $r37, $r40, $r43;
        com.opengamma.analytics.financial.model.option.definition.Barrier $r27, $r30, $r33, $r36, $r39, $r42, $r45;
        com.opengamma.util.money.CurrencyAmount $r48;

        r0 := @this: com.opengamma.analytics.financial.forex.provider.ForexOptionSingleBarrierBlackMethod;

        r1 := @parameter0: com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier;

        r2 := @parameter1: com.opengamma.analytics.financial.provider.description.forex.BlackForexSmileProviderInterface;

        d0 := @parameter2: double;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "Forex option");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, "Smile");

        $r7 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.util.money.Currency getCurrency1()>();

        $r8 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.util.money.Currency getCurrency2()>();

        $z0 = interfaceinvoke r2.<com.opengamma.analytics.financial.provider.description.forex.BlackForexSmileProviderInterface: boolean checkCurrencies(com.opengamma.util.money.Currency,com.opengamma.util.money.Currency)>($r7, $r8);

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z0, "Option currencies not compatible with smile data");

        r3 = interfaceinvoke r2.<com.opengamma.analytics.financial.provider.description.forex.BlackForexSmileProviderInterface: com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface getMulticurveProvider()>();

        $r9 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla getUnderlyingOption()>();

        $r10 = virtualinvoke $r9.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        d1 = virtualinvoke $r10.<com.opengamma.analytics.financial.forex.derivative.Forex: double getPaymentTime()>();

        $r11 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.util.money.Currency getCurrency2()>();

        $r12 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d1);

        d2 = interfaceinvoke r3.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface: double getDiscountFactor(com.opengamma.util.money.Currency,java.lang.Double)>($r11, $r12);

        $r13 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.util.money.Currency getCurrency1()>();

        $r14 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d1);

        d3 = interfaceinvoke r3.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface: double getDiscountFactor(com.opengamma.util.money.Currency,java.lang.Double)>($r13, $r14);

        $d25 = staticinvoke <java.lang.Math: double log(double)>(d2);

        $d26 = neg $d25;

        d4 = $d26 / d1;

        $d27 = staticinvoke <java.lang.Math: double log(double)>(d3);

        $d28 = neg $d27;

        d5 = $d28 / d1;

        d6 = d4 - d5;

        $r15 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.util.money.Currency getCurrency1()>();

        $r16 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.util.money.Currency getCurrency2()>();

        d7 = interfaceinvoke r3.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface: double getFxRate(com.opengamma.util.money.Currency,com.opengamma.util.money.Currency)>($r15, $r16);

        $d29 = neg d5;

        $d30 = $d29 * d1;

        $d31 = staticinvoke <java.lang.Math: double exp(double)>($d30);

        $d34 = d7 * $d31;

        $d32 = neg d4;

        $d33 = $d32 * d1;

        $d35 = staticinvoke <java.lang.Math: double exp(double)>($d33);

        d8 = $d34 / $d35;

        $r17 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla getUnderlyingOption()>();

        $r18 = virtualinvoke $r17.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        $r19 = virtualinvoke $r18.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed getPaymentCurrency1()>();

        d9 = virtualinvoke $r19.<com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed: double getAmount()>();

        $d36 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: double getRebate()>();

        $d37 = staticinvoke <java.lang.Math: double abs(double)>(d9);

        d10 = $d36 / $d37;

        $r20 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla getUnderlyingOption()>();

        $z1 = virtualinvoke $r20.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: boolean isLong()>();

        if $z1 == 0 goto label1;

        $d58 = 1.0;

        goto label2;

     label1:
        $d58 = -1.0;

     label2:
        $r21 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.util.money.Currency getCurrency1()>();

        $r22 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.util.money.Currency getCurrency2()>();

        $r23 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla getUnderlyingOption()>();

        $d38 = virtualinvoke $r23.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: double getTimeToExpiry()>();

        $r24 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla getUnderlyingOption()>();

        $d39 = virtualinvoke $r24.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: double getStrike()>();

        d12 = interfaceinvoke r2.<com.opengamma.analytics.financial.provider.description.forex.BlackForexSmileProviderInterface: double getVolatility(com.opengamma.util.money.Currency,com.opengamma.util.money.Currency,double,double,double)>($r21, $r22, $d38, $d39, d8);

        $d40 = 1.0 + d0;

        d13 = $d40 * d12;

        $d41 = 1.0 - d0;

        d14 = $d41 * d12;

        $d42 = 1.0 + d0;

        d15 = $d42 * d7;

        $d43 = 1.0 - d0;

        d16 = $d43 * d7;

        $r25 = <com.opengamma.analytics.financial.forex.provider.ForexOptionSingleBarrierBlackMethod: com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackBarrierPriceFunction BARRIER_FUNCTION>;

        $r26 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla getUnderlyingOption()>();

        $r27 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.analytics.financial.model.option.definition.Barrier getBarrier()>();

        d17 = virtualinvoke $r25.<com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackBarrierPriceFunction: double getPrice(com.opengamma.analytics.financial.model.option.pricing.analytic.formula.EuropeanVanillaOption,com.opengamma.analytics.financial.model.option.definition.Barrier,double,double,double,double,double)>($r26, $r27, d10, d7, d6, d4, d12);

        $r28 = <com.opengamma.analytics.financial.forex.provider.ForexOptionSingleBarrierBlackMethod: com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackBarrierPriceFunction BARRIER_FUNCTION>;

        $r29 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla getUnderlyingOption()>();

        $r30 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.analytics.financial.model.option.definition.Barrier getBarrier()>();

        d18 = virtualinvoke $r28.<com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackBarrierPriceFunction: double getPrice(com.opengamma.analytics.financial.model.option.pricing.analytic.formula.EuropeanVanillaOption,com.opengamma.analytics.financial.model.option.definition.Barrier,double,double,double,double,double)>($r29, $r30, d10, d15, d6, d4, d13);

        $r31 = <com.opengamma.analytics.financial.forex.provider.ForexOptionSingleBarrierBlackMethod: com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackBarrierPriceFunction BARRIER_FUNCTION>;

        $r32 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla getUnderlyingOption()>();

        $r33 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.analytics.financial.model.option.definition.Barrier getBarrier()>();

        d19 = virtualinvoke $r31.<com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackBarrierPriceFunction: double getPrice(com.opengamma.analytics.financial.model.option.pricing.analytic.formula.EuropeanVanillaOption,com.opengamma.analytics.financial.model.option.definition.Barrier,double,double,double,double,double)>($r32, $r33, d10, d16, d6, d4, d14);

        $r34 = <com.opengamma.analytics.financial.forex.provider.ForexOptionSingleBarrierBlackMethod: com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackBarrierPriceFunction BARRIER_FUNCTION>;

        $r35 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla getUnderlyingOption()>();

        $r36 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.analytics.financial.model.option.definition.Barrier getBarrier()>();

        d20 = virtualinvoke $r34.<com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackBarrierPriceFunction: double getPrice(com.opengamma.analytics.financial.model.option.pricing.analytic.formula.EuropeanVanillaOption,com.opengamma.analytics.financial.model.option.definition.Barrier,double,double,double,double,double)>($r35, $r36, d10, d7, d6, d4, d13);

        $r37 = <com.opengamma.analytics.financial.forex.provider.ForexOptionSingleBarrierBlackMethod: com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackBarrierPriceFunction BARRIER_FUNCTION>;

        $r38 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla getUnderlyingOption()>();

        $r39 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.analytics.financial.model.option.definition.Barrier getBarrier()>();

        d21 = virtualinvoke $r37.<com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackBarrierPriceFunction: double getPrice(com.opengamma.analytics.financial.model.option.pricing.analytic.formula.EuropeanVanillaOption,com.opengamma.analytics.financial.model.option.definition.Barrier,double,double,double,double,double)>($r38, $r39, d10, d7, d6, d4, d14);

        $r40 = <com.opengamma.analytics.financial.forex.provider.ForexOptionSingleBarrierBlackMethod: com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackBarrierPriceFunction BARRIER_FUNCTION>;

        $r41 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla getUnderlyingOption()>();

        $r42 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.analytics.financial.model.option.definition.Barrier getBarrier()>();

        d22 = virtualinvoke $r40.<com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackBarrierPriceFunction: double getPrice(com.opengamma.analytics.financial.model.option.pricing.analytic.formula.EuropeanVanillaOption,com.opengamma.analytics.financial.model.option.definition.Barrier,double,double,double,double,double)>($r41, $r42, d10, d15, d6, d4, d12);

        $r43 = <com.opengamma.analytics.financial.forex.provider.ForexOptionSingleBarrierBlackMethod: com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackBarrierPriceFunction BARRIER_FUNCTION>;

        $r44 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla getUnderlyingOption()>();

        $r45 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.analytics.financial.model.option.definition.Barrier getBarrier()>();

        d23 = virtualinvoke $r43.<com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackBarrierPriceFunction: double getPrice(com.opengamma.analytics.financial.model.option.pricing.analytic.formula.EuropeanVanillaOption,com.opengamma.analytics.financial.model.option.definition.Barrier,double,double,double,double,double)>($r44, $r45, d10, d16, d6, d4, d12);

        $d44 = d18 - d20;

        $d46 = $d44 - d22;

        $d45 = 2.0 * d17;

        $d47 = $d46 + $d45;

        $d48 = $d47 + d19;

        $d49 = $d48 - d21;

        $d54 = $d49 - d23;

        $d50 = 2.0 * d0;

        $d51 = $d50 * d7;

        $d52 = $d51 * d0;

        $d53 = $d52 * d12;

        $d55 = $d54 / $d53;

        $d56 = staticinvoke <java.lang.Math: double abs(double)>(d9);

        $d57 = $d55 * $d56;

        d24 = $d57 * $d58;

        $r46 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla getUnderlyingOption()>();

        $r47 = virtualinvoke $r46.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        r4 = virtualinvoke $r47.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.util.money.Currency getCurrency2()>();

        $r48 = staticinvoke <com.opengamma.util.money.CurrencyAmount: com.opengamma.util.money.CurrencyAmount of(com.opengamma.util.money.Currency,double)>(r4, d24);

        return $r48;
    }

    static void <clinit>()
    {
        com.opengamma.analytics.financial.forex.provider.ForexOptionSingleBarrierBlackMethod $r0;
        com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackBarrierPriceFunction $r1;

        <com.opengamma.analytics.financial.forex.provider.ForexOptionSingleBarrierBlackMethod: double DEFAULT_VANNA_SHIFT> = 1.0E-5;

        <com.opengamma.analytics.financial.forex.provider.ForexOptionSingleBarrierBlackMethod: double DEFAULT_VOMMA_SHIFT> = 1.0E-5;

        <com.opengamma.analytics.financial.forex.provider.ForexOptionSingleBarrierBlackMethod: double DEFAULT_GAMMA_SHIFT> = 1.0E-5;

        $r0 = new com.opengamma.analytics.financial.forex.provider.ForexOptionSingleBarrierBlackMethod;

        specialinvoke $r0.<com.opengamma.analytics.financial.forex.provider.ForexOptionSingleBarrierBlackMethod: void <init>()>();

        <com.opengamma.analytics.financial.forex.provider.ForexOptionSingleBarrierBlackMethod: com.opengamma.analytics.financial.forex.provider.ForexOptionSingleBarrierBlackMethod INSTANCE> = $r0;

        $r1 = staticinvoke <com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackBarrierPriceFunction: com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackBarrierPriceFunction getInstance()>();

        <com.opengamma.analytics.financial.forex.provider.ForexOptionSingleBarrierBlackMethod: com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackBarrierPriceFunction BARRIER_FUNCTION> = $r1;

        return;
    }
}
