final class com.opengamma.analytics.financial.equity.variance.pricing.VolatilitySurfaceConverter$1 extends java.lang.Object implements com.opengamma.analytics.math.function.Function
{
    final com.opengamma.analytics.financial.equity.variance.pricing.EquityDividendsCurvesBundle val$divCurves;
    final com.opengamma.analytics.financial.model.volatility.surface.BlackVolatilitySurfaceStrike val$volSurface;

    void <init>(com.opengamma.analytics.financial.equity.variance.pricing.EquityDividendsCurvesBundle, com.opengamma.analytics.financial.model.volatility.surface.BlackVolatilitySurfaceStrike)
    {
        com.opengamma.analytics.financial.equity.variance.pricing.VolatilitySurfaceConverter$1 r0;
        com.opengamma.analytics.financial.equity.variance.pricing.EquityDividendsCurvesBundle r1;
        com.opengamma.analytics.financial.model.volatility.surface.BlackVolatilitySurfaceStrike r2;

        r0 := @this: com.opengamma.analytics.financial.equity.variance.pricing.VolatilitySurfaceConverter$1;

        r1 := @parameter0: com.opengamma.analytics.financial.equity.variance.pricing.EquityDividendsCurvesBundle;

        r2 := @parameter1: com.opengamma.analytics.financial.model.volatility.surface.BlackVolatilitySurfaceStrike;

        r0.<com.opengamma.analytics.financial.equity.variance.pricing.VolatilitySurfaceConverter$1: com.opengamma.analytics.financial.equity.variance.pricing.EquityDividendsCurvesBundle val$divCurves> = r1;

        r0.<com.opengamma.analytics.financial.equity.variance.pricing.VolatilitySurfaceConverter$1: com.opengamma.analytics.financial.model.volatility.surface.BlackVolatilitySurfaceStrike val$volSurface> = r2;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public transient java.lang.Double evaluate(java.lang.Double[])
    {
        com.opengamma.analytics.financial.equity.variance.pricing.VolatilitySurfaceConverter$1 r0;
        java.lang.Double[] r1;
        double d0, d1, d2, d3, d4, d5, d6, d7, $d8, $d9, $d10, $d11;
        java.lang.Double $r2, $r3, $r7, $r8;
        com.opengamma.analytics.financial.equity.variance.pricing.EquityDividendsCurvesBundle $r4, $r5;
        byte $b0, $b1;
        com.opengamma.analytics.financial.model.volatility.surface.BlackVolatilitySurfaceStrike $r6;
        boolean $z1;

        r0 := @this: com.opengamma.analytics.financial.equity.variance.pricing.VolatilitySurfaceConverter$1;

        r1 := @parameter0: java.lang.Double[];

        $r2 = r1[0];

        d0 = virtualinvoke $r2.<java.lang.Double: double doubleValue()>();

        $r3 = r1[1];

        d1 = virtualinvoke $r3.<java.lang.Double: double doubleValue()>();

        $r4 = r0.<com.opengamma.analytics.financial.equity.variance.pricing.VolatilitySurfaceConverter$1: com.opengamma.analytics.financial.equity.variance.pricing.EquityDividendsCurvesBundle val$divCurves>;

        d2 = virtualinvoke $r4.<com.opengamma.analytics.financial.equity.variance.pricing.EquityDividendsCurvesBundle: double getF(double)>(d0);

        $r5 = r0.<com.opengamma.analytics.financial.equity.variance.pricing.VolatilitySurfaceConverter$1: com.opengamma.analytics.financial.equity.variance.pricing.EquityDividendsCurvesBundle val$divCurves>;

        d3 = virtualinvoke $r5.<com.opengamma.analytics.financial.equity.variance.pricing.EquityDividendsCurvesBundle: double getD(double)>(d0);

        $b0 = d1 cmpl 1.0;

        if $b0 <= 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        $d8 = d2 - d3;

        $d9 = $d8 * d1;

        d4 = $d9 + d3;

        $r6 = r0.<com.opengamma.analytics.financial.equity.variance.pricing.VolatilitySurfaceConverter$1: com.opengamma.analytics.financial.model.volatility.surface.BlackVolatilitySurfaceStrike val$volSurface>;

        d5 = virtualinvoke $r6.<com.opengamma.analytics.financial.model.volatility.surface.BlackVolatilitySurfaceStrike: double getVolatility(double,double)>(d0, d4);

        d6 = staticinvoke <com.opengamma.analytics.financial.model.volatility.BlackFormulaRepository: double price(double,double,double,double,boolean)>(d2, d4, d0, d5, $z1);

        $b1 = d6 cmpg 0.0;

        if $b1 >= 0 goto label3;

        $r8 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(0.0);

        return $r8;

     label3:
        $d10 = d2 - d3;

        $d11 = d6 / $d10;

        d7 = staticinvoke <com.opengamma.analytics.financial.model.volatility.BlackFormulaRepository: double impliedVolatility(double,double,double,double,boolean)>($d11, 1.0, d1, d0, $z1);

        $r7 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d7);

        return $r7;
    }

    public volatile java.lang.Object evaluate(java.lang.Object[])
    {
        com.opengamma.analytics.financial.equity.variance.pricing.VolatilitySurfaceConverter$1 r0;
        java.lang.Object[] r1;
        java.lang.Double[] $r2;
        java.lang.Double $r3;

        r0 := @this: com.opengamma.analytics.financial.equity.variance.pricing.VolatilitySurfaceConverter$1;

        r1 := @parameter0: java.lang.Object[];

        $r2 = (java.lang.Double[]) r1;

        $r3 = virtualinvoke r0.<com.opengamma.analytics.financial.equity.variance.pricing.VolatilitySurfaceConverter$1: java.lang.Double evaluate(java.lang.Double[])>($r2);

        return $r3;
    }
}
