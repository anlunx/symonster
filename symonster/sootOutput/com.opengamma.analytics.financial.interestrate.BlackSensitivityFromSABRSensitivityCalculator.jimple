public class com.opengamma.analytics.financial.interestrate.BlackSensitivityFromSABRSensitivityCalculator extends java.lang.Object
{
    private static final com.opengamma.analytics.math.matrix.MatrixAlgebra ALGEBRA;

    public void <init>()
    {
        com.opengamma.analytics.financial.interestrate.BlackSensitivityFromSABRSensitivityCalculator r0;

        r0 := @this: com.opengamma.analytics.financial.interestrate.BlackSensitivityFromSABRSensitivityCalculator;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static java.util.Map blackSensitivity(com.opengamma.analytics.financial.interestrate.PresentValueSABRSensitivityDataBundle, java.util.Map)
    {
        com.opengamma.analytics.financial.interestrate.PresentValueSABRSensitivityDataBundle r0;
        java.util.Map r1;
        java.util.Set r2, r3, $r15;
        java.util.Iterator r5;
        com.opengamma.util.tuple.DoublesPair r6;
        double d0, d1, d2, d3;
        com.opengamma.analytics.math.matrix.DoubleMatrix2D r8;
        com.opengamma.analytics.math.matrix.DoubleMatrix1D r9, $r33;
        com.opengamma.analytics.util.amount.SurfaceValue $r10, $r13, $r17, $r21, $r25, $r29;
        java.util.HashMap $r11, $r12, $r14, $r18, $r22, $r26, $r30;
        boolean $z0, $z1;
        java.lang.Object $r16, $r19, $r23, $r27, $r31, $r35;
        java.lang.Double $r20, $r24, $r28, $r32;
        double[] $r34;
        com.opengamma.analytics.math.matrix.MatrixAlgebra $r36;
        com.opengamma.analytics.math.matrix.Matrix $r37;

        r0 := @parameter0: com.opengamma.analytics.financial.interestrate.PresentValueSABRSensitivityDataBundle;

        r1 := @parameter1: java.util.Map;

        $r10 = virtualinvoke r0.<com.opengamma.analytics.financial.interestrate.PresentValueSABRSensitivityDataBundle: com.opengamma.analytics.util.amount.SurfaceValue getAlpha()>();

        $r11 = virtualinvoke $r10.<com.opengamma.analytics.util.amount.SurfaceValue: java.util.HashMap getMap()>();

        r2 = virtualinvoke $r11.<java.util.HashMap: java.util.Set keySet()>();

        r3 = interfaceinvoke r1.<java.util.Map: java.util.Set keySet()>();

        $z0 = interfaceinvoke r2.<java.util.Set: boolean equals(java.lang.Object)>(r3);

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z0, "Point of SABR sensitivity and inverse Jacobian are not the same.");

        $r12 = new java.util.HashMap;

        specialinvoke $r12.<java.util.HashMap: void <init>()>();

        $r13 = virtualinvoke r0.<com.opengamma.analytics.financial.interestrate.PresentValueSABRSensitivityDataBundle: com.opengamma.analytics.util.amount.SurfaceValue getAlpha()>();

        $r14 = virtualinvoke $r13.<com.opengamma.analytics.util.amount.SurfaceValue: java.util.HashMap getMap()>();

        $r15 = virtualinvoke $r14.<java.util.HashMap: java.util.Set keySet()>();

        r5 = interfaceinvoke $r15.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z1 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label2;

        $r16 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>();

        r6 = (com.opengamma.util.tuple.DoublesPair) $r16;

        $r17 = virtualinvoke r0.<com.opengamma.analytics.financial.interestrate.PresentValueSABRSensitivityDataBundle: com.opengamma.analytics.util.amount.SurfaceValue getAlpha()>();

        $r18 = virtualinvoke $r17.<com.opengamma.analytics.util.amount.SurfaceValue: java.util.HashMap getMap()>();

        $r19 = virtualinvoke $r18.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r6);

        $r20 = (java.lang.Double) $r19;

        d0 = virtualinvoke $r20.<java.lang.Double: double doubleValue()>();

        $r21 = virtualinvoke r0.<com.opengamma.analytics.financial.interestrate.PresentValueSABRSensitivityDataBundle: com.opengamma.analytics.util.amount.SurfaceValue getBeta()>();

        $r22 = virtualinvoke $r21.<com.opengamma.analytics.util.amount.SurfaceValue: java.util.HashMap getMap()>();

        $r23 = virtualinvoke $r22.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r6);

        $r24 = (java.lang.Double) $r23;

        d1 = virtualinvoke $r24.<java.lang.Double: double doubleValue()>();

        $r25 = virtualinvoke r0.<com.opengamma.analytics.financial.interestrate.PresentValueSABRSensitivityDataBundle: com.opengamma.analytics.util.amount.SurfaceValue getRho()>();

        $r26 = virtualinvoke $r25.<com.opengamma.analytics.util.amount.SurfaceValue: java.util.HashMap getMap()>();

        $r27 = virtualinvoke $r26.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r6);

        $r28 = (java.lang.Double) $r27;

        d2 = virtualinvoke $r28.<java.lang.Double: double doubleValue()>();

        $r29 = virtualinvoke r0.<com.opengamma.analytics.financial.interestrate.PresentValueSABRSensitivityDataBundle: com.opengamma.analytics.util.amount.SurfaceValue getNu()>();

        $r30 = virtualinvoke $r29.<com.opengamma.analytics.util.amount.SurfaceValue: java.util.HashMap getMap()>();

        $r31 = virtualinvoke $r30.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r6);

        $r32 = (java.lang.Double) $r31;

        d3 = virtualinvoke $r32.<java.lang.Double: double doubleValue()>();

        $r33 = new com.opengamma.analytics.math.matrix.DoubleMatrix1D;

        $r34 = newarray (double)[4];

        $r34[0] = d0;

        $r34[1] = d1;

        $r34[2] = d2;

        $r34[3] = d3;

        specialinvoke $r33.<com.opengamma.analytics.math.matrix.DoubleMatrix1D: void <init>(double[])>($r34);

        $r35 = interfaceinvoke r1.<java.util.Map: java.lang.Object get(java.lang.Object)>(r6);

        r8 = (com.opengamma.analytics.math.matrix.DoubleMatrix2D) $r35;

        $r36 = <com.opengamma.analytics.financial.interestrate.BlackSensitivityFromSABRSensitivityCalculator: com.opengamma.analytics.math.matrix.MatrixAlgebra ALGEBRA>;

        $r37 = virtualinvoke $r36.<com.opengamma.analytics.math.matrix.MatrixAlgebra: com.opengamma.analytics.math.matrix.Matrix multiply(com.opengamma.analytics.math.matrix.Matrix,com.opengamma.analytics.math.matrix.Matrix)>($r33, r8);

        r9 = (com.opengamma.analytics.math.matrix.DoubleMatrix1D) $r37;

        virtualinvoke $r12.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r6, r9);

        goto label1;

     label2:
        return $r12;
    }

    static void <clinit>()
    {
        com.opengamma.analytics.math.matrix.OGMatrixAlgebra $r0;

        $r0 = <com.opengamma.analytics.math.matrix.MatrixAlgebraFactory: com.opengamma.analytics.math.matrix.OGMatrixAlgebra OG_ALGEBRA>;

        <com.opengamma.analytics.financial.interestrate.BlackSensitivityFromSABRSensitivityCalculator: com.opengamma.analytics.math.matrix.MatrixAlgebra ALGEBRA> = $r0;

        return;
    }
}
