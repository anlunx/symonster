public class org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D extends java.lang.Object implements java.io.Serializable
{
    private static final long serialVersionUID;
    private final org.apache.commons.math3.RealFieldElement x;
    private final org.apache.commons.math3.RealFieldElement y;
    private final org.apache.commons.math3.RealFieldElement z;

    public void <init>(org.apache.commons.math3.RealFieldElement, org.apache.commons.math3.RealFieldElement, org.apache.commons.math3.RealFieldElement)
    {
        org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D r0;
        org.apache.commons.math3.RealFieldElement r1, r2, r3;

        r0 := @this: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D;

        r1 := @parameter0: org.apache.commons.math3.RealFieldElement;

        r2 := @parameter1: org.apache.commons.math3.RealFieldElement;

        r3 := @parameter2: org.apache.commons.math3.RealFieldElement;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement x> = r1;

        r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement y> = r2;

        r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement z> = r3;

        return;
    }

    public void <init>(org.apache.commons.math3.RealFieldElement[]) throws org.apache.commons.math3.exception.DimensionMismatchException
    {
        org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D r0;
        org.apache.commons.math3.RealFieldElement[] r1;
        int $i0, $i1;
        org.apache.commons.math3.RealFieldElement $r2, $r3, $r4;
        org.apache.commons.math3.exception.DimensionMismatchException $r5;

        r0 := @this: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D;

        r1 := @parameter0: org.apache.commons.math3.RealFieldElement[];

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $i0 = lengthof r1;

        if $i0 == 3 goto label1;

        $r5 = new org.apache.commons.math3.exception.DimensionMismatchException;

        $i1 = lengthof r1;

        specialinvoke $r5.<org.apache.commons.math3.exception.DimensionMismatchException: void <init>(int,int)>($i1, 3);

        throw $r5;

     label1:
        $r2 = r1[0];

        r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement x> = $r2;

        $r3 = r1[1];

        r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement y> = $r3;

        $r4 = r1[2];

        r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement z> = $r4;

        return;
    }

    public void <init>(org.apache.commons.math3.RealFieldElement, org.apache.commons.math3.RealFieldElement)
    {
        org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D r0;
        org.apache.commons.math3.RealFieldElement r1, r2, r3, $r6, $r8, $r10, $r12, $r14;
        java.lang.Object $r4, $r5, $r7, $r9, $r11, $r13;

        r0 := @this: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D;

        r1 := @parameter0: org.apache.commons.math3.RealFieldElement;

        r2 := @parameter1: org.apache.commons.math3.RealFieldElement;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r4 = interfaceinvoke r2.<org.apache.commons.math3.RealFieldElement: java.lang.Object cos()>();

        r3 = (org.apache.commons.math3.RealFieldElement) $r4;

        $r5 = interfaceinvoke r1.<org.apache.commons.math3.RealFieldElement: java.lang.Object cos()>();

        $r6 = (org.apache.commons.math3.RealFieldElement) $r5;

        $r7 = interfaceinvoke $r6.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>(r3);

        $r8 = (org.apache.commons.math3.RealFieldElement) $r7;

        r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement x> = $r8;

        $r9 = interfaceinvoke r1.<org.apache.commons.math3.RealFieldElement: java.lang.Object sin()>();

        $r10 = (org.apache.commons.math3.RealFieldElement) $r9;

        $r11 = interfaceinvoke $r10.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>(r3);

        $r12 = (org.apache.commons.math3.RealFieldElement) $r11;

        r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement y> = $r12;

        $r13 = interfaceinvoke r2.<org.apache.commons.math3.RealFieldElement: java.lang.Object sin()>();

        $r14 = (org.apache.commons.math3.RealFieldElement) $r13;

        r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement z> = $r14;

        return;
    }

    public void <init>(org.apache.commons.math3.RealFieldElement, org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D)
    {
        org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D r0, r2;
        org.apache.commons.math3.RealFieldElement r1, $r3, $r5, $r6, $r8, $r9, $r11;
        java.lang.Object $r4, $r7, $r10;

        r0 := @this: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D;

        r1 := @parameter0: org.apache.commons.math3.RealFieldElement;

        r2 := @parameter1: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r3 = r2.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement x>;

        $r4 = interfaceinvoke r1.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>($r3);

        $r5 = (org.apache.commons.math3.RealFieldElement) $r4;

        r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement x> = $r5;

        $r6 = r2.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement y>;

        $r7 = interfaceinvoke r1.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>($r6);

        $r8 = (org.apache.commons.math3.RealFieldElement) $r7;

        r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement y> = $r8;

        $r9 = r2.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement z>;

        $r10 = interfaceinvoke r1.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>($r9);

        $r11 = (org.apache.commons.math3.RealFieldElement) $r10;

        r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement z> = $r11;

        return;
    }

    public void <init>(org.apache.commons.math3.RealFieldElement, org.apache.commons.math3.geometry.euclidean.threed.Vector3D)
    {
        org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D r0;
        org.apache.commons.math3.RealFieldElement r1, $r4, $r6, $r8;
        org.apache.commons.math3.geometry.euclidean.threed.Vector3D r2;
        double $d0, $d1, $d2;
        java.lang.Object $r3, $r5, $r7;

        r0 := @this: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D;

        r1 := @parameter0: org.apache.commons.math3.RealFieldElement;

        r2 := @parameter1: org.apache.commons.math3.geometry.euclidean.threed.Vector3D;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $d0 = virtualinvoke r2.<org.apache.commons.math3.geometry.euclidean.threed.Vector3D: double getX()>();

        $r3 = interfaceinvoke r1.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(double)>($d0);

        $r4 = (org.apache.commons.math3.RealFieldElement) $r3;

        r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement x> = $r4;

        $d1 = virtualinvoke r2.<org.apache.commons.math3.geometry.euclidean.threed.Vector3D: double getY()>();

        $r5 = interfaceinvoke r1.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(double)>($d1);

        $r6 = (org.apache.commons.math3.RealFieldElement) $r5;

        r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement y> = $r6;

        $d2 = virtualinvoke r2.<org.apache.commons.math3.geometry.euclidean.threed.Vector3D: double getZ()>();

        $r7 = interfaceinvoke r1.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(double)>($d2);

        $r8 = (org.apache.commons.math3.RealFieldElement) $r7;

        r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement z> = $r8;

        return;
    }

    public void <init>(double, org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D)
    {
        org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D r0, r1;
        double d0;
        org.apache.commons.math3.RealFieldElement $r2, $r4, $r5, $r7, $r8, $r10;
        java.lang.Object $r3, $r6, $r9;

        r0 := @this: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D;

        d0 := @parameter0: double;

        r1 := @parameter1: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = r1.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement x>;

        $r3 = interfaceinvoke $r2.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(double)>(d0);

        $r4 = (org.apache.commons.math3.RealFieldElement) $r3;

        r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement x> = $r4;

        $r5 = r1.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement y>;

        $r6 = interfaceinvoke $r5.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(double)>(d0);

        $r7 = (org.apache.commons.math3.RealFieldElement) $r6;

        r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement y> = $r7;

        $r8 = r1.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement z>;

        $r9 = interfaceinvoke $r8.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(double)>(d0);

        $r10 = (org.apache.commons.math3.RealFieldElement) $r9;

        r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement z> = $r10;

        return;
    }

    public void <init>(org.apache.commons.math3.RealFieldElement, org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D, org.apache.commons.math3.RealFieldElement, org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D)
    {
        org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D r0, r2, r4;
        org.apache.commons.math3.RealFieldElement r1, r3, $r6, $r7, $r9, $r10, $r11, $r13, $r14, $r15, $r17;
        java.lang.Object $r8, $r12, $r16;

        r0 := @this: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D;

        r1 := @parameter0: org.apache.commons.math3.RealFieldElement;

        r2 := @parameter1: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D;

        r3 := @parameter2: org.apache.commons.math3.RealFieldElement;

        r4 := @parameter3: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r6 = virtualinvoke r2.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getX()>();

        $r7 = virtualinvoke r4.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getX()>();

        $r8 = interfaceinvoke r1.<org.apache.commons.math3.RealFieldElement: java.lang.Object linearCombination(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>(r1, $r6, r3, $r7);

        $r9 = (org.apache.commons.math3.RealFieldElement) $r8;

        r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement x> = $r9;

        $r10 = virtualinvoke r2.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getY()>();

        $r11 = virtualinvoke r4.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getY()>();

        $r12 = interfaceinvoke r1.<org.apache.commons.math3.RealFieldElement: java.lang.Object linearCombination(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>(r1, $r10, r3, $r11);

        $r13 = (org.apache.commons.math3.RealFieldElement) $r12;

        r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement y> = $r13;

        $r14 = virtualinvoke r2.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getZ()>();

        $r15 = virtualinvoke r4.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getZ()>();

        $r16 = interfaceinvoke r1.<org.apache.commons.math3.RealFieldElement: java.lang.Object linearCombination(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>(r1, $r14, r3, $r15);

        $r17 = (org.apache.commons.math3.RealFieldElement) $r16;

        r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement z> = $r17;

        return;
    }

    public void <init>(org.apache.commons.math3.RealFieldElement, org.apache.commons.math3.geometry.euclidean.threed.Vector3D, org.apache.commons.math3.RealFieldElement, org.apache.commons.math3.geometry.euclidean.threed.Vector3D)
    {
        org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D r0;
        org.apache.commons.math3.RealFieldElement r1, r3, $r7, $r9, $r11;
        org.apache.commons.math3.geometry.euclidean.threed.Vector3D r2, r4;
        double $d0, $d1, $d2, $d3, $d4, $d5;
        java.lang.Object $r6, $r8, $r10;

        r0 := @this: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D;

        r1 := @parameter0: org.apache.commons.math3.RealFieldElement;

        r2 := @parameter1: org.apache.commons.math3.geometry.euclidean.threed.Vector3D;

        r3 := @parameter2: org.apache.commons.math3.RealFieldElement;

        r4 := @parameter3: org.apache.commons.math3.geometry.euclidean.threed.Vector3D;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $d0 = virtualinvoke r2.<org.apache.commons.math3.geometry.euclidean.threed.Vector3D: double getX()>();

        $d1 = virtualinvoke r4.<org.apache.commons.math3.geometry.euclidean.threed.Vector3D: double getX()>();

        $r6 = interfaceinvoke r1.<org.apache.commons.math3.RealFieldElement: java.lang.Object linearCombination(double,java.lang.Object,double,java.lang.Object)>($d0, r1, $d1, r3);

        $r7 = (org.apache.commons.math3.RealFieldElement) $r6;

        r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement x> = $r7;

        $d2 = virtualinvoke r2.<org.apache.commons.math3.geometry.euclidean.threed.Vector3D: double getY()>();

        $d3 = virtualinvoke r4.<org.apache.commons.math3.geometry.euclidean.threed.Vector3D: double getY()>();

        $r8 = interfaceinvoke r1.<org.apache.commons.math3.RealFieldElement: java.lang.Object linearCombination(double,java.lang.Object,double,java.lang.Object)>($d2, r1, $d3, r3);

        $r9 = (org.apache.commons.math3.RealFieldElement) $r8;

        r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement y> = $r9;

        $d4 = virtualinvoke r2.<org.apache.commons.math3.geometry.euclidean.threed.Vector3D: double getZ()>();

        $d5 = virtualinvoke r4.<org.apache.commons.math3.geometry.euclidean.threed.Vector3D: double getZ()>();

        $r10 = interfaceinvoke r1.<org.apache.commons.math3.RealFieldElement: java.lang.Object linearCombination(double,java.lang.Object,double,java.lang.Object)>($d4, r1, $d5, r3);

        $r11 = (org.apache.commons.math3.RealFieldElement) $r10;

        r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement z> = $r11;

        return;
    }

    public void <init>(double, org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D, double, org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D)
    {
        org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D r0, r1, r2;
        double d0, d1;
        org.apache.commons.math3.RealFieldElement r3, $r4, $r5, $r7, $r8, $r9, $r11, $r12, $r13, $r15;
        java.lang.Object $r6, $r10, $r14;

        r0 := @this: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D;

        d0 := @parameter0: double;

        r1 := @parameter1: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D;

        d1 := @parameter2: double;

        r2 := @parameter3: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r3 = virtualinvoke r1.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getX()>();

        $r4 = virtualinvoke r1.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getX()>();

        $r5 = virtualinvoke r2.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getX()>();

        $r6 = interfaceinvoke r3.<org.apache.commons.math3.RealFieldElement: java.lang.Object linearCombination(double,java.lang.Object,double,java.lang.Object)>(d0, $r4, d1, $r5);

        $r7 = (org.apache.commons.math3.RealFieldElement) $r6;

        r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement x> = $r7;

        $r8 = virtualinvoke r1.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getY()>();

        $r9 = virtualinvoke r2.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getY()>();

        $r10 = interfaceinvoke r3.<org.apache.commons.math3.RealFieldElement: java.lang.Object linearCombination(double,java.lang.Object,double,java.lang.Object)>(d0, $r8, d1, $r9);

        $r11 = (org.apache.commons.math3.RealFieldElement) $r10;

        r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement y> = $r11;

        $r12 = virtualinvoke r1.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getZ()>();

        $r13 = virtualinvoke r2.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getZ()>();

        $r14 = interfaceinvoke r3.<org.apache.commons.math3.RealFieldElement: java.lang.Object linearCombination(double,java.lang.Object,double,java.lang.Object)>(d0, $r12, d1, $r13);

        $r15 = (org.apache.commons.math3.RealFieldElement) $r14;

        r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement z> = $r15;

        return;
    }

    public void <init>(org.apache.commons.math3.RealFieldElement, org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D, org.apache.commons.math3.RealFieldElement, org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D, org.apache.commons.math3.RealFieldElement, org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D)
    {
        org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D r0, r2, r4, r6;
        org.apache.commons.math3.RealFieldElement r1, r3, r5, $r8, $r9, $r10, $r12, $r13, $r14, $r15, $r17, $r18, $r19, $r20, $r22;
        java.lang.Object $r11, $r16, $r21;

        r0 := @this: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D;

        r1 := @parameter0: org.apache.commons.math3.RealFieldElement;

        r2 := @parameter1: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D;

        r3 := @parameter2: org.apache.commons.math3.RealFieldElement;

        r4 := @parameter3: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D;

        r5 := @parameter4: org.apache.commons.math3.RealFieldElement;

        r6 := @parameter5: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r8 = virtualinvoke r2.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getX()>();

        $r9 = virtualinvoke r4.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getX()>();

        $r10 = virtualinvoke r6.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getX()>();

        $r11 = interfaceinvoke r1.<org.apache.commons.math3.RealFieldElement: java.lang.Object linearCombination(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>(r1, $r8, r3, $r9, r5, $r10);

        $r12 = (org.apache.commons.math3.RealFieldElement) $r11;

        r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement x> = $r12;

        $r13 = virtualinvoke r2.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getY()>();

        $r14 = virtualinvoke r4.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getY()>();

        $r15 = virtualinvoke r6.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getY()>();

        $r16 = interfaceinvoke r1.<org.apache.commons.math3.RealFieldElement: java.lang.Object linearCombination(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>(r1, $r13, r3, $r14, r5, $r15);

        $r17 = (org.apache.commons.math3.RealFieldElement) $r16;

        r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement y> = $r17;

        $r18 = virtualinvoke r2.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getZ()>();

        $r19 = virtualinvoke r4.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getZ()>();

        $r20 = virtualinvoke r6.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getZ()>();

        $r21 = interfaceinvoke r1.<org.apache.commons.math3.RealFieldElement: java.lang.Object linearCombination(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>(r1, $r18, r3, $r19, r5, $r20);

        $r22 = (org.apache.commons.math3.RealFieldElement) $r21;

        r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement z> = $r22;

        return;
    }

    public void <init>(org.apache.commons.math3.RealFieldElement, org.apache.commons.math3.geometry.euclidean.threed.Vector3D, org.apache.commons.math3.RealFieldElement, org.apache.commons.math3.geometry.euclidean.threed.Vector3D, org.apache.commons.math3.RealFieldElement, org.apache.commons.math3.geometry.euclidean.threed.Vector3D)
    {
        org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D r0;
        org.apache.commons.math3.RealFieldElement r1, r3, r5, $r9, $r11, $r13;
        org.apache.commons.math3.geometry.euclidean.threed.Vector3D r2, r4, r6;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8;
        java.lang.Object $r8, $r10, $r12;

        r0 := @this: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D;

        r1 := @parameter0: org.apache.commons.math3.RealFieldElement;

        r2 := @parameter1: org.apache.commons.math3.geometry.euclidean.threed.Vector3D;

        r3 := @parameter2: org.apache.commons.math3.RealFieldElement;

        r4 := @parameter3: org.apache.commons.math3.geometry.euclidean.threed.Vector3D;

        r5 := @parameter4: org.apache.commons.math3.RealFieldElement;

        r6 := @parameter5: org.apache.commons.math3.geometry.euclidean.threed.Vector3D;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $d0 = virtualinvoke r2.<org.apache.commons.math3.geometry.euclidean.threed.Vector3D: double getX()>();

        $d1 = virtualinvoke r4.<org.apache.commons.math3.geometry.euclidean.threed.Vector3D: double getX()>();

        $d2 = virtualinvoke r6.<org.apache.commons.math3.geometry.euclidean.threed.Vector3D: double getX()>();

        $r8 = interfaceinvoke r1.<org.apache.commons.math3.RealFieldElement: java.lang.Object linearCombination(double,java.lang.Object,double,java.lang.Object,double,java.lang.Object)>($d0, r1, $d1, r3, $d2, r5);

        $r9 = (org.apache.commons.math3.RealFieldElement) $r8;

        r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement x> = $r9;

        $d3 = virtualinvoke r2.<org.apache.commons.math3.geometry.euclidean.threed.Vector3D: double getY()>();

        $d4 = virtualinvoke r4.<org.apache.commons.math3.geometry.euclidean.threed.Vector3D: double getY()>();

        $d5 = virtualinvoke r6.<org.apache.commons.math3.geometry.euclidean.threed.Vector3D: double getY()>();

        $r10 = interfaceinvoke r1.<org.apache.commons.math3.RealFieldElement: java.lang.Object linearCombination(double,java.lang.Object,double,java.lang.Object,double,java.lang.Object)>($d3, r1, $d4, r3, $d5, r5);

        $r11 = (org.apache.commons.math3.RealFieldElement) $r10;

        r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement y> = $r11;

        $d6 = virtualinvoke r2.<org.apache.commons.math3.geometry.euclidean.threed.Vector3D: double getZ()>();

        $d7 = virtualinvoke r4.<org.apache.commons.math3.geometry.euclidean.threed.Vector3D: double getZ()>();

        $d8 = virtualinvoke r6.<org.apache.commons.math3.geometry.euclidean.threed.Vector3D: double getZ()>();

        $r12 = interfaceinvoke r1.<org.apache.commons.math3.RealFieldElement: java.lang.Object linearCombination(double,java.lang.Object,double,java.lang.Object,double,java.lang.Object)>($d6, r1, $d7, r3, $d8, r5);

        $r13 = (org.apache.commons.math3.RealFieldElement) $r12;

        r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement z> = $r13;

        return;
    }

    public void <init>(double, org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D, double, org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D, double, org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D)
    {
        org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D r0, r1, r2, r3;
        double d0, d1, d2;
        org.apache.commons.math3.RealFieldElement r4, $r5, $r6, $r7, $r9, $r10, $r11, $r12, $r14, $r15, $r16, $r17, $r19;
        java.lang.Object $r8, $r13, $r18;

        r0 := @this: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D;

        d0 := @parameter0: double;

        r1 := @parameter1: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D;

        d1 := @parameter2: double;

        r2 := @parameter3: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D;

        d2 := @parameter4: double;

        r3 := @parameter5: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r4 = virtualinvoke r1.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getX()>();

        $r5 = virtualinvoke r1.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getX()>();

        $r6 = virtualinvoke r2.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getX()>();

        $r7 = virtualinvoke r3.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getX()>();

        $r8 = interfaceinvoke r4.<org.apache.commons.math3.RealFieldElement: java.lang.Object linearCombination(double,java.lang.Object,double,java.lang.Object,double,java.lang.Object)>(d0, $r5, d1, $r6, d2, $r7);

        $r9 = (org.apache.commons.math3.RealFieldElement) $r8;

        r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement x> = $r9;

        $r10 = virtualinvoke r1.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getY()>();

        $r11 = virtualinvoke r2.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getY()>();

        $r12 = virtualinvoke r3.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getY()>();

        $r13 = interfaceinvoke r4.<org.apache.commons.math3.RealFieldElement: java.lang.Object linearCombination(double,java.lang.Object,double,java.lang.Object,double,java.lang.Object)>(d0, $r10, d1, $r11, d2, $r12);

        $r14 = (org.apache.commons.math3.RealFieldElement) $r13;

        r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement y> = $r14;

        $r15 = virtualinvoke r1.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getZ()>();

        $r16 = virtualinvoke r2.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getZ()>();

        $r17 = virtualinvoke r3.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getZ()>();

        $r18 = interfaceinvoke r4.<org.apache.commons.math3.RealFieldElement: java.lang.Object linearCombination(double,java.lang.Object,double,java.lang.Object,double,java.lang.Object)>(d0, $r15, d1, $r16, d2, $r17);

        $r19 = (org.apache.commons.math3.RealFieldElement) $r18;

        r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement z> = $r19;

        return;
    }

    public void <init>(org.apache.commons.math3.RealFieldElement, org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D, org.apache.commons.math3.RealFieldElement, org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D, org.apache.commons.math3.RealFieldElement, org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D, org.apache.commons.math3.RealFieldElement, org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D)
    {
        org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D r0, r2, r4, r6, r8;
        org.apache.commons.math3.RealFieldElement r1, r3, r5, r7, $r10, $r11, $r12, $r13, $r15, $r16, $r17, $r18, $r19, $r21, $r22, $r23, $r24, $r25, $r27;
        java.lang.Object $r14, $r20, $r26;

        r0 := @this: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D;

        r1 := @parameter0: org.apache.commons.math3.RealFieldElement;

        r2 := @parameter1: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D;

        r3 := @parameter2: org.apache.commons.math3.RealFieldElement;

        r4 := @parameter3: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D;

        r5 := @parameter4: org.apache.commons.math3.RealFieldElement;

        r6 := @parameter5: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D;

        r7 := @parameter6: org.apache.commons.math3.RealFieldElement;

        r8 := @parameter7: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r10 = virtualinvoke r2.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getX()>();

        $r11 = virtualinvoke r4.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getX()>();

        $r12 = virtualinvoke r6.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getX()>();

        $r13 = virtualinvoke r8.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getX()>();

        $r14 = interfaceinvoke r1.<org.apache.commons.math3.RealFieldElement: java.lang.Object linearCombination(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>(r1, $r10, r3, $r11, r5, $r12, r7, $r13);

        $r15 = (org.apache.commons.math3.RealFieldElement) $r14;

        r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement x> = $r15;

        $r16 = virtualinvoke r2.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getY()>();

        $r17 = virtualinvoke r4.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getY()>();

        $r18 = virtualinvoke r6.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getY()>();

        $r19 = virtualinvoke r8.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getY()>();

        $r20 = interfaceinvoke r1.<org.apache.commons.math3.RealFieldElement: java.lang.Object linearCombination(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>(r1, $r16, r3, $r17, r5, $r18, r7, $r19);

        $r21 = (org.apache.commons.math3.RealFieldElement) $r20;

        r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement y> = $r21;

        $r22 = virtualinvoke r2.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getZ()>();

        $r23 = virtualinvoke r4.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getZ()>();

        $r24 = virtualinvoke r6.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getZ()>();

        $r25 = virtualinvoke r8.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getZ()>();

        $r26 = interfaceinvoke r1.<org.apache.commons.math3.RealFieldElement: java.lang.Object linearCombination(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>(r1, $r22, r3, $r23, r5, $r24, r7, $r25);

        $r27 = (org.apache.commons.math3.RealFieldElement) $r26;

        r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement z> = $r27;

        return;
    }

    public void <init>(org.apache.commons.math3.RealFieldElement, org.apache.commons.math3.geometry.euclidean.threed.Vector3D, org.apache.commons.math3.RealFieldElement, org.apache.commons.math3.geometry.euclidean.threed.Vector3D, org.apache.commons.math3.RealFieldElement, org.apache.commons.math3.geometry.euclidean.threed.Vector3D, org.apache.commons.math3.RealFieldElement, org.apache.commons.math3.geometry.euclidean.threed.Vector3D)
    {
        org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D r0;
        org.apache.commons.math3.RealFieldElement r1, r3, r5, r7, $r11, $r13, $r15;
        org.apache.commons.math3.geometry.euclidean.threed.Vector3D r2, r4, r6, r8;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11;
        java.lang.Object $r10, $r12, $r14;

        r0 := @this: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D;

        r1 := @parameter0: org.apache.commons.math3.RealFieldElement;

        r2 := @parameter1: org.apache.commons.math3.geometry.euclidean.threed.Vector3D;

        r3 := @parameter2: org.apache.commons.math3.RealFieldElement;

        r4 := @parameter3: org.apache.commons.math3.geometry.euclidean.threed.Vector3D;

        r5 := @parameter4: org.apache.commons.math3.RealFieldElement;

        r6 := @parameter5: org.apache.commons.math3.geometry.euclidean.threed.Vector3D;

        r7 := @parameter6: org.apache.commons.math3.RealFieldElement;

        r8 := @parameter7: org.apache.commons.math3.geometry.euclidean.threed.Vector3D;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $d0 = virtualinvoke r2.<org.apache.commons.math3.geometry.euclidean.threed.Vector3D: double getX()>();

        $d1 = virtualinvoke r4.<org.apache.commons.math3.geometry.euclidean.threed.Vector3D: double getX()>();

        $d2 = virtualinvoke r6.<org.apache.commons.math3.geometry.euclidean.threed.Vector3D: double getX()>();

        $d3 = virtualinvoke r8.<org.apache.commons.math3.geometry.euclidean.threed.Vector3D: double getX()>();

        $r10 = interfaceinvoke r1.<org.apache.commons.math3.RealFieldElement: java.lang.Object linearCombination(double,java.lang.Object,double,java.lang.Object,double,java.lang.Object,double,java.lang.Object)>($d0, r1, $d1, r3, $d2, r5, $d3, r7);

        $r11 = (org.apache.commons.math3.RealFieldElement) $r10;

        r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement x> = $r11;

        $d4 = virtualinvoke r2.<org.apache.commons.math3.geometry.euclidean.threed.Vector3D: double getY()>();

        $d5 = virtualinvoke r4.<org.apache.commons.math3.geometry.euclidean.threed.Vector3D: double getY()>();

        $d6 = virtualinvoke r6.<org.apache.commons.math3.geometry.euclidean.threed.Vector3D: double getY()>();

        $d7 = virtualinvoke r8.<org.apache.commons.math3.geometry.euclidean.threed.Vector3D: double getY()>();

        $r12 = interfaceinvoke r1.<org.apache.commons.math3.RealFieldElement: java.lang.Object linearCombination(double,java.lang.Object,double,java.lang.Object,double,java.lang.Object,double,java.lang.Object)>($d4, r1, $d5, r3, $d6, r5, $d7, r7);

        $r13 = (org.apache.commons.math3.RealFieldElement) $r12;

        r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement y> = $r13;

        $d8 = virtualinvoke r2.<org.apache.commons.math3.geometry.euclidean.threed.Vector3D: double getZ()>();

        $d9 = virtualinvoke r4.<org.apache.commons.math3.geometry.euclidean.threed.Vector3D: double getZ()>();

        $d10 = virtualinvoke r6.<org.apache.commons.math3.geometry.euclidean.threed.Vector3D: double getZ()>();

        $d11 = virtualinvoke r8.<org.apache.commons.math3.geometry.euclidean.threed.Vector3D: double getZ()>();

        $r14 = interfaceinvoke r1.<org.apache.commons.math3.RealFieldElement: java.lang.Object linearCombination(double,java.lang.Object,double,java.lang.Object,double,java.lang.Object,double,java.lang.Object)>($d8, r1, $d9, r3, $d10, r5, $d11, r7);

        $r15 = (org.apache.commons.math3.RealFieldElement) $r14;

        r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement z> = $r15;

        return;
    }

    public void <init>(double, org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D, double, org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D, double, org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D, double, org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D)
    {
        org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D r0, r1, r2, r3, r4;
        double d0, d1, d2, d3;
        org.apache.commons.math3.RealFieldElement r5, $r6, $r7, $r8, $r9, $r11, $r12, $r13, $r14, $r15, $r17, $r18, $r19, $r20, $r21, $r23;
        java.lang.Object $r10, $r16, $r22;

        r0 := @this: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D;

        d0 := @parameter0: double;

        r1 := @parameter1: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D;

        d1 := @parameter2: double;

        r2 := @parameter3: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D;

        d2 := @parameter4: double;

        r3 := @parameter5: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D;

        d3 := @parameter6: double;

        r4 := @parameter7: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r5 = virtualinvoke r1.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getX()>();

        $r6 = virtualinvoke r1.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getX()>();

        $r7 = virtualinvoke r2.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getX()>();

        $r8 = virtualinvoke r3.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getX()>();

        $r9 = virtualinvoke r4.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getX()>();

        $r10 = interfaceinvoke r5.<org.apache.commons.math3.RealFieldElement: java.lang.Object linearCombination(double,java.lang.Object,double,java.lang.Object,double,java.lang.Object,double,java.lang.Object)>(d0, $r6, d1, $r7, d2, $r8, d3, $r9);

        $r11 = (org.apache.commons.math3.RealFieldElement) $r10;

        r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement x> = $r11;

        $r12 = virtualinvoke r1.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getY()>();

        $r13 = virtualinvoke r2.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getY()>();

        $r14 = virtualinvoke r3.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getY()>();

        $r15 = virtualinvoke r4.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getY()>();

        $r16 = interfaceinvoke r5.<org.apache.commons.math3.RealFieldElement: java.lang.Object linearCombination(double,java.lang.Object,double,java.lang.Object,double,java.lang.Object,double,java.lang.Object)>(d0, $r12, d1, $r13, d2, $r14, d3, $r15);

        $r17 = (org.apache.commons.math3.RealFieldElement) $r16;

        r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement y> = $r17;

        $r18 = virtualinvoke r1.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getZ()>();

        $r19 = virtualinvoke r2.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getZ()>();

        $r20 = virtualinvoke r3.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getZ()>();

        $r21 = virtualinvoke r4.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getZ()>();

        $r22 = interfaceinvoke r5.<org.apache.commons.math3.RealFieldElement: java.lang.Object linearCombination(double,java.lang.Object,double,java.lang.Object,double,java.lang.Object,double,java.lang.Object)>(d0, $r18, d1, $r19, d2, $r20, d3, $r21);

        $r23 = (org.apache.commons.math3.RealFieldElement) $r22;

        r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement z> = $r23;

        return;
    }

    public org.apache.commons.math3.RealFieldElement getX()
    {
        org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D r0;
        org.apache.commons.math3.RealFieldElement $r1;

        r0 := @this: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D;

        $r1 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement x>;

        return $r1;
    }

    public org.apache.commons.math3.RealFieldElement getY()
    {
        org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D r0;
        org.apache.commons.math3.RealFieldElement $r1;

        r0 := @this: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D;

        $r1 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement y>;

        return $r1;
    }

    public org.apache.commons.math3.RealFieldElement getZ()
    {
        org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D r0;
        org.apache.commons.math3.RealFieldElement $r1;

        r0 := @this: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D;

        $r1 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement z>;

        return $r1;
    }

    public org.apache.commons.math3.RealFieldElement[] toArray()
    {
        org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D r0;
        org.apache.commons.math3.RealFieldElement[] r1;
        org.apache.commons.math3.RealFieldElement $r2, $r5, $r6, $r7;
        org.apache.commons.math3.Field $r3;
        java.lang.Object[] $r4;

        r0 := @this: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D;

        $r2 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement x>;

        $r3 = interfaceinvoke $r2.<org.apache.commons.math3.RealFieldElement: org.apache.commons.math3.Field getField()>();

        $r4 = staticinvoke <org.apache.commons.math3.util.MathArrays: java.lang.Object[] buildArray(org.apache.commons.math3.Field,int)>($r3, 3);

        r1 = (org.apache.commons.math3.RealFieldElement[]) $r4;

        $r5 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement x>;

        r1[0] = $r5;

        $r6 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement y>;

        r1[1] = $r6;

        $r7 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement z>;

        r1[2] = $r7;

        return r1;
    }

    public org.apache.commons.math3.geometry.euclidean.threed.Vector3D toVector3D()
    {
        org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D r0;
        org.apache.commons.math3.geometry.euclidean.threed.Vector3D $r1;
        org.apache.commons.math3.RealFieldElement $r2, $r3, $r4;
        double $d0, $d1, $d2;

        r0 := @this: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D;

        $r1 = new org.apache.commons.math3.geometry.euclidean.threed.Vector3D;

        $r2 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement x>;

        $d0 = interfaceinvoke $r2.<org.apache.commons.math3.RealFieldElement: double getReal()>();

        $r3 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement y>;

        $d1 = interfaceinvoke $r3.<org.apache.commons.math3.RealFieldElement: double getReal()>();

        $r4 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement z>;

        $d2 = interfaceinvoke $r4.<org.apache.commons.math3.RealFieldElement: double getReal()>();

        specialinvoke $r1.<org.apache.commons.math3.geometry.euclidean.threed.Vector3D: void <init>(double,double,double)>($d0, $d1, $d2);

        return $r1;
    }

    public org.apache.commons.math3.RealFieldElement getNorm1()
    {
        org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D r0;
        org.apache.commons.math3.RealFieldElement $r1, $r3, $r4, $r7, $r8, $r11;
        java.lang.Object $r2, $r5, $r6, $r9, $r10;

        r0 := @this: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D;

        $r1 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement x>;

        $r2 = interfaceinvoke $r1.<org.apache.commons.math3.RealFieldElement: java.lang.Object abs()>();

        $r4 = (org.apache.commons.math3.RealFieldElement) $r2;

        $r3 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement y>;

        $r5 = interfaceinvoke $r3.<org.apache.commons.math3.RealFieldElement: java.lang.Object abs()>();

        $r6 = interfaceinvoke $r4.<org.apache.commons.math3.RealFieldElement: java.lang.Object add(java.lang.Object)>($r5);

        $r8 = (org.apache.commons.math3.RealFieldElement) $r6;

        $r7 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement z>;

        $r9 = interfaceinvoke $r7.<org.apache.commons.math3.RealFieldElement: java.lang.Object abs()>();

        $r10 = interfaceinvoke $r8.<org.apache.commons.math3.RealFieldElement: java.lang.Object add(java.lang.Object)>($r9);

        $r11 = (org.apache.commons.math3.RealFieldElement) $r10;

        return $r11;
    }

    public org.apache.commons.math3.RealFieldElement getNorm()
    {
        org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D r0;
        org.apache.commons.math3.RealFieldElement $r1, $r2, $r4, $r5, $r6, $r9, $r10, $r11, $r14, $r16;
        java.lang.Object $r3, $r7, $r8, $r12, $r13, $r15;

        r0 := @this: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D;

        $r2 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement x>;

        $r1 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement x>;

        $r3 = interfaceinvoke $r2.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>($r1);

        $r6 = (org.apache.commons.math3.RealFieldElement) $r3;

        $r5 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement y>;

        $r4 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement y>;

        $r7 = interfaceinvoke $r5.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>($r4);

        $r8 = interfaceinvoke $r6.<org.apache.commons.math3.RealFieldElement: java.lang.Object add(java.lang.Object)>($r7);

        $r11 = (org.apache.commons.math3.RealFieldElement) $r8;

        $r10 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement z>;

        $r9 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement z>;

        $r12 = interfaceinvoke $r10.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>($r9);

        $r13 = interfaceinvoke $r11.<org.apache.commons.math3.RealFieldElement: java.lang.Object add(java.lang.Object)>($r12);

        $r14 = (org.apache.commons.math3.RealFieldElement) $r13;

        $r15 = interfaceinvoke $r14.<org.apache.commons.math3.RealFieldElement: java.lang.Object sqrt()>();

        $r16 = (org.apache.commons.math3.RealFieldElement) $r15;

        return $r16;
    }

    public org.apache.commons.math3.RealFieldElement getNormSq()
    {
        org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D r0;
        org.apache.commons.math3.RealFieldElement $r1, $r2, $r4, $r5, $r6, $r9, $r10, $r11, $r14;
        java.lang.Object $r3, $r7, $r8, $r12, $r13;

        r0 := @this: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D;

        $r2 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement x>;

        $r1 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement x>;

        $r3 = interfaceinvoke $r2.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>($r1);

        $r6 = (org.apache.commons.math3.RealFieldElement) $r3;

        $r5 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement y>;

        $r4 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement y>;

        $r7 = interfaceinvoke $r5.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>($r4);

        $r8 = interfaceinvoke $r6.<org.apache.commons.math3.RealFieldElement: java.lang.Object add(java.lang.Object)>($r7);

        $r11 = (org.apache.commons.math3.RealFieldElement) $r8;

        $r10 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement z>;

        $r9 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement z>;

        $r12 = interfaceinvoke $r10.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>($r9);

        $r13 = interfaceinvoke $r11.<org.apache.commons.math3.RealFieldElement: java.lang.Object add(java.lang.Object)>($r12);

        $r14 = (org.apache.commons.math3.RealFieldElement) $r13;

        return $r14;
    }

    public org.apache.commons.math3.RealFieldElement getNormInf()
    {
        org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D r0;
        org.apache.commons.math3.RealFieldElement r1, r2, r3, $r4, $r6, $r8;
        java.lang.Object $r5, $r7, $r9;
        double $d0, $d1, $d2, $d3, $d4, $d5;
        byte $b0, $b1, $b2;

        r0 := @this: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D;

        $r4 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement x>;

        $r5 = interfaceinvoke $r4.<org.apache.commons.math3.RealFieldElement: java.lang.Object abs()>();

        r1 = (org.apache.commons.math3.RealFieldElement) $r5;

        $r6 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement y>;

        $r7 = interfaceinvoke $r6.<org.apache.commons.math3.RealFieldElement: java.lang.Object abs()>();

        r2 = (org.apache.commons.math3.RealFieldElement) $r7;

        $r8 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement z>;

        $r9 = interfaceinvoke $r8.<org.apache.commons.math3.RealFieldElement: java.lang.Object abs()>();

        r3 = (org.apache.commons.math3.RealFieldElement) $r9;

        $d0 = interfaceinvoke r1.<org.apache.commons.math3.RealFieldElement: double getReal()>();

        $d1 = interfaceinvoke r2.<org.apache.commons.math3.RealFieldElement: double getReal()>();

        $b0 = $d0 cmpg $d1;

        if $b0 > 0 goto label2;

        $d4 = interfaceinvoke r2.<org.apache.commons.math3.RealFieldElement: double getReal()>();

        $d5 = interfaceinvoke r3.<org.apache.commons.math3.RealFieldElement: double getReal()>();

        $b2 = $d4 cmpg $d5;

        if $b2 > 0 goto label1;

        return r3;

     label1:
        return r2;

     label2:
        $d2 = interfaceinvoke r1.<org.apache.commons.math3.RealFieldElement: double getReal()>();

        $d3 = interfaceinvoke r3.<org.apache.commons.math3.RealFieldElement: double getReal()>();

        $b1 = $d2 cmpg $d3;

        if $b1 > 0 goto label3;

        return r3;

     label3:
        return r1;
    }

    public org.apache.commons.math3.RealFieldElement getAlpha()
    {
        org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D r0;
        org.apache.commons.math3.RealFieldElement $r1, $r2, $r4;
        java.lang.Object $r3;

        r0 := @this: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D;

        $r2 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement y>;

        $r1 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement x>;

        $r3 = interfaceinvoke $r2.<org.apache.commons.math3.RealFieldElement: java.lang.Object atan2(java.lang.Object)>($r1);

        $r4 = (org.apache.commons.math3.RealFieldElement) $r3;

        return $r4;
    }

    public org.apache.commons.math3.RealFieldElement getDelta()
    {
        org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D r0;
        org.apache.commons.math3.RealFieldElement $r1, $r2, $r4, $r6;
        java.lang.Object $r3, $r5;

        r0 := @this: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D;

        $r1 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement z>;

        $r2 = virtualinvoke r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getNorm()>();

        $r3 = interfaceinvoke $r1.<org.apache.commons.math3.RealFieldElement: java.lang.Object divide(java.lang.Object)>($r2);

        $r4 = (org.apache.commons.math3.RealFieldElement) $r3;

        $r5 = interfaceinvoke $r4.<org.apache.commons.math3.RealFieldElement: java.lang.Object asin()>();

        $r6 = (org.apache.commons.math3.RealFieldElement) $r5;

        return $r6;
    }

    public org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D add(org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D)
    {
        org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D r0, r1, $r2;
        org.apache.commons.math3.RealFieldElement $r3, $r4, $r6, $r7, $r8, $r10, $r11, $r12, $r14;
        java.lang.Object $r5, $r9, $r13;

        r0 := @this: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D;

        r1 := @parameter0: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D;

        $r2 = new org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D;

        $r4 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement x>;

        $r3 = r1.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement x>;

        $r5 = interfaceinvoke $r4.<org.apache.commons.math3.RealFieldElement: java.lang.Object add(java.lang.Object)>($r3);

        $r8 = (org.apache.commons.math3.RealFieldElement) $r5;

        $r7 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement y>;

        $r6 = r1.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement y>;

        $r9 = interfaceinvoke $r7.<org.apache.commons.math3.RealFieldElement: java.lang.Object add(java.lang.Object)>($r6);

        $r12 = (org.apache.commons.math3.RealFieldElement) $r9;

        $r11 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement z>;

        $r10 = r1.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement z>;

        $r13 = interfaceinvoke $r11.<org.apache.commons.math3.RealFieldElement: java.lang.Object add(java.lang.Object)>($r10);

        $r14 = (org.apache.commons.math3.RealFieldElement) $r13;

        specialinvoke $r2.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: void <init>(org.apache.commons.math3.RealFieldElement,org.apache.commons.math3.RealFieldElement,org.apache.commons.math3.RealFieldElement)>($r8, $r12, $r14);

        return $r2;
    }

    public org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D add(org.apache.commons.math3.geometry.euclidean.threed.Vector3D)
    {
        org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D r0, $r2;
        org.apache.commons.math3.geometry.euclidean.threed.Vector3D r1;
        org.apache.commons.math3.RealFieldElement $r3, $r5, $r6, $r8, $r9, $r11;
        double $d0, $d1, $d2;
        java.lang.Object $r4, $r7, $r10;

        r0 := @this: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D;

        r1 := @parameter0: org.apache.commons.math3.geometry.euclidean.threed.Vector3D;

        $r2 = new org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D;

        $r3 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement x>;

        $d0 = virtualinvoke r1.<org.apache.commons.math3.geometry.euclidean.threed.Vector3D: double getX()>();

        $r4 = interfaceinvoke $r3.<org.apache.commons.math3.RealFieldElement: java.lang.Object add(double)>($d0);

        $r5 = (org.apache.commons.math3.RealFieldElement) $r4;

        $r6 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement y>;

        $d1 = virtualinvoke r1.<org.apache.commons.math3.geometry.euclidean.threed.Vector3D: double getY()>();

        $r7 = interfaceinvoke $r6.<org.apache.commons.math3.RealFieldElement: java.lang.Object add(double)>($d1);

        $r8 = (org.apache.commons.math3.RealFieldElement) $r7;

        $r9 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement z>;

        $d2 = virtualinvoke r1.<org.apache.commons.math3.geometry.euclidean.threed.Vector3D: double getZ()>();

        $r10 = interfaceinvoke $r9.<org.apache.commons.math3.RealFieldElement: java.lang.Object add(double)>($d2);

        $r11 = (org.apache.commons.math3.RealFieldElement) $r10;

        specialinvoke $r2.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: void <init>(org.apache.commons.math3.RealFieldElement,org.apache.commons.math3.RealFieldElement,org.apache.commons.math3.RealFieldElement)>($r5, $r8, $r11);

        return $r2;
    }

    public org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D add(org.apache.commons.math3.RealFieldElement, org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D)
    {
        org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D r0, r2, $r3;
        org.apache.commons.math3.RealFieldElement r1, $r4, $r7;
        org.apache.commons.math3.Field $r5;
        java.lang.Object $r6;

        r0 := @this: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D;

        r1 := @parameter0: org.apache.commons.math3.RealFieldElement;

        r2 := @parameter1: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D;

        $r3 = new org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D;

        $r4 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement x>;

        $r5 = interfaceinvoke $r4.<org.apache.commons.math3.RealFieldElement: org.apache.commons.math3.Field getField()>();

        $r6 = interfaceinvoke $r5.<org.apache.commons.math3.Field: java.lang.Object getOne()>();

        $r7 = (org.apache.commons.math3.RealFieldElement) $r6;

        specialinvoke $r3.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: void <init>(org.apache.commons.math3.RealFieldElement,org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D,org.apache.commons.math3.RealFieldElement,org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D)>($r7, r0, r1, r2);

        return $r3;
    }

    public org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D add(org.apache.commons.math3.RealFieldElement, org.apache.commons.math3.geometry.euclidean.threed.Vector3D)
    {
        org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D r0, $r3;
        org.apache.commons.math3.RealFieldElement r1, $r4, $r7, $r8, $r11, $r12, $r15;
        org.apache.commons.math3.geometry.euclidean.threed.Vector3D r2;
        double $d0, $d1, $d2;
        java.lang.Object $r5, $r6, $r9, $r10, $r13, $r14;

        r0 := @this: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D;

        r1 := @parameter0: org.apache.commons.math3.RealFieldElement;

        r2 := @parameter1: org.apache.commons.math3.geometry.euclidean.threed.Vector3D;

        $r3 = new org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D;

        $r4 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement x>;

        $d0 = virtualinvoke r2.<org.apache.commons.math3.geometry.euclidean.threed.Vector3D: double getX()>();

        $r5 = interfaceinvoke r1.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(double)>($d0);

        $r6 = interfaceinvoke $r4.<org.apache.commons.math3.RealFieldElement: java.lang.Object add(java.lang.Object)>($r5);

        $r7 = (org.apache.commons.math3.RealFieldElement) $r6;

        $r8 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement y>;

        $d1 = virtualinvoke r2.<org.apache.commons.math3.geometry.euclidean.threed.Vector3D: double getY()>();

        $r9 = interfaceinvoke r1.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(double)>($d1);

        $r10 = interfaceinvoke $r8.<org.apache.commons.math3.RealFieldElement: java.lang.Object add(java.lang.Object)>($r9);

        $r11 = (org.apache.commons.math3.RealFieldElement) $r10;

        $r12 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement z>;

        $d2 = virtualinvoke r2.<org.apache.commons.math3.geometry.euclidean.threed.Vector3D: double getZ()>();

        $r13 = interfaceinvoke r1.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(double)>($d2);

        $r14 = interfaceinvoke $r12.<org.apache.commons.math3.RealFieldElement: java.lang.Object add(java.lang.Object)>($r13);

        $r15 = (org.apache.commons.math3.RealFieldElement) $r14;

        specialinvoke $r3.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: void <init>(org.apache.commons.math3.RealFieldElement,org.apache.commons.math3.RealFieldElement,org.apache.commons.math3.RealFieldElement)>($r7, $r11, $r15);

        return $r3;
    }

    public org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D add(double, org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D)
    {
        org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D r0, r1, $r2;
        double d0;

        r0 := @this: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D;

        d0 := @parameter0: double;

        r1 := @parameter1: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D;

        $r2 = new org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D;

        specialinvoke $r2.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: void <init>(double,org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D,double,org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D)>(1.0, r0, d0, r1);

        return $r2;
    }

    public org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D add(double, org.apache.commons.math3.geometry.euclidean.threed.Vector3D)
    {
        org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D r0, $r2;
        double d0, $d1, $d2, $d3, $d4, $d5, $d6;
        org.apache.commons.math3.geometry.euclidean.threed.Vector3D r1;
        org.apache.commons.math3.RealFieldElement $r3, $r5, $r6, $r8, $r9, $r11;
        java.lang.Object $r4, $r7, $r10;

        r0 := @this: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D;

        d0 := @parameter0: double;

        r1 := @parameter1: org.apache.commons.math3.geometry.euclidean.threed.Vector3D;

        $r2 = new org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D;

        $r3 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement x>;

        $d1 = virtualinvoke r1.<org.apache.commons.math3.geometry.euclidean.threed.Vector3D: double getX()>();

        $d2 = d0 * $d1;

        $r4 = interfaceinvoke $r3.<org.apache.commons.math3.RealFieldElement: java.lang.Object add(double)>($d2);

        $r5 = (org.apache.commons.math3.RealFieldElement) $r4;

        $r6 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement y>;

        $d3 = virtualinvoke r1.<org.apache.commons.math3.geometry.euclidean.threed.Vector3D: double getY()>();

        $d4 = d0 * $d3;

        $r7 = interfaceinvoke $r6.<org.apache.commons.math3.RealFieldElement: java.lang.Object add(double)>($d4);

        $r8 = (org.apache.commons.math3.RealFieldElement) $r7;

        $r9 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement z>;

        $d5 = virtualinvoke r1.<org.apache.commons.math3.geometry.euclidean.threed.Vector3D: double getZ()>();

        $d6 = d0 * $d5;

        $r10 = interfaceinvoke $r9.<org.apache.commons.math3.RealFieldElement: java.lang.Object add(double)>($d6);

        $r11 = (org.apache.commons.math3.RealFieldElement) $r10;

        specialinvoke $r2.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: void <init>(org.apache.commons.math3.RealFieldElement,org.apache.commons.math3.RealFieldElement,org.apache.commons.math3.RealFieldElement)>($r5, $r8, $r11);

        return $r2;
    }

    public org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D subtract(org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D)
    {
        org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D r0, r1, $r2;
        org.apache.commons.math3.RealFieldElement $r3, $r4, $r6, $r7, $r8, $r10, $r11, $r12, $r14;
        java.lang.Object $r5, $r9, $r13;

        r0 := @this: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D;

        r1 := @parameter0: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D;

        $r2 = new org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D;

        $r4 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement x>;

        $r3 = r1.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement x>;

        $r5 = interfaceinvoke $r4.<org.apache.commons.math3.RealFieldElement: java.lang.Object subtract(java.lang.Object)>($r3);

        $r8 = (org.apache.commons.math3.RealFieldElement) $r5;

        $r7 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement y>;

        $r6 = r1.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement y>;

        $r9 = interfaceinvoke $r7.<org.apache.commons.math3.RealFieldElement: java.lang.Object subtract(java.lang.Object)>($r6);

        $r12 = (org.apache.commons.math3.RealFieldElement) $r9;

        $r11 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement z>;

        $r10 = r1.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement z>;

        $r13 = interfaceinvoke $r11.<org.apache.commons.math3.RealFieldElement: java.lang.Object subtract(java.lang.Object)>($r10);

        $r14 = (org.apache.commons.math3.RealFieldElement) $r13;

        specialinvoke $r2.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: void <init>(org.apache.commons.math3.RealFieldElement,org.apache.commons.math3.RealFieldElement,org.apache.commons.math3.RealFieldElement)>($r8, $r12, $r14);

        return $r2;
    }

    public org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D subtract(org.apache.commons.math3.geometry.euclidean.threed.Vector3D)
    {
        org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D r0, $r2;
        org.apache.commons.math3.geometry.euclidean.threed.Vector3D r1;
        org.apache.commons.math3.RealFieldElement $r3, $r5, $r6, $r8, $r9, $r11;
        double $d0, $d1, $d2;
        java.lang.Object $r4, $r7, $r10;

        r0 := @this: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D;

        r1 := @parameter0: org.apache.commons.math3.geometry.euclidean.threed.Vector3D;

        $r2 = new org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D;

        $r3 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement x>;

        $d0 = virtualinvoke r1.<org.apache.commons.math3.geometry.euclidean.threed.Vector3D: double getX()>();

        $r4 = interfaceinvoke $r3.<org.apache.commons.math3.RealFieldElement: java.lang.Object subtract(double)>($d0);

        $r5 = (org.apache.commons.math3.RealFieldElement) $r4;

        $r6 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement y>;

        $d1 = virtualinvoke r1.<org.apache.commons.math3.geometry.euclidean.threed.Vector3D: double getY()>();

        $r7 = interfaceinvoke $r6.<org.apache.commons.math3.RealFieldElement: java.lang.Object subtract(double)>($d1);

        $r8 = (org.apache.commons.math3.RealFieldElement) $r7;

        $r9 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement z>;

        $d2 = virtualinvoke r1.<org.apache.commons.math3.geometry.euclidean.threed.Vector3D: double getZ()>();

        $r10 = interfaceinvoke $r9.<org.apache.commons.math3.RealFieldElement: java.lang.Object subtract(double)>($d2);

        $r11 = (org.apache.commons.math3.RealFieldElement) $r10;

        specialinvoke $r2.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: void <init>(org.apache.commons.math3.RealFieldElement,org.apache.commons.math3.RealFieldElement,org.apache.commons.math3.RealFieldElement)>($r5, $r8, $r11);

        return $r2;
    }

    public org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D subtract(org.apache.commons.math3.RealFieldElement, org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D)
    {
        org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D r0, r2, $r3;
        org.apache.commons.math3.RealFieldElement r1, $r4, $r7, $r9;
        org.apache.commons.math3.Field $r5;
        java.lang.Object $r6, $r8;

        r0 := @this: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D;

        r1 := @parameter0: org.apache.commons.math3.RealFieldElement;

        r2 := @parameter1: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D;

        $r3 = new org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D;

        $r4 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement x>;

        $r5 = interfaceinvoke $r4.<org.apache.commons.math3.RealFieldElement: org.apache.commons.math3.Field getField()>();

        $r6 = interfaceinvoke $r5.<org.apache.commons.math3.Field: java.lang.Object getOne()>();

        $r7 = (org.apache.commons.math3.RealFieldElement) $r6;

        $r8 = interfaceinvoke r1.<org.apache.commons.math3.RealFieldElement: java.lang.Object negate()>();

        $r9 = (org.apache.commons.math3.RealFieldElement) $r8;

        specialinvoke $r3.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: void <init>(org.apache.commons.math3.RealFieldElement,org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D,org.apache.commons.math3.RealFieldElement,org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D)>($r7, r0, $r9, r2);

        return $r3;
    }

    public org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D subtract(org.apache.commons.math3.RealFieldElement, org.apache.commons.math3.geometry.euclidean.threed.Vector3D)
    {
        org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D r0, $r3;
        org.apache.commons.math3.RealFieldElement r1, $r4, $r7, $r8, $r11, $r12, $r15;
        org.apache.commons.math3.geometry.euclidean.threed.Vector3D r2;
        double $d0, $d1, $d2;
        java.lang.Object $r5, $r6, $r9, $r10, $r13, $r14;

        r0 := @this: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D;

        r1 := @parameter0: org.apache.commons.math3.RealFieldElement;

        r2 := @parameter1: org.apache.commons.math3.geometry.euclidean.threed.Vector3D;

        $r3 = new org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D;

        $r4 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement x>;

        $d0 = virtualinvoke r2.<org.apache.commons.math3.geometry.euclidean.threed.Vector3D: double getX()>();

        $r5 = interfaceinvoke r1.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(double)>($d0);

        $r6 = interfaceinvoke $r4.<org.apache.commons.math3.RealFieldElement: java.lang.Object subtract(java.lang.Object)>($r5);

        $r7 = (org.apache.commons.math3.RealFieldElement) $r6;

        $r8 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement y>;

        $d1 = virtualinvoke r2.<org.apache.commons.math3.geometry.euclidean.threed.Vector3D: double getY()>();

        $r9 = interfaceinvoke r1.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(double)>($d1);

        $r10 = interfaceinvoke $r8.<org.apache.commons.math3.RealFieldElement: java.lang.Object subtract(java.lang.Object)>($r9);

        $r11 = (org.apache.commons.math3.RealFieldElement) $r10;

        $r12 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement z>;

        $d2 = virtualinvoke r2.<org.apache.commons.math3.geometry.euclidean.threed.Vector3D: double getZ()>();

        $r13 = interfaceinvoke r1.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(double)>($d2);

        $r14 = interfaceinvoke $r12.<org.apache.commons.math3.RealFieldElement: java.lang.Object subtract(java.lang.Object)>($r13);

        $r15 = (org.apache.commons.math3.RealFieldElement) $r14;

        specialinvoke $r3.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: void <init>(org.apache.commons.math3.RealFieldElement,org.apache.commons.math3.RealFieldElement,org.apache.commons.math3.RealFieldElement)>($r7, $r11, $r15);

        return $r3;
    }

    public org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D subtract(double, org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D)
    {
        org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D r0, r1, $r2;
        double d0, $d1;

        r0 := @this: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D;

        d0 := @parameter0: double;

        r1 := @parameter1: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D;

        $r2 = new org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D;

        $d1 = neg d0;

        specialinvoke $r2.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: void <init>(double,org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D,double,org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D)>(1.0, r0, $d1, r1);

        return $r2;
    }

    public org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D subtract(double, org.apache.commons.math3.geometry.euclidean.threed.Vector3D)
    {
        org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D r0, $r2;
        double d0, $d1, $d2, $d3, $d4, $d5, $d6;
        org.apache.commons.math3.geometry.euclidean.threed.Vector3D r1;
        org.apache.commons.math3.RealFieldElement $r3, $r5, $r6, $r8, $r9, $r11;
        java.lang.Object $r4, $r7, $r10;

        r0 := @this: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D;

        d0 := @parameter0: double;

        r1 := @parameter1: org.apache.commons.math3.geometry.euclidean.threed.Vector3D;

        $r2 = new org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D;

        $r3 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement x>;

        $d1 = virtualinvoke r1.<org.apache.commons.math3.geometry.euclidean.threed.Vector3D: double getX()>();

        $d2 = d0 * $d1;

        $r4 = interfaceinvoke $r3.<org.apache.commons.math3.RealFieldElement: java.lang.Object subtract(double)>($d2);

        $r5 = (org.apache.commons.math3.RealFieldElement) $r4;

        $r6 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement y>;

        $d3 = virtualinvoke r1.<org.apache.commons.math3.geometry.euclidean.threed.Vector3D: double getY()>();

        $d4 = d0 * $d3;

        $r7 = interfaceinvoke $r6.<org.apache.commons.math3.RealFieldElement: java.lang.Object subtract(double)>($d4);

        $r8 = (org.apache.commons.math3.RealFieldElement) $r7;

        $r9 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement z>;

        $d5 = virtualinvoke r1.<org.apache.commons.math3.geometry.euclidean.threed.Vector3D: double getZ()>();

        $d6 = d0 * $d5;

        $r10 = interfaceinvoke $r9.<org.apache.commons.math3.RealFieldElement: java.lang.Object subtract(double)>($d6);

        $r11 = (org.apache.commons.math3.RealFieldElement) $r10;

        specialinvoke $r2.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: void <init>(org.apache.commons.math3.RealFieldElement,org.apache.commons.math3.RealFieldElement,org.apache.commons.math3.RealFieldElement)>($r5, $r8, $r11);

        return $r2;
    }

    public org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D normalize() throws org.apache.commons.math3.exception.MathArithmeticException
    {
        org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D r0, $r4;
        org.apache.commons.math3.RealFieldElement r1, $r3;
        double $d0;
        byte $b0;
        java.lang.Object $r2;
        org.apache.commons.math3.exception.MathArithmeticException $r5;
        java.lang.Object[] $r6;
        org.apache.commons.math3.exception.util.LocalizedFormats $r7;

        r0 := @this: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D;

        r1 = virtualinvoke r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getNorm()>();

        $d0 = interfaceinvoke r1.<org.apache.commons.math3.RealFieldElement: double getReal()>();

        $b0 = $d0 cmpl 0.0;

        if $b0 != 0 goto label1;

        $r5 = new org.apache.commons.math3.exception.MathArithmeticException;

        $r7 = <org.apache.commons.math3.exception.util.LocalizedFormats: org.apache.commons.math3.exception.util.LocalizedFormats CANNOT_NORMALIZE_A_ZERO_NORM_VECTOR>;

        $r6 = newarray (java.lang.Object)[0];

        specialinvoke $r5.<org.apache.commons.math3.exception.MathArithmeticException: void <init>(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])>($r7, $r6);

        throw $r5;

     label1:
        $r2 = interfaceinvoke r1.<org.apache.commons.math3.RealFieldElement: java.lang.Object reciprocal()>();

        $r3 = (org.apache.commons.math3.RealFieldElement) $r2;

        $r4 = virtualinvoke r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D scalarMultiply(org.apache.commons.math3.RealFieldElement)>($r3);

        return $r4;
    }

    public org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D orthogonal() throws org.apache.commons.math3.exception.MathArithmeticException
    {
        org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D r0, $r16, $r40, $r64;
        double d0, $d1, $d2, $d3, $d4, $d5;
        org.apache.commons.math3.RealFieldElement $r1, $r2, $r3, $r4, $r5, $r7, $r8, $r9, $r12, $r14, $r17, $r19, $r20, $r22, $r24, $r27, $r28, $r29, $r31, $r32, $r33, $r36, $r38, $r41, $r43, $r45, $r48, $r49, $r51, $r52, $r53, $r55, $r56, $r57, $r60, $r62, $r67, $r68, $r70, $r71, $r73, $r75, r79, r80, r81;
        byte $b0, $b1, $b2;
        java.lang.Object $r6, $r10, $r11, $r13, $r15, $r18, $r21, $r23, $r26, $r30, $r34, $r35, $r37, $r39, $r42, $r44, $r47, $r50, $r54, $r58, $r59, $r61, $r63, $r66, $r69, $r72, $r74;
        org.apache.commons.math3.Field $r25, $r46, $r65;
        org.apache.commons.math3.exception.MathArithmeticException $r76;
        java.lang.Object[] $r77;
        org.apache.commons.math3.exception.util.LocalizedFormats $r78;

        r0 := @this: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D;

        $r1 = virtualinvoke r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getNorm()>();

        $d1 = interfaceinvoke $r1.<org.apache.commons.math3.RealFieldElement: double getReal()>();

        d0 = 0.6 * $d1;

        $b0 = d0 cmpl 0.0;

        if $b0 != 0 goto label1;

        $r76 = new org.apache.commons.math3.exception.MathArithmeticException;

        $r78 = <org.apache.commons.math3.exception.util.LocalizedFormats: org.apache.commons.math3.exception.util.LocalizedFormats ZERO_NORM>;

        $r77 = newarray (java.lang.Object)[0];

        specialinvoke $r76.<org.apache.commons.math3.exception.MathArithmeticException: void <init>(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])>($r78, $r77);

        throw $r76;

     label1:
        $r2 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement x>;

        $d2 = interfaceinvoke $r2.<org.apache.commons.math3.RealFieldElement: double getReal()>();

        $d3 = staticinvoke <org.apache.commons.math3.util.FastMath: double abs(double)>($d2);

        $b1 = $d3 cmpg d0;

        if $b1 > 0 goto label2;

        $r53 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement y>;

        $r52 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement y>;

        $r54 = interfaceinvoke $r53.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>($r52);

        $r57 = (org.apache.commons.math3.RealFieldElement) $r54;

        $r56 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement z>;

        $r55 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement z>;

        $r58 = interfaceinvoke $r56.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>($r55);

        $r59 = interfaceinvoke $r57.<org.apache.commons.math3.RealFieldElement: java.lang.Object add(java.lang.Object)>($r58);

        $r60 = (org.apache.commons.math3.RealFieldElement) $r59;

        $r61 = interfaceinvoke $r60.<org.apache.commons.math3.RealFieldElement: java.lang.Object sqrt()>();

        $r62 = (org.apache.commons.math3.RealFieldElement) $r61;

        $r63 = interfaceinvoke $r62.<org.apache.commons.math3.RealFieldElement: java.lang.Object reciprocal()>();

        r79 = (org.apache.commons.math3.RealFieldElement) $r63;

        $r64 = new org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D;

        $r65 = interfaceinvoke r79.<org.apache.commons.math3.RealFieldElement: org.apache.commons.math3.Field getField()>();

        $r66 = interfaceinvoke $r65.<org.apache.commons.math3.Field: java.lang.Object getZero()>();

        $r68 = (org.apache.commons.math3.RealFieldElement) $r66;

        $r67 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement z>;

        $r69 = interfaceinvoke r79.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>($r67);

        $r71 = (org.apache.commons.math3.RealFieldElement) $r69;

        $r70 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement y>;

        $r72 = interfaceinvoke r79.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>($r70);

        $r73 = (org.apache.commons.math3.RealFieldElement) $r72;

        $r74 = interfaceinvoke $r73.<org.apache.commons.math3.RealFieldElement: java.lang.Object negate()>();

        $r75 = (org.apache.commons.math3.RealFieldElement) $r74;

        specialinvoke $r64.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: void <init>(org.apache.commons.math3.RealFieldElement,org.apache.commons.math3.RealFieldElement,org.apache.commons.math3.RealFieldElement)>($r68, $r71, $r75);

        return $r64;

     label2:
        $r3 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement y>;

        $d4 = interfaceinvoke $r3.<org.apache.commons.math3.RealFieldElement: double getReal()>();

        $d5 = staticinvoke <org.apache.commons.math3.util.FastMath: double abs(double)>($d4);

        $b2 = $d5 cmpg d0;

        if $b2 > 0 goto label3;

        $r29 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement x>;

        $r28 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement x>;

        $r30 = interfaceinvoke $r29.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>($r28);

        $r33 = (org.apache.commons.math3.RealFieldElement) $r30;

        $r32 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement z>;

        $r31 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement z>;

        $r34 = interfaceinvoke $r32.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>($r31);

        $r35 = interfaceinvoke $r33.<org.apache.commons.math3.RealFieldElement: java.lang.Object add(java.lang.Object)>($r34);

        $r36 = (org.apache.commons.math3.RealFieldElement) $r35;

        $r37 = interfaceinvoke $r36.<org.apache.commons.math3.RealFieldElement: java.lang.Object sqrt()>();

        $r38 = (org.apache.commons.math3.RealFieldElement) $r37;

        $r39 = interfaceinvoke $r38.<org.apache.commons.math3.RealFieldElement: java.lang.Object reciprocal()>();

        r80 = (org.apache.commons.math3.RealFieldElement) $r39;

        $r40 = new org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D;

        $r41 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement z>;

        $r42 = interfaceinvoke r80.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>($r41);

        $r43 = (org.apache.commons.math3.RealFieldElement) $r42;

        $r44 = interfaceinvoke $r43.<org.apache.commons.math3.RealFieldElement: java.lang.Object negate()>();

        $r45 = (org.apache.commons.math3.RealFieldElement) $r44;

        $r46 = interfaceinvoke r80.<org.apache.commons.math3.RealFieldElement: org.apache.commons.math3.Field getField()>();

        $r47 = interfaceinvoke $r46.<org.apache.commons.math3.Field: java.lang.Object getZero()>();

        $r49 = (org.apache.commons.math3.RealFieldElement) $r47;

        $r48 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement x>;

        $r50 = interfaceinvoke r80.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>($r48);

        $r51 = (org.apache.commons.math3.RealFieldElement) $r50;

        specialinvoke $r40.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: void <init>(org.apache.commons.math3.RealFieldElement,org.apache.commons.math3.RealFieldElement,org.apache.commons.math3.RealFieldElement)>($r45, $r49, $r51);

        return $r40;

     label3:
        $r5 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement x>;

        $r4 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement x>;

        $r6 = interfaceinvoke $r5.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>($r4);

        $r9 = (org.apache.commons.math3.RealFieldElement) $r6;

        $r8 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement y>;

        $r7 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement y>;

        $r10 = interfaceinvoke $r8.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>($r7);

        $r11 = interfaceinvoke $r9.<org.apache.commons.math3.RealFieldElement: java.lang.Object add(java.lang.Object)>($r10);

        $r12 = (org.apache.commons.math3.RealFieldElement) $r11;

        $r13 = interfaceinvoke $r12.<org.apache.commons.math3.RealFieldElement: java.lang.Object sqrt()>();

        $r14 = (org.apache.commons.math3.RealFieldElement) $r13;

        $r15 = interfaceinvoke $r14.<org.apache.commons.math3.RealFieldElement: java.lang.Object reciprocal()>();

        r81 = (org.apache.commons.math3.RealFieldElement) $r15;

        $r16 = new org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D;

        $r17 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement y>;

        $r18 = interfaceinvoke r81.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>($r17);

        $r20 = (org.apache.commons.math3.RealFieldElement) $r18;

        $r19 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement x>;

        $r21 = interfaceinvoke r81.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>($r19);

        $r22 = (org.apache.commons.math3.RealFieldElement) $r21;

        $r23 = interfaceinvoke $r22.<org.apache.commons.math3.RealFieldElement: java.lang.Object negate()>();

        $r24 = (org.apache.commons.math3.RealFieldElement) $r23;

        $r25 = interfaceinvoke r81.<org.apache.commons.math3.RealFieldElement: org.apache.commons.math3.Field getField()>();

        $r26 = interfaceinvoke $r25.<org.apache.commons.math3.Field: java.lang.Object getZero()>();

        $r27 = (org.apache.commons.math3.RealFieldElement) $r26;

        specialinvoke $r16.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: void <init>(org.apache.commons.math3.RealFieldElement,org.apache.commons.math3.RealFieldElement,org.apache.commons.math3.RealFieldElement)>($r20, $r24, $r27);

        return $r16;
    }

    public static org.apache.commons.math3.RealFieldElement angle(org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D, org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D) throws org.apache.commons.math3.exception.MathArithmeticException
    {
        org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D r0, r1, r4;
        org.apache.commons.math3.RealFieldElement r2, r3, $r5, $r6, $r8, $r10, $r12, $r14, $r16, $r17, $r19, $r21, $r23, $r25;
        double d0, $d1, $d2, $d3, $d4, $d5, $d6;
        java.lang.Object $r7, $r9, $r11, $r13, $r15, $r18, $r20, $r22, $r24;
        byte $b0, $b1, $b2, $b3;
        org.apache.commons.math3.exception.MathArithmeticException $r26;
        java.lang.Object[] $r27;
        org.apache.commons.math3.exception.util.LocalizedFormats $r28;

        r0 := @parameter0: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D;

        r1 := @parameter1: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D;

        $r5 = virtualinvoke r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getNorm()>();

        $r6 = virtualinvoke r1.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getNorm()>();

        $r7 = interfaceinvoke $r5.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>($r6);

        r2 = (org.apache.commons.math3.RealFieldElement) $r7;

        $d1 = interfaceinvoke r2.<org.apache.commons.math3.RealFieldElement: double getReal()>();

        $b0 = $d1 cmpl 0.0;

        if $b0 != 0 goto label1;

        $r26 = new org.apache.commons.math3.exception.MathArithmeticException;

        $r28 = <org.apache.commons.math3.exception.util.LocalizedFormats: org.apache.commons.math3.exception.util.LocalizedFormats ZERO_NORM>;

        $r27 = newarray (java.lang.Object)[0];

        specialinvoke $r26.<org.apache.commons.math3.exception.MathArithmeticException: void <init>(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])>($r28, $r27);

        throw $r26;

     label1:
        r3 = staticinvoke <org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement dotProduct(org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D,org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D)>(r0, r1);

        $d2 = interfaceinvoke r2.<org.apache.commons.math3.RealFieldElement: double getReal()>();

        d0 = $d2 * 0.9999;

        $d3 = interfaceinvoke r3.<org.apache.commons.math3.RealFieldElement: double getReal()>();

        $d4 = neg d0;

        $b1 = $d3 cmpg $d4;

        if $b1 < 0 goto label2;

        $d6 = interfaceinvoke r3.<org.apache.commons.math3.RealFieldElement: double getReal()>();

        $b3 = $d6 cmpl d0;

        if $b3 <= 0 goto label4;

     label2:
        r4 = staticinvoke <org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D crossProduct(org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D,org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D)>(r0, r1);

        $d5 = interfaceinvoke r3.<org.apache.commons.math3.RealFieldElement: double getReal()>();

        $b2 = $d5 cmpl 0.0;

        if $b2 < 0 goto label3;

        $r17 = virtualinvoke r4.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getNorm()>();

        $r18 = interfaceinvoke $r17.<org.apache.commons.math3.RealFieldElement: java.lang.Object divide(java.lang.Object)>(r2);

        $r19 = (org.apache.commons.math3.RealFieldElement) $r18;

        $r20 = interfaceinvoke $r19.<org.apache.commons.math3.RealFieldElement: java.lang.Object asin()>();

        $r21 = (org.apache.commons.math3.RealFieldElement) $r20;

        return $r21;

     label3:
        $r8 = virtualinvoke r4.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getNorm()>();

        $r9 = interfaceinvoke $r8.<org.apache.commons.math3.RealFieldElement: java.lang.Object divide(java.lang.Object)>(r2);

        $r10 = (org.apache.commons.math3.RealFieldElement) $r9;

        $r11 = interfaceinvoke $r10.<org.apache.commons.math3.RealFieldElement: java.lang.Object asin()>();

        $r12 = (org.apache.commons.math3.RealFieldElement) $r11;

        $r13 = interfaceinvoke $r12.<org.apache.commons.math3.RealFieldElement: java.lang.Object subtract(double)>(3.141592653589793);

        $r14 = (org.apache.commons.math3.RealFieldElement) $r13;

        $r15 = interfaceinvoke $r14.<org.apache.commons.math3.RealFieldElement: java.lang.Object negate()>();

        $r16 = (org.apache.commons.math3.RealFieldElement) $r15;

        return $r16;

     label4:
        $r22 = interfaceinvoke r3.<org.apache.commons.math3.RealFieldElement: java.lang.Object divide(java.lang.Object)>(r2);

        $r23 = (org.apache.commons.math3.RealFieldElement) $r22;

        $r24 = interfaceinvoke $r23.<org.apache.commons.math3.RealFieldElement: java.lang.Object acos()>();

        $r25 = (org.apache.commons.math3.RealFieldElement) $r24;

        return $r25;
    }

    public static org.apache.commons.math3.RealFieldElement angle(org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D, org.apache.commons.math3.geometry.euclidean.threed.Vector3D) throws org.apache.commons.math3.exception.MathArithmeticException
    {
        org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D r0, r4;
        org.apache.commons.math3.geometry.euclidean.threed.Vector3D r1;
        org.apache.commons.math3.RealFieldElement r2, r3, $r5, $r7, $r9, $r11, $r13, $r15, $r16, $r18, $r20, $r22, $r24;
        double d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7;
        java.lang.Object $r6, $r8, $r10, $r12, $r14, $r17, $r19, $r21, $r23;
        byte $b0, $b1, $b2, $b3;
        org.apache.commons.math3.exception.MathArithmeticException $r25;
        java.lang.Object[] $r26;
        org.apache.commons.math3.exception.util.LocalizedFormats $r27;

        r0 := @parameter0: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D;

        r1 := @parameter1: org.apache.commons.math3.geometry.euclidean.threed.Vector3D;

        $r5 = virtualinvoke r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getNorm()>();

        $d1 = virtualinvoke r1.<org.apache.commons.math3.geometry.euclidean.threed.Vector3D: double getNorm()>();

        $r6 = interfaceinvoke $r5.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(double)>($d1);

        r2 = (org.apache.commons.math3.RealFieldElement) $r6;

        $d2 = interfaceinvoke r2.<org.apache.commons.math3.RealFieldElement: double getReal()>();

        $b0 = $d2 cmpl 0.0;

        if $b0 != 0 goto label1;

        $r25 = new org.apache.commons.math3.exception.MathArithmeticException;

        $r27 = <org.apache.commons.math3.exception.util.LocalizedFormats: org.apache.commons.math3.exception.util.LocalizedFormats ZERO_NORM>;

        $r26 = newarray (java.lang.Object)[0];

        specialinvoke $r25.<org.apache.commons.math3.exception.MathArithmeticException: void <init>(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])>($r27, $r26);

        throw $r25;

     label1:
        r3 = staticinvoke <org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement dotProduct(org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D,org.apache.commons.math3.geometry.euclidean.threed.Vector3D)>(r0, r1);

        $d3 = interfaceinvoke r2.<org.apache.commons.math3.RealFieldElement: double getReal()>();

        d0 = $d3 * 0.9999;

        $d4 = interfaceinvoke r3.<org.apache.commons.math3.RealFieldElement: double getReal()>();

        $d5 = neg d0;

        $b1 = $d4 cmpg $d5;

        if $b1 < 0 goto label2;

        $d7 = interfaceinvoke r3.<org.apache.commons.math3.RealFieldElement: double getReal()>();

        $b3 = $d7 cmpl d0;

        if $b3 <= 0 goto label4;

     label2:
        r4 = staticinvoke <org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D crossProduct(org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D,org.apache.commons.math3.geometry.euclidean.threed.Vector3D)>(r0, r1);

        $d6 = interfaceinvoke r3.<org.apache.commons.math3.RealFieldElement: double getReal()>();

        $b2 = $d6 cmpl 0.0;

        if $b2 < 0 goto label3;

        $r16 = virtualinvoke r4.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getNorm()>();

        $r17 = interfaceinvoke $r16.<org.apache.commons.math3.RealFieldElement: java.lang.Object divide(java.lang.Object)>(r2);

        $r18 = (org.apache.commons.math3.RealFieldElement) $r17;

        $r19 = interfaceinvoke $r18.<org.apache.commons.math3.RealFieldElement: java.lang.Object asin()>();

        $r20 = (org.apache.commons.math3.RealFieldElement) $r19;

        return $r20;

     label3:
        $r7 = virtualinvoke r4.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement getNorm()>();

        $r8 = interfaceinvoke $r7.<org.apache.commons.math3.RealFieldElement: java.lang.Object divide(java.lang.Object)>(r2);

        $r9 = (org.apache.commons.math3.RealFieldElement) $r8;

        $r10 = interfaceinvoke $r9.<org.apache.commons.math3.RealFieldElement: java.lang.Object asin()>();

        $r11 = (org.apache.commons.math3.RealFieldElement) $r10;

        $r12 = interfaceinvoke $r11.<org.apache.commons.math3.RealFieldElement: java.lang.Object subtract(double)>(3.141592653589793);

        $r13 = (org.apache.commons.math3.RealFieldElement) $r12;

        $r14 = interfaceinvoke $r13.<org.apache.commons.math3.RealFieldElement: java.lang.Object negate()>();

        $r15 = (org.apache.commons.math3.RealFieldElement) $r14;

        return $r15;

     label4:
        $r21 = interfaceinvoke r3.<org.apache.commons.math3.RealFieldElement: java.lang.Object divide(java.lang.Object)>(r2);

        $r22 = (org.apache.commons.math3.RealFieldElement) $r21;

        $r23 = interfaceinvoke $r22.<org.apache.commons.math3.RealFieldElement: java.lang.Object acos()>();

        $r24 = (org.apache.commons.math3.RealFieldElement) $r23;

        return $r24;
    }

    public static org.apache.commons.math3.RealFieldElement angle(org.apache.commons.math3.geometry.euclidean.threed.Vector3D, org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D) throws org.apache.commons.math3.exception.MathArithmeticException
    {
        org.apache.commons.math3.geometry.euclidean.threed.Vector3D r0;
        org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D r1;
        org.apache.commons.math3.RealFieldElement $r2;

        r0 := @parameter0: org.apache.commons.math3.geometry.euclidean.threed.Vector3D;

        r1 := @parameter1: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D;

        $r2 = staticinvoke <org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement angle(org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D,org.apache.commons.math3.geometry.euclidean.threed.Vector3D)>(r1, r0);

        return $r2;
    }

    public org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D negate()
    {
        org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D r0, $r1;
        org.apache.commons.math3.RealFieldElement $r2, $r4, $r5, $r7, $r8, $r10;
        java.lang.Object $r3, $r6, $r9;

        r0 := @this: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D;

        $r1 = new org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D;

        $r2 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement x>;

        $r3 = interfaceinvoke $r2.<org.apache.commons.math3.RealFieldElement: java.lang.Object negate()>();

        $r5 = (org.apache.commons.math3.RealFieldElement) $r3;

        $r4 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement y>;

        $r6 = interfaceinvoke $r4.<org.apache.commons.math3.RealFieldElement: java.lang.Object negate()>();

        $r8 = (org.apache.commons.math3.RealFieldElement) $r6;

        $r7 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement z>;

        $r9 = interfaceinvoke $r7.<org.apache.commons.math3.RealFieldElement: java.lang.Object negate()>();

        $r10 = (org.apache.commons.math3.RealFieldElement) $r9;

        specialinvoke $r1.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: void <init>(org.apache.commons.math3.RealFieldElement,org.apache.commons.math3.RealFieldElement,org.apache.commons.math3.RealFieldElement)>($r5, $r8, $r10);

        return $r1;
    }

    public org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D scalarMultiply(org.apache.commons.math3.RealFieldElement)
    {
        org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D r0, $r2;
        org.apache.commons.math3.RealFieldElement r1, $r3, $r5, $r6, $r8, $r9, $r11;
        java.lang.Object $r4, $r7, $r10;

        r0 := @this: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D;

        r1 := @parameter0: org.apache.commons.math3.RealFieldElement;

        $r2 = new org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D;

        $r3 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement x>;

        $r4 = interfaceinvoke $r3.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>(r1);

        $r6 = (org.apache.commons.math3.RealFieldElement) $r4;

        $r5 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement y>;

        $r7 = interfaceinvoke $r5.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>(r1);

        $r9 = (org.apache.commons.math3.RealFieldElement) $r7;

        $r8 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement z>;

        $r10 = interfaceinvoke $r8.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>(r1);

        $r11 = (org.apache.commons.math3.RealFieldElement) $r10;

        specialinvoke $r2.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: void <init>(org.apache.commons.math3.RealFieldElement,org.apache.commons.math3.RealFieldElement,org.apache.commons.math3.RealFieldElement)>($r6, $r9, $r11);

        return $r2;
    }

    public org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D scalarMultiply(double)
    {
        org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D r0, $r1;
        double d0;
        org.apache.commons.math3.RealFieldElement $r2, $r4, $r5, $r7, $r8, $r10;
        java.lang.Object $r3, $r6, $r9;

        r0 := @this: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D;

        d0 := @parameter0: double;

        $r1 = new org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D;

        $r2 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement x>;

        $r3 = interfaceinvoke $r2.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(double)>(d0);

        $r5 = (org.apache.commons.math3.RealFieldElement) $r3;

        $r4 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement y>;

        $r6 = interfaceinvoke $r4.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(double)>(d0);

        $r8 = (org.apache.commons.math3.RealFieldElement) $r6;

        $r7 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement z>;

        $r9 = interfaceinvoke $r7.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(double)>(d0);

        $r10 = (org.apache.commons.math3.RealFieldElement) $r9;

        specialinvoke $r1.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: void <init>(org.apache.commons.math3.RealFieldElement,org.apache.commons.math3.RealFieldElement,org.apache.commons.math3.RealFieldElement)>($r5, $r8, $r10);

        return $r1;
    }

    public boolean isNaN()
    {
        org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D r0;
        org.apache.commons.math3.RealFieldElement $r1, $r2, $r3;
        double $d0, $d1, $d2;
        boolean $z0, $z1, $z2, $z3;

        r0 := @this: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D;

        $r1 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement x>;

        $d0 = interfaceinvoke $r1.<org.apache.commons.math3.RealFieldElement: double getReal()>();

        $z0 = staticinvoke <java.lang.Double: boolean isNaN(double)>($d0);

        if $z0 != 0 goto label1;

        $r2 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement y>;

        $d1 = interfaceinvoke $r2.<org.apache.commons.math3.RealFieldElement: double getReal()>();

        $z1 = staticinvoke <java.lang.Double: boolean isNaN(double)>($d1);

        if $z1 != 0 goto label1;

        $r3 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement z>;

        $d2 = interfaceinvoke $r3.<org.apache.commons.math3.RealFieldElement: double getReal()>();

        $z2 = staticinvoke <java.lang.Double: boolean isNaN(double)>($d2);

        if $z2 == 0 goto label2;

     label1:
        $z3 = 1;

        goto label3;

     label2:
        $z3 = 0;

     label3:
        return $z3;
    }

    public boolean isInfinite()
    {
        org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D r0;
        boolean $z0, $z1, $z2, $z3, $z4;
        org.apache.commons.math3.RealFieldElement $r1, $r2, $r3;
        double $d0, $d1, $d2;

        r0 := @this: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D;

        $z0 = virtualinvoke r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: boolean isNaN()>();

        if $z0 != 0 goto label2;

        $r1 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement x>;

        $d0 = interfaceinvoke $r1.<org.apache.commons.math3.RealFieldElement: double getReal()>();

        $z1 = staticinvoke <java.lang.Double: boolean isInfinite(double)>($d0);

        if $z1 != 0 goto label1;

        $r2 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement y>;

        $d1 = interfaceinvoke $r2.<org.apache.commons.math3.RealFieldElement: double getReal()>();

        $z2 = staticinvoke <java.lang.Double: boolean isInfinite(double)>($d1);

        if $z2 != 0 goto label1;

        $r3 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement z>;

        $d2 = interfaceinvoke $r3.<org.apache.commons.math3.RealFieldElement: double getReal()>();

        $z3 = staticinvoke <java.lang.Double: boolean isInfinite(double)>($d2);

        if $z3 == 0 goto label2;

     label1:
        $z4 = 1;

        goto label3;

     label2:
        $z4 = 0;

     label3:
        return $z4;
    }

    public boolean equals(java.lang.Object)
    {
        org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D r0, r2;
        java.lang.Object r1;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        org.apache.commons.math3.RealFieldElement $r3, $r4, $r5, $r6, $r7, $r8;

        r0 := @this: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D;

        r1 := @parameter0: java.lang.Object;

        if r0 != r1 goto label1;

        return 1;

     label1:
        $z0 = r1 instanceof org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D;

        if $z0 == 0 goto label5;

        r2 = (org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D) r1;

        $z1 = virtualinvoke r2.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: boolean isNaN()>();

        if $z1 == 0 goto label2;

        $z5 = virtualinvoke r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: boolean isNaN()>();

        return $z5;

     label2:
        $r4 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement x>;

        $r3 = r2.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement x>;

        $z2 = virtualinvoke $r4.<java.lang.Object: boolean equals(java.lang.Object)>($r3);

        if $z2 == 0 goto label3;

        $r6 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement y>;

        $r5 = r2.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement y>;

        $z3 = virtualinvoke $r6.<java.lang.Object: boolean equals(java.lang.Object)>($r5);

        if $z3 == 0 goto label3;

        $r8 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement z>;

        $r7 = r2.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement z>;

        $z4 = virtualinvoke $r8.<java.lang.Object: boolean equals(java.lang.Object)>($r7);

        if $z4 == 0 goto label3;

        $z6 = 1;

        goto label4;

     label3:
        $z6 = 0;

     label4:
        return $z6;

     label5:
        return 0;
    }

    public int hashCode()
    {
        org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D r0;
        boolean $z0;
        org.apache.commons.math3.RealFieldElement $r1, $r2, $r3;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;

        r0 := @this: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D;

        $z0 = virtualinvoke r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: boolean isNaN()>();

        if $z0 == 0 goto label1;

        return 409;

     label1:
        $r1 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement x>;

        $i0 = virtualinvoke $r1.<java.lang.Object: int hashCode()>();

        $i1 = 107 * $i0;

        $r2 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement y>;

        $i2 = virtualinvoke $r2.<java.lang.Object: int hashCode()>();

        $i3 = 83 * $i2;

        $i4 = $i1 + $i3;

        $r3 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement z>;

        $i5 = virtualinvoke $r3.<java.lang.Object: int hashCode()>();

        $i6 = $i4 + $i5;

        $i7 = 311 * $i6;

        return $i7;
    }

    public org.apache.commons.math3.RealFieldElement dotProduct(org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D)
    {
        org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D r0, r1;
        org.apache.commons.math3.RealFieldElement $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r10;
        java.lang.Object $r9;

        r0 := @this: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D;

        r1 := @parameter0: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D;

        $r8 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement x>;

        $r7 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement x>;

        $r6 = r1.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement x>;

        $r5 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement y>;

        $r4 = r1.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement y>;

        $r3 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement z>;

        $r2 = r1.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement z>;

        $r9 = interfaceinvoke $r8.<org.apache.commons.math3.RealFieldElement: java.lang.Object linearCombination(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>($r7, $r6, $r5, $r4, $r3, $r2);

        $r10 = (org.apache.commons.math3.RealFieldElement) $r9;

        return $r10;
    }

    public org.apache.commons.math3.RealFieldElement dotProduct(org.apache.commons.math3.geometry.euclidean.threed.Vector3D)
    {
        org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D r0;
        org.apache.commons.math3.geometry.euclidean.threed.Vector3D r1;
        org.apache.commons.math3.RealFieldElement $r2, $r3, $r4, $r5, $r7;
        double $d0, $d1, $d2;
        java.lang.Object $r6;

        r0 := @this: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D;

        r1 := @parameter0: org.apache.commons.math3.geometry.euclidean.threed.Vector3D;

        $r2 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement x>;

        $d0 = virtualinvoke r1.<org.apache.commons.math3.geometry.euclidean.threed.Vector3D: double getX()>();

        $r3 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement x>;

        $d1 = virtualinvoke r1.<org.apache.commons.math3.geometry.euclidean.threed.Vector3D: double getY()>();

        $r4 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement y>;

        $d2 = virtualinvoke r1.<org.apache.commons.math3.geometry.euclidean.threed.Vector3D: double getZ()>();

        $r5 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement z>;

        $r6 = interfaceinvoke $r2.<org.apache.commons.math3.RealFieldElement: java.lang.Object linearCombination(double,java.lang.Object,double,java.lang.Object,double,java.lang.Object)>($d0, $r3, $d1, $r4, $d2, $r5);

        $r7 = (org.apache.commons.math3.RealFieldElement) $r6;

        return $r7;
    }

    public org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D crossProduct(org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D)
    {
        org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D r0, r1, $r2;
        org.apache.commons.math3.RealFieldElement $r3, $r4, $r5, $r6, $r8, $r10, $r11, $r12, $r13, $r14, $r16, $r18, $r19, $r20, $r21, $r22, $r24, $r26;
        java.lang.Object $r7, $r9, $r15, $r17, $r23, $r25;

        r0 := @this: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D;

        r1 := @parameter0: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D;

        $r2 = new org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D;

        $r4 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement x>;

        $r5 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement y>;

        $r6 = r1.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement z>;

        $r3 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement z>;

        $r7 = interfaceinvoke $r3.<org.apache.commons.math3.RealFieldElement: java.lang.Object negate()>();

        $r8 = r1.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement y>;

        $r9 = interfaceinvoke $r4.<org.apache.commons.math3.RealFieldElement: java.lang.Object linearCombination(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>($r5, $r6, $r7, $r8);

        $r11 = (org.apache.commons.math3.RealFieldElement) $r9;

        $r12 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement y>;

        $r13 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement z>;

        $r14 = r1.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement x>;

        $r10 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement x>;

        $r15 = interfaceinvoke $r10.<org.apache.commons.math3.RealFieldElement: java.lang.Object negate()>();

        $r16 = r1.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement z>;

        $r17 = interfaceinvoke $r12.<org.apache.commons.math3.RealFieldElement: java.lang.Object linearCombination(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>($r13, $r14, $r15, $r16);

        $r19 = (org.apache.commons.math3.RealFieldElement) $r17;

        $r20 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement z>;

        $r21 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement x>;

        $r22 = r1.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement y>;

        $r18 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement y>;

        $r23 = interfaceinvoke $r18.<org.apache.commons.math3.RealFieldElement: java.lang.Object negate()>();

        $r24 = r1.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement x>;

        $r25 = interfaceinvoke $r20.<org.apache.commons.math3.RealFieldElement: java.lang.Object linearCombination(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>($r21, $r22, $r23, $r24);

        $r26 = (org.apache.commons.math3.RealFieldElement) $r25;

        specialinvoke $r2.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: void <init>(org.apache.commons.math3.RealFieldElement,org.apache.commons.math3.RealFieldElement,org.apache.commons.math3.RealFieldElement)>($r11, $r19, $r26);

        return $r2;
    }

    public org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D crossProduct(org.apache.commons.math3.geometry.euclidean.threed.Vector3D)
    {
        org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D r0, $r2;
        org.apache.commons.math3.geometry.euclidean.threed.Vector3D r1;
        org.apache.commons.math3.RealFieldElement $r3, $r4, $r5, $r7, $r8, $r9, $r10, $r12, $r13, $r14, $r15, $r17;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8;
        java.lang.Object $r6, $r11, $r16;

        r0 := @this: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D;

        r1 := @parameter0: org.apache.commons.math3.geometry.euclidean.threed.Vector3D;

        $r2 = new org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D;

        $r3 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement x>;

        $d0 = virtualinvoke r1.<org.apache.commons.math3.geometry.euclidean.threed.Vector3D: double getZ()>();

        $r4 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement y>;

        $d1 = virtualinvoke r1.<org.apache.commons.math3.geometry.euclidean.threed.Vector3D: double getY()>();

        $d2 = neg $d1;

        $r5 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement z>;

        $r6 = interfaceinvoke $r3.<org.apache.commons.math3.RealFieldElement: java.lang.Object linearCombination(double,java.lang.Object,double,java.lang.Object)>($d0, $r4, $d2, $r5);

        $r7 = (org.apache.commons.math3.RealFieldElement) $r6;

        $r8 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement y>;

        $d3 = virtualinvoke r1.<org.apache.commons.math3.geometry.euclidean.threed.Vector3D: double getX()>();

        $r9 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement z>;

        $d4 = virtualinvoke r1.<org.apache.commons.math3.geometry.euclidean.threed.Vector3D: double getZ()>();

        $d5 = neg $d4;

        $r10 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement x>;

        $r11 = interfaceinvoke $r8.<org.apache.commons.math3.RealFieldElement: java.lang.Object linearCombination(double,java.lang.Object,double,java.lang.Object)>($d3, $r9, $d5, $r10);

        $r12 = (org.apache.commons.math3.RealFieldElement) $r11;

        $r13 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement z>;

        $d6 = virtualinvoke r1.<org.apache.commons.math3.geometry.euclidean.threed.Vector3D: double getY()>();

        $r14 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement x>;

        $d7 = virtualinvoke r1.<org.apache.commons.math3.geometry.euclidean.threed.Vector3D: double getX()>();

        $d8 = neg $d7;

        $r15 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement y>;

        $r16 = interfaceinvoke $r13.<org.apache.commons.math3.RealFieldElement: java.lang.Object linearCombination(double,java.lang.Object,double,java.lang.Object)>($d6, $r14, $d8, $r15);

        $r17 = (org.apache.commons.math3.RealFieldElement) $r16;

        specialinvoke $r2.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: void <init>(org.apache.commons.math3.RealFieldElement,org.apache.commons.math3.RealFieldElement,org.apache.commons.math3.RealFieldElement)>($r7, $r12, $r17);

        return $r2;
    }

    public org.apache.commons.math3.RealFieldElement distance1(org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D)
    {
        org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D r0, r1;
        org.apache.commons.math3.RealFieldElement r2, r3, r4, $r5, $r6, $r8, $r10, $r11, $r13, $r15, $r16, $r18, $r21, $r23;
        java.lang.Object $r7, $r9, $r12, $r14, $r17, $r19, $r20, $r22;

        r0 := @this: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D;

        r1 := @parameter0: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D;

        $r6 = r1.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement x>;

        $r5 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement x>;

        $r7 = interfaceinvoke $r6.<org.apache.commons.math3.RealFieldElement: java.lang.Object subtract(java.lang.Object)>($r5);

        $r8 = (org.apache.commons.math3.RealFieldElement) $r7;

        $r9 = interfaceinvoke $r8.<org.apache.commons.math3.RealFieldElement: java.lang.Object abs()>();

        r2 = (org.apache.commons.math3.RealFieldElement) $r9;

        $r11 = r1.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement y>;

        $r10 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement y>;

        $r12 = interfaceinvoke $r11.<org.apache.commons.math3.RealFieldElement: java.lang.Object subtract(java.lang.Object)>($r10);

        $r13 = (org.apache.commons.math3.RealFieldElement) $r12;

        $r14 = interfaceinvoke $r13.<org.apache.commons.math3.RealFieldElement: java.lang.Object abs()>();

        r3 = (org.apache.commons.math3.RealFieldElement) $r14;

        $r16 = r1.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement z>;

        $r15 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement z>;

        $r17 = interfaceinvoke $r16.<org.apache.commons.math3.RealFieldElement: java.lang.Object subtract(java.lang.Object)>($r15);

        $r18 = (org.apache.commons.math3.RealFieldElement) $r17;

        $r19 = interfaceinvoke $r18.<org.apache.commons.math3.RealFieldElement: java.lang.Object abs()>();

        r4 = (org.apache.commons.math3.RealFieldElement) $r19;

        $r20 = interfaceinvoke r2.<org.apache.commons.math3.RealFieldElement: java.lang.Object add(java.lang.Object)>(r3);

        $r21 = (org.apache.commons.math3.RealFieldElement) $r20;

        $r22 = interfaceinvoke $r21.<org.apache.commons.math3.RealFieldElement: java.lang.Object add(java.lang.Object)>(r4);

        $r23 = (org.apache.commons.math3.RealFieldElement) $r22;

        return $r23;
    }

    public org.apache.commons.math3.RealFieldElement distance1(org.apache.commons.math3.geometry.euclidean.threed.Vector3D)
    {
        org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D r0;
        org.apache.commons.math3.geometry.euclidean.threed.Vector3D r1;
        org.apache.commons.math3.RealFieldElement r2, r3, r4, $r5, $r7, $r9, $r11, $r13, $r15, $r18, $r20;
        double $d0, $d1, $d2;
        java.lang.Object $r6, $r8, $r10, $r12, $r14, $r16, $r17, $r19;

        r0 := @this: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D;

        r1 := @parameter0: org.apache.commons.math3.geometry.euclidean.threed.Vector3D;

        $r5 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement x>;

        $d0 = virtualinvoke r1.<org.apache.commons.math3.geometry.euclidean.threed.Vector3D: double getX()>();

        $r6 = interfaceinvoke $r5.<org.apache.commons.math3.RealFieldElement: java.lang.Object subtract(double)>($d0);

        $r7 = (org.apache.commons.math3.RealFieldElement) $r6;

        $r8 = interfaceinvoke $r7.<org.apache.commons.math3.RealFieldElement: java.lang.Object abs()>();

        r2 = (org.apache.commons.math3.RealFieldElement) $r8;

        $r9 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement y>;

        $d1 = virtualinvoke r1.<org.apache.commons.math3.geometry.euclidean.threed.Vector3D: double getY()>();

        $r10 = interfaceinvoke $r9.<org.apache.commons.math3.RealFieldElement: java.lang.Object subtract(double)>($d1);

        $r11 = (org.apache.commons.math3.RealFieldElement) $r10;

        $r12 = interfaceinvoke $r11.<org.apache.commons.math3.RealFieldElement: java.lang.Object abs()>();

        r3 = (org.apache.commons.math3.RealFieldElement) $r12;

        $r13 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement z>;

        $d2 = virtualinvoke r1.<org.apache.commons.math3.geometry.euclidean.threed.Vector3D: double getZ()>();

        $r14 = interfaceinvoke $r13.<org.apache.commons.math3.RealFieldElement: java.lang.Object subtract(double)>($d2);

        $r15 = (org.apache.commons.math3.RealFieldElement) $r14;

        $r16 = interfaceinvoke $r15.<org.apache.commons.math3.RealFieldElement: java.lang.Object abs()>();

        r4 = (org.apache.commons.math3.RealFieldElement) $r16;

        $r17 = interfaceinvoke r2.<org.apache.commons.math3.RealFieldElement: java.lang.Object add(java.lang.Object)>(r3);

        $r18 = (org.apache.commons.math3.RealFieldElement) $r17;

        $r19 = interfaceinvoke $r18.<org.apache.commons.math3.RealFieldElement: java.lang.Object add(java.lang.Object)>(r4);

        $r20 = (org.apache.commons.math3.RealFieldElement) $r19;

        return $r20;
    }

    public org.apache.commons.math3.RealFieldElement distance(org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D)
    {
        org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D r0, r1;
        org.apache.commons.math3.RealFieldElement r2, r3, r4, $r5, $r6, $r8, $r9, $r11, $r12, $r15, $r18, $r21, $r23;
        java.lang.Object $r7, $r10, $r13, $r14, $r16, $r17, $r19, $r20, $r22;

        r0 := @this: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D;

        r1 := @parameter0: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D;

        $r6 = r1.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement x>;

        $r5 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement x>;

        $r7 = interfaceinvoke $r6.<org.apache.commons.math3.RealFieldElement: java.lang.Object subtract(java.lang.Object)>($r5);

        r2 = (org.apache.commons.math3.RealFieldElement) $r7;

        $r9 = r1.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement y>;

        $r8 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement y>;

        $r10 = interfaceinvoke $r9.<org.apache.commons.math3.RealFieldElement: java.lang.Object subtract(java.lang.Object)>($r8);

        r3 = (org.apache.commons.math3.RealFieldElement) $r10;

        $r12 = r1.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement z>;

        $r11 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement z>;

        $r13 = interfaceinvoke $r12.<org.apache.commons.math3.RealFieldElement: java.lang.Object subtract(java.lang.Object)>($r11);

        r4 = (org.apache.commons.math3.RealFieldElement) $r13;

        $r14 = interfaceinvoke r2.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>(r2);

        $r15 = (org.apache.commons.math3.RealFieldElement) $r14;

        $r16 = interfaceinvoke r3.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>(r3);

        $r17 = interfaceinvoke $r15.<org.apache.commons.math3.RealFieldElement: java.lang.Object add(java.lang.Object)>($r16);

        $r18 = (org.apache.commons.math3.RealFieldElement) $r17;

        $r19 = interfaceinvoke r4.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>(r4);

        $r20 = interfaceinvoke $r18.<org.apache.commons.math3.RealFieldElement: java.lang.Object add(java.lang.Object)>($r19);

        $r21 = (org.apache.commons.math3.RealFieldElement) $r20;

        $r22 = interfaceinvoke $r21.<org.apache.commons.math3.RealFieldElement: java.lang.Object sqrt()>();

        $r23 = (org.apache.commons.math3.RealFieldElement) $r22;

        return $r23;
    }

    public org.apache.commons.math3.RealFieldElement distance(org.apache.commons.math3.geometry.euclidean.threed.Vector3D)
    {
        org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D r0;
        org.apache.commons.math3.geometry.euclidean.threed.Vector3D r1;
        org.apache.commons.math3.RealFieldElement r2, r3, r4, $r5, $r7, $r9, $r12, $r15, $r18, $r20;
        double $d0, $d1, $d2;
        java.lang.Object $r6, $r8, $r10, $r11, $r13, $r14, $r16, $r17, $r19;

        r0 := @this: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D;

        r1 := @parameter0: org.apache.commons.math3.geometry.euclidean.threed.Vector3D;

        $r5 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement x>;

        $d0 = virtualinvoke r1.<org.apache.commons.math3.geometry.euclidean.threed.Vector3D: double getX()>();

        $r6 = interfaceinvoke $r5.<org.apache.commons.math3.RealFieldElement: java.lang.Object subtract(double)>($d0);

        r2 = (org.apache.commons.math3.RealFieldElement) $r6;

        $r7 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement y>;

        $d1 = virtualinvoke r1.<org.apache.commons.math3.geometry.euclidean.threed.Vector3D: double getY()>();

        $r8 = interfaceinvoke $r7.<org.apache.commons.math3.RealFieldElement: java.lang.Object subtract(double)>($d1);

        r3 = (org.apache.commons.math3.RealFieldElement) $r8;

        $r9 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement z>;

        $d2 = virtualinvoke r1.<org.apache.commons.math3.geometry.euclidean.threed.Vector3D: double getZ()>();

        $r10 = interfaceinvoke $r9.<org.apache.commons.math3.RealFieldElement: java.lang.Object subtract(double)>($d2);

        r4 = (org.apache.commons.math3.RealFieldElement) $r10;

        $r11 = interfaceinvoke r2.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>(r2);

        $r12 = (org.apache.commons.math3.RealFieldElement) $r11;

        $r13 = interfaceinvoke r3.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>(r3);

        $r14 = interfaceinvoke $r12.<org.apache.commons.math3.RealFieldElement: java.lang.Object add(java.lang.Object)>($r13);

        $r15 = (org.apache.commons.math3.RealFieldElement) $r14;

        $r16 = interfaceinvoke r4.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>(r4);

        $r17 = interfaceinvoke $r15.<org.apache.commons.math3.RealFieldElement: java.lang.Object add(java.lang.Object)>($r16);

        $r18 = (org.apache.commons.math3.RealFieldElement) $r17;

        $r19 = interfaceinvoke $r18.<org.apache.commons.math3.RealFieldElement: java.lang.Object sqrt()>();

        $r20 = (org.apache.commons.math3.RealFieldElement) $r19;

        return $r20;
    }

    public org.apache.commons.math3.RealFieldElement distanceInf(org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D)
    {
        org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D r0, r1;
        org.apache.commons.math3.RealFieldElement r2, r3, r4, $r5, $r6, $r8, $r10, $r11, $r13, $r15, $r16, $r18;
        java.lang.Object $r7, $r9, $r12, $r14, $r17, $r19;
        double $d0, $d1, $d2, $d3, $d4, $d5;
        byte $b0, $b1, $b2;

        r0 := @this: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D;

        r1 := @parameter0: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D;

        $r6 = r1.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement x>;

        $r5 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement x>;

        $r7 = interfaceinvoke $r6.<org.apache.commons.math3.RealFieldElement: java.lang.Object subtract(java.lang.Object)>($r5);

        $r8 = (org.apache.commons.math3.RealFieldElement) $r7;

        $r9 = interfaceinvoke $r8.<org.apache.commons.math3.RealFieldElement: java.lang.Object abs()>();

        r2 = (org.apache.commons.math3.RealFieldElement) $r9;

        $r11 = r1.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement y>;

        $r10 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement y>;

        $r12 = interfaceinvoke $r11.<org.apache.commons.math3.RealFieldElement: java.lang.Object subtract(java.lang.Object)>($r10);

        $r13 = (org.apache.commons.math3.RealFieldElement) $r12;

        $r14 = interfaceinvoke $r13.<org.apache.commons.math3.RealFieldElement: java.lang.Object abs()>();

        r3 = (org.apache.commons.math3.RealFieldElement) $r14;

        $r16 = r1.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement z>;

        $r15 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement z>;

        $r17 = interfaceinvoke $r16.<org.apache.commons.math3.RealFieldElement: java.lang.Object subtract(java.lang.Object)>($r15);

        $r18 = (org.apache.commons.math3.RealFieldElement) $r17;

        $r19 = interfaceinvoke $r18.<org.apache.commons.math3.RealFieldElement: java.lang.Object abs()>();

        r4 = (org.apache.commons.math3.RealFieldElement) $r19;

        $d0 = interfaceinvoke r2.<org.apache.commons.math3.RealFieldElement: double getReal()>();

        $d1 = interfaceinvoke r3.<org.apache.commons.math3.RealFieldElement: double getReal()>();

        $b0 = $d0 cmpg $d1;

        if $b0 > 0 goto label2;

        $d4 = interfaceinvoke r3.<org.apache.commons.math3.RealFieldElement: double getReal()>();

        $d5 = interfaceinvoke r4.<org.apache.commons.math3.RealFieldElement: double getReal()>();

        $b2 = $d4 cmpg $d5;

        if $b2 > 0 goto label1;

        return r4;

     label1:
        return r3;

     label2:
        $d2 = interfaceinvoke r2.<org.apache.commons.math3.RealFieldElement: double getReal()>();

        $d3 = interfaceinvoke r4.<org.apache.commons.math3.RealFieldElement: double getReal()>();

        $b1 = $d2 cmpg $d3;

        if $b1 > 0 goto label3;

        return r4;

     label3:
        return r2;
    }

    public org.apache.commons.math3.RealFieldElement distanceInf(org.apache.commons.math3.geometry.euclidean.threed.Vector3D)
    {
        org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D r0;
        org.apache.commons.math3.geometry.euclidean.threed.Vector3D r1;
        org.apache.commons.math3.RealFieldElement r2, r3, r4, $r5, $r7, $r9, $r11, $r13, $r15;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8;
        java.lang.Object $r6, $r8, $r10, $r12, $r14, $r16;
        byte $b0, $b1, $b2;

        r0 := @this: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D;

        r1 := @parameter0: org.apache.commons.math3.geometry.euclidean.threed.Vector3D;

        $r5 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement x>;

        $d0 = virtualinvoke r1.<org.apache.commons.math3.geometry.euclidean.threed.Vector3D: double getX()>();

        $r6 = interfaceinvoke $r5.<org.apache.commons.math3.RealFieldElement: java.lang.Object subtract(double)>($d0);

        $r7 = (org.apache.commons.math3.RealFieldElement) $r6;

        $r8 = interfaceinvoke $r7.<org.apache.commons.math3.RealFieldElement: java.lang.Object abs()>();

        r2 = (org.apache.commons.math3.RealFieldElement) $r8;

        $r9 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement y>;

        $d1 = virtualinvoke r1.<org.apache.commons.math3.geometry.euclidean.threed.Vector3D: double getY()>();

        $r10 = interfaceinvoke $r9.<org.apache.commons.math3.RealFieldElement: java.lang.Object subtract(double)>($d1);

        $r11 = (org.apache.commons.math3.RealFieldElement) $r10;

        $r12 = interfaceinvoke $r11.<org.apache.commons.math3.RealFieldElement: java.lang.Object abs()>();

        r3 = (org.apache.commons.math3.RealFieldElement) $r12;

        $r13 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement z>;

        $d2 = virtualinvoke r1.<org.apache.commons.math3.geometry.euclidean.threed.Vector3D: double getZ()>();

        $r14 = interfaceinvoke $r13.<org.apache.commons.math3.RealFieldElement: java.lang.Object subtract(double)>($d2);

        $r15 = (org.apache.commons.math3.RealFieldElement) $r14;

        $r16 = interfaceinvoke $r15.<org.apache.commons.math3.RealFieldElement: java.lang.Object abs()>();

        r4 = (org.apache.commons.math3.RealFieldElement) $r16;

        $d3 = interfaceinvoke r2.<org.apache.commons.math3.RealFieldElement: double getReal()>();

        $d4 = interfaceinvoke r3.<org.apache.commons.math3.RealFieldElement: double getReal()>();

        $b0 = $d3 cmpg $d4;

        if $b0 > 0 goto label2;

        $d7 = interfaceinvoke r3.<org.apache.commons.math3.RealFieldElement: double getReal()>();

        $d8 = interfaceinvoke r4.<org.apache.commons.math3.RealFieldElement: double getReal()>();

        $b2 = $d7 cmpg $d8;

        if $b2 > 0 goto label1;

        return r4;

     label1:
        return r3;

     label2:
        $d5 = interfaceinvoke r2.<org.apache.commons.math3.RealFieldElement: double getReal()>();

        $d6 = interfaceinvoke r4.<org.apache.commons.math3.RealFieldElement: double getReal()>();

        $b1 = $d5 cmpg $d6;

        if $b1 > 0 goto label3;

        return r4;

     label3:
        return r2;
    }

    public org.apache.commons.math3.RealFieldElement distanceSq(org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D)
    {
        org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D r0, r1;
        org.apache.commons.math3.RealFieldElement r2, r3, r4, $r5, $r6, $r8, $r9, $r11, $r12, $r15, $r18, $r21;
        java.lang.Object $r7, $r10, $r13, $r14, $r16, $r17, $r19, $r20;

        r0 := @this: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D;

        r1 := @parameter0: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D;

        $r6 = r1.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement x>;

        $r5 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement x>;

        $r7 = interfaceinvoke $r6.<org.apache.commons.math3.RealFieldElement: java.lang.Object subtract(java.lang.Object)>($r5);

        r2 = (org.apache.commons.math3.RealFieldElement) $r7;

        $r9 = r1.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement y>;

        $r8 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement y>;

        $r10 = interfaceinvoke $r9.<org.apache.commons.math3.RealFieldElement: java.lang.Object subtract(java.lang.Object)>($r8);

        r3 = (org.apache.commons.math3.RealFieldElement) $r10;

        $r12 = r1.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement z>;

        $r11 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement z>;

        $r13 = interfaceinvoke $r12.<org.apache.commons.math3.RealFieldElement: java.lang.Object subtract(java.lang.Object)>($r11);

        r4 = (org.apache.commons.math3.RealFieldElement) $r13;

        $r14 = interfaceinvoke r2.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>(r2);

        $r15 = (org.apache.commons.math3.RealFieldElement) $r14;

        $r16 = interfaceinvoke r3.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>(r3);

        $r17 = interfaceinvoke $r15.<org.apache.commons.math3.RealFieldElement: java.lang.Object add(java.lang.Object)>($r16);

        $r18 = (org.apache.commons.math3.RealFieldElement) $r17;

        $r19 = interfaceinvoke r4.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>(r4);

        $r20 = interfaceinvoke $r18.<org.apache.commons.math3.RealFieldElement: java.lang.Object add(java.lang.Object)>($r19);

        $r21 = (org.apache.commons.math3.RealFieldElement) $r20;

        return $r21;
    }

    public org.apache.commons.math3.RealFieldElement distanceSq(org.apache.commons.math3.geometry.euclidean.threed.Vector3D)
    {
        org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D r0;
        org.apache.commons.math3.geometry.euclidean.threed.Vector3D r1;
        org.apache.commons.math3.RealFieldElement r2, r3, r4, $r5, $r7, $r9, $r12, $r15, $r18;
        double $d0, $d1, $d2;
        java.lang.Object $r6, $r8, $r10, $r11, $r13, $r14, $r16, $r17;

        r0 := @this: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D;

        r1 := @parameter0: org.apache.commons.math3.geometry.euclidean.threed.Vector3D;

        $r5 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement x>;

        $d0 = virtualinvoke r1.<org.apache.commons.math3.geometry.euclidean.threed.Vector3D: double getX()>();

        $r6 = interfaceinvoke $r5.<org.apache.commons.math3.RealFieldElement: java.lang.Object subtract(double)>($d0);

        r2 = (org.apache.commons.math3.RealFieldElement) $r6;

        $r7 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement y>;

        $d1 = virtualinvoke r1.<org.apache.commons.math3.geometry.euclidean.threed.Vector3D: double getY()>();

        $r8 = interfaceinvoke $r7.<org.apache.commons.math3.RealFieldElement: java.lang.Object subtract(double)>($d1);

        r3 = (org.apache.commons.math3.RealFieldElement) $r8;

        $r9 = r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement z>;

        $d2 = virtualinvoke r1.<org.apache.commons.math3.geometry.euclidean.threed.Vector3D: double getZ()>();

        $r10 = interfaceinvoke $r9.<org.apache.commons.math3.RealFieldElement: java.lang.Object subtract(double)>($d2);

        r4 = (org.apache.commons.math3.RealFieldElement) $r10;

        $r11 = interfaceinvoke r2.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>(r2);

        $r12 = (org.apache.commons.math3.RealFieldElement) $r11;

        $r13 = interfaceinvoke r3.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>(r3);

        $r14 = interfaceinvoke $r12.<org.apache.commons.math3.RealFieldElement: java.lang.Object add(java.lang.Object)>($r13);

        $r15 = (org.apache.commons.math3.RealFieldElement) $r14;

        $r16 = interfaceinvoke r4.<org.apache.commons.math3.RealFieldElement: java.lang.Object multiply(java.lang.Object)>(r4);

        $r17 = interfaceinvoke $r15.<org.apache.commons.math3.RealFieldElement: java.lang.Object add(java.lang.Object)>($r16);

        $r18 = (org.apache.commons.math3.RealFieldElement) $r17;

        return $r18;
    }

    public static org.apache.commons.math3.RealFieldElement dotProduct(org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D, org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D)
    {
        org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D r0, r1;
        org.apache.commons.math3.RealFieldElement $r2;

        r0 := @parameter0: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D;

        r1 := @parameter1: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D;

        $r2 = virtualinvoke r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement dotProduct(org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D)>(r1);

        return $r2;
    }

    public static org.apache.commons.math3.RealFieldElement dotProduct(org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D, org.apache.commons.math3.geometry.euclidean.threed.Vector3D)
    {
        org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D r0;
        org.apache.commons.math3.geometry.euclidean.threed.Vector3D r1;
        org.apache.commons.math3.RealFieldElement $r2;

        r0 := @parameter0: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D;

        r1 := @parameter1: org.apache.commons.math3.geometry.euclidean.threed.Vector3D;

        $r2 = virtualinvoke r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement dotProduct(org.apache.commons.math3.geometry.euclidean.threed.Vector3D)>(r1);

        return $r2;
    }

    public static org.apache.commons.math3.RealFieldElement dotProduct(org.apache.commons.math3.geometry.euclidean.threed.Vector3D, org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D)
    {
        org.apache.commons.math3.geometry.euclidean.threed.Vector3D r0;
        org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D r1;
        org.apache.commons.math3.RealFieldElement $r2;

        r0 := @parameter0: org.apache.commons.math3.geometry.euclidean.threed.Vector3D;

        r1 := @parameter1: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D;

        $r2 = virtualinvoke r1.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement dotProduct(org.apache.commons.math3.geometry.euclidean.threed.Vector3D)>(r0);

        return $r2;
    }

    public static org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D crossProduct(org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D, org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D)
    {
        org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D r0, r1, $r2;

        r0 := @parameter0: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D;

        r1 := @parameter1: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D;

        $r2 = virtualinvoke r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D crossProduct(org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D)>(r1);

        return $r2;
    }

    public static org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D crossProduct(org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D, org.apache.commons.math3.geometry.euclidean.threed.Vector3D)
    {
        org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D r0, $r2;
        org.apache.commons.math3.geometry.euclidean.threed.Vector3D r1;

        r0 := @parameter0: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D;

        r1 := @parameter1: org.apache.commons.math3.geometry.euclidean.threed.Vector3D;

        $r2 = virtualinvoke r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D crossProduct(org.apache.commons.math3.geometry.euclidean.threed.Vector3D)>(r1);

        return $r2;
    }

    public static org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D crossProduct(org.apache.commons.math3.geometry.euclidean.threed.Vector3D, org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D)
    {
        org.apache.commons.math3.geometry.euclidean.threed.Vector3D r0;
        org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D r1, $r2;
        org.apache.commons.math3.RealFieldElement $r3, $r4, $r5, $r7, $r8, $r9, $r10, $r12, $r13, $r14, $r15, $r17;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8;
        java.lang.Object $r6, $r11, $r16;

        r0 := @parameter0: org.apache.commons.math3.geometry.euclidean.threed.Vector3D;

        r1 := @parameter1: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D;

        $r2 = new org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D;

        $r3 = r1.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement x>;

        $d0 = virtualinvoke r0.<org.apache.commons.math3.geometry.euclidean.threed.Vector3D: double getY()>();

        $r4 = r1.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement z>;

        $d1 = virtualinvoke r0.<org.apache.commons.math3.geometry.euclidean.threed.Vector3D: double getZ()>();

        $d2 = neg $d1;

        $r5 = r1.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement y>;

        $r6 = interfaceinvoke $r3.<org.apache.commons.math3.RealFieldElement: java.lang.Object linearCombination(double,java.lang.Object,double,java.lang.Object)>($d0, $r4, $d2, $r5);

        $r7 = (org.apache.commons.math3.RealFieldElement) $r6;

        $r8 = r1.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement y>;

        $d3 = virtualinvoke r0.<org.apache.commons.math3.geometry.euclidean.threed.Vector3D: double getZ()>();

        $r9 = r1.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement x>;

        $d4 = virtualinvoke r0.<org.apache.commons.math3.geometry.euclidean.threed.Vector3D: double getX()>();

        $d5 = neg $d4;

        $r10 = r1.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement z>;

        $r11 = interfaceinvoke $r8.<org.apache.commons.math3.RealFieldElement: java.lang.Object linearCombination(double,java.lang.Object,double,java.lang.Object)>($d3, $r9, $d5, $r10);

        $r12 = (org.apache.commons.math3.RealFieldElement) $r11;

        $r13 = r1.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement z>;

        $d6 = virtualinvoke r0.<org.apache.commons.math3.geometry.euclidean.threed.Vector3D: double getX()>();

        $r14 = r1.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement y>;

        $d7 = virtualinvoke r0.<org.apache.commons.math3.geometry.euclidean.threed.Vector3D: double getY()>();

        $d8 = neg $d7;

        $r15 = r1.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement x>;

        $r16 = interfaceinvoke $r13.<org.apache.commons.math3.RealFieldElement: java.lang.Object linearCombination(double,java.lang.Object,double,java.lang.Object)>($d6, $r14, $d8, $r15);

        $r17 = (org.apache.commons.math3.RealFieldElement) $r16;

        specialinvoke $r2.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: void <init>(org.apache.commons.math3.RealFieldElement,org.apache.commons.math3.RealFieldElement,org.apache.commons.math3.RealFieldElement)>($r7, $r12, $r17);

        return $r2;
    }

    public static org.apache.commons.math3.RealFieldElement distance1(org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D, org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D)
    {
        org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D r0, r1;
        org.apache.commons.math3.RealFieldElement $r2;

        r0 := @parameter0: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D;

        r1 := @parameter1: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D;

        $r2 = virtualinvoke r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement distance1(org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D)>(r1);

        return $r2;
    }

    public static org.apache.commons.math3.RealFieldElement distance1(org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D, org.apache.commons.math3.geometry.euclidean.threed.Vector3D)
    {
        org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D r0;
        org.apache.commons.math3.geometry.euclidean.threed.Vector3D r1;
        org.apache.commons.math3.RealFieldElement $r2;

        r0 := @parameter0: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D;

        r1 := @parameter1: org.apache.commons.math3.geometry.euclidean.threed.Vector3D;

        $r2 = virtualinvoke r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement distance1(org.apache.commons.math3.geometry.euclidean.threed.Vector3D)>(r1);

        return $r2;
    }

    public static org.apache.commons.math3.RealFieldElement distance1(org.apache.commons.math3.geometry.euclidean.threed.Vector3D, org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D)
    {
        org.apache.commons.math3.geometry.euclidean.threed.Vector3D r0;
        org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D r1;
        org.apache.commons.math3.RealFieldElement $r2;

        r0 := @parameter0: org.apache.commons.math3.geometry.euclidean.threed.Vector3D;

        r1 := @parameter1: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D;

        $r2 = virtualinvoke r1.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement distance1(org.apache.commons.math3.geometry.euclidean.threed.Vector3D)>(r0);

        return $r2;
    }

    public static org.apache.commons.math3.RealFieldElement distance(org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D, org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D)
    {
        org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D r0, r1;
        org.apache.commons.math3.RealFieldElement $r2;

        r0 := @parameter0: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D;

        r1 := @parameter1: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D;

        $r2 = virtualinvoke r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement distance(org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D)>(r1);

        return $r2;
    }

    public static org.apache.commons.math3.RealFieldElement distance(org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D, org.apache.commons.math3.geometry.euclidean.threed.Vector3D)
    {
        org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D r0;
        org.apache.commons.math3.geometry.euclidean.threed.Vector3D r1;
        org.apache.commons.math3.RealFieldElement $r2;

        r0 := @parameter0: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D;

        r1 := @parameter1: org.apache.commons.math3.geometry.euclidean.threed.Vector3D;

        $r2 = virtualinvoke r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement distance(org.apache.commons.math3.geometry.euclidean.threed.Vector3D)>(r1);

        return $r2;
    }

    public static org.apache.commons.math3.RealFieldElement distance(org.apache.commons.math3.geometry.euclidean.threed.Vector3D, org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D)
    {
        org.apache.commons.math3.geometry.euclidean.threed.Vector3D r0;
        org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D r1;
        org.apache.commons.math3.RealFieldElement $r2;

        r0 := @parameter0: org.apache.commons.math3.geometry.euclidean.threed.Vector3D;

        r1 := @parameter1: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D;

        $r2 = virtualinvoke r1.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement distance(org.apache.commons.math3.geometry.euclidean.threed.Vector3D)>(r0);

        return $r2;
    }

    public static org.apache.commons.math3.RealFieldElement distanceInf(org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D, org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D)
    {
        org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D r0, r1;
        org.apache.commons.math3.RealFieldElement $r2;

        r0 := @parameter0: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D;

        r1 := @parameter1: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D;

        $r2 = virtualinvoke r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement distanceInf(org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D)>(r1);

        return $r2;
    }

    public static org.apache.commons.math3.RealFieldElement distanceInf(org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D, org.apache.commons.math3.geometry.euclidean.threed.Vector3D)
    {
        org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D r0;
        org.apache.commons.math3.geometry.euclidean.threed.Vector3D r1;
        org.apache.commons.math3.RealFieldElement $r2;

        r0 := @parameter0: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D;

        r1 := @parameter1: org.apache.commons.math3.geometry.euclidean.threed.Vector3D;

        $r2 = virtualinvoke r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement distanceInf(org.apache.commons.math3.geometry.euclidean.threed.Vector3D)>(r1);

        return $r2;
    }

    public static org.apache.commons.math3.RealFieldElement distanceInf(org.apache.commons.math3.geometry.euclidean.threed.Vector3D, org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D)
    {
        org.apache.commons.math3.geometry.euclidean.threed.Vector3D r0;
        org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D r1;
        org.apache.commons.math3.RealFieldElement $r2;

        r0 := @parameter0: org.apache.commons.math3.geometry.euclidean.threed.Vector3D;

        r1 := @parameter1: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D;

        $r2 = virtualinvoke r1.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement distanceInf(org.apache.commons.math3.geometry.euclidean.threed.Vector3D)>(r0);

        return $r2;
    }

    public static org.apache.commons.math3.RealFieldElement distanceSq(org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D, org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D)
    {
        org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D r0, r1;
        org.apache.commons.math3.RealFieldElement $r2;

        r0 := @parameter0: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D;

        r1 := @parameter1: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D;

        $r2 = virtualinvoke r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement distanceSq(org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D)>(r1);

        return $r2;
    }

    public static org.apache.commons.math3.RealFieldElement distanceSq(org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D, org.apache.commons.math3.geometry.euclidean.threed.Vector3D)
    {
        org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D r0;
        org.apache.commons.math3.geometry.euclidean.threed.Vector3D r1;
        org.apache.commons.math3.RealFieldElement $r2;

        r0 := @parameter0: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D;

        r1 := @parameter1: org.apache.commons.math3.geometry.euclidean.threed.Vector3D;

        $r2 = virtualinvoke r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement distanceSq(org.apache.commons.math3.geometry.euclidean.threed.Vector3D)>(r1);

        return $r2;
    }

    public static org.apache.commons.math3.RealFieldElement distanceSq(org.apache.commons.math3.geometry.euclidean.threed.Vector3D, org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D)
    {
        org.apache.commons.math3.geometry.euclidean.threed.Vector3D r0;
        org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D r1;
        org.apache.commons.math3.RealFieldElement $r2;

        r0 := @parameter0: org.apache.commons.math3.geometry.euclidean.threed.Vector3D;

        r1 := @parameter1: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D;

        $r2 = virtualinvoke r1.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.RealFieldElement distanceSq(org.apache.commons.math3.geometry.euclidean.threed.Vector3D)>(r0);

        return $r2;
    }

    public java.lang.String toString()
    {
        org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D r0;
        org.apache.commons.math3.geometry.euclidean.threed.Vector3DFormat $r1;
        org.apache.commons.math3.geometry.euclidean.threed.Vector3D $r2;
        java.lang.String $r3;

        r0 := @this: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D;

        $r1 = staticinvoke <org.apache.commons.math3.geometry.euclidean.threed.Vector3DFormat: org.apache.commons.math3.geometry.euclidean.threed.Vector3DFormat getInstance()>();

        $r2 = virtualinvoke r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.geometry.euclidean.threed.Vector3D toVector3D()>();

        $r3 = virtualinvoke $r1.<org.apache.commons.math3.geometry.euclidean.threed.Vector3DFormat: java.lang.String format(org.apache.commons.math3.geometry.Vector)>($r2);

        return $r3;
    }

    public java.lang.String toString(java.text.NumberFormat)
    {
        org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D r0;
        java.text.NumberFormat r1;
        org.apache.commons.math3.geometry.euclidean.threed.Vector3DFormat $r2;
        org.apache.commons.math3.geometry.euclidean.threed.Vector3D $r3;
        java.lang.String $r4;

        r0 := @this: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D;

        r1 := @parameter0: java.text.NumberFormat;

        $r2 = new org.apache.commons.math3.geometry.euclidean.threed.Vector3DFormat;

        specialinvoke $r2.<org.apache.commons.math3.geometry.euclidean.threed.Vector3DFormat: void <init>(java.text.NumberFormat)>(r1);

        $r3 = virtualinvoke r0.<org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.geometry.euclidean.threed.Vector3D toVector3D()>();

        $r4 = virtualinvoke $r2.<org.apache.commons.math3.geometry.euclidean.threed.Vector3DFormat: java.lang.String format(org.apache.commons.math3.geometry.Vector)>($r3);

        return $r4;
    }

    public static void <clinit>()
    {
        <org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: long serialVersionUID> = 20130224L;

        return;
    }
}
