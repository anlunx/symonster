public class org.apache.commons.math.optimization.fitting.GaussianFunction extends java.lang.Object implements org.apache.commons.math.analysis.DifferentiableUnivariateRealFunction, java.io.Serializable
{
    private static final long serialVersionUID;
    private final double a;
    private final double b;
    private final double c;
    private final double d;

    public void <init>(double, double, double, double)
    {
        org.apache.commons.math.optimization.fitting.GaussianFunction r0;
        double d0, d1, d2, d3;
        byte $b0;
        org.apache.commons.math.exception.ZeroException $r1;

        r0 := @this: org.apache.commons.math.optimization.fitting.GaussianFunction;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        d2 := @parameter2: double;

        d3 := @parameter3: double;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $b0 = d3 cmpl 0.0;

        if $b0 != 0 goto label1;

        $r1 = new org.apache.commons.math.exception.ZeroException;

        specialinvoke $r1.<org.apache.commons.math.exception.ZeroException: void <init>()>();

        throw $r1;

     label1:
        r0.<org.apache.commons.math.optimization.fitting.GaussianFunction: double a> = d0;

        r0.<org.apache.commons.math.optimization.fitting.GaussianFunction: double b> = d1;

        r0.<org.apache.commons.math.optimization.fitting.GaussianFunction: double c> = d2;

        r0.<org.apache.commons.math.optimization.fitting.GaussianFunction: double d> = d3;

        return;
    }

    public void <init>(double[])
    {
        org.apache.commons.math.optimization.fitting.GaussianFunction r0;
        double[] r1;
        int $i0, $i2;
        double $d0, $d1, $d2, $d3, $d4;
        byte $b1;
        org.apache.commons.math.exception.ZeroException $r2;
        org.apache.commons.math.exception.DimensionMismatchException $r3;
        org.apache.commons.math.exception.NullArgumentException $r4;
        org.apache.commons.math.exception.util.LocalizedFormats $r5;

        r0 := @this: org.apache.commons.math.optimization.fitting.GaussianFunction;

        r1 := @parameter0: double[];

        specialinvoke r0.<java.lang.Object: void <init>()>();

        if r1 != null goto label1;

        $r4 = new org.apache.commons.math.exception.NullArgumentException;

        $r5 = <org.apache.commons.math.exception.util.LocalizedFormats: org.apache.commons.math.exception.util.LocalizedFormats INPUT_ARRAY>;

        specialinvoke $r4.<org.apache.commons.math.exception.NullArgumentException: void <init>(org.apache.commons.math.exception.util.Localizable)>($r5);

        throw $r4;

     label1:
        $i0 = lengthof r1;

        if $i0 == 4 goto label2;

        $r3 = new org.apache.commons.math.exception.DimensionMismatchException;

        $i2 = lengthof r1;

        specialinvoke $r3.<org.apache.commons.math.exception.DimensionMismatchException: void <init>(int,int)>(4, $i2);

        throw $r3;

     label2:
        $d0 = r1[3];

        $b1 = $d0 cmpl 0.0;

        if $b1 != 0 goto label3;

        $r2 = new org.apache.commons.math.exception.ZeroException;

        specialinvoke $r2.<org.apache.commons.math.exception.ZeroException: void <init>()>();

        throw $r2;

     label3:
        $d1 = r1[0];

        r0.<org.apache.commons.math.optimization.fitting.GaussianFunction: double a> = $d1;

        $d2 = r1[1];

        r0.<org.apache.commons.math.optimization.fitting.GaussianFunction: double b> = $d2;

        $d3 = r1[2];

        r0.<org.apache.commons.math.optimization.fitting.GaussianFunction: double c> = $d3;

        $d4 = r1[3];

        r0.<org.apache.commons.math.optimization.fitting.GaussianFunction: double d> = $d4;

        return;
    }

    public org.apache.commons.math.analysis.UnivariateRealFunction derivative()
    {
        org.apache.commons.math.optimization.fitting.GaussianFunction r0;
        org.apache.commons.math.optimization.fitting.GaussianDerivativeFunction $r1;
        double $d0, $d1, $d2;

        r0 := @this: org.apache.commons.math.optimization.fitting.GaussianFunction;

        $r1 = new org.apache.commons.math.optimization.fitting.GaussianDerivativeFunction;

        $d2 = r0.<org.apache.commons.math.optimization.fitting.GaussianFunction: double b>;

        $d1 = r0.<org.apache.commons.math.optimization.fitting.GaussianFunction: double c>;

        $d0 = r0.<org.apache.commons.math.optimization.fitting.GaussianFunction: double d>;

        specialinvoke $r1.<org.apache.commons.math.optimization.fitting.GaussianDerivativeFunction: void <init>(double,double,double)>($d2, $d1, $d0);

        return $r1;
    }

    public double value(double)
    {
        org.apache.commons.math.optimization.fitting.GaussianFunction r0;
        double d0, d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14;

        r0 := @this: org.apache.commons.math.optimization.fitting.GaussianFunction;

        d0 := @parameter0: double;

        $d2 = r0.<org.apache.commons.math.optimization.fitting.GaussianFunction: double c>;

        d1 = d0 - $d2;

        $d10 = r0.<org.apache.commons.math.optimization.fitting.GaussianFunction: double a>;

        $d11 = r0.<org.apache.commons.math.optimization.fitting.GaussianFunction: double b>;

        $d3 = neg d1;

        $d8 = $d3 * d1;

        $d5 = r0.<org.apache.commons.math.optimization.fitting.GaussianFunction: double d>;

        $d4 = r0.<org.apache.commons.math.optimization.fitting.GaussianFunction: double d>;

        $d6 = $d5 * $d4;

        $d7 = 2.0 * $d6;

        $d9 = $d8 / $d7;

        $d12 = staticinvoke <java.lang.Math: double exp(double)>($d9);

        $d13 = $d11 * $d12;

        $d14 = $d10 + $d13;

        return $d14;
    }

    public double getA()
    {
        org.apache.commons.math.optimization.fitting.GaussianFunction r0;
        double $d0;

        r0 := @this: org.apache.commons.math.optimization.fitting.GaussianFunction;

        $d0 = r0.<org.apache.commons.math.optimization.fitting.GaussianFunction: double a>;

        return $d0;
    }

    public double getB()
    {
        org.apache.commons.math.optimization.fitting.GaussianFunction r0;
        double $d0;

        r0 := @this: org.apache.commons.math.optimization.fitting.GaussianFunction;

        $d0 = r0.<org.apache.commons.math.optimization.fitting.GaussianFunction: double b>;

        return $d0;
    }

    public double getC()
    {
        org.apache.commons.math.optimization.fitting.GaussianFunction r0;
        double $d0;

        r0 := @this: org.apache.commons.math.optimization.fitting.GaussianFunction;

        $d0 = r0.<org.apache.commons.math.optimization.fitting.GaussianFunction: double c>;

        return $d0;
    }

    public double getD()
    {
        org.apache.commons.math.optimization.fitting.GaussianFunction r0;
        double $d0;

        r0 := @this: org.apache.commons.math.optimization.fitting.GaussianFunction;

        $d0 = r0.<org.apache.commons.math.optimization.fitting.GaussianFunction: double d>;

        return $d0;
    }

    public static void <clinit>()
    {
        <org.apache.commons.math.optimization.fitting.GaussianFunction: long serialVersionUID> = -3195385616125629512L;

        return;
    }
}
