public class com.opengamma.analytics.financial.model.volatility.smile.fitting.EuropeanOptionMarketData extends java.lang.Object
{
    private final double _fwd;
    private final double _strike;
    private final double _df;
    private final double _t;
    private final double _vol;
    private final boolean _isCall;
    private double _price;
    private boolean _priceSet;

    public void <init>(double, double, double, double, boolean, double)
    {
        com.opengamma.analytics.financial.model.volatility.smile.fitting.EuropeanOptionMarketData r0;
        double d0, d1, d2, d3, d4;
        boolean z0, $z1, $z2, $z3, $z4;
        byte $b0, $b1, $b2, $b3;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.smile.fitting.EuropeanOptionMarketData;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        d2 := @parameter2: double;

        d3 := @parameter3: double;

        z0 := @parameter4: boolean;

        d4 := @parameter5: double;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $b0 = d0 cmpl 0.0;

        if $b0 <= 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        staticinvoke <org.apache.commons.lang.Validate: void isTrue(boolean,java.lang.String)>($z1, "need forward > 0");

        $b1 = d1 cmpl 0.0;

        if $b1 < 0 goto label3;

        $z2 = 1;

        goto label4;

     label3:
        $z2 = 0;

     label4:
        staticinvoke <org.apache.commons.lang.Validate: void isTrue(boolean,java.lang.String)>($z2, "need forward >= 0");

        $b2 = d3 cmpl 0.0;

        if $b2 < 0 goto label5;

        $z3 = 1;

        goto label6;

     label5:
        $z3 = 0;

     label6:
        staticinvoke <org.apache.commons.lang.Validate: void isTrue(boolean,java.lang.String)>($z3, "need timeToExpiry >= 0");

        $b3 = d4 cmpl 0.0;

        if $b3 < 0 goto label7;

        $z4 = 1;

        goto label8;

     label7:
        $z4 = 0;

     label8:
        staticinvoke <org.apache.commons.lang.Validate: void isTrue(boolean,java.lang.String)>($z4, "need impliedVol >= 0");

        r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.EuropeanOptionMarketData: double _fwd> = d0;

        r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.EuropeanOptionMarketData: double _strike> = d1;

        r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.EuropeanOptionMarketData: double _df> = d2;

        r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.EuropeanOptionMarketData: double _t> = d3;

        r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.EuropeanOptionMarketData: double _vol> = d4;

        r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.EuropeanOptionMarketData: boolean _isCall> = z0;

        return;
    }

    protected double getForward()
    {
        com.opengamma.analytics.financial.model.volatility.smile.fitting.EuropeanOptionMarketData r0;
        double $d0;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.smile.fitting.EuropeanOptionMarketData;

        $d0 = r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.EuropeanOptionMarketData: double _fwd>;

        return $d0;
    }

    protected double getStrike()
    {
        com.opengamma.analytics.financial.model.volatility.smile.fitting.EuropeanOptionMarketData r0;
        double $d0;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.smile.fitting.EuropeanOptionMarketData;

        $d0 = r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.EuropeanOptionMarketData: double _strike>;

        return $d0;
    }

    protected double getDiscountFactor()
    {
        com.opengamma.analytics.financial.model.volatility.smile.fitting.EuropeanOptionMarketData r0;
        double $d0;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.smile.fitting.EuropeanOptionMarketData;

        $d0 = r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.EuropeanOptionMarketData: double _df>;

        return $d0;
    }

    protected double getTimeToExpiry()
    {
        com.opengamma.analytics.financial.model.volatility.smile.fitting.EuropeanOptionMarketData r0;
        double $d0;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.smile.fitting.EuropeanOptionMarketData;

        $d0 = r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.EuropeanOptionMarketData: double _t>;

        return $d0;
    }

    protected double getImpliedVolatility()
    {
        com.opengamma.analytics.financial.model.volatility.smile.fitting.EuropeanOptionMarketData r0;
        double $d0;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.smile.fitting.EuropeanOptionMarketData;

        $d0 = r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.EuropeanOptionMarketData: double _vol>;

        return $d0;
    }

    protected boolean isCall()
    {
        com.opengamma.analytics.financial.model.volatility.smile.fitting.EuropeanOptionMarketData r0;
        boolean $z0;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.smile.fitting.EuropeanOptionMarketData;

        $z0 = r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.EuropeanOptionMarketData: boolean _isCall>;

        return $z0;
    }

    public double getPrice()
    {
        com.opengamma.analytics.financial.model.volatility.smile.fitting.EuropeanOptionMarketData r0;
        boolean $z0, $z1;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.smile.fitting.EuropeanOptionMarketData;

        $z0 = r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.EuropeanOptionMarketData: boolean _priceSet>;

        if $z0 != 0 goto label1;

        $d5 = r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.EuropeanOptionMarketData: double _df>;

        $d4 = r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.EuropeanOptionMarketData: double _fwd>;

        $d3 = r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.EuropeanOptionMarketData: double _strike>;

        $d2 = r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.EuropeanOptionMarketData: double _t>;

        $d1 = r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.EuropeanOptionMarketData: double _vol>;

        $z1 = r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.EuropeanOptionMarketData: boolean _isCall>;

        $d6 = staticinvoke <com.opengamma.analytics.financial.model.volatility.BlackFormulaRepository: double price(double,double,double,double,boolean)>($d4, $d3, $d2, $d1, $z1);

        $d7 = $d5 * $d6;

        r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.EuropeanOptionMarketData: double _price> = $d7;

        r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.EuropeanOptionMarketData: boolean _priceSet> = 1;

     label1:
        $d0 = r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.EuropeanOptionMarketData: double _price>;

        return $d0;
    }

    public com.opengamma.analytics.financial.model.volatility.smile.fitting.EuropeanOptionMarketData withForward(double)
    {
        com.opengamma.analytics.financial.model.volatility.smile.fitting.EuropeanOptionMarketData r0, $r1;
        double d0, $d1, $d2, $d3, $d4;
        boolean $z0;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.smile.fitting.EuropeanOptionMarketData;

        d0 := @parameter0: double;

        $r1 = new com.opengamma.analytics.financial.model.volatility.smile.fitting.EuropeanOptionMarketData;

        $d4 = r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.EuropeanOptionMarketData: double _strike>;

        $d3 = r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.EuropeanOptionMarketData: double _df>;

        $d2 = r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.EuropeanOptionMarketData: double _t>;

        $z0 = r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.EuropeanOptionMarketData: boolean _isCall>;

        $d1 = r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.EuropeanOptionMarketData: double _vol>;

        specialinvoke $r1.<com.opengamma.analytics.financial.model.volatility.smile.fitting.EuropeanOptionMarketData: void <init>(double,double,double,double,boolean,double)>(d0, $d4, $d3, $d2, $z0, $d1);

        return $r1;
    }

    public com.opengamma.analytics.financial.model.volatility.smile.fitting.EuropeanOptionMarketData withStrike(double)
    {
        com.opengamma.analytics.financial.model.volatility.smile.fitting.EuropeanOptionMarketData r0, $r1;
        double d0, $d1, $d2, $d3, $d4;
        boolean $z0;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.smile.fitting.EuropeanOptionMarketData;

        d0 := @parameter0: double;

        $r1 = new com.opengamma.analytics.financial.model.volatility.smile.fitting.EuropeanOptionMarketData;

        $d4 = r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.EuropeanOptionMarketData: double _fwd>;

        $d3 = r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.EuropeanOptionMarketData: double _df>;

        $d2 = r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.EuropeanOptionMarketData: double _t>;

        $z0 = r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.EuropeanOptionMarketData: boolean _isCall>;

        $d1 = r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.EuropeanOptionMarketData: double _vol>;

        specialinvoke $r1.<com.opengamma.analytics.financial.model.volatility.smile.fitting.EuropeanOptionMarketData: void <init>(double,double,double,double,boolean,double)>($d4, d0, $d3, $d2, $z0, $d1);

        return $r1;
    }

    public com.opengamma.analytics.financial.model.volatility.smile.fitting.EuropeanOptionMarketData withDiscountFactor(double)
    {
        com.opengamma.analytics.financial.model.volatility.smile.fitting.EuropeanOptionMarketData r0, $r1;
        double d0, $d1, $d2, $d3, $d4;
        boolean $z0;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.smile.fitting.EuropeanOptionMarketData;

        d0 := @parameter0: double;

        $r1 = new com.opengamma.analytics.financial.model.volatility.smile.fitting.EuropeanOptionMarketData;

        $d4 = r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.EuropeanOptionMarketData: double _fwd>;

        $d3 = r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.EuropeanOptionMarketData: double _strike>;

        $d2 = r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.EuropeanOptionMarketData: double _t>;

        $z0 = r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.EuropeanOptionMarketData: boolean _isCall>;

        $d1 = r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.EuropeanOptionMarketData: double _vol>;

        specialinvoke $r1.<com.opengamma.analytics.financial.model.volatility.smile.fitting.EuropeanOptionMarketData: void <init>(double,double,double,double,boolean,double)>($d4, $d3, d0, $d2, $z0, $d1);

        return $r1;
    }

    public com.opengamma.analytics.financial.model.volatility.smile.fitting.EuropeanOptionMarketData withTimeToExpiry(double)
    {
        com.opengamma.analytics.financial.model.volatility.smile.fitting.EuropeanOptionMarketData r0, $r1;
        double d0, $d1, $d2, $d3, $d4;
        boolean $z0;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.smile.fitting.EuropeanOptionMarketData;

        d0 := @parameter0: double;

        $r1 = new com.opengamma.analytics.financial.model.volatility.smile.fitting.EuropeanOptionMarketData;

        $d4 = r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.EuropeanOptionMarketData: double _fwd>;

        $d3 = r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.EuropeanOptionMarketData: double _strike>;

        $d2 = r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.EuropeanOptionMarketData: double _df>;

        $z0 = r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.EuropeanOptionMarketData: boolean _isCall>;

        $d1 = r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.EuropeanOptionMarketData: double _vol>;

        specialinvoke $r1.<com.opengamma.analytics.financial.model.volatility.smile.fitting.EuropeanOptionMarketData: void <init>(double,double,double,double,boolean,double)>($d4, $d3, $d2, d0, $z0, $d1);

        return $r1;
    }

    public com.opengamma.analytics.financial.model.volatility.smile.fitting.EuropeanOptionMarketData withIsCall(boolean)
    {
        com.opengamma.analytics.financial.model.volatility.smile.fitting.EuropeanOptionMarketData r0, $r1;
        boolean z0;
        double $d0, $d1, $d2, $d3, $d4;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.smile.fitting.EuropeanOptionMarketData;

        z0 := @parameter0: boolean;

        $r1 = new com.opengamma.analytics.financial.model.volatility.smile.fitting.EuropeanOptionMarketData;

        $d4 = r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.EuropeanOptionMarketData: double _fwd>;

        $d3 = r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.EuropeanOptionMarketData: double _strike>;

        $d2 = r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.EuropeanOptionMarketData: double _df>;

        $d1 = r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.EuropeanOptionMarketData: double _t>;

        $d0 = r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.EuropeanOptionMarketData: double _vol>;

        specialinvoke $r1.<com.opengamma.analytics.financial.model.volatility.smile.fitting.EuropeanOptionMarketData: void <init>(double,double,double,double,boolean,double)>($d4, $d3, $d2, $d1, z0, $d0);

        return $r1;
    }

    public com.opengamma.analytics.financial.model.volatility.smile.fitting.EuropeanOptionMarketData withImpliedVolatility(double)
    {
        com.opengamma.analytics.financial.model.volatility.smile.fitting.EuropeanOptionMarketData r0, $r1;
        double d0, $d1, $d2, $d3, $d4;
        boolean $z0;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.smile.fitting.EuropeanOptionMarketData;

        d0 := @parameter0: double;

        $r1 = new com.opengamma.analytics.financial.model.volatility.smile.fitting.EuropeanOptionMarketData;

        $d4 = r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.EuropeanOptionMarketData: double _fwd>;

        $d3 = r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.EuropeanOptionMarketData: double _strike>;

        $d2 = r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.EuropeanOptionMarketData: double _df>;

        $d1 = r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.EuropeanOptionMarketData: double _t>;

        $z0 = r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.EuropeanOptionMarketData: boolean _isCall>;

        specialinvoke $r1.<com.opengamma.analytics.financial.model.volatility.smile.fitting.EuropeanOptionMarketData: void <init>(double,double,double,double,boolean,double)>($d4, $d3, $d2, $d1, $z0, d0);

        return $r1;
    }

    public com.opengamma.analytics.financial.model.volatility.smile.fitting.EuropeanOptionMarketData withPrice(double)
    {
        com.opengamma.analytics.financial.model.volatility.smile.fitting.EuropeanOptionMarketData r0, $r2;
        double d0, d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10;
        boolean $z0, $z1;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.smile.fitting.EuropeanOptionMarketData;

        d0 := @parameter0: double;

        $d2 = r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.EuropeanOptionMarketData: double _df>;

        $d6 = d0 / $d2;

        $d5 = r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.EuropeanOptionMarketData: double _fwd>;

        $d4 = r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.EuropeanOptionMarketData: double _strike>;

        $d3 = r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.EuropeanOptionMarketData: double _t>;

        $z0 = r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.EuropeanOptionMarketData: boolean _isCall>;

        d1 = staticinvoke <com.opengamma.analytics.financial.model.volatility.BlackFormulaRepository: double impliedVolatility(double,double,double,double,boolean)>($d6, $d5, $d4, $d3, $z0);

        $r2 = new com.opengamma.analytics.financial.model.volatility.smile.fitting.EuropeanOptionMarketData;

        $d10 = r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.EuropeanOptionMarketData: double _fwd>;

        $d9 = r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.EuropeanOptionMarketData: double _strike>;

        $d8 = r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.EuropeanOptionMarketData: double _df>;

        $d7 = r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.EuropeanOptionMarketData: double _t>;

        $z1 = r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.EuropeanOptionMarketData: boolean _isCall>;

        specialinvoke $r2.<com.opengamma.analytics.financial.model.volatility.smile.fitting.EuropeanOptionMarketData: void <init>(double,double,double,double,boolean,double)>($d10, $d9, $d8, $d7, $z1, d1);

        $r2.<com.opengamma.analytics.financial.model.volatility.smile.fitting.EuropeanOptionMarketData: double _price> = d0;

        $r2.<com.opengamma.analytics.financial.model.volatility.smile.fitting.EuropeanOptionMarketData: boolean _priceSet> = 1;

        return $r2;
    }
}
