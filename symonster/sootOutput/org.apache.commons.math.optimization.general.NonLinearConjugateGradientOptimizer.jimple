public class org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizer extends org.apache.commons.math.optimization.general.AbstractScalarDifferentiableOptimizer
{
    private final org.apache.commons.math.optimization.general.ConjugateGradientFormula updateFormula;
    private org.apache.commons.math.optimization.general.Preconditioner preconditioner;
    private org.apache.commons.math.analysis.solvers.UnivariateRealSolver solver;
    private double initialStep;

    public void <init>(org.apache.commons.math.optimization.general.ConjugateGradientFormula)
    {
        org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizer r0;
        org.apache.commons.math.optimization.general.ConjugateGradientFormula r1;

        r0 := @this: org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizer;

        r1 := @parameter0: org.apache.commons.math.optimization.general.ConjugateGradientFormula;

        specialinvoke r0.<org.apache.commons.math.optimization.general.AbstractScalarDifferentiableOptimizer: void <init>()>();

        r0.<org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizer: org.apache.commons.math.optimization.general.ConjugateGradientFormula updateFormula> = r1;

        r0.<org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizer: org.apache.commons.math.optimization.general.Preconditioner preconditioner> = null;

        r0.<org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizer: org.apache.commons.math.analysis.solvers.UnivariateRealSolver solver> = null;

        r0.<org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizer: double initialStep> = 1.0;

        return;
    }

    public void setPreconditioner(org.apache.commons.math.optimization.general.Preconditioner)
    {
        org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizer r0;
        org.apache.commons.math.optimization.general.Preconditioner r1;

        r0 := @this: org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizer;

        r1 := @parameter0: org.apache.commons.math.optimization.general.Preconditioner;

        r0.<org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizer: org.apache.commons.math.optimization.general.Preconditioner preconditioner> = r1;

        return;
    }

    public void setLineSearchSolver(org.apache.commons.math.analysis.solvers.UnivariateRealSolver)
    {
        org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizer r0;
        org.apache.commons.math.analysis.solvers.UnivariateRealSolver r1;

        r0 := @this: org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizer;

        r1 := @parameter0: org.apache.commons.math.analysis.solvers.UnivariateRealSolver;

        r0.<org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizer: org.apache.commons.math.analysis.solvers.UnivariateRealSolver solver> = r1;

        return;
    }

    public void setInitialStep(double)
    {
        org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizer r0;
        double d0;
        byte $b0;

        r0 := @this: org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizer;

        d0 := @parameter0: double;

        $b0 = d0 cmpg 0.0;

        if $b0 > 0 goto label1;

        r0.<org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizer: double initialStep> = 1.0;

        goto label2;

     label1:
        r0.<org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizer: double initialStep> = d0;

     label2:
        return;
    }

    protected org.apache.commons.math.optimization.RealPointValuePair doOptimize() throws org.apache.commons.math.FunctionEvaluationException, org.apache.commons.math.optimization.OptimizationException, java.lang.IllegalArgumentException
    {
        org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizer r0;
        double d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d21, $d22, $d23, $d24, $d25, d26, d28, d29, d30, d31, d32;
        org.apache.commons.math.optimization.RealPointValuePair r1, $r13, r35;
        double[] r2, $r5, $r6, $r9, $r12, $r14, $r17, $r18, $r21, $r26, r32, r33, r34, r36, r38;
        org.apache.commons.math.optimization.general.Preconditioner $r3, $r10, $r22;
        org.apache.commons.math.analysis.solvers.UnivariateRealSolver $r4, $r16;
        org.apache.commons.math.optimization.GoalType $r7, $r8, $r19, $r20;
        java.lang.Object $r11, $r25;
        org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizer$LineSearchFunction $r15;
        int $i0, $i1, $i2, $i3, $i5, i6, i7, i8, i9, i10, i11, i12, i13, i14, i15;
        org.apache.commons.math.optimization.general.ConjugateGradientFormula $r23, $r24;
        byte $b4;
        org.apache.commons.math.optimization.RealConvergenceChecker $r27;
        boolean $z0;
        org.apache.commons.math.analysis.solvers.BrentSolver $r28;
        org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizer$IdentityPreconditioner $r29;
        org.apache.commons.math.ConvergenceException $r30;
        org.apache.commons.math.optimization.OptimizationException $r31;

        r0 := @this: org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizer;

     label01:
        $r3 = r0.<org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizer: org.apache.commons.math.optimization.general.Preconditioner preconditioner>;

        if $r3 != null goto label02;

        $r29 = new org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizer$IdentityPreconditioner;

        specialinvoke $r29.<org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizer$IdentityPreconditioner: void <init>(org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizer$1)>(null);

        r0.<org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizer: org.apache.commons.math.optimization.general.Preconditioner preconditioner> = $r29;

     label02:
        $r4 = r0.<org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizer: org.apache.commons.math.analysis.solvers.UnivariateRealSolver solver>;

        if $r4 != null goto label03;

        $r28 = new org.apache.commons.math.analysis.solvers.BrentSolver;

        specialinvoke $r28.<org.apache.commons.math.analysis.solvers.BrentSolver: void <init>()>();

        r0.<org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizer: org.apache.commons.math.analysis.solvers.UnivariateRealSolver solver> = $r28;

     label03:
        $r5 = r0.<org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizer: double[] point>;

        i6 = lengthof $r5;

        $r6 = r0.<org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizer: double[] point>;

        r32 = virtualinvoke r0.<org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizer: double[] computeObjectiveGradient(double[])>($r6);

        $r8 = r0.<org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizer: org.apache.commons.math.optimization.GoalType goal>;

        $r7 = <org.apache.commons.math.optimization.GoalType: org.apache.commons.math.optimization.GoalType MINIMIZE>;

        if $r8 != $r7 goto label05;

        i7 = 0;

     label04:
        if i7 >= i6 goto label05;

        $d24 = r32[i7];

        $d25 = neg $d24;

        r32[i7] = $d25;

        i7 = i7 + 1;

        goto label04;

     label05:
        $r10 = r0.<org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizer: org.apache.commons.math.optimization.general.Preconditioner preconditioner>;

        $r9 = r0.<org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizer: double[] point>;

        r33 = interfaceinvoke $r10.<org.apache.commons.math.optimization.general.Preconditioner: double[] precondition(double[],double[])>($r9, r32);

        $r11 = virtualinvoke r33.<java.lang.Object: java.lang.Object clone()>();

        r34 = (double[]) $r11;

        d26 = 0.0;

        i8 = 0;

     label06:
        if i8 >= i6 goto label07;

        $d22 = r32[i8];

        $d21 = r34[i8];

        $d23 = $d22 * $d21;

        d26 = d26 + $d23;

        i8 = i8 + 1;

        goto label06;

     label07:
        r35 = null;

     label08:
        $r12 = r0.<org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizer: double[] point>;

        d0 = virtualinvoke r0.<org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizer: double computeObjectiveValue(double[])>($r12);

        r1 = r35;

        $r13 = new org.apache.commons.math.optimization.RealPointValuePair;

        $r14 = r0.<org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizer: double[] point>;

        specialinvoke $r13.<org.apache.commons.math.optimization.RealPointValuePair: void <init>(double[],double)>($r14, d0);

        r35 = $r13;

        if r1 == null goto label10;

        $r27 = r0.<org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizer: org.apache.commons.math.optimization.RealConvergenceChecker checker>;

        $i5 = virtualinvoke r0.<org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizer: int getIterations()>();

        $z0 = interfaceinvoke $r27.<org.apache.commons.math.optimization.RealConvergenceChecker: boolean converged(int,org.apache.commons.math.optimization.RealPointValuePair,org.apache.commons.math.optimization.RealPointValuePair)>($i5, r1, $r13);

        if $z0 == 0 goto label10;

     label09:
        return $r13;

     label10:
        virtualinvoke r0.<org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizer: void incrementIterationsCounter()>();

        r36 = r34;

        i9 = lengthof r34;

        i10 = 0;

     label11:
        if i10 >= i9 goto label12;

        d28 = r36[i10];

        i10 = i10 + 1;

        goto label11;

     label12:
        $r15 = new org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizer$LineSearchFunction;

        specialinvoke $r15.<org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizer$LineSearchFunction: void <init>(org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizer,double[])>(r0, r34);

        $r16 = r0.<org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizer: org.apache.commons.math.analysis.solvers.UnivariateRealSolver solver>;

        $d1 = r0.<org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizer: double initialStep>;

        $d2 = specialinvoke r0.<org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizer: double findUpperBound(org.apache.commons.math.analysis.UnivariateRealFunction,double,double)>($r15, 0.0, $d1);

        d29 = interfaceinvoke $r16.<org.apache.commons.math.analysis.solvers.UnivariateRealSolver: double solve(org.apache.commons.math.analysis.UnivariateRealFunction,double,double)>($r15, 0.0, $d2);

        i11 = 0;

     label13:
        $r17 = r0.<org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizer: double[] point>;

        $i0 = lengthof $r17;

        if i11 >= $i0 goto label14;

        $r26 = r0.<org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizer: double[] point>;

        $d18 = $r26[i11];

        $d16 = r34[i11];

        $d17 = d29 * $d16;

        $d19 = $d18 + $d17;

        $r26[i11] = $d19;

        i11 = i11 + 1;

        goto label13;

     label14:
        $r18 = r0.<org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizer: double[] point>;

        r38 = virtualinvoke r0.<org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizer: double[] computeObjectiveGradient(double[])>($r18);

        $r20 = r0.<org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizer: org.apache.commons.math.optimization.GoalType goal>;

        $r19 = <org.apache.commons.math.optimization.GoalType: org.apache.commons.math.optimization.GoalType MINIMIZE>;

        if $r20 != $r19 goto label16;

        i12 = 0;

     label15:
        if i12 >= i6 goto label16;

        $d14 = r38[i12];

        $d15 = neg $d14;

        r38[i12] = $d15;

        i12 = i12 + 1;

        goto label15;

     label16:
        d30 = d26;

        $r22 = r0.<org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizer: org.apache.commons.math.optimization.general.Preconditioner preconditioner>;

        $r21 = r0.<org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizer: double[] point>;

        r2 = interfaceinvoke $r22.<org.apache.commons.math.optimization.general.Preconditioner: double[] precondition(double[],double[])>($r21, r38);

        d26 = 0.0;

        i13 = 0;

     label17:
        if i13 >= i6 goto label18;

        $d12 = r38[i13];

        $d11 = r2[i13];

        $d13 = $d12 * $d11;

        d26 = d26 + $d13;

        i13 = i13 + 1;

        goto label17;

     label18:
        $r24 = r0.<org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizer: org.apache.commons.math.optimization.general.ConjugateGradientFormula updateFormula>;

        $r23 = <org.apache.commons.math.optimization.general.ConjugateGradientFormula: org.apache.commons.math.optimization.general.ConjugateGradientFormula FLETCHER_REEVES>;

        if $r24 != $r23 goto label19;

        d31 = d26 / d30;

        goto label22;

     label19:
        d32 = 0.0;

        i14 = 0;

     label20:
        $i1 = lengthof r38;

        if i14 >= $i1 goto label21;

        $d9 = r38[i14];

        $d8 = r33[i14];

        $d10 = $d9 * $d8;

        d32 = d32 + $d10;

        i14 = i14 + 1;

        goto label20;

     label21:
        $d3 = d26 - d32;

        d31 = $d3 / d30;

     label22:
        r33 = r2;

        $i2 = virtualinvoke r0.<org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizer: int getIterations()>();

        $i3 = $i2 % i6;

        if $i3 == 0 goto label23;

        $b4 = d31 cmpg 0.0;

        if $b4 >= 0 goto label24;

     label23:
        $r25 = virtualinvoke r2.<java.lang.Object: java.lang.Object clone()>();

        r34 = (double[]) $r25;

        goto label26;

     label24:
        i15 = 0;

     label25:
        if i15 >= i6 goto label26;

        $d6 = r2[i15];

        $d4 = r34[i15];

        $d5 = d31 * $d4;

        $d7 = $d6 + $d5;

        r34[i15] = $d7;

        i15 = i15 + 1;

        goto label25;

     label26:
        goto label08;

     label27:
        $r30 := @caughtexception;

        $r31 = new org.apache.commons.math.optimization.OptimizationException;

        specialinvoke $r31.<org.apache.commons.math.optimization.OptimizationException: void <init>(java.lang.Throwable)>($r30);

        throw $r31;

        catch org.apache.commons.math.ConvergenceException from label01 to label09 with label27;
        catch org.apache.commons.math.ConvergenceException from label10 to label27 with label27;
    }

    private double findUpperBound(org.apache.commons.math.analysis.UnivariateRealFunction, double, double) throws org.apache.commons.math.FunctionEvaluationException, org.apache.commons.math.optimization.OptimizationException
    {
        org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizer r0;
        org.apache.commons.math.analysis.UnivariateRealFunction r1;
        double d0, d1, d2, d3, $d4, $d5, $d6, d8, d9;
        byte $b0, $b1;
        org.apache.commons.math.optimization.OptimizationException $r2;
        java.lang.Object[] $r3;
        org.apache.commons.math.exception.util.LocalizedFormats $r4;

        r0 := @this: org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizer;

        r1 := @parameter0: org.apache.commons.math.analysis.UnivariateRealFunction;

        d0 := @parameter1: double;

        d1 := @parameter2: double;

        d2 = interfaceinvoke r1.<org.apache.commons.math.analysis.UnivariateRealFunction: double value(double)>(d0);

        d8 = d1;

     label1:
        $b0 = d8 cmpg 1.7976931348623157E308;

        if $b0 >= 0 goto label3;

        d3 = d0 + d8;

        d9 = interfaceinvoke r1.<org.apache.commons.math.analysis.UnivariateRealFunction: double value(double)>(d3);

        $d4 = d2 * d9;

        $b1 = $d4 cmpg 0.0;

        if $b1 > 0 goto label2;

        return d3;

     label2:
        $d5 = d2 / d9;

        $d6 = staticinvoke <org.apache.commons.math.util.FastMath: double max(double,double)>(2.0, $d5);

        d8 = d8 * $d6;

        goto label1;

     label3:
        $r2 = new org.apache.commons.math.optimization.OptimizationException;

        $r4 = <org.apache.commons.math.exception.util.LocalizedFormats: org.apache.commons.math.exception.util.LocalizedFormats UNABLE_TO_BRACKET_OPTIMUM_IN_LINE_SEARCH>;

        $r3 = newarray (java.lang.Object)[0];

        specialinvoke $r2.<org.apache.commons.math.optimization.OptimizationException: void <init>(org.apache.commons.math.exception.util.Localizable,java.lang.Object[])>($r4, $r3);

        throw $r2;
    }
}
