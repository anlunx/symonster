final class org.apache.commons.math3.analysis.polynomials.PolynomialsUtils$3 extends java.lang.Object implements org.apache.commons.math3.analysis.polynomials.PolynomialsUtils$RecurrenceCoefficientsGenerator
{

    void <init>()
    {
        org.apache.commons.math3.analysis.polynomials.PolynomialsUtils$3 r0;

        r0 := @this: org.apache.commons.math3.analysis.polynomials.PolynomialsUtils$3;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public org.apache.commons.math3.fraction.BigFraction[] generate(int)
    {
        org.apache.commons.math3.analysis.polynomials.PolynomialsUtils$3 r0;
        int i0, i1, $i2, $i3;
        org.apache.commons.math3.fraction.BigFraction[] $r1;
        org.apache.commons.math3.fraction.BigFraction $r2, $r3, $r4;

        r0 := @this: org.apache.commons.math3.analysis.polynomials.PolynomialsUtils$3;

        i0 := @parameter0: int;

        i1 = i0 + 1;

        $r1 = newarray (org.apache.commons.math3.fraction.BigFraction)[3];

        $r2 = new org.apache.commons.math3.fraction.BigFraction;

        $i2 = 2 * i0;

        $i3 = $i2 + 1;

        specialinvoke $r2.<org.apache.commons.math3.fraction.BigFraction: void <init>(int,int)>($i3, i1);

        $r1[0] = $r2;

        $r3 = new org.apache.commons.math3.fraction.BigFraction;

        specialinvoke $r3.<org.apache.commons.math3.fraction.BigFraction: void <init>(int,int)>(-1, i1);

        $r1[1] = $r3;

        $r4 = new org.apache.commons.math3.fraction.BigFraction;

        specialinvoke $r4.<org.apache.commons.math3.fraction.BigFraction: void <init>(int,int)>(i0, i1);

        $r1[2] = $r4;

        return $r1;
    }
}
