class com.opengamma.analytics.financial.model.volatility.smile.function.SABRBerestyckiVolatilityFunction$1 extends com.opengamma.analytics.math.function.Function1D
{
    final double val$forward;
    final double val$k;
    final double val$t;
    final com.opengamma.analytics.financial.model.volatility.smile.function.SABRBerestyckiVolatilityFunction this$0;

    void <init>(com.opengamma.analytics.financial.model.volatility.smile.function.SABRBerestyckiVolatilityFunction, double, double, double)
    {
        com.opengamma.analytics.financial.model.volatility.smile.function.SABRBerestyckiVolatilityFunction$1 r0;
        com.opengamma.analytics.financial.model.volatility.smile.function.SABRBerestyckiVolatilityFunction r1;
        double d0, d1, d2;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.smile.function.SABRBerestyckiVolatilityFunction$1;

        r1 := @parameter0: com.opengamma.analytics.financial.model.volatility.smile.function.SABRBerestyckiVolatilityFunction;

        d0 := @parameter1: double;

        d1 := @parameter2: double;

        d2 := @parameter3: double;

        r0.<com.opengamma.analytics.financial.model.volatility.smile.function.SABRBerestyckiVolatilityFunction$1: com.opengamma.analytics.financial.model.volatility.smile.function.SABRBerestyckiVolatilityFunction this$0> = r1;

        r0.<com.opengamma.analytics.financial.model.volatility.smile.function.SABRBerestyckiVolatilityFunction$1: double val$forward> = d0;

        r0.<com.opengamma.analytics.financial.model.volatility.smile.function.SABRBerestyckiVolatilityFunction$1: double val$k> = d1;

        r0.<com.opengamma.analytics.financial.model.volatility.smile.function.SABRBerestyckiVolatilityFunction$1: double val$t> = d2;

        specialinvoke r0.<com.opengamma.analytics.math.function.Function1D: void <init>()>();

        return;
    }

    public final java.lang.Double evaluate(com.opengamma.analytics.financial.model.volatility.smile.function.SABRFormulaData)
    {
        com.opengamma.analytics.financial.model.volatility.smile.function.SABRBerestyckiVolatilityFunction$1 r0;
        com.opengamma.analytics.financial.model.volatility.smile.function.SABRFormulaData r1;
        double d0, d1, d2, d3, d4, d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21, $d22, $d23, $d24, $d25, $d26, $d27, $d28, $d29, $d30, $d31, $d32, $d33, $d34, $d35, $d36, $d37, d38, d39, d40, $d41, $d42, $d43, $d44, d45, $d46, $d47, $d48, $d49, $d50, $d51, $d52, $d53, $d54, $d55, $d56, $d57, $d58, $d59, $d60, $d61, $d62, $d63, d64, $d65, $d66, $d67, $d68;
        boolean $z0, $z1, $z2;
        byte $b0;
        java.lang.Double $r3, $r4;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.smile.function.SABRBerestyckiVolatilityFunction$1;

        r1 := @parameter0: com.opengamma.analytics.financial.model.volatility.smile.function.SABRFormulaData;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "data");

        d0 = virtualinvoke r1.<com.opengamma.analytics.financial.model.volatility.smile.function.SABRFormulaData: double getAlpha()>();

        d1 = virtualinvoke r1.<com.opengamma.analytics.financial.model.volatility.smile.function.SABRFormulaData: double getBeta()>();

        d2 = virtualinvoke r1.<com.opengamma.analytics.financial.model.volatility.smile.function.SABRFormulaData: double getRho()>();

        d3 = virtualinvoke r1.<com.opengamma.analytics.financial.model.volatility.smile.function.SABRFormulaData: double getNu()>();

        d4 = 1.0 - d1;

        $d7 = r0.<com.opengamma.analytics.financial.model.volatility.smile.function.SABRBerestyckiVolatilityFunction$1: double val$forward>;

        $d6 = r0.<com.opengamma.analytics.financial.model.volatility.smile.function.SABRBerestyckiVolatilityFunction$1: double val$k>;

        $z0 = staticinvoke <com.opengamma.util.CompareUtils: boolean closeEquals(double,double,double)>($d7, $d6, 1.0E-15);

        if $z0 == 0 goto label1;

        $d36 = r0.<com.opengamma.analytics.financial.model.volatility.smile.function.SABRBerestyckiVolatilityFunction$1: double val$k>;

        $d37 = staticinvoke <java.lang.Math: double pow(double,double)>($d36, d4);

        d38 = d0 / $d37;

        goto label6;

     label1:
        $d9 = r0.<com.opengamma.analytics.financial.model.volatility.smile.function.SABRBerestyckiVolatilityFunction$1: double val$forward>;

        $d8 = r0.<com.opengamma.analytics.financial.model.volatility.smile.function.SABRBerestyckiVolatilityFunction$1: double val$k>;

        $d10 = $d9 / $d8;

        d39 = staticinvoke <java.lang.Math: double log(double)>($d10);

        $z1 = staticinvoke <com.opengamma.util.CompareUtils: boolean closeEquals(double,double,double)>(d3, 0.0, 1.0E-15);

        if $z1 == 0 goto label3;

        $z2 = staticinvoke <com.opengamma.util.CompareUtils: boolean closeEquals(double,double,double)>(d1, 1.0, 1.0E-15);

        if $z2 == 0 goto label2;

        $r3 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d0);

        return $r3;

     label2:
        $d29 = d39 * d0;

        $d31 = $d29 * d4;

        $d30 = r0.<com.opengamma.analytics.financial.model.volatility.smile.function.SABRBerestyckiVolatilityFunction$1: double val$forward>;

        $d32 = staticinvoke <java.lang.Math: double pow(double,double)>($d30, d4);

        $d33 = r0.<com.opengamma.analytics.financial.model.volatility.smile.function.SABRBerestyckiVolatilityFunction$1: double val$k>;

        $d34 = staticinvoke <java.lang.Math: double pow(double,double)>($d33, d4);

        $d35 = $d32 - $d34;

        d38 = $d31 / $d35;

        goto label6;

     label3:
        $b0 = d1 cmpl 1.0;

        if $b0 != 0 goto label4;

        $d28 = d3 * d39;

        d40 = $d28 / d0;

        goto label5;

     label4:
        $d11 = r0.<com.opengamma.analytics.financial.model.volatility.smile.function.SABRBerestyckiVolatilityFunction$1: double val$forward>;

        $d12 = staticinvoke <java.lang.Math: double pow(double,double)>($d11, d4);

        $d13 = r0.<com.opengamma.analytics.financial.model.volatility.smile.function.SABRBerestyckiVolatilityFunction$1: double val$k>;

        $d14 = staticinvoke <java.lang.Math: double pow(double,double)>($d13, d4);

        $d15 = $d12 - $d14;

        $d16 = d3 * $d15;

        $d17 = $d16 / d0;

        d40 = $d17 / d4;

     label5:
        $d18 = 2.0 * d2;

        $d19 = d40 - $d18;

        $d20 = d40 * $d19;

        $d21 = 1.0 + $d20;

        $d22 = staticinvoke <java.lang.Math: double sqrt(double)>($d21);

        $d23 = $d22 + d40;

        $d25 = $d23 - d2;

        $d24 = 1.0 - d2;

        d5 = $d25 / $d24;

        $d26 = d3 * d39;

        $d27 = staticinvoke <java.lang.Math: double log(double)>(d5);

        d38 = $d26 / $d27;

     label6:
        $d41 = r0.<com.opengamma.analytics.financial.model.volatility.smile.function.SABRBerestyckiVolatilityFunction$1: double val$forward>;

        $d42 = r0.<com.opengamma.analytics.financial.model.volatility.smile.function.SABRBerestyckiVolatilityFunction$1: double val$k>;

        $d43 = $d41 * $d42;

        $d44 = d4 / 2.0;

        d45 = staticinvoke <java.lang.Math: double pow(double,double)>($d43, $d44);

        $d46 = d4 * d4;

        $d47 = $d46 * d0;

        $d48 = $d47 * d0;

        $d49 = $d48 / 24.0;

        $d50 = $d49 / d45;

        $d51 = $d50 / d45;

        $d52 = d2 * d0;

        $d53 = $d52 * d1;

        $d54 = $d53 * d3;

        $d55 = $d54 / 4.0;

        $d56 = $d55 / d45;

        $d57 = $d51 + $d56;

        $d58 = d3 * d3;

        $d59 = 3.0 * d2;

        $d60 = $d59 * d2;

        $d61 = 2.0 - $d60;

        $d62 = $d58 * $d61;

        $d63 = $d62 / 24.0;

        d64 = $d57 + $d63;

        $d65 = r0.<com.opengamma.analytics.financial.model.volatility.smile.function.SABRBerestyckiVolatilityFunction$1: double val$t>;

        $d66 = d64 * $d65;

        $d67 = 1.0 + $d66;

        $d68 = d38 * $d67;

        $r4 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d68);

        return $r4;
    }

    public volatile java.lang.Object evaluate(java.lang.Object)
    {
        com.opengamma.analytics.financial.model.volatility.smile.function.SABRBerestyckiVolatilityFunction$1 r0;
        java.lang.Object r1;
        com.opengamma.analytics.financial.model.volatility.smile.function.SABRFormulaData $r2;
        java.lang.Double $r3;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.smile.function.SABRBerestyckiVolatilityFunction$1;

        r1 := @parameter0: java.lang.Object;

        $r2 = (com.opengamma.analytics.financial.model.volatility.smile.function.SABRFormulaData) r1;

        $r3 = virtualinvoke r0.<com.opengamma.analytics.financial.model.volatility.smile.function.SABRBerestyckiVolatilityFunction$1: java.lang.Double evaluate(com.opengamma.analytics.financial.model.volatility.smile.function.SABRFormulaData)>($r2);

        return $r3;
    }
}
