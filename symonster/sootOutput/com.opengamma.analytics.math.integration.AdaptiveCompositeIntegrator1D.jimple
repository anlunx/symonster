public class com.opengamma.analytics.math.integration.AdaptiveCompositeIntegrator1D extends com.opengamma.analytics.math.integration.Integrator1D
{
    private static final org.slf4j.Logger s_logger;
    private final com.opengamma.analytics.math.integration.Integrator1D _integrator;
    private static final int MAX_IT;
    private final double _gain;
    private final double _tol;

    public void <init>(com.opengamma.analytics.math.integration.Integrator1D)
    {
        com.opengamma.analytics.math.integration.AdaptiveCompositeIntegrator1D r0;
        com.opengamma.analytics.math.integration.Integrator1D r1;

        r0 := @this: com.opengamma.analytics.math.integration.AdaptiveCompositeIntegrator1D;

        r1 := @parameter0: com.opengamma.analytics.math.integration.Integrator1D;

        specialinvoke r0.<com.opengamma.analytics.math.integration.Integrator1D: void <init>()>();

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object,java.lang.String)>(r1, "integrator");

        r0.<com.opengamma.analytics.math.integration.AdaptiveCompositeIntegrator1D: com.opengamma.analytics.math.integration.Integrator1D _integrator> = r1;

        r0.<com.opengamma.analytics.math.integration.AdaptiveCompositeIntegrator1D: double _gain> = 15.0;

        r0.<com.opengamma.analytics.math.integration.AdaptiveCompositeIntegrator1D: double _tol> = 1.0E-13;

        return;
    }

    public void <init>(com.opengamma.analytics.math.integration.Integrator1D, double, double)
    {
        com.opengamma.analytics.math.integration.AdaptiveCompositeIntegrator1D r0;
        com.opengamma.analytics.math.integration.Integrator1D r1;
        double d0, d1;

        r0 := @this: com.opengamma.analytics.math.integration.AdaptiveCompositeIntegrator1D;

        r1 := @parameter0: com.opengamma.analytics.math.integration.Integrator1D;

        d0 := @parameter1: double;

        d1 := @parameter2: double;

        specialinvoke r0.<com.opengamma.analytics.math.integration.Integrator1D: void <init>()>();

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object,java.lang.String)>(r1, "integrator");

        r0.<com.opengamma.analytics.math.integration.AdaptiveCompositeIntegrator1D: com.opengamma.analytics.math.integration.Integrator1D _integrator> = r1;

        r0.<com.opengamma.analytics.math.integration.AdaptiveCompositeIntegrator1D: double _gain> = d0;

        r0.<com.opengamma.analytics.math.integration.AdaptiveCompositeIntegrator1D: double _tol> = d1;

        return;
    }

    public java.lang.Double integrate(com.opengamma.analytics.math.function.Function1D, java.lang.Double, java.lang.Double)
    {
        com.opengamma.analytics.math.integration.AdaptiveCompositeIntegrator1D r0;
        com.opengamma.analytics.math.function.Function1D r1;
        java.lang.Double r2, r3, $r6, $r7, $r8;
        double $d0, $d1, $d2, $d3;
        byte $b0;
        org.slf4j.Logger $r5;
        java.lang.Exception $r9;
        com.opengamma.OpenGammaRuntimeException r11;
        java.lang.Throwable r12;

        r0 := @this: com.opengamma.analytics.math.integration.AdaptiveCompositeIntegrator1D;

        r1 := @parameter0: com.opengamma.analytics.math.function.Function1D;

        r2 := @parameter1: java.lang.Double;

        r3 := @parameter2: java.lang.Double;

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object,java.lang.String)>(r1, "f");

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object,java.lang.String)>(r2, "lower bound");

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object,java.lang.String)>(r3, "upper bound");

     label1:
        $d0 = virtualinvoke r2.<java.lang.Double: double doubleValue()>();

        $d1 = virtualinvoke r3.<java.lang.Double: double doubleValue()>();

        $b0 = $d0 cmpg $d1;

        if $b0 >= 0 goto label3;

        $r8 = specialinvoke r0.<com.opengamma.analytics.math.integration.AdaptiveCompositeIntegrator1D: java.lang.Double integration(com.opengamma.analytics.math.function.Function1D,java.lang.Double,java.lang.Double)>(r1, r2, r3);

     label2:
        return $r8;

     label3:
        $r5 = <com.opengamma.analytics.math.integration.AdaptiveCompositeIntegrator1D: org.slf4j.Logger s_logger>;

        interfaceinvoke $r5.<org.slf4j.Logger: void info(java.lang.String)>("Upper bound was less than lower bound; swapping bounds and negating result");

        $r6 = specialinvoke r0.<com.opengamma.analytics.math.integration.AdaptiveCompositeIntegrator1D: java.lang.Double integration(com.opengamma.analytics.math.function.Function1D,java.lang.Double,java.lang.Double)>(r1, r3, r2);

        $d2 = virtualinvoke $r6.<java.lang.Double: double doubleValue()>();

        $d3 = neg $d2;

        $r7 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d3);

     label4:
        return $r7;

     label5:
        $r9 := @caughtexception;

        r11 = new com.opengamma.OpenGammaRuntimeException;

        specialinvoke r11.<com.opengamma.OpenGammaRuntimeException: void <init>(java.lang.String)>("function evaluation returned NaN or Inf");

        r12 = (java.lang.Throwable) r11;

        throw r12;

        catch java.lang.Exception from label1 to label2 with label5;
        catch java.lang.Exception from label3 to label4 with label5;
    }

    private java.lang.Double integration(com.opengamma.analytics.math.function.Function1D, java.lang.Double, java.lang.Double)
    {
        com.opengamma.analytics.math.integration.AdaptiveCompositeIntegrator1D r0;
        com.opengamma.analytics.math.function.Function1D r1;
        java.lang.Double r2, r3, $r6, $r7;
        double d0, $d1, $d2, $d3;
        com.opengamma.analytics.math.integration.Integrator1D $r4;
        java.lang.Object $r5;

        r0 := @this: com.opengamma.analytics.math.integration.AdaptiveCompositeIntegrator1D;

        r1 := @parameter0: com.opengamma.analytics.math.function.Function1D;

        r2 := @parameter1: java.lang.Double;

        r3 := @parameter2: java.lang.Double;

        $r4 = r0.<com.opengamma.analytics.math.integration.AdaptiveCompositeIntegrator1D: com.opengamma.analytics.math.integration.Integrator1D _integrator>;

        $r5 = virtualinvoke $r4.<com.opengamma.analytics.math.integration.Integrator1D: java.lang.Object integrate(com.opengamma.analytics.math.function.Function1D,java.lang.Object,java.lang.Object)>(r1, r2, r3);

        $r6 = (java.lang.Double) $r5;

        d0 = virtualinvoke $r6.<java.lang.Double: double doubleValue()>();

        $d1 = virtualinvoke r2.<java.lang.Double: double doubleValue()>();

        $d2 = virtualinvoke r3.<java.lang.Double: double doubleValue()>();

        $d3 = specialinvoke r0.<com.opengamma.analytics.math.integration.AdaptiveCompositeIntegrator1D: double integrationRec(com.opengamma.analytics.math.function.Function1D,double,double,double,double)>(r1, $d1, $d2, d0, 15.0);

        $r7 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d3);

        return $r7;
    }

    private double integrationRec(com.opengamma.analytics.math.function.Function1D, double, double, double, double)
    {
        com.opengamma.analytics.math.integration.AdaptiveCompositeIntegrator1D r0;
        com.opengamma.analytics.math.function.Function1D r1;
        double d0, d1, d2, d3, d4, d5, d6, d7, d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21, $d22, $d23, $d24, $d25;
        com.opengamma.analytics.math.integration.Integrator1D $r2, $r7;
        java.lang.Double $r3, $r4, $r6, $r8, $r9, $r11;
        java.lang.Object $r5, $r10;
        byte $b0, $b1, $b2, $b3, $b4;

        r0 := @this: com.opengamma.analytics.math.integration.AdaptiveCompositeIntegrator1D;

        r1 := @parameter0: com.opengamma.analytics.math.function.Function1D;

        d0 := @parameter1: double;

        d1 := @parameter2: double;

        d2 := @parameter3: double;

        d3 := @parameter4: double;

        $d10 = r0.<com.opengamma.analytics.math.integration.AdaptiveCompositeIntegrator1D: double _gain>;

        $d9 = r0.<com.opengamma.analytics.math.integration.AdaptiveCompositeIntegrator1D: double _tol>;

        d4 = $d10 * $d9;

        $d11 = d0 + d1;

        d5 = 0.5 * $d11;

        $r2 = r0.<com.opengamma.analytics.math.integration.AdaptiveCompositeIntegrator1D: com.opengamma.analytics.math.integration.Integrator1D _integrator>;

        $r3 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d0);

        $r4 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d5);

        $r5 = virtualinvoke $r2.<com.opengamma.analytics.math.integration.Integrator1D: java.lang.Object integrate(com.opengamma.analytics.math.function.Function1D,java.lang.Object,java.lang.Object)>(r1, $r3, $r4);

        $r6 = (java.lang.Double) $r5;

        d6 = virtualinvoke $r6.<java.lang.Double: double doubleValue()>();

        $r7 = r0.<com.opengamma.analytics.math.integration.AdaptiveCompositeIntegrator1D: com.opengamma.analytics.math.integration.Integrator1D _integrator>;

        $r8 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d5);

        $r9 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d1);

        $r10 = virtualinvoke $r7.<com.opengamma.analytics.math.integration.Integrator1D: java.lang.Object integrate(com.opengamma.analytics.math.function.Function1D,java.lang.Object,java.lang.Object)>(r1, $r8, $r9);

        $r11 = (java.lang.Double) $r10;

        d7 = virtualinvoke $r11.<java.lang.Double: double doubleValue()>();

        d8 = d7 + d6;

        $d12 = d2 - d8;

        $d13 = staticinvoke <java.lang.Math: double abs(double)>($d12);

        $b0 = $d13 cmpg d4;

        if $b0 < 0 goto label1;

        $b1 = d3 cmpl 0.0;

        if $b1 == 0 goto label1;

        $d14 = staticinvoke <java.lang.Math: double abs(double)>(d2);

        $b2 = $d14 cmpg 1.0E-14;

        if $b2 >= 0 goto label2;

        $d15 = staticinvoke <java.lang.Math: double abs(double)>(d7);

        $b3 = $d15 cmpg 1.0E-14;

        if $b3 >= 0 goto label2;

        $d16 = staticinvoke <java.lang.Math: double abs(double)>(d6);

        $b4 = $d16 cmpg 1.0E-14;

        if $b4 >= 0 goto label2;

     label1:
        $d17 = d8 - d2;

        $d18 = r0.<com.opengamma.analytics.math.integration.AdaptiveCompositeIntegrator1D: double _gain>;

        $d19 = $d17 / $d18;

        $d20 = d8 + $d19;

        return $d20;

     label2:
        $d21 = d3 - 1.0;

        $d22 = specialinvoke r0.<com.opengamma.analytics.math.integration.AdaptiveCompositeIntegrator1D: double integrationRec(com.opengamma.analytics.math.function.Function1D,double,double,double,double)>(r1, d0, d5, d6, $d21);

        $d23 = d3 - 1.0;

        $d24 = specialinvoke r0.<com.opengamma.analytics.math.integration.AdaptiveCompositeIntegrator1D: double integrationRec(com.opengamma.analytics.math.function.Function1D,double,double,double,double)>(r1, d5, d1, d7, $d23);

        $d25 = $d22 + $d24;

        return $d25;
    }

    public int hashCode()
    {
        com.opengamma.analytics.math.integration.AdaptiveCompositeIntegrator1D r0;
        double $d0, $d1;
        long $l1, $l2, $l7, $l8, l12, l15;
        int $i3, $i4, $i5, $i6, $i9, $i10, i13, i14, i16;
        com.opengamma.analytics.math.integration.Integrator1D $r1;

        r0 := @this: com.opengamma.analytics.math.integration.AdaptiveCompositeIntegrator1D;

        $d0 = r0.<com.opengamma.analytics.math.integration.AdaptiveCompositeIntegrator1D: double _gain>;

        l12 = staticinvoke <java.lang.Double: long doubleToLongBits(double)>($d0);

        $i4 = 31 * 1;

        $l1 = l12 >>> 32;

        $l2 = l12 ^ $l1;

        $i3 = (int) $l2;

        i13 = $i4 + $i3;

        $i5 = 31 * i13;

        $r1 = r0.<com.opengamma.analytics.math.integration.AdaptiveCompositeIntegrator1D: com.opengamma.analytics.math.integration.Integrator1D _integrator>;

        $i6 = virtualinvoke $r1.<java.lang.Object: int hashCode()>();

        i14 = $i5 + $i6;

        $d1 = r0.<com.opengamma.analytics.math.integration.AdaptiveCompositeIntegrator1D: double _tol>;

        l15 = staticinvoke <java.lang.Double: long doubleToLongBits(double)>($d1);

        $i10 = 31 * i14;

        $l7 = l15 >>> 32;

        $l8 = l15 ^ $l7;

        $i9 = (int) $l8;

        i16 = $i10 + $i9;

        return i16;
    }

    public boolean equals(java.lang.Object)
    {
        com.opengamma.analytics.math.integration.AdaptiveCompositeIntegrator1D r0, r2;
        java.lang.Object r1;
        boolean $z0, $z1;
        double $d0, $d1, $d2, $d3;
        long $l0, $l1, $l3, $l4;
        byte $b2, $b5;
        com.opengamma.analytics.math.integration.Integrator1D $r3, $r4;

        r0 := @this: com.opengamma.analytics.math.integration.AdaptiveCompositeIntegrator1D;

        r1 := @parameter0: java.lang.Object;

        if r0 != r1 goto label1;

        return 1;

     label1:
        if r1 != null goto label2;

        return 0;

     label2:
        $z0 = r1 instanceof com.opengamma.analytics.math.integration.AdaptiveCompositeIntegrator1D;

        if $z0 != 0 goto label3;

        return 0;

     label3:
        r2 = (com.opengamma.analytics.math.integration.AdaptiveCompositeIntegrator1D) r1;

        $d0 = r0.<com.opengamma.analytics.math.integration.AdaptiveCompositeIntegrator1D: double _gain>;

        $l0 = staticinvoke <java.lang.Double: long doubleToLongBits(double)>($d0);

        $d1 = r2.<com.opengamma.analytics.math.integration.AdaptiveCompositeIntegrator1D: double _gain>;

        $l1 = staticinvoke <java.lang.Double: long doubleToLongBits(double)>($d1);

        $b2 = $l0 cmp $l1;

        if $b2 == 0 goto label4;

        return 0;

     label4:
        $r4 = r0.<com.opengamma.analytics.math.integration.AdaptiveCompositeIntegrator1D: com.opengamma.analytics.math.integration.Integrator1D _integrator>;

        $r3 = r2.<com.opengamma.analytics.math.integration.AdaptiveCompositeIntegrator1D: com.opengamma.analytics.math.integration.Integrator1D _integrator>;

        $z1 = virtualinvoke $r4.<java.lang.Object: boolean equals(java.lang.Object)>($r3);

        if $z1 != 0 goto label5;

        return 0;

     label5:
        $d2 = r0.<com.opengamma.analytics.math.integration.AdaptiveCompositeIntegrator1D: double _tol>;

        $l3 = staticinvoke <java.lang.Double: long doubleToLongBits(double)>($d2);

        $d3 = r2.<com.opengamma.analytics.math.integration.AdaptiveCompositeIntegrator1D: double _tol>;

        $l4 = staticinvoke <java.lang.Double: long doubleToLongBits(double)>($d3);

        $b5 = $l3 cmp $l4;

        if $b5 == 0 goto label6;

        return 0;

     label6:
        return 1;
    }

    public volatile java.lang.Object integrate(com.opengamma.analytics.math.function.Function1D, java.lang.Object, java.lang.Object)
    {
        com.opengamma.analytics.math.integration.AdaptiveCompositeIntegrator1D r0;
        com.opengamma.analytics.math.function.Function1D r1;
        java.lang.Object r2, r3;
        java.lang.Double $r4, $r5, $r6;

        r0 := @this: com.opengamma.analytics.math.integration.AdaptiveCompositeIntegrator1D;

        r1 := @parameter0: com.opengamma.analytics.math.function.Function1D;

        r2 := @parameter1: java.lang.Object;

        r3 := @parameter2: java.lang.Object;

        $r5 = (java.lang.Double) r2;

        $r4 = (java.lang.Double) r3;

        $r6 = virtualinvoke r0.<com.opengamma.analytics.math.integration.AdaptiveCompositeIntegrator1D: java.lang.Double integrate(com.opengamma.analytics.math.function.Function1D,java.lang.Double,java.lang.Double)>(r1, $r5, $r4);

        return $r6;
    }

    static void <clinit>()
    {
        org.slf4j.Logger $r0;

        <com.opengamma.analytics.math.integration.AdaptiveCompositeIntegrator1D: int MAX_IT> = 15;

        $r0 = staticinvoke <org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>(class "com/opengamma/analytics/math/integration/AdaptiveCompositeIntegrator1D");

        <com.opengamma.analytics.math.integration.AdaptiveCompositeIntegrator1D: org.slf4j.Logger s_logger> = $r0;

        return;
    }
}
