class com.opengamma.analytics.financial.model.volatility.smile.fitting.SVINonLinearLeastSquareFitter$1 extends com.opengamma.analytics.math.function.ParameterizedFunction
{
    final com.opengamma.analytics.math.minimization.UncoupledParameterTransforms val$transforms;
    final double val$maturity;
    final double val$forward;
    final com.opengamma.analytics.financial.model.volatility.smile.fitting.SVINonLinearLeastSquareFitter this$0;

    void <init>(com.opengamma.analytics.financial.model.volatility.smile.fitting.SVINonLinearLeastSquareFitter, com.opengamma.analytics.math.minimization.UncoupledParameterTransforms, double, double)
    {
        com.opengamma.analytics.financial.model.volatility.smile.fitting.SVINonLinearLeastSquareFitter$1 r0;
        com.opengamma.analytics.financial.model.volatility.smile.fitting.SVINonLinearLeastSquareFitter r1;
        com.opengamma.analytics.math.minimization.UncoupledParameterTransforms r2;
        double d0, d1;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.smile.fitting.SVINonLinearLeastSquareFitter$1;

        r1 := @parameter0: com.opengamma.analytics.financial.model.volatility.smile.fitting.SVINonLinearLeastSquareFitter;

        r2 := @parameter1: com.opengamma.analytics.math.minimization.UncoupledParameterTransforms;

        d0 := @parameter2: double;

        d1 := @parameter3: double;

        r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.SVINonLinearLeastSquareFitter$1: com.opengamma.analytics.financial.model.volatility.smile.fitting.SVINonLinearLeastSquareFitter this$0> = r1;

        r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.SVINonLinearLeastSquareFitter$1: com.opengamma.analytics.math.minimization.UncoupledParameterTransforms val$transforms> = r2;

        r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.SVINonLinearLeastSquareFitter$1: double val$maturity> = d0;

        r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.SVINonLinearLeastSquareFitter$1: double val$forward> = d1;

        specialinvoke r0.<com.opengamma.analytics.math.function.ParameterizedFunction: void <init>()>();

        return;
    }

    public java.lang.Double evaluate(java.lang.Double, com.opengamma.analytics.math.matrix.DoubleMatrix1D)
    {
        com.opengamma.analytics.financial.model.volatility.smile.fitting.SVINonLinearLeastSquareFitter$1 r0;
        java.lang.Double r1, $r7, $r9, $r11, $r13, $r15, $r21;
        com.opengamma.analytics.math.matrix.DoubleMatrix1D r2, r3;
        double d0, d1, d2, d3, d4, $d5, $d6, $d7;
        com.opengamma.analytics.math.minimization.UncoupledParameterTransforms $r5;
        int[] $r6, $r8, $r10, $r12, $r14;
        com.opengamma.analytics.financial.model.volatility.smile.function.SVIFormulaData $r16;
        com.opengamma.analytics.financial.model.volatility.smile.function.SVIVolatilityFunction $r17;
        com.opengamma.analytics.financial.model.option.pricing.analytic.formula.EuropeanVanillaOption $r18;
        com.opengamma.analytics.math.function.Function1D $r19;
        java.lang.Object $r20;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.smile.fitting.SVINonLinearLeastSquareFitter$1;

        r1 := @parameter0: java.lang.Double;

        r2 := @parameter1: com.opengamma.analytics.math.matrix.DoubleMatrix1D;

        $r5 = r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.SVINonLinearLeastSquareFitter$1: com.opengamma.analytics.math.minimization.UncoupledParameterTransforms val$transforms>;

        r3 = virtualinvoke $r5.<com.opengamma.analytics.math.minimization.UncoupledParameterTransforms: com.opengamma.analytics.math.matrix.DoubleMatrix1D inverseTransform(com.opengamma.analytics.math.matrix.DoubleMatrix1D)>(r2);

        $r6 = newarray (int)[1];

        $r6[0] = 0;

        $r7 = virtualinvoke r3.<com.opengamma.analytics.math.matrix.DoubleMatrix1D: java.lang.Double getEntry(int[])>($r6);

        d0 = virtualinvoke $r7.<java.lang.Double: double doubleValue()>();

        $r8 = newarray (int)[1];

        $r8[0] = 1;

        $r9 = virtualinvoke r3.<com.opengamma.analytics.math.matrix.DoubleMatrix1D: java.lang.Double getEntry(int[])>($r8);

        d1 = virtualinvoke $r9.<java.lang.Double: double doubleValue()>();

        $r10 = newarray (int)[1];

        $r10[0] = 2;

        $r11 = virtualinvoke r3.<com.opengamma.analytics.math.matrix.DoubleMatrix1D: java.lang.Double getEntry(int[])>($r10);

        d2 = virtualinvoke $r11.<java.lang.Double: double doubleValue()>();

        $r12 = newarray (int)[1];

        $r12[0] = 3;

        $r13 = virtualinvoke r3.<com.opengamma.analytics.math.matrix.DoubleMatrix1D: java.lang.Double getEntry(int[])>($r12);

        d3 = virtualinvoke $r13.<java.lang.Double: double doubleValue()>();

        $r14 = newarray (int)[1];

        $r14[0] = 4;

        $r15 = virtualinvoke r3.<com.opengamma.analytics.math.matrix.DoubleMatrix1D: java.lang.Double getEntry(int[])>($r14);

        d4 = virtualinvoke $r15.<java.lang.Double: double doubleValue()>();

        $r16 = new com.opengamma.analytics.financial.model.volatility.smile.function.SVIFormulaData;

        specialinvoke $r16.<com.opengamma.analytics.financial.model.volatility.smile.function.SVIFormulaData: void <init>(double,double,double,double,double)>(d0, d1, d2, d3, d4);

        $r17 = staticinvoke <com.opengamma.analytics.financial.model.volatility.smile.fitting.SVINonLinearLeastSquareFitter: com.opengamma.analytics.financial.model.volatility.smile.function.SVIVolatilityFunction access$000()>();

        $r18 = new com.opengamma.analytics.financial.model.option.pricing.analytic.formula.EuropeanVanillaOption;

        $d5 = virtualinvoke r1.<java.lang.Double: double doubleValue()>();

        $d6 = r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.SVINonLinearLeastSquareFitter$1: double val$maturity>;

        specialinvoke $r18.<com.opengamma.analytics.financial.model.option.pricing.analytic.formula.EuropeanVanillaOption: void <init>(double,double,boolean)>($d5, $d6, 1);

        $d7 = r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.SVINonLinearLeastSquareFitter$1: double val$forward>;

        $r19 = virtualinvoke $r17.<com.opengamma.analytics.financial.model.volatility.smile.function.SVIVolatilityFunction: com.opengamma.analytics.math.function.Function1D getVolatilityFunction(com.opengamma.analytics.financial.model.option.pricing.analytic.formula.EuropeanVanillaOption,double)>($r18, $d7);

        $r20 = virtualinvoke $r19.<com.opengamma.analytics.math.function.Function1D: java.lang.Object evaluate(java.lang.Object)>($r16);

        $r21 = (java.lang.Double) $r20;

        return $r21;
    }

    public int getNumberOfParameters()
    {
        com.opengamma.analytics.financial.model.volatility.smile.fitting.SVINonLinearLeastSquareFitter$1 r0;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.smile.fitting.SVINonLinearLeastSquareFitter$1;

        return 5;
    }

    public volatile java.lang.Object evaluate(java.lang.Object, java.lang.Object)
    {
        com.opengamma.analytics.financial.model.volatility.smile.fitting.SVINonLinearLeastSquareFitter$1 r0;
        java.lang.Object r1, r2;
        com.opengamma.analytics.math.matrix.DoubleMatrix1D $r3;
        java.lang.Double $r4, $r5;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.smile.fitting.SVINonLinearLeastSquareFitter$1;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r4 = (java.lang.Double) r1;

        $r3 = (com.opengamma.analytics.math.matrix.DoubleMatrix1D) r2;

        $r5 = virtualinvoke r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.SVINonLinearLeastSquareFitter$1: java.lang.Double evaluate(java.lang.Double,com.opengamma.analytics.math.matrix.DoubleMatrix1D)>($r4, $r3);

        return $r5;
    }
}
