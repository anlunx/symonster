public class com.opengamma.analytics.math.statistics.descriptive.robust.InterquartileRangeCalculator extends com.opengamma.analytics.math.function.Function1D
{
    private static final com.opengamma.analytics.math.function.Function1D MEDIAN;

    public void <init>()
    {
        com.opengamma.analytics.math.statistics.descriptive.robust.InterquartileRangeCalculator r0;

        r0 := @this: com.opengamma.analytics.math.statistics.descriptive.robust.InterquartileRangeCalculator;

        specialinvoke r0.<com.opengamma.analytics.math.function.Function1D: void <init>()>();

        return;
    }

    public java.lang.Double evaluate(double[])
    {
        com.opengamma.analytics.math.statistics.descriptive.robust.InterquartileRangeCalculator r0;
        double[] r1, r2, r10, r11;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6;
        com.opengamma.analytics.math.function.Function1D $r3, $r6;
        java.lang.Object $r4, $r7;
        java.lang.Double $r5, $r8, $r9;
        double $d0, $d1, $d2;
        boolean $z0;

        r0 := @this: com.opengamma.analytics.math.statistics.descriptive.robust.InterquartileRangeCalculator;

        r1 := @parameter0: double[];

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object,java.lang.String)>(r1, "x");

        i0 = lengthof r1;

        if i0 <= 3 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        staticinvoke <org.apache.commons.lang.Validate: void isTrue(boolean,java.lang.String)>($z0, "Need at least four points to calculate IQR");

        r2 = staticinvoke <java.util.Arrays: double[] copyOf(double[],int)>(r1, i0);

        staticinvoke <java.util.Arrays: void sort(double[])>(r2);

        $i1 = i0 % 2;

        if $i1 != 0 goto label3;

        $i5 = i0 / 2;

        r10 = staticinvoke <java.util.Arrays: double[] copyOfRange(double[],int,int)>(r2, 0, $i5);

        $i6 = i0 / 2;

        r11 = staticinvoke <java.util.Arrays: double[] copyOfRange(double[],int,int)>(r2, $i6, i0);

        goto label4;

     label3:
        $i2 = i0 / 2;

        $i3 = $i2 + 1;

        r10 = staticinvoke <java.util.Arrays: double[] copyOfRange(double[],int,int)>(r2, 0, $i3);

        $i4 = i0 / 2;

        r11 = staticinvoke <java.util.Arrays: double[] copyOfRange(double[],int,int)>(r2, $i4, i0);

     label4:
        $r3 = <com.opengamma.analytics.math.statistics.descriptive.robust.InterquartileRangeCalculator: com.opengamma.analytics.math.function.Function1D MEDIAN>;

        $r4 = virtualinvoke $r3.<com.opengamma.analytics.math.function.Function1D: java.lang.Object evaluate(java.lang.Object)>(r11);

        $r5 = (java.lang.Double) $r4;

        $d0 = virtualinvoke $r5.<java.lang.Double: double doubleValue()>();

        $r6 = <com.opengamma.analytics.math.statistics.descriptive.robust.InterquartileRangeCalculator: com.opengamma.analytics.math.function.Function1D MEDIAN>;

        $r7 = virtualinvoke $r6.<com.opengamma.analytics.math.function.Function1D: java.lang.Object evaluate(java.lang.Object)>(r10);

        $r8 = (java.lang.Double) $r7;

        $d1 = virtualinvoke $r8.<java.lang.Double: double doubleValue()>();

        $d2 = $d0 - $d1;

        $r9 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d2);

        return $r9;
    }

    public volatile java.lang.Object evaluate(java.lang.Object)
    {
        com.opengamma.analytics.math.statistics.descriptive.robust.InterquartileRangeCalculator r0;
        java.lang.Object r1;
        double[] $r2;
        java.lang.Double $r3;

        r0 := @this: com.opengamma.analytics.math.statistics.descriptive.robust.InterquartileRangeCalculator;

        r1 := @parameter0: java.lang.Object;

        $r2 = (double[]) r1;

        $r3 = virtualinvoke r0.<com.opengamma.analytics.math.statistics.descriptive.robust.InterquartileRangeCalculator: java.lang.Double evaluate(double[])>($r2);

        return $r3;
    }

    static void <clinit>()
    {
        com.opengamma.analytics.math.statistics.descriptive.MedianCalculator $r0;

        $r0 = new com.opengamma.analytics.math.statistics.descriptive.MedianCalculator;

        specialinvoke $r0.<com.opengamma.analytics.math.statistics.descriptive.MedianCalculator: void <init>()>();

        <com.opengamma.analytics.math.statistics.descriptive.robust.InterquartileRangeCalculator: com.opengamma.analytics.math.function.Function1D MEDIAN> = $r0;

        return;
    }
}
