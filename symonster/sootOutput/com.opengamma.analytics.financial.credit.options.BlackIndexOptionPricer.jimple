public class com.opengamma.analytics.financial.credit.options.BlackIndexOptionPricer extends java.lang.Object
{
    private static final org.apache.log4j.Logger LOGGER;
    private final com.opengamma.analytics.financial.credit.isdastandardmodel.AnnuityForSpreadFunction _annuityFunc;
    private final double _expiry;
    private final double _coupon;
    private final double _df;
    private final double _minExercisePrice;
    private final double _maxExercisePrice;
    private final double _daFwdSpread;
    private final double _fAnnuity;

    public void <init>(com.opengamma.analytics.financial.credit.isdastandardmodel.CDSAnalytic, double, com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantYieldCurve, double, double, double)
    {
        com.opengamma.analytics.financial.credit.options.BlackIndexOptionPricer r0;
        com.opengamma.analytics.financial.credit.isdastandardmodel.CDSAnalytic r1;
        double d0, d1, d2, d3;
        com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantYieldCurve r2;
        double[] $r3;

        r0 := @this: com.opengamma.analytics.financial.credit.options.BlackIndexOptionPricer;

        r1 := @parameter0: com.opengamma.analytics.financial.credit.isdastandardmodel.CDSAnalytic;

        d0 := @parameter1: double;

        r2 := @parameter2: com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantYieldCurve;

        d1 := @parameter3: double;

        d2 := @parameter4: double;

        d3 := @parameter5: double;

        $r3 = newarray (double)[2];

        $r3[0] = d2;

        $r3[1] = d3;

        specialinvoke r0.<com.opengamma.analytics.financial.credit.options.BlackIndexOptionPricer: void <init>(com.opengamma.analytics.financial.credit.isdastandardmodel.CDSAnalytic,double,com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantYieldCurve,double,double[])>(r1, d0, r2, d1, $r3);

        return;
    }

    public void <init>(com.opengamma.analytics.financial.credit.isdastandardmodel.CDSAnalytic, double, com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantYieldCurve, double, com.opengamma.analytics.financial.credit.index.IntrinsicIndexDataBundle)
    {
        com.opengamma.analytics.financial.credit.options.BlackIndexOptionPricer r0;
        com.opengamma.analytics.financial.credit.isdastandardmodel.CDSAnalytic r1;
        double d0, d1;
        com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantYieldCurve r2;
        com.opengamma.analytics.financial.credit.index.IntrinsicIndexDataBundle r3;
        double[] $r4;

        r0 := @this: com.opengamma.analytics.financial.credit.options.BlackIndexOptionPricer;

        r1 := @parameter0: com.opengamma.analytics.financial.credit.isdastandardmodel.CDSAnalytic;

        d0 := @parameter1: double;

        r2 := @parameter2: com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantYieldCurve;

        d1 := @parameter3: double;

        r3 := @parameter4: com.opengamma.analytics.financial.credit.index.IntrinsicIndexDataBundle;

        $r4 = staticinvoke <com.opengamma.analytics.financial.credit.options.BlackIndexOptionPricer: double[] getFwdSpreadAndAnnuity(com.opengamma.analytics.financial.credit.isdastandardmodel.CDSAnalytic,double,com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantYieldCurve,com.opengamma.analytics.financial.credit.index.IntrinsicIndexDataBundle)>(r1, d0, r2, r3);

        specialinvoke r0.<com.opengamma.analytics.financial.credit.options.BlackIndexOptionPricer: void <init>(com.opengamma.analytics.financial.credit.isdastandardmodel.CDSAnalytic,double,com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantYieldCurve,double,double[])>(r1, d0, r2, d1, $r4);

        return;
    }

    private void <init>(com.opengamma.analytics.financial.credit.isdastandardmodel.CDSAnalytic, double, com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantYieldCurve, double, double[])
    {
        com.opengamma.analytics.financial.credit.options.BlackIndexOptionPricer r0;
        com.opengamma.analytics.financial.credit.isdastandardmodel.CDSAnalytic r1;
        double d0, d1, d2, d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15;
        com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantYieldCurve r2, $r11;
        double[] r3;
        byte $b0, $b1, $b2, $b4, $b5, $b6, $b7, $b8;
        java.lang.Object[] $r5, $r8;
        java.lang.Double $r6, $r9, $r13, $r15;
        int $i3;
        com.opengamma.analytics.financial.credit.isdastandardmodel.AnnuityForSpreadISDAFunction $r10;
        com.opengamma.analytics.financial.credit.isdastandardmodel.AnnuityForSpreadFunction $r12;
        java.lang.Object $r14;
        java.lang.StringBuilder $r16, $r18, $r19, $r20, $r21, $r22, $r24, $r26, $r27, $r28, $r29, $r30;
        org.apache.log4j.Logger $r17, $r25;
        java.lang.String $r23, $r31;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;

        r0 := @this: com.opengamma.analytics.financial.credit.options.BlackIndexOptionPricer;

        r1 := @parameter0: com.opengamma.analytics.financial.credit.isdastandardmodel.CDSAnalytic;

        d0 := @parameter1: double;

        r2 := @parameter2: com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantYieldCurve;

        d1 := @parameter3: double;

        r3 := @parameter4: double[];

        specialinvoke r0.<java.lang.Object: void <init>()>();

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "fwdCDS");

        $b0 = d0 cmpl 0.0;

        if $b0 <= 0 goto label01;

        $z0 = 1;

        goto label02;

     label01:
        $z0 = 0;

     label02:
        $r5 = newarray (java.lang.Object)[1];

        $r6 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d0);

        $r5[0] = $r6;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String,java.lang.Object[])>($z0, "timeToExpiry must be positive. Value given {}", $r5);

        $d4 = virtualinvoke r1.<com.opengamma.analytics.financial.credit.isdastandardmodel.CDSAnalytic: double getEffectiveProtectionStart()>();

        $b1 = $d4 cmpl 0.0;

        if $b1 != 0 goto label03;

        $z1 = 1;

        goto label04;

     label03:
        $z1 = 0;

     label04:
        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z1, "fwdCDS should be a Forward CDS");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, "yieldCurve");

        $b2 = d1 cmpl 0.0;

        if $b2 <= 0 goto label05;

        $z2 = 1;

        goto label06;

     label05:
        $z2 = 0;

     label06:
        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z2, "indexCoupon must be positive");

        $i3 = lengthof r3;

        if $i3 != 2 goto label07;

        $z3 = 1;

        goto label08;

     label07:
        $z3 = 0;

     label08:
        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z3, "too many parameters passed in");

        d2 = r3[0];

        d3 = r3[1];

        $b4 = d2 cmpl 0.0;

        if $b4 <= 0 goto label09;

        $z4 = 1;

        goto label10;

     label09:
        $z4 = 0;

     label10:
        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z4, "defaultAdjustedFwdSpread must be positive");

        $b5 = d1 cmpl 1.0;

        if $b5 <= 0 goto label11;

        $r25 = <com.opengamma.analytics.financial.credit.options.BlackIndexOptionPricer: org.apache.log4j.Logger LOGGER>;

        $r24 = new java.lang.StringBuilder;

        specialinvoke $r24.<java.lang.StringBuilder: void <init>()>();

        $r26 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Index Coupon should be given as a fraction; a value of ");

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>(d1);

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is ");

        $d15 = d1 * 10000.0;

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d15);

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("basis points.");

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r25.<org.apache.log4j.Logger: void warn(java.lang.Object)>($r31);

     label11:
        $b6 = d2 cmpl 10.0;

        if $b6 <= 0 goto label12;

        $r17 = <com.opengamma.analytics.financial.credit.options.BlackIndexOptionPricer: org.apache.log4j.Logger LOGGER>;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("defaultAdjustedFwdSpread should be given as a fraction; a value of ");

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>(d2);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is ");

        $d14 = d2 * 10000.0;

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d14);

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("basis points.");

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r17.<org.apache.log4j.Logger: void warn(java.lang.Object)>($r23);

     label12:
        $b7 = d3 cmpl 0.0;

        if $b7 <= 0 goto label13;

        $z5 = 1;

        goto label14;

     label13:
        $z5 = 0;

     label14:
        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z5, "pvFwdAnnuity must be positive");

        $d5 = virtualinvoke r1.<com.opengamma.analytics.financial.credit.isdastandardmodel.CDSAnalytic: double getProtectionEnd()>();

        $d6 = $d5 * 1.1;

        $b8 = d3 cmpg $d6;

        if $b8 >= 0 goto label15;

        $z6 = 1;

        goto label16;

     label15:
        $z6 = 0;

     label16:
        $r8 = newarray (java.lang.Object)[1];

        $r9 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d3);

        $r8[0] = $r9;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String,java.lang.Object[])>($z6, "Value of annuity of {} is greater than length (in years) of forward CDS. Annuity should be given for unit notional", $r8);

        $r10 = new com.opengamma.analytics.financial.credit.isdastandardmodel.AnnuityForSpreadISDAFunction;

        $r11 = virtualinvoke r2.<com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantYieldCurve: com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantYieldCurve withOffset(double)>(d0);

        specialinvoke $r10.<com.opengamma.analytics.financial.credit.isdastandardmodel.AnnuityForSpreadISDAFunction: void <init>(com.opengamma.analytics.financial.credit.isdastandardmodel.CDSAnalytic,com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantYieldCurve)>(r1, $r11);

        r0.<com.opengamma.analytics.financial.credit.options.BlackIndexOptionPricer: com.opengamma.analytics.financial.credit.isdastandardmodel.AnnuityForSpreadFunction _annuityFunc> = $r10;

        r0.<com.opengamma.analytics.financial.credit.options.BlackIndexOptionPricer: double _expiry> = d0;

        r0.<com.opengamma.analytics.financial.credit.options.BlackIndexOptionPricer: double _coupon> = d1;

        $d7 = virtualinvoke r1.<com.opengamma.analytics.financial.credit.isdastandardmodel.CDSAnalytic: double getCashSettleTime()>();

        $d8 = d0 + $d7;

        $d9 = virtualinvoke r2.<com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantYieldCurve: double getDiscountFactor(double)>($d8);

        r0.<com.opengamma.analytics.financial.credit.options.BlackIndexOptionPricer: double _df> = $d9;

        r0.<com.opengamma.analytics.financial.credit.options.BlackIndexOptionPricer: double _daFwdSpread> = d2;

        r0.<com.opengamma.analytics.financial.credit.options.BlackIndexOptionPricer: double _fAnnuity> = d3;

        $d10 = neg d1;

        $r12 = r0.<com.opengamma.analytics.financial.credit.options.BlackIndexOptionPricer: com.opengamma.analytics.financial.credit.isdastandardmodel.AnnuityForSpreadFunction _annuityFunc>;

        $r13 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(0.0);

        $r14 = virtualinvoke $r12.<com.opengamma.analytics.financial.credit.isdastandardmodel.AnnuityForSpreadFunction: java.lang.Object evaluate(java.lang.Object)>($r13);

        $r15 = (java.lang.Double) $r14;

        $d11 = virtualinvoke $r15.<java.lang.Double: double doubleValue()>();

        $d12 = $d10 * $d11;

        r0.<com.opengamma.analytics.financial.credit.options.BlackIndexOptionPricer: double _minExercisePrice> = $d12;

        $d13 = virtualinvoke r1.<com.opengamma.analytics.financial.credit.isdastandardmodel.CDSAnalytic: double getLGD()>();

        r0.<com.opengamma.analytics.financial.credit.options.BlackIndexOptionPricer: double _maxExercisePrice> = $d13;

        return;
    }

    private static double[] getFwdSpreadAndAnnuity(com.opengamma.analytics.financial.credit.isdastandardmodel.CDSAnalytic, double, com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantYieldCurve, com.opengamma.analytics.financial.credit.index.IntrinsicIndexDataBundle)
    {
        com.opengamma.analytics.financial.credit.isdastandardmodel.CDSAnalytic r0, r5;
        double d0, $d1, $d2;
        com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantYieldCurve r1;
        com.opengamma.analytics.financial.credit.index.IntrinsicIndexDataBundle r2;
        double[] r4;
        com.opengamma.analytics.financial.credit.index.CDSIndexCalculator $r6;

        r0 := @parameter0: com.opengamma.analytics.financial.credit.isdastandardmodel.CDSAnalytic;

        d0 := @parameter1: double;

        r1 := @parameter2: com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantYieldCurve;

        r2 := @parameter3: com.opengamma.analytics.financial.credit.index.IntrinsicIndexDataBundle;

        $r6 = new com.opengamma.analytics.financial.credit.index.CDSIndexCalculator;

        specialinvoke $r6.<com.opengamma.analytics.financial.credit.index.CDSIndexCalculator: void <init>()>();

        r4 = newarray (double)[2];

        r5 = virtualinvoke r0.<com.opengamma.analytics.financial.credit.isdastandardmodel.CDSAnalytic: com.opengamma.analytics.financial.credit.isdastandardmodel.CDSAnalytic withOffset(double)>(d0);

        $d1 = virtualinvoke $r6.<com.opengamma.analytics.financial.credit.index.CDSIndexCalculator: double defaultAdjustedForwardSpread(com.opengamma.analytics.financial.credit.isdastandardmodel.CDSAnalytic,double,com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantYieldCurve,com.opengamma.analytics.financial.credit.index.IntrinsicIndexDataBundle)>(r5, d0, r1, r2);

        r4[0] = $d1;

        $d2 = virtualinvoke $r6.<com.opengamma.analytics.financial.credit.index.CDSIndexCalculator: double indexAnnuity(com.opengamma.analytics.financial.credit.isdastandardmodel.CDSAnalytic,com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantYieldCurve,com.opengamma.analytics.financial.credit.index.IntrinsicIndexDataBundle)>(r5, r1, r2);

        r4[1] = $d2;

        return r4;
    }

    public double getOptionPremium(com.opengamma.analytics.financial.credit.options.IndexOptionStrike, double, boolean)
    {
        com.opengamma.analytics.financial.credit.options.BlackIndexOptionPricer r0;
        com.opengamma.analytics.financial.credit.options.IndexOptionStrike r1;
        double d0, $d1, $d2, $d3, $d4;
        boolean z0, $z1, $z2;
        java.lang.IllegalArgumentException $r3;
        java.lang.StringBuilder $r4, $r5, $r7;
        java.lang.Class $r6;
        java.lang.String $r8;

        r0 := @this: com.opengamma.analytics.financial.credit.options.BlackIndexOptionPricer;

        r1 := @parameter0: com.opengamma.analytics.financial.credit.options.IndexOptionStrike;

        d0 := @parameter1: double;

        z0 := @parameter2: boolean;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "strike");

        $z1 = r1 instanceof com.opengamma.analytics.financial.credit.options.SpreadBasedStrike;

        if $z1 == 0 goto label1;

        $d3 = interfaceinvoke r1.<com.opengamma.analytics.financial.credit.options.IndexOptionStrike: double amount()>();

        $d4 = virtualinvoke r0.<com.opengamma.analytics.financial.credit.options.BlackIndexOptionPricer: double getOptionPriceForSpreadQuotedIndex(double,double,boolean)>($d3, d0, z0);

        return $d4;

     label1:
        $z2 = r1 instanceof com.opengamma.analytics.financial.credit.options.ExerciseAmount;

        if $z2 == 0 goto label2;

        $d1 = interfaceinvoke r1.<com.opengamma.analytics.financial.credit.options.IndexOptionStrike: double amount()>();

        $d2 = virtualinvoke r0.<com.opengamma.analytics.financial.credit.options.BlackIndexOptionPricer: double getOptionPriceForPriceQuotedIndex(double,double,boolean)>($d1, d0, z0);

        return $d2;

     label2:
        $r3 = new java.lang.IllegalArgumentException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("unknow  strike type ");

        $r6 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r8);

        throw $r3;
    }

    public double getOptionPriceForSpreadQuotedIndex(double, double, boolean)
    {
        com.opengamma.analytics.financial.credit.options.BlackIndexOptionPricer r0;
        double d0, d1, d2, $d3, $d4, $d5, $d6;
        boolean z0, $z1;
        byte $b0;
        com.opengamma.analytics.financial.credit.isdastandardmodel.AnnuityForSpreadFunction $r1;
        java.lang.Double $r2, $r4;
        java.lang.Object $r3;

        r0 := @this: com.opengamma.analytics.financial.credit.options.BlackIndexOptionPricer;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        z0 := @parameter2: boolean;

        $b0 = d0 cmpl 0.0;

        if $b0 < 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z1, "strike cannot be negative");

        $d3 = r0.<com.opengamma.analytics.financial.credit.options.BlackIndexOptionPricer: double _coupon>;

        $d4 = d0 - $d3;

        $r1 = r0.<com.opengamma.analytics.financial.credit.options.BlackIndexOptionPricer: com.opengamma.analytics.financial.credit.isdastandardmodel.AnnuityForSpreadFunction _annuityFunc>;

        $r2 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d0);

        $r3 = virtualinvoke $r1.<com.opengamma.analytics.financial.credit.isdastandardmodel.AnnuityForSpreadFunction: java.lang.Object evaluate(java.lang.Object)>($r2);

        $r4 = (java.lang.Double) $r3;

        $d5 = virtualinvoke $r4.<java.lang.Double: double doubleValue()>();

        d2 = $d4 * $d5;

        $d6 = virtualinvoke r0.<com.opengamma.analytics.financial.credit.options.BlackIndexOptionPricer: double getOptionPriceForPriceQuotedIndex(double,double,boolean)>(d2, d1, z0);

        return $d6;
    }

    public double getOptionPriceForPriceQuotedIndex(double, double, boolean)
    {
        com.opengamma.analytics.financial.credit.options.BlackIndexOptionPricer r0;
        double d0, d1, d2, d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16;
        boolean z0, $z1;
        byte $b0, $b1;
        java.lang.Object[] $r1;
        java.lang.Double $r2, $r3, $r4;

        r0 := @this: com.opengamma.analytics.financial.credit.options.BlackIndexOptionPricer;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        z0 := @parameter2: boolean;

        $d4 = r0.<com.opengamma.analytics.financial.credit.options.BlackIndexOptionPricer: double _minExercisePrice>;

        $b0 = d0 cmpl $d4;

        if $b0 < 0 goto label1;

        $d5 = r0.<com.opengamma.analytics.financial.credit.options.BlackIndexOptionPricer: double _maxExercisePrice>;

        $b1 = d0 cmpg $d5;

        if $b1 >= 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        $r1 = newarray (java.lang.Object)[3];

        $d6 = r0.<com.opengamma.analytics.financial.credit.options.BlackIndexOptionPricer: double _minExercisePrice>;

        $r2 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d6);

        $r1[0] = $r2;

        $d7 = r0.<com.opengamma.analytics.financial.credit.options.BlackIndexOptionPricer: double _maxExercisePrice>;

        $r3 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d7);

        $r1[1] = $r3;

        $r4 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d0);

        $r1[2] = $r4;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String,java.lang.Object[])>($z1, "The exercise price must be in the range {} to {} - value of {} is outside this", $r1);

        $d8 = r0.<com.opengamma.analytics.financial.credit.options.BlackIndexOptionPricer: double _coupon>;

        $d9 = r0.<com.opengamma.analytics.financial.credit.options.BlackIndexOptionPricer: double _df>;

        $d10 = d0 * $d9;

        $d11 = r0.<com.opengamma.analytics.financial.credit.options.BlackIndexOptionPricer: double _fAnnuity>;

        $d12 = $d10 / $d11;

        d2 = $d8 + $d12;

        $d13 = r0.<com.opengamma.analytics.financial.credit.options.BlackIndexOptionPricer: double _fAnnuity>;

        $d14 = r0.<com.opengamma.analytics.financial.credit.options.BlackIndexOptionPricer: double _daFwdSpread>;

        $d15 = r0.<com.opengamma.analytics.financial.credit.options.BlackIndexOptionPricer: double _expiry>;

        $d16 = staticinvoke <com.opengamma.analytics.financial.model.volatility.BlackFormulaRepository: double price(double,double,double,double,boolean)>($d14, d2, $d15, d1, z0);

        d3 = $d13 * $d16;

        return d3;
    }

    public double getImpliedVolatility(com.opengamma.analytics.financial.credit.options.IndexOptionStrike, double, boolean)
    {
        com.opengamma.analytics.financial.credit.options.BlackIndexOptionPricer r0;
        com.opengamma.analytics.financial.credit.options.IndexOptionStrike r1;
        double d0, $d1, $d2, $d3, $d4;
        boolean z0, $z1, $z2;
        java.lang.IllegalArgumentException $r3;
        java.lang.StringBuilder $r4, $r5, $r7;
        java.lang.Class $r6;
        java.lang.String $r8;

        r0 := @this: com.opengamma.analytics.financial.credit.options.BlackIndexOptionPricer;

        r1 := @parameter0: com.opengamma.analytics.financial.credit.options.IndexOptionStrike;

        d0 := @parameter1: double;

        z0 := @parameter2: boolean;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "strike");

        $z1 = r1 instanceof com.opengamma.analytics.financial.credit.options.SpreadBasedStrike;

        if $z1 == 0 goto label1;

        $d3 = interfaceinvoke r1.<com.opengamma.analytics.financial.credit.options.IndexOptionStrike: double amount()>();

        $d4 = virtualinvoke r0.<com.opengamma.analytics.financial.credit.options.BlackIndexOptionPricer: double getImpliedVolForSpreadStrike(double,double,boolean)>($d3, d0, z0);

        return $d4;

     label1:
        $z2 = r1 instanceof com.opengamma.analytics.financial.credit.options.ExerciseAmount;

        if $z2 == 0 goto label2;

        $d1 = interfaceinvoke r1.<com.opengamma.analytics.financial.credit.options.IndexOptionStrike: double amount()>();

        $d2 = virtualinvoke r0.<com.opengamma.analytics.financial.credit.options.BlackIndexOptionPricer: double getImpliedVolForExercisePrice(double,double,boolean)>($d1, d0, z0);

        return $d2;

     label2:
        $r3 = new java.lang.IllegalArgumentException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("unknow  strike type ");

        $r6 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r8);

        throw $r3;
    }

    public double getImpliedVolForSpreadStrike(double, double, boolean)
    {
        com.opengamma.analytics.financial.credit.options.BlackIndexOptionPricer r0;
        double d0, d1, d2, $d3, $d4, $d5, $d6;
        boolean z0;
        com.opengamma.analytics.financial.credit.isdastandardmodel.AnnuityForSpreadFunction $r1;
        java.lang.Double $r2, $r4;
        java.lang.Object $r3;

        r0 := @this: com.opengamma.analytics.financial.credit.options.BlackIndexOptionPricer;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        z0 := @parameter2: boolean;

        $d3 = r0.<com.opengamma.analytics.financial.credit.options.BlackIndexOptionPricer: double _coupon>;

        $d4 = d0 - $d3;

        $r1 = r0.<com.opengamma.analytics.financial.credit.options.BlackIndexOptionPricer: com.opengamma.analytics.financial.credit.isdastandardmodel.AnnuityForSpreadFunction _annuityFunc>;

        $r2 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d0);

        $r3 = virtualinvoke $r1.<com.opengamma.analytics.financial.credit.isdastandardmodel.AnnuityForSpreadFunction: java.lang.Object evaluate(java.lang.Object)>($r2);

        $r4 = (java.lang.Double) $r3;

        $d5 = virtualinvoke $r4.<java.lang.Double: double doubleValue()>();

        d2 = $d4 * $d5;

        $d6 = virtualinvoke r0.<com.opengamma.analytics.financial.credit.options.BlackIndexOptionPricer: double getImpliedVolForExercisePrice(double,double,boolean)>(d2, d1, z0);

        return $d6;
    }

    public double getImpliedVolForExercisePrice(double, double, boolean)
    {
        com.opengamma.analytics.financial.credit.options.BlackIndexOptionPricer r0;
        double d0, d1, d2, d3, d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12;
        boolean z0;

        r0 := @this: com.opengamma.analytics.financial.credit.options.BlackIndexOptionPricer;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        z0 := @parameter2: boolean;

        $d9 = r0.<com.opengamma.analytics.financial.credit.options.BlackIndexOptionPricer: double _coupon>;

        $d5 = r0.<com.opengamma.analytics.financial.credit.options.BlackIndexOptionPricer: double _df>;

        $d7 = d0 * $d5;

        $d6 = r0.<com.opengamma.analytics.financial.credit.options.BlackIndexOptionPricer: double _fAnnuity>;

        $d8 = $d7 / $d6;

        d2 = $d9 + $d8;

        $d10 = r0.<com.opengamma.analytics.financial.credit.options.BlackIndexOptionPricer: double _fAnnuity>;

        d3 = d1 / $d10;

        $d12 = r0.<com.opengamma.analytics.financial.credit.options.BlackIndexOptionPricer: double _daFwdSpread>;

        $d11 = r0.<com.opengamma.analytics.financial.credit.options.BlackIndexOptionPricer: double _expiry>;

        d4 = staticinvoke <com.opengamma.analytics.financial.model.volatility.BlackFormulaRepository: double impliedVolatility(double,double,double,double,boolean)>(d3, $d12, d2, $d11, z0);

        return d4;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        java.lang.String $r1;
        org.apache.log4j.Logger $r2;

        $r0 = class "com/opengamma/analytics/financial/credit/options/BlackIndexOptionPricer";

        $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.String getName()>();

        $r2 = staticinvoke <org.apache.log4j.Logger: org.apache.log4j.Logger getLogger(java.lang.String)>($r1);

        <com.opengamma.analytics.financial.credit.options.BlackIndexOptionPricer: org.apache.log4j.Logger LOGGER> = $r2;

        return;
    }
}
