public class com.opengamma.analytics.financial.volatilityswap.RealizedVolatilityCalculator extends java.lang.Object
{

    public void <init>()
    {
        com.opengamma.analytics.financial.volatilityswap.RealizedVolatilityCalculator r0;

        r0 := @this: com.opengamma.analytics.financial.volatilityswap.RealizedVolatilityCalculator;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public double getRealizedVariance(double[])
    {
        com.opengamma.analytics.financial.volatilityswap.RealizedVolatilityCalculator r0;
        double[] r1;
        int i0, $i1, i2;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, d7, d8, d9;
        boolean $z0;

        r0 := @this: com.opengamma.analytics.financial.volatilityswap.RealizedVolatilityCalculator;

        r1 := @parameter0: double[];

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "spotValues");

        i0 = lengthof r1;

        if i0 <= 1 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z0, "Number of spot values should be greater than 1");

        d7 = 0.0;

        i2 = 1;

     label3:
        if i2 >= i0 goto label4;

        $d3 = r1[i2];

        $i1 = i2 - 1;

        $d2 = r1[$i1];

        $d4 = $d3 / $d2;

        $d5 = staticinvoke <java.lang.Math: double log(double)>($d4);

        $d6 = staticinvoke <java.lang.Math: double pow(double,double)>($d5, 2.0);

        d7 = d7 + $d6;

        i2 = i2 + 1;

        goto label3;

     label4:
        $d0 = (double) i0;

        $d1 = $d0 - 1.0;

        d8 = 2520000.0 / $d1;

        d9 = d7 * d8;

        return d9;
    }

    public double getRealizedVolatility(double[])
    {
        com.opengamma.analytics.financial.volatilityswap.RealizedVolatilityCalculator r0;
        double[] r1;
        double d0, $d1;

        r0 := @this: com.opengamma.analytics.financial.volatilityswap.RealizedVolatilityCalculator;

        r1 := @parameter0: double[];

        d0 = virtualinvoke r0.<com.opengamma.analytics.financial.volatilityswap.RealizedVolatilityCalculator: double getRealizedVariance(double[])>(r1);

        $d1 = staticinvoke <java.lang.Math: double sqrt(double)>(d0);

        return $d1;
    }
}
