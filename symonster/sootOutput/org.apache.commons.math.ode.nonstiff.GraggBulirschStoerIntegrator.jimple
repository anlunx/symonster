public class org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator extends org.apache.commons.math.ode.nonstiff.AdaptiveStepsizeIntegrator
{
    private static final java.lang.String METHOD_NAME;
    private int maxOrder;
    private int[] sequence;
    private int[] costPerStep;
    private double[] costPerTimeUnit;
    private double[] optimalStep;
    private double[][] coeff;
    private boolean performTest;
    private int maxChecks;
    private int maxIter;
    private double stabilityReduction;
    private double stepControl1;
    private double stepControl2;
    private double stepControl3;
    private double stepControl4;
    private double orderControl1;
    private double orderControl2;
    private boolean useInterpolationError;
    private int mudif;

    public void <init>(double, double, double, double)
    {
        org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator r0;
        double d0, d1, d2, d3;

        r0 := @this: org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        d2 := @parameter2: double;

        d3 := @parameter3: double;

        specialinvoke r0.<org.apache.commons.math.ode.nonstiff.AdaptiveStepsizeIntegrator: void <init>(java.lang.String,double,double,double,double)>("Gragg-Bulirsch-Stoer", d0, d1, d2, d3);

        virtualinvoke r0.<org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator: void setStabilityCheck(boolean,int,int,double)>(1, -1, -1, -1.0);

        virtualinvoke r0.<org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator: void setStepsizeControl(double,double,double,double)>(-1.0, -1.0, -1.0, -1.0);

        virtualinvoke r0.<org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator: void setOrderControl(int,double,double)>(-1, -1.0, -1.0);

        virtualinvoke r0.<org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator: void setInterpolationControl(boolean,int)>(1, -1);

        return;
    }

    public void <init>(double, double, double[], double[])
    {
        org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator r0;
        double d0, d1;
        double[] r1, r2;

        r0 := @this: org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        r1 := @parameter2: double[];

        r2 := @parameter3: double[];

        specialinvoke r0.<org.apache.commons.math.ode.nonstiff.AdaptiveStepsizeIntegrator: void <init>(java.lang.String,double,double,double[],double[])>("Gragg-Bulirsch-Stoer", d0, d1, r1, r2);

        virtualinvoke r0.<org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator: void setStabilityCheck(boolean,int,int,double)>(1, -1, -1, -1.0);

        virtualinvoke r0.<org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator: void setStepsizeControl(double,double,double,double)>(-1.0, -1.0, -1.0, -1.0);

        virtualinvoke r0.<org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator: void setOrderControl(int,double,double)>(-1, -1.0, -1.0);

        virtualinvoke r0.<org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator: void setInterpolationControl(boolean,int)>(1, -1);

        return;
    }

    public void setStabilityCheck(boolean, int, int, double)
    {
        org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator r0;
        boolean z0;
        int i0, i1, $i4, $i5;
        double d0;
        byte $b2, $b3;

        r0 := @this: org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator;

        z0 := @parameter0: boolean;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        d0 := @parameter3: double;

        r0.<org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator: boolean performTest> = z0;

        if i0 > 0 goto label1;

        $i4 = 2;

        goto label2;

     label1:
        $i4 = i0;

     label2:
        r0.<org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator: int maxIter> = $i4;

        if i1 > 0 goto label3;

        $i5 = 1;

        goto label4;

     label3:
        $i5 = i1;

     label4:
        r0.<org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator: int maxChecks> = $i5;

        $b2 = d0 cmpg 1.0E-4;

        if $b2 < 0 goto label5;

        $b3 = d0 cmpl 0.9999;

        if $b3 <= 0 goto label6;

     label5:
        r0.<org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator: double stabilityReduction> = 0.5;

        goto label7;

     label6:
        r0.<org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator: double stabilityReduction> = d0;

     label7:
        return;
    }

    public void setStepsizeControl(double, double, double, double)
    {
        org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator r0;
        double d0, d1, d2, d3;
        byte $b0, $b1, $b2, $b3, $b4, $b5, $b6, $b7;

        r0 := @this: org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        d2 := @parameter2: double;

        d3 := @parameter3: double;

        $b0 = d0 cmpg 1.0E-4;

        if $b0 < 0 goto label01;

        $b7 = d0 cmpl 0.9999;

        if $b7 <= 0 goto label02;

     label01:
        r0.<org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator: double stepControl1> = 0.65;

        goto label03;

     label02:
        r0.<org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator: double stepControl1> = d0;

     label03:
        $b1 = d1 cmpg 1.0E-4;

        if $b1 < 0 goto label04;

        $b6 = d1 cmpl 0.9999;

        if $b6 <= 0 goto label05;

     label04:
        r0.<org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator: double stepControl2> = 0.94;

        goto label06;

     label05:
        r0.<org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator: double stepControl2> = d1;

     label06:
        $b2 = d2 cmpg 1.0E-4;

        if $b2 < 0 goto label07;

        $b5 = d2 cmpl 0.9999;

        if $b5 <= 0 goto label08;

     label07:
        r0.<org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator: double stepControl3> = 0.02;

        goto label09;

     label08:
        r0.<org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator: double stepControl3> = d2;

     label09:
        $b3 = d3 cmpg 1.0001;

        if $b3 < 0 goto label10;

        $b4 = d3 cmpl 999.9;

        if $b4 <= 0 goto label11;

     label10:
        r0.<org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator: double stepControl4> = 4.0;

        goto label12;

     label11:
        r0.<org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator: double stepControl4> = d3;

     label12:
        return;
    }

    public void setOrderControl(int, double, double)
    {
        org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator r0;
        int i0, $i4;
        double d0, d1;
        byte $b1, $b2, $b3, $b5;

        r0 := @this: org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator;

        i0 := @parameter0: int;

        d0 := @parameter1: double;

        d1 := @parameter2: double;

        if i0 <= 6 goto label1;

        $i4 = i0 % 2;

        if $i4 == 0 goto label2;

     label1:
        r0.<org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator: int maxOrder> = 18;

     label2:
        $b5 = d0 cmpg 1.0E-4;

        if $b5 < 0 goto label3;

        $b3 = d0 cmpl 0.9999;

        if $b3 <= 0 goto label4;

     label3:
        r0.<org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator: double orderControl1> = 0.8;

        goto label5;

     label4:
        r0.<org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator: double orderControl1> = d0;

     label5:
        $b1 = d1 cmpg 1.0E-4;

        if $b1 < 0 goto label6;

        $b2 = d1 cmpl 0.9999;

        if $b2 <= 0 goto label7;

     label6:
        r0.<org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator: double orderControl2> = 0.9;

        goto label8;

     label7:
        r0.<org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator: double orderControl2> = d1;

     label8:
        specialinvoke r0.<org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator: void initializeArrays()>();

        return;
    }

    public void addStepHandler(org.apache.commons.math.ode.sampling.StepHandler)
    {
        org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator r0;
        org.apache.commons.math.ode.sampling.StepHandler r1;

        r0 := @this: org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator;

        r1 := @parameter0: org.apache.commons.math.ode.sampling.StepHandler;

        specialinvoke r0.<org.apache.commons.math.ode.nonstiff.AdaptiveStepsizeIntegrator: void addStepHandler(org.apache.commons.math.ode.sampling.StepHandler)>(r1);

        specialinvoke r0.<org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator: void initializeArrays()>();

        return;
    }

    public void addEventHandler(org.apache.commons.math.ode.events.EventHandler, double, double, int)
    {
        org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator r0;
        org.apache.commons.math.ode.events.EventHandler r1;
        double d0, d1;
        int i0;

        r0 := @this: org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator;

        r1 := @parameter0: org.apache.commons.math.ode.events.EventHandler;

        d0 := @parameter1: double;

        d1 := @parameter2: double;

        i0 := @parameter3: int;

        specialinvoke r0.<org.apache.commons.math.ode.nonstiff.AdaptiveStepsizeIntegrator: void addEventHandler(org.apache.commons.math.ode.events.EventHandler,double,double,int)>(r1, d0, d1, i0);

        specialinvoke r0.<org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator: void initializeArrays()>();

        return;
    }

    private void initializeArrays()
    {
        org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, i18, i19, i20, i21, i22;
        double d0, $d1, $d2, $d3, $d4, $d5;
        int[] $r1, $r2, $r3, $r7, $r8, $r10, $r11, $r14, $r15, $r16, $r17, $r18, $r19;
        double[][] $r4, $r9, $r12;
        double[] $r5, $r6, $r13, $r20;
        boolean $z0;

        r0 := @this: org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator;

        $i1 = r0.<org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator: int maxOrder>;

        i0 = $i1 / 2;

        $r1 = r0.<org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator: int[] sequence>;

        if $r1 == null goto label01;

        $r19 = r0.<org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator: int[] sequence>;

        $i17 = lengthof $r19;

        if $i17 == i0 goto label02;

     label01:
        $r2 = newarray (int)[i0];

        r0.<org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator: int[] sequence> = $r2;

        $r3 = newarray (int)[i0];

        r0.<org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator: int[] costPerStep> = $r3;

        $r4 = newarray (double[])[i0];

        r0.<org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator: double[][] coeff> = $r4;

        $r5 = newarray (double)[i0];

        r0.<org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator: double[] costPerTimeUnit> = $r5;

        $r6 = newarray (double)[i0];

        r0.<org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator: double[] optimalStep> = $r6;

     label02:
        $z0 = virtualinvoke r0.<org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator: boolean requiresDenseOutput()>();

        if $z0 == 0 goto label05;

        i18 = 0;

     label03:
        if i18 >= i0 goto label04;

        $r18 = r0.<org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator: int[] sequence>;

        $i15 = 4 * i18;

        $i16 = $i15 + 2;

        $r18[i18] = $i16;

        i18 = i18 + 1;

        goto label03;

     label04:
        goto label07;

     label05:
        i19 = 0;

     label06:
        if i19 >= i0 goto label07;

        $r17 = r0.<org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator: int[] sequence>;

        $i13 = i19 + 1;

        $i14 = 2 * $i13;

        $r17[i19] = $i14;

        i19 = i19 + 1;

        goto label06;

     label07:
        $r8 = r0.<org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator: int[] costPerStep>;

        $r7 = r0.<org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator: int[] sequence>;

        $i2 = $r7[0];

        $i3 = $i2 + 1;

        $r8[0] = $i3;

        i20 = 1;

     label08:
        if i20 >= i0 goto label09;

        $r16 = r0.<org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator: int[] costPerStep>;

        $r14 = r0.<org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator: int[] costPerStep>;

        $i9 = i20 - 1;

        $i11 = $r14[$i9];

        $r15 = r0.<org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator: int[] sequence>;

        $i10 = $r15[i20];

        $i12 = $i11 + $i10;

        $r16[i20] = $i12;

        i20 = i20 + 1;

        goto label08;

     label09:
        i21 = 0;

     label10:
        if i21 >= i0 goto label15;

        $r9 = r0.<org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator: double[][] coeff>;

        $i8 = i21;

        if i21 <= 0 goto label11;

        $r20 = newarray (double)[i21];

        goto label12;

     label11:
        $r20 = null;

     label12:
        $r9[$i8] = $r20;

        i22 = 0;

     label13:
        if i22 >= i21 goto label14;

        $r10 = r0.<org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator: int[] sequence>;

        $i4 = $r10[i21];

        $d2 = (double) $i4;

        $r11 = r0.<org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator: int[] sequence>;

        $i5 = i21 - i22;

        $i6 = $i5 - 1;

        $i7 = $r11[$i6];

        $d1 = (double) $i7;

        d0 = $d2 / $d1;

        $r12 = r0.<org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator: double[][] coeff>;

        $r13 = $r12[i21];

        $d3 = d0 * d0;

        $d4 = $d3 - 1.0;

        $d5 = 1.0 / $d4;

        $r13[i22] = $d5;

        i22 = i22 + 1;

        goto label13;

     label14:
        i21 = i21 + 1;

        goto label10;

     label15:
        return;
    }

    public void setInterpolationControl(boolean, int)
    {
        org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator r0;
        boolean z0;
        int i0;

        r0 := @this: org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator;

        z0 := @parameter0: boolean;

        i0 := @parameter1: int;

        r0.<org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator: boolean useInterpolationError> = z0;

        if i0 <= 0 goto label1;

        if i0 < 7 goto label2;

     label1:
        r0.<org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator: int mudif> = 4;

        goto label3;

     label2:
        r0.<org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator: int mudif> = i0;

     label3:
        return;
    }

    private void rescale(double[], double[], double[])
    {
        org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator r0;
        double[] r1, r2, r3, $r4, $r5, $r6;
        int $i0, $i1, i2, i3;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, d16, d17;

        r0 := @this: org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator;

        r1 := @parameter0: double[];

        r2 := @parameter1: double[];

        r3 := @parameter2: double[];

        $r4 = r0.<org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator: double[] vecAbsoluteTolerance>;

        if $r4 != null goto label3;

        i2 = 0;

     label1:
        $i1 = lengthof r3;

        if i2 >= $i1 goto label2;

        $d8 = r1[i2];

        $d9 = staticinvoke <org.apache.commons.math.util.FastMath: double abs(double)>($d8);

        $d10 = r2[i2];

        $d11 = staticinvoke <org.apache.commons.math.util.FastMath: double abs(double)>($d10);

        d16 = staticinvoke <org.apache.commons.math.util.FastMath: double max(double,double)>($d9, $d11);

        $d14 = r0.<org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator: double scalAbsoluteTolerance>;

        $d12 = r0.<org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator: double scalRelativeTolerance>;

        $d13 = $d12 * d16;

        $d15 = $d14 + $d13;

        r3[i2] = $d15;

        i2 = i2 + 1;

        goto label1;

     label2:
        goto label5;

     label3:
        i3 = 0;

     label4:
        $i0 = lengthof r3;

        if i3 >= $i0 goto label5;

        $d0 = r1[i3];

        $d1 = staticinvoke <org.apache.commons.math.util.FastMath: double abs(double)>($d0);

        $d2 = r2[i3];

        $d3 = staticinvoke <org.apache.commons.math.util.FastMath: double abs(double)>($d2);

        d17 = staticinvoke <org.apache.commons.math.util.FastMath: double max(double,double)>($d1, $d3);

        $r5 = r0.<org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator: double[] vecAbsoluteTolerance>;

        $d6 = $r5[i3];

        $r6 = r0.<org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator: double[] vecRelativeTolerance>;

        $d4 = $r6[i3];

        $d5 = $d4 * d17;

        $d7 = $d6 + $d5;

        r3[i3] = $d7;

        i3 = i3 + 1;

        goto label4;

     label5:
        return;
    }

    private boolean tryStep(double, double[], double, int, double[], double[][], double[], double[], double[]) throws org.apache.commons.math.ode.DerivativeException
    {
        org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator r0;
        double d0, d1, d2, d3, d4, d5, d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21, $d22, $d23, $d24, $d25, $d26, $d27, $d28, $d29, $d30, $d31, $d32, $d33, d34, d35, d36;
        double[] r1, r2, r4, r5, r6, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i11, $i12, i13, i14, i15, $i16, i17, i18, i19;
        double[][] r3;
        int[] $r7;
        boolean $z0;
        byte $b10;

        r0 := @this: org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator;

        d0 := @parameter0: double;

        r1 := @parameter1: double[];

        d1 := @parameter2: double;

        i0 := @parameter3: int;

        r2 := @parameter4: double[];

        r3 := @parameter5: double[][];

        r4 := @parameter6: double[];

        r5 := @parameter7: double[];

        r6 := @parameter8: double[];

        $r7 = r0.<org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator: int[] sequence>;

        i1 = $r7[i0];

        $d7 = (double) i1;

        d2 = d1 / $d7;

        d3 = 2.0 * d2;

        d34 = d0 + d2;

        i13 = 0;

     label01:
        $i2 = lengthof r1;

        if i13 >= $i2 goto label02;

        $d29 = r1[i13];

        r6[i13] = $d29;

        $d32 = r1[i13];

        $r15 = r3[0];

        $d30 = $r15[i13];

        $d31 = d2 * $d30;

        $d33 = $d32 + $d31;

        r5[i13] = $d33;

        i13 = i13 + 1;

        goto label01;

     label02:
        $r8 = r3[1];

        virtualinvoke r0.<org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator: void computeDerivatives(double,double[],double[])>(d34, r5, $r8);

        i14 = 1;

     label03:
        if i14 >= i1 goto label12;

        $i4 = 2 * i14;

        if $i4 != i1 goto label04;

        $i12 = lengthof r1;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r5, 0, r4, 0, $i12);

     label04:
        d34 = d34 + d2;

        i15 = 0;

     label05:
        $i16 = lengthof r1;

        if i15 >= $i16 goto label06;

        d4 = r5[i15];

        $d27 = r6[i15];

        $r14 = r3[i14];

        $d25 = $r14[i15];

        $d26 = d3 * $d25;

        $d28 = $d27 + $d26;

        r5[i15] = $d28;

        r6[i15] = d4;

        i15 = i15 + 1;

        goto label05;

     label06:
        $i5 = i14 + 1;

        $r10 = r3[$i5];

        virtualinvoke r0.<org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator: void computeDerivatives(double,double[],double[])>(d34, r5, $r10);

        $z0 = r0.<org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator: boolean performTest>;

        if $z0 == 0 goto label11;

        $i6 = r0.<org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator: int maxChecks>;

        if i14 > $i6 goto label11;

        $i7 = r0.<org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator: int maxIter>;

        if i0 >= $i7 goto label11;

        d35 = 0.0;

        i17 = 0;

     label07:
        $i8 = lengthof r2;

        if i17 >= $i8 goto label08;

        $r13 = r3[0];

        $d23 = $r13[i17];

        $d22 = r2[i17];

        d5 = $d23 / $d22;

        $d24 = d5 * d5;

        d35 = d35 + $d24;

        i17 = i17 + 1;

        goto label07;

     label08:
        d36 = 0.0;

        i18 = 0;

     label09:
        $i9 = lengthof r2;

        if i18 >= $i9 goto label10;

        $i11 = i14 + 1;

        $r11 = r3[$i11];

        $d18 = $r11[i18];

        $r12 = r3[0];

        $d17 = $r12[i18];

        $d20 = $d18 - $d17;

        $d19 = r2[i18];

        d6 = $d20 / $d19;

        $d21 = d6 * d6;

        d36 = d36 + $d21;

        i18 = i18 + 1;

        goto label09;

     label10:
        $d15 = staticinvoke <org.apache.commons.math.util.FastMath: double max(double,double)>(1.0E-15, d35);

        $d16 = 4.0 * $d15;

        $b10 = d36 cmpl $d16;

        if $b10 <= 0 goto label11;

        return 0;

     label11:
        i14 = i14 + 1;

        goto label03;

     label12:
        i19 = 0;

     label13:
        $i3 = lengthof r1;

        if i19 >= $i3 goto label14;

        $d9 = r6[i19];

        $d8 = r5[i19];

        $d12 = $d9 + $d8;

        $r9 = r3[i1];

        $d10 = $r9[i19];

        $d11 = d2 * $d10;

        $d13 = $d12 + $d11;

        $d14 = 0.5 * $d13;

        r5[i19] = $d14;

        i19 = i19 + 1;

        goto label13;

     label14:
        return 1;
    }

    private void extrapolate(int, int, double[][], double[])
    {
        org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator r0;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, i14, i15, i16;
        double[][] r1, $r4, $r8;
        double[] r2, $r3, $r5, $r6, $r7, $r9, $r10, $r11, $r12;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13;

        r0 := @this: org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: double[][];

        r2 := @parameter3: double[];

        i14 = 1;

     label1:
        if i14 >= i1 goto label4;

        i15 = 0;

     label2:
        $i5 = lengthof r2;

        if i15 >= $i5 goto label3;

        $i6 = i1 - i14;

        $i7 = $i6 - 1;

        $r12 = r1[$i7];

        $i8 = i1 - i14;

        $r7 = r1[$i8];

        $d12 = $r7[i15];

        $r8 = r0.<org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator: double[][] coeff>;

        $i9 = i1 + i0;

        $r9 = $r8[$i9];

        $i10 = i14 - 1;

        $d10 = $r9[$i10];

        $i11 = i1 - i14;

        $r10 = r1[$i11];

        $d8 = $r10[i15];

        $i12 = i1 - i14;

        $i13 = $i12 - 1;

        $r11 = r1[$i13];

        $d7 = $r11[i15];

        $d9 = $d8 - $d7;

        $d11 = $d10 * $d9;

        $d13 = $d12 + $d11;

        $r12[i15] = $d13;

        i15 = i15 + 1;

        goto label2;

     label3:
        i14 = i14 + 1;

        goto label1;

     label4:
        i16 = 0;

     label5:
        $i2 = lengthof r2;

        if i16 >= $i2 goto label6;

        $r3 = r1[0];

        $d5 = $r3[i16];

        $r4 = r0.<org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator: double[][] coeff>;

        $i3 = i1 + i0;

        $r5 = $r4[$i3];

        $i4 = i1 - 1;

        $d3 = $r5[$i4];

        $r6 = r1[0];

        $d1 = $r6[i16];

        $d0 = r2[i16];

        $d2 = $d1 - $d0;

        $d4 = $d3 * $d2;

        $d6 = $d5 + $d4;

        r2[i16] = $d6;

        i16 = i16 + 1;

        goto label5;

     label6:
        return;
    }

    public double integrate(org.apache.commons.math.ode.FirstOrderDifferentialEquations, double, double[], double, double[]) throws org.apache.commons.math.ode.DerivativeException, org.apache.commons.math.ode.IntegratorException
    {
        org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator r0;
        org.apache.commons.math.ode.FirstOrderDifferentialEquations r1;
        double d0, d1, d3, d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21, $d22, $d23, $d24, $d25, $d26, $d27, $d28, $d29, $d30, $d31, $d32, $d33, $d34, $d35, $d36, $d37, $d38, $d39, $d40, $d41, $d42, $d43, $d44, $d45, $d46, $d47, $d48, $d49, $d50, $d51, $d52, $d53, $d54, $d55, $d56, $d57, $d58, $d59, $d60, $d61, $d62, $d63, $d64, $d65, $d66, $d67, $d68, $d69, $d70, $d71, $d72, $d73, $d74, $d75, $d76, $d77, $d78, $d79, $d80, $d81, $d82, $d83, $d84, $d85, $d86, $d87, $d88, $d89, $d90, $d91, $d92, $d93, $d94, $d95, $d96, $d97, $d98, $d99, $d100, $d101, $d102, $d103, $d104, $d105, $d106, $d107, $d108, $d109, $d110, $d111, $d112, $d113, $d114, $d115, $d116, $d117, $d118, $d119, $d120, $d121, $d122, $d123, $d124, $d125, $d126, $d127, $d128, $d129, $d130, $d131, $d132, $d133, d134, d135, $d136, $d137, $d138, $d139, d140, d141, d142, d143, d144, d145, d146, d147, d148, d149, d150, d151, d152, $d153, $d154, $d155, $d156, d157;
        double[] r2, r3, r4, r5, r6, r7, $r15, $r16, $r17, $r21, $r22, $r25, $r26, $r27, $r30, $r31, $r33, $r34, $r35, $r36, $r37, $r38, $r44, $r46, $r47, $r50, $r52, $r53, $r55, $r56, $r57, $r58, $r60, $r61, $r66, $r67, $r68, $r69, $r72, $r73, $r74, $r78, $r83, $r85, $r86, r89, r92, $r100, $r101, $r102, $r103, $r104, $r106, $r107;
        boolean z0, z1, $z2, $z3, $z4, $z5, z6, z7, z8, z9, $z10, z11, $z12, z13, $z14;
        double[][] r8, r9, $r41, $r42, $r43, $r45, $r49, $r51, $r54, $r80, $r81, $r84, r90, r91, $r99;
        org.apache.commons.math.ode.sampling.StepHandler r10;
        byte $b0, $b18, $b24, $b32, $b34, $b36, $b44, $b72, $b77, $b84, $b86, $b87, $b89, $b90, $b94, $b96, $b97, $b98, $b99, $b100, $b101, $b141;
        int $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i19, $i20, $i21, $i22, $i23, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i33, $i35, $i37, $i38, $i39, $i40, $i41, $i42, $i43, $i45, $i46, $i47, $i48, $i49, $i50, $i51, $i52, $i53, $i54, $i55, $i56, $i57, $i58, $i59, $i60, $i61, $i62, $i63, $i64, $i65, $i66, $i67, $i68, $i69, $i70, $i71, $i73, $i74, $i75, $i76, $i78, $i79, $i80, $i81, $i82, $i83, $i85, $i88, $i91, $i92, $i93, $i95, $i102, $i103, $i104, $i105, $i106, $i107, $i108, $i109, $i110, $i111, $i112, $i113, $i114, $i115, $i116, i117, $i118, $i119, i120, i121, i122, i123, i124, $i125, i126, i127, i128, i129, i130, i131, i132, i133, i134, i135, i136, i137, i138, i139, i140;
        int[] $r11, $r12, $r13, $r14, $r18, $r23, $r24, $r28, $r29, $r32, $r39, $r40, $r48, $r59, $r62, $r63, $r64, $r65, $r70, $r71, $r77, $r79, $r82, $r87;
        org.apache.commons.math.ode.sampling.DummyStepInterpolator $r19;
        java.util.Collection $r20;
        java.lang.Object $r75;
        org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolator $r76, r105;
        double[][][] r88;
        org.apache.commons.math.ode.sampling.AbstractStepInterpolator r93;
        java.util.Iterator r94;

        r0 := @this: org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator;

        r1 := @parameter0: org.apache.commons.math.ode.FirstOrderDifferentialEquations;

        d0 := @parameter1: double;

        r2 := @parameter2: double[];

        d1 := @parameter3: double;

        r3 := @parameter4: double[];

        virtualinvoke r0.<org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator: void sanityChecks(org.apache.commons.math.ode.FirstOrderDifferentialEquations,double,double[],double,double[])>(r1, d0, r2, d1, r3);

        virtualinvoke r0.<org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator: void setEquations(org.apache.commons.math.ode.FirstOrderDifferentialEquations)>(r1);

        virtualinvoke r0.<org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator: void resetEvaluations()>();

        $b0 = d1 cmpl d0;

        if $b0 <= 0 goto label01;

        $z5 = 1;

        goto label02;

     label01:
        $z5 = 0;

     label02:
        z0 = $z5;

        $i1 = lengthof r2;

        r4 = newarray (double)[$i1];

        $i2 = lengthof r2;

        r5 = newarray (double)[$i2];

        $i3 = lengthof r2;

        r6 = newarray (double)[$i3];

        $i4 = lengthof r2;

        r7 = newarray (double)[$i4];

        $r11 = r0.<org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator: int[] sequence>;

        $i5 = lengthof $r11;

        $i6 = $i5 - 1;

        r8 = newarray (double[])[$i6];

        $r12 = r0.<org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator: int[] sequence>;

        $i7 = lengthof $r12;

        $i8 = $i7 - 1;

        r9 = newarray (double[])[$i8];

        i117 = 0;

     label03:
        $r87 = r0.<org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator: int[] sequence>;

        $i118 = lengthof $r87;

        $i119 = $i118 - 1;

        if i117 >= $i119 goto label04;

        $i115 = lengthof r2;

        $r85 = newarray (double)[$i115];

        r8[i117] = $r85;

        $i116 = lengthof r2;

        $r86 = newarray (double)[$i116];

        r9[i117] = $r86;

        i117 = i117 + 1;

        goto label03;

     label04:
        $r13 = r0.<org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator: int[] sequence>;

        $i9 = lengthof $r13;

        r88 = newarray (double[][])[$i9];

        i120 = 0;

     label05:
        $r14 = r0.<org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator: int[] sequence>;

        $i10 = lengthof $r14;

        if i120 >= $i10 goto label08;

        $r79 = r0.<org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator: int[] sequence>;

        $i110 = $r79[i120];

        $i111 = $i110 + 1;

        $r80 = newarray (double[])[$i111];

        r88[i120] = $r80;

        $r81 = r88[i120];

        $r81[0] = r4;

        i121 = 0;

     label06:
        $r82 = r0.<org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator: int[] sequence>;

        $i112 = $r82[i120];

        if i121 >= $i112 goto label07;

        $r84 = r88[i120];

        $i114 = i121 + 1;

        $i113 = lengthof r2;

        $r83 = newarray (double)[$i113];

        $r84[$i114] = $r83;

        i121 = i121 + 1;

        goto label06;

     label07:
        i120 = i120 + 1;

        goto label05;

     label08:
        if r3 == r2 goto label09;

        $i109 = lengthof r2;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r2, 0, r3, 0, $i109);

     label09:
        $i11 = lengthof r2;

        r89 = newarray (double)[$i11];

        r90 = (double[][]) null;

        z1 = virtualinvoke r0.<org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator: boolean requiresDenseOutput()>();

        if z1 == 0 goto label12;

        $r77 = r0.<org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator: int[] sequence>;

        $i104 = lengthof $r77;

        $i105 = 2 * $i104;

        $i106 = 1 + $i105;

        r91 = newarray (double[])[$i106];

        i122 = 0;

     label10:
        $i107 = lengthof r91;

        if i122 >= $i107 goto label11;

        $i108 = lengthof r2;

        $r78 = newarray (double)[$i108];

        r91[i122] = $r78;

        i122 = i122 + 1;

        goto label10;

     label11:
        goto label13;

     label12:
        r91 = newarray (double[])[1];

        $i12 = lengthof r2;

        $r15 = newarray (double)[$i12];

        r91[0] = $r15;

     label13:
        $i13 = r0.<org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator: int mainSetDimension>;

        r92 = newarray (double)[$i13];

        specialinvoke r0.<org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator: void rescale(double[],double[],double[])>(r3, r3, r92);

        $r16 = r0.<org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator: double[] vecRelativeTolerance>;

        if $r16 != null goto label14;

        $d133 = r0.<org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator: double scalRelativeTolerance>;

        goto label15;

     label14:
        $r17 = r0.<org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator: double[] vecRelativeTolerance>;

        $d133 = $r17[0];

     label15:
        $d5 = staticinvoke <org.apache.commons.math.util.FastMath: double max(double,double)>(1.0E-10, $d133);

        d3 = staticinvoke <org.apache.commons.math.util.FastMath: double log10(double)>($d5);

        $r18 = r0.<org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator: int[] sequence>;

        $i14 = lengthof $r18;

        $i15 = $i14 - 2;

        $d6 = 0.6 * d3;

        $d7 = 0.5 - $d6;

        $d8 = staticinvoke <org.apache.commons.math.util.FastMath: double floor(double)>($d7);

        $i16 = (int) $d8;

        $i17 = staticinvoke <org.apache.commons.math.util.FastMath: int min(int,int)>($i15, $i16);

        i123 = staticinvoke <org.apache.commons.math.util.FastMath: int max(int,int)>(1, $i17);

        if z1 == 0 goto label16;

        $r76 = new org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolator;

        specialinvoke $r76.<org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolator: void <init>(double[],double[],double[],double[],double[][],boolean)>(r3, r4, r5, r89, r91, z0);

        r93 = $r76;

        goto label17;

     label16:
        $r19 = new org.apache.commons.math.ode.sampling.DummyStepInterpolator;

        specialinvoke $r19.<org.apache.commons.math.ode.sampling.DummyStepInterpolator: void <init>(double[],double[],boolean)>(r3, r89, z0);

        r93 = $r19;

     label17:
        virtualinvoke r93.<org.apache.commons.math.ode.sampling.AbstractStepInterpolator: void storeTime(double)>(d0);

        r0.<org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator: double stepStart> = d0;

        d134 = 0.0;

        d135 = 1.7976931348623157E308;

        z6 = 0;

        z7 = 1;

        z8 = 1;

        z9 = 0;

        $r20 = r0.<org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator: java.util.Collection stepHandlers>;

        r94 = interfaceinvoke $r20.<java.util.Collection: java.util.Iterator iterator()>();

     label18:
        $z10 = interfaceinvoke r94.<java.util.Iterator: boolean hasNext()>();

        if $z10 == 0 goto label19;

        $r75 = interfaceinvoke r94.<java.util.Iterator: java.lang.Object next()>();

        r10 = (org.apache.commons.math.ode.sampling.StepHandler) $r75;

        interfaceinvoke r10.<org.apache.commons.math.ode.sampling.StepHandler: void reset()>();

        goto label18;

     label19:
        virtualinvoke r0.<org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator: void setStateInitialized(boolean)>(0);

        $r21 = r0.<org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator: double[] costPerTimeUnit>;

        $r21[0] = 0.0;

        r0.<org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator: boolean isLastStep> = 0;

     label20:
        z11 = 0;

        if z8 == 0 goto label23;

        virtualinvoke r93.<org.apache.commons.math.ode.sampling.AbstractStepInterpolator: void shift()>();

        if z9 != 0 goto label21;

        $d132 = r0.<org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator: double stepStart>;

        virtualinvoke r0.<org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator: void computeDerivatives(double,double[],double[])>($d132, r3, r4);

     label21:
        if z7 == 0 goto label22;

        $i102 = 2 * i123;

        $i103 = $i102 + 1;

        $d131 = r0.<org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator: double stepStart>;

        d134 = virtualinvoke r0.<org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator: double initializeStep(org.apache.commons.math.ode.FirstOrderDifferentialEquations,boolean,int,double[],double,double[],double[],double[],double[])>(r1, z0, $i103, r92, $d131, r3, r4, r6, r7);

     label22:
        z8 = 0;

     label23:
        r0.<org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator: double stepSize> = d134;

        if z0 == 0 goto label24;

        $d129 = r0.<org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator: double stepStart>;

        $d128 = r0.<org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator: double stepSize>;

        $d130 = $d129 + $d128;

        $b101 = $d130 cmpl d1;

        if $b101 > 0 goto label25;

     label24:
        if z0 != 0 goto label26;

        $d124 = r0.<org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator: double stepStart>;

        $d123 = r0.<org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator: double stepSize>;

        $d125 = $d124 + $d123;

        $b100 = $d125 cmpg d1;

        if $b100 >= 0 goto label26;

     label25:
        $d126 = r0.<org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator: double stepStart>;

        $d127 = d1 - $d126;

        r0.<org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator: double stepSize> = $d127;

     label26:
        $d136 = r0.<org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator: double stepStart>;

        $d137 = r0.<org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator: double stepSize>;

        d4 = $d136 + $d137;

        if z0 == 0 goto label28;

        $b99 = d4 cmpl d1;

        if $b99 < 0 goto label27;

        $z12 = 1;

        goto label30;

     label27:
        $z12 = 0;

        goto label30;

     label28:
        $b18 = d4 cmpg d1;

        if $b18 > 0 goto label29;

        $z12 = 1;

        goto label30;

     label29:
        $z12 = 0;

     label30:
        r0.<org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator: boolean isLastStep> = $z12;

        i124 = -1;

        z13 = 1;

     label31:
        if z13 == 0 goto label55;

        i124 = i124 + 1;

        $d138 = r0.<org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator: double stepStart>;

        $d139 = r0.<org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator: double stepSize>;

        $i125 = i124;

        $r99 = r88[i124];

        if i124 != 0 goto label32;

        $r100 = r91[0];

        goto label33;

     label32:
        $i68 = i124 - 1;

        $r100 = r8[$i68];

     label33:
        if i124 != 0 goto label34;

        $r101 = r5;

        goto label35;

     label34:
        $i69 = i124 - 1;

        $r101 = r9[$i69];

     label35:
        $z14 = specialinvoke r0.<org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator: boolean tryStep(double,double[],double,int,double[],double[][],double[],double[],double[])>($d138, r3, $d139, $i125, r92, $r99, $r100, $r101, r6);

        if $z14 != 0 goto label36;

        $d120 = r0.<org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator: double stepSize>;

        $d119 = r0.<org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator: double stabilityReduction>;

        $d121 = $d120 * $d119;

        $d122 = virtualinvoke r0.<org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator: double filterStep(double,boolean,boolean)>($d121, z0, 0);

        d134 = staticinvoke <org.apache.commons.math.util.FastMath: double abs(double)>($d122);

        z11 = 1;

        z13 = 0;

        goto label31;

     label36:
        if i124 <= 0 goto label31;

        specialinvoke r0.<org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator: void extrapolate(int,int,double[][],double[])>(0, i124, r9, r5);

        specialinvoke r0.<org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator: void rescale(double[],double[],double[])>(r3, r5, r92);

        d140 = 0.0;

        i126 = 0;

     label37:
        $i70 = r0.<org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator: int mainSetDimension>;

        if i126 >= $i70 goto label38;

        $d114 = r5[i126];

        $r74 = r9[0];

        $d113 = $r74[i126];

        $d115 = $d114 - $d113;

        $d116 = staticinvoke <org.apache.commons.math.util.FastMath: double abs(double)>($d115);

        $d117 = r92[i126];

        d141 = $d116 / $d117;

        $d118 = d141 * d141;

        d140 = d140 + $d118;

        i126 = i126 + 1;

        goto label37;

     label38:
        $i71 = r0.<org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator: int mainSetDimension>;

        $d69 = (double) $i71;

        $d70 = d140 / $d69;

        d142 = staticinvoke <org.apache.commons.math.util.FastMath: double sqrt(double)>($d70);

        $b72 = d142 cmpl 1.0E15;

        if $b72 > 0 goto label39;

        if i124 <= 1 goto label40;

        $b98 = d142 cmpl d135;

        if $b98 <= 0 goto label40;

     label39:
        $d72 = r0.<org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator: double stepSize>;

        $d71 = r0.<org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator: double stabilityReduction>;

        $d73 = $d72 * $d71;

        $d74 = virtualinvoke r0.<org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator: double filterStep(double,boolean,boolean)>($d73, z0, 0);

        d134 = staticinvoke <org.apache.commons.math.util.FastMath: double abs(double)>($d74);

        z11 = 1;

        z13 = 0;

        goto label31;

     label40:
        $d75 = 4.0 * d142;

        d135 = staticinvoke <org.apache.commons.math.util.FastMath: double max(double,double)>($d75, 1.0);

        $i73 = 2 * i124;

        $i74 = $i73 + 1;

        $d76 = (double) $i74;

        d143 = 1.0 / $d76;

        $d79 = r0.<org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator: double stepControl2>;

        $d77 = r0.<org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator: double stepControl1>;

        $d78 = d142 / $d77;

        $d80 = staticinvoke <org.apache.commons.math.util.FastMath: double pow(double,double)>($d78, d143);

        d144 = $d79 / $d80;

        $d81 = r0.<org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator: double stepControl3>;

        d145 = staticinvoke <org.apache.commons.math.util.FastMath: double pow(double,double)>($d81, d143);

        $d82 = r0.<org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator: double stepControl4>;

        $d84 = d145 / $d82;

        $d83 = 1.0 / d145;

        $d85 = staticinvoke <org.apache.commons.math.util.FastMath: double min(double,double)>($d83, d144);

        d146 = staticinvoke <org.apache.commons.math.util.FastMath: double max(double,double)>($d84, $d85);

        $r58 = r0.<org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator: double[] optimalStep>;

        $d86 = r0.<org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator: double stepSize>;

        $d87 = $d86 * d146;

        $d88 = virtualinvoke r0.<org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator: double filterStep(double,boolean,boolean)>($d87, z0, 1);

        $d89 = staticinvoke <org.apache.commons.math.util.FastMath: double abs(double)>($d88);

        $r58[i124] = $d89;

        $r61 = r0.<org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator: double[] costPerTimeUnit>;

        $r59 = r0.<org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator: int[] costPerStep>;

        $i75 = $r59[i124];

        $d91 = (double) $i75;

        $r60 = r0.<org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator: double[] optimalStep>;

        $d90 = $r60[i124];

        $d92 = $d91 / $d90;

        $r61[i124] = $d92;

        $i76 = i124 - i123;

        tableswitch($i76)
        {
            case -1: goto label41;
            case 0: goto label45;
            case 1: goto label49;
            default: goto label52;
        };

     label41:
        if i123 <= 1 goto label54;

        if z6 != 0 goto label54;

        $b77 = d142 cmpg 1.0;

        if $b77 > 0 goto label42;

        z13 = 0;

        goto label54;

     label42:
        $r62 = r0.<org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator: int[] sequence>;

        $i78 = $r62[i123];

        $d94 = (double) $i78;

        $r63 = r0.<org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator: int[] sequence>;

        $i79 = i123 + 1;

        $i80 = $r63[$i79];

        $d93 = (double) $i80;

        $d96 = $d94 * $d93;

        $r64 = r0.<org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator: int[] sequence>;

        $i82 = $r64[0];

        $r65 = r0.<org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator: int[] sequence>;

        $i81 = $r65[0];

        $i83 = $i82 * $i81;

        $d95 = (double) $i83;

        d147 = $d96 / $d95;

        $d97 = d147 * d147;

        $b84 = d142 cmpl $d97;

        if $b84 <= 0 goto label44;

        z11 = 1;

        z13 = 0;

        i123 = i124;

        if i124 <= 1 goto label43;

        $r66 = r0.<org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator: double[] costPerTimeUnit>;

        $i85 = i124 - 1;

        $d101 = $r66[$i85];

        $d99 = r0.<org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator: double orderControl1>;

        $r67 = r0.<org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator: double[] costPerTimeUnit>;

        $d98 = $r67[i124];

        $d100 = $d99 * $d98;

        $b86 = $d101 cmpg $d100;

        if $b86 >= 0 goto label43;

        i123 = i124 + -1;

     label43:
        $r102 = r0.<org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator: double[] optimalStep>;

        d134 = $r102[i123];

     label44:
        goto label54;

     label45:
        $b90 = d142 cmpg 1.0;

        if $b90 > 0 goto label46;

        z13 = 0;

        goto label54;

     label46:
        $r70 = r0.<org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator: int[] sequence>;

        $i91 = i124 + 1;

        $i92 = $r70[$i91];

        $d107 = (double) $i92;

        $r71 = r0.<org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator: int[] sequence>;

        $i93 = $r71[0];

        $d106 = (double) $i93;

        d148 = $d107 / $d106;

        $d108 = d148 * d148;

        $b94 = d142 cmpl $d108;

        if $b94 <= 0 goto label48;

        z11 = 1;

        z13 = 0;

        if i123 <= 1 goto label47;

        $r72 = r0.<org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator: double[] costPerTimeUnit>;

        $i95 = i123 - 1;

        $d112 = $r72[$i95];

        $d110 = r0.<org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator: double orderControl1>;

        $r73 = r0.<org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator: double[] costPerTimeUnit>;

        $d109 = $r73[i123];

        $d111 = $d110 * $d109;

        $b96 = $d112 cmpg $d111;

        if $b96 >= 0 goto label47;

        i123 = i123 + -1;

     label47:
        $r103 = r0.<org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator: double[] optimalStep>;

        d134 = $r103[i123];

     label48:
        goto label54;

     label49:
        $b87 = d142 cmpl 1.0;

        if $b87 <= 0 goto label51;

        z11 = 1;

        if i123 <= 1 goto label50;

        $r68 = r0.<org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator: double[] costPerTimeUnit>;

        $i88 = i123 - 1;

        $d105 = $r68[$i88];

        $d103 = r0.<org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator: double orderControl1>;

        $r69 = r0.<org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator: double[] costPerTimeUnit>;

        $d102 = $r69[i123];

        $d104 = $d103 * $d102;

        $b89 = $d105 cmpg $d104;

        if $b89 >= 0 goto label50;

        i123 = i123 + -1;

     label50:
        $r104 = r0.<org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator: double[] optimalStep>;

        d134 = $r104[i123];

     label51:
        z13 = 0;

        goto label54;

     label52:
        if z7 != 0 goto label53;

        $z4 = r0.<org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator: boolean isLastStep>;

        if $z4 == 0 goto label54;

     label53:
        $b97 = d142 cmpg 1.0;

        if $b97 > 0 goto label54;

        z13 = 0;

     label54:
        goto label31;

     label55:
        if z11 != 0 goto label56;

        $d67 = r0.<org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator: double stepStart>;

        $d66 = r0.<org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator: double stepSize>;

        $d68 = $d67 + $d66;

        virtualinvoke r0.<org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator: void computeDerivatives(double,double[],double[])>($d68, r5, r89);

     label56:
        d149 = virtualinvoke r0.<org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator: double getMaxStep()>();

        if z1 == 0 goto label75;

        if z11 != 0 goto label75;

        i127 = 1;

     label57:
        if i127 > i124 goto label58;

        $r57 = r91[0];

        specialinvoke r0.<org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator: void extrapolate(int,int,double[][],double[])>(0, i127, r8, $r57);

        i127 = i127 + 1;

        goto label57;

     label58:
        $i41 = 2 * i124;

        $i40 = r0.<org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator: int mudif>;

        $i42 = $i41 - $i40;

        i128 = $i42 + 3;

        i129 = 0;

     label59:
        if i129 >= i128 goto label74;

        i130 = i129 / 2;

        $r40 = r0.<org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator: int[] sequence>;

        $i45 = $r40[i130];

        $d50 = (double) $i45;

        $d52 = 0.5 * $d50;

        $d51 = (double) i129;

        d150 = staticinvoke <org.apache.commons.math.util.FastMath: double pow(double,double)>($d52, $d51);

        $r41 = r88[i130];

        $i46 = lengthof $r41;

        i131 = $i46 / 2;

        i132 = 0;

     label60:
        $i47 = lengthof r2;

        if i132 >= $i47 goto label61;

        $i66 = i129 + 1;

        $r56 = r91[$i66];

        $r54 = r88[i130];

        $i67 = i131 + i129;

        $r55 = $r54[$i67];

        $d64 = $r55[i132];

        $d65 = d150 * $d64;

        $r56[i132] = $d65;

        i132 = i132 + 1;

        goto label60;

     label61:
        i133 = 1;

     label62:
        $i48 = i124 - i130;

        if i133 > $i48 goto label65;

        $r48 = r0.<org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator: int[] sequence>;

        $i57 = i133 + i130;

        $i58 = $r48[$i57];

        $d59 = (double) $i58;

        $d61 = 0.5 * $d59;

        $d60 = (double) i129;

        d151 = staticinvoke <org.apache.commons.math.util.FastMath: double pow(double,double)>($d61, $d60);

        $i59 = i130 + i133;

        $r49 = r88[$i59];

        $i60 = lengthof $r49;

        i134 = $i60 / 2;

        i135 = 0;

     label63:
        $i61 = lengthof r2;

        if i135 >= $i61 goto label64;

        $i63 = i133 - 1;

        $r53 = r8[$i63];

        $i64 = i130 + i133;

        $r51 = r88[$i64];

        $i65 = i134 + i129;

        $r52 = $r51[$i65];

        $d62 = $r52[i135];

        $d63 = d151 * $d62;

        $r53[i135] = $d63;

        i135 = i135 + 1;

        goto label63;

     label64:
        $i62 = i129 + 1;

        $r50 = r91[$i62];

        specialinvoke r0.<org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator: void extrapolate(int,int,double[][],double[])>(i130, i133, r8, $r50);

        i133 = i133 + 1;

        goto label62;

     label65:
        i136 = 0;

     label66:
        $i49 = lengthof r2;

        if i136 >= $i49 goto label67;

        $i56 = i129 + 1;

        $r47 = r91[$i56];

        $d57 = $r47[i136];

        $d56 = r0.<org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator: double stepSize>;

        $d58 = $d57 * $d56;

        $r47[i136] = $d58;

        i136 = i136 + 1;

        goto label66;

     label67:
        $i50 = i129 + 1;

        i137 = $i50 / 2;

     label68:
        if i137 > i124 goto label73;

        $r42 = r88[i137];

        $i51 = lengthof $r42;

        i138 = $i51 - 1;

     label69:
        $i52 = i129 + 1;

        $i53 = 2 * $i52;

        if i138 < $i53 goto label72;

        i139 = 0;

     label70:
        $i54 = lengthof r2;

        if i139 >= $i54 goto label71;

        $r43 = r88[i137];

        $r44 = $r43[i138];

        $d54 = $r44[i139];

        $r45 = r88[i137];

        $i55 = i138 - 2;

        $r46 = $r45[$i55];

        $d53 = $r46[i139];

        $d55 = $d54 - $d53;

        $r44[i139] = $d55;

        i139 = i139 + 1;

        goto label70;

     label71:
        i138 = i138 + -1;

        goto label69;

     label72:
        i137 = i137 + 1;

        goto label68;

     label73:
        i129 = i129 + 1;

        goto label59;

     label74:
        if i128 < 0 goto label75;

        r105 = (org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolator) r93;

        $d43 = r0.<org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator: double stepSize>;

        virtualinvoke r105.<org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolator: void computeCoefficients(int,double)>(i128, $d43);

        $z3 = r0.<org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator: boolean useInterpolationError>;

        if $z3 == 0 goto label75;

        d152 = virtualinvoke r105.<org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolator: double estimateError(double[])>(r92);

        $d46 = r0.<org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator: double stepSize>;

        $i43 = i128 + 4;

        $d44 = (double) $i43;

        $d45 = 1.0 / $d44;

        $d47 = staticinvoke <org.apache.commons.math.util.FastMath: double pow(double,double)>(d152, $d45);

        $d48 = staticinvoke <org.apache.commons.math.util.FastMath: double max(double,double)>($d47, 0.01);

        $d49 = $d46 / $d48;

        d149 = staticinvoke <org.apache.commons.math.util.FastMath: double abs(double)>($d49);

        $b44 = d152 cmpl 10.0;

        if $b44 <= 0 goto label75;

        d134 = d149;

        z11 = 1;

     label75:
        if z11 != 0 goto label86;

        $d10 = r0.<org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator: double stepStart>;

        $d9 = r0.<org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator: double stepSize>;

        $d11 = $d10 + $d9;

        virtualinvoke r93.<org.apache.commons.math.ode.sampling.AbstractStepInterpolator: void storeTime(double)>($d11);

        $d12 = virtualinvoke r0.<org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator: double acceptStep(org.apache.commons.math.ode.sampling.AbstractStepInterpolator,double[],double[],double)>(r93, r5, r89, d1);

        r0.<org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator: double stepStart> = $d12;

        $d13 = r0.<org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator: double stepStart>;

        virtualinvoke r93.<org.apache.commons.math.ode.sampling.AbstractStepInterpolator: void storeTime(double)>($d13);

        $i19 = lengthof r2;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r5, 0, r3, 0, $i19);

        $i20 = lengthof r2;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r89, 0, r4, 0, $i20);

        z9 = 1;

        if i124 != 1 goto label76;

        i140 = 2;

        if z6 == 0 goto label80;

        i140 = 1;

        goto label80;

     label76:
        if i124 > i123 goto label78;

        i140 = i124;

        $r35 = r0.<org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator: double[] costPerTimeUnit>;

        $i33 = i124 - 1;

        $d38 = $r35[$i33];

        $d36 = r0.<org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator: double orderControl1>;

        $r36 = r0.<org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator: double[] costPerTimeUnit>;

        $d35 = $r36[i124];

        $d37 = $d36 * $d35;

        $b34 = $d38 cmpg $d37;

        if $b34 >= 0 goto label77;

        i140 = i124 - 1;

        goto label80;

     label77:
        $r37 = r0.<org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator: double[] costPerTimeUnit>;

        $d42 = $r37[i124];

        $d40 = r0.<org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator: double orderControl2>;

        $r38 = r0.<org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator: double[] costPerTimeUnit>;

        $i35 = i124 - 1;

        $d39 = $r38[$i35];

        $d41 = $d40 * $d39;

        $b36 = $d42 cmpg $d41;

        if $b36 >= 0 goto label80;

        $i39 = i124 + 1;

        $r39 = r0.<org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator: int[] sequence>;

        $i37 = lengthof $r39;

        $i38 = $i37 - 2;

        i140 = staticinvoke <org.apache.commons.math.util.FastMath: int min(int,int)>($i39, $i38);

        goto label80;

     label78:
        i140 = i124 - 1;

        if i124 <= 2 goto label79;

        $r33 = r0.<org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator: double[] costPerTimeUnit>;

        $i30 = i124 - 2;

        $d34 = $r33[$i30];

        $d32 = r0.<org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator: double orderControl1>;

        $r34 = r0.<org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator: double[] costPerTimeUnit>;

        $i31 = i124 - 1;

        $d31 = $r34[$i31];

        $d33 = $d32 * $d31;

        $b32 = $d34 cmpg $d33;

        if $b32 >= 0 goto label79;

        i140 = i124 - 2;

     label79:
        $r106 = r0.<org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator: double[] costPerTimeUnit>;

        $d153 = $r106[i124];

        $d154 = r0.<org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator: double orderControl2>;

        $r107 = r0.<org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator: double[] costPerTimeUnit>;

        $d155 = $r107[i140];

        $d156 = $d154 * $d155;

        $b141 = $d153 cmpg $d156;

        if $b141 >= 0 goto label80;

        $r32 = r0.<org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator: int[] sequence>;

        $i28 = lengthof $r32;

        $i29 = $i28 - 2;

        i140 = staticinvoke <org.apache.commons.math.util.FastMath: int min(int,int)>(i124, $i29);

     label80:
        if z6 == 0 goto label81;

        i123 = staticinvoke <org.apache.commons.math.util.FastMath: int min(int,int)>(i140, i124);

        $d28 = r0.<org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator: double stepSize>;

        $d29 = staticinvoke <org.apache.commons.math.util.FastMath: double abs(double)>($d28);

        $r31 = r0.<org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator: double[] optimalStep>;

        $d30 = $r31[i123];

        d134 = staticinvoke <org.apache.commons.math.util.FastMath: double min(double,double)>($d29, $d30);

        goto label85;

     label81:
        if i140 > i124 goto label82;

        $r30 = r0.<org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator: double[] optimalStep>;

        d134 = $r30[i140];

        goto label84;

     label82:
        if i124 >= i123 goto label83;

        $r25 = r0.<org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator: double[] costPerTimeUnit>;

        $d22 = $r25[i124];

        $d20 = r0.<org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator: double orderControl2>;

        $r26 = r0.<org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator: double[] costPerTimeUnit>;

        $i23 = i124 - 1;

        $d19 = $r26[$i23];

        $d21 = $d20 * $d19;

        $b24 = $d22 cmpg $d21;

        if $b24 >= 0 goto label83;

        $r27 = r0.<org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator: double[] optimalStep>;

        $d24 = $r27[i124];

        $r28 = r0.<org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator: int[] costPerStep>;

        $i25 = i140 + 1;

        $i26 = $r28[$i25];

        $d23 = (double) $i26;

        $d26 = $d24 * $d23;

        $r29 = r0.<org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator: int[] costPerStep>;

        $i27 = $r29[i124];

        $d25 = (double) $i27;

        $d27 = $d26 / $d25;

        d134 = virtualinvoke r0.<org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator: double filterStep(double,boolean,boolean)>($d27, z0, 0);

        goto label84;

     label83:
        $r22 = r0.<org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator: double[] optimalStep>;

        $d15 = $r22[i124];

        $r23 = r0.<org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator: int[] costPerStep>;

        $i21 = $r23[i140];

        $d14 = (double) $i21;

        $d17 = $d15 * $d14;

        $r24 = r0.<org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator: int[] costPerStep>;

        $i22 = $r24[i124];

        $d16 = (double) $i22;

        $d18 = $d17 / $d16;

        d134 = virtualinvoke r0.<org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator: double filterStep(double,boolean,boolean)>($d18, z0, 0);

     label84:
        i123 = i140;

     label85:
        z8 = 1;

     label86:
        d134 = staticinvoke <org.apache.commons.math.util.FastMath: double min(double,double)>(d134, d149);

        if z0 != 0 goto label87;

        d134 = neg d134;

     label87:
        z7 = 0;

        if z11 == 0 goto label88;

        r0.<org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator: boolean isLastStep> = 0;

        z6 = 1;

        goto label89;

     label88:
        z6 = 0;

     label89:
        $z2 = r0.<org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator: boolean isLastStep>;

        if $z2 == 0 goto label20;

        d157 = r0.<org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator: double stepStart>;

        virtualinvoke r0.<org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator: void resetInternalState()>();

        return d157;
    }

    public static void <clinit>()
    {
        <org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator: java.lang.String METHOD_NAME> = "Gragg-Bulirsch-Stoer";

        return;
    }
}
