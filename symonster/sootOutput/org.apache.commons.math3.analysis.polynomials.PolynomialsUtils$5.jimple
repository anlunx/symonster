final class org.apache.commons.math3.analysis.polynomials.PolynomialsUtils$5 extends java.lang.Object implements org.apache.commons.math3.analysis.polynomials.PolynomialsUtils$RecurrenceCoefficientsGenerator
{
    final int val$v;
    final int val$w;

    void <init>(int, int)
    {
        org.apache.commons.math3.analysis.polynomials.PolynomialsUtils$5 r0;
        int i0, i1;

        r0 := @this: org.apache.commons.math3.analysis.polynomials.PolynomialsUtils$5;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r0.<org.apache.commons.math3.analysis.polynomials.PolynomialsUtils$5: int val$v> = i0;

        r0.<org.apache.commons.math3.analysis.polynomials.PolynomialsUtils$5: int val$w> = i1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public org.apache.commons.math3.fraction.BigFraction[] generate(int)
    {
        org.apache.commons.math3.analysis.polynomials.PolynomialsUtils$5 r0;
        int i0, i1, i2, i3, i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, i29, i30;
        org.apache.commons.math3.fraction.BigFraction[] $r1;
        org.apache.commons.math3.fraction.BigFraction $r2, $r3, $r4;

        r0 := @this: org.apache.commons.math3.analysis.polynomials.PolynomialsUtils$5;

        i29 := @parameter0: int;

        i30 = i29 + 1;

        $i5 = r0.<org.apache.commons.math3.analysis.polynomials.PolynomialsUtils$5: int val$v>;

        $i7 = i30 + $i5;

        $i6 = r0.<org.apache.commons.math3.analysis.polynomials.PolynomialsUtils$5: int val$w>;

        i0 = $i7 + $i6;

        i1 = i0 + i30;

        i2 = i1 - 1;

        i3 = i1 - 2;

        $i8 = 2 * i30;

        $i9 = $i8 * i0;

        i4 = $i9 * i3;

        $r1 = newarray (org.apache.commons.math3.fraction.BigFraction)[3];

        $r2 = new org.apache.commons.math3.fraction.BigFraction;

        $i11 = r0.<org.apache.commons.math3.analysis.polynomials.PolynomialsUtils$5: int val$v>;

        $i10 = r0.<org.apache.commons.math3.analysis.polynomials.PolynomialsUtils$5: int val$v>;

        $i15 = $i11 * $i10;

        $i13 = r0.<org.apache.commons.math3.analysis.polynomials.PolynomialsUtils$5: int val$w>;

        $i12 = r0.<org.apache.commons.math3.analysis.polynomials.PolynomialsUtils$5: int val$w>;

        $i14 = $i13 * $i12;

        $i16 = $i15 - $i14;

        $i17 = i2 * $i16;

        specialinvoke $r2.<org.apache.commons.math3.fraction.BigFraction: void <init>(int,int)>($i17, i4);

        $r1[0] = $r2;

        $r3 = new org.apache.commons.math3.fraction.BigFraction;

        $i18 = i2 * i1;

        $i19 = $i18 * i3;

        specialinvoke $r3.<org.apache.commons.math3.fraction.BigFraction: void <init>(int,int)>($i19, i4);

        $r1[1] = $r3;

        $r4 = new org.apache.commons.math3.fraction.BigFraction;

        $i20 = r0.<org.apache.commons.math3.analysis.polynomials.PolynomialsUtils$5: int val$v>;

        $i21 = i30 + $i20;

        $i22 = $i21 - 1;

        $i26 = 2 * $i22;

        $i23 = r0.<org.apache.commons.math3.analysis.polynomials.PolynomialsUtils$5: int val$w>;

        $i24 = i30 + $i23;

        $i25 = $i24 - 1;

        $i27 = $i26 * $i25;

        $i28 = $i27 * i1;

        specialinvoke $r4.<org.apache.commons.math3.fraction.BigFraction: void <init>(int,int)>($i28, i4);

        $r1[2] = $r4;

        return $r1;
    }
}
