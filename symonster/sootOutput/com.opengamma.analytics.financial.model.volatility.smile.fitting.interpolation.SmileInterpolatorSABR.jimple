public class com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolatorSABR extends com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolator
{
    private static final double DEFAULT_BETA;
    private static final com.opengamma.analytics.financial.model.volatility.smile.function.VolatilityFunctionProvider DEFAULT_SABR;
    private static final double FIT_ERROR;
    private static final int MAX_TRY;
    private static final int MAX_COUNT;
    private final double _beta;
    private final boolean _externalBeta;

    public void <init>()
    {
        com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolatorSABR r0;
        com.opengamma.analytics.financial.model.volatility.smile.function.VolatilityFunctionProvider $r1;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolatorSABR;

        $r1 = <com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolatorSABR: com.opengamma.analytics.financial.model.volatility.smile.function.VolatilityFunctionProvider DEFAULT_SABR>;

        specialinvoke r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolatorSABR: void <init>(com.opengamma.analytics.financial.model.volatility.smile.function.VolatilityFunctionProvider)>($r1);

        return;
    }

    public void <init>(double)
    {
        com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolatorSABR r0;
        double d0;
        com.opengamma.analytics.financial.model.volatility.smile.function.VolatilityFunctionProvider $r1;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolatorSABR;

        d0 := @parameter0: double;

        $r1 = <com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolatorSABR: com.opengamma.analytics.financial.model.volatility.smile.function.VolatilityFunctionProvider DEFAULT_SABR>;

        specialinvoke r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolatorSABR: void <init>(com.opengamma.analytics.financial.model.volatility.smile.function.VolatilityFunctionProvider,double)>($r1, d0);

        return;
    }

    public void <init>(int, double)
    {
        com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolatorSABR r0;
        int i0;
        double d0;
        com.opengamma.analytics.financial.model.volatility.smile.function.VolatilityFunctionProvider $r1;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolatorSABR;

        i0 := @parameter0: int;

        d0 := @parameter1: double;

        $r1 = <com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolatorSABR: com.opengamma.analytics.financial.model.volatility.smile.function.VolatilityFunctionProvider DEFAULT_SABR>;

        specialinvoke r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolatorSABR: void <init>(int,com.opengamma.analytics.financial.model.volatility.smile.function.VolatilityFunctionProvider,double)>(i0, $r1, d0);

        return;
    }

    public void <init>(double, com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.WeightingFunction)
    {
        com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolatorSABR r0;
        double d0;
        com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.WeightingFunction r1;
        com.opengamma.analytics.financial.model.volatility.smile.function.VolatilityFunctionProvider $r2;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolatorSABR;

        d0 := @parameter0: double;

        r1 := @parameter1: com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.WeightingFunction;

        $r2 = <com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolatorSABR: com.opengamma.analytics.financial.model.volatility.smile.function.VolatilityFunctionProvider DEFAULT_SABR>;

        specialinvoke r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolatorSABR: void <init>(com.opengamma.analytics.financial.model.volatility.smile.function.VolatilityFunctionProvider,double,com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.WeightingFunction)>($r2, d0, r1);

        return;
    }

    public void <init>(int, double, com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.WeightingFunction)
    {
        com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolatorSABR r0;
        int i0;
        double d0;
        com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.WeightingFunction r1;
        com.opengamma.analytics.financial.model.volatility.smile.function.VolatilityFunctionProvider $r2;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolatorSABR;

        i0 := @parameter0: int;

        d0 := @parameter1: double;

        r1 := @parameter2: com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.WeightingFunction;

        $r2 = <com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolatorSABR: com.opengamma.analytics.financial.model.volatility.smile.function.VolatilityFunctionProvider DEFAULT_SABR>;

        specialinvoke r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolatorSABR: void <init>(int,com.opengamma.analytics.financial.model.volatility.smile.function.VolatilityFunctionProvider,double,com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.WeightingFunction)>(i0, $r2, d0, r1);

        return;
    }

    public void <init>(com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.WeightingFunction)
    {
        com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolatorSABR r0;
        com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.WeightingFunction r1;
        com.opengamma.analytics.financial.model.volatility.smile.function.VolatilityFunctionProvider $r2;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolatorSABR;

        r1 := @parameter0: com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.WeightingFunction;

        $r2 = <com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolatorSABR: com.opengamma.analytics.financial.model.volatility.smile.function.VolatilityFunctionProvider DEFAULT_SABR>;

        specialinvoke r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolatorSABR: void <init>(com.opengamma.analytics.financial.model.volatility.smile.function.VolatilityFunctionProvider,com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.WeightingFunction)>($r2, r1);

        return;
    }

    public void <init>(int, com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.WeightingFunction)
    {
        com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolatorSABR r0;
        int i0;
        com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.WeightingFunction r1;
        com.opengamma.analytics.financial.model.volatility.smile.function.VolatilityFunctionProvider $r2;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolatorSABR;

        i0 := @parameter0: int;

        r1 := @parameter1: com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.WeightingFunction;

        $r2 = <com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolatorSABR: com.opengamma.analytics.financial.model.volatility.smile.function.VolatilityFunctionProvider DEFAULT_SABR>;

        specialinvoke r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolatorSABR: void <init>(int,com.opengamma.analytics.financial.model.volatility.smile.function.VolatilityFunctionProvider,com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.WeightingFunction)>(i0, $r2, r1);

        return;
    }

    public void <init>(com.opengamma.analytics.financial.model.volatility.smile.function.VolatilityFunctionProvider)
    {
        com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolatorSABR r0;
        com.opengamma.analytics.financial.model.volatility.smile.function.VolatilityFunctionProvider r1;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolatorSABR;

        r1 := @parameter0: com.opengamma.analytics.financial.model.volatility.smile.function.VolatilityFunctionProvider;

        specialinvoke r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolator: void <init>(com.opengamma.analytics.financial.model.volatility.smile.function.VolatilityFunctionProvider)>(r1);

        r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolatorSABR: double _beta> = 0.9;

        r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolatorSABR: boolean _externalBeta> = 0;

        return;
    }

    public void <init>(int, com.opengamma.analytics.financial.model.volatility.smile.function.VolatilityFunctionProvider)
    {
        com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolatorSABR r0;
        int i0;
        com.opengamma.analytics.financial.model.volatility.smile.function.VolatilityFunctionProvider r1;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolatorSABR;

        i0 := @parameter0: int;

        r1 := @parameter1: com.opengamma.analytics.financial.model.volatility.smile.function.VolatilityFunctionProvider;

        specialinvoke r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolator: void <init>(int,com.opengamma.analytics.financial.model.volatility.smile.function.VolatilityFunctionProvider)>(i0, r1);

        r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolatorSABR: double _beta> = 0.9;

        r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolatorSABR: boolean _externalBeta> = 0;

        return;
    }

    public void <init>(com.opengamma.analytics.financial.model.volatility.smile.function.VolatilityFunctionProvider, com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.WeightingFunction)
    {
        com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolatorSABR r0;
        com.opengamma.analytics.financial.model.volatility.smile.function.VolatilityFunctionProvider r1;
        com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.WeightingFunction r2;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolatorSABR;

        r1 := @parameter0: com.opengamma.analytics.financial.model.volatility.smile.function.VolatilityFunctionProvider;

        r2 := @parameter1: com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.WeightingFunction;

        specialinvoke r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolator: void <init>(com.opengamma.analytics.financial.model.volatility.smile.function.VolatilityFunctionProvider,com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.WeightingFunction)>(r1, r2);

        r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolatorSABR: double _beta> = 0.9;

        r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolatorSABR: boolean _externalBeta> = 0;

        return;
    }

    public void <init>(int, com.opengamma.analytics.financial.model.volatility.smile.function.VolatilityFunctionProvider, com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.WeightingFunction)
    {
        com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolatorSABR r0;
        int i0;
        com.opengamma.analytics.financial.model.volatility.smile.function.VolatilityFunctionProvider r1;
        com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.WeightingFunction r2;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolatorSABR;

        i0 := @parameter0: int;

        r1 := @parameter1: com.opengamma.analytics.financial.model.volatility.smile.function.VolatilityFunctionProvider;

        r2 := @parameter2: com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.WeightingFunction;

        specialinvoke r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolator: void <init>(int,com.opengamma.analytics.financial.model.volatility.smile.function.VolatilityFunctionProvider,com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.WeightingFunction)>(i0, r1, r2);

        r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolatorSABR: double _beta> = 0.9;

        r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolatorSABR: boolean _externalBeta> = 0;

        return;
    }

    public void <init>(com.opengamma.analytics.financial.model.volatility.smile.function.VolatilityFunctionProvider, double)
    {
        com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolatorSABR r0;
        com.opengamma.analytics.financial.model.volatility.smile.function.VolatilityFunctionProvider r1;
        double d0;
        boolean $z0;
        java.lang.Object[] $r2;
        java.lang.Double $r3;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolatorSABR;

        r1 := @parameter0: com.opengamma.analytics.financial.model.volatility.smile.function.VolatilityFunctionProvider;

        d0 := @parameter1: double;

        specialinvoke r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolator: void <init>(com.opengamma.analytics.financial.model.volatility.smile.function.VolatilityFunctionProvider)>(r1);

        $z0 = staticinvoke <com.opengamma.util.ArgumentChecker: boolean isInRangeInclusive(double,double,double)>(0.0, 1.0, d0);

        $r2 = newarray (java.lang.Object)[1];

        $r3 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d0);

        $r2[0] = $r3;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String,java.lang.Object[])>($z0, "beta value of {} not in range 0 to 1", $r2);

        r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolatorSABR: double _beta> = d0;

        r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolatorSABR: boolean _externalBeta> = 1;

        return;
    }

    public void <init>(int, com.opengamma.analytics.financial.model.volatility.smile.function.VolatilityFunctionProvider, double)
    {
        com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolatorSABR r0;
        int i0;
        com.opengamma.analytics.financial.model.volatility.smile.function.VolatilityFunctionProvider r1;
        double d0;
        boolean $z0;
        java.lang.Object[] $r2;
        java.lang.Double $r3;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolatorSABR;

        i0 := @parameter0: int;

        r1 := @parameter1: com.opengamma.analytics.financial.model.volatility.smile.function.VolatilityFunctionProvider;

        d0 := @parameter2: double;

        specialinvoke r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolator: void <init>(int,com.opengamma.analytics.financial.model.volatility.smile.function.VolatilityFunctionProvider)>(i0, r1);

        $z0 = staticinvoke <com.opengamma.util.ArgumentChecker: boolean isInRangeInclusive(double,double,double)>(0.0, 1.0, d0);

        $r2 = newarray (java.lang.Object)[1];

        $r3 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d0);

        $r2[0] = $r3;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String,java.lang.Object[])>($z0, "beta value of {} not in range 0 to 1", $r2);

        r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolatorSABR: double _beta> = d0;

        r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolatorSABR: boolean _externalBeta> = 1;

        return;
    }

    public void <init>(com.opengamma.analytics.financial.model.volatility.smile.function.VolatilityFunctionProvider, double, com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.WeightingFunction)
    {
        com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolatorSABR r0;
        com.opengamma.analytics.financial.model.volatility.smile.function.VolatilityFunctionProvider r1;
        double d0;
        com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.WeightingFunction r2;
        boolean $z0;
        java.lang.Object[] $r3;
        java.lang.Double $r4;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolatorSABR;

        r1 := @parameter0: com.opengamma.analytics.financial.model.volatility.smile.function.VolatilityFunctionProvider;

        d0 := @parameter1: double;

        r2 := @parameter2: com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.WeightingFunction;

        specialinvoke r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolator: void <init>(com.opengamma.analytics.financial.model.volatility.smile.function.VolatilityFunctionProvider,com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.WeightingFunction)>(r1, r2);

        $z0 = staticinvoke <com.opengamma.util.ArgumentChecker: boolean isInRangeInclusive(double,double,double)>(0.0, 1.0, d0);

        $r3 = newarray (java.lang.Object)[1];

        $r4 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d0);

        $r3[0] = $r4;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String,java.lang.Object[])>($z0, "beta value of {} not in range 0 to 1", $r3);

        r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolatorSABR: double _beta> = d0;

        r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolatorSABR: boolean _externalBeta> = 1;

        return;
    }

    public void <init>(int, com.opengamma.analytics.financial.model.volatility.smile.function.VolatilityFunctionProvider, double, com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.WeightingFunction)
    {
        com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolatorSABR r0;
        int i0;
        com.opengamma.analytics.financial.model.volatility.smile.function.VolatilityFunctionProvider r1;
        double d0;
        com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.WeightingFunction r2;
        boolean $z0;
        java.lang.Object[] $r3;
        java.lang.Double $r4;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolatorSABR;

        i0 := @parameter0: int;

        r1 := @parameter1: com.opengamma.analytics.financial.model.volatility.smile.function.VolatilityFunctionProvider;

        d0 := @parameter2: double;

        r2 := @parameter3: com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.WeightingFunction;

        specialinvoke r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolator: void <init>(int,com.opengamma.analytics.financial.model.volatility.smile.function.VolatilityFunctionProvider,com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.WeightingFunction)>(i0, r1, r2);

        $z0 = staticinvoke <com.opengamma.util.ArgumentChecker: boolean isInRangeInclusive(double,double,double)>(0.0, 1.0, d0);

        $r3 = newarray (java.lang.Object)[1];

        $r4 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d0);

        $r3[0] = $r4;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String,java.lang.Object[])>($z0, "beta value of {} not in range 0 to 1", $r3);

        r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolatorSABR: double _beta> = d0;

        r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolatorSABR: boolean _externalBeta> = 1;

        return;
    }

    public double getBeta()
    {
        com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolatorSABR r0;
        double $d0;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolatorSABR;

        $d0 = r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolatorSABR: double _beta>;

        return $d0;
    }

    public boolean useExternalBeta()
    {
        com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolatorSABR r0;
        boolean $z0;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolatorSABR;

        $z0 = r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolatorSABR: boolean _externalBeta>;

        return $z0;
    }

    protected com.opengamma.analytics.math.matrix.DoubleMatrix1D getGlobalStart(double, double[], double, double[])
    {
        com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolatorSABR r0;
        double d0, d1, d2, d3, d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21, $d22, $d23, $d24, $d25, $d26, $d27, d28, d29, d30, d31, d32, d33, $d34, $d35, d36, d37, d38, d39;
        double[] r1, r2, $r12, $r19, $r21;
        cern.jet.random.engine.RandomEngine r3;
        com.opengamma.analytics.math.matrix.DoubleMatrix1D r4, $r11, $r18, $r20;
        int i0, i5;
        int[] $r5, $r7, $r9;
        java.lang.Double $r6, $r8, $r10;
        boolean $z0, $z1;
        byte $b1, $b2, $b3, $b4;
        java.lang.StringBuilder $r13, $r15, $r16;
        org.slf4j.Logger $r14;
        java.lang.String $r17;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolatorSABR;

        d0 := @parameter0: double;

        r1 := @parameter1: double[];

        d1 := @parameter2: double;

        r2 := @parameter3: double[];

        r3 = virtualinvoke r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolatorSABR: cern.jet.random.engine.RandomEngine getRandom()>();

        r4 = virtualinvoke r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolatorSABR: com.opengamma.analytics.math.matrix.DoubleMatrix1D getPolynomialFit(double,double[],double[])>(d0, r1, r2);

        $r5 = newarray (int)[1];

        $r5[0] = 0;

        $r6 = virtualinvoke r4.<com.opengamma.analytics.math.matrix.DoubleMatrix1D: java.lang.Double getEntry(int[])>($r5);

        d2 = virtualinvoke $r6.<java.lang.Double: double doubleValue()>();

        $r7 = newarray (int)[1];

        $r7[0] = 1;

        $r8 = virtualinvoke r4.<com.opengamma.analytics.math.matrix.DoubleMatrix1D: java.lang.Double getEntry(int[])>($r7);

        d3 = virtualinvoke $r8.<java.lang.Double: double doubleValue()>();

        $r9 = newarray (int)[1];

        $r9[0] = 2;

        $r10 = virtualinvoke r4.<com.opengamma.analytics.math.matrix.DoubleMatrix1D: java.lang.Double getEntry(int[])>($r9);

        d4 = virtualinvoke $r10.<java.lang.Double: double doubleValue()>();

        $z0 = r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolatorSABR: boolean _externalBeta>;

        if $z0 == 0 goto label1;

        d28 = r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolatorSABR: double _beta>;

        goto label2;

     label1:
        d28 = virtualinvoke r3.<cern.jet.random.engine.RandomEngine: double nextDouble()>();

     label2:
        $b1 = d2 cmpg 0.0;

        if $b1 > 0 goto label5;

        d29 = 0.0;

        i0 = lengthof r1;

        i5 = 0;

     label3:
        if i5 >= i0 goto label4;

        $d27 = r2[i5];

        d29 = d29 + $d27;

        i5 = i5 + 1;

        goto label3;

     label4:
        $d18 = (double) i0;

        $d20 = d29 / $d18;

        $d19 = 1.0 - d28;

        $d21 = staticinvoke <java.lang.Math: double pow(double,double)>(d0, $d19);

        d30 = $d20 * $d21;

        $d22 = virtualinvoke r3.<cern.jet.random.engine.RandomEngine: double nextDouble()>();

        $d23 = $d22 + 0.5;

        d31 = $d23 * d30;

        $d24 = virtualinvoke r3.<cern.jet.random.engine.RandomEngine: double nextDouble()>();

        d32 = $d24 - 0.5;

        $d25 = virtualinvoke r3.<cern.jet.random.engine.RandomEngine: double nextDouble()>();

        $d26 = 0.5 * $d25;

        d33 = $d26 + 0.1;

        $r18 = new com.opengamma.analytics.math.matrix.DoubleMatrix1D;

        $r19 = newarray (double)[4];

        $r19[0] = d31;

        $r19[1] = d28;

        $r19[2] = d32;

        $r19[3] = d33;

        specialinvoke $r18.<com.opengamma.analytics.math.matrix.DoubleMatrix1D: void <init>(double[])>($r19);

        return $r18;

     label5:
        $d5 = staticinvoke <java.lang.Math: double abs(double)>(d3);

        $b2 = $d5 cmpg 0.001;

        if $b2 >= 0 goto label7;

        $d15 = staticinvoke <java.lang.Math: double abs(double)>(d4);

        $b3 = $d15 cmpg 0.001;

        if $b3 >= 0 goto label7;

        $z1 = r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolatorSABR: boolean _externalBeta>;

        if $z1 == 0 goto label6;

        $d16 = r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolatorSABR: double _beta>;

        $b4 = $d16 cmpl 1.0;

        if $b4 == 0 goto label6;

        $r14 = <com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolatorSABR: org.slf4j.Logger s_logger>;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $d17 = r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolatorSABR: double _beta>;

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d17);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" so extenal value ignored, and beta = 1.0 used");

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r14.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Object)>("Smile almost flat. Cannot use beta = ", $r17);

     label6:
        $r20 = new com.opengamma.analytics.math.matrix.DoubleMatrix1D;

        $r21 = newarray (double)[4];

        $r21[0] = d2;

        $r21[1] = 1.0;

        $r21[2] = 0.0;

        $d34 = 4.0 * d4;

        $d35 = staticinvoke <java.lang.Math: double max(double,double)>(0.0, $d34);

        $r21[3] = $d35;

        specialinvoke $r20.<com.opengamma.analytics.math.matrix.DoubleMatrix1D: void <init>(double[])>($r21);

        return $r20;

     label7:
        $d6 = 1.0 - d28;

        $d7 = staticinvoke <java.lang.Math: double pow(double,double)>(d0, $d6);

        d36 = d2 * $d7;

        $d8 = virtualinvoke r3.<cern.jet.random.engine.RandomEngine: double nextDouble()>();

        $d9 = $d8 + 0.5;

        d37 = $d9 * d36;

        $d10 = virtualinvoke r3.<cern.jet.random.engine.RandomEngine: double nextDouble()>();

        d38 = $d10 - 0.5;

        $d11 = virtualinvoke r3.<cern.jet.random.engine.RandomEngine: double nextDouble()>();

        $d13 = $d11 + 0.5;

        $d12 = 4.0 * d4;

        $d14 = staticinvoke <java.lang.Math: double max(double,double)>(0.0, $d12);

        d39 = $d13 * $d14;

        $r11 = new com.opengamma.analytics.math.matrix.DoubleMatrix1D;

        $r12 = newarray (double)[4];

        $r12[0] = d37;

        $r12[1] = d28;

        $r12[2] = d38;

        $r12[3] = d39;

        specialinvoke $r11.<com.opengamma.analytics.math.matrix.DoubleMatrix1D: void <init>(double[])>($r12);

        return $r11;
    }

    protected java.util.BitSet getGlobalFixedValues()
    {
        com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolatorSABR r0;
        java.util.BitSet $r2;
        boolean $z0;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolatorSABR;

        $r2 = new java.util.BitSet;

        specialinvoke $r2.<java.util.BitSet: void <init>()>();

        $z0 = r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolatorSABR: boolean _externalBeta>;

        if $z0 == 0 goto label1;

        virtualinvoke $r2.<java.util.BitSet: void set(int)>(1);

     label1:
        return $r2;
    }

    protected java.util.BitSet getLocalFixedValues()
    {
        com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolatorSABR r0;
        java.util.BitSet $r2;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolatorSABR;

        $r2 = new java.util.BitSet;

        specialinvoke $r2.<java.util.BitSet: void <init>()>();

        virtualinvoke $r2.<java.util.BitSet: void set(int)>(1);

        return $r2;
    }

    protected com.opengamma.analytics.financial.model.volatility.smile.function.SABRFormulaData toSmileModelData(com.opengamma.analytics.math.matrix.DoubleMatrix1D)
    {
        com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolatorSABR r0;
        com.opengamma.analytics.math.matrix.DoubleMatrix1D r1;
        com.opengamma.analytics.financial.model.volatility.smile.function.SABRFormulaData $r2;
        double[] $r3;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolatorSABR;

        r1 := @parameter0: com.opengamma.analytics.math.matrix.DoubleMatrix1D;

        $r2 = new com.opengamma.analytics.financial.model.volatility.smile.function.SABRFormulaData;

        $r3 = virtualinvoke r1.<com.opengamma.analytics.math.matrix.DoubleMatrix1D: double[] getData()>();

        specialinvoke $r2.<com.opengamma.analytics.financial.model.volatility.smile.function.SABRFormulaData: void <init>(double[])>($r3);

        return $r2;
    }

    protected com.opengamma.analytics.financial.model.volatility.smile.fitting.SmileModelFitter getFitter(double, double[], double, double[], double[])
    {
        com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolatorSABR r0;
        double d0, d1;
        double[] r1, r2, r3;
        com.opengamma.analytics.financial.model.volatility.smile.fitting.SABRModelFitter $r4;
        com.opengamma.analytics.financial.model.volatility.smile.function.VolatilityFunctionProvider $r5;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolatorSABR;

        d0 := @parameter0: double;

        r1 := @parameter1: double[];

        d1 := @parameter2: double;

        r2 := @parameter3: double[];

        r3 := @parameter4: double[];

        $r4 = new com.opengamma.analytics.financial.model.volatility.smile.fitting.SABRModelFitter;

        $r5 = virtualinvoke r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolatorSABR: com.opengamma.analytics.financial.model.volatility.smile.function.VolatilityFunctionProvider getModel()>();

        specialinvoke $r4.<com.opengamma.analytics.financial.model.volatility.smile.fitting.SABRModelFitter: void <init>(double,double[],double,double[],double[],com.opengamma.analytics.financial.model.volatility.smile.function.VolatilityFunctionProvider)>(d0, r1, d1, r2, r3, $r5);

        return $r4;
    }

    public java.util.List getFittedModelParametersGlobal(double, double[], double, double[])
    {
        com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolatorSABR r0;
        double d0, d1, $d2, $d3, $d4, $d5, $d6, d7, $d8, $d9;
        double[] r1, r2, r4;
        int i0, $i1, $i2, i5, i6;
        com.opengamma.analytics.financial.model.volatility.smile.fitting.SmileModelFitter r5;
        java.util.BitSet r6;
        com.opengamma.analytics.math.matrix.DoubleMatrix1D r7, $r16;
        java.lang.Object[] $r10, $r12;
        java.lang.Integer $r11, $r13, $r14;
        java.util.ArrayList $r15;
        byte $b3, $b4, $b7;
        com.opengamma.analytics.financial.model.volatility.smile.function.SABRFormulaData $r17;
        java.lang.StringBuilder $r18, $r20, $r21, $r22;
        org.slf4j.Logger $r19;
        java.lang.String $r23;
        java.lang.IllegalStateException $r24;
        com.opengamma.analytics.math.MathException $r25;
        java.lang.Exception $r26;
        boolean $z1, $z2;
        com.opengamma.analytics.math.statistics.leastsquare.LeastSquareResultsWithTransform r27, r28;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolatorSABR;

        d0 := @parameter0: double;

        r1 := @parameter1: double[];

        d1 := @parameter2: double;

        r2 := @parameter3: double[];

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "strikes");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, "implied volatilities");

        i0 = lengthof r1;

        if i0 <= 2 goto label01;

        $z1 = 1;

        goto label02;

     label01:
        $z1 = 0;

     label02:
        $r10 = newarray (java.lang.Object)[1];

        $r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r10[0] = $r11;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String,java.lang.Object[])>($z1, "cannot fit less than three points; have {}", $r10);

        $i1 = lengthof r2;

        if $i1 != i0 goto label03;

        $z2 = 1;

        goto label04;

     label03:
        $z2 = 0;

     label04:
        $r12 = newarray (java.lang.Object)[2];

        $i2 = lengthof r2;

        $r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        $r12[0] = $r13;

        $r14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r12[1] = $r14;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String,java.lang.Object[])>($z2, "#strikes != # vols; have {} and {}", $r12);

        specialinvoke r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolator: void validateStrikes(double[])>(r1);

        $r15 = new java.util.ArrayList;

        specialinvoke $r15.<java.util.ArrayList: void <init>(int)>(i0);

        r4 = newarray (double)[i0];

        staticinvoke <java.util.Arrays: void fill(double[],double)>(r4, 1.0E-4);

        r5 = virtualinvoke r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolatorSABR: com.opengamma.analytics.financial.model.volatility.smile.fitting.SmileModelFitter getFitter(double,double[],double,double[],double[])>(d0, r1, d1, r2, r4);

        r6 = virtualinvoke r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolatorSABR: java.util.BitSet getGlobalFixedValues()>();

        r27 = null;

        d7 = #Infinity;

        i5 = 0;

        i6 = 0;

     label05:
        $d8 = (double) i0;

        $d9 = 100.0 * $d8;

        $b7 = d7 cmpl $d9;

        if $b7 <= 0 goto label12;

        if i6 >= 5 goto label12;

        r7 = virtualinvoke r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolatorSABR: com.opengamma.analytics.math.matrix.DoubleMatrix1D getGlobalStart(double,double[],double,double[])>(d0, r1, d1, r2);

     label06:
        r28 = virtualinvoke r5.<com.opengamma.analytics.financial.model.volatility.smile.fitting.SmileModelFitter: com.opengamma.analytics.math.statistics.leastsquare.LeastSquareResultsWithTransform solve(com.opengamma.analytics.math.matrix.DoubleMatrix1D,java.util.BitSet)>(r7, r6);

        $d6 = virtualinvoke r28.<com.opengamma.analytics.math.statistics.leastsquare.LeastSquareResultsWithTransform: double getChiSq()>();

        $b4 = $d6 cmpg d7;

        if $b4 >= 0 goto label07;

        r27 = r28;

        d7 = virtualinvoke r28.<com.opengamma.analytics.math.statistics.leastsquare.LeastSquareResultsWithTransform: double getChiSq()>();

     label07:
        i6 = i6 + 1;

     label08:
        goto label10;

     label09:
        $r26 := @caughtexception;

     label10:
        i5 = i5 + 1;

        if i5 <= 20 goto label11;

        $r25 = new com.opengamma.analytics.math.MathException;

        specialinvoke $r25.<com.opengamma.analytics.math.MathException: void <init>(java.lang.String)>("Cannot fit data in 20trials");

        throw $r25;

     label11:
        goto label05;

     label12:
        if r27 != null goto label13;

        $r24 = new java.lang.IllegalStateException;

        specialinvoke $r24.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Global estimate was null; should never happen");

        throw $r24;

     label13:
        $d2 = virtualinvoke r27.<com.opengamma.analytics.math.statistics.leastsquare.LeastSquareResultsWithTransform: double getChiSq()>();

        $d3 = (double) i0;

        $d4 = $d2 / $d3;

        $b3 = $d4 cmpl 1.0;

        if $b3 <= 0 goto label14;

        $r19 = <com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolatorSABR: org.slf4j.Logger s_logger>;

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        $r20 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" points is ");

        $d5 = virtualinvoke r27.<com.opengamma.analytics.math.statistics.leastsquare.LeastSquareResultsWithTransform: double getChiSq()>();

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d5);

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r19.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("chi^2 on fit to ", $r23);

     label14:
        $r16 = virtualinvoke r27.<com.opengamma.analytics.math.statistics.leastsquare.LeastSquareResultsWithTransform: com.opengamma.analytics.math.matrix.DoubleMatrix1D getModelParameters()>();

        $r17 = virtualinvoke r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolatorSABR: com.opengamma.analytics.financial.model.volatility.smile.function.SABRFormulaData toSmileModelData(com.opengamma.analytics.math.matrix.DoubleMatrix1D)>($r16);

        interfaceinvoke $r15.<java.util.List: boolean add(java.lang.Object)>($r17);

        return $r15;

        catch java.lang.Exception from label06 to label08 with label09;
    }

    public com.opengamma.analytics.math.function.Function1D getVolatilityFunction(double, double[], double, double[])
    {
        com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolatorSABR r0;
        double d0, d1;
        double[] r1, r2;
        com.opengamma.analytics.math.function.Function1D $r5;
        com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolatorSABR$1 $r6;
        java.lang.Exception $r7;
        java.util.List r8;
        int i1;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolatorSABR;

        d0 := @parameter0: double;

        r1 := @parameter1: double[];

        d1 := @parameter2: double;

        r2 := @parameter3: double[];

     label1:
        r8 = virtualinvoke r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolatorSABR: java.util.List getFittedModelParameters(double,double[],double,double[])>(d0, r1, d1, r2);

        i1 = lengthof r1;

     label2:
        goto label4;

     label3:
        $r7 := @caughtexception;

        i1 = 1;

        r8 = virtualinvoke r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolatorSABR: java.util.List getFittedModelParametersGlobal(double,double[],double,double[])>(d0, r1, d1, r2);

     label4:
        if i1 != 1 goto label5;

        $r6 = new com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolatorSABR$1;

        specialinvoke $r6.<com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolatorSABR$1: void <init>(com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolatorSABR,double,double,java.util.List)>(r0, d1, d0, r8);

        return $r6;

     label5:
        $r5 = virtualinvoke r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolatorSABR: com.opengamma.analytics.math.function.Function1D getVolatilityFunctionFromModelParameters(double,double[],double,java.util.List)>(d0, r1, d1, r8);

        return $r5;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public int hashCode()
    {
        com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolatorSABR r0;
        long l1, $l3, $l4;
        boolean $z0, $z1;
        int $i2, $i5, $i6, i7, i9;
        double $d0;
        short $s8;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolatorSABR;

        i7 = specialinvoke r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolator: int hashCode()>();

        $i2 = 31 * i7;

        $z0 = r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolatorSABR: boolean _externalBeta>;

        if $z0 == 0 goto label1;

        $s8 = 1231;

        goto label2;

     label1:
        $s8 = 1237;

     label2:
        i9 = $i2 + $s8;

        $z1 = r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolatorSABR: boolean _externalBeta>;

        if $z1 == 0 goto label3;

        $d0 = r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolatorSABR: double _beta>;

        l1 = staticinvoke <java.lang.Double: long doubleToLongBits(double)>($d0);

        $i6 = 31 * i9;

        $l3 = l1 >>> 32;

        $l4 = l1 ^ $l3;

        $i5 = (int) $l4;

        i9 = $i6 + $i5;

     label3:
        return i9;
    }

    public boolean equals(java.lang.Object)
    {
        com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolatorSABR r0, r2;
        java.lang.Object r1;
        boolean $z0, $z1, $z2, $z3;
        java.lang.Class $r3, $r4;
        double $d0, $d1;
        long $l0, $l1;
        byte $b2;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolatorSABR;

        r1 := @parameter0: java.lang.Object;

        if r0 != r1 goto label1;

        return 1;

     label1:
        $z0 = specialinvoke r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolator: boolean equals(java.lang.Object)>(r1);

        if $z0 != 0 goto label2;

        return 0;

     label2:
        $r3 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r4 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        if $r3 == $r4 goto label3;

        return 0;

     label3:
        r2 = (com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolatorSABR) r1;

        $z2 = r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolatorSABR: boolean _externalBeta>;

        $z1 = r2.<com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolatorSABR: boolean _externalBeta>;

        if $z2 == $z1 goto label4;

        return 0;

     label4:
        $z3 = r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolatorSABR: boolean _externalBeta>;

        if $z3 == 0 goto label5;

        $d0 = r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolatorSABR: double _beta>;

        $l0 = staticinvoke <java.lang.Double: long doubleToLongBits(double)>($d0);

        $d1 = r2.<com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolatorSABR: double _beta>;

        $l1 = staticinvoke <java.lang.Double: long doubleToLongBits(double)>($d1);

        $b2 = $l0 cmp $l1;

        if $b2 == 0 goto label5;

        return 0;

     label5:
        return 1;
    }

    public java.lang.String toString()
    {
        com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolatorSABR r0;
        java.lang.StringBuilder $r2;
        com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.WeightingFunction $r3;
        com.opengamma.analytics.financial.model.volatility.smile.function.VolatilityFunctionProvider $r6;
        boolean $z0;
        java.lang.String $r9;
        double $d0;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolatorSABR;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>("SABRInterpolator[weighting function=");

        $r3 = virtualinvoke r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolatorSABR: com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.WeightingFunction getWeightingFunction()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", SABR model=");

        $r6 = virtualinvoke r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolatorSABR: com.opengamma.analytics.financial.model.volatility.smile.function.VolatilityFunctionProvider getModel()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r6);

        $z0 = r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolatorSABR: boolean _externalBeta>;

        if $z0 == 0 goto label1;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", fixed beta=");

        $d0 = r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolatorSABR: double _beta>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d0);

     label1:
        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r9 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r9;
    }

    protected volatile com.opengamma.analytics.financial.model.volatility.smile.function.SmileModelData toSmileModelData(com.opengamma.analytics.math.matrix.DoubleMatrix1D)
    {
        com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolatorSABR r0;
        com.opengamma.analytics.math.matrix.DoubleMatrix1D r1;
        com.opengamma.analytics.financial.model.volatility.smile.function.SABRFormulaData $r2;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolatorSABR;

        r1 := @parameter0: com.opengamma.analytics.math.matrix.DoubleMatrix1D;

        $r2 = virtualinvoke r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolatorSABR: com.opengamma.analytics.financial.model.volatility.smile.function.SABRFormulaData toSmileModelData(com.opengamma.analytics.math.matrix.DoubleMatrix1D)>(r1);

        return $r2;
    }

    static void <clinit>()
    {
        com.opengamma.analytics.financial.model.volatility.smile.function.SABRHaganVolatilityFunction $r0;

        <com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolatorSABR: int MAX_COUNT> = 5;

        <com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolatorSABR: int MAX_TRY> = 20;

        <com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolatorSABR: double FIT_ERROR> = 1.0E-4;

        <com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolatorSABR: double DEFAULT_BETA> = 0.9;

        $r0 = new com.opengamma.analytics.financial.model.volatility.smile.function.SABRHaganVolatilityFunction;

        specialinvoke $r0.<com.opengamma.analytics.financial.model.volatility.smile.function.SABRHaganVolatilityFunction: void <init>()>();

        <com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolatorSABR: com.opengamma.analytics.financial.model.volatility.smile.function.VolatilityFunctionProvider DEFAULT_SABR> = $r0;

        return;
    }
}
