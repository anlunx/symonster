public class com.opengamma.financial.convention.daycount.ActualNL extends com.opengamma.financial.convention.daycount.ActualTypeDayCount
{
    private static final long serialVersionUID;

    public void <init>()
    {
        com.opengamma.financial.convention.daycount.ActualNL r0;

        r0 := @this: com.opengamma.financial.convention.daycount.ActualNL;

        specialinvoke r0.<com.opengamma.financial.convention.daycount.ActualTypeDayCount: void <init>()>();

        return;
    }

    public double getAccruedInterest(org.threeten.bp.LocalDate, org.threeten.bp.LocalDate, org.threeten.bp.LocalDate, double, double)
    {
        com.opengamma.financial.convention.daycount.ActualNL r0;
        org.threeten.bp.LocalDate r1, r2, r3;
        double d0, d1, $d2, $d3;

        r0 := @this: com.opengamma.financial.convention.daycount.ActualNL;

        r1 := @parameter0: org.threeten.bp.LocalDate;

        r2 := @parameter1: org.threeten.bp.LocalDate;

        r3 := @parameter2: org.threeten.bp.LocalDate;

        d0 := @parameter3: double;

        d1 := @parameter4: double;

        $d2 = virtualinvoke r0.<com.opengamma.financial.convention.daycount.ActualNL: double getDayCountFraction(org.threeten.bp.LocalDate,org.threeten.bp.LocalDate)>(r1, r2);

        $d3 = $d2 * d0;

        return $d3;
    }

    public double getDayCountFraction(org.threeten.bp.LocalDate, org.threeten.bp.LocalDate)
    {
        com.opengamma.financial.convention.daycount.ActualNL r0;
        org.threeten.bp.LocalDate r1, r2, r3;
        long l0, $l1, $l2, $l3, $l4;
        boolean $z0;
        double $d0, $d1;
        int i5;

        r0 := @this: com.opengamma.financial.convention.daycount.ActualNL;

        r1 := @parameter0: org.threeten.bp.LocalDate;

        r2 := @parameter1: org.threeten.bp.LocalDate;

        virtualinvoke r0.<com.opengamma.financial.convention.daycount.ActualNL: void testDates(org.threeten.bp.LocalDate,org.threeten.bp.LocalDate)>(r1, r2);

        $l1 = virtualinvoke r2.<org.threeten.bp.LocalDate: long toEpochDay()>();

        $l2 = virtualinvoke r1.<org.threeten.bp.LocalDate: long toEpochDay()>();

        l0 = $l1 - $l2;

        i5 = 0;

        r3 = staticinvoke <com.opengamma.financial.convention.daycount.ActualNL: org.threeten.bp.LocalDate nextLeapDay(org.threeten.bp.LocalDate)>(r1);

     label1:
        $z0 = virtualinvoke r3.<org.threeten.bp.LocalDate: boolean isAfter(org.threeten.bp.chrono.ChronoLocalDate)>(r2);

        if $z0 != 0 goto label2;

        i5 = i5 + 1;

        r3 = staticinvoke <com.opengamma.financial.convention.daycount.ActualNL: org.threeten.bp.LocalDate nextLeapDay(org.threeten.bp.LocalDate)>(r3);

        goto label1;

     label2:
        $l3 = (long) i5;

        $l4 = l0 - $l3;

        $d0 = (double) $l4;

        $d1 = $d0 / 365.0;

        return $d1;
    }

    private static org.threeten.bp.LocalDate nextLeapDay(org.threeten.bp.LocalDate)
    {
        org.threeten.bp.LocalDate r0, $r1, $r2, $r3;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9;
        boolean $z0;

        r0 := @parameter0: org.threeten.bp.LocalDate;

        $i0 = virtualinvoke r0.<org.threeten.bp.LocalDate: int getMonthValue()>();

        if $i0 != 2 goto label1;

        $i7 = virtualinvoke r0.<org.threeten.bp.LocalDate: int getDayOfMonth()>();

        if $i7 != 29 goto label1;

        $i8 = virtualinvoke r0.<org.threeten.bp.LocalDate: int getYear()>();

        $i9 = $i8 + 4;

        $r3 = staticinvoke <com.opengamma.financial.convention.daycount.ActualNL: org.threeten.bp.LocalDate ensureLeapDay(int)>($i9);

        return $r3;

     label1:
        $z0 = virtualinvoke r0.<org.threeten.bp.LocalDate: boolean isLeapYear()>();

        if $z0 == 0 goto label2;

        $i5 = virtualinvoke r0.<org.threeten.bp.LocalDate: int getMonthValue()>();

        if $i5 > 2 goto label2;

        $i6 = virtualinvoke r0.<org.threeten.bp.LocalDate: int getYear()>();

        $r2 = staticinvoke <org.threeten.bp.LocalDate: org.threeten.bp.LocalDate of(int,int,int)>($i6, 2, 29);

        return $r2;

     label2:
        $i1 = virtualinvoke r0.<org.threeten.bp.LocalDate: int getYear()>();

        $i2 = $i1 / 4;

        $i3 = $i2 * 4;

        $i4 = $i3 + 4;

        $r1 = staticinvoke <com.opengamma.financial.convention.daycount.ActualNL: org.threeten.bp.LocalDate ensureLeapDay(int)>($i4);

        return $r1;
    }

    private static org.threeten.bp.LocalDate ensureLeapDay(int)
    {
        int i0, $i2;
        long $l1;
        boolean $z0;
        org.threeten.bp.LocalDate $r0, $r1;

        i0 := @parameter0: int;

        $l1 = (long) i0;

        $z0 = staticinvoke <org.threeten.bp.Year: boolean isLeap(long)>($l1);

        if $z0 == 0 goto label1;

        $r1 = staticinvoke <org.threeten.bp.LocalDate: org.threeten.bp.LocalDate of(int,int,int)>(i0, 2, 29);

        return $r1;

     label1:
        $i2 = i0 + 4;

        $r0 = staticinvoke <org.threeten.bp.LocalDate: org.threeten.bp.LocalDate of(int,int,int)>($i2, 2, 29);

        return $r0;
    }

    public java.lang.String getName()
    {
        com.opengamma.financial.convention.daycount.ActualNL r0;

        r0 := @this: com.opengamma.financial.convention.daycount.ActualNL;

        return "Actual/NL";
    }

    public static void <clinit>()
    {
        <com.opengamma.financial.convention.daycount.ActualNL: long serialVersionUID> = 1L;

        return;
    }
}
