public class com.opengamma.analytics.math.curve.SpreadCurveShiftFunction extends java.lang.Object implements com.opengamma.analytics.math.curve.CurveShiftFunction
{
    private static final com.opengamma.analytics.math.curve.CurveSpreadFunction SPREAD_FUNCTION;

    public void <init>()
    {
        com.opengamma.analytics.math.curve.SpreadCurveShiftFunction r0;

        r0 := @this: com.opengamma.analytics.math.curve.SpreadCurveShiftFunction;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public com.opengamma.analytics.math.curve.SpreadDoublesCurve evaluate(com.opengamma.analytics.math.curve.SpreadDoublesCurve, double)
    {
        com.opengamma.analytics.math.curve.SpreadCurveShiftFunction r0;
        com.opengamma.analytics.math.curve.SpreadDoublesCurve r1, $r8;
        double d0;
        java.lang.StringBuilder $r3, $r4, $r6;
        java.lang.String $r5, $r7;

        r0 := @this: com.opengamma.analytics.math.curve.SpreadCurveShiftFunction;

        r1 := @parameter0: com.opengamma.analytics.math.curve.SpreadDoublesCurve;

        d0 := @parameter1: double;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "curve");

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("PARALLEL_SHIFT_");

        $r5 = virtualinvoke r1.<com.opengamma.analytics.math.curve.SpreadDoublesCurve: java.lang.String getName()>();

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        $r8 = virtualinvoke r0.<com.opengamma.analytics.math.curve.SpreadCurveShiftFunction: com.opengamma.analytics.math.curve.SpreadDoublesCurve evaluate(com.opengamma.analytics.math.curve.SpreadDoublesCurve,double,java.lang.String)>(r1, d0, $r7);

        return $r8;
    }

    public com.opengamma.analytics.math.curve.SpreadDoublesCurve evaluate(com.opengamma.analytics.math.curve.SpreadDoublesCurve, double, java.lang.String)
    {
        com.opengamma.analytics.math.curve.SpreadCurveShiftFunction r0;
        com.opengamma.analytics.math.curve.SpreadDoublesCurve r1, $r10;
        double d0;
        java.lang.String r2;
        int i0, i1, $i2, $i3, i4, i5;
        com.opengamma.analytics.math.curve.DoublesCurve[] r3, r4, $r7;
        com.opengamma.analytics.math.curve.DoublesCurve r5;
        com.opengamma.analytics.math.curve.ConstantDoublesCurve $r8;
        com.opengamma.analytics.math.curve.CurveSpreadFunction $r9;

        r0 := @this: com.opengamma.analytics.math.curve.SpreadCurveShiftFunction;

        r1 := @parameter0: com.opengamma.analytics.math.curve.SpreadDoublesCurve;

        d0 := @parameter1: double;

        r2 := @parameter2: java.lang.String;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "curve");

        $r7 = virtualinvoke r1.<com.opengamma.analytics.math.curve.SpreadDoublesCurve: com.opengamma.analytics.math.curve.DoublesCurve[] getUnderlyingCurves()>();

        i0 = lengthof $r7;

        $i2 = i0 + 1;

        r3 = newarray (com.opengamma.analytics.math.curve.DoublesCurve)[$i2];

        i4 = 0;

        r4 = virtualinvoke r1.<com.opengamma.analytics.math.curve.SpreadDoublesCurve: com.opengamma.analytics.math.curve.DoublesCurve[] getUnderlyingCurves()>();

        i1 = lengthof r4;

        i5 = 0;

     label1:
        if i5 >= i1 goto label2;

        r5 = r4[i5];

        $i3 = i4;

        i4 = i4 + 1;

        r3[$i3] = r5;

        i5 = i5 + 1;

        goto label1;

     label2:
        $r8 = staticinvoke <com.opengamma.analytics.math.curve.ConstantDoublesCurve: com.opengamma.analytics.math.curve.ConstantDoublesCurve 'from'(double)>(d0);

        r3[i0] = $r8;

        $r9 = <com.opengamma.analytics.math.curve.SpreadCurveShiftFunction: com.opengamma.analytics.math.curve.CurveSpreadFunction SPREAD_FUNCTION>;

        $r10 = staticinvoke <com.opengamma.analytics.math.curve.SpreadDoublesCurve: com.opengamma.analytics.math.curve.SpreadDoublesCurve 'from'(com.opengamma.analytics.math.curve.CurveSpreadFunction,java.lang.String,com.opengamma.analytics.math.curve.DoublesCurve[])>($r9, r2, r3);

        return $r10;
    }

    public com.opengamma.analytics.math.curve.SpreadDoublesCurve evaluate(com.opengamma.analytics.math.curve.SpreadDoublesCurve, double, double)
    {
        com.opengamma.analytics.math.curve.SpreadCurveShiftFunction r0;
        com.opengamma.analytics.math.curve.SpreadDoublesCurve r1;
        double d0, d1;
        java.lang.UnsupportedOperationException $r2;

        r0 := @this: com.opengamma.analytics.math.curve.SpreadCurveShiftFunction;

        r1 := @parameter0: com.opengamma.analytics.math.curve.SpreadDoublesCurve;

        d0 := @parameter1: double;

        d1 := @parameter2: double;

        $r2 = new java.lang.UnsupportedOperationException;

        specialinvoke $r2.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r2;
    }

    public com.opengamma.analytics.math.curve.SpreadDoublesCurve evaluate(com.opengamma.analytics.math.curve.SpreadDoublesCurve, double, double, java.lang.String)
    {
        com.opengamma.analytics.math.curve.SpreadCurveShiftFunction r0;
        com.opengamma.analytics.math.curve.SpreadDoublesCurve r1;
        double d0, d1;
        java.lang.String r2;
        java.lang.UnsupportedOperationException $r3;

        r0 := @this: com.opengamma.analytics.math.curve.SpreadCurveShiftFunction;

        r1 := @parameter0: com.opengamma.analytics.math.curve.SpreadDoublesCurve;

        d0 := @parameter1: double;

        d1 := @parameter2: double;

        r2 := @parameter3: java.lang.String;

        $r3 = new java.lang.UnsupportedOperationException;

        specialinvoke $r3.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r3;
    }

    public com.opengamma.analytics.math.curve.SpreadDoublesCurve evaluate(com.opengamma.analytics.math.curve.SpreadDoublesCurve, double[], double[])
    {
        com.opengamma.analytics.math.curve.SpreadCurveShiftFunction r0;
        com.opengamma.analytics.math.curve.SpreadDoublesCurve r1;
        double[] r2, r3;
        java.lang.UnsupportedOperationException $r4;

        r0 := @this: com.opengamma.analytics.math.curve.SpreadCurveShiftFunction;

        r1 := @parameter0: com.opengamma.analytics.math.curve.SpreadDoublesCurve;

        r2 := @parameter1: double[];

        r3 := @parameter2: double[];

        $r4 = new java.lang.UnsupportedOperationException;

        specialinvoke $r4.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r4;
    }

    public com.opengamma.analytics.math.curve.SpreadDoublesCurve evaluate(com.opengamma.analytics.math.curve.SpreadDoublesCurve, double[], double[], java.lang.String)
    {
        com.opengamma.analytics.math.curve.SpreadCurveShiftFunction r0;
        com.opengamma.analytics.math.curve.SpreadDoublesCurve r1;
        double[] r2, r3;
        java.lang.String r4;
        java.lang.UnsupportedOperationException $r5;

        r0 := @this: com.opengamma.analytics.math.curve.SpreadCurveShiftFunction;

        r1 := @parameter0: com.opengamma.analytics.math.curve.SpreadDoublesCurve;

        r2 := @parameter1: double[];

        r3 := @parameter2: double[];

        r4 := @parameter3: java.lang.String;

        $r5 = new java.lang.UnsupportedOperationException;

        specialinvoke $r5.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r5;
    }

    public volatile com.opengamma.analytics.math.curve.Curve evaluate(com.opengamma.analytics.math.curve.Curve, double[], double[], java.lang.String)
    {
        com.opengamma.analytics.math.curve.SpreadCurveShiftFunction r0;
        com.opengamma.analytics.math.curve.Curve r1;
        double[] r2, r3;
        java.lang.String r4;
        com.opengamma.analytics.math.curve.SpreadDoublesCurve $r5, $r6;

        r0 := @this: com.opengamma.analytics.math.curve.SpreadCurveShiftFunction;

        r1 := @parameter0: com.opengamma.analytics.math.curve.Curve;

        r2 := @parameter1: double[];

        r3 := @parameter2: double[];

        r4 := @parameter3: java.lang.String;

        $r5 = (com.opengamma.analytics.math.curve.SpreadDoublesCurve) r1;

        $r6 = virtualinvoke r0.<com.opengamma.analytics.math.curve.SpreadCurveShiftFunction: com.opengamma.analytics.math.curve.SpreadDoublesCurve evaluate(com.opengamma.analytics.math.curve.SpreadDoublesCurve,double[],double[],java.lang.String)>($r5, r2, r3, r4);

        return $r6;
    }

    public volatile com.opengamma.analytics.math.curve.Curve evaluate(com.opengamma.analytics.math.curve.Curve, double[], double[])
    {
        com.opengamma.analytics.math.curve.SpreadCurveShiftFunction r0;
        com.opengamma.analytics.math.curve.Curve r1;
        double[] r2, r3;
        com.opengamma.analytics.math.curve.SpreadDoublesCurve $r4, $r5;

        r0 := @this: com.opengamma.analytics.math.curve.SpreadCurveShiftFunction;

        r1 := @parameter0: com.opengamma.analytics.math.curve.Curve;

        r2 := @parameter1: double[];

        r3 := @parameter2: double[];

        $r4 = (com.opengamma.analytics.math.curve.SpreadDoublesCurve) r1;

        $r5 = virtualinvoke r0.<com.opengamma.analytics.math.curve.SpreadCurveShiftFunction: com.opengamma.analytics.math.curve.SpreadDoublesCurve evaluate(com.opengamma.analytics.math.curve.SpreadDoublesCurve,double[],double[])>($r4, r2, r3);

        return $r5;
    }

    public volatile com.opengamma.analytics.math.curve.Curve evaluate(com.opengamma.analytics.math.curve.Curve, double, double, java.lang.String)
    {
        com.opengamma.analytics.math.curve.SpreadCurveShiftFunction r0;
        com.opengamma.analytics.math.curve.Curve r1;
        double d0, d1;
        java.lang.String r2;
        com.opengamma.analytics.math.curve.SpreadDoublesCurve $r3, $r4;

        r0 := @this: com.opengamma.analytics.math.curve.SpreadCurveShiftFunction;

        r1 := @parameter0: com.opengamma.analytics.math.curve.Curve;

        d0 := @parameter1: double;

        d1 := @parameter2: double;

        r2 := @parameter3: java.lang.String;

        $r3 = (com.opengamma.analytics.math.curve.SpreadDoublesCurve) r1;

        $r4 = virtualinvoke r0.<com.opengamma.analytics.math.curve.SpreadCurveShiftFunction: com.opengamma.analytics.math.curve.SpreadDoublesCurve evaluate(com.opengamma.analytics.math.curve.SpreadDoublesCurve,double,double,java.lang.String)>($r3, d0, d1, r2);

        return $r4;
    }

    public volatile com.opengamma.analytics.math.curve.Curve evaluate(com.opengamma.analytics.math.curve.Curve, double, double)
    {
        com.opengamma.analytics.math.curve.SpreadCurveShiftFunction r0;
        com.opengamma.analytics.math.curve.Curve r1;
        double d0, d1;
        com.opengamma.analytics.math.curve.SpreadDoublesCurve $r2, $r3;

        r0 := @this: com.opengamma.analytics.math.curve.SpreadCurveShiftFunction;

        r1 := @parameter0: com.opengamma.analytics.math.curve.Curve;

        d0 := @parameter1: double;

        d1 := @parameter2: double;

        $r2 = (com.opengamma.analytics.math.curve.SpreadDoublesCurve) r1;

        $r3 = virtualinvoke r0.<com.opengamma.analytics.math.curve.SpreadCurveShiftFunction: com.opengamma.analytics.math.curve.SpreadDoublesCurve evaluate(com.opengamma.analytics.math.curve.SpreadDoublesCurve,double,double)>($r2, d0, d1);

        return $r3;
    }

    public volatile com.opengamma.analytics.math.curve.Curve evaluate(com.opengamma.analytics.math.curve.Curve, double, java.lang.String)
    {
        com.opengamma.analytics.math.curve.SpreadCurveShiftFunction r0;
        com.opengamma.analytics.math.curve.Curve r1;
        double d0;
        java.lang.String r2;
        com.opengamma.analytics.math.curve.SpreadDoublesCurve $r3, $r4;

        r0 := @this: com.opengamma.analytics.math.curve.SpreadCurveShiftFunction;

        r1 := @parameter0: com.opengamma.analytics.math.curve.Curve;

        d0 := @parameter1: double;

        r2 := @parameter2: java.lang.String;

        $r3 = (com.opengamma.analytics.math.curve.SpreadDoublesCurve) r1;

        $r4 = virtualinvoke r0.<com.opengamma.analytics.math.curve.SpreadCurveShiftFunction: com.opengamma.analytics.math.curve.SpreadDoublesCurve evaluate(com.opengamma.analytics.math.curve.SpreadDoublesCurve,double,java.lang.String)>($r3, d0, r2);

        return $r4;
    }

    public volatile com.opengamma.analytics.math.curve.Curve evaluate(com.opengamma.analytics.math.curve.Curve, double)
    {
        com.opengamma.analytics.math.curve.SpreadCurveShiftFunction r0;
        com.opengamma.analytics.math.curve.Curve r1;
        double d0;
        com.opengamma.analytics.math.curve.SpreadDoublesCurve $r2, $r3;

        r0 := @this: com.opengamma.analytics.math.curve.SpreadCurveShiftFunction;

        r1 := @parameter0: com.opengamma.analytics.math.curve.Curve;

        d0 := @parameter1: double;

        $r2 = (com.opengamma.analytics.math.curve.SpreadDoublesCurve) r1;

        $r3 = virtualinvoke r0.<com.opengamma.analytics.math.curve.SpreadCurveShiftFunction: com.opengamma.analytics.math.curve.SpreadDoublesCurve evaluate(com.opengamma.analytics.math.curve.SpreadDoublesCurve,double)>($r2, d0);

        return $r3;
    }

    static void <clinit>()
    {
        com.opengamma.analytics.math.curve.CurveSpreadFunction $r0;

        $r0 = staticinvoke <com.opengamma.analytics.math.curve.AddCurveSpreadFunction: com.opengamma.analytics.math.curve.CurveSpreadFunction getInstance()>();

        <com.opengamma.analytics.math.curve.SpreadCurveShiftFunction: com.opengamma.analytics.math.curve.CurveSpreadFunction SPREAD_FUNCTION> = $r0;

        return;
    }
}
