public class org.apache.commons.math3.stat.correlation.SpearmansCorrelation extends java.lang.Object
{
    private final org.apache.commons.math3.linear.RealMatrix data;
    private final org.apache.commons.math3.stat.ranking.RankingAlgorithm rankingAlgorithm;
    private final org.apache.commons.math3.stat.correlation.PearsonsCorrelation rankCorrelation;

    public void <init>()
    {
        org.apache.commons.math3.stat.correlation.SpearmansCorrelation r0;
        org.apache.commons.math3.stat.ranking.NaturalRanking $r1;

        r0 := @this: org.apache.commons.math3.stat.correlation.SpearmansCorrelation;

        $r1 = new org.apache.commons.math3.stat.ranking.NaturalRanking;

        specialinvoke $r1.<org.apache.commons.math3.stat.ranking.NaturalRanking: void <init>()>();

        specialinvoke r0.<org.apache.commons.math3.stat.correlation.SpearmansCorrelation: void <init>(org.apache.commons.math3.stat.ranking.RankingAlgorithm)>($r1);

        return;
    }

    public void <init>(org.apache.commons.math3.stat.ranking.RankingAlgorithm)
    {
        org.apache.commons.math3.stat.correlation.SpearmansCorrelation r0;
        org.apache.commons.math3.stat.ranking.RankingAlgorithm r1;

        r0 := @this: org.apache.commons.math3.stat.correlation.SpearmansCorrelation;

        r1 := @parameter0: org.apache.commons.math3.stat.ranking.RankingAlgorithm;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.commons.math3.stat.correlation.SpearmansCorrelation: org.apache.commons.math3.linear.RealMatrix data> = null;

        r0.<org.apache.commons.math3.stat.correlation.SpearmansCorrelation: org.apache.commons.math3.stat.ranking.RankingAlgorithm rankingAlgorithm> = r1;

        r0.<org.apache.commons.math3.stat.correlation.SpearmansCorrelation: org.apache.commons.math3.stat.correlation.PearsonsCorrelation rankCorrelation> = null;

        return;
    }

    public void <init>(org.apache.commons.math3.linear.RealMatrix)
    {
        org.apache.commons.math3.stat.correlation.SpearmansCorrelation r0;
        org.apache.commons.math3.linear.RealMatrix r1;
        org.apache.commons.math3.stat.ranking.NaturalRanking $r2;

        r0 := @this: org.apache.commons.math3.stat.correlation.SpearmansCorrelation;

        r1 := @parameter0: org.apache.commons.math3.linear.RealMatrix;

        $r2 = new org.apache.commons.math3.stat.ranking.NaturalRanking;

        specialinvoke $r2.<org.apache.commons.math3.stat.ranking.NaturalRanking: void <init>()>();

        specialinvoke r0.<org.apache.commons.math3.stat.correlation.SpearmansCorrelation: void <init>(org.apache.commons.math3.linear.RealMatrix,org.apache.commons.math3.stat.ranking.RankingAlgorithm)>(r1, $r2);

        return;
    }

    public void <init>(org.apache.commons.math3.linear.RealMatrix, org.apache.commons.math3.stat.ranking.RankingAlgorithm)
    {
        org.apache.commons.math3.stat.correlation.SpearmansCorrelation r0;
        org.apache.commons.math3.linear.RealMatrix r1, $r3, $r5;
        org.apache.commons.math3.stat.ranking.RankingAlgorithm r2;
        org.apache.commons.math3.stat.correlation.PearsonsCorrelation $r4;

        r0 := @this: org.apache.commons.math3.stat.correlation.SpearmansCorrelation;

        r1 := @parameter0: org.apache.commons.math3.linear.RealMatrix;

        r2 := @parameter1: org.apache.commons.math3.stat.ranking.RankingAlgorithm;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.commons.math3.stat.correlation.SpearmansCorrelation: org.apache.commons.math3.stat.ranking.RankingAlgorithm rankingAlgorithm> = r2;

        $r3 = specialinvoke r0.<org.apache.commons.math3.stat.correlation.SpearmansCorrelation: org.apache.commons.math3.linear.RealMatrix rankTransform(org.apache.commons.math3.linear.RealMatrix)>(r1);

        r0.<org.apache.commons.math3.stat.correlation.SpearmansCorrelation: org.apache.commons.math3.linear.RealMatrix data> = $r3;

        $r4 = new org.apache.commons.math3.stat.correlation.PearsonsCorrelation;

        $r5 = r0.<org.apache.commons.math3.stat.correlation.SpearmansCorrelation: org.apache.commons.math3.linear.RealMatrix data>;

        specialinvoke $r4.<org.apache.commons.math3.stat.correlation.PearsonsCorrelation: void <init>(org.apache.commons.math3.linear.RealMatrix)>($r5);

        r0.<org.apache.commons.math3.stat.correlation.SpearmansCorrelation: org.apache.commons.math3.stat.correlation.PearsonsCorrelation rankCorrelation> = $r4;

        return;
    }

    public org.apache.commons.math3.linear.RealMatrix getCorrelationMatrix()
    {
        org.apache.commons.math3.stat.correlation.SpearmansCorrelation r0;
        org.apache.commons.math3.stat.correlation.PearsonsCorrelation $r1;
        org.apache.commons.math3.linear.RealMatrix $r2;

        r0 := @this: org.apache.commons.math3.stat.correlation.SpearmansCorrelation;

        $r1 = r0.<org.apache.commons.math3.stat.correlation.SpearmansCorrelation: org.apache.commons.math3.stat.correlation.PearsonsCorrelation rankCorrelation>;

        $r2 = virtualinvoke $r1.<org.apache.commons.math3.stat.correlation.PearsonsCorrelation: org.apache.commons.math3.linear.RealMatrix getCorrelationMatrix()>();

        return $r2;
    }

    public org.apache.commons.math3.stat.correlation.PearsonsCorrelation getRankCorrelation()
    {
        org.apache.commons.math3.stat.correlation.SpearmansCorrelation r0;
        org.apache.commons.math3.stat.correlation.PearsonsCorrelation $r1;

        r0 := @this: org.apache.commons.math3.stat.correlation.SpearmansCorrelation;

        $r1 = r0.<org.apache.commons.math3.stat.correlation.SpearmansCorrelation: org.apache.commons.math3.stat.correlation.PearsonsCorrelation rankCorrelation>;

        return $r1;
    }

    public org.apache.commons.math3.linear.RealMatrix computeCorrelationMatrix(org.apache.commons.math3.linear.RealMatrix)
    {
        org.apache.commons.math3.stat.correlation.SpearmansCorrelation r0;
        org.apache.commons.math3.linear.RealMatrix r1, r2, $r4;
        org.apache.commons.math3.stat.correlation.PearsonsCorrelation $r3;

        r0 := @this: org.apache.commons.math3.stat.correlation.SpearmansCorrelation;

        r1 := @parameter0: org.apache.commons.math3.linear.RealMatrix;

        r2 = specialinvoke r0.<org.apache.commons.math3.stat.correlation.SpearmansCorrelation: org.apache.commons.math3.linear.RealMatrix rankTransform(org.apache.commons.math3.linear.RealMatrix)>(r1);

        $r3 = new org.apache.commons.math3.stat.correlation.PearsonsCorrelation;

        specialinvoke $r3.<org.apache.commons.math3.stat.correlation.PearsonsCorrelation: void <init>()>();

        $r4 = virtualinvoke $r3.<org.apache.commons.math3.stat.correlation.PearsonsCorrelation: org.apache.commons.math3.linear.RealMatrix computeCorrelationMatrix(org.apache.commons.math3.linear.RealMatrix)>(r2);

        return $r4;
    }

    public org.apache.commons.math3.linear.RealMatrix computeCorrelationMatrix(double[][])
    {
        org.apache.commons.math3.stat.correlation.SpearmansCorrelation r0;
        double[][] r1;
        org.apache.commons.math3.linear.BlockRealMatrix $r2;
        org.apache.commons.math3.linear.RealMatrix $r3;

        r0 := @this: org.apache.commons.math3.stat.correlation.SpearmansCorrelation;

        r1 := @parameter0: double[][];

        $r2 = new org.apache.commons.math3.linear.BlockRealMatrix;

        specialinvoke $r2.<org.apache.commons.math3.linear.BlockRealMatrix: void <init>(double[][])>(r1);

        $r3 = virtualinvoke r0.<org.apache.commons.math3.stat.correlation.SpearmansCorrelation: org.apache.commons.math3.linear.RealMatrix computeCorrelationMatrix(org.apache.commons.math3.linear.RealMatrix)>($r2);

        return $r3;
    }

    public double correlation(double[], double[])
    {
        org.apache.commons.math3.stat.correlation.SpearmansCorrelation r0;
        double[] r1, r2, r18, r19, $r22, $r24;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        org.apache.commons.math3.stat.ranking.RankingAlgorithm $r4, $r5, $r21, $r23;
        boolean $z0;
        org.apache.commons.math3.stat.ranking.NaturalRanking $r6;
        org.apache.commons.math3.stat.ranking.NaNStrategy $r7, $r8;
        java.util.HashSet $r9;
        java.util.List $r10, $r11;
        org.apache.commons.math3.exception.MathIllegalArgumentException $r12;
        java.lang.Object[] $r13;
        org.apache.commons.math3.exception.util.LocalizedFormats $r14;
        java.lang.Integer $r15, $r16;
        org.apache.commons.math3.exception.DimensionMismatchException $r17;
        org.apache.commons.math3.stat.correlation.PearsonsCorrelation $r20;
        double $d0;

        r0 := @this: org.apache.commons.math3.stat.correlation.SpearmansCorrelation;

        r1 := @parameter0: double[];

        r2 := @parameter1: double[];

        $i1 = lengthof r1;

        $i0 = lengthof r2;

        if $i1 == $i0 goto label1;

        $r17 = new org.apache.commons.math3.exception.DimensionMismatchException;

        $i5 = lengthof r1;

        $i4 = lengthof r2;

        specialinvoke $r17.<org.apache.commons.math3.exception.DimensionMismatchException: void <init>(int,int)>($i5, $i4);

        throw $r17;

     label1:
        $i2 = lengthof r1;

        if $i2 >= 2 goto label2;

        $r12 = new org.apache.commons.math3.exception.MathIllegalArgumentException;

        $r14 = <org.apache.commons.math3.exception.util.LocalizedFormats: org.apache.commons.math3.exception.util.LocalizedFormats INSUFFICIENT_DIMENSION>;

        $r13 = newarray (java.lang.Object)[2];

        $i3 = lengthof r1;

        $r15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3);

        $r13[0] = $r15;

        $r16 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2);

        $r13[1] = $r16;

        specialinvoke $r12.<org.apache.commons.math3.exception.MathIllegalArgumentException: void <init>(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])>($r14, $r13);

        throw $r12;

     label2:
        r18 = r1;

        r19 = r2;

        $r4 = r0.<org.apache.commons.math3.stat.correlation.SpearmansCorrelation: org.apache.commons.math3.stat.ranking.RankingAlgorithm rankingAlgorithm>;

        $z0 = $r4 instanceof org.apache.commons.math3.stat.ranking.NaturalRanking;

        if $z0 == 0 goto label3;

        $r7 = <org.apache.commons.math3.stat.ranking.NaNStrategy: org.apache.commons.math3.stat.ranking.NaNStrategy REMOVED>;

        $r5 = r0.<org.apache.commons.math3.stat.correlation.SpearmansCorrelation: org.apache.commons.math3.stat.ranking.RankingAlgorithm rankingAlgorithm>;

        $r6 = (org.apache.commons.math3.stat.ranking.NaturalRanking) $r5;

        $r8 = virtualinvoke $r6.<org.apache.commons.math3.stat.ranking.NaturalRanking: org.apache.commons.math3.stat.ranking.NaNStrategy getNanStrategy()>();

        if $r7 != $r8 goto label3;

        $r9 = new java.util.HashSet;

        specialinvoke $r9.<java.util.HashSet: void <init>()>();

        $r10 = specialinvoke r0.<org.apache.commons.math3.stat.correlation.SpearmansCorrelation: java.util.List getNaNPositions(double[])>(r1);

        interfaceinvoke $r9.<java.util.Set: boolean addAll(java.util.Collection)>($r10);

        $r11 = specialinvoke r0.<org.apache.commons.math3.stat.correlation.SpearmansCorrelation: java.util.List getNaNPositions(double[])>(r2);

        interfaceinvoke $r9.<java.util.Set: boolean addAll(java.util.Collection)>($r11);

        r18 = specialinvoke r0.<org.apache.commons.math3.stat.correlation.SpearmansCorrelation: double[] removeValues(double[],java.util.Set)>(r1, $r9);

        r19 = specialinvoke r0.<org.apache.commons.math3.stat.correlation.SpearmansCorrelation: double[] removeValues(double[],java.util.Set)>(r2, $r9);

     label3:
        $r20 = new org.apache.commons.math3.stat.correlation.PearsonsCorrelation;

        specialinvoke $r20.<org.apache.commons.math3.stat.correlation.PearsonsCorrelation: void <init>()>();

        $r21 = r0.<org.apache.commons.math3.stat.correlation.SpearmansCorrelation: org.apache.commons.math3.stat.ranking.RankingAlgorithm rankingAlgorithm>;

        $r22 = interfaceinvoke $r21.<org.apache.commons.math3.stat.ranking.RankingAlgorithm: double[] rank(double[])>(r18);

        $r23 = r0.<org.apache.commons.math3.stat.correlation.SpearmansCorrelation: org.apache.commons.math3.stat.ranking.RankingAlgorithm rankingAlgorithm>;

        $r24 = interfaceinvoke $r23.<org.apache.commons.math3.stat.ranking.RankingAlgorithm: double[] rank(double[])>(r19);

        $d0 = virtualinvoke $r20.<org.apache.commons.math3.stat.correlation.PearsonsCorrelation: double correlation(double[],double[])>($r22, $r24);

        return $d0;
    }

    private org.apache.commons.math3.linear.RealMatrix rankTransform(org.apache.commons.math3.linear.RealMatrix)
    {
        org.apache.commons.math3.stat.correlation.SpearmansCorrelation r0;
        org.apache.commons.math3.linear.RealMatrix r1, r16;
        org.apache.commons.math3.stat.ranking.RankingAlgorithm $r2, $r3, $r6;
        boolean $z0, $z1;
        double[] $r4, $r5, $r12, $r13, $r14;
        org.apache.commons.math3.stat.ranking.NaturalRanking $r7;
        org.apache.commons.math3.stat.ranking.NaNStrategy $r8, $r9;
        java.util.HashSet $r10;
        int $i0, $i1, $i2, $i3, $i4, $i5, i6, i7, i8, $i9;
        org.apache.commons.math3.linear.BlockRealMatrix $r11;
        java.util.List $r15;

        r0 := @this: org.apache.commons.math3.stat.correlation.SpearmansCorrelation;

        r1 := @parameter0: org.apache.commons.math3.linear.RealMatrix;

        r16 = null;

        $r2 = r0.<org.apache.commons.math3.stat.correlation.SpearmansCorrelation: org.apache.commons.math3.stat.ranking.RankingAlgorithm rankingAlgorithm>;

        $z0 = $r2 instanceof org.apache.commons.math3.stat.ranking.NaturalRanking;

        if $z0 == 0 goto label4;

        $r6 = r0.<org.apache.commons.math3.stat.correlation.SpearmansCorrelation: org.apache.commons.math3.stat.ranking.RankingAlgorithm rankingAlgorithm>;

        $r7 = (org.apache.commons.math3.stat.ranking.NaturalRanking) $r6;

        $r8 = virtualinvoke $r7.<org.apache.commons.math3.stat.ranking.NaturalRanking: org.apache.commons.math3.stat.ranking.NaNStrategy getNanStrategy()>();

        $r9 = <org.apache.commons.math3.stat.ranking.NaNStrategy: org.apache.commons.math3.stat.ranking.NaNStrategy REMOVED>;

        if $r8 != $r9 goto label4;

        $r10 = new java.util.HashSet;

        specialinvoke $r10.<java.util.HashSet: void <init>()>();

        i6 = 0;

     label1:
        $i0 = interfaceinvoke r1.<org.apache.commons.math3.linear.RealMatrix: int getColumnDimension()>();

        if i6 >= $i0 goto label2;

        $r14 = interfaceinvoke r1.<org.apache.commons.math3.linear.RealMatrix: double[] getColumn(int)>(i6);

        $r15 = specialinvoke r0.<org.apache.commons.math3.stat.correlation.SpearmansCorrelation: java.util.List getNaNPositions(double[])>($r14);

        interfaceinvoke $r10.<java.util.Set: boolean addAll(java.util.Collection)>($r15);

        i6 = i6 + 1;

        goto label1;

     label2:
        $z1 = interfaceinvoke $r10.<java.util.Set: boolean isEmpty()>();

        if $z1 != 0 goto label4;

        $r11 = new org.apache.commons.math3.linear.BlockRealMatrix;

        $i1 = interfaceinvoke r1.<org.apache.commons.math3.linear.RealMatrix: int getRowDimension()>();

        $i2 = interfaceinvoke $r10.<java.util.Set: int size()>();

        $i3 = $i1 - $i2;

        $i4 = interfaceinvoke r1.<org.apache.commons.math3.linear.RealMatrix: int getColumnDimension()>();

        specialinvoke $r11.<org.apache.commons.math3.linear.BlockRealMatrix: void <init>(int,int)>($i3, $i4);

        r16 = $r11;

        i7 = 0;

     label3:
        $i5 = interfaceinvoke $r11.<org.apache.commons.math3.linear.RealMatrix: int getColumnDimension()>();

        if i7 >= $i5 goto label4;

        $r12 = interfaceinvoke r1.<org.apache.commons.math3.linear.RealMatrix: double[] getColumn(int)>(i7);

        $r13 = specialinvoke r0.<org.apache.commons.math3.stat.correlation.SpearmansCorrelation: double[] removeValues(double[],java.util.Set)>($r12, $r10);

        interfaceinvoke $r11.<org.apache.commons.math3.linear.RealMatrix: void setColumn(int,double[])>(i7, $r13);

        i7 = i7 + 1;

        goto label3;

     label4:
        if r16 != null goto label5;

        r16 = interfaceinvoke r1.<org.apache.commons.math3.linear.RealMatrix: org.apache.commons.math3.linear.RealMatrix copy()>();

     label5:
        i8 = 0;

     label6:
        $i9 = interfaceinvoke r16.<org.apache.commons.math3.linear.RealMatrix: int getColumnDimension()>();

        if i8 >= $i9 goto label7;

        $r3 = r0.<org.apache.commons.math3.stat.correlation.SpearmansCorrelation: org.apache.commons.math3.stat.ranking.RankingAlgorithm rankingAlgorithm>;

        $r4 = interfaceinvoke r16.<org.apache.commons.math3.linear.RealMatrix: double[] getColumn(int)>(i8);

        $r5 = interfaceinvoke $r3.<org.apache.commons.math3.stat.ranking.RankingAlgorithm: double[] rank(double[])>($r4);

        interfaceinvoke r16.<org.apache.commons.math3.linear.RealMatrix: void setColumn(int,double[])>(i8, $r5);

        i8 = i8 + 1;

        goto label6;

     label7:
        return r16;
    }

    private java.util.List getNaNPositions(double[])
    {
        org.apache.commons.math3.stat.correlation.SpearmansCorrelation r0;
        double[] r1;
        java.util.ArrayList $r3;
        int $i0, i1;
        double $d0;
        boolean $z0;
        java.lang.Integer $r4;

        r0 := @this: org.apache.commons.math3.stat.correlation.SpearmansCorrelation;

        r1 := @parameter0: double[];

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        i1 = 0;

     label1:
        $i0 = lengthof r1;

        if i1 >= $i0 goto label3;

        $d0 = r1[i1];

        $z0 = staticinvoke <java.lang.Double: boolean isNaN(double)>($d0);

        if $z0 == 0 goto label2;

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>($r4);

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return $r3;
    }

    private double[] removeValues(double[], java.util.Set)
    {
        org.apache.commons.math3.stat.correlation.SpearmansCorrelation r0;
        double[] r1, r3;
        java.util.Set r2;
        boolean $z0, $z1;
        int $i0, $i1, $i2, $i3, $i4, i5, i6;
        java.lang.Integer $r4;
        double $d0;

        r0 := @this: org.apache.commons.math3.stat.correlation.SpearmansCorrelation;

        r1 := @parameter0: double[];

        r2 := @parameter1: java.util.Set;

        $z0 = interfaceinvoke r2.<java.util.Set: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        return r1;

     label1:
        $i0 = lengthof r1;

        $i1 = interfaceinvoke r2.<java.util.Set: int size()>();

        $i2 = $i0 - $i1;

        r3 = newarray (double)[$i2];

        i5 = 0;

        i6 = 0;

     label2:
        $i3 = lengthof r1;

        if i5 >= $i3 goto label4;

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i5);

        $z1 = interfaceinvoke r2.<java.util.Set: boolean contains(java.lang.Object)>($r4);

        if $z1 != 0 goto label3;

        $i4 = i6;

        i6 = i6 + 1;

        $d0 = r1[i5];

        r3[$i4] = $d0;

     label3:
        i5 = i5 + 1;

        goto label2;

     label4:
        return r3;
    }
}
