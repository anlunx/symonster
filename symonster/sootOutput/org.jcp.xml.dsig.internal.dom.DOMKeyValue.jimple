public final class org.jcp.xml.dsig.internal.dom.DOMKeyValue extends org.jcp.xml.dsig.internal.dom.DOMStructure implements javax.xml.crypto.dsig.keyinfo.KeyValue
{
    private java.security.KeyFactory rsakf;
    private java.security.KeyFactory dsakf;
    private java.security.PublicKey publicKey;
    private javax.xml.crypto.dom.DOMStructure externalPublicKey;
    private org.jcp.xml.dsig.internal.dom.DOMCryptoBinary p;
    private org.jcp.xml.dsig.internal.dom.DOMCryptoBinary q;
    private org.jcp.xml.dsig.internal.dom.DOMCryptoBinary g;
    private org.jcp.xml.dsig.internal.dom.DOMCryptoBinary y;
    private org.jcp.xml.dsig.internal.dom.DOMCryptoBinary j;
    private org.jcp.xml.dsig.internal.dom.DOMCryptoBinary seed;
    private org.jcp.xml.dsig.internal.dom.DOMCryptoBinary pgen;
    private org.jcp.xml.dsig.internal.dom.DOMCryptoBinary modulus;
    private org.jcp.xml.dsig.internal.dom.DOMCryptoBinary exponent;

    public void <init>(java.security.PublicKey) throws java.security.KeyException
    {
        org.jcp.xml.dsig.internal.dom.DOMKeyValue r0;
        java.security.PublicKey r1;
        java.security.interfaces.DSAParams r2;
        boolean $z0, $z1;
        java.security.KeyException $r3;
        java.lang.StringBuilder $r4, $r5, $r7;
        java.lang.String $r6, $r8;
        org.jcp.xml.dsig.internal.dom.DOMCryptoBinary $r9, $r11, $r13, $r15, $r17, $r19;
        java.math.BigInteger $r10, $r12, $r14, $r16, $r18, $r20;
        java.lang.NullPointerException $r21;
        java.security.interfaces.DSAPublicKey r22;
        java.security.interfaces.RSAPublicKey r23;

        r0 := @this: org.jcp.xml.dsig.internal.dom.DOMKeyValue;

        r1 := @parameter0: java.security.PublicKey;

        specialinvoke r0.<org.jcp.xml.dsig.internal.dom.DOMStructure: void <init>()>();

        if r1 != null goto label1;

        $r21 = new java.lang.NullPointerException;

        specialinvoke $r21.<java.lang.NullPointerException: void <init>(java.lang.String)>("key cannot be null");

        throw $r21;

     label1:
        r0.<org.jcp.xml.dsig.internal.dom.DOMKeyValue: java.security.PublicKey publicKey> = r1;

        $z0 = r1 instanceof java.security.interfaces.DSAPublicKey;

        if $z0 == 0 goto label2;

        r22 = (java.security.interfaces.DSAPublicKey) r1;

        r2 = interfaceinvoke r22.<java.security.interfaces.DSAPublicKey: java.security.interfaces.DSAParams getParams()>();

        $r13 = new org.jcp.xml.dsig.internal.dom.DOMCryptoBinary;

        $r14 = interfaceinvoke r2.<java.security.interfaces.DSAParams: java.math.BigInteger getP()>();

        specialinvoke $r13.<org.jcp.xml.dsig.internal.dom.DOMCryptoBinary: void <init>(java.math.BigInteger)>($r14);

        r0.<org.jcp.xml.dsig.internal.dom.DOMKeyValue: org.jcp.xml.dsig.internal.dom.DOMCryptoBinary p> = $r13;

        $r15 = new org.jcp.xml.dsig.internal.dom.DOMCryptoBinary;

        $r16 = interfaceinvoke r2.<java.security.interfaces.DSAParams: java.math.BigInteger getQ()>();

        specialinvoke $r15.<org.jcp.xml.dsig.internal.dom.DOMCryptoBinary: void <init>(java.math.BigInteger)>($r16);

        r0.<org.jcp.xml.dsig.internal.dom.DOMKeyValue: org.jcp.xml.dsig.internal.dom.DOMCryptoBinary q> = $r15;

        $r17 = new org.jcp.xml.dsig.internal.dom.DOMCryptoBinary;

        $r18 = interfaceinvoke r2.<java.security.interfaces.DSAParams: java.math.BigInteger getG()>();

        specialinvoke $r17.<org.jcp.xml.dsig.internal.dom.DOMCryptoBinary: void <init>(java.math.BigInteger)>($r18);

        r0.<org.jcp.xml.dsig.internal.dom.DOMKeyValue: org.jcp.xml.dsig.internal.dom.DOMCryptoBinary g> = $r17;

        $r19 = new org.jcp.xml.dsig.internal.dom.DOMCryptoBinary;

        $r20 = interfaceinvoke r22.<java.security.interfaces.DSAPublicKey: java.math.BigInteger getY()>();

        specialinvoke $r19.<org.jcp.xml.dsig.internal.dom.DOMCryptoBinary: void <init>(java.math.BigInteger)>($r20);

        r0.<org.jcp.xml.dsig.internal.dom.DOMKeyValue: org.jcp.xml.dsig.internal.dom.DOMCryptoBinary y> = $r19;

        goto label4;

     label2:
        $z1 = r1 instanceof java.security.interfaces.RSAPublicKey;

        if $z1 == 0 goto label3;

        r23 = (java.security.interfaces.RSAPublicKey) r1;

        $r9 = new org.jcp.xml.dsig.internal.dom.DOMCryptoBinary;

        $r10 = interfaceinvoke r23.<java.security.interfaces.RSAPublicKey: java.math.BigInteger getPublicExponent()>();

        specialinvoke $r9.<org.jcp.xml.dsig.internal.dom.DOMCryptoBinary: void <init>(java.math.BigInteger)>($r10);

        r0.<org.jcp.xml.dsig.internal.dom.DOMKeyValue: org.jcp.xml.dsig.internal.dom.DOMCryptoBinary exponent> = $r9;

        $r11 = new org.jcp.xml.dsig.internal.dom.DOMCryptoBinary;

        $r12 = interfaceinvoke r23.<java.security.interfaces.RSAPublicKey: java.math.BigInteger getModulus()>();

        specialinvoke $r11.<org.jcp.xml.dsig.internal.dom.DOMCryptoBinary: void <init>(java.math.BigInteger)>($r12);

        r0.<org.jcp.xml.dsig.internal.dom.DOMKeyValue: org.jcp.xml.dsig.internal.dom.DOMCryptoBinary modulus> = $r11;

        goto label4;

     label3:
        $r3 = new java.security.KeyException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("unsupported key algorithm: ");

        $r6 = interfaceinvoke r1.<java.security.PublicKey: java.lang.String getAlgorithm()>();

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.security.KeyException: void <init>(java.lang.String)>($r8);

        throw $r3;

     label4:
        return;
    }

    public void <init>(org.w3c.dom.Element) throws javax.xml.crypto.MarshalException
    {
        org.jcp.xml.dsig.internal.dom.DOMKeyValue r0;
        org.w3c.dom.Element r1, r2;
        java.lang.String $r3, $r4;
        boolean $z0, $z1;
        javax.xml.crypto.dom.DOMStructure $r5;
        java.security.interfaces.RSAPublicKey $r6;
        java.security.interfaces.DSAPublicKey $r7;

        r0 := @this: org.jcp.xml.dsig.internal.dom.DOMKeyValue;

        r1 := @parameter0: org.w3c.dom.Element;

        specialinvoke r0.<org.jcp.xml.dsig.internal.dom.DOMStructure: void <init>()>();

        r2 = staticinvoke <org.jcp.xml.dsig.internal.dom.DOMUtils: org.w3c.dom.Element getFirstChildElement(org.w3c.dom.Node)>(r1);

        $r3 = interfaceinvoke r2.<org.w3c.dom.Element: java.lang.String getLocalName()>();

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>("DSAKeyValue");

        if $z0 == 0 goto label1;

        $r7 = specialinvoke r0.<org.jcp.xml.dsig.internal.dom.DOMKeyValue: java.security.interfaces.DSAPublicKey unmarshalDSAKeyValue(org.w3c.dom.Element)>(r2);

        r0.<org.jcp.xml.dsig.internal.dom.DOMKeyValue: java.security.PublicKey publicKey> = $r7;

        goto label3;

     label1:
        $r4 = interfaceinvoke r2.<org.w3c.dom.Element: java.lang.String getLocalName()>();

        $z1 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>("RSAKeyValue");

        if $z1 == 0 goto label2;

        $r6 = specialinvoke r0.<org.jcp.xml.dsig.internal.dom.DOMKeyValue: java.security.interfaces.RSAPublicKey unmarshalRSAKeyValue(org.w3c.dom.Element)>(r2);

        r0.<org.jcp.xml.dsig.internal.dom.DOMKeyValue: java.security.PublicKey publicKey> = $r6;

        goto label3;

     label2:
        r0.<org.jcp.xml.dsig.internal.dom.DOMKeyValue: java.security.PublicKey publicKey> = null;

        $r5 = new javax.xml.crypto.dom.DOMStructure;

        specialinvoke $r5.<javax.xml.crypto.dom.DOMStructure: void <init>(org.w3c.dom.Node)>(r2);

        r0.<org.jcp.xml.dsig.internal.dom.DOMKeyValue: javax.xml.crypto.dom.DOMStructure externalPublicKey> = $r5;

     label3:
        return;
    }

    public java.security.PublicKey getPublicKey() throws java.security.KeyException
    {
        org.jcp.xml.dsig.internal.dom.DOMKeyValue r0;
        java.security.PublicKey $r1, $r2;
        java.security.KeyException $r3;

        r0 := @this: org.jcp.xml.dsig.internal.dom.DOMKeyValue;

        $r1 = r0.<org.jcp.xml.dsig.internal.dom.DOMKeyValue: java.security.PublicKey publicKey>;

        if $r1 != null goto label1;

        $r3 = new java.security.KeyException;

        specialinvoke $r3.<java.security.KeyException: void <init>(java.lang.String)>("can\'t convert KeyValue to PublicKey");

        throw $r3;

     label1:
        $r2 = r0.<org.jcp.xml.dsig.internal.dom.DOMKeyValue: java.security.PublicKey publicKey>;

        return $r2;
    }

    public void marshal(org.w3c.dom.Node, java.lang.String, javax.xml.crypto.dom.DOMCryptoContext) throws javax.xml.crypto.MarshalException
    {
        org.jcp.xml.dsig.internal.dom.DOMKeyValue r0;
        org.w3c.dom.Node r1;
        java.lang.String r2;
        javax.xml.crypto.dom.DOMCryptoContext r3;
        org.w3c.dom.Document r4;
        org.w3c.dom.Element r5;

        r0 := @this: org.jcp.xml.dsig.internal.dom.DOMKeyValue;

        r1 := @parameter0: org.w3c.dom.Node;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: javax.xml.crypto.dom.DOMCryptoContext;

        r4 = staticinvoke <org.jcp.xml.dsig.internal.dom.DOMUtils: org.w3c.dom.Document getOwnerDocument(org.w3c.dom.Node)>(r1);

        r5 = staticinvoke <org.jcp.xml.dsig.internal.dom.DOMUtils: org.w3c.dom.Element createElement(org.w3c.dom.Document,java.lang.String,java.lang.String,java.lang.String)>(r4, "KeyValue", "http://www.w3.org/2000/09/xmldsig#", r2);

        specialinvoke r0.<org.jcp.xml.dsig.internal.dom.DOMKeyValue: void marshalPublicKey(org.w3c.dom.Node,org.w3c.dom.Document,java.lang.String,javax.xml.crypto.dom.DOMCryptoContext)>(r5, r4, r2, r3);

        interfaceinvoke r1.<org.w3c.dom.Node: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>(r5);

        return;
    }

    private void marshalPublicKey(org.w3c.dom.Node, org.w3c.dom.Document, java.lang.String, javax.xml.crypto.dom.DOMCryptoContext) throws javax.xml.crypto.MarshalException
    {
        org.jcp.xml.dsig.internal.dom.DOMKeyValue r0;
        org.w3c.dom.Node r1, $r7;
        org.w3c.dom.Document r2;
        java.lang.String r3, $r14, $r17;
        javax.xml.crypto.dom.DOMCryptoContext r4;
        java.security.PublicKey $r5, $r9, $r10, $r13;
        javax.xml.crypto.dom.DOMStructure $r6;
        boolean $z0, $z1;
        javax.xml.crypto.MarshalException $r11;
        java.lang.StringBuilder $r12, $r15, $r16;

        r0 := @this: org.jcp.xml.dsig.internal.dom.DOMKeyValue;

        r1 := @parameter0: org.w3c.dom.Node;

        r2 := @parameter1: org.w3c.dom.Document;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: javax.xml.crypto.dom.DOMCryptoContext;

        $r5 = r0.<org.jcp.xml.dsig.internal.dom.DOMKeyValue: java.security.PublicKey publicKey>;

        if $r5 == null goto label3;

        $r9 = r0.<org.jcp.xml.dsig.internal.dom.DOMKeyValue: java.security.PublicKey publicKey>;

        $z0 = $r9 instanceof java.security.interfaces.DSAPublicKey;

        if $z0 == 0 goto label1;

        specialinvoke r0.<org.jcp.xml.dsig.internal.dom.DOMKeyValue: void marshalDSAPublicKey(org.w3c.dom.Node,org.w3c.dom.Document,java.lang.String,javax.xml.crypto.dom.DOMCryptoContext)>(r1, r2, r3, r4);

        goto label4;

     label1:
        $r10 = r0.<org.jcp.xml.dsig.internal.dom.DOMKeyValue: java.security.PublicKey publicKey>;

        $z1 = $r10 instanceof java.security.interfaces.RSAPublicKey;

        if $z1 == 0 goto label2;

        specialinvoke r0.<org.jcp.xml.dsig.internal.dom.DOMKeyValue: void marshalRSAPublicKey(org.w3c.dom.Node,org.w3c.dom.Document,java.lang.String,javax.xml.crypto.dom.DOMCryptoContext)>(r1, r2, r3, r4);

        goto label4;

     label2:
        $r11 = new javax.xml.crypto.MarshalException;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r13 = r0.<org.jcp.xml.dsig.internal.dom.DOMKeyValue: java.security.PublicKey publicKey>;

        $r14 = interfaceinvoke $r13.<java.security.PublicKey: java.lang.String getAlgorithm()>();

        $r15 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" public key algorithm not supported");

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r11.<javax.xml.crypto.MarshalException: void <init>(java.lang.String)>($r17);

        throw $r11;

     label3:
        $r6 = r0.<org.jcp.xml.dsig.internal.dom.DOMKeyValue: javax.xml.crypto.dom.DOMStructure externalPublicKey>;

        $r7 = virtualinvoke $r6.<javax.xml.crypto.dom.DOMStructure: org.w3c.dom.Node getNode()>();

        interfaceinvoke r1.<org.w3c.dom.Node: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>($r7);

     label4:
        return;
    }

    private void marshalDSAPublicKey(org.w3c.dom.Node, org.w3c.dom.Document, java.lang.String, javax.xml.crypto.dom.DOMCryptoContext) throws javax.xml.crypto.MarshalException
    {
        org.jcp.xml.dsig.internal.dom.DOMKeyValue r0;
        org.w3c.dom.Node r1;
        org.w3c.dom.Document r2;
        java.lang.String r3;
        javax.xml.crypto.dom.DOMCryptoContext r4;
        org.w3c.dom.Element r5, r6, r7, r8, r9;
        org.jcp.xml.dsig.internal.dom.DOMCryptoBinary $r10, $r11, $r12, $r13;

        r0 := @this: org.jcp.xml.dsig.internal.dom.DOMKeyValue;

        r1 := @parameter0: org.w3c.dom.Node;

        r2 := @parameter1: org.w3c.dom.Document;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: javax.xml.crypto.dom.DOMCryptoContext;

        r5 = staticinvoke <org.jcp.xml.dsig.internal.dom.DOMUtils: org.w3c.dom.Element createElement(org.w3c.dom.Document,java.lang.String,java.lang.String,java.lang.String)>(r2, "DSAKeyValue", "http://www.w3.org/2000/09/xmldsig#", r3);

        r6 = staticinvoke <org.jcp.xml.dsig.internal.dom.DOMUtils: org.w3c.dom.Element createElement(org.w3c.dom.Document,java.lang.String,java.lang.String,java.lang.String)>(r2, "P", "http://www.w3.org/2000/09/xmldsig#", r3);

        r7 = staticinvoke <org.jcp.xml.dsig.internal.dom.DOMUtils: org.w3c.dom.Element createElement(org.w3c.dom.Document,java.lang.String,java.lang.String,java.lang.String)>(r2, "Q", "http://www.w3.org/2000/09/xmldsig#", r3);

        r8 = staticinvoke <org.jcp.xml.dsig.internal.dom.DOMUtils: org.w3c.dom.Element createElement(org.w3c.dom.Document,java.lang.String,java.lang.String,java.lang.String)>(r2, "G", "http://www.w3.org/2000/09/xmldsig#", r3);

        r9 = staticinvoke <org.jcp.xml.dsig.internal.dom.DOMUtils: org.w3c.dom.Element createElement(org.w3c.dom.Document,java.lang.String,java.lang.String,java.lang.String)>(r2, "Y", "http://www.w3.org/2000/09/xmldsig#", r3);

        $r10 = r0.<org.jcp.xml.dsig.internal.dom.DOMKeyValue: org.jcp.xml.dsig.internal.dom.DOMCryptoBinary p>;

        virtualinvoke $r10.<org.jcp.xml.dsig.internal.dom.DOMCryptoBinary: void marshal(org.w3c.dom.Node,java.lang.String,javax.xml.crypto.dom.DOMCryptoContext)>(r6, r3, r4);

        $r11 = r0.<org.jcp.xml.dsig.internal.dom.DOMKeyValue: org.jcp.xml.dsig.internal.dom.DOMCryptoBinary q>;

        virtualinvoke $r11.<org.jcp.xml.dsig.internal.dom.DOMCryptoBinary: void marshal(org.w3c.dom.Node,java.lang.String,javax.xml.crypto.dom.DOMCryptoContext)>(r7, r3, r4);

        $r12 = r0.<org.jcp.xml.dsig.internal.dom.DOMKeyValue: org.jcp.xml.dsig.internal.dom.DOMCryptoBinary g>;

        virtualinvoke $r12.<org.jcp.xml.dsig.internal.dom.DOMCryptoBinary: void marshal(org.w3c.dom.Node,java.lang.String,javax.xml.crypto.dom.DOMCryptoContext)>(r8, r3, r4);

        $r13 = r0.<org.jcp.xml.dsig.internal.dom.DOMKeyValue: org.jcp.xml.dsig.internal.dom.DOMCryptoBinary y>;

        virtualinvoke $r13.<org.jcp.xml.dsig.internal.dom.DOMCryptoBinary: void marshal(org.w3c.dom.Node,java.lang.String,javax.xml.crypto.dom.DOMCryptoContext)>(r9, r3, r4);

        interfaceinvoke r5.<org.w3c.dom.Element: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>(r6);

        interfaceinvoke r5.<org.w3c.dom.Element: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>(r7);

        interfaceinvoke r5.<org.w3c.dom.Element: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>(r8);

        interfaceinvoke r5.<org.w3c.dom.Element: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>(r9);

        interfaceinvoke r1.<org.w3c.dom.Node: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>(r5);

        return;
    }

    private void marshalRSAPublicKey(org.w3c.dom.Node, org.w3c.dom.Document, java.lang.String, javax.xml.crypto.dom.DOMCryptoContext) throws javax.xml.crypto.MarshalException
    {
        org.jcp.xml.dsig.internal.dom.DOMKeyValue r0;
        org.w3c.dom.Node r1;
        org.w3c.dom.Document r2;
        java.lang.String r3;
        javax.xml.crypto.dom.DOMCryptoContext r4;
        org.w3c.dom.Element r5, r6, r7;
        org.jcp.xml.dsig.internal.dom.DOMCryptoBinary $r8, $r9;

        r0 := @this: org.jcp.xml.dsig.internal.dom.DOMKeyValue;

        r1 := @parameter0: org.w3c.dom.Node;

        r2 := @parameter1: org.w3c.dom.Document;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: javax.xml.crypto.dom.DOMCryptoContext;

        r5 = staticinvoke <org.jcp.xml.dsig.internal.dom.DOMUtils: org.w3c.dom.Element createElement(org.w3c.dom.Document,java.lang.String,java.lang.String,java.lang.String)>(r2, "RSAKeyValue", "http://www.w3.org/2000/09/xmldsig#", r3);

        r6 = staticinvoke <org.jcp.xml.dsig.internal.dom.DOMUtils: org.w3c.dom.Element createElement(org.w3c.dom.Document,java.lang.String,java.lang.String,java.lang.String)>(r2, "Modulus", "http://www.w3.org/2000/09/xmldsig#", r3);

        r7 = staticinvoke <org.jcp.xml.dsig.internal.dom.DOMUtils: org.w3c.dom.Element createElement(org.w3c.dom.Document,java.lang.String,java.lang.String,java.lang.String)>(r2, "Exponent", "http://www.w3.org/2000/09/xmldsig#", r3);

        $r8 = r0.<org.jcp.xml.dsig.internal.dom.DOMKeyValue: org.jcp.xml.dsig.internal.dom.DOMCryptoBinary modulus>;

        virtualinvoke $r8.<org.jcp.xml.dsig.internal.dom.DOMCryptoBinary: void marshal(org.w3c.dom.Node,java.lang.String,javax.xml.crypto.dom.DOMCryptoContext)>(r6, r3, r4);

        $r9 = r0.<org.jcp.xml.dsig.internal.dom.DOMKeyValue: org.jcp.xml.dsig.internal.dom.DOMCryptoBinary exponent>;

        virtualinvoke $r9.<org.jcp.xml.dsig.internal.dom.DOMCryptoBinary: void marshal(org.w3c.dom.Node,java.lang.String,javax.xml.crypto.dom.DOMCryptoContext)>(r7, r3, r4);

        interfaceinvoke r5.<org.w3c.dom.Element: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>(r6);

        interfaceinvoke r5.<org.w3c.dom.Element: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>(r7);

        interfaceinvoke r1.<org.w3c.dom.Node: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>(r5);

        return;
    }

    private java.security.interfaces.DSAPublicKey unmarshalDSAKeyValue(org.w3c.dom.Element) throws javax.xml.crypto.MarshalException
    {
        org.jcp.xml.dsig.internal.dom.DOMKeyValue r0;
        org.w3c.dom.Element r1, r42, r43, r44, r45;
        java.security.KeyFactory $r3, $r17, $r33;
        java.lang.String $r4, $r5, $r24, $r38, $r40;
        boolean $z0, $z1, $z2;
        org.jcp.xml.dsig.internal.dom.DOMCryptoBinary $r6, $r9, $r11, $r13, $r15, $r20, $r22, $r25, $r27, $r29, $r31;
        org.w3c.dom.Node $r7, $r21, $r23, $r26, $r28, $r30, $r32;
        java.security.spec.DSAPublicKeySpec $r8;
        java.math.BigInteger $r10, $r12, $r14, $r16;
        java.security.PublicKey $r18;
        java.security.interfaces.DSAPublicKey $r19;
        java.security.NoSuchAlgorithmException $r34;
        java.lang.RuntimeException $r35;
        java.lang.StringBuilder $r36, $r37, $r39;

        r0 := @this: org.jcp.xml.dsig.internal.dom.DOMKeyValue;

        r1 := @parameter0: org.w3c.dom.Element;

        $r3 = r0.<org.jcp.xml.dsig.internal.dom.DOMKeyValue: java.security.KeyFactory dsakf>;

        if $r3 != null goto label4;

     label1:
        $r33 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>("DSA");

        r0.<org.jcp.xml.dsig.internal.dom.DOMKeyValue: java.security.KeyFactory dsakf> = $r33;

     label2:
        goto label4;

     label3:
        $r34 := @caughtexception;

        $r35 = new java.lang.RuntimeException;

        $r36 = new java.lang.StringBuilder;

        specialinvoke $r36.<java.lang.StringBuilder: void <init>()>();

        $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("unable to create DSA KeyFactory: ");

        $r38 = virtualinvoke $r34.<java.security.NoSuchAlgorithmException: java.lang.String getMessage()>();

        $r39 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r38);

        $r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r35.<java.lang.RuntimeException: void <init>(java.lang.String)>($r40);

        throw $r35;

     label4:
        r42 = staticinvoke <org.jcp.xml.dsig.internal.dom.DOMUtils: org.w3c.dom.Element getFirstChildElement(org.w3c.dom.Node)>(r1);

        $r4 = interfaceinvoke r42.<org.w3c.dom.Element: java.lang.String getLocalName()>();

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>("P");

        if $z0 == 0 goto label5;

        $r29 = new org.jcp.xml.dsig.internal.dom.DOMCryptoBinary;

        $r30 = interfaceinvoke r42.<org.w3c.dom.Element: org.w3c.dom.Node getFirstChild()>();

        specialinvoke $r29.<org.jcp.xml.dsig.internal.dom.DOMCryptoBinary: void <init>(org.w3c.dom.Node)>($r30);

        r0.<org.jcp.xml.dsig.internal.dom.DOMKeyValue: org.jcp.xml.dsig.internal.dom.DOMCryptoBinary p> = $r29;

        r43 = staticinvoke <org.jcp.xml.dsig.internal.dom.DOMUtils: org.w3c.dom.Element getNextSiblingElement(org.w3c.dom.Node)>(r42);

        $r31 = new org.jcp.xml.dsig.internal.dom.DOMCryptoBinary;

        $r32 = interfaceinvoke r43.<org.w3c.dom.Element: org.w3c.dom.Node getFirstChild()>();

        specialinvoke $r31.<org.jcp.xml.dsig.internal.dom.DOMCryptoBinary: void <init>(org.w3c.dom.Node)>($r32);

        r0.<org.jcp.xml.dsig.internal.dom.DOMKeyValue: org.jcp.xml.dsig.internal.dom.DOMCryptoBinary q> = $r31;

        r42 = staticinvoke <org.jcp.xml.dsig.internal.dom.DOMUtils: org.w3c.dom.Element getNextSiblingElement(org.w3c.dom.Node)>(r43);

     label5:
        $r5 = interfaceinvoke r42.<org.w3c.dom.Element: java.lang.String getLocalName()>();

        $z1 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>("G");

        if $z1 == 0 goto label6;

        $r27 = new org.jcp.xml.dsig.internal.dom.DOMCryptoBinary;

        $r28 = interfaceinvoke r42.<org.w3c.dom.Element: org.w3c.dom.Node getFirstChild()>();

        specialinvoke $r27.<org.jcp.xml.dsig.internal.dom.DOMCryptoBinary: void <init>(org.w3c.dom.Node)>($r28);

        r0.<org.jcp.xml.dsig.internal.dom.DOMKeyValue: org.jcp.xml.dsig.internal.dom.DOMCryptoBinary g> = $r27;

        r42 = staticinvoke <org.jcp.xml.dsig.internal.dom.DOMUtils: org.w3c.dom.Element getNextSiblingElement(org.w3c.dom.Node)>(r42);

     label6:
        $r6 = new org.jcp.xml.dsig.internal.dom.DOMCryptoBinary;

        $r7 = interfaceinvoke r42.<org.w3c.dom.Element: org.w3c.dom.Node getFirstChild()>();

        specialinvoke $r6.<org.jcp.xml.dsig.internal.dom.DOMCryptoBinary: void <init>(org.w3c.dom.Node)>($r7);

        r0.<org.jcp.xml.dsig.internal.dom.DOMKeyValue: org.jcp.xml.dsig.internal.dom.DOMCryptoBinary y> = $r6;

        r44 = staticinvoke <org.jcp.xml.dsig.internal.dom.DOMUtils: org.w3c.dom.Element getNextSiblingElement(org.w3c.dom.Node)>(r42);

        if r44 == null goto label7;

        $r24 = interfaceinvoke r44.<org.w3c.dom.Element: java.lang.String getLocalName()>();

        $z2 = virtualinvoke $r24.<java.lang.String: boolean equals(java.lang.Object)>("J");

        if $z2 == 0 goto label7;

        $r25 = new org.jcp.xml.dsig.internal.dom.DOMCryptoBinary;

        $r26 = interfaceinvoke r44.<org.w3c.dom.Element: org.w3c.dom.Node getFirstChild()>();

        specialinvoke $r25.<org.jcp.xml.dsig.internal.dom.DOMCryptoBinary: void <init>(org.w3c.dom.Node)>($r26);

        r0.<org.jcp.xml.dsig.internal.dom.DOMKeyValue: org.jcp.xml.dsig.internal.dom.DOMCryptoBinary j> = $r25;

        r44 = staticinvoke <org.jcp.xml.dsig.internal.dom.DOMUtils: org.w3c.dom.Element getNextSiblingElement(org.w3c.dom.Node)>(r44);

     label7:
        if r44 == null goto label8;

        $r20 = new org.jcp.xml.dsig.internal.dom.DOMCryptoBinary;

        $r21 = interfaceinvoke r44.<org.w3c.dom.Element: org.w3c.dom.Node getFirstChild()>();

        specialinvoke $r20.<org.jcp.xml.dsig.internal.dom.DOMCryptoBinary: void <init>(org.w3c.dom.Node)>($r21);

        r0.<org.jcp.xml.dsig.internal.dom.DOMKeyValue: org.jcp.xml.dsig.internal.dom.DOMCryptoBinary seed> = $r20;

        r45 = staticinvoke <org.jcp.xml.dsig.internal.dom.DOMUtils: org.w3c.dom.Element getNextSiblingElement(org.w3c.dom.Node)>(r44);

        $r22 = new org.jcp.xml.dsig.internal.dom.DOMCryptoBinary;

        $r23 = interfaceinvoke r45.<org.w3c.dom.Element: org.w3c.dom.Node getFirstChild()>();

        specialinvoke $r22.<org.jcp.xml.dsig.internal.dom.DOMCryptoBinary: void <init>(org.w3c.dom.Node)>($r23);

        r0.<org.jcp.xml.dsig.internal.dom.DOMKeyValue: org.jcp.xml.dsig.internal.dom.DOMCryptoBinary pgen> = $r22;

     label8:
        $r8 = new java.security.spec.DSAPublicKeySpec;

        $r9 = r0.<org.jcp.xml.dsig.internal.dom.DOMKeyValue: org.jcp.xml.dsig.internal.dom.DOMCryptoBinary y>;

        $r10 = virtualinvoke $r9.<org.jcp.xml.dsig.internal.dom.DOMCryptoBinary: java.math.BigInteger getBigNum()>();

        $r11 = r0.<org.jcp.xml.dsig.internal.dom.DOMKeyValue: org.jcp.xml.dsig.internal.dom.DOMCryptoBinary p>;

        $r12 = virtualinvoke $r11.<org.jcp.xml.dsig.internal.dom.DOMCryptoBinary: java.math.BigInteger getBigNum()>();

        $r13 = r0.<org.jcp.xml.dsig.internal.dom.DOMKeyValue: org.jcp.xml.dsig.internal.dom.DOMCryptoBinary q>;

        $r14 = virtualinvoke $r13.<org.jcp.xml.dsig.internal.dom.DOMCryptoBinary: java.math.BigInteger getBigNum()>();

        $r15 = r0.<org.jcp.xml.dsig.internal.dom.DOMKeyValue: org.jcp.xml.dsig.internal.dom.DOMCryptoBinary g>;

        $r16 = virtualinvoke $r15.<org.jcp.xml.dsig.internal.dom.DOMCryptoBinary: java.math.BigInteger getBigNum()>();

        specialinvoke $r8.<java.security.spec.DSAPublicKeySpec: void <init>(java.math.BigInteger,java.math.BigInteger,java.math.BigInteger,java.math.BigInteger)>($r10, $r12, $r14, $r16);

        $r17 = r0.<org.jcp.xml.dsig.internal.dom.DOMKeyValue: java.security.KeyFactory dsakf>;

        $r18 = specialinvoke r0.<org.jcp.xml.dsig.internal.dom.DOMKeyValue: java.security.PublicKey generatePublicKey(java.security.KeyFactory,java.security.spec.KeySpec)>($r17, $r8);

        $r19 = (java.security.interfaces.DSAPublicKey) $r18;

        return $r19;

        catch java.security.NoSuchAlgorithmException from label1 to label2 with label3;
    }

    private java.security.interfaces.RSAPublicKey unmarshalRSAKeyValue(org.w3c.dom.Element) throws javax.xml.crypto.MarshalException
    {
        org.jcp.xml.dsig.internal.dom.DOMKeyValue r0;
        org.w3c.dom.Element r1, r2, r26;
        java.security.KeyFactory $r4, $r14, $r17;
        org.jcp.xml.dsig.internal.dom.DOMCryptoBinary $r5, $r7, $r10, $r12;
        org.w3c.dom.Node $r6, $r8;
        java.security.spec.RSAPublicKeySpec $r9;
        java.math.BigInteger $r11, $r13;
        java.security.PublicKey $r15;
        java.security.interfaces.RSAPublicKey $r16;
        java.security.NoSuchAlgorithmException $r18;
        java.lang.RuntimeException $r19;
        java.lang.StringBuilder $r20, $r21, $r23;
        java.lang.String $r22, $r24;

        r0 := @this: org.jcp.xml.dsig.internal.dom.DOMKeyValue;

        r1 := @parameter0: org.w3c.dom.Element;

        $r4 = r0.<org.jcp.xml.dsig.internal.dom.DOMKeyValue: java.security.KeyFactory rsakf>;

        if $r4 != null goto label4;

     label1:
        $r17 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>("RSA");

        r0.<org.jcp.xml.dsig.internal.dom.DOMKeyValue: java.security.KeyFactory rsakf> = $r17;

     label2:
        goto label4;

     label3:
        $r18 := @caughtexception;

        $r19 = new java.lang.RuntimeException;

        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("unable to create RSA KeyFactory: ");

        $r22 = virtualinvoke $r18.<java.security.NoSuchAlgorithmException: java.lang.String getMessage()>();

        $r23 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r22);

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r19.<java.lang.RuntimeException: void <init>(java.lang.String)>($r24);

        throw $r19;

     label4:
        r26 = staticinvoke <org.jcp.xml.dsig.internal.dom.DOMUtils: org.w3c.dom.Element getFirstChildElement(org.w3c.dom.Node)>(r1);

        $r5 = new org.jcp.xml.dsig.internal.dom.DOMCryptoBinary;

        $r6 = interfaceinvoke r26.<org.w3c.dom.Element: org.w3c.dom.Node getFirstChild()>();

        specialinvoke $r5.<org.jcp.xml.dsig.internal.dom.DOMCryptoBinary: void <init>(org.w3c.dom.Node)>($r6);

        r0.<org.jcp.xml.dsig.internal.dom.DOMKeyValue: org.jcp.xml.dsig.internal.dom.DOMCryptoBinary modulus> = $r5;

        r2 = staticinvoke <org.jcp.xml.dsig.internal.dom.DOMUtils: org.w3c.dom.Element getNextSiblingElement(org.w3c.dom.Node)>(r26);

        $r7 = new org.jcp.xml.dsig.internal.dom.DOMCryptoBinary;

        $r8 = interfaceinvoke r2.<org.w3c.dom.Element: org.w3c.dom.Node getFirstChild()>();

        specialinvoke $r7.<org.jcp.xml.dsig.internal.dom.DOMCryptoBinary: void <init>(org.w3c.dom.Node)>($r8);

        r0.<org.jcp.xml.dsig.internal.dom.DOMKeyValue: org.jcp.xml.dsig.internal.dom.DOMCryptoBinary exponent> = $r7;

        $r9 = new java.security.spec.RSAPublicKeySpec;

        $r10 = r0.<org.jcp.xml.dsig.internal.dom.DOMKeyValue: org.jcp.xml.dsig.internal.dom.DOMCryptoBinary modulus>;

        $r11 = virtualinvoke $r10.<org.jcp.xml.dsig.internal.dom.DOMCryptoBinary: java.math.BigInteger getBigNum()>();

        $r12 = r0.<org.jcp.xml.dsig.internal.dom.DOMKeyValue: org.jcp.xml.dsig.internal.dom.DOMCryptoBinary exponent>;

        $r13 = virtualinvoke $r12.<org.jcp.xml.dsig.internal.dom.DOMCryptoBinary: java.math.BigInteger getBigNum()>();

        specialinvoke $r9.<java.security.spec.RSAPublicKeySpec: void <init>(java.math.BigInteger,java.math.BigInteger)>($r11, $r13);

        $r14 = r0.<org.jcp.xml.dsig.internal.dom.DOMKeyValue: java.security.KeyFactory rsakf>;

        $r15 = specialinvoke r0.<org.jcp.xml.dsig.internal.dom.DOMKeyValue: java.security.PublicKey generatePublicKey(java.security.KeyFactory,java.security.spec.KeySpec)>($r14, $r9);

        $r16 = (java.security.interfaces.RSAPublicKey) $r15;

        return $r16;

        catch java.security.NoSuchAlgorithmException from label1 to label2 with label3;
    }

    private java.security.PublicKey generatePublicKey(java.security.KeyFactory, java.security.spec.KeySpec)
    {
        org.jcp.xml.dsig.internal.dom.DOMKeyValue r0;
        java.security.KeyFactory r1;
        java.security.spec.KeySpec r2;
        java.security.PublicKey $r4;
        java.security.spec.InvalidKeySpecException $r5;

        r0 := @this: org.jcp.xml.dsig.internal.dom.DOMKeyValue;

        r1 := @parameter0: java.security.KeyFactory;

        r2 := @parameter1: java.security.spec.KeySpec;

     label1:
        $r4 = virtualinvoke r1.<java.security.KeyFactory: java.security.PublicKey generatePublic(java.security.spec.KeySpec)>(r2);

     label2:
        return $r4;

     label3:
        $r5 := @caughtexception;

        return null;

        catch java.security.spec.InvalidKeySpecException from label1 to label2 with label3;
    }

    public boolean equals(java.lang.Object)
    {
        org.jcp.xml.dsig.internal.dom.DOMKeyValue r0;
        java.lang.Object r1;
        boolean $z0, $z1;
        java.security.PublicKey $r2, $r3, $r4, $r5;
        java.security.KeyException $r6;
        javax.xml.crypto.dsig.keyinfo.KeyValue r7;

        r0 := @this: org.jcp.xml.dsig.internal.dom.DOMKeyValue;

        r1 := @parameter0: java.lang.Object;

        if r0 != r1 goto label1;

        return 1;

     label1:
        $z0 = r1 instanceof javax.xml.crypto.dsig.keyinfo.KeyValue;

        if $z0 != 0 goto label2;

        return 0;

     label2:
        r7 = (javax.xml.crypto.dsig.keyinfo.KeyValue) r1;

        $r2 = r0.<org.jcp.xml.dsig.internal.dom.DOMKeyValue: java.security.PublicKey publicKey>;

        if $r2 != null goto label4;

        $r5 = interfaceinvoke r7.<javax.xml.crypto.dsig.keyinfo.KeyValue: java.security.PublicKey getPublicKey()>();

        if $r5 == null goto label6;

     label3:
        return 0;

     label4:
        $r3 = r0.<org.jcp.xml.dsig.internal.dom.DOMKeyValue: java.security.PublicKey publicKey>;

        $r4 = interfaceinvoke r7.<javax.xml.crypto.dsig.keyinfo.KeyValue: java.security.PublicKey getPublicKey()>();

        $z1 = virtualinvoke $r3.<java.lang.Object: boolean equals(java.lang.Object)>($r4);

        if $z1 != 0 goto label6;

     label5:
        return 0;

     label6:
        goto label8;

     label7:
        $r6 := @caughtexception;

        return 0;

     label8:
        return 1;

        catch java.security.KeyException from label2 to label3 with label7;
        catch java.security.KeyException from label4 to label5 with label7;
    }
}
