public class com.opengamma.analytics.financial.interestrate.YieldAndDiscountCurveUtils extends java.lang.Object
{

    public void <init>()
    {
        com.opengamma.analytics.financial.interestrate.YieldAndDiscountCurveUtils r0;

        r0 := @this: com.opengamma.analytics.financial.interestrate.YieldAndDiscountCurveUtils;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static double forwardRateFromCurve(com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve, org.threeten.bp.ZonedDateTime, org.threeten.bp.ZonedDateTime, com.opengamma.analytics.financial.instrument.index.IborIndex, com.opengamma.financial.convention.calendar.Calendar)
    {
        com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve r0;
        org.threeten.bp.ZonedDateTime r1, r2, r5, r6;
        com.opengamma.analytics.financial.instrument.index.IborIndex r3;
        com.opengamma.financial.convention.calendar.Calendar r4;
        double d0, d1, d2, d3, d4, d5, $d6, $d7;
        int $i0;
        com.opengamma.financial.convention.daycount.DayCount $r12;

        r0 := @parameter0: com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve;

        r1 := @parameter1: org.threeten.bp.ZonedDateTime;

        r2 := @parameter2: org.threeten.bp.ZonedDateTime;

        r3 := @parameter3: com.opengamma.analytics.financial.instrument.index.IborIndex;

        r4 := @parameter4: com.opengamma.financial.convention.calendar.Calendar;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r0, "curve");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "curveDate");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, "fixingDate");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r3, "iborIndex");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r4, "calendar");

        $i0 = virtualinvoke r3.<com.opengamma.analytics.financial.instrument.index.IborIndex: int getSpotLag()>();

        r5 = staticinvoke <com.opengamma.analytics.financial.schedule.ScheduleCalculator: org.threeten.bp.ZonedDateTime getAdjustedDate(org.threeten.bp.ZonedDateTime,int,com.opengamma.financial.convention.calendar.Calendar)>(r2, $i0, r4);

        d0 = staticinvoke <com.opengamma.analytics.util.time.TimeCalculator: double getTimeBetween(org.threeten.bp.ZonedDateTime,org.threeten.bp.ZonedDateTime)>(r1, r5);

        r6 = staticinvoke <com.opengamma.analytics.financial.schedule.ScheduleCalculator: org.threeten.bp.ZonedDateTime getAdjustedDate(org.threeten.bp.ZonedDateTime,com.opengamma.analytics.financial.instrument.index.IborIndex,com.opengamma.financial.convention.calendar.Calendar)>(r2, r3, r4);

        d1 = staticinvoke <com.opengamma.analytics.util.time.TimeCalculator: double getTimeBetween(org.threeten.bp.ZonedDateTime,org.threeten.bp.ZonedDateTime)>(r1, r6);

        $r12 = virtualinvoke r3.<com.opengamma.analytics.financial.instrument.index.IborIndex: com.opengamma.financial.convention.daycount.DayCount getDayCount()>();

        d2 = interfaceinvoke $r12.<com.opengamma.financial.convention.daycount.DayCount: double getDayCountFraction(org.threeten.bp.ZonedDateTime,org.threeten.bp.ZonedDateTime)>(r5, r6);

        d3 = virtualinvoke r0.<com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve: double getDiscountFactor(double)>(d0);

        d4 = virtualinvoke r0.<com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve: double getDiscountFactor(double)>(d1);

        $d6 = d3 / d4;

        $d7 = $d6 - 1.0;

        d5 = $d7 / d2;

        return d5;
    }

    public static double forwardRateFromProvider(com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface, org.threeten.bp.ZonedDateTime, org.threeten.bp.ZonedDateTime, com.opengamma.analytics.financial.instrument.index.IborIndex, com.opengamma.financial.convention.calendar.Calendar)
    {
        com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface r0;
        org.threeten.bp.ZonedDateTime r1, r2, r5, r6;
        com.opengamma.analytics.financial.instrument.index.IborIndex r3;
        com.opengamma.financial.convention.calendar.Calendar r4;
        double d0, d1, d2, d3;
        int $i0;
        com.opengamma.financial.convention.daycount.DayCount $r12;

        r0 := @parameter0: com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface;

        r1 := @parameter1: org.threeten.bp.ZonedDateTime;

        r2 := @parameter2: org.threeten.bp.ZonedDateTime;

        r3 := @parameter3: com.opengamma.analytics.financial.instrument.index.IborIndex;

        r4 := @parameter4: com.opengamma.financial.convention.calendar.Calendar;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r0, "multicurve provider");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "curveDate");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, "fixingDate");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r3, "iborIndex");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r4, "calendar");

        $i0 = virtualinvoke r3.<com.opengamma.analytics.financial.instrument.index.IborIndex: int getSpotLag()>();

        r5 = staticinvoke <com.opengamma.analytics.financial.schedule.ScheduleCalculator: org.threeten.bp.ZonedDateTime getAdjustedDate(org.threeten.bp.ZonedDateTime,int,com.opengamma.financial.convention.calendar.Calendar)>(r2, $i0, r4);

        d0 = staticinvoke <com.opengamma.analytics.util.time.TimeCalculator: double getTimeBetween(org.threeten.bp.ZonedDateTime,org.threeten.bp.ZonedDateTime)>(r1, r5);

        r6 = staticinvoke <com.opengamma.analytics.financial.schedule.ScheduleCalculator: org.threeten.bp.ZonedDateTime getAdjustedDate(org.threeten.bp.ZonedDateTime,com.opengamma.analytics.financial.instrument.index.IborIndex,com.opengamma.financial.convention.calendar.Calendar)>(r2, r3, r4);

        d1 = staticinvoke <com.opengamma.analytics.util.time.TimeCalculator: double getTimeBetween(org.threeten.bp.ZonedDateTime,org.threeten.bp.ZonedDateTime)>(r1, r6);

        $r12 = virtualinvoke r3.<com.opengamma.analytics.financial.instrument.index.IborIndex: com.opengamma.financial.convention.daycount.DayCount getDayCount()>();

        d2 = interfaceinvoke $r12.<com.opengamma.financial.convention.daycount.DayCount: double getDayCountFraction(org.threeten.bp.ZonedDateTime,org.threeten.bp.ZonedDateTime)>(r5, r6);

        d3 = interfaceinvoke r0.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface: double getSimplyCompoundForwardRate(com.opengamma.analytics.financial.instrument.index.IborIndex,double,double,double)>(r3, d0, d1, d2);

        return d3;
    }

    public static double zeroCouponRate(com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve, org.threeten.bp.ZonedDateTime, org.threeten.bp.ZonedDateTime, com.opengamma.financial.convention.daycount.DayCount, int)
    {
        com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve r0;
        org.threeten.bp.ZonedDateTime r1, r2;
        com.opengamma.financial.convention.daycount.DayCount r3;
        int i0;
        double d0, d1, d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, d11, d12;

        r0 := @parameter0: com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve;

        r1 := @parameter1: org.threeten.bp.ZonedDateTime;

        r2 := @parameter2: org.threeten.bp.ZonedDateTime;

        r3 := @parameter3: com.opengamma.financial.convention.daycount.DayCount;

        i0 := @parameter4: int;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r0, "curve");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "curveDate");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, "payDate");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r3, "dayCount");

        d0 = staticinvoke <com.opengamma.analytics.util.time.TimeCalculator: double getTimeBetween(org.threeten.bp.ZonedDateTime,org.threeten.bp.ZonedDateTime)>(r1, r2);

        d1 = virtualinvoke r0.<com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve: double getDiscountFactor(double)>(d0);

        d2 = interfaceinvoke r3.<com.opengamma.financial.convention.daycount.DayCount: double getDayCountFraction(org.threeten.bp.ZonedDateTime,org.threeten.bp.ZonedDateTime)>(r1, r2);

        if i0 <= 0 goto label1;

        $d8 = (double) i0;

        $d5 = (double) i0;

        $d6 = $d5 * d2;

        $d7 = -1.0 / $d6;

        $d9 = staticinvoke <java.lang.Math: double pow(double,double)>(d1, $d7);

        $d10 = $d9 - 1.0;

        d11 = $d8 * $d10;

        return d11;

     label1:
        $d3 = staticinvoke <java.lang.Math: double log(double)>(d1);

        $d4 = neg $d3;

        d12 = $d4 / d2;

        return d12;
    }

    public static double discountFactor(com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve, org.threeten.bp.ZonedDateTime, org.threeten.bp.ZonedDateTime)
    {
        com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve r0;
        org.threeten.bp.ZonedDateTime r1, r2;
        double d0, d1;

        r0 := @parameter0: com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve;

        r1 := @parameter1: org.threeten.bp.ZonedDateTime;

        r2 := @parameter2: org.threeten.bp.ZonedDateTime;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r0, "curve");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "curveDate");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, "payDate");

        d0 = staticinvoke <com.opengamma.analytics.util.time.TimeCalculator: double getTimeBetween(org.threeten.bp.ZonedDateTime,org.threeten.bp.ZonedDateTime)>(r1, r2);

        d1 = virtualinvoke r0.<com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve: double getDiscountFactor(double)>(d0);

        return d1;
    }
}
