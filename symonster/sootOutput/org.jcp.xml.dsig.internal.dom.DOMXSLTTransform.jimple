public final class org.jcp.xml.dsig.internal.dom.DOMXSLTTransform extends org.jcp.xml.dsig.internal.dom.ApacheTransform
{

    public void <init>()
    {
        org.jcp.xml.dsig.internal.dom.DOMXSLTTransform r0;

        r0 := @this: org.jcp.xml.dsig.internal.dom.DOMXSLTTransform;

        specialinvoke r0.<org.jcp.xml.dsig.internal.dom.ApacheTransform: void <init>()>();

        return;
    }

    public void init(javax.xml.crypto.dsig.spec.TransformParameterSpec) throws java.security.InvalidAlgorithmParameterException
    {
        org.jcp.xml.dsig.internal.dom.DOMXSLTTransform r0;
        javax.xml.crypto.dsig.spec.TransformParameterSpec r1;
        boolean $z0;
        java.security.InvalidAlgorithmParameterException $r2, $r3;

        r0 := @this: org.jcp.xml.dsig.internal.dom.DOMXSLTTransform;

        r1 := @parameter0: javax.xml.crypto.dsig.spec.TransformParameterSpec;

        if r1 != null goto label1;

        $r3 = new java.security.InvalidAlgorithmParameterException;

        specialinvoke $r3.<java.security.InvalidAlgorithmParameterException: void <init>(java.lang.String)>("params are required");

        throw $r3;

     label1:
        $z0 = r1 instanceof javax.xml.crypto.dsig.spec.XSLTTransformParameterSpec;

        if $z0 != 0 goto label2;

        $r2 = new java.security.InvalidAlgorithmParameterException;

        specialinvoke $r2.<java.security.InvalidAlgorithmParameterException: void <init>(java.lang.String)>("unrecognized params");

        throw $r2;

     label2:
        r0.<org.jcp.xml.dsig.internal.dom.DOMXSLTTransform: javax.xml.crypto.dsig.spec.TransformParameterSpec params> = r1;

        return;
    }

    public void init(javax.xml.crypto.XMLStructure, javax.xml.crypto.XMLCryptoContext) throws java.security.InvalidAlgorithmParameterException
    {
        org.jcp.xml.dsig.internal.dom.DOMXSLTTransform r0;
        javax.xml.crypto.XMLStructure r1;
        javax.xml.crypto.XMLCryptoContext r2;
        org.w3c.dom.Element $r3, $r4;

        r0 := @this: org.jcp.xml.dsig.internal.dom.DOMXSLTTransform;

        r1 := @parameter0: javax.xml.crypto.XMLStructure;

        r2 := @parameter1: javax.xml.crypto.XMLCryptoContext;

        specialinvoke r0.<org.jcp.xml.dsig.internal.dom.ApacheTransform: void init(javax.xml.crypto.XMLStructure,javax.xml.crypto.XMLCryptoContext)>(r1, r2);

        $r3 = r0.<org.jcp.xml.dsig.internal.dom.DOMXSLTTransform: org.w3c.dom.Element transformElem>;

        $r4 = staticinvoke <org.jcp.xml.dsig.internal.dom.DOMUtils: org.w3c.dom.Element getFirstChildElement(org.w3c.dom.Node)>($r3);

        specialinvoke r0.<org.jcp.xml.dsig.internal.dom.DOMXSLTTransform: void unmarshalParams(org.w3c.dom.Element)>($r4);

        return;
    }

    private void unmarshalParams(org.w3c.dom.Element)
    {
        org.jcp.xml.dsig.internal.dom.DOMXSLTTransform r0;
        org.w3c.dom.Element r1;
        javax.xml.crypto.dsig.spec.XSLTTransformParameterSpec $r2;
        javax.xml.crypto.dom.DOMStructure $r3;

        r0 := @this: org.jcp.xml.dsig.internal.dom.DOMXSLTTransform;

        r1 := @parameter0: org.w3c.dom.Element;

        $r2 = new javax.xml.crypto.dsig.spec.XSLTTransformParameterSpec;

        $r3 = new javax.xml.crypto.dom.DOMStructure;

        specialinvoke $r3.<javax.xml.crypto.dom.DOMStructure: void <init>(org.w3c.dom.Node)>(r1);

        specialinvoke $r2.<javax.xml.crypto.dsig.spec.XSLTTransformParameterSpec: void <init>(javax.xml.crypto.XMLStructure)>($r3);

        r0.<org.jcp.xml.dsig.internal.dom.DOMXSLTTransform: javax.xml.crypto.dsig.spec.TransformParameterSpec params> = $r2;

        return;
    }

    public void marshalParams(javax.xml.crypto.XMLStructure, javax.xml.crypto.XMLCryptoContext) throws javax.xml.crypto.MarshalException
    {
        org.jcp.xml.dsig.internal.dom.DOMXSLTTransform r0;
        javax.xml.crypto.XMLStructure r1, $r6;
        javax.xml.crypto.XMLCryptoContext r2;
        javax.xml.crypto.dsig.spec.XSLTTransformParameterSpec r3;
        org.w3c.dom.Node r4;
        java.security.spec.AlgorithmParameterSpec $r5;
        javax.xml.crypto.dom.DOMStructure $r7;
        org.w3c.dom.Element $r8;

        r0 := @this: org.jcp.xml.dsig.internal.dom.DOMXSLTTransform;

        r1 := @parameter0: javax.xml.crypto.XMLStructure;

        r2 := @parameter1: javax.xml.crypto.XMLCryptoContext;

        specialinvoke r0.<org.jcp.xml.dsig.internal.dom.ApacheTransform: void marshalParams(javax.xml.crypto.XMLStructure,javax.xml.crypto.XMLCryptoContext)>(r1, r2);

        $r5 = virtualinvoke r0.<org.jcp.xml.dsig.internal.dom.DOMXSLTTransform: java.security.spec.AlgorithmParameterSpec getParameterSpec()>();

        r3 = (javax.xml.crypto.dsig.spec.XSLTTransformParameterSpec) $r5;

        $r6 = virtualinvoke r3.<javax.xml.crypto.dsig.spec.XSLTTransformParameterSpec: javax.xml.crypto.XMLStructure getStylesheet()>();

        $r7 = (javax.xml.crypto.dom.DOMStructure) $r6;

        r4 = virtualinvoke $r7.<javax.xml.crypto.dom.DOMStructure: org.w3c.dom.Node getNode()>();

        $r8 = r0.<org.jcp.xml.dsig.internal.dom.DOMXSLTTransform: org.w3c.dom.Element transformElem>;

        staticinvoke <org.jcp.xml.dsig.internal.dom.DOMUtils: void appendChild(org.w3c.dom.Node,org.w3c.dom.Node)>($r8, r4);

        return;
    }
}
