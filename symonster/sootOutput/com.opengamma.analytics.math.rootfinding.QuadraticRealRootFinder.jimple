public class com.opengamma.analytics.math.rootfinding.QuadraticRealRootFinder extends java.lang.Object implements com.opengamma.analytics.math.rootfinding.Polynomial1DRootFinder
{

    public void <init>()
    {
        com.opengamma.analytics.math.rootfinding.QuadraticRealRootFinder r0;

        r0 := @this: com.opengamma.analytics.math.rootfinding.QuadraticRealRootFinder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public java.lang.Double[] getRoots(com.opengamma.analytics.math.function.RealPolynomialFunction1D)
    {
        com.opengamma.analytics.math.rootfinding.QuadraticRealRootFinder r0;
        com.opengamma.analytics.math.function.RealPolynomialFunction1D r1;
        double[] r2;
        double d0, d1, d2, d3, d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12;
        int $i0;
        byte $b1;
        java.lang.Double[] $r3;
        java.lang.Double $r4, $r5;
        com.opengamma.analytics.math.MathException $r6;
        boolean $z0;

        r0 := @this: com.opengamma.analytics.math.rootfinding.QuadraticRealRootFinder;

        r1 := @parameter0: com.opengamma.analytics.math.function.RealPolynomialFunction1D;

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object,java.lang.String)>(r1, "function");

        r2 = virtualinvoke r1.<com.opengamma.analytics.math.function.RealPolynomialFunction1D: double[] getCoefficients()>();

        $i0 = lengthof r2;

        if $i0 != 3 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        staticinvoke <org.apache.commons.lang.Validate: void isTrue(boolean,java.lang.String)>($z0, "Function is not a quadratic");

        d0 = r2[0];

        d1 = r2[1];

        d2 = r2[2];

        $d7 = d1 * d1;

        $d5 = 4.0 * d2;

        $d6 = $d5 * d0;

        d3 = $d7 - $d6;

        $b1 = d3 cmpg 0.0;

        if $b1 >= 0 goto label3;

        $r6 = new com.opengamma.analytics.math.MathException;

        specialinvoke $r6.<com.opengamma.analytics.math.MathException: void <init>(java.lang.String)>("No real roots for quadratic");

        throw $r6;

     label3:
        $d8 = staticinvoke <java.lang.Math: double signum(double)>(d1);

        $d9 = $d8 * d3;

        $d10 = d1 + $d9;

        d4 = -0.5 * $d10;

        $r3 = newarray (java.lang.Double)[2];

        $d11 = d4 / d2;

        $r4 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d11);

        $r3[0] = $r4;

        $d12 = d0 / d4;

        $r5 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d12);

        $r3[1] = $r5;

        return $r3;
    }

    public volatile java.lang.Object[] getRoots(com.opengamma.analytics.math.function.RealPolynomialFunction1D)
    {
        com.opengamma.analytics.math.rootfinding.QuadraticRealRootFinder r0;
        com.opengamma.analytics.math.function.RealPolynomialFunction1D r1;
        java.lang.Double[] $r2;

        r0 := @this: com.opengamma.analytics.math.rootfinding.QuadraticRealRootFinder;

        r1 := @parameter0: com.opengamma.analytics.math.function.RealPolynomialFunction1D;

        $r2 = virtualinvoke r0.<com.opengamma.analytics.math.rootfinding.QuadraticRealRootFinder: java.lang.Double[] getRoots(com.opengamma.analytics.math.function.RealPolynomialFunction1D)>(r1);

        return $r2;
    }
}
