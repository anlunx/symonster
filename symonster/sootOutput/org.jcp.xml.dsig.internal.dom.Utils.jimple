public final class org.jcp.xml.dsig.internal.dom.Utils extends java.lang.Object
{

    private void <init>()
    {
        org.jcp.xml.dsig.internal.dom.Utils r0;

        r0 := @this: org.jcp.xml.dsig.internal.dom.Utils;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static byte[] readBytesFromStream(java.io.InputStream) throws java.io.IOException
    {
        java.io.InputStream r0;
        byte[] r2, $r4;
        int i0;
        java.io.ByteArrayOutputStream $r3;

        r0 := @parameter0: java.io.InputStream;

        $r3 = new java.io.ByteArrayOutputStream;

        specialinvoke $r3.<java.io.ByteArrayOutputStream: void <init>()>();

        r2 = newarray (byte)[1024];

     label1:
        i0 = virtualinvoke r0.<java.io.InputStream: int read(byte[])>(r2);

        if i0 != -1 goto label2;

        goto label4;

     label2:
        virtualinvoke $r3.<java.io.ByteArrayOutputStream: void write(byte[],int,int)>(r2, 0, i0);

        if i0 >= 1024 goto label3;

        goto label4;

     label3:
        goto label1;

     label4:
        $r4 = virtualinvoke $r3.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        return $r4;
    }

    static java.util.Set toNodeSet(java.util.Iterator)
    {
        java.util.Iterator r0;
        org.w3c.dom.Node r2, $r6;
        org.w3c.dom.NamedNodeMap r3;
        int i0, i2;
        java.util.HashSet $r4;
        boolean $z0;
        java.lang.Object $r5;
        short $s1;

        r0 := @parameter0: java.util.Iterator;

        $r4 = new java.util.HashSet;

        specialinvoke $r4.<java.util.HashSet: void <init>()>();

     label1:
        $z0 = interfaceinvoke r0.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r5 = interfaceinvoke r0.<java.util.Iterator: java.lang.Object next()>();

        r2 = (org.w3c.dom.Node) $r5;

        interfaceinvoke $r4.<java.util.Set: boolean add(java.lang.Object)>(r2);

        $s1 = interfaceinvoke r2.<org.w3c.dom.Node: short getNodeType()>();

        if $s1 != 1 goto label3;

        r3 = interfaceinvoke r2.<org.w3c.dom.Node: org.w3c.dom.NamedNodeMap getAttributes()>();

        i2 = 0;

        i0 = interfaceinvoke r3.<org.w3c.dom.NamedNodeMap: int getLength()>();

     label2:
        if i2 >= i0 goto label3;

        $r6 = interfaceinvoke r3.<org.w3c.dom.NamedNodeMap: org.w3c.dom.Node item(int)>(i2);

        interfaceinvoke $r4.<java.util.Set: boolean add(java.lang.Object)>($r6);

        i2 = i2 + 1;

        goto label2;

     label3:
        goto label1;

     label4:
        return $r4;
    }

    public static java.lang.String parseIdFromSameDocumentURI(java.lang.String)
    {
        java.lang.String r0, r1;
        int i0, i1, $i2, $i3, $i4;
        boolean $z0;

        r0 := @parameter0: java.lang.String;

        $i2 = virtualinvoke r0.<java.lang.String: int length()>();

        if $i2 != 0 goto label1;

        return null;

     label1:
        r1 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int)>(1);

        if r1 == null goto label2;

        $z0 = virtualinvoke r1.<java.lang.String: boolean startsWith(java.lang.String)>("xpointer(id(");

        if $z0 == 0 goto label2;

        i0 = virtualinvoke r1.<java.lang.String: int indexOf(int)>(39);

        $i3 = i0 + 1;

        i1 = virtualinvoke r1.<java.lang.String: int indexOf(int,int)>(39, $i3);

        $i4 = i0 + 1;

        r1 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int,int)>($i4, i1);

     label2:
        return r1;
    }

    public static boolean sameDocumentURI(java.lang.String)
    {
        java.lang.String r0;
        int $i0;
        char $c1;
        boolean $z0;

        r0 := @parameter0: java.lang.String;

        if r0 == null goto label2;

        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        if $i0 == 0 goto label1;

        $c1 = virtualinvoke r0.<java.lang.String: char charAt(int)>(0);

        if $c1 != 35 goto label2;

     label1:
        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        return $z0;
    }

    static boolean secureValidation(javax.xml.crypto.XMLCryptoContext)
    {
        javax.xml.crypto.XMLCryptoContext r0;
        boolean $z0;

        r0 := @parameter0: javax.xml.crypto.XMLCryptoContext;

        if r0 != null goto label1;

        return 0;

     label1:
        $z0 = staticinvoke <org.jcp.xml.dsig.internal.dom.Utils: boolean getBoolean(javax.xml.crypto.XMLCryptoContext,java.lang.String)>(r0, "org.jcp.xml.dsig.secureValidation");

        return $z0;
    }

    private static boolean getBoolean(javax.xml.crypto.XMLCryptoContext, java.lang.String)
    {
        javax.xml.crypto.XMLCryptoContext r0;
        java.lang.String r1;
        java.lang.Boolean r2;
        java.lang.Object $r3;
        boolean $z0, $z1;

        r0 := @parameter0: javax.xml.crypto.XMLCryptoContext;

        r1 := @parameter1: java.lang.String;

        $r3 = interfaceinvoke r0.<javax.xml.crypto.XMLCryptoContext: java.lang.Object getProperty(java.lang.String)>(r1);

        r2 = (java.lang.Boolean) $r3;

        if r2 == null goto label1;

        $z0 = virtualinvoke r2.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 == 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }
}
