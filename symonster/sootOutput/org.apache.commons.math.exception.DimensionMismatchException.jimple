public class org.apache.commons.math.exception.DimensionMismatchException extends org.apache.commons.math.exception.MathIllegalNumberException
{
    private static final long serialVersionUID;
    private final int dimension;

    public void <init>(int, int)
    {
        org.apache.commons.math.exception.DimensionMismatchException r0;
        int i0, i1;
        org.apache.commons.math.exception.util.LocalizedFormats $r1;
        java.lang.Integer $r2, $r4;
        java.lang.Object[] $r3;

        r0 := @this: org.apache.commons.math.exception.DimensionMismatchException;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = <org.apache.commons.math.exception.util.LocalizedFormats: org.apache.commons.math.exception.util.LocalizedFormats DIMENSIONS_MISMATCH_SIMPLE>;

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r3 = newarray (java.lang.Object)[1];

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        $r3[0] = $r4;

        specialinvoke r0.<org.apache.commons.math.exception.MathIllegalNumberException: void <init>(org.apache.commons.math.exception.util.Localizable,java.lang.Number,java.lang.Object[])>($r1, $r2, $r3);

        r0.<org.apache.commons.math.exception.DimensionMismatchException: int dimension> = i1;

        return;
    }

    public int getDimension()
    {
        org.apache.commons.math.exception.DimensionMismatchException r0;
        int $i0;

        r0 := @this: org.apache.commons.math.exception.DimensionMismatchException;

        $i0 = r0.<org.apache.commons.math.exception.DimensionMismatchException: int dimension>;

        return $i0;
    }

    public static void <clinit>()
    {
        <org.apache.commons.math.exception.DimensionMismatchException: long serialVersionUID> = -8415396756375798143L;

        return;
    }
}
