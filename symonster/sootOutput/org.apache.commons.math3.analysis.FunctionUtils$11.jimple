final class org.apache.commons.math3.analysis.FunctionUtils$11 extends java.lang.Object implements org.apache.commons.math3.analysis.MultivariateFunction
{
    final org.apache.commons.math3.analysis.BivariateFunction val$combiner;
    final double val$initialValue;
    final org.apache.commons.math3.analysis.UnivariateFunction val$f;

    void <init>(org.apache.commons.math3.analysis.BivariateFunction, double, org.apache.commons.math3.analysis.UnivariateFunction)
    {
        org.apache.commons.math3.analysis.FunctionUtils$11 r0;
        org.apache.commons.math3.analysis.BivariateFunction r1;
        double d0;
        org.apache.commons.math3.analysis.UnivariateFunction r2;

        r0 := @this: org.apache.commons.math3.analysis.FunctionUtils$11;

        r1 := @parameter0: org.apache.commons.math3.analysis.BivariateFunction;

        d0 := @parameter1: double;

        r2 := @parameter2: org.apache.commons.math3.analysis.UnivariateFunction;

        r0.<org.apache.commons.math3.analysis.FunctionUtils$11: org.apache.commons.math3.analysis.BivariateFunction val$combiner> = r1;

        r0.<org.apache.commons.math3.analysis.FunctionUtils$11: double val$initialValue> = d0;

        r0.<org.apache.commons.math3.analysis.FunctionUtils$11: org.apache.commons.math3.analysis.UnivariateFunction val$f> = r2;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public double value(double[])
    {
        org.apache.commons.math3.analysis.FunctionUtils$11 r0;
        double[] r1;
        double $d0, $d1, $d2, $d3, $d4, d5;
        org.apache.commons.math3.analysis.UnivariateFunction $r2, $r4;
        org.apache.commons.math3.analysis.BivariateFunction $r3, $r5;
        int $i0, i1;

        r0 := @this: org.apache.commons.math3.analysis.FunctionUtils$11;

        r1 := @parameter0: double[];

        $r3 = r0.<org.apache.commons.math3.analysis.FunctionUtils$11: org.apache.commons.math3.analysis.BivariateFunction val$combiner>;

        $d1 = r0.<org.apache.commons.math3.analysis.FunctionUtils$11: double val$initialValue>;

        $r2 = r0.<org.apache.commons.math3.analysis.FunctionUtils$11: org.apache.commons.math3.analysis.UnivariateFunction val$f>;

        $d0 = r1[0];

        $d2 = interfaceinvoke $r2.<org.apache.commons.math3.analysis.UnivariateFunction: double value(double)>($d0);

        d5 = interfaceinvoke $r3.<org.apache.commons.math3.analysis.BivariateFunction: double value(double,double)>($d1, $d2);

        i1 = 1;

     label1:
        $i0 = lengthof r1;

        if i1 >= $i0 goto label2;

        $r5 = r0.<org.apache.commons.math3.analysis.FunctionUtils$11: org.apache.commons.math3.analysis.BivariateFunction val$combiner>;

        $r4 = r0.<org.apache.commons.math3.analysis.FunctionUtils$11: org.apache.commons.math3.analysis.UnivariateFunction val$f>;

        $d3 = r1[i1];

        $d4 = interfaceinvoke $r4.<org.apache.commons.math3.analysis.UnivariateFunction: double value(double)>($d3);

        d5 = interfaceinvoke $r5.<org.apache.commons.math3.analysis.BivariateFunction: double value(double,double)>(d5, $d4);

        i1 = i1 + 1;

        goto label1;

     label2:
        return d5;
    }
}
