public class com.opengamma.analytics.financial.model.volatility.smile.function.SVIFormulaData extends java.lang.Object implements com.opengamma.analytics.financial.model.volatility.smile.function.SmileModelData
{
    private static final int NUM_PARAMETERS;
    private final double[] _parameters;

    public void <init>(double[])
    {
        com.opengamma.analytics.financial.model.volatility.smile.function.SVIFormulaData r0;
        double[] r1, $r2, $r3;
        int $i0;
        double $d0, $d1, $d2, $d3, $d4;
        byte $b1, $b2, $b3, $b4, $b5;
        boolean $z0, $z1, $z2, $z3, $z4;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.smile.function.SVIFormulaData;

        r1 := @parameter0: double[];

        specialinvoke r0.<java.lang.Object: void <init>()>();

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object,java.lang.String)>(r1, "parameters are null");

        $i0 = lengthof r1;

        if $i0 != 5 goto label01;

        $z0 = 1;

        goto label02;

     label01:
        $z0 = 0;

     label02:
        staticinvoke <org.apache.commons.lang.Validate: void isTrue(boolean,java.lang.String)>($z0, "must be 5 parameters");

        $d0 = r1[0];

        $b1 = $d0 cmpl 0.0;

        if $b1 < 0 goto label03;

        $z1 = 1;

        goto label04;

     label03:
        $z1 = 0;

     label04:
        staticinvoke <org.apache.commons.lang.Validate: void isTrue(boolean,java.lang.String)>($z1, "Need a >= 0");

        $d1 = r1[1];

        $b2 = $d1 cmpl 0.0;

        if $b2 < 0 goto label05;

        $z2 = 1;

        goto label06;

     label05:
        $z2 = 0;

     label06:
        staticinvoke <org.apache.commons.lang.Validate: void isTrue(boolean,java.lang.String)>($z2, "Need b >= 0");

        $d2 = r1[2];

        $b3 = $d2 cmpl -1.0;

        if $b3 < 0 goto label07;

        $d3 = r1[2];

        $b4 = $d3 cmpg 1.0;

        if $b4 > 0 goto label07;

        $z3 = 1;

        goto label08;

     label07:
        $z3 = 0;

     label08:
        staticinvoke <org.apache.commons.lang.Validate: void isTrue(boolean,java.lang.String)>($z3, "Need -1 <= rho <= 1");

        $d4 = r1[3];

        $b5 = $d4 cmpl 0.0;

        if $b5 < 0 goto label09;

        $z4 = 1;

        goto label10;

     label09:
        $z4 = 0;

     label10:
        staticinvoke <org.apache.commons.lang.Validate: void isTrue(boolean,java.lang.String)>($z4, "Need nu >= 0");

        $r2 = newarray (double)[5];

        r0.<com.opengamma.analytics.financial.model.volatility.smile.function.SVIFormulaData: double[] _parameters> = $r2;

        $r3 = r0.<com.opengamma.analytics.financial.model.volatility.smile.function.SVIFormulaData: double[] _parameters>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, 0, $r3, 0, 5);

        return;
    }

    public void <init>(double, double, double, double, double)
    {
        com.opengamma.analytics.financial.model.volatility.smile.function.SVIFormulaData r0;
        double d0, d1, d2, d3, d4;
        double[] $r1;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.smile.function.SVIFormulaData;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        d2 := @parameter2: double;

        d3 := @parameter3: double;

        d4 := @parameter4: double;

        $r1 = newarray (double)[5];

        $r1[0] = d0;

        $r1[1] = d1;

        $r1[2] = d2;

        $r1[3] = d3;

        $r1[4] = d4;

        specialinvoke r0.<com.opengamma.analytics.financial.model.volatility.smile.function.SVIFormulaData: void <init>(double[])>($r1);

        return;
    }

    public boolean isAllowed(int, double)
    {
        com.opengamma.analytics.financial.model.volatility.smile.function.SVIFormulaData r0;
        int i0;
        double d0;
        byte $b1, $b2, $b3;
        java.lang.IllegalArgumentException $r1;
        java.lang.StringBuilder $r2, $r3, $r4, $r5;
        java.lang.String $r6;
        boolean $z0, $z1;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.smile.function.SVIFormulaData;

        i0 := @parameter0: int;

        d0 := @parameter1: double;

        tableswitch(i0)
        {
            case 0: goto label1;
            case 1: goto label1;
            case 2: goto label4;
            case 3: goto label1;
            case 4: goto label7;
            default: goto label8;
        };

     label1:
        $b1 = d0 cmpl 0.0;

        if $b1 < 0 goto label2;

        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        return $z0;

     label4:
        $b2 = d0 cmpl -1.0;

        if $b2 < 0 goto label5;

        $b3 = d0 cmpg 1.0;

        if $b3 > 0 goto label5;

        $z1 = 1;

        goto label6;

     label5:
        $z1 = 0;

     label6:
        return $z1;

     label7:
        return 1;

     label8:
        $r1 = new java.lang.IllegalArgumentException;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("index ");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" outside range");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r6);

        throw $r1;
    }

    public double getA()
    {
        com.opengamma.analytics.financial.model.volatility.smile.function.SVIFormulaData r0;
        double[] $r1;
        double $d0;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.smile.function.SVIFormulaData;

        $r1 = r0.<com.opengamma.analytics.financial.model.volatility.smile.function.SVIFormulaData: double[] _parameters>;

        $d0 = $r1[0];

        return $d0;
    }

    public double getB()
    {
        com.opengamma.analytics.financial.model.volatility.smile.function.SVIFormulaData r0;
        double[] $r1;
        double $d0;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.smile.function.SVIFormulaData;

        $r1 = r0.<com.opengamma.analytics.financial.model.volatility.smile.function.SVIFormulaData: double[] _parameters>;

        $d0 = $r1[1];

        return $d0;
    }

    public double getRho()
    {
        com.opengamma.analytics.financial.model.volatility.smile.function.SVIFormulaData r0;
        double[] $r1;
        double $d0;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.smile.function.SVIFormulaData;

        $r1 = r0.<com.opengamma.analytics.financial.model.volatility.smile.function.SVIFormulaData: double[] _parameters>;

        $d0 = $r1[2];

        return $d0;
    }

    public double getNu()
    {
        com.opengamma.analytics.financial.model.volatility.smile.function.SVIFormulaData r0;
        double[] $r1;
        double $d0;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.smile.function.SVIFormulaData;

        $r1 = r0.<com.opengamma.analytics.financial.model.volatility.smile.function.SVIFormulaData: double[] _parameters>;

        $d0 = $r1[3];

        return $d0;
    }

    public double getM()
    {
        com.opengamma.analytics.financial.model.volatility.smile.function.SVIFormulaData r0;
        double[] $r1;
        double $d0;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.smile.function.SVIFormulaData;

        $r1 = r0.<com.opengamma.analytics.financial.model.volatility.smile.function.SVIFormulaData: double[] _parameters>;

        $d0 = $r1[4];

        return $d0;
    }

    public int getNumberOfParameters()
    {
        com.opengamma.analytics.financial.model.volatility.smile.function.SVIFormulaData r0;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.smile.function.SVIFormulaData;

        return 5;
    }

    public double getParameter(int)
    {
        com.opengamma.analytics.financial.model.volatility.smile.function.SVIFormulaData r0;
        int i0;
        double[] $r1;
        double $d0;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.smile.function.SVIFormulaData;

        i0 := @parameter0: int;

        $r1 = r0.<com.opengamma.analytics.financial.model.volatility.smile.function.SVIFormulaData: double[] _parameters>;

        $d0 = $r1[i0];

        return $d0;
    }

    public com.opengamma.analytics.financial.model.volatility.smile.function.SmileModelData 'with'(int, double)
    {
        com.opengamma.analytics.financial.model.volatility.smile.function.SVIFormulaData r0, $r3;
        int i0;
        double d0;
        double[] r1, $r2;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.smile.function.SVIFormulaData;

        i0 := @parameter0: int;

        d0 := @parameter1: double;

        r1 = newarray (double)[5];

        $r2 = r0.<com.opengamma.analytics.financial.model.volatility.smile.function.SVIFormulaData: double[] _parameters>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, 0, r1, 0, 5);

        r1[i0] = d0;

        $r3 = new com.opengamma.analytics.financial.model.volatility.smile.function.SVIFormulaData;

        specialinvoke $r3.<com.opengamma.analytics.financial.model.volatility.smile.function.SVIFormulaData: void <init>(double[])>(r1);

        return $r3;
    }

    public int hashCode()
    {
        com.opengamma.analytics.financial.model.volatility.smile.function.SVIFormulaData r0;
        double[] $r1;
        int $i1, $i2, i4;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.smile.function.SVIFormulaData;

        $i1 = 31 * 1;

        $r1 = r0.<com.opengamma.analytics.financial.model.volatility.smile.function.SVIFormulaData: double[] _parameters>;

        $i2 = staticinvoke <java.util.Arrays: int hashCode(double[])>($r1);

        i4 = $i1 + $i2;

        return i4;
    }

    public boolean equals(java.lang.Object)
    {
        com.opengamma.analytics.financial.model.volatility.smile.function.SVIFormulaData r0, r2;
        java.lang.Object r1;
        java.lang.Class $r3, $r4;
        double[] $r5, $r6;
        boolean $z0;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.smile.function.SVIFormulaData;

        r1 := @parameter0: java.lang.Object;

        if r0 != r1 goto label1;

        return 1;

     label1:
        if r1 != null goto label2;

        return 0;

     label2:
        $r3 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r4 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        if $r3 == $r4 goto label3;

        return 0;

     label3:
        r2 = (com.opengamma.analytics.financial.model.volatility.smile.function.SVIFormulaData) r1;

        $r6 = r0.<com.opengamma.analytics.financial.model.volatility.smile.function.SVIFormulaData: double[] _parameters>;

        $r5 = r2.<com.opengamma.analytics.financial.model.volatility.smile.function.SVIFormulaData: double[] _parameters>;

        $z0 = staticinvoke <java.util.Arrays: boolean equals(double[],double[])>($r6, $r5);

        if $z0 != 0 goto label4;

        return 0;

     label4:
        return 1;
    }

    public java.lang.String toString()
    {
        com.opengamma.analytics.financial.model.volatility.smile.function.SVIFormulaData r0;
        java.lang.StringBuilder $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12;
        double $d0, $d1, $d2, $d3, $d4;
        java.lang.String $r13;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.smile.function.SVIFormulaData;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("SVIFormulaData [a=");

        $d0 = virtualinvoke r0.<com.opengamma.analytics.financial.model.volatility.smile.function.SVIFormulaData: double getA()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", b=");

        $d1 = virtualinvoke r0.<com.opengamma.analytics.financial.model.volatility.smile.function.SVIFormulaData: double getB()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d1);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", rho=");

        $d2 = virtualinvoke r0.<com.opengamma.analytics.financial.model.volatility.smile.function.SVIFormulaData: double getRho()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d2);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", nu=");

        $d3 = virtualinvoke r0.<com.opengamma.analytics.financial.model.volatility.smile.function.SVIFormulaData: double getNu()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d3);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", m=");

        $d4 = virtualinvoke r0.<com.opengamma.analytics.financial.model.volatility.smile.function.SVIFormulaData: double getM()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d4);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r13;
    }

    public static void <clinit>()
    {
        <com.opengamma.analytics.financial.model.volatility.smile.function.SVIFormulaData: int NUM_PARAMETERS> = 5;

        return;
    }
}
