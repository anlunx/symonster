public class com.opengamma.analytics.financial.model.volatility.BlackImpliedVolatilityWithGreeks extends java.lang.Object
{

    public void <init>()
    {
        com.opengamma.analytics.financial.model.volatility.BlackImpliedVolatilityWithGreeks r0;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.BlackImpliedVolatilityWithGreeks;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public double[] getImpliedVolatilityAndGreeksForward(double, double, double, double, double, boolean)
    {
        com.opengamma.analytics.financial.model.volatility.BlackImpliedVolatilityWithGreeks r0;
        double d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, d10, $d11, $d12;
        boolean z0, $z1, $z2, $z3, $z4, $z5;
        byte $b0, $b1, $b2, $b3, $b4;
        java.lang.Object[] $r1, $r3, $r5, $r7, $r9;
        java.lang.Double $r2, $r4, $r6, $r8, $r10;
        double[] $r11;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.BlackImpliedVolatilityWithGreeks;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        d2 := @parameter2: double;

        d3 := @parameter3: double;

        d4 := @parameter4: double;

        z0 := @parameter5: boolean;

        $b0 = d0 cmpl 0.0;

        if $b0 <= 0 goto label01;

        $z1 = 1;

        goto label02;

     label01:
        $z1 = 0;

     label02:
        $r1 = newarray (java.lang.Object)[1];

        $r2 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d0);

        $r1[0] = $r2;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String,java.lang.Object[])>($z1, "non-positive/NaN spot option price; have {}", $r1);

        $b1 = d1 cmpl 0.0;

        if $b1 <= 0 goto label03;

        $z2 = 1;

        goto label04;

     label03:
        $z2 = 0;

     label04:
        $r3 = newarray (java.lang.Object)[1];

        $r4 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d1);

        $r3[0] = $r4;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String,java.lang.Object[])>($z2, "non-positive/NaN forward; have {}", $r3);

        $b2 = d2 cmpl 0.0;

        if $b2 <= 0 goto label05;

        $z3 = 1;

        goto label06;

     label05:
        $z3 = 0;

     label06:
        $r5 = newarray (java.lang.Object)[1];

        $r6 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d2);

        $r5[0] = $r6;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String,java.lang.Object[])>($z3, "non-positive/NaN spot; have {}", $r5);

        $b3 = d3 cmpl 0.0;

        if $b3 <= 0 goto label07;

        $z4 = 1;

        goto label08;

     label07:
        $z4 = 0;

     label08:
        $r7 = newarray (java.lang.Object)[1];

        $r8 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d3);

        $r7[0] = $r8;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String,java.lang.Object[])>($z4, "non-positive/NaN strike; have {}", $r7);

        $b4 = d4 cmpl 0.0;

        if $b4 <= 0 goto label09;

        $z5 = 1;

        goto label10;

     label09:
        $z5 = 0;

     label10:
        $r9 = newarray (java.lang.Object)[1];

        $r10 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d4);

        $r9[0] = $r10;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String,java.lang.Object[])>($z5, "non-positive/NaN time to expiry; have {}", $r9);

        d5 = d2 / d1;

        d6 = d0 / d5;

        d7 = staticinvoke <com.opengamma.analytics.financial.model.volatility.BlackFormulaRepository: double impliedVolatility(double,double,double,double,boolean)>(d6, d1, d3, d4, z0);

        d8 = staticinvoke <com.opengamma.analytics.financial.model.volatility.BlackFormulaRepository: double delta(double,double,double,double,boolean)>(d1, d3, d4, d7, z0);

        $d11 = staticinvoke <com.opengamma.analytics.financial.model.volatility.BlackFormulaRepository: double gamma(double,double,double,double)>(d1, d3, d4, d7);

        d9 = $d11 / d5;

        $d12 = staticinvoke <com.opengamma.analytics.financial.model.volatility.BlackFormulaRepository: double vega(double,double,double,double)>(d1, d3, d4, d7);

        d10 = d5 * $d12;

        $r11 = newarray (double)[4];

        $r11[0] = d7;

        $r11[1] = d8;

        $r11[2] = d9;

        $r11[3] = d10;

        return $r11;
    }

    public double[] getImpliedVolatilityAndGreeksForwardOption(double, double, double, double, double, boolean)
    {
        com.opengamma.analytics.financial.model.volatility.BlackImpliedVolatilityWithGreeks r0;
        double d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, d10, $d11, $d12;
        boolean z0, $z1, $z2, $z3, $z4, $z5;
        byte $b0, $b1, $b2, $b3, $b4;
        java.lang.Object[] $r1, $r3, $r5, $r7, $r9;
        java.lang.Double $r2, $r4, $r6, $r8, $r10;
        double[] $r11;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.BlackImpliedVolatilityWithGreeks;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        d2 := @parameter2: double;

        d3 := @parameter3: double;

        d4 := @parameter4: double;

        z0 := @parameter5: boolean;

        $b0 = d0 cmpl 0.0;

        if $b0 <= 0 goto label01;

        $z1 = 1;

        goto label02;

     label01:
        $z1 = 0;

     label02:
        $r1 = newarray (java.lang.Object)[1];

        $r2 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d0);

        $r1[0] = $r2;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String,java.lang.Object[])>($z1, "non-positive/NaN spot option price; have {}", $r1);

        $b1 = d1 cmpl 0.0;

        if $b1 <= 0 goto label03;

        $z2 = 1;

        goto label04;

     label03:
        $z2 = 0;

     label04:
        $r3 = newarray (java.lang.Object)[1];

        $r4 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d1);

        $r3[0] = $r4;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String,java.lang.Object[])>($z2, "non-positive/NaN forward option price; have {}", $r3);

        $b2 = d2 cmpl 0.0;

        if $b2 <= 0 goto label05;

        $z3 = 1;

        goto label06;

     label05:
        $z3 = 0;

     label06:
        $r5 = newarray (java.lang.Object)[1];

        $r6 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d2);

        $r5[0] = $r6;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String,java.lang.Object[])>($z3, "non-positive/NaN spot; have {}", $r5);

        $b3 = d3 cmpl 0.0;

        if $b3 <= 0 goto label07;

        $z4 = 1;

        goto label08;

     label07:
        $z4 = 0;

     label08:
        $r7 = newarray (java.lang.Object)[1];

        $r8 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d3);

        $r7[0] = $r8;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String,java.lang.Object[])>($z4, "non-positive/NaN strike; have {}", $r7);

        $b4 = d4 cmpl 0.0;

        if $b4 <= 0 goto label09;

        $z5 = 1;

        goto label10;

     label09:
        $z5 = 0;

     label10:
        $r9 = newarray (java.lang.Object)[1];

        $r10 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d4);

        $r9[0] = $r10;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String,java.lang.Object[])>($z5, "non-positive/NaN time to expiry; have {}", $r9);

        d5 = d0 / d1;

        d6 = d2 / d5;

        d7 = staticinvoke <com.opengamma.analytics.financial.model.volatility.BlackFormulaRepository: double impliedVolatility(double,double,double,double,boolean)>(d1, d6, d3, d4, z0);

        d8 = staticinvoke <com.opengamma.analytics.financial.model.volatility.BlackFormulaRepository: double delta(double,double,double,double,boolean)>(d6, d3, d4, d7, z0);

        $d11 = staticinvoke <com.opengamma.analytics.financial.model.volatility.BlackFormulaRepository: double gamma(double,double,double,double)>(d6, d3, d4, d7);

        d9 = $d11 / d5;

        $d12 = staticinvoke <com.opengamma.analytics.financial.model.volatility.BlackFormulaRepository: double vega(double,double,double,double)>(d6, d3, d4, d7);

        d10 = d5 * $d12;

        $r11 = newarray (double)[4];

        $r11[0] = d7;

        $r11[1] = d8;

        $r11[2] = d9;

        $r11[3] = d10;

        return $r11;
    }

    public double[] getImpliedVolatilityAndGreeksDiscountFactor(double, double, double, double, double, boolean)
    {
        com.opengamma.analytics.financial.model.volatility.BlackImpliedVolatilityWithGreeks r0;
        double d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, d10, $d11, $d12;
        boolean z0, $z1, $z2, $z3, $z4, $z5;
        byte $b0, $b1, $b2, $b3, $b4;
        java.lang.Object[] $r1, $r3, $r5, $r7, $r9;
        java.lang.Double $r2, $r4, $r6, $r8, $r10;
        double[] $r11;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.BlackImpliedVolatilityWithGreeks;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        d2 := @parameter2: double;

        d3 := @parameter3: double;

        d4 := @parameter4: double;

        z0 := @parameter5: boolean;

        $b0 = d0 cmpl 0.0;

        if $b0 <= 0 goto label01;

        $z1 = 1;

        goto label02;

     label01:
        $z1 = 0;

     label02:
        $r1 = newarray (java.lang.Object)[1];

        $r2 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d0);

        $r1[0] = $r2;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String,java.lang.Object[])>($z1, "non-positive/NaN spot option price; have {}", $r1);

        $b1 = d1 cmpl 0.0;

        if $b1 <= 0 goto label03;

        $z2 = 1;

        goto label04;

     label03:
        $z2 = 0;

     label04:
        $r3 = newarray (java.lang.Object)[1];

        $r4 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d1);

        $r3[0] = $r4;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String,java.lang.Object[])>($z2, "non-positive/NaN discount factor; have {}", $r3);

        $b2 = d2 cmpl 0.0;

        if $b2 <= 0 goto label05;

        $z3 = 1;

        goto label06;

     label05:
        $z3 = 0;

     label06:
        $r5 = newarray (java.lang.Object)[1];

        $r6 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d2);

        $r5[0] = $r6;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String,java.lang.Object[])>($z3, "non-positive/NaN spot; have {}", $r5);

        $b3 = d3 cmpl 0.0;

        if $b3 <= 0 goto label07;

        $z4 = 1;

        goto label08;

     label07:
        $z4 = 0;

     label08:
        $r7 = newarray (java.lang.Object)[1];

        $r8 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d3);

        $r7[0] = $r8;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String,java.lang.Object[])>($z4, "non-positive/NaN strike; have {}", $r7);

        $b4 = d4 cmpl 0.0;

        if $b4 <= 0 goto label09;

        $z5 = 1;

        goto label10;

     label09:
        $z5 = 0;

     label10:
        $r9 = newarray (java.lang.Object)[1];

        $r10 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d4);

        $r9[0] = $r10;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String,java.lang.Object[])>($z5, "non-positive/NaN time to expiry; have {}", $r9);

        d5 = d0 / d1;

        d6 = d2 / d1;

        d7 = staticinvoke <com.opengamma.analytics.financial.model.volatility.BlackFormulaRepository: double impliedVolatility(double,double,double,double,boolean)>(d5, d6, d3, d4, z0);

        d8 = staticinvoke <com.opengamma.analytics.financial.model.volatility.BlackFormulaRepository: double delta(double,double,double,double,boolean)>(d6, d3, d4, d7, z0);

        $d11 = staticinvoke <com.opengamma.analytics.financial.model.volatility.BlackFormulaRepository: double gamma(double,double,double,double)>(d6, d3, d4, d7);

        d9 = $d11 / d1;

        $d12 = staticinvoke <com.opengamma.analytics.financial.model.volatility.BlackFormulaRepository: double vega(double,double,double,double)>(d6, d3, d4, d7);

        d10 = d1 * $d12;

        $r11 = newarray (double)[4];

        $r11[0] = d7;

        $r11[1] = d8;

        $r11[2] = d9;

        $r11[3] = d10;

        return $r11;
    }

    public double[] getPriceAndGreeksForward(double, double, double, double, double, boolean)
    {
        com.opengamma.analytics.financial.model.volatility.BlackImpliedVolatilityWithGreeks r0;
        double d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, $d10, $d11, $d12;
        boolean z0, $z1, $z2, $z3, $z4, $z5;
        byte $b0, $b1, $b2, $b3, $b4;
        java.lang.Object[] $r1, $r3, $r5, $r7, $r9;
        java.lang.Double $r2, $r4, $r6, $r8, $r10;
        double[] $r11;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.BlackImpliedVolatilityWithGreeks;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        d2 := @parameter2: double;

        d3 := @parameter3: double;

        d4 := @parameter4: double;

        z0 := @parameter5: boolean;

        $b0 = d0 cmpl 0.0;

        if $b0 <= 0 goto label01;

        $z1 = 1;

        goto label02;

     label01:
        $z1 = 0;

     label02:
        $r1 = newarray (java.lang.Object)[1];

        $r2 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d0);

        $r1[0] = $r2;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String,java.lang.Object[])>($z1, "non-positive/NaN forward; have {}", $r1);

        $b1 = d1 cmpl 0.0;

        if $b1 <= 0 goto label03;

        $z2 = 1;

        goto label04;

     label03:
        $z2 = 0;

     label04:
        $r3 = newarray (java.lang.Object)[1];

        $r4 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d1);

        $r3[0] = $r4;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String,java.lang.Object[])>($z2, "non-positive/NaN spot; have {}", $r3);

        $b2 = d2 cmpl 0.0;

        if $b2 <= 0 goto label05;

        $z3 = 1;

        goto label06;

     label05:
        $z3 = 0;

     label06:
        $r5 = newarray (java.lang.Object)[1];

        $r6 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d2);

        $r5[0] = $r6;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String,java.lang.Object[])>($z3, "non-positive/NaN strike; have {}", $r5);

        $b3 = d3 cmpl 0.0;

        if $b3 <= 0 goto label07;

        $z4 = 1;

        goto label08;

     label07:
        $z4 = 0;

     label08:
        $r7 = newarray (java.lang.Object)[1];

        $r8 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d3);

        $r7[0] = $r8;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String,java.lang.Object[])>($z4, "non-positive/NaN time to expiry; have {}", $r7);

        $b4 = d4 cmpl 0.0;

        if $b4 <= 0 goto label09;

        $z5 = 1;

        goto label10;

     label09:
        $z5 = 0;

     label10:
        $r9 = newarray (java.lang.Object)[1];

        $r10 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d4);

        $r9[0] = $r10;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String,java.lang.Object[])>($z5, "non-positive/NaN volatility; have {}", $r9);

        d5 = d1 / d0;

        $d10 = staticinvoke <com.opengamma.analytics.financial.model.volatility.BlackFormulaRepository: double price(double,double,double,double,boolean)>(d0, d2, d3, d4, z0);

        d6 = d5 * $d10;

        d7 = staticinvoke <com.opengamma.analytics.financial.model.volatility.BlackFormulaRepository: double delta(double,double,double,double,boolean)>(d0, d2, d3, d4, z0);

        $d11 = staticinvoke <com.opengamma.analytics.financial.model.volatility.BlackFormulaRepository: double gamma(double,double,double,double)>(d0, d2, d3, d4);

        d8 = $d11 / d5;

        $d12 = staticinvoke <com.opengamma.analytics.financial.model.volatility.BlackFormulaRepository: double vega(double,double,double,double)>(d0, d2, d3, d4);

        d9 = d5 * $d12;

        $r11 = newarray (double)[4];

        $r11[0] = d6;

        $r11[1] = d7;

        $r11[2] = d8;

        $r11[3] = d9;

        return $r11;
    }

    public double[] getPriceAndGreeksDiscountFactor(double, double, double, double, double, boolean)
    {
        com.opengamma.analytics.financial.model.volatility.BlackImpliedVolatilityWithGreeks r0;
        double d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, $d10, $d11, $d12;
        boolean z0, $z1, $z2, $z3, $z4, $z5;
        byte $b0, $b1, $b2, $b3, $b4;
        java.lang.Object[] $r1, $r3, $r5, $r7, $r9;
        java.lang.Double $r2, $r4, $r6, $r8, $r10;
        double[] $r11;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.BlackImpliedVolatilityWithGreeks;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        d2 := @parameter2: double;

        d3 := @parameter3: double;

        d4 := @parameter4: double;

        z0 := @parameter5: boolean;

        $b0 = d0 cmpl 0.0;

        if $b0 <= 0 goto label01;

        $z1 = 1;

        goto label02;

     label01:
        $z1 = 0;

     label02:
        $r1 = newarray (java.lang.Object)[1];

        $r2 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d0);

        $r1[0] = $r2;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String,java.lang.Object[])>($z1, "non-positive/NaN discount factor; have {}", $r1);

        $b1 = d1 cmpl 0.0;

        if $b1 <= 0 goto label03;

        $z2 = 1;

        goto label04;

     label03:
        $z2 = 0;

     label04:
        $r3 = newarray (java.lang.Object)[1];

        $r4 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d1);

        $r3[0] = $r4;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String,java.lang.Object[])>($z2, "non-positive/NaN spot; have {}", $r3);

        $b2 = d2 cmpl 0.0;

        if $b2 <= 0 goto label05;

        $z3 = 1;

        goto label06;

     label05:
        $z3 = 0;

     label06:
        $r5 = newarray (java.lang.Object)[1];

        $r6 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d2);

        $r5[0] = $r6;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String,java.lang.Object[])>($z3, "non-positive/NaN strike; have {}", $r5);

        $b3 = d3 cmpl 0.0;

        if $b3 <= 0 goto label07;

        $z4 = 1;

        goto label08;

     label07:
        $z4 = 0;

     label08:
        $r7 = newarray (java.lang.Object)[1];

        $r8 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d3);

        $r7[0] = $r8;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String,java.lang.Object[])>($z4, "non-positive/NaN time to expiry; have {}", $r7);

        $b4 = d4 cmpl 0.0;

        if $b4 <= 0 goto label09;

        $z5 = 1;

        goto label10;

     label09:
        $z5 = 0;

     label10:
        $r9 = newarray (java.lang.Object)[1];

        $r10 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d4);

        $r9[0] = $r10;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String,java.lang.Object[])>($z5, "non-positive/NaN volatility; have {}", $r9);

        d5 = d1 / d0;

        $d10 = staticinvoke <com.opengamma.analytics.financial.model.volatility.BlackFormulaRepository: double price(double,double,double,double,boolean)>(d5, d2, d3, d4, z0);

        d6 = d0 * $d10;

        d7 = staticinvoke <com.opengamma.analytics.financial.model.volatility.BlackFormulaRepository: double delta(double,double,double,double,boolean)>(d5, d2, d3, d4, z0);

        $d11 = staticinvoke <com.opengamma.analytics.financial.model.volatility.BlackFormulaRepository: double gamma(double,double,double,double)>(d5, d2, d3, d4);

        d8 = $d11 / d0;

        $d12 = staticinvoke <com.opengamma.analytics.financial.model.volatility.BlackFormulaRepository: double vega(double,double,double,double)>(d5, d2, d3, d4);

        d9 = d0 * $d12;

        $r11 = newarray (double)[4];

        $r11[0] = d6;

        $r11[1] = d7;

        $r11[2] = d8;

        $r11[3] = d9;

        return $r11;
    }
}
