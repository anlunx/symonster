public class com.opengamma.analytics.math.number.ComplexNumber extends java.lang.Number
{
    private static final long serialVersionUID;
    public static final com.opengamma.analytics.math.number.ComplexNumber I;
    public static final com.opengamma.analytics.math.number.ComplexNumber MINUS_I;
    public static final com.opengamma.analytics.math.number.ComplexNumber ZERO;
    private final double _real;
    private final double _imaginary;

    public void <init>(double)
    {
        com.opengamma.analytics.math.number.ComplexNumber r0;
        double d0;

        r0 := @this: com.opengamma.analytics.math.number.ComplexNumber;

        d0 := @parameter0: double;

        specialinvoke r0.<java.lang.Number: void <init>()>();

        r0.<com.opengamma.analytics.math.number.ComplexNumber: double _real> = d0;

        r0.<com.opengamma.analytics.math.number.ComplexNumber: double _imaginary> = 0.0;

        return;
    }

    public void <init>(double, double)
    {
        com.opengamma.analytics.math.number.ComplexNumber r0;
        double d0, d1;

        r0 := @this: com.opengamma.analytics.math.number.ComplexNumber;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        specialinvoke r0.<java.lang.Number: void <init>()>();

        r0.<com.opengamma.analytics.math.number.ComplexNumber: double _real> = d0;

        r0.<com.opengamma.analytics.math.number.ComplexNumber: double _imaginary> = d1;

        return;
    }

    public double getReal()
    {
        com.opengamma.analytics.math.number.ComplexNumber r0;
        double $d0;

        r0 := @this: com.opengamma.analytics.math.number.ComplexNumber;

        $d0 = r0.<com.opengamma.analytics.math.number.ComplexNumber: double _real>;

        return $d0;
    }

    public double getImaginary()
    {
        com.opengamma.analytics.math.number.ComplexNumber r0;
        double $d0;

        r0 := @this: com.opengamma.analytics.math.number.ComplexNumber;

        $d0 = r0.<com.opengamma.analytics.math.number.ComplexNumber: double _imaginary>;

        return $d0;
    }

    public java.lang.String toString()
    {
        com.opengamma.analytics.math.number.ComplexNumber r0;
        double d0, $d1, $d2, $d3;
        byte $b0;
        java.lang.StringBuilder $r1, $r3, $r4, $r6, $r7;
        java.lang.String $r2, $r5, $r8, $r9;
        boolean $z1;

        r0 := @this: com.opengamma.analytics.math.number.ComplexNumber;

        $d1 = r0.<com.opengamma.analytics.math.number.ComplexNumber: double _imaginary>;

        $b0 = $d1 cmpg 0.0;

        if $b0 >= 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        $d2 = r0.<com.opengamma.analytics.math.number.ComplexNumber: double _imaginary>;

        d0 = staticinvoke <java.lang.Math: double abs(double)>($d2);

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $d3 = r0.<com.opengamma.analytics.math.number.ComplexNumber: double _real>;

        $r2 = staticinvoke <java.lang.Double: java.lang.String toString(double)>($d3);

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        if $z1 == 0 goto label3;

        $r9 = " - ";

        goto label4;

     label3:
        $r9 = " + ";

     label4:
        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r5 = staticinvoke <java.lang.Double: java.lang.String toString(double)>(d0);

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("i");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r8;
    }

    public int hashCode()
    {
        com.opengamma.analytics.math.number.ComplexNumber r0;
        double $d0, $d1;
        long $l1, $l2, $l5, $l6, l10, l12;
        int $i3, $i4, $i7, $i8, i11, i13;

        r0 := @this: com.opengamma.analytics.math.number.ComplexNumber;

        $d0 = r0.<com.opengamma.analytics.math.number.ComplexNumber: double _imaginary>;

        l10 = staticinvoke <java.lang.Double: long doubleToLongBits(double)>($d0);

        $i4 = 31 * 1;

        $l1 = l10 >>> 32;

        $l2 = l10 ^ $l1;

        $i3 = (int) $l2;

        i11 = $i4 + $i3;

        $d1 = r0.<com.opengamma.analytics.math.number.ComplexNumber: double _real>;

        l12 = staticinvoke <java.lang.Double: long doubleToLongBits(double)>($d1);

        $i8 = 31 * i11;

        $l5 = l12 >>> 32;

        $l6 = l12 ^ $l5;

        $i7 = (int) $l6;

        i13 = $i8 + $i7;

        return i13;
    }

    public boolean equals(java.lang.Object)
    {
        com.opengamma.analytics.math.number.ComplexNumber r0, r2;
        java.lang.Object r1;
        java.lang.Class $r3, $r4;
        double $d0, $d1, $d2, $d3;
        long $l0, $l1, $l3, $l4;
        byte $b2, $b5;

        r0 := @this: com.opengamma.analytics.math.number.ComplexNumber;

        r1 := @parameter0: java.lang.Object;

        if r0 != r1 goto label1;

        return 1;

     label1:
        if r1 != null goto label2;

        return 0;

     label2:
        $r3 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r4 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        if $r3 == $r4 goto label3;

        return 0;

     label3:
        r2 = (com.opengamma.analytics.math.number.ComplexNumber) r1;

        $d0 = r0.<com.opengamma.analytics.math.number.ComplexNumber: double _imaginary>;

        $l0 = staticinvoke <java.lang.Double: long doubleToLongBits(double)>($d0);

        $d1 = r2.<com.opengamma.analytics.math.number.ComplexNumber: double _imaginary>;

        $l1 = staticinvoke <java.lang.Double: long doubleToLongBits(double)>($d1);

        $b2 = $l0 cmp $l1;

        if $b2 == 0 goto label4;

        return 0;

     label4:
        $d2 = r0.<com.opengamma.analytics.math.number.ComplexNumber: double _real>;

        $l3 = staticinvoke <java.lang.Double: long doubleToLongBits(double)>($d2);

        $d3 = r2.<com.opengamma.analytics.math.number.ComplexNumber: double _real>;

        $l4 = staticinvoke <java.lang.Double: long doubleToLongBits(double)>($d3);

        $b5 = $l3 cmp $l4;

        if $b5 == 0 goto label5;

        return 0;

     label5:
        return 1;
    }

    public double doubleValue()
    {
        com.opengamma.analytics.math.number.ComplexNumber r0;
        java.lang.UnsupportedOperationException $r1;

        r0 := @this: com.opengamma.analytics.math.number.ComplexNumber;

        $r1 = new java.lang.UnsupportedOperationException;

        specialinvoke $r1.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Cannot get the doubleValue of a ComplexNumber");

        throw $r1;
    }

    public float floatValue()
    {
        com.opengamma.analytics.math.number.ComplexNumber r0;
        java.lang.UnsupportedOperationException $r1;

        r0 := @this: com.opengamma.analytics.math.number.ComplexNumber;

        $r1 = new java.lang.UnsupportedOperationException;

        specialinvoke $r1.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Cannot get the floatValue of a ComplexNumber");

        throw $r1;
    }

    public int intValue()
    {
        com.opengamma.analytics.math.number.ComplexNumber r0;
        java.lang.UnsupportedOperationException $r1;

        r0 := @this: com.opengamma.analytics.math.number.ComplexNumber;

        $r1 = new java.lang.UnsupportedOperationException;

        specialinvoke $r1.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Cannot get the intValue of a ComplexNumber");

        throw $r1;
    }

    public long longValue()
    {
        com.opengamma.analytics.math.number.ComplexNumber r0;
        java.lang.UnsupportedOperationException $r1;

        r0 := @this: com.opengamma.analytics.math.number.ComplexNumber;

        $r1 = new java.lang.UnsupportedOperationException;

        specialinvoke $r1.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Cannot get the longValue of a ComplexNumber");

        throw $r1;
    }

    static void <clinit>()
    {
        com.opengamma.analytics.math.number.ComplexNumber $r0, $r1, $r2;

        <com.opengamma.analytics.math.number.ComplexNumber: long serialVersionUID> = 1L;

        $r0 = new com.opengamma.analytics.math.number.ComplexNumber;

        specialinvoke $r0.<com.opengamma.analytics.math.number.ComplexNumber: void <init>(double,double)>(0.0, 1.0);

        <com.opengamma.analytics.math.number.ComplexNumber: com.opengamma.analytics.math.number.ComplexNumber I> = $r0;

        $r1 = new com.opengamma.analytics.math.number.ComplexNumber;

        specialinvoke $r1.<com.opengamma.analytics.math.number.ComplexNumber: void <init>(double,double)>(0.0, -1.0);

        <com.opengamma.analytics.math.number.ComplexNumber: com.opengamma.analytics.math.number.ComplexNumber MINUS_I> = $r1;

        $r2 = new com.opengamma.analytics.math.number.ComplexNumber;

        specialinvoke $r2.<com.opengamma.analytics.math.number.ComplexNumber: void <init>(double)>(0.0);

        <com.opengamma.analytics.math.number.ComplexNumber: com.opengamma.analytics.math.number.ComplexNumber ZERO> = $r2;

        return;
    }
}
