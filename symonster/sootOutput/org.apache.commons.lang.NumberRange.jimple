public final class org.apache.commons.lang.NumberRange extends java.lang.Object
{
    private final java.lang.Number min;
    private final java.lang.Number max;

    public void <init>(java.lang.Number)
    {
        org.apache.commons.lang.NumberRange r0;
        java.lang.Number r1;
        java.lang.NullPointerException $r2;

        r0 := @this: org.apache.commons.lang.NumberRange;

        r1 := @parameter0: java.lang.Number;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        if r1 != null goto label1;

        $r2 = new java.lang.NullPointerException;

        specialinvoke $r2.<java.lang.NullPointerException: void <init>(java.lang.String)>("The number must not be null");

        throw $r2;

     label1:
        r0.<org.apache.commons.lang.NumberRange: java.lang.Number min> = r1;

        r0.<org.apache.commons.lang.NumberRange: java.lang.Number max> = r1;

        return;
    }

    public void <init>(java.lang.Number, java.lang.Number)
    {
        org.apache.commons.lang.NumberRange r0;
        java.lang.Number r1, r2;
        double $d0, $d1;
        byte $b0;
        java.lang.NullPointerException $r3, $r4;

        r0 := @this: org.apache.commons.lang.NumberRange;

        r1 := @parameter0: java.lang.Number;

        r2 := @parameter1: java.lang.Number;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        if r1 != null goto label1;

        $r4 = new java.lang.NullPointerException;

        specialinvoke $r4.<java.lang.NullPointerException: void <init>(java.lang.String)>("The minimum value must not be null");

        throw $r4;

     label1:
        if r2 != null goto label2;

        $r3 = new java.lang.NullPointerException;

        specialinvoke $r3.<java.lang.NullPointerException: void <init>(java.lang.String)>("The maximum value must not be null");

        throw $r3;

     label2:
        $d0 = virtualinvoke r2.<java.lang.Number: double doubleValue()>();

        $d1 = virtualinvoke r1.<java.lang.Number: double doubleValue()>();

        $b0 = $d0 cmpg $d1;

        if $b0 >= 0 goto label3;

        r0.<org.apache.commons.lang.NumberRange: java.lang.Number max> = r1;

        r0.<org.apache.commons.lang.NumberRange: java.lang.Number min> = r1;

        goto label4;

     label3:
        r0.<org.apache.commons.lang.NumberRange: java.lang.Number min> = r1;

        r0.<org.apache.commons.lang.NumberRange: java.lang.Number max> = r2;

     label4:
        return;
    }

    public java.lang.Number getMinimum()
    {
        org.apache.commons.lang.NumberRange r0;
        java.lang.Number $r1;

        r0 := @this: org.apache.commons.lang.NumberRange;

        $r1 = r0.<org.apache.commons.lang.NumberRange: java.lang.Number min>;

        return $r1;
    }

    public java.lang.Number getMaximum()
    {
        org.apache.commons.lang.NumberRange r0;
        java.lang.Number $r1;

        r0 := @this: org.apache.commons.lang.NumberRange;

        $r1 = r0.<org.apache.commons.lang.NumberRange: java.lang.Number max>;

        return $r1;
    }

    public boolean includesNumber(java.lang.Number)
    {
        org.apache.commons.lang.NumberRange r0;
        java.lang.Number r1, $r2, $r3;
        double $d0, $d1, $d2, $d3;
        byte $b0, $b1;
        boolean $z0;

        r0 := @this: org.apache.commons.lang.NumberRange;

        r1 := @parameter0: java.lang.Number;

        if r1 != null goto label1;

        return 0;

     label1:
        $r2 = r0.<org.apache.commons.lang.NumberRange: java.lang.Number min>;

        $d0 = virtualinvoke $r2.<java.lang.Number: double doubleValue()>();

        $d1 = virtualinvoke r1.<java.lang.Number: double doubleValue()>();

        $b0 = $d0 cmpl $d1;

        if $b0 > 0 goto label2;

        $r3 = r0.<org.apache.commons.lang.NumberRange: java.lang.Number max>;

        $d2 = virtualinvoke $r3.<java.lang.Number: double doubleValue()>();

        $d3 = virtualinvoke r1.<java.lang.Number: double doubleValue()>();

        $b1 = $d2 cmpg $d3;

        if $b1 < 0 goto label2;

        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        return $z0;
    }

    public boolean includesRange(org.apache.commons.lang.NumberRange)
    {
        org.apache.commons.lang.NumberRange r0, r1;
        java.lang.Number $r2, $r3;
        boolean $z0, $z1, $z2;

        r0 := @this: org.apache.commons.lang.NumberRange;

        r1 := @parameter0: org.apache.commons.lang.NumberRange;

        if r1 != null goto label1;

        return 0;

     label1:
        $r2 = r1.<org.apache.commons.lang.NumberRange: java.lang.Number min>;

        $z0 = virtualinvoke r0.<org.apache.commons.lang.NumberRange: boolean includesNumber(java.lang.Number)>($r2);

        if $z0 == 0 goto label2;

        $r3 = r1.<org.apache.commons.lang.NumberRange: java.lang.Number max>;

        $z1 = virtualinvoke r0.<org.apache.commons.lang.NumberRange: boolean includesNumber(java.lang.Number)>($r3);

        if $z1 == 0 goto label2;

        $z2 = 1;

        goto label3;

     label2:
        $z2 = 0;

     label3:
        return $z2;
    }

    public boolean overlaps(org.apache.commons.lang.NumberRange)
    {
        org.apache.commons.lang.NumberRange r0, r1;
        java.lang.Number $r2, $r3;
        boolean $z0, $z1, $z2, $z3;

        r0 := @this: org.apache.commons.lang.NumberRange;

        r1 := @parameter0: org.apache.commons.lang.NumberRange;

        if r1 != null goto label1;

        return 0;

     label1:
        $r2 = r0.<org.apache.commons.lang.NumberRange: java.lang.Number min>;

        $z0 = virtualinvoke r1.<org.apache.commons.lang.NumberRange: boolean includesNumber(java.lang.Number)>($r2);

        if $z0 != 0 goto label2;

        $r3 = r0.<org.apache.commons.lang.NumberRange: java.lang.Number max>;

        $z1 = virtualinvoke r1.<org.apache.commons.lang.NumberRange: boolean includesNumber(java.lang.Number)>($r3);

        if $z1 != 0 goto label2;

        $z2 = virtualinvoke r0.<org.apache.commons.lang.NumberRange: boolean includesRange(org.apache.commons.lang.NumberRange)>(r1);

        if $z2 == 0 goto label3;

     label2:
        $z3 = 1;

        goto label4;

     label3:
        $z3 = 0;

     label4:
        return $z3;
    }

    public boolean equals(java.lang.Object)
    {
        org.apache.commons.lang.NumberRange r0, r2;
        java.lang.Object r1;
        boolean $z0, $z1, $z2, $z3;
        java.lang.Number $r3, $r4, $r5, $r6;

        r0 := @this: org.apache.commons.lang.NumberRange;

        r1 := @parameter0: java.lang.Object;

        if r1 != r0 goto label1;

        return 1;

     label1:
        $z0 = r1 instanceof org.apache.commons.lang.NumberRange;

        if $z0 != 0 goto label2;

        return 0;

     label2:
        r2 = (org.apache.commons.lang.NumberRange) r1;

        $r4 = r0.<org.apache.commons.lang.NumberRange: java.lang.Number min>;

        $r3 = r2.<org.apache.commons.lang.NumberRange: java.lang.Number min>;

        $z1 = virtualinvoke $r4.<java.lang.Object: boolean equals(java.lang.Object)>($r3);

        if $z1 == 0 goto label3;

        $r6 = r0.<org.apache.commons.lang.NumberRange: java.lang.Number max>;

        $r5 = r2.<org.apache.commons.lang.NumberRange: java.lang.Number max>;

        $z2 = virtualinvoke $r6.<java.lang.Object: boolean equals(java.lang.Object)>($r5);

        if $z2 == 0 goto label3;

        $z3 = 1;

        goto label4;

     label3:
        $z3 = 0;

     label4:
        return $z3;
    }

    public int hashCode()
    {
        org.apache.commons.lang.NumberRange r0;
        java.lang.Number $r1, $r2;
        int $i0, $i1, $i2, $i3, i5, i6;

        r0 := @this: org.apache.commons.lang.NumberRange;

        $i0 = 37 * 17;

        $r1 = r0.<org.apache.commons.lang.NumberRange: java.lang.Number min>;

        $i1 = virtualinvoke $r1.<java.lang.Object: int hashCode()>();

        i5 = $i0 + $i1;

        $i2 = 37 * i5;

        $r2 = r0.<org.apache.commons.lang.NumberRange: java.lang.Number max>;

        $i3 = virtualinvoke $r2.<java.lang.Object: int hashCode()>();

        i6 = $i2 + $i3;

        return i6;
    }

    public java.lang.String toString()
    {
        org.apache.commons.lang.NumberRange r0;
        org.apache.commons.lang.text.StrBuilder $r2, $r11, $r13, $r15, $r17;
        java.lang.Number $r3, $r4, $r7, $r8, $r12, $r16;
        double $d0, $d1;
        byte $b0, $b1;
        java.lang.String $r10;

        r0 := @this: org.apache.commons.lang.NumberRange;

        $r2 = new org.apache.commons.lang.text.StrBuilder;

        specialinvoke $r2.<org.apache.commons.lang.text.StrBuilder: void <init>()>();

        $r3 = r0.<org.apache.commons.lang.NumberRange: java.lang.Number min>;

        $d0 = virtualinvoke $r3.<java.lang.Number: double doubleValue()>();

        $b0 = $d0 cmpg 0.0;

        if $b0 >= 0 goto label1;

        $r15 = virtualinvoke $r2.<org.apache.commons.lang.text.StrBuilder: org.apache.commons.lang.text.StrBuilder append(char)>(40);

        $r16 = r0.<org.apache.commons.lang.NumberRange: java.lang.Number min>;

        $r17 = virtualinvoke $r15.<org.apache.commons.lang.text.StrBuilder: org.apache.commons.lang.text.StrBuilder append(java.lang.Object)>($r16);

        virtualinvoke $r17.<org.apache.commons.lang.text.StrBuilder: org.apache.commons.lang.text.StrBuilder append(char)>(41);

        goto label2;

     label1:
        $r4 = r0.<org.apache.commons.lang.NumberRange: java.lang.Number min>;

        virtualinvoke $r2.<org.apache.commons.lang.text.StrBuilder: org.apache.commons.lang.text.StrBuilder append(java.lang.Object)>($r4);

     label2:
        virtualinvoke $r2.<org.apache.commons.lang.text.StrBuilder: org.apache.commons.lang.text.StrBuilder append(char)>(45);

        $r7 = r0.<org.apache.commons.lang.NumberRange: java.lang.Number max>;

        $d1 = virtualinvoke $r7.<java.lang.Number: double doubleValue()>();

        $b1 = $d1 cmpg 0.0;

        if $b1 >= 0 goto label3;

        $r11 = virtualinvoke $r2.<org.apache.commons.lang.text.StrBuilder: org.apache.commons.lang.text.StrBuilder append(char)>(40);

        $r12 = r0.<org.apache.commons.lang.NumberRange: java.lang.Number max>;

        $r13 = virtualinvoke $r11.<org.apache.commons.lang.text.StrBuilder: org.apache.commons.lang.text.StrBuilder append(java.lang.Object)>($r12);

        virtualinvoke $r13.<org.apache.commons.lang.text.StrBuilder: org.apache.commons.lang.text.StrBuilder append(char)>(41);

        goto label4;

     label3:
        $r8 = r0.<org.apache.commons.lang.NumberRange: java.lang.Number max>;

        virtualinvoke $r2.<org.apache.commons.lang.text.StrBuilder: org.apache.commons.lang.text.StrBuilder append(java.lang.Object)>($r8);

     label4:
        $r10 = virtualinvoke $r2.<org.apache.commons.lang.text.StrBuilder: java.lang.String toString()>();

        return $r10;
    }
}
