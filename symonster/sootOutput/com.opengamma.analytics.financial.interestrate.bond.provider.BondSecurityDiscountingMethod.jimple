public final class com.opengamma.analytics.financial.interestrate.bond.provider.BondSecurityDiscountingMethod extends java.lang.Object
{
    private static final com.opengamma.analytics.financial.interestrate.bond.provider.BondSecurityDiscountingMethod INSTANCE;
    private static final com.opengamma.analytics.financial.provider.calculator.discounting.PresentValueDiscountingCalculator PVDC;
    private static final com.opengamma.analytics.financial.provider.calculator.discounting.PresentValueCurveSensitivityDiscountingCalculator PVCSDC;
    private static final com.opengamma.analytics.financial.provider.calculator.discounting.PresentValueParallelCurveSensitivityDiscountingCalculator PVPCSDC;
    private static final com.opengamma.analytics.math.rootfinding.BracketRoot BRACKETER;
    private static final com.opengamma.analytics.math.rootfinding.RealSingleRootFinder ROOT_FINDER;
    private static final com.opengamma.analytics.math.rootfinding.BracketRoot ROOT_BRACKETER;

    public static com.opengamma.analytics.financial.interestrate.bond.provider.BondSecurityDiscountingMethod getInstance()
    {
        com.opengamma.analytics.financial.interestrate.bond.provider.BondSecurityDiscountingMethod $r0;

        $r0 = <com.opengamma.analytics.financial.interestrate.bond.provider.BondSecurityDiscountingMethod: com.opengamma.analytics.financial.interestrate.bond.provider.BondSecurityDiscountingMethod INSTANCE>;

        return $r0;
    }

    private void <init>()
    {
        com.opengamma.analytics.financial.interestrate.bond.provider.BondSecurityDiscountingMethod r0;

        r0 := @this: com.opengamma.analytics.financial.interestrate.bond.provider.BondSecurityDiscountingMethod;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public com.opengamma.util.money.MultipleCurrencyAmount presentValue(com.opengamma.analytics.financial.interestrate.bond.definition.BondSecurity, com.opengamma.analytics.financial.provider.description.interestrate.IssuerProviderInterface)
    {
        com.opengamma.analytics.financial.interestrate.bond.provider.BondSecurityDiscountingMethod r0;
        com.opengamma.analytics.financial.interestrate.bond.definition.BondSecurity r1;
        com.opengamma.analytics.financial.provider.description.interestrate.IssuerProviderInterface r2;
        com.opengamma.util.money.MultipleCurrencyAmount r4, r5, $r16;
        com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscountingDecoratedIssuer $r7;
        com.opengamma.util.money.Currency $r8;
        com.opengamma.analytics.financial.legalentity.LegalEntity $r9;
        com.opengamma.analytics.financial.interestrate.annuity.derivative.Annuity $r10, $r13;
        com.opengamma.analytics.financial.provider.calculator.discounting.PresentValueDiscountingCalculator $r11, $r14;
        java.lang.Object $r12, $r15;

        r0 := @this: com.opengamma.analytics.financial.interestrate.bond.provider.BondSecurityDiscountingMethod;

        r1 := @parameter0: com.opengamma.analytics.financial.interestrate.bond.definition.BondSecurity;

        r2 := @parameter1: com.opengamma.analytics.financial.provider.description.interestrate.IssuerProviderInterface;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "Bond");

        $r7 = new com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscountingDecoratedIssuer;

        $r8 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.bond.definition.BondSecurity: com.opengamma.util.money.Currency getCurrency()>();

        $r9 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.bond.definition.BondSecurity: com.opengamma.analytics.financial.legalentity.LegalEntity getIssuerEntity()>();

        specialinvoke $r7.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscountingDecoratedIssuer: void <init>(com.opengamma.analytics.financial.provider.description.interestrate.IssuerProviderInterface,com.opengamma.util.money.Currency,com.opengamma.analytics.financial.legalentity.LegalEntity)>(r2, $r8, $r9);

        $r10 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.bond.definition.BondSecurity: com.opengamma.analytics.financial.interestrate.annuity.derivative.Annuity getNominal()>();

        $r11 = <com.opengamma.analytics.financial.interestrate.bond.provider.BondSecurityDiscountingMethod: com.opengamma.analytics.financial.provider.calculator.discounting.PresentValueDiscountingCalculator PVDC>;

        $r12 = virtualinvoke $r10.<com.opengamma.analytics.financial.interestrate.annuity.derivative.Annuity: java.lang.Object accept(com.opengamma.analytics.financial.interestrate.InstrumentDerivativeVisitor,java.lang.Object)>($r11, $r7);

        r4 = (com.opengamma.util.money.MultipleCurrencyAmount) $r12;

        $r13 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.bond.definition.BondSecurity: com.opengamma.analytics.financial.interestrate.annuity.derivative.Annuity getCoupon()>();

        $r14 = <com.opengamma.analytics.financial.interestrate.bond.provider.BondSecurityDiscountingMethod: com.opengamma.analytics.financial.provider.calculator.discounting.PresentValueDiscountingCalculator PVDC>;

        $r15 = virtualinvoke $r13.<com.opengamma.analytics.financial.interestrate.annuity.derivative.Annuity: java.lang.Object accept(com.opengamma.analytics.financial.interestrate.InstrumentDerivativeVisitor,java.lang.Object)>($r14, $r7);

        r5 = (com.opengamma.util.money.MultipleCurrencyAmount) $r15;

        $r16 = virtualinvoke r4.<com.opengamma.util.money.MultipleCurrencyAmount: com.opengamma.util.money.MultipleCurrencyAmount plus(com.opengamma.util.money.MultipleCurrencyAmount)>(r5);

        return $r16;
    }

    public com.opengamma.util.money.MultipleCurrencyAmount presentValueFromCleanPrice(com.opengamma.analytics.financial.interestrate.bond.definition.BondSecurity, com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface, double)
    {
        com.opengamma.analytics.financial.interestrate.bond.provider.BondSecurityDiscountingMethod r0;
        com.opengamma.analytics.financial.interestrate.bond.definition.BondSecurity r1;
        com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface r2;
        double d0, d1, d2, $d3, $d4, $d5, $d6, $d7;
        com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity r3;
        boolean $z0;
        com.opengamma.util.money.Currency $r4, $r9;
        java.lang.Double $r5;
        com.opengamma.analytics.financial.interestrate.annuity.derivative.Annuity $r6;
        com.opengamma.analytics.financial.interestrate.payments.derivative.Payment $r7;
        com.opengamma.analytics.financial.interestrate.payments.derivative.CouponFixed $r8;
        com.opengamma.util.money.MultipleCurrencyAmount $r10;

        r0 := @this: com.opengamma.analytics.financial.interestrate.bond.provider.BondSecurityDiscountingMethod;

        r1 := @parameter0: com.opengamma.analytics.financial.interestrate.bond.definition.BondSecurity;

        r2 := @parameter1: com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface;

        d0 := @parameter2: double;

        $z0 = r1 instanceof com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z0, "Present value from clean price available only for fixed coupon bond");

        r3 = (com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity) r1;

        $r4 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.bond.definition.BondSecurity: com.opengamma.util.money.Currency getCurrency()>();

        $d3 = virtualinvoke r3.<com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity: double getSettlementTime()>();

        $r5 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d3);

        d1 = interfaceinvoke r2.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface: double getDiscountFactor(com.opengamma.util.money.Currency,java.lang.Double)>($r4, $r5);

        $r6 = virtualinvoke r3.<com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity: com.opengamma.analytics.financial.interestrate.annuity.derivative.Annuity getCoupon()>();

        $r7 = virtualinvoke $r6.<com.opengamma.analytics.financial.interestrate.annuity.derivative.Annuity: com.opengamma.analytics.financial.interestrate.payments.derivative.Payment getNthPayment(int)>(0);

        $r8 = (com.opengamma.analytics.financial.interestrate.payments.derivative.CouponFixed) $r7;

        $d4 = virtualinvoke $r8.<com.opengamma.analytics.financial.interestrate.payments.derivative.CouponFixed: double getNotional()>();

        $d5 = d0 * $d4;

        $d6 = virtualinvoke r3.<com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity: double getAccruedInterest()>();

        $d7 = $d5 + $d6;

        d2 = $d7 * d1;

        $r9 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.bond.definition.BondSecurity: com.opengamma.util.money.Currency getCurrency()>();

        $r10 = staticinvoke <com.opengamma.util.money.MultipleCurrencyAmount: com.opengamma.util.money.MultipleCurrencyAmount of(com.opengamma.util.money.Currency,double)>($r9, d2);

        return $r10;
    }

    public com.opengamma.util.money.MultipleCurrencyAmount presentValueFromYield(com.opengamma.analytics.financial.interestrate.bond.definition.BondSecurity, com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface, double)
    {
        com.opengamma.analytics.financial.interestrate.bond.provider.BondSecurityDiscountingMethod r0;
        com.opengamma.analytics.financial.interestrate.bond.definition.BondSecurity r1;
        com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface r2;
        double d0, d1;
        com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity r3;
        boolean $z0;
        com.opengamma.util.money.MultipleCurrencyAmount $r4;

        r0 := @this: com.opengamma.analytics.financial.interestrate.bond.provider.BondSecurityDiscountingMethod;

        r1 := @parameter0: com.opengamma.analytics.financial.interestrate.bond.definition.BondSecurity;

        r2 := @parameter1: com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface;

        d0 := @parameter2: double;

        $z0 = r1 instanceof com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z0, "Present value from clean price available only for fixed coupon bond");

        r3 = (com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity) r1;

        d1 = virtualinvoke r0.<com.opengamma.analytics.financial.interestrate.bond.provider.BondSecurityDiscountingMethod: double cleanPriceFromYield(com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity,double)>(r3, d0);

        $r4 = virtualinvoke r0.<com.opengamma.analytics.financial.interestrate.bond.provider.BondSecurityDiscountingMethod: com.opengamma.util.money.MultipleCurrencyAmount presentValueFromCleanPrice(com.opengamma.analytics.financial.interestrate.bond.definition.BondSecurity,com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface,double)>(r3, r2, d1);

        return $r4;
    }

    public com.opengamma.util.money.MultipleCurrencyAmount presentValueFromZSpread(com.opengamma.analytics.financial.interestrate.bond.definition.BondSecurity, com.opengamma.analytics.financial.provider.description.interestrate.IssuerProviderInterface, double)
    {
        com.opengamma.analytics.financial.interestrate.bond.provider.BondSecurityDiscountingMethod r0;
        com.opengamma.analytics.financial.interestrate.bond.definition.BondSecurity r1;
        com.opengamma.analytics.financial.provider.description.interestrate.IssuerProviderInterface r2;
        double d0;
        com.opengamma.analytics.financial.provider.description.interestrate.IssuerProviderIssuerDecoratedSpreadContinuous $r4;
        com.opengamma.analytics.financial.legalentity.LegalEntity $r5;
        com.opengamma.util.money.MultipleCurrencyAmount $r6;

        r0 := @this: com.opengamma.analytics.financial.interestrate.bond.provider.BondSecurityDiscountingMethod;

        r1 := @parameter0: com.opengamma.analytics.financial.interestrate.bond.definition.BondSecurity;

        r2 := @parameter1: com.opengamma.analytics.financial.provider.description.interestrate.IssuerProviderInterface;

        d0 := @parameter2: double;

        $r4 = new com.opengamma.analytics.financial.provider.description.interestrate.IssuerProviderIssuerDecoratedSpreadContinuous;

        $r5 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.bond.definition.BondSecurity: com.opengamma.analytics.financial.legalentity.LegalEntity getIssuerEntity()>();

        specialinvoke $r4.<com.opengamma.analytics.financial.provider.description.interestrate.IssuerProviderIssuerDecoratedSpreadContinuous: void <init>(com.opengamma.analytics.financial.provider.description.interestrate.IssuerProviderInterface,com.opengamma.analytics.financial.legalentity.LegalEntity,double)>(r2, $r5, d0);

        $r6 = virtualinvoke r0.<com.opengamma.analytics.financial.interestrate.bond.provider.BondSecurityDiscountingMethod: com.opengamma.util.money.MultipleCurrencyAmount presentValue(com.opengamma.analytics.financial.interestrate.bond.definition.BondSecurity,com.opengamma.analytics.financial.provider.description.interestrate.IssuerProviderInterface)>(r1, $r4);

        return $r6;
    }

    public com.opengamma.util.money.MultipleCurrencyAmount presentValueFromZSpread(com.opengamma.analytics.financial.interestrate.bond.definition.BondSecurity, com.opengamma.analytics.financial.provider.description.interestrate.IssuerProviderInterface, double, boolean, int)
    {
        com.opengamma.analytics.financial.interestrate.bond.provider.BondSecurityDiscountingMethod r0;
        com.opengamma.analytics.financial.interestrate.bond.definition.BondSecurity r1;
        com.opengamma.analytics.financial.provider.description.interestrate.IssuerProviderInterface r2;
        double d0;
        boolean z0;
        int i0;
        com.opengamma.util.money.MultipleCurrencyAmount $r4, $r7;
        com.opengamma.analytics.financial.provider.description.interestrate.IssuerProviderIssuerDecoratedSpreadPeriodic $r5;
        com.opengamma.analytics.financial.legalentity.LegalEntity $r6;

        r0 := @this: com.opengamma.analytics.financial.interestrate.bond.provider.BondSecurityDiscountingMethod;

        r1 := @parameter0: com.opengamma.analytics.financial.interestrate.bond.definition.BondSecurity;

        r2 := @parameter1: com.opengamma.analytics.financial.provider.description.interestrate.IssuerProviderInterface;

        d0 := @parameter2: double;

        z0 := @parameter3: boolean;

        i0 := @parameter4: int;

        if z0 == 0 goto label1;

        $r5 = new com.opengamma.analytics.financial.provider.description.interestrate.IssuerProviderIssuerDecoratedSpreadPeriodic;

        $r6 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.bond.definition.BondSecurity: com.opengamma.analytics.financial.legalentity.LegalEntity getIssuerEntity()>();

        specialinvoke $r5.<com.opengamma.analytics.financial.provider.description.interestrate.IssuerProviderIssuerDecoratedSpreadPeriodic: void <init>(com.opengamma.analytics.financial.provider.description.interestrate.IssuerProviderInterface,com.opengamma.analytics.financial.legalentity.LegalEntity,double,int)>(r2, $r6, d0, i0);

        $r7 = virtualinvoke r0.<com.opengamma.analytics.financial.interestrate.bond.provider.BondSecurityDiscountingMethod: com.opengamma.util.money.MultipleCurrencyAmount presentValue(com.opengamma.analytics.financial.interestrate.bond.definition.BondSecurity,com.opengamma.analytics.financial.provider.description.interestrate.IssuerProviderInterface)>(r1, $r5);

        return $r7;

     label1:
        $r4 = virtualinvoke r0.<com.opengamma.analytics.financial.interestrate.bond.provider.BondSecurityDiscountingMethod: com.opengamma.util.money.MultipleCurrencyAmount presentValueFromZSpread(com.opengamma.analytics.financial.interestrate.bond.definition.BondSecurity,com.opengamma.analytics.financial.provider.description.interestrate.IssuerProviderInterface,double)>(r1, r2, d0);

        return $r4;
    }

    public double presentValueZSpreadSensitivity(com.opengamma.analytics.financial.interestrate.bond.definition.BondSecurity, com.opengamma.analytics.financial.provider.description.interestrate.IssuerProviderInterface, double)
    {
        com.opengamma.analytics.financial.interestrate.bond.provider.BondSecurityDiscountingMethod r0;
        com.opengamma.analytics.financial.interestrate.bond.definition.BondSecurity r1;
        com.opengamma.analytics.financial.provider.description.interestrate.IssuerProviderInterface r2;
        double d0, $d1;
        com.opengamma.analytics.util.amount.StringAmount r4;
        com.opengamma.analytics.financial.provider.description.interestrate.IssuerProviderIssuerDecoratedSpreadContinuous $r5;
        com.opengamma.analytics.financial.legalentity.LegalEntity $r6, $r8;
        java.util.HashMap $r7;
        java.lang.String $r9;
        java.lang.Object $r10;
        java.lang.Double $r11;

        r0 := @this: com.opengamma.analytics.financial.interestrate.bond.provider.BondSecurityDiscountingMethod;

        r1 := @parameter0: com.opengamma.analytics.financial.interestrate.bond.definition.BondSecurity;

        r2 := @parameter1: com.opengamma.analytics.financial.provider.description.interestrate.IssuerProviderInterface;

        d0 := @parameter2: double;

        $r5 = new com.opengamma.analytics.financial.provider.description.interestrate.IssuerProviderIssuerDecoratedSpreadContinuous;

        $r6 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.bond.definition.BondSecurity: com.opengamma.analytics.financial.legalentity.LegalEntity getIssuerEntity()>();

        specialinvoke $r5.<com.opengamma.analytics.financial.provider.description.interestrate.IssuerProviderIssuerDecoratedSpreadContinuous: void <init>(com.opengamma.analytics.financial.provider.description.interestrate.IssuerProviderInterface,com.opengamma.analytics.financial.legalentity.LegalEntity,double)>(r2, $r6, d0);

        r4 = virtualinvoke r0.<com.opengamma.analytics.financial.interestrate.bond.provider.BondSecurityDiscountingMethod: com.opengamma.analytics.util.amount.StringAmount presentValueParallelCurveSensitivity(com.opengamma.analytics.financial.interestrate.bond.definition.BondSecurity,com.opengamma.analytics.financial.provider.description.interestrate.IssuerProviderInterface)>(r1, $r5);

        $r7 = virtualinvoke r4.<com.opengamma.analytics.util.amount.StringAmount: java.util.HashMap getMap()>();

        $r8 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.bond.definition.BondSecurity: com.opengamma.analytics.financial.legalentity.LegalEntity getIssuerEntity()>();

        $r9 = interfaceinvoke r2.<com.opengamma.analytics.financial.provider.description.interestrate.IssuerProviderInterface: java.lang.String getName(com.opengamma.analytics.financial.legalentity.LegalEntity)>($r8);

        $r10 = virtualinvoke $r7.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r9);

        $r11 = (java.lang.Double) $r10;

        $d1 = virtualinvoke $r11.<java.lang.Double: double doubleValue()>();

        return $d1;
    }

    public double dirtyPriceFromCurves(com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity, com.opengamma.analytics.financial.provider.description.interestrate.IssuerProviderInterface)
    {
        com.opengamma.analytics.financial.interestrate.bond.provider.BondSecurityDiscountingMethod r0;
        com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity r1;
        com.opengamma.analytics.financial.provider.description.interestrate.IssuerProviderInterface r2;
        com.opengamma.util.money.MultipleCurrencyAmount r3;
        double d0, d1, $d2, $d3, $d4, $d5;
        com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface $r6;
        com.opengamma.util.money.Currency $r7, $r12;
        java.lang.Double $r8;
        com.opengamma.analytics.financial.interestrate.annuity.derivative.Annuity $r9;
        com.opengamma.analytics.financial.interestrate.payments.derivative.Payment $r10;
        com.opengamma.analytics.financial.interestrate.payments.derivative.CouponFixed $r11;

        r0 := @this: com.opengamma.analytics.financial.interestrate.bond.provider.BondSecurityDiscountingMethod;

        r1 := @parameter0: com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity;

        r2 := @parameter1: com.opengamma.analytics.financial.provider.description.interestrate.IssuerProviderInterface;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "Bond");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, "Issuer and multi-curves provider");

        r3 = virtualinvoke r0.<com.opengamma.analytics.financial.interestrate.bond.provider.BondSecurityDiscountingMethod: com.opengamma.util.money.MultipleCurrencyAmount presentValue(com.opengamma.analytics.financial.interestrate.bond.definition.BondSecurity,com.opengamma.analytics.financial.provider.description.interestrate.IssuerProviderInterface)>(r1, r2);

        $r6 = interfaceinvoke r2.<com.opengamma.analytics.financial.provider.description.interestrate.IssuerProviderInterface: com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface getMulticurveProvider()>();

        $r7 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity: com.opengamma.util.money.Currency getCurrency()>();

        $d2 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity: double getSettlementTime()>();

        $r8 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d2);

        d0 = interfaceinvoke $r6.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface: double getDiscountFactor(com.opengamma.util.money.Currency,java.lang.Double)>($r7, $r8);

        $r9 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity: com.opengamma.analytics.financial.interestrate.annuity.derivative.Annuity getCoupon()>();

        $r10 = virtualinvoke $r9.<com.opengamma.analytics.financial.interestrate.annuity.derivative.Annuity: com.opengamma.analytics.financial.interestrate.payments.derivative.Payment getNthPayment(int)>(0);

        $r11 = (com.opengamma.analytics.financial.interestrate.payments.derivative.CouponFixed) $r10;

        d1 = virtualinvoke $r11.<com.opengamma.analytics.financial.interestrate.payments.derivative.CouponFixed: double getNotional()>();

        $r12 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity: com.opengamma.util.money.Currency getCurrency()>();

        $d3 = virtualinvoke r3.<com.opengamma.util.money.MultipleCurrencyAmount: double getAmount(com.opengamma.util.money.Currency)>($r12);

        $d4 = $d3 / d0;

        $d5 = $d4 / d1;

        return $d5;
    }

    public double dirtyPriceFromCleanPrice(com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity, double)
    {
        com.opengamma.analytics.financial.interestrate.bond.provider.BondSecurityDiscountingMethod r0;
        com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity r1;
        double d0, d1, $d2, $d3, $d4;
        com.opengamma.analytics.financial.interestrate.annuity.derivative.Annuity $r2;
        com.opengamma.analytics.financial.interestrate.payments.derivative.Payment $r3;
        com.opengamma.analytics.financial.interestrate.payments.derivative.CouponFixed $r4;

        r0 := @this: com.opengamma.analytics.financial.interestrate.bond.provider.BondSecurityDiscountingMethod;

        r1 := @parameter0: com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity;

        d0 := @parameter1: double;

        $r2 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity: com.opengamma.analytics.financial.interestrate.annuity.derivative.Annuity getCoupon()>();

        $r3 = virtualinvoke $r2.<com.opengamma.analytics.financial.interestrate.annuity.derivative.Annuity: com.opengamma.analytics.financial.interestrate.payments.derivative.Payment getNthPayment(int)>(0);

        $r4 = (com.opengamma.analytics.financial.interestrate.payments.derivative.CouponFixed) $r3;

        d1 = virtualinvoke $r4.<com.opengamma.analytics.financial.interestrate.payments.derivative.CouponFixed: double getNotional()>();

        $d2 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity: double getAccruedInterest()>();

        $d3 = $d2 / d1;

        $d4 = d0 + $d3;

        return $d4;
    }

    public double dirtyPriceFromYield(com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity, double)
    {
        com.opengamma.analytics.financial.interestrate.bond.provider.BondSecurityDiscountingMethod r0;
        com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity r1;
        double d0, d1, d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21, $d22, $d23, $d24, $d25, $d26;
        int i0, $i1, $i2, $i3, $i4, $i5;
        com.opengamma.financial.convention.yield.YieldConvention r2, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r24, $r25, $r26, $r27, $r28, $r29;
        com.opengamma.analytics.financial.interestrate.annuity.derivative.Annuity $r4, $r5, $r6, $r7, $r30, $r33;
        com.opengamma.analytics.financial.interestrate.payments.derivative.Payment $r8, $r31, $r34;
        com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed $r9;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13;
        java.lang.UnsupportedOperationException $r17;
        java.lang.StringBuilder $r18, $r19, $r21, $r22;
        java.lang.String $r20, $r23;
        com.opengamma.analytics.financial.interestrate.payments.derivative.CouponFixed $r32, $r35;

        r0 := @this: com.opengamma.analytics.financial.interestrate.bond.provider.BondSecurityDiscountingMethod;

        r1 := @parameter0: com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity;

        d0 := @parameter1: double;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "bond");

        $r4 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity: com.opengamma.analytics.financial.interestrate.annuity.derivative.Annuity getNominal()>();

        $i1 = virtualinvoke $r4.<com.opengamma.analytics.financial.interestrate.annuity.derivative.Annuity: int getNumberOfPayments()>();

        if $i1 != 1 goto label1;

        $z13 = 1;

        goto label2;

     label1:
        $z13 = 0;

     label2:
        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z13, "Yield: more than one nominal repayment.");

        $r5 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity: com.opengamma.analytics.financial.interestrate.annuity.derivative.Annuity getCoupon()>();

        i0 = virtualinvoke $r5.<com.opengamma.analytics.financial.interestrate.annuity.derivative.Annuity: int getNumberOfPayments()>();

        $r6 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity: com.opengamma.analytics.financial.interestrate.annuity.derivative.Annuity getNominal()>();

        $r7 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity: com.opengamma.analytics.financial.interestrate.annuity.derivative.Annuity getNominal()>();

        $i2 = virtualinvoke $r7.<com.opengamma.analytics.financial.interestrate.annuity.derivative.Annuity: int getNumberOfPayments()>();

        $i3 = $i2 - 1;

        $r8 = virtualinvoke $r6.<com.opengamma.analytics.financial.interestrate.annuity.derivative.Annuity: com.opengamma.analytics.financial.interestrate.payments.derivative.Payment getNthPayment(int)>($i3);

        $r9 = (com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed) $r8;

        d1 = virtualinvoke $r9.<com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed: double getAmount()>();

        r2 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity: com.opengamma.financial.convention.yield.YieldConvention getYieldConvention()>();

        if i0 != 1 goto label5;

        $r24 = <com.opengamma.financial.convention.yield.SimpleYieldConvention: com.opengamma.financial.convention.yield.YieldConvention US_STREET>;

        $z7 = virtualinvoke r2.<java.lang.Object: boolean equals(java.lang.Object)>($r24);

        if $z7 != 0 goto label3;

        $r25 = <com.opengamma.financial.convention.yield.SimpleYieldConvention: com.opengamma.financial.convention.yield.YieldConvention GERMAN_BOND>;

        $z8 = virtualinvoke r2.<java.lang.Object: boolean equals(java.lang.Object)>($r25);

        if $z8 != 0 goto label3;

        $r26 = <com.opengamma.financial.convention.yield.SimpleYieldConvention: com.opengamma.financial.convention.yield.YieldConvention ITALY_TREASURY_BONDS>;

        $z9 = virtualinvoke r2.<java.lang.Object: boolean equals(java.lang.Object)>($r26);

        if $z9 != 0 goto label3;

        $r27 = <com.opengamma.financial.convention.yield.SimpleYieldConvention: com.opengamma.financial.convention.yield.YieldConvention AUSTRALIA_EX_DIVIDEND>;

        $z10 = virtualinvoke r2.<java.lang.Object: boolean equals(java.lang.Object)>($r27);

        if $z10 != 0 goto label3;

        $r28 = <com.opengamma.financial.convention.yield.SimpleYieldConvention: com.opengamma.financial.convention.yield.YieldConvention MEXICAN_BONOS>;

        $z11 = virtualinvoke r2.<java.lang.Object: boolean equals(java.lang.Object)>($r28);

        if $z11 == 0 goto label4;

     label3:
        $r33 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity: com.opengamma.analytics.financial.interestrate.annuity.derivative.Annuity getCoupon()>();

        $r34 = virtualinvoke $r33.<com.opengamma.analytics.financial.interestrate.annuity.derivative.Annuity: com.opengamma.analytics.financial.interestrate.payments.derivative.Payment getNthPayment(int)>(0);

        $r35 = (com.opengamma.analytics.financial.interestrate.payments.derivative.CouponFixed) $r34;

        $d17 = virtualinvoke $r35.<com.opengamma.analytics.financial.interestrate.payments.derivative.CouponFixed: double getAmount()>();

        $d18 = d1 + $d17;

        $d19 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity: double getFactorToNextCoupon()>();

        $d20 = $d19 * d0;

        $i5 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity: int getCouponPerYear()>();

        $d21 = (double) $i5;

        $d22 = $d20 / $d21;

        $d23 = 1.0 + $d22;

        $d24 = $d18 / $d23;

        $d25 = $d24 / d1;

        return $d25;

     label4:
        $r29 = <com.opengamma.financial.convention.yield.SimpleYieldConvention: com.opengamma.financial.convention.yield.YieldConvention FRANCE_COMPOUND_METHOD>;

        $z12 = virtualinvoke r2.<java.lang.Object: boolean equals(java.lang.Object)>($r29);

        if $z12 == 0 goto label5;

        $r30 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity: com.opengamma.analytics.financial.interestrate.annuity.derivative.Annuity getCoupon()>();

        $r31 = virtualinvoke $r30.<com.opengamma.analytics.financial.interestrate.annuity.derivative.Annuity: com.opengamma.analytics.financial.interestrate.payments.derivative.Payment getNthPayment(int)>(0);

        $r32 = (com.opengamma.analytics.financial.interestrate.payments.derivative.CouponFixed) $r31;

        $d7 = virtualinvoke $r32.<com.opengamma.analytics.financial.interestrate.payments.derivative.CouponFixed: double getAmount()>();

        $d8 = d1 + $d7;

        $d9 = $d8 / d1;

        $i4 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity: int getCouponPerYear()>();

        $d10 = (double) $i4;

        $d11 = d0 / $d10;

        $d12 = 1.0 + $d11;

        $d13 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity: double getFactorToNextCoupon()>();

        $d14 = neg $d13;

        $d15 = staticinvoke <java.lang.Math: double pow(double,double)>($d12, $d14);

        $d16 = $d9 * $d15;

        return $d16;

     label5:
        $r10 = <com.opengamma.financial.convention.yield.SimpleYieldConvention: com.opengamma.financial.convention.yield.YieldConvention US_STREET>;

        $z0 = virtualinvoke r2.<java.lang.Object: boolean equals(java.lang.Object)>($r10);

        if $z0 != 0 goto label6;

        $r11 = <com.opengamma.financial.convention.yield.SimpleYieldConvention: com.opengamma.financial.convention.yield.YieldConvention UK_BUMP_DMO_METHOD>;

        $z1 = virtualinvoke r2.<java.lang.Object: boolean equals(java.lang.Object)>($r11);

        if $z1 != 0 goto label6;

        $r12 = <com.opengamma.financial.convention.yield.SimpleYieldConvention: com.opengamma.financial.convention.yield.YieldConvention GERMAN_BOND>;

        $z2 = virtualinvoke r2.<java.lang.Object: boolean equals(java.lang.Object)>($r12);

        if $z2 != 0 goto label6;

        $r13 = <com.opengamma.financial.convention.yield.SimpleYieldConvention: com.opengamma.financial.convention.yield.YieldConvention FRANCE_COMPOUND_METHOD>;

        $z3 = virtualinvoke r2.<java.lang.Object: boolean equals(java.lang.Object)>($r13);

        if $z3 != 0 goto label6;

        $r14 = <com.opengamma.financial.convention.yield.SimpleYieldConvention: com.opengamma.financial.convention.yield.YieldConvention AUSTRALIA_EX_DIVIDEND>;

        $z4 = virtualinvoke r2.<java.lang.Object: boolean equals(java.lang.Object)>($r14);

        if $z4 != 0 goto label6;

        $r15 = <com.opengamma.financial.convention.yield.SimpleYieldConvention: com.opengamma.financial.convention.yield.YieldConvention MEXICAN_BONOS>;

        $z5 = virtualinvoke r2.<java.lang.Object: boolean equals(java.lang.Object)>($r15);

        if $z5 == 0 goto label7;

     label6:
        $d26 = specialinvoke r0.<com.opengamma.analytics.financial.interestrate.bond.provider.BondSecurityDiscountingMethod: double dirtyPriceFromYieldStandard(com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity,double)>(r1, d0);

        return $d26;

     label7:
        $r16 = <com.opengamma.financial.convention.yield.SimpleYieldConvention: com.opengamma.financial.convention.yield.YieldConvention ITALY_TREASURY_BONDS>;

        $z6 = virtualinvoke r2.<java.lang.Object: boolean equals(java.lang.Object)>($r16);

        if $z6 == 0 goto label8;

        $d3 = 1.0 + d0;

        $d4 = staticinvoke <java.lang.Math: double sqrt(double)>($d3);

        $d5 = $d4 - 1.0;

        d2 = $d5 * 2.0;

        $d6 = specialinvoke r0.<com.opengamma.analytics.financial.interestrate.bond.provider.BondSecurityDiscountingMethod: double dirtyPriceFromYieldStandard(com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity,double)>(r1, d2);

        return $d6;

     label8:
        $r17 = new java.lang.UnsupportedOperationException;

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("The convention ");

        $r20 = interfaceinvoke r2.<com.opengamma.financial.convention.yield.YieldConvention: java.lang.String getName()>();

        $r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20);

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is not supported.");

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r17.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>($r23);

        throw $r17;
    }

    private double dirtyPriceFromYieldStandard(com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity, double)
    {
        com.opengamma.analytics.financial.interestrate.bond.provider.BondSecurityDiscountingMethod r0;
        com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity r1;
        double d0, d1, d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, d17, d18;
        int i0, $i1, $i2, $i3, i4;
        com.opengamma.analytics.financial.interestrate.annuity.derivative.Annuity $r2, $r3, $r4, $r7;
        com.opengamma.analytics.financial.interestrate.payments.derivative.Payment $r5, $r8;
        com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed $r6;
        com.opengamma.analytics.financial.interestrate.payments.derivative.CouponFixed $r9;
        boolean $z0;

        r0 := @this: com.opengamma.analytics.financial.interestrate.bond.provider.BondSecurityDiscountingMethod;

        r1 := @parameter0: com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity;

        d0 := @parameter1: double;

        $r2 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity: com.opengamma.analytics.financial.interestrate.annuity.derivative.Annuity getNominal()>();

        $i1 = virtualinvoke $r2.<com.opengamma.analytics.financial.interestrate.annuity.derivative.Annuity: int getNumberOfPayments()>();

        if $i1 != 1 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z0, "Yield: more than one nominal repayment.");

        $r3 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity: com.opengamma.analytics.financial.interestrate.annuity.derivative.Annuity getCoupon()>();

        i0 = virtualinvoke $r3.<com.opengamma.analytics.financial.interestrate.annuity.derivative.Annuity: int getNumberOfPayments()>();

        $r4 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity: com.opengamma.analytics.financial.interestrate.annuity.derivative.Annuity getNominal()>();

        $r5 = virtualinvoke $r4.<com.opengamma.analytics.financial.interestrate.annuity.derivative.Annuity: com.opengamma.analytics.financial.interestrate.payments.derivative.Payment getNthPayment(int)>(0);

        $r6 = (com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed) $r5;

        d1 = virtualinvoke $r6.<com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed: double getAmount()>();

        $i2 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity: int getCouponPerYear()>();

        $d3 = (double) $i2;

        $d4 = d0 / $d3;

        d2 = 1.0 + $d4;

        d17 = 0.0;

        i4 = 0;

     label3:
        if i4 >= i0 goto label4;

        $r7 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity: com.opengamma.analytics.financial.interestrate.annuity.derivative.Annuity getCoupon()>();

        $r8 = virtualinvoke $r7.<com.opengamma.analytics.financial.interestrate.annuity.derivative.Annuity: com.opengamma.analytics.financial.interestrate.payments.derivative.Payment getNthPayment(int)>(i4);

        $r9 = (com.opengamma.analytics.financial.interestrate.payments.derivative.CouponFixed) $r8;

        $d13 = virtualinvoke $r9.<com.opengamma.analytics.financial.interestrate.payments.derivative.CouponFixed: double getAmount()>();

        $d14 = (double) i4;

        $d15 = staticinvoke <java.lang.Math: double pow(double,double)>(d2, $d14);

        $d16 = $d13 / $d15;

        d17 = d17 + $d16;

        i4 = i4 + 1;

        goto label3;

     label4:
        $i3 = i0 - 1;

        $d5 = (double) $i3;

        $d6 = staticinvoke <java.lang.Math: double pow(double,double)>(d2, $d5);

        $d7 = d1 / $d6;

        d18 = d17 + $d7;

        $d8 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity: double getFactorToNextCoupon()>();

        $d9 = neg $d8;

        $d10 = staticinvoke <java.lang.Math: double pow(double,double)>(d2, $d9);

        $d11 = d18 * $d10;

        $d12 = $d11 / d1;

        return $d12;
    }

    public com.opengamma.analytics.financial.provider.sensitivity.multicurve.MulticurveSensitivity dirtyPriceCurveSensitivity(com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity, com.opengamma.analytics.financial.provider.description.interestrate.IssuerProviderInterface)
    {
        com.opengamma.analytics.financial.interestrate.bond.provider.BondSecurityDiscountingMethod r0;
        com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity r1;
        com.opengamma.analytics.financial.provider.description.interestrate.IssuerProviderInterface r2;
        com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface r3;
        com.opengamma.util.money.Currency r4;
        double d0, d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9;
        com.opengamma.util.money.MultipleCurrencyAmount r5;
        com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyMulticurveSensitivity r6;
        com.opengamma.analytics.financial.interestrate.annuity.derivative.Annuity $r11;
        com.opengamma.analytics.financial.interestrate.payments.derivative.Payment $r12;
        com.opengamma.analytics.financial.interestrate.payments.derivative.CouponFixed $r13;
        java.lang.Double $r14;
        java.util.HashMap $r15;
        java.util.ArrayList $r16;
        com.opengamma.util.tuple.DoublesPair $r17;
        java.lang.String $r18;
        com.opengamma.analytics.financial.provider.sensitivity.multicurve.MulticurveSensitivity $r20, $r21, r22, r23, r24;

        r0 := @this: com.opengamma.analytics.financial.interestrate.bond.provider.BondSecurityDiscountingMethod;

        r1 := @parameter0: com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity;

        r2 := @parameter1: com.opengamma.analytics.financial.provider.description.interestrate.IssuerProviderInterface;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "Bond");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, "Issuer and multi-curves provider");

        r3 = interfaceinvoke r2.<com.opengamma.analytics.financial.provider.description.interestrate.IssuerProviderInterface: com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface getMulticurveProvider()>();

        r4 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity: com.opengamma.util.money.Currency getCurrency()>();

        $r11 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity: com.opengamma.analytics.financial.interestrate.annuity.derivative.Annuity getCoupon()>();

        $r12 = virtualinvoke $r11.<com.opengamma.analytics.financial.interestrate.annuity.derivative.Annuity: com.opengamma.analytics.financial.interestrate.payments.derivative.Payment getNthPayment(int)>(0);

        $r13 = (com.opengamma.analytics.financial.interestrate.payments.derivative.CouponFixed) $r12;

        d0 = virtualinvoke $r13.<com.opengamma.analytics.financial.interestrate.payments.derivative.CouponFixed: double getNotional()>();

        r5 = virtualinvoke r0.<com.opengamma.analytics.financial.interestrate.bond.provider.BondSecurityDiscountingMethod: com.opengamma.util.money.MultipleCurrencyAmount presentValue(com.opengamma.analytics.financial.interestrate.bond.definition.BondSecurity,com.opengamma.analytics.financial.provider.description.interestrate.IssuerProviderInterface)>(r1, r2);

        r6 = virtualinvoke r0.<com.opengamma.analytics.financial.interestrate.bond.provider.BondSecurityDiscountingMethod: com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyMulticurveSensitivity presentValueCurveSensitivity(com.opengamma.analytics.financial.interestrate.bond.definition.BondSecurity,com.opengamma.analytics.financial.provider.description.interestrate.IssuerProviderInterface)>(r1, r2);

        $d2 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity: double getSettlementTime()>();

        $r14 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d2);

        d1 = interfaceinvoke r3.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface: double getDiscountFactor(com.opengamma.util.money.Currency,java.lang.Double)>(r4, $r14);

        $r15 = new java.util.HashMap;

        specialinvoke $r15.<java.util.HashMap: void <init>()>();

        $r16 = new java.util.ArrayList;

        specialinvoke $r16.<java.util.ArrayList: void <init>()>();

        $d3 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity: double getSettlementTime()>();

        $d4 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity: double getSettlementTime()>();

        $d5 = $d4 / d1;

        $r17 = staticinvoke <com.opengamma.util.tuple.DoublesPair: com.opengamma.util.tuple.DoublesPair of(double,double)>($d3, $d5);

        interfaceinvoke $r16.<java.util.List: boolean add(java.lang.Object)>($r17);

        $r18 = interfaceinvoke r3.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface: java.lang.String getName(com.opengamma.util.money.Currency)>(r4);

        interfaceinvoke $r15.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r18, $r16);

        r22 = staticinvoke <com.opengamma.analytics.financial.provider.sensitivity.multicurve.MulticurveSensitivity: com.opengamma.analytics.financial.provider.sensitivity.multicurve.MulticurveSensitivity ofYieldDiscounting(java.util.Map)>($r15);

        $d6 = virtualinvoke r5.<com.opengamma.util.money.MultipleCurrencyAmount: double getAmount(com.opengamma.util.money.Currency)>(r4);

        $d7 = $d6 / d0;

        r23 = virtualinvoke r22.<com.opengamma.analytics.financial.provider.sensitivity.multicurve.MulticurveSensitivity: com.opengamma.analytics.financial.provider.sensitivity.multicurve.MulticurveSensitivity multipliedBy(double)>($d7);

        $r20 = virtualinvoke r6.<com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyMulticurveSensitivity: com.opengamma.analytics.financial.provider.sensitivity.multicurve.MulticurveSensitivity getSensitivity(com.opengamma.util.money.Currency)>(r4);

        $d8 = d1 * d0;

        $d9 = 1.0 / $d8;

        $r21 = virtualinvoke $r20.<com.opengamma.analytics.financial.provider.sensitivity.multicurve.MulticurveSensitivity: com.opengamma.analytics.financial.provider.sensitivity.multicurve.MulticurveSensitivity multipliedBy(double)>($d9);

        r24 = virtualinvoke r23.<com.opengamma.analytics.financial.provider.sensitivity.multicurve.MulticurveSensitivity: com.opengamma.analytics.financial.provider.sensitivity.multicurve.MulticurveSensitivity plus(com.opengamma.analytics.financial.provider.sensitivity.multicurve.MulticurveSensitivity)>($r21);

        return r24;
    }

    public double cleanPriceFromCurves(com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity, com.opengamma.analytics.financial.provider.description.interestrate.IssuerProviderInterface)
    {
        com.opengamma.analytics.financial.interestrate.bond.provider.BondSecurityDiscountingMethod r0;
        com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity r1;
        com.opengamma.analytics.financial.provider.description.interestrate.IssuerProviderInterface r2;
        double d0, $d1;

        r0 := @this: com.opengamma.analytics.financial.interestrate.bond.provider.BondSecurityDiscountingMethod;

        r1 := @parameter0: com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity;

        r2 := @parameter1: com.opengamma.analytics.financial.provider.description.interestrate.IssuerProviderInterface;

        d0 = virtualinvoke r0.<com.opengamma.analytics.financial.interestrate.bond.provider.BondSecurityDiscountingMethod: double dirtyPriceFromCurves(com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity,com.opengamma.analytics.financial.provider.description.interestrate.IssuerProviderInterface)>(r1, r2);

        $d1 = virtualinvoke r0.<com.opengamma.analytics.financial.interestrate.bond.provider.BondSecurityDiscountingMethod: double cleanPriceFromDirtyPrice(com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity,double)>(r1, d0);

        return $d1;
    }

    public double cleanPriceFromDirtyPrice(com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity, double)
    {
        com.opengamma.analytics.financial.interestrate.bond.provider.BondSecurityDiscountingMethod r0;
        com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity r1;
        double d0, d1, $d2, $d3, $d4;
        com.opengamma.analytics.financial.interestrate.annuity.derivative.Annuity $r2;
        com.opengamma.analytics.financial.interestrate.payments.derivative.Payment $r3;
        com.opengamma.analytics.financial.interestrate.payments.derivative.CouponFixed $r4;

        r0 := @this: com.opengamma.analytics.financial.interestrate.bond.provider.BondSecurityDiscountingMethod;

        r1 := @parameter0: com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity;

        d0 := @parameter1: double;

        $r2 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity: com.opengamma.analytics.financial.interestrate.annuity.derivative.Annuity getCoupon()>();

        $r3 = virtualinvoke $r2.<com.opengamma.analytics.financial.interestrate.annuity.derivative.Annuity: com.opengamma.analytics.financial.interestrate.payments.derivative.Payment getNthPayment(int)>(0);

        $r4 = (com.opengamma.analytics.financial.interestrate.payments.derivative.CouponFixed) $r3;

        d1 = virtualinvoke $r4.<com.opengamma.analytics.financial.interestrate.payments.derivative.CouponFixed: double getNotional()>();

        $d2 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity: double getAccruedInterest()>();

        $d3 = $d2 / d1;

        $d4 = d0 - $d3;

        return $d4;
    }

    public double cleanPriceFromYield(com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity, double)
    {
        com.opengamma.analytics.financial.interestrate.bond.provider.BondSecurityDiscountingMethod r0;
        com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity r1;
        double d0, d1, d2;

        r0 := @this: com.opengamma.analytics.financial.interestrate.bond.provider.BondSecurityDiscountingMethod;

        r1 := @parameter0: com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity;

        d0 := @parameter1: double;

        d1 = virtualinvoke r0.<com.opengamma.analytics.financial.interestrate.bond.provider.BondSecurityDiscountingMethod: double dirtyPriceFromYield(com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity,double)>(r1, d0);

        d2 = virtualinvoke r0.<com.opengamma.analytics.financial.interestrate.bond.provider.BondSecurityDiscountingMethod: double cleanPriceFromDirtyPrice(com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity,double)>(r1, d1);

        return d2;
    }

    public double yieldFromDirtyPrice(com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity, double)
    {
        com.opengamma.analytics.financial.interestrate.bond.provider.BondSecurityDiscountingMethod r0;
        com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity r1;
        double d0, d1, $d2, $d3;
        double[] r3;
        com.opengamma.analytics.financial.interestrate.bond.provider.BondSecurityDiscountingMethod$1 $r4;
        com.opengamma.analytics.math.rootfinding.BracketRoot $r5;
        com.opengamma.analytics.math.rootfinding.RealSingleRootFinder $r6;
        java.lang.Double $r7, $r8, $r9;

        r0 := @this: com.opengamma.analytics.financial.interestrate.bond.provider.BondSecurityDiscountingMethod;

        r1 := @parameter0: com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity;

        d0 := @parameter1: double;

        $r4 = new com.opengamma.analytics.financial.interestrate.bond.provider.BondSecurityDiscountingMethod$1;

        specialinvoke $r4.<com.opengamma.analytics.financial.interestrate.bond.provider.BondSecurityDiscountingMethod$1: void <init>(com.opengamma.analytics.financial.interestrate.bond.provider.BondSecurityDiscountingMethod,com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity,double)>(r0, r1, d0);

        $r5 = <com.opengamma.analytics.financial.interestrate.bond.provider.BondSecurityDiscountingMethod: com.opengamma.analytics.math.rootfinding.BracketRoot BRACKETER>;

        r3 = virtualinvoke $r5.<com.opengamma.analytics.math.rootfinding.BracketRoot: double[] getBracketedPoints(com.opengamma.analytics.math.function.Function1D,double,double)>($r4, 0.0, 0.2);

        $r6 = <com.opengamma.analytics.financial.interestrate.bond.provider.BondSecurityDiscountingMethod: com.opengamma.analytics.math.rootfinding.RealSingleRootFinder ROOT_FINDER>;

        $d2 = r3[0];

        $r7 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d2);

        $d3 = r3[1];

        $r8 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d3);

        $r9 = virtualinvoke $r6.<com.opengamma.analytics.math.rootfinding.RealSingleRootFinder: java.lang.Double getRoot(com.opengamma.analytics.math.function.Function1D,java.lang.Double,java.lang.Double)>($r4, $r7, $r8);

        d1 = virtualinvoke $r9.<java.lang.Double: double doubleValue()>();

        return d1;
    }

    public double yieldFromCurves(com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity, com.opengamma.analytics.financial.provider.description.interestrate.IssuerProviderInterface)
    {
        com.opengamma.analytics.financial.interestrate.bond.provider.BondSecurityDiscountingMethod r0;
        com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity r1;
        com.opengamma.analytics.financial.provider.description.interestrate.IssuerProviderInterface r2;
        double d0, d1;

        r0 := @this: com.opengamma.analytics.financial.interestrate.bond.provider.BondSecurityDiscountingMethod;

        r1 := @parameter0: com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity;

        r2 := @parameter1: com.opengamma.analytics.financial.provider.description.interestrate.IssuerProviderInterface;

        d0 = virtualinvoke r0.<com.opengamma.analytics.financial.interestrate.bond.provider.BondSecurityDiscountingMethod: double dirtyPriceFromCurves(com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity,com.opengamma.analytics.financial.provider.description.interestrate.IssuerProviderInterface)>(r1, r2);

        d1 = virtualinvoke r0.<com.opengamma.analytics.financial.interestrate.bond.provider.BondSecurityDiscountingMethod: double yieldFromDirtyPrice(com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity,double)>(r1, d0);

        return d1;
    }

    public double yieldFromCleanPrice(com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity, double)
    {
        com.opengamma.analytics.financial.interestrate.bond.provider.BondSecurityDiscountingMethod r0;
        com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity r1;
        double d0, d1, d2;

        r0 := @this: com.opengamma.analytics.financial.interestrate.bond.provider.BondSecurityDiscountingMethod;

        r1 := @parameter0: com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity;

        d0 := @parameter1: double;

        d1 = virtualinvoke r0.<com.opengamma.analytics.financial.interestrate.bond.provider.BondSecurityDiscountingMethod: double dirtyPriceFromCleanPrice(com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity,double)>(r1, d0);

        d2 = virtualinvoke r0.<com.opengamma.analytics.financial.interestrate.bond.provider.BondSecurityDiscountingMethod: double yieldFromDirtyPrice(com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity,double)>(r1, d1);

        return d2;
    }

    public double modifiedDurationFromYield(com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity, double)
    {
        com.opengamma.analytics.financial.interestrate.bond.provider.BondSecurityDiscountingMethod r0;
        com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity r1;
        double d0, d1, d2, d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21, $d22, $d23, $d24, $d25;
        int i0, $i1, $i2, $i3, $i4;
        com.opengamma.financial.convention.yield.YieldConvention r2, $r4, $r5, $r6, $r7, $r8, $r9, $r17, $r18, $r19, $r20, $r21, $r22;
        com.opengamma.analytics.financial.interestrate.annuity.derivative.Annuity $r3;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11;
        java.lang.UnsupportedOperationException $r10;
        java.lang.StringBuilder $r11, $r12, $r14, $r15;
        java.lang.String $r13, $r16;

        r0 := @this: com.opengamma.analytics.financial.interestrate.bond.provider.BondSecurityDiscountingMethod;

        r1 := @parameter0: com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity;

        d0 := @parameter1: double;

        $r3 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity: com.opengamma.analytics.financial.interestrate.annuity.derivative.Annuity getCoupon()>();

        i0 = virtualinvoke $r3.<com.opengamma.analytics.financial.interestrate.annuity.derivative.Annuity: int getNumberOfPayments()>();

        r2 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity: com.opengamma.financial.convention.yield.YieldConvention getYieldConvention()>();

        if i0 != 1 goto label3;

        $r17 = <com.opengamma.financial.convention.yield.SimpleYieldConvention: com.opengamma.financial.convention.yield.YieldConvention US_STREET>;

        $z6 = virtualinvoke r2.<java.lang.Object: boolean equals(java.lang.Object)>($r17);

        if $z6 != 0 goto label1;

        $r18 = <com.opengamma.financial.convention.yield.SimpleYieldConvention: com.opengamma.financial.convention.yield.YieldConvention GERMAN_BOND>;

        $z7 = virtualinvoke r2.<java.lang.Object: boolean equals(java.lang.Object)>($r18);

        if $z7 != 0 goto label1;

        $r19 = <com.opengamma.financial.convention.yield.SimpleYieldConvention: com.opengamma.financial.convention.yield.YieldConvention ITALY_TREASURY_BONDS>;

        $z8 = virtualinvoke r2.<java.lang.Object: boolean equals(java.lang.Object)>($r19);

        if $z8 != 0 goto label1;

        $r20 = <com.opengamma.financial.convention.yield.SimpleYieldConvention: com.opengamma.financial.convention.yield.YieldConvention AUSTRALIA_EX_DIVIDEND>;

        $z9 = virtualinvoke r2.<java.lang.Object: boolean equals(java.lang.Object)>($r20);

        if $z9 != 0 goto label1;

        $r21 = <com.opengamma.financial.convention.yield.SimpleYieldConvention: com.opengamma.financial.convention.yield.YieldConvention MEXICAN_BONOS>;

        $z10 = virtualinvoke r2.<java.lang.Object: boolean equals(java.lang.Object)>($r21);

        if $z10 == 0 goto label2;

     label1:
        $d16 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity: double getFactorToNextCoupon()>();

        $i3 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity: int getCouponPerYear()>();

        $d17 = (double) $i3;

        $d18 = $d16 / $d17;

        $d19 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity: double getFactorToNextCoupon()>();

        $d20 = $d19 * d0;

        $i4 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity: int getCouponPerYear()>();

        $d21 = (double) $i4;

        $d22 = $d20 / $d21;

        $d23 = 1.0 + $d22;

        $d24 = $d18 / $d23;

        return $d24;

     label2:
        $r22 = <com.opengamma.financial.convention.yield.SimpleYieldConvention: com.opengamma.financial.convention.yield.YieldConvention FRANCE_COMPOUND_METHOD>;

        $z11 = virtualinvoke r2.<java.lang.Object: boolean equals(java.lang.Object)>($r22);

        if $z11 == 0 goto label3;

        $d9 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity: double getFactorToNextCoupon()>();

        $i1 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity: int getCouponPerYear()>();

        $d10 = (double) $i1;

        $d11 = $d9 / $d10;

        $i2 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity: int getCouponPerYear()>();

        $d12 = (double) $i2;

        $d13 = d0 / $d12;

        $d14 = 1.0 + $d13;

        $d15 = $d11 / $d14;

        return $d15;

     label3:
        $r4 = <com.opengamma.financial.convention.yield.SimpleYieldConvention: com.opengamma.financial.convention.yield.YieldConvention US_STREET>;

        $z0 = virtualinvoke r2.<java.lang.Object: boolean equals(java.lang.Object)>($r4);

        if $z0 != 0 goto label4;

        $r5 = <com.opengamma.financial.convention.yield.SimpleYieldConvention: com.opengamma.financial.convention.yield.YieldConvention UK_BUMP_DMO_METHOD>;

        $z1 = virtualinvoke r2.<java.lang.Object: boolean equals(java.lang.Object)>($r5);

        if $z1 != 0 goto label4;

        $r6 = <com.opengamma.financial.convention.yield.SimpleYieldConvention: com.opengamma.financial.convention.yield.YieldConvention GERMAN_BOND>;

        $z2 = virtualinvoke r2.<java.lang.Object: boolean equals(java.lang.Object)>($r6);

        if $z2 != 0 goto label4;

        $r7 = <com.opengamma.financial.convention.yield.SimpleYieldConvention: com.opengamma.financial.convention.yield.YieldConvention FRANCE_COMPOUND_METHOD>;

        $z3 = virtualinvoke r2.<java.lang.Object: boolean equals(java.lang.Object)>($r7);

        if $z3 != 0 goto label4;

        $r8 = <com.opengamma.financial.convention.yield.SimpleYieldConvention: com.opengamma.financial.convention.yield.YieldConvention AUSTRALIA_EX_DIVIDEND>;

        $z4 = virtualinvoke r2.<java.lang.Object: boolean equals(java.lang.Object)>($r8);

        if $z4 == 0 goto label5;

     label4:
        $d25 = specialinvoke r0.<com.opengamma.analytics.financial.interestrate.bond.provider.BondSecurityDiscountingMethod: double modifiedDurationFromYieldStandard(com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity,double)>(r1, d0);

        return $d25;

     label5:
        $r9 = <com.opengamma.financial.convention.yield.SimpleYieldConvention: com.opengamma.financial.convention.yield.YieldConvention ITALY_TREASURY_BONDS>;

        $z5 = virtualinvoke r2.<java.lang.Object: boolean equals(java.lang.Object)>($r9);

        if $z5 == 0 goto label6;

        $d4 = 1.0 + d0;

        $d5 = staticinvoke <java.lang.Math: double sqrt(double)>($d4);

        $d6 = $d5 - 1.0;

        d1 = $d6 * 2.0;

        d2 = specialinvoke r0.<com.opengamma.analytics.financial.interestrate.bond.provider.BondSecurityDiscountingMethod: double modifiedDurationFromYieldStandard(com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity,double)>(r1, d1);

        $d7 = 1.0 + d0;

        $d8 = staticinvoke <java.lang.Math: double sqrt(double)>($d7);

        d3 = d2 / $d8;

        return d3;

     label6:
        $r10 = new java.lang.UnsupportedOperationException;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("The convention ");

        $r13 = interfaceinvoke r2.<com.opengamma.financial.convention.yield.YieldConvention: java.lang.String getName()>();

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is not supported for modified duration computation.");

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r10.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>($r16);

        throw $r10;
    }

    private double modifiedDurationFromYieldStandard(com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity, double)
    {
        com.opengamma.analytics.financial.interestrate.bond.provider.BondSecurityDiscountingMethod r0;
        com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity r1;
        double d0, d1, d2, d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21, $d22, $d23, $d24, $d25, $d26, $d27, $d28, $d29, $d30, $d31, $d32, $d33, $d34, $d35, $d36, $d37, $d38, d39, d40, d41, d42, d43;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, i8;
        com.opengamma.analytics.financial.interestrate.annuity.derivative.Annuity $r2, $r3, $r4, $r7, $r10;
        com.opengamma.analytics.financial.interestrate.payments.derivative.Payment $r5, $r8, $r11;
        com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed $r6;
        com.opengamma.analytics.financial.interestrate.payments.derivative.CouponFixed $r9, $r12;
        boolean $z0;

        r0 := @this: com.opengamma.analytics.financial.interestrate.bond.provider.BondSecurityDiscountingMethod;

        r1 := @parameter0: com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity;

        d0 := @parameter1: double;

        $r2 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity: com.opengamma.analytics.financial.interestrate.annuity.derivative.Annuity getNominal()>();

        $i1 = virtualinvoke $r2.<com.opengamma.analytics.financial.interestrate.annuity.derivative.Annuity: int getNumberOfPayments()>();

        if $i1 != 1 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z0, "Yield: more than one nominal repayment.");

        $r3 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity: com.opengamma.analytics.financial.interestrate.annuity.derivative.Annuity getCoupon()>();

        i0 = virtualinvoke $r3.<com.opengamma.analytics.financial.interestrate.annuity.derivative.Annuity: int getNumberOfPayments()>();

        $r4 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity: com.opengamma.analytics.financial.interestrate.annuity.derivative.Annuity getNominal()>();

        $r5 = virtualinvoke $r4.<com.opengamma.analytics.financial.interestrate.annuity.derivative.Annuity: com.opengamma.analytics.financial.interestrate.payments.derivative.Payment getNthPayment(int)>(0);

        $r6 = (com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed) $r5;

        d1 = virtualinvoke $r6.<com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed: double getAmount()>();

        $i2 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity: int getCouponPerYear()>();

        $d4 = (double) $i2;

        $d5 = d0 / $d4;

        d2 = 1.0 + $d5;

        d39 = 0.0;

        d40 = 0.0;

        i8 = 0;

     label3:
        if i8 >= i0 goto label4;

        $r7 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity: com.opengamma.analytics.financial.interestrate.annuity.derivative.Annuity getCoupon()>();

        $r8 = virtualinvoke $r7.<com.opengamma.analytics.financial.interestrate.annuity.derivative.Annuity: com.opengamma.analytics.financial.interestrate.payments.derivative.Payment getNthPayment(int)>(i8);

        $r9 = (com.opengamma.analytics.financial.interestrate.payments.derivative.CouponFixed) $r8;

        $d25 = virtualinvoke $r9.<com.opengamma.analytics.financial.interestrate.payments.derivative.CouponFixed: double getAmount()>();

        $i6 = i8 + 1;

        $d26 = (double) $i6;

        $d27 = staticinvoke <java.lang.Math: double pow(double,double)>(d2, $d26);

        $d28 = $d25 / $d27;

        $d29 = (double) i8;

        $d30 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity: double getFactorToNextCoupon()>();

        $d31 = $d29 + $d30;

        $d32 = $d28 * $d31;

        $i7 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity: int getCouponPerYear()>();

        $d33 = (double) $i7;

        $d34 = $d32 / $d33;

        d39 = d39 + $d34;

        $r10 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity: com.opengamma.analytics.financial.interestrate.annuity.derivative.Annuity getCoupon()>();

        $r11 = virtualinvoke $r10.<com.opengamma.analytics.financial.interestrate.annuity.derivative.Annuity: com.opengamma.analytics.financial.interestrate.payments.derivative.Payment getNthPayment(int)>(i8);

        $r12 = (com.opengamma.analytics.financial.interestrate.payments.derivative.CouponFixed) $r11;

        $d35 = virtualinvoke $r12.<com.opengamma.analytics.financial.interestrate.payments.derivative.CouponFixed: double getAmount()>();

        $d36 = (double) i8;

        $d37 = staticinvoke <java.lang.Math: double pow(double,double)>(d2, $d36);

        $d38 = $d35 / $d37;

        d40 = d40 + $d38;

        i8 = i8 + 1;

        goto label3;

     label4:
        $d6 = (double) i0;

        $d7 = staticinvoke <java.lang.Math: double pow(double,double)>(d2, $d6);

        $d8 = d1 / $d7;

        $i3 = i0 - 1;

        $d9 = (double) $i3;

        $d10 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity: double getFactorToNextCoupon()>();

        $d11 = $d9 + $d10;

        $d12 = $d8 * $d11;

        $i4 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity: int getCouponPerYear()>();

        $d13 = (double) $i4;

        $d14 = $d12 / $d13;

        d41 = d39 + $d14;

        $i5 = i0 - 1;

        $d15 = (double) $i5;

        $d16 = staticinvoke <java.lang.Math: double pow(double,double)>(d2, $d15);

        $d17 = d1 / $d16;

        d42 = d40 + $d17;

        $d18 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity: double getFactorToNextCoupon()>();

        $d19 = neg $d18;

        $d20 = staticinvoke <java.lang.Math: double pow(double,double)>(d2, $d19);

        d43 = d42 * $d20;

        $d21 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity: double getFactorToNextCoupon()>();

        $d22 = neg $d21;

        $d23 = staticinvoke <java.lang.Math: double pow(double,double)>(d2, $d22);

        $d24 = d41 * $d23;

        d3 = $d24 / d43;

        return d3;
    }

    public double modifiedDurationFromCurves(com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity, com.opengamma.analytics.financial.provider.description.interestrate.IssuerProviderInterface)
    {
        com.opengamma.analytics.financial.interestrate.bond.provider.BondSecurityDiscountingMethod r0;
        com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity r1;
        com.opengamma.analytics.financial.provider.description.interestrate.IssuerProviderInterface r2;
        double d0, $d1;

        r0 := @this: com.opengamma.analytics.financial.interestrate.bond.provider.BondSecurityDiscountingMethod;

        r1 := @parameter0: com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity;

        r2 := @parameter1: com.opengamma.analytics.financial.provider.description.interestrate.IssuerProviderInterface;

        d0 = virtualinvoke r0.<com.opengamma.analytics.financial.interestrate.bond.provider.BondSecurityDiscountingMethod: double yieldFromCurves(com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity,com.opengamma.analytics.financial.provider.description.interestrate.IssuerProviderInterface)>(r1, r2);

        $d1 = virtualinvoke r0.<com.opengamma.analytics.financial.interestrate.bond.provider.BondSecurityDiscountingMethod: double modifiedDurationFromYield(com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity,double)>(r1, d0);

        return $d1;
    }

    public double modifiedDurationFromDirtyPrice(com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity, double)
    {
        com.opengamma.analytics.financial.interestrate.bond.provider.BondSecurityDiscountingMethod r0;
        com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity r1;
        double d0, d1, $d2;

        r0 := @this: com.opengamma.analytics.financial.interestrate.bond.provider.BondSecurityDiscountingMethod;

        r1 := @parameter0: com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity;

        d0 := @parameter1: double;

        d1 = virtualinvoke r0.<com.opengamma.analytics.financial.interestrate.bond.provider.BondSecurityDiscountingMethod: double yieldFromDirtyPrice(com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity,double)>(r1, d0);

        $d2 = virtualinvoke r0.<com.opengamma.analytics.financial.interestrate.bond.provider.BondSecurityDiscountingMethod: double modifiedDurationFromYield(com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity,double)>(r1, d1);

        return $d2;
    }

    public double modifiedDurationFromCleanPrice(com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity, double)
    {
        com.opengamma.analytics.financial.interestrate.bond.provider.BondSecurityDiscountingMethod r0;
        com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity r1;
        double d0, d1, $d2;

        r0 := @this: com.opengamma.analytics.financial.interestrate.bond.provider.BondSecurityDiscountingMethod;

        r1 := @parameter0: com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity;

        d0 := @parameter1: double;

        d1 = virtualinvoke r0.<com.opengamma.analytics.financial.interestrate.bond.provider.BondSecurityDiscountingMethod: double yieldFromCleanPrice(com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity,double)>(r1, d0);

        $d2 = virtualinvoke r0.<com.opengamma.analytics.financial.interestrate.bond.provider.BondSecurityDiscountingMethod: double modifiedDurationFromYield(com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity,double)>(r1, d1);

        return $d2;
    }

    public double macaulayDurationFromYield(com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity, double)
    {
        com.opengamma.analytics.financial.interestrate.bond.provider.BondSecurityDiscountingMethod r0;
        com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity r1;
        double d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8;
        int i0, $i1, $i2;
        com.opengamma.analytics.financial.interestrate.annuity.derivative.Annuity $r2;
        com.opengamma.financial.convention.yield.YieldConvention $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r20, $r25, $r26, $r27, $r28;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8;
        java.lang.UnsupportedOperationException $r17;
        java.lang.StringBuilder $r18, $r19, $r22, $r23;
        java.lang.String $r21, $r24;

        r0 := @this: com.opengamma.analytics.financial.interestrate.bond.provider.BondSecurityDiscountingMethod;

        r1 := @parameter0: com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity;

        d0 := @parameter1: double;

        $r2 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity: com.opengamma.analytics.financial.interestrate.annuity.derivative.Annuity getCoupon()>();

        i0 = virtualinvoke $r2.<com.opengamma.analytics.financial.interestrate.annuity.derivative.Annuity: int getNumberOfPayments()>();

        $r3 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity: com.opengamma.financial.convention.yield.YieldConvention getYieldConvention()>();

        $r4 = <com.opengamma.financial.convention.yield.SimpleYieldConvention: com.opengamma.financial.convention.yield.YieldConvention US_STREET>;

        $z0 = virtualinvoke $r3.<java.lang.Object: boolean equals(java.lang.Object)>($r4);

        if $z0 != 0 goto label1;

        $r25 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity: com.opengamma.financial.convention.yield.YieldConvention getYieldConvention()>();

        $r26 = <com.opengamma.financial.convention.yield.SimpleYieldConvention: com.opengamma.financial.convention.yield.YieldConvention FRANCE_COMPOUND_METHOD>;

        $z7 = virtualinvoke $r25.<java.lang.Object: boolean equals(java.lang.Object)>($r26);

        if $z7 != 0 goto label1;

        $r27 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity: com.opengamma.financial.convention.yield.YieldConvention getYieldConvention()>();

        $r28 = <com.opengamma.financial.convention.yield.SimpleYieldConvention: com.opengamma.financial.convention.yield.YieldConvention ITALY_TREASURY_BONDS>;

        $z8 = virtualinvoke $r27.<java.lang.Object: boolean equals(java.lang.Object)>($r28);

        if $z8 == 0 goto label2;

     label1:
        if i0 != 1 goto label2;

        $d1 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity: double getFactorToNextCoupon()>();

        $i1 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity: int getCouponPerYear()>();

        $d2 = (double) $i1;

        $d3 = $d1 / $d2;

        return $d3;

     label2:
        $r5 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity: com.opengamma.financial.convention.yield.YieldConvention getYieldConvention()>();

        $r6 = <com.opengamma.financial.convention.yield.SimpleYieldConvention: com.opengamma.financial.convention.yield.YieldConvention US_STREET>;

        $z1 = virtualinvoke $r5.<java.lang.Object: boolean equals(java.lang.Object)>($r6);

        if $z1 != 0 goto label3;

        $r7 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity: com.opengamma.financial.convention.yield.YieldConvention getYieldConvention()>();

        $r8 = <com.opengamma.financial.convention.yield.SimpleYieldConvention: com.opengamma.financial.convention.yield.YieldConvention UK_BUMP_DMO_METHOD>;

        $z2 = virtualinvoke $r7.<java.lang.Object: boolean equals(java.lang.Object)>($r8);

        if $z2 != 0 goto label3;

        $r9 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity: com.opengamma.financial.convention.yield.YieldConvention getYieldConvention()>();

        $r10 = <com.opengamma.financial.convention.yield.SimpleYieldConvention: com.opengamma.financial.convention.yield.YieldConvention GERMAN_BOND>;

        $z3 = virtualinvoke $r9.<java.lang.Object: boolean equals(java.lang.Object)>($r10);

        if $z3 != 0 goto label3;

        $r11 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity: com.opengamma.financial.convention.yield.YieldConvention getYieldConvention()>();

        $r12 = <com.opengamma.financial.convention.yield.SimpleYieldConvention: com.opengamma.financial.convention.yield.YieldConvention FRANCE_COMPOUND_METHOD>;

        $z4 = virtualinvoke $r11.<java.lang.Object: boolean equals(java.lang.Object)>($r12);

        if $z4 != 0 goto label3;

        $r13 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity: com.opengamma.financial.convention.yield.YieldConvention getYieldConvention()>();

        $r14 = <com.opengamma.financial.convention.yield.SimpleYieldConvention: com.opengamma.financial.convention.yield.YieldConvention ITALY_TREASURY_BONDS>;

        $z5 = virtualinvoke $r13.<java.lang.Object: boolean equals(java.lang.Object)>($r14);

        if $z5 != 0 goto label3;

        $r15 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity: com.opengamma.financial.convention.yield.YieldConvention getYieldConvention()>();

        $r16 = <com.opengamma.financial.convention.yield.SimpleYieldConvention: com.opengamma.financial.convention.yield.YieldConvention MEXICAN_BONOS>;

        $z6 = virtualinvoke $r15.<java.lang.Object: boolean equals(java.lang.Object)>($r16);

        if $z6 == 0 goto label4;

     label3:
        $d4 = virtualinvoke r0.<com.opengamma.analytics.financial.interestrate.bond.provider.BondSecurityDiscountingMethod: double modifiedDurationFromYield(com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity,double)>(r1, d0);

        $i2 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity: int getCouponPerYear()>();

        $d5 = (double) $i2;

        $d6 = d0 / $d5;

        $d7 = 1.0 + $d6;

        $d8 = $d4 * $d7;

        return $d8;

     label4:
        $r17 = new java.lang.UnsupportedOperationException;

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("The convention ");

        $r20 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity: com.opengamma.financial.convention.yield.YieldConvention getYieldConvention()>();

        $r21 = interfaceinvoke $r20.<com.opengamma.financial.convention.yield.YieldConvention: java.lang.String getName()>();

        $r22 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r21);

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is not supported for Macaulay duration.");

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r17.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>($r24);

        throw $r17;
    }

    public double macaulayDurationFromCurves(com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity, com.opengamma.analytics.financial.provider.description.interestrate.IssuerProviderInterface)
    {
        com.opengamma.analytics.financial.interestrate.bond.provider.BondSecurityDiscountingMethod r0;
        com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity r1;
        com.opengamma.analytics.financial.provider.description.interestrate.IssuerProviderInterface r2;
        double d0, $d1;

        r0 := @this: com.opengamma.analytics.financial.interestrate.bond.provider.BondSecurityDiscountingMethod;

        r1 := @parameter0: com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity;

        r2 := @parameter1: com.opengamma.analytics.financial.provider.description.interestrate.IssuerProviderInterface;

        d0 = virtualinvoke r0.<com.opengamma.analytics.financial.interestrate.bond.provider.BondSecurityDiscountingMethod: double yieldFromCurves(com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity,com.opengamma.analytics.financial.provider.description.interestrate.IssuerProviderInterface)>(r1, r2);

        $d1 = virtualinvoke r0.<com.opengamma.analytics.financial.interestrate.bond.provider.BondSecurityDiscountingMethod: double macaulayDurationFromYield(com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity,double)>(r1, d0);

        return $d1;
    }

    public double macaulayDurationFromCleanPrice(com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity, double)
    {
        com.opengamma.analytics.financial.interestrate.bond.provider.BondSecurityDiscountingMethod r0;
        com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity r1;
        double d0, d1, $d2;

        r0 := @this: com.opengamma.analytics.financial.interestrate.bond.provider.BondSecurityDiscountingMethod;

        r1 := @parameter0: com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity;

        d0 := @parameter1: double;

        d1 = virtualinvoke r0.<com.opengamma.analytics.financial.interestrate.bond.provider.BondSecurityDiscountingMethod: double yieldFromCleanPrice(com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity,double)>(r1, d0);

        $d2 = virtualinvoke r0.<com.opengamma.analytics.financial.interestrate.bond.provider.BondSecurityDiscountingMethod: double macaulayDurationFromYield(com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity,double)>(r1, d1);

        return $d2;
    }

    public double macaulayDurationFromDirtyPrice(com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity, double)
    {
        com.opengamma.analytics.financial.interestrate.bond.provider.BondSecurityDiscountingMethod r0;
        com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity r1;
        double d0, d1, $d2;

        r0 := @this: com.opengamma.analytics.financial.interestrate.bond.provider.BondSecurityDiscountingMethod;

        r1 := @parameter0: com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity;

        d0 := @parameter1: double;

        d1 = virtualinvoke r0.<com.opengamma.analytics.financial.interestrate.bond.provider.BondSecurityDiscountingMethod: double yieldFromDirtyPrice(com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity,double)>(r1, d0);

        $d2 = virtualinvoke r0.<com.opengamma.analytics.financial.interestrate.bond.provider.BondSecurityDiscountingMethod: double macaulayDurationFromYield(com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity,double)>(r1, d1);

        return $d2;
    }

    public double convexityFromYield(com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity, double)
    {
        com.opengamma.analytics.financial.interestrate.bond.provider.BondSecurityDiscountingMethod r0;
        com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity r1;
        double d0, d1, d2, d3, d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, d14, $d15, $d16, $d17, $d18, d19, $d20, $d21, $d22, $d23, $d24, d25, d26;
        int i0, $i1, $i2;
        com.opengamma.financial.convention.yield.YieldConvention r2, $r4, $r5, $r6, $r7, $r8, $r9, $r17, $r18, $r19, $r20, $r21, $r22, $r26;
        com.opengamma.analytics.financial.interestrate.annuity.derivative.Annuity $r3;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11;
        java.lang.UnsupportedOperationException $r10, $r23;
        java.lang.StringBuilder $r11, $r12, $r14, $r15, $r24, $r25, $r28, $r29;
        java.lang.String $r13, $r16, $r27, $r30;

        r0 := @this: com.opengamma.analytics.financial.interestrate.bond.provider.BondSecurityDiscountingMethod;

        r1 := @parameter0: com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity;

        d0 := @parameter1: double;

        $r3 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity: com.opengamma.analytics.financial.interestrate.annuity.derivative.Annuity getCoupon()>();

        i0 = virtualinvoke $r3.<com.opengamma.analytics.financial.interestrate.annuity.derivative.Annuity: int getNumberOfPayments()>();

        r2 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity: com.opengamma.financial.convention.yield.YieldConvention getYieldConvention()>();

        if i0 != 1 goto label3;

        $r17 = <com.opengamma.financial.convention.yield.SimpleYieldConvention: com.opengamma.financial.convention.yield.YieldConvention US_STREET>;

        $z6 = virtualinvoke r2.<java.lang.Object: boolean equals(java.lang.Object)>($r17);

        if $z6 != 0 goto label1;

        $r18 = <com.opengamma.financial.convention.yield.SimpleYieldConvention: com.opengamma.financial.convention.yield.YieldConvention GERMAN_BOND>;

        $z7 = virtualinvoke r2.<java.lang.Object: boolean equals(java.lang.Object)>($r18);

        if $z7 != 0 goto label1;

        $r19 = <com.opengamma.financial.convention.yield.SimpleYieldConvention: com.opengamma.financial.convention.yield.YieldConvention ITALY_TREASURY_BONDS>;

        $z8 = virtualinvoke r2.<java.lang.Object: boolean equals(java.lang.Object)>($r19);

        if $z8 != 0 goto label1;

        $r20 = <com.opengamma.financial.convention.yield.SimpleYieldConvention: com.opengamma.financial.convention.yield.YieldConvention AUSTRALIA_EX_DIVIDEND>;

        $z9 = virtualinvoke r2.<java.lang.Object: boolean equals(java.lang.Object)>($r20);

        if $z9 != 0 goto label1;

        $r21 = <com.opengamma.financial.convention.yield.SimpleYieldConvention: com.opengamma.financial.convention.yield.YieldConvention MEXICAN_BONOS>;

        $z10 = virtualinvoke r2.<java.lang.Object: boolean equals(java.lang.Object)>($r21);

        if $z10 == 0 goto label2;

     label1:
        $d12 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity: double getFactorToNextCoupon()>();

        $i1 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity: int getCouponPerYear()>();

        $d13 = (double) $i1;

        d14 = $d12 / $d13;

        $d15 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity: double getFactorToNextCoupon()>();

        $d16 = $d15 * d0;

        $i2 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity: int getCouponPerYear()>();

        $d17 = (double) $i2;

        $d18 = $d16 / $d17;

        d19 = 1.0 + $d18;

        $d20 = 2.0 * d14;

        $d21 = $d20 * d14;

        $d22 = d19 * d19;

        $d23 = $d21 / $d22;

        return $d23;

     label2:
        $r22 = <com.opengamma.financial.convention.yield.SimpleYieldConvention: com.opengamma.financial.convention.yield.YieldConvention FRANCE_COMPOUND_METHOD>;

        $z11 = virtualinvoke r2.<java.lang.Object: boolean equals(java.lang.Object)>($r22);

        if $z11 == 0 goto label3;

        $r23 = new java.lang.UnsupportedOperationException;

        $r24 = new java.lang.StringBuilder;

        specialinvoke $r24.<java.lang.StringBuilder: void <init>()>();

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("The convention ");

        $r26 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity: com.opengamma.financial.convention.yield.YieldConvention getYieldConvention()>();

        $r27 = interfaceinvoke $r26.<com.opengamma.financial.convention.yield.YieldConvention: java.lang.String getName()>();

        $r28 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r27);

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("with only one coupon is not supported.");

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r23.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>($r30);

        throw $r23;

     label3:
        $r4 = <com.opengamma.financial.convention.yield.SimpleYieldConvention: com.opengamma.financial.convention.yield.YieldConvention US_STREET>;

        $z0 = virtualinvoke r2.<java.lang.Object: boolean equals(java.lang.Object)>($r4);

        if $z0 != 0 goto label4;

        $r5 = <com.opengamma.financial.convention.yield.SimpleYieldConvention: com.opengamma.financial.convention.yield.YieldConvention UK_BUMP_DMO_METHOD>;

        $z1 = virtualinvoke r2.<java.lang.Object: boolean equals(java.lang.Object)>($r5);

        if $z1 != 0 goto label4;

        $r6 = <com.opengamma.financial.convention.yield.SimpleYieldConvention: com.opengamma.financial.convention.yield.YieldConvention GERMAN_BOND>;

        $z2 = virtualinvoke r2.<java.lang.Object: boolean equals(java.lang.Object)>($r6);

        if $z2 != 0 goto label4;

        $r7 = <com.opengamma.financial.convention.yield.SimpleYieldConvention: com.opengamma.financial.convention.yield.YieldConvention FRANCE_COMPOUND_METHOD>;

        $z3 = virtualinvoke r2.<java.lang.Object: boolean equals(java.lang.Object)>($r7);

        if $z3 != 0 goto label4;

        $r8 = <com.opengamma.financial.convention.yield.SimpleYieldConvention: com.opengamma.financial.convention.yield.YieldConvention AUSTRALIA_EX_DIVIDEND>;

        $z4 = virtualinvoke r2.<java.lang.Object: boolean equals(java.lang.Object)>($r8);

        if $z4 == 0 goto label5;

     label4:
        $d24 = specialinvoke r0.<com.opengamma.analytics.financial.interestrate.bond.provider.BondSecurityDiscountingMethod: double convexityFromYieldStandard(com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity,double)>(r1, d0);

        return $d24;

     label5:
        $r9 = <com.opengamma.financial.convention.yield.SimpleYieldConvention: com.opengamma.financial.convention.yield.YieldConvention ITALY_TREASURY_BONDS>;

        $z5 = virtualinvoke r2.<java.lang.Object: boolean equals(java.lang.Object)>($r9);

        if $z5 == 0 goto label6;

        $d5 = 1.0 + d0;

        $d6 = staticinvoke <java.lang.Math: double sqrt(double)>($d5);

        $d7 = $d6 - 1.0;

        d25 = $d7 * 2.0;

        d26 = specialinvoke r0.<com.opengamma.analytics.financial.interestrate.bond.provider.BondSecurityDiscountingMethod: double modifiedDurationFromYieldStandard(com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity,double)>(r1, d25);

        d1 = specialinvoke r0.<com.opengamma.analytics.financial.interestrate.bond.provider.BondSecurityDiscountingMethod: double convexityFromYieldStandard(com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity,double)>(r1, d25);

        $d8 = 1.0 + d0;

        d2 = 1.0 / $d8;

        $d9 = staticinvoke <java.lang.Math: double pow(double,double)>(d2, 1.5);

        d3 = -0.5 * $d9;

        $d11 = d1 * d2;

        $d10 = d26 * d3;

        d4 = $d11 - $d10;

        return d4;

     label6:
        $r10 = new java.lang.UnsupportedOperationException;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("The convention ");

        $r13 = interfaceinvoke r2.<com.opengamma.financial.convention.yield.YieldConvention: java.lang.String getName()>();

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is not supported for convexity computation.");

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r10.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>($r16);

        throw $r10;
    }

    private double convexityFromYieldStandard(com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity, double)
    {
        com.opengamma.analytics.financial.interestrate.bond.provider.BondSecurityDiscountingMethod r0;
        com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity r1;
        double d0, d1, d2, d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21, $d22, $d23, $d24, $d25, $d26, $d27, $d28, $d29, $d30, $d31, $d32, $d33, $d34, $d35, $d36, $d37, $d38, $d39, $d40, $d41, $d42, $d43, $d44, $d45, $d46, $d47, d48, d49, d50, d51, d52;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, i15;
        com.opengamma.analytics.financial.interestrate.annuity.derivative.Annuity $r2, $r3, $r4, $r5, $r8, $r11;
        com.opengamma.analytics.financial.interestrate.payments.derivative.Payment $r6, $r9, $r12;
        com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed $r7;
        com.opengamma.analytics.financial.interestrate.payments.derivative.CouponFixed $r10, $r13;
        boolean $z0;

        r0 := @this: com.opengamma.analytics.financial.interestrate.bond.provider.BondSecurityDiscountingMethod;

        r1 := @parameter0: com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity;

        d0 := @parameter1: double;

        $r2 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity: com.opengamma.analytics.financial.interestrate.annuity.derivative.Annuity getNominal()>();

        $i1 = virtualinvoke $r2.<com.opengamma.analytics.financial.interestrate.annuity.derivative.Annuity: int getNumberOfPayments()>();

        if $i1 != 1 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z0, "Yield: more than one nominal repayment.");

        $r3 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity: com.opengamma.analytics.financial.interestrate.annuity.derivative.Annuity getCoupon()>();

        i0 = virtualinvoke $r3.<com.opengamma.analytics.financial.interestrate.annuity.derivative.Annuity: int getNumberOfPayments()>();

        $r4 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity: com.opengamma.analytics.financial.interestrate.annuity.derivative.Annuity getNominal()>();

        $r5 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity: com.opengamma.analytics.financial.interestrate.annuity.derivative.Annuity getNominal()>();

        $i2 = virtualinvoke $r5.<com.opengamma.analytics.financial.interestrate.annuity.derivative.Annuity: int getNumberOfPayments()>();

        $i3 = $i2 - 1;

        $r6 = virtualinvoke $r4.<com.opengamma.analytics.financial.interestrate.annuity.derivative.Annuity: com.opengamma.analytics.financial.interestrate.payments.derivative.Payment getNthPayment(int)>($i3);

        $r7 = (com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed) $r6;

        d1 = virtualinvoke $r7.<com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed: double getAmount()>();

        $i4 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity: int getCouponPerYear()>();

        $d4 = (double) $i4;

        $d5 = d0 / $d4;

        d2 = 1.0 + $d5;

        d48 = 0.0;

        d49 = 0.0;

        i15 = 0;

     label3:
        if i15 >= i0 goto label4;

        $r8 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity: com.opengamma.analytics.financial.interestrate.annuity.derivative.Annuity getCoupon()>();

        $r9 = virtualinvoke $r8.<com.opengamma.analytics.financial.interestrate.annuity.derivative.Annuity: com.opengamma.analytics.financial.interestrate.payments.derivative.Payment getNthPayment(int)>(i15);

        $r10 = (com.opengamma.analytics.financial.interestrate.payments.derivative.CouponFixed) $r9;

        $d29 = virtualinvoke $r10.<com.opengamma.analytics.financial.interestrate.payments.derivative.CouponFixed: double getAmount()>();

        $i11 = i15 + 2;

        $d30 = (double) $i11;

        $d31 = staticinvoke <java.lang.Math: double pow(double,double)>(d2, $d30);

        $d32 = $d29 / $d31;

        $d33 = (double) i15;

        $d34 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity: double getFactorToNextCoupon()>();

        $d35 = $d33 + $d34;

        $d36 = $d32 * $d35;

        $d37 = (double) i15;

        $d38 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity: double getFactorToNextCoupon()>();

        $d39 = $d37 + $d38;

        $d40 = $d39 + 1.0;

        $d41 = $d36 * $d40;

        $i12 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity: int getCouponPerYear()>();

        $i13 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity: int getCouponPerYear()>();

        $i14 = $i12 * $i13;

        $d42 = (double) $i14;

        $d43 = $d41 / $d42;

        d48 = d48 + $d43;

        $r11 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity: com.opengamma.analytics.financial.interestrate.annuity.derivative.Annuity getCoupon()>();

        $r12 = virtualinvoke $r11.<com.opengamma.analytics.financial.interestrate.annuity.derivative.Annuity: com.opengamma.analytics.financial.interestrate.payments.derivative.Payment getNthPayment(int)>(i15);

        $r13 = (com.opengamma.analytics.financial.interestrate.payments.derivative.CouponFixed) $r12;

        $d44 = virtualinvoke $r13.<com.opengamma.analytics.financial.interestrate.payments.derivative.CouponFixed: double getAmount()>();

        $d45 = (double) i15;

        $d46 = staticinvoke <java.lang.Math: double pow(double,double)>(d2, $d45);

        $d47 = $d44 / $d46;

        d49 = d49 + $d47;

        i15 = i15 + 1;

        goto label3;

     label4:
        $i5 = i0 + 1;

        $d6 = (double) $i5;

        $d7 = staticinvoke <java.lang.Math: double pow(double,double)>(d2, $d6);

        $d8 = d1 / $d7;

        $i6 = i0 - 1;

        $d9 = (double) $i6;

        $d10 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity: double getFactorToNextCoupon()>();

        $d11 = $d9 + $d10;

        $d12 = $d8 * $d11;

        $d13 = (double) i0;

        $d14 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity: double getFactorToNextCoupon()>();

        $d15 = $d13 + $d14;

        $d16 = $d12 * $d15;

        $i7 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity: int getCouponPerYear()>();

        $i8 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity: int getCouponPerYear()>();

        $i9 = $i7 * $i8;

        $d17 = (double) $i9;

        $d18 = $d16 / $d17;

        d50 = d48 + $d18;

        $i10 = i0 - 1;

        $d19 = (double) $i10;

        $d20 = staticinvoke <java.lang.Math: double pow(double,double)>(d2, $d19);

        $d21 = d1 / $d20;

        d51 = d49 + $d21;

        $d22 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity: double getFactorToNextCoupon()>();

        $d23 = neg $d22;

        $d24 = staticinvoke <java.lang.Math: double pow(double,double)>(d2, $d23);

        d52 = d51 * $d24;

        $d25 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity: double getFactorToNextCoupon()>();

        $d26 = neg $d25;

        $d27 = staticinvoke <java.lang.Math: double pow(double,double)>(d2, $d26);

        $d28 = d50 * $d27;

        d3 = $d28 / d52;

        return d3;
    }

    public double convexityFromCurves(com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity, com.opengamma.analytics.financial.provider.description.interestrate.IssuerProviderInterface)
    {
        com.opengamma.analytics.financial.interestrate.bond.provider.BondSecurityDiscountingMethod r0;
        com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity r1;
        com.opengamma.analytics.financial.provider.description.interestrate.IssuerProviderInterface r2;
        double d0, $d1;

        r0 := @this: com.opengamma.analytics.financial.interestrate.bond.provider.BondSecurityDiscountingMethod;

        r1 := @parameter0: com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity;

        r2 := @parameter1: com.opengamma.analytics.financial.provider.description.interestrate.IssuerProviderInterface;

        d0 = virtualinvoke r0.<com.opengamma.analytics.financial.interestrate.bond.provider.BondSecurityDiscountingMethod: double yieldFromCurves(com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity,com.opengamma.analytics.financial.provider.description.interestrate.IssuerProviderInterface)>(r1, r2);

        $d1 = virtualinvoke r0.<com.opengamma.analytics.financial.interestrate.bond.provider.BondSecurityDiscountingMethod: double convexityFromYield(com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity,double)>(r1, d0);

        return $d1;
    }

    public double convexityFromDirtyPrice(com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity, double)
    {
        com.opengamma.analytics.financial.interestrate.bond.provider.BondSecurityDiscountingMethod r0;
        com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity r1;
        double d0, d1, $d2;

        r0 := @this: com.opengamma.analytics.financial.interestrate.bond.provider.BondSecurityDiscountingMethod;

        r1 := @parameter0: com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity;

        d0 := @parameter1: double;

        d1 = virtualinvoke r0.<com.opengamma.analytics.financial.interestrate.bond.provider.BondSecurityDiscountingMethod: double yieldFromDirtyPrice(com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity,double)>(r1, d0);

        $d2 = virtualinvoke r0.<com.opengamma.analytics.financial.interestrate.bond.provider.BondSecurityDiscountingMethod: double convexityFromYield(com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity,double)>(r1, d1);

        return $d2;
    }

    public double convexityFromCleanPrice(com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity, double)
    {
        com.opengamma.analytics.financial.interestrate.bond.provider.BondSecurityDiscountingMethod r0;
        com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity r1;
        double d0, d1, $d2;

        r0 := @this: com.opengamma.analytics.financial.interestrate.bond.provider.BondSecurityDiscountingMethod;

        r1 := @parameter0: com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity;

        d0 := @parameter1: double;

        d1 = virtualinvoke r0.<com.opengamma.analytics.financial.interestrate.bond.provider.BondSecurityDiscountingMethod: double yieldFromCleanPrice(com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity,double)>(r1, d0);

        $d2 = virtualinvoke r0.<com.opengamma.analytics.financial.interestrate.bond.provider.BondSecurityDiscountingMethod: double convexityFromYield(com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity,double)>(r1, d1);

        return $d2;
    }

    public double zSpreadFromCurvesAndPV(com.opengamma.analytics.financial.interestrate.bond.definition.BondSecurity, com.opengamma.analytics.financial.provider.description.interestrate.IssuerProviderInterface, com.opengamma.util.money.MultipleCurrencyAmount)
    {
        com.opengamma.analytics.financial.interestrate.bond.provider.BondSecurityDiscountingMethod r0;
        com.opengamma.analytics.financial.interestrate.bond.definition.BondSecurity r1;
        com.opengamma.analytics.financial.provider.description.interestrate.IssuerProviderInterface r2;
        com.opengamma.util.money.MultipleCurrencyAmount r3;
        com.opengamma.util.money.Currency r4;
        double[] r6;
        com.opengamma.analytics.financial.interestrate.bond.provider.BondSecurityDiscountingMethod$2 $r9;
        com.opengamma.analytics.math.rootfinding.BracketRoot $r10;
        double $d0, $d1, $d2;
        com.opengamma.analytics.math.rootfinding.RealSingleRootFinder $r11;
        java.lang.Double $r12, $r13, $r14;

        r0 := @this: com.opengamma.analytics.financial.interestrate.bond.provider.BondSecurityDiscountingMethod;

        r1 := @parameter0: com.opengamma.analytics.financial.interestrate.bond.definition.BondSecurity;

        r2 := @parameter1: com.opengamma.analytics.financial.provider.description.interestrate.IssuerProviderInterface;

        r3 := @parameter2: com.opengamma.util.money.MultipleCurrencyAmount;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "Bond");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, "Issuer and multi-curves provider");

        r4 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.bond.definition.BondSecurity: com.opengamma.util.money.Currency getCurrency()>();

        $r9 = new com.opengamma.analytics.financial.interestrate.bond.provider.BondSecurityDiscountingMethod$2;

        specialinvoke $r9.<com.opengamma.analytics.financial.interestrate.bond.provider.BondSecurityDiscountingMethod$2: void <init>(com.opengamma.analytics.financial.interestrate.bond.provider.BondSecurityDiscountingMethod,com.opengamma.analytics.financial.interestrate.bond.definition.BondSecurity,com.opengamma.analytics.financial.provider.description.interestrate.IssuerProviderInterface,com.opengamma.util.money.Currency,com.opengamma.util.money.MultipleCurrencyAmount)>(r0, r1, r2, r4, r3);

        $r10 = <com.opengamma.analytics.financial.interestrate.bond.provider.BondSecurityDiscountingMethod: com.opengamma.analytics.math.rootfinding.BracketRoot ROOT_BRACKETER>;

        r6 = virtualinvoke $r10.<com.opengamma.analytics.math.rootfinding.BracketRoot: double[] getBracketedPoints(com.opengamma.analytics.math.function.Function1D,double,double)>($r9, -0.01, 0.01);

        $r11 = <com.opengamma.analytics.financial.interestrate.bond.provider.BondSecurityDiscountingMethod: com.opengamma.analytics.math.rootfinding.RealSingleRootFinder ROOT_FINDER>;

        $d0 = r6[0];

        $r12 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        $d1 = r6[1];

        $r13 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d1);

        $r14 = virtualinvoke $r11.<com.opengamma.analytics.math.rootfinding.RealSingleRootFinder: java.lang.Double getRoot(com.opengamma.analytics.math.function.Function1D,java.lang.Double,java.lang.Double)>($r9, $r12, $r13);

        $d2 = virtualinvoke $r14.<java.lang.Double: double doubleValue()>();

        return $d2;
    }

    public double zSpreadFromCurvesAndPV(com.opengamma.analytics.financial.interestrate.bond.definition.BondSecurity, com.opengamma.analytics.financial.provider.description.interestrate.IssuerProviderInterface, com.opengamma.util.money.MultipleCurrencyAmount, boolean, int)
    {
        com.opengamma.analytics.financial.interestrate.bond.provider.BondSecurityDiscountingMethod r0;
        com.opengamma.analytics.financial.interestrate.bond.definition.BondSecurity r1;
        com.opengamma.analytics.financial.provider.description.interestrate.IssuerProviderInterface r2;
        com.opengamma.util.money.MultipleCurrencyAmount r3;
        boolean z0;
        int i0;
        com.opengamma.util.money.Currency r4;
        double[] r6;
        com.opengamma.analytics.financial.interestrate.bond.provider.BondSecurityDiscountingMethod$3 $r9;
        com.opengamma.analytics.math.rootfinding.BracketRoot $r10;
        double $d0, $d1, $d2;
        com.opengamma.analytics.math.rootfinding.RealSingleRootFinder $r11;
        java.lang.Double $r12, $r13, $r14;

        r0 := @this: com.opengamma.analytics.financial.interestrate.bond.provider.BondSecurityDiscountingMethod;

        r1 := @parameter0: com.opengamma.analytics.financial.interestrate.bond.definition.BondSecurity;

        r2 := @parameter1: com.opengamma.analytics.financial.provider.description.interestrate.IssuerProviderInterface;

        r3 := @parameter2: com.opengamma.util.money.MultipleCurrencyAmount;

        z0 := @parameter3: boolean;

        i0 := @parameter4: int;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "Bond");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, "Issuer and multi-curves provider");

        r4 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.bond.definition.BondSecurity: com.opengamma.util.money.Currency getCurrency()>();

        $r9 = new com.opengamma.analytics.financial.interestrate.bond.provider.BondSecurityDiscountingMethod$3;

        specialinvoke $r9.<com.opengamma.analytics.financial.interestrate.bond.provider.BondSecurityDiscountingMethod$3: void <init>(com.opengamma.analytics.financial.interestrate.bond.provider.BondSecurityDiscountingMethod,com.opengamma.analytics.financial.interestrate.bond.definition.BondSecurity,com.opengamma.analytics.financial.provider.description.interestrate.IssuerProviderInterface,boolean,int,com.opengamma.util.money.Currency,com.opengamma.util.money.MultipleCurrencyAmount)>(r0, r1, r2, z0, i0, r4, r3);

        $r10 = <com.opengamma.analytics.financial.interestrate.bond.provider.BondSecurityDiscountingMethod: com.opengamma.analytics.math.rootfinding.BracketRoot ROOT_BRACKETER>;

        r6 = virtualinvoke $r10.<com.opengamma.analytics.math.rootfinding.BracketRoot: double[] getBracketedPoints(com.opengamma.analytics.math.function.Function1D,double,double)>($r9, -0.01, 0.01);

        $r11 = <com.opengamma.analytics.financial.interestrate.bond.provider.BondSecurityDiscountingMethod: com.opengamma.analytics.math.rootfinding.RealSingleRootFinder ROOT_FINDER>;

        $d0 = r6[0];

        $r12 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        $d1 = r6[1];

        $r13 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d1);

        $r14 = virtualinvoke $r11.<com.opengamma.analytics.math.rootfinding.RealSingleRootFinder: java.lang.Double getRoot(com.opengamma.analytics.math.function.Function1D,java.lang.Double,java.lang.Double)>($r9, $r12, $r13);

        $d2 = virtualinvoke $r14.<java.lang.Double: double doubleValue()>();

        return $d2;
    }

    public double presentValueZSpreadSensitivityFromCurvesAndPV(com.opengamma.analytics.financial.interestrate.bond.definition.BondSecurity, com.opengamma.analytics.financial.provider.description.interestrate.IssuerProviderInterface, com.opengamma.util.money.MultipleCurrencyAmount)
    {
        com.opengamma.analytics.financial.interestrate.bond.provider.BondSecurityDiscountingMethod r0;
        com.opengamma.analytics.financial.interestrate.bond.definition.BondSecurity r1;
        com.opengamma.analytics.financial.provider.description.interestrate.IssuerProviderInterface r2;
        com.opengamma.util.money.MultipleCurrencyAmount r3;
        double d0, $d1;

        r0 := @this: com.opengamma.analytics.financial.interestrate.bond.provider.BondSecurityDiscountingMethod;

        r1 := @parameter0: com.opengamma.analytics.financial.interestrate.bond.definition.BondSecurity;

        r2 := @parameter1: com.opengamma.analytics.financial.provider.description.interestrate.IssuerProviderInterface;

        r3 := @parameter2: com.opengamma.util.money.MultipleCurrencyAmount;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "Bond");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, "Issuer and multi-curves provider");

        d0 = virtualinvoke r0.<com.opengamma.analytics.financial.interestrate.bond.provider.BondSecurityDiscountingMethod: double zSpreadFromCurvesAndPV(com.opengamma.analytics.financial.interestrate.bond.definition.BondSecurity,com.opengamma.analytics.financial.provider.description.interestrate.IssuerProviderInterface,com.opengamma.util.money.MultipleCurrencyAmount)>(r1, r2, r3);

        $d1 = virtualinvoke r0.<com.opengamma.analytics.financial.interestrate.bond.provider.BondSecurityDiscountingMethod: double presentValueZSpreadSensitivity(com.opengamma.analytics.financial.interestrate.bond.definition.BondSecurity,com.opengamma.analytics.financial.provider.description.interestrate.IssuerProviderInterface,double)>(r1, r2, d0);

        return $d1;
    }

    public double zSpreadFromCurvesAndClean(com.opengamma.analytics.financial.interestrate.bond.definition.BondSecurity, com.opengamma.analytics.financial.provider.description.interestrate.IssuerProviderInterface, double)
    {
        com.opengamma.analytics.financial.interestrate.bond.provider.BondSecurityDiscountingMethod r0;
        com.opengamma.analytics.financial.interestrate.bond.definition.BondSecurity r1;
        com.opengamma.analytics.financial.provider.description.interestrate.IssuerProviderInterface r2;
        double d0, $d1;
        com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface $r3;
        com.opengamma.util.money.MultipleCurrencyAmount $r4;

        r0 := @this: com.opengamma.analytics.financial.interestrate.bond.provider.BondSecurityDiscountingMethod;

        r1 := @parameter0: com.opengamma.analytics.financial.interestrate.bond.definition.BondSecurity;

        r2 := @parameter1: com.opengamma.analytics.financial.provider.description.interestrate.IssuerProviderInterface;

        d0 := @parameter2: double;

        $r3 = interfaceinvoke r2.<com.opengamma.analytics.financial.provider.description.interestrate.IssuerProviderInterface: com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface getMulticurveProvider()>();

        $r4 = virtualinvoke r0.<com.opengamma.analytics.financial.interestrate.bond.provider.BondSecurityDiscountingMethod: com.opengamma.util.money.MultipleCurrencyAmount presentValueFromCleanPrice(com.opengamma.analytics.financial.interestrate.bond.definition.BondSecurity,com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface,double)>(r1, $r3, d0);

        $d1 = virtualinvoke r0.<com.opengamma.analytics.financial.interestrate.bond.provider.BondSecurityDiscountingMethod: double zSpreadFromCurvesAndPV(com.opengamma.analytics.financial.interestrate.bond.definition.BondSecurity,com.opengamma.analytics.financial.provider.description.interestrate.IssuerProviderInterface,com.opengamma.util.money.MultipleCurrencyAmount)>(r1, r2, $r4);

        return $d1;
    }

    public double zSpreadFromCurvesAndClean(com.opengamma.analytics.financial.interestrate.bond.definition.BondSecurity, com.opengamma.analytics.financial.provider.description.interestrate.IssuerProviderInterface, double, boolean, int)
    {
        com.opengamma.analytics.financial.interestrate.bond.provider.BondSecurityDiscountingMethod r0;
        com.opengamma.analytics.financial.interestrate.bond.definition.BondSecurity r1;
        com.opengamma.analytics.financial.provider.description.interestrate.IssuerProviderInterface r2;
        double d0, $d1;
        boolean z0;
        int i0;
        com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface $r3;
        com.opengamma.util.money.MultipleCurrencyAmount $r4;

        r0 := @this: com.opengamma.analytics.financial.interestrate.bond.provider.BondSecurityDiscountingMethod;

        r1 := @parameter0: com.opengamma.analytics.financial.interestrate.bond.definition.BondSecurity;

        r2 := @parameter1: com.opengamma.analytics.financial.provider.description.interestrate.IssuerProviderInterface;

        d0 := @parameter2: double;

        z0 := @parameter3: boolean;

        i0 := @parameter4: int;

        $r3 = interfaceinvoke r2.<com.opengamma.analytics.financial.provider.description.interestrate.IssuerProviderInterface: com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface getMulticurveProvider()>();

        $r4 = virtualinvoke r0.<com.opengamma.analytics.financial.interestrate.bond.provider.BondSecurityDiscountingMethod: com.opengamma.util.money.MultipleCurrencyAmount presentValueFromCleanPrice(com.opengamma.analytics.financial.interestrate.bond.definition.BondSecurity,com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface,double)>(r1, $r3, d0);

        $d1 = virtualinvoke r0.<com.opengamma.analytics.financial.interestrate.bond.provider.BondSecurityDiscountingMethod: double zSpreadFromCurvesAndPV(com.opengamma.analytics.financial.interestrate.bond.definition.BondSecurity,com.opengamma.analytics.financial.provider.description.interestrate.IssuerProviderInterface,com.opengamma.util.money.MultipleCurrencyAmount,boolean,int)>(r1, r2, $r4, z0, i0);

        return $d1;
    }

    public double zSpreadFromCurvesAndYield(com.opengamma.analytics.financial.interestrate.bond.definition.BondSecurity, com.opengamma.analytics.financial.provider.description.interestrate.IssuerProviderInterface, double)
    {
        com.opengamma.analytics.financial.interestrate.bond.provider.BondSecurityDiscountingMethod r0;
        com.opengamma.analytics.financial.interestrate.bond.definition.BondSecurity r1;
        com.opengamma.analytics.financial.provider.description.interestrate.IssuerProviderInterface r2;
        double d0, $d1;
        com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface $r3;
        com.opengamma.util.money.MultipleCurrencyAmount $r4;

        r0 := @this: com.opengamma.analytics.financial.interestrate.bond.provider.BondSecurityDiscountingMethod;

        r1 := @parameter0: com.opengamma.analytics.financial.interestrate.bond.definition.BondSecurity;

        r2 := @parameter1: com.opengamma.analytics.financial.provider.description.interestrate.IssuerProviderInterface;

        d0 := @parameter2: double;

        $r3 = interfaceinvoke r2.<com.opengamma.analytics.financial.provider.description.interestrate.IssuerProviderInterface: com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface getMulticurveProvider()>();

        $r4 = virtualinvoke r0.<com.opengamma.analytics.financial.interestrate.bond.provider.BondSecurityDiscountingMethod: com.opengamma.util.money.MultipleCurrencyAmount presentValueFromYield(com.opengamma.analytics.financial.interestrate.bond.definition.BondSecurity,com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface,double)>(r1, $r3, d0);

        $d1 = virtualinvoke r0.<com.opengamma.analytics.financial.interestrate.bond.provider.BondSecurityDiscountingMethod: double zSpreadFromCurvesAndPV(com.opengamma.analytics.financial.interestrate.bond.definition.BondSecurity,com.opengamma.analytics.financial.provider.description.interestrate.IssuerProviderInterface,com.opengamma.util.money.MultipleCurrencyAmount)>(r1, r2, $r4);

        return $d1;
    }

    public double zSpreadFromCurvesAndYield(com.opengamma.analytics.financial.interestrate.bond.definition.BondSecurity, com.opengamma.analytics.financial.provider.description.interestrate.IssuerProviderInterface, double, boolean, int)
    {
        com.opengamma.analytics.financial.interestrate.bond.provider.BondSecurityDiscountingMethod r0;
        com.opengamma.analytics.financial.interestrate.bond.definition.BondSecurity r1;
        com.opengamma.analytics.financial.provider.description.interestrate.IssuerProviderInterface r2;
        double d0, $d1;
        boolean z0;
        int i0;
        com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface $r3;
        com.opengamma.util.money.MultipleCurrencyAmount $r4;

        r0 := @this: com.opengamma.analytics.financial.interestrate.bond.provider.BondSecurityDiscountingMethod;

        r1 := @parameter0: com.opengamma.analytics.financial.interestrate.bond.definition.BondSecurity;

        r2 := @parameter1: com.opengamma.analytics.financial.provider.description.interestrate.IssuerProviderInterface;

        d0 := @parameter2: double;

        z0 := @parameter3: boolean;

        i0 := @parameter4: int;

        $r3 = interfaceinvoke r2.<com.opengamma.analytics.financial.provider.description.interestrate.IssuerProviderInterface: com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface getMulticurveProvider()>();

        $r4 = virtualinvoke r0.<com.opengamma.analytics.financial.interestrate.bond.provider.BondSecurityDiscountingMethod: com.opengamma.util.money.MultipleCurrencyAmount presentValueFromYield(com.opengamma.analytics.financial.interestrate.bond.definition.BondSecurity,com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface,double)>(r1, $r3, d0);

        $d1 = virtualinvoke r0.<com.opengamma.analytics.financial.interestrate.bond.provider.BondSecurityDiscountingMethod: double zSpreadFromCurvesAndPV(com.opengamma.analytics.financial.interestrate.bond.definition.BondSecurity,com.opengamma.analytics.financial.provider.description.interestrate.IssuerProviderInterface,com.opengamma.util.money.MultipleCurrencyAmount,boolean,int)>(r1, r2, $r4, z0, i0);

        return $d1;
    }

    public double presentValueZSpreadSensitivityFromCurvesAndClean(com.opengamma.analytics.financial.interestrate.bond.definition.BondSecurity, com.opengamma.analytics.financial.provider.description.interestrate.IssuerProviderInterface, double)
    {
        com.opengamma.analytics.financial.interestrate.bond.provider.BondSecurityDiscountingMethod r0;
        com.opengamma.analytics.financial.interestrate.bond.definition.BondSecurity r1;
        com.opengamma.analytics.financial.provider.description.interestrate.IssuerProviderInterface r2;
        double d0, $d1;
        com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface $r3;
        com.opengamma.util.money.MultipleCurrencyAmount $r4;

        r0 := @this: com.opengamma.analytics.financial.interestrate.bond.provider.BondSecurityDiscountingMethod;

        r1 := @parameter0: com.opengamma.analytics.financial.interestrate.bond.definition.BondSecurity;

        r2 := @parameter1: com.opengamma.analytics.financial.provider.description.interestrate.IssuerProviderInterface;

        d0 := @parameter2: double;

        $r3 = interfaceinvoke r2.<com.opengamma.analytics.financial.provider.description.interestrate.IssuerProviderInterface: com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface getMulticurveProvider()>();

        $r4 = virtualinvoke r0.<com.opengamma.analytics.financial.interestrate.bond.provider.BondSecurityDiscountingMethod: com.opengamma.util.money.MultipleCurrencyAmount presentValueFromCleanPrice(com.opengamma.analytics.financial.interestrate.bond.definition.BondSecurity,com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface,double)>(r1, $r3, d0);

        $d1 = virtualinvoke r0.<com.opengamma.analytics.financial.interestrate.bond.provider.BondSecurityDiscountingMethod: double presentValueZSpreadSensitivityFromCurvesAndPV(com.opengamma.analytics.financial.interestrate.bond.definition.BondSecurity,com.opengamma.analytics.financial.provider.description.interestrate.IssuerProviderInterface,com.opengamma.util.money.MultipleCurrencyAmount)>(r1, r2, $r4);

        return $d1;
    }

    public com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyMulticurveSensitivity presentValueCurveSensitivity(com.opengamma.analytics.financial.interestrate.bond.definition.BondSecurity, com.opengamma.analytics.financial.provider.description.interestrate.IssuerProviderInterface)
    {
        com.opengamma.analytics.financial.interestrate.bond.provider.BondSecurityDiscountingMethod r0;
        com.opengamma.analytics.financial.interestrate.bond.definition.BondSecurity r1;
        com.opengamma.analytics.financial.provider.description.interestrate.IssuerProviderInterface r2;
        com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyMulticurveSensitivity r4, r5, $r16;
        com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscountingDecoratedIssuer $r7;
        com.opengamma.util.money.Currency $r8;
        com.opengamma.analytics.financial.legalentity.LegalEntity $r9;
        com.opengamma.analytics.financial.interestrate.annuity.derivative.Annuity $r10, $r13;
        com.opengamma.analytics.financial.provider.calculator.discounting.PresentValueCurveSensitivityDiscountingCalculator $r11, $r14;
        java.lang.Object $r12, $r15;

        r0 := @this: com.opengamma.analytics.financial.interestrate.bond.provider.BondSecurityDiscountingMethod;

        r1 := @parameter0: com.opengamma.analytics.financial.interestrate.bond.definition.BondSecurity;

        r2 := @parameter1: com.opengamma.analytics.financial.provider.description.interestrate.IssuerProviderInterface;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "Bond");

        $r7 = new com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscountingDecoratedIssuer;

        $r8 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.bond.definition.BondSecurity: com.opengamma.util.money.Currency getCurrency()>();

        $r9 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.bond.definition.BondSecurity: com.opengamma.analytics.financial.legalentity.LegalEntity getIssuerEntity()>();

        specialinvoke $r7.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscountingDecoratedIssuer: void <init>(com.opengamma.analytics.financial.provider.description.interestrate.IssuerProviderInterface,com.opengamma.util.money.Currency,com.opengamma.analytics.financial.legalentity.LegalEntity)>(r2, $r8, $r9);

        $r10 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.bond.definition.BondSecurity: com.opengamma.analytics.financial.interestrate.annuity.derivative.Annuity getNominal()>();

        $r11 = <com.opengamma.analytics.financial.interestrate.bond.provider.BondSecurityDiscountingMethod: com.opengamma.analytics.financial.provider.calculator.discounting.PresentValueCurveSensitivityDiscountingCalculator PVCSDC>;

        $r12 = virtualinvoke $r10.<com.opengamma.analytics.financial.interestrate.annuity.derivative.Annuity: java.lang.Object accept(com.opengamma.analytics.financial.interestrate.InstrumentDerivativeVisitor,java.lang.Object)>($r11, $r7);

        r4 = (com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyMulticurveSensitivity) $r12;

        $r13 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.bond.definition.BondSecurity: com.opengamma.analytics.financial.interestrate.annuity.derivative.Annuity getCoupon()>();

        $r14 = <com.opengamma.analytics.financial.interestrate.bond.provider.BondSecurityDiscountingMethod: com.opengamma.analytics.financial.provider.calculator.discounting.PresentValueCurveSensitivityDiscountingCalculator PVCSDC>;

        $r15 = virtualinvoke $r13.<com.opengamma.analytics.financial.interestrate.annuity.derivative.Annuity: java.lang.Object accept(com.opengamma.analytics.financial.interestrate.InstrumentDerivativeVisitor,java.lang.Object)>($r14, $r7);

        r5 = (com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyMulticurveSensitivity) $r15;

        $r16 = virtualinvoke r4.<com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyMulticurveSensitivity: com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyMulticurveSensitivity plus(com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyMulticurveSensitivity)>(r5);

        return $r16;
    }

    public com.opengamma.analytics.util.amount.StringAmount presentValueParallelCurveSensitivity(com.opengamma.analytics.financial.interestrate.bond.definition.BondSecurity, com.opengamma.analytics.financial.provider.description.interestrate.IssuerProviderInterface)
    {
        com.opengamma.analytics.financial.interestrate.bond.provider.BondSecurityDiscountingMethod r0;
        com.opengamma.analytics.financial.interestrate.bond.definition.BondSecurity r1;
        com.opengamma.analytics.financial.provider.description.interestrate.IssuerProviderInterface r2;
        com.opengamma.analytics.util.amount.StringAmount r4, r5, $r16;
        com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscountingDecoratedIssuer $r7;
        com.opengamma.util.money.Currency $r8;
        com.opengamma.analytics.financial.legalentity.LegalEntity $r9;
        com.opengamma.analytics.financial.interestrate.annuity.derivative.Annuity $r10, $r13;
        com.opengamma.analytics.financial.provider.calculator.discounting.PresentValueParallelCurveSensitivityDiscountingCalculator $r11, $r14;
        java.lang.Object $r12, $r15;

        r0 := @this: com.opengamma.analytics.financial.interestrate.bond.provider.BondSecurityDiscountingMethod;

        r1 := @parameter0: com.opengamma.analytics.financial.interestrate.bond.definition.BondSecurity;

        r2 := @parameter1: com.opengamma.analytics.financial.provider.description.interestrate.IssuerProviderInterface;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "Bond");

        $r7 = new com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscountingDecoratedIssuer;

        $r8 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.bond.definition.BondSecurity: com.opengamma.util.money.Currency getCurrency()>();

        $r9 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.bond.definition.BondSecurity: com.opengamma.analytics.financial.legalentity.LegalEntity getIssuerEntity()>();

        specialinvoke $r7.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscountingDecoratedIssuer: void <init>(com.opengamma.analytics.financial.provider.description.interestrate.IssuerProviderInterface,com.opengamma.util.money.Currency,com.opengamma.analytics.financial.legalentity.LegalEntity)>(r2, $r8, $r9);

        $r10 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.bond.definition.BondSecurity: com.opengamma.analytics.financial.interestrate.annuity.derivative.Annuity getNominal()>();

        $r11 = <com.opengamma.analytics.financial.interestrate.bond.provider.BondSecurityDiscountingMethod: com.opengamma.analytics.financial.provider.calculator.discounting.PresentValueParallelCurveSensitivityDiscountingCalculator PVPCSDC>;

        $r12 = virtualinvoke $r10.<com.opengamma.analytics.financial.interestrate.annuity.derivative.Annuity: java.lang.Object accept(com.opengamma.analytics.financial.interestrate.InstrumentDerivativeVisitor,java.lang.Object)>($r11, $r7);

        r4 = (com.opengamma.analytics.util.amount.StringAmount) $r12;

        $r13 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.bond.definition.BondSecurity: com.opengamma.analytics.financial.interestrate.annuity.derivative.Annuity getCoupon()>();

        $r14 = <com.opengamma.analytics.financial.interestrate.bond.provider.BondSecurityDiscountingMethod: com.opengamma.analytics.financial.provider.calculator.discounting.PresentValueParallelCurveSensitivityDiscountingCalculator PVPCSDC>;

        $r15 = virtualinvoke $r13.<com.opengamma.analytics.financial.interestrate.annuity.derivative.Annuity: java.lang.Object accept(com.opengamma.analytics.financial.interestrate.InstrumentDerivativeVisitor,java.lang.Object)>($r14, $r7);

        r5 = (com.opengamma.analytics.util.amount.StringAmount) $r15;

        $r16 = staticinvoke <com.opengamma.analytics.util.amount.StringAmount: com.opengamma.analytics.util.amount.StringAmount plus(com.opengamma.analytics.util.amount.StringAmount,com.opengamma.analytics.util.amount.StringAmount)>(r4, r5);

        return $r16;
    }

    public double accruedInterestFromYield(com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity, double)
    {
        com.opengamma.analytics.financial.interestrate.bond.provider.BondSecurityDiscountingMethod r0;
        com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity r1;
        double d0, $d1, $d2, $d3;

        r0 := @this: com.opengamma.analytics.financial.interestrate.bond.provider.BondSecurityDiscountingMethod;

        r1 := @parameter0: com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity;

        d0 := @parameter1: double;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "bond");

        $d1 = virtualinvoke r0.<com.opengamma.analytics.financial.interestrate.bond.provider.BondSecurityDiscountingMethod: double dirtyPriceFromYield(com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity,double)>(r1, d0);

        $d2 = virtualinvoke r0.<com.opengamma.analytics.financial.interestrate.bond.provider.BondSecurityDiscountingMethod: double cleanPriceFromYield(com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity,double)>(r1, d0);

        $d3 = $d1 - $d2;

        return $d3;
    }

    public double accruedInterestFromDirtyPrice(com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity, double)
    {
        com.opengamma.analytics.financial.interestrate.bond.provider.BondSecurityDiscountingMethod r0;
        com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity r1;
        double d0, $d1, $d2;

        r0 := @this: com.opengamma.analytics.financial.interestrate.bond.provider.BondSecurityDiscountingMethod;

        r1 := @parameter0: com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity;

        d0 := @parameter1: double;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "bond");

        $d1 = virtualinvoke r0.<com.opengamma.analytics.financial.interestrate.bond.provider.BondSecurityDiscountingMethod: double cleanPriceFromDirtyPrice(com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity,double)>(r1, d0);

        $d2 = d0 - $d1;

        return $d2;
    }

    public double accruedInterestFromCleanPrice(com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity, double)
    {
        com.opengamma.analytics.financial.interestrate.bond.provider.BondSecurityDiscountingMethod r0;
        com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity r1;
        double d0, $d1, $d2;

        r0 := @this: com.opengamma.analytics.financial.interestrate.bond.provider.BondSecurityDiscountingMethod;

        r1 := @parameter0: com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity;

        d0 := @parameter1: double;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "bond");

        $d1 = virtualinvoke r0.<com.opengamma.analytics.financial.interestrate.bond.provider.BondSecurityDiscountingMethod: double dirtyPriceFromCleanPrice(com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity,double)>(r1, d0);

        $d2 = $d1 - d0;

        return $d2;
    }

    public double accruedInterestFromCurves(com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity, com.opengamma.analytics.financial.provider.description.interestrate.IssuerProviderInterface)
    {
        com.opengamma.analytics.financial.interestrate.bond.provider.BondSecurityDiscountingMethod r0;
        com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity r1;
        com.opengamma.analytics.financial.provider.description.interestrate.IssuerProviderInterface r2;
        double $d0, $d1, $d2;

        r0 := @this: com.opengamma.analytics.financial.interestrate.bond.provider.BondSecurityDiscountingMethod;

        r1 := @parameter0: com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity;

        r2 := @parameter1: com.opengamma.analytics.financial.provider.description.interestrate.IssuerProviderInterface;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "bond");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, "curves");

        $d0 = virtualinvoke r0.<com.opengamma.analytics.financial.interestrate.bond.provider.BondSecurityDiscountingMethod: double dirtyPriceFromCurves(com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity,com.opengamma.analytics.financial.provider.description.interestrate.IssuerProviderInterface)>(r1, r2);

        $d1 = virtualinvoke r0.<com.opengamma.analytics.financial.interestrate.bond.provider.BondSecurityDiscountingMethod: double cleanPriceFromCurves(com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity,com.opengamma.analytics.financial.provider.description.interestrate.IssuerProviderInterface)>(r1, r2);

        $d2 = $d0 - $d1;

        return $d2;
    }

    static void <clinit>()
    {
        com.opengamma.analytics.financial.interestrate.bond.provider.BondSecurityDiscountingMethod $r0;
        com.opengamma.analytics.financial.provider.calculator.discounting.PresentValueDiscountingCalculator $r1;
        com.opengamma.analytics.financial.provider.calculator.discounting.PresentValueCurveSensitivityDiscountingCalculator $r2;
        com.opengamma.analytics.financial.provider.calculator.discounting.PresentValueParallelCurveSensitivityDiscountingCalculator $r3;
        com.opengamma.analytics.math.rootfinding.BracketRoot $r4, $r6;
        com.opengamma.analytics.math.rootfinding.BrentSingleRootFinder $r5;

        $r0 = new com.opengamma.analytics.financial.interestrate.bond.provider.BondSecurityDiscountingMethod;

        specialinvoke $r0.<com.opengamma.analytics.financial.interestrate.bond.provider.BondSecurityDiscountingMethod: void <init>()>();

        <com.opengamma.analytics.financial.interestrate.bond.provider.BondSecurityDiscountingMethod: com.opengamma.analytics.financial.interestrate.bond.provider.BondSecurityDiscountingMethod INSTANCE> = $r0;

        $r1 = staticinvoke <com.opengamma.analytics.financial.provider.calculator.discounting.PresentValueDiscountingCalculator: com.opengamma.analytics.financial.provider.calculator.discounting.PresentValueDiscountingCalculator getInstance()>();

        <com.opengamma.analytics.financial.interestrate.bond.provider.BondSecurityDiscountingMethod: com.opengamma.analytics.financial.provider.calculator.discounting.PresentValueDiscountingCalculator PVDC> = $r1;

        $r2 = staticinvoke <com.opengamma.analytics.financial.provider.calculator.discounting.PresentValueCurveSensitivityDiscountingCalculator: com.opengamma.analytics.financial.provider.calculator.discounting.PresentValueCurveSensitivityDiscountingCalculator getInstance()>();

        <com.opengamma.analytics.financial.interestrate.bond.provider.BondSecurityDiscountingMethod: com.opengamma.analytics.financial.provider.calculator.discounting.PresentValueCurveSensitivityDiscountingCalculator PVCSDC> = $r2;

        $r3 = staticinvoke <com.opengamma.analytics.financial.provider.calculator.discounting.PresentValueParallelCurveSensitivityDiscountingCalculator: com.opengamma.analytics.financial.provider.calculator.discounting.PresentValueParallelCurveSensitivityDiscountingCalculator getInstance()>();

        <com.opengamma.analytics.financial.interestrate.bond.provider.BondSecurityDiscountingMethod: com.opengamma.analytics.financial.provider.calculator.discounting.PresentValueParallelCurveSensitivityDiscountingCalculator PVPCSDC> = $r3;

        $r4 = new com.opengamma.analytics.math.rootfinding.BracketRoot;

        specialinvoke $r4.<com.opengamma.analytics.math.rootfinding.BracketRoot: void <init>()>();

        <com.opengamma.analytics.financial.interestrate.bond.provider.BondSecurityDiscountingMethod: com.opengamma.analytics.math.rootfinding.BracketRoot BRACKETER> = $r4;

        $r5 = new com.opengamma.analytics.math.rootfinding.BrentSingleRootFinder;

        specialinvoke $r5.<com.opengamma.analytics.math.rootfinding.BrentSingleRootFinder: void <init>()>();

        <com.opengamma.analytics.financial.interestrate.bond.provider.BondSecurityDiscountingMethod: com.opengamma.analytics.math.rootfinding.RealSingleRootFinder ROOT_FINDER> = $r5;

        $r6 = new com.opengamma.analytics.math.rootfinding.BracketRoot;

        specialinvoke $r6.<com.opengamma.analytics.math.rootfinding.BracketRoot: void <init>()>();

        <com.opengamma.analytics.financial.interestrate.bond.provider.BondSecurityDiscountingMethod: com.opengamma.analytics.math.rootfinding.BracketRoot ROOT_BRACKETER> = $r6;

        return;
    }
}
