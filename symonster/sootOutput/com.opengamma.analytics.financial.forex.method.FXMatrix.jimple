public class com.opengamma.analytics.financial.forex.method.FXMatrix extends java.lang.Object
{
    private final java.util.Map _currencies;
    private double[][] _fxRates;
    private int _nbCurrencies;

    public void <init>()
    {
        com.opengamma.analytics.financial.forex.method.FXMatrix r0;
        java.util.LinkedHashMap $r1;
        double[][] $r2;

        r0 := @this: com.opengamma.analytics.financial.forex.method.FXMatrix;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.LinkedHashMap;

        specialinvoke $r1.<java.util.LinkedHashMap: void <init>()>();

        r0.<com.opengamma.analytics.financial.forex.method.FXMatrix: java.util.Map _currencies> = $r1;

        $r2 = newmultiarray (double)[0][0];

        r0.<com.opengamma.analytics.financial.forex.method.FXMatrix: double[][] _fxRates> = $r2;

        r0.<com.opengamma.analytics.financial.forex.method.FXMatrix: int _nbCurrencies> = 0;

        return;
    }

    public void <init>(com.opengamma.util.money.Currency)
    {
        com.opengamma.analytics.financial.forex.method.FXMatrix r0;
        com.opengamma.util.money.Currency r1;
        java.util.LinkedHashMap $r3;
        java.util.Map $r4;
        java.lang.Integer $r5;
        double[][] $r7, $r8;
        double[] $r9;

        r0 := @this: com.opengamma.analytics.financial.forex.method.FXMatrix;

        r1 := @parameter0: com.opengamma.util.money.Currency;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "Currency");

        $r3 = new java.util.LinkedHashMap;

        specialinvoke $r3.<java.util.LinkedHashMap: void <init>()>();

        r0.<com.opengamma.analytics.financial.forex.method.FXMatrix: java.util.Map _currencies> = $r3;

        $r4 = r0.<com.opengamma.analytics.financial.forex.method.FXMatrix: java.util.Map _currencies>;

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        interfaceinvoke $r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r5);

        $r7 = newmultiarray (double)[1][1];

        r0.<com.opengamma.analytics.financial.forex.method.FXMatrix: double[][] _fxRates> = $r7;

        $r8 = r0.<com.opengamma.analytics.financial.forex.method.FXMatrix: double[][] _fxRates>;

        $r9 = $r8[0];

        $r9[0] = 1.0;

        r0.<com.opengamma.analytics.financial.forex.method.FXMatrix: int _nbCurrencies> = 1;

        return;
    }

    public void <init>(com.opengamma.util.money.Currency, com.opengamma.util.money.Currency, double)
    {
        com.opengamma.analytics.financial.forex.method.FXMatrix r0;
        com.opengamma.util.money.Currency r1, r2;
        double d0;
        java.util.LinkedHashMap $r3;
        double[][] $r4;

        r0 := @this: com.opengamma.analytics.financial.forex.method.FXMatrix;

        r1 := @parameter0: com.opengamma.util.money.Currency;

        r2 := @parameter1: com.opengamma.util.money.Currency;

        d0 := @parameter2: double;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r3 = new java.util.LinkedHashMap;

        specialinvoke $r3.<java.util.LinkedHashMap: void <init>()>();

        r0.<com.opengamma.analytics.financial.forex.method.FXMatrix: java.util.Map _currencies> = $r3;

        $r4 = newmultiarray (double)[0][0];

        r0.<com.opengamma.analytics.financial.forex.method.FXMatrix: double[][] _fxRates> = $r4;

        virtualinvoke r0.<com.opengamma.analytics.financial.forex.method.FXMatrix: void addCurrency(com.opengamma.util.money.Currency,com.opengamma.util.money.Currency,double)>(r1, r2, d0);

        return;
    }

    public void <init>(java.util.Map, double[][])
    {
        com.opengamma.analytics.financial.forex.method.FXMatrix r0;
        java.util.Map r1;
        double[][] r2, $r7, $r9, $r10;
        double[] r3, $r8, $r11;
        int i0, $i1, $i2, $i3, i4;
        java.util.LinkedHashMap $r6;

        r0 := @this: com.opengamma.analytics.financial.forex.method.FXMatrix;

        r1 := @parameter0: java.util.Map;

        r2 := @parameter1: double[][];

        specialinvoke r0.<java.lang.Object: void <init>()>();

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "currencies");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, "FX rates");

        $i1 = interfaceinvoke r1.<java.util.Map: int size()>();

        r0.<com.opengamma.analytics.financial.forex.method.FXMatrix: int _nbCurrencies> = $i1;

        $r6 = new java.util.LinkedHashMap;

        specialinvoke $r6.<java.util.LinkedHashMap: void <init>(java.util.Map)>(r1);

        r0.<com.opengamma.analytics.financial.forex.method.FXMatrix: java.util.Map _currencies> = $r6;

        $i2 = r0.<com.opengamma.analytics.financial.forex.method.FXMatrix: int _nbCurrencies>;

        $r7 = newarray (double[])[$i2];

        r0.<com.opengamma.analytics.financial.forex.method.FXMatrix: double[][] _fxRates> = $r7;

        i4 = 0;

     label1:
        $i3 = r0.<com.opengamma.analytics.financial.forex.method.FXMatrix: int _nbCurrencies>;

        if i4 >= $i3 goto label2;

        r3 = r2[i4];

        i0 = lengthof r3;

        $r9 = r0.<com.opengamma.analytics.financial.forex.method.FXMatrix: double[][] _fxRates>;

        $r8 = newarray (double)[i0];

        $r9[i4] = $r8;

        $r10 = r0.<com.opengamma.analytics.financial.forex.method.FXMatrix: double[][] _fxRates>;

        $r11 = $r10[i4];

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r3, 0, $r11, 0, i0);

        i4 = i4 + 1;

        goto label1;

     label2:
        return;
    }

    public void <init>(com.opengamma.analytics.financial.forex.method.FXMatrix)
    {
        com.opengamma.analytics.financial.forex.method.FXMatrix r0, r1;
        double[] r2, $r8, $r11;
        int i0, $i1, $i2, $i3, i4;
        java.util.LinkedHashMap $r4;
        java.util.Map $r5;
        double[][] $r6, $r7, $r9, $r10;

        r0 := @this: com.opengamma.analytics.financial.forex.method.FXMatrix;

        r1 := @parameter0: com.opengamma.analytics.financial.forex.method.FXMatrix;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "FXMatrix");

        $i1 = r1.<com.opengamma.analytics.financial.forex.method.FXMatrix: int _nbCurrencies>;

        r0.<com.opengamma.analytics.financial.forex.method.FXMatrix: int _nbCurrencies> = $i1;

        $r4 = new java.util.LinkedHashMap;

        $r5 = r1.<com.opengamma.analytics.financial.forex.method.FXMatrix: java.util.Map _currencies>;

        specialinvoke $r4.<java.util.LinkedHashMap: void <init>(java.util.Map)>($r5);

        r0.<com.opengamma.analytics.financial.forex.method.FXMatrix: java.util.Map _currencies> = $r4;

        $i2 = r0.<com.opengamma.analytics.financial.forex.method.FXMatrix: int _nbCurrencies>;

        $r6 = newarray (double[])[$i2];

        r0.<com.opengamma.analytics.financial.forex.method.FXMatrix: double[][] _fxRates> = $r6;

        i4 = 0;

     label1:
        $i3 = r0.<com.opengamma.analytics.financial.forex.method.FXMatrix: int _nbCurrencies>;

        if i4 >= $i3 goto label2;

        $r7 = r1.<com.opengamma.analytics.financial.forex.method.FXMatrix: double[][] _fxRates>;

        r2 = $r7[i4];

        i0 = lengthof r2;

        $r9 = r0.<com.opengamma.analytics.financial.forex.method.FXMatrix: double[][] _fxRates>;

        $r8 = newarray (double)[i0];

        $r9[i4] = $r8;

        $r10 = r0.<com.opengamma.analytics.financial.forex.method.FXMatrix: double[][] _fxRates>;

        $r11 = $r10[i4];

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r2, 0, $r11, 0, i0);

        i4 = i4 + 1;

        goto label1;

     label2:
        return;
    }

    public void addCurrency(com.opengamma.util.money.Currency, com.opengamma.util.money.Currency, double)
    {
        com.opengamma.analytics.financial.forex.method.FXMatrix r0;
        com.opengamma.util.money.Currency r1, r2;
        double d0, $d1, $d2, $d3, $d4, $d5;
        double[][] r3, $r17, $r22, $r32, $r33, $r35, $r37, $r39;
        boolean $z0, $z1, $z2, $z3, $z4;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, i20, $i21, $i22, i23, i24;
        java.util.Map $r6, $r8, $r10, $r14, $r26, $r29;
        java.lang.Object[] $r7, $r9;
        java.lang.Integer $r11, $r16, $r27, $r30;
        double[] $r13, $r18, $r19, $r20, $r21, $r23, $r24, $r34, $r36, $r38, $r40;
        java.lang.Object $r15;

        r0 := @this: com.opengamma.analytics.financial.forex.method.FXMatrix;

        r1 := @parameter0: com.opengamma.util.money.Currency;

        r2 := @parameter1: com.opengamma.util.money.Currency;

        d0 := @parameter2: double;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "Currency to add to the FX matrix should not be null");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, "Reference currency should not be null");

        $z0 = virtualinvoke r1.<com.opengamma.util.money.Currency: boolean equals(java.lang.Object)>(r2);

        if $z0 != 0 goto label01;

        $z3 = 1;

        goto label02;

     label01:
        $z3 = 0;

     label02:
        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z3, "Currencies should be different");

        $i0 = r0.<com.opengamma.analytics.financial.forex.method.FXMatrix: int _nbCurrencies>;

        if $i0 != 0 goto label03;

        $r26 = r0.<com.opengamma.analytics.financial.forex.method.FXMatrix: java.util.Map _currencies>;

        $r27 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        interfaceinvoke $r26.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, $r27);

        $r29 = r0.<com.opengamma.analytics.financial.forex.method.FXMatrix: java.util.Map _currencies>;

        $r30 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        interfaceinvoke $r29.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r30);

        $r32 = newmultiarray (double)[2][2];

        r0.<com.opengamma.analytics.financial.forex.method.FXMatrix: double[][] _fxRates> = $r32;

        $r33 = r0.<com.opengamma.analytics.financial.forex.method.FXMatrix: double[][] _fxRates>;

        $r34 = $r33[0];

        $r34[0] = 1.0;

        $r35 = r0.<com.opengamma.analytics.financial.forex.method.FXMatrix: double[][] _fxRates>;

        $r36 = $r35[1];

        $r36[1] = 1.0;

        $r37 = r0.<com.opengamma.analytics.financial.forex.method.FXMatrix: double[][] _fxRates>;

        $r38 = $r37[1];

        $r38[0] = d0;

        $r39 = r0.<com.opengamma.analytics.financial.forex.method.FXMatrix: double[][] _fxRates>;

        $r40 = $r39[0];

        $d5 = 1.0 / d0;

        $r40[1] = $d5;

        r0.<com.opengamma.analytics.financial.forex.method.FXMatrix: int _nbCurrencies> = 2;

        goto label10;

     label03:
        $r6 = r0.<com.opengamma.analytics.financial.forex.method.FXMatrix: java.util.Map _currencies>;

        $z1 = interfaceinvoke $r6.<java.util.Map: boolean containsKey(java.lang.Object)>(r2);

        $r7 = newarray (java.lang.Object)[1];

        $r7[0] = r2;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String,java.lang.Object[])>($z1, "Reference currency {} not in the FX matrix", $r7);

        $r8 = r0.<com.opengamma.analytics.financial.forex.method.FXMatrix: java.util.Map _currencies>;

        $z2 = interfaceinvoke $r8.<java.util.Map: boolean containsKey(java.lang.Object)>(r1);

        if $z2 != 0 goto label04;

        $z4 = 1;

        goto label05;

     label04:
        $z4 = 0;

     label05:
        $r9 = newarray (java.lang.Object)[1];

        $r9[0] = r1;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String,java.lang.Object[])>($z4, "New currency {} already in the FX matrix", $r9);

        $r10 = r0.<com.opengamma.analytics.financial.forex.method.FXMatrix: java.util.Map _currencies>;

        $i1 = r0.<com.opengamma.analytics.financial.forex.method.FXMatrix: int _nbCurrencies>;

        $r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        interfaceinvoke $r10.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r11);

        $i2 = r0.<com.opengamma.analytics.financial.forex.method.FXMatrix: int _nbCurrencies>;

        $i3 = $i2 + 1;

        r0.<com.opengamma.analytics.financial.forex.method.FXMatrix: int _nbCurrencies> = $i3;

        $i5 = r0.<com.opengamma.analytics.financial.forex.method.FXMatrix: int _nbCurrencies>;

        $i4 = r0.<com.opengamma.analytics.financial.forex.method.FXMatrix: int _nbCurrencies>;

        r3 = newmultiarray (double)[$i5][$i4];

        i20 = 0;

     label06:
        $i21 = r0.<com.opengamma.analytics.financial.forex.method.FXMatrix: int _nbCurrencies>;

        $i22 = $i21 - 1;

        if i20 >= $i22 goto label07;

        $r22 = r0.<com.opengamma.analytics.financial.forex.method.FXMatrix: double[][] _fxRates>;

        $r24 = $r22[i20];

        $r23 = r3[i20];

        $i18 = r0.<com.opengamma.analytics.financial.forex.method.FXMatrix: int _nbCurrencies>;

        $i19 = $i18 - 1;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r24, 0, $r23, 0, $i19);

        i20 = i20 + 1;

        goto label06;

     label07:
        $i6 = r0.<com.opengamma.analytics.financial.forex.method.FXMatrix: int _nbCurrencies>;

        $i7 = $i6 - 1;

        $r13 = r3[$i7];

        $i8 = r0.<com.opengamma.analytics.financial.forex.method.FXMatrix: int _nbCurrencies>;

        $i9 = $i8 - 1;

        $r13[$i9] = 1.0;

        $r14 = r0.<com.opengamma.analytics.financial.forex.method.FXMatrix: java.util.Map _currencies>;

        $r15 = interfaceinvoke $r14.<java.util.Map: java.lang.Object get(java.lang.Object)>(r2);

        $r16 = (java.lang.Integer) $r15;

        i23 = virtualinvoke $r16.<java.lang.Integer: int intValue()>();

        i24 = 0;

     label08:
        $i10 = r0.<com.opengamma.analytics.financial.forex.method.FXMatrix: int _nbCurrencies>;

        $i11 = $i10 - 1;

        if i24 >= $i11 goto label09;

        $i12 = r0.<com.opengamma.analytics.financial.forex.method.FXMatrix: int _nbCurrencies>;

        $i13 = $i12 - 1;

        $r19 = r3[$i13];

        $r17 = r0.<com.opengamma.analytics.financial.forex.method.FXMatrix: double[][] _fxRates>;

        $r18 = $r17[i23];

        $d1 = $r18[i24];

        $d2 = d0 * $d1;

        $r19[i24] = $d2;

        $r21 = r3[i24];

        $i14 = r0.<com.opengamma.analytics.financial.forex.method.FXMatrix: int _nbCurrencies>;

        $i17 = $i14 - 1;

        $i15 = r0.<com.opengamma.analytics.financial.forex.method.FXMatrix: int _nbCurrencies>;

        $i16 = $i15 - 1;

        $r20 = r3[$i16];

        $d3 = $r20[i24];

        $d4 = 1.0 / $d3;

        $r21[$i17] = $d4;

        i24 = i24 + 1;

        goto label08;

     label09:
        r0.<com.opengamma.analytics.financial.forex.method.FXMatrix: double[][] _fxRates> = r3;

     label10:
        return;
    }

    public double getFxRate(com.opengamma.util.money.Currency, com.opengamma.util.money.Currency)
    {
        com.opengamma.analytics.financial.forex.method.FXMatrix r0;
        com.opengamma.util.money.Currency r1, r2;
        java.lang.Integer r3, r4;
        boolean $z0, $z1, $z2;
        java.util.Map $r5, $r7;
        java.lang.Object $r6, $r8;
        java.lang.Object[] $r9, $r10;
        double[][] $r11;
        int $i0, $i1;
        double[] $r12;
        double $d0;

        r0 := @this: com.opengamma.analytics.financial.forex.method.FXMatrix;

        r1 := @parameter0: com.opengamma.util.money.Currency;

        r2 := @parameter1: com.opengamma.util.money.Currency;

        $z0 = virtualinvoke r1.<com.opengamma.util.money.Currency: boolean equals(java.lang.Object)>(r2);

        if $z0 == 0 goto label1;

        return 1.0;

     label1:
        $r5 = r0.<com.opengamma.analytics.financial.forex.method.FXMatrix: java.util.Map _currencies>;

        $r6 = interfaceinvoke $r5.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        r3 = (java.lang.Integer) $r6;

        $r7 = r0.<com.opengamma.analytics.financial.forex.method.FXMatrix: java.util.Map _currencies>;

        $r8 = interfaceinvoke $r7.<java.util.Map: java.lang.Object get(java.lang.Object)>(r2);

        r4 = (java.lang.Integer) $r8;

        if r3 == null goto label2;

        $z1 = 1;

        goto label3;

     label2:
        $z1 = 0;

     label3:
        $r9 = newarray (java.lang.Object)[1];

        $r9[0] = r1;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String,java.lang.Object[])>($z1, "{} not found in FX matrix", $r9);

        if r4 == null goto label4;

        $z2 = 1;

        goto label5;

     label4:
        $z2 = 0;

     label5:
        $r10 = newarray (java.lang.Object)[1];

        $r10[0] = r2;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String,java.lang.Object[])>($z2, "{} not found in FX matrix", $r10);

        $r11 = r0.<com.opengamma.analytics.financial.forex.method.FXMatrix: double[][] _fxRates>;

        $i0 = virtualinvoke r3.<java.lang.Integer: int intValue()>();

        $r12 = $r11[$i0];

        $i1 = virtualinvoke r4.<java.lang.Integer: int intValue()>();

        $d0 = $r12[$i1];

        return $d0;
    }

    public boolean containsPair(com.opengamma.util.money.Currency, com.opengamma.util.money.Currency)
    {
        com.opengamma.analytics.financial.forex.method.FXMatrix r0;
        com.opengamma.util.money.Currency r1, r2;
        java.util.Map $r3, $r4;
        boolean $z0, $z1, $z2;

        r0 := @this: com.opengamma.analytics.financial.forex.method.FXMatrix;

        r1 := @parameter0: com.opengamma.util.money.Currency;

        r2 := @parameter1: com.opengamma.util.money.Currency;

        $r3 = r0.<com.opengamma.analytics.financial.forex.method.FXMatrix: java.util.Map _currencies>;

        $z0 = interfaceinvoke $r3.<java.util.Map: boolean containsKey(java.lang.Object)>(r1);

        if $z0 == 0 goto label1;

        $r4 = r0.<com.opengamma.analytics.financial.forex.method.FXMatrix: java.util.Map _currencies>;

        $z1 = interfaceinvoke $r4.<java.util.Map: boolean containsKey(java.lang.Object)>(r2);

        if $z1 == 0 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        return $z2;
    }

    public com.opengamma.util.money.CurrencyAmount convert(com.opengamma.util.money.MultipleCurrencyAmount, com.opengamma.util.money.Currency)
    {
        com.opengamma.analytics.financial.forex.method.FXMatrix r0;
        com.opengamma.util.money.MultipleCurrencyAmount r1;
        com.opengamma.util.money.Currency r2, $r8;
        com.opengamma.util.money.CurrencyAmount[] r3;
        int i0, i1;
        com.opengamma.util.money.CurrencyAmount r5, $r7;
        double $d0, $d1, $d2, d3;

        r0 := @this: com.opengamma.analytics.financial.forex.method.FXMatrix;

        r1 := @parameter0: com.opengamma.util.money.MultipleCurrencyAmount;

        r2 := @parameter1: com.opengamma.util.money.Currency;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "amount");

        d3 = 0.0;

        r3 = virtualinvoke r1.<com.opengamma.util.money.MultipleCurrencyAmount: com.opengamma.util.money.CurrencyAmount[] getCurrencyAmounts()>();

        i0 = lengthof r3;

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        r5 = r3[i1];

        $d0 = virtualinvoke r5.<com.opengamma.util.money.CurrencyAmount: double getAmount()>();

        $r8 = virtualinvoke r5.<com.opengamma.util.money.CurrencyAmount: com.opengamma.util.money.Currency getCurrency()>();

        $d1 = virtualinvoke r0.<com.opengamma.analytics.financial.forex.method.FXMatrix: double getFxRate(com.opengamma.util.money.Currency,com.opengamma.util.money.Currency)>($r8, r2);

        $d2 = $d0 * $d1;

        d3 = d3 + $d2;

        i1 = i1 + 1;

        goto label1;

     label2:
        $r7 = staticinvoke <com.opengamma.util.money.CurrencyAmount: com.opengamma.util.money.CurrencyAmount of(com.opengamma.util.money.Currency,double)>(r2, d3);

        return $r7;
    }

    public void updateRates(com.opengamma.util.money.Currency, com.opengamma.util.money.Currency, double)
    {
        com.opengamma.analytics.financial.forex.method.FXMatrix r0;
        com.opengamma.util.money.Currency r1, r2;
        double d0, $d1, $d2, $d3, $d4;
        int i0, i1, $i2, i3;
        java.util.Map $r3, $r4, $r5, $r8;
        boolean $z0, $z1;
        java.lang.Object $r6, $r9;
        java.lang.Integer $r7, $r10;
        double[][] $r11, $r13, $r14, $r17, $r18;
        double[] $r12, $r15, $r16, $r19, $r20;

        r0 := @this: com.opengamma.analytics.financial.forex.method.FXMatrix;

        r1 := @parameter0: com.opengamma.util.money.Currency;

        r2 := @parameter1: com.opengamma.util.money.Currency;

        d0 := @parameter2: double;

        $r3 = r0.<com.opengamma.analytics.financial.forex.method.FXMatrix: java.util.Map _currencies>;

        $z0 = interfaceinvoke $r3.<java.util.Map: boolean containsKey(java.lang.Object)>(r2);

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z0, "Reference currency not in the FX matrix");

        $r4 = r0.<com.opengamma.analytics.financial.forex.method.FXMatrix: java.util.Map _currencies>;

        $z1 = interfaceinvoke $r4.<java.util.Map: boolean containsKey(java.lang.Object)>(r1);

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z1, "Currency to update not in the FX matrix");

        $r5 = r0.<com.opengamma.analytics.financial.forex.method.FXMatrix: java.util.Map _currencies>;

        $r6 = interfaceinvoke $r5.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        $r7 = (java.lang.Integer) $r6;

        i0 = virtualinvoke $r7.<java.lang.Integer: int intValue()>();

        $r8 = r0.<com.opengamma.analytics.financial.forex.method.FXMatrix: java.util.Map _currencies>;

        $r9 = interfaceinvoke $r8.<java.util.Map: java.lang.Object get(java.lang.Object)>(r2);

        $r10 = (java.lang.Integer) $r9;

        i1 = virtualinvoke $r10.<java.lang.Integer: int intValue()>();

        i3 = 0;

     label1:
        $i2 = r0.<com.opengamma.analytics.financial.forex.method.FXMatrix: int _nbCurrencies>;

        if i3 >= $i2 goto label2;

        $r13 = r0.<com.opengamma.analytics.financial.forex.method.FXMatrix: double[][] _fxRates>;

        $r16 = $r13[i0];

        $r14 = r0.<com.opengamma.analytics.financial.forex.method.FXMatrix: double[][] _fxRates>;

        $r15 = $r14[i1];

        $d1 = $r15[i3];

        $d2 = d0 * $d1;

        $r16[i3] = $d2;

        $r17 = r0.<com.opengamma.analytics.financial.forex.method.FXMatrix: double[][] _fxRates>;

        $r20 = $r17[i3];

        $r18 = r0.<com.opengamma.analytics.financial.forex.method.FXMatrix: double[][] _fxRates>;

        $r19 = $r18[i0];

        $d3 = $r19[i3];

        $d4 = 1.0 / $d3;

        $r20[i0] = $d4;

        i3 = i3 + 1;

        goto label1;

     label2:
        $r11 = r0.<com.opengamma.analytics.financial.forex.method.FXMatrix: double[][] _fxRates>;

        $r12 = $r11[i0];

        $r12[i0] = 1.0;

        return;
    }

    public java.util.Map getCurrencies()
    {
        com.opengamma.analytics.financial.forex.method.FXMatrix r0;
        java.util.Map $r1, $r2;

        r0 := @this: com.opengamma.analytics.financial.forex.method.FXMatrix;

        $r1 = r0.<com.opengamma.analytics.financial.forex.method.FXMatrix: java.util.Map _currencies>;

        $r2 = staticinvoke <java.util.Collections: java.util.Map unmodifiableMap(java.util.Map)>($r1);

        return $r2;
    }

    public double[][] getRates()
    {
        com.opengamma.analytics.financial.forex.method.FXMatrix r0;
        double[][] $r1;

        r0 := @this: com.opengamma.analytics.financial.forex.method.FXMatrix;

        $r1 = r0.<com.opengamma.analytics.financial.forex.method.FXMatrix: double[][] _fxRates>;

        return $r1;
    }

    public int getNumberOfCurrencies()
    {
        com.opengamma.analytics.financial.forex.method.FXMatrix r0;
        int $i0;

        r0 := @this: com.opengamma.analytics.financial.forex.method.FXMatrix;

        $i0 = r0.<com.opengamma.analytics.financial.forex.method.FXMatrix: int _nbCurrencies>;

        return $i0;
    }

    public java.lang.String toString()
    {
        com.opengamma.analytics.financial.forex.method.FXMatrix r0;
        java.lang.StringBuilder $r1, $r5, $r6, $r9;
        java.util.Map $r2;
        java.util.Set $r3;
        java.lang.String $r4, $r8, $r10;
        double[][] $r7;

        r0 := @this: com.opengamma.analytics.financial.forex.method.FXMatrix;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = r0.<com.opengamma.analytics.financial.forex.method.FXMatrix: java.util.Map _currencies>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.util.Set keySet()>();

        $r4 = virtualinvoke $r3.<java.lang.Object: java.lang.String toString()>();

        $r5 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" - ");

        $r7 = r0.<com.opengamma.analytics.financial.forex.method.FXMatrix: double[][] _fxRates>;

        $r8 = staticinvoke <org.apache.commons.lang.ArrayUtils: java.lang.String toString(java.lang.Object)>($r7);

        $r9 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r10;
    }

    public int hashCode()
    {
        com.opengamma.analytics.financial.forex.method.FXMatrix r0;
        java.util.Map $r1;
        int $i1, $i2, $i3, $i4, i6, i7;
        double[][] $r2;

        r0 := @this: com.opengamma.analytics.financial.forex.method.FXMatrix;

        $i1 = 31 * 1;

        $r1 = r0.<com.opengamma.analytics.financial.forex.method.FXMatrix: java.util.Map _currencies>;

        $i2 = interfaceinvoke $r1.<java.util.Map: int hashCode()>();

        i6 = $i1 + $i2;

        $i3 = 31 * i6;

        $r2 = r0.<com.opengamma.analytics.financial.forex.method.FXMatrix: double[][] _fxRates>;

        $i4 = staticinvoke <java.util.Arrays: int deepHashCode(java.lang.Object[])>($r2);

        i7 = $i3 + $i4;

        return i7;
    }

    public boolean equals(java.lang.Object)
    {
        com.opengamma.analytics.financial.forex.method.FXMatrix r0, r2;
        java.lang.Object r1;
        java.lang.Class $r3, $r4;
        java.util.Map $r5, $r6;
        boolean $z0, $z1;
        double[][] $r7, $r8;

        r0 := @this: com.opengamma.analytics.financial.forex.method.FXMatrix;

        r1 := @parameter0: java.lang.Object;

        if r0 != r1 goto label1;

        return 1;

     label1:
        if r1 != null goto label2;

        return 0;

     label2:
        $r3 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r4 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        if $r3 == $r4 goto label3;

        return 0;

     label3:
        r2 = (com.opengamma.analytics.financial.forex.method.FXMatrix) r1;

        $r6 = r0.<com.opengamma.analytics.financial.forex.method.FXMatrix: java.util.Map _currencies>;

        $r5 = r2.<com.opengamma.analytics.financial.forex.method.FXMatrix: java.util.Map _currencies>;

        $z0 = staticinvoke <org.apache.commons.lang.ObjectUtils: boolean equals(java.lang.Object,java.lang.Object)>($r6, $r5);

        if $z0 != 0 goto label4;

        return 0;

     label4:
        $r8 = r0.<com.opengamma.analytics.financial.forex.method.FXMatrix: double[][] _fxRates>;

        $r7 = r2.<com.opengamma.analytics.financial.forex.method.FXMatrix: double[][] _fxRates>;

        $z1 = staticinvoke <java.util.Arrays: boolean deepEquals(java.lang.Object[],java.lang.Object[])>($r8, $r7);

        if $z1 != 0 goto label5;

        return 0;

     label5:
        return 1;
    }
}
