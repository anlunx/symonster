public class org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry extends org.apache.commons.math.linear.RealVector$Entry
{
    private final org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator iter;
    final org.apache.commons.math.linear.OpenMapRealVector this$0;

    protected void <init>(org.apache.commons.math.linear.OpenMapRealVector, org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator)
    {
        org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry r0;
        org.apache.commons.math.linear.OpenMapRealVector r1;
        org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator r2;

        r0 := @this: org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry;

        r1 := @parameter0: org.apache.commons.math.linear.OpenMapRealVector;

        r2 := @parameter1: org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator;

        r0.<org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry: org.apache.commons.math.linear.OpenMapRealVector this$0> = r1;

        specialinvoke r0.<org.apache.commons.math.linear.RealVector$Entry: void <init>()>();

        r0.<org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry: org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator iter> = r2;

        return;
    }

    public double getValue()
    {
        org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry r0;
        org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator $r1;
        double $d0;

        r0 := @this: org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry;

        $r1 = r0.<org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry: org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator iter>;

        $d0 = virtualinvoke $r1.<org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator: double value()>();

        return $d0;
    }

    public void setValue(double)
    {
        org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry r0;
        double d0;
        org.apache.commons.math.linear.OpenMapRealVector $r1;
        org.apache.commons.math.util.OpenIntToDoubleHashMap $r2;
        org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator $r3;
        int $i0;

        r0 := @this: org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry;

        d0 := @parameter0: double;

        $r1 = r0.<org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry: org.apache.commons.math.linear.OpenMapRealVector this$0>;

        $r2 = staticinvoke <org.apache.commons.math.linear.OpenMapRealVector: org.apache.commons.math.util.OpenIntToDoubleHashMap access$000(org.apache.commons.math.linear.OpenMapRealVector)>($r1);

        $r3 = r0.<org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry: org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator iter>;

        $i0 = virtualinvoke $r3.<org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator: int key()>();

        virtualinvoke $r2.<org.apache.commons.math.util.OpenIntToDoubleHashMap: double put(int,double)>($i0, d0);

        return;
    }

    public int getIndex()
    {
        org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry r0;
        org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator $r1;
        int $i0;

        r0 := @this: org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry;

        $r1 = r0.<org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry: org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator iter>;

        $i0 = virtualinvoke $r1.<org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator: int key()>();

        return $i0;
    }
}
