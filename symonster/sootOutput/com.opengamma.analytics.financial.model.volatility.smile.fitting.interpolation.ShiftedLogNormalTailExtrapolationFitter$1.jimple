class com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.ShiftedLogNormalTailExtrapolationFitter$1 extends com.opengamma.analytics.math.function.Function1D
{
    final double val$forward;
    final double[] val$strike;
    final double val$timeToExpiry;
    final boolean val$isCall;
    final double[] val$prices;
    final com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.ShiftedLogNormalTailExtrapolationFitter this$0;

    void <init>(com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.ShiftedLogNormalTailExtrapolationFitter, double, double[], double, boolean, double[])
    {
        com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.ShiftedLogNormalTailExtrapolationFitter$1 r0;
        com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.ShiftedLogNormalTailExtrapolationFitter r1;
        double d0, d1;
        double[] r2, r3;
        boolean z0;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.ShiftedLogNormalTailExtrapolationFitter$1;

        r1 := @parameter0: com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.ShiftedLogNormalTailExtrapolationFitter;

        d0 := @parameter1: double;

        r2 := @parameter2: double[];

        d1 := @parameter3: double;

        z0 := @parameter4: boolean;

        r3 := @parameter5: double[];

        r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.ShiftedLogNormalTailExtrapolationFitter$1: com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.ShiftedLogNormalTailExtrapolationFitter this$0> = r1;

        r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.ShiftedLogNormalTailExtrapolationFitter$1: double val$forward> = d0;

        r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.ShiftedLogNormalTailExtrapolationFitter$1: double[] val$strike> = r2;

        r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.ShiftedLogNormalTailExtrapolationFitter$1: double val$timeToExpiry> = d1;

        r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.ShiftedLogNormalTailExtrapolationFitter$1: boolean val$isCall> = z0;

        r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.ShiftedLogNormalTailExtrapolationFitter$1: double[] val$prices> = r3;

        specialinvoke r0.<com.opengamma.analytics.math.function.Function1D: void <init>()>();

        return;
    }

    public com.opengamma.analytics.math.matrix.DoubleMatrix1D evaluate(com.opengamma.analytics.math.matrix.DoubleMatrix1D)
    {
        com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.ShiftedLogNormalTailExtrapolationFitter$1 r0;
        com.opengamma.analytics.math.matrix.DoubleMatrix1D r1, $r8;
        double d0, d1, d2, d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17;
        int[] $r2, $r4;
        java.lang.Double $r3, $r5;
        double[] $r6, $r7, $r9, $r10, $r11, $r12, $r13;
        boolean $z0, $z1;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.ShiftedLogNormalTailExtrapolationFitter$1;

        r1 := @parameter0: com.opengamma.analytics.math.matrix.DoubleMatrix1D;

        $r2 = newarray (int)[1];

        $r2[0] = 0;

        $r3 = virtualinvoke r1.<com.opengamma.analytics.math.matrix.DoubleMatrix1D: java.lang.Double getEntry(int[])>($r2);

        d0 = virtualinvoke $r3.<java.lang.Double: double doubleValue()>();

        $r4 = newarray (int)[1];

        $r4[0] = 1;

        $r5 = virtualinvoke r1.<com.opengamma.analytics.math.matrix.DoubleMatrix1D: java.lang.Double getEntry(int[])>($r4);

        d1 = virtualinvoke $r5.<java.lang.Double: double doubleValue()>();

        $d6 = r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.ShiftedLogNormalTailExtrapolationFitter$1: double val$forward>;

        $r6 = r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.ShiftedLogNormalTailExtrapolationFitter$1: double[] val$strike>;

        $d5 = $r6[0];

        $d4 = r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.ShiftedLogNormalTailExtrapolationFitter$1: double val$timeToExpiry>;

        $z0 = r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.ShiftedLogNormalTailExtrapolationFitter$1: boolean val$isCall>;

        d2 = staticinvoke <com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.ShiftedLogNormalTailExtrapolation: double price(double,double,double,boolean,double,double)>($d6, $d5, $d4, $z0, d0, d1);

        $d9 = r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.ShiftedLogNormalTailExtrapolationFitter$1: double val$forward>;

        $r7 = r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.ShiftedLogNormalTailExtrapolationFitter$1: double[] val$strike>;

        $d8 = $r7[1];

        $d7 = r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.ShiftedLogNormalTailExtrapolationFitter$1: double val$timeToExpiry>;

        $z1 = r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.ShiftedLogNormalTailExtrapolationFitter$1: boolean val$isCall>;

        d3 = staticinvoke <com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.ShiftedLogNormalTailExtrapolation: double price(double,double,double,boolean,double,double)>($d9, $d8, $d7, $z1, d0, d1);

        $r8 = new com.opengamma.analytics.math.matrix.DoubleMatrix1D;

        $r9 = newarray (double)[2];

        $r10 = r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.ShiftedLogNormalTailExtrapolationFitter$1: double[] val$prices>;

        $d10 = $r10[0];

        $d12 = d2 - $d10;

        $r11 = r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.ShiftedLogNormalTailExtrapolationFitter$1: double[] val$prices>;

        $d11 = $r11[0];

        $d13 = $d12 / $d11;

        $r9[0] = $d13;

        $r12 = r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.ShiftedLogNormalTailExtrapolationFitter$1: double[] val$prices>;

        $d14 = $r12[1];

        $d16 = d3 - $d14;

        $r13 = r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.ShiftedLogNormalTailExtrapolationFitter$1: double[] val$prices>;

        $d15 = $r13[1];

        $d17 = $d16 / $d15;

        $r9[1] = $d17;

        specialinvoke $r8.<com.opengamma.analytics.math.matrix.DoubleMatrix1D: void <init>(double[])>($r9);

        return $r8;
    }

    public volatile java.lang.Object evaluate(java.lang.Object)
    {
        com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.ShiftedLogNormalTailExtrapolationFitter$1 r0;
        java.lang.Object r1;
        com.opengamma.analytics.math.matrix.DoubleMatrix1D $r2, $r3;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.ShiftedLogNormalTailExtrapolationFitter$1;

        r1 := @parameter0: java.lang.Object;

        $r2 = (com.opengamma.analytics.math.matrix.DoubleMatrix1D) r1;

        $r3 = virtualinvoke r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.ShiftedLogNormalTailExtrapolationFitter$1: com.opengamma.analytics.math.matrix.DoubleMatrix1D evaluate(com.opengamma.analytics.math.matrix.DoubleMatrix1D)>($r2);

        return $r3;
    }
}
