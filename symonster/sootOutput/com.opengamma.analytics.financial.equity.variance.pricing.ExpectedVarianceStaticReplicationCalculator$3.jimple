class com.opengamma.analytics.financial.equity.variance.pricing.ExpectedVarianceStaticReplicationCalculator$3 extends com.opengamma.analytics.math.function.Function1D
{
    final com.opengamma.analytics.financial.model.volatility.surface.BlackVolatilitySurfaceDelta val$surface;
    final double val$expiry;
    final double val$rootT;
    final double val$forward;
    final com.opengamma.analytics.financial.equity.variance.pricing.ExpectedVarianceStaticReplicationCalculator this$0;

    void <init>(com.opengamma.analytics.financial.equity.variance.pricing.ExpectedVarianceStaticReplicationCalculator, com.opengamma.analytics.financial.model.volatility.surface.BlackVolatilitySurfaceDelta, double, double, double)
    {
        com.opengamma.analytics.financial.equity.variance.pricing.ExpectedVarianceStaticReplicationCalculator$3 r0;
        com.opengamma.analytics.financial.equity.variance.pricing.ExpectedVarianceStaticReplicationCalculator r1;
        com.opengamma.analytics.financial.model.volatility.surface.BlackVolatilitySurfaceDelta r2;
        double d0, d1, d2;

        r0 := @this: com.opengamma.analytics.financial.equity.variance.pricing.ExpectedVarianceStaticReplicationCalculator$3;

        r1 := @parameter0: com.opengamma.analytics.financial.equity.variance.pricing.ExpectedVarianceStaticReplicationCalculator;

        r2 := @parameter1: com.opengamma.analytics.financial.model.volatility.surface.BlackVolatilitySurfaceDelta;

        d0 := @parameter2: double;

        d1 := @parameter3: double;

        d2 := @parameter4: double;

        r0.<com.opengamma.analytics.financial.equity.variance.pricing.ExpectedVarianceStaticReplicationCalculator$3: com.opengamma.analytics.financial.equity.variance.pricing.ExpectedVarianceStaticReplicationCalculator this$0> = r1;

        r0.<com.opengamma.analytics.financial.equity.variance.pricing.ExpectedVarianceStaticReplicationCalculator$3: com.opengamma.analytics.financial.model.volatility.surface.BlackVolatilitySurfaceDelta val$surface> = r2;

        r0.<com.opengamma.analytics.financial.equity.variance.pricing.ExpectedVarianceStaticReplicationCalculator$3: double val$expiry> = d0;

        r0.<com.opengamma.analytics.financial.equity.variance.pricing.ExpectedVarianceStaticReplicationCalculator$3: double val$rootT> = d1;

        r0.<com.opengamma.analytics.financial.equity.variance.pricing.ExpectedVarianceStaticReplicationCalculator$3: double val$forward> = d2;

        specialinvoke r0.<com.opengamma.analytics.math.function.Function1D: void <init>()>();

        return;
    }

    public java.lang.Double evaluate(java.lang.Double)
    {
        com.opengamma.analytics.financial.equity.variance.pricing.ExpectedVarianceStaticReplicationCalculator$3 r0;
        java.lang.Double r1, $r6, $r7, $r12;
        double d0, d1, d2, d3, d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21, $d22, $d23, $d24, $d25, $d26, $d27, $d28, $d29, $d30, $d31, $d32, $d33, $d34, $d35, $d36, $d37, $d38, $d39, d40, d41, d42, d43, d44, d45, d46, $d47, $d48, $d49, $d50, $d51, $d52, $d53, $d54, $d55, $d56, $d57, $d58;
        boolean z0, $z1;
        byte b0, $b1, $b2, $b3, $b4;
        com.opengamma.analytics.financial.model.volatility.surface.BlackVolatilitySurfaceDelta $r2, $r3, $r4, $r8, $r9;
        com.opengamma.analytics.math.statistics.distribution.ProbabilityDistribution $r5, $r10, $r11;

        r0 := @this: com.opengamma.analytics.financial.equity.variance.pricing.ExpectedVarianceStaticReplicationCalculator$3;

        r1 := @parameter0: java.lang.Double;

        $r2 = r0.<com.opengamma.analytics.financial.equity.variance.pricing.ExpectedVarianceStaticReplicationCalculator$3: com.opengamma.analytics.financial.model.volatility.surface.BlackVolatilitySurfaceDelta val$surface>;

        $d5 = r0.<com.opengamma.analytics.financial.equity.variance.pricing.ExpectedVarianceStaticReplicationCalculator$3: double val$expiry>;

        $d6 = virtualinvoke r1.<java.lang.Double: double doubleValue()>();

        d0 = virtualinvoke $r2.<com.opengamma.analytics.financial.model.volatility.surface.BlackVolatilitySurfaceDelta: double getVolatilityForDelta(double,double)>($d5, $d6);

        $d7 = r0.<com.opengamma.analytics.financial.equity.variance.pricing.ExpectedVarianceStaticReplicationCalculator$3: double val$rootT>;

        d1 = d0 * $d7;

        $d8 = virtualinvoke r1.<java.lang.Double: double doubleValue()>();

        $d10 = r0.<com.opengamma.analytics.financial.equity.variance.pricing.ExpectedVarianceStaticReplicationCalculator$3: double val$forward>;

        $d9 = r0.<com.opengamma.analytics.financial.equity.variance.pricing.ExpectedVarianceStaticReplicationCalculator$3: double val$expiry>;

        d2 = staticinvoke <com.opengamma.analytics.financial.model.volatility.BlackFormulaRepository: double impliedStrike(double,boolean,double,double,double)>($d8, 1, $d10, $d9, d0);

        $d11 = r0.<com.opengamma.analytics.financial.equity.variance.pricing.ExpectedVarianceStaticReplicationCalculator$3: double val$forward>;

        $b1 = d2 cmpl $d11;

        if $b1 < 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        z0 = $z1;

        if $z1 == 0 goto label3;

        $b4 = 1;

        goto label4;

     label3:
        $b4 = -1;

     label4:
        b0 = $b4;

        $d12 = virtualinvoke r1.<java.lang.Double: double doubleValue()>();

        $b2 = $d12 cmpg 1.0E-8;

        if $b2 >= 0 goto label5;

        $r9 = r0.<com.opengamma.analytics.financial.equity.variance.pricing.ExpectedVarianceStaticReplicationCalculator$3: com.opengamma.analytics.financial.model.volatility.surface.BlackVolatilitySurfaceDelta val$surface>;

        $d36 = r0.<com.opengamma.analytics.financial.equity.variance.pricing.ExpectedVarianceStaticReplicationCalculator$3: double val$expiry>;

        $d37 = virtualinvoke r1.<java.lang.Double: double doubleValue()>();

        $d38 = $d37 + 1.0E-8;

        d40 = virtualinvoke $r9.<com.opengamma.analytics.financial.model.volatility.surface.BlackVolatilitySurfaceDelta: double getVolatilityForDelta(double,double)>($d36, $d38);

        $d39 = d40 - d0;

        d41 = $d39 / 1.0E-8;

        goto label7;

     label5:
        $d13 = virtualinvoke r1.<java.lang.Double: double doubleValue()>();

        $b3 = $d13 cmpl 0.99999999;

        if $b3 <= 0 goto label6;

        $r8 = r0.<com.opengamma.analytics.financial.equity.variance.pricing.ExpectedVarianceStaticReplicationCalculator$3: com.opengamma.analytics.financial.model.volatility.surface.BlackVolatilitySurfaceDelta val$surface>;

        $d32 = r0.<com.opengamma.analytics.financial.equity.variance.pricing.ExpectedVarianceStaticReplicationCalculator$3: double val$expiry>;

        $d33 = virtualinvoke r1.<java.lang.Double: double doubleValue()>();

        $d34 = $d33 - 1.0E-8;

        d42 = virtualinvoke $r8.<com.opengamma.analytics.financial.model.volatility.surface.BlackVolatilitySurfaceDelta: double getVolatilityForDelta(double,double)>($d32, $d34);

        $d35 = d0 - d42;

        d41 = $d35 / 1.0E-8;

        goto label7;

     label6:
        $r3 = r0.<com.opengamma.analytics.financial.equity.variance.pricing.ExpectedVarianceStaticReplicationCalculator$3: com.opengamma.analytics.financial.model.volatility.surface.BlackVolatilitySurfaceDelta val$surface>;

        $d14 = r0.<com.opengamma.analytics.financial.equity.variance.pricing.ExpectedVarianceStaticReplicationCalculator$3: double val$expiry>;

        $d15 = virtualinvoke r1.<java.lang.Double: double doubleValue()>();

        $d16 = $d15 + 1.0E-8;

        d43 = virtualinvoke $r3.<com.opengamma.analytics.financial.model.volatility.surface.BlackVolatilitySurfaceDelta: double getVolatilityForDelta(double,double)>($d14, $d16);

        $r4 = r0.<com.opengamma.analytics.financial.equity.variance.pricing.ExpectedVarianceStaticReplicationCalculator$3: com.opengamma.analytics.financial.model.volatility.surface.BlackVolatilitySurfaceDelta val$surface>;

        $d17 = r0.<com.opengamma.analytics.financial.equity.variance.pricing.ExpectedVarianceStaticReplicationCalculator$3: double val$expiry>;

        $d18 = virtualinvoke r1.<java.lang.Double: double doubleValue()>();

        $d19 = $d18 - 1.0E-8;

        d44 = virtualinvoke $r4.<com.opengamma.analytics.financial.model.volatility.surface.BlackVolatilitySurfaceDelta: double getVolatilityForDelta(double,double)>($d17, $d19);

        $d20 = d43 - d44;

        $d21 = $d20 / 2.0;

        d41 = $d21 / 1.0E-8;

     label7:
        $r10 = staticinvoke <com.opengamma.analytics.financial.equity.variance.pricing.ExpectedVarianceStaticReplicationCalculator: com.opengamma.analytics.math.statistics.distribution.ProbabilityDistribution access$000()>();

        d45 = interfaceinvoke $r10.<com.opengamma.analytics.math.statistics.distribution.ProbabilityDistribution: double getInverseCDF(java.lang.Object)>(r1);

        d46 = d45 - d1;

        $d47 = r0.<com.opengamma.analytics.financial.equity.variance.pricing.ExpectedVarianceStaticReplicationCalculator$3: double val$rootT>;

        $d48 = d0 * $d47;

        $r11 = staticinvoke <com.opengamma.analytics.financial.equity.variance.pricing.ExpectedVarianceStaticReplicationCalculator: com.opengamma.analytics.math.statistics.distribution.ProbabilityDistribution access$000()>();

        $r12 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d45);

        $d49 = interfaceinvoke $r11.<com.opengamma.analytics.math.statistics.distribution.ProbabilityDistribution: double getPDF(java.lang.Object)>($r12);

        $d50 = $d48 / $d49;

        $d51 = r0.<com.opengamma.analytics.financial.equity.variance.pricing.ExpectedVarianceStaticReplicationCalculator$3: double val$rootT>;

        $d52 = d45 * $d51;

        $d53 = r0.<com.opengamma.analytics.financial.equity.variance.pricing.ExpectedVarianceStaticReplicationCalculator$3: double val$expiry>;

        $d54 = d0 * $d53;

        $d55 = $d52 - $d54;

        $d56 = d41 * $d55;

        $d57 = $d50 + $d56;

        d3 = $d57 / d2;

        $d22 = (double) b0;

        $d23 = r0.<com.opengamma.analytics.financial.equity.variance.pricing.ExpectedVarianceStaticReplicationCalculator$3: double val$forward>;

        if z0 == 0 goto label8;

        $d58 = virtualinvoke r1.<java.lang.Double: double doubleValue()>();

        goto label9;

     label8:
        $d24 = virtualinvoke r1.<java.lang.Double: double doubleValue()>();

        $d58 = 1.0 - $d24;

     label9:
        $d25 = $d23 * $d58;

        $r5 = staticinvoke <com.opengamma.analytics.financial.equity.variance.pricing.ExpectedVarianceStaticReplicationCalculator: com.opengamma.analytics.math.statistics.distribution.ProbabilityDistribution access$000()>();

        $d26 = (double) b0;

        $d27 = $d26 * d46;

        $r6 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d27);

        $d28 = interfaceinvoke $r5.<com.opengamma.analytics.math.statistics.distribution.ProbabilityDistribution: double getCDF(java.lang.Object)>($r6);

        $d29 = d2 * $d28;

        $d30 = $d25 - $d29;

        d4 = $d22 * $d30;

        $d31 = d3 * d4;

        $r7 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d31);

        return $r7;
    }

    public volatile java.lang.Object evaluate(java.lang.Object)
    {
        com.opengamma.analytics.financial.equity.variance.pricing.ExpectedVarianceStaticReplicationCalculator$3 r0;
        java.lang.Object r1;
        java.lang.Double $r2, $r3;

        r0 := @this: com.opengamma.analytics.financial.equity.variance.pricing.ExpectedVarianceStaticReplicationCalculator$3;

        r1 := @parameter0: java.lang.Object;

        $r2 = (java.lang.Double) r1;

        $r3 = virtualinvoke r0.<com.opengamma.analytics.financial.equity.variance.pricing.ExpectedVarianceStaticReplicationCalculator$3: java.lang.Double evaluate(java.lang.Double)>($r2);

        return $r3;
    }
}
