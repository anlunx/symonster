public class com.opengamma.analytics.financial.calculator.ParameterSensitivityWeightMatrixCalculator extends java.lang.Object
{
    private static final org.slf4j.Logger s_logger;
    private static final double TOL;

    public void <init>()
    {
        com.opengamma.analytics.financial.calculator.ParameterSensitivityWeightMatrixCalculator r0;

        r0 := @this: com.opengamma.analytics.financial.calculator.ParameterSensitivityWeightMatrixCalculator;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public com.opengamma.analytics.math.matrix.DoubleMatrix2D projectCurveNodes(com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount, java.util.LinkedHashSet, double[])
    {
        com.opengamma.analytics.financial.calculator.ParameterSensitivityWeightMatrixCalculator r0;
        com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount r1;
        java.util.LinkedHashSet r2;
        double[] r3, $r13, $r15;
        int i0, i1, i2, $i3, $i4, $i5, $i6, i7, i8, i9, i10, i11, i12, i13, i14;
        java.util.Iterator r4;
        com.opengamma.analytics.math.matrix.DoubleMatrix2D[] r5;
        com.opengamma.analytics.math.matrix.DoubleMatrix2D $r9, $r10, $r11, $r12, $r18, $r19, $r20;
        double[][] $r14, r21;
        double $d0;
        java.lang.Object $r16;
        com.opengamma.util.tuple.Pair $r17;
        boolean $z0;

        r0 := @this: com.opengamma.analytics.financial.calculator.ParameterSensitivityWeightMatrixCalculator;

        r1 := @parameter0: com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount;

        r2 := @parameter1: java.util.LinkedHashSet;

        r3 := @parameter2: double[];

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "curves");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, "order");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r3, "objNodes");

        i0 = virtualinvoke r2.<java.util.LinkedHashSet: int size()>();

        if i0 <= 0 goto label01;

        $z0 = 1;

        goto label02;

     label01:
        $z0 = 0;

     label02:
        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z0, "order should not be empty");

        r4 = virtualinvoke r2.<java.util.LinkedHashSet: java.util.Iterator iterator()>();

        r5 = newarray (com.opengamma.analytics.math.matrix.DoubleMatrix2D)[i0];

        i7 = 0;

        i8 = 0;

        i9 = 0;

     label03:
        if i9 >= i0 goto label04;

        $r16 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        $r17 = (com.opengamma.util.tuple.Pair) $r16;

        $r18 = specialinvoke r0.<com.opengamma.analytics.financial.calculator.ParameterSensitivityWeightMatrixCalculator: com.opengamma.analytics.math.matrix.DoubleMatrix2D projectSingleCurveNodes(com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount,com.opengamma.util.tuple.Pair,double[])>(r1, $r17, r3);

        r5[i9] = $r18;

        $r19 = r5[i9];

        $i5 = virtualinvoke $r19.<com.opengamma.analytics.math.matrix.DoubleMatrix2D: int getNumberOfRows()>();

        i7 = i7 + $i5;

        $r20 = r5[i9];

        $i6 = virtualinvoke $r20.<com.opengamma.analytics.math.matrix.DoubleMatrix2D: int getNumberOfColumns()>();

        i8 = i8 + $i6;

        i9 = i9 + 1;

        goto label03;

     label04:
        r21 = newmultiarray (double)[i7][i8];

        i10 = 0;

        i11 = 0;

        i12 = 0;

     label05:
        if i12 >= i0 goto label10;

        $r10 = r5[i12];

        i1 = virtualinvoke $r10.<com.opengamma.analytics.math.matrix.DoubleMatrix2D: int getNumberOfRows()>();

        $r11 = r5[i12];

        i2 = virtualinvoke $r11.<com.opengamma.analytics.math.matrix.DoubleMatrix2D: int getNumberOfColumns()>();

        i13 = 0;

     label06:
        if i13 >= i1 goto label09;

        i14 = 0;

     label07:
        if i14 >= i2 goto label08;

        $i3 = i13 + i10;

        $r13 = r21[$i3];

        $i4 = i14 + i11;

        $r12 = r5[i12];

        $r14 = virtualinvoke $r12.<com.opengamma.analytics.math.matrix.DoubleMatrix2D: double[][] getData()>();

        $r15 = $r14[i13];

        $d0 = $r15[i14];

        $r13[$i4] = $d0;

        i14 = i14 + 1;

        goto label07;

     label08:
        i13 = i13 + 1;

        goto label06;

     label09:
        i10 = i10 + i1;

        i11 = i11 + i2;

        i12 = i12 + 1;

        goto label05;

     label10:
        $r9 = new com.opengamma.analytics.math.matrix.DoubleMatrix2D;

        specialinvoke $r9.<com.opengamma.analytics.math.matrix.DoubleMatrix2D: void <init>(double[][])>(r21);

        return $r9;
    }

    public com.opengamma.analytics.math.matrix.DoubleMatrix2D projectCurvesAndNodes(com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount, java.util.LinkedHashSet, double[])
    {
        com.opengamma.analytics.financial.calculator.ParameterSensitivityWeightMatrixCalculator r0;
        com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount r1;
        java.util.LinkedHashSet r2;
        double[] r3, $r14, $r16;
        int i0, i1, $i2, $i3, $i4, $i5, i6, i7, i8, i9, i10, i11, i12, i13;
        java.util.Iterator r4;
        com.opengamma.analytics.math.matrix.DoubleMatrix2D[] r5;
        double[][] r6, $r15;
        com.opengamma.analytics.math.matrix.DoubleMatrix2D $r10, $r11, $r12, $r13, $r17, $r20, $r21;
        double $d0;
        java.lang.Object $r18;
        com.opengamma.util.tuple.Pair $r19;
        boolean $z0, $z1;

        r0 := @this: com.opengamma.analytics.financial.calculator.ParameterSensitivityWeightMatrixCalculator;

        r1 := @parameter0: com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount;

        r2 := @parameter1: java.util.LinkedHashSet;

        r3 := @parameter2: double[];

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "curves");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, "order");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r3, "objNodes");

        i0 = virtualinvoke r2.<java.util.LinkedHashSet: int size()>();

        if i0 <= 0 goto label01;

        $z0 = 1;

        goto label02;

     label01:
        $z0 = 0;

     label02:
        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z0, "order should not be empty");

        r4 = virtualinvoke r2.<java.util.LinkedHashSet: java.util.Iterator iterator()>();

        r5 = newarray (com.opengamma.analytics.math.matrix.DoubleMatrix2D)[i0];

        i6 = 0;

        i7 = 0;

     label03:
        if i7 >= i0 goto label04;

        $r18 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        $r19 = (com.opengamma.util.tuple.Pair) $r18;

        $r20 = specialinvoke r0.<com.opengamma.analytics.financial.calculator.ParameterSensitivityWeightMatrixCalculator: com.opengamma.analytics.math.matrix.DoubleMatrix2D projectSingleCurveNodes(com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount,com.opengamma.util.tuple.Pair,double[])>(r1, $r19, r3);

        r5[i7] = $r20;

        $r21 = r5[i7];

        $i5 = virtualinvoke $r21.<com.opengamma.analytics.math.matrix.DoubleMatrix2D: int getNumberOfColumns()>();

        i6 = i6 + $i5;

        i7 = i7 + 1;

        goto label03;

     label04:
        i8 = 0;

     label05:
        if i8 >= i0 goto label08;

        $i3 = lengthof r3;

        $r17 = r5[i8];

        $i4 = virtualinvoke $r17.<com.opengamma.analytics.math.matrix.DoubleMatrix2D: int getNumberOfRows()>();

        if $i3 != $i4 goto label06;

        $z1 = 1;

        goto label07;

     label06:
        $z1 = 0;

     label07:
        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z1, "All of the elements in objNodes should be found in the curves for this method");

        i8 = i8 + 1;

        goto label05;

     label08:
        $r10 = r5[0];

        i9 = virtualinvoke $r10.<com.opengamma.analytics.math.matrix.DoubleMatrix2D: int getNumberOfRows()>();

        r6 = newmultiarray (double)[i9][i6];

        i10 = 0;

        i11 = 0;

     label09:
        if i11 >= i0 goto label14;

        $r12 = r5[i11];

        i1 = virtualinvoke $r12.<com.opengamma.analytics.math.matrix.DoubleMatrix2D: int getNumberOfColumns()>();

        i12 = 0;

     label10:
        if i12 >= i9 goto label13;

        i13 = 0;

     label11:
        if i13 >= i1 goto label12;

        $r14 = r6[i12];

        $i2 = i13 + i10;

        $r13 = r5[i11];

        $r15 = virtualinvoke $r13.<com.opengamma.analytics.math.matrix.DoubleMatrix2D: double[][] getData()>();

        $r16 = $r15[i12];

        $d0 = $r16[i13];

        $r14[$i2] = $d0;

        i13 = i13 + 1;

        goto label11;

     label12:
        i12 = i12 + 1;

        goto label10;

     label13:
        i10 = i10 + i1;

        i11 = i11 + 1;

        goto label09;

     label14:
        $r11 = new com.opengamma.analytics.math.matrix.DoubleMatrix2D;

        specialinvoke $r11.<com.opengamma.analytics.math.matrix.DoubleMatrix2D: void <init>(double[][])>(r6);

        return $r11;
    }

    public com.opengamma.analytics.math.matrix.DoubleMatrix2D reduceCurveNodes(com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount, java.util.LinkedHashSet, double[])
    {
        com.opengamma.analytics.financial.calculator.ParameterSensitivityWeightMatrixCalculator r0;
        com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount r1;
        java.util.LinkedHashSet r2;
        double[] r3, $r11, $r13, $r14;
        int i0, $i1, i2, i3, i4, i5, i6, i7;
        com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve[] r4;
        java.util.Iterator r5;
        double d0;
        it.unimi.dsi.fastutil.doubles.DoubleArrayList $r10;
        com.opengamma.analytics.math.matrix.DoubleMatrix2D $r12;
        java.lang.Object $r15, $r17;
        com.opengamma.util.tuple.Pair $r16;
        java.lang.String $r18;
        com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve $r19, $r20;
        java.lang.Double $r21;
        boolean $z1;
        java.lang.Double[] r22;
        int[] r24;
        double[][] r25;

        r0 := @this: com.opengamma.analytics.financial.calculator.ParameterSensitivityWeightMatrixCalculator;

        r1 := @parameter0: com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount;

        r2 := @parameter1: java.util.LinkedHashSet;

        r3 := @parameter2: double[];

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "curves");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, "order");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r3, "objNodes");

        i0 = virtualinvoke r2.<java.util.LinkedHashSet: int size()>();

        if i0 <= 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z1, "order should not be empty");

        r4 = newarray (com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve)[i0];

        r5 = virtualinvoke r2.<java.util.LinkedHashSet: java.util.Iterator iterator()>();

        $r10 = new it.unimi.dsi.fastutil.doubles.DoubleArrayList;

        specialinvoke $r10.<it.unimi.dsi.fastutil.doubles.DoubleArrayList: void <init>()>();

        i2 = 0;

     label3:
        if i2 >= i0 goto label6;

        $r15 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>();

        $r16 = (com.opengamma.util.tuple.Pair) $r15;

        $r17 = virtualinvoke $r16.<com.opengamma.util.tuple.Pair: java.lang.Object getFirst()>();

        $r18 = (java.lang.String) $r17;

        $r19 = virtualinvoke r1.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount: com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve getCurve(java.lang.String)>($r18);

        r4[i2] = $r19;

        $r20 = r4[i2];

        r22 = specialinvoke r0.<com.opengamma.analytics.financial.calculator.ParameterSensitivityWeightMatrixCalculator: java.lang.Double[] getNodes(com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve)>($r20);

        i3 = lengthof r22;

        i4 = 0;

     label4:
        if i4 >= i3 goto label5;

        $r21 = r22[i4];

        d0 = virtualinvoke $r21.<java.lang.Double: double doubleValue()>();

        virtualinvoke $r10.<it.unimi.dsi.fastutil.doubles.DoubleArrayList: boolean add(double)>(d0);

        i4 = i4 + 1;

        goto label4;

     label5:
        i2 = i2 + 1;

        goto label3;

     label6:
        i5 = virtualinvoke $r10.<it.unimi.dsi.fastutil.doubles.DoubleArrayList: int size()>();

        $r11 = virtualinvoke $r10.<it.unimi.dsi.fastutil.doubles.DoubleArrayList: double[] toDoubleArray()>();

        r24 = specialinvoke r0.<com.opengamma.analytics.financial.calculator.ParameterSensitivityWeightMatrixCalculator: int[] toPositions(double[],double[])>(r3, $r11);

        i6 = lengthof r24;

        r25 = newmultiarray (double)[i6][i5];

        i7 = 0;

     label7:
        if i7 >= i6 goto label8;

        $r13 = r25[i7];

        staticinvoke <java.util.Arrays: void fill(double[],double)>($r13, 0.0);

        $r14 = r25[i7];

        $i1 = r24[i7];

        $r14[$i1] = 1.0;

        i7 = i7 + 1;

        goto label7;

     label8:
        $r12 = new com.opengamma.analytics.math.matrix.DoubleMatrix2D;

        specialinvoke $r12.<com.opengamma.analytics.math.matrix.DoubleMatrix2D: void <init>(double[][])>(r25);

        return $r12;
    }

    public com.opengamma.analytics.math.matrix.DoubleMatrix2D reduceCurveNodes(com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve[], double[])
    {
        com.opengamma.analytics.financial.calculator.ParameterSensitivityWeightMatrixCalculator r0;
        com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve[] r1;
        double[] r2, $r7, $r9, $r10;
        int i0, $i1, i2, i3, i4, i5, i6, i7;
        double d0;
        it.unimi.dsi.fastutil.doubles.DoubleArrayList $r6;
        com.opengamma.analytics.math.matrix.DoubleMatrix2D $r8;
        com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve $r11;
        java.lang.Double $r12;
        java.lang.Double[] r13;
        int[] r15;
        double[][] r16;

        r0 := @this: com.opengamma.analytics.financial.calculator.ParameterSensitivityWeightMatrixCalculator;

        r1 := @parameter0: com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve[];

        r2 := @parameter1: double[];

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "curves");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, "objNodes");

        i0 = lengthof r1;

        $r6 = new it.unimi.dsi.fastutil.doubles.DoubleArrayList;

        specialinvoke $r6.<it.unimi.dsi.fastutil.doubles.DoubleArrayList: void <init>()>();

        i2 = 0;

     label1:
        if i2 >= i0 goto label4;

        $r11 = r1[i2];

        r13 = specialinvoke r0.<com.opengamma.analytics.financial.calculator.ParameterSensitivityWeightMatrixCalculator: java.lang.Double[] getNodes(com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve)>($r11);

        i3 = lengthof r13;

        i4 = 0;

     label2:
        if i4 >= i3 goto label3;

        $r12 = r13[i4];

        d0 = virtualinvoke $r12.<java.lang.Double: double doubleValue()>();

        virtualinvoke $r6.<it.unimi.dsi.fastutil.doubles.DoubleArrayList: boolean add(double)>(d0);

        i4 = i4 + 1;

        goto label2;

     label3:
        i2 = i2 + 1;

        goto label1;

     label4:
        i5 = virtualinvoke $r6.<it.unimi.dsi.fastutil.doubles.DoubleArrayList: int size()>();

        $r7 = virtualinvoke $r6.<it.unimi.dsi.fastutil.doubles.DoubleArrayList: double[] toDoubleArray()>();

        r15 = specialinvoke r0.<com.opengamma.analytics.financial.calculator.ParameterSensitivityWeightMatrixCalculator: int[] toPositions(double[],double[])>(r2, $r7);

        i6 = lengthof r15;

        r16 = newmultiarray (double)[i6][i5];

        i7 = 0;

     label5:
        if i7 >= i6 goto label6;

        $r9 = r16[i7];

        staticinvoke <java.util.Arrays: void fill(double[],double)>($r9, 0.0);

        $r10 = r16[i7];

        $i1 = r15[i7];

        $r10[$i1] = 1.0;

        i7 = i7 + 1;

        goto label5;

     label6:
        $r8 = new com.opengamma.analytics.math.matrix.DoubleMatrix2D;

        specialinvoke $r8.<com.opengamma.analytics.math.matrix.DoubleMatrix2D: void <init>(double[][])>(r16);

        return $r8;
    }

    public com.opengamma.analytics.math.matrix.DoubleMatrix2D reduceCurveNodes(double[], double[])
    {
        com.opengamma.analytics.financial.calculator.ParameterSensitivityWeightMatrixCalculator r0;
        double[] r1, r2, $r8, $r9;
        int i0, i1, $i2, i3;
        int[] r3;
        double[][] r4;
        com.opengamma.analytics.math.matrix.DoubleMatrix2D $r7;

        r0 := @this: com.opengamma.analytics.financial.calculator.ParameterSensitivityWeightMatrixCalculator;

        r1 := @parameter0: double[];

        r2 := @parameter1: double[];

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "totalNodes");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, "objNodes");

        i0 = lengthof r1;

        r3 = specialinvoke r0.<com.opengamma.analytics.financial.calculator.ParameterSensitivityWeightMatrixCalculator: int[] toPositions(double[],double[])>(r2, r1);

        i1 = lengthof r3;

        r4 = newmultiarray (double)[i1][i0];

        i3 = 0;

     label1:
        if i3 >= i1 goto label2;

        $r8 = r4[i3];

        staticinvoke <java.util.Arrays: void fill(double[],double)>($r8, 0.0);

        $r9 = r4[i3];

        $i2 = r3[i3];

        $r9[$i2] = 1.0;

        i3 = i3 + 1;

        goto label1;

     label2:
        $r7 = new com.opengamma.analytics.math.matrix.DoubleMatrix2D;

        specialinvoke $r7.<com.opengamma.analytics.math.matrix.DoubleMatrix2D: void <init>(double[][])>(r4);

        return $r7;
    }

    private com.opengamma.analytics.math.matrix.DoubleMatrix2D projectSingleCurveNodes(com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount, com.opengamma.util.tuple.Pair, double[])
    {
        com.opengamma.analytics.financial.calculator.ParameterSensitivityWeightMatrixCalculator r0;
        com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount r1;
        com.opengamma.util.tuple.Pair r2;
        double[] r3, $r10, $r11, $r13, $r14, $r15, $r16, $r17;
        com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve r4;
        java.lang.Double[] r5;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, i12, i13, i14, i15, i16, i17;
        int[] r6;
        double[][] r7;
        java.lang.Object $r8;
        java.lang.String $r9;
        com.opengamma.analytics.math.matrix.DoubleMatrix2D $r12, $r18;

        r0 := @this: com.opengamma.analytics.financial.calculator.ParameterSensitivityWeightMatrixCalculator;

        r1 := @parameter0: com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount;

        r2 := @parameter1: com.opengamma.util.tuple.Pair;

        r3 := @parameter2: double[];

        $r8 = virtualinvoke r2.<com.opengamma.util.tuple.Pair: java.lang.Object getFirst()>();

        $r9 = (java.lang.String) $r8;

        r4 = virtualinvoke r1.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount: com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve getCurve(java.lang.String)>($r9);

        r5 = specialinvoke r0.<com.opengamma.analytics.financial.calculator.ParameterSensitivityWeightMatrixCalculator: java.lang.Double[] getNodes(com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve)>(r4);

        i0 = lengthof r5;

        r6 = specialinvoke r0.<com.opengamma.analytics.financial.calculator.ParameterSensitivityWeightMatrixCalculator: int[] toPositions(double[],java.lang.Double[])>(r3, r5);

        staticinvoke <java.util.Arrays: void sort(int[])>(r6);

        i1 = lengthof r6;

        r7 = newmultiarray (double)[i1][i0];

        if i1 != 1 goto label1;

        $r17 = r7[0];

        staticinvoke <java.util.Arrays: void fill(double[],double)>($r17, 1.0);

        $r18 = new com.opengamma.analytics.math.matrix.DoubleMatrix2D;

        specialinvoke $r18.<com.opengamma.analytics.math.matrix.DoubleMatrix2D: void <init>(double[][])>(r7);

        return $r18;

     label1:
        i12 = 1;

     label2:
        $i3 = i1 - 1;

        if i12 >= $i3 goto label5;

        $r15 = r7[i12];

        staticinvoke <java.util.Arrays: void fill(double[],double)>($r15, 0.0);

        $i10 = i12 - 1;

        i13 = r6[$i10];

        i14 = i13;

     label3:
        $i11 = r6[i12];

        if i14 >= $i11 goto label4;

        i2 = i14 + 1;

        $r16 = r7[i12];

        $r16[i2] = 1.0;

        i14 = i14 + 1;

        goto label3;

     label4:
        i12 = i12 + 1;

        goto label2;

     label5:
        $r10 = r7[0];

        staticinvoke <java.util.Arrays: void fill(double[],double)>($r10, 0.0);

        i15 = 0;

     label6:
        $i4 = r6[0];

        $i5 = $i4 + 1;

        if i15 >= $i5 goto label7;

        $r14 = r7[0];

        $r14[i15] = 1.0;

        i15 = i15 + 1;

        goto label6;

     label7:
        $i6 = i1 - 1;

        $r11 = r7[$i6];

        staticinvoke <java.util.Arrays: void fill(double[],double)>($r11, 0.0);

        $i7 = i1 - 2;

        $i8 = r6[$i7];

        i16 = $i8 + 1;

        i17 = i16;

     label8:
        if i17 >= i0 goto label9;

        $i9 = i1 - 1;

        $r13 = r7[$i9];

        $r13[i17] = 1.0;

        i17 = i17 + 1;

        goto label8;

     label9:
        $r12 = new com.opengamma.analytics.math.matrix.DoubleMatrix2D;

        specialinvoke $r12.<com.opengamma.analytics.math.matrix.DoubleMatrix2D: void <init>(double[][])>(r7);

        return $r12;
    }

    private int[] toPositions(double[], java.lang.Double[])
    {
        com.opengamma.analytics.financial.calculator.ParameterSensitivityWeightMatrixCalculator r0;
        double[] r1;
        java.lang.Double[] r2;
        int i0, i1, $i2, i4, i5, i6, i7;
        cern.colt.list.IntArrayList $r4;
        java.lang.StringBuilder $r5, $r7, $r8, $r9, $r10;
        org.slf4j.Logger $r6;
        double $d0, $d1, $d2, $d3, $d4;
        java.lang.String $r11;
        java.lang.Double $r12;
        byte $b3;
        boolean z0, $z1;
        int[] r13;

        r0 := @this: com.opengamma.analytics.financial.calculator.ParameterSensitivityWeightMatrixCalculator;

        r1 := @parameter0: double[];

        r2 := @parameter1: java.lang.Double[];

        i0 = lengthof r1;

        i1 = lengthof r2;

        $r4 = new cern.colt.list.IntArrayList;

        specialinvoke $r4.<cern.colt.list.IntArrayList: void <init>()>();

        i4 = 0;

     label01:
        if i4 >= i0 goto label06;

        z0 = 0;

        i5 = 0;

     label02:
        if i5 >= i1 goto label04;

        $d1 = r1[i4];

        $r12 = r2[i5];

        $d2 = virtualinvoke $r12.<java.lang.Double: double doubleValue()>();

        $d3 = $d1 - $d2;

        $d4 = staticinvoke <java.lang.Math: double abs(double)>($d3);

        $b3 = $d4 cmpg 1.0E-8;

        if $b3 >= 0 goto label03;

        virtualinvoke $r4.<cern.colt.list.IntArrayList: void add(int)>(i5);

        z0 = 1;

     label03:
        i5 = i5 + 1;

        goto label02;

     label04:
        if z0 != 0 goto label05;

        $r6 = <com.opengamma.analytics.financial.calculator.ParameterSensitivityWeightMatrixCalculator: org.slf4j.Logger s_logger>;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i4);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("-th objective node with value ");

        $d0 = r1[i4];

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d0);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is not found in curve nodes");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r6.<org.slf4j.Logger: void info(java.lang.String)>($r11);

     label05:
        i4 = i4 + 1;

        goto label01;

     label06:
        i6 = virtualinvoke $r4.<cern.colt.list.IntArrayList: int size()>();

        if i6 <= 0 goto label07;

        $z1 = 1;

        goto label08;

     label07:
        $z1 = 0;

     label08:
        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z1, "None of the objective nodes are found in curve nodes");

        r13 = newarray (int)[i6];

        i7 = 0;

     label09:
        if i7 >= i6 goto label10;

        $i2 = virtualinvoke $r4.<cern.colt.list.IntArrayList: int get(int)>(i7);

        r13[i7] = $i2;

        i7 = i7 + 1;

        goto label09;

     label10:
        return r13;
    }

    private int[] toPositions(double[], double[])
    {
        com.opengamma.analytics.financial.calculator.ParameterSensitivityWeightMatrixCalculator r0;
        double[] r1, r2;
        int i0, i1, $i2, i4, i5, i6, i7;
        cern.colt.list.IntArrayList $r4;
        java.lang.StringBuilder $r5, $r7, $r8, $r9, $r10;
        org.slf4j.Logger $r6;
        double $d0, $d1, $d2, $d3, $d4;
        java.lang.String $r11;
        byte $b3;
        boolean z0, $z1;
        int[] r12;

        r0 := @this: com.opengamma.analytics.financial.calculator.ParameterSensitivityWeightMatrixCalculator;

        r1 := @parameter0: double[];

        r2 := @parameter1: double[];

        i0 = lengthof r1;

        i1 = lengthof r2;

        $r4 = new cern.colt.list.IntArrayList;

        specialinvoke $r4.<cern.colt.list.IntArrayList: void <init>()>();

        i4 = 0;

     label01:
        if i4 >= i0 goto label06;

        z0 = 0;

        i5 = 0;

     label02:
        if i5 >= i1 goto label04;

        $d2 = r1[i4];

        $d1 = r2[i5];

        $d3 = $d2 - $d1;

        $d4 = staticinvoke <java.lang.Math: double abs(double)>($d3);

        $b3 = $d4 cmpg 1.0E-8;

        if $b3 >= 0 goto label03;

        virtualinvoke $r4.<cern.colt.list.IntArrayList: void add(int)>(i5);

        z0 = 1;

     label03:
        i5 = i5 + 1;

        goto label02;

     label04:
        if z0 != 0 goto label05;

        $r6 = <com.opengamma.analytics.financial.calculator.ParameterSensitivityWeightMatrixCalculator: org.slf4j.Logger s_logger>;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i4);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("-th objective node with value ");

        $d0 = r1[i4];

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d0);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is not found in curve nodes");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r6.<org.slf4j.Logger: void info(java.lang.String)>($r11);

     label05:
        i4 = i4 + 1;

        goto label01;

     label06:
        i6 = virtualinvoke $r4.<cern.colt.list.IntArrayList: int size()>();

        if i6 <= 0 goto label07;

        $z1 = 1;

        goto label08;

     label07:
        $z1 = 0;

     label08:
        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z1, "None of the objective nodes are found in curve nodes");

        r12 = newarray (int)[i6];

        i7 = 0;

     label09:
        if i7 >= i6 goto label10;

        $i2 = virtualinvoke $r4.<cern.colt.list.IntArrayList: int get(int)>(i7);

        r12[i7] = $i2;

        i7 = i7 + 1;

        goto label09;

     label10:
        return r12;
    }

    private java.lang.Double[] getNodes(com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve)
    {
        com.opengamma.analytics.financial.calculator.ParameterSensitivityWeightMatrixCalculator r0;
        com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve r1, $r8, $r15;
        com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountAddZeroSpreadCurve r2;
        com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve[] r3;
        int i0, i1, i2, i3;
        java.lang.Double[] r5, $r13, $r16, $r20, $r24;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.lang.IllegalArgumentException $r6;
        it.unimi.dsi.fastutil.doubles.DoubleArrayList $r7;
        java.lang.Double $r9;
        com.opengamma.analytics.financial.model.interestrate.curve.YieldPeriodicCurve $r10;
        com.opengamma.analytics.math.curve.DoublesCurve $r11, $r22;
        java.lang.Comparable[] $r12, $r19, $r23;
        com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountAddZeroFixedCurve $r14;
        com.opengamma.analytics.financial.model.interestrate.curve.DiscountCurve $r17;
        com.opengamma.analytics.math.curve.Curve $r18;
        com.opengamma.analytics.financial.model.interestrate.curve.YieldCurve $r21;

        r0 := @this: com.opengamma.analytics.financial.calculator.ParameterSensitivityWeightMatrixCalculator;

        r1 := @parameter0: com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve;

        $z0 = r1 instanceof com.opengamma.analytics.financial.model.interestrate.curve.YieldCurve;

        if $z0 == 0 goto label1;

        $r21 = (com.opengamma.analytics.financial.model.interestrate.curve.YieldCurve) r1;

        $r22 = virtualinvoke $r21.<com.opengamma.analytics.financial.model.interestrate.curve.YieldCurve: com.opengamma.analytics.math.curve.DoublesCurve getCurve()>();

        $r23 = virtualinvoke $r22.<com.opengamma.analytics.math.curve.DoublesCurve: java.lang.Comparable[] getXData()>();

        $r24 = (java.lang.Double[]) $r23;

        return $r24;

     label1:
        $z1 = r1 instanceof com.opengamma.analytics.financial.model.interestrate.curve.DiscountCurve;

        if $z1 == 0 goto label2;

        $r17 = (com.opengamma.analytics.financial.model.interestrate.curve.DiscountCurve) r1;

        $r18 = virtualinvoke $r17.<com.opengamma.analytics.financial.model.interestrate.curve.DiscountCurve: com.opengamma.analytics.math.curve.Curve getCurve()>();

        $r19 = virtualinvoke $r18.<com.opengamma.analytics.math.curve.Curve: java.lang.Comparable[] getXData()>();

        $r20 = (java.lang.Double[]) $r19;

        return $r20;

     label2:
        $z2 = r1 instanceof com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountAddZeroFixedCurve;

        if $z2 == 0 goto label3;

        $r14 = (com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountAddZeroFixedCurve) r1;

        $r15 = virtualinvoke $r14.<com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountAddZeroFixedCurve: com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve getCurve()>();

        $r16 = specialinvoke r0.<com.opengamma.analytics.financial.calculator.ParameterSensitivityWeightMatrixCalculator: java.lang.Double[] getNodes(com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve)>($r15);

        return $r16;

     label3:
        $z3 = r1 instanceof com.opengamma.analytics.financial.model.interestrate.curve.YieldPeriodicCurve;

        if $z3 == 0 goto label4;

        $r10 = (com.opengamma.analytics.financial.model.interestrate.curve.YieldPeriodicCurve) r1;

        $r11 = virtualinvoke $r10.<com.opengamma.analytics.financial.model.interestrate.curve.YieldPeriodicCurve: com.opengamma.analytics.math.curve.DoublesCurve getCurve()>();

        $r12 = virtualinvoke $r11.<com.opengamma.analytics.math.curve.DoublesCurve: java.lang.Comparable[] getXData()>();

        $r13 = (java.lang.Double[]) $r12;

        return $r13;

     label4:
        $z4 = r1 instanceof com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountAddZeroSpreadCurve;

        if $z4 == 0 goto label8;

        r2 = (com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountAddZeroSpreadCurve) r1;

        r3 = virtualinvoke r2.<com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountAddZeroSpreadCurve: com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve[] getCurves()>();

        $r7 = new it.unimi.dsi.fastutil.doubles.DoubleArrayList;

        specialinvoke $r7.<it.unimi.dsi.fastutil.doubles.DoubleArrayList: void <init>()>();

        i0 = lengthof r3;

        i2 = 0;

     label5:
        if i2 >= i0 goto label8;

        $r8 = r3[i2];

        r5 = specialinvoke r0.<com.opengamma.analytics.financial.calculator.ParameterSensitivityWeightMatrixCalculator: java.lang.Double[] getNodes(com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve)>($r8);

        i1 = lengthof r5;

        i3 = 0;

     label6:
        if i3 >= i1 goto label7;

        $r9 = r5[i3];

        virtualinvoke $r7.<it.unimi.dsi.fastutil.doubles.DoubleArrayList: boolean add(java.lang.Double)>($r9);

        i3 = i3 + 1;

        goto label6;

     label7:
        i2 = i2 + 1;

        goto label5;

     label8:
        $r6 = new java.lang.IllegalArgumentException;

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("node points can not be extracted");

        throw $r6;
    }

    static void <clinit>()
    {
        org.slf4j.Logger $r0;

        <com.opengamma.analytics.financial.calculator.ParameterSensitivityWeightMatrixCalculator: double TOL> = 1.0E-8;

        $r0 = staticinvoke <org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>(class "com/opengamma/analytics/financial/calculator/ParameterSensitivityWeightMatrixCalculator");

        <com.opengamma.analytics.financial.calculator.ParameterSensitivityWeightMatrixCalculator: org.slf4j.Logger s_logger> = $r0;

        return;
    }
}
