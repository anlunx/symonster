public class org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D extends java.lang.Object implements java.io.Serializable, org.apache.commons.math3.geometry.Space
{
    private static final long serialVersionUID;

    private void <init>()
    {
        org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D r0;

        r0 := @this: org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D getInstance()
    {
        org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D $r0;

        $r0 = staticinvoke <org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D$LazyHolder: org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D access$000()>();

        return $r0;
    }

    public int getDimension()
    {
        org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D r0;

        r0 := @this: org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D;

        return 1;
    }

    public org.apache.commons.math3.geometry.Space getSubSpace() throws org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D$NoSubSpaceException
    {
        org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D r0;
        org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D$NoSubSpaceException $r1;

        r0 := @this: org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D;

        $r1 = new org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D$NoSubSpaceException;

        specialinvoke $r1.<org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D$NoSubSpaceException: void <init>()>();

        throw $r1;
    }

    private java.lang.Object readResolve()
    {
        org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D r0, $r1;

        r0 := @this: org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D;

        $r1 = staticinvoke <org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D$LazyHolder: org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D access$000()>();

        return $r1;
    }

    void <init>(org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D$1)
    {
        org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D r0;
        org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D$1 r1;

        r0 := @this: org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D;

        r1 := @parameter0: org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D$1;

        specialinvoke r0.<org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D: void <init>()>();

        return;
    }

    public static void <clinit>()
    {
        <org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D: long serialVersionUID> = -1178039568877797126L;

        return;
    }
}
