public abstract class com.opengamma.analytics.financial.interestrate.FDCurveSensitivityCalculator extends java.lang.Object
{

    public void <init>()
    {
        com.opengamma.analytics.financial.interestrate.FDCurveSensitivityCalculator r0;

        r0 := @this: com.opengamma.analytics.financial.interestrate.FDCurveSensitivityCalculator;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static final java.util.List curveSensitvityFDCalculator(com.opengamma.analytics.financial.interestrate.InstrumentDerivative, com.opengamma.analytics.financial.interestrate.InstrumentDerivativeVisitorAdapter, com.opengamma.analytics.financial.interestrate.YieldCurveBundle, java.lang.String, double[], double)
    {
        com.opengamma.analytics.financial.interestrate.InstrumentDerivative r0;
        com.opengamma.analytics.financial.interestrate.InstrumentDerivativeVisitorAdapter r1;
        com.opengamma.analytics.financial.interestrate.YieldCurveBundle r2;
        java.lang.String r3;
        double[] r4;
        double d0, d1, d2, $d3, $d4, d5;
        int i0, i4;
        byte $b1, $b2, $b3;
        java.lang.Boolean $r7;
        boolean $z0, $z2, z3, $z4;
        java.util.ArrayList $r8;
        com.opengamma.util.tuple.DoublesPair $r9;

        r0 := @parameter0: com.opengamma.analytics.financial.interestrate.InstrumentDerivative;

        r1 := @parameter1: com.opengamma.analytics.financial.interestrate.InstrumentDerivativeVisitorAdapter;

        r2 := @parameter2: com.opengamma.analytics.financial.interestrate.YieldCurveBundle;

        r3 := @parameter3: java.lang.String;

        r4 := @parameter4: double[];

        d0 := @parameter5: double;

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object,java.lang.String)>(r4, "null times");

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object,java.lang.String)>(r0, "null ird");

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object,java.lang.String)>(r1, "null calculator");

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object,java.lang.String)>(r2, "null curves");

        $d3 = r4[0];

        $b1 = $d3 cmpl 0.0;

        if $b1 < 0 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        staticinvoke <org.apache.commons.lang.Validate: void isTrue(boolean,java.lang.String)>($z2, "t less than 0");

        $r7 = virtualinvoke r2.<com.opengamma.analytics.financial.interestrate.YieldCurveBundle: java.lang.Boolean containsName(java.lang.String)>(r3);

        $z0 = virtualinvoke $r7.<java.lang.Boolean: boolean booleanValue()>();

        staticinvoke <org.apache.commons.lang.Validate: void isTrue(boolean,java.lang.String)>($z0, "curveName not in curves");

        $r8 = new java.util.ArrayList;

        specialinvoke $r8.<java.util.ArrayList: void <init>()>();

        d5 = r4[0];

        z3 = 1;

        i0 = lengthof r4;

        i4 = 0;

     label3:
        if i4 >= i0 goto label9;

        d1 = r4[i4];

        if z3 != 0 goto label6;

        $b3 = d1 cmpl d5;

        if $b3 <= 0 goto label4;

        $z4 = 1;

        goto label5;

     label4:
        $z4 = 0;

     label5:
        staticinvoke <org.apache.commons.lang.Validate: void isTrue(boolean,java.lang.String)>($z4, "times not strictly assending");

        goto label7;

     label6:
        z3 = 0;

     label7:
        d2 = staticinvoke <com.opengamma.analytics.financial.interestrate.FDCurveSensitivityCalculator: double impFDCalculator(com.opengamma.analytics.financial.interestrate.InstrumentDerivative,com.opengamma.analytics.financial.interestrate.InstrumentDerivativeVisitorAdapter,com.opengamma.analytics.financial.interestrate.YieldCurveBundle,java.lang.String,double)>(r0, r1, r2, r3, d1);

        $d4 = staticinvoke <java.lang.Math: double abs(double)>(d2);

        $b2 = $d4 cmpl d0;

        if $b2 <= 0 goto label8;

        $r9 = staticinvoke <com.opengamma.util.tuple.DoublesPair: com.opengamma.util.tuple.DoublesPair of(double,double)>(d1, d2);

        interfaceinvoke $r8.<java.util.List: boolean add(java.lang.Object)>($r9);

     label8:
        d5 = d1;

        i4 = i4 + 1;

        goto label3;

     label9:
        return $r8;
    }

    public static final java.util.List curveSensitvityFDCalculator(com.opengamma.analytics.financial.interestrate.InstrumentDerivative, com.opengamma.analytics.financial.interestrate.method.PricingMethod, com.opengamma.analytics.financial.interestrate.YieldCurveBundle, java.lang.String, double[], double)
    {
        com.opengamma.analytics.financial.interestrate.InstrumentDerivative r0;
        com.opengamma.analytics.financial.interestrate.method.PricingMethod r1;
        com.opengamma.analytics.financial.interestrate.YieldCurveBundle r2;
        java.lang.String r3;
        double[] r4;
        double d0, d1, d2, $d3, $d4, d5;
        int i0, i4;
        byte $b1, $b2, $b3;
        java.lang.Boolean $r7;
        boolean $z0, $z2, z3, $z4;
        java.util.ArrayList $r8;
        com.opengamma.util.tuple.DoublesPair $r9;

        r0 := @parameter0: com.opengamma.analytics.financial.interestrate.InstrumentDerivative;

        r1 := @parameter1: com.opengamma.analytics.financial.interestrate.method.PricingMethod;

        r2 := @parameter2: com.opengamma.analytics.financial.interestrate.YieldCurveBundle;

        r3 := @parameter3: java.lang.String;

        r4 := @parameter4: double[];

        d0 := @parameter5: double;

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object,java.lang.String)>(r4, "null times");

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object,java.lang.String)>(r0, "null ird");

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object,java.lang.String)>(r1, "null method");

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object,java.lang.String)>(r2, "null curves");

        $d3 = r4[0];

        $b1 = $d3 cmpl 0.0;

        if $b1 < 0 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        staticinvoke <org.apache.commons.lang.Validate: void isTrue(boolean,java.lang.String)>($z2, "t less than 0");

        $r7 = virtualinvoke r2.<com.opengamma.analytics.financial.interestrate.YieldCurveBundle: java.lang.Boolean containsName(java.lang.String)>(r3);

        $z0 = virtualinvoke $r7.<java.lang.Boolean: boolean booleanValue()>();

        staticinvoke <org.apache.commons.lang.Validate: void isTrue(boolean,java.lang.String)>($z0, "curveName not in curves");

        $r8 = new java.util.ArrayList;

        specialinvoke $r8.<java.util.ArrayList: void <init>()>();

        d5 = r4[0];

        z3 = 1;

        i0 = lengthof r4;

        i4 = 0;

     label3:
        if i4 >= i0 goto label9;

        d1 = r4[i4];

        if z3 != 0 goto label6;

        $b3 = d1 cmpl d5;

        if $b3 <= 0 goto label4;

        $z4 = 1;

        goto label5;

     label4:
        $z4 = 0;

     label5:
        staticinvoke <org.apache.commons.lang.Validate: void isTrue(boolean,java.lang.String)>($z4, "times not strictly assending");

        goto label7;

     label6:
        z3 = 0;

     label7:
        d2 = staticinvoke <com.opengamma.analytics.financial.interestrate.FDCurveSensitivityCalculator: double impFDCalculator(com.opengamma.analytics.financial.interestrate.InstrumentDerivative,com.opengamma.analytics.financial.interestrate.method.PricingMethod,com.opengamma.analytics.financial.interestrate.YieldCurveBundle,java.lang.String,double)>(r0, r1, r2, r3, d1);

        $d4 = staticinvoke <java.lang.Math: double abs(double)>(d2);

        $b2 = $d4 cmpl d0;

        if $b2 <= 0 goto label8;

        $r9 = staticinvoke <com.opengamma.util.tuple.DoublesPair: com.opengamma.util.tuple.DoublesPair of(double,double)>(d1, d2);

        interfaceinvoke $r8.<java.util.List: boolean add(java.lang.Object)>($r9);

     label8:
        d5 = d1;

        i4 = i4 + 1;

        goto label3;

     label9:
        return $r8;
    }

    public static final double curveSensitvityFDCalculator(com.opengamma.analytics.financial.interestrate.InstrumentDerivative, com.opengamma.analytics.financial.interestrate.InstrumentDerivativeVisitorAdapter, com.opengamma.analytics.financial.interestrate.YieldCurveBundle, java.lang.String, double)
    {
        com.opengamma.analytics.financial.interestrate.InstrumentDerivative r0;
        com.opengamma.analytics.financial.interestrate.InstrumentDerivativeVisitorAdapter r1;
        com.opengamma.analytics.financial.interestrate.YieldCurveBundle r2;
        java.lang.String r3;
        double d0, $d1;
        byte $b0;
        java.lang.Boolean $r4;
        boolean $z0, $z1;

        r0 := @parameter0: com.opengamma.analytics.financial.interestrate.InstrumentDerivative;

        r1 := @parameter1: com.opengamma.analytics.financial.interestrate.InstrumentDerivativeVisitorAdapter;

        r2 := @parameter2: com.opengamma.analytics.financial.interestrate.YieldCurveBundle;

        r3 := @parameter3: java.lang.String;

        d0 := @parameter4: double;

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object,java.lang.String)>(r0, "null ird");

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object,java.lang.String)>(r1, "null calculator");

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object,java.lang.String)>(r2, "null curves");

        $b0 = d0 cmpl 0.0;

        if $b0 < 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        staticinvoke <org.apache.commons.lang.Validate: void isTrue(boolean,java.lang.String)>($z1, "t less than 0");

        $r4 = virtualinvoke r2.<com.opengamma.analytics.financial.interestrate.YieldCurveBundle: java.lang.Boolean containsName(java.lang.String)>(r3);

        $z0 = virtualinvoke $r4.<java.lang.Boolean: boolean booleanValue()>();

        staticinvoke <org.apache.commons.lang.Validate: void isTrue(boolean,java.lang.String)>($z0, "curveName not in curves");

        $d1 = staticinvoke <com.opengamma.analytics.financial.interestrate.FDCurveSensitivityCalculator: double impFDCalculator(com.opengamma.analytics.financial.interestrate.InstrumentDerivative,com.opengamma.analytics.financial.interestrate.InstrumentDerivativeVisitorAdapter,com.opengamma.analytics.financial.interestrate.YieldCurveBundle,java.lang.String,double)>(r0, r1, r2, r3, d0);

        return $d1;
    }

    private static double impFDCalculator(com.opengamma.analytics.financial.interestrate.InstrumentDerivative, com.opengamma.analytics.financial.interestrate.InstrumentDerivativeVisitorAdapter, com.opengamma.analytics.financial.interestrate.YieldCurveBundle, java.lang.String, double)
    {
        com.opengamma.analytics.financial.interestrate.InstrumentDerivative r0;
        com.opengamma.analytics.financial.interestrate.InstrumentDerivativeVisitorAdapter r1;
        com.opengamma.analytics.financial.interestrate.YieldCurveBundle r2;
        java.lang.String r3;
        double d0, d2, d3, $d4, $d5, $d6;
        com.opengamma.analytics.financial.model.interestrate.curve.YieldCurve r5;
        com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve r6;
        com.opengamma.analytics.financial.interestrate.FDCurveSensitivityCalculator$1 $r9;
        com.opengamma.analytics.math.curve.FunctionalDoublesCurve $r10;
        com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountAddZeroSpreadCurve $r11, $r13;
        com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve[] $r12, $r14;
        java.lang.Object $r15, $r17;
        java.lang.Double $r16, $r18;

        r0 := @parameter0: com.opengamma.analytics.financial.interestrate.InstrumentDerivative;

        r1 := @parameter1: com.opengamma.analytics.financial.interestrate.InstrumentDerivativeVisitorAdapter;

        r2 := @parameter2: com.opengamma.analytics.financial.interestrate.YieldCurveBundle;

        r3 := @parameter3: java.lang.String;

        d0 := @parameter4: double;

        $r9 = new com.opengamma.analytics.financial.interestrate.FDCurveSensitivityCalculator$1;

        specialinvoke $r9.<com.opengamma.analytics.financial.interestrate.FDCurveSensitivityCalculator$1: void <init>(double)>(d0);

        $r10 = new com.opengamma.analytics.math.curve.FunctionalDoublesCurve;

        specialinvoke $r10.<com.opengamma.analytics.math.curve.FunctionalDoublesCurve: void <init>(com.opengamma.analytics.math.function.Function1D)>($r9);

        r5 = staticinvoke <com.opengamma.analytics.financial.model.interestrate.curve.YieldCurve: com.opengamma.analytics.financial.model.interestrate.curve.YieldCurve 'from'(com.opengamma.analytics.math.curve.DoublesCurve)>($r10);

        r6 = virtualinvoke r2.<com.opengamma.analytics.financial.interestrate.YieldCurveBundle: com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve getCurve(java.lang.String)>(r3);

        $r11 = new com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountAddZeroSpreadCurve;

        $r12 = newarray (com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve)[2];

        $r12[0] = r6;

        $r12[1] = r5;

        specialinvoke $r11.<com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountAddZeroSpreadCurve: void <init>(java.lang.String,boolean,com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve[])>("UpCurve", 0, $r12);

        $r13 = new com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountAddZeroSpreadCurve;

        $r14 = newarray (com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve)[2];

        $r14[0] = r6;

        $r14[1] = r5;

        specialinvoke $r13.<com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountAddZeroSpreadCurve: void <init>(java.lang.String,boolean,com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve[])>("DownCurve", 1, $r14);

        virtualinvoke r2.<com.opengamma.analytics.financial.interestrate.YieldCurveBundle: void replaceCurve(java.lang.String,com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve)>(r3, $r11);

        $r15 = interfaceinvoke r0.<com.opengamma.analytics.financial.interestrate.InstrumentDerivative: java.lang.Object accept(com.opengamma.analytics.financial.interestrate.InstrumentDerivativeVisitor,java.lang.Object)>(r1, r2);

        $r16 = (java.lang.Double) $r15;

        d2 = virtualinvoke $r16.<java.lang.Double: double doubleValue()>();

        virtualinvoke r2.<com.opengamma.analytics.financial.interestrate.YieldCurveBundle: void replaceCurve(java.lang.String,com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve)>(r3, $r13);

        $r17 = interfaceinvoke r0.<com.opengamma.analytics.financial.interestrate.InstrumentDerivative: java.lang.Object accept(com.opengamma.analytics.financial.interestrate.InstrumentDerivativeVisitor,java.lang.Object)>(r1, r2);

        $r18 = (java.lang.Double) $r17;

        d3 = virtualinvoke $r18.<java.lang.Double: double doubleValue()>();

        virtualinvoke r2.<com.opengamma.analytics.financial.interestrate.YieldCurveBundle: void replaceCurve(java.lang.String,com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve)>(r3, r6);

        $d4 = d2 - d3;

        $d5 = $d4 / 2.0;

        $d6 = $d5 / 1.0E-6;

        return $d6;
    }

    private static double impFDCalculator(com.opengamma.analytics.financial.interestrate.InstrumentDerivative, com.opengamma.analytics.financial.interestrate.method.PricingMethod, com.opengamma.analytics.financial.interestrate.YieldCurveBundle, java.lang.String, double)
    {
        com.opengamma.analytics.financial.interestrate.InstrumentDerivative r0;
        com.opengamma.analytics.financial.interestrate.method.PricingMethod r1;
        com.opengamma.analytics.financial.interestrate.YieldCurveBundle r2;
        java.lang.String r3;
        double d0, d2, d3, $d4, $d5, $d6;
        com.opengamma.analytics.financial.model.interestrate.curve.YieldCurve r5;
        com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve r6;
        com.opengamma.analytics.financial.interestrate.FDCurveSensitivityCalculator$2 $r9;
        com.opengamma.analytics.math.curve.FunctionalDoublesCurve $r10;
        com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountAddZeroSpreadCurve $r11, $r13;
        com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve[] $r12, $r14;
        com.opengamma.util.money.CurrencyAmount $r15, $r16;

        r0 := @parameter0: com.opengamma.analytics.financial.interestrate.InstrumentDerivative;

        r1 := @parameter1: com.opengamma.analytics.financial.interestrate.method.PricingMethod;

        r2 := @parameter2: com.opengamma.analytics.financial.interestrate.YieldCurveBundle;

        r3 := @parameter3: java.lang.String;

        d0 := @parameter4: double;

        $r9 = new com.opengamma.analytics.financial.interestrate.FDCurveSensitivityCalculator$2;

        specialinvoke $r9.<com.opengamma.analytics.financial.interestrate.FDCurveSensitivityCalculator$2: void <init>(double)>(d0);

        $r10 = new com.opengamma.analytics.math.curve.FunctionalDoublesCurve;

        specialinvoke $r10.<com.opengamma.analytics.math.curve.FunctionalDoublesCurve: void <init>(com.opengamma.analytics.math.function.Function1D)>($r9);

        r5 = staticinvoke <com.opengamma.analytics.financial.model.interestrate.curve.YieldCurve: com.opengamma.analytics.financial.model.interestrate.curve.YieldCurve 'from'(com.opengamma.analytics.math.curve.DoublesCurve)>($r10);

        r6 = virtualinvoke r2.<com.opengamma.analytics.financial.interestrate.YieldCurveBundle: com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve getCurve(java.lang.String)>(r3);

        $r11 = new com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountAddZeroSpreadCurve;

        $r12 = newarray (com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve)[2];

        $r12[0] = r6;

        $r12[1] = r5;

        specialinvoke $r11.<com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountAddZeroSpreadCurve: void <init>(java.lang.String,boolean,com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve[])>("UpCurve", 0, $r12);

        $r13 = new com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountAddZeroSpreadCurve;

        $r14 = newarray (com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve)[2];

        $r14[0] = r6;

        $r14[1] = r5;

        specialinvoke $r13.<com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountAddZeroSpreadCurve: void <init>(java.lang.String,boolean,com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve[])>("DownCurve", 1, $r14);

        virtualinvoke r2.<com.opengamma.analytics.financial.interestrate.YieldCurveBundle: void replaceCurve(java.lang.String,com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve)>(r3, $r11);

        $r15 = interfaceinvoke r1.<com.opengamma.analytics.financial.interestrate.method.PricingMethod: com.opengamma.util.money.CurrencyAmount presentValue(com.opengamma.analytics.financial.interestrate.InstrumentDerivative,com.opengamma.analytics.financial.interestrate.YieldCurveBundle)>(r0, r2);

        d2 = virtualinvoke $r15.<com.opengamma.util.money.CurrencyAmount: double getAmount()>();

        virtualinvoke r2.<com.opengamma.analytics.financial.interestrate.YieldCurveBundle: void replaceCurve(java.lang.String,com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve)>(r3, $r13);

        $r16 = interfaceinvoke r1.<com.opengamma.analytics.financial.interestrate.method.PricingMethod: com.opengamma.util.money.CurrencyAmount presentValue(com.opengamma.analytics.financial.interestrate.InstrumentDerivative,com.opengamma.analytics.financial.interestrate.YieldCurveBundle)>(r0, r2);

        d3 = virtualinvoke $r16.<com.opengamma.util.money.CurrencyAmount: double getAmount()>();

        virtualinvoke r2.<com.opengamma.analytics.financial.interestrate.YieldCurveBundle: void replaceCurve(java.lang.String,com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve)>(r3, r6);

        $d4 = d2 - d3;

        $d5 = $d4 / 2.0;

        $d6 = $d5 / 1.0E-6;

        return $d6;
    }
}
