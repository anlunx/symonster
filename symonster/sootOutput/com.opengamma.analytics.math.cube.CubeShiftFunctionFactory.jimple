public class com.opengamma.analytics.math.cube.CubeShiftFunctionFactory extends java.lang.Object
{
    public static final com.opengamma.analytics.math.cube.ConstantCubeAdditiveShiftFunction CONSTANT_ADDITIVE;
    public static final com.opengamma.analytics.math.cube.ConstantCubeMultiplicativeShiftFunction CONSTANT_MULTIPLICATIVE;
    public static final com.opengamma.analytics.math.cube.FunctionalCubeAdditiveShiftFunction FUNCTIONAL_ADDITIVE;
    public static final com.opengamma.analytics.math.cube.FunctionalCubeMultiplicativeShiftFunction FUNCTIONAL_MULTIPLICATIVE;
    public static final com.opengamma.analytics.math.cube.InterpolatedCubeAdditiveShiftFunction INTERPOLATED_ADDITIVE;
    public static final com.opengamma.analytics.math.cube.InterpolatedCubeMultiplicativeShiftFunction INTERPOLATED_MULTIPLICATIVE;
    public static final com.opengamma.analytics.math.cube.InterpolatedFromSurfacesCubeAdditiveShiftFunction INTERPOLATED_FROM_CURVES_ADDITIVE;
    public static final com.opengamma.analytics.math.cube.NodalCubeAdditiveShiftFunction NODAL_ADDITIVE;
    public static final com.opengamma.analytics.math.cube.NodalCubeMultiplicativeShiftFunction NODAL_MULTIPLICATIVE;
    private static final java.util.Map s_instances;

    public void <init>()
    {
        com.opengamma.analytics.math.cube.CubeShiftFunctionFactory r0;

        r0 := @this: com.opengamma.analytics.math.cube.CubeShiftFunctionFactory;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static com.opengamma.analytics.math.cube.CubeShiftFunction getFunction(java.lang.Class)
    {
        java.lang.Class r0;
        com.opengamma.analytics.math.cube.CubeShiftFunction r1;
        java.util.Map $r2;
        java.lang.Object $r3;
        java.lang.IllegalArgumentException $r4;
        java.lang.StringBuilder $r5, $r6, $r8;
        java.lang.String $r7, $r9;

        r0 := @parameter0: java.lang.Class;

        $r2 = <com.opengamma.analytics.math.cube.CubeShiftFunctionFactory: java.util.Map s_instances>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r0);

        r1 = (com.opengamma.analytics.math.cube.CubeShiftFunction) $r3;

        if r1 != null goto label1;

        $r4 = new java.lang.IllegalArgumentException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Could not get function for ");

        $r7 = virtualinvoke r0.<java.lang.Class: java.lang.String getName()>();

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r9);

        throw $r4;

     label1:
        return r1;
    }

    public static com.opengamma.analytics.math.cube.Cube getShiftedCube(com.opengamma.analytics.math.cube.Cube, double, boolean)
    {
        com.opengamma.analytics.math.cube.Cube r0;
        double d0;
        boolean z0, $z1, $z2, $z3, $z4, $z5;
        java.lang.IllegalArgumentException $r1;
        java.lang.StringBuilder $r2, $r3, $r5;
        java.lang.Class $r4;
        java.lang.String $r6;
        com.opengamma.analytics.math.cube.NodalDoublesCube $r7, $r9, $r29;
        com.opengamma.analytics.math.cube.NodalCubeMultiplicativeShiftFunction $r8;
        com.opengamma.analytics.math.cube.NodalCubeAdditiveShiftFunction $r10;
        com.opengamma.analytics.math.cube.InterpolatedFromSurfacesDoublesCube $r11, $r13;
        com.opengamma.analytics.math.cube.InterpolatedFromSurfacesCubeAdditiveShiftFunction $r12;
        com.opengamma.analytics.math.cube.InterpolatedDoublesCube $r14, $r16, $r28;
        com.opengamma.analytics.math.cube.InterpolatedCubeMultiplicativeShiftFunction $r15;
        com.opengamma.analytics.math.cube.InterpolatedCubeAdditiveShiftFunction $r17;
        com.opengamma.analytics.math.cube.FunctionalDoublesCube $r18, $r20, $r27;
        com.opengamma.analytics.math.cube.FunctionalCubeMultiplicativeShiftFunction $r19;
        com.opengamma.analytics.math.cube.FunctionalCubeAdditiveShiftFunction $r21;
        com.opengamma.analytics.math.cube.ConstantDoublesCube $r22, $r24, $r26;
        com.opengamma.analytics.math.cube.ConstantCubeMultiplicativeShiftFunction $r23;
        com.opengamma.analytics.math.cube.ConstantCubeAdditiveShiftFunction $r25;

        r0 := @parameter0: com.opengamma.analytics.math.cube.Cube;

        d0 := @parameter1: double;

        z0 := @parameter2: boolean;

        $z1 = r0 instanceof com.opengamma.analytics.math.cube.ConstantDoublesCube;

        if $z1 == 0 goto label03;

        if z0 == 0 goto label01;

        $r25 = <com.opengamma.analytics.math.cube.CubeShiftFunctionFactory: com.opengamma.analytics.math.cube.ConstantCubeAdditiveShiftFunction CONSTANT_ADDITIVE>;

        $r24 = (com.opengamma.analytics.math.cube.ConstantDoublesCube) r0;

        $r26 = virtualinvoke $r25.<com.opengamma.analytics.math.cube.ConstantCubeAdditiveShiftFunction: com.opengamma.analytics.math.cube.ConstantDoublesCube evaluate(com.opengamma.analytics.math.cube.ConstantDoublesCube,double)>($r24, d0);

        goto label02;

     label01:
        $r23 = <com.opengamma.analytics.math.cube.CubeShiftFunctionFactory: com.opengamma.analytics.math.cube.ConstantCubeMultiplicativeShiftFunction CONSTANT_MULTIPLICATIVE>;

        $r22 = (com.opengamma.analytics.math.cube.ConstantDoublesCube) r0;

        $r26 = virtualinvoke $r23.<com.opengamma.analytics.math.cube.ConstantCubeMultiplicativeShiftFunction: com.opengamma.analytics.math.cube.ConstantDoublesCube evaluate(com.opengamma.analytics.math.cube.ConstantDoublesCube,double)>($r22, d0);

     label02:
        return $r26;

     label03:
        $z2 = r0 instanceof com.opengamma.analytics.math.cube.FunctionalDoublesCube;

        if $z2 == 0 goto label06;

        if z0 == 0 goto label04;

        $r21 = <com.opengamma.analytics.math.cube.CubeShiftFunctionFactory: com.opengamma.analytics.math.cube.FunctionalCubeAdditiveShiftFunction FUNCTIONAL_ADDITIVE>;

        $r20 = (com.opengamma.analytics.math.cube.FunctionalDoublesCube) r0;

        $r27 = virtualinvoke $r21.<com.opengamma.analytics.math.cube.FunctionalCubeAdditiveShiftFunction: com.opengamma.analytics.math.cube.FunctionalDoublesCube evaluate(com.opengamma.analytics.math.cube.FunctionalDoublesCube,double)>($r20, d0);

        goto label05;

     label04:
        $r19 = <com.opengamma.analytics.math.cube.CubeShiftFunctionFactory: com.opengamma.analytics.math.cube.FunctionalCubeMultiplicativeShiftFunction FUNCTIONAL_MULTIPLICATIVE>;

        $r18 = (com.opengamma.analytics.math.cube.FunctionalDoublesCube) r0;

        $r27 = virtualinvoke $r19.<com.opengamma.analytics.math.cube.FunctionalCubeMultiplicativeShiftFunction: com.opengamma.analytics.math.cube.FunctionalDoublesCube evaluate(com.opengamma.analytics.math.cube.FunctionalDoublesCube,double)>($r18, d0);

     label05:
        return $r27;

     label06:
        $z3 = r0 instanceof com.opengamma.analytics.math.cube.InterpolatedDoublesCube;

        if $z3 == 0 goto label09;

        if z0 == 0 goto label07;

        $r17 = <com.opengamma.analytics.math.cube.CubeShiftFunctionFactory: com.opengamma.analytics.math.cube.InterpolatedCubeAdditiveShiftFunction INTERPOLATED_ADDITIVE>;

        $r16 = (com.opengamma.analytics.math.cube.InterpolatedDoublesCube) r0;

        $r28 = virtualinvoke $r17.<com.opengamma.analytics.math.cube.InterpolatedCubeAdditiveShiftFunction: com.opengamma.analytics.math.cube.InterpolatedDoublesCube evaluate(com.opengamma.analytics.math.cube.InterpolatedDoublesCube,double)>($r16, d0);

        goto label08;

     label07:
        $r15 = <com.opengamma.analytics.math.cube.CubeShiftFunctionFactory: com.opengamma.analytics.math.cube.InterpolatedCubeMultiplicativeShiftFunction INTERPOLATED_MULTIPLICATIVE>;

        $r14 = (com.opengamma.analytics.math.cube.InterpolatedDoublesCube) r0;

        $r28 = virtualinvoke $r15.<com.opengamma.analytics.math.cube.InterpolatedCubeMultiplicativeShiftFunction: com.opengamma.analytics.math.cube.InterpolatedDoublesCube evaluate(com.opengamma.analytics.math.cube.InterpolatedDoublesCube,double)>($r14, d0);

     label08:
        return $r28;

     label09:
        $z4 = r0 instanceof com.opengamma.analytics.math.cube.InterpolatedFromSurfacesDoublesCube;

        if $z4 == 0 goto label10;

        if z0 == 0 goto label10;

        $r12 = <com.opengamma.analytics.math.cube.CubeShiftFunctionFactory: com.opengamma.analytics.math.cube.InterpolatedFromSurfacesCubeAdditiveShiftFunction INTERPOLATED_FROM_CURVES_ADDITIVE>;

        $r11 = (com.opengamma.analytics.math.cube.InterpolatedFromSurfacesDoublesCube) r0;

        $r13 = virtualinvoke $r12.<com.opengamma.analytics.math.cube.InterpolatedFromSurfacesCubeAdditiveShiftFunction: com.opengamma.analytics.math.cube.InterpolatedFromSurfacesDoublesCube evaluate(com.opengamma.analytics.math.cube.InterpolatedFromSurfacesDoublesCube,double)>($r11, d0);

        return $r13;

     label10:
        $z5 = r0 instanceof com.opengamma.analytics.math.cube.NodalDoublesCube;

        if $z5 == 0 goto label13;

        if z0 == 0 goto label11;

        $r10 = <com.opengamma.analytics.math.cube.CubeShiftFunctionFactory: com.opengamma.analytics.math.cube.NodalCubeAdditiveShiftFunction NODAL_ADDITIVE>;

        $r9 = (com.opengamma.analytics.math.cube.NodalDoublesCube) r0;

        $r29 = virtualinvoke $r10.<com.opengamma.analytics.math.cube.NodalCubeAdditiveShiftFunction: com.opengamma.analytics.math.cube.NodalDoublesCube evaluate(com.opengamma.analytics.math.cube.NodalDoublesCube,double)>($r9, d0);

        goto label12;

     label11:
        $r8 = <com.opengamma.analytics.math.cube.CubeShiftFunctionFactory: com.opengamma.analytics.math.cube.NodalCubeMultiplicativeShiftFunction NODAL_MULTIPLICATIVE>;

        $r7 = (com.opengamma.analytics.math.cube.NodalDoublesCube) r0;

        $r29 = virtualinvoke $r8.<com.opengamma.analytics.math.cube.NodalCubeMultiplicativeShiftFunction: com.opengamma.analytics.math.cube.NodalDoublesCube evaluate(com.opengamma.analytics.math.cube.NodalDoublesCube,double)>($r7, d0);

     label12:
        return $r29;

     label13:
        $r1 = new java.lang.IllegalArgumentException;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Do not have a cube shift function for cube ");

        $r4 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r6);

        throw $r1;
    }

    public static com.opengamma.analytics.math.cube.Cube getShiftedCube(com.opengamma.analytics.math.cube.Cube, double, double, double, double, boolean)
    {
        com.opengamma.analytics.math.cube.Cube r0;
        double d0, d1, d2, d3;
        boolean z0, $z1, $z2, $z3, $z4, $z5;
        java.lang.IllegalArgumentException $r1;
        java.lang.StringBuilder $r2, $r3, $r5;
        java.lang.Class $r4;
        java.lang.String $r6;
        com.opengamma.analytics.math.cube.NodalDoublesCube $r7, $r9, $r21;
        com.opengamma.analytics.math.cube.NodalCubeMultiplicativeShiftFunction $r8;
        com.opengamma.analytics.math.cube.NodalCubeAdditiveShiftFunction $r10;
        com.opengamma.analytics.math.cube.InterpolatedFromSurfacesDoublesCube $r11, $r13;
        com.opengamma.analytics.math.cube.InterpolatedFromSurfacesCubeAdditiveShiftFunction $r12;
        com.opengamma.analytics.math.cube.InterpolatedDoublesCube $r14, $r16, $r20;
        com.opengamma.analytics.math.cube.InterpolatedCubeMultiplicativeShiftFunction $r15;
        com.opengamma.analytics.math.cube.InterpolatedCubeAdditiveShiftFunction $r17;
        java.lang.UnsupportedOperationException $r18, $r19;

        r0 := @parameter0: com.opengamma.analytics.math.cube.Cube;

        d0 := @parameter1: double;

        d1 := @parameter2: double;

        d2 := @parameter3: double;

        d3 := @parameter4: double;

        z0 := @parameter5: boolean;

        $z1 = r0 instanceof com.opengamma.analytics.math.cube.ConstantDoublesCube;

        if $z1 == 0 goto label1;

        $r19 = new java.lang.UnsupportedOperationException;

        specialinvoke $r19.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Cannot shift a single point on a constant curve");

        throw $r19;

     label1:
        $z2 = r0 instanceof com.opengamma.analytics.math.cube.FunctionalDoublesCube;

        if $z2 == 0 goto label2;

        $r18 = new java.lang.UnsupportedOperationException;

        specialinvoke $r18.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Cannot shift a single point on a functional curve");

        throw $r18;

     label2:
        $z3 = r0 instanceof com.opengamma.analytics.math.cube.InterpolatedDoublesCube;

        if $z3 == 0 goto label5;

        if z0 == 0 goto label3;

        $r17 = <com.opengamma.analytics.math.cube.CubeShiftFunctionFactory: com.opengamma.analytics.math.cube.InterpolatedCubeAdditiveShiftFunction INTERPOLATED_ADDITIVE>;

        $r16 = (com.opengamma.analytics.math.cube.InterpolatedDoublesCube) r0;

        $r20 = virtualinvoke $r17.<com.opengamma.analytics.math.cube.InterpolatedCubeAdditiveShiftFunction: com.opengamma.analytics.math.cube.InterpolatedDoublesCube evaluate(com.opengamma.analytics.math.cube.InterpolatedDoublesCube,double,double,double,double)>($r16, d0, d1, d2, d3);

        goto label4;

     label3:
        $r15 = <com.opengamma.analytics.math.cube.CubeShiftFunctionFactory: com.opengamma.analytics.math.cube.InterpolatedCubeMultiplicativeShiftFunction INTERPOLATED_MULTIPLICATIVE>;

        $r14 = (com.opengamma.analytics.math.cube.InterpolatedDoublesCube) r0;

        $r20 = virtualinvoke $r15.<com.opengamma.analytics.math.cube.InterpolatedCubeMultiplicativeShiftFunction: com.opengamma.analytics.math.cube.InterpolatedDoublesCube evaluate(com.opengamma.analytics.math.cube.InterpolatedDoublesCube,double,double,double,double)>($r14, d0, d1, d2, d3);

     label4:
        return $r20;

     label5:
        $z4 = r0 instanceof com.opengamma.analytics.math.cube.InterpolatedFromSurfacesDoublesCube;

        if $z4 == 0 goto label6;

        if z0 == 0 goto label6;

        $r12 = <com.opengamma.analytics.math.cube.CubeShiftFunctionFactory: com.opengamma.analytics.math.cube.InterpolatedFromSurfacesCubeAdditiveShiftFunction INTERPOLATED_FROM_CURVES_ADDITIVE>;

        $r11 = (com.opengamma.analytics.math.cube.InterpolatedFromSurfacesDoublesCube) r0;

        $r13 = virtualinvoke $r12.<com.opengamma.analytics.math.cube.InterpolatedFromSurfacesCubeAdditiveShiftFunction: com.opengamma.analytics.math.cube.InterpolatedFromSurfacesDoublesCube evaluate(com.opengamma.analytics.math.cube.InterpolatedFromSurfacesDoublesCube,double,double,double,double)>($r11, d0, d1, d2, d3);

        return $r13;

     label6:
        $z5 = r0 instanceof com.opengamma.analytics.math.cube.NodalDoublesCube;

        if $z5 == 0 goto label9;

        if z0 == 0 goto label7;

        $r10 = <com.opengamma.analytics.math.cube.CubeShiftFunctionFactory: com.opengamma.analytics.math.cube.NodalCubeAdditiveShiftFunction NODAL_ADDITIVE>;

        $r9 = (com.opengamma.analytics.math.cube.NodalDoublesCube) r0;

        $r21 = virtualinvoke $r10.<com.opengamma.analytics.math.cube.NodalCubeAdditiveShiftFunction: com.opengamma.analytics.math.cube.NodalDoublesCube evaluate(com.opengamma.analytics.math.cube.NodalDoublesCube,double,double,double,double)>($r9, d0, d1, d2, d3);

        goto label8;

     label7:
        $r8 = <com.opengamma.analytics.math.cube.CubeShiftFunctionFactory: com.opengamma.analytics.math.cube.NodalCubeMultiplicativeShiftFunction NODAL_MULTIPLICATIVE>;

        $r7 = (com.opengamma.analytics.math.cube.NodalDoublesCube) r0;

        $r21 = virtualinvoke $r8.<com.opengamma.analytics.math.cube.NodalCubeMultiplicativeShiftFunction: com.opengamma.analytics.math.cube.NodalDoublesCube evaluate(com.opengamma.analytics.math.cube.NodalDoublesCube,double,double,double,double)>($r7, d0, d1, d2, d3);

     label8:
        return $r21;

     label9:
        $r1 = new java.lang.IllegalArgumentException;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Do not have a cube shift function for cube ");

        $r4 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r6);

        throw $r1;
    }

    public static com.opengamma.analytics.math.cube.Cube getShiftedCube(com.opengamma.analytics.math.cube.Cube, double[], double[], double[], double[], boolean)
    {
        com.opengamma.analytics.math.cube.Cube r0;
        double[] r1, r2, r3, r4;
        boolean z0, $z1, $z2, $z3, $z4, $z5;
        java.lang.IllegalArgumentException $r5;
        java.lang.StringBuilder $r6, $r7, $r9;
        java.lang.Class $r8;
        java.lang.String $r10;
        com.opengamma.analytics.math.cube.NodalDoublesCube $r11, $r13, $r25;
        com.opengamma.analytics.math.cube.NodalCubeMultiplicativeShiftFunction $r12;
        com.opengamma.analytics.math.cube.NodalCubeAdditiveShiftFunction $r14;
        com.opengamma.analytics.math.cube.InterpolatedFromSurfacesDoublesCube $r15, $r17;
        com.opengamma.analytics.math.cube.InterpolatedFromSurfacesCubeAdditiveShiftFunction $r16;
        com.opengamma.analytics.math.cube.InterpolatedDoublesCube $r18, $r20, $r24;
        com.opengamma.analytics.math.cube.InterpolatedCubeMultiplicativeShiftFunction $r19;
        com.opengamma.analytics.math.cube.InterpolatedCubeAdditiveShiftFunction $r21;
        java.lang.UnsupportedOperationException $r22, $r23;

        r0 := @parameter0: com.opengamma.analytics.math.cube.Cube;

        r1 := @parameter1: double[];

        r2 := @parameter2: double[];

        r3 := @parameter3: double[];

        r4 := @parameter4: double[];

        z0 := @parameter5: boolean;

        $z1 = r0 instanceof com.opengamma.analytics.math.cube.ConstantDoublesCube;

        if $z1 == 0 goto label1;

        $r23 = new java.lang.UnsupportedOperationException;

        specialinvoke $r23.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Cannot parallel shift a constant curve");

        throw $r23;

     label1:
        $z2 = r0 instanceof com.opengamma.analytics.math.cube.FunctionalDoublesCube;

        if $z2 == 0 goto label2;

        $r22 = new java.lang.UnsupportedOperationException;

        specialinvoke $r22.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Cannot parallel shift a functional curve");

        throw $r22;

     label2:
        $z3 = r0 instanceof com.opengamma.analytics.math.cube.InterpolatedDoublesCube;

        if $z3 == 0 goto label5;

        if z0 == 0 goto label3;

        $r21 = <com.opengamma.analytics.math.cube.CubeShiftFunctionFactory: com.opengamma.analytics.math.cube.InterpolatedCubeAdditiveShiftFunction INTERPOLATED_ADDITIVE>;

        $r20 = (com.opengamma.analytics.math.cube.InterpolatedDoublesCube) r0;

        $r24 = virtualinvoke $r21.<com.opengamma.analytics.math.cube.InterpolatedCubeAdditiveShiftFunction: com.opengamma.analytics.math.cube.InterpolatedDoublesCube evaluate(com.opengamma.analytics.math.cube.InterpolatedDoublesCube,double[],double[],double[],double[])>($r20, r1, r2, r3, r4);

        goto label4;

     label3:
        $r19 = <com.opengamma.analytics.math.cube.CubeShiftFunctionFactory: com.opengamma.analytics.math.cube.InterpolatedCubeMultiplicativeShiftFunction INTERPOLATED_MULTIPLICATIVE>;

        $r18 = (com.opengamma.analytics.math.cube.InterpolatedDoublesCube) r0;

        $r24 = virtualinvoke $r19.<com.opengamma.analytics.math.cube.InterpolatedCubeMultiplicativeShiftFunction: com.opengamma.analytics.math.cube.InterpolatedDoublesCube evaluate(com.opengamma.analytics.math.cube.InterpolatedDoublesCube,double[],double[],double[],double[])>($r18, r1, r2, r3, r4);

     label4:
        return $r24;

     label5:
        $z4 = r0 instanceof com.opengamma.analytics.math.cube.InterpolatedFromSurfacesDoublesCube;

        if $z4 == 0 goto label6;

        if z0 == 0 goto label6;

        $r16 = <com.opengamma.analytics.math.cube.CubeShiftFunctionFactory: com.opengamma.analytics.math.cube.InterpolatedFromSurfacesCubeAdditiveShiftFunction INTERPOLATED_FROM_CURVES_ADDITIVE>;

        $r15 = (com.opengamma.analytics.math.cube.InterpolatedFromSurfacesDoublesCube) r0;

        $r17 = virtualinvoke $r16.<com.opengamma.analytics.math.cube.InterpolatedFromSurfacesCubeAdditiveShiftFunction: com.opengamma.analytics.math.cube.InterpolatedFromSurfacesDoublesCube evaluate(com.opengamma.analytics.math.cube.InterpolatedFromSurfacesDoublesCube,double[],double[],double[],double[])>($r15, r1, r2, r3, r4);

        return $r17;

     label6:
        $z5 = r0 instanceof com.opengamma.analytics.math.cube.NodalDoublesCube;

        if $z5 == 0 goto label9;

        if z0 == 0 goto label7;

        $r14 = <com.opengamma.analytics.math.cube.CubeShiftFunctionFactory: com.opengamma.analytics.math.cube.NodalCubeAdditiveShiftFunction NODAL_ADDITIVE>;

        $r13 = (com.opengamma.analytics.math.cube.NodalDoublesCube) r0;

        $r25 = virtualinvoke $r14.<com.opengamma.analytics.math.cube.NodalCubeAdditiveShiftFunction: com.opengamma.analytics.math.cube.NodalDoublesCube evaluate(com.opengamma.analytics.math.cube.NodalDoublesCube,double[],double[],double[],double[])>($r13, r1, r2, r3, r4);

        goto label8;

     label7:
        $r12 = <com.opengamma.analytics.math.cube.CubeShiftFunctionFactory: com.opengamma.analytics.math.cube.NodalCubeMultiplicativeShiftFunction NODAL_MULTIPLICATIVE>;

        $r11 = (com.opengamma.analytics.math.cube.NodalDoublesCube) r0;

        $r25 = virtualinvoke $r12.<com.opengamma.analytics.math.cube.NodalCubeMultiplicativeShiftFunction: com.opengamma.analytics.math.cube.NodalDoublesCube evaluate(com.opengamma.analytics.math.cube.NodalDoublesCube,double[],double[],double[],double[])>($r11, r1, r2, r3, r4);

     label8:
        return $r25;

     label9:
        $r5 = new java.lang.IllegalArgumentException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Do not have a cube shift function for cube ");

        $r8 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r10);

        throw $r5;
    }

    public static com.opengamma.analytics.math.cube.Cube getShiftedCube(com.opengamma.analytics.math.cube.Cube, double, java.lang.String, boolean)
    {
        com.opengamma.analytics.math.cube.Cube r0;
        double d0;
        java.lang.String r1, $r7;
        boolean z0, $z1, $z2, $z3, $z4, $z5;
        java.lang.IllegalArgumentException $r2;
        java.lang.StringBuilder $r3, $r4, $r6;
        java.lang.Class $r5;
        com.opengamma.analytics.math.cube.NodalDoublesCube $r8, $r10, $r30;
        com.opengamma.analytics.math.cube.NodalCubeMultiplicativeShiftFunction $r9;
        com.opengamma.analytics.math.cube.NodalCubeAdditiveShiftFunction $r11;
        com.opengamma.analytics.math.cube.InterpolatedFromSurfacesDoublesCube $r12, $r14;
        com.opengamma.analytics.math.cube.InterpolatedFromSurfacesCubeAdditiveShiftFunction $r13;
        com.opengamma.analytics.math.cube.InterpolatedDoublesCube $r15, $r17, $r29;
        com.opengamma.analytics.math.cube.InterpolatedCubeMultiplicativeShiftFunction $r16;
        com.opengamma.analytics.math.cube.InterpolatedCubeAdditiveShiftFunction $r18;
        com.opengamma.analytics.math.cube.FunctionalDoublesCube $r19, $r21, $r28;
        com.opengamma.analytics.math.cube.FunctionalCubeMultiplicativeShiftFunction $r20;
        com.opengamma.analytics.math.cube.FunctionalCubeAdditiveShiftFunction $r22;
        com.opengamma.analytics.math.cube.ConstantDoublesCube $r23, $r25, $r27;
        com.opengamma.analytics.math.cube.ConstantCubeMultiplicativeShiftFunction $r24;
        com.opengamma.analytics.math.cube.ConstantCubeAdditiveShiftFunction $r26;

        r0 := @parameter0: com.opengamma.analytics.math.cube.Cube;

        d0 := @parameter1: double;

        r1 := @parameter2: java.lang.String;

        z0 := @parameter3: boolean;

        $z1 = r0 instanceof com.opengamma.analytics.math.cube.ConstantDoublesCube;

        if $z1 == 0 goto label03;

        if z0 == 0 goto label01;

        $r26 = <com.opengamma.analytics.math.cube.CubeShiftFunctionFactory: com.opengamma.analytics.math.cube.ConstantCubeAdditiveShiftFunction CONSTANT_ADDITIVE>;

        $r25 = (com.opengamma.analytics.math.cube.ConstantDoublesCube) r0;

        $r27 = virtualinvoke $r26.<com.opengamma.analytics.math.cube.ConstantCubeAdditiveShiftFunction: com.opengamma.analytics.math.cube.ConstantDoublesCube evaluate(com.opengamma.analytics.math.cube.ConstantDoublesCube,double,java.lang.String)>($r25, d0, r1);

        goto label02;

     label01:
        $r24 = <com.opengamma.analytics.math.cube.CubeShiftFunctionFactory: com.opengamma.analytics.math.cube.ConstantCubeMultiplicativeShiftFunction CONSTANT_MULTIPLICATIVE>;

        $r23 = (com.opengamma.analytics.math.cube.ConstantDoublesCube) r0;

        $r27 = virtualinvoke $r24.<com.opengamma.analytics.math.cube.ConstantCubeMultiplicativeShiftFunction: com.opengamma.analytics.math.cube.ConstantDoublesCube evaluate(com.opengamma.analytics.math.cube.ConstantDoublesCube,double,java.lang.String)>($r23, d0, r1);

     label02:
        return $r27;

     label03:
        $z2 = r0 instanceof com.opengamma.analytics.math.cube.FunctionalDoublesCube;

        if $z2 == 0 goto label06;

        if z0 == 0 goto label04;

        $r22 = <com.opengamma.analytics.math.cube.CubeShiftFunctionFactory: com.opengamma.analytics.math.cube.FunctionalCubeAdditiveShiftFunction FUNCTIONAL_ADDITIVE>;

        $r21 = (com.opengamma.analytics.math.cube.FunctionalDoublesCube) r0;

        $r28 = virtualinvoke $r22.<com.opengamma.analytics.math.cube.FunctionalCubeAdditiveShiftFunction: com.opengamma.analytics.math.cube.FunctionalDoublesCube evaluate(com.opengamma.analytics.math.cube.FunctionalDoublesCube,double,java.lang.String)>($r21, d0, r1);

        goto label05;

     label04:
        $r20 = <com.opengamma.analytics.math.cube.CubeShiftFunctionFactory: com.opengamma.analytics.math.cube.FunctionalCubeMultiplicativeShiftFunction FUNCTIONAL_MULTIPLICATIVE>;

        $r19 = (com.opengamma.analytics.math.cube.FunctionalDoublesCube) r0;

        $r28 = virtualinvoke $r20.<com.opengamma.analytics.math.cube.FunctionalCubeMultiplicativeShiftFunction: com.opengamma.analytics.math.cube.FunctionalDoublesCube evaluate(com.opengamma.analytics.math.cube.FunctionalDoublesCube,double,java.lang.String)>($r19, d0, r1);

     label05:
        return $r28;

     label06:
        $z3 = r0 instanceof com.opengamma.analytics.math.cube.InterpolatedDoublesCube;

        if $z3 == 0 goto label09;

        if z0 == 0 goto label07;

        $r18 = <com.opengamma.analytics.math.cube.CubeShiftFunctionFactory: com.opengamma.analytics.math.cube.InterpolatedCubeAdditiveShiftFunction INTERPOLATED_ADDITIVE>;

        $r17 = (com.opengamma.analytics.math.cube.InterpolatedDoublesCube) r0;

        $r29 = virtualinvoke $r18.<com.opengamma.analytics.math.cube.InterpolatedCubeAdditiveShiftFunction: com.opengamma.analytics.math.cube.InterpolatedDoublesCube evaluate(com.opengamma.analytics.math.cube.InterpolatedDoublesCube,double,java.lang.String)>($r17, d0, r1);

        goto label08;

     label07:
        $r16 = <com.opengamma.analytics.math.cube.CubeShiftFunctionFactory: com.opengamma.analytics.math.cube.InterpolatedCubeMultiplicativeShiftFunction INTERPOLATED_MULTIPLICATIVE>;

        $r15 = (com.opengamma.analytics.math.cube.InterpolatedDoublesCube) r0;

        $r29 = virtualinvoke $r16.<com.opengamma.analytics.math.cube.InterpolatedCubeMultiplicativeShiftFunction: com.opengamma.analytics.math.cube.InterpolatedDoublesCube evaluate(com.opengamma.analytics.math.cube.InterpolatedDoublesCube,double,java.lang.String)>($r15, d0, r1);

     label08:
        return $r29;

     label09:
        $z4 = r0 instanceof com.opengamma.analytics.math.cube.InterpolatedFromSurfacesDoublesCube;

        if $z4 == 0 goto label10;

        if z0 == 0 goto label10;

        $r13 = <com.opengamma.analytics.math.cube.CubeShiftFunctionFactory: com.opengamma.analytics.math.cube.InterpolatedFromSurfacesCubeAdditiveShiftFunction INTERPOLATED_FROM_CURVES_ADDITIVE>;

        $r12 = (com.opengamma.analytics.math.cube.InterpolatedFromSurfacesDoublesCube) r0;

        $r14 = virtualinvoke $r13.<com.opengamma.analytics.math.cube.InterpolatedFromSurfacesCubeAdditiveShiftFunction: com.opengamma.analytics.math.cube.InterpolatedFromSurfacesDoublesCube evaluate(com.opengamma.analytics.math.cube.InterpolatedFromSurfacesDoublesCube,double,java.lang.String)>($r12, d0, r1);

        return $r14;

     label10:
        $z5 = r0 instanceof com.opengamma.analytics.math.cube.NodalDoublesCube;

        if $z5 == 0 goto label13;

        if z0 == 0 goto label11;

        $r11 = <com.opengamma.analytics.math.cube.CubeShiftFunctionFactory: com.opengamma.analytics.math.cube.NodalCubeAdditiveShiftFunction NODAL_ADDITIVE>;

        $r10 = (com.opengamma.analytics.math.cube.NodalDoublesCube) r0;

        $r30 = virtualinvoke $r11.<com.opengamma.analytics.math.cube.NodalCubeAdditiveShiftFunction: com.opengamma.analytics.math.cube.NodalDoublesCube evaluate(com.opengamma.analytics.math.cube.NodalDoublesCube,double,java.lang.String)>($r10, d0, r1);

        goto label12;

     label11:
        $r9 = <com.opengamma.analytics.math.cube.CubeShiftFunctionFactory: com.opengamma.analytics.math.cube.NodalCubeMultiplicativeShiftFunction NODAL_MULTIPLICATIVE>;

        $r8 = (com.opengamma.analytics.math.cube.NodalDoublesCube) r0;

        $r30 = virtualinvoke $r9.<com.opengamma.analytics.math.cube.NodalCubeMultiplicativeShiftFunction: com.opengamma.analytics.math.cube.NodalDoublesCube evaluate(com.opengamma.analytics.math.cube.NodalDoublesCube,double,java.lang.String)>($r8, d0, r1);

     label12:
        return $r30;

     label13:
        $r2 = new java.lang.IllegalArgumentException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Do not have a cube shift function for cube ");

        $r5 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r7);

        throw $r2;
    }

    public static com.opengamma.analytics.math.cube.Cube getShiftedCube(com.opengamma.analytics.math.cube.Cube, double, double, double, double, java.lang.String, boolean)
    {
        com.opengamma.analytics.math.cube.Cube r0;
        double d0, d1, d2, d3;
        java.lang.String r1, $r7;
        boolean z0, $z1, $z2, $z3, $z4, $z5;
        java.lang.IllegalArgumentException $r2;
        java.lang.StringBuilder $r3, $r4, $r6;
        java.lang.Class $r5;
        com.opengamma.analytics.math.cube.NodalDoublesCube $r8, $r10, $r22;
        com.opengamma.analytics.math.cube.NodalCubeMultiplicativeShiftFunction $r9;
        com.opengamma.analytics.math.cube.NodalCubeAdditiveShiftFunction $r11;
        com.opengamma.analytics.math.cube.InterpolatedFromSurfacesDoublesCube $r12, $r14;
        com.opengamma.analytics.math.cube.InterpolatedFromSurfacesCubeAdditiveShiftFunction $r13;
        com.opengamma.analytics.math.cube.InterpolatedDoublesCube $r15, $r17, $r21;
        com.opengamma.analytics.math.cube.InterpolatedCubeMultiplicativeShiftFunction $r16;
        com.opengamma.analytics.math.cube.InterpolatedCubeAdditiveShiftFunction $r18;
        java.lang.UnsupportedOperationException $r19, $r20;

        r0 := @parameter0: com.opengamma.analytics.math.cube.Cube;

        d0 := @parameter1: double;

        d1 := @parameter2: double;

        d2 := @parameter3: double;

        d3 := @parameter4: double;

        r1 := @parameter5: java.lang.String;

        z0 := @parameter6: boolean;

        $z1 = r0 instanceof com.opengamma.analytics.math.cube.ConstantDoublesCube;

        if $z1 == 0 goto label1;

        $r20 = new java.lang.UnsupportedOperationException;

        specialinvoke $r20.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Cannot shift a single point on a constant curve");

        throw $r20;

     label1:
        $z2 = r0 instanceof com.opengamma.analytics.math.cube.FunctionalDoublesCube;

        if $z2 == 0 goto label2;

        $r19 = new java.lang.UnsupportedOperationException;

        specialinvoke $r19.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Cannot shift a single point on a functional curve");

        throw $r19;

     label2:
        $z3 = r0 instanceof com.opengamma.analytics.math.cube.InterpolatedDoublesCube;

        if $z3 == 0 goto label5;

        if z0 == 0 goto label3;

        $r18 = <com.opengamma.analytics.math.cube.CubeShiftFunctionFactory: com.opengamma.analytics.math.cube.InterpolatedCubeAdditiveShiftFunction INTERPOLATED_ADDITIVE>;

        $r17 = (com.opengamma.analytics.math.cube.InterpolatedDoublesCube) r0;

        $r21 = virtualinvoke $r18.<com.opengamma.analytics.math.cube.InterpolatedCubeAdditiveShiftFunction: com.opengamma.analytics.math.cube.InterpolatedDoublesCube evaluate(com.opengamma.analytics.math.cube.InterpolatedDoublesCube,double,double,double,double,java.lang.String)>($r17, d0, d1, d2, d3, r1);

        goto label4;

     label3:
        $r16 = <com.opengamma.analytics.math.cube.CubeShiftFunctionFactory: com.opengamma.analytics.math.cube.InterpolatedCubeMultiplicativeShiftFunction INTERPOLATED_MULTIPLICATIVE>;

        $r15 = (com.opengamma.analytics.math.cube.InterpolatedDoublesCube) r0;

        $r21 = virtualinvoke $r16.<com.opengamma.analytics.math.cube.InterpolatedCubeMultiplicativeShiftFunction: com.opengamma.analytics.math.cube.InterpolatedDoublesCube evaluate(com.opengamma.analytics.math.cube.InterpolatedDoublesCube,double,double,double,double,java.lang.String)>($r15, d0, d1, d2, d3, r1);

     label4:
        return $r21;

     label5:
        $z4 = r0 instanceof com.opengamma.analytics.math.cube.InterpolatedFromSurfacesDoublesCube;

        if $z4 == 0 goto label6;

        if z0 == 0 goto label6;

        $r13 = <com.opengamma.analytics.math.cube.CubeShiftFunctionFactory: com.opengamma.analytics.math.cube.InterpolatedFromSurfacesCubeAdditiveShiftFunction INTERPOLATED_FROM_CURVES_ADDITIVE>;

        $r12 = (com.opengamma.analytics.math.cube.InterpolatedFromSurfacesDoublesCube) r0;

        $r14 = virtualinvoke $r13.<com.opengamma.analytics.math.cube.InterpolatedFromSurfacesCubeAdditiveShiftFunction: com.opengamma.analytics.math.cube.InterpolatedFromSurfacesDoublesCube evaluate(com.opengamma.analytics.math.cube.InterpolatedFromSurfacesDoublesCube,double,double,double,double,java.lang.String)>($r12, d0, d1, d2, d3, r1);

        return $r14;

     label6:
        $z5 = r0 instanceof com.opengamma.analytics.math.cube.NodalDoublesCube;

        if $z5 == 0 goto label9;

        if z0 == 0 goto label7;

        $r11 = <com.opengamma.analytics.math.cube.CubeShiftFunctionFactory: com.opengamma.analytics.math.cube.NodalCubeAdditiveShiftFunction NODAL_ADDITIVE>;

        $r10 = (com.opengamma.analytics.math.cube.NodalDoublesCube) r0;

        $r22 = virtualinvoke $r11.<com.opengamma.analytics.math.cube.NodalCubeAdditiveShiftFunction: com.opengamma.analytics.math.cube.NodalDoublesCube evaluate(com.opengamma.analytics.math.cube.NodalDoublesCube,double,double,double,double,java.lang.String)>($r10, d0, d1, d2, d3, r1);

        goto label8;

     label7:
        $r9 = <com.opengamma.analytics.math.cube.CubeShiftFunctionFactory: com.opengamma.analytics.math.cube.NodalCubeMultiplicativeShiftFunction NODAL_MULTIPLICATIVE>;

        $r8 = (com.opengamma.analytics.math.cube.NodalDoublesCube) r0;

        $r22 = virtualinvoke $r9.<com.opengamma.analytics.math.cube.NodalCubeMultiplicativeShiftFunction: com.opengamma.analytics.math.cube.NodalDoublesCube evaluate(com.opengamma.analytics.math.cube.NodalDoublesCube,double,double,double,double,java.lang.String)>($r8, d0, d1, d2, d3, r1);

     label8:
        return $r22;

     label9:
        $r2 = new java.lang.IllegalArgumentException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Do not have a cube shift function for cube ");

        $r5 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r7);

        throw $r2;
    }

    public static com.opengamma.analytics.math.cube.Cube getShiftedCube(com.opengamma.analytics.math.cube.Cube, double[], double[], double[], double[], java.lang.String, boolean)
    {
        com.opengamma.analytics.math.cube.Cube r0;
        double[] r1, r2, r3, r4;
        java.lang.String r5, $r11;
        boolean z0, $z1, $z2, $z3, $z4, $z5;
        java.lang.IllegalArgumentException $r6;
        java.lang.StringBuilder $r7, $r8, $r10;
        java.lang.Class $r9;
        com.opengamma.analytics.math.cube.NodalDoublesCube $r12, $r14, $r26;
        com.opengamma.analytics.math.cube.NodalCubeMultiplicativeShiftFunction $r13;
        com.opengamma.analytics.math.cube.NodalCubeAdditiveShiftFunction $r15;
        com.opengamma.analytics.math.cube.InterpolatedFromSurfacesDoublesCube $r16, $r18;
        com.opengamma.analytics.math.cube.InterpolatedFromSurfacesCubeAdditiveShiftFunction $r17;
        com.opengamma.analytics.math.cube.InterpolatedDoublesCube $r19, $r21, $r25;
        com.opengamma.analytics.math.cube.InterpolatedCubeMultiplicativeShiftFunction $r20;
        com.opengamma.analytics.math.cube.InterpolatedCubeAdditiveShiftFunction $r22;
        java.lang.UnsupportedOperationException $r23, $r24;

        r0 := @parameter0: com.opengamma.analytics.math.cube.Cube;

        r1 := @parameter1: double[];

        r2 := @parameter2: double[];

        r3 := @parameter3: double[];

        r4 := @parameter4: double[];

        r5 := @parameter5: java.lang.String;

        z0 := @parameter6: boolean;

        $z1 = r0 instanceof com.opengamma.analytics.math.cube.ConstantDoublesCube;

        if $z1 == 0 goto label1;

        $r24 = new java.lang.UnsupportedOperationException;

        specialinvoke $r24.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Cannot parallel shift a constant curve");

        throw $r24;

     label1:
        $z2 = r0 instanceof com.opengamma.analytics.math.cube.FunctionalDoublesCube;

        if $z2 == 0 goto label2;

        $r23 = new java.lang.UnsupportedOperationException;

        specialinvoke $r23.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Cannot parallel shift a functional curve");

        throw $r23;

     label2:
        $z3 = r0 instanceof com.opengamma.analytics.math.cube.InterpolatedDoublesCube;

        if $z3 == 0 goto label5;

        if z0 == 0 goto label3;

        $r22 = <com.opengamma.analytics.math.cube.CubeShiftFunctionFactory: com.opengamma.analytics.math.cube.InterpolatedCubeAdditiveShiftFunction INTERPOLATED_ADDITIVE>;

        $r21 = (com.opengamma.analytics.math.cube.InterpolatedDoublesCube) r0;

        $r25 = virtualinvoke $r22.<com.opengamma.analytics.math.cube.InterpolatedCubeAdditiveShiftFunction: com.opengamma.analytics.math.cube.InterpolatedDoublesCube evaluate(com.opengamma.analytics.math.cube.InterpolatedDoublesCube,double[],double[],double[],double[],java.lang.String)>($r21, r1, r2, r3, r4, r5);

        goto label4;

     label3:
        $r20 = <com.opengamma.analytics.math.cube.CubeShiftFunctionFactory: com.opengamma.analytics.math.cube.InterpolatedCubeMultiplicativeShiftFunction INTERPOLATED_MULTIPLICATIVE>;

        $r19 = (com.opengamma.analytics.math.cube.InterpolatedDoublesCube) r0;

        $r25 = virtualinvoke $r20.<com.opengamma.analytics.math.cube.InterpolatedCubeMultiplicativeShiftFunction: com.opengamma.analytics.math.cube.InterpolatedDoublesCube evaluate(com.opengamma.analytics.math.cube.InterpolatedDoublesCube,double[],double[],double[],double[],java.lang.String)>($r19, r1, r2, r3, r4, r5);

     label4:
        return $r25;

     label5:
        $z4 = r0 instanceof com.opengamma.analytics.math.cube.InterpolatedFromSurfacesDoublesCube;

        if $z4 == 0 goto label6;

        if z0 == 0 goto label6;

        $r17 = <com.opengamma.analytics.math.cube.CubeShiftFunctionFactory: com.opengamma.analytics.math.cube.InterpolatedFromSurfacesCubeAdditiveShiftFunction INTERPOLATED_FROM_CURVES_ADDITIVE>;

        $r16 = (com.opengamma.analytics.math.cube.InterpolatedFromSurfacesDoublesCube) r0;

        $r18 = virtualinvoke $r17.<com.opengamma.analytics.math.cube.InterpolatedFromSurfacesCubeAdditiveShiftFunction: com.opengamma.analytics.math.cube.InterpolatedFromSurfacesDoublesCube evaluate(com.opengamma.analytics.math.cube.InterpolatedFromSurfacesDoublesCube,double[],double[],double[],double[],java.lang.String)>($r16, r1, r2, r3, r4, r5);

        return $r18;

     label6:
        $z5 = r0 instanceof com.opengamma.analytics.math.cube.NodalDoublesCube;

        if $z5 == 0 goto label9;

        if z0 == 0 goto label7;

        $r15 = <com.opengamma.analytics.math.cube.CubeShiftFunctionFactory: com.opengamma.analytics.math.cube.NodalCubeAdditiveShiftFunction NODAL_ADDITIVE>;

        $r14 = (com.opengamma.analytics.math.cube.NodalDoublesCube) r0;

        $r26 = virtualinvoke $r15.<com.opengamma.analytics.math.cube.NodalCubeAdditiveShiftFunction: com.opengamma.analytics.math.cube.NodalDoublesCube evaluate(com.opengamma.analytics.math.cube.NodalDoublesCube,double[],double[],double[],double[],java.lang.String)>($r14, r1, r2, r3, r4, r5);

        goto label8;

     label7:
        $r13 = <com.opengamma.analytics.math.cube.CubeShiftFunctionFactory: com.opengamma.analytics.math.cube.NodalCubeMultiplicativeShiftFunction NODAL_MULTIPLICATIVE>;

        $r12 = (com.opengamma.analytics.math.cube.NodalDoublesCube) r0;

        $r26 = virtualinvoke $r13.<com.opengamma.analytics.math.cube.NodalCubeMultiplicativeShiftFunction: com.opengamma.analytics.math.cube.NodalDoublesCube evaluate(com.opengamma.analytics.math.cube.NodalDoublesCube,double[],double[],double[],double[],java.lang.String)>($r12, r1, r2, r3, r4, r5);

     label8:
        return $r26;

     label9:
        $r6 = new java.lang.IllegalArgumentException;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Do not have a cube shift function for cube ");

        $r9 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r11);

        throw $r6;
    }

    static void <clinit>()
    {
        com.opengamma.analytics.math.cube.ConstantCubeAdditiveShiftFunction $r0, $r10;
        com.opengamma.analytics.math.cube.ConstantCubeMultiplicativeShiftFunction $r1, $r13;
        com.opengamma.analytics.math.cube.FunctionalCubeAdditiveShiftFunction $r2, $r16;
        com.opengamma.analytics.math.cube.FunctionalCubeMultiplicativeShiftFunction $r3, $r19;
        com.opengamma.analytics.math.cube.InterpolatedCubeAdditiveShiftFunction $r4, $r22;
        com.opengamma.analytics.math.cube.InterpolatedCubeMultiplicativeShiftFunction $r5, $r25;
        com.opengamma.analytics.math.cube.InterpolatedFromSurfacesCubeAdditiveShiftFunction $r6, $r28;
        com.opengamma.analytics.math.cube.NodalCubeAdditiveShiftFunction $r7, $r31;
        com.opengamma.analytics.math.cube.NodalCubeMultiplicativeShiftFunction $r8, $r34;
        java.util.HashMap $r9;
        java.util.Map $r11, $r14, $r17, $r20, $r23, $r26, $r29, $r32, $r35;

        $r0 = new com.opengamma.analytics.math.cube.ConstantCubeAdditiveShiftFunction;

        specialinvoke $r0.<com.opengamma.analytics.math.cube.ConstantCubeAdditiveShiftFunction: void <init>()>();

        <com.opengamma.analytics.math.cube.CubeShiftFunctionFactory: com.opengamma.analytics.math.cube.ConstantCubeAdditiveShiftFunction CONSTANT_ADDITIVE> = $r0;

        $r1 = new com.opengamma.analytics.math.cube.ConstantCubeMultiplicativeShiftFunction;

        specialinvoke $r1.<com.opengamma.analytics.math.cube.ConstantCubeMultiplicativeShiftFunction: void <init>()>();

        <com.opengamma.analytics.math.cube.CubeShiftFunctionFactory: com.opengamma.analytics.math.cube.ConstantCubeMultiplicativeShiftFunction CONSTANT_MULTIPLICATIVE> = $r1;

        $r2 = new com.opengamma.analytics.math.cube.FunctionalCubeAdditiveShiftFunction;

        specialinvoke $r2.<com.opengamma.analytics.math.cube.FunctionalCubeAdditiveShiftFunction: void <init>()>();

        <com.opengamma.analytics.math.cube.CubeShiftFunctionFactory: com.opengamma.analytics.math.cube.FunctionalCubeAdditiveShiftFunction FUNCTIONAL_ADDITIVE> = $r2;

        $r3 = new com.opengamma.analytics.math.cube.FunctionalCubeMultiplicativeShiftFunction;

        specialinvoke $r3.<com.opengamma.analytics.math.cube.FunctionalCubeMultiplicativeShiftFunction: void <init>()>();

        <com.opengamma.analytics.math.cube.CubeShiftFunctionFactory: com.opengamma.analytics.math.cube.FunctionalCubeMultiplicativeShiftFunction FUNCTIONAL_MULTIPLICATIVE> = $r3;

        $r4 = new com.opengamma.analytics.math.cube.InterpolatedCubeAdditiveShiftFunction;

        specialinvoke $r4.<com.opengamma.analytics.math.cube.InterpolatedCubeAdditiveShiftFunction: void <init>()>();

        <com.opengamma.analytics.math.cube.CubeShiftFunctionFactory: com.opengamma.analytics.math.cube.InterpolatedCubeAdditiveShiftFunction INTERPOLATED_ADDITIVE> = $r4;

        $r5 = new com.opengamma.analytics.math.cube.InterpolatedCubeMultiplicativeShiftFunction;

        specialinvoke $r5.<com.opengamma.analytics.math.cube.InterpolatedCubeMultiplicativeShiftFunction: void <init>()>();

        <com.opengamma.analytics.math.cube.CubeShiftFunctionFactory: com.opengamma.analytics.math.cube.InterpolatedCubeMultiplicativeShiftFunction INTERPOLATED_MULTIPLICATIVE> = $r5;

        $r6 = new com.opengamma.analytics.math.cube.InterpolatedFromSurfacesCubeAdditiveShiftFunction;

        specialinvoke $r6.<com.opengamma.analytics.math.cube.InterpolatedFromSurfacesCubeAdditiveShiftFunction: void <init>()>();

        <com.opengamma.analytics.math.cube.CubeShiftFunctionFactory: com.opengamma.analytics.math.cube.InterpolatedFromSurfacesCubeAdditiveShiftFunction INTERPOLATED_FROM_CURVES_ADDITIVE> = $r6;

        $r7 = new com.opengamma.analytics.math.cube.NodalCubeAdditiveShiftFunction;

        specialinvoke $r7.<com.opengamma.analytics.math.cube.NodalCubeAdditiveShiftFunction: void <init>()>();

        <com.opengamma.analytics.math.cube.CubeShiftFunctionFactory: com.opengamma.analytics.math.cube.NodalCubeAdditiveShiftFunction NODAL_ADDITIVE> = $r7;

        $r8 = new com.opengamma.analytics.math.cube.NodalCubeMultiplicativeShiftFunction;

        specialinvoke $r8.<com.opengamma.analytics.math.cube.NodalCubeMultiplicativeShiftFunction: void <init>()>();

        <com.opengamma.analytics.math.cube.CubeShiftFunctionFactory: com.opengamma.analytics.math.cube.NodalCubeMultiplicativeShiftFunction NODAL_MULTIPLICATIVE> = $r8;

        $r9 = new java.util.HashMap;

        specialinvoke $r9.<java.util.HashMap: void <init>()>();

        <com.opengamma.analytics.math.cube.CubeShiftFunctionFactory: java.util.Map s_instances> = $r9;

        $r11 = <com.opengamma.analytics.math.cube.CubeShiftFunctionFactory: java.util.Map s_instances>;

        $r10 = <com.opengamma.analytics.math.cube.CubeShiftFunctionFactory: com.opengamma.analytics.math.cube.ConstantCubeAdditiveShiftFunction CONSTANT_ADDITIVE>;

        interfaceinvoke $r11.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(class "com/opengamma/analytics/math/cube/ConstantCubeAdditiveShiftFunction", $r10);

        $r14 = <com.opengamma.analytics.math.cube.CubeShiftFunctionFactory: java.util.Map s_instances>;

        $r13 = <com.opengamma.analytics.math.cube.CubeShiftFunctionFactory: com.opengamma.analytics.math.cube.ConstantCubeMultiplicativeShiftFunction CONSTANT_MULTIPLICATIVE>;

        interfaceinvoke $r14.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(class "com/opengamma/analytics/math/cube/ConstantCubeMultiplicativeShiftFunction", $r13);

        $r17 = <com.opengamma.analytics.math.cube.CubeShiftFunctionFactory: java.util.Map s_instances>;

        $r16 = <com.opengamma.analytics.math.cube.CubeShiftFunctionFactory: com.opengamma.analytics.math.cube.FunctionalCubeAdditiveShiftFunction FUNCTIONAL_ADDITIVE>;

        interfaceinvoke $r17.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(class "com/opengamma/analytics/math/cube/FunctionalCubeAdditiveShiftFunction", $r16);

        $r20 = <com.opengamma.analytics.math.cube.CubeShiftFunctionFactory: java.util.Map s_instances>;

        $r19 = <com.opengamma.analytics.math.cube.CubeShiftFunctionFactory: com.opengamma.analytics.math.cube.FunctionalCubeMultiplicativeShiftFunction FUNCTIONAL_MULTIPLICATIVE>;

        interfaceinvoke $r20.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(class "com/opengamma/analytics/math/cube/FunctionalCubeMultiplicativeShiftFunction", $r19);

        $r23 = <com.opengamma.analytics.math.cube.CubeShiftFunctionFactory: java.util.Map s_instances>;

        $r22 = <com.opengamma.analytics.math.cube.CubeShiftFunctionFactory: com.opengamma.analytics.math.cube.InterpolatedCubeAdditiveShiftFunction INTERPOLATED_ADDITIVE>;

        interfaceinvoke $r23.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(class "com/opengamma/analytics/math/cube/InterpolatedCubeAdditiveShiftFunction", $r22);

        $r26 = <com.opengamma.analytics.math.cube.CubeShiftFunctionFactory: java.util.Map s_instances>;

        $r25 = <com.opengamma.analytics.math.cube.CubeShiftFunctionFactory: com.opengamma.analytics.math.cube.InterpolatedCubeMultiplicativeShiftFunction INTERPOLATED_MULTIPLICATIVE>;

        interfaceinvoke $r26.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(class "com/opengamma/analytics/math/cube/InterpolatedCubeMultiplicativeShiftFunction", $r25);

        $r29 = <com.opengamma.analytics.math.cube.CubeShiftFunctionFactory: java.util.Map s_instances>;

        $r28 = <com.opengamma.analytics.math.cube.CubeShiftFunctionFactory: com.opengamma.analytics.math.cube.InterpolatedFromSurfacesCubeAdditiveShiftFunction INTERPOLATED_FROM_CURVES_ADDITIVE>;

        interfaceinvoke $r29.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(class "com/opengamma/analytics/math/cube/InterpolatedFromSurfacesCubeAdditiveShiftFunction", $r28);

        $r32 = <com.opengamma.analytics.math.cube.CubeShiftFunctionFactory: java.util.Map s_instances>;

        $r31 = <com.opengamma.analytics.math.cube.CubeShiftFunctionFactory: com.opengamma.analytics.math.cube.NodalCubeAdditiveShiftFunction NODAL_ADDITIVE>;

        interfaceinvoke $r32.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(class "com/opengamma/analytics/math/cube/NodalCubeAdditiveShiftFunction", $r31);

        $r35 = <com.opengamma.analytics.math.cube.CubeShiftFunctionFactory: java.util.Map s_instances>;

        $r34 = <com.opengamma.analytics.math.cube.CubeShiftFunctionFactory: com.opengamma.analytics.math.cube.NodalCubeMultiplicativeShiftFunction NODAL_MULTIPLICATIVE>;

        interfaceinvoke $r35.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(class "com/opengamma/analytics/math/cube/NodalCubeMultiplicativeShiftFunction", $r34);

        return;
    }
}
