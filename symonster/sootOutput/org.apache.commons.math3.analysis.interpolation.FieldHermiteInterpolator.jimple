public class org.apache.commons.math3.analysis.interpolation.FieldHermiteInterpolator extends java.lang.Object
{
    private final java.util.List abscissae;
    private final java.util.List topDiagonal;
    private final java.util.List bottomDiagonal;

    public void <init>()
    {
        org.apache.commons.math3.analysis.interpolation.FieldHermiteInterpolator r0;
        java.util.ArrayList $r1, $r2, $r3;

        r0 := @this: org.apache.commons.math3.analysis.interpolation.FieldHermiteInterpolator;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        r0.<org.apache.commons.math3.analysis.interpolation.FieldHermiteInterpolator: java.util.List abscissae> = $r1;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        r0.<org.apache.commons.math3.analysis.interpolation.FieldHermiteInterpolator: java.util.List topDiagonal> = $r2;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        r0.<org.apache.commons.math3.analysis.interpolation.FieldHermiteInterpolator: java.util.List bottomDiagonal> = $r3;

        return;
    }

    public transient void addSamplePoint(org.apache.commons.math3.FieldElement, org.apache.commons.math3.FieldElement[][]) throws org.apache.commons.math3.exception.ZeroException, org.apache.commons.math3.exception.MathArithmeticException, org.apache.commons.math3.exception.DimensionMismatchException, org.apache.commons.math3.exception.NullArgumentException
    {
        org.apache.commons.math3.analysis.interpolation.FieldHermiteInterpolator r0;
        org.apache.commons.math3.FieldElement r1, r5, $r22, $r24, $r25, $r28, $r34, $r36, r37, r38;
        org.apache.commons.math3.FieldElement[][] r2;
        org.apache.commons.math3.FieldElement[] r3, r4, $r8, r39;
        org.apache.commons.math3.Field $r6;
        java.lang.Object $r7, $r9, $r13, $r16, $r18, $r20, $r21, $r23, $r26, $r27, $r32, $r33, $r35;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, i10, i11, i12, i13, i14;
        java.util.List $r10, $r11, $r12, $r14, $r15, $r17, $r19;
        boolean $z2;
        org.apache.commons.math3.exception.ZeroException $r29;
        java.lang.Object[] $r30;
        org.apache.commons.math3.exception.util.LocalizedFormats $r31;

        r0 := @this: org.apache.commons.math3.analysis.interpolation.FieldHermiteInterpolator;

        r1 := @parameter0: org.apache.commons.math3.FieldElement;

        r2 := @parameter1: org.apache.commons.math3.FieldElement[][];

        staticinvoke <org.apache.commons.math3.util.MathUtils: void checkNotNull(java.lang.Object)>(r1);

        $r6 = interfaceinvoke r1.<org.apache.commons.math3.FieldElement: org.apache.commons.math3.Field getField()>();

        $r7 = interfaceinvoke $r6.<org.apache.commons.math3.Field: java.lang.Object getOne()>();

        r37 = (org.apache.commons.math3.FieldElement) $r7;

        i10 = 0;

     label1:
        $i0 = lengthof r2;

        if i10 >= $i0 goto label9;

        $r8 = r2[i10];

        $r9 = virtualinvoke $r8.<java.lang.Object: java.lang.Object clone()>();

        r3 = (org.apache.commons.math3.FieldElement[]) $r9;

        if i10 <= 1 goto label3;

        $r32 = interfaceinvoke r37.<org.apache.commons.math3.FieldElement: java.lang.Object multiply(int)>(i10);

        r37 = (org.apache.commons.math3.FieldElement) $r32;

        $r33 = interfaceinvoke r37.<org.apache.commons.math3.FieldElement: java.lang.Object reciprocal()>();

        r38 = (org.apache.commons.math3.FieldElement) $r33;

        i11 = 0;

     label2:
        $i9 = lengthof r3;

        if i11 >= $i9 goto label3;

        $r34 = r3[i11];

        $r35 = interfaceinvoke $r34.<org.apache.commons.math3.FieldElement: java.lang.Object multiply(java.lang.Object)>(r38);

        $r36 = (org.apache.commons.math3.FieldElement) $r35;

        r3[i11] = $r36;

        i11 = i11 + 1;

        goto label2;

     label3:
        $r10 = r0.<org.apache.commons.math3.analysis.interpolation.FieldHermiteInterpolator: java.util.List abscissae>;

        i12 = interfaceinvoke $r10.<java.util.List: int size()>();

        $r11 = r0.<org.apache.commons.math3.analysis.interpolation.FieldHermiteInterpolator: java.util.List bottomDiagonal>;

        $i1 = i12 - i10;

        interfaceinvoke $r11.<java.util.List: void add(int,java.lang.Object)>($i1, r3);

        r39 = r3;

        i13 = i10;

     label4:
        if i13 >= i12 goto label8;

        $r15 = r0.<org.apache.commons.math3.analysis.interpolation.FieldHermiteInterpolator: java.util.List bottomDiagonal>;

        $i2 = i13 + 1;

        $i3 = i12 - $i2;

        $r16 = interfaceinvoke $r15.<java.util.List: java.lang.Object get(int)>($i3);

        r4 = (org.apache.commons.math3.FieldElement[]) $r16;

        $r17 = r0.<org.apache.commons.math3.analysis.interpolation.FieldHermiteInterpolator: java.util.List abscissae>;

        $i4 = i13 + 1;

        $i5 = i12 - $i4;

        $r18 = interfaceinvoke $r17.<java.util.List: java.lang.Object get(int)>($i5);

        $z2 = virtualinvoke r1.<java.lang.Object: boolean equals(java.lang.Object)>($r18);

        if $z2 == 0 goto label5;

        $r29 = new org.apache.commons.math3.exception.ZeroException;

        $r31 = <org.apache.commons.math3.exception.util.LocalizedFormats: org.apache.commons.math3.exception.util.LocalizedFormats DUPLICATED_ABSCISSA_DIVISION_BY_ZERO>;

        $r30 = newarray (java.lang.Object)[1];

        $r30[0] = r1;

        specialinvoke $r29.<org.apache.commons.math3.exception.ZeroException: void <init>(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])>($r31, $r30);

        throw $r29;

     label5:
        $r19 = r0.<org.apache.commons.math3.analysis.interpolation.FieldHermiteInterpolator: java.util.List abscissae>;

        $i6 = i13 + 1;

        $i7 = i12 - $i6;

        $r20 = interfaceinvoke $r19.<java.util.List: java.lang.Object get(int)>($i7);

        $r21 = interfaceinvoke r1.<org.apache.commons.math3.FieldElement: java.lang.Object subtract(java.lang.Object)>($r20);

        $r22 = (org.apache.commons.math3.FieldElement) $r21;

        $r23 = interfaceinvoke $r22.<org.apache.commons.math3.FieldElement: java.lang.Object reciprocal()>();

        r5 = (org.apache.commons.math3.FieldElement) $r23;

        i14 = 0;

     label6:
        $i8 = lengthof r3;

        if i14 >= $i8 goto label7;

        $r25 = r39[i14];

        $r24 = r4[i14];

        $r26 = interfaceinvoke $r25.<org.apache.commons.math3.FieldElement: java.lang.Object subtract(java.lang.Object)>($r24);

        $r27 = interfaceinvoke r5.<org.apache.commons.math3.FieldElement: java.lang.Object multiply(java.lang.Object)>($r26);

        $r28 = (org.apache.commons.math3.FieldElement) $r27;

        r4[i14] = $r28;

        i14 = i14 + 1;

        goto label6;

     label7:
        r39 = r4;

        i13 = i13 + 1;

        goto label4;

     label8:
        $r12 = r0.<org.apache.commons.math3.analysis.interpolation.FieldHermiteInterpolator: java.util.List topDiagonal>;

        $r13 = virtualinvoke r39.<java.lang.Object: java.lang.Object clone()>();

        interfaceinvoke $r12.<java.util.List: boolean add(java.lang.Object)>($r13);

        $r14 = r0.<org.apache.commons.math3.analysis.interpolation.FieldHermiteInterpolator: java.util.List abscissae>;

        interfaceinvoke $r14.<java.util.List: boolean add(java.lang.Object)>(r1);

        i10 = i10 + 1;

        goto label1;

     label9:
        return;
    }

    public org.apache.commons.math3.FieldElement[] value(org.apache.commons.math3.FieldElement) throws org.apache.commons.math3.exception.NoDataException, org.apache.commons.math3.exception.NullArgumentException
    {
        org.apache.commons.math3.analysis.interpolation.FieldHermiteInterpolator r0;
        org.apache.commons.math3.FieldElement r1, $r19, $r20, $r23, r26, r27;
        org.apache.commons.math3.FieldElement[] r2, r3, $r8;
        java.util.List $r4, $r6, $r12, $r13, $r15;
        boolean $z0;
        org.apache.commons.math3.Field $r5, $r10;
        java.lang.Object $r7, $r11, $r14, $r16, $r17, $r18, $r21, $r22;
        int $i0, $i1, $i2, i3, i4;
        java.lang.Object[] $r9;
        org.apache.commons.math3.exception.NoDataException $r24;
        org.apache.commons.math3.exception.util.LocalizedFormats $r25;

        r0 := @this: org.apache.commons.math3.analysis.interpolation.FieldHermiteInterpolator;

        r1 := @parameter0: org.apache.commons.math3.FieldElement;

        staticinvoke <org.apache.commons.math3.util.MathUtils: void checkNotNull(java.lang.Object)>(r1);

        $r4 = r0.<org.apache.commons.math3.analysis.interpolation.FieldHermiteInterpolator: java.util.List abscissae>;

        $z0 = interfaceinvoke $r4.<java.util.List: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        $r24 = new org.apache.commons.math3.exception.NoDataException;

        $r25 = <org.apache.commons.math3.exception.util.LocalizedFormats: org.apache.commons.math3.exception.util.LocalizedFormats EMPTY_INTERPOLATION_SAMPLE>;

        specialinvoke $r24.<org.apache.commons.math3.exception.NoDataException: void <init>(org.apache.commons.math3.exception.util.Localizable)>($r25);

        throw $r24;

     label1:
        $r5 = interfaceinvoke r1.<org.apache.commons.math3.FieldElement: org.apache.commons.math3.Field getField()>();

        $r6 = r0.<org.apache.commons.math3.analysis.interpolation.FieldHermiteInterpolator: java.util.List topDiagonal>;

        $r7 = interfaceinvoke $r6.<java.util.List: java.lang.Object get(int)>(0);

        $r8 = (org.apache.commons.math3.FieldElement[]) $r7;

        $i0 = lengthof $r8;

        $r9 = staticinvoke <org.apache.commons.math3.util.MathArrays: java.lang.Object[] buildArray(org.apache.commons.math3.Field,int)>($r5, $i0);

        r2 = (org.apache.commons.math3.FieldElement[]) $r9;

        $r10 = interfaceinvoke r1.<org.apache.commons.math3.FieldElement: org.apache.commons.math3.Field getField()>();

        $r11 = interfaceinvoke $r10.<org.apache.commons.math3.Field: java.lang.Object getOne()>();

        r26 = (org.apache.commons.math3.FieldElement) $r11;

        i3 = 0;

     label2:
        $r12 = r0.<org.apache.commons.math3.analysis.interpolation.FieldHermiteInterpolator: java.util.List topDiagonal>;

        $i1 = interfaceinvoke $r12.<java.util.List: int size()>();

        if i3 >= $i1 goto label5;

        $r13 = r0.<org.apache.commons.math3.analysis.interpolation.FieldHermiteInterpolator: java.util.List topDiagonal>;

        $r14 = interfaceinvoke $r13.<java.util.List: java.lang.Object get(int)>(i3);

        r3 = (org.apache.commons.math3.FieldElement[]) $r14;

        i4 = 0;

     label3:
        $i2 = lengthof r2;

        if i4 >= $i2 goto label4;

        $r20 = r2[i4];

        $r19 = r3[i4];

        $r21 = interfaceinvoke $r19.<org.apache.commons.math3.FieldElement: java.lang.Object multiply(java.lang.Object)>(r26);

        $r22 = interfaceinvoke $r20.<org.apache.commons.math3.FieldElement: java.lang.Object add(java.lang.Object)>($r21);

        $r23 = (org.apache.commons.math3.FieldElement) $r22;

        r2[i4] = $r23;

        i4 = i4 + 1;

        goto label3;

     label4:
        $r15 = r0.<org.apache.commons.math3.analysis.interpolation.FieldHermiteInterpolator: java.util.List abscissae>;

        $r16 = interfaceinvoke $r15.<java.util.List: java.lang.Object get(int)>(i3);

        $r17 = interfaceinvoke r1.<org.apache.commons.math3.FieldElement: java.lang.Object subtract(java.lang.Object)>($r16);

        r27 = (org.apache.commons.math3.FieldElement) $r17;

        $r18 = interfaceinvoke r26.<org.apache.commons.math3.FieldElement: java.lang.Object multiply(java.lang.Object)>(r27);

        r26 = (org.apache.commons.math3.FieldElement) $r18;

        i3 = i3 + 1;

        goto label2;

     label5:
        return r2;
    }

    public org.apache.commons.math3.FieldElement[][] derivatives(org.apache.commons.math3.FieldElement, int) throws org.apache.commons.math3.exception.NoDataException, org.apache.commons.math3.exception.NullArgumentException
    {
        org.apache.commons.math3.analysis.interpolation.FieldHermiteInterpolator r0;
        org.apache.commons.math3.FieldElement r1, r2, r3, r7, $r24, $r32, $r34, $r35, $r36, $r37, $r40, $r42, $r43, $r45, $r48, $r49, $r51;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, i9, i10, i11, i12;
        org.apache.commons.math3.FieldElement[] r4, r5, r6, $r18, $r31, $r41, $r44;
        java.util.List $r8, $r16, $r25, $r26, $r28;
        boolean $z0;
        org.apache.commons.math3.Field $r9, $r11, $r13, $r15, $r20, $r22;
        java.lang.Object $r10, $r12, $r17, $r23, $r27, $r29, $r30, $r33, $r38, $r39, $r46, $r47, $r50;
        java.lang.Object[] $r14, $r21;
        java.lang.Object[][] $r19;
        org.apache.commons.math3.exception.NoDataException $r52;
        org.apache.commons.math3.exception.util.LocalizedFormats $r53;
        org.apache.commons.math3.FieldElement[][] r54;

        r0 := @this: org.apache.commons.math3.analysis.interpolation.FieldHermiteInterpolator;

        r1 := @parameter0: org.apache.commons.math3.FieldElement;

        i0 := @parameter1: int;

        staticinvoke <org.apache.commons.math3.util.MathUtils: void checkNotNull(java.lang.Object)>(r1);

        $r8 = r0.<org.apache.commons.math3.analysis.interpolation.FieldHermiteInterpolator: java.util.List abscissae>;

        $z0 = interfaceinvoke $r8.<java.util.List: boolean isEmpty()>();

        if $z0 == 0 goto label01;

        $r52 = new org.apache.commons.math3.exception.NoDataException;

        $r53 = <org.apache.commons.math3.exception.util.LocalizedFormats: org.apache.commons.math3.exception.util.LocalizedFormats EMPTY_INTERPOLATION_SAMPLE>;

        specialinvoke $r52.<org.apache.commons.math3.exception.NoDataException: void <init>(org.apache.commons.math3.exception.util.Localizable)>($r53);

        throw $r52;

     label01:
        $r9 = interfaceinvoke r1.<org.apache.commons.math3.FieldElement: org.apache.commons.math3.Field getField()>();

        $r10 = interfaceinvoke $r9.<org.apache.commons.math3.Field: java.lang.Object getZero()>();

        r2 = (org.apache.commons.math3.FieldElement) $r10;

        $r11 = interfaceinvoke r1.<org.apache.commons.math3.FieldElement: org.apache.commons.math3.Field getField()>();

        $r12 = interfaceinvoke $r11.<org.apache.commons.math3.Field: java.lang.Object getOne()>();

        r3 = (org.apache.commons.math3.FieldElement) $r12;

        $r13 = interfaceinvoke r1.<org.apache.commons.math3.FieldElement: org.apache.commons.math3.Field getField()>();

        $i1 = i0 + 1;

        $r14 = staticinvoke <org.apache.commons.math3.util.MathArrays: java.lang.Object[] buildArray(org.apache.commons.math3.Field,int)>($r13, $i1);

        r4 = (org.apache.commons.math3.FieldElement[]) $r14;

        r4[0] = r2;

        i9 = 0;

     label02:
        if i9 >= i0 goto label03;

        $i8 = i9 + 1;

        $r49 = r4[i9];

        $r50 = interfaceinvoke $r49.<org.apache.commons.math3.FieldElement: java.lang.Object add(java.lang.Object)>(r3);

        $r51 = (org.apache.commons.math3.FieldElement) $r50;

        r4[$i8] = $r51;

        i9 = i9 + 1;

        goto label02;

     label03:
        $r15 = interfaceinvoke r1.<org.apache.commons.math3.FieldElement: org.apache.commons.math3.Field getField()>();

        $i2 = i0 + 1;

        $r16 = r0.<org.apache.commons.math3.analysis.interpolation.FieldHermiteInterpolator: java.util.List topDiagonal>;

        $r17 = interfaceinvoke $r16.<java.util.List: java.lang.Object get(int)>(0);

        $r18 = (org.apache.commons.math3.FieldElement[]) $r17;

        $i3 = lengthof $r18;

        $r19 = staticinvoke <org.apache.commons.math3.util.MathArrays: java.lang.Object[][] buildArray(org.apache.commons.math3.Field,int,int)>($r15, $i2, $i3);

        r54 = (org.apache.commons.math3.FieldElement[][]) $r19;

        $r20 = interfaceinvoke r1.<org.apache.commons.math3.FieldElement: org.apache.commons.math3.Field getField()>();

        $i4 = i0 + 1;

        $r21 = staticinvoke <org.apache.commons.math3.util.MathArrays: java.lang.Object[] buildArray(org.apache.commons.math3.Field,int)>($r20, $i4);

        r5 = (org.apache.commons.math3.FieldElement[]) $r21;

        $r22 = interfaceinvoke r1.<org.apache.commons.math3.FieldElement: org.apache.commons.math3.Field getField()>();

        $r23 = interfaceinvoke $r22.<org.apache.commons.math3.Field: java.lang.Object getOne()>();

        $r24 = (org.apache.commons.math3.FieldElement) $r23;

        r5[0] = $r24;

        i10 = 0;

     label04:
        $r25 = r0.<org.apache.commons.math3.analysis.interpolation.FieldHermiteInterpolator: java.util.List topDiagonal>;

        $i5 = interfaceinvoke $r25.<java.util.List: int size()>();

        if i10 >= $i5 goto label10;

        $r26 = r0.<org.apache.commons.math3.analysis.interpolation.FieldHermiteInterpolator: java.util.List topDiagonal>;

        $r27 = interfaceinvoke $r26.<java.util.List: java.lang.Object get(int)>(i10);

        r6 = (org.apache.commons.math3.FieldElement[]) $r27;

        $r28 = r0.<org.apache.commons.math3.analysis.interpolation.FieldHermiteInterpolator: java.util.List abscissae>;

        $r29 = interfaceinvoke $r28.<java.util.List: java.lang.Object get(int)>(i10);

        $r30 = interfaceinvoke r1.<org.apache.commons.math3.FieldElement: java.lang.Object subtract(java.lang.Object)>($r29);

        r7 = (org.apache.commons.math3.FieldElement) $r30;

        i11 = i0;

     label05:
        if i11 < 0 goto label09;

        i12 = 0;

     label06:
        $r31 = r54[i11];

        $i6 = lengthof $r31;

        if i12 >= $i6 goto label07;

        $r44 = r54[i11];

        $r41 = r54[i11];

        $r45 = $r41[i12];

        $r43 = r6[i12];

        $r42 = r5[i11];

        $r46 = interfaceinvoke $r43.<org.apache.commons.math3.FieldElement: java.lang.Object multiply(java.lang.Object)>($r42);

        $r47 = interfaceinvoke $r45.<org.apache.commons.math3.FieldElement: java.lang.Object add(java.lang.Object)>($r46);

        $r48 = (org.apache.commons.math3.FieldElement) $r47;

        $r44[i12] = $r48;

        i12 = i12 + 1;

        goto label06;

     label07:
        $r32 = r5[i11];

        $r33 = interfaceinvoke $r32.<org.apache.commons.math3.FieldElement: java.lang.Object multiply(java.lang.Object)>(r7);

        $r34 = (org.apache.commons.math3.FieldElement) $r33;

        r5[i11] = $r34;

        if i11 <= 0 goto label08;

        $r37 = r5[i11];

        $r36 = r4[i11];

        $i7 = i11 - 1;

        $r35 = r5[$i7];

        $r38 = interfaceinvoke $r36.<org.apache.commons.math3.FieldElement: java.lang.Object multiply(java.lang.Object)>($r35);

        $r39 = interfaceinvoke $r37.<org.apache.commons.math3.FieldElement: java.lang.Object add(java.lang.Object)>($r38);

        $r40 = (org.apache.commons.math3.FieldElement) $r39;

        r5[i11] = $r40;

     label08:
        i11 = i11 + -1;

        goto label05;

     label09:
        i10 = i10 + 1;

        goto label04;

     label10:
        return r54;
    }
}
