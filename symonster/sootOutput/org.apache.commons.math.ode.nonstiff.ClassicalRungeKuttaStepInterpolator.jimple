class org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaStepInterpolator extends org.apache.commons.math.ode.nonstiff.RungeKuttaStepInterpolator
{
    private static final long serialVersionUID;

    public void <init>()
    {
        org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaStepInterpolator r0;

        r0 := @this: org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaStepInterpolator;

        specialinvoke r0.<org.apache.commons.math.ode.nonstiff.RungeKuttaStepInterpolator: void <init>()>();

        return;
    }

    public void <init>(org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaStepInterpolator)
    {
        org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaStepInterpolator r0, r1;

        r0 := @this: org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaStepInterpolator;

        r1 := @parameter0: org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaStepInterpolator;

        specialinvoke r0.<org.apache.commons.math.ode.nonstiff.RungeKuttaStepInterpolator: void <init>(org.apache.commons.math.ode.nonstiff.RungeKuttaStepInterpolator)>(r1);

        return;
    }

    protected org.apache.commons.math.ode.sampling.StepInterpolator doCopy()
    {
        org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaStepInterpolator r0, $r1;

        r0 := @this: org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaStepInterpolator;

        $r1 = new org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaStepInterpolator;

        specialinvoke $r1.<org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaStepInterpolator: void <init>(org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaStepInterpolator)>(r0);

        return $r1;
    }

    protected void computeInterpolatedStateAndDerivatives(double, double) throws org.apache.commons.math.ode.DerivativeException
    {
        org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaStepInterpolator r0;
        double d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, d10, d11, d12, d13, d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21, $d22, $d23, $d24, $d25, $d26, $d27, $d28, $d29, $d30, $d31, $d32, $d33, $d34, $d35, $d36, $d37, $d38, $d39, $d40, $d41, $d42;
        double[] $r1, $r3, $r5, $r7, $r9, $r10, $r11, $r12;
        int $i0, i1;
        double[][] $r2, $r4, $r6, $r8;

        r0 := @this: org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaStepInterpolator;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        d2 = 4.0 * d0;

        d3 = 1.0 - d0;

        $d15 = 2.0 * d0;

        d4 = 1.0 - $d15;

        d5 = d1 / 6.0;

        $d16 = neg d2;

        $d17 = $d16 + 5.0;

        $d18 = $d17 * d0;

        $d19 = $d18 - 1.0;

        d6 = d5 * $d19;

        $d20 = d2 - 2.0;

        $d21 = $d20 * d0;

        $d22 = $d21 - 2.0;

        d7 = d5 * $d22;

        $d23 = neg d2;

        $d24 = $d23 - 1.0;

        $d25 = $d24 * d0;

        $d26 = $d25 - 1.0;

        d8 = d5 * $d26;

        d9 = d3 * d4;

        $d27 = 2.0 * d0;

        d10 = $d27 * d3;

        $d28 = neg d0;

        d11 = $d28 * d4;

        i1 = 0;

     label1:
        $r1 = r0.<org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaStepInterpolator: double[] interpolatedState>;

        $i0 = lengthof $r1;

        if i1 >= $i0 goto label2;

        $r2 = r0.<org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaStepInterpolator: double[][] yDotK>;

        $r3 = $r2[0];

        d12 = $r3[i1];

        $r4 = r0.<org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaStepInterpolator: double[][] yDotK>;

        $r5 = $r4[1];

        $d30 = $r5[i1];

        $r6 = r0.<org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaStepInterpolator: double[][] yDotK>;

        $r7 = $r6[2];

        $d29 = $r7[i1];

        d13 = $d30 + $d29;

        $r8 = r0.<org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaStepInterpolator: double[][] yDotK>;

        $r9 = $r8[3];

        d14 = $r9[i1];

        $r11 = r0.<org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaStepInterpolator: double[] interpolatedState>;

        $r10 = r0.<org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaStepInterpolator: double[] currentState>;

        $d32 = $r10[i1];

        $d31 = d6 * d12;

        $d34 = $d32 + $d31;

        $d33 = d7 * d13;

        $d36 = $d34 + $d33;

        $d35 = d8 * d14;

        $d37 = $d36 + $d35;

        $r11[i1] = $d37;

        $r12 = r0.<org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaStepInterpolator: double[] interpolatedDerivatives>;

        $d39 = d9 * d12;

        $d38 = d10 * d13;

        $d41 = $d39 + $d38;

        $d40 = d11 * d14;

        $d42 = $d41 + $d40;

        $r12[i1] = $d42;

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    public static void <clinit>()
    {
        <org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaStepInterpolator: long serialVersionUID> = -6576285612589783992L;

        return;
    }
}
