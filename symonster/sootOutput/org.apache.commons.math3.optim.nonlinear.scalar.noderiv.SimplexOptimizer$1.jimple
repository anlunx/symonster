class org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizer$1 extends java.lang.Object implements org.apache.commons.math3.analysis.MultivariateFunction
{
    final org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizer this$0;

    void <init>(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizer)
    {
        org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizer$1 r0;
        org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizer r1;

        r0 := @this: org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizer$1;

        r1 := @parameter0: org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizer;

        r0.<org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizer$1: org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizer this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public double value(double[])
    {
        org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizer$1 r0;
        double[] r1;
        org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizer $r2;
        double $d0;

        r0 := @this: org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizer$1;

        r1 := @parameter0: double[];

        $r2 = r0.<org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizer$1: org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizer this$0>;

        $d0 = virtualinvoke $r2.<org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizer: double computeObjectiveValue(double[])>(r1);

        return $d0;
    }
}
