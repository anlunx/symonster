class org.apache.commons.math.ode.jacobians.FirstOrderIntegratorWithJacobians$FiniteDifferencesWrapper extends java.lang.Object implements org.apache.commons.math.ode.jacobians.ODEWithJacobians
{
    private final org.apache.commons.math.ode.jacobians.ParameterizedODE ode;
    private final double[] p;
    private final double[] hY;
    private final double[] hP;
    private final double[] tmpDot;
    final org.apache.commons.math.ode.jacobians.FirstOrderIntegratorWithJacobians this$0;

    public void <init>(org.apache.commons.math.ode.jacobians.FirstOrderIntegratorWithJacobians, org.apache.commons.math.ode.jacobians.ParameterizedODE, double[], double[], double[])
    {
        org.apache.commons.math.ode.jacobians.FirstOrderIntegratorWithJacobians$FiniteDifferencesWrapper r0;
        org.apache.commons.math.ode.jacobians.FirstOrderIntegratorWithJacobians r1;
        org.apache.commons.math.ode.jacobians.ParameterizedODE r2;
        double[] r3, r4, r5, $r7, $r9, $r11, $r12;
        java.lang.Object $r6, $r8, $r10;
        int $i0;

        r0 := @this: org.apache.commons.math.ode.jacobians.FirstOrderIntegratorWithJacobians$FiniteDifferencesWrapper;

        r1 := @parameter0: org.apache.commons.math.ode.jacobians.FirstOrderIntegratorWithJacobians;

        r2 := @parameter1: org.apache.commons.math.ode.jacobians.ParameterizedODE;

        r3 := @parameter2: double[];

        r4 := @parameter3: double[];

        r5 := @parameter4: double[];

        r0.<org.apache.commons.math.ode.jacobians.FirstOrderIntegratorWithJacobians$FiniteDifferencesWrapper: org.apache.commons.math.ode.jacobians.FirstOrderIntegratorWithJacobians this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.commons.math.ode.jacobians.FirstOrderIntegratorWithJacobians$FiniteDifferencesWrapper: org.apache.commons.math.ode.jacobians.ParameterizedODE ode> = r2;

        $r6 = virtualinvoke r3.<java.lang.Object: java.lang.Object clone()>();

        $r7 = (double[]) $r6;

        r0.<org.apache.commons.math.ode.jacobians.FirstOrderIntegratorWithJacobians$FiniteDifferencesWrapper: double[] p> = $r7;

        $r8 = virtualinvoke r4.<java.lang.Object: java.lang.Object clone()>();

        $r9 = (double[]) $r8;

        r0.<org.apache.commons.math.ode.jacobians.FirstOrderIntegratorWithJacobians$FiniteDifferencesWrapper: double[] hY> = $r9;

        $r10 = virtualinvoke r5.<java.lang.Object: java.lang.Object clone()>();

        $r11 = (double[]) $r10;

        r0.<org.apache.commons.math.ode.jacobians.FirstOrderIntegratorWithJacobians$FiniteDifferencesWrapper: double[] hP> = $r11;

        $i0 = interfaceinvoke r2.<org.apache.commons.math.ode.jacobians.ParameterizedODE: int getDimension()>();

        $r12 = newarray (double)[$i0];

        r0.<org.apache.commons.math.ode.jacobians.FirstOrderIntegratorWithJacobians$FiniteDifferencesWrapper: double[] tmpDot> = $r12;

        return;
    }

    public int getDimension()
    {
        org.apache.commons.math.ode.jacobians.FirstOrderIntegratorWithJacobians$FiniteDifferencesWrapper r0;
        org.apache.commons.math.ode.jacobians.ParameterizedODE $r1;
        int $i0;

        r0 := @this: org.apache.commons.math.ode.jacobians.FirstOrderIntegratorWithJacobians$FiniteDifferencesWrapper;

        $r1 = r0.<org.apache.commons.math.ode.jacobians.FirstOrderIntegratorWithJacobians$FiniteDifferencesWrapper: org.apache.commons.math.ode.jacobians.ParameterizedODE ode>;

        $i0 = interfaceinvoke $r1.<org.apache.commons.math.ode.jacobians.ParameterizedODE: int getDimension()>();

        return $i0;
    }

    public void computeDerivatives(double, double[], double[]) throws org.apache.commons.math.ode.DerivativeException
    {
        org.apache.commons.math.ode.jacobians.FirstOrderIntegratorWithJacobians$FiniteDifferencesWrapper r0;
        double d0;
        double[] r1, r2;
        org.apache.commons.math.ode.jacobians.ParameterizedODE $r3;

        r0 := @this: org.apache.commons.math.ode.jacobians.FirstOrderIntegratorWithJacobians$FiniteDifferencesWrapper;

        d0 := @parameter0: double;

        r1 := @parameter1: double[];

        r2 := @parameter2: double[];

        $r3 = r0.<org.apache.commons.math.ode.jacobians.FirstOrderIntegratorWithJacobians$FiniteDifferencesWrapper: org.apache.commons.math.ode.jacobians.ParameterizedODE ode>;

        interfaceinvoke $r3.<org.apache.commons.math.ode.jacobians.ParameterizedODE: void computeDerivatives(double,double[],double[])>(d0, r1, r2);

        return;
    }

    public int getParametersDimension()
    {
        org.apache.commons.math.ode.jacobians.FirstOrderIntegratorWithJacobians$FiniteDifferencesWrapper r0;
        org.apache.commons.math.ode.jacobians.ParameterizedODE $r1;
        int $i0;

        r0 := @this: org.apache.commons.math.ode.jacobians.FirstOrderIntegratorWithJacobians$FiniteDifferencesWrapper;

        $r1 = r0.<org.apache.commons.math.ode.jacobians.FirstOrderIntegratorWithJacobians$FiniteDifferencesWrapper: org.apache.commons.math.ode.jacobians.ParameterizedODE ode>;

        $i0 = interfaceinvoke $r1.<org.apache.commons.math.ode.jacobians.ParameterizedODE: int getParametersDimension()>();

        return $i0;
    }

    public void computeJacobians(double, double[], double[], double[][], double[][]) throws org.apache.commons.math.ode.DerivativeException
    {
        org.apache.commons.math.ode.jacobians.FirstOrderIntegratorWithJacobians$FiniteDifferencesWrapper r0;
        double d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, d18;
        double[] r1, r2, $r5, $r6, $r10, $r11, $r13, $r15, $r17, $r18, $r19, $r20, $r21, $r23, $r24, $r25;
        double[][] r3, r4;
        int i0, i1, $i2, $i4, $i5, $i6, i7, i8, i9, i10;
        org.apache.commons.math.ode.jacobians.FirstOrderIntegratorWithJacobians $r7, $r8, $r9, $r28;
        org.apache.commons.math.ode.jacobians.ParameterizedODE $r12, $r14, $r16, $r22;
        org.apache.commons.math.ode.DerivativeException $r26;
        org.apache.commons.math.MaxEvaluationsExceededException $r27;

        r0 := @this: org.apache.commons.math.ode.jacobians.FirstOrderIntegratorWithJacobians$FiniteDifferencesWrapper;

        d0 := @parameter0: double;

        r1 := @parameter1: double[];

        r2 := @parameter2: double[];

        r3 := @parameter3: double[][];

        r4 := @parameter4: double[][];

        $r5 = r0.<org.apache.commons.math.ode.jacobians.FirstOrderIntegratorWithJacobians$FiniteDifferencesWrapper: double[] hY>;

        i0 = lengthof $r5;

        $r6 = r0.<org.apache.commons.math.ode.jacobians.FirstOrderIntegratorWithJacobians$FiniteDifferencesWrapper: double[] hP>;

        i1 = lengthof $r6;

        $r7 = r0.<org.apache.commons.math.ode.jacobians.FirstOrderIntegratorWithJacobians$FiniteDifferencesWrapper: org.apache.commons.math.ode.jacobians.FirstOrderIntegratorWithJacobians this$0>;

        $i2 = i0 + i1;

        staticinvoke <org.apache.commons.math.ode.jacobians.FirstOrderIntegratorWithJacobians: int access$112(org.apache.commons.math.ode.jacobians.FirstOrderIntegratorWithJacobians,int)>($r7, $i2);

        $r8 = r0.<org.apache.commons.math.ode.jacobians.FirstOrderIntegratorWithJacobians$FiniteDifferencesWrapper: org.apache.commons.math.ode.jacobians.FirstOrderIntegratorWithJacobians this$0>;

        $i4 = staticinvoke <org.apache.commons.math.ode.jacobians.FirstOrderIntegratorWithJacobians: int access$100(org.apache.commons.math.ode.jacobians.FirstOrderIntegratorWithJacobians)>($r8);

        $r9 = r0.<org.apache.commons.math.ode.jacobians.FirstOrderIntegratorWithJacobians$FiniteDifferencesWrapper: org.apache.commons.math.ode.jacobians.FirstOrderIntegratorWithJacobians this$0>;

        $i5 = staticinvoke <org.apache.commons.math.ode.jacobians.FirstOrderIntegratorWithJacobians: int access$200(org.apache.commons.math.ode.jacobians.FirstOrderIntegratorWithJacobians)>($r9);

        if $i4 <= $i5 goto label1;

        $r26 = new org.apache.commons.math.ode.DerivativeException;

        $r27 = new org.apache.commons.math.MaxEvaluationsExceededException;

        $r28 = r0.<org.apache.commons.math.ode.jacobians.FirstOrderIntegratorWithJacobians$FiniteDifferencesWrapper: org.apache.commons.math.ode.jacobians.FirstOrderIntegratorWithJacobians this$0>;

        $i6 = staticinvoke <org.apache.commons.math.ode.jacobians.FirstOrderIntegratorWithJacobians: int access$200(org.apache.commons.math.ode.jacobians.FirstOrderIntegratorWithJacobians)>($r28);

        specialinvoke $r27.<org.apache.commons.math.MaxEvaluationsExceededException: void <init>(int)>($i6);

        specialinvoke $r26.<org.apache.commons.math.ode.DerivativeException: void <init>(java.lang.Throwable)>($r27);

        throw $r26;

     label1:
        i7 = 0;

     label2:
        if i7 >= i0 goto label5;

        d18 = r1[i7];

        $d11 = r1[i7];

        $r20 = r0.<org.apache.commons.math.ode.jacobians.FirstOrderIntegratorWithJacobians$FiniteDifferencesWrapper: double[] hY>;

        $d10 = $r20[i7];

        $d12 = $d11 + $d10;

        r1[i7] = $d12;

        $r22 = r0.<org.apache.commons.math.ode.jacobians.FirstOrderIntegratorWithJacobians$FiniteDifferencesWrapper: org.apache.commons.math.ode.jacobians.ParameterizedODE ode>;

        $r21 = r0.<org.apache.commons.math.ode.jacobians.FirstOrderIntegratorWithJacobians$FiniteDifferencesWrapper: double[] tmpDot>;

        interfaceinvoke $r22.<org.apache.commons.math.ode.jacobians.ParameterizedODE: void computeDerivatives(double,double[],double[])>(d0, r1, $r21);

        i8 = 0;

     label3:
        if i8 >= i0 goto label4;

        $r25 = r3[i8];

        $r23 = r0.<org.apache.commons.math.ode.jacobians.FirstOrderIntegratorWithJacobians$FiniteDifferencesWrapper: double[] tmpDot>;

        $d14 = $r23[i8];

        $d13 = r2[i8];

        $d16 = $d14 - $d13;

        $r24 = r0.<org.apache.commons.math.ode.jacobians.FirstOrderIntegratorWithJacobians$FiniteDifferencesWrapper: double[] hY>;

        $d15 = $r24[i7];

        $d17 = $d16 / $d15;

        $r25[i7] = $d17;

        i8 = i8 + 1;

        goto label3;

     label4:
        r1[i7] = d18;

        i7 = i7 + 1;

        goto label2;

     label5:
        i9 = 0;

     label6:
        if i9 >= i1 goto label9;

        $r12 = r0.<org.apache.commons.math.ode.jacobians.FirstOrderIntegratorWithJacobians$FiniteDifferencesWrapper: org.apache.commons.math.ode.jacobians.ParameterizedODE ode>;

        $r10 = r0.<org.apache.commons.math.ode.jacobians.FirstOrderIntegratorWithJacobians$FiniteDifferencesWrapper: double[] p>;

        $d2 = $r10[i9];

        $r11 = r0.<org.apache.commons.math.ode.jacobians.FirstOrderIntegratorWithJacobians$FiniteDifferencesWrapper: double[] hP>;

        $d1 = $r11[i9];

        $d3 = $d2 + $d1;

        interfaceinvoke $r12.<org.apache.commons.math.ode.jacobians.ParameterizedODE: void setParameter(int,double)>(i9, $d3);

        $r14 = r0.<org.apache.commons.math.ode.jacobians.FirstOrderIntegratorWithJacobians$FiniteDifferencesWrapper: org.apache.commons.math.ode.jacobians.ParameterizedODE ode>;

        $r13 = r0.<org.apache.commons.math.ode.jacobians.FirstOrderIntegratorWithJacobians$FiniteDifferencesWrapper: double[] tmpDot>;

        interfaceinvoke $r14.<org.apache.commons.math.ode.jacobians.ParameterizedODE: void computeDerivatives(double,double[],double[])>(d0, r1, $r13);

        i10 = 0;

     label7:
        if i10 >= i0 goto label8;

        $r19 = r4[i10];

        $r17 = r0.<org.apache.commons.math.ode.jacobians.FirstOrderIntegratorWithJacobians$FiniteDifferencesWrapper: double[] tmpDot>;

        $d6 = $r17[i10];

        $d5 = r2[i10];

        $d8 = $d6 - $d5;

        $r18 = r0.<org.apache.commons.math.ode.jacobians.FirstOrderIntegratorWithJacobians$FiniteDifferencesWrapper: double[] hP>;

        $d7 = $r18[i9];

        $d9 = $d8 / $d7;

        $r19[i9] = $d9;

        i10 = i10 + 1;

        goto label7;

     label8:
        $r16 = r0.<org.apache.commons.math.ode.jacobians.FirstOrderIntegratorWithJacobians$FiniteDifferencesWrapper: org.apache.commons.math.ode.jacobians.ParameterizedODE ode>;

        $r15 = r0.<org.apache.commons.math.ode.jacobians.FirstOrderIntegratorWithJacobians$FiniteDifferencesWrapper: double[] p>;

        $d4 = $r15[i9];

        interfaceinvoke $r16.<org.apache.commons.math.ode.jacobians.ParameterizedODE: void setParameter(int,double)>(i9, $d4);

        i9 = i9 + 1;

        goto label6;

     label9:
        return;
    }
}
