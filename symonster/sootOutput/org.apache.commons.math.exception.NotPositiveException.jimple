public class org.apache.commons.math.exception.NotPositiveException extends org.apache.commons.math.exception.NumberIsTooSmallException
{
    private static final long serialVersionUID;

    public void <init>(java.lang.Number)
    {
        org.apache.commons.math.exception.NotPositiveException r0;
        java.lang.Number r1;
        java.lang.Integer $r2;

        r0 := @this: org.apache.commons.math.exception.NotPositiveException;

        r1 := @parameter0: java.lang.Number;

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        specialinvoke r0.<org.apache.commons.math.exception.NumberIsTooSmallException: void <init>(java.lang.Number,java.lang.Number,boolean)>(r1, $r2, 1);

        return;
    }

    public void <init>(org.apache.commons.math.exception.util.Localizable, java.lang.Number)
    {
        org.apache.commons.math.exception.NotPositiveException r0;
        org.apache.commons.math.exception.util.Localizable r1;
        java.lang.Number r2;
        java.lang.Integer $r3;

        r0 := @this: org.apache.commons.math.exception.NotPositiveException;

        r1 := @parameter0: org.apache.commons.math.exception.util.Localizable;

        r2 := @parameter1: java.lang.Number;

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        specialinvoke r0.<org.apache.commons.math.exception.NumberIsTooSmallException: void <init>(org.apache.commons.math.exception.util.Localizable,java.lang.Number,java.lang.Number,boolean)>(r1, r2, $r3, 1);

        return;
    }

    public static void <clinit>()
    {
        <org.apache.commons.math.exception.NotPositiveException: long serialVersionUID> = -2250556892093726375L;

        return;
    }
}
