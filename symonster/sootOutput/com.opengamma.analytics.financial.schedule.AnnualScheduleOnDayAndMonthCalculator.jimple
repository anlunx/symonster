public class com.opengamma.analytics.financial.schedule.AnnualScheduleOnDayAndMonthCalculator extends com.opengamma.analytics.financial.schedule.Schedule
{
    private final org.threeten.bp.MonthDay _monthDay;

    public void <init>(int, org.threeten.bp.Month)
    {
        com.opengamma.analytics.financial.schedule.AnnualScheduleOnDayAndMonthCalculator r0;
        int i0;
        org.threeten.bp.Month r1;
        org.threeten.bp.MonthDay $r2;

        r0 := @this: com.opengamma.analytics.financial.schedule.AnnualScheduleOnDayAndMonthCalculator;

        i0 := @parameter0: int;

        r1 := @parameter1: org.threeten.bp.Month;

        specialinvoke r0.<com.opengamma.analytics.financial.schedule.Schedule: void <init>()>();

        $r2 = staticinvoke <org.threeten.bp.MonthDay: org.threeten.bp.MonthDay of(org.threeten.bp.Month,int)>(r1, i0);

        r0.<com.opengamma.analytics.financial.schedule.AnnualScheduleOnDayAndMonthCalculator: org.threeten.bp.MonthDay _monthDay> = $r2;

        return;
    }

    public org.threeten.bp.LocalDate[] getSchedule(org.threeten.bp.LocalDate, org.threeten.bp.LocalDate, boolean, boolean)
    {
        com.opengamma.analytics.financial.schedule.AnnualScheduleOnDayAndMonthCalculator r0;
        org.threeten.bp.LocalDate r1, r2;
        boolean z0, z1;
        org.threeten.bp.LocalDate[] $r3;

        r0 := @this: com.opengamma.analytics.financial.schedule.AnnualScheduleOnDayAndMonthCalculator;

        r1 := @parameter0: org.threeten.bp.LocalDate;

        r2 := @parameter1: org.threeten.bp.LocalDate;

        z0 := @parameter2: boolean;

        z1 := @parameter3: boolean;

        $r3 = virtualinvoke r0.<com.opengamma.analytics.financial.schedule.AnnualScheduleOnDayAndMonthCalculator: org.threeten.bp.LocalDate[] getSchedule(org.threeten.bp.LocalDate,org.threeten.bp.LocalDate)>(r1, r2);

        return $r3;
    }

    public org.threeten.bp.LocalDate[] getSchedule(org.threeten.bp.LocalDate, org.threeten.bp.LocalDate)
    {
        com.opengamma.analytics.financial.schedule.AnnualScheduleOnDayAndMonthCalculator r0;
        org.threeten.bp.LocalDate r1, r2, r13;
        boolean $z0, $z1, $z2, $z4, $z5, $z6, $z7;
        org.threeten.bp.MonthDay $r4, $r9, $r10;
        org.threeten.bp.LocalDate[] $r6, $r8, $r12;
        java.lang.Object[] $r7;
        java.lang.IllegalArgumentException r14;
        java.util.ArrayList r15;
        org.threeten.bp.temporal.TemporalAdjuster r16;

        r0 := @this: com.opengamma.analytics.financial.schedule.AnnualScheduleOnDayAndMonthCalculator;

        r1 := @parameter0: org.threeten.bp.LocalDate;

        r2 := @parameter1: org.threeten.bp.LocalDate;

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object,java.lang.String)>(r1, "start date");

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object,java.lang.String)>(r2, "end date");

        $z0 = virtualinvoke r1.<org.threeten.bp.LocalDate: boolean isBefore(org.threeten.bp.chrono.ChronoLocalDate)>(r2);

        if $z0 != 0 goto label1;

        $z5 = virtualinvoke r1.<org.threeten.bp.LocalDate: boolean equals(java.lang.Object)>(r2);

        if $z5 == 0 goto label2;

     label1:
        $z6 = 1;

        goto label3;

     label2:
        $z6 = 0;

     label3:
        staticinvoke <org.apache.commons.lang.Validate: void isTrue(boolean)>($z6);

        $z1 = virtualinvoke r1.<org.threeten.bp.LocalDate: boolean equals(java.lang.Object)>(r2);

        if $z1 == 0 goto label5;

        $r9 = staticinvoke <org.threeten.bp.MonthDay: org.threeten.bp.MonthDay 'from'(org.threeten.bp.temporal.TemporalAccessor)>(r1);

        $r10 = r0.<com.opengamma.analytics.financial.schedule.AnnualScheduleOnDayAndMonthCalculator: org.threeten.bp.MonthDay _monthDay>;

        $z4 = virtualinvoke $r9.<org.threeten.bp.MonthDay: boolean equals(java.lang.Object)>($r10);

        if $z4 == 0 goto label4;

        $r12 = newarray (org.threeten.bp.LocalDate)[1];

        $r12[0] = r1;

        return $r12;

     label4:
        r14 = new java.lang.IllegalArgumentException;

        specialinvoke r14.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Start date and end date were the same but the day of month and month of year were not those required");

        throw r14;

     label5:
        $r4 = r0.<com.opengamma.analytics.financial.schedule.AnnualScheduleOnDayAndMonthCalculator: org.threeten.bp.MonthDay _monthDay>;

        r16 = (org.threeten.bp.temporal.TemporalAdjuster) $r4;

        r13 = virtualinvoke r1.<org.threeten.bp.LocalDate: org.threeten.bp.LocalDate 'with'(org.threeten.bp.temporal.TemporalAdjuster)>(r16);

        $z2 = virtualinvoke r13.<org.threeten.bp.LocalDate: boolean isBefore(org.threeten.bp.chrono.ChronoLocalDate)>(r1);

        if $z2 == 0 goto label6;

        r13 = virtualinvoke r13.<org.threeten.bp.LocalDate: org.threeten.bp.LocalDate plusYears(long)>(1L);

     label6:
        r15 = new java.util.ArrayList;

        specialinvoke r15.<java.util.ArrayList: void <init>()>();

     label7:
        $z7 = virtualinvoke r13.<org.threeten.bp.LocalDate: boolean isAfter(org.threeten.bp.chrono.ChronoLocalDate)>(r2);

        if $z7 != 0 goto label8;

        interfaceinvoke r15.<java.util.List: boolean add(java.lang.Object)>(r13);

        r13 = virtualinvoke r13.<org.threeten.bp.LocalDate: org.threeten.bp.LocalDate plusYears(long)>(1L);

        goto label7;

     label8:
        $r6 = <com.opengamma.analytics.financial.schedule.AnnualScheduleOnDayAndMonthCalculator: org.threeten.bp.LocalDate[] EMPTY_LOCAL_DATE_ARRAY>;

        $r7 = interfaceinvoke r15.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r6);

        $r8 = (org.threeten.bp.LocalDate[]) $r7;

        return $r8;
    }

    public org.threeten.bp.ZonedDateTime[] getSchedule(org.threeten.bp.ZonedDateTime, org.threeten.bp.ZonedDateTime, boolean, boolean)
    {
        com.opengamma.analytics.financial.schedule.AnnualScheduleOnDayAndMonthCalculator r0;
        org.threeten.bp.ZonedDateTime r1, r2;
        boolean z0, z1;
        org.threeten.bp.ZonedDateTime[] $r3;

        r0 := @this: com.opengamma.analytics.financial.schedule.AnnualScheduleOnDayAndMonthCalculator;

        r1 := @parameter0: org.threeten.bp.ZonedDateTime;

        r2 := @parameter1: org.threeten.bp.ZonedDateTime;

        z0 := @parameter2: boolean;

        z1 := @parameter3: boolean;

        $r3 = virtualinvoke r0.<com.opengamma.analytics.financial.schedule.AnnualScheduleOnDayAndMonthCalculator: org.threeten.bp.ZonedDateTime[] getSchedule(org.threeten.bp.ZonedDateTime,org.threeten.bp.ZonedDateTime)>(r1, r2);

        return $r3;
    }

    public org.threeten.bp.ZonedDateTime[] getSchedule(org.threeten.bp.ZonedDateTime, org.threeten.bp.ZonedDateTime)
    {
        com.opengamma.analytics.financial.schedule.AnnualScheduleOnDayAndMonthCalculator r0;
        org.threeten.bp.ZonedDateTime r1, r2, r13;
        boolean $z0, $z1, $z2, $z4, $z5, $z6, $z7;
        org.threeten.bp.MonthDay $r4, $r9, $r10;
        org.threeten.bp.ZonedDateTime[] $r6, $r8, $r12;
        java.lang.Object[] $r7;
        java.lang.IllegalArgumentException r14;
        java.util.ArrayList r15;
        org.threeten.bp.temporal.TemporalAdjuster r16;

        r0 := @this: com.opengamma.analytics.financial.schedule.AnnualScheduleOnDayAndMonthCalculator;

        r1 := @parameter0: org.threeten.bp.ZonedDateTime;

        r2 := @parameter1: org.threeten.bp.ZonedDateTime;

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object,java.lang.String)>(r1, "start date");

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object,java.lang.String)>(r2, "end date");

        $z0 = virtualinvoke r1.<org.threeten.bp.ZonedDateTime: boolean isBefore(org.threeten.bp.chrono.ChronoZonedDateTime)>(r2);

        if $z0 != 0 goto label1;

        $z5 = virtualinvoke r1.<org.threeten.bp.ZonedDateTime: boolean equals(java.lang.Object)>(r2);

        if $z5 == 0 goto label2;

     label1:
        $z6 = 1;

        goto label3;

     label2:
        $z6 = 0;

     label3:
        staticinvoke <org.apache.commons.lang.Validate: void isTrue(boolean)>($z6);

        $z1 = virtualinvoke r1.<org.threeten.bp.ZonedDateTime: boolean equals(java.lang.Object)>(r2);

        if $z1 == 0 goto label5;

        $r9 = staticinvoke <org.threeten.bp.MonthDay: org.threeten.bp.MonthDay 'from'(org.threeten.bp.temporal.TemporalAccessor)>(r1);

        $r10 = r0.<com.opengamma.analytics.financial.schedule.AnnualScheduleOnDayAndMonthCalculator: org.threeten.bp.MonthDay _monthDay>;

        $z4 = virtualinvoke $r9.<org.threeten.bp.MonthDay: boolean equals(java.lang.Object)>($r10);

        if $z4 == 0 goto label4;

        $r12 = newarray (org.threeten.bp.ZonedDateTime)[1];

        $r12[0] = r1;

        return $r12;

     label4:
        r14 = new java.lang.IllegalArgumentException;

        specialinvoke r14.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Start date and end date were the same but the day of month and month of year were not those required");

        throw r14;

     label5:
        $r4 = r0.<com.opengamma.analytics.financial.schedule.AnnualScheduleOnDayAndMonthCalculator: org.threeten.bp.MonthDay _monthDay>;

        r16 = (org.threeten.bp.temporal.TemporalAdjuster) $r4;

        r13 = virtualinvoke r1.<org.threeten.bp.ZonedDateTime: org.threeten.bp.ZonedDateTime 'with'(org.threeten.bp.temporal.TemporalAdjuster)>(r16);

        $z2 = virtualinvoke r13.<org.threeten.bp.ZonedDateTime: boolean isBefore(org.threeten.bp.chrono.ChronoZonedDateTime)>(r1);

        if $z2 == 0 goto label6;

        r13 = virtualinvoke r13.<org.threeten.bp.ZonedDateTime: org.threeten.bp.ZonedDateTime plusYears(long)>(1L);

     label6:
        r15 = new java.util.ArrayList;

        specialinvoke r15.<java.util.ArrayList: void <init>()>();

     label7:
        $z7 = virtualinvoke r13.<org.threeten.bp.ZonedDateTime: boolean isAfter(org.threeten.bp.chrono.ChronoZonedDateTime)>(r2);

        if $z7 != 0 goto label8;

        interfaceinvoke r15.<java.util.List: boolean add(java.lang.Object)>(r13);

        r13 = virtualinvoke r13.<org.threeten.bp.ZonedDateTime: org.threeten.bp.ZonedDateTime plusYears(long)>(1L);

        goto label7;

     label8:
        $r6 = <com.opengamma.analytics.financial.schedule.AnnualScheduleOnDayAndMonthCalculator: org.threeten.bp.ZonedDateTime[] EMPTY_ZONED_DATE_TIME_ARRAY>;

        $r7 = interfaceinvoke r15.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r6);

        $r8 = (org.threeten.bp.ZonedDateTime[]) $r7;

        return $r8;
    }

    public boolean equals(java.lang.Object)
    {
        com.opengamma.analytics.financial.schedule.AnnualScheduleOnDayAndMonthCalculator r0, r2;
        java.lang.Object r1;
        java.lang.Class $r3, $r4;
        org.threeten.bp.MonthDay $r5, $r6;
        boolean $z0;

        r0 := @this: com.opengamma.analytics.financial.schedule.AnnualScheduleOnDayAndMonthCalculator;

        r1 := @parameter0: java.lang.Object;

        if r0 != r1 goto label1;

        return 1;

     label1:
        if r1 != null goto label2;

        return 0;

     label2:
        $r3 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r4 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        if $r3 == $r4 goto label3;

        return 0;

     label3:
        r2 = (com.opengamma.analytics.financial.schedule.AnnualScheduleOnDayAndMonthCalculator) r1;

        $r6 = r0.<com.opengamma.analytics.financial.schedule.AnnualScheduleOnDayAndMonthCalculator: org.threeten.bp.MonthDay _monthDay>;

        $r5 = r2.<com.opengamma.analytics.financial.schedule.AnnualScheduleOnDayAndMonthCalculator: org.threeten.bp.MonthDay _monthDay>;

        $z0 = virtualinvoke $r6.<org.threeten.bp.MonthDay: boolean equals(java.lang.Object)>($r5);

        return $z0;
    }

    public int hashCode()
    {
        com.opengamma.analytics.financial.schedule.AnnualScheduleOnDayAndMonthCalculator r0;
        org.threeten.bp.MonthDay $r1;
        int $i0;

        r0 := @this: com.opengamma.analytics.financial.schedule.AnnualScheduleOnDayAndMonthCalculator;

        $r1 = r0.<com.opengamma.analytics.financial.schedule.AnnualScheduleOnDayAndMonthCalculator: org.threeten.bp.MonthDay _monthDay>;

        $i0 = virtualinvoke $r1.<org.threeten.bp.MonthDay: int hashCode()>();

        return $i0;
    }
}
