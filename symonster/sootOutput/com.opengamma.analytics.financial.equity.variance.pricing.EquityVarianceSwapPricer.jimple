public final class com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapPricer extends java.lang.Object
{
    private static final com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapForwardPurePDE VAR_SWAP_FWD_PDE_CALCULATOR;
    private static final com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapBackwardsPurePDE VAR_SWAP_BKW_PDE_CALCULATOR;
    private final com.opengamma.analytics.financial.model.volatility.surface.VolatilitySurfaceInterpolator _surfaceInterpolator;

    public static com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapPricer$Builder builder()
    {
        com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapPricer$Builder $r0;

        $r0 = new com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapPricer$Builder;

        specialinvoke $r0.<com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapPricer$Builder: void <init>()>();

        return $r0;
    }

    private void <init>(com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapPricer$Builder)
    {
        com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapPricer r0;
        com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapPricer$Builder r1;
        com.opengamma.analytics.financial.model.volatility.surface.VolatilitySurfaceInterpolator $r2;
        com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.GeneralSmileInterpolator $r3;
        com.opengamma.analytics.math.interpolation.Interpolator1D $r4;
        boolean $z0, $z1, $z2;

        r0 := @this: com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapPricer;

        r1 := @parameter0: com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapPricer$Builder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new com.opengamma.analytics.financial.model.volatility.surface.VolatilitySurfaceInterpolator;

        $r3 = virtualinvoke r1.<com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapPricer$Builder: com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.GeneralSmileInterpolator getSmileInterpolator()>();

        $r4 = virtualinvoke r1.<com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapPricer$Builder: com.opengamma.analytics.math.interpolation.Interpolator1D getTimeInterpolator()>();

        $z0 = virtualinvoke r1.<com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapPricer$Builder: boolean useLogTime()>();

        $z1 = virtualinvoke r1.<com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapPricer$Builder: boolean useIntegratedVariance()>();

        $z2 = virtualinvoke r1.<com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapPricer$Builder: boolean useLogValue()>();

        specialinvoke $r2.<com.opengamma.analytics.financial.model.volatility.surface.VolatilitySurfaceInterpolator: void <init>(com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.GeneralSmileInterpolator,com.opengamma.analytics.math.interpolation.Interpolator1D,boolean,boolean,boolean)>($r3, $r4, $z0, $z1, $z2);

        r0.<com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapPricer: com.opengamma.analytics.financial.model.volatility.surface.VolatilitySurfaceInterpolator _surfaceInterpolator> = $r2;

        return;
    }

    public double priceFromImpliedVolsBackwardPDE(com.opengamma.analytics.financial.equity.variance.EquityVarianceSwap, double, com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve, com.opengamma.analytics.financial.equity.variance.pricing.AffineDividends, com.opengamma.analytics.financial.model.volatility.smile.fitting.sabr.SmileSurfaceDataBundle)
    {
        com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapPricer r0;
        com.opengamma.analytics.financial.equity.variance.EquityVarianceSwap r1;
        double d0, d1, d2, $d3;
        com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve r2;
        com.opengamma.analytics.financial.equity.variance.pricing.AffineDividends r3;
        com.opengamma.analytics.financial.model.volatility.smile.fitting.sabr.SmileSurfaceDataBundle r4;
        com.opengamma.analytics.financial.model.volatility.surface.PureImpliedVolatilitySurface r6;
        com.opengamma.analytics.financial.model.volatility.local.PureLocalVolatilitySurface r7;
        double[] r8;
        com.opengamma.analytics.financial.model.volatility.local.DupireLocalVolatilityCalculator $r12;
        com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapBackwardsPurePDE $r13;
        boolean $z0;

        r0 := @this: com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapPricer;

        r1 := @parameter0: com.opengamma.analytics.financial.equity.variance.EquityVarianceSwap;

        d0 := @parameter1: double;

        r2 := @parameter2: com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve;

        r3 := @parameter3: com.opengamma.analytics.financial.equity.variance.pricing.AffineDividends;

        r4 := @parameter4: com.opengamma.analytics.financial.model.volatility.smile.fitting.sabr.SmileSurfaceDataBundle;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "swap");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, "discount curve");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r4, "market volatilities");

        $r12 = new com.opengamma.analytics.financial.model.volatility.local.DupireLocalVolatilityCalculator;

        specialinvoke $r12.<com.opengamma.analytics.financial.model.volatility.local.DupireLocalVolatilityCalculator: void <init>()>();

        r6 = specialinvoke r0.<com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapPricer: com.opengamma.analytics.financial.model.volatility.surface.PureImpliedVolatilitySurface getPureImpliedVolFromMarket(double,com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve,com.opengamma.analytics.financial.equity.variance.pricing.AffineDividends,com.opengamma.analytics.financial.model.volatility.smile.fitting.sabr.SmileSurfaceDataBundle)>(d0, r2, r3, r4);

        r7 = virtualinvoke $r12.<com.opengamma.analytics.financial.model.volatility.local.DupireLocalVolatilityCalculator: com.opengamma.analytics.financial.model.volatility.local.PureLocalVolatilitySurface getLocalVolatility(com.opengamma.analytics.financial.model.volatility.surface.PureImpliedVolatilitySurface)>(r6);

        d1 = virtualinvoke r1.<com.opengamma.analytics.financial.equity.variance.EquityVarianceSwap: double getTimeToSettlement()>();

        $r13 = <com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapPricer: com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapBackwardsPurePDE VAR_SWAP_BKW_PDE_CALCULATOR>;

        r8 = virtualinvoke $r13.<com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapBackwardsPurePDE: double[] expectedVariance(double,com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve,com.opengamma.analytics.financial.equity.variance.pricing.AffineDividends,double,com.opengamma.analytics.financial.model.volatility.local.PureLocalVolatilitySurface)>(d0, r2, r3, d1, r7);

        $z0 = virtualinvoke r1.<com.opengamma.analytics.financial.equity.variance.EquityVarianceSwap: boolean correctForDividends()>();

        if $z0 == 0 goto label1;

        $d3 = r8[0];

        goto label2;

     label1:
        $d3 = r8[1];

     label2:
        d2 = $d3 / d1;

        return d2;
    }

    public double deltaWithStickyLocalVol(com.opengamma.analytics.financial.equity.variance.EquityVarianceSwap, double, com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve, com.opengamma.analytics.financial.equity.variance.pricing.AffineDividends, com.opengamma.analytics.financial.model.volatility.smile.fitting.sabr.SmileSurfaceDataBundle)
    {
        com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapPricer r0;
        com.opengamma.analytics.financial.equity.variance.EquityVarianceSwap r1;
        double d0, d2, d3, d4, d5, d6, d7, $d8, $d9, $d10;
        com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve r2;
        com.opengamma.analytics.financial.equity.variance.pricing.AffineDividends r3;
        com.opengamma.analytics.financial.model.volatility.smile.fitting.sabr.SmileSurfaceDataBundle r4;
        com.opengamma.analytics.financial.model.volatility.local.PureLocalVolatilitySurface r5, r9, r11;
        com.opengamma.analytics.financial.model.volatility.local.LocalVolatilitySurfaceStrike r7;
        com.opengamma.analytics.financial.equity.variance.pricing.EquityDividendsCurvesBundle $r16, $r17, $r20;
        boolean $z0;
        com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapForwardPurePDE $r18, $r21;
        double[] $r19, $r22;
        byte $b1;

        r0 := @this: com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapPricer;

        r1 := @parameter0: com.opengamma.analytics.financial.equity.variance.EquityVarianceSwap;

        d0 := @parameter1: double;

        r2 := @parameter2: com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve;

        r3 := @parameter3: com.opengamma.analytics.financial.equity.variance.pricing.AffineDividends;

        r4 := @parameter4: com.opengamma.analytics.financial.model.volatility.smile.fitting.sabr.SmileSurfaceDataBundle;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "swap");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, "discount curve");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r3, "dividends");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r4, "market volatilities");

        r5 = specialinvoke r0.<com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapPricer: com.opengamma.analytics.financial.model.volatility.local.PureLocalVolatilitySurface getPureLocalVolFromMarket(double,com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve,com.opengamma.analytics.financial.equity.variance.pricing.AffineDividends,com.opengamma.analytics.financial.model.volatility.smile.fitting.sabr.SmileSurfaceDataBundle)>(d0, r2, r3, r4);

        $r16 = new com.opengamma.analytics.financial.equity.variance.pricing.EquityDividendsCurvesBundle;

        specialinvoke $r16.<com.opengamma.analytics.financial.equity.variance.pricing.EquityDividendsCurvesBundle: void <init>(double,com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve,com.opengamma.analytics.financial.equity.variance.pricing.AffineDividends)>(d0, r2, r3);

        r7 = staticinvoke <com.opengamma.analytics.financial.equity.variance.pricing.VolatilitySurfaceConverter: com.opengamma.analytics.financial.model.volatility.local.LocalVolatilitySurfaceStrike convertLocalVolSurface(com.opengamma.analytics.financial.model.volatility.local.PureLocalVolatilitySurface,com.opengamma.analytics.financial.equity.variance.pricing.EquityDividendsCurvesBundle)>(r5, $r16);

        $z0 = virtualinvoke r1.<com.opengamma.analytics.financial.equity.variance.EquityVarianceSwap: boolean correctForDividends()>();

        if $z0 == 0 goto label1;

        $b1 = 0;

        goto label2;

     label1:
        $b1 = 1;

     label2:
        d2 = virtualinvoke r1.<com.opengamma.analytics.financial.equity.variance.EquityVarianceSwap: double getTimeToSettlement()>();

        d3 = d0 * 1.00001;

        $r17 = new com.opengamma.analytics.financial.equity.variance.pricing.EquityDividendsCurvesBundle;

        specialinvoke $r17.<com.opengamma.analytics.financial.equity.variance.pricing.EquityDividendsCurvesBundle: void <init>(double,com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve,com.opengamma.analytics.financial.equity.variance.pricing.AffineDividends)>(d3, r2, r3);

        r9 = staticinvoke <com.opengamma.analytics.financial.equity.variance.pricing.VolatilitySurfaceConverter: com.opengamma.analytics.financial.model.volatility.local.PureLocalVolatilitySurface convertLocalVolSurface(com.opengamma.analytics.financial.model.volatility.local.LocalVolatilitySurfaceStrike,com.opengamma.analytics.financial.equity.variance.pricing.EquityDividendsCurvesBundle)>(r7, $r17);

        $r18 = <com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapPricer: com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapForwardPurePDE VAR_SWAP_FWD_PDE_CALCULATOR>;

        $r19 = virtualinvoke $r18.<com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapForwardPurePDE: double[] expectedVariance(double,com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve,com.opengamma.analytics.financial.equity.variance.pricing.AffineDividends,double,com.opengamma.analytics.financial.model.volatility.local.PureLocalVolatilitySurface)>(d3, r2, r3, d2, r9);

        d4 = $r19[$b1];

        d5 = d0 * 0.99999;

        $r20 = new com.opengamma.analytics.financial.equity.variance.pricing.EquityDividendsCurvesBundle;

        specialinvoke $r20.<com.opengamma.analytics.financial.equity.variance.pricing.EquityDividendsCurvesBundle: void <init>(double,com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve,com.opengamma.analytics.financial.equity.variance.pricing.AffineDividends)>(d5, r2, r3);

        r11 = staticinvoke <com.opengamma.analytics.financial.equity.variance.pricing.VolatilitySurfaceConverter: com.opengamma.analytics.financial.model.volatility.local.PureLocalVolatilitySurface convertLocalVolSurface(com.opengamma.analytics.financial.model.volatility.local.LocalVolatilitySurfaceStrike,com.opengamma.analytics.financial.equity.variance.pricing.EquityDividendsCurvesBundle)>(r7, $r20);

        $r21 = <com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapPricer: com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapForwardPurePDE VAR_SWAP_FWD_PDE_CALCULATOR>;

        $r22 = virtualinvoke $r21.<com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapForwardPurePDE: double[] expectedVariance(double,com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve,com.opengamma.analytics.financial.equity.variance.pricing.AffineDividends,double,com.opengamma.analytics.financial.model.volatility.local.PureLocalVolatilitySurface)>(d5, r2, r3, d2, r11);

        d6 = $r22[$b1];

        $d8 = d4 - d6;

        $d9 = $d8 / 2.0;

        $d10 = $d9 / 1.0E-5;

        d7 = $d10 / d2;

        return d7;
    }

    public double gammaWithStickyLocalVol(com.opengamma.analytics.financial.equity.variance.EquityVarianceSwap, double, com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve, com.opengamma.analytics.financial.equity.variance.pricing.AffineDividends, com.opengamma.analytics.financial.model.volatility.smile.fitting.sabr.SmileSurfaceDataBundle)
    {
        com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapPricer r0;
        com.opengamma.analytics.financial.equity.variance.EquityVarianceSwap r1;
        double d0, d2, d3, d4, d5, d6, d7, d8, $d9, $d10, $d11, $d12, $d13;
        com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve r2;
        com.opengamma.analytics.financial.equity.variance.pricing.AffineDividends r3;
        com.opengamma.analytics.financial.model.volatility.smile.fitting.sabr.SmileSurfaceDataBundle r4;
        com.opengamma.analytics.financial.model.volatility.local.PureLocalVolatilitySurface r5, r9, r11;
        com.opengamma.analytics.financial.model.volatility.local.LocalVolatilitySurfaceStrike r7;
        com.opengamma.analytics.financial.equity.variance.pricing.EquityDividendsCurvesBundle $r16, $r19, $r22;
        boolean $z0;
        com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapForwardPurePDE $r17, $r20, $r23;
        double[] $r18, $r21, $r24;
        byte $b1;

        r0 := @this: com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapPricer;

        r1 := @parameter0: com.opengamma.analytics.financial.equity.variance.EquityVarianceSwap;

        d0 := @parameter1: double;

        r2 := @parameter2: com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve;

        r3 := @parameter3: com.opengamma.analytics.financial.equity.variance.pricing.AffineDividends;

        r4 := @parameter4: com.opengamma.analytics.financial.model.volatility.smile.fitting.sabr.SmileSurfaceDataBundle;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "swap");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, "discount curve");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r3, "dividends");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r4, "market volatilities");

        r5 = specialinvoke r0.<com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapPricer: com.opengamma.analytics.financial.model.volatility.local.PureLocalVolatilitySurface getPureLocalVolFromMarket(double,com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve,com.opengamma.analytics.financial.equity.variance.pricing.AffineDividends,com.opengamma.analytics.financial.model.volatility.smile.fitting.sabr.SmileSurfaceDataBundle)>(d0, r2, r3, r4);

        $r16 = new com.opengamma.analytics.financial.equity.variance.pricing.EquityDividendsCurvesBundle;

        specialinvoke $r16.<com.opengamma.analytics.financial.equity.variance.pricing.EquityDividendsCurvesBundle: void <init>(double,com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve,com.opengamma.analytics.financial.equity.variance.pricing.AffineDividends)>(d0, r2, r3);

        r7 = staticinvoke <com.opengamma.analytics.financial.equity.variance.pricing.VolatilitySurfaceConverter: com.opengamma.analytics.financial.model.volatility.local.LocalVolatilitySurfaceStrike convertLocalVolSurface(com.opengamma.analytics.financial.model.volatility.local.PureLocalVolatilitySurface,com.opengamma.analytics.financial.equity.variance.pricing.EquityDividendsCurvesBundle)>(r5, $r16);

        $z0 = virtualinvoke r1.<com.opengamma.analytics.financial.equity.variance.EquityVarianceSwap: boolean correctForDividends()>();

        if $z0 == 0 goto label1;

        $b1 = 0;

        goto label2;

     label1:
        $b1 = 1;

     label2:
        d2 = virtualinvoke r1.<com.opengamma.analytics.financial.equity.variance.EquityVarianceSwap: double getTimeToSettlement()>();

        $r17 = <com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapPricer: com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapForwardPurePDE VAR_SWAP_FWD_PDE_CALCULATOR>;

        $r18 = virtualinvoke $r17.<com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapForwardPurePDE: double[] expectedVariance(double,com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve,com.opengamma.analytics.financial.equity.variance.pricing.AffineDividends,double,com.opengamma.analytics.financial.model.volatility.local.PureLocalVolatilitySurface)>(d0, r2, r3, d2, r5);

        d3 = $r18[$b1];

        d4 = d0 * 1.00001;

        $r19 = new com.opengamma.analytics.financial.equity.variance.pricing.EquityDividendsCurvesBundle;

        specialinvoke $r19.<com.opengamma.analytics.financial.equity.variance.pricing.EquityDividendsCurvesBundle: void <init>(double,com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve,com.opengamma.analytics.financial.equity.variance.pricing.AffineDividends)>(d4, r2, r3);

        r9 = staticinvoke <com.opengamma.analytics.financial.equity.variance.pricing.VolatilitySurfaceConverter: com.opengamma.analytics.financial.model.volatility.local.PureLocalVolatilitySurface convertLocalVolSurface(com.opengamma.analytics.financial.model.volatility.local.LocalVolatilitySurfaceStrike,com.opengamma.analytics.financial.equity.variance.pricing.EquityDividendsCurvesBundle)>(r7, $r19);

        $r20 = <com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapPricer: com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapForwardPurePDE VAR_SWAP_FWD_PDE_CALCULATOR>;

        $r21 = virtualinvoke $r20.<com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapForwardPurePDE: double[] expectedVariance(double,com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve,com.opengamma.analytics.financial.equity.variance.pricing.AffineDividends,double,com.opengamma.analytics.financial.model.volatility.local.PureLocalVolatilitySurface)>(d4, r2, r3, d2, r9);

        d5 = $r21[$b1];

        d6 = d0 * 0.99999;

        $r22 = new com.opengamma.analytics.financial.equity.variance.pricing.EquityDividendsCurvesBundle;

        specialinvoke $r22.<com.opengamma.analytics.financial.equity.variance.pricing.EquityDividendsCurvesBundle: void <init>(double,com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve,com.opengamma.analytics.financial.equity.variance.pricing.AffineDividends)>(d6, r2, r3);

        r11 = staticinvoke <com.opengamma.analytics.financial.equity.variance.pricing.VolatilitySurfaceConverter: com.opengamma.analytics.financial.model.volatility.local.PureLocalVolatilitySurface convertLocalVolSurface(com.opengamma.analytics.financial.model.volatility.local.LocalVolatilitySurfaceStrike,com.opengamma.analytics.financial.equity.variance.pricing.EquityDividendsCurvesBundle)>(r7, $r22);

        $r23 = <com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapPricer: com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapForwardPurePDE VAR_SWAP_FWD_PDE_CALCULATOR>;

        $r24 = virtualinvoke $r23.<com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapForwardPurePDE: double[] expectedVariance(double,com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve,com.opengamma.analytics.financial.equity.variance.pricing.AffineDividends,double,com.opengamma.analytics.financial.model.volatility.local.PureLocalVolatilitySurface)>(d6, r2, r3, d2, r11);

        d7 = $r24[$b1];

        $d10 = d5 + d7;

        $d9 = 2.0 * d3;

        $d11 = $d10 - $d9;

        $d12 = $d11 / 1.0E-5;

        $d13 = $d12 / 1.0E-5;

        d8 = $d13 / d2;

        return d8;
    }

    public double vegaLocalVol(com.opengamma.analytics.financial.equity.variance.EquityVarianceSwap, double, com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve, com.opengamma.analytics.financial.equity.variance.pricing.AffineDividends, com.opengamma.analytics.financial.model.volatility.smile.fitting.sabr.SmileSurfaceDataBundle)
    {
        com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapPricer r0;
        com.opengamma.analytics.financial.equity.variance.EquityVarianceSwap r1;
        double d0, d2, d3, d4, d5, $d6, $d7, $d8, $d9, $d10, $d11;
        com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve r2;
        com.opengamma.analytics.financial.equity.variance.pricing.AffineDividends r3;
        com.opengamma.analytics.financial.model.volatility.smile.fitting.sabr.SmileSurfaceDataBundle r4;
        com.opengamma.analytics.financial.model.volatility.local.PureLocalVolatilitySurface r5, r9, r11;
        com.opengamma.analytics.financial.model.volatility.local.LocalVolatilitySurfaceStrike r7, $r17, $r22;
        com.opengamma.analytics.financial.equity.variance.pricing.EquityDividendsCurvesBundle $r16;
        boolean $z0;
        com.opengamma.analytics.math.surface.Surface $r18, $r19, $r23, $r24;
        com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapForwardPurePDE $r20, $r25;
        double[] $r21, $r26;
        byte $b1;

        r0 := @this: com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapPricer;

        r1 := @parameter0: com.opengamma.analytics.financial.equity.variance.EquityVarianceSwap;

        d0 := @parameter1: double;

        r2 := @parameter2: com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve;

        r3 := @parameter3: com.opengamma.analytics.financial.equity.variance.pricing.AffineDividends;

        r4 := @parameter4: com.opengamma.analytics.financial.model.volatility.smile.fitting.sabr.SmileSurfaceDataBundle;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "swap");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, "discount curve");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r3, "dividends");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r4, "market volatilities");

        r5 = specialinvoke r0.<com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapPricer: com.opengamma.analytics.financial.model.volatility.local.PureLocalVolatilitySurface getPureLocalVolFromMarket(double,com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve,com.opengamma.analytics.financial.equity.variance.pricing.AffineDividends,com.opengamma.analytics.financial.model.volatility.smile.fitting.sabr.SmileSurfaceDataBundle)>(d0, r2, r3, r4);

        $r16 = new com.opengamma.analytics.financial.equity.variance.pricing.EquityDividendsCurvesBundle;

        specialinvoke $r16.<com.opengamma.analytics.financial.equity.variance.pricing.EquityDividendsCurvesBundle: void <init>(double,com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve,com.opengamma.analytics.financial.equity.variance.pricing.AffineDividends)>(d0, r2, r3);

        r7 = staticinvoke <com.opengamma.analytics.financial.equity.variance.pricing.VolatilitySurfaceConverter: com.opengamma.analytics.financial.model.volatility.local.LocalVolatilitySurfaceStrike convertLocalVolSurface(com.opengamma.analytics.financial.model.volatility.local.PureLocalVolatilitySurface,com.opengamma.analytics.financial.equity.variance.pricing.EquityDividendsCurvesBundle)>(r5, $r16);

        $z0 = virtualinvoke r1.<com.opengamma.analytics.financial.equity.variance.EquityVarianceSwap: boolean correctForDividends()>();

        if $z0 == 0 goto label1;

        $b1 = 0;

        goto label2;

     label1:
        $b1 = 1;

     label2:
        d2 = virtualinvoke r1.<com.opengamma.analytics.financial.equity.variance.EquityVarianceSwap: double getTimeToSettlement()>();

        $r17 = new com.opengamma.analytics.financial.model.volatility.local.LocalVolatilitySurfaceStrike;

        $r18 = virtualinvoke r7.<com.opengamma.analytics.financial.model.volatility.local.LocalVolatilitySurfaceStrike: com.opengamma.analytics.math.surface.Surface getSurface()>();

        $r19 = staticinvoke <com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapPricer: com.opengamma.analytics.math.surface.Surface flooredShiftSurface(com.opengamma.analytics.math.surface.Surface,double)>($r18, 1.0E-5);

        specialinvoke $r17.<com.opengamma.analytics.financial.model.volatility.local.LocalVolatilitySurfaceStrike: void <init>(com.opengamma.analytics.math.surface.Surface)>($r19);

        r9 = staticinvoke <com.opengamma.analytics.financial.equity.variance.pricing.VolatilitySurfaceConverter: com.opengamma.analytics.financial.model.volatility.local.PureLocalVolatilitySurface convertLocalVolSurface(com.opengamma.analytics.financial.model.volatility.local.LocalVolatilitySurfaceStrike,com.opengamma.analytics.financial.equity.variance.pricing.EquityDividendsCurvesBundle)>($r17, $r16);

        $r20 = <com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapPricer: com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapForwardPurePDE VAR_SWAP_FWD_PDE_CALCULATOR>;

        $r21 = virtualinvoke $r20.<com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapForwardPurePDE: double[] expectedVariance(double,com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve,com.opengamma.analytics.financial.equity.variance.pricing.AffineDividends,double,com.opengamma.analytics.financial.model.volatility.local.PureLocalVolatilitySurface)>(d0, r2, r3, d2, r9);

        $d6 = $r21[$b1];

        $d7 = $d6 / d2;

        d3 = staticinvoke <java.lang.Math: double sqrt(double)>($d7);

        $r22 = new com.opengamma.analytics.financial.model.volatility.local.LocalVolatilitySurfaceStrike;

        $r23 = virtualinvoke r7.<com.opengamma.analytics.financial.model.volatility.local.LocalVolatilitySurfaceStrike: com.opengamma.analytics.math.surface.Surface getSurface()>();

        $r24 = staticinvoke <com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapPricer: com.opengamma.analytics.math.surface.Surface flooredShiftSurface(com.opengamma.analytics.math.surface.Surface,double)>($r23, -1.0E-5);

        specialinvoke $r22.<com.opengamma.analytics.financial.model.volatility.local.LocalVolatilitySurfaceStrike: void <init>(com.opengamma.analytics.math.surface.Surface)>($r24);

        r11 = staticinvoke <com.opengamma.analytics.financial.equity.variance.pricing.VolatilitySurfaceConverter: com.opengamma.analytics.financial.model.volatility.local.PureLocalVolatilitySurface convertLocalVolSurface(com.opengamma.analytics.financial.model.volatility.local.LocalVolatilitySurfaceStrike,com.opengamma.analytics.financial.equity.variance.pricing.EquityDividendsCurvesBundle)>($r22, $r16);

        $r25 = <com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapPricer: com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapForwardPurePDE VAR_SWAP_FWD_PDE_CALCULATOR>;

        $r26 = virtualinvoke $r25.<com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapForwardPurePDE: double[] expectedVariance(double,com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve,com.opengamma.analytics.financial.equity.variance.pricing.AffineDividends,double,com.opengamma.analytics.financial.model.volatility.local.PureLocalVolatilitySurface)>(d0, r2, r3, d2, r11);

        $d8 = $r26[$b1];

        $d9 = $d8 / d2;

        d4 = staticinvoke <java.lang.Math: double sqrt(double)>($d9);

        $d10 = d3 - d4;

        $d11 = $d10 / 2.0;

        d5 = $d11 / 1.0E-5;

        return d5;
    }

    public double vegaPureLocalVol(com.opengamma.analytics.financial.equity.variance.EquityVarianceSwap, double, com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve, com.opengamma.analytics.financial.equity.variance.pricing.AffineDividends, com.opengamma.analytics.financial.model.volatility.smile.fitting.sabr.SmileSurfaceDataBundle)
    {
        com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapPricer r0;
        com.opengamma.analytics.financial.equity.variance.EquityVarianceSwap r1;
        double d0, d2, d3, d4, d5, $d6, $d7, $d8, $d9, $d10, $d11;
        com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve r2;
        com.opengamma.analytics.financial.equity.variance.pricing.AffineDividends r3;
        com.opengamma.analytics.financial.model.volatility.smile.fitting.sabr.SmileSurfaceDataBundle r4;
        com.opengamma.analytics.financial.model.volatility.local.PureLocalVolatilitySurface r5, $r12, $r17;
        boolean $z0;
        com.opengamma.analytics.math.surface.Surface $r13, $r14, $r18, $r19;
        com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapForwardPurePDE $r15, $r20;
        double[] $r16, $r21;
        byte $b1;

        r0 := @this: com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapPricer;

        r1 := @parameter0: com.opengamma.analytics.financial.equity.variance.EquityVarianceSwap;

        d0 := @parameter1: double;

        r2 := @parameter2: com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve;

        r3 := @parameter3: com.opengamma.analytics.financial.equity.variance.pricing.AffineDividends;

        r4 := @parameter4: com.opengamma.analytics.financial.model.volatility.smile.fitting.sabr.SmileSurfaceDataBundle;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "swap");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, "discount curve");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r3, "dividends");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r4, "market volatilities");

        r5 = specialinvoke r0.<com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapPricer: com.opengamma.analytics.financial.model.volatility.local.PureLocalVolatilitySurface getPureLocalVolFromMarket(double,com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve,com.opengamma.analytics.financial.equity.variance.pricing.AffineDividends,com.opengamma.analytics.financial.model.volatility.smile.fitting.sabr.SmileSurfaceDataBundle)>(d0, r2, r3, r4);

        $z0 = virtualinvoke r1.<com.opengamma.analytics.financial.equity.variance.EquityVarianceSwap: boolean correctForDividends()>();

        if $z0 == 0 goto label1;

        $b1 = 0;

        goto label2;

     label1:
        $b1 = 1;

     label2:
        d2 = virtualinvoke r1.<com.opengamma.analytics.financial.equity.variance.EquityVarianceSwap: double getTimeToSettlement()>();

        $r12 = new com.opengamma.analytics.financial.model.volatility.local.PureLocalVolatilitySurface;

        $r13 = virtualinvoke r5.<com.opengamma.analytics.financial.model.volatility.local.PureLocalVolatilitySurface: com.opengamma.analytics.math.surface.Surface getSurface()>();

        $r14 = staticinvoke <com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapPricer: com.opengamma.analytics.math.surface.Surface flooredShiftSurface(com.opengamma.analytics.math.surface.Surface,double)>($r13, 1.0E-5);

        specialinvoke $r12.<com.opengamma.analytics.financial.model.volatility.local.PureLocalVolatilitySurface: void <init>(com.opengamma.analytics.math.surface.Surface)>($r14);

        $r15 = <com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapPricer: com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapForwardPurePDE VAR_SWAP_FWD_PDE_CALCULATOR>;

        $r16 = virtualinvoke $r15.<com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapForwardPurePDE: double[] expectedVariance(double,com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve,com.opengamma.analytics.financial.equity.variance.pricing.AffineDividends,double,com.opengamma.analytics.financial.model.volatility.local.PureLocalVolatilitySurface)>(d0, r2, r3, d2, $r12);

        $d6 = $r16[$b1];

        $d7 = $d6 / d2;

        d3 = staticinvoke <java.lang.Math: double sqrt(double)>($d7);

        $r17 = new com.opengamma.analytics.financial.model.volatility.local.PureLocalVolatilitySurface;

        $r18 = virtualinvoke r5.<com.opengamma.analytics.financial.model.volatility.local.PureLocalVolatilitySurface: com.opengamma.analytics.math.surface.Surface getSurface()>();

        $r19 = staticinvoke <com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapPricer: com.opengamma.analytics.math.surface.Surface flooredShiftSurface(com.opengamma.analytics.math.surface.Surface,double)>($r18, -1.0E-5);

        specialinvoke $r17.<com.opengamma.analytics.financial.model.volatility.local.PureLocalVolatilitySurface: void <init>(com.opengamma.analytics.math.surface.Surface)>($r19);

        $r20 = <com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapPricer: com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapForwardPurePDE VAR_SWAP_FWD_PDE_CALCULATOR>;

        $r21 = virtualinvoke $r20.<com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapForwardPurePDE: double[] expectedVariance(double,com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve,com.opengamma.analytics.financial.equity.variance.pricing.AffineDividends,double,com.opengamma.analytics.financial.model.volatility.local.PureLocalVolatilitySurface)>(d0, r2, r3, d2, $r17);

        $d8 = $r21[$b1];

        $d9 = $d8 / d2;

        d4 = staticinvoke <java.lang.Math: double sqrt(double)>($d9);

        $d10 = d3 - d4;

        $d11 = $d10 / 2.0;

        d5 = $d11 / 1.0E-5;

        return d5;
    }

    private static com.opengamma.analytics.math.surface.Surface flooredShiftSurface(com.opengamma.analytics.math.surface.Surface, double)
    {
        com.opengamma.analytics.math.surface.Surface r0;
        double d0;
        com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapPricer$1 $r2;
        com.opengamma.analytics.math.surface.FunctionalDoublesSurface $r3;

        r0 := @parameter0: com.opengamma.analytics.math.surface.Surface;

        d0 := @parameter1: double;

        $r2 = new com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapPricer$1;

        specialinvoke $r2.<com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapPricer$1: void <init>(com.opengamma.analytics.math.surface.Surface,double)>(r0, d0);

        $r3 = staticinvoke <com.opengamma.analytics.math.surface.FunctionalDoublesSurface: com.opengamma.analytics.math.surface.FunctionalDoublesSurface 'from'(com.opengamma.analytics.math.function.Function)>($r2);

        return $r3;
    }

    public double priceFromImpliedVolsForwardPDE(com.opengamma.analytics.financial.equity.variance.EquityVarianceSwap, double, com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve, com.opengamma.analytics.financial.equity.variance.pricing.AffineDividends, com.opengamma.analytics.financial.model.volatility.smile.fitting.sabr.SmileSurfaceDataBundle)
    {
        com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapPricer r0;
        com.opengamma.analytics.financial.equity.variance.EquityVarianceSwap r1;
        double d0, $d2, $d3;
        com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve r2;
        com.opengamma.analytics.financial.equity.variance.pricing.AffineDividends r3;
        com.opengamma.analytics.financial.model.volatility.smile.fitting.sabr.SmileSurfaceDataBundle r4;
        com.opengamma.analytics.financial.model.volatility.local.PureLocalVolatilitySurface r5;
        double[] r6;
        com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapForwardPurePDE $r7;
        boolean $z0;

        r0 := @this: com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapPricer;

        r1 := @parameter0: com.opengamma.analytics.financial.equity.variance.EquityVarianceSwap;

        d0 := @parameter1: double;

        r2 := @parameter2: com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve;

        r3 := @parameter3: com.opengamma.analytics.financial.equity.variance.pricing.AffineDividends;

        r4 := @parameter4: com.opengamma.analytics.financial.model.volatility.smile.fitting.sabr.SmileSurfaceDataBundle;

        r5 = specialinvoke r0.<com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapPricer: com.opengamma.analytics.financial.model.volatility.local.PureLocalVolatilitySurface getPureLocalVolFromMarket(double,com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve,com.opengamma.analytics.financial.equity.variance.pricing.AffineDividends,com.opengamma.analytics.financial.model.volatility.smile.fitting.sabr.SmileSurfaceDataBundle)>(d0, r2, r3, r4);

        $r7 = <com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapPricer: com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapForwardPurePDE VAR_SWAP_FWD_PDE_CALCULATOR>;

        $d2 = virtualinvoke r1.<com.opengamma.analytics.financial.equity.variance.EquityVarianceSwap: double getTimeToSettlement()>();

        r6 = virtualinvoke $r7.<com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapForwardPurePDE: double[] expectedVariance(double,com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve,com.opengamma.analytics.financial.equity.variance.pricing.AffineDividends,double,com.opengamma.analytics.financial.model.volatility.local.PureLocalVolatilitySurface)>(d0, r2, r3, $d2, r5);

        $z0 = virtualinvoke r1.<com.opengamma.analytics.financial.equity.variance.EquityVarianceSwap: boolean correctForDividends()>();

        if $z0 == 0 goto label1;

        $d3 = r6[0];

        goto label2;

     label1:
        $d3 = r6[1];

     label2:
        return $d3;
    }

    public double deltaFromLocalVols(com.opengamma.analytics.financial.equity.variance.EquityVarianceSwap, double, com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve, com.opengamma.analytics.financial.equity.variance.pricing.AffineDividends, com.opengamma.analytics.financial.model.volatility.smile.fitting.sabr.SmileSurfaceDataBundle)
    {
        com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapPricer r0;
        com.opengamma.analytics.financial.equity.variance.EquityVarianceSwap r1;
        double d0, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15;
        com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve r2;
        com.opengamma.analytics.financial.equity.variance.pricing.AffineDividends r3;
        com.opengamma.analytics.financial.model.volatility.smile.fitting.sabr.SmileSurfaceDataBundle r4;
        com.opengamma.analytics.financial.model.volatility.local.PureLocalVolatilitySurface r5;
        double[] r6, r7;
        com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapForwardPurePDE $r10, $r11;
        boolean $z0;

        r0 := @this: com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapPricer;

        r1 := @parameter0: com.opengamma.analytics.financial.equity.variance.EquityVarianceSwap;

        d0 := @parameter1: double;

        r2 := @parameter2: com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve;

        r3 := @parameter3: com.opengamma.analytics.financial.equity.variance.pricing.AffineDividends;

        r4 := @parameter4: com.opengamma.analytics.financial.model.volatility.smile.fitting.sabr.SmileSurfaceDataBundle;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "swap");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, "discount curve");

        r5 = specialinvoke r0.<com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapPricer: com.opengamma.analytics.financial.model.volatility.local.PureLocalVolatilitySurface getPureLocalVolFromMarket(double,com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve,com.opengamma.analytics.financial.equity.variance.pricing.AffineDividends,com.opengamma.analytics.financial.model.volatility.smile.fitting.sabr.SmileSurfaceDataBundle)>(d0, r2, r3, r4);

        $r10 = <com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapPricer: com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapForwardPurePDE VAR_SWAP_FWD_PDE_CALCULATOR>;

        $d3 = 1.00001 * d0;

        $d4 = virtualinvoke r1.<com.opengamma.analytics.financial.equity.variance.EquityVarianceSwap: double getTimeToSettlement()>();

        r6 = virtualinvoke $r10.<com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapForwardPurePDE: double[] expectedVariance(double,com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve,com.opengamma.analytics.financial.equity.variance.pricing.AffineDividends,double,com.opengamma.analytics.financial.model.volatility.local.PureLocalVolatilitySurface)>($d3, r2, r3, $d4, r5);

        $r11 = <com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapPricer: com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapForwardPurePDE VAR_SWAP_FWD_PDE_CALCULATOR>;

        $d5 = 0.99999 * d0;

        $d6 = virtualinvoke r1.<com.opengamma.analytics.financial.equity.variance.EquityVarianceSwap: double getTimeToSettlement()>();

        r7 = virtualinvoke $r11.<com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapForwardPurePDE: double[] expectedVariance(double,com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve,com.opengamma.analytics.financial.equity.variance.pricing.AffineDividends,double,com.opengamma.analytics.financial.model.volatility.local.PureLocalVolatilitySurface)>($d5, r2, r3, $d6, r5);

        $z0 = virtualinvoke r1.<com.opengamma.analytics.financial.equity.variance.EquityVarianceSwap: boolean correctForDividends()>();

        if $z0 == 0 goto label1;

        $d12 = r6[0];

        $d11 = r7[0];

        $d13 = $d12 - $d11;

        $d14 = $d13 / d0;

        $d15 = $d14 / 1.0E-5;

        goto label2;

     label1:
        $d8 = r6[1];

        $d7 = r7[1];

        $d9 = $d8 - $d7;

        $d10 = $d9 / d0;

        $d15 = $d10 / 1.0E-5;

     label2:
        return $d15;
    }

    public double deltaFromLocalVols2(com.opengamma.analytics.financial.equity.variance.EquityVarianceSwap, double, com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve, com.opengamma.analytics.financial.equity.variance.pricing.AffineDividends, com.opengamma.analytics.financial.model.volatility.smile.fitting.sabr.SmileSurfaceDataBundle)
    {
        com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapPricer r0;
        com.opengamma.analytics.financial.equity.variance.EquityVarianceSwap r1;
        double d0, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17;
        com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve r2;
        com.opengamma.analytics.financial.equity.variance.pricing.AffineDividends r3;
        com.opengamma.analytics.financial.model.volatility.smile.fitting.sabr.SmileSurfaceDataBundle r4;
        com.opengamma.analytics.financial.model.volatility.local.PureLocalVolatilitySurface r6, r9, r12;
        com.opengamma.analytics.financial.model.volatility.local.LocalVolatilitySurfaceStrike r7;
        double[] r10, r13;
        com.opengamma.analytics.financial.equity.variance.pricing.EquityDividendsCurvesBundle $r18, $r19, $r21;
        com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapForwardPurePDE $r20, $r22;
        boolean $z0;

        r0 := @this: com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapPricer;

        r1 := @parameter0: com.opengamma.analytics.financial.equity.variance.EquityVarianceSwap;

        d0 := @parameter1: double;

        r2 := @parameter2: com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve;

        r3 := @parameter3: com.opengamma.analytics.financial.equity.variance.pricing.AffineDividends;

        r4 := @parameter4: com.opengamma.analytics.financial.model.volatility.smile.fitting.sabr.SmileSurfaceDataBundle;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "swap");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, "discount curve");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r3, "dividends");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r4, "market volatilities");

        $r18 = new com.opengamma.analytics.financial.equity.variance.pricing.EquityDividendsCurvesBundle;

        specialinvoke $r18.<com.opengamma.analytics.financial.equity.variance.pricing.EquityDividendsCurvesBundle: void <init>(double,com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve,com.opengamma.analytics.financial.equity.variance.pricing.AffineDividends)>(d0, r2, r3);

        r6 = specialinvoke r0.<com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapPricer: com.opengamma.analytics.financial.model.volatility.local.PureLocalVolatilitySurface getPureLocalVolFromMarket(double,com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve,com.opengamma.analytics.financial.equity.variance.pricing.AffineDividends,com.opengamma.analytics.financial.model.volatility.smile.fitting.sabr.SmileSurfaceDataBundle)>(d0, r2, r3, r4);

        r7 = staticinvoke <com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapPricer: com.opengamma.analytics.financial.model.volatility.local.LocalVolatilitySurfaceStrike convertLV(com.opengamma.analytics.financial.model.volatility.local.PureLocalVolatilitySurface,com.opengamma.analytics.financial.equity.variance.pricing.EquityDividendsCurvesBundle)>(r6, $r18);

        $r19 = new com.opengamma.analytics.financial.equity.variance.pricing.EquityDividendsCurvesBundle;

        $d3 = 1.00001 * d0;

        specialinvoke $r19.<com.opengamma.analytics.financial.equity.variance.pricing.EquityDividendsCurvesBundle: void <init>(double,com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve,com.opengamma.analytics.financial.equity.variance.pricing.AffineDividends)>($d3, r2, r3);

        r9 = staticinvoke <com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapPricer: com.opengamma.analytics.financial.model.volatility.local.PureLocalVolatilitySurface convertLV(com.opengamma.analytics.financial.model.volatility.local.LocalVolatilitySurfaceStrike,com.opengamma.analytics.financial.equity.variance.pricing.EquityDividendsCurvesBundle)>(r7, $r19);

        $r20 = <com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapPricer: com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapForwardPurePDE VAR_SWAP_FWD_PDE_CALCULATOR>;

        $d4 = 1.00001 * d0;

        $d5 = virtualinvoke r1.<com.opengamma.analytics.financial.equity.variance.EquityVarianceSwap: double getTimeToSettlement()>();

        r10 = virtualinvoke $r20.<com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapForwardPurePDE: double[] expectedVariance(double,com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve,com.opengamma.analytics.financial.equity.variance.pricing.AffineDividends,double,com.opengamma.analytics.financial.model.volatility.local.PureLocalVolatilitySurface)>($d4, r2, r3, $d5, r9);

        $r21 = new com.opengamma.analytics.financial.equity.variance.pricing.EquityDividendsCurvesBundle;

        $d6 = 0.99999 * d0;

        specialinvoke $r21.<com.opengamma.analytics.financial.equity.variance.pricing.EquityDividendsCurvesBundle: void <init>(double,com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve,com.opengamma.analytics.financial.equity.variance.pricing.AffineDividends)>($d6, r2, r3);

        r12 = staticinvoke <com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapPricer: com.opengamma.analytics.financial.model.volatility.local.PureLocalVolatilitySurface convertLV(com.opengamma.analytics.financial.model.volatility.local.LocalVolatilitySurfaceStrike,com.opengamma.analytics.financial.equity.variance.pricing.EquityDividendsCurvesBundle)>(r7, $r21);

        $r22 = <com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapPricer: com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapForwardPurePDE VAR_SWAP_FWD_PDE_CALCULATOR>;

        $d7 = 0.99999 * d0;

        $d8 = virtualinvoke r1.<com.opengamma.analytics.financial.equity.variance.EquityVarianceSwap: double getTimeToSettlement()>();

        r13 = virtualinvoke $r22.<com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapForwardPurePDE: double[] expectedVariance(double,com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve,com.opengamma.analytics.financial.equity.variance.pricing.AffineDividends,double,com.opengamma.analytics.financial.model.volatility.local.PureLocalVolatilitySurface)>($d7, r2, r3, $d8, r12);

        $z0 = virtualinvoke r1.<com.opengamma.analytics.financial.equity.variance.EquityVarianceSwap: boolean correctForDividends()>();

        if $z0 == 0 goto label1;

        $d14 = r10[0];

        $d13 = r13[0];

        $d15 = $d14 - $d13;

        $d16 = $d15 / d0;

        $d17 = $d16 / 1.0E-5;

        goto label2;

     label1:
        $d10 = r10[1];

        $d9 = r13[1];

        $d11 = $d10 - $d9;

        $d12 = $d11 / d0;

        $d17 = $d12 / 1.0E-5;

     label2:
        return $d17;
    }

    private static com.opengamma.analytics.financial.model.volatility.local.LocalVolatilitySurfaceStrike convertLV(com.opengamma.analytics.financial.model.volatility.local.PureLocalVolatilitySurface, com.opengamma.analytics.financial.equity.variance.pricing.EquityDividendsCurvesBundle)
    {
        com.opengamma.analytics.financial.model.volatility.local.PureLocalVolatilitySurface r0;
        com.opengamma.analytics.financial.equity.variance.pricing.EquityDividendsCurvesBundle r1;
        com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapPricer$2 $r3;
        com.opengamma.analytics.financial.model.volatility.local.LocalVolatilitySurfaceStrike $r4;
        com.opengamma.analytics.math.surface.FunctionalDoublesSurface $r5;

        r0 := @parameter0: com.opengamma.analytics.financial.model.volatility.local.PureLocalVolatilitySurface;

        r1 := @parameter1: com.opengamma.analytics.financial.equity.variance.pricing.EquityDividendsCurvesBundle;

        $r3 = new com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapPricer$2;

        specialinvoke $r3.<com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapPricer$2: void <init>(com.opengamma.analytics.financial.equity.variance.pricing.EquityDividendsCurvesBundle,com.opengamma.analytics.financial.model.volatility.local.PureLocalVolatilitySurface)>(r1, r0);

        $r4 = new com.opengamma.analytics.financial.model.volatility.local.LocalVolatilitySurfaceStrike;

        $r5 = staticinvoke <com.opengamma.analytics.math.surface.FunctionalDoublesSurface: com.opengamma.analytics.math.surface.FunctionalDoublesSurface 'from'(com.opengamma.analytics.math.function.Function)>($r3);

        specialinvoke $r4.<com.opengamma.analytics.financial.model.volatility.local.LocalVolatilitySurfaceStrike: void <init>(com.opengamma.analytics.math.surface.Surface)>($r5);

        return $r4;
    }

    private static com.opengamma.analytics.financial.model.volatility.local.PureLocalVolatilitySurface convertLV(com.opengamma.analytics.financial.model.volatility.local.LocalVolatilitySurfaceStrike, com.opengamma.analytics.financial.equity.variance.pricing.EquityDividendsCurvesBundle)
    {
        com.opengamma.analytics.financial.model.volatility.local.LocalVolatilitySurfaceStrike r0;
        com.opengamma.analytics.financial.equity.variance.pricing.EquityDividendsCurvesBundle r1;
        com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapPricer$3 $r3;
        com.opengamma.analytics.financial.model.volatility.local.PureLocalVolatilitySurface $r4;
        com.opengamma.analytics.math.surface.FunctionalDoublesSurface $r5;

        r0 := @parameter0: com.opengamma.analytics.financial.model.volatility.local.LocalVolatilitySurfaceStrike;

        r1 := @parameter1: com.opengamma.analytics.financial.equity.variance.pricing.EquityDividendsCurvesBundle;

        $r3 = new com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapPricer$3;

        specialinvoke $r3.<com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapPricer$3: void <init>(com.opengamma.analytics.financial.equity.variance.pricing.EquityDividendsCurvesBundle,com.opengamma.analytics.financial.model.volatility.local.LocalVolatilitySurfaceStrike)>(r1, r0);

        $r4 = new com.opengamma.analytics.financial.model.volatility.local.PureLocalVolatilitySurface;

        $r5 = staticinvoke <com.opengamma.analytics.math.surface.FunctionalDoublesSurface: com.opengamma.analytics.math.surface.FunctionalDoublesSurface 'from'(com.opengamma.analytics.math.function.Function)>($r3);

        specialinvoke $r4.<com.opengamma.analytics.financial.model.volatility.local.PureLocalVolatilitySurface: void <init>(com.opengamma.analytics.math.surface.Surface)>($r5);

        return $r4;
    }

    private com.opengamma.analytics.financial.model.volatility.local.PureLocalVolatilitySurface getPureLocalVolFromMarket(double, com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve, com.opengamma.analytics.financial.equity.variance.pricing.AffineDividends, com.opengamma.analytics.financial.model.volatility.smile.fitting.sabr.SmileSurfaceDataBundle)
    {
        com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapPricer r0;
        double d0;
        com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve r1;
        com.opengamma.analytics.financial.equity.variance.pricing.AffineDividends r2;
        com.opengamma.analytics.financial.model.volatility.smile.fitting.sabr.SmileSurfaceDataBundle r3;
        com.opengamma.analytics.financial.model.volatility.surface.PureImpliedVolatilitySurface r5;
        com.opengamma.analytics.financial.model.volatility.local.DupireLocalVolatilityCalculator $r6;
        com.opengamma.analytics.financial.model.volatility.local.PureLocalVolatilitySurface $r7;

        r0 := @this: com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapPricer;

        d0 := @parameter0: double;

        r1 := @parameter1: com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve;

        r2 := @parameter2: com.opengamma.analytics.financial.equity.variance.pricing.AffineDividends;

        r3 := @parameter3: com.opengamma.analytics.financial.model.volatility.smile.fitting.sabr.SmileSurfaceDataBundle;

        $r6 = new com.opengamma.analytics.financial.model.volatility.local.DupireLocalVolatilityCalculator;

        specialinvoke $r6.<com.opengamma.analytics.financial.model.volatility.local.DupireLocalVolatilityCalculator: void <init>()>();

        r5 = specialinvoke r0.<com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapPricer: com.opengamma.analytics.financial.model.volatility.surface.PureImpliedVolatilitySurface getPureImpliedVolFromMarket(double,com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve,com.opengamma.analytics.financial.equity.variance.pricing.AffineDividends,com.opengamma.analytics.financial.model.volatility.smile.fitting.sabr.SmileSurfaceDataBundle)>(d0, r1, r2, r3);

        $r7 = virtualinvoke $r6.<com.opengamma.analytics.financial.model.volatility.local.DupireLocalVolatilityCalculator: com.opengamma.analytics.financial.model.volatility.local.PureLocalVolatilitySurface getLocalVolatility(com.opengamma.analytics.financial.model.volatility.surface.PureImpliedVolatilitySurface)>(r5);

        return $r7;
    }

    private com.opengamma.analytics.financial.model.volatility.surface.PureImpliedVolatilitySurface getPureImpliedVolFromMarket(double, com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve, com.opengamma.analytics.financial.equity.variance.pricing.AffineDividends, com.opengamma.analytics.financial.model.volatility.smile.fitting.sabr.SmileSurfaceDataBundle)
    {
        com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapPricer r0;
        double d0, d1, d2, d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, d11;
        com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve r1;
        com.opengamma.analytics.financial.equity.variance.pricing.AffineDividends r2;
        com.opengamma.analytics.financial.model.volatility.smile.fitting.sabr.SmileSurfaceDataBundle r3;
        double[][] r5, r6, r7, r8;
        int i0, i1, i3, i4;
        com.opengamma.analytics.financial.equity.variance.pricing.EquityDividendsCurvesBundle $r10;
        com.opengamma.analytics.financial.model.volatility.smile.fitting.sabr.StandardSmileSurfaceDataBundle $r11;
        com.opengamma.analytics.financial.model.interestrate.curve.ForwardCurve $r12;
        double[] $r13, $r17, $r18, $r19, $r20, $r21, $r23, $r27, $r28, $r29, $r30;
        com.opengamma.analytics.financial.model.volatility.surface.VolatilitySurfaceInterpolator $r14;
        com.opengamma.analytics.financial.model.volatility.surface.PureImpliedVolatilitySurface $r15;
        com.opengamma.analytics.math.surface.Surface $r16;
        byte $b2;
        java.lang.Object[] $r22;
        java.lang.Double $r24, $r25, $r26;
        boolean $z0;
        com.opengamma.analytics.financial.model.volatility.surface.BlackVolatilitySurfaceMoneynessFcnBackedByGrid r32;

        r0 := @this: com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapPricer;

        d0 := @parameter0: double;

        r1 := @parameter1: com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve;

        r2 := @parameter2: com.opengamma.analytics.financial.equity.variance.pricing.AffineDividends;

        r3 := @parameter3: com.opengamma.analytics.financial.model.volatility.smile.fitting.sabr.SmileSurfaceDataBundle;

        $r10 = new com.opengamma.analytics.financial.equity.variance.pricing.EquityDividendsCurvesBundle;

        specialinvoke $r10.<com.opengamma.analytics.financial.equity.variance.pricing.EquityDividendsCurvesBundle: void <init>(double,com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve,com.opengamma.analytics.financial.equity.variance.pricing.AffineDividends)>(d0, r1, r2);

        r5 = virtualinvoke r3.<com.opengamma.analytics.financial.model.volatility.smile.fitting.sabr.SmileSurfaceDataBundle: double[][] getStrikes()>();

        r6 = virtualinvoke r3.<com.opengamma.analytics.financial.model.volatility.smile.fitting.sabr.SmileSurfaceDataBundle: double[][] getVolatilities()>();

        i0 = virtualinvoke r3.<com.opengamma.analytics.financial.model.volatility.smile.fitting.sabr.SmileSurfaceDataBundle: int getNumExpiries()>();

        r7 = newarray (double[])[i0];

        r8 = newarray (double[])[i0];

        i3 = 0;

     label1:
        if i3 >= i0 goto label6;

        $r17 = virtualinvoke r3.<com.opengamma.analytics.financial.model.volatility.smile.fitting.sabr.SmileSurfaceDataBundle: double[] getExpiries()>();

        d11 = $r17[i3];

        d1 = virtualinvoke $r10.<com.opengamma.analytics.financial.equity.variance.pricing.EquityDividendsCurvesBundle: double getF(double)>(d11);

        d2 = virtualinvoke $r10.<com.opengamma.analytics.financial.equity.variance.pricing.EquityDividendsCurvesBundle: double getD(double)>(d11);

        $r18 = r5[i3];

        i1 = lengthof $r18;

        $r19 = newarray (double)[i1];

        r7[i3] = $r19;

        $r20 = newarray (double)[i1];

        r8[i3] = $r20;

        i4 = 0;

     label2:
        if i4 >= i1 goto label5;

        $r21 = r5[i3];

        $d4 = $r21[i4];

        d3 = $d4 - d2;

        $b2 = d3 cmpl 0.0;

        if $b2 < 0 goto label3;

        $z0 = 1;

        goto label4;

     label3:
        $z0 = 0;

     label4:
        $r22 = newarray (java.lang.Object)[3];

        $r23 = r5[i3];

        $d5 = $r23[i4];

        $r24 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d5);

        $r22[0] = $r24;

        $r25 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d11);

        $r22[1] = $r25;

        $r26 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d2);

        $r22[2] = $r26;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String,java.lang.Object[])>($z0, "strike of {} at expiry {} is less than the discounts value of future cash dividends {}. Either remove this option or change the dividend assumption", $r22);

        $r27 = r7[i3];

        $d6 = d1 - d2;

        $d7 = d3 / $d6;

        $r27[i4] = $d7;

        $r30 = r8[i3];

        $r28 = r5[i3];

        $d9 = $r28[i4];

        $r29 = r6[i3];

        $d8 = $r29[i4];

        $d10 = staticinvoke <com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapPricer: double volToPureVol(double,double,double,double,double)>($d9, d1, d2, d11, $d8);

        $r30[i4] = $d10;

        i4 = i4 + 1;

        goto label2;

     label5:
        i3 = i3 + 1;

        goto label1;

     label6:
        $r11 = new com.opengamma.analytics.financial.model.volatility.smile.fitting.sabr.StandardSmileSurfaceDataBundle;

        $r12 = new com.opengamma.analytics.financial.model.interestrate.curve.ForwardCurve;

        specialinvoke $r12.<com.opengamma.analytics.financial.model.interestrate.curve.ForwardCurve: void <init>(double)>(1.0);

        $r13 = virtualinvoke r3.<com.opengamma.analytics.financial.model.volatility.smile.fitting.sabr.SmileSurfaceDataBundle: double[] getExpiries()>();

        specialinvoke $r11.<com.opengamma.analytics.financial.model.volatility.smile.fitting.sabr.StandardSmileSurfaceDataBundle: void <init>(com.opengamma.analytics.financial.model.interestrate.curve.ForwardCurve,double[],double[][],double[][])>($r12, $r13, r7, r8);

        $r14 = r0.<com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapPricer: com.opengamma.analytics.financial.model.volatility.surface.VolatilitySurfaceInterpolator _surfaceInterpolator>;

        r32 = virtualinvoke $r14.<com.opengamma.analytics.financial.model.volatility.surface.VolatilitySurfaceInterpolator: com.opengamma.analytics.financial.model.volatility.surface.BlackVolatilitySurfaceMoneynessFcnBackedByGrid getVolatilitySurface(com.opengamma.analytics.financial.model.volatility.smile.fitting.sabr.SmileSurfaceDataBundle)>($r11);

        $r15 = new com.opengamma.analytics.financial.model.volatility.surface.PureImpliedVolatilitySurface;

        $r16 = virtualinvoke r32.<com.opengamma.analytics.financial.model.volatility.surface.BlackVolatilitySurfaceMoneyness: com.opengamma.analytics.math.surface.Surface getSurface()>();

        specialinvoke $r15.<com.opengamma.analytics.financial.model.volatility.surface.PureImpliedVolatilitySurface: void <init>(com.opengamma.analytics.math.surface.Surface)>($r16);

        return $r15;
    }

    private static double priceToPureVol(double, double, double, double, double, double)
    {
        double d0, d1, d2, d3, d4, d5, d6, d7, $d8, $d9, $d10, $d11, $d12;
        byte $b0;
        boolean $z1;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        d2 := @parameter2: double;

        d3 := @parameter3: double;

        d4 := @parameter4: double;

        d5 := @parameter5: double;

        $b0 = d1 cmpl d2;

        if $b0 < 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        $d8 = d2 - d3;

        $d9 = d5 / $d8;

        d6 = $d9 / d0;

        $d11 = d1 - d3;

        $d10 = d2 - d3;

        d7 = $d11 / $d10;

        $d12 = staticinvoke <com.opengamma.analytics.financial.model.volatility.BlackFormulaRepository: double impliedVolatility(double,double,double,double,boolean)>(d6, 1.0, d7, d4, $z1);

        return $d12;
    }

    private static double volToPureVol(double, double, double, double, double)
    {
        double d0, d1, d2, d3, d4, d5, d6, d7, $d8, $d9, $d10, $d11;
        byte $b0, $b1;
        boolean $z1;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        d2 := @parameter2: double;

        d3 := @parameter3: double;

        d4 := @parameter4: double;

        $b0 = d2 cmpl 0.0;

        if $b0 != 0 goto label1;

        return d4;

     label1:
        $b1 = d0 cmpl d1;

        if $b1 < 0 goto label2;

        $z1 = 1;

        goto label3;

     label2:
        $z1 = 0;

     label3:
        d5 = staticinvoke <com.opengamma.analytics.financial.model.volatility.BlackFormulaRepository: double price(double,double,double,double,boolean)>(d1, d0, d3, d4, $z1);

        $d8 = d1 - d2;

        d6 = d5 / $d8;

        $d10 = d0 - d2;

        $d9 = d1 - d2;

        d7 = $d10 / $d9;

        $d11 = staticinvoke <com.opengamma.analytics.financial.model.volatility.BlackFormulaRepository: double impliedVolatility(double,double,double,double,double)>(d6, 1.0, d7, d3, d4);

        return $d11;
    }

    void <init>(com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapPricer$Builder, com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapPricer$1)
    {
        com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapPricer r0;
        com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapPricer$Builder r1;
        com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapPricer$1 r2;

        r0 := @this: com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapPricer;

        r1 := @parameter0: com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapPricer$Builder;

        r2 := @parameter1: com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapPricer$1;

        specialinvoke r0.<com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapPricer: void <init>(com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapPricer$Builder)>(r1);

        return;
    }

    static void <clinit>()
    {
        com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapForwardPurePDE $r0;
        com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapBackwardsPurePDE $r1;

        $r0 = new com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapForwardPurePDE;

        specialinvoke $r0.<com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapForwardPurePDE: void <init>()>();

        <com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapPricer: com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapForwardPurePDE VAR_SWAP_FWD_PDE_CALCULATOR> = $r0;

        $r1 = new com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapBackwardsPurePDE;

        specialinvoke $r1.<com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapBackwardsPurePDE: void <init>()>();

        <com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapPricer: com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapBackwardsPurePDE VAR_SWAP_BKW_PDE_CALCULATOR> = $r1;

        return;
    }
}
