public class com.opengamma.analytics.math.minimization.QuasiNewtonVectorMinimizer extends java.lang.Object implements com.opengamma.analytics.math.minimization.MinimizerWithGradient
{
    private static final int RESET_FREQ;
    private static final double ALPHA;
    private static final double BETA;
    private static final double EPS;
    private static final int DEF_MAX_STEPS;
    private static final com.opengamma.analytics.math.matrix.MatrixAlgebra MA;
    private static final com.opengamma.analytics.math.minimization.QuasiNewtonInverseHessianUpdate DEF_UPDATER;
    private final double _absoluteTol;
    private final double _relativeTol;
    private final int _maxSteps;
    private final com.opengamma.analytics.math.minimization.QuasiNewtonInverseHessianUpdate _hessainUpdater;

    public void <init>()
    {
        com.opengamma.analytics.math.minimization.QuasiNewtonVectorMinimizer r0;

        r0 := @this: com.opengamma.analytics.math.minimization.QuasiNewtonVectorMinimizer;

        specialinvoke r0.<com.opengamma.analytics.math.minimization.QuasiNewtonVectorMinimizer: void <init>(double,double,int)>(1.0E-8, 1.0E-8, 200);

        return;
    }

    public void <init>(double, double, int)
    {
        com.opengamma.analytics.math.minimization.QuasiNewtonVectorMinimizer r0;
        double d0, d1;
        int i0;
        com.opengamma.analytics.math.minimization.QuasiNewtonInverseHessianUpdate $r1;

        r0 := @this: com.opengamma.analytics.math.minimization.QuasiNewtonVectorMinimizer;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        i0 := @parameter2: int;

        $r1 = <com.opengamma.analytics.math.minimization.QuasiNewtonVectorMinimizer: com.opengamma.analytics.math.minimization.QuasiNewtonInverseHessianUpdate DEF_UPDATER>;

        specialinvoke r0.<com.opengamma.analytics.math.minimization.QuasiNewtonVectorMinimizer: void <init>(double,double,int,com.opengamma.analytics.math.minimization.QuasiNewtonInverseHessianUpdate)>(d0, d1, i0, $r1);

        return;
    }

    public void <init>(double, double, int, com.opengamma.analytics.math.minimization.QuasiNewtonInverseHessianUpdate)
    {
        com.opengamma.analytics.math.minimization.QuasiNewtonVectorMinimizer r0;
        double d0, d1;
        int i0;
        com.opengamma.analytics.math.minimization.QuasiNewtonInverseHessianUpdate r1;

        r0 := @this: com.opengamma.analytics.math.minimization.QuasiNewtonVectorMinimizer;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        i0 := @parameter2: int;

        r1 := @parameter3: com.opengamma.analytics.math.minimization.QuasiNewtonInverseHessianUpdate;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "null updater");

        staticinvoke <com.opengamma.util.ArgumentChecker: double notNegative(double,java.lang.String)>(d0, "absolute tolerance");

        staticinvoke <com.opengamma.util.ArgumentChecker: double notNegative(double,java.lang.String)>(d1, "relative tolerance");

        staticinvoke <com.opengamma.util.ArgumentChecker: int notNegative(int,java.lang.String)>(i0, "maxSteps");

        r0.<com.opengamma.analytics.math.minimization.QuasiNewtonVectorMinimizer: double _absoluteTol> = d0;

        r0.<com.opengamma.analytics.math.minimization.QuasiNewtonVectorMinimizer: double _relativeTol> = d1;

        r0.<com.opengamma.analytics.math.minimization.QuasiNewtonVectorMinimizer: int _maxSteps> = i0;

        r0.<com.opengamma.analytics.math.minimization.QuasiNewtonVectorMinimizer: com.opengamma.analytics.math.minimization.QuasiNewtonInverseHessianUpdate _hessainUpdater> = r1;

        return;
    }

    public com.opengamma.analytics.math.matrix.DoubleMatrix1D minimize(com.opengamma.analytics.math.function.Function1D, com.opengamma.analytics.math.matrix.DoubleMatrix1D)
    {
        com.opengamma.analytics.math.minimization.QuasiNewtonVectorMinimizer r0;
        com.opengamma.analytics.math.function.Function1D r1;
        com.opengamma.analytics.math.matrix.DoubleMatrix1D r2;
        org.apache.commons.lang.NotImplementedException $r3;

        r0 := @this: com.opengamma.analytics.math.minimization.QuasiNewtonVectorMinimizer;

        r1 := @parameter0: com.opengamma.analytics.math.function.Function1D;

        r2 := @parameter1: com.opengamma.analytics.math.matrix.DoubleMatrix1D;

        $r3 = new org.apache.commons.lang.NotImplementedException;

        specialinvoke $r3.<org.apache.commons.lang.NotImplementedException: void <init>(java.lang.String)>("Please supply gradient function or use ConjugateGradient");

        throw $r3;
    }

    public com.opengamma.analytics.math.matrix.DoubleMatrix1D minimize(com.opengamma.analytics.math.function.Function1D, com.opengamma.analytics.math.function.Function1D, com.opengamma.analytics.math.matrix.DoubleMatrix1D)
    {
        com.opengamma.analytics.math.minimization.QuasiNewtonVectorMinimizer r0;
        com.opengamma.analytics.math.function.Function1D r1, r2;
        com.opengamma.analytics.math.matrix.DoubleMatrix1D r3, $r9, $r11, $r18;
        double d0, $d1;
        com.opengamma.analytics.math.minimization.QuasiNewtonVectorMinimizer$DataBundle $r5;
        java.lang.Object $r6, $r8;
        java.lang.Double $r7;
        com.opengamma.analytics.math.matrix.DoubleMatrix2D $r10, $r22, $r24;
        boolean $z0, $z1, $z2, $z3;
        int $i0, $i1, $i2, i3, i4;
        com.opengamma.analytics.math.minimization.QuasiNewtonInverseHessianUpdate $r12;
        com.opengamma.analytics.math.MathException $r13, $r23, $r25;
        java.lang.StringBuilder $r14, $r15, $r16, $r17, $r20;
        java.lang.String $r19, $r21;

        r0 := @this: com.opengamma.analytics.math.minimization.QuasiNewtonVectorMinimizer;

        r1 := @parameter0: com.opengamma.analytics.math.function.Function1D;

        r2 := @parameter1: com.opengamma.analytics.math.function.Function1D;

        r3 := @parameter2: com.opengamma.analytics.math.matrix.DoubleMatrix1D;

        $r5 = new com.opengamma.analytics.math.minimization.QuasiNewtonVectorMinimizer$DataBundle;

        specialinvoke $r5.<com.opengamma.analytics.math.minimization.QuasiNewtonVectorMinimizer$DataBundle: void <init>()>();

        $r6 = virtualinvoke r1.<com.opengamma.analytics.math.function.Function1D: java.lang.Object evaluate(java.lang.Object)>(r3);

        $r7 = (java.lang.Double) $r6;

        d0 = virtualinvoke $r7.<java.lang.Double: double doubleValue()>();

        virtualinvoke $r5.<com.opengamma.analytics.math.minimization.QuasiNewtonVectorMinimizer$DataBundle: void setX(com.opengamma.analytics.math.matrix.DoubleMatrix1D)>(r3);

        $d1 = d0 * d0;

        virtualinvoke $r5.<com.opengamma.analytics.math.minimization.QuasiNewtonVectorMinimizer$DataBundle: void setG0(double)>($d1);

        $r8 = virtualinvoke r2.<com.opengamma.analytics.math.function.Function1D: java.lang.Object evaluate(java.lang.Object)>(r3);

        $r9 = (com.opengamma.analytics.math.matrix.DoubleMatrix1D) $r8;

        virtualinvoke $r5.<com.opengamma.analytics.math.minimization.QuasiNewtonVectorMinimizer$DataBundle: void setGrad(com.opengamma.analytics.math.matrix.DoubleMatrix1D)>($r9);

        $r10 = specialinvoke r0.<com.opengamma.analytics.math.minimization.QuasiNewtonVectorMinimizer: com.opengamma.analytics.math.matrix.DoubleMatrix2D getInitializedMatrix(com.opengamma.analytics.math.matrix.DoubleMatrix1D)>(r3);

        virtualinvoke $r5.<com.opengamma.analytics.math.minimization.QuasiNewtonVectorMinimizer$DataBundle: void setInverseHessianEsimate(com.opengamma.analytics.math.matrix.DoubleMatrix2D)>($r10);

        $z0 = specialinvoke r0.<com.opengamma.analytics.math.minimization.QuasiNewtonVectorMinimizer: boolean getNextPosition(com.opengamma.analytics.math.function.Function1D,com.opengamma.analytics.math.function.Function1D,com.opengamma.analytics.math.minimization.QuasiNewtonVectorMinimizer$DataBundle)>(r1, r2, $r5);

        if $z0 != 0 goto label1;

        $r25 = new com.opengamma.analytics.math.MathException;

        specialinvoke $r25.<com.opengamma.analytics.math.MathException: void <init>(java.lang.String)>("Cannot work with this starting position. Please choose another point");

        throw $r25;

     label1:
        i3 = 0;

        i4 = 1;

     label2:
        $z1 = specialinvoke r0.<com.opengamma.analytics.math.minimization.QuasiNewtonVectorMinimizer: boolean isConverged(com.opengamma.analytics.math.minimization.QuasiNewtonVectorMinimizer$DataBundle)>($r5);

        if $z1 != 0 goto label6;

        $i0 = i4 % 200;

        if $i0 != 0 goto label3;

        $r24 = specialinvoke r0.<com.opengamma.analytics.math.minimization.QuasiNewtonVectorMinimizer: com.opengamma.analytics.math.matrix.DoubleMatrix2D getInitializedMatrix(com.opengamma.analytics.math.matrix.DoubleMatrix1D)>(r3);

        virtualinvoke $r5.<com.opengamma.analytics.math.minimization.QuasiNewtonVectorMinimizer$DataBundle: void setInverseHessianEsimate(com.opengamma.analytics.math.matrix.DoubleMatrix2D)>($r24);

        i4 = 1;

        goto label4;

     label3:
        $r12 = r0.<com.opengamma.analytics.math.minimization.QuasiNewtonVectorMinimizer: com.opengamma.analytics.math.minimization.QuasiNewtonInverseHessianUpdate _hessainUpdater>;

        interfaceinvoke $r12.<com.opengamma.analytics.math.minimization.QuasiNewtonInverseHessianUpdate: void update(com.opengamma.analytics.math.minimization.QuasiNewtonVectorMinimizer$DataBundle)>($r5);

     label4:
        $z2 = specialinvoke r0.<com.opengamma.analytics.math.minimization.QuasiNewtonVectorMinimizer: boolean getNextPosition(com.opengamma.analytics.math.function.Function1D,com.opengamma.analytics.math.function.Function1D,com.opengamma.analytics.math.minimization.QuasiNewtonVectorMinimizer$DataBundle)>(r1, r2, $r5);

        if $z2 != 0 goto label5;

        $r22 = specialinvoke r0.<com.opengamma.analytics.math.minimization.QuasiNewtonVectorMinimizer: com.opengamma.analytics.math.matrix.DoubleMatrix2D getInitializedMatrix(com.opengamma.analytics.math.matrix.DoubleMatrix1D)>(r3);

        virtualinvoke $r5.<com.opengamma.analytics.math.minimization.QuasiNewtonVectorMinimizer$DataBundle: void setInverseHessianEsimate(com.opengamma.analytics.math.matrix.DoubleMatrix2D)>($r22);

        i4 = 1;

        $z3 = specialinvoke r0.<com.opengamma.analytics.math.minimization.QuasiNewtonVectorMinimizer: boolean getNextPosition(com.opengamma.analytics.math.function.Function1D,com.opengamma.analytics.math.function.Function1D,com.opengamma.analytics.math.minimization.QuasiNewtonVectorMinimizer$DataBundle)>(r1, r2, $r5);

        if $z3 != 0 goto label5;

        $r23 = new com.opengamma.analytics.math.MathException;

        specialinvoke $r23.<com.opengamma.analytics.math.MathException: void <init>(java.lang.String)>("Failed to converge in backtracking");

        throw $r23;

     label5:
        i3 = i3 + 1;

        i4 = i4 + 1;

        $i1 = r0.<com.opengamma.analytics.math.minimization.QuasiNewtonVectorMinimizer: int _maxSteps>;

        if i3 <= $i1 goto label2;

        $r13 = new com.opengamma.analytics.math.MathException;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to converge after ");

        $i2 = r0.<com.opengamma.analytics.math.minimization.QuasiNewtonVectorMinimizer: int _maxSteps>;

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" iterations. Final point reached: ");

        $r18 = virtualinvoke $r5.<com.opengamma.analytics.math.minimization.QuasiNewtonVectorMinimizer$DataBundle: com.opengamma.analytics.math.matrix.DoubleMatrix1D getX()>();

        $r19 = virtualinvoke $r18.<com.opengamma.analytics.math.matrix.DoubleMatrix1D: java.lang.String toString()>();

        $r20 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r19);

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r13.<com.opengamma.analytics.math.MathException: void <init>(java.lang.String)>($r21);

        throw $r13;

     label6:
        $r11 = virtualinvoke $r5.<com.opengamma.analytics.math.minimization.QuasiNewtonVectorMinimizer$DataBundle: com.opengamma.analytics.math.matrix.DoubleMatrix1D getX()>();

        return $r11;
    }

    private com.opengamma.analytics.math.matrix.DoubleMatrix2D getInitializedMatrix(com.opengamma.analytics.math.matrix.DoubleMatrix1D)
    {
        com.opengamma.analytics.math.minimization.QuasiNewtonVectorMinimizer r0;
        com.opengamma.analytics.math.matrix.DoubleMatrix1D r1;
        int $i0;
        com.opengamma.analytics.math.matrix.DoubleMatrix2D $r2;

        r0 := @this: com.opengamma.analytics.math.minimization.QuasiNewtonVectorMinimizer;

        r1 := @parameter0: com.opengamma.analytics.math.matrix.DoubleMatrix1D;

        $i0 = virtualinvoke r1.<com.opengamma.analytics.math.matrix.DoubleMatrix1D: int getNumberOfElements()>();

        $r2 = staticinvoke <com.opengamma.analytics.math.matrix.DoubleMatrixUtils: com.opengamma.analytics.math.matrix.DoubleMatrix2D getIdentityMatrix2D(int)>($i0);

        return $r2;
    }

    private com.opengamma.analytics.math.matrix.DoubleMatrix1D getDirection(com.opengamma.analytics.math.minimization.QuasiNewtonVectorMinimizer$DataBundle)
    {
        com.opengamma.analytics.math.minimization.QuasiNewtonVectorMinimizer r0;
        com.opengamma.analytics.math.minimization.QuasiNewtonVectorMinimizer$DataBundle r1;
        com.opengamma.analytics.math.matrix.MatrixAlgebra $r2, $r4;
        com.opengamma.analytics.math.matrix.DoubleMatrix2D $r3;
        com.opengamma.analytics.math.matrix.DoubleMatrix1D $r5, $r8;
        com.opengamma.analytics.math.matrix.Matrix $r6, $r7;

        r0 := @this: com.opengamma.analytics.math.minimization.QuasiNewtonVectorMinimizer;

        r1 := @parameter0: com.opengamma.analytics.math.minimization.QuasiNewtonVectorMinimizer$DataBundle;

        $r2 = <com.opengamma.analytics.math.minimization.QuasiNewtonVectorMinimizer: com.opengamma.analytics.math.matrix.MatrixAlgebra MA>;

        $r3 = virtualinvoke r1.<com.opengamma.analytics.math.minimization.QuasiNewtonVectorMinimizer$DataBundle: com.opengamma.analytics.math.matrix.DoubleMatrix2D getInverseHessianEsimate()>();

        $r4 = <com.opengamma.analytics.math.minimization.QuasiNewtonVectorMinimizer: com.opengamma.analytics.math.matrix.MatrixAlgebra MA>;

        $r5 = virtualinvoke r1.<com.opengamma.analytics.math.minimization.QuasiNewtonVectorMinimizer$DataBundle: com.opengamma.analytics.math.matrix.DoubleMatrix1D getGrad()>();

        $r6 = virtualinvoke $r4.<com.opengamma.analytics.math.matrix.MatrixAlgebra: com.opengamma.analytics.math.matrix.Matrix scale(com.opengamma.analytics.math.matrix.Matrix,double)>($r5, -1.0);

        $r7 = virtualinvoke $r2.<com.opengamma.analytics.math.matrix.MatrixAlgebra: com.opengamma.analytics.math.matrix.Matrix multiply(com.opengamma.analytics.math.matrix.Matrix,com.opengamma.analytics.math.matrix.Matrix)>($r3, $r6);

        $r8 = (com.opengamma.analytics.math.matrix.DoubleMatrix1D) $r7;

        return $r8;
    }

    private boolean getNextPosition(com.opengamma.analytics.math.function.Function1D, com.opengamma.analytics.math.function.Function1D, com.opengamma.analytics.math.minimization.QuasiNewtonVectorMinimizer$DataBundle)
    {
        com.opengamma.analytics.math.minimization.QuasiNewtonVectorMinimizer r0;
        com.opengamma.analytics.math.function.Function1D r1, r2;
        com.opengamma.analytics.math.minimization.QuasiNewtonVectorMinimizer$DataBundle r3;
        com.opengamma.analytics.math.matrix.DoubleMatrix1D r4, r5, $r7, $r9, $r10, $r13, $r15, r16;
        double d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16;
        byte $b0, $b1, $b2;
        boolean $z0, $z1;
        com.opengamma.analytics.math.matrix.MatrixAlgebra $r6, $r12;
        com.opengamma.analytics.math.matrix.Matrix $r8, $r14;
        java.lang.Object $r11;
        int i3;

        r0 := @this: com.opengamma.analytics.math.minimization.QuasiNewtonVectorMinimizer;

        r1 := @parameter0: com.opengamma.analytics.math.function.Function1D;

        r2 := @parameter1: com.opengamma.analytics.math.function.Function1D;

        r3 := @parameter2: com.opengamma.analytics.math.minimization.QuasiNewtonVectorMinimizer$DataBundle;

        r4 = specialinvoke r0.<com.opengamma.analytics.math.minimization.QuasiNewtonVectorMinimizer: com.opengamma.analytics.math.matrix.DoubleMatrix1D getDirection(com.opengamma.analytics.math.minimization.QuasiNewtonVectorMinimizer$DataBundle)>(r3);

        $d1 = virtualinvoke r3.<com.opengamma.analytics.math.minimization.QuasiNewtonVectorMinimizer$DataBundle: double getLambda0()>();

        $b0 = $d1 cmpg 1.0;

        if $b0 >= 0 goto label1;

        virtualinvoke r3.<com.opengamma.analytics.math.minimization.QuasiNewtonVectorMinimizer$DataBundle: void setLambda0(double)>(1.0);

        goto label2;

     label1:
        $d2 = virtualinvoke r3.<com.opengamma.analytics.math.minimization.QuasiNewtonVectorMinimizer$DataBundle: double getLambda0()>();

        $d3 = $d2 * 1.5;

        virtualinvoke r3.<com.opengamma.analytics.math.minimization.QuasiNewtonVectorMinimizer$DataBundle: void setLambda0(double)>($d3);

     label2:
        virtualinvoke r0.<com.opengamma.analytics.math.minimization.QuasiNewtonVectorMinimizer: void updatePosition(com.opengamma.analytics.math.matrix.DoubleMatrix1D,com.opengamma.analytics.math.function.Function1D,com.opengamma.analytics.math.minimization.QuasiNewtonVectorMinimizer$DataBundle)>(r4, r1, r3);

        d0 = virtualinvoke r3.<com.opengamma.analytics.math.minimization.QuasiNewtonVectorMinimizer$DataBundle: double getG1()>();

        $z0 = staticinvoke <java.lang.Double: boolean isInfinite(double)>(d0);

        if $z0 != 0 goto label3;

        $z1 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d0);

        if $z1 == 0 goto label4;

     label3:
        specialinvoke r0.<com.opengamma.analytics.math.minimization.QuasiNewtonVectorMinimizer: void bisectBacktrack(com.opengamma.analytics.math.matrix.DoubleMatrix1D,com.opengamma.analytics.math.function.Function1D,com.opengamma.analytics.math.minimization.QuasiNewtonVectorMinimizer$DataBundle)>(r4, r1, r3);

     label4:
        $d11 = virtualinvoke r3.<com.opengamma.analytics.math.minimization.QuasiNewtonVectorMinimizer$DataBundle: double getG1()>();

        $d12 = virtualinvoke r3.<com.opengamma.analytics.math.minimization.QuasiNewtonVectorMinimizer$DataBundle: double getG0()>();

        $d13 = virtualinvoke r3.<com.opengamma.analytics.math.minimization.QuasiNewtonVectorMinimizer$DataBundle: double getLambda0()>();

        $d14 = 1.0E-4 * $d13;

        $d15 = 1.0 + $d14;

        $d16 = $d12 / $d15;

        $b2 = $d11 cmpl $d16;

        if $b2 <= 0 goto label7;

        specialinvoke r0.<com.opengamma.analytics.math.minimization.QuasiNewtonVectorMinimizer: void quadraticBacktrack(com.opengamma.analytics.math.matrix.DoubleMatrix1D,com.opengamma.analytics.math.function.Function1D,com.opengamma.analytics.math.minimization.QuasiNewtonVectorMinimizer$DataBundle)>(r4, r1, r3);

        i3 = 0;

     label5:
        $d5 = virtualinvoke r3.<com.opengamma.analytics.math.minimization.QuasiNewtonVectorMinimizer$DataBundle: double getG1()>();

        $d6 = virtualinvoke r3.<com.opengamma.analytics.math.minimization.QuasiNewtonVectorMinimizer$DataBundle: double getG0()>();

        $d7 = virtualinvoke r3.<com.opengamma.analytics.math.minimization.QuasiNewtonVectorMinimizer$DataBundle: double getLambda0()>();

        $d8 = 1.0E-4 * $d7;

        $d9 = 1.0 + $d8;

        $d10 = $d6 / $d9;

        $b1 = $d5 cmpl $d10;

        if $b1 <= 0 goto label7;

        if i3 <= 5 goto label6;

        return 0;

     label6:
        specialinvoke r0.<com.opengamma.analytics.math.minimization.QuasiNewtonVectorMinimizer: void cubicBacktrack(com.opengamma.analytics.math.matrix.DoubleMatrix1D,com.opengamma.analytics.math.function.Function1D,com.opengamma.analytics.math.minimization.QuasiNewtonVectorMinimizer$DataBundle)>(r4, r1, r3);

        i3 = i3 + 1;

        goto label5;

     label7:
        r16 = virtualinvoke r3.<com.opengamma.analytics.math.minimization.QuasiNewtonVectorMinimizer$DataBundle: com.opengamma.analytics.math.matrix.DoubleMatrix1D getDeltaX()>();

        $r6 = <com.opengamma.analytics.math.minimization.QuasiNewtonVectorMinimizer: com.opengamma.analytics.math.matrix.MatrixAlgebra MA>;

        $r7 = virtualinvoke r3.<com.opengamma.analytics.math.minimization.QuasiNewtonVectorMinimizer$DataBundle: com.opengamma.analytics.math.matrix.DoubleMatrix1D getX()>();

        $r8 = virtualinvoke $r6.<com.opengamma.analytics.math.matrix.MatrixAlgebra: com.opengamma.analytics.math.matrix.Matrix add(com.opengamma.analytics.math.matrix.Matrix,com.opengamma.analytics.math.matrix.Matrix)>($r7, r16);

        $r9 = (com.opengamma.analytics.math.matrix.DoubleMatrix1D) $r8;

        virtualinvoke r3.<com.opengamma.analytics.math.minimization.QuasiNewtonVectorMinimizer$DataBundle: void setX(com.opengamma.analytics.math.matrix.DoubleMatrix1D)>($r9);

        $d4 = virtualinvoke r3.<com.opengamma.analytics.math.minimization.QuasiNewtonVectorMinimizer$DataBundle: double getG1()>();

        virtualinvoke r3.<com.opengamma.analytics.math.minimization.QuasiNewtonVectorMinimizer$DataBundle: void setG0(double)>($d4);

        $r10 = virtualinvoke r3.<com.opengamma.analytics.math.minimization.QuasiNewtonVectorMinimizer$DataBundle: com.opengamma.analytics.math.matrix.DoubleMatrix1D getX()>();

        $r11 = virtualinvoke r2.<com.opengamma.analytics.math.function.Function1D: java.lang.Object evaluate(java.lang.Object)>($r10);

        r5 = (com.opengamma.analytics.math.matrix.DoubleMatrix1D) $r11;

        $r12 = <com.opengamma.analytics.math.minimization.QuasiNewtonVectorMinimizer: com.opengamma.analytics.math.matrix.MatrixAlgebra MA>;

        $r13 = virtualinvoke r3.<com.opengamma.analytics.math.minimization.QuasiNewtonVectorMinimizer$DataBundle: com.opengamma.analytics.math.matrix.DoubleMatrix1D getGrad()>();

        $r14 = virtualinvoke $r12.<com.opengamma.analytics.math.matrix.MatrixAlgebra: com.opengamma.analytics.math.matrix.Matrix subtract(com.opengamma.analytics.math.matrix.Matrix,com.opengamma.analytics.math.matrix.Matrix)>(r5, $r13);

        $r15 = (com.opengamma.analytics.math.matrix.DoubleMatrix1D) $r14;

        virtualinvoke r3.<com.opengamma.analytics.math.minimization.QuasiNewtonVectorMinimizer$DataBundle: void setDeltaGrad(com.opengamma.analytics.math.matrix.DoubleMatrix1D)>($r15);

        virtualinvoke r3.<com.opengamma.analytics.math.minimization.QuasiNewtonVectorMinimizer$DataBundle: void setGrad(com.opengamma.analytics.math.matrix.DoubleMatrix1D)>(r5);

        return 1;
    }

    protected void updatePosition(com.opengamma.analytics.math.matrix.DoubleMatrix1D, com.opengamma.analytics.math.function.Function1D, com.opengamma.analytics.math.minimization.QuasiNewtonVectorMinimizer$DataBundle)
    {
        com.opengamma.analytics.math.minimization.QuasiNewtonVectorMinimizer r0;
        com.opengamma.analytics.math.matrix.DoubleMatrix1D r1, r4, r5, $r9;
        com.opengamma.analytics.math.function.Function1D r2;
        com.opengamma.analytics.math.minimization.QuasiNewtonVectorMinimizer$DataBundle r3;
        double d0, d1, $d2, $d3;
        com.opengamma.analytics.math.matrix.MatrixAlgebra $r6, $r8;
        com.opengamma.analytics.math.matrix.Matrix $r7, $r10;
        java.lang.Object $r11;
        java.lang.Double $r12;

        r0 := @this: com.opengamma.analytics.math.minimization.QuasiNewtonVectorMinimizer;

        r1 := @parameter0: com.opengamma.analytics.math.matrix.DoubleMatrix1D;

        r2 := @parameter1: com.opengamma.analytics.math.function.Function1D;

        r3 := @parameter2: com.opengamma.analytics.math.minimization.QuasiNewtonVectorMinimizer$DataBundle;

        d0 = virtualinvoke r3.<com.opengamma.analytics.math.minimization.QuasiNewtonVectorMinimizer$DataBundle: double getLambda0()>();

        $r6 = <com.opengamma.analytics.math.minimization.QuasiNewtonVectorMinimizer: com.opengamma.analytics.math.matrix.MatrixAlgebra MA>;

        $r7 = virtualinvoke $r6.<com.opengamma.analytics.math.matrix.MatrixAlgebra: com.opengamma.analytics.math.matrix.Matrix scale(com.opengamma.analytics.math.matrix.Matrix,double)>(r1, d0);

        r4 = (com.opengamma.analytics.math.matrix.DoubleMatrix1D) $r7;

        $r8 = <com.opengamma.analytics.math.minimization.QuasiNewtonVectorMinimizer: com.opengamma.analytics.math.matrix.MatrixAlgebra MA>;

        $r9 = virtualinvoke r3.<com.opengamma.analytics.math.minimization.QuasiNewtonVectorMinimizer$DataBundle: com.opengamma.analytics.math.matrix.DoubleMatrix1D getX()>();

        $r10 = virtualinvoke $r8.<com.opengamma.analytics.math.matrix.MatrixAlgebra: com.opengamma.analytics.math.matrix.Matrix add(com.opengamma.analytics.math.matrix.Matrix,com.opengamma.analytics.math.matrix.Matrix)>($r9, r4);

        r5 = (com.opengamma.analytics.math.matrix.DoubleMatrix1D) $r10;

        virtualinvoke r3.<com.opengamma.analytics.math.minimization.QuasiNewtonVectorMinimizer$DataBundle: void setDeltaX(com.opengamma.analytics.math.matrix.DoubleMatrix1D)>(r4);

        $d2 = virtualinvoke r3.<com.opengamma.analytics.math.minimization.QuasiNewtonVectorMinimizer$DataBundle: double getG1()>();

        virtualinvoke r3.<com.opengamma.analytics.math.minimization.QuasiNewtonVectorMinimizer$DataBundle: void setG2(double)>($d2);

        $r11 = virtualinvoke r2.<com.opengamma.analytics.math.function.Function1D: java.lang.Object evaluate(java.lang.Object)>(r5);

        $r12 = (java.lang.Double) $r11;

        d1 = virtualinvoke $r12.<java.lang.Double: double doubleValue()>();

        $d3 = d1 * d1;

        virtualinvoke r3.<com.opengamma.analytics.math.minimization.QuasiNewtonVectorMinimizer$DataBundle: void setG1(double)>($d3);

        return;
    }

    private void bisectBacktrack(com.opengamma.analytics.math.matrix.DoubleMatrix1D, com.opengamma.analytics.math.function.Function1D, com.opengamma.analytics.math.minimization.QuasiNewtonVectorMinimizer$DataBundle)
    {
        com.opengamma.analytics.math.minimization.QuasiNewtonVectorMinimizer r0;
        com.opengamma.analytics.math.matrix.DoubleMatrix1D r1;
        com.opengamma.analytics.math.function.Function1D r2;
        com.opengamma.analytics.math.minimization.QuasiNewtonVectorMinimizer$DataBundle r3;
        double $d0, $d1, $d2, $d3, $d4, $d5;
        boolean $z0, $z1, $z2, $z3;

        r0 := @this: com.opengamma.analytics.math.minimization.QuasiNewtonVectorMinimizer;

        r1 := @parameter0: com.opengamma.analytics.math.matrix.DoubleMatrix1D;

        r2 := @parameter1: com.opengamma.analytics.math.function.Function1D;

        r3 := @parameter2: com.opengamma.analytics.math.minimization.QuasiNewtonVectorMinimizer$DataBundle;

     label1:
        $d3 = virtualinvoke r3.<com.opengamma.analytics.math.minimization.QuasiNewtonVectorMinimizer$DataBundle: double getLambda0()>();

        $d4 = $d3 * 0.1;

        virtualinvoke r3.<com.opengamma.analytics.math.minimization.QuasiNewtonVectorMinimizer$DataBundle: void setLambda0(double)>($d4);

        virtualinvoke r0.<com.opengamma.analytics.math.minimization.QuasiNewtonVectorMinimizer: void updatePosition(com.opengamma.analytics.math.matrix.DoubleMatrix1D,com.opengamma.analytics.math.function.Function1D,com.opengamma.analytics.math.minimization.QuasiNewtonVectorMinimizer$DataBundle)>(r1, r2, r3);

        $d5 = virtualinvoke r3.<com.opengamma.analytics.math.minimization.QuasiNewtonVectorMinimizer$DataBundle: double getG1()>();

        $z3 = staticinvoke <java.lang.Double: boolean isNaN(double)>($d5);

        if $z3 != 0 goto label1;

        $d0 = virtualinvoke r3.<com.opengamma.analytics.math.minimization.QuasiNewtonVectorMinimizer$DataBundle: double getG1()>();

        $z0 = staticinvoke <java.lang.Double: boolean isInfinite(double)>($d0);

        if $z0 != 0 goto label1;

        $d1 = virtualinvoke r3.<com.opengamma.analytics.math.minimization.QuasiNewtonVectorMinimizer$DataBundle: double getG2()>();

        $z1 = staticinvoke <java.lang.Double: boolean isNaN(double)>($d1);

        if $z1 != 0 goto label1;

        $d2 = virtualinvoke r3.<com.opengamma.analytics.math.minimization.QuasiNewtonVectorMinimizer$DataBundle: double getG2()>();

        $z2 = staticinvoke <java.lang.Double: boolean isInfinite(double)>($d2);

        if $z2 != 0 goto label1;

        return;
    }

    private void quadraticBacktrack(com.opengamma.analytics.math.matrix.DoubleMatrix1D, com.opengamma.analytics.math.function.Function1D, com.opengamma.analytics.math.minimization.QuasiNewtonVectorMinimizer$DataBundle)
    {
        com.opengamma.analytics.math.minimization.QuasiNewtonVectorMinimizer r0;
        com.opengamma.analytics.math.matrix.DoubleMatrix1D r1;
        com.opengamma.analytics.math.function.Function1D r2;
        com.opengamma.analytics.math.minimization.QuasiNewtonVectorMinimizer$DataBundle r3;
        double d0, d1, d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11;

        r0 := @this: com.opengamma.analytics.math.minimization.QuasiNewtonVectorMinimizer;

        r1 := @parameter0: com.opengamma.analytics.math.matrix.DoubleMatrix1D;

        r2 := @parameter1: com.opengamma.analytics.math.function.Function1D;

        r3 := @parameter2: com.opengamma.analytics.math.minimization.QuasiNewtonVectorMinimizer$DataBundle;

        d0 = virtualinvoke r3.<com.opengamma.analytics.math.minimization.QuasiNewtonVectorMinimizer$DataBundle: double getLambda0()>();

        d1 = virtualinvoke r3.<com.opengamma.analytics.math.minimization.QuasiNewtonVectorMinimizer$DataBundle: double getG0()>();

        $d4 = 0.01 * d0;

        $d3 = d1 * d0;

        $d5 = $d3 * d0;

        $d6 = virtualinvoke r3.<com.opengamma.analytics.math.minimization.QuasiNewtonVectorMinimizer$DataBundle: double getG1()>();

        $d7 = 2.0 * d0;

        $d8 = $d7 - 1.0;

        $d9 = d1 * $d8;

        $d10 = $d6 + $d9;

        $d11 = $d5 / $d10;

        d2 = staticinvoke <java.lang.Math: double max(double,double)>($d4, $d11);

        virtualinvoke r3.<com.opengamma.analytics.math.minimization.QuasiNewtonVectorMinimizer$DataBundle: void swapLambdaAndReplace(double)>(d2);

        virtualinvoke r0.<com.opengamma.analytics.math.minimization.QuasiNewtonVectorMinimizer: void updatePosition(com.opengamma.analytics.math.matrix.DoubleMatrix1D,com.opengamma.analytics.math.function.Function1D,com.opengamma.analytics.math.minimization.QuasiNewtonVectorMinimizer$DataBundle)>(r1, r2, r3);

        return;
    }

    private void cubicBacktrack(com.opengamma.analytics.math.matrix.DoubleMatrix1D, com.opengamma.analytics.math.function.Function1D, com.opengamma.analytics.math.minimization.QuasiNewtonVectorMinimizer$DataBundle)
    {
        com.opengamma.analytics.math.minimization.QuasiNewtonVectorMinimizer r0;
        com.opengamma.analytics.math.matrix.DoubleMatrix1D r1;
        com.opengamma.analytics.math.function.Function1D r2;
        com.opengamma.analytics.math.minimization.QuasiNewtonVectorMinimizer$DataBundle r3;
        double d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21, $d22, $d23, $d24, $d25, $d26, $d27, $d28, $d29, $d30, $d31, $d32, $d33, $d34, $d35, $d36, $d37, $d38, $d39, $d40, d41, d42;

        r0 := @this: com.opengamma.analytics.math.minimization.QuasiNewtonVectorMinimizer;

        r1 := @parameter0: com.opengamma.analytics.math.matrix.DoubleMatrix1D;

        r2 := @parameter1: com.opengamma.analytics.math.function.Function1D;

        r3 := @parameter2: com.opengamma.analytics.math.minimization.QuasiNewtonVectorMinimizer$DataBundle;

        d5 = virtualinvoke r3.<com.opengamma.analytics.math.minimization.QuasiNewtonVectorMinimizer$DataBundle: double getLambda0()>();

        d6 = virtualinvoke r3.<com.opengamma.analytics.math.minimization.QuasiNewtonVectorMinimizer$DataBundle: double getLambda1()>();

        d7 = virtualinvoke r3.<com.opengamma.analytics.math.minimization.QuasiNewtonVectorMinimizer$DataBundle: double getG0()>();

        $d10 = 1.0 / d5;

        d0 = $d10 / d5;

        $d11 = 1.0 / d6;

        d1 = $d11 / d6;

        $d12 = virtualinvoke r3.<com.opengamma.analytics.math.minimization.QuasiNewtonVectorMinimizer$DataBundle: double getG1()>();

        $d13 = 2.0 * d5;

        $d14 = $d13 - 1.0;

        $d15 = d7 * $d14;

        d2 = $d12 + $d15;

        $d16 = virtualinvoke r3.<com.opengamma.analytics.math.minimization.QuasiNewtonVectorMinimizer$DataBundle: double getG2()>();

        $d17 = 2.0 * d6;

        $d18 = $d17 - 1.0;

        $d19 = d7 * $d18;

        d3 = $d16 + $d19;

        $d20 = d5 - d6;

        d4 = 1.0 / $d20;

        $d22 = d0 * d2;

        $d21 = d1 * d3;

        $d23 = $d22 - $d21;

        d8 = d4 * $d23;

        $d24 = neg d6;

        $d25 = $d24 * d0;

        $d28 = $d25 * d2;

        $d26 = d5 * d1;

        $d27 = $d26 * d3;

        $d29 = $d28 + $d27;

        d9 = d4 * $d29;

        $d34 = neg d9;

        $d32 = d9 * d9;

        $d30 = 6.0 * d8;

        $d31 = $d30 * d7;

        $d33 = $d32 + $d31;

        $d35 = staticinvoke <java.lang.Math: double sqrt(double)>($d33);

        $d36 = $d34 + $d35;

        $d37 = $d36 / 3.0;

        d41 = $d37 / d8;

        $d38 = 0.01 * d5;

        $d39 = staticinvoke <java.lang.Math: double max(double,double)>(d41, $d38);

        $d40 = 0.75 * d6;

        d42 = staticinvoke <java.lang.Math: double min(double,double)>($d39, $d40);

        virtualinvoke r3.<com.opengamma.analytics.math.minimization.QuasiNewtonVectorMinimizer$DataBundle: void swapLambdaAndReplace(double)>(d42);

        virtualinvoke r0.<com.opengamma.analytics.math.minimization.QuasiNewtonVectorMinimizer: void updatePosition(com.opengamma.analytics.math.matrix.DoubleMatrix1D,com.opengamma.analytics.math.function.Function1D,com.opengamma.analytics.math.minimization.QuasiNewtonVectorMinimizer$DataBundle)>(r1, r2, r3);

        return;
    }

    private boolean isConverged(com.opengamma.analytics.math.minimization.QuasiNewtonVectorMinimizer$DataBundle)
    {
        com.opengamma.analytics.math.minimization.QuasiNewtonVectorMinimizer r0;
        com.opengamma.analytics.math.minimization.QuasiNewtonVectorMinimizer$DataBundle r1;
        com.opengamma.analytics.math.matrix.DoubleMatrix1D r2, r3, $r5;
        int i0, i3;
        double d0, d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9;
        com.opengamma.analytics.math.matrix.MatrixAlgebra $r4;
        byte $b1, $b2;
        int[] $r6, $r8;
        java.lang.Double $r7, $r9;
        boolean $z0;

        r0 := @this: com.opengamma.analytics.math.minimization.QuasiNewtonVectorMinimizer;

        r1 := @parameter0: com.opengamma.analytics.math.minimization.QuasiNewtonVectorMinimizer$DataBundle;

        r2 = virtualinvoke r1.<com.opengamma.analytics.math.minimization.QuasiNewtonVectorMinimizer$DataBundle: com.opengamma.analytics.math.matrix.DoubleMatrix1D getDeltaX()>();

        r3 = virtualinvoke r1.<com.opengamma.analytics.math.minimization.QuasiNewtonVectorMinimizer$DataBundle: com.opengamma.analytics.math.matrix.DoubleMatrix1D getX()>();

        i0 = virtualinvoke r2.<com.opengamma.analytics.math.matrix.DoubleMatrix1D: int getNumberOfElements()>();

        i3 = 0;

     label1:
        if i3 >= i0 goto label3;

        $r6 = newarray (int)[1];

        $r6[0] = i3;

        $r7 = virtualinvoke r2.<com.opengamma.analytics.math.matrix.DoubleMatrix1D: java.lang.Double getEntry(int[])>($r6);

        $d4 = virtualinvoke $r7.<java.lang.Double: double doubleValue()>();

        d0 = staticinvoke <java.lang.Math: double abs(double)>($d4);

        $r8 = newarray (int)[1];

        $r8[0] = i3;

        $r9 = virtualinvoke r3.<com.opengamma.analytics.math.matrix.DoubleMatrix1D: java.lang.Double getEntry(int[])>($r8);

        $d5 = virtualinvoke $r9.<java.lang.Double: double doubleValue()>();

        d1 = staticinvoke <java.lang.Math: double abs(double)>($d5);

        $d8 = r0.<com.opengamma.analytics.math.minimization.QuasiNewtonVectorMinimizer: double _absoluteTol>;

        $d6 = r0.<com.opengamma.analytics.math.minimization.QuasiNewtonVectorMinimizer: double _relativeTol>;

        $d7 = d1 * $d6;

        $d9 = $d8 + $d7;

        $b2 = d0 cmpl $d9;

        if $b2 <= 0 goto label2;

        return 0;

     label2:
        i3 = i3 + 1;

        goto label1;

     label3:
        $r4 = <com.opengamma.analytics.math.minimization.QuasiNewtonVectorMinimizer: com.opengamma.analytics.math.matrix.MatrixAlgebra MA>;

        $r5 = virtualinvoke r1.<com.opengamma.analytics.math.minimization.QuasiNewtonVectorMinimizer$DataBundle: com.opengamma.analytics.math.matrix.DoubleMatrix1D getGrad()>();

        $d2 = virtualinvoke $r4.<com.opengamma.analytics.math.matrix.MatrixAlgebra: double getNorm2(com.opengamma.analytics.math.matrix.Matrix)>($r5);

        $d3 = r0.<com.opengamma.analytics.math.minimization.QuasiNewtonVectorMinimizer: double _absoluteTol>;

        $b1 = $d2 cmpg $d3;

        if $b1 >= 0 goto label4;

        $z0 = 1;

        goto label5;

     label4:
        $z0 = 0;

     label5:
        return $z0;
    }

    public volatile java.lang.Object minimize(com.opengamma.analytics.math.function.Function1D, com.opengamma.analytics.math.function.Function1D, java.lang.Object)
    {
        com.opengamma.analytics.math.minimization.QuasiNewtonVectorMinimizer r0;
        com.opengamma.analytics.math.function.Function1D r1, r2;
        java.lang.Object r3;
        com.opengamma.analytics.math.matrix.DoubleMatrix1D $r4, $r5;

        r0 := @this: com.opengamma.analytics.math.minimization.QuasiNewtonVectorMinimizer;

        r1 := @parameter0: com.opengamma.analytics.math.function.Function1D;

        r2 := @parameter1: com.opengamma.analytics.math.function.Function1D;

        r3 := @parameter2: java.lang.Object;

        $r4 = (com.opengamma.analytics.math.matrix.DoubleMatrix1D) r3;

        $r5 = virtualinvoke r0.<com.opengamma.analytics.math.minimization.QuasiNewtonVectorMinimizer: com.opengamma.analytics.math.matrix.DoubleMatrix1D minimize(com.opengamma.analytics.math.function.Function1D,com.opengamma.analytics.math.function.Function1D,com.opengamma.analytics.math.matrix.DoubleMatrix1D)>(r1, r2, $r4);

        return $r5;
    }

    public volatile java.lang.Object minimize(com.opengamma.analytics.math.function.Function1D, java.lang.Object)
    {
        com.opengamma.analytics.math.minimization.QuasiNewtonVectorMinimizer r0;
        com.opengamma.analytics.math.function.Function1D r1;
        java.lang.Object r2;
        com.opengamma.analytics.math.matrix.DoubleMatrix1D $r3, $r4;

        r0 := @this: com.opengamma.analytics.math.minimization.QuasiNewtonVectorMinimizer;

        r1 := @parameter0: com.opengamma.analytics.math.function.Function1D;

        r2 := @parameter1: java.lang.Object;

        $r3 = (com.opengamma.analytics.math.matrix.DoubleMatrix1D) r2;

        $r4 = virtualinvoke r0.<com.opengamma.analytics.math.minimization.QuasiNewtonVectorMinimizer: com.opengamma.analytics.math.matrix.DoubleMatrix1D minimize(com.opengamma.analytics.math.function.Function1D,com.opengamma.analytics.math.matrix.DoubleMatrix1D)>(r1, $r3);

        return $r4;
    }

    static void <clinit>()
    {
        com.opengamma.analytics.math.matrix.MatrixAlgebra $r0;
        com.opengamma.analytics.math.minimization.BroydenFletcherGoldfarbShannoInverseHessianUpdate $r1;

        <com.opengamma.analytics.math.minimization.QuasiNewtonVectorMinimizer: int DEF_MAX_STEPS> = 200;

        <com.opengamma.analytics.math.minimization.QuasiNewtonVectorMinimizer: double EPS> = 1.0E-8;

        <com.opengamma.analytics.math.minimization.QuasiNewtonVectorMinimizer: double BETA> = 1.5;

        <com.opengamma.analytics.math.minimization.QuasiNewtonVectorMinimizer: double ALPHA> = 1.0E-4;

        <com.opengamma.analytics.math.minimization.QuasiNewtonVectorMinimizer: int RESET_FREQ> = 200;

        $r0 = staticinvoke <com.opengamma.analytics.math.matrix.MatrixAlgebraFactory: com.opengamma.analytics.math.matrix.MatrixAlgebra getMatrixAlgebra(java.lang.String)>("OG");

        <com.opengamma.analytics.math.minimization.QuasiNewtonVectorMinimizer: com.opengamma.analytics.math.matrix.MatrixAlgebra MA> = $r0;

        $r1 = new com.opengamma.analytics.math.minimization.BroydenFletcherGoldfarbShannoInverseHessianUpdate;

        specialinvoke $r1.<com.opengamma.analytics.math.minimization.BroydenFletcherGoldfarbShannoInverseHessianUpdate: void <init>()>();

        <com.opengamma.analytics.math.minimization.QuasiNewtonVectorMinimizer: com.opengamma.analytics.math.minimization.QuasiNewtonInverseHessianUpdate DEF_UPDATER> = $r1;

        return;
    }
}
