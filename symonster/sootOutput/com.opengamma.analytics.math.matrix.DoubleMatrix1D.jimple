public class com.opengamma.analytics.math.matrix.DoubleMatrix1D extends java.lang.Object implements com.opengamma.analytics.math.matrix.Matrix
{
    private final double[] _data;
    private final int _elements;
    public static final com.opengamma.analytics.math.matrix.DoubleMatrix1D EMPTY_MATRIX;

    public void <init>(java.lang.Double[])
    {
        com.opengamma.analytics.math.matrix.DoubleMatrix1D r0;
        java.lang.Double[] r1;
        int $i0, $i1, $i2, i3;
        double[] $r2, $r4;
        java.lang.Double $r3;
        double $d0;

        r0 := @this: com.opengamma.analytics.math.matrix.DoubleMatrix1D;

        r1 := @parameter0: java.lang.Double[];

        specialinvoke r0.<java.lang.Object: void <init>()>();

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object)>(r1);

        $i0 = lengthof r1;

        r0.<com.opengamma.analytics.math.matrix.DoubleMatrix1D: int _elements> = $i0;

        $i1 = r0.<com.opengamma.analytics.math.matrix.DoubleMatrix1D: int _elements>;

        $r2 = newarray (double)[$i1];

        r0.<com.opengamma.analytics.math.matrix.DoubleMatrix1D: double[] _data> = $r2;

        i3 = 0;

     label1:
        $i2 = r0.<com.opengamma.analytics.math.matrix.DoubleMatrix1D: int _elements>;

        if i3 >= $i2 goto label2;

        $r4 = r0.<com.opengamma.analytics.math.matrix.DoubleMatrix1D: double[] _data>;

        $r3 = r1[i3];

        $d0 = virtualinvoke $r3.<java.lang.Double: double doubleValue()>();

        $r4[i3] = $d0;

        i3 = i3 + 1;

        goto label1;

     label2:
        return;
    }

    public transient void <init>(double[])
    {
        com.opengamma.analytics.math.matrix.DoubleMatrix1D r0;
        double[] r1, $r2;
        int $i0, $i1;

        r0 := @this: com.opengamma.analytics.math.matrix.DoubleMatrix1D;

        r1 := @parameter0: double[];

        specialinvoke r0.<java.lang.Object: void <init>()>();

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object)>(r1);

        $i0 = lengthof r1;

        r0.<com.opengamma.analytics.math.matrix.DoubleMatrix1D: int _elements> = $i0;

        $i1 = r0.<com.opengamma.analytics.math.matrix.DoubleMatrix1D: int _elements>;

        $r2 = staticinvoke <java.util.Arrays: double[] copyOf(double[],int)>(r1, $i1);

        r0.<com.opengamma.analytics.math.matrix.DoubleMatrix1D: double[] _data> = $r2;

        return;
    }

    public void <init>(int, double)
    {
        com.opengamma.analytics.math.matrix.DoubleMatrix1D r0;
        int i0, $i1;
        double d0;
        double[] $r1, $r2;

        r0 := @this: com.opengamma.analytics.math.matrix.DoubleMatrix1D;

        i0 := @parameter0: int;

        d0 := @parameter1: double;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.opengamma.analytics.math.matrix.DoubleMatrix1D: int _elements> = i0;

        $i1 = r0.<com.opengamma.analytics.math.matrix.DoubleMatrix1D: int _elements>;

        $r1 = newarray (double)[$i1];

        r0.<com.opengamma.analytics.math.matrix.DoubleMatrix1D: double[] _data> = $r1;

        $r2 = r0.<com.opengamma.analytics.math.matrix.DoubleMatrix1D: double[] _data>;

        staticinvoke <java.util.Arrays: void fill(double[],double)>($r2, d0);

        return;
    }

    public void <init>(int)
    {
        com.opengamma.analytics.math.matrix.DoubleMatrix1D r0;
        int i0, $i1;
        double[] $r1;

        r0 := @this: com.opengamma.analytics.math.matrix.DoubleMatrix1D;

        i0 := @parameter0: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.opengamma.analytics.math.matrix.DoubleMatrix1D: int _elements> = i0;

        $i1 = r0.<com.opengamma.analytics.math.matrix.DoubleMatrix1D: int _elements>;

        $r1 = newarray (double)[$i1];

        r0.<com.opengamma.analytics.math.matrix.DoubleMatrix1D: double[] _data> = $r1;

        return;
    }

    public double[] getData()
    {
        com.opengamma.analytics.math.matrix.DoubleMatrix1D r0;
        double[] $r1;

        r0 := @this: com.opengamma.analytics.math.matrix.DoubleMatrix1D;

        $r1 = r0.<com.opengamma.analytics.math.matrix.DoubleMatrix1D: double[] _data>;

        return $r1;
    }

    public double[] toArray()
    {
        com.opengamma.analytics.math.matrix.DoubleMatrix1D r0;
        int $i0;
        double[] $r1, $r2;

        r0 := @this: com.opengamma.analytics.math.matrix.DoubleMatrix1D;

        $r1 = r0.<com.opengamma.analytics.math.matrix.DoubleMatrix1D: double[] _data>;

        $i0 = r0.<com.opengamma.analytics.math.matrix.DoubleMatrix1D: int _elements>;

        $r2 = staticinvoke <java.util.Arrays: double[] copyOf(double[],int)>($r1, $i0);

        return $r2;
    }

    public int getNumberOfElements()
    {
        com.opengamma.analytics.math.matrix.DoubleMatrix1D r0;
        int $i0;

        r0 := @this: com.opengamma.analytics.math.matrix.DoubleMatrix1D;

        $i0 = r0.<com.opengamma.analytics.math.matrix.DoubleMatrix1D: int _elements>;

        return $i0;
    }

    public transient java.lang.Double getEntry(int[])
    {
        com.opengamma.analytics.math.matrix.DoubleMatrix1D r0;
        int[] r1;
        int $i0;
        double[] $r2;
        double $d0;
        java.lang.Double $r3;

        r0 := @this: com.opengamma.analytics.math.matrix.DoubleMatrix1D;

        r1 := @parameter0: int[];

        $r2 = r0.<com.opengamma.analytics.math.matrix.DoubleMatrix1D: double[] _data>;

        $i0 = r1[0];

        $d0 = $r2[$i0];

        $r3 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        return $r3;
    }

    public int hashCode()
    {
        com.opengamma.analytics.math.matrix.DoubleMatrix1D r0;
        double[] $r1;
        int $i1, $i2, i4;

        r0 := @this: com.opengamma.analytics.math.matrix.DoubleMatrix1D;

        $i1 = 31 * 1;

        $r1 = r0.<com.opengamma.analytics.math.matrix.DoubleMatrix1D: double[] _data>;

        $i2 = staticinvoke <java.util.Arrays: int hashCode(double[])>($r1);

        i4 = $i1 + $i2;

        return i4;
    }

    public boolean equals(java.lang.Object)
    {
        com.opengamma.analytics.math.matrix.DoubleMatrix1D r0, r2;
        java.lang.Object r1;
        java.lang.Class $r3, $r4;
        double[] $r5, $r6;
        boolean $z0;

        r0 := @this: com.opengamma.analytics.math.matrix.DoubleMatrix1D;

        r1 := @parameter0: java.lang.Object;

        if r0 != r1 goto label1;

        return 1;

     label1:
        if r1 != null goto label2;

        return 0;

     label2:
        $r3 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r4 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        if $r3 == $r4 goto label3;

        return 0;

     label3:
        r2 = (com.opengamma.analytics.math.matrix.DoubleMatrix1D) r1;

        $r6 = r0.<com.opengamma.analytics.math.matrix.DoubleMatrix1D: double[] _data>;

        $r5 = r2.<com.opengamma.analytics.math.matrix.DoubleMatrix1D: double[] _data>;

        $z0 = staticinvoke <java.util.Arrays: boolean equals(double[],double[])>($r6, $r5);

        if $z0 != 0 goto label4;

        return 0;

     label4:
        return 1;
    }

    public java.lang.String toString()
    {
        com.opengamma.analytics.math.matrix.DoubleMatrix1D r0;
        int i0, $i1, $i2, i3;
        java.lang.StringBuffer $r2;
        double[] $r3, $r6, $r13;
        java.lang.StringBuilder $r5, $r7, $r8, $r12, $r14, $r15;
        double $d0, $d1;
        java.lang.String $r9, $r11, $r16;

        r0 := @this: com.opengamma.analytics.math.matrix.DoubleMatrix1D;

        $r2 = new java.lang.StringBuffer;

        specialinvoke $r2.<java.lang.StringBuffer: void <init>()>();

        $r3 = r0.<com.opengamma.analytics.math.matrix.DoubleMatrix1D: double[] _data>;

        i0 = lengthof $r3;

        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" (");

        i3 = 0;

     label1:
        $i1 = i0 - 1;

        if i3 >= $i1 goto label2;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r13 = r0.<com.opengamma.analytics.math.matrix.DoubleMatrix1D: double[] _data>;

        $d1 = $r13[i3];

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d1);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r16);

        i3 = i3 + 1;

        goto label1;

     label2:
        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = r0.<com.opengamma.analytics.math.matrix.DoubleMatrix1D: double[] _data>;

        $i2 = i0 - 1;

        $d0 = $r6[$i2];

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d0);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r11;
    }

    public volatile java.lang.Object getEntry(int[])
    {
        com.opengamma.analytics.math.matrix.DoubleMatrix1D r0;
        int[] r1;
        java.lang.Double $r2;

        r0 := @this: com.opengamma.analytics.math.matrix.DoubleMatrix1D;

        r1 := @parameter0: int[];

        $r2 = virtualinvoke r0.<com.opengamma.analytics.math.matrix.DoubleMatrix1D: java.lang.Double getEntry(int[])>(r1);

        return $r2;
    }

    static void <clinit>()
    {
        com.opengamma.analytics.math.matrix.DoubleMatrix1D $r0;
        double[] $r1;

        $r0 = new com.opengamma.analytics.math.matrix.DoubleMatrix1D;

        $r1 = newarray (double)[0];

        specialinvoke $r0.<com.opengamma.analytics.math.matrix.DoubleMatrix1D: void <init>(double[])>($r1);

        <com.opengamma.analytics.math.matrix.DoubleMatrix1D: com.opengamma.analytics.math.matrix.DoubleMatrix1D EMPTY_MATRIX> = $r0;

        return;
    }
}
