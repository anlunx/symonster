public class com.opengamma.analytics.financial.provider.description.interestrate.IssuerProvider extends java.lang.Object implements com.opengamma.analytics.financial.provider.description.interestrate.IssuerProviderInterface
{
    private static final org.slf4j.Logger s_logger;
    private final com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface _multicurveProvider;
    private final java.util.Map _issuerCurves;
    private java.util.Set _multicurvesNames;
    private final java.util.Set _allNames;
    private final java.util.Map _issuerCurvesNames;

    public void <init>()
    {
        com.opengamma.analytics.financial.provider.description.interestrate.IssuerProvider r0;
        java.util.TreeSet $r1;
        java.util.LinkedHashMap $r2, $r4;
        com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount $r3;

        r0 := @this: com.opengamma.analytics.financial.provider.description.interestrate.IssuerProvider;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.TreeSet;

        specialinvoke $r1.<java.util.TreeSet: void <init>()>();

        r0.<com.opengamma.analytics.financial.provider.description.interestrate.IssuerProvider: java.util.Set _allNames> = $r1;

        $r2 = new java.util.LinkedHashMap;

        specialinvoke $r2.<java.util.LinkedHashMap: void <init>()>();

        r0.<com.opengamma.analytics.financial.provider.description.interestrate.IssuerProvider: java.util.Map _issuerCurvesNames> = $r2;

        $r3 = new com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount;

        specialinvoke $r3.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount: void <init>()>();

        r0.<com.opengamma.analytics.financial.provider.description.interestrate.IssuerProvider: com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface _multicurveProvider> = $r3;

        $r4 = new java.util.LinkedHashMap;

        specialinvoke $r4.<java.util.LinkedHashMap: void <init>()>();

        r0.<com.opengamma.analytics.financial.provider.description.interestrate.IssuerProvider: java.util.Map _issuerCurves> = $r4;

        virtualinvoke r0.<com.opengamma.analytics.financial.provider.description.interestrate.IssuerProvider: void setAllCurves()>();

        return;
    }

    public void <init>(com.opengamma.analytics.financial.forex.method.FXMatrix)
    {
        com.opengamma.analytics.financial.provider.description.interestrate.IssuerProvider r0;
        com.opengamma.analytics.financial.forex.method.FXMatrix r1;
        java.util.TreeSet $r2;
        java.util.LinkedHashMap $r3, $r5;
        com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount $r4;

        r0 := @this: com.opengamma.analytics.financial.provider.description.interestrate.IssuerProvider;

        r1 := @parameter0: com.opengamma.analytics.financial.forex.method.FXMatrix;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new java.util.TreeSet;

        specialinvoke $r2.<java.util.TreeSet: void <init>()>();

        r0.<com.opengamma.analytics.financial.provider.description.interestrate.IssuerProvider: java.util.Set _allNames> = $r2;

        $r3 = new java.util.LinkedHashMap;

        specialinvoke $r3.<java.util.LinkedHashMap: void <init>()>();

        r0.<com.opengamma.analytics.financial.provider.description.interestrate.IssuerProvider: java.util.Map _issuerCurvesNames> = $r3;

        $r4 = new com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount;

        specialinvoke $r4.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount: void <init>(com.opengamma.analytics.financial.forex.method.FXMatrix)>(r1);

        r0.<com.opengamma.analytics.financial.provider.description.interestrate.IssuerProvider: com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface _multicurveProvider> = $r4;

        $r5 = new java.util.LinkedHashMap;

        specialinvoke $r5.<java.util.LinkedHashMap: void <init>()>();

        r0.<com.opengamma.analytics.financial.provider.description.interestrate.IssuerProvider: java.util.Map _issuerCurves> = $r5;

        virtualinvoke r0.<com.opengamma.analytics.financial.provider.description.interestrate.IssuerProvider: void setAllCurves()>();

        return;
    }

    public void <init>(java.util.Map, java.util.Map, java.util.Map, com.opengamma.analytics.financial.forex.method.FXMatrix)
    {
        com.opengamma.analytics.financial.provider.description.interestrate.IssuerProvider r0;
        java.util.Map r1, r2, r3;
        com.opengamma.analytics.financial.forex.method.FXMatrix r4;
        java.util.TreeSet $r5;
        java.util.LinkedHashMap $r6, $r8;
        com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount $r7;

        r0 := @this: com.opengamma.analytics.financial.provider.description.interestrate.IssuerProvider;

        r1 := @parameter0: java.util.Map;

        r2 := @parameter1: java.util.Map;

        r3 := @parameter2: java.util.Map;

        r4 := @parameter3: com.opengamma.analytics.financial.forex.method.FXMatrix;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r5 = new java.util.TreeSet;

        specialinvoke $r5.<java.util.TreeSet: void <init>()>();

        r0.<com.opengamma.analytics.financial.provider.description.interestrate.IssuerProvider: java.util.Set _allNames> = $r5;

        $r6 = new java.util.LinkedHashMap;

        specialinvoke $r6.<java.util.LinkedHashMap: void <init>()>();

        r0.<com.opengamma.analytics.financial.provider.description.interestrate.IssuerProvider: java.util.Map _issuerCurvesNames> = $r6;

        $r7 = new com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount;

        specialinvoke $r7.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount: void <init>(java.util.Map,java.util.Map,java.util.Map,com.opengamma.analytics.financial.forex.method.FXMatrix)>(r1, r2, r3, r4);

        r0.<com.opengamma.analytics.financial.provider.description.interestrate.IssuerProvider: com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface _multicurveProvider> = $r7;

        $r8 = new java.util.LinkedHashMap;

        specialinvoke $r8.<java.util.LinkedHashMap: void <init>()>();

        r0.<com.opengamma.analytics.financial.provider.description.interestrate.IssuerProvider: java.util.Map _issuerCurves> = $r8;

        virtualinvoke r0.<com.opengamma.analytics.financial.provider.description.interestrate.IssuerProvider: void setAllCurves()>();

        return;
    }

    public void <init>(java.util.Map, java.util.Map, java.util.Map, java.util.Map, com.opengamma.analytics.financial.forex.method.FXMatrix)
    {
        com.opengamma.analytics.financial.provider.description.interestrate.IssuerProvider r0;
        java.util.Map r1, r2, r3, r4;
        com.opengamma.analytics.financial.forex.method.FXMatrix r5;
        java.util.TreeSet $r6;
        java.util.LinkedHashMap $r7;
        com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount $r9;

        r0 := @this: com.opengamma.analytics.financial.provider.description.interestrate.IssuerProvider;

        r1 := @parameter0: java.util.Map;

        r2 := @parameter1: java.util.Map;

        r3 := @parameter2: java.util.Map;

        r4 := @parameter3: java.util.Map;

        r5 := @parameter4: com.opengamma.analytics.financial.forex.method.FXMatrix;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r6 = new java.util.TreeSet;

        specialinvoke $r6.<java.util.TreeSet: void <init>()>();

        r0.<com.opengamma.analytics.financial.provider.description.interestrate.IssuerProvider: java.util.Set _allNames> = $r6;

        $r7 = new java.util.LinkedHashMap;

        specialinvoke $r7.<java.util.LinkedHashMap: void <init>()>();

        r0.<com.opengamma.analytics.financial.provider.description.interestrate.IssuerProvider: java.util.Map _issuerCurvesNames> = $r7;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r4, "issuer curves");

        $r9 = new com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount;

        specialinvoke $r9.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount: void <init>(java.util.Map,java.util.Map,java.util.Map,com.opengamma.analytics.financial.forex.method.FXMatrix)>(r1, r2, r3, r5);

        r0.<com.opengamma.analytics.financial.provider.description.interestrate.IssuerProvider: com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface _multicurveProvider> = $r9;

        r0.<com.opengamma.analytics.financial.provider.description.interestrate.IssuerProvider: java.util.Map _issuerCurves> = r4;

        virtualinvoke r0.<com.opengamma.analytics.financial.provider.description.interestrate.IssuerProvider: void setAllCurves()>();

        return;
    }

    public void <init>(com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface, java.util.Map)
    {
        com.opengamma.analytics.financial.provider.description.interestrate.IssuerProvider r0;
        com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface r1;
        java.util.Map r2;
        java.util.TreeSet $r3;
        java.util.LinkedHashMap $r4;

        r0 := @this: com.opengamma.analytics.financial.provider.description.interestrate.IssuerProvider;

        r1 := @parameter0: com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface;

        r2 := @parameter1: java.util.Map;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r3 = new java.util.TreeSet;

        specialinvoke $r3.<java.util.TreeSet: void <init>()>();

        r0.<com.opengamma.analytics.financial.provider.description.interestrate.IssuerProvider: java.util.Set _allNames> = $r3;

        $r4 = new java.util.LinkedHashMap;

        specialinvoke $r4.<java.util.LinkedHashMap: void <init>()>();

        r0.<com.opengamma.analytics.financial.provider.description.interestrate.IssuerProvider: java.util.Map _issuerCurvesNames> = $r4;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "multicurve");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, "issuer curves");

        r0.<com.opengamma.analytics.financial.provider.description.interestrate.IssuerProvider: com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface _multicurveProvider> = r1;

        r0.<com.opengamma.analytics.financial.provider.description.interestrate.IssuerProvider: java.util.Map _issuerCurves> = r2;

        virtualinvoke r0.<com.opengamma.analytics.financial.provider.description.interestrate.IssuerProvider: void setAllCurves()>();

        return;
    }

    public void <init>(com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount)
    {
        com.opengamma.analytics.financial.provider.description.interestrate.IssuerProvider r0;
        com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount r1;
        java.util.TreeSet $r2;
        java.util.LinkedHashMap $r3, $r5;

        r0 := @this: com.opengamma.analytics.financial.provider.description.interestrate.IssuerProvider;

        r1 := @parameter0: com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new java.util.TreeSet;

        specialinvoke $r2.<java.util.TreeSet: void <init>()>();

        r0.<com.opengamma.analytics.financial.provider.description.interestrate.IssuerProvider: java.util.Set _allNames> = $r2;

        $r3 = new java.util.LinkedHashMap;

        specialinvoke $r3.<java.util.LinkedHashMap: void <init>()>();

        r0.<com.opengamma.analytics.financial.provider.description.interestrate.IssuerProvider: java.util.Map _issuerCurvesNames> = $r3;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "multicurve");

        r0.<com.opengamma.analytics.financial.provider.description.interestrate.IssuerProvider: com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface _multicurveProvider> = r1;

        $r5 = new java.util.LinkedHashMap;

        specialinvoke $r5.<java.util.LinkedHashMap: void <init>()>();

        r0.<com.opengamma.analytics.financial.provider.description.interestrate.IssuerProvider: java.util.Map _issuerCurves> = $r5;

        virtualinvoke r0.<com.opengamma.analytics.financial.provider.description.interestrate.IssuerProvider: void setAllCurves()>();

        return;
    }

    public com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface getMulticurveProvider()
    {
        com.opengamma.analytics.financial.provider.description.interestrate.IssuerProvider r0;
        com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface $r1;

        r0 := @this: com.opengamma.analytics.financial.provider.description.interestrate.IssuerProvider;

        $r1 = r0.<com.opengamma.analytics.financial.provider.description.interestrate.IssuerProvider: com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface _multicurveProvider>;

        return $r1;
    }

    public com.opengamma.analytics.financial.provider.description.interestrate.IssuerProviderInterface getIssuerProvider()
    {
        com.opengamma.analytics.financial.provider.description.interestrate.IssuerProvider r0;

        r0 := @this: com.opengamma.analytics.financial.provider.description.interestrate.IssuerProvider;

        return r0;
    }

    public com.opengamma.analytics.financial.provider.description.interestrate.IssuerProvider copy()
    {
        com.opengamma.analytics.financial.provider.description.interestrate.IssuerProvider r0, $r4;
        java.util.LinkedHashMap $r2;
        java.util.Map $r3;
        com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface $r5, $r6;

        r0 := @this: com.opengamma.analytics.financial.provider.description.interestrate.IssuerProvider;

        $r2 = new java.util.LinkedHashMap;

        $r3 = r0.<com.opengamma.analytics.financial.provider.description.interestrate.IssuerProvider: java.util.Map _issuerCurves>;

        specialinvoke $r2.<java.util.LinkedHashMap: void <init>(java.util.Map)>($r3);

        $r4 = new com.opengamma.analytics.financial.provider.description.interestrate.IssuerProvider;

        $r5 = r0.<com.opengamma.analytics.financial.provider.description.interestrate.IssuerProvider: com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface _multicurveProvider>;

        $r6 = interfaceinvoke $r5.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface: com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface copy()>();

        specialinvoke $r4.<com.opengamma.analytics.financial.provider.description.interestrate.IssuerProvider: void <init>(com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface,java.util.Map)>($r6, $r2);

        return $r4;
    }

    protected void setAllCurves()
    {
        com.opengamma.analytics.financial.provider.description.interestrate.IssuerProvider r0;
        java.util.Iterator r1;
        java.util.Map$Entry r2;
        com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface $r3;
        java.util.Set $r4, $r5, $r6, $r8, $r11;
        java.util.Map $r7, $r15;
        boolean $z1;
        java.lang.Object $r9, $r10, $r12, $r16, $r19, $r24;
        com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve $r13, $r17;
        java.lang.String $r14, $r18, $r27;
        java.lang.StringBuilder $r23, $r25, $r26, r28;
        com.opengamma.OpenGammaRuntimeException r29;
        java.lang.Throwable r30;

        r0 := @this: com.opengamma.analytics.financial.provider.description.interestrate.IssuerProvider;

        $r3 = r0.<com.opengamma.analytics.financial.provider.description.interestrate.IssuerProvider: com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface _multicurveProvider>;

        $r4 = interfaceinvoke $r3.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface: java.util.Set getAllNames()>();

        r0.<com.opengamma.analytics.financial.provider.description.interestrate.IssuerProvider: java.util.Set _multicurvesNames> = $r4;

        $r6 = r0.<com.opengamma.analytics.financial.provider.description.interestrate.IssuerProvider: java.util.Set _allNames>;

        $r5 = r0.<com.opengamma.analytics.financial.provider.description.interestrate.IssuerProvider: java.util.Set _multicurvesNames>;

        interfaceinvoke $r6.<java.util.Set: boolean addAll(java.util.Collection)>($r5);

        $r7 = r0.<com.opengamma.analytics.financial.provider.description.interestrate.IssuerProvider: java.util.Map _issuerCurves>;

        $r8 = interfaceinvoke $r7.<java.util.Map: java.util.Set entrySet()>();

        r1 = interfaceinvoke $r8.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z1 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label3;

        $r9 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r2 = (java.util.Map$Entry) $r9;

        $r10 = interfaceinvoke r2.<java.util.Map$Entry: java.lang.Object getValue()>();

        if $r10 != null goto label2;

        r29 = new com.opengamma.OpenGammaRuntimeException;

        r28 = new java.lang.StringBuilder;

        specialinvoke r28.<java.lang.StringBuilder: void <init>()>();

        $r23 = virtualinvoke r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Curve with key ");

        $r24 = interfaceinvoke r2.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r25 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r24);

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" was null");

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r29.<com.opengamma.OpenGammaRuntimeException: void <init>(java.lang.String)>($r27);

        r30 = (java.lang.Throwable) r29;

        throw r30;

     label2:
        $r11 = r0.<com.opengamma.analytics.financial.provider.description.interestrate.IssuerProvider: java.util.Set _allNames>;

        $r12 = interfaceinvoke r2.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r13 = (com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve) $r12;

        $r14 = virtualinvoke $r13.<com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve: java.lang.String getName()>();

        interfaceinvoke $r11.<java.util.Set: boolean add(java.lang.Object)>($r14);

        $r15 = r0.<com.opengamma.analytics.financial.provider.description.interestrate.IssuerProvider: java.util.Map _issuerCurvesNames>;

        $r16 = interfaceinvoke r2.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r17 = (com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve) $r16;

        $r18 = virtualinvoke $r17.<com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve: java.lang.String getName()>();

        $r19 = interfaceinvoke r2.<java.util.Map$Entry: java.lang.Object getValue()>();

        interfaceinvoke $r15.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r18, $r19);

        goto label1;

     label3:
        return;
    }

    public double getDiscountFactor(com.opengamma.analytics.financial.legalentity.LegalEntity, java.lang.Double)
    {
        com.opengamma.analytics.financial.provider.description.interestrate.IssuerProvider r0;
        com.opengamma.analytics.financial.legalentity.LegalEntity r1;
        java.lang.Double r2;
        java.util.Map $r3, $r5, $r8;
        java.util.Set $r4, $r9;
        boolean $z0, $z1, $z2;
        org.slf4j.Logger $r6, $r17;
        int $i0;
        java.lang.Integer $r7;
        java.lang.IllegalArgumentException $r10;
        java.lang.StringBuilder $r11, $r12, $r13;
        java.lang.String $r14;
        java.lang.Object $r15, $r18, $r20, $r21, $r23, $r25, $r26, $r27, $r29, $r30, $r32, $r34, $r35;
        java.lang.Object[] $r16;
        com.opengamma.util.tuple.Pair $r19, $r22, $r28, $r31;
        com.opengamma.analytics.financial.legalentity.LegalEntityFilter $r24, $r33;
        com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve $r36;
        double $d0, $d1;
        java.util.Iterator r37, r39;
        java.util.Map$Entry r38, r40;

        r0 := @this: com.opengamma.analytics.financial.provider.description.interestrate.IssuerProvider;

        r1 := @parameter0: com.opengamma.analytics.financial.legalentity.LegalEntity;

        r2 := @parameter1: java.lang.Double;

        $r3 = r0.<com.opengamma.analytics.financial.provider.description.interestrate.IssuerProvider: java.util.Map _issuerCurves>;

        $r4 = interfaceinvoke $r3.<java.util.Map: java.util.Set entrySet()>();

        r37 = interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r37.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r26 = interfaceinvoke r37.<java.util.Iterator: java.lang.Object next()>();

        r38 = (java.util.Map$Entry) $r26;

        $r27 = interfaceinvoke r38.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r28 = (com.opengamma.util.tuple.Pair) $r27;

        $r29 = virtualinvoke $r28.<com.opengamma.util.tuple.Pair: java.lang.Object getFirst()>();

        $r30 = interfaceinvoke r38.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r31 = (com.opengamma.util.tuple.Pair) $r30;

        $r32 = virtualinvoke $r31.<com.opengamma.util.tuple.Pair: java.lang.Object getSecond()>();

        $r33 = (com.opengamma.analytics.financial.legalentity.LegalEntityFilter) $r32;

        $r34 = interfaceinvoke $r33.<com.opengamma.analytics.financial.legalentity.LegalEntityFilter: java.lang.Object getFilteredData(com.opengamma.analytics.financial.legalentity.LegalEntity)>(r1);

        $z2 = virtualinvoke $r29.<java.lang.Object: boolean equals(java.lang.Object)>($r34);

        if $z2 == 0 goto label2;

        $r35 = interfaceinvoke r38.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r36 = (com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve) $r35;

        $d0 = virtualinvoke r2.<java.lang.Double: double doubleValue()>();

        $d1 = virtualinvoke $r36.<com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve: double getDiscountFactor(double)>($d0);

        return $d1;

     label2:
        goto label1;

     label3:
        $r6 = <com.opengamma.analytics.financial.provider.description.interestrate.IssuerProvider: org.slf4j.Logger s_logger>;

        $r5 = r0.<com.opengamma.analytics.financial.provider.description.interestrate.IssuerProvider: java.util.Map _issuerCurves>;

        $i0 = interfaceinvoke $r5.<java.util.Map: int size()>();

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        interfaceinvoke $r6.<org.slf4j.Logger: void error(java.lang.String,java.lang.Object,java.lang.Object)>("Could not find issuer discounting curve for {}. There are {} curve available", r1, $r7);

        $r8 = r0.<com.opengamma.analytics.financial.provider.description.interestrate.IssuerProvider: java.util.Map _issuerCurves>;

        $r9 = interfaceinvoke $r8.<java.util.Map: java.util.Set entrySet()>();

        r39 = interfaceinvoke $r9.<java.util.Set: java.util.Iterator iterator()>();

     label4:
        $z1 = interfaceinvoke r39.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label5;

        $r15 = interfaceinvoke r39.<java.util.Iterator: java.lang.Object next()>();

        r40 = (java.util.Map$Entry) $r15;

        $r17 = <com.opengamma.analytics.financial.provider.description.interestrate.IssuerProvider: org.slf4j.Logger s_logger>;

        $r16 = newarray (java.lang.Object)[3];

        $r18 = interfaceinvoke r40.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r19 = (com.opengamma.util.tuple.Pair) $r18;

        $r20 = virtualinvoke $r19.<com.opengamma.util.tuple.Pair: java.lang.Object getFirst()>();

        $r16[0] = $r20;

        $r16[1] = r1;

        $r21 = interfaceinvoke r40.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r22 = (com.opengamma.util.tuple.Pair) $r21;

        $r23 = virtualinvoke $r22.<com.opengamma.util.tuple.Pair: java.lang.Object getSecond()>();

        $r24 = (com.opengamma.analytics.financial.legalentity.LegalEntityFilter) $r23;

        $r25 = interfaceinvoke $r24.<com.opengamma.analytics.financial.legalentity.LegalEntityFilter: java.lang.Object getFilteredData(com.opengamma.analytics.financial.legalentity.LegalEntity)>(r1);

        $r16[2] = $r25;

        interfaceinvoke $r17.<org.slf4j.Logger: void error(java.lang.String,java.lang.Object[])>("matching key = {}, filter {} matches = {}", $r16);

        goto label4;

     label5:
        $r10 = new java.lang.IllegalArgumentException;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Issuer discounting curve not found for ");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r10.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r14);

        throw $r10;
    }

    public java.lang.String getName(com.opengamma.util.tuple.Pair)
    {
        com.opengamma.analytics.financial.provider.description.interestrate.IssuerProvider r0;
        com.opengamma.util.tuple.Pair r1;
        java.util.Map $r2;
        java.lang.Object $r3;
        com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve $r4;
        java.lang.String $r5;

        r0 := @this: com.opengamma.analytics.financial.provider.description.interestrate.IssuerProvider;

        r1 := @parameter0: com.opengamma.util.tuple.Pair;

        $r2 = r0.<com.opengamma.analytics.financial.provider.description.interestrate.IssuerProvider: java.util.Map _issuerCurves>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        $r4 = (com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve) $r3;

        $r5 = virtualinvoke $r4.<com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve: java.lang.String getName()>();

        return $r5;
    }

    public java.lang.String getName(com.opengamma.analytics.financial.legalentity.LegalEntity)
    {
        com.opengamma.analytics.financial.provider.description.interestrate.IssuerProvider r0;
        com.opengamma.analytics.financial.legalentity.LegalEntity r1;
        java.util.Map $r2, $r4, $r7;
        java.util.Set $r3, $r8;
        boolean $z0, $z1, $z2;
        org.slf4j.Logger $r5, $r16;
        int $i0;
        java.lang.Integer $r6;
        java.lang.IllegalArgumentException $r9;
        java.lang.StringBuilder $r10, $r11, $r12;
        java.lang.String $r13, $r36;
        java.lang.Object $r14, $r17, $r19, $r20, $r22, $r24, $r25, $r26, $r28, $r29, $r31, $r33, $r34;
        java.lang.Object[] $r15;
        com.opengamma.util.tuple.Pair $r18, $r21, $r27, $r30;
        com.opengamma.analytics.financial.legalentity.LegalEntityFilter $r23, $r32;
        com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve $r35;
        java.util.Iterator r37, r39;
        java.util.Map$Entry r38, r40;

        r0 := @this: com.opengamma.analytics.financial.provider.description.interestrate.IssuerProvider;

        r1 := @parameter0: com.opengamma.analytics.financial.legalentity.LegalEntity;

        $r2 = r0.<com.opengamma.analytics.financial.provider.description.interestrate.IssuerProvider: java.util.Map _issuerCurves>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.util.Set entrySet()>();

        r37 = interfaceinvoke $r3.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r37.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r25 = interfaceinvoke r37.<java.util.Iterator: java.lang.Object next()>();

        r38 = (java.util.Map$Entry) $r25;

        $r26 = interfaceinvoke r38.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r27 = (com.opengamma.util.tuple.Pair) $r26;

        $r28 = virtualinvoke $r27.<com.opengamma.util.tuple.Pair: java.lang.Object getFirst()>();

        $r29 = interfaceinvoke r38.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r30 = (com.opengamma.util.tuple.Pair) $r29;

        $r31 = virtualinvoke $r30.<com.opengamma.util.tuple.Pair: java.lang.Object getSecond()>();

        $r32 = (com.opengamma.analytics.financial.legalentity.LegalEntityFilter) $r31;

        $r33 = interfaceinvoke $r32.<com.opengamma.analytics.financial.legalentity.LegalEntityFilter: java.lang.Object getFilteredData(com.opengamma.analytics.financial.legalentity.LegalEntity)>(r1);

        $z2 = virtualinvoke $r28.<java.lang.Object: boolean equals(java.lang.Object)>($r33);

        if $z2 == 0 goto label2;

        $r34 = interfaceinvoke r38.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r35 = (com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve) $r34;

        $r36 = virtualinvoke $r35.<com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve: java.lang.String getName()>();

        return $r36;

     label2:
        goto label1;

     label3:
        $r5 = <com.opengamma.analytics.financial.provider.description.interestrate.IssuerProvider: org.slf4j.Logger s_logger>;

        $r4 = r0.<com.opengamma.analytics.financial.provider.description.interestrate.IssuerProvider: java.util.Map _issuerCurves>;

        $i0 = interfaceinvoke $r4.<java.util.Map: int size()>();

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        interfaceinvoke $r5.<org.slf4j.Logger: void error(java.lang.String,java.lang.Object,java.lang.Object)>("Could not find issuer discounting curve for {}. There are {} curve available", r1, $r6);

        $r7 = r0.<com.opengamma.analytics.financial.provider.description.interestrate.IssuerProvider: java.util.Map _issuerCurves>;

        $r8 = interfaceinvoke $r7.<java.util.Map: java.util.Set entrySet()>();

        r39 = interfaceinvoke $r8.<java.util.Set: java.util.Iterator iterator()>();

     label4:
        $z1 = interfaceinvoke r39.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label5;

        $r14 = interfaceinvoke r39.<java.util.Iterator: java.lang.Object next()>();

        r40 = (java.util.Map$Entry) $r14;

        $r16 = <com.opengamma.analytics.financial.provider.description.interestrate.IssuerProvider: org.slf4j.Logger s_logger>;

        $r15 = newarray (java.lang.Object)[3];

        $r17 = interfaceinvoke r40.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r18 = (com.opengamma.util.tuple.Pair) $r17;

        $r19 = virtualinvoke $r18.<com.opengamma.util.tuple.Pair: java.lang.Object getFirst()>();

        $r15[0] = $r19;

        $r15[1] = r1;

        $r20 = interfaceinvoke r40.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r21 = (com.opengamma.util.tuple.Pair) $r20;

        $r22 = virtualinvoke $r21.<com.opengamma.util.tuple.Pair: java.lang.Object getSecond()>();

        $r23 = (com.opengamma.analytics.financial.legalentity.LegalEntityFilter) $r22;

        $r24 = interfaceinvoke $r23.<com.opengamma.analytics.financial.legalentity.LegalEntityFilter: java.lang.Object getFilteredData(com.opengamma.analytics.financial.legalentity.LegalEntity)>(r1);

        $r15[2] = $r24;

        interfaceinvoke $r16.<org.slf4j.Logger: void error(java.lang.String,java.lang.Object[])>("matching key = {}, filter {} matches = {}", $r15);

        goto label4;

     label5:
        $r9 = new java.lang.IllegalArgumentException;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Issuer discounting curve not found: ");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r9.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r13);

        throw $r9;
    }

    public java.util.Set getAllNames()
    {
        com.opengamma.analytics.financial.provider.description.interestrate.IssuerProvider r0;
        java.util.Set $r1;

        r0 := @this: com.opengamma.analytics.financial.provider.description.interestrate.IssuerProvider;

        $r1 = virtualinvoke r0.<com.opengamma.analytics.financial.provider.description.interestrate.IssuerProvider: java.util.Set getAllCurveNames()>();

        return $r1;
    }

    public java.util.Set getAllCurveNames()
    {
        com.opengamma.analytics.financial.provider.description.interestrate.IssuerProvider r0;
        java.util.TreeSet $r1;
        java.util.Set $r2;
        java.util.SortedSet $r3;

        r0 := @this: com.opengamma.analytics.financial.provider.description.interestrate.IssuerProvider;

        $r1 = new java.util.TreeSet;

        $r2 = r0.<com.opengamma.analytics.financial.provider.description.interestrate.IssuerProvider: java.util.Set _allNames>;

        specialinvoke $r1.<java.util.TreeSet: void <init>(java.util.Collection)>($r2);

        $r3 = staticinvoke <java.util.Collections: java.util.SortedSet unmodifiableSortedSet(java.util.SortedSet)>($r1);

        return $r3;
    }

    public double[] parameterSensitivity(java.lang.String, java.util.List)
    {
        com.opengamma.analytics.financial.provider.description.interestrate.IssuerProvider r0;
        java.lang.String r1, $r18;
        java.util.List r2;
        com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve r3;
        int i0, i1;
        double[] r4, r7, $r20;
        java.util.Iterator r5;
        com.opengamma.util.tuple.DoublesPair r6;
        java.util.Set $r8;
        boolean $z0, $z1, $z2;
        java.util.Map $r9;
        java.lang.Object $r10, $r11;
        java.lang.Double $r12, $r13;
        double $d0, $d1, $d2, $d3, $d4, $d5;
        java.lang.IllegalArgumentException $r14;
        java.lang.StringBuilder $r15, $r16, $r17;
        com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface $r19;

        r0 := @this: com.opengamma.analytics.financial.provider.description.interestrate.IssuerProvider;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.util.List;

        $r8 = r0.<com.opengamma.analytics.financial.provider.description.interestrate.IssuerProvider: java.util.Set _multicurvesNames>;

        $z0 = interfaceinvoke $r8.<java.util.Set: boolean contains(java.lang.Object)>(r1);

        if $z0 == 0 goto label1;

        $r19 = r0.<com.opengamma.analytics.financial.provider.description.interestrate.IssuerProvider: com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface _multicurveProvider>;

        $r20 = interfaceinvoke $r19.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface: double[] parameterSensitivity(java.lang.String,java.util.List)>(r1, r2);

        return $r20;

     label1:
        $r9 = r0.<com.opengamma.analytics.financial.provider.description.interestrate.IssuerProvider: java.util.Map _issuerCurvesNames>;

        $r10 = interfaceinvoke $r9.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        r3 = (com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve) $r10;

        if r3 != null goto label2;

        $r14 = new java.lang.IllegalArgumentException;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Could not get curve called ");

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r14.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r18);

        throw $r14;

     label2:
        i0 = virtualinvoke r3.<com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve: int getNumberOfParameters()>();

        r4 = newarray (double)[i0];

        if r2 == null goto label6;

        $z1 = interfaceinvoke r2.<java.util.List: boolean isEmpty()>();

        if $z1 != 0 goto label6;

        r5 = interfaceinvoke r2.<java.util.List: java.util.Iterator iterator()>();

     label3:
        $z2 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label6;

        $r11 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>();

        r6 = (com.opengamma.util.tuple.DoublesPair) $r11;

        $r12 = virtualinvoke r6.<com.opengamma.util.tuple.DoublesPair: java.lang.Double getFirst()>();

        $d0 = virtualinvoke $r12.<java.lang.Double: double doubleValue()>();

        r7 = virtualinvoke r3.<com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve: double[] getInterestRateParameterSensitivity(double)>($d0);

        i1 = 0;

     label4:
        if i1 >= i0 goto label5;

        $d1 = r4[i1];

        $r13 = virtualinvoke r6.<com.opengamma.util.tuple.DoublesPair: java.lang.Double getSecond()>();

        $d2 = virtualinvoke $r13.<java.lang.Double: double doubleValue()>();

        $d3 = r7[i1];

        $d4 = $d2 * $d3;

        $d5 = $d1 + $d4;

        r4[i1] = $d5;

        i1 = i1 + 1;

        goto label4;

     label5:
        goto label3;

     label6:
        return r4;
    }

    public double[] parameterForwardSensitivity(java.lang.String, java.util.List)
    {
        com.opengamma.analytics.financial.provider.description.interestrate.IssuerProvider r0;
        java.lang.String r1, $r17;
        java.util.List r2;
        com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve r3;
        int i0, $i1, i2;
        double[] r4, r7, r8, $r19;
        java.util.Iterator r5;
        com.opengamma.analytics.financial.provider.sensitivity.multicurve.ForwardSensitivity r6;
        double d0, d1, d2, d3, d4, d5, d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16;
        java.util.Set $r9;
        boolean $z0, $z1;
        java.util.Map $r10;
        java.lang.Object $r11, $r12;
        java.lang.IllegalArgumentException $r13;
        java.lang.StringBuilder $r14, $r15, $r16;
        com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface $r18;

        r0 := @this: com.opengamma.analytics.financial.provider.description.interestrate.IssuerProvider;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.util.List;

        $r9 = r0.<com.opengamma.analytics.financial.provider.description.interestrate.IssuerProvider: java.util.Set _multicurvesNames>;

        $z0 = interfaceinvoke $r9.<java.util.Set: boolean contains(java.lang.Object)>(r1);

        if $z0 == 0 goto label1;

        $r18 = r0.<com.opengamma.analytics.financial.provider.description.interestrate.IssuerProvider: com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface _multicurveProvider>;

        $r19 = interfaceinvoke $r18.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface: double[] parameterForwardSensitivity(java.lang.String,java.util.List)>(r1, r2);

        return $r19;

     label1:
        $r10 = r0.<com.opengamma.analytics.financial.provider.description.interestrate.IssuerProvider: java.util.Map _issuerCurvesNames>;

        $r11 = interfaceinvoke $r10.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        r3 = (com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve) $r11;

        if r3 != null goto label2;

        $r13 = new java.lang.IllegalArgumentException;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Could not get curve called ");

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r13.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r17);

        throw $r13;

     label2:
        i0 = virtualinvoke r3.<com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve: int getNumberOfParameters()>();

        r4 = newarray (double)[i0];

        if r2 == null goto label6;

        $i1 = interfaceinvoke r2.<java.util.List: int size()>();

        if $i1 <= 0 goto label6;

        r5 = interfaceinvoke r2.<java.util.List: java.util.Iterator iterator()>();

     label3:
        $z1 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label6;

        $r12 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>();

        r6 = (com.opengamma.analytics.financial.provider.sensitivity.multicurve.ForwardSensitivity) $r12;

        d0 = virtualinvoke r6.<com.opengamma.analytics.financial.provider.sensitivity.multicurve.ForwardSensitivity: double getStartTime()>();

        d1 = virtualinvoke r6.<com.opengamma.analytics.financial.provider.sensitivity.multicurve.ForwardSensitivity: double getEndTime()>();

        d2 = virtualinvoke r6.<com.opengamma.analytics.financial.provider.sensitivity.multicurve.ForwardSensitivity: double getValue()>();

        d3 = virtualinvoke r3.<com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve: double getDiscountFactor(double)>(d0);

        d4 = virtualinvoke r3.<com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve: double getDiscountFactor(double)>(d1);

        d5 = virtualinvoke r6.<com.opengamma.analytics.financial.provider.sensitivity.multicurve.ForwardSensitivity: double derivativeToYieldStart(double,double)>(d3, d4);

        d6 = virtualinvoke r6.<com.opengamma.analytics.financial.provider.sensitivity.multicurve.ForwardSensitivity: double derivativeToYieldEnd(double,double)>(d3, d4);

        r7 = virtualinvoke r3.<com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve: double[] getInterestRateParameterSensitivity(double)>(d0);

        r8 = virtualinvoke r3.<com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve: double[] getInterestRateParameterSensitivity(double)>(d1);

        i2 = 0;

     label4:
        if i2 >= i0 goto label5;

        $d10 = r4[i2];

        $d7 = r7[i2];

        $d8 = d5 * $d7;

        $d9 = $d8 * d2;

        $d11 = $d10 + $d9;

        r4[i2] = $d11;

        $d15 = r4[i2];

        $d12 = r8[i2];

        $d13 = d6 * $d12;

        $d14 = $d13 * d2;

        $d16 = $d15 + $d14;

        r4[i2] = $d16;

        i2 = i2 + 1;

        goto label4;

     label5:
        goto label3;

     label6:
        return r4;
    }

    public java.lang.Integer getNumberOfParameters(java.lang.String)
    {
        com.opengamma.analytics.financial.provider.description.interestrate.IssuerProvider r0;
        java.lang.String r1;
        java.util.Set $r2;
        boolean $z0;
        java.util.Map $r3;
        java.lang.Object $r4;
        com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve $r5;
        int $i0;
        java.lang.Integer $r6, $r8;
        com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface $r7;

        r0 := @this: com.opengamma.analytics.financial.provider.description.interestrate.IssuerProvider;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.opengamma.analytics.financial.provider.description.interestrate.IssuerProvider: java.util.Set _multicurvesNames>;

        $z0 = interfaceinvoke $r2.<java.util.Set: boolean contains(java.lang.Object)>(r1);

        if $z0 == 0 goto label1;

        $r7 = r0.<com.opengamma.analytics.financial.provider.description.interestrate.IssuerProvider: com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface _multicurveProvider>;

        $r8 = interfaceinvoke $r7.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface: java.lang.Integer getNumberOfParameters(java.lang.String)>(r1);

        return $r8;

     label1:
        $r3 = r0.<com.opengamma.analytics.financial.provider.description.interestrate.IssuerProvider: java.util.Map _issuerCurvesNames>;

        $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        $r5 = (com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve) $r4;

        $i0 = virtualinvoke $r5.<com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve: int getNumberOfParameters()>();

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        return $r6;
    }

    public java.util.List getUnderlyingCurvesNames(java.lang.String)
    {
        com.opengamma.analytics.financial.provider.description.interestrate.IssuerProvider r0;
        java.lang.String r1;
        java.util.Set $r2;
        boolean $z0;
        java.util.Map $r3;
        java.lang.Object $r4;
        com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve $r5;
        java.util.List $r6, $r8;
        com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface $r7;

        r0 := @this: com.opengamma.analytics.financial.provider.description.interestrate.IssuerProvider;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.opengamma.analytics.financial.provider.description.interestrate.IssuerProvider: java.util.Set _multicurvesNames>;

        $z0 = interfaceinvoke $r2.<java.util.Set: boolean contains(java.lang.Object)>(r1);

        if $z0 == 0 goto label1;

        $r7 = r0.<com.opengamma.analytics.financial.provider.description.interestrate.IssuerProvider: com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface _multicurveProvider>;

        $r8 = interfaceinvoke $r7.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface: java.util.List getUnderlyingCurvesNames(java.lang.String)>(r1);

        return $r8;

     label1:
        $r3 = r0.<com.opengamma.analytics.financial.provider.description.interestrate.IssuerProvider: java.util.Map _issuerCurvesNames>;

        $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        $r5 = (com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve) $r4;

        $r6 = virtualinvoke $r5.<com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve: java.util.List getUnderlyingCurvesNames()>();

        return $r6;
    }

    public java.util.Set getIssuers()
    {
        com.opengamma.analytics.financial.provider.description.interestrate.IssuerProvider r0;
        java.util.Map $r1;
        java.util.Set $r2;

        r0 := @this: com.opengamma.analytics.financial.provider.description.interestrate.IssuerProvider;

        $r1 = r0.<com.opengamma.analytics.financial.provider.description.interestrate.IssuerProvider: java.util.Map _issuerCurves>;

        $r2 = interfaceinvoke $r1.<java.util.Map: java.util.Set keySet()>();

        return $r2;
    }

    public java.util.Map getIssuerCurves()
    {
        com.opengamma.analytics.financial.provider.description.interestrate.IssuerProvider r0;
        java.util.Map $r1;

        r0 := @this: com.opengamma.analytics.financial.provider.description.interestrate.IssuerProvider;

        $r1 = r0.<com.opengamma.analytics.financial.provider.description.interestrate.IssuerProvider: java.util.Map _issuerCurves>;

        return $r1;
    }

    public com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve getIssuerCurve(com.opengamma.util.tuple.Pair)
    {
        com.opengamma.analytics.financial.provider.description.interestrate.IssuerProvider r0;
        com.opengamma.util.tuple.Pair r1;
        java.util.Map $r2;
        java.lang.Object $r3;
        com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve $r4;

        r0 := @this: com.opengamma.analytics.financial.provider.description.interestrate.IssuerProvider;

        r1 := @parameter0: com.opengamma.util.tuple.Pair;

        $r2 = r0.<com.opengamma.analytics.financial.provider.description.interestrate.IssuerProvider: java.util.Map _issuerCurves>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        $r4 = (com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve) $r3;

        return $r4;
    }

    public com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve getIssuerCurve(java.lang.String)
    {
        com.opengamma.analytics.financial.provider.description.interestrate.IssuerProvider r0;
        java.lang.String r1;
        java.util.Map $r2;
        java.lang.Object $r3;
        com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve $r4;

        r0 := @this: com.opengamma.analytics.financial.provider.description.interestrate.IssuerProvider;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.opengamma.analytics.financial.provider.description.interestrate.IssuerProvider: java.util.Map _issuerCurvesNames>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        $r4 = (com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve) $r3;

        return $r4;
    }

    public void setCurve(com.opengamma.util.tuple.Pair, com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve)
    {
        com.opengamma.analytics.financial.provider.description.interestrate.IssuerProvider r0;
        com.opengamma.util.tuple.Pair r1;
        com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve r2;
        java.util.Map $r5, $r6;
        boolean $z0;
        java.lang.IllegalArgumentException $r8;
        java.lang.StringBuilder $r9, $r10, $r12;
        java.lang.String $r11, $r13;

        r0 := @this: com.opengamma.analytics.financial.provider.description.interestrate.IssuerProvider;

        r1 := @parameter0: com.opengamma.util.tuple.Pair;

        r2 := @parameter1: com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "Issuer/currency");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, "curve");

        $r5 = r0.<com.opengamma.analytics.financial.provider.description.interestrate.IssuerProvider: java.util.Map _issuerCurves>;

        $z0 = interfaceinvoke $r5.<java.util.Map: boolean containsKey(java.lang.Object)>(r1);

        if $z0 == 0 goto label1;

        $r8 = new java.lang.IllegalArgumentException;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Currency discounting curve already set: ");

        $r11 = virtualinvoke r1.<com.opengamma.util.tuple.Pair: java.lang.String toString()>();

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r13);

        throw $r8;

     label1:
        $r6 = r0.<com.opengamma.analytics.financial.provider.description.interestrate.IssuerProvider: java.util.Map _issuerCurves>;

        interfaceinvoke $r6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2);

        virtualinvoke r0.<com.opengamma.analytics.financial.provider.description.interestrate.IssuerProvider: void setAllCurves()>();

        return;
    }

    public com.opengamma.analytics.financial.provider.description.interestrate.IssuerProvider withIssuerCurve(com.opengamma.util.tuple.Pair, com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve)
    {
        com.opengamma.analytics.financial.provider.description.interestrate.IssuerProvider r0, $r7;
        com.opengamma.util.tuple.Pair r1;
        com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve r2;
        java.util.LinkedHashMap $r4;
        java.util.Map $r5;
        com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface $r8;

        r0 := @this: com.opengamma.analytics.financial.provider.description.interestrate.IssuerProvider;

        r1 := @parameter0: com.opengamma.util.tuple.Pair;

        r2 := @parameter1: com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve;

        $r4 = new java.util.LinkedHashMap;

        $r5 = r0.<com.opengamma.analytics.financial.provider.description.interestrate.IssuerProvider: java.util.Map _issuerCurves>;

        specialinvoke $r4.<java.util.LinkedHashMap: void <init>(java.util.Map)>($r5);

        interfaceinvoke $r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2);

        $r7 = new com.opengamma.analytics.financial.provider.description.interestrate.IssuerProvider;

        $r8 = r0.<com.opengamma.analytics.financial.provider.description.interestrate.IssuerProvider: com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface _multicurveProvider>;

        specialinvoke $r7.<com.opengamma.analytics.financial.provider.description.interestrate.IssuerProvider: void <init>(com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface,java.util.Map)>($r8, $r4);

        return $r7;
    }

    public int hashCode()
    {
        com.opengamma.analytics.financial.provider.description.interestrate.IssuerProvider r0;
        java.util.Map $r1;
        int $i1, $i2, $i3, $i4, i6, i7;
        com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface $r2;

        r0 := @this: com.opengamma.analytics.financial.provider.description.interestrate.IssuerProvider;

        $i1 = 31 * 1;

        $r1 = r0.<com.opengamma.analytics.financial.provider.description.interestrate.IssuerProvider: java.util.Map _issuerCurves>;

        $i2 = interfaceinvoke $r1.<java.util.Map: int hashCode()>();

        i6 = $i1 + $i2;

        $i3 = 31 * i6;

        $r2 = r0.<com.opengamma.analytics.financial.provider.description.interestrate.IssuerProvider: com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface _multicurveProvider>;

        $i4 = virtualinvoke $r2.<java.lang.Object: int hashCode()>();

        i7 = $i3 + $i4;

        return i7;
    }

    public boolean equals(java.lang.Object)
    {
        com.opengamma.analytics.financial.provider.description.interestrate.IssuerProvider r0, r2;
        java.lang.Object r1;
        boolean $z0, $z1, $z2;
        java.util.Map $r3, $r4;
        com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface $r5, $r6;

        r0 := @this: com.opengamma.analytics.financial.provider.description.interestrate.IssuerProvider;

        r1 := @parameter0: java.lang.Object;

        if r0 != r1 goto label1;

        return 1;

     label1:
        $z0 = r1 instanceof com.opengamma.analytics.financial.provider.description.interestrate.IssuerProvider;

        if $z0 != 0 goto label2;

        return 0;

     label2:
        r2 = (com.opengamma.analytics.financial.provider.description.interestrate.IssuerProvider) r1;

        $r4 = r0.<com.opengamma.analytics.financial.provider.description.interestrate.IssuerProvider: java.util.Map _issuerCurves>;

        $r3 = r2.<com.opengamma.analytics.financial.provider.description.interestrate.IssuerProvider: java.util.Map _issuerCurves>;

        $z1 = staticinvoke <org.apache.commons.lang.ObjectUtils: boolean equals(java.lang.Object,java.lang.Object)>($r4, $r3);

        if $z1 != 0 goto label3;

        return 0;

     label3:
        $r6 = r0.<com.opengamma.analytics.financial.provider.description.interestrate.IssuerProvider: com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface _multicurveProvider>;

        $r5 = r2.<com.opengamma.analytics.financial.provider.description.interestrate.IssuerProvider: com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface _multicurveProvider>;

        $z2 = staticinvoke <org.apache.commons.lang.ObjectUtils: boolean equals(java.lang.Object,java.lang.Object)>($r6, $r5);

        if $z2 != 0 goto label4;

        return 0;

     label4:
        return 1;
    }

    public volatile com.opengamma.analytics.financial.provider.description.interestrate.IssuerProviderInterface copy()
    {
        com.opengamma.analytics.financial.provider.description.interestrate.IssuerProvider r0, $r1;

        r0 := @this: com.opengamma.analytics.financial.provider.description.interestrate.IssuerProvider;

        $r1 = virtualinvoke r0.<com.opengamma.analytics.financial.provider.description.interestrate.IssuerProvider: com.opengamma.analytics.financial.provider.description.interestrate.IssuerProvider copy()>();

        return $r1;
    }

    public volatile com.opengamma.analytics.financial.provider.description.interestrate.ParameterProviderInterface copy()
    {
        com.opengamma.analytics.financial.provider.description.interestrate.IssuerProvider r0, $r1;

        r0 := @this: com.opengamma.analytics.financial.provider.description.interestrate.IssuerProvider;

        $r1 = virtualinvoke r0.<com.opengamma.analytics.financial.provider.description.interestrate.IssuerProvider: com.opengamma.analytics.financial.provider.description.interestrate.IssuerProvider copy()>();

        return $r1;
    }

    static void <clinit>()
    {
        org.slf4j.Logger $r0;

        $r0 = staticinvoke <org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>(class "com/opengamma/analytics/financial/provider/description/interestrate/IssuerProvider");

        <com.opengamma.analytics.financial.provider.description.interestrate.IssuerProvider: org.slf4j.Logger s_logger> = $r0;

        return;
    }
}
