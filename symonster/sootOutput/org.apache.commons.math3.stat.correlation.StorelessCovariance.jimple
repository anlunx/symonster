public class org.apache.commons.math3.stat.correlation.StorelessCovariance extends org.apache.commons.math3.stat.correlation.Covariance
{
    private org.apache.commons.math3.stat.correlation.StorelessBivariateCovariance[] covMatrix;
    private int dimension;

    public void <init>(int)
    {
        org.apache.commons.math3.stat.correlation.StorelessCovariance r0;
        int i0;

        r0 := @this: org.apache.commons.math3.stat.correlation.StorelessCovariance;

        i0 := @parameter0: int;

        specialinvoke r0.<org.apache.commons.math3.stat.correlation.StorelessCovariance: void <init>(int,boolean)>(i0, 1);

        return;
    }

    public void <init>(int, boolean)
    {
        org.apache.commons.math3.stat.correlation.StorelessCovariance r0;
        int i0, $i1, $i2, $i3, $i4, $i5;
        boolean z0;
        org.apache.commons.math3.stat.correlation.StorelessBivariateCovariance[] $r1;

        r0 := @this: org.apache.commons.math3.stat.correlation.StorelessCovariance;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        specialinvoke r0.<org.apache.commons.math3.stat.correlation.Covariance: void <init>()>();

        r0.<org.apache.commons.math3.stat.correlation.StorelessCovariance: int dimension> = i0;

        $i3 = r0.<org.apache.commons.math3.stat.correlation.StorelessCovariance: int dimension>;

        $i1 = r0.<org.apache.commons.math3.stat.correlation.StorelessCovariance: int dimension>;

        $i2 = $i1 + 1;

        $i4 = $i3 * $i2;

        $i5 = $i4 / 2;

        $r1 = newarray (org.apache.commons.math3.stat.correlation.StorelessBivariateCovariance)[$i5];

        r0.<org.apache.commons.math3.stat.correlation.StorelessCovariance: org.apache.commons.math3.stat.correlation.StorelessBivariateCovariance[] covMatrix> = $r1;

        specialinvoke r0.<org.apache.commons.math3.stat.correlation.StorelessCovariance: void initializeMatrix(boolean)>(z0);

        return;
    }

    private void initializeMatrix(boolean)
    {
        org.apache.commons.math3.stat.correlation.StorelessCovariance r0;
        boolean z0;
        int $i0, $i1, i2, i3;
        org.apache.commons.math3.stat.correlation.StorelessBivariateCovariance $r1;

        r0 := @this: org.apache.commons.math3.stat.correlation.StorelessCovariance;

        z0 := @parameter0: boolean;

        i2 = 0;

     label1:
        $i0 = r0.<org.apache.commons.math3.stat.correlation.StorelessCovariance: int dimension>;

        if i2 >= $i0 goto label4;

        i3 = 0;

     label2:
        $i1 = r0.<org.apache.commons.math3.stat.correlation.StorelessCovariance: int dimension>;

        if i3 >= $i1 goto label3;

        $r1 = new org.apache.commons.math3.stat.correlation.StorelessBivariateCovariance;

        specialinvoke $r1.<org.apache.commons.math3.stat.correlation.StorelessBivariateCovariance: void <init>(boolean)>(z0);

        specialinvoke r0.<org.apache.commons.math3.stat.correlation.StorelessCovariance: void setElement(int,int,org.apache.commons.math3.stat.correlation.StorelessBivariateCovariance)>(i2, i3, $r1);

        i3 = i3 + 1;

        goto label2;

     label3:
        i2 = i2 + 1;

        goto label1;

     label4:
        return;
    }

    private int indexOf(int, int)
    {
        org.apache.commons.math3.stat.correlation.StorelessCovariance r0;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;

        r0 := @this: org.apache.commons.math3.stat.correlation.StorelessCovariance;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        if i1 >= i0 goto label1;

        $i5 = i0 + 1;

        $i6 = i0 * $i5;

        $i7 = $i6 / 2;

        $i8 = $i7 + i1;

        goto label2;

     label1:
        $i2 = i1 + 1;

        $i3 = i1 * $i2;

        $i4 = $i3 / 2;

        $i8 = $i4 + i0;

     label2:
        return $i8;
    }

    private org.apache.commons.math3.stat.correlation.StorelessBivariateCovariance getElement(int, int)
    {
        org.apache.commons.math3.stat.correlation.StorelessCovariance r0;
        int i0, i1, $i2;
        org.apache.commons.math3.stat.correlation.StorelessBivariateCovariance[] $r1;
        org.apache.commons.math3.stat.correlation.StorelessBivariateCovariance $r2;

        r0 := @this: org.apache.commons.math3.stat.correlation.StorelessCovariance;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<org.apache.commons.math3.stat.correlation.StorelessCovariance: org.apache.commons.math3.stat.correlation.StorelessBivariateCovariance[] covMatrix>;

        $i2 = specialinvoke r0.<org.apache.commons.math3.stat.correlation.StorelessCovariance: int indexOf(int,int)>(i0, i1);

        $r2 = $r1[$i2];

        return $r2;
    }

    private void setElement(int, int, org.apache.commons.math3.stat.correlation.StorelessBivariateCovariance)
    {
        org.apache.commons.math3.stat.correlation.StorelessCovariance r0;
        int i0, i1, $i2;
        org.apache.commons.math3.stat.correlation.StorelessBivariateCovariance r1;
        org.apache.commons.math3.stat.correlation.StorelessBivariateCovariance[] $r2;

        r0 := @this: org.apache.commons.math3.stat.correlation.StorelessCovariance;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: org.apache.commons.math3.stat.correlation.StorelessBivariateCovariance;

        $r2 = r0.<org.apache.commons.math3.stat.correlation.StorelessCovariance: org.apache.commons.math3.stat.correlation.StorelessBivariateCovariance[] covMatrix>;

        $i2 = specialinvoke r0.<org.apache.commons.math3.stat.correlation.StorelessCovariance: int indexOf(int,int)>(i0, i1);

        $r2[$i2] = r1;

        return;
    }

    public double getCovariance(int, int) throws org.apache.commons.math3.exception.NumberIsTooSmallException
    {
        org.apache.commons.math3.stat.correlation.StorelessCovariance r0;
        int i0, i1;
        org.apache.commons.math3.stat.correlation.StorelessBivariateCovariance $r1;
        double $d0;

        r0 := @this: org.apache.commons.math3.stat.correlation.StorelessCovariance;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = specialinvoke r0.<org.apache.commons.math3.stat.correlation.StorelessCovariance: org.apache.commons.math3.stat.correlation.StorelessBivariateCovariance getElement(int,int)>(i0, i1);

        $d0 = virtualinvoke $r1.<org.apache.commons.math3.stat.correlation.StorelessBivariateCovariance: double getResult()>();

        return $d0;
    }

    public void increment(double[]) throws org.apache.commons.math3.exception.DimensionMismatchException
    {
        org.apache.commons.math3.stat.correlation.StorelessCovariance r0;
        double[] r1;
        int i0, $i1, $i2, i3, i4;
        org.apache.commons.math3.stat.correlation.StorelessBivariateCovariance $r2;
        double $d0, $d1;
        org.apache.commons.math3.exception.DimensionMismatchException $r3;

        r0 := @this: org.apache.commons.math3.stat.correlation.StorelessCovariance;

        r1 := @parameter0: double[];

        i0 = lengthof r1;

        $i1 = r0.<org.apache.commons.math3.stat.correlation.StorelessCovariance: int dimension>;

        if i0 == $i1 goto label1;

        $r3 = new org.apache.commons.math3.exception.DimensionMismatchException;

        $i2 = r0.<org.apache.commons.math3.stat.correlation.StorelessCovariance: int dimension>;

        specialinvoke $r3.<org.apache.commons.math3.exception.DimensionMismatchException: void <init>(int,int)>(i0, $i2);

        throw $r3;

     label1:
        i3 = 0;

     label2:
        if i3 >= i0 goto label5;

        i4 = i3;

     label3:
        if i4 >= i0 goto label4;

        $r2 = specialinvoke r0.<org.apache.commons.math3.stat.correlation.StorelessCovariance: org.apache.commons.math3.stat.correlation.StorelessBivariateCovariance getElement(int,int)>(i3, i4);

        $d1 = r1[i3];

        $d0 = r1[i4];

        virtualinvoke $r2.<org.apache.commons.math3.stat.correlation.StorelessBivariateCovariance: void increment(double,double)>($d1, $d0);

        i4 = i4 + 1;

        goto label3;

     label4:
        i3 = i3 + 1;

        goto label2;

     label5:
        return;
    }

    public void append(org.apache.commons.math3.stat.correlation.StorelessCovariance) throws org.apache.commons.math3.exception.DimensionMismatchException
    {
        org.apache.commons.math3.stat.correlation.StorelessCovariance r0, r1;
        int $i0, $i1, $i2, $i3, $i4, $i5, i6, i7;
        org.apache.commons.math3.stat.correlation.StorelessBivariateCovariance $r2, $r3;
        org.apache.commons.math3.exception.DimensionMismatchException $r4;

        r0 := @this: org.apache.commons.math3.stat.correlation.StorelessCovariance;

        r1 := @parameter0: org.apache.commons.math3.stat.correlation.StorelessCovariance;

        $i1 = r1.<org.apache.commons.math3.stat.correlation.StorelessCovariance: int dimension>;

        $i0 = r0.<org.apache.commons.math3.stat.correlation.StorelessCovariance: int dimension>;

        if $i1 == $i0 goto label1;

        $r4 = new org.apache.commons.math3.exception.DimensionMismatchException;

        $i5 = r1.<org.apache.commons.math3.stat.correlation.StorelessCovariance: int dimension>;

        $i4 = r0.<org.apache.commons.math3.stat.correlation.StorelessCovariance: int dimension>;

        specialinvoke $r4.<org.apache.commons.math3.exception.DimensionMismatchException: void <init>(int,int)>($i5, $i4);

        throw $r4;

     label1:
        i6 = 0;

     label2:
        $i2 = r0.<org.apache.commons.math3.stat.correlation.StorelessCovariance: int dimension>;

        if i6 >= $i2 goto label5;

        i7 = i6;

     label3:
        $i3 = r0.<org.apache.commons.math3.stat.correlation.StorelessCovariance: int dimension>;

        if i7 >= $i3 goto label4;

        $r2 = specialinvoke r0.<org.apache.commons.math3.stat.correlation.StorelessCovariance: org.apache.commons.math3.stat.correlation.StorelessBivariateCovariance getElement(int,int)>(i6, i7);

        $r3 = specialinvoke r1.<org.apache.commons.math3.stat.correlation.StorelessCovariance: org.apache.commons.math3.stat.correlation.StorelessBivariateCovariance getElement(int,int)>(i6, i7);

        virtualinvoke $r2.<org.apache.commons.math3.stat.correlation.StorelessBivariateCovariance: void append(org.apache.commons.math3.stat.correlation.StorelessBivariateCovariance)>($r3);

        i7 = i7 + 1;

        goto label3;

     label4:
        i6 = i6 + 1;

        goto label2;

     label5:
        return;
    }

    public org.apache.commons.math3.linear.RealMatrix getCovarianceMatrix() throws org.apache.commons.math3.exception.NumberIsTooSmallException
    {
        org.apache.commons.math3.stat.correlation.StorelessCovariance r0;
        double[][] $r1;
        org.apache.commons.math3.linear.RealMatrix $r2;

        r0 := @this: org.apache.commons.math3.stat.correlation.StorelessCovariance;

        $r1 = virtualinvoke r0.<org.apache.commons.math3.stat.correlation.StorelessCovariance: double[][] getData()>();

        $r2 = staticinvoke <org.apache.commons.math3.linear.MatrixUtils: org.apache.commons.math3.linear.RealMatrix createRealMatrix(double[][])>($r1);

        return $r2;
    }

    public double[][] getData() throws org.apache.commons.math3.exception.NumberIsTooSmallException
    {
        org.apache.commons.math3.stat.correlation.StorelessCovariance r0;
        double[][] r1;
        int $i0, $i1, $i2, $i3, i4, i5;
        double[] $r2;
        org.apache.commons.math3.stat.correlation.StorelessBivariateCovariance $r3;
        double $d0;

        r0 := @this: org.apache.commons.math3.stat.correlation.StorelessCovariance;

        $i1 = r0.<org.apache.commons.math3.stat.correlation.StorelessCovariance: int dimension>;

        $i0 = r0.<org.apache.commons.math3.stat.correlation.StorelessCovariance: int dimension>;

        r1 = newmultiarray (double)[$i1][$i0];

        i4 = 0;

     label1:
        $i2 = r0.<org.apache.commons.math3.stat.correlation.StorelessCovariance: int dimension>;

        if i4 >= $i2 goto label4;

        i5 = 0;

     label2:
        $i3 = r0.<org.apache.commons.math3.stat.correlation.StorelessCovariance: int dimension>;

        if i5 >= $i3 goto label3;

        $r2 = r1[i4];

        $r3 = specialinvoke r0.<org.apache.commons.math3.stat.correlation.StorelessCovariance: org.apache.commons.math3.stat.correlation.StorelessBivariateCovariance getElement(int,int)>(i4, i5);

        $d0 = virtualinvoke $r3.<org.apache.commons.math3.stat.correlation.StorelessBivariateCovariance: double getResult()>();

        $r2[i5] = $d0;

        i5 = i5 + 1;

        goto label2;

     label3:
        i4 = i4 + 1;

        goto label1;

     label4:
        return r1;
    }

    public int getN() throws org.apache.commons.math3.exception.MathUnsupportedOperationException
    {
        org.apache.commons.math3.stat.correlation.StorelessCovariance r0;
        org.apache.commons.math3.exception.MathUnsupportedOperationException $r1;

        r0 := @this: org.apache.commons.math3.stat.correlation.StorelessCovariance;

        $r1 = new org.apache.commons.math3.exception.MathUnsupportedOperationException;

        specialinvoke $r1.<org.apache.commons.math3.exception.MathUnsupportedOperationException: void <init>()>();

        throw $r1;
    }
}
