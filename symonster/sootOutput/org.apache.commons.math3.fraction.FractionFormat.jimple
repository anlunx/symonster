public class org.apache.commons.math3.fraction.FractionFormat extends org.apache.commons.math3.fraction.AbstractFormat
{
    private static final long serialVersionUID;

    public void <init>()
    {
        org.apache.commons.math3.fraction.FractionFormat r0;

        r0 := @this: org.apache.commons.math3.fraction.FractionFormat;

        specialinvoke r0.<org.apache.commons.math3.fraction.AbstractFormat: void <init>()>();

        return;
    }

    public void <init>(java.text.NumberFormat)
    {
        org.apache.commons.math3.fraction.FractionFormat r0;
        java.text.NumberFormat r1;

        r0 := @this: org.apache.commons.math3.fraction.FractionFormat;

        r1 := @parameter0: java.text.NumberFormat;

        specialinvoke r0.<org.apache.commons.math3.fraction.AbstractFormat: void <init>(java.text.NumberFormat)>(r1);

        return;
    }

    public void <init>(java.text.NumberFormat, java.text.NumberFormat)
    {
        org.apache.commons.math3.fraction.FractionFormat r0;
        java.text.NumberFormat r1, r2;

        r0 := @this: org.apache.commons.math3.fraction.FractionFormat;

        r1 := @parameter0: java.text.NumberFormat;

        r2 := @parameter1: java.text.NumberFormat;

        specialinvoke r0.<org.apache.commons.math3.fraction.AbstractFormat: void <init>(java.text.NumberFormat,java.text.NumberFormat)>(r1, r2);

        return;
    }

    public static java.util.Locale[] getAvailableLocales()
    {
        java.util.Locale[] $r0;

        $r0 = staticinvoke <java.text.NumberFormat: java.util.Locale[] getAvailableLocales()>();

        return $r0;
    }

    public static java.lang.String formatFraction(org.apache.commons.math3.fraction.Fraction)
    {
        org.apache.commons.math3.fraction.Fraction r0;
        org.apache.commons.math3.fraction.FractionFormat $r1;
        java.lang.String $r2;

        r0 := @parameter0: org.apache.commons.math3.fraction.Fraction;

        $r1 = staticinvoke <org.apache.commons.math3.fraction.FractionFormat: org.apache.commons.math3.fraction.FractionFormat getImproperInstance()>();

        $r2 = virtualinvoke $r1.<org.apache.commons.math3.fraction.FractionFormat: java.lang.String format(java.lang.Object)>(r0);

        return $r2;
    }

    public static org.apache.commons.math3.fraction.FractionFormat getImproperInstance()
    {
        java.util.Locale $r0;
        org.apache.commons.math3.fraction.FractionFormat $r1;

        $r0 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>();

        $r1 = staticinvoke <org.apache.commons.math3.fraction.FractionFormat: org.apache.commons.math3.fraction.FractionFormat getImproperInstance(java.util.Locale)>($r0);

        return $r1;
    }

    public static org.apache.commons.math3.fraction.FractionFormat getImproperInstance(java.util.Locale)
    {
        java.util.Locale r0;
        org.apache.commons.math3.fraction.FractionFormat $r1;
        java.text.NumberFormat $r2;

        r0 := @parameter0: java.util.Locale;

        $r1 = new org.apache.commons.math3.fraction.FractionFormat;

        $r2 = staticinvoke <org.apache.commons.math3.fraction.FractionFormat: java.text.NumberFormat getDefaultNumberFormat(java.util.Locale)>(r0);

        specialinvoke $r1.<org.apache.commons.math3.fraction.FractionFormat: void <init>(java.text.NumberFormat)>($r2);

        return $r1;
    }

    public static org.apache.commons.math3.fraction.FractionFormat getProperInstance()
    {
        java.util.Locale $r0;
        org.apache.commons.math3.fraction.FractionFormat $r1;

        $r0 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>();

        $r1 = staticinvoke <org.apache.commons.math3.fraction.FractionFormat: org.apache.commons.math3.fraction.FractionFormat getProperInstance(java.util.Locale)>($r0);

        return $r1;
    }

    public static org.apache.commons.math3.fraction.FractionFormat getProperInstance(java.util.Locale)
    {
        java.util.Locale r0;
        org.apache.commons.math3.fraction.ProperFractionFormat $r1;
        java.text.NumberFormat $r2;

        r0 := @parameter0: java.util.Locale;

        $r1 = new org.apache.commons.math3.fraction.ProperFractionFormat;

        $r2 = staticinvoke <org.apache.commons.math3.fraction.FractionFormat: java.text.NumberFormat getDefaultNumberFormat(java.util.Locale)>(r0);

        specialinvoke $r1.<org.apache.commons.math3.fraction.ProperFractionFormat: void <init>(java.text.NumberFormat)>($r2);

        return $r1;
    }

    protected static java.text.NumberFormat getDefaultNumberFormat()
    {
        java.util.Locale $r0;
        java.text.NumberFormat $r1;

        $r0 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>();

        $r1 = staticinvoke <org.apache.commons.math3.fraction.FractionFormat: java.text.NumberFormat getDefaultNumberFormat(java.util.Locale)>($r0);

        return $r1;
    }

    public java.lang.StringBuffer format(org.apache.commons.math3.fraction.Fraction, java.lang.StringBuffer, java.text.FieldPosition)
    {
        org.apache.commons.math3.fraction.FractionFormat r0;
        org.apache.commons.math3.fraction.Fraction r1;
        java.lang.StringBuffer r2;
        java.text.FieldPosition r3;
        java.text.NumberFormat $r4, $r7;
        int $i0, $i2;
        long $l1, $l3;

        r0 := @this: org.apache.commons.math3.fraction.FractionFormat;

        r1 := @parameter0: org.apache.commons.math3.fraction.Fraction;

        r2 := @parameter1: java.lang.StringBuffer;

        r3 := @parameter2: java.text.FieldPosition;

        virtualinvoke r3.<java.text.FieldPosition: void setBeginIndex(int)>(0);

        virtualinvoke r3.<java.text.FieldPosition: void setEndIndex(int)>(0);

        $r4 = virtualinvoke r0.<org.apache.commons.math3.fraction.FractionFormat: java.text.NumberFormat getNumeratorFormat()>();

        $i0 = virtualinvoke r1.<org.apache.commons.math3.fraction.Fraction: int getNumerator()>();

        $l1 = (long) $i0;

        virtualinvoke $r4.<java.text.NumberFormat: java.lang.StringBuffer format(long,java.lang.StringBuffer,java.text.FieldPosition)>($l1, r2, r3);

        virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" / ");

        $r7 = virtualinvoke r0.<org.apache.commons.math3.fraction.FractionFormat: java.text.NumberFormat getDenominatorFormat()>();

        $i2 = virtualinvoke r1.<org.apache.commons.math3.fraction.Fraction: int getDenominator()>();

        $l3 = (long) $i2;

        virtualinvoke $r7.<java.text.NumberFormat: java.lang.StringBuffer format(long,java.lang.StringBuffer,java.text.FieldPosition)>($l3, r2, r3);

        return r2;
    }

    public java.lang.StringBuffer format(java.lang.Object, java.lang.StringBuffer, java.text.FieldPosition) throws org.apache.commons.math3.fraction.FractionConversionException, org.apache.commons.math3.exception.MathIllegalArgumentException
    {
        org.apache.commons.math3.fraction.FractionFormat r0;
        java.lang.Object r1;
        java.lang.StringBuffer r2, r10;
        java.text.FieldPosition r3;
        boolean $z0, $z1;
        org.apache.commons.math3.exception.MathIllegalArgumentException $r4;
        java.lang.Object[] $r5;
        org.apache.commons.math3.exception.util.LocalizedFormats $r6;
        org.apache.commons.math3.fraction.Fraction $r7, $r9;
        java.lang.Number $r8;
        double $d0;

        r0 := @this: org.apache.commons.math3.fraction.FractionFormat;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.StringBuffer;

        r3 := @parameter2: java.text.FieldPosition;

        $z0 = r1 instanceof org.apache.commons.math3.fraction.Fraction;

        if $z0 == 0 goto label1;

        $r9 = (org.apache.commons.math3.fraction.Fraction) r1;

        r10 = virtualinvoke r0.<org.apache.commons.math3.fraction.FractionFormat: java.lang.StringBuffer format(org.apache.commons.math3.fraction.Fraction,java.lang.StringBuffer,java.text.FieldPosition)>($r9, r2, r3);

        goto label3;

     label1:
        $z1 = r1 instanceof java.lang.Number;

        if $z1 == 0 goto label2;

        $r7 = new org.apache.commons.math3.fraction.Fraction;

        $r8 = (java.lang.Number) r1;

        $d0 = virtualinvoke $r8.<java.lang.Number: double doubleValue()>();

        specialinvoke $r7.<org.apache.commons.math3.fraction.Fraction: void <init>(double)>($d0);

        r10 = virtualinvoke r0.<org.apache.commons.math3.fraction.FractionFormat: java.lang.StringBuffer format(org.apache.commons.math3.fraction.Fraction,java.lang.StringBuffer,java.text.FieldPosition)>($r7, r2, r3);

        goto label3;

     label2:
        $r4 = new org.apache.commons.math3.exception.MathIllegalArgumentException;

        $r6 = <org.apache.commons.math3.exception.util.LocalizedFormats: org.apache.commons.math3.exception.util.LocalizedFormats CANNOT_FORMAT_OBJECT_TO_FRACTION>;

        $r5 = newarray (java.lang.Object)[0];

        specialinvoke $r4.<org.apache.commons.math3.exception.MathIllegalArgumentException: void <init>(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])>($r6, $r5);

        throw $r4;

     label3:
        return r10;
    }

    public org.apache.commons.math3.fraction.Fraction parse(java.lang.String) throws org.apache.commons.math3.exception.MathParseException
    {
        org.apache.commons.math3.fraction.FractionFormat r0;
        java.lang.String r1;
        org.apache.commons.math3.fraction.Fraction r3;
        java.text.ParsePosition $r4;
        int $i0, $i1;
        org.apache.commons.math3.exception.MathParseException $r5;

        r0 := @this: org.apache.commons.math3.fraction.FractionFormat;

        r1 := @parameter0: java.lang.String;

        $r4 = new java.text.ParsePosition;

        specialinvoke $r4.<java.text.ParsePosition: void <init>(int)>(0);

        r3 = virtualinvoke r0.<org.apache.commons.math3.fraction.FractionFormat: org.apache.commons.math3.fraction.Fraction parse(java.lang.String,java.text.ParsePosition)>(r1, $r4);

        $i0 = virtualinvoke $r4.<java.text.ParsePosition: int getIndex()>();

        if $i0 != 0 goto label1;

        $r5 = new org.apache.commons.math3.exception.MathParseException;

        $i1 = virtualinvoke $r4.<java.text.ParsePosition: int getErrorIndex()>();

        specialinvoke $r5.<org.apache.commons.math3.exception.MathParseException: void <init>(java.lang.String,int,java.lang.Class)>(r1, $i1, class "org/apache/commons/math3/fraction/Fraction");

        throw $r5;

     label1:
        return r3;
    }

    public org.apache.commons.math3.fraction.Fraction parse(java.lang.String, java.text.ParsePosition)
    {
        org.apache.commons.math3.fraction.FractionFormat r0;
        java.lang.String r1;
        java.text.ParsePosition r2;
        int i0, i1, $i3, $i4, $i5;
        java.lang.Number r3, r4;
        char c2;
        java.text.NumberFormat $r5, $r6;
        org.apache.commons.math3.fraction.Fraction $r7, $r8;

        r0 := @this: org.apache.commons.math3.fraction.FractionFormat;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.text.ParsePosition;

        i0 = virtualinvoke r2.<java.text.ParsePosition: int getIndex()>();

        staticinvoke <org.apache.commons.math3.fraction.FractionFormat: void parseAndIgnoreWhitespace(java.lang.String,java.text.ParsePosition)>(r1, r2);

        $r5 = virtualinvoke r0.<org.apache.commons.math3.fraction.FractionFormat: java.text.NumberFormat getNumeratorFormat()>();

        r3 = virtualinvoke $r5.<java.text.NumberFormat: java.lang.Number parse(java.lang.String,java.text.ParsePosition)>(r1, r2);

        if r3 != null goto label1;

        virtualinvoke r2.<java.text.ParsePosition: void setIndex(int)>(i0);

        return null;

     label1:
        i1 = virtualinvoke r2.<java.text.ParsePosition: int getIndex()>();

        c2 = staticinvoke <org.apache.commons.math3.fraction.FractionFormat: char parseNextCharacter(java.lang.String,java.text.ParsePosition)>(r1, r2);

        lookupswitch(c2)
        {
            case 0: goto label2;
            case 47: goto label3;
            default: goto label4;
        };

     label2:
        $r8 = new org.apache.commons.math3.fraction.Fraction;

        $i5 = virtualinvoke r3.<java.lang.Number: int intValue()>();

        specialinvoke $r8.<org.apache.commons.math3.fraction.Fraction: void <init>(int,int)>($i5, 1);

        return $r8;

     label3:
        goto label5;

     label4:
        virtualinvoke r2.<java.text.ParsePosition: void setIndex(int)>(i0);

        virtualinvoke r2.<java.text.ParsePosition: void setErrorIndex(int)>(i1);

        return null;

     label5:
        staticinvoke <org.apache.commons.math3.fraction.FractionFormat: void parseAndIgnoreWhitespace(java.lang.String,java.text.ParsePosition)>(r1, r2);

        $r6 = virtualinvoke r0.<org.apache.commons.math3.fraction.FractionFormat: java.text.NumberFormat getDenominatorFormat()>();

        r4 = virtualinvoke $r6.<java.text.NumberFormat: java.lang.Number parse(java.lang.String,java.text.ParsePosition)>(r1, r2);

        if r4 != null goto label6;

        virtualinvoke r2.<java.text.ParsePosition: void setIndex(int)>(i0);

        return null;

     label6:
        $r7 = new org.apache.commons.math3.fraction.Fraction;

        $i3 = virtualinvoke r3.<java.lang.Number: int intValue()>();

        $i4 = virtualinvoke r4.<java.lang.Number: int intValue()>();

        specialinvoke $r7.<org.apache.commons.math3.fraction.Fraction: void <init>(int,int)>($i3, $i4);

        return $r7;
    }

    public volatile java.lang.Number parse(java.lang.String) throws java.text.ParseException
    {
        org.apache.commons.math3.fraction.FractionFormat r0;
        java.lang.String r1;
        org.apache.commons.math3.fraction.Fraction $r2;

        r0 := @this: org.apache.commons.math3.fraction.FractionFormat;

        r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<org.apache.commons.math3.fraction.FractionFormat: org.apache.commons.math3.fraction.Fraction parse(java.lang.String)>(r1);

        return $r2;
    }

    public volatile java.lang.Number parse(java.lang.String, java.text.ParsePosition)
    {
        org.apache.commons.math3.fraction.FractionFormat r0;
        java.lang.String r1;
        java.text.ParsePosition r2;
        org.apache.commons.math3.fraction.Fraction $r3;

        r0 := @this: org.apache.commons.math3.fraction.FractionFormat;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.text.ParsePosition;

        $r3 = virtualinvoke r0.<org.apache.commons.math3.fraction.FractionFormat: org.apache.commons.math3.fraction.Fraction parse(java.lang.String,java.text.ParsePosition)>(r1, r2);

        return $r3;
    }

    public static void <clinit>()
    {
        <org.apache.commons.math3.fraction.FractionFormat: long serialVersionUID> = 3008655719530972611L;

        return;
    }
}
