public class org.apache.commons.math.analysis.integration.TrapezoidIntegrator extends org.apache.commons.math.analysis.integration.UnivariateRealIntegratorImpl
{
    private double s;

    public void <init>(org.apache.commons.math.analysis.UnivariateRealFunction)
    {
        org.apache.commons.math.analysis.integration.TrapezoidIntegrator r0;
        org.apache.commons.math.analysis.UnivariateRealFunction r1;

        r0 := @this: org.apache.commons.math.analysis.integration.TrapezoidIntegrator;

        r1 := @parameter0: org.apache.commons.math.analysis.UnivariateRealFunction;

        specialinvoke r0.<org.apache.commons.math.analysis.integration.UnivariateRealIntegratorImpl: void <init>(org.apache.commons.math.analysis.UnivariateRealFunction,int)>(r1, 64);

        return;
    }

    public void <init>()
    {
        org.apache.commons.math.analysis.integration.TrapezoidIntegrator r0;

        r0 := @this: org.apache.commons.math.analysis.integration.TrapezoidIntegrator;

        specialinvoke r0.<org.apache.commons.math.analysis.integration.UnivariateRealIntegratorImpl: void <init>(int)>(64);

        return;
    }

    double stage(org.apache.commons.math.analysis.UnivariateRealFunction, double, double, int) throws org.apache.commons.math.FunctionEvaluationException
    {
        org.apache.commons.math.analysis.integration.TrapezoidIntegrator r0;
        org.apache.commons.math.analysis.UnivariateRealFunction r1;
        double d0, d1, d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, d19, d20;
        int i0, $i2;
        long l1, l4;
        byte $b3;

        r0 := @this: org.apache.commons.math.analysis.integration.TrapezoidIntegrator;

        r1 := @parameter0: org.apache.commons.math.analysis.UnivariateRealFunction;

        d0 := @parameter1: double;

        d1 := @parameter2: double;

        i0 := @parameter3: int;

        if i0 != 0 goto label1;

        $d12 = d1 - d0;

        $d13 = 0.5 * $d12;

        $d14 = interfaceinvoke r1.<org.apache.commons.math.analysis.UnivariateRealFunction: double value(double)>(d0);

        $d15 = interfaceinvoke r1.<org.apache.commons.math.analysis.UnivariateRealFunction: double value(double)>(d1);

        $d16 = $d14 + $d15;

        $d17 = $d13 * $d16;

        r0.<org.apache.commons.math.analysis.integration.TrapezoidIntegrator: double s> = $d17;

        $d18 = r0.<org.apache.commons.math.analysis.integration.TrapezoidIntegrator: double s>;

        return $d18;

     label1:
        $i2 = i0 - 1;

        l1 = 1L << $i2;

        d19 = 0.0;

        $d4 = d1 - d0;

        $d3 = (double) l1;

        d2 = $d4 / $d3;

        $d5 = 0.5 * d2;

        d20 = d0 + $d5;

        l4 = 0L;

     label2:
        $b3 = l4 cmp l1;

        if $b3 >= 0 goto label3;

        $d11 = interfaceinvoke r1.<org.apache.commons.math.analysis.UnivariateRealFunction: double value(double)>(d20);

        d19 = d19 + $d11;

        d20 = d20 + d2;

        l4 = l4 + 1L;

        goto label2;

     label3:
        $d7 = r0.<org.apache.commons.math.analysis.integration.TrapezoidIntegrator: double s>;

        $d6 = d19 * d2;

        $d8 = $d7 + $d6;

        $d9 = 0.5 * $d8;

        r0.<org.apache.commons.math.analysis.integration.TrapezoidIntegrator: double s> = $d9;

        $d10 = r0.<org.apache.commons.math.analysis.integration.TrapezoidIntegrator: double s>;

        return $d10;
    }

    public double integrate(double, double) throws org.apache.commons.math.MaxIterationsExceededException, org.apache.commons.math.FunctionEvaluationException, java.lang.IllegalArgumentException
    {
        org.apache.commons.math.analysis.integration.TrapezoidIntegrator r0;
        double d0, d1, $d2;
        org.apache.commons.math.analysis.UnivariateRealFunction $r1;

        r0 := @this: org.apache.commons.math.analysis.integration.TrapezoidIntegrator;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        $r1 = r0.<org.apache.commons.math.analysis.integration.TrapezoidIntegrator: org.apache.commons.math.analysis.UnivariateRealFunction f>;

        $d2 = virtualinvoke r0.<org.apache.commons.math.analysis.integration.TrapezoidIntegrator: double integrate(org.apache.commons.math.analysis.UnivariateRealFunction,double,double)>($r1, d0, d1);

        return $d2;
    }

    public double integrate(org.apache.commons.math.analysis.UnivariateRealFunction, double, double) throws org.apache.commons.math.MaxIterationsExceededException, org.apache.commons.math.FunctionEvaluationException, java.lang.IllegalArgumentException
    {
        org.apache.commons.math.analysis.integration.TrapezoidIntegrator r0;
        org.apache.commons.math.analysis.UnivariateRealFunction r1;
        double d0, d1, d2, d3, d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, d13;
        int $i0, $i1, $i2, i5;
        org.apache.commons.math.MaxIterationsExceededException $r2;
        byte $b3, $b4;

        r0 := @this: org.apache.commons.math.analysis.integration.TrapezoidIntegrator;

        r1 := @parameter0: org.apache.commons.math.analysis.UnivariateRealFunction;

        d0 := @parameter1: double;

        d1 := @parameter2: double;

        virtualinvoke r0.<org.apache.commons.math.analysis.integration.TrapezoidIntegrator: void clearResult()>();

        virtualinvoke r0.<org.apache.commons.math.analysis.integration.TrapezoidIntegrator: void verifyInterval(double,double)>(d0, d1);

        virtualinvoke r0.<org.apache.commons.math.analysis.integration.TrapezoidIntegrator: void verifyIterationCount()>();

        d13 = virtualinvoke r0.<org.apache.commons.math.analysis.integration.TrapezoidIntegrator: double stage(org.apache.commons.math.analysis.UnivariateRealFunction,double,double,int)>(r1, d0, d1, 0);

        i5 = 1;

     label1:
        $i0 = r0.<org.apache.commons.math.analysis.integration.TrapezoidIntegrator: int maximalIterationCount>;

        if i5 > $i0 goto label4;

        d2 = virtualinvoke r0.<org.apache.commons.math.analysis.integration.TrapezoidIntegrator: double stage(org.apache.commons.math.analysis.UnivariateRealFunction,double,double,int)>(r1, d0, d1, i5);

        $i2 = r0.<org.apache.commons.math.analysis.integration.TrapezoidIntegrator: int minimalIterationCount>;

        if i5 < $i2 goto label3;

        $d5 = d2 - d13;

        d3 = staticinvoke <org.apache.commons.math.util.FastMath: double abs(double)>($d5);

        $d6 = r0.<org.apache.commons.math.analysis.integration.TrapezoidIntegrator: double relativeAccuracy>;

        $d7 = staticinvoke <org.apache.commons.math.util.FastMath: double abs(double)>(d13);

        $d8 = staticinvoke <org.apache.commons.math.util.FastMath: double abs(double)>(d2);

        $d9 = $d7 + $d8;

        $d10 = $d6 * $d9;

        d4 = $d10 * 0.5;

        $b3 = d3 cmpg d4;

        if $b3 <= 0 goto label2;

        $d12 = r0.<org.apache.commons.math.analysis.integration.TrapezoidIntegrator: double absoluteAccuracy>;

        $b4 = d3 cmpg $d12;

        if $b4 > 0 goto label3;

     label2:
        virtualinvoke r0.<org.apache.commons.math.analysis.integration.TrapezoidIntegrator: void setResult(double,int)>(d2, i5);

        $d11 = r0.<org.apache.commons.math.analysis.integration.TrapezoidIntegrator: double result>;

        return $d11;

     label3:
        d13 = d2;

        i5 = i5 + 1;

        goto label1;

     label4:
        $r2 = new org.apache.commons.math.MaxIterationsExceededException;

        $i1 = r0.<org.apache.commons.math.analysis.integration.TrapezoidIntegrator: int maximalIterationCount>;

        specialinvoke $r2.<org.apache.commons.math.MaxIterationsExceededException: void <init>(int)>($i1);

        throw $r2;
    }

    protected void verifyIterationCount() throws java.lang.IllegalArgumentException
    {
        org.apache.commons.math.analysis.integration.TrapezoidIntegrator r0;
        int $i0;
        java.lang.Object[] $r1;
        org.apache.commons.math.exception.util.LocalizedFormats $r2;
        java.lang.Integer $r3, $r4;
        java.lang.IllegalArgumentException $r5;

        r0 := @this: org.apache.commons.math.analysis.integration.TrapezoidIntegrator;

        specialinvoke r0.<org.apache.commons.math.analysis.integration.UnivariateRealIntegratorImpl: void verifyIterationCount()>();

        $i0 = r0.<org.apache.commons.math.analysis.integration.TrapezoidIntegrator: int maximalIterationCount>;

        if $i0 <= 64 goto label1;

        $r2 = <org.apache.commons.math.exception.util.LocalizedFormats: org.apache.commons.math.exception.util.LocalizedFormats INVALID_ITERATIONS_LIMITS>;

        $r1 = newarray (java.lang.Object)[2];

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        $r1[0] = $r3;

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(64);

        $r1[1] = $r4;

        $r5 = staticinvoke <org.apache.commons.math.MathRuntimeException: java.lang.IllegalArgumentException createIllegalArgumentException(org.apache.commons.math.exception.util.Localizable,java.lang.Object[])>($r2, $r1);

        throw $r5;

     label1:
        return;
    }
}
