class com.opengamma.analytics.financial.model.finitedifference.applications.TwoStateMarkovChainFitter$1 extends com.opengamma.analytics.math.function.Function1D
{
    final int val$nMarketValues;
    final java.util.List val$marketVols;
    final com.opengamma.analytics.financial.model.interestrate.curve.ForwardCurve val$forward;
    final com.opengamma.analytics.financial.model.finitedifference.applications.TwoStateMarkovChainFitter this$0;

    void <init>(com.opengamma.analytics.financial.model.finitedifference.applications.TwoStateMarkovChainFitter, int, java.util.List, com.opengamma.analytics.financial.model.interestrate.curve.ForwardCurve)
    {
        com.opengamma.analytics.financial.model.finitedifference.applications.TwoStateMarkovChainFitter$1 r0;
        com.opengamma.analytics.financial.model.finitedifference.applications.TwoStateMarkovChainFitter r1;
        int i0;
        java.util.List r2;
        com.opengamma.analytics.financial.model.interestrate.curve.ForwardCurve r3;

        r0 := @this: com.opengamma.analytics.financial.model.finitedifference.applications.TwoStateMarkovChainFitter$1;

        r1 := @parameter0: com.opengamma.analytics.financial.model.finitedifference.applications.TwoStateMarkovChainFitter;

        i0 := @parameter1: int;

        r2 := @parameter2: java.util.List;

        r3 := @parameter3: com.opengamma.analytics.financial.model.interestrate.curve.ForwardCurve;

        r0.<com.opengamma.analytics.financial.model.finitedifference.applications.TwoStateMarkovChainFitter$1: com.opengamma.analytics.financial.model.finitedifference.applications.TwoStateMarkovChainFitter this$0> = r1;

        r0.<com.opengamma.analytics.financial.model.finitedifference.applications.TwoStateMarkovChainFitter$1: int val$nMarketValues> = i0;

        r0.<com.opengamma.analytics.financial.model.finitedifference.applications.TwoStateMarkovChainFitter$1: java.util.List val$marketVols> = r2;

        r0.<com.opengamma.analytics.financial.model.finitedifference.applications.TwoStateMarkovChainFitter$1: com.opengamma.analytics.financial.model.interestrate.curve.ForwardCurve val$forward> = r3;

        specialinvoke r0.<com.opengamma.analytics.math.function.Function1D: void <init>()>();

        return;
    }

    public com.opengamma.analytics.math.matrix.DoubleMatrix1D evaluate(com.opengamma.analytics.math.matrix.DoubleMatrix1D)
    {
        com.opengamma.analytics.financial.model.finitedifference.applications.TwoStateMarkovChainFitter$1 r0;
        com.opengamma.analytics.math.matrix.DoubleMatrix1D r1, r2, $r22;
        double d0, d1, d2, d3, d4, d5, d6, d7, d8, $d9, $d10, $d11, $d12, $d13;
        double[] r3, r4;
        com.opengamma.analytics.math.minimization.UncoupledParameterTransforms $r9;
        int[] $r10, $r12, $r14, $r16, $r18, $r20;
        java.lang.Double $r11, $r13, $r15, $r17, $r19, $r21;
        int $i0, $i1, i2;
        java.util.List $r23;
        java.lang.Object $r24, $r26;
        com.opengamma.util.tuple.Pair $r25;
        com.opengamma.analytics.financial.model.option.pricing.analytic.formula.EuropeanVanillaOption $r27;
        com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackFunctionData $r28;
        com.opengamma.analytics.financial.model.interestrate.curve.ForwardCurve $r29;
        com.opengamma.analytics.financial.model.finitedifference.MarkovChainApprox $r30;
        com.opengamma.analytics.financial.model.volatility.BlackImpliedVolatilityFormula $r31;
        java.lang.Exception $r32;

        r0 := @this: com.opengamma.analytics.financial.model.finitedifference.applications.TwoStateMarkovChainFitter$1;

        r1 := @parameter0: com.opengamma.analytics.math.matrix.DoubleMatrix1D;

        $r9 = staticinvoke <com.opengamma.analytics.financial.model.finitedifference.applications.TwoStateMarkovChainFitter: com.opengamma.analytics.math.minimization.UncoupledParameterTransforms access$000()>();

        r2 = virtualinvoke $r9.<com.opengamma.analytics.math.minimization.UncoupledParameterTransforms: com.opengamma.analytics.math.matrix.DoubleMatrix1D inverseTransform(com.opengamma.analytics.math.matrix.DoubleMatrix1D)>(r1);

        $r10 = newarray (int)[1];

        $r10[0] = 0;

        $r11 = virtualinvoke r2.<com.opengamma.analytics.math.matrix.DoubleMatrix1D: java.lang.Double getEntry(int[])>($r10);

        d0 = virtualinvoke $r11.<java.lang.Double: double doubleValue()>();

        $r12 = newarray (int)[1];

        $r12[0] = 1;

        $r13 = virtualinvoke r2.<com.opengamma.analytics.math.matrix.DoubleMatrix1D: java.lang.Double getEntry(int[])>($r12);

        d1 = virtualinvoke $r13.<java.lang.Double: double doubleValue()>();

        $r14 = newarray (int)[1];

        $r14[0] = 2;

        $r15 = virtualinvoke r2.<com.opengamma.analytics.math.matrix.DoubleMatrix1D: java.lang.Double getEntry(int[])>($r14);

        d2 = virtualinvoke $r15.<java.lang.Double: double doubleValue()>();

        $r16 = newarray (int)[1];

        $r16[0] = 3;

        $r17 = virtualinvoke r2.<com.opengamma.analytics.math.matrix.DoubleMatrix1D: java.lang.Double getEntry(int[])>($r16);

        d3 = virtualinvoke $r17.<java.lang.Double: double doubleValue()>();

        $r18 = newarray (int)[1];

        $r18[0] = 4;

        $r19 = virtualinvoke r2.<com.opengamma.analytics.math.matrix.DoubleMatrix1D: java.lang.Double getEntry(int[])>($r18);

        d4 = virtualinvoke $r19.<java.lang.Double: double doubleValue()>();

        $r20 = newarray (int)[1];

        $r20[0] = 5;

        $r21 = virtualinvoke r2.<com.opengamma.analytics.math.matrix.DoubleMatrix1D: java.lang.Double getEntry(int[])>($r20);

        d5 = virtualinvoke $r21.<java.lang.Double: double doubleValue()>();

        $i0 = r0.<com.opengamma.analytics.financial.model.finitedifference.applications.TwoStateMarkovChainFitter$1: int val$nMarketValues>;

        r3 = newarray (double)[$i0];

        i2 = 0;

     label1:
        $i1 = r0.<com.opengamma.analytics.financial.model.finitedifference.applications.TwoStateMarkovChainFitter$1: int val$nMarketValues>;

        if i2 >= $i1 goto label6;

        $r23 = r0.<com.opengamma.analytics.financial.model.finitedifference.applications.TwoStateMarkovChainFitter$1: java.util.List val$marketVols>;

        $r24 = interfaceinvoke $r23.<java.util.List: java.lang.Object get(int)>(i2);

        $r25 = (com.opengamma.util.tuple.Pair) $r24;

        $r26 = virtualinvoke $r25.<com.opengamma.util.tuple.Pair: java.lang.Object getFirst()>();

        r4 = (double[]) $r26;

        d6 = r4[0];

        d7 = r4[1];

        $r27 = new com.opengamma.analytics.financial.model.option.pricing.analytic.formula.EuropeanVanillaOption;

        specialinvoke $r27.<com.opengamma.analytics.financial.model.option.pricing.analytic.formula.EuropeanVanillaOption: void <init>(double,double,boolean)>(d7, d6, 1);

        $r28 = new com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackFunctionData;

        $r29 = r0.<com.opengamma.analytics.financial.model.finitedifference.applications.TwoStateMarkovChainFitter$1: com.opengamma.analytics.financial.model.interestrate.curve.ForwardCurve val$forward>;

        $d9 = virtualinvoke $r29.<com.opengamma.analytics.financial.model.interestrate.curve.ForwardCurve: double getForward(double)>(d6);

        specialinvoke $r28.<com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackFunctionData: void <init>(double,double,double)>($d9, 1.0, 0.0);

        $r30 = new com.opengamma.analytics.financial.model.finitedifference.MarkovChainApprox;

        $d10 = d0 + d1;

        specialinvoke $r30.<com.opengamma.analytics.financial.model.finitedifference.MarkovChainApprox: void <init>(double,double,double,double,double,double)>(d0, $d10, d2, d3, d4, d6);

        $d11 = virtualinvoke $r28.<com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackFunctionData: double getForward()>();

        $d12 = virtualinvoke $r28.<com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackFunctionData: double getDiscountFactor()>();

        d8 = virtualinvoke $r30.<com.opengamma.analytics.financial.model.finitedifference.MarkovChainApprox: double priceCEV(double,double,double,double)>($d11, $d12, d7, d5);

     label2:
        $r31 = staticinvoke <com.opengamma.analytics.financial.model.finitedifference.applications.TwoStateMarkovChainFitter: com.opengamma.analytics.financial.model.volatility.BlackImpliedVolatilityFormula access$100()>();

        $d13 = virtualinvoke $r31.<com.opengamma.analytics.financial.model.volatility.BlackImpliedVolatilityFormula: double getImpliedVolatility(com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackFunctionData,com.opengamma.analytics.financial.model.option.pricing.analytic.formula.EuropeanVanillaOption,double)>($r28, $r27, d8);

        r3[i2] = $d13;

     label3:
        goto label5;

     label4:
        $r32 := @caughtexception;

        r3[i2] = 0.0;

     label5:
        i2 = i2 + 1;

        goto label1;

     label6:
        $r22 = new com.opengamma.analytics.math.matrix.DoubleMatrix1D;

        specialinvoke $r22.<com.opengamma.analytics.math.matrix.DoubleMatrix1D: void <init>(double[])>(r3);

        return $r22;

        catch java.lang.Exception from label2 to label3 with label4;
    }

    public volatile java.lang.Object evaluate(java.lang.Object)
    {
        com.opengamma.analytics.financial.model.finitedifference.applications.TwoStateMarkovChainFitter$1 r0;
        java.lang.Object r1;
        com.opengamma.analytics.math.matrix.DoubleMatrix1D $r2, $r3;

        r0 := @this: com.opengamma.analytics.financial.model.finitedifference.applications.TwoStateMarkovChainFitter$1;

        r1 := @parameter0: java.lang.Object;

        $r2 = (com.opengamma.analytics.math.matrix.DoubleMatrix1D) r1;

        $r3 = virtualinvoke r0.<com.opengamma.analytics.financial.model.finitedifference.applications.TwoStateMarkovChainFitter$1: com.opengamma.analytics.math.matrix.DoubleMatrix1D evaluate(com.opengamma.analytics.math.matrix.DoubleMatrix1D)>($r2);

        return $r3;
    }
}
