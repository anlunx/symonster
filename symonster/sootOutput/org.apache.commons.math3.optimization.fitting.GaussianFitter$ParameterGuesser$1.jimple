class org.apache.commons.math3.optimization.fitting.GaussianFitter$ParameterGuesser$1 extends java.lang.Object implements java.util.Comparator
{
    final org.apache.commons.math3.optimization.fitting.GaussianFitter$ParameterGuesser this$0;

    void <init>(org.apache.commons.math3.optimization.fitting.GaussianFitter$ParameterGuesser)
    {
        org.apache.commons.math3.optimization.fitting.GaussianFitter$ParameterGuesser$1 r0;
        org.apache.commons.math3.optimization.fitting.GaussianFitter$ParameterGuesser r1;

        r0 := @this: org.apache.commons.math3.optimization.fitting.GaussianFitter$ParameterGuesser$1;

        r1 := @parameter0: org.apache.commons.math3.optimization.fitting.GaussianFitter$ParameterGuesser;

        r0.<org.apache.commons.math3.optimization.fitting.GaussianFitter$ParameterGuesser$1: org.apache.commons.math3.optimization.fitting.GaussianFitter$ParameterGuesser this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public int compare(org.apache.commons.math3.optimization.fitting.WeightedObservedPoint, org.apache.commons.math3.optimization.fitting.WeightedObservedPoint)
    {
        org.apache.commons.math3.optimization.fitting.GaussianFitter$ParameterGuesser$1 r0;
        org.apache.commons.math3.optimization.fitting.WeightedObservedPoint r1, r2;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11;
        byte $b0, $b1, $b2, $b3, $b4, $b5;

        r0 := @this: org.apache.commons.math3.optimization.fitting.GaussianFitter$ParameterGuesser$1;

        r1 := @parameter0: org.apache.commons.math3.optimization.fitting.WeightedObservedPoint;

        r2 := @parameter1: org.apache.commons.math3.optimization.fitting.WeightedObservedPoint;

        if r1 != null goto label1;

        if r2 != null goto label1;

        return 0;

     label1:
        if r1 != null goto label2;

        return -1;

     label2:
        if r2 != null goto label3;

        return 1;

     label3:
        $d0 = virtualinvoke r1.<org.apache.commons.math3.optimization.fitting.WeightedObservedPoint: double getX()>();

        $d1 = virtualinvoke r2.<org.apache.commons.math3.optimization.fitting.WeightedObservedPoint: double getX()>();

        $b0 = $d0 cmpg $d1;

        if $b0 >= 0 goto label4;

        return -1;

     label4:
        $d2 = virtualinvoke r1.<org.apache.commons.math3.optimization.fitting.WeightedObservedPoint: double getX()>();

        $d3 = virtualinvoke r2.<org.apache.commons.math3.optimization.fitting.WeightedObservedPoint: double getX()>();

        $b1 = $d2 cmpl $d3;

        if $b1 <= 0 goto label5;

        return 1;

     label5:
        $d4 = virtualinvoke r1.<org.apache.commons.math3.optimization.fitting.WeightedObservedPoint: double getY()>();

        $d5 = virtualinvoke r2.<org.apache.commons.math3.optimization.fitting.WeightedObservedPoint: double getY()>();

        $b2 = $d4 cmpg $d5;

        if $b2 >= 0 goto label6;

        return -1;

     label6:
        $d6 = virtualinvoke r1.<org.apache.commons.math3.optimization.fitting.WeightedObservedPoint: double getY()>();

        $d7 = virtualinvoke r2.<org.apache.commons.math3.optimization.fitting.WeightedObservedPoint: double getY()>();

        $b3 = $d6 cmpl $d7;

        if $b3 <= 0 goto label7;

        return 1;

     label7:
        $d8 = virtualinvoke r1.<org.apache.commons.math3.optimization.fitting.WeightedObservedPoint: double getWeight()>();

        $d9 = virtualinvoke r2.<org.apache.commons.math3.optimization.fitting.WeightedObservedPoint: double getWeight()>();

        $b4 = $d8 cmpg $d9;

        if $b4 >= 0 goto label8;

        return -1;

     label8:
        $d10 = virtualinvoke r1.<org.apache.commons.math3.optimization.fitting.WeightedObservedPoint: double getWeight()>();

        $d11 = virtualinvoke r2.<org.apache.commons.math3.optimization.fitting.WeightedObservedPoint: double getWeight()>();

        $b5 = $d10 cmpl $d11;

        if $b5 <= 0 goto label9;

        return 1;

     label9:
        return 0;
    }

    public volatile int compare(java.lang.Object, java.lang.Object)
    {
        org.apache.commons.math3.optimization.fitting.GaussianFitter$ParameterGuesser$1 r0;
        java.lang.Object r1, r2;
        org.apache.commons.math3.optimization.fitting.WeightedObservedPoint $r3, $r4;
        int $i0;

        r0 := @this: org.apache.commons.math3.optimization.fitting.GaussianFitter$ParameterGuesser$1;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r4 = (org.apache.commons.math3.optimization.fitting.WeightedObservedPoint) r1;

        $r3 = (org.apache.commons.math3.optimization.fitting.WeightedObservedPoint) r2;

        $i0 = virtualinvoke r0.<org.apache.commons.math3.optimization.fitting.GaussianFitter$ParameterGuesser$1: int compare(org.apache.commons.math3.optimization.fitting.WeightedObservedPoint,org.apache.commons.math3.optimization.fitting.WeightedObservedPoint)>($r4, $r3);

        return $i0;
    }
}
