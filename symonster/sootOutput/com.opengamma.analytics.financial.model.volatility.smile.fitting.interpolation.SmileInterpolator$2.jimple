class com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolator$2 extends com.opengamma.analytics.math.function.ParameterizedFunction
{
    final com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolator this$0;

    void <init>(com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolator)
    {
        com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolator$2 r0;
        com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolator r1;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolator$2;

        r1 := @parameter0: com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolator;

        r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolator$2: com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolator this$0> = r1;

        specialinvoke r0.<com.opengamma.analytics.math.function.ParameterizedFunction: void <init>()>();

        return;
    }

    public java.lang.Double evaluate(java.lang.Double, com.opengamma.analytics.math.matrix.DoubleMatrix1D)
    {
        com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolator$2 r0;
        java.lang.Double r1, $r4, $r6, $r8, $r9;
        com.opengamma.analytics.math.matrix.DoubleMatrix1D r2;
        double d0, d1, d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10;
        int[] $r3, $r5, $r7;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolator$2;

        r1 := @parameter0: java.lang.Double;

        r2 := @parameter1: com.opengamma.analytics.math.matrix.DoubleMatrix1D;

        $r3 = newarray (int)[1];

        $r3[0] = 0;

        $r4 = virtualinvoke r2.<com.opengamma.analytics.math.matrix.DoubleMatrix1D: java.lang.Double getEntry(int[])>($r3);

        d0 = virtualinvoke $r4.<java.lang.Double: double doubleValue()>();

        $r5 = newarray (int)[1];

        $r5[0] = 1;

        $r6 = virtualinvoke r2.<com.opengamma.analytics.math.matrix.DoubleMatrix1D: java.lang.Double getEntry(int[])>($r5);

        d1 = virtualinvoke $r6.<java.lang.Double: double doubleValue()>();

        $r7 = newarray (int)[1];

        $r7[0] = 2;

        $r8 = virtualinvoke r2.<com.opengamma.analytics.math.matrix.DoubleMatrix1D: java.lang.Double getEntry(int[])>($r7);

        d2 = virtualinvoke $r8.<java.lang.Double: double doubleValue()>();

        $d3 = virtualinvoke r1.<java.lang.Double: double doubleValue()>();

        $d4 = d1 * $d3;

        $d5 = d0 + $d4;

        $d6 = virtualinvoke r1.<java.lang.Double: double doubleValue()>();

        $d7 = d2 * $d6;

        $d8 = virtualinvoke r1.<java.lang.Double: double doubleValue()>();

        $d9 = $d7 * $d8;

        $d10 = $d5 + $d9;

        $r9 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d10);

        return $r9;
    }

    public int getNumberOfParameters()
    {
        com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolator$2 r0;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolator$2;

        return 3;
    }

    public volatile java.lang.Object evaluate(java.lang.Object, java.lang.Object)
    {
        com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolator$2 r0;
        java.lang.Object r1, r2;
        com.opengamma.analytics.math.matrix.DoubleMatrix1D $r3;
        java.lang.Double $r4, $r5;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolator$2;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r4 = (java.lang.Double) r1;

        $r3 = (com.opengamma.analytics.math.matrix.DoubleMatrix1D) r2;

        $r5 = virtualinvoke r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolator$2: java.lang.Double evaluate(java.lang.Double,com.opengamma.analytics.math.matrix.DoubleMatrix1D)>($r4, $r3);

        return $r5;
    }
}
