public class com.opengamma.analytics.financial.model.finitedifference.MarkovChainApprox extends java.lang.Object
{
    private final double _vol1;
    private final double _vol2;
    private final double _nu1;
    private final double _nu2;
    private final double _lambda12;
    private final double _lambda21;
    private final double _lambda;
    private final double _theta;
    private final double _probState1;
    private final double _t;
    private final double[] _weights;
    private final double[] _vols;

    public void <init>(double, double, double, double, double, double)
    {
        com.opengamma.analytics.financial.model.finitedifference.MarkovChainApprox r0;
        double d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, d10, d11, d12, d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21, $d22, $d23, $d24, $d25, $d26, $d27, $d28, $d29, $d30, $d31, $d32, $d33, $d34, $d35, $d36, $d37, $d38, $d39, $d40, d41, d42, $d43, $d44, $d45, $d46, $d47, $d48, $d49, $d50, $d51, $d52, $d53, $d54, $d55;
        byte $b0, $b1, $b2, $b3, $b4, $b5, $b6, $b7, $b8;
        java.lang.Object[] $r1, $r3, $r5, $r7;
        java.lang.Double $r2, $r4, $r6, $r8;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        double[] $r9, $r10;

        r0 := @this: com.opengamma.analytics.financial.model.finitedifference.MarkovChainApprox;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        d2 := @parameter2: double;

        d3 := @parameter3: double;

        d4 := @parameter4: double;

        d5 := @parameter5: double;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $b0 = d0 cmpl 0.0;

        if $b0 < 0 goto label01;

        $z0 = 1;

        goto label02;

     label01:
        $z0 = 0;

     label02:
        $r1 = newarray (java.lang.Object)[1];

        $r2 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d0);

        $r1[0] = $r2;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String,java.lang.Object[])>($z0, "The first volatility must be greater than or equal to 0; have {}", $r1);

        $b1 = d1 cmpl 0.0;

        if $b1 < 0 goto label03;

        $z1 = 1;

        goto label04;

     label03:
        $z1 = 0;

     label04:
        $r3 = newarray (java.lang.Object)[1];

        $r4 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d1);

        $r3[0] = $r4;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String,java.lang.Object[])>($z1, "The second volatility must be greater than or equal to 0; have {}", $r3);

        $b2 = d2 cmpl 0.0;

        if $b2 < 0 goto label05;

        $z2 = 1;

        goto label06;

     label05:
        $z2 = 0;

     label06:
        $r5 = newarray (java.lang.Object)[1];

        $r6 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d2);

        $r5[0] = $r6;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String,java.lang.Object[])>($z2, "The first jump parameter must be greater than or equal to 0; have {}", $r5);

        $b3 = d3 cmpl 0.0;

        if $b3 < 0 goto label07;

        $z3 = 1;

        goto label08;

     label07:
        $z3 = 0;

     label08:
        $r7 = newarray (java.lang.Object)[1];

        $r8 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d3);

        $r7[0] = $r8;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String,java.lang.Object[])>($z3, "The second jump parameter must be greater than or equal to 0; have {}", $r7);

        $b4 = d4 cmpl 0.0;

        if $b4 < 0 goto label09;

        $b7 = d4 cmpg 1.0;

        if $b7 > 0 goto label09;

        $z4 = 1;

        goto label10;

     label09:
        $z4 = 0;

     label10:
        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z4, "The probability of being in the first state must be >= 0 and <= 1");

        r0.<com.opengamma.analytics.financial.model.finitedifference.MarkovChainApprox: double _vol1> = d0;

        r0.<com.opengamma.analytics.financial.model.finitedifference.MarkovChainApprox: double _vol2> = d1;

        $d17 = d0 * d0;

        r0.<com.opengamma.analytics.financial.model.finitedifference.MarkovChainApprox: double _nu1> = $d17;

        $d18 = d1 * d1;

        r0.<com.opengamma.analytics.financial.model.finitedifference.MarkovChainApprox: double _nu2> = $d18;

        r0.<com.opengamma.analytics.financial.model.finitedifference.MarkovChainApprox: double _lambda12> = d2;

        r0.<com.opengamma.analytics.financial.model.finitedifference.MarkovChainApprox: double _lambda21> = d3;

        $d19 = d2 + d3;

        r0.<com.opengamma.analytics.financial.model.finitedifference.MarkovChainApprox: double _lambda> = $d19;

        r0.<com.opengamma.analytics.financial.model.finitedifference.MarkovChainApprox: double _probState1> = d4;

        $d20 = r0.<com.opengamma.analytics.financial.model.finitedifference.MarkovChainApprox: double _lambda>;

        $d21 = d3 / $d20;

        r0.<com.opengamma.analytics.financial.model.finitedifference.MarkovChainApprox: double _theta> = $d21;

        r0.<com.opengamma.analytics.financial.model.finitedifference.MarkovChainApprox: double _t> = d5;

        $d22 = r0.<com.opengamma.analytics.financial.model.finitedifference.MarkovChainApprox: double _probState1>;

        $d23 = r0.<com.opengamma.analytics.financial.model.finitedifference.MarkovChainApprox: double _lambda12>;

        $d24 = neg $d23;

        $d25 = $d24 * d5;

        $d26 = staticinvoke <java.lang.Math: double exp(double)>($d25);

        d6 = $d22 * $d26;

        $d27 = r0.<com.opengamma.analytics.financial.model.finitedifference.MarkovChainApprox: double _probState1>;

        $d28 = 1.0 - $d27;

        $d29 = r0.<com.opengamma.analytics.financial.model.finitedifference.MarkovChainApprox: double _lambda21>;

        $d30 = neg $d29;

        $d31 = $d30 * d5;

        $d32 = staticinvoke <java.lang.Math: double exp(double)>($d31);

        d7 = $d28 * $d32;

        d8 = specialinvoke r0.<com.opengamma.analytics.financial.model.finitedifference.MarkovChainApprox: double getM1(double)>(d5);

        d9 = specialinvoke r0.<com.opengamma.analytics.financial.model.finitedifference.MarkovChainApprox: double getModMoment(int,double,double,double,double)>(1, d6, d7, d8, d8);

        $d33 = specialinvoke r0.<com.opengamma.analytics.financial.model.finitedifference.MarkovChainApprox: double getM2(double)>(d5);

        d10 = specialinvoke r0.<com.opengamma.analytics.financial.model.finitedifference.MarkovChainApprox: double getModMoment(int,double,double,double,double)>(2, d6, d7, d8, $d33);

        $d34 = specialinvoke r0.<com.opengamma.analytics.financial.model.finitedifference.MarkovChainApprox: double getM3(double)>(d5);

        d11 = specialinvoke r0.<com.opengamma.analytics.financial.model.finitedifference.MarkovChainApprox: double getModMoment(int,double,double,double,double)>(3, d6, d7, d8, $d34);

        d12 = d11 / d10;

        $d35 = neg d12;

        $d36 = staticinvoke <com.opengamma.analytics.math.FunctionUtils: double square(double)>(d12);

        $d37 = 4.0 * d10;

        $d38 = $d36 + $d37;

        $d39 = staticinvoke <java.lang.Math: double sqrt(double)>($d38);

        $d40 = $d35 + $d39;

        d41 = $d40 / 2.0;

        $b8 = d41 cmpl d9;

        if $b8 <= 0 goto label11;

        $d15 = r0.<com.opengamma.analytics.financial.model.finitedifference.MarkovChainApprox: double _nu1>;

        $d16 = d9 - $d15;

        d41 = $d16 / 2.0;

        d42 = d10 / d41;

        goto label12;

     label11:
        d42 = d41 + d12;

     label12:
        $d14 = d41 + d42;

        d13 = d42 / $d14;

        $b5 = d13 cmpl 0.0;

        if $b5 < 0 goto label13;

        $b6 = d13 cmpg 1.0;

        if $b6 > 0 goto label13;

        $z5 = 1;

        goto label14;

     label13:
        $z5 = 0;

     label14:
        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z5, "weight not physical");

        $r9 = newarray (double)[4];

        $r9[0] = d6;

        $r9[1] = d7;

        $d43 = 1.0 - d6;

        $d44 = $d43 - d7;

        $d45 = d13 * $d44;

        $r9[2] = $d45;

        $d46 = 1.0 - d13;

        $d47 = 1.0 - d6;

        $d48 = $d47 - d7;

        $d49 = $d46 * $d48;

        $r9[3] = $d49;

        r0.<com.opengamma.analytics.financial.model.finitedifference.MarkovChainApprox: double[] _weights> = $r9;

        $r10 = newarray (double)[4];

        $d50 = r0.<com.opengamma.analytics.financial.model.finitedifference.MarkovChainApprox: double _vol1>;

        $r10[0] = $d50;

        $d51 = r0.<com.opengamma.analytics.financial.model.finitedifference.MarkovChainApprox: double _vol2>;

        $r10[1] = $d51;

        $d52 = d9 - d41;

        $d53 = staticinvoke <java.lang.Math: double sqrt(double)>($d52);

        $r10[2] = $d53;

        $d54 = d9 + d42;

        $d55 = staticinvoke <java.lang.Math: double sqrt(double)>($d54);

        $r10[3] = $d55;

        r0.<com.opengamma.analytics.financial.model.finitedifference.MarkovChainApprox: double[] _vols> = $r10;

        return;
    }

    public double price(double, double, double)
    {
        com.opengamma.analytics.financial.model.finitedifference.MarkovChainApprox r0;
        double d0, d1, d2, $d3, $d4, $d5, $d6, $d7, d8;
        com.opengamma.analytics.math.function.Function1D r3;
        com.opengamma.analytics.financial.model.option.pricing.analytic.formula.EuropeanVanillaOption $r5;
        com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackPriceFunction $r6;
        double[] $r7, $r9, $r10;
        int $i0, i1;
        com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackFunctionData $r8;
        java.lang.Object $r11;
        java.lang.Double $r12;

        r0 := @this: com.opengamma.analytics.financial.model.finitedifference.MarkovChainApprox;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        d2 := @parameter2: double;

        $r5 = new com.opengamma.analytics.financial.model.option.pricing.analytic.formula.EuropeanVanillaOption;

        $d3 = r0.<com.opengamma.analytics.financial.model.finitedifference.MarkovChainApprox: double _t>;

        specialinvoke $r5.<com.opengamma.analytics.financial.model.option.pricing.analytic.formula.EuropeanVanillaOption: void <init>(double,double,boolean)>(d2, $d3, 1);

        $r6 = new com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackPriceFunction;

        specialinvoke $r6.<com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackPriceFunction: void <init>()>();

        r3 = virtualinvoke $r6.<com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackPriceFunction: com.opengamma.analytics.math.function.Function1D getPriceFunction(com.opengamma.analytics.financial.model.option.pricing.analytic.formula.EuropeanVanillaOption)>($r5);

        d8 = 0.0;

        i1 = 0;

     label1:
        $r7 = r0.<com.opengamma.analytics.financial.model.finitedifference.MarkovChainApprox: double[] _weights>;

        $i0 = lengthof $r7;

        if i1 >= $i0 goto label2;

        $r8 = new com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackFunctionData;

        $r9 = r0.<com.opengamma.analytics.financial.model.finitedifference.MarkovChainApprox: double[] _vols>;

        $d4 = $r9[i1];

        specialinvoke $r8.<com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackFunctionData: void <init>(double,double,double)>(d0, d1, $d4);

        $r10 = r0.<com.opengamma.analytics.financial.model.finitedifference.MarkovChainApprox: double[] _weights>;

        $d5 = $r10[i1];

        $r11 = virtualinvoke r3.<com.opengamma.analytics.math.function.Function1D: java.lang.Object evaluate(java.lang.Object)>($r8);

        $r12 = (java.lang.Double) $r11;

        $d6 = virtualinvoke $r12.<java.lang.Double: double doubleValue()>();

        $d7 = $d5 * $d6;

        d8 = d8 + $d7;

        i1 = i1 + 1;

        goto label1;

     label2:
        return d8;
    }

    public double priceCEV(double, double, double, double)
    {
        com.opengamma.analytics.financial.model.finitedifference.MarkovChainApprox r0;
        double d0, d1, d2, d3, $d4, $d5, $d6, $d7, $d8, d9;
        com.opengamma.analytics.math.function.Function1D r3;
        com.opengamma.analytics.financial.model.option.pricing.analytic.formula.EuropeanVanillaOption $r5;
        com.opengamma.analytics.financial.model.option.pricing.analytic.formula.CEVPriceFunction $r6;
        double[] $r7, $r9, $r10;
        int $i0, i1;
        com.opengamma.analytics.financial.model.option.pricing.analytic.formula.CEVFunctionData $r8;
        java.lang.Object $r11;
        java.lang.Double $r12;

        r0 := @this: com.opengamma.analytics.financial.model.finitedifference.MarkovChainApprox;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        d2 := @parameter2: double;

        d3 := @parameter3: double;

        $r5 = new com.opengamma.analytics.financial.model.option.pricing.analytic.formula.EuropeanVanillaOption;

        $d4 = r0.<com.opengamma.analytics.financial.model.finitedifference.MarkovChainApprox: double _t>;

        specialinvoke $r5.<com.opengamma.analytics.financial.model.option.pricing.analytic.formula.EuropeanVanillaOption: void <init>(double,double,boolean)>(d2, $d4, 1);

        $r6 = new com.opengamma.analytics.financial.model.option.pricing.analytic.formula.CEVPriceFunction;

        specialinvoke $r6.<com.opengamma.analytics.financial.model.option.pricing.analytic.formula.CEVPriceFunction: void <init>()>();

        r3 = virtualinvoke $r6.<com.opengamma.analytics.financial.model.option.pricing.analytic.formula.CEVPriceFunction: com.opengamma.analytics.math.function.Function1D getPriceFunction(com.opengamma.analytics.financial.model.option.pricing.analytic.formula.EuropeanVanillaOption)>($r5);

        d9 = 0.0;

        i1 = 0;

     label1:
        $r7 = r0.<com.opengamma.analytics.financial.model.finitedifference.MarkovChainApprox: double[] _weights>;

        $i0 = lengthof $r7;

        if i1 >= $i0 goto label2;

        $r8 = new com.opengamma.analytics.financial.model.option.pricing.analytic.formula.CEVFunctionData;

        $r9 = r0.<com.opengamma.analytics.financial.model.finitedifference.MarkovChainApprox: double[] _vols>;

        $d5 = $r9[i1];

        specialinvoke $r8.<com.opengamma.analytics.financial.model.option.pricing.analytic.formula.CEVFunctionData: void <init>(double,double,double,double)>(d0, d1, $d5, d3);

        $r10 = r0.<com.opengamma.analytics.financial.model.finitedifference.MarkovChainApprox: double[] _weights>;

        $d6 = $r10[i1];

        $r11 = virtualinvoke r3.<com.opengamma.analytics.math.function.Function1D: java.lang.Object evaluate(java.lang.Object)>($r8);

        $r12 = (java.lang.Double) $r11;

        $d7 = virtualinvoke $r12.<java.lang.Double: double doubleValue()>();

        $d8 = $d6 * $d7;

        d9 = d9 + $d8;

        i1 = i1 + 1;

        goto label1;

     label2:
        return d9;
    }

    private double getModMoment(int, double, double, double, double)
    {
        com.opengamma.analytics.financial.model.finitedifference.MarkovChainApprox r0;
        int i0;
        double d0, d1, d2, d3, d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21, $d22, $d23, $d24, $d25;
        boolean $z0;

        r0 := @this: com.opengamma.analytics.financial.model.finitedifference.MarkovChainApprox;

        i0 := @parameter0: int;

        d0 := @parameter1: double;

        d1 := @parameter2: double;

        d2 := @parameter3: double;

        d3 := @parameter4: double;

        if i0 <= 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z0, "n must be greater than zero");

        $d5 = 1.0 - d0;

        d4 = $d5 - d1;

        if i0 != 1 goto label3;

        $d19 = r0.<com.opengamma.analytics.financial.model.finitedifference.MarkovChainApprox: double _nu1>;

        $d20 = d0 * $d19;

        $d23 = d3 - $d20;

        $d21 = r0.<com.opengamma.analytics.financial.model.finitedifference.MarkovChainApprox: double _nu2>;

        $d22 = d1 * $d21;

        $d24 = $d23 - $d22;

        $d25 = $d24 / d4;

        return $d25;

     label3:
        $d6 = r0.<com.opengamma.analytics.financial.model.finitedifference.MarkovChainApprox: double _nu1>;

        $d8 = $d6 - d2;

        $d7 = (double) i0;

        $d9 = staticinvoke <java.lang.Math: double pow(double,double)>($d8, $d7);

        $d10 = d0 * $d9;

        $d14 = d3 - $d10;

        $d11 = r0.<com.opengamma.analytics.financial.model.finitedifference.MarkovChainApprox: double _nu2>;

        $d13 = $d11 - d2;

        $d12 = (double) i0;

        $d15 = staticinvoke <java.lang.Math: double pow(double,double)>($d13, $d12);

        $d16 = d1 * $d15;

        $d17 = $d14 - $d16;

        $d18 = $d17 / d4;

        return $d18;
    }

    public double[] getMoments(double)
    {
        com.opengamma.analytics.financial.model.finitedifference.MarkovChainApprox r0;
        double d0, d1, d2, d3;
        double[] $r1;

        r0 := @this: com.opengamma.analytics.financial.model.finitedifference.MarkovChainApprox;

        d0 := @parameter0: double;

        d1 = specialinvoke r0.<com.opengamma.analytics.financial.model.finitedifference.MarkovChainApprox: double getM1(double)>(d0);

        d2 = specialinvoke r0.<com.opengamma.analytics.financial.model.finitedifference.MarkovChainApprox: double getM2(double)>(d0);

        d3 = specialinvoke r0.<com.opengamma.analytics.financial.model.finitedifference.MarkovChainApprox: double getM3(double)>(d0);

        $r1 = newarray (double)[3];

        $r1[0] = d1;

        $r1[1] = d2;

        $r1[2] = d3;

        return $r1;
    }

    private double getM1(double)
    {
        com.opengamma.analytics.financial.model.finitedifference.MarkovChainApprox r0;
        double d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13;

        r0 := @this: com.opengamma.analytics.financial.model.finitedifference.MarkovChainApprox;

        d0 := @parameter0: double;

        $d2 = r0.<com.opengamma.analytics.financial.model.finitedifference.MarkovChainApprox: double _vol2>;

        $d1 = r0.<com.opengamma.analytics.financial.model.finitedifference.MarkovChainApprox: double _vol2>;

        $d9 = $d2 * $d1;

        $d4 = r0.<com.opengamma.analytics.financial.model.finitedifference.MarkovChainApprox: double _vol2>;

        $d3 = r0.<com.opengamma.analytics.financial.model.finitedifference.MarkovChainApprox: double _vol2>;

        $d8 = $d4 * $d3;

        $d6 = r0.<com.opengamma.analytics.financial.model.finitedifference.MarkovChainApprox: double _vol1>;

        $d5 = r0.<com.opengamma.analytics.financial.model.finitedifference.MarkovChainApprox: double _vol1>;

        $d7 = $d6 * $d5;

        $d10 = $d8 - $d7;

        $d11 = specialinvoke r0.<com.opengamma.analytics.financial.model.finitedifference.MarkovChainApprox: double getI1(double)>(d0);

        $d12 = $d10 * $d11;

        $d13 = $d9 - $d12;

        return $d13;
    }

    private double getM2(double)
    {
        com.opengamma.analytics.financial.model.finitedifference.MarkovChainApprox r0;
        double d0, d1, d2, d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13;

        r0 := @this: com.opengamma.analytics.financial.model.finitedifference.MarkovChainApprox;

        d0 := @parameter0: double;

        d1 = specialinvoke r0.<com.opengamma.analytics.financial.model.finitedifference.MarkovChainApprox: double getI1(double)>(d0);

        d2 = specialinvoke r0.<com.opengamma.analytics.financial.model.finitedifference.MarkovChainApprox: double getI2(double)>(d0);

        $d4 = d1 * d1;

        d3 = d2 - $d4;

        $d6 = r0.<com.opengamma.analytics.financial.model.finitedifference.MarkovChainApprox: double _vol1>;

        $d5 = r0.<com.opengamma.analytics.financial.model.finitedifference.MarkovChainApprox: double _vol1>;

        $d10 = $d6 * $d5;

        $d8 = r0.<com.opengamma.analytics.financial.model.finitedifference.MarkovChainApprox: double _vol2>;

        $d7 = r0.<com.opengamma.analytics.financial.model.finitedifference.MarkovChainApprox: double _vol2>;

        $d9 = $d8 * $d7;

        $d11 = $d10 - $d9;

        $d12 = staticinvoke <com.opengamma.analytics.math.FunctionUtils: double square(double)>($d11);

        $d13 = $d12 * d3;

        return $d13;
    }

    private double getM3(double)
    {
        com.opengamma.analytics.financial.model.finitedifference.MarkovChainApprox r0;
        double d0, d1, d2, d3, d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18;

        r0 := @this: com.opengamma.analytics.financial.model.finitedifference.MarkovChainApprox;

        d0 := @parameter0: double;

        d1 = specialinvoke r0.<com.opengamma.analytics.financial.model.finitedifference.MarkovChainApprox: double getI1(double)>(d0);

        d2 = specialinvoke r0.<com.opengamma.analytics.financial.model.finitedifference.MarkovChainApprox: double getI2(double)>(d0);

        d3 = specialinvoke r0.<com.opengamma.analytics.financial.model.finitedifference.MarkovChainApprox: double getI3(double)>(d0);

        $d5 = 3.0 * d1;

        $d6 = $d5 * d2;

        $d7 = d3 - $d6;

        $d8 = staticinvoke <com.opengamma.analytics.math.FunctionUtils: double cube(double)>(d1);

        $d9 = 2.0 * $d8;

        d4 = $d7 + $d9;

        $d11 = r0.<com.opengamma.analytics.financial.model.finitedifference.MarkovChainApprox: double _vol1>;

        $d10 = r0.<com.opengamma.analytics.financial.model.finitedifference.MarkovChainApprox: double _vol1>;

        $d15 = $d11 * $d10;

        $d13 = r0.<com.opengamma.analytics.financial.model.finitedifference.MarkovChainApprox: double _vol2>;

        $d12 = r0.<com.opengamma.analytics.financial.model.finitedifference.MarkovChainApprox: double _vol2>;

        $d14 = $d13 * $d12;

        $d16 = $d15 - $d14;

        $d17 = staticinvoke <com.opengamma.analytics.math.FunctionUtils: double cube(double)>($d16);

        $d18 = $d17 * d4;

        return $d18;
    }

    private double getI1(double)
    {
        com.opengamma.analytics.financial.model.finitedifference.MarkovChainApprox r0;
        double d0, d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15;
        byte $b0;

        r0 := @this: com.opengamma.analytics.financial.model.finitedifference.MarkovChainApprox;

        d0 := @parameter0: double;

        $d2 = r0.<com.opengamma.analytics.financial.model.finitedifference.MarkovChainApprox: double _lambda>;

        d1 = $d2 * d0;

        $b0 = d1 cmpg 1.0E-7;

        if $b0 >= 0 goto label1;

        $d15 = r0.<com.opengamma.analytics.financial.model.finitedifference.MarkovChainApprox: double _probState1>;

        return $d15;

     label1:
        $d8 = r0.<com.opengamma.analytics.financial.model.finitedifference.MarkovChainApprox: double _theta>;

        $d4 = r0.<com.opengamma.analytics.financial.model.finitedifference.MarkovChainApprox: double _probState1>;

        $d3 = r0.<com.opengamma.analytics.financial.model.finitedifference.MarkovChainApprox: double _theta>;

        $d9 = $d4 - $d3;

        $d5 = r0.<com.opengamma.analytics.financial.model.finitedifference.MarkovChainApprox: double _lambda>;

        $d6 = neg $d5;

        $d7 = $d6 * d0;

        $d10 = staticinvoke <java.lang.Math: double exp(double)>($d7);

        $d11 = 1.0 - $d10;

        $d12 = $d9 * $d11;

        $d13 = $d12 / d1;

        $d14 = $d8 + $d13;

        return $d14;
    }

    private double getI2(double)
    {
        com.opengamma.analytics.financial.model.finitedifference.MarkovChainApprox r0;
        double d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21, $d22, $d23, $d24, $d25, $d26, $d27, $d28, $d29, $d30, $d31, $d32, $d33, $d34, $d35, $d36, $d37, $d38, $d39, $d40, $d41, $d42, $d43, $d44, $d45, $d46, $d47, $d48, $d49, $d50, $d51, $d52, $d53, $d54, $d55, $d56, $d57, $d58, $d59, $d60;
        byte $b0;

        r0 := @this: com.opengamma.analytics.financial.model.finitedifference.MarkovChainApprox;

        d0 := @parameter0: double;

        d1 = d0 * d0;

        $d10 = r0.<com.opengamma.analytics.financial.model.finitedifference.MarkovChainApprox: double _lambda>;

        d2 = $d10 * d0;

        $b0 = d2 cmpg 1.0E-7;

        if $b0 >= 0 goto label1;

        $d60 = r0.<com.opengamma.analytics.financial.model.finitedifference.MarkovChainApprox: double _probState1>;

        return $d60;

     label1:
        d3 = r0.<com.opengamma.analytics.financial.model.finitedifference.MarkovChainApprox: double _theta>;

        d4 = d3 * d3;

        d5 = r0.<com.opengamma.analytics.financial.model.finitedifference.MarkovChainApprox: double _lambda>;

        d6 = d5 * d5;

        d7 = r0.<com.opengamma.analytics.financial.model.finitedifference.MarkovChainApprox: double _probState1>;

        $d21 = d4 * d6;

        $d11 = 2.0 * d3;

        $d12 = $d11 * d5;

        $d15 = $d12 * d7;

        $d13 = 4.0 * d4;

        $d14 = $d13 * d5;

        $d18 = $d15 - $d14;

        $d16 = 2.0 * d3;

        $d17 = $d16 * d5;

        $d19 = $d18 + $d17;

        $d20 = $d19 / d0;

        $d31 = $d21 + $d20;

        $d22 = -4.0 * d3;

        $d24 = $d22 * d7;

        $d23 = 2.0 * d7;

        $d26 = $d24 + $d23;

        $d25 = 6.0 * d4;

        $d28 = $d26 + $d25;

        $d27 = 4.0 * d3;

        $d29 = $d28 - $d27;

        $d30 = $d29 / d1;

        d8 = $d31 + $d30;

        $d32 = 2.0 * d3;

        $d33 = $d32 * d5;

        $d36 = $d33 * d7;

        $d34 = 2.0 * d5;

        $d35 = $d34 * d7;

        $d39 = $d36 - $d35;

        $d37 = 2.0 * d4;

        $d38 = $d37 * d5;

        $d42 = $d39 - $d38;

        $d40 = 2.0 * d3;

        $d41 = $d40 * d5;

        $d43 = $d42 + $d41;

        $d53 = $d43 / d0;

        $d44 = 4.0 * d3;

        $d46 = $d44 * d7;

        $d45 = 2.0 * d7;

        $d48 = $d46 - $d45;

        $d47 = 6.0 * d4;

        $d50 = $d48 - $d47;

        $d49 = 4.0 * d3;

        $d51 = $d50 + $d49;

        $d52 = $d51 / d1;

        d9 = $d53 + $d52;

        $d54 = neg d5;

        $d55 = $d54 * d0;

        $d56 = staticinvoke <java.lang.Math: double exp(double)>($d55);

        $d57 = d9 * $d56;

        $d58 = d8 + $d57;

        $d59 = $d58 / d6;

        return $d59;
    }

    private double getI3(double)
    {
        com.opengamma.analytics.financial.model.finitedifference.MarkovChainApprox r0;
        double d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, d10, d11, d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21, $d22, $d23, $d24, $d25, $d26, $d27, $d28, $d29, $d30, $d31, $d32, $d33, $d34, $d35, $d36, $d37, $d38, $d39, $d40, $d41, $d42, $d43, $d44, $d45, $d46, $d47, $d48, $d49, $d50, $d51, $d52, $d53, $d54, $d55, $d56, $d57, $d58, $d59, $d60, $d61, $d62, $d63, $d64, $d65, $d66, $d67, $d68, $d69, $d70, $d71, $d72, $d73, $d74, $d75, $d76, $d77, $d78, $d79, $d80, $d81, $d82, $d83, $d84, $d85, $d86, $d87, $d88, $d89, $d90, $d91, $d92, $d93, $d94, $d95, $d96, $d97, $d98, $d99, $d100, $d101, $d102, $d103, $d104, $d105, $d106, $d107, $d108, $d109, $d110, $d111, $d112, $d113, $d114, $d115, $d116, $d117, $d118, $d119;
        byte $b0;

        r0 := @this: com.opengamma.analytics.financial.model.finitedifference.MarkovChainApprox;

        d0 := @parameter0: double;

        d1 = d0 * d0;

        d2 = d1 * d0;

        $d13 = r0.<com.opengamma.analytics.financial.model.finitedifference.MarkovChainApprox: double _lambda>;

        d3 = $d13 * d0;

        $b0 = d3 cmpg 1.0E-7;

        if $b0 >= 0 goto label1;

        $d119 = r0.<com.opengamma.analytics.financial.model.finitedifference.MarkovChainApprox: double _probState1>;

        return $d119;

     label1:
        d4 = r0.<com.opengamma.analytics.financial.model.finitedifference.MarkovChainApprox: double _theta>;

        d5 = d4 * d4;

        d6 = d5 * d4;

        d7 = r0.<com.opengamma.analytics.financial.model.finitedifference.MarkovChainApprox: double _lambda>;

        d8 = d7 * d7;

        d9 = d8 * d7;

        d10 = r0.<com.opengamma.analytics.financial.model.finitedifference.MarkovChainApprox: double _probState1>;

        $d24 = d6 * d9;

        $d14 = 3.0 * d5;

        $d15 = $d14 * d8;

        $d18 = $d15 * d10;

        $d16 = 9.0 * d6;

        $d17 = $d16 * d8;

        $d21 = $d18 - $d17;

        $d19 = 6.0 * d5;

        $d20 = $d19 * d8;

        $d22 = $d21 + $d20;

        $d23 = $d22 / d0;

        $d42 = $d24 + $d23;

        $d25 = -18.0 * d5;

        $d26 = $d25 * d7;

        $d30 = $d26 * d10;

        $d27 = 12.0 * d4;

        $d28 = $d27 * d7;

        $d29 = $d28 * d10;

        $d33 = $d30 + $d29;

        $d31 = 36.0 * d6;

        $d32 = $d31 * d7;

        $d36 = $d33 + $d32;

        $d34 = 36.0 * d5;

        $d35 = $d34 * d7;

        $d39 = $d36 - $d35;

        $d37 = 6.0 * d4;

        $d38 = $d37 * d7;

        $d40 = $d39 + $d38;

        $d41 = $d40 / d1;

        $d57 = $d42 + $d41;

        $d43 = 36.0 * d5;

        $d46 = $d43 * d10;

        $d44 = 36.0 * d4;

        $d45 = $d44 * d10;

        $d48 = $d46 - $d45;

        $d47 = 6.0 * d10;

        $d50 = $d48 + $d47;

        $d49 = 60.0 * d6;

        $d52 = $d50 - $d49;

        $d51 = 72.0 * d5;

        $d54 = $d52 + $d51;

        $d53 = 18.0 * d4;

        $d55 = $d54 - $d53;

        $d56 = $d55 / d2;

        d11 = $d57 + $d56;

        $d58 = -3.0 * d5;

        $d59 = $d58 * d8;

        $d63 = $d59 * d10;

        $d60 = 6.0 * d4;

        $d61 = $d60 * d8;

        $d62 = $d61 * d10;

        $d66 = $d63 + $d62;

        $d64 = 3.0 * d8;

        $d65 = $d64 * d10;

        $d69 = $d66 - $d65;

        $d67 = 3.0 * d6;

        $d68 = $d67 * d8;

        $d72 = $d69 + $d68;

        $d70 = 6.0 * d5;

        $d71 = $d70 * d8;

        $d75 = $d72 - $d71;

        $d73 = 3.0 * d4;

        $d74 = $d73 * d8;

        $d76 = $d75 + $d74;

        $d97 = $d76 / d0;

        $d77 = -18.0 * d5;

        $d78 = $d77 * d7;

        $d82 = $d78 * d10;

        $d79 = 24.0 * d4;

        $d80 = $d79 * d7;

        $d81 = $d80 * d10;

        $d85 = $d82 + $d81;

        $d83 = 6.0 * d7;

        $d84 = $d83 * d10;

        $d88 = $d85 - $d84;

        $d86 = 24.0 * d6;

        $d87 = $d86 * d7;

        $d91 = $d88 + $d87;

        $d89 = 36.0 * d5;

        $d90 = $d89 * d7;

        $d94 = $d91 - $d90;

        $d92 = 12.0 * d4;

        $d93 = $d92 * d7;

        $d95 = $d94 + $d93;

        $d96 = $d95 / d1;

        $d112 = $d97 + $d96;

        $d98 = -36.0 * d5;

        $d101 = $d98 * d10;

        $d99 = 36.0 * d4;

        $d100 = $d99 * d10;

        $d103 = $d101 + $d100;

        $d102 = 6.0 * d10;

        $d105 = $d103 - $d102;

        $d104 = 60.0 * d6;

        $d107 = $d105 + $d104;

        $d106 = 72.0 * d5;

        $d109 = $d107 - $d106;

        $d108 = 18.0 * d4;

        $d110 = $d109 + $d108;

        $d111 = $d110 / d2;

        d12 = $d112 + $d111;

        $d113 = neg d7;

        $d114 = $d113 * d0;

        $d115 = staticinvoke <java.lang.Math: double exp(double)>($d114);

        $d116 = d12 * $d115;

        $d117 = d11 + $d116;

        $d118 = $d117 / d9;

        return $d118;
    }
}
