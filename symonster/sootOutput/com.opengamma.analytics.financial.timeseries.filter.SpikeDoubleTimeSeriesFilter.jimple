public class com.opengamma.analytics.financial.timeseries.filter.SpikeDoubleTimeSeriesFilter extends com.opengamma.analytics.financial.timeseries.filter.TimeSeriesFilter
{
    private static final org.slf4j.Logger s_logger;
    private static final com.opengamma.timeseries.date.localdate.LocalDateDoubleTimeSeries EMPTY_SERIES;
    private double _maxPercentageMove;

    public void <init>(double)
    {
        com.opengamma.analytics.financial.timeseries.filter.SpikeDoubleTimeSeriesFilter r0;
        double d0, $d1;
        byte $b0;
        org.slf4j.Logger $r1;

        r0 := @this: com.opengamma.analytics.financial.timeseries.filter.SpikeDoubleTimeSeriesFilter;

        d0 := @parameter0: double;

        specialinvoke r0.<com.opengamma.analytics.financial.timeseries.filter.TimeSeriesFilter: void <init>()>();

        $b0 = d0 cmpg 0.0;

        if $b0 >= 0 goto label1;

        $r1 = <com.opengamma.analytics.financial.timeseries.filter.SpikeDoubleTimeSeriesFilter: org.slf4j.Logger s_logger>;

        interfaceinvoke $r1.<org.slf4j.Logger: void info(java.lang.String)>("Maximum percentage move must be positive; using absolute value");

     label1:
        $d1 = staticinvoke <java.lang.Math: double abs(double)>(d0);

        r0.<com.opengamma.analytics.financial.timeseries.filter.SpikeDoubleTimeSeriesFilter: double _maxPercentageMove> = $d1;

        return;
    }

    public void setMaxPercentageMove(double)
    {
        com.opengamma.analytics.financial.timeseries.filter.SpikeDoubleTimeSeriesFilter r0;
        double d0, $d1;
        byte $b0;
        org.slf4j.Logger $r1;

        r0 := @this: com.opengamma.analytics.financial.timeseries.filter.SpikeDoubleTimeSeriesFilter;

        d0 := @parameter0: double;

        $b0 = d0 cmpg 0.0;

        if $b0 >= 0 goto label1;

        $r1 = <com.opengamma.analytics.financial.timeseries.filter.SpikeDoubleTimeSeriesFilter: org.slf4j.Logger s_logger>;

        interfaceinvoke $r1.<org.slf4j.Logger: void info(java.lang.String)>("Maximum percentage move must be positive; using absolute value");

     label1:
        $d1 = staticinvoke <java.lang.Math: double abs(double)>(d0);

        r0.<com.opengamma.analytics.financial.timeseries.filter.SpikeDoubleTimeSeriesFilter: double _maxPercentageMove> = $d1;

        return;
    }

    public com.opengamma.analytics.financial.timeseries.filter.FilteredTimeSeries evaluate(com.opengamma.timeseries.date.localdate.LocalDateDoubleTimeSeries)
    {
        com.opengamma.analytics.financial.timeseries.filter.SpikeDoubleTimeSeriesFilter r0;
        com.opengamma.timeseries.date.localdate.LocalDateDoubleTimeSeries r1, $r15, $r16;
        int i0, $i2, $i3, $i5, $i6, i7, i8, i9, i10;
        int[] r2, r4;
        double[] r3, r5;
        com.opengamma.timeseries.date.localdate.LocalDateDoubleEntryIterator r6;
        boolean $z0, $z1;
        java.lang.Object $r8, $r11;
        java.lang.Double $r9, $r12;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, d8, d9;
        byte $b1, $b4;
        com.opengamma.analytics.financial.timeseries.filter.FilteredTimeSeries $r10, $r14;
        org.slf4j.Logger $r13;

        r0 := @this: com.opengamma.analytics.financial.timeseries.filter.SpikeDoubleTimeSeriesFilter;

        r1 := @parameter0: com.opengamma.timeseries.date.localdate.LocalDateDoubleTimeSeries;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "ts");

        $z0 = interfaceinvoke r1.<com.opengamma.timeseries.date.localdate.LocalDateDoubleTimeSeries: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        $r13 = <com.opengamma.analytics.financial.timeseries.filter.SpikeDoubleTimeSeriesFilter: org.slf4j.Logger s_logger>;

        interfaceinvoke $r13.<org.slf4j.Logger: void info(java.lang.String)>("Time series was empty");

        $r14 = new com.opengamma.analytics.financial.timeseries.filter.FilteredTimeSeries;

        $r16 = <com.opengamma.analytics.financial.timeseries.filter.SpikeDoubleTimeSeriesFilter: com.opengamma.timeseries.date.localdate.LocalDateDoubleTimeSeries EMPTY_SERIES>;

        $r15 = <com.opengamma.analytics.financial.timeseries.filter.SpikeDoubleTimeSeriesFilter: com.opengamma.timeseries.date.localdate.LocalDateDoubleTimeSeries EMPTY_SERIES>;

        specialinvoke $r14.<com.opengamma.analytics.financial.timeseries.filter.FilteredTimeSeries: void <init>(com.opengamma.timeseries.date.localdate.LocalDateDoubleTimeSeries,com.opengamma.timeseries.date.localdate.LocalDateDoubleTimeSeries)>($r16, $r15);

        return $r14;

     label1:
        i0 = interfaceinvoke r1.<com.opengamma.timeseries.date.localdate.LocalDateDoubleTimeSeries: int size()>();

        r2 = newarray (int)[i0];

        r3 = newarray (double)[i0];

        r4 = newarray (int)[i0];

        r5 = newarray (double)[i0];

        r6 = interfaceinvoke r1.<com.opengamma.timeseries.date.localdate.LocalDateDoubleTimeSeries: com.opengamma.timeseries.date.localdate.LocalDateDoubleEntryIterator iterator()>();

        i7 = interfaceinvoke r6.<com.opengamma.timeseries.date.localdate.LocalDateDoubleEntryIterator: int nextTimeFast()>();

        $r8 = interfaceinvoke r6.<com.opengamma.timeseries.date.localdate.LocalDateDoubleEntryIterator: java.lang.Object currentValue()>();

        $r9 = (java.lang.Double) $r8;

        d8 = virtualinvoke $r9.<java.lang.Double: double doubleValue()>();

        i8 = 0;

        d9 = 0.0;

        i9 = 0;

        i10 = 0;

     label2:
        $z1 = interfaceinvoke r6.<com.opengamma.timeseries.date.localdate.LocalDateDoubleEntryIterator: boolean hasNext()>();

        if $z1 == 0 goto label5;

        i8 = interfaceinvoke r6.<com.opengamma.timeseries.date.localdate.LocalDateDoubleEntryIterator: int nextTimeFast()>();

        $r11 = interfaceinvoke r6.<com.opengamma.timeseries.date.localdate.LocalDateDoubleEntryIterator: java.lang.Object currentValue()>();

        $r12 = (java.lang.Double) $r11;

        d9 = virtualinvoke $r12.<java.lang.Double: double doubleValue()>();

        $d4 = d8 / d9;

        $d5 = $d4 - 1.0;

        $d6 = staticinvoke <java.lang.Math: double abs(double)>($d5);

        $d7 = r0.<com.opengamma.analytics.financial.timeseries.filter.SpikeDoubleTimeSeriesFilter: double _maxPercentageMove>;

        $b4 = $d6 cmpg $d7;

        if $b4 >= 0 goto label3;

        r2[i9] = i7;

        $i6 = i9;

        i9 = i9 + 1;

        r3[$i6] = d8;

        goto label4;

     label3:
        r4[i10] = i7;

        $i5 = i10;

        i10 = i10 + 1;

        r5[$i5] = d8;

     label4:
        i7 = i8;

        d8 = d9;

        goto label2;

     label5:
        $d0 = d9 / d8;

        $d1 = $d0 - 1.0;

        $d2 = staticinvoke <java.lang.Math: double abs(double)>($d1);

        $d3 = r0.<com.opengamma.analytics.financial.timeseries.filter.SpikeDoubleTimeSeriesFilter: double _maxPercentageMove>;

        $b1 = $d2 cmpg $d3;

        if $b1 >= 0 goto label6;

        r2[i9] = i8;

        $i3 = i9;

        i9 = i9 + 1;

        r3[$i3] = d9;

        goto label7;

     label6:
        r4[i10] = i8;

        $i2 = i10;

        i10 = i10 + 1;

        r5[$i2] = d9;

     label7:
        $r10 = virtualinvoke r0.<com.opengamma.analytics.financial.timeseries.filter.SpikeDoubleTimeSeriesFilter: com.opengamma.analytics.financial.timeseries.filter.FilteredTimeSeries getFilteredSeries(int[],double[],int,int[],double[],int)>(r2, r3, i9, r4, r5, i10);

        return $r10;
    }

    public volatile java.lang.Object evaluate(java.lang.Object)
    {
        com.opengamma.analytics.financial.timeseries.filter.SpikeDoubleTimeSeriesFilter r0;
        java.lang.Object r1;
        com.opengamma.timeseries.date.localdate.LocalDateDoubleTimeSeries $r2;
        com.opengamma.analytics.financial.timeseries.filter.FilteredTimeSeries $r3;

        r0 := @this: com.opengamma.analytics.financial.timeseries.filter.SpikeDoubleTimeSeriesFilter;

        r1 := @parameter0: java.lang.Object;

        $r2 = (com.opengamma.timeseries.date.localdate.LocalDateDoubleTimeSeries) r1;

        $r3 = virtualinvoke r0.<com.opengamma.analytics.financial.timeseries.filter.SpikeDoubleTimeSeriesFilter: com.opengamma.analytics.financial.timeseries.filter.FilteredTimeSeries evaluate(com.opengamma.timeseries.date.localdate.LocalDateDoubleTimeSeries)>($r2);

        return $r3;
    }

    static void <clinit>()
    {
        org.slf4j.Logger $r0;
        com.opengamma.timeseries.date.localdate.ImmutableLocalDateDoubleTimeSeries $r1;

        $r0 = staticinvoke <org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>(class "com/opengamma/analytics/financial/timeseries/filter/SpikeDoubleTimeSeriesFilter");

        <com.opengamma.analytics.financial.timeseries.filter.SpikeDoubleTimeSeriesFilter: org.slf4j.Logger s_logger> = $r0;

        $r1 = <com.opengamma.timeseries.date.localdate.ImmutableLocalDateDoubleTimeSeries: com.opengamma.timeseries.date.localdate.ImmutableLocalDateDoubleTimeSeries EMPTY_SERIES>;

        <com.opengamma.analytics.financial.timeseries.filter.SpikeDoubleTimeSeriesFilter: com.opengamma.timeseries.date.localdate.LocalDateDoubleTimeSeries EMPTY_SERIES> = $r1;

        return;
    }
}
