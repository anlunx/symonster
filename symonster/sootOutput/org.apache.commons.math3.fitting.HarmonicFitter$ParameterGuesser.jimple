public class org.apache.commons.math3.fitting.HarmonicFitter$ParameterGuesser extends java.lang.Object
{
    private final double a;
    private final double omega;
    private final double phi;

    public void <init>(org.apache.commons.math3.fitting.WeightedObservedPoint[])
    {
        org.apache.commons.math3.fitting.HarmonicFitter$ParameterGuesser r0;
        org.apache.commons.math3.fitting.WeightedObservedPoint[] r1, r2;
        double[] r3;
        int $i0, $i1;
        double $d0, $d1, $d2;
        org.apache.commons.math3.exception.NumberIsTooSmallException $r4;
        org.apache.commons.math3.exception.util.LocalizedFormats $r5;
        java.lang.Integer $r6, $r7;

        r0 := @this: org.apache.commons.math3.fitting.HarmonicFitter$ParameterGuesser;

        r1 := @parameter0: org.apache.commons.math3.fitting.WeightedObservedPoint[];

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $i0 = lengthof r1;

        if $i0 >= 4 goto label1;

        $r4 = new org.apache.commons.math3.exception.NumberIsTooSmallException;

        $r5 = <org.apache.commons.math3.exception.util.LocalizedFormats: org.apache.commons.math3.exception.util.LocalizedFormats INSUFFICIENT_OBSERVED_POINTS_IN_SAMPLE>;

        $i1 = lengthof r1;

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(4);

        specialinvoke $r4.<org.apache.commons.math3.exception.NumberIsTooSmallException: void <init>(org.apache.commons.math3.exception.util.Localizable,java.lang.Number,java.lang.Number,boolean)>($r5, $r6, $r7, 1);

        throw $r4;

     label1:
        r2 = specialinvoke r0.<org.apache.commons.math3.fitting.HarmonicFitter$ParameterGuesser: org.apache.commons.math3.fitting.WeightedObservedPoint[] sortObservations(org.apache.commons.math3.fitting.WeightedObservedPoint[])>(r1);

        r3 = specialinvoke r0.<org.apache.commons.math3.fitting.HarmonicFitter$ParameterGuesser: double[] guessAOmega(org.apache.commons.math3.fitting.WeightedObservedPoint[])>(r2);

        $d0 = r3[0];

        r0.<org.apache.commons.math3.fitting.HarmonicFitter$ParameterGuesser: double a> = $d0;

        $d1 = r3[1];

        r0.<org.apache.commons.math3.fitting.HarmonicFitter$ParameterGuesser: double omega> = $d1;

        $d2 = specialinvoke r0.<org.apache.commons.math3.fitting.HarmonicFitter$ParameterGuesser: double guessPhi(org.apache.commons.math3.fitting.WeightedObservedPoint[])>(r2);

        r0.<org.apache.commons.math3.fitting.HarmonicFitter$ParameterGuesser: double phi> = $d2;

        return;
    }

    public double[] guess()
    {
        org.apache.commons.math3.fitting.HarmonicFitter$ParameterGuesser r0;
        double[] $r1;
        double $d0, $d1, $d2;

        r0 := @this: org.apache.commons.math3.fitting.HarmonicFitter$ParameterGuesser;

        $r1 = newarray (double)[3];

        $d0 = r0.<org.apache.commons.math3.fitting.HarmonicFitter$ParameterGuesser: double a>;

        $r1[0] = $d0;

        $d1 = r0.<org.apache.commons.math3.fitting.HarmonicFitter$ParameterGuesser: double omega>;

        $r1[1] = $d1;

        $d2 = r0.<org.apache.commons.math3.fitting.HarmonicFitter$ParameterGuesser: double phi>;

        $r1[2] = $d2;

        return $r1;
    }

    private org.apache.commons.math3.fitting.WeightedObservedPoint[] sortObservations(org.apache.commons.math3.fitting.WeightedObservedPoint[])
    {
        org.apache.commons.math3.fitting.HarmonicFitter$ParameterGuesser r0;
        org.apache.commons.math3.fitting.WeightedObservedPoint[] r1, r2;
        org.apache.commons.math3.fitting.WeightedObservedPoint r3, r5, r6;
        java.lang.Object $r4;
        int $i0, $i2, $i4, $i5, i6, i7;
        double $d0, $d1, $d2, $d3;
        byte $b1, $b3;

        r0 := @this: org.apache.commons.math3.fitting.HarmonicFitter$ParameterGuesser;

        r1 := @parameter0: org.apache.commons.math3.fitting.WeightedObservedPoint[];

        $r4 = virtualinvoke r1.<java.lang.Object: java.lang.Object clone()>();

        r2 = (org.apache.commons.math3.fitting.WeightedObservedPoint[]) $r4;

        r5 = r2[0];

        i6 = 1;

     label1:
        $i0 = lengthof r2;

        if i6 >= $i0 goto label5;

        r3 = r5;

        r5 = r2[i6];

        $d0 = virtualinvoke r5.<org.apache.commons.math3.fitting.WeightedObservedPoint: double getX()>();

        $d1 = virtualinvoke r3.<org.apache.commons.math3.fitting.WeightedObservedPoint: double getX()>();

        $b1 = $d0 cmpg $d1;

        if $b1 >= 0 goto label4;

        i7 = i6 - 1;

        r6 = r2[i7];

     label2:
        if i7 < 0 goto label3;

        $d2 = virtualinvoke r5.<org.apache.commons.math3.fitting.WeightedObservedPoint: double getX()>();

        $d3 = virtualinvoke r6.<org.apache.commons.math3.fitting.WeightedObservedPoint: double getX()>();

        $b3 = $d2 cmpg $d3;

        if $b3 >= 0 goto label3;

        $i4 = i7 + 1;

        r2[$i4] = r6;

        $i5 = i7;

        i7 = i7 + -1;

        if $i5 == 0 goto label2;

        r6 = r2[i7];

        goto label2;

     label3:
        $i2 = i7 + 1;

        r2[$i2] = r5;

        r5 = r2[i6];

     label4:
        i6 = i6 + 1;

        goto label1;

     label5:
        return r2;
    }

    private double[] guessAOmega(org.apache.commons.math3.fitting.WeightedObservedPoint[])
    {
        org.apache.commons.math3.fitting.HarmonicFitter$ParameterGuesser r0;
        org.apache.commons.math3.fitting.WeightedObservedPoint[] r1;
        double[] r2;
        double d0, d1, d2, d3, d4, d5, d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21, $d22, $d23, $d24, $d25, $d26, $d27, $d28, $d29, $d30, $d31, $d32, $d33, $d34, $d35, d36, d37, d38, d39, d40, d41, d42, d43, d44, d45, d46, d47, d48, d49, d50, d51, d52;
        int i0, $i1, $i3, $i5, i10, i11;
        org.apache.commons.math3.fitting.WeightedObservedPoint $r3, $r4, $r5, $r6, $r7, $r12, $r13;
        byte $b2, $b4, $b6, $b7, $b8, $b9;
        org.apache.commons.math3.exception.ZeroException $r8;
        org.apache.commons.math3.exception.MathIllegalStateException $r9;
        java.lang.Object[] $r10;
        org.apache.commons.math3.exception.util.LocalizedFormats $r11;

        r0 := @this: org.apache.commons.math3.fitting.HarmonicFitter$ParameterGuesser;

        r1 := @parameter0: org.apache.commons.math3.fitting.WeightedObservedPoint[];

        r2 = newarray (double)[2];

        d36 = 0.0;

        d37 = 0.0;

        d38 = 0.0;

        d39 = 0.0;

        d40 = 0.0;

        $r3 = r1[0];

        d41 = virtualinvoke $r3.<org.apache.commons.math3.fitting.WeightedObservedPoint: double getX()>();

        $r4 = r1[0];

        d42 = virtualinvoke $r4.<org.apache.commons.math3.fitting.WeightedObservedPoint: double getY()>();

        d43 = 0.0;

        d44 = 0.0;

        d0 = d41;

        i10 = 1;

     label01:
        $i1 = lengthof r1;

        if i10 >= $i1 goto label02;

        d1 = d41;

        d3 = d42;

        $r12 = r1[i10];

        d41 = virtualinvoke $r12.<org.apache.commons.math3.fitting.WeightedObservedPoint: double getX()>();

        $r13 = r1[i10];

        d42 = virtualinvoke $r13.<org.apache.commons.math3.fitting.WeightedObservedPoint: double getY()>();

        d5 = d41 - d1;

        d45 = d42 - d3;

        $d25 = d3 * d3;

        $d24 = d3 * d42;

        $d27 = $d25 + $d24;

        $d26 = d42 * d42;

        $d28 = $d27 + $d26;

        $d29 = d5 * $d28;

        d46 = $d29 / 3.0;

        $d30 = d45 * d45;

        d47 = $d30 / d5;

        d48 = d41 - d0;

        d43 = d43 + d46;

        d44 = d44 + d47;

        $d31 = d48 * d48;

        d36 = d36 + $d31;

        $d32 = d43 * d43;

        d37 = d37 + $d32;

        $d33 = d48 * d43;

        d38 = d38 + $d33;

        $d34 = d48 * d44;

        d39 = d39 + $d34;

        $d35 = d43 * d44;

        d40 = d40 + $d35;

        i10 = i10 + 1;

        goto label01;

     label02:
        $d8 = d37 * d39;

        $d7 = d38 * d40;

        d49 = $d8 - $d7;

        $d10 = d38 * d39;

        $d9 = d36 * d40;

        d2 = $d10 - $d9;

        $d12 = d36 * d37;

        $d11 = d38 * d38;

        d4 = $d12 - $d11;

        $d13 = d49 / d2;

        $b2 = $d13 cmpg 0.0;

        if $b2 < 0 goto label03;

        $d19 = d2 / d4;

        $b8 = $d19 cmpg 0.0;

        if $b8 >= 0 goto label09;

     label03:
        $i3 = lengthof r1;

        i0 = $i3 - 1;

        $r5 = r1[i0];

        $d14 = virtualinvoke $r5.<org.apache.commons.math3.fitting.WeightedObservedPoint: double getX()>();

        $r6 = r1[0];

        $d15 = virtualinvoke $r6.<org.apache.commons.math3.fitting.WeightedObservedPoint: double getX()>();

        d50 = $d14 - $d15;

        $b4 = d50 cmpl 0.0;

        if $b4 != 0 goto label04;

        $r8 = new org.apache.commons.math3.exception.ZeroException;

        specialinvoke $r8.<org.apache.commons.math3.exception.ZeroException: void <init>()>();

        throw $r8;

     label04:
        $d16 = 6.283185307179586 / d50;

        r2[1] = $d16;

        d51 = #Infinity;

        d52 = #-Infinity;

        i11 = 1;

     label05:
        $i5 = lengthof r1;

        if i11 >= $i5 goto label08;

        $r7 = r1[i11];

        d6 = virtualinvoke $r7.<org.apache.commons.math3.fitting.WeightedObservedPoint: double getY()>();

        $b6 = d6 cmpg d51;

        if $b6 >= 0 goto label06;

        d51 = d6;

     label06:
        $b7 = d6 cmpl d52;

        if $b7 <= 0 goto label07;

        d52 = d6;

     label07:
        i11 = i11 + 1;

        goto label05;

     label08:
        $d17 = d52 - d51;

        $d18 = 0.5 * $d17;

        r2[0] = $d18;

        goto label11;

     label09:
        $b9 = d2 cmpl 0.0;

        if $b9 != 0 goto label10;

        $r9 = new org.apache.commons.math3.exception.MathIllegalStateException;

        $r11 = <org.apache.commons.math3.exception.util.LocalizedFormats: org.apache.commons.math3.exception.util.LocalizedFormats ZERO_DENOMINATOR>;

        $r10 = newarray (java.lang.Object)[0];

        specialinvoke $r9.<org.apache.commons.math3.exception.MathIllegalStateException: void <init>(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])>($r11, $r10);

        throw $r9;

     label10:
        $d20 = d49 / d2;

        $d21 = staticinvoke <org.apache.commons.math3.util.FastMath: double sqrt(double)>($d20);

        r2[0] = $d21;

        $d22 = d2 / d4;

        $d23 = staticinvoke <org.apache.commons.math3.util.FastMath: double sqrt(double)>($d22);

        r2[1] = $d23;

     label11:
        return r2;
    }

    private double guessPhi(org.apache.commons.math3.fitting.WeightedObservedPoint[])
    {
        org.apache.commons.math3.fitting.HarmonicFitter$ParameterGuesser r0;
        org.apache.commons.math3.fitting.WeightedObservedPoint[] r1;
        double d0, d1, d2, d3, d4, d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, d21, d22, d23, d24;
        org.apache.commons.math3.fitting.WeightedObservedPoint $r2, $r3, $r4, $r5;
        int $i0, i1;

        r0 := @this: org.apache.commons.math3.fitting.HarmonicFitter$ParameterGuesser;

        r1 := @parameter0: org.apache.commons.math3.fitting.WeightedObservedPoint[];

        d21 = 0.0;

        d22 = 0.0;

        $r2 = r1[0];

        d23 = virtualinvoke $r2.<org.apache.commons.math3.fitting.WeightedObservedPoint: double getX()>();

        $r3 = r1[0];

        d24 = virtualinvoke $r3.<org.apache.commons.math3.fitting.WeightedObservedPoint: double getY()>();

        i1 = 1;

     label1:
        $i0 = lengthof r1;

        if i1 >= $i0 goto label2;

        d0 = d23;

        d1 = d24;

        $r4 = r1[i1];

        d23 = virtualinvoke $r4.<org.apache.commons.math3.fitting.WeightedObservedPoint: double getX()>();

        $r5 = r1[i1];

        d24 = virtualinvoke $r5.<org.apache.commons.math3.fitting.WeightedObservedPoint: double getY()>();

        $d9 = d24 - d1;

        $d8 = d23 - d0;

        d2 = $d9 / $d8;

        $d10 = r0.<org.apache.commons.math3.fitting.HarmonicFitter$ParameterGuesser: double omega>;

        d3 = $d10 * d23;

        d4 = staticinvoke <org.apache.commons.math3.util.FastMath: double cos(double)>(d3);

        d5 = staticinvoke <org.apache.commons.math3.util.FastMath: double sin(double)>(d3);

        $d11 = r0.<org.apache.commons.math3.fitting.HarmonicFitter$ParameterGuesser: double omega>;

        $d12 = $d11 * d24;

        $d14 = $d12 * d4;

        $d13 = d2 * d5;

        $d15 = $d14 - $d13;

        d21 = d21 + $d15;

        $d16 = r0.<org.apache.commons.math3.fitting.HarmonicFitter$ParameterGuesser: double omega>;

        $d17 = $d16 * d24;

        $d19 = $d17 * d5;

        $d18 = d2 * d4;

        $d20 = $d19 + $d18;

        d22 = d22 + $d20;

        i1 = i1 + 1;

        goto label1;

     label2:
        $d6 = neg d22;

        $d7 = staticinvoke <org.apache.commons.math3.util.FastMath: double atan2(double,double)>($d6, d21);

        return $d7;
    }
}
