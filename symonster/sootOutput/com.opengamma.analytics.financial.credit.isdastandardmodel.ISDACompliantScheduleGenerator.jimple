public class com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantScheduleGenerator extends java.lang.Object
{
    private static final com.opengamma.financial.convention.daycount.DayCount ACT365;

    public void <init>()
    {
        com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantScheduleGenerator r0;

        r0 := @this: com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantScheduleGenerator;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static org.threeten.bp.LocalDate[] getIntegrationNodesAsDates(org.threeten.bp.LocalDate, org.threeten.bp.LocalDate, org.threeten.bp.LocalDate[], org.threeten.bp.LocalDate[])
    {
        org.threeten.bp.LocalDate r0, r1, $r15, $r16, r18, r20;
        org.threeten.bp.LocalDate[] r2, r3, r5, r21;
        int i0, i1, i2, $i3, $i4, $i5, i6, i7, i8, i9, i10, i11, i12;
        boolean $z0, $z3, $z4;
        java.lang.Object[] $r10;
        java.lang.String $r11, $r12;
        java.util.LinkedHashSet $r13;

        r0 := @parameter0: org.threeten.bp.LocalDate;

        r1 := @parameter1: org.threeten.bp.LocalDate;

        r2 := @parameter2: org.threeten.bp.LocalDate[];

        r3 := @parameter3: org.threeten.bp.LocalDate[];

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r0, "null startDate");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "null endDate");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object[] noNulls(java.lang.Object[],java.lang.String)>(r2, "nulls in disCurveDates");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object[] noNulls(java.lang.Object[],java.lang.String)>(r3, "nulls in spreadCurveDates");

        $z0 = virtualinvoke r1.<org.threeten.bp.LocalDate: boolean isAfter(org.threeten.bp.chrono.ChronoLocalDate)>(r0);

        $r10 = newarray (java.lang.Object)[2];

        $r11 = virtualinvoke r1.<org.threeten.bp.LocalDate: java.lang.String toString()>();

        $r10[0] = $r11;

        $r12 = virtualinvoke r0.<org.threeten.bp.LocalDate: java.lang.String toString()>();

        $r10[1] = $r12;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String,java.lang.Object[])>($z0, "endDate of {} is not after startDate of {}", $r10);

        i0 = lengthof r2;

        i1 = lengthof r3;

        $r13 = new java.util.LinkedHashSet;

        $i3 = 2 + i0;

        $i4 = $i3 + i1;

        specialinvoke $r13.<java.util.LinkedHashSet: void <init>(int)>($i4);

        virtualinvoke $r13.<java.util.LinkedHashSet: boolean add(java.lang.Object)>(r0);

        i6 = lengthof r2;

        i7 = 0;

     label1:
        if i7 >= i6 goto label2;

        r18 = r2[i7];

        virtualinvoke $r13.<java.util.LinkedHashSet: boolean add(java.lang.Object)>(r18);

        i7 = i7 + 1;

        goto label1;

     label2:
        i8 = lengthof r3;

        i9 = 0;

     label3:
        if i9 >= i8 goto label4;

        r20 = r3[i9];

        virtualinvoke $r13.<java.util.LinkedHashSet: boolean add(java.lang.Object)>(r20);

        i9 = i9 + 1;

        goto label3;

     label4:
        virtualinvoke $r13.<java.util.LinkedHashSet: boolean add(java.lang.Object)>(r1);

        i10 = virtualinvoke $r13.<java.util.LinkedHashSet: int size()>();

        r21 = newarray (org.threeten.bp.LocalDate)[i10];

        virtualinvoke $r13.<java.util.LinkedHashSet: java.lang.Object[] toArray(java.lang.Object[])>(r21);

        staticinvoke <java.util.Arrays: void sort(java.lang.Object[])>(r21);

        i11 = 0;

        i12 = i10 - 1;

     label5:
        $r15 = r21[i11];

        $z3 = virtualinvoke $r15.<org.threeten.bp.LocalDate: boolean isBefore(org.threeten.bp.chrono.ChronoLocalDate)>(r0);

        if $z3 == 0 goto label6;

        i11 = i11 + 1;

        goto label5;

     label6:
        $r16 = r21[i12];

        $z4 = virtualinvoke $r16.<org.threeten.bp.LocalDate: boolean isAfter(org.threeten.bp.chrono.ChronoLocalDate)>(r1);

        if $z4 == 0 goto label7;

        i12 = i12 + -1;

        goto label6;

     label7:
        $i5 = i12 - i11;

        i2 = $i5 + 1;

        if i2 != i10 goto label8;

        return r21;

     label8:
        r5 = newarray (org.threeten.bp.LocalDate)[i2];

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r21, i11, r5, 0, i2);

        return r5;
    }

    public static double[] getIntegrationNodesAsTimes(org.threeten.bp.LocalDate, org.threeten.bp.LocalDate, org.threeten.bp.LocalDate, org.threeten.bp.LocalDate[], org.threeten.bp.LocalDate[])
    {
        org.threeten.bp.LocalDate r0, r1, r2;
        org.threeten.bp.LocalDate[] r3, r4, r5;
        boolean $z0;
        double[] $r8;

        r0 := @parameter0: org.threeten.bp.LocalDate;

        r1 := @parameter1: org.threeten.bp.LocalDate;

        r2 := @parameter2: org.threeten.bp.LocalDate;

        r3 := @parameter3: org.threeten.bp.LocalDate[];

        r4 := @parameter4: org.threeten.bp.LocalDate[];

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r0, "null today");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "null startDate");

        $z0 = virtualinvoke r0.<org.threeten.bp.LocalDate: boolean isAfter(org.threeten.bp.chrono.ChronoLocalDate)>(r1);

        staticinvoke <com.opengamma.util.ArgumentChecker: void isFalse(boolean,java.lang.String)>($z0, "today is after startDate");

        r5 = staticinvoke <com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantScheduleGenerator: org.threeten.bp.LocalDate[] getIntegrationNodesAsDates(org.threeten.bp.LocalDate,org.threeten.bp.LocalDate,org.threeten.bp.LocalDate[],org.threeten.bp.LocalDate[])>(r1, r2, r3, r4);

        $r8 = staticinvoke <com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantScheduleGenerator: double[] getYearFractionFromToday(org.threeten.bp.LocalDate,org.threeten.bp.LocalDate[])>(r0, r5);

        return $r8;
    }

    public static org.threeten.bp.LocalDate[] truncateList(org.threeten.bp.LocalDate, org.threeten.bp.LocalDate, org.threeten.bp.LocalDate[])
    {
        org.threeten.bp.LocalDate r0, r1, r4;
        org.threeten.bp.LocalDate[] r2, $r10, r12, r13;
        int i0, $i1, $i2, $i3, i4, i5, i6;
        boolean $z0, $z1, $z2;
        java.util.ArrayList $r8;

        r0 := @parameter0: org.threeten.bp.LocalDate;

        r1 := @parameter1: org.threeten.bp.LocalDate;

        r2 := @parameter2: org.threeten.bp.LocalDate[];

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r0, "null startDate");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "null endDate");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object[] noNulls(java.lang.Object[],java.lang.String)>(r2, "nulls in dateList");

        $z0 = virtualinvoke r1.<org.threeten.bp.LocalDate: boolean isAfter(org.threeten.bp.chrono.ChronoLocalDate)>(r0);

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z0, "require enddate after startDate");

        i0 = lengthof r2;

        if i0 != 0 goto label1;

        $r10 = newarray (org.threeten.bp.LocalDate)[2];

        $r10[0] = r0;

        $r10[1] = r1;

        return $r10;

     label1:
        $r8 = new java.util.ArrayList;

        $i1 = i0 + 2;

        specialinvoke $r8.<java.util.ArrayList: void <init>(int)>($i1);

        i4 = lengthof r2;

        i5 = 0;

     label2:
        if i5 >= i4 goto label4;

        r4 = r2[i5];

        $z1 = virtualinvoke r4.<org.threeten.bp.LocalDate: boolean isAfter(org.threeten.bp.chrono.ChronoLocalDate)>(r0);

        if $z1 == 0 goto label3;

        $z2 = virtualinvoke r4.<org.threeten.bp.LocalDate: boolean isBefore(org.threeten.bp.chrono.ChronoLocalDate)>(r1);

        if $z2 == 0 goto label3;

        interfaceinvoke $r8.<java.util.List: boolean add(java.lang.Object)>(r4);

     label3:
        i5 = i5 + 1;

        goto label2;

     label4:
        i6 = interfaceinvoke $r8.<java.util.List: int size()>();

        r12 = newarray (org.threeten.bp.LocalDate)[i6];

        interfaceinvoke $r8.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>(r12);

        $i2 = i6 + 2;

        r13 = newarray (org.threeten.bp.LocalDate)[$i2];

        r13[0] = r0;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r12, 0, r13, 1, i6);

        $i3 = i6 + 1;

        r13[$i3] = r1;

        return r13;
    }

    public static double[] getYearFractionFromToday(org.threeten.bp.LocalDate, org.threeten.bp.LocalDate[])
    {
        org.threeten.bp.LocalDate r0;
        org.threeten.bp.LocalDate[] r1;
        com.opengamma.financial.convention.daycount.DayCount $r2;
        double[] $r3;

        r0 := @parameter0: org.threeten.bp.LocalDate;

        r1 := @parameter1: org.threeten.bp.LocalDate[];

        $r2 = <com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantScheduleGenerator: com.opengamma.financial.convention.daycount.DayCount ACT365>;

        $r3 = staticinvoke <com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantScheduleGenerator: double[] getYearFractionFromToday(org.threeten.bp.LocalDate,org.threeten.bp.LocalDate[],com.opengamma.financial.convention.daycount.DayCount)>(r0, r1, $r2);

        return $r3;
    }

    public static double[] getYearFractionFromToday(org.threeten.bp.LocalDate, org.threeten.bp.LocalDate[], com.opengamma.financial.convention.daycount.DayCount)
    {
        org.threeten.bp.LocalDate r0, $r7;
        org.threeten.bp.LocalDate[] r1;
        com.opengamma.financial.convention.daycount.DayCount r2;
        int i0, i1;
        double[] r3;
        double $d0;

        r0 := @parameter0: org.threeten.bp.LocalDate;

        r1 := @parameter1: org.threeten.bp.LocalDate[];

        r2 := @parameter2: com.opengamma.financial.convention.daycount.DayCount;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r0, "null today");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object[] noNulls(java.lang.Object[],java.lang.String)>(r1, "nulls in dates");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, "null dayCount");

        i0 = lengthof r1;

        r3 = newarray (double)[i0];

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        $r7 = r1[i1];

        $d0 = interfaceinvoke r2.<com.opengamma.financial.convention.daycount.DayCount: double getDayCountFraction(org.threeten.bp.LocalDate,org.threeten.bp.LocalDate)>(r0, $r7);

        r3[i1] = $d0;

        i1 = i1 + 1;

        goto label1;

     label2:
        return r3;
    }

    static void <clinit>()
    {
        com.opengamma.financial.convention.daycount.DayCount $r0;

        $r0 = <com.opengamma.financial.convention.daycount.DayCounts: com.opengamma.financial.convention.daycount.DayCount ACT_365>;

        <com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantScheduleGenerator: com.opengamma.financial.convention.daycount.DayCount ACT365> = $r0;

        return;
    }
}
