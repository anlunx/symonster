class org.apache.commons.math.linear.FieldLUDecompositionImpl$Solver extends java.lang.Object implements org.apache.commons.math.linear.FieldDecompositionSolver
{
    private static final long serialVersionUID;
    private final org.apache.commons.math.Field field;
    private final org.apache.commons.math.FieldElement[][] lu;
    private final int[] pivot;
    private final boolean singular;

    private void <init>(org.apache.commons.math.Field, org.apache.commons.math.FieldElement[][], int[], boolean)
    {
        org.apache.commons.math.linear.FieldLUDecompositionImpl$Solver r0;
        org.apache.commons.math.Field r1;
        org.apache.commons.math.FieldElement[][] r2;
        int[] r3;
        boolean z0;

        r0 := @this: org.apache.commons.math.linear.FieldLUDecompositionImpl$Solver;

        r1 := @parameter0: org.apache.commons.math.Field;

        r2 := @parameter1: org.apache.commons.math.FieldElement[][];

        r3 := @parameter2: int[];

        z0 := @parameter3: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.commons.math.linear.FieldLUDecompositionImpl$Solver: org.apache.commons.math.Field field> = r1;

        r0.<org.apache.commons.math.linear.FieldLUDecompositionImpl$Solver: org.apache.commons.math.FieldElement[][] lu> = r2;

        r0.<org.apache.commons.math.linear.FieldLUDecompositionImpl$Solver: int[] pivot> = r3;

        r0.<org.apache.commons.math.linear.FieldLUDecompositionImpl$Solver: boolean singular> = z0;

        return;
    }

    public boolean isNonSingular()
    {
        org.apache.commons.math.linear.FieldLUDecompositionImpl$Solver r0;
        boolean $z0, $z1;

        r0 := @this: org.apache.commons.math.linear.FieldLUDecompositionImpl$Solver;

        $z0 = r0.<org.apache.commons.math.linear.FieldLUDecompositionImpl$Solver: boolean singular>;

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }

    public org.apache.commons.math.FieldElement[] solve(org.apache.commons.math.FieldElement[]) throws java.lang.IllegalArgumentException, org.apache.commons.math.linear.InvalidMatrixException
    {
        org.apache.commons.math.linear.FieldLUDecompositionImpl$Solver r0;
        org.apache.commons.math.FieldElement[] r1, r2, $r9, $r11, $r17, $r24;
        int i0, $i1, $i2, $i3, i4, i5, i6, i7, i8;
        int[] $r3, $r30;
        boolean $z0;
        org.apache.commons.math.Field $r4;
        java.lang.Object $r5, $r8, $r14, $r20, $r21, $r27, $r28;
        org.apache.commons.math.FieldElement $r6, $r12, $r13, $r15, $r18, $r19, $r22, $r25, $r26, $r29, $r31, r38, r39;
        java.lang.Class $r7;
        org.apache.commons.math.FieldElement[][] $r10, $r16, $r23;
        org.apache.commons.math.linear.SingularMatrixException $r32;
        java.lang.Object[] $r33;
        org.apache.commons.math.exception.util.LocalizedFormats $r34;
        java.lang.Integer $r35, $r36;
        java.lang.IllegalArgumentException $r37;

        r0 := @this: org.apache.commons.math.linear.FieldLUDecompositionImpl$Solver;

        r1 := @parameter0: org.apache.commons.math.FieldElement[];

        $r3 = r0.<org.apache.commons.math.linear.FieldLUDecompositionImpl$Solver: int[] pivot>;

        i0 = lengthof $r3;

        $i1 = lengthof r1;

        if $i1 == i0 goto label01;

        $r34 = <org.apache.commons.math.exception.util.LocalizedFormats: org.apache.commons.math.exception.util.LocalizedFormats VECTOR_LENGTH_MISMATCH>;

        $r33 = newarray (java.lang.Object)[2];

        $i3 = lengthof r1;

        $r35 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3);

        $r33[0] = $r35;

        $r36 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r33[1] = $r36;

        $r37 = staticinvoke <org.apache.commons.math.MathRuntimeException: java.lang.IllegalArgumentException createIllegalArgumentException(org.apache.commons.math.exception.util.Localizable,java.lang.Object[])>($r34, $r33);

        throw $r37;

     label01:
        $z0 = r0.<org.apache.commons.math.linear.FieldLUDecompositionImpl$Solver: boolean singular>;

        if $z0 == 0 goto label02;

        $r32 = new org.apache.commons.math.linear.SingularMatrixException;

        specialinvoke $r32.<org.apache.commons.math.linear.SingularMatrixException: void <init>()>();

        throw $r32;

     label02:
        $r4 = r0.<org.apache.commons.math.linear.FieldLUDecompositionImpl$Solver: org.apache.commons.math.Field field>;

        $r5 = interfaceinvoke $r4.<org.apache.commons.math.Field: java.lang.Object getZero()>();

        $r6 = (org.apache.commons.math.FieldElement) $r5;

        $r7 = virtualinvoke $r6.<java.lang.Object: java.lang.Class getClass()>();

        $r8 = staticinvoke <java.lang.reflect.Array: java.lang.Object newInstance(java.lang.Class,int)>($r7, i0);

        $r9 = (org.apache.commons.math.FieldElement[]) $r8;

        r2 = (org.apache.commons.math.FieldElement[]) $r9;

        i4 = 0;

     label03:
        if i4 >= i0 goto label04;

        $r30 = r0.<org.apache.commons.math.linear.FieldLUDecompositionImpl$Solver: int[] pivot>;

        $i2 = $r30[i4];

        $r31 = r1[$i2];

        r2[i4] = $r31;

        i4 = i4 + 1;

        goto label03;

     label04:
        i5 = 0;

     label05:
        if i5 >= i0 goto label08;

        r38 = r2[i5];

        i6 = i5 + 1;

     label06:
        if i6 >= i0 goto label07;

        $r26 = r2[i6];

        $r23 = r0.<org.apache.commons.math.linear.FieldLUDecompositionImpl$Solver: org.apache.commons.math.FieldElement[][] lu>;

        $r24 = $r23[i6];

        $r25 = $r24[i5];

        $r27 = interfaceinvoke r38.<org.apache.commons.math.FieldElement: java.lang.Object multiply(java.lang.Object)>($r25);

        $r28 = interfaceinvoke $r26.<org.apache.commons.math.FieldElement: java.lang.Object subtract(java.lang.Object)>($r27);

        $r29 = (org.apache.commons.math.FieldElement) $r28;

        r2[i6] = $r29;

        i6 = i6 + 1;

        goto label06;

     label07:
        i5 = i5 + 1;

        goto label05;

     label08:
        i7 = i0 - 1;

     label09:
        if i7 < 0 goto label12;

        $r13 = r2[i7];

        $r10 = r0.<org.apache.commons.math.linear.FieldLUDecompositionImpl$Solver: org.apache.commons.math.FieldElement[][] lu>;

        $r11 = $r10[i7];

        $r12 = $r11[i7];

        $r14 = interfaceinvoke $r13.<org.apache.commons.math.FieldElement: java.lang.Object divide(java.lang.Object)>($r12);

        $r15 = (org.apache.commons.math.FieldElement) $r14;

        r2[i7] = $r15;

        r39 = r2[i7];

        i8 = 0;

     label10:
        if i8 >= i7 goto label11;

        $r19 = r2[i8];

        $r16 = r0.<org.apache.commons.math.linear.FieldLUDecompositionImpl$Solver: org.apache.commons.math.FieldElement[][] lu>;

        $r17 = $r16[i8];

        $r18 = $r17[i7];

        $r20 = interfaceinvoke r39.<org.apache.commons.math.FieldElement: java.lang.Object multiply(java.lang.Object)>($r18);

        $r21 = interfaceinvoke $r19.<org.apache.commons.math.FieldElement: java.lang.Object subtract(java.lang.Object)>($r20);

        $r22 = (org.apache.commons.math.FieldElement) $r21;

        r2[i8] = $r22;

        i8 = i8 + 1;

        goto label10;

     label11:
        i7 = i7 + -1;

        goto label09;

     label12:
        return r2;
    }

    public org.apache.commons.math.linear.FieldVector solve(org.apache.commons.math.linear.FieldVector) throws java.lang.IllegalArgumentException, org.apache.commons.math.linear.InvalidMatrixException
    {
        org.apache.commons.math.linear.FieldLUDecompositionImpl$Solver r0;
        org.apache.commons.math.linear.FieldVector r1;
        int i0, $i1, $i2, $i3, i4, i5, i6, i7, i8;
        org.apache.commons.math.FieldElement[] r3, $r13, $r16, $r22, $r29;
        org.apache.commons.math.linear.ArrayFieldVector $r4, $r5, $r14;
        java.lang.ClassCastException $r6;
        int[] $r7, $r35;
        boolean $z0;
        org.apache.commons.math.Field $r8;
        java.lang.Object $r9, $r12, $r19, $r25, $r26, $r32, $r33;
        org.apache.commons.math.FieldElement $r10, $r17, $r18, $r20, $r23, $r24, $r27, $r30, $r31, $r34, $r36, r43, r44;
        java.lang.Class $r11;
        org.apache.commons.math.FieldElement[][] $r15, $r21, $r28;
        org.apache.commons.math.linear.SingularMatrixException $r37;
        java.lang.Object[] $r38;
        org.apache.commons.math.exception.util.LocalizedFormats $r39;
        java.lang.Integer $r40, $r41;
        java.lang.IllegalArgumentException $r42;

        r0 := @this: org.apache.commons.math.linear.FieldLUDecompositionImpl$Solver;

        r1 := @parameter0: org.apache.commons.math.linear.FieldVector;

     label01:
        $r4 = (org.apache.commons.math.linear.ArrayFieldVector) r1;

        $r5 = virtualinvoke r0.<org.apache.commons.math.linear.FieldLUDecompositionImpl$Solver: org.apache.commons.math.linear.ArrayFieldVector solve(org.apache.commons.math.linear.ArrayFieldVector)>($r4);

     label02:
        return $r5;

     label03:
        $r6 := @caughtexception;

        $r7 = r0.<org.apache.commons.math.linear.FieldLUDecompositionImpl$Solver: int[] pivot>;

        i0 = lengthof $r7;

        $i1 = interfaceinvoke r1.<org.apache.commons.math.linear.FieldVector: int getDimension()>();

        if $i1 == i0 goto label04;

        $r39 = <org.apache.commons.math.exception.util.LocalizedFormats: org.apache.commons.math.exception.util.LocalizedFormats VECTOR_LENGTH_MISMATCH>;

        $r38 = newarray (java.lang.Object)[2];

        $i3 = interfaceinvoke r1.<org.apache.commons.math.linear.FieldVector: int getDimension()>();

        $r40 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3);

        $r38[0] = $r40;

        $r41 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r38[1] = $r41;

        $r42 = staticinvoke <org.apache.commons.math.MathRuntimeException: java.lang.IllegalArgumentException createIllegalArgumentException(org.apache.commons.math.exception.util.Localizable,java.lang.Object[])>($r39, $r38);

        throw $r42;

     label04:
        $z0 = r0.<org.apache.commons.math.linear.FieldLUDecompositionImpl$Solver: boolean singular>;

        if $z0 == 0 goto label05;

        $r37 = new org.apache.commons.math.linear.SingularMatrixException;

        specialinvoke $r37.<org.apache.commons.math.linear.SingularMatrixException: void <init>()>();

        throw $r37;

     label05:
        $r8 = r0.<org.apache.commons.math.linear.FieldLUDecompositionImpl$Solver: org.apache.commons.math.Field field>;

        $r9 = interfaceinvoke $r8.<org.apache.commons.math.Field: java.lang.Object getZero()>();

        $r10 = (org.apache.commons.math.FieldElement) $r9;

        $r11 = virtualinvoke $r10.<java.lang.Object: java.lang.Class getClass()>();

        $r12 = staticinvoke <java.lang.reflect.Array: java.lang.Object newInstance(java.lang.Class,int)>($r11, i0);

        $r13 = (org.apache.commons.math.FieldElement[]) $r12;

        r3 = (org.apache.commons.math.FieldElement[]) $r13;

        i4 = 0;

     label06:
        if i4 >= i0 goto label07;

        $r35 = r0.<org.apache.commons.math.linear.FieldLUDecompositionImpl$Solver: int[] pivot>;

        $i2 = $r35[i4];

        $r36 = interfaceinvoke r1.<org.apache.commons.math.linear.FieldVector: org.apache.commons.math.FieldElement getEntry(int)>($i2);

        r3[i4] = $r36;

        i4 = i4 + 1;

        goto label06;

     label07:
        i5 = 0;

     label08:
        if i5 >= i0 goto label11;

        r43 = r3[i5];

        i6 = i5 + 1;

     label09:
        if i6 >= i0 goto label10;

        $r31 = r3[i6];

        $r28 = r0.<org.apache.commons.math.linear.FieldLUDecompositionImpl$Solver: org.apache.commons.math.FieldElement[][] lu>;

        $r29 = $r28[i6];

        $r30 = $r29[i5];

        $r32 = interfaceinvoke r43.<org.apache.commons.math.FieldElement: java.lang.Object multiply(java.lang.Object)>($r30);

        $r33 = interfaceinvoke $r31.<org.apache.commons.math.FieldElement: java.lang.Object subtract(java.lang.Object)>($r32);

        $r34 = (org.apache.commons.math.FieldElement) $r33;

        r3[i6] = $r34;

        i6 = i6 + 1;

        goto label09;

     label10:
        i5 = i5 + 1;

        goto label08;

     label11:
        i7 = i0 - 1;

     label12:
        if i7 < 0 goto label15;

        $r18 = r3[i7];

        $r15 = r0.<org.apache.commons.math.linear.FieldLUDecompositionImpl$Solver: org.apache.commons.math.FieldElement[][] lu>;

        $r16 = $r15[i7];

        $r17 = $r16[i7];

        $r19 = interfaceinvoke $r18.<org.apache.commons.math.FieldElement: java.lang.Object divide(java.lang.Object)>($r17);

        $r20 = (org.apache.commons.math.FieldElement) $r19;

        r3[i7] = $r20;

        r44 = r3[i7];

        i8 = 0;

     label13:
        if i8 >= i7 goto label14;

        $r24 = r3[i8];

        $r21 = r0.<org.apache.commons.math.linear.FieldLUDecompositionImpl$Solver: org.apache.commons.math.FieldElement[][] lu>;

        $r22 = $r21[i8];

        $r23 = $r22[i7];

        $r25 = interfaceinvoke r44.<org.apache.commons.math.FieldElement: java.lang.Object multiply(java.lang.Object)>($r23);

        $r26 = interfaceinvoke $r24.<org.apache.commons.math.FieldElement: java.lang.Object subtract(java.lang.Object)>($r25);

        $r27 = (org.apache.commons.math.FieldElement) $r26;

        r3[i8] = $r27;

        i8 = i8 + 1;

        goto label13;

     label14:
        i7 = i7 + -1;

        goto label12;

     label15:
        $r14 = new org.apache.commons.math.linear.ArrayFieldVector;

        specialinvoke $r14.<org.apache.commons.math.linear.ArrayFieldVector: void <init>(org.apache.commons.math.FieldElement[],boolean)>(r3, 0);

        return $r14;

        catch java.lang.ClassCastException from label01 to label02 with label03;
    }

    public org.apache.commons.math.linear.ArrayFieldVector solve(org.apache.commons.math.linear.ArrayFieldVector) throws java.lang.IllegalArgumentException, org.apache.commons.math.linear.InvalidMatrixException
    {
        org.apache.commons.math.linear.FieldLUDecompositionImpl$Solver r0;
        org.apache.commons.math.linear.ArrayFieldVector r1, $r2;
        org.apache.commons.math.FieldElement[] $r3, $r4;

        r0 := @this: org.apache.commons.math.linear.FieldLUDecompositionImpl$Solver;

        r1 := @parameter0: org.apache.commons.math.linear.ArrayFieldVector;

        $r2 = new org.apache.commons.math.linear.ArrayFieldVector;

        $r3 = virtualinvoke r1.<org.apache.commons.math.linear.ArrayFieldVector: org.apache.commons.math.FieldElement[] getDataRef()>();

        $r4 = virtualinvoke r0.<org.apache.commons.math.linear.FieldLUDecompositionImpl$Solver: org.apache.commons.math.FieldElement[] solve(org.apache.commons.math.FieldElement[])>($r3);

        specialinvoke $r2.<org.apache.commons.math.linear.ArrayFieldVector: void <init>(org.apache.commons.math.FieldElement[],boolean)>($r4, 0);

        return $r2;
    }

    public org.apache.commons.math.linear.FieldMatrix solve(org.apache.commons.math.linear.FieldMatrix) throws java.lang.IllegalArgumentException, org.apache.commons.math.linear.InvalidMatrixException
    {
        org.apache.commons.math.linear.FieldLUDecompositionImpl$Solver r0;
        org.apache.commons.math.linear.FieldMatrix r1;
        int i0, i1, $i2, $i3, $i4, i5, i6, i7, i8, i9, i10, i11, i12, i13, i14;
        org.apache.commons.math.FieldElement[][] r2, $r10, $r12, $r14, $r24;
        int[] $r3, $r8, $r31;
        boolean $z0;
        org.apache.commons.math.Field $r4;
        java.lang.Object $r5, $r9, $r18, $r19, $r22, $r28, $r29;
        org.apache.commons.math.FieldElement $r6, $r16, $r17, $r20, $r21, $r23, $r26, $r27, $r30, $r32, r43, r45, r47;
        java.lang.Class $r7;
        org.apache.commons.math.linear.Array2DRowFieldMatrix $r11;
        org.apache.commons.math.FieldElement[] $r13, $r15, $r25, r40, r41, r42, r44, r46;
        org.apache.commons.math.linear.SingularMatrixException $r33;
        java.lang.Object[] $r34;
        org.apache.commons.math.exception.util.LocalizedFormats $r35;
        java.lang.Integer $r36, $r37, $r38;
        java.lang.IllegalArgumentException $r39;

        r0 := @this: org.apache.commons.math.linear.FieldLUDecompositionImpl$Solver;

        r1 := @parameter0: org.apache.commons.math.linear.FieldMatrix;

        $r3 = r0.<org.apache.commons.math.linear.FieldLUDecompositionImpl$Solver: int[] pivot>;

        i0 = lengthof $r3;

        $i2 = interfaceinvoke r1.<org.apache.commons.math.linear.FieldMatrix: int getRowDimension()>();

        if $i2 == i0 goto label01;

        $r35 = <org.apache.commons.math.exception.util.LocalizedFormats: org.apache.commons.math.exception.util.LocalizedFormats DIMENSIONS_MISMATCH_2x2>;

        $r34 = newarray (java.lang.Object)[4];

        $i3 = interfaceinvoke r1.<org.apache.commons.math.linear.FieldMatrix: int getRowDimension()>();

        $r36 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3);

        $r34[0] = $r36;

        $i4 = interfaceinvoke r1.<org.apache.commons.math.linear.FieldMatrix: int getColumnDimension()>();

        $r37 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i4);

        $r34[1] = $r37;

        $r38 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r34[2] = $r38;

        $r34[3] = "n";

        $r39 = staticinvoke <org.apache.commons.math.MathRuntimeException: java.lang.IllegalArgumentException createIllegalArgumentException(org.apache.commons.math.exception.util.Localizable,java.lang.Object[])>($r35, $r34);

        throw $r39;

     label01:
        $z0 = r0.<org.apache.commons.math.linear.FieldLUDecompositionImpl$Solver: boolean singular>;

        if $z0 == 0 goto label02;

        $r33 = new org.apache.commons.math.linear.SingularMatrixException;

        specialinvoke $r33.<org.apache.commons.math.linear.SingularMatrixException: void <init>()>();

        throw $r33;

     label02:
        i1 = interfaceinvoke r1.<org.apache.commons.math.linear.FieldMatrix: int getColumnDimension()>();

        $r4 = r0.<org.apache.commons.math.linear.FieldLUDecompositionImpl$Solver: org.apache.commons.math.Field field>;

        $r5 = interfaceinvoke $r4.<org.apache.commons.math.Field: java.lang.Object getZero()>();

        $r6 = (org.apache.commons.math.FieldElement) $r5;

        $r7 = virtualinvoke $r6.<java.lang.Object: java.lang.Class getClass()>();

        $r8 = newarray (int)[2];

        $r8[0] = i0;

        $r8[1] = i1;

        $r9 = staticinvoke <java.lang.reflect.Array: java.lang.Object newInstance(java.lang.Class,int[])>($r7, $r8);

        $r10 = (org.apache.commons.math.FieldElement[][]) $r9;

        r2 = (org.apache.commons.math.FieldElement[][]) $r10;

        i5 = 0;

     label03:
        if i5 >= i0 goto label06;

        r40 = r2[i5];

        $r31 = r0.<org.apache.commons.math.linear.FieldLUDecompositionImpl$Solver: int[] pivot>;

        i6 = $r31[i5];

        i7 = 0;

     label04:
        if i7 >= i1 goto label05;

        $r32 = interfaceinvoke r1.<org.apache.commons.math.linear.FieldMatrix: org.apache.commons.math.FieldElement getEntry(int,int)>(i6, i7);

        r40[i7] = $r32;

        i7 = i7 + 1;

        goto label04;

     label05:
        i5 = i5 + 1;

        goto label03;

     label06:
        i8 = 0;

     label07:
        if i8 >= i0 goto label12;

        r41 = r2[i8];

        i9 = i8 + 1;

     label08:
        if i9 >= i0 goto label11;

        r42 = r2[i9];

        $r24 = r0.<org.apache.commons.math.linear.FieldLUDecompositionImpl$Solver: org.apache.commons.math.FieldElement[][] lu>;

        $r25 = $r24[i9];

        r43 = $r25[i8];

        i10 = 0;

     label09:
        if i10 >= i1 goto label10;

        $r27 = r42[i10];

        $r26 = r41[i10];

        $r28 = interfaceinvoke $r26.<org.apache.commons.math.FieldElement: java.lang.Object multiply(java.lang.Object)>(r43);

        $r29 = interfaceinvoke $r27.<org.apache.commons.math.FieldElement: java.lang.Object subtract(java.lang.Object)>($r28);

        $r30 = (org.apache.commons.math.FieldElement) $r29;

        r42[i10] = $r30;

        i10 = i10 + 1;

        goto label09;

     label10:
        i9 = i9 + 1;

        goto label08;

     label11:
        i8 = i8 + 1;

        goto label07;

     label12:
        i11 = i0 - 1;

     label13:
        if i11 < 0 goto label20;

        r44 = r2[i11];

        $r12 = r0.<org.apache.commons.math.linear.FieldLUDecompositionImpl$Solver: org.apache.commons.math.FieldElement[][] lu>;

        $r13 = $r12[i11];

        r45 = $r13[i11];

        i12 = 0;

     label14:
        if i12 >= i1 goto label15;

        $r21 = r44[i12];

        $r22 = interfaceinvoke $r21.<org.apache.commons.math.FieldElement: java.lang.Object divide(java.lang.Object)>(r45);

        $r23 = (org.apache.commons.math.FieldElement) $r22;

        r44[i12] = $r23;

        i12 = i12 + 1;

        goto label14;

     label15:
        i13 = 0;

     label16:
        if i13 >= i11 goto label19;

        r46 = r2[i13];

        $r14 = r0.<org.apache.commons.math.linear.FieldLUDecompositionImpl$Solver: org.apache.commons.math.FieldElement[][] lu>;

        $r15 = $r14[i13];

        r47 = $r15[i11];

        i14 = 0;

     label17:
        if i14 >= i1 goto label18;

        $r17 = r46[i14];

        $r16 = r44[i14];

        $r18 = interfaceinvoke $r16.<org.apache.commons.math.FieldElement: java.lang.Object multiply(java.lang.Object)>(r47);

        $r19 = interfaceinvoke $r17.<org.apache.commons.math.FieldElement: java.lang.Object subtract(java.lang.Object)>($r18);

        $r20 = (org.apache.commons.math.FieldElement) $r19;

        r46[i14] = $r20;

        i14 = i14 + 1;

        goto label17;

     label18:
        i13 = i13 + 1;

        goto label16;

     label19:
        i11 = i11 + -1;

        goto label13;

     label20:
        $r11 = new org.apache.commons.math.linear.Array2DRowFieldMatrix;

        specialinvoke $r11.<org.apache.commons.math.linear.Array2DRowFieldMatrix: void <init>(org.apache.commons.math.FieldElement[][],boolean)>(r2, 0);

        return $r11;
    }

    public org.apache.commons.math.linear.FieldMatrix getInverse() throws org.apache.commons.math.linear.InvalidMatrixException
    {
        org.apache.commons.math.linear.FieldLUDecompositionImpl$Solver r0;
        int i0, i1;
        org.apache.commons.math.FieldElement r1;
        int[] $r3;
        org.apache.commons.math.Field $r4, $r7;
        java.lang.Object $r5;
        org.apache.commons.math.linear.Array2DRowFieldMatrix $r6;
        org.apache.commons.math.linear.FieldMatrix $r8;

        r0 := @this: org.apache.commons.math.linear.FieldLUDecompositionImpl$Solver;

        $r3 = r0.<org.apache.commons.math.linear.FieldLUDecompositionImpl$Solver: int[] pivot>;

        i0 = lengthof $r3;

        $r4 = r0.<org.apache.commons.math.linear.FieldLUDecompositionImpl$Solver: org.apache.commons.math.Field field>;

        $r5 = interfaceinvoke $r4.<org.apache.commons.math.Field: java.lang.Object getOne()>();

        r1 = (org.apache.commons.math.FieldElement) $r5;

        $r6 = new org.apache.commons.math.linear.Array2DRowFieldMatrix;

        $r7 = r0.<org.apache.commons.math.linear.FieldLUDecompositionImpl$Solver: org.apache.commons.math.Field field>;

        specialinvoke $r6.<org.apache.commons.math.linear.Array2DRowFieldMatrix: void <init>(org.apache.commons.math.Field,int,int)>($r7, i0, i0);

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        interfaceinvoke $r6.<org.apache.commons.math.linear.FieldMatrix: void setEntry(int,int,org.apache.commons.math.FieldElement)>(i1, i1, r1);

        i1 = i1 + 1;

        goto label1;

     label2:
        $r8 = virtualinvoke r0.<org.apache.commons.math.linear.FieldLUDecompositionImpl$Solver: org.apache.commons.math.linear.FieldMatrix solve(org.apache.commons.math.linear.FieldMatrix)>($r6);

        return $r8;
    }

    void <init>(org.apache.commons.math.Field, org.apache.commons.math.FieldElement[][], int[], boolean, org.apache.commons.math.linear.FieldLUDecompositionImpl$1)
    {
        org.apache.commons.math.linear.FieldLUDecompositionImpl$Solver r0;
        org.apache.commons.math.Field r1;
        org.apache.commons.math.FieldElement[][] r2;
        int[] r3;
        boolean z0;
        org.apache.commons.math.linear.FieldLUDecompositionImpl$1 r4;

        r0 := @this: org.apache.commons.math.linear.FieldLUDecompositionImpl$Solver;

        r1 := @parameter0: org.apache.commons.math.Field;

        r2 := @parameter1: org.apache.commons.math.FieldElement[][];

        r3 := @parameter2: int[];

        z0 := @parameter3: boolean;

        r4 := @parameter4: org.apache.commons.math.linear.FieldLUDecompositionImpl$1;

        specialinvoke r0.<org.apache.commons.math.linear.FieldLUDecompositionImpl$Solver: void <init>(org.apache.commons.math.Field,org.apache.commons.math.FieldElement[][],int[],boolean)>(r1, r2, r3, z0);

        return;
    }

    public static void <clinit>()
    {
        <org.apache.commons.math.linear.FieldLUDecompositionImpl$Solver: long serialVersionUID> = -6353105415121373022L;

        return;
    }
}
