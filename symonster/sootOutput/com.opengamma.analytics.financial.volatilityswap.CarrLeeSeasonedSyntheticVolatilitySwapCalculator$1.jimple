class com.opengamma.analytics.financial.volatilityswap.CarrLeeSeasonedSyntheticVolatilitySwapCalculator$1 extends com.opengamma.analytics.math.function.Function1D
{
    final double val$resRV;
    final double val$logKF;
    final com.opengamma.analytics.financial.volatilityswap.CarrLeeSeasonedSyntheticVolatilitySwapCalculator this$0;

    void <init>(com.opengamma.analytics.financial.volatilityswap.CarrLeeSeasonedSyntheticVolatilitySwapCalculator, double, double)
    {
        com.opengamma.analytics.financial.volatilityswap.CarrLeeSeasonedSyntheticVolatilitySwapCalculator$1 r0;
        com.opengamma.analytics.financial.volatilityswap.CarrLeeSeasonedSyntheticVolatilitySwapCalculator r1;
        double d0, d1;

        r0 := @this: com.opengamma.analytics.financial.volatilityswap.CarrLeeSeasonedSyntheticVolatilitySwapCalculator$1;

        r1 := @parameter0: com.opengamma.analytics.financial.volatilityswap.CarrLeeSeasonedSyntheticVolatilitySwapCalculator;

        d0 := @parameter1: double;

        d1 := @parameter2: double;

        r0.<com.opengamma.analytics.financial.volatilityswap.CarrLeeSeasonedSyntheticVolatilitySwapCalculator$1: com.opengamma.analytics.financial.volatilityswap.CarrLeeSeasonedSyntheticVolatilitySwapCalculator this$0> = r1;

        r0.<com.opengamma.analytics.financial.volatilityswap.CarrLeeSeasonedSyntheticVolatilitySwapCalculator$1: double val$resRV> = d0;

        r0.<com.opengamma.analytics.financial.volatilityswap.CarrLeeSeasonedSyntheticVolatilitySwapCalculator$1: double val$logKF> = d1;

        specialinvoke r0.<com.opengamma.analytics.math.function.Function1D: void <init>()>();

        return;
    }

    public java.lang.Double evaluate(java.lang.Double)
    {
        com.opengamma.analytics.financial.volatilityswap.CarrLeeSeasonedSyntheticVolatilitySwapCalculator$1 r0;
        java.lang.Double r1, $r2;
        double d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19;

        r0 := @this: com.opengamma.analytics.financial.volatilityswap.CarrLeeSeasonedSyntheticVolatilitySwapCalculator$1;

        r1 := @parameter0: java.lang.Double;

        $d1 = virtualinvoke r1.<java.lang.Double: double doubleValue()>();

        d0 = staticinvoke <java.lang.Math: double cos(double)>($d1);

        $d2 = r0.<com.opengamma.analytics.financial.volatilityswap.CarrLeeSeasonedSyntheticVolatilitySwapCalculator$1: double val$resRV>;

        $d3 = -0.125 * $d2;

        $d4 = virtualinvoke r1.<java.lang.Double: double doubleValue()>();

        $d5 = staticinvoke <java.lang.Math: double sin(double)>($d4);

        $d6 = staticinvoke <java.lang.Math: double pow(double,double)>($d5, 2.0);

        $d7 = $d3 * $d6;

        $d8 = staticinvoke <java.lang.Math: double exp(double)>($d7);

        $d9 = r0.<com.opengamma.analytics.financial.volatilityswap.CarrLeeSeasonedSyntheticVolatilitySwapCalculator$1: double val$logKF>;

        $d10 = 0.5 * $d9;

        $d11 = $d10 * d0;

        $d12 = staticinvoke <java.lang.Math: double cosh(double)>($d11);

        $d16 = d0 * $d12;

        $d13 = r0.<com.opengamma.analytics.financial.volatilityswap.CarrLeeSeasonedSyntheticVolatilitySwapCalculator$1: double val$logKF>;

        $d14 = 0.5 * $d13;

        $d15 = $d14 * d0;

        $d17 = staticinvoke <java.lang.Math: double sinh(double)>($d15);

        $d18 = $d16 - $d17;

        $d19 = $d8 * $d18;

        $r2 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d19);

        return $r2;
    }

    public volatile java.lang.Object evaluate(java.lang.Object)
    {
        com.opengamma.analytics.financial.volatilityswap.CarrLeeSeasonedSyntheticVolatilitySwapCalculator$1 r0;
        java.lang.Object r1;
        java.lang.Double $r2, $r3;

        r0 := @this: com.opengamma.analytics.financial.volatilityswap.CarrLeeSeasonedSyntheticVolatilitySwapCalculator$1;

        r1 := @parameter0: java.lang.Object;

        $r2 = (java.lang.Double) r1;

        $r3 = virtualinvoke r0.<com.opengamma.analytics.financial.volatilityswap.CarrLeeSeasonedSyntheticVolatilitySwapCalculator$1: java.lang.Double evaluate(java.lang.Double)>($r2);

        return $r3;
    }
}
