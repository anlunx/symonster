public final class com.opengamma.analytics.financial.forex.conversion.ForexDomesticPipsToPresentValueConverter extends java.lang.Object
{

    public void <init>()
    {
        com.opengamma.analytics.financial.forex.conversion.ForexDomesticPipsToPresentValueConverter r0;

        r0 := @this: com.opengamma.analytics.financial.forex.conversion.ForexDomesticPipsToPresentValueConverter;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static com.opengamma.util.money.MultipleCurrencyAmount convertDomesticPipsToFXPresentValue(double, double, com.opengamma.util.money.Currency, com.opengamma.util.money.Currency, double, double)
    {
        double d0, d1, d2, d3, d4, d5, $d6;
        com.opengamma.util.money.Currency r0, r1;
        com.opengamma.util.money.MultipleCurrencyAmount r3;
        byte $b0, $b1;
        java.lang.Object[] $r4;
        java.lang.Double $r5, $r9, $r11;
        java.util.HashMap $r8;
        boolean $z0, $z1;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        r0 := @parameter2: com.opengamma.util.money.Currency;

        r1 := @parameter3: com.opengamma.util.money.Currency;

        d2 := @parameter4: double;

        d3 := @parameter5: double;

        $b0 = d0 cmpl 0.0;

        if $b0 < 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z0, "Negative price given");

        $b1 = d1 cmpl 0.0;

        if $b1 <= 0 goto label3;

        $z1 = 1;

        goto label4;

     label3:
        $z1 = 0;

     label4:
        $r4 = newarray (java.lang.Object)[1];

        $r5 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d1);

        $r4[0] = $r5;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String,java.lang.Object[])>($z1, "Spot rate must be greater than zero. value gvien is {}", $r4);

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r0, "put currency");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "call currency");

        $r8 = new java.util.HashMap;

        specialinvoke $r8.<java.util.HashMap: void <init>()>();

        d4 = d2 * d0;

        $d6 = d3 * d0;

        d5 = $d6 / d1;

        $r9 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d5);

        interfaceinvoke $r8.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r9);

        $r11 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d4);

        interfaceinvoke $r8.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r0, $r11);

        r3 = staticinvoke <com.opengamma.util.money.MultipleCurrencyAmount: com.opengamma.util.money.MultipleCurrencyAmount of(java.util.Map)>($r8);

        return r3;
    }
}
