class org.apache.commons.math.optimization.direct.PowellOptimizer$LineSearch$1 extends java.lang.Object implements org.apache.commons.math.analysis.UnivariateRealFunction
{
    final int val$n;
    final double[] val$p;
    final double[] val$d;
    final org.apache.commons.math.optimization.direct.PowellOptimizer$LineSearch this$1;

    void <init>(org.apache.commons.math.optimization.direct.PowellOptimizer$LineSearch, int, double[], double[])
    {
        org.apache.commons.math.optimization.direct.PowellOptimizer$LineSearch$1 r0;
        org.apache.commons.math.optimization.direct.PowellOptimizer$LineSearch r1;
        int i0;
        double[] r2, r3;

        r0 := @this: org.apache.commons.math.optimization.direct.PowellOptimizer$LineSearch$1;

        r1 := @parameter0: org.apache.commons.math.optimization.direct.PowellOptimizer$LineSearch;

        i0 := @parameter1: int;

        r2 := @parameter2: double[];

        r3 := @parameter3: double[];

        r0.<org.apache.commons.math.optimization.direct.PowellOptimizer$LineSearch$1: org.apache.commons.math.optimization.direct.PowellOptimizer$LineSearch this$1> = r1;

        r0.<org.apache.commons.math.optimization.direct.PowellOptimizer$LineSearch$1: int val$n> = i0;

        r0.<org.apache.commons.math.optimization.direct.PowellOptimizer$LineSearch$1: double[] val$p> = r2;

        r0.<org.apache.commons.math.optimization.direct.PowellOptimizer$LineSearch$1: double[] val$d> = r3;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public double value(double) throws org.apache.commons.math.FunctionEvaluationException
    {
        org.apache.commons.math.optimization.direct.PowellOptimizer$LineSearch$1 r0;
        double d0, $d1, $d2, $d3, $d4, d5;
        double[] r1, $r4, $r5;
        int $i0, $i1, i2;
        org.apache.commons.math.optimization.direct.PowellOptimizer$LineSearch $r2;
        org.apache.commons.math.optimization.direct.PowellOptimizer $r3;

        r0 := @this: org.apache.commons.math.optimization.direct.PowellOptimizer$LineSearch$1;

        d0 := @parameter0: double;

        $i0 = r0.<org.apache.commons.math.optimization.direct.PowellOptimizer$LineSearch$1: int val$n>;

        r1 = newarray (double)[$i0];

        i2 = 0;

     label1:
        $i1 = r0.<org.apache.commons.math.optimization.direct.PowellOptimizer$LineSearch$1: int val$n>;

        if i2 >= $i1 goto label2;

        $r4 = r0.<org.apache.commons.math.optimization.direct.PowellOptimizer$LineSearch$1: double[] val$p>;

        $d3 = $r4[i2];

        $r5 = r0.<org.apache.commons.math.optimization.direct.PowellOptimizer$LineSearch$1: double[] val$d>;

        $d1 = $r5[i2];

        $d2 = d0 * $d1;

        $d4 = $d3 + $d2;

        r1[i2] = $d4;

        i2 = i2 + 1;

        goto label1;

     label2:
        $r2 = r0.<org.apache.commons.math.optimization.direct.PowellOptimizer$LineSearch$1: org.apache.commons.math.optimization.direct.PowellOptimizer$LineSearch this$1>;

        $r3 = $r2.<org.apache.commons.math.optimization.direct.PowellOptimizer$LineSearch: org.apache.commons.math.optimization.direct.PowellOptimizer this$0>;

        d5 = staticinvoke <org.apache.commons.math.optimization.direct.PowellOptimizer: double access$000(org.apache.commons.math.optimization.direct.PowellOptimizer,double[])>($r3, r1);

        return d5;
    }
}
