public final class org.jcp.xml.dsig.internal.dom.DOMX509Data extends org.jcp.xml.dsig.internal.dom.DOMStructure implements javax.xml.crypto.dsig.keyinfo.X509Data
{
    private final java.util.List content;
    private java.security.cert.CertificateFactory cf;

    public void <init>(java.util.List)
    {
        org.jcp.xml.dsig.internal.dom.DOMX509Data r0;
        java.util.List r1, $r5;
        int i0, i1;
        java.lang.Object r3;
        java.util.ArrayList $r4;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        java.lang.ClassCastException $r6;
        java.lang.StringBuilder $r7, $r8, $r9, $r10;
        java.lang.String $r11, $r13;
        javax.security.auth.x500.X500Principal $r12;
        java.lang.IllegalArgumentException $r14;
        java.lang.NullPointerException $r15;

        r0 := @this: org.jcp.xml.dsig.internal.dom.DOMX509Data;

        r1 := @parameter0: java.util.List;

        specialinvoke r0.<org.jcp.xml.dsig.internal.dom.DOMStructure: void <init>()>();

        if r1 != null goto label1;

        $r15 = new java.lang.NullPointerException;

        specialinvoke $r15.<java.lang.NullPointerException: void <init>(java.lang.String)>("content cannot be null");

        throw $r15;

     label1:
        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>(java.util.Collection)>(r1);

        $z0 = interfaceinvoke $r4.<java.util.List: boolean isEmpty()>();

        if $z0 == 0 goto label2;

        $r14 = new java.lang.IllegalArgumentException;

        specialinvoke $r14.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("content cannot be empty");

        throw $r14;

     label2:
        i1 = 0;

        i0 = interfaceinvoke $r4.<java.util.List: int size()>();

     label3:
        if i1 >= i0 goto label6;

        r3 = interfaceinvoke $r4.<java.util.List: java.lang.Object get(int)>(i1);

        $z1 = r3 instanceof java.lang.String;

        if $z1 == 0 goto label4;

        $r12 = new javax.security.auth.x500.X500Principal;

        $r13 = (java.lang.String) r3;

        specialinvoke $r12.<javax.security.auth.x500.X500Principal: void <init>(java.lang.String)>($r13);

        goto label5;

     label4:
        $z2 = r3 instanceof byte[];

        if $z2 != 0 goto label5;

        $z3 = r3 instanceof java.security.cert.X509Certificate;

        if $z3 != 0 goto label5;

        $z4 = r3 instanceof java.security.cert.X509CRL;

        if $z4 != 0 goto label5;

        $z5 = r3 instanceof javax.xml.crypto.XMLStructure;

        if $z5 != 0 goto label5;

        $r6 = new java.lang.ClassCastException;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("content[");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("] is not a valid X509Data type");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<java.lang.ClassCastException: void <init>(java.lang.String)>($r11);

        throw $r6;

     label5:
        i1 = i1 + 1;

        goto label3;

     label6:
        $r5 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r4);

        r0.<org.jcp.xml.dsig.internal.dom.DOMX509Data: java.util.List content> = $r5;

        return;
    }

    public void <init>(org.w3c.dom.Element) throws javax.xml.crypto.MarshalException
    {
        org.jcp.xml.dsig.internal.dom.DOMX509Data r0;
        org.w3c.dom.Element r1, r5;
        org.w3c.dom.NodeList r2;
        int i0, i2;
        org.w3c.dom.Node r4, $r13;
        java.lang.String r6, $r14;
        java.util.ArrayList $r8;
        java.util.List $r9;
        short $s1;
        boolean $z0, $z1, $z2, $z3, $z4;
        javax.xml.crypto.dom.DOMStructure $r10;
        java.security.cert.X509CRL $r11;
        byte[] $r12;
        org.jcp.xml.dsig.internal.dom.DOMX509IssuerSerial $r15;
        java.security.cert.X509Certificate $r16;
        com.sun.org.apache.xml.internal.security.exceptions.Base64DecodingException $r17;
        javax.xml.crypto.MarshalException $r18;

        r0 := @this: org.jcp.xml.dsig.internal.dom.DOMX509Data;

        r1 := @parameter0: org.w3c.dom.Element;

        specialinvoke r0.<org.jcp.xml.dsig.internal.dom.DOMStructure: void <init>()>();

        r2 = interfaceinvoke r1.<org.w3c.dom.Element: org.w3c.dom.NodeList getChildNodes()>();

        i0 = interfaceinvoke r2.<org.w3c.dom.NodeList: int getLength()>();

        $r8 = new java.util.ArrayList;

        specialinvoke $r8.<java.util.ArrayList: void <init>(int)>(i0);

        i2 = 0;

     label01:
        if i2 >= i0 goto label12;

        r4 = interfaceinvoke r2.<org.w3c.dom.NodeList: org.w3c.dom.Node item(int)>(i2);

        $s1 = interfaceinvoke r4.<org.w3c.dom.Node: short getNodeType()>();

        if $s1 == 1 goto label02;

        goto label11;

     label02:
        r5 = (org.w3c.dom.Element) r4;

        r6 = interfaceinvoke r5.<org.w3c.dom.Element: java.lang.String getLocalName()>();

        $z0 = virtualinvoke r6.<java.lang.String: boolean equals(java.lang.Object)>("X509Certificate");

        if $z0 == 0 goto label03;

        $r16 = specialinvoke r0.<org.jcp.xml.dsig.internal.dom.DOMX509Data: java.security.cert.X509Certificate unmarshalX509Certificate(org.w3c.dom.Element)>(r5);

        interfaceinvoke $r8.<java.util.List: boolean add(java.lang.Object)>($r16);

        goto label11;

     label03:
        $z1 = virtualinvoke r6.<java.lang.String: boolean equals(java.lang.Object)>("X509IssuerSerial");

        if $z1 == 0 goto label04;

        $r15 = new org.jcp.xml.dsig.internal.dom.DOMX509IssuerSerial;

        specialinvoke $r15.<org.jcp.xml.dsig.internal.dom.DOMX509IssuerSerial: void <init>(org.w3c.dom.Element)>(r5);

        interfaceinvoke $r8.<java.util.List: boolean add(java.lang.Object)>($r15);

        goto label11;

     label04:
        $z2 = virtualinvoke r6.<java.lang.String: boolean equals(java.lang.Object)>("X509SubjectName");

        if $z2 == 0 goto label05;

        $r13 = interfaceinvoke r5.<org.w3c.dom.Element: org.w3c.dom.Node getFirstChild()>();

        $r14 = interfaceinvoke $r13.<org.w3c.dom.Node: java.lang.String getNodeValue()>();

        interfaceinvoke $r8.<java.util.List: boolean add(java.lang.Object)>($r14);

        goto label11;

     label05:
        $z3 = virtualinvoke r6.<java.lang.String: boolean equals(java.lang.Object)>("X509SKI");

        if $z3 == 0 goto label09;

     label06:
        $r12 = staticinvoke <com.sun.org.apache.xml.internal.security.utils.Base64: byte[] decode(org.w3c.dom.Element)>(r5);

        interfaceinvoke $r8.<java.util.List: boolean add(java.lang.Object)>($r12);

     label07:
        goto label11;

     label08:
        $r17 := @caughtexception;

        $r18 = new javax.xml.crypto.MarshalException;

        specialinvoke $r18.<javax.xml.crypto.MarshalException: void <init>(java.lang.String,java.lang.Throwable)>("cannot decode X509SKI", $r17);

        throw $r18;

     label09:
        $z4 = virtualinvoke r6.<java.lang.String: boolean equals(java.lang.Object)>("X509CRL");

        if $z4 == 0 goto label10;

        $r11 = specialinvoke r0.<org.jcp.xml.dsig.internal.dom.DOMX509Data: java.security.cert.X509CRL unmarshalX509CRL(org.w3c.dom.Element)>(r5);

        interfaceinvoke $r8.<java.util.List: boolean add(java.lang.Object)>($r11);

        goto label11;

     label10:
        $r10 = new javax.xml.crypto.dom.DOMStructure;

        specialinvoke $r10.<javax.xml.crypto.dom.DOMStructure: void <init>(org.w3c.dom.Node)>(r5);

        interfaceinvoke $r8.<java.util.List: boolean add(java.lang.Object)>($r10);

     label11:
        i2 = i2 + 1;

        goto label01;

     label12:
        $r9 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r8);

        r0.<org.jcp.xml.dsig.internal.dom.DOMX509Data: java.util.List content> = $r9;

        return;

        catch com.sun.org.apache.xml.internal.security.exceptions.Base64DecodingException from label06 to label07 with label08;
    }

    public java.util.List getContent()
    {
        org.jcp.xml.dsig.internal.dom.DOMX509Data r0;
        java.util.List $r1;

        r0 := @this: org.jcp.xml.dsig.internal.dom.DOMX509Data;

        $r1 = r0.<org.jcp.xml.dsig.internal.dom.DOMX509Data: java.util.List content>;

        return $r1;
    }

    public void marshal(org.w3c.dom.Node, java.lang.String, javax.xml.crypto.dom.DOMCryptoContext) throws javax.xml.crypto.MarshalException
    {
        org.jcp.xml.dsig.internal.dom.DOMX509Data r0;
        org.w3c.dom.Node r1, $r15;
        java.lang.String r2, $r12;
        javax.xml.crypto.dom.DOMCryptoContext r3;
        org.w3c.dom.Document r4;
        org.w3c.dom.Element r5;
        int i0, i1;
        java.lang.Object r6;
        javax.xml.crypto.dom.DOMStructure r7;
        java.util.List $r8, $r10;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        java.security.cert.X509CRL $r11;
        byte[] $r13, $r14;
        org.jcp.xml.dsig.internal.dom.DOMX509IssuerSerial $r16;
        java.security.cert.X509Certificate $r17;

        r0 := @this: org.jcp.xml.dsig.internal.dom.DOMX509Data;

        r1 := @parameter0: org.w3c.dom.Node;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: javax.xml.crypto.dom.DOMCryptoContext;

        r4 = staticinvoke <org.jcp.xml.dsig.internal.dom.DOMUtils: org.w3c.dom.Document getOwnerDocument(org.w3c.dom.Node)>(r1);

        r5 = staticinvoke <org.jcp.xml.dsig.internal.dom.DOMUtils: org.w3c.dom.Element createElement(org.w3c.dom.Document,java.lang.String,java.lang.String,java.lang.String)>(r4, "X509Data", "http://www.w3.org/2000/09/xmldsig#", r2);

        i1 = 0;

        $r8 = r0.<org.jcp.xml.dsig.internal.dom.DOMX509Data: java.util.List content>;

        i0 = interfaceinvoke $r8.<java.util.List: int size()>();

     label1:
        if i1 >= i0 goto label8;

        $r10 = r0.<org.jcp.xml.dsig.internal.dom.DOMX509Data: java.util.List content>;

        r6 = interfaceinvoke $r10.<java.util.List: java.lang.Object get(int)>(i1);

        $z0 = r6 instanceof java.security.cert.X509Certificate;

        if $z0 == 0 goto label2;

        $r17 = (java.security.cert.X509Certificate) r6;

        specialinvoke r0.<org.jcp.xml.dsig.internal.dom.DOMX509Data: void marshalCert(java.security.cert.X509Certificate,org.w3c.dom.Node,org.w3c.dom.Document,java.lang.String)>($r17, r5, r4, r2);

        goto label7;

     label2:
        $z1 = r6 instanceof javax.xml.crypto.XMLStructure;

        if $z1 == 0 goto label4;

        $z5 = r6 instanceof javax.xml.crypto.dsig.keyinfo.X509IssuerSerial;

        if $z5 == 0 goto label3;

        $r16 = (org.jcp.xml.dsig.internal.dom.DOMX509IssuerSerial) r6;

        virtualinvoke $r16.<org.jcp.xml.dsig.internal.dom.DOMX509IssuerSerial: void marshal(org.w3c.dom.Node,java.lang.String,javax.xml.crypto.dom.DOMCryptoContext)>(r5, r2, r3);

        goto label7;

     label3:
        r7 = (javax.xml.crypto.dom.DOMStructure) r6;

        $r15 = virtualinvoke r7.<javax.xml.crypto.dom.DOMStructure: org.w3c.dom.Node getNode()>();

        staticinvoke <org.jcp.xml.dsig.internal.dom.DOMUtils: void appendChild(org.w3c.dom.Node,org.w3c.dom.Node)>(r5, $r15);

        goto label7;

     label4:
        $z2 = r6 instanceof byte[];

        if $z2 == 0 goto label5;

        $r13 = (byte[]) r6;

        $r14 = (byte[]) $r13;

        specialinvoke r0.<org.jcp.xml.dsig.internal.dom.DOMX509Data: void marshalSKI(byte[],org.w3c.dom.Node,org.w3c.dom.Document,java.lang.String)>($r14, r5, r4, r2);

        goto label7;

     label5:
        $z3 = r6 instanceof java.lang.String;

        if $z3 == 0 goto label6;

        $r12 = (java.lang.String) r6;

        specialinvoke r0.<org.jcp.xml.dsig.internal.dom.DOMX509Data: void marshalSubjectName(java.lang.String,org.w3c.dom.Node,org.w3c.dom.Document,java.lang.String)>($r12, r5, r4, r2);

        goto label7;

     label6:
        $z4 = r6 instanceof java.security.cert.X509CRL;

        if $z4 == 0 goto label7;

        $r11 = (java.security.cert.X509CRL) r6;

        specialinvoke r0.<org.jcp.xml.dsig.internal.dom.DOMX509Data: void marshalCRL(java.security.cert.X509CRL,org.w3c.dom.Node,org.w3c.dom.Document,java.lang.String)>($r11, r5, r4, r2);

     label7:
        i1 = i1 + 1;

        goto label1;

     label8:
        interfaceinvoke r1.<org.w3c.dom.Node: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>(r5);

        return;
    }

    private void marshalSKI(byte[], org.w3c.dom.Node, org.w3c.dom.Document, java.lang.String)
    {
        org.jcp.xml.dsig.internal.dom.DOMX509Data r0;
        byte[] r1;
        org.w3c.dom.Node r2;
        org.w3c.dom.Document r3;
        java.lang.String r4, $r6;
        org.w3c.dom.Element r5;
        org.w3c.dom.Text $r7;

        r0 := @this: org.jcp.xml.dsig.internal.dom.DOMX509Data;

        r1 := @parameter0: byte[];

        r2 := @parameter1: org.w3c.dom.Node;

        r3 := @parameter2: org.w3c.dom.Document;

        r4 := @parameter3: java.lang.String;

        r5 = staticinvoke <org.jcp.xml.dsig.internal.dom.DOMUtils: org.w3c.dom.Element createElement(org.w3c.dom.Document,java.lang.String,java.lang.String,java.lang.String)>(r3, "X509SKI", "http://www.w3.org/2000/09/xmldsig#", r4);

        $r6 = staticinvoke <com.sun.org.apache.xml.internal.security.utils.Base64: java.lang.String encode(byte[])>(r1);

        $r7 = interfaceinvoke r3.<org.w3c.dom.Document: org.w3c.dom.Text createTextNode(java.lang.String)>($r6);

        interfaceinvoke r5.<org.w3c.dom.Element: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>($r7);

        interfaceinvoke r2.<org.w3c.dom.Node: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>(r5);

        return;
    }

    private void marshalSubjectName(java.lang.String, org.w3c.dom.Node, org.w3c.dom.Document, java.lang.String)
    {
        org.jcp.xml.dsig.internal.dom.DOMX509Data r0;
        java.lang.String r1, r4;
        org.w3c.dom.Node r2;
        org.w3c.dom.Document r3;
        org.w3c.dom.Element r5;
        org.w3c.dom.Text $r6;

        r0 := @this: org.jcp.xml.dsig.internal.dom.DOMX509Data;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: org.w3c.dom.Node;

        r3 := @parameter2: org.w3c.dom.Document;

        r4 := @parameter3: java.lang.String;

        r5 = staticinvoke <org.jcp.xml.dsig.internal.dom.DOMUtils: org.w3c.dom.Element createElement(org.w3c.dom.Document,java.lang.String,java.lang.String,java.lang.String)>(r3, "X509SubjectName", "http://www.w3.org/2000/09/xmldsig#", r4);

        $r6 = interfaceinvoke r3.<org.w3c.dom.Document: org.w3c.dom.Text createTextNode(java.lang.String)>(r1);

        interfaceinvoke r5.<org.w3c.dom.Element: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>($r6);

        interfaceinvoke r2.<org.w3c.dom.Node: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>(r5);

        return;
    }

    private void marshalCert(java.security.cert.X509Certificate, org.w3c.dom.Node, org.w3c.dom.Document, java.lang.String) throws javax.xml.crypto.MarshalException
    {
        org.jcp.xml.dsig.internal.dom.DOMX509Data r0;
        java.security.cert.X509Certificate r1;
        org.w3c.dom.Node r2;
        org.w3c.dom.Document r3;
        java.lang.String r4, $r8;
        org.w3c.dom.Element r5;
        byte[] $r7;
        org.w3c.dom.Text $r9;
        java.security.cert.CertificateEncodingException $r12;
        javax.xml.crypto.MarshalException $r13;

        r0 := @this: org.jcp.xml.dsig.internal.dom.DOMX509Data;

        r1 := @parameter0: java.security.cert.X509Certificate;

        r2 := @parameter1: org.w3c.dom.Node;

        r3 := @parameter2: org.w3c.dom.Document;

        r4 := @parameter3: java.lang.String;

        r5 = staticinvoke <org.jcp.xml.dsig.internal.dom.DOMUtils: org.w3c.dom.Element createElement(org.w3c.dom.Document,java.lang.String,java.lang.String,java.lang.String)>(r3, "X509Certificate", "http://www.w3.org/2000/09/xmldsig#", r4);

     label1:
        $r7 = virtualinvoke r1.<java.security.cert.X509Certificate: byte[] getEncoded()>();

        $r8 = staticinvoke <com.sun.org.apache.xml.internal.security.utils.Base64: java.lang.String encode(byte[])>($r7);

        $r9 = interfaceinvoke r3.<org.w3c.dom.Document: org.w3c.dom.Text createTextNode(java.lang.String)>($r8);

        interfaceinvoke r5.<org.w3c.dom.Element: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>($r9);

     label2:
        goto label4;

     label3:
        $r12 := @caughtexception;

        $r13 = new javax.xml.crypto.MarshalException;

        specialinvoke $r13.<javax.xml.crypto.MarshalException: void <init>(java.lang.String,java.lang.Throwable)>("Error encoding X509Certificate", $r12);

        throw $r13;

     label4:
        interfaceinvoke r2.<org.w3c.dom.Node: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>(r5);

        return;

        catch java.security.cert.CertificateEncodingException from label1 to label2 with label3;
    }

    private void marshalCRL(java.security.cert.X509CRL, org.w3c.dom.Node, org.w3c.dom.Document, java.lang.String) throws javax.xml.crypto.MarshalException
    {
        org.jcp.xml.dsig.internal.dom.DOMX509Data r0;
        java.security.cert.X509CRL r1;
        org.w3c.dom.Node r2;
        org.w3c.dom.Document r3;
        java.lang.String r4, $r8;
        org.w3c.dom.Element r5;
        byte[] $r7;
        org.w3c.dom.Text $r9;
        java.security.cert.CRLException $r12;
        javax.xml.crypto.MarshalException $r13;

        r0 := @this: org.jcp.xml.dsig.internal.dom.DOMX509Data;

        r1 := @parameter0: java.security.cert.X509CRL;

        r2 := @parameter1: org.w3c.dom.Node;

        r3 := @parameter2: org.w3c.dom.Document;

        r4 := @parameter3: java.lang.String;

        r5 = staticinvoke <org.jcp.xml.dsig.internal.dom.DOMUtils: org.w3c.dom.Element createElement(org.w3c.dom.Document,java.lang.String,java.lang.String,java.lang.String)>(r3, "X509CRL", "http://www.w3.org/2000/09/xmldsig#", r4);

     label1:
        $r7 = virtualinvoke r1.<java.security.cert.X509CRL: byte[] getEncoded()>();

        $r8 = staticinvoke <com.sun.org.apache.xml.internal.security.utils.Base64: java.lang.String encode(byte[])>($r7);

        $r9 = interfaceinvoke r3.<org.w3c.dom.Document: org.w3c.dom.Text createTextNode(java.lang.String)>($r8);

        interfaceinvoke r5.<org.w3c.dom.Element: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>($r9);

     label2:
        goto label4;

     label3:
        $r12 := @caughtexception;

        $r13 = new javax.xml.crypto.MarshalException;

        specialinvoke $r13.<javax.xml.crypto.MarshalException: void <init>(java.lang.String,java.lang.Throwable)>("Error encoding X509CRL", $r12);

        throw $r13;

     label4:
        interfaceinvoke r2.<org.w3c.dom.Node: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>(r5);

        return;

        catch java.security.cert.CRLException from label1 to label2 with label3;
    }

    private java.security.cert.X509Certificate unmarshalX509Certificate(org.w3c.dom.Element) throws javax.xml.crypto.MarshalException
    {
        org.jcp.xml.dsig.internal.dom.DOMX509Data r0;
        org.w3c.dom.Element r1;
        java.security.cert.CertificateFactory $r2;
        java.security.cert.Certificate $r3;
        java.security.cert.X509Certificate $r4;
        java.security.cert.CertificateException $r5;
        javax.xml.crypto.MarshalException $r6;
        java.io.ByteArrayInputStream r7;

        r0 := @this: org.jcp.xml.dsig.internal.dom.DOMX509Data;

        r1 := @parameter0: org.w3c.dom.Element;

     label1:
        r7 = specialinvoke r0.<org.jcp.xml.dsig.internal.dom.DOMX509Data: java.io.ByteArrayInputStream unmarshalBase64Binary(org.w3c.dom.Element)>(r1);

        $r2 = r0.<org.jcp.xml.dsig.internal.dom.DOMX509Data: java.security.cert.CertificateFactory cf>;

        $r3 = virtualinvoke $r2.<java.security.cert.CertificateFactory: java.security.cert.Certificate generateCertificate(java.io.InputStream)>(r7);

        $r4 = (java.security.cert.X509Certificate) $r3;

     label2:
        return $r4;

     label3:
        $r5 := @caughtexception;

        $r6 = new javax.xml.crypto.MarshalException;

        specialinvoke $r6.<javax.xml.crypto.MarshalException: void <init>(java.lang.String,java.lang.Throwable)>("Cannot create X509Certificate", $r5);

        throw $r6;

        catch java.security.cert.CertificateException from label1 to label2 with label3;
    }

    private java.security.cert.X509CRL unmarshalX509CRL(org.w3c.dom.Element) throws javax.xml.crypto.MarshalException
    {
        org.jcp.xml.dsig.internal.dom.DOMX509Data r0;
        org.w3c.dom.Element r1;
        java.security.cert.CertificateFactory $r2;
        java.security.cert.CRL $r3;
        java.security.cert.X509CRL $r4;
        java.security.cert.CRLException $r5;
        javax.xml.crypto.MarshalException $r6;
        java.io.ByteArrayInputStream r7;

        r0 := @this: org.jcp.xml.dsig.internal.dom.DOMX509Data;

        r1 := @parameter0: org.w3c.dom.Element;

     label1:
        r7 = specialinvoke r0.<org.jcp.xml.dsig.internal.dom.DOMX509Data: java.io.ByteArrayInputStream unmarshalBase64Binary(org.w3c.dom.Element)>(r1);

        $r2 = r0.<org.jcp.xml.dsig.internal.dom.DOMX509Data: java.security.cert.CertificateFactory cf>;

        $r3 = virtualinvoke $r2.<java.security.cert.CertificateFactory: java.security.cert.CRL generateCRL(java.io.InputStream)>(r7);

        $r4 = (java.security.cert.X509CRL) $r3;

     label2:
        return $r4;

     label3:
        $r5 := @caughtexception;

        $r6 = new javax.xml.crypto.MarshalException;

        specialinvoke $r6.<javax.xml.crypto.MarshalException: void <init>(java.lang.String,java.lang.Throwable)>("Cannot create X509CRL", $r5);

        throw $r6;

        catch java.security.cert.CRLException from label1 to label2 with label3;
    }

    private java.io.ByteArrayInputStream unmarshalBase64Binary(org.w3c.dom.Element) throws javax.xml.crypto.MarshalException
    {
        org.jcp.xml.dsig.internal.dom.DOMX509Data r0;
        org.w3c.dom.Element r1;
        java.security.cert.CertificateFactory $r2, $r5;
        java.io.ByteArrayInputStream $r3;
        byte[] $r4;
        java.security.cert.CertificateException $r6;
        javax.xml.crypto.MarshalException $r7, $r9;
        com.sun.org.apache.xml.internal.security.exceptions.Base64DecodingException $r8;

        r0 := @this: org.jcp.xml.dsig.internal.dom.DOMX509Data;

        r1 := @parameter0: org.w3c.dom.Element;

     label1:
        $r2 = r0.<org.jcp.xml.dsig.internal.dom.DOMX509Data: java.security.cert.CertificateFactory cf>;

        if $r2 != null goto label2;

        $r5 = staticinvoke <java.security.cert.CertificateFactory: java.security.cert.CertificateFactory getInstance(java.lang.String)>("X.509");

        r0.<org.jcp.xml.dsig.internal.dom.DOMX509Data: java.security.cert.CertificateFactory cf> = $r5;

     label2:
        $r3 = new java.io.ByteArrayInputStream;

        $r4 = staticinvoke <com.sun.org.apache.xml.internal.security.utils.Base64: byte[] decode(org.w3c.dom.Element)>(r1);

        specialinvoke $r3.<java.io.ByteArrayInputStream: void <init>(byte[])>($r4);

     label3:
        return $r3;

     label4:
        $r6 := @caughtexception;

        $r7 = new javax.xml.crypto.MarshalException;

        specialinvoke $r7.<javax.xml.crypto.MarshalException: void <init>(java.lang.String,java.lang.Throwable)>("Cannot create CertificateFactory", $r6);

        throw $r7;

     label5:
        $r8 := @caughtexception;

        $r9 = new javax.xml.crypto.MarshalException;

        specialinvoke $r9.<javax.xml.crypto.MarshalException: void <init>(java.lang.String,java.lang.Throwable)>("Cannot decode Base64-encoded val", $r8);

        throw $r9;

        catch java.security.cert.CertificateException from label1 to label3 with label4;
        catch com.sun.org.apache.xml.internal.security.exceptions.Base64DecodingException from label1 to label3 with label5;
    }

    public boolean equals(java.lang.Object)
    {
        org.jcp.xml.dsig.internal.dom.DOMX509Data r0;
        java.lang.Object r1, r4, r5;
        javax.xml.crypto.dsig.keyinfo.X509Data r2;
        java.util.List r3, $r6, $r7;
        int i0, $i1, i2;
        boolean $z0, $z1, $z2, $z3, $z4;
        byte[] $r8, $r9, $r10, $r11;

        r0 := @this: org.jcp.xml.dsig.internal.dom.DOMX509Data;

        r1 := @parameter0: java.lang.Object;

        if r0 != r1 goto label1;

        return 1;

     label1:
        $z0 = r1 instanceof javax.xml.crypto.dsig.keyinfo.X509Data;

        if $z0 != 0 goto label2;

        return 0;

     label2:
        r2 = (javax.xml.crypto.dsig.keyinfo.X509Data) r1;

        r3 = interfaceinvoke r2.<javax.xml.crypto.dsig.keyinfo.X509Data: java.util.List getContent()>();

        $r6 = r0.<org.jcp.xml.dsig.internal.dom.DOMX509Data: java.util.List content>;

        i0 = interfaceinvoke $r6.<java.util.List: int size()>();

        $i1 = interfaceinvoke r3.<java.util.List: int size()>();

        if i0 == $i1 goto label3;

        return 0;

     label3:
        i2 = 0;

     label4:
        if i2 >= i0 goto label8;

        $r7 = r0.<org.jcp.xml.dsig.internal.dom.DOMX509Data: java.util.List content>;

        r4 = interfaceinvoke $r7.<java.util.List: java.lang.Object get(int)>(i2);

        r5 = interfaceinvoke r3.<java.util.List: java.lang.Object get(int)>(i2);

        $z1 = r4 instanceof byte[];

        if $z1 == 0 goto label6;

        $z3 = r5 instanceof byte[];

        if $z3 == 0 goto label5;

        $r8 = (byte[]) r4;

        $r11 = (byte[]) $r8;

        $r9 = (byte[]) r5;

        $r10 = (byte[]) $r9;

        $z4 = staticinvoke <java.util.Arrays: boolean equals(byte[],byte[])>($r11, $r10);

        if $z4 != 0 goto label7;

     label5:
        return 0;

     label6:
        $z2 = virtualinvoke r4.<java.lang.Object: boolean equals(java.lang.Object)>(r5);

        if $z2 != 0 goto label7;

        return 0;

     label7:
        i2 = i2 + 1;

        goto label4;

     label8:
        return 1;
    }
}
