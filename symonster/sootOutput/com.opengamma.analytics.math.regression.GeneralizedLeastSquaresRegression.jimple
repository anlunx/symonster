public class com.opengamma.analytics.math.regression.GeneralizedLeastSquaresRegression extends com.opengamma.analytics.math.regression.LeastSquaresRegression
{
    private final cern.colt.matrix.linalg.Algebra _algebra;

    public void <init>()
    {
        com.opengamma.analytics.math.regression.GeneralizedLeastSquaresRegression r0;
        cern.colt.matrix.linalg.Algebra $r1;

        r0 := @this: com.opengamma.analytics.math.regression.GeneralizedLeastSquaresRegression;

        specialinvoke r0.<com.opengamma.analytics.math.regression.LeastSquaresRegression: void <init>()>();

        $r1 = new cern.colt.matrix.linalg.Algebra;

        specialinvoke $r1.<cern.colt.matrix.linalg.Algebra: void <init>()>();

        r0.<com.opengamma.analytics.math.regression.GeneralizedLeastSquaresRegression: cern.colt.matrix.linalg.Algebra _algebra> = $r1;

        return;
    }

    public com.opengamma.analytics.math.regression.LeastSquaresRegressionResult regress(double[][], double[][], double[], boolean)
    {
        com.opengamma.analytics.math.regression.GeneralizedLeastSquaresRegression r0;
        double[][] r1, r2, r4, r6;
        double[] r3, r5, r10, r11, $r29, $r30, $r32, $r33;
        boolean z0;
        cern.colt.matrix.DoubleMatrix2D r7, r8, $r22, $r23, $r24, $r25, $r26, r35;
        cern.colt.matrix.DoubleMatrix1D r9, $r28, r36;
        int $i0, $i1, $i2, $i3, $i4, i5, i6;
        cern.colt.matrix.DoubleFactory2D $r12, $r14;
        cern.colt.matrix.DoubleFactory1D $r13;
        cern.colt.matrix.linalg.Algebra $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r27;
        com.opengamma.analytics.math.regression.LeastSquaresRegressionResult $r31;
        double $d0, $d1;
        java.lang.IllegalArgumentException $r34;

        r0 := @this: com.opengamma.analytics.math.regression.GeneralizedLeastSquaresRegression;

        r1 := @parameter0: double[][];

        r2 := @parameter1: double[][];

        r3 := @parameter2: double[];

        z0 := @parameter3: boolean;

        if r2 != null goto label1;

        $r34 = new java.lang.IllegalArgumentException;

        specialinvoke $r34.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Cannot perform GLS regression without an array of weights");

        throw $r34;

     label1:
        virtualinvoke r0.<com.opengamma.analytics.math.regression.GeneralizedLeastSquaresRegression: void checkData(double[][],double[][],double[])>(r1, r2, r3);

        r4 = virtualinvoke r0.<com.opengamma.analytics.math.regression.GeneralizedLeastSquaresRegression: double[][] addInterceptVariable(double[][],boolean)>(r1, z0);

        $i0 = lengthof r3;

        r5 = newarray (double)[$i0];

        $i2 = lengthof r3;

        $i1 = lengthof r3;

        r6 = newmultiarray (double)[$i2][$i1];

        i5 = 0;

     label2:
        $i3 = lengthof r3;

        if i5 >= $i3 goto label5;

        $d0 = r3[i5];

        r5[i5] = $d0;

        i6 = 0;

     label3:
        $i4 = lengthof r3;

        if i6 >= $i4 goto label4;

        $r33 = r6[i5];

        $r32 = r2[i5];

        $d1 = $r32[i6];

        $r33[i6] = $d1;

        i6 = i6 + 1;

        goto label3;

     label4:
        i5 = i5 + 1;

        goto label2;

     label5:
        $r12 = <cern.colt.matrix.DoubleFactory2D: cern.colt.matrix.DoubleFactory2D dense>;

        r35 = virtualinvoke $r12.<cern.colt.matrix.DoubleFactory2D: cern.colt.matrix.DoubleMatrix2D make(double[][])>(r4);

        $r13 = <cern.colt.matrix.DoubleFactory1D: cern.colt.matrix.DoubleFactory1D dense>;

        r36 = virtualinvoke $r13.<cern.colt.matrix.DoubleFactory1D: cern.colt.matrix.DoubleMatrix1D make(double[])>(r5);

        $r14 = <cern.colt.matrix.DoubleFactory2D: cern.colt.matrix.DoubleFactory2D dense>;

        r7 = virtualinvoke $r14.<cern.colt.matrix.DoubleFactory2D: cern.colt.matrix.DoubleMatrix2D make(double[][])>(r6);

        $r15 = r0.<com.opengamma.analytics.math.regression.GeneralizedLeastSquaresRegression: cern.colt.matrix.linalg.Algebra _algebra>;

        r8 = virtualinvoke $r15.<cern.colt.matrix.linalg.Algebra: cern.colt.matrix.DoubleMatrix2D transpose(cern.colt.matrix.DoubleMatrix2D)>(r35);

        $r17 = r0.<com.opengamma.analytics.math.regression.GeneralizedLeastSquaresRegression: cern.colt.matrix.linalg.Algebra _algebra>;

        $r18 = r0.<com.opengamma.analytics.math.regression.GeneralizedLeastSquaresRegression: cern.colt.matrix.linalg.Algebra _algebra>;

        $r19 = r0.<com.opengamma.analytics.math.regression.GeneralizedLeastSquaresRegression: cern.colt.matrix.linalg.Algebra _algebra>;

        $r20 = r0.<com.opengamma.analytics.math.regression.GeneralizedLeastSquaresRegression: cern.colt.matrix.linalg.Algebra _algebra>;

        $r21 = r0.<com.opengamma.analytics.math.regression.GeneralizedLeastSquaresRegression: cern.colt.matrix.linalg.Algebra _algebra>;

        $r16 = r0.<com.opengamma.analytics.math.regression.GeneralizedLeastSquaresRegression: cern.colt.matrix.linalg.Algebra _algebra>;

        $r22 = virtualinvoke $r16.<cern.colt.matrix.linalg.Algebra: cern.colt.matrix.DoubleMatrix2D mult(cern.colt.matrix.DoubleMatrix2D,cern.colt.matrix.DoubleMatrix2D)>(r7, r35);

        $r23 = virtualinvoke $r21.<cern.colt.matrix.linalg.Algebra: cern.colt.matrix.DoubleMatrix2D mult(cern.colt.matrix.DoubleMatrix2D,cern.colt.matrix.DoubleMatrix2D)>(r8, $r22);

        $r24 = virtualinvoke $r20.<cern.colt.matrix.linalg.Algebra: cern.colt.matrix.DoubleMatrix2D inverse(cern.colt.matrix.DoubleMatrix2D)>($r23);

        $r25 = virtualinvoke $r19.<cern.colt.matrix.linalg.Algebra: cern.colt.matrix.DoubleMatrix2D mult(cern.colt.matrix.DoubleMatrix2D,cern.colt.matrix.DoubleMatrix2D)>($r24, r8);

        $r26 = virtualinvoke $r18.<cern.colt.matrix.linalg.Algebra: cern.colt.matrix.DoubleMatrix2D mult(cern.colt.matrix.DoubleMatrix2D,cern.colt.matrix.DoubleMatrix2D)>($r25, r7);

        r9 = virtualinvoke $r17.<cern.colt.matrix.linalg.Algebra: cern.colt.matrix.DoubleMatrix1D mult(cern.colt.matrix.DoubleMatrix2D,cern.colt.matrix.DoubleMatrix1D)>($r26, r36);

        $r27 = r0.<com.opengamma.analytics.math.regression.GeneralizedLeastSquaresRegression: cern.colt.matrix.linalg.Algebra _algebra>;

        $r28 = virtualinvoke $r27.<cern.colt.matrix.linalg.Algebra: cern.colt.matrix.DoubleMatrix1D mult(cern.colt.matrix.DoubleMatrix2D,cern.colt.matrix.DoubleMatrix1D)>(r35, r9);

        $r29 = virtualinvoke $r28.<cern.colt.matrix.DoubleMatrix1D: double[] toArray()>();

        r10 = virtualinvoke r0.<com.opengamma.analytics.math.regression.GeneralizedLeastSquaresRegression: double[] convertArray(double[])>($r29);

        $r30 = virtualinvoke r9.<cern.colt.matrix.DoubleMatrix1D: double[] toArray()>();

        r11 = virtualinvoke r0.<com.opengamma.analytics.math.regression.GeneralizedLeastSquaresRegression: double[] convertArray(double[])>($r30);

        $r31 = specialinvoke r0.<com.opengamma.analytics.math.regression.GeneralizedLeastSquaresRegression: com.opengamma.analytics.math.regression.LeastSquaresRegressionResult getResultWithStatistics(double[][],double[],double[],double[],boolean)>(r1, r3, r11, r10, z0);

        return $r31;
    }

    private com.opengamma.analytics.math.regression.LeastSquaresRegressionResult getResultWithStatistics(double[][], double[], double[], double[], boolean)
    {
        com.opengamma.analytics.math.regression.GeneralizedLeastSquaresRegression r0;
        double[][] r1;
        double[] r2, r3, r4, r5;
        boolean z0;
        int i0, i1;
        com.opengamma.analytics.math.regression.WeightedLeastSquaresRegressionResult $r6;
        double $d0, $d1, $d2;

        r0 := @this: com.opengamma.analytics.math.regression.GeneralizedLeastSquaresRegression;

        r1 := @parameter0: double[][];

        r2 := @parameter1: double[];

        r3 := @parameter2: double[];

        r4 := @parameter3: double[];

        z0 := @parameter4: boolean;

        i0 = lengthof r1;

        r5 = newarray (double)[i0];

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        $d1 = r2[i1];

        $d0 = r4[i1];

        $d2 = $d1 - $d0;

        r5[i1] = $d2;

        i1 = i1 + 1;

        goto label1;

     label2:
        $r6 = new com.opengamma.analytics.math.regression.WeightedLeastSquaresRegressionResult;

        specialinvoke $r6.<com.opengamma.analytics.math.regression.WeightedLeastSquaresRegressionResult: void <init>(double[],double[],double,double[],double,double,double[],double[],boolean)>(r3, r5, 0.0, null, 0.0, 0.0, null, null, z0);

        return $r6;
    }
}
