public class com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyParameterSensitivity extends java.lang.Object
{
    private final java.util.LinkedHashMap _sensitivity;

    public void <init>()
    {
        com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyParameterSensitivity r0;
        java.util.LinkedHashMap $r1;

        r0 := @this: com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyParameterSensitivity;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.LinkedHashMap;

        specialinvoke $r1.<java.util.LinkedHashMap: void <init>()>();

        r0.<com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyParameterSensitivity: java.util.LinkedHashMap _sensitivity> = $r1;

        return;
    }

    public void <init>(java.util.LinkedHashMap)
    {
        com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyParameterSensitivity r0;
        java.util.LinkedHashMap r1, $r3;

        r0 := @this: com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyParameterSensitivity;

        r1 := @parameter0: java.util.LinkedHashMap;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "sensitivity");

        $r3 = new java.util.LinkedHashMap;

        specialinvoke $r3.<java.util.LinkedHashMap: void <init>(java.util.Map)>(r1);

        r0.<com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyParameterSensitivity: java.util.LinkedHashMap _sensitivity> = $r3;

        return;
    }

    public static com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyParameterSensitivity of(java.util.LinkedHashMap)
    {
        java.util.LinkedHashMap r0;
        com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyParameterSensitivity $r2;

        r0 := @parameter0: java.util.LinkedHashMap;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r0, "sensitivity");

        $r2 = new com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyParameterSensitivity;

        specialinvoke $r2.<com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyParameterSensitivity: void <init>(java.util.LinkedHashMap)>(r0);

        return $r2;
    }

    public static com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyParameterSensitivity of(com.opengamma.analytics.financial.provider.sensitivity.multicurve.SimpleParameterSensitivity, com.opengamma.util.money.Currency)
    {
        com.opengamma.analytics.financial.provider.sensitivity.multicurve.SimpleParameterSensitivity r0;
        com.opengamma.util.money.Currency r1;
        java.util.Iterator r3;
        java.lang.String r4;
        java.util.LinkedHashMap $r5;
        java.util.Set $r6;
        boolean $z0;
        com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyParameterSensitivity $r7;
        java.lang.Object $r8;
        com.opengamma.util.tuple.Pair $r9;
        com.opengamma.analytics.math.matrix.DoubleMatrix1D $r10;

        r0 := @parameter0: com.opengamma.analytics.financial.provider.sensitivity.multicurve.SimpleParameterSensitivity;

        r1 := @parameter1: com.opengamma.util.money.Currency;

        $r5 = new java.util.LinkedHashMap;

        specialinvoke $r5.<java.util.LinkedHashMap: void <init>()>();

        $r6 = virtualinvoke r0.<com.opengamma.analytics.financial.provider.sensitivity.multicurve.SimpleParameterSensitivity: java.util.Set getAllNames()>();

        r3 = interfaceinvoke $r6.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r8 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (java.lang.String) $r8;

        $r9 = staticinvoke <com.opengamma.util.tuple.Pairs: com.opengamma.util.tuple.Pair of(java.lang.Object,java.lang.Object)>(r4, r1);

        $r10 = virtualinvoke r0.<com.opengamma.analytics.financial.provider.sensitivity.multicurve.SimpleParameterSensitivity: com.opengamma.analytics.math.matrix.DoubleMatrix1D getSensitivity(java.lang.String)>(r4);

        virtualinvoke $r5.<java.util.LinkedHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r9, $r10);

        goto label1;

     label2:
        $r7 = staticinvoke <com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyParameterSensitivity: com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyParameterSensitivity of(java.util.LinkedHashMap)>($r5);

        return $r7;
    }

    public com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyParameterSensitivity plus(com.opengamma.util.tuple.Pair, com.opengamma.analytics.math.matrix.DoubleMatrix1D)
    {
        com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyParameterSensitivity r0, $r10;
        com.opengamma.util.tuple.Pair r1;
        com.opengamma.analytics.math.matrix.DoubleMatrix1D r2, $r14;
        com.opengamma.analytics.math.matrix.CommonsMatrixAlgebra r3;
        java.util.LinkedHashMap $r7, $r8;
        boolean $z0;
        java.lang.Object $r11;
        com.opengamma.analytics.math.matrix.Matrix $r12, $r13;

        r0 := @this: com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyParameterSensitivity;

        r1 := @parameter0: com.opengamma.util.tuple.Pair;

        r2 := @parameter1: com.opengamma.analytics.math.matrix.DoubleMatrix1D;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "Name/currency");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, "Matrix");

        r3 = <com.opengamma.analytics.math.matrix.MatrixAlgebraFactory: com.opengamma.analytics.math.matrix.CommonsMatrixAlgebra COMMONS_ALGEBRA>;

        $r7 = new java.util.LinkedHashMap;

        specialinvoke $r7.<java.util.LinkedHashMap: void <init>()>();

        $r8 = r0.<com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyParameterSensitivity: java.util.LinkedHashMap _sensitivity>;

        virtualinvoke $r7.<java.util.LinkedHashMap: void putAll(java.util.Map)>($r8);

        $z0 = virtualinvoke $r7.<java.util.LinkedHashMap: boolean containsKey(java.lang.Object)>(r1);

        if $z0 == 0 goto label1;

        $r11 = virtualinvoke $r7.<java.util.LinkedHashMap: java.lang.Object get(java.lang.Object)>(r1);

        $r12 = (com.opengamma.analytics.math.matrix.Matrix) $r11;

        $r13 = virtualinvoke r3.<com.opengamma.analytics.math.matrix.MatrixAlgebra: com.opengamma.analytics.math.matrix.Matrix add(com.opengamma.analytics.math.matrix.Matrix,com.opengamma.analytics.math.matrix.Matrix)>($r12, r2);

        $r14 = (com.opengamma.analytics.math.matrix.DoubleMatrix1D) $r13;

        virtualinvoke $r7.<java.util.LinkedHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r14);

        goto label2;

     label1:
        virtualinvoke $r7.<java.util.LinkedHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2);

     label2:
        $r10 = new com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyParameterSensitivity;

        specialinvoke $r10.<com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyParameterSensitivity: void <init>(java.util.LinkedHashMap)>($r7);

        return $r10;
    }

    public com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyParameterSensitivity plus(com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyParameterSensitivity)
    {
        com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyParameterSensitivity r0, r1, $r12;
        com.opengamma.analytics.math.matrix.CommonsMatrixAlgebra r2;
        java.util.Iterator r4;
        java.util.Map$Entry r5;
        com.opengamma.util.tuple.Pair r6;
        java.util.LinkedHashMap $r8, $r9;
        java.util.Map $r10;
        java.util.Set $r11;
        boolean $z0, $z1;
        java.lang.Object $r13, $r14, $r15, $r17, $r19;
        com.opengamma.analytics.math.matrix.Matrix $r18, $r20, $r21;
        com.opengamma.analytics.math.matrix.DoubleMatrix1D $r22;

        r0 := @this: com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyParameterSensitivity;

        r1 := @parameter0: com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyParameterSensitivity;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "Sensitivity to add");

        r2 = <com.opengamma.analytics.math.matrix.MatrixAlgebraFactory: com.opengamma.analytics.math.matrix.CommonsMatrixAlgebra COMMONS_ALGEBRA>;

        $r8 = new java.util.LinkedHashMap;

        specialinvoke $r8.<java.util.LinkedHashMap: void <init>()>();

        $r9 = r0.<com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyParameterSensitivity: java.util.LinkedHashMap _sensitivity>;

        virtualinvoke $r8.<java.util.LinkedHashMap: void putAll(java.util.Map)>($r9);

        $r10 = virtualinvoke r1.<com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyParameterSensitivity: java.util.Map getSensitivities()>();

        $r11 = interfaceinvoke $r10.<java.util.Map: java.util.Set entrySet()>();

        r4 = interfaceinvoke $r11.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r13 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        r5 = (java.util.Map$Entry) $r13;

        $r14 = interfaceinvoke r5.<java.util.Map$Entry: java.lang.Object getKey()>();

        r6 = (com.opengamma.util.tuple.Pair) $r14;

        $z1 = virtualinvoke $r8.<java.util.LinkedHashMap: boolean containsKey(java.lang.Object)>(r6);

        if $z1 == 0 goto label2;

        $r17 = virtualinvoke $r8.<java.util.LinkedHashMap: java.lang.Object get(java.lang.Object)>(r6);

        $r18 = (com.opengamma.analytics.math.matrix.Matrix) $r17;

        $r19 = interfaceinvoke r5.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r20 = (com.opengamma.analytics.math.matrix.Matrix) $r19;

        $r21 = virtualinvoke r2.<com.opengamma.analytics.math.matrix.MatrixAlgebra: com.opengamma.analytics.math.matrix.Matrix add(com.opengamma.analytics.math.matrix.Matrix,com.opengamma.analytics.math.matrix.Matrix)>($r18, $r20);

        $r22 = (com.opengamma.analytics.math.matrix.DoubleMatrix1D) $r21;

        virtualinvoke $r8.<java.util.LinkedHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r6, $r22);

        goto label3;

     label2:
        $r15 = interfaceinvoke r5.<java.util.Map$Entry: java.lang.Object getValue()>();

        virtualinvoke $r8.<java.util.LinkedHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r6, $r15);

     label3:
        goto label1;

     label4:
        $r12 = new com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyParameterSensitivity;

        specialinvoke $r12.<com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyParameterSensitivity: void <init>(java.util.LinkedHashMap)>($r8);

        return $r12;
    }

    public com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyParameterSensitivity multipliedBy(double)
    {
        com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyParameterSensitivity r0, $r8;
        double d0;
        com.opengamma.analytics.math.matrix.CommonsMatrixAlgebra r1;
        java.util.Iterator r3;
        com.opengamma.util.tuple.Pair r4;
        java.util.LinkedHashMap $r5, $r6, $r10;
        java.util.Set $r7;
        boolean $z0;
        java.lang.Object $r9, $r11;
        com.opengamma.analytics.math.matrix.Matrix $r12, $r13;
        com.opengamma.analytics.math.matrix.DoubleMatrix1D $r14;

        r0 := @this: com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyParameterSensitivity;

        d0 := @parameter0: double;

        r1 = <com.opengamma.analytics.math.matrix.MatrixAlgebraFactory: com.opengamma.analytics.math.matrix.CommonsMatrixAlgebra COMMONS_ALGEBRA>;

        $r5 = new java.util.LinkedHashMap;

        specialinvoke $r5.<java.util.LinkedHashMap: void <init>()>();

        $r6 = r0.<com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyParameterSensitivity: java.util.LinkedHashMap _sensitivity>;

        $r7 = virtualinvoke $r6.<java.util.LinkedHashMap: java.util.Set keySet()>();

        r3 = interfaceinvoke $r7.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r9 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (com.opengamma.util.tuple.Pair) $r9;

        $r10 = r0.<com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyParameterSensitivity: java.util.LinkedHashMap _sensitivity>;

        $r11 = virtualinvoke $r10.<java.util.LinkedHashMap: java.lang.Object get(java.lang.Object)>(r4);

        $r12 = (com.opengamma.analytics.math.matrix.Matrix) $r11;

        $r13 = virtualinvoke r1.<com.opengamma.analytics.math.matrix.MatrixAlgebra: com.opengamma.analytics.math.matrix.Matrix scale(com.opengamma.analytics.math.matrix.Matrix,double)>($r12, d0);

        $r14 = (com.opengamma.analytics.math.matrix.DoubleMatrix1D) $r13;

        virtualinvoke $r5.<java.util.LinkedHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r4, $r14);

        goto label1;

     label2:
        $r8 = new com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyParameterSensitivity;

        specialinvoke $r8.<com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyParameterSensitivity: void <init>(java.util.LinkedHashMap)>($r5);

        return $r8;
    }

    public com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyParameterSensitivity converted(com.opengamma.analytics.financial.forex.method.FXMatrix, com.opengamma.util.money.Currency)
    {
        com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyParameterSensitivity r0, $r11, r22;
        com.opengamma.analytics.financial.forex.method.FXMatrix r1;
        com.opengamma.util.money.Currency r2, $r17;
        com.opengamma.analytics.math.matrix.CommonsMatrixAlgebra r3;
        java.util.Iterator r4;
        java.util.Map$Entry r5;
        com.opengamma.util.tuple.Pair r6, r7;
        double d0;
        com.opengamma.analytics.math.matrix.DoubleMatrix1D r8;
        java.util.LinkedHashMap $r12;
        java.util.Set $r13;
        boolean $z0;
        java.lang.Object $r14, $r15, $r16, $r18, $r19;
        com.opengamma.analytics.math.matrix.Matrix $r20, $r21;

        r0 := @this: com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyParameterSensitivity;

        r1 := @parameter0: com.opengamma.analytics.financial.forex.method.FXMatrix;

        r2 := @parameter1: com.opengamma.util.money.Currency;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, "Currency");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "FX Matrix");

        $r11 = new com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyParameterSensitivity;

        specialinvoke $r11.<com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyParameterSensitivity: void <init>()>();

        r22 = $r11;

        r3 = <com.opengamma.analytics.math.matrix.MatrixAlgebraFactory: com.opengamma.analytics.math.matrix.CommonsMatrixAlgebra COMMONS_ALGEBRA>;

        $r12 = r0.<com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyParameterSensitivity: java.util.LinkedHashMap _sensitivity>;

        $r13 = virtualinvoke $r12.<java.util.LinkedHashMap: java.util.Set entrySet()>();

        r4 = interfaceinvoke $r13.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r14 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        r5 = (java.util.Map$Entry) $r14;

        $r15 = interfaceinvoke r5.<java.util.Map$Entry: java.lang.Object getKey()>();

        r6 = (com.opengamma.util.tuple.Pair) $r15;

        $r16 = virtualinvoke r6.<com.opengamma.util.tuple.Pair: java.lang.Object getSecond()>();

        $r17 = (com.opengamma.util.money.Currency) $r16;

        d0 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.method.FXMatrix: double getFxRate(com.opengamma.util.money.Currency,com.opengamma.util.money.Currency)>($r17, r2);

        $r18 = virtualinvoke r6.<com.opengamma.util.tuple.Pair: java.lang.Object getFirst()>();

        r7 = staticinvoke <com.opengamma.util.tuple.Pairs: com.opengamma.util.tuple.Pair of(java.lang.Object,java.lang.Object)>($r18, r2);

        $r19 = interfaceinvoke r5.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r20 = (com.opengamma.analytics.math.matrix.Matrix) $r19;

        $r21 = virtualinvoke r3.<com.opengamma.analytics.math.matrix.MatrixAlgebra: com.opengamma.analytics.math.matrix.Matrix scale(com.opengamma.analytics.math.matrix.Matrix,double)>($r20, d0);

        r8 = (com.opengamma.analytics.math.matrix.DoubleMatrix1D) $r21;

        r22 = virtualinvoke r22.<com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyParameterSensitivity: com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyParameterSensitivity plus(com.opengamma.util.tuple.Pair,com.opengamma.analytics.math.matrix.DoubleMatrix1D)>(r7, r8);

        goto label1;

     label2:
        return r22;
    }

    public java.util.Map getSensitivities()
    {
        com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyParameterSensitivity r0;
        java.util.LinkedHashMap $r1;
        java.util.Map $r2;

        r0 := @this: com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyParameterSensitivity;

        $r1 = r0.<com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyParameterSensitivity: java.util.LinkedHashMap _sensitivity>;

        $r2 = staticinvoke <java.util.Collections: java.util.Map unmodifiableMap(java.util.Map)>($r1);

        return $r2;
    }

    public java.util.Map getSensitivityByName(java.lang.String)
    {
        com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyParameterSensitivity r0;
        java.lang.String r1, $r13;
        java.util.Iterator r3;
        java.util.Map$Entry r4;
        com.opengamma.util.tuple.Pair r5;
        java.util.HashMap $r6;
        java.util.LinkedHashMap $r7;
        java.util.Set $r8;
        boolean $z0, $z1;
        java.util.Map $r9;
        java.lang.Object $r10, $r11, $r12, $r14, $r15;

        r0 := @this: com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyParameterSensitivity;

        r1 := @parameter0: java.lang.String;

        $r6 = new java.util.HashMap;

        specialinvoke $r6.<java.util.HashMap: void <init>()>();

        $r7 = r0.<com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyParameterSensitivity: java.util.LinkedHashMap _sensitivity>;

        $r8 = virtualinvoke $r7.<java.util.LinkedHashMap: java.util.Set entrySet()>();

        r3 = interfaceinvoke $r8.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r10 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (java.util.Map$Entry) $r10;

        $r11 = interfaceinvoke r4.<java.util.Map$Entry: java.lang.Object getKey()>();

        r5 = (com.opengamma.util.tuple.Pair) $r11;

        $r12 = virtualinvoke r5.<com.opengamma.util.tuple.Pair: java.lang.Object getFirst()>();

        $r13 = (java.lang.String) $r12;

        $z1 = virtualinvoke $r13.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z1 == 0 goto label2;

        $r14 = virtualinvoke r5.<com.opengamma.util.tuple.Pair: java.lang.Object getSecond()>();

        $r15 = interfaceinvoke r4.<java.util.Map$Entry: java.lang.Object getValue()>();

        interfaceinvoke $r6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r14, $r15);

     label2:
        goto label1;

     label3:
        $r9 = staticinvoke <java.util.Collections: java.util.Map unmodifiableMap(java.util.Map)>($r6);

        return $r9;
    }

    public com.opengamma.analytics.math.matrix.DoubleMatrix1D getSensitivity(com.opengamma.util.tuple.Pair)
    {
        com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyParameterSensitivity r0;
        com.opengamma.util.tuple.Pair r1;
        java.util.LinkedHashMap $r3;
        java.lang.Object $r4;
        com.opengamma.analytics.math.matrix.DoubleMatrix1D $r5;

        r0 := @this: com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyParameterSensitivity;

        r1 := @parameter0: com.opengamma.util.tuple.Pair;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "Name");

        $r3 = r0.<com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyParameterSensitivity: java.util.LinkedHashMap _sensitivity>;

        $r4 = virtualinvoke $r3.<java.util.LinkedHashMap: java.lang.Object get(java.lang.Object)>(r1);

        $r5 = (com.opengamma.analytics.math.matrix.DoubleMatrix1D) $r4;

        return $r5;
    }

    public com.opengamma.analytics.math.matrix.DoubleMatrix1D getSensitivity(java.lang.String, com.opengamma.util.money.Currency)
    {
        com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyParameterSensitivity r0;
        java.lang.String r1;
        com.opengamma.util.money.Currency r2;
        java.util.LinkedHashMap $r5;
        com.opengamma.util.tuple.Pair $r6;
        java.lang.Object $r7;
        com.opengamma.analytics.math.matrix.DoubleMatrix1D $r8;

        r0 := @this: com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyParameterSensitivity;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: com.opengamma.util.money.Currency;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "Name");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, "Currency");

        $r5 = r0.<com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyParameterSensitivity: java.util.LinkedHashMap _sensitivity>;

        $r6 = staticinvoke <com.opengamma.util.tuple.Pairs: com.opengamma.util.tuple.Pair of(java.lang.Object,java.lang.Object)>(r1, r2);

        $r7 = virtualinvoke $r5.<java.util.LinkedHashMap: java.lang.Object get(java.lang.Object)>($r6);

        $r8 = (com.opengamma.analytics.math.matrix.DoubleMatrix1D) $r7;

        return $r8;
    }

    public java.util.Map totalSensitivityByCurveCurrency()
    {
        com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyParameterSensitivity r0;
        java.util.Iterator r2;
        java.util.Map$Entry r3;
        java.util.HashMap $r4;
        java.util.LinkedHashMap $r5;
        java.util.Set $r6;
        boolean $z0;
        java.lang.Object $r7, $r8, $r10, $r13;
        com.opengamma.analytics.math.matrix.DoubleMatrix1D $r9, $r15;
        int $i0, i1;
        java.lang.Double $r11, $r16;
        int[] $r14;
        double $d0, d1;

        r0 := @this: com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyParameterSensitivity;

        $r4 = new java.util.HashMap;

        specialinvoke $r4.<java.util.HashMap: void <init>()>();

        $r5 = r0.<com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyParameterSensitivity: java.util.LinkedHashMap _sensitivity>;

        $r6 = virtualinvoke $r5.<java.util.LinkedHashMap: java.util.Set entrySet()>();

        r2 = interfaceinvoke $r6.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r7 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (java.util.Map$Entry) $r7;

        d1 = 0.0;

        i1 = 0;

     label2:
        $r8 = interfaceinvoke r3.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r9 = (com.opengamma.analytics.math.matrix.DoubleMatrix1D) $r8;

        $i0 = virtualinvoke $r9.<com.opengamma.analytics.math.matrix.DoubleMatrix1D: int getNumberOfElements()>();

        if i1 >= $i0 goto label3;

        $r13 = interfaceinvoke r3.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r15 = (com.opengamma.analytics.math.matrix.DoubleMatrix1D) $r13;

        $r14 = newarray (int)[1];

        $r14[0] = i1;

        $r16 = virtualinvoke $r15.<com.opengamma.analytics.math.matrix.DoubleMatrix1D: java.lang.Double getEntry(int[])>($r14);

        $d0 = virtualinvoke $r16.<java.lang.Double: double doubleValue()>();

        d1 = d1 + $d0;

        i1 = i1 + 1;

        goto label2;

     label3:
        $r10 = interfaceinvoke r3.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r11 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d1);

        virtualinvoke $r4.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r10, $r11);

        goto label1;

     label4:
        return $r4;
    }

    public double totalSensitivity(com.opengamma.analytics.financial.forex.method.FXMatrix, com.opengamma.util.money.Currency)
    {
        com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyParameterSensitivity r0;
        com.opengamma.analytics.financial.forex.method.FXMatrix r1;
        com.opengamma.util.money.Currency r2, $r11;
        java.util.Iterator r3;
        java.util.Map$Entry r4;
        double d0, $d1, $d2, d3;
        java.util.LinkedHashMap $r5;
        java.util.Set $r6;
        boolean $z0;
        java.lang.Object $r7, $r8, $r10, $r12, $r14;
        com.opengamma.util.tuple.Pair $r9;
        com.opengamma.analytics.math.matrix.DoubleMatrix1D $r13, $r16;
        int $i0, i1;
        int[] $r15;
        java.lang.Double $r17;

        r0 := @this: com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyParameterSensitivity;

        r1 := @parameter0: com.opengamma.analytics.financial.forex.method.FXMatrix;

        r2 := @parameter1: com.opengamma.util.money.Currency;

        d3 = 0.0;

        $r5 = r0.<com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyParameterSensitivity: java.util.LinkedHashMap _sensitivity>;

        $r6 = virtualinvoke $r5.<java.util.LinkedHashMap: java.util.Set entrySet()>();

        r3 = interfaceinvoke $r6.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r7 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (java.util.Map$Entry) $r7;

        $r8 = interfaceinvoke r4.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r9 = (com.opengamma.util.tuple.Pair) $r8;

        $r10 = virtualinvoke $r9.<com.opengamma.util.tuple.Pair: java.lang.Object getSecond()>();

        $r11 = (com.opengamma.util.money.Currency) $r10;

        d0 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.method.FXMatrix: double getFxRate(com.opengamma.util.money.Currency,com.opengamma.util.money.Currency)>($r11, r2);

        i1 = 0;

     label2:
        $r12 = interfaceinvoke r4.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r13 = (com.opengamma.analytics.math.matrix.DoubleMatrix1D) $r12;

        $i0 = virtualinvoke $r13.<com.opengamma.analytics.math.matrix.DoubleMatrix1D: int getNumberOfElements()>();

        if i1 >= $i0 goto label3;

        $r14 = interfaceinvoke r4.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r16 = (com.opengamma.analytics.math.matrix.DoubleMatrix1D) $r14;

        $r15 = newarray (int)[1];

        $r15[0] = i1;

        $r17 = virtualinvoke $r16.<com.opengamma.analytics.math.matrix.DoubleMatrix1D: java.lang.Double getEntry(int[])>($r15);

        $d1 = virtualinvoke $r17.<java.lang.Double: double doubleValue()>();

        $d2 = $d1 * d0;

        d3 = d3 + $d2;

        i1 = i1 + 1;

        goto label2;

     label3:
        goto label1;

     label4:
        return d3;
    }

    public java.util.Set getAllNamesCurrency()
    {
        com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyParameterSensitivity r0;
        java.util.LinkedHashMap $r1;
        java.util.Set $r2;

        r0 := @this: com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyParameterSensitivity;

        $r1 = r0.<com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyParameterSensitivity: java.util.LinkedHashMap _sensitivity>;

        $r2 = virtualinvoke $r1.<java.util.LinkedHashMap: java.util.Set keySet()>();

        return $r2;
    }

    public java.lang.String toString()
    {
        com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyParameterSensitivity r0;
        java.util.LinkedHashMap $r1;
        java.lang.String $r2;

        r0 := @this: com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyParameterSensitivity;

        $r1 = r0.<com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyParameterSensitivity: java.util.LinkedHashMap _sensitivity>;

        $r2 = virtualinvoke $r1.<java.util.LinkedHashMap: java.lang.String toString()>();

        return $r2;
    }

    public int hashCode()
    {
        com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyParameterSensitivity r0;
        java.util.LinkedHashMap $r1;
        int $i1, $i2, i4;

        r0 := @this: com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyParameterSensitivity;

        $i1 = 31 * 1;

        $r1 = r0.<com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyParameterSensitivity: java.util.LinkedHashMap _sensitivity>;

        $i2 = virtualinvoke $r1.<java.util.LinkedHashMap: int hashCode()>();

        i4 = $i1 + $i2;

        return i4;
    }

    public boolean equals(java.lang.Object)
    {
        com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyParameterSensitivity r0, r2;
        java.lang.Object r1;
        boolean $z0, $z1;
        java.util.LinkedHashMap $r3, $r4;

        r0 := @this: com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyParameterSensitivity;

        r1 := @parameter0: java.lang.Object;

        if r0 != r1 goto label1;

        return 1;

     label1:
        $z0 = r1 instanceof com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyParameterSensitivity;

        if $z0 != 0 goto label2;

        return 0;

     label2:
        r2 = (com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyParameterSensitivity) r1;

        $r4 = r0.<com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyParameterSensitivity: java.util.LinkedHashMap _sensitivity>;

        $r3 = r2.<com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyParameterSensitivity: java.util.LinkedHashMap _sensitivity>;

        $z1 = staticinvoke <org.apache.commons.lang.ObjectUtils: boolean equals(java.lang.Object,java.lang.Object)>($r4, $r3);

        if $z1 != 0 goto label3;

        return 0;

     label3:
        return 1;
    }
}
