public class com.opengamma.analytics.financial.provider.sensitivity.issuer.SimpleParameterSensitivityIssuerDiscountInterpolatedFDCalculator extends java.lang.Object
{
    private final com.opengamma.analytics.financial.interestrate.InstrumentDerivativeVisitor _valueCalculator;
    private final double _shift;

    public void <init>(com.opengamma.analytics.financial.interestrate.InstrumentDerivativeVisitor, double)
    {
        com.opengamma.analytics.financial.provider.sensitivity.issuer.SimpleParameterSensitivityIssuerDiscountInterpolatedFDCalculator r0;
        com.opengamma.analytics.financial.interestrate.InstrumentDerivativeVisitor r1;
        double d0;

        r0 := @this: com.opengamma.analytics.financial.provider.sensitivity.issuer.SimpleParameterSensitivityIssuerDiscountInterpolatedFDCalculator;

        r1 := @parameter0: com.opengamma.analytics.financial.interestrate.InstrumentDerivativeVisitor;

        d0 := @parameter1: double;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "Calculator");

        r0.<com.opengamma.analytics.financial.provider.sensitivity.issuer.SimpleParameterSensitivityIssuerDiscountInterpolatedFDCalculator: com.opengamma.analytics.financial.interestrate.InstrumentDerivativeVisitor _valueCalculator> = r1;

        r0.<com.opengamma.analytics.financial.provider.sensitivity.issuer.SimpleParameterSensitivityIssuerDiscountInterpolatedFDCalculator: double _shift> = d0;

        return;
    }

    public com.opengamma.analytics.financial.provider.sensitivity.multicurve.SimpleParameterSensitivity calculateSensitivity(com.opengamma.analytics.financial.interestrate.InstrumentDerivative, com.opengamma.analytics.financial.provider.description.interestrate.IssuerProviderDiscount)
    {
        com.opengamma.analytics.financial.provider.sensitivity.issuer.SimpleParameterSensitivityIssuerDiscountInterpolatedFDCalculator r0;
        com.opengamma.analytics.financial.interestrate.InstrumentDerivative r1;
        com.opengamma.analytics.financial.provider.description.interestrate.IssuerProviderDiscount r2, $r43, $r56, $r76, $r96, r151;
        java.lang.Double r3, r4, r7, r8, r112, r113, r125, r126, r138, r152, r153;
        java.util.Set r5, r115, r128, r142;
        com.opengamma.analytics.financial.provider.sensitivity.multicurve.SimpleParameterSensitivity $r9, r102;
        com.opengamma.analytics.financial.interestrate.InstrumentDerivativeVisitor $r10, $r27, $r47, $r60, $r80, $r100;
        java.lang.Object $r11, $r15, $r21, $r28, $r29, $r37, $r48, $r50, $r61, $r62, $r70, $r81, $r82, $r90, $r101;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21, $d22, $d23, $d24, $d25, $d26, $d27, $d28, $d29, $d30, $d31, $d32, $d33, $d34, $d35, $d36, $d37, $d38, $d39, $d40, $d41;
        com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount $r12, $r13, $r14, $r30, $r34, $r44, $r45, $r57, $r58, $r63, $r67, $r77, $r78, $r83, $r87, $r97, $r98;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11;
        com.opengamma.analytics.math.curve.DoublesCurve $r16, $r17, $r31, $r32, $r64, $r65, $r84, $r85;
        double[] $r18, $r20, $r25, $r33, $r36, $r41, $r49, $r54, $r66, $r69, $r74, $r86, $r89, $r94, r108, r109, r121, r122, r134, r135, r139, r148, r149;
        com.opengamma.analytics.math.matrix.DoubleMatrix1D $r19, $r35, $r68, $r88;
        com.opengamma.analytics.financial.model.interestrate.curve.YieldCurve $r22, $r38, $r51, $r71, $r91, r106, r119, r132, r146;
        java.lang.String $r23, $r39, $r52, $r72, $r92, r114, r127, r141, r154;
        com.opengamma.analytics.math.curve.InterpolatedDoublesCurve $r24, $r40, $r53, $r73, $r93, r107, r120, r133, r147;
        com.opengamma.analytics.math.interpolation.Interpolator1D $r26, $r42, $r55, $r75, $r95;
        java.util.Map $r46, $r59, $r79, $r99;
        java.util.Iterator r103, r116, r129, r143;
        com.opengamma.util.money.Currency r104;
        com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve r105, r118, r131, r145;
        int i0, i1, i2, i3, i4, i5, i6, i7;
        com.opengamma.analytics.financial.instrument.index.IndexON r117;
        com.opengamma.analytics.financial.instrument.index.IborIndex r130;
        com.opengamma.util.tuple.Pair r144;

        r0 := @this: com.opengamma.analytics.financial.provider.sensitivity.issuer.SimpleParameterSensitivityIssuerDiscountInterpolatedFDCalculator;

        r1 := @parameter0: com.opengamma.analytics.financial.interestrate.InstrumentDerivative;

        r2 := @parameter1: com.opengamma.analytics.financial.provider.description.interestrate.IssuerProviderDiscount;

        $r9 = new com.opengamma.analytics.financial.provider.sensitivity.multicurve.SimpleParameterSensitivity;

        specialinvoke $r9.<com.opengamma.analytics.financial.provider.sensitivity.multicurve.SimpleParameterSensitivity: void <init>()>();

        r102 = $r9;

        $r10 = r0.<com.opengamma.analytics.financial.provider.sensitivity.issuer.SimpleParameterSensitivityIssuerDiscountInterpolatedFDCalculator: com.opengamma.analytics.financial.interestrate.InstrumentDerivativeVisitor _valueCalculator>;

        $r11 = interfaceinvoke r1.<com.opengamma.analytics.financial.interestrate.InstrumentDerivative: java.lang.Object accept(com.opengamma.analytics.financial.interestrate.InstrumentDerivativeVisitor,java.lang.Object)>($r10, r2);

        r3 = (java.lang.Double) $r11;

        $d0 = virtualinvoke r3.<java.lang.Double: double doubleValue()>();

        $d1 = neg $d0;

        r4 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d1);

        $r12 = virtualinvoke r2.<com.opengamma.analytics.financial.provider.description.interestrate.IssuerProviderDiscount: com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount getMulticurveProvider()>();

        r5 = virtualinvoke $r12.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount: java.util.Set getCurrencies()>();

        r103 = interfaceinvoke r5.<java.util.Set: java.util.Iterator iterator()>();

     label01:
        $z0 = interfaceinvoke r103.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label04;

        $r82 = interfaceinvoke r103.<java.util.Iterator: java.lang.Object next()>();

        r104 = (com.opengamma.util.money.Currency) $r82;

        $r83 = virtualinvoke r2.<com.opengamma.analytics.financial.provider.description.interestrate.IssuerProviderDiscount: com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount getMulticurveProvider()>();

        r105 = virtualinvoke $r83.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount: com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve getCurve(com.opengamma.util.money.Currency)>(r104);

        $z10 = r105 instanceof com.opengamma.analytics.financial.model.interestrate.curve.YieldCurve;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z10, "Curve should be a YieldCurve");

        r106 = (com.opengamma.analytics.financial.model.interestrate.curve.YieldCurve) r105;

        $r84 = virtualinvoke r106.<com.opengamma.analytics.financial.model.interestrate.curve.YieldCurve: com.opengamma.analytics.math.curve.DoublesCurve getCurve()>();

        $z11 = $r84 instanceof com.opengamma.analytics.math.curve.InterpolatedDoublesCurve;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z11, "Yield curve should be based on InterpolatedDoublesCurve");

        $r85 = virtualinvoke r106.<com.opengamma.analytics.financial.model.interestrate.curve.YieldCurve: com.opengamma.analytics.math.curve.DoublesCurve getCurve()>();

        r107 = (com.opengamma.analytics.math.curve.InterpolatedDoublesCurve) $r85;

        $r86 = virtualinvoke r107.<com.opengamma.analytics.math.curve.InterpolatedDoublesCurve: double[] getXDataAsPrimitive()>();

        i0 = lengthof $r86;

        r108 = newarray (double)[i0];

        i1 = 0;

     label02:
        if i1 >= i0 goto label03;

        $r89 = virtualinvoke r107.<com.opengamma.analytics.math.curve.InterpolatedDoublesCurve: double[] getYDataAsPrimitive()>();

        $r90 = virtualinvoke $r89.<java.lang.Object: java.lang.Object clone()>();

        r109 = (double[]) $r90;

        $d34 = r109[i1];

        $d33 = r0.<com.opengamma.analytics.financial.provider.sensitivity.issuer.SimpleParameterSensitivityIssuerDiscountInterpolatedFDCalculator: double _shift>;

        $d35 = $d34 + $d33;

        r109[i1] = $d35;

        $r91 = new com.opengamma.analytics.financial.model.interestrate.curve.YieldCurve;

        $r92 = virtualinvoke r107.<com.opengamma.analytics.math.curve.InterpolatedDoublesCurve: java.lang.String getName()>();

        $r93 = new com.opengamma.analytics.math.curve.InterpolatedDoublesCurve;

        $r94 = virtualinvoke r107.<com.opengamma.analytics.math.curve.InterpolatedDoublesCurve: double[] getXDataAsPrimitive()>();

        $r95 = virtualinvoke r107.<com.opengamma.analytics.math.curve.InterpolatedDoublesCurve: com.opengamma.analytics.math.interpolation.Interpolator1D getInterpolator()>();

        specialinvoke $r93.<com.opengamma.analytics.math.curve.InterpolatedDoublesCurve: void <init>(double[],double[],com.opengamma.analytics.math.interpolation.Interpolator1D,boolean)>($r94, r109, $r95, 1);

        specialinvoke $r91.<com.opengamma.analytics.financial.model.interestrate.curve.YieldCurve: void <init>(java.lang.String,com.opengamma.analytics.math.curve.DoublesCurve)>($r92, $r93);

        $r96 = new com.opengamma.analytics.financial.provider.description.interestrate.IssuerProviderDiscount;

        $r97 = virtualinvoke r2.<com.opengamma.analytics.financial.provider.description.interestrate.IssuerProviderDiscount: com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount getMulticurveProvider()>();

        $r98 = virtualinvoke $r97.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount: com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount withDiscountFactor(com.opengamma.util.money.Currency,com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve)>(r104, $r91);

        $r99 = virtualinvoke r2.<com.opengamma.analytics.financial.provider.description.interestrate.IssuerProviderDiscount: java.util.Map getIssuerCurves()>();

        specialinvoke $r96.<com.opengamma.analytics.financial.provider.description.interestrate.IssuerProviderDiscount: void <init>(com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount,java.util.Map)>($r98, $r99);

        $r100 = r0.<com.opengamma.analytics.financial.provider.sensitivity.issuer.SimpleParameterSensitivityIssuerDiscountInterpolatedFDCalculator: com.opengamma.analytics.financial.interestrate.InstrumentDerivativeVisitor _valueCalculator>;

        $r101 = interfaceinvoke r1.<com.opengamma.analytics.financial.interestrate.InstrumentDerivative: java.lang.Object accept(com.opengamma.analytics.financial.interestrate.InstrumentDerivativeVisitor,java.lang.Object)>($r100, $r96);

        r112 = (java.lang.Double) $r101;

        $d36 = virtualinvoke r112.<java.lang.Double: double doubleValue()>();

        $d37 = virtualinvoke r4.<java.lang.Double: double doubleValue()>();

        $d38 = $d36 + $d37;

        r113 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d38);

        $d39 = virtualinvoke r113.<java.lang.Double: double doubleValue()>();

        $d40 = r0.<com.opengamma.analytics.financial.provider.sensitivity.issuer.SimpleParameterSensitivityIssuerDiscountInterpolatedFDCalculator: double _shift>;

        $d41 = $d39 / $d40;

        r108[i1] = $d41;

        i1 = i1 + 1;

        goto label02;

     label03:
        $r87 = virtualinvoke r2.<com.opengamma.analytics.financial.provider.description.interestrate.IssuerProviderDiscount: com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount getMulticurveProvider()>();

        r114 = virtualinvoke $r87.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount: java.lang.String getName(com.opengamma.util.money.Currency)>(r104);

        $r88 = new com.opengamma.analytics.math.matrix.DoubleMatrix1D;

        specialinvoke $r88.<com.opengamma.analytics.math.matrix.DoubleMatrix1D: void <init>(double[])>(r108);

        r102 = virtualinvoke r102.<com.opengamma.analytics.financial.provider.sensitivity.multicurve.SimpleParameterSensitivity: com.opengamma.analytics.financial.provider.sensitivity.multicurve.SimpleParameterSensitivity plus(java.lang.String,com.opengamma.analytics.math.matrix.DoubleMatrix1D)>(r114, $r88);

        goto label01;

     label04:
        $r13 = virtualinvoke r2.<com.opengamma.analytics.financial.provider.description.interestrate.IssuerProviderDiscount: com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount getMulticurveProvider()>();

        r115 = virtualinvoke $r13.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount: java.util.Set getIndexesON()>();

        r116 = interfaceinvoke r115.<java.util.Set: java.util.Iterator iterator()>();

     label05:
        $z1 = interfaceinvoke r116.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label08;

        $r62 = interfaceinvoke r116.<java.util.Iterator: java.lang.Object next()>();

        r117 = (com.opengamma.analytics.financial.instrument.index.IndexON) $r62;

        $r63 = virtualinvoke r2.<com.opengamma.analytics.financial.provider.description.interestrate.IssuerProviderDiscount: com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount getMulticurveProvider()>();

        r118 = virtualinvoke $r63.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount: com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve getCurve(com.opengamma.analytics.financial.instrument.index.IndexON)>(r117);

        $z8 = r118 instanceof com.opengamma.analytics.financial.model.interestrate.curve.YieldCurve;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z8, "Curve should be a YieldCurve");

        r119 = (com.opengamma.analytics.financial.model.interestrate.curve.YieldCurve) r118;

        $r64 = virtualinvoke r119.<com.opengamma.analytics.financial.model.interestrate.curve.YieldCurve: com.opengamma.analytics.math.curve.DoublesCurve getCurve()>();

        $z9 = $r64 instanceof com.opengamma.analytics.math.curve.InterpolatedDoublesCurve;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z9, "Yield curve should be based on InterpolatedDoublesCurve");

        $r65 = virtualinvoke r119.<com.opengamma.analytics.financial.model.interestrate.curve.YieldCurve: com.opengamma.analytics.math.curve.DoublesCurve getCurve()>();

        r120 = (com.opengamma.analytics.math.curve.InterpolatedDoublesCurve) $r65;

        $r66 = virtualinvoke r120.<com.opengamma.analytics.math.curve.InterpolatedDoublesCurve: double[] getXDataAsPrimitive()>();

        i2 = lengthof $r66;

        r121 = newarray (double)[i2];

        i3 = 0;

     label06:
        if i3 >= i2 goto label07;

        $r69 = virtualinvoke r120.<com.opengamma.analytics.math.curve.InterpolatedDoublesCurve: double[] getYDataAsPrimitive()>();

        $r70 = virtualinvoke $r69.<java.lang.Object: java.lang.Object clone()>();

        r122 = (double[]) $r70;

        $d25 = r122[i3];

        $d24 = r0.<com.opengamma.analytics.financial.provider.sensitivity.issuer.SimpleParameterSensitivityIssuerDiscountInterpolatedFDCalculator: double _shift>;

        $d26 = $d25 + $d24;

        r122[i3] = $d26;

        $r71 = new com.opengamma.analytics.financial.model.interestrate.curve.YieldCurve;

        $r72 = virtualinvoke r120.<com.opengamma.analytics.math.curve.InterpolatedDoublesCurve: java.lang.String getName()>();

        $r73 = new com.opengamma.analytics.math.curve.InterpolatedDoublesCurve;

        $r74 = virtualinvoke r120.<com.opengamma.analytics.math.curve.InterpolatedDoublesCurve: double[] getXDataAsPrimitive()>();

        $r75 = virtualinvoke r120.<com.opengamma.analytics.math.curve.InterpolatedDoublesCurve: com.opengamma.analytics.math.interpolation.Interpolator1D getInterpolator()>();

        specialinvoke $r73.<com.opengamma.analytics.math.curve.InterpolatedDoublesCurve: void <init>(double[],double[],com.opengamma.analytics.math.interpolation.Interpolator1D,boolean)>($r74, r122, $r75, 1);

        specialinvoke $r71.<com.opengamma.analytics.financial.model.interestrate.curve.YieldCurve: void <init>(java.lang.String,com.opengamma.analytics.math.curve.DoublesCurve)>($r72, $r73);

        $r76 = new com.opengamma.analytics.financial.provider.description.interestrate.IssuerProviderDiscount;

        $r77 = virtualinvoke r2.<com.opengamma.analytics.financial.provider.description.interestrate.IssuerProviderDiscount: com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount getMulticurveProvider()>();

        $r78 = virtualinvoke $r77.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount: com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount withForward(com.opengamma.analytics.financial.instrument.index.IndexON,com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve)>(r117, $r71);

        $r79 = virtualinvoke r2.<com.opengamma.analytics.financial.provider.description.interestrate.IssuerProviderDiscount: java.util.Map getIssuerCurves()>();

        specialinvoke $r76.<com.opengamma.analytics.financial.provider.description.interestrate.IssuerProviderDiscount: void <init>(com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount,java.util.Map)>($r78, $r79);

        $r80 = r0.<com.opengamma.analytics.financial.provider.sensitivity.issuer.SimpleParameterSensitivityIssuerDiscountInterpolatedFDCalculator: com.opengamma.analytics.financial.interestrate.InstrumentDerivativeVisitor _valueCalculator>;

        $r81 = interfaceinvoke r1.<com.opengamma.analytics.financial.interestrate.InstrumentDerivative: java.lang.Object accept(com.opengamma.analytics.financial.interestrate.InstrumentDerivativeVisitor,java.lang.Object)>($r80, $r76);

        r125 = (java.lang.Double) $r81;

        $d27 = virtualinvoke r125.<java.lang.Double: double doubleValue()>();

        $d28 = virtualinvoke r4.<java.lang.Double: double doubleValue()>();

        $d29 = $d27 + $d28;

        r126 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d29);

        $d30 = virtualinvoke r126.<java.lang.Double: double doubleValue()>();

        $d31 = r0.<com.opengamma.analytics.financial.provider.sensitivity.issuer.SimpleParameterSensitivityIssuerDiscountInterpolatedFDCalculator: double _shift>;

        $d32 = $d30 / $d31;

        r121[i3] = $d32;

        i3 = i3 + 1;

        goto label06;

     label07:
        $r67 = virtualinvoke r2.<com.opengamma.analytics.financial.provider.description.interestrate.IssuerProviderDiscount: com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount getMulticurveProvider()>();

        r127 = virtualinvoke $r67.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount: java.lang.String getName(com.opengamma.analytics.financial.instrument.index.IndexON)>(r117);

        $r68 = new com.opengamma.analytics.math.matrix.DoubleMatrix1D;

        specialinvoke $r68.<com.opengamma.analytics.math.matrix.DoubleMatrix1D: void <init>(double[])>(r121);

        r102 = virtualinvoke r102.<com.opengamma.analytics.financial.provider.sensitivity.multicurve.SimpleParameterSensitivity: com.opengamma.analytics.financial.provider.sensitivity.multicurve.SimpleParameterSensitivity plus(java.lang.String,com.opengamma.analytics.math.matrix.DoubleMatrix1D)>(r127, $r68);

        goto label05;

     label08:
        $r14 = virtualinvoke r2.<com.opengamma.analytics.financial.provider.description.interestrate.IssuerProviderDiscount: com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount getMulticurveProvider()>();

        r128 = virtualinvoke $r14.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount: java.util.Set getIndexesIbor()>();

        r129 = interfaceinvoke r128.<java.util.Set: java.util.Iterator iterator()>();

     label09:
        $z2 = interfaceinvoke r129.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label12;

        $r29 = interfaceinvoke r129.<java.util.Iterator: java.lang.Object next()>();

        r130 = (com.opengamma.analytics.financial.instrument.index.IborIndex) $r29;

        $r30 = virtualinvoke r2.<com.opengamma.analytics.financial.provider.description.interestrate.IssuerProviderDiscount: com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount getMulticurveProvider()>();

        r131 = virtualinvoke $r30.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount: com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve getCurve(com.opengamma.analytics.financial.instrument.index.IborIndex)>(r130);

        $z6 = r131 instanceof com.opengamma.analytics.financial.model.interestrate.curve.YieldCurve;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z6, "Curve should be a YieldCurve");

        r132 = (com.opengamma.analytics.financial.model.interestrate.curve.YieldCurve) r131;

        $r31 = virtualinvoke r132.<com.opengamma.analytics.financial.model.interestrate.curve.YieldCurve: com.opengamma.analytics.math.curve.DoublesCurve getCurve()>();

        $z7 = $r31 instanceof com.opengamma.analytics.math.curve.InterpolatedDoublesCurve;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z7, "Yield curve should be based on InterpolatedDoublesCurve");

        $r32 = virtualinvoke r132.<com.opengamma.analytics.financial.model.interestrate.curve.YieldCurve: com.opengamma.analytics.math.curve.DoublesCurve getCurve()>();

        r133 = (com.opengamma.analytics.math.curve.InterpolatedDoublesCurve) $r32;

        $r33 = virtualinvoke r133.<com.opengamma.analytics.math.curve.InterpolatedDoublesCurve: double[] getXDataAsPrimitive()>();

        i4 = lengthof $r33;

        r134 = newarray (double)[i4];

        i5 = 0;

     label10:
        if i5 >= i4 goto label11;

        $r36 = virtualinvoke r133.<com.opengamma.analytics.math.curve.InterpolatedDoublesCurve: double[] getYDataAsPrimitive()>();

        $r37 = virtualinvoke $r36.<java.lang.Object: java.lang.Object clone()>();

        r135 = (double[]) $r37;

        $d12 = r135[i5];

        $d11 = r0.<com.opengamma.analytics.financial.provider.sensitivity.issuer.SimpleParameterSensitivityIssuerDiscountInterpolatedFDCalculator: double _shift>;

        $d13 = $d12 + $d11;

        r135[i5] = $d13;

        $r38 = new com.opengamma.analytics.financial.model.interestrate.curve.YieldCurve;

        $r39 = virtualinvoke r133.<com.opengamma.analytics.math.curve.InterpolatedDoublesCurve: java.lang.String getName()>();

        $r40 = new com.opengamma.analytics.math.curve.InterpolatedDoublesCurve;

        $r41 = virtualinvoke r133.<com.opengamma.analytics.math.curve.InterpolatedDoublesCurve: double[] getXDataAsPrimitive()>();

        $r42 = virtualinvoke r133.<com.opengamma.analytics.math.curve.InterpolatedDoublesCurve: com.opengamma.analytics.math.interpolation.Interpolator1D getInterpolator()>();

        specialinvoke $r40.<com.opengamma.analytics.math.curve.InterpolatedDoublesCurve: void <init>(double[],double[],com.opengamma.analytics.math.interpolation.Interpolator1D,boolean)>($r41, r135, $r42, 1);

        specialinvoke $r38.<com.opengamma.analytics.financial.model.interestrate.curve.YieldCurve: void <init>(java.lang.String,com.opengamma.analytics.math.curve.DoublesCurve)>($r39, $r40);

        $r43 = new com.opengamma.analytics.financial.provider.description.interestrate.IssuerProviderDiscount;

        $r44 = virtualinvoke r2.<com.opengamma.analytics.financial.provider.description.interestrate.IssuerProviderDiscount: com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount getMulticurveProvider()>();

        $r45 = virtualinvoke $r44.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount: com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount withForward(com.opengamma.analytics.financial.instrument.index.IborIndex,com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve)>(r130, $r38);

        $r46 = virtualinvoke r2.<com.opengamma.analytics.financial.provider.description.interestrate.IssuerProviderDiscount: java.util.Map getIssuerCurves()>();

        specialinvoke $r43.<com.opengamma.analytics.financial.provider.description.interestrate.IssuerProviderDiscount: void <init>(com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount,java.util.Map)>($r45, $r46);

        $r47 = r0.<com.opengamma.analytics.financial.provider.sensitivity.issuer.SimpleParameterSensitivityIssuerDiscountInterpolatedFDCalculator: com.opengamma.analytics.financial.interestrate.InstrumentDerivativeVisitor _valueCalculator>;

        $r48 = interfaceinvoke r1.<com.opengamma.analytics.financial.interestrate.InstrumentDerivative: java.lang.Object accept(com.opengamma.analytics.financial.interestrate.InstrumentDerivativeVisitor,java.lang.Object)>($r47, $r43);

        r138 = (java.lang.Double) $r48;

        $r49 = virtualinvoke r133.<com.opengamma.analytics.math.curve.InterpolatedDoublesCurve: double[] getYDataAsPrimitive()>();

        $r50 = virtualinvoke $r49.<java.lang.Object: java.lang.Object clone()>();

        r139 = (double[]) $r50;

        $d15 = r139[i5];

        $d14 = r0.<com.opengamma.analytics.financial.provider.sensitivity.issuer.SimpleParameterSensitivityIssuerDiscountInterpolatedFDCalculator: double _shift>;

        $d16 = $d15 - $d14;

        r139[i5] = $d16;

        $r51 = new com.opengamma.analytics.financial.model.interestrate.curve.YieldCurve;

        $r52 = virtualinvoke r133.<com.opengamma.analytics.math.curve.InterpolatedDoublesCurve: java.lang.String getName()>();

        $r53 = new com.opengamma.analytics.math.curve.InterpolatedDoublesCurve;

        $r54 = virtualinvoke r133.<com.opengamma.analytics.math.curve.InterpolatedDoublesCurve: double[] getXDataAsPrimitive()>();

        $r55 = virtualinvoke r133.<com.opengamma.analytics.math.curve.InterpolatedDoublesCurve: com.opengamma.analytics.math.interpolation.Interpolator1D getInterpolator()>();

        specialinvoke $r53.<com.opengamma.analytics.math.curve.InterpolatedDoublesCurve: void <init>(double[],double[],com.opengamma.analytics.math.interpolation.Interpolator1D,boolean)>($r54, r139, $r55, 1);

        specialinvoke $r51.<com.opengamma.analytics.financial.model.interestrate.curve.YieldCurve: void <init>(java.lang.String,com.opengamma.analytics.math.curve.DoublesCurve)>($r52, $r53);

        $r56 = new com.opengamma.analytics.financial.provider.description.interestrate.IssuerProviderDiscount;

        $r57 = virtualinvoke r2.<com.opengamma.analytics.financial.provider.description.interestrate.IssuerProviderDiscount: com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount getMulticurveProvider()>();

        $r58 = virtualinvoke $r57.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount: com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount withForward(com.opengamma.analytics.financial.instrument.index.IborIndex,com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve)>(r130, $r51);

        $r59 = virtualinvoke r2.<com.opengamma.analytics.financial.provider.description.interestrate.IssuerProviderDiscount: java.util.Map getIssuerCurves()>();

        specialinvoke $r56.<com.opengamma.analytics.financial.provider.description.interestrate.IssuerProviderDiscount: void <init>(com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount,java.util.Map)>($r58, $r59);

        $r60 = r0.<com.opengamma.analytics.financial.provider.sensitivity.issuer.SimpleParameterSensitivityIssuerDiscountInterpolatedFDCalculator: com.opengamma.analytics.financial.interestrate.InstrumentDerivativeVisitor _valueCalculator>;

        $r61 = interfaceinvoke r1.<com.opengamma.analytics.financial.interestrate.InstrumentDerivative: java.lang.Object accept(com.opengamma.analytics.financial.interestrate.InstrumentDerivativeVisitor,java.lang.Object)>($r60, $r56);

        r7 = (java.lang.Double) $r61;

        $d17 = virtualinvoke r138.<java.lang.Double: double doubleValue()>();

        $d18 = virtualinvoke r7.<java.lang.Double: double doubleValue()>();

        $d19 = $d17 - $d18;

        r8 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d19);

        $d20 = virtualinvoke r8.<java.lang.Double: double doubleValue()>();

        $d21 = r0.<com.opengamma.analytics.financial.provider.sensitivity.issuer.SimpleParameterSensitivityIssuerDiscountInterpolatedFDCalculator: double _shift>;

        $d22 = 2.0 * $d21;

        $d23 = $d20 / $d22;

        r134[i5] = $d23;

        i5 = i5 + 1;

        goto label10;

     label11:
        $r34 = virtualinvoke r2.<com.opengamma.analytics.financial.provider.description.interestrate.IssuerProviderDiscount: com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount getMulticurveProvider()>();

        r141 = virtualinvoke $r34.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount: java.lang.String getName(com.opengamma.analytics.financial.instrument.index.IborIndex)>(r130);

        $r35 = new com.opengamma.analytics.math.matrix.DoubleMatrix1D;

        specialinvoke $r35.<com.opengamma.analytics.math.matrix.DoubleMatrix1D: void <init>(double[])>(r134);

        r102 = virtualinvoke r102.<com.opengamma.analytics.financial.provider.sensitivity.multicurve.SimpleParameterSensitivity: com.opengamma.analytics.financial.provider.sensitivity.multicurve.SimpleParameterSensitivity plus(java.lang.String,com.opengamma.analytics.math.matrix.DoubleMatrix1D)>(r141, $r35);

        goto label09;

     label12:
        r142 = virtualinvoke r2.<com.opengamma.analytics.financial.provider.description.interestrate.IssuerProviderDiscount: java.util.Set getIssuers()>();

        r143 = interfaceinvoke r142.<java.util.Set: java.util.Iterator iterator()>();

     label13:
        $z3 = interfaceinvoke r143.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label16;

        $r15 = interfaceinvoke r143.<java.util.Iterator: java.lang.Object next()>();

        r144 = (com.opengamma.util.tuple.Pair) $r15;

        r145 = virtualinvoke r2.<com.opengamma.analytics.financial.provider.description.interestrate.IssuerProviderDiscount: com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve getIssuerCurve(com.opengamma.util.tuple.Pair)>(r144);

        $z4 = r145 instanceof com.opengamma.analytics.financial.model.interestrate.curve.YieldCurve;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z4, "Curve should be a YieldCurve");

        r146 = (com.opengamma.analytics.financial.model.interestrate.curve.YieldCurve) r145;

        $r16 = virtualinvoke r146.<com.opengamma.analytics.financial.model.interestrate.curve.YieldCurve: com.opengamma.analytics.math.curve.DoublesCurve getCurve()>();

        $z5 = $r16 instanceof com.opengamma.analytics.math.curve.InterpolatedDoublesCurve;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z5, "Yield curve should be based on InterpolatedDoublesCurve");

        $r17 = virtualinvoke r146.<com.opengamma.analytics.financial.model.interestrate.curve.YieldCurve: com.opengamma.analytics.math.curve.DoublesCurve getCurve()>();

        r147 = (com.opengamma.analytics.math.curve.InterpolatedDoublesCurve) $r17;

        $r18 = virtualinvoke r147.<com.opengamma.analytics.math.curve.InterpolatedDoublesCurve: double[] getXDataAsPrimitive()>();

        i6 = lengthof $r18;

        r148 = newarray (double)[i6];

        i7 = 0;

     label14:
        if i7 >= i6 goto label15;

        $r20 = virtualinvoke r147.<com.opengamma.analytics.math.curve.InterpolatedDoublesCurve: double[] getYDataAsPrimitive()>();

        $r21 = virtualinvoke $r20.<java.lang.Object: java.lang.Object clone()>();

        r149 = (double[]) $r21;

        $d3 = r149[i7];

        $d2 = r0.<com.opengamma.analytics.financial.provider.sensitivity.issuer.SimpleParameterSensitivityIssuerDiscountInterpolatedFDCalculator: double _shift>;

        $d4 = $d3 + $d2;

        r149[i7] = $d4;

        $r22 = new com.opengamma.analytics.financial.model.interestrate.curve.YieldCurve;

        $r23 = virtualinvoke r147.<com.opengamma.analytics.math.curve.InterpolatedDoublesCurve: java.lang.String getName()>();

        $r24 = new com.opengamma.analytics.math.curve.InterpolatedDoublesCurve;

        $r25 = virtualinvoke r147.<com.opengamma.analytics.math.curve.InterpolatedDoublesCurve: double[] getXDataAsPrimitive()>();

        $r26 = virtualinvoke r147.<com.opengamma.analytics.math.curve.InterpolatedDoublesCurve: com.opengamma.analytics.math.interpolation.Interpolator1D getInterpolator()>();

        specialinvoke $r24.<com.opengamma.analytics.math.curve.InterpolatedDoublesCurve: void <init>(double[],double[],com.opengamma.analytics.math.interpolation.Interpolator1D,boolean)>($r25, r149, $r26, 1);

        specialinvoke $r22.<com.opengamma.analytics.financial.model.interestrate.curve.YieldCurve: void <init>(java.lang.String,com.opengamma.analytics.math.curve.DoublesCurve)>($r23, $r24);

        r151 = virtualinvoke r2.<com.opengamma.analytics.financial.provider.description.interestrate.IssuerProviderDiscount: com.opengamma.analytics.financial.provider.description.interestrate.IssuerProviderDiscount withIssuerCurve(com.opengamma.util.tuple.Pair,com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve)>(r144, $r22);

        $r27 = r0.<com.opengamma.analytics.financial.provider.sensitivity.issuer.SimpleParameterSensitivityIssuerDiscountInterpolatedFDCalculator: com.opengamma.analytics.financial.interestrate.InstrumentDerivativeVisitor _valueCalculator>;

        $r28 = interfaceinvoke r1.<com.opengamma.analytics.financial.interestrate.InstrumentDerivative: java.lang.Object accept(com.opengamma.analytics.financial.interestrate.InstrumentDerivativeVisitor,java.lang.Object)>($r27, r151);

        r152 = (java.lang.Double) $r28;

        $d5 = virtualinvoke r152.<java.lang.Double: double doubleValue()>();

        $d6 = virtualinvoke r4.<java.lang.Double: double doubleValue()>();

        $d7 = $d5 + $d6;

        r153 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d7);

        $d8 = virtualinvoke r153.<java.lang.Double: double doubleValue()>();

        $d9 = r0.<com.opengamma.analytics.financial.provider.sensitivity.issuer.SimpleParameterSensitivityIssuerDiscountInterpolatedFDCalculator: double _shift>;

        $d10 = $d8 / $d9;

        r148[i7] = $d10;

        i7 = i7 + 1;

        goto label14;

     label15:
        r154 = virtualinvoke r2.<com.opengamma.analytics.financial.provider.description.interestrate.IssuerProviderDiscount: java.lang.String getName(com.opengamma.util.tuple.Pair)>(r144);

        $r19 = new com.opengamma.analytics.math.matrix.DoubleMatrix1D;

        specialinvoke $r19.<com.opengamma.analytics.math.matrix.DoubleMatrix1D: void <init>(double[])>(r148);

        r102 = virtualinvoke r102.<com.opengamma.analytics.financial.provider.sensitivity.multicurve.SimpleParameterSensitivity: com.opengamma.analytics.financial.provider.sensitivity.multicurve.SimpleParameterSensitivity plus(java.lang.String,com.opengamma.analytics.math.matrix.DoubleMatrix1D)>(r154, $r19);

        goto label13;

     label16:
        return r102;
    }
}
