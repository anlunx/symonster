public class org.apache.commons.math3.linear.ConjugateGradient extends org.apache.commons.math3.linear.PreconditionedIterativeLinearSolver
{
    public static final java.lang.String OPERATOR;
    public static final java.lang.String VECTOR;
    private boolean check;
    private final double delta;

    public void <init>(int, double, boolean)
    {
        org.apache.commons.math3.linear.ConjugateGradient r0;
        int i0;
        double d0;
        boolean z0;

        r0 := @this: org.apache.commons.math3.linear.ConjugateGradient;

        i0 := @parameter0: int;

        d0 := @parameter1: double;

        z0 := @parameter2: boolean;

        specialinvoke r0.<org.apache.commons.math3.linear.PreconditionedIterativeLinearSolver: void <init>(int)>(i0);

        r0.<org.apache.commons.math3.linear.ConjugateGradient: double delta> = d0;

        r0.<org.apache.commons.math3.linear.ConjugateGradient: boolean check> = z0;

        return;
    }

    public void <init>(org.apache.commons.math3.util.IterationManager, double, boolean) throws org.apache.commons.math3.exception.NullArgumentException
    {
        org.apache.commons.math3.linear.ConjugateGradient r0;
        org.apache.commons.math3.util.IterationManager r1;
        double d0;
        boolean z0;

        r0 := @this: org.apache.commons.math3.linear.ConjugateGradient;

        r1 := @parameter0: org.apache.commons.math3.util.IterationManager;

        d0 := @parameter1: double;

        z0 := @parameter2: boolean;

        specialinvoke r0.<org.apache.commons.math3.linear.PreconditionedIterativeLinearSolver: void <init>(org.apache.commons.math3.util.IterationManager)>(r1);

        r0.<org.apache.commons.math3.linear.ConjugateGradient: double delta> = d0;

        r0.<org.apache.commons.math3.linear.ConjugateGradient: boolean check> = z0;

        return;
    }

    public final boolean getCheck()
    {
        org.apache.commons.math3.linear.ConjugateGradient r0;
        boolean $z0;

        r0 := @this: org.apache.commons.math3.linear.ConjugateGradient;

        $z0 = r0.<org.apache.commons.math3.linear.ConjugateGradient: boolean check>;

        return $z0;
    }

    public org.apache.commons.math3.linear.RealVector solveInPlace(org.apache.commons.math3.linear.RealLinearOperator, org.apache.commons.math3.linear.RealLinearOperator, org.apache.commons.math3.linear.RealVector, org.apache.commons.math3.linear.RealVector) throws org.apache.commons.math3.exception.NullArgumentException, org.apache.commons.math3.linear.NonPositiveDefiniteOperatorException, org.apache.commons.math3.linear.NonSquareOperatorException, org.apache.commons.math3.exception.DimensionMismatchException, org.apache.commons.math3.exception.MaxCountExceededException
    {
        org.apache.commons.math3.linear.ConjugateGradient r0;
        org.apache.commons.math3.linear.RealLinearOperator r1, r2;
        org.apache.commons.math3.linear.RealVector r3, r4, r6, r8, r9, r10, r11, r22, r23, r27;
        org.apache.commons.math3.util.IterationManager r5;
        double d0, d1, $d2, $d3, $d4, $d5, d6, d7, d8, d9;
        org.apache.commons.math3.exception.util.ExceptionContext r12, r13;
        org.apache.commons.math3.linear.DefaultIterativeLinearSolverEvent $r14, $r15, $r19;
        int $i0, $i2, $i3, $i4;
        byte $b1, $b5, $b6, $b7;
        boolean $z0, $z1;
        org.apache.commons.math3.linear.NonPositiveDefiniteOperatorException $r20, $r21;

        r0 := @this: org.apache.commons.math3.linear.ConjugateGradient;

        r1 := @parameter0: org.apache.commons.math3.linear.RealLinearOperator;

        r2 := @parameter1: org.apache.commons.math3.linear.RealLinearOperator;

        r3 := @parameter2: org.apache.commons.math3.linear.RealVector;

        r4 := @parameter3: org.apache.commons.math3.linear.RealVector;

        staticinvoke <org.apache.commons.math3.linear.ConjugateGradient: void checkParameters(org.apache.commons.math3.linear.RealLinearOperator,org.apache.commons.math3.linear.RealLinearOperator,org.apache.commons.math3.linear.RealVector,org.apache.commons.math3.linear.RealVector)>(r1, r2, r3, r4);

        r5 = virtualinvoke r0.<org.apache.commons.math3.linear.ConjugateGradient: org.apache.commons.math3.util.IterationManager getIterationManager()>();

        virtualinvoke r5.<org.apache.commons.math3.util.IterationManager: void resetIterationCount()>();

        $d2 = r0.<org.apache.commons.math3.linear.ConjugateGradient: double delta>;

        $d3 = virtualinvoke r3.<org.apache.commons.math3.linear.RealVector: double getNorm()>();

        d0 = $d2 * $d3;

        r6 = staticinvoke <org.apache.commons.math3.linear.RealVector: org.apache.commons.math3.linear.RealVector unmodifiableRealVector(org.apache.commons.math3.linear.RealVector)>(r3);

        virtualinvoke r5.<org.apache.commons.math3.util.IterationManager: void incrementIterationCount()>();

        r8 = staticinvoke <org.apache.commons.math3.linear.RealVector: org.apache.commons.math3.linear.RealVector unmodifiableRealVector(org.apache.commons.math3.linear.RealVector)>(r4);

        r9 = virtualinvoke r4.<org.apache.commons.math3.linear.RealVector: org.apache.commons.math3.linear.RealVector copy()>();

        r22 = virtualinvoke r1.<org.apache.commons.math3.linear.RealLinearOperator: org.apache.commons.math3.linear.RealVector operate(org.apache.commons.math3.linear.RealVector)>(r9);

        r10 = virtualinvoke r3.<org.apache.commons.math3.linear.RealVector: org.apache.commons.math3.linear.RealVector combine(double,double,org.apache.commons.math3.linear.RealVector)>(1.0, -1.0, r22);

        r11 = staticinvoke <org.apache.commons.math3.linear.RealVector: org.apache.commons.math3.linear.RealVector unmodifiableRealVector(org.apache.commons.math3.linear.RealVector)>(r10);

        d6 = virtualinvoke r10.<org.apache.commons.math3.linear.RealVector: double getNorm()>();

        if r2 != null goto label01;

        r23 = r10;

        goto label02;

     label01:
        r23 = null;

     label02:
        $r14 = new org.apache.commons.math3.linear.DefaultIterativeLinearSolverEvent;

        $i0 = virtualinvoke r5.<org.apache.commons.math3.util.IterationManager: int getIterations()>();

        specialinvoke $r14.<org.apache.commons.math3.linear.DefaultIterativeLinearSolverEvent: void <init>(java.lang.Object,int,org.apache.commons.math3.linear.RealVector,org.apache.commons.math3.linear.RealVector,org.apache.commons.math3.linear.RealVector,double)>(r0, $i0, r8, r6, r11, d6);

        virtualinvoke r5.<org.apache.commons.math3.util.IterationManager: void fireInitializationEvent(org.apache.commons.math3.util.IterationEvent)>($r14);

        $b1 = d6 cmpg d0;

        if $b1 > 0 goto label03;

        virtualinvoke r5.<org.apache.commons.math3.util.IterationManager: void fireTerminationEvent(org.apache.commons.math3.util.IterationEvent)>($r14);

        return r4;

     label03:
        d7 = 0.0;

     label04:
        virtualinvoke r5.<org.apache.commons.math3.util.IterationManager: void incrementIterationCount()>();

        $r15 = new org.apache.commons.math3.linear.DefaultIterativeLinearSolverEvent;

        $i2 = virtualinvoke r5.<org.apache.commons.math3.util.IterationManager: int getIterations()>();

        specialinvoke $r15.<org.apache.commons.math3.linear.DefaultIterativeLinearSolverEvent: void <init>(java.lang.Object,int,org.apache.commons.math3.linear.RealVector,org.apache.commons.math3.linear.RealVector,org.apache.commons.math3.linear.RealVector,double)>(r0, $i2, r8, r6, r11, d6);

        virtualinvoke r5.<org.apache.commons.math3.util.IterationManager: void fireIterationStartedEvent(org.apache.commons.math3.util.IterationEvent)>($r15);

        if r2 == null goto label05;

        r23 = virtualinvoke r2.<org.apache.commons.math3.linear.RealLinearOperator: org.apache.commons.math3.linear.RealVector operate(org.apache.commons.math3.linear.RealVector)>(r10);

     label05:
        d1 = virtualinvoke r10.<org.apache.commons.math3.linear.RealVector: double dotProduct(org.apache.commons.math3.linear.RealVector)>(r23);

        $z0 = r0.<org.apache.commons.math3.linear.ConjugateGradient: boolean check>;

        if $z0 == 0 goto label06;

        $b7 = d1 cmpg 0.0;

        if $b7 > 0 goto label06;

        $r21 = new org.apache.commons.math3.linear.NonPositiveDefiniteOperatorException;

        specialinvoke $r21.<org.apache.commons.math3.linear.NonPositiveDefiniteOperatorException: void <init>()>();

        r12 = virtualinvoke $r21.<org.apache.commons.math3.linear.NonPositiveDefiniteOperatorException: org.apache.commons.math3.exception.util.ExceptionContext getContext()>();

        virtualinvoke r12.<org.apache.commons.math3.exception.util.ExceptionContext: void setValue(java.lang.String,java.lang.Object)>("operator", r2);

        virtualinvoke r12.<org.apache.commons.math3.exception.util.ExceptionContext: void setValue(java.lang.String,java.lang.Object)>("vector", r10);

        throw $r21;

     label06:
        $i3 = virtualinvoke r5.<org.apache.commons.math3.util.IterationManager: int getIterations()>();

        if $i3 != 2 goto label07;

        virtualinvoke r9.<org.apache.commons.math3.linear.RealVector: void setSubVector(int,org.apache.commons.math3.linear.RealVector)>(0, r23);

        goto label08;

     label07:
        $d4 = d1 / d7;

        virtualinvoke r9.<org.apache.commons.math3.linear.RealVector: org.apache.commons.math3.linear.RealVector combineToSelf(double,double,org.apache.commons.math3.linear.RealVector)>($d4, 1.0, r23);

     label08:
        r27 = virtualinvoke r1.<org.apache.commons.math3.linear.RealLinearOperator: org.apache.commons.math3.linear.RealVector operate(org.apache.commons.math3.linear.RealVector)>(r9);

        d8 = virtualinvoke r9.<org.apache.commons.math3.linear.RealVector: double dotProduct(org.apache.commons.math3.linear.RealVector)>(r27);

        $z1 = r0.<org.apache.commons.math3.linear.ConjugateGradient: boolean check>;

        if $z1 == 0 goto label09;

        $b6 = d8 cmpg 0.0;

        if $b6 > 0 goto label09;

        $r20 = new org.apache.commons.math3.linear.NonPositiveDefiniteOperatorException;

        specialinvoke $r20.<org.apache.commons.math3.linear.NonPositiveDefiniteOperatorException: void <init>()>();

        r13 = virtualinvoke $r20.<org.apache.commons.math3.linear.NonPositiveDefiniteOperatorException: org.apache.commons.math3.exception.util.ExceptionContext getContext()>();

        virtualinvoke r13.<org.apache.commons.math3.exception.util.ExceptionContext: void setValue(java.lang.String,java.lang.Object)>("operator", r1);

        virtualinvoke r13.<org.apache.commons.math3.exception.util.ExceptionContext: void setValue(java.lang.String,java.lang.Object)>("vector", r9);

        throw $r20;

     label09:
        d9 = d1 / d8;

        virtualinvoke r4.<org.apache.commons.math3.linear.RealVector: org.apache.commons.math3.linear.RealVector combineToSelf(double,double,org.apache.commons.math3.linear.RealVector)>(1.0, d9, r9);

        $d5 = neg d9;

        virtualinvoke r10.<org.apache.commons.math3.linear.RealVector: org.apache.commons.math3.linear.RealVector combineToSelf(double,double,org.apache.commons.math3.linear.RealVector)>(1.0, $d5, r27);

        d7 = d1;

        d6 = virtualinvoke r10.<org.apache.commons.math3.linear.RealVector: double getNorm()>();

        $r19 = new org.apache.commons.math3.linear.DefaultIterativeLinearSolverEvent;

        $i4 = virtualinvoke r5.<org.apache.commons.math3.util.IterationManager: int getIterations()>();

        specialinvoke $r19.<org.apache.commons.math3.linear.DefaultIterativeLinearSolverEvent: void <init>(java.lang.Object,int,org.apache.commons.math3.linear.RealVector,org.apache.commons.math3.linear.RealVector,org.apache.commons.math3.linear.RealVector,double)>(r0, $i4, r8, r6, r11, d6);

        virtualinvoke r5.<org.apache.commons.math3.util.IterationManager: void fireIterationPerformedEvent(org.apache.commons.math3.util.IterationEvent)>($r19);

        $b5 = d6 cmpg d0;

        if $b5 > 0 goto label10;

        virtualinvoke r5.<org.apache.commons.math3.util.IterationManager: void fireTerminationEvent(org.apache.commons.math3.util.IterationEvent)>($r19);

        return r4;

     label10:
        goto label04;
    }

    public static void <clinit>()
    {
        <org.apache.commons.math3.linear.ConjugateGradient: java.lang.String VECTOR> = "vector";

        <org.apache.commons.math3.linear.ConjugateGradient: java.lang.String OPERATOR> = "operator";

        return;
    }
}
