class com.opengamma.analytics.financial.model.option.pricing.analytic.formula.NormalPriceFunction$1 extends com.opengamma.analytics.math.function.Function1D
{
    final double val$t;
    final com.opengamma.analytics.financial.model.option.pricing.analytic.formula.EuropeanVanillaOption val$option;
    final double val$strike;
    final com.opengamma.analytics.financial.model.option.pricing.analytic.formula.NormalPriceFunction this$0;

    void <init>(com.opengamma.analytics.financial.model.option.pricing.analytic.formula.NormalPriceFunction, double, com.opengamma.analytics.financial.model.option.pricing.analytic.formula.EuropeanVanillaOption, double)
    {
        com.opengamma.analytics.financial.model.option.pricing.analytic.formula.NormalPriceFunction$1 r0;
        com.opengamma.analytics.financial.model.option.pricing.analytic.formula.NormalPriceFunction r1;
        double d0, d1;
        com.opengamma.analytics.financial.model.option.pricing.analytic.formula.EuropeanVanillaOption r2;

        r0 := @this: com.opengamma.analytics.financial.model.option.pricing.analytic.formula.NormalPriceFunction$1;

        r1 := @parameter0: com.opengamma.analytics.financial.model.option.pricing.analytic.formula.NormalPriceFunction;

        d0 := @parameter1: double;

        r2 := @parameter2: com.opengamma.analytics.financial.model.option.pricing.analytic.formula.EuropeanVanillaOption;

        d1 := @parameter3: double;

        r0.<com.opengamma.analytics.financial.model.option.pricing.analytic.formula.NormalPriceFunction$1: com.opengamma.analytics.financial.model.option.pricing.analytic.formula.NormalPriceFunction this$0> = r1;

        r0.<com.opengamma.analytics.financial.model.option.pricing.analytic.formula.NormalPriceFunction$1: double val$t> = d0;

        r0.<com.opengamma.analytics.financial.model.option.pricing.analytic.formula.NormalPriceFunction$1: com.opengamma.analytics.financial.model.option.pricing.analytic.formula.EuropeanVanillaOption val$option> = r2;

        r0.<com.opengamma.analytics.financial.model.option.pricing.analytic.formula.NormalPriceFunction$1: double val$strike> = d1;

        specialinvoke r0.<com.opengamma.analytics.math.function.Function1D: void <init>()>();

        return;
    }

    public final java.lang.Double evaluate(com.opengamma.analytics.financial.model.option.pricing.analytic.formula.NormalFunctionData)
    {
        com.opengamma.analytics.financial.model.option.pricing.analytic.formula.NormalPriceFunction$1 r0;
        com.opengamma.analytics.financial.model.option.pricing.analytic.formula.NormalFunctionData r1;
        double d0, d1, d2, d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21, $d22, d23, $d24, d25;
        com.opengamma.analytics.financial.model.option.pricing.analytic.formula.EuropeanVanillaOption $r2;
        boolean $z0;
        byte $b1, $b2, $b3;
        com.opengamma.analytics.math.statistics.distribution.ProbabilityDistribution $r3, $r5;
        java.lang.Double $r4, $r6, $r7, $r8;

        r0 := @this: com.opengamma.analytics.financial.model.option.pricing.analytic.formula.NormalPriceFunction$1;

        r1 := @parameter0: com.opengamma.analytics.financial.model.option.pricing.analytic.formula.NormalFunctionData;

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object,java.lang.String)>(r1, "data");

        d0 = virtualinvoke r1.<com.opengamma.analytics.financial.model.option.pricing.analytic.formula.NormalFunctionData: double getForward()>();

        d1 = virtualinvoke r1.<com.opengamma.analytics.financial.model.option.pricing.analytic.formula.NormalFunctionData: double getNumeraire()>();

        d2 = virtualinvoke r1.<com.opengamma.analytics.financial.model.option.pricing.analytic.formula.NormalFunctionData: double getNormalVolatility()>();

        $d4 = r0.<com.opengamma.analytics.financial.model.option.pricing.analytic.formula.NormalPriceFunction$1: double val$t>;

        $d5 = staticinvoke <java.lang.Math: double sqrt(double)>($d4);

        d3 = d2 * $d5;

        $r2 = r0.<com.opengamma.analytics.financial.model.option.pricing.analytic.formula.NormalPriceFunction$1: com.opengamma.analytics.financial.model.option.pricing.analytic.formula.EuropeanVanillaOption val$option>;

        $z0 = virtualinvoke $r2.<com.opengamma.analytics.financial.model.option.pricing.analytic.formula.EuropeanVanillaOption: boolean isCall()>();

        if $z0 == 0 goto label1;

        $b3 = 1;

        goto label2;

     label1:
        $b3 = -1;

     label2:
        $b1 = d3 cmpg 1.0E-16;

        if $b1 >= 0 goto label5;

        $d22 = (double) $b3;

        $d20 = r0.<com.opengamma.analytics.financial.model.option.pricing.analytic.formula.NormalPriceFunction$1: double val$strike>;

        $d21 = d0 - $d20;

        d23 = $d22 * $d21;

        $b2 = d23 cmpl 0.0;

        if $b2 <= 0 goto label3;

        $d24 = d1 * d23;

        goto label4;

     label3:
        $d24 = 0.0;

     label4:
        $r8 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d24);

        return $r8;

     label5:
        $d8 = (double) $b3;

        $d6 = r0.<com.opengamma.analytics.financial.model.option.pricing.analytic.formula.NormalPriceFunction$1: double val$strike>;

        $d7 = d0 - $d6;

        $d9 = $d8 * $d7;

        d25 = $d9 / d3;

        $d12 = (double) $b3;

        $d10 = r0.<com.opengamma.analytics.financial.model.option.pricing.analytic.formula.NormalPriceFunction$1: double val$strike>;

        $d11 = d0 - $d10;

        $d13 = $d12 * $d11;

        $r3 = staticinvoke <com.opengamma.analytics.financial.model.option.pricing.analytic.formula.NormalPriceFunction: com.opengamma.analytics.math.statistics.distribution.ProbabilityDistribution access$000()>();

        $r4 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d25);

        $d14 = interfaceinvoke $r3.<com.opengamma.analytics.math.statistics.distribution.ProbabilityDistribution: double getCDF(java.lang.Object)>($r4);

        $d15 = $d13 * $d14;

        $r5 = staticinvoke <com.opengamma.analytics.financial.model.option.pricing.analytic.formula.NormalPriceFunction: com.opengamma.analytics.math.statistics.distribution.ProbabilityDistribution access$000()>();

        $r6 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d25);

        $d16 = interfaceinvoke $r5.<com.opengamma.analytics.math.statistics.distribution.ProbabilityDistribution: double getPDF(java.lang.Object)>($r6);

        $d17 = d3 * $d16;

        $d18 = $d15 + $d17;

        $d19 = d1 * $d18;

        $r7 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d19);

        return $r7;
    }

    public volatile java.lang.Object evaluate(java.lang.Object)
    {
        com.opengamma.analytics.financial.model.option.pricing.analytic.formula.NormalPriceFunction$1 r0;
        java.lang.Object r1;
        com.opengamma.analytics.financial.model.option.pricing.analytic.formula.NormalFunctionData $r2;
        java.lang.Double $r3;

        r0 := @this: com.opengamma.analytics.financial.model.option.pricing.analytic.formula.NormalPriceFunction$1;

        r1 := @parameter0: java.lang.Object;

        $r2 = (com.opengamma.analytics.financial.model.option.pricing.analytic.formula.NormalFunctionData) r1;

        $r3 = virtualinvoke r0.<com.opengamma.analytics.financial.model.option.pricing.analytic.formula.NormalPriceFunction$1: java.lang.Double evaluate(com.opengamma.analytics.financial.model.option.pricing.analytic.formula.NormalFunctionData)>($r2);

        return $r3;
    }
}
