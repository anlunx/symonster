class com.opengamma.analytics.financial.model.volatility.smile.function.VolatilityFunctionProvider$2 extends com.opengamma.analytics.math.function.Function1D
{
    final com.opengamma.analytics.math.function.Function1D val$func;
    final com.opengamma.analytics.financial.model.option.pricing.analytic.formula.EuropeanVanillaOption val$option;
    final double val$forward;
    final com.opengamma.analytics.financial.model.volatility.smile.function.VolatilityFunctionProvider this$0;

    void <init>(com.opengamma.analytics.financial.model.volatility.smile.function.VolatilityFunctionProvider, com.opengamma.analytics.math.function.Function1D, com.opengamma.analytics.financial.model.option.pricing.analytic.formula.EuropeanVanillaOption, double)
    {
        com.opengamma.analytics.financial.model.volatility.smile.function.VolatilityFunctionProvider$2 r0;
        com.opengamma.analytics.financial.model.volatility.smile.function.VolatilityFunctionProvider r1;
        com.opengamma.analytics.math.function.Function1D r2;
        com.opengamma.analytics.financial.model.option.pricing.analytic.formula.EuropeanVanillaOption r3;
        double d0;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.smile.function.VolatilityFunctionProvider$2;

        r1 := @parameter0: com.opengamma.analytics.financial.model.volatility.smile.function.VolatilityFunctionProvider;

        r2 := @parameter1: com.opengamma.analytics.math.function.Function1D;

        r3 := @parameter2: com.opengamma.analytics.financial.model.option.pricing.analytic.formula.EuropeanVanillaOption;

        d0 := @parameter3: double;

        r0.<com.opengamma.analytics.financial.model.volatility.smile.function.VolatilityFunctionProvider$2: com.opengamma.analytics.financial.model.volatility.smile.function.VolatilityFunctionProvider this$0> = r1;

        r0.<com.opengamma.analytics.financial.model.volatility.smile.function.VolatilityFunctionProvider$2: com.opengamma.analytics.math.function.Function1D val$func> = r2;

        r0.<com.opengamma.analytics.financial.model.volatility.smile.function.VolatilityFunctionProvider$2: com.opengamma.analytics.financial.model.option.pricing.analytic.formula.EuropeanVanillaOption val$option> = r3;

        r0.<com.opengamma.analytics.financial.model.volatility.smile.function.VolatilityFunctionProvider$2: double val$forward> = d0;

        specialinvoke r0.<com.opengamma.analytics.math.function.Function1D: void <init>()>();

        return;
    }

    public final double[] evaluate(com.opengamma.analytics.financial.model.volatility.smile.function.SmileModelData)
    {
        com.opengamma.analytics.financial.model.volatility.smile.function.VolatilityFunctionProvider$2 r0;
        com.opengamma.analytics.financial.model.volatility.smile.function.SmileModelData r1;
        double[] r2, $r12;
        int $i0, $i1, $i2;
        com.opengamma.analytics.math.function.Function1D $r3, $r10;
        java.lang.Object $r4;
        java.lang.Double $r5;
        double $d0, $d1, $d2, $d3, $d4;
        com.opengamma.analytics.financial.model.option.pricing.analytic.formula.EuropeanVanillaOption $r6, $r8;
        com.opengamma.analytics.financial.model.volatility.smile.function.VolatilityFunctionProvider $r7, $r9, $r11;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.smile.function.VolatilityFunctionProvider$2;

        r1 := @parameter0: com.opengamma.analytics.financial.model.volatility.smile.function.SmileModelData;

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object,java.lang.String)>(r1, "data");

        $i0 = interfaceinvoke r1.<com.opengamma.analytics.financial.model.volatility.smile.function.SmileModelData: int getNumberOfParameters()>();

        $i1 = 3 + $i0;

        r2 = newarray (double)[$i1];

        $r3 = r0.<com.opengamma.analytics.financial.model.volatility.smile.function.VolatilityFunctionProvider$2: com.opengamma.analytics.math.function.Function1D val$func>;

        $r4 = virtualinvoke $r3.<com.opengamma.analytics.math.function.Function1D: java.lang.Object evaluate(java.lang.Object)>(r1);

        $r5 = (java.lang.Double) $r4;

        $d0 = virtualinvoke $r5.<java.lang.Double: double doubleValue()>();

        r2[0] = $d0;

        $r7 = r0.<com.opengamma.analytics.financial.model.volatility.smile.function.VolatilityFunctionProvider$2: com.opengamma.analytics.financial.model.volatility.smile.function.VolatilityFunctionProvider this$0>;

        $r6 = r0.<com.opengamma.analytics.financial.model.volatility.smile.function.VolatilityFunctionProvider$2: com.opengamma.analytics.financial.model.option.pricing.analytic.formula.EuropeanVanillaOption val$option>;

        $d1 = r0.<com.opengamma.analytics.financial.model.volatility.smile.function.VolatilityFunctionProvider$2: double val$forward>;

        $d2 = staticinvoke <com.opengamma.analytics.financial.model.volatility.smile.function.VolatilityFunctionProvider: double access$000(com.opengamma.analytics.financial.model.volatility.smile.function.VolatilityFunctionProvider,com.opengamma.analytics.financial.model.option.pricing.analytic.formula.EuropeanVanillaOption,double,com.opengamma.analytics.financial.model.volatility.smile.function.SmileModelData)>($r7, $r6, $d1, r1);

        r2[1] = $d2;

        $r9 = r0.<com.opengamma.analytics.financial.model.volatility.smile.function.VolatilityFunctionProvider$2: com.opengamma.analytics.financial.model.volatility.smile.function.VolatilityFunctionProvider this$0>;

        $r8 = r0.<com.opengamma.analytics.financial.model.volatility.smile.function.VolatilityFunctionProvider$2: com.opengamma.analytics.financial.model.option.pricing.analytic.formula.EuropeanVanillaOption val$option>;

        $d3 = r0.<com.opengamma.analytics.financial.model.volatility.smile.function.VolatilityFunctionProvider$2: double val$forward>;

        $d4 = staticinvoke <com.opengamma.analytics.financial.model.volatility.smile.function.VolatilityFunctionProvider: double access$100(com.opengamma.analytics.financial.model.volatility.smile.function.VolatilityFunctionProvider,com.opengamma.analytics.financial.model.option.pricing.analytic.formula.EuropeanVanillaOption,double,com.opengamma.analytics.financial.model.volatility.smile.function.SmileModelData)>($r9, $r8, $d3, r1);

        r2[2] = $d4;

        $r11 = r0.<com.opengamma.analytics.financial.model.volatility.smile.function.VolatilityFunctionProvider$2: com.opengamma.analytics.financial.model.volatility.smile.function.VolatilityFunctionProvider this$0>;

        $r10 = r0.<com.opengamma.analytics.financial.model.volatility.smile.function.VolatilityFunctionProvider$2: com.opengamma.analytics.math.function.Function1D val$func>;

        $r12 = staticinvoke <com.opengamma.analytics.financial.model.volatility.smile.function.VolatilityFunctionProvider: double[] access$200(com.opengamma.analytics.financial.model.volatility.smile.function.VolatilityFunctionProvider,com.opengamma.analytics.math.function.Function1D,com.opengamma.analytics.financial.model.volatility.smile.function.SmileModelData)>($r11, $r10, r1);

        $i2 = interfaceinvoke r1.<com.opengamma.analytics.financial.model.volatility.smile.function.SmileModelData: int getNumberOfParameters()>();

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r12, 0, r2, 3, $i2);

        return r2;
    }

    public volatile java.lang.Object evaluate(java.lang.Object)
    {
        com.opengamma.analytics.financial.model.volatility.smile.function.VolatilityFunctionProvider$2 r0;
        java.lang.Object r1;
        com.opengamma.analytics.financial.model.volatility.smile.function.SmileModelData $r2;
        double[] $r3;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.smile.function.VolatilityFunctionProvider$2;

        r1 := @parameter0: java.lang.Object;

        $r2 = (com.opengamma.analytics.financial.model.volatility.smile.function.SmileModelData) r1;

        $r3 = virtualinvoke r0.<com.opengamma.analytics.financial.model.volatility.smile.function.VolatilityFunctionProvider$2: double[] evaluate(com.opengamma.analytics.financial.model.volatility.smile.function.SmileModelData)>($r2);

        return $r3;
    }
}
