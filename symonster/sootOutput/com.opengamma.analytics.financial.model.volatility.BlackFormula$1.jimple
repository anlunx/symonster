class com.opengamma.analytics.financial.model.volatility.BlackFormula$1 extends com.opengamma.analytics.math.function.Function1D
{
    final com.opengamma.analytics.financial.model.volatility.BlackFormula val$black;
    final double val$fwdDelta;
    final boolean val$forCall;
    final com.opengamma.analytics.financial.model.volatility.BlackFormula this$0;

    void <init>(com.opengamma.analytics.financial.model.volatility.BlackFormula, com.opengamma.analytics.financial.model.volatility.BlackFormula, double, boolean)
    {
        com.opengamma.analytics.financial.model.volatility.BlackFormula$1 r0;
        com.opengamma.analytics.financial.model.volatility.BlackFormula r1, r2;
        double d0;
        boolean z0;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.BlackFormula$1;

        r1 := @parameter0: com.opengamma.analytics.financial.model.volatility.BlackFormula;

        r2 := @parameter1: com.opengamma.analytics.financial.model.volatility.BlackFormula;

        d0 := @parameter2: double;

        z0 := @parameter3: boolean;

        r0.<com.opengamma.analytics.financial.model.volatility.BlackFormula$1: com.opengamma.analytics.financial.model.volatility.BlackFormula this$0> = r1;

        r0.<com.opengamma.analytics.financial.model.volatility.BlackFormula$1: com.opengamma.analytics.financial.model.volatility.BlackFormula val$black> = r2;

        r0.<com.opengamma.analytics.financial.model.volatility.BlackFormula$1: double val$fwdDelta> = d0;

        r0.<com.opengamma.analytics.financial.model.volatility.BlackFormula$1: boolean val$forCall> = z0;

        specialinvoke r0.<com.opengamma.analytics.math.function.Function1D: void <init>()>();

        return;
    }

    public java.lang.Double evaluate(java.lang.Double)
    {
        com.opengamma.analytics.financial.model.volatility.BlackFormula$1 r0;
        java.lang.Double r1, $r4;
        double d0, $d1, $d2, $d3, $d4, $d6;
        com.opengamma.analytics.financial.model.volatility.BlackFormula $r2, $r3;
        boolean $z0;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.BlackFormula$1;

        r1 := @parameter0: java.lang.Double;

        $r2 = r0.<com.opengamma.analytics.financial.model.volatility.BlackFormula$1: com.opengamma.analytics.financial.model.volatility.BlackFormula val$black>;

        $d1 = virtualinvoke r1.<java.lang.Double: double doubleValue()>();

        virtualinvoke $r2.<com.opengamma.analytics.financial.model.volatility.BlackFormula: void setStrike(double)>($d1);

        $r3 = r0.<com.opengamma.analytics.financial.model.volatility.BlackFormula$1: com.opengamma.analytics.financial.model.volatility.BlackFormula val$black>;

        d0 = virtualinvoke $r3.<com.opengamma.analytics.financial.model.volatility.BlackFormula: double computeForwardDelta()>();

        $d2 = r0.<com.opengamma.analytics.financial.model.volatility.BlackFormula$1: double val$fwdDelta>;

        $z0 = r0.<com.opengamma.analytics.financial.model.volatility.BlackFormula$1: boolean val$forCall>;

        if $z0 == 0 goto label1;

        $d6 = 1.0;

        goto label2;

     label1:
        $d6 = -1.0;

     label2:
        $d3 = $d2 * $d6;

        $d4 = d0 - $d3;

        $r4 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d4);

        return $r4;
    }

    public volatile java.lang.Object evaluate(java.lang.Object)
    {
        com.opengamma.analytics.financial.model.volatility.BlackFormula$1 r0;
        java.lang.Object r1;
        java.lang.Double $r2, $r3;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.BlackFormula$1;

        r1 := @parameter0: java.lang.Object;

        $r2 = (java.lang.Double) r1;

        $r3 = virtualinvoke r0.<com.opengamma.analytics.financial.model.volatility.BlackFormula$1: java.lang.Double evaluate(java.lang.Double)>($r2);

        return $r3;
    }
}
