public class org.apache.commons.math.complex.ComplexFormat extends org.apache.commons.math.util.CompositeFormat
{
    private static final long serialVersionUID;
    private static final java.lang.String DEFAULT_IMAGINARY_CHARACTER;
    private java.lang.String imaginaryCharacter;
    private java.text.NumberFormat imaginaryFormat;
    private java.text.NumberFormat realFormat;

    public void <init>()
    {
        org.apache.commons.math.complex.ComplexFormat r0;
        java.text.NumberFormat $r1;

        r0 := @this: org.apache.commons.math.complex.ComplexFormat;

        $r1 = staticinvoke <org.apache.commons.math.complex.ComplexFormat: java.text.NumberFormat getDefaultNumberFormat()>();

        specialinvoke r0.<org.apache.commons.math.complex.ComplexFormat: void <init>(java.lang.String,java.text.NumberFormat)>("i", $r1);

        return;
    }

    public void <init>(java.text.NumberFormat)
    {
        org.apache.commons.math.complex.ComplexFormat r0;
        java.text.NumberFormat r1;

        r0 := @this: org.apache.commons.math.complex.ComplexFormat;

        r1 := @parameter0: java.text.NumberFormat;

        specialinvoke r0.<org.apache.commons.math.complex.ComplexFormat: void <init>(java.lang.String,java.text.NumberFormat)>("i", r1);

        return;
    }

    public void <init>(java.text.NumberFormat, java.text.NumberFormat)
    {
        org.apache.commons.math.complex.ComplexFormat r0;
        java.text.NumberFormat r1, r2;

        r0 := @this: org.apache.commons.math.complex.ComplexFormat;

        r1 := @parameter0: java.text.NumberFormat;

        r2 := @parameter1: java.text.NumberFormat;

        specialinvoke r0.<org.apache.commons.math.complex.ComplexFormat: void <init>(java.lang.String,java.text.NumberFormat,java.text.NumberFormat)>("i", r1, r2);

        return;
    }

    public void <init>(java.lang.String)
    {
        org.apache.commons.math.complex.ComplexFormat r0;
        java.lang.String r1;
        java.text.NumberFormat $r2;

        r0 := @this: org.apache.commons.math.complex.ComplexFormat;

        r1 := @parameter0: java.lang.String;

        $r2 = staticinvoke <org.apache.commons.math.complex.ComplexFormat: java.text.NumberFormat getDefaultNumberFormat()>();

        specialinvoke r0.<org.apache.commons.math.complex.ComplexFormat: void <init>(java.lang.String,java.text.NumberFormat)>(r1, $r2);

        return;
    }

    public void <init>(java.lang.String, java.text.NumberFormat)
    {
        org.apache.commons.math.complex.ComplexFormat r0;
        java.lang.String r1;
        java.text.NumberFormat r2, $r4;
        java.lang.Object $r3;

        r0 := @this: org.apache.commons.math.complex.ComplexFormat;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.text.NumberFormat;

        $r3 = virtualinvoke r2.<java.text.NumberFormat: java.lang.Object clone()>();

        $r4 = (java.text.NumberFormat) $r3;

        specialinvoke r0.<org.apache.commons.math.complex.ComplexFormat: void <init>(java.lang.String,java.text.NumberFormat,java.text.NumberFormat)>(r1, r2, $r4);

        return;
    }

    public void <init>(java.lang.String, java.text.NumberFormat, java.text.NumberFormat)
    {
        org.apache.commons.math.complex.ComplexFormat r0;
        java.lang.String r1;
        java.text.NumberFormat r2, r3;

        r0 := @this: org.apache.commons.math.complex.ComplexFormat;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.text.NumberFormat;

        r3 := @parameter2: java.text.NumberFormat;

        specialinvoke r0.<org.apache.commons.math.util.CompositeFormat: void <init>()>();

        virtualinvoke r0.<org.apache.commons.math.complex.ComplexFormat: void setImaginaryCharacter(java.lang.String)>(r1);

        virtualinvoke r0.<org.apache.commons.math.complex.ComplexFormat: void setImaginaryFormat(java.text.NumberFormat)>(r3);

        virtualinvoke r0.<org.apache.commons.math.complex.ComplexFormat: void setRealFormat(java.text.NumberFormat)>(r2);

        return;
    }

    public static java.util.Locale[] getAvailableLocales()
    {
        java.util.Locale[] $r0;

        $r0 = staticinvoke <java.text.NumberFormat: java.util.Locale[] getAvailableLocales()>();

        return $r0;
    }

    public static java.lang.String formatComplex(org.apache.commons.math.complex.Complex)
    {
        org.apache.commons.math.complex.Complex r0;
        org.apache.commons.math.complex.ComplexFormat $r1;
        java.lang.String $r2;

        r0 := @parameter0: org.apache.commons.math.complex.Complex;

        $r1 = staticinvoke <org.apache.commons.math.complex.ComplexFormat: org.apache.commons.math.complex.ComplexFormat getInstance()>();

        $r2 = virtualinvoke $r1.<org.apache.commons.math.complex.ComplexFormat: java.lang.String format(java.lang.Object)>(r0);

        return $r2;
    }

    public java.lang.StringBuffer format(org.apache.commons.math.complex.Complex, java.lang.StringBuffer, java.text.FieldPosition)
    {
        org.apache.commons.math.complex.ComplexFormat r0;
        org.apache.commons.math.complex.Complex r1;
        java.lang.StringBuffer r2;
        java.text.FieldPosition r3;
        double d0, d1, $d2;
        java.text.NumberFormat $r4, $r7, $r12;
        byte $b0, $b1;
        java.lang.String $r9, $r14;
        boolean $z0;

        r0 := @this: org.apache.commons.math.complex.ComplexFormat;

        r1 := @parameter0: org.apache.commons.math.complex.Complex;

        r2 := @parameter1: java.lang.StringBuffer;

        r3 := @parameter2: java.text.FieldPosition;

        virtualinvoke r3.<java.text.FieldPosition: void setBeginIndex(int)>(0);

        virtualinvoke r3.<java.text.FieldPosition: void setEndIndex(int)>(0);

        d0 = virtualinvoke r1.<org.apache.commons.math.complex.Complex: double getReal()>();

        $r4 = virtualinvoke r0.<org.apache.commons.math.complex.ComplexFormat: java.text.NumberFormat getRealFormat()>();

        virtualinvoke r0.<org.apache.commons.math.complex.ComplexFormat: java.lang.StringBuffer formatDouble(double,java.text.NumberFormat,java.lang.StringBuffer,java.text.FieldPosition)>(d0, $r4, r2, r3);

        d1 = virtualinvoke r1.<org.apache.commons.math.complex.Complex: double getImaginary()>();

        $b0 = d1 cmpg 0.0;

        if $b0 >= 0 goto label1;

        virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" - ");

        $d2 = neg d1;

        $r12 = virtualinvoke r0.<org.apache.commons.math.complex.ComplexFormat: java.text.NumberFormat getImaginaryFormat()>();

        virtualinvoke r0.<org.apache.commons.math.complex.ComplexFormat: java.lang.StringBuffer formatDouble(double,java.text.NumberFormat,java.lang.StringBuffer,java.text.FieldPosition)>($d2, $r12, r2, r3);

        $r14 = virtualinvoke r0.<org.apache.commons.math.complex.ComplexFormat: java.lang.String getImaginaryCharacter()>();

        virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r14);

        goto label3;

     label1:
        $b1 = d1 cmpl 0.0;

        if $b1 > 0 goto label2;

        $z0 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d1);

        if $z0 == 0 goto label3;

     label2:
        virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" + ");

        $r7 = virtualinvoke r0.<org.apache.commons.math.complex.ComplexFormat: java.text.NumberFormat getImaginaryFormat()>();

        virtualinvoke r0.<org.apache.commons.math.complex.ComplexFormat: java.lang.StringBuffer formatDouble(double,java.text.NumberFormat,java.lang.StringBuffer,java.text.FieldPosition)>(d1, $r7, r2, r3);

        $r9 = virtualinvoke r0.<org.apache.commons.math.complex.ComplexFormat: java.lang.String getImaginaryCharacter()>();

        virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r9);

     label3:
        return r2;
    }

    public java.lang.StringBuffer format(java.lang.Object, java.lang.StringBuffer, java.text.FieldPosition)
    {
        org.apache.commons.math.complex.ComplexFormat r0;
        java.lang.Object r1;
        java.lang.StringBuffer r2, r12;
        java.text.FieldPosition r3;
        boolean $z0, $z1;
        java.lang.Object[] $r4;
        org.apache.commons.math.exception.util.LocalizedFormats $r5;
        java.lang.Class $r6;
        java.lang.String $r7;
        java.lang.IllegalArgumentException $r8;
        org.apache.commons.math.complex.Complex $r9, $r11;
        java.lang.Number $r10;
        double $d0;

        r0 := @this: org.apache.commons.math.complex.ComplexFormat;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.StringBuffer;

        r3 := @parameter2: java.text.FieldPosition;

        $z0 = r1 instanceof org.apache.commons.math.complex.Complex;

        if $z0 == 0 goto label1;

        $r11 = (org.apache.commons.math.complex.Complex) r1;

        r12 = virtualinvoke r0.<org.apache.commons.math.complex.ComplexFormat: java.lang.StringBuffer format(org.apache.commons.math.complex.Complex,java.lang.StringBuffer,java.text.FieldPosition)>($r11, r2, r3);

        goto label3;

     label1:
        $z1 = r1 instanceof java.lang.Number;

        if $z1 == 0 goto label2;

        $r9 = new org.apache.commons.math.complex.Complex;

        $r10 = (java.lang.Number) r1;

        $d0 = virtualinvoke $r10.<java.lang.Number: double doubleValue()>();

        specialinvoke $r9.<org.apache.commons.math.complex.Complex: void <init>(double,double)>($d0, 0.0);

        r12 = virtualinvoke r0.<org.apache.commons.math.complex.ComplexFormat: java.lang.StringBuffer format(org.apache.commons.math.complex.Complex,java.lang.StringBuffer,java.text.FieldPosition)>($r9, r2, r3);

        goto label3;

     label2:
        $r5 = <org.apache.commons.math.exception.util.LocalizedFormats: org.apache.commons.math.exception.util.LocalizedFormats CANNOT_FORMAT_INSTANCE_AS_COMPLEX>;

        $r4 = newarray (java.lang.Object)[1];

        $r6 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        $r7 = virtualinvoke $r6.<java.lang.Class: java.lang.String getName()>();

        $r4[0] = $r7;

        $r8 = staticinvoke <org.apache.commons.math.MathRuntimeException: java.lang.IllegalArgumentException createIllegalArgumentException(org.apache.commons.math.exception.util.Localizable,java.lang.Object[])>($r5, $r4);

        throw $r8;

     label3:
        return r12;
    }

    public java.lang.String getImaginaryCharacter()
    {
        org.apache.commons.math.complex.ComplexFormat r0;
        java.lang.String $r1;

        r0 := @this: org.apache.commons.math.complex.ComplexFormat;

        $r1 = r0.<org.apache.commons.math.complex.ComplexFormat: java.lang.String imaginaryCharacter>;

        return $r1;
    }

    public java.text.NumberFormat getImaginaryFormat()
    {
        org.apache.commons.math.complex.ComplexFormat r0;
        java.text.NumberFormat $r1;

        r0 := @this: org.apache.commons.math.complex.ComplexFormat;

        $r1 = r0.<org.apache.commons.math.complex.ComplexFormat: java.text.NumberFormat imaginaryFormat>;

        return $r1;
    }

    public static org.apache.commons.math.complex.ComplexFormat getInstance()
    {
        java.util.Locale $r0;
        org.apache.commons.math.complex.ComplexFormat $r1;

        $r0 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>();

        $r1 = staticinvoke <org.apache.commons.math.complex.ComplexFormat: org.apache.commons.math.complex.ComplexFormat getInstance(java.util.Locale)>($r0);

        return $r1;
    }

    public static org.apache.commons.math.complex.ComplexFormat getInstance(java.util.Locale)
    {
        java.util.Locale r0;
        java.text.NumberFormat r1;
        org.apache.commons.math.complex.ComplexFormat $r2;

        r0 := @parameter0: java.util.Locale;

        r1 = staticinvoke <org.apache.commons.math.complex.ComplexFormat: java.text.NumberFormat getDefaultNumberFormat(java.util.Locale)>(r0);

        $r2 = new org.apache.commons.math.complex.ComplexFormat;

        specialinvoke $r2.<org.apache.commons.math.complex.ComplexFormat: void <init>(java.text.NumberFormat)>(r1);

        return $r2;
    }

    public java.text.NumberFormat getRealFormat()
    {
        org.apache.commons.math.complex.ComplexFormat r0;
        java.text.NumberFormat $r1;

        r0 := @this: org.apache.commons.math.complex.ComplexFormat;

        $r1 = r0.<org.apache.commons.math.complex.ComplexFormat: java.text.NumberFormat realFormat>;

        return $r1;
    }

    public org.apache.commons.math.complex.Complex parse(java.lang.String) throws java.text.ParseException
    {
        org.apache.commons.math.complex.ComplexFormat r0;
        java.lang.String r1;
        org.apache.commons.math.complex.Complex r3;
        java.text.ParsePosition $r4;
        int $i0, $i1;
        java.lang.Object[] $r5;
        org.apache.commons.math.exception.util.LocalizedFormats $r6;
        java.text.ParseException $r7;

        r0 := @this: org.apache.commons.math.complex.ComplexFormat;

        r1 := @parameter0: java.lang.String;

        $r4 = new java.text.ParsePosition;

        specialinvoke $r4.<java.text.ParsePosition: void <init>(int)>(0);

        r3 = virtualinvoke r0.<org.apache.commons.math.complex.ComplexFormat: org.apache.commons.math.complex.Complex parse(java.lang.String,java.text.ParsePosition)>(r1, $r4);

        $i0 = virtualinvoke $r4.<java.text.ParsePosition: int getIndex()>();

        if $i0 != 0 goto label1;

        $i1 = virtualinvoke $r4.<java.text.ParsePosition: int getErrorIndex()>();

        $r6 = <org.apache.commons.math.exception.util.LocalizedFormats: org.apache.commons.math.exception.util.LocalizedFormats UNPARSEABLE_COMPLEX_NUMBER>;

        $r5 = newarray (java.lang.Object)[1];

        $r5[0] = r1;

        $r7 = staticinvoke <org.apache.commons.math.MathRuntimeException: java.text.ParseException createParseException(int,org.apache.commons.math.exception.util.Localizable,java.lang.Object[])>($i1, $r6, $r5);

        throw $r7;

     label1:
        return r3;
    }

    public org.apache.commons.math.complex.Complex parse(java.lang.String, java.text.ParsePosition)
    {
        org.apache.commons.math.complex.ComplexFormat r0;
        java.lang.String r1, $r7;
        java.text.ParsePosition r2;
        int i0, i1;
        java.lang.Number r3, r4;
        char c2;
        java.text.NumberFormat $r5, $r6;
        boolean $z0;
        org.apache.commons.math.complex.Complex $r8, $r9;
        double $d0, $d1, $d2, $d3, $d4;
        byte b3;

        r0 := @this: org.apache.commons.math.complex.ComplexFormat;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.text.ParsePosition;

        i0 = virtualinvoke r2.<java.text.ParsePosition: int getIndex()>();

        virtualinvoke r0.<org.apache.commons.math.complex.ComplexFormat: void parseAndIgnoreWhitespace(java.lang.String,java.text.ParsePosition)>(r1, r2);

        $r5 = virtualinvoke r0.<org.apache.commons.math.complex.ComplexFormat: java.text.NumberFormat getRealFormat()>();

        r3 = virtualinvoke r0.<org.apache.commons.math.complex.ComplexFormat: java.lang.Number parseNumber(java.lang.String,java.text.NumberFormat,java.text.ParsePosition)>(r1, $r5, r2);

        if r3 != null goto label1;

        virtualinvoke r2.<java.text.ParsePosition: void setIndex(int)>(i0);

        return null;

     label1:
        i1 = virtualinvoke r2.<java.text.ParsePosition: int getIndex()>();

        c2 = virtualinvoke r0.<org.apache.commons.math.complex.ComplexFormat: char parseNextCharacter(java.lang.String,java.text.ParsePosition)>(r1, r2);

        lookupswitch(c2)
        {
            case 0: goto label2;
            case 43: goto label4;
            case 45: goto label3;
            default: goto label5;
        };

     label2:
        $r9 = new org.apache.commons.math.complex.Complex;

        $d4 = virtualinvoke r3.<java.lang.Number: double doubleValue()>();

        specialinvoke $r9.<org.apache.commons.math.complex.Complex: void <init>(double,double)>($d4, 0.0);

        return $r9;

     label3:
        b3 = -1;

        goto label6;

     label4:
        b3 = 1;

        goto label6;

     label5:
        virtualinvoke r2.<java.text.ParsePosition: void setIndex(int)>(i0);

        virtualinvoke r2.<java.text.ParsePosition: void setErrorIndex(int)>(i1);

        return null;

     label6:
        virtualinvoke r0.<org.apache.commons.math.complex.ComplexFormat: void parseAndIgnoreWhitespace(java.lang.String,java.text.ParsePosition)>(r1, r2);

        $r6 = virtualinvoke r0.<org.apache.commons.math.complex.ComplexFormat: java.text.NumberFormat getRealFormat()>();

        r4 = virtualinvoke r0.<org.apache.commons.math.complex.ComplexFormat: java.lang.Number parseNumber(java.lang.String,java.text.NumberFormat,java.text.ParsePosition)>(r1, $r6, r2);

        if r4 != null goto label7;

        virtualinvoke r2.<java.text.ParsePosition: void setIndex(int)>(i0);

        return null;

     label7:
        $r7 = virtualinvoke r0.<org.apache.commons.math.complex.ComplexFormat: java.lang.String getImaginaryCharacter()>();

        $z0 = virtualinvoke r0.<org.apache.commons.math.complex.ComplexFormat: boolean parseFixedstring(java.lang.String,java.lang.String,java.text.ParsePosition)>(r1, $r7, r2);

        if $z0 != 0 goto label8;

        return null;

     label8:
        $r8 = new org.apache.commons.math.complex.Complex;

        $d0 = virtualinvoke r3.<java.lang.Number: double doubleValue()>();

        $d1 = virtualinvoke r4.<java.lang.Number: double doubleValue()>();

        $d2 = (double) b3;

        $d3 = $d1 * $d2;

        specialinvoke $r8.<org.apache.commons.math.complex.Complex: void <init>(double,double)>($d0, $d3);

        return $r8;
    }

    public java.lang.Object parseObject(java.lang.String, java.text.ParsePosition)
    {
        org.apache.commons.math.complex.ComplexFormat r0;
        java.lang.String r1;
        java.text.ParsePosition r2;
        org.apache.commons.math.complex.Complex $r3;

        r0 := @this: org.apache.commons.math.complex.ComplexFormat;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.text.ParsePosition;

        $r3 = virtualinvoke r0.<org.apache.commons.math.complex.ComplexFormat: org.apache.commons.math.complex.Complex parse(java.lang.String,java.text.ParsePosition)>(r1, r2);

        return $r3;
    }

    public void setImaginaryCharacter(java.lang.String)
    {
        org.apache.commons.math.complex.ComplexFormat r0;
        java.lang.String r1;
        java.lang.Object[] $r2;
        org.apache.commons.math.exception.util.LocalizedFormats $r3;
        java.lang.IllegalArgumentException $r4;
        int $i0;

        r0 := @this: org.apache.commons.math.complex.ComplexFormat;

        r1 := @parameter0: java.lang.String;

        if r1 == null goto label1;

        $i0 = virtualinvoke r1.<java.lang.String: int length()>();

        if $i0 != 0 goto label2;

     label1:
        $r3 = <org.apache.commons.math.exception.util.LocalizedFormats: org.apache.commons.math.exception.util.LocalizedFormats EMPTY_STRING_FOR_IMAGINARY_CHARACTER>;

        $r2 = newarray (java.lang.Object)[0];

        $r4 = staticinvoke <org.apache.commons.math.MathRuntimeException: java.lang.IllegalArgumentException createIllegalArgumentException(org.apache.commons.math.exception.util.Localizable,java.lang.Object[])>($r3, $r2);

        throw $r4;

     label2:
        r0.<org.apache.commons.math.complex.ComplexFormat: java.lang.String imaginaryCharacter> = r1;

        return;
    }

    public void setImaginaryFormat(java.text.NumberFormat)
    {
        org.apache.commons.math.complex.ComplexFormat r0;
        java.text.NumberFormat r1;
        org.apache.commons.math.exception.NullArgumentException $r2;
        org.apache.commons.math.exception.util.LocalizedFormats $r3;

        r0 := @this: org.apache.commons.math.complex.ComplexFormat;

        r1 := @parameter0: java.text.NumberFormat;

        if r1 != null goto label1;

        $r2 = new org.apache.commons.math.exception.NullArgumentException;

        $r3 = <org.apache.commons.math.exception.util.LocalizedFormats: org.apache.commons.math.exception.util.LocalizedFormats IMAGINARY_FORMAT>;

        specialinvoke $r2.<org.apache.commons.math.exception.NullArgumentException: void <init>(org.apache.commons.math.exception.util.Localizable)>($r3);

        throw $r2;

     label1:
        r0.<org.apache.commons.math.complex.ComplexFormat: java.text.NumberFormat imaginaryFormat> = r1;

        return;
    }

    public void setRealFormat(java.text.NumberFormat)
    {
        org.apache.commons.math.complex.ComplexFormat r0;
        java.text.NumberFormat r1;
        org.apache.commons.math.exception.NullArgumentException $r2;
        org.apache.commons.math.exception.util.LocalizedFormats $r3;

        r0 := @this: org.apache.commons.math.complex.ComplexFormat;

        r1 := @parameter0: java.text.NumberFormat;

        if r1 != null goto label1;

        $r2 = new org.apache.commons.math.exception.NullArgumentException;

        $r3 = <org.apache.commons.math.exception.util.LocalizedFormats: org.apache.commons.math.exception.util.LocalizedFormats REAL_FORMAT>;

        specialinvoke $r2.<org.apache.commons.math.exception.NullArgumentException: void <init>(org.apache.commons.math.exception.util.Localizable)>($r3);

        throw $r2;

     label1:
        r0.<org.apache.commons.math.complex.ComplexFormat: java.text.NumberFormat realFormat> = r1;

        return;
    }

    public static void <clinit>()
    {
        <org.apache.commons.math.complex.ComplexFormat: java.lang.String DEFAULT_IMAGINARY_CHARACTER> = "i";

        <org.apache.commons.math.complex.ComplexFormat: long serialVersionUID> = -3343698360149467646L;

        return;
    }
}
