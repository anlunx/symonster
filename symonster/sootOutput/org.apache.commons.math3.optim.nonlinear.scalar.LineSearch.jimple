public class org.apache.commons.math3.optim.nonlinear.scalar.LineSearch extends java.lang.Object
{
    private static final double REL_TOL_UNUSED;
    private static final double ABS_TOL_UNUSED;
    private final org.apache.commons.math3.optim.univariate.UnivariateOptimizer lineOptimizer;
    private final org.apache.commons.math3.optim.univariate.BracketFinder bracket;
    private final double initialBracketingRange;
    private final org.apache.commons.math3.optim.nonlinear.scalar.MultivariateOptimizer mainOptimizer;

    public void <init>(org.apache.commons.math3.optim.nonlinear.scalar.MultivariateOptimizer, double, double, double)
    {
        org.apache.commons.math3.optim.nonlinear.scalar.LineSearch r0;
        org.apache.commons.math3.optim.nonlinear.scalar.MultivariateOptimizer r1;
        double d0, d1, d2;
        org.apache.commons.math3.optim.univariate.BracketFinder $r2;
        org.apache.commons.math3.optim.univariate.BrentOptimizer $r3;
        org.apache.commons.math3.optim.univariate.SimpleUnivariateValueChecker $r4;

        r0 := @this: org.apache.commons.math3.optim.nonlinear.scalar.LineSearch;

        r1 := @parameter0: org.apache.commons.math3.optim.nonlinear.scalar.MultivariateOptimizer;

        d0 := @parameter1: double;

        d1 := @parameter2: double;

        d2 := @parameter3: double;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new org.apache.commons.math3.optim.univariate.BracketFinder;

        specialinvoke $r2.<org.apache.commons.math3.optim.univariate.BracketFinder: void <init>()>();

        r0.<org.apache.commons.math3.optim.nonlinear.scalar.LineSearch: org.apache.commons.math3.optim.univariate.BracketFinder bracket> = $r2;

        r0.<org.apache.commons.math3.optim.nonlinear.scalar.LineSearch: org.apache.commons.math3.optim.nonlinear.scalar.MultivariateOptimizer mainOptimizer> = r1;

        $r3 = new org.apache.commons.math3.optim.univariate.BrentOptimizer;

        $r4 = new org.apache.commons.math3.optim.univariate.SimpleUnivariateValueChecker;

        specialinvoke $r4.<org.apache.commons.math3.optim.univariate.SimpleUnivariateValueChecker: void <init>(double,double)>(d0, d1);

        specialinvoke $r3.<org.apache.commons.math3.optim.univariate.BrentOptimizer: void <init>(double,double,org.apache.commons.math3.optim.ConvergenceChecker)>(1.0E-15, 4.9E-324, $r4);

        r0.<org.apache.commons.math3.optim.nonlinear.scalar.LineSearch: org.apache.commons.math3.optim.univariate.UnivariateOptimizer lineOptimizer> = $r3;

        r0.<org.apache.commons.math3.optim.nonlinear.scalar.LineSearch: double initialBracketingRange> = d2;

        return;
    }

    public org.apache.commons.math3.optim.univariate.UnivariatePointValuePair search(double[], double[])
    {
        org.apache.commons.math3.optim.nonlinear.scalar.LineSearch r0;
        double[] r1, r2;
        int i0;
        org.apache.commons.math3.optim.nonlinear.scalar.GoalType r4;
        org.apache.commons.math3.optim.nonlinear.scalar.LineSearch$1 $r5;
        org.apache.commons.math3.optim.nonlinear.scalar.MultivariateOptimizer $r6;
        double $d0, $d1, $d2, $d3;
        org.apache.commons.math3.optim.univariate.BracketFinder $r7, $r13, $r14, $r15;
        org.apache.commons.math3.optim.OptimizationData[] $r8;
        org.apache.commons.math3.optim.MaxEval $r9;
        org.apache.commons.math3.optim.univariate.UnivariateOptimizer $r10;
        org.apache.commons.math3.optim.univariate.UnivariateObjectiveFunction $r11;
        org.apache.commons.math3.optim.univariate.SearchInterval $r12;
        org.apache.commons.math3.optim.univariate.UnivariatePointValuePair $r16;

        r0 := @this: org.apache.commons.math3.optim.nonlinear.scalar.LineSearch;

        r1 := @parameter0: double[];

        r2 := @parameter1: double[];

        i0 = lengthof r1;

        $r5 = new org.apache.commons.math3.optim.nonlinear.scalar.LineSearch$1;

        specialinvoke $r5.<org.apache.commons.math3.optim.nonlinear.scalar.LineSearch$1: void <init>(org.apache.commons.math3.optim.nonlinear.scalar.LineSearch,int,double[],double[])>(r0, i0, r1, r2);

        $r6 = r0.<org.apache.commons.math3.optim.nonlinear.scalar.LineSearch: org.apache.commons.math3.optim.nonlinear.scalar.MultivariateOptimizer mainOptimizer>;

        r4 = virtualinvoke $r6.<org.apache.commons.math3.optim.nonlinear.scalar.MultivariateOptimizer: org.apache.commons.math3.optim.nonlinear.scalar.GoalType getGoalType()>();

        $r7 = r0.<org.apache.commons.math3.optim.nonlinear.scalar.LineSearch: org.apache.commons.math3.optim.univariate.BracketFinder bracket>;

        $d0 = r0.<org.apache.commons.math3.optim.nonlinear.scalar.LineSearch: double initialBracketingRange>;

        virtualinvoke $r7.<org.apache.commons.math3.optim.univariate.BracketFinder: void search(org.apache.commons.math3.analysis.UnivariateFunction,org.apache.commons.math3.optim.nonlinear.scalar.GoalType,double,double)>($r5, r4, 0.0, $d0);

        $r10 = r0.<org.apache.commons.math3.optim.nonlinear.scalar.LineSearch: org.apache.commons.math3.optim.univariate.UnivariateOptimizer lineOptimizer>;

        $r8 = newarray (org.apache.commons.math3.optim.OptimizationData)[4];

        $r9 = new org.apache.commons.math3.optim.MaxEval;

        specialinvoke $r9.<org.apache.commons.math3.optim.MaxEval: void <init>(int)>(2147483647);

        $r8[0] = $r9;

        $r11 = new org.apache.commons.math3.optim.univariate.UnivariateObjectiveFunction;

        specialinvoke $r11.<org.apache.commons.math3.optim.univariate.UnivariateObjectiveFunction: void <init>(org.apache.commons.math3.analysis.UnivariateFunction)>($r5);

        $r8[1] = $r11;

        $r8[2] = r4;

        $r12 = new org.apache.commons.math3.optim.univariate.SearchInterval;

        $r13 = r0.<org.apache.commons.math3.optim.nonlinear.scalar.LineSearch: org.apache.commons.math3.optim.univariate.BracketFinder bracket>;

        $d1 = virtualinvoke $r13.<org.apache.commons.math3.optim.univariate.BracketFinder: double getLo()>();

        $r14 = r0.<org.apache.commons.math3.optim.nonlinear.scalar.LineSearch: org.apache.commons.math3.optim.univariate.BracketFinder bracket>;

        $d2 = virtualinvoke $r14.<org.apache.commons.math3.optim.univariate.BracketFinder: double getHi()>();

        $r15 = r0.<org.apache.commons.math3.optim.nonlinear.scalar.LineSearch: org.apache.commons.math3.optim.univariate.BracketFinder bracket>;

        $d3 = virtualinvoke $r15.<org.apache.commons.math3.optim.univariate.BracketFinder: double getMid()>();

        specialinvoke $r12.<org.apache.commons.math3.optim.univariate.SearchInterval: void <init>(double,double,double)>($d1, $d2, $d3);

        $r8[3] = $r12;

        $r16 = virtualinvoke $r10.<org.apache.commons.math3.optim.univariate.UnivariateOptimizer: org.apache.commons.math3.optim.univariate.UnivariatePointValuePair optimize(org.apache.commons.math3.optim.OptimizationData[])>($r8);

        return $r16;
    }

    static org.apache.commons.math3.optim.nonlinear.scalar.MultivariateOptimizer access$000(org.apache.commons.math3.optim.nonlinear.scalar.LineSearch)
    {
        org.apache.commons.math3.optim.nonlinear.scalar.LineSearch r0;
        org.apache.commons.math3.optim.nonlinear.scalar.MultivariateOptimizer $r1;

        r0 := @parameter0: org.apache.commons.math3.optim.nonlinear.scalar.LineSearch;

        $r1 = r0.<org.apache.commons.math3.optim.nonlinear.scalar.LineSearch: org.apache.commons.math3.optim.nonlinear.scalar.MultivariateOptimizer mainOptimizer>;

        return $r1;
    }

    public static void <clinit>()
    {
        <org.apache.commons.math3.optim.nonlinear.scalar.LineSearch: double ABS_TOL_UNUSED> = 4.9E-324;

        <org.apache.commons.math3.optim.nonlinear.scalar.LineSearch: double REL_TOL_UNUSED> = 1.0E-15;

        return;
    }
}
