public class com.opengamma.analytics.math.matrix.IdentityMatrix extends com.opengamma.analytics.math.matrix.DoubleMatrix2D
{
    private final int _size;

    public void <init>(int)
    {
        com.opengamma.analytics.math.matrix.IdentityMatrix r0;
        int i0, i1;
        double[][] $r1;
        double[] $r2;
        boolean $z0;

        r0 := @this: com.opengamma.analytics.math.matrix.IdentityMatrix;

        i0 := @parameter0: int;

        specialinvoke r0.<com.opengamma.analytics.math.matrix.DoubleMatrix2D: void <init>(int,int)>(i0, i0);

        if i0 <= 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z0, "size must be > 0");

        i1 = 0;

     label3:
        if i1 >= i0 goto label4;

        $r1 = virtualinvoke r0.<com.opengamma.analytics.math.matrix.IdentityMatrix: double[][] getData()>();

        $r2 = $r1[i1];

        $r2[i1] = 1.0;

        i1 = i1 + 1;

        goto label3;

     label4:
        r0.<com.opengamma.analytics.math.matrix.IdentityMatrix: int _size> = i0;

        return;
    }

    public int getNumberOfElements()
    {
        com.opengamma.analytics.math.matrix.IdentityMatrix r0;
        int $i0, $i1, $i2;

        r0 := @this: com.opengamma.analytics.math.matrix.IdentityMatrix;

        $i1 = r0.<com.opengamma.analytics.math.matrix.IdentityMatrix: int _size>;

        $i0 = r0.<com.opengamma.analytics.math.matrix.IdentityMatrix: int _size>;

        $i2 = $i1 * $i0;

        return $i2;
    }

    public transient java.lang.Double getEntry(int[])
    {
        com.opengamma.analytics.math.matrix.IdentityMatrix r0;
        int[] r1;
        int $i0, $i1, $i2;
        java.lang.Double $r2;
        boolean $z0;
        double $d0;

        r0 := @this: com.opengamma.analytics.math.matrix.IdentityMatrix;

        r1 := @parameter0: int[];

        $i0 = lengthof r1;

        if $i0 != 2 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z0, "pass only two indices");

        $i2 = r1[0];

        $i1 = r1[1];

        if $i2 != $i1 goto label3;

        $d0 = 1.0;

        goto label4;

     label3:
        $d0 = 0.0;

     label4:
        $r2 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        return $r2;
    }

    public int getSize()
    {
        com.opengamma.analytics.math.matrix.IdentityMatrix r0;
        int $i0;

        r0 := @this: com.opengamma.analytics.math.matrix.IdentityMatrix;

        $i0 = r0.<com.opengamma.analytics.math.matrix.IdentityMatrix: int _size>;

        return $i0;
    }

    public volatile java.lang.Object getEntry(int[])
    {
        com.opengamma.analytics.math.matrix.IdentityMatrix r0;
        int[] r1;
        java.lang.Double $r2;

        r0 := @this: com.opengamma.analytics.math.matrix.IdentityMatrix;

        r1 := @parameter0: int[];

        $r2 = virtualinvoke r0.<com.opengamma.analytics.math.matrix.IdentityMatrix: java.lang.Double getEntry(int[])>(r1);

        return $r2;
    }
}
