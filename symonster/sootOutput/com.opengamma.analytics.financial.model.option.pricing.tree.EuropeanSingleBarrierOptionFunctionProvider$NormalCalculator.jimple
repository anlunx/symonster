class com.opengamma.analytics.financial.model.option.pricing.tree.EuropeanSingleBarrierOptionFunctionProvider$NormalCalculator extends com.opengamma.analytics.financial.model.option.pricing.tree.EuropeanSingleBarrierOptionFunctionProvider$Calculator
{
    final com.opengamma.analytics.financial.model.option.pricing.tree.EuropeanSingleBarrierOptionFunctionProvider this$0;

    private void <init>(com.opengamma.analytics.financial.model.option.pricing.tree.EuropeanSingleBarrierOptionFunctionProvider)
    {
        com.opengamma.analytics.financial.model.option.pricing.tree.EuropeanSingleBarrierOptionFunctionProvider$NormalCalculator r0;
        com.opengamma.analytics.financial.model.option.pricing.tree.EuropeanSingleBarrierOptionFunctionProvider r1;

        r0 := @this: com.opengamma.analytics.financial.model.option.pricing.tree.EuropeanSingleBarrierOptionFunctionProvider$NormalCalculator;

        r1 := @parameter0: com.opengamma.analytics.financial.model.option.pricing.tree.EuropeanSingleBarrierOptionFunctionProvider;

        r0.<com.opengamma.analytics.financial.model.option.pricing.tree.EuropeanSingleBarrierOptionFunctionProvider$NormalCalculator: com.opengamma.analytics.financial.model.option.pricing.tree.EuropeanSingleBarrierOptionFunctionProvider this$0> = r1;

        specialinvoke r0.<com.opengamma.analytics.financial.model.option.pricing.tree.EuropeanSingleBarrierOptionFunctionProvider$Calculator: void <init>(com.opengamma.analytics.financial.model.option.pricing.tree.EuropeanSingleBarrierOptionFunctionProvider,com.opengamma.analytics.financial.model.option.pricing.tree.EuropeanSingleBarrierOptionFunctionProvider$1)>(r1, null);

        return;
    }

    public double[] payoffAtExpiryTrinomial(double, double, double)
    {
        com.opengamma.analytics.financial.model.option.pricing.tree.EuropeanSingleBarrierOptionFunctionProvider$NormalCalculator r0;
        double d0, d1, d2, d3, d4, $d5, $d6, $d7, $d8, d9, $d10;
        int i0, i1, $i2, $i3, $i4, i5;
        double[] r1;
        com.opengamma.analytics.financial.model.option.pricing.tree.EuropeanSingleBarrierOptionFunctionProvider $r2, $r3, $r4, $r5, $r6;
        com.opengamma.analytics.financial.model.option.pricing.tree.BarrierOptionFunctionProvider$CrossBarrierChecker $r7;
        boolean $z0;

        r0 := @this: com.opengamma.analytics.financial.model.option.pricing.tree.EuropeanSingleBarrierOptionFunctionProvider$NormalCalculator;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        d2 := @parameter2: double;

        $r2 = r0.<com.opengamma.analytics.financial.model.option.pricing.tree.EuropeanSingleBarrierOptionFunctionProvider$NormalCalculator: com.opengamma.analytics.financial.model.option.pricing.tree.EuropeanSingleBarrierOptionFunctionProvider this$0>;

        d3 = virtualinvoke $r2.<com.opengamma.analytics.financial.model.option.pricing.tree.EuropeanSingleBarrierOptionFunctionProvider: double getStrike()>();

        $r3 = r0.<com.opengamma.analytics.financial.model.option.pricing.tree.EuropeanSingleBarrierOptionFunctionProvider$NormalCalculator: com.opengamma.analytics.financial.model.option.pricing.tree.EuropeanSingleBarrierOptionFunctionProvider this$0>;

        i0 = virtualinvoke $r3.<com.opengamma.analytics.financial.model.option.pricing.tree.EuropeanSingleBarrierOptionFunctionProvider: int getNumberOfSteps()>();

        $r4 = r0.<com.opengamma.analytics.financial.model.option.pricing.tree.EuropeanSingleBarrierOptionFunctionProvider$NormalCalculator: com.opengamma.analytics.financial.model.option.pricing.tree.EuropeanSingleBarrierOptionFunctionProvider this$0>;

        $i2 = virtualinvoke $r4.<com.opengamma.analytics.financial.model.option.pricing.tree.EuropeanSingleBarrierOptionFunctionProvider: int getNumberOfSteps()>();

        $i3 = 2 * $i2;

        i1 = $i3 + 1;

        $r5 = r0.<com.opengamma.analytics.financial.model.option.pricing.tree.EuropeanSingleBarrierOptionFunctionProvider$NormalCalculator: com.opengamma.analytics.financial.model.option.pricing.tree.EuropeanSingleBarrierOptionFunctionProvider this$0>;

        d4 = virtualinvoke $r5.<com.opengamma.analytics.financial.model.option.pricing.tree.EuropeanSingleBarrierOptionFunctionProvider: double getSign()>();

        r1 = newarray (double)[i1];

        $d5 = (double) i0;

        $d6 = staticinvoke <java.lang.Math: double pow(double,double)>(d1, $d5);

        d9 = d0 * $d6;

        i5 = 0;

     label1:
        if i5 >= i1 goto label4;

        $i4 = i5;

        $r6 = r0.<com.opengamma.analytics.financial.model.option.pricing.tree.EuropeanSingleBarrierOptionFunctionProvider$NormalCalculator: com.opengamma.analytics.financial.model.option.pricing.tree.EuropeanSingleBarrierOptionFunctionProvider this$0>;

        $r7 = virtualinvoke $r6.<com.opengamma.analytics.financial.model.option.pricing.tree.EuropeanSingleBarrierOptionFunctionProvider: com.opengamma.analytics.financial.model.option.pricing.tree.BarrierOptionFunctionProvider$CrossBarrierChecker getChecker()>();

        $z0 = virtualinvoke $r7.<com.opengamma.analytics.financial.model.option.pricing.tree.BarrierOptionFunctionProvider$CrossBarrierChecker: boolean checkOut(double)>(d9);

        if $z0 == 0 goto label2;

        $d10 = 0.0;

        goto label3;

     label2:
        $d7 = d9 - d3;

        $d8 = d4 * $d7;

        $d10 = staticinvoke <java.lang.Math: double max(double,double)>($d8, 0.0);

     label3:
        r1[$i4] = $d10;

        d9 = d9 * d2;

        i5 = i5 + 1;

        goto label1;

     label4:
        return r1;
    }

    public double[] nextOptionValues(double, double, double, double, double[], double, double, double, double, int)
    {
        com.opengamma.analytics.financial.model.option.pricing.tree.EuropeanSingleBarrierOptionFunctionProvider$NormalCalculator r0;
        double d0, d1, d2, d3, d4, d5, d6, d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, d19, $d20;
        double[] r1, r2;
        int i0, i1, $i2, $i3, $i4, $i5, i6;
        com.opengamma.analytics.financial.model.option.pricing.tree.EuropeanSingleBarrierOptionFunctionProvider $r3;
        com.opengamma.analytics.financial.model.option.pricing.tree.BarrierOptionFunctionProvider$CrossBarrierChecker $r4;
        boolean $z0;

        r0 := @this: com.opengamma.analytics.financial.model.option.pricing.tree.EuropeanSingleBarrierOptionFunctionProvider$NormalCalculator;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        d2 := @parameter2: double;

        d3 := @parameter3: double;

        r1 := @parameter4: double[];

        d4 := @parameter5: double;

        d5 := @parameter6: double;

        d6 := @parameter7: double;

        d7 := @parameter8: double;

        i0 := @parameter9: int;

        $i2 = 2 * i0;

        i1 = $i2 + 1;

        r2 = newarray (double)[i1];

        $d8 = (double) i0;

        $d9 = staticinvoke <java.lang.Math: double pow(double,double)>(d6, $d8);

        d19 = d4 * $d9;

        i6 = 0;

     label1:
        if i6 >= i1 goto label4;

        $i5 = i6;

        $r3 = r0.<com.opengamma.analytics.financial.model.option.pricing.tree.EuropeanSingleBarrierOptionFunctionProvider$NormalCalculator: com.opengamma.analytics.financial.model.option.pricing.tree.EuropeanSingleBarrierOptionFunctionProvider this$0>;

        $r4 = virtualinvoke $r3.<com.opengamma.analytics.financial.model.option.pricing.tree.EuropeanSingleBarrierOptionFunctionProvider: com.opengamma.analytics.financial.model.option.pricing.tree.BarrierOptionFunctionProvider$CrossBarrierChecker getChecker()>();

        $d10 = d19 + d5;

        $z0 = virtualinvoke $r4.<com.opengamma.analytics.financial.model.option.pricing.tree.BarrierOptionFunctionProvider$CrossBarrierChecker: boolean checkOut(double)>($d10);

        if $z0 == 0 goto label2;

        $d20 = 0.0;

        goto label3;

     label2:
        $i3 = i6 + 2;

        $d11 = r1[$i3];

        $d14 = d1 * $d11;

        $i4 = i6 + 1;

        $d12 = r1[$i4];

        $d13 = d2 * $d12;

        $d17 = $d14 + $d13;

        $d15 = r1[i6];

        $d16 = d3 * $d15;

        $d18 = $d17 + $d16;

        $d20 = d0 * $d18;

     label3:
        r2[$i5] = $d20;

        d19 = d19 * d7;

        i6 = i6 + 1;

        goto label1;

     label4:
        return r2;
    }

    void <init>(com.opengamma.analytics.financial.model.option.pricing.tree.EuropeanSingleBarrierOptionFunctionProvider, com.opengamma.analytics.financial.model.option.pricing.tree.EuropeanSingleBarrierOptionFunctionProvider$1)
    {
        com.opengamma.analytics.financial.model.option.pricing.tree.EuropeanSingleBarrierOptionFunctionProvider$NormalCalculator r0;
        com.opengamma.analytics.financial.model.option.pricing.tree.EuropeanSingleBarrierOptionFunctionProvider r1;
        com.opengamma.analytics.financial.model.option.pricing.tree.EuropeanSingleBarrierOptionFunctionProvider$1 r2;

        r0 := @this: com.opengamma.analytics.financial.model.option.pricing.tree.EuropeanSingleBarrierOptionFunctionProvider$NormalCalculator;

        r1 := @parameter0: com.opengamma.analytics.financial.model.option.pricing.tree.EuropeanSingleBarrierOptionFunctionProvider;

        r2 := @parameter1: com.opengamma.analytics.financial.model.option.pricing.tree.EuropeanSingleBarrierOptionFunctionProvider$1;

        specialinvoke r0.<com.opengamma.analytics.financial.model.option.pricing.tree.EuropeanSingleBarrierOptionFunctionProvider$NormalCalculator: void <init>(com.opengamma.analytics.financial.model.option.pricing.tree.EuropeanSingleBarrierOptionFunctionProvider)>(r1);

        return;
    }
}
