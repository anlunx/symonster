public final class com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapStaticReplicationPricer extends java.lang.Object
{
    private static final com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapStaticReplication VAR_SWAP_CALCULATOR;
    private final com.opengamma.analytics.financial.model.volatility.surface.VolatilitySurfaceInterpolator _surfaceInterpolator;

    public static com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapStaticReplicationPricer$Builder builder()
    {
        com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapStaticReplicationPricer$Builder $r0;

        $r0 = new com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapStaticReplicationPricer$Builder;

        specialinvoke $r0.<com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapStaticReplicationPricer$Builder: void <init>()>();

        return $r0;
    }

    private void <init>(com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapStaticReplicationPricer$Builder)
    {
        com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapStaticReplicationPricer r0;
        com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapStaticReplicationPricer$Builder r1;
        com.opengamma.analytics.financial.model.volatility.surface.VolatilitySurfaceInterpolator $r2;
        com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.GeneralSmileInterpolator $r3;
        com.opengamma.analytics.math.interpolation.Interpolator1D $r4;
        boolean $z0, $z1, $z2;

        r0 := @this: com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapStaticReplicationPricer;

        r1 := @parameter0: com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapStaticReplicationPricer$Builder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new com.opengamma.analytics.financial.model.volatility.surface.VolatilitySurfaceInterpolator;

        $r3 = virtualinvoke r1.<com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapStaticReplicationPricer$Builder: com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.GeneralSmileInterpolator getSmileInterpolator()>();

        $r4 = virtualinvoke r1.<com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapStaticReplicationPricer$Builder: com.opengamma.analytics.math.interpolation.Interpolator1D getTimeInterpolator()>();

        $z0 = virtualinvoke r1.<com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapStaticReplicationPricer$Builder: boolean useLogTime()>();

        $z1 = virtualinvoke r1.<com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapStaticReplicationPricer$Builder: boolean useIntegratedVariance()>();

        $z2 = virtualinvoke r1.<com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapStaticReplicationPricer$Builder: boolean useLogValue()>();

        specialinvoke $r2.<com.opengamma.analytics.financial.model.volatility.surface.VolatilitySurfaceInterpolator: void <init>(com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.GeneralSmileInterpolator,com.opengamma.analytics.math.interpolation.Interpolator1D,boolean,boolean,boolean)>($r3, $r4, $z0, $z1, $z2);

        r0.<com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapStaticReplicationPricer: com.opengamma.analytics.financial.model.volatility.surface.VolatilitySurfaceInterpolator _surfaceInterpolator> = $r2;

        return;
    }

    public double priceFromOTMPrices(com.opengamma.analytics.financial.equity.variance.EquityVarianceSwap, double, com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve, com.opengamma.analytics.financial.equity.variance.pricing.AffineDividends, double[], double[][], double[][])
    {
        com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapStaticReplicationPricer r0;
        com.opengamma.analytics.financial.equity.variance.EquityVarianceSwap r1;
        double d0, d1, d2, $d3;
        com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve r2;
        com.opengamma.analytics.financial.equity.variance.pricing.AffineDividends r3;
        double[] r4, r8;
        double[][] r5, r6;
        com.opengamma.analytics.financial.model.volatility.surface.PureImpliedVolatilitySurface r7;
        com.opengamma.analytics.financial.model.volatility.surface.VolatilitySurfaceInterpolator $r10;
        com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapStaticReplication $r11;
        boolean $z0;

        r0 := @this: com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapStaticReplicationPricer;

        r1 := @parameter0: com.opengamma.analytics.financial.equity.variance.EquityVarianceSwap;

        d0 := @parameter1: double;

        r2 := @parameter2: com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve;

        r3 := @parameter3: com.opengamma.analytics.financial.equity.variance.pricing.AffineDividends;

        r4 := @parameter4: double[];

        r5 := @parameter5: double[][];

        r6 := @parameter6: double[][];

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "swap");

        $r10 = r0.<com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapStaticReplicationPricer: com.opengamma.analytics.financial.model.volatility.surface.VolatilitySurfaceInterpolator _surfaceInterpolator>;

        r7 = staticinvoke <com.opengamma.analytics.financial.equity.variance.pricing.EquityVolatilityToPureVolatilitySurfaceConverter: com.opengamma.analytics.financial.model.volatility.surface.PureImpliedVolatilitySurface getConvertedSurface(double,com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve,com.opengamma.analytics.financial.equity.variance.pricing.AffineDividends,double[],double[][],double[][],com.opengamma.analytics.financial.model.volatility.surface.VolatilitySurfaceInterpolator)>(d0, r2, r3, r4, r5, r6, $r10);

        d1 = virtualinvoke r1.<com.opengamma.analytics.financial.equity.variance.EquityVarianceSwap: double getTimeToSettlement()>();

        $r11 = <com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapStaticReplicationPricer: com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapStaticReplication VAR_SWAP_CALCULATOR>;

        r8 = virtualinvoke $r11.<com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapStaticReplication: double[] expectedVariance(double,com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve,com.opengamma.analytics.financial.equity.variance.pricing.AffineDividends,double,com.opengamma.analytics.financial.model.volatility.surface.PureImpliedVolatilitySurface)>(d0, r2, r3, d1, r7);

        $z0 = virtualinvoke r1.<com.opengamma.analytics.financial.equity.variance.EquityVarianceSwap: boolean correctForDividends()>();

        if $z0 == 0 goto label1;

        $d3 = r8[0];

        goto label2;

     label1:
        $d3 = r8[1];

     label2:
        d2 = $d3 / d1;

        return d2;
    }

    public double deltaWithStickyStrike(com.opengamma.analytics.financial.equity.variance.EquityVarianceSwap, double, com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve, com.opengamma.analytics.financial.equity.variance.pricing.AffineDividends, com.opengamma.analytics.financial.model.volatility.smile.fitting.sabr.SmileSurfaceDataBundle)
    {
        com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapStaticReplicationPricer r0;
        com.opengamma.analytics.financial.equity.variance.EquityVarianceSwap r1;
        double d0, d2, d3, d4, $d5, $d6, $d7, $d8;
        com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve r2;
        com.opengamma.analytics.financial.equity.variance.pricing.AffineDividends r3;
        com.opengamma.analytics.financial.model.volatility.smile.fitting.sabr.SmileSurfaceDataBundle r4;

        r0 := @this: com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapStaticReplicationPricer;

        r1 := @parameter0: com.opengamma.analytics.financial.equity.variance.EquityVarianceSwap;

        d0 := @parameter1: double;

        r2 := @parameter2: com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve;

        r3 := @parameter3: com.opengamma.analytics.financial.equity.variance.pricing.AffineDividends;

        r4 := @parameter4: com.opengamma.analytics.financial.model.volatility.smile.fitting.sabr.SmileSurfaceDataBundle;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "swap");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, "discount curve");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r3, "dividends");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r4, "market volatilities");

        $d5 = 1.00001 * d0;

        d2 = virtualinvoke r0.<com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapStaticReplicationPricer: double priceFromImpliedVols(com.opengamma.analytics.financial.equity.variance.EquityVarianceSwap,double,com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve,com.opengamma.analytics.financial.equity.variance.pricing.AffineDividends,com.opengamma.analytics.financial.model.volatility.smile.fitting.sabr.SmileSurfaceDataBundle)>(r1, $d5, r2, r3, r4);

        $d6 = 0.99999 * d0;

        d3 = virtualinvoke r0.<com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapStaticReplicationPricer: double priceFromImpliedVols(com.opengamma.analytics.financial.equity.variance.EquityVarianceSwap,double,com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve,com.opengamma.analytics.financial.equity.variance.pricing.AffineDividends,com.opengamma.analytics.financial.model.volatility.smile.fitting.sabr.SmileSurfaceDataBundle)>(r1, $d6, r2, r3, r4);

        $d7 = d2 - d3;

        $d8 = $d7 / 2.0;

        d4 = $d8 / 1.0E-5;

        return d4;
    }

    public double[][] bucketedVega(com.opengamma.analytics.financial.equity.variance.EquityVarianceSwap, double, com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve, com.opengamma.analytics.financial.equity.variance.pricing.AffineDividends, com.opengamma.analytics.financial.model.volatility.smile.fitting.sabr.SmileSurfaceDataBundle)
    {
        com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapStaticReplicationPricer r0;
        com.opengamma.analytics.financial.equity.variance.EquityVarianceSwap r1;
        double d0, d2, d3, $d4, $d5, $d6, $d7, $d8;
        com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve r2;
        com.opengamma.analytics.financial.equity.variance.pricing.AffineDividends r3;
        com.opengamma.analytics.financial.model.volatility.smile.fitting.sabr.SmileSurfaceDataBundle r4, r6, r7;
        int i0, i1, i2, i3;
        double[][] r5, $r8;
        double[] $r9, $r10, $r11;

        r0 := @this: com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapStaticReplicationPricer;

        r1 := @parameter0: com.opengamma.analytics.financial.equity.variance.EquityVarianceSwap;

        d0 := @parameter1: double;

        r2 := @parameter2: com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve;

        r3 := @parameter3: com.opengamma.analytics.financial.equity.variance.pricing.AffineDividends;

        r4 := @parameter4: com.opengamma.analytics.financial.model.volatility.smile.fitting.sabr.SmileSurfaceDataBundle;

        i0 = virtualinvoke r4.<com.opengamma.analytics.financial.model.volatility.smile.fitting.sabr.SmileSurfaceDataBundle: int getNumExpiries()>();

        r5 = newarray (double[])[i0];

        i2 = 0;

     label1:
        if i2 >= i0 goto label4;

        $r8 = virtualinvoke r4.<com.opengamma.analytics.financial.model.volatility.smile.fitting.sabr.SmileSurfaceDataBundle: double[][] getStrikes()>();

        $r9 = $r8[i2];

        i1 = lengthof $r9;

        $r10 = newarray (double)[i1];

        r5[i2] = $r10;

        i3 = 0;

     label2:
        if i3 >= i1 goto label3;

        r6 = virtualinvoke r4.<com.opengamma.analytics.financial.model.volatility.smile.fitting.sabr.SmileSurfaceDataBundle: com.opengamma.analytics.financial.model.volatility.smile.fitting.sabr.SmileSurfaceDataBundle withBumpedPoint(int,int,double)>(i2, i3, 1.0E-5);

        $d4 = virtualinvoke r0.<com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapStaticReplicationPricer: double priceFromImpliedVols(com.opengamma.analytics.financial.equity.variance.EquityVarianceSwap,double,com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve,com.opengamma.analytics.financial.equity.variance.pricing.AffineDividends,com.opengamma.analytics.financial.model.volatility.smile.fitting.sabr.SmileSurfaceDataBundle)>(r1, d0, r2, r3, r6);

        d2 = staticinvoke <java.lang.Math: double sqrt(double)>($d4);

        r7 = virtualinvoke r4.<com.opengamma.analytics.financial.model.volatility.smile.fitting.sabr.SmileSurfaceDataBundle: com.opengamma.analytics.financial.model.volatility.smile.fitting.sabr.SmileSurfaceDataBundle withBumpedPoint(int,int,double)>(i2, i3, -1.0E-5);

        $d5 = virtualinvoke r0.<com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapStaticReplicationPricer: double priceFromImpliedVols(com.opengamma.analytics.financial.equity.variance.EquityVarianceSwap,double,com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve,com.opengamma.analytics.financial.equity.variance.pricing.AffineDividends,com.opengamma.analytics.financial.model.volatility.smile.fitting.sabr.SmileSurfaceDataBundle)>(r1, d0, r2, r3, r7);

        d3 = staticinvoke <java.lang.Math: double sqrt(double)>($d5);

        $r11 = r5[i2];

        $d6 = d2 - d3;

        $d7 = $d6 / 2.0;

        $d8 = $d7 / 1.0E-5;

        $r11[i3] = $d8;

        i3 = i3 + 1;

        goto label2;

     label3:
        i2 = i2 + 1;

        goto label1;

     label4:
        return r5;
    }

    public double gammaWithStickyStrike(com.opengamma.analytics.financial.equity.variance.EquityVarianceSwap, double, com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve, com.opengamma.analytics.financial.equity.variance.pricing.AffineDividends, com.opengamma.analytics.financial.model.volatility.smile.fitting.sabr.SmileSurfaceDataBundle)
    {
        com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapStaticReplicationPricer r0;
        com.opengamma.analytics.financial.equity.variance.EquityVarianceSwap r1;
        double d0, d2, d3, d4, d5, $d6, $d7, $d8, $d9, $d10, $d11;
        com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve r2;
        com.opengamma.analytics.financial.equity.variance.pricing.AffineDividends r3;
        com.opengamma.analytics.financial.model.volatility.smile.fitting.sabr.SmileSurfaceDataBundle r4;

        r0 := @this: com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapStaticReplicationPricer;

        r1 := @parameter0: com.opengamma.analytics.financial.equity.variance.EquityVarianceSwap;

        d0 := @parameter1: double;

        r2 := @parameter2: com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve;

        r3 := @parameter3: com.opengamma.analytics.financial.equity.variance.pricing.AffineDividends;

        r4 := @parameter4: com.opengamma.analytics.financial.model.volatility.smile.fitting.sabr.SmileSurfaceDataBundle;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "swap");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, "discount curve");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r3, "dividends");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r4, "market volatilities");

        $d6 = 1.00001 * d0;

        d2 = virtualinvoke r0.<com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapStaticReplicationPricer: double priceFromImpliedVols(com.opengamma.analytics.financial.equity.variance.EquityVarianceSwap,double,com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve,com.opengamma.analytics.financial.equity.variance.pricing.AffineDividends,com.opengamma.analytics.financial.model.volatility.smile.fitting.sabr.SmileSurfaceDataBundle)>(r1, $d6, r2, r3, r4);

        d3 = virtualinvoke r0.<com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapStaticReplicationPricer: double priceFromImpliedVols(com.opengamma.analytics.financial.equity.variance.EquityVarianceSwap,double,com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve,com.opengamma.analytics.financial.equity.variance.pricing.AffineDividends,com.opengamma.analytics.financial.model.volatility.smile.fitting.sabr.SmileSurfaceDataBundle)>(r1, d0, r2, r3, r4);

        $d7 = 0.99999 * d0;

        d4 = virtualinvoke r0.<com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapStaticReplicationPricer: double priceFromImpliedVols(com.opengamma.analytics.financial.equity.variance.EquityVarianceSwap,double,com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve,com.opengamma.analytics.financial.equity.variance.pricing.AffineDividends,com.opengamma.analytics.financial.model.volatility.smile.fitting.sabr.SmileSurfaceDataBundle)>(r1, $d7, r2, r3, r4);

        $d9 = d2 + d4;

        $d8 = 2.0 * d3;

        $d10 = $d9 - $d8;

        $d11 = $d10 / 1.0E-5;

        d5 = $d11 / 1.0E-5;

        return d5;
    }

    public double priceFromImpliedVols(com.opengamma.analytics.financial.equity.variance.EquityVarianceSwap, double, com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve, com.opengamma.analytics.financial.equity.variance.pricing.AffineDividends, com.opengamma.analytics.financial.model.volatility.smile.fitting.sabr.SmileSurfaceDataBundle)
    {
        com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapStaticReplicationPricer r0;
        com.opengamma.analytics.financial.equity.variance.EquityVarianceSwap r1;
        double d0, d1, d2, $d3;
        com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve r2;
        com.opengamma.analytics.financial.equity.variance.pricing.AffineDividends r3;
        com.opengamma.analytics.financial.model.volatility.smile.fitting.sabr.SmileSurfaceDataBundle r4;
        com.opengamma.analytics.financial.model.volatility.surface.PureImpliedVolatilitySurface r5;
        double[] r6;
        com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapStaticReplication $r10;
        boolean $z0;

        r0 := @this: com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapStaticReplicationPricer;

        r1 := @parameter0: com.opengamma.analytics.financial.equity.variance.EquityVarianceSwap;

        d0 := @parameter1: double;

        r2 := @parameter2: com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve;

        r3 := @parameter3: com.opengamma.analytics.financial.equity.variance.pricing.AffineDividends;

        r4 := @parameter4: com.opengamma.analytics.financial.model.volatility.smile.fitting.sabr.SmileSurfaceDataBundle;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "swap");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, "discount curve");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r3, "dividends");

        r5 = specialinvoke r0.<com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapStaticReplicationPricer: com.opengamma.analytics.financial.model.volatility.surface.PureImpliedVolatilitySurface getPureImpliedVolFromMarket(double,com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve,com.opengamma.analytics.financial.equity.variance.pricing.AffineDividends,com.opengamma.analytics.financial.model.volatility.smile.fitting.sabr.SmileSurfaceDataBundle)>(d0, r2, r3, r4);

        d1 = virtualinvoke r1.<com.opengamma.analytics.financial.equity.variance.EquityVarianceSwap: double getTimeToSettlement()>();

        $r10 = <com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapStaticReplicationPricer: com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapStaticReplication VAR_SWAP_CALCULATOR>;

        r6 = virtualinvoke $r10.<com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapStaticReplication: double[] expectedVariance(double,com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve,com.opengamma.analytics.financial.equity.variance.pricing.AffineDividends,double,com.opengamma.analytics.financial.model.volatility.surface.PureImpliedVolatilitySurface)>(d0, r2, r3, d1, r5);

        $z0 = virtualinvoke r1.<com.opengamma.analytics.financial.equity.variance.EquityVarianceSwap: boolean correctForDividends()>();

        if $z0 == 0 goto label1;

        $d3 = r6[0];

        goto label2;

     label1:
        $d3 = r6[1];

     label2:
        d2 = $d3 / d1;

        return d2;
    }

    public double deltaWithStickyPureStrike(com.opengamma.analytics.financial.equity.variance.EquityVarianceSwap, double, com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve, com.opengamma.analytics.financial.equity.variance.pricing.AffineDividends, com.opengamma.analytics.financial.model.volatility.smile.fitting.sabr.SmileSurfaceDataBundle)
    {
        com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapStaticReplicationPricer r0;
        com.opengamma.analytics.financial.equity.variance.EquityVarianceSwap r1;
        double d0, d2, d3, d4, d5, $d6, $d7, $d8, $d9, $d10;
        com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve r2;
        com.opengamma.analytics.financial.equity.variance.pricing.AffineDividends r3;
        com.opengamma.analytics.financial.model.volatility.smile.fitting.sabr.SmileSurfaceDataBundle r4;
        com.opengamma.analytics.financial.model.volatility.surface.PureImpliedVolatilitySurface r5;
        boolean $z0;
        com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapStaticReplication $r10, $r12;
        double[] $r11, $r13;
        byte $b1;

        r0 := @this: com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapStaticReplicationPricer;

        r1 := @parameter0: com.opengamma.analytics.financial.equity.variance.EquityVarianceSwap;

        d0 := @parameter1: double;

        r2 := @parameter2: com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve;

        r3 := @parameter3: com.opengamma.analytics.financial.equity.variance.pricing.AffineDividends;

        r4 := @parameter4: com.opengamma.analytics.financial.model.volatility.smile.fitting.sabr.SmileSurfaceDataBundle;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "swap");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, "discount curve");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r3, "dividends");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r4, "market volatilities");

        r5 = specialinvoke r0.<com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapStaticReplicationPricer: com.opengamma.analytics.financial.model.volatility.surface.PureImpliedVolatilitySurface getPureImpliedVolFromMarket(double,com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve,com.opengamma.analytics.financial.equity.variance.pricing.AffineDividends,com.opengamma.analytics.financial.model.volatility.smile.fitting.sabr.SmileSurfaceDataBundle)>(d0, r2, r3, r4);

        $z0 = virtualinvoke r1.<com.opengamma.analytics.financial.equity.variance.EquityVarianceSwap: boolean correctForDividends()>();

        if $z0 == 0 goto label1;

        $b1 = 0;

        goto label2;

     label1:
        $b1 = 1;

     label2:
        d2 = virtualinvoke r1.<com.opengamma.analytics.financial.equity.variance.EquityVarianceSwap: double getTimeToSettlement()>();

        $r10 = <com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapStaticReplicationPricer: com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapStaticReplication VAR_SWAP_CALCULATOR>;

        $d6 = d0 * 1.00001;

        $r11 = virtualinvoke $r10.<com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapStaticReplication: double[] expectedVariance(double,com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve,com.opengamma.analytics.financial.equity.variance.pricing.AffineDividends,double,com.opengamma.analytics.financial.model.volatility.surface.PureImpliedVolatilitySurface)>($d6, r2, r3, d2, r5);

        d3 = $r11[$b1];

        $r12 = <com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapStaticReplicationPricer: com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapStaticReplication VAR_SWAP_CALCULATOR>;

        $d7 = d0 * 0.99999;

        $r13 = virtualinvoke $r12.<com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapStaticReplication: double[] expectedVariance(double,com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve,com.opengamma.analytics.financial.equity.variance.pricing.AffineDividends,double,com.opengamma.analytics.financial.model.volatility.surface.PureImpliedVolatilitySurface)>($d7, r2, r3, d2, r5);

        d4 = $r13[$b1];

        $d8 = d3 - d4;

        $d9 = $d8 / 2.0;

        $d10 = $d9 / 1.0E-5;

        d5 = $d10 / d2;

        return d5;
    }

    public double gammaWithStickyPureStrike(com.opengamma.analytics.financial.equity.variance.EquityVarianceSwap, double, com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve, com.opengamma.analytics.financial.equity.variance.pricing.AffineDividends, com.opengamma.analytics.financial.model.volatility.smile.fitting.sabr.SmileSurfaceDataBundle)
    {
        com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapStaticReplicationPricer r0;
        com.opengamma.analytics.financial.equity.variance.EquityVarianceSwap r1;
        double d0, d2, d3, d4, d5, d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13;
        com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve r2;
        com.opengamma.analytics.financial.equity.variance.pricing.AffineDividends r3;
        com.opengamma.analytics.financial.model.volatility.smile.fitting.sabr.SmileSurfaceDataBundle r4;
        com.opengamma.analytics.financial.model.volatility.surface.PureImpliedVolatilitySurface r5;
        boolean $z0;
        com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapStaticReplication $r10, $r12, $r14;
        double[] $r11, $r13, $r15;
        byte $b1;

        r0 := @this: com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapStaticReplicationPricer;

        r1 := @parameter0: com.opengamma.analytics.financial.equity.variance.EquityVarianceSwap;

        d0 := @parameter1: double;

        r2 := @parameter2: com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve;

        r3 := @parameter3: com.opengamma.analytics.financial.equity.variance.pricing.AffineDividends;

        r4 := @parameter4: com.opengamma.analytics.financial.model.volatility.smile.fitting.sabr.SmileSurfaceDataBundle;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "swap");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, "discount curve");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r3, "dividends");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r4, "market volatilities");

        r5 = specialinvoke r0.<com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapStaticReplicationPricer: com.opengamma.analytics.financial.model.volatility.surface.PureImpliedVolatilitySurface getPureImpliedVolFromMarket(double,com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve,com.opengamma.analytics.financial.equity.variance.pricing.AffineDividends,com.opengamma.analytics.financial.model.volatility.smile.fitting.sabr.SmileSurfaceDataBundle)>(d0, r2, r3, r4);

        $z0 = virtualinvoke r1.<com.opengamma.analytics.financial.equity.variance.EquityVarianceSwap: boolean correctForDividends()>();

        if $z0 == 0 goto label1;

        $b1 = 0;

        goto label2;

     label1:
        $b1 = 1;

     label2:
        d2 = virtualinvoke r1.<com.opengamma.analytics.financial.equity.variance.EquityVarianceSwap: double getTimeToSettlement()>();

        $r10 = <com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapStaticReplicationPricer: com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapStaticReplication VAR_SWAP_CALCULATOR>;

        $d7 = d0 * 1.00001;

        $r11 = virtualinvoke $r10.<com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapStaticReplication: double[] expectedVariance(double,com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve,com.opengamma.analytics.financial.equity.variance.pricing.AffineDividends,double,com.opengamma.analytics.financial.model.volatility.surface.PureImpliedVolatilitySurface)>($d7, r2, r3, d2, r5);

        d3 = $r11[$b1];

        $r12 = <com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapStaticReplicationPricer: com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapStaticReplication VAR_SWAP_CALCULATOR>;

        $r13 = virtualinvoke $r12.<com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapStaticReplication: double[] expectedVariance(double,com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve,com.opengamma.analytics.financial.equity.variance.pricing.AffineDividends,double,com.opengamma.analytics.financial.model.volatility.surface.PureImpliedVolatilitySurface)>(d0, r2, r3, d2, r5);

        d4 = $r13[$b1];

        $r14 = <com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapStaticReplicationPricer: com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapStaticReplication VAR_SWAP_CALCULATOR>;

        $d8 = d0 * 0.99999;

        $r15 = virtualinvoke $r14.<com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapStaticReplication: double[] expectedVariance(double,com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve,com.opengamma.analytics.financial.equity.variance.pricing.AffineDividends,double,com.opengamma.analytics.financial.model.volatility.surface.PureImpliedVolatilitySurface)>($d8, r2, r3, d2, r5);

        d5 = $r15[$b1];

        $d10 = d3 + d5;

        $d9 = 2.0 * d4;

        $d11 = $d10 - $d9;

        $d12 = $d11 / 1.0E-5;

        $d13 = $d12 / 1.0E-5;

        d6 = $d13 / d2;

        return d6;
    }

    public double vegaImpVol(com.opengamma.analytics.financial.equity.variance.EquityVarianceSwap, double, com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve, com.opengamma.analytics.financial.equity.variance.pricing.AffineDividends, com.opengamma.analytics.financial.model.volatility.smile.fitting.sabr.SmileSurfaceDataBundle)
    {
        com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapStaticReplicationPricer r0;
        com.opengamma.analytics.financial.equity.variance.EquityVarianceSwap r1;
        double d0, d2, d3, d4, d5, $d6, $d7, $d8, $d9, $d10, $d11;
        com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve r2;
        com.opengamma.analytics.financial.equity.variance.pricing.AffineDividends r3;
        com.opengamma.analytics.financial.model.volatility.smile.fitting.sabr.SmileSurfaceDataBundle r4;
        com.opengamma.analytics.financial.model.volatility.surface.PureImpliedVolatilitySurface r5;
        com.opengamma.analytics.financial.model.volatility.surface.BlackVolatilitySurfaceStrike r7, $r15, $r20;
        com.opengamma.analytics.financial.equity.variance.pricing.EquityDividendsCurvesBundle $r14;
        boolean $z0;
        com.opengamma.analytics.math.surface.Surface $r16, $r17, $r21, $r22;
        com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapStaticReplication $r18, $r23;
        double[] $r19, $r24;
        byte $b1;

        r0 := @this: com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapStaticReplicationPricer;

        r1 := @parameter0: com.opengamma.analytics.financial.equity.variance.EquityVarianceSwap;

        d0 := @parameter1: double;

        r2 := @parameter2: com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve;

        r3 := @parameter3: com.opengamma.analytics.financial.equity.variance.pricing.AffineDividends;

        r4 := @parameter4: com.opengamma.analytics.financial.model.volatility.smile.fitting.sabr.SmileSurfaceDataBundle;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "swap");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, "discount curve");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r3, "dividends");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r4, "market volatilities");

        r5 = specialinvoke r0.<com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapStaticReplicationPricer: com.opengamma.analytics.financial.model.volatility.surface.PureImpliedVolatilitySurface getPureImpliedVolFromMarket(double,com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve,com.opengamma.analytics.financial.equity.variance.pricing.AffineDividends,com.opengamma.analytics.financial.model.volatility.smile.fitting.sabr.SmileSurfaceDataBundle)>(d0, r2, r3, r4);

        $r14 = new com.opengamma.analytics.financial.equity.variance.pricing.EquityDividendsCurvesBundle;

        specialinvoke $r14.<com.opengamma.analytics.financial.equity.variance.pricing.EquityDividendsCurvesBundle: void <init>(double,com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve,com.opengamma.analytics.financial.equity.variance.pricing.AffineDividends)>(d0, r2, r3);

        r7 = staticinvoke <com.opengamma.analytics.financial.equity.variance.pricing.VolatilitySurfaceConverter: com.opengamma.analytics.financial.model.volatility.surface.BlackVolatilitySurfaceStrike convertImpliedVolSurface(com.opengamma.analytics.financial.model.volatility.surface.PureImpliedVolatilitySurface,com.opengamma.analytics.financial.equity.variance.pricing.EquityDividendsCurvesBundle)>(r5, $r14);

        $z0 = virtualinvoke r1.<com.opengamma.analytics.financial.equity.variance.EquityVarianceSwap: boolean correctForDividends()>();

        if $z0 == 0 goto label1;

        $b1 = 0;

        goto label2;

     label1:
        $b1 = 1;

     label2:
        d2 = virtualinvoke r1.<com.opengamma.analytics.financial.equity.variance.EquityVarianceSwap: double getTimeToSettlement()>();

        $r15 = new com.opengamma.analytics.financial.model.volatility.surface.BlackVolatilitySurfaceStrike;

        $r16 = virtualinvoke r7.<com.opengamma.analytics.financial.model.volatility.surface.BlackVolatilitySurfaceStrike: com.opengamma.analytics.math.surface.Surface getSurface()>();

        $r17 = staticinvoke <com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapStaticReplicationPricer: com.opengamma.analytics.math.surface.Surface flooredShiftSurface(com.opengamma.analytics.math.surface.Surface,double)>($r16, 1.0E-5);

        specialinvoke $r15.<com.opengamma.analytics.financial.model.volatility.surface.BlackVolatilitySurfaceStrike: void <init>(com.opengamma.analytics.math.surface.Surface)>($r17);

        $r18 = <com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapStaticReplicationPricer: com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapStaticReplication VAR_SWAP_CALCULATOR>;

        $r19 = virtualinvoke $r18.<com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapStaticReplication: double[] expectedVariance(double,com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve,com.opengamma.analytics.financial.equity.variance.pricing.AffineDividends,double,com.opengamma.analytics.financial.model.volatility.surface.BlackVolatilitySurfaceStrike)>(d0, r2, r3, d2, $r15);

        $d6 = $r19[$b1];

        $d7 = $d6 / d2;

        d3 = staticinvoke <java.lang.Math: double sqrt(double)>($d7);

        $r20 = new com.opengamma.analytics.financial.model.volatility.surface.BlackVolatilitySurfaceStrike;

        $r21 = virtualinvoke r7.<com.opengamma.analytics.financial.model.volatility.surface.BlackVolatilitySurfaceStrike: com.opengamma.analytics.math.surface.Surface getSurface()>();

        $r22 = staticinvoke <com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapStaticReplicationPricer: com.opengamma.analytics.math.surface.Surface flooredShiftSurface(com.opengamma.analytics.math.surface.Surface,double)>($r21, -1.0E-5);

        specialinvoke $r20.<com.opengamma.analytics.financial.model.volatility.surface.BlackVolatilitySurfaceStrike: void <init>(com.opengamma.analytics.math.surface.Surface)>($r22);

        $r23 = <com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapStaticReplicationPricer: com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapStaticReplication VAR_SWAP_CALCULATOR>;

        $r24 = virtualinvoke $r23.<com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapStaticReplication: double[] expectedVariance(double,com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve,com.opengamma.analytics.financial.equity.variance.pricing.AffineDividends,double,com.opengamma.analytics.financial.model.volatility.surface.BlackVolatilitySurfaceStrike)>(d0, r2, r3, d2, $r20);

        $d8 = $r24[$b1];

        $d9 = $d8 / d2;

        d4 = staticinvoke <java.lang.Math: double sqrt(double)>($d9);

        $d10 = d3 - d4;

        $d11 = $d10 / 2.0;

        d5 = $d11 / 1.0E-5;

        return d5;
    }

    public double vegaPureImpVol(com.opengamma.analytics.financial.equity.variance.EquityVarianceSwap, double, com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve, com.opengamma.analytics.financial.equity.variance.pricing.AffineDividends, com.opengamma.analytics.financial.model.volatility.smile.fitting.sabr.SmileSurfaceDataBundle)
    {
        com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapStaticReplicationPricer r0;
        com.opengamma.analytics.financial.equity.variance.EquityVarianceSwap r1;
        double d0, d2, d3, d4, d5, $d6, $d7, $d8, $d9, $d10, $d11;
        com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve r2;
        com.opengamma.analytics.financial.equity.variance.pricing.AffineDividends r3;
        com.opengamma.analytics.financial.model.volatility.smile.fitting.sabr.SmileSurfaceDataBundle r4;
        com.opengamma.analytics.financial.model.volatility.surface.PureImpliedVolatilitySurface r5, $r12, $r17;
        boolean $z0;
        com.opengamma.analytics.math.surface.Surface $r13, $r14, $r18, $r19;
        com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapStaticReplication $r15, $r20;
        double[] $r16, $r21;
        byte $b1;

        r0 := @this: com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapStaticReplicationPricer;

        r1 := @parameter0: com.opengamma.analytics.financial.equity.variance.EquityVarianceSwap;

        d0 := @parameter1: double;

        r2 := @parameter2: com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve;

        r3 := @parameter3: com.opengamma.analytics.financial.equity.variance.pricing.AffineDividends;

        r4 := @parameter4: com.opengamma.analytics.financial.model.volatility.smile.fitting.sabr.SmileSurfaceDataBundle;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "swap");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, "discount curve");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r3, "dividends");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r4, "market volatilities");

        r5 = specialinvoke r0.<com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapStaticReplicationPricer: com.opengamma.analytics.financial.model.volatility.surface.PureImpliedVolatilitySurface getPureImpliedVolFromMarket(double,com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve,com.opengamma.analytics.financial.equity.variance.pricing.AffineDividends,com.opengamma.analytics.financial.model.volatility.smile.fitting.sabr.SmileSurfaceDataBundle)>(d0, r2, r3, r4);

        $z0 = virtualinvoke r1.<com.opengamma.analytics.financial.equity.variance.EquityVarianceSwap: boolean correctForDividends()>();

        if $z0 == 0 goto label1;

        $b1 = 0;

        goto label2;

     label1:
        $b1 = 1;

     label2:
        d2 = virtualinvoke r1.<com.opengamma.analytics.financial.equity.variance.EquityVarianceSwap: double getTimeToSettlement()>();

        $r12 = new com.opengamma.analytics.financial.model.volatility.surface.PureImpliedVolatilitySurface;

        $r13 = virtualinvoke r5.<com.opengamma.analytics.financial.model.volatility.surface.PureImpliedVolatilitySurface: com.opengamma.analytics.math.surface.Surface getSurface()>();

        $r14 = staticinvoke <com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapStaticReplicationPricer: com.opengamma.analytics.math.surface.Surface flooredShiftSurface(com.opengamma.analytics.math.surface.Surface,double)>($r13, 1.0E-5);

        specialinvoke $r12.<com.opengamma.analytics.financial.model.volatility.surface.PureImpliedVolatilitySurface: void <init>(com.opengamma.analytics.math.surface.Surface)>($r14);

        $r15 = <com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapStaticReplicationPricer: com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapStaticReplication VAR_SWAP_CALCULATOR>;

        $r16 = virtualinvoke $r15.<com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapStaticReplication: double[] expectedVariance(double,com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve,com.opengamma.analytics.financial.equity.variance.pricing.AffineDividends,double,com.opengamma.analytics.financial.model.volatility.surface.PureImpliedVolatilitySurface)>(d0, r2, r3, d2, $r12);

        $d6 = $r16[$b1];

        $d7 = $d6 / d2;

        d3 = staticinvoke <java.lang.Math: double sqrt(double)>($d7);

        $r17 = new com.opengamma.analytics.financial.model.volatility.surface.PureImpliedVolatilitySurface;

        $r18 = virtualinvoke r5.<com.opengamma.analytics.financial.model.volatility.surface.PureImpliedVolatilitySurface: com.opengamma.analytics.math.surface.Surface getSurface()>();

        $r19 = staticinvoke <com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapStaticReplicationPricer: com.opengamma.analytics.math.surface.Surface flooredShiftSurface(com.opengamma.analytics.math.surface.Surface,double)>($r18, -1.0E-5);

        specialinvoke $r17.<com.opengamma.analytics.financial.model.volatility.surface.PureImpliedVolatilitySurface: void <init>(com.opengamma.analytics.math.surface.Surface)>($r19);

        $r20 = <com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapStaticReplicationPricer: com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapStaticReplication VAR_SWAP_CALCULATOR>;

        $r21 = virtualinvoke $r20.<com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapStaticReplication: double[] expectedVariance(double,com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve,com.opengamma.analytics.financial.equity.variance.pricing.AffineDividends,double,com.opengamma.analytics.financial.model.volatility.surface.PureImpliedVolatilitySurface)>(d0, r2, r3, d2, $r17);

        $d8 = $r21[$b1];

        $d9 = $d8 / d2;

        d4 = staticinvoke <java.lang.Math: double sqrt(double)>($d9);

        $d10 = d3 - d4;

        $d11 = $d10 / 2.0;

        d5 = $d11 / 1.0E-5;

        return d5;
    }

    public double deltaFromImpliedVols(com.opengamma.analytics.financial.equity.variance.EquityVarianceSwap, double, com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve, com.opengamma.analytics.financial.equity.variance.pricing.AffineDividends, com.opengamma.analytics.financial.model.volatility.smile.fitting.sabr.SmileSurfaceDataBundle)
    {
        com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapStaticReplicationPricer r0;
        com.opengamma.analytics.financial.equity.variance.EquityVarianceSwap r1;
        double d0, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15;
        com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve r2;
        com.opengamma.analytics.financial.equity.variance.pricing.AffineDividends r3;
        com.opengamma.analytics.financial.model.volatility.smile.fitting.sabr.SmileSurfaceDataBundle r4;
        com.opengamma.analytics.financial.model.volatility.surface.PureImpliedVolatilitySurface r5;
        double[] r6, r7;
        com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapStaticReplication $r12, $r13;
        boolean $z0;

        r0 := @this: com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapStaticReplicationPricer;

        r1 := @parameter0: com.opengamma.analytics.financial.equity.variance.EquityVarianceSwap;

        d0 := @parameter1: double;

        r2 := @parameter2: com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve;

        r3 := @parameter3: com.opengamma.analytics.financial.equity.variance.pricing.AffineDividends;

        r4 := @parameter4: com.opengamma.analytics.financial.model.volatility.smile.fitting.sabr.SmileSurfaceDataBundle;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "swap");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, "discount curve");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r3, "dividends");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r4, "market vols");

        r5 = specialinvoke r0.<com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapStaticReplicationPricer: com.opengamma.analytics.financial.model.volatility.surface.PureImpliedVolatilitySurface getPureImpliedVolFromMarket(double,com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve,com.opengamma.analytics.financial.equity.variance.pricing.AffineDividends,com.opengamma.analytics.financial.model.volatility.smile.fitting.sabr.SmileSurfaceDataBundle)>(d0, r2, r3, r4);

        $r12 = <com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapStaticReplicationPricer: com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapStaticReplication VAR_SWAP_CALCULATOR>;

        $d3 = 1.00001 * d0;

        $d4 = virtualinvoke r1.<com.opengamma.analytics.financial.equity.variance.EquityVarianceSwap: double getTimeToSettlement()>();

        r6 = virtualinvoke $r12.<com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapStaticReplication: double[] expectedVariance(double,com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve,com.opengamma.analytics.financial.equity.variance.pricing.AffineDividends,double,com.opengamma.analytics.financial.model.volatility.surface.PureImpliedVolatilitySurface)>($d3, r2, r3, $d4, r5);

        $r13 = <com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapStaticReplicationPricer: com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapStaticReplication VAR_SWAP_CALCULATOR>;

        $d5 = 0.99999 * d0;

        $d6 = virtualinvoke r1.<com.opengamma.analytics.financial.equity.variance.EquityVarianceSwap: double getTimeToSettlement()>();

        r7 = virtualinvoke $r13.<com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapStaticReplication: double[] expectedVariance(double,com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve,com.opengamma.analytics.financial.equity.variance.pricing.AffineDividends,double,com.opengamma.analytics.financial.model.volatility.surface.PureImpliedVolatilitySurface)>($d5, r2, r3, $d6, r5);

        $z0 = virtualinvoke r1.<com.opengamma.analytics.financial.equity.variance.EquityVarianceSwap: boolean correctForDividends()>();

        if $z0 == 0 goto label1;

        $d12 = r6[0];

        $d11 = r7[0];

        $d13 = $d12 - $d11;

        $d14 = $d13 / d0;

        $d15 = $d14 / 1.0E-5;

        goto label2;

     label1:
        $d8 = r6[1];

        $d7 = r7[1];

        $d9 = $d8 - $d7;

        $d10 = $d9 / d0;

        $d15 = $d10 / 1.0E-5;

     label2:
        return $d15;
    }

    public double[][] dividendSensitivityWithStickyPureVol(com.opengamma.analytics.financial.equity.variance.EquityVarianceSwap, double, com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve, com.opengamma.analytics.financial.equity.variance.pricing.AffineDividends, com.opengamma.analytics.financial.model.volatility.smile.fitting.sabr.SmileSurfaceDataBundle)
    {
        com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapStaticReplicationPricer r0;
        com.opengamma.analytics.financial.equity.variance.EquityVarianceSwap r1;
        double d0, d2, d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21, $d22, $d23, $d24, $d25, $d26, $d27, $d28, $d29, $d30, $d31, $d32, $d33, $d34, $d35, $d36, $d37, $d38, $d39, $d40, $d41, $d42, $d43;
        com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve r2;
        com.opengamma.analytics.financial.equity.variance.pricing.AffineDividends r3, r23, r25, r27, r29, r31, r33;
        com.opengamma.analytics.financial.model.volatility.smile.fitting.sabr.SmileSurfaceDataBundle r4;
        byte b0, $b2, $b3, $b4;
        com.opengamma.analytics.financial.model.volatility.surface.PureImpliedVolatilitySurface r5;
        int i1, i5;
        double[][] r6;
        boolean $z0;
        com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapStaticReplication $r11, $r13, $r15, $r17, $r18, $r20, $r21;
        double[] $r12, $r14, $r16, $r19, $r22, r24, r26, r28, r30, r32, r34;

        r0 := @this: com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapStaticReplicationPricer;

        r1 := @parameter0: com.opengamma.analytics.financial.equity.variance.EquityVarianceSwap;

        d0 := @parameter1: double;

        r2 := @parameter2: com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve;

        r3 := @parameter3: com.opengamma.analytics.financial.equity.variance.pricing.AffineDividends;

        r4 := @parameter4: com.opengamma.analytics.financial.model.volatility.smile.fitting.sabr.SmileSurfaceDataBundle;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "swap");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, "discount curve");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r3, "dividends");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r4, "market volatilities");

        d2 = virtualinvoke r1.<com.opengamma.analytics.financial.equity.variance.EquityVarianceSwap: double getTimeToObsEnd()>();

        $z0 = virtualinvoke r1.<com.opengamma.analytics.financial.equity.variance.EquityVarianceSwap: boolean correctForDividends()>();

        if $z0 == 0 goto label1;

        $b4 = 0;

        goto label2;

     label1:
        $b4 = 1;

     label2:
        b0 = $b4;

        r5 = specialinvoke r0.<com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapStaticReplicationPricer: com.opengamma.analytics.financial.model.volatility.surface.PureImpliedVolatilitySurface getPureImpliedVolFromMarket(double,com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve,com.opengamma.analytics.financial.equity.variance.pricing.AffineDividends,com.opengamma.analytics.financial.model.volatility.smile.fitting.sabr.SmileSurfaceDataBundle)>(d0, r2, r3, r4);

        $r11 = <com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapStaticReplicationPricer: com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapStaticReplication VAR_SWAP_CALCULATOR>;

        $r12 = virtualinvoke $r11.<com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapStaticReplication: double[] expectedVariance(double,com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve,com.opengamma.analytics.financial.equity.variance.pricing.AffineDividends,double,com.opengamma.analytics.financial.model.volatility.surface.PureImpliedVolatilitySurface)>(d0, r2, r3, d2, r5);

        d3 = $r12[$b4];

        i1 = virtualinvoke r3.<com.opengamma.analytics.financial.equity.variance.pricing.AffineDividends: int getNumberOfDividends()>();

        r6 = newmultiarray (double)[i1][2];

        i5 = 0;

     label3:
        if i5 >= i1 goto label8;

        $d4 = virtualinvoke r3.<com.opengamma.analytics.financial.equity.variance.pricing.AffineDividends: double getAlpha(int)>(i5);

        $b2 = $d4 cmpl 1.000010000100001E-5;

        if $b2 <= 0 goto label4;

        $d29 = virtualinvoke r3.<com.opengamma.analytics.financial.equity.variance.pricing.AffineDividends: double getAlpha(int)>(i5);

        $d30 = $d29 * 1.00001;

        $d31 = $d30 + 1.0E-5;

        r23 = virtualinvoke r3.<com.opengamma.analytics.financial.equity.variance.pricing.AffineDividends: com.opengamma.analytics.financial.equity.variance.pricing.AffineDividends withAlpha(double,int)>($d31, i5);

        $r20 = <com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapStaticReplicationPricer: com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapStaticReplication VAR_SWAP_CALCULATOR>;

        r24 = virtualinvoke $r20.<com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapStaticReplication: double[] expectedVariance(double,com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve,com.opengamma.analytics.financial.equity.variance.pricing.AffineDividends,double,com.opengamma.analytics.financial.model.volatility.surface.PureImpliedVolatilitySurface)>(d0, r2, r23, d2, r5);

        $d32 = virtualinvoke r3.<com.opengamma.analytics.financial.equity.variance.pricing.AffineDividends: double getAlpha(int)>(i5);

        $d33 = $d32 * 0.99999;

        $d34 = $d33 - 1.0E-5;

        r25 = virtualinvoke r3.<com.opengamma.analytics.financial.equity.variance.pricing.AffineDividends: com.opengamma.analytics.financial.equity.variance.pricing.AffineDividends withAlpha(double,int)>($d34, i5);

        $r21 = <com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapStaticReplicationPricer: com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapStaticReplication VAR_SWAP_CALCULATOR>;

        r26 = virtualinvoke $r21.<com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapStaticReplication: double[] expectedVariance(double,com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve,com.opengamma.analytics.financial.equity.variance.pricing.AffineDividends,double,com.opengamma.analytics.financial.model.volatility.surface.PureImpliedVolatilitySurface)>(d0, r2, r25, d2, r5);

        $r22 = r6[i5];

        $d36 = r24[b0];

        $d35 = r26[b0];

        $d37 = $d36 - $d35;

        $d38 = d0 * $d37;

        $d39 = $d38 / 2.0;

        $d40 = $d39 / 1.0E-5;

        $d41 = virtualinvoke r3.<com.opengamma.analytics.financial.equity.variance.pricing.AffineDividends: double getAlpha(int)>(i5);

        $d42 = 1.0 + $d41;

        $d43 = $d40 / $d42;

        $r22[0] = $d43;

        goto label5;

     label4:
        $d5 = virtualinvoke r3.<com.opengamma.analytics.financial.equity.variance.pricing.AffineDividends: double getAlpha(int)>(i5);

        $d6 = $d5 + 1.0E-5;

        r27 = virtualinvoke r3.<com.opengamma.analytics.financial.equity.variance.pricing.AffineDividends: com.opengamma.analytics.financial.equity.variance.pricing.AffineDividends withAlpha(double,int)>($d6, i5);

        $r13 = <com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapStaticReplicationPricer: com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapStaticReplication VAR_SWAP_CALCULATOR>;

        r28 = virtualinvoke $r13.<com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapStaticReplication: double[] expectedVariance(double,com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve,com.opengamma.analytics.financial.equity.variance.pricing.AffineDividends,double,com.opengamma.analytics.financial.model.volatility.surface.PureImpliedVolatilitySurface)>(d0, r2, r27, d2, r5);

        $r14 = r6[i5];

        $d7 = r28[b0];

        $d8 = $d7 - d3;

        $d9 = d0 * $d8;

        $d10 = $d9 / 1.0E-5;

        $r14[0] = $d10;

     label5:
        $d11 = virtualinvoke r3.<com.opengamma.analytics.financial.equity.variance.pricing.AffineDividends: double getBeta(int)>(i5);

        $b3 = $d11 cmpl 1.0E-5;

        if $b3 <= 0 goto label6;

        $d18 = virtualinvoke r3.<com.opengamma.analytics.financial.equity.variance.pricing.AffineDividends: double getBeta(int)>(i5);

        $d19 = $d18 + 1.0E-5;

        r29 = virtualinvoke r3.<com.opengamma.analytics.financial.equity.variance.pricing.AffineDividends: com.opengamma.analytics.financial.equity.variance.pricing.AffineDividends withBeta(double,int)>($d19, i5);

        $r17 = <com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapStaticReplicationPricer: com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapStaticReplication VAR_SWAP_CALCULATOR>;

        $d20 = virtualinvoke r1.<com.opengamma.analytics.financial.equity.variance.EquityVarianceSwap: double getTimeToObsEnd()>();

        r30 = virtualinvoke $r17.<com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapStaticReplication: double[] expectedVariance(double,com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve,com.opengamma.analytics.financial.equity.variance.pricing.AffineDividends,double,com.opengamma.analytics.financial.model.volatility.surface.PureImpliedVolatilitySurface)>(d0, r2, r29, $d20, r5);

        $d21 = virtualinvoke r3.<com.opengamma.analytics.financial.equity.variance.pricing.AffineDividends: double getBeta(int)>(i5);

        $d22 = $d21 - 1.0E-5;

        r31 = virtualinvoke r3.<com.opengamma.analytics.financial.equity.variance.pricing.AffineDividends: com.opengamma.analytics.financial.equity.variance.pricing.AffineDividends withBeta(double,int)>($d22, i5);

        $r18 = <com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapStaticReplicationPricer: com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapStaticReplication VAR_SWAP_CALCULATOR>;

        $d23 = virtualinvoke r1.<com.opengamma.analytics.financial.equity.variance.EquityVarianceSwap: double getTimeToObsEnd()>();

        r32 = virtualinvoke $r18.<com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapStaticReplication: double[] expectedVariance(double,com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve,com.opengamma.analytics.financial.equity.variance.pricing.AffineDividends,double,com.opengamma.analytics.financial.model.volatility.surface.PureImpliedVolatilitySurface)>(d0, r2, r31, $d23, r5);

        $r19 = r6[i5];

        $d25 = r30[b0];

        $d24 = r32[b0];

        $d26 = $d25 - $d24;

        $d27 = $d26 / 2.0;

        $d28 = $d27 / 1.0E-5;

        $r19[1] = $d28;

        goto label7;

     label6:
        $d12 = virtualinvoke r3.<com.opengamma.analytics.financial.equity.variance.pricing.AffineDividends: double getBeta(int)>(i5);

        $d13 = $d12 + 1.0E-5;

        r33 = virtualinvoke r3.<com.opengamma.analytics.financial.equity.variance.pricing.AffineDividends: com.opengamma.analytics.financial.equity.variance.pricing.AffineDividends withBeta(double,int)>($d13, i5);

        $r15 = <com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapStaticReplicationPricer: com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapStaticReplication VAR_SWAP_CALCULATOR>;

        $d14 = virtualinvoke r1.<com.opengamma.analytics.financial.equity.variance.EquityVarianceSwap: double getTimeToObsEnd()>();

        r34 = virtualinvoke $r15.<com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapStaticReplication: double[] expectedVariance(double,com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve,com.opengamma.analytics.financial.equity.variance.pricing.AffineDividends,double,com.opengamma.analytics.financial.model.volatility.surface.PureImpliedVolatilitySurface)>(d0, r2, r33, $d14, r5);

        $r16 = r6[i5];

        $d15 = r34[b0];

        $d16 = $d15 - d3;

        $d17 = $d16 / 1.0E-5;

        $r16[1] = $d17;

     label7:
        i5 = i5 + 1;

        goto label3;

     label8:
        return r6;
    }

    public double[][] dividendSensitivityWithStickyImpliedVol(com.opengamma.analytics.financial.equity.variance.EquityVarianceSwap, double, com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve, com.opengamma.analytics.financial.equity.variance.pricing.AffineDividends, com.opengamma.analytics.financial.model.volatility.smile.fitting.sabr.SmileSurfaceDataBundle)
    {
        com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapStaticReplicationPricer r0;
        com.opengamma.analytics.financial.equity.variance.EquityVarianceSwap r1;
        double d0, d2, d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21, $d22, $d23, $d24, $d25, $d26, $d27, $d28, $d29, $d30, $d31, $d32, $d33, $d34, $d35, $d36, $d37, $d38, $d39, $d40, $d41, $d42, $d43;
        com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve r2;
        com.opengamma.analytics.financial.equity.variance.pricing.AffineDividends r3, r23, r26, r29, r32, r35, r38;
        com.opengamma.analytics.financial.model.volatility.smile.fitting.sabr.SmileSurfaceDataBundle r4;
        byte b0, $b2, $b3, $b4;
        com.opengamma.analytics.financial.model.volatility.surface.PureImpliedVolatilitySurface r5, r24, r27, r30, r33, r36, r39;
        int i1, i5;
        double[][] r6;
        boolean $z0;
        com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapStaticReplication $r11, $r13, $r15, $r17, $r18, $r20, $r21;
        double[] $r12, $r14, $r16, $r19, $r22, r25, r28, r31, r34, r37, r40;

        r0 := @this: com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapStaticReplicationPricer;

        r1 := @parameter0: com.opengamma.analytics.financial.equity.variance.EquityVarianceSwap;

        d0 := @parameter1: double;

        r2 := @parameter2: com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve;

        r3 := @parameter3: com.opengamma.analytics.financial.equity.variance.pricing.AffineDividends;

        r4 := @parameter4: com.opengamma.analytics.financial.model.volatility.smile.fitting.sabr.SmileSurfaceDataBundle;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "swap");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, "discount curve");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r3, "dividends");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r4, "market vols");

        d2 = virtualinvoke r1.<com.opengamma.analytics.financial.equity.variance.EquityVarianceSwap: double getTimeToObsEnd()>();

        $z0 = virtualinvoke r1.<com.opengamma.analytics.financial.equity.variance.EquityVarianceSwap: boolean correctForDividends()>();

        if $z0 == 0 goto label1;

        $b4 = 0;

        goto label2;

     label1:
        $b4 = 1;

     label2:
        b0 = $b4;

        r5 = specialinvoke r0.<com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapStaticReplicationPricer: com.opengamma.analytics.financial.model.volatility.surface.PureImpliedVolatilitySurface getPureImpliedVolFromMarket(double,com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve,com.opengamma.analytics.financial.equity.variance.pricing.AffineDividends,com.opengamma.analytics.financial.model.volatility.smile.fitting.sabr.SmileSurfaceDataBundle)>(d0, r2, r3, r4);

        $r11 = <com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapStaticReplicationPricer: com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapStaticReplication VAR_SWAP_CALCULATOR>;

        $r12 = virtualinvoke $r11.<com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapStaticReplication: double[] expectedVariance(double,com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve,com.opengamma.analytics.financial.equity.variance.pricing.AffineDividends,double,com.opengamma.analytics.financial.model.volatility.surface.PureImpliedVolatilitySurface)>(d0, r2, r3, d2, r5);

        d3 = $r12[$b4];

        i1 = virtualinvoke r3.<com.opengamma.analytics.financial.equity.variance.pricing.AffineDividends: int getNumberOfDividends()>();

        r6 = newmultiarray (double)[i1][2];

        i5 = 0;

     label3:
        if i5 >= i1 goto label8;

        $d4 = virtualinvoke r3.<com.opengamma.analytics.financial.equity.variance.pricing.AffineDividends: double getAlpha(int)>(i5);

        $b2 = $d4 cmpl 1.000010000100001E-5;

        if $b2 <= 0 goto label4;

        $d29 = virtualinvoke r3.<com.opengamma.analytics.financial.equity.variance.pricing.AffineDividends: double getAlpha(int)>(i5);

        $d30 = $d29 * 1.00001;

        $d31 = $d30 + 1.0E-5;

        r23 = virtualinvoke r3.<com.opengamma.analytics.financial.equity.variance.pricing.AffineDividends: com.opengamma.analytics.financial.equity.variance.pricing.AffineDividends withAlpha(double,int)>($d31, i5);

        r24 = specialinvoke r0.<com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapStaticReplicationPricer: com.opengamma.analytics.financial.model.volatility.surface.PureImpliedVolatilitySurface getPureImpliedVolFromMarket(double,com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve,com.opengamma.analytics.financial.equity.variance.pricing.AffineDividends,com.opengamma.analytics.financial.model.volatility.smile.fitting.sabr.SmileSurfaceDataBundle)>(d0, r2, r23, r4);

        $r20 = <com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapStaticReplicationPricer: com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapStaticReplication VAR_SWAP_CALCULATOR>;

        r25 = virtualinvoke $r20.<com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapStaticReplication: double[] expectedVariance(double,com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve,com.opengamma.analytics.financial.equity.variance.pricing.AffineDividends,double,com.opengamma.analytics.financial.model.volatility.surface.PureImpliedVolatilitySurface)>(d0, r2, r23, d2, r24);

        $d32 = virtualinvoke r3.<com.opengamma.analytics.financial.equity.variance.pricing.AffineDividends: double getAlpha(int)>(i5);

        $d33 = $d32 * 0.99999;

        $d34 = $d33 - 1.0E-5;

        r26 = virtualinvoke r3.<com.opengamma.analytics.financial.equity.variance.pricing.AffineDividends: com.opengamma.analytics.financial.equity.variance.pricing.AffineDividends withAlpha(double,int)>($d34, i5);

        r27 = specialinvoke r0.<com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapStaticReplicationPricer: com.opengamma.analytics.financial.model.volatility.surface.PureImpliedVolatilitySurface getPureImpliedVolFromMarket(double,com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve,com.opengamma.analytics.financial.equity.variance.pricing.AffineDividends,com.opengamma.analytics.financial.model.volatility.smile.fitting.sabr.SmileSurfaceDataBundle)>(d0, r2, r26, r4);

        $r21 = <com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapStaticReplicationPricer: com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapStaticReplication VAR_SWAP_CALCULATOR>;

        r28 = virtualinvoke $r21.<com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapStaticReplication: double[] expectedVariance(double,com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve,com.opengamma.analytics.financial.equity.variance.pricing.AffineDividends,double,com.opengamma.analytics.financial.model.volatility.surface.PureImpliedVolatilitySurface)>(d0, r2, r26, d2, r27);

        $r22 = r6[i5];

        $d36 = r25[b0];

        $d35 = r28[b0];

        $d37 = $d36 - $d35;

        $d38 = d0 * $d37;

        $d39 = $d38 / 2.0;

        $d40 = $d39 / 1.0E-5;

        $d41 = virtualinvoke r3.<com.opengamma.analytics.financial.equity.variance.pricing.AffineDividends: double getAlpha(int)>(i5);

        $d42 = 1.0 + $d41;

        $d43 = $d40 / $d42;

        $r22[0] = $d43;

        goto label5;

     label4:
        $d5 = virtualinvoke r3.<com.opengamma.analytics.financial.equity.variance.pricing.AffineDividends: double getAlpha(int)>(i5);

        $d6 = $d5 + 1.0E-5;

        r29 = virtualinvoke r3.<com.opengamma.analytics.financial.equity.variance.pricing.AffineDividends: com.opengamma.analytics.financial.equity.variance.pricing.AffineDividends withAlpha(double,int)>($d6, i5);

        r30 = specialinvoke r0.<com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapStaticReplicationPricer: com.opengamma.analytics.financial.model.volatility.surface.PureImpliedVolatilitySurface getPureImpliedVolFromMarket(double,com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve,com.opengamma.analytics.financial.equity.variance.pricing.AffineDividends,com.opengamma.analytics.financial.model.volatility.smile.fitting.sabr.SmileSurfaceDataBundle)>(d0, r2, r29, r4);

        $r13 = <com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapStaticReplicationPricer: com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapStaticReplication VAR_SWAP_CALCULATOR>;

        r31 = virtualinvoke $r13.<com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapStaticReplication: double[] expectedVariance(double,com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve,com.opengamma.analytics.financial.equity.variance.pricing.AffineDividends,double,com.opengamma.analytics.financial.model.volatility.surface.PureImpliedVolatilitySurface)>(d0, r2, r29, d2, r30);

        $r14 = r6[i5];

        $d7 = r31[b0];

        $d8 = $d7 - d3;

        $d9 = d0 * $d8;

        $d10 = $d9 / 1.0E-5;

        $r14[0] = $d10;

     label5:
        $d11 = virtualinvoke r3.<com.opengamma.analytics.financial.equity.variance.pricing.AffineDividends: double getBeta(int)>(i5);

        $b3 = $d11 cmpl 1.0E-5;

        if $b3 <= 0 goto label6;

        $d18 = virtualinvoke r3.<com.opengamma.analytics.financial.equity.variance.pricing.AffineDividends: double getBeta(int)>(i5);

        $d19 = $d18 + 1.0E-5;

        r32 = virtualinvoke r3.<com.opengamma.analytics.financial.equity.variance.pricing.AffineDividends: com.opengamma.analytics.financial.equity.variance.pricing.AffineDividends withBeta(double,int)>($d19, i5);

        r33 = specialinvoke r0.<com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapStaticReplicationPricer: com.opengamma.analytics.financial.model.volatility.surface.PureImpliedVolatilitySurface getPureImpliedVolFromMarket(double,com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve,com.opengamma.analytics.financial.equity.variance.pricing.AffineDividends,com.opengamma.analytics.financial.model.volatility.smile.fitting.sabr.SmileSurfaceDataBundle)>(d0, r2, r32, r4);

        $r17 = <com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapStaticReplicationPricer: com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapStaticReplication VAR_SWAP_CALCULATOR>;

        $d20 = virtualinvoke r1.<com.opengamma.analytics.financial.equity.variance.EquityVarianceSwap: double getTimeToObsEnd()>();

        r34 = virtualinvoke $r17.<com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapStaticReplication: double[] expectedVariance(double,com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve,com.opengamma.analytics.financial.equity.variance.pricing.AffineDividends,double,com.opengamma.analytics.financial.model.volatility.surface.PureImpliedVolatilitySurface)>(d0, r2, r32, $d20, r33);

        $d21 = virtualinvoke r3.<com.opengamma.analytics.financial.equity.variance.pricing.AffineDividends: double getBeta(int)>(i5);

        $d22 = $d21 - 1.0E-5;

        r35 = virtualinvoke r3.<com.opengamma.analytics.financial.equity.variance.pricing.AffineDividends: com.opengamma.analytics.financial.equity.variance.pricing.AffineDividends withBeta(double,int)>($d22, i5);

        r36 = specialinvoke r0.<com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapStaticReplicationPricer: com.opengamma.analytics.financial.model.volatility.surface.PureImpliedVolatilitySurface getPureImpliedVolFromMarket(double,com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve,com.opengamma.analytics.financial.equity.variance.pricing.AffineDividends,com.opengamma.analytics.financial.model.volatility.smile.fitting.sabr.SmileSurfaceDataBundle)>(d0, r2, r35, r4);

        $r18 = <com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapStaticReplicationPricer: com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapStaticReplication VAR_SWAP_CALCULATOR>;

        $d23 = virtualinvoke r1.<com.opengamma.analytics.financial.equity.variance.EquityVarianceSwap: double getTimeToObsEnd()>();

        r37 = virtualinvoke $r18.<com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapStaticReplication: double[] expectedVariance(double,com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve,com.opengamma.analytics.financial.equity.variance.pricing.AffineDividends,double,com.opengamma.analytics.financial.model.volatility.surface.PureImpliedVolatilitySurface)>(d0, r2, r35, $d23, r36);

        $r19 = r6[i5];

        $d25 = r34[b0];

        $d24 = r37[b0];

        $d26 = $d25 - $d24;

        $d27 = $d26 / 2.0;

        $d28 = $d27 / 1.0E-5;

        $r19[1] = $d28;

        goto label7;

     label6:
        $d12 = virtualinvoke r3.<com.opengamma.analytics.financial.equity.variance.pricing.AffineDividends: double getBeta(int)>(i5);

        $d13 = $d12 + 1.0E-5;

        r38 = virtualinvoke r3.<com.opengamma.analytics.financial.equity.variance.pricing.AffineDividends: com.opengamma.analytics.financial.equity.variance.pricing.AffineDividends withBeta(double,int)>($d13, i5);

        r39 = specialinvoke r0.<com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapStaticReplicationPricer: com.opengamma.analytics.financial.model.volatility.surface.PureImpliedVolatilitySurface getPureImpliedVolFromMarket(double,com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve,com.opengamma.analytics.financial.equity.variance.pricing.AffineDividends,com.opengamma.analytics.financial.model.volatility.smile.fitting.sabr.SmileSurfaceDataBundle)>(d0, r2, r38, r4);

        $r15 = <com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapStaticReplicationPricer: com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapStaticReplication VAR_SWAP_CALCULATOR>;

        $d14 = virtualinvoke r1.<com.opengamma.analytics.financial.equity.variance.EquityVarianceSwap: double getTimeToObsEnd()>();

        r40 = virtualinvoke $r15.<com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapStaticReplication: double[] expectedVariance(double,com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve,com.opengamma.analytics.financial.equity.variance.pricing.AffineDividends,double,com.opengamma.analytics.financial.model.volatility.surface.PureImpliedVolatilitySurface)>(d0, r2, r38, $d14, r39);

        $r16 = r6[i5];

        $d15 = r40[b0];

        $d16 = $d15 - d3;

        $d17 = $d16 / 1.0E-5;

        $r16[1] = $d17;

     label7:
        i5 = i5 + 1;

        goto label3;

     label8:
        return r6;
    }

    private com.opengamma.analytics.financial.model.volatility.surface.PureImpliedVolatilitySurface getPureImpliedVolFromMarket(double, com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve, com.opengamma.analytics.financial.equity.variance.pricing.AffineDividends, com.opengamma.analytics.financial.model.volatility.smile.fitting.sabr.SmileSurfaceDataBundle)
    {
        com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapStaticReplicationPricer r0;
        double d0, d1, d2, d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, d11;
        com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve r1;
        com.opengamma.analytics.financial.equity.variance.pricing.AffineDividends r2;
        com.opengamma.analytics.financial.model.volatility.smile.fitting.sabr.SmileSurfaceDataBundle r3;
        double[][] r5, r6, r7, r8;
        int i0, i1, i3, i4;
        com.opengamma.analytics.financial.equity.variance.pricing.EquityDividendsCurvesBundle $r10;
        com.opengamma.analytics.financial.model.volatility.smile.fitting.sabr.StandardSmileSurfaceDataBundle $r11;
        com.opengamma.analytics.financial.model.interestrate.curve.ForwardCurve $r12;
        double[] $r13, $r17, $r18, $r19, $r20, $r21, $r23, $r27, $r28, $r29, $r30;
        com.opengamma.analytics.financial.model.volatility.surface.VolatilitySurfaceInterpolator $r14;
        com.opengamma.analytics.financial.model.volatility.surface.PureImpliedVolatilitySurface $r15;
        com.opengamma.analytics.math.surface.Surface $r16;
        byte $b2;
        java.lang.Object[] $r22;
        java.lang.Double $r24, $r25, $r26;
        boolean $z0;
        com.opengamma.analytics.financial.model.volatility.surface.BlackVolatilitySurfaceMoneynessFcnBackedByGrid r32;

        r0 := @this: com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapStaticReplicationPricer;

        d0 := @parameter0: double;

        r1 := @parameter1: com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve;

        r2 := @parameter2: com.opengamma.analytics.financial.equity.variance.pricing.AffineDividends;

        r3 := @parameter3: com.opengamma.analytics.financial.model.volatility.smile.fitting.sabr.SmileSurfaceDataBundle;

        $r10 = new com.opengamma.analytics.financial.equity.variance.pricing.EquityDividendsCurvesBundle;

        specialinvoke $r10.<com.opengamma.analytics.financial.equity.variance.pricing.EquityDividendsCurvesBundle: void <init>(double,com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve,com.opengamma.analytics.financial.equity.variance.pricing.AffineDividends)>(d0, r1, r2);

        r5 = virtualinvoke r3.<com.opengamma.analytics.financial.model.volatility.smile.fitting.sabr.SmileSurfaceDataBundle: double[][] getStrikes()>();

        r6 = virtualinvoke r3.<com.opengamma.analytics.financial.model.volatility.smile.fitting.sabr.SmileSurfaceDataBundle: double[][] getVolatilities()>();

        i0 = virtualinvoke r3.<com.opengamma.analytics.financial.model.volatility.smile.fitting.sabr.SmileSurfaceDataBundle: int getNumExpiries()>();

        r7 = newarray (double[])[i0];

        r8 = newarray (double[])[i0];

        i3 = 0;

     label1:
        if i3 >= i0 goto label6;

        $r17 = virtualinvoke r3.<com.opengamma.analytics.financial.model.volatility.smile.fitting.sabr.SmileSurfaceDataBundle: double[] getExpiries()>();

        d11 = $r17[i3];

        d1 = virtualinvoke $r10.<com.opengamma.analytics.financial.equity.variance.pricing.EquityDividendsCurvesBundle: double getF(double)>(d11);

        d2 = virtualinvoke $r10.<com.opengamma.analytics.financial.equity.variance.pricing.EquityDividendsCurvesBundle: double getD(double)>(d11);

        $r18 = r5[i3];

        i1 = lengthof $r18;

        $r19 = newarray (double)[i1];

        r7[i3] = $r19;

        $r20 = newarray (double)[i1];

        r8[i3] = $r20;

        i4 = 0;

     label2:
        if i4 >= i1 goto label5;

        $r21 = r5[i3];

        $d4 = $r21[i4];

        d3 = $d4 - d2;

        $b2 = d3 cmpl 0.0;

        if $b2 < 0 goto label3;

        $z0 = 1;

        goto label4;

     label3:
        $z0 = 0;

     label4:
        $r22 = newarray (java.lang.Object)[3];

        $r23 = r5[i3];

        $d5 = $r23[i4];

        $r24 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d5);

        $r22[0] = $r24;

        $r25 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d11);

        $r22[1] = $r25;

        $r26 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d2);

        $r22[2] = $r26;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String,java.lang.Object[])>($z0, "strike of {} at expiry {} is less than the discounts value of future cash dividends {}. Either remove this option or change the dividend assumption", $r22);

        $r27 = r7[i3];

        $d6 = d1 - d2;

        $d7 = d3 / $d6;

        $r27[i4] = $d7;

        $r30 = r8[i3];

        $r28 = r5[i3];

        $d9 = $r28[i4];

        $r29 = r6[i3];

        $d8 = $r29[i4];

        $d10 = staticinvoke <com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapStaticReplicationPricer: double volToPureVol(double,double,double,double,double)>($d9, d1, d2, d11, $d8);

        $r30[i4] = $d10;

        i4 = i4 + 1;

        goto label2;

     label5:
        i3 = i3 + 1;

        goto label1;

     label6:
        $r11 = new com.opengamma.analytics.financial.model.volatility.smile.fitting.sabr.StandardSmileSurfaceDataBundle;

        $r12 = new com.opengamma.analytics.financial.model.interestrate.curve.ForwardCurve;

        specialinvoke $r12.<com.opengamma.analytics.financial.model.interestrate.curve.ForwardCurve: void <init>(double)>(1.0);

        $r13 = virtualinvoke r3.<com.opengamma.analytics.financial.model.volatility.smile.fitting.sabr.SmileSurfaceDataBundle: double[] getExpiries()>();

        specialinvoke $r11.<com.opengamma.analytics.financial.model.volatility.smile.fitting.sabr.StandardSmileSurfaceDataBundle: void <init>(com.opengamma.analytics.financial.model.interestrate.curve.ForwardCurve,double[],double[][],double[][])>($r12, $r13, r7, r8);

        $r14 = r0.<com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapStaticReplicationPricer: com.opengamma.analytics.financial.model.volatility.surface.VolatilitySurfaceInterpolator _surfaceInterpolator>;

        r32 = virtualinvoke $r14.<com.opengamma.analytics.financial.model.volatility.surface.VolatilitySurfaceInterpolator: com.opengamma.analytics.financial.model.volatility.surface.BlackVolatilitySurfaceMoneynessFcnBackedByGrid getVolatilitySurface(com.opengamma.analytics.financial.model.volatility.smile.fitting.sabr.SmileSurfaceDataBundle)>($r11);

        $r15 = new com.opengamma.analytics.financial.model.volatility.surface.PureImpliedVolatilitySurface;

        $r16 = virtualinvoke r32.<com.opengamma.analytics.financial.model.volatility.surface.BlackVolatilitySurfaceMoneyness: com.opengamma.analytics.math.surface.Surface getSurface()>();

        specialinvoke $r15.<com.opengamma.analytics.financial.model.volatility.surface.PureImpliedVolatilitySurface: void <init>(com.opengamma.analytics.math.surface.Surface)>($r16);

        return $r15;
    }

    private static com.opengamma.analytics.math.surface.Surface flooredShiftSurface(com.opengamma.analytics.math.surface.Surface, double)
    {
        com.opengamma.analytics.math.surface.Surface r0;
        double d0;
        com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapStaticReplicationPricer$1 $r2;
        com.opengamma.analytics.math.surface.FunctionalDoublesSurface $r3;

        r0 := @parameter0: com.opengamma.analytics.math.surface.Surface;

        d0 := @parameter1: double;

        $r2 = new com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapStaticReplicationPricer$1;

        specialinvoke $r2.<com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapStaticReplicationPricer$1: void <init>(com.opengamma.analytics.math.surface.Surface,double)>(r0, d0);

        $r3 = staticinvoke <com.opengamma.analytics.math.surface.FunctionalDoublesSurface: com.opengamma.analytics.math.surface.FunctionalDoublesSurface 'from'(com.opengamma.analytics.math.function.Function)>($r2);

        return $r3;
    }

    private static double volToPureVol(double, double, double, double, double)
    {
        double d0, d1, d2, d3, d4, d5, d6, d7, $d8, $d9, $d10, $d11;
        byte $b0, $b1;
        boolean $z1;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        d2 := @parameter2: double;

        d3 := @parameter3: double;

        d4 := @parameter4: double;

        $b0 = d2 cmpl 0.0;

        if $b0 != 0 goto label1;

        return d4;

     label1:
        $b1 = d0 cmpl d1;

        if $b1 < 0 goto label2;

        $z1 = 1;

        goto label3;

     label2:
        $z1 = 0;

     label3:
        d5 = staticinvoke <com.opengamma.analytics.financial.model.volatility.BlackFormulaRepository: double price(double,double,double,double,boolean)>(d1, d0, d3, d4, $z1);

        $d8 = d1 - d2;

        d6 = d5 / $d8;

        $d10 = d0 - d2;

        $d9 = d1 - d2;

        d7 = $d10 / $d9;

        $d11 = staticinvoke <com.opengamma.analytics.financial.model.volatility.BlackFormulaRepository: double impliedVolatility(double,double,double,double,double)>(d6, 1.0, d7, d3, d4);

        return $d11;
    }

    void <init>(com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapStaticReplicationPricer$Builder, com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapStaticReplicationPricer$1)
    {
        com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapStaticReplicationPricer r0;
        com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapStaticReplicationPricer$Builder r1;
        com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapStaticReplicationPricer$1 r2;

        r0 := @this: com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapStaticReplicationPricer;

        r1 := @parameter0: com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapStaticReplicationPricer$Builder;

        r2 := @parameter1: com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapStaticReplicationPricer$1;

        specialinvoke r0.<com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapStaticReplicationPricer: void <init>(com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapStaticReplicationPricer$Builder)>(r1);

        return;
    }

    static void <clinit>()
    {
        com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapStaticReplication $r0;

        $r0 = new com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapStaticReplication;

        specialinvoke $r0.<com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapStaticReplication: void <init>()>();

        <com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapStaticReplicationPricer: com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapStaticReplication VAR_SWAP_CALCULATOR> = $r0;

        return;
    }
}
