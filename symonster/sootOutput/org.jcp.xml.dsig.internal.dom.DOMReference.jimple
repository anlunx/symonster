public final class org.jcp.xml.dsig.internal.dom.DOMReference extends org.jcp.xml.dsig.internal.dom.DOMStructure implements javax.xml.crypto.dsig.Reference, javax.xml.crypto.dom.DOMURIReference
{
    public static final int MAXIMUM_TRANSFORM_COUNT;
    private static boolean useC14N11;
    private static java.util.logging.Logger log;
    private final javax.xml.crypto.dsig.DigestMethod digestMethod;
    private final java.lang.String id;
    private final java.util.List transforms;
    private java.util.List allTransforms;
    private final javax.xml.crypto.Data appliedTransformData;
    private org.w3c.dom.Attr here;
    private final java.lang.String uri;
    private final java.lang.String type;
    private byte[] digestValue;
    private byte[] calcDigestValue;
    private org.w3c.dom.Element refElem;
    private boolean digested;
    private boolean validated;
    private boolean validationStatus;
    private javax.xml.crypto.Data derefData;
    private java.io.InputStream dis;
    private java.security.MessageDigest md;
    private java.security.Provider provider;

    public void <init>(java.lang.String, java.lang.String, javax.xml.crypto.dsig.DigestMethod, java.util.List, java.lang.String, java.security.Provider)
    {
        org.jcp.xml.dsig.internal.dom.DOMReference r0;
        java.lang.String r1, r2, r5;
        javax.xml.crypto.dsig.DigestMethod r3;
        java.util.List r4;
        java.security.Provider r6;

        r0 := @this: org.jcp.xml.dsig.internal.dom.DOMReference;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: javax.xml.crypto.dsig.DigestMethod;

        r4 := @parameter3: java.util.List;

        r5 := @parameter4: java.lang.String;

        r6 := @parameter5: java.security.Provider;

        specialinvoke r0.<org.jcp.xml.dsig.internal.dom.DOMReference: void <init>(java.lang.String,java.lang.String,javax.xml.crypto.dsig.DigestMethod,java.util.List,javax.xml.crypto.Data,java.util.List,java.lang.String,byte[],java.security.Provider)>(r1, r2, r3, null, null, r4, r5, null, r6);

        return;
    }

    public void <init>(java.lang.String, java.lang.String, javax.xml.crypto.dsig.DigestMethod, java.util.List, javax.xml.crypto.Data, java.util.List, java.lang.String, java.security.Provider)
    {
        org.jcp.xml.dsig.internal.dom.DOMReference r0;
        java.lang.String r1, r2, r7;
        javax.xml.crypto.dsig.DigestMethod r3;
        java.util.List r4, r6;
        javax.xml.crypto.Data r5;
        java.security.Provider r8;

        r0 := @this: org.jcp.xml.dsig.internal.dom.DOMReference;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: javax.xml.crypto.dsig.DigestMethod;

        r4 := @parameter3: java.util.List;

        r5 := @parameter4: javax.xml.crypto.Data;

        r6 := @parameter5: java.util.List;

        r7 := @parameter6: java.lang.String;

        r8 := @parameter7: java.security.Provider;

        specialinvoke r0.<org.jcp.xml.dsig.internal.dom.DOMReference: void <init>(java.lang.String,java.lang.String,javax.xml.crypto.dsig.DigestMethod,java.util.List,javax.xml.crypto.Data,java.util.List,java.lang.String,byte[],java.security.Provider)>(r1, r2, r3, r4, r5, r6, r7, null, r8);

        return;
    }

    public void <init>(java.lang.String, java.lang.String, javax.xml.crypto.dsig.DigestMethod, java.util.List, javax.xml.crypto.Data, java.util.List, java.lang.String, byte[], java.security.Provider)
    {
        org.jcp.xml.dsig.internal.dom.DOMReference r0;
        java.lang.String r1, r2, r7, $r23, $r32, $r36;
        javax.xml.crypto.dsig.DigestMethod r3;
        java.util.List r4, r6, $r12, $r24;
        javax.xml.crypto.Data r5;
        byte[] r8, $r14, $r15;
        java.security.Provider r9;
        java.util.ArrayList $r10, $r11, $r25;
        java.lang.Object $r13, $r17, $r26;
        boolean $z1, $z2, $z3;
        java.net.URI $r16;
        java.lang.ClassCastException $r18, $r27;
        java.lang.StringBuilder $r19, $r20, $r21, $r22, $r28, $r29, $r30, $r31;
        java.lang.NullPointerException $r33;
        java.net.URISyntaxException $r34;
        java.lang.IllegalArgumentException $r35;
        int i0, i1, i2, i3;

        r0 := @this: org.jcp.xml.dsig.internal.dom.DOMReference;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: javax.xml.crypto.dsig.DigestMethod;

        r4 := @parameter3: java.util.List;

        r5 := @parameter4: javax.xml.crypto.Data;

        r6 := @parameter5: java.util.List;

        r7 := @parameter6: java.lang.String;

        r8 := @parameter7: byte[];

        r9 := @parameter8: java.security.Provider;

        specialinvoke r0.<org.jcp.xml.dsig.internal.dom.DOMStructure: void <init>()>();

        r0.<org.jcp.xml.dsig.internal.dom.DOMReference: boolean digested> = 0;

        r0.<org.jcp.xml.dsig.internal.dom.DOMReference: boolean validated> = 0;

        if r3 != null goto label01;

        $r33 = new java.lang.NullPointerException;

        specialinvoke $r33.<java.lang.NullPointerException: void <init>(java.lang.String)>("DigestMethod must be non-null");

        throw $r33;

     label01:
        $r10 = new java.util.ArrayList;

        specialinvoke $r10.<java.util.ArrayList: void <init>()>();

        r0.<org.jcp.xml.dsig.internal.dom.DOMReference: java.util.List allTransforms> = $r10;

        if r4 == null goto label05;

        $r25 = new java.util.ArrayList;

        specialinvoke $r25.<java.util.ArrayList: void <init>(java.util.Collection)>(r4);

        i0 = 0;

        i1 = interfaceinvoke $r25.<java.util.List: int size()>();

     label02:
        if i0 >= i1 goto label04;

        $r26 = interfaceinvoke $r25.<java.util.List: java.lang.Object get(int)>(i0);

        $z3 = $r26 instanceof javax.xml.crypto.dsig.Transform;

        if $z3 != 0 goto label03;

        $r27 = new java.lang.ClassCastException;

        $r28 = new java.lang.StringBuilder;

        specialinvoke $r28.<java.lang.StringBuilder: void <init>()>();

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("appliedTransforms[");

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("] is not a valid type");

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r27.<java.lang.ClassCastException: void <init>(java.lang.String)>($r32);

        throw $r27;

     label03:
        i0 = i0 + 1;

        goto label02;

     label04:
        r0.<org.jcp.xml.dsig.internal.dom.DOMReference: java.util.List allTransforms> = $r25;

     label05:
        if r6 != null goto label06;

        $r24 = <java.util.Collections: java.util.List EMPTY_LIST>;

        r0.<org.jcp.xml.dsig.internal.dom.DOMReference: java.util.List transforms> = $r24;

        goto label10;

     label06:
        $r11 = new java.util.ArrayList;

        specialinvoke $r11.<java.util.ArrayList: void <init>(java.util.Collection)>(r6);

        i2 = 0;

        i3 = interfaceinvoke $r11.<java.util.List: int size()>();

     label07:
        if i2 >= i3 goto label09;

        $r17 = interfaceinvoke $r11.<java.util.List: java.lang.Object get(int)>(i2);

        $z2 = $r17 instanceof javax.xml.crypto.dsig.Transform;

        if $z2 != 0 goto label08;

        $r18 = new java.lang.ClassCastException;

        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("transforms[");

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("] is not a valid type");

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r18.<java.lang.ClassCastException: void <init>(java.lang.String)>($r23);

        throw $r18;

     label08:
        i2 = i2 + 1;

        goto label07;

     label09:
        r0.<org.jcp.xml.dsig.internal.dom.DOMReference: java.util.List transforms> = $r11;

        $r12 = r0.<org.jcp.xml.dsig.internal.dom.DOMReference: java.util.List allTransforms>;

        interfaceinvoke $r12.<java.util.List: boolean addAll(java.util.Collection)>($r11);

     label10:
        r0.<org.jcp.xml.dsig.internal.dom.DOMReference: javax.xml.crypto.dsig.DigestMethod digestMethod> = r3;

        r0.<org.jcp.xml.dsig.internal.dom.DOMReference: java.lang.String uri> = r1;

        if r1 == null goto label14;

        $z1 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("");

        if $z1 != 0 goto label14;

     label11:
        $r16 = new java.net.URI;

        specialinvoke $r16.<java.net.URI: void <init>(java.lang.String)>(r1);

     label12:
        goto label14;

     label13:
        $r34 := @caughtexception;

        $r35 = new java.lang.IllegalArgumentException;

        $r36 = virtualinvoke $r34.<java.net.URISyntaxException: java.lang.String getMessage()>();

        specialinvoke $r35.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r36);

        throw $r35;

     label14:
        r0.<org.jcp.xml.dsig.internal.dom.DOMReference: java.lang.String type> = r2;

        r0.<org.jcp.xml.dsig.internal.dom.DOMReference: java.lang.String id> = r7;

        if r8 == null goto label15;

        $r13 = virtualinvoke r8.<java.lang.Object: java.lang.Object clone()>();

        $r14 = (byte[]) $r13;

        $r15 = (byte[]) $r14;

        r0.<org.jcp.xml.dsig.internal.dom.DOMReference: byte[] digestValue> = $r15;

        r0.<org.jcp.xml.dsig.internal.dom.DOMReference: boolean digested> = 1;

     label15:
        r0.<org.jcp.xml.dsig.internal.dom.DOMReference: javax.xml.crypto.Data appliedTransformData> = r5;

        r0.<org.jcp.xml.dsig.internal.dom.DOMReference: java.security.Provider provider> = r9;

        return;

        catch java.net.URISyntaxException from label11 to label12 with label13;
    }

    public void <init>(org.w3c.dom.Element, javax.xml.crypto.XMLCryptoContext, java.security.Provider) throws javax.xml.crypto.MarshalException
    {
        org.jcp.xml.dsig.internal.dom.DOMReference r0;
        org.w3c.dom.Element r1, r26, r27, r29, r31;
        javax.xml.crypto.XMLCryptoContext r2;
        java.security.Provider r3;
        boolean z0, $z1, $z2;
        java.util.ArrayList $r5;
        java.lang.String $r6, $r10, $r11, $r13, $r14, $r21, r30;
        javax.xml.crypto.dsig.DigestMethod $r7, $r8, $r18;
        byte[] $r9;
        org.w3c.dom.Attr $r12, r33;
        javax.xml.crypto.MarshalException $r15, $r23, $r25;
        java.lang.StringBuilder $r16, $r17, $r19, $r20;
        org.jcp.xml.dsig.internal.dom.DOMTransform $r22;
        com.sun.org.apache.xml.internal.security.exceptions.Base64DecodingException $r24;
        int i0;

        r0 := @this: org.jcp.xml.dsig.internal.dom.DOMReference;

        r1 := @parameter0: org.w3c.dom.Element;

        r2 := @parameter1: javax.xml.crypto.XMLCryptoContext;

        r3 := @parameter2: java.security.Provider;

        specialinvoke r0.<org.jcp.xml.dsig.internal.dom.DOMStructure: void <init>()>();

        r0.<org.jcp.xml.dsig.internal.dom.DOMReference: boolean digested> = 0;

        r0.<org.jcp.xml.dsig.internal.dom.DOMReference: boolean validated> = 0;

        z0 = staticinvoke <org.jcp.xml.dsig.internal.dom.Utils: boolean secureValidation(javax.xml.crypto.XMLCryptoContext)>(r2);

        r26 = staticinvoke <org.jcp.xml.dsig.internal.dom.DOMUtils: org.w3c.dom.Element getFirstChildElement(org.w3c.dom.Node)>(r1);

        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>(int)>(5);

        $r6 = interfaceinvoke r26.<org.w3c.dom.Element: java.lang.String getLocalName()>();

        $z1 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>("Transforms");

        if $z1 == 0 goto label3;

        r27 = staticinvoke <org.jcp.xml.dsig.internal.dom.DOMUtils: org.w3c.dom.Element getFirstChildElement(org.w3c.dom.Node)>(r26);

        i0 = 0;

     label1:
        if r27 == null goto label2;

        $r22 = new org.jcp.xml.dsig.internal.dom.DOMTransform;

        specialinvoke $r22.<org.jcp.xml.dsig.internal.dom.DOMTransform: void <init>(org.w3c.dom.Element,javax.xml.crypto.XMLCryptoContext,java.security.Provider)>(r27, r2, r3);

        interfaceinvoke $r5.<java.util.List: boolean add(java.lang.Object)>($r22);

        r27 = staticinvoke <org.jcp.xml.dsig.internal.dom.DOMUtils: org.w3c.dom.Element getNextSiblingElement(org.w3c.dom.Node)>(r27);

        i0 = i0 + 1;

        if z0 == 0 goto label1;

        if i0 <= 5 goto label1;

        $r23 = new javax.xml.crypto.MarshalException;

        specialinvoke $r23.<javax.xml.crypto.MarshalException: void <init>(java.lang.String)>("A maxiumum of 5 transforms per Reference are allowed with secure validation");

        throw $r23;

     label2:
        r26 = staticinvoke <org.jcp.xml.dsig.internal.dom.DOMUtils: org.w3c.dom.Element getNextSiblingElement(org.w3c.dom.Node)>(r26);

     label3:
        r29 = r26;

        $r7 = staticinvoke <org.jcp.xml.dsig.internal.dom.DOMDigestMethod: javax.xml.crypto.dsig.DigestMethod unmarshal(org.w3c.dom.Element)>(r26);

        r0.<org.jcp.xml.dsig.internal.dom.DOMReference: javax.xml.crypto.dsig.DigestMethod digestMethod> = $r7;

        $r8 = r0.<org.jcp.xml.dsig.internal.dom.DOMReference: javax.xml.crypto.dsig.DigestMethod digestMethod>;

        r30 = interfaceinvoke $r8.<javax.xml.crypto.dsig.DigestMethod: java.lang.String getAlgorithm()>();

        if z0 == 0 goto label4;

        $r14 = "http://www.w3.org/2001/04/xmldsig-more#md5";

        $z2 = virtualinvoke $r14.<java.lang.String: boolean equals(java.lang.Object)>(r30);

        if $z2 == 0 goto label4;

        $r15 = new javax.xml.crypto.MarshalException;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("It is forbidden to use algorithm ");

        $r18 = r0.<org.jcp.xml.dsig.internal.dom.DOMReference: javax.xml.crypto.dsig.DigestMethod digestMethod>;

        $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r18);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" when secure validation is enabled");

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r15.<javax.xml.crypto.MarshalException: void <init>(java.lang.String)>($r21);

        throw $r15;

     label4:
        r31 = staticinvoke <org.jcp.xml.dsig.internal.dom.DOMUtils: org.w3c.dom.Element getNextSiblingElement(org.w3c.dom.Node)>(r29);

        $r9 = staticinvoke <com.sun.org.apache.xml.internal.security.utils.Base64: byte[] decode(org.w3c.dom.Element)>(r31);

        r0.<org.jcp.xml.dsig.internal.dom.DOMReference: byte[] digestValue> = $r9;

     label5:
        goto label7;

     label6:
        $r24 := @caughtexception;

        $r25 = new javax.xml.crypto.MarshalException;

        specialinvoke $r25.<javax.xml.crypto.MarshalException: void <init>(java.lang.Throwable)>($r24);

        throw $r25;

     label7:
        $r10 = staticinvoke <org.jcp.xml.dsig.internal.dom.DOMUtils: java.lang.String getAttributeValue(org.w3c.dom.Element,java.lang.String)>(r1, "URI");

        r0.<org.jcp.xml.dsig.internal.dom.DOMReference: java.lang.String uri> = $r10;

        r33 = interfaceinvoke r1.<org.w3c.dom.Element: org.w3c.dom.Attr getAttributeNodeNS(java.lang.String,java.lang.String)>(null, "Id");

        if r33 == null goto label8;

        $r13 = interfaceinvoke r33.<org.w3c.dom.Attr: java.lang.String getValue()>();

        r0.<org.jcp.xml.dsig.internal.dom.DOMReference: java.lang.String id> = $r13;

        interfaceinvoke r1.<org.w3c.dom.Element: void setIdAttributeNode(org.w3c.dom.Attr,boolean)>(r33, 1);

        goto label9;

     label8:
        r0.<org.jcp.xml.dsig.internal.dom.DOMReference: java.lang.String id> = null;

     label9:
        $r11 = staticinvoke <org.jcp.xml.dsig.internal.dom.DOMUtils: java.lang.String getAttributeValue(org.w3c.dom.Element,java.lang.String)>(r1, "Type");

        r0.<org.jcp.xml.dsig.internal.dom.DOMReference: java.lang.String type> = $r11;

        $r12 = interfaceinvoke r1.<org.w3c.dom.Element: org.w3c.dom.Attr getAttributeNodeNS(java.lang.String,java.lang.String)>(null, "URI");

        r0.<org.jcp.xml.dsig.internal.dom.DOMReference: org.w3c.dom.Attr here> = $r12;

        r0.<org.jcp.xml.dsig.internal.dom.DOMReference: org.w3c.dom.Element refElem> = r1;

        r0.<org.jcp.xml.dsig.internal.dom.DOMReference: java.util.List transforms> = $r5;

        r0.<org.jcp.xml.dsig.internal.dom.DOMReference: java.util.List allTransforms> = $r5;

        r0.<org.jcp.xml.dsig.internal.dom.DOMReference: javax.xml.crypto.Data appliedTransformData> = null;

        r0.<org.jcp.xml.dsig.internal.dom.DOMReference: java.security.Provider provider> = r3;

        return;

        catch com.sun.org.apache.xml.internal.security.exceptions.Base64DecodingException from label4 to label5 with label6;
    }

    public javax.xml.crypto.dsig.DigestMethod getDigestMethod()
    {
        org.jcp.xml.dsig.internal.dom.DOMReference r0;
        javax.xml.crypto.dsig.DigestMethod $r1;

        r0 := @this: org.jcp.xml.dsig.internal.dom.DOMReference;

        $r1 = r0.<org.jcp.xml.dsig.internal.dom.DOMReference: javax.xml.crypto.dsig.DigestMethod digestMethod>;

        return $r1;
    }

    public java.lang.String getId()
    {
        org.jcp.xml.dsig.internal.dom.DOMReference r0;
        java.lang.String $r1;

        r0 := @this: org.jcp.xml.dsig.internal.dom.DOMReference;

        $r1 = r0.<org.jcp.xml.dsig.internal.dom.DOMReference: java.lang.String id>;

        return $r1;
    }

    public java.lang.String getURI()
    {
        org.jcp.xml.dsig.internal.dom.DOMReference r0;
        java.lang.String $r1;

        r0 := @this: org.jcp.xml.dsig.internal.dom.DOMReference;

        $r1 = r0.<org.jcp.xml.dsig.internal.dom.DOMReference: java.lang.String uri>;

        return $r1;
    }

    public java.lang.String getType()
    {
        org.jcp.xml.dsig.internal.dom.DOMReference r0;
        java.lang.String $r1;

        r0 := @this: org.jcp.xml.dsig.internal.dom.DOMReference;

        $r1 = r0.<org.jcp.xml.dsig.internal.dom.DOMReference: java.lang.String type>;

        return $r1;
    }

    public java.util.List getTransforms()
    {
        org.jcp.xml.dsig.internal.dom.DOMReference r0;
        java.util.List $r1, $r2;

        r0 := @this: org.jcp.xml.dsig.internal.dom.DOMReference;

        $r1 = r0.<org.jcp.xml.dsig.internal.dom.DOMReference: java.util.List allTransforms>;

        $r2 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r1);

        return $r2;
    }

    public byte[] getDigestValue()
    {
        org.jcp.xml.dsig.internal.dom.DOMReference r0;
        byte[] $r1, $r2, $r4, $r5;
        java.lang.Object $r3;

        r0 := @this: org.jcp.xml.dsig.internal.dom.DOMReference;

        $r1 = r0.<org.jcp.xml.dsig.internal.dom.DOMReference: byte[] digestValue>;

        if $r1 != null goto label1;

        $r5 = null;

        goto label2;

     label1:
        $r2 = r0.<org.jcp.xml.dsig.internal.dom.DOMReference: byte[] digestValue>;

        $r3 = virtualinvoke $r2.<java.lang.Object: java.lang.Object clone()>();

        $r4 = (byte[]) $r3;

        $r5 = (byte[]) $r4;

     label2:
        return $r5;
    }

    public byte[] getCalculatedDigestValue()
    {
        org.jcp.xml.dsig.internal.dom.DOMReference r0;
        byte[] $r1, $r2, $r4, $r5;
        java.lang.Object $r3;

        r0 := @this: org.jcp.xml.dsig.internal.dom.DOMReference;

        $r1 = r0.<org.jcp.xml.dsig.internal.dom.DOMReference: byte[] calcDigestValue>;

        if $r1 != null goto label1;

        $r5 = null;

        goto label2;

     label1:
        $r2 = r0.<org.jcp.xml.dsig.internal.dom.DOMReference: byte[] calcDigestValue>;

        $r3 = virtualinvoke $r2.<java.lang.Object: java.lang.Object clone()>();

        $r4 = (byte[]) $r3;

        $r5 = (byte[]) $r4;

     label2:
        return $r5;
    }

    public void marshal(org.w3c.dom.Node, java.lang.String, javax.xml.crypto.dom.DOMCryptoContext) throws javax.xml.crypto.MarshalException
    {
        org.jcp.xml.dsig.internal.dom.DOMReference r0;
        org.w3c.dom.Node r1;
        java.lang.String r2, $r9, $r11, $r13, $r29;
        javax.xml.crypto.dom.DOMCryptoContext r3;
        org.w3c.dom.Document r4;
        int i0, i1;
        org.jcp.xml.dsig.internal.dom.DOMStructure r5;
        java.util.logging.Level $r6, $r19, $r32, $r39;
        java.util.logging.Logger $r7, $r20, $r33, $r40;
        boolean $z0, $z1, $z2;
        org.w3c.dom.Element $r8, $r10, $r12, $r14, $r17, $r22, $r24, $r26, $r34, r41, r42;
        java.util.List $r15, $r36, $r37;
        javax.xml.crypto.dsig.DigestMethod $r16;
        org.jcp.xml.dsig.internal.dom.DOMDigestMethod $r18;
        byte[] $r21, $r28;
        org.w3c.dom.Attr $r27;
        org.w3c.dom.Text $r30;
        java.lang.Object $r38;

        r0 := @this: org.jcp.xml.dsig.internal.dom.DOMReference;

        r1 := @parameter0: org.w3c.dom.Node;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: javax.xml.crypto.dom.DOMCryptoContext;

        $r7 = <org.jcp.xml.dsig.internal.dom.DOMReference: java.util.logging.Logger log>;

        $r6 = <java.util.logging.Level: java.util.logging.Level FINE>;

        $z0 = virtualinvoke $r7.<java.util.logging.Logger: boolean isLoggable(java.util.logging.Level)>($r6);

        if $z0 == 0 goto label1;

        $r40 = <org.jcp.xml.dsig.internal.dom.DOMReference: java.util.logging.Logger log>;

        $r39 = <java.util.logging.Level: java.util.logging.Level FINE>;

        virtualinvoke $r40.<java.util.logging.Logger: void log(java.util.logging.Level,java.lang.String)>($r39, "Marshalling Reference");

     label1:
        r4 = staticinvoke <org.jcp.xml.dsig.internal.dom.DOMUtils: org.w3c.dom.Document getOwnerDocument(org.w3c.dom.Node)>(r1);

        $r8 = staticinvoke <org.jcp.xml.dsig.internal.dom.DOMUtils: org.w3c.dom.Element createElement(org.w3c.dom.Document,java.lang.String,java.lang.String,java.lang.String)>(r4, "Reference", "http://www.w3.org/2000/09/xmldsig#", r2);

        r0.<org.jcp.xml.dsig.internal.dom.DOMReference: org.w3c.dom.Element refElem> = $r8;

        $r10 = r0.<org.jcp.xml.dsig.internal.dom.DOMReference: org.w3c.dom.Element refElem>;

        $r9 = r0.<org.jcp.xml.dsig.internal.dom.DOMReference: java.lang.String id>;

        staticinvoke <org.jcp.xml.dsig.internal.dom.DOMUtils: void setAttributeID(org.w3c.dom.Element,java.lang.String,java.lang.String)>($r10, "Id", $r9);

        $r12 = r0.<org.jcp.xml.dsig.internal.dom.DOMReference: org.w3c.dom.Element refElem>;

        $r11 = r0.<org.jcp.xml.dsig.internal.dom.DOMReference: java.lang.String uri>;

        staticinvoke <org.jcp.xml.dsig.internal.dom.DOMUtils: void setAttribute(org.w3c.dom.Element,java.lang.String,java.lang.String)>($r12, "URI", $r11);

        $r14 = r0.<org.jcp.xml.dsig.internal.dom.DOMReference: org.w3c.dom.Element refElem>;

        $r13 = r0.<org.jcp.xml.dsig.internal.dom.DOMReference: java.lang.String type>;

        staticinvoke <org.jcp.xml.dsig.internal.dom.DOMUtils: void setAttribute(org.w3c.dom.Element,java.lang.String,java.lang.String)>($r14, "Type", $r13);

        $r15 = r0.<org.jcp.xml.dsig.internal.dom.DOMReference: java.util.List allTransforms>;

        $z1 = interfaceinvoke $r15.<java.util.List: boolean isEmpty()>();

        if $z1 != 0 goto label3;

        r41 = staticinvoke <org.jcp.xml.dsig.internal.dom.DOMUtils: org.w3c.dom.Element createElement(org.w3c.dom.Document,java.lang.String,java.lang.String,java.lang.String)>(r4, "Transforms", "http://www.w3.org/2000/09/xmldsig#", r2);

        $r34 = r0.<org.jcp.xml.dsig.internal.dom.DOMReference: org.w3c.dom.Element refElem>;

        interfaceinvoke $r34.<org.w3c.dom.Element: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>(r41);

        i1 = 0;

        $r36 = r0.<org.jcp.xml.dsig.internal.dom.DOMReference: java.util.List allTransforms>;

        i0 = interfaceinvoke $r36.<java.util.List: int size()>();

     label2:
        if i1 >= i0 goto label3;

        $r37 = r0.<org.jcp.xml.dsig.internal.dom.DOMReference: java.util.List allTransforms>;

        $r38 = interfaceinvoke $r37.<java.util.List: java.lang.Object get(int)>(i1);

        r5 = (org.jcp.xml.dsig.internal.dom.DOMStructure) $r38;

        virtualinvoke r5.<org.jcp.xml.dsig.internal.dom.DOMStructure: void marshal(org.w3c.dom.Node,java.lang.String,javax.xml.crypto.dom.DOMCryptoContext)>(r41, r2, r3);

        i1 = i1 + 1;

        goto label2;

     label3:
        $r16 = r0.<org.jcp.xml.dsig.internal.dom.DOMReference: javax.xml.crypto.dsig.DigestMethod digestMethod>;

        $r18 = (org.jcp.xml.dsig.internal.dom.DOMDigestMethod) $r16;

        $r17 = r0.<org.jcp.xml.dsig.internal.dom.DOMReference: org.w3c.dom.Element refElem>;

        virtualinvoke $r18.<org.jcp.xml.dsig.internal.dom.DOMDigestMethod: void marshal(org.w3c.dom.Node,java.lang.String,javax.xml.crypto.dom.DOMCryptoContext)>($r17, r2, r3);

        $r20 = <org.jcp.xml.dsig.internal.dom.DOMReference: java.util.logging.Logger log>;

        $r19 = <java.util.logging.Level: java.util.logging.Level FINE>;

        $z2 = virtualinvoke $r20.<java.util.logging.Logger: boolean isLoggable(java.util.logging.Level)>($r19);

        if $z2 == 0 goto label4;

        $r33 = <org.jcp.xml.dsig.internal.dom.DOMReference: java.util.logging.Logger log>;

        $r32 = <java.util.logging.Level: java.util.logging.Level FINE>;

        virtualinvoke $r33.<java.util.logging.Logger: void log(java.util.logging.Level,java.lang.String)>($r32, "Adding digestValueElem");

     label4:
        r42 = staticinvoke <org.jcp.xml.dsig.internal.dom.DOMUtils: org.w3c.dom.Element createElement(org.w3c.dom.Document,java.lang.String,java.lang.String,java.lang.String)>(r4, "DigestValue", "http://www.w3.org/2000/09/xmldsig#", r2);

        $r21 = r0.<org.jcp.xml.dsig.internal.dom.DOMReference: byte[] digestValue>;

        if $r21 == null goto label5;

        $r28 = r0.<org.jcp.xml.dsig.internal.dom.DOMReference: byte[] digestValue>;

        $r29 = staticinvoke <com.sun.org.apache.xml.internal.security.utils.Base64: java.lang.String encode(byte[])>($r28);

        $r30 = interfaceinvoke r4.<org.w3c.dom.Document: org.w3c.dom.Text createTextNode(java.lang.String)>($r29);

        interfaceinvoke r42.<org.w3c.dom.Element: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>($r30);

     label5:
        $r22 = r0.<org.jcp.xml.dsig.internal.dom.DOMReference: org.w3c.dom.Element refElem>;

        interfaceinvoke $r22.<org.w3c.dom.Element: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>(r42);

        $r24 = r0.<org.jcp.xml.dsig.internal.dom.DOMReference: org.w3c.dom.Element refElem>;

        interfaceinvoke r1.<org.w3c.dom.Node: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>($r24);

        $r26 = r0.<org.jcp.xml.dsig.internal.dom.DOMReference: org.w3c.dom.Element refElem>;

        $r27 = interfaceinvoke $r26.<org.w3c.dom.Element: org.w3c.dom.Attr getAttributeNodeNS(java.lang.String,java.lang.String)>(null, "URI");

        r0.<org.jcp.xml.dsig.internal.dom.DOMReference: org.w3c.dom.Attr here> = $r27;

        return;
    }

    public void digest(javax.xml.crypto.dsig.XMLSignContext) throws javax.xml.crypto.dsig.XMLSignatureException
    {
        org.jcp.xml.dsig.internal.dom.DOMReference r0;
        javax.xml.crypto.dsig.XMLSignContext r1;
        java.lang.String r2, $r22, $r24;
        org.w3c.dom.Element r3, $r9, $r10;
        javax.xml.crypto.Data $r4, r25;
        byte[] $r5, $r6;
        java.util.logging.Level $r7, $r13, $r15, $r20;
        java.util.logging.Logger $r8, $r14, $r16, $r19;
        boolean $z0, $z1;
        org.w3c.dom.Document $r11;
        org.w3c.dom.Text $r12;
        javax.xml.crypto.dsig.XMLSignatureException $r17;
        java.lang.StringBuilder $r18, $r21, $r23;

        r0 := @this: org.jcp.xml.dsig.internal.dom.DOMReference;

        r1 := @parameter0: javax.xml.crypto.dsig.XMLSignContext;

        $r4 = r0.<org.jcp.xml.dsig.internal.dom.DOMReference: javax.xml.crypto.Data appliedTransformData>;

        if $r4 != null goto label1;

        r25 = specialinvoke r0.<org.jcp.xml.dsig.internal.dom.DOMReference: javax.xml.crypto.Data dereference(javax.xml.crypto.XMLCryptoContext)>(r1);

        goto label2;

     label1:
        r25 = r0.<org.jcp.xml.dsig.internal.dom.DOMReference: javax.xml.crypto.Data appliedTransformData>;

     label2:
        $r5 = specialinvoke r0.<org.jcp.xml.dsig.internal.dom.DOMReference: byte[] transform(javax.xml.crypto.Data,javax.xml.crypto.XMLCryptoContext)>(r25, r1);

        r0.<org.jcp.xml.dsig.internal.dom.DOMReference: byte[] digestValue> = $r5;

        $r6 = r0.<org.jcp.xml.dsig.internal.dom.DOMReference: byte[] digestValue>;

        r2 = staticinvoke <com.sun.org.apache.xml.internal.security.utils.Base64: java.lang.String encode(byte[])>($r6);

        $r8 = <org.jcp.xml.dsig.internal.dom.DOMReference: java.util.logging.Logger log>;

        $r7 = <java.util.logging.Level: java.util.logging.Level FINE>;

        $z0 = virtualinvoke $r8.<java.util.logging.Logger: boolean isLoggable(java.util.logging.Level)>($r7);

        if $z0 == 0 goto label3;

        $r19 = <org.jcp.xml.dsig.internal.dom.DOMReference: java.util.logging.Logger log>;

        $r20 = <java.util.logging.Level: java.util.logging.Level FINE>;

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        $r21 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Reference object uri = ");

        $r22 = r0.<org.jcp.xml.dsig.internal.dom.DOMReference: java.lang.String uri>;

        $r23 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r22);

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r19.<java.util.logging.Logger: void log(java.util.logging.Level,java.lang.String)>($r20, $r24);

     label3:
        $r9 = r0.<org.jcp.xml.dsig.internal.dom.DOMReference: org.w3c.dom.Element refElem>;

        r3 = staticinvoke <org.jcp.xml.dsig.internal.dom.DOMUtils: org.w3c.dom.Element getLastChildElement(org.w3c.dom.Node)>($r9);

        if r3 != null goto label4;

        $r17 = new javax.xml.crypto.dsig.XMLSignatureException;

        specialinvoke $r17.<javax.xml.crypto.dsig.XMLSignatureException: void <init>(java.lang.String)>("DigestValue element expected");

        throw $r17;

     label4:
        staticinvoke <org.jcp.xml.dsig.internal.dom.DOMUtils: void removeAllChildren(org.w3c.dom.Node)>(r3);

        $r10 = r0.<org.jcp.xml.dsig.internal.dom.DOMReference: org.w3c.dom.Element refElem>;

        $r11 = interfaceinvoke $r10.<org.w3c.dom.Element: org.w3c.dom.Document getOwnerDocument()>();

        $r12 = interfaceinvoke $r11.<org.w3c.dom.Document: org.w3c.dom.Text createTextNode(java.lang.String)>(r2);

        interfaceinvoke r3.<org.w3c.dom.Element: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>($r12);

        r0.<org.jcp.xml.dsig.internal.dom.DOMReference: boolean digested> = 1;

        $r14 = <org.jcp.xml.dsig.internal.dom.DOMReference: java.util.logging.Logger log>;

        $r13 = <java.util.logging.Level: java.util.logging.Level FINE>;

        $z1 = virtualinvoke $r14.<java.util.logging.Logger: boolean isLoggable(java.util.logging.Level)>($r13);

        if $z1 == 0 goto label5;

        $r16 = <org.jcp.xml.dsig.internal.dom.DOMReference: java.util.logging.Logger log>;

        $r15 = <java.util.logging.Level: java.util.logging.Level FINE>;

        virtualinvoke $r16.<java.util.logging.Logger: void log(java.util.logging.Level,java.lang.String)>($r15, "Reference digesting completed");

     label5:
        return;
    }

    public boolean validate(javax.xml.crypto.dsig.XMLValidateContext) throws javax.xml.crypto.dsig.XMLSignatureException
    {
        org.jcp.xml.dsig.internal.dom.DOMReference r0;
        javax.xml.crypto.dsig.XMLValidateContext r1;
        javax.xml.crypto.Data r2;
        boolean $z0, $z1, $z2, $z3, $z4;
        byte[] $r3, $r6, $r7, $r12, $r20;
        java.util.logging.Level $r4, $r10, $r18;
        java.util.logging.Logger $r5, $r9, $r17;
        java.lang.StringBuilder $r8, $r11, $r14, $r16, $r19, $r22;
        java.lang.String $r13, $r15, $r21, $r23;
        java.lang.NullPointerException $r24;

        r0 := @this: org.jcp.xml.dsig.internal.dom.DOMReference;

        r1 := @parameter0: javax.xml.crypto.dsig.XMLValidateContext;

        if r1 != null goto label1;

        $r24 = new java.lang.NullPointerException;

        specialinvoke $r24.<java.lang.NullPointerException: void <init>(java.lang.String)>("validateContext cannot be null");

        throw $r24;

     label1:
        $z0 = r0.<org.jcp.xml.dsig.internal.dom.DOMReference: boolean validated>;

        if $z0 == 0 goto label2;

        $z4 = r0.<org.jcp.xml.dsig.internal.dom.DOMReference: boolean validationStatus>;

        return $z4;

     label2:
        r2 = specialinvoke r0.<org.jcp.xml.dsig.internal.dom.DOMReference: javax.xml.crypto.Data dereference(javax.xml.crypto.XMLCryptoContext)>(r1);

        $r3 = specialinvoke r0.<org.jcp.xml.dsig.internal.dom.DOMReference: byte[] transform(javax.xml.crypto.Data,javax.xml.crypto.XMLCryptoContext)>(r2, r1);

        r0.<org.jcp.xml.dsig.internal.dom.DOMReference: byte[] calcDigestValue> = $r3;

        $r5 = <org.jcp.xml.dsig.internal.dom.DOMReference: java.util.logging.Logger log>;

        $r4 = <java.util.logging.Level: java.util.logging.Level FINE>;

        $z1 = virtualinvoke $r5.<java.util.logging.Logger: boolean isLoggable(java.util.logging.Level)>($r4);

        if $z1 == 0 goto label3;

        $r9 = <org.jcp.xml.dsig.internal.dom.DOMReference: java.util.logging.Logger log>;

        $r10 = <java.util.logging.Level: java.util.logging.Level FINE>;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Expected digest: ");

        $r12 = r0.<org.jcp.xml.dsig.internal.dom.DOMReference: byte[] digestValue>;

        $r13 = staticinvoke <com.sun.org.apache.xml.internal.security.utils.Base64: java.lang.String encode(byte[])>($r12);

        $r14 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r9.<java.util.logging.Logger: void log(java.util.logging.Level,java.lang.String)>($r10, $r15);

        $r17 = <org.jcp.xml.dsig.internal.dom.DOMReference: java.util.logging.Logger log>;

        $r18 = <java.util.logging.Level: java.util.logging.Level FINE>;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r19 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Actual digest: ");

        $r20 = r0.<org.jcp.xml.dsig.internal.dom.DOMReference: byte[] calcDigestValue>;

        $r21 = staticinvoke <com.sun.org.apache.xml.internal.security.utils.Base64: java.lang.String encode(byte[])>($r20);

        $r22 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r21);

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r17.<java.util.logging.Logger: void log(java.util.logging.Level,java.lang.String)>($r18, $r23);

     label3:
        $r7 = r0.<org.jcp.xml.dsig.internal.dom.DOMReference: byte[] digestValue>;

        $r6 = r0.<org.jcp.xml.dsig.internal.dom.DOMReference: byte[] calcDigestValue>;

        $z2 = staticinvoke <java.util.Arrays: boolean equals(byte[],byte[])>($r7, $r6);

        r0.<org.jcp.xml.dsig.internal.dom.DOMReference: boolean validationStatus> = $z2;

        r0.<org.jcp.xml.dsig.internal.dom.DOMReference: boolean validated> = 1;

        $z3 = r0.<org.jcp.xml.dsig.internal.dom.DOMReference: boolean validationStatus>;

        return $z3;
    }

    public javax.xml.crypto.Data getDereferencedData()
    {
        org.jcp.xml.dsig.internal.dom.DOMReference r0;
        javax.xml.crypto.Data $r1;

        r0 := @this: org.jcp.xml.dsig.internal.dom.DOMReference;

        $r1 = r0.<org.jcp.xml.dsig.internal.dom.DOMReference: javax.xml.crypto.Data derefData>;

        return $r1;
    }

    public java.io.InputStream getDigestInputStream()
    {
        org.jcp.xml.dsig.internal.dom.DOMReference r0;
        java.io.InputStream $r1;

        r0 := @this: org.jcp.xml.dsig.internal.dom.DOMReference;

        $r1 = r0.<org.jcp.xml.dsig.internal.dom.DOMReference: java.io.InputStream dis>;

        return $r1;
    }

    private javax.xml.crypto.Data dereference(javax.xml.crypto.XMLCryptoContext) throws javax.xml.crypto.dsig.XMLSignatureException
    {
        org.jcp.xml.dsig.internal.dom.DOMReference r0;
        javax.xml.crypto.XMLCryptoContext r1;
        java.util.logging.Level $r3, $r7, $r15;
        java.util.logging.Logger $r4, $r6, $r14;
        boolean $z0;
        java.lang.StringBuilder $r5, $r8, $r11, $r13, $r16, $r19;
        java.lang.Class $r9, $r17;
        java.lang.String $r10, $r12, $r18, $r20;
        javax.xml.crypto.URIReferenceException $r21;
        javax.xml.crypto.dsig.XMLSignatureException $r22;
        javax.xml.crypto.URIDereferencer r23;
        javax.xml.crypto.Data r24;

        r0 := @this: org.jcp.xml.dsig.internal.dom.DOMReference;

        r1 := @parameter0: javax.xml.crypto.XMLCryptoContext;

        r23 = interfaceinvoke r1.<javax.xml.crypto.XMLCryptoContext: javax.xml.crypto.URIDereferencer getURIDereferencer()>();

        if r23 != null goto label1;

        r23 = <org.jcp.xml.dsig.internal.dom.DOMURIDereferencer: javax.xml.crypto.URIDereferencer INSTANCE>;

     label1:
        r24 = interfaceinvoke r23.<javax.xml.crypto.URIDereferencer: javax.xml.crypto.Data dereference(javax.xml.crypto.URIReference,javax.xml.crypto.XMLCryptoContext)>(r0, r1);

        $r4 = <org.jcp.xml.dsig.internal.dom.DOMReference: java.util.logging.Logger log>;

        $r3 = <java.util.logging.Level: java.util.logging.Level FINE>;

        $z0 = virtualinvoke $r4.<java.util.logging.Logger: boolean isLoggable(java.util.logging.Level)>($r3);

        if $z0 == 0 goto label2;

        $r6 = <org.jcp.xml.dsig.internal.dom.DOMReference: java.util.logging.Logger log>;

        $r7 = <java.util.logging.Level: java.util.logging.Level FINE>;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("URIDereferencer class name: ");

        $r9 = virtualinvoke r23.<java.lang.Object: java.lang.Class getClass()>();

        $r10 = virtualinvoke $r9.<java.lang.Class: java.lang.String getName()>();

        $r11 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r6.<java.util.logging.Logger: void log(java.util.logging.Level,java.lang.String)>($r7, $r12);

        $r14 = <org.jcp.xml.dsig.internal.dom.DOMReference: java.util.logging.Logger log>;

        $r15 = <java.util.logging.Level: java.util.logging.Level FINE>;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Data class name: ");

        $r17 = virtualinvoke r24.<java.lang.Object: java.lang.Class getClass()>();

        $r18 = virtualinvoke $r17.<java.lang.Class: java.lang.String getName()>();

        $r19 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r14.<java.util.logging.Logger: void log(java.util.logging.Level,java.lang.String)>($r15, $r20);

     label2:
        goto label4;

     label3:
        $r21 := @caughtexception;

        $r22 = new javax.xml.crypto.dsig.XMLSignatureException;

        specialinvoke $r22.<javax.xml.crypto.dsig.XMLSignatureException: void <init>(java.lang.Throwable)>($r21);

        throw $r22;

     label4:
        return r24;

        catch javax.xml.crypto.URIReferenceException from label1 to label2 with label3;
    }

    private byte[] transform(javax.xml.crypto.Data, javax.xml.crypto.XMLCryptoContext) throws javax.xml.crypto.dsig.XMLSignatureException
    {
        org.jcp.xml.dsig.internal.dom.DOMReference r0;
        javax.xml.crypto.Data r1, $r34, r52, r60;
        javax.xml.crypto.XMLCryptoContext r2;
        java.lang.Boolean r3, r57;
        java.lang.String r5, $r39, r56;
        java.security.MessageDigest $r6, $r7, $r10, $r36, $r40;
        java.lang.Object $r8, $r31, $r33;
        org.jcp.xml.dsig.internal.DigesterOutputStream $r9, $r35, r50;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, z9, $z10, $z11, $z12;
        java.io.InputStream $r11, $r15, $r29;
        javax.xml.crypto.dsig.XMLSignatureException $r12, $r42, $r44, $r48;
        com.sun.org.apache.xml.internal.security.signature.XMLSignatureInput $r13, $r27, r58;
        javax.xml.crypto.OctetStreamData $r14, $r28;
        org.jcp.xml.dsig.internal.dom.DOMTransform $r16, r54;
        javax.xml.crypto.dsig.TransformService $r17, r59;
        java.util.List $r18, $r21, $r32, $r53;
        org.w3c.dom.Element $r19, $r22, $r24, $r25, $r26, r62;
        javax.xml.crypto.dom.DOMCryptoContext $r20;
        org.w3c.dom.Document $r23;
        org.jcp.xml.dsig.internal.dom.ApacheData $r30;
        int $i0, i1, i2;
        javax.xml.crypto.dsig.DigestMethod $r37;
        org.jcp.xml.dsig.internal.dom.DOMDigestMethod $r38;
        java.lang.Exception $r41;
        javax.xml.crypto.dsig.TransformException $r43;
        java.security.NoSuchAlgorithmException $r45, $r47;
        java.security.Provider $r46;
        com.sun.org.apache.xml.internal.security.utils.UnsyncBufferedOutputStream $r51;
        byte[] $r63;

        r0 := @this: org.jcp.xml.dsig.internal.dom.DOMReference;

        r1 := @parameter0: javax.xml.crypto.Data;

        r2 := @parameter1: javax.xml.crypto.XMLCryptoContext;

        $r6 = r0.<org.jcp.xml.dsig.internal.dom.DOMReference: java.security.MessageDigest md>;

        if $r6 != null goto label04;

     label01:
        $r37 = r0.<org.jcp.xml.dsig.internal.dom.DOMReference: javax.xml.crypto.dsig.DigestMethod digestMethod>;

        $r38 = (org.jcp.xml.dsig.internal.dom.DOMDigestMethod) $r37;

        $r39 = virtualinvoke $r38.<org.jcp.xml.dsig.internal.dom.DOMDigestMethod: java.lang.String getMessageDigestAlgorithm()>();

        $r40 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r39);

        r0.<org.jcp.xml.dsig.internal.dom.DOMReference: java.security.MessageDigest md> = $r40;

     label02:
        goto label04;

     label03:
        $r47 := @caughtexception;

        $r48 = new javax.xml.crypto.dsig.XMLSignatureException;

        specialinvoke $r48.<javax.xml.crypto.dsig.XMLSignatureException: void <init>(java.lang.Throwable)>($r47);

        throw $r48;

     label04:
        $r7 = r0.<org.jcp.xml.dsig.internal.dom.DOMReference: java.security.MessageDigest md>;

        virtualinvoke $r7.<java.security.MessageDigest: void reset()>();

        $r8 = interfaceinvoke r2.<javax.xml.crypto.XMLCryptoContext: java.lang.Object getProperty(java.lang.String)>("javax.xml.crypto.dsig.cacheReference");

        r3 = (java.lang.Boolean) $r8;

        if r3 == null goto label05;

        $z8 = virtualinvoke r3.<java.lang.Boolean: boolean booleanValue()>();

        if $z8 != 1 goto label05;

        $r34 = staticinvoke <org.jcp.xml.dsig.internal.dom.DOMReference: javax.xml.crypto.Data copyDerefData(javax.xml.crypto.Data)>(r1);

        r0.<org.jcp.xml.dsig.internal.dom.DOMReference: javax.xml.crypto.Data derefData> = $r34;

        $r35 = new org.jcp.xml.dsig.internal.DigesterOutputStream;

        $r36 = r0.<org.jcp.xml.dsig.internal.dom.DOMReference: java.security.MessageDigest md>;

        specialinvoke $r35.<org.jcp.xml.dsig.internal.DigesterOutputStream: void <init>(java.security.MessageDigest,boolean)>($r36, 1);

        r50 = $r35;

        goto label06;

     label05:
        $r9 = new org.jcp.xml.dsig.internal.DigesterOutputStream;

        $r10 = r0.<org.jcp.xml.dsig.internal.dom.DOMReference: java.security.MessageDigest md>;

        specialinvoke $r9.<org.jcp.xml.dsig.internal.DigesterOutputStream: void <init>(java.security.MessageDigest)>($r10);

        r50 = $r9;

     label06:
        $r51 = new com.sun.org.apache.xml.internal.security.utils.UnsyncBufferedOutputStream;

        specialinvoke $r51.<com.sun.org.apache.xml.internal.security.utils.UnsyncBufferedOutputStream: void <init>(java.io.OutputStream)>(r50);

        r52 = r1;

        i1 = 0;

        $r53 = r0.<org.jcp.xml.dsig.internal.dom.DOMReference: java.util.List transforms>;

        i2 = interfaceinvoke $r53.<java.util.List: int size()>();

     label07:
        if i1 >= i2 goto label13;

        $r32 = r0.<org.jcp.xml.dsig.internal.dom.DOMReference: java.util.List transforms>;

        $r33 = interfaceinvoke $r32.<java.util.List: java.lang.Object get(int)>(i1);

        r54 = (org.jcp.xml.dsig.internal.dom.DOMTransform) $r33;

     label08:
        $i0 = i2 - 1;

        if i1 >= $i0 goto label09;

        r52 = virtualinvoke r54.<org.jcp.xml.dsig.internal.dom.DOMTransform: javax.xml.crypto.Data transform(javax.xml.crypto.Data,javax.xml.crypto.XMLCryptoContext)>(r52, r2);

        goto label10;

     label09:
        r52 = virtualinvoke r54.<org.jcp.xml.dsig.internal.dom.DOMTransform: javax.xml.crypto.Data transform(javax.xml.crypto.Data,javax.xml.crypto.XMLCryptoContext,java.io.OutputStream)>(r52, r2, $r51);

     label10:
        goto label12;

     label11:
        $r43 := @caughtexception;

        $r44 = new javax.xml.crypto.dsig.XMLSignatureException;

        specialinvoke $r44.<javax.xml.crypto.dsig.XMLSignatureException: void <init>(java.lang.Throwable)>($r43);

        throw $r44;

     label12:
        i1 = i1 + 1;

        goto label07;

     label13:
        if r52 == null goto label30;

        z9 = <org.jcp.xml.dsig.internal.dom.DOMReference: boolean useC14N11>;

        r56 = "http://www.w3.org/TR/2001/REC-xml-c14n-20010315";

        $z1 = r2 instanceof javax.xml.crypto.dsig.XMLSignContext;

        if $z1 == 0 goto label18;

        if z9 != 0 goto label17;

        $r31 = interfaceinvoke r2.<javax.xml.crypto.XMLCryptoContext: java.lang.Object getProperty(java.lang.String)>("com.sun.org.apache.xml.internal.security.useC14N11");

        r57 = (java.lang.Boolean) $r31;

        if r57 == null goto label14;

        $z7 = virtualinvoke r57.<java.lang.Boolean: boolean booleanValue()>();

        if $z7 != 1 goto label14;

        $z10 = 1;

        goto label15;

     label14:
        $z10 = 0;

     label15:
        z9 = $z10;

        if $z10 == 0 goto label16;

        r56 = "http://www.w3.org/2006/12/xml-c14n11";

     label16:
        goto label18;

     label17:
        r56 = "http://www.w3.org/2006/12/xml-c14n11";

     label18:
        $z11 = r52 instanceof org.jcp.xml.dsig.internal.dom.ApacheData;

        if $z11 == 0 goto label19;

        $r30 = (org.jcp.xml.dsig.internal.dom.ApacheData) r52;

        r58 = interfaceinvoke $r30.<org.jcp.xml.dsig.internal.dom.ApacheData: com.sun.org.apache.xml.internal.security.signature.XMLSignatureInput getXMLSignatureInput()>();

        goto label26;

     label19:
        $z2 = r52 instanceof javax.xml.crypto.OctetStreamData;

        if $z2 == 0 goto label20;

        $r27 = new com.sun.org.apache.xml.internal.security.signature.XMLSignatureInput;

        $r28 = (javax.xml.crypto.OctetStreamData) r52;

        $r29 = virtualinvoke $r28.<javax.xml.crypto.OctetStreamData: java.io.InputStream getOctetStream()>();

        specialinvoke $r27.<com.sun.org.apache.xml.internal.security.signature.XMLSignatureInput: void <init>(java.io.InputStream)>($r29);

        r58 = $r27;

        goto label26;

     label20:
        $z3 = r52 instanceof javax.xml.crypto.NodeSetData;

        if $z3 == 0 goto label25;

     label21:
        r59 = staticinvoke <javax.xml.crypto.dsig.TransformService: javax.xml.crypto.dsig.TransformService getInstance(java.lang.String,java.lang.String)>(r56, "DOM");

     label22:
        goto label24;

     label23:
        $r45 := @caughtexception;

        $r46 = r0.<org.jcp.xml.dsig.internal.dom.DOMReference: java.security.Provider provider>;

        r59 = staticinvoke <javax.xml.crypto.dsig.TransformService: javax.xml.crypto.dsig.TransformService getInstance(java.lang.String,java.lang.String,java.security.Provider)>(r56, "DOM", $r46);

     label24:
        r60 = virtualinvoke r59.<javax.xml.crypto.dsig.TransformService: javax.xml.crypto.Data transform(javax.xml.crypto.Data,javax.xml.crypto.XMLCryptoContext)>(r52, r2);

        $r13 = new com.sun.org.apache.xml.internal.security.signature.XMLSignatureInput;

        $r14 = (javax.xml.crypto.OctetStreamData) r60;

        $r15 = virtualinvoke $r14.<javax.xml.crypto.OctetStreamData: java.io.InputStream getOctetStream()>();

        specialinvoke $r13.<com.sun.org.apache.xml.internal.security.signature.XMLSignatureInput: void <init>(java.io.InputStream)>($r15);

        r58 = $r13;

        goto label26;

     label25:
        $r12 = new javax.xml.crypto.dsig.XMLSignatureException;

        specialinvoke $r12.<javax.xml.crypto.dsig.XMLSignatureException: void <init>(java.lang.String)>("unrecognized Data type");

        throw $r12;

     label26:
        $z12 = r2 instanceof javax.xml.crypto.dsig.XMLSignContext;

        if $z12 == 0 goto label29;

        if z9 == 0 goto label29;

        $z4 = virtualinvoke r58.<com.sun.org.apache.xml.internal.security.signature.XMLSignatureInput: boolean isOctetStream()>();

        if $z4 != 0 goto label29;

        $z5 = virtualinvoke r58.<com.sun.org.apache.xml.internal.security.signature.XMLSignatureInput: boolean isOutputStreamSet()>();

        if $z5 != 0 goto label29;

        $r16 = new org.jcp.xml.dsig.internal.dom.DOMTransform;

        $r17 = staticinvoke <javax.xml.crypto.dsig.TransformService: javax.xml.crypto.dsig.TransformService getInstance(java.lang.String,java.lang.String)>(r56, "DOM");

        specialinvoke $r16.<org.jcp.xml.dsig.internal.dom.DOMTransform: void <init>(javax.xml.crypto.dsig.TransformService)>($r17);

        r5 = staticinvoke <org.jcp.xml.dsig.internal.dom.DOMUtils: java.lang.String getSignaturePrefix(javax.xml.crypto.XMLCryptoContext)>(r2);

        $r18 = r0.<org.jcp.xml.dsig.internal.dom.DOMReference: java.util.List allTransforms>;

        $z6 = interfaceinvoke $r18.<java.util.List: boolean isEmpty()>();

        if $z6 == 0 goto label27;

        $r22 = r0.<org.jcp.xml.dsig.internal.dom.DOMReference: org.w3c.dom.Element refElem>;

        $r23 = interfaceinvoke $r22.<org.w3c.dom.Element: org.w3c.dom.Document getOwnerDocument()>();

        r62 = staticinvoke <org.jcp.xml.dsig.internal.dom.DOMUtils: org.w3c.dom.Element createElement(org.w3c.dom.Document,java.lang.String,java.lang.String,java.lang.String)>($r23, "Transforms", "http://www.w3.org/2000/09/xmldsig#", r5);

        $r25 = r0.<org.jcp.xml.dsig.internal.dom.DOMReference: org.w3c.dom.Element refElem>;

        $r24 = r0.<org.jcp.xml.dsig.internal.dom.DOMReference: org.w3c.dom.Element refElem>;

        $r26 = staticinvoke <org.jcp.xml.dsig.internal.dom.DOMUtils: org.w3c.dom.Element getFirstChildElement(org.w3c.dom.Node)>($r24);

        interfaceinvoke $r25.<org.w3c.dom.Element: org.w3c.dom.Node insertBefore(org.w3c.dom.Node,org.w3c.dom.Node)>(r62, $r26);

        goto label28;

     label27:
        $r19 = r0.<org.jcp.xml.dsig.internal.dom.DOMReference: org.w3c.dom.Element refElem>;

        r62 = staticinvoke <org.jcp.xml.dsig.internal.dom.DOMUtils: org.w3c.dom.Element getFirstChildElement(org.w3c.dom.Node)>($r19);

     label28:
        $r20 = (javax.xml.crypto.dom.DOMCryptoContext) r2;

        virtualinvoke $r16.<org.jcp.xml.dsig.internal.dom.DOMTransform: void marshal(org.w3c.dom.Node,java.lang.String,javax.xml.crypto.dom.DOMCryptoContext)>(r62, r5, $r20);

        $r21 = r0.<org.jcp.xml.dsig.internal.dom.DOMReference: java.util.List allTransforms>;

        interfaceinvoke $r21.<java.util.List: boolean add(java.lang.Object)>($r16);

        virtualinvoke r58.<com.sun.org.apache.xml.internal.security.signature.XMLSignatureInput: void updateOutputStream(java.io.OutputStream,boolean)>($r51, 1);

        goto label30;

     label29:
        virtualinvoke r58.<com.sun.org.apache.xml.internal.security.signature.XMLSignatureInput: void updateOutputStream(java.io.OutputStream)>($r51);

     label30:
        virtualinvoke $r51.<java.io.OutputStream: void flush()>();

        if r3 == null goto label31;

        $z0 = virtualinvoke r3.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 != 1 goto label31;

        $r11 = virtualinvoke r50.<org.jcp.xml.dsig.internal.DigesterOutputStream: java.io.InputStream getInputStream()>();

        r0.<org.jcp.xml.dsig.internal.dom.DOMReference: java.io.InputStream dis> = $r11;

     label31:
        $r63 = virtualinvoke r50.<org.jcp.xml.dsig.internal.DigesterOutputStream: byte[] getDigestValue()>();

     label32:
        return $r63;

     label33:
        $r41 := @caughtexception;

        $r42 = new javax.xml.crypto.dsig.XMLSignatureException;

        specialinvoke $r42.<javax.xml.crypto.dsig.XMLSignatureException: void <init>(java.lang.Throwable)>($r41);

        throw $r42;

        catch java.security.NoSuchAlgorithmException from label01 to label02 with label03;
        catch javax.xml.crypto.dsig.TransformException from label08 to label10 with label11;
        catch java.security.NoSuchAlgorithmException from label21 to label22 with label23;
        catch java.lang.Exception from label13 to label32 with label33;
    }

    public org.w3c.dom.Node getHere()
    {
        org.jcp.xml.dsig.internal.dom.DOMReference r0;
        org.w3c.dom.Attr $r1;

        r0 := @this: org.jcp.xml.dsig.internal.dom.DOMReference;

        $r1 = r0.<org.jcp.xml.dsig.internal.dom.DOMReference: org.w3c.dom.Attr here>;

        return $r1;
    }

    public boolean equals(java.lang.Object)
    {
        org.jcp.xml.dsig.internal.dom.DOMReference r0;
        java.lang.Object r1;
        javax.xml.crypto.dsig.Reference r2;
        boolean z0, z1, $z4, $z5, $z6, $z7, $z8, $z9, $z10;
        java.lang.String $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r12, $r13, $r14, $r15, $r16;
        java.util.List $r10, $r11;
        byte[] $r17, $r18;
        javax.xml.crypto.dsig.DigestMethod $r19, $r20;

        r0 := @this: org.jcp.xml.dsig.internal.dom.DOMReference;

        r1 := @parameter0: java.lang.Object;

        if r0 != r1 goto label01;

        return 1;

     label01:
        $z4 = r1 instanceof javax.xml.crypto.dsig.Reference;

        if $z4 != 0 goto label02;

        return 0;

     label02:
        r2 = (javax.xml.crypto.dsig.Reference) r1;

        $r3 = r0.<org.jcp.xml.dsig.internal.dom.DOMReference: java.lang.String id>;

        if $r3 != null goto label04;

        $r14 = interfaceinvoke r2.<javax.xml.crypto.dsig.Reference: java.lang.String getId()>();

        if $r14 != null goto label03;

        $z6 = 1;

        goto label05;

     label03:
        $z6 = 0;

        goto label05;

     label04:
        $r4 = r0.<org.jcp.xml.dsig.internal.dom.DOMReference: java.lang.String id>;

        $r5 = interfaceinvoke r2.<javax.xml.crypto.dsig.Reference: java.lang.String getId()>();

        $z6 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r5);

     label05:
        z0 = $z6;

        $r15 = r0.<org.jcp.xml.dsig.internal.dom.DOMReference: java.lang.String uri>;

        if $r15 != null goto label07;

        $r13 = interfaceinvoke r2.<javax.xml.crypto.dsig.Reference: java.lang.String getURI()>();

        if $r13 != null goto label06;

        $z7 = 1;

        goto label08;

     label06:
        $z7 = 0;

        goto label08;

     label07:
        $r6 = r0.<org.jcp.xml.dsig.internal.dom.DOMReference: java.lang.String uri>;

        $r7 = interfaceinvoke r2.<javax.xml.crypto.dsig.Reference: java.lang.String getURI()>();

        $z7 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>($r7);

     label08:
        z1 = $z7;

        $r16 = r0.<org.jcp.xml.dsig.internal.dom.DOMReference: java.lang.String type>;

        if $r16 != null goto label10;

        $r12 = interfaceinvoke r2.<javax.xml.crypto.dsig.Reference: java.lang.String getType()>();

        if $r12 != null goto label09;

        $z8 = 1;

        goto label11;

     label09:
        $z8 = 0;

        goto label11;

     label10:
        $r8 = r0.<org.jcp.xml.dsig.internal.dom.DOMReference: java.lang.String type>;

        $r9 = interfaceinvoke r2.<javax.xml.crypto.dsig.Reference: java.lang.String getType()>();

        $z8 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>($r9);

     label11:
        $r17 = r0.<org.jcp.xml.dsig.internal.dom.DOMReference: byte[] digestValue>;

        $r18 = interfaceinvoke r2.<javax.xml.crypto.dsig.Reference: byte[] getDigestValue()>();

        staticinvoke <java.util.Arrays: boolean equals(byte[],byte[])>($r17, $r18);

        $r19 = r0.<org.jcp.xml.dsig.internal.dom.DOMReference: javax.xml.crypto.dsig.DigestMethod digestMethod>;

        $r20 = interfaceinvoke r2.<javax.xml.crypto.dsig.Reference: javax.xml.crypto.dsig.DigestMethod getDigestMethod()>();

        $z9 = virtualinvoke $r19.<java.lang.Object: boolean equals(java.lang.Object)>($r20);

        if $z9 == 0 goto label12;

        if z0 == 0 goto label12;

        if z1 == 0 goto label12;

        if $z8 == 0 goto label12;

        $r10 = r0.<org.jcp.xml.dsig.internal.dom.DOMReference: java.util.List allTransforms>;

        $r11 = interfaceinvoke r2.<javax.xml.crypto.dsig.Reference: java.util.List getTransforms()>();

        $z5 = interfaceinvoke $r10.<java.util.List: boolean equals(java.lang.Object)>($r11);

        if $z5 == 0 goto label12;

        $z10 = 1;

        goto label13;

     label12:
        $z10 = 0;

     label13:
        return $z10;
    }

    boolean isDigested()
    {
        org.jcp.xml.dsig.internal.dom.DOMReference r0;
        boolean $z0;

        r0 := @this: org.jcp.xml.dsig.internal.dom.DOMReference;

        $z0 = r0.<org.jcp.xml.dsig.internal.dom.DOMReference: boolean digested>;

        return $z0;
    }

    private static javax.xml.crypto.Data copyDerefData(javax.xml.crypto.Data)
    {
        javax.xml.crypto.Data r0;
        org.jcp.xml.dsig.internal.dom.ApacheData r1;
        com.sun.org.apache.xml.internal.security.signature.XMLSignatureInput r2;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        javax.xml.crypto.OctetStreamData $r3;
        java.io.InputStream $r4;
        java.lang.String $r5, $r6, $r16, $r23;
        org.jcp.xml.dsig.internal.dom.DOMSubTreeData $r7;
        org.w3c.dom.Node $r8;
        org.jcp.xml.dsig.internal.dom.DOMReference$2 $r9;
        java.io.IOException $r10;
        java.lang.StringBuilder $r11, $r14, $r15, $r18, $r21, $r22;
        java.util.logging.Logger $r12, $r19;
        java.util.logging.Level $r13, $r20;
        java.lang.Exception $r17;
        java.util.Set r24;

        r0 := @parameter0: javax.xml.crypto.Data;

        $z0 = r0 instanceof org.jcp.xml.dsig.internal.dom.ApacheData;

        if $z0 == 0 goto label9;

        r1 = (org.jcp.xml.dsig.internal.dom.ApacheData) r0;

        r2 = interfaceinvoke r1.<org.jcp.xml.dsig.internal.dom.ApacheData: com.sun.org.apache.xml.internal.security.signature.XMLSignatureInput getXMLSignatureInput()>();

        $z1 = virtualinvoke r2.<com.sun.org.apache.xml.internal.security.signature.XMLSignatureInput: boolean isNodeSet()>();

        if $z1 == 0 goto label4;

     label1:
        r24 = virtualinvoke r2.<com.sun.org.apache.xml.internal.security.signature.XMLSignatureInput: java.util.Set getNodeSet()>();

        $r9 = new org.jcp.xml.dsig.internal.dom.DOMReference$2;

        specialinvoke $r9.<org.jcp.xml.dsig.internal.dom.DOMReference$2: void <init>(java.util.Set)>(r24);

     label2:
        return $r9;

     label3:
        $r17 := @caughtexception;

        $r19 = <org.jcp.xml.dsig.internal.dom.DOMReference: java.util.logging.Logger log>;

        $r20 = <java.util.logging.Level: java.util.logging.Level WARNING>;

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        $r21 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("cannot cache dereferenced data: ");

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r17);

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r19.<java.util.logging.Logger: void log(java.util.logging.Level,java.lang.String)>($r20, $r23);

        return null;

     label4:
        $z2 = virtualinvoke r2.<com.sun.org.apache.xml.internal.security.signature.XMLSignatureInput: boolean isElement()>();

        if $z2 == 0 goto label5;

        $r7 = new org.jcp.xml.dsig.internal.dom.DOMSubTreeData;

        $r8 = virtualinvoke r2.<com.sun.org.apache.xml.internal.security.signature.XMLSignatureInput: org.w3c.dom.Node getSubNode()>();

        $z5 = virtualinvoke r2.<com.sun.org.apache.xml.internal.security.signature.XMLSignatureInput: boolean isExcludeComments()>();

        specialinvoke $r7.<org.jcp.xml.dsig.internal.dom.DOMSubTreeData: void <init>(org.w3c.dom.Node,boolean)>($r8, $z5);

        return $r7;

     label5:
        $z3 = virtualinvoke r2.<com.sun.org.apache.xml.internal.security.signature.XMLSignatureInput: boolean isOctetStream()>();

        if $z3 != 0 goto label6;

        $z4 = virtualinvoke r2.<com.sun.org.apache.xml.internal.security.signature.XMLSignatureInput: boolean isByteArray()>();

        if $z4 == 0 goto label9;

     label6:
        $r3 = new javax.xml.crypto.OctetStreamData;

        $r4 = virtualinvoke r2.<com.sun.org.apache.xml.internal.security.signature.XMLSignatureInput: java.io.InputStream getOctetStream()>();

        $r5 = virtualinvoke r2.<com.sun.org.apache.xml.internal.security.signature.XMLSignatureInput: java.lang.String getSourceURI()>();

        $r6 = virtualinvoke r2.<com.sun.org.apache.xml.internal.security.signature.XMLSignatureInput: java.lang.String getMIMEType()>();

        specialinvoke $r3.<javax.xml.crypto.OctetStreamData: void <init>(java.io.InputStream,java.lang.String,java.lang.String)>($r4, $r5, $r6);

     label7:
        return $r3;

     label8:
        $r10 := @caughtexception;

        $r12 = <org.jcp.xml.dsig.internal.dom.DOMReference: java.util.logging.Logger log>;

        $r13 = <java.util.logging.Level: java.util.logging.Level WARNING>;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("cannot cache dereferenced data: ");

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r10);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r12.<java.util.logging.Logger: void log(java.util.logging.Level,java.lang.String)>($r13, $r16);

        return null;

     label9:
        return r0;

        catch java.lang.Exception from label1 to label2 with label3;
        catch java.io.IOException from label6 to label7 with label8;
    }

    static void <clinit>()
    {
        org.jcp.xml.dsig.internal.dom.DOMReference$1 $r0;
        java.lang.Object $r1;
        java.lang.Boolean $r2;
        boolean $z0;
        java.util.logging.Logger $r3;

        <org.jcp.xml.dsig.internal.dom.DOMReference: int MAXIMUM_TRANSFORM_COUNT> = 5;

        $r0 = new org.jcp.xml.dsig.internal.dom.DOMReference$1;

        specialinvoke $r0.<org.jcp.xml.dsig.internal.dom.DOMReference$1: void <init>()>();

        $r1 = staticinvoke <java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedAction)>($r0);

        $r2 = (java.lang.Boolean) $r1;

        $z0 = virtualinvoke $r2.<java.lang.Boolean: boolean booleanValue()>();

        <org.jcp.xml.dsig.internal.dom.DOMReference: boolean useC14N11> = $z0;

        $r3 = staticinvoke <java.util.logging.Logger: java.util.logging.Logger getLogger(java.lang.String)>("org.jcp.xml.dsig.internal.dom");

        <org.jcp.xml.dsig.internal.dom.DOMReference: java.util.logging.Logger log> = $r3;

        return;
    }
}
