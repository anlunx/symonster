public final class com.opengamma.analytics.financial.interestrate.payments.provider.CouponONArithmeticAverageDiscountingMethod extends java.lang.Object
{
    private static final com.opengamma.analytics.financial.interestrate.payments.provider.CouponONArithmeticAverageDiscountingMethod INSTANCE;

    public static com.opengamma.analytics.financial.interestrate.payments.provider.CouponONArithmeticAverageDiscountingMethod getInstance()
    {
        com.opengamma.analytics.financial.interestrate.payments.provider.CouponONArithmeticAverageDiscountingMethod $r0;

        $r0 = <com.opengamma.analytics.financial.interestrate.payments.provider.CouponONArithmeticAverageDiscountingMethod: com.opengamma.analytics.financial.interestrate.payments.provider.CouponONArithmeticAverageDiscountingMethod INSTANCE>;

        return $r0;
    }

    private void <init>()
    {
        com.opengamma.analytics.financial.interestrate.payments.provider.CouponONArithmeticAverageDiscountingMethod r0;

        r0 := @this: com.opengamma.analytics.financial.interestrate.payments.provider.CouponONArithmeticAverageDiscountingMethod;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public com.opengamma.util.money.MultipleCurrencyAmount presentValue(com.opengamma.analytics.financial.interestrate.payments.derivative.CouponONArithmeticAverage, com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface)
    {
        com.opengamma.analytics.financial.interestrate.payments.provider.CouponONArithmeticAverageDiscountingMethod r0;
        com.opengamma.analytics.financial.interestrate.payments.derivative.CouponONArithmeticAverage r1;
        com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface r2;
        double[] r3, r4, r5, r6;
        int i0, i1;
        double d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, d11, d12;
        com.opengamma.util.money.Currency $r9, $r11;
        java.lang.Double $r10;
        com.opengamma.util.money.MultipleCurrencyAmount $r12;
        com.opengamma.analytics.financial.instrument.index.IndexON $r13;

        r0 := @this: com.opengamma.analytics.financial.interestrate.payments.provider.CouponONArithmeticAverageDiscountingMethod;

        r1 := @parameter0: com.opengamma.analytics.financial.interestrate.payments.derivative.CouponONArithmeticAverage;

        r2 := @parameter1: com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "Coupon");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, "Multi-curve provider");

        r3 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.payments.derivative.CouponONArithmeticAverage: double[] getFixingPeriodAccrualFactors()>();

        r4 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.payments.derivative.CouponONArithmeticAverage: double[] getFixingPeriodStartTimes()>();

        r5 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.payments.derivative.CouponONArithmeticAverage: double[] getFixingPeriodEndTimes()>();

        i0 = lengthof r3;

        r6 = newarray (double)[i0];

        d11 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.payments.derivative.CouponONArithmeticAverage: double getRateAccrued()>();

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        $r13 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.payments.derivative.CouponONArithmeticAverage: com.opengamma.analytics.financial.instrument.index.IndexON getIndex()>();

        $d6 = r4[i1];

        $d5 = r5[i1];

        $d4 = r3[i1];

        $d7 = interfaceinvoke r2.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface: double getSimplyCompoundForwardRate(com.opengamma.analytics.financial.instrument.index.IndexON,double,double,double)>($r13, $d6, $d5, $d4);

        r6[i1] = $d7;

        $d9 = r6[i1];

        $d8 = r3[i1];

        $d10 = $d9 * $d8;

        d11 = d11 + $d10;

        i1 = i1 + 1;

        goto label1;

     label2:
        $r9 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.payments.derivative.CouponONArithmeticAverage: com.opengamma.util.money.Currency getCurrency()>();

        $d1 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.payments.derivative.CouponONArithmeticAverage: double getPaymentTime()>();

        $r10 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d1);

        d12 = interfaceinvoke r2.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface: double getDiscountFactor(com.opengamma.util.money.Currency,java.lang.Double)>($r9, $r10);

        $d2 = d12 * d11;

        $d3 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.payments.derivative.CouponONArithmeticAverage: double getNotional()>();

        d0 = $d2 * $d3;

        $r11 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.payments.derivative.CouponONArithmeticAverage: com.opengamma.util.money.Currency getCurrency()>();

        $r12 = staticinvoke <com.opengamma.util.money.MultipleCurrencyAmount: com.opengamma.util.money.MultipleCurrencyAmount of(com.opengamma.util.money.Currency,double)>($r11, d0);

        return $r12;
    }

    public com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyMulticurveSensitivity presentValueCurveSensitivity(com.opengamma.analytics.financial.interestrate.payments.derivative.CouponONArithmeticAverage, com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface)
    {
        com.opengamma.analytics.financial.interestrate.payments.provider.CouponONArithmeticAverageDiscountingMethod r0;
        com.opengamma.analytics.financial.interestrate.payments.derivative.CouponONArithmeticAverage r1;
        com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface r2;
        double[] r3, r4, r5, r6, r7;
        int i0, i1, i2, i3;
        double d1, d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21, $d22, $d23, $d24, $d25, d26, d27;
        com.opengamma.util.money.Currency $r13, $r18, $r26;
        java.lang.Double $r14;
        java.util.HashMap $r15, $r21;
        java.util.ArrayList $r16, $r22;
        com.opengamma.util.tuple.DoublesPair $r17;
        java.lang.String $r19, $r24;
        com.opengamma.analytics.financial.instrument.index.IndexON $r23, $r29;
        com.opengamma.analytics.financial.provider.sensitivity.multicurve.MulticurveSensitivity $r27;
        com.opengamma.analytics.financial.provider.sensitivity.multicurve.SimplyCompoundedForwardSensitivity $r28;
        com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyMulticurveSensitivity r31;

        r0 := @this: com.opengamma.analytics.financial.interestrate.payments.provider.CouponONArithmeticAverageDiscountingMethod;

        r1 := @parameter0: com.opengamma.analytics.financial.interestrate.payments.derivative.CouponONArithmeticAverage;

        r2 := @parameter1: com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "Coupon");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, "Multi-curve provider");

        r3 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.payments.derivative.CouponONArithmeticAverage: double[] getFixingPeriodAccrualFactors()>();

        r4 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.payments.derivative.CouponONArithmeticAverage: double[] getFixingPeriodStartTimes()>();

        r5 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.payments.derivative.CouponONArithmeticAverage: double[] getFixingPeriodEndTimes()>();

        i0 = lengthof r3;

        r6 = newarray (double)[i0];

        d26 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.payments.derivative.CouponONArithmeticAverage: double getRateAccrued()>();

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        $r29 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.payments.derivative.CouponONArithmeticAverage: com.opengamma.analytics.financial.instrument.index.IndexON getIndex()>();

        $d21 = r4[i1];

        $d20 = r5[i1];

        $d19 = r3[i1];

        $d22 = interfaceinvoke r2.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface: double getSimplyCompoundForwardRate(com.opengamma.analytics.financial.instrument.index.IndexON,double,double,double)>($r29, $d21, $d20, $d19);

        r6[i1] = $d22;

        $d24 = r6[i1];

        $d23 = r3[i1];

        $d25 = $d24 * $d23;

        d26 = d26 + $d25;

        i1 = i1 + 1;

        goto label1;

     label2:
        $r13 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.payments.derivative.CouponONArithmeticAverage: com.opengamma.util.money.Currency getCurrency()>();

        $d3 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.payments.derivative.CouponONArithmeticAverage: double getPaymentTime()>();

        $r14 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d3);

        d27 = interfaceinvoke r2.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface: double getDiscountFactor(com.opengamma.util.money.Currency,java.lang.Double)>($r13, $r14);

        $d4 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.payments.derivative.CouponONArithmeticAverage: double getNotional()>();

        $d5 = d26 * $d4;

        d1 = $d5 * 1.0;

        $d6 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.payments.derivative.CouponONArithmeticAverage: double getNotional()>();

        $d7 = d27 * $d6;

        d2 = $d7 * 1.0;

        r7 = newarray (double)[i0];

        i2 = 0;

     label3:
        if i2 >= i0 goto label4;

        $d17 = r3[i2];

        $d18 = $d17 * d2;

        r7[i2] = $d18;

        i2 = i2 + 1;

        goto label3;

     label4:
        $r15 = new java.util.HashMap;

        specialinvoke $r15.<java.util.HashMap: void <init>()>();

        $r16 = new java.util.ArrayList;

        specialinvoke $r16.<java.util.ArrayList: void <init>()>();

        $d8 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.payments.derivative.CouponONArithmeticAverage: double getPaymentTime()>();

        $d9 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.payments.derivative.CouponONArithmeticAverage: double getPaymentTime()>();

        $d10 = neg $d9;

        $d11 = $d10 * d27;

        $d12 = $d11 * d1;

        $r17 = staticinvoke <com.opengamma.util.tuple.DoublesPair: com.opengamma.util.tuple.DoublesPair of(double,double)>($d8, $d12);

        interfaceinvoke $r16.<java.util.List: boolean add(java.lang.Object)>($r17);

        $r18 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.payments.derivative.CouponONArithmeticAverage: com.opengamma.util.money.Currency getCurrency()>();

        $r19 = interfaceinvoke r2.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface: java.lang.String getName(com.opengamma.util.money.Currency)>($r18);

        interfaceinvoke $r15.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r19, $r16);

        $r21 = new java.util.HashMap;

        specialinvoke $r21.<java.util.HashMap: void <init>()>();

        $r22 = new java.util.ArrayList;

        specialinvoke $r22.<java.util.ArrayList: void <init>()>();

        i3 = 0;

     label5:
        if i3 >= i0 goto label6;

        $r28 = new com.opengamma.analytics.financial.provider.sensitivity.multicurve.SimplyCompoundedForwardSensitivity;

        $d16 = r4[i3];

        $d15 = r5[i3];

        $d14 = r3[i3];

        $d13 = r7[i3];

        specialinvoke $r28.<com.opengamma.analytics.financial.provider.sensitivity.multicurve.SimplyCompoundedForwardSensitivity: void <init>(double,double,double,double)>($d16, $d15, $d14, $d13);

        interfaceinvoke $r22.<java.util.List: boolean add(java.lang.Object)>($r28);

        i3 = i3 + 1;

        goto label5;

     label6:
        $r23 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.payments.derivative.CouponONArithmeticAverage: com.opengamma.analytics.financial.instrument.index.IndexON getIndex()>();

        $r24 = interfaceinvoke r2.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface: java.lang.String getName(com.opengamma.analytics.financial.instrument.index.IndexON)>($r23);

        interfaceinvoke $r21.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r24, $r22);

        $r26 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.payments.derivative.CouponONArithmeticAverage: com.opengamma.util.money.Currency getCurrency()>();

        $r27 = staticinvoke <com.opengamma.analytics.financial.provider.sensitivity.multicurve.MulticurveSensitivity: com.opengamma.analytics.financial.provider.sensitivity.multicurve.MulticurveSensitivity of(java.util.Map,java.util.Map)>($r15, $r21);

        r31 = staticinvoke <com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyMulticurveSensitivity: com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyMulticurveSensitivity of(com.opengamma.util.money.Currency,com.opengamma.analytics.financial.provider.sensitivity.multicurve.MulticurveSensitivity)>($r26, $r27);

        return r31;
    }

    static void <clinit>()
    {
        com.opengamma.analytics.financial.interestrate.payments.provider.CouponONArithmeticAverageDiscountingMethod $r0;

        $r0 = new com.opengamma.analytics.financial.interestrate.payments.provider.CouponONArithmeticAverageDiscountingMethod;

        specialinvoke $r0.<com.opengamma.analytics.financial.interestrate.payments.provider.CouponONArithmeticAverageDiscountingMethod: void <init>()>();

        <com.opengamma.analytics.financial.interestrate.payments.provider.CouponONArithmeticAverageDiscountingMethod: com.opengamma.analytics.financial.interestrate.payments.provider.CouponONArithmeticAverageDiscountingMethod INSTANCE> = $r0;

        return;
    }
}
