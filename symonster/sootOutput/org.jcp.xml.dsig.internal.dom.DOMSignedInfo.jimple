public final class org.jcp.xml.dsig.internal.dom.DOMSignedInfo extends org.jcp.xml.dsig.internal.dom.DOMStructure implements javax.xml.crypto.dsig.SignedInfo
{
    public static final int MAXIMUM_REFERENCE_COUNT;
    private static java.util.logging.Logger log;
    private static final java.lang.String ALGO_ID_SIGNATURE_NOT_RECOMMENDED_RSA_MD5;
    private static final java.lang.String ALGO_ID_MAC_HMAC_NOT_RECOMMENDED_MD5;
    private java.util.List references;
    private javax.xml.crypto.dsig.CanonicalizationMethod canonicalizationMethod;
    private javax.xml.crypto.dsig.SignatureMethod signatureMethod;
    private java.lang.String id;
    private org.w3c.dom.Document ownerDoc;
    private org.w3c.dom.Element localSiElem;
    private java.io.InputStream canonData;

    public void <init>(javax.xml.crypto.dsig.CanonicalizationMethod, javax.xml.crypto.dsig.SignatureMethod, java.util.List)
    {
        org.jcp.xml.dsig.internal.dom.DOMSignedInfo r0;
        javax.xml.crypto.dsig.CanonicalizationMethod r1;
        javax.xml.crypto.dsig.SignatureMethod r2;
        java.util.List r3, $r6, $r7, $r8, $r9;
        int i0, i1;
        java.lang.Object r4;
        java.util.ArrayList $r5;
        boolean $z0, $z1;
        java.lang.ClassCastException $r10;
        java.lang.IllegalArgumentException $r11;
        java.lang.NullPointerException $r12;

        r0 := @this: org.jcp.xml.dsig.internal.dom.DOMSignedInfo;

        r1 := @parameter0: javax.xml.crypto.dsig.CanonicalizationMethod;

        r2 := @parameter1: javax.xml.crypto.dsig.SignatureMethod;

        r3 := @parameter2: java.util.List;

        specialinvoke r0.<org.jcp.xml.dsig.internal.dom.DOMStructure: void <init>()>();

        if r1 == null goto label1;

        if r2 == null goto label1;

        if r3 != null goto label2;

     label1:
        $r12 = new java.lang.NullPointerException;

        specialinvoke $r12.<java.lang.NullPointerException: void <init>()>();

        throw $r12;

     label2:
        r0.<org.jcp.xml.dsig.internal.dom.DOMSignedInfo: javax.xml.crypto.dsig.CanonicalizationMethod canonicalizationMethod> = r1;

        r0.<org.jcp.xml.dsig.internal.dom.DOMSignedInfo: javax.xml.crypto.dsig.SignatureMethod signatureMethod> = r2;

        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>(java.util.Collection)>(r3);

        $r6 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r5);

        r0.<org.jcp.xml.dsig.internal.dom.DOMSignedInfo: java.util.List references> = $r6;

        $r7 = r0.<org.jcp.xml.dsig.internal.dom.DOMSignedInfo: java.util.List references>;

        $z0 = interfaceinvoke $r7.<java.util.List: boolean isEmpty()>();

        if $z0 == 0 goto label3;

        $r11 = new java.lang.IllegalArgumentException;

        specialinvoke $r11.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("list of references must contain at least one entry");

        throw $r11;

     label3:
        i1 = 0;

        $r8 = r0.<org.jcp.xml.dsig.internal.dom.DOMSignedInfo: java.util.List references>;

        i0 = interfaceinvoke $r8.<java.util.List: int size()>();

     label4:
        if i1 >= i0 goto label6;

        $r9 = r0.<org.jcp.xml.dsig.internal.dom.DOMSignedInfo: java.util.List references>;

        r4 = interfaceinvoke $r9.<java.util.List: java.lang.Object get(int)>(i1);

        $z1 = r4 instanceof javax.xml.crypto.dsig.Reference;

        if $z1 != 0 goto label5;

        $r10 = new java.lang.ClassCastException;

        specialinvoke $r10.<java.lang.ClassCastException: void <init>(java.lang.String)>("list of references contains an illegal type");

        throw $r10;

     label5:
        i1 = i1 + 1;

        goto label4;

     label6:
        return;
    }

    public void <init>(javax.xml.crypto.dsig.CanonicalizationMethod, javax.xml.crypto.dsig.SignatureMethod, java.util.List, java.lang.String)
    {
        org.jcp.xml.dsig.internal.dom.DOMSignedInfo r0;
        javax.xml.crypto.dsig.CanonicalizationMethod r1;
        javax.xml.crypto.dsig.SignatureMethod r2;
        java.util.List r3;
        java.lang.String r4;

        r0 := @this: org.jcp.xml.dsig.internal.dom.DOMSignedInfo;

        r1 := @parameter0: javax.xml.crypto.dsig.CanonicalizationMethod;

        r2 := @parameter1: javax.xml.crypto.dsig.SignatureMethod;

        r3 := @parameter2: java.util.List;

        r4 := @parameter3: java.lang.String;

        specialinvoke r0.<org.jcp.xml.dsig.internal.dom.DOMSignedInfo: void <init>(javax.xml.crypto.dsig.CanonicalizationMethod,javax.xml.crypto.dsig.SignatureMethod,java.util.List)>(r1, r2, r3);

        r0.<org.jcp.xml.dsig.internal.dom.DOMSignedInfo: java.lang.String id> = r4;

        return;
    }

    public void <init>(org.w3c.dom.Element, javax.xml.crypto.XMLCryptoContext, java.security.Provider) throws javax.xml.crypto.MarshalException
    {
        org.jcp.xml.dsig.internal.dom.DOMSignedInfo r0;
        org.w3c.dom.Element r1, r4, r5, r27;
        javax.xml.crypto.XMLCryptoContext r2;
        java.security.Provider r3;
        boolean z0, $z2, $z3;
        java.lang.String r6, $r10, $r18, $r25, $r26;
        org.w3c.dom.Document $r9;
        org.jcp.xml.dsig.internal.dom.DOMCanonicalizationMethod $r11;
        javax.xml.crypto.dsig.SignatureMethod $r12, $r13, $r22;
        java.util.ArrayList $r14;
        java.util.List $r15;
        org.jcp.xml.dsig.internal.dom.DOMReference $r16;
        javax.xml.crypto.MarshalException $r17, $r19;
        java.lang.StringBuilder $r20, $r21, $r23, $r24;
        int i0;

        r0 := @this: org.jcp.xml.dsig.internal.dom.DOMSignedInfo;

        r1 := @parameter0: org.w3c.dom.Element;

        r2 := @parameter1: javax.xml.crypto.XMLCryptoContext;

        r3 := @parameter2: java.security.Provider;

        specialinvoke r0.<org.jcp.xml.dsig.internal.dom.DOMStructure: void <init>()>();

        r0.<org.jcp.xml.dsig.internal.dom.DOMSignedInfo: org.w3c.dom.Element localSiElem> = r1;

        $r9 = interfaceinvoke r1.<org.w3c.dom.Element: org.w3c.dom.Document getOwnerDocument()>();

        r0.<org.jcp.xml.dsig.internal.dom.DOMSignedInfo: org.w3c.dom.Document ownerDoc> = $r9;

        $r10 = staticinvoke <org.jcp.xml.dsig.internal.dom.DOMUtils: java.lang.String getAttributeValue(org.w3c.dom.Element,java.lang.String)>(r1, "Id");

        r0.<org.jcp.xml.dsig.internal.dom.DOMSignedInfo: java.lang.String id> = $r10;

        r4 = staticinvoke <org.jcp.xml.dsig.internal.dom.DOMUtils: org.w3c.dom.Element getFirstChildElement(org.w3c.dom.Node)>(r1);

        $r11 = new org.jcp.xml.dsig.internal.dom.DOMCanonicalizationMethod;

        specialinvoke $r11.<org.jcp.xml.dsig.internal.dom.DOMCanonicalizationMethod: void <init>(org.w3c.dom.Element,javax.xml.crypto.XMLCryptoContext,java.security.Provider)>(r4, r2, r3);

        r0.<org.jcp.xml.dsig.internal.dom.DOMSignedInfo: javax.xml.crypto.dsig.CanonicalizationMethod canonicalizationMethod> = $r11;

        r5 = staticinvoke <org.jcp.xml.dsig.internal.dom.DOMUtils: org.w3c.dom.Element getNextSiblingElement(org.w3c.dom.Node)>(r4);

        $r12 = staticinvoke <org.jcp.xml.dsig.internal.dom.DOMSignatureMethod: javax.xml.crypto.dsig.SignatureMethod unmarshal(org.w3c.dom.Element)>(r5);

        r0.<org.jcp.xml.dsig.internal.dom.DOMSignedInfo: javax.xml.crypto.dsig.SignatureMethod signatureMethod> = $r12;

        z0 = staticinvoke <org.jcp.xml.dsig.internal.dom.Utils: boolean secureValidation(javax.xml.crypto.XMLCryptoContext)>(r2);

        $r13 = r0.<org.jcp.xml.dsig.internal.dom.DOMSignedInfo: javax.xml.crypto.dsig.SignatureMethod signatureMethod>;

        r6 = interfaceinvoke $r13.<javax.xml.crypto.dsig.SignatureMethod: java.lang.String getAlgorithm()>();

        if z0 == 0 goto label2;

        $r18 = "http://www.w3.org/2001/04/xmldsig-more#hmac-md5";

        $z2 = virtualinvoke $r18.<java.lang.String: boolean equals(java.lang.Object)>(r6);

        if $z2 != 0 goto label1;

        $r26 = "http://www.w3.org/2001/04/xmldsig-more#rsa-md5";

        $z3 = virtualinvoke $r26.<java.lang.String: boolean equals(java.lang.Object)>(r6);

        if $z3 == 0 goto label2;

     label1:
        $r19 = new javax.xml.crypto.MarshalException;

        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("It is forbidden to use algorithm ");

        $r22 = r0.<org.jcp.xml.dsig.internal.dom.DOMSignedInfo: javax.xml.crypto.dsig.SignatureMethod signatureMethod>;

        $r23 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r22);

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" when secure validation is enabled");

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r19.<javax.xml.crypto.MarshalException: void <init>(java.lang.String)>($r25);

        throw $r19;

     label2:
        $r14 = new java.util.ArrayList;

        specialinvoke $r14.<java.util.ArrayList: void <init>(int)>(5);

        r27 = staticinvoke <org.jcp.xml.dsig.internal.dom.DOMUtils: org.w3c.dom.Element getNextSiblingElement(org.w3c.dom.Node)>(r5);

        i0 = 0;

     label3:
        if r27 == null goto label4;

        $r16 = new org.jcp.xml.dsig.internal.dom.DOMReference;

        specialinvoke $r16.<org.jcp.xml.dsig.internal.dom.DOMReference: void <init>(org.w3c.dom.Element,javax.xml.crypto.XMLCryptoContext,java.security.Provider)>(r27, r2, r3);

        virtualinvoke $r14.<java.util.ArrayList: boolean add(java.lang.Object)>($r16);

        r27 = staticinvoke <org.jcp.xml.dsig.internal.dom.DOMUtils: org.w3c.dom.Element getNextSiblingElement(org.w3c.dom.Node)>(r27);

        i0 = i0 + 1;

        if z0 == 0 goto label3;

        if i0 <= 30 goto label3;

        $r17 = new javax.xml.crypto.MarshalException;

        specialinvoke $r17.<javax.xml.crypto.MarshalException: void <init>(java.lang.String)>("A maxiumum of 30 references per SignedInfo are allowed with secure validation");

        throw $r17;

     label4:
        $r15 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r14);

        r0.<org.jcp.xml.dsig.internal.dom.DOMSignedInfo: java.util.List references> = $r15;

        return;
    }

    public javax.xml.crypto.dsig.CanonicalizationMethod getCanonicalizationMethod()
    {
        org.jcp.xml.dsig.internal.dom.DOMSignedInfo r0;
        javax.xml.crypto.dsig.CanonicalizationMethod $r1;

        r0 := @this: org.jcp.xml.dsig.internal.dom.DOMSignedInfo;

        $r1 = r0.<org.jcp.xml.dsig.internal.dom.DOMSignedInfo: javax.xml.crypto.dsig.CanonicalizationMethod canonicalizationMethod>;

        return $r1;
    }

    public javax.xml.crypto.dsig.SignatureMethod getSignatureMethod()
    {
        org.jcp.xml.dsig.internal.dom.DOMSignedInfo r0;
        javax.xml.crypto.dsig.SignatureMethod $r1;

        r0 := @this: org.jcp.xml.dsig.internal.dom.DOMSignedInfo;

        $r1 = r0.<org.jcp.xml.dsig.internal.dom.DOMSignedInfo: javax.xml.crypto.dsig.SignatureMethod signatureMethod>;

        return $r1;
    }

    public java.lang.String getId()
    {
        org.jcp.xml.dsig.internal.dom.DOMSignedInfo r0;
        java.lang.String $r1;

        r0 := @this: org.jcp.xml.dsig.internal.dom.DOMSignedInfo;

        $r1 = r0.<org.jcp.xml.dsig.internal.dom.DOMSignedInfo: java.lang.String id>;

        return $r1;
    }

    public java.util.List getReferences()
    {
        org.jcp.xml.dsig.internal.dom.DOMSignedInfo r0;
        java.util.List $r1;

        r0 := @this: org.jcp.xml.dsig.internal.dom.DOMSignedInfo;

        $r1 = r0.<org.jcp.xml.dsig.internal.dom.DOMSignedInfo: java.util.List references>;

        return $r1;
    }

    public java.io.InputStream getCanonicalizedData()
    {
        org.jcp.xml.dsig.internal.dom.DOMSignedInfo r0;
        java.io.InputStream $r1;

        r0 := @this: org.jcp.xml.dsig.internal.dom.DOMSignedInfo;

        $r1 = r0.<org.jcp.xml.dsig.internal.dom.DOMSignedInfo: java.io.InputStream canonData>;

        return $r1;
    }

    public void canonicalize(javax.xml.crypto.XMLCryptoContext, java.io.ByteArrayOutputStream) throws javax.xml.crypto.dsig.XMLSignatureException
    {
        org.jcp.xml.dsig.internal.dom.DOMSignedInfo r0;
        javax.xml.crypto.XMLCryptoContext r1;
        java.io.ByteArrayOutputStream r2;
        char[] r5;
        com.sun.org.apache.xml.internal.security.utils.UnsyncBufferedOutputStream $r7;
        org.jcp.xml.dsig.internal.dom.DOMSubTreeData $r8;
        org.w3c.dom.Element $r9;
        javax.xml.crypto.dsig.CanonicalizationMethod $r10;
        org.jcp.xml.dsig.internal.dom.DOMCanonicalizationMethod $r11;
        java.util.logging.Level $r12, $r18, $r25, $r33;
        java.util.logging.Logger $r13, $r17, $r24, $r34;
        boolean $z0;
        java.io.InputStreamReader $r14;
        java.io.ByteArrayInputStream $r15, $r42;
        int $i0;
        java.lang.StringBuilder $r16, $r19, $r21, $r23, $r26, $r28;
        java.lang.String $r20, $r22, $r27, $r29;
        java.lang.NullPointerException $r30;
        java.io.IOException $r31, $r32;
        javax.xml.crypto.dsig.TransformException $r35;
        javax.xml.crypto.dsig.XMLSignatureException $r36;
        byte[] r41;

        r0 := @this: org.jcp.xml.dsig.internal.dom.DOMSignedInfo;

        r1 := @parameter0: javax.xml.crypto.XMLCryptoContext;

        r2 := @parameter1: java.io.ByteArrayOutputStream;

        if r1 != null goto label01;

        $r30 = new java.lang.NullPointerException;

        specialinvoke $r30.<java.lang.NullPointerException: void <init>(java.lang.String)>("context cannot be null");

        throw $r30;

     label01:
        $r7 = new com.sun.org.apache.xml.internal.security.utils.UnsyncBufferedOutputStream;

        specialinvoke $r7.<com.sun.org.apache.xml.internal.security.utils.UnsyncBufferedOutputStream: void <init>(java.io.OutputStream)>(r2);

     label02:
        virtualinvoke $r7.<java.io.OutputStream: void close()>();

     label03:
        goto label05;

     label04:
        $r31 := @caughtexception;

     label05:
        $r8 = new org.jcp.xml.dsig.internal.dom.DOMSubTreeData;

        $r9 = r0.<org.jcp.xml.dsig.internal.dom.DOMSignedInfo: org.w3c.dom.Element localSiElem>;

        specialinvoke $r8.<org.jcp.xml.dsig.internal.dom.DOMSubTreeData: void <init>(org.w3c.dom.Node,boolean)>($r9, 1);

     label06:
        $r10 = r0.<org.jcp.xml.dsig.internal.dom.DOMSignedInfo: javax.xml.crypto.dsig.CanonicalizationMethod canonicalizationMethod>;

        $r11 = (org.jcp.xml.dsig.internal.dom.DOMCanonicalizationMethod) $r10;

        virtualinvoke $r11.<org.jcp.xml.dsig.internal.dom.DOMCanonicalizationMethod: javax.xml.crypto.Data canonicalize(javax.xml.crypto.Data,javax.xml.crypto.XMLCryptoContext,java.io.OutputStream)>($r8, r1, $r7);

     label07:
        goto label09;

     label08:
        $r35 := @caughtexception;

        $r36 = new javax.xml.crypto.dsig.XMLSignatureException;

        specialinvoke $r36.<javax.xml.crypto.dsig.XMLSignatureException: void <init>(java.lang.Throwable)>($r35);

        throw $r36;

     label09:
        r41 = virtualinvoke r2.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        $r13 = <org.jcp.xml.dsig.internal.dom.DOMSignedInfo: java.util.logging.Logger log>;

        $r12 = <java.util.logging.Level: java.util.logging.Level FINE>;

        $z0 = virtualinvoke $r13.<java.util.logging.Logger: boolean isLoggable(java.util.logging.Level)>($r12);

        if $z0 == 0 goto label14;

        $r14 = new java.io.InputStreamReader;

        $r15 = new java.io.ByteArrayInputStream;

        specialinvoke $r15.<java.io.ByteArrayInputStream: void <init>(byte[])>(r41);

        specialinvoke $r14.<java.io.InputStreamReader: void <init>(java.io.InputStream)>($r15);

        $i0 = lengthof r41;

        r5 = newarray (char)[$i0];

     label10:
        virtualinvoke $r14.<java.io.InputStreamReader: int read(char[])>(r5);

        $r17 = <org.jcp.xml.dsig.internal.dom.DOMSignedInfo: java.util.logging.Logger log>;

        $r18 = <java.util.logging.Level: java.util.logging.Level FINE>;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r19 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Canonicalized SignedInfo:\n");

        $r20 = new java.lang.String;

        specialinvoke $r20.<java.lang.String: void <init>(char[])>(r5);

        $r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20);

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r17.<java.util.logging.Logger: void log(java.util.logging.Level,java.lang.String)>($r18, $r22);

     label11:
        goto label13;

     label12:
        $r32 := @caughtexception;

        $r34 = <org.jcp.xml.dsig.internal.dom.DOMSignedInfo: java.util.logging.Logger log>;

        $r33 = <java.util.logging.Level: java.util.logging.Level FINE>;

        virtualinvoke $r34.<java.util.logging.Logger: void log(java.util.logging.Level,java.lang.String)>($r33, "IOException reading SignedInfo bytes");

     label13:
        $r24 = <org.jcp.xml.dsig.internal.dom.DOMSignedInfo: java.util.logging.Logger log>;

        $r25 = <java.util.logging.Level: java.util.logging.Level FINE>;

        $r23 = new java.lang.StringBuilder;

        specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();

        $r26 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Data to be signed/verified:");

        $r27 = staticinvoke <com.sun.org.apache.xml.internal.security.utils.Base64: java.lang.String encode(byte[])>(r41);

        $r28 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r27);

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r24.<java.util.logging.Logger: void log(java.util.logging.Level,java.lang.String)>($r25, $r29);

     label14:
        $r42 = new java.io.ByteArrayInputStream;

        specialinvoke $r42.<java.io.ByteArrayInputStream: void <init>(byte[])>(r41);

        r0.<org.jcp.xml.dsig.internal.dom.DOMSignedInfo: java.io.InputStream canonData> = $r42;

        return;

        catch java.io.IOException from label02 to label03 with label04;
        catch javax.xml.crypto.dsig.TransformException from label06 to label07 with label08;
        catch java.io.IOException from label10 to label11 with label12;
    }

    public void marshal(org.w3c.dom.Node, java.lang.String, javax.xml.crypto.dom.DOMCryptoContext) throws javax.xml.crypto.MarshalException
    {
        org.jcp.xml.dsig.internal.dom.DOMSignedInfo r0;
        org.w3c.dom.Node r1;
        java.lang.String r2, $r13;
        javax.xml.crypto.dom.DOMCryptoContext r3;
        org.w3c.dom.Element r4;
        org.jcp.xml.dsig.internal.dom.DOMCanonicalizationMethod r5;
        int i0, i1;
        org.jcp.xml.dsig.internal.dom.DOMReference r6;
        org.w3c.dom.Document $r7, $r8;
        javax.xml.crypto.dsig.CanonicalizationMethod $r9;
        javax.xml.crypto.dsig.SignatureMethod $r10;
        org.jcp.xml.dsig.internal.dom.DOMSignatureMethod $r11;
        java.util.List $r12, $r15;
        java.lang.Object $r16;

        r0 := @this: org.jcp.xml.dsig.internal.dom.DOMSignedInfo;

        r1 := @parameter0: org.w3c.dom.Node;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: javax.xml.crypto.dom.DOMCryptoContext;

        $r7 = staticinvoke <org.jcp.xml.dsig.internal.dom.DOMUtils: org.w3c.dom.Document getOwnerDocument(org.w3c.dom.Node)>(r1);

        r0.<org.jcp.xml.dsig.internal.dom.DOMSignedInfo: org.w3c.dom.Document ownerDoc> = $r7;

        $r8 = r0.<org.jcp.xml.dsig.internal.dom.DOMSignedInfo: org.w3c.dom.Document ownerDoc>;

        r4 = staticinvoke <org.jcp.xml.dsig.internal.dom.DOMUtils: org.w3c.dom.Element createElement(org.w3c.dom.Document,java.lang.String,java.lang.String,java.lang.String)>($r8, "SignedInfo", "http://www.w3.org/2000/09/xmldsig#", r2);

        $r9 = r0.<org.jcp.xml.dsig.internal.dom.DOMSignedInfo: javax.xml.crypto.dsig.CanonicalizationMethod canonicalizationMethod>;

        r5 = (org.jcp.xml.dsig.internal.dom.DOMCanonicalizationMethod) $r9;

        virtualinvoke r5.<org.jcp.xml.dsig.internal.dom.DOMCanonicalizationMethod: void marshal(org.w3c.dom.Node,java.lang.String,javax.xml.crypto.dom.DOMCryptoContext)>(r4, r2, r3);

        $r10 = r0.<org.jcp.xml.dsig.internal.dom.DOMSignedInfo: javax.xml.crypto.dsig.SignatureMethod signatureMethod>;

        $r11 = (org.jcp.xml.dsig.internal.dom.DOMSignatureMethod) $r10;

        virtualinvoke $r11.<org.jcp.xml.dsig.internal.dom.DOMSignatureMethod: void marshal(org.w3c.dom.Node,java.lang.String,javax.xml.crypto.dom.DOMCryptoContext)>(r4, r2, r3);

        i1 = 0;

        $r12 = r0.<org.jcp.xml.dsig.internal.dom.DOMSignedInfo: java.util.List references>;

        i0 = interfaceinvoke $r12.<java.util.List: int size()>();

     label1:
        if i1 >= i0 goto label2;

        $r15 = r0.<org.jcp.xml.dsig.internal.dom.DOMSignedInfo: java.util.List references>;

        $r16 = interfaceinvoke $r15.<java.util.List: java.lang.Object get(int)>(i1);

        r6 = (org.jcp.xml.dsig.internal.dom.DOMReference) $r16;

        virtualinvoke r6.<org.jcp.xml.dsig.internal.dom.DOMReference: void marshal(org.w3c.dom.Node,java.lang.String,javax.xml.crypto.dom.DOMCryptoContext)>(r4, r2, r3);

        i1 = i1 + 1;

        goto label1;

     label2:
        $r13 = r0.<org.jcp.xml.dsig.internal.dom.DOMSignedInfo: java.lang.String id>;

        staticinvoke <org.jcp.xml.dsig.internal.dom.DOMUtils: void setAttributeID(org.w3c.dom.Element,java.lang.String,java.lang.String)>(r4, "Id", $r13);

        interfaceinvoke r1.<org.w3c.dom.Node: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>(r4);

        r0.<org.jcp.xml.dsig.internal.dom.DOMSignedInfo: org.w3c.dom.Element localSiElem> = r4;

        return;
    }

    public boolean equals(java.lang.Object)
    {
        org.jcp.xml.dsig.internal.dom.DOMSignedInfo r0;
        java.lang.Object r1;
        javax.xml.crypto.dsig.SignedInfo r2;
        boolean $z1, $z2, $z3, $z4, $z5, $z6;
        java.lang.String $r3, $r4, $r5, $r10;
        javax.xml.crypto.dsig.SignatureMethod $r6, $r7;
        java.util.List $r8, $r9;
        javax.xml.crypto.dsig.CanonicalizationMethod $r11, $r12;

        r0 := @this: org.jcp.xml.dsig.internal.dom.DOMSignedInfo;

        r1 := @parameter0: java.lang.Object;

        if r0 != r1 goto label1;

        return 1;

     label1:
        $z1 = r1 instanceof javax.xml.crypto.dsig.SignedInfo;

        if $z1 != 0 goto label2;

        return 0;

     label2:
        r2 = (javax.xml.crypto.dsig.SignedInfo) r1;

        $r3 = r0.<org.jcp.xml.dsig.internal.dom.DOMSignedInfo: java.lang.String id>;

        if $r3 != null goto label4;

        $r10 = interfaceinvoke r2.<javax.xml.crypto.dsig.SignedInfo: java.lang.String getId()>();

        if $r10 != null goto label3;

        $z4 = 1;

        goto label5;

     label3:
        $z4 = 0;

        goto label5;

     label4:
        $r4 = r0.<org.jcp.xml.dsig.internal.dom.DOMSignedInfo: java.lang.String id>;

        $r5 = interfaceinvoke r2.<javax.xml.crypto.dsig.SignedInfo: java.lang.String getId()>();

        $z4 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r5);

     label5:
        $r11 = r0.<org.jcp.xml.dsig.internal.dom.DOMSignedInfo: javax.xml.crypto.dsig.CanonicalizationMethod canonicalizationMethod>;

        $r12 = interfaceinvoke r2.<javax.xml.crypto.dsig.SignedInfo: javax.xml.crypto.dsig.CanonicalizationMethod getCanonicalizationMethod()>();

        $z5 = virtualinvoke $r11.<java.lang.Object: boolean equals(java.lang.Object)>($r12);

        if $z5 == 0 goto label6;

        $r6 = r0.<org.jcp.xml.dsig.internal.dom.DOMSignedInfo: javax.xml.crypto.dsig.SignatureMethod signatureMethod>;

        $r7 = interfaceinvoke r2.<javax.xml.crypto.dsig.SignedInfo: javax.xml.crypto.dsig.SignatureMethod getSignatureMethod()>();

        $z2 = virtualinvoke $r6.<java.lang.Object: boolean equals(java.lang.Object)>($r7);

        if $z2 == 0 goto label6;

        $r8 = r0.<org.jcp.xml.dsig.internal.dom.DOMSignedInfo: java.util.List references>;

        $r9 = interfaceinvoke r2.<javax.xml.crypto.dsig.SignedInfo: java.util.List getReferences()>();

        $z3 = interfaceinvoke $r8.<java.util.List: boolean equals(java.lang.Object)>($r9);

        if $z3 == 0 goto label6;

        if $z4 == 0 goto label6;

        $z6 = 1;

        goto label7;

     label6:
        $z6 = 0;

     label7:
        return $z6;
    }

    static void <clinit>()
    {
        java.util.logging.Logger $r0;

        <org.jcp.xml.dsig.internal.dom.DOMSignedInfo: java.lang.String ALGO_ID_MAC_HMAC_NOT_RECOMMENDED_MD5> = "http://www.w3.org/2001/04/xmldsig-more#hmac-md5";

        <org.jcp.xml.dsig.internal.dom.DOMSignedInfo: java.lang.String ALGO_ID_SIGNATURE_NOT_RECOMMENDED_RSA_MD5> = "http://www.w3.org/2001/04/xmldsig-more#rsa-md5";

        <org.jcp.xml.dsig.internal.dom.DOMSignedInfo: int MAXIMUM_REFERENCE_COUNT> = 30;

        $r0 = staticinvoke <java.util.logging.Logger: java.util.logging.Logger getLogger(java.lang.String)>("org.jcp.xml.dsig.internal.dom");

        <org.jcp.xml.dsig.internal.dom.DOMSignedInfo: java.util.logging.Logger log> = $r0;

        return;
    }
}
