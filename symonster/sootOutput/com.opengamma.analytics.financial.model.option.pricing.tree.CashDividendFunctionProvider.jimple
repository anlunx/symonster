public class com.opengamma.analytics.financial.model.option.pricing.tree.CashDividendFunctionProvider extends com.opengamma.analytics.financial.model.option.pricing.tree.DividendFunctionProvider
{

    public void <init>(double[], double[])
    {
        com.opengamma.analytics.financial.model.option.pricing.tree.CashDividendFunctionProvider r0;
        double[] r1, r2;

        r0 := @this: com.opengamma.analytics.financial.model.option.pricing.tree.CashDividendFunctionProvider;

        r1 := @parameter0: double[];

        r2 := @parameter1: double[];

        specialinvoke r0.<com.opengamma.analytics.financial.model.option.pricing.tree.DividendFunctionProvider: void <init>(double[],double[])>(r1, r2);

        return;
    }

    public double spotModifier(double, double)
    {
        com.opengamma.analytics.financial.model.option.pricing.tree.CashDividendFunctionProvider r0;
        double d0, d1, $d2, $d3, $d4, $d5, $d6, $d7, d8;
        double[] r1, r2;
        int i0, i2;
        byte $b1;
        boolean $z0;

        r0 := @this: com.opengamma.analytics.financial.model.option.pricing.tree.CashDividendFunctionProvider;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        d8 = d0;

        r1 = virtualinvoke r0.<com.opengamma.analytics.financial.model.option.pricing.tree.CashDividendFunctionProvider: double[] getDividendTimes()>();

        r2 = virtualinvoke r0.<com.opengamma.analytics.financial.model.option.pricing.tree.CashDividendFunctionProvider: double[] getDividends()>();

        i0 = lengthof r2;

        i2 = 0;

     label1:
        if i2 >= i0 goto label2;

        $d5 = r2[i2];

        $d3 = neg d1;

        $d2 = r1[i2];

        $d4 = $d3 * $d2;

        $d6 = staticinvoke <java.lang.Math: double exp(double)>($d4);

        $d7 = $d5 * $d6;

        d8 = d8 - $d7;

        i2 = i2 + 1;

        goto label1;

     label2:
        $b1 = d8 cmpl 0.0;

        if $b1 <= 0 goto label3;

        $z0 = 1;

        goto label4;

     label3:
        $z0 = 0;

     label4:
        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z0, "Dividends are too large");

        return d8;
    }

    public double dividendCorrections(double, double, double, int)
    {
        com.opengamma.analytics.financial.model.option.pricing.tree.CashDividendFunctionProvider r0;
        double d0, d1, d2, d3, d4, d5, $d6, $d7, $d8, $d9, $d10;
        int i0;
        double[] $r1, $r2;

        r0 := @this: com.opengamma.analytics.financial.model.option.pricing.tree.CashDividendFunctionProvider;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        d2 := @parameter2: double;

        i0 := @parameter3: int;

        $r1 = virtualinvoke r0.<com.opengamma.analytics.financial.model.option.pricing.tree.CashDividendFunctionProvider: double[] getDividendTimes()>();

        d3 = $r1[i0];

        $r2 = virtualinvoke r0.<com.opengamma.analytics.financial.model.option.pricing.tree.CashDividendFunctionProvider: double[] getDividends()>();

        d4 = $r2[i0];

        $d7 = neg d1;

        $d6 = d3 - d2;

        $d8 = $d7 * $d6;

        $d9 = staticinvoke <java.lang.Math: double exp(double)>($d8);

        $d10 = d4 * $d9;

        d5 = d0 + $d10;

        return d5;
    }

    public double[] getAssetPricesForDelta(double, double, int[], double, double, double)
    {
        com.opengamma.analytics.financial.model.option.pricing.tree.CashDividendFunctionProvider r0;
        double d0, d1, d2, d3, d4, $d5, $d6, $d7, $d8;
        int[] r1;
        double[] r2;

        r0 := @this: com.opengamma.analytics.financial.model.option.pricing.tree.CashDividendFunctionProvider;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        r1 := @parameter2: int[];

        d2 := @parameter3: double;

        d3 := @parameter4: double;

        d4 := @parameter5: double;

        r2 = newarray (double)[2];

        $d5 = d0 * d3;

        $d6 = $d5 + d4;

        r2[0] = $d6;

        $d7 = d0 * d2;

        $d8 = $d7 + d4;

        r2[1] = $d8;

        return r2;
    }

    public double[] getAssetPricesForGamma(double, double, int[], double, double, double)
    {
        com.opengamma.analytics.financial.model.option.pricing.tree.CashDividendFunctionProvider r0;
        double d0, d1, d2, d3, d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13;
        int[] r1;
        double[] r2;

        r0 := @this: com.opengamma.analytics.financial.model.option.pricing.tree.CashDividendFunctionProvider;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        r1 := @parameter2: int[];

        d2 := @parameter3: double;

        d3 := @parameter4: double;

        d4 := @parameter5: double;

        r2 = newarray (double)[3];

        $d5 = d0 * d3;

        $d6 = $d5 * d3;

        $d7 = $d6 + d4;

        r2[0] = $d7;

        $d8 = d0 * d2;

        $d9 = $d8 * d3;

        $d10 = $d9 + d4;

        r2[1] = $d10;

        $d11 = d0 * d2;

        $d12 = $d11 * d2;

        $d13 = $d12 + d4;

        r2[2] = $d13;

        return r2;
    }

    public double[] getAssetPricesForDelta(double, double, int[], double, double, double, double)
    {
        com.opengamma.analytics.financial.model.option.pricing.tree.CashDividendFunctionProvider r0;
        double d0, d1, d2, d3, d4, d5, $d6, $d7, $d8, $d9, $d10, $d11;
        int[] r1;
        double[] r2;

        r0 := @this: com.opengamma.analytics.financial.model.option.pricing.tree.CashDividendFunctionProvider;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        r1 := @parameter2: int[];

        d2 := @parameter3: double;

        d3 := @parameter4: double;

        d4 := @parameter5: double;

        d5 := @parameter6: double;

        r2 = newarray (double)[3];

        $d6 = d0 * d4;

        $d7 = $d6 + d5;

        r2[0] = $d7;

        $d8 = d0 * d3;

        $d9 = $d8 + d5;

        r2[1] = $d9;

        $d10 = d0 * d2;

        $d11 = $d10 + d5;

        r2[2] = $d11;

        return r2;
    }

    public double[] getAssetPricesForGamma(double, double, int[], double, double, double, double)
    {
        com.opengamma.analytics.financial.model.option.pricing.tree.CashDividendFunctionProvider r0;
        double d0, d1, d2, d3, d4, d5, d6, d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17;
        int[] r1;
        double[] r2;

        r0 := @this: com.opengamma.analytics.financial.model.option.pricing.tree.CashDividendFunctionProvider;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        r1 := @parameter2: int[];

        d2 := @parameter3: double;

        d3 := @parameter4: double;

        d4 := @parameter5: double;

        d5 := @parameter6: double;

        r2 = newarray (double)[5];

        d6 = d0 * d2;

        d7 = d0 * d4;

        $d8 = d7 * d4;

        $d9 = $d8 + d5;

        r2[0] = $d9;

        $d10 = d7 * d3;

        $d11 = $d10 + d5;

        r2[1] = $d11;

        $d12 = d7 * d2;

        $d13 = $d12 + d5;

        r2[2] = $d13;

        $d14 = d6 * d3;

        $d15 = $d14 + d5;

        r2[3] = $d15;

        $d16 = d6 * d2;

        $d17 = $d16 + d5;

        r2[4] = $d17;

        return r2;
    }

    public int hashCode()
    {
        com.opengamma.analytics.financial.model.option.pricing.tree.CashDividendFunctionProvider r0;
        int $i0;

        r0 := @this: com.opengamma.analytics.financial.model.option.pricing.tree.CashDividendFunctionProvider;

        $i0 = specialinvoke r0.<com.opengamma.analytics.financial.model.option.pricing.tree.DividendFunctionProvider: int hashCode()>();

        return $i0;
    }

    public boolean equals(java.lang.Object)
    {
        com.opengamma.analytics.financial.model.option.pricing.tree.CashDividendFunctionProvider r0;
        java.lang.Object r1;
        boolean $z0, $z1;

        r0 := @this: com.opengamma.analytics.financial.model.option.pricing.tree.CashDividendFunctionProvider;

        r1 := @parameter0: java.lang.Object;

        if r0 != r1 goto label1;

        return 1;

     label1:
        if r1 != null goto label2;

        return 0;

     label2:
        $z0 = r1 instanceof com.opengamma.analytics.financial.model.option.pricing.tree.CashDividendFunctionProvider;

        if $z0 != 0 goto label3;

        return 0;

     label3:
        $z1 = specialinvoke r0.<com.opengamma.analytics.financial.model.option.pricing.tree.DividendFunctionProvider: boolean equals(java.lang.Object)>(r1);

        return $z1;
    }
}
