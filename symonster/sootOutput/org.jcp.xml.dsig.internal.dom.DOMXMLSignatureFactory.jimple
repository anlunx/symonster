public final class org.jcp.xml.dsig.internal.dom.DOMXMLSignatureFactory extends javax.xml.crypto.dsig.XMLSignatureFactory
{

    public void <init>()
    {
        org.jcp.xml.dsig.internal.dom.DOMXMLSignatureFactory r0;

        r0 := @this: org.jcp.xml.dsig.internal.dom.DOMXMLSignatureFactory;

        specialinvoke r0.<javax.xml.crypto.dsig.XMLSignatureFactory: void <init>()>();

        return;
    }

    public javax.xml.crypto.dsig.XMLSignature newXMLSignature(javax.xml.crypto.dsig.SignedInfo, javax.xml.crypto.dsig.keyinfo.KeyInfo)
    {
        org.jcp.xml.dsig.internal.dom.DOMXMLSignatureFactory r0;
        javax.xml.crypto.dsig.SignedInfo r1;
        javax.xml.crypto.dsig.keyinfo.KeyInfo r2;
        org.jcp.xml.dsig.internal.dom.DOMXMLSignature $r3;

        r0 := @this: org.jcp.xml.dsig.internal.dom.DOMXMLSignatureFactory;

        r1 := @parameter0: javax.xml.crypto.dsig.SignedInfo;

        r2 := @parameter1: javax.xml.crypto.dsig.keyinfo.KeyInfo;

        $r3 = new org.jcp.xml.dsig.internal.dom.DOMXMLSignature;

        specialinvoke $r3.<org.jcp.xml.dsig.internal.dom.DOMXMLSignature: void <init>(javax.xml.crypto.dsig.SignedInfo,javax.xml.crypto.dsig.keyinfo.KeyInfo,java.util.List,java.lang.String,java.lang.String)>(r1, r2, null, null, null);

        return $r3;
    }

    public javax.xml.crypto.dsig.XMLSignature newXMLSignature(javax.xml.crypto.dsig.SignedInfo, javax.xml.crypto.dsig.keyinfo.KeyInfo, java.util.List, java.lang.String, java.lang.String)
    {
        org.jcp.xml.dsig.internal.dom.DOMXMLSignatureFactory r0;
        javax.xml.crypto.dsig.SignedInfo r1;
        javax.xml.crypto.dsig.keyinfo.KeyInfo r2;
        java.util.List r3;
        java.lang.String r4, r5;
        org.jcp.xml.dsig.internal.dom.DOMXMLSignature $r6;

        r0 := @this: org.jcp.xml.dsig.internal.dom.DOMXMLSignatureFactory;

        r1 := @parameter0: javax.xml.crypto.dsig.SignedInfo;

        r2 := @parameter1: javax.xml.crypto.dsig.keyinfo.KeyInfo;

        r3 := @parameter2: java.util.List;

        r4 := @parameter3: java.lang.String;

        r5 := @parameter4: java.lang.String;

        $r6 = new org.jcp.xml.dsig.internal.dom.DOMXMLSignature;

        specialinvoke $r6.<org.jcp.xml.dsig.internal.dom.DOMXMLSignature: void <init>(javax.xml.crypto.dsig.SignedInfo,javax.xml.crypto.dsig.keyinfo.KeyInfo,java.util.List,java.lang.String,java.lang.String)>(r1, r2, r3, r4, r5);

        return $r6;
    }

    public javax.xml.crypto.dsig.Reference newReference(java.lang.String, javax.xml.crypto.dsig.DigestMethod)
    {
        org.jcp.xml.dsig.internal.dom.DOMXMLSignatureFactory r0;
        java.lang.String r1;
        javax.xml.crypto.dsig.DigestMethod r2;
        javax.xml.crypto.dsig.Reference $r3;

        r0 := @this: org.jcp.xml.dsig.internal.dom.DOMXMLSignatureFactory;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: javax.xml.crypto.dsig.DigestMethod;

        $r3 = virtualinvoke r0.<org.jcp.xml.dsig.internal.dom.DOMXMLSignatureFactory: javax.xml.crypto.dsig.Reference newReference(java.lang.String,javax.xml.crypto.dsig.DigestMethod,java.util.List,java.lang.String,java.lang.String)>(r1, r2, null, null, null);

        return $r3;
    }

    public javax.xml.crypto.dsig.Reference newReference(java.lang.String, javax.xml.crypto.dsig.DigestMethod, java.util.List, java.lang.String, java.lang.String)
    {
        org.jcp.xml.dsig.internal.dom.DOMXMLSignatureFactory r0;
        java.lang.String r1, r4, r5;
        javax.xml.crypto.dsig.DigestMethod r2;
        java.util.List r3;
        org.jcp.xml.dsig.internal.dom.DOMReference $r6;
        java.security.Provider $r7;

        r0 := @this: org.jcp.xml.dsig.internal.dom.DOMXMLSignatureFactory;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: javax.xml.crypto.dsig.DigestMethod;

        r3 := @parameter2: java.util.List;

        r4 := @parameter3: java.lang.String;

        r5 := @parameter4: java.lang.String;

        $r6 = new org.jcp.xml.dsig.internal.dom.DOMReference;

        $r7 = virtualinvoke r0.<org.jcp.xml.dsig.internal.dom.DOMXMLSignatureFactory: java.security.Provider getProvider()>();

        specialinvoke $r6.<org.jcp.xml.dsig.internal.dom.DOMReference: void <init>(java.lang.String,java.lang.String,javax.xml.crypto.dsig.DigestMethod,java.util.List,java.lang.String,java.security.Provider)>(r1, r4, r2, r3, r5, $r7);

        return $r6;
    }

    public javax.xml.crypto.dsig.Reference newReference(java.lang.String, javax.xml.crypto.dsig.DigestMethod, java.util.List, javax.xml.crypto.Data, java.util.List, java.lang.String, java.lang.String)
    {
        org.jcp.xml.dsig.internal.dom.DOMXMLSignatureFactory r0;
        java.lang.String r1, r6, r7;
        javax.xml.crypto.dsig.DigestMethod r2;
        java.util.List r3, r5;
        javax.xml.crypto.Data r4;
        boolean $z0;
        org.jcp.xml.dsig.internal.dom.DOMReference $r8;
        java.security.Provider $r9;
        java.lang.NullPointerException $r10, $r11, $r12;

        r0 := @this: org.jcp.xml.dsig.internal.dom.DOMXMLSignatureFactory;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: javax.xml.crypto.dsig.DigestMethod;

        r3 := @parameter2: java.util.List;

        r4 := @parameter3: javax.xml.crypto.Data;

        r5 := @parameter4: java.util.List;

        r6 := @parameter5: java.lang.String;

        r7 := @parameter6: java.lang.String;

        if r3 != null goto label1;

        $r12 = new java.lang.NullPointerException;

        specialinvoke $r12.<java.lang.NullPointerException: void <init>(java.lang.String)>("appliedTransforms cannot be null");

        throw $r12;

     label1:
        $z0 = interfaceinvoke r3.<java.util.List: boolean isEmpty()>();

        if $z0 == 0 goto label2;

        $r11 = new java.lang.NullPointerException;

        specialinvoke $r11.<java.lang.NullPointerException: void <init>(java.lang.String)>("appliedTransforms cannot be empty");

        throw $r11;

     label2:
        if r4 != null goto label3;

        $r10 = new java.lang.NullPointerException;

        specialinvoke $r10.<java.lang.NullPointerException: void <init>(java.lang.String)>("result cannot be null");

        throw $r10;

     label3:
        $r8 = new org.jcp.xml.dsig.internal.dom.DOMReference;

        $r9 = virtualinvoke r0.<org.jcp.xml.dsig.internal.dom.DOMXMLSignatureFactory: java.security.Provider getProvider()>();

        specialinvoke $r8.<org.jcp.xml.dsig.internal.dom.DOMReference: void <init>(java.lang.String,java.lang.String,javax.xml.crypto.dsig.DigestMethod,java.util.List,javax.xml.crypto.Data,java.util.List,java.lang.String,java.security.Provider)>(r1, r6, r2, r3, r4, r5, r7, $r9);

        return $r8;
    }

    public javax.xml.crypto.dsig.Reference newReference(java.lang.String, javax.xml.crypto.dsig.DigestMethod, java.util.List, java.lang.String, java.lang.String, byte[])
    {
        org.jcp.xml.dsig.internal.dom.DOMXMLSignatureFactory r0;
        java.lang.String r1, r4, r5;
        javax.xml.crypto.dsig.DigestMethod r2;
        java.util.List r3;
        byte[] r6;
        org.jcp.xml.dsig.internal.dom.DOMReference $r7;
        java.security.Provider $r8;
        java.lang.NullPointerException $r9;

        r0 := @this: org.jcp.xml.dsig.internal.dom.DOMXMLSignatureFactory;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: javax.xml.crypto.dsig.DigestMethod;

        r3 := @parameter2: java.util.List;

        r4 := @parameter3: java.lang.String;

        r5 := @parameter4: java.lang.String;

        r6 := @parameter5: byte[];

        if r6 != null goto label1;

        $r9 = new java.lang.NullPointerException;

        specialinvoke $r9.<java.lang.NullPointerException: void <init>(java.lang.String)>("digestValue cannot be null");

        throw $r9;

     label1:
        $r7 = new org.jcp.xml.dsig.internal.dom.DOMReference;

        $r8 = virtualinvoke r0.<org.jcp.xml.dsig.internal.dom.DOMXMLSignatureFactory: java.security.Provider getProvider()>();

        specialinvoke $r7.<org.jcp.xml.dsig.internal.dom.DOMReference: void <init>(java.lang.String,java.lang.String,javax.xml.crypto.dsig.DigestMethod,java.util.List,javax.xml.crypto.Data,java.util.List,java.lang.String,byte[],java.security.Provider)>(r1, r4, r2, null, null, r3, r5, r6, $r8);

        return $r7;
    }

    public javax.xml.crypto.dsig.SignedInfo newSignedInfo(javax.xml.crypto.dsig.CanonicalizationMethod, javax.xml.crypto.dsig.SignatureMethod, java.util.List)
    {
        org.jcp.xml.dsig.internal.dom.DOMXMLSignatureFactory r0;
        javax.xml.crypto.dsig.CanonicalizationMethod r1;
        javax.xml.crypto.dsig.SignatureMethod r2;
        java.util.List r3;
        javax.xml.crypto.dsig.SignedInfo $r4;

        r0 := @this: org.jcp.xml.dsig.internal.dom.DOMXMLSignatureFactory;

        r1 := @parameter0: javax.xml.crypto.dsig.CanonicalizationMethod;

        r2 := @parameter1: javax.xml.crypto.dsig.SignatureMethod;

        r3 := @parameter2: java.util.List;

        $r4 = virtualinvoke r0.<org.jcp.xml.dsig.internal.dom.DOMXMLSignatureFactory: javax.xml.crypto.dsig.SignedInfo newSignedInfo(javax.xml.crypto.dsig.CanonicalizationMethod,javax.xml.crypto.dsig.SignatureMethod,java.util.List,java.lang.String)>(r1, r2, r3, null);

        return $r4;
    }

    public javax.xml.crypto.dsig.SignedInfo newSignedInfo(javax.xml.crypto.dsig.CanonicalizationMethod, javax.xml.crypto.dsig.SignatureMethod, java.util.List, java.lang.String)
    {
        org.jcp.xml.dsig.internal.dom.DOMXMLSignatureFactory r0;
        javax.xml.crypto.dsig.CanonicalizationMethod r1;
        javax.xml.crypto.dsig.SignatureMethod r2;
        java.util.List r3;
        java.lang.String r4;
        org.jcp.xml.dsig.internal.dom.DOMSignedInfo $r5;

        r0 := @this: org.jcp.xml.dsig.internal.dom.DOMXMLSignatureFactory;

        r1 := @parameter0: javax.xml.crypto.dsig.CanonicalizationMethod;

        r2 := @parameter1: javax.xml.crypto.dsig.SignatureMethod;

        r3 := @parameter2: java.util.List;

        r4 := @parameter3: java.lang.String;

        $r5 = new org.jcp.xml.dsig.internal.dom.DOMSignedInfo;

        specialinvoke $r5.<org.jcp.xml.dsig.internal.dom.DOMSignedInfo: void <init>(javax.xml.crypto.dsig.CanonicalizationMethod,javax.xml.crypto.dsig.SignatureMethod,java.util.List,java.lang.String)>(r1, r2, r3, r4);

        return $r5;
    }

    public javax.xml.crypto.dsig.XMLObject newXMLObject(java.util.List, java.lang.String, java.lang.String, java.lang.String)
    {
        org.jcp.xml.dsig.internal.dom.DOMXMLSignatureFactory r0;
        java.util.List r1;
        java.lang.String r2, r3, r4;
        org.jcp.xml.dsig.internal.dom.DOMXMLObject $r5;

        r0 := @this: org.jcp.xml.dsig.internal.dom.DOMXMLSignatureFactory;

        r1 := @parameter0: java.util.List;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.lang.String;

        $r5 = new org.jcp.xml.dsig.internal.dom.DOMXMLObject;

        specialinvoke $r5.<org.jcp.xml.dsig.internal.dom.DOMXMLObject: void <init>(java.util.List,java.lang.String,java.lang.String,java.lang.String)>(r1, r2, r3, r4);

        return $r5;
    }

    public javax.xml.crypto.dsig.Manifest newManifest(java.util.List)
    {
        org.jcp.xml.dsig.internal.dom.DOMXMLSignatureFactory r0;
        java.util.List r1;
        javax.xml.crypto.dsig.Manifest $r2;

        r0 := @this: org.jcp.xml.dsig.internal.dom.DOMXMLSignatureFactory;

        r1 := @parameter0: java.util.List;

        $r2 = virtualinvoke r0.<org.jcp.xml.dsig.internal.dom.DOMXMLSignatureFactory: javax.xml.crypto.dsig.Manifest newManifest(java.util.List,java.lang.String)>(r1, null);

        return $r2;
    }

    public javax.xml.crypto.dsig.Manifest newManifest(java.util.List, java.lang.String)
    {
        org.jcp.xml.dsig.internal.dom.DOMXMLSignatureFactory r0;
        java.util.List r1;
        java.lang.String r2;
        org.jcp.xml.dsig.internal.dom.DOMManifest $r3;

        r0 := @this: org.jcp.xml.dsig.internal.dom.DOMXMLSignatureFactory;

        r1 := @parameter0: java.util.List;

        r2 := @parameter1: java.lang.String;

        $r3 = new org.jcp.xml.dsig.internal.dom.DOMManifest;

        specialinvoke $r3.<org.jcp.xml.dsig.internal.dom.DOMManifest: void <init>(java.util.List,java.lang.String)>(r1, r2);

        return $r3;
    }

    public javax.xml.crypto.dsig.SignatureProperties newSignatureProperties(java.util.List, java.lang.String)
    {
        org.jcp.xml.dsig.internal.dom.DOMXMLSignatureFactory r0;
        java.util.List r1;
        java.lang.String r2;
        org.jcp.xml.dsig.internal.dom.DOMSignatureProperties $r3;

        r0 := @this: org.jcp.xml.dsig.internal.dom.DOMXMLSignatureFactory;

        r1 := @parameter0: java.util.List;

        r2 := @parameter1: java.lang.String;

        $r3 = new org.jcp.xml.dsig.internal.dom.DOMSignatureProperties;

        specialinvoke $r3.<org.jcp.xml.dsig.internal.dom.DOMSignatureProperties: void <init>(java.util.List,java.lang.String)>(r1, r2);

        return $r3;
    }

    public javax.xml.crypto.dsig.SignatureProperty newSignatureProperty(java.util.List, java.lang.String, java.lang.String)
    {
        org.jcp.xml.dsig.internal.dom.DOMXMLSignatureFactory r0;
        java.util.List r1;
        java.lang.String r2, r3;
        org.jcp.xml.dsig.internal.dom.DOMSignatureProperty $r4;

        r0 := @this: org.jcp.xml.dsig.internal.dom.DOMXMLSignatureFactory;

        r1 := @parameter0: java.util.List;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        $r4 = new org.jcp.xml.dsig.internal.dom.DOMSignatureProperty;

        specialinvoke $r4.<org.jcp.xml.dsig.internal.dom.DOMSignatureProperty: void <init>(java.util.List,java.lang.String,java.lang.String)>(r1, r2, r3);

        return $r4;
    }

    public javax.xml.crypto.dsig.XMLSignature unmarshalXMLSignature(javax.xml.crypto.dsig.XMLValidateContext) throws javax.xml.crypto.MarshalException
    {
        org.jcp.xml.dsig.internal.dom.DOMXMLSignatureFactory r0;
        javax.xml.crypto.dsig.XMLValidateContext r1;
        javax.xml.crypto.dsig.dom.DOMValidateContext $r2;
        org.w3c.dom.Node $r3;
        javax.xml.crypto.dsig.XMLSignature $r4;
        java.lang.NullPointerException $r5;

        r0 := @this: org.jcp.xml.dsig.internal.dom.DOMXMLSignatureFactory;

        r1 := @parameter0: javax.xml.crypto.dsig.XMLValidateContext;

        if r1 != null goto label1;

        $r5 = new java.lang.NullPointerException;

        specialinvoke $r5.<java.lang.NullPointerException: void <init>(java.lang.String)>("context cannot be null");

        throw $r5;

     label1:
        $r2 = (javax.xml.crypto.dsig.dom.DOMValidateContext) r1;

        $r3 = virtualinvoke $r2.<javax.xml.crypto.dsig.dom.DOMValidateContext: org.w3c.dom.Node getNode()>();

        $r4 = specialinvoke r0.<org.jcp.xml.dsig.internal.dom.DOMXMLSignatureFactory: javax.xml.crypto.dsig.XMLSignature unmarshal(org.w3c.dom.Node,javax.xml.crypto.dsig.XMLValidateContext)>($r3, r1);

        return $r4;
    }

    public javax.xml.crypto.dsig.XMLSignature unmarshalXMLSignature(javax.xml.crypto.XMLStructure) throws javax.xml.crypto.MarshalException
    {
        org.jcp.xml.dsig.internal.dom.DOMXMLSignatureFactory r0;
        javax.xml.crypto.XMLStructure r1;
        javax.xml.crypto.dom.DOMStructure $r2;
        org.w3c.dom.Node $r3;
        javax.xml.crypto.dsig.XMLSignature $r4;
        java.lang.NullPointerException $r5;

        r0 := @this: org.jcp.xml.dsig.internal.dom.DOMXMLSignatureFactory;

        r1 := @parameter0: javax.xml.crypto.XMLStructure;

        if r1 != null goto label1;

        $r5 = new java.lang.NullPointerException;

        specialinvoke $r5.<java.lang.NullPointerException: void <init>(java.lang.String)>("xmlStructure cannot be null");

        throw $r5;

     label1:
        $r2 = (javax.xml.crypto.dom.DOMStructure) r1;

        $r3 = virtualinvoke $r2.<javax.xml.crypto.dom.DOMStructure: org.w3c.dom.Node getNode()>();

        $r4 = specialinvoke r0.<org.jcp.xml.dsig.internal.dom.DOMXMLSignatureFactory: javax.xml.crypto.dsig.XMLSignature unmarshal(org.w3c.dom.Node,javax.xml.crypto.dsig.XMLValidateContext)>($r3, null);

        return $r4;
    }

    private javax.xml.crypto.dsig.XMLSignature unmarshal(org.w3c.dom.Node, javax.xml.crypto.dsig.XMLValidateContext) throws javax.xml.crypto.MarshalException
    {
        org.jcp.xml.dsig.internal.dom.DOMXMLSignatureFactory r0;
        org.w3c.dom.Node r1;
        javax.xml.crypto.dsig.XMLValidateContext r2;
        java.lang.String r3, $r9;
        short $s0, $s1;
        javax.xml.crypto.MarshalException $r4, $r5, $r12;
        boolean $z0;
        java.lang.StringBuilder $r6, $r7, $r8;
        org.jcp.xml.dsig.internal.dom.DOMXMLSignature $r10;
        java.security.Provider $r11;
        org.w3c.dom.Document $r13;
        org.w3c.dom.Element r14;

        r0 := @this: org.jcp.xml.dsig.internal.dom.DOMXMLSignatureFactory;

        r1 := @parameter0: org.w3c.dom.Node;

        r2 := @parameter1: javax.xml.crypto.dsig.XMLValidateContext;

        interfaceinvoke r1.<org.w3c.dom.Node: void normalize()>();

        $s0 = interfaceinvoke r1.<org.w3c.dom.Node: short getNodeType()>();

        if $s0 != 9 goto label1;

        $r13 = (org.w3c.dom.Document) r1;

        r14 = interfaceinvoke $r13.<org.w3c.dom.Document: org.w3c.dom.Element getDocumentElement()>();

        goto label3;

     label1:
        $s1 = interfaceinvoke r1.<org.w3c.dom.Node: short getNodeType()>();

        if $s1 != 1 goto label2;

        r14 = (org.w3c.dom.Element) r1;

        goto label3;

     label2:
        $r4 = new javax.xml.crypto.MarshalException;

        specialinvoke $r4.<javax.xml.crypto.MarshalException: void <init>(java.lang.String)>("Signature element is not a proper Node");

        throw $r4;

     label3:
        r3 = interfaceinvoke r14.<org.w3c.dom.Element: java.lang.String getLocalName()>();

        if r3 != null goto label4;

        $r12 = new javax.xml.crypto.MarshalException;

        specialinvoke $r12.<javax.xml.crypto.MarshalException: void <init>(java.lang.String)>("Document implementation must support DOM Level 2 and be namespace aware");

        throw $r12;

     label4:
        $z0 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>("Signature");

        if $z0 == 0 goto label5;

        $r10 = new org.jcp.xml.dsig.internal.dom.DOMXMLSignature;

        $r11 = virtualinvoke r0.<org.jcp.xml.dsig.internal.dom.DOMXMLSignatureFactory: java.security.Provider getProvider()>();

        specialinvoke $r10.<org.jcp.xml.dsig.internal.dom.DOMXMLSignature: void <init>(org.w3c.dom.Element,javax.xml.crypto.XMLCryptoContext,java.security.Provider)>(r14, r2, $r11);

        return $r10;

     label5:
        $r5 = new javax.xml.crypto.MarshalException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("invalid Signature tag: ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<javax.xml.crypto.MarshalException: void <init>(java.lang.String)>($r9);

        throw $r5;
    }

    public boolean isFeatureSupported(java.lang.String)
    {
        org.jcp.xml.dsig.internal.dom.DOMXMLSignatureFactory r0;
        java.lang.String r1;
        java.lang.NullPointerException $r2;

        r0 := @this: org.jcp.xml.dsig.internal.dom.DOMXMLSignatureFactory;

        r1 := @parameter0: java.lang.String;

        if r1 != null goto label1;

        $r2 = new java.lang.NullPointerException;

        specialinvoke $r2.<java.lang.NullPointerException: void <init>()>();

        throw $r2;

     label1:
        return 0;
    }

    public javax.xml.crypto.dsig.DigestMethod newDigestMethod(java.lang.String, javax.xml.crypto.dsig.spec.DigestMethodParameterSpec) throws java.security.NoSuchAlgorithmException, java.security.InvalidAlgorithmParameterException
    {
        org.jcp.xml.dsig.internal.dom.DOMXMLSignatureFactory r0;
        java.lang.String r1;
        javax.xml.crypto.dsig.spec.DigestMethodParameterSpec r2;
        boolean $z0, $z1, $z2, $z3;
        java.security.NoSuchAlgorithmException $r3;
        org.jcp.xml.dsig.internal.dom.DOMDigestMethod$SHA512 $r4;
        org.jcp.xml.dsig.internal.dom.DOMDigestMethod$SHA384 $r5;
        org.jcp.xml.dsig.internal.dom.DOMDigestMethod$SHA256 $r6;
        org.jcp.xml.dsig.internal.dom.DOMDigestMethod$SHA1 $r7;
        java.lang.NullPointerException $r8;

        r0 := @this: org.jcp.xml.dsig.internal.dom.DOMXMLSignatureFactory;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: javax.xml.crypto.dsig.spec.DigestMethodParameterSpec;

        if r1 != null goto label1;

        $r8 = new java.lang.NullPointerException;

        specialinvoke $r8.<java.lang.NullPointerException: void <init>()>();

        throw $r8;

     label1:
        $z0 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("http://www.w3.org/2000/09/xmldsig#sha1");

        if $z0 == 0 goto label2;

        $r7 = new org.jcp.xml.dsig.internal.dom.DOMDigestMethod$SHA1;

        specialinvoke $r7.<org.jcp.xml.dsig.internal.dom.DOMDigestMethod$SHA1: void <init>(java.security.spec.AlgorithmParameterSpec)>(r2);

        return $r7;

     label2:
        $z1 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("http://www.w3.org/2001/04/xmlenc#sha256");

        if $z1 == 0 goto label3;

        $r6 = new org.jcp.xml.dsig.internal.dom.DOMDigestMethod$SHA256;

        specialinvoke $r6.<org.jcp.xml.dsig.internal.dom.DOMDigestMethod$SHA256: void <init>(java.security.spec.AlgorithmParameterSpec)>(r2);

        return $r6;

     label3:
        $z2 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("http://www.w3.org/2001/04/xmldsig-more#sha384");

        if $z2 == 0 goto label4;

        $r5 = new org.jcp.xml.dsig.internal.dom.DOMDigestMethod$SHA384;

        specialinvoke $r5.<org.jcp.xml.dsig.internal.dom.DOMDigestMethod$SHA384: void <init>(java.security.spec.AlgorithmParameterSpec)>(r2);

        return $r5;

     label4:
        $z3 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("http://www.w3.org/2001/04/xmlenc#sha512");

        if $z3 == 0 goto label5;

        $r4 = new org.jcp.xml.dsig.internal.dom.DOMDigestMethod$SHA512;

        specialinvoke $r4.<org.jcp.xml.dsig.internal.dom.DOMDigestMethod$SHA512: void <init>(java.security.spec.AlgorithmParameterSpec)>(r2);

        return $r4;

     label5:
        $r3 = new java.security.NoSuchAlgorithmException;

        specialinvoke $r3.<java.security.NoSuchAlgorithmException: void <init>(java.lang.String)>("unsupported algorithm");

        throw $r3;
    }

    public javax.xml.crypto.dsig.SignatureMethod newSignatureMethod(java.lang.String, javax.xml.crypto.dsig.spec.SignatureMethodParameterSpec) throws java.security.NoSuchAlgorithmException, java.security.InvalidAlgorithmParameterException
    {
        org.jcp.xml.dsig.internal.dom.DOMXMLSignatureFactory r0;
        java.lang.String r1;
        javax.xml.crypto.dsig.spec.SignatureMethodParameterSpec r2;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8;
        java.security.NoSuchAlgorithmException $r3;
        org.jcp.xml.dsig.internal.dom.DOMHMACSignatureMethod$SHA512 $r4;
        org.jcp.xml.dsig.internal.dom.DOMHMACSignatureMethod$SHA384 $r5;
        org.jcp.xml.dsig.internal.dom.DOMHMACSignatureMethod$SHA256 $r6;
        org.jcp.xml.dsig.internal.dom.DOMHMACSignatureMethod$SHA1 $r7;
        org.jcp.xml.dsig.internal.dom.DOMSignatureMethod$SHA1withDSA $r8;
        org.jcp.xml.dsig.internal.dom.DOMSignatureMethod$SHA512withRSA $r9;
        org.jcp.xml.dsig.internal.dom.DOMSignatureMethod$SHA384withRSA $r10;
        org.jcp.xml.dsig.internal.dom.DOMSignatureMethod$SHA256withRSA $r11;
        org.jcp.xml.dsig.internal.dom.DOMSignatureMethod$SHA1withRSA $r12;
        java.lang.NullPointerException $r13;

        r0 := @this: org.jcp.xml.dsig.internal.dom.DOMXMLSignatureFactory;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: javax.xml.crypto.dsig.spec.SignatureMethodParameterSpec;

        if r1 != null goto label01;

        $r13 = new java.lang.NullPointerException;

        specialinvoke $r13.<java.lang.NullPointerException: void <init>()>();

        throw $r13;

     label01:
        $z0 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("http://www.w3.org/2000/09/xmldsig#rsa-sha1");

        if $z0 == 0 goto label02;

        $r12 = new org.jcp.xml.dsig.internal.dom.DOMSignatureMethod$SHA1withRSA;

        specialinvoke $r12.<org.jcp.xml.dsig.internal.dom.DOMSignatureMethod$SHA1withRSA: void <init>(java.security.spec.AlgorithmParameterSpec)>(r2);

        return $r12;

     label02:
        $z1 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("http://www.w3.org/2001/04/xmldsig-more#rsa-sha256");

        if $z1 == 0 goto label03;

        $r11 = new org.jcp.xml.dsig.internal.dom.DOMSignatureMethod$SHA256withRSA;

        specialinvoke $r11.<org.jcp.xml.dsig.internal.dom.DOMSignatureMethod$SHA256withRSA: void <init>(java.security.spec.AlgorithmParameterSpec)>(r2);

        return $r11;

     label03:
        $z2 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("http://www.w3.org/2001/04/xmldsig-more#rsa-sha384");

        if $z2 == 0 goto label04;

        $r10 = new org.jcp.xml.dsig.internal.dom.DOMSignatureMethod$SHA384withRSA;

        specialinvoke $r10.<org.jcp.xml.dsig.internal.dom.DOMSignatureMethod$SHA384withRSA: void <init>(java.security.spec.AlgorithmParameterSpec)>(r2);

        return $r10;

     label04:
        $z3 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("http://www.w3.org/2001/04/xmldsig-more#rsa-sha512");

        if $z3 == 0 goto label05;

        $r9 = new org.jcp.xml.dsig.internal.dom.DOMSignatureMethod$SHA512withRSA;

        specialinvoke $r9.<org.jcp.xml.dsig.internal.dom.DOMSignatureMethod$SHA512withRSA: void <init>(java.security.spec.AlgorithmParameterSpec)>(r2);

        return $r9;

     label05:
        $z4 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("http://www.w3.org/2000/09/xmldsig#dsa-sha1");

        if $z4 == 0 goto label06;

        $r8 = new org.jcp.xml.dsig.internal.dom.DOMSignatureMethod$SHA1withDSA;

        specialinvoke $r8.<org.jcp.xml.dsig.internal.dom.DOMSignatureMethod$SHA1withDSA: void <init>(java.security.spec.AlgorithmParameterSpec)>(r2);

        return $r8;

     label06:
        $z5 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("http://www.w3.org/2000/09/xmldsig#hmac-sha1");

        if $z5 == 0 goto label07;

        $r7 = new org.jcp.xml.dsig.internal.dom.DOMHMACSignatureMethod$SHA1;

        specialinvoke $r7.<org.jcp.xml.dsig.internal.dom.DOMHMACSignatureMethod$SHA1: void <init>(java.security.spec.AlgorithmParameterSpec)>(r2);

        return $r7;

     label07:
        $z6 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("http://www.w3.org/2001/04/xmldsig-more#hmac-sha256");

        if $z6 == 0 goto label08;

        $r6 = new org.jcp.xml.dsig.internal.dom.DOMHMACSignatureMethod$SHA256;

        specialinvoke $r6.<org.jcp.xml.dsig.internal.dom.DOMHMACSignatureMethod$SHA256: void <init>(java.security.spec.AlgorithmParameterSpec)>(r2);

        return $r6;

     label08:
        $z7 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("http://www.w3.org/2001/04/xmldsig-more#hmac-sha384");

        if $z7 == 0 goto label09;

        $r5 = new org.jcp.xml.dsig.internal.dom.DOMHMACSignatureMethod$SHA384;

        specialinvoke $r5.<org.jcp.xml.dsig.internal.dom.DOMHMACSignatureMethod$SHA384: void <init>(java.security.spec.AlgorithmParameterSpec)>(r2);

        return $r5;

     label09:
        $z8 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("http://www.w3.org/2001/04/xmldsig-more#hmac-sha512");

        if $z8 == 0 goto label10;

        $r4 = new org.jcp.xml.dsig.internal.dom.DOMHMACSignatureMethod$SHA512;

        specialinvoke $r4.<org.jcp.xml.dsig.internal.dom.DOMHMACSignatureMethod$SHA512: void <init>(java.security.spec.AlgorithmParameterSpec)>(r2);

        return $r4;

     label10:
        $r3 = new java.security.NoSuchAlgorithmException;

        specialinvoke $r3.<java.security.NoSuchAlgorithmException: void <init>(java.lang.String)>("unsupported algorithm");

        throw $r3;
    }

    public javax.xml.crypto.dsig.Transform newTransform(java.lang.String, javax.xml.crypto.dsig.spec.TransformParameterSpec) throws java.security.NoSuchAlgorithmException, java.security.InvalidAlgorithmParameterException
    {
        org.jcp.xml.dsig.internal.dom.DOMXMLSignatureFactory r0;
        java.lang.String r1;
        javax.xml.crypto.dsig.spec.TransformParameterSpec r2;
        org.jcp.xml.dsig.internal.dom.DOMTransform $r4;
        java.security.NoSuchAlgorithmException $r5;
        java.security.Provider $r6;
        javax.xml.crypto.dsig.TransformService r7;

        r0 := @this: org.jcp.xml.dsig.internal.dom.DOMXMLSignatureFactory;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: javax.xml.crypto.dsig.spec.TransformParameterSpec;

     label1:
        r7 = staticinvoke <javax.xml.crypto.dsig.TransformService: javax.xml.crypto.dsig.TransformService getInstance(java.lang.String,java.lang.String)>(r1, "DOM");

     label2:
        goto label4;

     label3:
        $r5 := @caughtexception;

        $r6 = virtualinvoke r0.<org.jcp.xml.dsig.internal.dom.DOMXMLSignatureFactory: java.security.Provider getProvider()>();

        r7 = staticinvoke <javax.xml.crypto.dsig.TransformService: javax.xml.crypto.dsig.TransformService getInstance(java.lang.String,java.lang.String,java.security.Provider)>(r1, "DOM", $r6);

     label4:
        virtualinvoke r7.<javax.xml.crypto.dsig.TransformService: void init(javax.xml.crypto.dsig.spec.TransformParameterSpec)>(r2);

        $r4 = new org.jcp.xml.dsig.internal.dom.DOMTransform;

        specialinvoke $r4.<org.jcp.xml.dsig.internal.dom.DOMTransform: void <init>(javax.xml.crypto.dsig.TransformService)>(r7);

        return $r4;

        catch java.security.NoSuchAlgorithmException from label1 to label2 with label3;
    }

    public javax.xml.crypto.dsig.Transform newTransform(java.lang.String, javax.xml.crypto.XMLStructure) throws java.security.NoSuchAlgorithmException, java.security.InvalidAlgorithmParameterException
    {
        org.jcp.xml.dsig.internal.dom.DOMXMLSignatureFactory r0;
        java.lang.String r1;
        javax.xml.crypto.XMLStructure r2;
        org.jcp.xml.dsig.internal.dom.DOMTransform $r4;
        java.security.NoSuchAlgorithmException $r5;
        java.security.Provider $r6;
        javax.xml.crypto.dsig.TransformService r7;

        r0 := @this: org.jcp.xml.dsig.internal.dom.DOMXMLSignatureFactory;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: javax.xml.crypto.XMLStructure;

     label1:
        r7 = staticinvoke <javax.xml.crypto.dsig.TransformService: javax.xml.crypto.dsig.TransformService getInstance(java.lang.String,java.lang.String)>(r1, "DOM");

     label2:
        goto label4;

     label3:
        $r5 := @caughtexception;

        $r6 = virtualinvoke r0.<org.jcp.xml.dsig.internal.dom.DOMXMLSignatureFactory: java.security.Provider getProvider()>();

        r7 = staticinvoke <javax.xml.crypto.dsig.TransformService: javax.xml.crypto.dsig.TransformService getInstance(java.lang.String,java.lang.String,java.security.Provider)>(r1, "DOM", $r6);

     label4:
        if r2 != null goto label5;

        virtualinvoke r7.<javax.xml.crypto.dsig.TransformService: void init(javax.xml.crypto.dsig.spec.TransformParameterSpec)>(null);

        goto label6;

     label5:
        virtualinvoke r7.<javax.xml.crypto.dsig.TransformService: void init(javax.xml.crypto.XMLStructure,javax.xml.crypto.XMLCryptoContext)>(r2, null);

     label6:
        $r4 = new org.jcp.xml.dsig.internal.dom.DOMTransform;

        specialinvoke $r4.<org.jcp.xml.dsig.internal.dom.DOMTransform: void <init>(javax.xml.crypto.dsig.TransformService)>(r7);

        return $r4;

        catch java.security.NoSuchAlgorithmException from label1 to label2 with label3;
    }

    public javax.xml.crypto.dsig.CanonicalizationMethod newCanonicalizationMethod(java.lang.String, javax.xml.crypto.dsig.spec.C14NMethodParameterSpec) throws java.security.NoSuchAlgorithmException, java.security.InvalidAlgorithmParameterException
    {
        org.jcp.xml.dsig.internal.dom.DOMXMLSignatureFactory r0;
        java.lang.String r1;
        javax.xml.crypto.dsig.spec.C14NMethodParameterSpec r2;
        org.jcp.xml.dsig.internal.dom.DOMCanonicalizationMethod $r4;
        java.security.NoSuchAlgorithmException $r5;
        java.security.Provider $r6;
        javax.xml.crypto.dsig.TransformService r7;

        r0 := @this: org.jcp.xml.dsig.internal.dom.DOMXMLSignatureFactory;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: javax.xml.crypto.dsig.spec.C14NMethodParameterSpec;

     label1:
        r7 = staticinvoke <javax.xml.crypto.dsig.TransformService: javax.xml.crypto.dsig.TransformService getInstance(java.lang.String,java.lang.String)>(r1, "DOM");

     label2:
        goto label4;

     label3:
        $r5 := @caughtexception;

        $r6 = virtualinvoke r0.<org.jcp.xml.dsig.internal.dom.DOMXMLSignatureFactory: java.security.Provider getProvider()>();

        r7 = staticinvoke <javax.xml.crypto.dsig.TransformService: javax.xml.crypto.dsig.TransformService getInstance(java.lang.String,java.lang.String,java.security.Provider)>(r1, "DOM", $r6);

     label4:
        virtualinvoke r7.<javax.xml.crypto.dsig.TransformService: void init(javax.xml.crypto.dsig.spec.TransformParameterSpec)>(r2);

        $r4 = new org.jcp.xml.dsig.internal.dom.DOMCanonicalizationMethod;

        specialinvoke $r4.<org.jcp.xml.dsig.internal.dom.DOMCanonicalizationMethod: void <init>(javax.xml.crypto.dsig.TransformService)>(r7);

        return $r4;

        catch java.security.NoSuchAlgorithmException from label1 to label2 with label3;
    }

    public javax.xml.crypto.dsig.CanonicalizationMethod newCanonicalizationMethod(java.lang.String, javax.xml.crypto.XMLStructure) throws java.security.NoSuchAlgorithmException, java.security.InvalidAlgorithmParameterException
    {
        org.jcp.xml.dsig.internal.dom.DOMXMLSignatureFactory r0;
        java.lang.String r1;
        javax.xml.crypto.XMLStructure r2;
        org.jcp.xml.dsig.internal.dom.DOMCanonicalizationMethod $r4;
        java.security.NoSuchAlgorithmException $r5;
        java.security.Provider $r6;
        javax.xml.crypto.dsig.TransformService r7;

        r0 := @this: org.jcp.xml.dsig.internal.dom.DOMXMLSignatureFactory;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: javax.xml.crypto.XMLStructure;

     label1:
        r7 = staticinvoke <javax.xml.crypto.dsig.TransformService: javax.xml.crypto.dsig.TransformService getInstance(java.lang.String,java.lang.String)>(r1, "DOM");

     label2:
        goto label4;

     label3:
        $r5 := @caughtexception;

        $r6 = virtualinvoke r0.<org.jcp.xml.dsig.internal.dom.DOMXMLSignatureFactory: java.security.Provider getProvider()>();

        r7 = staticinvoke <javax.xml.crypto.dsig.TransformService: javax.xml.crypto.dsig.TransformService getInstance(java.lang.String,java.lang.String,java.security.Provider)>(r1, "DOM", $r6);

     label4:
        if r2 != null goto label5;

        virtualinvoke r7.<javax.xml.crypto.dsig.TransformService: void init(javax.xml.crypto.dsig.spec.TransformParameterSpec)>(null);

        goto label6;

     label5:
        virtualinvoke r7.<javax.xml.crypto.dsig.TransformService: void init(javax.xml.crypto.XMLStructure,javax.xml.crypto.XMLCryptoContext)>(r2, null);

     label6:
        $r4 = new org.jcp.xml.dsig.internal.dom.DOMCanonicalizationMethod;

        specialinvoke $r4.<org.jcp.xml.dsig.internal.dom.DOMCanonicalizationMethod: void <init>(javax.xml.crypto.dsig.TransformService)>(r7);

        return $r4;

        catch java.security.NoSuchAlgorithmException from label1 to label2 with label3;
    }

    public javax.xml.crypto.URIDereferencer getURIDereferencer()
    {
        org.jcp.xml.dsig.internal.dom.DOMXMLSignatureFactory r0;
        javax.xml.crypto.URIDereferencer $r1;

        r0 := @this: org.jcp.xml.dsig.internal.dom.DOMXMLSignatureFactory;

        $r1 = <org.jcp.xml.dsig.internal.dom.DOMURIDereferencer: javax.xml.crypto.URIDereferencer INSTANCE>;

        return $r1;
    }
}
