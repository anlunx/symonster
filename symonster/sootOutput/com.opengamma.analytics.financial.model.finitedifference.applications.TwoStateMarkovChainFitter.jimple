public class com.opengamma.analytics.financial.model.finitedifference.applications.TwoStateMarkovChainFitter extends java.lang.Object
{
    private static final org.slf4j.Logger s_logger;
    private static final com.opengamma.analytics.financial.model.volatility.BlackImpliedVolatilityFormula BLACK_IMPLIED_VOL;
    private static final com.opengamma.analytics.math.interpolation.DoubleQuadraticInterpolator1D INTERPOLATOR_1D;
    private static final com.opengamma.analytics.math.interpolation.GridInterpolator2D GRID_INTERPOLATOR2D;
    private static final com.opengamma.analytics.math.minimization.UncoupledParameterTransforms TRANSFORMS;
    private final double _theta;

    public void <init>()
    {
        com.opengamma.analytics.financial.model.finitedifference.applications.TwoStateMarkovChainFitter r0;

        r0 := @this: com.opengamma.analytics.financial.model.finitedifference.applications.TwoStateMarkovChainFitter;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.opengamma.analytics.financial.model.finitedifference.applications.TwoStateMarkovChainFitter: double _theta> = 0.5;

        return;
    }

    public void <init>(double)
    {
        com.opengamma.analytics.financial.model.finitedifference.applications.TwoStateMarkovChainFitter r0;
        double d0;

        r0 := @this: com.opengamma.analytics.financial.model.finitedifference.applications.TwoStateMarkovChainFitter;

        d0 := @parameter0: double;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.opengamma.analytics.financial.model.finitedifference.applications.TwoStateMarkovChainFitter: double _theta> = d0;

        return;
    }

    public com.opengamma.analytics.math.statistics.leastsquare.LeastSquareResultsWithTransform fit(com.opengamma.analytics.financial.model.interestrate.curve.ForwardCurve, java.util.List, com.opengamma.analytics.math.matrix.DoubleMatrix1D)
    {
        com.opengamma.analytics.financial.model.finitedifference.applications.TwoStateMarkovChainFitter r0;
        com.opengamma.analytics.financial.model.interestrate.curve.ForwardCurve r1;
        java.util.List r2;
        com.opengamma.analytics.math.matrix.DoubleMatrix1D r3, $r25, $r26, $r28, $r29, $r30, $r31;
        int i0, $i3, $i4, $i5, $i6, i11, i12;
        double[] r4, r10, r11;
        double d0, d1, d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, d11, d12, d13, d14, d15;
        com.opengamma.analytics.math.minimization.UncoupledParameterTransforms $r12, $r15, $r17, $r27, $r33;
        java.lang.Object[] $r13;
        java.lang.Integer $r14, $r16;
        com.opengamma.analytics.financial.model.finitedifference.ExponentialMeshing $r19;
        com.opengamma.analytics.financial.model.finitedifference.HyperbolicMeshing $r20;
        com.opengamma.analytics.financial.model.finitedifference.PDEGrid1D $r21;
        com.opengamma.analytics.financial.model.finitedifference.applications.TwoStateMarkovChainFitter$1 $r22;
        com.opengamma.analytics.financial.model.finitedifference.applications.TwoStateMarkovChainFitter$2 $r23;
        com.opengamma.analytics.math.statistics.leastsquare.NonLinearLeastSquare $r24;
        com.opengamma.analytics.math.statistics.leastsquare.LeastSquareResultsWithTransform $r32;
        java.lang.Object $r34, $r36, $r38, $r40;
        com.opengamma.util.tuple.Pair $r35, $r39;
        java.lang.Double $r37;
        byte $b7, $b8, $b9, $b10;
        boolean $z0;
        com.opengamma.analytics.math.statistics.leastsquare.LeastSquareResults r42, r43;

        r0 := @this: com.opengamma.analytics.financial.model.finitedifference.applications.TwoStateMarkovChainFitter;

        r1 := @parameter0: com.opengamma.analytics.financial.model.interestrate.curve.ForwardCurve;

        r2 := @parameter1: java.util.List;

        r3 := @parameter2: com.opengamma.analytics.math.matrix.DoubleMatrix1D;

        $i3 = virtualinvoke r3.<com.opengamma.analytics.math.matrix.DoubleMatrix1D: int getNumberOfElements()>();

        $r12 = <com.opengamma.analytics.financial.model.finitedifference.applications.TwoStateMarkovChainFitter: com.opengamma.analytics.math.minimization.UncoupledParameterTransforms TRANSFORMS>;

        $i4 = virtualinvoke $r12.<com.opengamma.analytics.math.minimization.UncoupledParameterTransforms: int getNumberOfModelParameters()>();

        if $i3 != $i4 goto label01;

        $z0 = 1;

        goto label02;

     label01:
        $z0 = 0;

     label02:
        $r13 = newarray (java.lang.Object)[2];

        $i5 = virtualinvoke r3.<com.opengamma.analytics.math.matrix.DoubleMatrix1D: int getNumberOfElements()>();

        $r14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i5);

        $r13[0] = $r14;

        $r15 = <com.opengamma.analytics.financial.model.finitedifference.applications.TwoStateMarkovChainFitter: com.opengamma.analytics.math.minimization.UncoupledParameterTransforms TRANSFORMS>;

        $i6 = virtualinvoke $r15.<com.opengamma.analytics.math.minimization.UncoupledParameterTransforms: int getNumberOfFittingParameters()>();

        $r16 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i6);

        $r13[1] = $r16;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String,java.lang.Object[])>($z0, "Number of elements in initial guess {} did not match the number of parameter transforms {}", $r13);

        $r17 = <com.opengamma.analytics.financial.model.finitedifference.applications.TwoStateMarkovChainFitter: com.opengamma.analytics.math.minimization.UncoupledParameterTransforms TRANSFORMS>;

        virtualinvoke $r17.<com.opengamma.analytics.math.minimization.UncoupledParameterTransforms: com.opengamma.analytics.math.matrix.DoubleMatrix1D transform(com.opengamma.analytics.math.matrix.DoubleMatrix1D)>(r3);

        i0 = interfaceinvoke r2.<java.util.List: int size()>();

        d11 = #Infinity;

        d12 = #Infinity;

        d13 = 0.0;

        d14 = 0.0;

        i11 = 0;

     label03:
        if i11 >= i0 goto label08;

        $r38 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>(i11);

        $r39 = (com.opengamma.util.tuple.Pair) $r38;

        $r40 = virtualinvoke $r39.<com.opengamma.util.tuple.Pair: java.lang.Object getFirst()>();

        r4 = (double[]) $r40;

        $d7 = r4[0];

        $b7 = $d7 cmpl d13;

        if $b7 <= 0 goto label04;

        d13 = r4[0];

     label04:
        $d8 = r4[0];

        $b8 = $d8 cmpg d11;

        if $b8 >= 0 goto label05;

        d11 = r4[0];

     label05:
        $d9 = r4[1];

        $b9 = $d9 cmpl d14;

        if $b9 <= 0 goto label06;

        d14 = r4[1];

     label06:
        $d10 = r4[1];

        $b10 = $d10 cmpg d12;

        if $b10 >= 0 goto label07;

        d12 = r4[1];

     label07:
        i11 = i11 + 1;

        goto label03;

     label08:
        d15 = 0.6 * d11;

        d0 = 0.9 * d12;

        d1 = 1.0 * d13;

        d2 = 1.1 * d14;

        $r19 = new com.opengamma.analytics.financial.model.finitedifference.ExponentialMeshing;

        specialinvoke $r19.<com.opengamma.analytics.financial.model.finitedifference.ExponentialMeshing: void <init>(double,double,int,double)>(0.0, d13, 20, 5.0);

        $r20 = new com.opengamma.analytics.financial.model.finitedifference.HyperbolicMeshing;

        $d3 = virtualinvoke r1.<com.opengamma.analytics.financial.model.interestrate.curve.ForwardCurve: double getForward(double)>(d1);

        $d4 = 10.0 * $d3;

        $d5 = virtualinvoke r1.<com.opengamma.analytics.financial.model.interestrate.curve.ForwardCurve: double getSpot()>();

        specialinvoke $r20.<com.opengamma.analytics.financial.model.finitedifference.HyperbolicMeshing: void <init>(double,double,double,int,double)>(0.0, $d4, $d5, 100, 0.01);

        $r21 = new com.opengamma.analytics.financial.model.finitedifference.PDEGrid1D;

        specialinvoke $r21.<com.opengamma.analytics.financial.model.finitedifference.PDEGrid1D: void <init>(com.opengamma.analytics.financial.model.finitedifference.MeshingFunction,com.opengamma.analytics.financial.model.finitedifference.MeshingFunction)>($r19, $r20);

        $r22 = new com.opengamma.analytics.financial.model.finitedifference.applications.TwoStateMarkovChainFitter$1;

        specialinvoke $r22.<com.opengamma.analytics.financial.model.finitedifference.applications.TwoStateMarkovChainFitter$1: void <init>(com.opengamma.analytics.financial.model.finitedifference.applications.TwoStateMarkovChainFitter,int,java.util.List,com.opengamma.analytics.financial.model.interestrate.curve.ForwardCurve)>(r0, i0, r2, r1);

        $r23 = new com.opengamma.analytics.financial.model.finitedifference.applications.TwoStateMarkovChainFitter$2;

        specialinvoke $r23.<com.opengamma.analytics.financial.model.finitedifference.applications.TwoStateMarkovChainFitter$2: void <init>(com.opengamma.analytics.financial.model.finitedifference.applications.TwoStateMarkovChainFitter,com.opengamma.analytics.financial.model.interestrate.curve.ForwardCurve,com.opengamma.analytics.financial.model.finitedifference.PDEGrid1D,double,double,double,double,int,java.util.List)>(r0, r1, $r21, d15, d1, d0, d2, i0, r2);

        r10 = newarray (double)[i0];

        r11 = newarray (double)[i0];

        i12 = 0;

     label09:
        if i12 >= i0 goto label10;

        $r34 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>(i12);

        $r35 = (com.opengamma.util.tuple.Pair) $r34;

        $r36 = virtualinvoke $r35.<com.opengamma.util.tuple.Pair: java.lang.Object getSecond()>();

        $r37 = (java.lang.Double) $r36;

        $d6 = virtualinvoke $r37.<java.lang.Double: double doubleValue()>();

        r10[i12] = $d6;

        r11[i12] = 0.01;

        i12 = i12 + 1;

        goto label09;

     label10:
        $r24 = new com.opengamma.analytics.math.statistics.leastsquare.NonLinearLeastSquare;

        specialinvoke $r24.<com.opengamma.analytics.math.statistics.leastsquare.NonLinearLeastSquare: void <init>()>();

        $r25 = new com.opengamma.analytics.math.matrix.DoubleMatrix1D;

        specialinvoke $r25.<com.opengamma.analytics.math.matrix.DoubleMatrix1D: void <init>(double[])>(r10);

        $r26 = new com.opengamma.analytics.math.matrix.DoubleMatrix1D;

        specialinvoke $r26.<com.opengamma.analytics.math.matrix.DoubleMatrix1D: void <init>(double[])>(r11);

        $r27 = <com.opengamma.analytics.financial.model.finitedifference.applications.TwoStateMarkovChainFitter: com.opengamma.analytics.math.minimization.UncoupledParameterTransforms TRANSFORMS>;

        $r28 = virtualinvoke $r27.<com.opengamma.analytics.math.minimization.UncoupledParameterTransforms: com.opengamma.analytics.math.matrix.DoubleMatrix1D transform(com.opengamma.analytics.math.matrix.DoubleMatrix1D)>(r3);

        r42 = virtualinvoke $r24.<com.opengamma.analytics.math.statistics.leastsquare.NonLinearLeastSquare: com.opengamma.analytics.math.statistics.leastsquare.LeastSquareResults solve(com.opengamma.analytics.math.matrix.DoubleMatrix1D,com.opengamma.analytics.math.matrix.DoubleMatrix1D,com.opengamma.analytics.math.function.Function1D,com.opengamma.analytics.math.matrix.DoubleMatrix1D)>($r25, $r26, $r22, $r28);

        $r29 = new com.opengamma.analytics.math.matrix.DoubleMatrix1D;

        specialinvoke $r29.<com.opengamma.analytics.math.matrix.DoubleMatrix1D: void <init>(double[])>(r10);

        $r30 = new com.opengamma.analytics.math.matrix.DoubleMatrix1D;

        specialinvoke $r30.<com.opengamma.analytics.math.matrix.DoubleMatrix1D: void <init>(double[])>(r11);

        $r31 = virtualinvoke r42.<com.opengamma.analytics.math.statistics.leastsquare.LeastSquareResults: com.opengamma.analytics.math.matrix.DoubleMatrix1D getFitParameters()>();

        r43 = virtualinvoke $r24.<com.opengamma.analytics.math.statistics.leastsquare.NonLinearLeastSquare: com.opengamma.analytics.math.statistics.leastsquare.LeastSquareResults solve(com.opengamma.analytics.math.matrix.DoubleMatrix1D,com.opengamma.analytics.math.matrix.DoubleMatrix1D,com.opengamma.analytics.math.function.Function1D,com.opengamma.analytics.math.matrix.DoubleMatrix1D)>($r29, $r30, $r23, $r31);

        $r32 = new com.opengamma.analytics.math.statistics.leastsquare.LeastSquareResultsWithTransform;

        $r33 = <com.opengamma.analytics.financial.model.finitedifference.applications.TwoStateMarkovChainFitter: com.opengamma.analytics.math.minimization.UncoupledParameterTransforms TRANSFORMS>;

        specialinvoke $r32.<com.opengamma.analytics.math.statistics.leastsquare.LeastSquareResultsWithTransform: void <init>(com.opengamma.analytics.math.statistics.leastsquare.LeastSquareResults,com.opengamma.analytics.math.minimization.NonLinearParameterTransforms)>(r43, $r33);

        return $r32;
    }

    private java.util.List transformData(com.opengamma.analytics.financial.model.interestrate.curve.ForwardCurve, com.opengamma.analytics.financial.model.interestrate.curve.YieldCurve, com.opengamma.analytics.financial.model.finitedifference.PDEFullResults1D, double, double, double, double)
    {
        com.opengamma.analytics.financial.model.finitedifference.applications.TwoStateMarkovChainFitter r0;
        com.opengamma.analytics.financial.model.interestrate.curve.ForwardCurve r1;
        com.opengamma.analytics.financial.model.interestrate.curve.YieldCurve r2;
        com.opengamma.analytics.financial.model.finitedifference.PDEFullResults1D r3;
        double d0, d1, d2, d3, d4, d5, d6, $d7, $d8, $d9, $d10, $d11, $d12, d13;
        int i0, i1, i2, i7, i8;
        com.opengamma.util.tuple.Pair r7;
        java.util.ArrayList $r8;
        byte $b3, $b4, $b5, $b6;
        com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackFunctionData $r9;
        com.opengamma.analytics.financial.model.option.pricing.analytic.formula.EuropeanVanillaOption $r10;
        com.opengamma.analytics.financial.model.volatility.BlackImpliedVolatilityFormula $r11;
        double[] $r12;
        java.lang.Double $r13;
        java.lang.Exception $r14;
        java.lang.StringBuilder $r15, $r17, $r18, $r19, $r20, $r21;
        org.slf4j.Logger $r16;
        java.lang.String $r22;

        r0 := @this: com.opengamma.analytics.financial.model.finitedifference.applications.TwoStateMarkovChainFitter;

        r1 := @parameter0: com.opengamma.analytics.financial.model.interestrate.curve.ForwardCurve;

        r2 := @parameter1: com.opengamma.analytics.financial.model.interestrate.curve.YieldCurve;

        r3 := @parameter2: com.opengamma.analytics.financial.model.finitedifference.PDEFullResults1D;

        d0 := @parameter3: double;

        d1 := @parameter4: double;

        d2 := @parameter5: double;

        d3 := @parameter6: double;

        i0 = virtualinvoke r3.<com.opengamma.analytics.financial.model.finitedifference.PDEFullResults1D: int getNumberSpaceNodes()>();

        i1 = virtualinvoke r3.<com.opengamma.analytics.financial.model.finitedifference.PDEFullResults1D: int getNumberTimeNodes()>();

        i2 = i0 * i1;

        $r8 = new java.util.ArrayList;

        specialinvoke $r8.<java.util.ArrayList: void <init>(int)>(i2);

        i7 = 0;

     label1:
        if i7 >= i1 goto label8;

        d4 = virtualinvoke r3.<com.opengamma.analytics.financial.model.finitedifference.PDEFullResults1D: double getTimeValue(int)>(i7);

        $b3 = d4 cmpl d0;

        if $b3 < 0 goto label7;

        $b4 = d4 cmpg d1;

        if $b4 > 0 goto label7;

        $r9 = new com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackFunctionData;

        $d7 = virtualinvoke r1.<com.opengamma.analytics.financial.model.interestrate.curve.ForwardCurve: double getForward(double)>(d4);

        $d8 = virtualinvoke r2.<com.opengamma.analytics.financial.model.interestrate.curve.YieldCurve: double getDiscountFactor(double)>(d4);

        specialinvoke $r9.<com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackFunctionData: void <init>(double,double,double)>($d7, $d8, 0.0);

        i8 = 0;

     label2:
        if i8 >= i0 goto label7;

        d5 = virtualinvoke r3.<com.opengamma.analytics.financial.model.finitedifference.PDEFullResults1D: double getSpaceValue(int)>(i8);

        $b5 = d5 cmpl d2;

        if $b5 < 0 goto label6;

        $b6 = d5 cmpg d3;

        if $b6 > 0 goto label6;

        d6 = virtualinvoke r3.<com.opengamma.analytics.financial.model.finitedifference.PDEFullResults1D: double getFunctionValue(int,int)>(i8, i7);

        $r10 = new com.opengamma.analytics.financial.model.option.pricing.analytic.formula.EuropeanVanillaOption;

        specialinvoke $r10.<com.opengamma.analytics.financial.model.option.pricing.analytic.formula.EuropeanVanillaOption: void <init>(double,double,boolean)>(d5, d4, 1);

     label3:
        $r11 = <com.opengamma.analytics.financial.model.finitedifference.applications.TwoStateMarkovChainFitter: com.opengamma.analytics.financial.model.volatility.BlackImpliedVolatilityFormula BLACK_IMPLIED_VOL>;

        d13 = virtualinvoke $r11.<com.opengamma.analytics.financial.model.volatility.BlackImpliedVolatilityFormula: double getImpliedVolatility(com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackFunctionData,com.opengamma.analytics.financial.model.option.pricing.analytic.formula.EuropeanVanillaOption,double)>($r9, $r10, d6);

        $r12 = newarray (double)[2];

        $d9 = virtualinvoke r3.<com.opengamma.analytics.financial.model.finitedifference.PDEFullResults1D: double getTimeValue(int)>(i7);

        $r12[0] = $d9;

        $d10 = virtualinvoke r3.<com.opengamma.analytics.financial.model.finitedifference.PDEFullResults1D: double getSpaceValue(int)>(i8);

        $r12[1] = $d10;

        $r13 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d13);

        r7 = staticinvoke <com.opengamma.util.tuple.Pairs: com.opengamma.util.tuple.Pair of(java.lang.Object,java.lang.Object)>($r12, $r13);

        interfaceinvoke $r8.<java.util.List: boolean add(java.lang.Object)>(r7);

     label4:
        goto label6;

     label5:
        $r14 := @caughtexception;

        $r16 = <com.opengamma.analytics.financial.model.finitedifference.applications.TwoStateMarkovChainFitter: org.slf4j.Logger s_logger>;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("can\'t find vol for strike: ");

        $d11 = virtualinvoke r3.<com.opengamma.analytics.financial.model.finitedifference.PDEFullResults1D: double getSpaceValue(int)>(i8);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d11);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" and expiry ");

        $d12 = virtualinvoke r3.<com.opengamma.analytics.financial.model.finitedifference.PDEFullResults1D: double getTimeValue(int)>(i7);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d12);

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" . Not added to data set");

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r16.<org.slf4j.Logger: void error(java.lang.String)>($r22);

     label6:
        i8 = i8 + 1;

        goto label2;

     label7:
        i7 = i7 + 1;

        goto label1;

     label8:
        return $r8;

        catch java.lang.Exception from label3 to label4 with label5;
    }

    static com.opengamma.analytics.math.minimization.UncoupledParameterTransforms access$000()
    {
        com.opengamma.analytics.math.minimization.UncoupledParameterTransforms $r0;

        $r0 = <com.opengamma.analytics.financial.model.finitedifference.applications.TwoStateMarkovChainFitter: com.opengamma.analytics.math.minimization.UncoupledParameterTransforms TRANSFORMS>;

        return $r0;
    }

    static com.opengamma.analytics.financial.model.volatility.BlackImpliedVolatilityFormula access$100()
    {
        com.opengamma.analytics.financial.model.volatility.BlackImpliedVolatilityFormula $r0;

        $r0 = <com.opengamma.analytics.financial.model.finitedifference.applications.TwoStateMarkovChainFitter: com.opengamma.analytics.financial.model.volatility.BlackImpliedVolatilityFormula BLACK_IMPLIED_VOL>;

        return $r0;
    }

    static double access$200(com.opengamma.analytics.financial.model.finitedifference.applications.TwoStateMarkovChainFitter)
    {
        com.opengamma.analytics.financial.model.finitedifference.applications.TwoStateMarkovChainFitter r0;
        double $d0;

        r0 := @parameter0: com.opengamma.analytics.financial.model.finitedifference.applications.TwoStateMarkovChainFitter;

        $d0 = r0.<com.opengamma.analytics.financial.model.finitedifference.applications.TwoStateMarkovChainFitter: double _theta>;

        return $d0;
    }

    static com.opengamma.analytics.math.interpolation.GridInterpolator2D access$300()
    {
        com.opengamma.analytics.math.interpolation.GridInterpolator2D $r0;

        $r0 = <com.opengamma.analytics.financial.model.finitedifference.applications.TwoStateMarkovChainFitter: com.opengamma.analytics.math.interpolation.GridInterpolator2D GRID_INTERPOLATOR2D>;

        return $r0;
    }

    static org.slf4j.Logger access$400()
    {
        org.slf4j.Logger $r0;

        $r0 = <com.opengamma.analytics.financial.model.finitedifference.applications.TwoStateMarkovChainFitter: org.slf4j.Logger s_logger>;

        return $r0;
    }

    static void <clinit>()
    {
        com.opengamma.analytics.math.minimization.ParameterLimitsTransform[] r0;
        org.slf4j.Logger $r1;
        com.opengamma.analytics.financial.model.volatility.BlackImpliedVolatilityFormula $r2;
        com.opengamma.analytics.math.interpolation.DoubleQuadraticInterpolator1D $r3, $r5, $r6;
        com.opengamma.analytics.math.interpolation.GridInterpolator2D $r4;
        com.opengamma.analytics.math.minimization.SingleRangeLimitTransform $r7, $r9;
        com.opengamma.analytics.math.minimization.ParameterLimitsTransform$LimitType $r8, $r10;
        com.opengamma.analytics.math.minimization.DoubleRangeLimitTransform $r11, $r12, $r13, $r14;
        com.opengamma.analytics.math.minimization.UncoupledParameterTransforms $r15;
        com.opengamma.analytics.math.matrix.DoubleMatrix1D $r16;
        double[] $r17;
        java.util.BitSet $r18;

        $r1 = staticinvoke <org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>(class "com/opengamma/analytics/financial/model/finitedifference/applications/TwoStateMarkovChainFitter");

        <com.opengamma.analytics.financial.model.finitedifference.applications.TwoStateMarkovChainFitter: org.slf4j.Logger s_logger> = $r1;

        $r2 = new com.opengamma.analytics.financial.model.volatility.BlackImpliedVolatilityFormula;

        specialinvoke $r2.<com.opengamma.analytics.financial.model.volatility.BlackImpliedVolatilityFormula: void <init>()>();

        <com.opengamma.analytics.financial.model.finitedifference.applications.TwoStateMarkovChainFitter: com.opengamma.analytics.financial.model.volatility.BlackImpliedVolatilityFormula BLACK_IMPLIED_VOL> = $r2;

        $r3 = <com.opengamma.analytics.math.interpolation.Interpolator1DFactory: com.opengamma.analytics.math.interpolation.DoubleQuadraticInterpolator1D DOUBLE_QUADRATIC_INSTANCE>;

        <com.opengamma.analytics.financial.model.finitedifference.applications.TwoStateMarkovChainFitter: com.opengamma.analytics.math.interpolation.DoubleQuadraticInterpolator1D INTERPOLATOR_1D> = $r3;

        $r4 = new com.opengamma.analytics.math.interpolation.GridInterpolator2D;

        $r6 = <com.opengamma.analytics.financial.model.finitedifference.applications.TwoStateMarkovChainFitter: com.opengamma.analytics.math.interpolation.DoubleQuadraticInterpolator1D INTERPOLATOR_1D>;

        $r5 = <com.opengamma.analytics.financial.model.finitedifference.applications.TwoStateMarkovChainFitter: com.opengamma.analytics.math.interpolation.DoubleQuadraticInterpolator1D INTERPOLATOR_1D>;

        specialinvoke $r4.<com.opengamma.analytics.math.interpolation.GridInterpolator2D: void <init>(com.opengamma.analytics.math.interpolation.Interpolator1D,com.opengamma.analytics.math.interpolation.Interpolator1D)>($r6, $r5);

        <com.opengamma.analytics.financial.model.finitedifference.applications.TwoStateMarkovChainFitter: com.opengamma.analytics.math.interpolation.GridInterpolator2D GRID_INTERPOLATOR2D> = $r4;

        r0 = newarray (com.opengamma.analytics.math.minimization.ParameterLimitsTransform)[6];

        $r7 = new com.opengamma.analytics.math.minimization.SingleRangeLimitTransform;

        $r8 = <com.opengamma.analytics.math.minimization.ParameterLimitsTransform$LimitType: com.opengamma.analytics.math.minimization.ParameterLimitsTransform$LimitType GREATER_THAN>;

        specialinvoke $r7.<com.opengamma.analytics.math.minimization.SingleRangeLimitTransform: void <init>(double,com.opengamma.analytics.math.minimization.ParameterLimitsTransform$LimitType)>(0.0, $r8);

        r0[0] = $r7;

        $r9 = new com.opengamma.analytics.math.minimization.SingleRangeLimitTransform;

        $r10 = <com.opengamma.analytics.math.minimization.ParameterLimitsTransform$LimitType: com.opengamma.analytics.math.minimization.ParameterLimitsTransform$LimitType GREATER_THAN>;

        specialinvoke $r9.<com.opengamma.analytics.math.minimization.SingleRangeLimitTransform: void <init>(double,com.opengamma.analytics.math.minimization.ParameterLimitsTransform$LimitType)>(0.0, $r10);

        r0[1] = $r9;

        $r11 = new com.opengamma.analytics.math.minimization.DoubleRangeLimitTransform;

        specialinvoke $r11.<com.opengamma.analytics.math.minimization.DoubleRangeLimitTransform: void <init>(double,double)>(0.1, 5.0);

        r0[2] = $r11;

        $r12 = new com.opengamma.analytics.math.minimization.DoubleRangeLimitTransform;

        specialinvoke $r12.<com.opengamma.analytics.math.minimization.DoubleRangeLimitTransform: void <init>(double,double)>(0.1, 5.0);

        r0[3] = $r12;

        $r13 = new com.opengamma.analytics.math.minimization.DoubleRangeLimitTransform;

        specialinvoke $r13.<com.opengamma.analytics.math.minimization.DoubleRangeLimitTransform: void <init>(double,double)>(0.0, 1.0);

        r0[4] = $r13;

        $r14 = new com.opengamma.analytics.math.minimization.DoubleRangeLimitTransform;

        specialinvoke $r14.<com.opengamma.analytics.math.minimization.DoubleRangeLimitTransform: void <init>(double,double)>(0.0, 2.0);

        r0[5] = $r14;

        $r15 = new com.opengamma.analytics.math.minimization.UncoupledParameterTransforms;

        $r16 = new com.opengamma.analytics.math.matrix.DoubleMatrix1D;

        $r17 = newarray (double)[6];

        specialinvoke $r16.<com.opengamma.analytics.math.matrix.DoubleMatrix1D: void <init>(double[])>($r17);

        $r18 = new java.util.BitSet;

        specialinvoke $r18.<java.util.BitSet: void <init>(int)>(6);

        specialinvoke $r15.<com.opengamma.analytics.math.minimization.UncoupledParameterTransforms: void <init>(com.opengamma.analytics.math.matrix.DoubleMatrix1D,com.opengamma.analytics.math.minimization.ParameterLimitsTransform[],java.util.BitSet)>($r16, r0, $r18);

        <com.opengamma.analytics.financial.model.finitedifference.applications.TwoStateMarkovChainFitter: com.opengamma.analytics.math.minimization.UncoupledParameterTransforms TRANSFORMS> = $r15;

        return;
    }
}
