public class com.opengamma.analytics.financial.model.option.definition.ForwardStartOptionDefinition extends com.opengamma.analytics.financial.model.option.definition.OptionDefinition
{
    private static final org.slf4j.Logger s_logger;
    private final com.opengamma.analytics.financial.model.option.definition.OptionExerciseFunction _exerciseFunction;
    private final com.opengamma.analytics.financial.model.option.definition.OptionPayoffFunction _payoffFunction;
    private final com.opengamma.util.time.Expiry _startTime;
    private final double _percent;
    private final com.opengamma.analytics.financial.model.option.Moneyness _moneyness;
    private final double _alpha;

    public void <init>(com.opengamma.util.time.Expiry, java.lang.Boolean, com.opengamma.util.time.Expiry)
    {
        com.opengamma.analytics.financial.model.option.definition.ForwardStartOptionDefinition r0;
        com.opengamma.util.time.Expiry r1, r3;
        java.lang.Boolean r2;
        com.opengamma.analytics.financial.model.option.Moneyness $r4;

        r0 := @this: com.opengamma.analytics.financial.model.option.definition.ForwardStartOptionDefinition;

        r1 := @parameter0: com.opengamma.util.time.Expiry;

        r2 := @parameter1: java.lang.Boolean;

        r3 := @parameter2: com.opengamma.util.time.Expiry;

        $r4 = <com.opengamma.analytics.financial.model.option.Moneyness: com.opengamma.analytics.financial.model.option.Moneyness ATM>;

        specialinvoke r0.<com.opengamma.analytics.financial.model.option.definition.ForwardStartOptionDefinition: void <init>(com.opengamma.util.time.Expiry,java.lang.Boolean,com.opengamma.util.time.Expiry,double,com.opengamma.analytics.financial.model.option.Moneyness)>(r1, r2, r3, 1.0, $r4);

        return;
    }

    public void <init>(com.opengamma.util.time.Expiry, java.lang.Boolean, com.opengamma.util.time.Expiry, double, com.opengamma.analytics.financial.model.option.Moneyness)
    {
        com.opengamma.analytics.financial.model.option.definition.ForwardStartOptionDefinition r0;
        com.opengamma.util.time.Expiry r1, r3;
        java.lang.Boolean r2;
        double d0, $d2, $d3;
        com.opengamma.analytics.financial.model.option.Moneyness r4, $r9;
        com.opengamma.analytics.financial.model.option.definition.EuropeanExerciseFunction $r5;
        com.opengamma.analytics.financial.model.option.definition.ForwardStartOptionDefinition$1 $r6;
        org.threeten.bp.ZonedDateTime $r7, $r8;
        boolean $z0, $z1, $z2;
        java.lang.IllegalArgumentException $r12, $r14;
        byte $b0;
        org.slf4j.Logger $r13;
        int[] $r15;
        int $i1, $i2;

        r0 := @this: com.opengamma.analytics.financial.model.option.definition.ForwardStartOptionDefinition;

        r1 := @parameter0: com.opengamma.util.time.Expiry;

        r2 := @parameter1: java.lang.Boolean;

        r3 := @parameter2: com.opengamma.util.time.Expiry;

        d0 := @parameter3: double;

        r4 := @parameter4: com.opengamma.analytics.financial.model.option.Moneyness;

        specialinvoke r0.<com.opengamma.analytics.financial.model.option.definition.OptionDefinition: void <init>(java.lang.Double,com.opengamma.util.time.Expiry,java.lang.Boolean)>(null, r1, r2);

        $r5 = new com.opengamma.analytics.financial.model.option.definition.EuropeanExerciseFunction;

        specialinvoke $r5.<com.opengamma.analytics.financial.model.option.definition.EuropeanExerciseFunction: void <init>()>();

        r0.<com.opengamma.analytics.financial.model.option.definition.ForwardStartOptionDefinition: com.opengamma.analytics.financial.model.option.definition.OptionExerciseFunction _exerciseFunction> = $r5;

        $r6 = new com.opengamma.analytics.financial.model.option.definition.ForwardStartOptionDefinition$1;

        specialinvoke $r6.<com.opengamma.analytics.financial.model.option.definition.ForwardStartOptionDefinition$1: void <init>(com.opengamma.analytics.financial.model.option.definition.ForwardStartOptionDefinition)>(r0);

        r0.<com.opengamma.analytics.financial.model.option.definition.ForwardStartOptionDefinition: com.opengamma.analytics.financial.model.option.definition.OptionPayoffFunction _payoffFunction> = $r6;

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object)>(r3);

        staticinvoke <com.opengamma.util.ArgumentChecker: double notNegative(double,java.lang.String)>(d0, "percent");

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object,java.lang.String)>(r4, "moneyness");

        $r7 = virtualinvoke r1.<com.opengamma.util.time.Expiry: org.threeten.bp.ZonedDateTime getExpiry()>();

        $r8 = virtualinvoke r3.<com.opengamma.util.time.Expiry: org.threeten.bp.ZonedDateTime getExpiry()>();

        $z0 = virtualinvoke $r7.<org.threeten.bp.ZonedDateTime: boolean isBefore(org.threeten.bp.chrono.ChronoZonedDateTime)>($r8);

        if $z0 == 0 goto label01;

        $r14 = new java.lang.IllegalArgumentException;

        specialinvoke $r14.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("The forward start time must be before the expiry of the option");

        throw $r14;

     label01:
        $r9 = <com.opengamma.analytics.financial.model.option.Moneyness: com.opengamma.analytics.financial.model.option.Moneyness ATM>;

        if r4 != $r9 goto label02;

        $b0 = d0 cmpl 1.0;

        if $b0 == 0 goto label02;

        $r13 = <com.opengamma.analytics.financial.model.option.definition.ForwardStartOptionDefinition: org.slf4j.Logger s_logger>;

        interfaceinvoke $r13.<org.slf4j.Logger: void info(java.lang.String)>("Option is ATM but percentage is not one; ignoring value for percent");

     label02:
        r0.<com.opengamma.analytics.financial.model.option.definition.ForwardStartOptionDefinition: com.opengamma.util.time.Expiry _startTime> = r3;

        r0.<com.opengamma.analytics.financial.model.option.definition.ForwardStartOptionDefinition: double _percent> = d0;

        r0.<com.opengamma.analytics.financial.model.option.definition.ForwardStartOptionDefinition: com.opengamma.analytics.financial.model.option.Moneyness _moneyness> = r4;

        $r15 = <com.opengamma.analytics.financial.model.option.definition.ForwardStartOptionDefinition$2: int[] $SwitchMap$com$opengamma$analytics$financial$model$option$Moneyness>;

        $i1 = virtualinvoke r4.<com.opengamma.analytics.financial.model.option.Moneyness: int ordinal()>();

        $i2 = $r15[$i1];

        tableswitch($i2)
        {
            case 1: goto label03;
            case 2: goto label06;
            case 3: goto label09;
            default: goto label10;
        };

     label03:
        $z2 = virtualinvoke r2.<java.lang.Boolean: boolean booleanValue()>();

        if $z2 == 0 goto label04;

        $d2 = 1.0 - d0;

        goto label05;

     label04:
        $d2 = 1.0 + d0;

     label05:
        r0.<com.opengamma.analytics.financial.model.option.definition.ForwardStartOptionDefinition: double _alpha> = $d2;

        goto label11;

     label06:
        $z1 = virtualinvoke r2.<java.lang.Boolean: boolean booleanValue()>();

        if $z1 == 0 goto label07;

        $d3 = d0 + 1.0;

        goto label08;

     label07:
        $d3 = 1.0 - d0;

     label08:
        r0.<com.opengamma.analytics.financial.model.option.definition.ForwardStartOptionDefinition: double _alpha> = $d3;

        goto label11;

     label09:
        r0.<com.opengamma.analytics.financial.model.option.definition.ForwardStartOptionDefinition: double _alpha> = 1.0;

        goto label11;

     label10:
        $r12 = new java.lang.IllegalArgumentException;

        specialinvoke $r12.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Can only handle ITM, OTM and ATM");

        throw $r12;

     label11:
        return;
    }

    public com.opengamma.util.time.Expiry getStartTime()
    {
        com.opengamma.analytics.financial.model.option.definition.ForwardStartOptionDefinition r0;
        com.opengamma.util.time.Expiry $r1;

        r0 := @this: com.opengamma.analytics.financial.model.option.definition.ForwardStartOptionDefinition;

        $r1 = r0.<com.opengamma.analytics.financial.model.option.definition.ForwardStartOptionDefinition: com.opengamma.util.time.Expiry _startTime>;

        return $r1;
    }

    public double getAlpha()
    {
        com.opengamma.analytics.financial.model.option.definition.ForwardStartOptionDefinition r0;
        double $d0;

        r0 := @this: com.opengamma.analytics.financial.model.option.definition.ForwardStartOptionDefinition;

        $d0 = r0.<com.opengamma.analytics.financial.model.option.definition.ForwardStartOptionDefinition: double _alpha>;

        return $d0;
    }

    public double getPercent()
    {
        com.opengamma.analytics.financial.model.option.definition.ForwardStartOptionDefinition r0;
        double $d0;

        r0 := @this: com.opengamma.analytics.financial.model.option.definition.ForwardStartOptionDefinition;

        $d0 = r0.<com.opengamma.analytics.financial.model.option.definition.ForwardStartOptionDefinition: double _percent>;

        return $d0;
    }

    public com.opengamma.analytics.financial.model.option.Moneyness getMoneyness()
    {
        com.opengamma.analytics.financial.model.option.definition.ForwardStartOptionDefinition r0;
        com.opengamma.analytics.financial.model.option.Moneyness $r1;

        r0 := @this: com.opengamma.analytics.financial.model.option.definition.ForwardStartOptionDefinition;

        $r1 = r0.<com.opengamma.analytics.financial.model.option.definition.ForwardStartOptionDefinition: com.opengamma.analytics.financial.model.option.Moneyness _moneyness>;

        return $r1;
    }

    public com.opengamma.analytics.financial.model.option.definition.OptionExerciseFunction getExerciseFunction()
    {
        com.opengamma.analytics.financial.model.option.definition.ForwardStartOptionDefinition r0;
        com.opengamma.analytics.financial.model.option.definition.OptionExerciseFunction $r1;

        r0 := @this: com.opengamma.analytics.financial.model.option.definition.ForwardStartOptionDefinition;

        $r1 = r0.<com.opengamma.analytics.financial.model.option.definition.ForwardStartOptionDefinition: com.opengamma.analytics.financial.model.option.definition.OptionExerciseFunction _exerciseFunction>;

        return $r1;
    }

    public com.opengamma.analytics.financial.model.option.definition.OptionPayoffFunction getPayoffFunction()
    {
        com.opengamma.analytics.financial.model.option.definition.ForwardStartOptionDefinition r0;
        com.opengamma.analytics.financial.model.option.definition.OptionPayoffFunction $r1;

        r0 := @this: com.opengamma.analytics.financial.model.option.definition.ForwardStartOptionDefinition;

        $r1 = r0.<com.opengamma.analytics.financial.model.option.definition.ForwardStartOptionDefinition: com.opengamma.analytics.financial.model.option.definition.OptionPayoffFunction _payoffFunction>;

        return $r1;
    }

    public double getTimeToStart(org.threeten.bp.ZonedDateTime)
    {
        com.opengamma.analytics.financial.model.option.definition.ForwardStartOptionDefinition r0;
        org.threeten.bp.ZonedDateTime r1, $r3, $r5;
        com.opengamma.util.time.Expiry $r2, $r4, $r11;
        boolean $z0;
        double $d0;
        java.lang.IllegalArgumentException $r6;
        java.lang.StringBuilder $r7, $r8, $r9, $r10, $r12;
        java.lang.String $r13;

        r0 := @this: com.opengamma.analytics.financial.model.option.definition.ForwardStartOptionDefinition;

        r1 := @parameter0: org.threeten.bp.ZonedDateTime;

        $r2 = virtualinvoke r0.<com.opengamma.analytics.financial.model.option.definition.ForwardStartOptionDefinition: com.opengamma.util.time.Expiry getStartTime()>();

        $r3 = virtualinvoke $r2.<com.opengamma.util.time.Expiry: org.threeten.bp.ZonedDateTime getExpiry()>();

        $z0 = virtualinvoke r1.<org.threeten.bp.ZonedDateTime: boolean isAfter(org.threeten.bp.chrono.ChronoZonedDateTime)>($r3);

        if $z0 == 0 goto label1;

        $r6 = new java.lang.IllegalArgumentException;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Date ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is after startTime ");

        $r11 = virtualinvoke r0.<com.opengamma.analytics.financial.model.option.definition.ForwardStartOptionDefinition: com.opengamma.util.time.Expiry getStartTime()>();

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r11);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r13);

        throw $r6;

     label1:
        $r4 = virtualinvoke r0.<com.opengamma.analytics.financial.model.option.definition.ForwardStartOptionDefinition: com.opengamma.util.time.Expiry getStartTime()>();

        $r5 = virtualinvoke $r4.<com.opengamma.util.time.Expiry: org.threeten.bp.ZonedDateTime getExpiry()>();

        $d0 = staticinvoke <com.opengamma.util.time.DateUtils: double getDifferenceInYears(org.threeten.bp.ZonedDateTime,org.threeten.bp.ZonedDateTime)>(r1, $r5);

        return $d0;
    }

    public int hashCode()
    {
        com.opengamma.analytics.financial.model.option.definition.ForwardStartOptionDefinition r0;
        long l1, $l3, $l4;
        com.opengamma.analytics.financial.model.option.Moneyness $r1, $r2;
        int $i2, $i5, $i6, $i7, i8, $i9, i10, i11, $i12, i13;
        double $d0;
        com.opengamma.util.time.Expiry $r3, $r4;

        r0 := @this: com.opengamma.analytics.financial.model.option.definition.ForwardStartOptionDefinition;

        i8 = specialinvoke r0.<com.opengamma.analytics.financial.model.option.definition.OptionDefinition: int hashCode()>();

        $i2 = 31 * i8;

        $r1 = r0.<com.opengamma.analytics.financial.model.option.definition.ForwardStartOptionDefinition: com.opengamma.analytics.financial.model.option.Moneyness _moneyness>;

        if $r1 != null goto label1;

        $i9 = 0;

        goto label2;

     label1:
        $r2 = r0.<com.opengamma.analytics.financial.model.option.definition.ForwardStartOptionDefinition: com.opengamma.analytics.financial.model.option.Moneyness _moneyness>;

        $i9 = virtualinvoke $r2.<com.opengamma.analytics.financial.model.option.Moneyness: int hashCode()>();

     label2:
        i10 = $i2 + $i9;

        $d0 = r0.<com.opengamma.analytics.financial.model.option.definition.ForwardStartOptionDefinition: double _percent>;

        l1 = staticinvoke <java.lang.Double: long doubleToLongBits(double)>($d0);

        $i6 = 31 * i10;

        $l3 = l1 >>> 32;

        $l4 = l1 ^ $l3;

        $i5 = (int) $l4;

        i11 = $i6 + $i5;

        $i7 = 31 * i11;

        $r3 = r0.<com.opengamma.analytics.financial.model.option.definition.ForwardStartOptionDefinition: com.opengamma.util.time.Expiry _startTime>;

        if $r3 != null goto label3;

        $i12 = 0;

        goto label4;

     label3:
        $r4 = r0.<com.opengamma.analytics.financial.model.option.definition.ForwardStartOptionDefinition: com.opengamma.util.time.Expiry _startTime>;

        $i12 = virtualinvoke $r4.<com.opengamma.util.time.Expiry: int hashCode()>();

     label4:
        i13 = $i7 + $i12;

        return i13;
    }

    public boolean equals(java.lang.Object)
    {
        com.opengamma.analytics.financial.model.option.definition.ForwardStartOptionDefinition r0, r2;
        java.lang.Object r1;
        boolean $z0, $z1, $z2;
        java.lang.Class $r3, $r4;
        com.opengamma.analytics.financial.model.option.Moneyness $r5, $r6;
        double $d0, $d1;
        long $l0, $l1;
        byte $b2;
        com.opengamma.util.time.Expiry $r7, $r8;

        r0 := @this: com.opengamma.analytics.financial.model.option.definition.ForwardStartOptionDefinition;

        r1 := @parameter0: java.lang.Object;

        if r0 != r1 goto label1;

        return 1;

     label1:
        $z0 = specialinvoke r0.<com.opengamma.analytics.financial.model.option.definition.OptionDefinition: boolean equals(java.lang.Object)>(r1);

        if $z0 != 0 goto label2;

        return 0;

     label2:
        $r3 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r4 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        if $r3 == $r4 goto label3;

        return 0;

     label3:
        r2 = (com.opengamma.analytics.financial.model.option.definition.ForwardStartOptionDefinition) r1;

        $r6 = r0.<com.opengamma.analytics.financial.model.option.definition.ForwardStartOptionDefinition: com.opengamma.analytics.financial.model.option.Moneyness _moneyness>;

        $r5 = r2.<com.opengamma.analytics.financial.model.option.definition.ForwardStartOptionDefinition: com.opengamma.analytics.financial.model.option.Moneyness _moneyness>;

        $z1 = staticinvoke <org.apache.commons.lang.ObjectUtils: boolean equals(java.lang.Object,java.lang.Object)>($r6, $r5);

        if $z1 != 0 goto label4;

        return 0;

     label4:
        $d0 = r0.<com.opengamma.analytics.financial.model.option.definition.ForwardStartOptionDefinition: double _percent>;

        $l0 = staticinvoke <java.lang.Double: long doubleToLongBits(double)>($d0);

        $d1 = r2.<com.opengamma.analytics.financial.model.option.definition.ForwardStartOptionDefinition: double _percent>;

        $l1 = staticinvoke <java.lang.Double: long doubleToLongBits(double)>($d1);

        $b2 = $l0 cmp $l1;

        if $b2 == 0 goto label5;

        return 0;

     label5:
        $r8 = r0.<com.opengamma.analytics.financial.model.option.definition.ForwardStartOptionDefinition: com.opengamma.util.time.Expiry _startTime>;

        $r7 = r2.<com.opengamma.analytics.financial.model.option.definition.ForwardStartOptionDefinition: com.opengamma.util.time.Expiry _startTime>;

        $z2 = staticinvoke <org.apache.commons.lang.ObjectUtils: boolean equals(java.lang.Object,java.lang.Object)>($r8, $r7);

        return $z2;
    }

    static void <clinit>()
    {
        org.slf4j.Logger $r0;

        $r0 = staticinvoke <org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>(class "com/opengamma/analytics/financial/model/option/definition/ForwardStartOptionDefinition");

        <com.opengamma.analytics.financial.model.option.definition.ForwardStartOptionDefinition: org.slf4j.Logger s_logger> = $r0;

        return;
    }
}
