public class com.opengamma.analytics.financial.model.option.pricing.tree.JabbourKraminYoungLatticeSpecification extends com.opengamma.analytics.financial.model.option.pricing.tree.LatticeSpecification
{

    public void <init>()
    {
        com.opengamma.analytics.financial.model.option.pricing.tree.JabbourKraminYoungLatticeSpecification r0;

        r0 := @this: com.opengamma.analytics.financial.model.option.pricing.tree.JabbourKraminYoungLatticeSpecification;

        specialinvoke r0.<com.opengamma.analytics.financial.model.option.pricing.tree.LatticeSpecification: void <init>()>();

        return;
    }

    public double[] getParameters(double, double, double, double, double, int, double)
    {
        com.opengamma.analytics.financial.model.option.pricing.tree.JabbourKraminYoungLatticeSpecification r0;
        double d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, d10, d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21, $d22, $d23, $d24, $d25, $d26, $d27, $d28, $d29, $d30, $d31;
        int i0;
        double[] $r1;

        r0 := @this: com.opengamma.analytics.financial.model.option.pricing.tree.JabbourKraminYoungLatticeSpecification;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        d2 := @parameter2: double;

        d3 := @parameter3: double;

        d4 := @parameter4: double;

        i0 := @parameter5: int;

        d5 := @parameter6: double;

        $d12 = 0.5 * d3;

        $d13 = $d12 * d3;

        $d14 = d4 - $d13;

        d6 = $d14 * d5;

        $d15 = staticinvoke <java.lang.Math: double sqrt(double)>(d5);

        d7 = d3 * $d15;

        $d16 = d3 * d3;

        $d17 = $d16 * d5;

        $d18 = 4.0 + $d17;

        $d19 = staticinvoke <java.lang.Math: double sqrt(double)>($d18);

        $d20 = d7 / $d19;

        $d21 = 1.0 - $d20;

        d8 = 0.5 * $d21;

        $d22 = 1.0 - d8;

        $d23 = d8 * $d22;

        d9 = staticinvoke <java.lang.Math: double sqrt(double)>($d23);

        $d24 = 1.0 - d8;

        $d25 = $d24 * d7;

        $d26 = $d25 / d9;

        $d27 = d6 + $d26;

        d10 = staticinvoke <java.lang.Math: double exp(double)>($d27);

        $d28 = d8 * d7;

        $d29 = $d28 / d9;

        $d30 = d6 - $d29;

        d11 = staticinvoke <java.lang.Math: double exp(double)>($d30);

        $r1 = newarray (double)[4];

        $r1[0] = d10;

        $r1[1] = d11;

        $r1[2] = d8;

        $d31 = 1.0 - d8;

        $r1[3] = $d31;

        return $r1;
    }
}
