class org.apache.commons.math3.ode.nonstiff.EulerStepInterpolator extends org.apache.commons.math3.ode.nonstiff.RungeKuttaStepInterpolator
{
    private static final long serialVersionUID;

    public void <init>()
    {
        org.apache.commons.math3.ode.nonstiff.EulerStepInterpolator r0;

        r0 := @this: org.apache.commons.math3.ode.nonstiff.EulerStepInterpolator;

        specialinvoke r0.<org.apache.commons.math3.ode.nonstiff.RungeKuttaStepInterpolator: void <init>()>();

        return;
    }

    public void <init>(org.apache.commons.math3.ode.nonstiff.EulerStepInterpolator)
    {
        org.apache.commons.math3.ode.nonstiff.EulerStepInterpolator r0, r1;

        r0 := @this: org.apache.commons.math3.ode.nonstiff.EulerStepInterpolator;

        r1 := @parameter0: org.apache.commons.math3.ode.nonstiff.EulerStepInterpolator;

        specialinvoke r0.<org.apache.commons.math3.ode.nonstiff.RungeKuttaStepInterpolator: void <init>(org.apache.commons.math3.ode.nonstiff.RungeKuttaStepInterpolator)>(r1);

        return;
    }

    protected org.apache.commons.math3.ode.sampling.StepInterpolator doCopy()
    {
        org.apache.commons.math3.ode.nonstiff.EulerStepInterpolator r0, $r1;

        r0 := @this: org.apache.commons.math3.ode.nonstiff.EulerStepInterpolator;

        $r1 = new org.apache.commons.math3.ode.nonstiff.EulerStepInterpolator;

        specialinvoke $r1.<org.apache.commons.math3.ode.nonstiff.EulerStepInterpolator: void <init>(org.apache.commons.math3.ode.nonstiff.EulerStepInterpolator)>(r0);

        return $r1;
    }

    protected void computeInterpolatedStateAndDerivatives(double, double)
    {
        org.apache.commons.math3.ode.nonstiff.EulerStepInterpolator r0;
        double d0, d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11;
        double[] $r1, $r3, $r4, $r5, $r6, $r8, $r9, $r10, $r12, $r13, $r14, $r15, $r17, $r18, $r19;
        double[][] $r2, $r7, $r11, $r16;
        int $i0, $i2, $i3, i4, i5, $i6;
        byte $b1;

        r0 := @this: org.apache.commons.math3.ode.nonstiff.EulerStepInterpolator;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        $r1 = r0.<org.apache.commons.math3.ode.nonstiff.EulerStepInterpolator: double[] previousState>;

        if $r1 == null goto label3;

        $b1 = d0 cmpg 0.5;

        if $b1 > 0 goto label3;

        i4 = 0;

     label1:
        $r10 = r0.<org.apache.commons.math3.ode.nonstiff.EulerStepInterpolator: double[] interpolatedState>;

        $i2 = lengthof $r10;

        if i4 >= $i2 goto label2;

        $r18 = r0.<org.apache.commons.math3.ode.nonstiff.EulerStepInterpolator: double[] interpolatedState>;

        $r15 = r0.<org.apache.commons.math3.ode.nonstiff.EulerStepInterpolator: double[] previousState>;

        $d10 = $r15[i4];

        $d6 = r0.<org.apache.commons.math3.ode.nonstiff.EulerStepInterpolator: double h>;

        $d8 = d0 * $d6;

        $r16 = r0.<org.apache.commons.math3.ode.nonstiff.EulerStepInterpolator: double[][] yDotK>;

        $r17 = $r16[0];

        $d7 = $r17[i4];

        $d9 = $d8 * $d7;

        $d11 = $d10 + $d9;

        $r18[i4] = $d11;

        i4 = i4 + 1;

        goto label1;

     label2:
        $r11 = r0.<org.apache.commons.math3.ode.nonstiff.EulerStepInterpolator: double[][] yDotK>;

        $r14 = $r11[0];

        $r13 = r0.<org.apache.commons.math3.ode.nonstiff.EulerStepInterpolator: double[] interpolatedDerivatives>;

        $r12 = r0.<org.apache.commons.math3.ode.nonstiff.EulerStepInterpolator: double[] interpolatedDerivatives>;

        $i3 = lengthof $r12;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r14, 0, $r13, 0, $i3);

        goto label6;

     label3:
        i5 = 0;

     label4:
        $r19 = r0.<org.apache.commons.math3.ode.nonstiff.EulerStepInterpolator: double[] interpolatedState>;

        $i6 = lengthof $r19;

        if i5 >= $i6 goto label5;

        $r9 = r0.<org.apache.commons.math3.ode.nonstiff.EulerStepInterpolator: double[] interpolatedState>;

        $r6 = r0.<org.apache.commons.math3.ode.nonstiff.EulerStepInterpolator: double[] currentState>;

        $d4 = $r6[i5];

        $r7 = r0.<org.apache.commons.math3.ode.nonstiff.EulerStepInterpolator: double[][] yDotK>;

        $r8 = $r7[0];

        $d2 = $r8[i5];

        $d3 = d1 * $d2;

        $d5 = $d4 - $d3;

        $r9[i5] = $d5;

        i5 = i5 + 1;

        goto label4;

     label5:
        $r2 = r0.<org.apache.commons.math3.ode.nonstiff.EulerStepInterpolator: double[][] yDotK>;

        $r5 = $r2[0];

        $r4 = r0.<org.apache.commons.math3.ode.nonstiff.EulerStepInterpolator: double[] interpolatedDerivatives>;

        $r3 = r0.<org.apache.commons.math3.ode.nonstiff.EulerStepInterpolator: double[] interpolatedDerivatives>;

        $i0 = lengthof $r3;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r5, 0, $r4, 0, $i0);

     label6:
        return;
    }

    public static void <clinit>()
    {
        <org.apache.commons.math3.ode.nonstiff.EulerStepInterpolator: long serialVersionUID> = 20111120L;

        return;
    }
}
