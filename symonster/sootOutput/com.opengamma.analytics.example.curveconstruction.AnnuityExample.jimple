public class com.opengamma.analytics.example.curveconstruction.AnnuityExample extends java.lang.Object
{
    public static final double[] FUNDING_CURVE_TIMES;
    public static final double[] LIBOR_CURVE_TIMES;
    public static final double[] FUNDING_YIELDS;
    public static final double[] LIBOR_YIELDS;
    public static final com.opengamma.util.money.Currency CCY;
    public static final double T;
    public static final double NOTIONAL;
    public static final double R;
    public static final java.lang.String FUNDING_CURVE_NAME;
    public static final java.lang.String LIBOR_CURVE_NAME;
    public static final int MATURITY;

    public void <init>()
    {
        com.opengamma.analytics.example.curveconstruction.AnnuityExample r0;

        r0 := @this: com.opengamma.analytics.example.curveconstruction.AnnuityExample;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static com.opengamma.analytics.financial.interestrate.YieldCurveBundle getBundle()
    {
        com.opengamma.analytics.math.interpolation.CombinedInterpolatorExtrapolator r1;
        com.opengamma.analytics.math.curve.InterpolatedDoublesCurve r2, r4;
        com.opengamma.analytics.financial.model.interestrate.curve.YieldCurve r3, r5;
        com.opengamma.analytics.financial.interestrate.YieldCurveBundle $r6;
        double[] $r7, $r8, $r9, $r10;

        $r6 = new com.opengamma.analytics.financial.interestrate.YieldCurveBundle;

        specialinvoke $r6.<com.opengamma.analytics.financial.interestrate.YieldCurveBundle: void <init>()>();

        r1 = staticinvoke <com.opengamma.analytics.math.interpolation.CombinedInterpolatorExtrapolatorFactory: com.opengamma.analytics.math.interpolation.CombinedInterpolatorExtrapolator getInterpolator(java.lang.String,java.lang.String,java.lang.String)>("DoubleQuadratic", "LinearExtrapolator", "FlatExtrapolator");

        $r8 = <com.opengamma.analytics.example.curveconstruction.AnnuityExample: double[] FUNDING_CURVE_TIMES>;

        $r7 = <com.opengamma.analytics.example.curveconstruction.AnnuityExample: double[] FUNDING_YIELDS>;

        r2 = staticinvoke <com.opengamma.analytics.math.curve.InterpolatedDoublesCurve: com.opengamma.analytics.math.curve.InterpolatedDoublesCurve 'from'(double[],double[],com.opengamma.analytics.math.interpolation.Interpolator1D)>($r8, $r7, r1);

        r3 = staticinvoke <com.opengamma.analytics.financial.model.interestrate.curve.YieldCurve: com.opengamma.analytics.financial.model.interestrate.curve.YieldCurve 'from'(com.opengamma.analytics.math.curve.DoublesCurve)>(r2);

        virtualinvoke $r6.<com.opengamma.analytics.financial.interestrate.YieldCurveBundle: void setCurve(java.lang.String,com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve)>("Funding Curve", r3);

        $r10 = <com.opengamma.analytics.example.curveconstruction.AnnuityExample: double[] LIBOR_CURVE_TIMES>;

        $r9 = <com.opengamma.analytics.example.curveconstruction.AnnuityExample: double[] LIBOR_YIELDS>;

        r4 = staticinvoke <com.opengamma.analytics.math.curve.InterpolatedDoublesCurve: com.opengamma.analytics.math.curve.InterpolatedDoublesCurve 'from'(double[],double[],com.opengamma.analytics.math.interpolation.Interpolator1D)>($r10, $r9, r1);

        r5 = staticinvoke <com.opengamma.analytics.financial.model.interestrate.curve.YieldCurve: com.opengamma.analytics.financial.model.interestrate.curve.YieldCurve 'from'(com.opengamma.analytics.math.curve.DoublesCurve)>(r4);

        virtualinvoke $r6.<com.opengamma.analytics.financial.interestrate.YieldCurveBundle: void setCurve(java.lang.String,com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve)>("Libor Curve", r5);

        return $r6;
    }

    public static double[] fixedPaymentTimes(int)
    {
        int i0, $i1, i2;
        double[] r0;
        double $d0;

        i0 := @parameter0: int;

        $i1 = i0 + 1;

        r0 = newarray (double)[$i1];

        i2 = 0;

     label1:
        if i2 > i0 goto label2;

        $d0 = (double) i2;

        r0[i2] = $d0;

        i2 = i2 + 1;

        goto label1;

     label2:
        return r0;
    }

    public static void fixedPaymentTimesDemo(java.io.PrintStream)
    {
        java.io.PrintStream r0;
        double[] r1;
        java.lang.String $r2;

        r0 := @parameter0: java.io.PrintStream;

        r1 = staticinvoke <com.opengamma.analytics.example.curveconstruction.AnnuityExample: double[] fixedPaymentTimes(int)>(5);

        $r2 = staticinvoke <java.util.Arrays: java.lang.String toString(double[])>(r1);

        virtualinvoke r0.<java.io.PrintStream: void println(java.lang.String)>($r2);

        return;
    }

    public static void annuityFixedDemo(java.io.PrintStream)
    {
        java.io.PrintStream r0;
        double[] r1;
        com.opengamma.analytics.financial.interestrate.YieldCurveBundle r3;
        com.opengamma.analytics.financial.interestrate.PresentValueCalculator r4;
        double d0;
        com.opengamma.analytics.financial.interestrate.annuity.derivative.AnnuityCouponFixed $r5;
        com.opengamma.util.money.Currency $r6;
        com.opengamma.analytics.financial.interestrate.payments.derivative.Payment[] $r7;
        java.lang.String $r8;
        java.lang.Object $r9;
        java.lang.Double $r10, $r12;
        java.lang.Object[] $r11;

        r0 := @parameter0: java.io.PrintStream;

        r1 = staticinvoke <com.opengamma.analytics.example.curveconstruction.AnnuityExample: double[] fixedPaymentTimes(int)>(5);

        $r5 = new com.opengamma.analytics.financial.interestrate.annuity.derivative.AnnuityCouponFixed;

        $r6 = <com.opengamma.analytics.example.curveconstruction.AnnuityExample: com.opengamma.util.money.Currency CCY>;

        specialinvoke $r5.<com.opengamma.analytics.financial.interestrate.annuity.derivative.AnnuityCouponFixed: void <init>(com.opengamma.util.money.Currency,double[],double,java.lang.String,boolean)>($r6, r1, 0.03, "Libor Curve", 0);

        $r7 = virtualinvoke $r5.<com.opengamma.analytics.financial.interestrate.annuity.derivative.AnnuityCouponFixed: com.opengamma.analytics.financial.interestrate.payments.derivative.Payment[] getPayments()>();

        $r8 = staticinvoke <java.util.Arrays: java.lang.String deepToString(java.lang.Object[])>($r7);

        virtualinvoke r0.<java.io.PrintStream: void println(java.lang.String)>($r8);

        r3 = staticinvoke <com.opengamma.analytics.example.curveconstruction.AnnuityExample: com.opengamma.analytics.financial.interestrate.YieldCurveBundle getBundle()>();

        r4 = staticinvoke <com.opengamma.analytics.financial.interestrate.PresentValueCalculator: com.opengamma.analytics.financial.interestrate.PresentValueCalculator getInstance()>();

        $r9 = virtualinvoke $r5.<com.opengamma.analytics.financial.interestrate.annuity.derivative.AnnuityCouponFixed: java.lang.Object accept(com.opengamma.analytics.financial.interestrate.InstrumentDerivativeVisitor,java.lang.Object)>(r4, r3);

        $r10 = (java.lang.Double) $r9;

        d0 = virtualinvoke $r10.<java.lang.Double: double doubleValue()>();

        $r11 = newarray (java.lang.Object)[1];

        $r12 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d0);

        $r11[0] = $r12;

        virtualinvoke r0.<java.io.PrintStream: java.io.PrintStream format(java.lang.String,java.lang.Object[])>("Present Value %f%n", $r11);

        return;
    }

    public static double[] floatingPaymentTimes(int)
    {
        int i0, $i1, $i2, $i3, i4;
        double[] r0;
        double $d0, $d1;

        i0 := @parameter0: int;

        $i1 = 2 * i0;

        $i2 = $i1 + 1;

        r0 = newarray (double)[$i2];

        i4 = 0;

     label1:
        $i3 = 2 * i0;

        if i4 > $i3 goto label2;

        $d0 = (double) i4;

        $d1 = $d0 * 0.5;

        r0[i4] = $d1;

        i4 = i4 + 1;

        goto label1;

     label2:
        return r0;
    }

    public static void floatingPaymentTimesDemo(java.io.PrintStream)
    {
        java.io.PrintStream r0;
        double[] r1;
        java.lang.String $r2;

        r0 := @parameter0: java.io.PrintStream;

        r1 = staticinvoke <com.opengamma.analytics.example.curveconstruction.AnnuityExample: double[] floatingPaymentTimes(int)>(5);

        $r2 = staticinvoke <java.util.Arrays: java.lang.String toString(double[])>(r1);

        virtualinvoke r0.<java.io.PrintStream: void println(java.lang.String)>($r2);

        return;
    }

    static void <clinit>()
    {
        double[] $r0, $r1, $r2, $r3;
        com.opengamma.util.money.Currency $r4;

        <com.opengamma.analytics.example.curveconstruction.AnnuityExample: int MATURITY> = 5;

        <com.opengamma.analytics.example.curveconstruction.AnnuityExample: java.lang.String LIBOR_CURVE_NAME> = "Libor Curve";

        <com.opengamma.analytics.example.curveconstruction.AnnuityExample: java.lang.String FUNDING_CURVE_NAME> = "Funding Curve";

        <com.opengamma.analytics.example.curveconstruction.AnnuityExample: double R> = 0.03;

        <com.opengamma.analytics.example.curveconstruction.AnnuityExample: double NOTIONAL> = 10000.0;

        <com.opengamma.analytics.example.curveconstruction.AnnuityExample: double T> = 1.0;

        $r0 = newarray (double)[6];

        $r0[0] = 1.0;

        $r0[1] = 2.0;

        $r0[2] = 5.0;

        $r0[3] = 10.0;

        $r0[4] = 20.0;

        $r0[5] = 31.0;

        <com.opengamma.analytics.example.curveconstruction.AnnuityExample: double[] FUNDING_CURVE_TIMES> = $r0;

        $r1 = newarray (double)[7];

        $r1[0] = 0.5;

        $r1[1] = 1.0;

        $r1[2] = 2.0;

        $r1[3] = 5.0;

        $r1[4] = 10.0;

        $r1[5] = 20.0;

        $r1[6] = 31.0;

        <com.opengamma.analytics.example.curveconstruction.AnnuityExample: double[] LIBOR_CURVE_TIMES> = $r1;

        $r2 = newarray (double)[6];

        $r2[0] = 0.021;

        $r2[1] = 0.036;

        $r2[2] = 0.06;

        $r2[3] = 0.054;

        $r2[4] = 0.049;

        $r2[5] = 0.044;

        <com.opengamma.analytics.example.curveconstruction.AnnuityExample: double[] FUNDING_YIELDS> = $r2;

        $r3 = newarray (double)[7];

        $r3[0] = 0.01;

        $r3[1] = 0.02;

        $r3[2] = 0.035;

        $r3[3] = 0.06;

        $r3[4] = 0.055;

        $r3[5] = 0.05;

        $r3[6] = 0.045;

        <com.opengamma.analytics.example.curveconstruction.AnnuityExample: double[] LIBOR_YIELDS> = $r3;

        $r4 = <com.opengamma.util.money.Currency: com.opengamma.util.money.Currency EUR>;

        <com.opengamma.analytics.example.curveconstruction.AnnuityExample: com.opengamma.util.money.Currency CCY> = $r4;

        return;
    }
}
