class org.apache.commons.math3.stat.descriptive.rank.PSquarePercentile$FixedCapacityList extends java.util.ArrayList implements java.io.Serializable
{
    private static final long serialVersionUID;
    private final int capacity;

    public void <init>(int)
    {
        org.apache.commons.math3.stat.descriptive.rank.PSquarePercentile$FixedCapacityList r0;
        int i0;

        r0 := @this: org.apache.commons.math3.stat.descriptive.rank.PSquarePercentile$FixedCapacityList;

        i0 := @parameter0: int;

        specialinvoke r0.<java.util.ArrayList: void <init>(int)>(i0);

        r0.<org.apache.commons.math3.stat.descriptive.rank.PSquarePercentile$FixedCapacityList: int capacity> = i0;

        return;
    }

    public boolean add(java.lang.Object)
    {
        org.apache.commons.math3.stat.descriptive.rank.PSquarePercentile$FixedCapacityList r0;
        java.lang.Object r1;
        int $i0, $i1;
        boolean $z0;

        r0 := @this: org.apache.commons.math3.stat.descriptive.rank.PSquarePercentile$FixedCapacityList;

        r1 := @parameter0: java.lang.Object;

        $i0 = virtualinvoke r0.<org.apache.commons.math3.stat.descriptive.rank.PSquarePercentile$FixedCapacityList: int size()>();

        $i1 = r0.<org.apache.commons.math3.stat.descriptive.rank.PSquarePercentile$FixedCapacityList: int capacity>;

        if $i0 >= $i1 goto label1;

        $z0 = specialinvoke r0.<java.util.ArrayList: boolean add(java.lang.Object)>(r1);

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public boolean addAll(java.util.Collection)
    {
        org.apache.commons.math3.stat.descriptive.rank.PSquarePercentile$FixedCapacityList r0;
        java.util.Collection r1;
        int $i0, $i1, $i2, $i3;
        boolean $z1, $z2;

        r0 := @this: org.apache.commons.math3.stat.descriptive.rank.PSquarePercentile$FixedCapacityList;

        r1 := @parameter0: java.util.Collection;

        if r1 == null goto label1;

        $i0 = interfaceinvoke r1.<java.util.Collection: int size()>();

        $i1 = virtualinvoke r0.<org.apache.commons.math3.stat.descriptive.rank.PSquarePercentile$FixedCapacityList: int size()>();

        $i3 = $i0 + $i1;

        $i2 = r0.<org.apache.commons.math3.stat.descriptive.rank.PSquarePercentile$FixedCapacityList: int capacity>;

        if $i3 > $i2 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        if $z1 == 0 goto label3;

        $z2 = specialinvoke r0.<java.util.ArrayList: boolean addAll(java.util.Collection)>(r1);

        goto label4;

     label3:
        $z2 = 0;

     label4:
        return $z2;
    }

    public static void <clinit>()
    {
        <org.apache.commons.math3.stat.descriptive.rank.PSquarePercentile$FixedCapacityList: long serialVersionUID> = 2283952083075725479L;

        return;
    }
}
