public abstract class org.omg.PortableInterceptor.AdapterStateHelper extends java.lang.Object
{
    private static java.lang.String _id;
    private static org.omg.CORBA.TypeCode __typeCode;

    public void <init>()
    {
        org.omg.PortableInterceptor.AdapterStateHelper r0;

        r0 := @this: org.omg.PortableInterceptor.AdapterStateHelper;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static void insert(org.omg.CORBA.Any, short)
    {
        org.omg.CORBA.Any r0;
        short s0;
        org.omg.CORBA.portable.OutputStream r1;
        org.omg.CORBA.TypeCode $r2, $r4;
        org.omg.CORBA.portable.InputStream $r3;

        r0 := @parameter0: org.omg.CORBA.Any;

        s0 := @parameter1: short;

        r1 = virtualinvoke r0.<org.omg.CORBA.Any: org.omg.CORBA.portable.OutputStream create_output_stream()>();

        $r2 = staticinvoke <org.omg.PortableInterceptor.AdapterStateHelper: org.omg.CORBA.TypeCode type()>();

        virtualinvoke r0.<org.omg.CORBA.Any: void type(org.omg.CORBA.TypeCode)>($r2);

        staticinvoke <org.omg.PortableInterceptor.AdapterStateHelper: void write(org.omg.CORBA.portable.OutputStream,short)>(r1, s0);

        $r3 = virtualinvoke r1.<org.omg.CORBA.portable.OutputStream: org.omg.CORBA.portable.InputStream create_input_stream()>();

        $r4 = staticinvoke <org.omg.PortableInterceptor.AdapterStateHelper: org.omg.CORBA.TypeCode type()>();

        virtualinvoke r0.<org.omg.CORBA.Any: void read_value(org.omg.CORBA.portable.InputStream,org.omg.CORBA.TypeCode)>($r3, $r4);

        return;
    }

    public static short extract(org.omg.CORBA.Any)
    {
        org.omg.CORBA.Any r0;
        org.omg.CORBA.portable.InputStream $r1;
        short $s0;

        r0 := @parameter0: org.omg.CORBA.Any;

        $r1 = virtualinvoke r0.<org.omg.CORBA.Any: org.omg.CORBA.portable.InputStream create_input_stream()>();

        $s0 = staticinvoke <org.omg.PortableInterceptor.AdapterStateHelper: short read(org.omg.CORBA.portable.InputStream)>($r1);

        return $s0;
    }

    public static synchronized org.omg.CORBA.TypeCode type()
    {
        org.omg.CORBA.TypeCode $r0, $r1, $r4, $r7, $r8;
        org.omg.CORBA.ORB $r2, $r5;
        org.omg.CORBA.TCKind $r3;
        java.lang.String $r6;

        $r0 = <org.omg.PortableInterceptor.AdapterStateHelper: org.omg.CORBA.TypeCode __typeCode>;

        if $r0 != null goto label1;

        $r2 = staticinvoke <org.omg.CORBA.ORB: org.omg.CORBA.ORB init()>();

        $r3 = <org.omg.CORBA.TCKind: org.omg.CORBA.TCKind tk_short>;

        $r4 = virtualinvoke $r2.<org.omg.CORBA.ORB: org.omg.CORBA.TypeCode get_primitive_tc(org.omg.CORBA.TCKind)>($r3);

        <org.omg.PortableInterceptor.AdapterStateHelper: org.omg.CORBA.TypeCode __typeCode> = $r4;

        $r5 = staticinvoke <org.omg.CORBA.ORB: org.omg.CORBA.ORB init()>();

        $r6 = staticinvoke <org.omg.PortableInterceptor.AdapterStateHelper: java.lang.String id()>();

        $r7 = <org.omg.PortableInterceptor.AdapterStateHelper: org.omg.CORBA.TypeCode __typeCode>;

        $r8 = virtualinvoke $r5.<org.omg.CORBA.ORB: org.omg.CORBA.TypeCode create_alias_tc(java.lang.String,java.lang.String,org.omg.CORBA.TypeCode)>($r6, "AdapterState", $r7);

        <org.omg.PortableInterceptor.AdapterStateHelper: org.omg.CORBA.TypeCode __typeCode> = $r8;

     label1:
        $r1 = <org.omg.PortableInterceptor.AdapterStateHelper: org.omg.CORBA.TypeCode __typeCode>;

        return $r1;
    }

    public static java.lang.String id()
    {
        java.lang.String $r0;

        $r0 = <org.omg.PortableInterceptor.AdapterStateHelper: java.lang.String _id>;

        return $r0;
    }

    public static short read(org.omg.CORBA.portable.InputStream)
    {
        org.omg.CORBA.portable.InputStream r0;
        short s0;

        r0 := @parameter0: org.omg.CORBA.portable.InputStream;

        s0 = virtualinvoke r0.<org.omg.CORBA.portable.InputStream: short read_short()>();

        return s0;
    }

    public static void write(org.omg.CORBA.portable.OutputStream, short)
    {
        org.omg.CORBA.portable.OutputStream r0;
        short s0;

        r0 := @parameter0: org.omg.CORBA.portable.OutputStream;

        s0 := @parameter1: short;

        virtualinvoke r0.<org.omg.CORBA.portable.OutputStream: void write_short(short)>(s0);

        return;
    }

    static void <clinit>()
    {
        <org.omg.PortableInterceptor.AdapterStateHelper: java.lang.String _id> = "IDL:omg.org/PortableInterceptor/AdapterState:1.0";

        <org.omg.PortableInterceptor.AdapterStateHelper: org.omg.CORBA.TypeCode __typeCode> = null;

        return;
    }
}
