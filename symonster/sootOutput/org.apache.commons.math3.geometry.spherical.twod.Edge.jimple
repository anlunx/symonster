public class org.apache.commons.math3.geometry.spherical.twod.Edge extends java.lang.Object
{
    private final org.apache.commons.math3.geometry.spherical.twod.Vertex start;
    private org.apache.commons.math3.geometry.spherical.twod.Vertex end;
    private final double length;
    private final org.apache.commons.math3.geometry.spherical.twod.Circle circle;

    void <init>(org.apache.commons.math3.geometry.spherical.twod.Vertex, org.apache.commons.math3.geometry.spherical.twod.Vertex, double, org.apache.commons.math3.geometry.spherical.twod.Circle)
    {
        org.apache.commons.math3.geometry.spherical.twod.Edge r0;
        org.apache.commons.math3.geometry.spherical.twod.Vertex r1, r2;
        double d0;
        org.apache.commons.math3.geometry.spherical.twod.Circle r3;

        r0 := @this: org.apache.commons.math3.geometry.spherical.twod.Edge;

        r1 := @parameter0: org.apache.commons.math3.geometry.spherical.twod.Vertex;

        r2 := @parameter1: org.apache.commons.math3.geometry.spherical.twod.Vertex;

        d0 := @parameter2: double;

        r3 := @parameter3: org.apache.commons.math3.geometry.spherical.twod.Circle;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.commons.math3.geometry.spherical.twod.Edge: org.apache.commons.math3.geometry.spherical.twod.Vertex start> = r1;

        r0.<org.apache.commons.math3.geometry.spherical.twod.Edge: org.apache.commons.math3.geometry.spherical.twod.Vertex end> = r2;

        r0.<org.apache.commons.math3.geometry.spherical.twod.Edge: double length> = d0;

        r0.<org.apache.commons.math3.geometry.spherical.twod.Edge: org.apache.commons.math3.geometry.spherical.twod.Circle circle> = r3;

        virtualinvoke r1.<org.apache.commons.math3.geometry.spherical.twod.Vertex: void setOutgoing(org.apache.commons.math3.geometry.spherical.twod.Edge)>(r0);

        virtualinvoke r2.<org.apache.commons.math3.geometry.spherical.twod.Vertex: void setIncoming(org.apache.commons.math3.geometry.spherical.twod.Edge)>(r0);

        return;
    }

    public org.apache.commons.math3.geometry.spherical.twod.Vertex getStart()
    {
        org.apache.commons.math3.geometry.spherical.twod.Edge r0;
        org.apache.commons.math3.geometry.spherical.twod.Vertex $r1;

        r0 := @this: org.apache.commons.math3.geometry.spherical.twod.Edge;

        $r1 = r0.<org.apache.commons.math3.geometry.spherical.twod.Edge: org.apache.commons.math3.geometry.spherical.twod.Vertex start>;

        return $r1;
    }

    public org.apache.commons.math3.geometry.spherical.twod.Vertex getEnd()
    {
        org.apache.commons.math3.geometry.spherical.twod.Edge r0;
        org.apache.commons.math3.geometry.spherical.twod.Vertex $r1;

        r0 := @this: org.apache.commons.math3.geometry.spherical.twod.Edge;

        $r1 = r0.<org.apache.commons.math3.geometry.spherical.twod.Edge: org.apache.commons.math3.geometry.spherical.twod.Vertex end>;

        return $r1;
    }

    public double getLength()
    {
        org.apache.commons.math3.geometry.spherical.twod.Edge r0;
        double $d0;

        r0 := @this: org.apache.commons.math3.geometry.spherical.twod.Edge;

        $d0 = r0.<org.apache.commons.math3.geometry.spherical.twod.Edge: double length>;

        return $d0;
    }

    public org.apache.commons.math3.geometry.spherical.twod.Circle getCircle()
    {
        org.apache.commons.math3.geometry.spherical.twod.Edge r0;
        org.apache.commons.math3.geometry.spherical.twod.Circle $r1;

        r0 := @this: org.apache.commons.math3.geometry.spherical.twod.Edge;

        $r1 = r0.<org.apache.commons.math3.geometry.spherical.twod.Edge: org.apache.commons.math3.geometry.spherical.twod.Circle circle>;

        return $r1;
    }

    public org.apache.commons.math3.geometry.euclidean.threed.Vector3D getPointAt(double)
    {
        org.apache.commons.math3.geometry.spherical.twod.Edge r0;
        double d0, $d1, $d2;
        org.apache.commons.math3.geometry.spherical.twod.Vertex $r1;
        org.apache.commons.math3.geometry.spherical.twod.Circle $r2, $r3;
        org.apache.commons.math3.geometry.spherical.twod.S2Point $r4;
        org.apache.commons.math3.geometry.euclidean.threed.Vector3D $r5, $r6;

        r0 := @this: org.apache.commons.math3.geometry.spherical.twod.Edge;

        d0 := @parameter0: double;

        $r2 = r0.<org.apache.commons.math3.geometry.spherical.twod.Edge: org.apache.commons.math3.geometry.spherical.twod.Circle circle>;

        $r3 = r0.<org.apache.commons.math3.geometry.spherical.twod.Edge: org.apache.commons.math3.geometry.spherical.twod.Circle circle>;

        $r1 = r0.<org.apache.commons.math3.geometry.spherical.twod.Edge: org.apache.commons.math3.geometry.spherical.twod.Vertex start>;

        $r4 = virtualinvoke $r1.<org.apache.commons.math3.geometry.spherical.twod.Vertex: org.apache.commons.math3.geometry.spherical.twod.S2Point getLocation()>();

        $r5 = virtualinvoke $r4.<org.apache.commons.math3.geometry.spherical.twod.S2Point: org.apache.commons.math3.geometry.euclidean.threed.Vector3D getVector()>();

        $d1 = virtualinvoke $r3.<org.apache.commons.math3.geometry.spherical.twod.Circle: double getPhase(org.apache.commons.math3.geometry.euclidean.threed.Vector3D)>($r5);

        $d2 = d0 + $d1;

        $r6 = virtualinvoke $r2.<org.apache.commons.math3.geometry.spherical.twod.Circle: org.apache.commons.math3.geometry.euclidean.threed.Vector3D getPointAt(double)>($d2);

        return $r6;
    }

    void setNextEdge(org.apache.commons.math3.geometry.spherical.twod.Edge)
    {
        org.apache.commons.math3.geometry.spherical.twod.Edge r0, r1;
        org.apache.commons.math3.geometry.spherical.twod.Vertex $r2, $r3, $r4;
        org.apache.commons.math3.geometry.spherical.twod.Circle $r5;

        r0 := @this: org.apache.commons.math3.geometry.spherical.twod.Edge;

        r1 := @parameter0: org.apache.commons.math3.geometry.spherical.twod.Edge;

        $r2 = virtualinvoke r1.<org.apache.commons.math3.geometry.spherical.twod.Edge: org.apache.commons.math3.geometry.spherical.twod.Vertex getStart()>();

        r0.<org.apache.commons.math3.geometry.spherical.twod.Edge: org.apache.commons.math3.geometry.spherical.twod.Vertex end> = $r2;

        $r3 = r0.<org.apache.commons.math3.geometry.spherical.twod.Edge: org.apache.commons.math3.geometry.spherical.twod.Vertex end>;

        virtualinvoke $r3.<org.apache.commons.math3.geometry.spherical.twod.Vertex: void setIncoming(org.apache.commons.math3.geometry.spherical.twod.Edge)>(r0);

        $r4 = r0.<org.apache.commons.math3.geometry.spherical.twod.Edge: org.apache.commons.math3.geometry.spherical.twod.Vertex end>;

        $r5 = virtualinvoke r0.<org.apache.commons.math3.geometry.spherical.twod.Edge: org.apache.commons.math3.geometry.spherical.twod.Circle getCircle()>();

        virtualinvoke $r4.<org.apache.commons.math3.geometry.spherical.twod.Vertex: void bindWith(org.apache.commons.math3.geometry.spherical.twod.Circle)>($r5);

        return;
    }

    void split(org.apache.commons.math3.geometry.spherical.twod.Circle, java.util.List, java.util.List)
    {
        org.apache.commons.math3.geometry.spherical.twod.Edge r0;
        org.apache.commons.math3.geometry.spherical.twod.Circle r1, $r6, $r9, $r10, $r13, $r17, $r24;
        java.util.List r2, r3;
        double d0, d1, d2, d3, d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21, $d22, $d23, $d24, $d25, d26;
        org.apache.commons.math3.geometry.spherical.oned.Arc r4;
        org.apache.commons.math3.geometry.spherical.twod.Vertex $r5, $r11, $r15, $r19, $r20, $r21, $r22, r26, r28, r30;
        org.apache.commons.math3.geometry.spherical.twod.S2Point $r7, $r12, $r16, $r23;
        org.apache.commons.math3.geometry.euclidean.threed.Vector3D $r8, $r14, $r18, $r25;
        byte $b0, $b1, $b2, $b3, $b4;

        r0 := @this: org.apache.commons.math3.geometry.spherical.twod.Edge;

        r1 := @parameter0: org.apache.commons.math3.geometry.spherical.twod.Circle;

        r2 := @parameter1: java.util.List;

        r3 := @parameter2: java.util.List;

        $r6 = r0.<org.apache.commons.math3.geometry.spherical.twod.Edge: org.apache.commons.math3.geometry.spherical.twod.Circle circle>;

        $r5 = r0.<org.apache.commons.math3.geometry.spherical.twod.Edge: org.apache.commons.math3.geometry.spherical.twod.Vertex start>;

        $r7 = virtualinvoke $r5.<org.apache.commons.math3.geometry.spherical.twod.Vertex: org.apache.commons.math3.geometry.spherical.twod.S2Point getLocation()>();

        $r8 = virtualinvoke $r7.<org.apache.commons.math3.geometry.spherical.twod.S2Point: org.apache.commons.math3.geometry.euclidean.threed.Vector3D getVector()>();

        d0 = virtualinvoke $r6.<org.apache.commons.math3.geometry.spherical.twod.Circle: double getPhase(org.apache.commons.math3.geometry.euclidean.threed.Vector3D)>($r8);

        $r9 = r0.<org.apache.commons.math3.geometry.spherical.twod.Edge: org.apache.commons.math3.geometry.spherical.twod.Circle circle>;

        r4 = virtualinvoke $r9.<org.apache.commons.math3.geometry.spherical.twod.Circle: org.apache.commons.math3.geometry.spherical.oned.Arc getInsideArc(org.apache.commons.math3.geometry.spherical.twod.Circle)>(r1);

        $d5 = virtualinvoke r4.<org.apache.commons.math3.geometry.spherical.oned.Arc: double getInf()>();

        $d6 = d0 + 3.141592653589793;

        $d7 = staticinvoke <org.apache.commons.math3.util.MathUtils: double normalizeAngle(double,double)>($d5, $d6);

        d1 = $d7 - d0;

        $d8 = virtualinvoke r4.<org.apache.commons.math3.geometry.spherical.oned.Arc: double getSize()>();

        d2 = d1 + $d8;

        d3 = d2 - 6.283185307179586;

        $r10 = r0.<org.apache.commons.math3.geometry.spherical.twod.Edge: org.apache.commons.math3.geometry.spherical.twod.Circle circle>;

        d4 = virtualinvoke $r10.<org.apache.commons.math3.geometry.spherical.twod.Circle: double getTolerance()>();

        r26 = r0.<org.apache.commons.math3.geometry.spherical.twod.Edge: org.apache.commons.math3.geometry.spherical.twod.Vertex start>;

        $d9 = r0.<org.apache.commons.math3.geometry.spherical.twod.Edge: double length>;

        $d10 = $d9 - d4;

        $b0 = d3 cmpl $d10;

        if $b0 < 0 goto label1;

        interfaceinvoke r3.<java.util.List: boolean add(java.lang.Object)>(r0);

        goto label6;

     label1:
        d26 = 0.0;

        $b1 = d3 cmpl 0.0;

        if $b1 < 0 goto label2;

        $r22 = new org.apache.commons.math3.geometry.spherical.twod.Vertex;

        $r23 = new org.apache.commons.math3.geometry.spherical.twod.S2Point;

        $r24 = r0.<org.apache.commons.math3.geometry.spherical.twod.Edge: org.apache.commons.math3.geometry.spherical.twod.Circle circle>;

        $d25 = d0 + d3;

        $r25 = virtualinvoke $r24.<org.apache.commons.math3.geometry.spherical.twod.Circle: org.apache.commons.math3.geometry.euclidean.threed.Vector3D getPointAt(double)>($d25);

        specialinvoke $r23.<org.apache.commons.math3.geometry.spherical.twod.S2Point: void <init>(org.apache.commons.math3.geometry.euclidean.threed.Vector3D)>($r25);

        specialinvoke $r22.<org.apache.commons.math3.geometry.spherical.twod.Vertex: void <init>(org.apache.commons.math3.geometry.spherical.twod.S2Point)>($r23);

        r26 = specialinvoke r0.<org.apache.commons.math3.geometry.spherical.twod.Edge: org.apache.commons.math3.geometry.spherical.twod.Vertex addSubEdge(org.apache.commons.math3.geometry.spherical.twod.Vertex,org.apache.commons.math3.geometry.spherical.twod.Vertex,double,java.util.List,org.apache.commons.math3.geometry.spherical.twod.Circle)>(r26, $r22, d3, r3, r1);

        d26 = d3;

     label2:
        $d11 = r0.<org.apache.commons.math3.geometry.spherical.twod.Edge: double length>;

        $d12 = $d11 - d4;

        $b2 = d1 cmpl $d12;

        if $b2 < 0 goto label4;

        $b4 = d3 cmpl 0.0;

        if $b4 < 0 goto label3;

        $r21 = r0.<org.apache.commons.math3.geometry.spherical.twod.Edge: org.apache.commons.math3.geometry.spherical.twod.Vertex end>;

        $d23 = r0.<org.apache.commons.math3.geometry.spherical.twod.Edge: double length>;

        $d24 = $d23 - d26;

        specialinvoke r0.<org.apache.commons.math3.geometry.spherical.twod.Edge: org.apache.commons.math3.geometry.spherical.twod.Vertex addSubEdge(org.apache.commons.math3.geometry.spherical.twod.Vertex,org.apache.commons.math3.geometry.spherical.twod.Vertex,double,java.util.List,org.apache.commons.math3.geometry.spherical.twod.Circle)>(r26, $r21, $d24, r2, r1);

        goto label6;

     label3:
        interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>(r0);

        goto label6;

     label4:
        $r11 = new org.apache.commons.math3.geometry.spherical.twod.Vertex;

        $r12 = new org.apache.commons.math3.geometry.spherical.twod.S2Point;

        $r13 = r0.<org.apache.commons.math3.geometry.spherical.twod.Edge: org.apache.commons.math3.geometry.spherical.twod.Circle circle>;

        $d13 = d0 + d1;

        $r14 = virtualinvoke $r13.<org.apache.commons.math3.geometry.spherical.twod.Circle: org.apache.commons.math3.geometry.euclidean.threed.Vector3D getPointAt(double)>($d13);

        specialinvoke $r12.<org.apache.commons.math3.geometry.spherical.twod.S2Point: void <init>(org.apache.commons.math3.geometry.euclidean.threed.Vector3D)>($r14);

        specialinvoke $r11.<org.apache.commons.math3.geometry.spherical.twod.Vertex: void <init>(org.apache.commons.math3.geometry.spherical.twod.S2Point)>($r12);

        $d14 = d1 - d26;

        r28 = specialinvoke r0.<org.apache.commons.math3.geometry.spherical.twod.Edge: org.apache.commons.math3.geometry.spherical.twod.Vertex addSubEdge(org.apache.commons.math3.geometry.spherical.twod.Vertex,org.apache.commons.math3.geometry.spherical.twod.Vertex,double,java.util.List,org.apache.commons.math3.geometry.spherical.twod.Circle)>(r26, $r11, $d14, r2, r1);

        $d15 = r0.<org.apache.commons.math3.geometry.spherical.twod.Edge: double length>;

        $d16 = $d15 - d4;

        $b3 = d2 cmpl $d16;

        if $b3 < 0 goto label5;

        $r20 = r0.<org.apache.commons.math3.geometry.spherical.twod.Edge: org.apache.commons.math3.geometry.spherical.twod.Vertex end>;

        $d21 = r0.<org.apache.commons.math3.geometry.spherical.twod.Edge: double length>;

        $d22 = $d21 - d1;

        specialinvoke r0.<org.apache.commons.math3.geometry.spherical.twod.Edge: org.apache.commons.math3.geometry.spherical.twod.Vertex addSubEdge(org.apache.commons.math3.geometry.spherical.twod.Vertex,org.apache.commons.math3.geometry.spherical.twod.Vertex,double,java.util.List,org.apache.commons.math3.geometry.spherical.twod.Circle)>(r28, $r20, $d22, r3, r1);

        goto label6;

     label5:
        $r15 = new org.apache.commons.math3.geometry.spherical.twod.Vertex;

        $r16 = new org.apache.commons.math3.geometry.spherical.twod.S2Point;

        $r17 = r0.<org.apache.commons.math3.geometry.spherical.twod.Edge: org.apache.commons.math3.geometry.spherical.twod.Circle circle>;

        $d17 = d0 + d1;

        $r18 = virtualinvoke $r17.<org.apache.commons.math3.geometry.spherical.twod.Circle: org.apache.commons.math3.geometry.euclidean.threed.Vector3D getPointAt(double)>($d17);

        specialinvoke $r16.<org.apache.commons.math3.geometry.spherical.twod.S2Point: void <init>(org.apache.commons.math3.geometry.euclidean.threed.Vector3D)>($r18);

        specialinvoke $r15.<org.apache.commons.math3.geometry.spherical.twod.Vertex: void <init>(org.apache.commons.math3.geometry.spherical.twod.S2Point)>($r16);

        $d18 = d1 - d1;

        r30 = specialinvoke r0.<org.apache.commons.math3.geometry.spherical.twod.Edge: org.apache.commons.math3.geometry.spherical.twod.Vertex addSubEdge(org.apache.commons.math3.geometry.spherical.twod.Vertex,org.apache.commons.math3.geometry.spherical.twod.Vertex,double,java.util.List,org.apache.commons.math3.geometry.spherical.twod.Circle)>(r28, $r15, $d18, r3, r1);

        $r19 = r0.<org.apache.commons.math3.geometry.spherical.twod.Edge: org.apache.commons.math3.geometry.spherical.twod.Vertex end>;

        $d19 = r0.<org.apache.commons.math3.geometry.spherical.twod.Edge: double length>;

        $d20 = $d19 - d1;

        specialinvoke r0.<org.apache.commons.math3.geometry.spherical.twod.Edge: org.apache.commons.math3.geometry.spherical.twod.Vertex addSubEdge(org.apache.commons.math3.geometry.spherical.twod.Vertex,org.apache.commons.math3.geometry.spherical.twod.Vertex,double,java.util.List,org.apache.commons.math3.geometry.spherical.twod.Circle)>(r30, $r19, $d20, r2, r1);

     label6:
        return;
    }

    private org.apache.commons.math3.geometry.spherical.twod.Vertex addSubEdge(org.apache.commons.math3.geometry.spherical.twod.Vertex, org.apache.commons.math3.geometry.spherical.twod.Vertex, double, java.util.List, org.apache.commons.math3.geometry.spherical.twod.Circle)
    {
        org.apache.commons.math3.geometry.spherical.twod.Edge r0, $r7;
        org.apache.commons.math3.geometry.spherical.twod.Vertex r1, r2;
        double d0, $d1;
        java.util.List r3;
        org.apache.commons.math3.geometry.spherical.twod.Circle r4, $r6, $r8;
        byte $b0;

        r0 := @this: org.apache.commons.math3.geometry.spherical.twod.Edge;

        r1 := @parameter0: org.apache.commons.math3.geometry.spherical.twod.Vertex;

        r2 := @parameter1: org.apache.commons.math3.geometry.spherical.twod.Vertex;

        d0 := @parameter2: double;

        r3 := @parameter3: java.util.List;

        r4 := @parameter4: org.apache.commons.math3.geometry.spherical.twod.Circle;

        $r6 = r0.<org.apache.commons.math3.geometry.spherical.twod.Edge: org.apache.commons.math3.geometry.spherical.twod.Circle circle>;

        $d1 = virtualinvoke $r6.<org.apache.commons.math3.geometry.spherical.twod.Circle: double getTolerance()>();

        $b0 = d0 cmpg $d1;

        if $b0 > 0 goto label1;

        return r1;

     label1:
        virtualinvoke r2.<org.apache.commons.math3.geometry.spherical.twod.Vertex: void bindWith(org.apache.commons.math3.geometry.spherical.twod.Circle)>(r4);

        $r7 = new org.apache.commons.math3.geometry.spherical.twod.Edge;

        $r8 = r0.<org.apache.commons.math3.geometry.spherical.twod.Edge: org.apache.commons.math3.geometry.spherical.twod.Circle circle>;

        specialinvoke $r7.<org.apache.commons.math3.geometry.spherical.twod.Edge: void <init>(org.apache.commons.math3.geometry.spherical.twod.Vertex,org.apache.commons.math3.geometry.spherical.twod.Vertex,double,org.apache.commons.math3.geometry.spherical.twod.Circle)>(r1, r2, d0, $r8);

        interfaceinvoke r3.<java.util.List: boolean add(java.lang.Object)>($r7);

        return r2;
    }
}
