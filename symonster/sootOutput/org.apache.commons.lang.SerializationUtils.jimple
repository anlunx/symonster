public class org.apache.commons.lang.SerializationUtils extends java.lang.Object
{

    public void <init>()
    {
        org.apache.commons.lang.SerializationUtils r0;

        r0 := @this: org.apache.commons.lang.SerializationUtils;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static java.lang.Object clone(java.io.Serializable)
    {
        java.io.Serializable r0;
        byte[] $r1;
        java.lang.Object $r2;

        r0 := @parameter0: java.io.Serializable;

        $r1 = staticinvoke <org.apache.commons.lang.SerializationUtils: byte[] serialize(java.io.Serializable)>(r0);

        $r2 = staticinvoke <org.apache.commons.lang.SerializationUtils: java.lang.Object deserialize(byte[])>($r1);

        return $r2;
    }

    public static void serialize(java.io.Serializable, java.io.OutputStream)
    {
        java.io.Serializable r0;
        java.io.OutputStream r1;
        java.io.ObjectOutputStream $r4, r11;
        java.lang.IllegalArgumentException $r5;
        java.io.IOException $r6, $r8, $r10;
        org.apache.commons.lang.SerializationException $r7;
        java.lang.Throwable $r9;

        r0 := @parameter0: java.io.Serializable;

        r1 := @parameter1: java.io.OutputStream;

        if r1 != null goto label01;

        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("The OutputStream must not be null");

        throw $r5;

     label01:
        r11 = null;

     label02:
        $r4 = new java.io.ObjectOutputStream;

        specialinvoke $r4.<java.io.ObjectOutputStream: void <init>(java.io.OutputStream)>(r1);

        r11 = $r4;

        virtualinvoke $r4.<java.io.ObjectOutputStream: void writeObject(java.lang.Object)>(r0);

     label03:
        if $r4 == null goto label04;

        virtualinvoke $r4.<java.io.ObjectOutputStream: void close()>();

     label04:
        goto label12;

     label05:
        $r10 := @caughtexception;

        goto label12;

     label06:
        $r6 := @caughtexception;

        $r7 = new org.apache.commons.lang.SerializationException;

        specialinvoke $r7.<org.apache.commons.lang.SerializationException: void <init>(java.lang.Throwable)>($r6);

        throw $r7;

     label07:
        $r9 := @caughtexception;

     label08:
        if r11 == null goto label09;

        virtualinvoke r11.<java.io.ObjectOutputStream: void close()>();

     label09:
        goto label11;

     label10:
        $r8 := @caughtexception;

     label11:
        throw $r9;

     label12:
        return;

        catch java.io.IOException from label03 to label04 with label05;
        catch java.io.IOException from label02 to label03 with label06;
        catch java.lang.Throwable from label02 to label03 with label07;
        catch java.io.IOException from label08 to label09 with label10;
        catch java.lang.Throwable from label06 to label08 with label07;
    }

    public static byte[] serialize(java.io.Serializable)
    {
        java.io.Serializable r0;
        java.io.ByteArrayOutputStream $r2;
        byte[] $r3;

        r0 := @parameter0: java.io.Serializable;

        $r2 = new java.io.ByteArrayOutputStream;

        specialinvoke $r2.<java.io.ByteArrayOutputStream: void <init>(int)>(512);

        staticinvoke <org.apache.commons.lang.SerializationUtils: void serialize(java.io.Serializable,java.io.OutputStream)>(r0, $r2);

        $r3 = virtualinvoke $r2.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        return $r3;
    }

    public static java.lang.Object deserialize(java.io.InputStream)
    {
        java.io.InputStream r0;
        java.io.ObjectInputStream $r4, r13;
        java.lang.IllegalArgumentException $r5;
        java.io.IOException $r6, $r7, $r12;
        org.apache.commons.lang.SerializationException $r8, $r11;
        java.lang.Throwable $r9;
        java.lang.ClassNotFoundException $r10;
        java.lang.Object r14;

        r0 := @parameter0: java.io.InputStream;

        if r0 != null goto label01;

        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("The InputStream must not be null");

        throw $r5;

     label01:
        r13 = null;

     label02:
        $r4 = new java.io.ObjectInputStream;

        specialinvoke $r4.<java.io.ObjectInputStream: void <init>(java.io.InputStream)>(r0);

        r13 = $r4;

        r14 = virtualinvoke $r4.<java.io.ObjectInputStream: java.lang.Object readObject()>();

     label03:
        if $r4 == null goto label04;

        virtualinvoke $r4.<java.io.ObjectInputStream: void close()>();

     label04:
        goto label06;

     label05:
        $r12 := @caughtexception;

     label06:
        return r14;

     label07:
        $r10 := @caughtexception;

        $r11 = new org.apache.commons.lang.SerializationException;

        specialinvoke $r11.<org.apache.commons.lang.SerializationException: void <init>(java.lang.Throwable)>($r10);

        throw $r11;

     label08:
        $r7 := @caughtexception;

        $r8 = new org.apache.commons.lang.SerializationException;

        specialinvoke $r8.<org.apache.commons.lang.SerializationException: void <init>(java.lang.Throwable)>($r7);

        throw $r8;

     label09:
        $r9 := @caughtexception;

     label10:
        if r13 == null goto label11;

        virtualinvoke r13.<java.io.ObjectInputStream: void close()>();

     label11:
        goto label13;

     label12:
        $r6 := @caughtexception;

     label13:
        throw $r9;

        catch java.io.IOException from label03 to label04 with label05;
        catch java.lang.ClassNotFoundException from label02 to label03 with label07;
        catch java.io.IOException from label02 to label03 with label08;
        catch java.lang.Throwable from label02 to label03 with label09;
        catch java.io.IOException from label10 to label11 with label12;
        catch java.lang.Throwable from label07 to label10 with label09;
    }

    public static java.lang.Object deserialize(byte[])
    {
        byte[] r0;
        java.io.ByteArrayInputStream $r2;
        java.lang.Object $r3;
        java.lang.IllegalArgumentException $r4;

        r0 := @parameter0: byte[];

        if r0 != null goto label1;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("The byte[] must not be null");

        throw $r4;

     label1:
        $r2 = new java.io.ByteArrayInputStream;

        specialinvoke $r2.<java.io.ByteArrayInputStream: void <init>(byte[])>(r0);

        $r3 = staticinvoke <org.apache.commons.lang.SerializationUtils: java.lang.Object deserialize(java.io.InputStream)>($r2);

        return $r3;
    }
}
