public class com.opengamma.analytics.financial.forex.method.ForexOptionDigitalCallSpreadMethod extends java.lang.Object implements com.opengamma.analytics.financial.forex.method.ForexPricingMethod
{
    private final com.opengamma.analytics.financial.forex.method.ForexPricingMethod _baseMethod;
    private final double _spread;

    public void <init>(com.opengamma.analytics.financial.forex.method.ForexPricingMethod)
    {
        com.opengamma.analytics.financial.forex.method.ForexOptionDigitalCallSpreadMethod r0;
        com.opengamma.analytics.financial.forex.method.ForexPricingMethod r1;

        r0 := @this: com.opengamma.analytics.financial.forex.method.ForexOptionDigitalCallSpreadMethod;

        r1 := @parameter0: com.opengamma.analytics.financial.forex.method.ForexPricingMethod;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.opengamma.analytics.financial.forex.method.ForexOptionDigitalCallSpreadMethod: com.opengamma.analytics.financial.forex.method.ForexPricingMethod _baseMethod> = r1;

        r0.<com.opengamma.analytics.financial.forex.method.ForexOptionDigitalCallSpreadMethod: double _spread> = 1.0E-4;

        return;
    }

    public void <init>(com.opengamma.analytics.financial.forex.method.ForexPricingMethod, double)
    {
        com.opengamma.analytics.financial.forex.method.ForexOptionDigitalCallSpreadMethod r0;
        com.opengamma.analytics.financial.forex.method.ForexPricingMethod r1;
        double d0;

        r0 := @this: com.opengamma.analytics.financial.forex.method.ForexOptionDigitalCallSpreadMethod;

        r1 := @parameter0: com.opengamma.analytics.financial.forex.method.ForexPricingMethod;

        d0 := @parameter1: double;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.opengamma.analytics.financial.forex.method.ForexOptionDigitalCallSpreadMethod: com.opengamma.analytics.financial.forex.method.ForexPricingMethod _baseMethod> = r1;

        r0.<com.opengamma.analytics.financial.forex.method.ForexOptionDigitalCallSpreadMethod: double _spread> = d0;

        return;
    }

    public com.opengamma.util.money.MultipleCurrencyAmount presentValue(com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital, com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle)
    {
        com.opengamma.analytics.financial.forex.method.ForexOptionDigitalCallSpreadMethod r0;
        com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital r1;
        com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle r2;
        com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla[] r3;
        com.opengamma.util.money.MultipleCurrencyAmount r4, r5, $r14;
        com.opengamma.util.money.Currency $r8, $r9;
        boolean $z0;
        double $d0;
        com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla $r10, $r12;
        com.opengamma.analytics.financial.forex.method.ForexPricingMethod $r11, $r13;

        r0 := @this: com.opengamma.analytics.financial.forex.method.ForexOptionDigitalCallSpreadMethod;

        r1 := @parameter0: com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital;

        r2 := @parameter1: com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "Forex option difital");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, "Curve and smile data");

        $r8 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: com.opengamma.util.money.Currency getCurrency1()>();

        $r9 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: com.opengamma.util.money.Currency getCurrency2()>();

        $z0 = virtualinvoke r2.<com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle: boolean checkCurrencies(com.opengamma.util.money.Currency,com.opengamma.util.money.Currency)>($r8, $r9);

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z0, "Option currencies not compatible with smile data");

        $d0 = r0.<com.opengamma.analytics.financial.forex.method.ForexOptionDigitalCallSpreadMethod: double _spread>;

        r3 = virtualinvoke r0.<com.opengamma.analytics.financial.forex.method.ForexOptionDigitalCallSpreadMethod: com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla[] callSpread(com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital,double)>(r1, $d0);

        $r11 = r0.<com.opengamma.analytics.financial.forex.method.ForexOptionDigitalCallSpreadMethod: com.opengamma.analytics.financial.forex.method.ForexPricingMethod _baseMethod>;

        $r10 = r3[0];

        r4 = interfaceinvoke $r11.<com.opengamma.analytics.financial.forex.method.ForexPricingMethod: com.opengamma.util.money.MultipleCurrencyAmount presentValue(com.opengamma.analytics.financial.interestrate.InstrumentDerivative,com.opengamma.analytics.financial.interestrate.YieldCurveBundle)>($r10, r2);

        $r13 = r0.<com.opengamma.analytics.financial.forex.method.ForexOptionDigitalCallSpreadMethod: com.opengamma.analytics.financial.forex.method.ForexPricingMethod _baseMethod>;

        $r12 = r3[1];

        r5 = interfaceinvoke $r13.<com.opengamma.analytics.financial.forex.method.ForexPricingMethod: com.opengamma.util.money.MultipleCurrencyAmount presentValue(com.opengamma.analytics.financial.interestrate.InstrumentDerivative,com.opengamma.analytics.financial.interestrate.YieldCurveBundle)>($r12, r2);

        $r14 = virtualinvoke r4.<com.opengamma.util.money.MultipleCurrencyAmount: com.opengamma.util.money.MultipleCurrencyAmount plus(com.opengamma.util.money.MultipleCurrencyAmount)>(r5);

        return $r14;
    }

    public com.opengamma.util.money.MultipleCurrencyAmount presentValue(com.opengamma.analytics.financial.interestrate.InstrumentDerivative, com.opengamma.analytics.financial.interestrate.YieldCurveBundle)
    {
        com.opengamma.analytics.financial.forex.method.ForexOptionDigitalCallSpreadMethod r0;
        com.opengamma.analytics.financial.interestrate.InstrumentDerivative r1;
        com.opengamma.analytics.financial.interestrate.YieldCurveBundle r2;
        boolean $z0, $z1;
        com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle $r3;
        com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital $r4;
        com.opengamma.util.money.MultipleCurrencyAmount $r5;

        r0 := @this: com.opengamma.analytics.financial.forex.method.ForexOptionDigitalCallSpreadMethod;

        r1 := @parameter0: com.opengamma.analytics.financial.interestrate.InstrumentDerivative;

        r2 := @parameter1: com.opengamma.analytics.financial.interestrate.YieldCurveBundle;

        $z0 = r1 instanceof com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z0, "Digital Forex option");

        $z1 = r2 instanceof com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z1, "Smile delta data bundle required");

        $r4 = (com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital) r1;

        $r3 = (com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle) r2;

        $r5 = virtualinvoke r0.<com.opengamma.analytics.financial.forex.method.ForexOptionDigitalCallSpreadMethod: com.opengamma.util.money.MultipleCurrencyAmount presentValue(com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital,com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle)>($r4, $r3);

        return $r5;
    }

    public com.opengamma.util.money.MultipleCurrencyAmount currencyExposure(com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital, com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle)
    {
        com.opengamma.analytics.financial.forex.method.ForexOptionDigitalCallSpreadMethod r0;
        com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital r1;
        com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle r2;
        com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla[] r3;
        com.opengamma.util.money.MultipleCurrencyAmount r4, r5, $r12;
        double $d0;
        com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla $r8, $r10;
        com.opengamma.analytics.financial.forex.method.ForexPricingMethod $r9, $r11;

        r0 := @this: com.opengamma.analytics.financial.forex.method.ForexOptionDigitalCallSpreadMethod;

        r1 := @parameter0: com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital;

        r2 := @parameter1: com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "Forex option difital");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, "Curve and smile data");

        $d0 = r0.<com.opengamma.analytics.financial.forex.method.ForexOptionDigitalCallSpreadMethod: double _spread>;

        r3 = virtualinvoke r0.<com.opengamma.analytics.financial.forex.method.ForexOptionDigitalCallSpreadMethod: com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla[] callSpread(com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital,double)>(r1, $d0);

        $r9 = r0.<com.opengamma.analytics.financial.forex.method.ForexOptionDigitalCallSpreadMethod: com.opengamma.analytics.financial.forex.method.ForexPricingMethod _baseMethod>;

        $r8 = r3[0];

        r4 = interfaceinvoke $r9.<com.opengamma.analytics.financial.forex.method.ForexPricingMethod: com.opengamma.util.money.MultipleCurrencyAmount currencyExposure(com.opengamma.analytics.financial.interestrate.InstrumentDerivative,com.opengamma.analytics.financial.interestrate.YieldCurveBundle)>($r8, r2);

        $r11 = r0.<com.opengamma.analytics.financial.forex.method.ForexOptionDigitalCallSpreadMethod: com.opengamma.analytics.financial.forex.method.ForexPricingMethod _baseMethod>;

        $r10 = r3[1];

        r5 = interfaceinvoke $r11.<com.opengamma.analytics.financial.forex.method.ForexPricingMethod: com.opengamma.util.money.MultipleCurrencyAmount currencyExposure(com.opengamma.analytics.financial.interestrate.InstrumentDerivative,com.opengamma.analytics.financial.interestrate.YieldCurveBundle)>($r10, r2);

        $r12 = virtualinvoke r4.<com.opengamma.util.money.MultipleCurrencyAmount: com.opengamma.util.money.MultipleCurrencyAmount plus(com.opengamma.util.money.MultipleCurrencyAmount)>(r5);

        return $r12;
    }

    public com.opengamma.util.money.MultipleCurrencyAmount currencyExposure(com.opengamma.analytics.financial.interestrate.InstrumentDerivative, com.opengamma.analytics.financial.interestrate.YieldCurveBundle)
    {
        com.opengamma.analytics.financial.forex.method.ForexOptionDigitalCallSpreadMethod r0;
        com.opengamma.analytics.financial.interestrate.InstrumentDerivative r1;
        com.opengamma.analytics.financial.interestrate.YieldCurveBundle r2;
        boolean $z0, $z1;
        com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle $r3;
        com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital $r4;
        com.opengamma.util.money.MultipleCurrencyAmount $r5;

        r0 := @this: com.opengamma.analytics.financial.forex.method.ForexOptionDigitalCallSpreadMethod;

        r1 := @parameter0: com.opengamma.analytics.financial.interestrate.InstrumentDerivative;

        r2 := @parameter1: com.opengamma.analytics.financial.interestrate.YieldCurveBundle;

        $z0 = r1 instanceof com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z0, "Digital Forex option");

        $z1 = r2 instanceof com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z1, "Smile delta data bundle required");

        $r4 = (com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital) r1;

        $r3 = (com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle) r2;

        $r5 = virtualinvoke r0.<com.opengamma.analytics.financial.forex.method.ForexOptionDigitalCallSpreadMethod: com.opengamma.util.money.MultipleCurrencyAmount currencyExposure(com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital,com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle)>($r4, $r3);

        return $r5;
    }

    public com.opengamma.analytics.financial.forex.method.MultipleCurrencyInterestRateCurveSensitivity presentValueCurveSensitivity(com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital, com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle)
    {
        com.opengamma.analytics.financial.forex.method.ForexOptionDigitalCallSpreadMethod r0;
        com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital r1;
        com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle r2;
        com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla[] r3;
        com.opengamma.analytics.financial.forex.method.MultipleCurrencyInterestRateCurveSensitivity r4, r5, $r12;
        double $d0;
        com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla $r8, $r10;
        com.opengamma.analytics.financial.forex.method.ForexPricingMethod $r9, $r11;

        r0 := @this: com.opengamma.analytics.financial.forex.method.ForexOptionDigitalCallSpreadMethod;

        r1 := @parameter0: com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital;

        r2 := @parameter1: com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "Forex option");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, "Smile");

        $d0 = r0.<com.opengamma.analytics.financial.forex.method.ForexOptionDigitalCallSpreadMethod: double _spread>;

        r3 = virtualinvoke r0.<com.opengamma.analytics.financial.forex.method.ForexOptionDigitalCallSpreadMethod: com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla[] callSpread(com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital,double)>(r1, $d0);

        $r9 = r0.<com.opengamma.analytics.financial.forex.method.ForexOptionDigitalCallSpreadMethod: com.opengamma.analytics.financial.forex.method.ForexPricingMethod _baseMethod>;

        $r8 = r3[0];

        r4 = interfaceinvoke $r9.<com.opengamma.analytics.financial.forex.method.ForexPricingMethod: com.opengamma.analytics.financial.forex.method.MultipleCurrencyInterestRateCurveSensitivity presentValueCurveSensitivity(com.opengamma.analytics.financial.interestrate.InstrumentDerivative,com.opengamma.analytics.financial.interestrate.YieldCurveBundle)>($r8, r2);

        $r11 = r0.<com.opengamma.analytics.financial.forex.method.ForexOptionDigitalCallSpreadMethod: com.opengamma.analytics.financial.forex.method.ForexPricingMethod _baseMethod>;

        $r10 = r3[1];

        r5 = interfaceinvoke $r11.<com.opengamma.analytics.financial.forex.method.ForexPricingMethod: com.opengamma.analytics.financial.forex.method.MultipleCurrencyInterestRateCurveSensitivity presentValueCurveSensitivity(com.opengamma.analytics.financial.interestrate.InstrumentDerivative,com.opengamma.analytics.financial.interestrate.YieldCurveBundle)>($r10, r2);

        $r12 = virtualinvoke r4.<com.opengamma.analytics.financial.forex.method.MultipleCurrencyInterestRateCurveSensitivity: com.opengamma.analytics.financial.forex.method.MultipleCurrencyInterestRateCurveSensitivity plus(com.opengamma.analytics.financial.forex.method.MultipleCurrencyInterestRateCurveSensitivity)>(r5);

        return $r12;
    }

    public com.opengamma.analytics.financial.forex.method.MultipleCurrencyInterestRateCurveSensitivity presentValueCurveSensitivity(com.opengamma.analytics.financial.interestrate.InstrumentDerivative, com.opengamma.analytics.financial.interestrate.YieldCurveBundle)
    {
        com.opengamma.analytics.financial.forex.method.ForexOptionDigitalCallSpreadMethod r0;
        com.opengamma.analytics.financial.interestrate.InstrumentDerivative r1;
        com.opengamma.analytics.financial.interestrate.YieldCurveBundle r2;
        boolean $z0, $z1;
        com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle $r3;
        com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital $r4;
        com.opengamma.analytics.financial.forex.method.MultipleCurrencyInterestRateCurveSensitivity $r5;

        r0 := @this: com.opengamma.analytics.financial.forex.method.ForexOptionDigitalCallSpreadMethod;

        r1 := @parameter0: com.opengamma.analytics.financial.interestrate.InstrumentDerivative;

        r2 := @parameter1: com.opengamma.analytics.financial.interestrate.YieldCurveBundle;

        $z0 = r1 instanceof com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z0, "Digital Forex option");

        $z1 = r2 instanceof com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z1, "Smile delta data bundle required");

        $r4 = (com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital) r1;

        $r3 = (com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle) r2;

        $r5 = virtualinvoke r0.<com.opengamma.analytics.financial.forex.method.ForexOptionDigitalCallSpreadMethod: com.opengamma.analytics.financial.forex.method.MultipleCurrencyInterestRateCurveSensitivity presentValueCurveSensitivity(com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital,com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle)>($r4, $r3);

        return $r5;
    }

    protected com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla[] callSpread(com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital, double)
    {
        com.opengamma.analytics.financial.forex.method.ForexOptionDigitalCallSpreadMethod r0;
        com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital r1;
        double d0, d1, d2, d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, d20, d23, d24, d25, d26, d27, $d28, $d29;
        com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla[] r2;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z17, $z18, $z19, $z21, $z22;
        com.opengamma.analytics.financial.forex.derivative.Forex $r3, $r5, $r6, $r9, $r12, $r13, $r16, $r19, $r21, $r22, $r25, $r28, $r29, $r32;
        com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed $r4, $r7, $r8, $r10, $r11, $r14, $r15, $r17, $r18, $r20, $r23, $r24, $r26, $r27, $r30, $r31, $r33, $r34;
        com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla $r35, $r36, $r46, $r49;

        r0 := @this: com.opengamma.analytics.financial.forex.method.ForexOptionDigitalCallSpreadMethod;

        r1 := @parameter0: com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital;

        d0 := @parameter1: double;

        r2 = newarray (com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla)[2];

        d1 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: double getStrike()>();

        $d4 = 1.0 - d0;

        d2 = d1 * $d4;

        $d5 = 1.0 + d0;

        d3 = d1 * $d5;

        $z0 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: boolean payDomestic()>();

        if $z0 == 0 goto label05;

        $r19 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        $r20 = virtualinvoke $r19.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed getPaymentCurrency2()>();

        $d12 = virtualinvoke $r20.<com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed: double getAmount()>();

        d20 = staticinvoke <java.lang.Math: double abs(double)>($d12);

        $d13 = d3 - d2;

        d23 = d20 / $d13;

        $r21 = new com.opengamma.analytics.financial.forex.derivative.Forex;

        $r22 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        $r23 = virtualinvoke $r22.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed getPaymentCurrency1()>();

        $r24 = virtualinvoke $r23.<com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed: com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed withAmount(double)>(d23);

        $r25 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        $r26 = virtualinvoke $r25.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed getPaymentCurrency2()>();

        $d14 = neg d2;

        $d15 = $d14 * d23;

        $r27 = virtualinvoke $r26.<com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed: com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed withAmount(double)>($d15);

        specialinvoke $r21.<com.opengamma.analytics.financial.forex.derivative.Forex: void <init>(com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed,com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed)>($r24, $r27);

        $r28 = new com.opengamma.analytics.financial.forex.derivative.Forex;

        $r29 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        $r30 = virtualinvoke $r29.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed getPaymentCurrency1()>();

        $r31 = virtualinvoke $r30.<com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed: com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed withAmount(double)>(d23);

        $r32 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        $r33 = virtualinvoke $r32.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed getPaymentCurrency2()>();

        $d16 = neg d3;

        $d17 = $d16 * d23;

        $r34 = virtualinvoke $r33.<com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed: com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed withAmount(double)>($d17);

        specialinvoke $r28.<com.opengamma.analytics.financial.forex.derivative.Forex: void <init>(com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed,com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed)>($r31, $r34);

        $r35 = new com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla;

        $d18 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: double getExpirationTime()>();

        $z8 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: boolean isCall()>();

        $z9 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: boolean isLong()>();

        $z10 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: boolean isCall()>();

        if $z9 != $z10 goto label01;

        $z14 = 1;

        goto label02;

     label01:
        $z14 = 0;

     label02:
        specialinvoke $r35.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: void <init>(com.opengamma.analytics.financial.forex.derivative.Forex,double,boolean,boolean)>($r21, $d18, $z8, $z14);

        r2[0] = $r35;

        $r36 = new com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla;

        $d19 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: double getExpirationTime()>();

        $z11 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: boolean isCall()>();

        $z12 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: boolean isLong()>();

        $z13 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: boolean isCall()>();

        if $z12 == $z13 goto label03;

        $z15 = 1;

        goto label04;

     label03:
        $z15 = 0;

     label04:
        specialinvoke $r36.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: void <init>(com.opengamma.analytics.financial.forex.derivative.Forex,double,boolean,boolean)>($r28, $d19, $z11, $z15);

        r2[1] = $r36;

        goto label14;

     label05:
        $r3 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        $r4 = virtualinvoke $r3.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed getPaymentCurrency1()>();

        $d6 = virtualinvoke $r4.<com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed: double getAmount()>();

        d24 = staticinvoke <java.lang.Math: double abs(double)>($d6);

        d25 = 1.0 / d3;

        d26 = 1.0 / d2;

        $d7 = d26 - d25;

        d27 = d24 / $d7;

        $r5 = new com.opengamma.analytics.financial.forex.derivative.Forex;

        $r6 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        $r7 = virtualinvoke $r6.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed getPaymentCurrency2()>();

        $r8 = virtualinvoke $r7.<com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed: com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed withAmount(double)>(d27);

        $r9 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        $r10 = virtualinvoke $r9.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed getPaymentCurrency1()>();

        $d8 = neg d25;

        $d9 = $d8 * d27;

        $r11 = virtualinvoke $r10.<com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed: com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed withAmount(double)>($d9);

        specialinvoke $r5.<com.opengamma.analytics.financial.forex.derivative.Forex: void <init>(com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed,com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed)>($r8, $r11);

        $r12 = new com.opengamma.analytics.financial.forex.derivative.Forex;

        $r13 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        $r14 = virtualinvoke $r13.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed getPaymentCurrency2()>();

        $r15 = virtualinvoke $r14.<com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed: com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed withAmount(double)>(d27);

        $r16 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        $r17 = virtualinvoke $r16.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed getPaymentCurrency1()>();

        $d10 = neg d26;

        $d11 = $d10 * d27;

        $r18 = virtualinvoke $r17.<com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed: com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed withAmount(double)>($d11);

        specialinvoke $r12.<com.opengamma.analytics.financial.forex.derivative.Forex: void <init>(com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed,com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed)>($r15, $r18);

        $r46 = new com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla;

        $d28 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: double getExpirationTime()>();

        $z1 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: boolean isCall()>();

        if $z1 != 0 goto label06;

        $z17 = 1;

        goto label07;

     label06:
        $z17 = 0;

     label07:
        $z2 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: boolean isLong()>();

        $z3 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: boolean isCall()>();

        if $z2 == $z3 goto label08;

        $z18 = 1;

        goto label09;

     label08:
        $z18 = 0;

     label09:
        specialinvoke $r46.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: void <init>(com.opengamma.analytics.financial.forex.derivative.Forex,double,boolean,boolean)>($r5, $d28, $z17, $z18);

        r2[0] = $r46;

        $r49 = new com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla;

        $d29 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: double getExpirationTime()>();

        $z19 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: boolean isCall()>();

        if $z19 != 0 goto label10;

        $z21 = 1;

        goto label11;

     label10:
        $z21 = 0;

     label11:
        $z4 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: boolean isLong()>();

        $z5 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: boolean isCall()>();

        if $z4 != $z5 goto label12;

        $z22 = 1;

        goto label13;

     label12:
        $z22 = 0;

     label13:
        specialinvoke $r49.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: void <init>(com.opengamma.analytics.financial.forex.derivative.Forex,double,boolean,boolean)>($r12, $d29, $z21, $z22);

        r2[1] = $r49;

     label14:
        return r2;
    }

    public com.opengamma.analytics.financial.forex.method.ForexPricingMethod getBaseMethod()
    {
        com.opengamma.analytics.financial.forex.method.ForexOptionDigitalCallSpreadMethod r0;
        com.opengamma.analytics.financial.forex.method.ForexPricingMethod $r1;

        r0 := @this: com.opengamma.analytics.financial.forex.method.ForexOptionDigitalCallSpreadMethod;

        $r1 = r0.<com.opengamma.analytics.financial.forex.method.ForexOptionDigitalCallSpreadMethod: com.opengamma.analytics.financial.forex.method.ForexPricingMethod _baseMethod>;

        return $r1;
    }

    public double getSpread()
    {
        com.opengamma.analytics.financial.forex.method.ForexOptionDigitalCallSpreadMethod r0;
        double $d0;

        r0 := @this: com.opengamma.analytics.financial.forex.method.ForexOptionDigitalCallSpreadMethod;

        $d0 = r0.<com.opengamma.analytics.financial.forex.method.ForexOptionDigitalCallSpreadMethod: double _spread>;

        return $d0;
    }
}
