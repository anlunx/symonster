public class com.opengamma.analytics.math.curve.CurveShiftFunctionFactory extends java.lang.Object
{
    public static final com.opengamma.analytics.math.curve.ConstantCurveShiftFunction CONSTANT;
    public static final com.opengamma.analytics.math.curve.FunctionalCurveShiftFunction FUNCTIONAL;
    public static final com.opengamma.analytics.math.curve.InterpolatedCurveShiftFunction INTERPOLATED;
    public static final com.opengamma.analytics.math.curve.SpreadCurveShiftFunction SPREAD;
    private static final java.util.Map s_instances;

    public void <init>()
    {
        com.opengamma.analytics.math.curve.CurveShiftFunctionFactory r0;

        r0 := @this: com.opengamma.analytics.math.curve.CurveShiftFunctionFactory;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static com.opengamma.analytics.math.curve.CurveShiftFunction getFunction(java.lang.Class)
    {
        java.lang.Class r0;
        com.opengamma.analytics.math.curve.CurveShiftFunction r1;
        java.util.Map $r2;
        java.lang.Object $r3;
        java.lang.IllegalArgumentException $r4;
        java.lang.StringBuilder $r5, $r6, $r8;
        java.lang.String $r7, $r9;

        r0 := @parameter0: java.lang.Class;

        $r2 = <com.opengamma.analytics.math.curve.CurveShiftFunctionFactory: java.util.Map s_instances>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r0);

        r1 = (com.opengamma.analytics.math.curve.CurveShiftFunction) $r3;

        if r1 != null goto label1;

        $r4 = new java.lang.IllegalArgumentException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Could not get function for ");

        $r7 = virtualinvoke r0.<java.lang.Class: java.lang.String getName()>();

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r9);

        throw $r4;

     label1:
        return r1;
    }

    public static com.opengamma.analytics.math.curve.DoublesCurve getShiftedCurve(com.opengamma.analytics.math.curve.Curve, double)
    {
        com.opengamma.analytics.math.curve.Curve r0;
        double d0;
        boolean $z0, $z1, $z2, $z3;
        java.lang.IllegalArgumentException $r1;
        java.lang.StringBuilder $r2, $r3, $r5;
        java.lang.Class $r4;
        java.lang.String $r6;
        com.opengamma.analytics.math.curve.SpreadDoublesCurve $r7, $r9;
        com.opengamma.analytics.math.curve.SpreadCurveShiftFunction $r8;
        com.opengamma.analytics.math.curve.InterpolatedDoublesCurve $r10, $r12;
        com.opengamma.analytics.math.curve.InterpolatedCurveShiftFunction $r11;
        com.opengamma.analytics.math.curve.FunctionalDoublesCurve $r13, $r15;
        com.opengamma.analytics.math.curve.FunctionalCurveShiftFunction $r14;
        com.opengamma.analytics.math.curve.ConstantDoublesCurve $r16, $r18;
        com.opengamma.analytics.math.curve.ConstantCurveShiftFunction $r17;

        r0 := @parameter0: com.opengamma.analytics.math.curve.Curve;

        d0 := @parameter1: double;

        $z0 = r0 instanceof com.opengamma.analytics.math.curve.ConstantDoublesCurve;

        if $z0 == 0 goto label1;

        $r17 = <com.opengamma.analytics.math.curve.CurveShiftFunctionFactory: com.opengamma.analytics.math.curve.ConstantCurveShiftFunction CONSTANT>;

        $r16 = (com.opengamma.analytics.math.curve.ConstantDoublesCurve) r0;

        $r18 = virtualinvoke $r17.<com.opengamma.analytics.math.curve.ConstantCurveShiftFunction: com.opengamma.analytics.math.curve.ConstantDoublesCurve evaluate(com.opengamma.analytics.math.curve.ConstantDoublesCurve,double)>($r16, d0);

        return $r18;

     label1:
        $z1 = r0 instanceof com.opengamma.analytics.math.curve.FunctionalDoublesCurve;

        if $z1 == 0 goto label2;

        $r14 = <com.opengamma.analytics.math.curve.CurveShiftFunctionFactory: com.opengamma.analytics.math.curve.FunctionalCurveShiftFunction FUNCTIONAL>;

        $r13 = (com.opengamma.analytics.math.curve.FunctionalDoublesCurve) r0;

        $r15 = virtualinvoke $r14.<com.opengamma.analytics.math.curve.FunctionalCurveShiftFunction: com.opengamma.analytics.math.curve.FunctionalDoublesCurve evaluate(com.opengamma.analytics.math.curve.FunctionalDoublesCurve,double)>($r13, d0);

        return $r15;

     label2:
        $z2 = r0 instanceof com.opengamma.analytics.math.curve.InterpolatedDoublesCurve;

        if $z2 == 0 goto label3;

        $r11 = <com.opengamma.analytics.math.curve.CurveShiftFunctionFactory: com.opengamma.analytics.math.curve.InterpolatedCurveShiftFunction INTERPOLATED>;

        $r10 = (com.opengamma.analytics.math.curve.InterpolatedDoublesCurve) r0;

        $r12 = virtualinvoke $r11.<com.opengamma.analytics.math.curve.InterpolatedCurveShiftFunction: com.opengamma.analytics.math.curve.InterpolatedDoublesCurve evaluate(com.opengamma.analytics.math.curve.InterpolatedDoublesCurve,double)>($r10, d0);

        return $r12;

     label3:
        $z3 = r0 instanceof com.opengamma.analytics.math.curve.SpreadDoublesCurve;

        if $z3 == 0 goto label4;

        $r8 = <com.opengamma.analytics.math.curve.CurveShiftFunctionFactory: com.opengamma.analytics.math.curve.SpreadCurveShiftFunction SPREAD>;

        $r7 = (com.opengamma.analytics.math.curve.SpreadDoublesCurve) r0;

        $r9 = virtualinvoke $r8.<com.opengamma.analytics.math.curve.SpreadCurveShiftFunction: com.opengamma.analytics.math.curve.SpreadDoublesCurve evaluate(com.opengamma.analytics.math.curve.SpreadDoublesCurve,double)>($r7, d0);

        return $r9;

     label4:
        $r1 = new java.lang.IllegalArgumentException;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Do not have a curve shift function for curve ");

        $r4 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r6);

        throw $r1;
    }

    public static com.opengamma.analytics.math.curve.DoublesCurve getShiftedCurve(com.opengamma.analytics.math.curve.Curve, double, double)
    {
        com.opengamma.analytics.math.curve.Curve r0;
        double d0, d1;
        boolean $z0, $z1, $z2, $z3;
        java.lang.IllegalArgumentException $r1;
        java.lang.StringBuilder $r2, $r3, $r5;
        java.lang.Class $r4;
        java.lang.String $r6;
        java.lang.UnsupportedOperationException $r7, $r11, $r12;
        com.opengamma.analytics.math.curve.InterpolatedDoublesCurve $r8, $r10;
        com.opengamma.analytics.math.curve.InterpolatedCurveShiftFunction $r9;

        r0 := @parameter0: com.opengamma.analytics.math.curve.Curve;

        d0 := @parameter1: double;

        d1 := @parameter2: double;

        $z0 = r0 instanceof com.opengamma.analytics.math.curve.ConstantDoublesCurve;

        if $z0 == 0 goto label1;

        $r12 = new java.lang.UnsupportedOperationException;

        specialinvoke $r12.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Cannot shift a single point on a constant curve");

        throw $r12;

     label1:
        $z1 = r0 instanceof com.opengamma.analytics.math.curve.FunctionalDoublesCurve;

        if $z1 == 0 goto label2;

        $r11 = new java.lang.UnsupportedOperationException;

        specialinvoke $r11.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Cannot shift a single point on a functional curve");

        throw $r11;

     label2:
        $z2 = r0 instanceof com.opengamma.analytics.math.curve.InterpolatedDoublesCurve;

        if $z2 == 0 goto label3;

        $r9 = <com.opengamma.analytics.math.curve.CurveShiftFunctionFactory: com.opengamma.analytics.math.curve.InterpolatedCurveShiftFunction INTERPOLATED>;

        $r8 = (com.opengamma.analytics.math.curve.InterpolatedDoublesCurve) r0;

        $r10 = virtualinvoke $r9.<com.opengamma.analytics.math.curve.InterpolatedCurveShiftFunction: com.opengamma.analytics.math.curve.InterpolatedDoublesCurve evaluate(com.opengamma.analytics.math.curve.InterpolatedDoublesCurve,double,double)>($r8, d0, d1);

        return $r10;

     label3:
        $z3 = r0 instanceof com.opengamma.analytics.math.curve.SpreadDoublesCurve;

        if $z3 == 0 goto label4;

        $r7 = new java.lang.UnsupportedOperationException;

        specialinvoke $r7.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Cannot shift a single point on a spread curve");

        throw $r7;

     label4:
        $r1 = new java.lang.IllegalArgumentException;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Do not have a curve shift function for curve ");

        $r4 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r6);

        throw $r1;
    }

    public static com.opengamma.analytics.math.curve.DoublesCurve getShiftedCurve(com.opengamma.analytics.math.curve.Curve, double[], double[])
    {
        com.opengamma.analytics.math.curve.Curve r0;
        double[] r1, r2;
        boolean $z0, $z1, $z2, $z3;
        java.lang.IllegalArgumentException $r3;
        java.lang.StringBuilder $r4, $r5, $r7;
        java.lang.Class $r6;
        java.lang.String $r8;
        java.lang.UnsupportedOperationException $r9, $r13, $r14;
        com.opengamma.analytics.math.curve.InterpolatedDoublesCurve $r10, $r12;
        com.opengamma.analytics.math.curve.InterpolatedCurveShiftFunction $r11;

        r0 := @parameter0: com.opengamma.analytics.math.curve.Curve;

        r1 := @parameter1: double[];

        r2 := @parameter2: double[];

        $z0 = r0 instanceof com.opengamma.analytics.math.curve.ConstantDoublesCurve;

        if $z0 == 0 goto label1;

        $r14 = new java.lang.UnsupportedOperationException;

        specialinvoke $r14.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Cannot shift a single point on a constant curve");

        throw $r14;

     label1:
        $z1 = r0 instanceof com.opengamma.analytics.math.curve.FunctionalDoublesCurve;

        if $z1 == 0 goto label2;

        $r13 = new java.lang.UnsupportedOperationException;

        specialinvoke $r13.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Cannot shift a single point on a functional curve");

        throw $r13;

     label2:
        $z2 = r0 instanceof com.opengamma.analytics.math.curve.InterpolatedDoublesCurve;

        if $z2 == 0 goto label3;

        $r11 = <com.opengamma.analytics.math.curve.CurveShiftFunctionFactory: com.opengamma.analytics.math.curve.InterpolatedCurveShiftFunction INTERPOLATED>;

        $r10 = (com.opengamma.analytics.math.curve.InterpolatedDoublesCurve) r0;

        $r12 = virtualinvoke $r11.<com.opengamma.analytics.math.curve.InterpolatedCurveShiftFunction: com.opengamma.analytics.math.curve.InterpolatedDoublesCurve evaluate(com.opengamma.analytics.math.curve.InterpolatedDoublesCurve,double[],double[])>($r10, r1, r2);

        return $r12;

     label3:
        $z3 = r0 instanceof com.opengamma.analytics.math.curve.SpreadDoublesCurve;

        if $z3 == 0 goto label4;

        $r9 = new java.lang.UnsupportedOperationException;

        specialinvoke $r9.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Cannot shift a single point on a spread curve");

        throw $r9;

     label4:
        $r3 = new java.lang.IllegalArgumentException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Do not have a curve shift function for curve ");

        $r6 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r8);

        throw $r3;
    }

    public static com.opengamma.analytics.math.curve.DoublesCurve getShiftedCurve(com.opengamma.analytics.math.curve.Curve, double, java.lang.String)
    {
        com.opengamma.analytics.math.curve.Curve r0;
        double d0;
        java.lang.String r1, $r7;
        boolean $z0, $z1, $z2, $z3;
        java.lang.IllegalArgumentException $r2;
        java.lang.StringBuilder $r3, $r4, $r6;
        java.lang.Class $r5;
        com.opengamma.analytics.math.curve.SpreadDoublesCurve $r8, $r10;
        com.opengamma.analytics.math.curve.SpreadCurveShiftFunction $r9;
        com.opengamma.analytics.math.curve.InterpolatedDoublesCurve $r11, $r13;
        com.opengamma.analytics.math.curve.InterpolatedCurveShiftFunction $r12;
        com.opengamma.analytics.math.curve.FunctionalDoublesCurve $r14, $r16;
        com.opengamma.analytics.math.curve.FunctionalCurveShiftFunction $r15;
        com.opengamma.analytics.math.curve.ConstantDoublesCurve $r17, $r19;
        com.opengamma.analytics.math.curve.ConstantCurveShiftFunction $r18;

        r0 := @parameter0: com.opengamma.analytics.math.curve.Curve;

        d0 := @parameter1: double;

        r1 := @parameter2: java.lang.String;

        $z0 = r0 instanceof com.opengamma.analytics.math.curve.ConstantDoublesCurve;

        if $z0 == 0 goto label1;

        $r18 = <com.opengamma.analytics.math.curve.CurveShiftFunctionFactory: com.opengamma.analytics.math.curve.ConstantCurveShiftFunction CONSTANT>;

        $r17 = (com.opengamma.analytics.math.curve.ConstantDoublesCurve) r0;

        $r19 = virtualinvoke $r18.<com.opengamma.analytics.math.curve.ConstantCurveShiftFunction: com.opengamma.analytics.math.curve.ConstantDoublesCurve evaluate(com.opengamma.analytics.math.curve.ConstantDoublesCurve,double,java.lang.String)>($r17, d0, r1);

        return $r19;

     label1:
        $z1 = r0 instanceof com.opengamma.analytics.math.curve.FunctionalDoublesCurve;

        if $z1 == 0 goto label2;

        $r15 = <com.opengamma.analytics.math.curve.CurveShiftFunctionFactory: com.opengamma.analytics.math.curve.FunctionalCurveShiftFunction FUNCTIONAL>;

        $r14 = (com.opengamma.analytics.math.curve.FunctionalDoublesCurve) r0;

        $r16 = virtualinvoke $r15.<com.opengamma.analytics.math.curve.FunctionalCurveShiftFunction: com.opengamma.analytics.math.curve.FunctionalDoublesCurve evaluate(com.opengamma.analytics.math.curve.FunctionalDoublesCurve,double,java.lang.String)>($r14, d0, r1);

        return $r16;

     label2:
        $z2 = r0 instanceof com.opengamma.analytics.math.curve.InterpolatedDoublesCurve;

        if $z2 == 0 goto label3;

        $r12 = <com.opengamma.analytics.math.curve.CurveShiftFunctionFactory: com.opengamma.analytics.math.curve.InterpolatedCurveShiftFunction INTERPOLATED>;

        $r11 = (com.opengamma.analytics.math.curve.InterpolatedDoublesCurve) r0;

        $r13 = virtualinvoke $r12.<com.opengamma.analytics.math.curve.InterpolatedCurveShiftFunction: com.opengamma.analytics.math.curve.InterpolatedDoublesCurve evaluate(com.opengamma.analytics.math.curve.InterpolatedDoublesCurve,double,java.lang.String)>($r11, d0, r1);

        return $r13;

     label3:
        $z3 = r0 instanceof com.opengamma.analytics.math.curve.SpreadDoublesCurve;

        if $z3 == 0 goto label4;

        $r9 = <com.opengamma.analytics.math.curve.CurveShiftFunctionFactory: com.opengamma.analytics.math.curve.SpreadCurveShiftFunction SPREAD>;

        $r8 = (com.opengamma.analytics.math.curve.SpreadDoublesCurve) r0;

        $r10 = virtualinvoke $r9.<com.opengamma.analytics.math.curve.SpreadCurveShiftFunction: com.opengamma.analytics.math.curve.SpreadDoublesCurve evaluate(com.opengamma.analytics.math.curve.SpreadDoublesCurve,double,java.lang.String)>($r8, d0, r1);

        return $r10;

     label4:
        $r2 = new java.lang.IllegalArgumentException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Do not have a curve shift function for curve ");

        $r5 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r7);

        throw $r2;
    }

    public static com.opengamma.analytics.math.curve.DoublesCurve getShiftedCurve(com.opengamma.analytics.math.curve.Curve, double, double, java.lang.String)
    {
        com.opengamma.analytics.math.curve.Curve r0;
        double d0, d1;
        java.lang.String r1, $r7;
        boolean $z0, $z1, $z2, $z3;
        java.lang.IllegalArgumentException $r2;
        java.lang.StringBuilder $r3, $r4, $r6;
        java.lang.Class $r5;
        java.lang.UnsupportedOperationException $r8, $r12, $r13;
        com.opengamma.analytics.math.curve.InterpolatedDoublesCurve $r9, $r11;
        com.opengamma.analytics.math.curve.InterpolatedCurveShiftFunction $r10;

        r0 := @parameter0: com.opengamma.analytics.math.curve.Curve;

        d0 := @parameter1: double;

        d1 := @parameter2: double;

        r1 := @parameter3: java.lang.String;

        $z0 = r0 instanceof com.opengamma.analytics.math.curve.ConstantDoublesCurve;

        if $z0 == 0 goto label1;

        $r13 = new java.lang.UnsupportedOperationException;

        specialinvoke $r13.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Cannot shift a single point on a constant curve");

        throw $r13;

     label1:
        $z1 = r0 instanceof com.opengamma.analytics.math.curve.FunctionalDoublesCurve;

        if $z1 == 0 goto label2;

        $r12 = new java.lang.UnsupportedOperationException;

        specialinvoke $r12.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Cannot shift a single point on a functional curve");

        throw $r12;

     label2:
        $z2 = r0 instanceof com.opengamma.analytics.math.curve.InterpolatedDoublesCurve;

        if $z2 == 0 goto label3;

        $r10 = <com.opengamma.analytics.math.curve.CurveShiftFunctionFactory: com.opengamma.analytics.math.curve.InterpolatedCurveShiftFunction INTERPOLATED>;

        $r9 = (com.opengamma.analytics.math.curve.InterpolatedDoublesCurve) r0;

        $r11 = virtualinvoke $r10.<com.opengamma.analytics.math.curve.InterpolatedCurveShiftFunction: com.opengamma.analytics.math.curve.InterpolatedDoublesCurve evaluate(com.opengamma.analytics.math.curve.InterpolatedDoublesCurve,double,double,java.lang.String)>($r9, d0, d1, r1);

        return $r11;

     label3:
        $z3 = r0 instanceof com.opengamma.analytics.math.curve.SpreadDoublesCurve;

        if $z3 == 0 goto label4;

        $r8 = new java.lang.UnsupportedOperationException;

        specialinvoke $r8.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Cannot shift a single point on a spread curve");

        throw $r8;

     label4:
        $r2 = new java.lang.IllegalArgumentException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Do not have a curve shift function for curve ");

        $r5 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r7);

        throw $r2;
    }

    public static com.opengamma.analytics.math.curve.DoublesCurve getShiftedCurve(com.opengamma.analytics.math.curve.Curve, double[], double[], java.lang.String)
    {
        com.opengamma.analytics.math.curve.Curve r0;
        double[] r1, r2;
        java.lang.String r3, $r9;
        boolean $z0, $z1, $z2, $z3;
        java.lang.IllegalArgumentException $r4;
        java.lang.StringBuilder $r5, $r6, $r8;
        java.lang.Class $r7;
        java.lang.UnsupportedOperationException $r10, $r14, $r15;
        com.opengamma.analytics.math.curve.InterpolatedDoublesCurve $r11, $r13;
        com.opengamma.analytics.math.curve.InterpolatedCurveShiftFunction $r12;

        r0 := @parameter0: com.opengamma.analytics.math.curve.Curve;

        r1 := @parameter1: double[];

        r2 := @parameter2: double[];

        r3 := @parameter3: java.lang.String;

        $z0 = r0 instanceof com.opengamma.analytics.math.curve.ConstantDoublesCurve;

        if $z0 == 0 goto label1;

        $r15 = new java.lang.UnsupportedOperationException;

        specialinvoke $r15.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Cannot shift a single point on a constant curve");

        throw $r15;

     label1:
        $z1 = r0 instanceof com.opengamma.analytics.math.curve.FunctionalDoublesCurve;

        if $z1 == 0 goto label2;

        $r14 = new java.lang.UnsupportedOperationException;

        specialinvoke $r14.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Cannot shift a single point on a functional curve");

        throw $r14;

     label2:
        $z2 = r0 instanceof com.opengamma.analytics.math.curve.InterpolatedDoublesCurve;

        if $z2 == 0 goto label3;

        $r12 = <com.opengamma.analytics.math.curve.CurveShiftFunctionFactory: com.opengamma.analytics.math.curve.InterpolatedCurveShiftFunction INTERPOLATED>;

        $r11 = (com.opengamma.analytics.math.curve.InterpolatedDoublesCurve) r0;

        $r13 = virtualinvoke $r12.<com.opengamma.analytics.math.curve.InterpolatedCurveShiftFunction: com.opengamma.analytics.math.curve.InterpolatedDoublesCurve evaluate(com.opengamma.analytics.math.curve.InterpolatedDoublesCurve,double[],double[],java.lang.String)>($r11, r1, r2, r3);

        return $r13;

     label3:
        $z3 = r0 instanceof com.opengamma.analytics.math.curve.SpreadDoublesCurve;

        if $z3 == 0 goto label4;

        $r10 = new java.lang.UnsupportedOperationException;

        specialinvoke $r10.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Cannot shift a single point on a spread curve");

        throw $r10;

     label4:
        $r4 = new java.lang.IllegalArgumentException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Do not have a curve shift function for curve ");

        $r7 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r9);

        throw $r4;
    }

    static void <clinit>()
    {
        com.opengamma.analytics.math.curve.ConstantCurveShiftFunction $r0, $r5;
        com.opengamma.analytics.math.curve.FunctionalCurveShiftFunction $r1, $r8;
        com.opengamma.analytics.math.curve.InterpolatedCurveShiftFunction $r2, $r11;
        com.opengamma.analytics.math.curve.SpreadCurveShiftFunction $r3, $r14;
        java.util.HashMap $r4;
        java.util.Map $r6, $r9, $r12, $r15;

        $r0 = new com.opengamma.analytics.math.curve.ConstantCurveShiftFunction;

        specialinvoke $r0.<com.opengamma.analytics.math.curve.ConstantCurveShiftFunction: void <init>()>();

        <com.opengamma.analytics.math.curve.CurveShiftFunctionFactory: com.opengamma.analytics.math.curve.ConstantCurveShiftFunction CONSTANT> = $r0;

        $r1 = new com.opengamma.analytics.math.curve.FunctionalCurveShiftFunction;

        specialinvoke $r1.<com.opengamma.analytics.math.curve.FunctionalCurveShiftFunction: void <init>()>();

        <com.opengamma.analytics.math.curve.CurveShiftFunctionFactory: com.opengamma.analytics.math.curve.FunctionalCurveShiftFunction FUNCTIONAL> = $r1;

        $r2 = new com.opengamma.analytics.math.curve.InterpolatedCurveShiftFunction;

        specialinvoke $r2.<com.opengamma.analytics.math.curve.InterpolatedCurveShiftFunction: void <init>()>();

        <com.opengamma.analytics.math.curve.CurveShiftFunctionFactory: com.opengamma.analytics.math.curve.InterpolatedCurveShiftFunction INTERPOLATED> = $r2;

        $r3 = new com.opengamma.analytics.math.curve.SpreadCurveShiftFunction;

        specialinvoke $r3.<com.opengamma.analytics.math.curve.SpreadCurveShiftFunction: void <init>()>();

        <com.opengamma.analytics.math.curve.CurveShiftFunctionFactory: com.opengamma.analytics.math.curve.SpreadCurveShiftFunction SPREAD> = $r3;

        $r4 = new java.util.HashMap;

        specialinvoke $r4.<java.util.HashMap: void <init>()>();

        <com.opengamma.analytics.math.curve.CurveShiftFunctionFactory: java.util.Map s_instances> = $r4;

        $r6 = <com.opengamma.analytics.math.curve.CurveShiftFunctionFactory: java.util.Map s_instances>;

        $r5 = <com.opengamma.analytics.math.curve.CurveShiftFunctionFactory: com.opengamma.analytics.math.curve.ConstantCurveShiftFunction CONSTANT>;

        interfaceinvoke $r6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(class "com/opengamma/analytics/math/curve/ConstantCurveShiftFunction", $r5);

        $r9 = <com.opengamma.analytics.math.curve.CurveShiftFunctionFactory: java.util.Map s_instances>;

        $r8 = <com.opengamma.analytics.math.curve.CurveShiftFunctionFactory: com.opengamma.analytics.math.curve.FunctionalCurveShiftFunction FUNCTIONAL>;

        interfaceinvoke $r9.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(class "com/opengamma/analytics/math/curve/FunctionalCurveShiftFunction", $r8);

        $r12 = <com.opengamma.analytics.math.curve.CurveShiftFunctionFactory: java.util.Map s_instances>;

        $r11 = <com.opengamma.analytics.math.curve.CurveShiftFunctionFactory: com.opengamma.analytics.math.curve.InterpolatedCurveShiftFunction INTERPOLATED>;

        interfaceinvoke $r12.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(class "com/opengamma/analytics/math/curve/InterpolatedCurveShiftFunction", $r11);

        $r15 = <com.opengamma.analytics.math.curve.CurveShiftFunctionFactory: java.util.Map s_instances>;

        $r14 = <com.opengamma.analytics.math.curve.CurveShiftFunctionFactory: com.opengamma.analytics.math.curve.SpreadCurveShiftFunction SPREAD>;

        interfaceinvoke $r15.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(class "com/opengamma/analytics/math/curve/SpreadCurveShiftFunction", $r14);

        return;
    }
}
