final class com.opengamma.analytics.financial.model.interestrate.curve.ForwardCurveAffineDividends$1 extends com.opengamma.analytics.math.function.Function1D
{
    final com.opengamma.analytics.financial.equity.variance.pricing.AffineDividends val$dividends;
    final com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve val$riskFreeCurve;
    final double val$spot;

    void <init>(com.opengamma.analytics.financial.equity.variance.pricing.AffineDividends, com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve, double)
    {
        com.opengamma.analytics.financial.model.interestrate.curve.ForwardCurveAffineDividends$1 r0;
        com.opengamma.analytics.financial.equity.variance.pricing.AffineDividends r1;
        com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve r2;
        double d0;

        r0 := @this: com.opengamma.analytics.financial.model.interestrate.curve.ForwardCurveAffineDividends$1;

        r1 := @parameter0: com.opengamma.analytics.financial.equity.variance.pricing.AffineDividends;

        r2 := @parameter1: com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve;

        d0 := @parameter2: double;

        r0.<com.opengamma.analytics.financial.model.interestrate.curve.ForwardCurveAffineDividends$1: com.opengamma.analytics.financial.equity.variance.pricing.AffineDividends val$dividends> = r1;

        r0.<com.opengamma.analytics.financial.model.interestrate.curve.ForwardCurveAffineDividends$1: com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve val$riskFreeCurve> = r2;

        r0.<com.opengamma.analytics.financial.model.interestrate.curve.ForwardCurveAffineDividends$1: double val$spot> = d0;

        specialinvoke r0.<com.opengamma.analytics.math.function.Function1D: void <init>()>();

        return;
    }

    public java.lang.Double evaluate(java.lang.Double)
    {
        com.opengamma.analytics.financial.model.interestrate.curve.ForwardCurveAffineDividends$1 r0;
        java.lang.Double r1, $r10, $r12;
        int i0, i2, i3;
        double[] r2, r3, r4, $r8;
        double d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21, $d22, d23, d24;
        com.opengamma.analytics.financial.equity.variance.pricing.AffineDividends $r5, $r6, $r7, $r13, $r14, $r16;
        byte $b1;
        com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve $r9, $r11, $r15;

        r0 := @this: com.opengamma.analytics.financial.model.interestrate.curve.ForwardCurveAffineDividends$1;

        r1 := @parameter0: java.lang.Double;

        $r5 = r0.<com.opengamma.analytics.financial.model.interestrate.curve.ForwardCurveAffineDividends$1: com.opengamma.analytics.financial.equity.variance.pricing.AffineDividends val$dividends>;

        i0 = virtualinvoke $r5.<com.opengamma.analytics.financial.equity.variance.pricing.AffineDividends: int getNumberOfDividends()>();

        r2 = newarray (double)[i0];

        r3 = newarray (double)[i0];

        r4 = newarray (double)[i0];

        d23 = 1.0;

        d24 = 0.0;

        i2 = 0;

     label1:
        if i2 >= i0 goto label2;

        $r13 = r0.<com.opengamma.analytics.financial.model.interestrate.curve.ForwardCurveAffineDividends$1: com.opengamma.analytics.financial.equity.variance.pricing.AffineDividends val$dividends>;

        $d15 = virtualinvoke $r13.<com.opengamma.analytics.financial.equity.variance.pricing.AffineDividends: double getBeta(int)>(i2);

        $d16 = 1.0 - $d15;

        d23 = d23 * $d16;

        r3[i2] = d23;

        $r15 = r0.<com.opengamma.analytics.financial.model.interestrate.curve.ForwardCurveAffineDividends$1: com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve val$riskFreeCurve>;

        $r14 = r0.<com.opengamma.analytics.financial.model.interestrate.curve.ForwardCurveAffineDividends$1: com.opengamma.analytics.financial.equity.variance.pricing.AffineDividends val$dividends>;

        $d17 = virtualinvoke $r14.<com.opengamma.analytics.financial.equity.variance.pricing.AffineDividends: double getTau(int)>(i2);

        $d18 = virtualinvoke $r15.<com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve: double getDiscountFactor(double)>($d17);

        $d19 = d23 / $d18;

        r2[i2] = $d19;

        $r16 = r0.<com.opengamma.analytics.financial.model.interestrate.curve.ForwardCurveAffineDividends$1: com.opengamma.analytics.financial.equity.variance.pricing.AffineDividends val$dividends>;

        $d20 = virtualinvoke $r16.<com.opengamma.analytics.financial.equity.variance.pricing.AffineDividends: double getAlpha(int)>(i2);

        $d21 = r2[i2];

        $d22 = $d20 / $d21;

        d24 = d24 + $d22;

        r4[i2] = d24;

        i2 = i2 + 1;

        goto label1;

     label2:
        $d1 = virtualinvoke r1.<java.lang.Double: double doubleValue()>();

        $r6 = r0.<com.opengamma.analytics.financial.model.interestrate.curve.ForwardCurveAffineDividends$1: com.opengamma.analytics.financial.equity.variance.pricing.AffineDividends val$dividends>;

        $d2 = virtualinvoke $r6.<com.opengamma.analytics.financial.equity.variance.pricing.AffineDividends: double getTau(int)>(0);

        $b1 = $d1 cmpg $d2;

        if $b1 >= 0 goto label3;

        $d11 = r0.<com.opengamma.analytics.financial.model.interestrate.curve.ForwardCurveAffineDividends$1: double val$spot>;

        $r11 = r0.<com.opengamma.analytics.financial.model.interestrate.curve.ForwardCurveAffineDividends$1: com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve val$riskFreeCurve>;

        $d12 = virtualinvoke r1.<java.lang.Double: double doubleValue()>();

        $d13 = virtualinvoke $r11.<com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve: double getDiscountFactor(double)>($d12);

        $d14 = $d11 / $d13;

        $r12 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d14);

        return $r12;

     label3:
        $r7 = r0.<com.opengamma.analytics.financial.model.interestrate.curve.ForwardCurveAffineDividends$1: com.opengamma.analytics.financial.equity.variance.pricing.AffineDividends val$dividends>;

        $r8 = virtualinvoke $r7.<com.opengamma.analytics.financial.equity.variance.pricing.AffineDividends: double[] getTau()>();

        $d3 = virtualinvoke r1.<java.lang.Double: double doubleValue()>();

        i3 = staticinvoke <com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SurfaceArrayUtils: int getLowerBoundIndex(double[],double)>($r8, $d3);

        d0 = r4[i3];

        $d4 = r3[i3];

        $r9 = r0.<com.opengamma.analytics.financial.model.interestrate.curve.ForwardCurveAffineDividends$1: com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve val$riskFreeCurve>;

        $d5 = virtualinvoke r1.<java.lang.Double: double doubleValue()>();

        $d6 = virtualinvoke $r9.<com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve: double getDiscountFactor(double)>($d5);

        $d9 = $d4 / $d6;

        $d7 = r0.<com.opengamma.analytics.financial.model.interestrate.curve.ForwardCurveAffineDividends$1: double val$spot>;

        $d8 = $d7 - d0;

        $d10 = $d9 * $d8;

        $r10 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d10);

        return $r10;
    }

    public volatile java.lang.Object evaluate(java.lang.Object)
    {
        com.opengamma.analytics.financial.model.interestrate.curve.ForwardCurveAffineDividends$1 r0;
        java.lang.Object r1;
        java.lang.Double $r2, $r3;

        r0 := @this: com.opengamma.analytics.financial.model.interestrate.curve.ForwardCurveAffineDividends$1;

        r1 := @parameter0: java.lang.Object;

        $r2 = (java.lang.Double) r1;

        $r3 = virtualinvoke r0.<com.opengamma.analytics.financial.model.interestrate.curve.ForwardCurveAffineDividends$1: java.lang.Double evaluate(java.lang.Double)>($r2);

        return $r3;
    }
}
