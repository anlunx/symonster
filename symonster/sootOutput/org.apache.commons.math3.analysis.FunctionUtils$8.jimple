final class org.apache.commons.math3.analysis.FunctionUtils$8 extends java.lang.Object implements org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiableFunction
{
    final org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiableFunction[] val$f;

    void <init>(org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiableFunction[])
    {
        org.apache.commons.math3.analysis.FunctionUtils$8 r0;
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiableFunction[] r1;

        r0 := @this: org.apache.commons.math3.analysis.FunctionUtils$8;

        r1 := @parameter0: org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiableFunction[];

        r0.<org.apache.commons.math3.analysis.FunctionUtils$8: org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiableFunction[] val$f> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public double value(double)
    {
        org.apache.commons.math3.analysis.FunctionUtils$8 r0;
        double d0, $d1, d2;
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiableFunction[] $r1, $r3, $r4;
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiableFunction $r2, $r5;
        int $i0, i1;

        r0 := @this: org.apache.commons.math3.analysis.FunctionUtils$8;

        d0 := @parameter0: double;

        $r1 = r0.<org.apache.commons.math3.analysis.FunctionUtils$8: org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiableFunction[] val$f>;

        $r2 = $r1[0];

        d2 = interfaceinvoke $r2.<org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiableFunction: double value(double)>(d0);

        i1 = 1;

     label1:
        $r3 = r0.<org.apache.commons.math3.analysis.FunctionUtils$8: org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiableFunction[] val$f>;

        $i0 = lengthof $r3;

        if i1 >= $i0 goto label2;

        $r4 = r0.<org.apache.commons.math3.analysis.FunctionUtils$8: org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiableFunction[] val$f>;

        $r5 = $r4[i1];

        $d1 = interfaceinvoke $r5.<org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiableFunction: double value(double)>(d0);

        d2 = d2 * $d1;

        i1 = i1 + 1;

        goto label1;

     label2:
        return d2;
    }

    public org.apache.commons.math3.analysis.differentiation.DerivativeStructure value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure)
    {
        org.apache.commons.math3.analysis.FunctionUtils$8 r0;
        org.apache.commons.math3.analysis.differentiation.DerivativeStructure r1, $r7, r8;
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiableFunction[] $r2, $r4, $r5;
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiableFunction $r3, $r6;
        int $i0, i1;

        r0 := @this: org.apache.commons.math3.analysis.FunctionUtils$8;

        r1 := @parameter0: org.apache.commons.math3.analysis.differentiation.DerivativeStructure;

        $r2 = r0.<org.apache.commons.math3.analysis.FunctionUtils$8: org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiableFunction[] val$f>;

        $r3 = $r2[0];

        r8 = interfaceinvoke $r3.<org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiableFunction: org.apache.commons.math3.analysis.differentiation.DerivativeStructure value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure)>(r1);

        i1 = 1;

     label1:
        $r4 = r0.<org.apache.commons.math3.analysis.FunctionUtils$8: org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiableFunction[] val$f>;

        $i0 = lengthof $r4;

        if i1 >= $i0 goto label2;

        $r5 = r0.<org.apache.commons.math3.analysis.FunctionUtils$8: org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiableFunction[] val$f>;

        $r6 = $r5[i1];

        $r7 = interfaceinvoke $r6.<org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiableFunction: org.apache.commons.math3.analysis.differentiation.DerivativeStructure value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure)>(r1);

        r8 = virtualinvoke r8.<org.apache.commons.math3.analysis.differentiation.DerivativeStructure: org.apache.commons.math3.analysis.differentiation.DerivativeStructure multiply(org.apache.commons.math3.analysis.differentiation.DerivativeStructure)>($r7);

        i1 = i1 + 1;

        goto label1;

     label2:
        return r8;
    }
}
