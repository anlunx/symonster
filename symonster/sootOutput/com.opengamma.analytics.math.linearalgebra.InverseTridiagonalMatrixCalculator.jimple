public class com.opengamma.analytics.math.linearalgebra.InverseTridiagonalMatrixCalculator extends com.opengamma.analytics.math.function.Function1D
{

    public void <init>()
    {
        com.opengamma.analytics.math.linearalgebra.InverseTridiagonalMatrixCalculator r0;

        r0 := @this: com.opengamma.analytics.math.linearalgebra.InverseTridiagonalMatrixCalculator;

        specialinvoke r0.<com.opengamma.analytics.math.function.Function1D: void <init>()>();

        return;
    }

    public com.opengamma.analytics.math.matrix.DoubleMatrix2D evaluate(com.opengamma.analytics.math.linearalgebra.TridiagonalMatrix)
    {
        com.opengamma.analytics.math.linearalgebra.InverseTridiagonalMatrixCalculator r0;
        com.opengamma.analytics.math.linearalgebra.TridiagonalMatrix r1;
        double[] r2, r3, r4, r5, r6, $r9, $r10;
        int i0, $i1, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, i22, i23, i24, i25, i26, i28, i29;
        double[][] r7;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21, $d22, $d23, $d24, $d25, $d26, $d27, $d28, $d29, $d30, $d31, $d32, $d33, $d34, $d35, $d36, $d37, $d38, d39, d40;
        byte $b2, $b27, $b30;
        com.opengamma.analytics.math.matrix.DoubleMatrix2D $r8;
        com.opengamma.analytics.math.MathException $r11;

        r0 := @this: com.opengamma.analytics.math.linearalgebra.InverseTridiagonalMatrixCalculator;

        r1 := @parameter0: com.opengamma.analytics.math.linearalgebra.TridiagonalMatrix;

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object)>(r1);

        r2 = virtualinvoke r1.<com.opengamma.analytics.math.linearalgebra.TridiagonalMatrix: double[] getDiagonalData()>();

        r3 = virtualinvoke r1.<com.opengamma.analytics.math.linearalgebra.TridiagonalMatrix: double[] getUpperSubDiagonalData()>();

        r4 = virtualinvoke r1.<com.opengamma.analytics.math.linearalgebra.TridiagonalMatrix: double[] getLowerSubDiagonalData()>();

        i0 = lengthof r2;

        $i1 = i0 + 1;

        r5 = newarray (double)[$i1];

        r6 = newarray (double)[i0];

        r5[0] = 1.0;

        $d0 = r2[0];

        r5[1] = $d0;

        i22 = 2;

     label01:
        if i22 > i0 goto label02;

        $i17 = i22 - 1;

        $d31 = r2[$i17];

        $i18 = i22 - 1;

        $d30 = r5[$i18];

        $d37 = $d31 * $d30;

        $i19 = i22 - 2;

        $d33 = r3[$i19];

        $i20 = i22 - 2;

        $d32 = r4[$i20];

        $d35 = $d33 * $d32;

        $i21 = i22 - 2;

        $d34 = r5[$i21];

        $d36 = $d35 * $d34;

        $d38 = $d37 - $d36;

        r5[i22] = $d38;

        i22 = i22 + 1;

        goto label01;

     label02:
        $d1 = r5[i0];

        $b2 = $d1 cmpl 0.0;

        if $b2 != 0 goto label03;

        $r11 = new com.opengamma.analytics.math.MathException;

        specialinvoke $r11.<com.opengamma.analytics.math.MathException: void <init>(java.lang.String)>("Zero determinant. Cannot invert the matrix");

        throw $r11;

     label03:
        $i3 = i0 - 1;

        r6[$i3] = 1.0;

        $i5 = i0 - 2;

        $i4 = i0 - 1;

        $d2 = r2[$i4];

        r6[$i5] = $d2;

        i23 = i0 - 3;

     label04:
        if i23 < 0 goto label05;

        $i12 = i23 + 1;

        $d22 = r2[$i12];

        $i13 = i23 + 1;

        $d21 = r6[$i13];

        $d28 = $d22 * $d21;

        $i14 = i23 + 1;

        $d24 = r3[$i14];

        $i15 = i23 + 1;

        $d23 = r4[$i15];

        $d26 = $d24 * $d23;

        $i16 = i23 + 2;

        $d25 = r6[$i16];

        $d27 = $d26 * $d25;

        $d29 = $d28 - $d27;

        r6[i23] = $d29;

        i23 = i23 + -1;

        goto label04;

     label05:
        r7 = newmultiarray (double)[i0][i0];

        i24 = 0;

     label06:
        if i24 >= i0 goto label19;

        i25 = 0;

     label07:
        if i25 > i24 goto label12;

        d39 = 1.0;

        i26 = i25;

     label08:
        if i26 >= i24 goto label09;

        $d20 = r3[i26];

        d39 = d39 * $d20;

        i26 = i26 + 1;

        goto label08;

     label09:
        $r10 = r7[i25];

        $i11 = i24;

        $i9 = i25 + i24;

        $i10 = $i9 % 2;

        if $i10 != 0 goto label10;

        $b27 = 1;

        goto label11;

     label10:
        $b27 = -1;

     label11:
        $d12 = (double) $b27;

        $d14 = $d12 * d39;

        $d13 = r5[i25];

        $d16 = $d14 * $d13;

        $d15 = r6[i24];

        $d18 = $d16 * $d15;

        $d17 = r5[i0];

        $d19 = $d18 / $d17;

        $r10[$i11] = $d19;

        i25 = i25 + 1;

        goto label07;

     label12:
        i28 = i24 + 1;

     label13:
        if i28 >= i0 goto label18;

        d40 = 1.0;

        i29 = i24;

     label14:
        if i29 >= i28 goto label15;

        $d11 = r4[i29];

        d40 = d40 * $d11;

        i29 = i29 + 1;

        goto label14;

     label15:
        $r9 = r7[i28];

        $i8 = i24;

        $i6 = i28 + i24;

        $i7 = $i6 % 2;

        if $i7 != 0 goto label16;

        $b30 = 1;

        goto label17;

     label16:
        $b30 = -1;

     label17:
        $d3 = (double) $b30;

        $d5 = $d3 * d40;

        $d4 = r5[i24];

        $d7 = $d5 * $d4;

        $d6 = r6[i28];

        $d9 = $d7 * $d6;

        $d8 = r5[i0];

        $d10 = $d9 / $d8;

        $r9[$i8] = $d10;

        i28 = i28 + 1;

        goto label13;

     label18:
        i24 = i24 + 1;

        goto label06;

     label19:
        $r8 = new com.opengamma.analytics.math.matrix.DoubleMatrix2D;

        specialinvoke $r8.<com.opengamma.analytics.math.matrix.DoubleMatrix2D: void <init>(double[][])>(r7);

        return $r8;
    }

    public volatile java.lang.Object evaluate(java.lang.Object)
    {
        com.opengamma.analytics.math.linearalgebra.InverseTridiagonalMatrixCalculator r0;
        java.lang.Object r1;
        com.opengamma.analytics.math.linearalgebra.TridiagonalMatrix $r2;
        com.opengamma.analytics.math.matrix.DoubleMatrix2D $r3;

        r0 := @this: com.opengamma.analytics.math.linearalgebra.InverseTridiagonalMatrixCalculator;

        r1 := @parameter0: java.lang.Object;

        $r2 = (com.opengamma.analytics.math.linearalgebra.TridiagonalMatrix) r1;

        $r3 = virtualinvoke r0.<com.opengamma.analytics.math.linearalgebra.InverseTridiagonalMatrixCalculator: com.opengamma.analytics.math.matrix.DoubleMatrix2D evaluate(com.opengamma.analytics.math.linearalgebra.TridiagonalMatrix)>($r2);

        return $r3;
    }
}
