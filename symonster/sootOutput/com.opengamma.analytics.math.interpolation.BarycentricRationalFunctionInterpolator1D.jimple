public class com.opengamma.analytics.math.interpolation.BarycentricRationalFunctionInterpolator1D extends com.opengamma.analytics.math.interpolation.Interpolator1D
{
    private static final long serialVersionUID;
    private final int _degree;
    private final double _eps;

    public void <init>(int, double)
    {
        com.opengamma.analytics.math.interpolation.BarycentricRationalFunctionInterpolator1D r0;
        int i0;
        double d0;
        boolean $z0;

        r0 := @this: com.opengamma.analytics.math.interpolation.BarycentricRationalFunctionInterpolator1D;

        i0 := @parameter0: int;

        d0 := @parameter1: double;

        specialinvoke r0.<com.opengamma.analytics.math.interpolation.Interpolator1D: void <init>()>();

        if i0 <= 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        staticinvoke <org.apache.commons.lang.Validate: void isTrue(boolean,java.lang.String)>($z0, "Cannot perform interpolation with rational functions of degree < 1");

        r0.<com.opengamma.analytics.math.interpolation.BarycentricRationalFunctionInterpolator1D: int _degree> = i0;

        r0.<com.opengamma.analytics.math.interpolation.BarycentricRationalFunctionInterpolator1D: double _eps> = d0;

        return;
    }

    public java.lang.Double interpolate(com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle, java.lang.Double)
    {
        com.opengamma.analytics.math.interpolation.BarycentricRationalFunctionInterpolator1D r0;
        com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle r1;
        java.lang.Double r2, $r6, $r7, $r8;
        int i0, i1, $i2, $i3, $i4, $i5, $i7, $i8, $i9, i10;
        double[] r3, r4, r5;
        double d0, d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, d12, d13;
        byte $b6;
        com.opengamma.analytics.math.MathException $r9;
        java.lang.StringBuilder $r10, $r11, $r12, $r13, $r14;
        java.lang.String $r15;

        r0 := @this: com.opengamma.analytics.math.interpolation.BarycentricRationalFunctionInterpolator1D;

        r1 := @parameter0: com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle;

        r2 := @parameter1: java.lang.Double;

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object,java.lang.String)>(r2, "value");

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object,java.lang.String)>(r1, "data bundle");

        $i2 = interfaceinvoke r1.<com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle: int size()>();

        $i3 = r0.<com.opengamma.analytics.math.interpolation.BarycentricRationalFunctionInterpolator1D: int _degree>;

        if $i2 >= $i3 goto label1;

        $r9 = new com.opengamma.analytics.math.MathException;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot interpolate ");

        $i8 = interfaceinvoke r1.<com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle: int size()>();

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i8);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" data points with rational functions of degree ");

        $i9 = r0.<com.opengamma.analytics.math.interpolation.BarycentricRationalFunctionInterpolator1D: int _degree>;

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i9);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r9.<com.opengamma.analytics.math.MathException: void <init>(java.lang.String)>($r15);

        throw $r9;

     label1:
        i0 = interfaceinvoke r1.<com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle: int size()>();

        r3 = interfaceinvoke r1.<com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle: double[] getKeys()>();

        r4 = interfaceinvoke r1.<com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle: double[] getValues()>();

        $i4 = interfaceinvoke r1.<com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle: int getLowerBoundIndex(java.lang.Double)>(r2);

        $i5 = i0 - 1;

        if $i4 != $i5 goto label2;

        $i7 = i0 - 1;

        $d11 = r4[$i7];

        $r8 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d11);

        return $r8;

     label2:
        r5 = specialinvoke r0.<com.opengamma.analytics.math.interpolation.BarycentricRationalFunctionInterpolator1D: double[] getWeights(double[])>(r3);

        i1 = lengthof r3;

        d12 = 0.0;

        d13 = 0.0;

        i10 = 0;

     label3:
        if i10 >= i1 goto label5;

        $d3 = virtualinvoke r2.<java.lang.Double: double doubleValue()>();

        $d4 = r3[i10];

        d0 = $d3 - $d4;

        $d5 = staticinvoke <java.lang.Math: double abs(double)>(d0);

        $d6 = r0.<com.opengamma.analytics.math.interpolation.BarycentricRationalFunctionInterpolator1D: double _eps>;

        $b6 = $d5 cmpg $d6;

        if $b6 >= 0 goto label4;

        $d10 = r4[i10];

        $r7 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d10);

        return $r7;

     label4:
        $d7 = r5[i10];

        d1 = $d7 / d0;

        $d8 = r4[i10];

        $d9 = d1 * $d8;

        d12 = d12 + $d9;

        d13 = d13 + d1;

        i10 = i10 + 1;

        goto label3;

     label5:
        $d2 = d12 / d13;

        $r6 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d2);

        return $r6;
    }

    private double[] getWeights(double[])
    {
        com.opengamma.analytics.math.interpolation.BarycentricRationalFunctionInterpolator1D r0;
        double[] r1, r2;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, i14, $i15, i17, i18, i19;
        double $d0, $d1, $d2, $d3, d4, d5, d6;
        byte $b16;

        r0 := @this: com.opengamma.analytics.math.interpolation.BarycentricRationalFunctionInterpolator1D;

        r1 := @parameter0: double[];

        i0 = lengthof r1;

        r2 = newarray (double)[i0];

        i14 = 0;

     label01:
        if i14 >= i0 goto label12;

        $i4 = r0.<com.opengamma.analytics.math.interpolation.BarycentricRationalFunctionInterpolator1D: int _degree>;

        $i5 = i14 - $i4;

        i1 = staticinvoke <java.lang.Math: int max(int,int)>($i5, 0);

        $i6 = r0.<com.opengamma.analytics.math.interpolation.BarycentricRationalFunctionInterpolator1D: int _degree>;

        $i7 = i0 - $i6;

        if i14 < $i7 goto label02;

        $i12 = r0.<com.opengamma.analytics.math.interpolation.BarycentricRationalFunctionInterpolator1D: int _degree>;

        $i13 = i0 - $i12;

        $i15 = $i13 - 1;

        goto label03;

     label02:
        $i15 = i14;

     label03:
        i2 = $i15;

        $i8 = i1 % 2;

        if $i8 != 0 goto label04;

        $b16 = 1;

        goto label05;

     label04:
        $b16 = -1;

     label05:
        i17 = $b16;

        d4 = 0.0;

        i18 = i1;

     label06:
        if i18 > i2 goto label11;

        $i9 = r0.<com.opengamma.analytics.math.interpolation.BarycentricRationalFunctionInterpolator1D: int _degree>;

        $i11 = i18 + $i9;

        $i10 = i0 - 1;

        i3 = staticinvoke <java.lang.Math: int min(int,int)>($i11, $i10);

        d5 = 1.0;

        i19 = i18;

     label07:
        if i19 > i3 goto label10;

        if i19 != i14 goto label08;

        goto label09;

     label08:
        $d2 = r1[i14];

        $d1 = r1[i19];

        $d3 = $d2 - $d1;

        d5 = d5 * $d3;

     label09:
        i19 = i19 + 1;

        goto label07;

     label10:
        $d0 = (double) i17;

        d6 = $d0 / d5;

        i17 = i17 * -1;

        d4 = d4 + d6;

        i18 = i18 + 1;

        goto label06;

     label11:
        r2[i14] = d4;

        i14 = i14 + 1;

        goto label01;

     label12:
        return r2;
    }

    public com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle getDataBundle(double[], double[])
    {
        com.opengamma.analytics.math.interpolation.BarycentricRationalFunctionInterpolator1D r0;
        double[] r1, r2;
        com.opengamma.analytics.math.interpolation.data.ArrayInterpolator1DDataBundle $r3;

        r0 := @this: com.opengamma.analytics.math.interpolation.BarycentricRationalFunctionInterpolator1D;

        r1 := @parameter0: double[];

        r2 := @parameter1: double[];

        $r3 = new com.opengamma.analytics.math.interpolation.data.ArrayInterpolator1DDataBundle;

        specialinvoke $r3.<com.opengamma.analytics.math.interpolation.data.ArrayInterpolator1DDataBundle: void <init>(double[],double[])>(r1, r2);

        return $r3;
    }

    public com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle getDataBundleFromSortedArrays(double[], double[])
    {
        com.opengamma.analytics.math.interpolation.BarycentricRationalFunctionInterpolator1D r0;
        double[] r1, r2;
        com.opengamma.analytics.math.interpolation.data.ArrayInterpolator1DDataBundle $r3;

        r0 := @this: com.opengamma.analytics.math.interpolation.BarycentricRationalFunctionInterpolator1D;

        r1 := @parameter0: double[];

        r2 := @parameter1: double[];

        $r3 = new com.opengamma.analytics.math.interpolation.data.ArrayInterpolator1DDataBundle;

        specialinvoke $r3.<com.opengamma.analytics.math.interpolation.data.ArrayInterpolator1DDataBundle: void <init>(double[],double[],boolean)>(r1, r2, 1);

        return $r3;
    }

    public boolean equals(java.lang.Object)
    {
        com.opengamma.analytics.math.interpolation.BarycentricRationalFunctionInterpolator1D r0, r2;
        java.lang.Object r1;
        boolean $z0, $z1;
        int $i0, $i1;

        r0 := @this: com.opengamma.analytics.math.interpolation.BarycentricRationalFunctionInterpolator1D;

        r1 := @parameter0: java.lang.Object;

        if r1 != null goto label1;

        return 0;

     label1:
        if r1 != r0 goto label2;

        return 1;

     label2:
        $z0 = r1 instanceof com.opengamma.analytics.math.interpolation.BarycentricRationalFunctionInterpolator1D;

        if $z0 != 0 goto label3;

        return 0;

     label3:
        r2 = (com.opengamma.analytics.math.interpolation.BarycentricRationalFunctionInterpolator1D) r1;

        $i1 = r0.<com.opengamma.analytics.math.interpolation.BarycentricRationalFunctionInterpolator1D: int _degree>;

        $i0 = r2.<com.opengamma.analytics.math.interpolation.BarycentricRationalFunctionInterpolator1D: int _degree>;

        if $i1 != $i0 goto label4;

        $z1 = 1;

        goto label5;

     label4:
        $z1 = 0;

     label5:
        return $z1;
    }

    public int hashCode()
    {
        com.opengamma.analytics.math.interpolation.BarycentricRationalFunctionInterpolator1D r0;
        java.lang.Class $r1;
        int $i0, $i1, $i2, $i3;

        r0 := @this: com.opengamma.analytics.math.interpolation.BarycentricRationalFunctionInterpolator1D;

        $r1 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $i0 = virtualinvoke $r1.<java.lang.Object: int hashCode()>();

        $i2 = $i0 * 17;

        $i1 = r0.<com.opengamma.analytics.math.interpolation.BarycentricRationalFunctionInterpolator1D: int _degree>;

        $i3 = $i2 + $i1;

        return $i3;
    }

    public double[] getNodeSensitivitiesForValue(com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle, java.lang.Double)
    {
        com.opengamma.analytics.math.interpolation.BarycentricRationalFunctionInterpolator1D r0;
        com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle r1;
        java.lang.Double r2;
        double[] $r3;

        r0 := @this: com.opengamma.analytics.math.interpolation.BarycentricRationalFunctionInterpolator1D;

        r1 := @parameter0: com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle;

        r2 := @parameter1: java.lang.Double;

        $r3 = virtualinvoke r0.<com.opengamma.analytics.math.interpolation.BarycentricRationalFunctionInterpolator1D: double[] getFiniteDifferenceSensitivities(com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle,java.lang.Double)>(r1, r2);

        return $r3;
    }

    public volatile java.lang.Double interpolate(java.lang.Object, java.lang.Object)
    {
        com.opengamma.analytics.math.interpolation.BarycentricRationalFunctionInterpolator1D r0;
        java.lang.Object r1, r2;
        java.lang.Double $r3, $r5;
        com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle $r4;

        r0 := @this: com.opengamma.analytics.math.interpolation.BarycentricRationalFunctionInterpolator1D;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r4 = (com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle) r1;

        $r3 = (java.lang.Double) r2;

        $r5 = virtualinvoke r0.<com.opengamma.analytics.math.interpolation.BarycentricRationalFunctionInterpolator1D: java.lang.Double interpolate(com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle,java.lang.Double)>($r4, $r3);

        return $r5;
    }

    public static void <clinit>()
    {
        <com.opengamma.analytics.math.interpolation.BarycentricRationalFunctionInterpolator1D: long serialVersionUID> = 1L;

        return;
    }
}
