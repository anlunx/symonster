public class com.opengamma.analytics.financial.model.option.pricing.tree.GapOptionFunctionProvider extends com.opengamma.analytics.financial.model.option.pricing.tree.OptionFunctionProvider1D
{
    private double _payoffStrike;

    public void <init>(double, double, int, boolean, double)
    {
        com.opengamma.analytics.financial.model.option.pricing.tree.GapOptionFunctionProvider r0;
        double d0, d1, d2;
        int i0;
        boolean z0, $z1, $z2;
        byte $b1;

        r0 := @this: com.opengamma.analytics.financial.model.option.pricing.tree.GapOptionFunctionProvider;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        i0 := @parameter2: int;

        z0 := @parameter3: boolean;

        d2 := @parameter4: double;

        specialinvoke r0.<com.opengamma.analytics.financial.model.option.pricing.tree.OptionFunctionProvider1D: void <init>(double,double,int,boolean)>(d0, d1, i0, z0);

        $b1 = d2 cmpl 0.0;

        if $b1 <= 0 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z2, "payoffStrike should be positive");

        $z1 = staticinvoke <com.google.common.primitives.Doubles: boolean isFinite(double)>(d2);

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z1, "payoffStrike should be finite");

        r0.<com.opengamma.analytics.financial.model.option.pricing.tree.GapOptionFunctionProvider: double _payoffStrike> = d2;

        return;
    }

    public double[] getPayoffAtExpiry(double, double, double)
    {
        com.opengamma.analytics.financial.model.option.pricing.tree.GapOptionFunctionProvider r0;
        double d0, d1, d2, d3, d4, $d5, $d6, $d7, $d8, $d9, $d10, d11, $d12;
        int i0, i1, $i3, i4;
        double[] r1;
        byte $b2;

        r0 := @this: com.opengamma.analytics.financial.model.option.pricing.tree.GapOptionFunctionProvider;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        d2 := @parameter2: double;

        d3 = virtualinvoke r0.<com.opengamma.analytics.financial.model.option.pricing.tree.GapOptionFunctionProvider: double getStrike()>();

        i0 = virtualinvoke r0.<com.opengamma.analytics.financial.model.option.pricing.tree.GapOptionFunctionProvider: int getNumberOfSteps()>();

        i1 = i0 + 1;

        d4 = virtualinvoke r0.<com.opengamma.analytics.financial.model.option.pricing.tree.GapOptionFunctionProvider: double getSign()>();

        r1 = newarray (double)[i1];

        $d5 = (double) i0;

        $d6 = staticinvoke <java.lang.Math: double pow(double,double)>(d1, $d5);

        d11 = d0 * $d6;

        i4 = 0;

     label1:
        if i4 >= i1 goto label4;

        $i3 = i4;

        $d7 = d11 - d3;

        $d8 = d4 * $d7;

        $b2 = $d8 cmpl 0.0;

        if $b2 <= 0 goto label2;

        $d9 = r0.<com.opengamma.analytics.financial.model.option.pricing.tree.GapOptionFunctionProvider: double _payoffStrike>;

        $d10 = d11 - $d9;

        $d12 = d4 * $d10;

        goto label3;

     label2:
        $d12 = 0.0;

     label3:
        r1[$i3] = $d12;

        d11 = d11 * d2;

        i4 = i4 + 1;

        goto label1;

     label4:
        return r1;
    }

    public double[] getPayoffAtExpiryTrinomial(double, double, double)
    {
        com.opengamma.analytics.financial.model.option.pricing.tree.GapOptionFunctionProvider r0;
        double d0, d1, d2, d3, d4, $d5, $d6, $d7, $d8, $d9, $d10, d11, $d12;
        int i0, i1, $i2, $i3, $i5, i6;
        double[] r1;
        byte $b4;

        r0 := @this: com.opengamma.analytics.financial.model.option.pricing.tree.GapOptionFunctionProvider;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        d2 := @parameter2: double;

        d3 = virtualinvoke r0.<com.opengamma.analytics.financial.model.option.pricing.tree.GapOptionFunctionProvider: double getStrike()>();

        i0 = virtualinvoke r0.<com.opengamma.analytics.financial.model.option.pricing.tree.GapOptionFunctionProvider: int getNumberOfSteps()>();

        $i2 = virtualinvoke r0.<com.opengamma.analytics.financial.model.option.pricing.tree.GapOptionFunctionProvider: int getNumberOfSteps()>();

        $i3 = 2 * $i2;

        i1 = $i3 + 1;

        d4 = virtualinvoke r0.<com.opengamma.analytics.financial.model.option.pricing.tree.GapOptionFunctionProvider: double getSign()>();

        r1 = newarray (double)[i1];

        $d5 = (double) i0;

        $d6 = staticinvoke <java.lang.Math: double pow(double,double)>(d1, $d5);

        d11 = d0 * $d6;

        i6 = 0;

     label1:
        if i6 >= i1 goto label4;

        $i5 = i6;

        $d7 = d11 - d3;

        $d8 = d4 * $d7;

        $b4 = $d8 cmpl 0.0;

        if $b4 <= 0 goto label2;

        $d9 = r0.<com.opengamma.analytics.financial.model.option.pricing.tree.GapOptionFunctionProvider: double _payoffStrike>;

        $d10 = d11 - $d9;

        $d12 = d4 * $d10;

        goto label3;

     label2:
        $d12 = 0.0;

     label3:
        r1[$i5] = $d12;

        d11 = d11 * d2;

        i6 = i6 + 1;

        goto label1;

     label4:
        return r1;
    }

    public double getStrikePayoff()
    {
        com.opengamma.analytics.financial.model.option.pricing.tree.GapOptionFunctionProvider r0;
        double $d0;

        r0 := @this: com.opengamma.analytics.financial.model.option.pricing.tree.GapOptionFunctionProvider;

        $d0 = r0.<com.opengamma.analytics.financial.model.option.pricing.tree.GapOptionFunctionProvider: double _payoffStrike>;

        return $d0;
    }

    public int hashCode()
    {
        com.opengamma.analytics.financial.model.option.pricing.tree.GapOptionFunctionProvider r0;
        long l1, $l2, $l3;
        double $d0;
        int $i4, $i5, i6, i7;

        r0 := @this: com.opengamma.analytics.financial.model.option.pricing.tree.GapOptionFunctionProvider;

        i6 = specialinvoke r0.<com.opengamma.analytics.financial.model.option.pricing.tree.OptionFunctionProvider1D: int hashCode()>();

        $d0 = r0.<com.opengamma.analytics.financial.model.option.pricing.tree.GapOptionFunctionProvider: double _payoffStrike>;

        l1 = staticinvoke <java.lang.Double: long doubleToLongBits(double)>($d0);

        $i5 = 31 * i6;

        $l2 = l1 >>> 32;

        $l3 = l1 ^ $l2;

        $i4 = (int) $l3;

        i7 = $i5 + $i4;

        return i7;
    }

    public boolean equals(java.lang.Object)
    {
        com.opengamma.analytics.financial.model.option.pricing.tree.GapOptionFunctionProvider r0, r2;
        java.lang.Object r1;
        boolean $z0, $z1;
        double $d0, $d1;
        long $l0, $l1;
        byte $b2;

        r0 := @this: com.opengamma.analytics.financial.model.option.pricing.tree.GapOptionFunctionProvider;

        r1 := @parameter0: java.lang.Object;

        if r0 != r1 goto label1;

        return 1;

     label1:
        $z0 = specialinvoke r0.<com.opengamma.analytics.financial.model.option.pricing.tree.OptionFunctionProvider1D: boolean equals(java.lang.Object)>(r1);

        if $z0 != 0 goto label2;

        return 0;

     label2:
        $z1 = r1 instanceof com.opengamma.analytics.financial.model.option.pricing.tree.GapOptionFunctionProvider;

        if $z1 != 0 goto label3;

        return 0;

     label3:
        r2 = (com.opengamma.analytics.financial.model.option.pricing.tree.GapOptionFunctionProvider) r1;

        $d0 = r0.<com.opengamma.analytics.financial.model.option.pricing.tree.GapOptionFunctionProvider: double _payoffStrike>;

        $l0 = staticinvoke <java.lang.Double: long doubleToLongBits(double)>($d0);

        $d1 = r2.<com.opengamma.analytics.financial.model.option.pricing.tree.GapOptionFunctionProvider: double _payoffStrike>;

        $l1 = staticinvoke <java.lang.Double: long doubleToLongBits(double)>($d1);

        $b2 = $l0 cmp $l1;

        if $b2 == 0 goto label4;

        return 0;

     label4:
        return 1;
    }
}
