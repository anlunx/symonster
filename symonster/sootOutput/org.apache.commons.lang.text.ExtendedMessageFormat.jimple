public class org.apache.commons.lang.text.ExtendedMessageFormat extends java.text.MessageFormat
{
    private static final long serialVersionUID;
    private static final int HASH_SEED;
    private static final java.lang.String DUMMY_PATTERN;
    private static final java.lang.String ESCAPED_QUOTE;
    private static final char START_FMT;
    private static final char END_FE;
    private static final char START_FE;
    private static final char QUOTE;
    private java.lang.String toPattern;
    private final java.util.Map registry;

    public void <init>(java.lang.String)
    {
        org.apache.commons.lang.text.ExtendedMessageFormat r0;
        java.lang.String r1;
        java.util.Locale $r2;

        r0 := @this: org.apache.commons.lang.text.ExtendedMessageFormat;

        r1 := @parameter0: java.lang.String;

        $r2 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>();

        specialinvoke r0.<org.apache.commons.lang.text.ExtendedMessageFormat: void <init>(java.lang.String,java.util.Locale)>(r1, $r2);

        return;
    }

    public void <init>(java.lang.String, java.util.Locale)
    {
        org.apache.commons.lang.text.ExtendedMessageFormat r0;
        java.lang.String r1;
        java.util.Locale r2;

        r0 := @this: org.apache.commons.lang.text.ExtendedMessageFormat;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.util.Locale;

        specialinvoke r0.<org.apache.commons.lang.text.ExtendedMessageFormat: void <init>(java.lang.String,java.util.Locale,java.util.Map)>(r1, r2, null);

        return;
    }

    public void <init>(java.lang.String, java.util.Map)
    {
        org.apache.commons.lang.text.ExtendedMessageFormat r0;
        java.lang.String r1;
        java.util.Map r2;
        java.util.Locale $r3;

        r0 := @this: org.apache.commons.lang.text.ExtendedMessageFormat;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.util.Map;

        $r3 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>();

        specialinvoke r0.<org.apache.commons.lang.text.ExtendedMessageFormat: void <init>(java.lang.String,java.util.Locale,java.util.Map)>(r1, $r3, r2);

        return;
    }

    public void <init>(java.lang.String, java.util.Locale, java.util.Map)
    {
        org.apache.commons.lang.text.ExtendedMessageFormat r0;
        java.lang.String r1;
        java.util.Locale r2;
        java.util.Map r3;

        r0 := @this: org.apache.commons.lang.text.ExtendedMessageFormat;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.util.Locale;

        r3 := @parameter2: java.util.Map;

        specialinvoke r0.<java.text.MessageFormat: void <init>(java.lang.String)>("");

        virtualinvoke r0.<org.apache.commons.lang.text.ExtendedMessageFormat: void setLocale(java.util.Locale)>(r2);

        r0.<org.apache.commons.lang.text.ExtendedMessageFormat: java.util.Map registry> = r3;

        virtualinvoke r0.<org.apache.commons.lang.text.ExtendedMessageFormat: void applyPattern(java.lang.String)>(r1);

        return;
    }

    public java.lang.String toPattern()
    {
        org.apache.commons.lang.text.ExtendedMessageFormat r0;
        java.lang.String $r1;

        r0 := @this: org.apache.commons.lang.text.ExtendedMessageFormat;

        $r1 = r0.<org.apache.commons.lang.text.ExtendedMessageFormat: java.lang.String toPattern>;

        return $r1;
    }

    public final void applyPattern(java.lang.String)
    {
        org.apache.commons.lang.text.ExtendedMessageFormat r0;
        java.lang.String r1, $r12, $r13, $r14, $r25, $r31, r33, $r34;
        char[] r6;
        java.util.Map $r7;
        java.util.ArrayList $r8, $r9;
        org.apache.commons.lang.text.StrBuilder $r10, $r17, $r28;
        int $i0, $i1, $i2, $i3, $i5, $i7, $i8, $i9, $i11, i13, i14, i15, i16;
        java.text.ParsePosition $r11, $r16, $r27;
        boolean $z0, $z1, $z4, $z5;
        java.lang.Object $r15;
        char $c4, $c6, $c10, $c12;
        java.lang.IllegalArgumentException $r21;
        java.lang.StringBuffer $r22, $r23, $r24;
        java.text.Format r32, r37;
        java.text.Format[] r35;
        java.util.Iterator r36;

        r0 := @this: org.apache.commons.lang.text.ExtendedMessageFormat;

        r1 := @parameter0: java.lang.String;

        $r7 = r0.<org.apache.commons.lang.text.ExtendedMessageFormat: java.util.Map registry>;

        if $r7 != null goto label01;

        specialinvoke r0.<java.text.MessageFormat: void applyPattern(java.lang.String)>(r1);

        $r31 = specialinvoke r0.<java.text.MessageFormat: java.lang.String toPattern()>();

        r0.<org.apache.commons.lang.text.ExtendedMessageFormat: java.lang.String toPattern> = $r31;

        return;

     label01:
        $r8 = new java.util.ArrayList;

        specialinvoke $r8.<java.util.ArrayList: void <init>()>();

        $r9 = new java.util.ArrayList;

        specialinvoke $r9.<java.util.ArrayList: void <init>()>();

        $r10 = new org.apache.commons.lang.text.StrBuilder;

        $i0 = virtualinvoke r1.<java.lang.String: int length()>();

        specialinvoke $r10.<org.apache.commons.lang.text.StrBuilder: void <init>(int)>($i0);

        $r11 = new java.text.ParsePosition;

        specialinvoke $r11.<java.text.ParsePosition: void <init>(int)>(0);

        r6 = virtualinvoke r1.<java.lang.String: char[] toCharArray()>();

        i13 = 0;

     label02:
        $i1 = virtualinvoke $r11.<java.text.ParsePosition: int getIndex()>();

        $i2 = virtualinvoke r1.<java.lang.String: int length()>();

        if $i1 >= $i2 goto label14;

        $i3 = virtualinvoke $r11.<java.text.ParsePosition: int getIndex()>();

        $c4 = r6[$i3];

        lookupswitch($c4)
        {
            case 39: goto label03;
            case 123: goto label04;
            default: goto label12;
        };

     label03:
        specialinvoke r0.<org.apache.commons.lang.text.ExtendedMessageFormat: org.apache.commons.lang.text.StrBuilder appendQuotedString(java.lang.String,java.text.ParsePosition,org.apache.commons.lang.text.StrBuilder,boolean)>(r1, $r11, $r10, 1);

        goto label13;

     label04:
        i13 = i13 + 1;

        specialinvoke r0.<org.apache.commons.lang.text.ExtendedMessageFormat: void seekNonWs(java.lang.String,java.text.ParsePosition)>(r1, $r11);

        i14 = virtualinvoke $r11.<java.text.ParsePosition: int getIndex()>();

        $r16 = specialinvoke r0.<org.apache.commons.lang.text.ExtendedMessageFormat: java.text.ParsePosition next(java.text.ParsePosition)>($r11);

        i15 = specialinvoke r0.<org.apache.commons.lang.text.ExtendedMessageFormat: int readArgumentIndex(java.lang.String,java.text.ParsePosition)>(r1, $r16);

        $r17 = virtualinvoke $r10.<org.apache.commons.lang.text.StrBuilder: org.apache.commons.lang.text.StrBuilder append(char)>(123);

        virtualinvoke $r17.<org.apache.commons.lang.text.StrBuilder: org.apache.commons.lang.text.StrBuilder append(int)>(i15);

        specialinvoke r0.<org.apache.commons.lang.text.ExtendedMessageFormat: void seekNonWs(java.lang.String,java.text.ParsePosition)>(r1, $r11);

        r32 = null;

        r33 = null;

        $i5 = virtualinvoke $r11.<java.text.ParsePosition: int getIndex()>();

        $c6 = r6[$i5];

        if $c6 != 44 goto label05;

        $r27 = specialinvoke r0.<org.apache.commons.lang.text.ExtendedMessageFormat: java.text.ParsePosition next(java.text.ParsePosition)>($r11);

        r33 = specialinvoke r0.<org.apache.commons.lang.text.ExtendedMessageFormat: java.lang.String parseFormatDescription(java.lang.String,java.text.ParsePosition)>(r1, $r27);

        r32 = specialinvoke r0.<org.apache.commons.lang.text.ExtendedMessageFormat: java.text.Format getFormat(java.lang.String)>(r33);

        if r32 != null goto label05;

        $r28 = virtualinvoke $r10.<org.apache.commons.lang.text.StrBuilder: org.apache.commons.lang.text.StrBuilder append(char)>(44);

        virtualinvoke $r28.<org.apache.commons.lang.text.StrBuilder: org.apache.commons.lang.text.StrBuilder append(java.lang.String)>(r33);

     label05:
        virtualinvoke $r8.<java.util.ArrayList: boolean add(java.lang.Object)>(r32);

        if r32 != null goto label06;

        $r34 = null;

        goto label07;

     label06:
        $r34 = r33;

     label07:
        virtualinvoke $r9.<java.util.ArrayList: boolean add(java.lang.Object)>($r34);

        $i7 = virtualinvoke $r8.<java.util.ArrayList: int size()>();

        if $i7 != i13 goto label08;

        $z4 = 1;

        goto label09;

     label08:
        $z4 = 0;

     label09:
        staticinvoke <org.apache.commons.lang.Validate: void isTrue(boolean)>($z4);

        $i8 = virtualinvoke $r9.<java.util.ArrayList: int size()>();

        if $i8 != i13 goto label10;

        $z5 = 1;

        goto label11;

     label10:
        $z5 = 0;

     label11:
        staticinvoke <org.apache.commons.lang.Validate: void isTrue(boolean)>($z5);

        $i9 = virtualinvoke $r11.<java.text.ParsePosition: int getIndex()>();

        $c10 = r6[$i9];

        if $c10 == 125 goto label12;

        $r21 = new java.lang.IllegalArgumentException;

        $r22 = new java.lang.StringBuffer;

        specialinvoke $r22.<java.lang.StringBuffer: void <init>()>();

        $r23 = virtualinvoke $r22.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Unreadable format element at position ");

        $r24 = virtualinvoke $r23.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(i14);

        $r25 = virtualinvoke $r24.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r21.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r25);

        throw $r21;

     label12:
        $i11 = virtualinvoke $r11.<java.text.ParsePosition: int getIndex()>();

        $c12 = r6[$i11];

        virtualinvoke $r10.<org.apache.commons.lang.text.StrBuilder: org.apache.commons.lang.text.StrBuilder append(char)>($c12);

        specialinvoke r0.<org.apache.commons.lang.text.ExtendedMessageFormat: java.text.ParsePosition next(java.text.ParsePosition)>($r11);

     label13:
        goto label02;

     label14:
        $r12 = virtualinvoke $r10.<org.apache.commons.lang.text.StrBuilder: java.lang.String toString()>();

        specialinvoke r0.<java.text.MessageFormat: void applyPattern(java.lang.String)>($r12);

        $r13 = specialinvoke r0.<java.text.MessageFormat: java.lang.String toPattern()>();

        $r14 = specialinvoke r0.<org.apache.commons.lang.text.ExtendedMessageFormat: java.lang.String insertFormats(java.lang.String,java.util.ArrayList)>($r13, $r9);

        r0.<org.apache.commons.lang.text.ExtendedMessageFormat: java.lang.String toPattern> = $r14;

        $z0 = specialinvoke r0.<org.apache.commons.lang.text.ExtendedMessageFormat: boolean containsElements(java.util.Collection)>($r8);

        if $z0 == 0 goto label18;

        r35 = virtualinvoke r0.<org.apache.commons.lang.text.ExtendedMessageFormat: java.text.Format[] getFormats()>();

        i16 = 0;

        r36 = virtualinvoke $r8.<java.util.ArrayList: java.util.Iterator iterator()>();

     label15:
        $z1 = interfaceinvoke r36.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label17;

        $r15 = interfaceinvoke r36.<java.util.Iterator: java.lang.Object next()>();

        r37 = (java.text.Format) $r15;

        if r37 == null goto label16;

        r35[i16] = r37;

     label16:
        i16 = i16 + 1;

        goto label15;

     label17:
        specialinvoke r0.<java.text.MessageFormat: void setFormats(java.text.Format[])>(r35);

     label18:
        return;
    }

    public void setFormat(int, java.text.Format)
    {
        org.apache.commons.lang.text.ExtendedMessageFormat r0;
        int i0;
        java.text.Format r1;
        java.lang.UnsupportedOperationException $r2;

        r0 := @this: org.apache.commons.lang.text.ExtendedMessageFormat;

        i0 := @parameter0: int;

        r1 := @parameter1: java.text.Format;

        $r2 = new java.lang.UnsupportedOperationException;

        specialinvoke $r2.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r2;
    }

    public void setFormatByArgumentIndex(int, java.text.Format)
    {
        org.apache.commons.lang.text.ExtendedMessageFormat r0;
        int i0;
        java.text.Format r1;
        java.lang.UnsupportedOperationException $r2;

        r0 := @this: org.apache.commons.lang.text.ExtendedMessageFormat;

        i0 := @parameter0: int;

        r1 := @parameter1: java.text.Format;

        $r2 = new java.lang.UnsupportedOperationException;

        specialinvoke $r2.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r2;
    }

    public void setFormats(java.text.Format[])
    {
        org.apache.commons.lang.text.ExtendedMessageFormat r0;
        java.text.Format[] r1;
        java.lang.UnsupportedOperationException $r2;

        r0 := @this: org.apache.commons.lang.text.ExtendedMessageFormat;

        r1 := @parameter0: java.text.Format[];

        $r2 = new java.lang.UnsupportedOperationException;

        specialinvoke $r2.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r2;
    }

    public void setFormatsByArgumentIndex(java.text.Format[])
    {
        org.apache.commons.lang.text.ExtendedMessageFormat r0;
        java.text.Format[] r1;
        java.lang.UnsupportedOperationException $r2;

        r0 := @this: org.apache.commons.lang.text.ExtendedMessageFormat;

        r1 := @parameter0: java.text.Format[];

        $r2 = new java.lang.UnsupportedOperationException;

        specialinvoke $r2.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r2;
    }

    public boolean equals(java.lang.Object)
    {
        org.apache.commons.lang.text.ExtendedMessageFormat r0, r2;
        java.lang.Object r1;
        boolean $z0, $z1, $z2, $z3;
        java.lang.Class $r3, $r4;
        java.lang.String $r5, $r6;
        java.util.Map $r7, $r8;

        r0 := @this: org.apache.commons.lang.text.ExtendedMessageFormat;

        r1 := @parameter0: java.lang.Object;

        if r1 != r0 goto label1;

        return 1;

     label1:
        if r1 != null goto label2;

        return 0;

     label2:
        $z0 = specialinvoke r0.<java.text.MessageFormat: boolean equals(java.lang.Object)>(r1);

        if $z0 != 0 goto label3;

        return 0;

     label3:
        $r3 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r4 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        $z1 = staticinvoke <org.apache.commons.lang.ObjectUtils: boolean notEqual(java.lang.Object,java.lang.Object)>($r3, $r4);

        if $z1 == 0 goto label4;

        return 0;

     label4:
        r2 = (org.apache.commons.lang.text.ExtendedMessageFormat) r1;

        $r6 = r0.<org.apache.commons.lang.text.ExtendedMessageFormat: java.lang.String toPattern>;

        $r5 = r2.<org.apache.commons.lang.text.ExtendedMessageFormat: java.lang.String toPattern>;

        $z2 = staticinvoke <org.apache.commons.lang.ObjectUtils: boolean notEqual(java.lang.Object,java.lang.Object)>($r6, $r5);

        if $z2 == 0 goto label5;

        return 0;

     label5:
        $r8 = r0.<org.apache.commons.lang.text.ExtendedMessageFormat: java.util.Map registry>;

        $r7 = r2.<org.apache.commons.lang.text.ExtendedMessageFormat: java.util.Map registry>;

        $z3 = staticinvoke <org.apache.commons.lang.ObjectUtils: boolean notEqual(java.lang.Object,java.lang.Object)>($r8, $r7);

        if $z3 == 0 goto label6;

        return 0;

     label6:
        return 1;
    }

    public int hashCode()
    {
        org.apache.commons.lang.text.ExtendedMessageFormat r0;
        java.util.Map $r1;
        int $i0, $i1, $i2, $i3, i4, i5, i6;
        java.lang.String $r2;

        r0 := @this: org.apache.commons.lang.text.ExtendedMessageFormat;

        i4 = specialinvoke r0.<java.text.MessageFormat: int hashCode()>();

        $i0 = 31 * i4;

        $r1 = r0.<org.apache.commons.lang.text.ExtendedMessageFormat: java.util.Map registry>;

        $i1 = staticinvoke <org.apache.commons.lang.ObjectUtils: int hashCode(java.lang.Object)>($r1);

        i5 = $i0 + $i1;

        $i2 = 31 * i5;

        $r2 = r0.<org.apache.commons.lang.text.ExtendedMessageFormat: java.lang.String toPattern>;

        $i3 = staticinvoke <org.apache.commons.lang.ObjectUtils: int hashCode(java.lang.Object)>($r2);

        i6 = $i2 + $i3;

        return i6;
    }

    private java.text.Format getFormat(java.lang.String)
    {
        org.apache.commons.lang.text.ExtendedMessageFormat r0;
        java.lang.String r1, $r8, $r9, r10, r11;
        int i0, $i1;
        org.apache.commons.lang.text.FormatFactory r2;
        java.util.Map $r3, $r4;
        java.lang.Object $r5;
        java.util.Locale $r6;
        java.text.Format $r7;

        r0 := @this: org.apache.commons.lang.text.ExtendedMessageFormat;

        r1 := @parameter0: java.lang.String;

        $r3 = r0.<org.apache.commons.lang.text.ExtendedMessageFormat: java.util.Map registry>;

        if $r3 == null goto label2;

        r10 = r1;

        r11 = null;

        i0 = virtualinvoke r1.<java.lang.String: int indexOf(int)>(44);

        if i0 <= 0 goto label1;

        $r8 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int,int)>(0, i0);

        r10 = virtualinvoke $r8.<java.lang.String: java.lang.String trim()>();

        $i1 = i0 + 1;

        $r9 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int)>($i1);

        r11 = virtualinvoke $r9.<java.lang.String: java.lang.String trim()>();

     label1:
        $r4 = r0.<org.apache.commons.lang.text.ExtendedMessageFormat: java.util.Map registry>;

        $r5 = interfaceinvoke $r4.<java.util.Map: java.lang.Object get(java.lang.Object)>(r10);

        r2 = (org.apache.commons.lang.text.FormatFactory) $r5;

        if r2 == null goto label2;

        $r6 = virtualinvoke r0.<org.apache.commons.lang.text.ExtendedMessageFormat: java.util.Locale getLocale()>();

        $r7 = interfaceinvoke r2.<org.apache.commons.lang.text.FormatFactory: java.text.Format getFormat(java.lang.String,java.lang.String,java.util.Locale)>(r10, r11, $r6);

        return $r7;

     label2:
        return null;
    }

    private int readArgumentIndex(java.lang.String, java.text.ParsePosition)
    {
        org.apache.commons.lang.text.ExtendedMessageFormat r0;
        java.lang.String r1, $r10, $r16, $r18, $r21;
        java.text.ParsePosition r2;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        org.apache.commons.lang.text.StrBuilder $r5;
        java.lang.IllegalArgumentException $r6, $r11;
        java.lang.StringBuffer $r7, $r8, $r9, $r12, $r13, $r14, $r15, $r17;
        boolean $z0, z1, $z2, $z3;
        java.lang.NumberFormatException $r22;
        char c8;

        r0 := @this: org.apache.commons.lang.text.ExtendedMessageFormat;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.text.ParsePosition;

        i0 = virtualinvoke r2.<java.text.ParsePosition: int getIndex()>();

        specialinvoke r0.<org.apache.commons.lang.text.ExtendedMessageFormat: void seekNonWs(java.lang.String,java.text.ParsePosition)>(r1, r2);

        $r5 = new org.apache.commons.lang.text.StrBuilder;

        specialinvoke $r5.<org.apache.commons.lang.text.StrBuilder: void <init>()>();

        z1 = 0;

     label01:
        if z1 != 0 goto label11;

        $i2 = virtualinvoke r2.<java.text.ParsePosition: int getIndex()>();

        $i3 = virtualinvoke r1.<java.lang.String: int length()>();

        if $i2 >= $i3 goto label11;

        $i4 = virtualinvoke r2.<java.text.ParsePosition: int getIndex()>();

        c8 = virtualinvoke r1.<java.lang.String: char charAt(int)>($i4);

        $z0 = staticinvoke <java.lang.Character: boolean isWhitespace(char)>(c8);

        if $z0 == 0 goto label02;

        specialinvoke r0.<org.apache.commons.lang.text.ExtendedMessageFormat: void seekNonWs(java.lang.String,java.text.ParsePosition)>(r1, r2);

        $i7 = virtualinvoke r2.<java.text.ParsePosition: int getIndex()>();

        c8 = virtualinvoke r1.<java.lang.String: char charAt(int)>($i7);

        if c8 == 44 goto label02;

        if c8 == 125 goto label02;

        z1 = 1;

        goto label10;

     label02:
        if c8 == 44 goto label03;

        if c8 != 125 goto label07;

     label03:
        $i5 = virtualinvoke $r5.<org.apache.commons.lang.text.StrBuilder: int length()>();

        if $i5 <= 0 goto label07;

     label04:
        $r21 = virtualinvoke $r5.<org.apache.commons.lang.text.StrBuilder: java.lang.String toString()>();

        $i6 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r21);

     label05:
        return $i6;

     label06:
        $r22 := @caughtexception;

     label07:
        $z2 = staticinvoke <java.lang.Character: boolean isDigit(char)>(c8);

        if $z2 != 0 goto label08;

        $z3 = 1;

        goto label09;

     label08:
        $z3 = 0;

     label09:
        z1 = $z3;

        virtualinvoke $r5.<org.apache.commons.lang.text.StrBuilder: org.apache.commons.lang.text.StrBuilder append(char)>(c8);

     label10:
        specialinvoke r0.<org.apache.commons.lang.text.ExtendedMessageFormat: java.text.ParsePosition next(java.text.ParsePosition)>(r2);

        goto label01;

     label11:
        if z1 == 0 goto label12;

        $r11 = new java.lang.IllegalArgumentException;

        $r12 = new java.lang.StringBuffer;

        specialinvoke $r12.<java.lang.StringBuffer: void <init>()>();

        $r13 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Invalid format argument index at position ");

        $r14 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(i0);

        $r15 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(": ");

        $i1 = virtualinvoke r2.<java.text.ParsePosition: int getIndex()>();

        $r16 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int,int)>(i0, $i1);

        $r17 = virtualinvoke $r15.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r16);

        $r18 = virtualinvoke $r17.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r11.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r18);

        throw $r11;

     label12:
        $r6 = new java.lang.IllegalArgumentException;

        $r7 = new java.lang.StringBuffer;

        specialinvoke $r7.<java.lang.StringBuffer: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Unterminated format element at position ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(i0);

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r10);

        throw $r6;

        catch java.lang.NumberFormatException from label04 to label05 with label06;
    }

    private java.lang.String parseFormatDescription(java.lang.String, java.text.ParsePosition)
    {
        org.apache.commons.lang.text.ExtendedMessageFormat r0;
        java.lang.String r1, $r7, $r9;
        java.text.ParsePosition r2;
        int i0, i1, $i2, $i3, $i4, $i6, i7;
        java.lang.IllegalArgumentException $r3;
        java.lang.StringBuffer $r4, $r5, $r6;
        char $c5;

        r0 := @this: org.apache.commons.lang.text.ExtendedMessageFormat;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.text.ParsePosition;

        i0 = virtualinvoke r2.<java.text.ParsePosition: int getIndex()>();

        specialinvoke r0.<org.apache.commons.lang.text.ExtendedMessageFormat: void seekNonWs(java.lang.String,java.text.ParsePosition)>(r1, r2);

        i1 = virtualinvoke r2.<java.text.ParsePosition: int getIndex()>();

        i7 = 1;

     label1:
        $i2 = virtualinvoke r2.<java.text.ParsePosition: int getIndex()>();

        $i3 = virtualinvoke r1.<java.lang.String: int length()>();

        if $i2 >= $i3 goto label6;

        $i4 = virtualinvoke r2.<java.text.ParsePosition: int getIndex()>();

        $c5 = virtualinvoke r1.<java.lang.String: char charAt(int)>($i4);

        lookupswitch($c5)
        {
            case 39: goto label4;
            case 123: goto label2;
            case 125: goto label3;
            default: goto label5;
        };

     label2:
        i7 = i7 + 1;

        goto label5;

     label3:
        i7 = i7 + -1;

        if i7 != 0 goto label5;

        $i6 = virtualinvoke r2.<java.text.ParsePosition: int getIndex()>();

        $r9 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int,int)>(i1, $i6);

        return $r9;

     label4:
        specialinvoke r0.<org.apache.commons.lang.text.ExtendedMessageFormat: void getQuotedString(java.lang.String,java.text.ParsePosition,boolean)>(r1, r2, 0);

     label5:
        specialinvoke r0.<org.apache.commons.lang.text.ExtendedMessageFormat: java.text.ParsePosition next(java.text.ParsePosition)>(r2);

        goto label1;

     label6:
        $r3 = new java.lang.IllegalArgumentException;

        $r4 = new java.lang.StringBuffer;

        specialinvoke $r4.<java.lang.StringBuffer: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Unterminated format element at position ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(i0);

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r7);

        throw $r3;
    }

    private java.lang.String insertFormats(java.lang.String, java.util.ArrayList)
    {
        org.apache.commons.lang.text.ExtendedMessageFormat r0;
        java.lang.String r1, r5, $r8;
        java.util.ArrayList r2;
        char c0;
        boolean $z0;
        org.apache.commons.lang.text.StrBuilder $r6, $r11, $r15;
        int $i1, $i2, $i3, $i4, $i5, $i6, i7, i8;
        java.text.ParsePosition $r7, $r12;
        java.lang.Object $r14;

        r0 := @this: org.apache.commons.lang.text.ExtendedMessageFormat;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.util.ArrayList;

        $z0 = specialinvoke r0.<org.apache.commons.lang.text.ExtendedMessageFormat: boolean containsElements(java.util.Collection)>(r2);

        if $z0 != 0 goto label1;

        return r1;

     label1:
        $r6 = new org.apache.commons.lang.text.StrBuilder;

        $i1 = virtualinvoke r1.<java.lang.String: int length()>();

        $i2 = $i1 * 2;

        specialinvoke $r6.<org.apache.commons.lang.text.StrBuilder: void <init>(int)>($i2);

        $r7 = new java.text.ParsePosition;

        specialinvoke $r7.<java.text.ParsePosition: void <init>(int)>(0);

        i7 = -1;

        i8 = 0;

     label2:
        $i3 = virtualinvoke $r7.<java.text.ParsePosition: int getIndex()>();

        $i4 = virtualinvoke r1.<java.lang.String: int length()>();

        if $i3 >= $i4 goto label9;

        $i5 = virtualinvoke $r7.<java.text.ParsePosition: int getIndex()>();

        c0 = virtualinvoke r1.<java.lang.String: char charAt(int)>($i5);

        lookupswitch(c0)
        {
            case 39: goto label3;
            case 123: goto label4;
            case 125: goto label6;
            default: goto label7;
        };

     label3:
        specialinvoke r0.<org.apache.commons.lang.text.ExtendedMessageFormat: org.apache.commons.lang.text.StrBuilder appendQuotedString(java.lang.String,java.text.ParsePosition,org.apache.commons.lang.text.StrBuilder,boolean)>(r1, $r7, $r6, 0);

        goto label8;

     label4:
        i8 = i8 + 1;

        if i8 != 1 goto label8;

        i7 = i7 + 1;

        $r11 = virtualinvoke $r6.<org.apache.commons.lang.text.StrBuilder: org.apache.commons.lang.text.StrBuilder append(char)>(123);

        $r12 = specialinvoke r0.<org.apache.commons.lang.text.ExtendedMessageFormat: java.text.ParsePosition next(java.text.ParsePosition)>($r7);

        $i6 = specialinvoke r0.<org.apache.commons.lang.text.ExtendedMessageFormat: int readArgumentIndex(java.lang.String,java.text.ParsePosition)>(r1, $r12);

        virtualinvoke $r11.<org.apache.commons.lang.text.StrBuilder: org.apache.commons.lang.text.StrBuilder append(int)>($i6);

        $r14 = virtualinvoke r2.<java.util.ArrayList: java.lang.Object get(int)>(i7);

        r5 = (java.lang.String) $r14;

        if r5 == null goto label5;

        $r15 = virtualinvoke $r6.<org.apache.commons.lang.text.StrBuilder: org.apache.commons.lang.text.StrBuilder append(char)>(44);

        virtualinvoke $r15.<org.apache.commons.lang.text.StrBuilder: org.apache.commons.lang.text.StrBuilder append(java.lang.String)>(r5);

     label5:
        goto label8;

     label6:
        i8 = i8 + -1;

     label7:
        virtualinvoke $r6.<org.apache.commons.lang.text.StrBuilder: org.apache.commons.lang.text.StrBuilder append(char)>(c0);

        specialinvoke r0.<org.apache.commons.lang.text.ExtendedMessageFormat: java.text.ParsePosition next(java.text.ParsePosition)>($r7);

     label8:
        goto label2;

     label9:
        $r8 = virtualinvoke $r6.<org.apache.commons.lang.text.StrBuilder: java.lang.String toString()>();

        return $r8;
    }

    private void seekNonWs(java.lang.String, java.text.ParsePosition)
    {
        org.apache.commons.lang.text.ExtendedMessageFormat r0;
        java.lang.String r1;
        java.text.ParsePosition r2;
        char[] r3;
        org.apache.commons.lang.text.StrMatcher $r4;
        int $i0, $i1, $i2, $i3, $i4, i5;

        r0 := @this: org.apache.commons.lang.text.ExtendedMessageFormat;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.text.ParsePosition;

        r3 = virtualinvoke r1.<java.lang.String: char[] toCharArray()>();

     label1:
        $r4 = staticinvoke <org.apache.commons.lang.text.StrMatcher: org.apache.commons.lang.text.StrMatcher splitMatcher()>();

        $i0 = virtualinvoke r2.<java.text.ParsePosition: int getIndex()>();

        i5 = virtualinvoke $r4.<org.apache.commons.lang.text.StrMatcher: int isMatch(char[],int)>(r3, $i0);

        $i1 = virtualinvoke r2.<java.text.ParsePosition: int getIndex()>();

        $i2 = $i1 + i5;

        virtualinvoke r2.<java.text.ParsePosition: void setIndex(int)>($i2);

        if i5 <= 0 goto label2;

        $i3 = virtualinvoke r2.<java.text.ParsePosition: int getIndex()>();

        $i4 = virtualinvoke r1.<java.lang.String: int length()>();

        if $i3 < $i4 goto label1;

     label2:
        return;
    }

    private java.text.ParsePosition next(java.text.ParsePosition)
    {
        org.apache.commons.lang.text.ExtendedMessageFormat r0;
        java.text.ParsePosition r1;
        int $i0, $i1;

        r0 := @this: org.apache.commons.lang.text.ExtendedMessageFormat;

        r1 := @parameter0: java.text.ParsePosition;

        $i0 = virtualinvoke r1.<java.text.ParsePosition: int getIndex()>();

        $i1 = $i0 + 1;

        virtualinvoke r1.<java.text.ParsePosition: void setIndex(int)>($i1);

        return r1;
    }

    private org.apache.commons.lang.text.StrBuilder appendQuotedString(java.lang.String, java.text.ParsePosition, org.apache.commons.lang.text.StrBuilder, boolean)
    {
        org.apache.commons.lang.text.ExtendedMessageFormat r0;
        java.lang.String r1, $r9, $r12, $r15;
        java.text.ParsePosition r2;
        org.apache.commons.lang.text.StrBuilder r3, $r13, $r17, $r18;
        boolean z0, $z1;
        int i0, $i1, $i3, $i4, $i5, $i6, $i7, $i8, i10, i11, $i12;
        char[] r4;
        java.lang.IllegalArgumentException $r5;
        java.lang.StringBuffer $r6, $r7, $r8;
        char $c2, $c9;

        r0 := @this: org.apache.commons.lang.text.ExtendedMessageFormat;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.text.ParsePosition;

        r3 := @parameter2: org.apache.commons.lang.text.StrBuilder;

        z0 := @parameter3: boolean;

        i0 = virtualinvoke r2.<java.text.ParsePosition: int getIndex()>();

        r4 = virtualinvoke r1.<java.lang.String: char[] toCharArray()>();

        if z0 == 0 goto label03;

        $c9 = r4[i0];

        if $c9 != 39 goto label03;

        specialinvoke r0.<org.apache.commons.lang.text.ExtendedMessageFormat: java.text.ParsePosition next(java.text.ParsePosition)>(r2);

        if r3 != null goto label01;

        $r17 = null;

        goto label02;

     label01:
        $r17 = virtualinvoke r3.<org.apache.commons.lang.text.StrBuilder: org.apache.commons.lang.text.StrBuilder append(char)>(39);

     label02:
        return $r17;

     label03:
        i10 = i0;

        i11 = virtualinvoke r2.<java.text.ParsePosition: int getIndex()>();

     label04:
        $i12 = virtualinvoke r1.<java.lang.String: int length()>();

        if i11 >= $i12 goto label11;

        if z0 == 0 goto label05;

        $r12 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int)>(i11);

        $z1 = virtualinvoke $r12.<java.lang.String: boolean startsWith(java.lang.String)>("\'\'");

        if $z1 == 0 goto label05;

        $i5 = virtualinvoke r2.<java.text.ParsePosition: int getIndex()>();

        $i6 = $i5 - i10;

        $r13 = virtualinvoke r3.<org.apache.commons.lang.text.StrBuilder: org.apache.commons.lang.text.StrBuilder append(char[],int,int)>(r4, i10, $i6);

        virtualinvoke $r13.<org.apache.commons.lang.text.StrBuilder: org.apache.commons.lang.text.StrBuilder append(char)>(39);

        $r15 = "\'\'";

        $i7 = virtualinvoke $r15.<java.lang.String: int length()>();

        $i8 = i11 + $i7;

        virtualinvoke r2.<java.text.ParsePosition: void setIndex(int)>($i8);

        i10 = virtualinvoke r2.<java.text.ParsePosition: int getIndex()>();

        goto label10;

     label05:
        $i1 = virtualinvoke r2.<java.text.ParsePosition: int getIndex()>();

        $c2 = r4[$i1];

        lookupswitch($c2)
        {
            case 39: goto label06;
            default: goto label09;
        };

     label06:
        specialinvoke r0.<org.apache.commons.lang.text.ExtendedMessageFormat: java.text.ParsePosition next(java.text.ParsePosition)>(r2);

        if r3 != null goto label07;

        $r18 = null;

        goto label08;

     label07:
        $i3 = virtualinvoke r2.<java.text.ParsePosition: int getIndex()>();

        $i4 = $i3 - i10;

        $r18 = virtualinvoke r3.<org.apache.commons.lang.text.StrBuilder: org.apache.commons.lang.text.StrBuilder append(char[],int,int)>(r4, i10, $i4);

     label08:
        return $r18;

     label09:
        specialinvoke r0.<org.apache.commons.lang.text.ExtendedMessageFormat: java.text.ParsePosition next(java.text.ParsePosition)>(r2);

     label10:
        i11 = i11 + 1;

        goto label04;

     label11:
        $r5 = new java.lang.IllegalArgumentException;

        $r6 = new java.lang.StringBuffer;

        specialinvoke $r6.<java.lang.StringBuffer: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Unterminated quoted string at position ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(i0);

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r9);

        throw $r5;
    }

    private void getQuotedString(java.lang.String, java.text.ParsePosition, boolean)
    {
        org.apache.commons.lang.text.ExtendedMessageFormat r0;
        java.lang.String r1;
        java.text.ParsePosition r2;
        boolean z0;

        r0 := @this: org.apache.commons.lang.text.ExtendedMessageFormat;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.text.ParsePosition;

        z0 := @parameter2: boolean;

        specialinvoke r0.<org.apache.commons.lang.text.ExtendedMessageFormat: org.apache.commons.lang.text.StrBuilder appendQuotedString(java.lang.String,java.text.ParsePosition,org.apache.commons.lang.text.StrBuilder,boolean)>(r1, r2, null, z0);

        return;
    }

    private boolean containsElements(java.util.Collection)
    {
        org.apache.commons.lang.text.ExtendedMessageFormat r0;
        java.util.Collection r1;
        java.util.Iterator r2;
        int $i0;
        boolean $z0;
        java.lang.Object $r3;

        r0 := @this: org.apache.commons.lang.text.ExtendedMessageFormat;

        r1 := @parameter0: java.util.Collection;

        if r1 == null goto label1;

        $i0 = interfaceinvoke r1.<java.util.Collection: int size()>();

        if $i0 != 0 goto label2;

     label1:
        return 0;

     label2:
        r2 = interfaceinvoke r1.<java.util.Collection: java.util.Iterator iterator()>();

     label3:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r3 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        if $r3 == null goto label3;

        return 1;

     label4:
        return 0;
    }

    public static void <clinit>()
    {
        <org.apache.commons.lang.text.ExtendedMessageFormat: char QUOTE> = 39;

        <org.apache.commons.lang.text.ExtendedMessageFormat: char START_FE> = 123;

        <org.apache.commons.lang.text.ExtendedMessageFormat: char END_FE> = 125;

        <org.apache.commons.lang.text.ExtendedMessageFormat: char START_FMT> = 44;

        <org.apache.commons.lang.text.ExtendedMessageFormat: java.lang.String ESCAPED_QUOTE> = "\'\'";

        <org.apache.commons.lang.text.ExtendedMessageFormat: java.lang.String DUMMY_PATTERN> = "";

        <org.apache.commons.lang.text.ExtendedMessageFormat: int HASH_SEED> = 31;

        <org.apache.commons.lang.text.ExtendedMessageFormat: long serialVersionUID> = -2362048321261811743L;

        return;
    }
}
