public final class com.opengamma.analytics.financial.interestrate.annuity.ZSpreadCalculator extends java.lang.Object
{
    private static final com.opengamma.analytics.financial.interestrate.PresentValueCalculator PRESENT_VALUE_CALCULATOR;
    private static final com.opengamma.analytics.financial.interestrate.PresentValueCurveSensitivityCalculator PV_SENSITIVITY_CALCULATOR;
    private static final com.opengamma.analytics.math.rootfinding.BracketRoot ROOT_BRACKETER;
    private static final com.opengamma.analytics.math.rootfinding.RealSingleRootFinder ROOT_FINDER;
    private static final com.opengamma.analytics.financial.interestrate.annuity.ZSpreadCalculator CALCULATOR;

    private void <init>()
    {
        com.opengamma.analytics.financial.interestrate.annuity.ZSpreadCalculator r0;

        r0 := @this: com.opengamma.analytics.financial.interestrate.annuity.ZSpreadCalculator;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static com.opengamma.analytics.financial.interestrate.annuity.ZSpreadCalculator getInstance()
    {
        com.opengamma.analytics.financial.interestrate.annuity.ZSpreadCalculator $r0;

        $r0 = <com.opengamma.analytics.financial.interestrate.annuity.ZSpreadCalculator: com.opengamma.analytics.financial.interestrate.annuity.ZSpreadCalculator CALCULATOR>;

        return $r0;
    }

    public double calculateZSpread(com.opengamma.analytics.financial.interestrate.annuity.derivative.Annuity, com.opengamma.analytics.financial.interestrate.YieldCurveBundle, double)
    {
        com.opengamma.analytics.financial.interestrate.annuity.ZSpreadCalculator r0;
        com.opengamma.analytics.financial.interestrate.annuity.derivative.Annuity r1;
        com.opengamma.analytics.financial.interestrate.YieldCurveBundle r2;
        double d0, $d1, $d2, $d3;
        double[] r4;
        com.opengamma.analytics.financial.interestrate.annuity.ZSpreadCalculator$1 $r7;
        com.opengamma.analytics.math.rootfinding.BracketRoot $r8;
        com.opengamma.analytics.math.rootfinding.RealSingleRootFinder $r9;
        java.lang.Double $r10, $r11, $r12;

        r0 := @this: com.opengamma.analytics.financial.interestrate.annuity.ZSpreadCalculator;

        r1 := @parameter0: com.opengamma.analytics.financial.interestrate.annuity.derivative.Annuity;

        r2 := @parameter1: com.opengamma.analytics.financial.interestrate.YieldCurveBundle;

        d0 := @parameter2: double;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "annuity");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, "curves");

        $r7 = new com.opengamma.analytics.financial.interestrate.annuity.ZSpreadCalculator$1;

        specialinvoke $r7.<com.opengamma.analytics.financial.interestrate.annuity.ZSpreadCalculator$1: void <init>(com.opengamma.analytics.financial.interestrate.annuity.ZSpreadCalculator,com.opengamma.analytics.financial.interestrate.annuity.derivative.Annuity,com.opengamma.analytics.financial.interestrate.YieldCurveBundle,double)>(r0, r1, r2, d0);

        $r8 = <com.opengamma.analytics.financial.interestrate.annuity.ZSpreadCalculator: com.opengamma.analytics.math.rootfinding.BracketRoot ROOT_BRACKETER>;

        r4 = virtualinvoke $r8.<com.opengamma.analytics.math.rootfinding.BracketRoot: double[] getBracketedPoints(com.opengamma.analytics.math.function.Function1D,double,double)>($r7, 0.0, 1.2);

        $r9 = <com.opengamma.analytics.financial.interestrate.annuity.ZSpreadCalculator: com.opengamma.analytics.math.rootfinding.RealSingleRootFinder ROOT_FINDER>;

        $d1 = r4[0];

        $r10 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d1);

        $d2 = r4[1];

        $r11 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d2);

        $r12 = virtualinvoke $r9.<com.opengamma.analytics.math.rootfinding.RealSingleRootFinder: java.lang.Double getRoot(com.opengamma.analytics.math.function.Function1D,java.lang.Double,java.lang.Double)>($r7, $r10, $r11);

        $d3 = virtualinvoke $r12.<java.lang.Double: double doubleValue()>();

        return $d3;
    }

    public double calculatePriceForZSpread(com.opengamma.analytics.financial.interestrate.annuity.derivative.Annuity, com.opengamma.analytics.financial.interestrate.YieldCurveBundle, double)
    {
        com.opengamma.analytics.financial.interestrate.annuity.ZSpreadCalculator r0;
        com.opengamma.analytics.financial.interestrate.annuity.derivative.Annuity r1;
        com.opengamma.analytics.financial.interestrate.YieldCurveBundle r2;
        double d0, d1, $d2, $d3, $d4, $d5, $d6, d7;
        int i0, i1;
        com.opengamma.analytics.financial.interestrate.payments.derivative.Payment r3;
        com.opengamma.analytics.financial.interestrate.PresentValueCalculator $r6;
        java.lang.Object $r7;
        java.lang.Double $r8;

        r0 := @this: com.opengamma.analytics.financial.interestrate.annuity.ZSpreadCalculator;

        r1 := @parameter0: com.opengamma.analytics.financial.interestrate.annuity.derivative.Annuity;

        r2 := @parameter1: com.opengamma.analytics.financial.interestrate.YieldCurveBundle;

        d0 := @parameter2: double;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "annuity");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, "curves");

        d7 = 0.0;

        i0 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.annuity.derivative.Annuity: int getNumberOfPayments()>();

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        r3 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.annuity.derivative.Annuity: com.opengamma.analytics.financial.interestrate.payments.derivative.Payment getNthPayment(int)>(i1);

        $r6 = <com.opengamma.analytics.financial.interestrate.annuity.ZSpreadCalculator: com.opengamma.analytics.financial.interestrate.PresentValueCalculator PRESENT_VALUE_CALCULATOR>;

        $r7 = virtualinvoke r3.<com.opengamma.analytics.financial.interestrate.payments.derivative.Payment: java.lang.Object accept(com.opengamma.analytics.financial.interestrate.InstrumentDerivativeVisitor,java.lang.Object)>($r6, r2);

        $r8 = (java.lang.Double) $r7;

        d1 = virtualinvoke $r8.<java.lang.Double: double doubleValue()>();

        $d2 = neg d0;

        $d3 = virtualinvoke r3.<com.opengamma.analytics.financial.interestrate.payments.derivative.Payment: double getPaymentTime()>();

        $d4 = $d2 * $d3;

        $d5 = staticinvoke <java.lang.Math: double exp(double)>($d4);

        $d6 = d1 * $d5;

        d7 = d7 + $d6;

        i1 = i1 + 1;

        goto label1;

     label2:
        return d7;
    }

    public double calculatePriceSensitivityToZSpread(com.opengamma.analytics.financial.interestrate.annuity.derivative.Annuity, com.opengamma.analytics.financial.interestrate.YieldCurveBundle, double)
    {
        com.opengamma.analytics.financial.interestrate.annuity.ZSpreadCalculator r0;
        com.opengamma.analytics.financial.interestrate.annuity.derivative.Annuity r1;
        com.opengamma.analytics.financial.interestrate.YieldCurveBundle r2;
        double d0, d1, d2, $d3, $d4, $d5, $d6, $d7, d8;
        int i0, i1;
        com.opengamma.analytics.financial.interestrate.payments.derivative.Payment r3;
        com.opengamma.analytics.financial.interestrate.PresentValueCalculator $r6;
        java.lang.Object $r7;
        java.lang.Double $r8;

        r0 := @this: com.opengamma.analytics.financial.interestrate.annuity.ZSpreadCalculator;

        r1 := @parameter0: com.opengamma.analytics.financial.interestrate.annuity.derivative.Annuity;

        r2 := @parameter1: com.opengamma.analytics.financial.interestrate.YieldCurveBundle;

        d0 := @parameter2: double;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "annuity");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, "curves");

        d8 = 0.0;

        i0 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.annuity.derivative.Annuity: int getNumberOfPayments()>();

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        r3 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.annuity.derivative.Annuity: com.opengamma.analytics.financial.interestrate.payments.derivative.Payment getNthPayment(int)>(i1);

        $r6 = <com.opengamma.analytics.financial.interestrate.annuity.ZSpreadCalculator: com.opengamma.analytics.financial.interestrate.PresentValueCalculator PRESENT_VALUE_CALCULATOR>;

        $r7 = virtualinvoke r3.<com.opengamma.analytics.financial.interestrate.payments.derivative.Payment: java.lang.Object accept(com.opengamma.analytics.financial.interestrate.InstrumentDerivativeVisitor,java.lang.Object)>($r6, r2);

        $r8 = (java.lang.Double) $r7;

        d1 = virtualinvoke $r8.<java.lang.Double: double doubleValue()>();

        d2 = virtualinvoke r3.<com.opengamma.analytics.financial.interestrate.payments.derivative.Payment: double getPaymentTime()>();

        $d5 = d2 * d1;

        $d3 = neg d0;

        $d4 = $d3 * d2;

        $d6 = staticinvoke <java.lang.Math: double exp(double)>($d4);

        $d7 = $d5 * $d6;

        d8 = d8 - $d7;

        i1 = i1 + 1;

        goto label1;

     label2:
        return d8;
    }

    public java.util.Map calculatePriceSensitivityToCurve(com.opengamma.analytics.financial.interestrate.annuity.derivative.Annuity, com.opengamma.analytics.financial.interestrate.YieldCurveBundle, double)
    {
        com.opengamma.analytics.financial.interestrate.annuity.ZSpreadCalculator r0;
        com.opengamma.analytics.financial.interestrate.annuity.derivative.Annuity r1;
        com.opengamma.analytics.financial.interestrate.YieldCurveBundle r2;
        double d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7;
        java.util.Map r3;
        java.util.Iterator r5, r9;
        java.util.Map$Entry r6;
        java.util.List r7;
        com.opengamma.util.tuple.DoublesPair r10, r11;
        com.opengamma.analytics.financial.interestrate.PresentValueCurveSensitivityCalculator $r14;
        java.lang.Object $r15, $r18, $r19, $r21, $r23;
        long $l0;
        byte $b1;
        java.util.HashMap $r16;
        java.util.Set $r17;
        boolean $z0, $z1;
        java.util.ArrayList $r20;
        int $i2;

        r0 := @this: com.opengamma.analytics.financial.interestrate.annuity.ZSpreadCalculator;

        r1 := @parameter0: com.opengamma.analytics.financial.interestrate.annuity.derivative.Annuity;

        r2 := @parameter1: com.opengamma.analytics.financial.interestrate.YieldCurveBundle;

        d0 := @parameter2: double;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "annuity");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, "curves");

        $r14 = <com.opengamma.analytics.financial.interestrate.annuity.ZSpreadCalculator: com.opengamma.analytics.financial.interestrate.PresentValueCurveSensitivityCalculator PV_SENSITIVITY_CALCULATOR>;

        $r15 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.annuity.derivative.Annuity: java.lang.Object accept(com.opengamma.analytics.financial.interestrate.InstrumentDerivativeVisitor,java.lang.Object)>($r14, r2);

        r3 = (java.util.Map) $r15;

        $l0 = staticinvoke <java.lang.Double: long doubleToLongBits(double)>(d0);

        $b1 = $l0 cmp 0L;

        if $b1 != 0 goto label1;

        return r3;

     label1:
        $r16 = new java.util.HashMap;

        specialinvoke $r16.<java.util.HashMap: void <init>()>();

        $r17 = interfaceinvoke r3.<java.util.Map: java.util.Set entrySet()>();

        r5 = interfaceinvoke $r17.<java.util.Set: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $r18 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>();

        r6 = (java.util.Map$Entry) $r18;

        $r19 = interfaceinvoke r6.<java.util.Map$Entry: java.lang.Object getValue()>();

        r7 = (java.util.List) $r19;

        $r20 = new java.util.ArrayList;

        $i2 = interfaceinvoke r7.<java.util.List: int size()>();

        specialinvoke $r20.<java.util.ArrayList: void <init>(int)>($i2);

        r9 = interfaceinvoke r7.<java.util.List: java.util.Iterator iterator()>();

     label3:
        $z1 = interfaceinvoke r9.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label4;

        $r23 = interfaceinvoke r9.<java.util.Iterator: java.lang.Object next()>();

        r10 = (com.opengamma.util.tuple.DoublesPair) $r23;

        $d4 = r10.<com.opengamma.util.tuple.DoublesPair: double first>;

        $d5 = r10.<com.opengamma.util.tuple.DoublesPair: double second>;

        $d2 = neg d0;

        $d1 = r10.<com.opengamma.util.tuple.DoublesPair: double first>;

        $d3 = $d2 * $d1;

        $d6 = staticinvoke <java.lang.Math: double exp(double)>($d3);

        $d7 = $d5 * $d6;

        r11 = staticinvoke <com.opengamma.util.tuple.DoublesPair: com.opengamma.util.tuple.DoublesPair of(double,double)>($d4, $d7);

        virtualinvoke $r20.<java.util.ArrayList: boolean add(java.lang.Object)>(r11);

        goto label3;

     label4:
        $r21 = interfaceinvoke r6.<java.util.Map$Entry: java.lang.Object getKey()>();

        interfaceinvoke $r16.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r21, $r20);

        goto label2;

     label5:
        return $r16;
    }

    public java.util.Map calculateZSpreadSensitivityToCurve(com.opengamma.analytics.financial.interestrate.annuity.derivative.Annuity, com.opengamma.analytics.financial.interestrate.YieldCurveBundle, double)
    {
        com.opengamma.analytics.financial.interestrate.annuity.ZSpreadCalculator r0;
        com.opengamma.analytics.financial.interestrate.annuity.derivative.Annuity r1;
        com.opengamma.analytics.financial.interestrate.YieldCurveBundle r2;
        double d0, d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10;
        java.util.Map r3;
        java.util.Iterator r5, r9;
        java.util.Map$Entry r6;
        java.util.List r7;
        com.opengamma.util.tuple.DoublesPair r10, r11;
        long $l0;
        byte $b1;
        com.opengamma.analytics.financial.interestrate.PresentValueCurveSensitivityCalculator $r14;
        java.lang.Object $r15, $r18, $r19, $r21, $r23;
        java.util.HashMap $r16;
        java.util.Set $r17;
        java.util.ArrayList $r20;
        int $i2;
        boolean $z0, $z2, $z3;

        r0 := @this: com.opengamma.analytics.financial.interestrate.annuity.ZSpreadCalculator;

        r1 := @parameter0: com.opengamma.analytics.financial.interestrate.annuity.derivative.Annuity;

        r2 := @parameter1: com.opengamma.analytics.financial.interestrate.YieldCurveBundle;

        d0 := @parameter2: double;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "annuity");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, "curves");

        d1 = virtualinvoke r0.<com.opengamma.analytics.financial.interestrate.annuity.ZSpreadCalculator: double calculatePriceSensitivityToZSpread(com.opengamma.analytics.financial.interestrate.annuity.derivative.Annuity,com.opengamma.analytics.financial.interestrate.YieldCurveBundle,double)>(r1, r2, d0);

        $l0 = staticinvoke <java.lang.Double: long doubleToLongBits(double)>(d1);

        $b1 = $l0 cmp 0L;

        if $b1 == 0 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z2, "Price Sensitivity To ZSpread is zero");

        $r14 = <com.opengamma.analytics.financial.interestrate.annuity.ZSpreadCalculator: com.opengamma.analytics.financial.interestrate.PresentValueCurveSensitivityCalculator PV_SENSITIVITY_CALCULATOR>;

        $r15 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.annuity.derivative.Annuity: java.lang.Object accept(com.opengamma.analytics.financial.interestrate.InstrumentDerivativeVisitor,java.lang.Object)>($r14, r2);

        r3 = (java.util.Map) $r15;

        $r16 = new java.util.HashMap;

        specialinvoke $r16.<java.util.HashMap: void <init>()>();

        $r17 = interfaceinvoke r3.<java.util.Map: java.util.Set entrySet()>();

        r5 = interfaceinvoke $r17.<java.util.Set: java.util.Iterator iterator()>();

     label3:
        $z3 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label6;

        $r18 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>();

        r6 = (java.util.Map$Entry) $r18;

        $r19 = interfaceinvoke r6.<java.util.Map$Entry: java.lang.Object getValue()>();

        r7 = (java.util.List) $r19;

        $r20 = new java.util.ArrayList;

        $i2 = interfaceinvoke r7.<java.util.List: int size()>();

        specialinvoke $r20.<java.util.ArrayList: void <init>(int)>($i2);

        r9 = interfaceinvoke r7.<java.util.List: java.util.Iterator iterator()>();

     label4:
        $z0 = interfaceinvoke r9.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $r23 = interfaceinvoke r9.<java.util.Iterator: java.lang.Object next()>();

        r10 = (com.opengamma.util.tuple.DoublesPair) $r23;

        $d6 = r10.<com.opengamma.util.tuple.DoublesPair: double first>;

        $d2 = r10.<com.opengamma.util.tuple.DoublesPair: double second>;

        $d7 = neg $d2;

        $d4 = neg d0;

        $d3 = r10.<com.opengamma.util.tuple.DoublesPair: double first>;

        $d5 = $d4 * $d3;

        $d8 = staticinvoke <java.lang.Math: double exp(double)>($d5);

        $d9 = $d7 * $d8;

        $d10 = $d9 / d1;

        r11 = staticinvoke <com.opengamma.util.tuple.DoublesPair: com.opengamma.util.tuple.DoublesPair of(double,double)>($d6, $d10);

        virtualinvoke $r20.<java.util.ArrayList: boolean add(java.lang.Object)>(r11);

        goto label4;

     label5:
        $r21 = interfaceinvoke r6.<java.util.Map$Entry: java.lang.Object getKey()>();

        interfaceinvoke $r16.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r21, $r20);

        goto label3;

     label6:
        return $r16;
    }

    static void <clinit>()
    {
        com.opengamma.analytics.financial.interestrate.PresentValueCalculator $r0;
        com.opengamma.analytics.financial.interestrate.PresentValueCurveSensitivityCalculator $r1;
        com.opengamma.analytics.math.rootfinding.BracketRoot $r2;
        com.opengamma.analytics.math.rootfinding.BrentSingleRootFinder $r3;
        com.opengamma.analytics.financial.interestrate.annuity.ZSpreadCalculator $r4;

        $r0 = staticinvoke <com.opengamma.analytics.financial.interestrate.PresentValueCalculator: com.opengamma.analytics.financial.interestrate.PresentValueCalculator getInstance()>();

        <com.opengamma.analytics.financial.interestrate.annuity.ZSpreadCalculator: com.opengamma.analytics.financial.interestrate.PresentValueCalculator PRESENT_VALUE_CALCULATOR> = $r0;

        $r1 = staticinvoke <com.opengamma.analytics.financial.interestrate.PresentValueCurveSensitivityCalculator: com.opengamma.analytics.financial.interestrate.PresentValueCurveSensitivityCalculator getInstance()>();

        <com.opengamma.analytics.financial.interestrate.annuity.ZSpreadCalculator: com.opengamma.analytics.financial.interestrate.PresentValueCurveSensitivityCalculator PV_SENSITIVITY_CALCULATOR> = $r1;

        $r2 = new com.opengamma.analytics.math.rootfinding.BracketRoot;

        specialinvoke $r2.<com.opengamma.analytics.math.rootfinding.BracketRoot: void <init>()>();

        <com.opengamma.analytics.financial.interestrate.annuity.ZSpreadCalculator: com.opengamma.analytics.math.rootfinding.BracketRoot ROOT_BRACKETER> = $r2;

        $r3 = new com.opengamma.analytics.math.rootfinding.BrentSingleRootFinder;

        specialinvoke $r3.<com.opengamma.analytics.math.rootfinding.BrentSingleRootFinder: void <init>()>();

        <com.opengamma.analytics.financial.interestrate.annuity.ZSpreadCalculator: com.opengamma.analytics.math.rootfinding.RealSingleRootFinder ROOT_FINDER> = $r3;

        $r4 = new com.opengamma.analytics.financial.interestrate.annuity.ZSpreadCalculator;

        specialinvoke $r4.<com.opengamma.analytics.financial.interestrate.annuity.ZSpreadCalculator: void <init>()>();

        <com.opengamma.analytics.financial.interestrate.annuity.ZSpreadCalculator: com.opengamma.analytics.financial.interestrate.annuity.ZSpreadCalculator CALCULATOR> = $r4;

        return;
    }
}
