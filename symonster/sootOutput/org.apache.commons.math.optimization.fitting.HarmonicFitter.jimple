public class org.apache.commons.math.optimization.fitting.HarmonicFitter extends java.lang.Object
{
    private final org.apache.commons.math.optimization.fitting.CurveFitter fitter;
    private double[] parameters;

    public void <init>(org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer)
    {
        org.apache.commons.math.optimization.fitting.HarmonicFitter r0;
        org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer r1;
        org.apache.commons.math.optimization.fitting.CurveFitter $r2;

        r0 := @this: org.apache.commons.math.optimization.fitting.HarmonicFitter;

        r1 := @parameter0: org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new org.apache.commons.math.optimization.fitting.CurveFitter;

        specialinvoke $r2.<org.apache.commons.math.optimization.fitting.CurveFitter: void <init>(org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer)>(r1);

        r0.<org.apache.commons.math.optimization.fitting.HarmonicFitter: org.apache.commons.math.optimization.fitting.CurveFitter fitter> = $r2;

        r0.<org.apache.commons.math.optimization.fitting.HarmonicFitter: double[] parameters> = null;

        return;
    }

    public void <init>(org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer, double[])
    {
        org.apache.commons.math.optimization.fitting.HarmonicFitter r0;
        org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer r1;
        double[] r2, $r5;
        org.apache.commons.math.optimization.fitting.CurveFitter $r3;
        java.lang.Object $r4;

        r0 := @this: org.apache.commons.math.optimization.fitting.HarmonicFitter;

        r1 := @parameter0: org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer;

        r2 := @parameter1: double[];

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r3 = new org.apache.commons.math.optimization.fitting.CurveFitter;

        specialinvoke $r3.<org.apache.commons.math.optimization.fitting.CurveFitter: void <init>(org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer)>(r1);

        r0.<org.apache.commons.math.optimization.fitting.HarmonicFitter: org.apache.commons.math.optimization.fitting.CurveFitter fitter> = $r3;

        $r4 = virtualinvoke r2.<java.lang.Object: java.lang.Object clone()>();

        $r5 = (double[]) $r4;

        r0.<org.apache.commons.math.optimization.fitting.HarmonicFitter: double[] parameters> = $r5;

        return;
    }

    public void addObservedPoint(double, double, double)
    {
        org.apache.commons.math.optimization.fitting.HarmonicFitter r0;
        double d0, d1, d2;
        org.apache.commons.math.optimization.fitting.CurveFitter $r1;

        r0 := @this: org.apache.commons.math.optimization.fitting.HarmonicFitter;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        d2 := @parameter2: double;

        $r1 = r0.<org.apache.commons.math.optimization.fitting.HarmonicFitter: org.apache.commons.math.optimization.fitting.CurveFitter fitter>;

        virtualinvoke $r1.<org.apache.commons.math.optimization.fitting.CurveFitter: void addObservedPoint(double,double,double)>(d0, d1, d2);

        return;
    }

    public org.apache.commons.math.optimization.fitting.HarmonicFunction fit() throws org.apache.commons.math.optimization.OptimizationException
    {
        org.apache.commons.math.optimization.fitting.HarmonicFitter r0;
        double[] $r2, $r5, $r9, r18;
        org.apache.commons.math.optimization.fitting.HarmonicFitter$ParametricHarmonicFunction $r3;
        org.apache.commons.math.optimization.fitting.CurveFitter $r4, $r7;
        org.apache.commons.math.optimization.fitting.HarmonicFunction $r6;
        double $d0, $d1, $d2, $d3, $d4, $d5;
        int $i0, $i1;
        org.apache.commons.math.optimization.fitting.HarmonicCoefficientsGuesser $r8;
        org.apache.commons.math.optimization.OptimizationException $r10;
        java.lang.Object[] $r11;
        org.apache.commons.math.exception.util.LocalizedFormats $r12;
        java.lang.Integer $r13, $r14;
        org.apache.commons.math.FunctionEvaluationException $r15;
        java.lang.RuntimeException $r16;
        org.apache.commons.math.optimization.fitting.WeightedObservedPoint[] r17;

        r0 := @this: org.apache.commons.math.optimization.fitting.HarmonicFitter;

        $r2 = r0.<org.apache.commons.math.optimization.fitting.HarmonicFitter: double[] parameters>;

        if $r2 != null goto label2;

        $r7 = r0.<org.apache.commons.math.optimization.fitting.HarmonicFitter: org.apache.commons.math.optimization.fitting.CurveFitter fitter>;

        r17 = virtualinvoke $r7.<org.apache.commons.math.optimization.fitting.CurveFitter: org.apache.commons.math.optimization.fitting.WeightedObservedPoint[] getObservations()>();

        $i0 = lengthof r17;

        if $i0 >= 4 goto label1;

        $r10 = new org.apache.commons.math.optimization.OptimizationException;

        $r12 = <org.apache.commons.math.exception.util.LocalizedFormats: org.apache.commons.math.exception.util.LocalizedFormats INSUFFICIENT_OBSERVED_POINTS_IN_SAMPLE>;

        $r11 = newarray (java.lang.Object)[2];

        $i1 = lengthof r17;

        $r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $r11[0] = $r13;

        $r14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(4);

        $r11[1] = $r14;

        specialinvoke $r10.<org.apache.commons.math.optimization.OptimizationException: void <init>(org.apache.commons.math.exception.util.Localizable,java.lang.Object[])>($r12, $r11);

        throw $r10;

     label1:
        $r8 = new org.apache.commons.math.optimization.fitting.HarmonicCoefficientsGuesser;

        specialinvoke $r8.<org.apache.commons.math.optimization.fitting.HarmonicCoefficientsGuesser: void <init>(org.apache.commons.math.optimization.fitting.WeightedObservedPoint[])>(r17);

        virtualinvoke $r8.<org.apache.commons.math.optimization.fitting.HarmonicCoefficientsGuesser: void guess()>();

        $r9 = newarray (double)[3];

        $d3 = virtualinvoke $r8.<org.apache.commons.math.optimization.fitting.HarmonicCoefficientsGuesser: double getGuessedAmplitude()>();

        $r9[0] = $d3;

        $d4 = virtualinvoke $r8.<org.apache.commons.math.optimization.fitting.HarmonicCoefficientsGuesser: double getGuessedPulsation()>();

        $r9[1] = $d4;

        $d5 = virtualinvoke $r8.<org.apache.commons.math.optimization.fitting.HarmonicCoefficientsGuesser: double getGuessedPhase()>();

        $r9[2] = $d5;

        r0.<org.apache.commons.math.optimization.fitting.HarmonicFitter: double[] parameters> = $r9;

     label2:
        $r4 = r0.<org.apache.commons.math.optimization.fitting.HarmonicFitter: org.apache.commons.math.optimization.fitting.CurveFitter fitter>;

        $r3 = new org.apache.commons.math.optimization.fitting.HarmonicFitter$ParametricHarmonicFunction;

        specialinvoke $r3.<org.apache.commons.math.optimization.fitting.HarmonicFitter$ParametricHarmonicFunction: void <init>(org.apache.commons.math.optimization.fitting.HarmonicFitter$1)>(null);

        $r5 = r0.<org.apache.commons.math.optimization.fitting.HarmonicFitter: double[] parameters>;

        r18 = virtualinvoke $r4.<org.apache.commons.math.optimization.fitting.CurveFitter: double[] fit(org.apache.commons.math.optimization.fitting.ParametricRealFunction,double[])>($r3, $r5);

        $r6 = new org.apache.commons.math.optimization.fitting.HarmonicFunction;

        $d2 = r18[0];

        $d1 = r18[1];

        $d0 = r18[2];

        specialinvoke $r6.<org.apache.commons.math.optimization.fitting.HarmonicFunction: void <init>(double,double,double)>($d2, $d1, $d0);

     label3:
        return $r6;

     label4:
        $r15 := @caughtexception;

        $r16 = new java.lang.RuntimeException;

        specialinvoke $r16.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r15);

        throw $r16;

        catch org.apache.commons.math.FunctionEvaluationException from label2 to label3 with label4;
    }
}
