public abstract class com.opengamma.analytics.financial.covariance.CovarianceCalculator extends java.lang.Object implements com.opengamma.analytics.math.function.Function
{

    public void <init>()
    {
        com.opengamma.analytics.financial.covariance.CovarianceCalculator r0;

        r0 := @this: com.opengamma.analytics.financial.covariance.CovarianceCalculator;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    protected void testTimeSeries(com.opengamma.timeseries.DoubleTimeSeries, com.opengamma.timeseries.DoubleTimeSeries)
    {
        com.opengamma.analytics.financial.covariance.CovarianceCalculator r0;
        com.opengamma.timeseries.DoubleTimeSeries r1, r2;

        r0 := @this: com.opengamma.analytics.financial.covariance.CovarianceCalculator;

        r1 := @parameter0: com.opengamma.timeseries.DoubleTimeSeries;

        r2 := @parameter1: com.opengamma.timeseries.DoubleTimeSeries;

        staticinvoke <com.opengamma.analytics.financial.timeseries.util.TimeSeriesDataTestUtils: void testTimeSeriesSize(com.opengamma.timeseries.DoubleTimeSeries,int)>(r1, 2);

        staticinvoke <com.opengamma.analytics.financial.timeseries.util.TimeSeriesDataTestUtils: void testTimeSeriesSize(com.opengamma.timeseries.DoubleTimeSeries,int)>(r2, 2);

        staticinvoke <com.opengamma.analytics.financial.timeseries.util.TimeSeriesDataTestUtils: void testTimeSeriesDates(com.opengamma.timeseries.DoubleTimeSeries,com.opengamma.timeseries.DoubleTimeSeries)>(r1, r2);

        return;
    }
}
