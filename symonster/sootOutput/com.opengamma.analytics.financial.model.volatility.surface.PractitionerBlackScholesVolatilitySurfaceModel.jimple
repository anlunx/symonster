public class com.opengamma.analytics.financial.model.volatility.surface.PractitionerBlackScholesVolatilitySurfaceModel extends java.lang.Object implements com.opengamma.analytics.financial.model.volatility.surface.VolatilitySurfaceModel
{
    private static final org.slf4j.Logger s_logger;
    private final com.opengamma.analytics.financial.model.volatility.surface.VolatilitySurfaceModel _bsmVolatilityModel;
    private static final int DEGREE;
    private final com.opengamma.analytics.math.regression.LeastSquaresRegression _regression;
    private static final java.lang.Double[] EMPTY_ARRAY;
    private final com.opengamma.analytics.math.function.Function _independentVariableFunction;

    public void <init>()
    {
        com.opengamma.analytics.financial.model.volatility.surface.PractitionerBlackScholesVolatilitySurfaceModel r0;
        com.opengamma.analytics.financial.model.volatility.surface.BlackScholesMertonImpliedVolatilitySurfaceModel $r1;
        com.opengamma.analytics.financial.model.volatility.surface.PractitionerBlackScholesVolatilitySurfaceModel$1 $r2;
        com.opengamma.analytics.math.regression.OrdinaryLeastSquaresRegression $r3;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.surface.PractitionerBlackScholesVolatilitySurfaceModel;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new com.opengamma.analytics.financial.model.volatility.surface.BlackScholesMertonImpliedVolatilitySurfaceModel;

        specialinvoke $r1.<com.opengamma.analytics.financial.model.volatility.surface.BlackScholesMertonImpliedVolatilitySurfaceModel: void <init>()>();

        r0.<com.opengamma.analytics.financial.model.volatility.surface.PractitionerBlackScholesVolatilitySurfaceModel: com.opengamma.analytics.financial.model.volatility.surface.VolatilitySurfaceModel _bsmVolatilityModel> = $r1;

        $r2 = new com.opengamma.analytics.financial.model.volatility.surface.PractitionerBlackScholesVolatilitySurfaceModel$1;

        specialinvoke $r2.<com.opengamma.analytics.financial.model.volatility.surface.PractitionerBlackScholesVolatilitySurfaceModel$1: void <init>(com.opengamma.analytics.financial.model.volatility.surface.PractitionerBlackScholesVolatilitySurfaceModel)>(r0);

        r0.<com.opengamma.analytics.financial.model.volatility.surface.PractitionerBlackScholesVolatilitySurfaceModel: com.opengamma.analytics.math.function.Function _independentVariableFunction> = $r2;

        $r3 = new com.opengamma.analytics.math.regression.OrdinaryLeastSquaresRegression;

        specialinvoke $r3.<com.opengamma.analytics.math.regression.OrdinaryLeastSquaresRegression: void <init>()>();

        r0.<com.opengamma.analytics.financial.model.volatility.surface.PractitionerBlackScholesVolatilitySurfaceModel: com.opengamma.analytics.math.regression.LeastSquaresRegression _regression> = $r3;

        return;
    }

    public com.opengamma.analytics.financial.model.volatility.surface.VolatilitySurface getSurface(java.util.Map, com.opengamma.analytics.financial.model.option.definition.StandardOptionDataBundle)
    {
        com.opengamma.analytics.financial.model.volatility.surface.PractitionerBlackScholesVolatilitySurfaceModel r0;
        java.util.Map r1, $r36;
        com.opengamma.analytics.financial.model.option.definition.StandardOptionDataBundle r2;
        double d0, d1, d2;
        java.util.Iterator r6;
        java.util.Map$Entry r7;
        int $i0, $i1;
        java.util.ArrayList $r9, $r10, $r11;
        java.util.Set $r12;
        boolean $z0;
        com.opengamma.analytics.financial.model.volatility.surface.VolatilitySurface $r13, $r37;
        com.opengamma.analytics.financial.model.volatility.surface.PractitionerBlackScholesVolatilitySurfaceModel$MySurfaceFunction $r14;
        java.lang.Double[] $r15, $r17, $r18, $r20, $r21, $r23;
        java.lang.Object[] $r16, $r19, $r22;
        com.opengamma.analytics.math.regression.LeastSquaresRegressionResult $r24;
        com.opengamma.analytics.math.surface.FunctionalDoublesSurface $r25;
        java.lang.Object $r26, $r27, $r30, $r34, $r35, $r54;
        com.opengamma.analytics.financial.model.option.definition.OptionDefinition $r28, $r31;
        java.lang.Double $r29, $r39, $r40, $r41, $r42;
        org.threeten.bp.ZonedDateTime $r32;
        com.opengamma.analytics.financial.model.volatility.surface.VolatilitySurfaceModel $r33;
        com.opengamma.util.tuple.DoublesPair $r38;
        java.lang.IllegalArgumentException $r43;
        java.lang.StringBuilder $r44, $r45, $r46, $r47, $r48, $r51, $r53, $r55, $r56;
        java.lang.String $r49, $r57;
        java.lang.Exception $r50;
        org.slf4j.Logger $r52;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.surface.PractitionerBlackScholesVolatilitySurfaceModel;

        r1 := @parameter0: java.util.Map;

        r2 := @parameter1: com.opengamma.analytics.financial.model.option.definition.StandardOptionDataBundle;

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object,java.lang.String)>(r1, "prices");

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object,java.lang.String)>(r2, "data");

        $i0 = interfaceinvoke r1.<java.util.Map: int size()>();

        if $i0 >= 5 goto label1;

        $r43 = new java.lang.IllegalArgumentException;

        $r44 = new java.lang.StringBuilder;

        specialinvoke $r44.<java.lang.StringBuilder: void <init>()>();

        $r45 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Price map contained ");

        $i1 = interfaceinvoke r1.<java.util.Map: int size()>();

        $r46 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r47 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" data point(s); need at least ");

        $r48 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(5);

        $r49 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r43.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r49);

        throw $r43;

     label1:
        $r9 = new java.util.ArrayList;

        specialinvoke $r9.<java.util.ArrayList: void <init>()>();

        $r10 = new java.util.ArrayList;

        specialinvoke $r10.<java.util.ArrayList: void <init>()>();

        $r11 = new java.util.ArrayList;

        specialinvoke $r11.<java.util.ArrayList: void <init>()>();

        $r12 = interfaceinvoke r1.<java.util.Map: java.util.Set entrySet()>();

        r6 = interfaceinvoke $r12.<java.util.Set: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label7;

        $r26 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>();

        r7 = (java.util.Map$Entry) $r26;

        $r27 = interfaceinvoke r7.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r28 = (com.opengamma.analytics.financial.model.option.definition.OptionDefinition) $r27;

        $r29 = virtualinvoke $r28.<com.opengamma.analytics.financial.model.option.definition.OptionDefinition: java.lang.Double getStrike()>();

        d0 = virtualinvoke $r29.<java.lang.Double: double doubleValue()>();

        $r30 = interfaceinvoke r7.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r31 = (com.opengamma.analytics.financial.model.option.definition.OptionDefinition) $r30;

        $r32 = virtualinvoke r2.<com.opengamma.analytics.financial.model.option.definition.StandardOptionDataBundle: org.threeten.bp.ZonedDateTime getDate()>();

        d1 = virtualinvoke $r31.<com.opengamma.analytics.financial.model.option.definition.OptionDefinition: double getTimeToExpiry(org.threeten.bp.ZonedDateTime)>($r32);

     label3:
        $r33 = r0.<com.opengamma.analytics.financial.model.volatility.surface.PractitionerBlackScholesVolatilitySurfaceModel: com.opengamma.analytics.financial.model.volatility.surface.VolatilitySurfaceModel _bsmVolatilityModel>;

        $r34 = interfaceinvoke r7.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r35 = interfaceinvoke r7.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r36 = staticinvoke <java.util.Collections: java.util.Map singletonMap(java.lang.Object,java.lang.Object)>($r34, $r35);

        $r37 = interfaceinvoke $r33.<com.opengamma.analytics.financial.model.volatility.surface.VolatilitySurfaceModel: com.opengamma.analytics.financial.model.volatility.surface.VolatilitySurface getSurface(java.lang.Object,java.lang.Object)>($r36, r2);

        $r38 = staticinvoke <com.opengamma.util.tuple.DoublesPair: com.opengamma.util.tuple.DoublesPair of(double,double)>(d1, d0);

        $r39 = virtualinvoke $r37.<com.opengamma.analytics.financial.model.volatility.surface.VolatilitySurface: java.lang.Double getVolatility(com.opengamma.util.tuple.DoublesPair)>($r38);

        d2 = virtualinvoke $r39.<java.lang.Double: double doubleValue()>();

        $r40 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d0);

        interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>($r40);

        $r41 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d1);

        interfaceinvoke $r10.<java.util.List: boolean add(java.lang.Object)>($r41);

        $r42 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d2);

        interfaceinvoke $r11.<java.util.List: boolean add(java.lang.Object)>($r42);

     label4:
        goto label6;

     label5:
        $r50 := @caughtexception;

        $r52 = <com.opengamma.analytics.financial.model.volatility.surface.PractitionerBlackScholesVolatilitySurfaceModel: org.slf4j.Logger s_logger>;

        $r51 = new java.lang.StringBuilder;

        specialinvoke $r51.<java.lang.StringBuilder: void <init>()>();

        $r53 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Problem getting BSM volatility for ");

        $r54 = interfaceinvoke r7.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r55 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r54);

        $r56 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", not using this option in regression. Error was: ");

        $r57 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r52.<org.slf4j.Logger: void info(java.lang.String,java.lang.Throwable)>($r57, $r50);

     label6:
        goto label2;

     label7:
        $r13 = new com.opengamma.analytics.financial.model.volatility.surface.VolatilitySurface;

        $r14 = new com.opengamma.analytics.financial.model.volatility.surface.PractitionerBlackScholesVolatilitySurfaceModel$MySurfaceFunction;

        $r15 = <com.opengamma.analytics.financial.model.volatility.surface.PractitionerBlackScholesVolatilitySurfaceModel: java.lang.Double[] EMPTY_ARRAY>;

        $r16 = interfaceinvoke $r9.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r15);

        $r18 = (java.lang.Double[]) $r16;

        $r17 = <com.opengamma.analytics.financial.model.volatility.surface.PractitionerBlackScholesVolatilitySurfaceModel: java.lang.Double[] EMPTY_ARRAY>;

        $r19 = interfaceinvoke $r10.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r17);

        $r21 = (java.lang.Double[]) $r19;

        $r20 = <com.opengamma.analytics.financial.model.volatility.surface.PractitionerBlackScholesVolatilitySurfaceModel: java.lang.Double[] EMPTY_ARRAY>;

        $r22 = interfaceinvoke $r11.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r20);

        $r23 = (java.lang.Double[]) $r22;

        $r24 = specialinvoke r0.<com.opengamma.analytics.financial.model.volatility.surface.PractitionerBlackScholesVolatilitySurfaceModel: com.opengamma.analytics.math.regression.LeastSquaresRegressionResult getRegressionResult(java.lang.Double[],java.lang.Double[],java.lang.Double[])>($r18, $r21, $r23);

        specialinvoke $r14.<com.opengamma.analytics.financial.model.volatility.surface.PractitionerBlackScholesVolatilitySurfaceModel$MySurfaceFunction: void <init>(com.opengamma.analytics.financial.model.volatility.surface.PractitionerBlackScholesVolatilitySurfaceModel,com.opengamma.analytics.math.regression.LeastSquaresRegressionResult)>(r0, $r24);

        $r25 = staticinvoke <com.opengamma.analytics.math.surface.FunctionalDoublesSurface: com.opengamma.analytics.math.surface.FunctionalDoublesSurface 'from'(com.opengamma.analytics.math.function.Function)>($r14);

        specialinvoke $r13.<com.opengamma.analytics.financial.model.volatility.surface.VolatilitySurface: void <init>(com.opengamma.analytics.math.surface.Surface)>($r25);

        return $r13;

        catch java.lang.Exception from label3 to label4 with label5;
    }

    private com.opengamma.analytics.math.regression.LeastSquaresRegressionResult getRegressionResult(java.lang.Double[], java.lang.Double[], java.lang.Double[])
    {
        com.opengamma.analytics.financial.model.volatility.surface.PractitionerBlackScholesVolatilitySurfaceModel r0;
        java.lang.Double[] r1, r2, r3, $r12;
        int i0, $i1, i2;
        double[][] r4, $r9;
        double[] r5, $r15;
        java.lang.Double r6, r7, r8;
        com.opengamma.analytics.math.regression.LeastSquaresRegression $r10;
        com.opengamma.analytics.math.regression.LeastSquaresRegressionResult $r11;
        com.opengamma.analytics.math.function.Function $r13;
        java.lang.Object $r14;
        double $d0;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.surface.PractitionerBlackScholesVolatilitySurfaceModel;

        r1 := @parameter0: java.lang.Double[];

        r2 := @parameter1: java.lang.Double[];

        r3 := @parameter2: java.lang.Double[];

        i0 = lengthof r1;

        r4 = newmultiarray (double)[i0][5];

        r5 = newarray (double)[i0];

        i2 = 0;

     label1:
        $i1 = lengthof r1;

        if i2 >= $i1 goto label2;

        r6 = r1[i2];

        r7 = r2[i2];

        r8 = r3[i2];

        $r13 = r0.<com.opengamma.analytics.financial.model.volatility.surface.PractitionerBlackScholesVolatilitySurfaceModel: com.opengamma.analytics.math.function.Function _independentVariableFunction>;

        $r12 = newarray (java.lang.Double)[2];

        $r12[0] = r7;

        $r12[1] = r6;

        $r14 = interfaceinvoke $r13.<com.opengamma.analytics.math.function.Function: java.lang.Object evaluate(java.lang.Object[])>($r12);

        $r15 = (double[]) $r14;

        r4[i2] = $r15;

        $d0 = virtualinvoke r8.<java.lang.Double: double doubleValue()>();

        r5[i2] = $d0;

        i2 = i2 + 1;

        goto label1;

     label2:
        $r10 = r0.<com.opengamma.analytics.financial.model.volatility.surface.PractitionerBlackScholesVolatilitySurfaceModel: com.opengamma.analytics.math.regression.LeastSquaresRegression _regression>;

        $r9 = (double[][]) null;

        $r11 = virtualinvoke $r10.<com.opengamma.analytics.math.regression.LeastSquaresRegression: com.opengamma.analytics.math.regression.LeastSquaresRegressionResult regress(double[][],double[][],double[],boolean)>(r4, $r9, r5, 1);

        return $r11;
    }

    public volatile com.opengamma.analytics.financial.model.volatility.surface.VolatilitySurface getSurface(java.lang.Object, java.lang.Object)
    {
        com.opengamma.analytics.financial.model.volatility.surface.PractitionerBlackScholesVolatilitySurfaceModel r0;
        java.lang.Object r1, r2;
        com.opengamma.analytics.financial.model.option.definition.StandardOptionDataBundle $r3;
        java.util.Map $r4;
        com.opengamma.analytics.financial.model.volatility.surface.VolatilitySurface $r5;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.surface.PractitionerBlackScholesVolatilitySurfaceModel;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r4 = (java.util.Map) r1;

        $r3 = (com.opengamma.analytics.financial.model.option.definition.StandardOptionDataBundle) r2;

        $r5 = virtualinvoke r0.<com.opengamma.analytics.financial.model.volatility.surface.PractitionerBlackScholesVolatilitySurfaceModel: com.opengamma.analytics.financial.model.volatility.surface.VolatilitySurface getSurface(java.util.Map,com.opengamma.analytics.financial.model.option.definition.StandardOptionDataBundle)>($r4, $r3);

        return $r5;
    }

    static com.opengamma.analytics.math.function.Function access$000(com.opengamma.analytics.financial.model.volatility.surface.PractitionerBlackScholesVolatilitySurfaceModel)
    {
        com.opengamma.analytics.financial.model.volatility.surface.PractitionerBlackScholesVolatilitySurfaceModel r0;
        com.opengamma.analytics.math.function.Function $r1;

        r0 := @parameter0: com.opengamma.analytics.financial.model.volatility.surface.PractitionerBlackScholesVolatilitySurfaceModel;

        $r1 = r0.<com.opengamma.analytics.financial.model.volatility.surface.PractitionerBlackScholesVolatilitySurfaceModel: com.opengamma.analytics.math.function.Function _independentVariableFunction>;

        return $r1;
    }

    static void <clinit>()
    {
        org.slf4j.Logger $r0;
        java.lang.Double[] $r1;

        <com.opengamma.analytics.financial.model.volatility.surface.PractitionerBlackScholesVolatilitySurfaceModel: int DEGREE> = 5;

        $r0 = staticinvoke <org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>(class "com/opengamma/analytics/financial/model/volatility/surface/PractitionerBlackScholesVolatilitySurfaceModel");

        <com.opengamma.analytics.financial.model.volatility.surface.PractitionerBlackScholesVolatilitySurfaceModel: org.slf4j.Logger s_logger> = $r0;

        $r1 = newarray (java.lang.Double)[0];

        <com.opengamma.analytics.financial.model.volatility.surface.PractitionerBlackScholesVolatilitySurfaceModel: java.lang.Double[] EMPTY_ARRAY> = $r1;

        return;
    }
}
