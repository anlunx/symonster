public class org.apache.commons.math3.filter.DefaultProcessModel extends java.lang.Object implements org.apache.commons.math3.filter.ProcessModel
{
    private org.apache.commons.math3.linear.RealMatrix stateTransitionMatrix;
    private org.apache.commons.math3.linear.RealMatrix controlMatrix;
    private org.apache.commons.math3.linear.RealMatrix processNoiseCovMatrix;
    private org.apache.commons.math3.linear.RealVector initialStateEstimateVector;
    private org.apache.commons.math3.linear.RealMatrix initialErrorCovMatrix;

    public void <init>(double[][], double[][], double[][], double[], double[][]) throws org.apache.commons.math3.exception.NullArgumentException, org.apache.commons.math3.exception.NoDataException, org.apache.commons.math3.exception.DimensionMismatchException
    {
        org.apache.commons.math3.filter.DefaultProcessModel r0;
        double[][] r1, r2, r3, r5;
        double[] r4;
        org.apache.commons.math3.linear.Array2DRowRealMatrix $r6, $r7, $r8, $r10;
        org.apache.commons.math3.linear.ArrayRealVector $r9;

        r0 := @this: org.apache.commons.math3.filter.DefaultProcessModel;

        r1 := @parameter0: double[][];

        r2 := @parameter1: double[][];

        r3 := @parameter2: double[][];

        r4 := @parameter3: double[];

        r5 := @parameter4: double[][];

        $r6 = new org.apache.commons.math3.linear.Array2DRowRealMatrix;

        specialinvoke $r6.<org.apache.commons.math3.linear.Array2DRowRealMatrix: void <init>(double[][])>(r1);

        $r7 = new org.apache.commons.math3.linear.Array2DRowRealMatrix;

        specialinvoke $r7.<org.apache.commons.math3.linear.Array2DRowRealMatrix: void <init>(double[][])>(r2);

        $r8 = new org.apache.commons.math3.linear.Array2DRowRealMatrix;

        specialinvoke $r8.<org.apache.commons.math3.linear.Array2DRowRealMatrix: void <init>(double[][])>(r3);

        $r9 = new org.apache.commons.math3.linear.ArrayRealVector;

        specialinvoke $r9.<org.apache.commons.math3.linear.ArrayRealVector: void <init>(double[])>(r4);

        $r10 = new org.apache.commons.math3.linear.Array2DRowRealMatrix;

        specialinvoke $r10.<org.apache.commons.math3.linear.Array2DRowRealMatrix: void <init>(double[][])>(r5);

        specialinvoke r0.<org.apache.commons.math3.filter.DefaultProcessModel: void <init>(org.apache.commons.math3.linear.RealMatrix,org.apache.commons.math3.linear.RealMatrix,org.apache.commons.math3.linear.RealMatrix,org.apache.commons.math3.linear.RealVector,org.apache.commons.math3.linear.RealMatrix)>($r6, $r7, $r8, $r9, $r10);

        return;
    }

    public void <init>(double[][], double[][], double[][]) throws org.apache.commons.math3.exception.NullArgumentException, org.apache.commons.math3.exception.NoDataException, org.apache.commons.math3.exception.DimensionMismatchException
    {
        org.apache.commons.math3.filter.DefaultProcessModel r0;
        double[][] r1, r2, r3;
        org.apache.commons.math3.linear.Array2DRowRealMatrix $r4, $r5, $r6;

        r0 := @this: org.apache.commons.math3.filter.DefaultProcessModel;

        r1 := @parameter0: double[][];

        r2 := @parameter1: double[][];

        r3 := @parameter2: double[][];

        $r4 = new org.apache.commons.math3.linear.Array2DRowRealMatrix;

        specialinvoke $r4.<org.apache.commons.math3.linear.Array2DRowRealMatrix: void <init>(double[][])>(r1);

        $r5 = new org.apache.commons.math3.linear.Array2DRowRealMatrix;

        specialinvoke $r5.<org.apache.commons.math3.linear.Array2DRowRealMatrix: void <init>(double[][])>(r2);

        $r6 = new org.apache.commons.math3.linear.Array2DRowRealMatrix;

        specialinvoke $r6.<org.apache.commons.math3.linear.Array2DRowRealMatrix: void <init>(double[][])>(r3);

        specialinvoke r0.<org.apache.commons.math3.filter.DefaultProcessModel: void <init>(org.apache.commons.math3.linear.RealMatrix,org.apache.commons.math3.linear.RealMatrix,org.apache.commons.math3.linear.RealMatrix,org.apache.commons.math3.linear.RealVector,org.apache.commons.math3.linear.RealMatrix)>($r4, $r5, $r6, null, null);

        return;
    }

    public void <init>(org.apache.commons.math3.linear.RealMatrix, org.apache.commons.math3.linear.RealMatrix, org.apache.commons.math3.linear.RealMatrix, org.apache.commons.math3.linear.RealVector, org.apache.commons.math3.linear.RealMatrix)
    {
        org.apache.commons.math3.filter.DefaultProcessModel r0;
        org.apache.commons.math3.linear.RealMatrix r1, r2, r3, r5;
        org.apache.commons.math3.linear.RealVector r4;

        r0 := @this: org.apache.commons.math3.filter.DefaultProcessModel;

        r1 := @parameter0: org.apache.commons.math3.linear.RealMatrix;

        r2 := @parameter1: org.apache.commons.math3.linear.RealMatrix;

        r3 := @parameter2: org.apache.commons.math3.linear.RealMatrix;

        r4 := @parameter3: org.apache.commons.math3.linear.RealVector;

        r5 := @parameter4: org.apache.commons.math3.linear.RealMatrix;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.commons.math3.filter.DefaultProcessModel: org.apache.commons.math3.linear.RealMatrix stateTransitionMatrix> = r1;

        r0.<org.apache.commons.math3.filter.DefaultProcessModel: org.apache.commons.math3.linear.RealMatrix controlMatrix> = r2;

        r0.<org.apache.commons.math3.filter.DefaultProcessModel: org.apache.commons.math3.linear.RealMatrix processNoiseCovMatrix> = r3;

        r0.<org.apache.commons.math3.filter.DefaultProcessModel: org.apache.commons.math3.linear.RealVector initialStateEstimateVector> = r4;

        r0.<org.apache.commons.math3.filter.DefaultProcessModel: org.apache.commons.math3.linear.RealMatrix initialErrorCovMatrix> = r5;

        return;
    }

    public org.apache.commons.math3.linear.RealMatrix getStateTransitionMatrix()
    {
        org.apache.commons.math3.filter.DefaultProcessModel r0;
        org.apache.commons.math3.linear.RealMatrix $r1;

        r0 := @this: org.apache.commons.math3.filter.DefaultProcessModel;

        $r1 = r0.<org.apache.commons.math3.filter.DefaultProcessModel: org.apache.commons.math3.linear.RealMatrix stateTransitionMatrix>;

        return $r1;
    }

    public org.apache.commons.math3.linear.RealMatrix getControlMatrix()
    {
        org.apache.commons.math3.filter.DefaultProcessModel r0;
        org.apache.commons.math3.linear.RealMatrix $r1;

        r0 := @this: org.apache.commons.math3.filter.DefaultProcessModel;

        $r1 = r0.<org.apache.commons.math3.filter.DefaultProcessModel: org.apache.commons.math3.linear.RealMatrix controlMatrix>;

        return $r1;
    }

    public org.apache.commons.math3.linear.RealMatrix getProcessNoise()
    {
        org.apache.commons.math3.filter.DefaultProcessModel r0;
        org.apache.commons.math3.linear.RealMatrix $r1;

        r0 := @this: org.apache.commons.math3.filter.DefaultProcessModel;

        $r1 = r0.<org.apache.commons.math3.filter.DefaultProcessModel: org.apache.commons.math3.linear.RealMatrix processNoiseCovMatrix>;

        return $r1;
    }

    public org.apache.commons.math3.linear.RealVector getInitialStateEstimate()
    {
        org.apache.commons.math3.filter.DefaultProcessModel r0;
        org.apache.commons.math3.linear.RealVector $r1;

        r0 := @this: org.apache.commons.math3.filter.DefaultProcessModel;

        $r1 = r0.<org.apache.commons.math3.filter.DefaultProcessModel: org.apache.commons.math3.linear.RealVector initialStateEstimateVector>;

        return $r1;
    }

    public org.apache.commons.math3.linear.RealMatrix getInitialErrorCovariance()
    {
        org.apache.commons.math3.filter.DefaultProcessModel r0;
        org.apache.commons.math3.linear.RealMatrix $r1;

        r0 := @this: org.apache.commons.math3.filter.DefaultProcessModel;

        $r1 = r0.<org.apache.commons.math3.filter.DefaultProcessModel: org.apache.commons.math3.linear.RealMatrix initialErrorCovMatrix>;

        return $r1;
    }
}
