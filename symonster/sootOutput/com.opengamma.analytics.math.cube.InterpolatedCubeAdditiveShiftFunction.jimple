public class com.opengamma.analytics.math.cube.InterpolatedCubeAdditiveShiftFunction extends java.lang.Object implements com.opengamma.analytics.math.cube.CubeShiftFunction
{

    public void <init>()
    {
        com.opengamma.analytics.math.cube.InterpolatedCubeAdditiveShiftFunction r0;

        r0 := @this: com.opengamma.analytics.math.cube.InterpolatedCubeAdditiveShiftFunction;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public com.opengamma.analytics.math.cube.InterpolatedDoublesCube evaluate(com.opengamma.analytics.math.cube.InterpolatedDoublesCube, double)
    {
        com.opengamma.analytics.math.cube.InterpolatedCubeAdditiveShiftFunction r0;
        com.opengamma.analytics.math.cube.InterpolatedDoublesCube r1, $r8;
        double d0;
        java.lang.StringBuilder $r3, $r4, $r6;
        java.lang.String $r5, $r7;

        r0 := @this: com.opengamma.analytics.math.cube.InterpolatedCubeAdditiveShiftFunction;

        r1 := @parameter0: com.opengamma.analytics.math.cube.InterpolatedDoublesCube;

        d0 := @parameter1: double;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "cube");

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("PARALLEL_SHIFT_");

        $r5 = virtualinvoke r1.<com.opengamma.analytics.math.cube.InterpolatedDoublesCube: java.lang.String getName()>();

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        $r8 = virtualinvoke r0.<com.opengamma.analytics.math.cube.InterpolatedCubeAdditiveShiftFunction: com.opengamma.analytics.math.cube.InterpolatedDoublesCube evaluate(com.opengamma.analytics.math.cube.InterpolatedDoublesCube,double,java.lang.String)>(r1, d0, $r7);

        return $r8;
    }

    public com.opengamma.analytics.math.cube.InterpolatedDoublesCube evaluate(com.opengamma.analytics.math.cube.InterpolatedDoublesCube, double, java.lang.String)
    {
        com.opengamma.analytics.math.cube.InterpolatedCubeAdditiveShiftFunction r0;
        com.opengamma.analytics.math.cube.InterpolatedDoublesCube r1, $r10;
        double d0, $d1, $d2;
        java.lang.String r2;
        double[] r3, r4, r5, r6, $r8;
        int i0, i1;
        com.opengamma.analytics.math.interpolation.InterpolatorND $r9;

        r0 := @this: com.opengamma.analytics.math.cube.InterpolatedCubeAdditiveShiftFunction;

        r1 := @parameter0: com.opengamma.analytics.math.cube.InterpolatedDoublesCube;

        d0 := @parameter1: double;

        r2 := @parameter2: java.lang.String;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "cube");

        r3 = virtualinvoke r1.<com.opengamma.analytics.math.cube.InterpolatedDoublesCube: double[] getXDataAsPrimitive()>();

        r4 = virtualinvoke r1.<com.opengamma.analytics.math.cube.InterpolatedDoublesCube: double[] getYDataAsPrimitive()>();

        r5 = virtualinvoke r1.<com.opengamma.analytics.math.cube.InterpolatedDoublesCube: double[] getZDataAsPrimitive()>();

        i0 = lengthof r3;

        $r8 = virtualinvoke r1.<com.opengamma.analytics.math.cube.InterpolatedDoublesCube: double[] getValuesAsPrimitive()>();

        r6 = staticinvoke <java.util.Arrays: double[] copyOf(double[],int)>($r8, i0);

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        $d1 = r6[i1];

        $d2 = $d1 + d0;

        r6[i1] = $d2;

        i1 = i1 + 1;

        goto label1;

     label2:
        $r9 = virtualinvoke r1.<com.opengamma.analytics.math.cube.InterpolatedDoublesCube: com.opengamma.analytics.math.interpolation.InterpolatorND getInterpolator()>();

        $r10 = staticinvoke <com.opengamma.analytics.math.cube.InterpolatedDoublesCube: com.opengamma.analytics.math.cube.InterpolatedDoublesCube 'from'(double[],double[],double[],double[],com.opengamma.analytics.math.interpolation.InterpolatorND,java.lang.String)>(r3, r4, r5, r6, $r9, r2);

        return $r10;
    }

    public com.opengamma.analytics.math.cube.InterpolatedDoublesCube evaluate(com.opengamma.analytics.math.cube.InterpolatedDoublesCube, double, double, double, double)
    {
        com.opengamma.analytics.math.cube.InterpolatedCubeAdditiveShiftFunction r0;
        com.opengamma.analytics.math.cube.InterpolatedDoublesCube r1, $r8;
        double d0, d1, d2, d3;
        java.lang.StringBuilder $r3, $r4, $r6;
        java.lang.String $r5, $r7;

        r0 := @this: com.opengamma.analytics.math.cube.InterpolatedCubeAdditiveShiftFunction;

        r1 := @parameter0: com.opengamma.analytics.math.cube.InterpolatedDoublesCube;

        d0 := @parameter1: double;

        d1 := @parameter2: double;

        d2 := @parameter3: double;

        d3 := @parameter4: double;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "cube");

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("SINGLE_SHIFT_");

        $r5 = virtualinvoke r1.<com.opengamma.analytics.math.cube.InterpolatedDoublesCube: java.lang.String getName()>();

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        $r8 = virtualinvoke r0.<com.opengamma.analytics.math.cube.InterpolatedCubeAdditiveShiftFunction: com.opengamma.analytics.math.cube.InterpolatedDoublesCube evaluate(com.opengamma.analytics.math.cube.InterpolatedDoublesCube,double,double,double,double,java.lang.String)>(r1, d0, d1, d2, d3, $r7);

        return $r8;
    }

    public com.opengamma.analytics.math.cube.InterpolatedDoublesCube evaluate(com.opengamma.analytics.math.cube.InterpolatedDoublesCube, double, double, double, double, java.lang.String)
    {
        com.opengamma.analytics.math.cube.InterpolatedCubeAdditiveShiftFunction r0;
        com.opengamma.analytics.math.cube.InterpolatedDoublesCube r1, $r15, $r17;
        double d0, d1, d2, d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14;
        java.lang.String r2;
        double[] r3, r4, r5, r6, r7, r8, r18, r19, r20;
        int i0, $i1, $i2, $i3, $i4, i14, i15;
        java.lang.Double $r10, $r11, $r12, $r13;
        com.opengamma.analytics.math.interpolation.InterpolatorND $r14, $r16;
        long $l5, $l6, $l8, $l9, $l11, $l12;
        byte $b7, $b10, $b13;

        r0 := @this: com.opengamma.analytics.math.cube.InterpolatedCubeAdditiveShiftFunction;

        r1 := @parameter0: com.opengamma.analytics.math.cube.InterpolatedDoublesCube;

        d0 := @parameter1: double;

        d1 := @parameter2: double;

        d2 := @parameter3: double;

        d3 := @parameter4: double;

        r2 := @parameter5: java.lang.String;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "cube");

        r3 = virtualinvoke r1.<com.opengamma.analytics.math.cube.InterpolatedDoublesCube: double[] getXDataAsPrimitive()>();

        r4 = virtualinvoke r1.<com.opengamma.analytics.math.cube.InterpolatedDoublesCube: double[] getYDataAsPrimitive()>();

        r5 = virtualinvoke r1.<com.opengamma.analytics.math.cube.InterpolatedDoublesCube: double[] getZDataAsPrimitive()>();

        r6 = virtualinvoke r1.<com.opengamma.analytics.math.cube.InterpolatedDoublesCube: double[] getValuesAsPrimitive()>();

        i0 = lengthof r3;

        i14 = 0;

     label1:
        if i14 >= i0 goto label3;

        $d10 = r3[i14];

        $l5 = staticinvoke <java.lang.Double: long doubleToLongBits(double)>($d10);

        $l6 = staticinvoke <java.lang.Double: long doubleToLongBits(double)>(d0);

        $b7 = $l5 cmp $l6;

        if $b7 != 0 goto label2;

        $d11 = r4[i14];

        $l8 = staticinvoke <java.lang.Double: long doubleToLongBits(double)>($d11);

        $l9 = staticinvoke <java.lang.Double: long doubleToLongBits(double)>(d1);

        $b10 = $l8 cmp $l9;

        if $b10 != 0 goto label2;

        $d12 = r5[i14];

        $l11 = staticinvoke <java.lang.Double: long doubleToLongBits(double)>($d12);

        $l12 = staticinvoke <java.lang.Double: long doubleToLongBits(double)>(d2);

        $b13 = $l11 cmp $l12;

        if $b13 != 0 goto label2;

        r18 = staticinvoke <java.util.Arrays: double[] copyOf(double[],int)>(r6, i0);

        $d13 = r18[i14];

        $d14 = $d13 + d3;

        r18[i14] = $d14;

        $r16 = virtualinvoke r1.<com.opengamma.analytics.math.cube.InterpolatedDoublesCube: com.opengamma.analytics.math.interpolation.InterpolatorND getInterpolator()>();

        $r17 = staticinvoke <com.opengamma.analytics.math.cube.InterpolatedDoublesCube: com.opengamma.analytics.math.cube.InterpolatedDoublesCube 'from'(double[],double[],double[],double[],com.opengamma.analytics.math.interpolation.InterpolatorND,java.lang.String)>(r3, r4, r5, r18, $r16, r2);

        return $r17;

     label2:
        i14 = i14 + 1;

        goto label1;

     label3:
        $i1 = i0 + 1;

        r19 = newarray (double)[$i1];

        $i2 = i0 + 1;

        r20 = newarray (double)[$i2];

        $i3 = i0 + 1;

        r7 = newarray (double)[$i3];

        $i4 = i0 + 1;

        r8 = newarray (double)[$i4];

        i15 = 0;

     label4:
        if i15 >= i0 goto label5;

        $d6 = r3[i15];

        r19[i15] = $d6;

        $d7 = r4[i15];

        r20[i15] = $d7;

        $d8 = r5[i15];

        r7[i15] = $d8;

        $d9 = r6[i15];

        r8[i15] = $d9;

        i15 = i15 + 1;

        goto label4;

     label5:
        r19[i0] = d0;

        r20[i0] = d1;

        r7[i0] = d2;

        $r10 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d0);

        $r11 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d1);

        $r12 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d2);

        $r13 = virtualinvoke r1.<com.opengamma.analytics.math.cube.InterpolatedDoublesCube: java.lang.Double getValue(java.lang.Double,java.lang.Double,java.lang.Double)>($r10, $r11, $r12);

        $d4 = virtualinvoke $r13.<java.lang.Double: double doubleValue()>();

        $d5 = $d4 + d3;

        r8[i0] = $d5;

        $r14 = virtualinvoke r1.<com.opengamma.analytics.math.cube.InterpolatedDoublesCube: com.opengamma.analytics.math.interpolation.InterpolatorND getInterpolator()>();

        $r15 = staticinvoke <com.opengamma.analytics.math.cube.InterpolatedDoublesCube: com.opengamma.analytics.math.cube.InterpolatedDoublesCube 'from'(double[],double[],double[],double[],com.opengamma.analytics.math.interpolation.InterpolatorND,java.lang.String)>(r19, r20, r7, r8, $r14, r2);

        return $r15;
    }

    public com.opengamma.analytics.math.cube.InterpolatedDoublesCube evaluate(com.opengamma.analytics.math.cube.InterpolatedDoublesCube, double[], double[], double[], double[])
    {
        com.opengamma.analytics.math.cube.InterpolatedCubeAdditiveShiftFunction r0;
        com.opengamma.analytics.math.cube.InterpolatedDoublesCube r1, $r12;
        double[] r2, r3, r4, r5;
        java.lang.StringBuilder $r7, $r8, $r10;
        java.lang.String $r9, $r11;

        r0 := @this: com.opengamma.analytics.math.cube.InterpolatedCubeAdditiveShiftFunction;

        r1 := @parameter0: com.opengamma.analytics.math.cube.InterpolatedDoublesCube;

        r2 := @parameter1: double[];

        r3 := @parameter2: double[];

        r4 := @parameter3: double[];

        r5 := @parameter4: double[];

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "cube");

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("MULTIPLE_SHIFT_");

        $r9 = virtualinvoke r1.<com.opengamma.analytics.math.cube.InterpolatedDoublesCube: java.lang.String getName()>();

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        $r12 = virtualinvoke r0.<com.opengamma.analytics.math.cube.InterpolatedCubeAdditiveShiftFunction: com.opengamma.analytics.math.cube.InterpolatedDoublesCube evaluate(com.opengamma.analytics.math.cube.InterpolatedDoublesCube,double[],double[],double[],double[],java.lang.String)>(r1, r2, r3, r4, r5, $r11);

        return $r12;
    }

    public com.opengamma.analytics.math.cube.InterpolatedDoublesCube evaluate(com.opengamma.analytics.math.cube.InterpolatedDoublesCube, double[], double[], double[], double[], java.lang.String)
    {
        com.opengamma.analytics.math.cube.InterpolatedCubeAdditiveShiftFunction r0;
        com.opengamma.analytics.math.cube.InterpolatedDoublesCube r1, $r21, $r41;
        double[] r2, r3, r4, r5, $r36, $r37, $r38, $r39;
        java.lang.String r6;
        int i0, i1, $i2, $i12, $i13, $i14, i15, i16;
        java.lang.Double[] r7, r8, r9, r10;
        com.opengamma.analytics.math.interpolation.InterpolatorND $r20, $r40;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17;
        java.lang.Double $r22, $r23, $r24, $r25, $r26, $r27, $r28, $r29, $r30, $r31, $r32, $r33, $r34;
        long $l3, $l4, $l6, $l7, $l9, $l10;
        byte $b5, $b8, $b11;
        boolean $z4, z5;
        java.lang.Object[] $r42;
        java.lang.Integer $r43, $r44, $r45;
        java.util.ArrayList $r46, $r48, $r50, $r52;
        java.util.List $r47, $r49, $r51, $r53;

        r0 := @this: com.opengamma.analytics.math.cube.InterpolatedCubeAdditiveShiftFunction;

        r1 := @parameter0: com.opengamma.analytics.math.cube.InterpolatedDoublesCube;

        r2 := @parameter1: double[];

        r3 := @parameter2: double[];

        r4 := @parameter3: double[];

        r5 := @parameter4: double[];

        r6 := @parameter5: java.lang.String;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "cube");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, "x shift");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r3, "y shift");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r4, "z shift");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r5, "shifts");

        i0 = lengthof r2;

        if i0 != 0 goto label1;

        $r36 = virtualinvoke r1.<com.opengamma.analytics.math.cube.InterpolatedDoublesCube: double[] getXDataAsPrimitive()>();

        $r37 = virtualinvoke r1.<com.opengamma.analytics.math.cube.InterpolatedDoublesCube: double[] getYDataAsPrimitive()>();

        $r38 = virtualinvoke r1.<com.opengamma.analytics.math.cube.InterpolatedDoublesCube: double[] getZDataAsPrimitive()>();

        $r39 = virtualinvoke r1.<com.opengamma.analytics.math.cube.InterpolatedDoublesCube: double[] getValuesAsPrimitive()>();

        $r40 = virtualinvoke r1.<com.opengamma.analytics.math.cube.InterpolatedDoublesCube: com.opengamma.analytics.math.interpolation.InterpolatorND getInterpolator()>();

        $r41 = staticinvoke <com.opengamma.analytics.math.cube.InterpolatedDoublesCube: com.opengamma.analytics.math.cube.InterpolatedDoublesCube 'from'(double[],double[],double[],double[],com.opengamma.analytics.math.interpolation.InterpolatorND,java.lang.String)>($r36, $r37, $r38, $r39, $r40, r6);

        return $r41;

     label1:
        $i2 = lengthof r3;

        if i0 != $i2 goto label2;

        $i12 = lengthof r5;

        if i0 != $i12 goto label2;

        $z4 = 1;

        goto label3;

     label2:
        $z4 = 0;

     label3:
        $r42 = newarray (java.lang.Object)[3];

        $i13 = lengthof r5;

        $r43 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i13);

        $r42[0] = $r43;

        $r44 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r42[1] = $r44;

        $i14 = lengthof r3;

        $r45 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i14);

        $r42[2] = $r45;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String,java.lang.Object[])>($z4, "number of shifts {} must be equal to number of x shift positions {} and y shift positions {}", $r42);

        r7 = virtualinvoke r1.<com.opengamma.analytics.math.cube.InterpolatedDoublesCube: java.lang.Double[] getXData()>();

        r8 = virtualinvoke r1.<com.opengamma.analytics.math.cube.InterpolatedDoublesCube: java.lang.Double[] getYData()>();

        r9 = virtualinvoke r1.<com.opengamma.analytics.math.cube.InterpolatedDoublesCube: java.lang.Double[] getZData()>();

        r10 = virtualinvoke r1.<com.opengamma.analytics.math.cube.InterpolatedDoublesCube: java.lang.Double[] getValues()>();

        $r46 = new java.util.ArrayList;

        $r47 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(r7);

        specialinvoke $r46.<java.util.ArrayList: void <init>(java.util.Collection)>($r47);

        $r48 = new java.util.ArrayList;

        $r49 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(r8);

        specialinvoke $r48.<java.util.ArrayList: void <init>(java.util.Collection)>($r49);

        $r50 = new java.util.ArrayList;

        $r51 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(r9);

        specialinvoke $r50.<java.util.ArrayList: void <init>(java.util.Collection)>($r51);

        $r52 = new java.util.ArrayList;

        $r53 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(r10);

        specialinvoke $r52.<java.util.ArrayList: void <init>(java.util.Collection)>($r53);

        i1 = virtualinvoke r1.<com.opengamma.analytics.math.cube.InterpolatedDoublesCube: int size()>();

        i15 = 0;

     label4:
        if i15 >= i0 goto label9;

        z5 = 0;

        i16 = 0;

     label5:
        if i16 >= i1 goto label7;

        $r30 = r7[i16];

        $d9 = virtualinvoke $r30.<java.lang.Double: double doubleValue()>();

        $l3 = staticinvoke <java.lang.Double: long doubleToLongBits(double)>($d9);

        $d10 = r2[i15];

        $l4 = staticinvoke <java.lang.Double: long doubleToLongBits(double)>($d10);

        $b5 = $l3 cmp $l4;

        if $b5 != 0 goto label6;

        $r31 = r8[i16];

        $d11 = virtualinvoke $r31.<java.lang.Double: double doubleValue()>();

        $l6 = staticinvoke <java.lang.Double: long doubleToLongBits(double)>($d11);

        $d12 = r3[i15];

        $l7 = staticinvoke <java.lang.Double: long doubleToLongBits(double)>($d12);

        $b8 = $l6 cmp $l7;

        if $b8 != 0 goto label6;

        $r32 = r9[i16];

        $d13 = virtualinvoke $r32.<java.lang.Double: double doubleValue()>();

        $l9 = staticinvoke <java.lang.Double: long doubleToLongBits(double)>($d13);

        $d14 = r4[i15];

        $l10 = staticinvoke <java.lang.Double: long doubleToLongBits(double)>($d14);

        $b11 = $l9 cmp $l10;

        if $b11 != 0 goto label6;

        $r33 = r10[i16];

        $d15 = virtualinvoke $r33.<java.lang.Double: double doubleValue()>();

        $d16 = r5[i15];

        $d17 = $d15 + $d16;

        $r34 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d17);

        interfaceinvoke $r52.<java.util.List: java.lang.Object set(int,java.lang.Object)>(i16, $r34);

        z5 = 1;

     label6:
        i16 = i16 + 1;

        goto label5;

     label7:
        if z5 != 0 goto label8;

        $d0 = r2[i15];

        $r22 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        interfaceinvoke $r46.<java.util.List: boolean add(java.lang.Object)>($r22);

        $d1 = r3[i15];

        $r23 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d1);

        interfaceinvoke $r48.<java.util.List: boolean add(java.lang.Object)>($r23);

        $d2 = r4[i15];

        $r24 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d2);

        interfaceinvoke $r50.<java.util.List: boolean add(java.lang.Object)>($r24);

        $d3 = r2[i15];

        $r25 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d3);

        $d4 = r3[i15];

        $r26 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d4);

        $d5 = r4[i15];

        $r27 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d5);

        $r28 = virtualinvoke r1.<com.opengamma.analytics.math.cube.InterpolatedDoublesCube: java.lang.Double getValue(java.lang.Double,java.lang.Double,java.lang.Double)>($r25, $r26, $r27);

        $d6 = virtualinvoke $r28.<java.lang.Double: double doubleValue()>();

        $d7 = r5[i15];

        $d8 = $d6 + $d7;

        $r29 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d8);

        interfaceinvoke $r52.<java.util.List: boolean add(java.lang.Object)>($r29);

     label8:
        i15 = i15 + 1;

        goto label4;

     label9:
        $r20 = virtualinvoke r1.<com.opengamma.analytics.math.cube.InterpolatedDoublesCube: com.opengamma.analytics.math.interpolation.InterpolatorND getInterpolator()>();

        $r21 = staticinvoke <com.opengamma.analytics.math.cube.InterpolatedDoublesCube: com.opengamma.analytics.math.cube.InterpolatedDoublesCube 'from'(java.util.List,java.util.List,java.util.List,java.util.List,com.opengamma.analytics.math.interpolation.InterpolatorND,java.lang.String)>($r46, $r48, $r50, $r52, $r20, r6);

        return $r21;
    }

    public volatile com.opengamma.analytics.math.cube.Cube evaluate(com.opengamma.analytics.math.cube.Cube, double[], double[], double[], double[], java.lang.String)
    {
        com.opengamma.analytics.math.cube.InterpolatedCubeAdditiveShiftFunction r0;
        com.opengamma.analytics.math.cube.Cube r1;
        double[] r2, r3, r4, r5;
        java.lang.String r6;
        com.opengamma.analytics.math.cube.InterpolatedDoublesCube $r7, $r8;

        r0 := @this: com.opengamma.analytics.math.cube.InterpolatedCubeAdditiveShiftFunction;

        r1 := @parameter0: com.opengamma.analytics.math.cube.Cube;

        r2 := @parameter1: double[];

        r3 := @parameter2: double[];

        r4 := @parameter3: double[];

        r5 := @parameter4: double[];

        r6 := @parameter5: java.lang.String;

        $r7 = (com.opengamma.analytics.math.cube.InterpolatedDoublesCube) r1;

        $r8 = virtualinvoke r0.<com.opengamma.analytics.math.cube.InterpolatedCubeAdditiveShiftFunction: com.opengamma.analytics.math.cube.InterpolatedDoublesCube evaluate(com.opengamma.analytics.math.cube.InterpolatedDoublesCube,double[],double[],double[],double[],java.lang.String)>($r7, r2, r3, r4, r5, r6);

        return $r8;
    }

    public volatile com.opengamma.analytics.math.cube.Cube evaluate(com.opengamma.analytics.math.cube.Cube, double[], double[], double[], double[])
    {
        com.opengamma.analytics.math.cube.InterpolatedCubeAdditiveShiftFunction r0;
        com.opengamma.analytics.math.cube.Cube r1;
        double[] r2, r3, r4, r5;
        com.opengamma.analytics.math.cube.InterpolatedDoublesCube $r6, $r7;

        r0 := @this: com.opengamma.analytics.math.cube.InterpolatedCubeAdditiveShiftFunction;

        r1 := @parameter0: com.opengamma.analytics.math.cube.Cube;

        r2 := @parameter1: double[];

        r3 := @parameter2: double[];

        r4 := @parameter3: double[];

        r5 := @parameter4: double[];

        $r6 = (com.opengamma.analytics.math.cube.InterpolatedDoublesCube) r1;

        $r7 = virtualinvoke r0.<com.opengamma.analytics.math.cube.InterpolatedCubeAdditiveShiftFunction: com.opengamma.analytics.math.cube.InterpolatedDoublesCube evaluate(com.opengamma.analytics.math.cube.InterpolatedDoublesCube,double[],double[],double[],double[])>($r6, r2, r3, r4, r5);

        return $r7;
    }

    public volatile com.opengamma.analytics.math.cube.Cube evaluate(com.opengamma.analytics.math.cube.Cube, double, double, double, double, java.lang.String)
    {
        com.opengamma.analytics.math.cube.InterpolatedCubeAdditiveShiftFunction r0;
        com.opengamma.analytics.math.cube.Cube r1;
        double d0, d1, d2, d3;
        java.lang.String r2;
        com.opengamma.analytics.math.cube.InterpolatedDoublesCube $r3, $r4;

        r0 := @this: com.opengamma.analytics.math.cube.InterpolatedCubeAdditiveShiftFunction;

        r1 := @parameter0: com.opengamma.analytics.math.cube.Cube;

        d0 := @parameter1: double;

        d1 := @parameter2: double;

        d2 := @parameter3: double;

        d3 := @parameter4: double;

        r2 := @parameter5: java.lang.String;

        $r3 = (com.opengamma.analytics.math.cube.InterpolatedDoublesCube) r1;

        $r4 = virtualinvoke r0.<com.opengamma.analytics.math.cube.InterpolatedCubeAdditiveShiftFunction: com.opengamma.analytics.math.cube.InterpolatedDoublesCube evaluate(com.opengamma.analytics.math.cube.InterpolatedDoublesCube,double,double,double,double,java.lang.String)>($r3, d0, d1, d2, d3, r2);

        return $r4;
    }

    public volatile com.opengamma.analytics.math.cube.Cube evaluate(com.opengamma.analytics.math.cube.Cube, double, double, double, double)
    {
        com.opengamma.analytics.math.cube.InterpolatedCubeAdditiveShiftFunction r0;
        com.opengamma.analytics.math.cube.Cube r1;
        double d0, d1, d2, d3;
        com.opengamma.analytics.math.cube.InterpolatedDoublesCube $r2, $r3;

        r0 := @this: com.opengamma.analytics.math.cube.InterpolatedCubeAdditiveShiftFunction;

        r1 := @parameter0: com.opengamma.analytics.math.cube.Cube;

        d0 := @parameter1: double;

        d1 := @parameter2: double;

        d2 := @parameter3: double;

        d3 := @parameter4: double;

        $r2 = (com.opengamma.analytics.math.cube.InterpolatedDoublesCube) r1;

        $r3 = virtualinvoke r0.<com.opengamma.analytics.math.cube.InterpolatedCubeAdditiveShiftFunction: com.opengamma.analytics.math.cube.InterpolatedDoublesCube evaluate(com.opengamma.analytics.math.cube.InterpolatedDoublesCube,double,double,double,double)>($r2, d0, d1, d2, d3);

        return $r3;
    }

    public volatile com.opengamma.analytics.math.cube.Cube evaluate(com.opengamma.analytics.math.cube.Cube, double, java.lang.String)
    {
        com.opengamma.analytics.math.cube.InterpolatedCubeAdditiveShiftFunction r0;
        com.opengamma.analytics.math.cube.Cube r1;
        double d0;
        java.lang.String r2;
        com.opengamma.analytics.math.cube.InterpolatedDoublesCube $r3, $r4;

        r0 := @this: com.opengamma.analytics.math.cube.InterpolatedCubeAdditiveShiftFunction;

        r1 := @parameter0: com.opengamma.analytics.math.cube.Cube;

        d0 := @parameter1: double;

        r2 := @parameter2: java.lang.String;

        $r3 = (com.opengamma.analytics.math.cube.InterpolatedDoublesCube) r1;

        $r4 = virtualinvoke r0.<com.opengamma.analytics.math.cube.InterpolatedCubeAdditiveShiftFunction: com.opengamma.analytics.math.cube.InterpolatedDoublesCube evaluate(com.opengamma.analytics.math.cube.InterpolatedDoublesCube,double,java.lang.String)>($r3, d0, r2);

        return $r4;
    }

    public volatile com.opengamma.analytics.math.cube.Cube evaluate(com.opengamma.analytics.math.cube.Cube, double)
    {
        com.opengamma.analytics.math.cube.InterpolatedCubeAdditiveShiftFunction r0;
        com.opengamma.analytics.math.cube.Cube r1;
        double d0;
        com.opengamma.analytics.math.cube.InterpolatedDoublesCube $r2, $r3;

        r0 := @this: com.opengamma.analytics.math.cube.InterpolatedCubeAdditiveShiftFunction;

        r1 := @parameter0: com.opengamma.analytics.math.cube.Cube;

        d0 := @parameter1: double;

        $r2 = (com.opengamma.analytics.math.cube.InterpolatedDoublesCube) r1;

        $r3 = virtualinvoke r0.<com.opengamma.analytics.math.cube.InterpolatedCubeAdditiveShiftFunction: com.opengamma.analytics.math.cube.InterpolatedDoublesCube evaluate(com.opengamma.analytics.math.cube.InterpolatedDoublesCube,double)>($r2, d0);

        return $r3;
    }
}
