public class com.opengamma.analytics.math.rootfinding.NewtonRaphsonSingleRootFinder extends com.opengamma.analytics.math.rootfinding.RealSingleRootFinder
{
    private static final int MAX_ITER;
    private final double _accuracy;

    public void <init>()
    {
        com.opengamma.analytics.math.rootfinding.NewtonRaphsonSingleRootFinder r0;

        r0 := @this: com.opengamma.analytics.math.rootfinding.NewtonRaphsonSingleRootFinder;

        specialinvoke r0.<com.opengamma.analytics.math.rootfinding.NewtonRaphsonSingleRootFinder: void <init>(double)>(1.0E-12);

        return;
    }

    public void <init>(double)
    {
        com.opengamma.analytics.math.rootfinding.NewtonRaphsonSingleRootFinder r0;
        double d0, $d1;

        r0 := @this: com.opengamma.analytics.math.rootfinding.NewtonRaphsonSingleRootFinder;

        d0 := @parameter0: double;

        specialinvoke r0.<com.opengamma.analytics.math.rootfinding.RealSingleRootFinder: void <init>()>();

        $d1 = staticinvoke <java.lang.Math: double abs(double)>(d0);

        r0.<com.opengamma.analytics.math.rootfinding.NewtonRaphsonSingleRootFinder: double _accuracy> = $d1;

        return;
    }

    public java.lang.Double getRoot(com.opengamma.analytics.math.function.Function1D, java.lang.Double, java.lang.Double)
    {
        com.opengamma.analytics.math.rootfinding.NewtonRaphsonSingleRootFinder r0;
        com.opengamma.analytics.math.function.Function1D r1;
        java.lang.Double r2, r3, $r5;
        com.opengamma.analytics.math.function.DoubleFunction1D $r4;

        r0 := @this: com.opengamma.analytics.math.rootfinding.NewtonRaphsonSingleRootFinder;

        r1 := @parameter0: com.opengamma.analytics.math.function.Function1D;

        r2 := @parameter1: java.lang.Double;

        r3 := @parameter2: java.lang.Double;

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object,java.lang.String)>(r1, "function");

        $r4 = staticinvoke <com.opengamma.analytics.math.function.DoubleFunction1D: com.opengamma.analytics.math.function.DoubleFunction1D 'from'(com.opengamma.analytics.math.function.Function1D)>(r1);

        $r5 = virtualinvoke r0.<com.opengamma.analytics.math.rootfinding.NewtonRaphsonSingleRootFinder: java.lang.Double getRoot(com.opengamma.analytics.math.function.DoubleFunction1D,java.lang.Double,java.lang.Double)>($r4, r2, r3);

        return $r5;
    }

    public java.lang.Double getRoot(com.opengamma.analytics.math.function.Function1D, java.lang.Double)
    {
        com.opengamma.analytics.math.rootfinding.NewtonRaphsonSingleRootFinder r0;
        com.opengamma.analytics.math.function.Function1D r1;
        java.lang.Double r2, $r5;
        com.opengamma.analytics.math.function.DoubleFunction1D r3, $r4;

        r0 := @this: com.opengamma.analytics.math.rootfinding.NewtonRaphsonSingleRootFinder;

        r1 := @parameter0: com.opengamma.analytics.math.function.Function1D;

        r2 := @parameter1: java.lang.Double;

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object,java.lang.String)>(r1, "function");

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object,java.lang.String)>(r2, "x");

        r3 = staticinvoke <com.opengamma.analytics.math.function.DoubleFunction1D: com.opengamma.analytics.math.function.DoubleFunction1D 'from'(com.opengamma.analytics.math.function.Function1D)>(r1);

        $r4 = virtualinvoke r3.<com.opengamma.analytics.math.function.DoubleFunction1D: com.opengamma.analytics.math.function.DoubleFunction1D derivative()>();

        $r5 = virtualinvoke r0.<com.opengamma.analytics.math.rootfinding.NewtonRaphsonSingleRootFinder: java.lang.Double getRoot(com.opengamma.analytics.math.function.DoubleFunction1D,com.opengamma.analytics.math.function.DoubleFunction1D,java.lang.Double)>(r3, $r4, r2);

        return $r5;
    }

    public java.lang.Double getRoot(com.opengamma.analytics.math.function.DoubleFunction1D, java.lang.Double, java.lang.Double)
    {
        com.opengamma.analytics.math.rootfinding.NewtonRaphsonSingleRootFinder r0;
        com.opengamma.analytics.math.function.DoubleFunction1D r1, $r4;
        java.lang.Double r2, r3, $r5;

        r0 := @this: com.opengamma.analytics.math.rootfinding.NewtonRaphsonSingleRootFinder;

        r1 := @parameter0: com.opengamma.analytics.math.function.DoubleFunction1D;

        r2 := @parameter1: java.lang.Double;

        r3 := @parameter2: java.lang.Double;

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object,java.lang.String)>(r1, "function");

        $r4 = virtualinvoke r1.<com.opengamma.analytics.math.function.DoubleFunction1D: com.opengamma.analytics.math.function.DoubleFunction1D derivative()>();

        $r5 = virtualinvoke r0.<com.opengamma.analytics.math.rootfinding.NewtonRaphsonSingleRootFinder: java.lang.Double getRoot(com.opengamma.analytics.math.function.DoubleFunction1D,com.opengamma.analytics.math.function.DoubleFunction1D,java.lang.Double,java.lang.Double)>(r1, $r4, r2, r3);

        return $r5;
    }

    public java.lang.Double getRoot(com.opengamma.analytics.math.function.DoubleFunction1D, java.lang.Double)
    {
        com.opengamma.analytics.math.rootfinding.NewtonRaphsonSingleRootFinder r0;
        com.opengamma.analytics.math.function.DoubleFunction1D r1, $r3;
        java.lang.Double r2, $r4;

        r0 := @this: com.opengamma.analytics.math.rootfinding.NewtonRaphsonSingleRootFinder;

        r1 := @parameter0: com.opengamma.analytics.math.function.DoubleFunction1D;

        r2 := @parameter1: java.lang.Double;

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object,java.lang.String)>(r1, "function");

        $r3 = virtualinvoke r1.<com.opengamma.analytics.math.function.DoubleFunction1D: com.opengamma.analytics.math.function.DoubleFunction1D derivative()>();

        $r4 = virtualinvoke r0.<com.opengamma.analytics.math.rootfinding.NewtonRaphsonSingleRootFinder: java.lang.Double getRoot(com.opengamma.analytics.math.function.DoubleFunction1D,com.opengamma.analytics.math.function.DoubleFunction1D,java.lang.Double)>(r1, $r3, r2);

        return $r4;
    }

    public java.lang.Double getRoot(com.opengamma.analytics.math.function.Function1D, com.opengamma.analytics.math.function.Function1D, java.lang.Double, java.lang.Double)
    {
        com.opengamma.analytics.math.rootfinding.NewtonRaphsonSingleRootFinder r0;
        com.opengamma.analytics.math.function.Function1D r1, r2;
        java.lang.Double r3, r4, $r7;
        com.opengamma.analytics.math.function.DoubleFunction1D $r5, $r6;

        r0 := @this: com.opengamma.analytics.math.rootfinding.NewtonRaphsonSingleRootFinder;

        r1 := @parameter0: com.opengamma.analytics.math.function.Function1D;

        r2 := @parameter1: com.opengamma.analytics.math.function.Function1D;

        r3 := @parameter2: java.lang.Double;

        r4 := @parameter3: java.lang.Double;

        virtualinvoke r0.<com.opengamma.analytics.math.rootfinding.NewtonRaphsonSingleRootFinder: void checkInputs(com.opengamma.analytics.math.function.Function1D,java.lang.Double,java.lang.Double)>(r1, r3, r4);

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object,java.lang.String)>(r2, "derivative");

        $r5 = staticinvoke <com.opengamma.analytics.math.function.DoubleFunction1D: com.opengamma.analytics.math.function.DoubleFunction1D 'from'(com.opengamma.analytics.math.function.Function1D)>(r1);

        $r6 = staticinvoke <com.opengamma.analytics.math.function.DoubleFunction1D: com.opengamma.analytics.math.function.DoubleFunction1D 'from'(com.opengamma.analytics.math.function.Function1D)>(r2);

        $r7 = virtualinvoke r0.<com.opengamma.analytics.math.rootfinding.NewtonRaphsonSingleRootFinder: java.lang.Double getRoot(com.opengamma.analytics.math.function.DoubleFunction1D,com.opengamma.analytics.math.function.DoubleFunction1D,java.lang.Double,java.lang.Double)>($r5, $r6, r3, r4);

        return $r7;
    }

    public java.lang.Double getRoot(com.opengamma.analytics.math.function.Function1D, com.opengamma.analytics.math.function.Function1D, java.lang.Double)
    {
        com.opengamma.analytics.math.rootfinding.NewtonRaphsonSingleRootFinder r0;
        com.opengamma.analytics.math.function.Function1D r1, r2;
        java.lang.Double r3, $r6;
        com.opengamma.analytics.math.function.DoubleFunction1D $r4, $r5;

        r0 := @this: com.opengamma.analytics.math.rootfinding.NewtonRaphsonSingleRootFinder;

        r1 := @parameter0: com.opengamma.analytics.math.function.Function1D;

        r2 := @parameter1: com.opengamma.analytics.math.function.Function1D;

        r3 := @parameter2: java.lang.Double;

        $r4 = staticinvoke <com.opengamma.analytics.math.function.DoubleFunction1D: com.opengamma.analytics.math.function.DoubleFunction1D 'from'(com.opengamma.analytics.math.function.Function1D)>(r1);

        $r5 = staticinvoke <com.opengamma.analytics.math.function.DoubleFunction1D: com.opengamma.analytics.math.function.DoubleFunction1D 'from'(com.opengamma.analytics.math.function.Function1D)>(r2);

        $r6 = virtualinvoke r0.<com.opengamma.analytics.math.rootfinding.NewtonRaphsonSingleRootFinder: java.lang.Double getRoot(com.opengamma.analytics.math.function.DoubleFunction1D,com.opengamma.analytics.math.function.DoubleFunction1D,java.lang.Double)>($r4, $r5, r3);

        return $r6;
    }

    public java.lang.Double getRoot(com.opengamma.analytics.math.function.DoubleFunction1D, com.opengamma.analytics.math.function.DoubleFunction1D, java.lang.Double, java.lang.Double)
    {
        com.opengamma.analytics.math.rootfinding.NewtonRaphsonSingleRootFinder r0;
        com.opengamma.analytics.math.function.DoubleFunction1D r1, r2;
        java.lang.Double r3, r4, $r6, $r8, $r10, $r12, $r13, $r15, $r16, $r17, $r18, $r19, $r20;
        double d0, d1, d2, d3, d4, d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21, d22, d23, d24, d25, d26;
        java.lang.Object $r5, $r7, $r11, $r14;
        byte $b0, $b1, $b2, $b3, $b4, $b5, $b6, $b7, $b8, $b10;
        com.opengamma.analytics.math.MathException $r9;
        int i9;

        r0 := @this: com.opengamma.analytics.math.rootfinding.NewtonRaphsonSingleRootFinder;

        r1 := @parameter0: com.opengamma.analytics.math.function.DoubleFunction1D;

        r2 := @parameter1: com.opengamma.analytics.math.function.DoubleFunction1D;

        r3 := @parameter2: java.lang.Double;

        r4 := @parameter3: java.lang.Double;

        virtualinvoke r0.<com.opengamma.analytics.math.rootfinding.NewtonRaphsonSingleRootFinder: void checkInputs(com.opengamma.analytics.math.function.Function1D,java.lang.Double,java.lang.Double)>(r1, r3, r4);

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object,java.lang.String)>(r2, "derivative function");

        $r5 = virtualinvoke r1.<com.opengamma.analytics.math.function.DoubleFunction1D: java.lang.Object evaluate(java.lang.Object)>(r3);

        $r6 = (java.lang.Double) $r5;

        d0 = virtualinvoke $r6.<java.lang.Double: double doubleValue()>();

        $d6 = staticinvoke <java.lang.Math: double abs(double)>(d0);

        $d7 = r0.<com.opengamma.analytics.math.rootfinding.NewtonRaphsonSingleRootFinder: double _accuracy>;

        $b0 = $d6 cmpg $d7;

        if $b0 >= 0 goto label01;

        return r3;

     label01:
        $r7 = virtualinvoke r1.<com.opengamma.analytics.math.function.DoubleFunction1D: java.lang.Object evaluate(java.lang.Object)>(r4);

        $r8 = (java.lang.Double) $r7;

        d1 = virtualinvoke $r8.<java.lang.Double: double doubleValue()>();

        $d8 = staticinvoke <java.lang.Math: double abs(double)>(d1);

        $d9 = r0.<com.opengamma.analytics.math.rootfinding.NewtonRaphsonSingleRootFinder: double _accuracy>;

        $b1 = $d8 cmpg $d9;

        if $b1 >= 0 goto label02;

        return r4;

     label02:
        $d10 = virtualinvoke r3.<java.lang.Double: double doubleValue()>();

        $d11 = virtualinvoke r4.<java.lang.Double: double doubleValue()>();

        $d12 = $d10 + $d11;

        d22 = $d12 / 2.0;

        $b2 = d1 cmpg 0.0;

        if $b2 >= 0 goto label03;

        $r17 = r4;

        goto label04;

     label03:
        $r17 = r3;

     label04:
        d23 = virtualinvoke $r17.<java.lang.Double: double doubleValue()>();

        $b3 = d1 cmpg 0.0;

        if $b3 >= 0 goto label05;

        $r18 = r3;

        goto label06;

     label05:
        $r18 = r4;

     label06:
        d24 = virtualinvoke $r18.<java.lang.Double: double doubleValue()>();

        $d13 = virtualinvoke r3.<java.lang.Double: double doubleValue()>();

        $d14 = virtualinvoke r4.<java.lang.Double: double doubleValue()>();

        $b4 = $d13 cmpl $d14;

        if $b4 <= 0 goto label07;

        $r19 = r4;

        goto label08;

     label07:
        $r19 = r3;

     label08:
        d2 = virtualinvoke $r19.<java.lang.Double: double doubleValue()>();

        $d15 = virtualinvoke r3.<java.lang.Double: double doubleValue()>();

        $d16 = virtualinvoke r4.<java.lang.Double: double doubleValue()>();

        $b5 = $d15 cmpl $d16;

        if $b5 <= 0 goto label09;

        $r20 = r3;

        goto label10;

     label09:
        $r20 = r4;

     label10:
        d3 = virtualinvoke $r20.<java.lang.Double: double doubleValue()>();

        i9 = 0;

     label11:
        if i9 >= 10000 goto label17;

        $r10 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d22);

        $r11 = virtualinvoke r1.<com.opengamma.analytics.math.function.DoubleFunction1D: java.lang.Object evaluate(java.lang.Object)>($r10);

        $r12 = (java.lang.Double) $r11;

        d4 = virtualinvoke $r12.<java.lang.Double: double doubleValue()>();

        $r13 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d22);

        $r14 = virtualinvoke r2.<com.opengamma.analytics.math.function.DoubleFunction1D: java.lang.Object evaluate(java.lang.Object)>($r13);

        $r15 = (java.lang.Double) $r14;

        d5 = virtualinvoke $r15.<java.lang.Double: double doubleValue()>();

        $d17 = neg d4;

        d25 = $d17 / d5;

        $d18 = staticinvoke <java.lang.Math: double abs(double)>(d25);

        $d19 = r0.<com.opengamma.analytics.math.rootfinding.NewtonRaphsonSingleRootFinder: double _accuracy>;

        $b6 = $d18 cmpg $d19;

        if $b6 > 0 goto label12;

        $d21 = d22 + d25;

        $r16 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d21);

        return $r16;

     label12:
        d22 = d22 + d25;

        $b7 = d22 cmpg d2;

        if $b7 < 0 goto label13;

        $b8 = d22 cmpl d3;

        if $b8 <= 0 goto label14;

     label13:
        $d20 = d24 - d23;

        d26 = $d20 / 2.0;

        d22 = d23 + d26;

     label14:
        $b10 = d4 cmpg 0.0;

        if $b10 >= 0 goto label15;

        d23 = d22;

        goto label16;

     label15:
        d24 = d22;

     label16:
        i9 = i9 + 1;

        goto label11;

     label17:
        $r9 = new com.opengamma.analytics.math.MathException;

        specialinvoke $r9.<com.opengamma.analytics.math.MathException: void <init>(java.lang.String)>("Could not find root in 10000 attempts");

        throw $r9;
    }

    public java.lang.Double getRoot(com.opengamma.analytics.math.function.DoubleFunction1D, com.opengamma.analytics.math.function.DoubleFunction1D, java.lang.Double)
    {
        com.opengamma.analytics.math.rootfinding.NewtonRaphsonSingleRootFinder r0;
        com.opengamma.analytics.math.function.DoubleFunction1D r1, r2;
        java.lang.Double r3, $r5, $r7, $r8, $r10, $r11;
        double d0, d1, d2, $d3, $d4, $d5, d6;
        com.opengamma.analytics.math.MathException $r4;
        java.lang.Object $r6, $r9;
        byte $b0;
        int i1;

        r0 := @this: com.opengamma.analytics.math.rootfinding.NewtonRaphsonSingleRootFinder;

        r1 := @parameter0: com.opengamma.analytics.math.function.DoubleFunction1D;

        r2 := @parameter1: com.opengamma.analytics.math.function.DoubleFunction1D;

        r3 := @parameter2: java.lang.Double;

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object,java.lang.String)>(r1, "function");

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object,java.lang.String)>(r2, "derivative function");

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object,java.lang.String)>(r3, "x");

        d6 = virtualinvoke r3.<java.lang.Double: double doubleValue()>();

        i1 = 0;

     label1:
        if i1 >= 10000 goto label3;

        $r5 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d6);

        $r6 = virtualinvoke r1.<com.opengamma.analytics.math.function.DoubleFunction1D: java.lang.Object evaluate(java.lang.Object)>($r5);

        $r7 = (java.lang.Double) $r6;

        d0 = virtualinvoke $r7.<java.lang.Double: double doubleValue()>();

        $r8 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d6);

        $r9 = virtualinvoke r2.<com.opengamma.analytics.math.function.DoubleFunction1D: java.lang.Object evaluate(java.lang.Object)>($r8);

        $r10 = (java.lang.Double) $r9;

        d1 = virtualinvoke $r10.<java.lang.Double: double doubleValue()>();

        d2 = d0 / d1;

        $d3 = staticinvoke <java.lang.Math: double abs(double)>(d2);

        $d4 = r0.<com.opengamma.analytics.math.rootfinding.NewtonRaphsonSingleRootFinder: double _accuracy>;

        $b0 = $d3 cmpg $d4;

        if $b0 > 0 goto label2;

        $d5 = d6 - d2;

        $r11 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d5);

        return $r11;

     label2:
        d6 = d6 - d2;

        i1 = i1 + 1;

        goto label1;

     label3:
        $r4 = new com.opengamma.analytics.math.MathException;

        specialinvoke $r4.<com.opengamma.analytics.math.MathException: void <init>(java.lang.String)>("Could not find root in 10000 attempts");

        throw $r4;
    }

    public static void <clinit>()
    {
        <com.opengamma.analytics.math.rootfinding.NewtonRaphsonSingleRootFinder: int MAX_ITER> = 10000;

        return;
    }
}
