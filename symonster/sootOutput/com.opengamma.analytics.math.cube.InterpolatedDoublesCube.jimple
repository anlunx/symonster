public class com.opengamma.analytics.math.cube.InterpolatedDoublesCube extends com.opengamma.analytics.math.cube.DoublesCube
{
    private final com.opengamma.analytics.math.interpolation.InterpolatorND _interpolator;
    private com.opengamma.analytics.math.interpolation.data.InterpolatorNDDataBundle _dataBundle;

    public static com.opengamma.analytics.math.cube.InterpolatedDoublesCube 'from'(double[], double[], double[], double[], com.opengamma.analytics.math.interpolation.InterpolatorND)
    {
        double[] r0, r1, r2, r3;
        com.opengamma.analytics.math.interpolation.InterpolatorND r4;
        com.opengamma.analytics.math.cube.InterpolatedDoublesCube $r5;

        r0 := @parameter0: double[];

        r1 := @parameter1: double[];

        r2 := @parameter2: double[];

        r3 := @parameter3: double[];

        r4 := @parameter4: com.opengamma.analytics.math.interpolation.InterpolatorND;

        $r5 = new com.opengamma.analytics.math.cube.InterpolatedDoublesCube;

        specialinvoke $r5.<com.opengamma.analytics.math.cube.InterpolatedDoublesCube: void <init>(double[],double[],double[],double[],com.opengamma.analytics.math.interpolation.InterpolatorND)>(r0, r1, r2, r3, r4);

        return $r5;
    }

    public static com.opengamma.analytics.math.cube.InterpolatedDoublesCube 'from'(java.lang.Double[], java.lang.Double[], java.lang.Double[], java.lang.Double[], com.opengamma.analytics.math.interpolation.InterpolatorND)
    {
        java.lang.Double[] r0, r1, r2, r3;
        com.opengamma.analytics.math.interpolation.InterpolatorND r4;
        com.opengamma.analytics.math.cube.InterpolatedDoublesCube $r5;

        r0 := @parameter0: java.lang.Double[];

        r1 := @parameter1: java.lang.Double[];

        r2 := @parameter2: java.lang.Double[];

        r3 := @parameter3: java.lang.Double[];

        r4 := @parameter4: com.opengamma.analytics.math.interpolation.InterpolatorND;

        $r5 = new com.opengamma.analytics.math.cube.InterpolatedDoublesCube;

        specialinvoke $r5.<com.opengamma.analytics.math.cube.InterpolatedDoublesCube: void <init>(java.lang.Double[],java.lang.Double[],java.lang.Double[],java.lang.Double[],com.opengamma.analytics.math.interpolation.InterpolatorND)>(r0, r1, r2, r3, r4);

        return $r5;
    }

    public static com.opengamma.analytics.math.cube.InterpolatedDoublesCube 'from'(java.util.List, java.util.List, java.util.List, java.util.List, com.opengamma.analytics.math.interpolation.InterpolatorND)
    {
        java.util.List r0, r1, r2, r3;
        com.opengamma.analytics.math.interpolation.InterpolatorND r4;
        com.opengamma.analytics.math.cube.InterpolatedDoublesCube $r5;

        r0 := @parameter0: java.util.List;

        r1 := @parameter1: java.util.List;

        r2 := @parameter2: java.util.List;

        r3 := @parameter3: java.util.List;

        r4 := @parameter4: com.opengamma.analytics.math.interpolation.InterpolatorND;

        $r5 = new com.opengamma.analytics.math.cube.InterpolatedDoublesCube;

        specialinvoke $r5.<com.opengamma.analytics.math.cube.InterpolatedDoublesCube: void <init>(java.util.List,java.util.List,java.util.List,java.util.List,com.opengamma.analytics.math.interpolation.InterpolatorND)>(r0, r1, r2, r3, r4);

        return $r5;
    }

    public static com.opengamma.analytics.math.cube.InterpolatedDoublesCube 'from'(double[], double[], double[], double[], com.opengamma.analytics.math.interpolation.InterpolatorND, java.lang.String)
    {
        double[] r0, r1, r2, r3;
        com.opengamma.analytics.math.interpolation.InterpolatorND r4;
        java.lang.String r5;
        com.opengamma.analytics.math.cube.InterpolatedDoublesCube $r6;

        r0 := @parameter0: double[];

        r1 := @parameter1: double[];

        r2 := @parameter2: double[];

        r3 := @parameter3: double[];

        r4 := @parameter4: com.opengamma.analytics.math.interpolation.InterpolatorND;

        r5 := @parameter5: java.lang.String;

        $r6 = new com.opengamma.analytics.math.cube.InterpolatedDoublesCube;

        specialinvoke $r6.<com.opengamma.analytics.math.cube.InterpolatedDoublesCube: void <init>(double[],double[],double[],double[],com.opengamma.analytics.math.interpolation.InterpolatorND,java.lang.String)>(r0, r1, r2, r3, r4, r5);

        return $r6;
    }

    public static com.opengamma.analytics.math.cube.InterpolatedDoublesCube 'from'(java.lang.Double[], java.lang.Double[], java.lang.Double[], java.lang.Double[], com.opengamma.analytics.math.interpolation.InterpolatorND, java.lang.String)
    {
        java.lang.Double[] r0, r1, r2, r3;
        com.opengamma.analytics.math.interpolation.InterpolatorND r4;
        java.lang.String r5;
        com.opengamma.analytics.math.cube.InterpolatedDoublesCube $r6;

        r0 := @parameter0: java.lang.Double[];

        r1 := @parameter1: java.lang.Double[];

        r2 := @parameter2: java.lang.Double[];

        r3 := @parameter3: java.lang.Double[];

        r4 := @parameter4: com.opengamma.analytics.math.interpolation.InterpolatorND;

        r5 := @parameter5: java.lang.String;

        $r6 = new com.opengamma.analytics.math.cube.InterpolatedDoublesCube;

        specialinvoke $r6.<com.opengamma.analytics.math.cube.InterpolatedDoublesCube: void <init>(java.lang.Double[],java.lang.Double[],java.lang.Double[],java.lang.Double[],com.opengamma.analytics.math.interpolation.InterpolatorND,java.lang.String)>(r0, r1, r2, r3, r4, r5);

        return $r6;
    }

    public static com.opengamma.analytics.math.cube.InterpolatedDoublesCube 'from'(java.util.List, java.util.List, java.util.List, java.util.List, com.opengamma.analytics.math.interpolation.InterpolatorND, java.lang.String)
    {
        java.util.List r0, r1, r2, r3;
        com.opengamma.analytics.math.interpolation.InterpolatorND r4;
        java.lang.String r5;
        com.opengamma.analytics.math.cube.InterpolatedDoublesCube $r6;

        r0 := @parameter0: java.util.List;

        r1 := @parameter1: java.util.List;

        r2 := @parameter2: java.util.List;

        r3 := @parameter3: java.util.List;

        r4 := @parameter4: com.opengamma.analytics.math.interpolation.InterpolatorND;

        r5 := @parameter5: java.lang.String;

        $r6 = new com.opengamma.analytics.math.cube.InterpolatedDoublesCube;

        specialinvoke $r6.<com.opengamma.analytics.math.cube.InterpolatedDoublesCube: void <init>(java.util.List,java.util.List,java.util.List,java.util.List,com.opengamma.analytics.math.interpolation.InterpolatorND,java.lang.String)>(r0, r1, r2, r3, r4, r5);

        return $r6;
    }

    public void <init>(double[], double[], double[], double[], com.opengamma.analytics.math.interpolation.InterpolatorND)
    {
        com.opengamma.analytics.math.cube.InterpolatedDoublesCube r0;
        double[] r1, r2, r3, r4;
        com.opengamma.analytics.math.interpolation.InterpolatorND r5;

        r0 := @this: com.opengamma.analytics.math.cube.InterpolatedDoublesCube;

        r1 := @parameter0: double[];

        r2 := @parameter1: double[];

        r3 := @parameter2: double[];

        r4 := @parameter3: double[];

        r5 := @parameter4: com.opengamma.analytics.math.interpolation.InterpolatorND;

        specialinvoke r0.<com.opengamma.analytics.math.cube.DoublesCube: void <init>(double[],double[],double[],double[])>(r1, r2, r3, r4);

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object,java.lang.String)>(r5, "interpolator");

        r0.<com.opengamma.analytics.math.cube.InterpolatedDoublesCube: com.opengamma.analytics.math.interpolation.InterpolatorND _interpolator> = r5;

        specialinvoke r0.<com.opengamma.analytics.math.cube.InterpolatedDoublesCube: void init()>();

        return;
    }

    public void <init>(java.lang.Double[], java.lang.Double[], java.lang.Double[], java.lang.Double[], com.opengamma.analytics.math.interpolation.InterpolatorND)
    {
        com.opengamma.analytics.math.cube.InterpolatedDoublesCube r0;
        java.lang.Double[] r1, r2, r3, r4;
        com.opengamma.analytics.math.interpolation.InterpolatorND r5;

        r0 := @this: com.opengamma.analytics.math.cube.InterpolatedDoublesCube;

        r1 := @parameter0: java.lang.Double[];

        r2 := @parameter1: java.lang.Double[];

        r3 := @parameter2: java.lang.Double[];

        r4 := @parameter3: java.lang.Double[];

        r5 := @parameter4: com.opengamma.analytics.math.interpolation.InterpolatorND;

        specialinvoke r0.<com.opengamma.analytics.math.cube.DoublesCube: void <init>(java.lang.Double[],java.lang.Double[],java.lang.Double[],java.lang.Double[])>(r1, r2, r3, r4);

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object,java.lang.String)>(r5, "interpolator");

        r0.<com.opengamma.analytics.math.cube.InterpolatedDoublesCube: com.opengamma.analytics.math.interpolation.InterpolatorND _interpolator> = r5;

        specialinvoke r0.<com.opengamma.analytics.math.cube.InterpolatedDoublesCube: void init()>();

        return;
    }

    public void <init>(java.util.List, java.util.List, java.util.List, java.util.List, com.opengamma.analytics.math.interpolation.InterpolatorND)
    {
        com.opengamma.analytics.math.cube.InterpolatedDoublesCube r0;
        java.util.List r1, r2, r3, r4;
        com.opengamma.analytics.math.interpolation.InterpolatorND r5;

        r0 := @this: com.opengamma.analytics.math.cube.InterpolatedDoublesCube;

        r1 := @parameter0: java.util.List;

        r2 := @parameter1: java.util.List;

        r3 := @parameter2: java.util.List;

        r4 := @parameter3: java.util.List;

        r5 := @parameter4: com.opengamma.analytics.math.interpolation.InterpolatorND;

        specialinvoke r0.<com.opengamma.analytics.math.cube.DoublesCube: void <init>(java.util.List,java.util.List,java.util.List,java.util.List)>(r1, r2, r3, r4);

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object,java.lang.String)>(r5, "interpolator");

        r0.<com.opengamma.analytics.math.cube.InterpolatedDoublesCube: com.opengamma.analytics.math.interpolation.InterpolatorND _interpolator> = r5;

        specialinvoke r0.<com.opengamma.analytics.math.cube.InterpolatedDoublesCube: void init()>();

        return;
    }

    public void <init>(double[], double[], double[], double[], com.opengamma.analytics.math.interpolation.InterpolatorND, java.lang.String)
    {
        com.opengamma.analytics.math.cube.InterpolatedDoublesCube r0;
        double[] r1, r2, r3, r4;
        com.opengamma.analytics.math.interpolation.InterpolatorND r5;
        java.lang.String r6;

        r0 := @this: com.opengamma.analytics.math.cube.InterpolatedDoublesCube;

        r1 := @parameter0: double[];

        r2 := @parameter1: double[];

        r3 := @parameter2: double[];

        r4 := @parameter3: double[];

        r5 := @parameter4: com.opengamma.analytics.math.interpolation.InterpolatorND;

        r6 := @parameter5: java.lang.String;

        specialinvoke r0.<com.opengamma.analytics.math.cube.DoublesCube: void <init>(double[],double[],double[],double[],java.lang.String)>(r1, r2, r3, r4, r6);

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object,java.lang.String)>(r5, "interpolator");

        r0.<com.opengamma.analytics.math.cube.InterpolatedDoublesCube: com.opengamma.analytics.math.interpolation.InterpolatorND _interpolator> = r5;

        specialinvoke r0.<com.opengamma.analytics.math.cube.InterpolatedDoublesCube: void init()>();

        return;
    }

    public void <init>(java.lang.Double[], java.lang.Double[], java.lang.Double[], java.lang.Double[], com.opengamma.analytics.math.interpolation.InterpolatorND, java.lang.String)
    {
        com.opengamma.analytics.math.cube.InterpolatedDoublesCube r0;
        java.lang.Double[] r1, r2, r3, r4;
        com.opengamma.analytics.math.interpolation.InterpolatorND r5;
        java.lang.String r6;

        r0 := @this: com.opengamma.analytics.math.cube.InterpolatedDoublesCube;

        r1 := @parameter0: java.lang.Double[];

        r2 := @parameter1: java.lang.Double[];

        r3 := @parameter2: java.lang.Double[];

        r4 := @parameter3: java.lang.Double[];

        r5 := @parameter4: com.opengamma.analytics.math.interpolation.InterpolatorND;

        r6 := @parameter5: java.lang.String;

        specialinvoke r0.<com.opengamma.analytics.math.cube.DoublesCube: void <init>(java.lang.Double[],java.lang.Double[],java.lang.Double[],java.lang.Double[],java.lang.String)>(r1, r2, r3, r4, r6);

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object,java.lang.String)>(r5, "interpolator");

        r0.<com.opengamma.analytics.math.cube.InterpolatedDoublesCube: com.opengamma.analytics.math.interpolation.InterpolatorND _interpolator> = r5;

        specialinvoke r0.<com.opengamma.analytics.math.cube.InterpolatedDoublesCube: void init()>();

        return;
    }

    public void <init>(java.util.List, java.util.List, java.util.List, java.util.List, com.opengamma.analytics.math.interpolation.InterpolatorND, java.lang.String)
    {
        com.opengamma.analytics.math.cube.InterpolatedDoublesCube r0;
        java.util.List r1, r2, r3, r4;
        com.opengamma.analytics.math.interpolation.InterpolatorND r5;
        java.lang.String r6;

        r0 := @this: com.opengamma.analytics.math.cube.InterpolatedDoublesCube;

        r1 := @parameter0: java.util.List;

        r2 := @parameter1: java.util.List;

        r3 := @parameter2: java.util.List;

        r4 := @parameter3: java.util.List;

        r5 := @parameter4: com.opengamma.analytics.math.interpolation.InterpolatorND;

        r6 := @parameter5: java.lang.String;

        specialinvoke r0.<com.opengamma.analytics.math.cube.DoublesCube: void <init>(java.util.List,java.util.List,java.util.List,java.util.List,java.lang.String)>(r1, r2, r3, r4, r6);

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object,java.lang.String)>(r5, "interpolator");

        r0.<com.opengamma.analytics.math.cube.InterpolatedDoublesCube: com.opengamma.analytics.math.interpolation.InterpolatorND _interpolator> = r5;

        specialinvoke r0.<com.opengamma.analytics.math.cube.InterpolatedDoublesCube: void init()>();

        return;
    }

    private void init()
    {
        com.opengamma.analytics.math.cube.InterpolatedDoublesCube r0;
        com.opengamma.analytics.math.interpolation.InterpolatorND $r1;
        double[] $r2, $r3, $r4, $r5;
        com.opengamma.analytics.math.interpolation.data.InterpolatorNDDataBundle $r6;

        r0 := @this: com.opengamma.analytics.math.cube.InterpolatedDoublesCube;

        $r1 = r0.<com.opengamma.analytics.math.cube.InterpolatedDoublesCube: com.opengamma.analytics.math.interpolation.InterpolatorND _interpolator>;

        $r2 = virtualinvoke r0.<com.opengamma.analytics.math.cube.InterpolatedDoublesCube: double[] getXDataAsPrimitive()>();

        $r3 = virtualinvoke r0.<com.opengamma.analytics.math.cube.InterpolatedDoublesCube: double[] getYDataAsPrimitive()>();

        $r4 = virtualinvoke r0.<com.opengamma.analytics.math.cube.InterpolatedDoublesCube: double[] getZDataAsPrimitive()>();

        $r5 = virtualinvoke r0.<com.opengamma.analytics.math.cube.InterpolatedDoublesCube: double[] getValuesAsPrimitive()>();

        $r6 = virtualinvoke $r1.<com.opengamma.analytics.math.interpolation.InterpolatorND: com.opengamma.analytics.math.interpolation.data.InterpolatorNDDataBundle getDataBundle(double[],double[],double[],double[])>($r2, $r3, $r4, $r5);

        r0.<com.opengamma.analytics.math.cube.InterpolatedDoublesCube: com.opengamma.analytics.math.interpolation.data.InterpolatorNDDataBundle _dataBundle> = $r6;

        return;
    }

    public java.lang.Double getValue(java.lang.Double, java.lang.Double, java.lang.Double)
    {
        com.opengamma.analytics.math.cube.InterpolatedDoublesCube r0;
        java.lang.Double r1, r2, r3, $r7;
        double[] $r4;
        com.opengamma.analytics.math.interpolation.InterpolatorND $r5;
        com.opengamma.analytics.math.interpolation.data.InterpolatorNDDataBundle $r6;
        double $d0, $d1, $d2;

        r0 := @this: com.opengamma.analytics.math.cube.InterpolatedDoublesCube;

        r1 := @parameter0: java.lang.Double;

        r2 := @parameter1: java.lang.Double;

        r3 := @parameter2: java.lang.Double;

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object,java.lang.String)>(r1, "x");

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object,java.lang.String)>(r2, "y");

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object,java.lang.String)>(r3, "z");

        $r5 = r0.<com.opengamma.analytics.math.cube.InterpolatedDoublesCube: com.opengamma.analytics.math.interpolation.InterpolatorND _interpolator>;

        $r6 = r0.<com.opengamma.analytics.math.cube.InterpolatedDoublesCube: com.opengamma.analytics.math.interpolation.data.InterpolatorNDDataBundle _dataBundle>;

        $r4 = newarray (double)[3];

        $d0 = virtualinvoke r1.<java.lang.Double: double doubleValue()>();

        $r4[0] = $d0;

        $d1 = virtualinvoke r2.<java.lang.Double: double doubleValue()>();

        $r4[1] = $d1;

        $d2 = virtualinvoke r3.<java.lang.Double: double doubleValue()>();

        $r4[2] = $d2;

        $r7 = virtualinvoke $r5.<com.opengamma.analytics.math.interpolation.InterpolatorND: java.lang.Double interpolate(com.opengamma.analytics.math.interpolation.data.InterpolatorNDDataBundle,double[])>($r6, $r4);

        return $r7;
    }

    public java.lang.Double getValue(com.opengamma.util.tuple.Triple)
    {
        com.opengamma.analytics.math.cube.InterpolatedDoublesCube r0;
        com.opengamma.util.tuple.Triple r1;
        java.lang.Double r2, r3, r4, $r11;
        java.lang.Object $r5, $r6, $r7;
        double[] $r8;
        com.opengamma.analytics.math.interpolation.InterpolatorND $r9;
        com.opengamma.analytics.math.interpolation.data.InterpolatorNDDataBundle $r10;
        double $d0, $d1, $d2;

        r0 := @this: com.opengamma.analytics.math.cube.InterpolatedDoublesCube;

        r1 := @parameter0: com.opengamma.util.tuple.Triple;

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object,java.lang.String)>(r1, "xyz");

        $r5 = virtualinvoke r1.<com.opengamma.util.tuple.Triple: java.lang.Object getFirst()>();

        r2 = (java.lang.Double) $r5;

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object,java.lang.String)>(r2, "x");

        $r6 = virtualinvoke r1.<com.opengamma.util.tuple.Triple: java.lang.Object getSecond()>();

        r3 = (java.lang.Double) $r6;

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object,java.lang.String)>(r3, "y");

        $r7 = virtualinvoke r1.<com.opengamma.util.tuple.Triple: java.lang.Object getThird()>();

        r4 = (java.lang.Double) $r7;

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object,java.lang.String)>(r4, "z");

        $r9 = r0.<com.opengamma.analytics.math.cube.InterpolatedDoublesCube: com.opengamma.analytics.math.interpolation.InterpolatorND _interpolator>;

        $r10 = r0.<com.opengamma.analytics.math.cube.InterpolatedDoublesCube: com.opengamma.analytics.math.interpolation.data.InterpolatorNDDataBundle _dataBundle>;

        $r8 = newarray (double)[3];

        $d0 = virtualinvoke r2.<java.lang.Double: double doubleValue()>();

        $r8[0] = $d0;

        $d1 = virtualinvoke r3.<java.lang.Double: double doubleValue()>();

        $r8[1] = $d1;

        $d2 = virtualinvoke r4.<java.lang.Double: double doubleValue()>();

        $r8[2] = $d2;

        $r11 = virtualinvoke $r9.<com.opengamma.analytics.math.interpolation.InterpolatorND: java.lang.Double interpolate(com.opengamma.analytics.math.interpolation.data.InterpolatorNDDataBundle,double[])>($r10, $r8);

        return $r11;
    }

    public com.opengamma.analytics.math.interpolation.InterpolatorND getInterpolator()
    {
        com.opengamma.analytics.math.cube.InterpolatedDoublesCube r0;
        com.opengamma.analytics.math.interpolation.InterpolatorND $r1;

        r0 := @this: com.opengamma.analytics.math.cube.InterpolatedDoublesCube;

        $r1 = r0.<com.opengamma.analytics.math.cube.InterpolatedDoublesCube: com.opengamma.analytics.math.interpolation.InterpolatorND _interpolator>;

        return $r1;
    }

    public int hashCode()
    {
        com.opengamma.analytics.math.cube.InterpolatedDoublesCube r0;
        com.opengamma.analytics.math.interpolation.InterpolatorND $r1;
        int $i1, $i2, i3, i4;

        r0 := @this: com.opengamma.analytics.math.cube.InterpolatedDoublesCube;

        i3 = specialinvoke r0.<com.opengamma.analytics.math.cube.DoublesCube: int hashCode()>();

        $i1 = 31 * i3;

        $r1 = r0.<com.opengamma.analytics.math.cube.InterpolatedDoublesCube: com.opengamma.analytics.math.interpolation.InterpolatorND _interpolator>;

        $i2 = virtualinvoke $r1.<java.lang.Object: int hashCode()>();

        i4 = $i1 + $i2;

        return i4;
    }

    public boolean equals(java.lang.Object)
    {
        com.opengamma.analytics.math.cube.InterpolatedDoublesCube r0, r2;
        java.lang.Object r1;
        boolean $z0, $z1;
        java.lang.Class $r3, $r4;
        com.opengamma.analytics.math.interpolation.InterpolatorND $r5, $r6;

        r0 := @this: com.opengamma.analytics.math.cube.InterpolatedDoublesCube;

        r1 := @parameter0: java.lang.Object;

        if r0 != r1 goto label1;

        return 1;

     label1:
        $z0 = specialinvoke r0.<com.opengamma.analytics.math.cube.DoublesCube: boolean equals(java.lang.Object)>(r1);

        if $z0 != 0 goto label2;

        return 0;

     label2:
        $r3 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r4 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        if $r3 == $r4 goto label3;

        return 0;

     label3:
        r2 = (com.opengamma.analytics.math.cube.InterpolatedDoublesCube) r1;

        $r6 = r0.<com.opengamma.analytics.math.cube.InterpolatedDoublesCube: com.opengamma.analytics.math.interpolation.InterpolatorND _interpolator>;

        $r5 = r2.<com.opengamma.analytics.math.cube.InterpolatedDoublesCube: com.opengamma.analytics.math.interpolation.InterpolatorND _interpolator>;

        $z1 = staticinvoke <org.apache.commons.lang.ObjectUtils: boolean equals(java.lang.Object,java.lang.Object)>($r6, $r5);

        return $z1;
    }

    public volatile java.lang.Object getValue(com.opengamma.util.tuple.Triple)
    {
        com.opengamma.analytics.math.cube.InterpolatedDoublesCube r0;
        com.opengamma.util.tuple.Triple r1;
        java.lang.Double $r2;

        r0 := @this: com.opengamma.analytics.math.cube.InterpolatedDoublesCube;

        r1 := @parameter0: com.opengamma.util.tuple.Triple;

        $r2 = virtualinvoke r0.<com.opengamma.analytics.math.cube.InterpolatedDoublesCube: java.lang.Double getValue(com.opengamma.util.tuple.Triple)>(r1);

        return $r2;
    }

    public volatile java.lang.Object getValue(java.lang.Object, java.lang.Object, java.lang.Object)
    {
        com.opengamma.analytics.math.cube.InterpolatedDoublesCube r0;
        java.lang.Object r1, r2, r3;
        java.lang.Double $r4, $r5, $r6, $r7;

        r0 := @this: com.opengamma.analytics.math.cube.InterpolatedDoublesCube;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        r3 := @parameter2: java.lang.Object;

        $r6 = (java.lang.Double) r1;

        $r5 = (java.lang.Double) r2;

        $r4 = (java.lang.Double) r3;

        $r7 = virtualinvoke r0.<com.opengamma.analytics.math.cube.InterpolatedDoublesCube: java.lang.Double getValue(java.lang.Double,java.lang.Double,java.lang.Double)>($r6, $r5, $r4);

        return $r7;
    }
}
