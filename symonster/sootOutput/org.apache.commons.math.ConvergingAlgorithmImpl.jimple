public abstract class org.apache.commons.math.ConvergingAlgorithmImpl extends java.lang.Object implements org.apache.commons.math.ConvergingAlgorithm
{
    protected double absoluteAccuracy;
    protected double relativeAccuracy;
    protected int maximalIterationCount;
    protected double defaultAbsoluteAccuracy;
    protected double defaultRelativeAccuracy;
    protected int defaultMaximalIterationCount;
    protected int iterationCount;

    protected void <init>(int, double)
    {
        org.apache.commons.math.ConvergingAlgorithmImpl r0;
        int i0;
        double d0, $d1;

        r0 := @this: org.apache.commons.math.ConvergingAlgorithmImpl;

        i0 := @parameter0: int;

        d0 := @parameter1: double;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.commons.math.ConvergingAlgorithmImpl: double defaultAbsoluteAccuracy> = d0;

        r0.<org.apache.commons.math.ConvergingAlgorithmImpl: double defaultRelativeAccuracy> = 1.0E-14;

        r0.<org.apache.commons.math.ConvergingAlgorithmImpl: double absoluteAccuracy> = d0;

        $d1 = r0.<org.apache.commons.math.ConvergingAlgorithmImpl: double defaultRelativeAccuracy>;

        r0.<org.apache.commons.math.ConvergingAlgorithmImpl: double relativeAccuracy> = $d1;

        r0.<org.apache.commons.math.ConvergingAlgorithmImpl: int defaultMaximalIterationCount> = i0;

        r0.<org.apache.commons.math.ConvergingAlgorithmImpl: int maximalIterationCount> = i0;

        r0.<org.apache.commons.math.ConvergingAlgorithmImpl: int iterationCount> = 0;

        return;
    }

    protected void <init>()
    {
        org.apache.commons.math.ConvergingAlgorithmImpl r0;

        r0 := @this: org.apache.commons.math.ConvergingAlgorithmImpl;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public int getIterationCount()
    {
        org.apache.commons.math.ConvergingAlgorithmImpl r0;
        int $i0;

        r0 := @this: org.apache.commons.math.ConvergingAlgorithmImpl;

        $i0 = r0.<org.apache.commons.math.ConvergingAlgorithmImpl: int iterationCount>;

        return $i0;
    }

    public void setAbsoluteAccuracy(double)
    {
        org.apache.commons.math.ConvergingAlgorithmImpl r0;
        double d0;

        r0 := @this: org.apache.commons.math.ConvergingAlgorithmImpl;

        d0 := @parameter0: double;

        r0.<org.apache.commons.math.ConvergingAlgorithmImpl: double absoluteAccuracy> = d0;

        return;
    }

    public double getAbsoluteAccuracy()
    {
        org.apache.commons.math.ConvergingAlgorithmImpl r0;
        double $d0;

        r0 := @this: org.apache.commons.math.ConvergingAlgorithmImpl;

        $d0 = r0.<org.apache.commons.math.ConvergingAlgorithmImpl: double absoluteAccuracy>;

        return $d0;
    }

    public void resetAbsoluteAccuracy()
    {
        org.apache.commons.math.ConvergingAlgorithmImpl r0;
        double $d0;

        r0 := @this: org.apache.commons.math.ConvergingAlgorithmImpl;

        $d0 = r0.<org.apache.commons.math.ConvergingAlgorithmImpl: double defaultAbsoluteAccuracy>;

        r0.<org.apache.commons.math.ConvergingAlgorithmImpl: double absoluteAccuracy> = $d0;

        return;
    }

    public void setMaximalIterationCount(int)
    {
        org.apache.commons.math.ConvergingAlgorithmImpl r0;
        int i0;

        r0 := @this: org.apache.commons.math.ConvergingAlgorithmImpl;

        i0 := @parameter0: int;

        r0.<org.apache.commons.math.ConvergingAlgorithmImpl: int maximalIterationCount> = i0;

        return;
    }

    public int getMaximalIterationCount()
    {
        org.apache.commons.math.ConvergingAlgorithmImpl r0;
        int $i0;

        r0 := @this: org.apache.commons.math.ConvergingAlgorithmImpl;

        $i0 = r0.<org.apache.commons.math.ConvergingAlgorithmImpl: int maximalIterationCount>;

        return $i0;
    }

    public void resetMaximalIterationCount()
    {
        org.apache.commons.math.ConvergingAlgorithmImpl r0;
        int $i0;

        r0 := @this: org.apache.commons.math.ConvergingAlgorithmImpl;

        $i0 = r0.<org.apache.commons.math.ConvergingAlgorithmImpl: int defaultMaximalIterationCount>;

        r0.<org.apache.commons.math.ConvergingAlgorithmImpl: int maximalIterationCount> = $i0;

        return;
    }

    public void setRelativeAccuracy(double)
    {
        org.apache.commons.math.ConvergingAlgorithmImpl r0;
        double d0;

        r0 := @this: org.apache.commons.math.ConvergingAlgorithmImpl;

        d0 := @parameter0: double;

        r0.<org.apache.commons.math.ConvergingAlgorithmImpl: double relativeAccuracy> = d0;

        return;
    }

    public double getRelativeAccuracy()
    {
        org.apache.commons.math.ConvergingAlgorithmImpl r0;
        double $d0;

        r0 := @this: org.apache.commons.math.ConvergingAlgorithmImpl;

        $d0 = r0.<org.apache.commons.math.ConvergingAlgorithmImpl: double relativeAccuracy>;

        return $d0;
    }

    public void resetRelativeAccuracy()
    {
        org.apache.commons.math.ConvergingAlgorithmImpl r0;
        double $d0;

        r0 := @this: org.apache.commons.math.ConvergingAlgorithmImpl;

        $d0 = r0.<org.apache.commons.math.ConvergingAlgorithmImpl: double defaultRelativeAccuracy>;

        r0.<org.apache.commons.math.ConvergingAlgorithmImpl: double relativeAccuracy> = $d0;

        return;
    }

    protected void resetIterationsCounter()
    {
        org.apache.commons.math.ConvergingAlgorithmImpl r0;

        r0 := @this: org.apache.commons.math.ConvergingAlgorithmImpl;

        r0.<org.apache.commons.math.ConvergingAlgorithmImpl: int iterationCount> = 0;

        return;
    }

    protected void incrementIterationsCounter() throws org.apache.commons.math.MaxIterationsExceededException
    {
        org.apache.commons.math.ConvergingAlgorithmImpl r0;
        int $i0, $i1, $i2, $i3;
        org.apache.commons.math.MaxIterationsExceededException $r1;

        r0 := @this: org.apache.commons.math.ConvergingAlgorithmImpl;

        $i0 = r0.<org.apache.commons.math.ConvergingAlgorithmImpl: int iterationCount>;

        $i1 = $i0 + 1;

        r0.<org.apache.commons.math.ConvergingAlgorithmImpl: int iterationCount> = $i1;

        $i2 = r0.<org.apache.commons.math.ConvergingAlgorithmImpl: int maximalIterationCount>;

        if $i1 <= $i2 goto label1;

        $r1 = new org.apache.commons.math.MaxIterationsExceededException;

        $i3 = r0.<org.apache.commons.math.ConvergingAlgorithmImpl: int maximalIterationCount>;

        specialinvoke $r1.<org.apache.commons.math.MaxIterationsExceededException: void <init>(int)>($i3);

        throw $r1;

     label1:
        return;
    }
}
