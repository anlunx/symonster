class com.opengamma.analytics.math.statistics.estimation.GeneralizedParetoDistributionMomentEstimator$1 extends com.opengamma.analytics.math.function.Function1D
{
    final double val$skewness;
    final com.opengamma.analytics.math.statistics.estimation.GeneralizedParetoDistributionMomentEstimator this$0;

    void <init>(com.opengamma.analytics.math.statistics.estimation.GeneralizedParetoDistributionMomentEstimator, double)
    {
        com.opengamma.analytics.math.statistics.estimation.GeneralizedParetoDistributionMomentEstimator$1 r0;
        com.opengamma.analytics.math.statistics.estimation.GeneralizedParetoDistributionMomentEstimator r1;
        double d0;

        r0 := @this: com.opengamma.analytics.math.statistics.estimation.GeneralizedParetoDistributionMomentEstimator$1;

        r1 := @parameter0: com.opengamma.analytics.math.statistics.estimation.GeneralizedParetoDistributionMomentEstimator;

        d0 := @parameter1: double;

        r0.<com.opengamma.analytics.math.statistics.estimation.GeneralizedParetoDistributionMomentEstimator$1: com.opengamma.analytics.math.statistics.estimation.GeneralizedParetoDistributionMomentEstimator this$0> = r1;

        r0.<com.opengamma.analytics.math.statistics.estimation.GeneralizedParetoDistributionMomentEstimator$1: double val$skewness> = d0;

        specialinvoke r0.<com.opengamma.analytics.math.function.Function1D: void <init>()>();

        return;
    }

    public java.lang.Double evaluate(java.lang.Double)
    {
        com.opengamma.analytics.math.statistics.estimation.GeneralizedParetoDistributionMomentEstimator$1 r0;
        java.lang.Double r1, $r2;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13;

        r0 := @this: com.opengamma.analytics.math.statistics.estimation.GeneralizedParetoDistributionMomentEstimator$1;

        r1 := @parameter0: java.lang.Double;

        $d0 = virtualinvoke r1.<java.lang.Double: double doubleValue()>();

        $d1 = 1.0 + $d0;

        $d2 = 2.0 * $d1;

        $d3 = virtualinvoke r1.<java.lang.Double: double doubleValue()>();

        $d4 = 2.0 * $d3;

        $d5 = 1.0 - $d4;

        $d6 = staticinvoke <java.lang.Math: double sqrt(double)>($d5);

        $d7 = $d2 * $d6;

        $d8 = virtualinvoke r1.<java.lang.Double: double doubleValue()>();

        $d9 = 3.0 * $d8;

        $d10 = 1.0 - $d9;

        $d12 = $d7 / $d10;

        $d11 = r0.<com.opengamma.analytics.math.statistics.estimation.GeneralizedParetoDistributionMomentEstimator$1: double val$skewness>;

        $d13 = $d12 - $d11;

        $r2 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d13);

        return $r2;
    }

    public volatile java.lang.Object evaluate(java.lang.Object)
    {
        com.opengamma.analytics.math.statistics.estimation.GeneralizedParetoDistributionMomentEstimator$1 r0;
        java.lang.Object r1;
        java.lang.Double $r2, $r3;

        r0 := @this: com.opengamma.analytics.math.statistics.estimation.GeneralizedParetoDistributionMomentEstimator$1;

        r1 := @parameter0: java.lang.Object;

        $r2 = (java.lang.Double) r1;

        $r3 = virtualinvoke r0.<com.opengamma.analytics.math.statistics.estimation.GeneralizedParetoDistributionMomentEstimator$1: java.lang.Double evaluate(java.lang.Double)>($r2);

        return $r3;
    }
}
