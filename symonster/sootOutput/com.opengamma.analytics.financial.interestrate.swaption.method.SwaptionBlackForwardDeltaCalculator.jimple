public class com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionBlackForwardDeltaCalculator extends com.opengamma.analytics.financial.interestrate.InstrumentDerivativeVisitorAdapter
{
    private static final com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionBlackForwardDeltaCalculator INSTANCE;
    private static final com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionPhysicalFixedIborBlackMethod PHYSICAL_SWAPTION;
    private static final com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionCashFixedIborBlackMethod CASH_SWAPTION;
    private static final com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionPhysicalFixedCompoundedONCompoundedBlackMethod PHYSICAL_COMPOUNDED_SWAPTION;

    public static com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionBlackForwardDeltaCalculator getInstance()
    {
        com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionBlackForwardDeltaCalculator $r0;

        $r0 = <com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionBlackForwardDeltaCalculator: com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionBlackForwardDeltaCalculator INSTANCE>;

        return $r0;
    }

    void <init>()
    {
        com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionBlackForwardDeltaCalculator r0;

        r0 := @this: com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionBlackForwardDeltaCalculator;

        specialinvoke r0.<com.opengamma.analytics.financial.interestrate.InstrumentDerivativeVisitorAdapter: void <init>()>();

        return;
    }

    public java.lang.Double visitSwaptionCashFixedIbor(com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionCashFixedIbor, com.opengamma.analytics.financial.interestrate.YieldCurveBundle)
    {
        com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionBlackForwardDeltaCalculator r0;
        com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionCashFixedIbor r1;
        com.opengamma.analytics.financial.interestrate.YieldCurveBundle r2;
        com.opengamma.analytics.financial.model.option.definition.YieldCurveWithBlackSwaptionBundle r3;
        boolean $z0;
        java.lang.UnsupportedOperationException $r6;
        com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionCashFixedIborBlackMethod $r7;
        double $d0;
        java.lang.Double $r8;

        r0 := @this: com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionBlackForwardDeltaCalculator;

        r1 := @parameter0: com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionCashFixedIbor;

        r2 := @parameter1: com.opengamma.analytics.financial.interestrate.YieldCurveBundle;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "swaption");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, "curves");

        $z0 = r2 instanceof com.opengamma.analytics.financial.model.option.definition.YieldCurveWithBlackSwaptionBundle;

        if $z0 == 0 goto label1;

        r3 = (com.opengamma.analytics.financial.model.option.definition.YieldCurveWithBlackSwaptionBundle) r2;

        $r7 = <com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionBlackForwardDeltaCalculator: com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionCashFixedIborBlackMethod CASH_SWAPTION>;

        $d0 = virtualinvoke $r7.<com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionCashFixedIborBlackMethod: double forwardDeltaTheoretical(com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionCashFixedIbor,com.opengamma.analytics.financial.model.option.definition.YieldCurveWithBlackSwaptionBundle)>(r1, r3);

        $r8 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        return $r8;

     label1:
        $r6 = new java.lang.UnsupportedOperationException;

        specialinvoke $r6.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("The SwaptionBlackForwardDeltaCalculator visitor visitSwaptionCashFixedIbor requires a YieldCurveWithBlackSwaptionBundle as data.");

        throw $r6;
    }

    public java.lang.Double visitSwaptionPhysicalFixedIbor(com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionPhysicalFixedIbor, com.opengamma.analytics.financial.interestrate.YieldCurveBundle)
    {
        com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionBlackForwardDeltaCalculator r0;
        com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionPhysicalFixedIbor r1;
        com.opengamma.analytics.financial.interestrate.YieldCurveBundle r2;
        com.opengamma.analytics.financial.model.option.definition.YieldCurveWithBlackSwaptionBundle r3;
        boolean $z0;
        java.lang.UnsupportedOperationException $r6;
        com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionPhysicalFixedIborBlackMethod $r7;
        double $d0;
        java.lang.Double $r8;

        r0 := @this: com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionBlackForwardDeltaCalculator;

        r1 := @parameter0: com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionPhysicalFixedIbor;

        r2 := @parameter1: com.opengamma.analytics.financial.interestrate.YieldCurveBundle;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "swaption");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, "curves");

        $z0 = r2 instanceof com.opengamma.analytics.financial.model.option.definition.YieldCurveWithBlackSwaptionBundle;

        if $z0 == 0 goto label1;

        r3 = (com.opengamma.analytics.financial.model.option.definition.YieldCurveWithBlackSwaptionBundle) r2;

        $r7 = <com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionBlackForwardDeltaCalculator: com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionPhysicalFixedIborBlackMethod PHYSICAL_SWAPTION>;

        $d0 = virtualinvoke $r7.<com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionPhysicalFixedIborBlackMethod: double forwardDeltaTheoretical(com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionPhysicalFixedIbor,com.opengamma.analytics.financial.model.option.definition.YieldCurveWithBlackSwaptionBundle)>(r1, r3);

        $r8 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        return $r8;

     label1:
        $r6 = new java.lang.UnsupportedOperationException;

        specialinvoke $r6.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("The SwaptionBlackForwardDeltaCalculator visitor visitSwaptionPhysicalFixedIbor requires a YieldCurveWithBlackSwaptionBundle as data.");

        throw $r6;
    }

    public java.lang.Double visitSwaptionPhysicalFixedCompoundedONCompounded(com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionPhysicalFixedCompoundedONCompounded, com.opengamma.analytics.financial.interestrate.YieldCurveBundle)
    {
        com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionBlackForwardDeltaCalculator r0;
        com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionPhysicalFixedCompoundedONCompounded r1;
        com.opengamma.analytics.financial.interestrate.YieldCurveBundle r2;
        com.opengamma.analytics.financial.model.option.definition.YieldCurveWithBlackSwaptionBundle r3;
        boolean $z0;
        java.lang.UnsupportedOperationException $r6;
        com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionPhysicalFixedCompoundedONCompoundedBlackMethod $r7;
        double $d0;
        java.lang.Double $r8;

        r0 := @this: com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionBlackForwardDeltaCalculator;

        r1 := @parameter0: com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionPhysicalFixedCompoundedONCompounded;

        r2 := @parameter1: com.opengamma.analytics.financial.interestrate.YieldCurveBundle;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "swaption");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, "curves");

        $z0 = r2 instanceof com.opengamma.analytics.financial.model.option.definition.YieldCurveWithBlackSwaptionBundle;

        if $z0 == 0 goto label1;

        r3 = (com.opengamma.analytics.financial.model.option.definition.YieldCurveWithBlackSwaptionBundle) r2;

        $r7 = <com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionBlackForwardDeltaCalculator: com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionPhysicalFixedCompoundedONCompoundedBlackMethod PHYSICAL_COMPOUNDED_SWAPTION>;

        $d0 = virtualinvoke $r7.<com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionPhysicalFixedCompoundedONCompoundedBlackMethod: double forwardDeltaTheoretical(com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionPhysicalFixedCompoundedONCompounded,com.opengamma.analytics.financial.model.option.definition.YieldCurveWithBlackSwaptionBundle)>(r1, r3);

        $r8 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        return $r8;

     label1:
        $r6 = new java.lang.UnsupportedOperationException;

        specialinvoke $r6.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("The SwaptionBlackForwardDeltaCalculator visitor visitSwaptionPhysicalFixedCompoundedONCompounded requires a YieldCurveWithBlackSwaptionBundle as data.");

        throw $r6;
    }

    public volatile java.lang.Object visitSwaptionPhysicalFixedCompoundedONCompounded(com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionPhysicalFixedCompoundedONCompounded, java.lang.Object)
    {
        com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionBlackForwardDeltaCalculator r0;
        com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionPhysicalFixedCompoundedONCompounded r1;
        java.lang.Object r2;
        com.opengamma.analytics.financial.interestrate.YieldCurveBundle $r3;
        java.lang.Double $r4;

        r0 := @this: com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionBlackForwardDeltaCalculator;

        r1 := @parameter0: com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionPhysicalFixedCompoundedONCompounded;

        r2 := @parameter1: java.lang.Object;

        $r3 = (com.opengamma.analytics.financial.interestrate.YieldCurveBundle) r2;

        $r4 = virtualinvoke r0.<com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionBlackForwardDeltaCalculator: java.lang.Double visitSwaptionPhysicalFixedCompoundedONCompounded(com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionPhysicalFixedCompoundedONCompounded,com.opengamma.analytics.financial.interestrate.YieldCurveBundle)>(r1, $r3);

        return $r4;
    }

    public volatile java.lang.Object visitSwaptionPhysicalFixedIbor(com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionPhysicalFixedIbor, java.lang.Object)
    {
        com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionBlackForwardDeltaCalculator r0;
        com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionPhysicalFixedIbor r1;
        java.lang.Object r2;
        com.opengamma.analytics.financial.interestrate.YieldCurveBundle $r3;
        java.lang.Double $r4;

        r0 := @this: com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionBlackForwardDeltaCalculator;

        r1 := @parameter0: com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionPhysicalFixedIbor;

        r2 := @parameter1: java.lang.Object;

        $r3 = (com.opengamma.analytics.financial.interestrate.YieldCurveBundle) r2;

        $r4 = virtualinvoke r0.<com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionBlackForwardDeltaCalculator: java.lang.Double visitSwaptionPhysicalFixedIbor(com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionPhysicalFixedIbor,com.opengamma.analytics.financial.interestrate.YieldCurveBundle)>(r1, $r3);

        return $r4;
    }

    public volatile java.lang.Object visitSwaptionCashFixedIbor(com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionCashFixedIbor, java.lang.Object)
    {
        com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionBlackForwardDeltaCalculator r0;
        com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionCashFixedIbor r1;
        java.lang.Object r2;
        com.opengamma.analytics.financial.interestrate.YieldCurveBundle $r3;
        java.lang.Double $r4;

        r0 := @this: com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionBlackForwardDeltaCalculator;

        r1 := @parameter0: com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionCashFixedIbor;

        r2 := @parameter1: java.lang.Object;

        $r3 = (com.opengamma.analytics.financial.interestrate.YieldCurveBundle) r2;

        $r4 = virtualinvoke r0.<com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionBlackForwardDeltaCalculator: java.lang.Double visitSwaptionCashFixedIbor(com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionCashFixedIbor,com.opengamma.analytics.financial.interestrate.YieldCurveBundle)>(r1, $r3);

        return $r4;
    }

    static void <clinit>()
    {
        com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionBlackForwardDeltaCalculator $r0;
        com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionPhysicalFixedIborBlackMethod $r1;
        com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionCashFixedIborBlackMethod $r2;
        com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionPhysicalFixedCompoundedONCompoundedBlackMethod $r3;

        $r0 = new com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionBlackForwardDeltaCalculator;

        specialinvoke $r0.<com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionBlackForwardDeltaCalculator: void <init>()>();

        <com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionBlackForwardDeltaCalculator: com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionBlackForwardDeltaCalculator INSTANCE> = $r0;

        $r1 = staticinvoke <com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionPhysicalFixedIborBlackMethod: com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionPhysicalFixedIborBlackMethod getInstance()>();

        <com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionBlackForwardDeltaCalculator: com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionPhysicalFixedIborBlackMethod PHYSICAL_SWAPTION> = $r1;

        $r2 = staticinvoke <com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionCashFixedIborBlackMethod: com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionCashFixedIborBlackMethod getInstance()>();

        <com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionBlackForwardDeltaCalculator: com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionCashFixedIborBlackMethod CASH_SWAPTION> = $r2;

        $r3 = staticinvoke <com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionPhysicalFixedCompoundedONCompoundedBlackMethod: com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionPhysicalFixedCompoundedONCompoundedBlackMethod getInstance()>();

        <com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionBlackForwardDeltaCalculator: com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionPhysicalFixedCompoundedONCompoundedBlackMethod PHYSICAL_COMPOUNDED_SWAPTION> = $r3;

        return;
    }
}
