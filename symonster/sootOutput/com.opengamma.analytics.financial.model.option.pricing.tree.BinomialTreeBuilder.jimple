public abstract class com.opengamma.analytics.financial.model.option.pricing.tree.BinomialTreeBuilder extends java.lang.Object
{

    public void <init>()
    {
        com.opengamma.analytics.financial.model.option.pricing.tree.BinomialTreeBuilder r0;

        r0 := @this: com.opengamma.analytics.financial.model.option.pricing.tree.BinomialTreeBuilder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public com.opengamma.analytics.financial.model.tree.RecombiningBinomialTree buildAssetTree(double, com.opengamma.analytics.financial.model.option.definition.StandardOptionDataBundle, int)
    {
        com.opengamma.analytics.financial.model.option.pricing.tree.BinomialTreeBuilder r0;
        double d0, d1, d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21, $d22, $d23, $d24, $d25, d27, d28, d29, d30, d31, d32;
        com.opengamma.analytics.financial.model.option.definition.StandardOptionDataBundle r1;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i11, $i15, $i16, $i17, $i18, i19, i20, i21, i22, i23, i24, i25, i26, i27;
        com.opengamma.analytics.financial.model.option.pricing.tree.BinomialTreeNode[][] r2;
        double[] r3, r4, r14;
        com.opengamma.analytics.financial.model.option.pricing.tree.BinomialTreeNode[] $r5, $r8, $r10, $r12;
        com.opengamma.analytics.financial.model.tree.RecombiningBinomialTree $r6;
        com.opengamma.analytics.financial.model.option.pricing.tree.BinomialTreeNode $r7, $r11;
        java.lang.Double $r9, $r13;
        byte $b10, $b14;
        long $l12, $l13;
        com.opengamma.util.tuple.DoublesPair r15;
        boolean $z0;

        r0 := @this: com.opengamma.analytics.financial.model.option.pricing.tree.BinomialTreeBuilder;

        d0 := @parameter0: double;

        r1 := @parameter1: com.opengamma.analytics.financial.model.option.definition.StandardOptionDataBundle;

        i0 := @parameter2: int;

        $i1 = i0 + 1;

        r2 = newarray (com.opengamma.analytics.financial.model.option.pricing.tree.BinomialTreeNode[])[$i1];

        d1 = virtualinvoke r1.<com.opengamma.analytics.financial.model.option.definition.StandardOptionDataBundle: double getSpot()>();

        $d3 = (double) i0;

        d2 = d0 / $d3;

        r14 = newarray (double)[1];

        r14[0] = d1;

        i19 = 1;

     label01:
        if i19 > i0 goto label14;

        $i3 = i19 - 1;

        $d5 = (double) $i3;

        d27 = $d5 * d2;

        r3 = virtualinvoke r0.<com.opengamma.analytics.financial.model.option.pricing.tree.BinomialTreeBuilder: double[] getForwards(double[],com.opengamma.analytics.financial.model.option.definition.StandardOptionDataBundle,double,double)>(r14, r1, d27, d2);

        $i4 = i19 + 1;

        r4 = newarray (double)[$i4];

        $i5 = i19 % 2;

        if $i5 != 0 goto label02;

        i20 = i19 / 2;

        i21 = i20 + 1;

        i22 = i20 - 1;

        r4[i20] = d1;

        goto label03;

     label02:
        $i6 = i19 - 1;

        i23 = $i6 / 2;

        i21 = i23 + 2;

        i22 = i23 - 1;

        $d6 = r14[i23];

        d28 = virtualinvoke r1.<com.opengamma.analytics.financial.model.option.definition.StandardOptionDataBundle: double getVolatility(double,double)>(d27, $d6);

        $d7 = r3[i23];

        r15 = virtualinvoke r0.<com.opengamma.analytics.financial.model.option.pricing.tree.BinomialTreeBuilder: com.opengamma.util.tuple.DoublesPair getCentralNodePair(double,double,double,double)>(d2, d28, $d7, d1);

        $d8 = r15.<com.opengamma.util.tuple.DoublesPair: double first>;

        r4[i23] = $d8;

        $i7 = i23 + 1;

        $d9 = r15.<com.opengamma.util.tuple.DoublesPair: double second>;

        r4[$i7] = $d9;

     label03:
        i24 = i21;

     label04:
        if i24 > i19 goto label05;

        $i16 = i24 - 1;

        $d22 = r14[$i16];

        d29 = virtualinvoke r1.<com.opengamma.analytics.financial.model.option.definition.StandardOptionDataBundle: double getVolatility(double,double)>(d27, $d22);

        $i17 = i24 - 1;

        $d24 = r3[$i17];

        $i18 = i24 - 1;

        $d23 = r4[$i18];

        $d25 = virtualinvoke r0.<com.opengamma.analytics.financial.model.option.pricing.tree.BinomialTreeBuilder: double getNextHigherNode(double,double,double,double)>(d2, d29, $d24, $d23);

        r4[i24] = $d25;

        i24 = i24 + 1;

        goto label04;

     label05:
        i25 = i22;

     label06:
        if i25 < 0 goto label07;

        $d18 = r14[i25];

        d30 = virtualinvoke r1.<com.opengamma.analytics.financial.model.option.definition.StandardOptionDataBundle: double getVolatility(double,double)>(d27, $d18);

        $d20 = r3[i25];

        $i15 = i25 + 1;

        $d19 = r4[$i15];

        $d21 = virtualinvoke r0.<com.opengamma.analytics.financial.model.option.pricing.tree.BinomialTreeBuilder: double getNextLowerNode(double,double,double,double)>(d2, d30, $d20, $d19);

        r4[i25] = $d21;

        i25 = i25 + -1;

        goto label06;

     label07:
        $i8 = i19 - 1;

        $r10 = newarray (com.opengamma.analytics.financial.model.option.pricing.tree.BinomialTreeNode)[i19];

        r2[$i8] = $r10;

        i26 = 0;

     label08:
        if i26 >= i19 goto label13;

        $i9 = i26 + 1;

        $d11 = r4[$i9];

        $d10 = r4[i26];

        d31 = $d11 - $d10;

        $b10 = d31 cmpl 0.0;

        if $b10 != 0 goto label11;

        $d16 = r3[i26];

        $l12 = staticinvoke <java.lang.Double: long doubleToLongBits(double)>($d16);

        $d17 = r4[i26];

        $l13 = staticinvoke <java.lang.Double: long doubleToLongBits(double)>($d17);

        $b14 = $l12 cmp $l13;

        if $b14 != 0 goto label09;

        $z0 = 1;

        goto label10;

     label09:
        $z0 = 0;

     label10:
        staticinvoke <org.apache.commons.lang.Validate: void isTrue(boolean,java.lang.String)>($z0, "inconsistent nodes");

        d32 = 0.5;

        goto label12;

     label11:
        $d13 = r3[i26];

        $d12 = r4[i26];

        $d14 = $d13 - $d12;

        d32 = $d14 / d31;

     label12:
        $i11 = i19 - 1;

        $r12 = r2[$i11];

        $r11 = new com.opengamma.analytics.financial.model.option.pricing.tree.BinomialTreeNode;

        $d15 = r14[i26];

        $r13 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d15);

        specialinvoke $r11.<com.opengamma.analytics.financial.model.option.pricing.tree.BinomialTreeNode: void <init>(java.lang.Object,double)>($r13, d32);

        $r12[i26] = $r11;

        i26 = i26 + 1;

        goto label08;

     label13:
        r14 = r4;

        i19 = i19 + 1;

        goto label01;

     label14:
        $i2 = i0 + 1;

        $r5 = newarray (com.opengamma.analytics.financial.model.option.pricing.tree.BinomialTreeNode)[$i2];

        r2[i0] = $r5;

        i27 = 0;

     label15:
        if i27 > i0 goto label16;

        $r8 = r2[i0];

        $r7 = new com.opengamma.analytics.financial.model.option.pricing.tree.BinomialTreeNode;

        $d4 = r14[i27];

        $r9 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d4);

        specialinvoke $r7.<com.opengamma.analytics.financial.model.option.pricing.tree.BinomialTreeNode: void <init>(java.lang.Object,double)>($r9, 0.0);

        $r8[i27] = $r7;

        i27 = i27 + 1;

        goto label15;

     label16:
        $r6 = new com.opengamma.analytics.financial.model.tree.RecombiningBinomialTree;

        specialinvoke $r6.<com.opengamma.analytics.financial.model.tree.RecombiningBinomialTree: void <init>(java.lang.Object[][])>(r2);

        return $r6;
    }

    protected abstract double[] getForwards(double[], com.opengamma.analytics.financial.model.option.definition.StandardOptionDataBundle, double, double);

    protected abstract double getNextHigherNode(double, double, double, double);

    protected abstract double getNextLowerNode(double, double, double, double);

    protected abstract com.opengamma.util.tuple.DoublesPair getCentralNodePair(double, double, double, double);

    public com.opengamma.analytics.financial.model.tree.RecombiningBinomialTree buildOptionPriceTree(com.opengamma.analytics.financial.model.option.definition.OptionDefinition, com.opengamma.analytics.financial.model.option.definition.StandardOptionDataBundle, com.opengamma.analytics.financial.model.tree.RecombiningBinomialTree)
    {
        com.opengamma.analytics.financial.model.option.pricing.tree.BinomialTreeBuilder r0;
        com.opengamma.analytics.financial.model.option.definition.OptionDefinition r1;
        com.opengamma.analytics.financial.model.option.definition.StandardOptionDataBundle r2, r9, $r34;
        com.opengamma.analytics.financial.model.tree.RecombiningBinomialTree r3, $r12;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, i8, i9, i10;
        com.opengamma.analytics.financial.model.option.pricing.tree.BinomialTreeNode[][] r4;
        com.opengamma.analytics.financial.model.option.definition.OptionPayoffFunction r5;
        com.opengamma.analytics.financial.model.option.definition.OptionExerciseFunction r6;
        com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve r7;
        double d0, d1, d2, d3, d4, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, d16, d17, d18, d19, $d20;
        com.opengamma.analytics.financial.model.option.pricing.tree.BinomialTreeNode r8, $r18, $r22, $r26, $r31, $r36;
        com.opengamma.analytics.financial.model.option.pricing.tree.BinomialTreeNode[] $r10, $r13, $r17, $r21, $r27, $r37;
        org.threeten.bp.ZonedDateTime $r11;
        java.lang.Object $r14, $r15, $r19, $r23, $r30, $r32;
        java.lang.Double $r16, $r20, $r24, $r25, $r28, $r29, $r33, $r35, $r38;
        boolean $z0;

        r0 := @this: com.opengamma.analytics.financial.model.option.pricing.tree.BinomialTreeBuilder;

        r1 := @parameter0: com.opengamma.analytics.financial.model.option.definition.OptionDefinition;

        r2 := @parameter1: com.opengamma.analytics.financial.model.option.definition.StandardOptionDataBundle;

        r3 := @parameter2: com.opengamma.analytics.financial.model.tree.RecombiningBinomialTree;

        $i1 = virtualinvoke r3.<com.opengamma.analytics.financial.model.tree.RecombiningBinomialTree: int getDepth()>();

        i0 = $i1 - 1;

        $i2 = i0 + 1;

        r4 = newarray (com.opengamma.analytics.financial.model.option.pricing.tree.BinomialTreeNode[])[$i2];

        r5 = virtualinvoke r1.<com.opengamma.analytics.financial.model.option.definition.OptionDefinition: com.opengamma.analytics.financial.model.option.definition.OptionPayoffFunction getPayoffFunction()>();

        r6 = virtualinvoke r1.<com.opengamma.analytics.financial.model.option.definition.OptionDefinition: com.opengamma.analytics.financial.model.option.definition.OptionExerciseFunction getExerciseFunction()>();

        r7 = virtualinvoke r2.<com.opengamma.analytics.financial.model.option.definition.StandardOptionDataBundle: com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve getInterestRateCurve()>();

        $i3 = i0 + 1;

        $r10 = newarray (com.opengamma.analytics.financial.model.option.pricing.tree.BinomialTreeNode)[$i3];

        r4[i0] = $r10;

        i8 = 0;

     label1:
        if i8 > i0 goto label2;

        $r30 = virtualinvoke r3.<com.opengamma.analytics.financial.model.tree.RecombiningBinomialTree: java.lang.Object getNode(int,int)>(i0, i8);

        $r31 = (com.opengamma.analytics.financial.model.option.pricing.tree.BinomialTreeNode) $r30;

        $r32 = virtualinvoke $r31.<com.opengamma.analytics.financial.model.option.pricing.tree.BinomialTreeNode: java.lang.Object getValue()>();

        $r33 = (java.lang.Double) $r32;

        d16 = virtualinvoke $r33.<java.lang.Double: double doubleValue()>();

        $r34 = virtualinvoke r2.<com.opengamma.analytics.financial.model.option.definition.StandardOptionDataBundle: com.opengamma.analytics.financial.model.option.definition.StandardOptionDataBundle withSpot(double)>(d16);

        $r35 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(0.0);

        d0 = interfaceinvoke r5.<com.opengamma.analytics.financial.model.option.definition.OptionPayoffFunction: double getPayoff(java.lang.Object,java.lang.Double)>($r34, $r35);

        $r37 = r4[i0];

        $r36 = new com.opengamma.analytics.financial.model.option.pricing.tree.BinomialTreeNode;

        $r38 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d0);

        specialinvoke $r36.<com.opengamma.analytics.financial.model.option.pricing.tree.BinomialTreeNode: void <init>(java.lang.Object,double)>($r38, 0.0);

        $r37[i8] = $r36;

        i8 = i8 + 1;

        goto label1;

     label2:
        $r11 = virtualinvoke r2.<com.opengamma.analytics.financial.model.option.definition.StandardOptionDataBundle: org.threeten.bp.ZonedDateTime getDate()>();

        d17 = virtualinvoke r1.<com.opengamma.analytics.financial.model.option.definition.OptionDefinition: double getTimeToExpiry(org.threeten.bp.ZonedDateTime)>($r11);

        $d6 = (double) i0;

        d1 = d17 / $d6;

        d18 = d17;

        i9 = i0 - 1;

     label3:
        if i9 < 0 goto label8;

        d18 = d18 - d1;

        $d7 = d18 + d1;

        $d8 = virtualinvoke r7.<com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve: double getDiscountFactor(double)>($d7);

        $d9 = virtualinvoke r7.<com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve: double getDiscountFactor(double)>(d18);

        d2 = $d8 / $d9;

        $i4 = i9 + 1;

        $r13 = newarray (com.opengamma.analytics.financial.model.option.pricing.tree.BinomialTreeNode)[$i4];

        r4[i9] = $r13;

        i10 = 0;

     label4:
        if i10 > i9 goto label7;

        $r14 = virtualinvoke r3.<com.opengamma.analytics.financial.model.tree.RecombiningBinomialTree: java.lang.Object getNode(int,int)>(i9, i10);

        r8 = (com.opengamma.analytics.financial.model.option.pricing.tree.BinomialTreeNode) $r14;

        d3 = virtualinvoke r8.<com.opengamma.analytics.financial.model.option.pricing.tree.BinomialTreeNode: double getUpProbability()>();

        $r15 = virtualinvoke r8.<com.opengamma.analytics.financial.model.option.pricing.tree.BinomialTreeNode: java.lang.Object getValue()>();

        $r16 = (java.lang.Double) $r15;

        d19 = virtualinvoke $r16.<java.lang.Double: double doubleValue()>();

        $i5 = i9 + 1;

        $r17 = r4[$i5];

        $i6 = i10 + 1;

        $r18 = $r17[$i6];

        $r19 = virtualinvoke $r18.<com.opengamma.analytics.financial.model.option.pricing.tree.BinomialTreeNode: java.lang.Object getValue()>();

        $r20 = (java.lang.Double) $r19;

        $d10 = virtualinvoke $r20.<java.lang.Double: double doubleValue()>();

        $d11 = d3 * $d10;

        $d12 = 1.0 - d3;

        $i7 = i9 + 1;

        $r21 = r4[$i7];

        $r22 = $r21[i10];

        $r23 = virtualinvoke $r22.<com.opengamma.analytics.financial.model.option.pricing.tree.BinomialTreeNode: java.lang.Object getValue()>();

        $r24 = (java.lang.Double) $r23;

        $d13 = virtualinvoke $r24.<java.lang.Double: double doubleValue()>();

        $d14 = $d12 * $d13;

        $d15 = $d11 + $d14;

        d4 = d2 * $d15;

        r9 = virtualinvoke r2.<com.opengamma.analytics.financial.model.option.definition.StandardOptionDataBundle: com.opengamma.analytics.financial.model.option.definition.StandardOptionDataBundle withSpot(double)>(d19);

        $r25 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d4);

        $z0 = interfaceinvoke r6.<com.opengamma.analytics.financial.model.option.definition.OptionExerciseFunction: boolean shouldExercise(java.lang.Object,java.lang.Double)>(r9, $r25);

        if $z0 == 0 goto label5;

        $r29 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d4);

        $d20 = interfaceinvoke r5.<com.opengamma.analytics.financial.model.option.definition.OptionPayoffFunction: double getPayoff(java.lang.Object,java.lang.Double)>(r9, $r29);

        goto label6;

     label5:
        $d20 = d4;

     label6:
        $r27 = r4[i9];

        $r26 = new com.opengamma.analytics.financial.model.option.pricing.tree.BinomialTreeNode;

        $r28 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d20);

        specialinvoke $r26.<com.opengamma.analytics.financial.model.option.pricing.tree.BinomialTreeNode: void <init>(java.lang.Object,double)>($r28, 0.0);

        $r27[i10] = $r26;

        i10 = i10 + 1;

        goto label4;

     label7:
        i9 = i9 + -1;

        goto label3;

     label8:
        $r12 = new com.opengamma.analytics.financial.model.tree.RecombiningBinomialTree;

        specialinvoke $r12.<com.opengamma.analytics.financial.model.tree.RecombiningBinomialTree: void <init>(java.lang.Object[][])>(r4);

        return $r12;
    }
}
