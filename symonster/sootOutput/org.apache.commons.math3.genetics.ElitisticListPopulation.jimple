public class org.apache.commons.math3.genetics.ElitisticListPopulation extends org.apache.commons.math3.genetics.ListPopulation
{
    private double elitismRate;

    public void <init>(java.util.List, int, double) throws org.apache.commons.math3.exception.NullArgumentException, org.apache.commons.math3.exception.NotPositiveException, org.apache.commons.math3.exception.NumberIsTooLargeException, org.apache.commons.math3.exception.OutOfRangeException
    {
        org.apache.commons.math3.genetics.ElitisticListPopulation r0;
        java.util.List r1;
        int i0;
        double d0;

        r0 := @this: org.apache.commons.math3.genetics.ElitisticListPopulation;

        r1 := @parameter0: java.util.List;

        i0 := @parameter1: int;

        d0 := @parameter2: double;

        specialinvoke r0.<org.apache.commons.math3.genetics.ListPopulation: void <init>(java.util.List,int)>(r1, i0);

        r0.<org.apache.commons.math3.genetics.ElitisticListPopulation: double elitismRate> = 0.9;

        virtualinvoke r0.<org.apache.commons.math3.genetics.ElitisticListPopulation: void setElitismRate(double)>(d0);

        return;
    }

    public void <init>(int, double) throws org.apache.commons.math3.exception.NotPositiveException, org.apache.commons.math3.exception.OutOfRangeException
    {
        org.apache.commons.math3.genetics.ElitisticListPopulation r0;
        int i0;
        double d0;

        r0 := @this: org.apache.commons.math3.genetics.ElitisticListPopulation;

        i0 := @parameter0: int;

        d0 := @parameter1: double;

        specialinvoke r0.<org.apache.commons.math3.genetics.ListPopulation: void <init>(int)>(i0);

        r0.<org.apache.commons.math3.genetics.ElitisticListPopulation: double elitismRate> = 0.9;

        virtualinvoke r0.<org.apache.commons.math3.genetics.ElitisticListPopulation: void setElitismRate(double)>(d0);

        return;
    }

    public org.apache.commons.math3.genetics.Population nextGeneration()
    {
        org.apache.commons.math3.genetics.ElitisticListPopulation r0, $r3;
        java.util.List r2;
        int i0, $i1, $i2, $i3, i4;
        double $d0, $d1, $d2, $d3, $d4, $d5;
        java.lang.Object $r4;
        org.apache.commons.math3.genetics.Chromosome $r5;

        r0 := @this: org.apache.commons.math3.genetics.ElitisticListPopulation;

        $r3 = new org.apache.commons.math3.genetics.ElitisticListPopulation;

        $i1 = virtualinvoke r0.<org.apache.commons.math3.genetics.ElitisticListPopulation: int getPopulationLimit()>();

        $d0 = virtualinvoke r0.<org.apache.commons.math3.genetics.ElitisticListPopulation: double getElitismRate()>();

        specialinvoke $r3.<org.apache.commons.math3.genetics.ElitisticListPopulation: void <init>(int,double)>($i1, $d0);

        r2 = virtualinvoke r0.<org.apache.commons.math3.genetics.ElitisticListPopulation: java.util.List getChromosomeList()>();

        staticinvoke <java.util.Collections: void sort(java.util.List)>(r2);

        $d1 = virtualinvoke r0.<org.apache.commons.math3.genetics.ElitisticListPopulation: double getElitismRate()>();

        $d2 = 1.0 - $d1;

        $i2 = interfaceinvoke r2.<java.util.List: int size()>();

        $d3 = (double) $i2;

        $d4 = $d2 * $d3;

        $d5 = staticinvoke <org.apache.commons.math3.util.FastMath: double ceil(double)>($d4);

        i0 = (int) $d5;

        i4 = i0;

     label1:
        $i3 = interfaceinvoke r2.<java.util.List: int size()>();

        if i4 >= $i3 goto label2;

        $r4 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>(i4);

        $r5 = (org.apache.commons.math3.genetics.Chromosome) $r4;

        virtualinvoke $r3.<org.apache.commons.math3.genetics.ElitisticListPopulation: void addChromosome(org.apache.commons.math3.genetics.Chromosome)>($r5);

        i4 = i4 + 1;

        goto label1;

     label2:
        return $r3;
    }

    public void setElitismRate(double) throws org.apache.commons.math3.exception.OutOfRangeException
    {
        org.apache.commons.math3.genetics.ElitisticListPopulation r0;
        double d0;
        byte $b0, $b1;
        org.apache.commons.math3.exception.OutOfRangeException $r1;
        org.apache.commons.math3.exception.util.LocalizedFormats $r2;
        java.lang.Double $r3;
        java.lang.Integer $r4, $r5;

        r0 := @this: org.apache.commons.math3.genetics.ElitisticListPopulation;

        d0 := @parameter0: double;

        $b0 = d0 cmpg 0.0;

        if $b0 < 0 goto label1;

        $b1 = d0 cmpl 1.0;

        if $b1 <= 0 goto label2;

     label1:
        $r1 = new org.apache.commons.math3.exception.OutOfRangeException;

        $r2 = <org.apache.commons.math3.exception.util.LocalizedFormats: org.apache.commons.math3.exception.util.LocalizedFormats ELITISM_RATE>;

        $r3 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d0);

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        specialinvoke $r1.<org.apache.commons.math3.exception.OutOfRangeException: void <init>(org.apache.commons.math3.exception.util.Localizable,java.lang.Number,java.lang.Number,java.lang.Number)>($r2, $r3, $r4, $r5);

        throw $r1;

     label2:
        r0.<org.apache.commons.math3.genetics.ElitisticListPopulation: double elitismRate> = d0;

        return;
    }

    public double getElitismRate()
    {
        org.apache.commons.math3.genetics.ElitisticListPopulation r0;
        double $d0;

        r0 := @this: org.apache.commons.math3.genetics.ElitisticListPopulation;

        $d0 = r0.<org.apache.commons.math3.genetics.ElitisticListPopulation: double elitismRate>;

        return $d0;
    }
}
