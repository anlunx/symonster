public class com.opengamma.analytics.financial.timeseries.analysis.MovingAverageTimeSeriesOrderIdentifier extends java.lang.Object
{
    private final int _maxOrder;
    private final double _criticalValue;
    private final com.opengamma.analytics.math.function.Function1D _calculator;

    public void <init>(int, double)
    {
        com.opengamma.analytics.financial.timeseries.analysis.MovingAverageTimeSeriesOrderIdentifier r0;
        int i0;
        double d0, $d1, $d2, $d3;
        com.opengamma.analytics.financial.timeseries.analysis.AutocorrelationFunctionCalculator $r1;
        boolean $z0;
        com.opengamma.analytics.math.statistics.distribution.NormalDistribution $r2;
        java.lang.Double $r3;
        java.lang.IllegalArgumentException $r4, $r5;

        r0 := @this: com.opengamma.analytics.financial.timeseries.analysis.MovingAverageTimeSeriesOrderIdentifier;

        i0 := @parameter0: int;

        d0 := @parameter1: double;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new com.opengamma.analytics.financial.timeseries.analysis.AutocorrelationFunctionCalculator;

        specialinvoke $r1.<com.opengamma.analytics.financial.timeseries.analysis.AutocorrelationFunctionCalculator: void <init>()>();

        r0.<com.opengamma.analytics.financial.timeseries.analysis.MovingAverageTimeSeriesOrderIdentifier: com.opengamma.analytics.math.function.Function1D _calculator> = $r1;

        if i0 >= 1 goto label1;

        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Maximum order must be greater than zero");

        throw $r5;

     label1:
        $z0 = staticinvoke <com.opengamma.util.ArgumentChecker: boolean isInRangeExcludingLow(double,double,double)>(0.0, 1.0, d0);

        if $z0 != 0 goto label2;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Level must be between 0 and 1");

        throw $r4;

     label2:
        r0.<com.opengamma.analytics.financial.timeseries.analysis.MovingAverageTimeSeriesOrderIdentifier: int _maxOrder> = i0;

        $r2 = new com.opengamma.analytics.math.statistics.distribution.NormalDistribution;

        specialinvoke $r2.<com.opengamma.analytics.math.statistics.distribution.NormalDistribution: void <init>(double,double)>(0.0, 1.0);

        $d1 = d0 / 2.0;

        $d2 = 1.0 - $d1;

        $r3 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d2);

        $d3 = virtualinvoke $r2.<com.opengamma.analytics.math.statistics.distribution.NormalDistribution: double getInverseCDF(java.lang.Double)>($r3);

        r0.<com.opengamma.analytics.financial.timeseries.analysis.MovingAverageTimeSeriesOrderIdentifier: double _criticalValue> = $d3;

        return;
    }

    public int getOrder(com.opengamma.timeseries.DoubleTimeSeries)
    {
        com.opengamma.analytics.financial.timeseries.analysis.MovingAverageTimeSeriesOrderIdentifier r0;
        com.opengamma.timeseries.DoubleTimeSeries r1;
        double[] r2;
        int i0, $i1, $i2, i4;
        double d0, $d1, $d2, $d3, $d4, $d5;
        boolean $z0;
        com.opengamma.analytics.math.function.Function1D $r3;
        java.lang.Object $r4;
        java.lang.IllegalArgumentException $r5, $r6, $r7;
        byte $b3;

        r0 := @this: com.opengamma.analytics.financial.timeseries.analysis.MovingAverageTimeSeriesOrderIdentifier;

        r1 := @parameter0: com.opengamma.timeseries.DoubleTimeSeries;

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object)>(r1);

        $z0 = interfaceinvoke r1.<com.opengamma.timeseries.DoubleTimeSeries: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        $r7 = new java.lang.IllegalArgumentException;

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Time series was empty");

        throw $r7;

     label1:
        $i1 = interfaceinvoke r1.<com.opengamma.timeseries.DoubleTimeSeries: int size()>();

        $i2 = r0.<com.opengamma.analytics.financial.timeseries.analysis.MovingAverageTimeSeriesOrderIdentifier: int _maxOrder>;

        if $i1 >= $i2 goto label2;

        $r6 = new java.lang.IllegalArgumentException;

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Number of data points lower than the maximum order to calculate");

        throw $r6;

     label2:
        $r3 = r0.<com.opengamma.analytics.financial.timeseries.analysis.MovingAverageTimeSeriesOrderIdentifier: com.opengamma.analytics.math.function.Function1D _calculator>;

        $r4 = virtualinvoke $r3.<com.opengamma.analytics.math.function.Function1D: java.lang.Object evaluate(java.lang.Object)>(r1);

        r2 = (double[]) $r4;

        i0 = interfaceinvoke r1.<com.opengamma.timeseries.DoubleTimeSeries: int size()>();

        $d2 = r0.<com.opengamma.analytics.financial.timeseries.analysis.MovingAverageTimeSeriesOrderIdentifier: double _criticalValue>;

        $d1 = (double) i0;

        $d3 = staticinvoke <java.lang.Math: double sqrt(double)>($d1);

        d0 = $d2 / $d3;

        i4 = r0.<com.opengamma.analytics.financial.timeseries.analysis.MovingAverageTimeSeriesOrderIdentifier: int _maxOrder>;

     label3:
        if i4 <= 0 goto label5;

        $d4 = r2[i4];

        $d5 = staticinvoke <java.lang.Math: double abs(double)>($d4);

        $b3 = $d5 cmpl d0;

        if $b3 <= 0 goto label4;

        return i4;

     label4:
        i4 = i4 + -1;

        goto label3;

     label5:
        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Could not find order of series; no significant autocorrelations");

        throw $r5;
    }
}
