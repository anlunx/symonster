public final class com.opengamma.financial.convention.daycount.AccruedInterestCalculator extends java.lang.Object
{

    private void <init>()
    {
        com.opengamma.financial.convention.daycount.AccruedInterestCalculator r0;

        r0 := @this: com.opengamma.financial.convention.daycount.AccruedInterestCalculator;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static double getAccruedInterest(com.opengamma.financial.convention.daycount.DayCount, org.threeten.bp.ZonedDateTime, org.threeten.bp.ZonedDateTime[], double, int, boolean, int, com.opengamma.financial.convention.calendar.Calendar)
    {
        com.opengamma.financial.convention.daycount.DayCount r0;
        org.threeten.bp.ZonedDateTime r1, $r4, $r5, r7;
        org.threeten.bp.ZonedDateTime[] r2;
        double d0, d1, $d2, $d3;
        int i0, i1, i2, i3, i4, $i5, $i6, $i7, i8;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6;
        com.opengamma.financial.convention.calendar.Calendar r3;
        org.threeten.bp.LocalDate $r6;

        r0 := @parameter0: com.opengamma.financial.convention.daycount.DayCount;

        r1 := @parameter1: org.threeten.bp.ZonedDateTime;

        r2 := @parameter2: org.threeten.bp.ZonedDateTime[];

        d0 := @parameter3: double;

        i0 := @parameter4: int;

        z0 := @parameter5: boolean;

        i1 := @parameter6: int;

        r3 := @parameter7: com.opengamma.financial.convention.calendar.Calendar;

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object,java.lang.String)>(r0, "day-count");

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object,java.lang.String)>(r1, "date");

        staticinvoke <org.apache.commons.lang.Validate: void noNullElements(java.lang.Object[],java.lang.String)>(r2, "nominalDates");

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object,java.lang.String)>(r3, "calendar");

        if i0 <= 0 goto label01;

        $z3 = 1;

        goto label02;

     label01:
        $z3 = 0;

     label02:
        staticinvoke <org.apache.commons.lang.Validate: void isTrue(boolean)>($z3);

        if i1 < 0 goto label03;

        $z4 = 1;

        goto label04;

     label03:
        $z4 = 0;

     label04:
        staticinvoke <org.apache.commons.lang.Validate: void isTrue(boolean)>($z4);

        i2 = staticinvoke <java.util.Arrays: int binarySearch(java.lang.Object[],java.lang.Object)>(r2, r1);

        if i2 <= 0 goto label05;

        return 0.0;

     label05:
        $i5 = neg i2;

        i3 = $i5 - 2;

        i4 = lengthof r2;

        if i3 < 0 goto label06;

        $z5 = 1;

        goto label07;

     label06:
        $z5 = 0;

     label07:
        staticinvoke <org.apache.commons.lang.Validate: void isTrue(boolean,java.lang.String)>($z5, "Settlement date is before first accrual date");

        if i3 >= i4 goto label08;

        $z6 = 1;

        goto label09;

     label08:
        $z6 = 0;

     label09:
        staticinvoke <org.apache.commons.lang.Validate: void isTrue(boolean,java.lang.String)>($z6, "Settlement date is after maturity date");

        $r5 = r2[i3];

        $i6 = i3 + 1;

        $r4 = r2[$i6];

        $d2 = (double) i0;

        d1 = staticinvoke <com.opengamma.financial.convention.daycount.AccruedInterestCalculator: double getAccruedInterest(com.opengamma.financial.convention.daycount.DayCount,int,int,org.threeten.bp.ZonedDateTime,org.threeten.bp.ZonedDateTime,org.threeten.bp.ZonedDateTime,double,double,boolean)>(r0, i3, i4, $r5, r1, $r4, d0, $d2, z0);

        $i7 = i3 + 1;

        r7 = r2[$i7];

        i8 = 0;

     label10:
        if i8 >= i1 goto label13;

     label11:
        $r6 = virtualinvoke r7.<org.threeten.bp.ZonedDateTime: org.threeten.bp.LocalDate toLocalDate()>();

        $z2 = interfaceinvoke r3.<com.opengamma.financial.convention.calendar.Calendar: boolean isWorkingDay(org.threeten.bp.LocalDate)>($r6);

        if $z2 != 0 goto label12;

        r7 = virtualinvoke r7.<org.threeten.bp.ZonedDateTime: org.threeten.bp.ZonedDateTime minusDays(long)>(1L);

        goto label11;

     label12:
        r7 = virtualinvoke r7.<org.threeten.bp.ZonedDateTime: org.threeten.bp.ZonedDateTime minusDays(long)>(1L);

        i8 = i8 + 1;

        goto label10;

     label13:
        if i1 == 0 goto label14;

        $z1 = virtualinvoke r7.<org.threeten.bp.ZonedDateTime: boolean isBefore(org.threeten.bp.chrono.ChronoZonedDateTime)>(r1);

        if $z1 == 0 goto label14;

        $d3 = d1 - d0;

        return $d3;

     label14:
        return d1;
    }

    public static double getAccruedInterest(com.opengamma.financial.convention.daycount.DayCount, org.threeten.bp.ZonedDateTime, org.threeten.bp.ZonedDateTime[], double, double, boolean, int, int, com.opengamma.financial.convention.calendar.Calendar)
    {
        com.opengamma.financial.convention.daycount.DayCount r0;
        org.threeten.bp.ZonedDateTime r1, $r5, $r6, r7;
        org.threeten.bp.ZonedDateTime[] r2;
        double d0, d1, d2, $d3;
        boolean z0, $z1, $z2, $z3, $z4, $z5;
        int i0, i1, i2, $i4, $i5, i6;
        com.opengamma.financial.convention.calendar.Calendar r3;
        byte $b3;
        org.threeten.bp.LocalDate $r4;

        r0 := @parameter0: com.opengamma.financial.convention.daycount.DayCount;

        r1 := @parameter1: org.threeten.bp.ZonedDateTime;

        r2 := @parameter2: org.threeten.bp.ZonedDateTime[];

        d0 := @parameter3: double;

        d1 := @parameter4: double;

        z0 := @parameter5: boolean;

        i0 := @parameter6: int;

        i1 := @parameter7: int;

        r3 := @parameter8: com.opengamma.financial.convention.calendar.Calendar;

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object,java.lang.String)>(r0, "day-count");

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object,java.lang.String)>(r1, "date");

        staticinvoke <org.apache.commons.lang.Validate: void noNullElements(java.lang.Object[],java.lang.String)>(r2, "nominalDates");

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object,java.lang.String)>(r3, "calendar");

        $b3 = d1 cmpl 0.0;

        if $b3 <= 0 goto label01;

        $z3 = 1;

        goto label02;

     label01:
        $z3 = 0;

     label02:
        staticinvoke <org.apache.commons.lang.Validate: void isTrue(boolean)>($z3);

        if i0 < 0 goto label03;

        $z4 = 1;

        goto label04;

     label03:
        $z4 = 0;

     label04:
        staticinvoke <org.apache.commons.lang.Validate: void isTrue(boolean)>($z4);

        i2 = lengthof r2;

        if i1 < 0 goto label05;

        if i1 >= i2 goto label05;

        $z5 = 1;

        goto label06;

     label05:
        $z5 = 0;

     label06:
        staticinvoke <org.apache.commons.lang.Validate: void isTrue(boolean)>($z5);

        $r5 = r2[i1];

        $i4 = i1 + 1;

        $r6 = r2[$i4];

        d2 = staticinvoke <com.opengamma.financial.convention.daycount.AccruedInterestCalculator: double getAccruedInterest(com.opengamma.financial.convention.daycount.DayCount,int,int,org.threeten.bp.ZonedDateTime,org.threeten.bp.ZonedDateTime,org.threeten.bp.ZonedDateTime,double,double,boolean)>(r0, i1, i2, $r5, r1, $r6, d0, d1, z0);

        $i5 = i1 + 1;

        r7 = r2[$i5];

        i6 = 0;

     label07:
        if i6 >= i0 goto label10;

     label08:
        $r4 = virtualinvoke r7.<org.threeten.bp.ZonedDateTime: org.threeten.bp.LocalDate toLocalDate()>();

        $z2 = interfaceinvoke r3.<com.opengamma.financial.convention.calendar.Calendar: boolean isWorkingDay(org.threeten.bp.LocalDate)>($r4);

        if $z2 != 0 goto label09;

        r7 = virtualinvoke r7.<org.threeten.bp.ZonedDateTime: org.threeten.bp.ZonedDateTime minusDays(long)>(1L);

        goto label08;

     label09:
        r7 = virtualinvoke r7.<org.threeten.bp.ZonedDateTime: org.threeten.bp.ZonedDateTime minusDays(long)>(1L);

        i6 = i6 + 1;

        goto label07;

     label10:
        if i0 == 0 goto label11;

        $z1 = virtualinvoke r7.<org.threeten.bp.ZonedDateTime: boolean isBefore(org.threeten.bp.chrono.ChronoZonedDateTime)>(r1);

        if $z1 == 0 goto label11;

        $d3 = d2 - d0;

        return $d3;

     label11:
        return d2;
    }

    public static double getAccruedInterest(com.opengamma.financial.convention.daycount.DayCount, org.threeten.bp.LocalDate, org.threeten.bp.LocalDate[], double, double, boolean, int, com.opengamma.financial.convention.calendar.Calendar)
    {
        com.opengamma.financial.convention.daycount.DayCount r0;
        org.threeten.bp.LocalDate r1, $r8, $r11, r14;
        org.threeten.bp.LocalDate[] r2;
        double d0, d1, d2, $d3;
        boolean z0, $z1, $z2, $z3, $z4;
        int i0, i1, i2, i3, $i5, $i6, $i7, i8;
        com.opengamma.financial.convention.calendar.Calendar r3;
        org.threeten.bp.ZonedDateTime r4, r5, r6;
        byte $b4;
        org.threeten.bp.ZoneOffset $r7, $r9, $r10;
        java.lang.IllegalArgumentException $r12, $r13;

        r0 := @parameter0: com.opengamma.financial.convention.daycount.DayCount;

        r1 := @parameter1: org.threeten.bp.LocalDate;

        r2 := @parameter2: org.threeten.bp.LocalDate[];

        d0 := @parameter3: double;

        d1 := @parameter4: double;

        z0 := @parameter5: boolean;

        i0 := @parameter6: int;

        r3 := @parameter7: com.opengamma.financial.convention.calendar.Calendar;

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object,java.lang.String)>(r0, "day-count");

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object,java.lang.String)>(r1, "date");

        staticinvoke <org.apache.commons.lang.Validate: void noNullElements(java.lang.Object[],java.lang.String)>(r2, "nominalDates");

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object,java.lang.String)>(r3, "calendar");

        $b4 = d1 cmpl 0.0;

        if $b4 <= 0 goto label01;

        $z3 = 1;

        goto label02;

     label01:
        $z3 = 0;

     label02:
        staticinvoke <org.apache.commons.lang.Validate: void isTrue(boolean)>($z3);

        if i0 < 0 goto label03;

        $z4 = 1;

        goto label04;

     label03:
        $z4 = 0;

     label04:
        staticinvoke <org.apache.commons.lang.Validate: void isTrue(boolean)>($z4);

        i1 = staticinvoke <java.util.Arrays: int binarySearch(java.lang.Object[],java.lang.Object)>(r2, r1);

        if i1 <= 0 goto label05;

        return 0.0;

     label05:
        $i5 = neg i1;

        i2 = $i5 - 2;

        i3 = lengthof r2;

        if i2 >= 0 goto label06;

        $r13 = new java.lang.IllegalArgumentException;

        specialinvoke $r13.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Settlement date is before first accrual date");

        throw $r13;

     label06:
        if i2 != i3 goto label07;

        $r12 = new java.lang.IllegalArgumentException;

        specialinvoke $r12.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Settlement date is after maturity date");

        throw $r12;

     label07:
        $r8 = r2[i2];

        $r7 = <org.threeten.bp.ZoneOffset: org.threeten.bp.ZoneOffset UTC>;

        r4 = virtualinvoke $r8.<org.threeten.bp.LocalDate: org.threeten.bp.ZonedDateTime atStartOfDay(org.threeten.bp.ZoneId)>($r7);

        $r9 = <org.threeten.bp.ZoneOffset: org.threeten.bp.ZoneOffset UTC>;

        r5 = virtualinvoke r1.<org.threeten.bp.LocalDate: org.threeten.bp.ZonedDateTime atStartOfDay(org.threeten.bp.ZoneId)>($r9);

        $i6 = i2 + 1;

        $r11 = r2[$i6];

        $r10 = <org.threeten.bp.ZoneOffset: org.threeten.bp.ZoneOffset UTC>;

        r6 = virtualinvoke $r11.<org.threeten.bp.LocalDate: org.threeten.bp.ZonedDateTime atStartOfDay(org.threeten.bp.ZoneId)>($r10);

        d2 = staticinvoke <com.opengamma.financial.convention.daycount.AccruedInterestCalculator: double getAccruedInterest(com.opengamma.financial.convention.daycount.DayCount,int,int,org.threeten.bp.ZonedDateTime,org.threeten.bp.ZonedDateTime,org.threeten.bp.ZonedDateTime,double,double,boolean)>(r0, i2, i3, r4, r5, r6, d0, d1, z0);

        $i7 = i2 + 1;

        r14 = r2[$i7];

        i8 = 0;

     label08:
        if i8 >= i0 goto label11;

     label09:
        $z2 = interfaceinvoke r3.<com.opengamma.financial.convention.calendar.Calendar: boolean isWorkingDay(org.threeten.bp.LocalDate)>(r14);

        if $z2 != 0 goto label10;

        r14 = virtualinvoke r14.<org.threeten.bp.LocalDate: org.threeten.bp.LocalDate minusDays(long)>(1L);

        goto label09;

     label10:
        r14 = virtualinvoke r14.<org.threeten.bp.LocalDate: org.threeten.bp.LocalDate minusDays(long)>(1L);

        i8 = i8 + 1;

        goto label08;

     label11:
        if i0 == 0 goto label12;

        $z1 = virtualinvoke r14.<org.threeten.bp.LocalDate: boolean isBefore(org.threeten.bp.chrono.ChronoLocalDate)>(r1);

        if $z1 == 0 goto label12;

        $d3 = d2 - d0;

        return $d3;

     label12:
        return d2;
    }

    public static double getAccruedInterest(com.opengamma.financial.convention.daycount.DayCount, org.threeten.bp.LocalDate, org.threeten.bp.LocalDate[], double, double, boolean, int, int, com.opengamma.financial.convention.calendar.Calendar)
    {
        com.opengamma.financial.convention.daycount.DayCount r0;
        org.threeten.bp.LocalDate r1, $r7, $r10, r12;
        org.threeten.bp.LocalDate[] r2;
        double d0, d1, $d2, d3;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6;
        int i0, i1, i2, $i4, $i5, i6;
        com.opengamma.financial.convention.calendar.Calendar r3;
        org.threeten.bp.ZonedDateTime r4, r5, r6;
        byte $b3;
        org.threeten.bp.ZoneOffset $r8, $r9, $r11;

        r0 := @parameter0: com.opengamma.financial.convention.daycount.DayCount;

        r1 := @parameter1: org.threeten.bp.LocalDate;

        r2 := @parameter2: org.threeten.bp.LocalDate[];

        d0 := @parameter3: double;

        d1 := @parameter4: double;

        z0 := @parameter5: boolean;

        i0 := @parameter6: int;

        i1 := @parameter7: int;

        r3 := @parameter8: com.opengamma.financial.convention.calendar.Calendar;

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object,java.lang.String)>(r0, "day-count");

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object,java.lang.String)>(r1, "date");

        staticinvoke <org.apache.commons.lang.Validate: void noNullElements(java.lang.Object[],java.lang.String)>(r2, "nominalDates");

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object,java.lang.String)>(r3, "calendar");

        $b3 = d1 cmpl 0.0;

        if $b3 <= 0 goto label01;

        $z3 = 1;

        goto label02;

     label01:
        $z3 = 0;

     label02:
        staticinvoke <org.apache.commons.lang.Validate: void isTrue(boolean)>($z3);

        if i0 < 0 goto label03;

        $z4 = 1;

        goto label04;

     label03:
        $z4 = 0;

     label04:
        staticinvoke <org.apache.commons.lang.Validate: void isTrue(boolean)>($z4);

        i2 = lengthof r2;

        if i1 < 0 goto label05;

        if i1 >= i2 goto label05;

        $z5 = 1;

        goto label06;

     label05:
        $z5 = 0;

     label06:
        staticinvoke <org.apache.commons.lang.Validate: void isTrue(boolean)>($z5);

        $r7 = r2[i1];

        $r8 = <org.threeten.bp.ZoneOffset: org.threeten.bp.ZoneOffset UTC>;

        r4 = virtualinvoke $r7.<org.threeten.bp.LocalDate: org.threeten.bp.ZonedDateTime atStartOfDay(org.threeten.bp.ZoneId)>($r8);

        $r9 = <org.threeten.bp.ZoneOffset: org.threeten.bp.ZoneOffset UTC>;

        r5 = virtualinvoke r1.<org.threeten.bp.LocalDate: org.threeten.bp.ZonedDateTime atStartOfDay(org.threeten.bp.ZoneId)>($r9);

        $i5 = i1 + 1;

        $r10 = r2[$i5];

        $r11 = <org.threeten.bp.ZoneOffset: org.threeten.bp.ZoneOffset UTC>;

        r6 = virtualinvoke $r10.<org.threeten.bp.LocalDate: org.threeten.bp.ZonedDateTime atStartOfDay(org.threeten.bp.ZoneId)>($r11);

        $z6 = virtualinvoke r5.<org.threeten.bp.ZonedDateTime: boolean isAfter(org.threeten.bp.chrono.ChronoZonedDateTime)>(r6);

        if $z6 == 0 goto label07;

        d3 = 0.0;

        goto label08;

     label07:
        d3 = staticinvoke <com.opengamma.financial.convention.daycount.AccruedInterestCalculator: double getAccruedInterest(com.opengamma.financial.convention.daycount.DayCount,int,int,org.threeten.bp.ZonedDateTime,org.threeten.bp.ZonedDateTime,org.threeten.bp.ZonedDateTime,double,double,boolean)>(r0, i1, i2, r4, r5, r6, d0, d1, z0);

     label08:
        $i4 = i1 + 1;

        r12 = r2[$i4];

        i6 = 0;

     label09:
        if i6 >= i0 goto label12;

     label10:
        $z2 = interfaceinvoke r3.<com.opengamma.financial.convention.calendar.Calendar: boolean isWorkingDay(org.threeten.bp.LocalDate)>(r12);

        if $z2 != 0 goto label11;

        r12 = virtualinvoke r12.<org.threeten.bp.LocalDate: org.threeten.bp.LocalDate minusDays(long)>(1L);

        goto label10;

     label11:
        r12 = virtualinvoke r12.<org.threeten.bp.LocalDate: org.threeten.bp.LocalDate minusDays(long)>(1L);

        i6 = i6 + 1;

        goto label09;

     label12:
        if i0 == 0 goto label13;

        $z1 = virtualinvoke r12.<org.threeten.bp.LocalDate: boolean isBefore(org.threeten.bp.chrono.ChronoLocalDate)>(r1);

        if $z1 == 0 goto label13;

        $d2 = d3 - d0;

        return $d2;

     label13:
        return d3;
    }

    public static double getAccruedInterest(com.opengamma.financial.convention.daycount.DayCount, org.threeten.bp.LocalDate, org.threeten.bp.LocalDate[], org.threeten.bp.LocalDate[], double, double, boolean, int, int, com.opengamma.financial.convention.calendar.Calendar)
    {
        com.opengamma.financial.convention.daycount.DayCount r0;
        org.threeten.bp.LocalDate r1, r5, r6, $r7, r8;
        org.threeten.bp.LocalDate[] r2, r3;
        double d0, d1, $d2, d3;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;
        int i0, i1, i2, $i4, $i5, $i6, i7;
        com.opengamma.financial.convention.calendar.Calendar r4;
        byte $b3;

        r0 := @parameter0: com.opengamma.financial.convention.daycount.DayCount;

        r1 := @parameter1: org.threeten.bp.LocalDate;

        r2 := @parameter2: org.threeten.bp.LocalDate[];

        r3 := @parameter3: org.threeten.bp.LocalDate[];

        d0 := @parameter4: double;

        d1 := @parameter5: double;

        z0 := @parameter6: boolean;

        i0 := @parameter7: int;

        i1 := @parameter8: int;

        r4 := @parameter9: com.opengamma.financial.convention.calendar.Calendar;

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object,java.lang.String)>(r0, "day-count");

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object,java.lang.String)>(r1, "date");

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object,java.lang.String)>(r4, "calendar");

        staticinvoke <org.apache.commons.lang.Validate: void noNullElements(java.lang.Object[],java.lang.String)>(r2, "nominalDates");

        staticinvoke <org.apache.commons.lang.Validate: void noNullElements(java.lang.Object[],java.lang.String)>(r3, "settlementDates");

        $b3 = d1 cmpl 0.0;

        if $b3 <= 0 goto label01;

        $z4 = 1;

        goto label02;

     label01:
        $z4 = 0;

     label02:
        staticinvoke <org.apache.commons.lang.Validate: void isTrue(boolean)>($z4);

        if i0 < 0 goto label03;

        $z5 = 1;

        goto label04;

     label03:
        $z5 = 0;

     label04:
        staticinvoke <org.apache.commons.lang.Validate: void isTrue(boolean)>($z5);

        i2 = lengthof r2;

        if i1 < 0 goto label05;

        if i1 >= i2 goto label05;

        $z6 = 1;

        goto label06;

     label05:
        $z6 = 0;

     label06:
        staticinvoke <org.apache.commons.lang.Validate: void isTrue(boolean)>($z6);

        r5 = r2[i1];

        $i5 = i1 + 1;

        r6 = r2[$i5];

        $z7 = virtualinvoke r1.<org.threeten.bp.LocalDate: boolean isAfter(org.threeten.bp.chrono.ChronoLocalDate)>(r6);

        if $z7 == 0 goto label08;

        $i4 = i1 + 1;

        $r7 = r3[$i4];

        $z3 = virtualinvoke r1.<org.threeten.bp.LocalDate: boolean isBefore(org.threeten.bp.chrono.ChronoLocalDate)>($r7);

        if $z3 == 0 goto label07;

        d3 = d0;

        goto label09;

     label07:
        d3 = 0.0;

        goto label09;

     label08:
        d3 = staticinvoke <com.opengamma.financial.convention.daycount.AccruedInterestCalculator: double getAccruedInterest(com.opengamma.financial.convention.daycount.DayCount,int,int,org.threeten.bp.LocalDate,org.threeten.bp.LocalDate,org.threeten.bp.LocalDate,double,double,boolean)>(r0, i1, i2, r5, r1, r6, d0, d1, z0);

     label09:
        $i6 = i1 + 1;

        r8 = r2[$i6];

        i7 = 0;

     label10:
        if i7 >= i0 goto label13;

     label11:
        $z2 = interfaceinvoke r4.<com.opengamma.financial.convention.calendar.Calendar: boolean isWorkingDay(org.threeten.bp.LocalDate)>(r8);

        if $z2 != 0 goto label12;

        r8 = virtualinvoke r8.<org.threeten.bp.LocalDate: org.threeten.bp.LocalDate minusDays(long)>(1L);

        goto label11;

     label12:
        r8 = virtualinvoke r8.<org.threeten.bp.LocalDate: org.threeten.bp.LocalDate minusDays(long)>(1L);

        i7 = i7 + 1;

        goto label10;

     label13:
        if i0 == 0 goto label14;

        $z1 = virtualinvoke r8.<org.threeten.bp.LocalDate: boolean isBefore(org.threeten.bp.chrono.ChronoLocalDate)>(r1);

        if $z1 == 0 goto label14;

        $d2 = d3 - d0;

        return $d2;

     label14:
        return d3;
    }

    public static double getAccruedInterest(com.opengamma.financial.convention.daycount.DayCount, int, int, org.threeten.bp.ZonedDateTime, org.threeten.bp.ZonedDateTime, org.threeten.bp.ZonedDateTime, double, double, boolean)
    {
        com.opengamma.financial.convention.daycount.DayCount r0;
        int i0, i1;
        org.threeten.bp.ZonedDateTime r1, r2, r3;
        double d0, d1, $d2, $d3, $d4, $d5;
        boolean z0, $z1, $z2, $z3;
        com.opengamma.financial.convention.daycount.ThirtyUThreeSixty $r4;
        com.opengamma.financial.convention.daycount.ActualActualICMA $r5;
        com.opengamma.financial.convention.daycount.ActualActualICMANormal $r6;
        java.lang.IllegalArgumentException $r7;
        com.opengamma.financial.convention.StubType r8, r9;

        r0 := @parameter0: com.opengamma.financial.convention.daycount.DayCount;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r1 := @parameter3: org.threeten.bp.ZonedDateTime;

        r2 := @parameter4: org.threeten.bp.ZonedDateTime;

        r3 := @parameter5: org.threeten.bp.ZonedDateTime;

        d0 := @parameter6: double;

        d1 := @parameter7: double;

        z0 := @parameter8: boolean;

        $z1 = r0 instanceof com.opengamma.financial.convention.daycount.ActualActualICMANormal;

        if $z1 == 0 goto label2;

        if z0 == 0 goto label1;

        $r7 = new java.lang.IllegalArgumentException;

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Inconsistent definition; asked for accrual with EOM convention but are not using Actual/Actual ICMA");

        throw $r7;

     label1:
        r8 = staticinvoke <com.opengamma.financial.convention.daycount.AccruedInterestCalculator: com.opengamma.financial.convention.StubType getStubType(int,int,org.threeten.bp.ZonedDateTime,org.threeten.bp.ZonedDateTime,double,boolean)>(i0, i1, r1, r3, d1, z0);

        $r6 = (com.opengamma.financial.convention.daycount.ActualActualICMANormal) r0;

        $d5 = virtualinvoke $r6.<com.opengamma.financial.convention.daycount.ActualActualICMANormal: double getAccruedInterest(org.threeten.bp.ZonedDateTime,org.threeten.bp.ZonedDateTime,org.threeten.bp.ZonedDateTime,double,double,com.opengamma.financial.convention.StubType)>(r1, r2, r3, d0, d1, r8);

        return $d5;

     label2:
        $z2 = r0 instanceof com.opengamma.financial.convention.daycount.ActualActualICMA;

        if $z2 == 0 goto label3;

        r9 = staticinvoke <com.opengamma.financial.convention.daycount.AccruedInterestCalculator: com.opengamma.financial.convention.StubType getStubType(int,int,org.threeten.bp.ZonedDateTime,org.threeten.bp.ZonedDateTime,double,boolean)>(i0, i1, r1, r3, d1, z0);

        $r5 = (com.opengamma.financial.convention.daycount.ActualActualICMA) r0;

        $d4 = virtualinvoke $r5.<com.opengamma.financial.convention.daycount.ActualActualICMA: double getAccruedInterest(org.threeten.bp.ZonedDateTime,org.threeten.bp.ZonedDateTime,org.threeten.bp.ZonedDateTime,double,double,com.opengamma.financial.convention.StubType)>(r1, r2, r3, d0, d1, r9);

        return $d4;

     label3:
        $z3 = r0 instanceof com.opengamma.financial.convention.daycount.ThirtyUThreeSixty;

        if $z3 == 0 goto label4;

        $r4 = (com.opengamma.financial.convention.daycount.ThirtyUThreeSixty) r0;

        $d3 = virtualinvoke $r4.<com.opengamma.financial.convention.daycount.ThirtyUThreeSixty: double getAccruedInterest(org.threeten.bp.ZonedDateTime,org.threeten.bp.ZonedDateTime,double,boolean)>(r1, r2, d0, z0);

        return $d3;

     label4:
        $d2 = interfaceinvoke r0.<com.opengamma.financial.convention.daycount.DayCount: double getAccruedInterest(org.threeten.bp.ZonedDateTime,org.threeten.bp.ZonedDateTime,org.threeten.bp.ZonedDateTime,double,double)>(r1, r2, r3, d0, d1);

        return $d2;
    }

    public static double getAccruedInterest(com.opengamma.financial.convention.daycount.DayCount, int, int, org.threeten.bp.LocalDate, org.threeten.bp.LocalDate, org.threeten.bp.LocalDate, double, double, boolean)
    {
        com.opengamma.financial.convention.daycount.DayCount r0;
        int i0, i1;
        org.threeten.bp.LocalDate r1, r2, r3;
        double d0, d1, $d2, $d3, $d4, $d5;
        boolean z0, $z1, $z2, $z3;
        com.opengamma.financial.convention.daycount.ThirtyUThreeSixty $r4;
        com.opengamma.financial.convention.daycount.ActualActualICMA $r5;
        com.opengamma.financial.convention.daycount.ActualActualICMANormal $r6;
        java.lang.IllegalArgumentException $r7;
        com.opengamma.financial.convention.StubType r8, r9;

        r0 := @parameter0: com.opengamma.financial.convention.daycount.DayCount;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r1 := @parameter3: org.threeten.bp.LocalDate;

        r2 := @parameter4: org.threeten.bp.LocalDate;

        r3 := @parameter5: org.threeten.bp.LocalDate;

        d0 := @parameter6: double;

        d1 := @parameter7: double;

        z0 := @parameter8: boolean;

        $z1 = r0 instanceof com.opengamma.financial.convention.daycount.ActualActualICMANormal;

        if $z1 == 0 goto label2;

        if z0 == 0 goto label1;

        $r7 = new java.lang.IllegalArgumentException;

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Inconsistent definition; asked for accrual with EOM convention but are not using Actual/Actual ICMA");

        throw $r7;

     label1:
        r8 = staticinvoke <com.opengamma.financial.convention.daycount.AccruedInterestCalculator: com.opengamma.financial.convention.StubType getStubType(int,int,org.threeten.bp.LocalDate,org.threeten.bp.LocalDate,double,boolean)>(i0, i1, r1, r3, d1, z0);

        $r6 = (com.opengamma.financial.convention.daycount.ActualActualICMANormal) r0;

        $d5 = virtualinvoke $r6.<com.opengamma.financial.convention.daycount.ActualActualICMANormal: double getAccruedInterest(org.threeten.bp.LocalDate,org.threeten.bp.LocalDate,org.threeten.bp.LocalDate,double,double,com.opengamma.financial.convention.StubType)>(r1, r2, r3, d0, d1, r8);

        return $d5;

     label2:
        $z2 = r0 instanceof com.opengamma.financial.convention.daycount.ActualActualICMA;

        if $z2 == 0 goto label3;

        r9 = staticinvoke <com.opengamma.financial.convention.daycount.AccruedInterestCalculator: com.opengamma.financial.convention.StubType getStubType(int,int,org.threeten.bp.LocalDate,org.threeten.bp.LocalDate,double,boolean)>(i0, i1, r1, r3, d1, z0);

        $r5 = (com.opengamma.financial.convention.daycount.ActualActualICMA) r0;

        $d4 = virtualinvoke $r5.<com.opengamma.financial.convention.daycount.ActualActualICMA: double getAccruedInterest(org.threeten.bp.LocalDate,org.threeten.bp.LocalDate,org.threeten.bp.LocalDate,double,double,com.opengamma.financial.convention.StubType)>(r1, r2, r3, d0, d1, r9);

        return $d4;

     label3:
        $z3 = r0 instanceof com.opengamma.financial.convention.daycount.ThirtyUThreeSixty;

        if $z3 == 0 goto label4;

        $r4 = (com.opengamma.financial.convention.daycount.ThirtyUThreeSixty) r0;

        $d3 = virtualinvoke $r4.<com.opengamma.financial.convention.daycount.ThirtyUThreeSixty: double getAccruedInterest(org.threeten.bp.LocalDate,org.threeten.bp.LocalDate,double,boolean)>(r1, r2, d0, z0);

        return $d3;

     label4:
        $d2 = interfaceinvoke r0.<com.opengamma.financial.convention.daycount.DayCount: double getAccruedInterest(org.threeten.bp.LocalDate,org.threeten.bp.LocalDate,org.threeten.bp.LocalDate,double,double)>(r1, r2, r3, d0, d1);

        return $d2;
    }

    private static com.opengamma.financial.convention.StubType getStubType(int, int, org.threeten.bp.ZonedDateTime, org.threeten.bp.ZonedDateTime, double, boolean)
    {
        int i0, i1, $i2;
        org.threeten.bp.ZonedDateTime r0, r1;
        double d0;
        boolean z0;
        org.threeten.bp.LocalDate[] $r2, $r5;
        org.threeten.bp.LocalDate $r3, $r4, $r6, $r7;
        com.opengamma.financial.convention.StubType r9;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r0 := @parameter2: org.threeten.bp.ZonedDateTime;

        r1 := @parameter3: org.threeten.bp.ZonedDateTime;

        d0 := @parameter4: double;

        z0 := @parameter5: boolean;

        if i0 != 0 goto label1;

        $r5 = newarray (org.threeten.bp.LocalDate)[2];

        $r6 = virtualinvoke r0.<org.threeten.bp.ZonedDateTime: org.threeten.bp.LocalDate toLocalDate()>();

        $r5[0] = $r6;

        $r7 = virtualinvoke r1.<org.threeten.bp.ZonedDateTime: org.threeten.bp.LocalDate toLocalDate()>();

        $r5[1] = $r7;

        r9 = staticinvoke <com.opengamma.financial.convention.StubCalculator: com.opengamma.financial.convention.StubType getStartStubType(org.threeten.bp.LocalDate[],double,boolean)>($r5, d0, z0);

        goto label3;

     label1:
        $i2 = i1 - 2;

        if i0 != $i2 goto label2;

        $r2 = newarray (org.threeten.bp.LocalDate)[2];

        $r3 = virtualinvoke r0.<org.threeten.bp.ZonedDateTime: org.threeten.bp.LocalDate toLocalDate()>();

        $r2[0] = $r3;

        $r4 = virtualinvoke r1.<org.threeten.bp.ZonedDateTime: org.threeten.bp.LocalDate toLocalDate()>();

        $r2[1] = $r4;

        r9 = staticinvoke <com.opengamma.financial.convention.StubCalculator: com.opengamma.financial.convention.StubType getEndStubType(org.threeten.bp.LocalDate[],double,boolean)>($r2, d0, z0);

        goto label3;

     label2:
        r9 = <com.opengamma.financial.convention.StubType: com.opengamma.financial.convention.StubType NONE>;

     label3:
        return r9;
    }

    private static com.opengamma.financial.convention.StubType getStubType(int, int, org.threeten.bp.LocalDate, org.threeten.bp.LocalDate, double, boolean)
    {
        int i0, i1, $i2;
        org.threeten.bp.LocalDate r0, r1;
        double d0;
        boolean z0;
        org.threeten.bp.LocalDate[] $r2, $r3;
        com.opengamma.financial.convention.StubType r5;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r0 := @parameter2: org.threeten.bp.LocalDate;

        r1 := @parameter3: org.threeten.bp.LocalDate;

        d0 := @parameter4: double;

        z0 := @parameter5: boolean;

        if i0 != 0 goto label1;

        $r3 = newarray (org.threeten.bp.LocalDate)[2];

        $r3[0] = r0;

        $r3[1] = r1;

        r5 = staticinvoke <com.opengamma.financial.convention.StubCalculator: com.opengamma.financial.convention.StubType getStartStubType(org.threeten.bp.LocalDate[],double,boolean)>($r3, d0, z0);

        goto label3;

     label1:
        $i2 = i1 - 2;

        if i0 != $i2 goto label2;

        $r2 = newarray (org.threeten.bp.LocalDate)[2];

        $r2[0] = r0;

        $r2[1] = r1;

        r5 = staticinvoke <com.opengamma.financial.convention.StubCalculator: com.opengamma.financial.convention.StubType getEndStubType(org.threeten.bp.LocalDate[],double,boolean)>($r2, d0, z0);

        goto label3;

     label2:
        r5 = <com.opengamma.financial.convention.StubType: com.opengamma.financial.convention.StubType NONE>;

     label3:
        return r5;
    }
}
