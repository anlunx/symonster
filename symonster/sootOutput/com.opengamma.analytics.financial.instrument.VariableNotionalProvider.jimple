public class com.opengamma.analytics.financial.instrument.VariableNotionalProvider extends java.lang.Object implements com.opengamma.analytics.financial.instrument.NotionalProvider
{
    private org.threeten.bp.LocalDate[] _dates;
    private final double[] _notionals;

    public void <init>(org.threeten.bp.LocalDate[], double[])
    {
        com.opengamma.analytics.financial.instrument.VariableNotionalProvider r0;
        org.threeten.bp.LocalDate[] r1, $r6;
        double[] r2, $r7;
        int i0, $i1;
        java.lang.Object[] $r5;
        boolean $z0;

        r0 := @this: com.opengamma.analytics.financial.instrument.VariableNotionalProvider;

        r1 := @parameter0: org.threeten.bp.LocalDate[];

        r2 := @parameter1: double[];

        specialinvoke r0.<java.lang.Object: void <init>()>();

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object[] notEmpty(java.lang.Object[],java.lang.String)>(r1, "dates");

        staticinvoke <com.opengamma.util.ArgumentChecker: double[] notEmpty(double[],java.lang.String)>(r2, "notionals");

        i0 = lengthof r1;

        $i1 = lengthof r2;

        if $i1 != i0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z0, "dates and notionals should have the same length");

        $r5 = staticinvoke <java.util.Arrays: java.lang.Object[] copyOf(java.lang.Object[],int)>(r1, i0);

        $r6 = (org.threeten.bp.LocalDate[]) $r5;

        r0.<com.opengamma.analytics.financial.instrument.VariableNotionalProvider: org.threeten.bp.LocalDate[] _dates> = $r6;

        $r7 = staticinvoke <java.util.Arrays: double[] copyOf(double[],int)>(r2, i0);

        r0.<com.opengamma.analytics.financial.instrument.VariableNotionalProvider: double[] _notionals> = $r7;

        return;
    }

    public void <init>(double[])
    {
        com.opengamma.analytics.financial.instrument.VariableNotionalProvider r0;
        double[] r1, $r3;
        int $i0;

        r0 := @this: com.opengamma.analytics.financial.instrument.VariableNotionalProvider;

        r1 := @parameter0: double[];

        specialinvoke r0.<java.lang.Object: void <init>()>();

        staticinvoke <com.opengamma.util.ArgumentChecker: double[] notEmpty(double[],java.lang.String)>(r1, "notionals");

        r0.<com.opengamma.analytics.financial.instrument.VariableNotionalProvider: org.threeten.bp.LocalDate[] _dates> = null;

        $i0 = lengthof r1;

        $r3 = staticinvoke <java.util.Arrays: double[] copyOf(double[],int)>(r1, $i0);

        r0.<com.opengamma.analytics.financial.instrument.VariableNotionalProvider: double[] _notionals> = $r3;

        return;
    }

    public com.opengamma.analytics.financial.instrument.VariableNotionalProvider withZonedDateTime(java.util.List)
    {
        com.opengamma.analytics.financial.instrument.VariableNotionalProvider r0, $r5;
        java.util.List r1;
        int i0, $i1, i2;
        org.threeten.bp.LocalDate[] r2;
        double[] $r4, $r6;
        java.lang.Object $r7;
        org.threeten.bp.ZonedDateTime $r8;
        org.threeten.bp.LocalDate $r9;
        boolean $z0;

        r0 := @this: com.opengamma.analytics.financial.instrument.VariableNotionalProvider;

        r1 := @parameter0: java.util.List;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.util.Collection notEmpty(java.util.Collection,java.lang.String)>(r1, "dates");

        i0 = interfaceinvoke r1.<java.util.List: int size()>();

        $r4 = r0.<com.opengamma.analytics.financial.instrument.VariableNotionalProvider: double[] _notionals>;

        $i1 = lengthof $r4;

        if $i1 != i0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z0, "zonedDates and notionals should have the same length");

        r2 = newarray (org.threeten.bp.LocalDate)[i0];

        i2 = 0;

     label3:
        if i2 >= i0 goto label4;

        $r7 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i2);

        $r8 = (org.threeten.bp.ZonedDateTime) $r7;

        $r9 = virtualinvoke $r8.<org.threeten.bp.ZonedDateTime: org.threeten.bp.LocalDate toLocalDate()>();

        r2[i2] = $r9;

        i2 = i2 + 1;

        goto label3;

     label4:
        $r5 = new com.opengamma.analytics.financial.instrument.VariableNotionalProvider;

        $r6 = r0.<com.opengamma.analytics.financial.instrument.VariableNotionalProvider: double[] _notionals>;

        specialinvoke $r5.<com.opengamma.analytics.financial.instrument.VariableNotionalProvider: void <init>(org.threeten.bp.LocalDate[],double[])>(r2, $r6);

        return $r5;
    }

    public double getAmount(org.threeten.bp.LocalDate)
    {
        com.opengamma.analytics.financial.instrument.VariableNotionalProvider r0;
        org.threeten.bp.LocalDate r1, $r11;
        org.threeten.bp.LocalDate[] $r2, $r3, $r10;
        int $i0, i1;
        java.lang.IllegalArgumentException $r4, $r13;
        java.lang.StringBuilder $r5, $r6, $r7, $r8;
        java.lang.String $r9;
        boolean $z0;
        double[] $r12;
        double $d0;

        r0 := @this: com.opengamma.analytics.financial.instrument.VariableNotionalProvider;

        r1 := @parameter0: org.threeten.bp.LocalDate;

        $r2 = r0.<com.opengamma.analytics.financial.instrument.VariableNotionalProvider: org.threeten.bp.LocalDate[] _dates>;

        if $r2 != null goto label1;

        $r13 = new java.lang.IllegalArgumentException;

        specialinvoke $r13.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("date set is null");

        throw $r13;

     label1:
        i1 = 0;

     label2:
        $r3 = r0.<com.opengamma.analytics.financial.instrument.VariableNotionalProvider: org.threeten.bp.LocalDate[] _dates>;

        $i0 = lengthof $r3;

        if i1 >= $i0 goto label4;

        $r10 = r0.<com.opengamma.analytics.financial.instrument.VariableNotionalProvider: org.threeten.bp.LocalDate[] _dates>;

        $r11 = $r10[i1];

        $z0 = virtualinvoke $r11.<org.threeten.bp.LocalDate: boolean equals(java.lang.Object)>(r1);

        if $z0 == 0 goto label3;

        $r12 = r0.<com.opengamma.analytics.financial.instrument.VariableNotionalProvider: double[] _notionals>;

        $d0 = $r12[i1];

        return $d0;

     label3:
        i1 = i1 + 1;

        goto label2;

     label4:
        $r4 = new java.lang.IllegalArgumentException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("The date ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is not found in the date set");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r9);

        throw $r4;
    }

    public double[] getNotionals()
    {
        com.opengamma.analytics.financial.instrument.VariableNotionalProvider r0;
        double[] $r1;

        r0 := @this: com.opengamma.analytics.financial.instrument.VariableNotionalProvider;

        $r1 = r0.<com.opengamma.analytics.financial.instrument.VariableNotionalProvider: double[] _notionals>;

        return $r1;
    }

    public org.threeten.bp.LocalDate[] getDates()
    {
        com.opengamma.analytics.financial.instrument.VariableNotionalProvider r0;
        org.threeten.bp.LocalDate[] $r1;

        r0 := @this: com.opengamma.analytics.financial.instrument.VariableNotionalProvider;

        $r1 = r0.<com.opengamma.analytics.financial.instrument.VariableNotionalProvider: org.threeten.bp.LocalDate[] _dates>;

        return $r1;
    }
}
