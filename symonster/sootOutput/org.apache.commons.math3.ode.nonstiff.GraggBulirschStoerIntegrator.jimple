public class org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator extends org.apache.commons.math3.ode.nonstiff.AdaptiveStepsizeIntegrator
{
    private static final java.lang.String METHOD_NAME;
    private int maxOrder;
    private int[] sequence;
    private int[] costPerStep;
    private double[] costPerTimeUnit;
    private double[] optimalStep;
    private double[][] coeff;
    private boolean performTest;
    private int maxChecks;
    private int maxIter;
    private double stabilityReduction;
    private double stepControl1;
    private double stepControl2;
    private double stepControl3;
    private double stepControl4;
    private double orderControl1;
    private double orderControl2;
    private boolean useInterpolationError;
    private int mudif;

    public void <init>(double, double, double, double)
    {
        org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator r0;
        double d0, d1, d2, d3;

        r0 := @this: org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        d2 := @parameter2: double;

        d3 := @parameter3: double;

        specialinvoke r0.<org.apache.commons.math3.ode.nonstiff.AdaptiveStepsizeIntegrator: void <init>(java.lang.String,double,double,double,double)>("Gragg-Bulirsch-Stoer", d0, d1, d2, d3);

        virtualinvoke r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: void setStabilityCheck(boolean,int,int,double)>(1, -1, -1, -1.0);

        virtualinvoke r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: void setControlFactors(double,double,double,double)>(-1.0, -1.0, -1.0, -1.0);

        virtualinvoke r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: void setOrderControl(int,double,double)>(-1, -1.0, -1.0);

        virtualinvoke r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: void setInterpolationControl(boolean,int)>(1, -1);

        return;
    }

    public void <init>(double, double, double[], double[])
    {
        org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator r0;
        double d0, d1;
        double[] r1, r2;

        r0 := @this: org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        r1 := @parameter2: double[];

        r2 := @parameter3: double[];

        specialinvoke r0.<org.apache.commons.math3.ode.nonstiff.AdaptiveStepsizeIntegrator: void <init>(java.lang.String,double,double,double[],double[])>("Gragg-Bulirsch-Stoer", d0, d1, r1, r2);

        virtualinvoke r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: void setStabilityCheck(boolean,int,int,double)>(1, -1, -1, -1.0);

        virtualinvoke r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: void setControlFactors(double,double,double,double)>(-1.0, -1.0, -1.0, -1.0);

        virtualinvoke r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: void setOrderControl(int,double,double)>(-1, -1.0, -1.0);

        virtualinvoke r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: void setInterpolationControl(boolean,int)>(1, -1);

        return;
    }

    public void setStabilityCheck(boolean, int, int, double)
    {
        org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator r0;
        boolean z0;
        int i0, i1, $i4, $i5;
        double d0;
        byte $b2, $b3;

        r0 := @this: org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator;

        z0 := @parameter0: boolean;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        d0 := @parameter3: double;

        r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: boolean performTest> = z0;

        if i0 > 0 goto label1;

        $i4 = 2;

        goto label2;

     label1:
        $i4 = i0;

     label2:
        r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: int maxIter> = $i4;

        if i1 > 0 goto label3;

        $i5 = 1;

        goto label4;

     label3:
        $i5 = i1;

     label4:
        r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: int maxChecks> = $i5;

        $b2 = d0 cmpg 1.0E-4;

        if $b2 < 0 goto label5;

        $b3 = d0 cmpl 0.9999;

        if $b3 <= 0 goto label6;

     label5:
        r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: double stabilityReduction> = 0.5;

        goto label7;

     label6:
        r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: double stabilityReduction> = d0;

     label7:
        return;
    }

    public void setControlFactors(double, double, double, double)
    {
        org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator r0;
        double d0, d1, d2, d3;
        byte $b0, $b1, $b2, $b3, $b4, $b5, $b6, $b7;

        r0 := @this: org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        d2 := @parameter2: double;

        d3 := @parameter3: double;

        $b0 = d0 cmpg 1.0E-4;

        if $b0 < 0 goto label01;

        $b7 = d0 cmpl 0.9999;

        if $b7 <= 0 goto label02;

     label01:
        r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: double stepControl1> = 0.65;

        goto label03;

     label02:
        r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: double stepControl1> = d0;

     label03:
        $b1 = d1 cmpg 1.0E-4;

        if $b1 < 0 goto label04;

        $b6 = d1 cmpl 0.9999;

        if $b6 <= 0 goto label05;

     label04:
        r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: double stepControl2> = 0.94;

        goto label06;

     label05:
        r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: double stepControl2> = d1;

     label06:
        $b2 = d2 cmpg 1.0E-4;

        if $b2 < 0 goto label07;

        $b5 = d2 cmpl 0.9999;

        if $b5 <= 0 goto label08;

     label07:
        r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: double stepControl3> = 0.02;

        goto label09;

     label08:
        r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: double stepControl3> = d2;

     label09:
        $b3 = d3 cmpg 1.0001;

        if $b3 < 0 goto label10;

        $b4 = d3 cmpl 999.9;

        if $b4 <= 0 goto label11;

     label10:
        r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: double stepControl4> = 4.0;

        goto label12;

     label11:
        r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: double stepControl4> = d3;

     label12:
        return;
    }

    public void setOrderControl(int, double, double)
    {
        org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator r0;
        int i0, $i4;
        double d0, d1;
        byte $b1, $b2, $b3, $b5;

        r0 := @this: org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator;

        i0 := @parameter0: int;

        d0 := @parameter1: double;

        d1 := @parameter2: double;

        if i0 <= 6 goto label1;

        $i4 = i0 % 2;

        if $i4 == 0 goto label2;

     label1:
        r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: int maxOrder> = 18;

     label2:
        $b5 = d0 cmpg 1.0E-4;

        if $b5 < 0 goto label3;

        $b3 = d0 cmpl 0.9999;

        if $b3 <= 0 goto label4;

     label3:
        r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: double orderControl1> = 0.8;

        goto label5;

     label4:
        r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: double orderControl1> = d0;

     label5:
        $b1 = d1 cmpg 1.0E-4;

        if $b1 < 0 goto label6;

        $b2 = d1 cmpl 0.9999;

        if $b2 <= 0 goto label7;

     label6:
        r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: double orderControl2> = 0.9;

        goto label8;

     label7:
        r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: double orderControl2> = d1;

     label8:
        specialinvoke r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: void initializeArrays()>();

        return;
    }

    public void addStepHandler(org.apache.commons.math3.ode.sampling.StepHandler)
    {
        org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator r0;
        org.apache.commons.math3.ode.sampling.StepHandler r1;

        r0 := @this: org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator;

        r1 := @parameter0: org.apache.commons.math3.ode.sampling.StepHandler;

        specialinvoke r0.<org.apache.commons.math3.ode.nonstiff.AdaptiveStepsizeIntegrator: void addStepHandler(org.apache.commons.math3.ode.sampling.StepHandler)>(r1);

        specialinvoke r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: void initializeArrays()>();

        return;
    }

    public void addEventHandler(org.apache.commons.math3.ode.events.EventHandler, double, double, int, org.apache.commons.math3.analysis.solvers.UnivariateSolver)
    {
        org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator r0;
        org.apache.commons.math3.ode.events.EventHandler r1;
        double d0, d1;
        int i0;
        org.apache.commons.math3.analysis.solvers.UnivariateSolver r2;

        r0 := @this: org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator;

        r1 := @parameter0: org.apache.commons.math3.ode.events.EventHandler;

        d0 := @parameter1: double;

        d1 := @parameter2: double;

        i0 := @parameter3: int;

        r2 := @parameter4: org.apache.commons.math3.analysis.solvers.UnivariateSolver;

        specialinvoke r0.<org.apache.commons.math3.ode.nonstiff.AdaptiveStepsizeIntegrator: void addEventHandler(org.apache.commons.math3.ode.events.EventHandler,double,double,int,org.apache.commons.math3.analysis.solvers.UnivariateSolver)>(r1, d0, d1, i0, r2);

        specialinvoke r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: void initializeArrays()>();

        return;
    }

    private void initializeArrays()
    {
        org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, i16, i17, i18, i19;
        double d0, $d1, $d2, $d3, $d4, $d5;
        int[] $r1, $r2, $r3, $r7, $r8, $r10, $r11, $r14, $r15, $r16, $r17, $r18;
        double[][] $r4, $r9, $r12;
        double[] $r5, $r6, $r13, $r19;

        r0 := @this: org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator;

        $i1 = r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: int maxOrder>;

        i0 = $i1 / 2;

        $r1 = r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: int[] sequence>;

        if $r1 == null goto label01;

        $r18 = r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: int[] sequence>;

        $i15 = lengthof $r18;

        if $i15 == i0 goto label02;

     label01:
        $r2 = newarray (int)[i0];

        r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: int[] sequence> = $r2;

        $r3 = newarray (int)[i0];

        r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: int[] costPerStep> = $r3;

        $r4 = newarray (double[])[i0];

        r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: double[][] coeff> = $r4;

        $r5 = newarray (double)[i0];

        r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: double[] costPerTimeUnit> = $r5;

        $r6 = newarray (double)[i0];

        r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: double[] optimalStep> = $r6;

     label02:
        i16 = 0;

     label03:
        if i16 >= i0 goto label04;

        $r17 = r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: int[] sequence>;

        $i13 = 4 * i16;

        $i14 = $i13 + 2;

        $r17[i16] = $i14;

        i16 = i16 + 1;

        goto label03;

     label04:
        $r8 = r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: int[] costPerStep>;

        $r7 = r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: int[] sequence>;

        $i2 = $r7[0];

        $i3 = $i2 + 1;

        $r8[0] = $i3;

        i17 = 1;

     label05:
        if i17 >= i0 goto label06;

        $r16 = r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: int[] costPerStep>;

        $r14 = r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: int[] costPerStep>;

        $i9 = i17 - 1;

        $i11 = $r14[$i9];

        $r15 = r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: int[] sequence>;

        $i10 = $r15[i17];

        $i12 = $i11 + $i10;

        $r16[i17] = $i12;

        i17 = i17 + 1;

        goto label05;

     label06:
        i18 = 0;

     label07:
        if i18 >= i0 goto label12;

        $r9 = r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: double[][] coeff>;

        $i8 = i18;

        if i18 <= 0 goto label08;

        $r19 = newarray (double)[i18];

        goto label09;

     label08:
        $r19 = null;

     label09:
        $r9[$i8] = $r19;

        i19 = 0;

     label10:
        if i19 >= i18 goto label11;

        $r10 = r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: int[] sequence>;

        $i4 = $r10[i18];

        $d2 = (double) $i4;

        $r11 = r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: int[] sequence>;

        $i5 = i18 - i19;

        $i6 = $i5 - 1;

        $i7 = $r11[$i6];

        $d1 = (double) $i7;

        d0 = $d2 / $d1;

        $r12 = r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: double[][] coeff>;

        $r13 = $r12[i18];

        $d3 = d0 * d0;

        $d4 = $d3 - 1.0;

        $d5 = 1.0 / $d4;

        $r13[i19] = $d5;

        i19 = i19 + 1;

        goto label10;

     label11:
        i18 = i18 + 1;

        goto label07;

     label12:
        return;
    }

    public void setInterpolationControl(boolean, int)
    {
        org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator r0;
        boolean z0;
        int i0;

        r0 := @this: org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator;

        z0 := @parameter0: boolean;

        i0 := @parameter1: int;

        r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: boolean useInterpolationError> = z0;

        if i0 <= 0 goto label1;

        if i0 < 7 goto label2;

     label1:
        r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: int mudif> = 4;

        goto label3;

     label2:
        r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: int mudif> = i0;

     label3:
        return;
    }

    private void rescale(double[], double[], double[])
    {
        org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator r0;
        double[] r1, r2, r3, $r4, $r5, $r6;
        int $i0, $i1, i2, i3;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, d16, d17;

        r0 := @this: org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator;

        r1 := @parameter0: double[];

        r2 := @parameter1: double[];

        r3 := @parameter2: double[];

        $r4 = r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: double[] vecAbsoluteTolerance>;

        if $r4 != null goto label3;

        i2 = 0;

     label1:
        $i1 = lengthof r3;

        if i2 >= $i1 goto label2;

        $d8 = r1[i2];

        $d9 = staticinvoke <org.apache.commons.math3.util.FastMath: double abs(double)>($d8);

        $d10 = r2[i2];

        $d11 = staticinvoke <org.apache.commons.math3.util.FastMath: double abs(double)>($d10);

        d16 = staticinvoke <org.apache.commons.math3.util.FastMath: double max(double,double)>($d9, $d11);

        $d14 = r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: double scalAbsoluteTolerance>;

        $d12 = r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: double scalRelativeTolerance>;

        $d13 = $d12 * d16;

        $d15 = $d14 + $d13;

        r3[i2] = $d15;

        i2 = i2 + 1;

        goto label1;

     label2:
        goto label5;

     label3:
        i3 = 0;

     label4:
        $i0 = lengthof r3;

        if i3 >= $i0 goto label5;

        $d0 = r1[i3];

        $d1 = staticinvoke <org.apache.commons.math3.util.FastMath: double abs(double)>($d0);

        $d2 = r2[i3];

        $d3 = staticinvoke <org.apache.commons.math3.util.FastMath: double abs(double)>($d2);

        d17 = staticinvoke <org.apache.commons.math3.util.FastMath: double max(double,double)>($d1, $d3);

        $r5 = r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: double[] vecAbsoluteTolerance>;

        $d6 = $r5[i3];

        $r6 = r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: double[] vecRelativeTolerance>;

        $d4 = $r6[i3];

        $d5 = $d4 * d17;

        $d7 = $d6 + $d5;

        r3[i3] = $d7;

        i3 = i3 + 1;

        goto label4;

     label5:
        return;
    }

    private boolean tryStep(double, double[], double, int, double[], double[][], double[], double[], double[]) throws org.apache.commons.math3.exception.MaxCountExceededException, org.apache.commons.math3.exception.DimensionMismatchException
    {
        org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator r0;
        double d0, d1, d2, d3, d4, d5, d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21, $d22, $d23, $d24, $d25, $d26, $d27, $d28, $d29, $d30, $d31, $d32, $d33, d34, d35, d36;
        double[] r1, r2, r4, r5, r6, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i11, $i12, i13, i14, i15, $i16, i17, i18, i19;
        double[][] r3;
        int[] $r7;
        boolean $z0;
        byte $b10;

        r0 := @this: org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator;

        d0 := @parameter0: double;

        r1 := @parameter1: double[];

        d1 := @parameter2: double;

        i0 := @parameter3: int;

        r2 := @parameter4: double[];

        r3 := @parameter5: double[][];

        r4 := @parameter6: double[];

        r5 := @parameter7: double[];

        r6 := @parameter8: double[];

        $r7 = r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: int[] sequence>;

        i1 = $r7[i0];

        $d7 = (double) i1;

        d2 = d1 / $d7;

        d3 = 2.0 * d2;

        d34 = d0 + d2;

        i13 = 0;

     label01:
        $i2 = lengthof r1;

        if i13 >= $i2 goto label02;

        $d29 = r1[i13];

        r6[i13] = $d29;

        $d32 = r1[i13];

        $r15 = r3[0];

        $d30 = $r15[i13];

        $d31 = d2 * $d30;

        $d33 = $d32 + $d31;

        r5[i13] = $d33;

        i13 = i13 + 1;

        goto label01;

     label02:
        $r8 = r3[1];

        virtualinvoke r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: void computeDerivatives(double,double[],double[])>(d34, r5, $r8);

        i14 = 1;

     label03:
        if i14 >= i1 goto label12;

        $i4 = 2 * i14;

        if $i4 != i1 goto label04;

        $i12 = lengthof r1;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r5, 0, r4, 0, $i12);

     label04:
        d34 = d34 + d2;

        i15 = 0;

     label05:
        $i16 = lengthof r1;

        if i15 >= $i16 goto label06;

        d4 = r5[i15];

        $d27 = r6[i15];

        $r14 = r3[i14];

        $d25 = $r14[i15];

        $d26 = d3 * $d25;

        $d28 = $d27 + $d26;

        r5[i15] = $d28;

        r6[i15] = d4;

        i15 = i15 + 1;

        goto label05;

     label06:
        $i5 = i14 + 1;

        $r10 = r3[$i5];

        virtualinvoke r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: void computeDerivatives(double,double[],double[])>(d34, r5, $r10);

        $z0 = r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: boolean performTest>;

        if $z0 == 0 goto label11;

        $i6 = r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: int maxChecks>;

        if i14 > $i6 goto label11;

        $i7 = r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: int maxIter>;

        if i0 >= $i7 goto label11;

        d35 = 0.0;

        i17 = 0;

     label07:
        $i8 = lengthof r2;

        if i17 >= $i8 goto label08;

        $r13 = r3[0];

        $d23 = $r13[i17];

        $d22 = r2[i17];

        d5 = $d23 / $d22;

        $d24 = d5 * d5;

        d35 = d35 + $d24;

        i17 = i17 + 1;

        goto label07;

     label08:
        d36 = 0.0;

        i18 = 0;

     label09:
        $i9 = lengthof r2;

        if i18 >= $i9 goto label10;

        $i11 = i14 + 1;

        $r11 = r3[$i11];

        $d18 = $r11[i18];

        $r12 = r3[0];

        $d17 = $r12[i18];

        $d20 = $d18 - $d17;

        $d19 = r2[i18];

        d6 = $d20 / $d19;

        $d21 = d6 * d6;

        d36 = d36 + $d21;

        i18 = i18 + 1;

        goto label09;

     label10:
        $d15 = staticinvoke <org.apache.commons.math3.util.FastMath: double max(double,double)>(1.0E-15, d35);

        $d16 = 4.0 * $d15;

        $b10 = d36 cmpl $d16;

        if $b10 <= 0 goto label11;

        return 0;

     label11:
        i14 = i14 + 1;

        goto label03;

     label12:
        i19 = 0;

     label13:
        $i3 = lengthof r1;

        if i19 >= $i3 goto label14;

        $d9 = r6[i19];

        $d8 = r5[i19];

        $d12 = $d9 + $d8;

        $r9 = r3[i1];

        $d10 = $r9[i19];

        $d11 = d2 * $d10;

        $d13 = $d12 + $d11;

        $d14 = 0.5 * $d13;

        r5[i19] = $d14;

        i19 = i19 + 1;

        goto label13;

     label14:
        return 1;
    }

    private void extrapolate(int, int, double[][], double[])
    {
        org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator r0;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, i14, i15, i16;
        double[][] r1, $r4, $r8;
        double[] r2, $r3, $r5, $r6, $r7, $r9, $r10, $r11, $r12;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13;

        r0 := @this: org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: double[][];

        r2 := @parameter3: double[];

        i14 = 1;

     label1:
        if i14 >= i1 goto label4;

        i15 = 0;

     label2:
        $i5 = lengthof r2;

        if i15 >= $i5 goto label3;

        $i6 = i1 - i14;

        $i7 = $i6 - 1;

        $r12 = r1[$i7];

        $i8 = i1 - i14;

        $r7 = r1[$i8];

        $d12 = $r7[i15];

        $r8 = r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: double[][] coeff>;

        $i9 = i1 + i0;

        $r9 = $r8[$i9];

        $i10 = i14 - 1;

        $d10 = $r9[$i10];

        $i11 = i1 - i14;

        $r10 = r1[$i11];

        $d8 = $r10[i15];

        $i12 = i1 - i14;

        $i13 = $i12 - 1;

        $r11 = r1[$i13];

        $d7 = $r11[i15];

        $d9 = $d8 - $d7;

        $d11 = $d10 * $d9;

        $d13 = $d12 + $d11;

        $r12[i15] = $d13;

        i15 = i15 + 1;

        goto label2;

     label3:
        i14 = i14 + 1;

        goto label1;

     label4:
        i16 = 0;

     label5:
        $i2 = lengthof r2;

        if i16 >= $i2 goto label6;

        $r3 = r1[0];

        $d5 = $r3[i16];

        $r4 = r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: double[][] coeff>;

        $i3 = i1 + i0;

        $r5 = $r4[$i3];

        $i4 = i1 - 1;

        $d3 = $r5[$i4];

        $r6 = r1[0];

        $d1 = $r6[i16];

        $d0 = r2[i16];

        $d2 = $d1 - $d0;

        $d4 = $d3 * $d2;

        $d6 = $d5 + $d4;

        r2[i16] = $d6;

        i16 = i16 + 1;

        goto label5;

     label6:
        return;
    }

    public void integrate(org.apache.commons.math3.ode.ExpandableStatefulODE, double) throws org.apache.commons.math3.exception.NumberIsTooSmallException, org.apache.commons.math3.exception.DimensionMismatchException, org.apache.commons.math3.exception.MaxCountExceededException, org.apache.commons.math3.exception.NoBracketingException
    {
        org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator r0;
        org.apache.commons.math3.ode.ExpandableStatefulODE r1;
        double d0, d2, d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21, $d22, $d23, $d24, $d25, $d26, $d27, $d28, $d29, $d30, $d31, $d32, $d33, $d34, $d35, $d36, $d37, $d38, $d39, $d40, $d41, $d42, $d43, $d44, $d45, $d46, $d47, $d48, $d49, $d50, $d51, $d52, $d53, $d54, $d55, $d56, $d57, $d58, $d59, $d60, $d61, $d62, $d63, $d64, $d65, $d66, $d67, $d68, $d69, $d70, $d71, $d72, $d73, $d74, $d75, $d76, $d77, $d78, $d79, $d80, $d81, $d82, $d83, $d84, $d85, $d86, $d87, $d88, $d89, $d90, $d91, $d92, $d93, $d94, $d95, $d96, $d97, $d98, $d99, $d100, $d101, $d102, $d103, $d104, $d105, $d106, $d107, $d108, $d109, $d110, $d111, $d112, $d113, $d114, $d115, $d116, $d117, $d118, $d119, $d120, $d121, $d122, $d123, $d124, $d125, $d126, $d127, $d128, $d129, $d130, $d131, $d132, $d133, $d134, $d135, d136, d137, $d138, $d139, $d140, $d141, d142, d143, d144, d145, d146, d147, d148, d149, d150, d151, d152, d153, d154, $d155, $d156, $d157, $d158;
        boolean z0, $z1, $z2, $z3, $z4, z5, z6, z7, z8, z9, $z10, z11, $z12;
        double[] r2, r3, r4, r5, r6, r7, r10, $r18, $r19, $r24, $r25, $r28, $r29, $r30, $r33, $r34, $r36, $r37, $r38, $r39, $r40, $r41, $r47, $r49, $r50, $r53, $r55, $r56, $r58, $r59, $r60, $r61, $r63, $r64, $r69, $r70, $r71, $r72, $r75, $r76, $r77, $r82, $r84, $r85, r88, $r95, $r96, $r97, $r98, $r99, $r101, $r102;
        double[][] r8, r9, $r44, $r45, $r46, $r48, $r52, $r54, $r57, $r79, $r80, $r83, r89, $r94;
        byte $b0, $b21, $b27, $b35, $b37, $b39, $b47, $b75, $b80, $b87, $b89, $b90, $b92, $b93, $b97, $b99, $b100, $b101, $b102, $b103, $b104, $b138;
        java.lang.Object $r12;
        int $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i22, $i23, $i24, $i25, $i26, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i36, $i38, $i40, $i41, $i42, $i43, $i44, $i45, $i46, $i48, $i49, $i50, $i51, $i52, $i53, $i54, $i55, $i56, $i57, $i58, $i59, $i60, $i61, $i62, $i63, $i64, $i65, $i66, $i67, $i68, $i69, $i70, $i71, $i72, $i73, $i74, $i76, $i77, $i78, $i79, $i81, $i82, $i83, $i84, $i85, $i86, $i88, $i91, $i94, $i95, $i96, $i98, $i105, $i106, $i107, $i108, $i109, $i110, $i111, $i112, $i113, $i114, i115, $i116, $i117, i118, i119, i120, i121, $i122, i123, i124, i125, i126, i127, i128, i129, i130, i131, i132, i133, i134, i135, i136, i137;
        int[] $r13, $r14, $r15, $r16, $r17, $r20, $r26, $r27, $r31, $r32, $r35, $r42, $r43, $r51, $r62, $r65, $r66, $r67, $r68, $r73, $r74, $r78, $r81, $r86;
        org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerStepInterpolator $r21, r100;
        org.apache.commons.math3.ode.EquationsMapper $r22;
        org.apache.commons.math3.ode.EquationsMapper[] $r23;
        double[][][] r87;

        r0 := @this: org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator;

        r1 := @parameter0: org.apache.commons.math3.ode.ExpandableStatefulODE;

        d0 := @parameter1: double;

        virtualinvoke r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: void sanityChecks(org.apache.commons.math3.ode.ExpandableStatefulODE,double)>(r1, d0);

        virtualinvoke r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: void setEquations(org.apache.commons.math3.ode.ExpandableStatefulODE)>(r1);

        $d4 = virtualinvoke r1.<org.apache.commons.math3.ode.ExpandableStatefulODE: double getTime()>();

        $b0 = d0 cmpl $d4;

        if $b0 <= 0 goto label01;

        $z4 = 1;

        goto label02;

     label01:
        $z4 = 0;

     label02:
        z0 = $z4;

        r2 = virtualinvoke r1.<org.apache.commons.math3.ode.ExpandableStatefulODE: double[] getCompleteState()>();

        $r12 = virtualinvoke r2.<java.lang.Object: java.lang.Object clone()>();

        r3 = (double[]) $r12;

        $i1 = lengthof r3;

        r4 = newarray (double)[$i1];

        $i2 = lengthof r3;

        r5 = newarray (double)[$i2];

        $i3 = lengthof r3;

        r6 = newarray (double)[$i3];

        $i4 = lengthof r3;

        r7 = newarray (double)[$i4];

        $r13 = r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: int[] sequence>;

        $i5 = lengthof $r13;

        $i6 = $i5 - 1;

        r8 = newarray (double[])[$i6];

        $r14 = r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: int[] sequence>;

        $i7 = lengthof $r14;

        $i8 = $i7 - 1;

        r9 = newarray (double[])[$i8];

        i115 = 0;

     label03:
        $r86 = r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: int[] sequence>;

        $i116 = lengthof $r86;

        $i117 = $i116 - 1;

        if i115 >= $i117 goto label04;

        $i113 = lengthof r3;

        $r84 = newarray (double)[$i113];

        r8[i115] = $r84;

        $i114 = lengthof r3;

        $r85 = newarray (double)[$i114];

        r9[i115] = $r85;

        i115 = i115 + 1;

        goto label03;

     label04:
        $r15 = r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: int[] sequence>;

        $i9 = lengthof $r15;

        r87 = newarray (double[][])[$i9];

        i118 = 0;

     label05:
        $r16 = r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: int[] sequence>;

        $i10 = lengthof $r16;

        if i118 >= $i10 goto label08;

        $r78 = r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: int[] sequence>;

        $i108 = $r78[i118];

        $i109 = $i108 + 1;

        $r79 = newarray (double[])[$i109];

        r87[i118] = $r79;

        $r80 = r87[i118];

        $r80[0] = r4;

        i119 = 0;

     label06:
        $r81 = r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: int[] sequence>;

        $i110 = $r81[i118];

        if i119 >= $i110 goto label07;

        $r83 = r87[i118];

        $i112 = i119 + 1;

        $i111 = lengthof r2;

        $r82 = newarray (double)[$i111];

        $r83[$i112] = $r82;

        i119 = i119 + 1;

        goto label06;

     label07:
        i118 = i118 + 1;

        goto label05;

     label08:
        if r3 == r2 goto label09;

        $i107 = lengthof r2;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r2, 0, r3, 0, $i107);

     label09:
        $i11 = lengthof r2;

        r88 = newarray (double)[$i11];

        $r17 = r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: int[] sequence>;

        $i12 = lengthof $r17;

        $i13 = 2 * $i12;

        $i15 = 1 + $i13;

        $i14 = lengthof r2;

        r89 = newmultiarray (double)[$i15][$i14];

        $i16 = r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: int mainSetDimension>;

        r10 = newarray (double)[$i16];

        specialinvoke r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: void rescale(double[],double[],double[])>(r3, r3, r10);

        $r18 = r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: double[] vecRelativeTolerance>;

        if $r18 != null goto label10;

        $d135 = r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: double scalRelativeTolerance>;

        goto label11;

     label10:
        $r19 = r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: double[] vecRelativeTolerance>;

        $d135 = $r19[0];

     label11:
        $d5 = staticinvoke <org.apache.commons.math3.util.FastMath: double max(double,double)>(1.0E-10, $d135);

        d2 = staticinvoke <org.apache.commons.math3.util.FastMath: double log10(double)>($d5);

        $r20 = r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: int[] sequence>;

        $i17 = lengthof $r20;

        $i18 = $i17 - 2;

        $d6 = 0.6 * d2;

        $d7 = 0.5 - $d6;

        $d8 = staticinvoke <org.apache.commons.math3.util.FastMath: double floor(double)>($d7);

        $i19 = (int) $d8;

        $i20 = staticinvoke <org.apache.commons.math3.util.FastMath: int min(int,int)>($i18, $i19);

        i120 = staticinvoke <org.apache.commons.math3.util.FastMath: int max(int,int)>(1, $i20);

        $r21 = new org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerStepInterpolator;

        $r22 = virtualinvoke r1.<org.apache.commons.math3.ode.ExpandableStatefulODE: org.apache.commons.math3.ode.EquationsMapper getPrimaryMapper()>();

        $r23 = virtualinvoke r1.<org.apache.commons.math3.ode.ExpandableStatefulODE: org.apache.commons.math3.ode.EquationsMapper[] getSecondaryMappers()>();

        specialinvoke $r21.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerStepInterpolator: void <init>(double[],double[],double[],double[],double[][],boolean,org.apache.commons.math3.ode.EquationsMapper,org.apache.commons.math3.ode.EquationsMapper[])>(r3, r4, r5, r88, r89, z0, $r22, $r23);

        $d9 = virtualinvoke r1.<org.apache.commons.math3.ode.ExpandableStatefulODE: double getTime()>();

        virtualinvoke $r21.<org.apache.commons.math3.ode.sampling.AbstractStepInterpolator: void storeTime(double)>($d9);

        $d10 = virtualinvoke r1.<org.apache.commons.math3.ode.ExpandableStatefulODE: double getTime()>();

        r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: double stepStart> = $d10;

        d136 = 0.0;

        d137 = 1.7976931348623157E308;

        z5 = 0;

        z6 = 1;

        z7 = 1;

        z8 = 0;

        $d11 = virtualinvoke r1.<org.apache.commons.math3.ode.ExpandableStatefulODE: double getTime()>();

        virtualinvoke r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: void initIntegration(double,double[],double)>($d11, r2, d0);

        $r24 = r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: double[] costPerTimeUnit>;

        $r24[0] = 0.0;

        r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: boolean isLastStep> = 0;

     label12:
        z9 = 0;

        if z7 == 0 goto label15;

        virtualinvoke $r21.<org.apache.commons.math3.ode.sampling.AbstractStepInterpolator: void shift()>();

        if z8 != 0 goto label13;

        $d134 = r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: double stepStart>;

        virtualinvoke r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: void computeDerivatives(double,double[],double[])>($d134, r3, r4);

     label13:
        if z6 == 0 goto label14;

        $i105 = 2 * i120;

        $i106 = $i105 + 1;

        $d133 = r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: double stepStart>;

        d136 = virtualinvoke r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: double initializeStep(boolean,int,double[],double,double[],double[],double[],double[])>(z0, $i106, r10, $d133, r3, r4, r6, r7);

     label14:
        z7 = 0;

     label15:
        r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: double stepSize> = d136;

        if z0 == 0 goto label16;

        $d131 = r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: double stepStart>;

        $d130 = r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: double stepSize>;

        $d132 = $d131 + $d130;

        $b104 = $d132 cmpl d0;

        if $b104 > 0 goto label17;

     label16:
        if z0 != 0 goto label18;

        $d126 = r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: double stepStart>;

        $d125 = r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: double stepSize>;

        $d127 = $d126 + $d125;

        $b103 = $d127 cmpg d0;

        if $b103 >= 0 goto label18;

     label17:
        $d128 = r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: double stepStart>;

        $d129 = d0 - $d128;

        r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: double stepSize> = $d129;

     label18:
        $d138 = r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: double stepStart>;

        $d139 = r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: double stepSize>;

        d3 = $d138 + $d139;

        if z0 == 0 goto label20;

        $b102 = d3 cmpl d0;

        if $b102 < 0 goto label19;

        $z10 = 1;

        goto label22;

     label19:
        $z10 = 0;

        goto label22;

     label20:
        $b21 = d3 cmpg d0;

        if $b21 > 0 goto label21;

        $z10 = 1;

        goto label22;

     label21:
        $z10 = 0;

     label22:
        r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: boolean isLastStep> = $z10;

        i121 = -1;

        z11 = 1;

     label23:
        if z11 == 0 goto label47;

        i121 = i121 + 1;

        $d140 = r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: double stepStart>;

        $d141 = r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: double stepSize>;

        $i122 = i121;

        $r94 = r87[i121];

        if i121 != 0 goto label24;

        $r95 = r89[0];

        goto label25;

     label24:
        $i71 = i121 - 1;

        $r95 = r8[$i71];

     label25:
        if i121 != 0 goto label26;

        $r96 = r5;

        goto label27;

     label26:
        $i72 = i121 - 1;

        $r96 = r9[$i72];

     label27:
        $z12 = specialinvoke r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: boolean tryStep(double,double[],double,int,double[],double[][],double[],double[],double[])>($d140, r3, $d141, $i122, r10, $r94, $r95, $r96, r6);

        if $z12 != 0 goto label28;

        $d122 = r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: double stepSize>;

        $d121 = r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: double stabilityReduction>;

        $d123 = $d122 * $d121;

        $d124 = virtualinvoke r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: double filterStep(double,boolean,boolean)>($d123, z0, 0);

        d136 = staticinvoke <org.apache.commons.math3.util.FastMath: double abs(double)>($d124);

        z9 = 1;

        z11 = 0;

        goto label23;

     label28:
        if i121 <= 0 goto label23;

        specialinvoke r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: void extrapolate(int,int,double[][],double[])>(0, i121, r9, r5);

        specialinvoke r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: void rescale(double[],double[],double[])>(r3, r5, r10);

        d142 = 0.0;

        i123 = 0;

     label29:
        $i73 = r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: int mainSetDimension>;

        if i123 >= $i73 goto label30;

        $d116 = r5[i123];

        $r77 = r9[0];

        $d115 = $r77[i123];

        $d117 = $d116 - $d115;

        $d118 = staticinvoke <org.apache.commons.math3.util.FastMath: double abs(double)>($d117);

        $d119 = r10[i123];

        d143 = $d118 / $d119;

        $d120 = d143 * d143;

        d142 = d142 + $d120;

        i123 = i123 + 1;

        goto label29;

     label30:
        $i74 = r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: int mainSetDimension>;

        $d71 = (double) $i74;

        $d72 = d142 / $d71;

        d144 = staticinvoke <org.apache.commons.math3.util.FastMath: double sqrt(double)>($d72);

        $b75 = d144 cmpl 1.0E15;

        if $b75 > 0 goto label31;

        if i121 <= 1 goto label32;

        $b101 = d144 cmpl d137;

        if $b101 <= 0 goto label32;

     label31:
        $d74 = r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: double stepSize>;

        $d73 = r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: double stabilityReduction>;

        $d75 = $d74 * $d73;

        $d76 = virtualinvoke r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: double filterStep(double,boolean,boolean)>($d75, z0, 0);

        d136 = staticinvoke <org.apache.commons.math3.util.FastMath: double abs(double)>($d76);

        z9 = 1;

        z11 = 0;

        goto label23;

     label32:
        $d77 = 4.0 * d144;

        d137 = staticinvoke <org.apache.commons.math3.util.FastMath: double max(double,double)>($d77, 1.0);

        $i76 = 2 * i121;

        $i77 = $i76 + 1;

        $d78 = (double) $i77;

        d145 = 1.0 / $d78;

        $d81 = r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: double stepControl2>;

        $d79 = r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: double stepControl1>;

        $d80 = d144 / $d79;

        $d82 = staticinvoke <org.apache.commons.math3.util.FastMath: double pow(double,double)>($d80, d145);

        d146 = $d81 / $d82;

        $d83 = r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: double stepControl3>;

        d147 = staticinvoke <org.apache.commons.math3.util.FastMath: double pow(double,double)>($d83, d145);

        $d84 = r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: double stepControl4>;

        $d86 = d147 / $d84;

        $d85 = 1.0 / d147;

        $d87 = staticinvoke <org.apache.commons.math3.util.FastMath: double min(double,double)>($d85, d146);

        d148 = staticinvoke <org.apache.commons.math3.util.FastMath: double max(double,double)>($d86, $d87);

        $r61 = r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: double[] optimalStep>;

        $d88 = r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: double stepSize>;

        $d89 = $d88 * d148;

        $d90 = virtualinvoke r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: double filterStep(double,boolean,boolean)>($d89, z0, 1);

        $d91 = staticinvoke <org.apache.commons.math3.util.FastMath: double abs(double)>($d90);

        $r61[i121] = $d91;

        $r64 = r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: double[] costPerTimeUnit>;

        $r62 = r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: int[] costPerStep>;

        $i78 = $r62[i121];

        $d93 = (double) $i78;

        $r63 = r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: double[] optimalStep>;

        $d92 = $r63[i121];

        $d94 = $d93 / $d92;

        $r64[i121] = $d94;

        $i79 = i121 - i120;

        tableswitch($i79)
        {
            case -1: goto label33;
            case 0: goto label37;
            case 1: goto label41;
            default: goto label44;
        };

     label33:
        if i120 <= 1 goto label46;

        if z5 != 0 goto label46;

        $b80 = d144 cmpg 1.0;

        if $b80 > 0 goto label34;

        z11 = 0;

        goto label46;

     label34:
        $r65 = r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: int[] sequence>;

        $i81 = $r65[i120];

        $d96 = (double) $i81;

        $r66 = r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: int[] sequence>;

        $i82 = i120 + 1;

        $i83 = $r66[$i82];

        $d95 = (double) $i83;

        $d98 = $d96 * $d95;

        $r67 = r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: int[] sequence>;

        $i85 = $r67[0];

        $r68 = r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: int[] sequence>;

        $i84 = $r68[0];

        $i86 = $i85 * $i84;

        $d97 = (double) $i86;

        d149 = $d98 / $d97;

        $d99 = d149 * d149;

        $b87 = d144 cmpl $d99;

        if $b87 <= 0 goto label36;

        z9 = 1;

        z11 = 0;

        i120 = i121;

        if i121 <= 1 goto label35;

        $r69 = r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: double[] costPerTimeUnit>;

        $i88 = i121 - 1;

        $d103 = $r69[$i88];

        $d101 = r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: double orderControl1>;

        $r70 = r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: double[] costPerTimeUnit>;

        $d100 = $r70[i121];

        $d102 = $d101 * $d100;

        $b89 = $d103 cmpg $d102;

        if $b89 >= 0 goto label35;

        i120 = i121 + -1;

     label35:
        $r97 = r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: double[] optimalStep>;

        d136 = $r97[i120];

     label36:
        goto label46;

     label37:
        $b93 = d144 cmpg 1.0;

        if $b93 > 0 goto label38;

        z11 = 0;

        goto label46;

     label38:
        $r73 = r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: int[] sequence>;

        $i94 = i121 + 1;

        $i95 = $r73[$i94];

        $d109 = (double) $i95;

        $r74 = r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: int[] sequence>;

        $i96 = $r74[0];

        $d108 = (double) $i96;

        d150 = $d109 / $d108;

        $d110 = d150 * d150;

        $b97 = d144 cmpl $d110;

        if $b97 <= 0 goto label40;

        z9 = 1;

        z11 = 0;

        if i120 <= 1 goto label39;

        $r75 = r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: double[] costPerTimeUnit>;

        $i98 = i120 - 1;

        $d114 = $r75[$i98];

        $d112 = r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: double orderControl1>;

        $r76 = r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: double[] costPerTimeUnit>;

        $d111 = $r76[i120];

        $d113 = $d112 * $d111;

        $b99 = $d114 cmpg $d113;

        if $b99 >= 0 goto label39;

        i120 = i120 + -1;

     label39:
        $r98 = r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: double[] optimalStep>;

        d136 = $r98[i120];

     label40:
        goto label46;

     label41:
        $b90 = d144 cmpl 1.0;

        if $b90 <= 0 goto label43;

        z9 = 1;

        if i120 <= 1 goto label42;

        $r71 = r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: double[] costPerTimeUnit>;

        $i91 = i120 - 1;

        $d107 = $r71[$i91];

        $d105 = r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: double orderControl1>;

        $r72 = r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: double[] costPerTimeUnit>;

        $d104 = $r72[i120];

        $d106 = $d105 * $d104;

        $b92 = $d107 cmpg $d106;

        if $b92 >= 0 goto label42;

        i120 = i120 + -1;

     label42:
        $r99 = r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: double[] optimalStep>;

        d136 = $r99[i120];

     label43:
        z11 = 0;

        goto label46;

     label44:
        if z6 != 0 goto label45;

        $z3 = r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: boolean isLastStep>;

        if $z3 == 0 goto label46;

     label45:
        $b100 = d144 cmpg 1.0;

        if $b100 > 0 goto label46;

        z11 = 0;

     label46:
        goto label23;

     label47:
        if z9 != 0 goto label48;

        $d69 = r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: double stepStart>;

        $d68 = r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: double stepSize>;

        $d70 = $d69 + $d68;

        virtualinvoke r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: void computeDerivatives(double,double[],double[])>($d70, r5, r88);

     label48:
        d151 = virtualinvoke r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: double getMaxStep()>();

        if z9 != 0 goto label67;

        i124 = 1;

     label49:
        if i124 > i121 goto label50;

        $r60 = r89[0];

        specialinvoke r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: void extrapolate(int,int,double[][],double[])>(0, i124, r8, $r60);

        i124 = i124 + 1;

        goto label49;

     label50:
        $i44 = 2 * i121;

        $i43 = r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: int mudif>;

        $i45 = $i44 - $i43;

        i125 = $i45 + 3;

        i126 = 0;

     label51:
        if i126 >= i125 goto label66;

        i127 = i126 / 2;

        $r43 = r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: int[] sequence>;

        $i48 = $r43[i127];

        $d54 = (double) $i48;

        $d55 = 0.5 * $d54;

        d152 = staticinvoke <org.apache.commons.math3.util.FastMath: double pow(double,int)>($d55, i126);

        $r44 = r87[i127];

        $i49 = lengthof $r44;

        i128 = $i49 / 2;

        i129 = 0;

     label52:
        $i50 = lengthof r2;

        if i129 >= $i50 goto label53;

        $i69 = i126 + 1;

        $r59 = r89[$i69];

        $r57 = r87[i127];

        $i70 = i128 + i126;

        $r58 = $r57[$i70];

        $d66 = $r58[i129];

        $d67 = d152 * $d66;

        $r59[i129] = $d67;

        i129 = i129 + 1;

        goto label52;

     label53:
        i130 = 1;

     label54:
        $i51 = i121 - i127;

        if i130 > $i51 goto label57;

        $r51 = r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: int[] sequence>;

        $i60 = i130 + i127;

        $i61 = $r51[$i60];

        $d62 = (double) $i61;

        $d63 = 0.5 * $d62;

        d153 = staticinvoke <org.apache.commons.math3.util.FastMath: double pow(double,int)>($d63, i126);

        $i62 = i127 + i130;

        $r52 = r87[$i62];

        $i63 = lengthof $r52;

        i131 = $i63 / 2;

        i132 = 0;

     label55:
        $i64 = lengthof r2;

        if i132 >= $i64 goto label56;

        $i66 = i130 - 1;

        $r56 = r8[$i66];

        $i67 = i127 + i130;

        $r54 = r87[$i67];

        $i68 = i131 + i126;

        $r55 = $r54[$i68];

        $d64 = $r55[i132];

        $d65 = d153 * $d64;

        $r56[i132] = $d65;

        i132 = i132 + 1;

        goto label55;

     label56:
        $i65 = i126 + 1;

        $r53 = r89[$i65];

        specialinvoke r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: void extrapolate(int,int,double[][],double[])>(i127, i130, r8, $r53);

        i130 = i130 + 1;

        goto label54;

     label57:
        i133 = 0;

     label58:
        $i52 = lengthof r2;

        if i133 >= $i52 goto label59;

        $i59 = i126 + 1;

        $r50 = r89[$i59];

        $d60 = $r50[i133];

        $d59 = r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: double stepSize>;

        $d61 = $d60 * $d59;

        $r50[i133] = $d61;

        i133 = i133 + 1;

        goto label58;

     label59:
        $i53 = i126 + 1;

        i134 = $i53 / 2;

     label60:
        if i134 > i121 goto label65;

        $r45 = r87[i134];

        $i54 = lengthof $r45;

        i135 = $i54 - 1;

     label61:
        $i55 = i126 + 1;

        $i56 = 2 * $i55;

        if i135 < $i56 goto label64;

        i136 = 0;

     label62:
        $i57 = lengthof r2;

        if i136 >= $i57 goto label63;

        $r46 = r87[i134];

        $r47 = $r46[i135];

        $d57 = $r47[i136];

        $r48 = r87[i134];

        $i58 = i135 - 2;

        $r49 = $r48[$i58];

        $d56 = $r49[i136];

        $d58 = $d57 - $d56;

        $r47[i136] = $d58;

        i136 = i136 + 1;

        goto label62;

     label63:
        i135 = i135 + -1;

        goto label61;

     label64:
        i134 = i134 + 1;

        goto label60;

     label65:
        i126 = i126 + 1;

        goto label51;

     label66:
        if i125 < 0 goto label67;

        r100 = (org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerStepInterpolator) $r21;

        $d47 = r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: double stepSize>;

        virtualinvoke r100.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerStepInterpolator: void computeCoefficients(int,double)>(i125, $d47);

        $z2 = r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: boolean useInterpolationError>;

        if $z2 == 0 goto label67;

        d154 = virtualinvoke r100.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerStepInterpolator: double estimateError(double[])>(r10);

        $d50 = r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: double stepSize>;

        $i46 = i125 + 4;

        $d48 = (double) $i46;

        $d49 = 1.0 / $d48;

        $d51 = staticinvoke <org.apache.commons.math3.util.FastMath: double pow(double,double)>(d154, $d49);

        $d52 = staticinvoke <org.apache.commons.math3.util.FastMath: double max(double,double)>($d51, 0.01);

        $d53 = $d50 / $d52;

        d151 = staticinvoke <org.apache.commons.math3.util.FastMath: double abs(double)>($d53);

        $b47 = d154 cmpl 10.0;

        if $b47 <= 0 goto label67;

        d136 = d151;

        z9 = 1;

     label67:
        if z9 != 0 goto label78;

        $d14 = r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: double stepStart>;

        $d13 = r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: double stepSize>;

        $d15 = $d14 + $d13;

        virtualinvoke $r21.<org.apache.commons.math3.ode.sampling.AbstractStepInterpolator: void storeTime(double)>($d15);

        $d16 = virtualinvoke r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: double acceptStep(org.apache.commons.math3.ode.sampling.AbstractStepInterpolator,double[],double[],double)>($r21, r5, r88, d0);

        r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: double stepStart> = $d16;

        $d17 = r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: double stepStart>;

        virtualinvoke $r21.<org.apache.commons.math3.ode.sampling.AbstractStepInterpolator: void storeTime(double)>($d17);

        $i22 = lengthof r2;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r5, 0, r3, 0, $i22);

        $i23 = lengthof r2;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r88, 0, r4, 0, $i23);

        z8 = 1;

        if i121 != 1 goto label68;

        i137 = 2;

        if z5 == 0 goto label72;

        i137 = 1;

        goto label72;

     label68:
        if i121 > i120 goto label70;

        i137 = i121;

        $r38 = r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: double[] costPerTimeUnit>;

        $i36 = i121 - 1;

        $d42 = $r38[$i36];

        $d40 = r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: double orderControl1>;

        $r39 = r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: double[] costPerTimeUnit>;

        $d39 = $r39[i121];

        $d41 = $d40 * $d39;

        $b37 = $d42 cmpg $d41;

        if $b37 >= 0 goto label69;

        i137 = i121 - 1;

        goto label72;

     label69:
        $r40 = r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: double[] costPerTimeUnit>;

        $d46 = $r40[i121];

        $d44 = r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: double orderControl2>;

        $r41 = r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: double[] costPerTimeUnit>;

        $i38 = i121 - 1;

        $d43 = $r41[$i38];

        $d45 = $d44 * $d43;

        $b39 = $d46 cmpg $d45;

        if $b39 >= 0 goto label72;

        $i42 = i121 + 1;

        $r42 = r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: int[] sequence>;

        $i40 = lengthof $r42;

        $i41 = $i40 - 2;

        i137 = staticinvoke <org.apache.commons.math3.util.FastMath: int min(int,int)>($i42, $i41);

        goto label72;

     label70:
        i137 = i121 - 1;

        if i121 <= 2 goto label71;

        $r36 = r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: double[] costPerTimeUnit>;

        $i33 = i121 - 2;

        $d38 = $r36[$i33];

        $d36 = r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: double orderControl1>;

        $r37 = r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: double[] costPerTimeUnit>;

        $i34 = i121 - 1;

        $d35 = $r37[$i34];

        $d37 = $d36 * $d35;

        $b35 = $d38 cmpg $d37;

        if $b35 >= 0 goto label71;

        i137 = i121 - 2;

     label71:
        $r101 = r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: double[] costPerTimeUnit>;

        $d155 = $r101[i121];

        $d156 = r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: double orderControl2>;

        $r102 = r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: double[] costPerTimeUnit>;

        $d157 = $r102[i137];

        $d158 = $d156 * $d157;

        $b138 = $d155 cmpg $d158;

        if $b138 >= 0 goto label72;

        $r35 = r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: int[] sequence>;

        $i31 = lengthof $r35;

        $i32 = $i31 - 2;

        i137 = staticinvoke <org.apache.commons.math3.util.FastMath: int min(int,int)>(i121, $i32);

     label72:
        if z5 == 0 goto label73;

        i120 = staticinvoke <org.apache.commons.math3.util.FastMath: int min(int,int)>(i137, i121);

        $d32 = r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: double stepSize>;

        $d33 = staticinvoke <org.apache.commons.math3.util.FastMath: double abs(double)>($d32);

        $r34 = r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: double[] optimalStep>;

        $d34 = $r34[i120];

        d136 = staticinvoke <org.apache.commons.math3.util.FastMath: double min(double,double)>($d33, $d34);

        goto label77;

     label73:
        if i137 > i121 goto label74;

        $r33 = r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: double[] optimalStep>;

        d136 = $r33[i137];

        goto label76;

     label74:
        if i121 >= i120 goto label75;

        $r28 = r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: double[] costPerTimeUnit>;

        $d26 = $r28[i121];

        $d24 = r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: double orderControl2>;

        $r29 = r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: double[] costPerTimeUnit>;

        $i26 = i121 - 1;

        $d23 = $r29[$i26];

        $d25 = $d24 * $d23;

        $b27 = $d26 cmpg $d25;

        if $b27 >= 0 goto label75;

        $r30 = r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: double[] optimalStep>;

        $d28 = $r30[i121];

        $r31 = r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: int[] costPerStep>;

        $i28 = i137 + 1;

        $i29 = $r31[$i28];

        $d27 = (double) $i29;

        $d30 = $d28 * $d27;

        $r32 = r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: int[] costPerStep>;

        $i30 = $r32[i121];

        $d29 = (double) $i30;

        $d31 = $d30 / $d29;

        d136 = virtualinvoke r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: double filterStep(double,boolean,boolean)>($d31, z0, 0);

        goto label76;

     label75:
        $r25 = r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: double[] optimalStep>;

        $d19 = $r25[i121];

        $r26 = r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: int[] costPerStep>;

        $i24 = $r26[i137];

        $d18 = (double) $i24;

        $d21 = $d19 * $d18;

        $r27 = r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: int[] costPerStep>;

        $i25 = $r27[i121];

        $d20 = (double) $i25;

        $d22 = $d21 / $d20;

        d136 = virtualinvoke r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: double filterStep(double,boolean,boolean)>($d22, z0, 0);

     label76:
        i120 = i137;

     label77:
        z7 = 1;

     label78:
        d136 = staticinvoke <org.apache.commons.math3.util.FastMath: double min(double,double)>(d136, d151);

        if z0 != 0 goto label79;

        d136 = neg d136;

     label79:
        z6 = 0;

        if z9 == 0 goto label80;

        r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: boolean isLastStep> = 0;

        z5 = 1;

        goto label81;

     label80:
        z5 = 0;

     label81:
        $z1 = r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: boolean isLastStep>;

        if $z1 == 0 goto label12;

        $d12 = r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: double stepStart>;

        virtualinvoke r1.<org.apache.commons.math3.ode.ExpandableStatefulODE: void setTime(double)>($d12);

        virtualinvoke r1.<org.apache.commons.math3.ode.ExpandableStatefulODE: void setCompleteState(double[])>(r3);

        virtualinvoke r0.<org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: void resetInternalState()>();

        return;
    }

    public static void <clinit>()
    {
        <org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator: java.lang.String METHOD_NAME> = "Gragg-Bulirsch-Stoer";

        return;
    }
}
