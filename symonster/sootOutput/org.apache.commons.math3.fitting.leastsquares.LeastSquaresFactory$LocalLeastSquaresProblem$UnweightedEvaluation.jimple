class org.apache.commons.math3.fitting.leastsquares.LeastSquaresFactory$LocalLeastSquaresProblem$UnweightedEvaluation extends org.apache.commons.math3.fitting.leastsquares.AbstractEvaluation
{
    private final org.apache.commons.math3.linear.RealVector point;
    private final org.apache.commons.math3.linear.RealMatrix jacobian;
    private final org.apache.commons.math3.linear.RealVector residuals;

    private void <init>(org.apache.commons.math3.linear.RealVector, org.apache.commons.math3.linear.RealMatrix, org.apache.commons.math3.linear.RealVector, org.apache.commons.math3.linear.RealVector)
    {
        org.apache.commons.math3.fitting.leastsquares.LeastSquaresFactory$LocalLeastSquaresProblem$UnweightedEvaluation r0;
        org.apache.commons.math3.linear.RealVector r1, r3, r4, $r5;
        org.apache.commons.math3.linear.RealMatrix r2;
        int $i0;

        r0 := @this: org.apache.commons.math3.fitting.leastsquares.LeastSquaresFactory$LocalLeastSquaresProblem$UnweightedEvaluation;

        r1 := @parameter0: org.apache.commons.math3.linear.RealVector;

        r2 := @parameter1: org.apache.commons.math3.linear.RealMatrix;

        r3 := @parameter2: org.apache.commons.math3.linear.RealVector;

        r4 := @parameter3: org.apache.commons.math3.linear.RealVector;

        $i0 = virtualinvoke r3.<org.apache.commons.math3.linear.RealVector: int getDimension()>();

        specialinvoke r0.<org.apache.commons.math3.fitting.leastsquares.AbstractEvaluation: void <init>(int)>($i0);

        r0.<org.apache.commons.math3.fitting.leastsquares.LeastSquaresFactory$LocalLeastSquaresProblem$UnweightedEvaluation: org.apache.commons.math3.linear.RealMatrix jacobian> = r2;

        r0.<org.apache.commons.math3.fitting.leastsquares.LeastSquaresFactory$LocalLeastSquaresProblem$UnweightedEvaluation: org.apache.commons.math3.linear.RealVector point> = r4;

        $r5 = virtualinvoke r3.<org.apache.commons.math3.linear.RealVector: org.apache.commons.math3.linear.RealVector subtract(org.apache.commons.math3.linear.RealVector)>(r1);

        r0.<org.apache.commons.math3.fitting.leastsquares.LeastSquaresFactory$LocalLeastSquaresProblem$UnweightedEvaluation: org.apache.commons.math3.linear.RealVector residuals> = $r5;

        return;
    }

    public org.apache.commons.math3.linear.RealMatrix getJacobian()
    {
        org.apache.commons.math3.fitting.leastsquares.LeastSquaresFactory$LocalLeastSquaresProblem$UnweightedEvaluation r0;
        org.apache.commons.math3.linear.RealMatrix $r1;

        r0 := @this: org.apache.commons.math3.fitting.leastsquares.LeastSquaresFactory$LocalLeastSquaresProblem$UnweightedEvaluation;

        $r1 = r0.<org.apache.commons.math3.fitting.leastsquares.LeastSquaresFactory$LocalLeastSquaresProblem$UnweightedEvaluation: org.apache.commons.math3.linear.RealMatrix jacobian>;

        return $r1;
    }

    public org.apache.commons.math3.linear.RealVector getPoint()
    {
        org.apache.commons.math3.fitting.leastsquares.LeastSquaresFactory$LocalLeastSquaresProblem$UnweightedEvaluation r0;
        org.apache.commons.math3.linear.RealVector $r1;

        r0 := @this: org.apache.commons.math3.fitting.leastsquares.LeastSquaresFactory$LocalLeastSquaresProblem$UnweightedEvaluation;

        $r1 = r0.<org.apache.commons.math3.fitting.leastsquares.LeastSquaresFactory$LocalLeastSquaresProblem$UnweightedEvaluation: org.apache.commons.math3.linear.RealVector point>;

        return $r1;
    }

    public org.apache.commons.math3.linear.RealVector getResiduals()
    {
        org.apache.commons.math3.fitting.leastsquares.LeastSquaresFactory$LocalLeastSquaresProblem$UnweightedEvaluation r0;
        org.apache.commons.math3.linear.RealVector $r1;

        r0 := @this: org.apache.commons.math3.fitting.leastsquares.LeastSquaresFactory$LocalLeastSquaresProblem$UnweightedEvaluation;

        $r1 = r0.<org.apache.commons.math3.fitting.leastsquares.LeastSquaresFactory$LocalLeastSquaresProblem$UnweightedEvaluation: org.apache.commons.math3.linear.RealVector residuals>;

        return $r1;
    }

    void <init>(org.apache.commons.math3.linear.RealVector, org.apache.commons.math3.linear.RealMatrix, org.apache.commons.math3.linear.RealVector, org.apache.commons.math3.linear.RealVector, org.apache.commons.math3.fitting.leastsquares.LeastSquaresFactory$1)
    {
        org.apache.commons.math3.fitting.leastsquares.LeastSquaresFactory$LocalLeastSquaresProblem$UnweightedEvaluation r0;
        org.apache.commons.math3.linear.RealVector r1, r3, r4;
        org.apache.commons.math3.linear.RealMatrix r2;
        org.apache.commons.math3.fitting.leastsquares.LeastSquaresFactory$1 r5;

        r0 := @this: org.apache.commons.math3.fitting.leastsquares.LeastSquaresFactory$LocalLeastSquaresProblem$UnweightedEvaluation;

        r1 := @parameter0: org.apache.commons.math3.linear.RealVector;

        r2 := @parameter1: org.apache.commons.math3.linear.RealMatrix;

        r3 := @parameter2: org.apache.commons.math3.linear.RealVector;

        r4 := @parameter3: org.apache.commons.math3.linear.RealVector;

        r5 := @parameter4: org.apache.commons.math3.fitting.leastsquares.LeastSquaresFactory$1;

        specialinvoke r0.<org.apache.commons.math3.fitting.leastsquares.LeastSquaresFactory$LocalLeastSquaresProblem$UnweightedEvaluation: void <init>(org.apache.commons.math3.linear.RealVector,org.apache.commons.math3.linear.RealMatrix,org.apache.commons.math3.linear.RealVector,org.apache.commons.math3.linear.RealVector)>(r1, r2, r3, r4);

        return;
    }
}
