class com.opengamma.analytics.math.interpolation.BasisFunctionGenerator$3 extends com.opengamma.analytics.math.function.Function1D
{
    private final double _l;
    private final double _m;
    private final double _h;
    private final double _inv1;
    private final double _inv2;
    final double[] val$knots;
    final int val$index;
    final com.opengamma.analytics.math.interpolation.BasisFunctionGenerator this$0;

    void <init>(com.opengamma.analytics.math.interpolation.BasisFunctionGenerator, double[], int)
    {
        com.opengamma.analytics.math.interpolation.BasisFunctionGenerator$3 r0;
        com.opengamma.analytics.math.interpolation.BasisFunctionGenerator r1;
        double[] r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10;

        r0 := @this: com.opengamma.analytics.math.interpolation.BasisFunctionGenerator$3;

        r1 := @parameter0: com.opengamma.analytics.math.interpolation.BasisFunctionGenerator;

        r2 := @parameter1: double[];

        i0 := @parameter2: int;

        r0.<com.opengamma.analytics.math.interpolation.BasisFunctionGenerator$3: com.opengamma.analytics.math.interpolation.BasisFunctionGenerator this$0> = r1;

        r0.<com.opengamma.analytics.math.interpolation.BasisFunctionGenerator$3: double[] val$knots> = r2;

        r0.<com.opengamma.analytics.math.interpolation.BasisFunctionGenerator$3: int val$index> = i0;

        specialinvoke r0.<com.opengamma.analytics.math.function.Function1D: void <init>()>();

        $r3 = r0.<com.opengamma.analytics.math.interpolation.BasisFunctionGenerator$3: double[] val$knots>;

        $i1 = r0.<com.opengamma.analytics.math.interpolation.BasisFunctionGenerator$3: int val$index>;

        $d0 = $r3[$i1];

        r0.<com.opengamma.analytics.math.interpolation.BasisFunctionGenerator$3: double _l> = $d0;

        $r4 = r0.<com.opengamma.analytics.math.interpolation.BasisFunctionGenerator$3: double[] val$knots>;

        $i2 = r0.<com.opengamma.analytics.math.interpolation.BasisFunctionGenerator$3: int val$index>;

        $i3 = $i2 + 1;

        $d1 = $r4[$i3];

        r0.<com.opengamma.analytics.math.interpolation.BasisFunctionGenerator$3: double _m> = $d1;

        $r5 = r0.<com.opengamma.analytics.math.interpolation.BasisFunctionGenerator$3: double[] val$knots>;

        $i4 = r0.<com.opengamma.analytics.math.interpolation.BasisFunctionGenerator$3: int val$index>;

        $i5 = $i4 + 2;

        $d2 = $r5[$i5];

        r0.<com.opengamma.analytics.math.interpolation.BasisFunctionGenerator$3: double _h> = $d2;

        $r6 = r0.<com.opengamma.analytics.math.interpolation.BasisFunctionGenerator$3: double[] val$knots>;

        $i6 = r0.<com.opengamma.analytics.math.interpolation.BasisFunctionGenerator$3: int val$index>;

        $i7 = $i6 + 1;

        $d4 = $r6[$i7];

        $r7 = r0.<com.opengamma.analytics.math.interpolation.BasisFunctionGenerator$3: double[] val$knots>;

        $i8 = r0.<com.opengamma.analytics.math.interpolation.BasisFunctionGenerator$3: int val$index>;

        $d3 = $r7[$i8];

        $d5 = $d4 - $d3;

        $d6 = 1.0 / $d5;

        r0.<com.opengamma.analytics.math.interpolation.BasisFunctionGenerator$3: double _inv1> = $d6;

        $r8 = r0.<com.opengamma.analytics.math.interpolation.BasisFunctionGenerator$3: double[] val$knots>;

        $i9 = r0.<com.opengamma.analytics.math.interpolation.BasisFunctionGenerator$3: int val$index>;

        $i10 = $i9 + 2;

        $d8 = $r8[$i10];

        $r9 = r0.<com.opengamma.analytics.math.interpolation.BasisFunctionGenerator$3: double[] val$knots>;

        $i11 = r0.<com.opengamma.analytics.math.interpolation.BasisFunctionGenerator$3: int val$index>;

        $i12 = $i11 + 1;

        $d7 = $r9[$i12];

        $d9 = $d8 - $d7;

        $d10 = 1.0 / $d9;

        r0.<com.opengamma.analytics.math.interpolation.BasisFunctionGenerator$3: double _inv2> = $d10;

        return;
    }

    public java.lang.Double evaluate(java.lang.Double)
    {
        com.opengamma.analytics.math.interpolation.BasisFunctionGenerator$3 r0;
        java.lang.Double r1, $r2;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14;
        byte $b0, $b1, $b2;

        r0 := @this: com.opengamma.analytics.math.interpolation.BasisFunctionGenerator$3;

        r1 := @parameter0: java.lang.Double;

        $d0 = virtualinvoke r1.<java.lang.Double: double doubleValue()>();

        $d1 = r0.<com.opengamma.analytics.math.interpolation.BasisFunctionGenerator$3: double _l>;

        $b0 = $d0 cmpg $d1;

        if $b0 <= 0 goto label1;

        $d2 = virtualinvoke r1.<java.lang.Double: double doubleValue()>();

        $d3 = r0.<com.opengamma.analytics.math.interpolation.BasisFunctionGenerator$3: double _h>;

        $b1 = $d2 cmpl $d3;

        if $b1 < 0 goto label2;

     label1:
        $d14 = 0.0;

        goto label4;

     label2:
        $d4 = virtualinvoke r1.<java.lang.Double: double doubleValue()>();

        $d5 = r0.<com.opengamma.analytics.math.interpolation.BasisFunctionGenerator$3: double _m>;

        $b2 = $d4 cmpg $d5;

        if $b2 > 0 goto label3;

        $d10 = virtualinvoke r1.<java.lang.Double: double doubleValue()>();

        $d11 = r0.<com.opengamma.analytics.math.interpolation.BasisFunctionGenerator$3: double _l>;

        $d13 = $d10 - $d11;

        $d12 = r0.<com.opengamma.analytics.math.interpolation.BasisFunctionGenerator$3: double _inv1>;

        $d14 = $d13 * $d12;

        goto label4;

     label3:
        $d6 = r0.<com.opengamma.analytics.math.interpolation.BasisFunctionGenerator$3: double _h>;

        $d7 = virtualinvoke r1.<java.lang.Double: double doubleValue()>();

        $d9 = $d6 - $d7;

        $d8 = r0.<com.opengamma.analytics.math.interpolation.BasisFunctionGenerator$3: double _inv2>;

        $d14 = $d9 * $d8;

     label4:
        $r2 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d14);

        return $r2;
    }

    public volatile java.lang.Object evaluate(java.lang.Object)
    {
        com.opengamma.analytics.math.interpolation.BasisFunctionGenerator$3 r0;
        java.lang.Object r1;
        java.lang.Double $r2, $r3;

        r0 := @this: com.opengamma.analytics.math.interpolation.BasisFunctionGenerator$3;

        r1 := @parameter0: java.lang.Object;

        $r2 = (java.lang.Double) r1;

        $r3 = virtualinvoke r0.<com.opengamma.analytics.math.interpolation.BasisFunctionGenerator$3: java.lang.Double evaluate(java.lang.Double)>($r2);

        return $r3;
    }
}
