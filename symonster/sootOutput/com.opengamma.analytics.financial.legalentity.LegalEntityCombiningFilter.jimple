public class com.opengamma.analytics.financial.legalentity.LegalEntityCombiningFilter extends java.lang.Object implements com.opengamma.analytics.financial.legalentity.LegalEntityFilter, org.joda.beans.Bean
{
    private static final long serialVersionUID;
    private java.util.Set _filtersToUse;

    public void <init>()
    {
        com.opengamma.analytics.financial.legalentity.LegalEntityCombiningFilter r0;
        java.util.Set $r1;

        r0 := @this: com.opengamma.analytics.financial.legalentity.LegalEntityCombiningFilter;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = staticinvoke <java.util.Collections: java.util.Set emptySet()>();

        virtualinvoke r0.<com.opengamma.analytics.financial.legalentity.LegalEntityCombiningFilter: void setFiltersToUse(java.util.Set)>($r1);

        return;
    }

    public void <init>(java.util.Set)
    {
        com.opengamma.analytics.financial.legalentity.LegalEntityCombiningFilter r0;
        java.util.Set r1;

        r0 := @this: com.opengamma.analytics.financial.legalentity.LegalEntityCombiningFilter;

        r1 := @parameter0: java.util.Set;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        virtualinvoke r0.<com.opengamma.analytics.financial.legalentity.LegalEntityCombiningFilter: void setFiltersToUse(java.util.Set)>(r1);

        return;
    }

    public java.lang.Object getFilteredData(com.opengamma.analytics.financial.legalentity.LegalEntity)
    {
        com.opengamma.analytics.financial.legalentity.LegalEntityCombiningFilter r0;
        com.opengamma.analytics.financial.legalentity.LegalEntity r1;
        java.util.Iterator r3;
        com.opengamma.analytics.financial.legalentity.LegalEntityFilter r4;
        java.lang.Object r5, $r9;
        java.util.HashSet $r7;
        java.util.Set $r8, $r10;
        boolean $z0, $z1;

        r0 := @this: com.opengamma.analytics.financial.legalentity.LegalEntityCombiningFilter;

        r1 := @parameter0: com.opengamma.analytics.financial.legalentity.LegalEntity;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "legal entity");

        $r7 = new java.util.HashSet;

        specialinvoke $r7.<java.util.HashSet: void <init>()>();

        $r8 = r0.<com.opengamma.analytics.financial.legalentity.LegalEntityCombiningFilter: java.util.Set _filtersToUse>;

        r3 = interfaceinvoke $r8.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r9 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (com.opengamma.analytics.financial.legalentity.LegalEntityFilter) $r9;

        r5 = interfaceinvoke r4.<com.opengamma.analytics.financial.legalentity.LegalEntityFilter: java.lang.Object getFilteredData(com.opengamma.analytics.financial.legalentity.LegalEntity)>(r1);

        $z1 = r5 instanceof java.util.Set;

        if $z1 == 0 goto label2;

        $r10 = (java.util.Set) r5;

        interfaceinvoke $r7.<java.util.Set: boolean addAll(java.util.Collection)>($r10);

        goto label3;

     label2:
        interfaceinvoke $r7.<java.util.Set: boolean add(java.lang.Object)>(r5);

     label3:
        goto label1;

     label4:
        return $r7;
    }

    private java.lang.reflect.Type applyUsedFilterDataType(java.lang.reflect.Type, java.lang.reflect.Type)
    {
        com.opengamma.analytics.financial.legalentity.LegalEntityCombiningFilter r0;
        java.lang.reflect.Type r1, r2, r12, r15, r16;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.lang.UnsupportedOperationException $r3;
        java.lang.StringBuilder $r4, $r5, $r6;
        java.lang.String $r7;
        java.lang.Class $r8, $r9;
        java.lang.reflect.Type[] $r10, r13;
        com.opengamma.util.types.VariantType $r11;
        int i0, i1;
        java.lang.reflect.ParameterizedType r14;

        r0 := @this: com.opengamma.analytics.financial.legalentity.LegalEntityCombiningFilter;

        r12 := @parameter0: java.lang.reflect.Type;

        r1 := @parameter1: java.lang.reflect.Type;

        $z0 = r1 instanceof com.opengamma.util.types.VariantType;

        if $z0 == 0 goto label3;

        $r11 = (com.opengamma.util.types.VariantType) r1;

        r13 = virtualinvoke $r11.<com.opengamma.util.types.VariantType: java.lang.reflect.Type[] getLogicalTypes()>();

        i0 = lengthof r13;

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        r2 = r13[i1];

        r12 = specialinvoke r0.<com.opengamma.analytics.financial.legalentity.LegalEntityCombiningFilter: java.lang.reflect.Type applyUsedFilterDataType(java.lang.reflect.Type,java.lang.reflect.Type)>(r12, r2);

        i1 = i1 + 1;

        goto label1;

     label2:
        goto label9;

     label3:
        $z1 = r1 instanceof java.lang.reflect.ParameterizedType;

        if $z1 == 0 goto label7;

        r14 = (java.lang.reflect.ParameterizedType) r1;

        r15 = interfaceinvoke r14.<java.lang.reflect.ParameterizedType: java.lang.reflect.Type getRawType()>();

        $z3 = r15 instanceof java.lang.Class;

        if $z3 == 0 goto label5;

        $r9 = class "java/util/Set";

        $r8 = (java.lang.Class) r15;

        $z4 = virtualinvoke $r9.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>($r8);

        if $z4 == 0 goto label5;

        $r10 = interfaceinvoke r14.<java.lang.reflect.ParameterizedType: java.lang.reflect.Type[] getActualTypeArguments()>();

        r16 = $r10[0];

        if r16 == class "java/lang/Void" goto label4;

        r12 = staticinvoke <com.opengamma.util.types.VariantType: java.lang.reflect.Type either(java.lang.reflect.Type,java.lang.reflect.Type)>(r12, r16);

     label4:
        goto label6;

     label5:
        r12 = staticinvoke <com.opengamma.util.types.VariantType: java.lang.reflect.Type either(java.lang.reflect.Type,java.lang.reflect.Type)>(r12, r1);

     label6:
        goto label9;

     label7:
        $z2 = r1 instanceof java.lang.Class;

        if $z2 == 0 goto label8;

        r12 = staticinvoke <com.opengamma.util.types.VariantType: java.lang.reflect.Type either(java.lang.reflect.Type,java.lang.reflect.Type)>(r12, r1);

        goto label9;

     label8:
        $r3 = new java.lang.UnsupportedOperationException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("filtered type = ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>($r7);

        throw $r3;

     label9:
        return r12;
    }

    public java.lang.reflect.Type getFilteredDataType()
    {
        com.opengamma.analytics.financial.legalentity.LegalEntityCombiningFilter r0;
        java.util.Iterator r1;
        com.opengamma.analytics.financial.legalentity.LegalEntityFilter r2;
        java.util.Set $r3, $r4;
        boolean $z0, $z1;
        com.opengamma.util.types.ParameterizedTypeImpl $r5, $r8;
        java.lang.Object $r6;
        java.lang.reflect.Type $r7, r9, r10, r11;

        r0 := @this: com.opengamma.analytics.financial.legalentity.LegalEntityCombiningFilter;

        $r3 = r0.<com.opengamma.analytics.financial.legalentity.LegalEntityCombiningFilter: java.util.Set _filtersToUse>;

        $z0 = interfaceinvoke $r3.<java.util.Set: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        $r8 = staticinvoke <com.opengamma.util.types.ParameterizedTypeImpl: com.opengamma.util.types.ParameterizedTypeImpl of(java.lang.Class,java.lang.reflect.Type)>(class "java/util/Set", class "java/lang/Void");

        r10 = (java.lang.reflect.Type) $r8;

        return r10;

     label1:
        r9 = null;

        $r4 = r0.<com.opengamma.analytics.financial.legalentity.LegalEntityCombiningFilter: java.util.Set _filtersToUse>;

        r1 = interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>();

     label2:
        $z1 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label3;

        $r6 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r2 = (com.opengamma.analytics.financial.legalentity.LegalEntityFilter) $r6;

        $r7 = interfaceinvoke r2.<com.opengamma.analytics.financial.legalentity.LegalEntityFilter: java.lang.reflect.Type getFilteredDataType()>();

        r9 = specialinvoke r0.<com.opengamma.analytics.financial.legalentity.LegalEntityCombiningFilter: java.lang.reflect.Type applyUsedFilterDataType(java.lang.reflect.Type,java.lang.reflect.Type)>(r9, $r7);

        goto label2;

     label3:
        $r5 = staticinvoke <com.opengamma.util.types.ParameterizedTypeImpl: com.opengamma.util.types.ParameterizedTypeImpl of(java.lang.Class,java.lang.reflect.Type)>(class "java/util/Set", r9);

        r11 = (java.lang.reflect.Type) $r5;

        return r11;
    }

    public static com.opengamma.analytics.financial.legalentity.LegalEntityCombiningFilter$Meta meta()
    {
        com.opengamma.analytics.financial.legalentity.LegalEntityCombiningFilter$Meta $r0;

        $r0 = <com.opengamma.analytics.financial.legalentity.LegalEntityCombiningFilter$Meta: com.opengamma.analytics.financial.legalentity.LegalEntityCombiningFilter$Meta INSTANCE>;

        return $r0;
    }

    public com.opengamma.analytics.financial.legalentity.LegalEntityCombiningFilter$Meta metaBean()
    {
        com.opengamma.analytics.financial.legalentity.LegalEntityCombiningFilter r0;
        com.opengamma.analytics.financial.legalentity.LegalEntityCombiningFilter$Meta $r1;

        r0 := @this: com.opengamma.analytics.financial.legalentity.LegalEntityCombiningFilter;

        $r1 = <com.opengamma.analytics.financial.legalentity.LegalEntityCombiningFilter$Meta: com.opengamma.analytics.financial.legalentity.LegalEntityCombiningFilter$Meta INSTANCE>;

        return $r1;
    }

    public org.joda.beans.Property property(java.lang.String)
    {
        com.opengamma.analytics.financial.legalentity.LegalEntityCombiningFilter r0;
        java.lang.String r1;
        com.opengamma.analytics.financial.legalentity.LegalEntityCombiningFilter$Meta $r2;
        org.joda.beans.MetaProperty $r3;
        org.joda.beans.Property $r4;

        r0 := @this: com.opengamma.analytics.financial.legalentity.LegalEntityCombiningFilter;

        r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<com.opengamma.analytics.financial.legalentity.LegalEntityCombiningFilter: com.opengamma.analytics.financial.legalentity.LegalEntityCombiningFilter$Meta metaBean()>();

        $r3 = virtualinvoke $r2.<com.opengamma.analytics.financial.legalentity.LegalEntityCombiningFilter$Meta: org.joda.beans.MetaProperty metaProperty(java.lang.String)>(r1);

        $r4 = interfaceinvoke $r3.<org.joda.beans.MetaProperty: org.joda.beans.Property createProperty(org.joda.beans.Bean)>(r0);

        return $r4;
    }

    public java.util.Set propertyNames()
    {
        com.opengamma.analytics.financial.legalentity.LegalEntityCombiningFilter r0;
        com.opengamma.analytics.financial.legalentity.LegalEntityCombiningFilter$Meta $r1;
        java.util.Map $r2;
        java.util.Set $r3;

        r0 := @this: com.opengamma.analytics.financial.legalentity.LegalEntityCombiningFilter;

        $r1 = virtualinvoke r0.<com.opengamma.analytics.financial.legalentity.LegalEntityCombiningFilter: com.opengamma.analytics.financial.legalentity.LegalEntityCombiningFilter$Meta metaBean()>();

        $r2 = virtualinvoke $r1.<com.opengamma.analytics.financial.legalentity.LegalEntityCombiningFilter$Meta: java.util.Map metaPropertyMap()>();

        $r3 = interfaceinvoke $r2.<java.util.Map: java.util.Set keySet()>();

        return $r3;
    }

    public java.util.Set getFiltersToUse()
    {
        com.opengamma.analytics.financial.legalentity.LegalEntityCombiningFilter r0;
        java.util.Set $r1;

        r0 := @this: com.opengamma.analytics.financial.legalentity.LegalEntityCombiningFilter;

        $r1 = r0.<com.opengamma.analytics.financial.legalentity.LegalEntityCombiningFilter: java.util.Set _filtersToUse>;

        return $r1;
    }

    public void setFiltersToUse(java.util.Set)
    {
        com.opengamma.analytics.financial.legalentity.LegalEntityCombiningFilter r0;
        java.util.Set r1;

        r0 := @this: com.opengamma.analytics.financial.legalentity.LegalEntityCombiningFilter;

        r1 := @parameter0: java.util.Set;

        staticinvoke <org.joda.beans.JodaBeanUtils: void notNull(java.lang.Object,java.lang.String)>(r1, "filtersToUse");

        r0.<com.opengamma.analytics.financial.legalentity.LegalEntityCombiningFilter: java.util.Set _filtersToUse> = r1;

        return;
    }

    public final org.joda.beans.Property filtersToUse()
    {
        com.opengamma.analytics.financial.legalentity.LegalEntityCombiningFilter r0;
        com.opengamma.analytics.financial.legalentity.LegalEntityCombiningFilter$Meta $r1;
        org.joda.beans.MetaProperty $r2;
        org.joda.beans.Property $r3;

        r0 := @this: com.opengamma.analytics.financial.legalentity.LegalEntityCombiningFilter;

        $r1 = virtualinvoke r0.<com.opengamma.analytics.financial.legalentity.LegalEntityCombiningFilter: com.opengamma.analytics.financial.legalentity.LegalEntityCombiningFilter$Meta metaBean()>();

        $r2 = virtualinvoke $r1.<com.opengamma.analytics.financial.legalentity.LegalEntityCombiningFilter$Meta: org.joda.beans.MetaProperty filtersToUse()>();

        $r3 = interfaceinvoke $r2.<org.joda.beans.MetaProperty: org.joda.beans.Property createProperty(org.joda.beans.Bean)>(r0);

        return $r3;
    }

    public com.opengamma.analytics.financial.legalentity.LegalEntityCombiningFilter clone()
    {
        com.opengamma.analytics.financial.legalentity.LegalEntityCombiningFilter r0, $r2;
        org.joda.beans.Bean $r1;

        r0 := @this: com.opengamma.analytics.financial.legalentity.LegalEntityCombiningFilter;

        $r1 = staticinvoke <org.joda.beans.JodaBeanUtils: org.joda.beans.Bean cloneAlways(org.joda.beans.Bean)>(r0);

        $r2 = (com.opengamma.analytics.financial.legalentity.LegalEntityCombiningFilter) $r1;

        return $r2;
    }

    public boolean equals(java.lang.Object)
    {
        com.opengamma.analytics.financial.legalentity.LegalEntityCombiningFilter r0, r2;
        java.lang.Object r1;
        java.lang.Class $r3, $r4;
        java.util.Set $r5, $r6;
        boolean $z0;

        r0 := @this: com.opengamma.analytics.financial.legalentity.LegalEntityCombiningFilter;

        r1 := @parameter0: java.lang.Object;

        if r1 != r0 goto label1;

        return 1;

     label1:
        if r1 == null goto label2;

        $r3 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        $r4 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        if $r3 != $r4 goto label2;

        r2 = (com.opengamma.analytics.financial.legalentity.LegalEntityCombiningFilter) r1;

        $r5 = virtualinvoke r0.<com.opengamma.analytics.financial.legalentity.LegalEntityCombiningFilter: java.util.Set getFiltersToUse()>();

        $r6 = virtualinvoke r2.<com.opengamma.analytics.financial.legalentity.LegalEntityCombiningFilter: java.util.Set getFiltersToUse()>();

        $z0 = staticinvoke <org.joda.beans.JodaBeanUtils: boolean equal(java.lang.Object,java.lang.Object)>($r5, $r6);

        return $z0;

     label2:
        return 0;
    }

    public int hashCode()
    {
        com.opengamma.analytics.financial.legalentity.LegalEntityCombiningFilter r0;
        java.lang.Class $r1;
        int $i0, $i1, i2, i3;
        java.util.Set $r2;

        r0 := @this: com.opengamma.analytics.financial.legalentity.LegalEntityCombiningFilter;

        $r1 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        i2 = virtualinvoke $r1.<java.lang.Object: int hashCode()>();

        $i0 = i2 * 31;

        $r2 = virtualinvoke r0.<com.opengamma.analytics.financial.legalentity.LegalEntityCombiningFilter: java.util.Set getFiltersToUse()>();

        $i1 = staticinvoke <org.joda.beans.JodaBeanUtils: int hashCode(java.lang.Object)>($r2);

        i3 = $i0 + $i1;

        return i3;
    }

    public java.lang.String toString()
    {
        com.opengamma.analytics.financial.legalentity.LegalEntityCombiningFilter r0;
        int i0, $i1, $i2, $i3;
        java.lang.StringBuilder $r2;
        java.lang.String $r5;

        r0 := @this: com.opengamma.analytics.financial.legalentity.LegalEntityCombiningFilter;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(int)>(64);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("LegalEntityCombiningFilter{");

        i0 = virtualinvoke $r2.<java.lang.StringBuilder: int length()>();

        virtualinvoke r0.<com.opengamma.analytics.financial.legalentity.LegalEntityCombiningFilter: void toString(java.lang.StringBuilder)>($r2);

        $i1 = virtualinvoke $r2.<java.lang.StringBuilder: int length()>();

        if $i1 <= i0 goto label1;

        $i2 = virtualinvoke $r2.<java.lang.StringBuilder: int length()>();

        $i3 = $i2 - 2;

        virtualinvoke $r2.<java.lang.StringBuilder: void setLength(int)>($i3);

     label1:
        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(125);

        $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r5;
    }

    protected void toString(java.lang.StringBuilder)
    {
        com.opengamma.analytics.financial.legalentity.LegalEntityCombiningFilter r0;
        java.lang.StringBuilder r1, $r2, $r3, $r6, $r7;
        java.util.Set $r4;
        java.lang.String $r5;

        r0 := @this: com.opengamma.analytics.financial.legalentity.LegalEntityCombiningFilter;

        r1 := @parameter0: java.lang.StringBuilder;

        $r2 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("filtersToUse");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(61);

        $r4 = virtualinvoke r0.<com.opengamma.analytics.financial.legalentity.LegalEntityCombiningFilter: java.util.Set getFiltersToUse()>();

        $r5 = staticinvoke <org.joda.beans.JodaBeanUtils: java.lang.String toString(java.lang.Object)>($r4);

        $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(44);

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

        return;
    }

    public volatile java.lang.Object clone() throws java.lang.CloneNotSupportedException
    {
        com.opengamma.analytics.financial.legalentity.LegalEntityCombiningFilter r0, $r1;

        r0 := @this: com.opengamma.analytics.financial.legalentity.LegalEntityCombiningFilter;

        $r1 = virtualinvoke r0.<com.opengamma.analytics.financial.legalentity.LegalEntityCombiningFilter: com.opengamma.analytics.financial.legalentity.LegalEntityCombiningFilter clone()>();

        return $r1;
    }

    public volatile org.joda.beans.MetaBean metaBean()
    {
        com.opengamma.analytics.financial.legalentity.LegalEntityCombiningFilter r0;
        com.opengamma.analytics.financial.legalentity.LegalEntityCombiningFilter$Meta $r1;
        org.joda.beans.MetaBean r2;

        r0 := @this: com.opengamma.analytics.financial.legalentity.LegalEntityCombiningFilter;

        $r1 = virtualinvoke r0.<com.opengamma.analytics.financial.legalentity.LegalEntityCombiningFilter: com.opengamma.analytics.financial.legalentity.LegalEntityCombiningFilter$Meta metaBean()>();

        r2 = (org.joda.beans.MetaBean) $r1;

        return r2;
    }

    static java.util.Set access$000(com.opengamma.analytics.financial.legalentity.LegalEntityCombiningFilter)
    {
        com.opengamma.analytics.financial.legalentity.LegalEntityCombiningFilter r0;
        java.util.Set $r1;

        r0 := @parameter0: com.opengamma.analytics.financial.legalentity.LegalEntityCombiningFilter;

        $r1 = r0.<com.opengamma.analytics.financial.legalentity.LegalEntityCombiningFilter: java.util.Set _filtersToUse>;

        return $r1;
    }

    static void <clinit>()
    {
        com.opengamma.analytics.financial.legalentity.LegalEntityCombiningFilter$Meta $r0;
        org.joda.beans.MetaBean r1;

        <com.opengamma.analytics.financial.legalentity.LegalEntityCombiningFilter: long serialVersionUID> = 1L;

        $r0 = <com.opengamma.analytics.financial.legalentity.LegalEntityCombiningFilter$Meta: com.opengamma.analytics.financial.legalentity.LegalEntityCombiningFilter$Meta INSTANCE>;

        r1 = (org.joda.beans.MetaBean) $r0;

        staticinvoke <org.joda.beans.JodaBeanUtils: void registerMetaBean(org.joda.beans.MetaBean)>(r1);

        return;
    }
}
