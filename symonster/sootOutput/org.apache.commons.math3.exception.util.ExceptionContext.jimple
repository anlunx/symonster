public class org.apache.commons.math3.exception.util.ExceptionContext extends java.lang.Object implements java.io.Serializable
{
    private static final long serialVersionUID;
    private java.lang.Throwable throwable;
    private java.util.List msgPatterns;
    private java.util.List msgArguments;
    private java.util.Map context;

    public void <init>(java.lang.Throwable)
    {
        org.apache.commons.math3.exception.util.ExceptionContext r0;
        java.lang.Throwable r1;
        java.util.ArrayList $r2, $r3;
        java.util.HashMap $r4;

        r0 := @this: org.apache.commons.math3.exception.util.ExceptionContext;

        r1 := @parameter0: java.lang.Throwable;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.commons.math3.exception.util.ExceptionContext: java.lang.Throwable throwable> = r1;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        r0.<org.apache.commons.math3.exception.util.ExceptionContext: java.util.List msgPatterns> = $r2;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        r0.<org.apache.commons.math3.exception.util.ExceptionContext: java.util.List msgArguments> = $r3;

        $r4 = new java.util.HashMap;

        specialinvoke $r4.<java.util.HashMap: void <init>()>();

        r0.<org.apache.commons.math3.exception.util.ExceptionContext: java.util.Map context> = $r4;

        return;
    }

    public java.lang.Throwable getThrowable()
    {
        org.apache.commons.math3.exception.util.ExceptionContext r0;
        java.lang.Throwable $r1;

        r0 := @this: org.apache.commons.math3.exception.util.ExceptionContext;

        $r1 = r0.<org.apache.commons.math3.exception.util.ExceptionContext: java.lang.Throwable throwable>;

        return $r1;
    }

    public transient void addMessage(org.apache.commons.math3.exception.util.Localizable, java.lang.Object[])
    {
        org.apache.commons.math3.exception.util.ExceptionContext r0;
        org.apache.commons.math3.exception.util.Localizable r1;
        java.lang.Object[] r2, $r5;
        java.util.List $r3, $r4;

        r0 := @this: org.apache.commons.math3.exception.util.ExceptionContext;

        r1 := @parameter0: org.apache.commons.math3.exception.util.Localizable;

        r2 := @parameter1: java.lang.Object[];

        $r3 = r0.<org.apache.commons.math3.exception.util.ExceptionContext: java.util.List msgPatterns>;

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>(r1);

        $r4 = r0.<org.apache.commons.math3.exception.util.ExceptionContext: java.util.List msgArguments>;

        $r5 = staticinvoke <org.apache.commons.math3.exception.util.ArgUtils: java.lang.Object[] flatten(java.lang.Object[])>(r2);

        interfaceinvoke $r4.<java.util.List: boolean add(java.lang.Object)>($r5);

        return;
    }

    public void setValue(java.lang.String, java.lang.Object)
    {
        org.apache.commons.math3.exception.util.ExceptionContext r0;
        java.lang.String r1;
        java.lang.Object r2;
        java.util.Map $r3;

        r0 := @this: org.apache.commons.math3.exception.util.ExceptionContext;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object;

        $r3 = r0.<org.apache.commons.math3.exception.util.ExceptionContext: java.util.Map context>;

        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2);

        return;
    }

    public java.lang.Object getValue(java.lang.String)
    {
        org.apache.commons.math3.exception.util.ExceptionContext r0;
        java.lang.String r1;
        java.util.Map $r2;
        java.lang.Object $r3;

        r0 := @this: org.apache.commons.math3.exception.util.ExceptionContext;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.apache.commons.math3.exception.util.ExceptionContext: java.util.Map context>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        return $r3;
    }

    public java.util.Set getKeys()
    {
        org.apache.commons.math3.exception.util.ExceptionContext r0;
        java.util.Map $r1;
        java.util.Set $r2;

        r0 := @this: org.apache.commons.math3.exception.util.ExceptionContext;

        $r1 = r0.<org.apache.commons.math3.exception.util.ExceptionContext: java.util.Map context>;

        $r2 = interfaceinvoke $r1.<java.util.Map: java.util.Set keySet()>();

        return $r2;
    }

    public java.lang.String getMessage()
    {
        org.apache.commons.math3.exception.util.ExceptionContext r0;
        java.util.Locale $r1;
        java.lang.String $r2;

        r0 := @this: org.apache.commons.math3.exception.util.ExceptionContext;

        $r1 = <java.util.Locale: java.util.Locale US>;

        $r2 = virtualinvoke r0.<org.apache.commons.math3.exception.util.ExceptionContext: java.lang.String getMessage(java.util.Locale)>($r1);

        return $r2;
    }

    public java.lang.String getLocalizedMessage()
    {
        org.apache.commons.math3.exception.util.ExceptionContext r0;
        java.util.Locale $r1;
        java.lang.String $r2;

        r0 := @this: org.apache.commons.math3.exception.util.ExceptionContext;

        $r1 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>();

        $r2 = virtualinvoke r0.<org.apache.commons.math3.exception.util.ExceptionContext: java.lang.String getMessage(java.util.Locale)>($r1);

        return $r2;
    }

    public java.lang.String getMessage(java.util.Locale)
    {
        org.apache.commons.math3.exception.util.ExceptionContext r0;
        java.util.Locale r1;
        java.lang.String $r2;

        r0 := @this: org.apache.commons.math3.exception.util.ExceptionContext;

        r1 := @parameter0: java.util.Locale;

        $r2 = specialinvoke r0.<org.apache.commons.math3.exception.util.ExceptionContext: java.lang.String buildMessage(java.util.Locale,java.lang.String)>(r1, ": ");

        return $r2;
    }

    public java.lang.String getMessage(java.util.Locale, java.lang.String)
    {
        org.apache.commons.math3.exception.util.ExceptionContext r0;
        java.util.Locale r1;
        java.lang.String r2, $r3;

        r0 := @this: org.apache.commons.math3.exception.util.ExceptionContext;

        r1 := @parameter0: java.util.Locale;

        r2 := @parameter1: java.lang.String;

        $r3 = specialinvoke r0.<org.apache.commons.math3.exception.util.ExceptionContext: java.lang.String buildMessage(java.util.Locale,java.lang.String)>(r1, r2);

        return $r3;
    }

    private java.lang.String buildMessage(java.util.Locale, java.lang.String)
    {
        org.apache.commons.math3.exception.util.ExceptionContext r0;
        java.util.Locale r1;
        java.lang.String r2, $r9, $r15, $r16;
        int i0, i1, i2;
        org.apache.commons.math3.exception.util.Localizable r4;
        java.lang.Object[] r5;
        java.lang.StringBuilder $r7;
        java.util.List $r8, $r10, $r12;
        java.lang.Object $r11, $r13;
        java.text.MessageFormat $r14;

        r0 := @this: org.apache.commons.math3.exception.util.ExceptionContext;

        r1 := @parameter0: java.util.Locale;

        r2 := @parameter1: java.lang.String;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        i1 = 0;

        $r8 = r0.<org.apache.commons.math3.exception.util.ExceptionContext: java.util.List msgPatterns>;

        i0 = interfaceinvoke $r8.<java.util.List: int size()>();

        i2 = 0;

     label1:
        if i2 >= i0 goto label3;

        $r10 = r0.<org.apache.commons.math3.exception.util.ExceptionContext: java.util.List msgPatterns>;

        $r11 = interfaceinvoke $r10.<java.util.List: java.lang.Object get(int)>(i2);

        r4 = (org.apache.commons.math3.exception.util.Localizable) $r11;

        $r12 = r0.<org.apache.commons.math3.exception.util.ExceptionContext: java.util.List msgArguments>;

        $r13 = interfaceinvoke $r12.<java.util.List: java.lang.Object get(int)>(i2);

        r5 = (java.lang.Object[]) $r13;

        $r14 = new java.text.MessageFormat;

        $r15 = interfaceinvoke r4.<org.apache.commons.math3.exception.util.Localizable: java.lang.String getLocalizedString(java.util.Locale)>(r1);

        specialinvoke $r14.<java.text.MessageFormat: void <init>(java.lang.String,java.util.Locale)>($r15, r1);

        $r16 = virtualinvoke $r14.<java.text.MessageFormat: java.lang.String format(java.lang.Object)>(r5);

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);

        i1 = i1 + 1;

        if i1 >= i0 goto label2;

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

     label2:
        i2 = i2 + 1;

        goto label1;

     label3:
        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r9;
    }

    private void writeObject(java.io.ObjectOutputStream) throws java.io.IOException
    {
        org.apache.commons.math3.exception.util.ExceptionContext r0;
        java.io.ObjectOutputStream r1;
        java.lang.Throwable $r2;

        r0 := @this: org.apache.commons.math3.exception.util.ExceptionContext;

        r1 := @parameter0: java.io.ObjectOutputStream;

        $r2 = r0.<org.apache.commons.math3.exception.util.ExceptionContext: java.lang.Throwable throwable>;

        virtualinvoke r1.<java.io.ObjectOutputStream: void writeObject(java.lang.Object)>($r2);

        specialinvoke r0.<org.apache.commons.math3.exception.util.ExceptionContext: void serializeMessages(java.io.ObjectOutputStream)>(r1);

        specialinvoke r0.<org.apache.commons.math3.exception.util.ExceptionContext: void serializeContext(java.io.ObjectOutputStream)>(r1);

        return;
    }

    private void readObject(java.io.ObjectInputStream) throws java.io.IOException, java.lang.ClassNotFoundException
    {
        org.apache.commons.math3.exception.util.ExceptionContext r0;
        java.io.ObjectInputStream r1;
        java.lang.Object $r2;
        java.lang.Throwable $r3;

        r0 := @this: org.apache.commons.math3.exception.util.ExceptionContext;

        r1 := @parameter0: java.io.ObjectInputStream;

        $r2 = virtualinvoke r1.<java.io.ObjectInputStream: java.lang.Object readObject()>();

        $r3 = (java.lang.Throwable) $r2;

        r0.<org.apache.commons.math3.exception.util.ExceptionContext: java.lang.Throwable throwable> = $r3;

        specialinvoke r0.<org.apache.commons.math3.exception.util.ExceptionContext: void deSerializeMessages(java.io.ObjectInputStream)>(r1);

        specialinvoke r0.<org.apache.commons.math3.exception.util.ExceptionContext: void deSerializeContext(java.io.ObjectInputStream)>(r1);

        return;
    }

    private void serializeMessages(java.io.ObjectOutputStream) throws java.io.IOException
    {
        org.apache.commons.math3.exception.util.ExceptionContext r0;
        java.io.ObjectOutputStream r1;
        int i0, i1, i2, i3;
        org.apache.commons.math3.exception.util.Localizable r2;
        java.lang.Object[] r3;
        java.util.List $r4, $r5, $r7;
        java.lang.Object $r6, $r8, $r9, $r10, $r12;
        boolean $z0;
        java.lang.String $r11;

        r0 := @this: org.apache.commons.math3.exception.util.ExceptionContext;

        r1 := @parameter0: java.io.ObjectOutputStream;

        $r4 = r0.<org.apache.commons.math3.exception.util.ExceptionContext: java.util.List msgPatterns>;

        i0 = interfaceinvoke $r4.<java.util.List: int size()>();

        virtualinvoke r1.<java.io.ObjectOutputStream: void writeInt(int)>(i0);

        i2 = 0;

     label1:
        if i2 >= i0 goto label6;

        $r5 = r0.<org.apache.commons.math3.exception.util.ExceptionContext: java.util.List msgPatterns>;

        $r6 = interfaceinvoke $r5.<java.util.List: java.lang.Object get(int)>(i2);

        r2 = (org.apache.commons.math3.exception.util.Localizable) $r6;

        virtualinvoke r1.<java.io.ObjectOutputStream: void writeObject(java.lang.Object)>(r2);

        $r7 = r0.<org.apache.commons.math3.exception.util.ExceptionContext: java.util.List msgArguments>;

        $r8 = interfaceinvoke $r7.<java.util.List: java.lang.Object get(int)>(i2);

        r3 = (java.lang.Object[]) $r8;

        i1 = lengthof r3;

        virtualinvoke r1.<java.io.ObjectOutputStream: void writeInt(int)>(i1);

        i3 = 0;

     label2:
        if i3 >= i1 goto label5;

        $r9 = r3[i3];

        $z0 = $r9 instanceof java.io.Serializable;

        if $z0 == 0 goto label3;

        $r12 = r3[i3];

        virtualinvoke r1.<java.io.ObjectOutputStream: void writeObject(java.lang.Object)>($r12);

        goto label4;

     label3:
        $r10 = r3[i3];

        $r11 = specialinvoke r0.<org.apache.commons.math3.exception.util.ExceptionContext: java.lang.String nonSerializableReplacement(java.lang.Object)>($r10);

        virtualinvoke r1.<java.io.ObjectOutputStream: void writeObject(java.lang.Object)>($r11);

     label4:
        i3 = i3 + 1;

        goto label2;

     label5:
        i2 = i2 + 1;

        goto label1;

     label6:
        return;
    }

    private void deSerializeMessages(java.io.ObjectInputStream) throws java.io.IOException, java.lang.ClassNotFoundException
    {
        org.apache.commons.math3.exception.util.ExceptionContext r0;
        java.io.ObjectInputStream r1;
        int i0, i1, i2, i3;
        org.apache.commons.math3.exception.util.Localizable r2;
        java.lang.Object[] r3;
        java.util.ArrayList $r4, $r5;
        java.lang.Object $r6, $r9;
        java.util.List $r7, $r8;

        r0 := @this: org.apache.commons.math3.exception.util.ExceptionContext;

        r1 := @parameter0: java.io.ObjectInputStream;

        i0 = virtualinvoke r1.<java.io.ObjectInputStream: int readInt()>();

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>(int)>(i0);

        r0.<org.apache.commons.math3.exception.util.ExceptionContext: java.util.List msgPatterns> = $r4;

        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>(int)>(i0);

        r0.<org.apache.commons.math3.exception.util.ExceptionContext: java.util.List msgArguments> = $r5;

        i2 = 0;

     label1:
        if i2 >= i0 goto label4;

        $r6 = virtualinvoke r1.<java.io.ObjectInputStream: java.lang.Object readObject()>();

        r2 = (org.apache.commons.math3.exception.util.Localizable) $r6;

        $r7 = r0.<org.apache.commons.math3.exception.util.ExceptionContext: java.util.List msgPatterns>;

        interfaceinvoke $r7.<java.util.List: boolean add(java.lang.Object)>(r2);

        i1 = virtualinvoke r1.<java.io.ObjectInputStream: int readInt()>();

        r3 = newarray (java.lang.Object)[i1];

        i3 = 0;

     label2:
        if i3 >= i1 goto label3;

        $r9 = virtualinvoke r1.<java.io.ObjectInputStream: java.lang.Object readObject()>();

        r3[i3] = $r9;

        i3 = i3 + 1;

        goto label2;

     label3:
        $r8 = r0.<org.apache.commons.math3.exception.util.ExceptionContext: java.util.List msgArguments>;

        interfaceinvoke $r8.<java.util.List: boolean add(java.lang.Object)>(r3);

        i2 = i2 + 1;

        goto label1;

     label4:
        return;
    }

    private void serializeContext(java.io.ObjectOutputStream) throws java.io.IOException
    {
        org.apache.commons.math3.exception.util.ExceptionContext r0;
        java.io.ObjectOutputStream r1;
        int i0;
        java.util.Iterator r2;
        java.lang.String r3, $r11;
        java.lang.Object r4, $r9;
        java.util.Map $r5, $r7, $r10;
        java.util.Set $r6, $r8;
        boolean $z0, $z1;

        r0 := @this: org.apache.commons.math3.exception.util.ExceptionContext;

        r1 := @parameter0: java.io.ObjectOutputStream;

        $r5 = r0.<org.apache.commons.math3.exception.util.ExceptionContext: java.util.Map context>;

        $r6 = interfaceinvoke $r5.<java.util.Map: java.util.Set keySet()>();

        i0 = interfaceinvoke $r6.<java.util.Set: int size()>();

        virtualinvoke r1.<java.io.ObjectOutputStream: void writeInt(int)>(i0);

        $r7 = r0.<org.apache.commons.math3.exception.util.ExceptionContext: java.util.Map context>;

        $r8 = interfaceinvoke $r7.<java.util.Map: java.util.Set keySet()>();

        r2 = interfaceinvoke $r8.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r9 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (java.lang.String) $r9;

        virtualinvoke r1.<java.io.ObjectOutputStream: void writeObject(java.lang.Object)>(r3);

        $r10 = r0.<org.apache.commons.math3.exception.util.ExceptionContext: java.util.Map context>;

        r4 = interfaceinvoke $r10.<java.util.Map: java.lang.Object get(java.lang.Object)>(r3);

        $z1 = r4 instanceof java.io.Serializable;

        if $z1 == 0 goto label2;

        virtualinvoke r1.<java.io.ObjectOutputStream: void writeObject(java.lang.Object)>(r4);

        goto label3;

     label2:
        $r11 = specialinvoke r0.<org.apache.commons.math3.exception.util.ExceptionContext: java.lang.String nonSerializableReplacement(java.lang.Object)>(r4);

        virtualinvoke r1.<java.io.ObjectOutputStream: void writeObject(java.lang.Object)>($r11);

     label3:
        goto label1;

     label4:
        return;
    }

    private void deSerializeContext(java.io.ObjectInputStream) throws java.io.IOException, java.lang.ClassNotFoundException
    {
        org.apache.commons.math3.exception.util.ExceptionContext r0;
        java.io.ObjectInputStream r1;
        int i0, i1;
        java.lang.String r2;
        java.lang.Object r3, $r5;
        java.util.HashMap $r4;
        java.util.Map $r6;

        r0 := @this: org.apache.commons.math3.exception.util.ExceptionContext;

        r1 := @parameter0: java.io.ObjectInputStream;

        i0 = virtualinvoke r1.<java.io.ObjectInputStream: int readInt()>();

        $r4 = new java.util.HashMap;

        specialinvoke $r4.<java.util.HashMap: void <init>()>();

        r0.<org.apache.commons.math3.exception.util.ExceptionContext: java.util.Map context> = $r4;

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        $r5 = virtualinvoke r1.<java.io.ObjectInputStream: java.lang.Object readObject()>();

        r2 = (java.lang.String) $r5;

        r3 = virtualinvoke r1.<java.io.ObjectInputStream: java.lang.Object readObject()>();

        $r6 = r0.<org.apache.commons.math3.exception.util.ExceptionContext: java.util.Map context>;

        interfaceinvoke $r6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, r3);

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    private java.lang.String nonSerializableReplacement(java.lang.Object)
    {
        org.apache.commons.math3.exception.util.ExceptionContext r0;
        java.lang.Object r1;
        java.lang.StringBuilder $r2, $r3, $r6, $r7;
        java.lang.Class $r4;
        java.lang.String $r5, $r8;

        r0 := @this: org.apache.commons.math3.exception.util.ExceptionContext;

        r1 := @parameter0: java.lang.Object;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[Object could not be serialized: ");

        $r4 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        $r5 = virtualinvoke $r4.<java.lang.Class: java.lang.String getName()>();

        $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r8;
    }

    public static void <clinit>()
    {
        <org.apache.commons.math3.exception.util.ExceptionContext: long serialVersionUID> = -6024911025449780478L;

        return;
    }
}
