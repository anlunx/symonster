public abstract class org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl extends org.apache.commons.math.ConvergingAlgorithmImpl implements org.apache.commons.math.analysis.solvers.UnivariateRealSolver
{
    protected double functionValueAccuracy;
    protected double defaultFunctionValueAccuracy;
    protected boolean resultComputed;
    protected double result;
    protected double functionValue;
    protected org.apache.commons.math.analysis.UnivariateRealFunction f;

    protected void <init>(org.apache.commons.math.analysis.UnivariateRealFunction, int, double)
    {
        org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl r0;
        org.apache.commons.math.analysis.UnivariateRealFunction r1;
        int i0;
        double d0, $d1;
        org.apache.commons.math.exception.NullArgumentException $r2;
        org.apache.commons.math.exception.util.LocalizedFormats $r3;

        r0 := @this: org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl;

        r1 := @parameter0: org.apache.commons.math.analysis.UnivariateRealFunction;

        i0 := @parameter1: int;

        d0 := @parameter2: double;

        specialinvoke r0.<org.apache.commons.math.ConvergingAlgorithmImpl: void <init>(int,double)>(i0, d0);

        r0.<org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl: boolean resultComputed> = 0;

        if r1 != null goto label1;

        $r2 = new org.apache.commons.math.exception.NullArgumentException;

        $r3 = <org.apache.commons.math.exception.util.LocalizedFormats: org.apache.commons.math.exception.util.LocalizedFormats FUNCTION>;

        specialinvoke $r2.<org.apache.commons.math.exception.NullArgumentException: void <init>(org.apache.commons.math.exception.util.Localizable)>($r3);

        throw $r2;

     label1:
        r0.<org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl: org.apache.commons.math.analysis.UnivariateRealFunction f> = r1;

        r0.<org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl: double defaultFunctionValueAccuracy> = 1.0E-15;

        $d1 = r0.<org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl: double defaultFunctionValueAccuracy>;

        r0.<org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl: double functionValueAccuracy> = $d1;

        return;
    }

    protected void <init>(int, double)
    {
        org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl r0;
        int i0;
        double d0, $d1;

        r0 := @this: org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl;

        i0 := @parameter0: int;

        d0 := @parameter1: double;

        specialinvoke r0.<org.apache.commons.math.ConvergingAlgorithmImpl: void <init>(int,double)>(i0, d0);

        r0.<org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl: boolean resultComputed> = 0;

        r0.<org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl: double defaultFunctionValueAccuracy> = 1.0E-15;

        $d1 = r0.<org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl: double defaultFunctionValueAccuracy>;

        r0.<org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl: double functionValueAccuracy> = $d1;

        return;
    }

    protected void checkResultComputed() throws java.lang.IllegalStateException
    {
        org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl r0;
        boolean $z0;
        java.lang.Object[] $r1;
        org.apache.commons.math.exception.util.LocalizedFormats $r2;
        java.lang.IllegalStateException $r3;

        r0 := @this: org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl;

        $z0 = r0.<org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl: boolean resultComputed>;

        if $z0 != 0 goto label1;

        $r2 = <org.apache.commons.math.exception.util.LocalizedFormats: org.apache.commons.math.exception.util.LocalizedFormats NO_RESULT_AVAILABLE>;

        $r1 = newarray (java.lang.Object)[0];

        $r3 = staticinvoke <org.apache.commons.math.MathRuntimeException: java.lang.IllegalStateException createIllegalStateException(org.apache.commons.math.exception.util.Localizable,java.lang.Object[])>($r2, $r1);

        throw $r3;

     label1:
        return;
    }

    public double getResult()
    {
        org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl r0;
        double $d0;

        r0 := @this: org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl;

        virtualinvoke r0.<org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl: void checkResultComputed()>();

        $d0 = r0.<org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl: double result>;

        return $d0;
    }

    public double getFunctionValue()
    {
        org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl r0;
        double $d0;

        r0 := @this: org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl;

        virtualinvoke r0.<org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl: void checkResultComputed()>();

        $d0 = r0.<org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl: double functionValue>;

        return $d0;
    }

    public void setFunctionValueAccuracy(double)
    {
        org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl r0;
        double d0;

        r0 := @this: org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl;

        d0 := @parameter0: double;

        r0.<org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl: double functionValueAccuracy> = d0;

        return;
    }

    public double getFunctionValueAccuracy()
    {
        org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl r0;
        double $d0;

        r0 := @this: org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl;

        $d0 = r0.<org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl: double functionValueAccuracy>;

        return $d0;
    }

    public void resetFunctionValueAccuracy()
    {
        org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl r0;
        double $d0;

        r0 := @this: org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl;

        $d0 = r0.<org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl: double defaultFunctionValueAccuracy>;

        r0.<org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl: double functionValueAccuracy> = $d0;

        return;
    }

    public double solve(int, org.apache.commons.math.analysis.UnivariateRealFunction, double, double) throws org.apache.commons.math.ConvergenceException, org.apache.commons.math.FunctionEvaluationException
    {
        org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl r0;
        int i0;
        org.apache.commons.math.analysis.UnivariateRealFunction r1;
        double d0, d1;
        java.lang.Object[] $r2;
        org.apache.commons.math.exception.util.LocalizedFormats $r3;
        java.lang.UnsupportedOperationException $r4;

        r0 := @this: org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl;

        i0 := @parameter0: int;

        r1 := @parameter1: org.apache.commons.math.analysis.UnivariateRealFunction;

        d0 := @parameter2: double;

        d1 := @parameter3: double;

        $r3 = <org.apache.commons.math.exception.util.LocalizedFormats: org.apache.commons.math.exception.util.LocalizedFormats NOT_OVERRIDEN>;

        $r2 = newarray (java.lang.Object)[0];

        $r4 = staticinvoke <org.apache.commons.math.MathRuntimeException: java.lang.UnsupportedOperationException createUnsupportedOperationException(org.apache.commons.math.exception.util.Localizable,java.lang.Object[])>($r3, $r2);

        throw $r4;
    }

    public double solve(int, org.apache.commons.math.analysis.UnivariateRealFunction, double, double, double) throws org.apache.commons.math.ConvergenceException, org.apache.commons.math.FunctionEvaluationException, java.lang.IllegalArgumentException
    {
        org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl r0;
        int i0;
        org.apache.commons.math.analysis.UnivariateRealFunction r1;
        double d0, d1, d2;
        java.lang.Object[] $r2;
        org.apache.commons.math.exception.util.LocalizedFormats $r3;
        java.lang.UnsupportedOperationException $r4;

        r0 := @this: org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl;

        i0 := @parameter0: int;

        r1 := @parameter1: org.apache.commons.math.analysis.UnivariateRealFunction;

        d0 := @parameter2: double;

        d1 := @parameter3: double;

        d2 := @parameter4: double;

        $r3 = <org.apache.commons.math.exception.util.LocalizedFormats: org.apache.commons.math.exception.util.LocalizedFormats NOT_OVERRIDEN>;

        $r2 = newarray (java.lang.Object)[0];

        $r4 = staticinvoke <org.apache.commons.math.MathRuntimeException: java.lang.UnsupportedOperationException createUnsupportedOperationException(org.apache.commons.math.exception.util.Localizable,java.lang.Object[])>($r3, $r2);

        throw $r4;
    }

    protected final void setResult(double, int)
    {
        org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl r0;
        double d0;
        int i0;

        r0 := @this: org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl;

        d0 := @parameter0: double;

        i0 := @parameter1: int;

        r0.<org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl: double result> = d0;

        r0.<org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl: int iterationCount> = i0;

        r0.<org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl: boolean resultComputed> = 1;

        return;
    }

    protected final void setResult(double, double, int)
    {
        org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl r0;
        double d0, d1;
        int i0;

        r0 := @this: org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        i0 := @parameter2: int;

        r0.<org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl: double result> = d0;

        r0.<org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl: double functionValue> = d1;

        r0.<org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl: int iterationCount> = i0;

        r0.<org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl: boolean resultComputed> = 1;

        return;
    }

    protected final void clearResult()
    {
        org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl r0;

        r0 := @this: org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl;

        r0.<org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl: int iterationCount> = 0;

        r0.<org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl: boolean resultComputed> = 0;

        return;
    }

    protected boolean isBracketing(double, double, org.apache.commons.math.analysis.UnivariateRealFunction) throws org.apache.commons.math.FunctionEvaluationException
    {
        org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl r0;
        double d0, d1, d2, d3;
        org.apache.commons.math.analysis.UnivariateRealFunction r1;
        byte $b0, $b1, $b2, $b3;
        boolean $z0;

        r0 := @this: org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        r1 := @parameter2: org.apache.commons.math.analysis.UnivariateRealFunction;

        d2 = interfaceinvoke r1.<org.apache.commons.math.analysis.UnivariateRealFunction: double value(double)>(d0);

        d3 = interfaceinvoke r1.<org.apache.commons.math.analysis.UnivariateRealFunction: double value(double)>(d1);

        $b0 = d2 cmpl 0.0;

        if $b0 <= 0 goto label1;

        $b3 = d3 cmpg 0.0;

        if $b3 < 0 goto label2;

     label1:
        $b1 = d2 cmpg 0.0;

        if $b1 >= 0 goto label3;

        $b2 = d3 cmpl 0.0;

        if $b2 <= 0 goto label3;

     label2:
        $z0 = 1;

        goto label4;

     label3:
        $z0 = 0;

     label4:
        return $z0;
    }

    protected boolean isSequence(double, double, double)
    {
        org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl r0;
        double d0, d1, d2;
        byte $b0, $b1;
        boolean $z0;

        r0 := @this: org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        d2 := @parameter2: double;

        $b0 = d0 cmpg d1;

        if $b0 >= 0 goto label1;

        $b1 = d1 cmpg d2;

        if $b1 >= 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    protected void verifyInterval(double, double)
    {
        org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl r0;
        double d0, d1;
        byte $b0;
        java.lang.Object[] $r1;
        org.apache.commons.math.exception.util.LocalizedFormats $r2;
        java.lang.Double $r3, $r4;
        java.lang.IllegalArgumentException $r5;

        r0 := @this: org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        $b0 = d0 cmpl d1;

        if $b0 < 0 goto label1;

        $r2 = <org.apache.commons.math.exception.util.LocalizedFormats: org.apache.commons.math.exception.util.LocalizedFormats ENDPOINTS_NOT_AN_INTERVAL>;

        $r1 = newarray (java.lang.Object)[2];

        $r3 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d0);

        $r1[0] = $r3;

        $r4 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d1);

        $r1[1] = $r4;

        $r5 = staticinvoke <org.apache.commons.math.MathRuntimeException: java.lang.IllegalArgumentException createIllegalArgumentException(org.apache.commons.math.exception.util.Localizable,java.lang.Object[])>($r2, $r1);

        throw $r5;

     label1:
        return;
    }

    protected void verifySequence(double, double, double)
    {
        org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl r0;
        double d0, d1, d2;
        boolean $z0;
        java.lang.Object[] $r1;
        org.apache.commons.math.exception.util.LocalizedFormats $r2;
        java.lang.Double $r3, $r4, $r5;
        java.lang.IllegalArgumentException $r6;

        r0 := @this: org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        d2 := @parameter2: double;

        $z0 = virtualinvoke r0.<org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl: boolean isSequence(double,double,double)>(d0, d1, d2);

        if $z0 != 0 goto label1;

        $r2 = <org.apache.commons.math.exception.util.LocalizedFormats: org.apache.commons.math.exception.util.LocalizedFormats INVALID_INTERVAL_INITIAL_VALUE_PARAMETERS>;

        $r1 = newarray (java.lang.Object)[3];

        $r3 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d0);

        $r1[0] = $r3;

        $r4 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d1);

        $r1[1] = $r4;

        $r5 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d2);

        $r1[2] = $r5;

        $r6 = staticinvoke <org.apache.commons.math.MathRuntimeException: java.lang.IllegalArgumentException createIllegalArgumentException(org.apache.commons.math.exception.util.Localizable,java.lang.Object[])>($r2, $r1);

        throw $r6;

     label1:
        return;
    }

    protected void verifyBracketing(double, double, org.apache.commons.math.analysis.UnivariateRealFunction) throws org.apache.commons.math.FunctionEvaluationException
    {
        org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl r0;
        double d0, d1, $d2, $d3;
        org.apache.commons.math.analysis.UnivariateRealFunction r1;
        boolean $z0;
        java.lang.Object[] $r2;
        org.apache.commons.math.exception.util.LocalizedFormats $r3;
        java.lang.Double $r4, $r5, $r6, $r7;
        java.lang.IllegalArgumentException $r8;

        r0 := @this: org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        r1 := @parameter2: org.apache.commons.math.analysis.UnivariateRealFunction;

        virtualinvoke r0.<org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl: void verifyInterval(double,double)>(d0, d1);

        $z0 = virtualinvoke r0.<org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl: boolean isBracketing(double,double,org.apache.commons.math.analysis.UnivariateRealFunction)>(d0, d1, r1);

        if $z0 != 0 goto label1;

        $r3 = <org.apache.commons.math.exception.util.LocalizedFormats: org.apache.commons.math.exception.util.LocalizedFormats SAME_SIGN_AT_ENDPOINTS>;

        $r2 = newarray (java.lang.Object)[4];

        $r4 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d0);

        $r2[0] = $r4;

        $r5 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d1);

        $r2[1] = $r5;

        $d2 = interfaceinvoke r1.<org.apache.commons.math.analysis.UnivariateRealFunction: double value(double)>(d0);

        $r6 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d2);

        $r2[2] = $r6;

        $d3 = interfaceinvoke r1.<org.apache.commons.math.analysis.UnivariateRealFunction: double value(double)>(d1);

        $r7 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d3);

        $r2[3] = $r7;

        $r8 = staticinvoke <org.apache.commons.math.MathRuntimeException: java.lang.IllegalArgumentException createIllegalArgumentException(org.apache.commons.math.exception.util.Localizable,java.lang.Object[])>($r3, $r2);

        throw $r8;

     label1:
        return;
    }
}
