public final class com.opengamma.analytics.financial.interestrate.payments.provider.CapFloorIborBlackSmileShiftMethod extends java.lang.Object
{
    private static final com.opengamma.analytics.financial.interestrate.payments.provider.CapFloorIborBlackSmileShiftMethod INSTANCE;
    private static final com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackPriceFunction BLACK_FUNCTION;

    private void <init>()
    {
        com.opengamma.analytics.financial.interestrate.payments.provider.CapFloorIborBlackSmileShiftMethod r0;

        r0 := @this: com.opengamma.analytics.financial.interestrate.payments.provider.CapFloorIborBlackSmileShiftMethod;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static com.opengamma.analytics.financial.interestrate.payments.provider.CapFloorIborBlackSmileShiftMethod getInstance()
    {
        com.opengamma.analytics.financial.interestrate.payments.provider.CapFloorIborBlackSmileShiftMethod $r0;

        $r0 = <com.opengamma.analytics.financial.interestrate.payments.provider.CapFloorIborBlackSmileShiftMethod: com.opengamma.analytics.financial.interestrate.payments.provider.CapFloorIborBlackSmileShiftMethod INSTANCE>;

        return $r0;
    }

    public com.opengamma.util.money.MultipleCurrencyAmount presentValue(com.opengamma.analytics.financial.interestrate.payments.derivative.CapFloorIbor, com.opengamma.analytics.financial.provider.description.interestrate.BlackSmileShiftCapProviderInterface)
    {
        com.opengamma.analytics.financial.interestrate.payments.provider.CapFloorIborBlackSmileShiftMethod r0;
        com.opengamma.analytics.financial.interestrate.payments.derivative.CapFloorIbor r1;
        com.opengamma.analytics.financial.provider.description.interestrate.BlackSmileShiftCapProviderInterface r2;
        double d0, d1, d2, d3, d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19;
        com.opengamma.analytics.math.function.Function1D r5;
        com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface $r8, $r10;
        com.opengamma.analytics.financial.instrument.index.IborIndex $r9;
        com.opengamma.util.money.Currency $r11, $r20;
        java.lang.Double $r12, $r19;
        com.opengamma.analytics.financial.model.option.parameters.BlackSmileShiftCapParameters $r13, $r14;
        com.opengamma.analytics.financial.model.option.pricing.analytic.formula.EuropeanVanillaOption $r15;
        boolean $z0;
        com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackFunctionData $r16;
        com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackPriceFunction $r17;
        java.lang.Object $r18;
        com.opengamma.util.money.MultipleCurrencyAmount $r21;

        r0 := @this: com.opengamma.analytics.financial.interestrate.payments.provider.CapFloorIborBlackSmileShiftMethod;

        r1 := @parameter0: com.opengamma.analytics.financial.interestrate.payments.derivative.CapFloorIbor;

        r2 := @parameter1: com.opengamma.analytics.financial.provider.description.interestrate.BlackSmileShiftCapProviderInterface;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "The cap/floor shoud not be null");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, "Black provider");

        $r8 = interfaceinvoke r2.<com.opengamma.analytics.financial.provider.description.interestrate.BlackSmileShiftCapProviderInterface: com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface getMulticurveProvider()>();

        $r9 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.payments.derivative.CapFloorIbor: com.opengamma.analytics.financial.instrument.index.IborIndex getIndex()>();

        $d5 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.payments.derivative.CapFloorIbor: double getFixingPeriodStartTime()>();

        $d6 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.payments.derivative.CapFloorIbor: double getFixingPeriodEndTime()>();

        $d7 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.payments.derivative.CapFloorIbor: double getFixingAccrualFactor()>();

        d0 = interfaceinvoke $r8.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface: double getSimplyCompoundForwardRate(com.opengamma.analytics.financial.instrument.index.IborIndex,double,double,double)>($r9, $d5, $d6, $d7);

        $r10 = interfaceinvoke r2.<com.opengamma.analytics.financial.provider.description.interestrate.BlackSmileShiftCapProviderInterface: com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface getMulticurveProvider()>();

        $r11 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.payments.derivative.CapFloorIbor: com.opengamma.util.money.Currency getCurrency()>();

        $d8 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.payments.derivative.CapFloorIbor: double getPaymentTime()>();

        $r12 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d8);

        d1 = interfaceinvoke $r10.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface: double getDiscountFactor(com.opengamma.util.money.Currency,java.lang.Double)>($r11, $r12);

        $r13 = interfaceinvoke r2.<com.opengamma.analytics.financial.provider.description.interestrate.BlackSmileShiftCapProviderInterface: com.opengamma.analytics.financial.model.option.parameters.BlackSmileShiftCapParameters getBlackShiftParameters()>();

        $d9 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.payments.derivative.CapFloorIbor: double getFixingTime()>();

        $d10 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.payments.derivative.CapFloorIbor: double getStrike()>();

        d2 = virtualinvoke $r13.<com.opengamma.analytics.financial.model.option.parameters.BlackSmileShiftCapParameters: double getVolatility(double,double)>($d9, $d10);

        $r14 = interfaceinvoke r2.<com.opengamma.analytics.financial.provider.description.interestrate.BlackSmileShiftCapProviderInterface: com.opengamma.analytics.financial.model.option.parameters.BlackSmileShiftCapParameters getBlackShiftParameters()>();

        $d11 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.payments.derivative.CapFloorIbor: double getFixingTime()>();

        d3 = virtualinvoke $r14.<com.opengamma.analytics.financial.model.option.parameters.BlackSmileShiftCapParameters: double getShift(double)>($d11);

        $r15 = new com.opengamma.analytics.financial.model.option.pricing.analytic.formula.EuropeanVanillaOption;

        $d12 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.payments.derivative.CapFloorIbor: double getStrike()>();

        $d13 = $d12 + d3;

        $d14 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.payments.derivative.CapFloorIbor: double getFixingTime()>();

        $z0 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.payments.derivative.CapFloorIbor: boolean isCap()>();

        specialinvoke $r15.<com.opengamma.analytics.financial.model.option.pricing.analytic.formula.EuropeanVanillaOption: void <init>(double,double,boolean)>($d13, $d14, $z0);

        $r16 = new com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackFunctionData;

        $d15 = d0 + d3;

        specialinvoke $r16.<com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackFunctionData: void <init>(double,double,double)>($d15, d1, d2);

        $r17 = <com.opengamma.analytics.financial.interestrate.payments.provider.CapFloorIborBlackSmileShiftMethod: com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackPriceFunction BLACK_FUNCTION>;

        r5 = virtualinvoke $r17.<com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackPriceFunction: com.opengamma.analytics.math.function.Function1D getPriceFunction(com.opengamma.analytics.financial.model.option.pricing.analytic.formula.EuropeanVanillaOption)>($r15);

        $r18 = virtualinvoke r5.<com.opengamma.analytics.math.function.Function1D: java.lang.Object evaluate(java.lang.Object)>($r16);

        $r19 = (java.lang.Double) $r18;

        $d16 = virtualinvoke $r19.<java.lang.Double: double doubleValue()>();

        $d17 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.payments.derivative.CapFloorIbor: double getNotional()>();

        $d18 = $d16 * $d17;

        $d19 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.payments.derivative.CapFloorIbor: double getPaymentYearFraction()>();

        d4 = $d18 * $d19;

        $r20 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.payments.derivative.CapFloorIbor: com.opengamma.util.money.Currency getCurrency()>();

        $r21 = staticinvoke <com.opengamma.util.money.MultipleCurrencyAmount: com.opengamma.util.money.MultipleCurrencyAmount of(com.opengamma.util.money.Currency,double)>($r20, d4);

        return $r21;
    }

    public com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyMulticurveSensitivity presentValueCurveSensitivity(com.opengamma.analytics.financial.interestrate.payments.derivative.CapFloorIbor, com.opengamma.analytics.financial.provider.description.interestrate.BlackSmileShiftCapProviderInterface)
    {
        com.opengamma.analytics.financial.interestrate.payments.provider.CapFloorIborBlackSmileShiftMethod r0;
        com.opengamma.analytics.financial.interestrate.payments.derivative.CapFloorIbor r1;
        com.opengamma.analytics.financial.provider.description.interestrate.BlackSmileShiftCapProviderInterface r2;
        com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface r3;
        double d0, d1, d2, d3, d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21, $d22, $d23, $d24, $d25, $d26, $d27;
        com.opengamma.analytics.financial.provider.sensitivity.multicurve.MulticurveSensitivity r4, $r29, r32, r33, r34, r35;
        double[] r7;
        com.opengamma.analytics.financial.instrument.index.IborIndex $r12, $r15;
        com.opengamma.util.money.Currency $r13, $r26, $r30;
        java.lang.Double $r14;
        java.lang.String $r16, $r27;
        com.opengamma.analytics.financial.provider.sensitivity.multicurve.SimplyCompoundedForwardSensitivity $r17;
        com.opengamma.analytics.financial.model.option.parameters.BlackSmileShiftCapParameters $r18, $r19;
        com.opengamma.analytics.financial.model.option.pricing.analytic.formula.EuropeanVanillaOption $r20;
        boolean $z0;
        com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackFunctionData $r21;
        com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackPriceFunction $r22;
        java.util.ArrayList $r23;
        com.opengamma.util.tuple.DoublesPair $r24;
        java.util.HashMap $r25;
        com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyMulticurveSensitivity $r31;

        r0 := @this: com.opengamma.analytics.financial.interestrate.payments.provider.CapFloorIborBlackSmileShiftMethod;

        r1 := @parameter0: com.opengamma.analytics.financial.interestrate.payments.derivative.CapFloorIbor;

        r2 := @parameter1: com.opengamma.analytics.financial.provider.description.interestrate.BlackSmileShiftCapProviderInterface;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "The cap/floor shoud not be null");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, "Black provider");

        r3 = interfaceinvoke r2.<com.opengamma.analytics.financial.provider.description.interestrate.BlackSmileShiftCapProviderInterface: com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface getMulticurveProvider()>();

        $r12 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.payments.derivative.CapFloorIbor: com.opengamma.analytics.financial.instrument.index.IborIndex getIndex()>();

        $d5 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.payments.derivative.CapFloorIbor: double getFixingPeriodStartTime()>();

        $d6 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.payments.derivative.CapFloorIbor: double getFixingPeriodEndTime()>();

        $d7 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.payments.derivative.CapFloorIbor: double getFixingAccrualFactor()>();

        d0 = interfaceinvoke r3.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface: double getSimplyCompoundForwardRate(com.opengamma.analytics.financial.instrument.index.IborIndex,double,double,double)>($r12, $d5, $d6, $d7);

        $r13 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.payments.derivative.CapFloorIbor: com.opengamma.util.money.Currency getCurrency()>();

        $d8 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.payments.derivative.CapFloorIbor: double getPaymentTime()>();

        $r14 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d8);

        d1 = interfaceinvoke r3.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface: double getDiscountFactor(com.opengamma.util.money.Currency,java.lang.Double)>($r13, $r14);

        $r15 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.payments.derivative.CapFloorIbor: com.opengamma.analytics.financial.instrument.index.IborIndex getIndex()>();

        $r16 = interfaceinvoke r3.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface: java.lang.String getName(com.opengamma.analytics.financial.instrument.index.IborIndex)>($r15);

        $r17 = new com.opengamma.analytics.financial.provider.sensitivity.multicurve.SimplyCompoundedForwardSensitivity;

        $d9 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.payments.derivative.CapFloorIbor: double getFixingPeriodStartTime()>();

        $d10 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.payments.derivative.CapFloorIbor: double getFixingPeriodEndTime()>();

        $d11 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.payments.derivative.CapFloorIbor: double getFixingAccrualFactor()>();

        specialinvoke $r17.<com.opengamma.analytics.financial.provider.sensitivity.multicurve.SimplyCompoundedForwardSensitivity: void <init>(double,double,double,double)>($d9, $d10, $d11, 1.0);

        r4 = staticinvoke <com.opengamma.analytics.financial.provider.sensitivity.multicurve.MulticurveSensitivity: com.opengamma.analytics.financial.provider.sensitivity.multicurve.MulticurveSensitivity ofForward(java.lang.String,com.opengamma.analytics.financial.provider.sensitivity.multicurve.ForwardSensitivity)>($r16, $r17);

        $d12 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.payments.derivative.CapFloorIbor: double getPaymentTime()>();

        $d13 = neg $d12;

        d2 = $d13 * d1;

        $r18 = interfaceinvoke r2.<com.opengamma.analytics.financial.provider.description.interestrate.BlackSmileShiftCapProviderInterface: com.opengamma.analytics.financial.model.option.parameters.BlackSmileShiftCapParameters getBlackShiftParameters()>();

        $d14 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.payments.derivative.CapFloorIbor: double getFixingTime()>();

        $d15 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.payments.derivative.CapFloorIbor: double getStrike()>();

        d3 = virtualinvoke $r18.<com.opengamma.analytics.financial.model.option.parameters.BlackSmileShiftCapParameters: double getVolatility(double,double)>($d14, $d15);

        $r19 = interfaceinvoke r2.<com.opengamma.analytics.financial.provider.description.interestrate.BlackSmileShiftCapProviderInterface: com.opengamma.analytics.financial.model.option.parameters.BlackSmileShiftCapParameters getBlackShiftParameters()>();

        $d16 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.payments.derivative.CapFloorIbor: double getFixingTime()>();

        d4 = virtualinvoke $r19.<com.opengamma.analytics.financial.model.option.parameters.BlackSmileShiftCapParameters: double getShift(double)>($d16);

        $r20 = new com.opengamma.analytics.financial.model.option.pricing.analytic.formula.EuropeanVanillaOption;

        $d17 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.payments.derivative.CapFloorIbor: double getStrike()>();

        $d18 = $d17 + d4;

        $d19 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.payments.derivative.CapFloorIbor: double getFixingTime()>();

        $z0 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.payments.derivative.CapFloorIbor: boolean isCap()>();

        specialinvoke $r20.<com.opengamma.analytics.financial.model.option.pricing.analytic.formula.EuropeanVanillaOption: void <init>(double,double,boolean)>($d18, $d19, $z0);

        $r21 = new com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackFunctionData;

        $d20 = d0 + d4;

        specialinvoke $r21.<com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackFunctionData: void <init>(double,double,double)>($d20, 1.0, d3);

        $r22 = <com.opengamma.analytics.financial.interestrate.payments.provider.CapFloorIborBlackSmileShiftMethod: com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackPriceFunction BLACK_FUNCTION>;

        r7 = virtualinvoke $r22.<com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackPriceFunction: double[] getPriceAdjoint(com.opengamma.analytics.financial.model.option.pricing.analytic.formula.EuropeanVanillaOption,com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackFunctionData)>($r20, $r21);

        $r23 = new java.util.ArrayList;

        specialinvoke $r23.<java.util.ArrayList: void <init>()>();

        $d21 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.payments.derivative.CapFloorIbor: double getPaymentTime()>();

        $r24 = staticinvoke <com.opengamma.util.tuple.DoublesPair: com.opengamma.util.tuple.DoublesPair of(double,double)>($d21, d2);

        interfaceinvoke $r23.<java.util.List: boolean add(java.lang.Object)>($r24);

        $r25 = new java.util.HashMap;

        specialinvoke $r25.<java.util.HashMap: void <init>()>();

        $r26 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.payments.derivative.CapFloorIbor: com.opengamma.util.money.Currency getCurrency()>();

        $r27 = interfaceinvoke r3.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface: java.lang.String getName(com.opengamma.util.money.Currency)>($r26);

        interfaceinvoke $r25.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r27, $r23);

        r32 = staticinvoke <com.opengamma.analytics.financial.provider.sensitivity.multicurve.MulticurveSensitivity: com.opengamma.analytics.financial.provider.sensitivity.multicurve.MulticurveSensitivity ofYieldDiscounting(java.util.Map)>($r25);

        $d22 = r7[0];

        r33 = virtualinvoke r32.<com.opengamma.analytics.financial.provider.sensitivity.multicurve.MulticurveSensitivity: com.opengamma.analytics.financial.provider.sensitivity.multicurve.MulticurveSensitivity multipliedBy(double)>($d22);

        $d23 = r7[1];

        $d24 = d1 * $d23;

        $r29 = virtualinvoke r4.<com.opengamma.analytics.financial.provider.sensitivity.multicurve.MulticurveSensitivity: com.opengamma.analytics.financial.provider.sensitivity.multicurve.MulticurveSensitivity multipliedBy(double)>($d24);

        r34 = virtualinvoke r33.<com.opengamma.analytics.financial.provider.sensitivity.multicurve.MulticurveSensitivity: com.opengamma.analytics.financial.provider.sensitivity.multicurve.MulticurveSensitivity plus(com.opengamma.analytics.financial.provider.sensitivity.multicurve.MulticurveSensitivity)>($r29);

        $d25 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.payments.derivative.CapFloorIbor: double getNotional()>();

        $d26 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.payments.derivative.CapFloorIbor: double getPaymentYearFraction()>();

        $d27 = $d25 * $d26;

        r35 = virtualinvoke r34.<com.opengamma.analytics.financial.provider.sensitivity.multicurve.MulticurveSensitivity: com.opengamma.analytics.financial.provider.sensitivity.multicurve.MulticurveSensitivity multipliedBy(double)>($d27);

        $r30 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.payments.derivative.CapFloorIbor: com.opengamma.util.money.Currency getCurrency()>();

        $r31 = staticinvoke <com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyMulticurveSensitivity: com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyMulticurveSensitivity of(com.opengamma.util.money.Currency,com.opengamma.analytics.financial.provider.sensitivity.multicurve.MulticurveSensitivity)>($r30, r35);

        return $r31;
    }

    static void <clinit>()
    {
        com.opengamma.analytics.financial.interestrate.payments.provider.CapFloorIborBlackSmileShiftMethod $r0;
        com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackPriceFunction $r1;

        $r0 = new com.opengamma.analytics.financial.interestrate.payments.provider.CapFloorIborBlackSmileShiftMethod;

        specialinvoke $r0.<com.opengamma.analytics.financial.interestrate.payments.provider.CapFloorIborBlackSmileShiftMethod: void <init>()>();

        <com.opengamma.analytics.financial.interestrate.payments.provider.CapFloorIborBlackSmileShiftMethod: com.opengamma.analytics.financial.interestrate.payments.provider.CapFloorIborBlackSmileShiftMethod INSTANCE> = $r0;

        $r1 = new com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackPriceFunction;

        specialinvoke $r1.<com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackPriceFunction: void <init>()>();

        <com.opengamma.analytics.financial.interestrate.payments.provider.CapFloorIborBlackSmileShiftMethod: com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackPriceFunction BLACK_FUNCTION> = $r1;

        return;
    }
}
