public class org.apache.commons.math3.analysis.interpolation.BicubicInterpolator extends java.lang.Object implements org.apache.commons.math3.analysis.interpolation.BivariateGridInterpolator
{

    public void <init>()
    {
        org.apache.commons.math3.analysis.interpolation.BicubicInterpolator r0;

        r0 := @this: org.apache.commons.math3.analysis.interpolation.BicubicInterpolator;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public org.apache.commons.math3.analysis.interpolation.BicubicInterpolatingFunction interpolate(double[], double[], double[][]) throws org.apache.commons.math3.exception.NoDataException, org.apache.commons.math3.exception.DimensionMismatchException, org.apache.commons.math3.exception.NonMonotonicSequenceException, org.apache.commons.math3.exception.NumberIsTooSmallException
    {
        org.apache.commons.math3.analysis.interpolation.BicubicInterpolator r0;
        double[] r1, r2, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18;
        double[][] r3, r4, r5, r6;
        int i0, i1, i2, i3, i4, i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, i15, i16;
        double d0, d1, d2, d3, d4, d5, d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21, $d22;
        org.apache.commons.math3.analysis.interpolation.BicubicInterpolator$1 $r7;
        org.apache.commons.math3.exception.DimensionMismatchException $r19;
        org.apache.commons.math3.exception.NoDataException $r20;

        r0 := @this: org.apache.commons.math3.analysis.interpolation.BicubicInterpolator;

        r1 := @parameter0: double[];

        r2 := @parameter1: double[];

        r3 := @parameter2: double[][];

        $i6 = lengthof r1;

        if $i6 == 0 goto label1;

        $i7 = lengthof r2;

        if $i7 == 0 goto label1;

        $i8 = lengthof r3;

        if $i8 != 0 goto label2;

     label1:
        $r20 = new org.apache.commons.math3.exception.NoDataException;

        specialinvoke $r20.<org.apache.commons.math3.exception.NoDataException: void <init>()>();

        throw $r20;

     label2:
        $i10 = lengthof r1;

        $i9 = lengthof r3;

        if $i10 == $i9 goto label3;

        $r19 = new org.apache.commons.math3.exception.DimensionMismatchException;

        $i14 = lengthof r1;

        $i13 = lengthof r3;

        specialinvoke $r19.<org.apache.commons.math3.exception.DimensionMismatchException: void <init>(int,int)>($i14, $i13);

        throw $r19;

     label3:
        staticinvoke <org.apache.commons.math3.util.MathArrays: void checkOrder(double[])>(r1);

        staticinvoke <org.apache.commons.math3.util.MathArrays: void checkOrder(double[])>(r2);

        i0 = lengthof r1;

        i1 = lengthof r2;

        r4 = newmultiarray (double)[i0][i1];

        r5 = newmultiarray (double)[i0][i1];

        r6 = newmultiarray (double)[i0][i1];

        i15 = 1;

     label4:
        $i11 = i0 - 1;

        if i15 >= $i11 goto label7;

        i2 = i15 + 1;

        i3 = i15 - 1;

        d0 = r1[i2];

        d1 = r1[i3];

        d2 = d0 - d1;

        i16 = 1;

     label5:
        $i12 = i1 - 1;

        if i16 >= $i12 goto label6;

        i4 = i16 + 1;

        i5 = i16 - 1;

        d3 = r2[i4];

        d4 = r2[i5];

        d5 = d3 - d4;

        $r10 = r4[i15];

        $r8 = r3[i2];

        $d8 = $r8[i16];

        $r9 = r3[i3];

        $d7 = $r9[i16];

        $d9 = $d8 - $d7;

        $d10 = $d9 / d2;

        $r10[i16] = $d10;

        $r13 = r5[i15];

        $r11 = r3[i15];

        $d12 = $r11[i4];

        $r12 = r3[i15];

        $d11 = $r12[i5];

        $d13 = $d12 - $d11;

        $d14 = $d13 / d5;

        $r13[i16] = $d14;

        d6 = d2 * d5;

        $r18 = r6[i15];

        $r14 = r3[i2];

        $d16 = $r14[i4];

        $r15 = r3[i2];

        $d15 = $r15[i5];

        $d18 = $d16 - $d15;

        $r16 = r3[i3];

        $d17 = $r16[i4];

        $d20 = $d18 - $d17;

        $r17 = r3[i3];

        $d19 = $r17[i5];

        $d21 = $d20 + $d19;

        $d22 = $d21 / d6;

        $r18[i16] = $d22;

        i16 = i16 + 1;

        goto label5;

     label6:
        i15 = i15 + 1;

        goto label4;

     label7:
        $r7 = new org.apache.commons.math3.analysis.interpolation.BicubicInterpolator$1;

        specialinvoke $r7.<org.apache.commons.math3.analysis.interpolation.BicubicInterpolator$1: void <init>(org.apache.commons.math3.analysis.interpolation.BicubicInterpolator,double[],double[],double[][],double[][],double[][],double[][],double[],double[])>(r0, r1, r2, r3, r4, r5, r6, r1, r2);

        return $r7;
    }

    public volatile org.apache.commons.math3.analysis.BivariateFunction interpolate(double[], double[], double[][]) throws org.apache.commons.math3.exception.NoDataException, org.apache.commons.math3.exception.DimensionMismatchException, org.apache.commons.math3.exception.NonMonotonicSequenceException, org.apache.commons.math3.exception.NumberIsTooSmallException
    {
        org.apache.commons.math3.analysis.interpolation.BicubicInterpolator r0;
        double[] r1, r2;
        double[][] r3;
        org.apache.commons.math3.analysis.interpolation.BicubicInterpolatingFunction $r4;

        r0 := @this: org.apache.commons.math3.analysis.interpolation.BicubicInterpolator;

        r1 := @parameter0: double[];

        r2 := @parameter1: double[];

        r3 := @parameter2: double[][];

        $r4 = virtualinvoke r0.<org.apache.commons.math3.analysis.interpolation.BicubicInterpolator: org.apache.commons.math3.analysis.interpolation.BicubicInterpolatingFunction interpolate(double[],double[],double[][])>(r1, r2, r3);

        return $r4;
    }
}
