class com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapBackwardsPurePDE$3 extends com.opengamma.analytics.math.function.Function1D
{
    final double val$f;
    final double val$d;
    final double val$beta;
    final double val$alpha;
    final boolean val$correctForDividends;
    final com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapBackwardsPurePDE this$0;

    void <init>(com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapBackwardsPurePDE, double, double, double, double, boolean)
    {
        com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapBackwardsPurePDE$3 r0;
        com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapBackwardsPurePDE r1;
        double d0, d1, d2, d3;
        boolean z0;

        r0 := @this: com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapBackwardsPurePDE$3;

        r1 := @parameter0: com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapBackwardsPurePDE;

        d0 := @parameter1: double;

        d1 := @parameter2: double;

        d2 := @parameter3: double;

        d3 := @parameter4: double;

        z0 := @parameter5: boolean;

        r0.<com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapBackwardsPurePDE$3: com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapBackwardsPurePDE this$0> = r1;

        r0.<com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapBackwardsPurePDE$3: double val$f> = d0;

        r0.<com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapBackwardsPurePDE$3: double val$d> = d1;

        r0.<com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapBackwardsPurePDE$3: double val$beta> = d2;

        r0.<com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapBackwardsPurePDE$3: double val$alpha> = d3;

        r0.<com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapBackwardsPurePDE$3: boolean val$correctForDividends> = z0;

        specialinvoke r0.<com.opengamma.analytics.math.function.Function1D: void <init>()>();

        return;
    }

    public java.lang.Double evaluate(java.lang.Double)
    {
        com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapBackwardsPurePDE$3 r0;
        java.lang.Double r1, $r2;
        double d0, d1, d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17;
        boolean $z0;

        r0 := @this: com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapBackwardsPurePDE$3;

        r1 := @parameter0: java.lang.Double;

        $d3 = virtualinvoke r1.<java.lang.Double: double doubleValue()>();

        d0 = staticinvoke <java.lang.Math: double exp(double)>($d3);

        $d5 = r0.<com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapBackwardsPurePDE$3: double val$f>;

        $d4 = r0.<com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapBackwardsPurePDE$3: double val$d>;

        $d6 = $d5 - $d4;

        $d8 = $d6 * d0;

        $d7 = r0.<com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapBackwardsPurePDE$3: double val$d>;

        d1 = $d8 + $d7;

        $d9 = r0.<com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapBackwardsPurePDE$3: double val$beta>;

        $d10 = 1.0 - $d9;

        $d13 = d1 * $d10;

        $d11 = r0.<com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapBackwardsPurePDE$3: double val$alpha>;

        $d12 = d1 + $d11;

        $d14 = $d13 / $d12;

        d2 = staticinvoke <java.lang.Math: double log(double)>($d14);

        $z0 = r0.<com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapBackwardsPurePDE$3: boolean val$correctForDividends>;

        if $z0 == 0 goto label1;

        $d17 = d2;

        goto label2;

     label1:
        $d15 = 0.5 * d2;

        $d16 = $d15 * d2;

        $d17 = d2 + $d16;

     label2:
        $r2 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d17);

        return $r2;
    }

    public volatile java.lang.Object evaluate(java.lang.Object)
    {
        com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapBackwardsPurePDE$3 r0;
        java.lang.Object r1;
        java.lang.Double $r2, $r3;

        r0 := @this: com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapBackwardsPurePDE$3;

        r1 := @parameter0: java.lang.Object;

        $r2 = (java.lang.Double) r1;

        $r3 = virtualinvoke r0.<com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapBackwardsPurePDE$3: java.lang.Double evaluate(java.lang.Double)>($r2);

        return $r3;
    }
}
