public abstract class org.apache.commons.math3.optim.BaseMultiStartMultivariateOptimizer extends org.apache.commons.math3.optim.BaseMultivariateOptimizer
{
    private final org.apache.commons.math3.optim.BaseMultivariateOptimizer optimizer;
    private int totalEvaluations;
    private int starts;
    private org.apache.commons.math3.random.RandomVectorGenerator generator;
    private org.apache.commons.math3.optim.OptimizationData[] optimData;
    private int maxEvalIndex;
    private int initialGuessIndex;

    public void <init>(org.apache.commons.math3.optim.BaseMultivariateOptimizer, int, org.apache.commons.math3.random.RandomVectorGenerator)
    {
        org.apache.commons.math3.optim.BaseMultiStartMultivariateOptimizer r0;
        org.apache.commons.math3.optim.BaseMultivariateOptimizer r1;
        int i0;
        org.apache.commons.math3.random.RandomVectorGenerator r2;
        org.apache.commons.math3.optim.ConvergenceChecker $r3;
        org.apache.commons.math3.exception.NotStrictlyPositiveException $r4;
        java.lang.Integer $r5;

        r0 := @this: org.apache.commons.math3.optim.BaseMultiStartMultivariateOptimizer;

        r1 := @parameter0: org.apache.commons.math3.optim.BaseMultivariateOptimizer;

        i0 := @parameter1: int;

        r2 := @parameter2: org.apache.commons.math3.random.RandomVectorGenerator;

        $r3 = virtualinvoke r1.<org.apache.commons.math3.optim.BaseMultivariateOptimizer: org.apache.commons.math3.optim.ConvergenceChecker getConvergenceChecker()>();

        specialinvoke r0.<org.apache.commons.math3.optim.BaseMultivariateOptimizer: void <init>(org.apache.commons.math3.optim.ConvergenceChecker)>($r3);

        r0.<org.apache.commons.math3.optim.BaseMultiStartMultivariateOptimizer: int maxEvalIndex> = -1;

        r0.<org.apache.commons.math3.optim.BaseMultiStartMultivariateOptimizer: int initialGuessIndex> = -1;

        if i0 >= 1 goto label1;

        $r4 = new org.apache.commons.math3.exception.NotStrictlyPositiveException;

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        specialinvoke $r4.<org.apache.commons.math3.exception.NotStrictlyPositiveException: void <init>(java.lang.Number)>($r5);

        throw $r4;

     label1:
        r0.<org.apache.commons.math3.optim.BaseMultiStartMultivariateOptimizer: org.apache.commons.math3.optim.BaseMultivariateOptimizer optimizer> = r1;

        r0.<org.apache.commons.math3.optim.BaseMultiStartMultivariateOptimizer: int starts> = i0;

        r0.<org.apache.commons.math3.optim.BaseMultiStartMultivariateOptimizer: org.apache.commons.math3.random.RandomVectorGenerator generator> = r2;

        return;
    }

    public int getEvaluations()
    {
        org.apache.commons.math3.optim.BaseMultiStartMultivariateOptimizer r0;
        int $i0;

        r0 := @this: org.apache.commons.math3.optim.BaseMultiStartMultivariateOptimizer;

        $i0 = r0.<org.apache.commons.math3.optim.BaseMultiStartMultivariateOptimizer: int totalEvaluations>;

        return $i0;
    }

    public abstract java.lang.Object[] getOptima();

    public transient java.lang.Object optimize(org.apache.commons.math3.optim.OptimizationData[])
    {
        org.apache.commons.math3.optim.BaseMultiStartMultivariateOptimizer r0;
        org.apache.commons.math3.optim.OptimizationData[] r1;
        java.lang.Object $r2;

        r0 := @this: org.apache.commons.math3.optim.BaseMultiStartMultivariateOptimizer;

        r1 := @parameter0: org.apache.commons.math3.optim.OptimizationData[];

        r0.<org.apache.commons.math3.optim.BaseMultiStartMultivariateOptimizer: org.apache.commons.math3.optim.OptimizationData[] optimData> = r1;

        $r2 = specialinvoke r0.<org.apache.commons.math3.optim.BaseMultivariateOptimizer: java.lang.Object optimize(org.apache.commons.math3.optim.OptimizationData[])>(r1);

        return $r2;
    }

    protected java.lang.Object doOptimize()
    {
        org.apache.commons.math3.optim.BaseMultiStartMultivariateOptimizer r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i18, i19, i20, i21, i22;
        double[] r1, r2, r3, r27;
        org.apache.commons.math3.optim.OptimizationData[] $r4, $r7, $r9, $r10, $r18, $r20, $r22, $r23;
        java.lang.Object $r5, r28;
        org.apache.commons.math3.optim.MaxEval $r6;
        org.apache.commons.math3.optim.InitialGuess $r8;
        org.apache.commons.math3.optim.BaseMultivariateOptimizer $r11, $r12;
        org.apache.commons.math3.random.RandomVectorGenerator $r13;
        double $d0, $d1, $d2, $d3;
        byte $b16, $b17;
        org.apache.commons.math3.exception.TooManyEvaluationsException $r14;
        java.lang.Integer $r15;
        org.apache.commons.math3.exception.MathIllegalStateException $r16, $r17;
        org.apache.commons.math3.optim.OptimizationData $r19, $r21;
        boolean $z0, $z1;
        java.lang.RuntimeException $r24, r26;
        java.lang.Object[] r30;

        r0 := @this: org.apache.commons.math3.optim.BaseMultiStartMultivariateOptimizer;

        i19 = 0;

     label01:
        $r4 = r0.<org.apache.commons.math3.optim.BaseMultiStartMultivariateOptimizer: org.apache.commons.math3.optim.OptimizationData[] optimData>;

        $i1 = lengthof $r4;

        if i19 >= $i1 goto label04;

        $r18 = r0.<org.apache.commons.math3.optim.BaseMultiStartMultivariateOptimizer: org.apache.commons.math3.optim.OptimizationData[] optimData>;

        $r19 = $r18[i19];

        $z0 = $r19 instanceof org.apache.commons.math3.optim.MaxEval;

        if $z0 == 0 goto label02;

        $r23 = r0.<org.apache.commons.math3.optim.BaseMultiStartMultivariateOptimizer: org.apache.commons.math3.optim.OptimizationData[] optimData>;

        $r23[i19] = null;

        r0.<org.apache.commons.math3.optim.BaseMultiStartMultivariateOptimizer: int maxEvalIndex> = i19;

     label02:
        $r20 = r0.<org.apache.commons.math3.optim.BaseMultiStartMultivariateOptimizer: org.apache.commons.math3.optim.OptimizationData[] optimData>;

        $r21 = $r20[i19];

        $z1 = $r21 instanceof org.apache.commons.math3.optim.InitialGuess;

        if $z1 == 0 goto label03;

        $r22 = r0.<org.apache.commons.math3.optim.BaseMultiStartMultivariateOptimizer: org.apache.commons.math3.optim.OptimizationData[] optimData>;

        $r22[i19] = null;

        r0.<org.apache.commons.math3.optim.BaseMultiStartMultivariateOptimizer: int initialGuessIndex> = i19;

     label03:
        i19 = i19 + 1;

        goto label01;

     label04:
        $i2 = r0.<org.apache.commons.math3.optim.BaseMultiStartMultivariateOptimizer: int maxEvalIndex>;

        if $i2 != -1 goto label05;

        $r17 = new org.apache.commons.math3.exception.MathIllegalStateException;

        specialinvoke $r17.<org.apache.commons.math3.exception.MathIllegalStateException: void <init>()>();

        throw $r17;

     label05:
        $i3 = r0.<org.apache.commons.math3.optim.BaseMultiStartMultivariateOptimizer: int initialGuessIndex>;

        if $i3 != -1 goto label06;

        $r16 = new org.apache.commons.math3.exception.MathIllegalStateException;

        specialinvoke $r16.<org.apache.commons.math3.exception.MathIllegalStateException: void <init>()>();

        throw $r16;

     label06:
        r26 = null;

        r0.<org.apache.commons.math3.optim.BaseMultiStartMultivariateOptimizer: int totalEvaluations> = 0;

        virtualinvoke r0.<org.apache.commons.math3.optim.BaseMultiStartMultivariateOptimizer: void clear()>();

        i0 = virtualinvoke r0.<org.apache.commons.math3.optim.BaseMultiStartMultivariateOptimizer: int getMaxEvaluations()>();

        r1 = virtualinvoke r0.<org.apache.commons.math3.optim.BaseMultiStartMultivariateOptimizer: double[] getLowerBound()>();

        r2 = virtualinvoke r0.<org.apache.commons.math3.optim.BaseMultiStartMultivariateOptimizer: double[] getUpperBound()>();

        r3 = virtualinvoke r0.<org.apache.commons.math3.optim.BaseMultiStartMultivariateOptimizer: double[] getStartPoint()>();

        i20 = 0;

     label07:
        $i4 = r0.<org.apache.commons.math3.optim.BaseMultiStartMultivariateOptimizer: int starts>;

        if i20 >= $i4 goto label21;

     label08:
        $r7 = r0.<org.apache.commons.math3.optim.BaseMultiStartMultivariateOptimizer: org.apache.commons.math3.optim.OptimizationData[] optimData>;

        $i8 = r0.<org.apache.commons.math3.optim.BaseMultiStartMultivariateOptimizer: int maxEvalIndex>;

        $r6 = new org.apache.commons.math3.optim.MaxEval;

        $i6 = r0.<org.apache.commons.math3.optim.BaseMultiStartMultivariateOptimizer: int totalEvaluations>;

        $i7 = i0 - $i6;

        specialinvoke $r6.<org.apache.commons.math3.optim.MaxEval: void <init>(int)>($i7);

        $r7[$i8] = $r6;

        r27 = null;

        if i20 != 0 goto label09;

        r27 = r3;

        goto label17;

     label09:
        i21 = 0;

     label10:
        if r27 != null goto label17;

        $i13 = i21;

        i21 = i21 + 1;

        $i14 = virtualinvoke r0.<org.apache.commons.math3.optim.BaseMultiStartMultivariateOptimizer: int getMaxEvaluations()>();

        if $i13 < $i14 goto label11;

        $r14 = new org.apache.commons.math3.exception.TooManyEvaluationsException;

        $i18 = virtualinvoke r0.<org.apache.commons.math3.optim.BaseMultiStartMultivariateOptimizer: int getMaxEvaluations()>();

        $r15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i18);

        specialinvoke $r14.<org.apache.commons.math3.exception.TooManyEvaluationsException: void <init>(java.lang.Number)>($r15);

        throw $r14;

     label11:
        $r13 = r0.<org.apache.commons.math3.optim.BaseMultiStartMultivariateOptimizer: org.apache.commons.math3.random.RandomVectorGenerator generator>;

        r27 = interfaceinvoke $r13.<org.apache.commons.math3.random.RandomVectorGenerator: double[] nextVector()>();

        i22 = 0;

     label12:
        if r27 == null goto label16;

        $i15 = lengthof r27;

        if i22 >= $i15 goto label16;

        if r1 == null goto label13;

        $d3 = r27[i22];

        $d2 = r1[i22];

        $b17 = $d3 cmpg $d2;

        if $b17 < 0 goto label14;

     label13:
        if r2 == null goto label15;

        $d1 = r27[i22];

        $d0 = r2[i22];

        $b16 = $d1 cmpl $d0;

        if $b16 <= 0 goto label15;

     label14:
        r27 = null;

     label15:
        i22 = i22 + 1;

        goto label12;

     label16:
        goto label10;

     label17:
        $r9 = r0.<org.apache.commons.math3.optim.BaseMultiStartMultivariateOptimizer: org.apache.commons.math3.optim.OptimizationData[] optimData>;

        $i9 = r0.<org.apache.commons.math3.optim.BaseMultiStartMultivariateOptimizer: int initialGuessIndex>;

        $r8 = new org.apache.commons.math3.optim.InitialGuess;

        specialinvoke $r8.<org.apache.commons.math3.optim.InitialGuess: void <init>(double[])>(r27);

        $r9[$i9] = $r8;

        $r11 = r0.<org.apache.commons.math3.optim.BaseMultiStartMultivariateOptimizer: org.apache.commons.math3.optim.BaseMultivariateOptimizer optimizer>;

        $r10 = r0.<org.apache.commons.math3.optim.BaseMultiStartMultivariateOptimizer: org.apache.commons.math3.optim.OptimizationData[] optimData>;

        r28 = virtualinvoke $r11.<org.apache.commons.math3.optim.BaseMultivariateOptimizer: java.lang.Object optimize(org.apache.commons.math3.optim.OptimizationData[])>($r10);

        virtualinvoke r0.<org.apache.commons.math3.optim.BaseMultiStartMultivariateOptimizer: void store(java.lang.Object)>(r28);

     label18:
        goto label20;

     label19:
        $r24 := @caughtexception;

        r26 = $r24;

     label20:
        $i10 = r0.<org.apache.commons.math3.optim.BaseMultiStartMultivariateOptimizer: int totalEvaluations>;

        $r12 = r0.<org.apache.commons.math3.optim.BaseMultiStartMultivariateOptimizer: org.apache.commons.math3.optim.BaseMultivariateOptimizer optimizer>;

        $i11 = virtualinvoke $r12.<org.apache.commons.math3.optim.BaseMultivariateOptimizer: int getEvaluations()>();

        $i12 = $i10 + $i11;

        r0.<org.apache.commons.math3.optim.BaseMultiStartMultivariateOptimizer: int totalEvaluations> = $i12;

        i20 = i20 + 1;

        goto label07;

     label21:
        r30 = virtualinvoke r0.<org.apache.commons.math3.optim.BaseMultiStartMultivariateOptimizer: java.lang.Object[] getOptima()>();

        $i5 = lengthof r30;

        if $i5 != 0 goto label22;

        throw r26;

     label22:
        $r5 = r30[0];

        return $r5;

        catch java.lang.RuntimeException from label08 to label18 with label19;
    }

    protected abstract void store(java.lang.Object);

    protected abstract void clear();
}
