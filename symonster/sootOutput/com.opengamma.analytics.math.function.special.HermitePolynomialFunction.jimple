public class com.opengamma.analytics.math.function.special.HermitePolynomialFunction extends com.opengamma.analytics.math.function.special.OrthogonalPolynomialFunctionGenerator
{
    private static final com.opengamma.analytics.math.function.DoubleFunction1D TWO_X;

    public void <init>()
    {
        com.opengamma.analytics.math.function.special.HermitePolynomialFunction r0;

        r0 := @this: com.opengamma.analytics.math.function.special.HermitePolynomialFunction;

        specialinvoke r0.<com.opengamma.analytics.math.function.special.OrthogonalPolynomialFunctionGenerator: void <init>()>();

        return;
    }

    public com.opengamma.analytics.math.function.DoubleFunction1D[] getPolynomials(int)
    {
        com.opengamma.analytics.math.function.special.HermitePolynomialFunction r0;
        int i0, $i1, $i2, $i3, $i4, $i5, i6;
        com.opengamma.analytics.math.function.DoubleFunction1D[] r1;
        com.opengamma.analytics.math.function.DoubleFunction1D $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10;
        double $d0;
        boolean $z0;

        r0 := @this: com.opengamma.analytics.math.function.special.HermitePolynomialFunction;

        i0 := @parameter0: int;

        if i0 < 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        staticinvoke <org.apache.commons.lang.Validate: void isTrue(boolean)>($z0);

        $i1 = i0 + 1;

        r1 = newarray (com.opengamma.analytics.math.function.DoubleFunction1D)[$i1];

        i6 = 0;

     label3:
        if i6 > i0 goto label7;

        if i6 != 0 goto label4;

        $r10 = virtualinvoke r0.<com.opengamma.analytics.math.function.special.HermitePolynomialFunction: com.opengamma.analytics.math.function.DoubleFunction1D getOne()>();

        r1[i6] = $r10;

        goto label6;

     label4:
        if i6 != 1 goto label5;

        $r9 = <com.opengamma.analytics.math.function.special.HermitePolynomialFunction: com.opengamma.analytics.math.function.DoubleFunction1D TWO_X>;

        r1[i6] = $r9;

        goto label6;

     label5:
        $i2 = i6 - 1;

        $r2 = r1[$i2];

        $r3 = virtualinvoke $r2.<com.opengamma.analytics.math.function.DoubleFunction1D: com.opengamma.analytics.math.function.DoubleFunction1D multiply(double)>(2.0);

        $r4 = virtualinvoke r0.<com.opengamma.analytics.math.function.special.HermitePolynomialFunction: com.opengamma.analytics.math.function.DoubleFunction1D getX()>();

        $r5 = virtualinvoke $r3.<com.opengamma.analytics.math.function.DoubleFunction1D: com.opengamma.analytics.math.function.DoubleFunction1D multiply(com.opengamma.analytics.math.function.DoubleFunction1D)>($r4);

        $i3 = i6 - 2;

        $r6 = r1[$i3];

        $i4 = 2 * i6;

        $i5 = $i4 - 2;

        $d0 = (double) $i5;

        $r7 = virtualinvoke $r6.<com.opengamma.analytics.math.function.DoubleFunction1D: com.opengamma.analytics.math.function.DoubleFunction1D multiply(double)>($d0);

        $r8 = virtualinvoke $r5.<com.opengamma.analytics.math.function.DoubleFunction1D: com.opengamma.analytics.math.function.DoubleFunction1D subtract(com.opengamma.analytics.math.function.DoubleFunction1D)>($r7);

        r1[i6] = $r8;

     label6:
        i6 = i6 + 1;

        goto label3;

     label7:
        return r1;
    }

    public com.opengamma.util.tuple.Pair[] getPolynomialsAndFirstDerivative(int)
    {
        com.opengamma.analytics.math.function.special.HermitePolynomialFunction r0;
        int i0;
        org.apache.commons.lang.NotImplementedException $r1;

        r0 := @this: com.opengamma.analytics.math.function.special.HermitePolynomialFunction;

        i0 := @parameter0: int;

        $r1 = new org.apache.commons.lang.NotImplementedException;

        specialinvoke $r1.<org.apache.commons.lang.NotImplementedException: void <init>()>();

        throw $r1;
    }

    static void <clinit>()
    {
        com.opengamma.analytics.math.function.special.HermitePolynomialFunction$1 $r0;

        $r0 = new com.opengamma.analytics.math.function.special.HermitePolynomialFunction$1;

        specialinvoke $r0.<com.opengamma.analytics.math.function.special.HermitePolynomialFunction$1: void <init>()>();

        <com.opengamma.analytics.math.function.special.HermitePolynomialFunction: com.opengamma.analytics.math.function.DoubleFunction1D TWO_X> = $r0;

        return;
    }
}
