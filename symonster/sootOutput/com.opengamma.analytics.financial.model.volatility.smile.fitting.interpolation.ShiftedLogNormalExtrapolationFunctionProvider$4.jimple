class com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.ShiftedLogNormalExtrapolationFunctionProvider$4 extends com.opengamma.analytics.math.function.Function1D
{
    final double val$cutOffStrikeLow;
    final double val$forward;
    final double val$expiry;
    final double[] val$shiftLnVolLowTail;
    final double val$cutOffStrikeHigh;
    final double[] val$shiftLnVolHighTail;
    final com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.ShiftedLogNormalExtrapolationFunctionProvider this$0;

    void <init>(com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.ShiftedLogNormalExtrapolationFunctionProvider, double, double, double, double[], double, double[])
    {
        com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.ShiftedLogNormalExtrapolationFunctionProvider$4 r0;
        com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.ShiftedLogNormalExtrapolationFunctionProvider r1;
        double d0, d1, d2, d3;
        double[] r2, r3;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.ShiftedLogNormalExtrapolationFunctionProvider$4;

        r1 := @parameter0: com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.ShiftedLogNormalExtrapolationFunctionProvider;

        d0 := @parameter1: double;

        d1 := @parameter2: double;

        d2 := @parameter3: double;

        r2 := @parameter4: double[];

        d3 := @parameter5: double;

        r3 := @parameter6: double[];

        r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.ShiftedLogNormalExtrapolationFunctionProvider$4: com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.ShiftedLogNormalExtrapolationFunctionProvider this$0> = r1;

        r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.ShiftedLogNormalExtrapolationFunctionProvider$4: double val$cutOffStrikeLow> = d0;

        r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.ShiftedLogNormalExtrapolationFunctionProvider$4: double val$forward> = d1;

        r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.ShiftedLogNormalExtrapolationFunctionProvider$4: double val$expiry> = d2;

        r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.ShiftedLogNormalExtrapolationFunctionProvider$4: double[] val$shiftLnVolLowTail> = r2;

        r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.ShiftedLogNormalExtrapolationFunctionProvider$4: double val$cutOffStrikeHigh> = d3;

        r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.ShiftedLogNormalExtrapolationFunctionProvider$4: double[] val$shiftLnVolHighTail> = r3;

        specialinvoke r0.<com.opengamma.analytics.math.function.Function1D: void <init>()>();

        return;
    }

    public java.lang.Double evaluate(java.lang.Double)
    {
        com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.ShiftedLogNormalExtrapolationFunctionProvider$4 r0;
        java.lang.Double r1, $r5, $r8;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15;
        byte $b0, $b1;
        double[] $r3, $r4, $r6, $r7;
        com.opengamma.OpenGammaRuntimeException r9;
        java.lang.Throwable r10;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.ShiftedLogNormalExtrapolationFunctionProvider$4;

        r1 := @parameter0: java.lang.Double;

        $d0 = virtualinvoke r1.<java.lang.Double: double doubleValue()>();

        $d1 = r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.ShiftedLogNormalExtrapolationFunctionProvider$4: double val$cutOffStrikeLow>;

        $b0 = $d0 cmpg $d1;

        if $b0 >= 0 goto label1;

        $d10 = r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.ShiftedLogNormalExtrapolationFunctionProvider$4: double val$forward>;

        $d11 = virtualinvoke r1.<java.lang.Double: double doubleValue()>();

        $d14 = r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.ShiftedLogNormalExtrapolationFunctionProvider$4: double val$expiry>;

        $r6 = r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.ShiftedLogNormalExtrapolationFunctionProvider$4: double[] val$shiftLnVolLowTail>;

        $d13 = $r6[0];

        $r7 = r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.ShiftedLogNormalExtrapolationFunctionProvider$4: double[] val$shiftLnVolLowTail>;

        $d12 = $r7[1];

        $d15 = staticinvoke <com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.ShiftedLogNormalTailExtrapolation: double impliedVolatility(double,double,double,double,double)>($d10, $d11, $d14, $d13, $d12);

        $r8 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d15);

        return $r8;

     label1:
        $d2 = virtualinvoke r1.<java.lang.Double: double doubleValue()>();

        $d3 = r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.ShiftedLogNormalExtrapolationFunctionProvider$4: double val$cutOffStrikeHigh>;

        $b1 = $d2 cmpl $d3;

        if $b1 <= 0 goto label2;

        $d4 = r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.ShiftedLogNormalExtrapolationFunctionProvider$4: double val$forward>;

        $d5 = virtualinvoke r1.<java.lang.Double: double doubleValue()>();

        $d8 = r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.ShiftedLogNormalExtrapolationFunctionProvider$4: double val$expiry>;

        $r3 = r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.ShiftedLogNormalExtrapolationFunctionProvider$4: double[] val$shiftLnVolHighTail>;

        $d7 = $r3[0];

        $r4 = r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.ShiftedLogNormalExtrapolationFunctionProvider$4: double[] val$shiftLnVolHighTail>;

        $d6 = $r4[1];

        $d9 = staticinvoke <com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.ShiftedLogNormalTailExtrapolation: double impliedVolatility(double,double,double,double,double)>($d4, $d5, $d8, $d7, $d6);

        $r5 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d9);

        return $r5;

     label2:
        r9 = new com.opengamma.OpenGammaRuntimeException;

        specialinvoke r9.<com.opengamma.OpenGammaRuntimeException: void <init>(java.lang.String)>("Use smile interpolation method for cutOffStrikeLow <= strike <= cutOffStrikeHigh");

        r10 = (java.lang.Throwable) r9;

        throw r10;
    }

    public volatile java.lang.Object evaluate(java.lang.Object)
    {
        com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.ShiftedLogNormalExtrapolationFunctionProvider$4 r0;
        java.lang.Object r1;
        java.lang.Double $r2, $r3;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.ShiftedLogNormalExtrapolationFunctionProvider$4;

        r1 := @parameter0: java.lang.Object;

        $r2 = (java.lang.Double) r1;

        $r3 = virtualinvoke r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.ShiftedLogNormalExtrapolationFunctionProvider$4: java.lang.Double evaluate(java.lang.Double)>($r2);

        return $r3;
    }
}
