public class org.apache.commons.math.optimization.univariate.BracketFinder extends java.lang.Object
{
    private static final double EPS_MIN;
    private static final double GOLD;
    private final double growLimit;
    private final int maxIterations;
    private int iterations;
    private int evaluations;
    private double lo;
    private double hi;
    private double mid;
    private double fLo;
    private double fHi;
    private double fMid;

    public void <init>()
    {
        org.apache.commons.math.optimization.univariate.BracketFinder r0;

        r0 := @this: org.apache.commons.math.optimization.univariate.BracketFinder;

        specialinvoke r0.<org.apache.commons.math.optimization.univariate.BracketFinder: void <init>(double,int)>(100.0, 50);

        return;
    }

    public void <init>(double, int)
    {
        org.apache.commons.math.optimization.univariate.BracketFinder r0;
        double d0;
        int i0;
        byte $b1;
        org.apache.commons.math.exception.NotStrictlyPositiveException $r1, $r3;
        java.lang.Integer $r2;
        java.lang.Double $r4;

        r0 := @this: org.apache.commons.math.optimization.univariate.BracketFinder;

        d0 := @parameter0: double;

        i0 := @parameter1: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $b1 = d0 cmpg 0.0;

        if $b1 > 0 goto label1;

        $r3 = new org.apache.commons.math.exception.NotStrictlyPositiveException;

        $r4 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d0);

        specialinvoke $r3.<org.apache.commons.math.exception.NotStrictlyPositiveException: void <init>(java.lang.Number)>($r4);

        throw $r3;

     label1:
        if i0 > 0 goto label2;

        $r1 = new org.apache.commons.math.exception.NotStrictlyPositiveException;

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        specialinvoke $r1.<org.apache.commons.math.exception.NotStrictlyPositiveException: void <init>(java.lang.Number)>($r2);

        throw $r1;

     label2:
        r0.<org.apache.commons.math.optimization.univariate.BracketFinder: double growLimit> = d0;

        r0.<org.apache.commons.math.optimization.univariate.BracketFinder: int maxIterations> = i0;

        return;
    }

    public void search(org.apache.commons.math.analysis.UnivariateRealFunction, org.apache.commons.math.optimization.GoalType, double, double) throws org.apache.commons.math.MaxIterationsExceededException, org.apache.commons.math.FunctionEvaluationException
    {
        org.apache.commons.math.optimization.univariate.BracketFinder r0;
        org.apache.commons.math.analysis.UnivariateRealFunction r1;
        org.apache.commons.math.optimization.GoalType r2, $r3;
        boolean z0, $z1;
        double d0, d1, d2, d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21, $d22, $d23, $d24, $d25, $d26, $d27, $d28, $d29, $d30, $d31, $d32, $d33, d34, d35, d36, d37, d38, d39, $d40, $d41, d42, d43, $d44, d45, d46, d47;
        byte $b0, $b1, $b5, $b6, $b7, $b8, $b9, $b10, $b11, $b12, $b13, $b14, $b16, $b17;
        int $i2, $i3, $i4, $i15;
        org.apache.commons.math.MaxIterationsExceededException $r4;

        r0 := @this: org.apache.commons.math.optimization.univariate.BracketFinder;

        r1 := @parameter0: org.apache.commons.math.analysis.UnivariateRealFunction;

        r2 := @parameter1: org.apache.commons.math.optimization.GoalType;

        d34 := @parameter2: double;

        d35 := @parameter3: double;

        specialinvoke r0.<org.apache.commons.math.optimization.univariate.BracketFinder: void reset()>();

        $r3 = <org.apache.commons.math.optimization.GoalType: org.apache.commons.math.optimization.GoalType MINIMIZE>;

        if r2 != $r3 goto label01;

        $z1 = 1;

        goto label02;

     label01:
        $z1 = 0;

     label02:
        z0 = $z1;

        d36 = specialinvoke r0.<org.apache.commons.math.optimization.univariate.BracketFinder: double eval(org.apache.commons.math.analysis.UnivariateRealFunction,double)>(r1, d34);

        d37 = specialinvoke r0.<org.apache.commons.math.optimization.univariate.BracketFinder: double eval(org.apache.commons.math.analysis.UnivariateRealFunction,double)>(r1, d35);

        if $z1 == 0 goto label03;

        $b17 = d36 cmpg d37;

        if $b17 >= 0 goto label05;

        goto label04;

     label03:
        $b0 = d36 cmpl d37;

        if $b0 <= 0 goto label05;

     label04:
        d38 = d34;

        d34 = d35;

        d35 = d38;

        d39 = d36;

        d36 = d37;

        d37 = d39;

     label05:
        $d40 = d35 - d34;

        $d41 = 1.618034 * $d40;

        d42 = d35 + $d41;

        d43 = specialinvoke r0.<org.apache.commons.math.optimization.univariate.BracketFinder: double eval(org.apache.commons.math.analysis.UnivariateRealFunction,double)>(r1, d42);

     label06:
        if z0 == 0 goto label07;

        $b16 = d43 cmpg d37;

        if $b16 >= 0 goto label24;

        goto label08;

     label07:
        $b1 = d43 cmpl d37;

        if $b1 <= 0 goto label24;

     label08:
        $i2 = r0.<org.apache.commons.math.optimization.univariate.BracketFinder: int iterations>;

        $i3 = $i2 + 1;

        r0.<org.apache.commons.math.optimization.univariate.BracketFinder: int iterations> = $i3;

        $i4 = r0.<org.apache.commons.math.optimization.univariate.BracketFinder: int maxIterations>;

        if $i3 <= $i4 goto label09;

        $r4 = new org.apache.commons.math.MaxIterationsExceededException;

        $i15 = r0.<org.apache.commons.math.optimization.univariate.BracketFinder: int maxIterations>;

        specialinvoke $r4.<org.apache.commons.math.MaxIterationsExceededException: void <init>(int)>($i15);

        throw $r4;

     label09:
        $d6 = d35 - d34;

        $d5 = d37 - d43;

        d0 = $d6 * $d5;

        $d8 = d35 - d42;

        $d7 = d37 - d36;

        d1 = $d8 * $d7;

        d2 = d1 - d0;

        $d9 = staticinvoke <java.lang.Math: double abs(double)>(d2);

        $b5 = $d9 cmpg 1.0E-21;

        if $b5 >= 0 goto label10;

        $d44 = 2.0E-21;

        goto label11;

     label10:
        $d44 = 2.0 * d2;

     label11:
        $d10 = d35 - d42;

        $d13 = $d10 * d1;

        $d11 = d35 - d34;

        $d12 = $d11 * d0;

        $d14 = $d13 - $d12;

        $d15 = $d14 / $d44;

        d45 = d35 - $d15;

        $d17 = r0.<org.apache.commons.math.optimization.univariate.BracketFinder: double growLimit>;

        $d16 = d42 - d35;

        $d18 = $d17 * $d16;

        d4 = d35 + $d18;

        $d20 = d45 - d42;

        $d19 = d35 - d45;

        $d21 = $d20 * $d19;

        $b6 = $d21 cmpl 0.0;

        if $b6 <= 0 goto label18;

        d46 = specialinvoke r0.<org.apache.commons.math.optimization.univariate.BracketFinder: double eval(org.apache.commons.math.analysis.UnivariateRealFunction,double)>(r1, d45);

        if z0 == 0 goto label12;

        $b14 = d46 cmpg d43;

        if $b14 >= 0 goto label14;

        goto label13;

     label12:
        $b11 = d46 cmpl d43;

        if $b11 <= 0 goto label14;

     label13:
        d34 = d35;

        d35 = d45;

        d36 = d37;

        d37 = d46;

        goto label24;

     label14:
        if z0 == 0 goto label15;

        $b13 = d46 cmpl d37;

        if $b13 <= 0 goto label17;

        goto label16;

     label15:
        $b12 = d46 cmpg d37;

        if $b12 >= 0 goto label17;

     label16:
        d42 = d45;

        d43 = d46;

        goto label24;

     label17:
        $d32 = d42 - d35;

        $d33 = 1.618034 * $d32;

        d45 = d42 + $d33;

        d47 = specialinvoke r0.<org.apache.commons.math.optimization.univariate.BracketFinder: double eval(org.apache.commons.math.analysis.UnivariateRealFunction,double)>(r1, d45);

        goto label23;

     label18:
        $d23 = d45 - d4;

        $d22 = d4 - d42;

        $d24 = $d23 * $d22;

        $b7 = $d24 cmpl 0.0;

        if $b7 < 0 goto label19;

        d45 = d4;

        d47 = specialinvoke r0.<org.apache.commons.math.optimization.univariate.BracketFinder: double eval(org.apache.commons.math.analysis.UnivariateRealFunction,double)>(r1, d4);

        goto label23;

     label19:
        $d26 = d45 - d4;

        $d25 = d42 - d45;

        $d27 = $d26 * $d25;

        $b8 = $d27 cmpl 0.0;

        if $b8 <= 0 goto label22;

        d47 = specialinvoke r0.<org.apache.commons.math.optimization.univariate.BracketFinder: double eval(org.apache.commons.math.analysis.UnivariateRealFunction,double)>(r1, d45);

        if z0 == 0 goto label20;

        $b10 = d47 cmpg d43;

        if $b10 >= 0 goto label23;

        goto label21;

     label20:
        $b9 = d47 cmpl d43;

        if $b9 <= 0 goto label23;

     label21:
        d35 = d42;

        d42 = d45;

        $d30 = d45 - d35;

        $d31 = 1.618034 * $d30;

        d45 = d45 + $d31;

        d37 = d43;

        d43 = d47;

        d47 = specialinvoke r0.<org.apache.commons.math.optimization.univariate.BracketFinder: double eval(org.apache.commons.math.analysis.UnivariateRealFunction,double)>(r1, d45);

        goto label23;

     label22:
        $d28 = d42 - d35;

        $d29 = 1.618034 * $d28;

        d45 = d42 + $d29;

        d47 = specialinvoke r0.<org.apache.commons.math.optimization.univariate.BracketFinder: double eval(org.apache.commons.math.analysis.UnivariateRealFunction,double)>(r1, d45);

     label23:
        d34 = d35;

        d35 = d42;

        d42 = d45;

        d36 = d37;

        d37 = d43;

        d43 = d47;

        goto label06;

     label24:
        r0.<org.apache.commons.math.optimization.univariate.BracketFinder: double lo> = d34;

        r0.<org.apache.commons.math.optimization.univariate.BracketFinder: double mid> = d35;

        r0.<org.apache.commons.math.optimization.univariate.BracketFinder: double hi> = d42;

        r0.<org.apache.commons.math.optimization.univariate.BracketFinder: double fLo> = d36;

        r0.<org.apache.commons.math.optimization.univariate.BracketFinder: double fMid> = d37;

        r0.<org.apache.commons.math.optimization.univariate.BracketFinder: double fHi> = d43;

        return;
    }

    public int getIterations()
    {
        org.apache.commons.math.optimization.univariate.BracketFinder r0;
        int $i0;

        r0 := @this: org.apache.commons.math.optimization.univariate.BracketFinder;

        $i0 = r0.<org.apache.commons.math.optimization.univariate.BracketFinder: int iterations>;

        return $i0;
    }

    public int getEvaluations()
    {
        org.apache.commons.math.optimization.univariate.BracketFinder r0;
        int $i0;

        r0 := @this: org.apache.commons.math.optimization.univariate.BracketFinder;

        $i0 = r0.<org.apache.commons.math.optimization.univariate.BracketFinder: int evaluations>;

        return $i0;
    }

    public double getLo()
    {
        org.apache.commons.math.optimization.univariate.BracketFinder r0;
        double $d0;

        r0 := @this: org.apache.commons.math.optimization.univariate.BracketFinder;

        $d0 = r0.<org.apache.commons.math.optimization.univariate.BracketFinder: double lo>;

        return $d0;
    }

    public double getFLow()
    {
        org.apache.commons.math.optimization.univariate.BracketFinder r0;
        double $d0;

        r0 := @this: org.apache.commons.math.optimization.univariate.BracketFinder;

        $d0 = r0.<org.apache.commons.math.optimization.univariate.BracketFinder: double fLo>;

        return $d0;
    }

    public double getHi()
    {
        org.apache.commons.math.optimization.univariate.BracketFinder r0;
        double $d0;

        r0 := @this: org.apache.commons.math.optimization.univariate.BracketFinder;

        $d0 = r0.<org.apache.commons.math.optimization.univariate.BracketFinder: double hi>;

        return $d0;
    }

    public double getFHi()
    {
        org.apache.commons.math.optimization.univariate.BracketFinder r0;
        double $d0;

        r0 := @this: org.apache.commons.math.optimization.univariate.BracketFinder;

        $d0 = r0.<org.apache.commons.math.optimization.univariate.BracketFinder: double fHi>;

        return $d0;
    }

    public double getMid()
    {
        org.apache.commons.math.optimization.univariate.BracketFinder r0;
        double $d0;

        r0 := @this: org.apache.commons.math.optimization.univariate.BracketFinder;

        $d0 = r0.<org.apache.commons.math.optimization.univariate.BracketFinder: double mid>;

        return $d0;
    }

    public double getFMid()
    {
        org.apache.commons.math.optimization.univariate.BracketFinder r0;
        double $d0;

        r0 := @this: org.apache.commons.math.optimization.univariate.BracketFinder;

        $d0 = r0.<org.apache.commons.math.optimization.univariate.BracketFinder: double fMid>;

        return $d0;
    }

    private double eval(org.apache.commons.math.analysis.UnivariateRealFunction, double) throws org.apache.commons.math.FunctionEvaluationException
    {
        org.apache.commons.math.optimization.univariate.BracketFinder r0;
        org.apache.commons.math.analysis.UnivariateRealFunction r1;
        double d0, $d1;
        int $i0, $i1;

        r0 := @this: org.apache.commons.math.optimization.univariate.BracketFinder;

        r1 := @parameter0: org.apache.commons.math.analysis.UnivariateRealFunction;

        d0 := @parameter1: double;

        $i0 = r0.<org.apache.commons.math.optimization.univariate.BracketFinder: int evaluations>;

        $i1 = $i0 + 1;

        r0.<org.apache.commons.math.optimization.univariate.BracketFinder: int evaluations> = $i1;

        $d1 = interfaceinvoke r1.<org.apache.commons.math.analysis.UnivariateRealFunction: double value(double)>(d0);

        return $d1;
    }

    private void reset()
    {
        org.apache.commons.math.optimization.univariate.BracketFinder r0;

        r0 := @this: org.apache.commons.math.optimization.univariate.BracketFinder;

        r0.<org.apache.commons.math.optimization.univariate.BracketFinder: int iterations> = 0;

        r0.<org.apache.commons.math.optimization.univariate.BracketFinder: int evaluations> = 0;

        return;
    }

    public static void <clinit>()
    {
        <org.apache.commons.math.optimization.univariate.BracketFinder: double GOLD> = 1.618034;

        <org.apache.commons.math.optimization.univariate.BracketFinder: double EPS_MIN> = 1.0E-21;

        return;
    }
}
