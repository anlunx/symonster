public class com.opengamma.analytics.math.interpolation.BicubicSplineInterpolator extends com.opengamma.analytics.math.interpolation.PiecewisePolynomialInterpolator2D
{
    private static final double ERROR;
    private com.opengamma.analytics.math.interpolation.PiecewisePolynomialInterpolator[] _method;
    private static double[][] s_invMat;

    public void <init>(com.opengamma.analytics.math.interpolation.PiecewisePolynomialInterpolator[])
    {
        com.opengamma.analytics.math.interpolation.BicubicSplineInterpolator r0;
        com.opengamma.analytics.math.interpolation.PiecewisePolynomialInterpolator[] r1, $r3, $r5;
        int $i0, i1;
        com.opengamma.analytics.math.interpolation.PiecewisePolynomialInterpolator $r4;
        boolean $z0;

        r0 := @this: com.opengamma.analytics.math.interpolation.BicubicSplineInterpolator;

        r1 := @parameter0: com.opengamma.analytics.math.interpolation.PiecewisePolynomialInterpolator[];

        specialinvoke r0.<com.opengamma.analytics.math.interpolation.PiecewisePolynomialInterpolator2D: void <init>()>();

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "method");

        $i0 = lengthof r1;

        if $i0 != 2 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z0, "two methods should be chosen");

        $r3 = newarray (com.opengamma.analytics.math.interpolation.PiecewisePolynomialInterpolator)[2];

        r0.<com.opengamma.analytics.math.interpolation.BicubicSplineInterpolator: com.opengamma.analytics.math.interpolation.PiecewisePolynomialInterpolator[] _method> = $r3;

        i1 = 0;

     label3:
        if i1 >= 2 goto label4;

        $r5 = r0.<com.opengamma.analytics.math.interpolation.BicubicSplineInterpolator: com.opengamma.analytics.math.interpolation.PiecewisePolynomialInterpolator[] _method>;

        $r4 = r1[i1];

        $r5[i1] = $r4;

        i1 = i1 + 1;

        goto label3;

     label4:
        return;
    }

    public void <init>(com.opengamma.analytics.math.interpolation.PiecewisePolynomialInterpolator)
    {
        com.opengamma.analytics.math.interpolation.BicubicSplineInterpolator r0;
        com.opengamma.analytics.math.interpolation.PiecewisePolynomialInterpolator r1;
        com.opengamma.analytics.math.interpolation.PiecewisePolynomialInterpolator[] $r2;

        r0 := @this: com.opengamma.analytics.math.interpolation.BicubicSplineInterpolator;

        r1 := @parameter0: com.opengamma.analytics.math.interpolation.PiecewisePolynomialInterpolator;

        specialinvoke r0.<com.opengamma.analytics.math.interpolation.PiecewisePolynomialInterpolator2D: void <init>()>();

        $r2 = newarray (com.opengamma.analytics.math.interpolation.PiecewisePolynomialInterpolator)[2];

        $r2[0] = r1;

        $r2[1] = r1;

        r0.<com.opengamma.analytics.math.interpolation.BicubicSplineInterpolator: com.opengamma.analytics.math.interpolation.PiecewisePolynomialInterpolator[] _method> = $r2;

        return;
    }

    public com.opengamma.analytics.math.interpolation.PiecewisePolynomialResult2D interpolate(double[], double[], double[][])
    {
        com.opengamma.analytics.math.interpolation.BicubicSplineInterpolator r0;
        double[] r1, r2, r9, $r36, $r37, $r40, $r41, $r42, $r43, $r44, $r45, $r46, $r47, $r48, $r49, $r50, $r51, $r52, $r53, $r54, $r55, $r56, $r57, $r58, $r59, $r60, $r61, $r62, $r63, r70;
        double[][] r3, r6, r10, $r20, $r24, $r32, r64, r65, r66, r67;
        int i0, i1, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43, $i44, $i45, $i46, $i47, $i48, $i49, $i50, $i51, $i52, i56, i57, i58, i59, i60, i61, i62, i63, i64, i65, i66, i67, i68, i69;
        com.opengamma.analytics.math.interpolation.PiecewisePolynomialResult r7, r8;
        com.opengamma.analytics.math.matrix.DoubleMatrix2D $r14, $r19, $r21, $r25, $r31, $r38;
        com.opengamma.analytics.math.function.PiecewisePolynomialFunction1D $r15;
        com.opengamma.analytics.math.interpolation.PiecewisePolynomialInterpolator[] $r16, $r22;
        com.opengamma.analytics.math.matrix.OGMatrixAlgebra $r17, $r33;
        com.opengamma.analytics.math.interpolation.PiecewisePolynomialInterpolator $r18, $r23;
        com.opengamma.analytics.math.interpolation.PiecewisePolynomialResult2D $r26;
        com.opengamma.analytics.math.matrix.DoubleMatrix1D $r27, $r28, $r30, $r35;
        int[] $r29;
        com.opengamma.analytics.math.matrix.Matrix $r34;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21, $d22, $d23, $d24, $d25, $d26, $d27, $d28, $d29, $d30, $d31, $d32, $d33, $d34, $d35, $d36, $d37, $d38, $d39, $d40, $d41, $d42, $d43, $d44, $d45, $d46, $d47, $d48, $d49, $d50, $d51, $d52, $d53, $d54, $d55, $d56, $d57, $d58, $d59, d60, d61;
        byte $b11, $b53, $b54, $b55;
        com.opengamma.analytics.math.matrix.DoubleMatrix2D[] $r39;
        boolean $z0, $z1, $z2;
        com.opengamma.analytics.math.matrix.DoubleMatrix2D[][] r68;

        r0 := @this: com.opengamma.analytics.math.interpolation.BicubicSplineInterpolator;

        r1 := @parameter0: double[];

        r2 := @parameter1: double[];

        r3 := @parameter2: double[][];

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "x0Values");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, "x1Values");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r3, "yValues");

        i0 = lengthof r1;

        i1 = lengthof r2;

        $r14 = new com.opengamma.analytics.math.matrix.DoubleMatrix2D;

        specialinvoke $r14.<com.opengamma.analytics.math.matrix.DoubleMatrix2D: void <init>(double[][])>(r3);

        $r15 = new com.opengamma.analytics.math.function.PiecewisePolynomialFunction1D;

        specialinvoke $r15.<com.opengamma.analytics.math.function.PiecewisePolynomialFunction1D: void <init>()>();

        r64 = newmultiarray (double)[i1][i0];

        r65 = newmultiarray (double)[i0][i1];

        r6 = newmultiarray (double)[i0][i1];

        $r16 = r0.<com.opengamma.analytics.math.interpolation.BicubicSplineInterpolator: com.opengamma.analytics.math.interpolation.PiecewisePolynomialInterpolator[] _method>;

        $r18 = $r16[0];

        $r17 = <com.opengamma.analytics.math.matrix.MatrixAlgebraFactory: com.opengamma.analytics.math.matrix.OGMatrixAlgebra OG_ALGEBRA>;

        $r19 = virtualinvoke $r17.<com.opengamma.analytics.math.matrix.OGMatrixAlgebra: com.opengamma.analytics.math.matrix.DoubleMatrix2D getTranspose(com.opengamma.analytics.math.matrix.Matrix)>($r14);

        $r20 = virtualinvoke $r19.<com.opengamma.analytics.math.matrix.DoubleMatrix2D: double[][] getData()>();

        r7 = virtualinvoke $r18.<com.opengamma.analytics.math.interpolation.PiecewisePolynomialInterpolator: com.opengamma.analytics.math.interpolation.PiecewisePolynomialResult interpolate(double[],double[][])>(r1, $r20);

        $r21 = virtualinvoke $r15.<com.opengamma.analytics.math.function.PiecewisePolynomialFunction1D: com.opengamma.analytics.math.matrix.DoubleMatrix2D differentiate(com.opengamma.analytics.math.interpolation.PiecewisePolynomialResult,double[])>(r7, r1);

        r66 = virtualinvoke $r21.<com.opengamma.analytics.math.matrix.DoubleMatrix2D: double[][] getData()>();

        $r22 = r0.<com.opengamma.analytics.math.interpolation.BicubicSplineInterpolator: com.opengamma.analytics.math.interpolation.PiecewisePolynomialInterpolator[] _method>;

        $r23 = $r22[1];

        $r24 = virtualinvoke $r14.<com.opengamma.analytics.math.matrix.DoubleMatrix2D: double[][] getData()>();

        r8 = virtualinvoke $r23.<com.opengamma.analytics.math.interpolation.PiecewisePolynomialInterpolator: com.opengamma.analytics.math.interpolation.PiecewisePolynomialResult interpolate(double[],double[][])>(r2, $r24);

        $r25 = virtualinvoke $r15.<com.opengamma.analytics.math.function.PiecewisePolynomialFunction1D: com.opengamma.analytics.math.matrix.DoubleMatrix2D differentiate(com.opengamma.analytics.math.interpolation.PiecewisePolynomialResult,double[])>(r8, r2);

        r67 = virtualinvoke $r25.<com.opengamma.analytics.math.matrix.DoubleMatrix2D: double[][] getData()>();

        i56 = 0;

     label01:
        if i56 >= i0 goto label08;

        i57 = 0;

     label02:
        if i57 >= i1 goto label07;

        $r48 = r3[i56];

        $d40 = $r48[i57];

        $b53 = $d40 cmpl 0.0;

        if $b53 != 0 goto label05;

        $r53 = r66[i57];

        $d46 = $r53[i56];

        $b54 = $d46 cmpl 0.0;

        if $b54 != 0 goto label03;

        $r63 = r6[i56];

        $r62 = r67[i56];

        $d59 = $r62[i57];

        $r63[i57] = $d59;

        goto label06;

     label03:
        $r54 = r67[i56];

        $d47 = $r54[i57];

        $b55 = $d47 cmpl 0.0;

        if $b55 != 0 goto label04;

        $r61 = r6[i56];

        $r60 = r66[i57];

        $d58 = $r60[i56];

        $r61[i57] = $d58;

        goto label06;

     label04:
        $r57 = r6[i56];

        $r55 = r66[i57];

        $d49 = $r55[i56];

        $r56 = r67[i56];

        $d48 = $r56[i57];

        $d50 = $d49 * $d48;

        $d51 = staticinvoke <java.lang.Math: double signum(double)>($d50);

        $r58 = r66[i57];

        $d53 = $r58[i56];

        $r59 = r67[i56];

        $d52 = $r59[i57];

        $d54 = $d53 * $d52;

        $d55 = staticinvoke <java.lang.Math: double abs(double)>($d54);

        $d56 = staticinvoke <java.lang.Math: double sqrt(double)>($d55);

        $d57 = $d51 * $d56;

        $r57[i57] = $d57;

        goto label06;

     label05:
        $r52 = r6[i56];

        $r49 = r66[i57];

        $d42 = $r49[i56];

        $r50 = r67[i56];

        $d41 = $r50[i57];

        $d44 = $d42 * $d41;

        $r51 = r3[i56];

        $d43 = $r51[i57];

        $d45 = $d44 / $d43;

        $r52[i57] = $d45;

     label06:
        i57 = i57 + 1;

        goto label02;

     label07:
        i56 = i56 + 1;

        goto label01;

     label08:
        $i4 = i0 - 1;

        $i3 = i1 - 1;

        r68 = newmultiarray (com.opengamma.analytics.math.matrix.DoubleMatrix2D)[$i4][$i3];

        i58 = 0;

     label09:
        $i5 = i0 - 1;

        if i58 >= $i5 goto label34;

        i59 = 0;

     label10:
        $i6 = i1 - 1;

        if i59 >= $i6 goto label33;

        r9 = newarray (double)[16];

        i60 = 0;

     label11:
        if i60 >= 2 goto label14;

        i61 = 0;

     label12:
        if i61 >= 2 goto label13;

        $i49 = 2 * i61;

        $i52 = i60 + $i49;

        $i50 = i58 + i60;

        $r47 = r3[$i50];

        $i51 = i59 + i61;

        $d39 = $r47[$i51];

        r9[$i52] = $d39;

        i61 = i61 + 1;

        goto label12;

     label13:
        i60 = i60 + 1;

        goto label11;

     label14:
        i62 = 0;

     label15:
        if i62 >= 2 goto label18;

        i63 = 0;

     label16:
        if i63 >= 2 goto label17;

        $i45 = 4 + i62;

        $i44 = 2 * i63;

        $i48 = $i45 + $i44;

        $i46 = i59 + i63;

        $r46 = r66[$i46];

        $i47 = i58 + i62;

        $d38 = $r46[$i47];

        r9[$i48] = $d38;

        i63 = i63 + 1;

        goto label16;

     label17:
        i62 = i62 + 1;

        goto label15;

     label18:
        i64 = 0;

     label19:
        if i64 >= 2 goto label22;

        i65 = 0;

     label20:
        if i65 >= 2 goto label21;

        $i40 = 8 + i64;

        $i39 = 2 * i65;

        $i43 = $i40 + $i39;

        $i41 = i58 + i64;

        $r45 = r67[$i41];

        $i42 = i59 + i65;

        $d37 = $r45[$i42];

        r9[$i43] = $d37;

        i65 = i65 + 1;

        goto label20;

     label21:
        i64 = i64 + 1;

        goto label19;

     label22:
        i66 = 0;

     label23:
        if i66 >= 2 goto label26;

        i67 = 0;

     label24:
        if i67 >= 2 goto label25;

        $i35 = 12 + i66;

        $i34 = 2 * i67;

        $i38 = $i35 + $i34;

        $i36 = i58 + i66;

        $r44 = r6[$i36];

        $i37 = i59 + i67;

        $d36 = $r44[$i37];

        r9[$i38] = $d36;

        i67 = i67 + 1;

        goto label24;

     label25:
        i66 = i66 + 1;

        goto label23;

     label26:
        $r30 = new com.opengamma.analytics.math.matrix.DoubleMatrix1D;

        specialinvoke $r30.<com.opengamma.analytics.math.matrix.DoubleMatrix1D: void <init>(double[])>(r9);

        $r33 = <com.opengamma.analytics.math.matrix.MatrixAlgebraFactory: com.opengamma.analytics.math.matrix.OGMatrixAlgebra OG_ALGEBRA>;

        $r31 = new com.opengamma.analytics.math.matrix.DoubleMatrix2D;

        $r32 = <com.opengamma.analytics.math.interpolation.BicubicSplineInterpolator: double[][] s_invMat>;

        specialinvoke $r31.<com.opengamma.analytics.math.matrix.DoubleMatrix2D: void <init>(double[][])>($r32);

        $r34 = virtualinvoke $r33.<com.opengamma.analytics.math.matrix.OGMatrixAlgebra: com.opengamma.analytics.math.matrix.Matrix multiply(com.opengamma.analytics.math.matrix.Matrix,com.opengamma.analytics.math.matrix.Matrix)>($r31, $r30);

        $r35 = (com.opengamma.analytics.math.matrix.DoubleMatrix1D) $r34;

        r70 = virtualinvoke $r35.<com.opengamma.analytics.math.matrix.DoubleMatrix1D: double[] getData()>();

        d60 = 0.0;

        r10 = newmultiarray (double)[4][4];

        i68 = 0;

     label27:
        if i68 >= 4 goto label30;

        i69 = 0;

     label28:
        if i69 >= 4 goto label29;

        $i12 = 4 - i68;

        $i13 = $i12 - 1;

        $r40 = r10[$i13];

        $i14 = 4 - i69;

        $i18 = $i14 - 1;

        $i15 = i69 * 4;

        $i16 = i68 + $i15;

        $d12 = r70[$i16];

        $i17 = i58 + 1;

        $d9 = r1[$i17];

        $d8 = r1[i58];

        $d11 = $d9 - $d8;

        $d10 = (double) i68;

        $d13 = staticinvoke <java.lang.Math: double pow(double,double)>($d11, $d10);

        $d18 = $d12 / $d13;

        $i19 = i59 + 1;

        $d15 = r2[$i19];

        $d14 = r2[i59];

        $d17 = $d15 - $d14;

        $d16 = (double) i69;

        $d19 = staticinvoke <java.lang.Math: double pow(double,double)>($d17, $d16);

        $d20 = $d18 / $d19;

        $r40[$i18] = $d20;

        $i20 = 4 - i68;

        $i21 = $i20 - 1;

        $r41 = r10[$i21];

        $i22 = 4 - i69;

        $i23 = $i22 - 1;

        $d21 = $r41[$i23];

        $z0 = staticinvoke <java.lang.Double: boolean isNaN(double)>($d21);

        staticinvoke <com.opengamma.util.ArgumentChecker: void isFalse(boolean,java.lang.String)>($z0, "Too large/small input");

        $i24 = 4 - i68;

        $i25 = $i24 - 1;

        $r42 = r10[$i25];

        $i26 = 4 - i69;

        $i27 = $i26 - 1;

        $d22 = $r42[$i27];

        $z1 = staticinvoke <java.lang.Double: boolean isInfinite(double)>($d22);

        staticinvoke <com.opengamma.util.ArgumentChecker: void isFalse(boolean,java.lang.String)>($z1, "Too large/small input");

        $i28 = 4 - i68;

        $i29 = $i28 - 1;

        $r43 = r10[$i29];

        $i30 = 4 - i69;

        $i31 = $i30 - 1;

        $d27 = $r43[$i31];

        $i32 = i58 + 1;

        $d24 = r1[$i32];

        $d23 = r1[i58];

        $d26 = $d24 - $d23;

        $d25 = (double) i68;

        $d28 = staticinvoke <java.lang.Math: double pow(double,double)>($d26, $d25);

        $d33 = $d27 * $d28;

        $i33 = i59 + 1;

        $d30 = r2[$i33];

        $d29 = r2[i59];

        $d32 = $d30 - $d29;

        $d31 = (double) i69;

        $d34 = staticinvoke <java.lang.Math: double pow(double,double)>($d32, $d31);

        $d35 = $d33 * $d34;

        d60 = d60 + $d35;

        i69 = i69 + 1;

        goto label28;

     label29:
        i68 = i68 + 1;

        goto label27;

     label30:
        $d0 = staticinvoke <java.lang.Math: double abs(double)>(d60);

        $i7 = i58 + 1;

        $r36 = r3[$i7];

        $i8 = i59 + 1;

        $d1 = $r36[$i8];

        $d2 = staticinvoke <java.lang.Math: double abs(double)>($d1);

        $d3 = $d0 + $d2;

        d61 = staticinvoke <java.lang.Math: double max(double,double)>($d3, 0.1);

        $i9 = i58 + 1;

        $r37 = r3[$i9];

        $i10 = i59 + 1;

        $d4 = $r37[$i10];

        $d5 = d60 - $d4;

        $d6 = staticinvoke <java.lang.Math: double abs(double)>($d5);

        $d7 = 1.0E-13 * d61;

        $b11 = $d6 cmpg $d7;

        if $b11 >= 0 goto label31;

        $z2 = 1;

        goto label32;

     label31:
        $z2 = 0;

     label32:
        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z2, "Input is too large/small or data points are too close");

        $r39 = r68[i58];

        $r38 = new com.opengamma.analytics.math.matrix.DoubleMatrix2D;

        specialinvoke $r38.<com.opengamma.analytics.math.matrix.DoubleMatrix2D: void <init>(double[][])>(r10);

        $r39[i59] = $r38;

        i59 = i59 + 1;

        goto label10;

     label33:
        i58 = i58 + 1;

        goto label09;

     label34:
        $r26 = new com.opengamma.analytics.math.interpolation.PiecewisePolynomialResult2D;

        $r27 = new com.opengamma.analytics.math.matrix.DoubleMatrix1D;

        specialinvoke $r27.<com.opengamma.analytics.math.matrix.DoubleMatrix1D: void <init>(double[])>(r1);

        $r28 = new com.opengamma.analytics.math.matrix.DoubleMatrix1D;

        specialinvoke $r28.<com.opengamma.analytics.math.matrix.DoubleMatrix1D: void <init>(double[])>(r2);

        $r29 = newarray (int)[2];

        $r29[0] = 4;

        $r29[1] = 4;

        specialinvoke $r26.<com.opengamma.analytics.math.interpolation.PiecewisePolynomialResult2D: void <init>(com.opengamma.analytics.math.matrix.DoubleMatrix1D,com.opengamma.analytics.math.matrix.DoubleMatrix1D,com.opengamma.analytics.math.matrix.DoubleMatrix2D[][],int[])>($r27, $r28, r68, $r29);

        return $r26;
    }

    static void <clinit>()
    {
        double[][] $r0, $r2, $r4, $r6, $r8, $r10, $r12, $r14, $r16, $r18, $r20, $r22, $r24, $r26, $r28, $r30, $r32;
        double[] $r1, $r3, $r5, $r7, $r9, $r11, $r13, $r15, $r17, $r19, $r21, $r23, $r25, $r27, $r29, $r31;

        <com.opengamma.analytics.math.interpolation.BicubicSplineInterpolator: double ERROR> = 1.0E-13;

        $r0 = newmultiarray (double)[16][16];

        <com.opengamma.analytics.math.interpolation.BicubicSplineInterpolator: double[][] s_invMat> = $r0;

        $r2 = <com.opengamma.analytics.math.interpolation.BicubicSplineInterpolator: double[][] s_invMat>;

        $r1 = newarray (double)[16];

        $r1[0] = 1.0;

        $r1[1] = 0.0;

        $r1[2] = 0.0;

        $r1[3] = 0.0;

        $r1[4] = 0.0;

        $r1[5] = 0.0;

        $r1[6] = 0.0;

        $r1[7] = 0.0;

        $r1[8] = 0.0;

        $r1[9] = 0.0;

        $r1[10] = 0.0;

        $r1[11] = 0.0;

        $r1[12] = 0.0;

        $r1[13] = 0.0;

        $r1[14] = 0.0;

        $r1[15] = 0.0;

        $r2[0] = $r1;

        $r4 = <com.opengamma.analytics.math.interpolation.BicubicSplineInterpolator: double[][] s_invMat>;

        $r3 = newarray (double)[16];

        $r3[0] = 0.0;

        $r3[1] = 0.0;

        $r3[2] = 0.0;

        $r3[3] = 0.0;

        $r3[4] = 1.0;

        $r3[5] = 0.0;

        $r3[6] = 0.0;

        $r3[7] = 0.0;

        $r3[8] = 0.0;

        $r3[9] = 0.0;

        $r3[10] = 0.0;

        $r3[11] = 0.0;

        $r3[12] = 0.0;

        $r3[13] = 0.0;

        $r3[14] = 0.0;

        $r3[15] = 0.0;

        $r4[1] = $r3;

        $r6 = <com.opengamma.analytics.math.interpolation.BicubicSplineInterpolator: double[][] s_invMat>;

        $r5 = newarray (double)[16];

        $r5[0] = -3.0;

        $r5[1] = 3.0;

        $r5[2] = 0.0;

        $r5[3] = 0.0;

        $r5[4] = -2.0;

        $r5[5] = -1.0;

        $r5[6] = 0.0;

        $r5[7] = 0.0;

        $r5[8] = 0.0;

        $r5[9] = 0.0;

        $r5[10] = 0.0;

        $r5[11] = 0.0;

        $r5[12] = 0.0;

        $r5[13] = 0.0;

        $r5[14] = 0.0;

        $r5[15] = 0.0;

        $r6[2] = $r5;

        $r8 = <com.opengamma.analytics.math.interpolation.BicubicSplineInterpolator: double[][] s_invMat>;

        $r7 = newarray (double)[16];

        $r7[0] = 2.0;

        $r7[1] = -2.0;

        $r7[2] = 0.0;

        $r7[3] = 0.0;

        $r7[4] = 1.0;

        $r7[5] = 1.0;

        $r7[6] = 0.0;

        $r7[7] = 0.0;

        $r7[8] = 0.0;

        $r7[9] = 0.0;

        $r7[10] = 0.0;

        $r7[11] = 0.0;

        $r7[12] = 0.0;

        $r7[13] = 0.0;

        $r7[14] = 0.0;

        $r7[15] = 0.0;

        $r8[3] = $r7;

        $r10 = <com.opengamma.analytics.math.interpolation.BicubicSplineInterpolator: double[][] s_invMat>;

        $r9 = newarray (double)[16];

        $r9[0] = 0.0;

        $r9[1] = 0.0;

        $r9[2] = 0.0;

        $r9[3] = 0.0;

        $r9[4] = 0.0;

        $r9[5] = 0.0;

        $r9[6] = 0.0;

        $r9[7] = 0.0;

        $r9[8] = 1.0;

        $r9[9] = 0.0;

        $r9[10] = 0.0;

        $r9[11] = 0.0;

        $r9[12] = 0.0;

        $r9[13] = 0.0;

        $r9[14] = 0.0;

        $r9[15] = 0.0;

        $r10[4] = $r9;

        $r12 = <com.opengamma.analytics.math.interpolation.BicubicSplineInterpolator: double[][] s_invMat>;

        $r11 = newarray (double)[16];

        $r11[0] = 0.0;

        $r11[1] = 0.0;

        $r11[2] = 0.0;

        $r11[3] = 0.0;

        $r11[4] = 0.0;

        $r11[5] = 0.0;

        $r11[6] = 0.0;

        $r11[7] = 0.0;

        $r11[8] = 0.0;

        $r11[9] = 0.0;

        $r11[10] = 0.0;

        $r11[11] = 0.0;

        $r11[12] = 1.0;

        $r11[13] = 0.0;

        $r11[14] = 0.0;

        $r11[15] = 0.0;

        $r12[5] = $r11;

        $r14 = <com.opengamma.analytics.math.interpolation.BicubicSplineInterpolator: double[][] s_invMat>;

        $r13 = newarray (double)[16];

        $r13[0] = 0.0;

        $r13[1] = 0.0;

        $r13[2] = 0.0;

        $r13[3] = 0.0;

        $r13[4] = 0.0;

        $r13[5] = 0.0;

        $r13[6] = 0.0;

        $r13[7] = 0.0;

        $r13[8] = -3.0;

        $r13[9] = 3.0;

        $r13[10] = 0.0;

        $r13[11] = 0.0;

        $r13[12] = -2.0;

        $r13[13] = -1.0;

        $r13[14] = 0.0;

        $r13[15] = 0.0;

        $r14[6] = $r13;

        $r16 = <com.opengamma.analytics.math.interpolation.BicubicSplineInterpolator: double[][] s_invMat>;

        $r15 = newarray (double)[16];

        $r15[0] = 0.0;

        $r15[1] = 0.0;

        $r15[2] = 0.0;

        $r15[3] = 0.0;

        $r15[4] = 0.0;

        $r15[5] = 0.0;

        $r15[6] = 0.0;

        $r15[7] = 0.0;

        $r15[8] = 2.0;

        $r15[9] = -2.0;

        $r15[10] = 0.0;

        $r15[11] = 0.0;

        $r15[12] = 1.0;

        $r15[13] = 1.0;

        $r15[14] = 0.0;

        $r15[15] = 0.0;

        $r16[7] = $r15;

        $r18 = <com.opengamma.analytics.math.interpolation.BicubicSplineInterpolator: double[][] s_invMat>;

        $r17 = newarray (double)[16];

        $r17[0] = -3.0;

        $r17[1] = 0.0;

        $r17[2] = 3.0;

        $r17[3] = 0.0;

        $r17[4] = 0.0;

        $r17[5] = 0.0;

        $r17[6] = 0.0;

        $r17[7] = 0.0;

        $r17[8] = -2.0;

        $r17[9] = 0.0;

        $r17[10] = -1.0;

        $r17[11] = 0.0;

        $r17[12] = 0.0;

        $r17[13] = 0.0;

        $r17[14] = 0.0;

        $r17[15] = 0.0;

        $r18[8] = $r17;

        $r20 = <com.opengamma.analytics.math.interpolation.BicubicSplineInterpolator: double[][] s_invMat>;

        $r19 = newarray (double)[16];

        $r19[0] = 0.0;

        $r19[1] = 0.0;

        $r19[2] = 0.0;

        $r19[3] = 0.0;

        $r19[4] = -3.0;

        $r19[5] = 0.0;

        $r19[6] = 3.0;

        $r19[7] = 0.0;

        $r19[8] = 0.0;

        $r19[9] = 0.0;

        $r19[10] = 0.0;

        $r19[11] = 0.0;

        $r19[12] = -2.0;

        $r19[13] = 0.0;

        $r19[14] = -1.0;

        $r19[15] = 0.0;

        $r20[9] = $r19;

        $r22 = <com.opengamma.analytics.math.interpolation.BicubicSplineInterpolator: double[][] s_invMat>;

        $r21 = newarray (double)[16];

        $r21[0] = 9.0;

        $r21[1] = -9.0;

        $r21[2] = -9.0;

        $r21[3] = 9.0;

        $r21[4] = 6.0;

        $r21[5] = 3.0;

        $r21[6] = -6.0;

        $r21[7] = -3.0;

        $r21[8] = 6.0;

        $r21[9] = -6.0;

        $r21[10] = 3.0;

        $r21[11] = -3.0;

        $r21[12] = 4.0;

        $r21[13] = 2.0;

        $r21[14] = 2.0;

        $r21[15] = 1.0;

        $r22[10] = $r21;

        $r24 = <com.opengamma.analytics.math.interpolation.BicubicSplineInterpolator: double[][] s_invMat>;

        $r23 = newarray (double)[16];

        $r23[0] = -6.0;

        $r23[1] = 6.0;

        $r23[2] = 6.0;

        $r23[3] = -6.0;

        $r23[4] = -3.0;

        $r23[5] = -3.0;

        $r23[6] = 3.0;

        $r23[7] = 3.0;

        $r23[8] = -4.0;

        $r23[9] = 4.0;

        $r23[10] = -2.0;

        $r23[11] = 2.0;

        $r23[12] = -2.0;

        $r23[13] = -2.0;

        $r23[14] = -1.0;

        $r23[15] = -1.0;

        $r24[11] = $r23;

        $r26 = <com.opengamma.analytics.math.interpolation.BicubicSplineInterpolator: double[][] s_invMat>;

        $r25 = newarray (double)[16];

        $r25[0] = 2.0;

        $r25[1] = 0.0;

        $r25[2] = -2.0;

        $r25[3] = 0.0;

        $r25[4] = 0.0;

        $r25[5] = 0.0;

        $r25[6] = 0.0;

        $r25[7] = 0.0;

        $r25[8] = 1.0;

        $r25[9] = 0.0;

        $r25[10] = 1.0;

        $r25[11] = 0.0;

        $r25[12] = 0.0;

        $r25[13] = 0.0;

        $r25[14] = 0.0;

        $r25[15] = 0.0;

        $r26[12] = $r25;

        $r28 = <com.opengamma.analytics.math.interpolation.BicubicSplineInterpolator: double[][] s_invMat>;

        $r27 = newarray (double)[16];

        $r27[0] = 0.0;

        $r27[1] = 0.0;

        $r27[2] = 0.0;

        $r27[3] = 0.0;

        $r27[4] = 2.0;

        $r27[5] = 0.0;

        $r27[6] = -2.0;

        $r27[7] = 0.0;

        $r27[8] = 0.0;

        $r27[9] = 0.0;

        $r27[10] = 0.0;

        $r27[11] = 0.0;

        $r27[12] = 1.0;

        $r27[13] = 0.0;

        $r27[14] = 1.0;

        $r27[15] = 0.0;

        $r28[13] = $r27;

        $r30 = <com.opengamma.analytics.math.interpolation.BicubicSplineInterpolator: double[][] s_invMat>;

        $r29 = newarray (double)[16];

        $r29[0] = -6.0;

        $r29[1] = 6.0;

        $r29[2] = 6.0;

        $r29[3] = -6.0;

        $r29[4] = -4.0;

        $r29[5] = -2.0;

        $r29[6] = 4.0;

        $r29[7] = 2.0;

        $r29[8] = -3.0;

        $r29[9] = 3.0;

        $r29[10] = -3.0;

        $r29[11] = 3.0;

        $r29[12] = -2.0;

        $r29[13] = -1.0;

        $r29[14] = -2.0;

        $r29[15] = -1.0;

        $r30[14] = $r29;

        $r32 = <com.opengamma.analytics.math.interpolation.BicubicSplineInterpolator: double[][] s_invMat>;

        $r31 = newarray (double)[16];

        $r31[0] = 4.0;

        $r31[1] = -4.0;

        $r31[2] = -4.0;

        $r31[3] = 4.0;

        $r31[4] = 2.0;

        $r31[5] = 2.0;

        $r31[6] = -2.0;

        $r31[7] = -2.0;

        $r31[8] = 2.0;

        $r31[9] = -2.0;

        $r31[10] = 2.0;

        $r31[11] = -2.0;

        $r31[12] = 1.0;

        $r31[13] = 1.0;

        $r31[14] = 1.0;

        $r31[15] = 1.0;

        $r32[15] = $r31;

        return;
    }
}
