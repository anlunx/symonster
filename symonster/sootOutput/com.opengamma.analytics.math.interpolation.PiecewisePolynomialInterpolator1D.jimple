public abstract class com.opengamma.analytics.math.interpolation.PiecewisePolynomialInterpolator1D extends com.opengamma.analytics.math.interpolation.Interpolator1D
{
    private static final long serialVersionUID;
    private com.opengamma.analytics.math.interpolation.PiecewisePolynomialInterpolator _baseMethod;
    private static final com.opengamma.analytics.math.function.PiecewisePolynomialWithSensitivityFunction1D FUNC;

    public void <init>(com.opengamma.analytics.math.interpolation.PiecewisePolynomialInterpolator)
    {
        com.opengamma.analytics.math.interpolation.PiecewisePolynomialInterpolator1D r0;
        com.opengamma.analytics.math.interpolation.PiecewisePolynomialInterpolator r1;

        r0 := @this: com.opengamma.analytics.math.interpolation.PiecewisePolynomialInterpolator1D;

        r1 := @parameter0: com.opengamma.analytics.math.interpolation.PiecewisePolynomialInterpolator;

        specialinvoke r0.<com.opengamma.analytics.math.interpolation.Interpolator1D: void <init>()>();

        r0.<com.opengamma.analytics.math.interpolation.PiecewisePolynomialInterpolator1D: com.opengamma.analytics.math.interpolation.PiecewisePolynomialInterpolator _baseMethod> = r1;

        return;
    }

    public java.lang.Double interpolate(com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle, java.lang.Double)
    {
        com.opengamma.analytics.math.interpolation.PiecewisePolynomialInterpolator1D r0;
        com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle r1;
        java.lang.Double r2, $r8;
        com.opengamma.analytics.math.interpolation.data.Interpolator1DPiecewisePoynomialDataBundle r3;
        com.opengamma.analytics.math.matrix.DoubleMatrix1D r4;
        boolean $z0;
        com.opengamma.analytics.math.function.PiecewisePolynomialWithSensitivityFunction1D $r5;
        com.opengamma.analytics.math.interpolation.PiecewisePolynomialResultsWithSensitivity $r6;
        double $d0;
        int[] $r7;

        r0 := @this: com.opengamma.analytics.math.interpolation.PiecewisePolynomialInterpolator1D;

        r1 := @parameter0: com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle;

        r2 := @parameter1: java.lang.Double;

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object,java.lang.String)>(r2, "value");

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object,java.lang.String)>(r1, "data bundle");

        $z0 = r1 instanceof com.opengamma.analytics.math.interpolation.data.Interpolator1DPiecewisePoynomialDataBundle;

        staticinvoke <org.apache.commons.lang.Validate: void isTrue(boolean)>($z0);

        r3 = (com.opengamma.analytics.math.interpolation.data.Interpolator1DPiecewisePoynomialDataBundle) r1;

        $r5 = <com.opengamma.analytics.math.interpolation.PiecewisePolynomialInterpolator1D: com.opengamma.analytics.math.function.PiecewisePolynomialWithSensitivityFunction1D FUNC>;

        $r6 = virtualinvoke r3.<com.opengamma.analytics.math.interpolation.data.Interpolator1DPiecewisePoynomialDataBundle: com.opengamma.analytics.math.interpolation.PiecewisePolynomialResultsWithSensitivity getPiecewisePolynomialResultsWithSensitivity()>();

        $d0 = virtualinvoke r2.<java.lang.Double: double doubleValue()>();

        r4 = virtualinvoke $r5.<com.opengamma.analytics.math.function.PiecewisePolynomialWithSensitivityFunction1D: com.opengamma.analytics.math.matrix.DoubleMatrix1D evaluate(com.opengamma.analytics.math.interpolation.PiecewisePolynomialResult,double)>($r6, $d0);

        $r7 = newarray (int)[1];

        $r7[0] = 0;

        $r8 = virtualinvoke r4.<com.opengamma.analytics.math.matrix.DoubleMatrix1D: java.lang.Double getEntry(int[])>($r7);

        return $r8;
    }

    public double firstDerivative(com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle, java.lang.Double)
    {
        com.opengamma.analytics.math.interpolation.PiecewisePolynomialInterpolator1D r0;
        com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle r1;
        java.lang.Double r2, $r8;
        com.opengamma.analytics.math.interpolation.data.Interpolator1DPiecewisePoynomialDataBundle r3;
        com.opengamma.analytics.math.matrix.DoubleMatrix1D r4;
        boolean $z0;
        com.opengamma.analytics.math.function.PiecewisePolynomialWithSensitivityFunction1D $r5;
        com.opengamma.analytics.math.interpolation.PiecewisePolynomialResultsWithSensitivity $r6;
        double $d0, $d1;
        int[] $r7;

        r0 := @this: com.opengamma.analytics.math.interpolation.PiecewisePolynomialInterpolator1D;

        r1 := @parameter0: com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle;

        r2 := @parameter1: java.lang.Double;

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object,java.lang.String)>(r2, "value");

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object,java.lang.String)>(r1, "data bundle");

        $z0 = r1 instanceof com.opengamma.analytics.math.interpolation.data.Interpolator1DPiecewisePoynomialDataBundle;

        staticinvoke <org.apache.commons.lang.Validate: void isTrue(boolean)>($z0);

        r3 = (com.opengamma.analytics.math.interpolation.data.Interpolator1DPiecewisePoynomialDataBundle) r1;

        $r5 = <com.opengamma.analytics.math.interpolation.PiecewisePolynomialInterpolator1D: com.opengamma.analytics.math.function.PiecewisePolynomialWithSensitivityFunction1D FUNC>;

        $r6 = virtualinvoke r3.<com.opengamma.analytics.math.interpolation.data.Interpolator1DPiecewisePoynomialDataBundle: com.opengamma.analytics.math.interpolation.PiecewisePolynomialResultsWithSensitivity getPiecewisePolynomialResultsWithSensitivity()>();

        $d0 = virtualinvoke r2.<java.lang.Double: double doubleValue()>();

        r4 = virtualinvoke $r5.<com.opengamma.analytics.math.function.PiecewisePolynomialWithSensitivityFunction1D: com.opengamma.analytics.math.matrix.DoubleMatrix1D differentiate(com.opengamma.analytics.math.interpolation.PiecewisePolynomialResult,double)>($r6, $d0);

        $r7 = newarray (int)[1];

        $r7[0] = 0;

        $r8 = virtualinvoke r4.<com.opengamma.analytics.math.matrix.DoubleMatrix1D: java.lang.Double getEntry(int[])>($r7);

        $d1 = virtualinvoke $r8.<java.lang.Double: double doubleValue()>();

        return $d1;
    }

    public double[] getNodeSensitivitiesForValue(com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle, java.lang.Double)
    {
        com.opengamma.analytics.math.interpolation.PiecewisePolynomialInterpolator1D r0;
        com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle r1;
        java.lang.Double r2;
        com.opengamma.analytics.math.interpolation.data.Interpolator1DPiecewisePoynomialDataBundle r3;
        com.opengamma.analytics.math.matrix.DoubleMatrix1D r4;
        boolean $z0;
        com.opengamma.analytics.math.function.PiecewisePolynomialWithSensitivityFunction1D $r5;
        com.opengamma.analytics.math.interpolation.PiecewisePolynomialResultsWithSensitivity $r6;
        double $d0;
        double[] $r7;

        r0 := @this: com.opengamma.analytics.math.interpolation.PiecewisePolynomialInterpolator1D;

        r1 := @parameter0: com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle;

        r2 := @parameter1: java.lang.Double;

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object,java.lang.String)>(r2, "value");

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object,java.lang.String)>(r1, "data bundle");

        $z0 = r1 instanceof com.opengamma.analytics.math.interpolation.data.Interpolator1DPiecewisePoynomialDataBundle;

        staticinvoke <org.apache.commons.lang.Validate: void isTrue(boolean)>($z0);

        r3 = (com.opengamma.analytics.math.interpolation.data.Interpolator1DPiecewisePoynomialDataBundle) r1;

        $r5 = <com.opengamma.analytics.math.interpolation.PiecewisePolynomialInterpolator1D: com.opengamma.analytics.math.function.PiecewisePolynomialWithSensitivityFunction1D FUNC>;

        $r6 = virtualinvoke r3.<com.opengamma.analytics.math.interpolation.data.Interpolator1DPiecewisePoynomialDataBundle: com.opengamma.analytics.math.interpolation.PiecewisePolynomialResultsWithSensitivity getPiecewisePolynomialResultsWithSensitivity()>();

        $d0 = virtualinvoke r2.<java.lang.Double: double doubleValue()>();

        r4 = virtualinvoke $r5.<com.opengamma.analytics.math.function.PiecewisePolynomialWithSensitivityFunction1D: com.opengamma.analytics.math.matrix.DoubleMatrix1D nodeSensitivity(com.opengamma.analytics.math.interpolation.PiecewisePolynomialResultsWithSensitivity,double)>($r6, $d0);

        $r7 = virtualinvoke r4.<com.opengamma.analytics.math.matrix.DoubleMatrix1D: double[] getData()>();

        return $r7;
    }

    public com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle getDataBundle(double[], double[])
    {
        com.opengamma.analytics.math.interpolation.PiecewisePolynomialInterpolator1D r0;
        double[] r1, r2;
        com.opengamma.analytics.math.interpolation.data.Interpolator1DPiecewisePoynomialDataBundle $r3;
        com.opengamma.analytics.math.interpolation.data.ArrayInterpolator1DDataBundle $r4;
        com.opengamma.analytics.math.interpolation.PiecewisePolynomialInterpolator $r5;

        r0 := @this: com.opengamma.analytics.math.interpolation.PiecewisePolynomialInterpolator1D;

        r1 := @parameter0: double[];

        r2 := @parameter1: double[];

        $r3 = new com.opengamma.analytics.math.interpolation.data.Interpolator1DPiecewisePoynomialDataBundle;

        $r4 = new com.opengamma.analytics.math.interpolation.data.ArrayInterpolator1DDataBundle;

        specialinvoke $r4.<com.opengamma.analytics.math.interpolation.data.ArrayInterpolator1DDataBundle: void <init>(double[],double[],boolean)>(r1, r2, 0);

        $r5 = r0.<com.opengamma.analytics.math.interpolation.PiecewisePolynomialInterpolator1D: com.opengamma.analytics.math.interpolation.PiecewisePolynomialInterpolator _baseMethod>;

        specialinvoke $r3.<com.opengamma.analytics.math.interpolation.data.Interpolator1DPiecewisePoynomialDataBundle: void <init>(com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle,com.opengamma.analytics.math.interpolation.PiecewisePolynomialInterpolator)>($r4, $r5);

        return $r3;
    }

    public com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle getDataBundle(double[], double[], double, double)
    {
        com.opengamma.analytics.math.interpolation.PiecewisePolynomialInterpolator1D r0;
        double[] r1, r2;
        double d0, d1;
        com.opengamma.analytics.math.interpolation.PiecewisePolynomialInterpolator $r3, $r4, $r7;
        boolean $z0;
        com.opengamma.analytics.math.interpolation.data.Interpolator1DPiecewisePoynomialDataBundle $r5;
        com.opengamma.analytics.math.interpolation.data.ArrayInterpolator1DDataBundle $r6;
        java.lang.IllegalArgumentException $r8;

        r0 := @this: com.opengamma.analytics.math.interpolation.PiecewisePolynomialInterpolator1D;

        r1 := @parameter0: double[];

        r2 := @parameter1: double[];

        d0 := @parameter2: double;

        d1 := @parameter3: double;

        $r3 = r0.<com.opengamma.analytics.math.interpolation.PiecewisePolynomialInterpolator1D: com.opengamma.analytics.math.interpolation.PiecewisePolynomialInterpolator _baseMethod>;

        $r4 = virtualinvoke $r3.<com.opengamma.analytics.math.interpolation.PiecewisePolynomialInterpolator: com.opengamma.analytics.math.interpolation.PiecewisePolynomialInterpolator getPrimaryMethod()>();

        $z0 = $r4 instanceof com.opengamma.analytics.math.interpolation.CubicSplineInterpolator;

        if $z0 != 0 goto label1;

        $r8 = new java.lang.IllegalArgumentException;

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("No degrees of freedom at endpoints for this interpolation method");

        throw $r8;

     label1:
        $r5 = new com.opengamma.analytics.math.interpolation.data.Interpolator1DPiecewisePoynomialDataBundle;

        $r6 = new com.opengamma.analytics.math.interpolation.data.ArrayInterpolator1DDataBundle;

        specialinvoke $r6.<com.opengamma.analytics.math.interpolation.data.ArrayInterpolator1DDataBundle: void <init>(double[],double[],boolean)>(r1, r2, 0);

        $r7 = r0.<com.opengamma.analytics.math.interpolation.PiecewisePolynomialInterpolator1D: com.opengamma.analytics.math.interpolation.PiecewisePolynomialInterpolator _baseMethod>;

        specialinvoke $r5.<com.opengamma.analytics.math.interpolation.data.Interpolator1DPiecewisePoynomialDataBundle: void <init>(com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle,com.opengamma.analytics.math.interpolation.PiecewisePolynomialInterpolator,double,double)>($r6, $r7, d0, d1);

        return $r5;
    }

    public com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle getDataBundleFromSortedArrays(double[], double[])
    {
        com.opengamma.analytics.math.interpolation.PiecewisePolynomialInterpolator1D r0;
        double[] r1, r2;
        com.opengamma.analytics.math.interpolation.data.Interpolator1DPiecewisePoynomialDataBundle $r3;
        com.opengamma.analytics.math.interpolation.data.ArrayInterpolator1DDataBundle $r4;
        com.opengamma.analytics.math.interpolation.PiecewisePolynomialInterpolator $r5;

        r0 := @this: com.opengamma.analytics.math.interpolation.PiecewisePolynomialInterpolator1D;

        r1 := @parameter0: double[];

        r2 := @parameter1: double[];

        $r3 = new com.opengamma.analytics.math.interpolation.data.Interpolator1DPiecewisePoynomialDataBundle;

        $r4 = new com.opengamma.analytics.math.interpolation.data.ArrayInterpolator1DDataBundle;

        specialinvoke $r4.<com.opengamma.analytics.math.interpolation.data.ArrayInterpolator1DDataBundle: void <init>(double[],double[],boolean)>(r1, r2, 1);

        $r5 = r0.<com.opengamma.analytics.math.interpolation.PiecewisePolynomialInterpolator1D: com.opengamma.analytics.math.interpolation.PiecewisePolynomialInterpolator _baseMethod>;

        specialinvoke $r3.<com.opengamma.analytics.math.interpolation.data.Interpolator1DPiecewisePoynomialDataBundle: void <init>(com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle,com.opengamma.analytics.math.interpolation.PiecewisePolynomialInterpolator)>($r4, $r5);

        return $r3;
    }

    public com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle getDataBundleFromSortedArrays(double[], double[], double, double)
    {
        com.opengamma.analytics.math.interpolation.PiecewisePolynomialInterpolator1D r0;
        double[] r1, r2;
        double d0, d1;
        com.opengamma.analytics.math.interpolation.PiecewisePolynomialInterpolator $r3, $r4, $r7;
        boolean $z0;
        com.opengamma.analytics.math.interpolation.data.Interpolator1DPiecewisePoynomialDataBundle $r5;
        com.opengamma.analytics.math.interpolation.data.ArrayInterpolator1DDataBundle $r6;
        java.lang.IllegalArgumentException $r8;

        r0 := @this: com.opengamma.analytics.math.interpolation.PiecewisePolynomialInterpolator1D;

        r1 := @parameter0: double[];

        r2 := @parameter1: double[];

        d0 := @parameter2: double;

        d1 := @parameter3: double;

        $r3 = r0.<com.opengamma.analytics.math.interpolation.PiecewisePolynomialInterpolator1D: com.opengamma.analytics.math.interpolation.PiecewisePolynomialInterpolator _baseMethod>;

        $r4 = virtualinvoke $r3.<com.opengamma.analytics.math.interpolation.PiecewisePolynomialInterpolator: com.opengamma.analytics.math.interpolation.PiecewisePolynomialInterpolator getPrimaryMethod()>();

        $z0 = $r4 instanceof com.opengamma.analytics.math.interpolation.CubicSplineInterpolator;

        if $z0 != 0 goto label1;

        $r8 = new java.lang.IllegalArgumentException;

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("No degrees of freedom at endpoints for this interpolation method");

        throw $r8;

     label1:
        $r5 = new com.opengamma.analytics.math.interpolation.data.Interpolator1DPiecewisePoynomialDataBundle;

        $r6 = new com.opengamma.analytics.math.interpolation.data.ArrayInterpolator1DDataBundle;

        specialinvoke $r6.<com.opengamma.analytics.math.interpolation.data.ArrayInterpolator1DDataBundle: void <init>(double[],double[],boolean)>(r1, r2, 1);

        $r7 = r0.<com.opengamma.analytics.math.interpolation.PiecewisePolynomialInterpolator1D: com.opengamma.analytics.math.interpolation.PiecewisePolynomialInterpolator _baseMethod>;

        specialinvoke $r5.<com.opengamma.analytics.math.interpolation.data.Interpolator1DPiecewisePoynomialDataBundle: void <init>(com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle,com.opengamma.analytics.math.interpolation.PiecewisePolynomialInterpolator,double,double)>($r6, $r7, d0, d1);

        return $r5;
    }

    public com.opengamma.analytics.math.interpolation.PiecewisePolynomialInterpolator getInterpolator()
    {
        com.opengamma.analytics.math.interpolation.PiecewisePolynomialInterpolator1D r0;
        com.opengamma.analytics.math.interpolation.PiecewisePolynomialInterpolator $r1;

        r0 := @this: com.opengamma.analytics.math.interpolation.PiecewisePolynomialInterpolator1D;

        $r1 = r0.<com.opengamma.analytics.math.interpolation.PiecewisePolynomialInterpolator1D: com.opengamma.analytics.math.interpolation.PiecewisePolynomialInterpolator _baseMethod>;

        return $r1;
    }

    public volatile java.lang.Double interpolate(java.lang.Object, java.lang.Object)
    {
        com.opengamma.analytics.math.interpolation.PiecewisePolynomialInterpolator1D r0;
        java.lang.Object r1, r2;
        java.lang.Double $r3, $r5;
        com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle $r4;

        r0 := @this: com.opengamma.analytics.math.interpolation.PiecewisePolynomialInterpolator1D;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r4 = (com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle) r1;

        $r3 = (java.lang.Double) r2;

        $r5 = virtualinvoke r0.<com.opengamma.analytics.math.interpolation.PiecewisePolynomialInterpolator1D: java.lang.Double interpolate(com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle,java.lang.Double)>($r4, $r3);

        return $r5;
    }

    static void <clinit>()
    {
        com.opengamma.analytics.math.function.PiecewisePolynomialWithSensitivityFunction1D $r0;

        <com.opengamma.analytics.math.interpolation.PiecewisePolynomialInterpolator1D: long serialVersionUID> = 1L;

        $r0 = new com.opengamma.analytics.math.function.PiecewisePolynomialWithSensitivityFunction1D;

        specialinvoke $r0.<com.opengamma.analytics.math.function.PiecewisePolynomialWithSensitivityFunction1D: void <init>()>();

        <com.opengamma.analytics.math.interpolation.PiecewisePolynomialInterpolator1D: com.opengamma.analytics.math.function.PiecewisePolynomialWithSensitivityFunction1D FUNC> = $r0;

        return;
    }
}
