public abstract class org.apache.commons.math3.analysis.solvers.AbstractDifferentiableUnivariateSolver extends org.apache.commons.math3.analysis.solvers.BaseAbstractUnivariateSolver implements org.apache.commons.math3.analysis.solvers.DifferentiableUnivariateSolver
{
    private org.apache.commons.math3.analysis.UnivariateFunction functionDerivative;

    protected void <init>(double)
    {
        org.apache.commons.math3.analysis.solvers.AbstractDifferentiableUnivariateSolver r0;
        double d0;

        r0 := @this: org.apache.commons.math3.analysis.solvers.AbstractDifferentiableUnivariateSolver;

        d0 := @parameter0: double;

        specialinvoke r0.<org.apache.commons.math3.analysis.solvers.BaseAbstractUnivariateSolver: void <init>(double)>(d0);

        return;
    }

    protected void <init>(double, double, double)
    {
        org.apache.commons.math3.analysis.solvers.AbstractDifferentiableUnivariateSolver r0;
        double d0, d1, d2;

        r0 := @this: org.apache.commons.math3.analysis.solvers.AbstractDifferentiableUnivariateSolver;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        d2 := @parameter2: double;

        specialinvoke r0.<org.apache.commons.math3.analysis.solvers.BaseAbstractUnivariateSolver: void <init>(double,double,double)>(d0, d1, d2);

        return;
    }

    protected double computeDerivativeObjectiveValue(double) throws org.apache.commons.math3.exception.TooManyEvaluationsException
    {
        org.apache.commons.math3.analysis.solvers.AbstractDifferentiableUnivariateSolver r0;
        double d0, $d1;
        org.apache.commons.math3.analysis.UnivariateFunction $r1;

        r0 := @this: org.apache.commons.math3.analysis.solvers.AbstractDifferentiableUnivariateSolver;

        d0 := @parameter0: double;

        virtualinvoke r0.<org.apache.commons.math3.analysis.solvers.AbstractDifferentiableUnivariateSolver: void incrementEvaluationCount()>();

        $r1 = r0.<org.apache.commons.math3.analysis.solvers.AbstractDifferentiableUnivariateSolver: org.apache.commons.math3.analysis.UnivariateFunction functionDerivative>;

        $d1 = interfaceinvoke $r1.<org.apache.commons.math3.analysis.UnivariateFunction: double value(double)>(d0);

        return $d1;
    }

    protected void setup(int, org.apache.commons.math3.analysis.DifferentiableUnivariateFunction, double, double, double)
    {
        org.apache.commons.math3.analysis.solvers.AbstractDifferentiableUnivariateSolver r0;
        int i0;
        org.apache.commons.math3.analysis.DifferentiableUnivariateFunction r1;
        double d0, d1, d2;
        org.apache.commons.math3.analysis.UnivariateFunction $r2;

        r0 := @this: org.apache.commons.math3.analysis.solvers.AbstractDifferentiableUnivariateSolver;

        i0 := @parameter0: int;

        r1 := @parameter1: org.apache.commons.math3.analysis.DifferentiableUnivariateFunction;

        d0 := @parameter2: double;

        d1 := @parameter3: double;

        d2 := @parameter4: double;

        specialinvoke r0.<org.apache.commons.math3.analysis.solvers.BaseAbstractUnivariateSolver: void setup(int,org.apache.commons.math3.analysis.UnivariateFunction,double,double,double)>(i0, r1, d0, d1, d2);

        $r2 = interfaceinvoke r1.<org.apache.commons.math3.analysis.DifferentiableUnivariateFunction: org.apache.commons.math3.analysis.UnivariateFunction derivative()>();

        r0.<org.apache.commons.math3.analysis.solvers.AbstractDifferentiableUnivariateSolver: org.apache.commons.math3.analysis.UnivariateFunction functionDerivative> = $r2;

        return;
    }

    protected volatile void setup(int, org.apache.commons.math3.analysis.UnivariateFunction, double, double, double) throws org.apache.commons.math3.exception.NullArgumentException
    {
        org.apache.commons.math3.analysis.solvers.AbstractDifferentiableUnivariateSolver r0;
        int i0;
        org.apache.commons.math3.analysis.UnivariateFunction r1;
        double d0, d1, d2;
        org.apache.commons.math3.analysis.DifferentiableUnivariateFunction $r2;

        r0 := @this: org.apache.commons.math3.analysis.solvers.AbstractDifferentiableUnivariateSolver;

        i0 := @parameter0: int;

        r1 := @parameter1: org.apache.commons.math3.analysis.UnivariateFunction;

        d0 := @parameter2: double;

        d1 := @parameter3: double;

        d2 := @parameter4: double;

        $r2 = (org.apache.commons.math3.analysis.DifferentiableUnivariateFunction) r1;

        virtualinvoke r0.<org.apache.commons.math3.analysis.solvers.AbstractDifferentiableUnivariateSolver: void setup(int,org.apache.commons.math3.analysis.DifferentiableUnivariateFunction,double,double,double)>(i0, $r2, d0, d1, d2);

        return;
    }
}
