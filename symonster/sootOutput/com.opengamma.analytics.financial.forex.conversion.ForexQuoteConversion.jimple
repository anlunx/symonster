public class com.opengamma.analytics.financial.forex.conversion.ForexQuoteConversion extends java.lang.Object
{
    private final double _domPips;
    private final double _s0;
    private final double _k;
    private final double _nd;
    private final double _nf;
    private final double _pcForeign;
    private final double _pcDom;
    private final double _foreignPips;
    private final double _absDom;
    private final double _absForeign;

    public void <init>(double, double, double, double, double)
    {
        com.opengamma.analytics.financial.forex.conversion.ForexQuoteConversion r0;
        double d0, d1, d2, d3, d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16;
        byte $b0, $b1, $b2, $b3, $b4;
        java.lang.Object[] $r1, $r3, $r5, $r7;
        java.lang.Double $r2, $r4, $r6, $r8;
        boolean $z0, $z1, $z2, $z3, $z4;

        r0 := @this: com.opengamma.analytics.financial.forex.conversion.ForexQuoteConversion;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        d2 := @parameter2: double;

        d3 := @parameter3: double;

        d4 := @parameter4: double;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $b0 = d0 cmpl 0.0;

        if $b0 < 0 goto label01;

        $z0 = 1;

        goto label02;

     label01:
        $z0 = 0;

     label02:
        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z0, "Negative price given");

        $b1 = d1 cmpl 0.0;

        if $b1 <= 0 goto label03;

        $z1 = 1;

        goto label04;

     label03:
        $z1 = 0;

     label04:
        $r1 = newarray (java.lang.Object)[1];

        $r2 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d1);

        $r1[0] = $r2;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String,java.lang.Object[])>($z1, "Spot rate must be greater than zero. value gvien is {}", $r1);

        $b2 = d2 cmpl 0.0;

        if $b2 <= 0 goto label05;

        $z2 = 1;

        goto label06;

     label05:
        $z2 = 0;

     label06:
        $r3 = newarray (java.lang.Object)[1];

        $r4 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d2);

        $r3[0] = $r4;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String,java.lang.Object[])>($z2, "Strike  must be greater than zero. value gvien is {}", $r3);

        $b3 = d3 cmpl 0.0;

        if $b3 <= 0 goto label07;

        $z3 = 1;

        goto label08;

     label07:
        $z3 = 0;

     label08:
        $r5 = newarray (java.lang.Object)[1];

        $r6 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d3);

        $r5[0] = $r6;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String,java.lang.Object[])>($z3, "Domestic Notional must be greater than zero. value gvien is {}", $r5);

        $b4 = d4 cmpl 0.0;

        if $b4 <= 0 goto label09;

        $z4 = 1;

        goto label10;

     label09:
        $z4 = 0;

     label10:
        $r7 = newarray (java.lang.Object)[1];

        $r8 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d4);

        $r7[0] = $r8;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String,java.lang.Object[])>($z4, "Foreign Notional must be greater than zero. value gvien is {}", $r7);

        r0.<com.opengamma.analytics.financial.forex.conversion.ForexQuoteConversion: double _domPips> = d0;

        r0.<com.opengamma.analytics.financial.forex.conversion.ForexQuoteConversion: double _s0> = d1;

        r0.<com.opengamma.analytics.financial.forex.conversion.ForexQuoteConversion: double _k> = d2;

        r0.<com.opengamma.analytics.financial.forex.conversion.ForexQuoteConversion: double _nd> = d3;

        r0.<com.opengamma.analytics.financial.forex.conversion.ForexQuoteConversion: double _nf> = d4;

        $d5 = r0.<com.opengamma.analytics.financial.forex.conversion.ForexQuoteConversion: double _s0>;

        $d6 = d0 / $d5;

        r0.<com.opengamma.analytics.financial.forex.conversion.ForexQuoteConversion: double _pcForeign> = $d6;

        $d7 = r0.<com.opengamma.analytics.financial.forex.conversion.ForexQuoteConversion: double _k>;

        $d8 = d0 / $d7;

        r0.<com.opengamma.analytics.financial.forex.conversion.ForexQuoteConversion: double _pcDom> = $d8;

        $d10 = r0.<com.opengamma.analytics.financial.forex.conversion.ForexQuoteConversion: double _pcForeign>;

        $d9 = r0.<com.opengamma.analytics.financial.forex.conversion.ForexQuoteConversion: double _k>;

        $d11 = $d10 / $d9;

        r0.<com.opengamma.analytics.financial.forex.conversion.ForexQuoteConversion: double _foreignPips> = $d11;

        $d12 = r0.<com.opengamma.analytics.financial.forex.conversion.ForexQuoteConversion: double _nd>;

        $d13 = $d12 * d0;

        r0.<com.opengamma.analytics.financial.forex.conversion.ForexQuoteConversion: double _absDom> = $d13;

        $d15 = r0.<com.opengamma.analytics.financial.forex.conversion.ForexQuoteConversion: double _nf>;

        $d14 = r0.<com.opengamma.analytics.financial.forex.conversion.ForexQuoteConversion: double _pcForeign>;

        $d16 = $d15 * $d14;

        r0.<com.opengamma.analytics.financial.forex.conversion.ForexQuoteConversion: double _absForeign> = $d16;

        return;
    }

    public double getDomesticPips()
    {
        com.opengamma.analytics.financial.forex.conversion.ForexQuoteConversion r0;
        double $d0;

        r0 := @this: com.opengamma.analytics.financial.forex.conversion.ForexQuoteConversion;

        $d0 = r0.<com.opengamma.analytics.financial.forex.conversion.ForexQuoteConversion: double _domPips>;

        return $d0;
    }

    public double getPcForeign()
    {
        com.opengamma.analytics.financial.forex.conversion.ForexQuoteConversion r0;
        double $d0;

        r0 := @this: com.opengamma.analytics.financial.forex.conversion.ForexQuoteConversion;

        $d0 = r0.<com.opengamma.analytics.financial.forex.conversion.ForexQuoteConversion: double _pcForeign>;

        return $d0;
    }

    public double getPcDom()
    {
        com.opengamma.analytics.financial.forex.conversion.ForexQuoteConversion r0;
        double $d0;

        r0 := @this: com.opengamma.analytics.financial.forex.conversion.ForexQuoteConversion;

        $d0 = r0.<com.opengamma.analytics.financial.forex.conversion.ForexQuoteConversion: double _pcDom>;

        return $d0;
    }

    public double getForeignPips()
    {
        com.opengamma.analytics.financial.forex.conversion.ForexQuoteConversion r0;
        double $d0;

        r0 := @this: com.opengamma.analytics.financial.forex.conversion.ForexQuoteConversion;

        $d0 = r0.<com.opengamma.analytics.financial.forex.conversion.ForexQuoteConversion: double _foreignPips>;

        return $d0;
    }

    public double getAbsDom()
    {
        com.opengamma.analytics.financial.forex.conversion.ForexQuoteConversion r0;
        double $d0;

        r0 := @this: com.opengamma.analytics.financial.forex.conversion.ForexQuoteConversion;

        $d0 = r0.<com.opengamma.analytics.financial.forex.conversion.ForexQuoteConversion: double _absDom>;

        return $d0;
    }

    public double getAbsForeign()
    {
        com.opengamma.analytics.financial.forex.conversion.ForexQuoteConversion r0;
        double $d0;

        r0 := @this: com.opengamma.analytics.financial.forex.conversion.ForexQuoteConversion;

        $d0 = r0.<com.opengamma.analytics.financial.forex.conversion.ForexQuoteConversion: double _absForeign>;

        return $d0;
    }
}
