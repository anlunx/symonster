public final class com.opengamma.analytics.util.time.TimeCalculatorBUS252 extends java.lang.Object
{
    private static final com.opengamma.financial.convention.daycount.DayCount MODEL_DAYCOUNT;

    private void <init>()
    {
        com.opengamma.analytics.util.time.TimeCalculatorBUS252 r0;

        r0 := @this: com.opengamma.analytics.util.time.TimeCalculatorBUS252;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static double getTimeBetween(org.threeten.bp.ZonedDateTime, org.threeten.bp.ZonedDateTime, com.opengamma.financial.convention.daycount.DayCount, com.opengamma.financial.convention.calendar.Calendar)
    {
        org.threeten.bp.ZonedDateTime r0, r1, r4;
        com.opengamma.financial.convention.daycount.DayCount r2;
        com.opengamma.financial.convention.calendar.Calendar r3;
        boolean z0;
        org.threeten.bp.ZoneId $r9;
        double $d0, $d1, $d2;

        r0 := @parameter0: org.threeten.bp.ZonedDateTime;

        r1 := @parameter1: org.threeten.bp.ZonedDateTime;

        r2 := @parameter2: com.opengamma.financial.convention.daycount.DayCount;

        r3 := @parameter3: com.opengamma.financial.convention.calendar.Calendar;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r0, "date1");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r0, "date2");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, "day count");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r3, "calendar");

        $r9 = virtualinvoke r0.<org.threeten.bp.ZonedDateTime: org.threeten.bp.ZoneId getZone()>();

        r4 = virtualinvoke r1.<org.threeten.bp.ZonedDateTime: org.threeten.bp.ZonedDateTime withZoneSameInstant(org.threeten.bp.ZoneId)>($r9);

        z0 = virtualinvoke r0.<org.threeten.bp.ZonedDateTime: boolean isAfter(org.threeten.bp.chrono.ChronoZonedDateTime)>(r4);

        if z0 != 0 goto label1;

        $d2 = interfaceinvoke r2.<com.opengamma.financial.convention.daycount.DayCount: double getDayCountFraction(org.threeten.bp.ZonedDateTime,org.threeten.bp.ZonedDateTime,com.opengamma.financial.convention.calendar.Calendar)>(r0, r4, r3);

        return $d2;

     label1:
        $d0 = interfaceinvoke r2.<com.opengamma.financial.convention.daycount.DayCount: double getDayCountFraction(org.threeten.bp.ZonedDateTime,org.threeten.bp.ZonedDateTime,com.opengamma.financial.convention.calendar.Calendar)>(r4, r0, r3);

        $d1 = -1.0 * $d0;

        return $d1;
    }

    public static double getTimeBetween(org.threeten.bp.ZonedDateTime, org.threeten.bp.ZonedDateTime, com.opengamma.financial.convention.daycount.DayCount)
    {
        org.threeten.bp.ZonedDateTime r0, r1, r3;
        com.opengamma.financial.convention.daycount.DayCount r2;
        boolean z0;
        org.threeten.bp.ZoneId $r7;
        double $d0, $d1, $d2;

        r0 := @parameter0: org.threeten.bp.ZonedDateTime;

        r1 := @parameter1: org.threeten.bp.ZonedDateTime;

        r2 := @parameter2: com.opengamma.financial.convention.daycount.DayCount;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r0, "date1");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r0, "date2");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, "day count");

        $r7 = virtualinvoke r0.<org.threeten.bp.ZonedDateTime: org.threeten.bp.ZoneId getZone()>();

        r3 = virtualinvoke r1.<org.threeten.bp.ZonedDateTime: org.threeten.bp.ZonedDateTime withZoneSameInstant(org.threeten.bp.ZoneId)>($r7);

        z0 = virtualinvoke r0.<org.threeten.bp.ZonedDateTime: boolean isAfter(org.threeten.bp.chrono.ChronoZonedDateTime)>(r3);

        if z0 != 0 goto label1;

        $d2 = interfaceinvoke r2.<com.opengamma.financial.convention.daycount.DayCount: double getDayCountFraction(org.threeten.bp.ZonedDateTime,org.threeten.bp.ZonedDateTime)>(r0, r3);

        return $d2;

     label1:
        $d0 = interfaceinvoke r2.<com.opengamma.financial.convention.daycount.DayCount: double getDayCountFraction(org.threeten.bp.ZonedDateTime,org.threeten.bp.ZonedDateTime)>(r3, r0);

        $d1 = -1.0 * $d0;

        return $d1;
    }

    public static double getTimeBetween(org.threeten.bp.ZonedDateTime, org.threeten.bp.ZonedDateTime, com.opengamma.financial.convention.calendar.Calendar)
    {
        org.threeten.bp.ZonedDateTime r0, r1;
        com.opengamma.financial.convention.calendar.Calendar r2;
        com.opengamma.financial.convention.daycount.DayCount $r3;
        double $d0;

        r0 := @parameter0: org.threeten.bp.ZonedDateTime;

        r1 := @parameter1: org.threeten.bp.ZonedDateTime;

        r2 := @parameter2: com.opengamma.financial.convention.calendar.Calendar;

        $r3 = <com.opengamma.analytics.util.time.TimeCalculatorBUS252: com.opengamma.financial.convention.daycount.DayCount MODEL_DAYCOUNT>;

        $d0 = staticinvoke <com.opengamma.analytics.util.time.TimeCalculatorBUS252: double getTimeBetween(org.threeten.bp.ZonedDateTime,org.threeten.bp.ZonedDateTime,com.opengamma.financial.convention.daycount.DayCount,com.opengamma.financial.convention.calendar.Calendar)>(r0, r1, $r3, r2);

        return $d0;
    }

    public static double[] getTimeBetween(org.threeten.bp.ZonedDateTime[], org.threeten.bp.ZonedDateTime[], com.opengamma.financial.convention.calendar.Calendar)
    {
        org.threeten.bp.ZonedDateTime[] r0, r1;
        com.opengamma.financial.convention.calendar.Calendar r2;
        int i0, $i1, i2;
        double[] r3;
        org.threeten.bp.ZonedDateTime $r7, $r8;
        double $d0;
        boolean $z0;

        r0 := @parameter0: org.threeten.bp.ZonedDateTime[];

        r1 := @parameter1: org.threeten.bp.ZonedDateTime[];

        r2 := @parameter2: com.opengamma.financial.convention.calendar.Calendar;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r0, "First date");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "Second date");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, "calendar");

        i0 = lengthof r0;

        $i1 = lengthof r1;

        if i0 != $i1 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z0, "Number of dates should be equal");

        r3 = newarray (double)[i0];

        i2 = 0;

     label3:
        if i2 >= i0 goto label4;

        $r8 = r0[i2];

        $r7 = r1[i2];

        $d0 = staticinvoke <com.opengamma.analytics.util.time.TimeCalculatorBUS252: double getTimeBetween(org.threeten.bp.ZonedDateTime,org.threeten.bp.ZonedDateTime,com.opengamma.financial.convention.calendar.Calendar)>($r8, $r7, r2);

        r3[i2] = $d0;

        i2 = i2 + 1;

        goto label3;

     label4:
        return r3;
    }

    public static double[] getTimeBetween(org.threeten.bp.ZonedDateTime, org.threeten.bp.ZonedDateTime[], com.opengamma.financial.convention.calendar.Calendar)
    {
        org.threeten.bp.ZonedDateTime r0, $r6;
        org.threeten.bp.ZonedDateTime[] r1;
        com.opengamma.financial.convention.calendar.Calendar r2;
        int i0, i1;
        double[] r3;
        double $d0;

        r0 := @parameter0: org.threeten.bp.ZonedDateTime;

        r1 := @parameter1: org.threeten.bp.ZonedDateTime[];

        r2 := @parameter2: com.opengamma.financial.convention.calendar.Calendar;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r0, "First date");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "Second date");

        i0 = lengthof r1;

        r3 = newarray (double)[i0];

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        $r6 = r1[i1];

        $d0 = staticinvoke <com.opengamma.analytics.util.time.TimeCalculatorBUS252: double getTimeBetween(org.threeten.bp.ZonedDateTime,org.threeten.bp.ZonedDateTime,com.opengamma.financial.convention.calendar.Calendar)>(r0, $r6, r2);

        r3[i1] = $d0;

        i1 = i1 + 1;

        goto label1;

     label2:
        return r3;
    }

    public static double getTimeBetween(org.threeten.bp.LocalDate, org.threeten.bp.LocalDate, com.opengamma.financial.convention.calendar.Calendar)
    {
        org.threeten.bp.LocalDate r0, r1;
        com.opengamma.financial.convention.calendar.Calendar r2;
        org.threeten.bp.ZoneOffset $r5, $r7;
        org.threeten.bp.ZonedDateTime $r6, $r8;
        double $d0;

        r0 := @parameter0: org.threeten.bp.LocalDate;

        r1 := @parameter1: org.threeten.bp.LocalDate;

        r2 := @parameter2: com.opengamma.financial.convention.calendar.Calendar;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r0, "date1");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "date2");

        $r5 = <org.threeten.bp.ZoneOffset: org.threeten.bp.ZoneOffset UTC>;

        $r6 = virtualinvoke r0.<org.threeten.bp.LocalDate: org.threeten.bp.ZonedDateTime atStartOfDay(org.threeten.bp.ZoneId)>($r5);

        $r7 = <org.threeten.bp.ZoneOffset: org.threeten.bp.ZoneOffset UTC>;

        $r8 = virtualinvoke r1.<org.threeten.bp.LocalDate: org.threeten.bp.ZonedDateTime atStartOfDay(org.threeten.bp.ZoneId)>($r7);

        $d0 = staticinvoke <com.opengamma.analytics.util.time.TimeCalculatorBUS252: double getTimeBetween(org.threeten.bp.ZonedDateTime,org.threeten.bp.ZonedDateTime,com.opengamma.financial.convention.calendar.Calendar)>($r6, $r8, r2);

        return $d0;
    }

    public static double getTimeBetween(org.threeten.bp.ZonedDateTime, org.threeten.bp.LocalDate, com.opengamma.financial.convention.calendar.Calendar)
    {
        org.threeten.bp.ZonedDateTime r0, r3, r4;
        org.threeten.bp.LocalDate r1;
        com.opengamma.financial.convention.calendar.Calendar r2;
        org.threeten.bp.ZoneOffset $r7, $r8;
        double $d0;

        r0 := @parameter0: org.threeten.bp.ZonedDateTime;

        r1 := @parameter1: org.threeten.bp.LocalDate;

        r2 := @parameter2: com.opengamma.financial.convention.calendar.Calendar;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r0, "date1");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "date2");

        $r7 = <org.threeten.bp.ZoneOffset: org.threeten.bp.ZoneOffset UTC>;

        r3 = virtualinvoke r1.<org.threeten.bp.LocalDate: org.threeten.bp.ZonedDateTime atStartOfDay(org.threeten.bp.ZoneId)>($r7);

        $r8 = <org.threeten.bp.ZoneOffset: org.threeten.bp.ZoneOffset UTC>;

        r4 = virtualinvoke r0.<org.threeten.bp.ZonedDateTime: org.threeten.bp.ZonedDateTime withZoneSameInstant(org.threeten.bp.ZoneId)>($r8);

        $d0 = staticinvoke <com.opengamma.analytics.util.time.TimeCalculatorBUS252: double getTimeBetween(org.threeten.bp.ZonedDateTime,org.threeten.bp.ZonedDateTime,com.opengamma.financial.convention.calendar.Calendar)>(r4, r3, r2);

        return $d0;
    }

    public static double getTimeBetween(org.threeten.bp.LocalDate, org.threeten.bp.ZonedDateTime, com.opengamma.financial.convention.calendar.Calendar)
    {
        org.threeten.bp.LocalDate r0;
        org.threeten.bp.ZonedDateTime r1, r3, r4;
        com.opengamma.financial.convention.calendar.Calendar r2;
        org.threeten.bp.ZoneOffset $r7, $r8;
        double $d0;

        r0 := @parameter0: org.threeten.bp.LocalDate;

        r1 := @parameter1: org.threeten.bp.ZonedDateTime;

        r2 := @parameter2: com.opengamma.financial.convention.calendar.Calendar;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r0, "date1");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "date2");

        $r7 = <org.threeten.bp.ZoneOffset: org.threeten.bp.ZoneOffset UTC>;

        r3 = virtualinvoke r0.<org.threeten.bp.LocalDate: org.threeten.bp.ZonedDateTime atStartOfDay(org.threeten.bp.ZoneId)>($r7);

        $r8 = <org.threeten.bp.ZoneOffset: org.threeten.bp.ZoneOffset UTC>;

        r4 = virtualinvoke r1.<org.threeten.bp.ZonedDateTime: org.threeten.bp.ZonedDateTime withZoneSameInstant(org.threeten.bp.ZoneId)>($r8);

        $d0 = staticinvoke <com.opengamma.analytics.util.time.TimeCalculatorBUS252: double getTimeBetween(org.threeten.bp.ZonedDateTime,org.threeten.bp.ZonedDateTime,com.opengamma.financial.convention.calendar.Calendar)>(r3, r4, r2);

        return $d0;
    }

    static void <clinit>()
    {
        com.opengamma.financial.convention.daycount.DayCount $r0;

        $r0 = <com.opengamma.financial.convention.daycount.DayCounts: com.opengamma.financial.convention.daycount.DayCount BUSINESS_252>;

        <com.opengamma.analytics.util.time.TimeCalculatorBUS252: com.opengamma.financial.convention.daycount.DayCount MODEL_DAYCOUNT> = $r0;

        return;
    }
}
