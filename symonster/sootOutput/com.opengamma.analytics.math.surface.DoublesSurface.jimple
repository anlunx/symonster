public abstract class com.opengamma.analytics.math.surface.DoublesSurface extends com.opengamma.analytics.math.surface.Surface
{
    private final int _n;
    private final double[] _xData;
    private final double[] _yData;
    private final double[] _zData;
    private java.lang.Double[] _xDataObject;
    private java.lang.Double[] _yDataObject;
    private java.lang.Double[] _zDataObject;

    public void <init>(double[], double[], double[])
    {
        com.opengamma.analytics.math.surface.DoublesSurface r0;
        double[] r1, r2, r3, $r7, $r8, $r9;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        boolean $z0, $z1;

        r0 := @this: com.opengamma.analytics.math.surface.DoublesSurface;

        r1 := @parameter0: double[];

        r2 := @parameter1: double[];

        r3 := @parameter2: double[];

        specialinvoke r0.<com.opengamma.analytics.math.surface.Surface: void <init>()>();

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "x data");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, "y data");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r3, "z data");

        $i1 = lengthof r1;

        $i0 = lengthof r2;

        if $i1 != $i0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z0, "X data size different from Y data size");

        $i3 = lengthof r1;

        $i2 = lengthof r3;

        if $i3 != $i2 goto label3;

        $z1 = 1;

        goto label4;

     label3:
        $z1 = 0;

     label4:
        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z1, "X data size different from Z data size");

        $i4 = lengthof r1;

        r0.<com.opengamma.analytics.math.surface.DoublesSurface: int _n> = $i4;

        $i5 = r0.<com.opengamma.analytics.math.surface.DoublesSurface: int _n>;

        $r7 = staticinvoke <java.util.Arrays: double[] copyOf(double[],int)>(r1, $i5);

        r0.<com.opengamma.analytics.math.surface.DoublesSurface: double[] _xData> = $r7;

        $i6 = r0.<com.opengamma.analytics.math.surface.DoublesSurface: int _n>;

        $r8 = staticinvoke <java.util.Arrays: double[] copyOf(double[],int)>(r2, $i6);

        r0.<com.opengamma.analytics.math.surface.DoublesSurface: double[] _yData> = $r8;

        $i7 = r0.<com.opengamma.analytics.math.surface.DoublesSurface: int _n>;

        $r9 = staticinvoke <java.util.Arrays: double[] copyOf(double[],int)>(r3, $i7);

        r0.<com.opengamma.analytics.math.surface.DoublesSurface: double[] _zData> = $r9;

        return;
    }

    public void <init>(java.lang.Double[], java.lang.Double[], java.lang.Double[])
    {
        com.opengamma.analytics.math.surface.DoublesSurface r0;
        java.lang.Double[] r1, r2, r3;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, i8, $i9;
        double[] $r4, $r5, $r6, $r11, $r13, $r15;
        java.lang.Double $r7, $r8, $r9, $r10, $r12, $r14;
        double $d0, $d1, $d2;
        boolean $z0, $z1;

        r0 := @this: com.opengamma.analytics.math.surface.DoublesSurface;

        r1 := @parameter0: java.lang.Double[];

        r2 := @parameter1: java.lang.Double[];

        r3 := @parameter2: java.lang.Double[];

        specialinvoke r0.<com.opengamma.analytics.math.surface.Surface: void <init>()>();

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object,java.lang.String)>(r1, "x data");

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object,java.lang.String)>(r2, "y data");

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object,java.lang.String)>(r3, "z data");

        $i1 = lengthof r1;

        $i0 = lengthof r2;

        if $i1 != $i0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        staticinvoke <org.apache.commons.lang.Validate: void isTrue(boolean)>($z0);

        $i3 = lengthof r1;

        $i2 = lengthof r3;

        if $i3 != $i2 goto label3;

        $z1 = 1;

        goto label4;

     label3:
        $z1 = 0;

     label4:
        staticinvoke <org.apache.commons.lang.Validate: void isTrue(boolean)>($z1);

        $i4 = lengthof r1;

        r0.<com.opengamma.analytics.math.surface.DoublesSurface: int _n> = $i4;

        $i5 = r0.<com.opengamma.analytics.math.surface.DoublesSurface: int _n>;

        $r4 = newarray (double)[$i5];

        r0.<com.opengamma.analytics.math.surface.DoublesSurface: double[] _xData> = $r4;

        $i6 = r0.<com.opengamma.analytics.math.surface.DoublesSurface: int _n>;

        $r5 = newarray (double)[$i6];

        r0.<com.opengamma.analytics.math.surface.DoublesSurface: double[] _yData> = $r5;

        $i7 = r0.<com.opengamma.analytics.math.surface.DoublesSurface: int _n>;

        $r6 = newarray (double)[$i7];

        r0.<com.opengamma.analytics.math.surface.DoublesSurface: double[] _zData> = $r6;

        i8 = 0;

     label5:
        $i9 = r0.<com.opengamma.analytics.math.surface.DoublesSurface: int _n>;

        if i8 >= $i9 goto label6;

        $r7 = r1[i8];

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object)>($r7);

        $r8 = r2[i8];

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object)>($r8);

        $r9 = r3[i8];

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object)>($r9);

        $r11 = r0.<com.opengamma.analytics.math.surface.DoublesSurface: double[] _xData>;

        $r10 = r1[i8];

        $d0 = virtualinvoke $r10.<java.lang.Double: double doubleValue()>();

        $r11[i8] = $d0;

        $r13 = r0.<com.opengamma.analytics.math.surface.DoublesSurface: double[] _yData>;

        $r12 = r2[i8];

        $d1 = virtualinvoke $r12.<java.lang.Double: double doubleValue()>();

        $r13[i8] = $d1;

        $r15 = r0.<com.opengamma.analytics.math.surface.DoublesSurface: double[] _zData>;

        $r14 = r3[i8];

        $d2 = virtualinvoke $r14.<java.lang.Double: double doubleValue()>();

        $r15[i8] = $d2;

        i8 = i8 + 1;

        goto label5;

     label6:
        return;
    }

    public void <init>(java.util.List, java.util.List, java.util.List)
    {
        com.opengamma.analytics.math.surface.DoublesSurface r0;
        java.util.List r1, r2, r3;
        java.lang.Double r4, r5, r6;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, i8, $i9;
        double[] $r7, $r8, $r9, $r13, $r14, $r15;
        java.lang.Object $r10, $r11, $r12;
        double $d0, $d1, $d2;
        boolean $z0, $z1;

        r0 := @this: com.opengamma.analytics.math.surface.DoublesSurface;

        r1 := @parameter0: java.util.List;

        r2 := @parameter1: java.util.List;

        r3 := @parameter2: java.util.List;

        specialinvoke r0.<com.opengamma.analytics.math.surface.Surface: void <init>()>();

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object,java.lang.String)>(r1, "x data");

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object,java.lang.String)>(r2, "y data");

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object,java.lang.String)>(r3, "z data");

        $i0 = interfaceinvoke r1.<java.util.List: int size()>();

        $i1 = interfaceinvoke r2.<java.util.List: int size()>();

        if $i0 != $i1 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        staticinvoke <org.apache.commons.lang.Validate: void isTrue(boolean)>($z0);

        $i2 = interfaceinvoke r1.<java.util.List: int size()>();

        $i3 = interfaceinvoke r3.<java.util.List: int size()>();

        if $i2 != $i3 goto label3;

        $z1 = 1;

        goto label4;

     label3:
        $z1 = 0;

     label4:
        staticinvoke <org.apache.commons.lang.Validate: void isTrue(boolean)>($z1);

        $i4 = interfaceinvoke r1.<java.util.List: int size()>();

        r0.<com.opengamma.analytics.math.surface.DoublesSurface: int _n> = $i4;

        $i5 = r0.<com.opengamma.analytics.math.surface.DoublesSurface: int _n>;

        $r7 = newarray (double)[$i5];

        r0.<com.opengamma.analytics.math.surface.DoublesSurface: double[] _xData> = $r7;

        $i6 = r0.<com.opengamma.analytics.math.surface.DoublesSurface: int _n>;

        $r8 = newarray (double)[$i6];

        r0.<com.opengamma.analytics.math.surface.DoublesSurface: double[] _yData> = $r8;

        $i7 = r0.<com.opengamma.analytics.math.surface.DoublesSurface: int _n>;

        $r9 = newarray (double)[$i7];

        r0.<com.opengamma.analytics.math.surface.DoublesSurface: double[] _zData> = $r9;

        i8 = 0;

     label5:
        $i9 = r0.<com.opengamma.analytics.math.surface.DoublesSurface: int _n>;

        if i8 >= $i9 goto label6;

        $r10 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i8);

        r4 = (java.lang.Double) $r10;

        $r11 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>(i8);

        r5 = (java.lang.Double) $r11;

        $r12 = interfaceinvoke r3.<java.util.List: java.lang.Object get(int)>(i8);

        r6 = (java.lang.Double) $r12;

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object)>(r4);

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object)>(r5);

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object)>(r6);

        $r13 = r0.<com.opengamma.analytics.math.surface.DoublesSurface: double[] _xData>;

        $d0 = virtualinvoke r4.<java.lang.Double: double doubleValue()>();

        $r13[i8] = $d0;

        $r14 = r0.<com.opengamma.analytics.math.surface.DoublesSurface: double[] _yData>;

        $d1 = virtualinvoke r5.<java.lang.Double: double doubleValue()>();

        $r14[i8] = $d1;

        $r15 = r0.<com.opengamma.analytics.math.surface.DoublesSurface: double[] _zData>;

        $d2 = virtualinvoke r6.<java.lang.Double: double doubleValue()>();

        $r15[i8] = $d2;

        i8 = i8 + 1;

        goto label5;

     label6:
        return;
    }

    public void <init>(com.opengamma.util.tuple.DoublesPair[], double[])
    {
        com.opengamma.analytics.math.surface.DoublesSurface r0;
        com.opengamma.util.tuple.DoublesPair[] r1;
        double[] r2, $r4, $r5, $r6, $r8, $r9;
        com.opengamma.util.tuple.DoublesPair r3;
        int $i0, $i1, $i2, $i3, $i4, $i5, i6, $i7;
        double $d0, $d1, $d2;
        java.lang.Double $r7;
        boolean $z0;

        r0 := @this: com.opengamma.analytics.math.surface.DoublesSurface;

        r1 := @parameter0: com.opengamma.util.tuple.DoublesPair[];

        r2 := @parameter1: double[];

        specialinvoke r0.<com.opengamma.analytics.math.surface.Surface: void <init>()>();

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object,java.lang.String)>(r1, "x-y data");

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object,java.lang.String)>(r2, "z data");

        $i1 = lengthof r1;

        $i0 = lengthof r2;

        if $i1 != $i0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        staticinvoke <org.apache.commons.lang.Validate: void isTrue(boolean)>($z0);

        $i2 = lengthof r1;

        r0.<com.opengamma.analytics.math.surface.DoublesSurface: int _n> = $i2;

        $i3 = r0.<com.opengamma.analytics.math.surface.DoublesSurface: int _n>;

        $r4 = newarray (double)[$i3];

        r0.<com.opengamma.analytics.math.surface.DoublesSurface: double[] _xData> = $r4;

        $i4 = r0.<com.opengamma.analytics.math.surface.DoublesSurface: int _n>;

        $r5 = newarray (double)[$i4];

        r0.<com.opengamma.analytics.math.surface.DoublesSurface: double[] _yData> = $r5;

        $i5 = r0.<com.opengamma.analytics.math.surface.DoublesSurface: int _n>;

        $r6 = staticinvoke <java.util.Arrays: double[] copyOf(double[],int)>(r2, $i5);

        r0.<com.opengamma.analytics.math.surface.DoublesSurface: double[] _zData> = $r6;

        i6 = 0;

     label3:
        $i7 = r0.<com.opengamma.analytics.math.surface.DoublesSurface: int _n>;

        if i6 >= $i7 goto label4;

        r3 = r1[i6];

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object)>(r3);

        $d0 = r2[i6];

        $r7 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object)>($r7);

        $r8 = r0.<com.opengamma.analytics.math.surface.DoublesSurface: double[] _xData>;

        $d1 = r3.<com.opengamma.util.tuple.DoublesPair: double first>;

        $r8[i6] = $d1;

        $r9 = r0.<com.opengamma.analytics.math.surface.DoublesSurface: double[] _yData>;

        $d2 = r3.<com.opengamma.util.tuple.DoublesPair: double second>;

        $r9[i6] = $d2;

        i6 = i6 + 1;

        goto label3;

     label4:
        return;
    }

    public void <init>(com.opengamma.util.tuple.DoublesPair[], java.lang.Double[])
    {
        com.opengamma.analytics.math.surface.DoublesSurface r0;
        com.opengamma.util.tuple.DoublesPair[] r1;
        java.lang.Double[] r2;
        com.opengamma.util.tuple.DoublesPair r3;
        int $i0, $i1, $i2, $i3, $i4, $i5, i6, $i7;
        double[] $r4, $r5, $r6, $r8, $r9, $r11;
        java.lang.Double $r7, $r10;
        double $d0, $d1, $d2;
        boolean $z0;

        r0 := @this: com.opengamma.analytics.math.surface.DoublesSurface;

        r1 := @parameter0: com.opengamma.util.tuple.DoublesPair[];

        r2 := @parameter1: java.lang.Double[];

        specialinvoke r0.<com.opengamma.analytics.math.surface.Surface: void <init>()>();

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object,java.lang.String)>(r1, "x-y data");

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object,java.lang.String)>(r2, "z data");

        $i1 = lengthof r1;

        $i0 = lengthof r2;

        if $i1 != $i0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        staticinvoke <org.apache.commons.lang.Validate: void isTrue(boolean)>($z0);

        $i2 = lengthof r1;

        r0.<com.opengamma.analytics.math.surface.DoublesSurface: int _n> = $i2;

        $i3 = r0.<com.opengamma.analytics.math.surface.DoublesSurface: int _n>;

        $r4 = newarray (double)[$i3];

        r0.<com.opengamma.analytics.math.surface.DoublesSurface: double[] _xData> = $r4;

        $i4 = r0.<com.opengamma.analytics.math.surface.DoublesSurface: int _n>;

        $r5 = newarray (double)[$i4];

        r0.<com.opengamma.analytics.math.surface.DoublesSurface: double[] _yData> = $r5;

        $i5 = r0.<com.opengamma.analytics.math.surface.DoublesSurface: int _n>;

        $r6 = newarray (double)[$i5];

        r0.<com.opengamma.analytics.math.surface.DoublesSurface: double[] _zData> = $r6;

        i6 = 0;

     label3:
        $i7 = r0.<com.opengamma.analytics.math.surface.DoublesSurface: int _n>;

        if i6 >= $i7 goto label4;

        r3 = r1[i6];

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object)>(r3);

        $r7 = r2[i6];

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object)>($r7);

        $r8 = r0.<com.opengamma.analytics.math.surface.DoublesSurface: double[] _xData>;

        $d0 = r3.<com.opengamma.util.tuple.DoublesPair: double first>;

        $r8[i6] = $d0;

        $r9 = r0.<com.opengamma.analytics.math.surface.DoublesSurface: double[] _yData>;

        $d1 = r3.<com.opengamma.util.tuple.DoublesPair: double second>;

        $r9[i6] = $d1;

        $r11 = r0.<com.opengamma.analytics.math.surface.DoublesSurface: double[] _zData>;

        $r10 = r2[i6];

        $d2 = virtualinvoke $r10.<java.lang.Double: double doubleValue()>();

        $r11[i6] = $d2;

        i6 = i6 + 1;

        goto label3;

     label4:
        return;
    }

    public void <init>(java.util.List, java.util.List)
    {
        com.opengamma.analytics.math.surface.DoublesSurface r0;
        java.util.List r1, r2;
        com.opengamma.util.tuple.DoublesPair r3;
        java.lang.Double r4;
        int $i0, $i1, $i2, $i3, $i4, $i5, i6, $i7;
        double[] $r5, $r6, $r7, $r10, $r11, $r12;
        java.lang.Object $r8, $r9;
        double $d0, $d1, $d2;
        boolean $z0;

        r0 := @this: com.opengamma.analytics.math.surface.DoublesSurface;

        r1 := @parameter0: java.util.List;

        r2 := @parameter1: java.util.List;

        specialinvoke r0.<com.opengamma.analytics.math.surface.Surface: void <init>()>();

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object,java.lang.String)>(r1, "x-y data");

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object,java.lang.String)>(r2, "z data");

        $i0 = interfaceinvoke r1.<java.util.List: int size()>();

        $i1 = interfaceinvoke r2.<java.util.List: int size()>();

        if $i0 != $i1 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        staticinvoke <org.apache.commons.lang.Validate: void isTrue(boolean)>($z0);

        $i2 = interfaceinvoke r1.<java.util.List: int size()>();

        r0.<com.opengamma.analytics.math.surface.DoublesSurface: int _n> = $i2;

        $i3 = r0.<com.opengamma.analytics.math.surface.DoublesSurface: int _n>;

        $r5 = newarray (double)[$i3];

        r0.<com.opengamma.analytics.math.surface.DoublesSurface: double[] _xData> = $r5;

        $i4 = r0.<com.opengamma.analytics.math.surface.DoublesSurface: int _n>;

        $r6 = newarray (double)[$i4];

        r0.<com.opengamma.analytics.math.surface.DoublesSurface: double[] _yData> = $r6;

        $i5 = r0.<com.opengamma.analytics.math.surface.DoublesSurface: int _n>;

        $r7 = newarray (double)[$i5];

        r0.<com.opengamma.analytics.math.surface.DoublesSurface: double[] _zData> = $r7;

        i6 = 0;

     label3:
        $i7 = r0.<com.opengamma.analytics.math.surface.DoublesSurface: int _n>;

        if i6 >= $i7 goto label4;

        $r8 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i6);

        r3 = (com.opengamma.util.tuple.DoublesPair) $r8;

        $r9 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>(i6);

        r4 = (java.lang.Double) $r9;

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object)>(r3);

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object)>(r4);

        $r10 = r0.<com.opengamma.analytics.math.surface.DoublesSurface: double[] _xData>;

        $d0 = r3.<com.opengamma.util.tuple.DoublesPair: double first>;

        $r10[i6] = $d0;

        $r11 = r0.<com.opengamma.analytics.math.surface.DoublesSurface: double[] _yData>;

        $d1 = r3.<com.opengamma.util.tuple.DoublesPair: double second>;

        $r11[i6] = $d1;

        $r12 = r0.<com.opengamma.analytics.math.surface.DoublesSurface: double[] _zData>;

        $d2 = virtualinvoke r4.<java.lang.Double: double doubleValue()>();

        $r12[i6] = $d2;

        i6 = i6 + 1;

        goto label3;

     label4:
        return;
    }

    public void <init>(java.util.Map)
    {
        com.opengamma.analytics.math.surface.DoublesSurface r0;
        java.util.Map r1;
        java.util.Iterator r2;
        java.util.Map$Entry r3;
        int $i0, $i1, $i2, $i3, $i4, i5;
        double[] $r4, $r5, $r6, $r11, $r14, $r17;
        java.util.Set $r7;
        boolean $z0;
        java.lang.Object $r8, $r9, $r10, $r12, $r15, $r18;
        com.opengamma.util.tuple.DoublesPair $r13, $r16;
        double $d0, $d1, $d2;
        java.lang.Double $r19;

        r0 := @this: com.opengamma.analytics.math.surface.DoublesSurface;

        r1 := @parameter0: java.util.Map;

        specialinvoke r0.<com.opengamma.analytics.math.surface.Surface: void <init>()>();

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object,java.lang.String)>(r1, "x-y-z data");

        $i0 = interfaceinvoke r1.<java.util.Map: int size()>();

        r0.<com.opengamma.analytics.math.surface.DoublesSurface: int _n> = $i0;

        $i1 = r0.<com.opengamma.analytics.math.surface.DoublesSurface: int _n>;

        $r4 = newarray (double)[$i1];

        r0.<com.opengamma.analytics.math.surface.DoublesSurface: double[] _xData> = $r4;

        $i2 = r0.<com.opengamma.analytics.math.surface.DoublesSurface: int _n>;

        $r5 = newarray (double)[$i2];

        r0.<com.opengamma.analytics.math.surface.DoublesSurface: double[] _yData> = $r5;

        $i3 = r0.<com.opengamma.analytics.math.surface.DoublesSurface: int _n>;

        $r6 = newarray (double)[$i3];

        r0.<com.opengamma.analytics.math.surface.DoublesSurface: double[] _zData> = $r6;

        i5 = 0;

        $r7 = interfaceinvoke r1.<java.util.Map: java.util.Set entrySet()>();

        r2 = interfaceinvoke $r7.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r8 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (java.util.Map$Entry) $r8;

        $r9 = interfaceinvoke r3.<java.util.Map$Entry: java.lang.Object getKey()>();

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object)>($r9);

        $r10 = interfaceinvoke r3.<java.util.Map$Entry: java.lang.Object getValue()>();

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object)>($r10);

        $r11 = r0.<com.opengamma.analytics.math.surface.DoublesSurface: double[] _xData>;

        $r12 = interfaceinvoke r3.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r13 = (com.opengamma.util.tuple.DoublesPair) $r12;

        $d0 = $r13.<com.opengamma.util.tuple.DoublesPair: double first>;

        $r11[i5] = $d0;

        $r14 = r0.<com.opengamma.analytics.math.surface.DoublesSurface: double[] _yData>;

        $r15 = interfaceinvoke r3.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r16 = (com.opengamma.util.tuple.DoublesPair) $r15;

        $d1 = $r16.<com.opengamma.util.tuple.DoublesPair: double second>;

        $r14[i5] = $d1;

        $r17 = r0.<com.opengamma.analytics.math.surface.DoublesSurface: double[] _zData>;

        $i4 = i5;

        i5 = i5 + 1;

        $r18 = interfaceinvoke r3.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r19 = (java.lang.Double) $r18;

        $d2 = virtualinvoke $r19.<java.lang.Double: double doubleValue()>();

        $r17[$i4] = $d2;

        goto label1;

     label2:
        return;
    }

    public void <init>(java.util.List)
    {
        com.opengamma.analytics.math.surface.DoublesSurface r0;
        java.util.List r1;
        java.util.Iterator r2;
        com.opengamma.util.tuple.Triple r3;
        double d0, d1, d2;
        int $i0, $i1, $i2, $i3, i4;
        double[] $r4, $r5, $r6, $r14, $r15, $r16;
        boolean $z0;
        java.lang.Object $r7, $r8, $r10, $r12;
        java.lang.Double $r9, $r11, $r13;

        r0 := @this: com.opengamma.analytics.math.surface.DoublesSurface;

        r1 := @parameter0: java.util.List;

        specialinvoke r0.<com.opengamma.analytics.math.surface.Surface: void <init>()>();

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object,java.lang.String)>(r1, "x-y-z data");

        $i0 = interfaceinvoke r1.<java.util.List: int size()>();

        r0.<com.opengamma.analytics.math.surface.DoublesSurface: int _n> = $i0;

        $i1 = r0.<com.opengamma.analytics.math.surface.DoublesSurface: int _n>;

        $r4 = newarray (double)[$i1];

        r0.<com.opengamma.analytics.math.surface.DoublesSurface: double[] _xData> = $r4;

        $i2 = r0.<com.opengamma.analytics.math.surface.DoublesSurface: int _n>;

        $r5 = newarray (double)[$i2];

        r0.<com.opengamma.analytics.math.surface.DoublesSurface: double[] _yData> = $r5;

        $i3 = r0.<com.opengamma.analytics.math.surface.DoublesSurface: int _n>;

        $r6 = newarray (double)[$i3];

        r0.<com.opengamma.analytics.math.surface.DoublesSurface: double[] _zData> = $r6;

        i4 = 0;

        r2 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r7 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (com.opengamma.util.tuple.Triple) $r7;

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object)>(r3);

        $r8 = virtualinvoke r3.<com.opengamma.util.tuple.Triple: java.lang.Object getFirst()>();

        $r9 = (java.lang.Double) $r8;

        d0 = virtualinvoke $r9.<java.lang.Double: double doubleValue()>();

        $r10 = virtualinvoke r3.<com.opengamma.util.tuple.Triple: java.lang.Object getSecond()>();

        $r11 = (java.lang.Double) $r10;

        d1 = virtualinvoke $r11.<java.lang.Double: double doubleValue()>();

        $r12 = virtualinvoke r3.<com.opengamma.util.tuple.Triple: java.lang.Object getThird()>();

        $r13 = (java.lang.Double) $r12;

        d2 = virtualinvoke $r13.<java.lang.Double: double doubleValue()>();

        $r14 = r0.<com.opengamma.analytics.math.surface.DoublesSurface: double[] _xData>;

        $r14[i4] = d0;

        $r15 = r0.<com.opengamma.analytics.math.surface.DoublesSurface: double[] _yData>;

        $r15[i4] = d1;

        $r16 = r0.<com.opengamma.analytics.math.surface.DoublesSurface: double[] _zData>;

        $r16[i4] = d2;

        i4 = i4 + 1;

        goto label1;

     label2:
        return;
    }

    public void <init>(double[], double[], double[], java.lang.String)
    {
        com.opengamma.analytics.math.surface.DoublesSurface r0;
        double[] r1, r2, r3, $r5, $r6, $r7;
        java.lang.String r4;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        boolean $z0, $z1;

        r0 := @this: com.opengamma.analytics.math.surface.DoublesSurface;

        r1 := @parameter0: double[];

        r2 := @parameter1: double[];

        r3 := @parameter2: double[];

        r4 := @parameter3: java.lang.String;

        specialinvoke r0.<com.opengamma.analytics.math.surface.Surface: void <init>(java.lang.String)>(r4);

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object,java.lang.String)>(r1, "x data");

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object,java.lang.String)>(r2, "y data");

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object,java.lang.String)>(r3, "z data");

        $i1 = lengthof r1;

        $i0 = lengthof r2;

        if $i1 != $i0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        staticinvoke <org.apache.commons.lang.Validate: void isTrue(boolean)>($z0);

        $i3 = lengthof r1;

        $i2 = lengthof r3;

        if $i3 != $i2 goto label3;

        $z1 = 1;

        goto label4;

     label3:
        $z1 = 0;

     label4:
        staticinvoke <org.apache.commons.lang.Validate: void isTrue(boolean)>($z1);

        $i4 = lengthof r1;

        r0.<com.opengamma.analytics.math.surface.DoublesSurface: int _n> = $i4;

        $i5 = r0.<com.opengamma.analytics.math.surface.DoublesSurface: int _n>;

        $r5 = staticinvoke <java.util.Arrays: double[] copyOf(double[],int)>(r1, $i5);

        r0.<com.opengamma.analytics.math.surface.DoublesSurface: double[] _xData> = $r5;

        $i6 = r0.<com.opengamma.analytics.math.surface.DoublesSurface: int _n>;

        $r6 = staticinvoke <java.util.Arrays: double[] copyOf(double[],int)>(r2, $i6);

        r0.<com.opengamma.analytics.math.surface.DoublesSurface: double[] _yData> = $r6;

        $i7 = r0.<com.opengamma.analytics.math.surface.DoublesSurface: int _n>;

        $r7 = staticinvoke <java.util.Arrays: double[] copyOf(double[],int)>(r3, $i7);

        r0.<com.opengamma.analytics.math.surface.DoublesSurface: double[] _zData> = $r7;

        return;
    }

    public void <init>(java.lang.Double[], java.lang.Double[], java.lang.Double[], java.lang.String)
    {
        com.opengamma.analytics.math.surface.DoublesSurface r0;
        java.lang.Double[] r1, r2, r3;
        java.lang.String r4;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, i8, $i9;
        double[] $r5, $r6, $r7, $r12, $r14, $r16;
        java.lang.Double $r8, $r9, $r10, $r11, $r13, $r15;
        double $d0, $d1, $d2;
        boolean $z0, $z1;

        r0 := @this: com.opengamma.analytics.math.surface.DoublesSurface;

        r1 := @parameter0: java.lang.Double[];

        r2 := @parameter1: java.lang.Double[];

        r3 := @parameter2: java.lang.Double[];

        r4 := @parameter3: java.lang.String;

        specialinvoke r0.<com.opengamma.analytics.math.surface.Surface: void <init>(java.lang.String)>(r4);

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object,java.lang.String)>(r1, "x data");

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object,java.lang.String)>(r2, "y data");

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object,java.lang.String)>(r3, "z data");

        $i1 = lengthof r1;

        $i0 = lengthof r2;

        if $i1 != $i0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        staticinvoke <org.apache.commons.lang.Validate: void isTrue(boolean)>($z0);

        $i3 = lengthof r1;

        $i2 = lengthof r3;

        if $i3 != $i2 goto label3;

        $z1 = 1;

        goto label4;

     label3:
        $z1 = 0;

     label4:
        staticinvoke <org.apache.commons.lang.Validate: void isTrue(boolean)>($z1);

        $i4 = lengthof r1;

        r0.<com.opengamma.analytics.math.surface.DoublesSurface: int _n> = $i4;

        $i5 = r0.<com.opengamma.analytics.math.surface.DoublesSurface: int _n>;

        $r5 = newarray (double)[$i5];

        r0.<com.opengamma.analytics.math.surface.DoublesSurface: double[] _xData> = $r5;

        $i6 = r0.<com.opengamma.analytics.math.surface.DoublesSurface: int _n>;

        $r6 = newarray (double)[$i6];

        r0.<com.opengamma.analytics.math.surface.DoublesSurface: double[] _yData> = $r6;

        $i7 = r0.<com.opengamma.analytics.math.surface.DoublesSurface: int _n>;

        $r7 = newarray (double)[$i7];

        r0.<com.opengamma.analytics.math.surface.DoublesSurface: double[] _zData> = $r7;

        i8 = 0;

     label5:
        $i9 = r0.<com.opengamma.analytics.math.surface.DoublesSurface: int _n>;

        if i8 >= $i9 goto label6;

        $r8 = r1[i8];

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object)>($r8);

        $r9 = r2[i8];

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object)>($r9);

        $r10 = r3[i8];

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object)>($r10);

        $r12 = r0.<com.opengamma.analytics.math.surface.DoublesSurface: double[] _xData>;

        $r11 = r1[i8];

        $d0 = virtualinvoke $r11.<java.lang.Double: double doubleValue()>();

        $r12[i8] = $d0;

        $r14 = r0.<com.opengamma.analytics.math.surface.DoublesSurface: double[] _yData>;

        $r13 = r2[i8];

        $d1 = virtualinvoke $r13.<java.lang.Double: double doubleValue()>();

        $r14[i8] = $d1;

        $r16 = r0.<com.opengamma.analytics.math.surface.DoublesSurface: double[] _zData>;

        $r15 = r3[i8];

        $d2 = virtualinvoke $r15.<java.lang.Double: double doubleValue()>();

        $r16[i8] = $d2;

        i8 = i8 + 1;

        goto label5;

     label6:
        return;
    }

    public void <init>(java.util.List, java.util.List, java.util.List, java.lang.String)
    {
        com.opengamma.analytics.math.surface.DoublesSurface r0;
        java.util.List r1, r2, r3;
        java.lang.String r4;
        java.lang.Double r5, r6, r7;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, i8, $i9;
        double[] $r8, $r9, $r10, $r14, $r15, $r16;
        java.lang.Object $r11, $r12, $r13;
        double $d0, $d1, $d2;
        boolean $z0, $z1;

        r0 := @this: com.opengamma.analytics.math.surface.DoublesSurface;

        r1 := @parameter0: java.util.List;

        r2 := @parameter1: java.util.List;

        r3 := @parameter2: java.util.List;

        r4 := @parameter3: java.lang.String;

        specialinvoke r0.<com.opengamma.analytics.math.surface.Surface: void <init>(java.lang.String)>(r4);

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object,java.lang.String)>(r1, "x data");

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object,java.lang.String)>(r2, "y data");

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object,java.lang.String)>(r3, "z data");

        $i0 = interfaceinvoke r1.<java.util.List: int size()>();

        $i1 = interfaceinvoke r2.<java.util.List: int size()>();

        if $i0 != $i1 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        staticinvoke <org.apache.commons.lang.Validate: void isTrue(boolean)>($z0);

        $i2 = interfaceinvoke r1.<java.util.List: int size()>();

        $i3 = interfaceinvoke r3.<java.util.List: int size()>();

        if $i2 != $i3 goto label3;

        $z1 = 1;

        goto label4;

     label3:
        $z1 = 0;

     label4:
        staticinvoke <org.apache.commons.lang.Validate: void isTrue(boolean)>($z1);

        $i4 = interfaceinvoke r1.<java.util.List: int size()>();

        r0.<com.opengamma.analytics.math.surface.DoublesSurface: int _n> = $i4;

        $i5 = r0.<com.opengamma.analytics.math.surface.DoublesSurface: int _n>;

        $r8 = newarray (double)[$i5];

        r0.<com.opengamma.analytics.math.surface.DoublesSurface: double[] _xData> = $r8;

        $i6 = r0.<com.opengamma.analytics.math.surface.DoublesSurface: int _n>;

        $r9 = newarray (double)[$i6];

        r0.<com.opengamma.analytics.math.surface.DoublesSurface: double[] _yData> = $r9;

        $i7 = r0.<com.opengamma.analytics.math.surface.DoublesSurface: int _n>;

        $r10 = newarray (double)[$i7];

        r0.<com.opengamma.analytics.math.surface.DoublesSurface: double[] _zData> = $r10;

        i8 = 0;

     label5:
        $i9 = r0.<com.opengamma.analytics.math.surface.DoublesSurface: int _n>;

        if i8 >= $i9 goto label6;

        $r11 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i8);

        r5 = (java.lang.Double) $r11;

        $r12 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>(i8);

        r6 = (java.lang.Double) $r12;

        $r13 = interfaceinvoke r3.<java.util.List: java.lang.Object get(int)>(i8);

        r7 = (java.lang.Double) $r13;

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object)>(r5);

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object)>(r6);

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object)>(r7);

        $r14 = r0.<com.opengamma.analytics.math.surface.DoublesSurface: double[] _xData>;

        $d0 = virtualinvoke r5.<java.lang.Double: double doubleValue()>();

        $r14[i8] = $d0;

        $r15 = r0.<com.opengamma.analytics.math.surface.DoublesSurface: double[] _yData>;

        $d1 = virtualinvoke r6.<java.lang.Double: double doubleValue()>();

        $r15[i8] = $d1;

        $r16 = r0.<com.opengamma.analytics.math.surface.DoublesSurface: double[] _zData>;

        $d2 = virtualinvoke r7.<java.lang.Double: double doubleValue()>();

        $r16[i8] = $d2;

        i8 = i8 + 1;

        goto label5;

     label6:
        return;
    }

    public void <init>(com.opengamma.util.tuple.DoublesPair[], double[], java.lang.String)
    {
        com.opengamma.analytics.math.surface.DoublesSurface r0;
        com.opengamma.util.tuple.DoublesPair[] r1;
        double[] r2, $r5, $r6, $r7, $r9, $r10;
        java.lang.String r3;
        com.opengamma.util.tuple.DoublesPair r4;
        int $i0, $i1, $i2, $i3, $i4, $i5, i6, $i7;
        double $d0, $d1, $d2;
        java.lang.Double $r8;
        boolean $z0;

        r0 := @this: com.opengamma.analytics.math.surface.DoublesSurface;

        r1 := @parameter0: com.opengamma.util.tuple.DoublesPair[];

        r2 := @parameter1: double[];

        r3 := @parameter2: java.lang.String;

        specialinvoke r0.<com.opengamma.analytics.math.surface.Surface: void <init>(java.lang.String)>(r3);

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object,java.lang.String)>(r1, "x-y data");

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object,java.lang.String)>(r2, "z data");

        $i1 = lengthof r1;

        $i0 = lengthof r2;

        if $i1 != $i0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        staticinvoke <org.apache.commons.lang.Validate: void isTrue(boolean)>($z0);

        $i2 = lengthof r1;

        r0.<com.opengamma.analytics.math.surface.DoublesSurface: int _n> = $i2;

        $i3 = r0.<com.opengamma.analytics.math.surface.DoublesSurface: int _n>;

        $r5 = newarray (double)[$i3];

        r0.<com.opengamma.analytics.math.surface.DoublesSurface: double[] _xData> = $r5;

        $i4 = r0.<com.opengamma.analytics.math.surface.DoublesSurface: int _n>;

        $r6 = newarray (double)[$i4];

        r0.<com.opengamma.analytics.math.surface.DoublesSurface: double[] _yData> = $r6;

        $i5 = r0.<com.opengamma.analytics.math.surface.DoublesSurface: int _n>;

        $r7 = staticinvoke <java.util.Arrays: double[] copyOf(double[],int)>(r2, $i5);

        r0.<com.opengamma.analytics.math.surface.DoublesSurface: double[] _zData> = $r7;

        i6 = 0;

     label3:
        $i7 = r0.<com.opengamma.analytics.math.surface.DoublesSurface: int _n>;

        if i6 >= $i7 goto label4;

        r4 = r1[i6];

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object)>(r4);

        $d0 = r2[i6];

        $r8 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object)>($r8);

        $r9 = r0.<com.opengamma.analytics.math.surface.DoublesSurface: double[] _xData>;

        $d1 = r4.<com.opengamma.util.tuple.DoublesPair: double first>;

        $r9[i6] = $d1;

        $r10 = r0.<com.opengamma.analytics.math.surface.DoublesSurface: double[] _yData>;

        $d2 = r4.<com.opengamma.util.tuple.DoublesPair: double second>;

        $r10[i6] = $d2;

        i6 = i6 + 1;

        goto label3;

     label4:
        return;
    }

    public void <init>(com.opengamma.util.tuple.DoublesPair[], java.lang.Double[], java.lang.String)
    {
        com.opengamma.analytics.math.surface.DoublesSurface r0;
        com.opengamma.util.tuple.DoublesPair[] r1;
        java.lang.Double[] r2;
        java.lang.String r3;
        com.opengamma.util.tuple.DoublesPair r4;
        int $i0, $i1, $i2, $i3, $i4, $i5, i6, $i7;
        double[] $r5, $r6, $r7, $r9, $r10, $r12;
        java.lang.Double $r8, $r11;
        double $d0, $d1, $d2;
        boolean $z0;

        r0 := @this: com.opengamma.analytics.math.surface.DoublesSurface;

        r1 := @parameter0: com.opengamma.util.tuple.DoublesPair[];

        r2 := @parameter1: java.lang.Double[];

        r3 := @parameter2: java.lang.String;

        specialinvoke r0.<com.opengamma.analytics.math.surface.Surface: void <init>(java.lang.String)>(r3);

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object,java.lang.String)>(r1, "x-y data");

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object,java.lang.String)>(r2, "z data");

        $i1 = lengthof r1;

        $i0 = lengthof r2;

        if $i1 != $i0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        staticinvoke <org.apache.commons.lang.Validate: void isTrue(boolean)>($z0);

        $i2 = lengthof r1;

        r0.<com.opengamma.analytics.math.surface.DoublesSurface: int _n> = $i2;

        $i3 = r0.<com.opengamma.analytics.math.surface.DoublesSurface: int _n>;

        $r5 = newarray (double)[$i3];

        r0.<com.opengamma.analytics.math.surface.DoublesSurface: double[] _xData> = $r5;

        $i4 = r0.<com.opengamma.analytics.math.surface.DoublesSurface: int _n>;

        $r6 = newarray (double)[$i4];

        r0.<com.opengamma.analytics.math.surface.DoublesSurface: double[] _yData> = $r6;

        $i5 = r0.<com.opengamma.analytics.math.surface.DoublesSurface: int _n>;

        $r7 = newarray (double)[$i5];

        r0.<com.opengamma.analytics.math.surface.DoublesSurface: double[] _zData> = $r7;

        i6 = 0;

     label3:
        $i7 = r0.<com.opengamma.analytics.math.surface.DoublesSurface: int _n>;

        if i6 >= $i7 goto label4;

        r4 = r1[i6];

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object)>(r4);

        $r8 = r2[i6];

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object)>($r8);

        $r9 = r0.<com.opengamma.analytics.math.surface.DoublesSurface: double[] _xData>;

        $d0 = r4.<com.opengamma.util.tuple.DoublesPair: double first>;

        $r9[i6] = $d0;

        $r10 = r0.<com.opengamma.analytics.math.surface.DoublesSurface: double[] _yData>;

        $d1 = r4.<com.opengamma.util.tuple.DoublesPair: double second>;

        $r10[i6] = $d1;

        $r12 = r0.<com.opengamma.analytics.math.surface.DoublesSurface: double[] _zData>;

        $r11 = r2[i6];

        $d2 = virtualinvoke $r11.<java.lang.Double: double doubleValue()>();

        $r12[i6] = $d2;

        i6 = i6 + 1;

        goto label3;

     label4:
        return;
    }

    public void <init>(java.util.List, java.util.List, java.lang.String)
    {
        com.opengamma.analytics.math.surface.DoublesSurface r0;
        java.util.List r1, r2;
        java.lang.String r3;
        com.opengamma.util.tuple.DoublesPair r4;
        java.lang.Double r5;
        int $i0, $i1, $i2, $i3, $i4, $i5, i6, $i7;
        double[] $r6, $r7, $r8, $r11, $r12, $r13;
        java.lang.Object $r9, $r10;
        double $d0, $d1, $d2;
        boolean $z0;

        r0 := @this: com.opengamma.analytics.math.surface.DoublesSurface;

        r1 := @parameter0: java.util.List;

        r2 := @parameter1: java.util.List;

        r3 := @parameter2: java.lang.String;

        specialinvoke r0.<com.opengamma.analytics.math.surface.Surface: void <init>(java.lang.String)>(r3);

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object,java.lang.String)>(r1, "x-y data");

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object,java.lang.String)>(r2, "z data");

        $i0 = interfaceinvoke r1.<java.util.List: int size()>();

        $i1 = interfaceinvoke r2.<java.util.List: int size()>();

        if $i0 != $i1 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        staticinvoke <org.apache.commons.lang.Validate: void isTrue(boolean)>($z0);

        $i2 = interfaceinvoke r1.<java.util.List: int size()>();

        r0.<com.opengamma.analytics.math.surface.DoublesSurface: int _n> = $i2;

        $i3 = r0.<com.opengamma.analytics.math.surface.DoublesSurface: int _n>;

        $r6 = newarray (double)[$i3];

        r0.<com.opengamma.analytics.math.surface.DoublesSurface: double[] _xData> = $r6;

        $i4 = r0.<com.opengamma.analytics.math.surface.DoublesSurface: int _n>;

        $r7 = newarray (double)[$i4];

        r0.<com.opengamma.analytics.math.surface.DoublesSurface: double[] _yData> = $r7;

        $i5 = r0.<com.opengamma.analytics.math.surface.DoublesSurface: int _n>;

        $r8 = newarray (double)[$i5];

        r0.<com.opengamma.analytics.math.surface.DoublesSurface: double[] _zData> = $r8;

        i6 = 0;

     label3:
        $i7 = r0.<com.opengamma.analytics.math.surface.DoublesSurface: int _n>;

        if i6 >= $i7 goto label4;

        $r9 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i6);

        r4 = (com.opengamma.util.tuple.DoublesPair) $r9;

        $r10 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>(i6);

        r5 = (java.lang.Double) $r10;

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object)>(r4);

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object)>(r5);

        $r11 = r0.<com.opengamma.analytics.math.surface.DoublesSurface: double[] _xData>;

        $d0 = r4.<com.opengamma.util.tuple.DoublesPair: double first>;

        $r11[i6] = $d0;

        $r12 = r0.<com.opengamma.analytics.math.surface.DoublesSurface: double[] _yData>;

        $d1 = r4.<com.opengamma.util.tuple.DoublesPair: double second>;

        $r12[i6] = $d1;

        $r13 = r0.<com.opengamma.analytics.math.surface.DoublesSurface: double[] _zData>;

        $d2 = virtualinvoke r5.<java.lang.Double: double doubleValue()>();

        $r13[i6] = $d2;

        i6 = i6 + 1;

        goto label3;

     label4:
        return;
    }

    public void <init>(java.util.Map, java.lang.String)
    {
        com.opengamma.analytics.math.surface.DoublesSurface r0;
        java.util.Map r1;
        java.lang.String r2;
        java.util.Iterator r3;
        java.util.Map$Entry r4;
        int $i0, $i1, $i2, $i3, $i4, i5;
        double[] $r5, $r6, $r7, $r12, $r15, $r18;
        java.util.Set $r8;
        boolean $z0;
        java.lang.Object $r9, $r10, $r11, $r13, $r16, $r19;
        com.opengamma.util.tuple.DoublesPair $r14, $r17;
        double $d0, $d1, $d2;
        java.lang.Double $r20;

        r0 := @this: com.opengamma.analytics.math.surface.DoublesSurface;

        r1 := @parameter0: java.util.Map;

        r2 := @parameter1: java.lang.String;

        specialinvoke r0.<com.opengamma.analytics.math.surface.Surface: void <init>(java.lang.String)>(r2);

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object,java.lang.String)>(r1, "x-y-z data");

        $i0 = interfaceinvoke r1.<java.util.Map: int size()>();

        r0.<com.opengamma.analytics.math.surface.DoublesSurface: int _n> = $i0;

        $i1 = r0.<com.opengamma.analytics.math.surface.DoublesSurface: int _n>;

        $r5 = newarray (double)[$i1];

        r0.<com.opengamma.analytics.math.surface.DoublesSurface: double[] _xData> = $r5;

        $i2 = r0.<com.opengamma.analytics.math.surface.DoublesSurface: int _n>;

        $r6 = newarray (double)[$i2];

        r0.<com.opengamma.analytics.math.surface.DoublesSurface: double[] _yData> = $r6;

        $i3 = r0.<com.opengamma.analytics.math.surface.DoublesSurface: int _n>;

        $r7 = newarray (double)[$i3];

        r0.<com.opengamma.analytics.math.surface.DoublesSurface: double[] _zData> = $r7;

        i5 = 0;

        $r8 = interfaceinvoke r1.<java.util.Map: java.util.Set entrySet()>();

        r3 = interfaceinvoke $r8.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r9 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (java.util.Map$Entry) $r9;

        $r10 = interfaceinvoke r4.<java.util.Map$Entry: java.lang.Object getKey()>();

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object)>($r10);

        $r11 = interfaceinvoke r4.<java.util.Map$Entry: java.lang.Object getValue()>();

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object)>($r11);

        $r12 = r0.<com.opengamma.analytics.math.surface.DoublesSurface: double[] _xData>;

        $r13 = interfaceinvoke r4.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r14 = (com.opengamma.util.tuple.DoublesPair) $r13;

        $d0 = $r14.<com.opengamma.util.tuple.DoublesPair: double first>;

        $r12[i5] = $d0;

        $r15 = r0.<com.opengamma.analytics.math.surface.DoublesSurface: double[] _yData>;

        $r16 = interfaceinvoke r4.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r17 = (com.opengamma.util.tuple.DoublesPair) $r16;

        $d1 = $r17.<com.opengamma.util.tuple.DoublesPair: double second>;

        $r15[i5] = $d1;

        $r18 = r0.<com.opengamma.analytics.math.surface.DoublesSurface: double[] _zData>;

        $i4 = i5;

        i5 = i5 + 1;

        $r19 = interfaceinvoke r4.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r20 = (java.lang.Double) $r19;

        $d2 = virtualinvoke $r20.<java.lang.Double: double doubleValue()>();

        $r18[$i4] = $d2;

        goto label1;

     label2:
        return;
    }

    public void <init>(java.util.List, java.lang.String)
    {
        com.opengamma.analytics.math.surface.DoublesSurface r0;
        java.util.List r1;
        java.lang.String r2;
        java.util.Iterator r3;
        com.opengamma.util.tuple.Triple r4;
        double d0, d1, d2;
        int $i0, $i1, $i2, $i3, i4;
        double[] $r5, $r6, $r7, $r15, $r16, $r17;
        boolean $z0;
        java.lang.Object $r8, $r9, $r11, $r13;
        java.lang.Double $r10, $r12, $r14;

        r0 := @this: com.opengamma.analytics.math.surface.DoublesSurface;

        r1 := @parameter0: java.util.List;

        r2 := @parameter1: java.lang.String;

        specialinvoke r0.<com.opengamma.analytics.math.surface.Surface: void <init>(java.lang.String)>(r2);

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object,java.lang.String)>(r1, "x-y-z data");

        $i0 = interfaceinvoke r1.<java.util.List: int size()>();

        r0.<com.opengamma.analytics.math.surface.DoublesSurface: int _n> = $i0;

        $i1 = r0.<com.opengamma.analytics.math.surface.DoublesSurface: int _n>;

        $r5 = newarray (double)[$i1];

        r0.<com.opengamma.analytics.math.surface.DoublesSurface: double[] _xData> = $r5;

        $i2 = r0.<com.opengamma.analytics.math.surface.DoublesSurface: int _n>;

        $r6 = newarray (double)[$i2];

        r0.<com.opengamma.analytics.math.surface.DoublesSurface: double[] _yData> = $r6;

        $i3 = r0.<com.opengamma.analytics.math.surface.DoublesSurface: int _n>;

        $r7 = newarray (double)[$i3];

        r0.<com.opengamma.analytics.math.surface.DoublesSurface: double[] _zData> = $r7;

        i4 = 0;

        r3 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r8 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (com.opengamma.util.tuple.Triple) $r8;

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object)>(r4);

        $r9 = virtualinvoke r4.<com.opengamma.util.tuple.Triple: java.lang.Object getFirst()>();

        $r10 = (java.lang.Double) $r9;

        d0 = virtualinvoke $r10.<java.lang.Double: double doubleValue()>();

        $r11 = virtualinvoke r4.<com.opengamma.util.tuple.Triple: java.lang.Object getSecond()>();

        $r12 = (java.lang.Double) $r11;

        d1 = virtualinvoke $r12.<java.lang.Double: double doubleValue()>();

        $r13 = virtualinvoke r4.<com.opengamma.util.tuple.Triple: java.lang.Object getThird()>();

        $r14 = (java.lang.Double) $r13;

        d2 = virtualinvoke $r14.<java.lang.Double: double doubleValue()>();

        $r15 = r0.<com.opengamma.analytics.math.surface.DoublesSurface: double[] _xData>;

        $r15[i4] = d0;

        $r16 = r0.<com.opengamma.analytics.math.surface.DoublesSurface: double[] _yData>;

        $r16[i4] = d1;

        $r17 = r0.<com.opengamma.analytics.math.surface.DoublesSurface: double[] _zData>;

        $r17[i4] = d2;

        i4 = i4 + 1;

        goto label1;

     label2:
        return;
    }

    public java.lang.Double[] getXData()
    {
        com.opengamma.analytics.math.surface.DoublesSurface r0;
        java.lang.Double[] $r1, $r2, $r3, $r5, $r7;
        int $i0, $i1, i2;
        double[] $r4;
        double $d0;
        java.lang.Double $r6;

        r0 := @this: com.opengamma.analytics.math.surface.DoublesSurface;

        $r1 = r0.<com.opengamma.analytics.math.surface.DoublesSurface: java.lang.Double[] _xDataObject>;

        if $r1 == null goto label1;

        $r7 = r0.<com.opengamma.analytics.math.surface.DoublesSurface: java.lang.Double[] _xDataObject>;

        return $r7;

     label1:
        $i0 = r0.<com.opengamma.analytics.math.surface.DoublesSurface: int _n>;

        $r2 = newarray (java.lang.Double)[$i0];

        r0.<com.opengamma.analytics.math.surface.DoublesSurface: java.lang.Double[] _xDataObject> = $r2;

        i2 = 0;

     label2:
        $i1 = r0.<com.opengamma.analytics.math.surface.DoublesSurface: int _n>;

        if i2 >= $i1 goto label3;

        $r5 = r0.<com.opengamma.analytics.math.surface.DoublesSurface: java.lang.Double[] _xDataObject>;

        $r4 = r0.<com.opengamma.analytics.math.surface.DoublesSurface: double[] _xData>;

        $d0 = $r4[i2];

        $r6 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        $r5[i2] = $r6;

        i2 = i2 + 1;

        goto label2;

     label3:
        $r3 = r0.<com.opengamma.analytics.math.surface.DoublesSurface: java.lang.Double[] _xDataObject>;

        return $r3;
    }

    public java.lang.Double[] getYData()
    {
        com.opengamma.analytics.math.surface.DoublesSurface r0;
        java.lang.Double[] $r1, $r2, $r3, $r5, $r7;
        int $i0, $i1, i2;
        double[] $r4;
        double $d0;
        java.lang.Double $r6;

        r0 := @this: com.opengamma.analytics.math.surface.DoublesSurface;

        $r1 = r0.<com.opengamma.analytics.math.surface.DoublesSurface: java.lang.Double[] _yDataObject>;

        if $r1 == null goto label1;

        $r7 = r0.<com.opengamma.analytics.math.surface.DoublesSurface: java.lang.Double[] _yDataObject>;

        return $r7;

     label1:
        $i0 = r0.<com.opengamma.analytics.math.surface.DoublesSurface: int _n>;

        $r2 = newarray (java.lang.Double)[$i0];

        r0.<com.opengamma.analytics.math.surface.DoublesSurface: java.lang.Double[] _yDataObject> = $r2;

        i2 = 0;

     label2:
        $i1 = r0.<com.opengamma.analytics.math.surface.DoublesSurface: int _n>;

        if i2 >= $i1 goto label3;

        $r5 = r0.<com.opengamma.analytics.math.surface.DoublesSurface: java.lang.Double[] _yDataObject>;

        $r4 = r0.<com.opengamma.analytics.math.surface.DoublesSurface: double[] _yData>;

        $d0 = $r4[i2];

        $r6 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        $r5[i2] = $r6;

        i2 = i2 + 1;

        goto label2;

     label3:
        $r3 = r0.<com.opengamma.analytics.math.surface.DoublesSurface: java.lang.Double[] _yDataObject>;

        return $r3;
    }

    public java.lang.Double[] getZData()
    {
        com.opengamma.analytics.math.surface.DoublesSurface r0;
        java.lang.Double[] $r1, $r2, $r3, $r5, $r7;
        int $i0, $i1, i2;
        double[] $r4;
        double $d0;
        java.lang.Double $r6;

        r0 := @this: com.opengamma.analytics.math.surface.DoublesSurface;

        $r1 = r0.<com.opengamma.analytics.math.surface.DoublesSurface: java.lang.Double[] _zDataObject>;

        if $r1 == null goto label1;

        $r7 = r0.<com.opengamma.analytics.math.surface.DoublesSurface: java.lang.Double[] _zDataObject>;

        return $r7;

     label1:
        $i0 = r0.<com.opengamma.analytics.math.surface.DoublesSurface: int _n>;

        $r2 = newarray (java.lang.Double)[$i0];

        r0.<com.opengamma.analytics.math.surface.DoublesSurface: java.lang.Double[] _zDataObject> = $r2;

        i2 = 0;

     label2:
        $i1 = r0.<com.opengamma.analytics.math.surface.DoublesSurface: int _n>;

        if i2 >= $i1 goto label3;

        $r5 = r0.<com.opengamma.analytics.math.surface.DoublesSurface: java.lang.Double[] _zDataObject>;

        $r4 = r0.<com.opengamma.analytics.math.surface.DoublesSurface: double[] _zData>;

        $d0 = $r4[i2];

        $r6 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        $r5[i2] = $r6;

        i2 = i2 + 1;

        goto label2;

     label3:
        $r3 = r0.<com.opengamma.analytics.math.surface.DoublesSurface: java.lang.Double[] _zDataObject>;

        return $r3;
    }

    public double[] getXDataAsPrimitive()
    {
        com.opengamma.analytics.math.surface.DoublesSurface r0;
        double[] $r1;

        r0 := @this: com.opengamma.analytics.math.surface.DoublesSurface;

        $r1 = r0.<com.opengamma.analytics.math.surface.DoublesSurface: double[] _xData>;

        return $r1;
    }

    public double[] getYDataAsPrimitive()
    {
        com.opengamma.analytics.math.surface.DoublesSurface r0;
        double[] $r1;

        r0 := @this: com.opengamma.analytics.math.surface.DoublesSurface;

        $r1 = r0.<com.opengamma.analytics.math.surface.DoublesSurface: double[] _yData>;

        return $r1;
    }

    public double[] getZDataAsPrimitive()
    {
        com.opengamma.analytics.math.surface.DoublesSurface r0;
        double[] $r1;

        r0 := @this: com.opengamma.analytics.math.surface.DoublesSurface;

        $r1 = r0.<com.opengamma.analytics.math.surface.DoublesSurface: double[] _zData>;

        return $r1;
    }

    public int size()
    {
        com.opengamma.analytics.math.surface.DoublesSurface r0;
        int $i0;

        r0 := @this: com.opengamma.analytics.math.surface.DoublesSurface;

        $i0 = r0.<com.opengamma.analytics.math.surface.DoublesSurface: int _n>;

        return $i0;
    }

    public int hashCode()
    {
        com.opengamma.analytics.math.surface.DoublesSurface r0;
        double[] $r1, $r2, $r3;
        int $i1, $i2, $i3, $i4, $i5, $i6, i7, i8, i9, i10;

        r0 := @this: com.opengamma.analytics.math.surface.DoublesSurface;

        i7 = specialinvoke r0.<com.opengamma.analytics.math.surface.Surface: int hashCode()>();

        $i1 = 31 * i7;

        $r1 = r0.<com.opengamma.analytics.math.surface.DoublesSurface: double[] _xData>;

        $i2 = staticinvoke <java.util.Arrays: int hashCode(double[])>($r1);

        i8 = $i1 + $i2;

        $i3 = 31 * i8;

        $r2 = r0.<com.opengamma.analytics.math.surface.DoublesSurface: double[] _yData>;

        $i4 = staticinvoke <java.util.Arrays: int hashCode(double[])>($r2);

        i9 = $i3 + $i4;

        $i5 = 31 * i9;

        $r3 = r0.<com.opengamma.analytics.math.surface.DoublesSurface: double[] _zData>;

        $i6 = staticinvoke <java.util.Arrays: int hashCode(double[])>($r3);

        i10 = $i5 + $i6;

        return i10;
    }

    public boolean equals(java.lang.Object)
    {
        com.opengamma.analytics.math.surface.DoublesSurface r0, r2;
        java.lang.Object r1;
        boolean $z0, $z1, $z2, $z3;
        java.lang.Class $r3, $r4;
        double[] $r5, $r6, $r7, $r8, $r9, $r10;

        r0 := @this: com.opengamma.analytics.math.surface.DoublesSurface;

        r1 := @parameter0: java.lang.Object;

        if r0 != r1 goto label1;

        return 1;

     label1:
        $z0 = specialinvoke r0.<com.opengamma.analytics.math.surface.Surface: boolean equals(java.lang.Object)>(r1);

        if $z0 != 0 goto label2;

        return 0;

     label2:
        $r3 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r4 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        if $r3 == $r4 goto label3;

        return 0;

     label3:
        r2 = (com.opengamma.analytics.math.surface.DoublesSurface) r1;

        $r6 = r0.<com.opengamma.analytics.math.surface.DoublesSurface: double[] _xData>;

        $r5 = r2.<com.opengamma.analytics.math.surface.DoublesSurface: double[] _xData>;

        $z1 = staticinvoke <java.util.Arrays: boolean equals(double[],double[])>($r6, $r5);

        if $z1 != 0 goto label4;

        return 0;

     label4:
        $r8 = r0.<com.opengamma.analytics.math.surface.DoublesSurface: double[] _yData>;

        $r7 = r2.<com.opengamma.analytics.math.surface.DoublesSurface: double[] _yData>;

        $z2 = staticinvoke <java.util.Arrays: boolean equals(double[],double[])>($r8, $r7);

        if $z2 != 0 goto label5;

        return 0;

     label5:
        $r10 = r0.<com.opengamma.analytics.math.surface.DoublesSurface: double[] _zData>;

        $r9 = r2.<com.opengamma.analytics.math.surface.DoublesSurface: double[] _zData>;

        $z3 = staticinvoke <java.util.Arrays: boolean equals(double[],double[])>($r10, $r9);

        if $z3 != 0 goto label6;

        return 0;

     label6:
        return 1;
    }

    public volatile java.lang.Object[] getZData()
    {
        com.opengamma.analytics.math.surface.DoublesSurface r0;
        java.lang.Double[] $r1;

        r0 := @this: com.opengamma.analytics.math.surface.DoublesSurface;

        $r1 = virtualinvoke r0.<com.opengamma.analytics.math.surface.DoublesSurface: java.lang.Double[] getZData()>();

        return $r1;
    }

    public volatile java.lang.Object[] getYData()
    {
        com.opengamma.analytics.math.surface.DoublesSurface r0;
        java.lang.Double[] $r1;

        r0 := @this: com.opengamma.analytics.math.surface.DoublesSurface;

        $r1 = virtualinvoke r0.<com.opengamma.analytics.math.surface.DoublesSurface: java.lang.Double[] getYData()>();

        return $r1;
    }

    public volatile java.lang.Object[] getXData()
    {
        com.opengamma.analytics.math.surface.DoublesSurface r0;
        java.lang.Double[] $r1;

        r0 := @this: com.opengamma.analytics.math.surface.DoublesSurface;

        $r1 = virtualinvoke r0.<com.opengamma.analytics.math.surface.DoublesSurface: java.lang.Double[] getXData()>();

        return $r1;
    }
}
