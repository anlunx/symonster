public class com.opengamma.analytics.financial.volatilityswap.CarrLeeSeasonedSyntheticVolatilitySwapCalculator extends java.lang.Object
{
    private static final com.opengamma.analytics.math.integration.Integrator1D INTEGRATOR;
    private static final double EPS;

    public void <init>()
    {
        com.opengamma.analytics.financial.volatilityswap.CarrLeeSeasonedSyntheticVolatilitySwapCalculator r0;

        r0 := @this: com.opengamma.analytics.financial.volatilityswap.CarrLeeSeasonedSyntheticVolatilitySwapCalculator;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public com.opengamma.analytics.financial.volatilityswap.VolatilitySwapCalculatorResult evaluate(double, double[], double[], double, double, double, double, double[], double[], double)
    {
        com.opengamma.analytics.financial.volatilityswap.CarrLeeSeasonedSyntheticVolatilitySwapCalculator r0;
        double d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, d10, d11, d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21, $d22, $d23, $d24, $d25, $d26, $d27, $d28, $d29, $d30, $d31, $d32, $d33, $d34, $d35, $d36, $d37, $d38, $d39, $d40, $d41, $d42, $d43, $d44, $d45, $d46, $d47, $d48, $d49, $d50, $d51, $d52, $d53, $d54, d55, $d56, $d57, $d58, $d59, $d60, $d61, $d62, $d63, $d64, d65;
        double[] r1, r2, r3, r4, r5, r6, r7, r8;
        int i0, i1, $i2, $i3, $i8, $i9, $i10, $i13, $i14, $i15, $i19, $i20, $i24, $i25, i27, i28, $i29, i31, i32;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19, $z20, $z21, $z22;
        byte $b4, $b5, $b6, $b7, $b11, $b12, $b16, $b17, $b18, $b21, $b22, $b23, $b26, $b30;
        com.opengamma.analytics.financial.volatilityswap.VolatilitySwapCalculatorResult $r13;

        r0 := @this: com.opengamma.analytics.financial.volatilityswap.CarrLeeSeasonedSyntheticVolatilitySwapCalculator;

        d0 := @parameter0: double;

        r1 := @parameter1: double[];

        r2 := @parameter2: double[];

        d1 := @parameter3: double;

        d2 := @parameter4: double;

        d3 := @parameter5: double;

        d4 := @parameter6: double;

        r3 := @parameter7: double[];

        r4 := @parameter8: double[];

        d5 := @parameter9: double;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, "callStrikes");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "putStrikes");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r4, "callVols");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r3, "putVols");

        i0 = lengthof r2;

        i1 = lengthof r1;

        $i2 = lengthof r4;

        if $i2 != i0 goto label01;

        $z10 = 1;

        goto label02;

     label01:
        $z10 = 0;

     label02:
        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z10, "callVols.length == callStrikes.length should hold");

        $i3 = lengthof r3;

        if $i3 != i1 goto label03;

        $z11 = 1;

        goto label04;

     label03:
        $z11 = 0;

     label04:
        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z11, "putVols.length == putStrikes.length should hold");

        $z0 = staticinvoke <com.google.common.primitives.Doubles: boolean isFinite(double)>(d0);

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z0, "spot should be finite");

        $b4 = d0 cmpl 0.0;

        if $b4 <= 0 goto label05;

        $z12 = 1;

        goto label06;

     label05:
        $z12 = 0;

     label06:
        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z12, "spot should be positive");

        $z1 = staticinvoke <com.google.common.primitives.Doubles: boolean isFinite(double)>(d1);

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z1, "timeToExpiry should be finite");

        $b5 = d1 cmpl 0.0;

        if $b5 <= 0 goto label07;

        $z13 = 1;

        goto label08;

     label07:
        $z13 = 0;

     label08:
        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z13, "timeToExpiry should be positive");

        $z2 = staticinvoke <com.google.common.primitives.Doubles: boolean isFinite(double)>(d2);

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z2, "timeFromInception should be finite");

        $b6 = d2 cmpl 0.0;

        if $b6 <= 0 goto label09;

        $z14 = 1;

        goto label10;

     label09:
        $z14 = 0;

     label10:
        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z14, "timeFromInception should be positive");

        $z3 = staticinvoke <com.google.common.primitives.Doubles: boolean isFinite(double)>(d3);

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z3, "interestRate should be finite");

        $z4 = staticinvoke <com.google.common.primitives.Doubles: boolean isFinite(double)>(d4);

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z4, "dividend should be finite");

        $z5 = staticinvoke <com.google.common.primitives.Doubles: boolean isFinite(double)>(d5);

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z5, "rvReturns should be finite");

        $b7 = d5 cmpl 0.0;

        if $b7 <= 0 goto label11;

        $z15 = 1;

        goto label12;

     label11:
        $z15 = 0;

     label12:
        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z15, "rvReturns should be positive");

        $i8 = i0 - 1;

        $d14 = r2[$i8];

        $d13 = r1[0];

        $d16 = $d14 - $d13;

        $i9 = i0 + i1;

        $i10 = $i9 - 1;

        $d15 = (double) $i10;

        d6 = $d16 / $d15;

        i27 = 0;

     label13:
        if i27 >= i0 goto label21;

        $d46 = r2[i27];

        $z8 = staticinvoke <com.google.common.primitives.Doubles: boolean isFinite(double)>($d46);

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z8, "callStrikes should be finite");

        $d47 = r2[i27];

        $b22 = $d47 cmpl 0.0;

        if $b22 <= 0 goto label14;

        $z16 = 1;

        goto label15;

     label14:
        $z16 = 0;

     label15:
        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z16, "callStrikes should be positive");

        $d48 = r4[i27];

        $z9 = staticinvoke <com.google.common.primitives.Doubles: boolean isFinite(double)>($d48);

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z9, "callVols should be finite");

        $d49 = r4[i27];

        $b23 = $d49 cmpl 0.0;

        if $b23 <= 0 goto label16;

        $z17 = 1;

        goto label17;

     label16:
        $z17 = 0;

     label17:
        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z17, "callVols should be positive");

        $i24 = i0 - 1;

        if i27 >= $i24 goto label20;

        $i25 = i27 + 1;

        $d51 = r2[$i25];

        $d50 = r2[i27];

        $d52 = $d51 - $d50;

        $d53 = $d52 - d6;

        $d54 = staticinvoke <java.lang.Math: double abs(double)>($d53);

        $b26 = $d54 cmpg 1.0E-12;

        if $b26 >= 0 goto label18;

        $z18 = 1;

        goto label19;

     label18:
        $z18 = 0;

     label19:
        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z18, "All of the strikes  should be equally spaced");

     label20:
        i27 = i27 + 1;

        goto label13;

     label21:
        i28 = 0;

     label22:
        if i28 >= i1 goto label30;

        $d37 = r1[i28];

        $z6 = staticinvoke <com.google.common.primitives.Doubles: boolean isFinite(double)>($d37);

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z6, "putStrikes should be finite");

        $d38 = r1[i28];

        $b17 = $d38 cmpl 0.0;

        if $b17 <= 0 goto label23;

        $z19 = 1;

        goto label24;

     label23:
        $z19 = 0;

     label24:
        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z19, "putStrikes should be positive");

        $d39 = r3[i28];

        $z7 = staticinvoke <com.google.common.primitives.Doubles: boolean isFinite(double)>($d39);

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z7, "putVols should be finite");

        $d40 = r3[i28];

        $b18 = $d40 cmpl 0.0;

        if $b18 <= 0 goto label25;

        $z20 = 1;

        goto label26;

     label25:
        $z20 = 0;

     label26:
        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z20, "putVols should be positive");

        $i19 = i1 - 1;

        if i28 >= $i19 goto label29;

        $i20 = i28 + 1;

        $d42 = r1[$i20];

        $d41 = r1[i28];

        $d43 = $d42 - $d41;

        $d44 = $d43 - d6;

        $d45 = staticinvoke <java.lang.Math: double abs(double)>($d44);

        $b21 = $d45 cmpg 1.0E-12;

        if $b21 >= 0 goto label27;

        $z21 = 1;

        goto label28;

     label27:
        $z21 = 0;

     label28:
        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z21, "All of the strikes  should be equally spaced");

     label29:
        i28 = i28 + 1;

        goto label22;

     label30:
        d55 = d3 - d4;

        $d17 = d55 * d1;

        $d18 = staticinvoke <java.lang.Math: double exp(double)>($d17);

        d7 = d0 * $d18;

        $d19 = r2[0];

        $b11 = $d19 cmpl d7;

        if $b11 < 0 goto label31;

        $i15 = i1 - 1;

        $d36 = r1[$i15];

        $b16 = $d36 cmpg d7;

        if $b16 > 0 goto label31;

        $z22 = 1;

        goto label32;

     label31:
        $z22 = 0;

     label32:
        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z22, "Max(putStrikes) <= forward <= Min(callStrikes) should hold");

        $d56 = d1 + d2;

        $d57 = staticinvoke <java.lang.Math: double sqrt(double)>($d56);

        d8 = 100.0 / $d57;

        $d58 = staticinvoke <java.lang.Math: double sqrt(double)>(d2);

        d9 = 100.0 / $d58;

        $d59 = d5 * d2;

        d10 = $d59 * 1.0E-4;

        $d60 = staticinvoke <java.lang.Math: double sqrt(double)>(0.6366197723675814);

        d11 = d8 * $d60;

        r5 = specialinvoke r0.<com.opengamma.analytics.financial.volatilityswap.CarrLeeSeasonedSyntheticVolatilitySwapCalculator: double[] getWeight(double,double[],double,double,double)>(d7, r2, d6, d10, d11);

        r6 = specialinvoke r0.<com.opengamma.analytics.financial.volatilityswap.CarrLeeSeasonedSyntheticVolatilitySwapCalculator: double[] getWeight(double,double[],double,double,double)>(d7, r1, d6, d10, d11);

        $d61 = r2[0];

        $i29 = i1 - 1;

        $d62 = r1[$i29];

        $d63 = $d61 + $d62;

        $d64 = 2.0 * d7;

        d12 = $d63 - $d64;

        $b30 = d12 cmpg -1.0E-12;

        if $b30 >= 0 goto label33;

        $d34 = r2[0];

        $d35 = specialinvoke r0.<com.opengamma.analytics.financial.volatilityswap.CarrLeeSeasonedSyntheticVolatilitySwapCalculator: double getNearestWeight(double,double,double,double,double)>(d7, d6, $d34, d10, d11);

        r5[0] = $d35;

        goto label34;

     label33:
        $b12 = d12 cmpl 1.0E-12;

        if $b12 <= 0 goto label34;

        $i14 = i1 - 1;

        $i13 = i1 - 1;

        $d32 = r1[$i13];

        $d33 = specialinvoke r0.<com.opengamma.analytics.financial.volatilityswap.CarrLeeSeasonedSyntheticVolatilitySwapCalculator: double getNearestWeight(double,double,double,double,double)>(d7, d6, $d32, d10, d11);

        r6[$i14] = $d33;

     label34:
        r7 = newarray (double)[i1];

        r8 = newarray (double)[i0];

        i31 = 0;

     label35:
        if i31 >= i0 goto label36;

        $d30 = r2[i31];

        $d29 = r4[i31];

        $d31 = staticinvoke <com.opengamma.analytics.financial.model.volatility.BlackScholesFormulaRepository: double price(double,double,double,double,double,double,boolean)>(d0, $d30, d1, $d29, d3, d55, 1);

        r8[i31] = $d31;

        i31 = i31 + 1;

        goto label35;

     label36:
        i32 = 0;

     label37:
        if i32 >= i1 goto label38;

        $d27 = r1[i32];

        $d26 = r3[i32];

        $d28 = staticinvoke <com.opengamma.analytics.financial.model.volatility.BlackScholesFormulaRepository: double price(double,double,double,double,double,double,boolean)>(d0, $d27, d1, $d26, d3, d55, 0);

        r7[i32] = $d28;

        i32 = i32 + 1;

        goto label37;

     label38:
        $d20 = neg d3;

        $d21 = $d20 * d1;

        $d22 = staticinvoke <java.lang.Math: double exp(double)>($d21);

        $d23 = staticinvoke <java.lang.Math: double sqrt(double)>(d5);

        $d24 = $d22 * $d23;

        $d25 = $d24 * d8;

        d65 = $d25 / d9;

        $r13 = new com.opengamma.analytics.financial.volatilityswap.VolatilitySwapCalculatorResult;

        specialinvoke $r13.<com.opengamma.analytics.financial.volatilityswap.VolatilitySwapCalculatorResult: void <init>(double[],double,double[],double[],double,double[],double)>(r6, 0.0, r5, r7, 0.0, r8, d65);

        return $r13;
    }

    private double[] getWeight(double, double[], double, double, double)
    {
        com.opengamma.analytics.financial.volatilityswap.CarrLeeSeasonedSyntheticVolatilitySwapCalculator r0;
        double d0, d1, d2, d3, d4, d5, d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21, $d22, $d23, $d24, $d25, $d26, $d27, $d28, $d29;
        double[] r1, r2;
        int i0, i2;
        com.opengamma.analytics.math.function.Function1D r3, r4;
        byte $b1;
        com.opengamma.analytics.math.integration.Integrator1D $r5, $r10;
        java.lang.Double $r6, $r7, $r9, $r11, $r12, $r14;
        java.lang.Object $r8, $r13;

        r0 := @this: com.opengamma.analytics.financial.volatilityswap.CarrLeeSeasonedSyntheticVolatilitySwapCalculator;

        d0 := @parameter0: double;

        r1 := @parameter1: double[];

        d1 := @parameter2: double;

        d2 := @parameter3: double;

        d3 := @parameter4: double;

        i0 = lengthof r1;

        r2 = newarray (double)[i0];

        $d7 = 0.5 * d1;

        d4 = $d7 * d3;

        i2 = 0;

     label1:
        if i2 >= i0 goto label4;

        $d8 = r1[i2];

        $d9 = $d8 / d0;

        d5 = staticinvoke <java.lang.Math: double log(double)>($d9);

        $d10 = staticinvoke <java.lang.Math: double abs(double)>(d5);

        $b1 = $d10 cmpg 1.0E-12;

        if $b1 >= 0 goto label2;

        $d23 = 6.283185307179586 / d2;

        $d24 = staticinvoke <java.lang.Math: double sqrt(double)>($d23);

        $d26 = d4 * $d24;

        $d25 = r1[i2];

        $d28 = $d26 / $d25;

        $d27 = r1[i2];

        $d29 = $d28 / $d27;

        r2[i2] = $d29;

        goto label3;

     label2:
        $d11 = staticinvoke <java.lang.Math: double sqrt(double)>(d2);

        d6 = 50.0 / $d11;

        r3 = specialinvoke r0.<com.opengamma.analytics.financial.volatilityswap.CarrLeeSeasonedSyntheticVolatilitySwapCalculator: com.opengamma.analytics.math.function.Function1D integrandFin(double,double)>(d5, d2);

        r4 = specialinvoke r0.<com.opengamma.analytics.financial.volatilityswap.CarrLeeSeasonedSyntheticVolatilitySwapCalculator: com.opengamma.analytics.math.function.Function1D integrandInf(double,double)>(d5, d2);

        $d12 = 0.5 * d5;

        $d13 = staticinvoke <java.lang.Math: double exp(double)>($d12);

        $d14 = d4 * $d13;

        $r5 = <com.opengamma.analytics.financial.volatilityswap.CarrLeeSeasonedSyntheticVolatilitySwapCalculator: com.opengamma.analytics.math.integration.Integrator1D INTEGRATOR>;

        $r6 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(0.0);

        $r7 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(1.5707963267948966);

        $r8 = virtualinvoke $r5.<com.opengamma.analytics.math.integration.Integrator1D: java.lang.Object integrate(com.opengamma.analytics.math.function.Function1D,java.lang.Object,java.lang.Object)>(r3, $r6, $r7);

        $r9 = (java.lang.Double) $r8;

        $d15 = virtualinvoke $r9.<java.lang.Double: double doubleValue()>();

        $r10 = <com.opengamma.analytics.financial.volatilityswap.CarrLeeSeasonedSyntheticVolatilitySwapCalculator: com.opengamma.analytics.math.integration.Integrator1D INTEGRATOR>;

        $r11 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(0.0);

        $r12 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d6);

        $r13 = virtualinvoke $r10.<com.opengamma.analytics.math.integration.Integrator1D: java.lang.Object integrate(com.opengamma.analytics.math.function.Function1D,java.lang.Object,java.lang.Object)>(r4, $r11, $r12);

        $r14 = (java.lang.Double) $r13;

        $d16 = virtualinvoke $r14.<java.lang.Double: double doubleValue()>();

        $d17 = $d15 + $d16;

        $d19 = $d14 * $d17;

        $d18 = r1[i2];

        $d21 = $d19 / $d18;

        $d20 = r1[i2];

        $d22 = $d21 / $d20;

        r2[i2] = $d22;

     label3:
        i2 = i2 + 1;

        goto label1;

     label4:
        return r2;
    }

    private double getNearestWeight(double, double, double, double, double)
    {
        com.opengamma.analytics.financial.volatilityswap.CarrLeeSeasonedSyntheticVolatilitySwapCalculator r0;
        double d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17;

        r0 := @this: com.opengamma.analytics.financial.volatilityswap.CarrLeeSeasonedSyntheticVolatilitySwapCalculator;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        d2 := @parameter2: double;

        d3 := @parameter3: double;

        d4 := @parameter4: double;

        d5 = 0.5 * d1;

        d6 = d2 + d5;

        d7 = d2 - d5;

        $d10 = d6 / d0;

        d8 = staticinvoke <java.lang.Math: double log(double)>($d10);

        $d11 = d7 / d0;

        d9 = staticinvoke <java.lang.Math: double log(double)>($d11);

        $d12 = specialinvoke r0.<com.opengamma.analytics.financial.volatilityswap.CarrLeeSeasonedSyntheticVolatilitySwapCalculator: double getCloseIntegrals(double,double)>(d3, d8);

        $d13 = $d12 / d6;

        $d14 = specialinvoke r0.<com.opengamma.analytics.financial.volatilityswap.CarrLeeSeasonedSyntheticVolatilitySwapCalculator: double getCloseIntegrals(double,double)>(d3, d9);

        $d15 = $d14 / d7;

        $d16 = $d13 - $d15;

        $d17 = d4 * $d16;

        return $d17;
    }

    private double getCloseIntegrals(double, double)
    {
        com.opengamma.analytics.financial.volatilityswap.CarrLeeSeasonedSyntheticVolatilitySwapCalculator r0;
        double d0, d1, d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9;
        com.opengamma.analytics.math.function.Function1D r1, r2;
        com.opengamma.analytics.math.integration.Integrator1D $r3, $r8;
        java.lang.Double $r4, $r5, $r7, $r9, $r10, $r12;
        java.lang.Object $r6, $r11;

        r0 := @this: com.opengamma.analytics.financial.volatilityswap.CarrLeeSeasonedSyntheticVolatilitySwapCalculator;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        r1 = specialinvoke r0.<com.opengamma.analytics.financial.volatilityswap.CarrLeeSeasonedSyntheticVolatilitySwapCalculator: com.opengamma.analytics.math.function.Function1D closeIntegrandFin(double,double)>(d1, d0);

        r2 = specialinvoke r0.<com.opengamma.analytics.financial.volatilityswap.CarrLeeSeasonedSyntheticVolatilitySwapCalculator: com.opengamma.analytics.math.function.Function1D closeIntegrandInf(double,double)>(d1, d0);

        $d3 = staticinvoke <java.lang.Math: double sqrt(double)>(d0);

        d2 = 50.0 / $d3;

        $d4 = 0.5 * d1;

        $d5 = staticinvoke <java.lang.Math: double exp(double)>($d4);

        $r3 = <com.opengamma.analytics.financial.volatilityswap.CarrLeeSeasonedSyntheticVolatilitySwapCalculator: com.opengamma.analytics.math.integration.Integrator1D INTEGRATOR>;

        $r4 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(0.0);

        $r5 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(1.5707963267948966);

        $r6 = virtualinvoke $r3.<com.opengamma.analytics.math.integration.Integrator1D: java.lang.Object integrate(com.opengamma.analytics.math.function.Function1D,java.lang.Object,java.lang.Object)>(r1, $r4, $r5);

        $r7 = (java.lang.Double) $r6;

        $d6 = virtualinvoke $r7.<java.lang.Double: double doubleValue()>();

        $r8 = <com.opengamma.analytics.financial.volatilityswap.CarrLeeSeasonedSyntheticVolatilitySwapCalculator: com.opengamma.analytics.math.integration.Integrator1D INTEGRATOR>;

        $r9 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(0.0);

        $r10 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d2);

        $r11 = virtualinvoke $r8.<com.opengamma.analytics.math.integration.Integrator1D: java.lang.Object integrate(com.opengamma.analytics.math.function.Function1D,java.lang.Object,java.lang.Object)>(r2, $r9, $r10);

        $r12 = (java.lang.Double) $r11;

        $d7 = virtualinvoke $r12.<java.lang.Double: double doubleValue()>();

        $d8 = $d6 + $d7;

        $d9 = $d5 * $d8;

        return $d9;
    }

    private com.opengamma.analytics.math.function.Function1D integrandFin(double, double)
    {
        com.opengamma.analytics.financial.volatilityswap.CarrLeeSeasonedSyntheticVolatilitySwapCalculator r0;
        double d0, d1;
        com.opengamma.analytics.financial.volatilityswap.CarrLeeSeasonedSyntheticVolatilitySwapCalculator$1 $r1;

        r0 := @this: com.opengamma.analytics.financial.volatilityswap.CarrLeeSeasonedSyntheticVolatilitySwapCalculator;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        $r1 = new com.opengamma.analytics.financial.volatilityswap.CarrLeeSeasonedSyntheticVolatilitySwapCalculator$1;

        specialinvoke $r1.<com.opengamma.analytics.financial.volatilityswap.CarrLeeSeasonedSyntheticVolatilitySwapCalculator$1: void <init>(com.opengamma.analytics.financial.volatilityswap.CarrLeeSeasonedSyntheticVolatilitySwapCalculator,double,double)>(r0, d1, d0);

        return $r1;
    }

    private com.opengamma.analytics.math.function.Function1D integrandInf(double, double)
    {
        com.opengamma.analytics.financial.volatilityswap.CarrLeeSeasonedSyntheticVolatilitySwapCalculator r0;
        double d0, d1;
        com.opengamma.analytics.financial.volatilityswap.CarrLeeSeasonedSyntheticVolatilitySwapCalculator$2 $r1;

        r0 := @this: com.opengamma.analytics.financial.volatilityswap.CarrLeeSeasonedSyntheticVolatilitySwapCalculator;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        $r1 = new com.opengamma.analytics.financial.volatilityswap.CarrLeeSeasonedSyntheticVolatilitySwapCalculator$2;

        specialinvoke $r1.<com.opengamma.analytics.financial.volatilityswap.CarrLeeSeasonedSyntheticVolatilitySwapCalculator$2: void <init>(com.opengamma.analytics.financial.volatilityswap.CarrLeeSeasonedSyntheticVolatilitySwapCalculator,double,double)>(r0, d0, d1);

        return $r1;
    }

    private com.opengamma.analytics.math.function.Function1D closeIntegrandFin(double, double)
    {
        com.opengamma.analytics.financial.volatilityswap.CarrLeeSeasonedSyntheticVolatilitySwapCalculator r0;
        double d0, d1;
        com.opengamma.analytics.financial.volatilityswap.CarrLeeSeasonedSyntheticVolatilitySwapCalculator$3 $r1;

        r0 := @this: com.opengamma.analytics.financial.volatilityswap.CarrLeeSeasonedSyntheticVolatilitySwapCalculator;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        $r1 = new com.opengamma.analytics.financial.volatilityswap.CarrLeeSeasonedSyntheticVolatilitySwapCalculator$3;

        specialinvoke $r1.<com.opengamma.analytics.financial.volatilityswap.CarrLeeSeasonedSyntheticVolatilitySwapCalculator$3: void <init>(com.opengamma.analytics.financial.volatilityswap.CarrLeeSeasonedSyntheticVolatilitySwapCalculator,double,double)>(r0, d1, d0);

        return $r1;
    }

    private com.opengamma.analytics.math.function.Function1D closeIntegrandInf(double, double)
    {
        com.opengamma.analytics.financial.volatilityswap.CarrLeeSeasonedSyntheticVolatilitySwapCalculator r0;
        double d0, d1;
        com.opengamma.analytics.financial.volatilityswap.CarrLeeSeasonedSyntheticVolatilitySwapCalculator$4 $r1;

        r0 := @this: com.opengamma.analytics.financial.volatilityswap.CarrLeeSeasonedSyntheticVolatilitySwapCalculator;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        $r1 = new com.opengamma.analytics.financial.volatilityswap.CarrLeeSeasonedSyntheticVolatilitySwapCalculator$4;

        specialinvoke $r1.<com.opengamma.analytics.financial.volatilityswap.CarrLeeSeasonedSyntheticVolatilitySwapCalculator$4: void <init>(com.opengamma.analytics.financial.volatilityswap.CarrLeeSeasonedSyntheticVolatilitySwapCalculator,double,double)>(r0, d1, d0);

        return $r1;
    }

    static void <clinit>()
    {
        com.opengamma.analytics.math.integration.AdaptiveCompositeIntegrator1D $r0;
        com.opengamma.analytics.math.integration.RungeKuttaIntegrator1D $r1;

        <com.opengamma.analytics.financial.volatilityswap.CarrLeeSeasonedSyntheticVolatilitySwapCalculator: double EPS> = 1.0E-12;

        $r0 = new com.opengamma.analytics.math.integration.AdaptiveCompositeIntegrator1D;

        $r1 = new com.opengamma.analytics.math.integration.RungeKuttaIntegrator1D;

        specialinvoke $r1.<com.opengamma.analytics.math.integration.RungeKuttaIntegrator1D: void <init>()>();

        specialinvoke $r0.<com.opengamma.analytics.math.integration.AdaptiveCompositeIntegrator1D: void <init>(com.opengamma.analytics.math.integration.Integrator1D)>($r1);

        <com.opengamma.analytics.financial.volatilityswap.CarrLeeSeasonedSyntheticVolatilitySwapCalculator: com.opengamma.analytics.math.integration.Integrator1D INTEGRATOR> = $r0;

        return;
    }
}
