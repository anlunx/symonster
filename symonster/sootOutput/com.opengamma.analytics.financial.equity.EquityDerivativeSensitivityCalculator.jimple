public class com.opengamma.analytics.financial.equity.EquityDerivativeSensitivityCalculator extends java.lang.Object
{
    private static final double DEFAULT_ABS_SHIFT;
    private static final double DEFAULT_REL_SHIFT;
    private static final com.opengamma.analytics.financial.equity.SettlementTimeCalculator SETTLEMENT_CALCULATOR;
    private final com.opengamma.analytics.financial.interestrate.InstrumentDerivativeVisitor _pricer;

    public void <init>(com.opengamma.analytics.financial.interestrate.InstrumentDerivativeVisitor)
    {
        com.opengamma.analytics.financial.equity.EquityDerivativeSensitivityCalculator r0;
        com.opengamma.analytics.financial.interestrate.InstrumentDerivativeVisitor r1;

        r0 := @this: com.opengamma.analytics.financial.equity.EquityDerivativeSensitivityCalculator;

        r1 := @parameter0: com.opengamma.analytics.financial.interestrate.InstrumentDerivativeVisitor;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "pricer");

        r0.<com.opengamma.analytics.financial.equity.EquityDerivativeSensitivityCalculator: com.opengamma.analytics.financial.interestrate.InstrumentDerivativeVisitor _pricer> = r1;

        return;
    }

    public java.lang.Double calcForwardSensitivity(com.opengamma.analytics.financial.interestrate.InstrumentDerivative, com.opengamma.analytics.financial.equity.StaticReplicationDataBundle, double)
    {
        com.opengamma.analytics.financial.equity.EquityDerivativeSensitivityCalculator r0;
        com.opengamma.analytics.financial.interestrate.InstrumentDerivative r1;
        com.opengamma.analytics.financial.equity.StaticReplicationDataBundle r2, $r5, $r13;
        double d0, d1, d2, d3, d4, $d5, $d6, $d7, $d8, $d9;
        com.opengamma.analytics.financial.model.volatility.surface.BlackVolatilitySurface $r6, $r14;
        com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve $r7, $r15;
        com.opengamma.analytics.financial.model.interestrate.curve.ForwardCurve $r8, $r9, $r16, $r17, $r24;
        com.opengamma.analytics.financial.interestrate.InstrumentDerivativeVisitor $r10, $r18;
        java.lang.Object $r11, $r19, $r22;
        java.lang.Double $r12, $r20, $r23, $r25;
        com.opengamma.analytics.financial.equity.SettlementTimeCalculator $r21;

        r0 := @this: com.opengamma.analytics.financial.equity.EquityDerivativeSensitivityCalculator;

        r1 := @parameter0: com.opengamma.analytics.financial.interestrate.InstrumentDerivative;

        r2 := @parameter1: com.opengamma.analytics.financial.equity.StaticReplicationDataBundle;

        d0 := @parameter2: double;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "null EquityDerivative");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, "null EquityOptionDataBundle");

        $r5 = new com.opengamma.analytics.financial.equity.StaticReplicationDataBundle;

        $r6 = virtualinvoke r2.<com.opengamma.analytics.financial.equity.StaticReplicationDataBundle: com.opengamma.analytics.financial.model.volatility.surface.BlackVolatilitySurface getVolatilitySurface()>();

        $r7 = virtualinvoke r2.<com.opengamma.analytics.financial.equity.StaticReplicationDataBundle: com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve getDiscountCurve()>();

        $r8 = virtualinvoke r2.<com.opengamma.analytics.financial.equity.StaticReplicationDataBundle: com.opengamma.analytics.financial.model.interestrate.curve.ForwardCurve getForwardCurve()>();

        $r9 = virtualinvoke $r8.<com.opengamma.analytics.financial.model.interestrate.curve.ForwardCurve: com.opengamma.analytics.financial.model.interestrate.curve.ForwardCurve withFractionalShift(double)>(d0);

        specialinvoke $r5.<com.opengamma.analytics.financial.equity.StaticReplicationDataBundle: void <init>(com.opengamma.analytics.financial.model.volatility.surface.BlackVolatilitySurface,com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve,com.opengamma.analytics.financial.model.interestrate.curve.ForwardCurve)>($r6, $r7, $r9);

        $r10 = r0.<com.opengamma.analytics.financial.equity.EquityDerivativeSensitivityCalculator: com.opengamma.analytics.financial.interestrate.InstrumentDerivativeVisitor _pricer>;

        $r11 = interfaceinvoke r1.<com.opengamma.analytics.financial.interestrate.InstrumentDerivative: java.lang.Object accept(com.opengamma.analytics.financial.interestrate.InstrumentDerivativeVisitor,java.lang.Object)>($r10, $r5);

        $r12 = (java.lang.Double) $r11;

        d1 = virtualinvoke $r12.<java.lang.Double: double doubleValue()>();

        $r13 = new com.opengamma.analytics.financial.equity.StaticReplicationDataBundle;

        $r14 = virtualinvoke r2.<com.opengamma.analytics.financial.equity.StaticReplicationDataBundle: com.opengamma.analytics.financial.model.volatility.surface.BlackVolatilitySurface getVolatilitySurface()>();

        $r15 = virtualinvoke r2.<com.opengamma.analytics.financial.equity.StaticReplicationDataBundle: com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve getDiscountCurve()>();

        $r16 = virtualinvoke r2.<com.opengamma.analytics.financial.equity.StaticReplicationDataBundle: com.opengamma.analytics.financial.model.interestrate.curve.ForwardCurve getForwardCurve()>();

        $d5 = neg d0;

        $r17 = virtualinvoke $r16.<com.opengamma.analytics.financial.model.interestrate.curve.ForwardCurve: com.opengamma.analytics.financial.model.interestrate.curve.ForwardCurve withFractionalShift(double)>($d5);

        specialinvoke $r13.<com.opengamma.analytics.financial.equity.StaticReplicationDataBundle: void <init>(com.opengamma.analytics.financial.model.volatility.surface.BlackVolatilitySurface,com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve,com.opengamma.analytics.financial.model.interestrate.curve.ForwardCurve)>($r14, $r15, $r17);

        $r18 = r0.<com.opengamma.analytics.financial.equity.EquityDerivativeSensitivityCalculator: com.opengamma.analytics.financial.interestrate.InstrumentDerivativeVisitor _pricer>;

        $r19 = interfaceinvoke r1.<com.opengamma.analytics.financial.interestrate.InstrumentDerivative: java.lang.Object accept(com.opengamma.analytics.financial.interestrate.InstrumentDerivativeVisitor,java.lang.Object)>($r18, $r13);

        $r20 = (java.lang.Double) $r19;

        d2 = virtualinvoke $r20.<java.lang.Double: double doubleValue()>();

        $r21 = <com.opengamma.analytics.financial.equity.EquityDerivativeSensitivityCalculator: com.opengamma.analytics.financial.equity.SettlementTimeCalculator SETTLEMENT_CALCULATOR>;

        $r22 = interfaceinvoke r1.<com.opengamma.analytics.financial.interestrate.InstrumentDerivative: java.lang.Object accept(com.opengamma.analytics.financial.interestrate.InstrumentDerivativeVisitor)>($r21);

        $r23 = (java.lang.Double) $r22;

        d3 = virtualinvoke $r23.<java.lang.Double: double doubleValue()>();

        $r24 = virtualinvoke r2.<com.opengamma.analytics.financial.equity.StaticReplicationDataBundle: com.opengamma.analytics.financial.model.interestrate.curve.ForwardCurve getForwardCurve()>();

        d4 = virtualinvoke $r24.<com.opengamma.analytics.financial.model.interestrate.curve.ForwardCurve: double getForward(double)>(d3);

        $d6 = d1 - d2;

        $d7 = $d6 / 2.0;

        $d8 = $d7 / d0;

        $d9 = $d8 / d4;

        $r25 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d9);

        return $r25;
    }

    public java.lang.Double calcForwardSensitivity(com.opengamma.analytics.financial.interestrate.InstrumentDerivative, com.opengamma.analytics.financial.equity.StaticReplicationDataBundle)
    {
        com.opengamma.analytics.financial.equity.EquityDerivativeSensitivityCalculator r0;
        com.opengamma.analytics.financial.interestrate.InstrumentDerivative r1;
        com.opengamma.analytics.financial.equity.StaticReplicationDataBundle r2;
        java.lang.Double $r3;

        r0 := @this: com.opengamma.analytics.financial.equity.EquityDerivativeSensitivityCalculator;

        r1 := @parameter0: com.opengamma.analytics.financial.interestrate.InstrumentDerivative;

        r2 := @parameter1: com.opengamma.analytics.financial.equity.StaticReplicationDataBundle;

        $r3 = virtualinvoke r0.<com.opengamma.analytics.financial.equity.EquityDerivativeSensitivityCalculator: java.lang.Double calcForwardSensitivity(com.opengamma.analytics.financial.interestrate.InstrumentDerivative,com.opengamma.analytics.financial.equity.StaticReplicationDataBundle,double)>(r1, r2, 0.01);

        return $r3;
    }

    public java.lang.Double calcDiscountRateSensitivity(com.opengamma.analytics.financial.interestrate.InstrumentDerivative, com.opengamma.analytics.financial.equity.StaticReplicationDataBundle, double)
    {
        com.opengamma.analytics.financial.equity.EquityDerivativeSensitivityCalculator r0;
        com.opengamma.analytics.financial.interestrate.InstrumentDerivative r1;
        com.opengamma.analytics.financial.equity.StaticReplicationDataBundle r2;
        double d0, d1, d2, d3, d4, $d5, $d6, $d7;
        com.opengamma.analytics.financial.interestrate.InstrumentDerivativeVisitor $r5;
        java.lang.Object $r6, $r9;
        java.lang.Double $r7, $r10, $r11, $r13;
        com.opengamma.analytics.financial.equity.SettlementTimeCalculator $r8;
        com.opengamma.analytics.financial.model.interestrate.curve.ForwardCurve $r12;

        r0 := @this: com.opengamma.analytics.financial.equity.EquityDerivativeSensitivityCalculator;

        r1 := @parameter0: com.opengamma.analytics.financial.interestrate.InstrumentDerivative;

        r2 := @parameter1: com.opengamma.analytics.financial.equity.StaticReplicationDataBundle;

        d0 := @parameter2: double;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, "market");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "derivative");

        $r5 = r0.<com.opengamma.analytics.financial.equity.EquityDerivativeSensitivityCalculator: com.opengamma.analytics.financial.interestrate.InstrumentDerivativeVisitor _pricer>;

        $r6 = interfaceinvoke r1.<com.opengamma.analytics.financial.interestrate.InstrumentDerivative: java.lang.Object accept(com.opengamma.analytics.financial.interestrate.InstrumentDerivativeVisitor,java.lang.Object)>($r5, r2);

        $r7 = (java.lang.Double) $r6;

        d1 = virtualinvoke $r7.<java.lang.Double: double doubleValue()>();

        $r8 = <com.opengamma.analytics.financial.equity.EquityDerivativeSensitivityCalculator: com.opengamma.analytics.financial.equity.SettlementTimeCalculator SETTLEMENT_CALCULATOR>;

        $r9 = interfaceinvoke r1.<com.opengamma.analytics.financial.interestrate.InstrumentDerivative: java.lang.Object accept(com.opengamma.analytics.financial.interestrate.InstrumentDerivativeVisitor)>($r8);

        $r10 = (java.lang.Double) $r9;

        d2 = virtualinvoke $r10.<java.lang.Double: double doubleValue()>();

        $r11 = virtualinvoke r0.<com.opengamma.analytics.financial.equity.EquityDerivativeSensitivityCalculator: java.lang.Double calcForwardSensitivity(com.opengamma.analytics.financial.interestrate.InstrumentDerivative,com.opengamma.analytics.financial.equity.StaticReplicationDataBundle,double)>(r1, r2, d0);

        d3 = virtualinvoke $r11.<java.lang.Double: double doubleValue()>();

        $r12 = virtualinvoke r2.<com.opengamma.analytics.financial.equity.StaticReplicationDataBundle: com.opengamma.analytics.financial.model.interestrate.curve.ForwardCurve getForwardCurve()>();

        d4 = virtualinvoke $r12.<com.opengamma.analytics.financial.model.interestrate.curve.ForwardCurve: double getForward(double)>(d2);

        $d5 = d4 * d3;

        $d6 = $d5 - d1;

        $d7 = d2 * $d6;

        $r13 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d7);

        return $r13;
    }

    public java.lang.Double calcDiscountRateSensitivity(com.opengamma.analytics.financial.interestrate.InstrumentDerivative, com.opengamma.analytics.financial.equity.StaticReplicationDataBundle)
    {
        com.opengamma.analytics.financial.equity.EquityDerivativeSensitivityCalculator r0;
        com.opengamma.analytics.financial.interestrate.InstrumentDerivative r1;
        com.opengamma.analytics.financial.equity.StaticReplicationDataBundle r2;
        java.lang.Double $r3;

        r0 := @this: com.opengamma.analytics.financial.equity.EquityDerivativeSensitivityCalculator;

        r1 := @parameter0: com.opengamma.analytics.financial.interestrate.InstrumentDerivative;

        r2 := @parameter1: com.opengamma.analytics.financial.equity.StaticReplicationDataBundle;

        $r3 = virtualinvoke r0.<com.opengamma.analytics.financial.equity.EquityDerivativeSensitivityCalculator: java.lang.Double calcDiscountRateSensitivity(com.opengamma.analytics.financial.interestrate.InstrumentDerivative,com.opengamma.analytics.financial.equity.StaticReplicationDataBundle,double)>(r1, r2, 0.01);

        return $r3;
    }

    public java.lang.Double calcPV01(com.opengamma.analytics.financial.interestrate.InstrumentDerivative, com.opengamma.analytics.financial.equity.StaticReplicationDataBundle)
    {
        com.opengamma.analytics.financial.equity.EquityDerivativeSensitivityCalculator r0;
        com.opengamma.analytics.financial.interestrate.InstrumentDerivative r1;
        com.opengamma.analytics.financial.equity.StaticReplicationDataBundle r2;
        java.lang.Double $r3, $r4;
        double $d0, $d1;

        r0 := @this: com.opengamma.analytics.financial.equity.EquityDerivativeSensitivityCalculator;

        r1 := @parameter0: com.opengamma.analytics.financial.interestrate.InstrumentDerivative;

        r2 := @parameter1: com.opengamma.analytics.financial.equity.StaticReplicationDataBundle;

        $r3 = virtualinvoke r0.<com.opengamma.analytics.financial.equity.EquityDerivativeSensitivityCalculator: java.lang.Double calcDiscountRateSensitivity(com.opengamma.analytics.financial.interestrate.InstrumentDerivative,com.opengamma.analytics.financial.equity.StaticReplicationDataBundle)>(r1, r2);

        $d0 = virtualinvoke $r3.<java.lang.Double: double doubleValue()>();

        $d1 = $d0 / 10000.0;

        $r4 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d1);

        return $r4;
    }

    public com.opengamma.analytics.math.matrix.DoubleMatrix1D calcDeltaBucketed(com.opengamma.analytics.financial.interestrate.InstrumentDerivative, com.opengamma.analytics.financial.equity.StaticReplicationDataBundle)
    {
        com.opengamma.analytics.financial.equity.EquityDerivativeSensitivityCalculator r0;
        com.opengamma.analytics.financial.interestrate.InstrumentDerivative r1;
        com.opengamma.analytics.financial.equity.StaticReplicationDataBundle r2;
        com.opengamma.analytics.financial.model.interestrate.curve.YieldCurve r3;
        double d0, d1;
        com.opengamma.analytics.financial.interestrate.PresentValueNodeSensitivityCalculator r4;
        java.util.List r5, $r16;
        com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve $r8, $r9;
        boolean $z0;
        com.opengamma.analytics.financial.equity.SettlementTimeCalculator $r10;
        java.lang.Object $r11;
        java.lang.Double $r12, $r13;
        com.opengamma.util.tuple.DoublesPair[] $r14;
        com.opengamma.util.tuple.DoublesPair $r15;
        com.opengamma.analytics.math.matrix.DoubleMatrix1D $r17;
        int $i0;
        java.lang.Double[] $r18, $r20;
        java.lang.Object[] $r19;
        java.lang.IllegalArgumentException $r21;

        r0 := @this: com.opengamma.analytics.financial.equity.EquityDerivativeSensitivityCalculator;

        r1 := @parameter0: com.opengamma.analytics.financial.interestrate.InstrumentDerivative;

        r2 := @parameter1: com.opengamma.analytics.financial.equity.StaticReplicationDataBundle;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "null EquityDerivative");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, "null EquityOptionDataBundle");

        $r8 = virtualinvoke r2.<com.opengamma.analytics.financial.equity.StaticReplicationDataBundle: com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve getDiscountCurve()>();

        $z0 = $r8 instanceof com.opengamma.analytics.financial.model.interestrate.curve.YieldCurve;

        if $z0 != 0 goto label1;

        $r21 = new java.lang.IllegalArgumentException;

        specialinvoke $r21.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Can only handle YieldCurve");

        throw $r21;

     label1:
        $r9 = virtualinvoke r2.<com.opengamma.analytics.financial.equity.StaticReplicationDataBundle: com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve getDiscountCurve()>();

        r3 = (com.opengamma.analytics.financial.model.interestrate.curve.YieldCurve) $r9;

        $r10 = <com.opengamma.analytics.financial.equity.EquityDerivativeSensitivityCalculator: com.opengamma.analytics.financial.equity.SettlementTimeCalculator SETTLEMENT_CALCULATOR>;

        $r11 = interfaceinvoke r1.<com.opengamma.analytics.financial.interestrate.InstrumentDerivative: java.lang.Object accept(com.opengamma.analytics.financial.interestrate.InstrumentDerivativeVisitor)>($r10);

        $r12 = (java.lang.Double) $r11;

        d0 = virtualinvoke $r12.<java.lang.Double: double doubleValue()>();

        $r13 = virtualinvoke r0.<com.opengamma.analytics.financial.equity.EquityDerivativeSensitivityCalculator: java.lang.Double calcDiscountRateSensitivity(com.opengamma.analytics.financial.interestrate.InstrumentDerivative,com.opengamma.analytics.financial.equity.StaticReplicationDataBundle)>(r1, r2);

        d1 = virtualinvoke $r13.<java.lang.Double: double doubleValue()>();

        r4 = staticinvoke <com.opengamma.analytics.financial.interestrate.PresentValueNodeSensitivityCalculator: com.opengamma.analytics.financial.interestrate.PresentValueNodeSensitivityCalculator getDefaultInstance()>();

        $r14 = newarray (com.opengamma.util.tuple.DoublesPair)[1];

        $r15 = staticinvoke <com.opengamma.util.tuple.DoublesPair: com.opengamma.util.tuple.DoublesPair of(double,double)>(d0, d1);

        $r14[0] = $r15;

        $r16 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r14);

        r5 = virtualinvoke r4.<com.opengamma.analytics.financial.interestrate.NodeYieldSensitivityCalculator: java.util.List curveToNodeSensitivity(java.util.List,com.opengamma.analytics.financial.model.interestrate.curve.YieldCurve)>($r16, r3);

        $r17 = new com.opengamma.analytics.math.matrix.DoubleMatrix1D;

        $i0 = interfaceinvoke r5.<java.util.List: int size()>();

        $r18 = newarray (java.lang.Double)[$i0];

        $r19 = interfaceinvoke r5.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r18);

        $r20 = (java.lang.Double[]) $r19;

        specialinvoke $r17.<com.opengamma.analytics.math.matrix.DoubleMatrix1D: void <init>(java.lang.Double[])>($r20);

        return $r17;
    }

    public java.lang.Double calcBlackVegaParallel(com.opengamma.analytics.financial.interestrate.InstrumentDerivative, com.opengamma.analytics.financial.equity.StaticReplicationDataBundle)
    {
        com.opengamma.analytics.financial.equity.EquityDerivativeSensitivityCalculator r0;
        com.opengamma.analytics.financial.interestrate.InstrumentDerivative r1;
        com.opengamma.analytics.financial.equity.StaticReplicationDataBundle r2;
        java.lang.Double $r3;

        r0 := @this: com.opengamma.analytics.financial.equity.EquityDerivativeSensitivityCalculator;

        r1 := @parameter0: com.opengamma.analytics.financial.interestrate.InstrumentDerivative;

        r2 := @parameter1: com.opengamma.analytics.financial.equity.StaticReplicationDataBundle;

        $r3 = virtualinvoke r0.<com.opengamma.analytics.financial.equity.EquityDerivativeSensitivityCalculator: java.lang.Double calcBlackVegaParallel(com.opengamma.analytics.financial.interestrate.InstrumentDerivative,com.opengamma.analytics.financial.equity.StaticReplicationDataBundle,double)>(r1, r2, 1.0E-4);

        return $r3;
    }

    public java.lang.Double calcBlackVegaParallel(com.opengamma.analytics.financial.interestrate.InstrumentDerivative, com.opengamma.analytics.financial.equity.StaticReplicationDataBundle, double)
    {
        com.opengamma.analytics.financial.equity.EquityDerivativeSensitivityCalculator r0;
        com.opengamma.analytics.financial.interestrate.InstrumentDerivative r1;
        com.opengamma.analytics.financial.equity.StaticReplicationDataBundle r2, $r8, $r15;
        double d0, d1, d2, $d3, $d4, $d5, $d6;
        com.opengamma.analytics.financial.model.volatility.surface.BlackVolatilitySurface r3, r4, $r7, $r14;
        com.opengamma.analytics.financial.interestrate.InstrumentDerivativeVisitor $r9, $r16;
        com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve $r10, $r17;
        com.opengamma.analytics.financial.model.interestrate.curve.ForwardCurve $r11, $r18;
        java.lang.Object $r12, $r19;
        java.lang.Double $r13, $r20, $r21;

        r0 := @this: com.opengamma.analytics.financial.equity.EquityDerivativeSensitivityCalculator;

        r1 := @parameter0: com.opengamma.analytics.financial.interestrate.InstrumentDerivative;

        r2 := @parameter1: com.opengamma.analytics.financial.equity.StaticReplicationDataBundle;

        d0 := @parameter2: double;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "null EquityDerivative");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, "null EquityOptionDataBundle");

        $r7 = virtualinvoke r2.<com.opengamma.analytics.financial.equity.StaticReplicationDataBundle: com.opengamma.analytics.financial.model.volatility.surface.BlackVolatilitySurface getVolatilitySurface()>();

        r3 = virtualinvoke $r7.<com.opengamma.analytics.financial.model.volatility.surface.BlackVolatilitySurface: com.opengamma.analytics.financial.model.volatility.surface.BlackVolatilitySurface withShift(double,boolean)>(d0, 1);

        $r9 = r0.<com.opengamma.analytics.financial.equity.EquityDerivativeSensitivityCalculator: com.opengamma.analytics.financial.interestrate.InstrumentDerivativeVisitor _pricer>;

        $r8 = new com.opengamma.analytics.financial.equity.StaticReplicationDataBundle;

        $r10 = virtualinvoke r2.<com.opengamma.analytics.financial.equity.StaticReplicationDataBundle: com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve getDiscountCurve()>();

        $r11 = virtualinvoke r2.<com.opengamma.analytics.financial.equity.StaticReplicationDataBundle: com.opengamma.analytics.financial.model.interestrate.curve.ForwardCurve getForwardCurve()>();

        specialinvoke $r8.<com.opengamma.analytics.financial.equity.StaticReplicationDataBundle: void <init>(com.opengamma.analytics.financial.model.volatility.surface.BlackVolatilitySurface,com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve,com.opengamma.analytics.financial.model.interestrate.curve.ForwardCurve)>(r3, $r10, $r11);

        $r12 = interfaceinvoke r1.<com.opengamma.analytics.financial.interestrate.InstrumentDerivative: java.lang.Object accept(com.opengamma.analytics.financial.interestrate.InstrumentDerivativeVisitor,java.lang.Object)>($r9, $r8);

        $r13 = (java.lang.Double) $r12;

        d1 = virtualinvoke $r13.<java.lang.Double: double doubleValue()>();

        $r14 = virtualinvoke r2.<com.opengamma.analytics.financial.equity.StaticReplicationDataBundle: com.opengamma.analytics.financial.model.volatility.surface.BlackVolatilitySurface getVolatilitySurface()>();

        $d3 = neg d0;

        r4 = virtualinvoke $r14.<com.opengamma.analytics.financial.model.volatility.surface.BlackVolatilitySurface: com.opengamma.analytics.financial.model.volatility.surface.BlackVolatilitySurface withShift(double,boolean)>($d3, 1);

        $r16 = r0.<com.opengamma.analytics.financial.equity.EquityDerivativeSensitivityCalculator: com.opengamma.analytics.financial.interestrate.InstrumentDerivativeVisitor _pricer>;

        $r15 = new com.opengamma.analytics.financial.equity.StaticReplicationDataBundle;

        $r17 = virtualinvoke r2.<com.opengamma.analytics.financial.equity.StaticReplicationDataBundle: com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve getDiscountCurve()>();

        $r18 = virtualinvoke r2.<com.opengamma.analytics.financial.equity.StaticReplicationDataBundle: com.opengamma.analytics.financial.model.interestrate.curve.ForwardCurve getForwardCurve()>();

        specialinvoke $r15.<com.opengamma.analytics.financial.equity.StaticReplicationDataBundle: void <init>(com.opengamma.analytics.financial.model.volatility.surface.BlackVolatilitySurface,com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve,com.opengamma.analytics.financial.model.interestrate.curve.ForwardCurve)>(r4, $r17, $r18);

        $r19 = interfaceinvoke r1.<com.opengamma.analytics.financial.interestrate.InstrumentDerivative: java.lang.Object accept(com.opengamma.analytics.financial.interestrate.InstrumentDerivativeVisitor,java.lang.Object)>($r16, $r15);

        $r20 = (java.lang.Double) $r19;

        d2 = virtualinvoke $r20.<java.lang.Double: double doubleValue()>();

        $d5 = d1 - d2;

        $d4 = 2.0 * d0;

        $d6 = $d5 / $d4;

        $r21 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d6);

        return $r21;
    }

    public com.opengamma.analytics.math.surface.NodalDoublesSurface calcBlackVegaForEntireSurface(com.opengamma.analytics.financial.interestrate.InstrumentDerivative, com.opengamma.analytics.financial.equity.StaticReplicationDataBundle)
    {
        com.opengamma.analytics.financial.equity.EquityDerivativeSensitivityCalculator r0;
        com.opengamma.analytics.financial.interestrate.InstrumentDerivative r1;
        com.opengamma.analytics.financial.equity.StaticReplicationDataBundle r2;
        com.opengamma.analytics.math.surface.NodalDoublesSurface $r3;

        r0 := @this: com.opengamma.analytics.financial.equity.EquityDerivativeSensitivityCalculator;

        r1 := @parameter0: com.opengamma.analytics.financial.interestrate.InstrumentDerivative;

        r2 := @parameter1: com.opengamma.analytics.financial.equity.StaticReplicationDataBundle;

        $r3 = virtualinvoke r0.<com.opengamma.analytics.financial.equity.EquityDerivativeSensitivityCalculator: com.opengamma.analytics.math.surface.NodalDoublesSurface calcBlackVegaForEntireSurface(com.opengamma.analytics.financial.interestrate.InstrumentDerivative,com.opengamma.analytics.financial.equity.StaticReplicationDataBundle,double)>(r1, r2, 1.0E-4);

        return $r3;
    }

    public com.opengamma.analytics.math.surface.NodalDoublesSurface calcBlackVegaForEntireSurface(com.opengamma.analytics.financial.interestrate.InstrumentDerivative, com.opengamma.analytics.financial.equity.StaticReplicationDataBundle, double)
    {
        com.opengamma.analytics.financial.equity.EquityDerivativeSensitivityCalculator r0;
        com.opengamma.analytics.financial.interestrate.InstrumentDerivative r1;
        com.opengamma.analytics.financial.equity.StaticReplicationDataBundle r2, r14;
        double d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18;
        double[][] r3, r4;
        com.opengamma.analytics.financial.model.volatility.surface.VolatilitySurfaceInterpolator r5;
        com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.GeneralSmileInterpolator r6;
        java.lang.Double r7, r15, r16, $r47, $r49, $r53, $r54, $r55;
        com.opengamma.analytics.math.function.Function1D[] r8, r12;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, i11, i12, i13, i14, i15;
        double[] r10, $r30, $r31, $r32, $r33, $r34, $r42, $r48, r63, r64;
        com.opengamma.analytics.math.function.Function1D r11;
        com.opengamma.analytics.financial.model.volatility.surface.BlackVolatilitySurfaceMoneynessFcnBackedByGrid r13, r60;
        com.opengamma.analytics.financial.model.volatility.surface.BlackVolatilitySurface $r20, $r22, $r24, $r50;
        com.opengamma.analytics.math.surface.Surface $r21, $r51;
        boolean $z0, $z1, $z2, $z4;
        com.opengamma.analytics.financial.interestrate.InstrumentDerivativeVisitor $r26, $r36;
        java.lang.Object $r27, $r37;
        com.opengamma.analytics.math.surface.NodalDoublesSurface $r29, $r52;
        java.lang.Object[] $r35;
        java.lang.StringBuilder $r39, $r40, $r41, $r43, r67;
        java.lang.String $r44;
        com.opengamma.analytics.math.surface.InterpolatedDoublesSurface r56;
        java.lang.Double[] r57, r58, r59;
        com.opengamma.analytics.financial.equity.option.EquityIndexOption r61;
        com.opengamma.analytics.financial.model.volatility.smile.fitting.sabr.SmileSurfaceDataBundle r62;
        com.opengamma.OpenGammaRuntimeException r65, r69;
        java.util.ArrayList r66;
        com.opengamma.util.tuple.Triple r68;
        java.lang.Throwable r70, r71;

        r0 := @this: com.opengamma.analytics.financial.equity.EquityDerivativeSensitivityCalculator;

        r1 := @parameter0: com.opengamma.analytics.financial.interestrate.InstrumentDerivative;

        r2 := @parameter1: com.opengamma.analytics.financial.equity.StaticReplicationDataBundle;

        d0 := @parameter2: double;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "null EquityDerivative");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, "null EquityOptionDataBundle");

        $r20 = virtualinvoke r2.<com.opengamma.analytics.financial.equity.StaticReplicationDataBundle: com.opengamma.analytics.financial.model.volatility.surface.BlackVolatilitySurface getVolatilitySurface()>();

        $r21 = virtualinvoke $r20.<com.opengamma.analytics.financial.model.volatility.surface.BlackVolatilitySurface: com.opengamma.analytics.math.surface.Surface getSurface()>();

        $z0 = $r21 instanceof com.opengamma.analytics.math.surface.InterpolatedDoublesSurface;

        if $z0 == 0 goto label05;

        $r50 = virtualinvoke r2.<com.opengamma.analytics.financial.equity.StaticReplicationDataBundle: com.opengamma.analytics.financial.model.volatility.surface.BlackVolatilitySurface getVolatilitySurface()>();

        $r51 = virtualinvoke $r50.<com.opengamma.analytics.financial.model.volatility.surface.BlackVolatilitySurface: com.opengamma.analytics.math.surface.Surface getSurface()>();

        r56 = (com.opengamma.analytics.math.surface.InterpolatedDoublesSurface) $r51;

        r57 = virtualinvoke r56.<com.opengamma.analytics.math.surface.InterpolatedDoublesSurface: java.lang.Double[] getXData()>();

        r58 = virtualinvoke r56.<com.opengamma.analytics.math.surface.InterpolatedDoublesSurface: java.lang.Double[] getYData()>();

        i11 = lengthof r57;

        $i10 = lengthof r58;

        if i11 != $i10 goto label01;

        $z4 = 1;

        goto label02;

     label01:
        $z4 = 0;

     label02:
        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z4, "Number of strikes must match number of nodes");

        r59 = newarray (java.lang.Double)[i11];

        i12 = 0;

     label03:
        if i12 >= i11 goto label04;

        $r53 = r57[i12];

        $d16 = virtualinvoke $r53.<java.lang.Double: double doubleValue()>();

        $r54 = r58[i12];

        $d17 = virtualinvoke $r54.<java.lang.Double: double doubleValue()>();

        $d18 = virtualinvoke r0.<com.opengamma.analytics.financial.equity.EquityDerivativeSensitivityCalculator: double calcBlackVegaForSinglePoint(com.opengamma.analytics.financial.interestrate.InstrumentDerivative,com.opengamma.analytics.financial.equity.StaticReplicationDataBundle,double,double,double)>(r1, r2, $d16, $d17, d0);

        $r55 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d18);

        r59[i12] = $r55;

        i12 = i12 + 1;

        goto label03;

     label04:
        $r52 = staticinvoke <com.opengamma.analytics.math.surface.NodalDoublesSurface: com.opengamma.analytics.math.surface.NodalDoublesSurface 'from'(java.lang.Double[],java.lang.Double[],java.lang.Double[])>(r57, r58, r59);

        return $r52;

     label05:
        $r22 = virtualinvoke r2.<com.opengamma.analytics.financial.equity.StaticReplicationDataBundle: com.opengamma.analytics.financial.model.volatility.surface.BlackVolatilitySurface getVolatilitySurface()>();

        $z1 = $r22 instanceof com.opengamma.analytics.financial.model.volatility.surface.BlackVolatilitySurfaceMoneynessFcnBackedByGrid;

        if $z1 == 0 goto label12;

        $r24 = virtualinvoke r2.<com.opengamma.analytics.financial.equity.StaticReplicationDataBundle: com.opengamma.analytics.financial.model.volatility.surface.BlackVolatilitySurface getVolatilitySurface()>();

        r60 = (com.opengamma.analytics.financial.model.volatility.surface.BlackVolatilitySurfaceMoneynessFcnBackedByGrid) $r24;

        $z2 = r1 instanceof com.opengamma.analytics.financial.equity.option.EquityIndexOption;

        if $z2 == 0 goto label06;

        r61 = (com.opengamma.analytics.financial.equity.option.EquityIndexOption) r1;

        goto label07;

     label06:
        r65 = new com.opengamma.OpenGammaRuntimeException;

        specialinvoke r65.<com.opengamma.OpenGammaRuntimeException: void <init>(java.lang.String)>("Calculator with BlackVolatilitySurfaceMoneynessFcnBackedByGrid was expecting an EquityIndexOption.");

        r70 = (java.lang.Throwable) r65;

        throw r70;

     label07:
        r62 = virtualinvoke r60.<com.opengamma.analytics.financial.model.volatility.surface.BlackVolatilitySurfaceMoneynessFcnBackedByGrid: com.opengamma.analytics.financial.model.volatility.smile.fitting.sabr.SmileSurfaceDataBundle getGridData()>();

        r63 = virtualinvoke r62.<com.opengamma.analytics.financial.model.volatility.smile.fitting.sabr.SmileSurfaceDataBundle: double[] getForwards()>();

        r64 = virtualinvoke r62.<com.opengamma.analytics.financial.model.volatility.smile.fitting.sabr.SmileSurfaceDataBundle: double[] getExpiries()>();

        i13 = virtualinvoke r62.<com.opengamma.analytics.financial.model.volatility.smile.fitting.sabr.SmileSurfaceDataBundle: int getNumExpiries()>();

        r3 = virtualinvoke r62.<com.opengamma.analytics.financial.model.volatility.smile.fitting.sabr.SmileSurfaceDataBundle: double[][] getStrikes()>();

        r4 = virtualinvoke r62.<com.opengamma.analytics.financial.model.volatility.smile.fitting.sabr.SmileSurfaceDataBundle: double[][] getVolatilities()>();

        r5 = virtualinvoke r60.<com.opengamma.analytics.financial.model.volatility.surface.BlackVolatilitySurfaceMoneynessFcnBackedByGrid: com.opengamma.analytics.financial.model.volatility.surface.VolatilitySurfaceInterpolator getInterpolator()>();

        r6 = virtualinvoke r5.<com.opengamma.analytics.financial.model.volatility.surface.VolatilitySurfaceInterpolator: com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.GeneralSmileInterpolator getSmileInterpolator()>();

        $r26 = r0.<com.opengamma.analytics.financial.equity.EquityDerivativeSensitivityCalculator: com.opengamma.analytics.financial.interestrate.InstrumentDerivativeVisitor _pricer>;

        $r27 = virtualinvoke r61.<com.opengamma.analytics.financial.equity.option.EquityIndexOption: java.lang.Object accept(com.opengamma.analytics.financial.interestrate.InstrumentDerivativeVisitor,java.lang.Object)>($r26, r2);

        r7 = (java.lang.Double) $r27;

        r8 = virtualinvoke r5.<com.opengamma.analytics.financial.model.volatility.surface.VolatilitySurfaceInterpolator: com.opengamma.analytics.math.function.Function1D[] getIndependentSmileFits(com.opengamma.analytics.financial.model.volatility.smile.fitting.sabr.SmileSurfaceDataBundle)>(r62);

        r66 = new java.util.ArrayList;

        specialinvoke r66.<java.util.ArrayList: void <init>()>();

        $d1 = virtualinvoke r61.<com.opengamma.analytics.financial.equity.option.EquityIndexOption: double getTimeToExpiry()>();

        i0 = staticinvoke <com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SurfaceArrayUtils: int getLowerBoundIndex(double[],double)>(r64, $d1);

        $i3 = i0 - 3;

        i14 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i3);

     label08:
        $i4 = i0 + 4;

        $i5 = staticinvoke <java.lang.Math: int min(int,int)>(i13, $i4);

        if i14 >= $i5 goto label11;

        $r30 = r3[i14];

        i1 = lengthof $r30;

        $r31 = r3[i14];

        $d2 = virtualinvoke r61.<com.opengamma.analytics.financial.equity.option.EquityIndexOption: double getStrike()>();

        i2 = staticinvoke <com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SurfaceArrayUtils: int getLowerBoundIndex(double[],double)>($r31, $d2);

        $i6 = i2 - 6;

        i15 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i6);

     label09:
        $i7 = i2 + 7;

        $i8 = staticinvoke <java.lang.Math: int min(int,int)>(i1, $i7);

        if i15 >= $i8 goto label10;

        $r32 = r4[i14];

        r10 = staticinvoke <java.util.Arrays: double[] copyOf(double[],int)>($r32, i1);

        $r33 = r4[i14];

        $d3 = $r33[i15];

        $d4 = $d3 - d0;

        r10[i15] = $d4;

        $d6 = r63[i14];

        $r34 = r3[i14];

        $d5 = r64[i14];

        r11 = interfaceinvoke r6.<com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.GeneralSmileInterpolator: com.opengamma.analytics.math.function.Function1D getVolatilityFunction(double,double[],double,double[])>($d6, $r34, $d5, r10);

        $i9 = lengthof r8;

        $r35 = staticinvoke <java.util.Arrays: java.lang.Object[] copyOf(java.lang.Object[],int)>(r8, $i9);

        r12 = (com.opengamma.analytics.math.function.Function1D[]) $r35;

        r12[i14] = r11;

        r13 = virtualinvoke r5.<com.opengamma.analytics.financial.model.volatility.surface.VolatilitySurfaceInterpolator: com.opengamma.analytics.financial.model.volatility.surface.BlackVolatilitySurfaceMoneynessFcnBackedByGrid combineIndependentSmileFits(com.opengamma.analytics.math.function.Function1D[],com.opengamma.analytics.financial.model.volatility.smile.fitting.sabr.SmileSurfaceDataBundle)>(r12, r62);

        r14 = virtualinvoke r2.<com.opengamma.analytics.financial.equity.StaticReplicationDataBundle: com.opengamma.analytics.financial.equity.StaticReplicationDataBundle withShiftedSurface(com.opengamma.analytics.financial.model.volatility.surface.BlackVolatilitySurface)>(r13);

        $r36 = r0.<com.opengamma.analytics.financial.equity.EquityDerivativeSensitivityCalculator: com.opengamma.analytics.financial.interestrate.InstrumentDerivativeVisitor _pricer>;

        $r37 = virtualinvoke r61.<com.opengamma.analytics.financial.equity.option.EquityIndexOption: java.lang.Object accept(com.opengamma.analytics.financial.interestrate.InstrumentDerivativeVisitor,java.lang.Object)>($r36, r14);

        r15 = (java.lang.Double) $r37;

        r67 = new java.lang.StringBuilder;

        specialinvoke r67.<java.lang.StringBuilder: void <init>()>();

        $r39 = virtualinvoke r67.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Null PV in shifted scenario, T = ");

        $d7 = r64[i14];

        $r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d7);

        $r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", k = ");

        $r42 = r3[i14];

        $d8 = $r42[i15];

        $r43 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d8);

        $r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r15, $r44);

        $d9 = virtualinvoke r15.<java.lang.Double: double doubleValue()>();

        $d10 = virtualinvoke r7.<java.lang.Double: double doubleValue()>();

        $d12 = $d9 - $d10;

        $d11 = neg d0;

        $d13 = $d12 / $d11;

        r16 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d13);

        r68 = new com.opengamma.util.tuple.Triple;

        $d14 = r64[i14];

        $r47 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d14);

        $r48 = r3[i14];

        $d15 = $r48[i15];

        $r49 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d15);

        specialinvoke r68.<com.opengamma.util.tuple.Triple: void <init>(java.lang.Object,java.lang.Object,java.lang.Object)>($r47, $r49, r16);

        interfaceinvoke r66.<java.util.List: boolean add(java.lang.Object)>(r68);

        i15 = i15 + 1;

        goto label09;

     label10:
        i14 = i14 + 1;

        goto label08;

     label11:
        $r29 = staticinvoke <com.opengamma.analytics.math.surface.NodalDoublesSurface: com.opengamma.analytics.math.surface.NodalDoublesSurface 'from'(java.util.List)>(r66);

        return $r29;

     label12:
        r69 = new com.opengamma.OpenGammaRuntimeException;

        specialinvoke r69.<com.opengamma.OpenGammaRuntimeException: void <init>(java.lang.String)>("Currently will only accept an Equity Volatility Surface based on an InterpolatedDoublesSurface, or BlackVolatilitySurfaceMoneynessFcnBackedByGrid");

        r71 = (java.lang.Throwable) r69;

        throw r71;
    }

    public double calcBlackVegaForSinglePoint(com.opengamma.analytics.financial.interestrate.InstrumentDerivative, com.opengamma.analytics.financial.equity.StaticReplicationDataBundle, double, double, double)
    {
        com.opengamma.analytics.financial.equity.EquityDerivativeSensitivityCalculator r0;
        com.opengamma.analytics.financial.interestrate.InstrumentDerivative r1;
        com.opengamma.analytics.financial.equity.StaticReplicationDataBundle r2, $r10, $r18;
        double d0, d1, d2, d3, d4, $d5, $d6, $d7, $d8;
        com.opengamma.analytics.math.surface.Surface r3;
        com.opengamma.analytics.math.surface.InterpolatedDoublesSurface r4, r6, r7;
        com.opengamma.analytics.financial.model.volatility.surface.BlackVolatilitySurface $r8, $r11, $r12, $r19, $r20;
        boolean $z0;
        com.opengamma.analytics.math.surface.InterpolatedSurfaceAdditiveShiftFunction $r9;
        com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve $r13, $r21;
        com.opengamma.analytics.financial.model.interestrate.curve.ForwardCurve $r14, $r22;
        com.opengamma.analytics.financial.interestrate.InstrumentDerivativeVisitor $r15, $r23;
        java.lang.Object $r16, $r24;
        java.lang.Double $r17, $r25;

        r0 := @this: com.opengamma.analytics.financial.equity.EquityDerivativeSensitivityCalculator;

        r1 := @parameter0: com.opengamma.analytics.financial.interestrate.InstrumentDerivative;

        r2 := @parameter1: com.opengamma.analytics.financial.equity.StaticReplicationDataBundle;

        d0 := @parameter2: double;

        d1 := @parameter3: double;

        d2 := @parameter4: double;

        $r8 = virtualinvoke r2.<com.opengamma.analytics.financial.equity.StaticReplicationDataBundle: com.opengamma.analytics.financial.model.volatility.surface.BlackVolatilitySurface getVolatilitySurface()>();

        r3 = virtualinvoke $r8.<com.opengamma.analytics.financial.model.volatility.surface.BlackVolatilitySurface: com.opengamma.analytics.math.surface.Surface getSurface()>();

        $z0 = r3 instanceof com.opengamma.analytics.math.surface.InterpolatedDoublesSurface;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z0, "Currently will only accept a Equity VolatilitySurfaces based on an InterpolatedDoublesSurface");

        r4 = (com.opengamma.analytics.math.surface.InterpolatedDoublesSurface) r3;

        $r9 = new com.opengamma.analytics.math.surface.InterpolatedSurfaceAdditiveShiftFunction;

        specialinvoke $r9.<com.opengamma.analytics.math.surface.InterpolatedSurfaceAdditiveShiftFunction: void <init>()>();

        r6 = virtualinvoke $r9.<com.opengamma.analytics.math.surface.InterpolatedSurfaceAdditiveShiftFunction: com.opengamma.analytics.math.surface.InterpolatedDoublesSurface evaluate(com.opengamma.analytics.math.surface.InterpolatedDoublesSurface,double,double,double)>(r4, d0, d1, d2);

        $r10 = new com.opengamma.analytics.financial.equity.StaticReplicationDataBundle;

        $r11 = virtualinvoke r2.<com.opengamma.analytics.financial.equity.StaticReplicationDataBundle: com.opengamma.analytics.financial.model.volatility.surface.BlackVolatilitySurface getVolatilitySurface()>();

        $r12 = virtualinvoke $r11.<com.opengamma.analytics.financial.model.volatility.surface.BlackVolatilitySurface: com.opengamma.analytics.financial.model.volatility.surface.BlackVolatilitySurface withSurface(com.opengamma.analytics.math.surface.Surface)>(r6);

        $r13 = virtualinvoke r2.<com.opengamma.analytics.financial.equity.StaticReplicationDataBundle: com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve getDiscountCurve()>();

        $r14 = virtualinvoke r2.<com.opengamma.analytics.financial.equity.StaticReplicationDataBundle: com.opengamma.analytics.financial.model.interestrate.curve.ForwardCurve getForwardCurve()>();

        specialinvoke $r10.<com.opengamma.analytics.financial.equity.StaticReplicationDataBundle: void <init>(com.opengamma.analytics.financial.model.volatility.surface.BlackVolatilitySurface,com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve,com.opengamma.analytics.financial.model.interestrate.curve.ForwardCurve)>($r12, $r13, $r14);

        $r15 = r0.<com.opengamma.analytics.financial.equity.EquityDerivativeSensitivityCalculator: com.opengamma.analytics.financial.interestrate.InstrumentDerivativeVisitor _pricer>;

        $r16 = interfaceinvoke r1.<com.opengamma.analytics.financial.interestrate.InstrumentDerivative: java.lang.Object accept(com.opengamma.analytics.financial.interestrate.InstrumentDerivativeVisitor,java.lang.Object)>($r15, $r10);

        $r17 = (java.lang.Double) $r16;

        d3 = virtualinvoke $r17.<java.lang.Double: double doubleValue()>();

        $d5 = neg d2;

        r7 = virtualinvoke $r9.<com.opengamma.analytics.math.surface.InterpolatedSurfaceAdditiveShiftFunction: com.opengamma.analytics.math.surface.InterpolatedDoublesSurface evaluate(com.opengamma.analytics.math.surface.InterpolatedDoublesSurface,double,double,double)>(r4, d0, d1, $d5);

        $r18 = new com.opengamma.analytics.financial.equity.StaticReplicationDataBundle;

        $r19 = virtualinvoke r2.<com.opengamma.analytics.financial.equity.StaticReplicationDataBundle: com.opengamma.analytics.financial.model.volatility.surface.BlackVolatilitySurface getVolatilitySurface()>();

        $r20 = virtualinvoke $r19.<com.opengamma.analytics.financial.model.volatility.surface.BlackVolatilitySurface: com.opengamma.analytics.financial.model.volatility.surface.BlackVolatilitySurface withSurface(com.opengamma.analytics.math.surface.Surface)>(r7);

        $r21 = virtualinvoke r2.<com.opengamma.analytics.financial.equity.StaticReplicationDataBundle: com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve getDiscountCurve()>();

        $r22 = virtualinvoke r2.<com.opengamma.analytics.financial.equity.StaticReplicationDataBundle: com.opengamma.analytics.financial.model.interestrate.curve.ForwardCurve getForwardCurve()>();

        specialinvoke $r18.<com.opengamma.analytics.financial.equity.StaticReplicationDataBundle: void <init>(com.opengamma.analytics.financial.model.volatility.surface.BlackVolatilitySurface,com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve,com.opengamma.analytics.financial.model.interestrate.curve.ForwardCurve)>($r20, $r21, $r22);

        $r23 = r0.<com.opengamma.analytics.financial.equity.EquityDerivativeSensitivityCalculator: com.opengamma.analytics.financial.interestrate.InstrumentDerivativeVisitor _pricer>;

        $r24 = interfaceinvoke r1.<com.opengamma.analytics.financial.interestrate.InstrumentDerivative: java.lang.Object accept(com.opengamma.analytics.financial.interestrate.InstrumentDerivativeVisitor,java.lang.Object)>($r23, $r18);

        $r25 = (java.lang.Double) $r24;

        d4 = virtualinvoke $r25.<java.lang.Double: double doubleValue()>();

        $d7 = d3 - d4;

        $d6 = 2.0 * d2;

        $d8 = $d7 / $d6;

        return $d8;
    }

    static void <clinit>()
    {
        com.opengamma.analytics.financial.equity.SettlementTimeCalculator $r0;

        <com.opengamma.analytics.financial.equity.EquityDerivativeSensitivityCalculator: double DEFAULT_REL_SHIFT> = 0.01;

        <com.opengamma.analytics.financial.equity.EquityDerivativeSensitivityCalculator: double DEFAULT_ABS_SHIFT> = 1.0E-4;

        $r0 = staticinvoke <com.opengamma.analytics.financial.equity.SettlementTimeCalculator: com.opengamma.analytics.financial.equity.SettlementTimeCalculator getInstance()>();

        <com.opengamma.analytics.financial.equity.EquityDerivativeSensitivityCalculator: com.opengamma.analytics.financial.equity.SettlementTimeCalculator SETTLEMENT_CALCULATOR> = $r0;

        return;
    }
}
