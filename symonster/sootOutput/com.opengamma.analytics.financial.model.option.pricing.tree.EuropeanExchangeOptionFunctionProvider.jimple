public class com.opengamma.analytics.financial.model.option.pricing.tree.EuropeanExchangeOptionFunctionProvider extends com.opengamma.analytics.financial.model.option.pricing.tree.OptionFunctionProvider2D
{
    private double _quantity1;
    private double _quantity2;

    public void <init>(double, int, double, double)
    {
        com.opengamma.analytics.financial.model.option.pricing.tree.EuropeanExchangeOptionFunctionProvider r0;
        double d0, d1, d2;
        int i0;
        byte $b1, $b2;
        boolean $z0, $z1, $z2, $z3;

        r0 := @this: com.opengamma.analytics.financial.model.option.pricing.tree.EuropeanExchangeOptionFunctionProvider;

        d0 := @parameter0: double;

        i0 := @parameter1: int;

        d1 := @parameter2: double;

        d2 := @parameter3: double;

        specialinvoke r0.<com.opengamma.analytics.financial.model.option.pricing.tree.OptionFunctionProvider2D: void <init>(double,double,int,boolean)>(0.0, d0, i0, 1);

        $b1 = d1 cmpl 0.0;

        if $b1 <= 0 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z2, "quantity1 should be positive");

        $z0 = staticinvoke <com.google.common.primitives.Doubles: boolean isFinite(double)>(d1);

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z0, "quantity1 should be finite");

        $b2 = d2 cmpl 0.0;

        if $b2 <= 0 goto label3;

        $z3 = 1;

        goto label4;

     label3:
        $z3 = 0;

     label4:
        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z3, "quantity2 should be positive");

        $z1 = staticinvoke <com.google.common.primitives.Doubles: boolean isFinite(double)>(d2);

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z1, "quantity2 should be finite");

        r0.<com.opengamma.analytics.financial.model.option.pricing.tree.EuropeanExchangeOptionFunctionProvider: double _quantity1> = d1;

        r0.<com.opengamma.analytics.financial.model.option.pricing.tree.EuropeanExchangeOptionFunctionProvider: double _quantity2> = d2;

        return;
    }

    public double[][] getPayoffAtExpiry(double, double, double, double)
    {
        com.opengamma.analytics.financial.model.option.pricing.tree.EuropeanExchangeOptionFunctionProvider r0;
        double d0, d1, d2, d3, $d4, $d5, $d6, $d7, $d8, $d9, d10, d11;
        int i0, $i1, i2, i3;
        double[][] r1;
        double[] $r2;

        r0 := @this: com.opengamma.analytics.financial.model.option.pricing.tree.EuropeanExchangeOptionFunctionProvider;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        d2 := @parameter2: double;

        d3 := @parameter3: double;

        $i1 = virtualinvoke r0.<com.opengamma.analytics.financial.model.option.pricing.tree.EuropeanExchangeOptionFunctionProvider: int getNumberOfSteps()>();

        i0 = $i1 + 1;

        r1 = newmultiarray (double)[i0][i0];

        d10 = d0;

        i2 = 0;

     label1:
        if i2 >= i0 goto label4;

        d11 = d1;

        i3 = 0;

     label2:
        if i3 >= i0 goto label3;

        $r2 = r1[i2];

        $d4 = r0.<com.opengamma.analytics.financial.model.option.pricing.tree.EuropeanExchangeOptionFunctionProvider: double _quantity1>;

        $d7 = $d4 * d10;

        $d5 = r0.<com.opengamma.analytics.financial.model.option.pricing.tree.EuropeanExchangeOptionFunctionProvider: double _quantity2>;

        $d6 = $d5 * d11;

        $d8 = $d7 - $d6;

        $d9 = staticinvoke <java.lang.Math: double max(double,double)>($d8, 0.0);

        $r2[i3] = $d9;

        d11 = d11 * d3;

        i3 = i3 + 1;

        goto label2;

     label3:
        d10 = d10 * d2;

        i2 = i2 + 1;

        goto label1;

     label4:
        return r1;
    }

    public double[][] getPayoffAtExpiryTrinomial(double, double, double, double)
    {
        com.opengamma.analytics.financial.model.option.pricing.tree.EuropeanExchangeOptionFunctionProvider r0;
        double d0, d1, d2, d3, $d4, $d5, $d6, $d7, $d8, $d9, d10, d11;
        int i0, $i1, $i2, i3, i4;
        double[][] r1;
        double[] $r2;

        r0 := @this: com.opengamma.analytics.financial.model.option.pricing.tree.EuropeanExchangeOptionFunctionProvider;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        d2 := @parameter2: double;

        d3 := @parameter3: double;

        $i1 = virtualinvoke r0.<com.opengamma.analytics.financial.model.option.pricing.tree.EuropeanExchangeOptionFunctionProvider: int getNumberOfSteps()>();

        $i2 = 2 * $i1;

        i0 = $i2 + 1;

        r1 = newmultiarray (double)[i0][i0];

        d10 = d0;

        i3 = 0;

     label1:
        if i3 >= i0 goto label4;

        d11 = d1;

        i4 = 0;

     label2:
        if i4 >= i0 goto label3;

        $r2 = r1[i3];

        $d4 = r0.<com.opengamma.analytics.financial.model.option.pricing.tree.EuropeanExchangeOptionFunctionProvider: double _quantity1>;

        $d7 = $d4 * d10;

        $d5 = r0.<com.opengamma.analytics.financial.model.option.pricing.tree.EuropeanExchangeOptionFunctionProvider: double _quantity2>;

        $d6 = $d5 * d11;

        $d8 = $d7 - $d6;

        $d9 = staticinvoke <java.lang.Math: double max(double,double)>($d8, 0.0);

        $r2[i4] = $d9;

        d11 = d11 * d3;

        i4 = i4 + 1;

        goto label2;

     label3:
        d10 = d10 * d2;

        i3 = i3 + 1;

        goto label1;

     label4:
        return r1;
    }

    public double getSign()
    {
        com.opengamma.analytics.financial.model.option.pricing.tree.EuropeanExchangeOptionFunctionProvider r0;
        java.lang.IllegalArgumentException $r1;

        r0 := @this: com.opengamma.analytics.financial.model.option.pricing.tree.EuropeanExchangeOptionFunctionProvider;

        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Call/put is not relevant for this option");

        throw $r1;
    }

    public double getStrike()
    {
        com.opengamma.analytics.financial.model.option.pricing.tree.EuropeanExchangeOptionFunctionProvider r0;
        java.lang.IllegalArgumentException $r1;

        r0 := @this: com.opengamma.analytics.financial.model.option.pricing.tree.EuropeanExchangeOptionFunctionProvider;

        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Strike is not relavant for this option");

        throw $r1;
    }

    public double getQuantity1()
    {
        com.opengamma.analytics.financial.model.option.pricing.tree.EuropeanExchangeOptionFunctionProvider r0;
        double $d0;

        r0 := @this: com.opengamma.analytics.financial.model.option.pricing.tree.EuropeanExchangeOptionFunctionProvider;

        $d0 = r0.<com.opengamma.analytics.financial.model.option.pricing.tree.EuropeanExchangeOptionFunctionProvider: double _quantity1>;

        return $d0;
    }

    public double getQuantity2()
    {
        com.opengamma.analytics.financial.model.option.pricing.tree.EuropeanExchangeOptionFunctionProvider r0;
        double $d0;

        r0 := @this: com.opengamma.analytics.financial.model.option.pricing.tree.EuropeanExchangeOptionFunctionProvider;

        $d0 = r0.<com.opengamma.analytics.financial.model.option.pricing.tree.EuropeanExchangeOptionFunctionProvider: double _quantity2>;

        return $d0;
    }

    public int hashCode()
    {
        com.opengamma.analytics.financial.model.option.pricing.tree.EuropeanExchangeOptionFunctionProvider r0;
        double $d0, $d1;
        long $l1, $l2, $l5, $l6, l10, l12;
        int $i3, $i4, $i7, $i8, i9, i11, i13;

        r0 := @this: com.opengamma.analytics.financial.model.option.pricing.tree.EuropeanExchangeOptionFunctionProvider;

        i9 = specialinvoke r0.<com.opengamma.analytics.financial.model.option.pricing.tree.OptionFunctionProvider2D: int hashCode()>();

        $d0 = r0.<com.opengamma.analytics.financial.model.option.pricing.tree.EuropeanExchangeOptionFunctionProvider: double _quantity1>;

        l10 = staticinvoke <java.lang.Double: long doubleToLongBits(double)>($d0);

        $i4 = 31 * i9;

        $l1 = l10 >>> 32;

        $l2 = l10 ^ $l1;

        $i3 = (int) $l2;

        i11 = $i4 + $i3;

        $d1 = r0.<com.opengamma.analytics.financial.model.option.pricing.tree.EuropeanExchangeOptionFunctionProvider: double _quantity2>;

        l12 = staticinvoke <java.lang.Double: long doubleToLongBits(double)>($d1);

        $i8 = 31 * i11;

        $l5 = l12 >>> 32;

        $l6 = l12 ^ $l5;

        $i7 = (int) $l6;

        i13 = $i8 + $i7;

        return i13;
    }

    public boolean equals(java.lang.Object)
    {
        com.opengamma.analytics.financial.model.option.pricing.tree.EuropeanExchangeOptionFunctionProvider r0, r2;
        java.lang.Object r1;
        boolean $z0, $z1;
        double $d0, $d1, $d2, $d3;
        long $l0, $l1, $l3, $l4;
        byte $b2, $b5;

        r0 := @this: com.opengamma.analytics.financial.model.option.pricing.tree.EuropeanExchangeOptionFunctionProvider;

        r1 := @parameter0: java.lang.Object;

        if r0 != r1 goto label1;

        return 1;

     label1:
        $z0 = specialinvoke r0.<com.opengamma.analytics.financial.model.option.pricing.tree.OptionFunctionProvider2D: boolean equals(java.lang.Object)>(r1);

        if $z0 != 0 goto label2;

        return 0;

     label2:
        $z1 = r1 instanceof com.opengamma.analytics.financial.model.option.pricing.tree.EuropeanExchangeOptionFunctionProvider;

        if $z1 != 0 goto label3;

        return 0;

     label3:
        r2 = (com.opengamma.analytics.financial.model.option.pricing.tree.EuropeanExchangeOptionFunctionProvider) r1;

        $d0 = r0.<com.opengamma.analytics.financial.model.option.pricing.tree.EuropeanExchangeOptionFunctionProvider: double _quantity1>;

        $l0 = staticinvoke <java.lang.Double: long doubleToLongBits(double)>($d0);

        $d1 = r2.<com.opengamma.analytics.financial.model.option.pricing.tree.EuropeanExchangeOptionFunctionProvider: double _quantity1>;

        $l1 = staticinvoke <java.lang.Double: long doubleToLongBits(double)>($d1);

        $b2 = $l0 cmp $l1;

        if $b2 == 0 goto label4;

        return 0;

     label4:
        $d2 = r0.<com.opengamma.analytics.financial.model.option.pricing.tree.EuropeanExchangeOptionFunctionProvider: double _quantity2>;

        $l3 = staticinvoke <java.lang.Double: long doubleToLongBits(double)>($d2);

        $d3 = r2.<com.opengamma.analytics.financial.model.option.pricing.tree.EuropeanExchangeOptionFunctionProvider: double _quantity2>;

        $l4 = staticinvoke <java.lang.Double: long doubleToLongBits(double)>($d3);

        $b5 = $l3 cmp $l4;

        if $b5 == 0 goto label5;

        return 0;

     label5:
        return 1;
    }
}
