public class com.opengamma.analytics.util.time.TenorUtils extends java.lang.Object
{

    public void <init>()
    {
        com.opengamma.analytics.util.time.TenorUtils r0;

        r0 := @this: com.opengamma.analytics.util.time.TenorUtils;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static org.threeten.bp.ZonedDateTime adjustDateByTenor(org.threeten.bp.ZonedDateTime, com.opengamma.util.time.Tenor)
    {
        org.threeten.bp.ZonedDateTime r0, $r5;
        com.opengamma.util.time.Tenor r1;
        boolean $z0, $z1;
        org.threeten.bp.Period $r4;

        r0 := @parameter0: org.threeten.bp.ZonedDateTime;

        r1 := @parameter1: com.opengamma.util.time.Tenor;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r0, "date");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "tenor");

        $z0 = virtualinvoke r1.<com.opengamma.util.time.Tenor: boolean isBusinessDayTenor()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z1, "Business day tenors must have a calendar and initial offset to adjust a date");

        $r4 = virtualinvoke r1.<com.opengamma.util.time.Tenor: org.threeten.bp.Period getPeriod()>();

        $r5 = virtualinvoke r0.<org.threeten.bp.ZonedDateTime: org.threeten.bp.ZonedDateTime plus(org.threeten.bp.temporal.TemporalAmount)>($r4);

        return $r5;
    }

    public static org.threeten.bp.LocalDateTime adjustDateByTenor(org.threeten.bp.LocalDateTime, com.opengamma.util.time.Tenor)
    {
        org.threeten.bp.LocalDateTime r0, $r5;
        com.opengamma.util.time.Tenor r1;
        boolean $z0, $z1;
        org.threeten.bp.Period $r4;

        r0 := @parameter0: org.threeten.bp.LocalDateTime;

        r1 := @parameter1: com.opengamma.util.time.Tenor;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r0, "date");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "tenor");

        $z0 = virtualinvoke r1.<com.opengamma.util.time.Tenor: boolean isBusinessDayTenor()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z1, "Business day tenors must have a calendar and initial offset to adjust a date");

        $r4 = virtualinvoke r1.<com.opengamma.util.time.Tenor: org.threeten.bp.Period getPeriod()>();

        $r5 = virtualinvoke r0.<org.threeten.bp.LocalDateTime: org.threeten.bp.LocalDateTime plus(org.threeten.bp.temporal.TemporalAmount)>($r4);

        return $r5;
    }

    public static org.threeten.bp.LocalDate adjustDateByTenor(org.threeten.bp.LocalDate, com.opengamma.util.time.Tenor)
    {
        org.threeten.bp.LocalDate r0, $r5;
        com.opengamma.util.time.Tenor r1;
        boolean $z0, $z1;
        org.threeten.bp.Period $r4;

        r0 := @parameter0: org.threeten.bp.LocalDate;

        r1 := @parameter1: com.opengamma.util.time.Tenor;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r0, "date");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "tenor");

        $z0 = virtualinvoke r1.<com.opengamma.util.time.Tenor: boolean isBusinessDayTenor()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z1, "Business day tenors must have a calendar and initial offset to adjust a date");

        $r4 = virtualinvoke r1.<com.opengamma.util.time.Tenor: org.threeten.bp.Period getPeriod()>();

        $r5 = virtualinvoke r0.<org.threeten.bp.LocalDate: org.threeten.bp.LocalDate plus(org.threeten.bp.temporal.TemporalAmount)>($r4);

        return $r5;
    }

    public static org.threeten.bp.ZonedDateTime adjustDateByTenor(org.threeten.bp.ZonedDateTime, com.opengamma.util.time.Tenor, com.opengamma.financial.convention.calendar.Calendar, int)
    {
        org.threeten.bp.ZonedDateTime r0, $r10, r19, r20;
        com.opengamma.util.time.Tenor r1;
        com.opengamma.financial.convention.calendar.Calendar r2;
        int i0, $i1, $i2, i3, i4;
        com.opengamma.util.time.Tenor$BusinessDayTenor r3;
        java.lang.Object[] $r7;
        java.lang.Integer $r8;
        boolean $z0, $z1, $z2, $z3;
        org.threeten.bp.Period $r9;
        int[] $r11;
        org.threeten.bp.LocalDate $r12, $r13;
        java.lang.IllegalArgumentException $r14;
        java.lang.StringBuilder $r15, $r16, $r17;
        java.lang.String $r18;

        r0 := @parameter0: org.threeten.bp.ZonedDateTime;

        r1 := @parameter1: com.opengamma.util.time.Tenor;

        r2 := @parameter2: com.opengamma.financial.convention.calendar.Calendar;

        i0 := @parameter3: int;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r0, "date");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "tenor");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, "calendar");

        if i0 < 0 goto label01;

        $z3 = 1;

        goto label02;

     label01:
        $z3 = 0;

     label02:
        $r7 = newarray (java.lang.Object)[1];

        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r7[0] = $r8;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String,java.lang.Object[])>($z3, "number of spot days must be greater than zero; have {}", $r7);

        $z0 = virtualinvoke r1.<com.opengamma.util.time.Tenor: boolean isBusinessDayTenor()>();

        if $z0 == 0 goto label12;

        r3 = virtualinvoke r1.<com.opengamma.util.time.Tenor: com.opengamma.util.time.Tenor$BusinessDayTenor getBusinessDayTenor()>();

        $r11 = <com.opengamma.analytics.util.time.TenorUtils$1: int[] $SwitchMap$com$opengamma$util$time$Tenor$BusinessDayTenor>;

        $i1 = virtualinvoke r3.<com.opengamma.util.time.Tenor$BusinessDayTenor: int ordinal()>();

        $i2 = $r11[$i1];

        tableswitch($i2)
        {
            case 1: goto label03;
            case 2: goto label04;
            case 3: goto label05;
            default: goto label06;
        };

     label03:
        i3 = 0;

        goto label07;

     label04:
        i3 = 1;

        goto label07;

     label05:
        i3 = i0;

        goto label07;

     label06:
        $r14 = new java.lang.IllegalArgumentException;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Did not recognise tenor ");

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r14.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r18);

        throw $r14;

     label07:
        r19 = r0;

        i4 = 0;

     label08:
        if i4 >= i3 goto label09;

        r19 = virtualinvoke r19.<org.threeten.bp.ZonedDateTime: org.threeten.bp.ZonedDateTime plusDays(long)>(1L);

        $r13 = virtualinvoke r19.<org.threeten.bp.ZonedDateTime: org.threeten.bp.LocalDate toLocalDate()>();

        $z2 = interfaceinvoke r2.<com.opengamma.financial.convention.calendar.Calendar: boolean isWorkingDay(org.threeten.bp.LocalDate)>($r13);

        if $z2 == 0 goto label08;

        i4 = i4 + 1;

        goto label08;

     label09:
        r20 = virtualinvoke r19.<org.threeten.bp.ZonedDateTime: org.threeten.bp.ZonedDateTime plusDays(long)>(1L);

     label10:
        $r12 = virtualinvoke r20.<org.threeten.bp.ZonedDateTime: org.threeten.bp.LocalDate toLocalDate()>();

        $z1 = interfaceinvoke r2.<com.opengamma.financial.convention.calendar.Calendar: boolean isWorkingDay(org.threeten.bp.LocalDate)>($r12);

        if $z1 != 0 goto label11;

        r20 = virtualinvoke r20.<org.threeten.bp.ZonedDateTime: org.threeten.bp.ZonedDateTime plusDays(long)>(1L);

        goto label10;

     label11:
        return r20;

     label12:
        $r9 = virtualinvoke r1.<com.opengamma.util.time.Tenor: org.threeten.bp.Period getPeriod()>();

        $r10 = virtualinvoke r0.<org.threeten.bp.ZonedDateTime: org.threeten.bp.ZonedDateTime plus(org.threeten.bp.temporal.TemporalAmount)>($r9);

        return $r10;
    }

    public static org.threeten.bp.LocalDateTime adjustDateByTenor(org.threeten.bp.LocalDateTime, com.opengamma.util.time.Tenor, com.opengamma.financial.convention.calendar.Calendar, int)
    {
        org.threeten.bp.LocalDateTime r0, $r10, r19, r20;
        com.opengamma.util.time.Tenor r1;
        com.opengamma.financial.convention.calendar.Calendar r2;
        int i0, $i1, $i2, i3, i4;
        com.opengamma.util.time.Tenor$BusinessDayTenor r3;
        java.lang.Object[] $r7;
        java.lang.Integer $r8;
        boolean $z0, $z1, $z2, $z3;
        org.threeten.bp.Period $r9;
        int[] $r11;
        org.threeten.bp.LocalDate $r12, $r13;
        java.lang.IllegalArgumentException $r14;
        java.lang.StringBuilder $r15, $r16, $r17;
        java.lang.String $r18;

        r0 := @parameter0: org.threeten.bp.LocalDateTime;

        r1 := @parameter1: com.opengamma.util.time.Tenor;

        r2 := @parameter2: com.opengamma.financial.convention.calendar.Calendar;

        i0 := @parameter3: int;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r0, "date");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "tenor");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, "calendar");

        if i0 < 0 goto label01;

        $z3 = 1;

        goto label02;

     label01:
        $z3 = 0;

     label02:
        $r7 = newarray (java.lang.Object)[1];

        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r7[0] = $r8;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String,java.lang.Object[])>($z3, "number of spot days must be greater than zero; have {}", $r7);

        $z0 = virtualinvoke r1.<com.opengamma.util.time.Tenor: boolean isBusinessDayTenor()>();

        if $z0 == 0 goto label12;

        r3 = virtualinvoke r1.<com.opengamma.util.time.Tenor: com.opengamma.util.time.Tenor$BusinessDayTenor getBusinessDayTenor()>();

        $r11 = <com.opengamma.analytics.util.time.TenorUtils$1: int[] $SwitchMap$com$opengamma$util$time$Tenor$BusinessDayTenor>;

        $i1 = virtualinvoke r3.<com.opengamma.util.time.Tenor$BusinessDayTenor: int ordinal()>();

        $i2 = $r11[$i1];

        tableswitch($i2)
        {
            case 1: goto label03;
            case 2: goto label04;
            case 3: goto label05;
            default: goto label06;
        };

     label03:
        i3 = 0;

        goto label07;

     label04:
        i3 = 1;

        goto label07;

     label05:
        i3 = i0;

        goto label07;

     label06:
        $r14 = new java.lang.IllegalArgumentException;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Did not recognise tenor ");

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r14.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r18);

        throw $r14;

     label07:
        r19 = r0;

        i4 = 0;

     label08:
        if i4 >= i3 goto label09;

        r19 = virtualinvoke r19.<org.threeten.bp.LocalDateTime: org.threeten.bp.LocalDateTime plusDays(long)>(1L);

        $r13 = virtualinvoke r19.<org.threeten.bp.LocalDateTime: org.threeten.bp.LocalDate toLocalDate()>();

        $z2 = interfaceinvoke r2.<com.opengamma.financial.convention.calendar.Calendar: boolean isWorkingDay(org.threeten.bp.LocalDate)>($r13);

        if $z2 == 0 goto label08;

        i4 = i4 + 1;

        goto label08;

     label09:
        r20 = virtualinvoke r19.<org.threeten.bp.LocalDateTime: org.threeten.bp.LocalDateTime plusDays(long)>(1L);

     label10:
        $r12 = virtualinvoke r20.<org.threeten.bp.LocalDateTime: org.threeten.bp.LocalDate toLocalDate()>();

        $z1 = interfaceinvoke r2.<com.opengamma.financial.convention.calendar.Calendar: boolean isWorkingDay(org.threeten.bp.LocalDate)>($r12);

        if $z1 != 0 goto label11;

        r20 = virtualinvoke r20.<org.threeten.bp.LocalDateTime: org.threeten.bp.LocalDateTime plusDays(long)>(1L);

        goto label10;

     label11:
        return r20;

     label12:
        $r9 = virtualinvoke r1.<com.opengamma.util.time.Tenor: org.threeten.bp.Period getPeriod()>();

        $r10 = virtualinvoke r0.<org.threeten.bp.LocalDateTime: org.threeten.bp.LocalDateTime plus(org.threeten.bp.temporal.TemporalAmount)>($r9);

        return $r10;
    }

    public static org.threeten.bp.LocalDate adjustDateByTenor(org.threeten.bp.LocalDate, com.opengamma.util.time.Tenor, com.opengamma.financial.convention.calendar.Calendar, int)
    {
        org.threeten.bp.LocalDate r0, $r10, r17, r18;
        com.opengamma.util.time.Tenor r1;
        com.opengamma.financial.convention.calendar.Calendar r2;
        int i0, $i1, $i2, i3, i4;
        com.opengamma.util.time.Tenor$BusinessDayTenor r3;
        java.lang.Object[] $r7;
        java.lang.Integer $r8;
        boolean $z0, $z1, $z2, $z3;
        org.threeten.bp.Period $r9;
        int[] $r11;
        java.lang.IllegalArgumentException $r12;
        java.lang.StringBuilder $r13, $r14, $r15;
        java.lang.String $r16;

        r0 := @parameter0: org.threeten.bp.LocalDate;

        r1 := @parameter1: com.opengamma.util.time.Tenor;

        r2 := @parameter2: com.opengamma.financial.convention.calendar.Calendar;

        i0 := @parameter3: int;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r0, "date");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "tenor");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, "calendar");

        if i0 < 0 goto label01;

        $z3 = 1;

        goto label02;

     label01:
        $z3 = 0;

     label02:
        $r7 = newarray (java.lang.Object)[1];

        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r7[0] = $r8;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String,java.lang.Object[])>($z3, "number of spot days must be greater than zero; have {}", $r7);

        $z0 = virtualinvoke r1.<com.opengamma.util.time.Tenor: boolean isBusinessDayTenor()>();

        if $z0 == 0 goto label12;

        r3 = virtualinvoke r1.<com.opengamma.util.time.Tenor: com.opengamma.util.time.Tenor$BusinessDayTenor getBusinessDayTenor()>();

        $r11 = <com.opengamma.analytics.util.time.TenorUtils$1: int[] $SwitchMap$com$opengamma$util$time$Tenor$BusinessDayTenor>;

        $i1 = virtualinvoke r3.<com.opengamma.util.time.Tenor$BusinessDayTenor: int ordinal()>();

        $i2 = $r11[$i1];

        tableswitch($i2)
        {
            case 1: goto label03;
            case 2: goto label04;
            case 3: goto label05;
            default: goto label06;
        };

     label03:
        i3 = 0;

        goto label07;

     label04:
        i3 = 1;

        goto label07;

     label05:
        i3 = i0;

        goto label07;

     label06:
        $r12 = new java.lang.IllegalArgumentException;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Did not recognise tenor ");

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r12.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r16);

        throw $r12;

     label07:
        r17 = r0;

        i4 = 0;

     label08:
        if i4 >= i3 goto label09;

        r17 = virtualinvoke r17.<org.threeten.bp.LocalDate: org.threeten.bp.LocalDate plusDays(long)>(1L);

        $z2 = interfaceinvoke r2.<com.opengamma.financial.convention.calendar.Calendar: boolean isWorkingDay(org.threeten.bp.LocalDate)>(r17);

        if $z2 == 0 goto label08;

        i4 = i4 + 1;

        goto label08;

     label09:
        r18 = virtualinvoke r17.<org.threeten.bp.LocalDate: org.threeten.bp.LocalDate plusDays(long)>(1L);

     label10:
        $z1 = interfaceinvoke r2.<com.opengamma.financial.convention.calendar.Calendar: boolean isWorkingDay(org.threeten.bp.LocalDate)>(r18);

        if $z1 != 0 goto label11;

        r18 = virtualinvoke r18.<org.threeten.bp.LocalDate: org.threeten.bp.LocalDate plusDays(long)>(1L);

        goto label10;

     label11:
        return r18;

     label12:
        $r9 = virtualinvoke r1.<com.opengamma.util.time.Tenor: org.threeten.bp.Period getPeriod()>();

        $r10 = virtualinvoke r0.<org.threeten.bp.LocalDate: org.threeten.bp.LocalDate plus(org.threeten.bp.temporal.TemporalAmount)>($r9);

        return $r10;
    }

    public static com.opengamma.util.time.Tenor plus(com.opengamma.util.time.Tenor, com.opengamma.util.time.Tenor)
    {
        com.opengamma.util.time.Tenor r0, r1, $r3, $r5, $r6, $r14, $r15, $r19;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        org.threeten.bp.Period $r2, $r4, $r16, $r17, $r18;
        java.lang.IllegalArgumentException $r7;
        java.lang.StringBuilder $r8, $r9, $r10, $r11, $r12;
        java.lang.String $r13;

        r0 := @parameter0: com.opengamma.util.time.Tenor;

        r1 := @parameter1: com.opengamma.util.time.Tenor;

        $z0 = virtualinvoke r0.<com.opengamma.util.time.Tenor: boolean isBusinessDayTenor()>();

        if $z0 != 0 goto label1;

        $z5 = virtualinvoke r1.<com.opengamma.util.time.Tenor: boolean isBusinessDayTenor()>();

        if $z5 != 0 goto label1;

        $r16 = virtualinvoke r0.<com.opengamma.util.time.Tenor: org.threeten.bp.Period getPeriod()>();

        $r17 = virtualinvoke r1.<com.opengamma.util.time.Tenor: org.threeten.bp.Period getPeriod()>();

        $r18 = virtualinvoke $r16.<org.threeten.bp.Period: org.threeten.bp.Period plus(org.threeten.bp.Period)>($r17);

        $r19 = staticinvoke <com.opengamma.util.time.Tenor: com.opengamma.util.time.Tenor of(org.threeten.bp.Period)>($r18);

        return $r19;

     label1:
        $r2 = <org.threeten.bp.Period: org.threeten.bp.Period ZERO>;

        $r3 = staticinvoke <com.opengamma.util.time.Tenor: com.opengamma.util.time.Tenor of(org.threeten.bp.Period)>($r2);

        $z1 = virtualinvoke r0.<com.opengamma.util.time.Tenor: boolean equals(java.lang.Object)>($r3);

        if $z1 == 0 goto label2;

        return r1;

     label2:
        $r4 = <org.threeten.bp.Period: org.threeten.bp.Period ZERO>;

        $r5 = staticinvoke <com.opengamma.util.time.Tenor: com.opengamma.util.time.Tenor of(org.threeten.bp.Period)>($r4);

        $z2 = virtualinvoke r1.<com.opengamma.util.time.Tenor: boolean equals(java.lang.Object)>($r5);

        if $z2 == 0 goto label3;

        return r0;

     label3:
        $r6 = <com.opengamma.util.time.Tenor: com.opengamma.util.time.Tenor ON>;

        $z3 = virtualinvoke r0.<com.opengamma.util.time.Tenor: boolean equals(java.lang.Object)>($r6);

        if $z3 == 0 goto label4;

        $r14 = <com.opengamma.util.time.Tenor: com.opengamma.util.time.Tenor ON>;

        $z4 = virtualinvoke r0.<com.opengamma.util.time.Tenor: boolean equals(java.lang.Object)>($r14);

        if $z4 == 0 goto label4;

        $r15 = <com.opengamma.util.time.Tenor: com.opengamma.util.time.Tenor TN>;

        return $r15;

     label4:
        $r7 = new java.lang.IllegalArgumentException;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Can not add ");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" and ");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r13);

        throw $r7;
    }
}
