public class com.opengamma.analytics.math.function.ParameterizedCurveVectorFunctionProvider extends com.opengamma.analytics.math.function.DoublesVectorFunctionProvider
{
    private final com.opengamma.analytics.math.function.ParameterizedCurve _pCurve;

    public void <init>(com.opengamma.analytics.math.function.ParameterizedCurve)
    {
        com.opengamma.analytics.math.function.ParameterizedCurveVectorFunctionProvider r0;
        com.opengamma.analytics.math.function.ParameterizedCurve r1;

        r0 := @this: com.opengamma.analytics.math.function.ParameterizedCurveVectorFunctionProvider;

        r1 := @parameter0: com.opengamma.analytics.math.function.ParameterizedCurve;

        specialinvoke r0.<com.opengamma.analytics.math.function.DoublesVectorFunctionProvider: void <init>()>();

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "pCurve");

        r0.<com.opengamma.analytics.math.function.ParameterizedCurveVectorFunctionProvider: com.opengamma.analytics.math.function.ParameterizedCurve _pCurve> = r1;

        return;
    }

    public com.opengamma.analytics.math.function.VectorFunction 'from'(double[])
    {
        com.opengamma.analytics.math.function.ParameterizedCurveVectorFunctionProvider r0;
        double[] r1;
        com.opengamma.analytics.math.function.ParameterizedCurveVectorFunction $r2;
        com.opengamma.analytics.math.function.ParameterizedCurve $r3;

        r0 := @this: com.opengamma.analytics.math.function.ParameterizedCurveVectorFunctionProvider;

        r1 := @parameter0: double[];

        $r2 = new com.opengamma.analytics.math.function.ParameterizedCurveVectorFunction;

        $r3 = r0.<com.opengamma.analytics.math.function.ParameterizedCurveVectorFunctionProvider: com.opengamma.analytics.math.function.ParameterizedCurve _pCurve>;

        specialinvoke $r2.<com.opengamma.analytics.math.function.ParameterizedCurveVectorFunction: void <init>(double[],com.opengamma.analytics.math.function.ParameterizedCurve)>(r1, $r3);

        return $r2;
    }
}
