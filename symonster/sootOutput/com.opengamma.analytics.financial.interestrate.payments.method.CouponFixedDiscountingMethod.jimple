public final class com.opengamma.analytics.financial.interestrate.payments.method.CouponFixedDiscountingMethod extends java.lang.Object
{
    private static final com.opengamma.analytics.financial.interestrate.payments.method.CouponFixedDiscountingMethod INSTANCE;

    public static com.opengamma.analytics.financial.interestrate.payments.method.CouponFixedDiscountingMethod getInstance()
    {
        com.opengamma.analytics.financial.interestrate.payments.method.CouponFixedDiscountingMethod $r0;

        $r0 = <com.opengamma.analytics.financial.interestrate.payments.method.CouponFixedDiscountingMethod: com.opengamma.analytics.financial.interestrate.payments.method.CouponFixedDiscountingMethod INSTANCE>;

        return $r0;
    }

    private void <init>()
    {
        com.opengamma.analytics.financial.interestrate.payments.method.CouponFixedDiscountingMethod r0;

        r0 := @this: com.opengamma.analytics.financial.interestrate.payments.method.CouponFixedDiscountingMethod;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public com.opengamma.util.money.CurrencyAmount presentValue(com.opengamma.analytics.financial.interestrate.payments.derivative.CouponFixed, com.opengamma.analytics.financial.interestrate.YieldCurveBundle)
    {
        com.opengamma.analytics.financial.interestrate.payments.method.CouponFixedDiscountingMethod r0;
        com.opengamma.analytics.financial.interestrate.payments.derivative.CouponFixed r1;
        com.opengamma.analytics.financial.interestrate.YieldCurveBundle r2;
        com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve r3;
        double d0, $d1, $d2, $d3;
        java.lang.String $r4;
        com.opengamma.util.money.Currency $r5;
        com.opengamma.util.money.CurrencyAmount $r6;

        r0 := @this: com.opengamma.analytics.financial.interestrate.payments.method.CouponFixedDiscountingMethod;

        r1 := @parameter0: com.opengamma.analytics.financial.interestrate.payments.derivative.CouponFixed;

        r2 := @parameter1: com.opengamma.analytics.financial.interestrate.YieldCurveBundle;

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object)>(r2);

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object)>(r1);

        $r4 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.payments.derivative.CouponFixed: java.lang.String getFundingCurveName()>();

        r3 = virtualinvoke r2.<com.opengamma.analytics.financial.interestrate.YieldCurveBundle: com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve getCurve(java.lang.String)>($r4);

        $d1 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.payments.derivative.CouponFixed: double getAmount()>();

        $d2 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.payments.derivative.CouponFixed: double getPaymentTime()>();

        $d3 = virtualinvoke r3.<com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve: double getDiscountFactor(double)>($d2);

        d0 = $d1 * $d3;

        $r5 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.payments.derivative.CouponFixed: com.opengamma.util.money.Currency getCurrency()>();

        $r6 = staticinvoke <com.opengamma.util.money.CurrencyAmount: com.opengamma.util.money.CurrencyAmount of(com.opengamma.util.money.Currency,double)>($r5, d0);

        return $r6;
    }

    public com.opengamma.util.money.CurrencyAmount presentValuePositiveNotional(com.opengamma.analytics.financial.interestrate.payments.derivative.CouponFixed, com.opengamma.analytics.financial.interestrate.YieldCurveBundle)
    {
        com.opengamma.analytics.financial.interestrate.payments.method.CouponFixedDiscountingMethod r0;
        com.opengamma.analytics.financial.interestrate.payments.derivative.CouponFixed r1;
        com.opengamma.analytics.financial.interestrate.YieldCurveBundle r2;
        com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve r3;
        double d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8;
        java.lang.String $r4;
        com.opengamma.util.money.Currency $r5;
        com.opengamma.util.money.CurrencyAmount $r6;

        r0 := @this: com.opengamma.analytics.financial.interestrate.payments.method.CouponFixedDiscountingMethod;

        r1 := @parameter0: com.opengamma.analytics.financial.interestrate.payments.derivative.CouponFixed;

        r2 := @parameter1: com.opengamma.analytics.financial.interestrate.YieldCurveBundle;

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object)>(r2);

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object)>(r1);

        $r4 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.payments.derivative.CouponFixed: java.lang.String getFundingCurveName()>();

        r3 = virtualinvoke r2.<com.opengamma.analytics.financial.interestrate.YieldCurveBundle: com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve getCurve(java.lang.String)>($r4);

        $d1 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.payments.derivative.CouponFixed: double getPaymentYearFraction()>();

        $d2 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.payments.derivative.CouponFixed: double getNotional()>();

        $d3 = staticinvoke <java.lang.Math: double abs(double)>($d2);

        $d4 = $d1 * $d3;

        $d5 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.payments.derivative.CouponFixed: double getFixedRate()>();

        $d6 = $d4 * $d5;

        $d7 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.payments.derivative.CouponFixed: double getPaymentTime()>();

        $d8 = virtualinvoke r3.<com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve: double getDiscountFactor(double)>($d7);

        d0 = $d6 * $d8;

        $r5 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.payments.derivative.CouponFixed: com.opengamma.util.money.Currency getCurrency()>();

        $r6 = staticinvoke <com.opengamma.util.money.CurrencyAmount: com.opengamma.util.money.CurrencyAmount of(com.opengamma.util.money.Currency,double)>($r5, d0);

        return $r6;
    }

    public com.opengamma.analytics.financial.interestrate.InterestRateCurveSensitivity presentValueCurveSensitivity(com.opengamma.analytics.financial.interestrate.payments.derivative.CouponFixed, com.opengamma.analytics.financial.interestrate.YieldCurveBundle)
    {
        com.opengamma.analytics.financial.interestrate.payments.method.CouponFixedDiscountingMethod r0;
        com.opengamma.analytics.financial.interestrate.payments.derivative.CouponFixed r1;
        com.opengamma.analytics.financial.interestrate.YieldCurveBundle r2;
        java.lang.String r3;
        com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve r4;
        double d0, $d1, $d2, $d3, $d4, $d5;
        com.opengamma.util.tuple.DoublesPair r5;
        java.util.ArrayList $r8;
        java.util.HashMap $r9;
        com.opengamma.analytics.financial.interestrate.InterestRateCurveSensitivity $r11;

        r0 := @this: com.opengamma.analytics.financial.interestrate.payments.method.CouponFixedDiscountingMethod;

        r1 := @parameter0: com.opengamma.analytics.financial.interestrate.payments.derivative.CouponFixed;

        r2 := @parameter1: com.opengamma.analytics.financial.interestrate.YieldCurveBundle;

        r3 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.payments.derivative.CouponFixed: java.lang.String getFundingCurveName()>();

        r4 = virtualinvoke r2.<com.opengamma.analytics.financial.interestrate.YieldCurveBundle: com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve getCurve(java.lang.String)>(r3);

        d0 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.payments.derivative.CouponFixed: double getPaymentTime()>();

        $d1 = neg d0;

        $d2 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.payments.derivative.CouponFixed: double getAmount()>();

        $d3 = $d1 * $d2;

        $d4 = virtualinvoke r4.<com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve: double getDiscountFactor(double)>(d0);

        $d5 = $d3 * $d4;

        r5 = staticinvoke <com.opengamma.util.tuple.DoublesPair: com.opengamma.util.tuple.DoublesPair of(double,double)>(d0, $d5);

        $r8 = new java.util.ArrayList;

        specialinvoke $r8.<java.util.ArrayList: void <init>()>();

        interfaceinvoke $r8.<java.util.List: boolean add(java.lang.Object)>(r5);

        $r9 = new java.util.HashMap;

        specialinvoke $r9.<java.util.HashMap: void <init>()>();

        interfaceinvoke $r9.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r3, $r8);

        $r11 = new com.opengamma.analytics.financial.interestrate.InterestRateCurveSensitivity;

        specialinvoke $r11.<com.opengamma.analytics.financial.interestrate.InterestRateCurveSensitivity: void <init>(java.util.Map)>($r9);

        return $r11;
    }

    public com.opengamma.analytics.util.amount.StringAmount presentValueParallelCurveSensitivity(com.opengamma.analytics.financial.interestrate.payments.derivative.CouponFixed, com.opengamma.analytics.financial.interestrate.YieldCurveBundle)
    {
        com.opengamma.analytics.financial.interestrate.payments.method.CouponFixedDiscountingMethod r0;
        com.opengamma.analytics.financial.interestrate.payments.derivative.CouponFixed r1;
        com.opengamma.analytics.financial.interestrate.YieldCurveBundle r2;
        java.lang.String r3;
        com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve r4;
        double d0, d1, $d2, $d3, $d4, $d5;
        java.lang.Double $r5;
        com.opengamma.analytics.util.amount.StringAmount $r6;

        r0 := @this: com.opengamma.analytics.financial.interestrate.payments.method.CouponFixedDiscountingMethod;

        r1 := @parameter0: com.opengamma.analytics.financial.interestrate.payments.derivative.CouponFixed;

        r2 := @parameter1: com.opengamma.analytics.financial.interestrate.YieldCurveBundle;

        r3 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.payments.derivative.CouponFixed: java.lang.String getFundingCurveName()>();

        r4 = virtualinvoke r2.<com.opengamma.analytics.financial.interestrate.YieldCurveBundle: com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve getCurve(java.lang.String)>(r3);

        d0 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.payments.derivative.CouponFixed: double getPaymentTime()>();

        $d2 = neg d0;

        $d3 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.payments.derivative.CouponFixed: double getAmount()>();

        $d4 = $d2 * $d3;

        $d5 = virtualinvoke r4.<com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve: double getDiscountFactor(double)>(d0);

        d1 = $d4 * $d5;

        $r5 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d1);

        $r6 = staticinvoke <com.opengamma.analytics.util.amount.StringAmount: com.opengamma.analytics.util.amount.StringAmount 'from'(java.lang.String,java.lang.Double)>(r3, $r5);

        return $r6;
    }

    static void <clinit>()
    {
        com.opengamma.analytics.financial.interestrate.payments.method.CouponFixedDiscountingMethod $r0;

        $r0 = new com.opengamma.analytics.financial.interestrate.payments.method.CouponFixedDiscountingMethod;

        specialinvoke $r0.<com.opengamma.analytics.financial.interestrate.payments.method.CouponFixedDiscountingMethod: void <init>()>();

        <com.opengamma.analytics.financial.interestrate.payments.method.CouponFixedDiscountingMethod: com.opengamma.analytics.financial.interestrate.payments.method.CouponFixedDiscountingMethod INSTANCE> = $r0;

        return;
    }
}
