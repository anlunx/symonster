class com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapStaticReplication$5 extends com.opengamma.analytics.math.function.Function1D
{
    final com.opengamma.analytics.financial.model.volatility.surface.PureImpliedVolatilitySurface val$volSurface;
    final double val$tau;
    final double val$f;
    final double val$d;
    final double val$alpha;
    final double val$beta;
    final double val$fMd2;
    final com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapStaticReplication this$0;

    void <init>(com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapStaticReplication, com.opengamma.analytics.financial.model.volatility.surface.PureImpliedVolatilitySurface, double, double, double, double, double, double)
    {
        com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapStaticReplication$5 r0;
        com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapStaticReplication r1;
        com.opengamma.analytics.financial.model.volatility.surface.PureImpliedVolatilitySurface r2;
        double d0, d1, d2, d3, d4, d5;

        r0 := @this: com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapStaticReplication$5;

        r1 := @parameter0: com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapStaticReplication;

        r2 := @parameter1: com.opengamma.analytics.financial.model.volatility.surface.PureImpliedVolatilitySurface;

        d0 := @parameter2: double;

        d1 := @parameter3: double;

        d2 := @parameter4: double;

        d3 := @parameter5: double;

        d4 := @parameter6: double;

        d5 := @parameter7: double;

        r0.<com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapStaticReplication$5: com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapStaticReplication this$0> = r1;

        r0.<com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapStaticReplication$5: com.opengamma.analytics.financial.model.volatility.surface.PureImpliedVolatilitySurface val$volSurface> = r2;

        r0.<com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapStaticReplication$5: double val$tau> = d0;

        r0.<com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapStaticReplication$5: double val$f> = d1;

        r0.<com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapStaticReplication$5: double val$d> = d2;

        r0.<com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapStaticReplication$5: double val$alpha> = d3;

        r0.<com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapStaticReplication$5: double val$beta> = d4;

        r0.<com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapStaticReplication$5: double val$fMd2> = d5;

        specialinvoke r0.<com.opengamma.analytics.math.function.Function1D: void <init>()>();

        return;
    }

    public java.lang.Double evaluate(java.lang.Double)
    {
        com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapStaticReplication$5 r0;
        java.lang.Double r1, $r3, $r4;
        double d0, d1, d2, d3, d4, d5, d6, d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21, $d22, $d23, $d24, $d25, $d26, $d27, $d28, $d29, $d30, $d31, $d32, $d33, $d34, $d35, $d36, $d37, $d38, $d39;
        byte $b0, $b1;
        com.opengamma.analytics.financial.model.volatility.surface.PureImpliedVolatilitySurface $r2;
        boolean $z1;

        r0 := @this: com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapStaticReplication$5;

        r1 := @parameter0: java.lang.Double;

        $d8 = virtualinvoke r1.<java.lang.Double: double doubleValue()>();

        $b0 = $d8 cmpl 0.0;

        if $b0 != 0 goto label1;

        $r4 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(0.0);

        return $r4;

     label1:
        $d9 = virtualinvoke r1.<java.lang.Double: double doubleValue()>();

        $b1 = $d9 cmpl 1.0;

        if $b1 < 0 goto label2;

        $z1 = 1;

        goto label3;

     label2:
        $z1 = 0;

     label3:
        $r2 = r0.<com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapStaticReplication$5: com.opengamma.analytics.financial.model.volatility.surface.PureImpliedVolatilitySurface val$volSurface>;

        $d10 = r0.<com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapStaticReplication$5: double val$tau>;

        $d11 = virtualinvoke r1.<java.lang.Double: double doubleValue()>();

        d0 = virtualinvoke $r2.<com.opengamma.analytics.financial.model.volatility.surface.PureImpliedVolatilitySurface: double getVolatility(double,double)>($d10, $d11);

        $d12 = virtualinvoke r1.<java.lang.Double: double doubleValue()>();

        $d13 = r0.<com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapStaticReplication$5: double val$tau>;

        d1 = staticinvoke <com.opengamma.analytics.financial.model.volatility.BlackFormulaRepository: double price(double,double,double,double,boolean)>(1.0, $d12, $d13, d0, $z1);

        $d15 = r0.<com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapStaticReplication$5: double val$f>;

        $d14 = r0.<com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapStaticReplication$5: double val$d>;

        $d16 = $d15 - $d14;

        $d17 = virtualinvoke r1.<java.lang.Double: double doubleValue()>();

        $d19 = $d16 * $d17;

        $d18 = r0.<com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapStaticReplication$5: double val$d>;

        d2 = $d19 + $d18;

        $d20 = r0.<com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapStaticReplication$5: double val$alpha>;

        d3 = d2 + $d20;

        $d21 = r0.<com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapStaticReplication$5: double val$beta>;

        $d22 = 1.0 - $d21;

        $d23 = d2 * $d22;

        $d24 = $d23 / d3;

        d4 = staticinvoke <java.lang.Math: double log(double)>($d24);

        $d25 = r0.<com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapStaticReplication$5: double val$alpha>;

        $d26 = $d25 / d2;

        d5 = $d26 / d3;

        $d27 = r0.<com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapStaticReplication$5: double val$alpha>;

        $d29 = neg $d27;

        $d28 = d2 + d3;

        $d30 = $d29 * $d28;

        $d31 = $d30 / d2;

        $d32 = $d31 / d2;

        $d33 = $d32 / d3;

        d6 = $d33 / d3;

        $d38 = r0.<com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapStaticReplication$5: double val$fMd2>;

        $d34 = 1.0 + d4;

        $d36 = $d34 * d6;

        $d35 = d5 * d5;

        $d37 = $d36 + $d35;

        d7 = $d38 * $d37;

        $d39 = d1 * d7;

        $r3 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d39);

        return $r3;
    }

    public volatile java.lang.Object evaluate(java.lang.Object)
    {
        com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapStaticReplication$5 r0;
        java.lang.Object r1;
        java.lang.Double $r2, $r3;

        r0 := @this: com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapStaticReplication$5;

        r1 := @parameter0: java.lang.Object;

        $r2 = (java.lang.Double) r1;

        $r3 = virtualinvoke r0.<com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapStaticReplication$5: java.lang.Double evaluate(java.lang.Double)>($r2);

        return $r3;
    }
}
