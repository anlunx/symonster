public class com.opengamma.analytics.financial.riskfactor.GreekToPositionGreekConverter extends com.opengamma.analytics.math.function.Function1D
{

    public void <init>()
    {
        com.opengamma.analytics.financial.riskfactor.GreekToPositionGreekConverter r0;

        r0 := @this: com.opengamma.analytics.financial.riskfactor.GreekToPositionGreekConverter;

        specialinvoke r0.<com.opengamma.analytics.math.function.Function1D: void <init>()>();

        return;
    }

    public java.util.Map evaluate(com.opengamma.analytics.financial.riskfactor.GreekDataBundle)
    {
        com.opengamma.analytics.financial.riskfactor.GreekToPositionGreekConverter r0;
        com.opengamma.analytics.financial.riskfactor.GreekDataBundle r1;
        com.opengamma.analytics.financial.greeks.GreekResultCollection r2;
        java.util.Iterator r5;
        com.opengamma.util.tuple.Pair r6;
        java.util.HashMap $r8;
        boolean $z0;
        java.lang.Object $r9, $r11, $r13;
        com.opengamma.analytics.financial.sensitivity.PositionGreek $r10;
        com.opengamma.analytics.financial.greeks.Greek $r12;
        java.lang.Double $r14, $r16;
        double $d0, $d1, $d2;
        com.opengamma.analytics.financial.trade.OptionTradeData $r15;

        r0 := @this: com.opengamma.analytics.financial.riskfactor.GreekToPositionGreekConverter;

        r1 := @parameter0: com.opengamma.analytics.financial.riskfactor.GreekDataBundle;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "Risk factor data bundle");

        r2 = virtualinvoke r1.<com.opengamma.analytics.financial.riskfactor.GreekDataBundle: com.opengamma.analytics.financial.greeks.GreekResultCollection getGreekResults()>();

        $r8 = new java.util.HashMap;

        specialinvoke $r8.<java.util.HashMap: void <init>()>();

        r5 = virtualinvoke r2.<com.opengamma.analytics.financial.greeks.GreekResultCollection: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r9 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>();

        r6 = (com.opengamma.util.tuple.Pair) $r9;

        $r10 = new com.opengamma.analytics.financial.sensitivity.PositionGreek;

        $r11 = virtualinvoke r6.<com.opengamma.util.tuple.Pair: java.lang.Object getFirst()>();

        $r12 = (com.opengamma.analytics.financial.greeks.Greek) $r11;

        specialinvoke $r10.<com.opengamma.analytics.financial.sensitivity.PositionGreek: void <init>(com.opengamma.analytics.financial.greeks.Greek)>($r12);

        $r13 = virtualinvoke r6.<com.opengamma.util.tuple.Pair: java.lang.Object getSecond()>();

        $r14 = (java.lang.Double) $r13;

        $d0 = virtualinvoke $r14.<java.lang.Double: double doubleValue()>();

        $r15 = virtualinvoke r1.<com.opengamma.analytics.financial.riskfactor.GreekDataBundle: com.opengamma.analytics.financial.trade.OptionTradeData getOptionTradeData()>();

        $d1 = virtualinvoke $r15.<com.opengamma.analytics.financial.trade.OptionTradeData: double getNumberOfContracts()>();

        $d2 = $d0 * $d1;

        $r16 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d2);

        interfaceinvoke $r8.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r10, $r16);

        goto label1;

     label2:
        return $r8;
    }

    public volatile java.lang.Object evaluate(java.lang.Object)
    {
        com.opengamma.analytics.financial.riskfactor.GreekToPositionGreekConverter r0;
        java.lang.Object r1;
        com.opengamma.analytics.financial.riskfactor.GreekDataBundle $r2;
        java.util.Map $r3;

        r0 := @this: com.opengamma.analytics.financial.riskfactor.GreekToPositionGreekConverter;

        r1 := @parameter0: java.lang.Object;

        $r2 = (com.opengamma.analytics.financial.riskfactor.GreekDataBundle) r1;

        $r3 = virtualinvoke r0.<com.opengamma.analytics.financial.riskfactor.GreekToPositionGreekConverter: java.util.Map evaluate(com.opengamma.analytics.financial.riskfactor.GreekDataBundle)>($r2);

        return $r3;
    }
}
