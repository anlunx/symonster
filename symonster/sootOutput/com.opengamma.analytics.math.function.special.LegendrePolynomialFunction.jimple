public class com.opengamma.analytics.math.function.special.LegendrePolynomialFunction extends com.opengamma.analytics.math.function.special.OrthogonalPolynomialFunctionGenerator
{

    public void <init>()
    {
        com.opengamma.analytics.math.function.special.LegendrePolynomialFunction r0;

        r0 := @this: com.opengamma.analytics.math.function.special.LegendrePolynomialFunction;

        specialinvoke r0.<com.opengamma.analytics.math.function.special.OrthogonalPolynomialFunctionGenerator: void <init>()>();

        return;
    }

    public com.opengamma.analytics.math.function.DoubleFunction1D[] getPolynomials(int)
    {
        com.opengamma.analytics.math.function.special.LegendrePolynomialFunction r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, i7;
        com.opengamma.analytics.math.function.DoubleFunction1D[] r1;
        com.opengamma.analytics.math.function.DoubleFunction1D $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11;
        double $d0, $d1, $d2, $d3;
        boolean $z0;

        r0 := @this: com.opengamma.analytics.math.function.special.LegendrePolynomialFunction;

        i0 := @parameter0: int;

        if i0 < 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        staticinvoke <org.apache.commons.lang.Validate: void isTrue(boolean)>($z0);

        $i1 = i0 + 1;

        r1 = newarray (com.opengamma.analytics.math.function.DoubleFunction1D)[$i1];

        i7 = 0;

     label3:
        if i7 > i0 goto label7;

        if i7 != 0 goto label4;

        $r11 = virtualinvoke r0.<com.opengamma.analytics.math.function.special.LegendrePolynomialFunction: com.opengamma.analytics.math.function.DoubleFunction1D getOne()>();

        r1[i7] = $r11;

        goto label6;

     label4:
        if i7 != 1 goto label5;

        $r10 = virtualinvoke r0.<com.opengamma.analytics.math.function.special.LegendrePolynomialFunction: com.opengamma.analytics.math.function.DoubleFunction1D getX()>();

        r1[i7] = $r10;

        goto label6;

     label5:
        $i2 = i7 - 1;

        $r2 = r1[$i2];

        $r3 = virtualinvoke r0.<com.opengamma.analytics.math.function.special.LegendrePolynomialFunction: com.opengamma.analytics.math.function.DoubleFunction1D getX()>();

        $r4 = virtualinvoke $r2.<com.opengamma.analytics.math.function.DoubleFunction1D: com.opengamma.analytics.math.function.DoubleFunction1D multiply(com.opengamma.analytics.math.function.DoubleFunction1D)>($r3);

        $i3 = 2 * i7;

        $i4 = $i3 - 1;

        $d0 = (double) $i4;

        $r5 = virtualinvoke $r4.<com.opengamma.analytics.math.function.DoubleFunction1D: com.opengamma.analytics.math.function.DoubleFunction1D multiply(double)>($d0);

        $i5 = i7 - 2;

        $r6 = r1[$i5];

        $i6 = i7 - 1;

        $d1 = (double) $i6;

        $r7 = virtualinvoke $r6.<com.opengamma.analytics.math.function.DoubleFunction1D: com.opengamma.analytics.math.function.DoubleFunction1D multiply(double)>($d1);

        $r8 = virtualinvoke $r5.<com.opengamma.analytics.math.function.DoubleFunction1D: com.opengamma.analytics.math.function.DoubleFunction1D subtract(com.opengamma.analytics.math.function.DoubleFunction1D)>($r7);

        $d2 = (double) i7;

        $d3 = 1.0 / $d2;

        $r9 = virtualinvoke $r8.<com.opengamma.analytics.math.function.DoubleFunction1D: com.opengamma.analytics.math.function.DoubleFunction1D multiply(double)>($d3);

        r1[i7] = $r9;

     label6:
        i7 = i7 + 1;

        goto label3;

     label7:
        return r1;
    }

    public com.opengamma.util.tuple.Pair[] getPolynomialsAndFirstDerivative(int)
    {
        com.opengamma.analytics.math.function.special.LegendrePolynomialFunction r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, i7;
        com.opengamma.util.tuple.Pair[] r1;
        com.opengamma.analytics.math.function.DoubleFunction1D r2, r3, $r6, $r7, $r8, $r9, $r12, $r13, $r14, $r16, $r17, $r19, $r20;
        com.opengamma.util.tuple.Pair $r4, $r10, $r15, $r18, $r21;
        java.lang.Object $r5, $r11;
        double $d0, $d1, $d2, $d3;
        boolean $z0;

        r0 := @this: com.opengamma.analytics.math.function.special.LegendrePolynomialFunction;

        i0 := @parameter0: int;

        if i0 < 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        staticinvoke <org.apache.commons.lang.Validate: void isTrue(boolean)>($z0);

        $i1 = i0 + 1;

        r1 = newarray (com.opengamma.util.tuple.Pair)[$i1];

        i7 = 0;

     label3:
        if i7 > i0 goto label7;

        if i7 != 0 goto label4;

        $r19 = virtualinvoke r0.<com.opengamma.analytics.math.function.special.LegendrePolynomialFunction: com.opengamma.analytics.math.function.DoubleFunction1D getOne()>();

        $r20 = virtualinvoke r0.<com.opengamma.analytics.math.function.special.LegendrePolynomialFunction: com.opengamma.analytics.math.function.DoubleFunction1D getZero()>();

        $r21 = staticinvoke <com.opengamma.util.tuple.Pairs: com.opengamma.util.tuple.Pair of(java.lang.Object,java.lang.Object)>($r19, $r20);

        r1[i7] = $r21;

        goto label6;

     label4:
        if i7 != 1 goto label5;

        $r16 = virtualinvoke r0.<com.opengamma.analytics.math.function.special.LegendrePolynomialFunction: com.opengamma.analytics.math.function.DoubleFunction1D getX()>();

        $r17 = virtualinvoke r0.<com.opengamma.analytics.math.function.special.LegendrePolynomialFunction: com.opengamma.analytics.math.function.DoubleFunction1D getOne()>();

        $r18 = staticinvoke <com.opengamma.util.tuple.Pairs: com.opengamma.util.tuple.Pair of(java.lang.Object,java.lang.Object)>($r16, $r17);

        r1[i7] = $r18;

        goto label6;

     label5:
        $i2 = i7 - 1;

        $r4 = r1[$i2];

        $r5 = virtualinvoke $r4.<com.opengamma.util.tuple.Pair: java.lang.Object getFirst()>();

        $r6 = (com.opengamma.analytics.math.function.DoubleFunction1D) $r5;

        $r7 = virtualinvoke r0.<com.opengamma.analytics.math.function.special.LegendrePolynomialFunction: com.opengamma.analytics.math.function.DoubleFunction1D getX()>();

        $r8 = virtualinvoke $r6.<com.opengamma.analytics.math.function.DoubleFunction1D: com.opengamma.analytics.math.function.DoubleFunction1D multiply(com.opengamma.analytics.math.function.DoubleFunction1D)>($r7);

        $i3 = 2 * i7;

        $i4 = $i3 - 1;

        $d0 = (double) $i4;

        $r9 = virtualinvoke $r8.<com.opengamma.analytics.math.function.DoubleFunction1D: com.opengamma.analytics.math.function.DoubleFunction1D multiply(double)>($d0);

        $i5 = i7 - 2;

        $r10 = r1[$i5];

        $r11 = virtualinvoke $r10.<com.opengamma.util.tuple.Pair: java.lang.Object getFirst()>();

        $r12 = (com.opengamma.analytics.math.function.DoubleFunction1D) $r11;

        $i6 = i7 - 1;

        $d1 = (double) $i6;

        $r13 = virtualinvoke $r12.<com.opengamma.analytics.math.function.DoubleFunction1D: com.opengamma.analytics.math.function.DoubleFunction1D multiply(double)>($d1);

        $r14 = virtualinvoke $r9.<com.opengamma.analytics.math.function.DoubleFunction1D: com.opengamma.analytics.math.function.DoubleFunction1D subtract(com.opengamma.analytics.math.function.DoubleFunction1D)>($r13);

        $d2 = (double) i7;

        $d3 = 1.0 / $d2;

        r2 = virtualinvoke $r14.<com.opengamma.analytics.math.function.DoubleFunction1D: com.opengamma.analytics.math.function.DoubleFunction1D multiply(double)>($d3);

        r3 = virtualinvoke r2.<com.opengamma.analytics.math.function.DoubleFunction1D: com.opengamma.analytics.math.function.DoubleFunction1D derivative()>();

        $r15 = staticinvoke <com.opengamma.util.tuple.Pairs: com.opengamma.util.tuple.Pair of(java.lang.Object,java.lang.Object)>(r2, r3);

        r1[i7] = $r15;

     label6:
        i7 = i7 + 1;

        goto label3;

     label7:
        return r1;
    }
}
