public abstract class com.opengamma.analytics.financial.model.volatility.surface.BlackVolatilitySurface extends com.opengamma.analytics.financial.model.volatility.surface.VolatilitySurface
{

    public void <init>(com.opengamma.analytics.math.surface.Surface)
    {
        com.opengamma.analytics.financial.model.volatility.surface.BlackVolatilitySurface r0;
        com.opengamma.analytics.math.surface.Surface r1;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.surface.BlackVolatilitySurface;

        r1 := @parameter0: com.opengamma.analytics.math.surface.Surface;

        specialinvoke r0.<com.opengamma.analytics.financial.model.volatility.surface.VolatilitySurface: void <init>(com.opengamma.analytics.math.surface.Surface)>(r1);

        return;
    }

    public double getVolatility(double, com.opengamma.analytics.financial.model.volatility.surface.StrikeType)
    {
        com.opengamma.analytics.financial.model.volatility.surface.BlackVolatilitySurface r0;
        double d0, $d1, $d2;
        com.opengamma.analytics.financial.model.volatility.surface.StrikeType r1;
        com.opengamma.util.tuple.DoublesPair r2;
        java.lang.Double $r3;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.surface.BlackVolatilitySurface;

        d0 := @parameter0: double;

        r1 := @parameter1: com.opengamma.analytics.financial.model.volatility.surface.StrikeType;

        $d1 = interfaceinvoke r1.<com.opengamma.analytics.financial.model.volatility.surface.StrikeType: double value()>();

        r2 = staticinvoke <com.opengamma.util.tuple.DoublesPair: com.opengamma.util.tuple.DoublesPair of(double,double)>(d0, $d1);

        $r3 = virtualinvoke r0.<com.opengamma.analytics.financial.model.volatility.surface.BlackVolatilitySurface: java.lang.Double getVolatility(com.opengamma.util.tuple.DoublesPair)>(r2);

        $d2 = virtualinvoke $r3.<java.lang.Double: double doubleValue()>();

        return $d2;
    }

    public abstract double getVolatility(double, double);

    public abstract double getAbsoluteStrike(double, com.opengamma.analytics.financial.model.volatility.surface.StrikeType);

    public abstract com.opengamma.analytics.financial.model.volatility.surface.BlackVolatilitySurface withShift(double, boolean);

    public abstract com.opengamma.analytics.financial.model.volatility.surface.BlackVolatilitySurface withSurface(com.opengamma.analytics.math.surface.Surface);

    public abstract java.lang.Object accept(com.opengamma.analytics.financial.model.volatility.surface.BlackVolatilitySurfaceVisitor, java.lang.Object);

    public abstract java.lang.Object accept(com.opengamma.analytics.financial.model.volatility.surface.BlackVolatilitySurfaceVisitor);

    public com.opengamma.analytics.financial.model.volatility.surface.VolatilitySurface withParallelShift(double)
    {
        com.opengamma.analytics.financial.model.volatility.surface.BlackVolatilitySurface r0, $r2;
        double d0;
        com.opengamma.analytics.math.surface.Surface $r1;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.surface.BlackVolatilitySurface;

        d0 := @parameter0: double;

        $r1 = virtualinvoke r0.<com.opengamma.analytics.financial.model.volatility.surface.BlackVolatilitySurface: com.opengamma.analytics.math.surface.Surface getParallelShiftedSurface(double)>(d0);

        $r2 = virtualinvoke r0.<com.opengamma.analytics.financial.model.volatility.surface.BlackVolatilitySurface: com.opengamma.analytics.financial.model.volatility.surface.BlackVolatilitySurface withSurface(com.opengamma.analytics.math.surface.Surface)>($r1);

        return $r2;
    }

    public com.opengamma.analytics.financial.model.volatility.surface.VolatilitySurface withSingleAdditiveShift(double, double, double)
    {
        com.opengamma.analytics.financial.model.volatility.surface.BlackVolatilitySurface r0, $r2;
        double d0, d1, d2;
        com.opengamma.analytics.math.surface.Surface $r1;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.surface.BlackVolatilitySurface;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        d2 := @parameter2: double;

        $r1 = virtualinvoke r0.<com.opengamma.analytics.financial.model.volatility.surface.BlackVolatilitySurface: com.opengamma.analytics.math.surface.Surface getSingleAdditiveShiftSurface(double,double,double)>(d0, d1, d2);

        $r2 = virtualinvoke r0.<com.opengamma.analytics.financial.model.volatility.surface.BlackVolatilitySurface: com.opengamma.analytics.financial.model.volatility.surface.BlackVolatilitySurface withSurface(com.opengamma.analytics.math.surface.Surface)>($r1);

        return $r2;
    }

    public com.opengamma.analytics.financial.model.volatility.surface.VolatilitySurface withMultipleAdditiveShifts(double[], double[], double[])
    {
        com.opengamma.analytics.financial.model.volatility.surface.BlackVolatilitySurface r0, $r5;
        double[] r1, r2, r3;
        com.opengamma.analytics.math.surface.Surface $r4;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.surface.BlackVolatilitySurface;

        r1 := @parameter0: double[];

        r2 := @parameter1: double[];

        r3 := @parameter2: double[];

        $r4 = virtualinvoke r0.<com.opengamma.analytics.financial.model.volatility.surface.BlackVolatilitySurface: com.opengamma.analytics.math.surface.Surface getMultipleAdditiveShiftsSurface(double[],double[],double[])>(r1, r2, r3);

        $r5 = virtualinvoke r0.<com.opengamma.analytics.financial.model.volatility.surface.BlackVolatilitySurface: com.opengamma.analytics.financial.model.volatility.surface.BlackVolatilitySurface withSurface(com.opengamma.analytics.math.surface.Surface)>($r4);

        return $r5;
    }

    public com.opengamma.analytics.financial.model.volatility.surface.VolatilitySurface withConstantMultiplicativeShift(double)
    {
        com.opengamma.analytics.financial.model.volatility.surface.BlackVolatilitySurface r0, $r2;
        double d0;
        com.opengamma.analytics.math.surface.Surface $r1;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.surface.BlackVolatilitySurface;

        d0 := @parameter0: double;

        $r1 = virtualinvoke r0.<com.opengamma.analytics.financial.model.volatility.surface.BlackVolatilitySurface: com.opengamma.analytics.math.surface.Surface getConstantMultiplicativeShiftSurface(double)>(d0);

        $r2 = virtualinvoke r0.<com.opengamma.analytics.financial.model.volatility.surface.BlackVolatilitySurface: com.opengamma.analytics.financial.model.volatility.surface.BlackVolatilitySurface withSurface(com.opengamma.analytics.math.surface.Surface)>($r1);

        return $r2;
    }

    public com.opengamma.analytics.financial.model.volatility.surface.VolatilitySurface withSingleMultiplicativeShift(double, double, double)
    {
        com.opengamma.analytics.financial.model.volatility.surface.BlackVolatilitySurface r0, $r2;
        double d0, d1, d2;
        com.opengamma.analytics.math.surface.Surface $r1;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.surface.BlackVolatilitySurface;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        d2 := @parameter2: double;

        $r1 = virtualinvoke r0.<com.opengamma.analytics.financial.model.volatility.surface.BlackVolatilitySurface: com.opengamma.analytics.math.surface.Surface getSingleMultiplicativeShiftSurface(double,double,double)>(d0, d1, d2);

        $r2 = virtualinvoke r0.<com.opengamma.analytics.financial.model.volatility.surface.BlackVolatilitySurface: com.opengamma.analytics.financial.model.volatility.surface.BlackVolatilitySurface withSurface(com.opengamma.analytics.math.surface.Surface)>($r1);

        return $r2;
    }

    public com.opengamma.analytics.financial.model.volatility.surface.VolatilitySurface withMultipleMultiplicativeShifts(double[], double[], double[])
    {
        com.opengamma.analytics.financial.model.volatility.surface.BlackVolatilitySurface r0, $r5;
        double[] r1, r2, r3;
        com.opengamma.analytics.math.surface.Surface $r4;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.surface.BlackVolatilitySurface;

        r1 := @parameter0: double[];

        r2 := @parameter1: double[];

        r3 := @parameter2: double[];

        $r4 = virtualinvoke r0.<com.opengamma.analytics.financial.model.volatility.surface.BlackVolatilitySurface: com.opengamma.analytics.math.surface.Surface getMultipleMultiplicativeShiftsSurface(double[],double[],double[])>(r1, r2, r3);

        $r5 = virtualinvoke r0.<com.opengamma.analytics.financial.model.volatility.surface.BlackVolatilitySurface: com.opengamma.analytics.financial.model.volatility.surface.BlackVolatilitySurface withSurface(com.opengamma.analytics.math.surface.Surface)>($r4);

        return $r5;
    }
}
