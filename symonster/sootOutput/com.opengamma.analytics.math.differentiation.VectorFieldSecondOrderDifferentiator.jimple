public class com.opengamma.analytics.math.differentiation.VectorFieldSecondOrderDifferentiator extends java.lang.Object implements com.opengamma.analytics.math.differentiation.Differentiator
{
    private static final double DEFAULT_EPS;
    private final double _eps;
    private final double _twoEps;
    private final double _epsSqr;
    private final com.opengamma.analytics.math.differentiation.VectorFieldFirstOrderDifferentiator _vectorFieldDiff;
    private final com.opengamma.analytics.math.differentiation.MatrixFieldFirstOrderDifferentiator _maxtrixFieldDiff;

    public void <init>()
    {
        com.opengamma.analytics.math.differentiation.VectorFieldSecondOrderDifferentiator r0;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6;
        com.opengamma.analytics.math.differentiation.VectorFieldFirstOrderDifferentiator $r1;
        com.opengamma.analytics.math.differentiation.MatrixFieldFirstOrderDifferentiator $r2;

        r0 := @this: com.opengamma.analytics.math.differentiation.VectorFieldSecondOrderDifferentiator;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.opengamma.analytics.math.differentiation.VectorFieldSecondOrderDifferentiator: double _eps> = 1.0E-4;

        $d0 = r0.<com.opengamma.analytics.math.differentiation.VectorFieldSecondOrderDifferentiator: double _eps>;

        $d1 = 2.0 * $d0;

        r0.<com.opengamma.analytics.math.differentiation.VectorFieldSecondOrderDifferentiator: double _twoEps> = $d1;

        $d3 = r0.<com.opengamma.analytics.math.differentiation.VectorFieldSecondOrderDifferentiator: double _eps>;

        $d2 = r0.<com.opengamma.analytics.math.differentiation.VectorFieldSecondOrderDifferentiator: double _eps>;

        $d4 = $d3 * $d2;

        r0.<com.opengamma.analytics.math.differentiation.VectorFieldSecondOrderDifferentiator: double _epsSqr> = $d4;

        $r1 = new com.opengamma.analytics.math.differentiation.VectorFieldFirstOrderDifferentiator;

        $d5 = r0.<com.opengamma.analytics.math.differentiation.VectorFieldSecondOrderDifferentiator: double _eps>;

        specialinvoke $r1.<com.opengamma.analytics.math.differentiation.VectorFieldFirstOrderDifferentiator: void <init>(double)>($d5);

        r0.<com.opengamma.analytics.math.differentiation.VectorFieldSecondOrderDifferentiator: com.opengamma.analytics.math.differentiation.VectorFieldFirstOrderDifferentiator _vectorFieldDiff> = $r1;

        $r2 = new com.opengamma.analytics.math.differentiation.MatrixFieldFirstOrderDifferentiator;

        $d6 = r0.<com.opengamma.analytics.math.differentiation.VectorFieldSecondOrderDifferentiator: double _eps>;

        specialinvoke $r2.<com.opengamma.analytics.math.differentiation.MatrixFieldFirstOrderDifferentiator: void <init>(double)>($d6);

        r0.<com.opengamma.analytics.math.differentiation.VectorFieldSecondOrderDifferentiator: com.opengamma.analytics.math.differentiation.MatrixFieldFirstOrderDifferentiator _maxtrixFieldDiff> = $r2;

        return;
    }

    public com.opengamma.analytics.math.function.Function1D differentiate(com.opengamma.analytics.math.function.Function1D)
    {
        com.opengamma.analytics.math.differentiation.VectorFieldSecondOrderDifferentiator r0;
        com.opengamma.analytics.math.function.Function1D r1, r2, r3;
        com.opengamma.analytics.math.differentiation.VectorFieldFirstOrderDifferentiator $r4;
        com.opengamma.analytics.math.differentiation.MatrixFieldFirstOrderDifferentiator $r5;
        com.opengamma.analytics.math.differentiation.VectorFieldSecondOrderDifferentiator$1 $r6;

        r0 := @this: com.opengamma.analytics.math.differentiation.VectorFieldSecondOrderDifferentiator;

        r1 := @parameter0: com.opengamma.analytics.math.function.Function1D;

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object)>(r1);

        $r4 = r0.<com.opengamma.analytics.math.differentiation.VectorFieldSecondOrderDifferentiator: com.opengamma.analytics.math.differentiation.VectorFieldFirstOrderDifferentiator _vectorFieldDiff>;

        r2 = virtualinvoke $r4.<com.opengamma.analytics.math.differentiation.VectorFieldFirstOrderDifferentiator: com.opengamma.analytics.math.function.Function1D differentiate(com.opengamma.analytics.math.function.Function1D)>(r1);

        $r5 = r0.<com.opengamma.analytics.math.differentiation.VectorFieldSecondOrderDifferentiator: com.opengamma.analytics.math.differentiation.MatrixFieldFirstOrderDifferentiator _maxtrixFieldDiff>;

        r3 = virtualinvoke $r5.<com.opengamma.analytics.math.differentiation.MatrixFieldFirstOrderDifferentiator: com.opengamma.analytics.math.function.Function1D differentiate(com.opengamma.analytics.math.function.Function1D)>(r2);

        $r6 = new com.opengamma.analytics.math.differentiation.VectorFieldSecondOrderDifferentiator$1;

        specialinvoke $r6.<com.opengamma.analytics.math.differentiation.VectorFieldSecondOrderDifferentiator$1: void <init>(com.opengamma.analytics.math.differentiation.VectorFieldSecondOrderDifferentiator,com.opengamma.analytics.math.function.Function1D)>(r0, r3);

        return $r6;
    }

    public com.opengamma.analytics.math.function.Function1D differentiate(com.opengamma.analytics.math.function.Function1D, com.opengamma.analytics.math.function.Function1D)
    {
        com.opengamma.analytics.math.differentiation.VectorFieldSecondOrderDifferentiator r0;
        com.opengamma.analytics.math.function.Function1D r1, r2, r3, r4;
        com.opengamma.analytics.math.differentiation.VectorFieldFirstOrderDifferentiator $r5;
        com.opengamma.analytics.math.differentiation.MatrixFieldFirstOrderDifferentiator $r6;
        com.opengamma.analytics.math.differentiation.VectorFieldSecondOrderDifferentiator$2 $r7;

        r0 := @this: com.opengamma.analytics.math.differentiation.VectorFieldSecondOrderDifferentiator;

        r1 := @parameter0: com.opengamma.analytics.math.function.Function1D;

        r2 := @parameter1: com.opengamma.analytics.math.function.Function1D;

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object)>(r1);

        $r5 = r0.<com.opengamma.analytics.math.differentiation.VectorFieldSecondOrderDifferentiator: com.opengamma.analytics.math.differentiation.VectorFieldFirstOrderDifferentiator _vectorFieldDiff>;

        r3 = virtualinvoke $r5.<com.opengamma.analytics.math.differentiation.VectorFieldFirstOrderDifferentiator: com.opengamma.analytics.math.function.Function1D differentiate(com.opengamma.analytics.math.function.Function1D,com.opengamma.analytics.math.function.Function1D)>(r1, r2);

        $r6 = r0.<com.opengamma.analytics.math.differentiation.VectorFieldSecondOrderDifferentiator: com.opengamma.analytics.math.differentiation.MatrixFieldFirstOrderDifferentiator _maxtrixFieldDiff>;

        r4 = virtualinvoke $r6.<com.opengamma.analytics.math.differentiation.MatrixFieldFirstOrderDifferentiator: com.opengamma.analytics.math.function.Function1D differentiate(com.opengamma.analytics.math.function.Function1D,com.opengamma.analytics.math.function.Function1D)>(r3, r2);

        $r7 = new com.opengamma.analytics.math.differentiation.VectorFieldSecondOrderDifferentiator$2;

        specialinvoke $r7.<com.opengamma.analytics.math.differentiation.VectorFieldSecondOrderDifferentiator$2: void <init>(com.opengamma.analytics.math.differentiation.VectorFieldSecondOrderDifferentiator,com.opengamma.analytics.math.function.Function1D)>(r0, r4);

        return $r7;
    }

    private com.opengamma.analytics.math.matrix.DoubleMatrix2D[] reshapeTensor(com.opengamma.analytics.math.matrix.DoubleMatrix2D[])
    {
        com.opengamma.analytics.math.differentiation.VectorFieldSecondOrderDifferentiator r0;
        com.opengamma.analytics.math.matrix.DoubleMatrix2D[] r1, r2;
        int i0, i1, $i2, $i3, i4, i5, i6, i7, i8;
        double[][] r3;
        com.opengamma.analytics.math.matrix.DoubleMatrix2D $r4, $r5, $r7, $r10, r16;
        java.lang.Object[] $r6;
        java.lang.Integer $r8, $r9;
        double[] $r11, $r12, $r14;
        double $d0, $d1;
        int[] $r13;
        java.lang.Double $r15;
        boolean $z0;

        r0 := @this: com.opengamma.analytics.math.differentiation.VectorFieldSecondOrderDifferentiator;

        r1 := @parameter0: com.opengamma.analytics.math.matrix.DoubleMatrix2D[];

        i0 = lengthof r1;

        $r4 = r1[0];

        i1 = virtualinvoke $r4.<com.opengamma.analytics.math.matrix.DoubleMatrix2D: int getNumberOfRows()>();

        $r5 = r1[0];

        $i2 = virtualinvoke $r5.<com.opengamma.analytics.math.matrix.DoubleMatrix2D: int getNumberOfColumns()>();

        if $i2 != i0 goto label01;

        $z0 = 1;

        goto label02;

     label01:
        $z0 = 0;

     label02:
        $r6 = newarray (java.lang.Object)[2];

        $r7 = r1[0];

        $i3 = virtualinvoke $r7.<com.opengamma.analytics.math.matrix.DoubleMatrix2D: int getNumberOfColumns()>();

        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3);

        $r6[0] = $r8;

        $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r6[1] = $r9;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String,java.lang.Object[])>($z0, "tenor wrong size. Seond index is {}, should be {}", $r6);

        r2 = newarray (com.opengamma.analytics.math.matrix.DoubleMatrix2D)[i1];

        i4 = 0;

     label03:
        if i4 >= i1 goto label12;

        r3 = newmultiarray (double)[i0][i0];

        i5 = 0;

     label04:
        if i5 >= i0 goto label07;

        r16 = r1[i5];

        i6 = i5;

     label05:
        if i6 >= i0 goto label06;

        $r14 = r3[i5];

        $r13 = newarray (int)[2];

        $r13[0] = i4;

        $r13[1] = i6;

        $r15 = virtualinvoke r16.<com.opengamma.analytics.math.matrix.DoubleMatrix2D: java.lang.Double getEntry(int[])>($r13);

        $d1 = virtualinvoke $r15.<java.lang.Double: double doubleValue()>();

        $r14[i6] = $d1;

        i6 = i6 + 1;

        goto label05;

     label06:
        i5 = i5 + 1;

        goto label04;

     label07:
        i7 = 0;

     label08:
        if i7 >= i0 goto label11;

        i8 = 0;

     label09:
        if i8 >= i7 goto label10;

        $r12 = r3[i7];

        $r11 = r3[i8];

        $d0 = $r11[i7];

        $r12[i8] = $d0;

        i8 = i8 + 1;

        goto label09;

     label10:
        i7 = i7 + 1;

        goto label08;

     label11:
        $r10 = new com.opengamma.analytics.math.matrix.DoubleMatrix2D;

        specialinvoke $r10.<com.opengamma.analytics.math.matrix.DoubleMatrix2D: void <init>(double[][])>(r3);

        r2[i4] = $r10;

        i4 = i4 + 1;

        goto label03;

     label12:
        return r2;
    }

    public com.opengamma.analytics.math.function.Function1D differentiateFull(com.opengamma.analytics.math.function.Function1D)
    {
        com.opengamma.analytics.math.differentiation.VectorFieldSecondOrderDifferentiator r0;
        com.opengamma.analytics.math.function.Function1D r1;
        com.opengamma.analytics.math.differentiation.VectorFieldSecondOrderDifferentiator$3 $r2;

        r0 := @this: com.opengamma.analytics.math.differentiation.VectorFieldSecondOrderDifferentiator;

        r1 := @parameter0: com.opengamma.analytics.math.function.Function1D;

        $r2 = new com.opengamma.analytics.math.differentiation.VectorFieldSecondOrderDifferentiator$3;

        specialinvoke $r2.<com.opengamma.analytics.math.differentiation.VectorFieldSecondOrderDifferentiator$3: void <init>(com.opengamma.analytics.math.differentiation.VectorFieldSecondOrderDifferentiator,com.opengamma.analytics.math.function.Function1D)>(r0, r1);

        return $r2;
    }

    public com.opengamma.analytics.math.function.Function1D differentiateNoCross(com.opengamma.analytics.math.function.Function1D)
    {
        com.opengamma.analytics.math.differentiation.VectorFieldSecondOrderDifferentiator r0;
        com.opengamma.analytics.math.function.Function1D r1;
        com.opengamma.analytics.math.differentiation.VectorFieldSecondOrderDifferentiator$4 $r2;

        r0 := @this: com.opengamma.analytics.math.differentiation.VectorFieldSecondOrderDifferentiator;

        r1 := @parameter0: com.opengamma.analytics.math.function.Function1D;

        $r2 = new com.opengamma.analytics.math.differentiation.VectorFieldSecondOrderDifferentiator$4;

        specialinvoke $r2.<com.opengamma.analytics.math.differentiation.VectorFieldSecondOrderDifferentiator$4: void <init>(com.opengamma.analytics.math.differentiation.VectorFieldSecondOrderDifferentiator,com.opengamma.analytics.math.function.Function1D)>(r0, r1);

        return $r2;
    }

    static com.opengamma.analytics.math.matrix.DoubleMatrix2D[] access$000(com.opengamma.analytics.math.differentiation.VectorFieldSecondOrderDifferentiator, com.opengamma.analytics.math.matrix.DoubleMatrix2D[])
    {
        com.opengamma.analytics.math.differentiation.VectorFieldSecondOrderDifferentiator r0;
        com.opengamma.analytics.math.matrix.DoubleMatrix2D[] r1, $r2;

        r0 := @parameter0: com.opengamma.analytics.math.differentiation.VectorFieldSecondOrderDifferentiator;

        r1 := @parameter1: com.opengamma.analytics.math.matrix.DoubleMatrix2D[];

        $r2 = specialinvoke r0.<com.opengamma.analytics.math.differentiation.VectorFieldSecondOrderDifferentiator: com.opengamma.analytics.math.matrix.DoubleMatrix2D[] reshapeTensor(com.opengamma.analytics.math.matrix.DoubleMatrix2D[])>(r1);

        return $r2;
    }

    static double access$100(com.opengamma.analytics.math.differentiation.VectorFieldSecondOrderDifferentiator)
    {
        com.opengamma.analytics.math.differentiation.VectorFieldSecondOrderDifferentiator r0;
        double $d0;

        r0 := @parameter0: com.opengamma.analytics.math.differentiation.VectorFieldSecondOrderDifferentiator;

        $d0 = r0.<com.opengamma.analytics.math.differentiation.VectorFieldSecondOrderDifferentiator: double _eps>;

        return $d0;
    }

    static double access$200(com.opengamma.analytics.math.differentiation.VectorFieldSecondOrderDifferentiator)
    {
        com.opengamma.analytics.math.differentiation.VectorFieldSecondOrderDifferentiator r0;
        double $d0;

        r0 := @parameter0: com.opengamma.analytics.math.differentiation.VectorFieldSecondOrderDifferentiator;

        $d0 = r0.<com.opengamma.analytics.math.differentiation.VectorFieldSecondOrderDifferentiator: double _twoEps>;

        return $d0;
    }

    static double access$300(com.opengamma.analytics.math.differentiation.VectorFieldSecondOrderDifferentiator)
    {
        com.opengamma.analytics.math.differentiation.VectorFieldSecondOrderDifferentiator r0;
        double $d0;

        r0 := @parameter0: com.opengamma.analytics.math.differentiation.VectorFieldSecondOrderDifferentiator;

        $d0 = r0.<com.opengamma.analytics.math.differentiation.VectorFieldSecondOrderDifferentiator: double _epsSqr>;

        return $d0;
    }

    public static void <clinit>()
    {
        <com.opengamma.analytics.math.differentiation.VectorFieldSecondOrderDifferentiator: double DEFAULT_EPS> = 1.0E-4;

        return;
    }
}
