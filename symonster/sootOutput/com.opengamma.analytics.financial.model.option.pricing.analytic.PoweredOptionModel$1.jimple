class com.opengamma.analytics.financial.model.option.pricing.analytic.PoweredOptionModel$1 extends com.opengamma.analytics.math.function.Function1D
{
    final com.opengamma.analytics.financial.model.option.definition.PoweredOptionDefinition val$definition;
    final com.opengamma.analytics.financial.model.option.pricing.analytic.PoweredOptionModel this$0;

    void <init>(com.opengamma.analytics.financial.model.option.pricing.analytic.PoweredOptionModel, com.opengamma.analytics.financial.model.option.definition.PoweredOptionDefinition)
    {
        com.opengamma.analytics.financial.model.option.pricing.analytic.PoweredOptionModel$1 r0;
        com.opengamma.analytics.financial.model.option.pricing.analytic.PoweredOptionModel r1;
        com.opengamma.analytics.financial.model.option.definition.PoweredOptionDefinition r2;

        r0 := @this: com.opengamma.analytics.financial.model.option.pricing.analytic.PoweredOptionModel$1;

        r1 := @parameter0: com.opengamma.analytics.financial.model.option.pricing.analytic.PoweredOptionModel;

        r2 := @parameter1: com.opengamma.analytics.financial.model.option.definition.PoweredOptionDefinition;

        r0.<com.opengamma.analytics.financial.model.option.pricing.analytic.PoweredOptionModel$1: com.opengamma.analytics.financial.model.option.pricing.analytic.PoweredOptionModel this$0> = r1;

        r0.<com.opengamma.analytics.financial.model.option.pricing.analytic.PoweredOptionModel$1: com.opengamma.analytics.financial.model.option.definition.PoweredOptionDefinition val$definition> = r2;

        specialinvoke r0.<com.opengamma.analytics.math.function.Function1D: void <init>()>();

        return;
    }

    public java.lang.Double evaluate(com.opengamma.analytics.financial.model.option.definition.StandardOptionDataBundle)
    {
        com.opengamma.analytics.financial.model.option.pricing.analytic.PoweredOptionModel$1 r0;
        com.opengamma.analytics.financial.model.option.definition.StandardOptionDataBundle r1;
        double d0, d1, d2, d3, d4, d5, d6, d7, d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21, $d22, $d23, $d24, $d25, $d26, $d27, $d28, $d29, $d30, $d31, $d32, $d33, $d34, $d35, $d36, $d37, $d38, $d39, $d40, $d41, $d42, $d43, $d44, $d45, $d46, $d47, $d48, $d49, $d50, $d51, $d52, $d53, d54;
        long l0, l2, $l3, $l5, $l6, $l7, $l9, $l12;
        byte b1, $b4, $b8, $b10, $b13;
        com.opengamma.analytics.financial.model.option.definition.PoweredOptionDefinition $r2, $r3, $r4, $r6, $r8, $r9;
        java.lang.Double $r5, $r11, $r15;
        org.threeten.bp.ZonedDateTime $r7;
        java.lang.Boolean $r10;
        boolean $z0;
        com.opengamma.analytics.financial.model.option.pricing.analytic.PoweredOptionModel $r12, $r14;
        com.opengamma.analytics.math.statistics.distribution.ProbabilityDistribution $r13;
        com.opengamma.analytics.financial.model.option.pricing.OptionPricingException $r16;
        int i11;

        r0 := @this: com.opengamma.analytics.financial.model.option.pricing.analytic.PoweredOptionModel$1;

        r1 := @parameter0: com.opengamma.analytics.financial.model.option.definition.StandardOptionDataBundle;

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object)>(r1);

        $r2 = r0.<com.opengamma.analytics.financial.model.option.pricing.analytic.PoweredOptionModel$1: com.opengamma.analytics.financial.model.option.definition.PoweredOptionDefinition val$definition>;

        $d9 = virtualinvoke $r2.<com.opengamma.analytics.financial.model.option.definition.PoweredOptionDefinition: double getPower()>();

        $r3 = r0.<com.opengamma.analytics.financial.model.option.pricing.analytic.PoweredOptionModel$1: com.opengamma.analytics.financial.model.option.definition.PoweredOptionDefinition val$definition>;

        $d10 = virtualinvoke $r3.<com.opengamma.analytics.financial.model.option.definition.PoweredOptionDefinition: double getPower()>();

        $l3 = staticinvoke <java.lang.Math: long round(double)>($d10);

        $d11 = (double) $l3;

        $d12 = $d9 - $d11;

        $d13 = staticinvoke <java.lang.Math: double abs(double)>($d12);

        $b4 = $d13 cmpl 1.0E-15;

        if $b4 <= 0 goto label1;

        $r16 = new com.opengamma.analytics.financial.model.option.pricing.OptionPricingException;

        specialinvoke $r16.<com.opengamma.analytics.financial.model.option.pricing.OptionPricingException: void <init>(java.lang.String)>("Analytic powered option pricing model can only be used when then power is an integer");

        throw $r16;

     label1:
        d0 = virtualinvoke r1.<com.opengamma.analytics.financial.model.option.definition.StandardOptionDataBundle: double getSpot()>();

        $r4 = r0.<com.opengamma.analytics.financial.model.option.pricing.analytic.PoweredOptionModel$1: com.opengamma.analytics.financial.model.option.definition.PoweredOptionDefinition val$definition>;

        $r5 = virtualinvoke $r4.<com.opengamma.analytics.financial.model.option.definition.PoweredOptionDefinition: java.lang.Double getStrike()>();

        d1 = virtualinvoke $r5.<java.lang.Double: double doubleValue()>();

        $r6 = r0.<com.opengamma.analytics.financial.model.option.pricing.analytic.PoweredOptionModel$1: com.opengamma.analytics.financial.model.option.definition.PoweredOptionDefinition val$definition>;

        $r7 = virtualinvoke r1.<com.opengamma.analytics.financial.model.option.definition.StandardOptionDataBundle: org.threeten.bp.ZonedDateTime getDate()>();

        d2 = virtualinvoke $r6.<com.opengamma.analytics.financial.model.option.definition.PoweredOptionDefinition: double getTimeToExpiry(org.threeten.bp.ZonedDateTime)>($r7);

        d3 = virtualinvoke r1.<com.opengamma.analytics.financial.model.option.definition.StandardOptionDataBundle: double getCostOfCarry()>();

        d4 = virtualinvoke r1.<com.opengamma.analytics.financial.model.option.definition.StandardOptionDataBundle: double getInterestRate(double)>(d2);

        d5 = virtualinvoke r1.<com.opengamma.analytics.financial.model.option.definition.StandardOptionDataBundle: double getVolatility(double,double)>(d2, d1);

        $r8 = r0.<com.opengamma.analytics.financial.model.option.pricing.analytic.PoweredOptionModel$1: com.opengamma.analytics.financial.model.option.definition.PoweredOptionDefinition val$definition>;

        $d14 = virtualinvoke $r8.<com.opengamma.analytics.financial.model.option.definition.PoweredOptionDefinition: double getPower()>();

        l0 = staticinvoke <java.lang.Math: long round(double)>($d14);

        $r9 = r0.<com.opengamma.analytics.financial.model.option.pricing.analytic.PoweredOptionModel$1: com.opengamma.analytics.financial.model.option.definition.PoweredOptionDefinition val$definition>;

        $r10 = virtualinvoke $r9.<com.opengamma.analytics.financial.model.option.definition.PoweredOptionDefinition: java.lang.Boolean isCall()>();

        $z0 = virtualinvoke $r10.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 == 0 goto label2;

        $b10 = 1;

        goto label3;

     label2:
        $b10 = -1;

     label3:
        b1 = $b10;

        d6 = d5 * d5;

        $d15 = staticinvoke <java.lang.Math: double sqrt(double)>(d2);

        d7 = d5 * $d15;

        $d16 = d0 / d1;

        $d17 = staticinvoke <java.lang.Math: double log(double)>($d16);

        $d18 = 0.5 * d5;

        $d19 = $d18 * d5;

        $d20 = d3 - $d19;

        $d21 = d2 * $d20;

        $d22 = $d17 + $d21;

        d8 = $d22 / d7;

        d54 = 0.0;

        i11 = 0;

     label4:
        $l12 = (long) i11;

        $b13 = $l12 cmp l0;

        if $b13 > 0 goto label5;

        $l5 = (long) i11;

        l2 = l0 - $l5;

        $r12 = r0.<com.opengamma.analytics.financial.model.option.pricing.analytic.PoweredOptionModel$1: com.opengamma.analytics.financial.model.option.pricing.analytic.PoweredOptionModel this$0>;

        $l6 = (long) i11;

        $l7 = virtualinvoke $r12.<com.opengamma.analytics.financial.model.option.pricing.analytic.PoweredOptionModel: long getCombinatorial(long,long)>(l0, $l6);

        $d26 = (double) $l7;

        $d23 = (double) b1;

        $d25 = $d23 * d0;

        $d24 = (double) l2;

        $d27 = staticinvoke <java.lang.Math: double pow(double,double)>($d25, $d24);

        $d31 = $d26 * $d27;

        $b8 = neg b1;

        $d28 = (double) $b8;

        $d30 = $d28 * d1;

        $d29 = (double) i11;

        $d32 = staticinvoke <java.lang.Math: double pow(double,double)>($d30, $d29);

        $d45 = $d31 * $d32;

        $l9 = l2 - 1L;

        $d37 = (double) $l9;

        $d33 = (double) l2;

        $d34 = $d33 * d6;

        $d35 = $d34 / 2.0;

        $d36 = d4 + $d35;

        $d38 = $d37 * $d36;

        $d43 = $d38 * d2;

        $d40 = (double) l2;

        $d39 = d4 - d3;

        $d41 = $d40 * $d39;

        $d42 = $d41 * d2;

        $d44 = $d43 - $d42;

        $d46 = staticinvoke <java.lang.Math: double exp(double)>($d44);

        $d47 = $d45 * $d46;

        $r13 = staticinvoke <com.opengamma.analytics.financial.model.option.pricing.analytic.PoweredOptionModel: com.opengamma.analytics.math.statistics.distribution.ProbabilityDistribution access$000()>();

        $d49 = (double) b1;

        $r14 = r0.<com.opengamma.analytics.financial.model.option.pricing.analytic.PoweredOptionModel$1: com.opengamma.analytics.financial.model.option.pricing.analytic.PoweredOptionModel this$0>;

        $d48 = (double) l2;

        $d50 = virtualinvoke $r14.<com.opengamma.analytics.financial.model.option.pricing.analytic.PoweredOptionModel: double getD(double,double,double,double,double)>(d8, $d48, d7, d6, d2);

        $d51 = $d49 * $d50;

        $r15 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d51);

        $d52 = interfaceinvoke $r13.<com.opengamma.analytics.math.statistics.distribution.ProbabilityDistribution: double getCDF(java.lang.Object)>($r15);

        $d53 = $d47 * $d52;

        d54 = d54 + $d53;

        i11 = i11 + 1;

        goto label4;

     label5:
        $r11 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d54);

        return $r11;
    }

    public volatile java.lang.Object evaluate(java.lang.Object)
    {
        com.opengamma.analytics.financial.model.option.pricing.analytic.PoweredOptionModel$1 r0;
        java.lang.Object r1;
        com.opengamma.analytics.financial.model.option.definition.StandardOptionDataBundle $r2;
        java.lang.Double $r3;

        r0 := @this: com.opengamma.analytics.financial.model.option.pricing.analytic.PoweredOptionModel$1;

        r1 := @parameter0: java.lang.Object;

        $r2 = (com.opengamma.analytics.financial.model.option.definition.StandardOptionDataBundle) r1;

        $r3 = virtualinvoke r0.<com.opengamma.analytics.financial.model.option.pricing.analytic.PoweredOptionModel$1: java.lang.Double evaluate(com.opengamma.analytics.financial.model.option.definition.StandardOptionDataBundle)>($r2);

        return $r3;
    }
}
