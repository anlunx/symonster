public class org.apache.commons.math3.analysis.function.Constant extends java.lang.Object implements org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiableFunction, org.apache.commons.math3.analysis.DifferentiableUnivariateFunction
{
    private final double c;

    public void <init>(double)
    {
        org.apache.commons.math3.analysis.function.Constant r0;
        double d0;

        r0 := @this: org.apache.commons.math3.analysis.function.Constant;

        d0 := @parameter0: double;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.commons.math3.analysis.function.Constant: double c> = d0;

        return;
    }

    public double value(double)
    {
        org.apache.commons.math3.analysis.function.Constant r0;
        double d0, $d1;

        r0 := @this: org.apache.commons.math3.analysis.function.Constant;

        d0 := @parameter0: double;

        $d1 = r0.<org.apache.commons.math3.analysis.function.Constant: double c>;

        return $d1;
    }

    public org.apache.commons.math3.analysis.DifferentiableUnivariateFunction derivative()
    {
        org.apache.commons.math3.analysis.function.Constant r0, $r1;

        r0 := @this: org.apache.commons.math3.analysis.function.Constant;

        $r1 = new org.apache.commons.math3.analysis.function.Constant;

        specialinvoke $r1.<org.apache.commons.math3.analysis.function.Constant: void <init>(double)>(0.0);

        return $r1;
    }

    public org.apache.commons.math3.analysis.differentiation.DerivativeStructure value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure)
    {
        org.apache.commons.math3.analysis.function.Constant r0;
        org.apache.commons.math3.analysis.differentiation.DerivativeStructure r1, $r2;
        int $i0, $i1;
        double $d0;

        r0 := @this: org.apache.commons.math3.analysis.function.Constant;

        r1 := @parameter0: org.apache.commons.math3.analysis.differentiation.DerivativeStructure;

        $r2 = new org.apache.commons.math3.analysis.differentiation.DerivativeStructure;

        $i0 = virtualinvoke r1.<org.apache.commons.math3.analysis.differentiation.DerivativeStructure: int getFreeParameters()>();

        $i1 = virtualinvoke r1.<org.apache.commons.math3.analysis.differentiation.DerivativeStructure: int getOrder()>();

        $d0 = r0.<org.apache.commons.math3.analysis.function.Constant: double c>;

        specialinvoke $r2.<org.apache.commons.math3.analysis.differentiation.DerivativeStructure: void <init>(int,int,double)>($i0, $i1, $d0);

        return $r2;
    }

    public volatile org.apache.commons.math3.analysis.UnivariateFunction derivative()
    {
        org.apache.commons.math3.analysis.function.Constant r0;
        org.apache.commons.math3.analysis.DifferentiableUnivariateFunction $r1;

        r0 := @this: org.apache.commons.math3.analysis.function.Constant;

        $r1 = virtualinvoke r0.<org.apache.commons.math3.analysis.function.Constant: org.apache.commons.math3.analysis.DifferentiableUnivariateFunction derivative()>();

        return $r1;
    }
}
