public class com.opengamma.analytics.math.statistics.distribution.StudentTDistribution extends java.lang.Object implements com.opengamma.analytics.math.statistics.distribution.ProbabilityDistribution
{
    private final double _degFreedom;
    private final cern.jet.random.StudentT _dist;
    private final com.opengamma.analytics.math.function.Function1D _beta;

    public void <init>(double)
    {
        com.opengamma.analytics.math.statistics.distribution.StudentTDistribution r0;
        double d0;
        cern.jet.random.engine.MersenneTwister64 $r1;
        java.util.Date $r2;

        r0 := @this: com.opengamma.analytics.math.statistics.distribution.StudentTDistribution;

        d0 := @parameter0: double;

        $r1 = new cern.jet.random.engine.MersenneTwister64;

        $r2 = new java.util.Date;

        specialinvoke $r2.<java.util.Date: void <init>()>();

        specialinvoke $r1.<cern.jet.random.engine.MersenneTwister64: void <init>(java.util.Date)>($r2);

        specialinvoke r0.<com.opengamma.analytics.math.statistics.distribution.StudentTDistribution: void <init>(double,cern.jet.random.engine.RandomEngine)>(d0, $r1);

        return;
    }

    public void <init>(double, cern.jet.random.engine.RandomEngine)
    {
        com.opengamma.analytics.math.statistics.distribution.StudentTDistribution r0;
        double d0, $d1;
        cern.jet.random.engine.RandomEngine r1;
        byte $b0;
        cern.jet.random.StudentT $r2;
        com.opengamma.analytics.math.function.special.InverseIncompleteBetaFunction $r3;
        boolean $z0;

        r0 := @this: com.opengamma.analytics.math.statistics.distribution.StudentTDistribution;

        d0 := @parameter0: double;

        r1 := @parameter1: cern.jet.random.engine.RandomEngine;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $b0 = d0 cmpl 0.0;

        if $b0 <= 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        staticinvoke <org.apache.commons.lang.Validate: void isTrue(boolean,java.lang.String)>($z0, "degrees of freedom");

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object)>(r1);

        r0.<com.opengamma.analytics.math.statistics.distribution.StudentTDistribution: double _degFreedom> = d0;

        $r2 = new cern.jet.random.StudentT;

        specialinvoke $r2.<cern.jet.random.StudentT: void <init>(double,cern.jet.random.engine.RandomEngine)>(d0, r1);

        r0.<com.opengamma.analytics.math.statistics.distribution.StudentTDistribution: cern.jet.random.StudentT _dist> = $r2;

        $r3 = new com.opengamma.analytics.math.function.special.InverseIncompleteBetaFunction;

        $d1 = d0 / 2.0;

        specialinvoke $r3.<com.opengamma.analytics.math.function.special.InverseIncompleteBetaFunction: void <init>(double,double)>($d1, 0.5);

        r0.<com.opengamma.analytics.math.statistics.distribution.StudentTDistribution: com.opengamma.analytics.math.function.Function1D _beta> = $r3;

        return;
    }

    public double getCDF(java.lang.Double)
    {
        com.opengamma.analytics.math.statistics.distribution.StudentTDistribution r0;
        java.lang.Double r1;
        cern.jet.random.StudentT $r2;
        double $d0, $d1;

        r0 := @this: com.opengamma.analytics.math.statistics.distribution.StudentTDistribution;

        r1 := @parameter0: java.lang.Double;

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object)>(r1);

        $r2 = r0.<com.opengamma.analytics.math.statistics.distribution.StudentTDistribution: cern.jet.random.StudentT _dist>;

        $d0 = virtualinvoke r1.<java.lang.Double: double doubleValue()>();

        $d1 = virtualinvoke $r2.<cern.jet.random.StudentT: double cdf(double)>($d0);

        return $d1;
    }

    public double getPDF(java.lang.Double)
    {
        com.opengamma.analytics.math.statistics.distribution.StudentTDistribution r0;
        java.lang.Double r1;
        cern.jet.random.StudentT $r2;
        double $d0, $d1;

        r0 := @this: com.opengamma.analytics.math.statistics.distribution.StudentTDistribution;

        r1 := @parameter0: java.lang.Double;

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object)>(r1);

        $r2 = r0.<com.opengamma.analytics.math.statistics.distribution.StudentTDistribution: cern.jet.random.StudentT _dist>;

        $d0 = virtualinvoke r1.<java.lang.Double: double doubleValue()>();

        $d1 = virtualinvoke $r2.<cern.jet.random.StudentT: double pdf(double)>($d0);

        return $d1;
    }

    public double nextRandom()
    {
        com.opengamma.analytics.math.statistics.distribution.StudentTDistribution r0;
        cern.jet.random.StudentT $r1;
        double $d0;

        r0 := @this: com.opengamma.analytics.math.statistics.distribution.StudentTDistribution;

        $r1 = r0.<com.opengamma.analytics.math.statistics.distribution.StudentTDistribution: cern.jet.random.StudentT _dist>;

        $d0 = virtualinvoke $r1.<cern.jet.random.StudentT: double nextDouble()>();

        return $d0;
    }

    public double getInverseCDF(java.lang.Double)
    {
        com.opengamma.analytics.math.statistics.distribution.StudentTDistribution r0;
        java.lang.Double r1, $r3, $r5;
        double d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16;
        byte $b0, $b1;
        boolean $z0;
        com.opengamma.analytics.math.function.Function1D $r2;
        java.lang.Object $r4;

        r0 := @this: com.opengamma.analytics.math.statistics.distribution.StudentTDistribution;

        r1 := @parameter0: java.lang.Double;

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object)>(r1);

        $d1 = virtualinvoke r1.<java.lang.Double: double doubleValue()>();

        $b0 = $d1 cmpl 0.0;

        if $b0 < 0 goto label1;

        $d2 = virtualinvoke r1.<java.lang.Double: double doubleValue()>();

        $b1 = $d2 cmpg 1.0;

        if $b1 > 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        staticinvoke <org.apache.commons.lang.Validate: void isTrue(boolean,java.lang.String)>($z0, "Probability must be >= 0 and <= 1");

        $r2 = r0.<com.opengamma.analytics.math.statistics.distribution.StudentTDistribution: com.opengamma.analytics.math.function.Function1D _beta>;

        $d3 = virtualinvoke r1.<java.lang.Double: double doubleValue()>();

        $d4 = virtualinvoke r1.<java.lang.Double: double doubleValue()>();

        $d5 = 1.0 - $d4;

        $d6 = staticinvoke <java.lang.Math: double min(double,double)>($d3, $d5);

        $d7 = 2.0 * $d6;

        $r3 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d7);

        $r4 = virtualinvoke $r2.<com.opengamma.analytics.math.function.Function1D: java.lang.Object evaluate(java.lang.Object)>($r3);

        $r5 = (java.lang.Double) $r4;

        d0 = virtualinvoke $r5.<java.lang.Double: double doubleValue()>();

        $d8 = virtualinvoke r1.<java.lang.Double: double doubleValue()>();

        $d9 = $d8 - 0.5;

        $d10 = staticinvoke <java.lang.Math: double signum(double)>($d9);

        $d11 = r0.<com.opengamma.analytics.math.statistics.distribution.StudentTDistribution: double _degFreedom>;

        $d12 = 1.0 / d0;

        $d13 = $d12 - 1.0;

        $d14 = $d11 * $d13;

        $d15 = staticinvoke <java.lang.Math: double sqrt(double)>($d14);

        $d16 = $d10 * $d15;

        return $d16;
    }

    public double getDegreesOfFreedom()
    {
        com.opengamma.analytics.math.statistics.distribution.StudentTDistribution r0;
        double $d0;

        r0 := @this: com.opengamma.analytics.math.statistics.distribution.StudentTDistribution;

        $d0 = r0.<com.opengamma.analytics.math.statistics.distribution.StudentTDistribution: double _degFreedom>;

        return $d0;
    }

    public int hashCode()
    {
        com.opengamma.analytics.math.statistics.distribution.StudentTDistribution r0;
        long l1, $l2, $l3;
        double $d0;
        int $i4, $i5, i7;

        r0 := @this: com.opengamma.analytics.math.statistics.distribution.StudentTDistribution;

        $d0 = r0.<com.opengamma.analytics.math.statistics.distribution.StudentTDistribution: double _degFreedom>;

        l1 = staticinvoke <java.lang.Double: long doubleToLongBits(double)>($d0);

        $i5 = 31 * 1;

        $l2 = l1 >>> 32;

        $l3 = l1 ^ $l2;

        $i4 = (int) $l3;

        i7 = $i5 + $i4;

        return i7;
    }

    public boolean equals(java.lang.Object)
    {
        com.opengamma.analytics.math.statistics.distribution.StudentTDistribution r0, r2;
        java.lang.Object r1;
        java.lang.Class $r3, $r4;
        double $d0, $d1;
        long $l0, $l1;
        byte $b2;
        boolean $z0;

        r0 := @this: com.opengamma.analytics.math.statistics.distribution.StudentTDistribution;

        r1 := @parameter0: java.lang.Object;

        if r0 != r1 goto label1;

        return 1;

     label1:
        if r1 != null goto label2;

        return 0;

     label2:
        $r3 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r4 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        if $r3 == $r4 goto label3;

        return 0;

     label3:
        r2 = (com.opengamma.analytics.math.statistics.distribution.StudentTDistribution) r1;

        $d0 = r0.<com.opengamma.analytics.math.statistics.distribution.StudentTDistribution: double _degFreedom>;

        $l0 = staticinvoke <java.lang.Double: long doubleToLongBits(double)>($d0);

        $d1 = r2.<com.opengamma.analytics.math.statistics.distribution.StudentTDistribution: double _degFreedom>;

        $l1 = staticinvoke <java.lang.Double: long doubleToLongBits(double)>($d1);

        $b2 = $l0 cmp $l1;

        if $b2 != 0 goto label4;

        $z0 = 1;

        goto label5;

     label4:
        $z0 = 0;

     label5:
        return $z0;
    }

    public volatile double getInverseCDF(java.lang.Object)
    {
        com.opengamma.analytics.math.statistics.distribution.StudentTDistribution r0;
        java.lang.Object r1;
        java.lang.Double $r2;
        double $d0;

        r0 := @this: com.opengamma.analytics.math.statistics.distribution.StudentTDistribution;

        r1 := @parameter0: java.lang.Object;

        $r2 = (java.lang.Double) r1;

        $d0 = virtualinvoke r0.<com.opengamma.analytics.math.statistics.distribution.StudentTDistribution: double getInverseCDF(java.lang.Double)>($r2);

        return $d0;
    }

    public volatile double getCDF(java.lang.Object)
    {
        com.opengamma.analytics.math.statistics.distribution.StudentTDistribution r0;
        java.lang.Object r1;
        java.lang.Double $r2;
        double $d0;

        r0 := @this: com.opengamma.analytics.math.statistics.distribution.StudentTDistribution;

        r1 := @parameter0: java.lang.Object;

        $r2 = (java.lang.Double) r1;

        $d0 = virtualinvoke r0.<com.opengamma.analytics.math.statistics.distribution.StudentTDistribution: double getCDF(java.lang.Double)>($r2);

        return $d0;
    }

    public volatile double getPDF(java.lang.Object)
    {
        com.opengamma.analytics.math.statistics.distribution.StudentTDistribution r0;
        java.lang.Object r1;
        java.lang.Double $r2;
        double $d0;

        r0 := @this: com.opengamma.analytics.math.statistics.distribution.StudentTDistribution;

        r1 := @parameter0: java.lang.Object;

        $r2 = (java.lang.Double) r1;

        $d0 = virtualinvoke r0.<com.opengamma.analytics.math.statistics.distribution.StudentTDistribution: double getPDF(java.lang.Double)>($r2);

        return $d0;
    }
}
