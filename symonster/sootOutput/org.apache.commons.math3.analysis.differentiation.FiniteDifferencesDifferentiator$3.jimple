class org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator$3 extends java.lang.Object implements org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiableMatrixFunction
{
    final org.apache.commons.math3.analysis.UnivariateMatrixFunction val$function;
    final org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator this$0;

    void <init>(org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator, org.apache.commons.math3.analysis.UnivariateMatrixFunction)
    {
        org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator$3 r0;
        org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator r1;
        org.apache.commons.math3.analysis.UnivariateMatrixFunction r2;

        r0 := @this: org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator$3;

        r1 := @parameter0: org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator;

        r2 := @parameter1: org.apache.commons.math3.analysis.UnivariateMatrixFunction;

        r0.<org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator$3: org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator this$0> = r1;

        r0.<org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator$3: org.apache.commons.math3.analysis.UnivariateMatrixFunction val$function> = r2;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public double[][] value(double) throws org.apache.commons.math3.exception.MathIllegalArgumentException
    {
        org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator$3 r0;
        double d0;
        org.apache.commons.math3.analysis.UnivariateMatrixFunction $r1;
        double[][] $r2;

        r0 := @this: org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator$3;

        d0 := @parameter0: double;

        $r1 = r0.<org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator$3: org.apache.commons.math3.analysis.UnivariateMatrixFunction val$function>;

        $r2 = interfaceinvoke $r1.<org.apache.commons.math3.analysis.UnivariateMatrixFunction: double[][] value(double)>(d0);

        return $r2;
    }

    public org.apache.commons.math3.analysis.differentiation.DerivativeStructure[][] value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) throws org.apache.commons.math3.exception.MathIllegalArgumentException
    {
        org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator$3 r0;
        org.apache.commons.math3.analysis.differentiation.DerivativeStructure r1, $r13;
        double d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, i13, i14, $i15, i16, i17, i18;
        org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator $r2, $r3, $r4, $r5, $r6, $r11, $r14, $r21, $r24;
        double[][] $r7, $r8, $r9, $r17, r27;
        double[] $r10, $r16, $r18, $r19, $r20;
        org.apache.commons.math3.analysis.differentiation.DerivativeStructure[] $r12;
        org.apache.commons.math3.analysis.UnivariateMatrixFunction $r15;
        org.apache.commons.math3.exception.NumberIsTooLargeException $r22;
        java.lang.Integer $r23, $r25;
        double[][][] r26;
        org.apache.commons.math3.analysis.differentiation.DerivativeStructure[][] r28;

        r0 := @this: org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator$3;

        r1 := @parameter0: org.apache.commons.math3.analysis.differentiation.DerivativeStructure;

        $i0 = virtualinvoke r1.<org.apache.commons.math3.analysis.differentiation.DerivativeStructure: int getOrder()>();

        $r2 = r0.<org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator$3: org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator this$0>;

        $i1 = staticinvoke <org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator: int access$000(org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator)>($r2);

        if $i0 < $i1 goto label01;

        $r22 = new org.apache.commons.math3.exception.NumberIsTooLargeException;

        $i11 = virtualinvoke r1.<org.apache.commons.math3.analysis.differentiation.DerivativeStructure: int getOrder()>();

        $r23 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i11);

        $r24 = r0.<org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator$3: org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator this$0>;

        $i12 = staticinvoke <org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator: int access$000(org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator)>($r24);

        $r25 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i12);

        specialinvoke $r22.<org.apache.commons.math3.exception.NumberIsTooLargeException: void <init>(java.lang.Number,java.lang.Number,boolean)>($r23, $r25, 0);

        throw $r22;

     label01:
        $d1 = virtualinvoke r1.<org.apache.commons.math3.analysis.differentiation.DerivativeStructure: double getValue()>();

        $r3 = r0.<org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator$3: org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator this$0>;

        $d2 = staticinvoke <org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator: double access$100(org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator)>($r3);

        $d3 = staticinvoke <org.apache.commons.math3.util.FastMath: double min(double,double)>($d1, $d2);

        $r4 = r0.<org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator$3: org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator this$0>;

        $d4 = staticinvoke <org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator: double access$200(org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator)>($r4);

        $d5 = staticinvoke <org.apache.commons.math3.util.FastMath: double max(double,double)>($d3, $d4);

        $r5 = r0.<org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator$3: org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator this$0>;

        $d6 = staticinvoke <org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator: double access$300(org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator)>($r5);

        d0 = $d5 - $d6;

        r26 = (double[][][]) null;

        i13 = 0;

     label02:
        $r6 = r0.<org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator$3: org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator this$0>;

        $i2 = staticinvoke <org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator: int access$000(org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator)>($r6);

        if i13 >= $i2 goto label08;

        $r15 = r0.<org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator$3: org.apache.commons.math3.analysis.UnivariateMatrixFunction val$function>;

        $d7 = (double) i13;

        $r14 = r0.<org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator$3: org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator this$0>;

        $d8 = staticinvoke <org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator: double access$400(org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator)>($r14);

        $d9 = $d7 * $d8;

        $d10 = d0 + $d9;

        r27 = interfaceinvoke $r15.<org.apache.commons.math3.analysis.UnivariateMatrixFunction: double[][] value(double)>($d10);

        if i13 != 0 goto label03;

        $i8 = lengthof r27;

        $r20 = r27[0];

        $i9 = lengthof $r20;

        $r21 = r0.<org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator$3: org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator this$0>;

        $i10 = staticinvoke <org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator: int access$000(org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator)>($r21);

        r26 = newmultiarray (double)[$i8][$i9][$i10];

     label03:
        i14 = 0;

     label04:
        $i15 = lengthof r27;

        if i14 >= $i15 goto label07;

        i16 = 0;

     label05:
        $r16 = r27[i14];

        $i7 = lengthof $r16;

        if i16 >= $i7 goto label06;

        $r17 = r26[i14];

        $r19 = $r17[i16];

        $r18 = r27[i14];

        $d11 = $r18[i16];

        $r19[i13] = $d11;

        i16 = i16 + 1;

        goto label05;

     label06:
        i14 = i14 + 1;

        goto label04;

     label07:
        i13 = i13 + 1;

        goto label02;

     label08:
        $i4 = lengthof r26;

        $r7 = r26[0];

        $i3 = lengthof $r7;

        r28 = newmultiarray (org.apache.commons.math3.analysis.differentiation.DerivativeStructure)[$i4][$i3];

        i17 = 0;

     label09:
        $i5 = lengthof r28;

        if i17 >= $i5 goto label12;

        i18 = 0;

     label10:
        $r8 = r26[i17];

        $i6 = lengthof $r8;

        if i18 >= $i6 goto label11;

        $r12 = r28[i17];

        $r11 = r0.<org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator$3: org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator this$0>;

        $r9 = r26[i17];

        $r10 = $r9[i18];

        $r13 = staticinvoke <org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator: org.apache.commons.math3.analysis.differentiation.DerivativeStructure access$500(org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator,org.apache.commons.math3.analysis.differentiation.DerivativeStructure,double,double[])>($r11, r1, d0, $r10);

        $r12[i18] = $r13;

        i18 = i18 + 1;

        goto label10;

     label11:
        i17 = i17 + 1;

        goto label09;

     label12:
        return r28;
    }
}
