public final class com.opengamma.analytics.financial.model.volatility.surface.SurfaceConverter extends java.lang.Object
{
    private static final double EPS;
    private static final com.opengamma.analytics.math.rootfinding.BracketRoot BRACKETER;
    private static final com.opengamma.analytics.math.rootfinding.BisectionSingleRootFinder ROOT_FINDER;
    private static final com.opengamma.analytics.math.statistics.distribution.ProbabilityDistribution NORMAL;
    private static final com.opengamma.analytics.financial.model.volatility.surface.SurfaceConverter INSTANCE;

    private void <init>()
    {
        com.opengamma.analytics.financial.model.volatility.surface.SurfaceConverter r0;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.surface.SurfaceConverter;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static com.opengamma.analytics.financial.model.volatility.surface.SurfaceConverter getInstance()
    {
        com.opengamma.analytics.financial.model.volatility.surface.SurfaceConverter $r0;

        $r0 = <com.opengamma.analytics.financial.model.volatility.surface.SurfaceConverter: com.opengamma.analytics.financial.model.volatility.surface.SurfaceConverter INSTANCE>;

        return $r0;
    }

    com.opengamma.analytics.math.surface.Surface deltaToLogMoneyness(com.opengamma.analytics.math.surface.Surface)
    {
        com.opengamma.analytics.financial.model.volatility.surface.SurfaceConverter r0;
        com.opengamma.analytics.math.surface.Surface r1;
        com.opengamma.analytics.financial.model.volatility.surface.SurfaceConverter$1 $r3;
        com.opengamma.analytics.math.surface.FunctionalDoublesSurface $r4;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.surface.SurfaceConverter;

        r1 := @parameter0: com.opengamma.analytics.math.surface.Surface;

        $r3 = new com.opengamma.analytics.financial.model.volatility.surface.SurfaceConverter$1;

        specialinvoke $r3.<com.opengamma.analytics.financial.model.volatility.surface.SurfaceConverter$1: void <init>(com.opengamma.analytics.financial.model.volatility.surface.SurfaceConverter,com.opengamma.analytics.math.surface.Surface)>(r0, r1);

        $r4 = staticinvoke <com.opengamma.analytics.math.surface.FunctionalDoublesSurface: com.opengamma.analytics.math.surface.FunctionalDoublesSurface 'from'(com.opengamma.analytics.math.function.Function)>($r3);

        return $r4;
    }

    com.opengamma.analytics.math.surface.Surface deltaToMoneyness(com.opengamma.analytics.math.surface.Surface)
    {
        com.opengamma.analytics.financial.model.volatility.surface.SurfaceConverter r0;
        com.opengamma.analytics.math.surface.Surface r1, r2, $r3;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.surface.SurfaceConverter;

        r1 := @parameter0: com.opengamma.analytics.math.surface.Surface;

        r2 = virtualinvoke r0.<com.opengamma.analytics.financial.model.volatility.surface.SurfaceConverter: com.opengamma.analytics.math.surface.Surface deltaToLogMoneyness(com.opengamma.analytics.math.surface.Surface)>(r1);

        $r3 = virtualinvoke r0.<com.opengamma.analytics.financial.model.volatility.surface.SurfaceConverter: com.opengamma.analytics.math.surface.Surface logMoneynessToMoneyness(com.opengamma.analytics.math.surface.Surface)>(r2);

        return $r3;
    }

    com.opengamma.analytics.math.surface.Surface deltaToStrike(com.opengamma.analytics.math.surface.Surface, com.opengamma.analytics.financial.model.interestrate.curve.ForwardCurve)
    {
        com.opengamma.analytics.financial.model.volatility.surface.SurfaceConverter r0;
        com.opengamma.analytics.math.surface.Surface r1, r3, $r4;
        com.opengamma.analytics.financial.model.interestrate.curve.ForwardCurve r2;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.surface.SurfaceConverter;

        r1 := @parameter0: com.opengamma.analytics.math.surface.Surface;

        r2 := @parameter1: com.opengamma.analytics.financial.model.interestrate.curve.ForwardCurve;

        r3 = virtualinvoke r0.<com.opengamma.analytics.financial.model.volatility.surface.SurfaceConverter: com.opengamma.analytics.math.surface.Surface deltaToMoneyness(com.opengamma.analytics.math.surface.Surface)>(r1);

        $r4 = virtualinvoke r0.<com.opengamma.analytics.financial.model.volatility.surface.SurfaceConverter: com.opengamma.analytics.math.surface.Surface moneynessToStrike(com.opengamma.analytics.math.surface.Surface,com.opengamma.analytics.financial.model.interestrate.curve.ForwardCurve)>(r3, r2);

        return $r4;
    }

    com.opengamma.analytics.math.surface.Surface logMoneynessToDelta(com.opengamma.analytics.math.surface.Surface)
    {
        com.opengamma.analytics.financial.model.volatility.surface.SurfaceConverter r0;
        com.opengamma.analytics.math.surface.Surface r1;
        com.opengamma.analytics.financial.model.volatility.surface.SurfaceConverter$2 $r3;
        com.opengamma.analytics.math.surface.FunctionalDoublesSurface $r4;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.surface.SurfaceConverter;

        r1 := @parameter0: com.opengamma.analytics.math.surface.Surface;

        $r3 = new com.opengamma.analytics.financial.model.volatility.surface.SurfaceConverter$2;

        specialinvoke $r3.<com.opengamma.analytics.financial.model.volatility.surface.SurfaceConverter$2: void <init>(com.opengamma.analytics.financial.model.volatility.surface.SurfaceConverter,com.opengamma.analytics.math.surface.Surface)>(r0, r1);

        $r4 = staticinvoke <com.opengamma.analytics.math.surface.FunctionalDoublesSurface: com.opengamma.analytics.math.surface.FunctionalDoublesSurface 'from'(com.opengamma.analytics.math.function.Function)>($r3);

        return $r4;
    }

    com.opengamma.analytics.math.surface.Surface logMoneynessToMoneyness(com.opengamma.analytics.math.surface.Surface)
    {
        com.opengamma.analytics.financial.model.volatility.surface.SurfaceConverter r0;
        com.opengamma.analytics.math.surface.Surface r1;
        com.opengamma.analytics.financial.model.volatility.surface.SurfaceConverter$3 $r3;
        com.opengamma.analytics.math.surface.FunctionalDoublesSurface $r4;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.surface.SurfaceConverter;

        r1 := @parameter0: com.opengamma.analytics.math.surface.Surface;

        $r3 = new com.opengamma.analytics.financial.model.volatility.surface.SurfaceConverter$3;

        specialinvoke $r3.<com.opengamma.analytics.financial.model.volatility.surface.SurfaceConverter$3: void <init>(com.opengamma.analytics.financial.model.volatility.surface.SurfaceConverter,com.opengamma.analytics.math.surface.Surface)>(r0, r1);

        $r4 = staticinvoke <com.opengamma.analytics.math.surface.FunctionalDoublesSurface: com.opengamma.analytics.math.surface.FunctionalDoublesSurface 'from'(com.opengamma.analytics.math.function.Function)>($r3);

        return $r4;
    }

    com.opengamma.analytics.math.surface.Surface logMoneynessToStrike(com.opengamma.analytics.math.surface.Surface, com.opengamma.analytics.financial.model.interestrate.curve.ForwardCurve)
    {
        com.opengamma.analytics.financial.model.volatility.surface.SurfaceConverter r0;
        com.opengamma.analytics.math.surface.Surface r1;
        com.opengamma.analytics.financial.model.interestrate.curve.ForwardCurve r2;
        com.opengamma.analytics.financial.model.volatility.surface.SurfaceConverter$4 $r4;
        com.opengamma.analytics.math.surface.FunctionalDoublesSurface $r5;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.surface.SurfaceConverter;

        r1 := @parameter0: com.opengamma.analytics.math.surface.Surface;

        r2 := @parameter1: com.opengamma.analytics.financial.model.interestrate.curve.ForwardCurve;

        $r4 = new com.opengamma.analytics.financial.model.volatility.surface.SurfaceConverter$4;

        specialinvoke $r4.<com.opengamma.analytics.financial.model.volatility.surface.SurfaceConverter$4: void <init>(com.opengamma.analytics.financial.model.volatility.surface.SurfaceConverter,com.opengamma.analytics.financial.model.interestrate.curve.ForwardCurve,com.opengamma.analytics.math.surface.Surface)>(r0, r2, r1);

        $r5 = staticinvoke <com.opengamma.analytics.math.surface.FunctionalDoublesSurface: com.opengamma.analytics.math.surface.FunctionalDoublesSurface 'from'(com.opengamma.analytics.math.function.Function)>($r4);

        return $r5;
    }

    com.opengamma.analytics.math.surface.Surface moneynessToDelta(com.opengamma.analytics.math.surface.Surface)
    {
        com.opengamma.analytics.financial.model.volatility.surface.SurfaceConverter r0;
        com.opengamma.analytics.math.surface.Surface r1, r2, $r3;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.surface.SurfaceConverter;

        r1 := @parameter0: com.opengamma.analytics.math.surface.Surface;

        r2 = virtualinvoke r0.<com.opengamma.analytics.financial.model.volatility.surface.SurfaceConverter: com.opengamma.analytics.math.surface.Surface moneynessToLogMoneyness(com.opengamma.analytics.math.surface.Surface)>(r1);

        $r3 = virtualinvoke r0.<com.opengamma.analytics.financial.model.volatility.surface.SurfaceConverter: com.opengamma.analytics.math.surface.Surface logMoneynessToDelta(com.opengamma.analytics.math.surface.Surface)>(r2);

        return $r3;
    }

    com.opengamma.analytics.math.surface.Surface moneynessToLogMoneyness(com.opengamma.analytics.math.surface.Surface)
    {
        com.opengamma.analytics.financial.model.volatility.surface.SurfaceConverter r0;
        com.opengamma.analytics.math.surface.Surface r1;
        com.opengamma.analytics.financial.model.volatility.surface.SurfaceConverter$5 $r3;
        com.opengamma.analytics.math.surface.FunctionalDoublesSurface $r4;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.surface.SurfaceConverter;

        r1 := @parameter0: com.opengamma.analytics.math.surface.Surface;

        $r3 = new com.opengamma.analytics.financial.model.volatility.surface.SurfaceConverter$5;

        specialinvoke $r3.<com.opengamma.analytics.financial.model.volatility.surface.SurfaceConverter$5: void <init>(com.opengamma.analytics.financial.model.volatility.surface.SurfaceConverter,com.opengamma.analytics.math.surface.Surface)>(r0, r1);

        $r4 = staticinvoke <com.opengamma.analytics.math.surface.FunctionalDoublesSurface: com.opengamma.analytics.math.surface.FunctionalDoublesSurface 'from'(com.opengamma.analytics.math.function.Function)>($r3);

        return $r4;
    }

    com.opengamma.analytics.math.surface.Surface moneynessToStrike(com.opengamma.analytics.math.surface.Surface, com.opengamma.analytics.financial.model.interestrate.curve.ForwardCurve)
    {
        com.opengamma.analytics.financial.model.volatility.surface.SurfaceConverter r0;
        com.opengamma.analytics.math.surface.Surface r1;
        com.opengamma.analytics.financial.model.interestrate.curve.ForwardCurve r2;
        com.opengamma.analytics.financial.model.volatility.surface.SurfaceConverter$6 $r4;
        com.opengamma.analytics.math.surface.FunctionalDoublesSurface $r5;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.surface.SurfaceConverter;

        r1 := @parameter0: com.opengamma.analytics.math.surface.Surface;

        r2 := @parameter1: com.opengamma.analytics.financial.model.interestrate.curve.ForwardCurve;

        $r4 = new com.opengamma.analytics.financial.model.volatility.surface.SurfaceConverter$6;

        specialinvoke $r4.<com.opengamma.analytics.financial.model.volatility.surface.SurfaceConverter$6: void <init>(com.opengamma.analytics.financial.model.volatility.surface.SurfaceConverter,com.opengamma.analytics.financial.model.interestrate.curve.ForwardCurve,com.opengamma.analytics.math.surface.Surface)>(r0, r2, r1);

        $r5 = staticinvoke <com.opengamma.analytics.math.surface.FunctionalDoublesSurface: com.opengamma.analytics.math.surface.FunctionalDoublesSurface 'from'(com.opengamma.analytics.math.function.Function)>($r4);

        return $r5;
    }

    com.opengamma.analytics.math.surface.Surface strikeToDelta(com.opengamma.analytics.math.surface.Surface, com.opengamma.analytics.financial.model.interestrate.curve.ForwardCurve)
    {
        com.opengamma.analytics.financial.model.volatility.surface.SurfaceConverter r0;
        com.opengamma.analytics.math.surface.Surface r1, r3, $r4;
        com.opengamma.analytics.financial.model.interestrate.curve.ForwardCurve r2;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.surface.SurfaceConverter;

        r1 := @parameter0: com.opengamma.analytics.math.surface.Surface;

        r2 := @parameter1: com.opengamma.analytics.financial.model.interestrate.curve.ForwardCurve;

        r3 = virtualinvoke r0.<com.opengamma.analytics.financial.model.volatility.surface.SurfaceConverter: com.opengamma.analytics.math.surface.Surface strikeToLogMoneyness(com.opengamma.analytics.math.surface.Surface,com.opengamma.analytics.financial.model.interestrate.curve.ForwardCurve)>(r1, r2);

        $r4 = virtualinvoke r0.<com.opengamma.analytics.financial.model.volatility.surface.SurfaceConverter: com.opengamma.analytics.math.surface.Surface logMoneynessToDelta(com.opengamma.analytics.math.surface.Surface)>(r3);

        return $r4;
    }

    com.opengamma.analytics.math.surface.Surface strikeToLogMoneyness(com.opengamma.analytics.math.surface.Surface, com.opengamma.analytics.financial.model.interestrate.curve.ForwardCurve)
    {
        com.opengamma.analytics.financial.model.volatility.surface.SurfaceConverter r0;
        com.opengamma.analytics.math.surface.Surface r1;
        com.opengamma.analytics.financial.model.interestrate.curve.ForwardCurve r2;
        com.opengamma.analytics.financial.model.volatility.surface.SurfaceConverter$7 $r4;
        com.opengamma.analytics.math.surface.FunctionalDoublesSurface $r5;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.surface.SurfaceConverter;

        r1 := @parameter0: com.opengamma.analytics.math.surface.Surface;

        r2 := @parameter1: com.opengamma.analytics.financial.model.interestrate.curve.ForwardCurve;

        $r4 = new com.opengamma.analytics.financial.model.volatility.surface.SurfaceConverter$7;

        specialinvoke $r4.<com.opengamma.analytics.financial.model.volatility.surface.SurfaceConverter$7: void <init>(com.opengamma.analytics.financial.model.volatility.surface.SurfaceConverter,com.opengamma.analytics.financial.model.interestrate.curve.ForwardCurve,com.opengamma.analytics.math.surface.Surface)>(r0, r2, r1);

        $r5 = staticinvoke <com.opengamma.analytics.math.surface.FunctionalDoublesSurface: com.opengamma.analytics.math.surface.FunctionalDoublesSurface 'from'(com.opengamma.analytics.math.function.Function)>($r4);

        return $r5;
    }

    com.opengamma.analytics.math.surface.Surface strikeToMoneyness(com.opengamma.analytics.math.surface.Surface, com.opengamma.analytics.financial.model.interestrate.curve.ForwardCurve)
    {
        com.opengamma.analytics.financial.model.volatility.surface.SurfaceConverter r0;
        com.opengamma.analytics.math.surface.Surface r1;
        com.opengamma.analytics.financial.model.interestrate.curve.ForwardCurve r2;
        com.opengamma.analytics.financial.model.volatility.surface.SurfaceConverter$8 $r4;
        com.opengamma.analytics.math.surface.FunctionalDoublesSurface $r5;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.surface.SurfaceConverter;

        r1 := @parameter0: com.opengamma.analytics.math.surface.Surface;

        r2 := @parameter1: com.opengamma.analytics.financial.model.interestrate.curve.ForwardCurve;

        $r4 = new com.opengamma.analytics.financial.model.volatility.surface.SurfaceConverter$8;

        specialinvoke $r4.<com.opengamma.analytics.financial.model.volatility.surface.SurfaceConverter$8: void <init>(com.opengamma.analytics.financial.model.volatility.surface.SurfaceConverter,com.opengamma.analytics.financial.model.interestrate.curve.ForwardCurve,com.opengamma.analytics.math.surface.Surface)>(r0, r2, r1);

        $r5 = staticinvoke <com.opengamma.analytics.math.surface.FunctionalDoublesSurface: com.opengamma.analytics.math.surface.FunctionalDoublesSurface 'from'(com.opengamma.analytics.math.function.Function)>($r4);

        return $r5;
    }

    double getlogMoneynessForDelta(double, com.opengamma.analytics.math.surface.Surface, double)
    {
        com.opengamma.analytics.financial.model.volatility.surface.SurfaceConverter r0;
        double d0, d1, d2, d3, d4, $d5, $d6, $d7, $d8, d10, d11, d12, d13, d14;
        com.opengamma.analytics.math.surface.Surface r1;
        byte $b0, $b1, $b2, $b3;
        com.opengamma.analytics.math.statistics.distribution.ProbabilityDistribution $r4;
        java.lang.Double $r5, $r7, $r9, $r12, $r13, $r14;
        com.opengamma.analytics.financial.model.volatility.surface.SurfaceConverter$9 $r6;
        java.lang.Object $r8;
        com.opengamma.analytics.math.rootfinding.BracketRoot $r10;
        com.opengamma.analytics.math.rootfinding.BisectionSingleRootFinder $r11;
        com.opengamma.analytics.math.MathException $r15, $r32;
        java.lang.StringBuilder $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r25, $r26, $r27, $r33, $r34, $r35, $r37;
        boolean $z1;
        double[] r28;
        java.lang.String r30, r31, $r36, $r38;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.surface.SurfaceConverter;

        d0 := @parameter0: double;

        r1 := @parameter1: com.opengamma.analytics.math.surface.Surface;

        d1 := @parameter2: double;

        staticinvoke <com.opengamma.util.ArgumentChecker: boolean isInRangeExclusive(double,double,double)>(0.0, 1.0, d0);

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "null surface");

        $b0 = d1 cmpl 0.0;

        if $b0 <= 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z1, "t must be possitive");

        d2 = staticinvoke <java.lang.Math: double sqrt(double)>(d1);

        $r4 = <com.opengamma.analytics.financial.model.volatility.surface.SurfaceConverter: com.opengamma.analytics.math.statistics.distribution.ProbabilityDistribution NORMAL>;

        $r5 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d0);

        d3 = interfaceinvoke $r4.<com.opengamma.analytics.math.statistics.distribution.ProbabilityDistribution: double getInverseCDF(java.lang.Object)>($r5);

        $r6 = new com.opengamma.analytics.financial.model.volatility.surface.SurfaceConverter$9;

        specialinvoke $r6.<com.opengamma.analytics.financial.model.volatility.surface.SurfaceConverter$9: void <init>(com.opengamma.analytics.financial.model.volatility.surface.SurfaceConverter,com.opengamma.analytics.math.surface.Surface,double,double,double)>(r0, r1, d1, d3, d2);

        $r7 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(0.0);

        $r8 = virtualinvoke $r6.<com.opengamma.analytics.math.function.Function1D: java.lang.Object evaluate(java.lang.Object)>($r7);

        $r9 = (java.lang.Double) $r8;

        d4 = virtualinvoke $r9.<java.lang.Double: double doubleValue()>();

        $b1 = d4 cmpg 0.0;

        if $b1 >= 0 goto label3;

        d10 = -100.0;

        d11 = 1.0;

        $d8 = 1.25 * d4;

        d12 = staticinvoke <java.lang.Math: double max(double,double)>(-100.0, $d8);

        d13 = 0.75 * d4;

        goto label4;

     label3:
        d10 = -1.0;

        d11 = 100.0;

        d12 = 0.75 * d4;

        $d5 = 1.25 * d4;

        d13 = staticinvoke <java.lang.Math: double min(double,double)>(100.0, $d5);

     label4:
        $r10 = <com.opengamma.analytics.financial.model.volatility.surface.SurfaceConverter: com.opengamma.analytics.math.rootfinding.BracketRoot BRACKETER>;

        r28 = virtualinvoke $r10.<com.opengamma.analytics.math.rootfinding.BracketRoot: double[] getBracketedPoints(com.opengamma.analytics.math.function.Function1D,double,double,double,double)>($r6, d12, d13, d10, d11);

        $r11 = <com.opengamma.analytics.financial.model.volatility.surface.SurfaceConverter: com.opengamma.analytics.math.rootfinding.BisectionSingleRootFinder ROOT_FINDER>;

        $d6 = r28[0];

        $r12 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d6);

        $d7 = r28[1];

        $r13 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d7);

        $r14 = virtualinvoke $r11.<com.opengamma.analytics.math.rootfinding.BisectionSingleRootFinder: java.lang.Double getRoot(com.opengamma.analytics.math.function.Function1D,java.lang.Double,java.lang.Double)>($r6, $r12, $r13);

        d14 = virtualinvoke $r14.<java.lang.Double: double doubleValue()>();

     label5:
        return d14;

     label6:
        $r15 := @caughtexception;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot find a log-moneyness corresponding to a delta of ");

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>(d0);

        r30 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        $b2 = d0 cmpg 0.05;

        if $b2 >= 0 goto label7;

        $r25 = new java.lang.StringBuilder;

        specialinvoke $r25.<java.lang.StringBuilder: void <init>()>();

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r30);

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" It is possible that the smile exhibits arbitrable for very high strikes. Check that the call price is always decreasing in strike. ");

        r31 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label9;

     label7:
        $b3 = d0 cmpl 0.95;

        if $b3 <= 0 goto label8;

        $r22 = new java.lang.StringBuilder;

        specialinvoke $r22.<java.lang.StringBuilder: void <init>()>();

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r30);

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" It is possible that the smile exhibits arbitrable for very low strikes. Check that the put price is always increasing in strike. ");

        r31 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label9;

     label8:
        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r30);

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" It is likely that the smile exhibits arbitrage");

        r31 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

     label9:
        $r32 = new com.opengamma.analytics.math.MathException;

        $r33 = new java.lang.StringBuilder;

        specialinvoke $r33.<java.lang.StringBuilder: void <init>()>();

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r31);

        $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r36 = virtualinvoke $r15.<com.opengamma.analytics.math.MathException: java.lang.String getMessage()>();

        $r37 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r36);

        $r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r32.<com.opengamma.analytics.math.MathException: void <init>(java.lang.String)>($r38);

        throw $r32;

        catch com.opengamma.analytics.math.MathException from label4 to label5 with label6;
    }

    double getDeltaForLogMoneyness(double, com.opengamma.analytics.math.surface.Surface, double)
    {
        com.opengamma.analytics.financial.model.volatility.surface.SurfaceConverter r0;
        double d0, d1, d2, d3, $d4, $d5, $d6, d7, d8;
        com.opengamma.analytics.math.surface.Surface r1;
        double[] r3;
        java.lang.Double r4, $r6, $r8, $r11, $r12;
        com.opengamma.analytics.financial.model.volatility.surface.SurfaceConverter$10 $r5;
        java.lang.Object $r7;
        byte $b0;
        com.opengamma.analytics.math.rootfinding.BracketRoot $r9;
        com.opengamma.analytics.math.rootfinding.BisectionSingleRootFinder $r10;
        com.opengamma.analytics.math.statistics.distribution.ProbabilityDistribution $r13;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.surface.SurfaceConverter;

        d0 := @parameter0: double;

        r1 := @parameter1: com.opengamma.analytics.math.surface.Surface;

        d1 := @parameter2: double;

        d2 = staticinvoke <java.lang.Math: double sqrt(double)>(d1);

        $r5 = new com.opengamma.analytics.financial.model.volatility.surface.SurfaceConverter$10;

        specialinvoke $r5.<com.opengamma.analytics.financial.model.volatility.surface.SurfaceConverter$10: void <init>(com.opengamma.analytics.financial.model.volatility.surface.SurfaceConverter,com.opengamma.analytics.math.surface.Surface,double,double,double)>(r0, r1, d1, d0, d2);

        $r6 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(0.0);

        $r7 = virtualinvoke $r5.<com.opengamma.analytics.math.function.Function1D: java.lang.Object evaluate(java.lang.Object)>($r6);

        $r8 = (java.lang.Double) $r7;

        d3 = virtualinvoke $r8.<java.lang.Double: double doubleValue()>();

        $b0 = d3 cmpg 0.0;

        if $b0 >= 0 goto label1;

        d7 = 1.25 * d3;

        d8 = 0.75 * d3;

        goto label2;

     label1:
        d7 = 0.75 * d3;

        d8 = 1.25 * d3;

     label2:
        $r9 = <com.opengamma.analytics.financial.model.volatility.surface.SurfaceConverter: com.opengamma.analytics.math.rootfinding.BracketRoot BRACKETER>;

        r3 = virtualinvoke $r9.<com.opengamma.analytics.math.rootfinding.BracketRoot: double[] getBracketedPoints(com.opengamma.analytics.math.function.Function1D,double,double)>($r5, d7, d8);

        $r10 = <com.opengamma.analytics.financial.model.volatility.surface.SurfaceConverter: com.opengamma.analytics.math.rootfinding.BisectionSingleRootFinder ROOT_FINDER>;

        $d4 = r3[0];

        $r11 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d4);

        $d5 = r3[1];

        $r12 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d5);

        r4 = virtualinvoke $r10.<com.opengamma.analytics.math.rootfinding.BisectionSingleRootFinder: java.lang.Double getRoot(com.opengamma.analytics.math.function.Function1D,java.lang.Double,java.lang.Double)>($r5, $r11, $r12);

        $r13 = <com.opengamma.analytics.financial.model.volatility.surface.SurfaceConverter: com.opengamma.analytics.math.statistics.distribution.ProbabilityDistribution NORMAL>;

        $d6 = interfaceinvoke $r13.<com.opengamma.analytics.math.statistics.distribution.ProbabilityDistribution: double getCDF(java.lang.Object)>(r4);

        return $d6;
    }

    static com.opengamma.analytics.math.statistics.distribution.ProbabilityDistribution access$000()
    {
        com.opengamma.analytics.math.statistics.distribution.ProbabilityDistribution $r0;

        $r0 = <com.opengamma.analytics.financial.model.volatility.surface.SurfaceConverter: com.opengamma.analytics.math.statistics.distribution.ProbabilityDistribution NORMAL>;

        return $r0;
    }

    static void <clinit>()
    {
        com.opengamma.analytics.math.rootfinding.BracketRoot $r0;
        com.opengamma.analytics.math.rootfinding.BisectionSingleRootFinder $r1;
        com.opengamma.analytics.math.statistics.distribution.NormalDistribution $r2;
        com.opengamma.analytics.financial.model.volatility.surface.SurfaceConverter $r3;

        <com.opengamma.analytics.financial.model.volatility.surface.SurfaceConverter: double EPS> = 1.0E-12;

        $r0 = new com.opengamma.analytics.math.rootfinding.BracketRoot;

        specialinvoke $r0.<com.opengamma.analytics.math.rootfinding.BracketRoot: void <init>()>();

        <com.opengamma.analytics.financial.model.volatility.surface.SurfaceConverter: com.opengamma.analytics.math.rootfinding.BracketRoot BRACKETER> = $r0;

        $r1 = new com.opengamma.analytics.math.rootfinding.BisectionSingleRootFinder;

        specialinvoke $r1.<com.opengamma.analytics.math.rootfinding.BisectionSingleRootFinder: void <init>(double)>(1.0E-12);

        <com.opengamma.analytics.financial.model.volatility.surface.SurfaceConverter: com.opengamma.analytics.math.rootfinding.BisectionSingleRootFinder ROOT_FINDER> = $r1;

        $r2 = new com.opengamma.analytics.math.statistics.distribution.NormalDistribution;

        specialinvoke $r2.<com.opengamma.analytics.math.statistics.distribution.NormalDistribution: void <init>(double,double)>(0.0, 1.0);

        <com.opengamma.analytics.financial.model.volatility.surface.SurfaceConverter: com.opengamma.analytics.math.statistics.distribution.ProbabilityDistribution NORMAL> = $r2;

        $r3 = new com.opengamma.analytics.financial.model.volatility.surface.SurfaceConverter;

        specialinvoke $r3.<com.opengamma.analytics.financial.model.volatility.surface.SurfaceConverter: void <init>()>();

        <com.opengamma.analytics.financial.model.volatility.surface.SurfaceConverter: com.opengamma.analytics.financial.model.volatility.surface.SurfaceConverter INSTANCE> = $r3;

        return;
    }
}
