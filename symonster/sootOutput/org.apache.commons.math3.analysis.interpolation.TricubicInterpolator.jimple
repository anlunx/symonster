public class org.apache.commons.math3.analysis.interpolation.TricubicInterpolator extends java.lang.Object implements org.apache.commons.math3.analysis.interpolation.TrivariateGridInterpolator
{

    public void <init>()
    {
        org.apache.commons.math3.analysis.interpolation.TricubicInterpolator r0;

        r0 := @this: org.apache.commons.math3.analysis.interpolation.TricubicInterpolator;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public org.apache.commons.math3.analysis.interpolation.TricubicInterpolatingFunction interpolate(double[], double[], double[], double[][][]) throws org.apache.commons.math3.exception.NoDataException, org.apache.commons.math3.exception.NumberIsTooSmallException, org.apache.commons.math3.exception.DimensionMismatchException, org.apache.commons.math3.exception.NonMonotonicSequenceException
    {
        org.apache.commons.math3.analysis.interpolation.TricubicInterpolator r0;
        double[] r1, r2, r3, $r15, $r18, $r20, $r21, $r24, $r26, $r27, $r30, $r32, $r33, $r36, $r38, $r40, $r42, $r43, $r46, $r48, $r50, $r52, $r53, $r56, $r58, $r60, $r62, $r63, $r66, $r68, $r70, $r72, $r74, $r76, $r78, $r80, $r81, $r84;
        double[][][] r4, r5, r6, r7, r8, r9, r10, r11;
        int i0, i1, i2, i3, i4, i5, i6, i7, i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, i28, i29, i30;
        double d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, d10, d11, d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21, $d22, $d23, $d24, $d25, $d26, $d27, $d28, $d29, $d30, $d31, $d32, $d33, $d34, $d35, $d36, $d37, $d38, $d39, $d40, $d41, $d42, $d43, $d44, $d45, $d46, $d47, $d48, $d49, $d50, $d51, $d52, $d53, $d54, $d55, $d56, $d57, $d58, $d59, $d60, $d61, $d62, $d63, $d64;
        org.apache.commons.math3.analysis.interpolation.TricubicInterpolator$1 $r12;
        double[][] $r13, $r14, $r16, $r17, $r19, $r22, $r23, $r25, $r28, $r29, $r31, $r34, $r35, $r37, $r39, $r41, $r44, $r45, $r47, $r49, $r51, $r54, $r55, $r57, $r59, $r61, $r64, $r65, $r67, $r69, $r71, $r73, $r75, $r77, $r79, $r83, $r86;
        org.apache.commons.math3.exception.DimensionMismatchException $r82, $r85, $r87;
        org.apache.commons.math3.exception.NoDataException $r88;

        r0 := @this: org.apache.commons.math3.analysis.interpolation.TricubicInterpolator;

        r1 := @parameter0: double[];

        r2 := @parameter1: double[];

        r3 := @parameter2: double[];

        r4 := @parameter3: double[][][];

        $i9 = lengthof r1;

        if $i9 == 0 goto label01;

        $i10 = lengthof r2;

        if $i10 == 0 goto label01;

        $i11 = lengthof r3;

        if $i11 == 0 goto label01;

        $i12 = lengthof r4;

        if $i12 != 0 goto label02;

     label01:
        $r88 = new org.apache.commons.math3.exception.NoDataException;

        specialinvoke $r88.<org.apache.commons.math3.exception.NoDataException: void <init>()>();

        throw $r88;

     label02:
        $i14 = lengthof r1;

        $i13 = lengthof r4;

        if $i14 == $i13 goto label03;

        $r87 = new org.apache.commons.math3.exception.DimensionMismatchException;

        $i27 = lengthof r1;

        $i26 = lengthof r4;

        specialinvoke $r87.<org.apache.commons.math3.exception.DimensionMismatchException: void <init>(int,int)>($i27, $i26);

        throw $r87;

     label03:
        staticinvoke <org.apache.commons.math3.util.MathArrays: void checkOrder(double[])>(r1);

        staticinvoke <org.apache.commons.math3.util.MathArrays: void checkOrder(double[])>(r2);

        staticinvoke <org.apache.commons.math3.util.MathArrays: void checkOrder(double[])>(r3);

        i0 = lengthof r1;

        i1 = lengthof r2;

        i2 = lengthof r3;

        r5 = newmultiarray (double)[i0][i1][i2];

        r6 = newmultiarray (double)[i0][i1][i2];

        r7 = newmultiarray (double)[i0][i1][i2];

        r8 = newmultiarray (double)[i0][i1][i2];

        r9 = newmultiarray (double)[i0][i1][i2];

        r10 = newmultiarray (double)[i0][i1][i2];

        r11 = newmultiarray (double)[i0][i1][i2];

        i28 = 1;

     label04:
        $i15 = i0 - 1;

        if i28 >= $i15 goto label11;

        $i17 = lengthof r2;

        $r13 = r4[i28];

        $i16 = lengthof $r13;

        if $i17 == $i16 goto label05;

        $r85 = new org.apache.commons.math3.exception.DimensionMismatchException;

        $i25 = lengthof r2;

        $r86 = r4[i28];

        $i24 = lengthof $r86;

        specialinvoke $r85.<org.apache.commons.math3.exception.DimensionMismatchException: void <init>(int,int)>($i25, $i24);

        throw $r85;

     label05:
        i3 = i28 + 1;

        i4 = i28 - 1;

        d0 = r1[i3];

        d1 = r1[i4];

        d2 = d0 - d1;

        i29 = 1;

     label06:
        $i18 = i1 - 1;

        if i29 >= $i18 goto label10;

        $i20 = lengthof r3;

        $r14 = r4[i28];

        $r15 = $r14[i29];

        $i19 = lengthof $r15;

        if $i20 == $i19 goto label07;

        $r82 = new org.apache.commons.math3.exception.DimensionMismatchException;

        $i23 = lengthof r3;

        $r83 = r4[i28];

        $r84 = $r83[i29];

        $i22 = lengthof $r84;

        specialinvoke $r82.<org.apache.commons.math3.exception.DimensionMismatchException: void <init>(int,int)>($i23, $i22);

        throw $r82;

     label07:
        i5 = i29 + 1;

        i6 = i29 - 1;

        d3 = r2[i5];

        d4 = r2[i6];

        d5 = d3 - d4;

        d6 = d2 * d5;

        i30 = 1;

     label08:
        $i21 = i2 - 1;

        if i30 >= $i21 goto label09;

        i7 = i30 + 1;

        i8 = i30 - 1;

        d7 = r3[i7];

        d8 = r3[i8];

        d9 = d7 - d8;

        $r16 = r5[i28];

        $r21 = $r16[i29];

        $r17 = r4[i3];

        $r18 = $r17[i29];

        $d14 = $r18[i30];

        $r19 = r4[i4];

        $r20 = $r19[i29];

        $d13 = $r20[i30];

        $d15 = $d14 - $d13;

        $d16 = $d15 / d2;

        $r21[i30] = $d16;

        $r22 = r6[i28];

        $r27 = $r22[i29];

        $r23 = r4[i28];

        $r24 = $r23[i5];

        $d18 = $r24[i30];

        $r25 = r4[i28];

        $r26 = $r25[i6];

        $d17 = $r26[i30];

        $d19 = $d18 - $d17;

        $d20 = $d19 / d5;

        $r27[i30] = $d20;

        $r28 = r7[i28];

        $r33 = $r28[i29];

        $r29 = r4[i28];

        $r30 = $r29[i29];

        $d22 = $r30[i7];

        $r31 = r4[i28];

        $r32 = $r31[i29];

        $d21 = $r32[i8];

        $d23 = $d22 - $d21;

        $d24 = $d23 / d9;

        $r33[i30] = $d24;

        d10 = d2 * d9;

        d11 = d5 * d9;

        $r34 = r8[i28];

        $r43 = $r34[i29];

        $r35 = r4[i3];

        $r36 = $r35[i5];

        $d26 = $r36[i30];

        $r37 = r4[i3];

        $r38 = $r37[i6];

        $d25 = $r38[i30];

        $d28 = $d26 - $d25;

        $r39 = r4[i4];

        $r40 = $r39[i5];

        $d27 = $r40[i30];

        $d30 = $d28 - $d27;

        $r41 = r4[i4];

        $r42 = $r41[i6];

        $d29 = $r42[i30];

        $d31 = $d30 + $d29;

        $d32 = $d31 / d6;

        $r43[i30] = $d32;

        $r44 = r9[i28];

        $r53 = $r44[i29];

        $r45 = r4[i3];

        $r46 = $r45[i29];

        $d34 = $r46[i7];

        $r47 = r4[i3];

        $r48 = $r47[i29];

        $d33 = $r48[i8];

        $d36 = $d34 - $d33;

        $r49 = r4[i4];

        $r50 = $r49[i29];

        $d35 = $r50[i7];

        $d38 = $d36 - $d35;

        $r51 = r4[i4];

        $r52 = $r51[i29];

        $d37 = $r52[i8];

        $d39 = $d38 + $d37;

        $d40 = $d39 / d10;

        $r53[i30] = $d40;

        $r54 = r10[i28];

        $r63 = $r54[i29];

        $r55 = r4[i28];

        $r56 = $r55[i5];

        $d42 = $r56[i7];

        $r57 = r4[i28];

        $r58 = $r57[i5];

        $d41 = $r58[i8];

        $d44 = $d42 - $d41;

        $r59 = r4[i28];

        $r60 = $r59[i6];

        $d43 = $r60[i7];

        $d46 = $d44 - $d43;

        $r61 = r4[i28];

        $r62 = $r61[i6];

        $d45 = $r62[i8];

        $d47 = $d46 + $d45;

        $d48 = $d47 / d11;

        $r63[i30] = $d48;

        d12 = d6 * d9;

        $r64 = r11[i28];

        $r81 = $r64[i29];

        $r65 = r4[i3];

        $r66 = $r65[i5];

        $d50 = $r66[i7];

        $r67 = r4[i3];

        $r68 = $r67[i6];

        $d49 = $r68[i7];

        $d52 = $d50 - $d49;

        $r69 = r4[i4];

        $r70 = $r69[i5];

        $d51 = $r70[i7];

        $d54 = $d52 - $d51;

        $r71 = r4[i4];

        $r72 = $r71[i6];

        $d53 = $r72[i7];

        $d56 = $d54 + $d53;

        $r73 = r4[i3];

        $r74 = $r73[i5];

        $d55 = $r74[i8];

        $d58 = $d56 - $d55;

        $r75 = r4[i3];

        $r76 = $r75[i6];

        $d57 = $r76[i8];

        $d60 = $d58 + $d57;

        $r77 = r4[i4];

        $r78 = $r77[i5];

        $d59 = $r78[i8];

        $d62 = $d60 + $d59;

        $r79 = r4[i4];

        $r80 = $r79[i6];

        $d61 = $r80[i8];

        $d63 = $d62 - $d61;

        $d64 = $d63 / d12;

        $r81[i30] = $d64;

        i30 = i30 + 1;

        goto label08;

     label09:
        i29 = i29 + 1;

        goto label06;

     label10:
        i28 = i28 + 1;

        goto label04;

     label11:
        $r12 = new org.apache.commons.math3.analysis.interpolation.TricubicInterpolator$1;

        specialinvoke $r12.<org.apache.commons.math3.analysis.interpolation.TricubicInterpolator$1: void <init>(org.apache.commons.math3.analysis.interpolation.TricubicInterpolator,double[],double[],double[],double[][][],double[][][],double[][][],double[][][],double[][][],double[][][],double[][][],double[][][],double[],double[],double[])>(r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r1, r2, r3);

        return $r12;
    }

    public volatile org.apache.commons.math3.analysis.TrivariateFunction interpolate(double[], double[], double[], double[][][]) throws org.apache.commons.math3.exception.NoDataException, org.apache.commons.math3.exception.NumberIsTooSmallException, org.apache.commons.math3.exception.DimensionMismatchException, org.apache.commons.math3.exception.NonMonotonicSequenceException
    {
        org.apache.commons.math3.analysis.interpolation.TricubicInterpolator r0;
        double[] r1, r2, r3;
        double[][][] r4;
        org.apache.commons.math3.analysis.interpolation.TricubicInterpolatingFunction $r5;

        r0 := @this: org.apache.commons.math3.analysis.interpolation.TricubicInterpolator;

        r1 := @parameter0: double[];

        r2 := @parameter1: double[];

        r3 := @parameter2: double[];

        r4 := @parameter3: double[][][];

        $r5 = virtualinvoke r0.<org.apache.commons.math3.analysis.interpolation.TricubicInterpolator: org.apache.commons.math3.analysis.interpolation.TricubicInterpolatingFunction interpolate(double[],double[],double[],double[][][])>(r1, r2, r3, r4);

        return $r5;
    }
}
