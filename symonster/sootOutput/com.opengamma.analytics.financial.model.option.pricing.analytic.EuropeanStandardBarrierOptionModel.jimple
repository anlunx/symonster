public class com.opengamma.analytics.financial.model.option.pricing.analytic.EuropeanStandardBarrierOptionModel extends com.opengamma.analytics.financial.model.option.pricing.analytic.AnalyticOptionModel
{
    private static final com.opengamma.analytics.math.statistics.distribution.ProbabilityDistribution NORMAL;

    public void <init>()
    {
        com.opengamma.analytics.financial.model.option.pricing.analytic.EuropeanStandardBarrierOptionModel r0;

        r0 := @this: com.opengamma.analytics.financial.model.option.pricing.analytic.EuropeanStandardBarrierOptionModel;

        specialinvoke r0.<com.opengamma.analytics.financial.model.option.pricing.analytic.AnalyticOptionModel: void <init>()>();

        return;
    }

    public com.opengamma.analytics.math.function.Function1D getPricingFunction(com.opengamma.analytics.financial.model.option.definition.EuropeanStandardBarrierOptionDefinition)
    {
        com.opengamma.analytics.financial.model.option.pricing.analytic.EuropeanStandardBarrierOptionModel r0;
        com.opengamma.analytics.financial.model.option.definition.EuropeanStandardBarrierOptionDefinition r1;
        com.opengamma.analytics.financial.model.option.definition.Barrier r2;
        boolean z0, z1, $z2, $z3, $z4;
        double d0, $d2;
        byte b0, $b1;
        com.opengamma.analytics.financial.model.option.definition.Barrier$KnockType $r3, $r4;
        com.opengamma.analytics.financial.model.option.definition.Barrier$BarrierType $r5, $r6;
        java.lang.Boolean $r7;
        com.opengamma.analytics.financial.model.option.pricing.analytic.EuropeanStandardBarrierOptionModel$1 $r8;

        r0 := @this: com.opengamma.analytics.financial.model.option.pricing.analytic.EuropeanStandardBarrierOptionModel;

        r1 := @parameter0: com.opengamma.analytics.financial.model.option.definition.EuropeanStandardBarrierOptionDefinition;

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object,java.lang.String)>(r1, "definition");

        r2 = virtualinvoke r1.<com.opengamma.analytics.financial.model.option.definition.EuropeanStandardBarrierOptionDefinition: com.opengamma.analytics.financial.model.option.definition.Barrier getBarrier()>();

        $r3 = virtualinvoke r2.<com.opengamma.analytics.financial.model.option.definition.Barrier: com.opengamma.analytics.financial.model.option.definition.Barrier$KnockType getKnockType()>();

        $r4 = <com.opengamma.analytics.financial.model.option.definition.Barrier$KnockType: com.opengamma.analytics.financial.model.option.definition.Barrier$KnockType IN>;

        if $r3 != $r4 goto label1;

        $z3 = 1;

        goto label2;

     label1:
        $z3 = 0;

     label2:
        z0 = $z3;

        $r5 = virtualinvoke r2.<com.opengamma.analytics.financial.model.option.definition.Barrier: com.opengamma.analytics.financial.model.option.definition.Barrier$BarrierType getBarrierType()>();

        $r6 = <com.opengamma.analytics.financial.model.option.definition.Barrier$BarrierType: com.opengamma.analytics.financial.model.option.definition.Barrier$BarrierType DOWN>;

        if $r5 != $r6 goto label3;

        $z4 = 1;

        goto label4;

     label3:
        $z4 = 0;

     label4:
        z1 = $z4;

        d0 = virtualinvoke r2.<com.opengamma.analytics.financial.model.option.definition.Barrier: double getBarrierLevel()>();

        $r7 = virtualinvoke r1.<com.opengamma.analytics.financial.model.option.definition.EuropeanStandardBarrierOptionDefinition: java.lang.Boolean isCall()>();

        $z2 = virtualinvoke $r7.<java.lang.Boolean: boolean booleanValue()>();

        if $z2 == 0 goto label5;

        $b1 = 1;

        goto label6;

     label5:
        $b1 = -1;

     label6:
        b0 = $b1;

        if z1 == 0 goto label7;

        $d2 = 1.0;

        goto label8;

     label7:
        $d2 = -1.0;

     label8:
        $r8 = new com.opengamma.analytics.financial.model.option.pricing.analytic.EuropeanStandardBarrierOptionModel$1;

        specialinvoke $r8.<com.opengamma.analytics.financial.model.option.pricing.analytic.EuropeanStandardBarrierOptionModel$1: void <init>(com.opengamma.analytics.financial.model.option.pricing.analytic.EuropeanStandardBarrierOptionModel,com.opengamma.analytics.financial.model.option.definition.EuropeanStandardBarrierOptionDefinition,double,int,double,boolean,boolean)>(r0, r1, d0, b0, $d2, z0, z1);

        return $r8;
    }

    private double getA(double, double, double, double, double, double, double)
    {
        com.opengamma.analytics.financial.model.option.pricing.analytic.EuropeanStandardBarrierOptionModel r0;
        double d0, d1, d2, d3, d4, d5, d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17;
        com.opengamma.analytics.math.statistics.distribution.ProbabilityDistribution $r1, $r3;
        java.lang.Double $r2, $r4;

        r0 := @this: com.opengamma.analytics.financial.model.option.pricing.analytic.EuropeanStandardBarrierOptionModel;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        d2 := @parameter2: double;

        d3 := @parameter3: double;

        d4 := @parameter4: double;

        d5 := @parameter5: double;

        d6 := @parameter6: double;

        $d8 = d0 * d2;

        $r1 = <com.opengamma.analytics.financial.model.option.pricing.analytic.EuropeanStandardBarrierOptionModel: com.opengamma.analytics.math.statistics.distribution.ProbabilityDistribution NORMAL>;

        $d7 = d6 * d4;

        $r2 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d7);

        $d9 = interfaceinvoke $r1.<com.opengamma.analytics.math.statistics.distribution.ProbabilityDistribution: double getCDF(java.lang.Object)>($r2);

        $d12 = $d8 * $d9;

        $d13 = d1 * d3;

        $r3 = <com.opengamma.analytics.financial.model.option.pricing.analytic.EuropeanStandardBarrierOptionModel: com.opengamma.analytics.math.statistics.distribution.ProbabilityDistribution NORMAL>;

        $d10 = d4 - d5;

        $d11 = d6 * $d10;

        $r4 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d11);

        $d14 = interfaceinvoke $r3.<com.opengamma.analytics.math.statistics.distribution.ProbabilityDistribution: double getCDF(java.lang.Object)>($r4);

        $d15 = $d13 * $d14;

        $d16 = $d12 - $d15;

        $d17 = d6 * $d16;

        return $d17;
    }

    private double getC(double, double, double, double, double, double, double, double, double, double)
    {
        com.opengamma.analytics.financial.model.option.pricing.analytic.EuropeanStandardBarrierOptionModel r0;
        double d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21, $d22, $d23, $d24, $d25, $d26, $d27, $d28, $d29;
        com.opengamma.analytics.math.statistics.distribution.ProbabilityDistribution $r1, $r3;
        java.lang.Double $r2, $r4;

        r0 := @this: com.opengamma.analytics.financial.model.option.pricing.analytic.EuropeanStandardBarrierOptionModel;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        d2 := @parameter2: double;

        d3 := @parameter3: double;

        d4 := @parameter4: double;

        d5 := @parameter5: double;

        d6 := @parameter6: double;

        d7 := @parameter7: double;

        d8 := @parameter8: double;

        d9 := @parameter9: double;

        $d13 = d0 * d2;

        $d12 = d6 / d0;

        $d10 = d7 + 1.0;

        $d11 = 2.0 * $d10;

        $d14 = staticinvoke <java.lang.Math: double pow(double,double)>($d12, $d11);

        $d16 = $d13 * $d14;

        $r1 = <com.opengamma.analytics.financial.model.option.pricing.analytic.EuropeanStandardBarrierOptionModel: com.opengamma.analytics.math.statistics.distribution.ProbabilityDistribution NORMAL>;

        $d15 = d9 * d4;

        $r2 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d15);

        $d17 = interfaceinvoke $r1.<com.opengamma.analytics.math.statistics.distribution.ProbabilityDistribution: double getCDF(java.lang.Object)>($r2);

        $d20 = $d16 * $d17;

        $d21 = d1 * d3;

        $d19 = d6 / d0;

        $d18 = 2.0 * d7;

        $d22 = staticinvoke <java.lang.Math: double pow(double,double)>($d19, $d18);

        $d25 = $d21 * $d22;

        $r3 = <com.opengamma.analytics.financial.model.option.pricing.analytic.EuropeanStandardBarrierOptionModel: com.opengamma.analytics.math.statistics.distribution.ProbabilityDistribution NORMAL>;

        $d23 = d4 - d5;

        $d24 = d9 * $d23;

        $r4 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d24);

        $d26 = interfaceinvoke $r3.<com.opengamma.analytics.math.statistics.distribution.ProbabilityDistribution: double getCDF(java.lang.Object)>($r4);

        $d27 = $d25 * $d26;

        $d28 = $d20 - $d27;

        $d29 = d8 * $d28;

        return $d29;
    }

    private double getE(double, double, double, double, double, double, double, double, double)
    {
        com.opengamma.analytics.financial.model.option.pricing.analytic.EuropeanStandardBarrierOptionModel r0;
        double d0, d1, d2, d3, d4, d5, d6, d7, d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21;
        com.opengamma.analytics.math.statistics.distribution.ProbabilityDistribution $r1, $r3;
        java.lang.Double $r2, $r4;

        r0 := @this: com.opengamma.analytics.financial.model.option.pricing.analytic.EuropeanStandardBarrierOptionModel;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        d2 := @parameter2: double;

        d3 := @parameter3: double;

        d4 := @parameter4: double;

        d5 := @parameter5: double;

        d6 := @parameter6: double;

        d7 := @parameter7: double;

        d8 := @parameter8: double;

        $d11 = d1 * d2;

        $r1 = <com.opengamma.analytics.financial.model.option.pricing.analytic.EuropeanStandardBarrierOptionModel: com.opengamma.analytics.math.statistics.distribution.ProbabilityDistribution NORMAL>;

        $d9 = d3 - d5;

        $d10 = d8 * $d9;

        $r2 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d10);

        $d12 = interfaceinvoke $r1.<com.opengamma.analytics.math.statistics.distribution.ProbabilityDistribution: double getCDF(java.lang.Object)>($r2);

        $d14 = d6 / d0;

        $d13 = 2.0 * d7;

        $d15 = staticinvoke <java.lang.Math: double pow(double,double)>($d14, $d13);

        $r3 = <com.opengamma.analytics.financial.model.option.pricing.analytic.EuropeanStandardBarrierOptionModel: com.opengamma.analytics.math.statistics.distribution.ProbabilityDistribution NORMAL>;

        $d16 = d4 - d5;

        $d17 = d8 * $d16;

        $r4 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d17);

        $d18 = interfaceinvoke $r3.<com.opengamma.analytics.math.statistics.distribution.ProbabilityDistribution: double getCDF(java.lang.Object)>($r4);

        $d19 = $d15 * $d18;

        $d20 = $d12 - $d19;

        $d21 = $d11 * $d20;

        return $d21;
    }

    private double getF(double, double, double, double, double, double, double, double)
    {
        com.opengamma.analytics.financial.model.option.pricing.analytic.EuropeanStandardBarrierOptionModel r0;
        double d0, d1, d2, d3, d4, d5, d6, d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21, $d22, $d23, $d24;
        com.opengamma.analytics.math.statistics.distribution.ProbabilityDistribution $r1, $r3;
        java.lang.Double $r2, $r4;

        r0 := @this: com.opengamma.analytics.financial.model.option.pricing.analytic.EuropeanStandardBarrierOptionModel;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        d2 := @parameter2: double;

        d3 := @parameter3: double;

        d4 := @parameter4: double;

        d5 := @parameter5: double;

        d6 := @parameter6: double;

        d7 := @parameter7: double;

        $d9 = d4 / d0;

        $d8 = d5 + d6;

        $d10 = staticinvoke <java.lang.Math: double pow(double,double)>($d9, $d8);

        $r1 = <com.opengamma.analytics.financial.model.option.pricing.analytic.EuropeanStandardBarrierOptionModel: com.opengamma.analytics.math.statistics.distribution.ProbabilityDistribution NORMAL>;

        $d11 = d7 * d2;

        $r2 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d11);

        $d12 = interfaceinvoke $r1.<com.opengamma.analytics.math.statistics.distribution.ProbabilityDistribution: double getCDF(java.lang.Object)>($r2);

        $d15 = $d10 * $d12;

        $d14 = d4 / d0;

        $d13 = d5 - d6;

        $d16 = staticinvoke <java.lang.Math: double pow(double,double)>($d14, $d13);

        $r3 = <com.opengamma.analytics.financial.model.option.pricing.analytic.EuropeanStandardBarrierOptionModel: com.opengamma.analytics.math.statistics.distribution.ProbabilityDistribution NORMAL>;

        $d17 = 2.0 * d6;

        $d18 = $d17 * d3;

        $d19 = d2 - $d18;

        $d20 = d7 * $d19;

        $r4 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d20);

        $d21 = interfaceinvoke $r3.<com.opengamma.analytics.math.statistics.distribution.ProbabilityDistribution: double getCDF(java.lang.Object)>($r4);

        $d22 = $d16 * $d21;

        $d23 = $d15 + $d22;

        $d24 = d1 * $d23;

        return $d24;
    }

    public volatile com.opengamma.analytics.math.function.Function1D getPricingFunction(com.opengamma.analytics.financial.model.option.definition.OptionDefinition)
    {
        com.opengamma.analytics.financial.model.option.pricing.analytic.EuropeanStandardBarrierOptionModel r0;
        com.opengamma.analytics.financial.model.option.definition.OptionDefinition r1;
        com.opengamma.analytics.financial.model.option.definition.EuropeanStandardBarrierOptionDefinition $r2;
        com.opengamma.analytics.math.function.Function1D $r3;

        r0 := @this: com.opengamma.analytics.financial.model.option.pricing.analytic.EuropeanStandardBarrierOptionModel;

        r1 := @parameter0: com.opengamma.analytics.financial.model.option.definition.OptionDefinition;

        $r2 = (com.opengamma.analytics.financial.model.option.definition.EuropeanStandardBarrierOptionDefinition) r1;

        $r3 = virtualinvoke r0.<com.opengamma.analytics.financial.model.option.pricing.analytic.EuropeanStandardBarrierOptionModel: com.opengamma.analytics.math.function.Function1D getPricingFunction(com.opengamma.analytics.financial.model.option.definition.EuropeanStandardBarrierOptionDefinition)>($r2);

        return $r3;
    }

    static double access$000(com.opengamma.analytics.financial.model.option.pricing.analytic.EuropeanStandardBarrierOptionModel, double, double, double, double, double, double, double)
    {
        com.opengamma.analytics.financial.model.option.pricing.analytic.EuropeanStandardBarrierOptionModel r0;
        double d0, d1, d2, d3, d4, d5, d6, $d7;

        r0 := @parameter0: com.opengamma.analytics.financial.model.option.pricing.analytic.EuropeanStandardBarrierOptionModel;

        d0 := @parameter1: double;

        d1 := @parameter2: double;

        d2 := @parameter3: double;

        d3 := @parameter4: double;

        d4 := @parameter5: double;

        d5 := @parameter6: double;

        d6 := @parameter7: double;

        $d7 = specialinvoke r0.<com.opengamma.analytics.financial.model.option.pricing.analytic.EuropeanStandardBarrierOptionModel: double getA(double,double,double,double,double,double,double)>(d0, d1, d2, d3, d4, d5, d6);

        return $d7;
    }

    static double access$100(com.opengamma.analytics.financial.model.option.pricing.analytic.EuropeanStandardBarrierOptionModel, double, double, double, double, double, double, double, double, double, double)
    {
        com.opengamma.analytics.financial.model.option.pricing.analytic.EuropeanStandardBarrierOptionModel r0;
        double d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, $d10;

        r0 := @parameter0: com.opengamma.analytics.financial.model.option.pricing.analytic.EuropeanStandardBarrierOptionModel;

        d0 := @parameter1: double;

        d1 := @parameter2: double;

        d2 := @parameter3: double;

        d3 := @parameter4: double;

        d4 := @parameter5: double;

        d5 := @parameter6: double;

        d6 := @parameter7: double;

        d7 := @parameter8: double;

        d8 := @parameter9: double;

        d9 := @parameter10: double;

        $d10 = specialinvoke r0.<com.opengamma.analytics.financial.model.option.pricing.analytic.EuropeanStandardBarrierOptionModel: double getC(double,double,double,double,double,double,double,double,double,double)>(d0, d1, d2, d3, d4, d5, d6, d7, d8, d9);

        return $d10;
    }

    static double access$200(com.opengamma.analytics.financial.model.option.pricing.analytic.EuropeanStandardBarrierOptionModel, double, double, double, double, double, double, double, double, double)
    {
        com.opengamma.analytics.financial.model.option.pricing.analytic.EuropeanStandardBarrierOptionModel r0;
        double d0, d1, d2, d3, d4, d5, d6, d7, d8, $d9;

        r0 := @parameter0: com.opengamma.analytics.financial.model.option.pricing.analytic.EuropeanStandardBarrierOptionModel;

        d0 := @parameter1: double;

        d1 := @parameter2: double;

        d2 := @parameter3: double;

        d3 := @parameter4: double;

        d4 := @parameter5: double;

        d5 := @parameter6: double;

        d6 := @parameter7: double;

        d7 := @parameter8: double;

        d8 := @parameter9: double;

        $d9 = specialinvoke r0.<com.opengamma.analytics.financial.model.option.pricing.analytic.EuropeanStandardBarrierOptionModel: double getE(double,double,double,double,double,double,double,double,double)>(d0, d1, d2, d3, d4, d5, d6, d7, d8);

        return $d9;
    }

    static double access$300(com.opengamma.analytics.financial.model.option.pricing.analytic.EuropeanStandardBarrierOptionModel, double, double, double, double, double, double, double, double)
    {
        com.opengamma.analytics.financial.model.option.pricing.analytic.EuropeanStandardBarrierOptionModel r0;
        double d0, d1, d2, d3, d4, d5, d6, d7, $d8;

        r0 := @parameter0: com.opengamma.analytics.financial.model.option.pricing.analytic.EuropeanStandardBarrierOptionModel;

        d0 := @parameter1: double;

        d1 := @parameter2: double;

        d2 := @parameter3: double;

        d3 := @parameter4: double;

        d4 := @parameter5: double;

        d5 := @parameter6: double;

        d6 := @parameter7: double;

        d7 := @parameter8: double;

        $d8 = specialinvoke r0.<com.opengamma.analytics.financial.model.option.pricing.analytic.EuropeanStandardBarrierOptionModel: double getF(double,double,double,double,double,double,double,double)>(d0, d1, d2, d3, d4, d5, d6, d7);

        return $d8;
    }

    static void <clinit>()
    {
        com.opengamma.analytics.math.statistics.distribution.NormalDistribution $r0;

        $r0 = new com.opengamma.analytics.math.statistics.distribution.NormalDistribution;

        specialinvoke $r0.<com.opengamma.analytics.math.statistics.distribution.NormalDistribution: void <init>(double,double)>(0.0, 1.0);

        <com.opengamma.analytics.financial.model.option.pricing.analytic.EuropeanStandardBarrierOptionModel: com.opengamma.analytics.math.statistics.distribution.ProbabilityDistribution NORMAL> = $r0;

        return;
    }
}
