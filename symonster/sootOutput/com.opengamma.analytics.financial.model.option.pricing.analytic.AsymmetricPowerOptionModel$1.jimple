class com.opengamma.analytics.financial.model.option.pricing.analytic.AsymmetricPowerOptionModel$1 extends com.opengamma.analytics.math.function.Function1D
{
    final com.opengamma.analytics.financial.model.option.definition.AsymmetricPowerOptionDefinition val$definition;
    final com.opengamma.analytics.financial.model.option.pricing.analytic.AsymmetricPowerOptionModel this$0;

    void <init>(com.opengamma.analytics.financial.model.option.pricing.analytic.AsymmetricPowerOptionModel, com.opengamma.analytics.financial.model.option.definition.AsymmetricPowerOptionDefinition)
    {
        com.opengamma.analytics.financial.model.option.pricing.analytic.AsymmetricPowerOptionModel$1 r0;
        com.opengamma.analytics.financial.model.option.pricing.analytic.AsymmetricPowerOptionModel r1;
        com.opengamma.analytics.financial.model.option.definition.AsymmetricPowerOptionDefinition r2;

        r0 := @this: com.opengamma.analytics.financial.model.option.pricing.analytic.AsymmetricPowerOptionModel$1;

        r1 := @parameter0: com.opengamma.analytics.financial.model.option.pricing.analytic.AsymmetricPowerOptionModel;

        r2 := @parameter1: com.opengamma.analytics.financial.model.option.definition.AsymmetricPowerOptionDefinition;

        r0.<com.opengamma.analytics.financial.model.option.pricing.analytic.AsymmetricPowerOptionModel$1: com.opengamma.analytics.financial.model.option.pricing.analytic.AsymmetricPowerOptionModel this$0> = r1;

        r0.<com.opengamma.analytics.financial.model.option.pricing.analytic.AsymmetricPowerOptionModel$1: com.opengamma.analytics.financial.model.option.definition.AsymmetricPowerOptionDefinition val$definition> = r2;

        specialinvoke r0.<com.opengamma.analytics.math.function.Function1D: void <init>()>();

        return;
    }

    public java.lang.Double evaluate(com.opengamma.analytics.financial.model.option.definition.StandardOptionDataBundle)
    {
        com.opengamma.analytics.financial.model.option.pricing.analytic.AsymmetricPowerOptionModel$1 r0;
        com.opengamma.analytics.financial.model.option.definition.StandardOptionDataBundle r1;
        double d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, d10, d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21, $d22, $d23, $d24, $d25, $d26, $d27, $d28, $d29, $d30, $d31, $d32, $d33, $d34, $d35, $d36, $d37, $d38, $d39, $d40, $d41, $d42, $d43, $d44, $d45, $d46, $d47, $d48, $d49;
        com.opengamma.analytics.financial.model.option.definition.AsymmetricPowerOptionDefinition $r2, $r4, $r6, $r7;
        java.lang.Double $r3, $r10, $r12, $r13;
        org.threeten.bp.ZonedDateTime $r5;
        java.lang.Boolean $r8;
        boolean $z0;
        com.opengamma.analytics.math.statistics.distribution.ProbabilityDistribution $r9, $r11;
        byte $b1;

        r0 := @this: com.opengamma.analytics.financial.model.option.pricing.analytic.AsymmetricPowerOptionModel$1;

        r1 := @parameter0: com.opengamma.analytics.financial.model.option.definition.StandardOptionDataBundle;

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object)>(r1);

        d0 = virtualinvoke r1.<com.opengamma.analytics.financial.model.option.definition.StandardOptionDataBundle: double getSpot()>();

        $r2 = r0.<com.opengamma.analytics.financial.model.option.pricing.analytic.AsymmetricPowerOptionModel$1: com.opengamma.analytics.financial.model.option.definition.AsymmetricPowerOptionDefinition val$definition>;

        $r3 = virtualinvoke $r2.<com.opengamma.analytics.financial.model.option.definition.AsymmetricPowerOptionDefinition: java.lang.Double getStrike()>();

        d1 = virtualinvoke $r3.<java.lang.Double: double doubleValue()>();

        $r4 = r0.<com.opengamma.analytics.financial.model.option.pricing.analytic.AsymmetricPowerOptionModel$1: com.opengamma.analytics.financial.model.option.definition.AsymmetricPowerOptionDefinition val$definition>;

        $r5 = virtualinvoke r1.<com.opengamma.analytics.financial.model.option.definition.StandardOptionDataBundle: org.threeten.bp.ZonedDateTime getDate()>();

        d2 = virtualinvoke $r4.<com.opengamma.analytics.financial.model.option.definition.AsymmetricPowerOptionDefinition: double getTimeToExpiry(org.threeten.bp.ZonedDateTime)>($r5);

        d3 = virtualinvoke r1.<com.opengamma.analytics.financial.model.option.definition.StandardOptionDataBundle: double getVolatility(double,double)>(d2, d1);

        d4 = virtualinvoke r1.<com.opengamma.analytics.financial.model.option.definition.StandardOptionDataBundle: double getInterestRate(double)>(d2);

        d5 = virtualinvoke r1.<com.opengamma.analytics.financial.model.option.definition.StandardOptionDataBundle: double getCostOfCarry()>();

        $r6 = r0.<com.opengamma.analytics.financial.model.option.pricing.analytic.AsymmetricPowerOptionModel$1: com.opengamma.analytics.financial.model.option.definition.AsymmetricPowerOptionDefinition val$definition>;

        d6 = virtualinvoke $r6.<com.opengamma.analytics.financial.model.option.definition.AsymmetricPowerOptionDefinition: double getPower()>();

        $d12 = staticinvoke <java.lang.Math: double sqrt(double)>(d2);

        d7 = d3 * $d12;

        $d13 = 1.0 / d6;

        $d14 = staticinvoke <java.lang.Math: double pow(double,double)>(d1, $d13);

        $d15 = d0 / $d14;

        $d16 = staticinvoke <java.lang.Math: double log(double)>($d15);

        $d18 = d3 * d3;

        $d17 = d6 - 0.5;

        $d19 = $d18 * $d17;

        $d20 = d5 + $d19;

        $d21 = d2 * $d20;

        $d22 = $d16 + $d21;

        d8 = $d22 / d7;

        $d23 = d6 * d7;

        d9 = d8 - $d23;

        $r7 = r0.<com.opengamma.analytics.financial.model.option.pricing.analytic.AsymmetricPowerOptionModel$1: com.opengamma.analytics.financial.model.option.definition.AsymmetricPowerOptionDefinition val$definition>;

        $r8 = virtualinvoke $r7.<com.opengamma.analytics.financial.model.option.definition.AsymmetricPowerOptionDefinition: java.lang.Boolean isCall()>();

        $z0 = virtualinvoke $r8.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 == 0 goto label1;

        $b1 = 1;

        goto label2;

     label1:
        $b1 = -1;

     label2:
        $d28 = d6 - 1.0;

        $d24 = d6 * d3;

        $d25 = $d24 * d3;

        $d26 = $d25 * 0.5;

        $d27 = d4 + $d26;

        $d31 = $d28 * $d27;

        $d29 = d4 - d5;

        $d30 = d6 * $d29;

        $d32 = $d31 - $d30;

        $d33 = $d32 * d2;

        d10 = staticinvoke <java.lang.Math: double exp(double)>($d33);

        $d34 = neg d4;

        $d35 = $d34 * d2;

        d11 = staticinvoke <java.lang.Math: double exp(double)>($d35);

        $d36 = (double) $b1;

        $d37 = staticinvoke <java.lang.Math: double pow(double,double)>(d0, d6);

        $d38 = $d37 * d10;

        $r9 = staticinvoke <com.opengamma.analytics.financial.model.option.pricing.analytic.AsymmetricPowerOptionModel: com.opengamma.analytics.math.statistics.distribution.ProbabilityDistribution access$000()>();

        $d39 = (double) $b1;

        $d40 = $d39 * d8;

        $r10 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d40);

        $d41 = interfaceinvoke $r9.<com.opengamma.analytics.math.statistics.distribution.ProbabilityDistribution: double getCDF(java.lang.Object)>($r10);

        $d42 = $d38 * $d41;

        $d43 = d11 * d1;

        $r11 = staticinvoke <com.opengamma.analytics.financial.model.option.pricing.analytic.AsymmetricPowerOptionModel: com.opengamma.analytics.math.statistics.distribution.ProbabilityDistribution access$000()>();

        $d44 = (double) $b1;

        $d45 = $d44 * d9;

        $r12 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d45);

        $d46 = interfaceinvoke $r11.<com.opengamma.analytics.math.statistics.distribution.ProbabilityDistribution: double getCDF(java.lang.Object)>($r12);

        $d47 = $d43 * $d46;

        $d48 = $d42 - $d47;

        $d49 = $d36 * $d48;

        $r13 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d49);

        return $r13;
    }

    public volatile java.lang.Object evaluate(java.lang.Object)
    {
        com.opengamma.analytics.financial.model.option.pricing.analytic.AsymmetricPowerOptionModel$1 r0;
        java.lang.Object r1;
        com.opengamma.analytics.financial.model.option.definition.StandardOptionDataBundle $r2;
        java.lang.Double $r3;

        r0 := @this: com.opengamma.analytics.financial.model.option.pricing.analytic.AsymmetricPowerOptionModel$1;

        r1 := @parameter0: java.lang.Object;

        $r2 = (com.opengamma.analytics.financial.model.option.definition.StandardOptionDataBundle) r1;

        $r3 = virtualinvoke r0.<com.opengamma.analytics.financial.model.option.pricing.analytic.AsymmetricPowerOptionModel$1: java.lang.Double evaluate(com.opengamma.analytics.financial.model.option.definition.StandardOptionDataBundle)>($r2);

        return $r3;
    }
}
