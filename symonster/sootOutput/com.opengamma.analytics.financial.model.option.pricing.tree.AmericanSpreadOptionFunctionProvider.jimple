public class com.opengamma.analytics.financial.model.option.pricing.tree.AmericanSpreadOptionFunctionProvider extends com.opengamma.analytics.financial.model.option.pricing.tree.OptionFunctionProvider2D
{

    public void <init>(double, double, int, boolean)
    {
        com.opengamma.analytics.financial.model.option.pricing.tree.AmericanSpreadOptionFunctionProvider r0;
        double d0, d1;
        int i0;
        boolean z0;

        r0 := @this: com.opengamma.analytics.financial.model.option.pricing.tree.AmericanSpreadOptionFunctionProvider;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        i0 := @parameter2: int;

        z0 := @parameter3: boolean;

        specialinvoke r0.<com.opengamma.analytics.financial.model.option.pricing.tree.OptionFunctionProvider2D: void <init>(double,double,int,boolean)>(d0, d1, i0, z0);

        return;
    }

    public double[][] getPayoffAtExpiry(double, double, double, double)
    {
        com.opengamma.analytics.financial.model.option.pricing.tree.AmericanSpreadOptionFunctionProvider r0;
        double d0, d1, d2, d3, d4, d5, $d6, $d7, $d8, $d9, d10, d11;
        int i0, $i1, i2, i3;
        double[][] r1;
        double[] $r2;

        r0 := @this: com.opengamma.analytics.financial.model.option.pricing.tree.AmericanSpreadOptionFunctionProvider;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        d2 := @parameter2: double;

        d3 := @parameter3: double;

        d4 = virtualinvoke r0.<com.opengamma.analytics.financial.model.option.pricing.tree.AmericanSpreadOptionFunctionProvider: double getStrike()>();

        $i1 = virtualinvoke r0.<com.opengamma.analytics.financial.model.option.pricing.tree.AmericanSpreadOptionFunctionProvider: int getNumberOfSteps()>();

        i0 = $i1 + 1;

        d5 = virtualinvoke r0.<com.opengamma.analytics.financial.model.option.pricing.tree.AmericanSpreadOptionFunctionProvider: double getSign()>();

        r1 = newmultiarray (double)[i0][i0];

        d10 = d0;

        i2 = 0;

     label1:
        if i2 >= i0 goto label4;

        d11 = d1;

        i3 = 0;

     label2:
        if i3 >= i0 goto label3;

        $r2 = r1[i2];

        $d6 = d10 - d11;

        $d7 = $d6 - d4;

        $d8 = d5 * $d7;

        $d9 = staticinvoke <java.lang.Math: double max(double,double)>($d8, 0.0);

        $r2[i3] = $d9;

        d11 = d11 * d3;

        i3 = i3 + 1;

        goto label2;

     label3:
        d10 = d10 * d2;

        i2 = i2 + 1;

        goto label1;

     label4:
        return r1;
    }

    public double[][] getNextOptionValues(double, double, double, double, double, double[][], double, double, double, double, double, double, int)
    {
        com.opengamma.analytics.financial.model.option.pricing.tree.AmericanSpreadOptionFunctionProvider r0;
        double d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, d10, d11, d12, d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21, $d22, $d23, $d24, $d25, $d26, $d27, $d28, $d29, $d30, $d31, $d32, $d33, $d34, d35, d36;
        double[][] r1, r2;
        int i0, i1, $i2, $i3, $i4, $i5, i6, i7;
        double[] $r3, $r4, $r5, $r6, $r7, $r8, $r9;

        r0 := @this: com.opengamma.analytics.financial.model.option.pricing.tree.AmericanSpreadOptionFunctionProvider;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        d2 := @parameter2: double;

        d3 := @parameter3: double;

        d4 := @parameter4: double;

        r1 := @parameter5: double[][];

        d5 := @parameter6: double;

        d6 := @parameter7: double;

        d7 := @parameter8: double;

        d8 := @parameter9: double;

        d9 := @parameter10: double;

        d10 := @parameter11: double;

        i0 := @parameter12: int;

        i1 = i0 + 1;

        d11 = virtualinvoke r0.<com.opengamma.analytics.financial.model.option.pricing.tree.AmericanSpreadOptionFunctionProvider: double getStrike()>();

        d12 = virtualinvoke r0.<com.opengamma.analytics.financial.model.option.pricing.tree.AmericanSpreadOptionFunctionProvider: double getSign()>();

        $d14 = (double) i0;

        $d15 = staticinvoke <java.lang.Math: double pow(double,double)>(d8, $d14);

        d13 = d6 * $d15;

        r2 = newmultiarray (double)[i1][i1];

        $d16 = (double) i0;

        $d17 = staticinvoke <java.lang.Math: double pow(double,double)>(d7, $d16);

        d35 = d5 * $d17;

        i6 = 0;

     label1:
        if i6 >= i1 goto label4;

        d36 = d13;

        i7 = 0;

     label2:
        if i7 >= i1 goto label3;

        $r7 = r2[i6];

        $i2 = i6 + 1;

        $r3 = r1[$i2];

        $i3 = i7 + 1;

        $d18 = $r3[$i3];

        $d21 = d1 * $d18;

        $i4 = i6 + 1;

        $r4 = r1[$i4];

        $d19 = $r4[i7];

        $d20 = d2 * $d19;

        $d24 = $d21 + $d20;

        $r5 = r1[i6];

        $i5 = i7 + 1;

        $d22 = $r5[$i5];

        $d23 = d3 * $d22;

        $d27 = $d24 + $d23;

        $r6 = r1[i6];

        $d25 = $r6[i7];

        $d26 = d4 * $d25;

        $d28 = $d27 + $d26;

        $d29 = d0 * $d28;

        $r7[i7] = $d29;

        $r9 = r2[i6];

        $r8 = r2[i6];

        $d33 = $r8[i7];

        $d30 = d35 - d36;

        $d31 = $d30 - d11;

        $d32 = d12 * $d31;

        $d34 = staticinvoke <java.lang.Math: double max(double,double)>($d33, $d32);

        $r9[i7] = $d34;

        d36 = d36 * d10;

        i7 = i7 + 1;

        goto label2;

     label3:
        d35 = d35 * d9;

        i6 = i6 + 1;

        goto label1;

     label4:
        return r2;
    }

    public double[][] getPayoffAtExpiryTrinomial(double, double, double, double)
    {
        com.opengamma.analytics.financial.model.option.pricing.tree.AmericanSpreadOptionFunctionProvider r0;
        double d0, d1, d2, d3, d4, d5, $d6, $d7, $d8, $d9, d10, d11;
        int i0, $i1, $i2, i3, i4;
        double[][] r1;
        double[] $r2;

        r0 := @this: com.opengamma.analytics.financial.model.option.pricing.tree.AmericanSpreadOptionFunctionProvider;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        d2 := @parameter2: double;

        d3 := @parameter3: double;

        d4 = virtualinvoke r0.<com.opengamma.analytics.financial.model.option.pricing.tree.AmericanSpreadOptionFunctionProvider: double getStrike()>();

        $i1 = virtualinvoke r0.<com.opengamma.analytics.financial.model.option.pricing.tree.AmericanSpreadOptionFunctionProvider: int getNumberOfSteps()>();

        $i2 = 2 * $i1;

        i0 = $i2 + 1;

        d5 = virtualinvoke r0.<com.opengamma.analytics.financial.model.option.pricing.tree.AmericanSpreadOptionFunctionProvider: double getSign()>();

        r1 = newmultiarray (double)[i0][i0];

        d10 = d0;

        i3 = 0;

     label1:
        if i3 >= i0 goto label4;

        d11 = d1;

        i4 = 0;

     label2:
        if i4 >= i0 goto label3;

        $r2 = r1[i3];

        $d6 = d10 - d11;

        $d7 = $d6 - d4;

        $d8 = d5 * $d7;

        $d9 = staticinvoke <java.lang.Math: double max(double,double)>($d8, 0.0);

        $r2[i4] = $d9;

        d11 = d11 * d3;

        i4 = i4 + 1;

        goto label2;

     label3:
        d10 = d10 * d2;

        i3 = i3 + 1;

        goto label1;

     label4:
        return r1;
    }

    public double[][] getNextOptionValues(double, double, double, double, double, double, double, double, double, double, double[][], double, double, double, double, double, double, int)
    {
        com.opengamma.analytics.financial.model.option.pricing.tree.AmericanSpreadOptionFunctionProvider r0;
        double d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, d10, d11, d12, d13, d14, d15, d16, d17, d18, $d19, $d20, $d21, $d22, $d23, $d24, $d25, $d26, $d27, $d28, $d29, $d30, $d31, $d32, $d33, $d34, $d35, $d36, $d37, $d38, $d39, $d40, $d41, $d42, $d43, $d44, $d45, $d46, $d47, $d48, $d49, $d50, $d51, $d52, $d53, $d54, d55, d56;
        double[][] r1, r2;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, i15, i16;
        double[] $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14;

        r0 := @this: com.opengamma.analytics.financial.model.option.pricing.tree.AmericanSpreadOptionFunctionProvider;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        d2 := @parameter2: double;

        d3 := @parameter3: double;

        d4 := @parameter4: double;

        d5 := @parameter5: double;

        d6 := @parameter6: double;

        d7 := @parameter7: double;

        d8 := @parameter8: double;

        d9 := @parameter9: double;

        r1 := @parameter10: double[][];

        d10 := @parameter11: double;

        d11 := @parameter12: double;

        d12 := @parameter13: double;

        d13 := @parameter14: double;

        d14 := @parameter15: double;

        d15 := @parameter16: double;

        i0 := @parameter17: int;

        $i2 = 2 * i0;

        i1 = $i2 + 1;

        d16 = virtualinvoke r0.<com.opengamma.analytics.financial.model.option.pricing.tree.AmericanSpreadOptionFunctionProvider: double getStrike()>();

        d17 = virtualinvoke r0.<com.opengamma.analytics.financial.model.option.pricing.tree.AmericanSpreadOptionFunctionProvider: double getSign()>();

        $d19 = (double) i0;

        $d20 = staticinvoke <java.lang.Math: double pow(double,double)>(d13, $d19);

        d18 = d11 * $d20;

        r2 = newmultiarray (double)[i1][i1];

        $d21 = (double) i0;

        $d22 = staticinvoke <java.lang.Math: double pow(double,double)>(d12, $d21);

        d55 = d10 * $d22;

        i15 = 0;

     label1:
        if i15 >= i1 goto label4;

        d56 = d18;

        i16 = 0;

     label2:
        if i16 >= i1 goto label3;

        $r12 = r2[i15];

        $i3 = i15 + 2;

        $r3 = r1[$i3];

        $i4 = i16 + 2;

        $d23 = $r3[$i4];

        $d26 = d1 * $d23;

        $i5 = i15 + 2;

        $r4 = r1[$i5];

        $i6 = i16 + 1;

        $d24 = $r4[$i6];

        $d25 = d2 * $d24;

        $d29 = $d26 + $d25;

        $i7 = i15 + 2;

        $r5 = r1[$i7];

        $d27 = $r5[i16];

        $d28 = d3 * $d27;

        $d32 = $d29 + $d28;

        $i8 = i15 + 1;

        $r6 = r1[$i8];

        $i9 = i16 + 2;

        $d30 = $r6[$i9];

        $d31 = d4 * $d30;

        $d35 = $d32 + $d31;

        $i10 = i15 + 1;

        $r7 = r1[$i10];

        $i11 = i16 + 1;

        $d33 = $r7[$i11];

        $d34 = d5 * $d33;

        $d38 = $d35 + $d34;

        $i12 = i15 + 1;

        $r8 = r1[$i12];

        $d36 = $r8[i16];

        $d37 = d6 * $d36;

        $d41 = $d38 + $d37;

        $r9 = r1[i15];

        $i13 = i16 + 2;

        $d39 = $r9[$i13];

        $d40 = d7 * $d39;

        $d44 = $d41 + $d40;

        $r10 = r1[i15];

        $i14 = i16 + 1;

        $d42 = $r10[$i14];

        $d43 = d8 * $d42;

        $d47 = $d44 + $d43;

        $r11 = r1[i15];

        $d45 = $r11[i16];

        $d46 = d9 * $d45;

        $d48 = $d47 + $d46;

        $d49 = d0 * $d48;

        $r12[i16] = $d49;

        $r14 = r2[i15];

        $r13 = r2[i15];

        $d53 = $r13[i16];

        $d50 = d55 - d56;

        $d51 = $d50 - d16;

        $d52 = d17 * $d51;

        $d54 = staticinvoke <java.lang.Math: double max(double,double)>($d53, $d52);

        $r14[i16] = $d54;

        d56 = d56 * d15;

        i16 = i16 + 1;

        goto label2;

     label3:
        d55 = d55 * d14;

        i15 = i15 + 1;

        goto label1;

     label4:
        return r2;
    }

    public int hashCode()
    {
        com.opengamma.analytics.financial.model.option.pricing.tree.AmericanSpreadOptionFunctionProvider r0;
        int $i0;

        r0 := @this: com.opengamma.analytics.financial.model.option.pricing.tree.AmericanSpreadOptionFunctionProvider;

        $i0 = specialinvoke r0.<com.opengamma.analytics.financial.model.option.pricing.tree.OptionFunctionProvider2D: int hashCode()>();

        return $i0;
    }

    public boolean equals(java.lang.Object)
    {
        com.opengamma.analytics.financial.model.option.pricing.tree.AmericanSpreadOptionFunctionProvider r0;
        java.lang.Object r1;
        boolean $z0, $z1;

        r0 := @this: com.opengamma.analytics.financial.model.option.pricing.tree.AmericanSpreadOptionFunctionProvider;

        r1 := @parameter0: java.lang.Object;

        if r0 != r1 goto label1;

        return 1;

     label1:
        if r1 != null goto label2;

        return 0;

     label2:
        $z0 = r1 instanceof com.opengamma.analytics.financial.model.option.pricing.tree.AmericanSpreadOptionFunctionProvider;

        if $z0 != 0 goto label3;

        return 0;

     label3:
        $z1 = specialinvoke r0.<com.opengamma.analytics.financial.model.option.pricing.tree.OptionFunctionProvider2D: boolean equals(java.lang.Object)>(r1);

        return $z1;
    }
}
