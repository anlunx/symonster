public final class com.opengamma.analytics.financial.forex.method.ForexOptionDigitalBlackMethod extends java.lang.Object implements com.opengamma.analytics.financial.forex.method.ForexPricingMethod
{
    private static final com.opengamma.analytics.financial.forex.method.ForexOptionDigitalBlackMethod INSTANCE;
    private static final com.opengamma.analytics.math.statistics.distribution.ProbabilityDistribution NORMAL;

    public static com.opengamma.analytics.financial.forex.method.ForexOptionDigitalBlackMethod getInstance()
    {
        com.opengamma.analytics.financial.forex.method.ForexOptionDigitalBlackMethod $r0;

        $r0 = <com.opengamma.analytics.financial.forex.method.ForexOptionDigitalBlackMethod: com.opengamma.analytics.financial.forex.method.ForexOptionDigitalBlackMethod INSTANCE>;

        return $r0;
    }

    private void <init>()
    {
        com.opengamma.analytics.financial.forex.method.ForexOptionDigitalBlackMethod r0;

        r0 := @this: com.opengamma.analytics.financial.forex.method.ForexOptionDigitalBlackMethod;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public com.opengamma.util.money.MultipleCurrencyAmount presentValue(com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital, com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle)
    {
        com.opengamma.analytics.financial.forex.method.ForexOptionDigitalBlackMethod r0;
        com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital r1;
        com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle r2;
        double d0, d1, d2, d3, d4, d5, d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, d15, d16, d17, d18, $d19, d20, $d21, $d22, $d23, $d24, $d25, $d26, $d27, $d28, $d29, $d30, $d31, $d32;
        com.opengamma.util.money.CurrencyAmount r3;
        com.opengamma.util.money.Currency $r6, $r7, r38, r39;
        boolean $z0, $z1, $z2, $z3, $z4;
        com.opengamma.analytics.financial.forex.derivative.Forex $r8, $r9, $r10, $r14, $r15, $r19, $r20, $r24, $r25, $r26, $r30, $r31, $r35, $r36;
        com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed $r11, $r16, $r21, $r27, $r32, $r37;
        java.lang.String $r12, $r17, $r28, $r33;
        com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve $r13, $r18, $r29, $r34;
        com.opengamma.util.money.CurrencyAmount[] $r22;
        com.opengamma.util.money.MultipleCurrencyAmount $r23;
        com.opengamma.analytics.financial.forex.method.FXMatrix $r40;
        com.opengamma.analytics.math.statistics.distribution.ProbabilityDistribution $r41;
        java.lang.Double $r42;

        r0 := @this: com.opengamma.analytics.financial.forex.method.ForexOptionDigitalBlackMethod;

        r1 := @parameter0: com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital;

        r2 := @parameter1: com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "Forex option");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, "Smile");

        $r6 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: com.opengamma.util.money.Currency getCurrency1()>();

        $r7 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: com.opengamma.util.money.Currency getCurrency2()>();

        $z0 = virtualinvoke r2.<com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle: boolean checkCurrencies(com.opengamma.util.money.Currency,com.opengamma.util.money.Currency)>($r6, $r7);

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z0, "Option currencies not compatible with smile data");

        d0 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: double getExpirationTime()>();

        $z1 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: boolean payDomestic()>();

        if $z1 == 0 goto label3;

        $r24 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        r38 = virtualinvoke $r24.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.util.money.Currency getCurrency2()>();

        $r25 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        r39 = virtualinvoke $r25.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.util.money.Currency getCurrency1()>();

        $r26 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        $r27 = virtualinvoke $r26.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed getPaymentCurrency2()>();

        $r28 = virtualinvoke $r27.<com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed: java.lang.String getFundingCurveName()>();

        $r29 = virtualinvoke r2.<com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle: com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve getCurve(java.lang.String)>($r28);

        $r30 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        $d12 = virtualinvoke $r30.<com.opengamma.analytics.financial.forex.derivative.Forex: double getPaymentTime()>();

        d15 = virtualinvoke $r29.<com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve: double getDiscountFactor(double)>($d12);

        $r31 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        $r32 = virtualinvoke $r31.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed getPaymentCurrency1()>();

        $r33 = virtualinvoke $r32.<com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed: java.lang.String getFundingCurveName()>();

        $r34 = virtualinvoke r2.<com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle: com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve getCurve(java.lang.String)>($r33);

        $r35 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        $d13 = virtualinvoke $r35.<com.opengamma.analytics.financial.forex.derivative.Forex: double getPaymentTime()>();

        d16 = virtualinvoke $r34.<com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve: double getDiscountFactor(double)>($d13);

        d17 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: double getStrike()>();

        $r36 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        $r37 = virtualinvoke $r36.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed getPaymentCurrency2()>();

        $d14 = virtualinvoke $r37.<com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed: double getAmount()>();

        d18 = staticinvoke <java.lang.Math: double abs(double)>($d14);

        $z3 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: boolean isCall()>();

        if $z3 == 0 goto label1;

        $d19 = 1.0;

        goto label2;

     label1:
        $d19 = -1.0;

     label2:
        d20 = $d19;

        goto label6;

     label3:
        $d7 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: double getStrike()>();

        d17 = 1.0 / $d7;

        $r8 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        r38 = virtualinvoke $r8.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.util.money.Currency getCurrency1()>();

        $r9 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        r39 = virtualinvoke $r9.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.util.money.Currency getCurrency2()>();

        $r10 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        $r11 = virtualinvoke $r10.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed getPaymentCurrency1()>();

        $r12 = virtualinvoke $r11.<com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed: java.lang.String getFundingCurveName()>();

        $r13 = virtualinvoke r2.<com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle: com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve getCurve(java.lang.String)>($r12);

        $r14 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        $d8 = virtualinvoke $r14.<com.opengamma.analytics.financial.forex.derivative.Forex: double getPaymentTime()>();

        d15 = virtualinvoke $r13.<com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve: double getDiscountFactor(double)>($d8);

        $r15 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        $r16 = virtualinvoke $r15.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed getPaymentCurrency2()>();

        $r17 = virtualinvoke $r16.<com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed: java.lang.String getFundingCurveName()>();

        $r18 = virtualinvoke r2.<com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle: com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve getCurve(java.lang.String)>($r17);

        $r19 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        $d9 = virtualinvoke $r19.<com.opengamma.analytics.financial.forex.derivative.Forex: double getPaymentTime()>();

        d16 = virtualinvoke $r18.<com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve: double getDiscountFactor(double)>($d9);

        $r20 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        $r21 = virtualinvoke $r20.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed getPaymentCurrency1()>();

        $d10 = virtualinvoke $r21.<com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed: double getAmount()>();

        d18 = staticinvoke <java.lang.Math: double abs(double)>($d10);

        $z2 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: boolean isCall()>();

        if $z2 == 0 goto label4;

        $d21 = -1.0;

        goto label5;

     label4:
        $d21 = 1.0;

     label5:
        d20 = $d21;

     label6:
        $r40 = virtualinvoke r2.<com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle: com.opengamma.analytics.financial.forex.method.FXMatrix getFxRates()>();

        d1 = virtualinvoke $r40.<com.opengamma.analytics.financial.forex.method.FXMatrix: double getFxRate(com.opengamma.util.money.Currency,com.opengamma.util.money.Currency)>(r39, r38);

        $d22 = d1 * d16;

        d2 = $d22 / d15;

        $d23 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: double getExpirationTime()>();

        d3 = staticinvoke <com.opengamma.analytics.financial.forex.method.FXVolatilityUtils: double getVolatility(com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle,com.opengamma.util.money.Currency,com.opengamma.util.money.Currency,double,double,double)>(r2, r39, r38, $d23, d2, d2);

        $d24 = staticinvoke <java.lang.Math: double sqrt(double)>(d0);

        d4 = d3 * $d24;

        $d25 = d2 / d17;

        $d26 = staticinvoke <java.lang.Math: double log(double)>($d25);

        $d27 = $d26 / d4;

        $d28 = 0.5 * d4;

        d5 = $d27 - $d28;

        $d29 = d18 * d15;

        $r41 = <com.opengamma.analytics.financial.forex.method.ForexOptionDigitalBlackMethod: com.opengamma.analytics.math.statistics.distribution.ProbabilityDistribution NORMAL>;

        $d30 = d20 * d5;

        $r42 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d30);

        $d31 = interfaceinvoke $r41.<com.opengamma.analytics.math.statistics.distribution.ProbabilityDistribution: double getCDF(java.lang.Object)>($r42);

        $d11 = $d29 * $d31;

        $z4 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: boolean isLong()>();

        if $z4 == 0 goto label7;

        $d32 = 1.0;

        goto label8;

     label7:
        $d32 = -1.0;

     label8:
        d6 = $d11 * $d32;

        r3 = staticinvoke <com.opengamma.util.money.CurrencyAmount: com.opengamma.util.money.CurrencyAmount of(com.opengamma.util.money.Currency,double)>(r38, d6);

        $r22 = newarray (com.opengamma.util.money.CurrencyAmount)[1];

        $r22[0] = r3;

        $r23 = staticinvoke <com.opengamma.util.money.MultipleCurrencyAmount: com.opengamma.util.money.MultipleCurrencyAmount of(com.opengamma.util.money.CurrencyAmount[])>($r22);

        return $r23;
    }

    public com.opengamma.util.money.MultipleCurrencyAmount presentValue(com.opengamma.analytics.financial.interestrate.InstrumentDerivative, com.opengamma.analytics.financial.interestrate.YieldCurveBundle)
    {
        com.opengamma.analytics.financial.forex.method.ForexOptionDigitalBlackMethod r0;
        com.opengamma.analytics.financial.interestrate.InstrumentDerivative r1;
        com.opengamma.analytics.financial.interestrate.YieldCurveBundle r2;
        boolean $z0, $z1;
        com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle $r3;
        com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital $r4;
        com.opengamma.util.money.MultipleCurrencyAmount $r5;

        r0 := @this: com.opengamma.analytics.financial.forex.method.ForexOptionDigitalBlackMethod;

        r1 := @parameter0: com.opengamma.analytics.financial.interestrate.InstrumentDerivative;

        r2 := @parameter1: com.opengamma.analytics.financial.interestrate.YieldCurveBundle;

        $z0 = r1 instanceof com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z0, "Digital Forex option");

        $z1 = r2 instanceof com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z1, "Smile delta data bundle required");

        $r4 = (com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital) r1;

        $r3 = (com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle) r2;

        $r5 = virtualinvoke r0.<com.opengamma.analytics.financial.forex.method.ForexOptionDigitalBlackMethod: com.opengamma.util.money.MultipleCurrencyAmount presentValue(com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital,com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle)>($r4, $r3);

        return $r5;
    }

    public com.opengamma.util.money.MultipleCurrencyAmount currencyExposure(com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital, com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle)
    {
        com.opengamma.analytics.financial.forex.method.ForexOptionDigitalBlackMethod r0;
        com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital r1;
        com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle r2;
        double d0, d1, d2, d3, d4, d5, d6, d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21, $d22, $d23, $d24, d25, d26, d27, d28, $d29, d30, $d31, $d32, $d33, $d34, $d35, $d36, $d37, $d38, $d39, $d40, $d41, $d42, $d43;
        com.opengamma.util.money.CurrencyAmount[] r3;
        com.opengamma.util.money.Currency $r6, $r7, r41, r42;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        com.opengamma.analytics.financial.forex.derivative.Forex $r8, $r9, $r10, $r14, $r15, $r19, $r20, $r27, $r28, $r29, $r33, $r34, $r38, $r39;
        com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed $r11, $r16, $r21, $r30, $r35, $r40;
        java.lang.String $r12, $r17, $r31, $r36;
        com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve $r13, $r18, $r32, $r37;
        com.opengamma.analytics.math.statistics.distribution.ProbabilityDistribution $r22, $r44;
        java.lang.Double $r23, $r45;
        com.opengamma.util.money.CurrencyAmount $r24, $r25;
        com.opengamma.util.money.MultipleCurrencyAmount $r26;
        com.opengamma.analytics.financial.forex.method.FXMatrix $r43;

        r0 := @this: com.opengamma.analytics.financial.forex.method.ForexOptionDigitalBlackMethod;

        r1 := @parameter0: com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital;

        r2 := @parameter1: com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "Forex option");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, "Smile");

        $r6 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: com.opengamma.util.money.Currency getCurrency1()>();

        $r7 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: com.opengamma.util.money.Currency getCurrency2()>();

        $z0 = virtualinvoke r2.<com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle: boolean checkCurrencies(com.opengamma.util.money.Currency,com.opengamma.util.money.Currency)>($r6, $r7);

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z0, "Option currencies not compatible with smile data");

        d0 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: double getExpirationTime()>();

        $z1 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: boolean payDomestic()>();

        if $z1 == 0 goto label03;

        $r27 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        r41 = virtualinvoke $r27.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.util.money.Currency getCurrency2()>();

        $r28 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        r42 = virtualinvoke $r28.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.util.money.Currency getCurrency1()>();

        $r29 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        $r30 = virtualinvoke $r29.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed getPaymentCurrency2()>();

        $r31 = virtualinvoke $r30.<com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed: java.lang.String getFundingCurveName()>();

        $r32 = virtualinvoke r2.<com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle: com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve getCurve(java.lang.String)>($r31);

        $r33 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        $d22 = virtualinvoke $r33.<com.opengamma.analytics.financial.forex.derivative.Forex: double getPaymentTime()>();

        d25 = virtualinvoke $r32.<com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve: double getDiscountFactor(double)>($d22);

        $r34 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        $r35 = virtualinvoke $r34.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed getPaymentCurrency1()>();

        $r36 = virtualinvoke $r35.<com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed: java.lang.String getFundingCurveName()>();

        $r37 = virtualinvoke r2.<com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle: com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve getCurve(java.lang.String)>($r36);

        $r38 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        $d23 = virtualinvoke $r38.<com.opengamma.analytics.financial.forex.derivative.Forex: double getPaymentTime()>();

        d26 = virtualinvoke $r37.<com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve: double getDiscountFactor(double)>($d23);

        d27 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: double getStrike()>();

        $r39 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        $r40 = virtualinvoke $r39.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed getPaymentCurrency2()>();

        $d24 = virtualinvoke $r40.<com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed: double getAmount()>();

        d28 = staticinvoke <java.lang.Math: double abs(double)>($d24);

        $z4 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: boolean isCall()>();

        if $z4 == 0 goto label01;

        $d29 = 1.0;

        goto label02;

     label01:
        $d29 = -1.0;

     label02:
        d30 = $d29;

        goto label06;

     label03:
        $d8 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: double getStrike()>();

        d27 = 1.0 / $d8;

        $r8 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        r41 = virtualinvoke $r8.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.util.money.Currency getCurrency1()>();

        $r9 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        r42 = virtualinvoke $r9.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.util.money.Currency getCurrency2()>();

        $r10 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        $r11 = virtualinvoke $r10.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed getPaymentCurrency1()>();

        $r12 = virtualinvoke $r11.<com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed: java.lang.String getFundingCurveName()>();

        $r13 = virtualinvoke r2.<com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle: com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve getCurve(java.lang.String)>($r12);

        $r14 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        $d9 = virtualinvoke $r14.<com.opengamma.analytics.financial.forex.derivative.Forex: double getPaymentTime()>();

        d25 = virtualinvoke $r13.<com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve: double getDiscountFactor(double)>($d9);

        $r15 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        $r16 = virtualinvoke $r15.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed getPaymentCurrency2()>();

        $r17 = virtualinvoke $r16.<com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed: java.lang.String getFundingCurveName()>();

        $r18 = virtualinvoke r2.<com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle: com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve getCurve(java.lang.String)>($r17);

        $r19 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        $d10 = virtualinvoke $r19.<com.opengamma.analytics.financial.forex.derivative.Forex: double getPaymentTime()>();

        d26 = virtualinvoke $r18.<com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve: double getDiscountFactor(double)>($d10);

        $r20 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        $r21 = virtualinvoke $r20.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed getPaymentCurrency1()>();

        $d11 = virtualinvoke $r21.<com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed: double getAmount()>();

        d28 = staticinvoke <java.lang.Math: double abs(double)>($d11);

        $z2 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: boolean isCall()>();

        if $z2 == 0 goto label04;

        $d31 = -1.0;

        goto label05;

     label04:
        $d31 = 1.0;

     label05:
        d30 = $d31;

     label06:
        $r43 = virtualinvoke r2.<com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle: com.opengamma.analytics.financial.forex.method.FXMatrix getFxRates()>();

        d1 = virtualinvoke $r43.<com.opengamma.analytics.financial.forex.method.FXMatrix: double getFxRate(com.opengamma.util.money.Currency,com.opengamma.util.money.Currency)>(r42, r41);

        $d32 = d1 * d26;

        d2 = $d32 / d25;

        $d33 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: double getExpirationTime()>();

        d3 = staticinvoke <com.opengamma.analytics.financial.forex.method.FXVolatilityUtils: double getVolatility(com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle,com.opengamma.util.money.Currency,com.opengamma.util.money.Currency,double,double,double)>(r2, r42, r41, $d33, d2, d2);

        $d34 = staticinvoke <java.lang.Math: double sqrt(double)>(d0);

        d4 = d3 * $d34;

        $d35 = d2 / d27;

        $d36 = staticinvoke <java.lang.Math: double log(double)>($d35);

        $d37 = $d36 / d4;

        $d38 = 0.5 * d4;

        d5 = $d37 - $d38;

        $d39 = d28 * d25;

        $r44 = <com.opengamma.analytics.financial.forex.method.ForexOptionDigitalBlackMethod: com.opengamma.analytics.math.statistics.distribution.ProbabilityDistribution NORMAL>;

        $d40 = d30 * d5;

        $r45 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d40);

        $d41 = interfaceinvoke $r44.<com.opengamma.analytics.math.statistics.distribution.ProbabilityDistribution: double getCDF(java.lang.Object)>($r45);

        $d12 = $d39 * $d41;

        $z5 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: boolean isLong()>();

        if $z5 == 0 goto label07;

        $d42 = 1.0;

        goto label08;

     label07:
        $d42 = -1.0;

     label08:
        d6 = $d12 * $d42;

        $d13 = d28 * d25;

        $r22 = <com.opengamma.analytics.financial.forex.method.ForexOptionDigitalBlackMethod: com.opengamma.analytics.math.statistics.distribution.ProbabilityDistribution NORMAL>;

        $r23 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d5);

        $d14 = interfaceinvoke $r22.<com.opengamma.analytics.math.statistics.distribution.ProbabilityDistribution: double getPDF(java.lang.Object)>($r23);

        $d15 = $d13 * $d14;

        $d17 = $d15 * d30;

        $d16 = d4 * d1;

        $d18 = $d17 / $d16;

        $z3 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: boolean isLong()>();

        if $z3 == 0 goto label09;

        $d43 = 1.0;

        goto label10;

     label09:
        $d43 = -1.0;

     label10:
        d7 = $d18 * $d43;

        r3 = newarray (com.opengamma.util.money.CurrencyAmount)[2];

        $r24 = staticinvoke <com.opengamma.util.money.CurrencyAmount: com.opengamma.util.money.CurrencyAmount of(com.opengamma.util.money.Currency,double)>(r42, d7);

        r3[0] = $r24;

        $d19 = neg d7;

        $d20 = $d19 * d1;

        $d21 = $d20 + d6;

        $r25 = staticinvoke <com.opengamma.util.money.CurrencyAmount: com.opengamma.util.money.CurrencyAmount of(com.opengamma.util.money.Currency,double)>(r41, $d21);

        r3[1] = $r25;

        $r26 = staticinvoke <com.opengamma.util.money.MultipleCurrencyAmount: com.opengamma.util.money.MultipleCurrencyAmount of(com.opengamma.util.money.CurrencyAmount[])>(r3);

        return $r26;
    }

    public com.opengamma.util.money.MultipleCurrencyAmount currencyExposure(com.opengamma.analytics.financial.interestrate.InstrumentDerivative, com.opengamma.analytics.financial.interestrate.YieldCurveBundle)
    {
        com.opengamma.analytics.financial.forex.method.ForexOptionDigitalBlackMethod r0;
        com.opengamma.analytics.financial.interestrate.InstrumentDerivative r1;
        com.opengamma.analytics.financial.interestrate.YieldCurveBundle r2;
        boolean $z0, $z1;
        com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle $r3;
        com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital $r4;
        com.opengamma.util.money.MultipleCurrencyAmount $r5;

        r0 := @this: com.opengamma.analytics.financial.forex.method.ForexOptionDigitalBlackMethod;

        r1 := @parameter0: com.opengamma.analytics.financial.interestrate.InstrumentDerivative;

        r2 := @parameter1: com.opengamma.analytics.financial.interestrate.YieldCurveBundle;

        $z0 = r1 instanceof com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z0, "Digital Forex option");

        $z1 = r2 instanceof com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z1, "Smile delta data bundle required");

        $r4 = (com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital) r1;

        $r3 = (com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle) r2;

        $r5 = virtualinvoke r0.<com.opengamma.analytics.financial.forex.method.ForexOptionDigitalBlackMethod: com.opengamma.util.money.MultipleCurrencyAmount currencyExposure(com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital,com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle)>($r4, $r3);

        return $r5;
    }

    public com.opengamma.analytics.financial.forex.method.MultipleCurrencyInterestRateCurveSensitivity presentValueCurveSensitivity(com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital, com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle)
    {
        com.opengamma.analytics.financial.forex.method.ForexOptionDigitalBlackMethod r0;
        com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital r1;
        com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle r2;
        double d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, d11, d12, d13, d14, d15, d16, $d17, $d18, $d19, $d20, $d21, $d22, $d23, $d24, $d25, $d26, $d27, $d28, $d29, $d30, $d31, $d32, $d33, $d34, $d35, $d36, $d37, $d38, $d39, $d40, d41, d42, $d43, d44, $d45, $d46, $d47, $d48, $d49, $d50, $d51, $d52, $d53, $d54, $d55, $d56, $d57;
        com.opengamma.util.money.Currency $r9, $r10, r43, r44;
        boolean $z0, $z1, $z2, $z3, $z6, $z7;
        com.opengamma.analytics.financial.forex.derivative.Forex $r11, $r12, $r14, $r16, $r17, $r18, $r33, $r35, $r37, $r38, $r39;
        com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed $r13, $r15, $r19, $r34, $r36, $r40;
        com.opengamma.analytics.math.statistics.distribution.ProbabilityDistribution $r20, $r48;
        java.lang.Double $r21, $r49;
        java.util.ArrayList $r22, $r27;
        com.opengamma.util.tuple.DoublesPair $r23, $r28;
        java.util.HashMap $r24, $r29;
        com.opengamma.analytics.financial.interestrate.InterestRateCurveSensitivity $r26, $r31, r51;
        com.opengamma.analytics.financial.forex.method.MultipleCurrencyInterestRateCurveSensitivity $r32;
        java.lang.String r41, r42;
        com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve $r45, $r46;
        com.opengamma.analytics.financial.forex.method.FXMatrix $r47;

        r0 := @this: com.opengamma.analytics.financial.forex.method.ForexOptionDigitalBlackMethod;

        r1 := @parameter0: com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital;

        r2 := @parameter1: com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "Forex option");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, "Smile");

        $r9 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: com.opengamma.util.money.Currency getCurrency1()>();

        $r10 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: com.opengamma.util.money.Currency getCurrency2()>();

        $z0 = virtualinvoke r2.<com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle: boolean checkCurrencies(com.opengamma.util.money.Currency,com.opengamma.util.money.Currency)>($r9, $r10);

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z0, "Option currencies not compatible with smile data");

        $r11 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        d0 = virtualinvoke $r11.<com.opengamma.analytics.financial.forex.derivative.Forex: double getPaymentTime()>();

        d1 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: double getExpirationTime()>();

        $z1 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: boolean payDomestic()>();

        if $z1 == 0 goto label03;

        $r33 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        $r34 = virtualinvoke $r33.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed getPaymentCurrency1()>();

        r41 = virtualinvoke $r34.<com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed: java.lang.String getFundingCurveName()>();

        $r35 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        $r36 = virtualinvoke $r35.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed getPaymentCurrency2()>();

        r42 = virtualinvoke $r36.<com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed: java.lang.String getFundingCurveName()>();

        $r37 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        r43 = virtualinvoke $r37.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.util.money.Currency getCurrency2()>();

        $r38 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        r44 = virtualinvoke $r38.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.util.money.Currency getCurrency1()>();

        d41 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: double getStrike()>();

        $r39 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        $r40 = virtualinvoke $r39.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed getPaymentCurrency2()>();

        $d40 = virtualinvoke $r40.<com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed: double getAmount()>();

        d42 = staticinvoke <java.lang.Math: double abs(double)>($d40);

        $z6 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: boolean isCall()>();

        if $z6 == 0 goto label01;

        $d43 = 1.0;

        goto label02;

     label01:
        $d43 = -1.0;

     label02:
        d44 = $d43;

        goto label06;

     label03:
        $r12 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        $r13 = virtualinvoke $r12.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed getPaymentCurrency2()>();

        r41 = virtualinvoke $r13.<com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed: java.lang.String getFundingCurveName()>();

        $r14 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        $r15 = virtualinvoke $r14.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed getPaymentCurrency1()>();

        r42 = virtualinvoke $r15.<com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed: java.lang.String getFundingCurveName()>();

        $d17 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: double getStrike()>();

        d41 = 1.0 / $d17;

        $r16 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        r43 = virtualinvoke $r16.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.util.money.Currency getCurrency1()>();

        $r17 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        r44 = virtualinvoke $r17.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.util.money.Currency getCurrency2()>();

        $r18 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        $r19 = virtualinvoke $r18.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed getPaymentCurrency1()>();

        $d18 = virtualinvoke $r19.<com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed: double getAmount()>();

        d42 = staticinvoke <java.lang.Math: double abs(double)>($d18);

        $z2 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: boolean isCall()>();

        if $z2 == 0 goto label04;

        $d45 = -1.0;

        goto label05;

     label04:
        $d45 = 1.0;

     label05:
        d44 = $d45;

     label06:
        $r45 = virtualinvoke r2.<com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle: com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve getCurve(java.lang.String)>(r42);

        d2 = virtualinvoke $r45.<com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve: double getDiscountFactor(double)>(d0);

        $r46 = virtualinvoke r2.<com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle: com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve getCurve(java.lang.String)>(r41);

        d3 = virtualinvoke $r46.<com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve: double getDiscountFactor(double)>(d0);

        $r47 = virtualinvoke r2.<com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle: com.opengamma.analytics.financial.forex.method.FXMatrix getFxRates()>();

        d4 = virtualinvoke $r47.<com.opengamma.analytics.financial.forex.method.FXMatrix: double getFxRate(com.opengamma.util.money.Currency,com.opengamma.util.money.Currency)>(r44, r43);

        $d46 = d4 * d3;

        d5 = $d46 / d2;

        $d47 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: double getExpirationTime()>();

        d6 = staticinvoke <com.opengamma.analytics.financial.forex.method.FXVolatilityUtils: double getVolatility(com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle,com.opengamma.util.money.Currency,com.opengamma.util.money.Currency,double,double,double)>(r2, r44, r43, $d47, d5, d5);

        $d48 = staticinvoke <java.lang.Math: double sqrt(double)>(d1);

        d7 = d6 * $d48;

        $d49 = d5 / d41;

        $d50 = staticinvoke <java.lang.Math: double log(double)>($d49);

        $d51 = $d50 / d7;

        $d52 = 0.5 * d7;

        d8 = $d51 - $d52;

        $d53 = d42 * d2;

        $r48 = <com.opengamma.analytics.financial.forex.method.ForexOptionDigitalBlackMethod: com.opengamma.analytics.math.statistics.distribution.ProbabilityDistribution NORMAL>;

        $d54 = d44 * d8;

        $r49 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d54);

        $d55 = interfaceinvoke $r48.<com.opengamma.analytics.math.statistics.distribution.ProbabilityDistribution: double getCDF(java.lang.Object)>($r49);

        $d19 = $d53 * $d55;

        $z7 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: boolean isLong()>();

        if $z7 == 0 goto label07;

        $d56 = 1.0;

        goto label08;

     label07:
        $d56 = -1.0;

     label08:
        d9 = $d19 * $d56;

        $d21 = d42 * d2;

        $r20 = <com.opengamma.analytics.financial.forex.method.ForexOptionDigitalBlackMethod: com.opengamma.analytics.math.statistics.distribution.ProbabilityDistribution NORMAL>;

        $d20 = d44 * d8;

        $r21 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d20);

        $d22 = interfaceinvoke $r20.<com.opengamma.analytics.math.statistics.distribution.ProbabilityDistribution: double getPDF(java.lang.Object)>($r21);

        $d23 = $d21 * $d22;

        $z3 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: boolean isLong()>();

        if $z3 == 0 goto label09;

        $d57 = 1.0;

        goto label10;

     label09:
        $d57 = -1.0;

     label10:
        $d24 = $d23 * $d57;

        $d25 = $d24 * d44;

        d11 = $d25 * 1.0;

        $d26 = d5 * d7;

        $d27 = 1.0 / $d26;

        d12 = $d27 * d11;

        $d28 = d4 / d2;

        d13 = $d28 * d12;

        $d30 = neg d4;

        $d29 = d2 * d2;

        $d31 = $d30 / $d29;

        $d32 = $d31 * d3;

        $d35 = $d32 * d12;

        $d33 = d9 / d2;

        $d34 = $d33 * 1.0;

        d14 = $d35 + $d34;

        $d36 = neg d0;

        $d37 = $d36 * d3;

        d15 = $d37 * d13;

        $d38 = neg d0;

        $d39 = $d38 * d2;

        d16 = $d39 * d14;

        $r22 = new java.util.ArrayList;

        specialinvoke $r22.<java.util.ArrayList: void <init>()>();

        $r23 = staticinvoke <com.opengamma.util.tuple.DoublesPair: com.opengamma.util.tuple.DoublesPair of(double,double)>(d0, d15);

        interfaceinvoke $r22.<java.util.List: boolean add(java.lang.Object)>($r23);

        $r24 = new java.util.HashMap;

        specialinvoke $r24.<java.util.HashMap: void <init>()>();

        interfaceinvoke $r24.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r41, $r22);

        $r26 = new com.opengamma.analytics.financial.interestrate.InterestRateCurveSensitivity;

        specialinvoke $r26.<com.opengamma.analytics.financial.interestrate.InterestRateCurveSensitivity: void <init>(java.util.Map)>($r24);

        $r27 = new java.util.ArrayList;

        specialinvoke $r27.<java.util.ArrayList: void <init>()>();

        $r28 = staticinvoke <com.opengamma.util.tuple.DoublesPair: com.opengamma.util.tuple.DoublesPair of(double,double)>(d0, d16);

        interfaceinvoke $r27.<java.util.List: boolean add(java.lang.Object)>($r28);

        $r29 = new java.util.HashMap;

        specialinvoke $r29.<java.util.HashMap: void <init>()>();

        interfaceinvoke $r29.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r42, $r27);

        $r31 = new com.opengamma.analytics.financial.interestrate.InterestRateCurveSensitivity;

        specialinvoke $r31.<com.opengamma.analytics.financial.interestrate.InterestRateCurveSensitivity: void <init>(java.util.Map)>($r29);

        r51 = virtualinvoke $r26.<com.opengamma.analytics.financial.interestrate.InterestRateCurveSensitivity: com.opengamma.analytics.financial.interestrate.InterestRateCurveSensitivity plus(com.opengamma.analytics.financial.interestrate.InterestRateCurveSensitivity)>($r31);

        $r32 = staticinvoke <com.opengamma.analytics.financial.forex.method.MultipleCurrencyInterestRateCurveSensitivity: com.opengamma.analytics.financial.forex.method.MultipleCurrencyInterestRateCurveSensitivity of(com.opengamma.util.money.Currency,com.opengamma.analytics.financial.interestrate.InterestRateCurveSensitivity)>(r43, r51);

        return $r32;
    }

    public com.opengamma.analytics.financial.forex.method.MultipleCurrencyInterestRateCurveSensitivity presentValueCurveSensitivity(com.opengamma.analytics.financial.interestrate.InstrumentDerivative, com.opengamma.analytics.financial.interestrate.YieldCurveBundle)
    {
        com.opengamma.analytics.financial.forex.method.ForexOptionDigitalBlackMethod r0;
        com.opengamma.analytics.financial.interestrate.InstrumentDerivative r1;
        com.opengamma.analytics.financial.interestrate.YieldCurveBundle r2;
        boolean $z0, $z1;
        com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle $r3;
        com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital $r4;
        com.opengamma.analytics.financial.forex.method.MultipleCurrencyInterestRateCurveSensitivity $r5;

        r0 := @this: com.opengamma.analytics.financial.forex.method.ForexOptionDigitalBlackMethod;

        r1 := @parameter0: com.opengamma.analytics.financial.interestrate.InstrumentDerivative;

        r2 := @parameter1: com.opengamma.analytics.financial.interestrate.YieldCurveBundle;

        $z0 = r1 instanceof com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z0, "Digital Forex option");

        $z1 = r2 instanceof com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z1, "Smile delta data bundle required");

        $r4 = (com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital) r1;

        $r3 = (com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle) r2;

        $r5 = virtualinvoke r0.<com.opengamma.analytics.financial.forex.method.ForexOptionDigitalBlackMethod: com.opengamma.analytics.financial.forex.method.MultipleCurrencyInterestRateCurveSensitivity presentValueCurveSensitivity(com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital,com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle)>($r4, $r3);

        return $r5;
    }

    public com.opengamma.analytics.financial.forex.method.PresentValueForexBlackVolatilitySensitivity presentValueBlackVolatilitySensitivity(com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital, com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle)
    {
        com.opengamma.analytics.financial.forex.method.ForexOptionDigitalBlackMethod r0;
        com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital r1;
        com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle r2;
        double d0, d1, d2, d3, d4, d5, d6, d7, d8, d10, d11, d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21, $d22, $d23, $d24, $d25, $d26, d27, d28, $d29, d30, $d31, $d32, $d33, $d34, $d35, $d36, $d37, $d38, $d39, $d40, $d41, $d42, $d43;
        com.opengamma.util.tuple.DoublesPair r3;
        com.opengamma.analytics.util.amount.SurfaceValue r4;
        com.opengamma.util.money.Currency $r8, $r9, r33, r34;
        boolean $z0, $z1, $z2, $z3, $z4;
        com.opengamma.analytics.financial.forex.derivative.Forex $r10, $r11, $r13, $r15, $r16, $r17, $r23, $r25, $r27, $r28, $r29;
        com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed $r12, $r14, $r18, $r24, $r26, $r30;
        com.opengamma.util.tuple.Pair $r19;
        java.lang.Object $r20;
        java.lang.Double $r21, $r39;
        com.opengamma.analytics.financial.forex.method.PresentValueForexBlackVolatilitySensitivity $r22;
        java.lang.String r31, r32;
        com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve $r35, $r36;
        com.opengamma.analytics.financial.forex.method.FXMatrix $r37;
        com.opengamma.analytics.math.statistics.distribution.ProbabilityDistribution $r38;

        r0 := @this: com.opengamma.analytics.financial.forex.method.ForexOptionDigitalBlackMethod;

        r1 := @parameter0: com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital;

        r2 := @parameter1: com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "Forex option");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, "Smile");

        $r8 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: com.opengamma.util.money.Currency getCurrency1()>();

        $r9 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: com.opengamma.util.money.Currency getCurrency2()>();

        $z0 = virtualinvoke r2.<com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle: boolean checkCurrencies(com.opengamma.util.money.Currency,com.opengamma.util.money.Currency)>($r8, $r9);

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z0, "Option currencies not compatible with smile data");

        $r10 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        d0 = virtualinvoke $r10.<com.opengamma.analytics.financial.forex.derivative.Forex: double getPaymentTime()>();

        d1 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: double getExpirationTime()>();

        $z1 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: boolean payDomestic()>();

        if $z1 == 0 goto label03;

        $r23 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        $r24 = virtualinvoke $r23.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed getPaymentCurrency1()>();

        r31 = virtualinvoke $r24.<com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed: java.lang.String getFundingCurveName()>();

        $r25 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        $r26 = virtualinvoke $r25.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed getPaymentCurrency2()>();

        r32 = virtualinvoke $r26.<com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed: java.lang.String getFundingCurveName()>();

        $r27 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        r33 = virtualinvoke $r27.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.util.money.Currency getCurrency2()>();

        $r28 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        r34 = virtualinvoke $r28.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.util.money.Currency getCurrency1()>();

        d27 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: double getStrike()>();

        $r29 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        $r30 = virtualinvoke $r29.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed getPaymentCurrency2()>();

        $d26 = virtualinvoke $r30.<com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed: double getAmount()>();

        d28 = staticinvoke <java.lang.Math: double abs(double)>($d26);

        $z3 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: boolean isCall()>();

        if $z3 == 0 goto label01;

        $d29 = 1.0;

        goto label02;

     label01:
        $d29 = -1.0;

     label02:
        d30 = $d29;

        goto label06;

     label03:
        $r11 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        $r12 = virtualinvoke $r11.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed getPaymentCurrency2()>();

        r31 = virtualinvoke $r12.<com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed: java.lang.String getFundingCurveName()>();

        $r13 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        $r14 = virtualinvoke $r13.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed getPaymentCurrency1()>();

        r32 = virtualinvoke $r14.<com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed: java.lang.String getFundingCurveName()>();

        $d13 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: double getStrike()>();

        d27 = 1.0 / $d13;

        $r15 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        r33 = virtualinvoke $r15.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.util.money.Currency getCurrency1()>();

        $r16 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        r34 = virtualinvoke $r16.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.util.money.Currency getCurrency2()>();

        $r17 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        $r18 = virtualinvoke $r17.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed getPaymentCurrency1()>();

        $d14 = virtualinvoke $r18.<com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed: double getAmount()>();

        d28 = staticinvoke <java.lang.Math: double abs(double)>($d14);

        $z2 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: boolean isCall()>();

        if $z2 == 0 goto label04;

        $d31 = -1.0;

        goto label05;

     label04:
        $d31 = 1.0;

     label05:
        d30 = $d31;

     label06:
        $r35 = virtualinvoke r2.<com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle: com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve getCurve(java.lang.String)>(r32);

        d2 = virtualinvoke $r35.<com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve: double getDiscountFactor(double)>(d0);

        $r36 = virtualinvoke r2.<com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle: com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve getCurve(java.lang.String)>(r31);

        d3 = virtualinvoke $r36.<com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve: double getDiscountFactor(double)>(d0);

        $r37 = virtualinvoke r2.<com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle: com.opengamma.analytics.financial.forex.method.FXMatrix getFxRates()>();

        d4 = virtualinvoke $r37.<com.opengamma.analytics.financial.forex.method.FXMatrix: double getFxRate(com.opengamma.util.money.Currency,com.opengamma.util.money.Currency)>(r34, r33);

        $d32 = d4 * d3;

        d5 = $d32 / d2;

        $d33 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: double getExpirationTime()>();

        d6 = staticinvoke <com.opengamma.analytics.financial.forex.method.FXVolatilityUtils: double getVolatility(com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle,com.opengamma.util.money.Currency,com.opengamma.util.money.Currency,double,double,double)>(r2, r34, r33, $d33, d5, d5);

        $d34 = staticinvoke <java.lang.Math: double sqrt(double)>(d1);

        d7 = d6 * $d34;

        $d35 = d5 / d27;

        $d36 = staticinvoke <java.lang.Math: double log(double)>($d35);

        $d37 = $d36 / d7;

        $d38 = 0.5 * d7;

        d8 = $d37 - $d38;

        $d39 = d28 * d2;

        $r38 = <com.opengamma.analytics.financial.forex.method.ForexOptionDigitalBlackMethod: com.opengamma.analytics.math.statistics.distribution.ProbabilityDistribution NORMAL>;

        $d40 = d30 * d8;

        $r39 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d40);

        $d41 = interfaceinvoke $r38.<com.opengamma.analytics.math.statistics.distribution.ProbabilityDistribution: double getPDF(java.lang.Object)>($r39);

        $d15 = $d39 * $d41;

        $z4 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: boolean isLong()>();

        if $z4 == 0 goto label07;

        $d42 = 1.0;

        goto label08;

     label07:
        $d42 = -1.0;

     label08:
        $d16 = $d15 * $d42;

        $d17 = $d16 * d30;

        d10 = $d17 * 1.0;

        $d18 = d5 / d27;

        $d19 = staticinvoke <java.lang.Math: double log(double)>($d18);

        $d21 = neg $d19;

        $d20 = d7 * d7;

        $d22 = $d21 / $d20;

        $d23 = $d22 - 0.5;

        d11 = $d23 * d10;

        $d24 = staticinvoke <java.lang.Math: double sqrt(double)>(d1);

        d12 = $d24 * d11;

        $d25 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: double getExpirationTime()>();

        $r19 = virtualinvoke r2.<com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle: com.opengamma.util.tuple.Pair getCurrencyPair()>();

        $r20 = virtualinvoke $r19.<com.opengamma.util.tuple.Pair: java.lang.Object getFirst()>();

        if r34 != $r20 goto label09;

        $d43 = d27;

        goto label10;

     label09:
        $d43 = 1.0 / d27;

     label10:
        r3 = staticinvoke <com.opengamma.util.tuple.DoublesPair: com.opengamma.util.tuple.DoublesPair of(double,double)>($d25, $d43);

        $r21 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d12);

        r4 = staticinvoke <com.opengamma.analytics.util.amount.SurfaceValue: com.opengamma.analytics.util.amount.SurfaceValue 'from'(com.opengamma.util.tuple.DoublesPair,java.lang.Double)>(r3, $r21);

        $r22 = new com.opengamma.analytics.financial.forex.method.PresentValueForexBlackVolatilitySensitivity;

        specialinvoke $r22.<com.opengamma.analytics.financial.forex.method.PresentValueForexBlackVolatilitySensitivity: void <init>(com.opengamma.util.money.Currency,com.opengamma.util.money.Currency,com.opengamma.analytics.util.amount.SurfaceValue)>(r34, r33, r4);

        return $r22;
    }

    public double impliedVolatility(com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital, com.opengamma.analytics.financial.interestrate.YieldCurveBundle)
    {
        com.opengamma.analytics.financial.forex.method.ForexOptionDigitalBlackMethod r0;
        com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital r1;
        com.opengamma.analytics.financial.interestrate.YieldCurveBundle r2;
        com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle r3;
        double d0, d1, d2, d3, d4, d5, $d6, $d7;
        boolean $z0, $z1, $z2;
        com.opengamma.util.money.Currency $r6, $r7, r26, r27;
        com.opengamma.analytics.financial.forex.derivative.Forex $r8, $r9, $r11, $r13, $r14, $r18, $r20, $r22, $r23;
        com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed $r10, $r12, $r19, $r21;
        com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve $r15, $r16;
        com.opengamma.analytics.financial.forex.method.FXMatrix $r17;
        java.lang.String r24, r25;

        r0 := @this: com.opengamma.analytics.financial.forex.method.ForexOptionDigitalBlackMethod;

        r1 := @parameter0: com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital;

        r2 := @parameter1: com.opengamma.analytics.financial.interestrate.YieldCurveBundle;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, "Curves");

        $z0 = r2 instanceof com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z0, "Yield curve bundle should contain smile data");

        r3 = (com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle) r2;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "Forex option");

        $r6 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: com.opengamma.util.money.Currency getCurrency1()>();

        $r7 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: com.opengamma.util.money.Currency getCurrency2()>();

        $z1 = virtualinvoke r3.<com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle: boolean checkCurrencies(com.opengamma.util.money.Currency,com.opengamma.util.money.Currency)>($r6, $r7);

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z1, "Option currencies not compatible with smile data");

        $r8 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        d0 = virtualinvoke $r8.<com.opengamma.analytics.financial.forex.derivative.Forex: double getPaymentTime()>();

        $z2 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: boolean payDomestic()>();

        if $z2 == 0 goto label1;

        $r18 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        $r19 = virtualinvoke $r18.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed getPaymentCurrency1()>();

        r24 = virtualinvoke $r19.<com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed: java.lang.String getFundingCurveName()>();

        $r20 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        $r21 = virtualinvoke $r20.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed getPaymentCurrency2()>();

        r25 = virtualinvoke $r21.<com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed: java.lang.String getFundingCurveName()>();

        $r22 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        r26 = virtualinvoke $r22.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.util.money.Currency getCurrency2()>();

        $r23 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        r27 = virtualinvoke $r23.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.util.money.Currency getCurrency1()>();

        goto label2;

     label1:
        $r9 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        $r10 = virtualinvoke $r9.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed getPaymentCurrency2()>();

        r24 = virtualinvoke $r10.<com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed: java.lang.String getFundingCurveName()>();

        $r11 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        $r12 = virtualinvoke $r11.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed getPaymentCurrency1()>();

        r25 = virtualinvoke $r12.<com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed: java.lang.String getFundingCurveName()>();

        $r13 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        r26 = virtualinvoke $r13.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.util.money.Currency getCurrency1()>();

        $r14 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        r27 = virtualinvoke $r14.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.util.money.Currency getCurrency2()>();

     label2:
        $r15 = virtualinvoke r3.<com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle: com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve getCurve(java.lang.String)>(r25);

        d1 = virtualinvoke $r15.<com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve: double getDiscountFactor(double)>(d0);

        $r16 = virtualinvoke r3.<com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle: com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve getCurve(java.lang.String)>(r24);

        d2 = virtualinvoke $r16.<com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve: double getDiscountFactor(double)>(d0);

        $r17 = virtualinvoke r3.<com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle: com.opengamma.analytics.financial.forex.method.FXMatrix getFxRates()>();

        d3 = virtualinvoke $r17.<com.opengamma.analytics.financial.forex.method.FXMatrix: double getFxRate(com.opengamma.util.money.Currency,com.opengamma.util.money.Currency)>(r27, r26);

        $d6 = d3 * d2;

        d4 = $d6 / d1;

        $d7 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: double getExpirationTime()>();

        d5 = staticinvoke <com.opengamma.analytics.financial.forex.method.FXVolatilityUtils: double getVolatility(com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle,com.opengamma.util.money.Currency,com.opengamma.util.money.Currency,double,double,double)>(r3, r27, r26, $d7, d4, d4);

        return d5;
    }

    public com.opengamma.analytics.financial.forex.method.PresentValueForexBlackVolatilitySensitivity presentValueBlackVolatilitySensitivity(com.opengamma.analytics.financial.interestrate.InstrumentDerivative, com.opengamma.analytics.financial.interestrate.YieldCurveBundle)
    {
        com.opengamma.analytics.financial.forex.method.ForexOptionDigitalBlackMethod r0;
        com.opengamma.analytics.financial.interestrate.InstrumentDerivative r1;
        com.opengamma.analytics.financial.interestrate.YieldCurveBundle r2;
        boolean $z0, $z1;
        com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle $r3;
        com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital $r4;
        com.opengamma.analytics.financial.forex.method.PresentValueForexBlackVolatilitySensitivity $r5;

        r0 := @this: com.opengamma.analytics.financial.forex.method.ForexOptionDigitalBlackMethod;

        r1 := @parameter0: com.opengamma.analytics.financial.interestrate.InstrumentDerivative;

        r2 := @parameter1: com.opengamma.analytics.financial.interestrate.YieldCurveBundle;

        $z0 = r1 instanceof com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z0, "Digital Forex option");

        $z1 = r2 instanceof com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z1, "Smile delta data bundle required");

        $r4 = (com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital) r1;

        $r3 = (com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle) r2;

        $r5 = virtualinvoke r0.<com.opengamma.analytics.financial.forex.method.ForexOptionDigitalBlackMethod: com.opengamma.analytics.financial.forex.method.PresentValueForexBlackVolatilitySensitivity presentValueBlackVolatilitySensitivity(com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital,com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle)>($r4, $r3);

        return $r5;
    }

    public com.opengamma.analytics.financial.forex.method.PresentValueForexBlackVolatilityNodeSensitivityDataBundle presentValueBlackVolatilityNodeSensitivity(com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital, com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle)
    {
        com.opengamma.analytics.financial.forex.method.ForexOptionDigitalBlackMethod r0;
        com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital r1;
        com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle r2;
        com.opengamma.analytics.financial.forex.method.PresentValueForexBlackVolatilitySensitivity r3;
        com.opengamma.analytics.financial.model.volatility.surface.SmileDeltaTermStructureParametersStrikeInterpolation r4;
        double d0, d1, d2, d3, d4, d5, $d6, $d7, $d8, $d9, $d10, $d11, d12, $d13;
        com.opengamma.analytics.financial.model.volatility.VolatilityAndBucketedSensitivities r5;
        double[][] r6, r8;
        com.opengamma.util.tuple.DoublesPair r7;
        com.opengamma.util.money.Currency $r11, $r12, $r28, $r30, r50, r51;
        boolean $z0, $z1;
        com.opengamma.analytics.financial.model.volatility.VolatilityModel $r13;
        com.opengamma.analytics.financial.forex.derivative.Forex $r14, $r15, $r17, $r19, $r20, $r27, $r29, $r42, $r44, $r46, $r47;
        com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed $r16, $r18, $r43, $r45;
        com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve $r21, $r22;
        com.opengamma.analytics.financial.forex.method.FXMatrix $r23;
        com.opengamma.util.tuple.Pair $r24;
        java.lang.Object $r25, $r40;
        int $i0, $i1, $i2, i3, $i4, i5;
        com.opengamma.analytics.financial.forex.method.PresentValueForexBlackVolatilityNodeSensitivityDataBundle $r26;
        com.opengamma.analytics.math.matrix.DoubleMatrix1D $r31, $r33;
        double[] $r32, $r34, $r36, $r37;
        com.opengamma.analytics.math.matrix.DoubleMatrix2D $r35;
        com.opengamma.analytics.util.amount.SurfaceValue $r38;
        java.util.HashMap $r39;
        java.lang.Double $r41;
        java.lang.String r48, r49;

        r0 := @this: com.opengamma.analytics.financial.forex.method.ForexOptionDigitalBlackMethod;

        r1 := @parameter0: com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital;

        r2 := @parameter1: com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "Forex option");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, "Smile");

        $r11 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: com.opengamma.util.money.Currency getCurrency1()>();

        $r12 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: com.opengamma.util.money.Currency getCurrency2()>();

        $z0 = virtualinvoke r2.<com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle: boolean checkCurrencies(com.opengamma.util.money.Currency,com.opengamma.util.money.Currency)>($r11, $r12);

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z0, "Option currencies not compatible with smile data");

        r3 = virtualinvoke r0.<com.opengamma.analytics.financial.forex.method.ForexOptionDigitalBlackMethod: com.opengamma.analytics.financial.forex.method.PresentValueForexBlackVolatilitySensitivity presentValueBlackVolatilitySensitivity(com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital,com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle)>(r1, r2);

        $r13 = virtualinvoke r2.<com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle: com.opengamma.analytics.financial.model.volatility.VolatilityModel getVolatilityModel()>();

        r4 = (com.opengamma.analytics.financial.model.volatility.surface.SmileDeltaTermStructureParametersStrikeInterpolation) $r13;

        $r14 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        d0 = virtualinvoke $r14.<com.opengamma.analytics.financial.forex.derivative.Forex: double getPaymentTime()>();

        d1 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: double getExpirationTime()>();

        $z1 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: boolean payDomestic()>();

        if $z1 == 0 goto label1;

        $r42 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        $r43 = virtualinvoke $r42.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed getPaymentCurrency1()>();

        r48 = virtualinvoke $r43.<com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed: java.lang.String getFundingCurveName()>();

        $r44 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        $r45 = virtualinvoke $r44.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed getPaymentCurrency2()>();

        r49 = virtualinvoke $r45.<com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed: java.lang.String getFundingCurveName()>();

        $r46 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        r50 = virtualinvoke $r46.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.util.money.Currency getCurrency2()>();

        $r47 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        r51 = virtualinvoke $r47.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.util.money.Currency getCurrency1()>();

        d12 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: double getStrike()>();

        goto label2;

     label1:
        $r15 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        $r16 = virtualinvoke $r15.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed getPaymentCurrency2()>();

        r48 = virtualinvoke $r16.<com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed: java.lang.String getFundingCurveName()>();

        $r17 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        $r18 = virtualinvoke $r17.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed getPaymentCurrency1()>();

        r49 = virtualinvoke $r18.<com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed: java.lang.String getFundingCurveName()>();

        $d6 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: double getStrike()>();

        d12 = 1.0 / $d6;

        $r19 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        r50 = virtualinvoke $r19.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.util.money.Currency getCurrency1()>();

        $r20 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        r51 = virtualinvoke $r20.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.util.money.Currency getCurrency2()>();

     label2:
        $r21 = virtualinvoke r2.<com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle: com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve getCurve(java.lang.String)>(r49);

        d2 = virtualinvoke $r21.<com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve: double getDiscountFactor(double)>(d0);

        $r22 = virtualinvoke r2.<com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle: com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve getCurve(java.lang.String)>(r48);

        d3 = virtualinvoke $r22.<com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve: double getDiscountFactor(double)>(d0);

        $r23 = virtualinvoke r2.<com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle: com.opengamma.analytics.financial.forex.method.FXMatrix getFxRates()>();

        d4 = virtualinvoke $r23.<com.opengamma.analytics.financial.forex.method.FXMatrix: double getFxRate(com.opengamma.util.money.Currency,com.opengamma.util.money.Currency)>(r51, r50);

        $d7 = d4 * d3;

        d5 = $d7 / d2;

        r5 = staticinvoke <com.opengamma.analytics.financial.forex.method.FXVolatilityUtils: com.opengamma.analytics.financial.model.volatility.VolatilityAndBucketedSensitivities getVolatilityAndSensitivities(com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle,com.opengamma.util.money.Currency,com.opengamma.util.money.Currency,double,double,double)>(r2, r51, r50, d1, d5, d5);

        r6 = virtualinvoke r5.<com.opengamma.analytics.financial.model.volatility.VolatilityAndBucketedSensitivities: double[][] getBucketedSensitivities()>();

        $d8 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: double getExpirationTime()>();

        $r24 = virtualinvoke r2.<com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle: com.opengamma.util.tuple.Pair getCurrencyPair()>();

        $r25 = virtualinvoke $r24.<com.opengamma.util.tuple.Pair: java.lang.Object getFirst()>();

        if r51 != $r25 goto label3;

        $d13 = d12;

        goto label4;

     label3:
        $d13 = 1.0 / d12;

     label4:
        r7 = staticinvoke <com.opengamma.util.tuple.DoublesPair: com.opengamma.util.tuple.DoublesPair of(double,double)>($d8, $d13);

        $i0 = virtualinvoke r4.<com.opengamma.analytics.financial.model.volatility.surface.SmileDeltaTermStructureParametersStrikeInterpolation: int getNumberExpiration()>();

        $i1 = virtualinvoke r4.<com.opengamma.analytics.financial.model.volatility.surface.SmileDeltaTermStructureParametersStrikeInterpolation: int getNumberStrike()>();

        r8 = newmultiarray (double)[$i0][$i1];

        i3 = 0;

     label5:
        $i4 = virtualinvoke r4.<com.opengamma.analytics.financial.model.volatility.surface.SmileDeltaTermStructureParametersStrikeInterpolation: int getNumberExpiration()>();

        if i3 >= $i4 goto label8;

        i5 = 0;

     label6:
        $i2 = virtualinvoke r4.<com.opengamma.analytics.financial.model.volatility.surface.SmileDeltaTermStructureParametersStrikeInterpolation: int getNumberStrike()>();

        if i5 >= $i2 goto label7;

        $r37 = r8[i3];

        $r36 = r6[i3];

        $d9 = $r36[i5];

        $r38 = virtualinvoke r3.<com.opengamma.analytics.financial.forex.method.PresentValueForexBlackVolatilitySensitivity: com.opengamma.analytics.util.amount.SurfaceValue getVega()>();

        $r39 = virtualinvoke $r38.<com.opengamma.analytics.util.amount.SurfaceValue: java.util.HashMap getMap()>();

        $r40 = virtualinvoke $r39.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r7);

        $r41 = (java.lang.Double) $r40;

        $d10 = virtualinvoke $r41.<java.lang.Double: double doubleValue()>();

        $d11 = $d9 * $d10;

        $r37[i5] = $d11;

        i5 = i5 + 1;

        goto label6;

     label7:
        i3 = i3 + 1;

        goto label5;

     label8:
        $r26 = new com.opengamma.analytics.financial.forex.method.PresentValueForexBlackVolatilityNodeSensitivityDataBundle;

        $r27 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        $r28 = virtualinvoke $r27.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.util.money.Currency getCurrency1()>();

        $r29 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        $r30 = virtualinvoke $r29.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.util.money.Currency getCurrency2()>();

        $r31 = new com.opengamma.analytics.math.matrix.DoubleMatrix1D;

        $r32 = virtualinvoke r4.<com.opengamma.analytics.financial.model.volatility.surface.SmileDeltaTermStructureParametersStrikeInterpolation: double[] getTimeToExpiration()>();

        specialinvoke $r31.<com.opengamma.analytics.math.matrix.DoubleMatrix1D: void <init>(double[])>($r32);

        $r33 = new com.opengamma.analytics.math.matrix.DoubleMatrix1D;

        $r34 = virtualinvoke r4.<com.opengamma.analytics.financial.model.volatility.surface.SmileDeltaTermStructureParametersStrikeInterpolation: double[] getDeltaFull()>();

        specialinvoke $r33.<com.opengamma.analytics.math.matrix.DoubleMatrix1D: void <init>(double[])>($r34);

        $r35 = new com.opengamma.analytics.math.matrix.DoubleMatrix2D;

        specialinvoke $r35.<com.opengamma.analytics.math.matrix.DoubleMatrix2D: void <init>(double[][])>(r8);

        specialinvoke $r26.<com.opengamma.analytics.financial.forex.method.PresentValueForexBlackVolatilityNodeSensitivityDataBundle: void <init>(com.opengamma.util.money.Currency,com.opengamma.util.money.Currency,com.opengamma.analytics.math.matrix.DoubleMatrix1D,com.opengamma.analytics.math.matrix.DoubleMatrix1D,com.opengamma.analytics.math.matrix.DoubleMatrix2D)>($r28, $r30, $r31, $r33, $r35);

        return $r26;
    }

    public double deltaRelative(com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital, com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle, boolean)
    {
        com.opengamma.analytics.financial.forex.method.ForexOptionDigitalBlackMethod r0;
        com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital r1;
        com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle r2;
        boolean z0, $z1, $z2, $z3, z4, $z5, $z6;
        double d0, d1, d2, d3, d4, d5, d6, d7, d8, d10, d11, $d12, $d13, $d14, $d15, $d16, d17, $d18, $d19;
        com.opengamma.util.money.Currency $r5, $r6, r22, r23;
        com.opengamma.analytics.financial.forex.derivative.Forex $r7, $r8, $r10, $r12, $r13, $r14, $r16, $r18, $r19;
        com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed $r9, $r11, $r15, $r17;
        java.lang.String r20, r21;
        com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve $r24, $r25, $r26, $r28;
        java.lang.Double $r27, $r29;
        com.opengamma.analytics.financial.forex.method.FXMatrix $r30;

        r0 := @this: com.opengamma.analytics.financial.forex.method.ForexOptionDigitalBlackMethod;

        r1 := @parameter0: com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital;

        r2 := @parameter1: com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle;

        z0 := @parameter2: boolean;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "Forex option");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, "Smile");

        $r5 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: com.opengamma.util.money.Currency getCurrency1()>();

        $r6 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: com.opengamma.util.money.Currency getCurrency2()>();

        $z1 = virtualinvoke r2.<com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle: boolean checkCurrencies(com.opengamma.util.money.Currency,com.opengamma.util.money.Currency)>($r5, $r6);

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z1, "Option currencies not compatible with smile data");

        $r7 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        d0 = virtualinvoke $r7.<com.opengamma.analytics.financial.forex.derivative.Forex: double getPaymentTime()>();

        $z2 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: boolean payDomestic()>();

        if $z2 == 0 goto label1;

        $r14 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        $r15 = virtualinvoke $r14.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed getPaymentCurrency1()>();

        r20 = virtualinvoke $r15.<com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed: java.lang.String getFundingCurveName()>();

        $r16 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        $r17 = virtualinvoke $r16.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed getPaymentCurrency2()>();

        r21 = virtualinvoke $r17.<com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed: java.lang.String getFundingCurveName()>();

        $r18 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        r22 = virtualinvoke $r18.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.util.money.Currency getCurrency2()>();

        $r19 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        r23 = virtualinvoke $r19.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.util.money.Currency getCurrency1()>();

        d17 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: double getStrike()>();

        z4 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: boolean isCall()>();

        goto label4;

     label1:
        $r8 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        $r9 = virtualinvoke $r8.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed getPaymentCurrency2()>();

        r20 = virtualinvoke $r9.<com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed: java.lang.String getFundingCurveName()>();

        $r10 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        $r11 = virtualinvoke $r10.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed getPaymentCurrency1()>();

        r21 = virtualinvoke $r11.<com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed: java.lang.String getFundingCurveName()>();

        $d12 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: double getStrike()>();

        d17 = 1.0 / $d12;

        $r12 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        r22 = virtualinvoke $r12.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.util.money.Currency getCurrency1()>();

        $r13 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        r23 = virtualinvoke $r13.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.util.money.Currency getCurrency2()>();

        $z3 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: boolean isCall()>();

        if $z3 != 0 goto label2;

        $z5 = 1;

        goto label3;

     label2:
        $z5 = 0;

     label3:
        z4 = $z5;

     label4:
        $r24 = virtualinvoke r2.<com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle: com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve getCurve(java.lang.String)>(r21);

        d1 = virtualinvoke $r24.<com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve: double getDiscountFactor(double)>(d0);

        $r25 = virtualinvoke r2.<com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle: com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve getCurve(java.lang.String)>(r20);

        d2 = virtualinvoke $r25.<com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve: double getDiscountFactor(double)>(d0);

        $r26 = virtualinvoke r2.<com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle: com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve getCurve(java.lang.String)>(r21);

        $r27 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d0);

        d3 = virtualinvoke $r26.<com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve: double getInterestRate(java.lang.Object)>($r27);

        $r28 = virtualinvoke r2.<com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle: com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve getCurve(java.lang.String)>(r20);

        $r29 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d0);

        d4 = virtualinvoke $r28.<com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve: double getInterestRate(java.lang.Object)>($r29);

        $r30 = virtualinvoke r2.<com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle: com.opengamma.analytics.financial.forex.method.FXMatrix getFxRates()>();

        d5 = virtualinvoke $r30.<com.opengamma.analytics.financial.forex.method.FXMatrix: double getFxRate(com.opengamma.util.money.Currency,com.opengamma.util.money.Currency)>(r23, r22);

        $d18 = d5 * d2;

        d6 = $d18 / d1;

        d7 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: double getExpirationTime()>();

        d8 = staticinvoke <com.opengamma.analytics.financial.forex.method.FXVolatilityUtils: double getVolatility(com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle,com.opengamma.util.money.Currency,com.opengamma.util.money.Currency,double,double,double)>(r2, r23, r22, d7, d6, d6);

        $z6 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: boolean isLong()>();

        if $z6 == 0 goto label5;

        $d19 = 1.0;

        goto label6;

     label5:
        $d19 = -1.0;

     label6:
        $d13 = d3 - d4;

        $d14 = staticinvoke <com.opengamma.analytics.financial.model.option.pricing.analytic.formula.DigitalOptionFunction: double delta(double,double,double,double,double,double,boolean)>(d5, d17, d7, d8, d3, $d13, z4);

        d10 = $d14 * $d19;

        if z0 == 0 goto label7;

        return d10;

     label7:
        $d15 = neg d10;

        $d16 = $d15 * d5;

        d11 = $d16 * d5;

        return d11;
    }

    public com.opengamma.util.money.CurrencyAmount delta(com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital, com.opengamma.analytics.financial.interestrate.YieldCurveBundle, boolean)
    {
        com.opengamma.analytics.financial.forex.method.ForexOptionDigitalBlackMethod r0;
        com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital r1;
        com.opengamma.analytics.financial.interestrate.YieldCurveBundle r2;
        boolean z0, $z1, $z2;
        com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle r3;
        double d0, $d1, $d2, $d3;
        com.opengamma.analytics.financial.forex.derivative.Forex $r5, $r6, $r9;
        com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed $r7;
        com.opengamma.util.money.CurrencyAmount $r8;
        com.opengamma.util.money.Currency r10;

        r0 := @this: com.opengamma.analytics.financial.forex.method.ForexOptionDigitalBlackMethod;

        r1 := @parameter0: com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital;

        r2 := @parameter1: com.opengamma.analytics.financial.interestrate.YieldCurveBundle;

        z0 := @parameter2: boolean;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, "Curves");

        $z1 = r2 instanceof com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z1, "Yield curve bundle should contain smile data");

        r3 = (com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle) r2;

        d0 = virtualinvoke r0.<com.opengamma.analytics.financial.forex.method.ForexOptionDigitalBlackMethod: double deltaRelative(com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital,com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle,boolean)>(r1, r3, z0);

        $z2 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: boolean payDomestic()>();

        if $z2 == 0 goto label1;

        $r9 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        r10 = virtualinvoke $r9.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.util.money.Currency getCurrency2()>();

        goto label2;

     label1:
        $r5 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        r10 = virtualinvoke $r5.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.util.money.Currency getCurrency1()>();

     label2:
        $r6 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        $r7 = virtualinvoke $r6.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed getPaymentCurrency1()>();

        $d1 = virtualinvoke $r7.<com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed: double getAmount()>();

        $d2 = staticinvoke <java.lang.Math: double abs(double)>($d1);

        $d3 = d0 * $d2;

        $r8 = staticinvoke <com.opengamma.util.money.CurrencyAmount: com.opengamma.util.money.CurrencyAmount of(com.opengamma.util.money.Currency,double)>(r10, $d3);

        return $r8;
    }

    public double gammaRelative(com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital, com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle, boolean)
    {
        com.opengamma.analytics.financial.forex.method.ForexOptionDigitalBlackMethod r0;
        com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital r1;
        com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle r2;
        boolean z0, $z1, $z2, $z3, z4, $z5, $z6;
        double d0, d1, d2, d3, d4, d5, d6, d7, d8, d10, d11, d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21, $d22, d23, $d24, $d25;
        com.opengamma.util.money.Currency $r5, $r6, r22, r23;
        com.opengamma.analytics.financial.forex.derivative.Forex $r7, $r8, $r10, $r12, $r13, $r14, $r16, $r18, $r19;
        com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed $r9, $r11, $r15, $r17;
        java.lang.String r20, r21;
        com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve $r24, $r25, $r26, $r28;
        java.lang.Double $r27, $r29;
        com.opengamma.analytics.financial.forex.method.FXMatrix $r30;

        r0 := @this: com.opengamma.analytics.financial.forex.method.ForexOptionDigitalBlackMethod;

        r1 := @parameter0: com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital;

        r2 := @parameter1: com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle;

        z0 := @parameter2: boolean;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "Forex option");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, "Smile");

        $r5 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: com.opengamma.util.money.Currency getCurrency1()>();

        $r6 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: com.opengamma.util.money.Currency getCurrency2()>();

        $z1 = virtualinvoke r2.<com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle: boolean checkCurrencies(com.opengamma.util.money.Currency,com.opengamma.util.money.Currency)>($r5, $r6);

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z1, "Option currencies not compatible with smile data");

        $r7 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        d0 = virtualinvoke $r7.<com.opengamma.analytics.financial.forex.derivative.Forex: double getPaymentTime()>();

        $z2 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: boolean payDomestic()>();

        if $z2 == 0 goto label1;

        $r14 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        $r15 = virtualinvoke $r14.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed getPaymentCurrency1()>();

        r20 = virtualinvoke $r15.<com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed: java.lang.String getFundingCurveName()>();

        $r16 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        $r17 = virtualinvoke $r16.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed getPaymentCurrency2()>();

        r21 = virtualinvoke $r17.<com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed: java.lang.String getFundingCurveName()>();

        $r18 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        r22 = virtualinvoke $r18.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.util.money.Currency getCurrency2()>();

        $r19 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        r23 = virtualinvoke $r19.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.util.money.Currency getCurrency1()>();

        d23 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: double getStrike()>();

        z4 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: boolean isCall()>();

        goto label4;

     label1:
        $r8 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        $r9 = virtualinvoke $r8.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed getPaymentCurrency2()>();

        r20 = virtualinvoke $r9.<com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed: java.lang.String getFundingCurveName()>();

        $r10 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        $r11 = virtualinvoke $r10.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed getPaymentCurrency1()>();

        r21 = virtualinvoke $r11.<com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed: java.lang.String getFundingCurveName()>();

        $d13 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: double getStrike()>();

        d23 = 1.0 / $d13;

        $r12 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        r22 = virtualinvoke $r12.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.util.money.Currency getCurrency1()>();

        $r13 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        r23 = virtualinvoke $r13.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.util.money.Currency getCurrency2()>();

        $z3 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: boolean isCall()>();

        if $z3 != 0 goto label2;

        $z5 = 1;

        goto label3;

     label2:
        $z5 = 0;

     label3:
        z4 = $z5;

     label4:
        $r24 = virtualinvoke r2.<com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle: com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve getCurve(java.lang.String)>(r21);

        d1 = virtualinvoke $r24.<com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve: double getDiscountFactor(double)>(d0);

        $r25 = virtualinvoke r2.<com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle: com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve getCurve(java.lang.String)>(r20);

        d2 = virtualinvoke $r25.<com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve: double getDiscountFactor(double)>(d0);

        $r26 = virtualinvoke r2.<com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle: com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve getCurve(java.lang.String)>(r21);

        $r27 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d0);

        d3 = virtualinvoke $r26.<com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve: double getInterestRate(java.lang.Object)>($r27);

        $r28 = virtualinvoke r2.<com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle: com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve getCurve(java.lang.String)>(r20);

        $r29 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d0);

        d4 = virtualinvoke $r28.<com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve: double getInterestRate(java.lang.Object)>($r29);

        $r30 = virtualinvoke r2.<com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle: com.opengamma.analytics.financial.forex.method.FXMatrix getFxRates()>();

        d5 = virtualinvoke $r30.<com.opengamma.analytics.financial.forex.method.FXMatrix: double getFxRate(com.opengamma.util.money.Currency,com.opengamma.util.money.Currency)>(r23, r22);

        $d24 = d5 * d2;

        d6 = $d24 / d1;

        d7 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: double getExpirationTime()>();

        d8 = staticinvoke <com.opengamma.analytics.financial.forex.method.FXVolatilityUtils: double getVolatility(com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle,com.opengamma.util.money.Currency,com.opengamma.util.money.Currency,double,double,double)>(r2, r23, r22, d7, d6, d6);

        $z6 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: boolean isLong()>();

        if $z6 == 0 goto label5;

        $d25 = 1.0;

        goto label6;

     label5:
        $d25 = -1.0;

     label6:
        $d14 = d3 - d4;

        $d15 = staticinvoke <com.opengamma.analytics.financial.model.option.pricing.analytic.formula.DigitalOptionFunction: double gamma(double,double,double,double,double,double,boolean)>(d5, d23, d7, d8, d3, $d14, z4);

        d10 = $d15 * $d25;

        if z0 == 0 goto label7;

        return d10;

     label7:
        $d16 = d3 - d4;

        $d17 = staticinvoke <com.opengamma.analytics.financial.model.option.pricing.analytic.formula.DigitalOptionFunction: double delta(double,double,double,double,double,double,boolean)>(d5, d23, d7, d8, d3, $d16, z4);

        d11 = $d17 * $d25;

        $d19 = d10 * d5;

        $d18 = 2.0 * d11;

        $d20 = $d19 + $d18;

        $d21 = $d20 * d5;

        $d22 = $d21 * d5;

        d12 = $d22 * d5;

        return d12;
    }

    public com.opengamma.util.money.CurrencyAmount gamma(com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital, com.opengamma.analytics.financial.interestrate.YieldCurveBundle, boolean)
    {
        com.opengamma.analytics.financial.forex.method.ForexOptionDigitalBlackMethod r0;
        com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital r1;
        com.opengamma.analytics.financial.interestrate.YieldCurveBundle r2;
        boolean z0, $z1, $z2;
        com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle r3;
        double d0, $d1, $d2, $d3;
        com.opengamma.analytics.financial.forex.derivative.Forex $r5, $r6, $r9;
        com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed $r7;
        com.opengamma.util.money.CurrencyAmount $r8;
        com.opengamma.util.money.Currency r10;

        r0 := @this: com.opengamma.analytics.financial.forex.method.ForexOptionDigitalBlackMethod;

        r1 := @parameter0: com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital;

        r2 := @parameter1: com.opengamma.analytics.financial.interestrate.YieldCurveBundle;

        z0 := @parameter2: boolean;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, "Curves");

        $z1 = r2 instanceof com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z1, "Yield curve bundle should contain smile data");

        r3 = (com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle) r2;

        $z2 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: boolean payDomestic()>();

        if $z2 == 0 goto label1;

        $r9 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        r10 = virtualinvoke $r9.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.util.money.Currency getCurrency2()>();

        goto label2;

     label1:
        $r5 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        r10 = virtualinvoke $r5.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.util.money.Currency getCurrency1()>();

     label2:
        d0 = virtualinvoke r0.<com.opengamma.analytics.financial.forex.method.ForexOptionDigitalBlackMethod: double gammaRelative(com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital,com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle,boolean)>(r1, r3, z0);

        $r6 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        $r7 = virtualinvoke $r6.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed getPaymentCurrency1()>();

        $d1 = virtualinvoke $r7.<com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed: double getAmount()>();

        $d2 = staticinvoke <java.lang.Math: double abs(double)>($d1);

        $d3 = d0 * $d2;

        $r8 = staticinvoke <com.opengamma.util.money.CurrencyAmount: com.opengamma.util.money.CurrencyAmount of(com.opengamma.util.money.Currency,double)>(r10, $d3);

        return $r8;
    }

    public double gammaRelativeSpot(com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital, com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle, boolean)
    {
        com.opengamma.analytics.financial.forex.method.ForexOptionDigitalBlackMethod r0;
        com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital r1;
        com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle r2;
        boolean z0, $z1, $z2, $z3, z4, $z5, $z6;
        double d0, d1, d2, d3, d4, d5, d6, d7, d9, d10, d11, d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21, $d22, d23, $d24, $d25;
        com.opengamma.util.money.Currency $r5, $r6, r22, r23;
        com.opengamma.analytics.financial.forex.derivative.Forex $r7, $r8, $r10, $r12, $r13, $r14, $r16, $r18, $r19;
        com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed $r9, $r11, $r15, $r17;
        java.lang.String r20, r21;
        com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve $r24, $r25, $r26, $r28;
        java.lang.Double $r27, $r29;
        com.opengamma.analytics.financial.forex.method.FXMatrix $r30;

        r0 := @this: com.opengamma.analytics.financial.forex.method.ForexOptionDigitalBlackMethod;

        r1 := @parameter0: com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital;

        r2 := @parameter1: com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle;

        z0 := @parameter2: boolean;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "Forex option");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, "Smile");

        $r5 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: com.opengamma.util.money.Currency getCurrency1()>();

        $r6 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: com.opengamma.util.money.Currency getCurrency2()>();

        $z1 = virtualinvoke r2.<com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle: boolean checkCurrencies(com.opengamma.util.money.Currency,com.opengamma.util.money.Currency)>($r5, $r6);

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z1, "Option currencies not compatible with smile data");

        $r7 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        d0 = virtualinvoke $r7.<com.opengamma.analytics.financial.forex.derivative.Forex: double getPaymentTime()>();

        $z2 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: boolean payDomestic()>();

        if $z2 == 0 goto label1;

        $r14 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        $r15 = virtualinvoke $r14.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed getPaymentCurrency1()>();

        r20 = virtualinvoke $r15.<com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed: java.lang.String getFundingCurveName()>();

        $r16 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        $r17 = virtualinvoke $r16.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed getPaymentCurrency2()>();

        r21 = virtualinvoke $r17.<com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed: java.lang.String getFundingCurveName()>();

        $r18 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        r22 = virtualinvoke $r18.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.util.money.Currency getCurrency2()>();

        $r19 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        r23 = virtualinvoke $r19.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.util.money.Currency getCurrency1()>();

        d23 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: double getStrike()>();

        z4 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: boolean isCall()>();

        goto label4;

     label1:
        $r8 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        $r9 = virtualinvoke $r8.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed getPaymentCurrency2()>();

        r20 = virtualinvoke $r9.<com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed: java.lang.String getFundingCurveName()>();

        $r10 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        $r11 = virtualinvoke $r10.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed getPaymentCurrency1()>();

        r21 = virtualinvoke $r11.<com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed: java.lang.String getFundingCurveName()>();

        $d13 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: double getStrike()>();

        d23 = 1.0 / $d13;

        $r12 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        r22 = virtualinvoke $r12.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.util.money.Currency getCurrency1()>();

        $r13 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        r23 = virtualinvoke $r13.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.util.money.Currency getCurrency2()>();

        $z3 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: boolean isCall()>();

        if $z3 != 0 goto label2;

        $z5 = 1;

        goto label3;

     label2:
        $z5 = 0;

     label3:
        z4 = $z5;

     label4:
        $r24 = virtualinvoke r2.<com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle: com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve getCurve(java.lang.String)>(r21);

        d1 = virtualinvoke $r24.<com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve: double getDiscountFactor(double)>(d0);

        $r25 = virtualinvoke r2.<com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle: com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve getCurve(java.lang.String)>(r20);

        d2 = virtualinvoke $r25.<com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve: double getDiscountFactor(double)>(d0);

        $r26 = virtualinvoke r2.<com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle: com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve getCurve(java.lang.String)>(r21);

        $r27 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d0);

        d3 = virtualinvoke $r26.<com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve: double getInterestRate(java.lang.Object)>($r27);

        $r28 = virtualinvoke r2.<com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle: com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve getCurve(java.lang.String)>(r20);

        $r29 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d0);

        d4 = virtualinvoke $r28.<com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve: double getInterestRate(java.lang.Object)>($r29);

        $r30 = virtualinvoke r2.<com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle: com.opengamma.analytics.financial.forex.method.FXMatrix getFxRates()>();

        d5 = virtualinvoke $r30.<com.opengamma.analytics.financial.forex.method.FXMatrix: double getFxRate(com.opengamma.util.money.Currency,com.opengamma.util.money.Currency)>(r23, r22);

        $d24 = d5 * d2;

        d6 = $d24 / d1;

        d7 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: double getExpirationTime()>();

        $z6 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: boolean isLong()>();

        if $z6 == 0 goto label5;

        $d25 = 1.0;

        goto label6;

     label5:
        $d25 = -1.0;

     label6:
        d9 = staticinvoke <com.opengamma.analytics.financial.forex.method.FXVolatilityUtils: double getVolatility(com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle,com.opengamma.util.money.Currency,com.opengamma.util.money.Currency,double,double,double)>(r2, r23, r22, d7, d6, d6);

        $d14 = d3 - d4;

        $d15 = staticinvoke <com.opengamma.analytics.financial.model.option.pricing.analytic.formula.DigitalOptionFunction: double gamma(double,double,double,double,double,double,boolean)>(d5, d23, d7, d9, d3, $d14, z4);

        d10 = $d15 * $d25;

        if z0 == 0 goto label7;

        $d22 = d10 * d5;

        return $d22;

     label7:
        $d16 = d3 - d4;

        $d17 = staticinvoke <com.opengamma.analytics.financial.model.option.pricing.analytic.formula.DigitalOptionFunction: double delta(double,double,double,double,double,double,boolean)>(d5, d23, d7, d9, d3, $d16, z4);

        d11 = $d17 * $d25;

        $d19 = d10 * d5;

        $d18 = 2.0 * d11;

        $d20 = $d19 + $d18;

        $d21 = $d20 * d5;

        d12 = $d21 * d5;

        return d12;
    }

    public com.opengamma.util.money.CurrencyAmount gammaSpot(com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital, com.opengamma.analytics.financial.interestrate.YieldCurveBundle, boolean)
    {
        com.opengamma.analytics.financial.forex.method.ForexOptionDigitalBlackMethod r0;
        com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital r1;
        com.opengamma.analytics.financial.interestrate.YieldCurveBundle r2;
        boolean z0, $z1, $z2;
        com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle r3;
        double d0, $d1, $d2, $d3;
        com.opengamma.analytics.financial.forex.derivative.Forex $r5, $r6, $r9;
        com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed $r7;
        com.opengamma.util.money.CurrencyAmount $r8;
        com.opengamma.util.money.Currency r10;

        r0 := @this: com.opengamma.analytics.financial.forex.method.ForexOptionDigitalBlackMethod;

        r1 := @parameter0: com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital;

        r2 := @parameter1: com.opengamma.analytics.financial.interestrate.YieldCurveBundle;

        z0 := @parameter2: boolean;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, "Curves");

        $z1 = r2 instanceof com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z1, "Yield curve bundle should contain smile data");

        r3 = (com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle) r2;

        $z2 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: boolean payDomestic()>();

        if $z2 == 0 goto label1;

        $r9 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        r10 = virtualinvoke $r9.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.util.money.Currency getCurrency2()>();

        goto label2;

     label1:
        $r5 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        r10 = virtualinvoke $r5.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.util.money.Currency getCurrency1()>();

     label2:
        d0 = virtualinvoke r0.<com.opengamma.analytics.financial.forex.method.ForexOptionDigitalBlackMethod: double gammaRelativeSpot(com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital,com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle,boolean)>(r1, r3, z0);

        $r6 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        $r7 = virtualinvoke $r6.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed getPaymentCurrency1()>();

        $d1 = virtualinvoke $r7.<com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed: double getAmount()>();

        $d2 = staticinvoke <java.lang.Math: double abs(double)>($d1);

        $d3 = d0 * $d2;

        $r8 = staticinvoke <com.opengamma.util.money.CurrencyAmount: com.opengamma.util.money.CurrencyAmount of(com.opengamma.util.money.Currency,double)>(r10, $d3);

        return $r8;
    }

    public com.opengamma.util.money.CurrencyAmount forwardTheta(com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital, com.opengamma.analytics.financial.interestrate.YieldCurveBundle)
    {
        com.opengamma.analytics.financial.forex.method.ForexOptionDigitalBlackMethod r0;
        com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital r1;
        com.opengamma.analytics.financial.interestrate.YieldCurveBundle r2;
        com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle r3;
        double d0, d1, d2, d3, d4, d5, d6, d7, d8, d10, $d11, $d12, $d13, $d14, $d15, $d16, d17, $d18, $d19;
        boolean $z0, $z1, $z2, z3, $z4, $z5;
        com.opengamma.analytics.financial.forex.derivative.Forex $r5, $r6, $r8, $r10, $r11, $r12, $r14, $r17, $r19, $r21, $r22;
        com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed $r7, $r9, $r13, $r18, $r20;
        com.opengamma.util.money.Currency $r15, r25, r26;
        com.opengamma.util.money.CurrencyAmount $r16;
        java.lang.String r23, r24;
        com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve $r27, $r28, $r29, $r31;
        java.lang.Double $r30, $r32;
        com.opengamma.analytics.financial.forex.method.FXMatrix $r33;

        r0 := @this: com.opengamma.analytics.financial.forex.method.ForexOptionDigitalBlackMethod;

        r1 := @parameter0: com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital;

        r2 := @parameter1: com.opengamma.analytics.financial.interestrate.YieldCurveBundle;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, "Curves");

        $z0 = r2 instanceof com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z0, "Yield curve bundle should contain smile data");

        r3 = (com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle) r2;

        $r5 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        d0 = virtualinvoke $r5.<com.opengamma.analytics.financial.forex.derivative.Forex: double getPaymentTime()>();

        $z1 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: boolean payDomestic()>();

        if $z1 == 0 goto label1;

        $r17 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        $r18 = virtualinvoke $r17.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed getPaymentCurrency1()>();

        r23 = virtualinvoke $r18.<com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed: java.lang.String getFundingCurveName()>();

        $r19 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        $r20 = virtualinvoke $r19.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed getPaymentCurrency2()>();

        r24 = virtualinvoke $r20.<com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed: java.lang.String getFundingCurveName()>();

        $r21 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        r25 = virtualinvoke $r21.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.util.money.Currency getCurrency2()>();

        $r22 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        r26 = virtualinvoke $r22.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.util.money.Currency getCurrency1()>();

        d17 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: double getStrike()>();

        z3 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: boolean isCall()>();

        goto label4;

     label1:
        $r6 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        $r7 = virtualinvoke $r6.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed getPaymentCurrency2()>();

        r23 = virtualinvoke $r7.<com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed: java.lang.String getFundingCurveName()>();

        $r8 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        $r9 = virtualinvoke $r8.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed getPaymentCurrency1()>();

        r24 = virtualinvoke $r9.<com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed: java.lang.String getFundingCurveName()>();

        $d11 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: double getStrike()>();

        d17 = 1.0 / $d11;

        $r10 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        r25 = virtualinvoke $r10.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.util.money.Currency getCurrency1()>();

        $r11 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        r26 = virtualinvoke $r11.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.util.money.Currency getCurrency2()>();

        $z2 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: boolean isCall()>();

        if $z2 != 0 goto label2;

        $z4 = 1;

        goto label3;

     label2:
        $z4 = 0;

     label3:
        z3 = $z4;

     label4:
        $r27 = virtualinvoke r3.<com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle: com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve getCurve(java.lang.String)>(r24);

        d1 = virtualinvoke $r27.<com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve: double getDiscountFactor(double)>(d0);

        $r28 = virtualinvoke r3.<com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle: com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve getCurve(java.lang.String)>(r23);

        d2 = virtualinvoke $r28.<com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve: double getDiscountFactor(double)>(d0);

        $r29 = virtualinvoke r3.<com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle: com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve getCurve(java.lang.String)>(r24);

        $r30 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d0);

        d3 = virtualinvoke $r29.<com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve: double getInterestRate(java.lang.Object)>($r30);

        $r31 = virtualinvoke r3.<com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle: com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve getCurve(java.lang.String)>(r23);

        $r32 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d0);

        d4 = virtualinvoke $r31.<com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve: double getInterestRate(java.lang.Object)>($r32);

        $r33 = virtualinvoke r3.<com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle: com.opengamma.analytics.financial.forex.method.FXMatrix getFxRates()>();

        d5 = virtualinvoke $r33.<com.opengamma.analytics.financial.forex.method.FXMatrix: double getFxRate(com.opengamma.util.money.Currency,com.opengamma.util.money.Currency)>(r26, r25);

        $d18 = d5 * d2;

        d6 = $d18 / d1;

        d7 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: double getExpirationTime()>();

        d8 = staticinvoke <com.opengamma.analytics.financial.forex.method.FXVolatilityUtils: double getVolatility(com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle,com.opengamma.util.money.Currency,com.opengamma.util.money.Currency,double,double,double)>(r3, r26, r25, d7, d6, d6);

        $z5 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: boolean isLong()>();

        if $z5 == 0 goto label5;

        $d19 = 1.0;

        goto label6;

     label5:
        $d19 = -1.0;

     label6:
        $d12 = d3 - d4;

        $d13 = staticinvoke <com.opengamma.analytics.financial.model.option.pricing.analytic.formula.DigitalOptionFunction: double theta(double,double,double,double,double,double,boolean)>(d5, d17, d7, d8, d3, $d12, z3);

        $d14 = $d13 * $d19;

        $r12 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        $r13 = virtualinvoke $r12.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed getPaymentCurrency1()>();

        $d15 = virtualinvoke $r13.<com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed: double getAmount()>();

        $d16 = staticinvoke <java.lang.Math: double abs(double)>($d15);

        d10 = $d14 * $d16;

        $r14 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        $r15 = virtualinvoke $r14.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.util.money.Currency getCurrency2()>();

        $r16 = staticinvoke <com.opengamma.util.money.CurrencyAmount: com.opengamma.util.money.CurrencyAmount of(com.opengamma.util.money.Currency,double)>($r15, d10);

        return $r16;
    }

    public double spotDeltaTheoretical(com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital, com.opengamma.analytics.financial.interestrate.YieldCurveBundle)
    {
        com.opengamma.analytics.financial.forex.method.ForexOptionDigitalBlackMethod r0;
        com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital r1;
        com.opengamma.analytics.financial.interestrate.YieldCurveBundle r2;
        com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle r3;
        double d0, d1, d2, d3, d4, d5, d6, d7, d8, $d10, $d11, $d12, $d13, d14, $d15, $d16;
        boolean $z0, $z1, $z2, z3, $z4, $z5;
        com.opengamma.analytics.financial.forex.derivative.Forex $r5, $r6, $r8, $r10, $r11, $r12, $r14, $r16, $r17;
        com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed $r7, $r9, $r13, $r15;
        java.lang.String r18, r19;
        com.opengamma.util.money.Currency r20, r21;
        com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve $r22, $r23, $r24, $r26;
        java.lang.Double $r25, $r27;
        com.opengamma.analytics.financial.forex.method.FXMatrix $r28;

        r0 := @this: com.opengamma.analytics.financial.forex.method.ForexOptionDigitalBlackMethod;

        r1 := @parameter0: com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital;

        r2 := @parameter1: com.opengamma.analytics.financial.interestrate.YieldCurveBundle;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, "Curves");

        $z0 = r2 instanceof com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z0, "Yield curve bundle should contain smile data");

        r3 = (com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle) r2;

        $r5 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        d0 = virtualinvoke $r5.<com.opengamma.analytics.financial.forex.derivative.Forex: double getPaymentTime()>();

        $z1 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: boolean payDomestic()>();

        if $z1 == 0 goto label1;

        $r12 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        $r13 = virtualinvoke $r12.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed getPaymentCurrency1()>();

        r18 = virtualinvoke $r13.<com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed: java.lang.String getFundingCurveName()>();

        $r14 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        $r15 = virtualinvoke $r14.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed getPaymentCurrency2()>();

        r19 = virtualinvoke $r15.<com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed: java.lang.String getFundingCurveName()>();

        $r16 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        r20 = virtualinvoke $r16.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.util.money.Currency getCurrency2()>();

        $r17 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        r21 = virtualinvoke $r17.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.util.money.Currency getCurrency1()>();

        d14 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: double getStrike()>();

        z3 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: boolean isCall()>();

        goto label4;

     label1:
        $r6 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        $r7 = virtualinvoke $r6.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed getPaymentCurrency2()>();

        r18 = virtualinvoke $r7.<com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed: java.lang.String getFundingCurveName()>();

        $r8 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        $r9 = virtualinvoke $r8.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed getPaymentCurrency1()>();

        r19 = virtualinvoke $r9.<com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed: java.lang.String getFundingCurveName()>();

        $d10 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: double getStrike()>();

        d14 = 1.0 / $d10;

        $r10 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        r20 = virtualinvoke $r10.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.util.money.Currency getCurrency1()>();

        $r11 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        r21 = virtualinvoke $r11.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.util.money.Currency getCurrency2()>();

        $z2 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: boolean isCall()>();

        if $z2 != 0 goto label2;

        $z4 = 1;

        goto label3;

     label2:
        $z4 = 0;

     label3:
        z3 = $z4;

     label4:
        $r22 = virtualinvoke r3.<com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle: com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve getCurve(java.lang.String)>(r19);

        d1 = virtualinvoke $r22.<com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve: double getDiscountFactor(double)>(d0);

        $r23 = virtualinvoke r3.<com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle: com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve getCurve(java.lang.String)>(r18);

        d2 = virtualinvoke $r23.<com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve: double getDiscountFactor(double)>(d0);

        $r24 = virtualinvoke r3.<com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle: com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve getCurve(java.lang.String)>(r19);

        $r25 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d0);

        d3 = virtualinvoke $r24.<com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve: double getInterestRate(java.lang.Object)>($r25);

        $r26 = virtualinvoke r3.<com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle: com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve getCurve(java.lang.String)>(r18);

        $r27 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d0);

        d4 = virtualinvoke $r26.<com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve: double getInterestRate(java.lang.Object)>($r27);

        $r28 = virtualinvoke r3.<com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle: com.opengamma.analytics.financial.forex.method.FXMatrix getFxRates()>();

        d5 = virtualinvoke $r28.<com.opengamma.analytics.financial.forex.method.FXMatrix: double getFxRate(com.opengamma.util.money.Currency,com.opengamma.util.money.Currency)>(r21, r20);

        $d15 = d5 * d2;

        d6 = $d15 / d1;

        d7 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: double getExpirationTime()>();

        d8 = staticinvoke <com.opengamma.analytics.financial.forex.method.FXVolatilityUtils: double getVolatility(com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle,com.opengamma.util.money.Currency,com.opengamma.util.money.Currency,double,double,double)>(r3, r21, r20, d7, d6, d6);

        $z5 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: boolean isLong()>();

        if $z5 == 0 goto label5;

        $d16 = 1.0;

        goto label6;

     label5:
        $d16 = -1.0;

     label6:
        $d11 = d3 - d4;

        $d12 = staticinvoke <com.opengamma.analytics.financial.model.option.pricing.analytic.formula.DigitalOptionFunction: double delta(double,double,double,double,double,double,boolean)>(d5, d14, d7, d8, d3, $d11, z3);

        $d13 = $d12 * $d16;

        return $d13;
    }

    public double forwardDeltaTheoretical(com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital, com.opengamma.analytics.financial.interestrate.YieldCurveBundle)
    {
        com.opengamma.analytics.financial.forex.method.ForexOptionDigitalBlackMethod r0;
        com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital r1;
        com.opengamma.analytics.financial.interestrate.YieldCurveBundle r2;
        com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle r3;
        double d0, d1, d2, d3, d4, d5, d6, d7, d8, $d10, $d11, $d12, $d13, $d14, d15, $d16, $d17;
        boolean $z0, $z1, $z2, z3, $z4, $z5;
        com.opengamma.analytics.financial.forex.derivative.Forex $r5, $r6, $r8, $r10, $r11, $r12, $r14, $r16, $r17;
        com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed $r7, $r9, $r13, $r15;
        java.lang.String r18, r19;
        com.opengamma.util.money.Currency r20, r21;
        com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve $r22, $r23, $r24, $r26;
        java.lang.Double $r25, $r27;
        com.opengamma.analytics.financial.forex.method.FXMatrix $r28;

        r0 := @this: com.opengamma.analytics.financial.forex.method.ForexOptionDigitalBlackMethod;

        r1 := @parameter0: com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital;

        r2 := @parameter1: com.opengamma.analytics.financial.interestrate.YieldCurveBundle;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, "Curves");

        $z0 = r2 instanceof com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z0, "Yield curve bundle should contain smile data");

        r3 = (com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle) r2;

        $r5 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        d0 = virtualinvoke $r5.<com.opengamma.analytics.financial.forex.derivative.Forex: double getPaymentTime()>();

        $z1 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: boolean payDomestic()>();

        if $z1 == 0 goto label1;

        $r12 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        $r13 = virtualinvoke $r12.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed getPaymentCurrency1()>();

        r18 = virtualinvoke $r13.<com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed: java.lang.String getFundingCurveName()>();

        $r14 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        $r15 = virtualinvoke $r14.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed getPaymentCurrency2()>();

        r19 = virtualinvoke $r15.<com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed: java.lang.String getFundingCurveName()>();

        $r16 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        r20 = virtualinvoke $r16.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.util.money.Currency getCurrency2()>();

        $r17 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        r21 = virtualinvoke $r17.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.util.money.Currency getCurrency1()>();

        d15 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: double getStrike()>();

        z3 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: boolean isCall()>();

        goto label4;

     label1:
        $r6 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        $r7 = virtualinvoke $r6.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed getPaymentCurrency2()>();

        r18 = virtualinvoke $r7.<com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed: java.lang.String getFundingCurveName()>();

        $r8 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        $r9 = virtualinvoke $r8.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed getPaymentCurrency1()>();

        r19 = virtualinvoke $r9.<com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed: java.lang.String getFundingCurveName()>();

        $d10 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: double getStrike()>();

        d15 = 1.0 / $d10;

        $r10 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        r20 = virtualinvoke $r10.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.util.money.Currency getCurrency1()>();

        $r11 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        r21 = virtualinvoke $r11.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.util.money.Currency getCurrency2()>();

        $z2 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: boolean isCall()>();

        if $z2 != 0 goto label2;

        $z4 = 1;

        goto label3;

     label2:
        $z4 = 0;

     label3:
        z3 = $z4;

     label4:
        $r22 = virtualinvoke r3.<com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle: com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve getCurve(java.lang.String)>(r19);

        d1 = virtualinvoke $r22.<com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve: double getDiscountFactor(double)>(d0);

        $r23 = virtualinvoke r3.<com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle: com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve getCurve(java.lang.String)>(r18);

        d2 = virtualinvoke $r23.<com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve: double getDiscountFactor(double)>(d0);

        $r24 = virtualinvoke r3.<com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle: com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve getCurve(java.lang.String)>(r19);

        $r25 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d0);

        d3 = virtualinvoke $r24.<com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve: double getInterestRate(java.lang.Object)>($r25);

        $r26 = virtualinvoke r3.<com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle: com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve getCurve(java.lang.String)>(r18);

        $r27 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d0);

        d4 = virtualinvoke $r26.<com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve: double getInterestRate(java.lang.Object)>($r27);

        $r28 = virtualinvoke r3.<com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle: com.opengamma.analytics.financial.forex.method.FXMatrix getFxRates()>();

        d5 = virtualinvoke $r28.<com.opengamma.analytics.financial.forex.method.FXMatrix: double getFxRate(com.opengamma.util.money.Currency,com.opengamma.util.money.Currency)>(r21, r20);

        $d16 = d5 * d2;

        d6 = $d16 / d1;

        d7 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: double getExpirationTime()>();

        d8 = staticinvoke <com.opengamma.analytics.financial.forex.method.FXVolatilityUtils: double getVolatility(com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle,com.opengamma.util.money.Currency,com.opengamma.util.money.Currency,double,double,double)>(r3, r21, r20, d7, d6, d6);

        $z5 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: boolean isLong()>();

        if $z5 == 0 goto label5;

        $d17 = 1.0;

        goto label6;

     label5:
        $d17 = -1.0;

     label6:
        $d11 = d3 - d4;

        $d12 = staticinvoke <com.opengamma.analytics.financial.model.option.pricing.analytic.formula.DigitalOptionFunction: double delta(double,double,double,double,double,double,boolean)>(d5, d15, d7, d8, d3, $d11, z3);

        $d13 = $d12 * $d17;

        $d14 = $d13 / d2;

        return $d14;
    }

    public double spotGammaTheoretical(com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital, com.opengamma.analytics.financial.interestrate.YieldCurveBundle)
    {
        com.opengamma.analytics.financial.forex.method.ForexOptionDigitalBlackMethod r0;
        com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital r1;
        com.opengamma.analytics.financial.interestrate.YieldCurveBundle r2;
        com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle r3;
        double d0, d1, d2, d3, d4, d5, d6, d7, d8, $d10, $d11, $d12, $d13, d14, $d15, $d16;
        boolean $z0, $z1, $z2, z3, $z4, $z5;
        com.opengamma.analytics.financial.forex.derivative.Forex $r5, $r6, $r8, $r10, $r11, $r12, $r14, $r16, $r17;
        com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed $r7, $r9, $r13, $r15;
        java.lang.String r18, r19;
        com.opengamma.util.money.Currency r20, r21;
        com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve $r22, $r23, $r24, $r26;
        java.lang.Double $r25, $r27;
        com.opengamma.analytics.financial.forex.method.FXMatrix $r28;

        r0 := @this: com.opengamma.analytics.financial.forex.method.ForexOptionDigitalBlackMethod;

        r1 := @parameter0: com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital;

        r2 := @parameter1: com.opengamma.analytics.financial.interestrate.YieldCurveBundle;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, "Curves");

        $z0 = r2 instanceof com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z0, "Yield curve bundle should contain smile data");

        r3 = (com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle) r2;

        $r5 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        d0 = virtualinvoke $r5.<com.opengamma.analytics.financial.forex.derivative.Forex: double getPaymentTime()>();

        $z1 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: boolean payDomestic()>();

        if $z1 == 0 goto label1;

        $r12 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        $r13 = virtualinvoke $r12.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed getPaymentCurrency1()>();

        r18 = virtualinvoke $r13.<com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed: java.lang.String getFundingCurveName()>();

        $r14 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        $r15 = virtualinvoke $r14.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed getPaymentCurrency2()>();

        r19 = virtualinvoke $r15.<com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed: java.lang.String getFundingCurveName()>();

        $r16 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        r20 = virtualinvoke $r16.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.util.money.Currency getCurrency2()>();

        $r17 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        r21 = virtualinvoke $r17.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.util.money.Currency getCurrency1()>();

        d14 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: double getStrike()>();

        z3 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: boolean isCall()>();

        goto label4;

     label1:
        $r6 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        $r7 = virtualinvoke $r6.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed getPaymentCurrency2()>();

        r18 = virtualinvoke $r7.<com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed: java.lang.String getFundingCurveName()>();

        $r8 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        $r9 = virtualinvoke $r8.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed getPaymentCurrency1()>();

        r19 = virtualinvoke $r9.<com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed: java.lang.String getFundingCurveName()>();

        $d10 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: double getStrike()>();

        d14 = 1.0 / $d10;

        $r10 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        r20 = virtualinvoke $r10.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.util.money.Currency getCurrency1()>();

        $r11 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        r21 = virtualinvoke $r11.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.util.money.Currency getCurrency2()>();

        $z2 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: boolean isCall()>();

        if $z2 != 0 goto label2;

        $z4 = 1;

        goto label3;

     label2:
        $z4 = 0;

     label3:
        z3 = $z4;

     label4:
        $r22 = virtualinvoke r3.<com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle: com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve getCurve(java.lang.String)>(r19);

        d1 = virtualinvoke $r22.<com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve: double getDiscountFactor(double)>(d0);

        $r23 = virtualinvoke r3.<com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle: com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve getCurve(java.lang.String)>(r18);

        d2 = virtualinvoke $r23.<com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve: double getDiscountFactor(double)>(d0);

        $r24 = virtualinvoke r3.<com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle: com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve getCurve(java.lang.String)>(r19);

        $r25 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d0);

        d3 = virtualinvoke $r24.<com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve: double getInterestRate(java.lang.Object)>($r25);

        $r26 = virtualinvoke r3.<com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle: com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve getCurve(java.lang.String)>(r18);

        $r27 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d0);

        d4 = virtualinvoke $r26.<com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve: double getInterestRate(java.lang.Object)>($r27);

        $r28 = virtualinvoke r3.<com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle: com.opengamma.analytics.financial.forex.method.FXMatrix getFxRates()>();

        d5 = virtualinvoke $r28.<com.opengamma.analytics.financial.forex.method.FXMatrix: double getFxRate(com.opengamma.util.money.Currency,com.opengamma.util.money.Currency)>(r21, r20);

        $d15 = d5 * d2;

        d6 = $d15 / d1;

        d7 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: double getExpirationTime()>();

        d8 = staticinvoke <com.opengamma.analytics.financial.forex.method.FXVolatilityUtils: double getVolatility(com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle,com.opengamma.util.money.Currency,com.opengamma.util.money.Currency,double,double,double)>(r3, r21, r20, d7, d6, d6);

        $z5 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: boolean isLong()>();

        if $z5 == 0 goto label5;

        $d16 = 1.0;

        goto label6;

     label5:
        $d16 = -1.0;

     label6:
        $d11 = d3 - d4;

        $d12 = staticinvoke <com.opengamma.analytics.financial.model.option.pricing.analytic.formula.DigitalOptionFunction: double gamma(double,double,double,double,double,double,boolean)>(d5, d14, d7, d8, d3, $d11, z3);

        $d13 = $d12 * $d16;

        return $d13;
    }

    public double forwardGammaTheoretical(com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital, com.opengamma.analytics.financial.interestrate.YieldCurveBundle)
    {
        com.opengamma.analytics.financial.forex.method.ForexOptionDigitalBlackMethod r0;
        com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital r1;
        com.opengamma.analytics.financial.interestrate.YieldCurveBundle r2;
        com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle r3;
        double d0, d1, d2, d3, d4, d5, d6, d7, d8, $d10, $d11, $d12, $d13, $d14, $d15, $d16, d17, $d18, $d19;
        boolean $z0, $z1, $z2, z3, $z4, $z5;
        com.opengamma.analytics.financial.forex.derivative.Forex $r5, $r6, $r8, $r10, $r11, $r12, $r14, $r16, $r17;
        com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed $r7, $r9, $r13, $r15;
        java.lang.String r18, r19;
        com.opengamma.util.money.Currency r20, r21;
        com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve $r22, $r23, $r24, $r26;
        java.lang.Double $r25, $r27;
        com.opengamma.analytics.financial.forex.method.FXMatrix $r28;

        r0 := @this: com.opengamma.analytics.financial.forex.method.ForexOptionDigitalBlackMethod;

        r1 := @parameter0: com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital;

        r2 := @parameter1: com.opengamma.analytics.financial.interestrate.YieldCurveBundle;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, "Curves");

        $z0 = r2 instanceof com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z0, "Yield curve bundle should contain smile data");

        r3 = (com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle) r2;

        $r5 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        d0 = virtualinvoke $r5.<com.opengamma.analytics.financial.forex.derivative.Forex: double getPaymentTime()>();

        $z1 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: boolean payDomestic()>();

        if $z1 == 0 goto label1;

        $r12 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        $r13 = virtualinvoke $r12.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed getPaymentCurrency1()>();

        r18 = virtualinvoke $r13.<com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed: java.lang.String getFundingCurveName()>();

        $r14 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        $r15 = virtualinvoke $r14.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed getPaymentCurrency2()>();

        r19 = virtualinvoke $r15.<com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed: java.lang.String getFundingCurveName()>();

        $r16 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        r20 = virtualinvoke $r16.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.util.money.Currency getCurrency2()>();

        $r17 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        r21 = virtualinvoke $r17.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.util.money.Currency getCurrency1()>();

        d17 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: double getStrike()>();

        z3 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: boolean isCall()>();

        goto label4;

     label1:
        $r6 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        $r7 = virtualinvoke $r6.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed getPaymentCurrency2()>();

        r18 = virtualinvoke $r7.<com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed: java.lang.String getFundingCurveName()>();

        $r8 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        $r9 = virtualinvoke $r8.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed getPaymentCurrency1()>();

        r19 = virtualinvoke $r9.<com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed: java.lang.String getFundingCurveName()>();

        $d10 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: double getStrike()>();

        d17 = 1.0 / $d10;

        $r10 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        r20 = virtualinvoke $r10.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.util.money.Currency getCurrency1()>();

        $r11 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        r21 = virtualinvoke $r11.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.util.money.Currency getCurrency2()>();

        $z2 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: boolean isCall()>();

        if $z2 != 0 goto label2;

        $z4 = 1;

        goto label3;

     label2:
        $z4 = 0;

     label3:
        z3 = $z4;

     label4:
        $r22 = virtualinvoke r3.<com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle: com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve getCurve(java.lang.String)>(r19);

        d1 = virtualinvoke $r22.<com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve: double getDiscountFactor(double)>(d0);

        $r23 = virtualinvoke r3.<com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle: com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve getCurve(java.lang.String)>(r18);

        d2 = virtualinvoke $r23.<com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve: double getDiscountFactor(double)>(d0);

        $r24 = virtualinvoke r3.<com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle: com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve getCurve(java.lang.String)>(r19);

        $r25 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d0);

        d3 = virtualinvoke $r24.<com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve: double getInterestRate(java.lang.Object)>($r25);

        $r26 = virtualinvoke r3.<com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle: com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve getCurve(java.lang.String)>(r18);

        $r27 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d0);

        d4 = virtualinvoke $r26.<com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve: double getInterestRate(java.lang.Object)>($r27);

        $r28 = virtualinvoke r3.<com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle: com.opengamma.analytics.financial.forex.method.FXMatrix getFxRates()>();

        d5 = virtualinvoke $r28.<com.opengamma.analytics.financial.forex.method.FXMatrix: double getFxRate(com.opengamma.util.money.Currency,com.opengamma.util.money.Currency)>(r21, r20);

        $d18 = d5 * d2;

        d6 = $d18 / d1;

        d7 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: double getExpirationTime()>();

        d8 = staticinvoke <com.opengamma.analytics.financial.forex.method.FXVolatilityUtils: double getVolatility(com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle,com.opengamma.util.money.Currency,com.opengamma.util.money.Currency,double,double,double)>(r3, r21, r20, d7, d6, d6);

        $z5 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: boolean isLong()>();

        if $z5 == 0 goto label5;

        $d19 = 1.0;

        goto label6;

     label5:
        $d19 = -1.0;

     label6:
        $d11 = d3 - d4;

        $d12 = staticinvoke <com.opengamma.analytics.financial.model.option.pricing.analytic.formula.DigitalOptionFunction: double gamma(double,double,double,double,double,double,boolean)>(d5, d17, d7, d8, d3, $d11, z3);

        $d13 = $d12 * $d19;

        $d14 = $d13 * d1;

        $d15 = $d14 / d2;

        $d16 = $d15 / d2;

        return $d16;
    }

    public double forwardVegaTheoretical(com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital, com.opengamma.analytics.financial.interestrate.YieldCurveBundle)
    {
        com.opengamma.analytics.financial.forex.method.ForexOptionDigitalBlackMethod r0;
        com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital r1;
        com.opengamma.analytics.financial.interestrate.YieldCurveBundle r2;
        com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle r3;
        double d0, d1, d2, d3, d4, d5, d6, d7, d8, $d10, $d11, $d12, $d13, $d14, d15, $d16, $d17;
        boolean $z0, $z1, $z2, z3, $z4, $z5;
        com.opengamma.analytics.financial.forex.derivative.Forex $r5, $r6, $r8, $r10, $r11, $r12, $r14, $r16, $r17;
        com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed $r7, $r9, $r13, $r15;
        java.lang.String r18, r19;
        com.opengamma.util.money.Currency r20, r21;
        com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve $r22, $r23, $r24, $r26;
        java.lang.Double $r25, $r27;
        com.opengamma.analytics.financial.forex.method.FXMatrix $r28;

        r0 := @this: com.opengamma.analytics.financial.forex.method.ForexOptionDigitalBlackMethod;

        r1 := @parameter0: com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital;

        r2 := @parameter1: com.opengamma.analytics.financial.interestrate.YieldCurveBundle;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, "Curves");

        $z0 = r2 instanceof com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z0, "Yield curve bundle should contain smile data");

        r3 = (com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle) r2;

        $r5 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        d0 = virtualinvoke $r5.<com.opengamma.analytics.financial.forex.derivative.Forex: double getPaymentTime()>();

        $z1 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: boolean payDomestic()>();

        if $z1 == 0 goto label1;

        $r12 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        $r13 = virtualinvoke $r12.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed getPaymentCurrency1()>();

        r18 = virtualinvoke $r13.<com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed: java.lang.String getFundingCurveName()>();

        $r14 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        $r15 = virtualinvoke $r14.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed getPaymentCurrency2()>();

        r19 = virtualinvoke $r15.<com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed: java.lang.String getFundingCurveName()>();

        $r16 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        r20 = virtualinvoke $r16.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.util.money.Currency getCurrency2()>();

        $r17 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        r21 = virtualinvoke $r17.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.util.money.Currency getCurrency1()>();

        d15 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: double getStrike()>();

        z3 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: boolean isCall()>();

        goto label4;

     label1:
        $r6 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        $r7 = virtualinvoke $r6.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed getPaymentCurrency2()>();

        r18 = virtualinvoke $r7.<com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed: java.lang.String getFundingCurveName()>();

        $r8 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        $r9 = virtualinvoke $r8.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed getPaymentCurrency1()>();

        r19 = virtualinvoke $r9.<com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed: java.lang.String getFundingCurveName()>();

        $d10 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: double getStrike()>();

        d15 = 1.0 / $d10;

        $r10 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        r20 = virtualinvoke $r10.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.util.money.Currency getCurrency1()>();

        $r11 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        r21 = virtualinvoke $r11.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.util.money.Currency getCurrency2()>();

        $z2 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: boolean isCall()>();

        if $z2 != 0 goto label2;

        $z4 = 1;

        goto label3;

     label2:
        $z4 = 0;

     label3:
        z3 = $z4;

     label4:
        $r22 = virtualinvoke r3.<com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle: com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve getCurve(java.lang.String)>(r19);

        d1 = virtualinvoke $r22.<com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve: double getDiscountFactor(double)>(d0);

        $r23 = virtualinvoke r3.<com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle: com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve getCurve(java.lang.String)>(r18);

        d2 = virtualinvoke $r23.<com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve: double getDiscountFactor(double)>(d0);

        $r24 = virtualinvoke r3.<com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle: com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve getCurve(java.lang.String)>(r19);

        $r25 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d0);

        d3 = virtualinvoke $r24.<com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve: double getInterestRate(java.lang.Object)>($r25);

        $r26 = virtualinvoke r3.<com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle: com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve getCurve(java.lang.String)>(r18);

        $r27 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d0);

        d4 = virtualinvoke $r26.<com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve: double getInterestRate(java.lang.Object)>($r27);

        $r28 = virtualinvoke r3.<com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle: com.opengamma.analytics.financial.forex.method.FXMatrix getFxRates()>();

        d5 = virtualinvoke $r28.<com.opengamma.analytics.financial.forex.method.FXMatrix: double getFxRate(com.opengamma.util.money.Currency,com.opengamma.util.money.Currency)>(r21, r20);

        $d16 = d5 * d2;

        d6 = $d16 / d1;

        d7 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: double getExpirationTime()>();

        d8 = staticinvoke <com.opengamma.analytics.financial.forex.method.FXVolatilityUtils: double getVolatility(com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle,com.opengamma.util.money.Currency,com.opengamma.util.money.Currency,double,double,double)>(r3, r21, r20, d7, d6, d6);

        $z5 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: boolean isLong()>();

        if $z5 == 0 goto label5;

        $d17 = 1.0;

        goto label6;

     label5:
        $d17 = -1.0;

     label6:
        $d11 = d3 - d4;

        $d12 = staticinvoke <com.opengamma.analytics.financial.model.option.pricing.analytic.formula.DigitalOptionFunction: double vega(double,double,double,double,double,double,boolean)>(d5, d15, d7, d8, d3, $d11, z3);

        $d13 = $d12 * $d17;

        $d14 = $d13 / d1;

        return $d14;
    }

    public double forwardDriftlessThetaTheoretical(com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital, com.opengamma.analytics.financial.interestrate.YieldCurveBundle)
    {
        com.opengamma.analytics.financial.forex.method.ForexOptionDigitalBlackMethod r0;
        com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital r1;
        com.opengamma.analytics.financial.interestrate.YieldCurveBundle r2;
        com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle r3;
        double d0, d1, d2, d3, d4, d5, d6, $d8, $d9, $d10, d11, $d12, $d13;
        boolean $z0, $z1, $z2, z3, $z4, $z5;
        com.opengamma.analytics.financial.forex.derivative.Forex $r5, $r6, $r8, $r10, $r11, $r12, $r14, $r16, $r17;
        com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed $r7, $r9, $r13, $r15;
        java.lang.String r18, r19;
        com.opengamma.util.money.Currency r20, r21;
        com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve $r22, $r23;
        com.opengamma.analytics.financial.forex.method.FXMatrix $r24;

        r0 := @this: com.opengamma.analytics.financial.forex.method.ForexOptionDigitalBlackMethod;

        r1 := @parameter0: com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital;

        r2 := @parameter1: com.opengamma.analytics.financial.interestrate.YieldCurveBundle;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, "Curves");

        $z0 = r2 instanceof com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z0, "Yield curve bundle should contain smile data");

        r3 = (com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle) r2;

        $r5 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        d0 = virtualinvoke $r5.<com.opengamma.analytics.financial.forex.derivative.Forex: double getPaymentTime()>();

        $z1 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: boolean payDomestic()>();

        if $z1 == 0 goto label1;

        $r12 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        $r13 = virtualinvoke $r12.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed getPaymentCurrency1()>();

        r18 = virtualinvoke $r13.<com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed: java.lang.String getFundingCurveName()>();

        $r14 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        $r15 = virtualinvoke $r14.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed getPaymentCurrency2()>();

        r19 = virtualinvoke $r15.<com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed: java.lang.String getFundingCurveName()>();

        $r16 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        r20 = virtualinvoke $r16.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.util.money.Currency getCurrency2()>();

        $r17 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        r21 = virtualinvoke $r17.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.util.money.Currency getCurrency1()>();

        d11 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: double getStrike()>();

        z3 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: boolean isCall()>();

        goto label4;

     label1:
        $r6 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        $r7 = virtualinvoke $r6.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed getPaymentCurrency2()>();

        r18 = virtualinvoke $r7.<com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed: java.lang.String getFundingCurveName()>();

        $r8 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        $r9 = virtualinvoke $r8.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed getPaymentCurrency1()>();

        r19 = virtualinvoke $r9.<com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed: java.lang.String getFundingCurveName()>();

        $d8 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: double getStrike()>();

        d11 = 1.0 / $d8;

        $r10 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        r20 = virtualinvoke $r10.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.util.money.Currency getCurrency1()>();

        $r11 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        r21 = virtualinvoke $r11.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.util.money.Currency getCurrency2()>();

        $z2 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: boolean isCall()>();

        if $z2 != 0 goto label2;

        $z4 = 1;

        goto label3;

     label2:
        $z4 = 0;

     label3:
        z3 = $z4;

     label4:
        $r22 = virtualinvoke r3.<com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle: com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve getCurve(java.lang.String)>(r19);

        d1 = virtualinvoke $r22.<com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve: double getDiscountFactor(double)>(d0);

        $r23 = virtualinvoke r3.<com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle: com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve getCurve(java.lang.String)>(r18);

        d2 = virtualinvoke $r23.<com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve: double getDiscountFactor(double)>(d0);

        $r24 = virtualinvoke r3.<com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle: com.opengamma.analytics.financial.forex.method.FXMatrix getFxRates()>();

        d3 = virtualinvoke $r24.<com.opengamma.analytics.financial.forex.method.FXMatrix: double getFxRate(com.opengamma.util.money.Currency,com.opengamma.util.money.Currency)>(r21, r20);

        $d12 = d3 * d2;

        d4 = $d12 / d1;

        d5 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: double getExpirationTime()>();

        d6 = staticinvoke <com.opengamma.analytics.financial.forex.method.FXVolatilityUtils: double getVolatility(com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle,com.opengamma.util.money.Currency,com.opengamma.util.money.Currency,double,double,double)>(r3, r21, r20, d5, d4, d4);

        $z5 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: boolean isLong()>();

        if $z5 == 0 goto label5;

        $d13 = 1.0;

        goto label6;

     label5:
        $d13 = -1.0;

     label6:
        $d9 = staticinvoke <com.opengamma.analytics.financial.model.option.pricing.analytic.formula.DigitalOptionFunction: double driftlessTheta(double,double,double,double,boolean)>(d4, d11, d5, d6, z3);

        $d10 = $d9 * $d13;

        return $d10;
    }

    public double thetaTheoretical(com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital, com.opengamma.analytics.financial.interestrate.YieldCurveBundle)
    {
        com.opengamma.analytics.financial.forex.method.ForexOptionDigitalBlackMethod r0;
        com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital r1;
        com.opengamma.analytics.financial.interestrate.YieldCurveBundle r2;
        com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle r3;
        double d0, d1, d2, d3, d4, d5, d6, d7, d8, $d10, $d11, $d12, $d13, d14, $d15, $d16;
        boolean $z0, $z1, $z2, z3, $z4, $z5;
        com.opengamma.analytics.financial.forex.derivative.Forex $r5, $r6, $r8, $r10, $r11, $r12, $r14, $r16, $r17;
        com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed $r7, $r9, $r13, $r15;
        java.lang.String r18, r19;
        com.opengamma.util.money.Currency r20, r21;
        com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve $r22, $r23, $r24, $r26;
        java.lang.Double $r25, $r27;
        com.opengamma.analytics.financial.forex.method.FXMatrix $r28;

        r0 := @this: com.opengamma.analytics.financial.forex.method.ForexOptionDigitalBlackMethod;

        r1 := @parameter0: com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital;

        r2 := @parameter1: com.opengamma.analytics.financial.interestrate.YieldCurveBundle;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, "Curves");

        $z0 = r2 instanceof com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z0, "Yield curve bundle should contain smile data");

        r3 = (com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle) r2;

        $r5 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        d0 = virtualinvoke $r5.<com.opengamma.analytics.financial.forex.derivative.Forex: double getPaymentTime()>();

        $z1 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: boolean payDomestic()>();

        if $z1 == 0 goto label1;

        $r12 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        $r13 = virtualinvoke $r12.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed getPaymentCurrency1()>();

        r18 = virtualinvoke $r13.<com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed: java.lang.String getFundingCurveName()>();

        $r14 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        $r15 = virtualinvoke $r14.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed getPaymentCurrency2()>();

        r19 = virtualinvoke $r15.<com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed: java.lang.String getFundingCurveName()>();

        $r16 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        r20 = virtualinvoke $r16.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.util.money.Currency getCurrency2()>();

        $r17 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        r21 = virtualinvoke $r17.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.util.money.Currency getCurrency1()>();

        d14 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: double getStrike()>();

        z3 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: boolean isCall()>();

        goto label4;

     label1:
        $r6 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        $r7 = virtualinvoke $r6.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed getPaymentCurrency2()>();

        r18 = virtualinvoke $r7.<com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed: java.lang.String getFundingCurveName()>();

        $r8 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        $r9 = virtualinvoke $r8.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed getPaymentCurrency1()>();

        r19 = virtualinvoke $r9.<com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed: java.lang.String getFundingCurveName()>();

        $d10 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: double getStrike()>();

        d14 = 1.0 / $d10;

        $r10 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        r20 = virtualinvoke $r10.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.util.money.Currency getCurrency1()>();

        $r11 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        r21 = virtualinvoke $r11.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.util.money.Currency getCurrency2()>();

        $z2 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: boolean isCall()>();

        if $z2 != 0 goto label2;

        $z4 = 1;

        goto label3;

     label2:
        $z4 = 0;

     label3:
        z3 = $z4;

     label4:
        $r22 = virtualinvoke r3.<com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle: com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve getCurve(java.lang.String)>(r19);

        d1 = virtualinvoke $r22.<com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve: double getDiscountFactor(double)>(d0);

        $r23 = virtualinvoke r3.<com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle: com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve getCurve(java.lang.String)>(r18);

        d2 = virtualinvoke $r23.<com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve: double getDiscountFactor(double)>(d0);

        $r24 = virtualinvoke r3.<com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle: com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve getCurve(java.lang.String)>(r19);

        $r25 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d0);

        d3 = virtualinvoke $r24.<com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve: double getInterestRate(java.lang.Object)>($r25);

        $r26 = virtualinvoke r3.<com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle: com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve getCurve(java.lang.String)>(r18);

        $r27 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d0);

        d4 = virtualinvoke $r26.<com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve: double getInterestRate(java.lang.Object)>($r27);

        $r28 = virtualinvoke r3.<com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle: com.opengamma.analytics.financial.forex.method.FXMatrix getFxRates()>();

        d5 = virtualinvoke $r28.<com.opengamma.analytics.financial.forex.method.FXMatrix: double getFxRate(com.opengamma.util.money.Currency,com.opengamma.util.money.Currency)>(r21, r20);

        $d15 = d5 * d2;

        d6 = $d15 / d1;

        d7 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: double getExpirationTime()>();

        d8 = staticinvoke <com.opengamma.analytics.financial.forex.method.FXVolatilityUtils: double getVolatility(com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle,com.opengamma.util.money.Currency,com.opengamma.util.money.Currency,double,double,double)>(r3, r21, r20, d7, d6, d6);

        $z5 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: boolean isLong()>();

        if $z5 == 0 goto label5;

        $d16 = 1.0;

        goto label6;

     label5:
        $d16 = -1.0;

     label6:
        $d11 = d3 - d4;

        $d12 = staticinvoke <com.opengamma.analytics.financial.model.option.pricing.analytic.formula.DigitalOptionFunction: double theta(double,double,double,double,double,double,boolean)>(d5, d14, d7, d8, d3, $d11, z3);

        $d13 = $d12 * $d16;

        return $d13;
    }

    static void <clinit>()
    {
        com.opengamma.analytics.financial.forex.method.ForexOptionDigitalBlackMethod $r0;
        com.opengamma.analytics.math.statistics.distribution.NormalDistribution $r1;

        $r0 = new com.opengamma.analytics.financial.forex.method.ForexOptionDigitalBlackMethod;

        specialinvoke $r0.<com.opengamma.analytics.financial.forex.method.ForexOptionDigitalBlackMethod: void <init>()>();

        <com.opengamma.analytics.financial.forex.method.ForexOptionDigitalBlackMethod: com.opengamma.analytics.financial.forex.method.ForexOptionDigitalBlackMethod INSTANCE> = $r0;

        $r1 = new com.opengamma.analytics.math.statistics.distribution.NormalDistribution;

        specialinvoke $r1.<com.opengamma.analytics.math.statistics.distribution.NormalDistribution: void <init>(double,double)>(0.0, 1.0);

        <com.opengamma.analytics.financial.forex.method.ForexOptionDigitalBlackMethod: com.opengamma.analytics.math.statistics.distribution.ProbabilityDistribution NORMAL> = $r1;

        return;
    }
}
