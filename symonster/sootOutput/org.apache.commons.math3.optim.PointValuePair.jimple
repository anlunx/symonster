public class org.apache.commons.math3.optim.PointValuePair extends org.apache.commons.math3.util.Pair implements java.io.Serializable
{
    private static final long serialVersionUID;

    public void <init>(double[], double)
    {
        org.apache.commons.math3.optim.PointValuePair r0;
        double[] r1;
        double d0;

        r0 := @this: org.apache.commons.math3.optim.PointValuePair;

        r1 := @parameter0: double[];

        d0 := @parameter1: double;

        specialinvoke r0.<org.apache.commons.math3.optim.PointValuePair: void <init>(double[],double,boolean)>(r1, d0, 1);

        return;
    }

    public void <init>(double[], double, boolean)
    {
        org.apache.commons.math3.optim.PointValuePair r0;
        double[] r1, $r4;
        double d0;
        boolean z0;
        java.lang.Object $r2;
        java.lang.Double $r5;

        r0 := @this: org.apache.commons.math3.optim.PointValuePair;

        r1 := @parameter0: double[];

        d0 := @parameter1: double;

        z0 := @parameter2: boolean;

        if z0 == 0 goto label2;

        if r1 != null goto label1;

        $r4 = null;

        goto label3;

     label1:
        $r2 = virtualinvoke r1.<java.lang.Object: java.lang.Object clone()>();

        $r4 = (double[]) $r2;

        goto label3;

     label2:
        $r4 = r1;

     label3:
        $r5 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d0);

        specialinvoke r0.<org.apache.commons.math3.util.Pair: void <init>(java.lang.Object,java.lang.Object)>($r4, $r5);

        return;
    }

    public double[] getPoint()
    {
        org.apache.commons.math3.optim.PointValuePair r0;
        double[] r1, $r4;
        java.lang.Object $r2, $r3;

        r0 := @this: org.apache.commons.math3.optim.PointValuePair;

        $r2 = virtualinvoke r0.<org.apache.commons.math3.optim.PointValuePair: java.lang.Object getKey()>();

        r1 = (double[]) $r2;

        if r1 != null goto label1;

        $r4 = null;

        goto label2;

     label1:
        $r3 = virtualinvoke r1.<java.lang.Object: java.lang.Object clone()>();

        $r4 = (double[]) $r3;

     label2:
        return $r4;
    }

    public double[] getPointRef()
    {
        org.apache.commons.math3.optim.PointValuePair r0;
        java.lang.Object $r1;
        double[] $r2;

        r0 := @this: org.apache.commons.math3.optim.PointValuePair;

        $r1 = virtualinvoke r0.<org.apache.commons.math3.optim.PointValuePair: java.lang.Object getKey()>();

        $r2 = (double[]) $r1;

        return $r2;
    }

    private java.lang.Object writeReplace()
    {
        org.apache.commons.math3.optim.PointValuePair r0;
        org.apache.commons.math3.optim.PointValuePair$DataTransferObject $r1;
        java.lang.Object $r2, $r4;
        double[] $r3;
        java.lang.Double $r5;
        double $d0;

        r0 := @this: org.apache.commons.math3.optim.PointValuePair;

        $r1 = new org.apache.commons.math3.optim.PointValuePair$DataTransferObject;

        $r2 = virtualinvoke r0.<org.apache.commons.math3.optim.PointValuePair: java.lang.Object getKey()>();

        $r3 = (double[]) $r2;

        $r4 = virtualinvoke r0.<org.apache.commons.math3.optim.PointValuePair: java.lang.Object getValue()>();

        $r5 = (java.lang.Double) $r4;

        $d0 = virtualinvoke $r5.<java.lang.Double: double doubleValue()>();

        specialinvoke $r1.<org.apache.commons.math3.optim.PointValuePair$DataTransferObject: void <init>(double[],double)>($r3, $d0);

        return $r1;
    }

    public static void <clinit>()
    {
        <org.apache.commons.math3.optim.PointValuePair: long serialVersionUID> = 20120513L;

        return;
    }
}
