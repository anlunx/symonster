public class com.opengamma.analytics.math.statistics.descriptive.NearestIndexQuantileMethod extends com.opengamma.analytics.math.statistics.descriptive.DiscreteQuantileMethod
{
    public static final com.opengamma.analytics.math.statistics.descriptive.NearestIndexQuantileMethod DEFAULT;

    public void <init>()
    {
        com.opengamma.analytics.math.statistics.descriptive.NearestIndexQuantileMethod r0;

        r0 := @this: com.opengamma.analytics.math.statistics.descriptive.NearestIndexQuantileMethod;

        specialinvoke r0.<com.opengamma.analytics.math.statistics.descriptive.DiscreteQuantileMethod: void <init>()>();

        return;
    }

    int index(double)
    {
        com.opengamma.analytics.math.statistics.descriptive.NearestIndexQuantileMethod r0;
        double d0;
        int i0, $i2;
        long $l1;

        r0 := @this: com.opengamma.analytics.math.statistics.descriptive.NearestIndexQuantileMethod;

        d0 := @parameter0: double;

        $l1 = staticinvoke <java.lang.Math: long round(double)>(d0);

        i0 = (int) $l1;

        if i0 <= 0 goto label1;

        $i2 = i0;

        goto label2;

     label1:
        $i2 = 1;

     label2:
        return $i2;
    }

    static void <clinit>()
    {
        com.opengamma.analytics.math.statistics.descriptive.NearestIndexQuantileMethod $r0;

        $r0 = new com.opengamma.analytics.math.statistics.descriptive.NearestIndexQuantileMethod;

        specialinvoke $r0.<com.opengamma.analytics.math.statistics.descriptive.NearestIndexQuantileMethod: void <init>()>();

        <com.opengamma.analytics.math.statistics.descriptive.NearestIndexQuantileMethod: com.opengamma.analytics.math.statistics.descriptive.NearestIndexQuantileMethod DEFAULT> = $r0;

        return;
    }
}
