class org.apache.commons.math3.optim.nonlinear.vector.MultiStartMultivariateVectorOptimizer$1 extends java.lang.Object implements java.util.Comparator
{
    private final org.apache.commons.math3.linear.RealVector target;
    private final org.apache.commons.math3.linear.RealMatrix weight;
    final org.apache.commons.math3.optim.nonlinear.vector.MultiStartMultivariateVectorOptimizer this$0;

    void <init>(org.apache.commons.math3.optim.nonlinear.vector.MultiStartMultivariateVectorOptimizer)
    {
        org.apache.commons.math3.optim.nonlinear.vector.MultiStartMultivariateVectorOptimizer$1 r0;
        org.apache.commons.math3.optim.nonlinear.vector.MultiStartMultivariateVectorOptimizer r1, $r3, $r6;
        org.apache.commons.math3.linear.ArrayRealVector $r2;
        org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer $r4, $r7;
        double[] $r5;
        org.apache.commons.math3.linear.RealMatrix $r8;

        r0 := @this: org.apache.commons.math3.optim.nonlinear.vector.MultiStartMultivariateVectorOptimizer$1;

        r1 := @parameter0: org.apache.commons.math3.optim.nonlinear.vector.MultiStartMultivariateVectorOptimizer;

        r0.<org.apache.commons.math3.optim.nonlinear.vector.MultiStartMultivariateVectorOptimizer$1: org.apache.commons.math3.optim.nonlinear.vector.MultiStartMultivariateVectorOptimizer this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new org.apache.commons.math3.linear.ArrayRealVector;

        $r3 = r0.<org.apache.commons.math3.optim.nonlinear.vector.MultiStartMultivariateVectorOptimizer$1: org.apache.commons.math3.optim.nonlinear.vector.MultiStartMultivariateVectorOptimizer this$0>;

        $r4 = staticinvoke <org.apache.commons.math3.optim.nonlinear.vector.MultiStartMultivariateVectorOptimizer: org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer access$000(org.apache.commons.math3.optim.nonlinear.vector.MultiStartMultivariateVectorOptimizer)>($r3);

        $r5 = virtualinvoke $r4.<org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer: double[] getTarget()>();

        specialinvoke $r2.<org.apache.commons.math3.linear.ArrayRealVector: void <init>(double[],boolean)>($r5, 0);

        r0.<org.apache.commons.math3.optim.nonlinear.vector.MultiStartMultivariateVectorOptimizer$1: org.apache.commons.math3.linear.RealVector target> = $r2;

        $r6 = r0.<org.apache.commons.math3.optim.nonlinear.vector.MultiStartMultivariateVectorOptimizer$1: org.apache.commons.math3.optim.nonlinear.vector.MultiStartMultivariateVectorOptimizer this$0>;

        $r7 = staticinvoke <org.apache.commons.math3.optim.nonlinear.vector.MultiStartMultivariateVectorOptimizer: org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer access$000(org.apache.commons.math3.optim.nonlinear.vector.MultiStartMultivariateVectorOptimizer)>($r6);

        $r8 = virtualinvoke $r7.<org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer: org.apache.commons.math3.linear.RealMatrix getWeight()>();

        r0.<org.apache.commons.math3.optim.nonlinear.vector.MultiStartMultivariateVectorOptimizer$1: org.apache.commons.math3.linear.RealMatrix weight> = $r8;

        return;
    }

    public int compare(org.apache.commons.math3.optim.PointVectorValuePair, org.apache.commons.math3.optim.PointVectorValuePair)
    {
        org.apache.commons.math3.optim.nonlinear.vector.MultiStartMultivariateVectorOptimizer$1 r0;
        org.apache.commons.math3.optim.PointVectorValuePair r1, r2;
        double $d0, $d1;
        int $i0;
        byte $b1;

        r0 := @this: org.apache.commons.math3.optim.nonlinear.vector.MultiStartMultivariateVectorOptimizer$1;

        r1 := @parameter0: org.apache.commons.math3.optim.PointVectorValuePair;

        r2 := @parameter1: org.apache.commons.math3.optim.PointVectorValuePair;

        if r1 != null goto label3;

        if r2 != null goto label1;

        $b1 = 0;

        goto label2;

     label1:
        $b1 = 1;

     label2:
        return $b1;

     label3:
        if r2 != null goto label4;

        return -1;

     label4:
        $d0 = specialinvoke r0.<org.apache.commons.math3.optim.nonlinear.vector.MultiStartMultivariateVectorOptimizer$1: double weightedResidual(org.apache.commons.math3.optim.PointVectorValuePair)>(r1);

        $d1 = specialinvoke r0.<org.apache.commons.math3.optim.nonlinear.vector.MultiStartMultivariateVectorOptimizer$1: double weightedResidual(org.apache.commons.math3.optim.PointVectorValuePair)>(r2);

        $i0 = staticinvoke <java.lang.Double: int compare(double,double)>($d0, $d1);

        return $i0;
    }

    private double weightedResidual(org.apache.commons.math3.optim.PointVectorValuePair)
    {
        org.apache.commons.math3.optim.nonlinear.vector.MultiStartMultivariateVectorOptimizer$1 r0;
        org.apache.commons.math3.optim.PointVectorValuePair r1;
        org.apache.commons.math3.linear.RealVector r3, $r6, $r8;
        org.apache.commons.math3.linear.ArrayRealVector $r4;
        double[] $r5;
        org.apache.commons.math3.linear.RealMatrix $r7;
        double $d0;

        r0 := @this: org.apache.commons.math3.optim.nonlinear.vector.MultiStartMultivariateVectorOptimizer$1;

        r1 := @parameter0: org.apache.commons.math3.optim.PointVectorValuePair;

        $r4 = new org.apache.commons.math3.linear.ArrayRealVector;

        $r5 = virtualinvoke r1.<org.apache.commons.math3.optim.PointVectorValuePair: double[] getValueRef()>();

        specialinvoke $r4.<org.apache.commons.math3.linear.ArrayRealVector: void <init>(double[],boolean)>($r5, 0);

        $r6 = r0.<org.apache.commons.math3.optim.nonlinear.vector.MultiStartMultivariateVectorOptimizer$1: org.apache.commons.math3.linear.RealVector target>;

        r3 = virtualinvoke $r6.<org.apache.commons.math3.linear.RealVector: org.apache.commons.math3.linear.RealVector subtract(org.apache.commons.math3.linear.RealVector)>($r4);

        $r7 = r0.<org.apache.commons.math3.optim.nonlinear.vector.MultiStartMultivariateVectorOptimizer$1: org.apache.commons.math3.linear.RealMatrix weight>;

        $r8 = interfaceinvoke $r7.<org.apache.commons.math3.linear.RealMatrix: org.apache.commons.math3.linear.RealVector operate(org.apache.commons.math3.linear.RealVector)>(r3);

        $d0 = virtualinvoke r3.<org.apache.commons.math3.linear.RealVector: double dotProduct(org.apache.commons.math3.linear.RealVector)>($r8);

        return $d0;
    }

    public volatile int compare(java.lang.Object, java.lang.Object)
    {
        org.apache.commons.math3.optim.nonlinear.vector.MultiStartMultivariateVectorOptimizer$1 r0;
        java.lang.Object r1, r2;
        org.apache.commons.math3.optim.PointVectorValuePair $r3, $r4;
        int $i0;

        r0 := @this: org.apache.commons.math3.optim.nonlinear.vector.MultiStartMultivariateVectorOptimizer$1;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r4 = (org.apache.commons.math3.optim.PointVectorValuePair) r1;

        $r3 = (org.apache.commons.math3.optim.PointVectorValuePair) r2;

        $i0 = virtualinvoke r0.<org.apache.commons.math3.optim.nonlinear.vector.MultiStartMultivariateVectorOptimizer$1: int compare(org.apache.commons.math3.optim.PointVectorValuePair,org.apache.commons.math3.optim.PointVectorValuePair)>($r4, $r3);

        return $i0;
    }
}
