public class org.apache.commons.math3.random.StableRandomGenerator extends java.lang.Object implements org.apache.commons.math3.random.NormalizedRandomGenerator
{
    private final org.apache.commons.math3.random.RandomGenerator generator;
    private final double alpha;
    private final double beta;
    private final double zeta;

    public void <init>(org.apache.commons.math3.random.RandomGenerator, double, double) throws org.apache.commons.math3.exception.NullArgumentException, org.apache.commons.math3.exception.OutOfRangeException
    {
        org.apache.commons.math3.random.StableRandomGenerator r0;
        org.apache.commons.math3.random.RandomGenerator r1;
        double d0, d1, $d2, $d3, $d4, $d5;
        byte $b0, $b1, $b2, $b3, $b4, $b5;
        org.apache.commons.math3.exception.OutOfRangeException $r2, $r7;
        org.apache.commons.math3.exception.util.LocalizedFormats $r3, $r8;
        java.lang.Double $r4, $r9;
        java.lang.Integer $r5, $r6, $r10, $r11;
        org.apache.commons.math3.exception.NullArgumentException $r12;

        r0 := @this: org.apache.commons.math3.random.StableRandomGenerator;

        r1 := @parameter0: org.apache.commons.math3.random.RandomGenerator;

        d0 := @parameter1: double;

        d1 := @parameter2: double;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        if r1 != null goto label1;

        $r12 = new org.apache.commons.math3.exception.NullArgumentException;

        specialinvoke $r12.<org.apache.commons.math3.exception.NullArgumentException: void <init>()>();

        throw $r12;

     label1:
        $b0 = d0 cmpl 0.0;

        if $b0 <= 0 goto label2;

        $b1 = d0 cmpg 2.0;

        if $b1 <= 0 goto label3;

     label2:
        $r2 = new org.apache.commons.math3.exception.OutOfRangeException;

        $r3 = <org.apache.commons.math3.exception.util.LocalizedFormats: org.apache.commons.math3.exception.util.LocalizedFormats OUT_OF_RANGE_LEFT>;

        $r4 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d0);

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2);

        specialinvoke $r2.<org.apache.commons.math3.exception.OutOfRangeException: void <init>(org.apache.commons.math3.exception.util.Localizable,java.lang.Number,java.lang.Number,java.lang.Number)>($r3, $r4, $r5, $r6);

        throw $r2;

     label3:
        $b2 = d1 cmpl -1.0;

        if $b2 < 0 goto label4;

        $b3 = d1 cmpg 1.0;

        if $b3 <= 0 goto label5;

     label4:
        $r7 = new org.apache.commons.math3.exception.OutOfRangeException;

        $r8 = <org.apache.commons.math3.exception.util.LocalizedFormats: org.apache.commons.math3.exception.util.LocalizedFormats OUT_OF_RANGE_SIMPLE>;

        $r9 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d1);

        $r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(-1);

        $r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        specialinvoke $r7.<org.apache.commons.math3.exception.OutOfRangeException: void <init>(org.apache.commons.math3.exception.util.Localizable,java.lang.Number,java.lang.Number,java.lang.Number)>($r8, $r9, $r10, $r11);

        throw $r7;

     label5:
        r0.<org.apache.commons.math3.random.StableRandomGenerator: org.apache.commons.math3.random.RandomGenerator generator> = r1;

        r0.<org.apache.commons.math3.random.StableRandomGenerator: double alpha> = d0;

        r0.<org.apache.commons.math3.random.StableRandomGenerator: double beta> = d1;

        $b4 = d0 cmpg 2.0;

        if $b4 >= 0 goto label6;

        $b5 = d1 cmpl 0.0;

        if $b5 == 0 goto label6;

        $d2 = 3.141592653589793 * d0;

        $d3 = $d2 / 2.0;

        $d4 = staticinvoke <org.apache.commons.math3.util.FastMath: double tan(double)>($d3);

        $d5 = d1 * $d4;

        r0.<org.apache.commons.math3.random.StableRandomGenerator: double zeta> = $d5;

        goto label7;

     label6:
        r0.<org.apache.commons.math3.random.StableRandomGenerator: double zeta> = 0.0;

     label7:
        return;
    }

    public double nextNormalizedDouble()
    {
        org.apache.commons.math3.random.StableRandomGenerator r0;
        double d0, d1, d2, d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21, $d22, $d23, $d24, $d25, $d26, $d27, $d28, $d29, $d30, $d31, $d32, $d33, $d34, $d35, $d36, $d37, $d38, $d39, $d40, $d41, $d42, $d43, $d44, $d45, $d46, $d47, $d48, $d49, $d50, $d51, $d52, $d53, $d54, $d55, $d56, $d57, $d58, $d59, $d60, $d61, $d62, $d63, $d64, $d65, $d66, $d67, $d68, $d69, $d70, $d71, d72, d73, d74;
        org.apache.commons.math3.random.RandomGenerator $r1, $r2;
        byte $b0, $b1, $b2, $b3, $b4;

        r0 := @this: org.apache.commons.math3.random.StableRandomGenerator;

        $r1 = r0.<org.apache.commons.math3.random.StableRandomGenerator: org.apache.commons.math3.random.RandomGenerator generator>;

        $d4 = interfaceinvoke $r1.<org.apache.commons.math3.random.RandomGenerator: double nextDouble()>();

        $d5 = staticinvoke <org.apache.commons.math3.util.FastMath: double log(double)>($d4);

        d0 = neg $d5;

        $r2 = r0.<org.apache.commons.math3.random.StableRandomGenerator: org.apache.commons.math3.random.RandomGenerator generator>;

        $d6 = interfaceinvoke $r2.<org.apache.commons.math3.random.RandomGenerator: double nextDouble()>();

        $d7 = $d6 - 0.5;

        d1 = 3.141592653589793 * $d7;

        $d8 = r0.<org.apache.commons.math3.random.StableRandomGenerator: double alpha>;

        $b0 = $d8 cmpl 2.0;

        if $b0 != 0 goto label1;

        $d68 = 2.0 * d0;

        $d69 = staticinvoke <org.apache.commons.math3.util.FastMath: double sqrt(double)>($d68);

        $d70 = staticinvoke <org.apache.commons.math3.util.FastMath: double sin(double)>(d1);

        $d71 = $d69 * $d70;

        return $d71;

     label1:
        $d9 = r0.<org.apache.commons.math3.random.StableRandomGenerator: double beta>;

        $b1 = $d9 cmpl 0.0;

        if $b1 != 0 goto label3;

        $d50 = r0.<org.apache.commons.math3.random.StableRandomGenerator: double alpha>;

        $b4 = $d50 cmpl 1.0;

        if $b4 != 0 goto label2;

        d72 = staticinvoke <org.apache.commons.math3.util.FastMath: double tan(double)>(d1);

        goto label5;

     label2:
        $d51 = r0.<org.apache.commons.math3.random.StableRandomGenerator: double alpha>;

        $d52 = 1.0 - $d51;

        $d53 = $d52 * d1;

        $d54 = staticinvoke <org.apache.commons.math3.util.FastMath: double cos(double)>($d53);

        $d58 = d0 * $d54;

        $d55 = r0.<org.apache.commons.math3.random.StableRandomGenerator: double alpha>;

        $d56 = 1.0 / $d55;

        $d57 = $d56 - 1.0;

        $d59 = staticinvoke <org.apache.commons.math3.util.FastMath: double pow(double,double)>($d58, $d57);

        $d60 = r0.<org.apache.commons.math3.random.StableRandomGenerator: double alpha>;

        $d61 = $d60 * d1;

        $d62 = staticinvoke <org.apache.commons.math3.util.FastMath: double sin(double)>($d61);

        $d63 = $d59 * $d62;

        $d64 = staticinvoke <org.apache.commons.math3.util.FastMath: double cos(double)>(d1);

        $d65 = r0.<org.apache.commons.math3.random.StableRandomGenerator: double alpha>;

        $d66 = 1.0 / $d65;

        $d67 = staticinvoke <org.apache.commons.math3.util.FastMath: double pow(double,double)>($d64, $d66);

        d72 = $d63 / $d67;

        goto label5;

     label3:
        d2 = staticinvoke <org.apache.commons.math3.util.FastMath: double cos(double)>(d1);

        $d10 = r0.<org.apache.commons.math3.random.StableRandomGenerator: double alpha>;

        $d11 = $d10 - 1.0;

        $d12 = staticinvoke <org.apache.commons.math3.util.FastMath: double abs(double)>($d11);

        $b2 = $d12 cmpl 1.0E-8;

        if $b2 <= 0 goto label4;

        $d31 = r0.<org.apache.commons.math3.random.StableRandomGenerator: double alpha>;

        d73 = $d31 * d1;

        d3 = d1 - d73;

        $d32 = staticinvoke <org.apache.commons.math3.util.FastMath: double sin(double)>(d73);

        $d33 = r0.<org.apache.commons.math3.random.StableRandomGenerator: double zeta>;

        $d34 = staticinvoke <org.apache.commons.math3.util.FastMath: double cos(double)>(d73);

        $d35 = $d33 * $d34;

        $d36 = $d32 + $d35;

        $d37 = $d36 / d2;

        $d38 = staticinvoke <org.apache.commons.math3.util.FastMath: double cos(double)>(d3);

        $d39 = r0.<org.apache.commons.math3.random.StableRandomGenerator: double zeta>;

        $d40 = staticinvoke <org.apache.commons.math3.util.FastMath: double sin(double)>(d3);

        $d41 = $d39 * $d40;

        $d42 = $d38 + $d41;

        $d48 = $d37 * $d42;

        $d47 = d0 * d2;

        $d43 = r0.<org.apache.commons.math3.random.StableRandomGenerator: double alpha>;

        $d45 = 1.0 - $d43;

        $d44 = r0.<org.apache.commons.math3.random.StableRandomGenerator: double alpha>;

        $d46 = $d45 / $d44;

        $d49 = staticinvoke <org.apache.commons.math3.util.FastMath: double pow(double,double)>($d47, $d46);

        d72 = $d48 / $d49;

        goto label5;

     label4:
        $d13 = r0.<org.apache.commons.math3.random.StableRandomGenerator: double beta>;

        $d14 = $d13 * d1;

        d74 = 1.5707963267948966 + $d14;

        $d15 = staticinvoke <org.apache.commons.math3.util.FastMath: double tan(double)>(d1);

        $d19 = d74 * $d15;

        $d20 = r0.<org.apache.commons.math3.random.StableRandomGenerator: double beta>;

        $d16 = 1.5707963267948966 * d0;

        $d17 = $d16 * d2;

        $d18 = $d17 / d74;

        $d21 = staticinvoke <org.apache.commons.math3.util.FastMath: double log(double)>($d18);

        $d22 = $d20 * $d21;

        $d23 = $d19 - $d22;

        d72 = 0.6366197723675814 * $d23;

        $d24 = r0.<org.apache.commons.math3.random.StableRandomGenerator: double alpha>;

        $b3 = $d24 cmpl 1.0;

        if $b3 == 0 goto label5;

        $d28 = r0.<org.apache.commons.math3.random.StableRandomGenerator: double beta>;

        $d25 = r0.<org.apache.commons.math3.random.StableRandomGenerator: double alpha>;

        $d26 = 3.141592653589793 * $d25;

        $d27 = $d26 / 2.0;

        $d29 = staticinvoke <org.apache.commons.math3.util.FastMath: double tan(double)>($d27);

        $d30 = $d28 * $d29;

        d72 = d72 + $d30;

     label5:
        return d72;
    }
}
