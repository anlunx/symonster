public class com.opengamma.analytics.math.statistics.descriptive.SampleVarianceCalculator extends com.opengamma.analytics.math.function.Function1D
{
    private static final com.opengamma.analytics.math.function.Function1D MEAN;

    public void <init>()
    {
        com.opengamma.analytics.math.statistics.descriptive.SampleVarianceCalculator r0;

        r0 := @this: com.opengamma.analytics.math.statistics.descriptive.SampleVarianceCalculator;

        specialinvoke r0.<com.opengamma.analytics.math.function.Function1D: void <init>()>();

        return;
    }

    public java.lang.Double evaluate(double[])
    {
        com.opengamma.analytics.math.statistics.descriptive.SampleVarianceCalculator r0;
        double[] r1;
        java.lang.Double r2, r3, $r6;
        int i0, $i1, $i2, i3, i4;
        double d0, $d1, $d2, $d3, $d4, $d5, $d6, d7;
        com.opengamma.analytics.math.function.Function1D $r4;
        java.lang.Object $r5;
        boolean $z0;

        r0 := @this: com.opengamma.analytics.math.statistics.descriptive.SampleVarianceCalculator;

        r1 := @parameter0: double[];

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object,java.lang.String)>(r1, "x");

        $i1 = lengthof r1;

        if $i1 < 2 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        staticinvoke <org.apache.commons.lang.Validate: void isTrue(boolean,java.lang.String)>($z0, "Need at least two points to calculate the sample variance");

        $r4 = <com.opengamma.analytics.math.statistics.descriptive.SampleVarianceCalculator: com.opengamma.analytics.math.function.Function1D MEAN>;

        $r5 = virtualinvoke $r4.<com.opengamma.analytics.math.function.Function1D: java.lang.Object evaluate(java.lang.Object)>(r1);

        r2 = (java.lang.Double) $r5;

        d7 = 0.0;

        i0 = lengthof r1;

        i3 = 0;

     label3:
        if i3 >= i0 goto label4;

        $d3 = r1[i3];

        r3 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d3);

        $d4 = virtualinvoke r3.<java.lang.Double: double doubleValue()>();

        $d5 = virtualinvoke r2.<java.lang.Double: double doubleValue()>();

        d0 = $d4 - $d5;

        $d6 = d0 * d0;

        d7 = d7 + $d6;

        i3 = i3 + 1;

        goto label3;

     label4:
        i4 = lengthof r1;

        $i2 = i4 - 1;

        $d1 = (double) $i2;

        $d2 = d7 / $d1;

        $r6 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d2);

        return $r6;
    }

    public volatile java.lang.Object evaluate(java.lang.Object)
    {
        com.opengamma.analytics.math.statistics.descriptive.SampleVarianceCalculator r0;
        java.lang.Object r1;
        double[] $r2;
        java.lang.Double $r3;

        r0 := @this: com.opengamma.analytics.math.statistics.descriptive.SampleVarianceCalculator;

        r1 := @parameter0: java.lang.Object;

        $r2 = (double[]) r1;

        $r3 = virtualinvoke r0.<com.opengamma.analytics.math.statistics.descriptive.SampleVarianceCalculator: java.lang.Double evaluate(double[])>($r2);

        return $r3;
    }

    static void <clinit>()
    {
        com.opengamma.analytics.math.statistics.descriptive.MeanCalculator $r0;

        $r0 = new com.opengamma.analytics.math.statistics.descriptive.MeanCalculator;

        specialinvoke $r0.<com.opengamma.analytics.math.statistics.descriptive.MeanCalculator: void <init>()>();

        <com.opengamma.analytics.math.statistics.descriptive.SampleVarianceCalculator: com.opengamma.analytics.math.function.Function1D MEAN> = $r0;

        return;
    }
}
