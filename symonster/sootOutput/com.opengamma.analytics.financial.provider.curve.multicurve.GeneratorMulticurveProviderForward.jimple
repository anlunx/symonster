public class com.opengamma.analytics.financial.provider.curve.multicurve.GeneratorMulticurveProviderForward extends com.opengamma.analytics.math.function.Function1D
{
    private final java.util.LinkedHashMap _discountingMap;
    private final java.util.LinkedHashMap _forwardONMap;
    private final java.util.LinkedHashMap _forwardIborMap;
    private final java.util.LinkedHashMap _generatorsMap;
    private final com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderForward _knownData;

    public void <init>(com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderForward, java.util.LinkedHashMap, java.util.LinkedHashMap, java.util.LinkedHashMap, java.util.LinkedHashMap)
    {
        com.opengamma.analytics.financial.provider.curve.multicurve.GeneratorMulticurveProviderForward r0;
        com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderForward r1;
        java.util.LinkedHashMap r2, r3, r4, r5;

        r0 := @this: com.opengamma.analytics.financial.provider.curve.multicurve.GeneratorMulticurveProviderForward;

        r1 := @parameter0: com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderForward;

        r2 := @parameter1: java.util.LinkedHashMap;

        r3 := @parameter2: java.util.LinkedHashMap;

        r4 := @parameter3: java.util.LinkedHashMap;

        r5 := @parameter4: java.util.LinkedHashMap;

        specialinvoke r0.<com.opengamma.analytics.math.function.Function1D: void <init>()>();

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, "Discounting curves names map");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r3, "Forward curves names map");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r4, "Forward curves names map");

        r0.<com.opengamma.analytics.financial.provider.curve.multicurve.GeneratorMulticurveProviderForward: com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderForward _knownData> = r1;

        r0.<com.opengamma.analytics.financial.provider.curve.multicurve.GeneratorMulticurveProviderForward: java.util.LinkedHashMap _discountingMap> = r2;

        r0.<com.opengamma.analytics.financial.provider.curve.multicurve.GeneratorMulticurveProviderForward: java.util.LinkedHashMap _forwardIborMap> = r3;

        r0.<com.opengamma.analytics.financial.provider.curve.multicurve.GeneratorMulticurveProviderForward: java.util.LinkedHashMap _forwardONMap> = r4;

        r0.<com.opengamma.analytics.financial.provider.curve.multicurve.GeneratorMulticurveProviderForward: java.util.LinkedHashMap _generatorsMap> = r5;

        return;
    }

    public com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderForward getKnownData()
    {
        com.opengamma.analytics.financial.provider.curve.multicurve.GeneratorMulticurveProviderForward r0;
        com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderForward $r1;

        r0 := @this: com.opengamma.analytics.financial.provider.curve.multicurve.GeneratorMulticurveProviderForward;

        $r1 = r0.<com.opengamma.analytics.financial.provider.curve.multicurve.GeneratorMulticurveProviderForward: com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderForward _knownData>;

        return $r1;
    }

    public java.util.Set getCurvesList()
    {
        com.opengamma.analytics.financial.provider.curve.multicurve.GeneratorMulticurveProviderForward r0;
        java.util.LinkedHashMap $r1;
        java.util.Set $r2;

        r0 := @this: com.opengamma.analytics.financial.provider.curve.multicurve.GeneratorMulticurveProviderForward;

        $r1 = r0.<com.opengamma.analytics.financial.provider.curve.multicurve.GeneratorMulticurveProviderForward: java.util.LinkedHashMap _generatorsMap>;

        $r2 = virtualinvoke $r1.<java.util.LinkedHashMap: java.util.Set keySet()>();

        return $r2;
    }

    public com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderForward evaluate(com.opengamma.analytics.math.matrix.DoubleMatrix1D)
    {
        com.opengamma.analytics.financial.provider.curve.multicurve.GeneratorMulticurveProviderForward r0;
        com.opengamma.analytics.math.matrix.DoubleMatrix1D r1;
        com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderForward r2, $r9;
        java.util.Set r3;
        java.util.Iterator r4;
        java.lang.String r5;
        com.opengamma.analytics.financial.curve.interestrate.generator.GeneratorYDCurve r6;
        double[] r7, $r14;
        com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve r8;
        java.util.LinkedHashMap $r10, $r12, $r15, $r16, $r17, $r18, $r23, $r26;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.lang.Object $r11, $r13, $r19, $r24, $r27;
        int $i0, $i1, $i2, i3;
        com.opengamma.analytics.financial.model.interestrate.curve.YieldCurve $r20;
        com.opengamma.analytics.financial.instrument.index.IborIndex $r21;
        com.opengamma.analytics.math.curve.DoublesCurve $r22;
        com.opengamma.analytics.financial.instrument.index.IndexON $r25;
        com.opengamma.util.money.Currency $r28;

        r0 := @this: com.opengamma.analytics.financial.provider.curve.multicurve.GeneratorMulticurveProviderForward;

        r1 := @parameter0: com.opengamma.analytics.math.matrix.DoubleMatrix1D;

        $r9 = r0.<com.opengamma.analytics.financial.provider.curve.multicurve.GeneratorMulticurveProviderForward: com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderForward _knownData>;

        r2 = virtualinvoke $r9.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderForward: com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderForward copy()>();

        $r10 = r0.<com.opengamma.analytics.financial.provider.curve.multicurve.GeneratorMulticurveProviderForward: java.util.LinkedHashMap _generatorsMap>;

        r3 = virtualinvoke $r10.<java.util.LinkedHashMap: java.util.Set keySet()>();

        i3 = 0;

        r4 = interfaceinvoke r3.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $r11 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        r5 = (java.lang.String) $r11;

        $r12 = r0.<com.opengamma.analytics.financial.provider.curve.multicurve.GeneratorMulticurveProviderForward: java.util.LinkedHashMap _generatorsMap>;

        $r13 = virtualinvoke $r12.<java.util.LinkedHashMap: java.lang.Object get(java.lang.Object)>(r5);

        r6 = (com.opengamma.analytics.financial.curve.interestrate.generator.GeneratorYDCurve) $r13;

        $r14 = virtualinvoke r1.<com.opengamma.analytics.math.matrix.DoubleMatrix1D: double[] getData()>();

        $i0 = virtualinvoke r6.<com.opengamma.analytics.financial.curve.interestrate.generator.GeneratorYDCurve: int getNumberOfParameter()>();

        $i1 = i3 + $i0;

        r7 = staticinvoke <java.util.Arrays: double[] copyOfRange(double[],int,int)>($r14, i3, $i1);

        $i2 = virtualinvoke r6.<com.opengamma.analytics.financial.curve.interestrate.generator.GeneratorYDCurve: int getNumberOfParameter()>();

        i3 = i3 + $i2;

        r8 = virtualinvoke r6.<com.opengamma.analytics.financial.curve.interestrate.generator.GeneratorYDCurve: com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve generateCurve(java.lang.String,com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface,double[])>(r5, r2, r7);

        $r15 = r0.<com.opengamma.analytics.financial.provider.curve.multicurve.GeneratorMulticurveProviderForward: java.util.LinkedHashMap _discountingMap>;

        $z1 = virtualinvoke $r15.<java.util.LinkedHashMap: boolean containsKey(java.lang.Object)>(r5);

        if $z1 == 0 goto label2;

        $r26 = r0.<com.opengamma.analytics.financial.provider.curve.multicurve.GeneratorMulticurveProviderForward: java.util.LinkedHashMap _discountingMap>;

        $r27 = virtualinvoke $r26.<java.util.LinkedHashMap: java.lang.Object get(java.lang.Object)>(r5);

        $r28 = (com.opengamma.util.money.Currency) $r27;

        virtualinvoke r2.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderForward: void setCurve(com.opengamma.util.money.Currency,com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve)>($r28, r8);

     label2:
        $r16 = r0.<com.opengamma.analytics.financial.provider.curve.multicurve.GeneratorMulticurveProviderForward: java.util.LinkedHashMap _forwardONMap>;

        $z2 = virtualinvoke $r16.<java.util.LinkedHashMap: boolean containsKey(java.lang.Object)>(r5);

        if $z2 == 0 goto label3;

        $r23 = r0.<com.opengamma.analytics.financial.provider.curve.multicurve.GeneratorMulticurveProviderForward: java.util.LinkedHashMap _forwardONMap>;

        $r24 = virtualinvoke $r23.<java.util.LinkedHashMap: java.lang.Object get(java.lang.Object)>(r5);

        $r25 = (com.opengamma.analytics.financial.instrument.index.IndexON) $r24;

        virtualinvoke r2.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderForward: void setCurve(com.opengamma.analytics.financial.instrument.index.IndexON,com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve)>($r25, r8);

     label3:
        $r17 = r0.<com.opengamma.analytics.financial.provider.curve.multicurve.GeneratorMulticurveProviderForward: java.util.LinkedHashMap _forwardIborMap>;

        $z3 = virtualinvoke $r17.<java.util.LinkedHashMap: boolean containsKey(java.lang.Object)>(r5);

        if $z3 == 0 goto label4;

        $z4 = r8 instanceof com.opengamma.analytics.financial.model.interestrate.curve.YieldCurve;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z4, r5);

        $r18 = r0.<com.opengamma.analytics.financial.provider.curve.multicurve.GeneratorMulticurveProviderForward: java.util.LinkedHashMap _forwardIborMap>;

        $r19 = virtualinvoke $r18.<java.util.LinkedHashMap: java.lang.Object get(java.lang.Object)>(r5);

        $r21 = (com.opengamma.analytics.financial.instrument.index.IborIndex) $r19;

        $r20 = (com.opengamma.analytics.financial.model.interestrate.curve.YieldCurve) r8;

        $r22 = virtualinvoke $r20.<com.opengamma.analytics.financial.model.interestrate.curve.YieldCurve: com.opengamma.analytics.math.curve.DoublesCurve getCurve()>();

        virtualinvoke r2.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderForward: void setCurve(com.opengamma.analytics.financial.instrument.index.IborIndex,com.opengamma.analytics.math.curve.DoublesCurve)>($r21, $r22);

     label4:
        goto label1;

     label5:
        return r2;
    }

    public volatile java.lang.Object evaluate(java.lang.Object)
    {
        com.opengamma.analytics.financial.provider.curve.multicurve.GeneratorMulticurveProviderForward r0;
        java.lang.Object r1;
        com.opengamma.analytics.math.matrix.DoubleMatrix1D $r2;
        com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderForward $r3;

        r0 := @this: com.opengamma.analytics.financial.provider.curve.multicurve.GeneratorMulticurveProviderForward;

        r1 := @parameter0: java.lang.Object;

        $r2 = (com.opengamma.analytics.math.matrix.DoubleMatrix1D) r1;

        $r3 = virtualinvoke r0.<com.opengamma.analytics.financial.provider.curve.multicurve.GeneratorMulticurveProviderForward: com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderForward evaluate(com.opengamma.analytics.math.matrix.DoubleMatrix1D)>($r2);

        return $r3;
    }
}
