public class com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolatorSpline extends java.lang.Object implements com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.GeneralSmileInterpolator
{
    private static final com.opengamma.analytics.math.interpolation.Interpolator1D DEFAULT_INTERPOLATOR;
    private static final com.opengamma.analytics.math.differentiation.ScalarFirstOrderDifferentiator DIFFERENTIATOR;
    private static final com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.ShiftedLogNormalTailExtrapolationFitter TAIL_FITTER;
    private static final java.lang.String s_exception;
    private static final java.lang.String s_flat;
    private static final java.lang.String s_quiet;
    private final com.opengamma.analytics.math.interpolation.Interpolator1D _interpolator;
    private final java.lang.String _extrapolatorFailureBehaviour;

    public void <init>()
    {
        com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolatorSpline r0;
        com.opengamma.analytics.math.interpolation.Interpolator1D $r1;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolatorSpline;

        $r1 = <com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolatorSpline: com.opengamma.analytics.math.interpolation.Interpolator1D DEFAULT_INTERPOLATOR>;

        specialinvoke r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolatorSpline: void <init>(com.opengamma.analytics.math.interpolation.Interpolator1D)>($r1);

        return;
    }

    public void <init>(com.opengamma.analytics.math.interpolation.Interpolator1D)
    {
        com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolatorSpline r0;
        com.opengamma.analytics.math.interpolation.Interpolator1D r1;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolatorSpline;

        r1 := @parameter0: com.opengamma.analytics.math.interpolation.Interpolator1D;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "null interpolator");

        r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolatorSpline: com.opengamma.analytics.math.interpolation.Interpolator1D _interpolator> = r1;

        r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolatorSpline: java.lang.String _extrapolatorFailureBehaviour> = "Exception";

        return;
    }

    public void <init>(com.opengamma.analytics.math.interpolation.Interpolator1D, java.lang.String)
    {
        com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolatorSpline r0;
        com.opengamma.analytics.math.interpolation.Interpolator1D r1;
        java.lang.String r2;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolatorSpline;

        r1 := @parameter0: com.opengamma.analytics.math.interpolation.Interpolator1D;

        r2 := @parameter1: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "null interpolator");

        r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolatorSpline: com.opengamma.analytics.math.interpolation.Interpolator1D _interpolator> = r1;

        r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolatorSpline: java.lang.String _extrapolatorFailureBehaviour> = r2;

        return;
    }

    public final java.lang.String getExtrapolatorFailureBehaviour()
    {
        com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolatorSpline r0;
        java.lang.String $r1;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolatorSpline;

        $r1 = r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolatorSpline: java.lang.String _extrapolatorFailureBehaviour>;

        return $r1;
    }

    public com.opengamma.analytics.math.function.Function1D getVolatilityFunction(double, double[], double, double[])
    {
        com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolatorSpline r0;
        double d0, d1, d2, d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17;
        double[] r1, r2, r3, r52, r53;
        int i0, $i1, $i2, $i3, $i4, $i7, $i10, $i11, i12;
        com.opengamma.analytics.math.function.Function1D r6;
        java.lang.Object[] $r10, $r23, $r26, $r37, $r40;
        java.lang.Integer $r11, $r12;
        com.opengamma.analytics.math.interpolation.Interpolator1D $r13;
        com.opengamma.analytics.math.differentiation.ScalarFirstOrderDifferentiator $r16;
        java.lang.String $r17, $r18, $r19;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;
        com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.ShiftedLogNormalTailExtrapolationFitter $r21, $r22, $r29, $r33, $r43, $r47;
        byte $b5, $b6, $b8, $b9;
        java.lang.Double $r24, $r25, $r27, $r28, $r30, $r32, $r34, $r36, $r38, $r39, $r41, $r42, $r44, $r46, $r48, $r50;
        java.lang.Object $r31, $r35, $r45, $r49;
        com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle r51;
        com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolatorSpline$1 r55;
        com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolatorSpline$2 r56;
        com.opengamma.OpenGammaRuntimeException r57;
        com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolatorSpline$3 r58;
        java.lang.Throwable r59;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolatorSpline;

        d0 := @parameter0: double;

        r1 := @parameter1: double[];

        d1 := @parameter2: double;

        r2 := @parameter3: double[];

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "strikes");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, "implied vols");

        i0 = lengthof r1;

        $i1 = lengthof r2;

        if $i1 != i0 goto label01;

        $z3 = 1;

        goto label02;

     label01:
        $z3 = 0;

     label02:
        $r10 = newarray (java.lang.Object)[2];

        $r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r10[0] = $r11;

        $i2 = lengthof r2;

        $r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        $r10[1] = $r12;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String,java.lang.Object[])>($z3, "#strikes {} does not match #vols {}", $r10);

        d2 = r1[0];

        $i3 = i0 - 1;

        d3 = r1[$i3];

        r3 = newarray (double)[i0];

        i12 = 0;

     label03:
        if i12 >= i0 goto label04;

        $d15 = r1[i12];

        $d16 = $d15 / d0;

        $d17 = staticinvoke <java.lang.Math: double log(double)>($d16);

        r3[i12] = $d17;

        i12 = i12 + 1;

        goto label03;

     label04:
        $r13 = r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolatorSpline: com.opengamma.analytics.math.interpolation.Interpolator1D _interpolator>;

        r51 = virtualinvoke $r13.<com.opengamma.analytics.math.interpolation.Interpolator1D: com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle getDataBundle(double[],double[])>(r3, r2);

        r55 = new com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolatorSpline$1;

        specialinvoke r55.<com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolatorSpline$1: void <init>(com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolatorSpline,double,com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle)>(r0, d0, r51);

        r56 = new com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolatorSpline$2;

        specialinvoke r56.<com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolatorSpline$2: void <init>(com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolatorSpline,double,double)>(r0, d2, d3);

        $r16 = <com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolatorSpline: com.opengamma.analytics.math.differentiation.ScalarFirstOrderDifferentiator DIFFERENTIATOR>;

        r6 = virtualinvoke $r16.<com.opengamma.analytics.math.differentiation.ScalarFirstOrderDifferentiator: com.opengamma.analytics.math.function.Function1D differentiate(com.opengamma.analytics.math.function.Function1D,com.opengamma.analytics.math.function.Function1D)>(r55, r56);

        $r17 = r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolatorSpline: java.lang.String _extrapolatorFailureBehaviour>;

        $z0 = virtualinvoke $r17.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("Quiet");

        if $z0 == 0 goto label09;

        $b8 = d2 cmpg d0;

        if $b8 > 0 goto label05;

        $z4 = 1;

        goto label06;

     label05:
        $z4 = 0;

     label06:
        $r37 = newarray (java.lang.Object)[2];

        $r38 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d2);

        $r37[0] = $r38;

        $r39 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d0);

        $r37[1] = $r39;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String,java.lang.Object[])>($z4, "Cannot do left tail extrapolation when the lowest strike ({}) is greater than the forward ({})", $r37);

        $b9 = d3 cmpl d0;

        if $b9 < 0 goto label07;

        $z5 = 1;

        goto label08;

     label07:
        $z5 = 0;

     label08:
        $r40 = newarray (java.lang.Object)[2];

        $r41 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d3);

        $r40[0] = $r41;

        $r42 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d0);

        $r40[1] = $r42;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String,java.lang.Object[])>($z5, "Cannot do right tail extrapolation when the highest strike ({}) is less than the forward ({})", $r40);

        $r43 = <com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolatorSpline: com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.ShiftedLogNormalTailExtrapolationFitter TAIL_FITTER>;

        $i10 = i0 - 1;

        $d10 = r1[$i10];

        $i11 = i0 - 1;

        $d11 = r2[$i11];

        $r44 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d3);

        $r45 = virtualinvoke r6.<com.opengamma.analytics.math.function.Function1D: java.lang.Object evaluate(java.lang.Object)>($r44);

        $r46 = (java.lang.Double) $r45;

        $d12 = virtualinvoke $r46.<java.lang.Double: double doubleValue()>();

        r52 = virtualinvoke $r43.<com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.ShiftedLogNormalTailExtrapolationFitter: double[] fitVolatilityAndGradRecursivelyByReducingSmile(double,double,double,double,double)>(d0, $d10, $d11, $d12, d1);

        $r47 = <com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolatorSpline: com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.ShiftedLogNormalTailExtrapolationFitter TAIL_FITTER>;

        $d13 = r2[0];

        $r48 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d2);

        $r49 = virtualinvoke r6.<com.opengamma.analytics.math.function.Function1D: java.lang.Object evaluate(java.lang.Object)>($r48);

        $r50 = (java.lang.Double) $r49;

        $d14 = virtualinvoke $r50.<java.lang.Double: double doubleValue()>();

        r53 = virtualinvoke $r47.<com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.ShiftedLogNormalTailExtrapolationFitter: double[] fitVolatilityAndGradRecursivelyByReducingSmile(double,double,double,double,double)>(d0, d2, $d13, $d14, d1);

        goto label16;

     label09:
        $r18 = r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolatorSpline: java.lang.String _extrapolatorFailureBehaviour>;

        $z1 = virtualinvoke $r18.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("Exception");

        if $z1 == 0 goto label14;

        $b5 = d2 cmpg d0;

        if $b5 > 0 goto label10;

        $z6 = 1;

        goto label11;

     label10:
        $z6 = 0;

     label11:
        $r23 = newarray (java.lang.Object)[2];

        $r24 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d2);

        $r23[0] = $r24;

        $r25 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d0);

        $r23[1] = $r25;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String,java.lang.Object[])>($z6, "Cannot do left tail extrapolation when the lowest strike ({}) is greater than the forward ({})", $r23);

        $b6 = d3 cmpl d0;

        if $b6 < 0 goto label12;

        $z7 = 1;

        goto label13;

     label12:
        $z7 = 0;

     label13:
        $r26 = newarray (java.lang.Object)[2];

        $r27 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d3);

        $r26[0] = $r27;

        $r28 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d0);

        $r26[1] = $r28;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String,java.lang.Object[])>($z7, "Cannot do right tail extrapolation when the highest strike ({}) is less than the forward ({})", $r26);

        $r29 = <com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolatorSpline: com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.ShiftedLogNormalTailExtrapolationFitter TAIL_FITTER>;

        $i7 = i0 - 1;

        $d6 = r2[$i7];

        $r30 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d3);

        $r31 = virtualinvoke r6.<com.opengamma.analytics.math.function.Function1D: java.lang.Object evaluate(java.lang.Object)>($r30);

        $r32 = (java.lang.Double) $r31;

        $d7 = virtualinvoke $r32.<java.lang.Double: double doubleValue()>();

        r52 = virtualinvoke $r29.<com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.ShiftedLogNormalTailExtrapolationFitter: double[] fitVolatilityAndGrad(double,double,double,double,double)>(d0, d3, $d6, $d7, d1);

        $r33 = <com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolatorSpline: com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.ShiftedLogNormalTailExtrapolationFitter TAIL_FITTER>;

        $d8 = r2[0];

        $r34 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d2);

        $r35 = virtualinvoke r6.<com.opengamma.analytics.math.function.Function1D: java.lang.Object evaluate(java.lang.Object)>($r34);

        $r36 = (java.lang.Double) $r35;

        $d9 = virtualinvoke $r36.<java.lang.Double: double doubleValue()>();

        r53 = virtualinvoke $r33.<com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.ShiftedLogNormalTailExtrapolationFitter: double[] fitVolatilityAndGrad(double,double,double,double,double)>(d0, d2, $d8, $d9, d1);

        goto label16;

     label14:
        $r19 = r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolatorSpline: java.lang.String _extrapolatorFailureBehaviour>;

        $z2 = virtualinvoke $r19.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("Flat");

        if $z2 == 0 goto label15;

        $r21 = <com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolatorSpline: com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.ShiftedLogNormalTailExtrapolationFitter TAIL_FITTER>;

        $i4 = i0 - 1;

        $d4 = r2[$i4];

        r52 = virtualinvoke $r21.<com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.ShiftedLogNormalTailExtrapolationFitter: double[] fitVolatilityAndGrad(double,double,double,double,double)>(d0, d3, $d4, 0.0, d1);

        $r22 = <com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolatorSpline: com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.ShiftedLogNormalTailExtrapolationFitter TAIL_FITTER>;

        $d5 = r2[0];

        r53 = virtualinvoke $r22.<com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.ShiftedLogNormalTailExtrapolationFitter: double[] fitVolatilityAndGrad(double,double,double,double,double)>(d0, d2, $d5, 0.0, d1);

        goto label16;

     label15:
        r57 = new com.opengamma.OpenGammaRuntimeException;

        specialinvoke r57.<com.opengamma.OpenGammaRuntimeException: void <init>(java.lang.String)>("Unrecognized _extrapolatorFailureBehaviour. Looking for one of Exception, Quiet, or Flat");

        r59 = (java.lang.Throwable) r57;

        throw r59;

     label16:
        r58 = new com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolatorSpline$3;

        specialinvoke r58.<com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolatorSpline$3: void <init>(com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolatorSpline,double,double,double,double[],double,double[],com.opengamma.analytics.math.function.Function1D)>(r0, d2, d0, d1, r53, d3, r52, r55);

        return r58;
    }

    public com.opengamma.analytics.math.interpolation.Interpolator1D getInterpolator()
    {
        com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolatorSpline r0;
        com.opengamma.analytics.math.interpolation.Interpolator1D $r1;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolatorSpline;

        $r1 = r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolatorSpline: com.opengamma.analytics.math.interpolation.Interpolator1D _interpolator>;

        return $r1;
    }

    public int hashCode()
    {
        com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolatorSpline r0;
        com.opengamma.analytics.math.interpolation.Interpolator1D $r1;
        int $i1, $i2, i4;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolatorSpline;

        $i1 = 31 * 1;

        $r1 = r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolatorSpline: com.opengamma.analytics.math.interpolation.Interpolator1D _interpolator>;

        $i2 = virtualinvoke $r1.<com.opengamma.analytics.math.interpolation.Interpolator1D: int hashCode()>();

        i4 = $i1 + $i2;

        return i4;
    }

    public boolean equals(java.lang.Object)
    {
        com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolatorSpline r0, r2;
        java.lang.Object r1;
        java.lang.Class $r3, $r4;
        com.opengamma.analytics.math.interpolation.Interpolator1D $r5, $r6;
        boolean $z0;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolatorSpline;

        r1 := @parameter0: java.lang.Object;

        if r0 != r1 goto label1;

        return 1;

     label1:
        if r1 != null goto label2;

        return 0;

     label2:
        $r3 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r4 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        if $r3 == $r4 goto label3;

        return 0;

     label3:
        r2 = (com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolatorSpline) r1;

        $r6 = r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolatorSpline: com.opengamma.analytics.math.interpolation.Interpolator1D _interpolator>;

        $r5 = r2.<com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolatorSpline: com.opengamma.analytics.math.interpolation.Interpolator1D _interpolator>;

        $z0 = staticinvoke <org.apache.commons.lang.ObjectUtils: boolean equals(java.lang.Object,java.lang.Object)>($r6, $r5);

        return $z0;
    }

    static com.opengamma.analytics.math.interpolation.Interpolator1D access$000(com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolatorSpline)
    {
        com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolatorSpline r0;
        com.opengamma.analytics.math.interpolation.Interpolator1D $r1;

        r0 := @parameter0: com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolatorSpline;

        $r1 = r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolatorSpline: com.opengamma.analytics.math.interpolation.Interpolator1D _interpolator>;

        return $r1;
    }

    static void <clinit>()
    {
        com.opengamma.analytics.math.interpolation.DoubleQuadraticInterpolator1D $r0;
        com.opengamma.analytics.math.differentiation.ScalarFirstOrderDifferentiator $r1;
        com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.ShiftedLogNormalTailExtrapolationFitter $r2;

        <com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolatorSpline: java.lang.String s_quiet> = "Quiet";

        <com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolatorSpline: java.lang.String s_flat> = "Flat";

        <com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolatorSpline: java.lang.String s_exception> = "Exception";

        $r0 = new com.opengamma.analytics.math.interpolation.DoubleQuadraticInterpolator1D;

        specialinvoke $r0.<com.opengamma.analytics.math.interpolation.DoubleQuadraticInterpolator1D: void <init>()>();

        <com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolatorSpline: com.opengamma.analytics.math.interpolation.Interpolator1D DEFAULT_INTERPOLATOR> = $r0;

        $r1 = new com.opengamma.analytics.math.differentiation.ScalarFirstOrderDifferentiator;

        specialinvoke $r1.<com.opengamma.analytics.math.differentiation.ScalarFirstOrderDifferentiator: void <init>()>();

        <com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolatorSpline: com.opengamma.analytics.math.differentiation.ScalarFirstOrderDifferentiator DIFFERENTIATOR> = $r1;

        $r2 = new com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.ShiftedLogNormalTailExtrapolationFitter;

        specialinvoke $r2.<com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.ShiftedLogNormalTailExtrapolationFitter: void <init>()>();

        <com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolatorSpline: com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.ShiftedLogNormalTailExtrapolationFitter TAIL_FITTER> = $r2;

        return;
    }
}
