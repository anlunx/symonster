public class com.opengamma.analytics.financial.riskfactor.GreekDataBundle extends java.lang.Object
{
    private final com.opengamma.analytics.financial.greeks.GreekResultCollection _greekValues;
    private final java.util.Map _underlyingData;
    private final com.opengamma.analytics.financial.trade.OptionTradeData _tradeData;

    public void <init>(com.opengamma.analytics.financial.greeks.GreekResultCollection, java.util.Map, com.opengamma.analytics.financial.trade.OptionTradeData)
    {
        com.opengamma.analytics.financial.riskfactor.GreekDataBundle r0;
        com.opengamma.analytics.financial.greeks.GreekResultCollection r1;
        java.util.Map r2;
        com.opengamma.analytics.financial.trade.OptionTradeData r3;
        boolean $z0;
        java.lang.IllegalArgumentException $r4;

        r0 := @this: com.opengamma.analytics.financial.riskfactor.GreekDataBundle;

        r1 := @parameter0: com.opengamma.analytics.financial.greeks.GreekResultCollection;

        r2 := @parameter1: java.util.Map;

        r3 := @parameter2: com.opengamma.analytics.financial.trade.OptionTradeData;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object,java.lang.String)>(r1, "greek result collection");

        $z0 = virtualinvoke r1.<com.opengamma.analytics.financial.greeks.GreekResultCollection: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Greek result collection was empty");

        throw $r4;

     label1:
        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object,java.lang.String)>(r2, "underlying data");

        staticinvoke <org.apache.commons.lang.Validate: void notEmpty(java.util.Map,java.lang.String)>(r2, "underlying data");

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object,java.lang.String)>(r3, "trade data");

        r0.<com.opengamma.analytics.financial.riskfactor.GreekDataBundle: com.opengamma.analytics.financial.greeks.GreekResultCollection _greekValues> = r1;

        r0.<com.opengamma.analytics.financial.riskfactor.GreekDataBundle: java.util.Map _underlyingData> = r2;

        r0.<com.opengamma.analytics.financial.riskfactor.GreekDataBundle: com.opengamma.analytics.financial.trade.OptionTradeData _tradeData> = r3;

        return;
    }

    public com.opengamma.analytics.financial.trade.OptionTradeData getOptionTradeData()
    {
        com.opengamma.analytics.financial.riskfactor.GreekDataBundle r0;
        com.opengamma.analytics.financial.trade.OptionTradeData $r1;

        r0 := @this: com.opengamma.analytics.financial.riskfactor.GreekDataBundle;

        $r1 = r0.<com.opengamma.analytics.financial.riskfactor.GreekDataBundle: com.opengamma.analytics.financial.trade.OptionTradeData _tradeData>;

        return $r1;
    }

    public com.opengamma.analytics.financial.greeks.GreekResultCollection getGreekResults()
    {
        com.opengamma.analytics.financial.riskfactor.GreekDataBundle r0;
        com.opengamma.analytics.financial.greeks.GreekResultCollection $r1;

        r0 := @this: com.opengamma.analytics.financial.riskfactor.GreekDataBundle;

        $r1 = r0.<com.opengamma.analytics.financial.riskfactor.GreekDataBundle: com.opengamma.analytics.financial.greeks.GreekResultCollection _greekValues>;

        return $r1;
    }

    public java.util.Map getUnderlyingData()
    {
        com.opengamma.analytics.financial.riskfactor.GreekDataBundle r0;
        java.util.Map $r1;

        r0 := @this: com.opengamma.analytics.financial.riskfactor.GreekDataBundle;

        $r1 = r0.<com.opengamma.analytics.financial.riskfactor.GreekDataBundle: java.util.Map _underlyingData>;

        return $r1;
    }

    public double getUnderlyingDataForType(com.opengamma.analytics.financial.pnl.UnderlyingType)
    {
        com.opengamma.analytics.financial.riskfactor.GreekDataBundle r0;
        com.opengamma.analytics.financial.pnl.UnderlyingType r1;
        java.util.Map $r2, $r8;
        boolean $z0;
        java.lang.IllegalArgumentException $r3;
        java.lang.StringBuilder $r4, $r5, $r6;
        java.lang.String $r7;
        java.lang.Object $r9;
        java.lang.Double $r10;
        double $d0;

        r0 := @this: com.opengamma.analytics.financial.riskfactor.GreekDataBundle;

        r1 := @parameter0: com.opengamma.analytics.financial.pnl.UnderlyingType;

        $r2 = r0.<com.opengamma.analytics.financial.riskfactor.GreekDataBundle: java.util.Map _underlyingData>;

        $z0 = interfaceinvoke $r2.<java.util.Map: boolean containsKey(java.lang.Object)>(r1);

        if $z0 == 0 goto label1;

        $r8 = r0.<com.opengamma.analytics.financial.riskfactor.GreekDataBundle: java.util.Map _underlyingData>;

        $r9 = interfaceinvoke $r8.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        $r10 = (java.lang.Double) $r9;

        $d0 = virtualinvoke $r10.<java.lang.Double: double doubleValue()>();

        return $d0;

     label1:
        $r3 = new java.lang.IllegalArgumentException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Underlying data map did not contain a value for ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r7);

        throw $r3;
    }

    public java.lang.Double getGreekResultForGreek(com.opengamma.analytics.financial.greeks.Greek)
    {
        com.opengamma.analytics.financial.riskfactor.GreekDataBundle r0;
        com.opengamma.analytics.financial.greeks.Greek r1;
        com.opengamma.analytics.financial.greeks.GreekResultCollection $r2, $r8;
        boolean $z0;
        java.lang.IllegalArgumentException $r3;
        java.lang.StringBuilder $r4, $r5, $r6;
        java.lang.String $r7;
        java.lang.Double $r9;

        r0 := @this: com.opengamma.analytics.financial.riskfactor.GreekDataBundle;

        r1 := @parameter0: com.opengamma.analytics.financial.greeks.Greek;

        $r2 = r0.<com.opengamma.analytics.financial.riskfactor.GreekDataBundle: com.opengamma.analytics.financial.greeks.GreekResultCollection _greekValues>;

        $z0 = virtualinvoke $r2.<com.opengamma.analytics.financial.greeks.GreekResultCollection: boolean contains(com.opengamma.analytics.financial.greeks.Greek)>(r1);

        if $z0 == 0 goto label1;

        $r8 = r0.<com.opengamma.analytics.financial.riskfactor.GreekDataBundle: com.opengamma.analytics.financial.greeks.GreekResultCollection _greekValues>;

        $r9 = virtualinvoke $r8.<com.opengamma.analytics.financial.greeks.GreekResultCollection: java.lang.Double get(com.opengamma.analytics.financial.greeks.Greek)>(r1);

        return $r9;

     label1:
        $r3 = new java.lang.IllegalArgumentException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Greek result collection did not contain a value for ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r7);

        throw $r3;
    }

    public int hashCode()
    {
        com.opengamma.analytics.financial.riskfactor.GreekDataBundle r0;
        com.opengamma.analytics.financial.greeks.GreekResultCollection $r1, $r2;
        int $i1, $i2, $i3, $i5, i6, $i7, i8, $i9, i10;
        java.util.Map $r3, $r4;
        com.opengamma.analytics.financial.trade.OptionTradeData $r5, $r6;

        r0 := @this: com.opengamma.analytics.financial.riskfactor.GreekDataBundle;

        $i1 = 31 * 1;

        $r1 = r0.<com.opengamma.analytics.financial.riskfactor.GreekDataBundle: com.opengamma.analytics.financial.greeks.GreekResultCollection _greekValues>;

        if $r1 != null goto label1;

        $i5 = 0;

        goto label2;

     label1:
        $r2 = r0.<com.opengamma.analytics.financial.riskfactor.GreekDataBundle: com.opengamma.analytics.financial.greeks.GreekResultCollection _greekValues>;

        $i5 = virtualinvoke $r2.<com.opengamma.analytics.financial.greeks.GreekResultCollection: int hashCode()>();

     label2:
        i6 = $i1 + $i5;

        $i2 = 31 * i6;

        $r3 = r0.<com.opengamma.analytics.financial.riskfactor.GreekDataBundle: java.util.Map _underlyingData>;

        if $r3 != null goto label3;

        $i7 = 0;

        goto label4;

     label3:
        $r4 = r0.<com.opengamma.analytics.financial.riskfactor.GreekDataBundle: java.util.Map _underlyingData>;

        $i7 = interfaceinvoke $r4.<java.util.Map: int hashCode()>();

     label4:
        i8 = $i2 + $i7;

        $i3 = 31 * i8;

        $r5 = r0.<com.opengamma.analytics.financial.riskfactor.GreekDataBundle: com.opengamma.analytics.financial.trade.OptionTradeData _tradeData>;

        if $r5 != null goto label5;

        $i9 = 0;

        goto label6;

     label5:
        $r6 = r0.<com.opengamma.analytics.financial.riskfactor.GreekDataBundle: com.opengamma.analytics.financial.trade.OptionTradeData _tradeData>;

        $i9 = virtualinvoke $r6.<com.opengamma.analytics.financial.trade.OptionTradeData: int hashCode()>();

     label6:
        i10 = $i3 + $i9;

        return i10;
    }

    public boolean equals(java.lang.Object)
    {
        com.opengamma.analytics.financial.riskfactor.GreekDataBundle r0, r2;
        java.lang.Object r1;
        java.lang.Class $r3, $r4;
        com.opengamma.analytics.financial.greeks.GreekResultCollection $r5, $r6;
        boolean $z0, $z1, $z2, $z3;
        java.util.Map $r7, $r8;
        com.opengamma.analytics.financial.trade.OptionTradeData $r9, $r10;

        r0 := @this: com.opengamma.analytics.financial.riskfactor.GreekDataBundle;

        r1 := @parameter0: java.lang.Object;

        if r0 != r1 goto label1;

        return 1;

     label1:
        if r1 != null goto label2;

        return 0;

     label2:
        $r3 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r4 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        if $r3 == $r4 goto label3;

        return 0;

     label3:
        r2 = (com.opengamma.analytics.financial.riskfactor.GreekDataBundle) r1;

        $r6 = r0.<com.opengamma.analytics.financial.riskfactor.GreekDataBundle: com.opengamma.analytics.financial.greeks.GreekResultCollection _greekValues>;

        $r5 = r2.<com.opengamma.analytics.financial.riskfactor.GreekDataBundle: com.opengamma.analytics.financial.greeks.GreekResultCollection _greekValues>;

        $z0 = staticinvoke <org.apache.commons.lang.ObjectUtils: boolean equals(java.lang.Object,java.lang.Object)>($r6, $r5);

        if $z0 == 0 goto label4;

        $r8 = r0.<com.opengamma.analytics.financial.riskfactor.GreekDataBundle: java.util.Map _underlyingData>;

        $r7 = r2.<com.opengamma.analytics.financial.riskfactor.GreekDataBundle: java.util.Map _underlyingData>;

        $z1 = staticinvoke <org.apache.commons.lang.ObjectUtils: boolean equals(java.lang.Object,java.lang.Object)>($r8, $r7);

        if $z1 == 0 goto label4;

        $r10 = r0.<com.opengamma.analytics.financial.riskfactor.GreekDataBundle: com.opengamma.analytics.financial.trade.OptionTradeData _tradeData>;

        $r9 = r2.<com.opengamma.analytics.financial.riskfactor.GreekDataBundle: com.opengamma.analytics.financial.trade.OptionTradeData _tradeData>;

        $z2 = staticinvoke <org.apache.commons.lang.ObjectUtils: boolean equals(java.lang.Object,java.lang.Object)>($r10, $r9);

        if $z2 == 0 goto label4;

        $z3 = 1;

        goto label5;

     label4:
        $z3 = 0;

     label5:
        return $z3;
    }
}
