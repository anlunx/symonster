class com.opengamma.analytics.financial.equity.variance.pricing.ExpectedVarianceStaticReplicationCalculator$4 extends com.opengamma.analytics.math.function.Function1D
{
    final double val$forward;
    final com.opengamma.analytics.financial.model.volatility.surface.BlackVolatilitySurfaceStrike val$surface;
    final double val$expiry;
    final com.opengamma.analytics.financial.equity.variance.pricing.ExpectedVarianceStaticReplicationCalculator this$0;

    void <init>(com.opengamma.analytics.financial.equity.variance.pricing.ExpectedVarianceStaticReplicationCalculator, double, com.opengamma.analytics.financial.model.volatility.surface.BlackVolatilitySurfaceStrike, double)
    {
        com.opengamma.analytics.financial.equity.variance.pricing.ExpectedVarianceStaticReplicationCalculator$4 r0;
        com.opengamma.analytics.financial.equity.variance.pricing.ExpectedVarianceStaticReplicationCalculator r1;
        double d0, d1;
        com.opengamma.analytics.financial.model.volatility.surface.BlackVolatilitySurfaceStrike r2;

        r0 := @this: com.opengamma.analytics.financial.equity.variance.pricing.ExpectedVarianceStaticReplicationCalculator$4;

        r1 := @parameter0: com.opengamma.analytics.financial.equity.variance.pricing.ExpectedVarianceStaticReplicationCalculator;

        d0 := @parameter1: double;

        r2 := @parameter2: com.opengamma.analytics.financial.model.volatility.surface.BlackVolatilitySurfaceStrike;

        d1 := @parameter3: double;

        r0.<com.opengamma.analytics.financial.equity.variance.pricing.ExpectedVarianceStaticReplicationCalculator$4: com.opengamma.analytics.financial.equity.variance.pricing.ExpectedVarianceStaticReplicationCalculator this$0> = r1;

        r0.<com.opengamma.analytics.financial.equity.variance.pricing.ExpectedVarianceStaticReplicationCalculator$4: double val$forward> = d0;

        r0.<com.opengamma.analytics.financial.equity.variance.pricing.ExpectedVarianceStaticReplicationCalculator$4: com.opengamma.analytics.financial.model.volatility.surface.BlackVolatilitySurfaceStrike val$surface> = r2;

        r0.<com.opengamma.analytics.financial.equity.variance.pricing.ExpectedVarianceStaticReplicationCalculator$4: double val$expiry> = d1;

        specialinvoke r0.<com.opengamma.analytics.math.function.Function1D: void <init>()>();

        return;
    }

    public java.lang.Double evaluate(java.lang.Double)
    {
        com.opengamma.analytics.financial.equity.variance.pricing.ExpectedVarianceStaticReplicationCalculator$4 r0;
        java.lang.Double r1, $r3, $r4;
        double d0, d1, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14;
        byte $b0, $b1;
        com.opengamma.analytics.financial.model.volatility.surface.BlackVolatilitySurfaceStrike $r2;
        boolean $z1;

        r0 := @this: com.opengamma.analytics.financial.equity.variance.pricing.ExpectedVarianceStaticReplicationCalculator$4;

        r1 := @parameter0: java.lang.Double;

        $d3 = virtualinvoke r1.<java.lang.Double: double doubleValue()>();

        $b0 = $d3 cmpl 0.0;

        if $b0 != 0 goto label1;

        $r4 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(0.0);

        return $r4;

     label1:
        $d4 = virtualinvoke r1.<java.lang.Double: double doubleValue()>();

        $d5 = r0.<com.opengamma.analytics.financial.equity.variance.pricing.ExpectedVarianceStaticReplicationCalculator$4: double val$forward>;

        $b1 = $d4 cmpl $d5;

        if $b1 < 0 goto label2;

        $z1 = 1;

        goto label3;

     label2:
        $z1 = 0;

     label3:
        $r2 = r0.<com.opengamma.analytics.financial.equity.variance.pricing.ExpectedVarianceStaticReplicationCalculator$4: com.opengamma.analytics.financial.model.volatility.surface.BlackVolatilitySurfaceStrike val$surface>;

        $d6 = r0.<com.opengamma.analytics.financial.equity.variance.pricing.ExpectedVarianceStaticReplicationCalculator$4: double val$expiry>;

        $d7 = virtualinvoke r1.<java.lang.Double: double doubleValue()>();

        d0 = virtualinvoke $r2.<com.opengamma.analytics.financial.model.volatility.surface.BlackVolatilitySurfaceStrike: double getVolatility(double,double)>($d6, $d7);

        $d8 = r0.<com.opengamma.analytics.financial.equity.variance.pricing.ExpectedVarianceStaticReplicationCalculator$4: double val$forward>;

        $d9 = virtualinvoke r1.<java.lang.Double: double doubleValue()>();

        $d10 = r0.<com.opengamma.analytics.financial.equity.variance.pricing.ExpectedVarianceStaticReplicationCalculator$4: double val$expiry>;

        d1 = staticinvoke <com.opengamma.analytics.financial.model.volatility.BlackFormulaRepository: double price(double,double,double,double,boolean)>($d8, $d9, $d10, d0, $z1);

        if $z1 == 0 goto label4;

        $d13 = virtualinvoke r1.<java.lang.Double: double doubleValue()>();

        $d14 = d1 / $d13;

        goto label5;

     label4:
        $d11 = d1 / 2.0;

        $d12 = virtualinvoke r1.<java.lang.Double: double doubleValue()>();

        $d14 = $d11 / $d12;

     label5:
        $r3 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d14);

        return $r3;
    }

    public volatile java.lang.Object evaluate(java.lang.Object)
    {
        com.opengamma.analytics.financial.equity.variance.pricing.ExpectedVarianceStaticReplicationCalculator$4 r0;
        java.lang.Object r1;
        java.lang.Double $r2, $r3;

        r0 := @this: com.opengamma.analytics.financial.equity.variance.pricing.ExpectedVarianceStaticReplicationCalculator$4;

        r1 := @parameter0: java.lang.Object;

        $r2 = (java.lang.Double) r1;

        $r3 = virtualinvoke r0.<com.opengamma.analytics.financial.equity.variance.pricing.ExpectedVarianceStaticReplicationCalculator$4: java.lang.Double evaluate(java.lang.Double)>($r2);

        return $r3;
    }
}
