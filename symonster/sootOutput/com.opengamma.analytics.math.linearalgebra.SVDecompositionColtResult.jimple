public class com.opengamma.analytics.math.linearalgebra.SVDecompositionColtResult extends java.lang.Object implements com.opengamma.analytics.math.linearalgebra.SVDecompositionResult
{
    private final double _condition;
    private final double _norm;
    private final int _rank;
    private final com.opengamma.analytics.math.matrix.DoubleMatrix2D _s;
    private final double[] _singularValues;
    private final com.opengamma.analytics.math.matrix.DoubleMatrix2D _u;
    private final com.opengamma.analytics.math.matrix.DoubleMatrix2D _v;
    private final com.opengamma.analytics.math.matrix.DoubleMatrix2D _uTranspose;
    private final com.opengamma.analytics.math.matrix.DoubleMatrix2D _vTranspose;

    public void <init>(cern.colt.matrix.linalg.SingularValueDecomposition)
    {
        com.opengamma.analytics.math.linearalgebra.SVDecompositionColtResult r0;
        cern.colt.matrix.linalg.SingularValueDecomposition r1;
        double $d0, $d1;
        int $i0;
        cern.colt.matrix.DoubleMatrix2D $r2, $r4, $r8;
        com.opengamma.analytics.math.matrix.DoubleMatrix2D $r3, $r5, $r6, $r7, $r9, $r10, $r11;
        double[] $r12;

        r0 := @this: com.opengamma.analytics.math.linearalgebra.SVDecompositionColtResult;

        r1 := @parameter0: cern.colt.matrix.linalg.SingularValueDecomposition;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object)>(r1);

        $d0 = virtualinvoke r1.<cern.colt.matrix.linalg.SingularValueDecomposition: double cond()>();

        r0.<com.opengamma.analytics.math.linearalgebra.SVDecompositionColtResult: double _condition> = $d0;

        $d1 = virtualinvoke r1.<cern.colt.matrix.linalg.SingularValueDecomposition: double norm2()>();

        r0.<com.opengamma.analytics.math.linearalgebra.SVDecompositionColtResult: double _norm> = $d1;

        $i0 = virtualinvoke r1.<cern.colt.matrix.linalg.SingularValueDecomposition: int rank()>();

        r0.<com.opengamma.analytics.math.linearalgebra.SVDecompositionColtResult: int _rank> = $i0;

        $r2 = virtualinvoke r1.<cern.colt.matrix.linalg.SingularValueDecomposition: cern.colt.matrix.DoubleMatrix2D getS()>();

        $r3 = staticinvoke <com.opengamma.analytics.math.util.wrapper.ColtMathWrapper: com.opengamma.analytics.math.matrix.DoubleMatrix2D wrap(cern.colt.matrix.DoubleMatrix2D)>($r2);

        r0.<com.opengamma.analytics.math.linearalgebra.SVDecompositionColtResult: com.opengamma.analytics.math.matrix.DoubleMatrix2D _s> = $r3;

        $r4 = virtualinvoke r1.<cern.colt.matrix.linalg.SingularValueDecomposition: cern.colt.matrix.DoubleMatrix2D getU()>();

        $r5 = staticinvoke <com.opengamma.analytics.math.util.wrapper.ColtMathWrapper: com.opengamma.analytics.math.matrix.DoubleMatrix2D wrap(cern.colt.matrix.DoubleMatrix2D)>($r4);

        r0.<com.opengamma.analytics.math.linearalgebra.SVDecompositionColtResult: com.opengamma.analytics.math.matrix.DoubleMatrix2D _u> = $r5;

        $r6 = r0.<com.opengamma.analytics.math.linearalgebra.SVDecompositionColtResult: com.opengamma.analytics.math.matrix.DoubleMatrix2D _u>;

        $r7 = staticinvoke <com.opengamma.analytics.math.matrix.DoubleMatrixUtils: com.opengamma.analytics.math.matrix.DoubleMatrix2D getTranspose(com.opengamma.analytics.math.matrix.DoubleMatrix2D)>($r6);

        r0.<com.opengamma.analytics.math.linearalgebra.SVDecompositionColtResult: com.opengamma.analytics.math.matrix.DoubleMatrix2D _uTranspose> = $r7;

        $r8 = virtualinvoke r1.<cern.colt.matrix.linalg.SingularValueDecomposition: cern.colt.matrix.DoubleMatrix2D getV()>();

        $r9 = staticinvoke <com.opengamma.analytics.math.util.wrapper.ColtMathWrapper: com.opengamma.analytics.math.matrix.DoubleMatrix2D wrap(cern.colt.matrix.DoubleMatrix2D)>($r8);

        r0.<com.opengamma.analytics.math.linearalgebra.SVDecompositionColtResult: com.opengamma.analytics.math.matrix.DoubleMatrix2D _v> = $r9;

        $r10 = r0.<com.opengamma.analytics.math.linearalgebra.SVDecompositionColtResult: com.opengamma.analytics.math.matrix.DoubleMatrix2D _v>;

        $r11 = staticinvoke <com.opengamma.analytics.math.matrix.DoubleMatrixUtils: com.opengamma.analytics.math.matrix.DoubleMatrix2D getTranspose(com.opengamma.analytics.math.matrix.DoubleMatrix2D)>($r10);

        r0.<com.opengamma.analytics.math.linearalgebra.SVDecompositionColtResult: com.opengamma.analytics.math.matrix.DoubleMatrix2D _vTranspose> = $r11;

        $r12 = virtualinvoke r1.<cern.colt.matrix.linalg.SingularValueDecomposition: double[] getSingularValues()>();

        r0.<com.opengamma.analytics.math.linearalgebra.SVDecompositionColtResult: double[] _singularValues> = $r12;

        return;
    }

    public double getConditionNumber()
    {
        com.opengamma.analytics.math.linearalgebra.SVDecompositionColtResult r0;
        double $d0;

        r0 := @this: com.opengamma.analytics.math.linearalgebra.SVDecompositionColtResult;

        $d0 = r0.<com.opengamma.analytics.math.linearalgebra.SVDecompositionColtResult: double _condition>;

        return $d0;
    }

    public double getNorm()
    {
        com.opengamma.analytics.math.linearalgebra.SVDecompositionColtResult r0;
        double $d0;

        r0 := @this: com.opengamma.analytics.math.linearalgebra.SVDecompositionColtResult;

        $d0 = r0.<com.opengamma.analytics.math.linearalgebra.SVDecompositionColtResult: double _norm>;

        return $d0;
    }

    public int getRank()
    {
        com.opengamma.analytics.math.linearalgebra.SVDecompositionColtResult r0;
        int $i0;

        r0 := @this: com.opengamma.analytics.math.linearalgebra.SVDecompositionColtResult;

        $i0 = r0.<com.opengamma.analytics.math.linearalgebra.SVDecompositionColtResult: int _rank>;

        return $i0;
    }

    public com.opengamma.analytics.math.matrix.DoubleMatrix2D getS()
    {
        com.opengamma.analytics.math.linearalgebra.SVDecompositionColtResult r0;
        com.opengamma.analytics.math.matrix.DoubleMatrix2D $r1;

        r0 := @this: com.opengamma.analytics.math.linearalgebra.SVDecompositionColtResult;

        $r1 = r0.<com.opengamma.analytics.math.linearalgebra.SVDecompositionColtResult: com.opengamma.analytics.math.matrix.DoubleMatrix2D _s>;

        return $r1;
    }

    public double[] getSingularValues()
    {
        com.opengamma.analytics.math.linearalgebra.SVDecompositionColtResult r0;
        double[] $r1;

        r0 := @this: com.opengamma.analytics.math.linearalgebra.SVDecompositionColtResult;

        $r1 = r0.<com.opengamma.analytics.math.linearalgebra.SVDecompositionColtResult: double[] _singularValues>;

        return $r1;
    }

    public com.opengamma.analytics.math.matrix.DoubleMatrix2D getU()
    {
        com.opengamma.analytics.math.linearalgebra.SVDecompositionColtResult r0;
        com.opengamma.analytics.math.matrix.DoubleMatrix2D $r1;

        r0 := @this: com.opengamma.analytics.math.linearalgebra.SVDecompositionColtResult;

        $r1 = r0.<com.opengamma.analytics.math.linearalgebra.SVDecompositionColtResult: com.opengamma.analytics.math.matrix.DoubleMatrix2D _u>;

        return $r1;
    }

    public com.opengamma.analytics.math.matrix.DoubleMatrix2D getUT()
    {
        com.opengamma.analytics.math.linearalgebra.SVDecompositionColtResult r0;
        com.opengamma.analytics.math.matrix.DoubleMatrix2D $r1;

        r0 := @this: com.opengamma.analytics.math.linearalgebra.SVDecompositionColtResult;

        $r1 = r0.<com.opengamma.analytics.math.linearalgebra.SVDecompositionColtResult: com.opengamma.analytics.math.matrix.DoubleMatrix2D _uTranspose>;

        return $r1;
    }

    public com.opengamma.analytics.math.matrix.DoubleMatrix2D getV()
    {
        com.opengamma.analytics.math.linearalgebra.SVDecompositionColtResult r0;
        com.opengamma.analytics.math.matrix.DoubleMatrix2D $r1;

        r0 := @this: com.opengamma.analytics.math.linearalgebra.SVDecompositionColtResult;

        $r1 = r0.<com.opengamma.analytics.math.linearalgebra.SVDecompositionColtResult: com.opengamma.analytics.math.matrix.DoubleMatrix2D _v>;

        return $r1;
    }

    public com.opengamma.analytics.math.matrix.DoubleMatrix2D getVT()
    {
        com.opengamma.analytics.math.linearalgebra.SVDecompositionColtResult r0;
        com.opengamma.analytics.math.matrix.DoubleMatrix2D $r1;

        r0 := @this: com.opengamma.analytics.math.linearalgebra.SVDecompositionColtResult;

        $r1 = r0.<com.opengamma.analytics.math.linearalgebra.SVDecompositionColtResult: com.opengamma.analytics.math.matrix.DoubleMatrix2D _vTranspose>;

        return $r1;
    }

    public com.opengamma.analytics.math.matrix.DoubleMatrix1D solve(com.opengamma.analytics.math.matrix.DoubleMatrix1D)
    {
        com.opengamma.analytics.math.linearalgebra.SVDecompositionColtResult r0;
        com.opengamma.analytics.math.matrix.DoubleMatrix1D r1, $r2;
        double[] $r3, $r4;

        r0 := @this: com.opengamma.analytics.math.linearalgebra.SVDecompositionColtResult;

        r1 := @parameter0: com.opengamma.analytics.math.matrix.DoubleMatrix1D;

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object)>(r1);

        $r2 = new com.opengamma.analytics.math.matrix.DoubleMatrix1D;

        $r3 = virtualinvoke r1.<com.opengamma.analytics.math.matrix.DoubleMatrix1D: double[] getData()>();

        $r4 = virtualinvoke r0.<com.opengamma.analytics.math.linearalgebra.SVDecompositionColtResult: double[] solve(double[])>($r3);

        specialinvoke $r2.<com.opengamma.analytics.math.matrix.DoubleMatrix1D: void <init>(double[])>($r4);

        return $r2;
    }

    public double[] solve(double[])
    {
        com.opengamma.analytics.math.linearalgebra.SVDecompositionColtResult r0;
        double[] r1, r4, r5, r6, $r9, $r10, $r11;
        double[][] r2, r3;
        int i0, i1, i3, i4, i5, i6;
        com.opengamma.analytics.math.matrix.DoubleMatrix2D $r7, $r8;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, d8, d9;
        byte $b2;

        r0 := @this: com.opengamma.analytics.math.linearalgebra.SVDecompositionColtResult;

        r1 := @parameter0: double[];

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object)>(r1);

        $r7 = r0.<com.opengamma.analytics.math.linearalgebra.SVDecompositionColtResult: com.opengamma.analytics.math.matrix.DoubleMatrix2D _u>;

        r2 = virtualinvoke $r7.<com.opengamma.analytics.math.matrix.DoubleMatrix2D: double[][] getData()>();

        $r8 = r0.<com.opengamma.analytics.math.linearalgebra.SVDecompositionColtResult: com.opengamma.analytics.math.matrix.DoubleMatrix2D _v>;

        r3 = virtualinvoke $r8.<com.opengamma.analytics.math.matrix.DoubleMatrix2D: double[][] getData()>();

        r4 = r0.<com.opengamma.analytics.math.linearalgebra.SVDecompositionColtResult: double[] _singularValues>;

        i0 = lengthof r2;

        $r9 = r2[0];

        i1 = lengthof $r9;

        r5 = newarray (double)[i1];

        i3 = 0;

     label1:
        if i3 >= i1 goto label5;

        d8 = 0.0;

        $d3 = r4[i3];

        $b2 = $d3 cmpl 0.0;

        if $b2 <= 0 goto label4;

        i4 = 0;

     label2:
        if i4 >= i0 goto label3;

        $r11 = r2[i4];

        $d6 = $r11[i3];

        $d5 = r1[i4];

        $d7 = $d6 * $d5;

        d8 = d8 + $d7;

        i4 = i4 + 1;

        goto label2;

     label3:
        $d4 = r4[i3];

        d8 = d8 / $d4;

     label4:
        r5[i3] = d8;

        i3 = i3 + 1;

        goto label1;

     label5:
        r6 = newarray (double)[i1];

        i5 = 0;

     label6:
        if i5 >= i1 goto label9;

        d9 = 0.0;

        i6 = 0;

     label7:
        if i6 >= i1 goto label8;

        $r10 = r3[i5];

        $d1 = $r10[i6];

        $d0 = r5[i6];

        $d2 = $d1 * $d0;

        d9 = d9 + $d2;

        i6 = i6 + 1;

        goto label7;

     label8:
        r6[i5] = d9;

        i5 = i5 + 1;

        goto label6;

     label9:
        return r6;
    }

    public com.opengamma.analytics.math.matrix.DoubleMatrix2D solve(com.opengamma.analytics.math.matrix.DoubleMatrix2D)
    {
        com.opengamma.analytics.math.linearalgebra.SVDecompositionColtResult r0;
        com.opengamma.analytics.math.matrix.DoubleMatrix2D r1, r2, $r5, $r6;
        double[][] r3, r4;
        int i0, i1;
        double[] $r7, $r8;

        r0 := @this: com.opengamma.analytics.math.linearalgebra.SVDecompositionColtResult;

        r1 := @parameter0: com.opengamma.analytics.math.matrix.DoubleMatrix2D;

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object)>(r1);

        r2 = staticinvoke <com.opengamma.analytics.math.matrix.DoubleMatrixUtils: com.opengamma.analytics.math.matrix.DoubleMatrix2D getTranspose(com.opengamma.analytics.math.matrix.DoubleMatrix2D)>(r1);

        r3 = virtualinvoke r2.<com.opengamma.analytics.math.matrix.DoubleMatrix2D: double[][] getData()>();

        i0 = lengthof r3;

        r4 = newarray (double[])[i0];

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        $r7 = r3[i1];

        $r8 = virtualinvoke r0.<com.opengamma.analytics.math.linearalgebra.SVDecompositionColtResult: double[] solve(double[])>($r7);

        r4[i1] = $r8;

        i1 = i1 + 1;

        goto label1;

     label2:
        $r5 = new com.opengamma.analytics.math.matrix.DoubleMatrix2D;

        specialinvoke $r5.<com.opengamma.analytics.math.matrix.DoubleMatrix2D: void <init>(double[][])>(r4);

        $r6 = staticinvoke <com.opengamma.analytics.math.matrix.DoubleMatrixUtils: com.opengamma.analytics.math.matrix.DoubleMatrix2D getTranspose(com.opengamma.analytics.math.matrix.DoubleMatrix2D)>($r5);

        return $r6;
    }
}
