public class org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics extends java.lang.Object implements org.apache.commons.math3.stat.descriptive.StatisticalMultivariateSummary, java.io.Serializable
{
    private static final long serialVersionUID;
    private int k;
    private long n;
    private org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[] sumImpl;
    private org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[] sumSqImpl;
    private org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[] minImpl;
    private org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[] maxImpl;
    private org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[] sumLogImpl;
    private org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[] geoMeanImpl;
    private org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[] meanImpl;
    private org.apache.commons.math3.stat.descriptive.moment.VectorialCovariance covarianceImpl;

    public void <init>(int, boolean)
    {
        org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics r0;
        int i0, i1;
        boolean z0;
        org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[] $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r10, $r12, $r14, $r16, $r18, $r20, $r22;
        org.apache.commons.math3.stat.descriptive.moment.VectorialCovariance $r8;
        org.apache.commons.math3.stat.descriptive.summary.Sum $r9;
        org.apache.commons.math3.stat.descriptive.summary.SumOfSquares $r11;
        org.apache.commons.math3.stat.descriptive.rank.Min $r13;
        org.apache.commons.math3.stat.descriptive.rank.Max $r15;
        org.apache.commons.math3.stat.descriptive.summary.SumOfLogs $r17;
        org.apache.commons.math3.stat.descriptive.moment.GeometricMean $r19;
        org.apache.commons.math3.stat.descriptive.moment.Mean $r21;

        r0 := @this: org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics: long n> = 0L;

        r0.<org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics: int k> = i0;

        $r1 = newarray (org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic)[i0];

        r0.<org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics: org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[] sumImpl> = $r1;

        $r2 = newarray (org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic)[i0];

        r0.<org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics: org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[] sumSqImpl> = $r2;

        $r3 = newarray (org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic)[i0];

        r0.<org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics: org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[] minImpl> = $r3;

        $r4 = newarray (org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic)[i0];

        r0.<org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics: org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[] maxImpl> = $r4;

        $r5 = newarray (org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic)[i0];

        r0.<org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics: org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[] sumLogImpl> = $r5;

        $r6 = newarray (org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic)[i0];

        r0.<org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics: org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[] geoMeanImpl> = $r6;

        $r7 = newarray (org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic)[i0];

        r0.<org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics: org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[] meanImpl> = $r7;

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        $r10 = r0.<org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics: org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[] sumImpl>;

        $r9 = new org.apache.commons.math3.stat.descriptive.summary.Sum;

        specialinvoke $r9.<org.apache.commons.math3.stat.descriptive.summary.Sum: void <init>()>();

        $r10[i1] = $r9;

        $r12 = r0.<org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics: org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[] sumSqImpl>;

        $r11 = new org.apache.commons.math3.stat.descriptive.summary.SumOfSquares;

        specialinvoke $r11.<org.apache.commons.math3.stat.descriptive.summary.SumOfSquares: void <init>()>();

        $r12[i1] = $r11;

        $r14 = r0.<org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics: org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[] minImpl>;

        $r13 = new org.apache.commons.math3.stat.descriptive.rank.Min;

        specialinvoke $r13.<org.apache.commons.math3.stat.descriptive.rank.Min: void <init>()>();

        $r14[i1] = $r13;

        $r16 = r0.<org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics: org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[] maxImpl>;

        $r15 = new org.apache.commons.math3.stat.descriptive.rank.Max;

        specialinvoke $r15.<org.apache.commons.math3.stat.descriptive.rank.Max: void <init>()>();

        $r16[i1] = $r15;

        $r18 = r0.<org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics: org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[] sumLogImpl>;

        $r17 = new org.apache.commons.math3.stat.descriptive.summary.SumOfLogs;

        specialinvoke $r17.<org.apache.commons.math3.stat.descriptive.summary.SumOfLogs: void <init>()>();

        $r18[i1] = $r17;

        $r20 = r0.<org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics: org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[] geoMeanImpl>;

        $r19 = new org.apache.commons.math3.stat.descriptive.moment.GeometricMean;

        specialinvoke $r19.<org.apache.commons.math3.stat.descriptive.moment.GeometricMean: void <init>()>();

        $r20[i1] = $r19;

        $r22 = r0.<org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics: org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[] meanImpl>;

        $r21 = new org.apache.commons.math3.stat.descriptive.moment.Mean;

        specialinvoke $r21.<org.apache.commons.math3.stat.descriptive.moment.Mean: void <init>()>();

        $r22[i1] = $r21;

        i1 = i1 + 1;

        goto label1;

     label2:
        $r8 = new org.apache.commons.math3.stat.descriptive.moment.VectorialCovariance;

        specialinvoke $r8.<org.apache.commons.math3.stat.descriptive.moment.VectorialCovariance: void <init>(int,boolean)>(i0, z0);

        r0.<org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics: org.apache.commons.math3.stat.descriptive.moment.VectorialCovariance covarianceImpl> = $r8;

        return;
    }

    public void addValue(double[]) throws org.apache.commons.math3.exception.DimensionMismatchException
    {
        org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics r0;
        double[] r1;
        double d0;
        int $i0, $i1, i4;
        org.apache.commons.math3.stat.descriptive.moment.VectorialCovariance $r2;
        long $l2, $l3;
        org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[] $r3, $r5, $r7, $r9, $r11, $r13, $r15;
        org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic $r4, $r6, $r8, $r10, $r12, $r14, $r16;

        r0 := @this: org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics;

        r1 := @parameter0: double[];

        $i0 = lengthof r1;

        specialinvoke r0.<org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics: void checkDimension(int)>($i0);

        i4 = 0;

     label1:
        $i1 = r0.<org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics: int k>;

        if i4 >= $i1 goto label2;

        d0 = r1[i4];

        $r3 = r0.<org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics: org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[] sumImpl>;

        $r4 = $r3[i4];

        interfaceinvoke $r4.<org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic: void increment(double)>(d0);

        $r5 = r0.<org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics: org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[] sumSqImpl>;

        $r6 = $r5[i4];

        interfaceinvoke $r6.<org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic: void increment(double)>(d0);

        $r7 = r0.<org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics: org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[] minImpl>;

        $r8 = $r7[i4];

        interfaceinvoke $r8.<org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic: void increment(double)>(d0);

        $r9 = r0.<org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics: org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[] maxImpl>;

        $r10 = $r9[i4];

        interfaceinvoke $r10.<org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic: void increment(double)>(d0);

        $r11 = r0.<org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics: org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[] sumLogImpl>;

        $r12 = $r11[i4];

        interfaceinvoke $r12.<org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic: void increment(double)>(d0);

        $r13 = r0.<org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics: org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[] geoMeanImpl>;

        $r14 = $r13[i4];

        interfaceinvoke $r14.<org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic: void increment(double)>(d0);

        $r15 = r0.<org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics: org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[] meanImpl>;

        $r16 = $r15[i4];

        interfaceinvoke $r16.<org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic: void increment(double)>(d0);

        i4 = i4 + 1;

        goto label1;

     label2:
        $r2 = r0.<org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics: org.apache.commons.math3.stat.descriptive.moment.VectorialCovariance covarianceImpl>;

        virtualinvoke $r2.<org.apache.commons.math3.stat.descriptive.moment.VectorialCovariance: void increment(double[])>(r1);

        $l2 = r0.<org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics: long n>;

        $l3 = $l2 + 1L;

        r0.<org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics: long n> = $l3;

        return;
    }

    public int getDimension()
    {
        org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics r0;
        int $i0;

        r0 := @this: org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics;

        $i0 = r0.<org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics: int k>;

        return $i0;
    }

    public long getN()
    {
        org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics r0;
        long $l0;

        r0 := @this: org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics;

        $l0 = r0.<org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics: long n>;

        return $l0;
    }

    private double[] getResults(org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[])
    {
        org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics r0;
        org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[] r1;
        double[] r2;
        int $i0, $i1, i2;
        org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic $r3;
        double $d0;

        r0 := @this: org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics;

        r1 := @parameter0: org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[];

        $i0 = lengthof r1;

        r2 = newarray (double)[$i0];

        i2 = 0;

     label1:
        $i1 = lengthof r2;

        if i2 >= $i1 goto label2;

        $r3 = r1[i2];

        $d0 = interfaceinvoke $r3.<org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic: double getResult()>();

        r2[i2] = $d0;

        i2 = i2 + 1;

        goto label1;

     label2:
        return r2;
    }

    public double[] getSum()
    {
        org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics r0;
        org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[] $r1;
        double[] $r2;

        r0 := @this: org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics;

        $r1 = r0.<org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics: org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[] sumImpl>;

        $r2 = specialinvoke r0.<org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics: double[] getResults(org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[])>($r1);

        return $r2;
    }

    public double[] getSumSq()
    {
        org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics r0;
        org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[] $r1;
        double[] $r2;

        r0 := @this: org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics;

        $r1 = r0.<org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics: org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[] sumSqImpl>;

        $r2 = specialinvoke r0.<org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics: double[] getResults(org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[])>($r1);

        return $r2;
    }

    public double[] getSumLog()
    {
        org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics r0;
        org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[] $r1;
        double[] $r2;

        r0 := @this: org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics;

        $r1 = r0.<org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics: org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[] sumLogImpl>;

        $r2 = specialinvoke r0.<org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics: double[] getResults(org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[])>($r1);

        return $r2;
    }

    public double[] getMean()
    {
        org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics r0;
        org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[] $r1;
        double[] $r2;

        r0 := @this: org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics;

        $r1 = r0.<org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics: org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[] meanImpl>;

        $r2 = specialinvoke r0.<org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics: double[] getResults(org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[])>($r1);

        return $r2;
    }

    public double[] getStandardDeviation()
    {
        org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics r0;
        double[] r1;
        org.apache.commons.math3.linear.RealMatrix r2;
        int $i0, $i5, i6;
        long $l1, $l3;
        byte $b2, $b4;
        org.apache.commons.math3.stat.descriptive.moment.VectorialCovariance $r3;
        double $d0, $d1;

        r0 := @this: org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics;

        $i0 = r0.<org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics: int k>;

        r1 = newarray (double)[$i0];

        $l1 = virtualinvoke r0.<org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics: long getN()>();

        $b2 = $l1 cmp 1L;

        if $b2 >= 0 goto label1;

        staticinvoke <java.util.Arrays: void fill(double[],double)>(r1, #NaN);

        goto label4;

     label1:
        $l3 = virtualinvoke r0.<org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics: long getN()>();

        $b4 = $l3 cmp 2L;

        if $b4 >= 0 goto label2;

        staticinvoke <java.util.Arrays: void fill(double[],double)>(r1, 0.0);

        goto label4;

     label2:
        $r3 = r0.<org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics: org.apache.commons.math3.stat.descriptive.moment.VectorialCovariance covarianceImpl>;

        r2 = virtualinvoke $r3.<org.apache.commons.math3.stat.descriptive.moment.VectorialCovariance: org.apache.commons.math3.linear.RealMatrix getResult()>();

        i6 = 0;

     label3:
        $i5 = r0.<org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics: int k>;

        if i6 >= $i5 goto label4;

        $d0 = interfaceinvoke r2.<org.apache.commons.math3.linear.RealMatrix: double getEntry(int,int)>(i6, i6);

        $d1 = staticinvoke <org.apache.commons.math3.util.FastMath: double sqrt(double)>($d0);

        r1[i6] = $d1;

        i6 = i6 + 1;

        goto label3;

     label4:
        return r1;
    }

    public org.apache.commons.math3.linear.RealMatrix getCovariance()
    {
        org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics r0;
        org.apache.commons.math3.stat.descriptive.moment.VectorialCovariance $r1;
        org.apache.commons.math3.linear.RealMatrix $r2;

        r0 := @this: org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics;

        $r1 = r0.<org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics: org.apache.commons.math3.stat.descriptive.moment.VectorialCovariance covarianceImpl>;

        $r2 = virtualinvoke $r1.<org.apache.commons.math3.stat.descriptive.moment.VectorialCovariance: org.apache.commons.math3.linear.RealMatrix getResult()>();

        return $r2;
    }

    public double[] getMax()
    {
        org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics r0;
        org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[] $r1;
        double[] $r2;

        r0 := @this: org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics;

        $r1 = r0.<org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics: org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[] maxImpl>;

        $r2 = specialinvoke r0.<org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics: double[] getResults(org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[])>($r1);

        return $r2;
    }

    public double[] getMin()
    {
        org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics r0;
        org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[] $r1;
        double[] $r2;

        r0 := @this: org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics;

        $r1 = r0.<org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics: org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[] minImpl>;

        $r2 = specialinvoke r0.<org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics: double[] getResults(org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[])>($r1);

        return $r2;
    }

    public double[] getGeometricMean()
    {
        org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics r0;
        org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[] $r1;
        double[] $r2;

        r0 := @this: org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics;

        $r1 = r0.<org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics: org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[] geoMeanImpl>;

        $r2 = specialinvoke r0.<org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics: double[] getResults(org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[])>($r1);

        return $r2;
    }

    public java.lang.String toString()
    {
        org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics r0;
        java.lang.String r2, $r8, $r14, $r26, $r29, $r31;
        java.lang.StringBuilder $r4, $r5, $r6, $r7, $r10, $r11, $r12, $r13, $r23, $r24, $r27, $r28;
        long $l0;
        double[] $r16, $r17, $r18, $r19, $r20, $r21, $r22;
        org.apache.commons.math3.linear.RealMatrix $r25;

        r0 := @this: org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics;

        r2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("line.separator");

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("MultivariateSummaryStatistics:");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("n: ");

        $l0 = virtualinvoke r0.<org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics: long getN()>();

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        $r16 = virtualinvoke r0.<org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics: double[] getMin()>();

        specialinvoke r0.<org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics: void append(java.lang.StringBuilder,double[],java.lang.String,java.lang.String,java.lang.String)>($r4, $r16, "min: ", ", ", r2);

        $r17 = virtualinvoke r0.<org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics: double[] getMax()>();

        specialinvoke r0.<org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics: void append(java.lang.StringBuilder,double[],java.lang.String,java.lang.String,java.lang.String)>($r4, $r17, "max: ", ", ", r2);

        $r18 = virtualinvoke r0.<org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics: double[] getMean()>();

        specialinvoke r0.<org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics: void append(java.lang.StringBuilder,double[],java.lang.String,java.lang.String,java.lang.String)>($r4, $r18, "mean: ", ", ", r2);

        $r19 = virtualinvoke r0.<org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics: double[] getGeometricMean()>();

        specialinvoke r0.<org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics: void append(java.lang.StringBuilder,double[],java.lang.String,java.lang.String,java.lang.String)>($r4, $r19, "geometric mean: ", ", ", r2);

        $r20 = virtualinvoke r0.<org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics: double[] getSumSq()>();

        specialinvoke r0.<org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics: void append(java.lang.StringBuilder,double[],java.lang.String,java.lang.String,java.lang.String)>($r4, $r20, "sum of squares: ", ", ", r2);

        $r21 = virtualinvoke r0.<org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics: double[] getSumLog()>();

        specialinvoke r0.<org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics: void append(java.lang.StringBuilder,double[],java.lang.String,java.lang.String,java.lang.String)>($r4, $r21, "sum of logarithms: ", ", ", r2);

        $r22 = virtualinvoke r0.<org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics: double[] getStandardDeviation()>();

        specialinvoke r0.<org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics: void append(java.lang.StringBuilder,double[],java.lang.String,java.lang.String,java.lang.String)>($r4, $r22, "standard deviation: ", ", ", r2);

        $r23 = new java.lang.StringBuilder;

        specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("covariance: ");

        $r25 = virtualinvoke r0.<org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics: org.apache.commons.math3.linear.RealMatrix getCovariance()>();

        $r26 = virtualinvoke $r25.<java.lang.Object: java.lang.String toString()>();

        $r27 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r26);

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r29);

        $r31 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r31;
    }

    private void append(java.lang.StringBuilder, double[], java.lang.String, java.lang.String, java.lang.String)
    {
        org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics r0;
        java.lang.StringBuilder r1;
        double[] r2;
        java.lang.String r3, r4, r5;
        int $i0, i1;
        double $d0;

        r0 := @this: org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics;

        r1 := @parameter0: java.lang.StringBuilder;

        r2 := @parameter1: double[];

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.lang.String;

        r5 := @parameter4: java.lang.String;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        i1 = 0;

     label1:
        $i0 = lengthof r2;

        if i1 >= $i0 goto label3;

        if i1 <= 0 goto label2;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

     label2:
        $d0 = r2[i1];

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d0);

        i1 = i1 + 1;

        goto label1;

     label3:
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);

        return;
    }

    public void clear()
    {
        org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics r0;
        int $i0, i1;
        org.apache.commons.math3.stat.descriptive.moment.VectorialCovariance $r1;
        org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[] $r2, $r4, $r6, $r8, $r10, $r12, $r14;
        org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic $r3, $r5, $r7, $r9, $r11, $r13, $r15;

        r0 := @this: org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics;

        r0.<org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics: long n> = 0L;

        i1 = 0;

     label1:
        $i0 = r0.<org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics: int k>;

        if i1 >= $i0 goto label2;

        $r2 = r0.<org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics: org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[] minImpl>;

        $r3 = $r2[i1];

        interfaceinvoke $r3.<org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic: void clear()>();

        $r4 = r0.<org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics: org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[] maxImpl>;

        $r5 = $r4[i1];

        interfaceinvoke $r5.<org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic: void clear()>();

        $r6 = r0.<org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics: org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[] sumImpl>;

        $r7 = $r6[i1];

        interfaceinvoke $r7.<org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic: void clear()>();

        $r8 = r0.<org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics: org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[] sumLogImpl>;

        $r9 = $r8[i1];

        interfaceinvoke $r9.<org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic: void clear()>();

        $r10 = r0.<org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics: org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[] sumSqImpl>;

        $r11 = $r10[i1];

        interfaceinvoke $r11.<org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic: void clear()>();

        $r12 = r0.<org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics: org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[] geoMeanImpl>;

        $r13 = $r12[i1];

        interfaceinvoke $r13.<org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic: void clear()>();

        $r14 = r0.<org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics: org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[] meanImpl>;

        $r15 = $r14[i1];

        interfaceinvoke $r15.<org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic: void clear()>();

        i1 = i1 + 1;

        goto label1;

     label2:
        $r1 = r0.<org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics: org.apache.commons.math3.stat.descriptive.moment.VectorialCovariance covarianceImpl>;

        virtualinvoke $r1.<org.apache.commons.math3.stat.descriptive.moment.VectorialCovariance: void clear()>();

        return;
    }

    public boolean equals(java.lang.Object)
    {
        org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics r0, r2;
        java.lang.Object r1;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10;
        double[] $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16;
        long $l0, $l1;
        float $f0, $f1;
        org.apache.commons.math3.linear.RealMatrix $r17, $r18;

        r0 := @this: org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics;

        r1 := @parameter0: java.lang.Object;

        if r1 != r0 goto label1;

        return 1;

     label1:
        $z0 = r1 instanceof org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics;

        if $z0 != 0 goto label2;

        return 0;

     label2:
        r2 = (org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics) r1;

        $r3 = virtualinvoke r2.<org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics: double[] getGeometricMean()>();

        $r4 = virtualinvoke r0.<org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics: double[] getGeometricMean()>();

        $z1 = staticinvoke <org.apache.commons.math3.util.MathArrays: boolean equalsIncludingNaN(double[],double[])>($r3, $r4);

        if $z1 == 0 goto label3;

        $r5 = virtualinvoke r2.<org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics: double[] getMax()>();

        $r6 = virtualinvoke r0.<org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics: double[] getMax()>();

        $z2 = staticinvoke <org.apache.commons.math3.util.MathArrays: boolean equalsIncludingNaN(double[],double[])>($r5, $r6);

        if $z2 == 0 goto label3;

        $r7 = virtualinvoke r2.<org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics: double[] getMean()>();

        $r8 = virtualinvoke r0.<org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics: double[] getMean()>();

        $z3 = staticinvoke <org.apache.commons.math3.util.MathArrays: boolean equalsIncludingNaN(double[],double[])>($r7, $r8);

        if $z3 == 0 goto label3;

        $r9 = virtualinvoke r2.<org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics: double[] getMin()>();

        $r10 = virtualinvoke r0.<org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics: double[] getMin()>();

        $z4 = staticinvoke <org.apache.commons.math3.util.MathArrays: boolean equalsIncludingNaN(double[],double[])>($r9, $r10);

        if $z4 == 0 goto label3;

        $l0 = virtualinvoke r2.<org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics: long getN()>();

        $f0 = (float) $l0;

        $l1 = virtualinvoke r0.<org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics: long getN()>();

        $f1 = (float) $l1;

        $z5 = staticinvoke <org.apache.commons.math3.util.Precision: boolean equalsIncludingNaN(float,float)>($f0, $f1);

        if $z5 == 0 goto label3;

        $r11 = virtualinvoke r2.<org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics: double[] getSum()>();

        $r12 = virtualinvoke r0.<org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics: double[] getSum()>();

        $z6 = staticinvoke <org.apache.commons.math3.util.MathArrays: boolean equalsIncludingNaN(double[],double[])>($r11, $r12);

        if $z6 == 0 goto label3;

        $r13 = virtualinvoke r2.<org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics: double[] getSumSq()>();

        $r14 = virtualinvoke r0.<org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics: double[] getSumSq()>();

        $z7 = staticinvoke <org.apache.commons.math3.util.MathArrays: boolean equalsIncludingNaN(double[],double[])>($r13, $r14);

        if $z7 == 0 goto label3;

        $r15 = virtualinvoke r2.<org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics: double[] getSumLog()>();

        $r16 = virtualinvoke r0.<org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics: double[] getSumLog()>();

        $z8 = staticinvoke <org.apache.commons.math3.util.MathArrays: boolean equalsIncludingNaN(double[],double[])>($r15, $r16);

        if $z8 == 0 goto label3;

        $r17 = virtualinvoke r2.<org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics: org.apache.commons.math3.linear.RealMatrix getCovariance()>();

        $r18 = virtualinvoke r0.<org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics: org.apache.commons.math3.linear.RealMatrix getCovariance()>();

        $z9 = virtualinvoke $r17.<java.lang.Object: boolean equals(java.lang.Object)>($r18);

        if $z9 == 0 goto label3;

        $z10 = 1;

        goto label4;

     label3:
        $z10 = 0;

     label4:
        return $z10;
    }

    public int hashCode()
    {
        org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics r0;
        double[] $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, i20, i21, i22, i23, i24, i25, i26, i27, i28, i29;
        long $l10;
        double $d0;
        org.apache.commons.math3.linear.RealMatrix $r9;

        r0 := @this: org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics;

        $r1 = virtualinvoke r0.<org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics: double[] getGeometricMean()>();

        $i0 = staticinvoke <org.apache.commons.math3.util.MathUtils: int hash(double[])>($r1);

        i20 = 31 + $i0;

        $i1 = i20 * 31;

        $r2 = virtualinvoke r0.<org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics: double[] getGeometricMean()>();

        $i2 = staticinvoke <org.apache.commons.math3.util.MathUtils: int hash(double[])>($r2);

        i21 = $i1 + $i2;

        $i3 = i21 * 31;

        $r3 = virtualinvoke r0.<org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics: double[] getMax()>();

        $i4 = staticinvoke <org.apache.commons.math3.util.MathUtils: int hash(double[])>($r3);

        i22 = $i3 + $i4;

        $i5 = i22 * 31;

        $r4 = virtualinvoke r0.<org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics: double[] getMean()>();

        $i6 = staticinvoke <org.apache.commons.math3.util.MathUtils: int hash(double[])>($r4);

        i23 = $i5 + $i6;

        $i7 = i23 * 31;

        $r5 = virtualinvoke r0.<org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics: double[] getMin()>();

        $i8 = staticinvoke <org.apache.commons.math3.util.MathUtils: int hash(double[])>($r5);

        i24 = $i7 + $i8;

        $i9 = i24 * 31;

        $l10 = virtualinvoke r0.<org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics: long getN()>();

        $d0 = (double) $l10;

        $i11 = staticinvoke <org.apache.commons.math3.util.MathUtils: int hash(double)>($d0);

        i25 = $i9 + $i11;

        $i12 = i25 * 31;

        $r6 = virtualinvoke r0.<org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics: double[] getSum()>();

        $i13 = staticinvoke <org.apache.commons.math3.util.MathUtils: int hash(double[])>($r6);

        i26 = $i12 + $i13;

        $i14 = i26 * 31;

        $r7 = virtualinvoke r0.<org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics: double[] getSumSq()>();

        $i15 = staticinvoke <org.apache.commons.math3.util.MathUtils: int hash(double[])>($r7);

        i27 = $i14 + $i15;

        $i16 = i27 * 31;

        $r8 = virtualinvoke r0.<org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics: double[] getSumLog()>();

        $i17 = staticinvoke <org.apache.commons.math3.util.MathUtils: int hash(double[])>($r8);

        i28 = $i16 + $i17;

        $i18 = i28 * 31;

        $r9 = virtualinvoke r0.<org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics: org.apache.commons.math3.linear.RealMatrix getCovariance()>();

        $i19 = virtualinvoke $r9.<java.lang.Object: int hashCode()>();

        i29 = $i18 + $i19;

        return i29;
    }

    private void setImpl(org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[], org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[]) throws org.apache.commons.math3.exception.MathIllegalStateException, org.apache.commons.math3.exception.DimensionMismatchException
    {
        org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics r0;
        org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[] r1, r2;
        int $i0, $i1;

        r0 := @this: org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics;

        r1 := @parameter0: org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[];

        r2 := @parameter1: org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[];

        specialinvoke r0.<org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics: void checkEmpty()>();

        $i0 = lengthof r1;

        specialinvoke r0.<org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics: void checkDimension(int)>($i0);

        $i1 = lengthof r1;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, 0, r2, 0, $i1);

        return;
    }

    public org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[] getSumImpl()
    {
        org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics r0;
        org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[] $r1, $r3;
        java.lang.Object $r2;

        r0 := @this: org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics;

        $r1 = r0.<org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics: org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[] sumImpl>;

        $r2 = virtualinvoke $r1.<java.lang.Object: java.lang.Object clone()>();

        $r3 = (org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[]) $r2;

        return $r3;
    }

    public void setSumImpl(org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[]) throws org.apache.commons.math3.exception.MathIllegalStateException, org.apache.commons.math3.exception.DimensionMismatchException
    {
        org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics r0;
        org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[] r1, $r2;

        r0 := @this: org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics;

        r1 := @parameter0: org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[];

        $r2 = r0.<org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics: org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[] sumImpl>;

        specialinvoke r0.<org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics: void setImpl(org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[],org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[])>(r1, $r2);

        return;
    }

    public org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[] getSumsqImpl()
    {
        org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics r0;
        org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[] $r1, $r3;
        java.lang.Object $r2;

        r0 := @this: org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics;

        $r1 = r0.<org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics: org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[] sumSqImpl>;

        $r2 = virtualinvoke $r1.<java.lang.Object: java.lang.Object clone()>();

        $r3 = (org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[]) $r2;

        return $r3;
    }

    public void setSumsqImpl(org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[]) throws org.apache.commons.math3.exception.MathIllegalStateException, org.apache.commons.math3.exception.DimensionMismatchException
    {
        org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics r0;
        org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[] r1, $r2;

        r0 := @this: org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics;

        r1 := @parameter0: org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[];

        $r2 = r0.<org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics: org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[] sumSqImpl>;

        specialinvoke r0.<org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics: void setImpl(org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[],org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[])>(r1, $r2);

        return;
    }

    public org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[] getMinImpl()
    {
        org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics r0;
        org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[] $r1, $r3;
        java.lang.Object $r2;

        r0 := @this: org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics;

        $r1 = r0.<org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics: org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[] minImpl>;

        $r2 = virtualinvoke $r1.<java.lang.Object: java.lang.Object clone()>();

        $r3 = (org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[]) $r2;

        return $r3;
    }

    public void setMinImpl(org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[]) throws org.apache.commons.math3.exception.MathIllegalStateException, org.apache.commons.math3.exception.DimensionMismatchException
    {
        org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics r0;
        org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[] r1, $r2;

        r0 := @this: org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics;

        r1 := @parameter0: org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[];

        $r2 = r0.<org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics: org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[] minImpl>;

        specialinvoke r0.<org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics: void setImpl(org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[],org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[])>(r1, $r2);

        return;
    }

    public org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[] getMaxImpl()
    {
        org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics r0;
        org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[] $r1, $r3;
        java.lang.Object $r2;

        r0 := @this: org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics;

        $r1 = r0.<org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics: org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[] maxImpl>;

        $r2 = virtualinvoke $r1.<java.lang.Object: java.lang.Object clone()>();

        $r3 = (org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[]) $r2;

        return $r3;
    }

    public void setMaxImpl(org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[]) throws org.apache.commons.math3.exception.MathIllegalStateException, org.apache.commons.math3.exception.DimensionMismatchException
    {
        org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics r0;
        org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[] r1, $r2;

        r0 := @this: org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics;

        r1 := @parameter0: org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[];

        $r2 = r0.<org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics: org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[] maxImpl>;

        specialinvoke r0.<org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics: void setImpl(org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[],org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[])>(r1, $r2);

        return;
    }

    public org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[] getSumLogImpl()
    {
        org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics r0;
        org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[] $r1, $r3;
        java.lang.Object $r2;

        r0 := @this: org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics;

        $r1 = r0.<org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics: org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[] sumLogImpl>;

        $r2 = virtualinvoke $r1.<java.lang.Object: java.lang.Object clone()>();

        $r3 = (org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[]) $r2;

        return $r3;
    }

    public void setSumLogImpl(org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[]) throws org.apache.commons.math3.exception.MathIllegalStateException, org.apache.commons.math3.exception.DimensionMismatchException
    {
        org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics r0;
        org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[] r1, $r2;

        r0 := @this: org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics;

        r1 := @parameter0: org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[];

        $r2 = r0.<org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics: org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[] sumLogImpl>;

        specialinvoke r0.<org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics: void setImpl(org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[],org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[])>(r1, $r2);

        return;
    }

    public org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[] getGeoMeanImpl()
    {
        org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics r0;
        org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[] $r1, $r3;
        java.lang.Object $r2;

        r0 := @this: org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics;

        $r1 = r0.<org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics: org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[] geoMeanImpl>;

        $r2 = virtualinvoke $r1.<java.lang.Object: java.lang.Object clone()>();

        $r3 = (org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[]) $r2;

        return $r3;
    }

    public void setGeoMeanImpl(org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[]) throws org.apache.commons.math3.exception.MathIllegalStateException, org.apache.commons.math3.exception.DimensionMismatchException
    {
        org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics r0;
        org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[] r1, $r2;

        r0 := @this: org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics;

        r1 := @parameter0: org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[];

        $r2 = r0.<org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics: org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[] geoMeanImpl>;

        specialinvoke r0.<org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics: void setImpl(org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[],org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[])>(r1, $r2);

        return;
    }

    public org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[] getMeanImpl()
    {
        org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics r0;
        org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[] $r1, $r3;
        java.lang.Object $r2;

        r0 := @this: org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics;

        $r1 = r0.<org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics: org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[] meanImpl>;

        $r2 = virtualinvoke $r1.<java.lang.Object: java.lang.Object clone()>();

        $r3 = (org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[]) $r2;

        return $r3;
    }

    public void setMeanImpl(org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[]) throws org.apache.commons.math3.exception.MathIllegalStateException, org.apache.commons.math3.exception.DimensionMismatchException
    {
        org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics r0;
        org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[] r1, $r2;

        r0 := @this: org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics;

        r1 := @parameter0: org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[];

        $r2 = r0.<org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics: org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[] meanImpl>;

        specialinvoke r0.<org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics: void setImpl(org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[],org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[])>(r1, $r2);

        return;
    }

    private void checkEmpty() throws org.apache.commons.math3.exception.MathIllegalStateException
    {
        org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics r0;
        long $l0, $l2;
        byte $b1;
        org.apache.commons.math3.exception.MathIllegalStateException $r1;
        java.lang.Object[] $r2;
        org.apache.commons.math3.exception.util.LocalizedFormats $r3;
        java.lang.Long $r4;

        r0 := @this: org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics;

        $l0 = r0.<org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics: long n>;

        $b1 = $l0 cmp 0L;

        if $b1 <= 0 goto label1;

        $r1 = new org.apache.commons.math3.exception.MathIllegalStateException;

        $r3 = <org.apache.commons.math3.exception.util.LocalizedFormats: org.apache.commons.math3.exception.util.LocalizedFormats VALUES_ADDED_BEFORE_CONFIGURING_STATISTIC>;

        $r2 = newarray (java.lang.Object)[1];

        $l2 = r0.<org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics: long n>;

        $r4 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l2);

        $r2[0] = $r4;

        specialinvoke $r1.<org.apache.commons.math3.exception.MathIllegalStateException: void <init>(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])>($r3, $r2);

        throw $r1;

     label1:
        return;
    }

    private void checkDimension(int) throws org.apache.commons.math3.exception.DimensionMismatchException
    {
        org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics r0;
        int i0, $i1, $i2;
        org.apache.commons.math3.exception.DimensionMismatchException $r1;

        r0 := @this: org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics;

        i0 := @parameter0: int;

        $i1 = r0.<org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics: int k>;

        if i0 == $i1 goto label1;

        $r1 = new org.apache.commons.math3.exception.DimensionMismatchException;

        $i2 = r0.<org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics: int k>;

        specialinvoke $r1.<org.apache.commons.math3.exception.DimensionMismatchException: void <init>(int,int)>(i0, $i2);

        throw $r1;

     label1:
        return;
    }

    public static void <clinit>()
    {
        <org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics: long serialVersionUID> = 2271900808994826718L;

        return;
    }
}
