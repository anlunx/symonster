public class org.apache.commons.math3.genetics.FixedGenerationCount extends java.lang.Object implements org.apache.commons.math3.genetics.StoppingCondition
{
    private int numGenerations;
    private final int maxGenerations;

    public void <init>(int) throws org.apache.commons.math3.exception.NumberIsTooSmallException
    {
        org.apache.commons.math3.genetics.FixedGenerationCount r0;
        int i0;
        org.apache.commons.math3.exception.NumberIsTooSmallException $r1;
        java.lang.Integer $r2, $r3;

        r0 := @this: org.apache.commons.math3.genetics.FixedGenerationCount;

        i0 := @parameter0: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.commons.math3.genetics.FixedGenerationCount: int numGenerations> = 0;

        if i0 > 0 goto label1;

        $r1 = new org.apache.commons.math3.exception.NumberIsTooSmallException;

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        specialinvoke $r1.<org.apache.commons.math3.exception.NumberIsTooSmallException: void <init>(java.lang.Number,java.lang.Number,boolean)>($r2, $r3, 1);

        throw $r1;

     label1:
        r0.<org.apache.commons.math3.genetics.FixedGenerationCount: int maxGenerations> = i0;

        return;
    }

    public boolean isSatisfied(org.apache.commons.math3.genetics.Population)
    {
        org.apache.commons.math3.genetics.FixedGenerationCount r0;
        org.apache.commons.math3.genetics.Population r1;
        int $i0, $i1, $i2, $i3;

        r0 := @this: org.apache.commons.math3.genetics.FixedGenerationCount;

        r1 := @parameter0: org.apache.commons.math3.genetics.Population;

        $i1 = r0.<org.apache.commons.math3.genetics.FixedGenerationCount: int numGenerations>;

        $i0 = r0.<org.apache.commons.math3.genetics.FixedGenerationCount: int maxGenerations>;

        if $i1 >= $i0 goto label1;

        $i2 = r0.<org.apache.commons.math3.genetics.FixedGenerationCount: int numGenerations>;

        $i3 = $i2 + 1;

        r0.<org.apache.commons.math3.genetics.FixedGenerationCount: int numGenerations> = $i3;

        return 0;

     label1:
        return 1;
    }

    public int getNumGenerations()
    {
        org.apache.commons.math3.genetics.FixedGenerationCount r0;
        int $i0;

        r0 := @this: org.apache.commons.math3.genetics.FixedGenerationCount;

        $i0 = r0.<org.apache.commons.math3.genetics.FixedGenerationCount: int numGenerations>;

        return $i0;
    }
}
