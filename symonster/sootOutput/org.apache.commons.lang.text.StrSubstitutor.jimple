public class org.apache.commons.lang.text.StrSubstitutor extends java.lang.Object
{
    public static final char DEFAULT_ESCAPE;
    public static final org.apache.commons.lang.text.StrMatcher DEFAULT_PREFIX;
    public static final org.apache.commons.lang.text.StrMatcher DEFAULT_SUFFIX;
    private char escapeChar;
    private org.apache.commons.lang.text.StrMatcher prefixMatcher;
    private org.apache.commons.lang.text.StrMatcher suffixMatcher;
    private org.apache.commons.lang.text.StrLookup variableResolver;
    private boolean enableSubstitutionInVariables;

    public static java.lang.String replace(java.lang.Object, java.util.Map)
    {
        java.lang.Object r0;
        java.util.Map r1;
        org.apache.commons.lang.text.StrSubstitutor $r2;
        java.lang.String $r3;

        r0 := @parameter0: java.lang.Object;

        r1 := @parameter1: java.util.Map;

        $r2 = new org.apache.commons.lang.text.StrSubstitutor;

        specialinvoke $r2.<org.apache.commons.lang.text.StrSubstitutor: void <init>(java.util.Map)>(r1);

        $r3 = virtualinvoke $r2.<org.apache.commons.lang.text.StrSubstitutor: java.lang.String replace(java.lang.Object)>(r0);

        return $r3;
    }

    public static java.lang.String replace(java.lang.Object, java.util.Map, java.lang.String, java.lang.String)
    {
        java.lang.Object r0;
        java.util.Map r1;
        java.lang.String r2, r3, $r5;
        org.apache.commons.lang.text.StrSubstitutor $r4;

        r0 := @parameter0: java.lang.Object;

        r1 := @parameter1: java.util.Map;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: java.lang.String;

        $r4 = new org.apache.commons.lang.text.StrSubstitutor;

        specialinvoke $r4.<org.apache.commons.lang.text.StrSubstitutor: void <init>(java.util.Map,java.lang.String,java.lang.String)>(r1, r2, r3);

        $r5 = virtualinvoke $r4.<org.apache.commons.lang.text.StrSubstitutor: java.lang.String replace(java.lang.Object)>(r0);

        return $r5;
    }

    public static java.lang.String replace(java.lang.Object, java.util.Properties)
    {
        java.lang.Object r0, $r8;
        java.util.Properties r1;
        java.util.Enumeration r3;
        java.lang.String r4, r5, $r7, $r10;
        java.util.HashMap $r6;
        boolean $z0;

        r0 := @parameter0: java.lang.Object;

        r1 := @parameter1: java.util.Properties;

        if r1 != null goto label1;

        $r10 = virtualinvoke r0.<java.lang.Object: java.lang.String toString()>();

        return $r10;

     label1:
        $r6 = new java.util.HashMap;

        specialinvoke $r6.<java.util.HashMap: void <init>()>();

        r3 = virtualinvoke r1.<java.util.Properties: java.util.Enumeration propertyNames()>();

     label2:
        $z0 = interfaceinvoke r3.<java.util.Enumeration: boolean hasMoreElements()>();

        if $z0 == 0 goto label3;

        $r8 = interfaceinvoke r3.<java.util.Enumeration: java.lang.Object nextElement()>();

        r4 = (java.lang.String) $r8;

        r5 = virtualinvoke r1.<java.util.Properties: java.lang.String getProperty(java.lang.String)>(r4);

        interfaceinvoke $r6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r4, r5);

        goto label2;

     label3:
        $r7 = staticinvoke <org.apache.commons.lang.text.StrSubstitutor: java.lang.String replace(java.lang.Object,java.util.Map)>(r0, $r6);

        return $r7;
    }

    public static java.lang.String replaceSystemProperties(java.lang.Object)
    {
        java.lang.Object r0;
        org.apache.commons.lang.text.StrSubstitutor $r1;
        org.apache.commons.lang.text.StrLookup $r2;
        java.lang.String $r3;

        r0 := @parameter0: java.lang.Object;

        $r1 = new org.apache.commons.lang.text.StrSubstitutor;

        $r2 = staticinvoke <org.apache.commons.lang.text.StrLookup: org.apache.commons.lang.text.StrLookup systemPropertiesLookup()>();

        specialinvoke $r1.<org.apache.commons.lang.text.StrSubstitutor: void <init>(org.apache.commons.lang.text.StrLookup)>($r2);

        $r3 = virtualinvoke $r1.<org.apache.commons.lang.text.StrSubstitutor: java.lang.String replace(java.lang.Object)>(r0);

        return $r3;
    }

    public void <init>()
    {
        org.apache.commons.lang.text.StrSubstitutor r0;
        org.apache.commons.lang.text.StrMatcher $r1, $r2;
        org.apache.commons.lang.text.StrLookup $r3;

        r0 := @this: org.apache.commons.lang.text.StrSubstitutor;

        $r3 = (org.apache.commons.lang.text.StrLookup) null;

        $r2 = <org.apache.commons.lang.text.StrSubstitutor: org.apache.commons.lang.text.StrMatcher DEFAULT_PREFIX>;

        $r1 = <org.apache.commons.lang.text.StrSubstitutor: org.apache.commons.lang.text.StrMatcher DEFAULT_SUFFIX>;

        specialinvoke r0.<org.apache.commons.lang.text.StrSubstitutor: void <init>(org.apache.commons.lang.text.StrLookup,org.apache.commons.lang.text.StrMatcher,org.apache.commons.lang.text.StrMatcher,char)>($r3, $r2, $r1, 36);

        return;
    }

    public void <init>(java.util.Map)
    {
        org.apache.commons.lang.text.StrSubstitutor r0;
        java.util.Map r1;
        org.apache.commons.lang.text.StrLookup $r2;
        org.apache.commons.lang.text.StrMatcher $r3, $r4;

        r0 := @this: org.apache.commons.lang.text.StrSubstitutor;

        r1 := @parameter0: java.util.Map;

        $r2 = staticinvoke <org.apache.commons.lang.text.StrLookup: org.apache.commons.lang.text.StrLookup mapLookup(java.util.Map)>(r1);

        $r4 = <org.apache.commons.lang.text.StrSubstitutor: org.apache.commons.lang.text.StrMatcher DEFAULT_PREFIX>;

        $r3 = <org.apache.commons.lang.text.StrSubstitutor: org.apache.commons.lang.text.StrMatcher DEFAULT_SUFFIX>;

        specialinvoke r0.<org.apache.commons.lang.text.StrSubstitutor: void <init>(org.apache.commons.lang.text.StrLookup,org.apache.commons.lang.text.StrMatcher,org.apache.commons.lang.text.StrMatcher,char)>($r2, $r4, $r3, 36);

        return;
    }

    public void <init>(java.util.Map, java.lang.String, java.lang.String)
    {
        org.apache.commons.lang.text.StrSubstitutor r0;
        java.util.Map r1;
        java.lang.String r2, r3;
        org.apache.commons.lang.text.StrLookup $r4;

        r0 := @this: org.apache.commons.lang.text.StrSubstitutor;

        r1 := @parameter0: java.util.Map;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        $r4 = staticinvoke <org.apache.commons.lang.text.StrLookup: org.apache.commons.lang.text.StrLookup mapLookup(java.util.Map)>(r1);

        specialinvoke r0.<org.apache.commons.lang.text.StrSubstitutor: void <init>(org.apache.commons.lang.text.StrLookup,java.lang.String,java.lang.String,char)>($r4, r2, r3, 36);

        return;
    }

    public void <init>(java.util.Map, java.lang.String, java.lang.String, char)
    {
        org.apache.commons.lang.text.StrSubstitutor r0;
        java.util.Map r1;
        java.lang.String r2, r3;
        char c0;
        org.apache.commons.lang.text.StrLookup $r4;

        r0 := @this: org.apache.commons.lang.text.StrSubstitutor;

        r1 := @parameter0: java.util.Map;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        c0 := @parameter3: char;

        $r4 = staticinvoke <org.apache.commons.lang.text.StrLookup: org.apache.commons.lang.text.StrLookup mapLookup(java.util.Map)>(r1);

        specialinvoke r0.<org.apache.commons.lang.text.StrSubstitutor: void <init>(org.apache.commons.lang.text.StrLookup,java.lang.String,java.lang.String,char)>($r4, r2, r3, c0);

        return;
    }

    public void <init>(org.apache.commons.lang.text.StrLookup)
    {
        org.apache.commons.lang.text.StrSubstitutor r0;
        org.apache.commons.lang.text.StrLookup r1;
        org.apache.commons.lang.text.StrMatcher $r2, $r3;

        r0 := @this: org.apache.commons.lang.text.StrSubstitutor;

        r1 := @parameter0: org.apache.commons.lang.text.StrLookup;

        $r3 = <org.apache.commons.lang.text.StrSubstitutor: org.apache.commons.lang.text.StrMatcher DEFAULT_PREFIX>;

        $r2 = <org.apache.commons.lang.text.StrSubstitutor: org.apache.commons.lang.text.StrMatcher DEFAULT_SUFFIX>;

        specialinvoke r0.<org.apache.commons.lang.text.StrSubstitutor: void <init>(org.apache.commons.lang.text.StrLookup,org.apache.commons.lang.text.StrMatcher,org.apache.commons.lang.text.StrMatcher,char)>(r1, $r3, $r2, 36);

        return;
    }

    public void <init>(org.apache.commons.lang.text.StrLookup, java.lang.String, java.lang.String, char)
    {
        org.apache.commons.lang.text.StrSubstitutor r0;
        org.apache.commons.lang.text.StrLookup r1;
        java.lang.String r2, r3;
        char c0;

        r0 := @this: org.apache.commons.lang.text.StrSubstitutor;

        r1 := @parameter0: org.apache.commons.lang.text.StrLookup;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        c0 := @parameter3: char;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        virtualinvoke r0.<org.apache.commons.lang.text.StrSubstitutor: void setVariableResolver(org.apache.commons.lang.text.StrLookup)>(r1);

        virtualinvoke r0.<org.apache.commons.lang.text.StrSubstitutor: org.apache.commons.lang.text.StrSubstitutor setVariablePrefix(java.lang.String)>(r2);

        virtualinvoke r0.<org.apache.commons.lang.text.StrSubstitutor: org.apache.commons.lang.text.StrSubstitutor setVariableSuffix(java.lang.String)>(r3);

        virtualinvoke r0.<org.apache.commons.lang.text.StrSubstitutor: void setEscapeChar(char)>(c0);

        return;
    }

    public void <init>(org.apache.commons.lang.text.StrLookup, org.apache.commons.lang.text.StrMatcher, org.apache.commons.lang.text.StrMatcher, char)
    {
        org.apache.commons.lang.text.StrSubstitutor r0;
        org.apache.commons.lang.text.StrLookup r1;
        org.apache.commons.lang.text.StrMatcher r2, r3;
        char c0;

        r0 := @this: org.apache.commons.lang.text.StrSubstitutor;

        r1 := @parameter0: org.apache.commons.lang.text.StrLookup;

        r2 := @parameter1: org.apache.commons.lang.text.StrMatcher;

        r3 := @parameter2: org.apache.commons.lang.text.StrMatcher;

        c0 := @parameter3: char;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        virtualinvoke r0.<org.apache.commons.lang.text.StrSubstitutor: void setVariableResolver(org.apache.commons.lang.text.StrLookup)>(r1);

        virtualinvoke r0.<org.apache.commons.lang.text.StrSubstitutor: org.apache.commons.lang.text.StrSubstitutor setVariablePrefixMatcher(org.apache.commons.lang.text.StrMatcher)>(r2);

        virtualinvoke r0.<org.apache.commons.lang.text.StrSubstitutor: org.apache.commons.lang.text.StrSubstitutor setVariableSuffixMatcher(org.apache.commons.lang.text.StrMatcher)>(r3);

        virtualinvoke r0.<org.apache.commons.lang.text.StrSubstitutor: void setEscapeChar(char)>(c0);

        return;
    }

    public java.lang.String replace(java.lang.String)
    {
        org.apache.commons.lang.text.StrSubstitutor r0;
        java.lang.String r1, $r4;
        org.apache.commons.lang.text.StrBuilder $r3;
        int $i0;
        boolean $z0;

        r0 := @this: org.apache.commons.lang.text.StrSubstitutor;

        r1 := @parameter0: java.lang.String;

        if r1 != null goto label1;

        return null;

     label1:
        $r3 = new org.apache.commons.lang.text.StrBuilder;

        specialinvoke $r3.<org.apache.commons.lang.text.StrBuilder: void <init>(java.lang.String)>(r1);

        $i0 = virtualinvoke r1.<java.lang.String: int length()>();

        $z0 = virtualinvoke r0.<org.apache.commons.lang.text.StrSubstitutor: boolean substitute(org.apache.commons.lang.text.StrBuilder,int,int)>($r3, 0, $i0);

        if $z0 != 0 goto label2;

        return r1;

     label2:
        $r4 = virtualinvoke $r3.<org.apache.commons.lang.text.StrBuilder: java.lang.String toString()>();

        return $r4;
    }

    public java.lang.String replace(java.lang.String, int, int)
    {
        org.apache.commons.lang.text.StrSubstitutor r0;
        java.lang.String r1, $r4, $r5;
        int i0, i1, $i2;
        org.apache.commons.lang.text.StrBuilder r2, $r3;
        boolean $z0;

        r0 := @this: org.apache.commons.lang.text.StrSubstitutor;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        if r1 != null goto label1;

        return null;

     label1:
        $r3 = new org.apache.commons.lang.text.StrBuilder;

        specialinvoke $r3.<org.apache.commons.lang.text.StrBuilder: void <init>(int)>(i1);

        r2 = virtualinvoke $r3.<org.apache.commons.lang.text.StrBuilder: org.apache.commons.lang.text.StrBuilder append(java.lang.String,int,int)>(r1, i0, i1);

        $z0 = virtualinvoke r0.<org.apache.commons.lang.text.StrSubstitutor: boolean substitute(org.apache.commons.lang.text.StrBuilder,int,int)>(r2, 0, i1);

        if $z0 != 0 goto label2;

        $i2 = i0 + i1;

        $r5 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int,int)>(i0, $i2);

        return $r5;

     label2:
        $r4 = virtualinvoke r2.<org.apache.commons.lang.text.StrBuilder: java.lang.String toString()>();

        return $r4;
    }

    public java.lang.String replace(char[])
    {
        org.apache.commons.lang.text.StrSubstitutor r0;
        char[] r1;
        org.apache.commons.lang.text.StrBuilder r2, $r3;
        int $i0, $i1;
        java.lang.String $r4;

        r0 := @this: org.apache.commons.lang.text.StrSubstitutor;

        r1 := @parameter0: char[];

        if r1 != null goto label1;

        return null;

     label1:
        $r3 = new org.apache.commons.lang.text.StrBuilder;

        $i0 = lengthof r1;

        specialinvoke $r3.<org.apache.commons.lang.text.StrBuilder: void <init>(int)>($i0);

        r2 = virtualinvoke $r3.<org.apache.commons.lang.text.StrBuilder: org.apache.commons.lang.text.StrBuilder append(char[])>(r1);

        $i1 = lengthof r1;

        virtualinvoke r0.<org.apache.commons.lang.text.StrSubstitutor: boolean substitute(org.apache.commons.lang.text.StrBuilder,int,int)>(r2, 0, $i1);

        $r4 = virtualinvoke r2.<org.apache.commons.lang.text.StrBuilder: java.lang.String toString()>();

        return $r4;
    }

    public java.lang.String replace(char[], int, int)
    {
        org.apache.commons.lang.text.StrSubstitutor r0;
        char[] r1;
        int i0, i1;
        org.apache.commons.lang.text.StrBuilder r2, $r3;
        java.lang.String $r4;

        r0 := @this: org.apache.commons.lang.text.StrSubstitutor;

        r1 := @parameter0: char[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        if r1 != null goto label1;

        return null;

     label1:
        $r3 = new org.apache.commons.lang.text.StrBuilder;

        specialinvoke $r3.<org.apache.commons.lang.text.StrBuilder: void <init>(int)>(i1);

        r2 = virtualinvoke $r3.<org.apache.commons.lang.text.StrBuilder: org.apache.commons.lang.text.StrBuilder append(char[],int,int)>(r1, i0, i1);

        virtualinvoke r0.<org.apache.commons.lang.text.StrSubstitutor: boolean substitute(org.apache.commons.lang.text.StrBuilder,int,int)>(r2, 0, i1);

        $r4 = virtualinvoke r2.<org.apache.commons.lang.text.StrBuilder: java.lang.String toString()>();

        return $r4;
    }

    public java.lang.String replace(java.lang.StringBuffer)
    {
        org.apache.commons.lang.text.StrSubstitutor r0;
        java.lang.StringBuffer r1;
        org.apache.commons.lang.text.StrBuilder r2, $r3;
        int $i0, $i1;
        java.lang.String $r4;

        r0 := @this: org.apache.commons.lang.text.StrSubstitutor;

        r1 := @parameter0: java.lang.StringBuffer;

        if r1 != null goto label1;

        return null;

     label1:
        $r3 = new org.apache.commons.lang.text.StrBuilder;

        $i0 = virtualinvoke r1.<java.lang.StringBuffer: int length()>();

        specialinvoke $r3.<org.apache.commons.lang.text.StrBuilder: void <init>(int)>($i0);

        r2 = virtualinvoke $r3.<org.apache.commons.lang.text.StrBuilder: org.apache.commons.lang.text.StrBuilder append(java.lang.StringBuffer)>(r1);

        $i1 = virtualinvoke r2.<org.apache.commons.lang.text.StrBuilder: int length()>();

        virtualinvoke r0.<org.apache.commons.lang.text.StrSubstitutor: boolean substitute(org.apache.commons.lang.text.StrBuilder,int,int)>(r2, 0, $i1);

        $r4 = virtualinvoke r2.<org.apache.commons.lang.text.StrBuilder: java.lang.String toString()>();

        return $r4;
    }

    public java.lang.String replace(java.lang.StringBuffer, int, int)
    {
        org.apache.commons.lang.text.StrSubstitutor r0;
        java.lang.StringBuffer r1;
        int i0, i1;
        org.apache.commons.lang.text.StrBuilder r2, $r3;
        java.lang.String $r4;

        r0 := @this: org.apache.commons.lang.text.StrSubstitutor;

        r1 := @parameter0: java.lang.StringBuffer;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        if r1 != null goto label1;

        return null;

     label1:
        $r3 = new org.apache.commons.lang.text.StrBuilder;

        specialinvoke $r3.<org.apache.commons.lang.text.StrBuilder: void <init>(int)>(i1);

        r2 = virtualinvoke $r3.<org.apache.commons.lang.text.StrBuilder: org.apache.commons.lang.text.StrBuilder append(java.lang.StringBuffer,int,int)>(r1, i0, i1);

        virtualinvoke r0.<org.apache.commons.lang.text.StrSubstitutor: boolean substitute(org.apache.commons.lang.text.StrBuilder,int,int)>(r2, 0, i1);

        $r4 = virtualinvoke r2.<org.apache.commons.lang.text.StrBuilder: java.lang.String toString()>();

        return $r4;
    }

    public java.lang.String replace(org.apache.commons.lang.text.StrBuilder)
    {
        org.apache.commons.lang.text.StrSubstitutor r0;
        org.apache.commons.lang.text.StrBuilder r1, r2, $r3;
        int $i0, $i1;
        java.lang.String $r4;

        r0 := @this: org.apache.commons.lang.text.StrSubstitutor;

        r1 := @parameter0: org.apache.commons.lang.text.StrBuilder;

        if r1 != null goto label1;

        return null;

     label1:
        $r3 = new org.apache.commons.lang.text.StrBuilder;

        $i0 = virtualinvoke r1.<org.apache.commons.lang.text.StrBuilder: int length()>();

        specialinvoke $r3.<org.apache.commons.lang.text.StrBuilder: void <init>(int)>($i0);

        r2 = virtualinvoke $r3.<org.apache.commons.lang.text.StrBuilder: org.apache.commons.lang.text.StrBuilder append(org.apache.commons.lang.text.StrBuilder)>(r1);

        $i1 = virtualinvoke r2.<org.apache.commons.lang.text.StrBuilder: int length()>();

        virtualinvoke r0.<org.apache.commons.lang.text.StrSubstitutor: boolean substitute(org.apache.commons.lang.text.StrBuilder,int,int)>(r2, 0, $i1);

        $r4 = virtualinvoke r2.<org.apache.commons.lang.text.StrBuilder: java.lang.String toString()>();

        return $r4;
    }

    public java.lang.String replace(org.apache.commons.lang.text.StrBuilder, int, int)
    {
        org.apache.commons.lang.text.StrSubstitutor r0;
        org.apache.commons.lang.text.StrBuilder r1, r2, $r3;
        int i0, i1;
        java.lang.String $r4;

        r0 := @this: org.apache.commons.lang.text.StrSubstitutor;

        r1 := @parameter0: org.apache.commons.lang.text.StrBuilder;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        if r1 != null goto label1;

        return null;

     label1:
        $r3 = new org.apache.commons.lang.text.StrBuilder;

        specialinvoke $r3.<org.apache.commons.lang.text.StrBuilder: void <init>(int)>(i1);

        r2 = virtualinvoke $r3.<org.apache.commons.lang.text.StrBuilder: org.apache.commons.lang.text.StrBuilder append(org.apache.commons.lang.text.StrBuilder,int,int)>(r1, i0, i1);

        virtualinvoke r0.<org.apache.commons.lang.text.StrSubstitutor: boolean substitute(org.apache.commons.lang.text.StrBuilder,int,int)>(r2, 0, i1);

        $r4 = virtualinvoke r2.<org.apache.commons.lang.text.StrBuilder: java.lang.String toString()>();

        return $r4;
    }

    public java.lang.String replace(java.lang.Object)
    {
        org.apache.commons.lang.text.StrSubstitutor r0;
        java.lang.Object r1;
        org.apache.commons.lang.text.StrBuilder r2, $r3;
        int $i0;
        java.lang.String $r4;

        r0 := @this: org.apache.commons.lang.text.StrSubstitutor;

        r1 := @parameter0: java.lang.Object;

        if r1 != null goto label1;

        return null;

     label1:
        $r3 = new org.apache.commons.lang.text.StrBuilder;

        specialinvoke $r3.<org.apache.commons.lang.text.StrBuilder: void <init>()>();

        r2 = virtualinvoke $r3.<org.apache.commons.lang.text.StrBuilder: org.apache.commons.lang.text.StrBuilder append(java.lang.Object)>(r1);

        $i0 = virtualinvoke r2.<org.apache.commons.lang.text.StrBuilder: int length()>();

        virtualinvoke r0.<org.apache.commons.lang.text.StrSubstitutor: boolean substitute(org.apache.commons.lang.text.StrBuilder,int,int)>(r2, 0, $i0);

        $r4 = virtualinvoke r2.<org.apache.commons.lang.text.StrBuilder: java.lang.String toString()>();

        return $r4;
    }

    public boolean replaceIn(java.lang.StringBuffer)
    {
        org.apache.commons.lang.text.StrSubstitutor r0;
        java.lang.StringBuffer r1;
        int $i0;
        boolean $z0;

        r0 := @this: org.apache.commons.lang.text.StrSubstitutor;

        r1 := @parameter0: java.lang.StringBuffer;

        if r1 != null goto label1;

        return 0;

     label1:
        $i0 = virtualinvoke r1.<java.lang.StringBuffer: int length()>();

        $z0 = virtualinvoke r0.<org.apache.commons.lang.text.StrSubstitutor: boolean replaceIn(java.lang.StringBuffer,int,int)>(r1, 0, $i0);

        return $z0;
    }

    public boolean replaceIn(java.lang.StringBuffer, int, int)
    {
        org.apache.commons.lang.text.StrSubstitutor r0;
        java.lang.StringBuffer r1;
        int i0, i1, $i2;
        org.apache.commons.lang.text.StrBuilder r2, $r3;
        boolean $z0;
        java.lang.String $r4;

        r0 := @this: org.apache.commons.lang.text.StrSubstitutor;

        r1 := @parameter0: java.lang.StringBuffer;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        if r1 != null goto label1;

        return 0;

     label1:
        $r3 = new org.apache.commons.lang.text.StrBuilder;

        specialinvoke $r3.<org.apache.commons.lang.text.StrBuilder: void <init>(int)>(i1);

        r2 = virtualinvoke $r3.<org.apache.commons.lang.text.StrBuilder: org.apache.commons.lang.text.StrBuilder append(java.lang.StringBuffer,int,int)>(r1, i0, i1);

        $z0 = virtualinvoke r0.<org.apache.commons.lang.text.StrSubstitutor: boolean substitute(org.apache.commons.lang.text.StrBuilder,int,int)>(r2, 0, i1);

        if $z0 != 0 goto label2;

        return 0;

     label2:
        $i2 = i0 + i1;

        $r4 = virtualinvoke r2.<org.apache.commons.lang.text.StrBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer replace(int,int,java.lang.String)>(i0, $i2, $r4);

        return 1;
    }

    public boolean replaceIn(org.apache.commons.lang.text.StrBuilder)
    {
        org.apache.commons.lang.text.StrSubstitutor r0;
        org.apache.commons.lang.text.StrBuilder r1;
        int $i0;
        boolean $z0;

        r0 := @this: org.apache.commons.lang.text.StrSubstitutor;

        r1 := @parameter0: org.apache.commons.lang.text.StrBuilder;

        if r1 != null goto label1;

        return 0;

     label1:
        $i0 = virtualinvoke r1.<org.apache.commons.lang.text.StrBuilder: int length()>();

        $z0 = virtualinvoke r0.<org.apache.commons.lang.text.StrSubstitutor: boolean substitute(org.apache.commons.lang.text.StrBuilder,int,int)>(r1, 0, $i0);

        return $z0;
    }

    public boolean replaceIn(org.apache.commons.lang.text.StrBuilder, int, int)
    {
        org.apache.commons.lang.text.StrSubstitutor r0;
        org.apache.commons.lang.text.StrBuilder r1;
        int i0, i1;
        boolean $z0;

        r0 := @this: org.apache.commons.lang.text.StrSubstitutor;

        r1 := @parameter0: org.apache.commons.lang.text.StrBuilder;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        if r1 != null goto label1;

        return 0;

     label1:
        $z0 = virtualinvoke r0.<org.apache.commons.lang.text.StrSubstitutor: boolean substitute(org.apache.commons.lang.text.StrBuilder,int,int)>(r1, i0, i1);

        return $z0;
    }

    protected boolean substitute(org.apache.commons.lang.text.StrBuilder, int, int)
    {
        org.apache.commons.lang.text.StrSubstitutor r0;
        org.apache.commons.lang.text.StrBuilder r1;
        int i0, i1, $i2;
        boolean $z0;

        r0 := @this: org.apache.commons.lang.text.StrSubstitutor;

        r1 := @parameter0: org.apache.commons.lang.text.StrBuilder;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $i2 = specialinvoke r0.<org.apache.commons.lang.text.StrSubstitutor: int substitute(org.apache.commons.lang.text.StrBuilder,int,int,java.util.List)>(r1, i0, i1, null);

        if $i2 <= 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    private int substitute(org.apache.commons.lang.text.StrBuilder, int, int, java.util.List)
    {
        org.apache.commons.lang.text.StrSubstitutor r0;
        org.apache.commons.lang.text.StrBuilder r1, $r10;
        int i0, i1, i3, i4, i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i17, i18, i19, i20, i21, i23, i24, i25, i26;
        org.apache.commons.lang.text.StrMatcher r2, r3;
        char c2, $c16;
        boolean z0, $z1, $z2, $z6, z7;
        java.lang.String r4, $r5, $r9, r14;
        java.util.ArrayList $r8;
        java.util.List r12;
        char[] r13;
        byte $b27;

        r0 := @this: org.apache.commons.lang.text.StrSubstitutor;

        r1 := @parameter0: org.apache.commons.lang.text.StrBuilder;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r12 := @parameter3: java.util.List;

        r2 = virtualinvoke r0.<org.apache.commons.lang.text.StrSubstitutor: org.apache.commons.lang.text.StrMatcher getVariablePrefixMatcher()>();

        r3 = virtualinvoke r0.<org.apache.commons.lang.text.StrSubstitutor: org.apache.commons.lang.text.StrMatcher getVariableSuffixMatcher()>();

        c2 = virtualinvoke r0.<org.apache.commons.lang.text.StrSubstitutor: char getEscapeChar()>();

        if r12 != null goto label01;

        $z6 = 1;

        goto label02;

     label01:
        $z6 = 0;

     label02:
        z0 = $z6;

        z7 = 0;

        i18 = 0;

        r13 = r1.<org.apache.commons.lang.text.StrBuilder: char[] buffer>;

        i19 = i0 + i1;

        i20 = i0;

     label03:
        if i20 >= i19 goto label14;

        i3 = virtualinvoke r2.<org.apache.commons.lang.text.StrMatcher: int isMatch(char[],int,int,int)>(r13, i20, i0, i19);

        if i3 != 0 goto label04;

        i20 = i20 + 1;

        goto label13;

     label04:
        if i20 <= i0 goto label05;

        $i15 = i20 - 1;

        $c16 = r13[$i15];

        if $c16 != c2 goto label05;

        $i17 = i20 - 1;

        virtualinvoke r1.<org.apache.commons.lang.text.StrBuilder: org.apache.commons.lang.text.StrBuilder deleteCharAt(int)>($i17);

        r13 = r1.<org.apache.commons.lang.text.StrBuilder: char[] buffer>;

        i18 = i18 + -1;

        z7 = 1;

        i19 = i19 + -1;

        goto label13;

     label05:
        i4 = i20;

        i20 = i20 + i3;

        i21 = 0;

     label06:
        if i20 >= i19 goto label13;

        $z1 = virtualinvoke r0.<org.apache.commons.lang.text.StrSubstitutor: boolean isEnableSubstitutionInVariables()>();

        if $z1 == 0 goto label07;

        $i14 = virtualinvoke r2.<org.apache.commons.lang.text.StrMatcher: int isMatch(char[],int,int,int)>(r13, i20, i0, i19);

        if $i14 == 0 goto label07;

        i21 = i21 + 1;

        i20 = i20 + $i14;

        goto label06;

     label07:
        i23 = virtualinvoke r3.<org.apache.commons.lang.text.StrMatcher: int isMatch(char[],int,int,int)>(r13, i20, i0, i19);

        if i23 != 0 goto label08;

        i20 = i20 + 1;

        goto label06;

     label08:
        if i21 != 0 goto label12;

        $r5 = new java.lang.String;

        $i8 = i4 + i3;

        $i6 = i20 - i4;

        $i7 = $i6 - i3;

        specialinvoke $r5.<java.lang.String: void <init>(char[],int,int)>(r13, $i8, $i7);

        r14 = $r5;

        $z2 = virtualinvoke r0.<org.apache.commons.lang.text.StrSubstitutor: boolean isEnableSubstitutionInVariables()>();

        if $z2 == 0 goto label09;

        $r10 = new org.apache.commons.lang.text.StrBuilder;

        specialinvoke $r10.<org.apache.commons.lang.text.StrBuilder: void <init>(java.lang.String)>($r5);

        $i13 = virtualinvoke $r10.<org.apache.commons.lang.text.StrBuilder: int length()>();

        virtualinvoke r0.<org.apache.commons.lang.text.StrSubstitutor: boolean substitute(org.apache.commons.lang.text.StrBuilder,int,int)>($r10, 0, $i13);

        r14 = virtualinvoke $r10.<org.apache.commons.lang.text.StrBuilder: java.lang.String toString()>();

     label09:
        i20 = i20 + i23;

        i24 = i20;

        if r12 != null goto label10;

        $r8 = new java.util.ArrayList;

        specialinvoke $r8.<java.util.ArrayList: void <init>()>();

        r12 = $r8;

        $r9 = new java.lang.String;

        specialinvoke $r9.<java.lang.String: void <init>(char[],int,int)>(r13, i0, i1);

        interfaceinvoke $r8.<java.util.List: boolean add(java.lang.Object)>($r9);

     label10:
        specialinvoke r0.<org.apache.commons.lang.text.StrSubstitutor: void checkCyclicSubstitution(java.lang.String,java.util.List)>(r14, r12);

        interfaceinvoke r12.<java.util.List: boolean add(java.lang.Object)>(r14);

        r4 = virtualinvoke r0.<org.apache.commons.lang.text.StrSubstitutor: java.lang.String resolveVariable(java.lang.String,org.apache.commons.lang.text.StrBuilder,int,int)>(r14, r1, i4, i24);

        if r4 == null goto label11;

        i5 = virtualinvoke r4.<java.lang.String: int length()>();

        virtualinvoke r1.<org.apache.commons.lang.text.StrBuilder: org.apache.commons.lang.text.StrBuilder replace(int,int,java.lang.String)>(i4, i24, r4);

        z7 = 1;

        i25 = specialinvoke r0.<org.apache.commons.lang.text.StrSubstitutor: int substitute(org.apache.commons.lang.text.StrBuilder,int,int,java.util.List)>(r1, i4, i5, r12);

        $i11 = i24 - i4;

        $i12 = i5 - $i11;

        i26 = i25 + $i12;

        i20 = i20 + i26;

        i19 = i19 + i26;

        i18 = i18 + i26;

        r13 = r1.<org.apache.commons.lang.text.StrBuilder: char[] buffer>;

     label11:
        $i9 = interfaceinvoke r12.<java.util.List: int size()>();

        $i10 = $i9 - 1;

        interfaceinvoke r12.<java.util.List: java.lang.Object remove(int)>($i10);

        goto label13;

     label12:
        i21 = i21 + -1;

        i20 = i20 + i23;

        goto label06;

     label13:
        goto label03;

     label14:
        if z0 == 0 goto label17;

        if z7 == 0 goto label15;

        $b27 = 1;

        goto label16;

     label15:
        $b27 = 0;

     label16:
        return $b27;

     label17:
        return i18;
    }

    private void checkCyclicSubstitution(java.lang.String, java.util.List)
    {
        org.apache.commons.lang.text.StrSubstitutor r0;
        java.lang.String r1, $r11;
        java.util.List r2;
        boolean $z0;
        org.apache.commons.lang.text.StrBuilder $r4;
        java.lang.Object $r6;
        java.lang.IllegalStateException $r10;

        r0 := @this: org.apache.commons.lang.text.StrSubstitutor;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.util.List;

        $z0 = interfaceinvoke r2.<java.util.List: boolean contains(java.lang.Object)>(r1);

        if $z0 != 0 goto label1;

        return;

     label1:
        $r4 = new org.apache.commons.lang.text.StrBuilder;

        specialinvoke $r4.<org.apache.commons.lang.text.StrBuilder: void <init>(int)>(256);

        virtualinvoke $r4.<org.apache.commons.lang.text.StrBuilder: org.apache.commons.lang.text.StrBuilder append(java.lang.String)>("Infinite loop in property interpolation of ");

        $r6 = interfaceinvoke r2.<java.util.List: java.lang.Object remove(int)>(0);

        virtualinvoke $r4.<org.apache.commons.lang.text.StrBuilder: org.apache.commons.lang.text.StrBuilder append(java.lang.Object)>($r6);

        virtualinvoke $r4.<org.apache.commons.lang.text.StrBuilder: org.apache.commons.lang.text.StrBuilder append(java.lang.String)>(": ");

        virtualinvoke $r4.<org.apache.commons.lang.text.StrBuilder: org.apache.commons.lang.text.StrBuilder appendWithSeparators(java.util.Collection,java.lang.String)>(r2, "->");

        $r10 = new java.lang.IllegalStateException;

        $r11 = virtualinvoke $r4.<org.apache.commons.lang.text.StrBuilder: java.lang.String toString()>();

        specialinvoke $r10.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r11);

        throw $r10;
    }

    protected java.lang.String resolveVariable(java.lang.String, org.apache.commons.lang.text.StrBuilder, int, int)
    {
        org.apache.commons.lang.text.StrSubstitutor r0;
        java.lang.String r1, $r4;
        org.apache.commons.lang.text.StrBuilder r2;
        int i0, i1;
        org.apache.commons.lang.text.StrLookup r3;

        r0 := @this: org.apache.commons.lang.text.StrSubstitutor;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: org.apache.commons.lang.text.StrBuilder;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        r3 = virtualinvoke r0.<org.apache.commons.lang.text.StrSubstitutor: org.apache.commons.lang.text.StrLookup getVariableResolver()>();

        if r3 != null goto label1;

        return null;

     label1:
        $r4 = virtualinvoke r3.<org.apache.commons.lang.text.StrLookup: java.lang.String lookup(java.lang.String)>(r1);

        return $r4;
    }

    public char getEscapeChar()
    {
        org.apache.commons.lang.text.StrSubstitutor r0;
        char $c0;

        r0 := @this: org.apache.commons.lang.text.StrSubstitutor;

        $c0 = r0.<org.apache.commons.lang.text.StrSubstitutor: char escapeChar>;

        return $c0;
    }

    public void setEscapeChar(char)
    {
        org.apache.commons.lang.text.StrSubstitutor r0;
        char c0;

        r0 := @this: org.apache.commons.lang.text.StrSubstitutor;

        c0 := @parameter0: char;

        r0.<org.apache.commons.lang.text.StrSubstitutor: char escapeChar> = c0;

        return;
    }

    public org.apache.commons.lang.text.StrMatcher getVariablePrefixMatcher()
    {
        org.apache.commons.lang.text.StrSubstitutor r0;
        org.apache.commons.lang.text.StrMatcher $r1;

        r0 := @this: org.apache.commons.lang.text.StrSubstitutor;

        $r1 = r0.<org.apache.commons.lang.text.StrSubstitutor: org.apache.commons.lang.text.StrMatcher prefixMatcher>;

        return $r1;
    }

    public org.apache.commons.lang.text.StrSubstitutor setVariablePrefixMatcher(org.apache.commons.lang.text.StrMatcher)
    {
        org.apache.commons.lang.text.StrSubstitutor r0;
        org.apache.commons.lang.text.StrMatcher r1;
        java.lang.IllegalArgumentException $r2;

        r0 := @this: org.apache.commons.lang.text.StrSubstitutor;

        r1 := @parameter0: org.apache.commons.lang.text.StrMatcher;

        if r1 != null goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Variable prefix matcher must not be null!");

        throw $r2;

     label1:
        r0.<org.apache.commons.lang.text.StrSubstitutor: org.apache.commons.lang.text.StrMatcher prefixMatcher> = r1;

        return r0;
    }

    public org.apache.commons.lang.text.StrSubstitutor setVariablePrefix(char)
    {
        org.apache.commons.lang.text.StrSubstitutor r0, $r2;
        char c0;
        org.apache.commons.lang.text.StrMatcher $r1;

        r0 := @this: org.apache.commons.lang.text.StrSubstitutor;

        c0 := @parameter0: char;

        $r1 = staticinvoke <org.apache.commons.lang.text.StrMatcher: org.apache.commons.lang.text.StrMatcher charMatcher(char)>(c0);

        $r2 = virtualinvoke r0.<org.apache.commons.lang.text.StrSubstitutor: org.apache.commons.lang.text.StrSubstitutor setVariablePrefixMatcher(org.apache.commons.lang.text.StrMatcher)>($r1);

        return $r2;
    }

    public org.apache.commons.lang.text.StrSubstitutor setVariablePrefix(java.lang.String)
    {
        org.apache.commons.lang.text.StrSubstitutor r0, $r3;
        java.lang.String r1;
        org.apache.commons.lang.text.StrMatcher $r2;
        java.lang.IllegalArgumentException $r4;

        r0 := @this: org.apache.commons.lang.text.StrSubstitutor;

        r1 := @parameter0: java.lang.String;

        if r1 != null goto label1;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Variable prefix must not be null!");

        throw $r4;

     label1:
        $r2 = staticinvoke <org.apache.commons.lang.text.StrMatcher: org.apache.commons.lang.text.StrMatcher stringMatcher(java.lang.String)>(r1);

        $r3 = virtualinvoke r0.<org.apache.commons.lang.text.StrSubstitutor: org.apache.commons.lang.text.StrSubstitutor setVariablePrefixMatcher(org.apache.commons.lang.text.StrMatcher)>($r2);

        return $r3;
    }

    public org.apache.commons.lang.text.StrMatcher getVariableSuffixMatcher()
    {
        org.apache.commons.lang.text.StrSubstitutor r0;
        org.apache.commons.lang.text.StrMatcher $r1;

        r0 := @this: org.apache.commons.lang.text.StrSubstitutor;

        $r1 = r0.<org.apache.commons.lang.text.StrSubstitutor: org.apache.commons.lang.text.StrMatcher suffixMatcher>;

        return $r1;
    }

    public org.apache.commons.lang.text.StrSubstitutor setVariableSuffixMatcher(org.apache.commons.lang.text.StrMatcher)
    {
        org.apache.commons.lang.text.StrSubstitutor r0;
        org.apache.commons.lang.text.StrMatcher r1;
        java.lang.IllegalArgumentException $r2;

        r0 := @this: org.apache.commons.lang.text.StrSubstitutor;

        r1 := @parameter0: org.apache.commons.lang.text.StrMatcher;

        if r1 != null goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Variable suffix matcher must not be null!");

        throw $r2;

     label1:
        r0.<org.apache.commons.lang.text.StrSubstitutor: org.apache.commons.lang.text.StrMatcher suffixMatcher> = r1;

        return r0;
    }

    public org.apache.commons.lang.text.StrSubstitutor setVariableSuffix(char)
    {
        org.apache.commons.lang.text.StrSubstitutor r0, $r2;
        char c0;
        org.apache.commons.lang.text.StrMatcher $r1;

        r0 := @this: org.apache.commons.lang.text.StrSubstitutor;

        c0 := @parameter0: char;

        $r1 = staticinvoke <org.apache.commons.lang.text.StrMatcher: org.apache.commons.lang.text.StrMatcher charMatcher(char)>(c0);

        $r2 = virtualinvoke r0.<org.apache.commons.lang.text.StrSubstitutor: org.apache.commons.lang.text.StrSubstitutor setVariableSuffixMatcher(org.apache.commons.lang.text.StrMatcher)>($r1);

        return $r2;
    }

    public org.apache.commons.lang.text.StrSubstitutor setVariableSuffix(java.lang.String)
    {
        org.apache.commons.lang.text.StrSubstitutor r0, $r3;
        java.lang.String r1;
        org.apache.commons.lang.text.StrMatcher $r2;
        java.lang.IllegalArgumentException $r4;

        r0 := @this: org.apache.commons.lang.text.StrSubstitutor;

        r1 := @parameter0: java.lang.String;

        if r1 != null goto label1;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Variable suffix must not be null!");

        throw $r4;

     label1:
        $r2 = staticinvoke <org.apache.commons.lang.text.StrMatcher: org.apache.commons.lang.text.StrMatcher stringMatcher(java.lang.String)>(r1);

        $r3 = virtualinvoke r0.<org.apache.commons.lang.text.StrSubstitutor: org.apache.commons.lang.text.StrSubstitutor setVariableSuffixMatcher(org.apache.commons.lang.text.StrMatcher)>($r2);

        return $r3;
    }

    public org.apache.commons.lang.text.StrLookup getVariableResolver()
    {
        org.apache.commons.lang.text.StrSubstitutor r0;
        org.apache.commons.lang.text.StrLookup $r1;

        r0 := @this: org.apache.commons.lang.text.StrSubstitutor;

        $r1 = r0.<org.apache.commons.lang.text.StrSubstitutor: org.apache.commons.lang.text.StrLookup variableResolver>;

        return $r1;
    }

    public void setVariableResolver(org.apache.commons.lang.text.StrLookup)
    {
        org.apache.commons.lang.text.StrSubstitutor r0;
        org.apache.commons.lang.text.StrLookup r1;

        r0 := @this: org.apache.commons.lang.text.StrSubstitutor;

        r1 := @parameter0: org.apache.commons.lang.text.StrLookup;

        r0.<org.apache.commons.lang.text.StrSubstitutor: org.apache.commons.lang.text.StrLookup variableResolver> = r1;

        return;
    }

    public boolean isEnableSubstitutionInVariables()
    {
        org.apache.commons.lang.text.StrSubstitutor r0;
        boolean $z0;

        r0 := @this: org.apache.commons.lang.text.StrSubstitutor;

        $z0 = r0.<org.apache.commons.lang.text.StrSubstitutor: boolean enableSubstitutionInVariables>;

        return $z0;
    }

    public void setEnableSubstitutionInVariables(boolean)
    {
        org.apache.commons.lang.text.StrSubstitutor r0;
        boolean z0;

        r0 := @this: org.apache.commons.lang.text.StrSubstitutor;

        z0 := @parameter0: boolean;

        r0.<org.apache.commons.lang.text.StrSubstitutor: boolean enableSubstitutionInVariables> = z0;

        return;
    }

    static void <clinit>()
    {
        org.apache.commons.lang.text.StrMatcher $r0, $r1;

        <org.apache.commons.lang.text.StrSubstitutor: char DEFAULT_ESCAPE> = 36;

        $r0 = staticinvoke <org.apache.commons.lang.text.StrMatcher: org.apache.commons.lang.text.StrMatcher stringMatcher(java.lang.String)>("${");

        <org.apache.commons.lang.text.StrSubstitutor: org.apache.commons.lang.text.StrMatcher DEFAULT_PREFIX> = $r0;

        $r1 = staticinvoke <org.apache.commons.lang.text.StrMatcher: org.apache.commons.lang.text.StrMatcher stringMatcher(java.lang.String)>("}");

        <org.apache.commons.lang.text.StrSubstitutor: org.apache.commons.lang.text.StrMatcher DEFAULT_SUFFIX> = $r1;

        return;
    }
}
