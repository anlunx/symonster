public final class org.apache.commons.lang.NumberUtils extends java.lang.Object
{

    public void <init>()
    {
        org.apache.commons.lang.NumberUtils r0;

        r0 := @this: org.apache.commons.lang.NumberUtils;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static int stringToInt(java.lang.String)
    {
        java.lang.String r0;
        int $i0;

        r0 := @parameter0: java.lang.String;

        $i0 = staticinvoke <org.apache.commons.lang.NumberUtils: int stringToInt(java.lang.String,int)>(r0, 0);

        return $i0;
    }

    public static int stringToInt(java.lang.String, int)
    {
        java.lang.String r0;
        int i0, $i1;
        java.lang.NumberFormatException $r2;

        r0 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

     label1:
        $i1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r0);

     label2:
        return $i1;

     label3:
        $r2 := @caughtexception;

        return i0;

        catch java.lang.NumberFormatException from label1 to label2 with label3;
    }

    public static java.lang.Number createNumber(java.lang.String) throws java.lang.NumberFormatException
    {
        java.lang.String r0, $r7, $r15, $r20, $r25, r38, r39, r40, r41, $r47, r53;
        char c0, $c16, $c26;
        int i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i12, $i13, $i14, $i15, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i27, $i28;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, z14, $z15, $z16, z17, $z18;
        java.lang.Integer $r1, $r5;
        java.math.BigDecimal $r2, $r8;
        double $d0, $d1;
        byte $b10, $b11, $b17, $b18;
        float $f0, $f1, $f2;
        java.lang.Long $r6, $r37;
        java.lang.NumberFormatException $r11, $r16, $r21, $r26, $r27, $r28, $r29, $r31, $r32, $r33, $r35, $r36, $r43;
        java.lang.StringBuffer $r12, $r13, $r14, $r17, $r18, $r19, $r22, $r23, $r24, $r44, $r45, $r46;
        java.math.BigInteger $r30, $r34;
        java.lang.Float r48, r56;
        java.lang.Double r50, r58;

        r0 := @parameter0: java.lang.String;

        if r0 != null goto label01;

        return null;

     label01:
        $i3 = virtualinvoke r0.<java.lang.String: int length()>();

        if $i3 != 0 goto label02;

        $r26 = new java.lang.NumberFormatException;

        specialinvoke $r26.<java.lang.NumberFormatException: void <init>(java.lang.String)>("\"\" is not a valid number.");

        throw $r26;

     label02:
        $i4 = virtualinvoke r0.<java.lang.String: int length()>();

        if $i4 != 1 goto label03;

        $c26 = virtualinvoke r0.<java.lang.String: char charAt(int)>(0);

        $z10 = staticinvoke <java.lang.Character: boolean isDigit(char)>($c26);

        if $z10 != 0 goto label03;

        $r21 = new java.lang.NumberFormatException;

        $r22 = new java.lang.StringBuffer;

        specialinvoke $r22.<java.lang.StringBuffer: void <init>()>();

        $r23 = virtualinvoke $r22.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r0);

        $r24 = virtualinvoke $r23.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" is not a valid number.");

        $r25 = virtualinvoke $r24.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r21.<java.lang.NumberFormatException: void <init>(java.lang.String)>($r25);

        throw $r21;

     label03:
        $z0 = virtualinvoke r0.<java.lang.String: boolean startsWith(java.lang.String)>("--");

        if $z0 == 0 goto label04;

        return null;

     label04:
        $z1 = virtualinvoke r0.<java.lang.String: boolean startsWith(java.lang.String)>("0x");

        if $z1 != 0 goto label05;

        $z2 = virtualinvoke r0.<java.lang.String: boolean startsWith(java.lang.String)>("-0x");

        if $z2 == 0 goto label06;

     label05:
        $r1 = staticinvoke <org.apache.commons.lang.NumberUtils: java.lang.Integer createInteger(java.lang.String)>(r0);

        return $r1;

     label06:
        $i5 = virtualinvoke r0.<java.lang.String: int length()>();

        $i6 = $i5 - 1;

        c0 = virtualinvoke r0.<java.lang.String: char charAt(int)>($i6);

        i1 = virtualinvoke r0.<java.lang.String: int indexOf(int)>(46);

        $i7 = virtualinvoke r0.<java.lang.String: int indexOf(int)>(101);

        $i8 = virtualinvoke r0.<java.lang.String: int indexOf(int)>(69);

        $i9 = $i7 + $i8;

        i2 = $i9 + 1;

        if i1 <= -1 goto label10;

        if i2 <= -1 goto label08;

        if i2 >= i1 goto label07;

        $r16 = new java.lang.NumberFormatException;

        $r17 = new java.lang.StringBuffer;

        specialinvoke $r17.<java.lang.StringBuffer: void <init>()>();

        $r18 = virtualinvoke $r17.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r0);

        $r19 = virtualinvoke $r18.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" is not a valid number.");

        $r20 = virtualinvoke $r19.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r16.<java.lang.NumberFormatException: void <init>(java.lang.String)>($r20);

        throw $r16;

     label07:
        $i25 = i1 + 1;

        r38 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>($i25, i2);

        goto label09;

     label08:
        $i24 = i1 + 1;

        r38 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int)>($i24);

     label09:
        r39 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(0, i1);

        goto label13;

     label10:
        if i2 <= -1 goto label11;

        r39 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(0, i2);

        goto label12;

     label11:
        r39 = r0;

     label12:
        r38 = null;

     label13:
        $z11 = staticinvoke <java.lang.Character: boolean isDigit(char)>(c0);

        if $z11 != 0 goto label36;

        if i2 <= -1 goto label14;

        $i19 = virtualinvoke r0.<java.lang.String: int length()>();

        $i20 = $i19 - 1;

        if i2 >= $i20 goto label14;

        $i21 = i2 + 1;

        $i22 = virtualinvoke r0.<java.lang.String: int length()>();

        $i23 = $i22 - 1;

        r40 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>($i21, $i23);

        goto label15;

     label14:
        r40 = null;

     label15:
        $i27 = virtualinvoke r0.<java.lang.String: int length()>();

        $i28 = $i27 - 1;

        r41 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(0, $i28);

        $z12 = staticinvoke <org.apache.commons.lang.NumberUtils: boolean isAllZeros(java.lang.String)>(r39);

        if $z12 == 0 goto label16;

        $z9 = staticinvoke <org.apache.commons.lang.NumberUtils: boolean isAllZeros(java.lang.String)>(r40);

        if $z9 == 0 goto label16;

        $z13 = 1;

        goto label17;

     label16:
        $z13 = 0;

     label17:
        z14 = $z13;

        lookupswitch(c0)
        {
            case 68: goto label28;
            case 70: goto label24;
            case 76: goto label18;
            case 100: goto label28;
            case 102: goto label24;
            case 108: goto label18;
            default: goto label35;
        };

     label18:
        if r38 != null goto label23;

        if r40 != null goto label23;

        $c16 = virtualinvoke r41.<java.lang.String: char charAt(int)>(0);

        if $c16 != 45 goto label19;

        $r7 = virtualinvoke r41.<java.lang.String: java.lang.String substring(int)>(1);

        $z7 = staticinvoke <org.apache.commons.lang.NumberUtils: boolean isDigits(java.lang.String)>($r7);

        if $z7 != 0 goto label20;

     label19:
        $z6 = staticinvoke <org.apache.commons.lang.NumberUtils: boolean isDigits(java.lang.String)>(r41);

        if $z6 == 0 goto label23;

     label20:
        $r6 = staticinvoke <org.apache.commons.lang.NumberUtils: java.lang.Long createLong(java.lang.String)>(r41);

     label21:
        return $r6;

     label22:
        $r33 := @caughtexception;

        $r34 = staticinvoke <org.apache.commons.lang.NumberUtils: java.math.BigInteger createBigInteger(java.lang.String)>(r41);

        return $r34;

     label23:
        $r43 = new java.lang.NumberFormatException;

        $r44 = new java.lang.StringBuffer;

        specialinvoke $r44.<java.lang.StringBuffer: void <init>()>();

        $r45 = virtualinvoke $r44.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r0);

        $r46 = virtualinvoke $r45.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" is not a valid number.");

        $r47 = virtualinvoke $r46.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r43.<java.lang.NumberFormatException: void <init>(java.lang.String)>($r47);

        throw $r43;

     label24:
        r48 = staticinvoke <org.apache.commons.lang.NumberUtils: java.lang.Float createFloat(java.lang.String)>(r41);

        $z8 = virtualinvoke r48.<java.lang.Float: boolean isInfinite()>();

        if $z8 != 0 goto label26;

        $f2 = virtualinvoke r48.<java.lang.Float: float floatValue()>();

        $b18 = $f2 cmpl 0.0F;

        if $b18 != 0 goto label25;

        if $z13 == 0 goto label26;

     label25:
        return r48;

     label26:
        goto label28;

     label27:
        $r27 := @caughtexception;

     label28:
        r50 = staticinvoke <org.apache.commons.lang.NumberUtils: java.lang.Double createDouble(java.lang.String)>(r41);

        $z15 = virtualinvoke r50.<java.lang.Double: boolean isInfinite()>();

        if $z15 != 0 goto label30;

        $f1 = virtualinvoke r50.<java.lang.Double: float floatValue()>();

        $d1 = (double) $f1;

        $b17 = $d1 cmpl 0.0;

        if $b17 != 0 goto label29;

        if z14 == 0 goto label30;

     label29:
        return r50;

     label30:
        goto label32;

     label31:
        $r31 := @caughtexception;

     label32:
        $r8 = staticinvoke <org.apache.commons.lang.NumberUtils: java.math.BigDecimal createBigDecimal(java.lang.String)>(r41);

     label33:
        return $r8;

     label34:
        $r32 := @caughtexception;

     label35:
        $r11 = new java.lang.NumberFormatException;

        $r12 = new java.lang.StringBuffer;

        specialinvoke $r12.<java.lang.StringBuffer: void <init>()>();

        $r13 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r0);

        $r14 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" is not a valid number.");

        $r15 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r11.<java.lang.NumberFormatException: void <init>(java.lang.String)>($r15);

        throw $r11;

     label36:
        if i2 <= -1 goto label37;

        $i12 = virtualinvoke r0.<java.lang.String: int length()>();

        $i13 = $i12 - 1;

        if i2 >= $i13 goto label37;

        $i14 = i2 + 1;

        $i15 = virtualinvoke r0.<java.lang.String: int length()>();

        r53 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>($i14, $i15);

        goto label38;

     label37:
        r53 = null;

     label38:
        if r38 != null goto label45;

        if r53 != null goto label45;

     label39:
        $r5 = staticinvoke <org.apache.commons.lang.NumberUtils: java.lang.Integer createInteger(java.lang.String)>(r0);

     label40:
        return $r5;

     label41:
        $r36 := @caughtexception;

     label42:
        $r37 = staticinvoke <org.apache.commons.lang.NumberUtils: java.lang.Long createLong(java.lang.String)>(r0);

     label43:
        return $r37;

     label44:
        $r29 := @caughtexception;

        $r30 = staticinvoke <org.apache.commons.lang.NumberUtils: java.math.BigInteger createBigInteger(java.lang.String)>(r0);

        return $r30;

     label45:
        $z3 = staticinvoke <org.apache.commons.lang.NumberUtils: boolean isAllZeros(java.lang.String)>(r39);

        if $z3 == 0 goto label46;

        $z5 = staticinvoke <org.apache.commons.lang.NumberUtils: boolean isAllZeros(java.lang.String)>(r53);

        if $z5 == 0 goto label46;

        $z16 = 1;

        goto label47;

     label46:
        $z16 = 0;

     label47:
        z17 = $z16;

     label48:
        r56 = staticinvoke <org.apache.commons.lang.NumberUtils: java.lang.Float createFloat(java.lang.String)>(r0);

        $z18 = virtualinvoke r56.<java.lang.Float: boolean isInfinite()>();

        if $z18 != 0 goto label50;

        $f0 = virtualinvoke r56.<java.lang.Float: float floatValue()>();

        $b11 = $f0 cmpl 0.0F;

        if $b11 != 0 goto label49;

        if $z16 == 0 goto label50;

     label49:
        return r56;

     label50:
        goto label52;

     label51:
        $r28 := @caughtexception;

     label52:
        r58 = staticinvoke <org.apache.commons.lang.NumberUtils: java.lang.Double createDouble(java.lang.String)>(r0);

        $z4 = virtualinvoke r58.<java.lang.Double: boolean isInfinite()>();

        if $z4 != 0 goto label54;

        $d0 = virtualinvoke r58.<java.lang.Double: double doubleValue()>();

        $b10 = $d0 cmpl 0.0;

        if $b10 != 0 goto label53;

        if z17 == 0 goto label54;

     label53:
        return r58;

     label54:
        goto label56;

     label55:
        $r35 := @caughtexception;

     label56:
        $r2 = staticinvoke <org.apache.commons.lang.NumberUtils: java.math.BigDecimal createBigDecimal(java.lang.String)>(r0);

        return $r2;

        catch java.lang.NumberFormatException from label20 to label21 with label22;
        catch java.lang.NumberFormatException from label24 to label25 with label27;
        catch java.lang.NumberFormatException from label28 to label29 with label31;
        catch java.lang.NumberFormatException from label32 to label33 with label34;
        catch java.lang.NumberFormatException from label39 to label40 with label41;
        catch java.lang.NumberFormatException from label42 to label43 with label44;
        catch java.lang.NumberFormatException from label48 to label49 with label51;
        catch java.lang.NumberFormatException from label52 to label53 with label55;
    }

    private static boolean isAllZeros(java.lang.String)
    {
        java.lang.String r0;
        int $i0, $i1, i3;
        char $c2;
        boolean $z0;

        r0 := @parameter0: java.lang.String;

        if r0 != null goto label1;

        return 1;

     label1:
        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        i3 = $i0 - 1;

     label2:
        if i3 < 0 goto label4;

        $c2 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i3);

        if $c2 == 48 goto label3;

        return 0;

     label3:
        i3 = i3 + -1;

        goto label2;

     label4:
        $i1 = virtualinvoke r0.<java.lang.String: int length()>();

        if $i1 <= 0 goto label5;

        $z0 = 1;

        goto label6;

     label5:
        $z0 = 0;

     label6:
        return $z0;
    }

    public static java.lang.Float createFloat(java.lang.String)
    {
        java.lang.String r0;
        java.lang.Float $r1;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <java.lang.Float: java.lang.Float valueOf(java.lang.String)>(r0);

        return $r1;
    }

    public static java.lang.Double createDouble(java.lang.String)
    {
        java.lang.String r0;
        java.lang.Double $r1;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <java.lang.Double: java.lang.Double valueOf(java.lang.String)>(r0);

        return $r1;
    }

    public static java.lang.Integer createInteger(java.lang.String)
    {
        java.lang.String r0;
        java.lang.Integer $r1;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <java.lang.Integer: java.lang.Integer decode(java.lang.String)>(r0);

        return $r1;
    }

    public static java.lang.Long createLong(java.lang.String)
    {
        java.lang.String r0;
        java.lang.Long $r1;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <java.lang.Long: java.lang.Long valueOf(java.lang.String)>(r0);

        return $r1;
    }

    public static java.math.BigInteger createBigInteger(java.lang.String)
    {
        java.lang.String r0;
        java.math.BigInteger $r2;

        r0 := @parameter0: java.lang.String;

        $r2 = new java.math.BigInteger;

        specialinvoke $r2.<java.math.BigInteger: void <init>(java.lang.String)>(r0);

        return $r2;
    }

    public static java.math.BigDecimal createBigDecimal(java.lang.String)
    {
        java.lang.String r0;
        java.math.BigDecimal $r2;

        r0 := @parameter0: java.lang.String;

        $r2 = new java.math.BigDecimal;

        specialinvoke $r2.<java.math.BigDecimal: void <init>(java.lang.String)>(r0);

        return $r2;
    }

    public static long minimum(long, long, long)
    {
        long l0, l1, l4;
        byte $b2, $b3;

        l4 := @parameter0: long;

        l0 := @parameter1: long;

        l1 := @parameter2: long;

        $b2 = l0 cmp l4;

        if $b2 >= 0 goto label1;

        l4 = l0;

     label1:
        $b3 = l1 cmp l4;

        if $b3 >= 0 goto label2;

        l4 = l1;

     label2:
        return l4;
    }

    public static int minimum(int, int, int)
    {
        int i0, i1, i2;

        i2 := @parameter0: int;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        if i0 >= i2 goto label1;

        i2 = i0;

     label1:
        if i1 >= i2 goto label2;

        i2 = i1;

     label2:
        return i2;
    }

    public static long maximum(long, long, long)
    {
        long l0, l1, l4;
        byte $b2, $b3;

        l4 := @parameter0: long;

        l0 := @parameter1: long;

        l1 := @parameter2: long;

        $b2 = l0 cmp l4;

        if $b2 <= 0 goto label1;

        l4 = l0;

     label1:
        $b3 = l1 cmp l4;

        if $b3 <= 0 goto label2;

        l4 = l1;

     label2:
        return l4;
    }

    public static int maximum(int, int, int)
    {
        int i0, i1, i2;

        i2 := @parameter0: int;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        if i0 <= i2 goto label1;

        i2 = i0;

     label1:
        if i1 <= i2 goto label2;

        i2 = i1;

     label2:
        return i2;
    }

    public static int compare(double, double)
    {
        double d0, d1;
        long l0, l1;
        byte $b2, $b3, $b4, $b5;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        $b2 = d0 cmpg d1;

        if $b2 >= 0 goto label1;

        return -1;

     label1:
        $b3 = d0 cmpl d1;

        if $b3 <= 0 goto label2;

        return 1;

     label2:
        l0 = staticinvoke <java.lang.Double: long doubleToLongBits(double)>(d0);

        l1 = staticinvoke <java.lang.Double: long doubleToLongBits(double)>(d1);

        $b4 = l0 cmp l1;

        if $b4 != 0 goto label3;

        return 0;

     label3:
        $b5 = l0 cmp l1;

        if $b5 >= 0 goto label4;

        return -1;

     label4:
        return 1;
    }

    public static int compare(float, float)
    {
        float f0, f1;
        int i0, i1;
        byte $b2, $b3;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        $b2 = f0 cmpg f1;

        if $b2 >= 0 goto label1;

        return -1;

     label1:
        $b3 = f0 cmpl f1;

        if $b3 <= 0 goto label2;

        return 1;

     label2:
        i0 = staticinvoke <java.lang.Float: int floatToIntBits(float)>(f0);

        i1 = staticinvoke <java.lang.Float: int floatToIntBits(float)>(f1);

        if i0 != i1 goto label3;

        return 0;

     label3:
        if i0 >= i1 goto label4;

        return -1;

     label4:
        return 1;
    }

    public static boolean isDigits(java.lang.String)
    {
        java.lang.String r0;
        int $i0, $i1, i3;
        char $c2;
        boolean $z0;

        r0 := @parameter0: java.lang.String;

        if r0 == null goto label1;

        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        if $i0 != 0 goto label2;

     label1:
        return 0;

     label2:
        i3 = 0;

     label3:
        $i1 = virtualinvoke r0.<java.lang.String: int length()>();

        if i3 >= $i1 goto label5;

        $c2 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i3);

        $z0 = staticinvoke <java.lang.Character: boolean isDigit(char)>($c2);

        if $z0 != 0 goto label4;

        return 0;

     label4:
        i3 = i3 + 1;

        goto label3;

     label5:
        return 1;
    }

    public static boolean isNumber(java.lang.String)
    {
        java.lang.String r0;
        char[] r1;
        byte b0, $b32;
        boolean $z0, z1, z2, z3, z4, $z5, $z6;
        char $c1, $c3, $c4, $c5, $c6, $c7, $c8, $c9, $c11, $c12, $c13, $c14, $c15, $c16, $c17, $c18, $c19, $c20, $c21, $c23, $c25, $c26, $c27, $c28, $c29, $c30;
        int $i2, $i10, $i22, $i24, i31, i33, i34, i35, $i36;

        r0 := @parameter0: java.lang.String;

        $z0 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isEmpty(java.lang.String)>(r0);

        if $z0 == 0 goto label01;

        return 0;

     label01:
        r1 = virtualinvoke r0.<java.lang.String: char[] toCharArray()>();

        i31 = lengthof r1;

        z1 = 0;

        z2 = 0;

        z3 = 0;

        z4 = 0;

        $c1 = r1[0];

        if $c1 != 45 goto label02;

        $b32 = 1;

        goto label03;

     label02:
        $b32 = 0;

     label03:
        b0 = $b32;

        $i2 = $b32 + 1;

        if i31 <= $i2 goto label10;

        $c21 = r1[$b32];

        if $c21 != 48 goto label10;

        $i22 = $b32 + 1;

        $c23 = r1[$i22];

        if $c23 != 120 goto label10;

        i33 = $b32 + 2;

        if i33 != i31 goto label04;

        return 0;

     label04:
        $i24 = lengthof r1;

        if i33 >= $i24 goto label09;

        $c25 = r1[i33];

        if $c25 < 48 goto label05;

        $c30 = r1[i33];

        if $c30 <= 57 goto label08;

     label05:
        $c26 = r1[i33];

        if $c26 < 97 goto label06;

        $c29 = r1[i33];

        if $c29 <= 102 goto label08;

     label06:
        $c27 = r1[i33];

        if $c27 < 65 goto label07;

        $c28 = r1[i33];

        if $c28 <= 70 goto label08;

     label07:
        return 0;

     label08:
        i33 = i33 + 1;

        goto label04;

     label09:
        return 1;

     label10:
        i34 = i31 + -1;

        i35 = b0;

     label11:
        if i35 < i34 goto label12;

        $i10 = i34 + 1;

        if i35 >= $i10 goto label25;

        if z3 == 0 goto label25;

        if z4 != 0 goto label25;

     label12:
        $c3 = r1[i35];

        if $c3 < 48 goto label13;

        $c9 = r1[i35];

        if $c9 > 57 goto label13;

        z4 = 1;

        z3 = 0;

        goto label24;

     label13:
        $c4 = r1[i35];

        if $c4 != 46 goto label16;

        if z2 != 0 goto label14;

        if z1 == 0 goto label15;

     label14:
        return 0;

     label15:
        z2 = 1;

        goto label24;

     label16:
        $c5 = r1[i35];

        if $c5 == 101 goto label17;

        $c6 = r1[i35];

        if $c6 != 69 goto label20;

     label17:
        if z1 == 0 goto label18;

        return 0;

     label18:
        if z4 != 0 goto label19;

        return 0;

     label19:
        z1 = 1;

        z3 = 1;

        goto label24;

     label20:
        $c7 = r1[i35];

        if $c7 == 43 goto label21;

        $c8 = r1[i35];

        if $c8 != 45 goto label23;

     label21:
        if z3 != 0 goto label22;

        return 0;

     label22:
        z3 = 0;

        z4 = 0;

        goto label24;

     label23:
        return 0;

     label24:
        i35 = i35 + 1;

        goto label11;

     label25:
        $i36 = lengthof r1;

        if i35 >= $i36 goto label35;

        $c11 = r1[i35];

        if $c11 < 48 goto label26;

        $c20 = r1[i35];

        if $c20 > 57 goto label26;

        return 1;

     label26:
        $c12 = r1[i35];

        if $c12 == 101 goto label27;

        $c13 = r1[i35];

        if $c13 != 69 goto label28;

     label27:
        return 0;

     label28:
        if z3 != 0 goto label30;

        $c16 = r1[i35];

        if $c16 == 100 goto label29;

        $c17 = r1[i35];

        if $c17 == 68 goto label29;

        $c18 = r1[i35];

        if $c18 == 102 goto label29;

        $c19 = r1[i35];

        if $c19 != 70 goto label30;

     label29:
        return z4;

     label30:
        $c14 = r1[i35];

        if $c14 == 108 goto label31;

        $c15 = r1[i35];

        if $c15 != 76 goto label34;

     label31:
        if z4 == 0 goto label32;

        if z1 != 0 goto label32;

        $z5 = 1;

        goto label33;

     label32:
        $z5 = 0;

     label33:
        return $z5;

     label34:
        return 0;

     label35:
        if z3 != 0 goto label36;

        if z4 == 0 goto label36;

        $z6 = 1;

        goto label37;

     label36:
        $z6 = 0;

     label37:
        return $z6;
    }
}
