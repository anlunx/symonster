public class org.apache.commons.math3.analysis.function.Power extends java.lang.Object implements org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiableFunction, org.apache.commons.math3.analysis.DifferentiableUnivariateFunction
{
    private final double p;

    public void <init>(double)
    {
        org.apache.commons.math3.analysis.function.Power r0;
        double d0;

        r0 := @this: org.apache.commons.math3.analysis.function.Power;

        d0 := @parameter0: double;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.commons.math3.analysis.function.Power: double p> = d0;

        return;
    }

    public double value(double)
    {
        org.apache.commons.math3.analysis.function.Power r0;
        double d0, $d1, $d2;

        r0 := @this: org.apache.commons.math3.analysis.function.Power;

        d0 := @parameter0: double;

        $d1 = r0.<org.apache.commons.math3.analysis.function.Power: double p>;

        $d2 = staticinvoke <org.apache.commons.math3.util.FastMath: double pow(double,double)>(d0, $d1);

        return $d2;
    }

    public org.apache.commons.math3.analysis.UnivariateFunction derivative()
    {
        org.apache.commons.math3.analysis.function.Power r0;
        org.apache.commons.math3.analysis.DifferentiableUnivariateFunction $r1;
        org.apache.commons.math3.analysis.UnivariateFunction $r2;

        r0 := @this: org.apache.commons.math3.analysis.function.Power;

        $r1 = staticinvoke <org.apache.commons.math3.analysis.FunctionUtils: org.apache.commons.math3.analysis.DifferentiableUnivariateFunction toDifferentiableUnivariateFunction(org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiableFunction)>(r0);

        $r2 = interfaceinvoke $r1.<org.apache.commons.math3.analysis.DifferentiableUnivariateFunction: org.apache.commons.math3.analysis.UnivariateFunction derivative()>();

        return $r2;
    }

    public org.apache.commons.math3.analysis.differentiation.DerivativeStructure value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure)
    {
        org.apache.commons.math3.analysis.function.Power r0;
        org.apache.commons.math3.analysis.differentiation.DerivativeStructure r1, $r2;
        double $d0;

        r0 := @this: org.apache.commons.math3.analysis.function.Power;

        r1 := @parameter0: org.apache.commons.math3.analysis.differentiation.DerivativeStructure;

        $d0 = r0.<org.apache.commons.math3.analysis.function.Power: double p>;

        $r2 = virtualinvoke r1.<org.apache.commons.math3.analysis.differentiation.DerivativeStructure: org.apache.commons.math3.analysis.differentiation.DerivativeStructure pow(double)>($d0);

        return $r2;
    }
}
