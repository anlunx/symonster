public abstract class org.jcp.xml.dsig.internal.dom.ApacheCanonicalizer extends javax.xml.crypto.dsig.TransformService
{
    private static java.util.logging.Logger log;
    protected com.sun.org.apache.xml.internal.security.c14n.Canonicalizer apacheCanonicalizer;
    private com.sun.org.apache.xml.internal.security.transforms.Transform apacheTransform;
    protected java.lang.String inclusiveNamespaces;
    protected javax.xml.crypto.dsig.spec.C14NMethodParameterSpec params;
    protected org.w3c.dom.Document ownerDoc;
    protected org.w3c.dom.Element transformElem;

    public void <init>()
    {
        org.jcp.xml.dsig.internal.dom.ApacheCanonicalizer r0;

        r0 := @this: org.jcp.xml.dsig.internal.dom.ApacheCanonicalizer;

        specialinvoke r0.<javax.xml.crypto.dsig.TransformService: void <init>()>();

        return;
    }

    public final java.security.spec.AlgorithmParameterSpec getParameterSpec()
    {
        org.jcp.xml.dsig.internal.dom.ApacheCanonicalizer r0;
        javax.xml.crypto.dsig.spec.C14NMethodParameterSpec $r1;

        r0 := @this: org.jcp.xml.dsig.internal.dom.ApacheCanonicalizer;

        $r1 = r0.<org.jcp.xml.dsig.internal.dom.ApacheCanonicalizer: javax.xml.crypto.dsig.spec.C14NMethodParameterSpec params>;

        return $r1;
    }

    public void init(javax.xml.crypto.XMLStructure, javax.xml.crypto.XMLCryptoContext) throws java.security.InvalidAlgorithmParameterException
    {
        org.jcp.xml.dsig.internal.dom.ApacheCanonicalizer r0;
        javax.xml.crypto.XMLStructure r1;
        javax.xml.crypto.XMLCryptoContext r2;
        javax.xml.crypto.dom.DOMStructure $r3;
        org.w3c.dom.Node $r4;
        org.w3c.dom.Element $r5, $r6;
        org.w3c.dom.Document $r7;
        boolean $z0;
        java.lang.ClassCastException $r8;

        r0 := @this: org.jcp.xml.dsig.internal.dom.ApacheCanonicalizer;

        r1 := @parameter0: javax.xml.crypto.XMLStructure;

        r2 := @parameter1: javax.xml.crypto.XMLCryptoContext;

        if r2 == null goto label1;

        $z0 = r2 instanceof javax.xml.crypto.dom.DOMCryptoContext;

        if $z0 != 0 goto label1;

        $r8 = new java.lang.ClassCastException;

        specialinvoke $r8.<java.lang.ClassCastException: void <init>(java.lang.String)>("context must be of type DOMCryptoContext");

        throw $r8;

     label1:
        $r3 = (javax.xml.crypto.dom.DOMStructure) r1;

        $r4 = virtualinvoke $r3.<javax.xml.crypto.dom.DOMStructure: org.w3c.dom.Node getNode()>();

        $r5 = (org.w3c.dom.Element) $r4;

        r0.<org.jcp.xml.dsig.internal.dom.ApacheCanonicalizer: org.w3c.dom.Element transformElem> = $r5;

        $r6 = r0.<org.jcp.xml.dsig.internal.dom.ApacheCanonicalizer: org.w3c.dom.Element transformElem>;

        $r7 = staticinvoke <org.jcp.xml.dsig.internal.dom.DOMUtils: org.w3c.dom.Document getOwnerDocument(org.w3c.dom.Node)>($r6);

        r0.<org.jcp.xml.dsig.internal.dom.ApacheCanonicalizer: org.w3c.dom.Document ownerDoc> = $r7;

        return;
    }

    public void marshalParams(javax.xml.crypto.XMLStructure, javax.xml.crypto.XMLCryptoContext) throws javax.xml.crypto.MarshalException
    {
        org.jcp.xml.dsig.internal.dom.ApacheCanonicalizer r0;
        javax.xml.crypto.XMLStructure r1;
        javax.xml.crypto.XMLCryptoContext r2;
        javax.xml.crypto.dom.DOMStructure $r3;
        org.w3c.dom.Node $r4;
        org.w3c.dom.Element $r5, $r6;
        org.w3c.dom.Document $r7;
        boolean $z0;
        java.lang.ClassCastException $r8;

        r0 := @this: org.jcp.xml.dsig.internal.dom.ApacheCanonicalizer;

        r1 := @parameter0: javax.xml.crypto.XMLStructure;

        r2 := @parameter1: javax.xml.crypto.XMLCryptoContext;

        if r2 == null goto label1;

        $z0 = r2 instanceof javax.xml.crypto.dom.DOMCryptoContext;

        if $z0 != 0 goto label1;

        $r8 = new java.lang.ClassCastException;

        specialinvoke $r8.<java.lang.ClassCastException: void <init>(java.lang.String)>("context must be of type DOMCryptoContext");

        throw $r8;

     label1:
        $r3 = (javax.xml.crypto.dom.DOMStructure) r1;

        $r4 = virtualinvoke $r3.<javax.xml.crypto.dom.DOMStructure: org.w3c.dom.Node getNode()>();

        $r5 = (org.w3c.dom.Element) $r4;

        r0.<org.jcp.xml.dsig.internal.dom.ApacheCanonicalizer: org.w3c.dom.Element transformElem> = $r5;

        $r6 = r0.<org.jcp.xml.dsig.internal.dom.ApacheCanonicalizer: org.w3c.dom.Element transformElem>;

        $r7 = staticinvoke <org.jcp.xml.dsig.internal.dom.DOMUtils: org.w3c.dom.Document getOwnerDocument(org.w3c.dom.Node)>($r6);

        r0.<org.jcp.xml.dsig.internal.dom.ApacheCanonicalizer: org.w3c.dom.Document ownerDoc> = $r7;

        return;
    }

    public javax.xml.crypto.Data canonicalize(javax.xml.crypto.Data, javax.xml.crypto.XMLCryptoContext) throws javax.xml.crypto.dsig.TransformException
    {
        org.jcp.xml.dsig.internal.dom.ApacheCanonicalizer r0;
        javax.xml.crypto.Data r1, $r3;
        javax.xml.crypto.XMLCryptoContext r2;

        r0 := @this: org.jcp.xml.dsig.internal.dom.ApacheCanonicalizer;

        r1 := @parameter0: javax.xml.crypto.Data;

        r2 := @parameter1: javax.xml.crypto.XMLCryptoContext;

        $r3 = virtualinvoke r0.<org.jcp.xml.dsig.internal.dom.ApacheCanonicalizer: javax.xml.crypto.Data canonicalize(javax.xml.crypto.Data,javax.xml.crypto.XMLCryptoContext,java.io.OutputStream)>(r1, r2, null);

        return $r3;
    }

    public javax.xml.crypto.Data canonicalize(javax.xml.crypto.Data, javax.xml.crypto.XMLCryptoContext, java.io.OutputStream) throws javax.xml.crypto.dsig.TransformException
    {
        org.jcp.xml.dsig.internal.dom.ApacheCanonicalizer r0;
        javax.xml.crypto.Data r1;
        javax.xml.crypto.XMLCryptoContext r2;
        java.io.OutputStream r3;
        com.sun.org.apache.xml.internal.security.c14n.Canonicalizer $r4, $r6, $r10, $r20, $r25, $r37, $r42, $r49, $r56, $r61, $r65, $r67;
        java.io.ByteArrayOutputStream $r5;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        javax.xml.crypto.OctetStreamData $r7, $r9, $r18, $r22, $r35, $r40, $r47, $r54, $r59;
        java.io.ByteArrayInputStream $r8, $r19, $r23, $r36, $r41, $r48, $r55, $r60;
        java.io.InputStream $r11, $r50;
        byte[] $r12, $r13, $r21, $r26, $r39, $r45, $r51, $r52, $r58, $r64;
        java.util.Iterator $r14;
        java.util.logging.Level $r15, $r29, $r68, $r72;
        java.util.logging.Logger $r16, $r28, $r69, $r71;
        java.lang.String $r17, $r24, $r33, $r34, $r44, $r53, $r63, $r66, $r74, $r76, $r81, $r84, $r86;
        java.lang.StringBuilder $r27, $r30, $r31, $r32, $r70, $r73, $r75, $r79, $r80, $r82, $r83, $r85;
        int $i0;
        org.w3c.dom.Node $r38, $r43, $r57, $r62;
        org.jcp.xml.dsig.internal.dom.ApacheData $r46;
        com.sun.org.apache.xml.internal.security.c14n.InvalidCanonicalizerException $r77;
        javax.xml.crypto.dsig.TransformException $r78, $r88;
        java.lang.Exception $r87;
        com.sun.org.apache.xml.internal.security.signature.XMLSignatureInput r90;
        java.util.Set r91;
        org.jcp.xml.dsig.internal.dom.DOMSubTreeData r92;
        javax.xml.crypto.NodeSetData r93;

        r0 := @this: org.jcp.xml.dsig.internal.dom.ApacheCanonicalizer;

        r1 := @parameter0: javax.xml.crypto.Data;

        r2 := @parameter1: javax.xml.crypto.XMLCryptoContext;

        r3 := @parameter2: java.io.OutputStream;

        $r4 = r0.<org.jcp.xml.dsig.internal.dom.ApacheCanonicalizer: com.sun.org.apache.xml.internal.security.c14n.Canonicalizer apacheCanonicalizer>;

        if $r4 != null goto label04;

     label01:
        $r66 = virtualinvoke r0.<org.jcp.xml.dsig.internal.dom.ApacheCanonicalizer: java.lang.String getAlgorithm()>();

        $r67 = staticinvoke <com.sun.org.apache.xml.internal.security.c14n.Canonicalizer: com.sun.org.apache.xml.internal.security.c14n.Canonicalizer getInstance(java.lang.String)>($r66);

        r0.<org.jcp.xml.dsig.internal.dom.ApacheCanonicalizer: com.sun.org.apache.xml.internal.security.c14n.Canonicalizer apacheCanonicalizer> = $r67;

        $r69 = <org.jcp.xml.dsig.internal.dom.ApacheCanonicalizer: java.util.logging.Logger log>;

        $r68 = <java.util.logging.Level: java.util.logging.Level FINE>;

        $z6 = virtualinvoke $r69.<java.util.logging.Logger: boolean isLoggable(java.util.logging.Level)>($r68);

        if $z6 == 0 goto label02;

        $r71 = <org.jcp.xml.dsig.internal.dom.ApacheCanonicalizer: java.util.logging.Logger log>;

        $r72 = <java.util.logging.Level: java.util.logging.Level FINE>;

        $r70 = new java.lang.StringBuilder;

        specialinvoke $r70.<java.lang.StringBuilder: void <init>()>();

        $r73 = virtualinvoke $r70.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Created canonicalizer for algorithm: ");

        $r74 = virtualinvoke r0.<org.jcp.xml.dsig.internal.dom.ApacheCanonicalizer: java.lang.String getAlgorithm()>();

        $r75 = virtualinvoke $r73.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r74);

        $r76 = virtualinvoke $r75.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r71.<java.util.logging.Logger: void log(java.util.logging.Level,java.lang.String)>($r72, $r76);

     label02:
        goto label04;

     label03:
        $r77 := @caughtexception;

        $r78 = new javax.xml.crypto.dsig.TransformException;

        $r79 = new java.lang.StringBuilder;

        specialinvoke $r79.<java.lang.StringBuilder: void <init>()>();

        $r80 = virtualinvoke $r79.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Couldn\'t find Canonicalizer for: ");

        $r81 = virtualinvoke r0.<org.jcp.xml.dsig.internal.dom.ApacheCanonicalizer: java.lang.String getAlgorithm()>();

        $r82 = virtualinvoke $r80.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r81);

        $r83 = virtualinvoke $r82.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r84 = virtualinvoke $r77.<com.sun.org.apache.xml.internal.security.c14n.InvalidCanonicalizerException: java.lang.String getMessage()>();

        $r85 = virtualinvoke $r83.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r84);

        $r86 = virtualinvoke $r85.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r78.<javax.xml.crypto.dsig.TransformException: void <init>(java.lang.String,java.lang.Throwable)>($r86, $r77);

        throw $r78;

     label04:
        if r3 == null goto label05;

        $r65 = r0.<org.jcp.xml.dsig.internal.dom.ApacheCanonicalizer: com.sun.org.apache.xml.internal.security.c14n.Canonicalizer apacheCanonicalizer>;

        virtualinvoke $r65.<com.sun.org.apache.xml.internal.security.c14n.Canonicalizer: void setWriter(java.io.OutputStream)>(r3);

        goto label06;

     label05:
        $r6 = r0.<org.jcp.xml.dsig.internal.dom.ApacheCanonicalizer: com.sun.org.apache.xml.internal.security.c14n.Canonicalizer apacheCanonicalizer>;

        $r5 = new java.io.ByteArrayOutputStream;

        specialinvoke $r5.<java.io.ByteArrayOutputStream: void <init>()>();

        virtualinvoke $r6.<com.sun.org.apache.xml.internal.security.c14n.Canonicalizer: void setWriter(java.io.OutputStream)>($r5);

     label06:
        $z0 = r1 instanceof org.jcp.xml.dsig.internal.dom.ApacheData;

        if $z0 == 0 goto label14;

        $r46 = (org.jcp.xml.dsig.internal.dom.ApacheData) r1;

        r90 = interfaceinvoke $r46.<org.jcp.xml.dsig.internal.dom.ApacheData: com.sun.org.apache.xml.internal.security.signature.XMLSignatureInput getXMLSignatureInput()>();

        $z4 = virtualinvoke r90.<com.sun.org.apache.xml.internal.security.signature.XMLSignatureInput: boolean isElement()>();

        if $z4 == 0 goto label10;

        $r53 = r0.<org.jcp.xml.dsig.internal.dom.ApacheCanonicalizer: java.lang.String inclusiveNamespaces>;

        if $r53 == null goto label08;

        $r59 = new javax.xml.crypto.OctetStreamData;

        $r60 = new java.io.ByteArrayInputStream;

        $r61 = r0.<org.jcp.xml.dsig.internal.dom.ApacheCanonicalizer: com.sun.org.apache.xml.internal.security.c14n.Canonicalizer apacheCanonicalizer>;

        $r62 = virtualinvoke r90.<com.sun.org.apache.xml.internal.security.signature.XMLSignatureInput: org.w3c.dom.Node getSubNode()>();

        $r63 = r0.<org.jcp.xml.dsig.internal.dom.ApacheCanonicalizer: java.lang.String inclusiveNamespaces>;

        $r64 = virtualinvoke $r61.<com.sun.org.apache.xml.internal.security.c14n.Canonicalizer: byte[] canonicalizeSubtree(org.w3c.dom.Node,java.lang.String)>($r62, $r63);

        specialinvoke $r60.<java.io.ByteArrayInputStream: void <init>(byte[])>($r64);

        specialinvoke $r59.<javax.xml.crypto.OctetStreamData: void <init>(java.io.InputStream)>($r60);

     label07:
        return $r59;

     label08:
        $r54 = new javax.xml.crypto.OctetStreamData;

        $r55 = new java.io.ByteArrayInputStream;

        $r56 = r0.<org.jcp.xml.dsig.internal.dom.ApacheCanonicalizer: com.sun.org.apache.xml.internal.security.c14n.Canonicalizer apacheCanonicalizer>;

        $r57 = virtualinvoke r90.<com.sun.org.apache.xml.internal.security.signature.XMLSignatureInput: org.w3c.dom.Node getSubNode()>();

        $r58 = virtualinvoke $r56.<com.sun.org.apache.xml.internal.security.c14n.Canonicalizer: byte[] canonicalizeSubtree(org.w3c.dom.Node)>($r57);

        specialinvoke $r55.<java.io.ByteArrayInputStream: void <init>(byte[])>($r58);

        specialinvoke $r54.<javax.xml.crypto.OctetStreamData: void <init>(java.io.InputStream)>($r55);

     label09:
        return $r54;

     label10:
        $z5 = virtualinvoke r90.<com.sun.org.apache.xml.internal.security.signature.XMLSignatureInput: boolean isNodeSet()>();

        if $z5 == 0 goto label11;

        r91 = virtualinvoke r90.<com.sun.org.apache.xml.internal.security.signature.XMLSignatureInput: java.util.Set getNodeSet()>();

        goto label13;

     label11:
        $r47 = new javax.xml.crypto.OctetStreamData;

        $r48 = new java.io.ByteArrayInputStream;

        $r49 = r0.<org.jcp.xml.dsig.internal.dom.ApacheCanonicalizer: com.sun.org.apache.xml.internal.security.c14n.Canonicalizer apacheCanonicalizer>;

        $r50 = virtualinvoke r90.<com.sun.org.apache.xml.internal.security.signature.XMLSignatureInput: java.io.InputStream getOctetStream()>();

        $r51 = staticinvoke <org.jcp.xml.dsig.internal.dom.Utils: byte[] readBytesFromStream(java.io.InputStream)>($r50);

        $r52 = virtualinvoke $r49.<com.sun.org.apache.xml.internal.security.c14n.Canonicalizer: byte[] canonicalize(byte[])>($r51);

        specialinvoke $r48.<java.io.ByteArrayInputStream: void <init>(byte[])>($r52);

        specialinvoke $r47.<javax.xml.crypto.OctetStreamData: void <init>(java.io.InputStream)>($r48);

     label12:
        return $r47;

     label13:
        goto label22;

     label14:
        $z1 = r1 instanceof org.jcp.xml.dsig.internal.dom.DOMSubTreeData;

        if $z1 == 0 goto label18;

        r92 = (org.jcp.xml.dsig.internal.dom.DOMSubTreeData) r1;

        $r34 = r0.<org.jcp.xml.dsig.internal.dom.ApacheCanonicalizer: java.lang.String inclusiveNamespaces>;

        if $r34 == null goto label16;

        $r40 = new javax.xml.crypto.OctetStreamData;

        $r41 = new java.io.ByteArrayInputStream;

        $r42 = r0.<org.jcp.xml.dsig.internal.dom.ApacheCanonicalizer: com.sun.org.apache.xml.internal.security.c14n.Canonicalizer apacheCanonicalizer>;

        $r43 = virtualinvoke r92.<org.jcp.xml.dsig.internal.dom.DOMSubTreeData: org.w3c.dom.Node getRoot()>();

        $r44 = r0.<org.jcp.xml.dsig.internal.dom.ApacheCanonicalizer: java.lang.String inclusiveNamespaces>;

        $r45 = virtualinvoke $r42.<com.sun.org.apache.xml.internal.security.c14n.Canonicalizer: byte[] canonicalizeSubtree(org.w3c.dom.Node,java.lang.String)>($r43, $r44);

        specialinvoke $r41.<java.io.ByteArrayInputStream: void <init>(byte[])>($r45);

        specialinvoke $r40.<javax.xml.crypto.OctetStreamData: void <init>(java.io.InputStream)>($r41);

     label15:
        return $r40;

     label16:
        $r35 = new javax.xml.crypto.OctetStreamData;

        $r36 = new java.io.ByteArrayInputStream;

        $r37 = r0.<org.jcp.xml.dsig.internal.dom.ApacheCanonicalizer: com.sun.org.apache.xml.internal.security.c14n.Canonicalizer apacheCanonicalizer>;

        $r38 = virtualinvoke r92.<org.jcp.xml.dsig.internal.dom.DOMSubTreeData: org.w3c.dom.Node getRoot()>();

        $r39 = virtualinvoke $r37.<com.sun.org.apache.xml.internal.security.c14n.Canonicalizer: byte[] canonicalizeSubtree(org.w3c.dom.Node)>($r38);

        specialinvoke $r36.<java.io.ByteArrayInputStream: void <init>(byte[])>($r39);

        specialinvoke $r35.<javax.xml.crypto.OctetStreamData: void <init>(java.io.InputStream)>($r36);

     label17:
        return $r35;

     label18:
        $z2 = r1 instanceof javax.xml.crypto.NodeSetData;

        if $z2 == 0 goto label20;

        r93 = (javax.xml.crypto.NodeSetData) r1;

        $r14 = interfaceinvoke r93.<javax.xml.crypto.NodeSetData: java.util.Iterator iterator()>();

        r91 = staticinvoke <org.jcp.xml.dsig.internal.dom.Utils: java.util.Set toNodeSet(java.util.Iterator)>($r14);

        $r16 = <org.jcp.xml.dsig.internal.dom.ApacheCanonicalizer: java.util.logging.Logger log>;

        $r15 = <java.util.logging.Level: java.util.logging.Level FINE>;

        $z3 = virtualinvoke $r16.<java.util.logging.Logger: boolean isLoggable(java.util.logging.Level)>($r15);

        if $z3 == 0 goto label19;

        $r28 = <org.jcp.xml.dsig.internal.dom.ApacheCanonicalizer: java.util.logging.Logger log>;

        $r29 = <java.util.logging.Level: java.util.logging.Level FINE>;

        $r27 = new java.lang.StringBuilder;

        specialinvoke $r27.<java.lang.StringBuilder: void <init>()>();

        $r30 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Canonicalizing ");

        $i0 = interfaceinvoke r91.<java.util.Set: int size()>();

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" nodes");

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r28.<java.util.logging.Logger: void log(java.util.logging.Level,java.lang.String)>($r29, $r33);

     label19:
        goto label22;

     label20:
        $r7 = new javax.xml.crypto.OctetStreamData;

        $r8 = new java.io.ByteArrayInputStream;

        $r10 = r0.<org.jcp.xml.dsig.internal.dom.ApacheCanonicalizer: com.sun.org.apache.xml.internal.security.c14n.Canonicalizer apacheCanonicalizer>;

        $r9 = (javax.xml.crypto.OctetStreamData) r1;

        $r11 = virtualinvoke $r9.<javax.xml.crypto.OctetStreamData: java.io.InputStream getOctetStream()>();

        $r12 = staticinvoke <org.jcp.xml.dsig.internal.dom.Utils: byte[] readBytesFromStream(java.io.InputStream)>($r11);

        $r13 = virtualinvoke $r10.<com.sun.org.apache.xml.internal.security.c14n.Canonicalizer: byte[] canonicalize(byte[])>($r12);

        specialinvoke $r8.<java.io.ByteArrayInputStream: void <init>(byte[])>($r13);

        specialinvoke $r7.<javax.xml.crypto.OctetStreamData: void <init>(java.io.InputStream)>($r8);

     label21:
        return $r7;

     label22:
        $r17 = r0.<org.jcp.xml.dsig.internal.dom.ApacheCanonicalizer: java.lang.String inclusiveNamespaces>;

        if $r17 == null goto label24;

        $r22 = new javax.xml.crypto.OctetStreamData;

        $r23 = new java.io.ByteArrayInputStream;

        $r25 = r0.<org.jcp.xml.dsig.internal.dom.ApacheCanonicalizer: com.sun.org.apache.xml.internal.security.c14n.Canonicalizer apacheCanonicalizer>;

        $r24 = r0.<org.jcp.xml.dsig.internal.dom.ApacheCanonicalizer: java.lang.String inclusiveNamespaces>;

        $r26 = virtualinvoke $r25.<com.sun.org.apache.xml.internal.security.c14n.Canonicalizer: byte[] canonicalizeXPathNodeSet(java.util.Set,java.lang.String)>(r91, $r24);

        specialinvoke $r23.<java.io.ByteArrayInputStream: void <init>(byte[])>($r26);

        specialinvoke $r22.<javax.xml.crypto.OctetStreamData: void <init>(java.io.InputStream)>($r23);

     label23:
        return $r22;

     label24:
        $r18 = new javax.xml.crypto.OctetStreamData;

        $r19 = new java.io.ByteArrayInputStream;

        $r20 = r0.<org.jcp.xml.dsig.internal.dom.ApacheCanonicalizer: com.sun.org.apache.xml.internal.security.c14n.Canonicalizer apacheCanonicalizer>;

        $r21 = virtualinvoke $r20.<com.sun.org.apache.xml.internal.security.c14n.Canonicalizer: byte[] canonicalizeXPathNodeSet(java.util.Set)>(r91);

        specialinvoke $r19.<java.io.ByteArrayInputStream: void <init>(byte[])>($r21);

        specialinvoke $r18.<javax.xml.crypto.OctetStreamData: void <init>(java.io.InputStream)>($r19);

     label25:
        return $r18;

     label26:
        $r87 := @caughtexception;

        $r88 = new javax.xml.crypto.dsig.TransformException;

        specialinvoke $r88.<javax.xml.crypto.dsig.TransformException: void <init>(java.lang.Throwable)>($r87);

        throw $r88;

        catch com.sun.org.apache.xml.internal.security.c14n.InvalidCanonicalizerException from label01 to label02 with label03;
        catch java.lang.Exception from label06 to label07 with label26;
        catch java.lang.Exception from label08 to label09 with label26;
        catch java.lang.Exception from label10 to label12 with label26;
        catch java.lang.Exception from label13 to label15 with label26;
        catch java.lang.Exception from label16 to label17 with label26;
        catch java.lang.Exception from label18 to label21 with label26;
        catch java.lang.Exception from label22 to label23 with label26;
        catch java.lang.Exception from label24 to label25 with label26;
    }

    public javax.xml.crypto.Data transform(javax.xml.crypto.Data, javax.xml.crypto.XMLCryptoContext, java.io.OutputStream) throws javax.xml.crypto.dsig.TransformException
    {
        org.jcp.xml.dsig.internal.dom.ApacheCanonicalizer r0;
        javax.xml.crypto.Data r1;
        javax.xml.crypto.XMLCryptoContext r2;
        java.io.OutputStream r3;
        org.w3c.dom.Document $r4, $r30;
        com.sun.org.apache.xml.internal.security.transforms.Transform $r5, $r29, $r34, $r65;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10;
        java.util.logging.Level $r6, $r13, $r15, $r22, $r24, $r27, $r37, $r41;
        java.util.logging.Logger $r7, $r14, $r16, $r23, $r25, $r28, $r38, $r40;
        com.sun.org.apache.xml.internal.security.signature.XMLSignatureInput $r8, $r19, $r20, r61, r66;
        javax.xml.crypto.OctetStreamData $r9;
        java.io.InputStream $r10;
        org.jcp.xml.dsig.internal.dom.ApacheNodeSetData $r11;
        org.jcp.xml.dsig.internal.dom.ApacheOctetStreamData $r12;
        javax.xml.crypto.NodeSetData $r17;
        java.util.Iterator $r18;
        org.w3c.dom.Node $r21;
        org.jcp.xml.dsig.internal.dom.ApacheData $r26;
        java.lang.String $r31, $r36, $r43, $r45, $r57, $r59;
        org.w3c.dom.Element $r32, $r35;
        org.w3c.dom.NodeList $r33;
        java.lang.StringBuilder $r39, $r42, $r44, $r55, $r56, $r58;
        javax.xml.crypto.dsig.TransformException $r46, $r50, $r52, $r54;
        java.lang.NullPointerException $r47, $r48;
        java.lang.Exception $r49, $r51, $r53;
        org.jcp.xml.dsig.internal.dom.DOMSubTreeData r62;
        java.util.Set r63;

        r0 := @this: org.jcp.xml.dsig.internal.dom.ApacheCanonicalizer;

        r1 := @parameter0: javax.xml.crypto.Data;

        r2 := @parameter1: javax.xml.crypto.XMLCryptoContext;

        r3 := @parameter2: java.io.OutputStream;

        if r1 != null goto label01;

        $r48 = new java.lang.NullPointerException;

        specialinvoke $r48.<java.lang.NullPointerException: void <init>(java.lang.String)>("data must not be null");

        throw $r48;

     label01:
        if r3 != null goto label02;

        $r47 = new java.lang.NullPointerException;

        specialinvoke $r47.<java.lang.NullPointerException: void <init>(java.lang.String)>("output stream must not be null");

        throw $r47;

     label02:
        $r4 = r0.<org.jcp.xml.dsig.internal.dom.ApacheCanonicalizer: org.w3c.dom.Document ownerDoc>;

        if $r4 != null goto label03;

        $r46 = new javax.xml.crypto.dsig.TransformException;

        specialinvoke $r46.<javax.xml.crypto.dsig.TransformException: void <init>(java.lang.String)>("transform must be marshalled");

        throw $r46;

     label03:
        $r5 = r0.<org.jcp.xml.dsig.internal.dom.ApacheCanonicalizer: com.sun.org.apache.xml.internal.security.transforms.Transform apacheTransform>;

        if $r5 != null goto label07;

     label04:
        $r29 = new com.sun.org.apache.xml.internal.security.transforms.Transform;

        $r30 = r0.<org.jcp.xml.dsig.internal.dom.ApacheCanonicalizer: org.w3c.dom.Document ownerDoc>;

        $r31 = virtualinvoke r0.<org.jcp.xml.dsig.internal.dom.ApacheCanonicalizer: java.lang.String getAlgorithm()>();

        $r32 = r0.<org.jcp.xml.dsig.internal.dom.ApacheCanonicalizer: org.w3c.dom.Element transformElem>;

        $r33 = interfaceinvoke $r32.<org.w3c.dom.Element: org.w3c.dom.NodeList getChildNodes()>();

        specialinvoke $r29.<com.sun.org.apache.xml.internal.security.transforms.Transform: void <init>(org.w3c.dom.Document,java.lang.String,org.w3c.dom.NodeList)>($r30, $r31, $r33);

        r0.<org.jcp.xml.dsig.internal.dom.ApacheCanonicalizer: com.sun.org.apache.xml.internal.security.transforms.Transform apacheTransform> = $r29;

        $r34 = r0.<org.jcp.xml.dsig.internal.dom.ApacheCanonicalizer: com.sun.org.apache.xml.internal.security.transforms.Transform apacheTransform>;

        $r35 = r0.<org.jcp.xml.dsig.internal.dom.ApacheCanonicalizer: org.w3c.dom.Element transformElem>;

        $r36 = interfaceinvoke r2.<javax.xml.crypto.XMLCryptoContext: java.lang.String getBaseURI()>();

        virtualinvoke $r34.<com.sun.org.apache.xml.internal.security.transforms.Transform: void setElement(org.w3c.dom.Element,java.lang.String)>($r35, $r36);

        $r38 = <org.jcp.xml.dsig.internal.dom.ApacheCanonicalizer: java.util.logging.Logger log>;

        $r37 = <java.util.logging.Level: java.util.logging.Level FINE>;

        $z9 = virtualinvoke $r38.<java.util.logging.Logger: boolean isLoggable(java.util.logging.Level)>($r37);

        if $z9 == 0 goto label05;

        $r40 = <org.jcp.xml.dsig.internal.dom.ApacheCanonicalizer: java.util.logging.Logger log>;

        $r41 = <java.util.logging.Level: java.util.logging.Level FINE>;

        $r39 = new java.lang.StringBuilder;

        specialinvoke $r39.<java.lang.StringBuilder: void <init>()>();

        $r42 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Created transform for algorithm: ");

        $r43 = virtualinvoke r0.<org.jcp.xml.dsig.internal.dom.ApacheCanonicalizer: java.lang.String getAlgorithm()>();

        $r44 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r43);

        $r45 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r40.<java.util.logging.Logger: void log(java.util.logging.Level,java.lang.String)>($r41, $r45);

     label05:
        goto label07;

     label06:
        $r53 := @caughtexception;

        $r54 = new javax.xml.crypto.dsig.TransformException;

        $r55 = new java.lang.StringBuilder;

        specialinvoke $r55.<java.lang.StringBuilder: void <init>()>();

        $r56 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Couldn\'t find Transform for: ");

        $r57 = virtualinvoke r0.<org.jcp.xml.dsig.internal.dom.ApacheCanonicalizer: java.lang.String getAlgorithm()>();

        $r58 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r57);

        $r59 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r54.<javax.xml.crypto.dsig.TransformException: void <init>(java.lang.String,java.lang.Throwable)>($r59, $r53);

        throw $r54;

     label07:
        $z0 = r1 instanceof org.jcp.xml.dsig.internal.dom.ApacheData;

        if $z0 == 0 goto label09;

        $r25 = <org.jcp.xml.dsig.internal.dom.ApacheCanonicalizer: java.util.logging.Logger log>;

        $r24 = <java.util.logging.Level: java.util.logging.Level FINE>;

        $z8 = virtualinvoke $r25.<java.util.logging.Logger: boolean isLoggable(java.util.logging.Level)>($r24);

        if $z8 == 0 goto label08;

        $r28 = <org.jcp.xml.dsig.internal.dom.ApacheCanonicalizer: java.util.logging.Logger log>;

        $r27 = <java.util.logging.Level: java.util.logging.Level FINE>;

        virtualinvoke $r28.<java.util.logging.Logger: void log(java.util.logging.Level,java.lang.String)>($r27, "ApacheData = true");

     label08:
        $r26 = (org.jcp.xml.dsig.internal.dom.ApacheData) r1;

        r61 = interfaceinvoke $r26.<org.jcp.xml.dsig.internal.dom.ApacheData: com.sun.org.apache.xml.internal.security.signature.XMLSignatureInput getXMLSignatureInput()>();

        goto label16;

     label09:
        $z1 = r1 instanceof javax.xml.crypto.NodeSetData;

        if $z1 == 0 goto label12;

        $r16 = <org.jcp.xml.dsig.internal.dom.ApacheCanonicalizer: java.util.logging.Logger log>;

        $r15 = <java.util.logging.Level: java.util.logging.Level FINE>;

        $z5 = virtualinvoke $r16.<java.util.logging.Logger: boolean isLoggable(java.util.logging.Level)>($r15);

        if $z5 == 0 goto label10;

        $r23 = <org.jcp.xml.dsig.internal.dom.ApacheCanonicalizer: java.util.logging.Logger log>;

        $r22 = <java.util.logging.Level: java.util.logging.Level FINE>;

        virtualinvoke $r23.<java.util.logging.Logger: void log(java.util.logging.Level,java.lang.String)>($r22, "isNodeSet() = true");

     label10:
        $z6 = r1 instanceof org.jcp.xml.dsig.internal.dom.DOMSubTreeData;

        if $z6 == 0 goto label11;

        r62 = (org.jcp.xml.dsig.internal.dom.DOMSubTreeData) r1;

        $r20 = new com.sun.org.apache.xml.internal.security.signature.XMLSignatureInput;

        $r21 = virtualinvoke r62.<org.jcp.xml.dsig.internal.dom.DOMSubTreeData: org.w3c.dom.Node getRoot()>();

        specialinvoke $r20.<com.sun.org.apache.xml.internal.security.signature.XMLSignatureInput: void <init>(org.w3c.dom.Node)>($r21);

        r61 = $r20;

        $z7 = virtualinvoke r62.<org.jcp.xml.dsig.internal.dom.DOMSubTreeData: boolean excludeComments()>();

        virtualinvoke $r20.<com.sun.org.apache.xml.internal.security.signature.XMLSignatureInput: void setExcludeComments(boolean)>($z7);

        goto label16;

     label11:
        $r17 = (javax.xml.crypto.NodeSetData) r1;

        $r18 = interfaceinvoke $r17.<javax.xml.crypto.NodeSetData: java.util.Iterator iterator()>();

        r63 = staticinvoke <org.jcp.xml.dsig.internal.dom.Utils: java.util.Set toNodeSet(java.util.Iterator)>($r18);

        $r19 = new com.sun.org.apache.xml.internal.security.signature.XMLSignatureInput;

        specialinvoke $r19.<com.sun.org.apache.xml.internal.security.signature.XMLSignatureInput: void <init>(java.util.Set)>(r63);

        r61 = $r19;

        goto label16;

     label12:
        $r7 = <org.jcp.xml.dsig.internal.dom.ApacheCanonicalizer: java.util.logging.Logger log>;

        $r6 = <java.util.logging.Level: java.util.logging.Level FINE>;

        $z2 = virtualinvoke $r7.<java.util.logging.Logger: boolean isLoggable(java.util.logging.Level)>($r6);

        if $z2 == 0 goto label13;

        $r14 = <org.jcp.xml.dsig.internal.dom.ApacheCanonicalizer: java.util.logging.Logger log>;

        $r13 = <java.util.logging.Level: java.util.logging.Level FINE>;

        virtualinvoke $r14.<java.util.logging.Logger: void log(java.util.logging.Level,java.lang.String)>($r13, "isNodeSet() = false");

     label13:
        $r8 = new com.sun.org.apache.xml.internal.security.signature.XMLSignatureInput;

        $r9 = (javax.xml.crypto.OctetStreamData) r1;

        $r10 = virtualinvoke $r9.<javax.xml.crypto.OctetStreamData: java.io.InputStream getOctetStream()>();

        specialinvoke $r8.<com.sun.org.apache.xml.internal.security.signature.XMLSignatureInput: void <init>(java.io.InputStream)>($r10);

        r61 = $r8;

     label14:
        goto label16;

     label15:
        $r49 := @caughtexception;

        $r50 = new javax.xml.crypto.dsig.TransformException;

        specialinvoke $r50.<javax.xml.crypto.dsig.TransformException: void <init>(java.lang.Throwable)>($r49);

        throw $r50;

     label16:
        $r65 = r0.<org.jcp.xml.dsig.internal.dom.ApacheCanonicalizer: com.sun.org.apache.xml.internal.security.transforms.Transform apacheTransform>;

        r66 = virtualinvoke $r65.<com.sun.org.apache.xml.internal.security.transforms.Transform: com.sun.org.apache.xml.internal.security.signature.XMLSignatureInput performTransform(com.sun.org.apache.xml.internal.security.signature.XMLSignatureInput,java.io.OutputStream)>(r61, r3);

        $z10 = virtualinvoke r66.<com.sun.org.apache.xml.internal.security.signature.XMLSignatureInput: boolean isNodeSet()>();

        if $z10 != 0 goto label18;

        $z4 = virtualinvoke r66.<com.sun.org.apache.xml.internal.security.signature.XMLSignatureInput: boolean isElement()>();

        if $z4 != 0 goto label18;

     label17:
        return null;

     label18:
        $z3 = virtualinvoke r66.<com.sun.org.apache.xml.internal.security.signature.XMLSignatureInput: boolean isOctetStream()>();

        if $z3 == 0 goto label20;

        $r12 = new org.jcp.xml.dsig.internal.dom.ApacheOctetStreamData;

        specialinvoke $r12.<org.jcp.xml.dsig.internal.dom.ApacheOctetStreamData: void <init>(com.sun.org.apache.xml.internal.security.signature.XMLSignatureInput)>(r66);

     label19:
        return $r12;

     label20:
        $r11 = new org.jcp.xml.dsig.internal.dom.ApacheNodeSetData;

        specialinvoke $r11.<org.jcp.xml.dsig.internal.dom.ApacheNodeSetData: void <init>(com.sun.org.apache.xml.internal.security.signature.XMLSignatureInput)>(r66);

     label21:
        return $r11;

     label22:
        $r51 := @caughtexception;

        $r52 = new javax.xml.crypto.dsig.TransformException;

        specialinvoke $r52.<javax.xml.crypto.dsig.TransformException: void <init>(java.lang.Throwable)>($r51);

        throw $r52;

        catch java.lang.Exception from label04 to label05 with label06;
        catch java.lang.Exception from label13 to label14 with label15;
        catch java.lang.Exception from label16 to label17 with label22;
        catch java.lang.Exception from label18 to label19 with label22;
        catch java.lang.Exception from label20 to label21 with label22;
    }

    public final boolean isFeatureSupported(java.lang.String)
    {
        org.jcp.xml.dsig.internal.dom.ApacheCanonicalizer r0;
        java.lang.String r1;
        java.lang.NullPointerException $r2;

        r0 := @this: org.jcp.xml.dsig.internal.dom.ApacheCanonicalizer;

        r1 := @parameter0: java.lang.String;

        if r1 != null goto label1;

        $r2 = new java.lang.NullPointerException;

        specialinvoke $r2.<java.lang.NullPointerException: void <init>()>();

        throw $r2;

     label1:
        return 0;
    }

    static void <clinit>()
    {
        java.util.logging.Logger $r0;

        staticinvoke <com.sun.org.apache.xml.internal.security.Init: void init()>();

        $r0 = staticinvoke <java.util.logging.Logger: java.util.logging.Logger getLogger(java.lang.String)>("org.jcp.xml.dsig.internal.dom");

        <org.jcp.xml.dsig.internal.dom.ApacheCanonicalizer: java.util.logging.Logger log> = $r0;

        return;
    }
}
