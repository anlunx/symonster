public class com.opengamma.analytics.financial.model.volatility.smile.function.SABRHaganAlternativeVolatilityFunction extends com.opengamma.analytics.financial.model.volatility.smile.function.VolatilityFunctionProvider
{
    private static final org.slf4j.Logger s_logger;
    private static final double CUTOFF_MONEYNESS;
    private static final double EPS;

    public void <init>()
    {
        com.opengamma.analytics.financial.model.volatility.smile.function.SABRHaganAlternativeVolatilityFunction r0;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.smile.function.SABRHaganAlternativeVolatilityFunction;

        specialinvoke r0.<com.opengamma.analytics.financial.model.volatility.smile.function.VolatilityFunctionProvider: void <init>()>();

        return;
    }

    public com.opengamma.analytics.math.function.Function1D getVolatilityFunction(com.opengamma.analytics.financial.model.option.pricing.analytic.formula.EuropeanVanillaOption, double)
    {
        com.opengamma.analytics.financial.model.volatility.smile.function.SABRHaganAlternativeVolatilityFunction r0;
        com.opengamma.analytics.financial.model.option.pricing.analytic.formula.EuropeanVanillaOption r1;
        double d0, d1, d2;
        com.opengamma.analytics.financial.model.volatility.smile.function.SABRHaganAlternativeVolatilityFunction$1 $r2;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.smile.function.SABRHaganAlternativeVolatilityFunction;

        r1 := @parameter0: com.opengamma.analytics.financial.model.option.pricing.analytic.formula.EuropeanVanillaOption;

        d0 := @parameter1: double;

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object,java.lang.String)>(r1, "option");

        d1 = virtualinvoke r1.<com.opengamma.analytics.financial.model.option.pricing.analytic.formula.EuropeanVanillaOption: double getStrike()>();

        d2 = virtualinvoke r1.<com.opengamma.analytics.financial.model.option.pricing.analytic.formula.EuropeanVanillaOption: double getTimeToExpiry()>();

        $r2 = new com.opengamma.analytics.financial.model.volatility.smile.function.SABRHaganAlternativeVolatilityFunction$1;

        specialinvoke $r2.<com.opengamma.analytics.financial.model.volatility.smile.function.SABRHaganAlternativeVolatilityFunction$1: void <init>(com.opengamma.analytics.financial.model.volatility.smile.function.SABRHaganAlternativeVolatilityFunction,double,double,double)>(r0, d0, d1, d2);

        return $r2;
    }

    public int hashCode()
    {
        com.opengamma.analytics.financial.model.volatility.smile.function.SABRHaganAlternativeVolatilityFunction r0;
        java.lang.String $r1;
        int $i0;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.smile.function.SABRHaganAlternativeVolatilityFunction;

        $r1 = virtualinvoke r0.<com.opengamma.analytics.financial.model.volatility.smile.function.SABRHaganAlternativeVolatilityFunction: java.lang.String toString()>();

        $i0 = virtualinvoke $r1.<java.lang.String: int hashCode()>();

        return $i0;
    }

    public boolean equals(java.lang.Object)
    {
        com.opengamma.analytics.financial.model.volatility.smile.function.SABRHaganAlternativeVolatilityFunction r0;
        java.lang.Object r1;
        java.lang.Class $r2, $r3;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.smile.function.SABRHaganAlternativeVolatilityFunction;

        r1 := @parameter0: java.lang.Object;

        if r1 != null goto label1;

        return 0;

     label1:
        if r0 != r1 goto label2;

        return 1;

     label2:
        $r2 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        if $r2 == $r3 goto label3;

        return 0;

     label3:
        return 1;
    }

    public java.lang.String toString()
    {
        com.opengamma.analytics.financial.model.volatility.smile.function.SABRHaganAlternativeVolatilityFunction r0;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.smile.function.SABRHaganAlternativeVolatilityFunction;

        return "SABR (Hagan alternative)";
    }

    static org.slf4j.Logger access$000()
    {
        org.slf4j.Logger $r0;

        $r0 = <com.opengamma.analytics.financial.model.volatility.smile.function.SABRHaganAlternativeVolatilityFunction: org.slf4j.Logger s_logger>;

        return $r0;
    }

    static void <clinit>()
    {
        org.slf4j.Logger $r0;

        <com.opengamma.analytics.financial.model.volatility.smile.function.SABRHaganAlternativeVolatilityFunction: double EPS> = 1.0E-15;

        <com.opengamma.analytics.financial.model.volatility.smile.function.SABRHaganAlternativeVolatilityFunction: double CUTOFF_MONEYNESS> = 1.0E-6;

        $r0 = staticinvoke <org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>(class "com/opengamma/analytics/financial/model/volatility/smile/function/SABRHaganAlternativeVolatilityFunction");

        <com.opengamma.analytics.financial.model.volatility.smile.function.SABRHaganAlternativeVolatilityFunction: org.slf4j.Logger s_logger> = $r0;

        return;
    }
}
