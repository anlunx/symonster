final class com.opengamma.analytics.financial.model.volatility.surface.MixedLogNormalVolatilitySurface$3 extends java.lang.Object implements com.opengamma.analytics.math.function.Function
{
    final com.opengamma.analytics.financial.model.interestrate.curve.ForwardCurve val$fwdCurve;
    final double val$rootT0;
    final int val$n;
    final double[] val$w;
    final double[] val$mu;
    final double[] val$sigma;

    void <init>(com.opengamma.analytics.financial.model.interestrate.curve.ForwardCurve, double, int, double[], double[], double[])
    {
        com.opengamma.analytics.financial.model.volatility.surface.MixedLogNormalVolatilitySurface$3 r0;
        com.opengamma.analytics.financial.model.interestrate.curve.ForwardCurve r1;
        double d0;
        int i0;
        double[] r2, r3, r4;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.surface.MixedLogNormalVolatilitySurface$3;

        r1 := @parameter0: com.opengamma.analytics.financial.model.interestrate.curve.ForwardCurve;

        d0 := @parameter1: double;

        i0 := @parameter2: int;

        r2 := @parameter3: double[];

        r3 := @parameter4: double[];

        r4 := @parameter5: double[];

        r0.<com.opengamma.analytics.financial.model.volatility.surface.MixedLogNormalVolatilitySurface$3: com.opengamma.analytics.financial.model.interestrate.curve.ForwardCurve val$fwdCurve> = r1;

        r0.<com.opengamma.analytics.financial.model.volatility.surface.MixedLogNormalVolatilitySurface$3: double val$rootT0> = d0;

        r0.<com.opengamma.analytics.financial.model.volatility.surface.MixedLogNormalVolatilitySurface$3: int val$n> = i0;

        r0.<com.opengamma.analytics.financial.model.volatility.surface.MixedLogNormalVolatilitySurface$3: double[] val$w> = r2;

        r0.<com.opengamma.analytics.financial.model.volatility.surface.MixedLogNormalVolatilitySurface$3: double[] val$mu> = r3;

        r0.<com.opengamma.analytics.financial.model.volatility.surface.MixedLogNormalVolatilitySurface$3: double[] val$sigma> = r4;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public transient java.lang.Double evaluate(java.lang.Double[])
    {
        com.opengamma.analytics.financial.model.volatility.surface.MixedLogNormalVolatilitySurface$3 r0;
        java.lang.Double[] r1, $r34;
        double d0, d1, d2, d3, d4, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21, $d22, $d23, $d24, $d25, $d26, $d27, $d28, $d29, $d30, $d31, $d32, $d33, $d34, $d35, $d36, $d37, $d38, $d39, $d40, $d41, $d42, $d43, $d44, $d45, $d46, $d47, $d48, $d49, $d50, $d51, $d52, $d53, $d54, $d55, $d56, $d57, $d58, $d59, $d60, $d61, $d62, $d63, $d64, $d65, $d66, $d67, $d68, $d69, $d70, $d71, $d72, d73, d74, d75, d76, d77, d78, d79, d80, d81, d82, d83, $d85, d86, $d87, $d88, $d89, $d90, $d91, $d92, $d93, $d94, $d95, $d96, $d97, $d98, $d99, d100;
        boolean z0, $z1, $z2;
        double[] r2, r3, $r13, $r20, $r21, $r22, $r23, $r24, $r25, $r26, $r27, $r28, $r29, $r30, $r31, $r32, $r33, r38, r39, $r40, $r41, $r42;
        java.lang.Double $r4, $r5, $r12, $r15, $r17, $r19, $r35, $r36, $r37;
        com.opengamma.analytics.financial.model.interestrate.curve.ForwardCurve $r6;
        byte $b0, $b1, $b2, $b3, $b11, $b12, $b13, $b14;
        int $i4, $i5, $i6, $i7, $i8, $i9, $i10, i15, $i16, i17, i18, i19, i20;
        com.opengamma.analytics.math.MathException $r7;
        java.lang.StringBuilder $r8, $r9, $r10;
        java.lang.String $r11;
        com.opengamma.analytics.math.statistics.distribution.ProbabilityDistribution $r14, $r16, $r18;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.surface.MixedLogNormalVolatilitySurface$3;

        r1 := @parameter0: java.lang.Double[];

        $r4 = r1[0];

        $d6 = virtualinvoke $r4.<java.lang.Double: double doubleValue()>();

        d0 = staticinvoke <java.lang.Math: double max(double,double)>(1.0E-12, $d6);

        $r5 = r1[1];

        d1 = virtualinvoke $r5.<java.lang.Double: double doubleValue()>();

        $r6 = r0.<com.opengamma.analytics.financial.model.volatility.surface.MixedLogNormalVolatilitySurface$3: com.opengamma.analytics.financial.model.interestrate.curve.ForwardCurve val$fwdCurve>;

        d2 = virtualinvoke $r6.<com.opengamma.analytics.financial.model.interestrate.curve.ForwardCurve: double getForward(double)>(d0);

        d3 = staticinvoke <java.lang.Math: double sqrt(double)>(d0);

        $b0 = d1 cmpl d2;

        if $b0 < 0 goto label01;

        $z2 = 1;

        goto label02;

     label01:
        $z2 = 0;

     label02:
        z0 = $z2;

        d73 = d1 / d2;

        $b1 = d0 cmpg 1.0E-4;

        if $b1 >= 0 goto label03;

        $d70 = r0.<com.opengamma.analytics.financial.model.volatility.surface.MixedLogNormalVolatilitySurface$3: double val$rootT0>;

        $d71 = $d70 / d3;

        $d72 = staticinvoke <java.lang.Math: double pow(double,double)>(d73, $d71);

        d74 = d2 * $d72;

        $r34 = newarray (java.lang.Double)[2];

        $r35 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(1.0E-4);

        $r34[0] = $r35;

        $r36 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d74);

        $r34[1] = $r36;

        $r37 = virtualinvoke r0.<com.opengamma.analytics.financial.model.volatility.surface.MixedLogNormalVolatilitySurface$3: java.lang.Double evaluate(java.lang.Double[])>($r34);

        return $r37;

     label03:
        $d7 = d3 * 100.0;

        d75 = staticinvoke <java.lang.Math: double exp(double)>($d7);

        $b2 = d73 cmpl d75;

        if $b2 <= 0 goto label04;

        d73 = d75;

        goto label05;

     label04:
        d76 = 1.0 / d75;

        $b3 = d73 cmpg d76;

        if $b3 >= 0 goto label05;

        d73 = d76;

     label05:
        d77 = 0.0;

        d78 = 0.0;

        i15 = 0;

     label06:
        $i16 = r0.<com.opengamma.analytics.financial.model.volatility.surface.MixedLogNormalVolatilitySurface$3: int val$n>;

        if i15 >= $i16 goto label07;

        $r31 = r0.<com.opengamma.analytics.financial.model.volatility.surface.MixedLogNormalVolatilitySurface$3: double[] val$w>;

        $d66 = $r31[i15];

        $r32 = r0.<com.opengamma.analytics.financial.model.volatility.surface.MixedLogNormalVolatilitySurface$3: double[] val$mu>;

        $d64 = $r32[i15];

        $d65 = d0 * $d64;

        $d67 = staticinvoke <java.lang.Math: double exp(double)>($d65);

        d79 = $d66 * $d67;

        d77 = d77 + d79;

        $r33 = r0.<com.opengamma.analytics.financial.model.volatility.surface.MixedLogNormalVolatilitySurface$3: double[] val$mu>;

        $d68 = $r33[i15];

        $d69 = d79 * $d68;

        d78 = d78 + $d69;

        i15 = i15 + 1;

        goto label06;

     label07:
        d80 = d78 / d77;

        $i4 = r0.<com.opengamma.analytics.financial.model.volatility.surface.MixedLogNormalVolatilitySurface$3: int val$n>;

        r38 = newarray (double)[$i4];

        $i5 = r0.<com.opengamma.analytics.financial.model.volatility.surface.MixedLogNormalVolatilitySurface$3: int val$n>;

        r39 = newarray (double)[$i5];

        $i6 = r0.<com.opengamma.analytics.financial.model.volatility.surface.MixedLogNormalVolatilitySurface$3: int val$n>;

        r2 = newarray (double)[$i6];

        $i7 = r0.<com.opengamma.analytics.financial.model.volatility.surface.MixedLogNormalVolatilitySurface$3: int val$n>;

        r3 = newarray (double)[$i7];

        d81 = #-Infinity;

        i17 = 0;

        i18 = 0;

     label08:
        $i8 = r0.<com.opengamma.analytics.financial.model.volatility.surface.MixedLogNormalVolatilitySurface$3: int val$n>;

        if i18 >= $i8 goto label10;

        $r24 = r0.<com.opengamma.analytics.financial.model.volatility.surface.MixedLogNormalVolatilitySurface$3: double[] val$mu>;

        $d37 = $r24[i18];

        $d38 = d0 * $d37;

        $d39 = staticinvoke <java.lang.Math: double exp(double)>($d38);

        $d40 = $d39 / d77;

        r2[i18] = $d40;

        $d41 = r2[i18];

        $d42 = $d41 / d73;

        $d43 = staticinvoke <java.lang.Math: double log(double)>($d42);

        $r25 = r0.<com.opengamma.analytics.financial.model.volatility.surface.MixedLogNormalVolatilitySurface$3: double[] val$sigma>;

        $d44 = $r25[i18];

        $d46 = 0.5 * $d44;

        $r26 = r0.<com.opengamma.analytics.financial.model.volatility.surface.MixedLogNormalVolatilitySurface$3: double[] val$sigma>;

        $d45 = $r26[i18];

        $d47 = $d46 * $d45;

        $d48 = $d47 * d0;

        $d50 = $d43 + $d48;

        $r27 = r0.<com.opengamma.analytics.financial.model.volatility.surface.MixedLogNormalVolatilitySurface$3: double[] val$sigma>;

        $d49 = $r27[i18];

        $d51 = $d50 / $d49;

        $d52 = $d51 / d3;

        r38[i18] = $d52;

        $d54 = r38[i18];

        $d53 = r38[i18];

        $d55 = $d54 * $d53;

        r39[i18] = $d55;

        $r28 = r0.<com.opengamma.analytics.financial.model.volatility.surface.MixedLogNormalVolatilitySurface$3: double[] val$w>;

        $d56 = $r28[i18];

        $b13 = $d56 cmpl 0.0;

        if $b13 <= 0 goto label09;

        $r29 = r0.<com.opengamma.analytics.financial.model.volatility.surface.MixedLogNormalVolatilitySurface$3: double[] val$w>;

        $d57 = $r29[i18];

        $d58 = staticinvoke <java.lang.Math: double log(double)>($d57);

        $r30 = r0.<com.opengamma.analytics.financial.model.volatility.surface.MixedLogNormalVolatilitySurface$3: double[] val$mu>;

        $d59 = $r30[i18];

        $d60 = d0 * $d59;

        $d63 = $d58 + $d60;

        $d61 = r39[i18];

        $d62 = $d61 / 2.0;

        d4 = $d63 - $d62;

        $b14 = d4 cmpl d81;

        if $b14 <= 0 goto label09;

        i17 = i18;

        d81 = d4;

     label09:
        i18 = i18 + 1;

        goto label08;

     label10:
        r3[i17] = 1.0;

        i19 = 0;

     label11:
        $i9 = r0.<com.opengamma.analytics.financial.model.volatility.surface.MixedLogNormalVolatilitySurface$3: int val$n>;

        if i19 >= $i9 goto label13;

        if i19 == i17 goto label12;

        $r20 = r0.<com.opengamma.analytics.financial.model.volatility.surface.MixedLogNormalVolatilitySurface$3: double[] val$w>;

        $d24 = $r20[i19];

        $r21 = r0.<com.opengamma.analytics.financial.model.volatility.surface.MixedLogNormalVolatilitySurface$3: double[] val$w>;

        $d23 = $r21[i17];

        $d34 = $d24 / $d23;

        $r22 = r0.<com.opengamma.analytics.financial.model.volatility.surface.MixedLogNormalVolatilitySurface$3: double[] val$mu>;

        $d26 = $r22[i19];

        $r23 = r0.<com.opengamma.analytics.financial.model.volatility.surface.MixedLogNormalVolatilitySurface$3: double[] val$mu>;

        $d25 = $r23[i17];

        $d27 = $d26 - $d25;

        $d32 = d0 * $d27;

        $d29 = r39[i17];

        $d28 = r39[i19];

        $d30 = $d29 - $d28;

        $d31 = 0.5 * $d30;

        $d33 = $d32 + $d31;

        $d35 = staticinvoke <java.lang.Math: double exp(double)>($d33);

        $d36 = $d34 * $d35;

        r3[i19] = $d36;

     label12:
        i19 = i19 + 1;

        goto label11;

     label13:
        d82 = 0.0;

        d83 = 0.0;

        i20 = 0;

     label14:
        $i10 = r0.<com.opengamma.analytics.financial.model.volatility.surface.MixedLogNormalVolatilitySurface$3: int val$n>;

        if i20 >= $i10 goto label22;

        $r13 = r0.<com.opengamma.analytics.financial.model.volatility.surface.MixedLogNormalVolatilitySurface$3: double[] val$w>;

        $d9 = $r13[i20];

        $b11 = $d9 cmpl 0.0;

        if $b11 <= 0 goto label21;

        $d10 = r39[i20];

        $b12 = $d10 cmpl 100.0;

        if $b12 <= 0 goto label17;

        if z0 == 0 goto label15;

        $d85 = 1.0;

        goto label16;

     label15:
        $d85 = -1.0;

     label16:
        $d17 = r38[i20];

        $d18 = staticinvoke <java.lang.Math: double abs(double)>($d17);

        $d19 = r38[i20];

        $d20 = staticinvoke <java.lang.Math: double abs(double)>($d19);

        $d21 = 0.969008 / $d20;

        $d22 = $d18 + $d21;

        d86 = $d85 / $d22;

        goto label20;

     label17:
        if z0 == 0 goto label18;

        $r18 = staticinvoke <com.opengamma.analytics.financial.model.volatility.surface.MixedLogNormalVolatilitySurface: com.opengamma.analytics.math.statistics.distribution.ProbabilityDistribution access$000()>();

        $d16 = r38[i20];

        $r19 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d16);

        $d87 = interfaceinvoke $r18.<com.opengamma.analytics.math.statistics.distribution.ProbabilityDistribution: double getCDF(java.lang.Object)>($r19);

        goto label19;

     label18:
        $r14 = staticinvoke <com.opengamma.analytics.financial.model.volatility.surface.MixedLogNormalVolatilitySurface: com.opengamma.analytics.math.statistics.distribution.ProbabilityDistribution access$000()>();

        $d11 = r38[i20];

        $d12 = neg $d11;

        $r15 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d12);

        $d13 = interfaceinvoke $r14.<com.opengamma.analytics.math.statistics.distribution.ProbabilityDistribution: double getCDF(java.lang.Object)>($r15);

        $d87 = neg $d13;

     label19:
        $r16 = staticinvoke <com.opengamma.analytics.financial.model.volatility.surface.MixedLogNormalVolatilitySurface: com.opengamma.analytics.math.statistics.distribution.ProbabilityDistribution access$000()>();

        $d14 = r38[i20];

        $r17 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d14);

        $d15 = interfaceinvoke $r16.<com.opengamma.analytics.math.statistics.distribution.ProbabilityDistribution: double getPDF(java.lang.Object)>($r17);

        d86 = $d87 / $d15;

     label20:
        $d88 = r3[i20];

        $r40 = r0.<com.opengamma.analytics.financial.model.volatility.surface.MixedLogNormalVolatilitySurface$3: double[] val$sigma>;

        $d89 = $r40[i20];

        $d90 = $d88 / $d89;

        d82 = d82 + $d90;

        $d91 = r3[i20];

        $r41 = r0.<com.opengamma.analytics.financial.model.volatility.surface.MixedLogNormalVolatilitySurface$3: double[] val$sigma>;

        $d92 = $r41[i20];

        $d93 = 2.0 * d3;

        $d94 = $d93 * d86;

        $r42 = r0.<com.opengamma.analytics.financial.model.volatility.surface.MixedLogNormalVolatilitySurface$3: double[] val$mu>;

        $d95 = $r42[i20];

        $d96 = $d95 - d80;

        $d97 = $d94 * $d96;

        $d98 = $d92 + $d97;

        $d99 = $d91 * $d98;

        d83 = d83 + $d99;

     label21:
        i20 = i20 + 1;

        goto label14;

     label22:
        $d8 = d83 / d82;

        d100 = staticinvoke <java.lang.Math: double sqrt(double)>($d8);

        $z1 = staticinvoke <com.google.common.primitives.Doubles: boolean isFinite(double)>(d100);

        if $z1 == 0 goto label23;

        $r12 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d100);

        return $r12;

     label23:
        $r7 = new com.opengamma.analytics.math.MathException;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Local Volatility failure: ");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>(d100);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<com.opengamma.analytics.math.MathException: void <init>(java.lang.String)>($r11);

        throw $r7;
    }

    public volatile java.lang.Object evaluate(java.lang.Object[])
    {
        com.opengamma.analytics.financial.model.volatility.surface.MixedLogNormalVolatilitySurface$3 r0;
        java.lang.Object[] r1;
        java.lang.Double[] $r2;
        java.lang.Double $r3;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.surface.MixedLogNormalVolatilitySurface$3;

        r1 := @parameter0: java.lang.Object[];

        $r2 = (java.lang.Double[]) r1;

        $r3 = virtualinvoke r0.<com.opengamma.analytics.financial.model.volatility.surface.MixedLogNormalVolatilitySurface$3: java.lang.Double evaluate(java.lang.Double[])>($r2);

        return $r3;
    }
}
