public class org.jcp.xml.dsig.internal.MacOutputStream extends java.io.ByteArrayOutputStream
{
    private final javax.crypto.Mac mac;

    public void <init>(javax.crypto.Mac)
    {
        org.jcp.xml.dsig.internal.MacOutputStream r0;
        javax.crypto.Mac r1;

        r0 := @this: org.jcp.xml.dsig.internal.MacOutputStream;

        r1 := @parameter0: javax.crypto.Mac;

        specialinvoke r0.<java.io.ByteArrayOutputStream: void <init>()>();

        r0.<org.jcp.xml.dsig.internal.MacOutputStream: javax.crypto.Mac mac> = r1;

        return;
    }

    public void write(byte[])
    {
        org.jcp.xml.dsig.internal.MacOutputStream r0;
        byte[] r1;
        int $i0;
        javax.crypto.Mac $r2;

        r0 := @this: org.jcp.xml.dsig.internal.MacOutputStream;

        r1 := @parameter0: byte[];

        $i0 = lengthof r1;

        specialinvoke r0.<java.io.ByteArrayOutputStream: void write(byte[],int,int)>(r1, 0, $i0);

        $r2 = r0.<org.jcp.xml.dsig.internal.MacOutputStream: javax.crypto.Mac mac>;

        virtualinvoke $r2.<javax.crypto.Mac: void update(byte[])>(r1);

        return;
    }

    public void write(int)
    {
        org.jcp.xml.dsig.internal.MacOutputStream r0;
        int i0;
        byte $b1;
        javax.crypto.Mac $r1;

        r0 := @this: org.jcp.xml.dsig.internal.MacOutputStream;

        i0 := @parameter0: int;

        specialinvoke r0.<java.io.ByteArrayOutputStream: void write(int)>(i0);

        $r1 = r0.<org.jcp.xml.dsig.internal.MacOutputStream: javax.crypto.Mac mac>;

        $b1 = (byte) i0;

        virtualinvoke $r1.<javax.crypto.Mac: void update(byte)>($b1);

        return;
    }

    public void write(byte[], int, int)
    {
        org.jcp.xml.dsig.internal.MacOutputStream r0;
        byte[] r1;
        int i0, i1;
        javax.crypto.Mac $r2;

        r0 := @this: org.jcp.xml.dsig.internal.MacOutputStream;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        specialinvoke r0.<java.io.ByteArrayOutputStream: void write(byte[],int,int)>(r1, i0, i1);

        $r2 = r0.<org.jcp.xml.dsig.internal.MacOutputStream: javax.crypto.Mac mac>;

        virtualinvoke $r2.<javax.crypto.Mac: void update(byte[],int,int)>(r1, i0, i1);

        return;
    }
}
