public class org.apache.commons.lang.LocaleUtils extends java.lang.Object
{
    private static java.util.List cAvailableLocaleList;
    private static java.util.Set cAvailableLocaleSet;
    private static final java.util.Map cLanguagesByCountry;
    private static final java.util.Map cCountriesByLanguage;

    public void <init>()
    {
        org.apache.commons.lang.LocaleUtils r0;

        r0 := @this: org.apache.commons.lang.LocaleUtils;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static java.util.Locale toLocale(java.lang.String)
    {
        java.lang.String r0, $r2, $r3, $r4, $r9, $r11, $r12, $r14, $r15, $r20, $r26, $r31, $r36;
        int i0;
        char c1, c2, c3, c4, $c5, $c6;
        java.util.Locale $r1, $r10, $r13, $r21;
        java.lang.IllegalArgumentException $r5, $r16, $r22, $r27, $r32;
        java.lang.StringBuffer $r6, $r7, $r8, $r17, $r18, $r19, $r23, $r24, $r25, $r28, $r29, $r30, $r33, $r34, $r35;

        r0 := @parameter0: java.lang.String;

        if r0 != null goto label01;

        return null;

     label01:
        i0 = virtualinvoke r0.<java.lang.String: int length()>();

        if i0 == 2 goto label02;

        if i0 == 5 goto label02;

        if i0 >= 7 goto label02;

        $r22 = new java.lang.IllegalArgumentException;

        $r23 = new java.lang.StringBuffer;

        specialinvoke $r23.<java.lang.StringBuffer: void <init>()>();

        $r24 = virtualinvoke $r23.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Invalid locale format: ");

        $r25 = virtualinvoke $r24.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r0);

        $r26 = virtualinvoke $r25.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r22.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r26);

        throw $r22;

     label02:
        c1 = virtualinvoke r0.<java.lang.String: char charAt(int)>(0);

        c2 = virtualinvoke r0.<java.lang.String: char charAt(int)>(1);

        if c1 < 97 goto label03;

        if c1 > 122 goto label03;

        if c2 < 97 goto label03;

        if c2 <= 122 goto label04;

     label03:
        $r27 = new java.lang.IllegalArgumentException;

        $r28 = new java.lang.StringBuffer;

        specialinvoke $r28.<java.lang.StringBuffer: void <init>()>();

        $r29 = virtualinvoke $r28.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Invalid locale format: ");

        $r30 = virtualinvoke $r29.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r0);

        $r31 = virtualinvoke $r30.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r27.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r31);

        throw $r27;

     label04:
        if i0 != 2 goto label05;

        $r21 = new java.util.Locale;

        specialinvoke $r21.<java.util.Locale: void <init>(java.lang.String,java.lang.String)>(r0, "");

        return $r21;

     label05:
        $c5 = virtualinvoke r0.<java.lang.String: char charAt(int)>(2);

        if $c5 == 95 goto label06;

        $r16 = new java.lang.IllegalArgumentException;

        $r17 = new java.lang.StringBuffer;

        specialinvoke $r17.<java.lang.StringBuffer: void <init>()>();

        $r18 = virtualinvoke $r17.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Invalid locale format: ");

        $r19 = virtualinvoke $r18.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r0);

        $r20 = virtualinvoke $r19.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r16.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r20);

        throw $r16;

     label06:
        c3 = virtualinvoke r0.<java.lang.String: char charAt(int)>(3);

        if c3 != 95 goto label07;

        $r13 = new java.util.Locale;

        $r14 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(0, 2);

        $r15 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int)>(4);

        specialinvoke $r13.<java.util.Locale: void <init>(java.lang.String,java.lang.String,java.lang.String)>($r14, "", $r15);

        return $r13;

     label07:
        c4 = virtualinvoke r0.<java.lang.String: char charAt(int)>(4);

        if c3 < 65 goto label08;

        if c3 > 90 goto label08;

        if c4 < 65 goto label08;

        if c4 <= 90 goto label09;

     label08:
        $r32 = new java.lang.IllegalArgumentException;

        $r33 = new java.lang.StringBuffer;

        specialinvoke $r33.<java.lang.StringBuffer: void <init>()>();

        $r34 = virtualinvoke $r33.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Invalid locale format: ");

        $r35 = virtualinvoke $r34.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r0);

        $r36 = virtualinvoke $r35.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r32.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r36);

        throw $r32;

     label09:
        if i0 != 5 goto label10;

        $r10 = new java.util.Locale;

        $r11 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(0, 2);

        $r12 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(3, 5);

        specialinvoke $r10.<java.util.Locale: void <init>(java.lang.String,java.lang.String)>($r11, $r12);

        return $r10;

     label10:
        $c6 = virtualinvoke r0.<java.lang.String: char charAt(int)>(5);

        if $c6 == 95 goto label11;

        $r5 = new java.lang.IllegalArgumentException;

        $r6 = new java.lang.StringBuffer;

        specialinvoke $r6.<java.lang.StringBuffer: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Invalid locale format: ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r0);

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r9);

        throw $r5;

     label11:
        $r1 = new java.util.Locale;

        $r2 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(0, 2);

        $r3 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(3, 5);

        $r4 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int)>(6);

        specialinvoke $r1.<java.util.Locale: void <init>(java.lang.String,java.lang.String,java.lang.String)>($r2, $r3, $r4);

        return $r1;
    }

    public static java.util.List localeLookupList(java.util.Locale)
    {
        java.util.Locale r0;
        java.util.List $r1;

        r0 := @parameter0: java.util.Locale;

        $r1 = staticinvoke <org.apache.commons.lang.LocaleUtils: java.util.List localeLookupList(java.util.Locale,java.util.Locale)>(r0, r0);

        return $r1;
    }

    public static java.util.List localeLookupList(java.util.Locale, java.util.Locale)
    {
        java.util.Locale r0, r1, $r6, $r8;
        java.util.ArrayList $r3;
        java.lang.String $r4, $r5, $r7, $r9, $r10;
        int $i0, $i1;
        boolean $z1;
        java.util.List $r11;

        r0 := @parameter0: java.util.Locale;

        r1 := @parameter1: java.util.Locale;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>(int)>(4);

        if r0 == null goto label3;

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>(r0);

        $r4 = virtualinvoke r0.<java.util.Locale: java.lang.String getVariant()>();

        $i0 = virtualinvoke $r4.<java.lang.String: int length()>();

        if $i0 <= 0 goto label1;

        $r8 = new java.util.Locale;

        $r9 = virtualinvoke r0.<java.util.Locale: java.lang.String getLanguage()>();

        $r10 = virtualinvoke r0.<java.util.Locale: java.lang.String getCountry()>();

        specialinvoke $r8.<java.util.Locale: void <init>(java.lang.String,java.lang.String)>($r9, $r10);

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>($r8);

     label1:
        $r5 = virtualinvoke r0.<java.util.Locale: java.lang.String getCountry()>();

        $i1 = virtualinvoke $r5.<java.lang.String: int length()>();

        if $i1 <= 0 goto label2;

        $r6 = new java.util.Locale;

        $r7 = virtualinvoke r0.<java.util.Locale: java.lang.String getLanguage()>();

        specialinvoke $r6.<java.util.Locale: void <init>(java.lang.String,java.lang.String)>($r7, "");

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>($r6);

     label2:
        $z1 = interfaceinvoke $r3.<java.util.List: boolean contains(java.lang.Object)>(r1);

        if $z1 != 0 goto label3;

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>(r1);

     label3:
        $r11 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r3);

        return $r11;
    }

    public static java.util.List availableLocaleList()
    {
        java.util.List $r0, $r1;

        $r0 = <org.apache.commons.lang.LocaleUtils: java.util.List cAvailableLocaleList>;

        if $r0 != null goto label1;

        staticinvoke <org.apache.commons.lang.LocaleUtils: void initAvailableLocaleList()>();

     label1:
        $r1 = <org.apache.commons.lang.LocaleUtils: java.util.List cAvailableLocaleList>;

        return $r1;
    }

    private static synchronized void initAvailableLocaleList()
    {
        java.util.List r0, $r1, $r3;
        java.util.Locale[] $r2;

        $r1 = <org.apache.commons.lang.LocaleUtils: java.util.List cAvailableLocaleList>;

        if $r1 != null goto label1;

        $r2 = staticinvoke <java.util.Locale: java.util.Locale[] getAvailableLocales()>();

        r0 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r2);

        $r3 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>(r0);

        <org.apache.commons.lang.LocaleUtils: java.util.List cAvailableLocaleList> = $r3;

     label1:
        return;
    }

    public static java.util.Set availableLocaleSet()
    {
        java.util.Set $r0, $r1;

        $r0 = <org.apache.commons.lang.LocaleUtils: java.util.Set cAvailableLocaleSet>;

        if $r0 != null goto label1;

        staticinvoke <org.apache.commons.lang.LocaleUtils: void initAvailableLocaleSet()>();

     label1:
        $r1 = <org.apache.commons.lang.LocaleUtils: java.util.Set cAvailableLocaleSet>;

        return $r1;
    }

    private static synchronized void initAvailableLocaleSet()
    {
        java.util.Set $r0, $r3;
        java.util.HashSet $r1;
        java.util.List $r2;

        $r0 = <org.apache.commons.lang.LocaleUtils: java.util.Set cAvailableLocaleSet>;

        if $r0 != null goto label1;

        $r1 = new java.util.HashSet;

        $r2 = staticinvoke <org.apache.commons.lang.LocaleUtils: java.util.List availableLocaleList()>();

        specialinvoke $r1.<java.util.HashSet: void <init>(java.util.Collection)>($r2);

        $r3 = staticinvoke <java.util.Collections: java.util.Set unmodifiableSet(java.util.Set)>($r1);

        <org.apache.commons.lang.LocaleUtils: java.util.Set cAvailableLocaleSet> = $r3;

     label1:
        return;
    }

    public static boolean isAvailableLocale(java.util.Locale)
    {
        java.util.Locale r0;
        java.util.List $r1;
        boolean $z0;

        r0 := @parameter0: java.util.Locale;

        $r1 = staticinvoke <org.apache.commons.lang.LocaleUtils: java.util.List availableLocaleList()>();

        $z0 = interfaceinvoke $r1.<java.util.List: boolean contains(java.lang.Object)>(r0);

        return $z0;
    }

    public static java.util.List languagesByCountry(java.lang.String)
    {
        java.lang.String r0, $r9, $r10;
        java.util.List r1, r11;
        java.util.Locale r2;
        java.util.Map $r3, $r5;
        java.lang.Object $r4, $r8;
        java.util.ArrayList $r7;
        int $i0, $i1, i2;
        boolean $z0;

        r0 := @parameter0: java.lang.String;

        $r3 = <org.apache.commons.lang.LocaleUtils: java.util.Map cLanguagesByCountry>;

        $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>(r0);

        r11 = (java.util.List) $r4;

        if r11 != null goto label6;

        if r0 == null goto label4;

        $r7 = new java.util.ArrayList;

        specialinvoke $r7.<java.util.ArrayList: void <init>()>();

        r1 = staticinvoke <org.apache.commons.lang.LocaleUtils: java.util.List availableLocaleList()>();

        i2 = 0;

     label1:
        $i0 = interfaceinvoke r1.<java.util.List: int size()>();

        if i2 >= $i0 goto label3;

        $r8 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i2);

        r2 = (java.util.Locale) $r8;

        $r9 = virtualinvoke r2.<java.util.Locale: java.lang.String getCountry()>();

        $z0 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>($r9);

        if $z0 == 0 goto label2;

        $r10 = virtualinvoke r2.<java.util.Locale: java.lang.String getVariant()>();

        $i1 = virtualinvoke $r10.<java.lang.String: int length()>();

        if $i1 != 0 goto label2;

        interfaceinvoke $r7.<java.util.List: boolean add(java.lang.Object)>(r2);

     label2:
        i2 = i2 + 1;

        goto label1;

     label3:
        r11 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r7);

        goto label5;

     label4:
        r11 = <java.util.Collections: java.util.List EMPTY_LIST>;

     label5:
        $r5 = <org.apache.commons.lang.LocaleUtils: java.util.Map cLanguagesByCountry>;

        interfaceinvoke $r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r0, r11);

     label6:
        return r11;
    }

    public static java.util.List countriesByLanguage(java.lang.String)
    {
        java.lang.String r0, $r9, $r10, $r11;
        java.util.List r1, r12;
        java.util.Locale r2;
        java.util.Map $r3, $r5;
        java.lang.Object $r4, $r8;
        java.util.ArrayList $r7;
        int $i0, $i1, $i2, i3;
        boolean $z0;

        r0 := @parameter0: java.lang.String;

        $r3 = <org.apache.commons.lang.LocaleUtils: java.util.Map cCountriesByLanguage>;

        $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>(r0);

        r12 = (java.util.List) $r4;

        if r12 != null goto label6;

        if r0 == null goto label4;

        $r7 = new java.util.ArrayList;

        specialinvoke $r7.<java.util.ArrayList: void <init>()>();

        r1 = staticinvoke <org.apache.commons.lang.LocaleUtils: java.util.List availableLocaleList()>();

        i3 = 0;

     label1:
        $i0 = interfaceinvoke r1.<java.util.List: int size()>();

        if i3 >= $i0 goto label3;

        $r8 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i3);

        r2 = (java.util.Locale) $r8;

        $r9 = virtualinvoke r2.<java.util.Locale: java.lang.String getLanguage()>();

        $z0 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>($r9);

        if $z0 == 0 goto label2;

        $r10 = virtualinvoke r2.<java.util.Locale: java.lang.String getCountry()>();

        $i1 = virtualinvoke $r10.<java.lang.String: int length()>();

        if $i1 == 0 goto label2;

        $r11 = virtualinvoke r2.<java.util.Locale: java.lang.String getVariant()>();

        $i2 = virtualinvoke $r11.<java.lang.String: int length()>();

        if $i2 != 0 goto label2;

        interfaceinvoke $r7.<java.util.List: boolean add(java.lang.Object)>(r2);

     label2:
        i3 = i3 + 1;

        goto label1;

     label3:
        r12 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r7);

        goto label5;

     label4:
        r12 = <java.util.Collections: java.util.List EMPTY_LIST>;

     label5:
        $r5 = <org.apache.commons.lang.LocaleUtils: java.util.Map cCountriesByLanguage>;

        interfaceinvoke $r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r0, r12);

     label6:
        return r12;
    }

    static void <clinit>()
    {
        java.util.HashMap $r0, $r2;
        java.util.Map $r1, $r3;

        $r0 = new java.util.HashMap;

        specialinvoke $r0.<java.util.HashMap: void <init>()>();

        $r1 = staticinvoke <java.util.Collections: java.util.Map synchronizedMap(java.util.Map)>($r0);

        <org.apache.commons.lang.LocaleUtils: java.util.Map cLanguagesByCountry> = $r1;

        $r2 = new java.util.HashMap;

        specialinvoke $r2.<java.util.HashMap: void <init>()>();

        $r3 = staticinvoke <java.util.Collections: java.util.Map synchronizedMap(java.util.Map)>($r2);

        <org.apache.commons.lang.LocaleUtils: java.util.Map cCountriesByLanguage> = $r3;

        return;
    }
}
