public class org.apache.commons.math.stat.descriptive.moment.VectorialCovariance extends java.lang.Object implements java.io.Serializable
{
    private static final long serialVersionUID;
    private final double[] sums;
    private final double[] productsSums;
    private final boolean isBiasCorrected;
    private long n;

    public void <init>(int, boolean)
    {
        org.apache.commons.math.stat.descriptive.moment.VectorialCovariance r0;
        int i0, $i1, $i2, $i3;
        boolean z0;
        double[] $r1, $r2;

        r0 := @this: org.apache.commons.math.stat.descriptive.moment.VectorialCovariance;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = newarray (double)[i0];

        r0.<org.apache.commons.math.stat.descriptive.moment.VectorialCovariance: double[] sums> = $r1;

        $i1 = i0 + 1;

        $i2 = i0 * $i1;

        $i3 = $i2 / 2;

        $r2 = newarray (double)[$i3];

        r0.<org.apache.commons.math.stat.descriptive.moment.VectorialCovariance: double[] productsSums> = $r2;

        r0.<org.apache.commons.math.stat.descriptive.moment.VectorialCovariance: long n> = 0L;

        r0.<org.apache.commons.math.stat.descriptive.moment.VectorialCovariance: boolean isBiasCorrected> = z0;

        return;
    }

    public void increment(double[]) throws org.apache.commons.math.DimensionMismatchException
    {
        org.apache.commons.math.stat.descriptive.moment.VectorialCovariance r0;
        double[] r1, $r2, $r3, $r4, $r6;
        int $i0, $i1, $i2, $i5, $i6, $i7, i8, i9, i10;
        long $l3, $l4;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7;
        org.apache.commons.math.DimensionMismatchException $r5;

        r0 := @this: org.apache.commons.math.stat.descriptive.moment.VectorialCovariance;

        r1 := @parameter0: double[];

        $i1 = lengthof r1;

        $r2 = r0.<org.apache.commons.math.stat.descriptive.moment.VectorialCovariance: double[] sums>;

        $i0 = lengthof $r2;

        if $i1 == $i0 goto label1;

        $r5 = new org.apache.commons.math.DimensionMismatchException;

        $i7 = lengthof r1;

        $r6 = r0.<org.apache.commons.math.stat.descriptive.moment.VectorialCovariance: double[] sums>;

        $i6 = lengthof $r6;

        specialinvoke $r5.<org.apache.commons.math.DimensionMismatchException: void <init>(int,int)>($i7, $i6);

        throw $r5;

     label1:
        i8 = 0;

        i9 = 0;

     label2:
        $i2 = lengthof r1;

        if i9 >= $i2 goto label5;

        $r3 = r0.<org.apache.commons.math.stat.descriptive.moment.VectorialCovariance: double[] sums>;

        $d1 = $r3[i9];

        $d0 = r1[i9];

        $d2 = $d1 + $d0;

        $r3[i9] = $d2;

        i10 = 0;

     label3:
        if i10 > i9 goto label4;

        $r4 = r0.<org.apache.commons.math.stat.descriptive.moment.VectorialCovariance: double[] productsSums>;

        $i5 = i8;

        i8 = i8 + 1;

        $d6 = $r4[$i5];

        $d4 = r1[i9];

        $d3 = r1[i10];

        $d5 = $d4 * $d3;

        $d7 = $d6 + $d5;

        $r4[$i5] = $d7;

        i10 = i10 + 1;

        goto label3;

     label4:
        i9 = i9 + 1;

        goto label2;

     label5:
        $l3 = r0.<org.apache.commons.math.stat.descriptive.moment.VectorialCovariance: long n>;

        $l4 = $l3 + 1L;

        r0.<org.apache.commons.math.stat.descriptive.moment.VectorialCovariance: long n> = $l4;

        return;
    }

    public org.apache.commons.math.linear.RealMatrix getResult()
    {
        org.apache.commons.math.stat.descriptive.moment.VectorialCovariance r0;
        int i0, $i6, i9, i10, i11;
        org.apache.commons.math.linear.RealMatrix r1;
        double d0, d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9;
        double[] $r2, $r3, $r4, $r5;
        long $l1, $l3, $l4, $l5, $l7, $l8;
        byte $b2;
        boolean $z0;

        r0 := @this: org.apache.commons.math.stat.descriptive.moment.VectorialCovariance;

        $r2 = r0.<org.apache.commons.math.stat.descriptive.moment.VectorialCovariance: double[] sums>;

        i0 = lengthof $r2;

        r1 = staticinvoke <org.apache.commons.math.linear.MatrixUtils: org.apache.commons.math.linear.RealMatrix createRealMatrix(int,int)>(i0, i0);

        $l1 = r0.<org.apache.commons.math.stat.descriptive.moment.VectorialCovariance: long n>;

        $b2 = $l1 cmp 1L;

        if $b2 <= 0 goto label6;

        $l3 = r0.<org.apache.commons.math.stat.descriptive.moment.VectorialCovariance: long n>;

        $z0 = r0.<org.apache.commons.math.stat.descriptive.moment.VectorialCovariance: boolean isBiasCorrected>;

        if $z0 == 0 goto label1;

        $l7 = r0.<org.apache.commons.math.stat.descriptive.moment.VectorialCovariance: long n>;

        $l8 = $l7 - 1L;

        goto label2;

     label1:
        $l8 = r0.<org.apache.commons.math.stat.descriptive.moment.VectorialCovariance: long n>;

     label2:
        $l4 = $l3 * $l8;

        $d2 = (double) $l4;

        d0 = 1.0 / $d2;

        i9 = 0;

        i10 = 0;

     label3:
        if i10 >= i0 goto label6;

        i11 = 0;

     label4:
        if i11 > i10 goto label5;

        $l5 = r0.<org.apache.commons.math.stat.descriptive.moment.VectorialCovariance: long n>;

        $d4 = (double) $l5;

        $r3 = r0.<org.apache.commons.math.stat.descriptive.moment.VectorialCovariance: double[] productsSums>;

        $i6 = i9;

        i9 = i9 + 1;

        $d3 = $r3[$i6];

        $d8 = $d4 * $d3;

        $r4 = r0.<org.apache.commons.math.stat.descriptive.moment.VectorialCovariance: double[] sums>;

        $d6 = $r4[i10];

        $r5 = r0.<org.apache.commons.math.stat.descriptive.moment.VectorialCovariance: double[] sums>;

        $d5 = $r5[i11];

        $d7 = $d6 * $d5;

        $d9 = $d8 - $d7;

        d1 = d0 * $d9;

        interfaceinvoke r1.<org.apache.commons.math.linear.RealMatrix: void setEntry(int,int,double)>(i10, i11, d1);

        interfaceinvoke r1.<org.apache.commons.math.linear.RealMatrix: void setEntry(int,int,double)>(i11, i10, d1);

        i11 = i11 + 1;

        goto label4;

     label5:
        i10 = i10 + 1;

        goto label3;

     label6:
        return r1;
    }

    public long getN()
    {
        org.apache.commons.math.stat.descriptive.moment.VectorialCovariance r0;
        long $l0;

        r0 := @this: org.apache.commons.math.stat.descriptive.moment.VectorialCovariance;

        $l0 = r0.<org.apache.commons.math.stat.descriptive.moment.VectorialCovariance: long n>;

        return $l0;
    }

    public void clear()
    {
        org.apache.commons.math.stat.descriptive.moment.VectorialCovariance r0;
        double[] $r1, $r2;

        r0 := @this: org.apache.commons.math.stat.descriptive.moment.VectorialCovariance;

        r0.<org.apache.commons.math.stat.descriptive.moment.VectorialCovariance: long n> = 0L;

        $r1 = r0.<org.apache.commons.math.stat.descriptive.moment.VectorialCovariance: double[] sums>;

        staticinvoke <java.util.Arrays: void fill(double[],double)>($r1, 0.0);

        $r2 = r0.<org.apache.commons.math.stat.descriptive.moment.VectorialCovariance: double[] productsSums>;

        staticinvoke <java.util.Arrays: void fill(double[],double)>($r2, 0.0);

        return;
    }

    public int hashCode()
    {
        org.apache.commons.math.stat.descriptive.moment.VectorialCovariance r0;
        boolean $z0;
        int $i1, $i6, $i7, $i8, $i9, $i10, $i11, i14, i15, i16, i17;
        long $l2, $l3, $l4, $l5;
        double[] $r1, $r2;
        short $s13;

        r0 := @this: org.apache.commons.math.stat.descriptive.moment.VectorialCovariance;

        $i1 = 31 * 1;

        $z0 = r0.<org.apache.commons.math.stat.descriptive.moment.VectorialCovariance: boolean isBiasCorrected>;

        if $z0 == 0 goto label1;

        $s13 = 1231;

        goto label2;

     label1:
        $s13 = 1237;

     label2:
        i14 = $i1 + $s13;

        $i7 = 31 * i14;

        $l4 = r0.<org.apache.commons.math.stat.descriptive.moment.VectorialCovariance: long n>;

        $l2 = r0.<org.apache.commons.math.stat.descriptive.moment.VectorialCovariance: long n>;

        $l3 = $l2 >>> 32;

        $l5 = $l4 ^ $l3;

        $i6 = (int) $l5;

        i15 = $i7 + $i6;

        $i8 = 31 * i15;

        $r1 = r0.<org.apache.commons.math.stat.descriptive.moment.VectorialCovariance: double[] productsSums>;

        $i9 = staticinvoke <java.util.Arrays: int hashCode(double[])>($r1);

        i16 = $i8 + $i9;

        $i10 = 31 * i16;

        $r2 = r0.<org.apache.commons.math.stat.descriptive.moment.VectorialCovariance: double[] sums>;

        $i11 = staticinvoke <java.util.Arrays: int hashCode(double[])>($r2);

        i17 = $i10 + $i11;

        return i17;
    }

    public boolean equals(java.lang.Object)
    {
        org.apache.commons.math.stat.descriptive.moment.VectorialCovariance r0, r2;
        java.lang.Object r1;
        boolean $z0, $z1, $z2, $z3, $z4;
        long $l0, $l1;
        byte $b2;
        double[] $r3, $r4, $r5, $r6;

        r0 := @this: org.apache.commons.math.stat.descriptive.moment.VectorialCovariance;

        r1 := @parameter0: java.lang.Object;

        if r0 != r1 goto label1;

        return 1;

     label1:
        $z0 = r1 instanceof org.apache.commons.math.stat.descriptive.moment.VectorialCovariance;

        if $z0 != 0 goto label2;

        return 0;

     label2:
        r2 = (org.apache.commons.math.stat.descriptive.moment.VectorialCovariance) r1;

        $z2 = r0.<org.apache.commons.math.stat.descriptive.moment.VectorialCovariance: boolean isBiasCorrected>;

        $z1 = r2.<org.apache.commons.math.stat.descriptive.moment.VectorialCovariance: boolean isBiasCorrected>;

        if $z2 == $z1 goto label3;

        return 0;

     label3:
        $l1 = r0.<org.apache.commons.math.stat.descriptive.moment.VectorialCovariance: long n>;

        $l0 = r2.<org.apache.commons.math.stat.descriptive.moment.VectorialCovariance: long n>;

        $b2 = $l1 cmp $l0;

        if $b2 == 0 goto label4;

        return 0;

     label4:
        $r4 = r0.<org.apache.commons.math.stat.descriptive.moment.VectorialCovariance: double[] productsSums>;

        $r3 = r2.<org.apache.commons.math.stat.descriptive.moment.VectorialCovariance: double[] productsSums>;

        $z3 = staticinvoke <java.util.Arrays: boolean equals(double[],double[])>($r4, $r3);

        if $z3 != 0 goto label5;

        return 0;

     label5:
        $r6 = r0.<org.apache.commons.math.stat.descriptive.moment.VectorialCovariance: double[] sums>;

        $r5 = r2.<org.apache.commons.math.stat.descriptive.moment.VectorialCovariance: double[] sums>;

        $z4 = staticinvoke <java.util.Arrays: boolean equals(double[],double[])>($r6, $r5);

        if $z4 != 0 goto label6;

        return 0;

     label6:
        return 1;
    }

    public static void <clinit>()
    {
        <org.apache.commons.math.stat.descriptive.moment.VectorialCovariance: long serialVersionUID> = 4118372414238930270L;

        return;
    }
}
