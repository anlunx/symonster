class com.opengamma.analytics.financial.equity.variance.pricing.ExpectedVarianceStaticReplicationCalculator$2 extends com.opengamma.analytics.math.function.Function1D
{
    final com.opengamma.analytics.financial.model.volatility.surface.BlackVolatilitySurfaceLogMoneyness val$surface;
    final double val$expiry;
    final double val$rootT;
    final com.opengamma.analytics.financial.equity.variance.pricing.ExpectedVarianceStaticReplicationCalculator this$0;

    void <init>(com.opengamma.analytics.financial.equity.variance.pricing.ExpectedVarianceStaticReplicationCalculator, com.opengamma.analytics.financial.model.volatility.surface.BlackVolatilitySurfaceLogMoneyness, double, double)
    {
        com.opengamma.analytics.financial.equity.variance.pricing.ExpectedVarianceStaticReplicationCalculator$2 r0;
        com.opengamma.analytics.financial.equity.variance.pricing.ExpectedVarianceStaticReplicationCalculator r1;
        com.opengamma.analytics.financial.model.volatility.surface.BlackVolatilitySurfaceLogMoneyness r2;
        double d0, d1;

        r0 := @this: com.opengamma.analytics.financial.equity.variance.pricing.ExpectedVarianceStaticReplicationCalculator$2;

        r1 := @parameter0: com.opengamma.analytics.financial.equity.variance.pricing.ExpectedVarianceStaticReplicationCalculator;

        r2 := @parameter1: com.opengamma.analytics.financial.model.volatility.surface.BlackVolatilitySurfaceLogMoneyness;

        d0 := @parameter2: double;

        d1 := @parameter3: double;

        r0.<com.opengamma.analytics.financial.equity.variance.pricing.ExpectedVarianceStaticReplicationCalculator$2: com.opengamma.analytics.financial.equity.variance.pricing.ExpectedVarianceStaticReplicationCalculator this$0> = r1;

        r0.<com.opengamma.analytics.financial.equity.variance.pricing.ExpectedVarianceStaticReplicationCalculator$2: com.opengamma.analytics.financial.model.volatility.surface.BlackVolatilitySurfaceLogMoneyness val$surface> = r2;

        r0.<com.opengamma.analytics.financial.equity.variance.pricing.ExpectedVarianceStaticReplicationCalculator$2: double val$expiry> = d0;

        r0.<com.opengamma.analytics.financial.equity.variance.pricing.ExpectedVarianceStaticReplicationCalculator$2: double val$rootT> = d1;

        specialinvoke r0.<com.opengamma.analytics.math.function.Function1D: void <init>()>();

        return;
    }

    public java.lang.Double evaluate(java.lang.Double)
    {
        com.opengamma.analytics.financial.equity.variance.pricing.ExpectedVarianceStaticReplicationCalculator$2 r0;
        java.lang.Double r1, $r4, $r6, $r7, $r8, $r10, $r11;
        double d0, d1, d2, d3, d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21, $d22, $d23, $d24, $d25, $d26, $d27, $d28, $d29;
        byte $b1, $b2, $b3, $b4;
        com.opengamma.analytics.financial.model.volatility.surface.BlackVolatilitySurfaceLogMoneyness $r2;
        com.opengamma.analytics.math.statistics.distribution.ProbabilityDistribution $r3, $r5, $r9;
        boolean $z1;

        r0 := @this: com.opengamma.analytics.financial.equity.variance.pricing.ExpectedVarianceStaticReplicationCalculator$2;

        r1 := @parameter0: java.lang.Double;

        $d5 = virtualinvoke r1.<java.lang.Double: double doubleValue()>();

        $b1 = $d5 cmpl 0.0;

        if $b1 < 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        if $z1 == 0 goto label3;

        $b4 = 1;

        goto label4;

     label3:
        $b4 = -1;

     label4:
        $r2 = r0.<com.opengamma.analytics.financial.equity.variance.pricing.ExpectedVarianceStaticReplicationCalculator$2: com.opengamma.analytics.financial.model.volatility.surface.BlackVolatilitySurfaceLogMoneyness val$surface>;

        $d6 = r0.<com.opengamma.analytics.financial.equity.variance.pricing.ExpectedVarianceStaticReplicationCalculator$2: double val$expiry>;

        $d7 = virtualinvoke r1.<java.lang.Double: double doubleValue()>();

        d0 = virtualinvoke $r2.<com.opengamma.analytics.financial.model.volatility.surface.BlackVolatilitySurfaceLogMoneyness: double getVolatilityForLogMoneyness(double,double)>($d6, $d7);

        $d8 = r0.<com.opengamma.analytics.financial.equity.variance.pricing.ExpectedVarianceStaticReplicationCalculator$2: double val$rootT>;

        d1 = d0 * $d8;

        $d9 = virtualinvoke r1.<java.lang.Double: double doubleValue()>();

        $b2 = $d9 cmpl 0.0;

        if $b2 != 0 goto label5;

        $r9 = staticinvoke <com.opengamma.analytics.financial.equity.variance.pricing.ExpectedVarianceStaticReplicationCalculator: com.opengamma.analytics.math.statistics.distribution.ProbabilityDistribution access$000()>();

        $d26 = 0.5 * d1;

        $r10 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d26);

        $d27 = interfaceinvoke $r9.<com.opengamma.analytics.math.statistics.distribution.ProbabilityDistribution: double getCDF(java.lang.Object)>($r10);

        $d28 = 2.0 * $d27;

        $d29 = $d28 - 1.0;

        $r11 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d29);

        return $r11;

     label5:
        $b3 = d1 cmpg 1.0E-12;

        if $b3 >= 0 goto label6;

        $r8 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(0.0);

        return $r8;

     label6:
        $d10 = virtualinvoke r1.<java.lang.Double: double doubleValue()>();

        $d11 = neg $d10;

        $d13 = $d11 / d1;

        $d12 = 0.5 * d1;

        d2 = $d13 + $d12;

        d3 = d2 - d1;

        $d14 = (double) $b4;

        $d15 = virtualinvoke r1.<java.lang.Double: double doubleValue()>();

        $d16 = neg $d15;

        $d17 = staticinvoke <java.lang.Math: double exp(double)>($d16);

        $r3 = staticinvoke <com.opengamma.analytics.financial.equity.variance.pricing.ExpectedVarianceStaticReplicationCalculator: com.opengamma.analytics.math.statistics.distribution.ProbabilityDistribution access$000()>();

        $d18 = (double) $b4;

        $d19 = $d18 * d2;

        $r4 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d19);

        $d20 = interfaceinvoke $r3.<com.opengamma.analytics.math.statistics.distribution.ProbabilityDistribution: double getCDF(java.lang.Object)>($r4);

        $d21 = $d17 * $d20;

        $r5 = staticinvoke <com.opengamma.analytics.financial.equity.variance.pricing.ExpectedVarianceStaticReplicationCalculator: com.opengamma.analytics.math.statistics.distribution.ProbabilityDistribution access$000()>();

        $d22 = (double) $b4;

        $d23 = $d22 * d3;

        $r6 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d23);

        $d24 = interfaceinvoke $r5.<com.opengamma.analytics.math.statistics.distribution.ProbabilityDistribution: double getCDF(java.lang.Object)>($r6);

        $d25 = $d21 - $d24;

        d4 = $d14 * $d25;

        $r7 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d4);

        return $r7;
    }

    public volatile java.lang.Object evaluate(java.lang.Object)
    {
        com.opengamma.analytics.financial.equity.variance.pricing.ExpectedVarianceStaticReplicationCalculator$2 r0;
        java.lang.Object r1;
        java.lang.Double $r2, $r3;

        r0 := @this: com.opengamma.analytics.financial.equity.variance.pricing.ExpectedVarianceStaticReplicationCalculator$2;

        r1 := @parameter0: java.lang.Object;

        $r2 = (java.lang.Double) r1;

        $r3 = virtualinvoke r0.<com.opengamma.analytics.financial.equity.variance.pricing.ExpectedVarianceStaticReplicationCalculator$2: java.lang.Double evaluate(java.lang.Double)>($r2);

        return $r3;
    }
}
