public abstract class com.opengamma.analytics.financial.model.option.definition.ForexOptionDataBundle extends com.opengamma.analytics.financial.interestrate.YieldCurveBundle
{
    private final com.opengamma.analytics.financial.model.volatility.VolatilityModel _volatilityModel;
    private final com.opengamma.util.tuple.Pair _currencyPair;

    public void <init>(com.opengamma.analytics.financial.interestrate.YieldCurveBundle, com.opengamma.analytics.financial.model.volatility.VolatilityModel, com.opengamma.util.tuple.Pair)
    {
        com.opengamma.analytics.financial.model.option.definition.ForexOptionDataBundle r0;
        com.opengamma.analytics.financial.interestrate.YieldCurveBundle r1;
        com.opengamma.analytics.financial.model.volatility.VolatilityModel r2;
        com.opengamma.util.tuple.Pair r3;
        java.util.Collection r4;
        com.opengamma.util.money.Currency r5, r6;
        com.opengamma.analytics.financial.forex.method.FXMatrix r7;
        java.util.Map $r10;
        java.lang.Object $r11, $r12;
        boolean $z0, $z1, $z2;
        java.lang.Object[] $r13, $r14, $r15;

        r0 := @this: com.opengamma.analytics.financial.model.option.definition.ForexOptionDataBundle;

        r1 := @parameter0: com.opengamma.analytics.financial.interestrate.YieldCurveBundle;

        r2 := @parameter1: com.opengamma.analytics.financial.model.volatility.VolatilityModel;

        r3 := @parameter2: com.opengamma.util.tuple.Pair;

        specialinvoke r0.<com.opengamma.analytics.financial.interestrate.YieldCurveBundle: void <init>(com.opengamma.analytics.financial.interestrate.YieldCurveBundle)>(r1);

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, "volatility model");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r3, "currency pair");

        $r10 = virtualinvoke r0.<com.opengamma.analytics.financial.model.option.definition.ForexOptionDataBundle: java.util.Map getCurrencyMap()>();

        r4 = interfaceinvoke $r10.<java.util.Map: java.util.Collection values()>();

        $r11 = virtualinvoke r3.<com.opengamma.util.tuple.Pair: java.lang.Object getFirst()>();

        r5 = (com.opengamma.util.money.Currency) $r11;

        $r12 = virtualinvoke r3.<com.opengamma.util.tuple.Pair: java.lang.Object getSecond()>();

        r6 = (com.opengamma.util.money.Currency) $r12;

        r7 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.YieldCurveBundle: com.opengamma.analytics.financial.forex.method.FXMatrix getFxRates()>();

        $z0 = virtualinvoke r7.<com.opengamma.analytics.financial.forex.method.FXMatrix: boolean containsPair(com.opengamma.util.money.Currency,com.opengamma.util.money.Currency)>(r5, r6);

        $r13 = newarray (java.lang.Object)[2];

        $r13[0] = r5;

        $r13[1] = r6;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String,java.lang.Object[])>($z0, "FX matrix does not contain rates for {} and {}", $r13);

        $z1 = interfaceinvoke r4.<java.util.Collection: boolean contains(java.lang.Object)>(r5);

        $r14 = newarray (java.lang.Object)[2];

        $r14[0] = r5;

        $r14[1] = r4;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String,java.lang.Object[])>($z1, "Curve currency map does not contain currency {}; have {}", $r14);

        $z2 = interfaceinvoke r4.<java.util.Collection: boolean contains(java.lang.Object)>(r6);

        $r15 = newarray (java.lang.Object)[2];

        $r15[0] = r6;

        $r15[1] = r4;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String,java.lang.Object[])>($z2, "Curve currency map does not contain currency {}, have {}", $r15);

        r0.<com.opengamma.analytics.financial.model.option.definition.ForexOptionDataBundle: com.opengamma.analytics.financial.model.volatility.VolatilityModel _volatilityModel> = r2;

        r0.<com.opengamma.analytics.financial.model.option.definition.ForexOptionDataBundle: com.opengamma.util.tuple.Pair _currencyPair> = r3;

        return;
    }

    public abstract com.opengamma.analytics.financial.model.option.definition.ForexOptionDataBundle copy();

    public com.opengamma.analytics.financial.model.volatility.VolatilityModel getVolatilityModel()
    {
        com.opengamma.analytics.financial.model.option.definition.ForexOptionDataBundle r0;
        com.opengamma.analytics.financial.model.volatility.VolatilityModel $r1;

        r0 := @this: com.opengamma.analytics.financial.model.option.definition.ForexOptionDataBundle;

        $r1 = r0.<com.opengamma.analytics.financial.model.option.definition.ForexOptionDataBundle: com.opengamma.analytics.financial.model.volatility.VolatilityModel _volatilityModel>;

        return $r1;
    }

    public com.opengamma.util.tuple.Pair getCurrencyPair()
    {
        com.opengamma.analytics.financial.model.option.definition.ForexOptionDataBundle r0;
        com.opengamma.util.tuple.Pair $r1;

        r0 := @this: com.opengamma.analytics.financial.model.option.definition.ForexOptionDataBundle;

        $r1 = r0.<com.opengamma.analytics.financial.model.option.definition.ForexOptionDataBundle: com.opengamma.util.tuple.Pair _currencyPair>;

        return $r1;
    }

    public boolean checkCurrencies(com.opengamma.util.money.Currency, com.opengamma.util.money.Currency)
    {
        com.opengamma.analytics.financial.model.option.definition.ForexOptionDataBundle r0;
        com.opengamma.util.money.Currency r1, r2;
        com.opengamma.util.tuple.Pair $r3, $r5, $r7, $r9;
        java.lang.Object $r4, $r6, $r8, $r10;
        boolean $z0, $z1, $z2, $z3;

        r0 := @this: com.opengamma.analytics.financial.model.option.definition.ForexOptionDataBundle;

        r1 := @parameter0: com.opengamma.util.money.Currency;

        r2 := @parameter1: com.opengamma.util.money.Currency;

        $r3 = r0.<com.opengamma.analytics.financial.model.option.definition.ForexOptionDataBundle: com.opengamma.util.tuple.Pair _currencyPair>;

        $r4 = virtualinvoke $r3.<com.opengamma.util.tuple.Pair: java.lang.Object getFirst()>();

        $z0 = virtualinvoke r1.<com.opengamma.util.money.Currency: boolean equals(java.lang.Object)>($r4);

        if $z0 == 0 goto label1;

        $r9 = r0.<com.opengamma.analytics.financial.model.option.definition.ForexOptionDataBundle: com.opengamma.util.tuple.Pair _currencyPair>;

        $r10 = virtualinvoke $r9.<com.opengamma.util.tuple.Pair: java.lang.Object getSecond()>();

        $z3 = virtualinvoke r2.<com.opengamma.util.money.Currency: boolean equals(java.lang.Object)>($r10);

        if $z3 == 0 goto label1;

        return 1;

     label1:
        $r5 = r0.<com.opengamma.analytics.financial.model.option.definition.ForexOptionDataBundle: com.opengamma.util.tuple.Pair _currencyPair>;

        $r6 = virtualinvoke $r5.<com.opengamma.util.tuple.Pair: java.lang.Object getFirst()>();

        $z1 = virtualinvoke r2.<com.opengamma.util.money.Currency: boolean equals(java.lang.Object)>($r6);

        if $z1 == 0 goto label2;

        $r7 = r0.<com.opengamma.analytics.financial.model.option.definition.ForexOptionDataBundle: com.opengamma.util.tuple.Pair _currencyPair>;

        $r8 = virtualinvoke $r7.<com.opengamma.util.tuple.Pair: java.lang.Object getSecond()>();

        $z2 = virtualinvoke r1.<com.opengamma.util.money.Currency: boolean equals(java.lang.Object)>($r8);

        if $z2 == 0 goto label2;

        return 1;

     label2:
        return 0;
    }

    protected com.opengamma.analytics.financial.interestrate.YieldCurveBundle getCurvesCopy()
    {
        com.opengamma.analytics.financial.model.option.definition.ForexOptionDataBundle r0;
        com.opengamma.analytics.financial.interestrate.YieldCurveBundle $r1;

        r0 := @this: com.opengamma.analytics.financial.model.option.definition.ForexOptionDataBundle;

        $r1 = specialinvoke r0.<com.opengamma.analytics.financial.interestrate.YieldCurveBundle: com.opengamma.analytics.financial.interestrate.YieldCurveBundle copy()>();

        return $r1;
    }

    public abstract com.opengamma.analytics.financial.model.option.definition.ForexOptionDataBundle 'with'(com.opengamma.analytics.financial.interestrate.YieldCurveBundle);

    public abstract com.opengamma.analytics.financial.model.option.definition.ForexOptionDataBundle 'with'(com.opengamma.analytics.financial.model.volatility.VolatilityModel);

    public int hashCode()
    {
        com.opengamma.analytics.financial.model.option.definition.ForexOptionDataBundle r0;
        com.opengamma.analytics.financial.model.volatility.VolatilityModel $r1;
        int $i1, $i2, $i3, $i4, i5, i6, i7;
        com.opengamma.util.tuple.Pair $r2;

        r0 := @this: com.opengamma.analytics.financial.model.option.definition.ForexOptionDataBundle;

        i5 = specialinvoke r0.<com.opengamma.analytics.financial.interestrate.YieldCurveBundle: int hashCode()>();

        $i1 = 31 * i5;

        $r1 = r0.<com.opengamma.analytics.financial.model.option.definition.ForexOptionDataBundle: com.opengamma.analytics.financial.model.volatility.VolatilityModel _volatilityModel>;

        $i2 = virtualinvoke $r1.<java.lang.Object: int hashCode()>();

        i6 = $i1 + $i2;

        $i3 = 31 * i6;

        $r2 = r0.<com.opengamma.analytics.financial.model.option.definition.ForexOptionDataBundle: com.opengamma.util.tuple.Pair _currencyPair>;

        $i4 = virtualinvoke $r2.<com.opengamma.util.tuple.Pair: int hashCode()>();

        i7 = $i3 + $i4;

        return i7;
    }

    public boolean equals(java.lang.Object)
    {
        com.opengamma.analytics.financial.model.option.definition.ForexOptionDataBundle r0, r2;
        java.lang.Object r1;
        boolean $z0, $z1, $z2;
        java.lang.Class $r3, $r4;
        com.opengamma.util.tuple.Pair $r5, $r6;
        com.opengamma.analytics.financial.model.volatility.VolatilityModel $r7, $r8;

        r0 := @this: com.opengamma.analytics.financial.model.option.definition.ForexOptionDataBundle;

        r1 := @parameter0: java.lang.Object;

        if r0 != r1 goto label1;

        return 1;

     label1:
        $z0 = specialinvoke r0.<com.opengamma.analytics.financial.interestrate.YieldCurveBundle: boolean equals(java.lang.Object)>(r1);

        if $z0 != 0 goto label2;

        return 0;

     label2:
        $r3 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r4 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        if $r3 == $r4 goto label3;

        return 0;

     label3:
        r2 = (com.opengamma.analytics.financial.model.option.definition.ForexOptionDataBundle) r1;

        $r6 = r0.<com.opengamma.analytics.financial.model.option.definition.ForexOptionDataBundle: com.opengamma.util.tuple.Pair _currencyPair>;

        $r5 = r2.<com.opengamma.analytics.financial.model.option.definition.ForexOptionDataBundle: com.opengamma.util.tuple.Pair _currencyPair>;

        $z1 = staticinvoke <org.apache.commons.lang.ObjectUtils: boolean equals(java.lang.Object,java.lang.Object)>($r6, $r5);

        if $z1 != 0 goto label4;

        return 0;

     label4:
        $r8 = r0.<com.opengamma.analytics.financial.model.option.definition.ForexOptionDataBundle: com.opengamma.analytics.financial.model.volatility.VolatilityModel _volatilityModel>;

        $r7 = r2.<com.opengamma.analytics.financial.model.option.definition.ForexOptionDataBundle: com.opengamma.analytics.financial.model.volatility.VolatilityModel _volatilityModel>;

        $z2 = staticinvoke <org.apache.commons.lang.ObjectUtils: boolean equals(java.lang.Object,java.lang.Object)>($r8, $r7);

        if $z2 != 0 goto label5;

        return 0;

     label5:
        return 1;
    }

    public volatile com.opengamma.analytics.financial.interestrate.YieldCurveBundle copy()
    {
        com.opengamma.analytics.financial.model.option.definition.ForexOptionDataBundle r0, $r1;

        r0 := @this: com.opengamma.analytics.financial.model.option.definition.ForexOptionDataBundle;

        $r1 = virtualinvoke r0.<com.opengamma.analytics.financial.model.option.definition.ForexOptionDataBundle: com.opengamma.analytics.financial.model.option.definition.ForexOptionDataBundle copy()>();

        return $r1;
    }
}
