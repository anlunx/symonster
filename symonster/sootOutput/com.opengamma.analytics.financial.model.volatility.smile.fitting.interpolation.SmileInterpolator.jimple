public abstract class com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolator extends java.lang.Object implements com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.GeneralSmileInterpolator
{
    private static final double FIT_ERROR;
    private static final double LARGE_ERROR;
    private static final com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.WeightingFunction DEFAULT_WEIGHTING_FUNCTION;
    protected static final org.slf4j.Logger s_logger;
    private final com.opengamma.analytics.financial.model.volatility.smile.function.VolatilityFunctionProvider _model;
    private final com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.WeightingFunction _weightingFunction;
    private final cern.jet.random.engine.RandomEngine _random;

    public void <init>(com.opengamma.analytics.financial.model.volatility.smile.function.VolatilityFunctionProvider)
    {
        com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolator r0;
        com.opengamma.analytics.financial.model.volatility.smile.function.VolatilityFunctionProvider r1;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolator;

        r1 := @parameter0: com.opengamma.analytics.financial.model.volatility.smile.function.VolatilityFunctionProvider;

        specialinvoke r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolator: void <init>(int,com.opengamma.analytics.financial.model.volatility.smile.function.VolatilityFunctionProvider)>(4357, r1);

        return;
    }

    public void <init>(int, com.opengamma.analytics.financial.model.volatility.smile.function.VolatilityFunctionProvider)
    {
        com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolator r0;
        int i0;
        com.opengamma.analytics.financial.model.volatility.smile.function.VolatilityFunctionProvider r1;
        com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.WeightingFunction $r2;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolator;

        i0 := @parameter0: int;

        r1 := @parameter1: com.opengamma.analytics.financial.model.volatility.smile.function.VolatilityFunctionProvider;

        $r2 = <com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolator: com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.WeightingFunction DEFAULT_WEIGHTING_FUNCTION>;

        specialinvoke r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolator: void <init>(int,com.opengamma.analytics.financial.model.volatility.smile.function.VolatilityFunctionProvider,com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.WeightingFunction)>(i0, r1, $r2);

        return;
    }

    public void <init>(com.opengamma.analytics.financial.model.volatility.smile.function.VolatilityFunctionProvider, com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.WeightingFunction)
    {
        com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolator r0;
        com.opengamma.analytics.financial.model.volatility.smile.function.VolatilityFunctionProvider r1;
        com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.WeightingFunction r2;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolator;

        r1 := @parameter0: com.opengamma.analytics.financial.model.volatility.smile.function.VolatilityFunctionProvider;

        r2 := @parameter1: com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.WeightingFunction;

        specialinvoke r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolator: void <init>(int,com.opengamma.analytics.financial.model.volatility.smile.function.VolatilityFunctionProvider,com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.WeightingFunction)>(4357, r1, r2);

        return;
    }

    public void <init>(int, com.opengamma.analytics.financial.model.volatility.smile.function.VolatilityFunctionProvider, com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.WeightingFunction)
    {
        com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolator r0;
        int i0;
        com.opengamma.analytics.financial.model.volatility.smile.function.VolatilityFunctionProvider r1;
        com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.WeightingFunction r2;
        cern.jet.random.engine.MersenneTwister64 $r5;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolator;

        i0 := @parameter0: int;

        r1 := @parameter1: com.opengamma.analytics.financial.model.volatility.smile.function.VolatilityFunctionProvider;

        r2 := @parameter2: com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.WeightingFunction;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "model");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, "weightFunction");

        $r5 = new cern.jet.random.engine.MersenneTwister64;

        specialinvoke $r5.<cern.jet.random.engine.MersenneTwister64: void <init>(int)>(i0);

        r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolator: cern.jet.random.engine.RandomEngine _random> = $r5;

        r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolator: com.opengamma.analytics.financial.model.volatility.smile.function.VolatilityFunctionProvider _model> = r1;

        r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolator: com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.WeightingFunction _weightingFunction> = r2;

        return;
    }

    public java.util.List getFittedModelParameters(double, double[], double, double[])
    {
        com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolator r0;
        double d0, d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, d12, $d13, $d14;
        double[] r1, r2, r4, r8, r9, r10;
        int i0, $i1, $i2, $i3, i9, i10, i12, i13;
        com.opengamma.analytics.financial.model.volatility.smile.fitting.SmileModelFitter r5, r11;
        java.util.BitSet r6, r44;
        double[][] r7;
        java.lang.Object[] $r14, $r16;
        java.lang.Integer $r15, $r17, $r18;
        java.util.ArrayList $r19;
        byte $b4, $b5, $b6, $b7, $b8, $b11;
        com.opengamma.analytics.math.matrix.DoubleMatrix1D $r20, $r29, r41, r45;
        com.opengamma.analytics.financial.model.volatility.smile.function.SmileModelData $r21, $r30;
        java.lang.StringBuilder $r22, $r24, $r25, $r26, $r27, $r31, $r33, $r34, $r35;
        org.slf4j.Logger $r23, $r32;
        java.lang.String $r28, $r36;
        java.lang.IllegalStateException $r37;
        com.opengamma.analytics.math.MathException $r38;
        java.lang.Exception $r39;
        boolean $z2, $z3;
        com.opengamma.analytics.math.statistics.leastsquare.LeastSquareResultsWithTransform r40, r42, r46, r47;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolator;

        d0 := @parameter0: double;

        r1 := @parameter1: double[];

        d1 := @parameter2: double;

        r2 := @parameter3: double[];

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "strikes");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, "implied volatilities");

        i0 = lengthof r1;

        if i0 <= 2 goto label01;

        $z2 = 1;

        goto label02;

     label01:
        $z2 = 0;

     label02:
        $r14 = newarray (java.lang.Object)[1];

        $r15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r14[0] = $r15;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String,java.lang.Object[])>($z2, "cannot fit less than three points; have {}", $r14);

        $i1 = lengthof r2;

        if $i1 != i0 goto label03;

        $z3 = 1;

        goto label04;

     label03:
        $z3 = 0;

     label04:
        $r16 = newarray (java.lang.Object)[2];

        $i2 = lengthof r2;

        $r17 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        $r16[0] = $r17;

        $r18 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r16[1] = $r18;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String,java.lang.Object[])>($z3, "#strikes != # vols; have {} and {}", $r16);

        virtualinvoke r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolator: void validateStrikes(double[])>(r1);

        $r19 = new java.util.ArrayList;

        specialinvoke $r19.<java.util.ArrayList: void <init>(int)>(i0);

        r4 = newarray (double)[i0];

        staticinvoke <java.util.Arrays: void fill(double[],double)>(r4, 1.0E-4);

        r5 = virtualinvoke r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolator: com.opengamma.analytics.financial.model.volatility.smile.fitting.SmileModelFitter getFitter(double,double[],double,double[],double[])>(d0, r1, d1, r2, r4);

        r6 = virtualinvoke r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolator: java.util.BitSet getGlobalFixedValues()>();

        r40 = null;

        d12 = #Infinity;

        i9 = 0;

        i10 = 0;

     label05:
        $d13 = (double) i0;

        $d14 = 100.0 * $d13;

        $b11 = d12 cmpl $d14;

        if $b11 <= 0 goto label12;

        if i10 >= 5 goto label12;

        r41 = virtualinvoke r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolator: com.opengamma.analytics.math.matrix.DoubleMatrix1D getGlobalStart(double,double[],double,double[])>(d0, r1, d1, r2);

     label06:
        r42 = virtualinvoke r5.<com.opengamma.analytics.financial.model.volatility.smile.fitting.SmileModelFitter: com.opengamma.analytics.math.statistics.leastsquare.LeastSquareResultsWithTransform solve(com.opengamma.analytics.math.matrix.DoubleMatrix1D,java.util.BitSet)>(r41, r6);

        $d11 = virtualinvoke r42.<com.opengamma.analytics.math.statistics.leastsquare.LeastSquareResultsWithTransform: double getChiSq()>();

        $b8 = $d11 cmpg d12;

        if $b8 >= 0 goto label07;

        r40 = r42;

        d12 = virtualinvoke r42.<com.opengamma.analytics.math.statistics.leastsquare.LeastSquareResultsWithTransform: double getChiSq()>();

     label07:
        i10 = i10 + 1;

     label08:
        goto label10;

     label09:
        $r39 := @caughtexception;

     label10:
        i9 = i9 + 1;

        if i9 <= 20 goto label11;

        $r38 = new com.opengamma.analytics.math.MathException;

        specialinvoke $r38.<com.opengamma.analytics.math.MathException: void <init>(java.lang.String)>("Cannot fit data");

        throw $r38;

     label11:
        goto label05;

     label12:
        if r40 != null goto label13;

        $r37 = new java.lang.IllegalStateException;

        specialinvoke $r37.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Global estimate was null; should never happen");

        throw $r37;

     label13:
        if i0 != 3 goto label15;

        $d7 = virtualinvoke r40.<com.opengamma.analytics.math.statistics.leastsquare.LeastSquareResultsWithTransform: double getChiSq()>();

        $d8 = (double) i0;

        $d9 = $d7 / $d8;

        $b7 = $d9 cmpl 1.0;

        if $b7 <= 0 goto label14;

        $r32 = <com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolator: org.slf4j.Logger s_logger>;

        $r31 = new java.lang.StringBuilder;

        specialinvoke $r31.<java.lang.StringBuilder: void <init>()>();

        $r33 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" points is ");

        $d10 = virtualinvoke r40.<com.opengamma.analytics.math.statistics.leastsquare.LeastSquareResultsWithTransform: double getChiSq()>();

        $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d10);

        $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r32.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("chi^2 on fit to ", $r36);

     label14:
        $r29 = virtualinvoke r40.<com.opengamma.analytics.math.statistics.leastsquare.LeastSquareResultsWithTransform: com.opengamma.analytics.math.matrix.DoubleMatrix1D getModelParameters()>();

        $r30 = virtualinvoke r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolator: com.opengamma.analytics.financial.model.volatility.smile.function.SmileModelData toSmileModelData(com.opengamma.analytics.math.matrix.DoubleMatrix1D)>($r29);

        interfaceinvoke $r19.<java.util.List: boolean add(java.lang.Object)>($r30);

        goto label21;

     label15:
        r44 = virtualinvoke r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolator: java.util.BitSet getLocalFixedValues()>();

        r45 = virtualinvoke r40.<com.opengamma.analytics.math.statistics.leastsquare.LeastSquareResultsWithTransform: com.opengamma.analytics.math.matrix.DoubleMatrix1D getModelParameters()>();

        i12 = 0;

     label16:
        $i3 = i0 - 2;

        if i12 >= $i3 goto label21;

        r7 = virtualinvoke r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolator: double[][] getStrikesVolsAndErrors(int,double[],double[],double[])>(i12, r1, r2, r4);

        r8 = r7[0];

        r9 = r7[1];

        r10 = r7[2];

        r11 = virtualinvoke r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolator: com.opengamma.analytics.financial.model.volatility.smile.fitting.SmileModelFitter getFitter(double,double[],double,double[],double[])>(d0, r8, d1, r9, r10);

        r46 = virtualinvoke r11.<com.opengamma.analytics.financial.model.volatility.smile.fitting.SmileModelFitter: com.opengamma.analytics.math.statistics.leastsquare.LeastSquareResultsWithTransform solve(com.opengamma.analytics.math.matrix.DoubleMatrix1D,java.util.BitSet)>(r45, r44);

        r47 = r46;

        i13 = 0;

     label17:
        $d2 = virtualinvoke r46.<com.opengamma.analytics.math.statistics.leastsquare.LeastSquareResultsWithTransform: double getChiSq()>();

        $b4 = $d2 cmpl 3.0;

        if $b4 <= 0 goto label19;

        if i13 >= 10 goto label19;

        r45 = virtualinvoke r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolator: com.opengamma.analytics.math.matrix.DoubleMatrix1D getGlobalStart(double,double[],double,double[])>(d0, r1, d1, r2);

        r46 = virtualinvoke r11.<com.opengamma.analytics.financial.model.volatility.smile.fitting.SmileModelFitter: com.opengamma.analytics.math.statistics.leastsquare.LeastSquareResultsWithTransform solve(com.opengamma.analytics.math.matrix.DoubleMatrix1D,java.util.BitSet)>(r45, r44);

        $d5 = virtualinvoke r46.<com.opengamma.analytics.math.statistics.leastsquare.LeastSquareResultsWithTransform: double getChiSq()>();

        $d6 = virtualinvoke r47.<com.opengamma.analytics.math.statistics.leastsquare.LeastSquareResultsWithTransform: double getChiSq()>();

        $b6 = $d5 cmpg $d6;

        if $b6 >= 0 goto label18;

        r47 = r46;

     label18:
        i13 = i13 + 1;

        goto label17;

     label19:
        $d3 = virtualinvoke r47.<com.opengamma.analytics.math.statistics.leastsquare.LeastSquareResultsWithTransform: double getChiSq()>();

        $b5 = $d3 cmpl 3.0;

        if $b5 <= 0 goto label20;

        $r23 = <com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolator: org.slf4j.Logger s_logger>;

        $r22 = new java.lang.StringBuilder;

        specialinvoke $r22.<java.lang.StringBuilder: void <init>()>();

        $r24 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("chi^2 on 3-point fit #");

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i12);

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is ");

        $d4 = virtualinvoke r47.<com.opengamma.analytics.math.statistics.leastsquare.LeastSquareResultsWithTransform: double getChiSq()>();

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d4);

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r23.<org.slf4j.Logger: void debug(java.lang.String)>($r28);

     label20:
        $r20 = virtualinvoke r47.<com.opengamma.analytics.math.statistics.leastsquare.LeastSquareResultsWithTransform: com.opengamma.analytics.math.matrix.DoubleMatrix1D getModelParameters()>();

        $r21 = virtualinvoke r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolator: com.opengamma.analytics.financial.model.volatility.smile.function.SmileModelData toSmileModelData(com.opengamma.analytics.math.matrix.DoubleMatrix1D)>($r20);

        interfaceinvoke $r19.<java.util.List: boolean add(java.lang.Object)>($r21);

        i12 = i12 + 1;

        goto label16;

     label21:
        return $r19;

        catch java.lang.Exception from label06 to label08 with label09;
    }

    protected cern.jet.random.engine.RandomEngine getRandom()
    {
        com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolator r0;
        cern.jet.random.engine.RandomEngine $r1;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolator;

        $r1 = r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolator: cern.jet.random.engine.RandomEngine _random>;

        return $r1;
    }

    public com.opengamma.analytics.financial.model.volatility.smile.function.VolatilityFunctionProvider getModel()
    {
        com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolator r0;
        com.opengamma.analytics.financial.model.volatility.smile.function.VolatilityFunctionProvider $r1;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolator;

        $r1 = r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolator: com.opengamma.analytics.financial.model.volatility.smile.function.VolatilityFunctionProvider _model>;

        return $r1;
    }

    public com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.WeightingFunction getWeightingFunction()
    {
        com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolator r0;
        com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.WeightingFunction $r1;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolator;

        $r1 = r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolator: com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.WeightingFunction _weightingFunction>;

        return $r1;
    }

    protected double[][] getStrikesVolsAndErrors(int, double[], double[], double[])
    {
        com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolator r0;
        int i0;
        double[] r1, r2, r3;
        double[][] $r4;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolator;

        i0 := @parameter0: int;

        r1 := @parameter1: double[];

        r2 := @parameter2: double[];

        r3 := @parameter3: double[];

        $r4 = staticinvoke <com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolator: double[][] getStrikesVolsAndErrorsForThreePoints(int,double[],double[],double[])>(i0, r1, r2, r3);

        return $r4;
    }

    protected static double[][] getStrikesVolsAndErrorsForThreePoints(int, double[], double[], double[])
    {
        int i0, $i1, $i2, $i3;
        double[] r0, r1, r2, r8, r9, r10, r11, r12, r13;
        double[][] $r7;

        i0 := @parameter0: int;

        r0 := @parameter1: double[];

        r1 := @parameter2: double[];

        r2 := @parameter3: double[];

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r0, "strikes");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "implied vols");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, "errors");

        r8 = newarray (double)[3];

        r9 = newarray (double)[3];

        r10 = newarray (double)[3];

        $i1 = i0 + 3;

        r11 = staticinvoke <java.util.Arrays: double[] copyOfRange(double[],int,int)>(r0, i0, $i1);

        $i2 = i0 + 3;

        r12 = staticinvoke <java.util.Arrays: double[] copyOfRange(double[],int,int)>(r1, i0, $i2);

        $i3 = i0 + 3;

        r13 = staticinvoke <java.util.Arrays: double[] copyOfRange(double[],int,int)>(r2, i0, $i3);

        $r7 = newarray (double[])[3];

        $r7[0] = r11;

        $r7[1] = r12;

        $r7[2] = r13;

        return $r7;
    }

    protected static double[][] getStrikesVolsAndErrorsForAllPoints(int, double[], double[], double[])
    {
        int i0, i1;
        double[] r0, r1, r2, r3;
        double[][] $r8;

        i0 := @parameter0: int;

        r0 := @parameter1: double[];

        r1 := @parameter2: double[];

        r2 := @parameter3: double[];

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r0, "strikes");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "implied vols");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, "errors");

        i1 = lengthof r2;

        r3 = newarray (double)[i1];

        staticinvoke <java.util.Arrays: void fill(double[],double)>(r3, 0.1);

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r2, i0, r3, i0, 3);

        $r8 = newarray (double[])[3];

        $r8[0] = r0;

        $r8[1] = r1;

        $r8[2] = r3;

        return $r8;
    }

    protected abstract com.opengamma.analytics.math.matrix.DoubleMatrix1D getGlobalStart(double, double[], double, double[]);

    protected java.util.BitSet getGlobalFixedValues()
    {
        com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolator r0;
        java.util.BitSet $r1;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolator;

        $r1 = new java.util.BitSet;

        specialinvoke $r1.<java.util.BitSet: void <init>()>();

        return $r1;
    }

    protected java.util.BitSet getLocalFixedValues()
    {
        com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolator r0;
        java.util.BitSet $r1;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolator;

        $r1 = new java.util.BitSet;

        specialinvoke $r1.<java.util.BitSet: void <init>()>();

        return $r1;
    }

    protected abstract com.opengamma.analytics.financial.model.volatility.smile.function.SmileModelData toSmileModelData(com.opengamma.analytics.math.matrix.DoubleMatrix1D);

    protected abstract com.opengamma.analytics.financial.model.volatility.smile.fitting.SmileModelFitter getFitter(double, double[], double, double[], double[]);

    public com.opengamma.analytics.math.function.Function1D getVolatilityFunction(double, double[], double, double[])
    {
        com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolator r0;
        double d0, d1;
        double[] r1, r2;
        java.util.List r3;
        com.opengamma.analytics.math.function.Function1D $r4;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolator;

        d0 := @parameter0: double;

        r1 := @parameter1: double[];

        d1 := @parameter2: double;

        r2 := @parameter3: double[];

        r3 = virtualinvoke r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolator: java.util.List getFittedModelParameters(double,double[],double,double[])>(d0, r1, d1, r2);

        $r4 = virtualinvoke r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolator: com.opengamma.analytics.math.function.Function1D getVolatilityFunctionFromModelParameters(double,double[],double,java.util.List)>(d0, r1, d1, r3);

        return $r4;
    }

    protected com.opengamma.analytics.math.function.Function1D getVolatilityFunctionFromModelParameters(double, double[], double, java.util.List)
    {
        com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolator r0;
        double d0, d1;
        double[] r1;
        java.util.List r2;
        int i0;
        com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolator$1 $r3;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolator;

        d0 := @parameter0: double;

        r1 := @parameter1: double[];

        d1 := @parameter2: double;

        r2 := @parameter3: java.util.List;

        i0 = lengthof r1;

        $r3 = new com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolator$1;

        specialinvoke $r3.<com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolator$1: void <init>(com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolator,double,double,double[],java.util.List,int)>(r0, d1, d0, r1, r2, i0);

        return $r3;
    }

    protected com.opengamma.analytics.math.matrix.DoubleMatrix1D getPolynomialFit(double, double[], double[])
    {
        com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolator r0;
        double d0, $d1, $d2, $d3;
        double[] r1, r2, r3, $r12;
        int i0, i1;
        com.opengamma.analytics.math.statistics.leastsquare.LeastSquareResults r5;
        com.opengamma.analytics.math.matrix.DoubleMatrix1D r6, $r9, $r10, $r11;
        com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolator$2 $r7;
        com.opengamma.analytics.math.statistics.leastsquare.NonLinearLeastSquare $r8;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolator;

        d0 := @parameter0: double;

        r1 := @parameter1: double[];

        r2 := @parameter2: double[];

        i0 = lengthof r1;

        r3 = newarray (double)[i0];

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        $d1 = r1[i1];

        $d2 = $d1 / d0;

        $d3 = staticinvoke <java.lang.Math: double log(double)>($d2);

        r3[i1] = $d3;

        i1 = i1 + 1;

        goto label1;

     label2:
        $r7 = new com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolator$2;

        specialinvoke $r7.<com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolator$2: void <init>(com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolator)>(r0);

        $r8 = new com.opengamma.analytics.math.statistics.leastsquare.NonLinearLeastSquare;

        specialinvoke $r8.<com.opengamma.analytics.math.statistics.leastsquare.NonLinearLeastSquare: void <init>()>();

        $r9 = new com.opengamma.analytics.math.matrix.DoubleMatrix1D;

        specialinvoke $r9.<com.opengamma.analytics.math.matrix.DoubleMatrix1D: void <init>(double[])>(r3);

        $r10 = new com.opengamma.analytics.math.matrix.DoubleMatrix1D;

        specialinvoke $r10.<com.opengamma.analytics.math.matrix.DoubleMatrix1D: void <init>(double[])>(r2);

        $r11 = new com.opengamma.analytics.math.matrix.DoubleMatrix1D;

        $r12 = newarray (double)[3];

        $r12[0] = 0.1;

        $r12[1] = 0.0;

        $r12[2] = 0.0;

        specialinvoke $r11.<com.opengamma.analytics.math.matrix.DoubleMatrix1D: void <init>(double[])>($r12);

        r5 = virtualinvoke $r8.<com.opengamma.analytics.math.statistics.leastsquare.NonLinearLeastSquare: com.opengamma.analytics.math.statistics.leastsquare.LeastSquareResults solve(com.opengamma.analytics.math.matrix.DoubleMatrix1D,com.opengamma.analytics.math.matrix.DoubleMatrix1D,com.opengamma.analytics.math.function.ParameterizedFunction,com.opengamma.analytics.math.matrix.DoubleMatrix1D)>($r9, $r10, $r7, $r11);

        r6 = virtualinvoke r5.<com.opengamma.analytics.math.statistics.leastsquare.LeastSquareResults: com.opengamma.analytics.math.matrix.DoubleMatrix1D getFitParameters()>();

        return r6;
    }

    protected void validateStrikes(double[])
    {
        com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolator r0;
        double[] r1;
        int i0, $i1, $i3, $i4, i5;
        double $d0, $d1, $d2, $d3;
        byte $b2;
        java.lang.Object[] $r2;
        java.lang.Double $r3, $r5;
        java.lang.Integer $r4, $r6;
        boolean $z0;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolator;

        r1 := @parameter0: double[];

        i0 = lengthof r1;

        i5 = 1;

     label1:
        if i5 >= i0 goto label4;

        $d1 = r1[i5];

        $i1 = i5 - 1;

        $d0 = r1[$i1];

        $b2 = $d1 cmpl $d0;

        if $b2 <= 0 goto label2;

        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        $r2 = newarray (java.lang.Object)[4];

        $i3 = i5 - 1;

        $d2 = r1[$i3];

        $r3 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d2);

        $r2[0] = $r3;

        $i4 = i5 - 1;

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i4);

        $r2[1] = $r4;

        $d3 = r1[i5];

        $r5 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d3);

        $r2[2] = $r5;

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i5);

        $r2[3] = $r6;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String,java.lang.Object[])>($z0, "strikes must be in ascending order; have {} (element {}) and {} (element {})", $r2);

        i5 = i5 + 1;

        goto label1;

     label4:
        return;
    }

    public int hashCode()
    {
        com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolator r0;
        com.opengamma.analytics.financial.model.volatility.smile.function.VolatilityFunctionProvider $r1;
        int $i1, $i2, $i3, $i4, i6, i7;
        com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.WeightingFunction $r2;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolator;

        $i1 = 31 * 1;

        $r1 = r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolator: com.opengamma.analytics.financial.model.volatility.smile.function.VolatilityFunctionProvider _model>;

        $i2 = virtualinvoke $r1.<java.lang.Object: int hashCode()>();

        i6 = $i1 + $i2;

        $i3 = 31 * i6;

        $r2 = r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolator: com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.WeightingFunction _weightingFunction>;

        $i4 = virtualinvoke $r2.<java.lang.Object: int hashCode()>();

        i7 = $i3 + $i4;

        return i7;
    }

    public boolean equals(java.lang.Object)
    {
        com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolator r0, r2;
        java.lang.Object r1;
        java.lang.Class $r3, $r4;
        com.opengamma.analytics.financial.model.volatility.smile.function.VolatilityFunctionProvider $r5, $r6;
        boolean $z0, $z1;
        com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.WeightingFunction $r7, $r8;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolator;

        r1 := @parameter0: java.lang.Object;

        if r0 != r1 goto label1;

        return 1;

     label1:
        if r1 != null goto label2;

        return 0;

     label2:
        $r3 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r4 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        if $r3 == $r4 goto label3;

        return 0;

     label3:
        r2 = (com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolator) r1;

        $r6 = r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolator: com.opengamma.analytics.financial.model.volatility.smile.function.VolatilityFunctionProvider _model>;

        $r5 = r2.<com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolator: com.opengamma.analytics.financial.model.volatility.smile.function.VolatilityFunctionProvider _model>;

        $z0 = staticinvoke <org.apache.commons.lang.ObjectUtils: boolean equals(java.lang.Object,java.lang.Object)>($r6, $r5);

        if $z0 != 0 goto label4;

        return 0;

     label4:
        $r8 = r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolator: com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.WeightingFunction _weightingFunction>;

        $r7 = r2.<com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolator: com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.WeightingFunction _weightingFunction>;

        $z1 = staticinvoke <org.apache.commons.lang.ObjectUtils: boolean equals(java.lang.Object,java.lang.Object)>($r8, $r7);

        if $z1 != 0 goto label5;

        return 0;

     label5:
        return 1;
    }

    static com.opengamma.analytics.financial.model.volatility.smile.function.VolatilityFunctionProvider access$000(com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolator)
    {
        com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolator r0;
        com.opengamma.analytics.financial.model.volatility.smile.function.VolatilityFunctionProvider $r1;

        r0 := @parameter0: com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolator;

        $r1 = r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolator: com.opengamma.analytics.financial.model.volatility.smile.function.VolatilityFunctionProvider _model>;

        return $r1;
    }

    static com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.WeightingFunction access$100(com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolator)
    {
        com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolator r0;
        com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.WeightingFunction $r1;

        r0 := @parameter0: com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolator;

        $r1 = r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolator: com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.WeightingFunction _weightingFunction>;

        return $r1;
    }

    static void <clinit>()
    {
        com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SineWeightingFunction $r0;
        org.slf4j.Logger $r1;

        <com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolator: double LARGE_ERROR> = 0.1;

        <com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolator: double FIT_ERROR> = 1.0E-4;

        $r0 = <com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.WeightingFunctionFactory: com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SineWeightingFunction SINE_WEIGHTING_FUNCTION>;

        <com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolator: com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.WeightingFunction DEFAULT_WEIGHTING_FUNCTION> = $r0;

        $r1 = staticinvoke <org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>(class "com/opengamma/analytics/financial/model/volatility/smile/fitting/interpolation/SmileInterpolator");

        <com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolator: org.slf4j.Logger s_logger> = $r1;

        return;
    }
}
