class org.apache.commons.math3.fitting.leastsquares.LeastSquaresFactory$LocalLeastSquaresProblem extends org.apache.commons.math3.optim.AbstractOptimizationProblem implements org.apache.commons.math3.fitting.leastsquares.LeastSquaresProblem
{
    private final org.apache.commons.math3.linear.RealVector target;
    private final org.apache.commons.math3.fitting.leastsquares.MultivariateJacobianFunction model;
    private final org.apache.commons.math3.linear.RealVector start;
    private final boolean lazyEvaluation;
    private final org.apache.commons.math3.fitting.leastsquares.ParameterValidator paramValidator;

    void <init>(org.apache.commons.math3.fitting.leastsquares.MultivariateJacobianFunction, org.apache.commons.math3.linear.RealVector, org.apache.commons.math3.linear.RealVector, org.apache.commons.math3.optim.ConvergenceChecker, int, int, boolean, org.apache.commons.math3.fitting.leastsquares.ParameterValidator)
    {
        org.apache.commons.math3.fitting.leastsquares.LeastSquaresFactory$LocalLeastSquaresProblem r0;
        org.apache.commons.math3.fitting.leastsquares.MultivariateJacobianFunction r1;
        org.apache.commons.math3.linear.RealVector r2, r3;
        org.apache.commons.math3.optim.ConvergenceChecker r4;
        int i0, i1;
        boolean z0, $z1;
        org.apache.commons.math3.fitting.leastsquares.ParameterValidator r5;
        org.apache.commons.math3.exception.MathIllegalStateException $r6;
        java.lang.Object[] $r7;
        org.apache.commons.math3.exception.util.LocalizedFormats $r8;
        java.lang.Class $r9;
        java.lang.String $r10;

        r0 := @this: org.apache.commons.math3.fitting.leastsquares.LeastSquaresFactory$LocalLeastSquaresProblem;

        r1 := @parameter0: org.apache.commons.math3.fitting.leastsquares.MultivariateJacobianFunction;

        r2 := @parameter1: org.apache.commons.math3.linear.RealVector;

        r3 := @parameter2: org.apache.commons.math3.linear.RealVector;

        r4 := @parameter3: org.apache.commons.math3.optim.ConvergenceChecker;

        i0 := @parameter4: int;

        i1 := @parameter5: int;

        z0 := @parameter6: boolean;

        r5 := @parameter7: org.apache.commons.math3.fitting.leastsquares.ParameterValidator;

        specialinvoke r0.<org.apache.commons.math3.optim.AbstractOptimizationProblem: void <init>(int,int,org.apache.commons.math3.optim.ConvergenceChecker)>(i0, i1, r4);

        r0.<org.apache.commons.math3.fitting.leastsquares.LeastSquaresFactory$LocalLeastSquaresProblem: org.apache.commons.math3.linear.RealVector target> = r2;

        r0.<org.apache.commons.math3.fitting.leastsquares.LeastSquaresFactory$LocalLeastSquaresProblem: org.apache.commons.math3.fitting.leastsquares.MultivariateJacobianFunction model> = r1;

        r0.<org.apache.commons.math3.fitting.leastsquares.LeastSquaresFactory$LocalLeastSquaresProblem: org.apache.commons.math3.linear.RealVector start> = r3;

        r0.<org.apache.commons.math3.fitting.leastsquares.LeastSquaresFactory$LocalLeastSquaresProblem: boolean lazyEvaluation> = z0;

        r0.<org.apache.commons.math3.fitting.leastsquares.LeastSquaresFactory$LocalLeastSquaresProblem: org.apache.commons.math3.fitting.leastsquares.ParameterValidator paramValidator> = r5;

        if z0 == 0 goto label1;

        $z1 = r1 instanceof org.apache.commons.math3.fitting.leastsquares.ValueAndJacobianFunction;

        if $z1 != 0 goto label1;

        $r6 = new org.apache.commons.math3.exception.MathIllegalStateException;

        $r8 = <org.apache.commons.math3.exception.util.LocalizedFormats: org.apache.commons.math3.exception.util.LocalizedFormats INVALID_IMPLEMENTATION>;

        $r7 = newarray (java.lang.Object)[1];

        $r9 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        $r10 = virtualinvoke $r9.<java.lang.Class: java.lang.String getName()>();

        $r7[0] = $r10;

        specialinvoke $r6.<org.apache.commons.math3.exception.MathIllegalStateException: void <init>(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])>($r8, $r7);

        throw $r6;

     label1:
        return;
    }

    public int getObservationSize()
    {
        org.apache.commons.math3.fitting.leastsquares.LeastSquaresFactory$LocalLeastSquaresProblem r0;
        org.apache.commons.math3.linear.RealVector $r1;
        int $i0;

        r0 := @this: org.apache.commons.math3.fitting.leastsquares.LeastSquaresFactory$LocalLeastSquaresProblem;

        $r1 = r0.<org.apache.commons.math3.fitting.leastsquares.LeastSquaresFactory$LocalLeastSquaresProblem: org.apache.commons.math3.linear.RealVector target>;

        $i0 = virtualinvoke $r1.<org.apache.commons.math3.linear.RealVector: int getDimension()>();

        return $i0;
    }

    public int getParameterSize()
    {
        org.apache.commons.math3.fitting.leastsquares.LeastSquaresFactory$LocalLeastSquaresProblem r0;
        org.apache.commons.math3.linear.RealVector $r1;
        int $i0;

        r0 := @this: org.apache.commons.math3.fitting.leastsquares.LeastSquaresFactory$LocalLeastSquaresProblem;

        $r1 = r0.<org.apache.commons.math3.fitting.leastsquares.LeastSquaresFactory$LocalLeastSquaresProblem: org.apache.commons.math3.linear.RealVector start>;

        $i0 = virtualinvoke $r1.<org.apache.commons.math3.linear.RealVector: int getDimension()>();

        return $i0;
    }

    public org.apache.commons.math3.linear.RealVector getStart()
    {
        org.apache.commons.math3.fitting.leastsquares.LeastSquaresFactory$LocalLeastSquaresProblem r0;
        org.apache.commons.math3.linear.RealVector $r1, $r2, $r3;

        r0 := @this: org.apache.commons.math3.fitting.leastsquares.LeastSquaresFactory$LocalLeastSquaresProblem;

        $r1 = r0.<org.apache.commons.math3.fitting.leastsquares.LeastSquaresFactory$LocalLeastSquaresProblem: org.apache.commons.math3.linear.RealVector start>;

        if $r1 != null goto label1;

        $r3 = null;

        goto label2;

     label1:
        $r2 = r0.<org.apache.commons.math3.fitting.leastsquares.LeastSquaresFactory$LocalLeastSquaresProblem: org.apache.commons.math3.linear.RealVector start>;

        $r3 = virtualinvoke $r2.<org.apache.commons.math3.linear.RealVector: org.apache.commons.math3.linear.RealVector copy()>();

     label2:
        return $r3;
    }

    public org.apache.commons.math3.fitting.leastsquares.LeastSquaresProblem$Evaluation evaluate(org.apache.commons.math3.linear.RealVector)
    {
        org.apache.commons.math3.fitting.leastsquares.LeastSquaresFactory$LocalLeastSquaresProblem r0;
        org.apache.commons.math3.linear.RealVector r1, $r6, $r10, $r12, $r16, $r18;
        org.apache.commons.math3.util.Pair r3;
        org.apache.commons.math3.fitting.leastsquares.ParameterValidator $r4, $r5;
        boolean $z0;
        org.apache.commons.math3.fitting.leastsquares.MultivariateJacobianFunction $r7, $r15;
        org.apache.commons.math3.fitting.leastsquares.LeastSquaresFactory$LocalLeastSquaresProblem$UnweightedEvaluation $r8;
        java.lang.Object $r9, $r11;
        org.apache.commons.math3.linear.RealMatrix $r13;
        org.apache.commons.math3.fitting.leastsquares.LeastSquaresFactory$LocalLeastSquaresProblem$LazyUnweightedEvaluation $r14;
        org.apache.commons.math3.fitting.leastsquares.ValueAndJacobianFunction $r17;

        r0 := @this: org.apache.commons.math3.fitting.leastsquares.LeastSquaresFactory$LocalLeastSquaresProblem;

        r1 := @parameter0: org.apache.commons.math3.linear.RealVector;

        $r4 = r0.<org.apache.commons.math3.fitting.leastsquares.LeastSquaresFactory$LocalLeastSquaresProblem: org.apache.commons.math3.fitting.leastsquares.ParameterValidator paramValidator>;

        if $r4 != null goto label1;

        $r18 = virtualinvoke r1.<org.apache.commons.math3.linear.RealVector: org.apache.commons.math3.linear.RealVector copy()>();

        goto label2;

     label1:
        $r5 = r0.<org.apache.commons.math3.fitting.leastsquares.LeastSquaresFactory$LocalLeastSquaresProblem: org.apache.commons.math3.fitting.leastsquares.ParameterValidator paramValidator>;

        $r6 = virtualinvoke r1.<org.apache.commons.math3.linear.RealVector: org.apache.commons.math3.linear.RealVector copy()>();

        $r18 = interfaceinvoke $r5.<org.apache.commons.math3.fitting.leastsquares.ParameterValidator: org.apache.commons.math3.linear.RealVector validate(org.apache.commons.math3.linear.RealVector)>($r6);

     label2:
        $z0 = r0.<org.apache.commons.math3.fitting.leastsquares.LeastSquaresFactory$LocalLeastSquaresProblem: boolean lazyEvaluation>;

        if $z0 == 0 goto label3;

        $r14 = new org.apache.commons.math3.fitting.leastsquares.LeastSquaresFactory$LocalLeastSquaresProblem$LazyUnweightedEvaluation;

        $r15 = r0.<org.apache.commons.math3.fitting.leastsquares.LeastSquaresFactory$LocalLeastSquaresProblem: org.apache.commons.math3.fitting.leastsquares.MultivariateJacobianFunction model>;

        $r17 = (org.apache.commons.math3.fitting.leastsquares.ValueAndJacobianFunction) $r15;

        $r16 = r0.<org.apache.commons.math3.fitting.leastsquares.LeastSquaresFactory$LocalLeastSquaresProblem: org.apache.commons.math3.linear.RealVector target>;

        specialinvoke $r14.<org.apache.commons.math3.fitting.leastsquares.LeastSquaresFactory$LocalLeastSquaresProblem$LazyUnweightedEvaluation: void <init>(org.apache.commons.math3.fitting.leastsquares.ValueAndJacobianFunction,org.apache.commons.math3.linear.RealVector,org.apache.commons.math3.linear.RealVector,org.apache.commons.math3.fitting.leastsquares.LeastSquaresFactory$1)>($r17, $r16, $r18, null);

        return $r14;

     label3:
        $r7 = r0.<org.apache.commons.math3.fitting.leastsquares.LeastSquaresFactory$LocalLeastSquaresProblem: org.apache.commons.math3.fitting.leastsquares.MultivariateJacobianFunction model>;

        r3 = interfaceinvoke $r7.<org.apache.commons.math3.fitting.leastsquares.MultivariateJacobianFunction: org.apache.commons.math3.util.Pair value(org.apache.commons.math3.linear.RealVector)>($r18);

        $r8 = new org.apache.commons.math3.fitting.leastsquares.LeastSquaresFactory$LocalLeastSquaresProblem$UnweightedEvaluation;

        $r9 = virtualinvoke r3.<org.apache.commons.math3.util.Pair: java.lang.Object getFirst()>();

        $r10 = (org.apache.commons.math3.linear.RealVector) $r9;

        $r11 = virtualinvoke r3.<org.apache.commons.math3.util.Pair: java.lang.Object getSecond()>();

        $r13 = (org.apache.commons.math3.linear.RealMatrix) $r11;

        $r12 = r0.<org.apache.commons.math3.fitting.leastsquares.LeastSquaresFactory$LocalLeastSquaresProblem: org.apache.commons.math3.linear.RealVector target>;

        specialinvoke $r8.<org.apache.commons.math3.fitting.leastsquares.LeastSquaresFactory$LocalLeastSquaresProblem$UnweightedEvaluation: void <init>(org.apache.commons.math3.linear.RealVector,org.apache.commons.math3.linear.RealMatrix,org.apache.commons.math3.linear.RealVector,org.apache.commons.math3.linear.RealVector,org.apache.commons.math3.fitting.leastsquares.LeastSquaresFactory$1)>($r10, $r13, $r12, $r18, null);

        return $r8;
    }
}
