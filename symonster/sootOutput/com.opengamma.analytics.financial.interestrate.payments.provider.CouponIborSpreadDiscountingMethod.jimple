public final class com.opengamma.analytics.financial.interestrate.payments.provider.CouponIborSpreadDiscountingMethod extends java.lang.Object
{
    private static final com.opengamma.analytics.financial.interestrate.payments.provider.CouponIborSpreadDiscountingMethod INSTANCE;

    public static com.opengamma.analytics.financial.interestrate.payments.provider.CouponIborSpreadDiscountingMethod getInstance()
    {
        com.opengamma.analytics.financial.interestrate.payments.provider.CouponIborSpreadDiscountingMethod $r0;

        $r0 = <com.opengamma.analytics.financial.interestrate.payments.provider.CouponIborSpreadDiscountingMethod: com.opengamma.analytics.financial.interestrate.payments.provider.CouponIborSpreadDiscountingMethod INSTANCE>;

        return $r0;
    }

    private void <init>()
    {
        com.opengamma.analytics.financial.interestrate.payments.provider.CouponIborSpreadDiscountingMethod r0;

        r0 := @this: com.opengamma.analytics.financial.interestrate.payments.provider.CouponIborSpreadDiscountingMethod;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public com.opengamma.util.money.MultipleCurrencyAmount presentValue(com.opengamma.analytics.financial.interestrate.payments.derivative.CouponIborSpread, com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface)
    {
        com.opengamma.analytics.financial.interestrate.payments.provider.CouponIborSpreadDiscountingMethod r0;
        com.opengamma.analytics.financial.interestrate.payments.derivative.CouponIborSpread r1;
        com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface r2;
        com.opengamma.analytics.financial.interestrate.payments.provider.IborForwardRateProvider $r3;
        com.opengamma.util.money.MultipleCurrencyAmount $r4;

        r0 := @this: com.opengamma.analytics.financial.interestrate.payments.provider.CouponIborSpreadDiscountingMethod;

        r1 := @parameter0: com.opengamma.analytics.financial.interestrate.payments.derivative.CouponIborSpread;

        r2 := @parameter1: com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface;

        $r3 = staticinvoke <com.opengamma.analytics.financial.interestrate.payments.provider.IborForwardRateProvider: com.opengamma.analytics.financial.interestrate.payments.provider.IborForwardRateProvider getInstance()>();

        $r4 = virtualinvoke r0.<com.opengamma.analytics.financial.interestrate.payments.provider.CouponIborSpreadDiscountingMethod: com.opengamma.util.money.MultipleCurrencyAmount presentValue(com.opengamma.analytics.financial.interestrate.payments.derivative.CouponIborSpread,com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface,com.opengamma.analytics.financial.interestrate.payments.provider.ForwardRateProvider)>(r1, r2, $r3);

        return $r4;
    }

    public com.opengamma.util.money.MultipleCurrencyAmount presentValue(com.opengamma.analytics.financial.interestrate.payments.derivative.CouponIborSpread, com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface, com.opengamma.analytics.financial.interestrate.payments.provider.ForwardRateProvider)
    {
        com.opengamma.analytics.financial.interestrate.payments.provider.CouponIborSpreadDiscountingMethod r0;
        com.opengamma.analytics.financial.interestrate.payments.derivative.CouponIborSpread r1;
        com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface r2;
        com.opengamma.analytics.financial.interestrate.payments.provider.ForwardRateProvider r3;
        double d0, d1, d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12;
        com.opengamma.util.money.Currency $r7, $r9;
        java.lang.Double $r8;
        com.opengamma.util.money.MultipleCurrencyAmount $r10;

        r0 := @this: com.opengamma.analytics.financial.interestrate.payments.provider.CouponIborSpreadDiscountingMethod;

        r1 := @parameter0: com.opengamma.analytics.financial.interestrate.payments.derivative.CouponIborSpread;

        r2 := @parameter1: com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface;

        r3 := @parameter2: com.opengamma.analytics.financial.interestrate.payments.provider.ForwardRateProvider;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "coupon");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, "multicurves");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r3, "forwardRateProvider");

        $d3 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.payments.derivative.CouponIborSpread: double getFixingPeriodStartTime()>();

        $d4 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.payments.derivative.CouponIborSpread: double getFixingPeriodEndTime()>();

        $d5 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.payments.derivative.CouponIborSpread: double getFixingAccrualFactor()>();

        d0 = interfaceinvoke r3.<com.opengamma.analytics.financial.interestrate.payments.provider.ForwardRateProvider: double getRate(com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface,com.opengamma.analytics.financial.interestrate.payments.derivative.DepositIndexCoupon,double,double,double)>(r2, r1, $d3, $d4, $d5);

        $r7 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.payments.derivative.CouponIborSpread: com.opengamma.util.money.Currency getCurrency()>();

        $d6 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.payments.derivative.CouponIborSpread: double getPaymentTime()>();

        $r8 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d6);

        d1 = interfaceinvoke r2.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface: double getDiscountFactor(com.opengamma.util.money.Currency,java.lang.Double)>($r7, $r8);

        $d7 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.payments.derivative.CouponIborSpread: double getNotional()>();

        $d8 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.payments.derivative.CouponIborSpread: double getPaymentYearFraction()>();

        $d9 = $d7 * $d8;

        $d10 = $d9 * d0;

        $d11 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.payments.derivative.CouponIborSpread: double getSpreadAmount()>();

        $d12 = $d10 + $d11;

        d2 = $d12 * d1;

        $r9 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.payments.derivative.CouponIborSpread: com.opengamma.util.money.Currency getCurrency()>();

        $r10 = staticinvoke <com.opengamma.util.money.MultipleCurrencyAmount: com.opengamma.util.money.MultipleCurrencyAmount of(com.opengamma.util.money.Currency,double)>($r9, d2);

        return $r10;
    }

    public com.opengamma.util.money.MultipleCurrencyAmount presentValueNoSpreadPositiveNotional(com.opengamma.analytics.financial.interestrate.payments.derivative.CouponIborSpread, com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface)
    {
        com.opengamma.analytics.financial.interestrate.payments.provider.CouponIborSpreadDiscountingMethod r0;
        com.opengamma.analytics.financial.interestrate.payments.derivative.CouponIborSpread r1;
        com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface r2;
        double d0, d1, d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11;
        com.opengamma.analytics.financial.instrument.index.IborIndex $r5;
        com.opengamma.util.money.Currency $r6, $r8;
        java.lang.Double $r7;
        com.opengamma.util.money.MultipleCurrencyAmount $r9;

        r0 := @this: com.opengamma.analytics.financial.interestrate.payments.provider.CouponIborSpreadDiscountingMethod;

        r1 := @parameter0: com.opengamma.analytics.financial.interestrate.payments.derivative.CouponIborSpread;

        r2 := @parameter1: com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "Coupon");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, "Multi-curves");

        $r5 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.payments.derivative.CouponIborSpread: com.opengamma.analytics.financial.instrument.index.IborIndex getIndex()>();

        $d3 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.payments.derivative.CouponIborSpread: double getFixingPeriodStartTime()>();

        $d4 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.payments.derivative.CouponIborSpread: double getFixingPeriodEndTime()>();

        $d5 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.payments.derivative.CouponIborSpread: double getFixingAccrualFactor()>();

        d0 = interfaceinvoke r2.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface: double getSimplyCompoundForwardRate(com.opengamma.analytics.financial.instrument.index.IborIndex,double,double,double)>($r5, $d3, $d4, $d5);

        $r6 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.payments.derivative.CouponIborSpread: com.opengamma.util.money.Currency getCurrency()>();

        $d6 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.payments.derivative.CouponIborSpread: double getPaymentTime()>();

        $r7 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d6);

        d1 = interfaceinvoke r2.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface: double getDiscountFactor(com.opengamma.util.money.Currency,java.lang.Double)>($r6, $r7);

        $d7 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.payments.derivative.CouponIborSpread: double getNotional()>();

        $d8 = staticinvoke <java.lang.Math: double abs(double)>($d7);

        $d9 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.payments.derivative.CouponIborSpread: double getPaymentYearFraction()>();

        $d10 = $d8 * $d9;

        $d11 = $d10 * d0;

        d2 = $d11 * d1;

        $r8 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.payments.derivative.CouponIborSpread: com.opengamma.util.money.Currency getCurrency()>();

        $r9 = staticinvoke <com.opengamma.util.money.MultipleCurrencyAmount: com.opengamma.util.money.MultipleCurrencyAmount of(com.opengamma.util.money.Currency,double)>($r8, d2);

        return $r9;
    }

    public com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyMulticurveSensitivity presentValueCurveSensitivity(com.opengamma.analytics.financial.interestrate.payments.derivative.CouponIborSpread, com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface)
    {
        com.opengamma.analytics.financial.interestrate.payments.provider.CouponIborSpreadDiscountingMethod r0;
        com.opengamma.analytics.financial.interestrate.payments.derivative.CouponIborSpread r1;
        com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface r2;
        double d0, d1, d3, d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21, $d22, $d23, $d24, $d25, $d26;
        com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyMulticurveSensitivity r7;
        com.opengamma.analytics.financial.instrument.index.IborIndex $r10, $r22;
        com.opengamma.util.money.Currency $r11, $r16, $r25;
        java.lang.Double $r12;
        java.util.HashMap $r13, $r19;
        java.util.ArrayList $r14, $r20;
        com.opengamma.util.tuple.DoublesPair $r15;
        java.lang.String $r17, $r23;
        com.opengamma.analytics.financial.provider.sensitivity.multicurve.SimplyCompoundedForwardSensitivity $r21;
        com.opengamma.analytics.financial.provider.sensitivity.multicurve.MulticurveSensitivity $r26;

        r0 := @this: com.opengamma.analytics.financial.interestrate.payments.provider.CouponIborSpreadDiscountingMethod;

        r1 := @parameter0: com.opengamma.analytics.financial.interestrate.payments.derivative.CouponIborSpread;

        r2 := @parameter1: com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "Coupon");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, "Multi-curves");

        $r10 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.payments.derivative.CouponIborSpread: com.opengamma.analytics.financial.instrument.index.IborIndex getIndex()>();

        $d5 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.payments.derivative.CouponIborSpread: double getFixingPeriodStartTime()>();

        $d6 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.payments.derivative.CouponIborSpread: double getFixingPeriodEndTime()>();

        $d7 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.payments.derivative.CouponIborSpread: double getFixingAccrualFactor()>();

        d0 = interfaceinvoke r2.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface: double getSimplyCompoundForwardRate(com.opengamma.analytics.financial.instrument.index.IborIndex,double,double,double)>($r10, $d5, $d6, $d7);

        $r11 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.payments.derivative.CouponIborSpread: com.opengamma.util.money.Currency getCurrency()>();

        $d8 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.payments.derivative.CouponIborSpread: double getPaymentTime()>();

        $r12 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d8);

        d1 = interfaceinvoke r2.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface: double getDiscountFactor(com.opengamma.util.money.Currency,java.lang.Double)>($r11, $r12);

        $d9 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.payments.derivative.CouponIborSpread: double getNotional()>();

        $d10 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.payments.derivative.CouponIborSpread: double getPaymentYearFraction()>();

        $d11 = $d9 * $d10;

        $d12 = $d11 * d1;

        d3 = $d12 * 1.0;

        $d13 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.payments.derivative.CouponIborSpread: double getNotional()>();

        $d14 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.payments.derivative.CouponIborSpread: double getPaymentYearFraction()>();

        $d15 = $d13 * $d14;

        $d16 = $d15 * d0;

        $d17 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.payments.derivative.CouponIborSpread: double getSpreadAmount()>();

        $d18 = $d16 + $d17;

        d4 = $d18 * 1.0;

        $r13 = new java.util.HashMap;

        specialinvoke $r13.<java.util.HashMap: void <init>()>();

        $r14 = new java.util.ArrayList;

        specialinvoke $r14.<java.util.ArrayList: void <init>()>();

        $d19 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.payments.derivative.CouponIborSpread: double getPaymentTime()>();

        $d20 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.payments.derivative.CouponIborSpread: double getPaymentTime()>();

        $d21 = neg $d20;

        $d22 = $d21 * d1;

        $d23 = $d22 * d4;

        $r15 = staticinvoke <com.opengamma.util.tuple.DoublesPair: com.opengamma.util.tuple.DoublesPair of(double,double)>($d19, $d23);

        interfaceinvoke $r14.<java.util.List: boolean add(java.lang.Object)>($r15);

        $r16 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.payments.derivative.CouponIborSpread: com.opengamma.util.money.Currency getCurrency()>();

        $r17 = interfaceinvoke r2.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface: java.lang.String getName(com.opengamma.util.money.Currency)>($r16);

        interfaceinvoke $r13.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r17, $r14);

        $r19 = new java.util.HashMap;

        specialinvoke $r19.<java.util.HashMap: void <init>()>();

        $r20 = new java.util.ArrayList;

        specialinvoke $r20.<java.util.ArrayList: void <init>()>();

        $r21 = new com.opengamma.analytics.financial.provider.sensitivity.multicurve.SimplyCompoundedForwardSensitivity;

        $d24 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.payments.derivative.CouponIborSpread: double getFixingPeriodStartTime()>();

        $d25 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.payments.derivative.CouponIborSpread: double getFixingPeriodEndTime()>();

        $d26 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.payments.derivative.CouponIborSpread: double getFixingAccrualFactor()>();

        specialinvoke $r21.<com.opengamma.analytics.financial.provider.sensitivity.multicurve.SimplyCompoundedForwardSensitivity: void <init>(double,double,double,double)>($d24, $d25, $d26, d3);

        interfaceinvoke $r20.<java.util.List: boolean add(java.lang.Object)>($r21);

        $r22 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.payments.derivative.CouponIborSpread: com.opengamma.analytics.financial.instrument.index.IborIndex getIndex()>();

        $r23 = interfaceinvoke r2.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface: java.lang.String getName(com.opengamma.analytics.financial.instrument.index.IborIndex)>($r22);

        interfaceinvoke $r19.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r23, $r20);

        $r25 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.payments.derivative.CouponIborSpread: com.opengamma.util.money.Currency getCurrency()>();

        $r26 = staticinvoke <com.opengamma.analytics.financial.provider.sensitivity.multicurve.MulticurveSensitivity: com.opengamma.analytics.financial.provider.sensitivity.multicurve.MulticurveSensitivity of(java.util.Map,java.util.Map)>($r13, $r19);

        r7 = staticinvoke <com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyMulticurveSensitivity: com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyMulticurveSensitivity of(com.opengamma.util.money.Currency,com.opengamma.analytics.financial.provider.sensitivity.multicurve.MulticurveSensitivity)>($r25, $r26);

        return r7;
    }

    static void <clinit>()
    {
        com.opengamma.analytics.financial.interestrate.payments.provider.CouponIborSpreadDiscountingMethod $r0;

        $r0 = new com.opengamma.analytics.financial.interestrate.payments.provider.CouponIborSpreadDiscountingMethod;

        specialinvoke $r0.<com.opengamma.analytics.financial.interestrate.payments.provider.CouponIborSpreadDiscountingMethod: void <init>()>();

        <com.opengamma.analytics.financial.interestrate.payments.provider.CouponIborSpreadDiscountingMethod: com.opengamma.analytics.financial.interestrate.payments.provider.CouponIborSpreadDiscountingMethod INSTANCE> = $r0;

        return;
    }
}
