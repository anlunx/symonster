public final class com.opengamma.analytics.financial.instrument.FixedReceiveCashFlowVisitor extends com.opengamma.analytics.financial.instrument.InstrumentDefinitionVisitorSameValueAdapter
{
    private static final org.slf4j.Logger s_logger;
    private static final com.opengamma.analytics.financial.instrument.FixedReceiveCashFlowVisitor INSTANCE;

    public static com.opengamma.analytics.financial.instrument.FixedReceiveCashFlowVisitor getInstance()
    {
        com.opengamma.analytics.financial.instrument.FixedReceiveCashFlowVisitor $r0;

        $r0 = <com.opengamma.analytics.financial.instrument.FixedReceiveCashFlowVisitor: com.opengamma.analytics.financial.instrument.FixedReceiveCashFlowVisitor INSTANCE>;

        return $r0;
    }

    private void <init>()
    {
        com.opengamma.analytics.financial.instrument.FixedReceiveCashFlowVisitor r0;
        java.util.Map $r1;

        r0 := @this: com.opengamma.analytics.financial.instrument.FixedReceiveCashFlowVisitor;

        $r1 = staticinvoke <java.util.Collections: java.util.Map emptyMap()>();

        specialinvoke r0.<com.opengamma.analytics.financial.instrument.InstrumentDefinitionVisitorSameValueAdapter: void <init>(java.lang.Object)>($r1);

        return;
    }

    public java.util.Map visitCashDefinition(com.opengamma.analytics.financial.instrument.cash.CashDefinition)
    {
        com.opengamma.analytics.financial.instrument.FixedReceiveCashFlowVisitor r0;
        com.opengamma.analytics.financial.instrument.cash.CashDefinition r1;
        org.threeten.bp.LocalDate r2;
        double $d0, $d1;
        byte $b0;
        org.threeten.bp.ZonedDateTime $r4;
        com.opengamma.util.money.Currency $r5;
        com.opengamma.util.money.MultipleCurrencyAmount $r6;
        java.util.Map $r7, $r8;

        r0 := @this: com.opengamma.analytics.financial.instrument.FixedReceiveCashFlowVisitor;

        r1 := @parameter0: com.opengamma.analytics.financial.instrument.cash.CashDefinition;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "cash");

        $d0 = virtualinvoke r1.<com.opengamma.analytics.financial.instrument.cash.CashDefinition: double getNotional()>();

        $b0 = $d0 cmpg 0.0;

        if $b0 >= 0 goto label1;

        $r8 = staticinvoke <java.util.Collections: java.util.Map emptyMap()>();

        return $r8;

     label1:
        $r4 = virtualinvoke r1.<com.opengamma.analytics.financial.instrument.cash.CashDefinition: org.threeten.bp.ZonedDateTime getEndDate()>();

        r2 = virtualinvoke $r4.<org.threeten.bp.ZonedDateTime: org.threeten.bp.LocalDate toLocalDate()>();

        $r5 = virtualinvoke r1.<com.opengamma.analytics.financial.instrument.cash.CashDefinition: com.opengamma.util.money.Currency getCurrency()>();

        $d1 = virtualinvoke r1.<com.opengamma.analytics.financial.instrument.cash.CashDefinition: double getInterestAmount()>();

        $r6 = staticinvoke <com.opengamma.util.money.MultipleCurrencyAmount: com.opengamma.util.money.MultipleCurrencyAmount of(com.opengamma.util.money.Currency,double)>($r5, $d1);

        $r7 = staticinvoke <java.util.Collections: java.util.Map singletonMap(java.lang.Object,java.lang.Object)>(r2, $r6);

        return $r7;
    }

    public java.util.Map visitCashDefinition(com.opengamma.analytics.financial.instrument.cash.CashDefinition, com.opengamma.timeseries.DoubleTimeSeries)
    {
        com.opengamma.analytics.financial.instrument.FixedReceiveCashFlowVisitor r0;
        com.opengamma.analytics.financial.instrument.cash.CashDefinition r1;
        com.opengamma.timeseries.DoubleTimeSeries r2;
        org.slf4j.Logger $r3;
        java.util.Map $r4;

        r0 := @this: com.opengamma.analytics.financial.instrument.FixedReceiveCashFlowVisitor;

        r1 := @parameter0: com.opengamma.analytics.financial.instrument.cash.CashDefinition;

        r2 := @parameter1: com.opengamma.timeseries.DoubleTimeSeries;

        $r3 = <com.opengamma.analytics.financial.instrument.FixedReceiveCashFlowVisitor: org.slf4j.Logger s_logger>;

        interfaceinvoke $r3.<org.slf4j.Logger: void info(java.lang.String)>("An index fixing time series was supplied, but will not be used");

        $r4 = virtualinvoke r0.<com.opengamma.analytics.financial.instrument.FixedReceiveCashFlowVisitor: java.util.Map visitCashDefinition(com.opengamma.analytics.financial.instrument.cash.CashDefinition)>(r1);

        return $r4;
    }

    public java.util.Map visitPaymentFixedDefinition(com.opengamma.analytics.financial.instrument.payment.PaymentFixedDefinition)
    {
        com.opengamma.analytics.financial.instrument.FixedReceiveCashFlowVisitor r0;
        com.opengamma.analytics.financial.instrument.payment.PaymentFixedDefinition r1;
        org.threeten.bp.LocalDate r2;
        double $d0, $d1;
        byte $b0;
        org.threeten.bp.ZonedDateTime $r4;
        com.opengamma.util.money.Currency $r5;
        com.opengamma.util.money.MultipleCurrencyAmount $r6;
        java.util.Map $r7, $r8;

        r0 := @this: com.opengamma.analytics.financial.instrument.FixedReceiveCashFlowVisitor;

        r1 := @parameter0: com.opengamma.analytics.financial.instrument.payment.PaymentFixedDefinition;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "payment");

        $d0 = virtualinvoke r1.<com.opengamma.analytics.financial.instrument.payment.PaymentFixedDefinition: double getReferenceAmount()>();

        $b0 = $d0 cmpg 0.0;

        if $b0 >= 0 goto label1;

        $r8 = staticinvoke <java.util.Collections: java.util.Map emptyMap()>();

        return $r8;

     label1:
        $r4 = virtualinvoke r1.<com.opengamma.analytics.financial.instrument.payment.PaymentFixedDefinition: org.threeten.bp.ZonedDateTime getPaymentDate()>();

        r2 = virtualinvoke $r4.<org.threeten.bp.ZonedDateTime: org.threeten.bp.LocalDate toLocalDate()>();

        $r5 = virtualinvoke r1.<com.opengamma.analytics.financial.instrument.payment.PaymentFixedDefinition: com.opengamma.util.money.Currency getCurrency()>();

        $d1 = virtualinvoke r1.<com.opengamma.analytics.financial.instrument.payment.PaymentFixedDefinition: double getReferenceAmount()>();

        $r6 = staticinvoke <com.opengamma.util.money.MultipleCurrencyAmount: com.opengamma.util.money.MultipleCurrencyAmount of(com.opengamma.util.money.Currency,double)>($r5, $d1);

        $r7 = staticinvoke <java.util.Collections: java.util.Map singletonMap(java.lang.Object,java.lang.Object)>(r2, $r6);

        return $r7;
    }

    public java.util.Map visitPaymentFixedDefinition(com.opengamma.analytics.financial.instrument.payment.PaymentFixedDefinition, com.opengamma.timeseries.DoubleTimeSeries)
    {
        com.opengamma.analytics.financial.instrument.FixedReceiveCashFlowVisitor r0;
        com.opengamma.analytics.financial.instrument.payment.PaymentFixedDefinition r1;
        com.opengamma.timeseries.DoubleTimeSeries r2;
        org.slf4j.Logger $r3;
        java.util.Map $r4;

        r0 := @this: com.opengamma.analytics.financial.instrument.FixedReceiveCashFlowVisitor;

        r1 := @parameter0: com.opengamma.analytics.financial.instrument.payment.PaymentFixedDefinition;

        r2 := @parameter1: com.opengamma.timeseries.DoubleTimeSeries;

        $r3 = <com.opengamma.analytics.financial.instrument.FixedReceiveCashFlowVisitor: org.slf4j.Logger s_logger>;

        interfaceinvoke $r3.<org.slf4j.Logger: void info(java.lang.String)>("An index fixing time series was supplied, but will not be used");

        $r4 = virtualinvoke r0.<com.opengamma.analytics.financial.instrument.FixedReceiveCashFlowVisitor: java.util.Map visitPaymentFixedDefinition(com.opengamma.analytics.financial.instrument.payment.PaymentFixedDefinition)>(r1);

        return $r4;
    }

    public java.util.Map visitCouponFixedDefinition(com.opengamma.analytics.financial.instrument.payment.CouponFixedDefinition)
    {
        com.opengamma.analytics.financial.instrument.FixedReceiveCashFlowVisitor r0;
        com.opengamma.analytics.financial.instrument.payment.CouponFixedDefinition r1;
        org.threeten.bp.LocalDate r2;
        double $d0, $d1;
        byte $b0;
        org.threeten.bp.ZonedDateTime $r4;
        com.opengamma.util.money.Currency $r5;
        com.opengamma.util.money.MultipleCurrencyAmount $r6;
        java.util.Map $r7, $r8;

        r0 := @this: com.opengamma.analytics.financial.instrument.FixedReceiveCashFlowVisitor;

        r1 := @parameter0: com.opengamma.analytics.financial.instrument.payment.CouponFixedDefinition;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "coupon");

        $d0 = virtualinvoke r1.<com.opengamma.analytics.financial.instrument.payment.CouponFixedDefinition: double getNotional()>();

        $b0 = $d0 cmpg 0.0;

        if $b0 >= 0 goto label1;

        $r8 = staticinvoke <java.util.Collections: java.util.Map emptyMap()>();

        return $r8;

     label1:
        $r4 = virtualinvoke r1.<com.opengamma.analytics.financial.instrument.payment.CouponFixedDefinition: org.threeten.bp.ZonedDateTime getPaymentDate()>();

        r2 = virtualinvoke $r4.<org.threeten.bp.ZonedDateTime: org.threeten.bp.LocalDate toLocalDate()>();

        $r5 = virtualinvoke r1.<com.opengamma.analytics.financial.instrument.payment.CouponFixedDefinition: com.opengamma.util.money.Currency getCurrency()>();

        $d1 = virtualinvoke r1.<com.opengamma.analytics.financial.instrument.payment.CouponFixedDefinition: double getAmount()>();

        $r6 = staticinvoke <com.opengamma.util.money.MultipleCurrencyAmount: com.opengamma.util.money.MultipleCurrencyAmount of(com.opengamma.util.money.Currency,double)>($r5, $d1);

        $r7 = staticinvoke <java.util.Collections: java.util.Map singletonMap(java.lang.Object,java.lang.Object)>(r2, $r6);

        return $r7;
    }

    public java.util.Map visitCouponFixedDefinition(com.opengamma.analytics.financial.instrument.payment.CouponFixedDefinition, com.opengamma.timeseries.DoubleTimeSeries)
    {
        com.opengamma.analytics.financial.instrument.FixedReceiveCashFlowVisitor r0;
        com.opengamma.analytics.financial.instrument.payment.CouponFixedDefinition r1;
        com.opengamma.timeseries.DoubleTimeSeries r2;
        org.slf4j.Logger $r3;
        java.util.Map $r4;

        r0 := @this: com.opengamma.analytics.financial.instrument.FixedReceiveCashFlowVisitor;

        r1 := @parameter0: com.opengamma.analytics.financial.instrument.payment.CouponFixedDefinition;

        r2 := @parameter1: com.opengamma.timeseries.DoubleTimeSeries;

        $r3 = <com.opengamma.analytics.financial.instrument.FixedReceiveCashFlowVisitor: org.slf4j.Logger s_logger>;

        interfaceinvoke $r3.<org.slf4j.Logger: void info(java.lang.String)>("An index fixing time series was supplied, but will not be used");

        $r4 = virtualinvoke r0.<com.opengamma.analytics.financial.instrument.FixedReceiveCashFlowVisitor: java.util.Map visitCouponFixedDefinition(com.opengamma.analytics.financial.instrument.payment.CouponFixedDefinition)>(r1);

        return $r4;
    }

    public java.util.Map visitCouponIborDefinition(com.opengamma.analytics.financial.instrument.payment.CouponIborDefinition)
    {
        com.opengamma.analytics.financial.instrument.FixedReceiveCashFlowVisitor r0;
        com.opengamma.analytics.financial.instrument.payment.CouponIborDefinition r1;
        java.util.Map $r2;

        r0 := @this: com.opengamma.analytics.financial.instrument.FixedReceiveCashFlowVisitor;

        r1 := @parameter0: com.opengamma.analytics.financial.instrument.payment.CouponIborDefinition;

        $r2 = virtualinvoke r0.<com.opengamma.analytics.financial.instrument.FixedReceiveCashFlowVisitor: java.util.Map visitCouponIborDefinition(com.opengamma.analytics.financial.instrument.payment.CouponIborDefinition,com.opengamma.timeseries.DoubleTimeSeries)>(r1, null);

        return $r2;
    }

    public java.util.Map visitCouponIborDefinition(com.opengamma.analytics.financial.instrument.payment.CouponIborDefinition, com.opengamma.timeseries.DoubleTimeSeries)
    {
        com.opengamma.analytics.financial.instrument.FixedReceiveCashFlowVisitor r0;
        com.opengamma.analytics.financial.instrument.payment.CouponIborDefinition r1;
        com.opengamma.timeseries.DoubleTimeSeries r2;
        org.threeten.bp.LocalDate r3, r4, $r9;
        double d0, d1, $d2, $d3, $d4, $d5;
        byte $b0;
        org.threeten.bp.ZonedDateTime $r7, $r11;
        java.lang.Object $r8, $r12, $r18;
        boolean $z0;
        java.util.Map $r10, $r22, $r23;
        java.lang.IllegalArgumentException $r13;
        java.lang.StringBuilder $r14, $r15, $r16;
        java.lang.String $r17;
        java.lang.Double $r19;
        com.opengamma.util.money.Currency $r20;
        com.opengamma.util.money.MultipleCurrencyAmount $r21;

        r0 := @this: com.opengamma.analytics.financial.instrument.FixedReceiveCashFlowVisitor;

        r1 := @parameter0: com.opengamma.analytics.financial.instrument.payment.CouponIborDefinition;

        r2 := @parameter1: com.opengamma.timeseries.DoubleTimeSeries;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "coupon");

        $d2 = virtualinvoke r1.<com.opengamma.analytics.financial.instrument.payment.CouponIborDefinition: double getNotional()>();

        $b0 = $d2 cmpg 0.0;

        if $b0 >= 0 goto label1;

        $r23 = staticinvoke <java.util.Collections: java.util.Map emptyMap()>();

        return $r23;

     label1:
        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, "index fixing time series");

        $r7 = virtualinvoke r1.<com.opengamma.analytics.financial.instrument.payment.CouponIborDefinition: org.threeten.bp.ZonedDateTime getFixingDate()>();

        r3 = virtualinvoke $r7.<org.threeten.bp.ZonedDateTime: org.threeten.bp.LocalDate toLocalDate()>();

        $r8 = interfaceinvoke r2.<com.opengamma.timeseries.DoubleTimeSeries: java.lang.Object getLatestTime()>();

        $r9 = (org.threeten.bp.LocalDate) $r8;

        $z0 = virtualinvoke $r9.<org.threeten.bp.LocalDate: boolean isBefore(org.threeten.bp.chrono.ChronoLocalDate)>(r3);

        if $z0 != 0 goto label3;

        $r11 = virtualinvoke r1.<com.opengamma.analytics.financial.instrument.payment.CouponIborDefinition: org.threeten.bp.ZonedDateTime getPaymentDate()>();

        r4 = virtualinvoke $r11.<org.threeten.bp.ZonedDateTime: org.threeten.bp.LocalDate toLocalDate()>();

        $r12 = interfaceinvoke r2.<com.opengamma.timeseries.DoubleTimeSeries: java.lang.Object getValue(java.lang.Object)>(r3);

        if $r12 == null goto label2;

        $r18 = interfaceinvoke r2.<com.opengamma.timeseries.DoubleTimeSeries: java.lang.Object getValue(java.lang.Object)>(r3);

        $r19 = (java.lang.Double) $r18;

        d0 = virtualinvoke $r19.<java.lang.Double: double doubleValue()>();

        $d3 = virtualinvoke r1.<com.opengamma.analytics.financial.instrument.payment.CouponIborDefinition: double getNotional()>();

        $d4 = virtualinvoke r1.<com.opengamma.analytics.financial.instrument.payment.CouponIborDefinition: double getPaymentYearFraction()>();

        $d5 = $d3 * $d4;

        d1 = $d5 * d0;

        $r20 = virtualinvoke r1.<com.opengamma.analytics.financial.instrument.payment.CouponIborDefinition: com.opengamma.util.money.Currency getCurrency()>();

        $r21 = staticinvoke <com.opengamma.util.money.MultipleCurrencyAmount: com.opengamma.util.money.MultipleCurrencyAmount of(com.opengamma.util.money.Currency,double)>($r20, d1);

        $r22 = staticinvoke <java.util.Collections: java.util.Map singletonMap(java.lang.Object,java.lang.Object)>(r4, $r21);

        return $r22;

     label2:
        $r13 = new java.lang.IllegalArgumentException;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Could not get fixing value for date ");

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r13.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r17);

        throw $r13;

     label3:
        $r10 = staticinvoke <java.util.Collections: java.util.Map emptyMap()>();

        return $r10;
    }

    public java.util.Map visitCouponIborSpreadDefinition(com.opengamma.analytics.financial.instrument.payment.CouponIborSpreadDefinition)
    {
        com.opengamma.analytics.financial.instrument.FixedReceiveCashFlowVisitor r0;
        com.opengamma.analytics.financial.instrument.payment.CouponIborSpreadDefinition r1;
        java.util.Map $r2;

        r0 := @this: com.opengamma.analytics.financial.instrument.FixedReceiveCashFlowVisitor;

        r1 := @parameter0: com.opengamma.analytics.financial.instrument.payment.CouponIborSpreadDefinition;

        $r2 = virtualinvoke r0.<com.opengamma.analytics.financial.instrument.FixedReceiveCashFlowVisitor: java.util.Map visitCouponIborSpreadDefinition(com.opengamma.analytics.financial.instrument.payment.CouponIborSpreadDefinition,com.opengamma.timeseries.DoubleTimeSeries)>(r1, null);

        return $r2;
    }

    public java.util.Map visitCouponIborSpreadDefinition(com.opengamma.analytics.financial.instrument.payment.CouponIborSpreadDefinition, com.opengamma.timeseries.DoubleTimeSeries)
    {
        com.opengamma.analytics.financial.instrument.FixedReceiveCashFlowVisitor r0;
        com.opengamma.analytics.financial.instrument.payment.CouponIborSpreadDefinition r1;
        com.opengamma.timeseries.DoubleTimeSeries r2;
        org.threeten.bp.LocalDate r3, r4, $r9;
        double d0, d1, $d2, $d3, $d4, $d5, $d6, $d7;
        byte $b0;
        org.threeten.bp.ZonedDateTime $r7, $r11;
        java.lang.Object $r8, $r12, $r18;
        boolean $z0;
        java.util.Map $r10, $r22, $r23;
        java.lang.IllegalArgumentException $r13;
        java.lang.StringBuilder $r14, $r15, $r16;
        java.lang.String $r17;
        java.lang.Double $r19;
        com.opengamma.util.money.Currency $r20;
        com.opengamma.util.money.MultipleCurrencyAmount $r21;

        r0 := @this: com.opengamma.analytics.financial.instrument.FixedReceiveCashFlowVisitor;

        r1 := @parameter0: com.opengamma.analytics.financial.instrument.payment.CouponIborSpreadDefinition;

        r2 := @parameter1: com.opengamma.timeseries.DoubleTimeSeries;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "coupon");

        $d2 = virtualinvoke r1.<com.opengamma.analytics.financial.instrument.payment.CouponIborSpreadDefinition: double getNotional()>();

        $b0 = $d2 cmpg 0.0;

        if $b0 >= 0 goto label1;

        $r23 = staticinvoke <java.util.Collections: java.util.Map emptyMap()>();

        return $r23;

     label1:
        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, "index fixing time series");

        $r7 = virtualinvoke r1.<com.opengamma.analytics.financial.instrument.payment.CouponIborSpreadDefinition: org.threeten.bp.ZonedDateTime getFixingDate()>();

        r3 = virtualinvoke $r7.<org.threeten.bp.ZonedDateTime: org.threeten.bp.LocalDate toLocalDate()>();

        $r8 = interfaceinvoke r2.<com.opengamma.timeseries.DoubleTimeSeries: java.lang.Object getLatestTime()>();

        $r9 = (org.threeten.bp.LocalDate) $r8;

        $z0 = virtualinvoke $r9.<org.threeten.bp.LocalDate: boolean isBefore(org.threeten.bp.chrono.ChronoLocalDate)>(r3);

        if $z0 != 0 goto label3;

        $r11 = virtualinvoke r1.<com.opengamma.analytics.financial.instrument.payment.CouponIborSpreadDefinition: org.threeten.bp.ZonedDateTime getPaymentDate()>();

        r4 = virtualinvoke $r11.<org.threeten.bp.ZonedDateTime: org.threeten.bp.LocalDate toLocalDate()>();

        $r12 = interfaceinvoke r2.<com.opengamma.timeseries.DoubleTimeSeries: java.lang.Object getValue(java.lang.Object)>(r3);

        if $r12 == null goto label2;

        $r18 = interfaceinvoke r2.<com.opengamma.timeseries.DoubleTimeSeries: java.lang.Object getValue(java.lang.Object)>(r3);

        $r19 = (java.lang.Double) $r18;

        d0 = virtualinvoke $r19.<java.lang.Double: double doubleValue()>();

        $d3 = virtualinvoke r1.<com.opengamma.analytics.financial.instrument.payment.CouponIborSpreadDefinition: double getNotional()>();

        $d4 = virtualinvoke r1.<com.opengamma.analytics.financial.instrument.payment.CouponIborSpreadDefinition: double getPaymentYearFraction()>();

        $d5 = $d3 * $d4;

        $d6 = virtualinvoke r1.<com.opengamma.analytics.financial.instrument.payment.CouponIborSpreadDefinition: double getSpread()>();

        $d7 = d0 + $d6;

        d1 = $d5 * $d7;

        $r20 = virtualinvoke r1.<com.opengamma.analytics.financial.instrument.payment.CouponIborSpreadDefinition: com.opengamma.util.money.Currency getCurrency()>();

        $r21 = staticinvoke <com.opengamma.util.money.MultipleCurrencyAmount: com.opengamma.util.money.MultipleCurrencyAmount of(com.opengamma.util.money.Currency,double)>($r20, d1);

        $r22 = staticinvoke <java.util.Collections: java.util.Map singletonMap(java.lang.Object,java.lang.Object)>(r4, $r21);

        return $r22;

     label2:
        $r13 = new java.lang.IllegalArgumentException;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Could not get fixing value for date ");

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r13.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r17);

        throw $r13;

     label3:
        $r10 = staticinvoke <java.util.Collections: java.util.Map emptyMap()>();

        return $r10;
    }

    public java.util.Map visitForwardRateAgreementDefinition(com.opengamma.analytics.financial.instrument.fra.ForwardRateAgreementDefinition)
    {
        com.opengamma.analytics.financial.instrument.FixedReceiveCashFlowVisitor r0;
        com.opengamma.analytics.financial.instrument.fra.ForwardRateAgreementDefinition r1;
        double $d0;
        byte $b0;
        java.util.Map $r3;
        boolean $z0;

        r0 := @this: com.opengamma.analytics.financial.instrument.FixedReceiveCashFlowVisitor;

        r1 := @parameter0: com.opengamma.analytics.financial.instrument.fra.ForwardRateAgreementDefinition;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "FRA");

        $d0 = virtualinvoke r1.<com.opengamma.analytics.financial.instrument.fra.ForwardRateAgreementDefinition: double getNotional()>();

        $b0 = $d0 cmpg 0.0;

        if $b0 >= 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z0, "Receive floating FRAs need an index fixing time series to find receive cash flows");

        $r3 = virtualinvoke r0.<com.opengamma.analytics.financial.instrument.FixedReceiveCashFlowVisitor: java.util.Map visitForwardRateAgreementDefinition(com.opengamma.analytics.financial.instrument.fra.ForwardRateAgreementDefinition,com.opengamma.timeseries.DoubleTimeSeries)>(r1, null);

        return $r3;
    }

    public java.util.Map visitForwardRateAgreementDefinition(com.opengamma.analytics.financial.instrument.fra.ForwardRateAgreementDefinition, com.opengamma.timeseries.DoubleTimeSeries)
    {
        com.opengamma.analytics.financial.instrument.FixedReceiveCashFlowVisitor r0;
        com.opengamma.analytics.financial.instrument.fra.ForwardRateAgreementDefinition r1;
        com.opengamma.timeseries.DoubleTimeSeries r2;
        org.threeten.bp.LocalDate r3, $r12, r25;
        double d0, d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, d11;
        org.threeten.bp.ZonedDateTime $r5, $r10;
        byte $b0;
        com.opengamma.util.money.Currency $r6, $r22;
        com.opengamma.util.money.MultipleCurrencyAmount $r7, $r23;
        java.util.Map $r8, $r13, $r24;
        java.lang.Object $r11, $r14, $r20;
        boolean $z0;
        java.lang.IllegalArgumentException $r15;
        java.lang.StringBuilder $r16, $r17, $r18;
        java.lang.String $r19;
        java.lang.Double $r21;

        r0 := @this: com.opengamma.analytics.financial.instrument.FixedReceiveCashFlowVisitor;

        r1 := @parameter0: com.opengamma.analytics.financial.instrument.fra.ForwardRateAgreementDefinition;

        r2 := @parameter1: com.opengamma.timeseries.DoubleTimeSeries;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "FRA");

        $r5 = virtualinvoke r1.<com.opengamma.analytics.financial.instrument.fra.ForwardRateAgreementDefinition: org.threeten.bp.ZonedDateTime getPaymentDate()>();

        r3 = virtualinvoke $r5.<org.threeten.bp.ZonedDateTime: org.threeten.bp.LocalDate toLocalDate()>();

        $d2 = virtualinvoke r1.<com.opengamma.analytics.financial.instrument.fra.ForwardRateAgreementDefinition: double getNotional()>();

        $b0 = $d2 cmpl 0.0;

        if $b0 <= 0 goto label3;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, "index fixing time series");

        $r10 = virtualinvoke r1.<com.opengamma.analytics.financial.instrument.fra.ForwardRateAgreementDefinition: org.threeten.bp.ZonedDateTime getFixingDate()>();

        r25 = virtualinvoke $r10.<org.threeten.bp.ZonedDateTime: org.threeten.bp.LocalDate toLocalDate()>();

        $r11 = interfaceinvoke r2.<com.opengamma.timeseries.DoubleTimeSeries: java.lang.Object getLatestTime()>();

        $r12 = (org.threeten.bp.LocalDate) $r11;

        $z0 = virtualinvoke $r12.<org.threeten.bp.LocalDate: boolean isBefore(org.threeten.bp.chrono.ChronoLocalDate)>(r25);

        if $z0 != 0 goto label2;

        $r14 = interfaceinvoke r2.<com.opengamma.timeseries.DoubleTimeSeries: java.lang.Object getValue(java.lang.Object)>(r25);

        if $r14 == null goto label1;

        $r20 = interfaceinvoke r2.<com.opengamma.timeseries.DoubleTimeSeries: java.lang.Object getValue(java.lang.Object)>(r25);

        $r21 = (java.lang.Double) $r20;

        d0 = virtualinvoke $r21.<java.lang.Double: double doubleValue()>();

        $d8 = virtualinvoke r1.<com.opengamma.analytics.financial.instrument.fra.ForwardRateAgreementDefinition: double getPaymentYearFraction()>();

        $d9 = virtualinvoke r1.<com.opengamma.analytics.financial.instrument.fra.ForwardRateAgreementDefinition: double getNotional()>();

        $d10 = $d8 * $d9;

        d1 = $d10 * d0;

        $r22 = virtualinvoke r1.<com.opengamma.analytics.financial.instrument.fra.ForwardRateAgreementDefinition: com.opengamma.util.money.Currency getCurrency()>();

        $r23 = staticinvoke <com.opengamma.util.money.MultipleCurrencyAmount: com.opengamma.util.money.MultipleCurrencyAmount of(com.opengamma.util.money.Currency,double)>($r22, d1);

        $r24 = staticinvoke <java.util.Collections: java.util.Map singletonMap(java.lang.Object,java.lang.Object)>(r3, $r23);

        return $r24;

     label1:
        $r15 = new java.lang.IllegalArgumentException;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Could not get fixing value for ");

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r25);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r15.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r19);

        throw $r15;

     label2:
        $r13 = staticinvoke <java.util.Collections: java.util.Map emptyMap()>();

        return $r13;

     label3:
        $d3 = virtualinvoke r1.<com.opengamma.analytics.financial.instrument.fra.ForwardRateAgreementDefinition: double getReferenceAmount()>();

        $d4 = neg $d3;

        $d5 = virtualinvoke r1.<com.opengamma.analytics.financial.instrument.fra.ForwardRateAgreementDefinition: double getRate()>();

        $d6 = $d4 * $d5;

        $d7 = virtualinvoke r1.<com.opengamma.analytics.financial.instrument.fra.ForwardRateAgreementDefinition: double getFixingPeriodAccrualFactor()>();

        d11 = $d6 * $d7;

        $r6 = virtualinvoke r1.<com.opengamma.analytics.financial.instrument.fra.ForwardRateAgreementDefinition: com.opengamma.util.money.Currency getCurrency()>();

        $r7 = staticinvoke <com.opengamma.util.money.MultipleCurrencyAmount: com.opengamma.util.money.MultipleCurrencyAmount of(com.opengamma.util.money.Currency,double)>($r6, d11);

        $r8 = staticinvoke <java.util.Collections: java.util.Map singletonMap(java.lang.Object,java.lang.Object)>(r3, $r7);

        return $r8;
    }

    public java.util.Map visitAnnuityDefinition(com.opengamma.analytics.financial.instrument.annuity.AnnuityDefinition, com.opengamma.timeseries.DoubleTimeSeries)
    {
        com.opengamma.analytics.financial.instrument.FixedReceiveCashFlowVisitor r0;
        com.opengamma.analytics.financial.instrument.annuity.AnnuityDefinition r1;
        com.opengamma.timeseries.DoubleTimeSeries r2;
        java.util.Map $r4;

        r0 := @this: com.opengamma.analytics.financial.instrument.FixedReceiveCashFlowVisitor;

        r1 := @parameter0: com.opengamma.analytics.financial.instrument.annuity.AnnuityDefinition;

        r2 := @parameter1: com.opengamma.timeseries.DoubleTimeSeries;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "annuity");

        $r4 = specialinvoke r0.<com.opengamma.analytics.financial.instrument.FixedReceiveCashFlowVisitor: java.util.Map getDatesAndPaymentsFromAnnuity(com.opengamma.analytics.financial.instrument.annuity.AnnuityDefinition,com.opengamma.timeseries.DoubleTimeSeries)>(r1, r2);

        return $r4;
    }

    public java.util.Map visitSwapFixedIborDefinition(com.opengamma.analytics.financial.instrument.swap.SwapFixedIborDefinition)
    {
        com.opengamma.analytics.financial.instrument.FixedReceiveCashFlowVisitor r0;
        com.opengamma.analytics.financial.instrument.swap.SwapFixedIborDefinition r1;
        com.opengamma.analytics.financial.instrument.annuity.AnnuityCouponFixedDefinition $r3;
        boolean $z0;
        java.util.Map $r4;

        r0 := @this: com.opengamma.analytics.financial.instrument.FixedReceiveCashFlowVisitor;

        r1 := @parameter0: com.opengamma.analytics.financial.instrument.swap.SwapFixedIborDefinition;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "swap");

        $r3 = virtualinvoke r1.<com.opengamma.analytics.financial.instrument.swap.SwapFixedIborDefinition: com.opengamma.analytics.financial.instrument.annuity.AnnuityCouponFixedDefinition getFixedLeg()>();

        $z0 = virtualinvoke $r3.<com.opengamma.analytics.financial.instrument.annuity.AnnuityCouponFixedDefinition: boolean isPayer()>();

        staticinvoke <com.opengamma.util.ArgumentChecker: void isFalse(boolean,java.lang.String)>($z0, "Payer swaps need an index fixing series to calculate receive cash-flows");

        $r4 = virtualinvoke r0.<com.opengamma.analytics.financial.instrument.FixedReceiveCashFlowVisitor: java.util.Map visitSwapFixedIborDefinition(com.opengamma.analytics.financial.instrument.swap.SwapFixedIborDefinition,com.opengamma.timeseries.DoubleTimeSeries)>(r1, null);

        return $r4;
    }

    public java.util.Map visitSwapFixedIborDefinition(com.opengamma.analytics.financial.instrument.swap.SwapFixedIborDefinition, com.opengamma.timeseries.DoubleTimeSeries)
    {
        com.opengamma.analytics.financial.instrument.FixedReceiveCashFlowVisitor r0;
        com.opengamma.analytics.financial.instrument.swap.SwapFixedIborDefinition r1;
        com.opengamma.timeseries.DoubleTimeSeries r2;
        com.opengamma.analytics.financial.instrument.annuity.AnnuityCouponFixedDefinition $r4, $r5;
        boolean $z0;
        java.lang.Object $r6, $r10;
        java.util.Map $r7, $r11;
        com.opengamma.analytics.financial.instrument.annuity.AnnuityCouponIborDefinition $r9;

        r0 := @this: com.opengamma.analytics.financial.instrument.FixedReceiveCashFlowVisitor;

        r1 := @parameter0: com.opengamma.analytics.financial.instrument.swap.SwapFixedIborDefinition;

        r2 := @parameter1: com.opengamma.timeseries.DoubleTimeSeries;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "swap");

        $r4 = virtualinvoke r1.<com.opengamma.analytics.financial.instrument.swap.SwapFixedIborDefinition: com.opengamma.analytics.financial.instrument.annuity.AnnuityCouponFixedDefinition getFixedLeg()>();

        $z0 = virtualinvoke $r4.<com.opengamma.analytics.financial.instrument.annuity.AnnuityCouponFixedDefinition: boolean isPayer()>();

        if $z0 == 0 goto label1;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, "index fixing time series");

        $r9 = virtualinvoke r1.<com.opengamma.analytics.financial.instrument.swap.SwapFixedIborDefinition: com.opengamma.analytics.financial.instrument.annuity.AnnuityCouponIborDefinition getIborLeg()>();

        $r10 = virtualinvoke $r9.<com.opengamma.analytics.financial.instrument.annuity.AnnuityCouponIborDefinition: java.lang.Object accept(com.opengamma.analytics.financial.instrument.InstrumentDefinitionVisitor,java.lang.Object)>(r0, r2);

        $r11 = (java.util.Map) $r10;

        return $r11;

     label1:
        $r5 = virtualinvoke r1.<com.opengamma.analytics.financial.instrument.swap.SwapFixedIborDefinition: com.opengamma.analytics.financial.instrument.annuity.AnnuityCouponFixedDefinition getFixedLeg()>();

        $r6 = virtualinvoke $r5.<com.opengamma.analytics.financial.instrument.annuity.AnnuityCouponFixedDefinition: java.lang.Object accept(com.opengamma.analytics.financial.instrument.InstrumentDefinitionVisitor,java.lang.Object)>(r0, r2);

        $r7 = (java.util.Map) $r6;

        return $r7;
    }

    public java.util.Map visitSwapFixedIborSpreadDefinition(com.opengamma.analytics.financial.instrument.swap.SwapFixedIborSpreadDefinition)
    {
        com.opengamma.analytics.financial.instrument.FixedReceiveCashFlowVisitor r0;
        com.opengamma.analytics.financial.instrument.swap.SwapFixedIborSpreadDefinition r1;
        com.opengamma.analytics.financial.instrument.annuity.AnnuityCouponFixedDefinition $r3;
        boolean $z0;
        java.util.Map $r4;

        r0 := @this: com.opengamma.analytics.financial.instrument.FixedReceiveCashFlowVisitor;

        r1 := @parameter0: com.opengamma.analytics.financial.instrument.swap.SwapFixedIborSpreadDefinition;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "swap");

        $r3 = virtualinvoke r1.<com.opengamma.analytics.financial.instrument.swap.SwapFixedIborSpreadDefinition: com.opengamma.analytics.financial.instrument.annuity.AnnuityCouponFixedDefinition getFixedLeg()>();

        $z0 = virtualinvoke $r3.<com.opengamma.analytics.financial.instrument.annuity.AnnuityCouponFixedDefinition: boolean isPayer()>();

        staticinvoke <com.opengamma.util.ArgumentChecker: void isFalse(boolean,java.lang.String)>($z0, "Payer swaps need an index fixing series to calculate receive cash-flows");

        $r4 = virtualinvoke r0.<com.opengamma.analytics.financial.instrument.FixedReceiveCashFlowVisitor: java.util.Map visitSwapFixedIborSpreadDefinition(com.opengamma.analytics.financial.instrument.swap.SwapFixedIborSpreadDefinition,com.opengamma.timeseries.DoubleTimeSeries)>(r1, null);

        return $r4;
    }

    public java.util.Map visitSwapFixedIborSpreadDefinition(com.opengamma.analytics.financial.instrument.swap.SwapFixedIborSpreadDefinition, com.opengamma.timeseries.DoubleTimeSeries)
    {
        com.opengamma.analytics.financial.instrument.FixedReceiveCashFlowVisitor r0;
        com.opengamma.analytics.financial.instrument.swap.SwapFixedIborSpreadDefinition r1;
        com.opengamma.timeseries.DoubleTimeSeries r2;
        com.opengamma.analytics.financial.instrument.annuity.AnnuityCouponFixedDefinition $r4, $r5;
        boolean $z0;
        java.lang.Object $r6, $r10;
        java.util.Map $r7, $r11;
        com.opengamma.analytics.financial.instrument.annuity.AnnuityDefinition $r9;

        r0 := @this: com.opengamma.analytics.financial.instrument.FixedReceiveCashFlowVisitor;

        r1 := @parameter0: com.opengamma.analytics.financial.instrument.swap.SwapFixedIborSpreadDefinition;

        r2 := @parameter1: com.opengamma.timeseries.DoubleTimeSeries;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "swap");

        $r4 = virtualinvoke r1.<com.opengamma.analytics.financial.instrument.swap.SwapFixedIborSpreadDefinition: com.opengamma.analytics.financial.instrument.annuity.AnnuityCouponFixedDefinition getFixedLeg()>();

        $z0 = virtualinvoke $r4.<com.opengamma.analytics.financial.instrument.annuity.AnnuityCouponFixedDefinition: boolean isPayer()>();

        if $z0 == 0 goto label1;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, "index fixing time series");

        $r9 = virtualinvoke r1.<com.opengamma.analytics.financial.instrument.swap.SwapFixedIborSpreadDefinition: com.opengamma.analytics.financial.instrument.annuity.AnnuityDefinition getIborLeg()>();

        $r10 = virtualinvoke $r9.<com.opengamma.analytics.financial.instrument.annuity.AnnuityDefinition: java.lang.Object accept(com.opengamma.analytics.financial.instrument.InstrumentDefinitionVisitor,java.lang.Object)>(r0, r2);

        $r11 = (java.util.Map) $r10;

        return $r11;

     label1:
        $r5 = virtualinvoke r1.<com.opengamma.analytics.financial.instrument.swap.SwapFixedIborSpreadDefinition: com.opengamma.analytics.financial.instrument.annuity.AnnuityCouponFixedDefinition getFixedLeg()>();

        $r6 = virtualinvoke $r5.<com.opengamma.analytics.financial.instrument.annuity.AnnuityCouponFixedDefinition: java.lang.Object accept(com.opengamma.analytics.financial.instrument.InstrumentDefinitionVisitor,java.lang.Object)>(r0, r2);

        $r7 = (java.util.Map) $r6;

        return $r7;
    }

    public java.util.Map visitForexDefinition(com.opengamma.analytics.financial.forex.definition.ForexDefinition)
    {
        com.opengamma.analytics.financial.instrument.FixedReceiveCashFlowVisitor r0;
        com.opengamma.analytics.financial.forex.definition.ForexDefinition r1;
        com.opengamma.analytics.financial.instrument.payment.PaymentFixedDefinition $r3, $r4, $r7;
        double $d0;
        byte $b0;
        java.lang.Object $r5, $r8;
        java.util.Map $r6, $r9;

        r0 := @this: com.opengamma.analytics.financial.instrument.FixedReceiveCashFlowVisitor;

        r1 := @parameter0: com.opengamma.analytics.financial.forex.definition.ForexDefinition;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "fx");

        $r3 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.definition.ForexDefinition: com.opengamma.analytics.financial.instrument.payment.PaymentFixedDefinition getPaymentCurrency1()>();

        $d0 = virtualinvoke $r3.<com.opengamma.analytics.financial.instrument.payment.PaymentFixedDefinition: double getReferenceAmount()>();

        $b0 = $d0 cmpl 0.0;

        if $b0 <= 0 goto label1;

        $r7 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.definition.ForexDefinition: com.opengamma.analytics.financial.instrument.payment.PaymentFixedDefinition getPaymentCurrency1()>();

        $r8 = virtualinvoke $r7.<com.opengamma.analytics.financial.instrument.payment.PaymentFixedDefinition: java.lang.Object accept(com.opengamma.analytics.financial.instrument.InstrumentDefinitionVisitor)>(r0);

        $r9 = (java.util.Map) $r8;

        return $r9;

     label1:
        $r4 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.definition.ForexDefinition: com.opengamma.analytics.financial.instrument.payment.PaymentFixedDefinition getPaymentCurrency2()>();

        $r5 = virtualinvoke $r4.<com.opengamma.analytics.financial.instrument.payment.PaymentFixedDefinition: java.lang.Object accept(com.opengamma.analytics.financial.instrument.InstrumentDefinitionVisitor)>(r0);

        $r6 = (java.util.Map) $r5;

        return $r6;
    }

    public java.util.Map visitForexDefinition(com.opengamma.analytics.financial.forex.definition.ForexDefinition, com.opengamma.timeseries.DoubleTimeSeries)
    {
        com.opengamma.analytics.financial.instrument.FixedReceiveCashFlowVisitor r0;
        com.opengamma.analytics.financial.forex.definition.ForexDefinition r1;
        com.opengamma.timeseries.DoubleTimeSeries r2;
        org.slf4j.Logger $r3;
        java.util.Map $r4;

        r0 := @this: com.opengamma.analytics.financial.instrument.FixedReceiveCashFlowVisitor;

        r1 := @parameter0: com.opengamma.analytics.financial.forex.definition.ForexDefinition;

        r2 := @parameter1: com.opengamma.timeseries.DoubleTimeSeries;

        $r3 = <com.opengamma.analytics.financial.instrument.FixedReceiveCashFlowVisitor: org.slf4j.Logger s_logger>;

        interfaceinvoke $r3.<org.slf4j.Logger: void info(java.lang.String)>("An index fixing time series was supplied, but will not be used");

        $r4 = virtualinvoke r0.<com.opengamma.analytics.financial.instrument.FixedReceiveCashFlowVisitor: java.util.Map visitForexDefinition(com.opengamma.analytics.financial.forex.definition.ForexDefinition)>(r1);

        return $r4;
    }

    public java.util.Map visitForexNonDeliverableForwardDefinition(com.opengamma.analytics.financial.forex.definition.ForexNonDeliverableForwardDefinition)
    {
        com.opengamma.analytics.financial.instrument.FixedReceiveCashFlowVisitor r0;
        com.opengamma.analytics.financial.forex.definition.ForexNonDeliverableForwardDefinition r1;
        org.threeten.bp.LocalDate r2;
        double $d0, $d1, $d2;
        byte $b0;
        org.threeten.bp.ZonedDateTime $r4;
        com.opengamma.util.money.Currency $r5;
        com.opengamma.util.money.MultipleCurrencyAmount $r6;
        java.util.Map $r7, $r8;

        r0 := @this: com.opengamma.analytics.financial.instrument.FixedReceiveCashFlowVisitor;

        r1 := @parameter0: com.opengamma.analytics.financial.forex.definition.ForexNonDeliverableForwardDefinition;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "ndf");

        $d0 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.definition.ForexNonDeliverableForwardDefinition: double getNotional()>();

        $b0 = $d0 cmpg 0.0;

        if $b0 >= 0 goto label1;

        $r8 = staticinvoke <java.util.Collections: java.util.Map emptyMap()>();

        return $r8;

     label1:
        $r4 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.definition.ForexNonDeliverableForwardDefinition: org.threeten.bp.ZonedDateTime getPaymentDate()>();

        r2 = virtualinvoke $r4.<org.threeten.bp.ZonedDateTime: org.threeten.bp.LocalDate toLocalDate()>();

        $r5 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.definition.ForexNonDeliverableForwardDefinition: com.opengamma.util.money.Currency getCurrency2()>();

        $d1 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.definition.ForexNonDeliverableForwardDefinition: double getNotional()>();

        $d2 = staticinvoke <java.lang.Math: double abs(double)>($d1);

        $r6 = staticinvoke <com.opengamma.util.money.MultipleCurrencyAmount: com.opengamma.util.money.MultipleCurrencyAmount of(com.opengamma.util.money.Currency,double)>($r5, $d2);

        $r7 = staticinvoke <java.util.Collections: java.util.Map singletonMap(java.lang.Object,java.lang.Object)>(r2, $r6);

        return $r7;
    }

    public java.util.Map visitForexNonDeliverableForwardDefinition(com.opengamma.analytics.financial.forex.definition.ForexNonDeliverableForwardDefinition, com.opengamma.timeseries.DoubleTimeSeries)
    {
        com.opengamma.analytics.financial.instrument.FixedReceiveCashFlowVisitor r0;
        com.opengamma.analytics.financial.forex.definition.ForexNonDeliverableForwardDefinition r1;
        com.opengamma.timeseries.DoubleTimeSeries r2;
        org.slf4j.Logger $r3;
        java.util.Map $r4;

        r0 := @this: com.opengamma.analytics.financial.instrument.FixedReceiveCashFlowVisitor;

        r1 := @parameter0: com.opengamma.analytics.financial.forex.definition.ForexNonDeliverableForwardDefinition;

        r2 := @parameter1: com.opengamma.timeseries.DoubleTimeSeries;

        $r3 = <com.opengamma.analytics.financial.instrument.FixedReceiveCashFlowVisitor: org.slf4j.Logger s_logger>;

        interfaceinvoke $r3.<org.slf4j.Logger: void info(java.lang.String)>("An index fixing time series was supplied but will not be used");

        $r4 = virtualinvoke r0.<com.opengamma.analytics.financial.instrument.FixedReceiveCashFlowVisitor: java.util.Map visitForexNonDeliverableForwardDefinition(com.opengamma.analytics.financial.forex.definition.ForexNonDeliverableForwardDefinition)>(r1);

        return $r4;
    }

    private java.util.Map getDatesAndPaymentsFromAnnuity(com.opengamma.analytics.financial.instrument.annuity.AnnuityDefinition, com.opengamma.timeseries.DoubleTimeSeries)
    {
        com.opengamma.analytics.financial.instrument.FixedReceiveCashFlowVisitor r0;
        com.opengamma.analytics.financial.instrument.annuity.AnnuityDefinition r1;
        com.opengamma.timeseries.DoubleTimeSeries r2;
        com.opengamma.analytics.financial.instrument.payment.PaymentDefinition[] r4;
        int i0, i3;
        com.opengamma.analytics.financial.instrument.payment.PaymentDefinition r5;
        java.util.Map r6;
        java.util.Iterator r7;
        java.util.Map$Entry r8;
        com.opengamma.util.money.MultipleCurrencyAmount r9, $r16, $r20, $r24, $r25;
        org.threeten.bp.LocalDate r10;
        java.util.HashMap $r11;
        java.lang.Object $r12, $r14, $r15, $r19, $r21, $r23;
        java.util.Set $r13;
        boolean $z0, $z1;
        com.opengamma.util.money.CurrencyAmount[] $r17;
        com.opengamma.util.money.CurrencyAmount $r18;
        double $d0, $d1;
        byte $b2, $b4;

        r0 := @this: com.opengamma.analytics.financial.instrument.FixedReceiveCashFlowVisitor;

        r1 := @parameter0: com.opengamma.analytics.financial.instrument.annuity.AnnuityDefinition;

        r2 := @parameter1: com.opengamma.timeseries.DoubleTimeSeries;

        $r11 = new java.util.HashMap;

        specialinvoke $r11.<java.util.HashMap: void <init>()>();

        r4 = virtualinvoke r1.<com.opengamma.analytics.financial.instrument.annuity.AnnuityDefinition: com.opengamma.analytics.financial.instrument.payment.PaymentDefinition[] getPayments()>();

        i0 = lengthof r4;

        i3 = 0;

     label1:
        if i3 >= i0 goto label8;

        r5 = r4[i3];

        $r12 = virtualinvoke r5.<com.opengamma.analytics.financial.instrument.payment.PaymentDefinition: java.lang.Object accept(com.opengamma.analytics.financial.instrument.InstrumentDefinitionVisitor,java.lang.Object)>(r0, r2);

        r6 = (java.util.Map) $r12;

        $r13 = interfaceinvoke r6.<java.util.Map: java.util.Set entrySet()>();

        r7 = interfaceinvoke $r13.<java.util.Set: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label7;

        $r14 = interfaceinvoke r7.<java.util.Iterator: java.lang.Object next()>();

        r8 = (java.util.Map$Entry) $r14;

        $r15 = interfaceinvoke r8.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r16 = (com.opengamma.util.money.MultipleCurrencyAmount) $r15;

        $r17 = virtualinvoke $r16.<com.opengamma.util.money.MultipleCurrencyAmount: com.opengamma.util.money.CurrencyAmount[] getCurrencyAmounts()>();

        $r18 = $r17[0];

        $d0 = virtualinvoke $r18.<com.opengamma.util.money.CurrencyAmount: double getAmount()>();

        $b2 = $d0 cmpg 0.0;

        if $b2 >= 0 goto label3;

        $b4 = -1;

        goto label4;

     label3:
        $b4 = 1;

     label4:
        $r19 = interfaceinvoke r8.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r20 = (com.opengamma.util.money.MultipleCurrencyAmount) $r19;

        $d1 = (double) $b4;

        r9 = virtualinvoke $r20.<com.opengamma.util.money.MultipleCurrencyAmount: com.opengamma.util.money.MultipleCurrencyAmount multipliedBy(double)>($d1);

        $r21 = interfaceinvoke r8.<java.util.Map$Entry: java.lang.Object getKey()>();

        r10 = (org.threeten.bp.LocalDate) $r21;

        $z1 = interfaceinvoke $r11.<java.util.Map: boolean containsKey(java.lang.Object)>(r10);

        if $z1 == 0 goto label5;

        $r23 = interfaceinvoke $r11.<java.util.Map: java.lang.Object get(java.lang.Object)>(r10);

        $r24 = (com.opengamma.util.money.MultipleCurrencyAmount) $r23;

        $r25 = virtualinvoke $r24.<com.opengamma.util.money.MultipleCurrencyAmount: com.opengamma.util.money.MultipleCurrencyAmount plus(com.opengamma.util.money.MultipleCurrencyAmount)>(r9);

        interfaceinvoke $r11.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r10, $r25);

        goto label6;

     label5:
        interfaceinvoke $r11.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r10, r9);

     label6:
        goto label2;

     label7:
        i3 = i3 + 1;

        goto label1;

     label8:
        return $r11;
    }

    public volatile java.lang.Object visitForexNonDeliverableForwardDefinition(com.opengamma.analytics.financial.forex.definition.ForexNonDeliverableForwardDefinition)
    {
        com.opengamma.analytics.financial.instrument.FixedReceiveCashFlowVisitor r0;
        com.opengamma.analytics.financial.forex.definition.ForexNonDeliverableForwardDefinition r1;
        java.util.Map $r2;

        r0 := @this: com.opengamma.analytics.financial.instrument.FixedReceiveCashFlowVisitor;

        r1 := @parameter0: com.opengamma.analytics.financial.forex.definition.ForexNonDeliverableForwardDefinition;

        $r2 = virtualinvoke r0.<com.opengamma.analytics.financial.instrument.FixedReceiveCashFlowVisitor: java.util.Map visitForexNonDeliverableForwardDefinition(com.opengamma.analytics.financial.forex.definition.ForexNonDeliverableForwardDefinition)>(r1);

        return $r2;
    }

    public volatile java.lang.Object visitForexNonDeliverableForwardDefinition(com.opengamma.analytics.financial.forex.definition.ForexNonDeliverableForwardDefinition, java.lang.Object)
    {
        com.opengamma.analytics.financial.instrument.FixedReceiveCashFlowVisitor r0;
        com.opengamma.analytics.financial.forex.definition.ForexNonDeliverableForwardDefinition r1;
        java.lang.Object r2;
        com.opengamma.timeseries.DoubleTimeSeries $r3;
        java.util.Map $r4;

        r0 := @this: com.opengamma.analytics.financial.instrument.FixedReceiveCashFlowVisitor;

        r1 := @parameter0: com.opengamma.analytics.financial.forex.definition.ForexNonDeliverableForwardDefinition;

        r2 := @parameter1: java.lang.Object;

        $r3 = (com.opengamma.timeseries.DoubleTimeSeries) r2;

        $r4 = virtualinvoke r0.<com.opengamma.analytics.financial.instrument.FixedReceiveCashFlowVisitor: java.util.Map visitForexNonDeliverableForwardDefinition(com.opengamma.analytics.financial.forex.definition.ForexNonDeliverableForwardDefinition,com.opengamma.timeseries.DoubleTimeSeries)>(r1, $r3);

        return $r4;
    }

    public volatile java.lang.Object visitForexDefinition(com.opengamma.analytics.financial.forex.definition.ForexDefinition)
    {
        com.opengamma.analytics.financial.instrument.FixedReceiveCashFlowVisitor r0;
        com.opengamma.analytics.financial.forex.definition.ForexDefinition r1;
        java.util.Map $r2;

        r0 := @this: com.opengamma.analytics.financial.instrument.FixedReceiveCashFlowVisitor;

        r1 := @parameter0: com.opengamma.analytics.financial.forex.definition.ForexDefinition;

        $r2 = virtualinvoke r0.<com.opengamma.analytics.financial.instrument.FixedReceiveCashFlowVisitor: java.util.Map visitForexDefinition(com.opengamma.analytics.financial.forex.definition.ForexDefinition)>(r1);

        return $r2;
    }

    public volatile java.lang.Object visitForexDefinition(com.opengamma.analytics.financial.forex.definition.ForexDefinition, java.lang.Object)
    {
        com.opengamma.analytics.financial.instrument.FixedReceiveCashFlowVisitor r0;
        com.opengamma.analytics.financial.forex.definition.ForexDefinition r1;
        java.lang.Object r2;
        com.opengamma.timeseries.DoubleTimeSeries $r3;
        java.util.Map $r4;

        r0 := @this: com.opengamma.analytics.financial.instrument.FixedReceiveCashFlowVisitor;

        r1 := @parameter0: com.opengamma.analytics.financial.forex.definition.ForexDefinition;

        r2 := @parameter1: java.lang.Object;

        $r3 = (com.opengamma.timeseries.DoubleTimeSeries) r2;

        $r4 = virtualinvoke r0.<com.opengamma.analytics.financial.instrument.FixedReceiveCashFlowVisitor: java.util.Map visitForexDefinition(com.opengamma.analytics.financial.forex.definition.ForexDefinition,com.opengamma.timeseries.DoubleTimeSeries)>(r1, $r3);

        return $r4;
    }

    public volatile java.lang.Object visitSwapFixedIborSpreadDefinition(com.opengamma.analytics.financial.instrument.swap.SwapFixedIborSpreadDefinition)
    {
        com.opengamma.analytics.financial.instrument.FixedReceiveCashFlowVisitor r0;
        com.opengamma.analytics.financial.instrument.swap.SwapFixedIborSpreadDefinition r1;
        java.util.Map $r2;

        r0 := @this: com.opengamma.analytics.financial.instrument.FixedReceiveCashFlowVisitor;

        r1 := @parameter0: com.opengamma.analytics.financial.instrument.swap.SwapFixedIborSpreadDefinition;

        $r2 = virtualinvoke r0.<com.opengamma.analytics.financial.instrument.FixedReceiveCashFlowVisitor: java.util.Map visitSwapFixedIborSpreadDefinition(com.opengamma.analytics.financial.instrument.swap.SwapFixedIborSpreadDefinition)>(r1);

        return $r2;
    }

    public volatile java.lang.Object visitSwapFixedIborSpreadDefinition(com.opengamma.analytics.financial.instrument.swap.SwapFixedIborSpreadDefinition, java.lang.Object)
    {
        com.opengamma.analytics.financial.instrument.FixedReceiveCashFlowVisitor r0;
        com.opengamma.analytics.financial.instrument.swap.SwapFixedIborSpreadDefinition r1;
        java.lang.Object r2;
        com.opengamma.timeseries.DoubleTimeSeries $r3;
        java.util.Map $r4;

        r0 := @this: com.opengamma.analytics.financial.instrument.FixedReceiveCashFlowVisitor;

        r1 := @parameter0: com.opengamma.analytics.financial.instrument.swap.SwapFixedIborSpreadDefinition;

        r2 := @parameter1: java.lang.Object;

        $r3 = (com.opengamma.timeseries.DoubleTimeSeries) r2;

        $r4 = virtualinvoke r0.<com.opengamma.analytics.financial.instrument.FixedReceiveCashFlowVisitor: java.util.Map visitSwapFixedIborSpreadDefinition(com.opengamma.analytics.financial.instrument.swap.SwapFixedIborSpreadDefinition,com.opengamma.timeseries.DoubleTimeSeries)>(r1, $r3);

        return $r4;
    }

    public volatile java.lang.Object visitSwapFixedIborDefinition(com.opengamma.analytics.financial.instrument.swap.SwapFixedIborDefinition)
    {
        com.opengamma.analytics.financial.instrument.FixedReceiveCashFlowVisitor r0;
        com.opengamma.analytics.financial.instrument.swap.SwapFixedIborDefinition r1;
        java.util.Map $r2;

        r0 := @this: com.opengamma.analytics.financial.instrument.FixedReceiveCashFlowVisitor;

        r1 := @parameter0: com.opengamma.analytics.financial.instrument.swap.SwapFixedIborDefinition;

        $r2 = virtualinvoke r0.<com.opengamma.analytics.financial.instrument.FixedReceiveCashFlowVisitor: java.util.Map visitSwapFixedIborDefinition(com.opengamma.analytics.financial.instrument.swap.SwapFixedIborDefinition)>(r1);

        return $r2;
    }

    public volatile java.lang.Object visitSwapFixedIborDefinition(com.opengamma.analytics.financial.instrument.swap.SwapFixedIborDefinition, java.lang.Object)
    {
        com.opengamma.analytics.financial.instrument.FixedReceiveCashFlowVisitor r0;
        com.opengamma.analytics.financial.instrument.swap.SwapFixedIborDefinition r1;
        java.lang.Object r2;
        com.opengamma.timeseries.DoubleTimeSeries $r3;
        java.util.Map $r4;

        r0 := @this: com.opengamma.analytics.financial.instrument.FixedReceiveCashFlowVisitor;

        r1 := @parameter0: com.opengamma.analytics.financial.instrument.swap.SwapFixedIborDefinition;

        r2 := @parameter1: java.lang.Object;

        $r3 = (com.opengamma.timeseries.DoubleTimeSeries) r2;

        $r4 = virtualinvoke r0.<com.opengamma.analytics.financial.instrument.FixedReceiveCashFlowVisitor: java.util.Map visitSwapFixedIborDefinition(com.opengamma.analytics.financial.instrument.swap.SwapFixedIborDefinition,com.opengamma.timeseries.DoubleTimeSeries)>(r1, $r3);

        return $r4;
    }

    public volatile java.lang.Object visitAnnuityDefinition(com.opengamma.analytics.financial.instrument.annuity.AnnuityDefinition, java.lang.Object)
    {
        com.opengamma.analytics.financial.instrument.FixedReceiveCashFlowVisitor r0;
        com.opengamma.analytics.financial.instrument.annuity.AnnuityDefinition r1;
        java.lang.Object r2;
        com.opengamma.timeseries.DoubleTimeSeries $r3;
        java.util.Map $r4;

        r0 := @this: com.opengamma.analytics.financial.instrument.FixedReceiveCashFlowVisitor;

        r1 := @parameter0: com.opengamma.analytics.financial.instrument.annuity.AnnuityDefinition;

        r2 := @parameter1: java.lang.Object;

        $r3 = (com.opengamma.timeseries.DoubleTimeSeries) r2;

        $r4 = virtualinvoke r0.<com.opengamma.analytics.financial.instrument.FixedReceiveCashFlowVisitor: java.util.Map visitAnnuityDefinition(com.opengamma.analytics.financial.instrument.annuity.AnnuityDefinition,com.opengamma.timeseries.DoubleTimeSeries)>(r1, $r3);

        return $r4;
    }

    public volatile java.lang.Object visitCouponIborSpreadDefinition(com.opengamma.analytics.financial.instrument.payment.CouponIborSpreadDefinition)
    {
        com.opengamma.analytics.financial.instrument.FixedReceiveCashFlowVisitor r0;
        com.opengamma.analytics.financial.instrument.payment.CouponIborSpreadDefinition r1;
        java.util.Map $r2;

        r0 := @this: com.opengamma.analytics.financial.instrument.FixedReceiveCashFlowVisitor;

        r1 := @parameter0: com.opengamma.analytics.financial.instrument.payment.CouponIborSpreadDefinition;

        $r2 = virtualinvoke r0.<com.opengamma.analytics.financial.instrument.FixedReceiveCashFlowVisitor: java.util.Map visitCouponIborSpreadDefinition(com.opengamma.analytics.financial.instrument.payment.CouponIborSpreadDefinition)>(r1);

        return $r2;
    }

    public volatile java.lang.Object visitCouponIborSpreadDefinition(com.opengamma.analytics.financial.instrument.payment.CouponIborSpreadDefinition, java.lang.Object)
    {
        com.opengamma.analytics.financial.instrument.FixedReceiveCashFlowVisitor r0;
        com.opengamma.analytics.financial.instrument.payment.CouponIborSpreadDefinition r1;
        java.lang.Object r2;
        com.opengamma.timeseries.DoubleTimeSeries $r3;
        java.util.Map $r4;

        r0 := @this: com.opengamma.analytics.financial.instrument.FixedReceiveCashFlowVisitor;

        r1 := @parameter0: com.opengamma.analytics.financial.instrument.payment.CouponIborSpreadDefinition;

        r2 := @parameter1: java.lang.Object;

        $r3 = (com.opengamma.timeseries.DoubleTimeSeries) r2;

        $r4 = virtualinvoke r0.<com.opengamma.analytics.financial.instrument.FixedReceiveCashFlowVisitor: java.util.Map visitCouponIborSpreadDefinition(com.opengamma.analytics.financial.instrument.payment.CouponIborSpreadDefinition,com.opengamma.timeseries.DoubleTimeSeries)>(r1, $r3);

        return $r4;
    }

    public volatile java.lang.Object visitCouponIborDefinition(com.opengamma.analytics.financial.instrument.payment.CouponIborDefinition)
    {
        com.opengamma.analytics.financial.instrument.FixedReceiveCashFlowVisitor r0;
        com.opengamma.analytics.financial.instrument.payment.CouponIborDefinition r1;
        java.util.Map $r2;

        r0 := @this: com.opengamma.analytics.financial.instrument.FixedReceiveCashFlowVisitor;

        r1 := @parameter0: com.opengamma.analytics.financial.instrument.payment.CouponIborDefinition;

        $r2 = virtualinvoke r0.<com.opengamma.analytics.financial.instrument.FixedReceiveCashFlowVisitor: java.util.Map visitCouponIborDefinition(com.opengamma.analytics.financial.instrument.payment.CouponIborDefinition)>(r1);

        return $r2;
    }

    public volatile java.lang.Object visitCouponIborDefinition(com.opengamma.analytics.financial.instrument.payment.CouponIborDefinition, java.lang.Object)
    {
        com.opengamma.analytics.financial.instrument.FixedReceiveCashFlowVisitor r0;
        com.opengamma.analytics.financial.instrument.payment.CouponIborDefinition r1;
        java.lang.Object r2;
        com.opengamma.timeseries.DoubleTimeSeries $r3;
        java.util.Map $r4;

        r0 := @this: com.opengamma.analytics.financial.instrument.FixedReceiveCashFlowVisitor;

        r1 := @parameter0: com.opengamma.analytics.financial.instrument.payment.CouponIborDefinition;

        r2 := @parameter1: java.lang.Object;

        $r3 = (com.opengamma.timeseries.DoubleTimeSeries) r2;

        $r4 = virtualinvoke r0.<com.opengamma.analytics.financial.instrument.FixedReceiveCashFlowVisitor: java.util.Map visitCouponIborDefinition(com.opengamma.analytics.financial.instrument.payment.CouponIborDefinition,com.opengamma.timeseries.DoubleTimeSeries)>(r1, $r3);

        return $r4;
    }

    public volatile java.lang.Object visitCouponFixedDefinition(com.opengamma.analytics.financial.instrument.payment.CouponFixedDefinition)
    {
        com.opengamma.analytics.financial.instrument.FixedReceiveCashFlowVisitor r0;
        com.opengamma.analytics.financial.instrument.payment.CouponFixedDefinition r1;
        java.util.Map $r2;

        r0 := @this: com.opengamma.analytics.financial.instrument.FixedReceiveCashFlowVisitor;

        r1 := @parameter0: com.opengamma.analytics.financial.instrument.payment.CouponFixedDefinition;

        $r2 = virtualinvoke r0.<com.opengamma.analytics.financial.instrument.FixedReceiveCashFlowVisitor: java.util.Map visitCouponFixedDefinition(com.opengamma.analytics.financial.instrument.payment.CouponFixedDefinition)>(r1);

        return $r2;
    }

    public volatile java.lang.Object visitCouponFixedDefinition(com.opengamma.analytics.financial.instrument.payment.CouponFixedDefinition, java.lang.Object)
    {
        com.opengamma.analytics.financial.instrument.FixedReceiveCashFlowVisitor r0;
        com.opengamma.analytics.financial.instrument.payment.CouponFixedDefinition r1;
        java.lang.Object r2;
        com.opengamma.timeseries.DoubleTimeSeries $r3;
        java.util.Map $r4;

        r0 := @this: com.opengamma.analytics.financial.instrument.FixedReceiveCashFlowVisitor;

        r1 := @parameter0: com.opengamma.analytics.financial.instrument.payment.CouponFixedDefinition;

        r2 := @parameter1: java.lang.Object;

        $r3 = (com.opengamma.timeseries.DoubleTimeSeries) r2;

        $r4 = virtualinvoke r0.<com.opengamma.analytics.financial.instrument.FixedReceiveCashFlowVisitor: java.util.Map visitCouponFixedDefinition(com.opengamma.analytics.financial.instrument.payment.CouponFixedDefinition,com.opengamma.timeseries.DoubleTimeSeries)>(r1, $r3);

        return $r4;
    }

    public volatile java.lang.Object visitPaymentFixedDefinition(com.opengamma.analytics.financial.instrument.payment.PaymentFixedDefinition)
    {
        com.opengamma.analytics.financial.instrument.FixedReceiveCashFlowVisitor r0;
        com.opengamma.analytics.financial.instrument.payment.PaymentFixedDefinition r1;
        java.util.Map $r2;

        r0 := @this: com.opengamma.analytics.financial.instrument.FixedReceiveCashFlowVisitor;

        r1 := @parameter0: com.opengamma.analytics.financial.instrument.payment.PaymentFixedDefinition;

        $r2 = virtualinvoke r0.<com.opengamma.analytics.financial.instrument.FixedReceiveCashFlowVisitor: java.util.Map visitPaymentFixedDefinition(com.opengamma.analytics.financial.instrument.payment.PaymentFixedDefinition)>(r1);

        return $r2;
    }

    public volatile java.lang.Object visitPaymentFixedDefinition(com.opengamma.analytics.financial.instrument.payment.PaymentFixedDefinition, java.lang.Object)
    {
        com.opengamma.analytics.financial.instrument.FixedReceiveCashFlowVisitor r0;
        com.opengamma.analytics.financial.instrument.payment.PaymentFixedDefinition r1;
        java.lang.Object r2;
        com.opengamma.timeseries.DoubleTimeSeries $r3;
        java.util.Map $r4;

        r0 := @this: com.opengamma.analytics.financial.instrument.FixedReceiveCashFlowVisitor;

        r1 := @parameter0: com.opengamma.analytics.financial.instrument.payment.PaymentFixedDefinition;

        r2 := @parameter1: java.lang.Object;

        $r3 = (com.opengamma.timeseries.DoubleTimeSeries) r2;

        $r4 = virtualinvoke r0.<com.opengamma.analytics.financial.instrument.FixedReceiveCashFlowVisitor: java.util.Map visitPaymentFixedDefinition(com.opengamma.analytics.financial.instrument.payment.PaymentFixedDefinition,com.opengamma.timeseries.DoubleTimeSeries)>(r1, $r3);

        return $r4;
    }

    public volatile java.lang.Object visitForwardRateAgreementDefinition(com.opengamma.analytics.financial.instrument.fra.ForwardRateAgreementDefinition)
    {
        com.opengamma.analytics.financial.instrument.FixedReceiveCashFlowVisitor r0;
        com.opengamma.analytics.financial.instrument.fra.ForwardRateAgreementDefinition r1;
        java.util.Map $r2;

        r0 := @this: com.opengamma.analytics.financial.instrument.FixedReceiveCashFlowVisitor;

        r1 := @parameter0: com.opengamma.analytics.financial.instrument.fra.ForwardRateAgreementDefinition;

        $r2 = virtualinvoke r0.<com.opengamma.analytics.financial.instrument.FixedReceiveCashFlowVisitor: java.util.Map visitForwardRateAgreementDefinition(com.opengamma.analytics.financial.instrument.fra.ForwardRateAgreementDefinition)>(r1);

        return $r2;
    }

    public volatile java.lang.Object visitForwardRateAgreementDefinition(com.opengamma.analytics.financial.instrument.fra.ForwardRateAgreementDefinition, java.lang.Object)
    {
        com.opengamma.analytics.financial.instrument.FixedReceiveCashFlowVisitor r0;
        com.opengamma.analytics.financial.instrument.fra.ForwardRateAgreementDefinition r1;
        java.lang.Object r2;
        com.opengamma.timeseries.DoubleTimeSeries $r3;
        java.util.Map $r4;

        r0 := @this: com.opengamma.analytics.financial.instrument.FixedReceiveCashFlowVisitor;

        r1 := @parameter0: com.opengamma.analytics.financial.instrument.fra.ForwardRateAgreementDefinition;

        r2 := @parameter1: java.lang.Object;

        $r3 = (com.opengamma.timeseries.DoubleTimeSeries) r2;

        $r4 = virtualinvoke r0.<com.opengamma.analytics.financial.instrument.FixedReceiveCashFlowVisitor: java.util.Map visitForwardRateAgreementDefinition(com.opengamma.analytics.financial.instrument.fra.ForwardRateAgreementDefinition,com.opengamma.timeseries.DoubleTimeSeries)>(r1, $r3);

        return $r4;
    }

    public volatile java.lang.Object visitCashDefinition(com.opengamma.analytics.financial.instrument.cash.CashDefinition)
    {
        com.opengamma.analytics.financial.instrument.FixedReceiveCashFlowVisitor r0;
        com.opengamma.analytics.financial.instrument.cash.CashDefinition r1;
        java.util.Map $r2;

        r0 := @this: com.opengamma.analytics.financial.instrument.FixedReceiveCashFlowVisitor;

        r1 := @parameter0: com.opengamma.analytics.financial.instrument.cash.CashDefinition;

        $r2 = virtualinvoke r0.<com.opengamma.analytics.financial.instrument.FixedReceiveCashFlowVisitor: java.util.Map visitCashDefinition(com.opengamma.analytics.financial.instrument.cash.CashDefinition)>(r1);

        return $r2;
    }

    public volatile java.lang.Object visitCashDefinition(com.opengamma.analytics.financial.instrument.cash.CashDefinition, java.lang.Object)
    {
        com.opengamma.analytics.financial.instrument.FixedReceiveCashFlowVisitor r0;
        com.opengamma.analytics.financial.instrument.cash.CashDefinition r1;
        java.lang.Object r2;
        com.opengamma.timeseries.DoubleTimeSeries $r3;
        java.util.Map $r4;

        r0 := @this: com.opengamma.analytics.financial.instrument.FixedReceiveCashFlowVisitor;

        r1 := @parameter0: com.opengamma.analytics.financial.instrument.cash.CashDefinition;

        r2 := @parameter1: java.lang.Object;

        $r3 = (com.opengamma.timeseries.DoubleTimeSeries) r2;

        $r4 = virtualinvoke r0.<com.opengamma.analytics.financial.instrument.FixedReceiveCashFlowVisitor: java.util.Map visitCashDefinition(com.opengamma.analytics.financial.instrument.cash.CashDefinition,com.opengamma.timeseries.DoubleTimeSeries)>(r1, $r3);

        return $r4;
    }

    static void <clinit>()
    {
        org.slf4j.Logger $r0;
        com.opengamma.analytics.financial.instrument.FixedReceiveCashFlowVisitor $r1;

        $r0 = staticinvoke <org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>(class "com/opengamma/analytics/financial/instrument/FixedReceiveCashFlowVisitor");

        <com.opengamma.analytics.financial.instrument.FixedReceiveCashFlowVisitor: org.slf4j.Logger s_logger> = $r0;

        $r1 = new com.opengamma.analytics.financial.instrument.FixedReceiveCashFlowVisitor;

        specialinvoke $r1.<com.opengamma.analytics.financial.instrument.FixedReceiveCashFlowVisitor: void <init>()>();

        <com.opengamma.analytics.financial.instrument.FixedReceiveCashFlowVisitor: com.opengamma.analytics.financial.instrument.FixedReceiveCashFlowVisitor INSTANCE> = $r1;

        return;
    }
}
