public class org.jcp.xml.dsig.internal.dom.DOMUtils extends java.lang.Object
{

    private void <init>()
    {
        org.jcp.xml.dsig.internal.dom.DOMUtils r0;

        r0 := @this: org.jcp.xml.dsig.internal.dom.DOMUtils;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static org.w3c.dom.Document getOwnerDocument(org.w3c.dom.Node)
    {
        org.w3c.dom.Node r0;
        short $s0;
        org.w3c.dom.Document $r1, $r2;

        r0 := @parameter0: org.w3c.dom.Node;

        $s0 = interfaceinvoke r0.<org.w3c.dom.Node: short getNodeType()>();

        if $s0 != 9 goto label1;

        $r2 = (org.w3c.dom.Document) r0;

        return $r2;

     label1:
        $r1 = interfaceinvoke r0.<org.w3c.dom.Node: org.w3c.dom.Document getOwnerDocument()>();

        return $r1;
    }

    public static org.w3c.dom.Element createElement(org.w3c.dom.Document, java.lang.String, java.lang.String, java.lang.String)
    {
        org.w3c.dom.Document r0;
        java.lang.String r1, r2, r3, $r10;
        org.w3c.dom.Element $r5;
        int $i0;
        java.lang.StringBuilder $r6, $r7, $r8, $r9;

        r0 := @parameter0: org.w3c.dom.Document;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: java.lang.String;

        if r3 == null goto label1;

        $i0 = virtualinvoke r3.<java.lang.String: int length()>();

        if $i0 != 0 goto label2;

     label1:
        $r10 = r1;

        goto label3;

     label2:
        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

     label3:
        $r5 = interfaceinvoke r0.<org.w3c.dom.Document: org.w3c.dom.Element createElementNS(java.lang.String,java.lang.String)>(r2, $r10);

        return $r5;
    }

    public static void setAttribute(org.w3c.dom.Element, java.lang.String, java.lang.String)
    {
        org.w3c.dom.Element r0;
        java.lang.String r1, r2;

        r0 := @parameter0: org.w3c.dom.Element;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        if r2 != null goto label1;

        return;

     label1:
        interfaceinvoke r0.<org.w3c.dom.Element: void setAttributeNS(java.lang.String,java.lang.String,java.lang.String)>(null, r1, r2);

        return;
    }

    public static void setAttributeID(org.w3c.dom.Element, java.lang.String, java.lang.String)
    {
        org.w3c.dom.Element r0;
        java.lang.String r1, r2;

        r0 := @parameter0: org.w3c.dom.Element;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        if r2 != null goto label1;

        return;

     label1:
        interfaceinvoke r0.<org.w3c.dom.Element: void setAttributeNS(java.lang.String,java.lang.String,java.lang.String)>(null, r1, r2);

        interfaceinvoke r0.<org.w3c.dom.Element: void setIdAttributeNS(java.lang.String,java.lang.String,boolean)>(null, r1, 1);

        return;
    }

    public static org.w3c.dom.Element getFirstChildElement(org.w3c.dom.Node)
    {
        org.w3c.dom.Node r0, r2;
        org.w3c.dom.Element $r1;
        short $s0;

        r0 := @parameter0: org.w3c.dom.Node;

        r2 = interfaceinvoke r0.<org.w3c.dom.Node: org.w3c.dom.Node getFirstChild()>();

     label1:
        if r2 == null goto label2;

        $s0 = interfaceinvoke r2.<org.w3c.dom.Node: short getNodeType()>();

        if $s0 == 1 goto label2;

        r2 = interfaceinvoke r2.<org.w3c.dom.Node: org.w3c.dom.Node getNextSibling()>();

        goto label1;

     label2:
        $r1 = (org.w3c.dom.Element) r2;

        return $r1;
    }

    public static org.w3c.dom.Element getLastChildElement(org.w3c.dom.Node)
    {
        org.w3c.dom.Node r0, r2;
        org.w3c.dom.Element $r1;
        short $s0;

        r0 := @parameter0: org.w3c.dom.Node;

        r2 = interfaceinvoke r0.<org.w3c.dom.Node: org.w3c.dom.Node getLastChild()>();

     label1:
        if r2 == null goto label2;

        $s0 = interfaceinvoke r2.<org.w3c.dom.Node: short getNodeType()>();

        if $s0 == 1 goto label2;

        r2 = interfaceinvoke r2.<org.w3c.dom.Node: org.w3c.dom.Node getPreviousSibling()>();

        goto label1;

     label2:
        $r1 = (org.w3c.dom.Element) r2;

        return $r1;
    }

    public static org.w3c.dom.Element getNextSiblingElement(org.w3c.dom.Node)
    {
        org.w3c.dom.Node r0, r2;
        org.w3c.dom.Element $r1;
        short $s0;

        r0 := @parameter0: org.w3c.dom.Node;

        r2 = interfaceinvoke r0.<org.w3c.dom.Node: org.w3c.dom.Node getNextSibling()>();

     label1:
        if r2 == null goto label2;

        $s0 = interfaceinvoke r2.<org.w3c.dom.Node: short getNodeType()>();

        if $s0 == 1 goto label2;

        r2 = interfaceinvoke r2.<org.w3c.dom.Node: org.w3c.dom.Node getNextSibling()>();

        goto label1;

     label2:
        $r1 = (org.w3c.dom.Element) r2;

        return $r1;
    }

    public static java.lang.String getAttributeValue(org.w3c.dom.Element, java.lang.String)
    {
        org.w3c.dom.Element r0;
        java.lang.String r1, $r3;
        org.w3c.dom.Attr r2;

        r0 := @parameter0: org.w3c.dom.Element;

        r1 := @parameter1: java.lang.String;

        r2 = interfaceinvoke r0.<org.w3c.dom.Element: org.w3c.dom.Attr getAttributeNodeNS(java.lang.String,java.lang.String)>(null, r1);

        if r2 != null goto label1;

        $r3 = null;

        goto label2;

     label1:
        $r3 = interfaceinvoke r2.<org.w3c.dom.Attr: java.lang.String getValue()>();

     label2:
        return $r3;
    }

    public static java.util.Set nodeSet(org.w3c.dom.NodeList)
    {
        org.w3c.dom.NodeList r0;
        org.jcp.xml.dsig.internal.dom.DOMUtils$NodeSet $r1;

        r0 := @parameter0: org.w3c.dom.NodeList;

        $r1 = new org.jcp.xml.dsig.internal.dom.DOMUtils$NodeSet;

        specialinvoke $r1.<org.jcp.xml.dsig.internal.dom.DOMUtils$NodeSet: void <init>(org.w3c.dom.NodeList)>(r0);

        return $r1;
    }

    public static java.lang.String getNSPrefix(javax.xml.crypto.XMLCryptoContext, java.lang.String)
    {
        javax.xml.crypto.XMLCryptoContext r0;
        java.lang.String r1, $r2, $r3;

        r0 := @parameter0: javax.xml.crypto.XMLCryptoContext;

        r1 := @parameter1: java.lang.String;

        if r0 == null goto label1;

        $r2 = interfaceinvoke r0.<javax.xml.crypto.XMLCryptoContext: java.lang.String getDefaultNamespacePrefix()>();

        $r3 = interfaceinvoke r0.<javax.xml.crypto.XMLCryptoContext: java.lang.String getNamespacePrefix(java.lang.String,java.lang.String)>(r1, $r2);

        return $r3;

     label1:
        return null;
    }

    public static java.lang.String getSignaturePrefix(javax.xml.crypto.XMLCryptoContext)
    {
        javax.xml.crypto.XMLCryptoContext r0;
        java.lang.String $r1;

        r0 := @parameter0: javax.xml.crypto.XMLCryptoContext;

        $r1 = staticinvoke <org.jcp.xml.dsig.internal.dom.DOMUtils: java.lang.String getNSPrefix(javax.xml.crypto.XMLCryptoContext,java.lang.String)>(r0, "http://www.w3.org/2000/09/xmldsig#");

        return $r1;
    }

    public static void removeAllChildren(org.w3c.dom.Node)
    {
        org.w3c.dom.Node r0, $r2;
        org.w3c.dom.NodeList r1;
        int i0, i1;

        r0 := @parameter0: org.w3c.dom.Node;

        r1 = interfaceinvoke r0.<org.w3c.dom.Node: org.w3c.dom.NodeList getChildNodes()>();

        i1 = 0;

        i0 = interfaceinvoke r1.<org.w3c.dom.NodeList: int getLength()>();

     label1:
        if i1 >= i0 goto label2;

        $r2 = interfaceinvoke r1.<org.w3c.dom.NodeList: org.w3c.dom.Node item(int)>(i1);

        interfaceinvoke r0.<org.w3c.dom.Node: org.w3c.dom.Node removeChild(org.w3c.dom.Node)>($r2);

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    public static boolean nodesEqual(org.w3c.dom.Node, org.w3c.dom.Node)
    {
        org.w3c.dom.Node r0, r1;
        short $s0, $s1;

        r0 := @parameter0: org.w3c.dom.Node;

        r1 := @parameter1: org.w3c.dom.Node;

        if r0 != r1 goto label1;

        return 1;

     label1:
        $s0 = interfaceinvoke r0.<org.w3c.dom.Node: short getNodeType()>();

        $s1 = interfaceinvoke r1.<org.w3c.dom.Node: short getNodeType()>();

        if $s0 == $s1 goto label2;

        return 0;

     label2:
        return 1;
    }

    public static void appendChild(org.w3c.dom.Node, org.w3c.dom.Node)
    {
        org.w3c.dom.Node r0, r1, $r5;
        org.w3c.dom.Document r2, $r3;

        r0 := @parameter0: org.w3c.dom.Node;

        r1 := @parameter1: org.w3c.dom.Node;

        r2 = staticinvoke <org.jcp.xml.dsig.internal.dom.DOMUtils: org.w3c.dom.Document getOwnerDocument(org.w3c.dom.Node)>(r0);

        $r3 = interfaceinvoke r1.<org.w3c.dom.Node: org.w3c.dom.Document getOwnerDocument()>();

        if $r3 == r2 goto label1;

        $r5 = interfaceinvoke r2.<org.w3c.dom.Document: org.w3c.dom.Node importNode(org.w3c.dom.Node,boolean)>(r1, 1);

        interfaceinvoke r0.<org.w3c.dom.Node: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>($r5);

        goto label2;

     label1:
        interfaceinvoke r0.<org.w3c.dom.Node: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>(r1);

     label2:
        return;
    }

    public static boolean paramsEqual(java.security.spec.AlgorithmParameterSpec, java.security.spec.AlgorithmParameterSpec)
    {
        java.security.spec.AlgorithmParameterSpec r0, r1;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11;
        javax.xml.crypto.dsig.spec.XSLTTransformParameterSpec $r2, $r3;
        javax.xml.crypto.dsig.spec.XPathFilterParameterSpec $r4, $r5;
        javax.xml.crypto.dsig.spec.ExcC14NParameterSpec $r6, $r7;
        javax.xml.crypto.dsig.spec.XPathFilter2ParameterSpec $r8, $r9;

        r0 := @parameter0: java.security.spec.AlgorithmParameterSpec;

        r1 := @parameter1: java.security.spec.AlgorithmParameterSpec;

        if r0 != r1 goto label1;

        return 1;

     label1:
        $z0 = r0 instanceof javax.xml.crypto.dsig.spec.XPathFilter2ParameterSpec;

        if $z0 == 0 goto label2;

        $z10 = r1 instanceof javax.xml.crypto.dsig.spec.XPathFilter2ParameterSpec;

        if $z10 == 0 goto label2;

        $r9 = (javax.xml.crypto.dsig.spec.XPathFilter2ParameterSpec) r0;

        $r8 = (javax.xml.crypto.dsig.spec.XPathFilter2ParameterSpec) r1;

        $z11 = staticinvoke <org.jcp.xml.dsig.internal.dom.DOMUtils: boolean paramsEqual(javax.xml.crypto.dsig.spec.XPathFilter2ParameterSpec,javax.xml.crypto.dsig.spec.XPathFilter2ParameterSpec)>($r9, $r8);

        return $z11;

     label2:
        $z1 = r0 instanceof javax.xml.crypto.dsig.spec.ExcC14NParameterSpec;

        if $z1 == 0 goto label3;

        $z8 = r1 instanceof javax.xml.crypto.dsig.spec.ExcC14NParameterSpec;

        if $z8 == 0 goto label3;

        $r7 = (javax.xml.crypto.dsig.spec.ExcC14NParameterSpec) r0;

        $r6 = (javax.xml.crypto.dsig.spec.ExcC14NParameterSpec) r1;

        $z9 = staticinvoke <org.jcp.xml.dsig.internal.dom.DOMUtils: boolean paramsEqual(javax.xml.crypto.dsig.spec.ExcC14NParameterSpec,javax.xml.crypto.dsig.spec.ExcC14NParameterSpec)>($r7, $r6);

        return $z9;

     label3:
        $z2 = r0 instanceof javax.xml.crypto.dsig.spec.XPathFilterParameterSpec;

        if $z2 == 0 goto label4;

        $z6 = r1 instanceof javax.xml.crypto.dsig.spec.XPathFilterParameterSpec;

        if $z6 == 0 goto label4;

        $r5 = (javax.xml.crypto.dsig.spec.XPathFilterParameterSpec) r0;

        $r4 = (javax.xml.crypto.dsig.spec.XPathFilterParameterSpec) r1;

        $z7 = staticinvoke <org.jcp.xml.dsig.internal.dom.DOMUtils: boolean paramsEqual(javax.xml.crypto.dsig.spec.XPathFilterParameterSpec,javax.xml.crypto.dsig.spec.XPathFilterParameterSpec)>($r5, $r4);

        return $z7;

     label4:
        $z3 = r0 instanceof javax.xml.crypto.dsig.spec.XSLTTransformParameterSpec;

        if $z3 == 0 goto label5;

        $z4 = r1 instanceof javax.xml.crypto.dsig.spec.XSLTTransformParameterSpec;

        if $z4 == 0 goto label5;

        $r3 = (javax.xml.crypto.dsig.spec.XSLTTransformParameterSpec) r0;

        $r2 = (javax.xml.crypto.dsig.spec.XSLTTransformParameterSpec) r1;

        $z5 = staticinvoke <org.jcp.xml.dsig.internal.dom.DOMUtils: boolean paramsEqual(javax.xml.crypto.dsig.spec.XSLTTransformParameterSpec,javax.xml.crypto.dsig.spec.XSLTTransformParameterSpec)>($r3, $r2);

        return $z5;

     label5:
        return 0;
    }

    private static boolean paramsEqual(javax.xml.crypto.dsig.spec.XPathFilter2ParameterSpec, javax.xml.crypto.dsig.spec.XPathFilter2ParameterSpec)
    {
        javax.xml.crypto.dsig.spec.XPathFilter2ParameterSpec r0, r1;
        java.util.List r2, r3;
        int i0, $i1, i2;
        javax.xml.crypto.dsig.spec.XPathType r4, r5;
        java.lang.Object $r6, $r7;
        java.lang.String $r8, $r9;
        boolean $z0, $z1;
        java.util.Map $r10, $r11;
        javax.xml.crypto.dsig.spec.XPathType$Filter $r12, $r13;

        r0 := @parameter0: javax.xml.crypto.dsig.spec.XPathFilter2ParameterSpec;

        r1 := @parameter1: javax.xml.crypto.dsig.spec.XPathFilter2ParameterSpec;

        r2 = virtualinvoke r0.<javax.xml.crypto.dsig.spec.XPathFilter2ParameterSpec: java.util.List getXPathList()>();

        r3 = virtualinvoke r1.<javax.xml.crypto.dsig.spec.XPathFilter2ParameterSpec: java.util.List getXPathList()>();

        i0 = interfaceinvoke r2.<java.util.List: int size()>();

        $i1 = interfaceinvoke r3.<java.util.List: int size()>();

        if i0 == $i1 goto label1;

        return 0;

     label1:
        i2 = 0;

     label2:
        if i2 >= i0 goto label5;

        $r6 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>(i2);

        r4 = (javax.xml.crypto.dsig.spec.XPathType) $r6;

        $r7 = interfaceinvoke r3.<java.util.List: java.lang.Object get(int)>(i2);

        r5 = (javax.xml.crypto.dsig.spec.XPathType) $r7;

        $r8 = virtualinvoke r4.<javax.xml.crypto.dsig.spec.XPathType: java.lang.String getExpression()>();

        $r9 = virtualinvoke r5.<javax.xml.crypto.dsig.spec.XPathType: java.lang.String getExpression()>();

        $z0 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>($r9);

        if $z0 == 0 goto label3;

        $r10 = virtualinvoke r4.<javax.xml.crypto.dsig.spec.XPathType: java.util.Map getNamespaceMap()>();

        $r11 = virtualinvoke r5.<javax.xml.crypto.dsig.spec.XPathType: java.util.Map getNamespaceMap()>();

        $z1 = interfaceinvoke $r10.<java.util.Map: boolean equals(java.lang.Object)>($r11);

        if $z1 == 0 goto label3;

        $r12 = virtualinvoke r4.<javax.xml.crypto.dsig.spec.XPathType: javax.xml.crypto.dsig.spec.XPathType$Filter getFilter()>();

        $r13 = virtualinvoke r5.<javax.xml.crypto.dsig.spec.XPathType: javax.xml.crypto.dsig.spec.XPathType$Filter getFilter()>();

        if $r12 == $r13 goto label4;

     label3:
        return 0;

     label4:
        i2 = i2 + 1;

        goto label2;

     label5:
        return 1;
    }

    private static boolean paramsEqual(javax.xml.crypto.dsig.spec.ExcC14NParameterSpec, javax.xml.crypto.dsig.spec.ExcC14NParameterSpec)
    {
        javax.xml.crypto.dsig.spec.ExcC14NParameterSpec r0, r1;
        java.util.List $r2, $r3;
        boolean $z0;

        r0 := @parameter0: javax.xml.crypto.dsig.spec.ExcC14NParameterSpec;

        r1 := @parameter1: javax.xml.crypto.dsig.spec.ExcC14NParameterSpec;

        $r2 = virtualinvoke r0.<javax.xml.crypto.dsig.spec.ExcC14NParameterSpec: java.util.List getPrefixList()>();

        $r3 = virtualinvoke r1.<javax.xml.crypto.dsig.spec.ExcC14NParameterSpec: java.util.List getPrefixList()>();

        $z0 = interfaceinvoke $r2.<java.util.List: boolean equals(java.lang.Object)>($r3);

        return $z0;
    }

    private static boolean paramsEqual(javax.xml.crypto.dsig.spec.XPathFilterParameterSpec, javax.xml.crypto.dsig.spec.XPathFilterParameterSpec)
    {
        javax.xml.crypto.dsig.spec.XPathFilterParameterSpec r0, r1;
        java.lang.String $r2, $r3;
        boolean $z0, $z1, $z2;
        java.util.Map $r4, $r5;

        r0 := @parameter0: javax.xml.crypto.dsig.spec.XPathFilterParameterSpec;

        r1 := @parameter1: javax.xml.crypto.dsig.spec.XPathFilterParameterSpec;

        $r2 = virtualinvoke r0.<javax.xml.crypto.dsig.spec.XPathFilterParameterSpec: java.lang.String getXPath()>();

        $r3 = virtualinvoke r1.<javax.xml.crypto.dsig.spec.XPathFilterParameterSpec: java.lang.String getXPath()>();

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        if $z0 == 0 goto label1;

        $r4 = virtualinvoke r0.<javax.xml.crypto.dsig.spec.XPathFilterParameterSpec: java.util.Map getNamespaceMap()>();

        $r5 = virtualinvoke r1.<javax.xml.crypto.dsig.spec.XPathFilterParameterSpec: java.util.Map getNamespaceMap()>();

        $z1 = interfaceinvoke $r4.<java.util.Map: boolean equals(java.lang.Object)>($r5);

        if $z1 == 0 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        return $z2;
    }

    private static boolean paramsEqual(javax.xml.crypto.dsig.spec.XSLTTransformParameterSpec, javax.xml.crypto.dsig.spec.XSLTTransformParameterSpec)
    {
        javax.xml.crypto.dsig.spec.XSLTTransformParameterSpec r0, r1;
        javax.xml.crypto.XMLStructure r2, r4;
        org.w3c.dom.Node r3, r5;
        boolean $z0, $z1;
        javax.xml.crypto.dom.DOMStructure $r6, $r7;

        r0 := @parameter0: javax.xml.crypto.dsig.spec.XSLTTransformParameterSpec;

        r1 := @parameter1: javax.xml.crypto.dsig.spec.XSLTTransformParameterSpec;

        r2 = virtualinvoke r1.<javax.xml.crypto.dsig.spec.XSLTTransformParameterSpec: javax.xml.crypto.XMLStructure getStylesheet()>();

        $z0 = r2 instanceof javax.xml.crypto.dom.DOMStructure;

        if $z0 != 0 goto label1;

        return 0;

     label1:
        $r6 = (javax.xml.crypto.dom.DOMStructure) r2;

        r3 = virtualinvoke $r6.<javax.xml.crypto.dom.DOMStructure: org.w3c.dom.Node getNode()>();

        r4 = virtualinvoke r0.<javax.xml.crypto.dsig.spec.XSLTTransformParameterSpec: javax.xml.crypto.XMLStructure getStylesheet()>();

        $r7 = (javax.xml.crypto.dom.DOMStructure) r4;

        r5 = virtualinvoke $r7.<javax.xml.crypto.dom.DOMStructure: org.w3c.dom.Node getNode()>();

        $z1 = staticinvoke <org.jcp.xml.dsig.internal.dom.DOMUtils: boolean nodesEqual(org.w3c.dom.Node,org.w3c.dom.Node)>(r5, r3);

        return $z1;
    }
}
