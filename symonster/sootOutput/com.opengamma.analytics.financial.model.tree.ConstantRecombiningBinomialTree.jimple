public class com.opengamma.analytics.financial.model.tree.ConstantRecombiningBinomialTree extends com.opengamma.analytics.financial.model.tree.RecombiningBinomialTree
{
    private final java.lang.Object _value;

    public void <init>(java.lang.Object)
    {
        com.opengamma.analytics.financial.model.tree.ConstantRecombiningBinomialTree r0;
        java.lang.Object r1;
        java.lang.Object[][] $r2;

        r0 := @this: com.opengamma.analytics.financial.model.tree.ConstantRecombiningBinomialTree;

        r1 := @parameter0: java.lang.Object;

        $r2 = staticinvoke <com.opengamma.analytics.financial.model.tree.ConstantRecombiningBinomialTree: java.lang.Object[][] make2DArray(java.lang.Object)>(r1);

        specialinvoke r0.<com.opengamma.analytics.financial.model.tree.RecombiningBinomialTree: void <init>(java.lang.Object[][])>($r2);

        r0.<com.opengamma.analytics.financial.model.tree.ConstantRecombiningBinomialTree: java.lang.Object _value> = r1;

        return;
    }

    private static java.lang.Object[][] make2DArray(java.lang.Object)
    {
        java.lang.Object r0, $r4;
        java.lang.Object[][] r1, $r5;
        java.lang.Class $r2;
        int[] $r3;
        java.lang.Object[] $r6;

        r0 := @parameter0: java.lang.Object;

        $r2 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = newarray (int)[2];

        $r3[0] = 1;

        $r3[1] = 1;

        $r4 = staticinvoke <java.lang.reflect.Array: java.lang.Object newInstance(java.lang.Class,int[])>($r2, $r3);

        $r5 = (java.lang.Object[][]) $r4;

        r1 = (java.lang.Object[][]) $r5;

        $r6 = r1[0];

        $r6[0] = r0;

        return r1;
    }

    public java.lang.Object getNode(int, int)
    {
        com.opengamma.analytics.financial.model.tree.ConstantRecombiningBinomialTree r0;
        int i0, i1, $i2, $i3;
        java.lang.Object $r1;
        java.lang.IllegalArgumentException $r2;
        java.lang.StringBuilder $r3, $r4, $r5, $r6, $r7;
        java.lang.String $r8;

        r0 := @this: com.opengamma.analytics.financial.model.tree.ConstantRecombiningBinomialTree;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $i2 = virtualinvoke r0.<com.opengamma.analytics.financial.model.tree.ConstantRecombiningBinomialTree: int getMaxNodesForStep(int)>(i0);

        if i1 <= $i2 goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Maximum number of nodes for step ");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is ");

        $i3 = virtualinvoke r0.<com.opengamma.analytics.financial.model.tree.ConstantRecombiningBinomialTree: int getMaxNodesForStep(int)>(i0);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r8);

        throw $r2;

     label1:
        $r1 = r0.<com.opengamma.analytics.financial.model.tree.ConstantRecombiningBinomialTree: java.lang.Object _value>;

        return $r1;
    }
}
