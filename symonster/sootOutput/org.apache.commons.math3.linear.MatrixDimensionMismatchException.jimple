public class org.apache.commons.math3.linear.MatrixDimensionMismatchException extends org.apache.commons.math3.exception.MultiDimensionMismatchException
{
    private static final long serialVersionUID;

    public void <init>(int, int, int, int)
    {
        org.apache.commons.math3.linear.MatrixDimensionMismatchException r0;
        int i0, i1, i2, i3;
        java.lang.Integer[] $r1, $r5;
        org.apache.commons.math3.exception.util.LocalizedFormats $r2;
        java.lang.Integer $r3, $r4, $r6, $r7;

        r0 := @this: org.apache.commons.math3.linear.MatrixDimensionMismatchException;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        $r2 = <org.apache.commons.math3.exception.util.LocalizedFormats: org.apache.commons.math3.exception.util.LocalizedFormats DIMENSIONS_MISMATCH_2x2>;

        $r1 = newarray (java.lang.Integer)[2];

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r1[0] = $r3;

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        $r1[1] = $r4;

        $r5 = newarray (java.lang.Integer)[2];

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i2);

        $r5[0] = $r6;

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i3);

        $r5[1] = $r7;

        specialinvoke r0.<org.apache.commons.math3.exception.MultiDimensionMismatchException: void <init>(org.apache.commons.math3.exception.util.Localizable,java.lang.Integer[],java.lang.Integer[])>($r2, $r1, $r5);

        return;
    }

    public int getWrongRowDimension()
    {
        org.apache.commons.math3.linear.MatrixDimensionMismatchException r0;
        int $i0;

        r0 := @this: org.apache.commons.math3.linear.MatrixDimensionMismatchException;

        $i0 = virtualinvoke r0.<org.apache.commons.math3.linear.MatrixDimensionMismatchException: int getWrongDimension(int)>(0);

        return $i0;
    }

    public int getExpectedRowDimension()
    {
        org.apache.commons.math3.linear.MatrixDimensionMismatchException r0;
        int $i0;

        r0 := @this: org.apache.commons.math3.linear.MatrixDimensionMismatchException;

        $i0 = virtualinvoke r0.<org.apache.commons.math3.linear.MatrixDimensionMismatchException: int getExpectedDimension(int)>(0);

        return $i0;
    }

    public int getWrongColumnDimension()
    {
        org.apache.commons.math3.linear.MatrixDimensionMismatchException r0;
        int $i0;

        r0 := @this: org.apache.commons.math3.linear.MatrixDimensionMismatchException;

        $i0 = virtualinvoke r0.<org.apache.commons.math3.linear.MatrixDimensionMismatchException: int getWrongDimension(int)>(1);

        return $i0;
    }

    public int getExpectedColumnDimension()
    {
        org.apache.commons.math3.linear.MatrixDimensionMismatchException r0;
        int $i0;

        r0 := @this: org.apache.commons.math3.linear.MatrixDimensionMismatchException;

        $i0 = virtualinvoke r0.<org.apache.commons.math3.linear.MatrixDimensionMismatchException: int getExpectedDimension(int)>(1);

        return $i0;
    }

    public static void <clinit>()
    {
        <org.apache.commons.math3.linear.MatrixDimensionMismatchException: long serialVersionUID> = -8415396756375798143L;

        return;
    }
}
