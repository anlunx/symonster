public class org.apache.commons.math.optimization.fitting.GaussianFitter extends java.lang.Object
{
    private final org.apache.commons.math.optimization.fitting.CurveFitter fitter;

    public void <init>(org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer)
    {
        org.apache.commons.math.optimization.fitting.GaussianFitter r0;
        org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer r1;
        org.apache.commons.math.optimization.fitting.CurveFitter $r2;

        r0 := @this: org.apache.commons.math.optimization.fitting.GaussianFitter;

        r1 := @parameter0: org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new org.apache.commons.math.optimization.fitting.CurveFitter;

        specialinvoke $r2.<org.apache.commons.math.optimization.fitting.CurveFitter: void <init>(org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer)>(r1);

        r0.<org.apache.commons.math.optimization.fitting.GaussianFitter: org.apache.commons.math.optimization.fitting.CurveFitter fitter> = $r2;

        return;
    }

    public void addObservedPoint(double, double)
    {
        org.apache.commons.math.optimization.fitting.GaussianFitter r0;
        double d0, d1;

        r0 := @this: org.apache.commons.math.optimization.fitting.GaussianFitter;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        virtualinvoke r0.<org.apache.commons.math.optimization.fitting.GaussianFitter: void addObservedPoint(double,double,double)>(1.0, d0, d1);

        return;
    }

    public void addObservedPoint(double, double, double)
    {
        org.apache.commons.math.optimization.fitting.GaussianFitter r0;
        double d0, d1, d2;
        org.apache.commons.math.optimization.fitting.CurveFitter $r1;

        r0 := @this: org.apache.commons.math.optimization.fitting.GaussianFitter;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        d2 := @parameter2: double;

        $r1 = r0.<org.apache.commons.math.optimization.fitting.GaussianFitter: org.apache.commons.math.optimization.fitting.CurveFitter fitter>;

        virtualinvoke $r1.<org.apache.commons.math.optimization.fitting.CurveFitter: void addObservedPoint(double,double,double)>(d0, d1, d2);

        return;
    }

    public org.apache.commons.math.optimization.fitting.GaussianFunction fit() throws org.apache.commons.math.FunctionEvaluationException, org.apache.commons.math.optimization.OptimizationException
    {
        org.apache.commons.math.optimization.fitting.GaussianFitter r0;
        org.apache.commons.math.optimization.fitting.GaussianFunction $r1;
        org.apache.commons.math.optimization.fitting.ParametricGaussianFunction $r2;
        org.apache.commons.math.optimization.fitting.CurveFitter $r3, $r4;
        org.apache.commons.math.optimization.fitting.WeightedObservedPoint[] $r5;
        org.apache.commons.math.optimization.fitting.GaussianParametersGuesser $r6;
        double[] $r7, $r8;

        r0 := @this: org.apache.commons.math.optimization.fitting.GaussianFitter;

        $r1 = new org.apache.commons.math.optimization.fitting.GaussianFunction;

        $r3 = r0.<org.apache.commons.math.optimization.fitting.GaussianFitter: org.apache.commons.math.optimization.fitting.CurveFitter fitter>;

        $r2 = new org.apache.commons.math.optimization.fitting.ParametricGaussianFunction;

        specialinvoke $r2.<org.apache.commons.math.optimization.fitting.ParametricGaussianFunction: void <init>()>();

        $r4 = r0.<org.apache.commons.math.optimization.fitting.GaussianFitter: org.apache.commons.math.optimization.fitting.CurveFitter fitter>;

        $r5 = virtualinvoke $r4.<org.apache.commons.math.optimization.fitting.CurveFitter: org.apache.commons.math.optimization.fitting.WeightedObservedPoint[] getObservations()>();

        $r6 = virtualinvoke r0.<org.apache.commons.math.optimization.fitting.GaussianFitter: org.apache.commons.math.optimization.fitting.GaussianParametersGuesser createParametersGuesser(org.apache.commons.math.optimization.fitting.WeightedObservedPoint[])>($r5);

        $r7 = virtualinvoke $r6.<org.apache.commons.math.optimization.fitting.GaussianParametersGuesser: double[] guess()>();

        $r8 = virtualinvoke $r3.<org.apache.commons.math.optimization.fitting.CurveFitter: double[] fit(org.apache.commons.math.optimization.fitting.ParametricRealFunction,double[])>($r2, $r7);

        specialinvoke $r1.<org.apache.commons.math.optimization.fitting.GaussianFunction: void <init>(double[])>($r8);

        return $r1;
    }

    protected org.apache.commons.math.optimization.fitting.GaussianParametersGuesser createParametersGuesser(org.apache.commons.math.optimization.fitting.WeightedObservedPoint[])
    {
        org.apache.commons.math.optimization.fitting.GaussianFitter r0;
        org.apache.commons.math.optimization.fitting.WeightedObservedPoint[] r1;
        org.apache.commons.math.optimization.fitting.GaussianParametersGuesser $r2;

        r0 := @this: org.apache.commons.math.optimization.fitting.GaussianFitter;

        r1 := @parameter0: org.apache.commons.math.optimization.fitting.WeightedObservedPoint[];

        $r2 = new org.apache.commons.math.optimization.fitting.GaussianParametersGuesser;

        specialinvoke $r2.<org.apache.commons.math.optimization.fitting.GaussianParametersGuesser: void <init>(org.apache.commons.math.optimization.fitting.WeightedObservedPoint[])>(r1);

        return $r2;
    }
}
