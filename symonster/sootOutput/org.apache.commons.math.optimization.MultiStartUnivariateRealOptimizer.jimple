public class org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizer extends java.lang.Object implements org.apache.commons.math.optimization.UnivariateRealOptimizer
{
    private static final long serialVersionUID;
    private final org.apache.commons.math.optimization.UnivariateRealOptimizer optimizer;
    private int maxIterations;
    private int maxEvaluations;
    private int totalIterations;
    private int totalEvaluations;
    private int starts;
    private org.apache.commons.math.random.RandomGenerator generator;
    private double[] optima;
    private double[] optimaValues;

    public void <init>(org.apache.commons.math.optimization.UnivariateRealOptimizer, int, org.apache.commons.math.random.RandomGenerator)
    {
        org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizer r0;
        org.apache.commons.math.optimization.UnivariateRealOptimizer r1;
        int i0;
        org.apache.commons.math.random.RandomGenerator r2;

        r0 := @this: org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizer;

        r1 := @parameter0: org.apache.commons.math.optimization.UnivariateRealOptimizer;

        i0 := @parameter1: int;

        r2 := @parameter2: org.apache.commons.math.random.RandomGenerator;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizer: org.apache.commons.math.optimization.UnivariateRealOptimizer optimizer> = r1;

        r0.<org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizer: int totalIterations> = 0;

        r0.<org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizer: int starts> = i0;

        r0.<org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizer: org.apache.commons.math.random.RandomGenerator generator> = r2;

        r0.<org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizer: double[] optima> = null;

        virtualinvoke r0.<org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizer: void setMaximalIterationCount(int)>(2147483647);

        virtualinvoke r0.<org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizer: void setMaxEvaluations(int)>(2147483647);

        return;
    }

    public double getFunctionValue()
    {
        org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizer r0;
        double[] $r1;
        double $d0;

        r0 := @this: org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizer;

        $r1 = r0.<org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizer: double[] optimaValues>;

        $d0 = $r1[0];

        return $d0;
    }

    public double getResult()
    {
        org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizer r0;
        double[] $r1;
        double $d0;

        r0 := @this: org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizer;

        $r1 = r0.<org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizer: double[] optima>;

        $d0 = $r1[0];

        return $d0;
    }

    public double getAbsoluteAccuracy()
    {
        org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizer r0;
        org.apache.commons.math.optimization.UnivariateRealOptimizer $r1;
        double $d0;

        r0 := @this: org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizer;

        $r1 = r0.<org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizer: org.apache.commons.math.optimization.UnivariateRealOptimizer optimizer>;

        $d0 = interfaceinvoke $r1.<org.apache.commons.math.optimization.UnivariateRealOptimizer: double getAbsoluteAccuracy()>();

        return $d0;
    }

    public int getIterationCount()
    {
        org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizer r0;
        int $i0;

        r0 := @this: org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizer;

        $i0 = r0.<org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizer: int totalIterations>;

        return $i0;
    }

    public int getMaximalIterationCount()
    {
        org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizer r0;
        int $i0;

        r0 := @this: org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizer;

        $i0 = r0.<org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizer: int maxIterations>;

        return $i0;
    }

    public int getMaxEvaluations()
    {
        org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizer r0;
        int $i0;

        r0 := @this: org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizer;

        $i0 = r0.<org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizer: int maxEvaluations>;

        return $i0;
    }

    public int getEvaluations()
    {
        org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizer r0;
        int $i0;

        r0 := @this: org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizer;

        $i0 = r0.<org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizer: int totalEvaluations>;

        return $i0;
    }

    public double getRelativeAccuracy()
    {
        org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizer r0;
        org.apache.commons.math.optimization.UnivariateRealOptimizer $r1;
        double $d0;

        r0 := @this: org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizer;

        $r1 = r0.<org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizer: org.apache.commons.math.optimization.UnivariateRealOptimizer optimizer>;

        $d0 = interfaceinvoke $r1.<org.apache.commons.math.optimization.UnivariateRealOptimizer: double getRelativeAccuracy()>();

        return $d0;
    }

    public void resetAbsoluteAccuracy()
    {
        org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizer r0;
        org.apache.commons.math.optimization.UnivariateRealOptimizer $r1;

        r0 := @this: org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizer;

        $r1 = r0.<org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizer: org.apache.commons.math.optimization.UnivariateRealOptimizer optimizer>;

        interfaceinvoke $r1.<org.apache.commons.math.optimization.UnivariateRealOptimizer: void resetAbsoluteAccuracy()>();

        return;
    }

    public void resetMaximalIterationCount()
    {
        org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizer r0;
        org.apache.commons.math.optimization.UnivariateRealOptimizer $r1;

        r0 := @this: org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizer;

        $r1 = r0.<org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizer: org.apache.commons.math.optimization.UnivariateRealOptimizer optimizer>;

        interfaceinvoke $r1.<org.apache.commons.math.optimization.UnivariateRealOptimizer: void resetMaximalIterationCount()>();

        return;
    }

    public void resetRelativeAccuracy()
    {
        org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizer r0;
        org.apache.commons.math.optimization.UnivariateRealOptimizer $r1;

        r0 := @this: org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizer;

        $r1 = r0.<org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizer: org.apache.commons.math.optimization.UnivariateRealOptimizer optimizer>;

        interfaceinvoke $r1.<org.apache.commons.math.optimization.UnivariateRealOptimizer: void resetRelativeAccuracy()>();

        return;
    }

    public void setAbsoluteAccuracy(double)
    {
        org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizer r0;
        double d0;
        org.apache.commons.math.optimization.UnivariateRealOptimizer $r1;

        r0 := @this: org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizer;

        d0 := @parameter0: double;

        $r1 = r0.<org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizer: org.apache.commons.math.optimization.UnivariateRealOptimizer optimizer>;

        interfaceinvoke $r1.<org.apache.commons.math.optimization.UnivariateRealOptimizer: void setAbsoluteAccuracy(double)>(d0);

        return;
    }

    public void setMaximalIterationCount(int)
    {
        org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizer r0;
        int i0;

        r0 := @this: org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizer;

        i0 := @parameter0: int;

        r0.<org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizer: int maxIterations> = i0;

        return;
    }

    public void setMaxEvaluations(int)
    {
        org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizer r0;
        int i0;

        r0 := @this: org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizer;

        i0 := @parameter0: int;

        r0.<org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizer: int maxEvaluations> = i0;

        return;
    }

    public void setRelativeAccuracy(double)
    {
        org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizer r0;
        double d0;
        org.apache.commons.math.optimization.UnivariateRealOptimizer $r1;

        r0 := @this: org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizer;

        d0 := @parameter0: double;

        $r1 = r0.<org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizer: org.apache.commons.math.optimization.UnivariateRealOptimizer optimizer>;

        interfaceinvoke $r1.<org.apache.commons.math.optimization.UnivariateRealOptimizer: void setRelativeAccuracy(double)>(d0);

        return;
    }

    public double[] getOptima() throws java.lang.IllegalStateException
    {
        org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizer r0;
        double[] $r1, $r2, $r4;
        java.lang.Object $r3;
        java.lang.Object[] $r5;
        org.apache.commons.math.exception.util.LocalizedFormats $r6;
        java.lang.IllegalStateException $r7;

        r0 := @this: org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizer;

        $r1 = r0.<org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizer: double[] optima>;

        if $r1 != null goto label1;

        $r6 = <org.apache.commons.math.exception.util.LocalizedFormats: org.apache.commons.math.exception.util.LocalizedFormats NO_OPTIMUM_COMPUTED_YET>;

        $r5 = newarray (java.lang.Object)[0];

        $r7 = staticinvoke <org.apache.commons.math.MathRuntimeException: java.lang.IllegalStateException createIllegalStateException(org.apache.commons.math.exception.util.Localizable,java.lang.Object[])>($r6, $r5);

        throw $r7;

     label1:
        $r2 = r0.<org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizer: double[] optima>;

        $r3 = virtualinvoke $r2.<java.lang.Object: java.lang.Object clone()>();

        $r4 = (double[]) $r3;

        return $r4;
    }

    public double[] getOptimaValues() throws java.lang.IllegalStateException
    {
        org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizer r0;
        double[] $r1, $r2, $r4;
        java.lang.Object $r3;
        java.lang.Object[] $r5;
        org.apache.commons.math.exception.util.LocalizedFormats $r6;
        java.lang.IllegalStateException $r7;

        r0 := @this: org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizer;

        $r1 = r0.<org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizer: double[] optimaValues>;

        if $r1 != null goto label1;

        $r6 = <org.apache.commons.math.exception.util.LocalizedFormats: org.apache.commons.math.exception.util.LocalizedFormats NO_OPTIMUM_COMPUTED_YET>;

        $r5 = newarray (java.lang.Object)[0];

        $r7 = staticinvoke <org.apache.commons.math.MathRuntimeException: java.lang.IllegalStateException createIllegalStateException(org.apache.commons.math.exception.util.Localizable,java.lang.Object[])>($r6, $r5);

        throw $r7;

     label1:
        $r2 = r0.<org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizer: double[] optimaValues>;

        $r3 = virtualinvoke $r2.<java.lang.Object: java.lang.Object clone()>();

        $r4 = (double[]) $r3;

        return $r4;
    }

    public double optimize(org.apache.commons.math.analysis.UnivariateRealFunction, org.apache.commons.math.optimization.GoalType, double, double) throws org.apache.commons.math.ConvergenceException, org.apache.commons.math.FunctionEvaluationException
    {
        org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizer r0;
        org.apache.commons.math.analysis.UnivariateRealFunction r1;
        org.apache.commons.math.optimization.GoalType r2, $r16, $r23;
        double d0, d1, d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, d19, $d20, d22, d23, d24, d25, d26, d27;
        int $i0, $i1, $i2, $i3, $i5, $i6, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, i19, $i20, $i21, $i22, $i23, $i24, $i25, i26, i27, i28, i29, i30;
        double[] $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r14, $r15, $r17, $r18, $r19, $r20, $r21, $r22, $r24, $r25, $r26, $r27, $r28, $r29, $r30, $r31, $r32, $r33, $r34, $r39, $r42, $r44, $r45, $r47, $r48;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;
        org.apache.commons.math.optimization.OptimizationException $r10;
        java.lang.Object[] $r11;
        org.apache.commons.math.exception.util.LocalizedFormats $r12;
        java.lang.Integer $r13;
        byte $b4, $b7;
        org.apache.commons.math.optimization.UnivariateRealOptimizer $r35, $r36, $r40, $r41, $r52, $r54;
        org.apache.commons.math.random.RandomGenerator $r37, $r38;
        org.apache.commons.math.FunctionEvaluationException $r43;
        org.apache.commons.math.ConvergenceException $r46;

        r0 := @this: org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizer;

        r1 := @parameter0: org.apache.commons.math.analysis.UnivariateRealFunction;

        r2 := @parameter1: org.apache.commons.math.optimization.GoalType;

        d0 := @parameter2: double;

        d1 := @parameter3: double;

        $i0 = r0.<org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizer: int starts>;

        $r3 = newarray (double)[$i0];

        r0.<org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizer: double[] optima> = $r3;

        $i1 = r0.<org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizer: int starts>;

        $r4 = newarray (double)[$i1];

        r0.<org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizer: double[] optimaValues> = $r4;

        r0.<org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizer: int totalIterations> = 0;

        r0.<org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizer: int totalEvaluations> = 0;

        i19 = 0;

     label01:
        $i2 = r0.<org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizer: int starts>;

        if i19 >= $i2 goto label11;

     label02:
        $r35 = r0.<org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizer: org.apache.commons.math.optimization.UnivariateRealOptimizer optimizer>;

        $i14 = r0.<org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizer: int maxIterations>;

        $i13 = r0.<org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizer: int totalIterations>;

        $i15 = $i14 - $i13;

        interfaceinvoke $r35.<org.apache.commons.math.optimization.UnivariateRealOptimizer: void setMaximalIterationCount(int)>($i15);

        $r36 = r0.<org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizer: org.apache.commons.math.optimization.UnivariateRealOptimizer optimizer>;

        $i17 = r0.<org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizer: int maxEvaluations>;

        $i16 = r0.<org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizer: int totalEvaluations>;

        $i18 = $i17 - $i16;

        interfaceinvoke $r36.<org.apache.commons.math.optimization.UnivariateRealOptimizer: void setMaxEvaluations(int)>($i18);

        if i19 != 0 goto label03;

        $d18 = d0;

        goto label04;

     label03:
        $r37 = r0.<org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizer: org.apache.commons.math.random.RandomGenerator generator>;

        $d8 = interfaceinvoke $r37.<org.apache.commons.math.random.RandomGenerator: double nextDouble()>();

        $d9 = d1 - d0;

        $d10 = $d8 * $d9;

        $d18 = d0 + $d10;

     label04:
        d19 = $d18;

        if i19 != 0 goto label05;

        $d20 = d1;

        goto label06;

     label05:
        $r38 = r0.<org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizer: org.apache.commons.math.random.RandomGenerator generator>;

        $d11 = interfaceinvoke $r38.<org.apache.commons.math.random.RandomGenerator: double nextDouble()>();

        $d12 = d1 - d0;

        $d13 = $d11 * $d12;

        $d20 = d0 + $d13;

     label06:
        $r39 = r0.<org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizer: double[] optima>;

        $r40 = r0.<org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizer: org.apache.commons.math.optimization.UnivariateRealOptimizer optimizer>;

        $d14 = staticinvoke <org.apache.commons.math.util.FastMath: double min(double,double)>(d19, $d20);

        $d15 = staticinvoke <org.apache.commons.math.util.FastMath: double max(double,double)>(d19, $d20);

        $d16 = interfaceinvoke $r40.<org.apache.commons.math.optimization.UnivariateRealOptimizer: double optimize(org.apache.commons.math.analysis.UnivariateRealFunction,org.apache.commons.math.optimization.GoalType,double,double)>(r1, r2, $d14, $d15);

        $r39[i19] = $d16;

        $r42 = r0.<org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizer: double[] optimaValues>;

        $r41 = r0.<org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizer: org.apache.commons.math.optimization.UnivariateRealOptimizer optimizer>;

        $d17 = interfaceinvoke $r41.<org.apache.commons.math.optimization.UnivariateRealOptimizer: double getFunctionValue()>();

        $r42[i19] = $d17;

     label07:
        goto label10;

     label08:
        $r43 := @caughtexception;

        $r44 = r0.<org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizer: double[] optima>;

        $r44[i19] = #NaN;

        $r45 = r0.<org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizer: double[] optimaValues>;

        $r45[i19] = #NaN;

        goto label10;

     label09:
        $r46 := @caughtexception;

        $r47 = r0.<org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizer: double[] optima>;

        $r47[i19] = #NaN;

        $r48 = r0.<org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizer: double[] optimaValues>;

        $r48[i19] = #NaN;

     label10:
        $i20 = r0.<org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizer: int totalIterations>;

        $r52 = r0.<org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizer: org.apache.commons.math.optimization.UnivariateRealOptimizer optimizer>;

        $i21 = interfaceinvoke $r52.<org.apache.commons.math.optimization.UnivariateRealOptimizer: int getIterationCount()>();

        $i22 = $i20 + $i21;

        r0.<org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizer: int totalIterations> = $i22;

        $i23 = r0.<org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizer: int totalEvaluations>;

        $r54 = r0.<org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizer: org.apache.commons.math.optimization.UnivariateRealOptimizer optimizer>;

        $i24 = interfaceinvoke $r54.<org.apache.commons.math.optimization.UnivariateRealOptimizer: int getEvaluations()>();

        $i25 = $i23 + $i24;

        r0.<org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizer: int totalEvaluations> = $i25;

        i19 = i19 + 1;

        goto label01;

     label11:
        $r5 = r0.<org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizer: double[] optima>;

        i26 = lengthof $r5;

        i27 = 0;

     label12:
        if i27 >= i26 goto label14;

        $r28 = r0.<org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizer: double[] optima>;

        $d5 = $r28[i27];

        $z1 = staticinvoke <java.lang.Double: boolean isNaN(double)>($d5);

        if $z1 == 0 goto label13;

        $r30 = r0.<org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizer: double[] optima>;

        $r29 = r0.<org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizer: double[] optima>;

        i28 = i26 + -1;

        $d6 = $r29[i28];

        $r30[i27] = $d6;

        $r31 = r0.<org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizer: double[] optima>;

        $i11 = i28 + 1;

        $r31[$i11] = #NaN;

        $r33 = r0.<org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizer: double[] optimaValues>;

        $r32 = r0.<org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizer: double[] optimaValues>;

        i26 = i28 + -1;

        $d7 = $r32[i26];

        $r33[i27] = $d7;

        $r34 = r0.<org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizer: double[] optimaValues>;

        $i12 = i26 + 1;

        $r34[$i12] = #NaN;

     label13:
        i27 = i27 + 1;

        goto label12;

     label14:
        $r6 = r0.<org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizer: double[] optima>;

        d22 = $r6[0];

        $r7 = r0.<org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizer: double[] optimaValues>;

        d23 = $r7[0];

        i29 = 1;

     label15:
        if i29 >= i26 goto label28;

        d2 = d23;

        $r14 = r0.<org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizer: double[] optima>;

        d24 = $r14[i29];

        $r15 = r0.<org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizer: double[] optimaValues>;

        d23 = $r15[i29];

        $r16 = <org.apache.commons.math.optimization.GoalType: org.apache.commons.math.optimization.GoalType MAXIMIZE>;

        if r2 != $r16 goto label16;

        $z2 = 1;

        goto label17;

     label16:
        $z2 = 0;

     label17:
        $b4 = d23 cmpg d2;

        if $b4 >= 0 goto label18;

        $z3 = 1;

        goto label19;

     label18:
        $z3 = 0;

     label19:
        $z4 = $z2 ^ $z3;

        if $z4 == 0 goto label27;

        i30 = i29 - 1;

        $r17 = r0.<org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizer: double[] optima>;

        d25 = $r17[i30];

        $r18 = r0.<org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizer: double[] optimaValues>;

        d26 = $r18[i30];

     label20:
        if i30 < 0 goto label26;

        $r23 = <org.apache.commons.math.optimization.GoalType: org.apache.commons.math.optimization.GoalType MAXIMIZE>;

        if r2 != $r23 goto label21;

        $z5 = 1;

        goto label22;

     label21:
        $z5 = 0;

     label22:
        $b7 = d23 cmpg d26;

        if $b7 >= 0 goto label23;

        $z6 = 1;

        goto label24;

     label23:
        $z6 = 0;

     label24:
        $z7 = $z5 ^ $z6;

        if $z7 == 0 goto label26;

        $r24 = r0.<org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizer: double[] optima>;

        $i8 = i30 + 1;

        $r24[$i8] = d25;

        $r25 = r0.<org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizer: double[] optimaValues>;

        $i9 = i30 + 1;

        $r25[$i9] = d26;

        $i10 = i30;

        i30 = i30 + -1;

        if $i10 == 0 goto label25;

        $r26 = r0.<org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizer: double[] optima>;

        d25 = $r26[i30];

        $r27 = r0.<org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizer: double[] optimaValues>;

        d26 = $r27[i30];

        goto label20;

     label25:
        d25 = #NaN;

        d26 = #NaN;

        goto label20;

     label26:
        $r19 = r0.<org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizer: double[] optima>;

        $i5 = i30 + 1;

        $r19[$i5] = d24;

        $r20 = r0.<org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizer: double[] optimaValues>;

        $i6 = i30 + 1;

        $r20[$i6] = d23;

        $r21 = r0.<org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizer: double[] optima>;

        d27 = $r21[i29];

        $r22 = r0.<org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizer: double[] optimaValues>;

        d23 = $r22[i29];

     label27:
        i29 = i29 + 1;

        goto label15;

     label28:
        $r8 = r0.<org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizer: double[] optima>;

        $d3 = $r8[0];

        $z0 = staticinvoke <java.lang.Double: boolean isNaN(double)>($d3);

        if $z0 == 0 goto label29;

        $r10 = new org.apache.commons.math.optimization.OptimizationException;

        $r12 = <org.apache.commons.math.exception.util.LocalizedFormats: org.apache.commons.math.exception.util.LocalizedFormats NO_CONVERGENCE_WITH_ANY_START_POINT>;

        $r11 = newarray (java.lang.Object)[1];

        $i3 = r0.<org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizer: int starts>;

        $r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3);

        $r11[0] = $r13;

        specialinvoke $r10.<org.apache.commons.math.optimization.OptimizationException: void <init>(org.apache.commons.math.exception.util.Localizable,java.lang.Object[])>($r12, $r11);

        throw $r10;

     label29:
        $r9 = r0.<org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizer: double[] optima>;

        $d4 = $r9[0];

        return $d4;

        catch org.apache.commons.math.FunctionEvaluationException from label02 to label07 with label08;
        catch org.apache.commons.math.ConvergenceException from label02 to label07 with label09;
    }

    public double optimize(org.apache.commons.math.analysis.UnivariateRealFunction, org.apache.commons.math.optimization.GoalType, double, double, double) throws org.apache.commons.math.ConvergenceException, org.apache.commons.math.FunctionEvaluationException
    {
        org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizer r0;
        org.apache.commons.math.analysis.UnivariateRealFunction r1;
        org.apache.commons.math.optimization.GoalType r2;
        double d0, d1, d2, $d3;

        r0 := @this: org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizer;

        r1 := @parameter0: org.apache.commons.math.analysis.UnivariateRealFunction;

        r2 := @parameter1: org.apache.commons.math.optimization.GoalType;

        d0 := @parameter2: double;

        d1 := @parameter3: double;

        d2 := @parameter4: double;

        $d3 = virtualinvoke r0.<org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizer: double optimize(org.apache.commons.math.analysis.UnivariateRealFunction,org.apache.commons.math.optimization.GoalType,double,double)>(r1, r2, d0, d1);

        return $d3;
    }

    public static void <clinit>()
    {
        <org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizer: long serialVersionUID> = 5983375963110961019L;

        return;
    }
}
