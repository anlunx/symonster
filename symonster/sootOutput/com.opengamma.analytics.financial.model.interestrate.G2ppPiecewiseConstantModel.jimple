public class com.opengamma.analytics.financial.model.interestrate.G2ppPiecewiseConstantModel extends java.lang.Object
{

    public void <init>()
    {
        com.opengamma.analytics.financial.model.interestrate.G2ppPiecewiseConstantModel r0;

        r0 := @this: com.opengamma.analytics.financial.model.interestrate.G2ppPiecewiseConstantModel;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public double[] volatilityMaturityPart(com.opengamma.analytics.financial.model.interestrate.definition.G2ppPiecewiseConstantParameters, double, double)
    {
        com.opengamma.analytics.financial.model.interestrate.G2ppPiecewiseConstantModel r0;
        com.opengamma.analytics.financial.model.interestrate.definition.G2ppPiecewiseConstantParameters r1;
        double d0, d1, d2, d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21, $d22, $d23;
        double[] r2, r3;

        r0 := @this: com.opengamma.analytics.financial.model.interestrate.G2ppPiecewiseConstantModel;

        r1 := @parameter0: com.opengamma.analytics.financial.model.interestrate.definition.G2ppPiecewiseConstantParameters;

        d0 := @parameter1: double;

        d1 := @parameter2: double;

        r2 = virtualinvoke r1.<com.opengamma.analytics.financial.model.interestrate.definition.G2ppPiecewiseConstantParameters: double[] getMeanReversion()>();

        r3 = newarray (double)[2];

        $d4 = r2[0];

        $d5 = neg $d4;

        $d6 = $d5 * d0;

        d2 = staticinvoke <java.lang.Math: double exp(double)>($d6);

        $d7 = r2[1];

        $d8 = neg $d7;

        $d9 = $d8 * d0;

        d3 = staticinvoke <java.lang.Math: double exp(double)>($d9);

        $d10 = r2[0];

        $d11 = neg $d10;

        $d12 = $d11 * d1;

        $d13 = staticinvoke <java.lang.Math: double exp(double)>($d12);

        $d15 = d2 - $d13;

        $d14 = r2[0];

        $d16 = $d15 / $d14;

        r3[0] = $d16;

        $d17 = r2[1];

        $d18 = neg $d17;

        $d19 = $d18 * d1;

        $d20 = staticinvoke <java.lang.Math: double exp(double)>($d19);

        $d22 = d3 - $d20;

        $d21 = r2[1];

        $d23 = $d22 / $d21;

        r3[1] = $d23;

        return r3;
    }

    public double[][] volatilityMaturityPart(com.opengamma.analytics.financial.model.interestrate.definition.G2ppPiecewiseConstantParameters, double, double[])
    {
        com.opengamma.analytics.financial.model.interestrate.G2ppPiecewiseConstantModel r0;
        com.opengamma.analytics.financial.model.interestrate.definition.G2ppPiecewiseConstantParameters r1;
        double d0, d1, d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21, $d22, $d23, $d24;
        double[] r2, r3, $r5, $r6;
        double[][] r4;
        int $i0, $i1, i2;

        r0 := @this: com.opengamma.analytics.financial.model.interestrate.G2ppPiecewiseConstantModel;

        r1 := @parameter0: com.opengamma.analytics.financial.model.interestrate.definition.G2ppPiecewiseConstantParameters;

        d0 := @parameter1: double;

        r2 := @parameter2: double[];

        r3 = virtualinvoke r1.<com.opengamma.analytics.financial.model.interestrate.definition.G2ppPiecewiseConstantParameters: double[] getMeanReversion()>();

        $i0 = lengthof r2;

        r4 = newmultiarray (double)[2][$i0];

        $d3 = r3[0];

        $d4 = neg $d3;

        $d5 = $d4 * d0;

        d1 = staticinvoke <java.lang.Math: double exp(double)>($d5);

        $d6 = r3[1];

        $d7 = neg $d6;

        $d8 = $d7 * d0;

        d2 = staticinvoke <java.lang.Math: double exp(double)>($d8);

        i2 = 0;

     label1:
        $i1 = lengthof r2;

        if i2 >= $i1 goto label2;

        $r5 = r4[0];

        $d9 = r3[0];

        $d11 = neg $d9;

        $d10 = r2[i2];

        $d12 = $d11 * $d10;

        $d13 = staticinvoke <java.lang.Math: double exp(double)>($d12);

        $d15 = d1 - $d13;

        $d14 = r3[0];

        $d16 = $d15 / $d14;

        $r5[i2] = $d16;

        $r6 = r4[1];

        $d17 = r3[1];

        $d19 = neg $d17;

        $d18 = r2[i2];

        $d20 = $d19 * $d18;

        $d21 = staticinvoke <java.lang.Math: double exp(double)>($d20);

        $d23 = d2 - $d21;

        $d22 = r3[1];

        $d24 = $d23 / $d22;

        $r6[i2] = $d24;

        i2 = i2 + 1;

        goto label1;

     label2:
        return r4;
    }

    public double[][][] volatilityMaturityPart(com.opengamma.analytics.financial.model.interestrate.definition.G2ppPiecewiseConstantParameters, double, double[][])
    {
        com.opengamma.analytics.financial.model.interestrate.G2ppPiecewiseConstantModel r0;
        com.opengamma.analytics.financial.model.interestrate.definition.G2ppPiecewiseConstantParameters r1;
        double d0, d1, d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21, $d22, $d23, $d24;
        double[][] r2, $r7, $r10, $r12, $r15;
        double[] r3, $r5, $r6, $r8, $r9, $r11, $r13, $r14, $r16, $r17;
        double[][][] r4;
        int $i0, $i1, $i2, $i3, $i4, i5, i6;

        r0 := @this: com.opengamma.analytics.financial.model.interestrate.G2ppPiecewiseConstantModel;

        r1 := @parameter0: com.opengamma.analytics.financial.model.interestrate.definition.G2ppPiecewiseConstantParameters;

        d0 := @parameter1: double;

        r2 := @parameter2: double[][];

        r3 = virtualinvoke r1.<com.opengamma.analytics.financial.model.interestrate.definition.G2ppPiecewiseConstantParameters: double[] getMeanReversion()>();

        $i0 = lengthof r2;

        r4 = newmultiarray (double)[2][$i0][];

        $d3 = r3[0];

        $d4 = neg $d3;

        $d5 = $d4 * d0;

        d1 = staticinvoke <java.lang.Math: double exp(double)>($d5);

        $d6 = r3[1];

        $d7 = neg $d6;

        $d8 = $d7 * d0;

        d2 = staticinvoke <java.lang.Math: double exp(double)>($d8);

        i5 = 0;

     label1:
        $i1 = lengthof r2;

        if i5 >= $i1 goto label4;

        $r7 = r4[0];

        $r5 = r2[i5];

        $i2 = lengthof $r5;

        $r6 = newarray (double)[$i2];

        $r7[i5] = $r6;

        $r10 = r4[1];

        $r8 = r2[i5];

        $i3 = lengthof $r8;

        $r9 = newarray (double)[$i3];

        $r10[i5] = $r9;

        i6 = 0;

     label2:
        $r11 = r2[i5];

        $i4 = lengthof $r11;

        if i6 >= $i4 goto label3;

        $r12 = r4[0];

        $r14 = $r12[i5];

        $d9 = r3[0];

        $d11 = neg $d9;

        $r13 = r2[i5];

        $d10 = $r13[i6];

        $d12 = $d11 * $d10;

        $d13 = staticinvoke <java.lang.Math: double exp(double)>($d12);

        $d15 = d1 - $d13;

        $d14 = r3[0];

        $d16 = $d15 / $d14;

        $r14[i6] = $d16;

        $r15 = r4[1];

        $r17 = $r15[i5];

        $d17 = r3[1];

        $d19 = neg $d17;

        $r16 = r2[i5];

        $d18 = $r16[i6];

        $d20 = $d19 * $d18;

        $d21 = staticinvoke <java.lang.Math: double exp(double)>($d20);

        $d23 = d2 - $d21;

        $d22 = r3[1];

        $d24 = $d23 / $d22;

        $r17[i6] = $d24;

        i6 = i6 + 1;

        goto label2;

     label3:
        i5 = i5 + 1;

        goto label1;

     label4:
        return r4;
    }

    public double[][] gamma(com.opengamma.analytics.financial.model.interestrate.definition.G2ppPiecewiseConstantParameters, double, double)
    {
        com.opengamma.analytics.financial.model.interestrate.G2ppPiecewiseConstantModel r0;
        com.opengamma.analytics.financial.model.interestrate.definition.G2ppPiecewiseConstantParameters r1;
        double d0, d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21, $d22, $d23, $d24, $d25, $d26, $d27, $d28, $d29, $d30, $d31, $d32, $d33, $d34, $d35, $d36, $d37, $d38, $d39, $d40, $d41, $d42, $d43, d44;
        double[] r2, r4, r5, r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r24, $r25, $r26;
        it.unimi.dsi.fastutil.doubles.DoubleArrayList[] r3;
        int i0, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, i17, i18, i19, i20, i21, i22;
        double[][] r6, r27;
        byte $b1, $b2;
        it.unimi.dsi.fastutil.doubles.DoubleArrayList $r16, $r18, $r20, $r22;
        java.lang.Double $r17, $r19, $r21, $r23;

        r0 := @this: com.opengamma.analytics.financial.model.interestrate.G2ppPiecewiseConstantModel;

        r1 := @parameter0: com.opengamma.analytics.financial.model.interestrate.definition.G2ppPiecewiseConstantParameters;

        d0 := @parameter1: double;

        d1 := @parameter2: double;

        r2 = virtualinvoke r1.<com.opengamma.analytics.financial.model.interestrate.definition.G2ppPiecewiseConstantParameters: double[] getMeanReversion()>();

        r3 = virtualinvoke r1.<com.opengamma.analytics.financial.model.interestrate.definition.G2ppPiecewiseConstantParameters: it.unimi.dsi.fastutil.doubles.DoubleArrayList[] getVolatility()>();

        i17 = 1;

     label01:
        $r8 = virtualinvoke r1.<com.opengamma.analytics.financial.model.interestrate.definition.G2ppPiecewiseConstantParameters: double[] getVolatilityTime()>();

        $d2 = $r8[i17];

        $b1 = d0 cmpl $d2;

        if $b1 <= 0 goto label02;

        i17 = i17 + 1;

        goto label01;

     label02:
        i18 = i17;

     label03:
        $r9 = virtualinvoke r1.<com.opengamma.analytics.financial.model.interestrate.definition.G2ppPiecewiseConstantParameters: double[] getVolatilityTime()>();

        $d3 = $r9[i18];

        $b2 = d1 cmpl $d3;

        if $b2 <= 0 goto label04;

        i18 = i18 + 1;

        goto label03;

     label04:
        $i3 = i18 - i17;

        i0 = $i3 + 2;

        r4 = newarray (double)[i0];

        r4[0] = d0;

        $r10 = virtualinvoke r1.<com.opengamma.analytics.financial.model.interestrate.definition.G2ppPiecewiseConstantParameters: double[] getVolatilityTime()>();

        $i4 = i0 - 2;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r10, i17, r4, 1, $i4);

        $i5 = i0 - 1;

        r4[$i5] = d1;

        r5 = newarray (double)[2];

        d44 = 0.0;

        r6 = newmultiarray (double)[2][i0];

        r7 = newarray (double)[i0];

        i19 = 0;

     label05:
        if i19 >= i0 goto label08;

        i20 = 0;

     label06:
        if i20 >= 2 goto label07;

        $r26 = r6[i20];

        $d39 = r2[i20];

        $d41 = 2.0 * $d39;

        $d40 = r4[i19];

        $d42 = $d41 * $d40;

        $d43 = staticinvoke <java.lang.Math: double exp(double)>($d42);

        $r26[i19] = $d43;

        i20 = i20 + 1;

        goto label06;

     label07:
        $d34 = r2[0];

        $d33 = r2[1];

        $d36 = $d34 + $d33;

        $d35 = r4[i19];

        $d37 = $d36 * $d35;

        $d38 = staticinvoke <java.lang.Math: double exp(double)>($d37);

        r7[i19] = $d38;

        i19 = i19 + 1;

        goto label05;

     label08:
        i21 = 0;

     label09:
        $i6 = i0 - 1;

        if i21 >= $i6 goto label12;

        i22 = 0;

     label10:
        if i22 >= 2 goto label11;

        $d24 = r5[i22];

        $r20 = r3[i22];

        $i12 = i17 - 1;

        $i13 = $i12 + i21;

        $r21 = virtualinvoke $r20.<it.unimi.dsi.fastutil.doubles.DoubleArrayList: java.lang.Double get(int)>($i13);

        $d25 = virtualinvoke $r21.<java.lang.Double: double doubleValue()>();

        $r22 = r3[i22];

        $i14 = i17 - 1;

        $i15 = $i14 + i21;

        $r23 = virtualinvoke $r22.<it.unimi.dsi.fastutil.doubles.DoubleArrayList: java.lang.Double get(int)>($i15);

        $d26 = virtualinvoke $r23.<java.lang.Double: double doubleValue()>();

        $d30 = $d25 * $d26;

        $r24 = r6[i22];

        $i16 = i21 + 1;

        $d28 = $r24[$i16];

        $r25 = r6[i22];

        $d27 = $r25[i21];

        $d29 = $d28 - $d27;

        $d31 = $d30 * $d29;

        $d32 = $d24 + $d31;

        r5[i22] = $d32;

        i22 = i22 + 1;

        goto label10;

     label11:
        $r16 = r3[0];

        $i7 = i17 - 1;

        $i8 = $i7 + i21;

        $r17 = virtualinvoke $r16.<it.unimi.dsi.fastutil.doubles.DoubleArrayList: java.lang.Double get(int)>($i8);

        $d17 = virtualinvoke $r17.<java.lang.Double: double doubleValue()>();

        $r18 = r3[1];

        $i9 = i17 - 1;

        $i10 = $i9 + i21;

        $r19 = virtualinvoke $r18.<it.unimi.dsi.fastutil.doubles.DoubleArrayList: java.lang.Double get(int)>($i10);

        $d18 = virtualinvoke $r19.<java.lang.Double: double doubleValue()>();

        $d22 = $d17 * $d18;

        $i11 = i21 + 1;

        $d20 = r7[$i11];

        $d19 = r7[i21];

        $d21 = $d20 - $d19;

        $d23 = $d22 * $d21;

        d44 = d44 + $d23;

        i21 = i21 + 1;

        goto label09;

     label12:
        r27 = newmultiarray (double)[2][2];

        $r11 = r27[0];

        $d6 = r5[0];

        $d4 = r2[0];

        $d5 = 2.0 * $d4;

        $d7 = $d6 / $d5;

        $r11[0] = $d7;

        $r12 = r27[1];

        $d10 = r5[1];

        $d8 = r2[1];

        $d9 = 2.0 * $d8;

        $d11 = $d10 / $d9;

        $r12[1] = $d11;

        $r13 = r27[1];

        $d13 = r2[0];

        $d12 = r2[1];

        $d14 = $d13 + $d12;

        $d15 = d44 / $d14;

        $r13[0] = $d15;

        $r15 = r27[0];

        $r14 = r27[1];

        $d16 = $r14[0];

        $r15[1] = $d16;

        return r27;
    }

    public double swapRate(double[], double[], double[][], double[], double[], double[][], double[])
    {
        com.opengamma.analytics.financial.model.interestrate.G2ppPiecewiseConstantModel r0;
        double[] r1, r2, r4, r5, r7, $r8, $r9, $r10, $r11;
        double[][] r3, r6;
        int $i0, $i1, i2, i3;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21, $d22, $d23, $d24, $d25, $d26, $d27, $d28, $d29, d30, d31;

        r0 := @this: com.opengamma.analytics.financial.model.interestrate.G2ppPiecewiseConstantModel;

        r1 := @parameter0: double[];

        r2 := @parameter1: double[];

        r3 := @parameter2: double[][];

        r4 := @parameter3: double[];

        r5 := @parameter4: double[];

        r6 := @parameter5: double[][];

        r7 := @parameter6: double[];

        d30 = 0.0;

        d31 = 0.0;

        i2 = 0;

     label1:
        $i0 = lengthof r2;

        if i2 >= $i0 goto label2;

        $d27 = r2[i2];

        $r10 = r3[i2];

        $d16 = $r10[0];

        $d18 = neg $d16;

        $d17 = r1[0];

        $d22 = $d18 * $d17;

        $r11 = r3[i2];

        $d20 = $r11[1];

        $d19 = r1[1];

        $d21 = $d20 * $d19;

        $d25 = $d22 - $d21;

        $d23 = r4[i2];

        $d24 = $d23 / 2.0;

        $d26 = $d25 - $d24;

        $d28 = staticinvoke <java.lang.Math: double exp(double)>($d26);

        $d29 = $d27 * $d28;

        d30 = d30 + $d29;

        i2 = i2 + 1;

        goto label1;

     label2:
        i3 = 0;

     label3:
        $i1 = lengthof r5;

        if i3 >= $i1 goto label4;

        $d13 = r5[i3];

        $r8 = r6[i3];

        $d2 = $r8[0];

        $d4 = neg $d2;

        $d3 = r1[0];

        $d8 = $d4 * $d3;

        $r9 = r6[i3];

        $d6 = $r9[1];

        $d5 = r1[1];

        $d7 = $d6 * $d5;

        $d11 = $d8 - $d7;

        $d9 = r7[i3];

        $d10 = $d9 / 2.0;

        $d12 = $d11 - $d10;

        $d14 = staticinvoke <java.lang.Math: double exp(double)>($d12);

        $d15 = $d13 * $d14;

        d31 = d31 + $d15;

        i3 = i3 + 1;

        goto label3;

     label4:
        $d0 = neg d31;

        $d1 = $d0 / d30;

        return $d1;
    }

    public double swapRate(double[], double[], double[][], double[], double[], double[][], double[], double[])
    {
        com.opengamma.analytics.financial.model.interestrate.G2ppPiecewiseConstantModel r0;
        double[] r1, r2, r4, r5, r7, r8, r9, r10, $r11, $r12, $r13, $r14, $r15, $r16;
        double[][] r3, r6;
        int $i0, $i1, i2, i3, i4, i5, i6;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21, $d22, $d23, $d24, $d25, $d26, $d27, $d28, $d29, $d30, $d31, $d32, $d33, $d34, $d35, $d36, $d37, $d38, $d39, $d40, $d41, $d42, $d43, $d44, $d45, d46, d47, d48, d49;

        r0 := @this: com.opengamma.analytics.financial.model.interestrate.G2ppPiecewiseConstantModel;

        r1 := @parameter0: double[];

        r2 := @parameter1: double[];

        r3 := @parameter2: double[][];

        r4 := @parameter3: double[];

        r5 := @parameter4: double[];

        r6 := @parameter5: double[][];

        r7 := @parameter6: double[];

        r8 := @parameter7: double[];

        d46 = 0.0;

        d47 = 0.0;

        r9 = newarray (double)[2];

        r10 = newarray (double)[2];

        i2 = 0;

     label01:
        $i0 = lengthof r5;

        if i2 >= $i0 goto label04;

        $d39 = r5[i2];

        $r14 = r6[i2];

        $d28 = $r14[0];

        $d30 = neg $d28;

        $d29 = r1[0];

        $d34 = $d30 * $d29;

        $r15 = r6[i2];

        $d32 = $r15[1];

        $d31 = r1[1];

        $d33 = $d32 * $d31;

        $d37 = $d34 - $d33;

        $d35 = r7[i2];

        $d36 = $d35 / 2.0;

        $d38 = $d37 - $d36;

        $d40 = staticinvoke <java.lang.Math: double exp(double)>($d38);

        d48 = $d39 * $d40;

        d46 = d46 + d48;

        i3 = 0;

     label02:
        if i3 >= 2 goto label03;

        $d44 = r9[i3];

        $r16 = r6[i2];

        $d41 = $r16[i3];

        $d42 = neg $d41;

        $d43 = $d42 * d48;

        $d45 = $d44 + $d43;

        r9[i3] = $d45;

        i3 = i3 + 1;

        goto label02;

     label03:
        i2 = i2 + 1;

        goto label01;

     label04:
        i4 = 0;

     label05:
        $i1 = lengthof r2;

        if i4 >= $i1 goto label08;

        $d21 = r2[i4];

        $r11 = r3[i4];

        $d10 = $r11[0];

        $d12 = neg $d10;

        $d11 = r1[0];

        $d16 = $d12 * $d11;

        $r12 = r3[i4];

        $d14 = $r12[1];

        $d13 = r1[1];

        $d15 = $d14 * $d13;

        $d19 = $d16 - $d15;

        $d17 = r4[i4];

        $d18 = $d17 / 2.0;

        $d20 = $d19 - $d18;

        $d22 = staticinvoke <java.lang.Math: double exp(double)>($d20);

        d49 = $d21 * $d22;

        d47 = d47 + d49;

        i5 = 0;

     label06:
        if i5 >= 2 goto label07;

        $d26 = r10[i5];

        $r13 = r3[i4];

        $d23 = $r13[i5];

        $d24 = neg $d23;

        $d25 = $d24 * d49;

        $d27 = $d26 + $d25;

        r10[i5] = $d27;

        i5 = i5 + 1;

        goto label06;

     label07:
        i4 = i4 + 1;

        goto label05;

     label08:
        i6 = 0;

     label09:
        if i6 >= 2 goto label10;

        $d2 = r9[i6];

        $d5 = $d2 * d47;

        $d3 = r10[i6];

        $d4 = $d3 * d46;

        $d6 = $d5 - $d4;

        $d8 = neg $d6;

        $d7 = d47 * d47;

        $d9 = $d8 / $d7;

        r8[i6] = $d9;

        i6 = i6 + 1;

        goto label09;

     label10:
        $d0 = neg d46;

        $d1 = $d0 / d47;

        return $d1;
    }

    public double swapRate(double[], double[], double[][], double[], double[], double[][], double[], double[], double[][])
    {
        com.opengamma.analytics.financial.model.interestrate.G2ppPiecewiseConstantModel r0;
        double[] r1, r2, r4, r5, r7, r8, r10, r11, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r25, $r26, $r27, $r28, $r29, $r30;
        double[][] r3, r6, r9, r12, r13;
        int $i0, $i1, i2, i3, i4, i5, i6, i7, i8, i9, i10, i11, i12;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21, $d22, $d23, $d24, $d25, $d26, $d27, $d28, $d29, $d30, $d31, $d32, $d33, $d34, $d35, $d36, $d37, $d38, $d39, $d40, $d41, $d42, $d43, $d44, $d45, $d46, $d47, $d48, $d49, $d50, $d51, $d52, $d53, $d54, $d55, $d56, $d57, $d58, $d59, $d60, $d61, $d62, $d63, $d64, $d65, $d66, $d67, $d68, $d69, $d70, $d71, $d72, $d73, $d74, $d75, $d76, $d77, $d78, $d79, $d80, $d81, $d82, $d83, d84, d85, d86, d87;

        r0 := @this: com.opengamma.analytics.financial.model.interestrate.G2ppPiecewiseConstantModel;

        r1 := @parameter0: double[];

        r2 := @parameter1: double[];

        r3 := @parameter2: double[][];

        r4 := @parameter3: double[];

        r5 := @parameter4: double[];

        r6 := @parameter5: double[][];

        r7 := @parameter6: double[];

        r8 := @parameter7: double[];

        r9 := @parameter8: double[][];

        d84 = 0.0;

        d85 = 0.0;

        r10 = newarray (double)[2];

        r11 = newarray (double)[2];

        r12 = newmultiarray (double)[2][2];

        r13 = newmultiarray (double)[2][2];

        i2 = 0;

     label01:
        $i0 = lengthof r5;

        if i2 >= $i0 goto label08;

        $d71 = r5[i2];

        $r25 = r6[i2];

        $d60 = $r25[0];

        $d62 = neg $d60;

        $d61 = r1[0];

        $d66 = $d62 * $d61;

        $r26 = r6[i2];

        $d64 = $r26[1];

        $d63 = r1[1];

        $d65 = $d64 * $d63;

        $d69 = $d66 - $d65;

        $d67 = r7[i2];

        $d68 = $d67 / 2.0;

        $d70 = $d69 - $d68;

        $d72 = staticinvoke <java.lang.Math: double exp(double)>($d70);

        d86 = $d71 * $d72;

        d84 = d84 + d86;

        i3 = 0;

     label02:
        if i3 >= 2 goto label03;

        $d82 = r10[i3];

        $r30 = r6[i2];

        $d79 = $r30[i3];

        $d80 = neg $d79;

        $d81 = $d80 * d86;

        $d83 = $d82 + $d81;

        r10[i3] = $d83;

        i3 = i3 + 1;

        goto label02;

     label03:
        i4 = 0;

     label04:
        if i4 >= 2 goto label07;

        i5 = 0;

     label05:
        if i5 >= 2 goto label06;

        $r27 = r12[i4];

        $d77 = $r27[i5];

        $r28 = r6[i2];

        $d74 = $r28[i4];

        $r29 = r6[i2];

        $d73 = $r29[i5];

        $d75 = $d74 * $d73;

        $d76 = $d75 * d86;

        $d78 = $d77 + $d76;

        $r27[i5] = $d78;

        i5 = i5 + 1;

        goto label05;

     label06:
        i4 = i4 + 1;

        goto label04;

     label07:
        i2 = i2 + 1;

        goto label01;

     label08:
        i6 = 0;

     label09:
        $i1 = lengthof r2;

        if i6 >= $i1 goto label16;

        $d47 = r2[i6];

        $r19 = r3[i6];

        $d36 = $r19[0];

        $d38 = neg $d36;

        $d37 = r1[0];

        $d42 = $d38 * $d37;

        $r20 = r3[i6];

        $d40 = $r20[1];

        $d39 = r1[1];

        $d41 = $d40 * $d39;

        $d45 = $d42 - $d41;

        $d43 = r4[i6];

        $d44 = $d43 / 2.0;

        $d46 = $d45 - $d44;

        $d48 = staticinvoke <java.lang.Math: double exp(double)>($d46);

        d87 = $d47 * $d48;

        d85 = d85 + d87;

        i7 = 0;

     label10:
        if i7 >= 2 goto label11;

        $d58 = r11[i7];

        $r24 = r3[i6];

        $d55 = $r24[i7];

        $d56 = neg $d55;

        $d57 = $d56 * d87;

        $d59 = $d58 + $d57;

        r11[i7] = $d59;

        i7 = i7 + 1;

        goto label10;

     label11:
        i8 = 0;

     label12:
        if i8 >= 2 goto label15;

        i9 = 0;

     label13:
        if i9 >= 2 goto label14;

        $r21 = r13[i8];

        $d53 = $r21[i9];

        $r22 = r3[i6];

        $d50 = $r22[i8];

        $r23 = r3[i6];

        $d49 = $r23[i9];

        $d51 = $d50 * $d49;

        $d52 = $d51 * d87;

        $d54 = $d53 + $d52;

        $r21[i9] = $d54;

        i9 = i9 + 1;

        goto label13;

     label14:
        i8 = i8 + 1;

        goto label12;

     label15:
        i6 = i6 + 1;

        goto label09;

     label16:
        i10 = 0;

     label17:
        if i10 >= 2 goto label18;

        $d28 = r10[i10];

        $d31 = $d28 * d85;

        $d29 = r11[i10];

        $d30 = $d29 * d84;

        $d32 = $d31 - $d30;

        $d34 = neg $d32;

        $d33 = d85 * d85;

        $d35 = $d34 / $d33;

        r8[i10] = $d35;

        i10 = i10 + 1;

        goto label17;

     label18:
        i11 = 0;

     label19:
        if i11 >= 2 goto label22;

        i12 = i11;

     label20:
        if i12 >= 2 goto label21;

        $r18 = r9[i11];

        $r16 = r12[i11];

        $d3 = $r16[i12];

        $d7 = $d3 * d85;

        $d5 = r10[i12];

        $d4 = r11[i11];

        $d6 = $d5 * $d4;

        $d11 = $d7 - $d6;

        $d9 = r10[i11];

        $d8 = r11[i12];

        $d10 = $d9 * $d8;

        $d14 = $d11 - $d10;

        $r17 = r13[i11];

        $d12 = $r17[i12];

        $d13 = d84 * $d12;

        $d15 = $d14 - $d13;

        $d17 = neg $d15;

        $d16 = d85 * d85;

        $d26 = $d17 / $d16;

        $d18 = r11[i11];

        $d19 = 2.0 * $d18;

        $d21 = $d19 * d84;

        $d20 = r11[i12];

        $d24 = $d21 * $d20;

        $d22 = d85 * d85;

        $d23 = $d22 * d85;

        $d25 = $d24 / $d23;

        $d27 = $d26 - $d25;

        $r18[i12] = $d27;

        i12 = i12 + 1;

        goto label20;

     label21:
        i11 = i11 + 1;

        goto label19;

     label22:
        $r15 = r9[1];

        $r14 = r9[0];

        $d0 = $r14[1];

        $r15[0] = $d0;

        $d1 = neg d84;

        $d2 = $d1 / d85;

        return $d2;
    }

    public double[] swapRateDdcfi1(double[], double[], double[][], double[], double[], double[][], double[])
    {
        com.opengamma.analytics.financial.model.interestrate.G2ppPiecewiseConstantModel r0;
        double[] r1, r2, r4, r5, r7, r8, $r9, $r10, $r11, $r12;
        double[][] r3, r6;
        int i0, i1, i2, i3;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21, $d22, $d23, $d24, $d25, $d26, $d27, d28;

        r0 := @this: com.opengamma.analytics.financial.model.interestrate.G2ppPiecewiseConstantModel;

        r1 := @parameter0: double[];

        r2 := @parameter1: double[];

        r3 := @parameter2: double[][];

        r4 := @parameter3: double[];

        r5 := @parameter4: double[];

        r6 := @parameter5: double[][];

        r7 := @parameter6: double[];

        i0 = lengthof r5;

        i1 = lengthof r2;

        r8 = newarray (double)[i0];

        d28 = 0.0;

        i2 = 0;

     label1:
        if i2 >= i1 goto label2;

        $d25 = r2[i2];

        $r11 = r3[i2];

        $d14 = $r11[0];

        $d16 = neg $d14;

        $d15 = r1[0];

        $d20 = $d16 * $d15;

        $r12 = r3[i2];

        $d18 = $r12[1];

        $d17 = r1[1];

        $d19 = $d18 * $d17;

        $d23 = $d20 - $d19;

        $d21 = r4[i2];

        $d22 = $d21 / 2.0;

        $d24 = $d23 - $d22;

        $d26 = staticinvoke <java.lang.Math: double exp(double)>($d24);

        $d27 = $d25 * $d26;

        d28 = d28 + $d27;

        i2 = i2 + 1;

        goto label1;

     label2:
        i3 = 0;

     label3:
        if i3 >= i0 goto label4;

        $r9 = r6[i3];

        $d0 = $r9[0];

        $d2 = neg $d0;

        $d1 = r1[0];

        $d6 = $d2 * $d1;

        $r10 = r6[i3];

        $d4 = $r10[1];

        $d3 = r1[1];

        $d5 = $d4 * $d3;

        $d9 = $d6 - $d5;

        $d7 = r7[i3];

        $d8 = $d7 / 2.0;

        $d10 = $d9 - $d8;

        $d11 = staticinvoke <java.lang.Math: double exp(double)>($d10);

        $d12 = neg $d11;

        $d13 = $d12 / d28;

        r8[i3] = $d13;

        i3 = i3 + 1;

        goto label3;

     label4:
        return r8;
    }

    public double[] swapRateDdcff1(double[], double[], double[][], double[], double[], double[][], double[])
    {
        com.opengamma.analytics.financial.model.interestrate.G2ppPiecewiseConstantModel r0;
        double[] r1, r2, r4, r5, r7, r8, r9, $r10, $r11, $r12, $r13;
        double[][] r3, r6;
        int i0, i1, i2, i3, i4;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21, $d22, $d23, $d24, $d25, $d26, $d27, $d28, $d29, $d30, $d31, d32, d33, d34;

        r0 := @this: com.opengamma.analytics.financial.model.interestrate.G2ppPiecewiseConstantModel;

        r1 := @parameter0: double[];

        r2 := @parameter1: double[];

        r3 := @parameter2: double[][];

        r4 := @parameter3: double[];

        r5 := @parameter4: double[];

        r6 := @parameter5: double[][];

        r7 := @parameter6: double[];

        i0 = lengthof r2;

        i1 = lengthof r5;

        r8 = newarray (double)[i1];

        d32 = 0.0;

        i2 = 0;

     label1:
        if i2 >= i1 goto label2;

        $d29 = r5[i2];

        $r12 = r6[i2];

        $d18 = $r12[0];

        $d20 = neg $d18;

        $d19 = r1[0];

        $d24 = $d20 * $d19;

        $r13 = r6[i2];

        $d22 = $r13[1];

        $d21 = r1[1];

        $d23 = $d22 * $d21;

        $d27 = $d24 - $d23;

        $d25 = r7[i2];

        $d26 = $d25 / 2.0;

        $d28 = $d27 - $d26;

        $d30 = staticinvoke <java.lang.Math: double exp(double)>($d28);

        $d31 = $d29 * $d30;

        d32 = d32 + $d31;

        i2 = i2 + 1;

        goto label1;

     label2:
        d33 = 0.0;

        i3 = 0;

     label3:
        if i3 >= i0 goto label4;

        $r10 = r3[i3];

        $d3 = $r10[0];

        $d5 = neg $d3;

        $d4 = r1[0];

        $d9 = $d5 * $d4;

        $r11 = r3[i3];

        $d7 = $r11[1];

        $d6 = r1[1];

        $d8 = $d7 * $d6;

        $d12 = $d9 - $d8;

        $d10 = r4[i3];

        $d11 = $d10 / 2.0;

        $d13 = $d12 - $d11;

        $d14 = staticinvoke <java.lang.Math: double exp(double)>($d13);

        r8[i3] = $d14;

        $d16 = r2[i3];

        $d15 = r8[i3];

        $d17 = $d16 * $d15;

        d33 = d33 + $d17;

        i3 = i3 + 1;

        goto label3;

     label4:
        $d0 = d33 * d33;

        d34 = d32 / $d0;

        r9 = newarray (double)[i0];

        i4 = 0;

     label5:
        if i4 >= i0 goto label6;

        $d1 = r8[i4];

        $d2 = d34 * $d1;

        r9[i4] = $d2;

        i4 = i4 + 1;

        goto label5;

     label6:
        return r9;
    }

    public com.opengamma.util.tuple.Pair swapRateDdcfDx2(double[], double[], double[][], double[], double[], double[][], double[])
    {
        com.opengamma.analytics.financial.model.interestrate.G2ppPiecewiseConstantModel r0;
        double[] r1, r2, r4, r5, r7, r8, r9, r12, r13, $r20, $r21, $r25, $r26, $r29, $r30, $r32, $r33, $r35, $r36, $r37, $r38, $r40, $r41, $r43, $r45, $r46, $r48, $r49, $r50, $r51, $r53, $r54, $r56, $r57, $r58, $r59, $r60, $r61, $r63, $r65, $r67, $r69, $r70, $r71, $r72, $r73, $r74, $r75, $r76, $r77, $r78, $r79, $r80, $r81, $r82, $r83, $r84, $r85, $r86, $r87, $r88, $r89, $r90, $r91, $r92, r93, r94, r95;
        double[][] r3, r6, r10, r11, r14, r15, r16, r17, r19, $r23, $r24, $r27, $r28, $r31, $r34, $r39, $r42, $r44, $r47, $r52, $r55, $r62, $r64, $r66, $r68, r96, r97;
        int i0, i1, i2, i3, i4, i5, i6, i7, i8, i9, i10, i11, i12, i13, i14, i15, i16, i17, i18, i19, i20, i21, i22, i23, i24, i25, i26, i27, i28, i29, i30;
        double[][][] r18, r98, r99, r100, r101, r102;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21, $d22, $d23, $d24, $d25, $d26, $d27, $d28, $d29, $d30, $d31, $d32, $d33, $d34, $d35, $d36, $d37, $d38, $d39, $d40, $d41, $d42, $d43, $d44, $d45, $d46, $d47, $d48, $d49, $d50, $d51, $d52, $d53, $d54, $d55, $d56, $d57, $d58, $d59, $d60, $d61, $d62, $d63, $d64, $d65, $d66, $d67, $d68, $d69, $d70, $d71, $d72, $d73, $d74, $d75, $d76, $d77, $d78, $d79, $d80, $d81, $d82, $d83, $d84, $d85, $d86, $d87, $d88, $d89, $d90, $d91, $d92, $d93, $d94, $d95, $d96, $d97, $d98, $d99, $d100, $d101, $d102, $d103, $d104, $d105, $d106, $d107, $d108, $d109, $d110, $d111, $d112, $d113, $d114, $d115, $d116, $d117, $d118, $d119, $d120, $d121, $d122, $d123, $d124, $d125, $d126, $d127, $d128, $d129, $d130, $d131, $d132, $d133, $d134, $d135, $d136, $d137, $d138, $d139, $d140, $d141, $d142, $d143, $d144, $d145, $d146, $d147, $d148, $d149, $d150, $d151, $d152, $d153, $d154, $d155, $d156, $d157, $d158, $d159, $d160, $d161, $d162, $d163, $d164, $d165, $d166, $d167, $d168, $d169, $d170, $d171, $d172, $d173, $d174, $d175, $d176, $d177, $d178, $d179, $d180, $d181, $d182, $d183, $d184, $d185, $d186, $d187, $d188, $d189, $d190, $d191, $d192, $d193, $d194, $d195, $d196, $d197, $d198, $d199, $d200, $d201, $d202, $d203, $d204, $d205, $d206, $d207, $d208, $d209, $d210, $d211, $d212, $d213, $d214, $d215, $d216, $d217, $d218, $d219, $d220, $d221, $d222, $d223, $d224, $d225, $d226, $d227, $d228, $d229, $d230, $d231, $d232, $d233, $d234, $d235, $d236, $d237, $d238, $d239, $d240, $d241, $d242, $d243, d244, d245;
        com.opengamma.util.tuple.ObjectsPair $r22;

        r0 := @this: com.opengamma.analytics.financial.model.interestrate.G2ppPiecewiseConstantModel;

        r1 := @parameter0: double[];

        r2 := @parameter1: double[];

        r3 := @parameter2: double[][];

        r4 := @parameter3: double[];

        r5 := @parameter4: double[];

        r6 := @parameter5: double[][];

        r7 := @parameter6: double[];

        i0 = lengthof r2;

        i1 = lengthof r5;

        d244 = 0.0;

        d245 = 0.0;

        r8 = newarray (double)[2];

        r9 = newarray (double)[2];

        r10 = newmultiarray (double)[2][2];

        r11 = newmultiarray (double)[2][2];

        r12 = newarray (double)[i1];

        r13 = newarray (double)[i1];

        i2 = 0;

     label01:
        if i2 >= i1 goto label08;

        $r87 = r6[i2];

        $d215 = $r87[0];

        $d217 = neg $d215;

        $d216 = r1[0];

        $d221 = $d217 * $d216;

        $r88 = r6[i2];

        $d219 = $r88[1];

        $d218 = r1[1];

        $d220 = $d219 * $d218;

        $d224 = $d221 - $d220;

        $d222 = r7[i2];

        $d223 = $d222 / 2.0;

        $d225 = $d224 - $d223;

        $d226 = staticinvoke <java.lang.Math: double exp(double)>($d225);

        r13[i2] = $d226;

        $d228 = r5[i2];

        $d227 = r13[i2];

        $d229 = $d228 * $d227;

        r12[i2] = $d229;

        $d230 = r12[i2];

        d244 = d244 + $d230;

        i3 = 0;

     label02:
        if i3 >= 2 goto label03;

        $d242 = r8[i3];

        $r92 = r6[i2];

        $d238 = $r92[i3];

        $d240 = neg $d238;

        $d239 = r12[i2];

        $d241 = $d240 * $d239;

        $d243 = $d242 + $d241;

        r8[i3] = $d243;

        i3 = i3 + 1;

        goto label02;

     label03:
        i4 = 0;

     label04:
        if i4 >= 2 goto label07;

        i5 = 0;

     label05:
        if i5 >= 2 goto label06;

        $r89 = r10[i4];

        $d236 = $r89[i5];

        $r90 = r6[i2];

        $d232 = $r90[i4];

        $r91 = r6[i2];

        $d231 = $r91[i5];

        $d234 = $d232 * $d231;

        $d233 = r12[i2];

        $d235 = $d234 * $d233;

        $d237 = $d236 + $d235;

        $r89[i5] = $d237;

        i5 = i5 + 1;

        goto label05;

     label06:
        i4 = i4 + 1;

        goto label04;

     label07:
        i2 = i2 + 1;

        goto label01;

     label08:
        r93 = newarray (double)[i0];

        r94 = newarray (double)[i0];

        i6 = 0;

     label09:
        if i6 >= i0 goto label16;

        $r81 = r3[i6];

        $d186 = $r81[0];

        $d188 = neg $d186;

        $d187 = r1[0];

        $d192 = $d188 * $d187;

        $r82 = r3[i6];

        $d190 = $r82[1];

        $d189 = r1[1];

        $d191 = $d190 * $d189;

        $d195 = $d192 - $d191;

        $d193 = r4[i6];

        $d194 = $d193 / 2.0;

        $d196 = $d195 - $d194;

        $d197 = staticinvoke <java.lang.Math: double exp(double)>($d196);

        r94[i6] = $d197;

        $d199 = r2[i6];

        $d198 = r94[i6];

        $d200 = $d199 * $d198;

        r93[i6] = $d200;

        $d201 = r93[i6];

        d245 = d245 + $d201;

        i7 = 0;

     label10:
        if i7 >= 2 goto label11;

        $d213 = r9[i7];

        $r86 = r3[i6];

        $d209 = $r86[i7];

        $d211 = neg $d209;

        $d210 = r93[i6];

        $d212 = $d211 * $d210;

        $d214 = $d213 + $d212;

        r9[i7] = $d214;

        i7 = i7 + 1;

        goto label10;

     label11:
        i8 = 0;

     label12:
        if i8 >= 2 goto label15;

        i9 = 0;

     label13:
        if i9 >= 2 goto label14;

        $r83 = r11[i8];

        $d207 = $r83[i9];

        $r84 = r3[i6];

        $d203 = $r84[i8];

        $r85 = r3[i6];

        $d202 = $r85[i9];

        $d205 = $d203 * $d202;

        $d204 = r93[i6];

        $d206 = $d205 * $d204;

        $d208 = $d207 + $d206;

        $r83[i9] = $d208;

        i9 = i9 + 1;

        goto label13;

     label14:
        i8 = i8 + 1;

        goto label12;

     label15:
        i6 = i6 + 1;

        goto label09;

     label16:
        r95 = newarray (double)[2];

        i10 = 0;

     label17:
        if i10 >= 2 goto label18;

        $d178 = r8[i10];

        $d181 = $d178 * d245;

        $d179 = r9[i10];

        $d180 = $d179 * d244;

        $d182 = $d181 - $d180;

        $d184 = neg $d182;

        $d183 = d245 * d245;

        $d185 = $d184 / $d183;

        r95[i10] = $d185;

        i10 = i10 + 1;

        goto label17;

     label18:
        r96 = newmultiarray (double)[2][2];

        i11 = 0;

     label19:
        if i11 >= 2 goto label22;

        i12 = i11;

     label20:
        if i12 >= 2 goto label21;

        $r80 = r96[i11];

        $r78 = r10[i11];

        $d153 = $r78[i12];

        $d157 = $d153 * d245;

        $d155 = r8[i12];

        $d154 = r9[i11];

        $d156 = $d155 * $d154;

        $d161 = $d157 - $d156;

        $d159 = r8[i11];

        $d158 = r9[i12];

        $d160 = $d159 * $d158;

        $d164 = $d161 - $d160;

        $r79 = r11[i11];

        $d162 = $r79[i12];

        $d163 = d244 * $d162;

        $d165 = $d164 - $d163;

        $d167 = neg $d165;

        $d166 = d245 * d245;

        $d176 = $d167 / $d166;

        $d168 = r9[i11];

        $d170 = 2.0 * $d168;

        $d169 = r9[i12];

        $d171 = $d170 * $d169;

        $d174 = $d171 * d244;

        $d172 = d245 * d245;

        $d173 = $d172 * d245;

        $d175 = $d174 / $d173;

        $d177 = $d176 - $d175;

        $r80[i12] = $d177;

        i12 = i12 + 1;

        goto label20;

     label21:
        i11 = i11 + 1;

        goto label19;

     label22:
        $r21 = r96[1];

        $r20 = r96[0];

        $d0 = $r20[1];

        $r21[0] = $d0;

        r14 = newmultiarray (double)[2][2];

        r15 = newmultiarray (double)[2][2];

        i13 = 0;

     label23:
        if i13 >= 2 goto label26;

        i14 = 0;

     label24:
        if i14 >= 2 goto label25;

        $r74 = r14[i13];

        $r72 = r10[i13];

        $d123 = $r72[i14];

        $d127 = $d123 * d245;

        $d125 = r8[i14];

        $d124 = r9[i13];

        $d126 = $d125 * $d124;

        $d131 = $d127 - $d126;

        $d129 = r8[i13];

        $d128 = r9[i14];

        $d130 = $d129 * $d128;

        $d135 = $d131 - $d130;

        $r73 = r11[i13];

        $d132 = $r73[i14];

        $d133 = $d132 + 1.0E-6;

        $d134 = d244 * $d133;

        $d136 = $d135 - $d134;

        $d138 = neg $d136;

        $d137 = d245 * d245;

        $d147 = $d138 / $d137;

        $d139 = r9[i13];

        $d141 = 2.0 * $d139;

        $d140 = r9[i14];

        $d142 = $d141 * $d140;

        $d145 = $d142 * d244;

        $d143 = d245 * d245;

        $d144 = $d143 * d245;

        $d146 = $d145 / $d144;

        $d148 = $d147 - $d146;

        $r74[i14] = $d148;

        $r77 = r15[i13];

        $r75 = r14[i13];

        $d150 = $r75[i14];

        $r76 = r96[i13];

        $d149 = $r76[i14];

        $d151 = $d150 - $d149;

        $d152 = $d151 / 1.0E-6;

        $r77[i14] = $d152;

        i14 = i14 + 1;

        goto label24;

     label25:
        i13 = i13 + 1;

        goto label23;

     label26:
        r97 = newmultiarray (double)[2][2];

        r98 = newmultiarray (double)[2][2][2];

        r16 = newmultiarray (double)[2][2];

        r17 = newmultiarray (double)[2][2];

        r18 = newmultiarray (double)[2][2][2];

        r19 = newmultiarray (double)[2][2];

        i15 = 0;

     label27:
        if i15 >= 2 goto label30;

        i16 = 0;

     label28:
        if i16 >= 2 goto label29;

        $r58 = r97[i15];

        $r57 = r11[i15];

        $d40 = $r57[i16];

        $d39 = d245 * d245;

        $d48 = $d40 / $d39;

        $d41 = r9[i15];

        $d43 = 2.0 * $d41;

        $d42 = r9[i16];

        $d46 = $d43 * $d42;

        $d44 = d245 * d245;

        $d45 = $d44 * d245;

        $d47 = $d46 / $d45;

        $d49 = $d48 - $d47;

        $r58[i16] = $d49;

        $r61 = r17[i15];

        $r59 = r10[i15];

        $d51 = $r59[i16];

        $d50 = d245 * d245;

        $d66 = $d51 / $d50;

        $d53 = r8[i16];

        $d52 = r9[i15];

        $d57 = $d53 * $d52;

        $d55 = r8[i15];

        $d54 = r9[i16];

        $d56 = $d55 * $d54;

        $d60 = $d57 - $d56;

        $r60 = r11[i15];

        $d58 = $r60[i16];

        $d59 = d244 * $d58;

        $d61 = $d60 - $d59;

        $d64 = 2.0 * $d61;

        $d62 = d245 * d245;

        $d63 = $d62 * d245;

        $d65 = $d64 / $d63;

        $d74 = $d66 + $d65;

        $d67 = r9[i15];

        $d69 = 4.0 * $d67;

        $d68 = r8[i16];

        $d72 = $d69 * $d68;

        $d70 = d245 * d245;

        $d71 = $d70 * d245;

        $d73 = $d72 / $d71;

        $d84 = $d74 - $d73;

        $d75 = r9[i15];

        $d76 = 6.0 * $d75;

        $d78 = $d76 * d244;

        $d77 = r9[i16];

        $d82 = $d78 * $d77;

        $d79 = d245 * d245;

        $d80 = $d79 * d245;

        $d81 = $d80 * d245;

        $d83 = $d82 / $d81;

        $d85 = $d84 + $d83;

        $r61[i16] = $d85;

        $r62 = r98[i16];

        $r63 = $r62[i15];

        $d89 = $r63[i16];

        $d87 = r9[i15];

        $d86 = d245 * d245;

        $d88 = $d87 / $d86;

        $d90 = $d89 + $d88;

        $r63[i16] = $d90;

        $r64 = r98[i15];

        $r65 = $r64[i15];

        $d94 = $r65[i16];

        $d92 = r9[i16];

        $d91 = d245 * d245;

        $d93 = $d92 / $d91;

        $d95 = $d94 + $d93;

        $r65[i16] = $d95;

        $r66 = r18[i16];

        $r67 = $r66[i15];

        $d106 = $r67[i16];

        $d97 = r8[i15];

        $d96 = d245 * d245;

        $d104 = $d97 / $d96;

        $d98 = r9[i15];

        $d99 = 2.0 * $d98;

        $d102 = $d99 * d244;

        $d100 = d245 * d245;

        $d101 = $d100 * d245;

        $d103 = $d102 / $d101;

        $d105 = $d104 - $d103;

        $d107 = $d106 + $d105;

        $r67[i16] = $d107;

        $r68 = r18[i15];

        $r69 = $r68[i15];

        $d118 = $r69[i16];

        $d109 = r8[i16];

        $d108 = d245 * d245;

        $d116 = $d109 / $d108;

        $d110 = r9[i16];

        $d111 = 2.0 * $d110;

        $d114 = $d111 * d244;

        $d112 = d245 * d245;

        $d113 = $d112 * d245;

        $d115 = $d114 / $d113;

        $d117 = $d116 - $d115;

        $d119 = $d118 + $d117;

        $r69[i16] = $d119;

        $r70 = r16[i15];

        $d120 = -1.0 / d245;

        $r70[i16] = $d120;

        $r71 = r19[i15];

        $d121 = d245 * d245;

        $d122 = d244 / $d121;

        $r71[i16] = $d122;

        i16 = i16 + 1;

        goto label28;

     label29:
        i15 = i15 + 1;

        goto label27;

     label30:
        r99 = newmultiarray (double)[i0][2][2];

        i17 = 0;

     label31:
        if i17 >= 2 goto label38;

        i18 = 0;

     label32:
        if i18 >= 2 goto label37;

        i19 = 0;

     label33:
        if i19 >= i0 goto label36;

        $r44 = r99[i19];

        $r45 = $r44[i17];

        $d24 = $r45[i18];

        $r46 = r17[i17];

        $d23 = $r46[i18];

        $d25 = $d24 + $d23;

        $r45[i18] = $d25;

        $r47 = r99[i19];

        $r48 = $r47[i17];

        $d31 = $r48[i18];

        $r49 = r3[i19];

        $d27 = $r49[i17];

        $r50 = r3[i19];

        $d26 = $r50[i18];

        $d29 = $d27 * $d26;

        $r51 = r19[i17];

        $d28 = $r51[i18];

        $d30 = $d29 * $d28;

        $d32 = $d31 + $d30;

        $r48[i18] = $d32;

        i20 = 0;

     label34:
        if i20 >= 2 goto label35;

        $r52 = r99[i19];

        $r53 = $r52[i17];

        $d37 = $r53[i18];

        $r54 = r3[i19];

        $d33 = $r54[i20];

        $d35 = neg $d33;

        $r55 = r18[i20];

        $r56 = $r55[i17];

        $d34 = $r56[i18];

        $d36 = $d35 * $d34;

        $d38 = $d37 + $d36;

        $r53[i18] = $d38;

        i20 = i20 + 1;

        goto label34;

     label35:
        i19 = i19 + 1;

        goto label33;

     label36:
        i18 = i18 + 1;

        goto label32;

     label37:
        i17 = i17 + 1;

        goto label31;

     label38:
        r100 = newmultiarray (double)[i1][2][2];

        i21 = 0;

     label39:
        if i21 >= 2 goto label46;

        i22 = 0;

     label40:
        if i22 >= 2 goto label45;

        i23 = 0;

     label41:
        if i23 >= i1 goto label44;

        $r31 = r100[i23];

        $r32 = $r31[i21];

        $d8 = $r32[i22];

        $r33 = r97[i21];

        $d7 = $r33[i22];

        $d9 = $d8 + $d7;

        $r32[i22] = $d9;

        $r34 = r100[i23];

        $r35 = $r34[i21];

        $d15 = $r35[i22];

        $r36 = r6[i23];

        $d11 = $r36[i21];

        $r37 = r6[i23];

        $d10 = $r37[i22];

        $d13 = $d11 * $d10;

        $r38 = r16[i21];

        $d12 = $r38[i22];

        $d14 = $d13 * $d12;

        $d16 = $d15 + $d14;

        $r35[i22] = $d16;

        i24 = 0;

     label42:
        if i24 >= 2 goto label43;

        $r39 = r100[i23];

        $r40 = $r39[i21];

        $d21 = $r40[i22];

        $r41 = r6[i23];

        $d17 = $r41[i24];

        $d19 = neg $d17;

        $r42 = r98[i24];

        $r43 = $r42[i21];

        $d18 = $r43[i22];

        $d20 = $d19 * $d18;

        $d22 = $d21 + $d20;

        $r40[i22] = $d22;

        i24 = i24 + 1;

        goto label42;

     label43:
        i23 = i23 + 1;

        goto label41;

     label44:
        i22 = i22 + 1;

        goto label40;

     label45:
        i21 = i21 + 1;

        goto label39;

     label46:
        r101 = newmultiarray (double)[i0][2][2];

        i25 = 0;

     label47:
        if i25 >= i0 goto label52;

        i26 = 0;

     label48:
        if i26 >= 2 goto label51;

        i27 = 0;

     label49:
        if i27 >= 2 goto label50;

        $r27 = r101[i25];

        $r30 = $r27[i26];

        $d5 = r94[i25];

        $r28 = r99[i25];

        $r29 = $r28[i26];

        $d4 = $r29[i27];

        $d6 = $d5 * $d4;

        $r30[i27] = $d6;

        i27 = i27 + 1;

        goto label49;

     label50:
        i26 = i26 + 1;

        goto label48;

     label51:
        i25 = i25 + 1;

        goto label47;

     label52:
        r102 = newmultiarray (double)[i1][2][2];

        i28 = 0;

     label53:
        if i28 >= i1 goto label58;

        i29 = 0;

     label54:
        if i29 >= 2 goto label57;

        i30 = 0;

     label55:
        if i30 >= 2 goto label56;

        $r23 = r102[i28];

        $r26 = $r23[i29];

        $d2 = r13[i28];

        $r24 = r100[i28];

        $r25 = $r24[i29];

        $d1 = $r25[i30];

        $d3 = $d2 * $d1;

        $r26[i30] = $d3;

        i30 = i30 + 1;

        goto label55;

     label56:
        i29 = i29 + 1;

        goto label54;

     label57:
        i28 = i28 + 1;

        goto label53;

     label58:
        $r22 = staticinvoke <com.opengamma.util.tuple.ObjectsPair: com.opengamma.util.tuple.ObjectsPair of(java.lang.Object,java.lang.Object)>(r101, r102);

        return $r22;
    }

    public double futuresConvexityFactor(com.opengamma.analytics.financial.model.interestrate.definition.G2ppPiecewiseConstantParameters, double, double, double)
    {
        com.opengamma.analytics.financial.model.interestrate.G2ppPiecewiseConstantModel r0;
        com.opengamma.analytics.financial.model.interestrate.definition.G2ppPiecewiseConstantParameters r1;
        double d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21, $d22, $d23, $d24, $d25, $d26, $d27, $d28, $d29, $d30, $d31, $d32, $d33, $d34, $d35, $d36, $d37, $d38, $d39, $d40, $d41, $d42, $d43, $d44, $d45, $d46, $d47, $d48, $d49, $d50, $d51, $d52, $d53, $d54, $d55, $d56, $d57, $d58, $d59, $d60, $d61, $d62, $d63, $d64, $d65, $d66, $d67, $d68, $d69, $d70, $d71, $d72, $d73, $d74, $d75, $d76, $d77, $d78, $d79, $d80, $d81, $d82, $d83, $d84, $d85, $d86, $d87, $d88, $d89, $d90, $d91, $d92, $d93, $d94, $d95, $d96, $d97, $d98, $d99, $d100, $d101, $d102, $d103, $d104, $d105, $d106, $d107, $d108, $d109, $d110, $d111, $d112, $d113, $d114, $d115, $d116, $d117, $d118, $d119, $d120, $d121, $d122, $d123, $d124, $d125, $d126, $d127, $d128, $d129, $d130, $d131, $d132, $d133, $d134, $d135, $d136, $d137, $d138, $d139, $d140, $d141, $d142, $d143, $d144, $d145, $d146, $d147, $d148, $d149, $d150, $d151, $d152, $d153, $d154, $d155, $d156, $d157, $d158, $d159, $d160, $d161, $d162, $d163, $d164, $d165, $d166, $d167, $d168, $d169, $d170, $d171, $d172, $d173, $d174, $d175, $d176, $d177, $d178, $d179, $d180, $d181, $d182, $d183, $d184, $d185, $d186, $d187, $d188, $d189, $d190, d191, d192, d193, d194, d195, d196;
        double[] r2, r4, r5;
        it.unimi.dsi.fastutil.doubles.DoubleArrayList[] r3;
        byte $b0;
        int $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, i12, i13;
        it.unimi.dsi.fastutil.doubles.DoubleArrayList $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13;

        r0 := @this: com.opengamma.analytics.financial.model.interestrate.G2ppPiecewiseConstantModel;

        r1 := @parameter0: com.opengamma.analytics.financial.model.interestrate.definition.G2ppPiecewiseConstantParameters;

        d0 := @parameter1: double;

        d1 := @parameter2: double;

        d2 := @parameter3: double;

        r2 = virtualinvoke r1.<com.opengamma.analytics.financial.model.interestrate.definition.G2ppPiecewiseConstantParameters: double[] getMeanReversion()>();

        d3 = virtualinvoke r1.<com.opengamma.analytics.financial.model.interestrate.definition.G2ppPiecewiseConstantParameters: double getCorrelation()>();

        r3 = virtualinvoke r1.<com.opengamma.analytics.financial.model.interestrate.definition.G2ppPiecewiseConstantParameters: it.unimi.dsi.fastutil.doubles.DoubleArrayList[] getVolatility()>();

        $d11 = r2[0];

        $d10 = r2[0];

        $d13 = $d11 * $d10;

        $d12 = r2[0];

        $d14 = $d13 * $d12;

        d4 = 0.5 / $d14;

        $d16 = r2[0];

        $d15 = r2[1];

        $d17 = $d16 * $d15;

        d5 = d3 / $d17;

        $d19 = r2[0];

        $d18 = r2[1];

        $d20 = $d19 * $d18;

        d6 = d3 / $d20;

        $d22 = r2[1];

        $d21 = r2[1];

        $d24 = $d22 * $d21;

        $d23 = r2[1];

        $d25 = $d24 * $d23;

        d7 = 0.5 / $d25;

        $d26 = r2[0];

        $d27 = neg $d26;

        $d28 = $d27 * d1;

        $d29 = staticinvoke <java.lang.Math: double exp(double)>($d28);

        $d30 = r2[0];

        $d31 = neg $d30;

        $d32 = $d31 * d2;

        $d33 = staticinvoke <java.lang.Math: double exp(double)>($d32);

        d8 = $d29 - $d33;

        $d34 = r2[1];

        $d35 = neg $d34;

        $d36 = $d35 * d1;

        $d37 = staticinvoke <java.lang.Math: double exp(double)>($d36);

        $d38 = r2[1];

        $d39 = neg $d38;

        $d40 = $d39 * d2;

        $d41 = staticinvoke <java.lang.Math: double exp(double)>($d40);

        d9 = $d37 - $d41;

        r4 = virtualinvoke r1.<com.opengamma.analytics.financial.model.interestrate.definition.G2ppPiecewiseConstantParameters: double[] getVolatilityTime()>();

        i12 = 1;

     label1:
        $d42 = r4[i12];

        $b0 = d0 cmpl $d42;

        if $b0 <= 0 goto label2;

        i12 = i12 + 1;

        goto label1;

     label2:
        $i1 = i12 + 1;

        r5 = newarray (double)[$i1];

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r4, 0, r5, 0, i12);

        r5[i12] = d0;

        d191 = 0.0;

        d192 = 0.0;

        d193 = 0.0;

        d194 = 0.0;

        i13 = 0;

     label3:
        if i13 >= i12 goto label4;

        $r6 = r3[0];

        $d53 = virtualinvoke $r6.<it.unimi.dsi.fastutil.doubles.DoubleArrayList: double getDouble(int)>(i13);

        $r7 = r3[0];

        $d54 = virtualinvoke $r7.<it.unimi.dsi.fastutil.doubles.DoubleArrayList: double getDouble(int)>(i13);

        $d58 = $d53 * $d54;

        $d56 = r2[0];

        $i2 = i13 + 1;

        $d55 = r5[$i2];

        $d57 = $d56 * $d55;

        $d59 = staticinvoke <java.lang.Math: double exp(double)>($d57);

        $d61 = r2[0];

        $d60 = r5[i13];

        $d62 = $d61 * $d60;

        $d63 = staticinvoke <java.lang.Math: double exp(double)>($d62);

        $d64 = $d59 - $d63;

        $d70 = $d58 * $d64;

        $d65 = r2[0];

        $d68 = neg $d65;

        $i3 = i13 + 1;

        $d66 = r5[$i3];

        $d67 = d2 - $d66;

        $d69 = $d68 * $d67;

        $d71 = staticinvoke <java.lang.Math: double exp(double)>($d69);

        $d77 = 2.0 - $d71;

        $d72 = r2[0];

        $d75 = neg $d72;

        $d73 = r5[i13];

        $d74 = d2 - $d73;

        $d76 = $d75 * $d74;

        $d78 = staticinvoke <java.lang.Math: double exp(double)>($d76);

        $d79 = $d77 - $d78;

        $d80 = $d70 * $d79;

        d191 = d191 + $d80;

        $r8 = r3[0];

        $d81 = virtualinvoke $r8.<it.unimi.dsi.fastutil.doubles.DoubleArrayList: double getDouble(int)>(i13);

        $r9 = r3[1];

        $d82 = virtualinvoke $r9.<it.unimi.dsi.fastutil.doubles.DoubleArrayList: double getDouble(int)>(i13);

        $d86 = $d81 * $d82;

        $d84 = r2[1];

        $i4 = i13 + 1;

        $d83 = r5[$i4];

        $d85 = $d84 * $d83;

        $d87 = staticinvoke <java.lang.Math: double exp(double)>($d85);

        $d89 = r2[1];

        $d88 = r5[i13];

        $d90 = $d89 * $d88;

        $d91 = staticinvoke <java.lang.Math: double exp(double)>($d90);

        $d93 = $d87 - $d91;

        $d92 = r2[1];

        $d103 = $d93 / $d92;

        $d94 = r2[0];

        $d97 = neg $d94;

        $i5 = i13 + 1;

        $d95 = r5[$i5];

        $d96 = d2 - $d95;

        $d101 = $d97 * $d96;

        $d99 = r2[1];

        $i6 = i13 + 1;

        $d98 = r5[$i6];

        $d100 = $d99 * $d98;

        $d102 = $d101 + $d100;

        $d104 = staticinvoke <java.lang.Math: double exp(double)>($d102);

        $d105 = r2[0];

        $d108 = neg $d105;

        $d106 = r5[i13];

        $d107 = d2 - $d106;

        $d112 = $d108 * $d107;

        $d110 = r2[1];

        $d109 = r5[i13];

        $d111 = $d110 * $d109;

        $d113 = $d112 + $d111;

        $d114 = staticinvoke <java.lang.Math: double exp(double)>($d113);

        $d118 = $d104 - $d114;

        $d116 = r2[0];

        $d115 = r2[1];

        $d117 = $d116 + $d115;

        $d119 = $d118 / $d117;

        $d120 = $d103 - $d119;

        $d121 = $d86 * $d120;

        d192 = d192 + $d121;

        $r10 = r3[1];

        $d122 = virtualinvoke $r10.<it.unimi.dsi.fastutil.doubles.DoubleArrayList: double getDouble(int)>(i13);

        $r11 = r3[0];

        $d123 = virtualinvoke $r11.<it.unimi.dsi.fastutil.doubles.DoubleArrayList: double getDouble(int)>(i13);

        $d127 = $d122 * $d123;

        $d125 = r2[0];

        $i7 = i13 + 1;

        $d124 = r5[$i7];

        $d126 = $d125 * $d124;

        $d128 = staticinvoke <java.lang.Math: double exp(double)>($d126);

        $d130 = r2[0];

        $d129 = r5[i13];

        $d131 = $d130 * $d129;

        $d132 = staticinvoke <java.lang.Math: double exp(double)>($d131);

        $d134 = $d128 - $d132;

        $d133 = r2[0];

        $d144 = $d134 / $d133;

        $d135 = r2[1];

        $d138 = neg $d135;

        $i8 = i13 + 1;

        $d136 = r5[$i8];

        $d137 = d2 - $d136;

        $d142 = $d138 * $d137;

        $d140 = r2[0];

        $i9 = i13 + 1;

        $d139 = r5[$i9];

        $d141 = $d140 * $d139;

        $d143 = $d142 + $d141;

        $d145 = staticinvoke <java.lang.Math: double exp(double)>($d143);

        $d146 = r2[1];

        $d149 = neg $d146;

        $d147 = r5[i13];

        $d148 = d2 - $d147;

        $d153 = $d149 * $d148;

        $d151 = r2[0];

        $d150 = r5[i13];

        $d152 = $d151 * $d150;

        $d154 = $d153 + $d152;

        $d155 = staticinvoke <java.lang.Math: double exp(double)>($d154);

        $d159 = $d145 - $d155;

        $d157 = r2[1];

        $d156 = r2[0];

        $d158 = $d157 + $d156;

        $d160 = $d159 / $d158;

        $d161 = $d144 - $d160;

        $d162 = $d127 * $d161;

        d193 = d193 + $d162;

        $r12 = r3[1];

        $d163 = virtualinvoke $r12.<it.unimi.dsi.fastutil.doubles.DoubleArrayList: double getDouble(int)>(i13);

        $r13 = r3[1];

        $d164 = virtualinvoke $r13.<it.unimi.dsi.fastutil.doubles.DoubleArrayList: double getDouble(int)>(i13);

        $d168 = $d163 * $d164;

        $d166 = r2[1];

        $i10 = i13 + 1;

        $d165 = r5[$i10];

        $d167 = $d166 * $d165;

        $d169 = staticinvoke <java.lang.Math: double exp(double)>($d167);

        $d171 = r2[1];

        $d170 = r5[i13];

        $d172 = $d171 * $d170;

        $d173 = staticinvoke <java.lang.Math: double exp(double)>($d172);

        $d174 = $d169 - $d173;

        $d180 = $d168 * $d174;

        $d175 = r2[1];

        $d178 = neg $d175;

        $i11 = i13 + 1;

        $d176 = r5[$i11];

        $d177 = d2 - $d176;

        $d179 = $d178 * $d177;

        $d181 = staticinvoke <java.lang.Math: double exp(double)>($d179);

        $d187 = 2.0 - $d181;

        $d182 = r2[1];

        $d185 = neg $d182;

        $d183 = r5[i13];

        $d184 = d2 - $d183;

        $d186 = $d185 * $d184;

        $d188 = staticinvoke <java.lang.Math: double exp(double)>($d186);

        $d189 = $d187 - $d188;

        $d190 = $d180 * $d189;

        d194 = d194 + $d190;

        i13 = i13 + 1;

        goto label3;

     label4:
        $d43 = d4 * d8;

        $d46 = $d43 * d191;

        $d44 = d5 * d9;

        $d45 = $d44 * d192;

        $d49 = $d46 + $d45;

        $d47 = d6 * d8;

        $d48 = $d47 * d193;

        $d52 = $d49 + $d48;

        $d50 = d7 * d9;

        $d51 = $d50 * d194;

        d195 = $d52 + $d51;

        d196 = staticinvoke <java.lang.Math: double exp(double)>(d195);

        return d196;
    }
}
