public final class org.jcp.xml.dsig.internal.dom.DOMExcC14NMethod extends org.jcp.xml.dsig.internal.dom.ApacheCanonicalizer
{

    public void <init>()
    {
        org.jcp.xml.dsig.internal.dom.DOMExcC14NMethod r0;

        r0 := @this: org.jcp.xml.dsig.internal.dom.DOMExcC14NMethod;

        specialinvoke r0.<org.jcp.xml.dsig.internal.dom.ApacheCanonicalizer: void <init>()>();

        return;
    }

    public void init(javax.xml.crypto.dsig.spec.TransformParameterSpec) throws java.security.InvalidAlgorithmParameterException
    {
        org.jcp.xml.dsig.internal.dom.DOMExcC14NMethod r0;
        javax.xml.crypto.dsig.spec.TransformParameterSpec r1;
        boolean $z0;
        javax.xml.crypto.dsig.spec.C14NMethodParameterSpec $r2;
        java.security.InvalidAlgorithmParameterException $r3;

        r0 := @this: org.jcp.xml.dsig.internal.dom.DOMExcC14NMethod;

        r1 := @parameter0: javax.xml.crypto.dsig.spec.TransformParameterSpec;

        if r1 == null goto label2;

        $z0 = r1 instanceof javax.xml.crypto.dsig.spec.ExcC14NParameterSpec;

        if $z0 != 0 goto label1;

        $r3 = new java.security.InvalidAlgorithmParameterException;

        specialinvoke $r3.<java.security.InvalidAlgorithmParameterException: void <init>(java.lang.String)>("params must be of type ExcC14NParameterSpec");

        throw $r3;

     label1:
        $r2 = (javax.xml.crypto.dsig.spec.C14NMethodParameterSpec) r1;

        r0.<org.jcp.xml.dsig.internal.dom.DOMExcC14NMethod: javax.xml.crypto.dsig.spec.C14NMethodParameterSpec params> = $r2;

     label2:
        return;
    }

    public void init(javax.xml.crypto.XMLStructure, javax.xml.crypto.XMLCryptoContext) throws java.security.InvalidAlgorithmParameterException
    {
        org.jcp.xml.dsig.internal.dom.DOMExcC14NMethod r0;
        javax.xml.crypto.XMLStructure r1;
        javax.xml.crypto.XMLCryptoContext r2;
        org.w3c.dom.Element r3, $r4;

        r0 := @this: org.jcp.xml.dsig.internal.dom.DOMExcC14NMethod;

        r1 := @parameter0: javax.xml.crypto.XMLStructure;

        r2 := @parameter1: javax.xml.crypto.XMLCryptoContext;

        specialinvoke r0.<org.jcp.xml.dsig.internal.dom.ApacheCanonicalizer: void init(javax.xml.crypto.XMLStructure,javax.xml.crypto.XMLCryptoContext)>(r1, r2);

        $r4 = r0.<org.jcp.xml.dsig.internal.dom.DOMExcC14NMethod: org.w3c.dom.Element transformElem>;

        r3 = staticinvoke <org.jcp.xml.dsig.internal.dom.DOMUtils: org.w3c.dom.Element getFirstChildElement(org.w3c.dom.Node)>($r4);

        if r3 != null goto label1;

        r0.<org.jcp.xml.dsig.internal.dom.DOMExcC14NMethod: javax.xml.crypto.dsig.spec.C14NMethodParameterSpec params> = null;

        r0.<org.jcp.xml.dsig.internal.dom.DOMExcC14NMethod: java.lang.String inclusiveNamespaces> = null;

        return;

     label1:
        specialinvoke r0.<org.jcp.xml.dsig.internal.dom.DOMExcC14NMethod: void unmarshalParams(org.w3c.dom.Element)>(r3);

        return;
    }

    private void unmarshalParams(org.w3c.dom.Element)
    {
        org.jcp.xml.dsig.internal.dom.DOMExcC14NMethod r0;
        org.w3c.dom.Element r1;
        java.lang.String r2, $r6, $r7;
        java.util.ArrayList $r4;
        int $i0, i1, i2;
        javax.xml.crypto.dsig.spec.ExcC14NParameterSpec $r5;

        r0 := @this: org.jcp.xml.dsig.internal.dom.DOMExcC14NMethod;

        r1 := @parameter0: org.w3c.dom.Element;

        r2 = interfaceinvoke r1.<org.w3c.dom.Element: java.lang.String getAttributeNS(java.lang.String,java.lang.String)>(null, "PrefixList");

        r0.<org.jcp.xml.dsig.internal.dom.DOMExcC14NMethod: java.lang.String inclusiveNamespaces> = r2;

        i1 = 0;

        i2 = virtualinvoke r2.<java.lang.String: int indexOf(int)>(32);

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

     label1:
        if i2 == -1 goto label2;

        $r7 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int,int)>(i1, i2);

        interfaceinvoke $r4.<java.util.List: boolean add(java.lang.Object)>($r7);

        i1 = i2 + 1;

        i2 = virtualinvoke r2.<java.lang.String: int indexOf(int,int)>(32, i1);

        goto label1;

     label2:
        $i0 = virtualinvoke r2.<java.lang.String: int length()>();

        if i1 > $i0 goto label3;

        $r6 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int)>(i1);

        interfaceinvoke $r4.<java.util.List: boolean add(java.lang.Object)>($r6);

     label3:
        $r5 = new javax.xml.crypto.dsig.spec.ExcC14NParameterSpec;

        specialinvoke $r5.<javax.xml.crypto.dsig.spec.ExcC14NParameterSpec: void <init>(java.util.List)>($r4);

        r0.<org.jcp.xml.dsig.internal.dom.DOMExcC14NMethod: javax.xml.crypto.dsig.spec.C14NMethodParameterSpec params> = $r5;

        return;
    }

    public void marshalParams(javax.xml.crypto.XMLStructure, javax.xml.crypto.XMLCryptoContext) throws javax.xml.crypto.MarshalException
    {
        org.jcp.xml.dsig.internal.dom.DOMExcC14NMethod r0;
        javax.xml.crypto.XMLStructure r1;
        javax.xml.crypto.XMLCryptoContext r2;
        java.security.spec.AlgorithmParameterSpec r3;
        java.lang.String r4, $r11, $r12, $r16, $r22;
        org.w3c.dom.Element r5, $r13;
        javax.xml.crypto.dsig.spec.ExcC14NParameterSpec r6;
        java.util.List r8;
        int i0, $i1, $i2, i3;
        org.w3c.dom.Document $r9;
        java.lang.StringBuffer $r10;
        java.lang.Object $r15;
        java.lang.StringBuilder $r19, $r20, $r21;

        r0 := @this: org.jcp.xml.dsig.internal.dom.DOMExcC14NMethod;

        r1 := @parameter0: javax.xml.crypto.XMLStructure;

        r2 := @parameter1: javax.xml.crypto.XMLCryptoContext;

        specialinvoke r0.<org.jcp.xml.dsig.internal.dom.ApacheCanonicalizer: void marshalParams(javax.xml.crypto.XMLStructure,javax.xml.crypto.XMLCryptoContext)>(r1, r2);

        r3 = virtualinvoke r0.<org.jcp.xml.dsig.internal.dom.DOMExcC14NMethod: java.security.spec.AlgorithmParameterSpec getParameterSpec()>();

        if r3 != null goto label1;

        return;

     label1:
        r4 = staticinvoke <org.jcp.xml.dsig.internal.dom.DOMUtils: java.lang.String getNSPrefix(javax.xml.crypto.XMLCryptoContext,java.lang.String)>(r2, "http://www.w3.org/2001/10/xml-exc-c14n#");

        $r9 = r0.<org.jcp.xml.dsig.internal.dom.DOMExcC14NMethod: org.w3c.dom.Document ownerDoc>;

        r5 = staticinvoke <org.jcp.xml.dsig.internal.dom.DOMUtils: org.w3c.dom.Element createElement(org.w3c.dom.Document,java.lang.String,java.lang.String,java.lang.String)>($r9, "InclusiveNamespaces", "http://www.w3.org/2001/10/xml-exc-c14n#", r4);

        if r4 == null goto label2;

        $i2 = virtualinvoke r4.<java.lang.String: int length()>();

        if $i2 != 0 goto label3;

     label2:
        interfaceinvoke r5.<org.w3c.dom.Element: void setAttributeNS(java.lang.String,java.lang.String,java.lang.String)>("http://www.w3.org/2000/xmlns/", "xmlns", "http://www.w3.org/2001/10/xml-exc-c14n#");

        goto label4;

     label3:
        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("xmlns:");

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r5.<org.w3c.dom.Element: void setAttributeNS(java.lang.String,java.lang.String,java.lang.String)>("http://www.w3.org/2000/xmlns/", $r22, "http://www.w3.org/2001/10/xml-exc-c14n#");

     label4:
        r6 = (javax.xml.crypto.dsig.spec.ExcC14NParameterSpec) r3;

        $r10 = new java.lang.StringBuffer;

        specialinvoke $r10.<java.lang.StringBuffer: void <init>(java.lang.String)>("");

        r8 = virtualinvoke r6.<javax.xml.crypto.dsig.spec.ExcC14NParameterSpec: java.util.List getPrefixList()>();

        i3 = 0;

        i0 = interfaceinvoke r8.<java.util.List: int size()>();

     label5:
        if i3 >= i0 goto label7;

        $r15 = interfaceinvoke r8.<java.util.List: java.lang.Object get(int)>(i3);

        $r16 = (java.lang.String) $r15;

        virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r16);

        $i1 = i0 - 1;

        if i3 >= $i1 goto label6;

        virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" ");

     label6:
        i3 = i3 + 1;

        goto label5;

     label7:
        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.String toString()>();

        staticinvoke <org.jcp.xml.dsig.internal.dom.DOMUtils: void setAttribute(org.w3c.dom.Element,java.lang.String,java.lang.String)>(r5, "PrefixList", $r11);

        $r12 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.String toString()>();

        r0.<org.jcp.xml.dsig.internal.dom.DOMExcC14NMethod: java.lang.String inclusiveNamespaces> = $r12;

        $r13 = r0.<org.jcp.xml.dsig.internal.dom.DOMExcC14NMethod: org.w3c.dom.Element transformElem>;

        interfaceinvoke $r13.<org.w3c.dom.Element: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>(r5);

        return;
    }

    public java.lang.String getParamsNSURI()
    {
        org.jcp.xml.dsig.internal.dom.DOMExcC14NMethod r0;

        r0 := @this: org.jcp.xml.dsig.internal.dom.DOMExcC14NMethod;

        return "http://www.w3.org/2001/10/xml-exc-c14n#";
    }

    public javax.xml.crypto.Data transform(javax.xml.crypto.Data, javax.xml.crypto.XMLCryptoContext) throws javax.xml.crypto.dsig.TransformException
    {
        org.jcp.xml.dsig.internal.dom.DOMExcC14NMethod r0;
        javax.xml.crypto.Data r1, $r13;
        javax.xml.crypto.XMLCryptoContext r2;
        org.jcp.xml.dsig.internal.dom.DOMSubTreeData r3;
        boolean $z0, $z1;
        com.sun.org.apache.xml.internal.security.c14n.Canonicalizer $r5;
        com.sun.org.apache.xml.internal.security.c14n.InvalidCanonicalizerException $r6;
        javax.xml.crypto.dsig.TransformException $r7;
        java.lang.StringBuilder $r8, $r9, $r11;
        java.lang.String $r10, $r12;

        r0 := @this: org.jcp.xml.dsig.internal.dom.DOMExcC14NMethod;

        r1 := @parameter0: javax.xml.crypto.Data;

        r2 := @parameter1: javax.xml.crypto.XMLCryptoContext;

        $z0 = r1 instanceof org.jcp.xml.dsig.internal.dom.DOMSubTreeData;

        if $z0 == 0 goto label4;

        r3 = (org.jcp.xml.dsig.internal.dom.DOMSubTreeData) r1;

        $z1 = virtualinvoke r3.<org.jcp.xml.dsig.internal.dom.DOMSubTreeData: boolean excludeComments()>();

        if $z1 == 0 goto label4;

     label1:
        $r5 = staticinvoke <com.sun.org.apache.xml.internal.security.c14n.Canonicalizer: com.sun.org.apache.xml.internal.security.c14n.Canonicalizer getInstance(java.lang.String)>("http://www.w3.org/2001/10/xml-exc-c14n#");

        r0.<org.jcp.xml.dsig.internal.dom.DOMExcC14NMethod: com.sun.org.apache.xml.internal.security.c14n.Canonicalizer apacheCanonicalizer> = $r5;

     label2:
        goto label4;

     label3:
        $r6 := @caughtexception;

        $r7 = new javax.xml.crypto.dsig.TransformException;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Couldn\'t find Canonicalizer for: http://www.w3.org/2001/10/xml-exc-c14n#: ");

        $r10 = virtualinvoke $r6.<com.sun.org.apache.xml.internal.security.c14n.InvalidCanonicalizerException: java.lang.String getMessage()>();

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<javax.xml.crypto.dsig.TransformException: void <init>(java.lang.String,java.lang.Throwable)>($r12, $r6);

        throw $r7;

     label4:
        $r13 = virtualinvoke r0.<org.jcp.xml.dsig.internal.dom.DOMExcC14NMethod: javax.xml.crypto.Data canonicalize(javax.xml.crypto.Data,javax.xml.crypto.XMLCryptoContext)>(r1, r2);

        return $r13;

        catch com.sun.org.apache.xml.internal.security.c14n.InvalidCanonicalizerException from label1 to label2 with label3;
    }
}
