public class com.opengamma.analytics.math.function.special.LaguerrePolynomialFunction extends com.opengamma.analytics.math.function.special.OrthogonalPolynomialFunctionGenerator
{
    private static final com.opengamma.analytics.math.function.DoubleFunction1D F1;
    private static final com.opengamma.analytics.math.function.DoubleFunction1D DF1;

    public void <init>()
    {
        com.opengamma.analytics.math.function.special.LaguerrePolynomialFunction r0;

        r0 := @this: com.opengamma.analytics.math.function.special.LaguerrePolynomialFunction;

        specialinvoke r0.<com.opengamma.analytics.math.function.special.OrthogonalPolynomialFunctionGenerator: void <init>()>();

        return;
    }

    public com.opengamma.analytics.math.function.DoubleFunction1D[] getPolynomials(int)
    {
        com.opengamma.analytics.math.function.special.LaguerrePolynomialFunction r0;
        int i0;
        com.opengamma.analytics.math.function.DoubleFunction1D[] $r1;

        r0 := @this: com.opengamma.analytics.math.function.special.LaguerrePolynomialFunction;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<com.opengamma.analytics.math.function.special.LaguerrePolynomialFunction: com.opengamma.analytics.math.function.DoubleFunction1D[] getPolynomials(int,double)>(i0, 0.0);

        return $r1;
    }

    public com.opengamma.util.tuple.Pair[] getPolynomialsAndFirstDerivative(int)
    {
        com.opengamma.analytics.math.function.special.LaguerrePolynomialFunction r0;
        int i0;
        com.opengamma.util.tuple.Pair[] $r1;

        r0 := @this: com.opengamma.analytics.math.function.special.LaguerrePolynomialFunction;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<com.opengamma.analytics.math.function.special.LaguerrePolynomialFunction: com.opengamma.util.tuple.Pair[] getPolynomialsAndFirstDerivative(int,double)>(i0, 0.0);

        return $r1;
    }

    public com.opengamma.analytics.math.function.DoubleFunction1D[] getPolynomials(int, double)
    {
        com.opengamma.analytics.math.function.special.LaguerrePolynomialFunction r0;
        int i0, $i1, $i2, $i3, $i4, i5;
        double d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9;
        com.opengamma.analytics.math.function.DoubleFunction1D[] r1;
        com.opengamma.analytics.math.function.DoubleFunction1D $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r14;
        com.opengamma.analytics.math.function.RealPolynomialFunction1D $r12;
        double[] $r13;
        boolean $z0;

        r0 := @this: com.opengamma.analytics.math.function.special.LaguerrePolynomialFunction;

        i0 := @parameter0: int;

        d0 := @parameter1: double;

        if i0 < 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        staticinvoke <org.apache.commons.lang.Validate: void isTrue(boolean)>($z0);

        $i1 = i0 + 1;

        r1 = newarray (com.opengamma.analytics.math.function.DoubleFunction1D)[$i1];

        i5 = 0;

     label3:
        if i5 > i0 goto label7;

        if i5 != 0 goto label4;

        $r14 = virtualinvoke r0.<com.opengamma.analytics.math.function.special.LaguerrePolynomialFunction: com.opengamma.analytics.math.function.DoubleFunction1D getOne()>();

        r1[i5] = $r14;

        goto label6;

     label4:
        if i5 != 1 goto label5;

        $r12 = new com.opengamma.analytics.math.function.RealPolynomialFunction1D;

        $r13 = newarray (double)[2];

        $d9 = 1.0 + d0;

        $r13[0] = $d9;

        $r13[1] = -1.0;

        specialinvoke $r12.<com.opengamma.analytics.math.function.RealPolynomialFunction1D: void <init>(double[])>($r13);

        r1[i5] = $r12;

        goto label6;

     label5:
        $i2 = i5 - 1;

        $r2 = r1[$i2];

        $d1 = (double) i5;

        $d2 = 2.0 * $d1;

        $d3 = $d2 + d0;

        $d4 = $d3 - 1.0;

        $r3 = virtualinvoke $r2.<com.opengamma.analytics.math.function.DoubleFunction1D: com.opengamma.analytics.math.function.DoubleFunction1D multiply(double)>($d4);

        $i3 = i5 - 1;

        $r4 = r1[$i3];

        $r5 = virtualinvoke r0.<com.opengamma.analytics.math.function.special.LaguerrePolynomialFunction: com.opengamma.analytics.math.function.DoubleFunction1D getX()>();

        $r6 = virtualinvoke $r4.<com.opengamma.analytics.math.function.DoubleFunction1D: com.opengamma.analytics.math.function.DoubleFunction1D multiply(com.opengamma.analytics.math.function.DoubleFunction1D)>($r5);

        $r7 = virtualinvoke $r3.<com.opengamma.analytics.math.function.DoubleFunction1D: com.opengamma.analytics.math.function.DoubleFunction1D subtract(com.opengamma.analytics.math.function.DoubleFunction1D)>($r6);

        $i4 = i5 - 2;

        $r8 = r1[$i4];

        $d5 = (double) i5;

        $d6 = $d5 - 1.0;

        $d7 = $d6 + d0;

        $r9 = virtualinvoke $r8.<com.opengamma.analytics.math.function.DoubleFunction1D: com.opengamma.analytics.math.function.DoubleFunction1D multiply(double)>($d7);

        $r10 = virtualinvoke $r7.<com.opengamma.analytics.math.function.DoubleFunction1D: com.opengamma.analytics.math.function.DoubleFunction1D subtract(com.opengamma.analytics.math.function.DoubleFunction1D)>($r9);

        $d8 = (double) i5;

        $r11 = virtualinvoke $r10.<com.opengamma.analytics.math.function.DoubleFunction1D: com.opengamma.analytics.math.function.DoubleFunction1D divide(double)>($d8);

        r1[i5] = $r11;

     label6:
        i5 = i5 + 1;

        goto label3;

     label7:
        return r1;
    }

    public com.opengamma.util.tuple.Pair[] getPolynomialsAndFirstDerivative(int, double)
    {
        com.opengamma.analytics.math.function.special.LaguerrePolynomialFunction r0;
        int i0, $i1, $i2, $i3, i4;
        double d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11;
        com.opengamma.util.tuple.Pair[] r1;
        com.opengamma.analytics.math.function.DoubleFunction1D r2, r3, r4, r5, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r21, $r22, $r24, $r25;
        com.opengamma.util.tuple.Pair $r6, $r8, $r20, $r23, $r26;
        java.lang.Object $r7, $r9;
        boolean $z0;

        r0 := @this: com.opengamma.analytics.math.function.special.LaguerrePolynomialFunction;

        i0 := @parameter0: int;

        d0 := @parameter1: double;

        if i0 < 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        staticinvoke <org.apache.commons.lang.Validate: void isTrue(boolean)>($z0);

        $i1 = i0 + 1;

        r1 = newarray (com.opengamma.util.tuple.Pair)[$i1];

        i4 = 0;

     label3:
        if i4 > i0 goto label7;

        if i4 != 0 goto label4;

        $r24 = virtualinvoke r0.<com.opengamma.analytics.math.function.special.LaguerrePolynomialFunction: com.opengamma.analytics.math.function.DoubleFunction1D getOne()>();

        $r25 = virtualinvoke r0.<com.opengamma.analytics.math.function.special.LaguerrePolynomialFunction: com.opengamma.analytics.math.function.DoubleFunction1D getZero()>();

        $r26 = staticinvoke <com.opengamma.util.tuple.Pairs: com.opengamma.util.tuple.Pair of(java.lang.Object,java.lang.Object)>($r24, $r25);

        r1[i4] = $r26;

        goto label6;

     label4:
        if i4 != 1 goto label5;

        $r22 = <com.opengamma.analytics.math.function.special.LaguerrePolynomialFunction: com.opengamma.analytics.math.function.DoubleFunction1D F1>;

        $r21 = <com.opengamma.analytics.math.function.special.LaguerrePolynomialFunction: com.opengamma.analytics.math.function.DoubleFunction1D DF1>;

        $r23 = staticinvoke <com.opengamma.util.tuple.Pairs: com.opengamma.util.tuple.Pair of(java.lang.Object,java.lang.Object)>($r22, $r21);

        r1[i4] = $r23;

        goto label6;

     label5:
        $i2 = i4 - 1;

        $r6 = r1[$i2];

        $r7 = virtualinvoke $r6.<com.opengamma.util.tuple.Pair: java.lang.Object getFirst()>();

        r4 = (com.opengamma.analytics.math.function.DoubleFunction1D) $r7;

        $i3 = i4 - 2;

        $r8 = r1[$i3];

        $r9 = virtualinvoke $r8.<com.opengamma.util.tuple.Pair: java.lang.Object getFirst()>();

        r5 = (com.opengamma.analytics.math.function.DoubleFunction1D) $r9;

        $d1 = (double) i4;

        $d2 = 2.0 * $d1;

        $d3 = $d2 + d0;

        $d4 = $d3 - 1.0;

        $r10 = virtualinvoke r4.<com.opengamma.analytics.math.function.DoubleFunction1D: com.opengamma.analytics.math.function.DoubleFunction1D multiply(double)>($d4);

        $r11 = virtualinvoke r0.<com.opengamma.analytics.math.function.special.LaguerrePolynomialFunction: com.opengamma.analytics.math.function.DoubleFunction1D getX()>();

        $r12 = virtualinvoke r4.<com.opengamma.analytics.math.function.DoubleFunction1D: com.opengamma.analytics.math.function.DoubleFunction1D multiply(com.opengamma.analytics.math.function.DoubleFunction1D)>($r11);

        $r13 = virtualinvoke $r10.<com.opengamma.analytics.math.function.DoubleFunction1D: com.opengamma.analytics.math.function.DoubleFunction1D subtract(com.opengamma.analytics.math.function.DoubleFunction1D)>($r12);

        $d5 = (double) i4;

        $d6 = $d5 - 1.0;

        $d7 = $d6 + d0;

        $r14 = virtualinvoke r5.<com.opengamma.analytics.math.function.DoubleFunction1D: com.opengamma.analytics.math.function.DoubleFunction1D multiply(double)>($d7);

        $r15 = virtualinvoke $r13.<com.opengamma.analytics.math.function.DoubleFunction1D: com.opengamma.analytics.math.function.DoubleFunction1D subtract(com.opengamma.analytics.math.function.DoubleFunction1D)>($r14);

        $d8 = (double) i4;

        r2 = virtualinvoke $r15.<com.opengamma.analytics.math.function.DoubleFunction1D: com.opengamma.analytics.math.function.DoubleFunction1D divide(double)>($d8);

        $d9 = (double) i4;

        $r16 = virtualinvoke r2.<com.opengamma.analytics.math.function.DoubleFunction1D: com.opengamma.analytics.math.function.DoubleFunction1D multiply(double)>($d9);

        $d10 = (double) i4;

        $d11 = $d10 + d0;

        $r17 = virtualinvoke r4.<com.opengamma.analytics.math.function.DoubleFunction1D: com.opengamma.analytics.math.function.DoubleFunction1D multiply(double)>($d11);

        $r18 = virtualinvoke $r16.<com.opengamma.analytics.math.function.DoubleFunction1D: com.opengamma.analytics.math.function.DoubleFunction1D subtract(com.opengamma.analytics.math.function.DoubleFunction1D)>($r17);

        $r19 = virtualinvoke r0.<com.opengamma.analytics.math.function.special.LaguerrePolynomialFunction: com.opengamma.analytics.math.function.DoubleFunction1D getX()>();

        r3 = virtualinvoke $r18.<com.opengamma.analytics.math.function.DoubleFunction1D: com.opengamma.analytics.math.function.DoubleFunction1D divide(com.opengamma.analytics.math.function.DoubleFunction1D)>($r19);

        $r20 = staticinvoke <com.opengamma.util.tuple.Pairs: com.opengamma.util.tuple.Pair of(java.lang.Object,java.lang.Object)>(r2, r3);

        r1[i4] = $r20;

     label6:
        i4 = i4 + 1;

        goto label3;

     label7:
        return r1;
    }

    static void <clinit>()
    {
        com.opengamma.analytics.math.function.RealPolynomialFunction1D $r0, $r2;
        double[] $r1, $r3;

        $r0 = new com.opengamma.analytics.math.function.RealPolynomialFunction1D;

        $r1 = newarray (double)[2];

        $r1[0] = 1.0;

        $r1[1] = -1.0;

        specialinvoke $r0.<com.opengamma.analytics.math.function.RealPolynomialFunction1D: void <init>(double[])>($r1);

        <com.opengamma.analytics.math.function.special.LaguerrePolynomialFunction: com.opengamma.analytics.math.function.DoubleFunction1D F1> = $r0;

        $r2 = new com.opengamma.analytics.math.function.RealPolynomialFunction1D;

        $r3 = newarray (double)[1];

        $r3[0] = -1.0;

        specialinvoke $r2.<com.opengamma.analytics.math.function.RealPolynomialFunction1D: void <init>(double[])>($r3);

        <com.opengamma.analytics.math.function.special.LaguerrePolynomialFunction: com.opengamma.analytics.math.function.DoubleFunction1D DF1> = $r2;

        return;
    }
}
