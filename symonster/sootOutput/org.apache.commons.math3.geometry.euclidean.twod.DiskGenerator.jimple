public class org.apache.commons.math3.geometry.euclidean.twod.DiskGenerator extends java.lang.Object implements org.apache.commons.math3.geometry.enclosing.SupportBallGenerator
{

    public void <init>()
    {
        org.apache.commons.math3.geometry.euclidean.twod.DiskGenerator r0;

        r0 := @this: org.apache.commons.math3.geometry.euclidean.twod.DiskGenerator;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public org.apache.commons.math3.geometry.enclosing.EnclosingBall ballOnSupport(java.util.List)
    {
        org.apache.commons.math3.geometry.euclidean.twod.DiskGenerator r0;
        java.util.List r1;
        org.apache.commons.math3.geometry.euclidean.twod.Vector2D r2, r3, r4, $r56, $r59, $r65;
        org.apache.commons.math3.fraction.BigFraction r8, r9, r10, r11, r12, r13, r14, r15, $r20, $r21, $r22, $r24, $r25, $r26, $r28, $r29, $r30, $r31, $r32, $r33, $r34, $r35, $r36, $r37, $r38, $r39, $r40, $r41, $r42, $r43, $r44, $r45, $r46, $r47, $r48, $r49, $r50, $r51, $r52, $r53, $r54;
        int $i0, $i1, $i2;
        java.lang.Object $r16, $r17, $r18;
        org.apache.commons.math3.fraction.BigFraction[] $r19, $r23, $r27;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11;
        org.apache.commons.math3.geometry.enclosing.EnclosingBall $r55, $r58, $r61, $r63;
        org.apache.commons.math3.geometry.euclidean.twod.Vector2D[] $r57, $r60, $r62, $r64;

        r0 := @this: org.apache.commons.math3.geometry.euclidean.twod.DiskGenerator;

        r1 := @parameter0: java.util.List;

        $i0 = interfaceinvoke r1.<java.util.List: int size()>();

        if $i0 >= 1 goto label1;

        $r63 = new org.apache.commons.math3.geometry.enclosing.EnclosingBall;

        $r65 = <org.apache.commons.math3.geometry.euclidean.twod.Vector2D: org.apache.commons.math3.geometry.euclidean.twod.Vector2D ZERO>;

        $r64 = newarray (org.apache.commons.math3.geometry.euclidean.twod.Vector2D)[0];

        specialinvoke $r63.<org.apache.commons.math3.geometry.enclosing.EnclosingBall: void <init>(org.apache.commons.math3.geometry.Point,double,org.apache.commons.math3.geometry.Point[])>($r65, #-Infinity, $r64);

        return $r63;

     label1:
        $r16 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(0);

        r2 = (org.apache.commons.math3.geometry.euclidean.twod.Vector2D) $r16;

        $i1 = interfaceinvoke r1.<java.util.List: int size()>();

        if $i1 >= 2 goto label2;

        $r61 = new org.apache.commons.math3.geometry.enclosing.EnclosingBall;

        $r62 = newarray (org.apache.commons.math3.geometry.euclidean.twod.Vector2D)[1];

        $r62[0] = r2;

        specialinvoke $r61.<org.apache.commons.math3.geometry.enclosing.EnclosingBall: void <init>(org.apache.commons.math3.geometry.Point,double,org.apache.commons.math3.geometry.Point[])>(r2, 0.0, $r62);

        return $r61;

     label2:
        $r17 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(1);

        r3 = (org.apache.commons.math3.geometry.euclidean.twod.Vector2D) $r17;

        $i2 = interfaceinvoke r1.<java.util.List: int size()>();

        if $i2 >= 3 goto label3;

        $r58 = new org.apache.commons.math3.geometry.enclosing.EnclosingBall;

        $r59 = new org.apache.commons.math3.geometry.euclidean.twod.Vector2D;

        specialinvoke $r59.<org.apache.commons.math3.geometry.euclidean.twod.Vector2D: void <init>(double,org.apache.commons.math3.geometry.euclidean.twod.Vector2D,double,org.apache.commons.math3.geometry.euclidean.twod.Vector2D)>(0.5, r2, 0.5, r3);

        $d10 = virtualinvoke r2.<org.apache.commons.math3.geometry.euclidean.twod.Vector2D: double distance(org.apache.commons.math3.geometry.Vector)>(r3);

        $d11 = 0.5 * $d10;

        $r60 = newarray (org.apache.commons.math3.geometry.euclidean.twod.Vector2D)[2];

        $r60[0] = r2;

        $r60[1] = r3;

        specialinvoke $r58.<org.apache.commons.math3.geometry.enclosing.EnclosingBall: void <init>(org.apache.commons.math3.geometry.Point,double,org.apache.commons.math3.geometry.Point[])>($r59, $d11, $r60);

        return $r58;

     label3:
        $r18 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(2);

        r4 = (org.apache.commons.math3.geometry.euclidean.twod.Vector2D) $r18;

        $r19 = newarray (org.apache.commons.math3.fraction.BigFraction)[3];

        $r20 = new org.apache.commons.math3.fraction.BigFraction;

        $d0 = virtualinvoke r2.<org.apache.commons.math3.geometry.euclidean.twod.Vector2D: double getX()>();

        specialinvoke $r20.<org.apache.commons.math3.fraction.BigFraction: void <init>(double)>($d0);

        $r19[0] = $r20;

        $r21 = new org.apache.commons.math3.fraction.BigFraction;

        $d1 = virtualinvoke r3.<org.apache.commons.math3.geometry.euclidean.twod.Vector2D: double getX()>();

        specialinvoke $r21.<org.apache.commons.math3.fraction.BigFraction: void <init>(double)>($d1);

        $r19[1] = $r21;

        $r22 = new org.apache.commons.math3.fraction.BigFraction;

        $d2 = virtualinvoke r4.<org.apache.commons.math3.geometry.euclidean.twod.Vector2D: double getX()>();

        specialinvoke $r22.<org.apache.commons.math3.fraction.BigFraction: void <init>(double)>($d2);

        $r19[2] = $r22;

        $r23 = newarray (org.apache.commons.math3.fraction.BigFraction)[3];

        $r24 = new org.apache.commons.math3.fraction.BigFraction;

        $d3 = virtualinvoke r2.<org.apache.commons.math3.geometry.euclidean.twod.Vector2D: double getY()>();

        specialinvoke $r24.<org.apache.commons.math3.fraction.BigFraction: void <init>(double)>($d3);

        $r23[0] = $r24;

        $r25 = new org.apache.commons.math3.fraction.BigFraction;

        $d4 = virtualinvoke r3.<org.apache.commons.math3.geometry.euclidean.twod.Vector2D: double getY()>();

        specialinvoke $r25.<org.apache.commons.math3.fraction.BigFraction: void <init>(double)>($d4);

        $r23[1] = $r25;

        $r26 = new org.apache.commons.math3.fraction.BigFraction;

        $d5 = virtualinvoke r4.<org.apache.commons.math3.geometry.euclidean.twod.Vector2D: double getY()>();

        specialinvoke $r26.<org.apache.commons.math3.fraction.BigFraction: void <init>(double)>($d5);

        $r23[2] = $r26;

        $r27 = newarray (org.apache.commons.math3.fraction.BigFraction)[3];

        $r29 = $r19[0];

        $r28 = $r19[0];

        $r30 = virtualinvoke $r29.<org.apache.commons.math3.fraction.BigFraction: org.apache.commons.math3.fraction.BigFraction multiply(org.apache.commons.math3.fraction.BigFraction)>($r28);

        $r32 = $r23[0];

        $r31 = $r23[0];

        $r33 = virtualinvoke $r32.<org.apache.commons.math3.fraction.BigFraction: org.apache.commons.math3.fraction.BigFraction multiply(org.apache.commons.math3.fraction.BigFraction)>($r31);

        $r34 = virtualinvoke $r30.<org.apache.commons.math3.fraction.BigFraction: org.apache.commons.math3.fraction.BigFraction add(org.apache.commons.math3.fraction.BigFraction)>($r33);

        $r27[0] = $r34;

        $r36 = $r19[1];

        $r35 = $r19[1];

        $r37 = virtualinvoke $r36.<org.apache.commons.math3.fraction.BigFraction: org.apache.commons.math3.fraction.BigFraction multiply(org.apache.commons.math3.fraction.BigFraction)>($r35);

        $r39 = $r23[1];

        $r38 = $r23[1];

        $r40 = virtualinvoke $r39.<org.apache.commons.math3.fraction.BigFraction: org.apache.commons.math3.fraction.BigFraction multiply(org.apache.commons.math3.fraction.BigFraction)>($r38);

        $r41 = virtualinvoke $r37.<org.apache.commons.math3.fraction.BigFraction: org.apache.commons.math3.fraction.BigFraction add(org.apache.commons.math3.fraction.BigFraction)>($r40);

        $r27[1] = $r41;

        $r43 = $r19[2];

        $r42 = $r19[2];

        $r44 = virtualinvoke $r43.<org.apache.commons.math3.fraction.BigFraction: org.apache.commons.math3.fraction.BigFraction multiply(org.apache.commons.math3.fraction.BigFraction)>($r42);

        $r46 = $r23[2];

        $r45 = $r23[2];

        $r47 = virtualinvoke $r46.<org.apache.commons.math3.fraction.BigFraction: org.apache.commons.math3.fraction.BigFraction multiply(org.apache.commons.math3.fraction.BigFraction)>($r45);

        $r48 = virtualinvoke $r44.<org.apache.commons.math3.fraction.BigFraction: org.apache.commons.math3.fraction.BigFraction add(org.apache.commons.math3.fraction.BigFraction)>($r47);

        $r27[2] = $r48;

        $r49 = specialinvoke r0.<org.apache.commons.math3.geometry.euclidean.twod.DiskGenerator: org.apache.commons.math3.fraction.BigFraction minor(org.apache.commons.math3.fraction.BigFraction[],org.apache.commons.math3.fraction.BigFraction[])>($r19, $r23);

        r8 = virtualinvoke $r49.<org.apache.commons.math3.fraction.BigFraction: org.apache.commons.math3.fraction.BigFraction multiply(int)>(2);

        r9 = specialinvoke r0.<org.apache.commons.math3.geometry.euclidean.twod.DiskGenerator: org.apache.commons.math3.fraction.BigFraction minor(org.apache.commons.math3.fraction.BigFraction[],org.apache.commons.math3.fraction.BigFraction[])>($r27, $r23);

        r10 = specialinvoke r0.<org.apache.commons.math3.geometry.euclidean.twod.DiskGenerator: org.apache.commons.math3.fraction.BigFraction minor(org.apache.commons.math3.fraction.BigFraction[],org.apache.commons.math3.fraction.BigFraction[])>($r27, $r19);

        r11 = virtualinvoke r9.<org.apache.commons.math3.fraction.BigFraction: org.apache.commons.math3.fraction.BigFraction divide(org.apache.commons.math3.fraction.BigFraction)>(r8);

        $r50 = virtualinvoke r10.<org.apache.commons.math3.fraction.BigFraction: org.apache.commons.math3.fraction.BigFraction divide(org.apache.commons.math3.fraction.BigFraction)>(r8);

        r12 = virtualinvoke $r50.<org.apache.commons.math3.fraction.BigFraction: org.apache.commons.math3.fraction.BigFraction negate()>();

        $r51 = $r19[0];

        r13 = virtualinvoke $r51.<org.apache.commons.math3.fraction.BigFraction: org.apache.commons.math3.fraction.BigFraction subtract(org.apache.commons.math3.fraction.BigFraction)>(r11);

        $r52 = $r23[0];

        r14 = virtualinvoke $r52.<org.apache.commons.math3.fraction.BigFraction: org.apache.commons.math3.fraction.BigFraction subtract(org.apache.commons.math3.fraction.BigFraction)>(r12);

        $r53 = virtualinvoke r13.<org.apache.commons.math3.fraction.BigFraction: org.apache.commons.math3.fraction.BigFraction multiply(org.apache.commons.math3.fraction.BigFraction)>(r13);

        $r54 = virtualinvoke r14.<org.apache.commons.math3.fraction.BigFraction: org.apache.commons.math3.fraction.BigFraction multiply(org.apache.commons.math3.fraction.BigFraction)>(r14);

        r15 = virtualinvoke $r53.<org.apache.commons.math3.fraction.BigFraction: org.apache.commons.math3.fraction.BigFraction add(org.apache.commons.math3.fraction.BigFraction)>($r54);

        $r55 = new org.apache.commons.math3.geometry.enclosing.EnclosingBall;

        $r56 = new org.apache.commons.math3.geometry.euclidean.twod.Vector2D;

        $d6 = virtualinvoke r11.<org.apache.commons.math3.fraction.BigFraction: double doubleValue()>();

        $d7 = virtualinvoke r12.<org.apache.commons.math3.fraction.BigFraction: double doubleValue()>();

        specialinvoke $r56.<org.apache.commons.math3.geometry.euclidean.twod.Vector2D: void <init>(double,double)>($d6, $d7);

        $d8 = virtualinvoke r15.<org.apache.commons.math3.fraction.BigFraction: double doubleValue()>();

        $d9 = staticinvoke <org.apache.commons.math3.util.FastMath: double sqrt(double)>($d8);

        $r57 = newarray (org.apache.commons.math3.geometry.euclidean.twod.Vector2D)[3];

        $r57[0] = r2;

        $r57[1] = r3;

        $r57[2] = r4;

        specialinvoke $r55.<org.apache.commons.math3.geometry.enclosing.EnclosingBall: void <init>(org.apache.commons.math3.geometry.Point,double,org.apache.commons.math3.geometry.Point[])>($r56, $d9, $r57);

        return $r55;
    }

    private org.apache.commons.math3.fraction.BigFraction minor(org.apache.commons.math3.fraction.BigFraction[], org.apache.commons.math3.fraction.BigFraction[])
    {
        org.apache.commons.math3.geometry.euclidean.twod.DiskGenerator r0;
        org.apache.commons.math3.fraction.BigFraction[] r1, r2;
        org.apache.commons.math3.fraction.BigFraction $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19;

        r0 := @this: org.apache.commons.math3.geometry.euclidean.twod.DiskGenerator;

        r1 := @parameter0: org.apache.commons.math3.fraction.BigFraction[];

        r2 := @parameter1: org.apache.commons.math3.fraction.BigFraction[];

        $r5 = r2[0];

        $r4 = r1[2];

        $r3 = r1[1];

        $r6 = virtualinvoke $r4.<org.apache.commons.math3.fraction.BigFraction: org.apache.commons.math3.fraction.BigFraction subtract(org.apache.commons.math3.fraction.BigFraction)>($r3);

        $r7 = virtualinvoke $r5.<org.apache.commons.math3.fraction.BigFraction: org.apache.commons.math3.fraction.BigFraction multiply(org.apache.commons.math3.fraction.BigFraction)>($r6);

        $r10 = r2[1];

        $r9 = r1[0];

        $r8 = r1[2];

        $r11 = virtualinvoke $r9.<org.apache.commons.math3.fraction.BigFraction: org.apache.commons.math3.fraction.BigFraction subtract(org.apache.commons.math3.fraction.BigFraction)>($r8);

        $r12 = virtualinvoke $r10.<org.apache.commons.math3.fraction.BigFraction: org.apache.commons.math3.fraction.BigFraction multiply(org.apache.commons.math3.fraction.BigFraction)>($r11);

        $r13 = virtualinvoke $r7.<org.apache.commons.math3.fraction.BigFraction: org.apache.commons.math3.fraction.BigFraction add(org.apache.commons.math3.fraction.BigFraction)>($r12);

        $r16 = r2[2];

        $r15 = r1[1];

        $r14 = r1[0];

        $r17 = virtualinvoke $r15.<org.apache.commons.math3.fraction.BigFraction: org.apache.commons.math3.fraction.BigFraction subtract(org.apache.commons.math3.fraction.BigFraction)>($r14);

        $r18 = virtualinvoke $r16.<org.apache.commons.math3.fraction.BigFraction: org.apache.commons.math3.fraction.BigFraction multiply(org.apache.commons.math3.fraction.BigFraction)>($r17);

        $r19 = virtualinvoke $r13.<org.apache.commons.math3.fraction.BigFraction: org.apache.commons.math3.fraction.BigFraction add(org.apache.commons.math3.fraction.BigFraction)>($r18);

        return $r19;
    }
}
