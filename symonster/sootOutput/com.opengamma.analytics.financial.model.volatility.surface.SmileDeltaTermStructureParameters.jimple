public class com.opengamma.analytics.financial.model.volatility.surface.SmileDeltaTermStructureParameters extends java.lang.Object implements com.opengamma.analytics.financial.model.volatility.VolatilityAndBucketedSensitivitiesModel
{
    private final double[] _timeToExpiration;
    private final com.opengamma.analytics.financial.model.option.definition.SmileDeltaParameters[] _volatilityTerm;
    private final com.opengamma.analytics.math.interpolation.Interpolator1D _timeInterpolator;
    private static final com.opengamma.analytics.math.interpolation.Interpolator1D DEFAULT_INTERPOLATOR_EXPIRY;

    public void <init>(com.opengamma.analytics.financial.model.option.definition.SmileDeltaParameters[])
    {
        com.opengamma.analytics.financial.model.volatility.surface.SmileDeltaTermStructureParameters r0;
        com.opengamma.analytics.financial.model.option.definition.SmileDeltaParameters[] r1;
        com.opengamma.analytics.math.interpolation.Interpolator1D $r2;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.surface.SmileDeltaTermStructureParameters;

        r1 := @parameter0: com.opengamma.analytics.financial.model.option.definition.SmileDeltaParameters[];

        $r2 = <com.opengamma.analytics.financial.model.volatility.surface.SmileDeltaTermStructureParameters: com.opengamma.analytics.math.interpolation.Interpolator1D DEFAULT_INTERPOLATOR_EXPIRY>;

        specialinvoke r0.<com.opengamma.analytics.financial.model.volatility.surface.SmileDeltaTermStructureParameters: void <init>(com.opengamma.analytics.financial.model.option.definition.SmileDeltaParameters[],com.opengamma.analytics.math.interpolation.Interpolator1D)>(r1, $r2);

        return;
    }

    public void <init>(com.opengamma.analytics.financial.model.option.definition.SmileDeltaParameters[], com.opengamma.analytics.math.interpolation.Interpolator1D)
    {
        com.opengamma.analytics.financial.model.volatility.surface.SmileDeltaTermStructureParameters r0;
        com.opengamma.analytics.financial.model.option.definition.SmileDeltaParameters[] r1, $r6;
        com.opengamma.analytics.math.interpolation.Interpolator1D r2;
        int i0, i1;
        double[] $r5, $r8;
        com.opengamma.analytics.financial.model.option.definition.SmileDeltaParameters $r7;
        double $d0;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.surface.SmileDeltaTermStructureParameters;

        r1 := @parameter0: com.opengamma.analytics.financial.model.option.definition.SmileDeltaParameters[];

        r2 := @parameter1: com.opengamma.analytics.math.interpolation.Interpolator1D;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "Volatility term structure");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, "interpolator");

        r0.<com.opengamma.analytics.financial.model.volatility.surface.SmileDeltaTermStructureParameters: com.opengamma.analytics.financial.model.option.definition.SmileDeltaParameters[] _volatilityTerm> = r1;

        i0 = lengthof r1;

        $r5 = newarray (double)[i0];

        r0.<com.opengamma.analytics.financial.model.volatility.surface.SmileDeltaTermStructureParameters: double[] _timeToExpiration> = $r5;

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        $r8 = r0.<com.opengamma.analytics.financial.model.volatility.surface.SmileDeltaTermStructureParameters: double[] _timeToExpiration>;

        $r6 = r0.<com.opengamma.analytics.financial.model.volatility.surface.SmileDeltaTermStructureParameters: com.opengamma.analytics.financial.model.option.definition.SmileDeltaParameters[] _volatilityTerm>;

        $r7 = $r6[i1];

        $d0 = virtualinvoke $r7.<com.opengamma.analytics.financial.model.option.definition.SmileDeltaParameters: double getTimeToExpiry()>();

        $r8[i1] = $d0;

        i1 = i1 + 1;

        goto label1;

     label2:
        r0.<com.opengamma.analytics.financial.model.volatility.surface.SmileDeltaTermStructureParameters: com.opengamma.analytics.math.interpolation.Interpolator1D _timeInterpolator> = r2;

        return;
    }

    public void <init>(double[], double[], double[][])
    {
        com.opengamma.analytics.financial.model.volatility.surface.SmileDeltaTermStructureParameters r0;
        double[] r1, r2, $r10, $r12, $r19, $r21;
        double[][] r3;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, i12;
        java.lang.Object[] $r7, $r11;
        java.lang.Integer $r8, $r9, $r13, $r14;
        com.opengamma.analytics.financial.model.option.definition.SmileDeltaParameters[] $r15, $r17, $r22;
        com.opengamma.analytics.math.interpolation.Interpolator1D $r16;
        com.opengamma.analytics.financial.model.option.definition.SmileDeltaParameters $r18, $r20;
        double $d0;
        boolean $z0, $z1, $z2;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.surface.SmileDeltaTermStructureParameters;

        r1 := @parameter0: double[];

        r2 := @parameter1: double[];

        r3 := @parameter2: double[][];

        specialinvoke r0.<java.lang.Object: void <init>()>();

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "time to expiry");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, "delta");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r3, "volatility");

        i0 = lengthof r1;

        $i1 = lengthof r3;

        if $i1 != i0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        $r7 = newarray (java.lang.Object)[2];

        $i2 = lengthof r3;

        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        $r7[0] = $r8;

        $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r7[1] = $r9;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String,java.lang.Object[])>($z0, "Volatility array length {} should be equal to the number of expiries {}", $r7);

        $r10 = r3[0];

        $i6 = lengthof $r10;

        $i3 = lengthof r2;

        $i4 = 2 * $i3;

        $i5 = $i4 + 1;

        if $i6 != $i5 goto label3;

        $z1 = 1;

        goto label4;

     label3:
        $z1 = 0;

     label4:
        $r11 = newarray (java.lang.Object)[2];

        $r12 = r3[0];

        $i7 = lengthof $r12;

        $r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i7);

        $r11[0] = $r13;

        $i8 = lengthof r2;

        $i9 = 2 * $i8;

        $i10 = $i9 + 1;

        $r14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i10);

        $r11[1] = $r14;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String,java.lang.Object[])>($z1, "Volatility array {} should be equal to (2 * number of deltas) + 1, have {}", $r11);

        r0.<com.opengamma.analytics.financial.model.volatility.surface.SmileDeltaTermStructureParameters: double[] _timeToExpiration> = r1;

        $r15 = newarray (com.opengamma.analytics.financial.model.option.definition.SmileDeltaParameters)[i0];

        r0.<com.opengamma.analytics.financial.model.volatility.surface.SmileDeltaTermStructureParameters: com.opengamma.analytics.financial.model.option.definition.SmileDeltaParameters[] _volatilityTerm> = $r15;

        i12 = 0;

     label5:
        if i12 >= i0 goto label6;

        $r22 = r0.<com.opengamma.analytics.financial.model.volatility.surface.SmileDeltaTermStructureParameters: com.opengamma.analytics.financial.model.option.definition.SmileDeltaParameters[] _volatilityTerm>;

        $r20 = new com.opengamma.analytics.financial.model.option.definition.SmileDeltaParameters;

        $d0 = r1[i12];

        $r21 = r3[i12];

        specialinvoke $r20.<com.opengamma.analytics.financial.model.option.definition.SmileDeltaParameters: void <init>(double,double[],double[])>($d0, r2, $r21);

        $r22[i12] = $r20;

        i12 = i12 + 1;

        goto label5;

     label6:
        $r16 = <com.opengamma.analytics.financial.model.volatility.surface.SmileDeltaTermStructureParameters: com.opengamma.analytics.math.interpolation.Interpolator1D DEFAULT_INTERPOLATOR_EXPIRY>;

        r0.<com.opengamma.analytics.financial.model.volatility.surface.SmileDeltaTermStructureParameters: com.opengamma.analytics.math.interpolation.Interpolator1D _timeInterpolator> = $r16;

        $r17 = r0.<com.opengamma.analytics.financial.model.volatility.surface.SmileDeltaTermStructureParameters: com.opengamma.analytics.financial.model.option.definition.SmileDeltaParameters[] _volatilityTerm>;

        $r18 = $r17[0];

        $r19 = virtualinvoke $r18.<com.opengamma.analytics.financial.model.option.definition.SmileDeltaParameters: double[] getVolatility()>();

        $i11 = lengthof $r19;

        if $i11 <= 1 goto label7;

        $z2 = 1;

        goto label8;

     label7:
        $z2 = 0;

     label8:
        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z2, "Need more than one volatility value to perform interpolation");

        return;
    }

    public void <init>(double[], double[], double[], double[][], double[][])
    {
        com.opengamma.analytics.financial.model.volatility.surface.SmileDeltaTermStructureParameters r0;
        double[] r1, r2, r3;
        double[][] r4, r5;
        com.opengamma.analytics.math.interpolation.Interpolator1D $r6;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.surface.SmileDeltaTermStructureParameters;

        r1 := @parameter0: double[];

        r2 := @parameter1: double[];

        r3 := @parameter2: double[];

        r4 := @parameter3: double[][];

        r5 := @parameter4: double[][];

        $r6 = <com.opengamma.analytics.financial.model.volatility.surface.SmileDeltaTermStructureParameters: com.opengamma.analytics.math.interpolation.Interpolator1D DEFAULT_INTERPOLATOR_EXPIRY>;

        specialinvoke r0.<com.opengamma.analytics.financial.model.volatility.surface.SmileDeltaTermStructureParameters: void <init>(double[],double[],double[],double[][],double[][],com.opengamma.analytics.math.interpolation.Interpolator1D)>(r1, r2, r3, r4, r5, $r6);

        return;
    }

    public void <init>(double[], double[], double[], double[][], double[][], com.opengamma.analytics.math.interpolation.Interpolator1D)
    {
        com.opengamma.analytics.financial.model.volatility.surface.SmileDeltaTermStructureParameters r0;
        double[] r1, r2, r3, $r13, $r14, $r18, $r20, $r21;
        double[][] r4, r5;
        com.opengamma.analytics.math.interpolation.Interpolator1D r6;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, i9;
        com.opengamma.analytics.financial.model.option.definition.SmileDeltaParameters[] $r15, $r16, $r22;
        com.opengamma.analytics.financial.model.option.definition.SmileDeltaParameters $r17, $r19;
        double $d0, $d1;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.surface.SmileDeltaTermStructureParameters;

        r1 := @parameter0: double[];

        r2 := @parameter1: double[];

        r3 := @parameter2: double[];

        r4 := @parameter3: double[][];

        r5 := @parameter4: double[][];

        r6 := @parameter5: com.opengamma.analytics.math.interpolation.Interpolator1D;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "time to expiry");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, "delta");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r3, "ATM");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r4, "risk reversal");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r5, "strangle");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r6, "time interpolator");

        i0 = lengthof r1;

        $i1 = lengthof r3;

        if $i1 != i0 goto label01;

        $z0 = 1;

        goto label02;

     label01:
        $z0 = 0;

     label02:
        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z0, "ATM length should be coherent with time to expiration length");

        $i2 = lengthof r4;

        if $i2 != i0 goto label03;

        $z1 = 1;

        goto label04;

     label03:
        $z1 = 0;

     label04:
        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z1, "Risk reversal length should be coherent with time to expiration length");

        $i3 = lengthof r5;

        if $i3 != i0 goto label05;

        $z2 = 1;

        goto label06;

     label05:
        $z2 = 0;

     label06:
        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z2, "Risk reversal length should be coherent with time to expiration length");

        $r13 = r4[0];

        $i5 = lengthof $r13;

        $i4 = lengthof r2;

        if $i5 != $i4 goto label07;

        $z3 = 1;

        goto label08;

     label07:
        $z3 = 0;

     label08:
        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z3, "Risk reversal size should be coherent with time to delta length");

        $r14 = r5[0];

        $i7 = lengthof $r14;

        $i6 = lengthof r2;

        if $i7 != $i6 goto label09;

        $z4 = 1;

        goto label10;

     label09:
        $z4 = 0;

     label10:
        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z4, "Risk reversal size should be coherent with time to delta length");

        r0.<com.opengamma.analytics.financial.model.volatility.surface.SmileDeltaTermStructureParameters: double[] _timeToExpiration> = r1;

        $r15 = newarray (com.opengamma.analytics.financial.model.option.definition.SmileDeltaParameters)[i0];

        r0.<com.opengamma.analytics.financial.model.volatility.surface.SmileDeltaTermStructureParameters: com.opengamma.analytics.financial.model.option.definition.SmileDeltaParameters[] _volatilityTerm> = $r15;

        i9 = 0;

     label11:
        if i9 >= i0 goto label12;

        $r22 = r0.<com.opengamma.analytics.financial.model.volatility.surface.SmileDeltaTermStructureParameters: com.opengamma.analytics.financial.model.option.definition.SmileDeltaParameters[] _volatilityTerm>;

        $r19 = new com.opengamma.analytics.financial.model.option.definition.SmileDeltaParameters;

        $d1 = r1[i9];

        $d0 = r3[i9];

        $r21 = r4[i9];

        $r20 = r5[i9];

        specialinvoke $r19.<com.opengamma.analytics.financial.model.option.definition.SmileDeltaParameters: void <init>(double,double,double[],double[],double[])>($d1, $d0, r2, $r21, $r20);

        $r22[i9] = $r19;

        i9 = i9 + 1;

        goto label11;

     label12:
        r0.<com.opengamma.analytics.financial.model.volatility.surface.SmileDeltaTermStructureParameters: com.opengamma.analytics.math.interpolation.Interpolator1D _timeInterpolator> = r6;

        $r16 = r0.<com.opengamma.analytics.financial.model.volatility.surface.SmileDeltaTermStructureParameters: com.opengamma.analytics.financial.model.option.definition.SmileDeltaParameters[] _volatilityTerm>;

        $r17 = $r16[0];

        $r18 = virtualinvoke $r17.<com.opengamma.analytics.financial.model.option.definition.SmileDeltaParameters: double[] getVolatility()>();

        $i8 = lengthof $r18;

        if $i8 <= 1 goto label13;

        $z5 = 1;

        goto label14;

     label13:
        $z5 = 0;

     label14:
        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z5, "Need more than one volatility value to perform interpolation");

        return;
    }

    public com.opengamma.analytics.financial.model.volatility.surface.SmileDeltaTermStructureParameters copy()
    {
        com.opengamma.analytics.financial.model.volatility.surface.SmileDeltaTermStructureParameters r0, $r1;
        com.opengamma.analytics.financial.model.option.definition.SmileDeltaParameters[] $r2;
        com.opengamma.analytics.math.interpolation.Interpolator1D $r3;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.surface.SmileDeltaTermStructureParameters;

        $r1 = new com.opengamma.analytics.financial.model.volatility.surface.SmileDeltaTermStructureParameters;

        $r2 = virtualinvoke r0.<com.opengamma.analytics.financial.model.volatility.surface.SmileDeltaTermStructureParameters: com.opengamma.analytics.financial.model.option.definition.SmileDeltaParameters[] getVolatilityTerm()>();

        $r3 = virtualinvoke r0.<com.opengamma.analytics.financial.model.volatility.surface.SmileDeltaTermStructureParameters: com.opengamma.analytics.math.interpolation.Interpolator1D getTimeInterpolator()>();

        specialinvoke $r1.<com.opengamma.analytics.financial.model.volatility.surface.SmileDeltaTermStructureParameters: void <init>(com.opengamma.analytics.financial.model.option.definition.SmileDeltaParameters[],com.opengamma.analytics.math.interpolation.Interpolator1D)>($r2, $r3);

        return $r1;
    }

    public com.opengamma.analytics.financial.model.option.definition.SmileDeltaParameters getSmileForTime(double)
    {
        com.opengamma.analytics.financial.model.volatility.surface.SmileDeltaTermStructureParameters r0;
        double d0, $d1, $d2;
        int i0, i1, i2, i3;
        double[] r1, r2, $r5, $r6, $r10, $r12, $r18;
        com.opengamma.analytics.financial.model.option.definition.SmileDeltaParameters[] $r3, $r8, $r16;
        com.opengamma.analytics.financial.model.option.definition.SmileDeltaParameters $r4, $r7, $r9, $r17;
        com.opengamma.analytics.math.interpolation.data.ArrayInterpolator1DDataBundle $r11;
        com.opengamma.analytics.math.interpolation.Interpolator1D $r13;
        java.lang.Double $r14, $r15;
        boolean $z0;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.surface.SmileDeltaTermStructureParameters;

        d0 := @parameter0: double;

        $r3 = r0.<com.opengamma.analytics.financial.model.volatility.surface.SmileDeltaTermStructureParameters: com.opengamma.analytics.financial.model.option.definition.SmileDeltaParameters[] _volatilityTerm>;

        $r4 = $r3[0];

        $r5 = virtualinvoke $r4.<com.opengamma.analytics.financial.model.option.definition.SmileDeltaParameters: double[] getVolatility()>();

        i0 = lengthof $r5;

        $r6 = r0.<com.opengamma.analytics.financial.model.volatility.surface.SmileDeltaTermStructureParameters: double[] _timeToExpiration>;

        i1 = lengthof $r6;

        if i1 <= 1 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z0, "Need more than one time value to perform interpolation");

        r1 = newarray (double)[i0];

        i2 = 0;

     label3:
        if i2 >= i0 goto label6;

        r2 = newarray (double)[i1];

        i3 = 0;

     label4:
        if i3 >= i1 goto label5;

        $r16 = r0.<com.opengamma.analytics.financial.model.volatility.surface.SmileDeltaTermStructureParameters: com.opengamma.analytics.financial.model.option.definition.SmileDeltaParameters[] _volatilityTerm>;

        $r17 = $r16[i3];

        $r18 = virtualinvoke $r17.<com.opengamma.analytics.financial.model.option.definition.SmileDeltaParameters: double[] getVolatility()>();

        $d2 = $r18[i2];

        r2[i3] = $d2;

        i3 = i3 + 1;

        goto label4;

     label5:
        $r11 = new com.opengamma.analytics.math.interpolation.data.ArrayInterpolator1DDataBundle;

        $r12 = r0.<com.opengamma.analytics.financial.model.volatility.surface.SmileDeltaTermStructureParameters: double[] _timeToExpiration>;

        specialinvoke $r11.<com.opengamma.analytics.math.interpolation.data.ArrayInterpolator1DDataBundle: void <init>(double[],double[],boolean)>($r12, r2, 1);

        $r13 = r0.<com.opengamma.analytics.financial.model.volatility.surface.SmileDeltaTermStructureParameters: com.opengamma.analytics.math.interpolation.Interpolator1D _timeInterpolator>;

        $r14 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d0);

        $r15 = virtualinvoke $r13.<com.opengamma.analytics.math.interpolation.Interpolator1D: java.lang.Double interpolate(com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle,java.lang.Double)>($r11, $r14);

        $d1 = virtualinvoke $r15.<java.lang.Double: double doubleValue()>();

        r1[i2] = $d1;

        i2 = i2 + 1;

        goto label3;

     label6:
        $r7 = new com.opengamma.analytics.financial.model.option.definition.SmileDeltaParameters;

        $r8 = r0.<com.opengamma.analytics.financial.model.volatility.surface.SmileDeltaTermStructureParameters: com.opengamma.analytics.financial.model.option.definition.SmileDeltaParameters[] _volatilityTerm>;

        $r9 = $r8[0];

        $r10 = virtualinvoke $r9.<com.opengamma.analytics.financial.model.option.definition.SmileDeltaParameters: double[] getDelta()>();

        specialinvoke $r7.<com.opengamma.analytics.financial.model.option.definition.SmileDeltaParameters: void <init>(double,double[],double[])>(d0, $r10, r1);

        return $r7;
    }

    public com.opengamma.analytics.financial.model.volatility.SmileAndBucketedSensitivities getSmileAndSensitivitiesForTime(double, double[])
    {
        com.opengamma.analytics.financial.model.volatility.surface.SmileDeltaTermStructureParameters r0;
        double d0, $d1, $d2, $d3, $d4, $d5;
        double[] r1, r2, r4, r5, $r8, $r9, $r13, $r16, $r22, $r25;
        int i0, i1, $i2, i3, i4, i5;
        double[][] r3;
        com.opengamma.analytics.financial.model.option.definition.SmileDeltaParameters[] $r6, $r11, $r23;
        com.opengamma.analytics.financial.model.option.definition.SmileDeltaParameters $r7, $r10, $r12, $r24;
        com.opengamma.analytics.financial.model.volatility.SmileAndBucketedSensitivities $r14;
        com.opengamma.analytics.math.interpolation.data.ArrayInterpolator1DDataBundle $r15;
        com.opengamma.analytics.math.interpolation.Interpolator1D $r17, $r19;
        java.lang.Double $r18, $r20, $r21;
        boolean $z0, $z1, $z2;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.surface.SmileDeltaTermStructureParameters;

        d0 := @parameter0: double;

        r1 := @parameter1: double[];

        $r6 = r0.<com.opengamma.analytics.financial.model.volatility.surface.SmileDeltaTermStructureParameters: com.opengamma.analytics.financial.model.option.definition.SmileDeltaParameters[] _volatilityTerm>;

        $r7 = $r6[0];

        $r8 = virtualinvoke $r7.<com.opengamma.analytics.financial.model.option.definition.SmileDeltaParameters: double[] getVolatility()>();

        i0 = lengthof $r8;

        $i2 = lengthof r1;

        if $i2 != i0 goto label01;

        $z0 = 1;

        goto label02;

     label01:
        $z0 = 0;

     label02:
        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z0, "Sensitivity with incorrect size");

        if i0 <= 1 goto label03;

        $z1 = 1;

        goto label04;

     label03:
        $z1 = 0;

     label04:
        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z1, "Need more than one volatility value to perform interpolation");

        $r9 = r0.<com.opengamma.analytics.financial.model.volatility.surface.SmileDeltaTermStructureParameters: double[] _timeToExpiration>;

        i1 = lengthof $r9;

        if i1 <= 1 goto label05;

        $z2 = 1;

        goto label06;

     label05:
        $z2 = 0;

     label06:
        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z2, "Need more than one time value to perform interpolation");

        r2 = newarray (double)[i0];

        r3 = newmultiarray (double)[i1][i0];

        i3 = 0;

     label07:
        if i3 >= i0 goto label12;

        r4 = newarray (double)[i1];

        i4 = 0;

     label08:
        if i4 >= i1 goto label09;

        $r23 = r0.<com.opengamma.analytics.financial.model.volatility.surface.SmileDeltaTermStructureParameters: com.opengamma.analytics.financial.model.option.definition.SmileDeltaParameters[] _volatilityTerm>;

        $r24 = $r23[i4];

        $r25 = virtualinvoke $r24.<com.opengamma.analytics.financial.model.option.definition.SmileDeltaParameters: double[] getVolatility()>();

        $d5 = $r25[i3];

        r4[i4] = $d5;

        i4 = i4 + 1;

        goto label08;

     label09:
        $r15 = new com.opengamma.analytics.math.interpolation.data.ArrayInterpolator1DDataBundle;

        $r16 = r0.<com.opengamma.analytics.financial.model.volatility.surface.SmileDeltaTermStructureParameters: double[] _timeToExpiration>;

        specialinvoke $r15.<com.opengamma.analytics.math.interpolation.data.ArrayInterpolator1DDataBundle: void <init>(double[],double[],boolean)>($r16, r4, 1);

        $r17 = r0.<com.opengamma.analytics.financial.model.volatility.surface.SmileDeltaTermStructureParameters: com.opengamma.analytics.math.interpolation.Interpolator1D _timeInterpolator>;

        $r18 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d0);

        r5 = virtualinvoke $r17.<com.opengamma.analytics.math.interpolation.Interpolator1D: double[] getNodeSensitivitiesForValue(com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle,java.lang.Double)>($r15, $r18);

        i5 = 0;

     label10:
        if i5 >= i1 goto label11;

        $r22 = r3[i5];

        $d3 = r5[i5];

        $d2 = r1[i3];

        $d4 = $d3 * $d2;

        $r22[i3] = $d4;

        i5 = i5 + 1;

        goto label10;

     label11:
        $r19 = r0.<com.opengamma.analytics.financial.model.volatility.surface.SmileDeltaTermStructureParameters: com.opengamma.analytics.math.interpolation.Interpolator1D _timeInterpolator>;

        $r20 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d0);

        $r21 = virtualinvoke $r19.<com.opengamma.analytics.math.interpolation.Interpolator1D: java.lang.Double interpolate(com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle,java.lang.Double)>($r15, $r20);

        $d1 = virtualinvoke $r21.<java.lang.Double: double doubleValue()>();

        r2[i3] = $d1;

        i3 = i3 + 1;

        goto label07;

     label12:
        $r10 = new com.opengamma.analytics.financial.model.option.definition.SmileDeltaParameters;

        $r11 = r0.<com.opengamma.analytics.financial.model.volatility.surface.SmileDeltaTermStructureParameters: com.opengamma.analytics.financial.model.option.definition.SmileDeltaParameters[] _volatilityTerm>;

        $r12 = $r11[0];

        $r13 = virtualinvoke $r12.<com.opengamma.analytics.financial.model.option.definition.SmileDeltaParameters: double[] getDelta()>();

        specialinvoke $r10.<com.opengamma.analytics.financial.model.option.definition.SmileDeltaParameters: void <init>(double,double[],double[])>(d0, $r13, r2);

        $r14 = new com.opengamma.analytics.financial.model.volatility.SmileAndBucketedSensitivities;

        specialinvoke $r14.<com.opengamma.analytics.financial.model.volatility.SmileAndBucketedSensitivities: void <init>(com.opengamma.analytics.financial.model.option.definition.SmileDeltaParameters,double[][])>($r10, r3);

        return $r14;
    }

    public double[] getTimeToExpiration()
    {
        com.opengamma.analytics.financial.model.volatility.surface.SmileDeltaTermStructureParameters r0;
        double[] $r1;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.surface.SmileDeltaTermStructureParameters;

        $r1 = r0.<com.opengamma.analytics.financial.model.volatility.surface.SmileDeltaTermStructureParameters: double[] _timeToExpiration>;

        return $r1;
    }

    public int getNumberExpiration()
    {
        com.opengamma.analytics.financial.model.volatility.surface.SmileDeltaTermStructureParameters r0;
        double[] $r1;
        int $i0;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.surface.SmileDeltaTermStructureParameters;

        $r1 = r0.<com.opengamma.analytics.financial.model.volatility.surface.SmileDeltaTermStructureParameters: double[] _timeToExpiration>;

        $i0 = lengthof $r1;

        return $i0;
    }

    public com.opengamma.analytics.math.interpolation.Interpolator1D getTimeInterpolator()
    {
        com.opengamma.analytics.financial.model.volatility.surface.SmileDeltaTermStructureParameters r0;
        com.opengamma.analytics.math.interpolation.Interpolator1D $r1;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.surface.SmileDeltaTermStructureParameters;

        $r1 = r0.<com.opengamma.analytics.financial.model.volatility.surface.SmileDeltaTermStructureParameters: com.opengamma.analytics.math.interpolation.Interpolator1D _timeInterpolator>;

        return $r1;
    }

    public com.opengamma.analytics.financial.model.option.definition.SmileDeltaParameters[] getVolatilityTerm()
    {
        com.opengamma.analytics.financial.model.volatility.surface.SmileDeltaTermStructureParameters r0;
        com.opengamma.analytics.financial.model.option.definition.SmileDeltaParameters[] $r1;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.surface.SmileDeltaTermStructureParameters;

        $r1 = r0.<com.opengamma.analytics.financial.model.volatility.surface.SmileDeltaTermStructureParameters: com.opengamma.analytics.financial.model.option.definition.SmileDeltaParameters[] _volatilityTerm>;

        return $r1;
    }

    public int getNumberStrike()
    {
        com.opengamma.analytics.financial.model.volatility.surface.SmileDeltaTermStructureParameters r0;
        com.opengamma.analytics.financial.model.option.definition.SmileDeltaParameters[] $r1;
        com.opengamma.analytics.financial.model.option.definition.SmileDeltaParameters $r2;
        double[] $r3;
        int $i0;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.surface.SmileDeltaTermStructureParameters;

        $r1 = r0.<com.opengamma.analytics.financial.model.volatility.surface.SmileDeltaTermStructureParameters: com.opengamma.analytics.financial.model.option.definition.SmileDeltaParameters[] _volatilityTerm>;

        $r2 = $r1[0];

        $r3 = virtualinvoke $r2.<com.opengamma.analytics.financial.model.option.definition.SmileDeltaParameters: double[] getVolatility()>();

        $i0 = lengthof $r3;

        return $i0;
    }

    public double[] getDelta()
    {
        com.opengamma.analytics.financial.model.volatility.surface.SmileDeltaTermStructureParameters r0;
        com.opengamma.analytics.financial.model.option.definition.SmileDeltaParameters[] $r1;
        com.opengamma.analytics.financial.model.option.definition.SmileDeltaParameters $r2;
        double[] $r3;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.surface.SmileDeltaTermStructureParameters;

        $r1 = r0.<com.opengamma.analytics.financial.model.volatility.surface.SmileDeltaTermStructureParameters: com.opengamma.analytics.financial.model.option.definition.SmileDeltaParameters[] _volatilityTerm>;

        $r2 = $r1[0];

        $r3 = virtualinvoke $r2.<com.opengamma.analytics.financial.model.option.definition.SmileDeltaParameters: double[] getDelta()>();

        return $r3;
    }

    public double[] getDeltaFull()
    {
        com.opengamma.analytics.financial.model.volatility.surface.SmileDeltaTermStructureParameters r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, i7;
        double[] r1, $r4, $r7, $r10;
        com.opengamma.analytics.financial.model.option.definition.SmileDeltaParameters[] $r2, $r5, $r8;
        com.opengamma.analytics.financial.model.option.definition.SmileDeltaParameters $r3, $r6, $r9;
        double $d0, $d1, $d2;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.surface.SmileDeltaTermStructureParameters;

        $r2 = r0.<com.opengamma.analytics.financial.model.volatility.surface.SmileDeltaTermStructureParameters: com.opengamma.analytics.financial.model.option.definition.SmileDeltaParameters[] _volatilityTerm>;

        $r3 = $r2[0];

        $r4 = virtualinvoke $r3.<com.opengamma.analytics.financial.model.option.definition.SmileDeltaParameters: double[] getDelta()>();

        i0 = lengthof $r4;

        $i1 = 2 * i0;

        $i2 = $i1 + 1;

        r1 = newarray (double)[$i2];

        i7 = 0;

     label1:
        if i7 >= i0 goto label2;

        $r5 = r0.<com.opengamma.analytics.financial.model.volatility.surface.SmileDeltaTermStructureParameters: com.opengamma.analytics.financial.model.option.definition.SmileDeltaParameters[] _volatilityTerm>;

        $r6 = $r5[0];

        $r7 = virtualinvoke $r6.<com.opengamma.analytics.financial.model.option.definition.SmileDeltaParameters: double[] getDelta()>();

        $d0 = $r7[i7];

        r1[i7] = $d0;

        $i3 = i0 + 1;

        $i4 = $i3 + i7;

        $r8 = r0.<com.opengamma.analytics.financial.model.volatility.surface.SmileDeltaTermStructureParameters: com.opengamma.analytics.financial.model.option.definition.SmileDeltaParameters[] _volatilityTerm>;

        $r9 = $r8[0];

        $r10 = virtualinvoke $r9.<com.opengamma.analytics.financial.model.option.definition.SmileDeltaParameters: double[] getDelta()>();

        $i5 = i0 - 1;

        $i6 = $i5 - i7;

        $d1 = $r10[$i6];

        $d2 = 1.0 - $d1;

        r1[$i4] = $d2;

        i7 = i7 + 1;

        goto label1;

     label2:
        r1[i0] = 0.5;

        return r1;
    }

    public java.lang.Double getVolatility(com.opengamma.util.tuple.Triple)
    {
        com.opengamma.analytics.financial.model.volatility.surface.SmileDeltaTermStructureParameters r0;
        com.opengamma.util.tuple.Triple r1;
        org.apache.commons.lang.NotImplementedException $r2;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.surface.SmileDeltaTermStructureParameters;

        r1 := @parameter0: com.opengamma.util.tuple.Triple;

        $r2 = new org.apache.commons.lang.NotImplementedException;

        specialinvoke $r2.<org.apache.commons.lang.NotImplementedException: void <init>()>();

        throw $r2;
    }

    public com.opengamma.analytics.financial.model.volatility.VolatilityAndBucketedSensitivities getVolatilityAndSensitivities(com.opengamma.util.tuple.Triple)
    {
        com.opengamma.analytics.financial.model.volatility.surface.SmileDeltaTermStructureParameters r0;
        com.opengamma.util.tuple.Triple r1;
        org.apache.commons.lang.NotImplementedException $r2;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.surface.SmileDeltaTermStructureParameters;

        r1 := @parameter0: com.opengamma.util.tuple.Triple;

        $r2 = new org.apache.commons.lang.NotImplementedException;

        specialinvoke $r2.<org.apache.commons.lang.NotImplementedException: void <init>()>();

        throw $r2;
    }

    public com.opengamma.analytics.financial.model.volatility.curve.BlackForexTermStructureParameters toTermStructureOnlyData(com.opengamma.analytics.math.interpolation.Interpolator1D)
    {
        com.opengamma.analytics.financial.model.volatility.surface.SmileDeltaTermStructureParameters r0;
        com.opengamma.analytics.math.interpolation.Interpolator1D r1;
        int i0, i1, $i2, $i3, i4;
        double[] r2, r3, $r5, $r6, $r9, $r14;
        com.opengamma.analytics.financial.model.option.definition.SmileDeltaParameters[] $r7, $r12;
        com.opengamma.analytics.financial.model.option.definition.SmileDeltaParameters $r8, $r13;
        com.opengamma.analytics.financial.model.volatility.curve.BlackForexTermStructureParameters $r10;
        com.opengamma.analytics.math.curve.InterpolatedDoublesCurve $r11;
        double $d0;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.surface.SmileDeltaTermStructureParameters;

        r1 := @parameter0: com.opengamma.analytics.math.interpolation.Interpolator1D;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "interpolator");

        $r5 = r0.<com.opengamma.analytics.financial.model.volatility.surface.SmileDeltaTermStructureParameters: double[] _timeToExpiration>;

        i0 = lengthof $r5;

        r2 = newarray (double)[i0];

        $r6 = r0.<com.opengamma.analytics.financial.model.volatility.surface.SmileDeltaTermStructureParameters: double[] _timeToExpiration>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r6, 0, r2, 0, i0);

        r3 = newarray (double)[i0];

        $r7 = r0.<com.opengamma.analytics.financial.model.volatility.surface.SmileDeltaTermStructureParameters: com.opengamma.analytics.financial.model.option.definition.SmileDeltaParameters[] _volatilityTerm>;

        $r8 = $r7[0];

        $r9 = virtualinvoke $r8.<com.opengamma.analytics.financial.model.option.definition.SmileDeltaParameters: double[] getVolatility()>();

        $i2 = lengthof $r9;

        $i3 = $i2 - 1;

        i1 = $i3 / 2;

        i4 = 0;

     label1:
        if i4 >= i0 goto label2;

        $r12 = r0.<com.opengamma.analytics.financial.model.volatility.surface.SmileDeltaTermStructureParameters: com.opengamma.analytics.financial.model.option.definition.SmileDeltaParameters[] _volatilityTerm>;

        $r13 = $r12[i4];

        $r14 = virtualinvoke $r13.<com.opengamma.analytics.financial.model.option.definition.SmileDeltaParameters: double[] getVolatility()>();

        $d0 = $r14[i1];

        r3[i4] = $d0;

        i4 = i4 + 1;

        goto label1;

     label2:
        $r10 = new com.opengamma.analytics.financial.model.volatility.curve.BlackForexTermStructureParameters;

        $r11 = staticinvoke <com.opengamma.analytics.math.curve.InterpolatedDoublesCurve: com.opengamma.analytics.math.curve.InterpolatedDoublesCurve fromSorted(double[],double[],com.opengamma.analytics.math.interpolation.Interpolator1D)>(r2, r3, r1);

        specialinvoke $r10.<com.opengamma.analytics.financial.model.volatility.curve.BlackForexTermStructureParameters: void <init>(com.opengamma.analytics.math.curve.DoublesCurve)>($r11);

        return $r10;
    }

    public int hashCode()
    {
        com.opengamma.analytics.financial.model.volatility.surface.SmileDeltaTermStructureParameters r0;
        double[] $r1;
        int $i1, $i2, $i3, $i4, $i5, $i6, i8, i9, i10;
        com.opengamma.analytics.financial.model.option.definition.SmileDeltaParameters[] $r2;
        com.opengamma.analytics.math.interpolation.Interpolator1D $r3;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.surface.SmileDeltaTermStructureParameters;

        $i1 = 31 * 1;

        $r1 = r0.<com.opengamma.analytics.financial.model.volatility.surface.SmileDeltaTermStructureParameters: double[] _timeToExpiration>;

        $i2 = staticinvoke <java.util.Arrays: int hashCode(double[])>($r1);

        i8 = $i1 + $i2;

        $i3 = 31 * i8;

        $r2 = r0.<com.opengamma.analytics.financial.model.volatility.surface.SmileDeltaTermStructureParameters: com.opengamma.analytics.financial.model.option.definition.SmileDeltaParameters[] _volatilityTerm>;

        $i4 = staticinvoke <java.util.Arrays: int hashCode(java.lang.Object[])>($r2);

        i9 = $i3 + $i4;

        $i5 = 31 * i9;

        $r3 = r0.<com.opengamma.analytics.financial.model.volatility.surface.SmileDeltaTermStructureParameters: com.opengamma.analytics.math.interpolation.Interpolator1D _timeInterpolator>;

        $i6 = virtualinvoke $r3.<com.opengamma.analytics.math.interpolation.Interpolator1D: int hashCode()>();

        i10 = $i5 + $i6;

        return i10;
    }

    public boolean equals(java.lang.Object)
    {
        com.opengamma.analytics.financial.model.volatility.surface.SmileDeltaTermStructureParameters r0, r2;
        java.lang.Object r1;
        java.lang.Class $r3, $r4;
        double[] $r5, $r6;
        boolean $z0, $z1, $z2;
        com.opengamma.analytics.financial.model.option.definition.SmileDeltaParameters[] $r7, $r8;
        com.opengamma.analytics.math.interpolation.Interpolator1D $r9, $r10;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.surface.SmileDeltaTermStructureParameters;

        r1 := @parameter0: java.lang.Object;

        if r0 != r1 goto label1;

        return 1;

     label1:
        if r1 != null goto label2;

        return 0;

     label2:
        $r3 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r4 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        if $r3 == $r4 goto label3;

        return 0;

     label3:
        r2 = (com.opengamma.analytics.financial.model.volatility.surface.SmileDeltaTermStructureParameters) r1;

        $r6 = r0.<com.opengamma.analytics.financial.model.volatility.surface.SmileDeltaTermStructureParameters: double[] _timeToExpiration>;

        $r5 = r2.<com.opengamma.analytics.financial.model.volatility.surface.SmileDeltaTermStructureParameters: double[] _timeToExpiration>;

        $z0 = staticinvoke <java.util.Arrays: boolean equals(double[],double[])>($r6, $r5);

        if $z0 != 0 goto label4;

        return 0;

     label4:
        $r8 = r0.<com.opengamma.analytics.financial.model.volatility.surface.SmileDeltaTermStructureParameters: com.opengamma.analytics.financial.model.option.definition.SmileDeltaParameters[] _volatilityTerm>;

        $r7 = r2.<com.opengamma.analytics.financial.model.volatility.surface.SmileDeltaTermStructureParameters: com.opengamma.analytics.financial.model.option.definition.SmileDeltaParameters[] _volatilityTerm>;

        $z1 = staticinvoke <java.util.Arrays: boolean equals(java.lang.Object[],java.lang.Object[])>($r8, $r7);

        if $z1 != 0 goto label5;

        return 0;

     label5:
        $r10 = r0.<com.opengamma.analytics.financial.model.volatility.surface.SmileDeltaTermStructureParameters: com.opengamma.analytics.math.interpolation.Interpolator1D _timeInterpolator>;

        $r9 = r2.<com.opengamma.analytics.financial.model.volatility.surface.SmileDeltaTermStructureParameters: com.opengamma.analytics.math.interpolation.Interpolator1D _timeInterpolator>;

        $z2 = staticinvoke <org.apache.commons.lang.ObjectUtils: boolean equals(java.lang.Object,java.lang.Object)>($r10, $r9);

        if $z2 != 0 goto label6;

        return 0;

     label6:
        return 1;
    }

    public volatile com.opengamma.analytics.financial.model.volatility.VolatilityAndBucketedSensitivities getVolatilityAndSensitivities(java.lang.Object)
    {
        com.opengamma.analytics.financial.model.volatility.surface.SmileDeltaTermStructureParameters r0;
        java.lang.Object r1;
        com.opengamma.util.tuple.Triple $r2;
        com.opengamma.analytics.financial.model.volatility.VolatilityAndBucketedSensitivities $r3;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.surface.SmileDeltaTermStructureParameters;

        r1 := @parameter0: java.lang.Object;

        $r2 = (com.opengamma.util.tuple.Triple) r1;

        $r3 = virtualinvoke r0.<com.opengamma.analytics.financial.model.volatility.surface.SmileDeltaTermStructureParameters: com.opengamma.analytics.financial.model.volatility.VolatilityAndBucketedSensitivities getVolatilityAndSensitivities(com.opengamma.util.tuple.Triple)>($r2);

        return $r3;
    }

    public volatile java.lang.Double getVolatility(java.lang.Object)
    {
        com.opengamma.analytics.financial.model.volatility.surface.SmileDeltaTermStructureParameters r0;
        java.lang.Object r1;
        com.opengamma.util.tuple.Triple $r2;
        java.lang.Double $r3;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.surface.SmileDeltaTermStructureParameters;

        r1 := @parameter0: java.lang.Object;

        $r2 = (com.opengamma.util.tuple.Triple) r1;

        $r3 = virtualinvoke r0.<com.opengamma.analytics.financial.model.volatility.surface.SmileDeltaTermStructureParameters: java.lang.Double getVolatility(com.opengamma.util.tuple.Triple)>($r2);

        return $r3;
    }

    static void <clinit>()
    {
        com.opengamma.analytics.math.interpolation.CombinedInterpolatorExtrapolator $r0;

        $r0 = staticinvoke <com.opengamma.analytics.math.interpolation.CombinedInterpolatorExtrapolatorFactory: com.opengamma.analytics.math.interpolation.CombinedInterpolatorExtrapolator getInterpolator(java.lang.String,java.lang.String,java.lang.String)>("TimeSquare", "FlatExtrapolator", "FlatExtrapolator");

        <com.opengamma.analytics.financial.model.volatility.surface.SmileDeltaTermStructureParameters: com.opengamma.analytics.math.interpolation.Interpolator1D DEFAULT_INTERPOLATOR_EXPIRY> = $r0;

        return;
    }
}
