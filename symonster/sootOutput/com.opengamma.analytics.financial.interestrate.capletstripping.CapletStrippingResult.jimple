public abstract class com.opengamma.analytics.financial.interestrate.capletstripping.CapletStrippingResult extends java.lang.Object
{
    private final com.opengamma.analytics.math.matrix.DoubleMatrix1D _fitParms;
    private final com.opengamma.analytics.financial.model.volatility.discrete.DiscreteVolatilityFunction _func;
    private final com.opengamma.analytics.financial.interestrate.capletstripping.MultiCapFloorPricer _pricer;

    public void <init>(com.opengamma.analytics.math.matrix.DoubleMatrix1D, com.opengamma.analytics.financial.model.volatility.discrete.DiscreteVolatilityFunction, com.opengamma.analytics.financial.interestrate.capletstripping.MultiCapFloorPricer)
    {
        com.opengamma.analytics.financial.interestrate.capletstripping.CapletStrippingResult r0;
        com.opengamma.analytics.math.matrix.DoubleMatrix1D r1;
        com.opengamma.analytics.financial.model.volatility.discrete.DiscreteVolatilityFunction r2;
        com.opengamma.analytics.financial.interestrate.capletstripping.MultiCapFloorPricer r3;

        r0 := @this: com.opengamma.analytics.financial.interestrate.capletstripping.CapletStrippingResult;

        r1 := @parameter0: com.opengamma.analytics.math.matrix.DoubleMatrix1D;

        r2 := @parameter1: com.opengamma.analytics.financial.model.volatility.discrete.DiscreteVolatilityFunction;

        r3 := @parameter2: com.opengamma.analytics.financial.interestrate.capletstripping.MultiCapFloorPricer;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "fitParms");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, "func");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r3, "pricer");

        r0.<com.opengamma.analytics.financial.interestrate.capletstripping.CapletStrippingResult: com.opengamma.analytics.math.matrix.DoubleMatrix1D _fitParms> = r1;

        r0.<com.opengamma.analytics.financial.interestrate.capletstripping.CapletStrippingResult: com.opengamma.analytics.financial.model.volatility.discrete.DiscreteVolatilityFunction _func> = r2;

        r0.<com.opengamma.analytics.financial.interestrate.capletstripping.CapletStrippingResult: com.opengamma.analytics.financial.interestrate.capletstripping.MultiCapFloorPricer _pricer> = r3;

        return;
    }

    public abstract double getChiSqr();

    public com.opengamma.analytics.math.matrix.DoubleMatrix1D getFitParameters()
    {
        com.opengamma.analytics.financial.interestrate.capletstripping.CapletStrippingResult r0;
        com.opengamma.analytics.math.matrix.DoubleMatrix1D $r1;

        r0 := @this: com.opengamma.analytics.financial.interestrate.capletstripping.CapletStrippingResult;

        $r1 = r0.<com.opengamma.analytics.financial.interestrate.capletstripping.CapletStrippingResult: com.opengamma.analytics.math.matrix.DoubleMatrix1D _fitParms>;

        return $r1;
    }

    public com.opengamma.analytics.math.matrix.DoubleMatrix1D getCapletVols()
    {
        com.opengamma.analytics.financial.interestrate.capletstripping.CapletStrippingResult r0;
        com.opengamma.analytics.math.matrix.DoubleMatrix1D $r1, $r4;
        com.opengamma.analytics.financial.model.volatility.discrete.DiscreteVolatilityFunction $r2;
        java.lang.Object $r3;

        r0 := @this: com.opengamma.analytics.financial.interestrate.capletstripping.CapletStrippingResult;

        $r2 = r0.<com.opengamma.analytics.financial.interestrate.capletstripping.CapletStrippingResult: com.opengamma.analytics.financial.model.volatility.discrete.DiscreteVolatilityFunction _func>;

        $r1 = r0.<com.opengamma.analytics.financial.interestrate.capletstripping.CapletStrippingResult: com.opengamma.analytics.math.matrix.DoubleMatrix1D _fitParms>;

        $r3 = virtualinvoke $r2.<com.opengamma.analytics.financial.model.volatility.discrete.DiscreteVolatilityFunction: java.lang.Object evaluate(java.lang.Object)>($r1);

        $r4 = (com.opengamma.analytics.math.matrix.DoubleMatrix1D) $r3;

        return $r4;
    }

    public double[] getModelCapPrices()
    {
        com.opengamma.analytics.financial.interestrate.capletstripping.CapletStrippingResult r0;
        com.opengamma.analytics.financial.interestrate.capletstripping.MultiCapFloorPricer $r1;
        com.opengamma.analytics.math.matrix.DoubleMatrix1D $r2;
        double[] $r3, $r4;

        r0 := @this: com.opengamma.analytics.financial.interestrate.capletstripping.CapletStrippingResult;

        $r1 = r0.<com.opengamma.analytics.financial.interestrate.capletstripping.CapletStrippingResult: com.opengamma.analytics.financial.interestrate.capletstripping.MultiCapFloorPricer _pricer>;

        $r2 = virtualinvoke r0.<com.opengamma.analytics.financial.interestrate.capletstripping.CapletStrippingResult: com.opengamma.analytics.math.matrix.DoubleMatrix1D getCapletVols()>();

        $r3 = virtualinvoke $r2.<com.opengamma.analytics.math.matrix.DoubleMatrix1D: double[] getData()>();

        $r4 = virtualinvoke $r1.<com.opengamma.analytics.financial.interestrate.capletstripping.MultiCapFloorPricer: double[] priceFromCapletVols(double[])>($r3);

        return $r4;
    }

    public double[] getModelCapVols()
    {
        com.opengamma.analytics.financial.interestrate.capletstripping.CapletStrippingResult r0;
        com.opengamma.analytics.financial.interestrate.capletstripping.MultiCapFloorPricer $r1;
        double[] $r2, $r3;

        r0 := @this: com.opengamma.analytics.financial.interestrate.capletstripping.CapletStrippingResult;

        $r1 = r0.<com.opengamma.analytics.financial.interestrate.capletstripping.CapletStrippingResult: com.opengamma.analytics.financial.interestrate.capletstripping.MultiCapFloorPricer _pricer>;

        $r2 = virtualinvoke r0.<com.opengamma.analytics.financial.interestrate.capletstripping.CapletStrippingResult: double[] getModelCapPrices()>();

        $r3 = virtualinvoke $r1.<com.opengamma.analytics.financial.interestrate.capletstripping.MultiCapFloorPricer: double[] impliedVols(double[])>($r2);

        return $r3;
    }

    com.opengamma.analytics.financial.interestrate.capletstripping.MultiCapFloorPricer getPricer()
    {
        com.opengamma.analytics.financial.interestrate.capletstripping.CapletStrippingResult r0;
        com.opengamma.analytics.financial.interestrate.capletstripping.MultiCapFloorPricer $r1;

        r0 := @this: com.opengamma.analytics.financial.interestrate.capletstripping.CapletStrippingResult;

        $r1 = r0.<com.opengamma.analytics.financial.interestrate.capletstripping.CapletStrippingResult: com.opengamma.analytics.financial.interestrate.capletstripping.MultiCapFloorPricer _pricer>;

        return $r1;
    }

    public java.lang.String toString()
    {
        com.opengamma.analytics.financial.interestrate.capletstripping.CapletStrippingResult r0;
        java.lang.StringBuilder $r2;
        double $d0;
        com.opengamma.analytics.math.matrix.DoubleMatrix1D $r6, $r10;
        double[] $r8;
        java.lang.String $r12;

        r0 := @this: com.opengamma.analytics.financial.interestrate.capletstripping.CapletStrippingResult;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Caplet Stripping Results\nchi2:\t");

        $d0 = virtualinvoke r0.<com.opengamma.analytics.financial.interestrate.capletstripping.CapletStrippingResult: double getChiSqr()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d0);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\nFit Parameters:");

        $r6 = virtualinvoke r0.<com.opengamma.analytics.financial.interestrate.capletstripping.CapletStrippingResult: com.opengamma.analytics.math.matrix.DoubleMatrix1D getFitParameters()>();

        specialinvoke r0.<com.opengamma.analytics.financial.interestrate.capletstripping.CapletStrippingResult: void toTabSeparated(java.lang.StringBuilder,com.opengamma.analytics.math.matrix.DoubleMatrix1D)>($r2, $r6);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\nCap Volatilities:");

        $r8 = virtualinvoke r0.<com.opengamma.analytics.financial.interestrate.capletstripping.CapletStrippingResult: double[] getModelCapVols()>();

        specialinvoke r0.<com.opengamma.analytics.financial.interestrate.capletstripping.CapletStrippingResult: void toTabSeparated(java.lang.StringBuilder,double[])>($r2, $r8);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\nCaplet Volatilities:");

        $r10 = virtualinvoke r0.<com.opengamma.analytics.financial.interestrate.capletstripping.CapletStrippingResult: com.opengamma.analytics.math.matrix.DoubleMatrix1D getCapletVols()>();

        specialinvoke r0.<com.opengamma.analytics.financial.interestrate.capletstripping.CapletStrippingResult: void toTabSeparated(java.lang.StringBuilder,com.opengamma.analytics.math.matrix.DoubleMatrix1D)>($r2, $r10);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n\n");

        $r12 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r12;
    }

    public void printCapletVols(java.io.PrintStream)
    {
        com.opengamma.analytics.financial.interestrate.capletstripping.CapletStrippingResult r0;
        java.io.PrintStream r1;
        com.opengamma.util.tuple.DoublesPair[] r2;
        com.opengamma.analytics.math.matrix.DoubleMatrix1D r3;
        int i0, i1;
        com.opengamma.analytics.financial.interestrate.capletstripping.MultiCapFloorPricer $r5;
        java.lang.StringBuilder $r6, $r8, $r9, $r11, $r12, $r15;
        com.opengamma.util.tuple.DoublesPair $r7, $r10;
        double $d0, $d1;
        int[] $r13;
        java.lang.Double $r14;
        java.lang.String $r16;

        r0 := @this: com.opengamma.analytics.financial.interestrate.capletstripping.CapletStrippingResult;

        r1 := @parameter0: java.io.PrintStream;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "out");

        $r5 = r0.<com.opengamma.analytics.financial.interestrate.capletstripping.CapletStrippingResult: com.opengamma.analytics.financial.interestrate.capletstripping.MultiCapFloorPricer _pricer>;

        r2 = virtualinvoke $r5.<com.opengamma.analytics.financial.interestrate.capletstripping.MultiCapFloorPricer: com.opengamma.util.tuple.DoublesPair[] getExpiryStrikeArray()>();

        r3 = virtualinvoke r0.<com.opengamma.analytics.financial.interestrate.capletstripping.CapletStrippingResult: com.opengamma.analytics.math.matrix.DoubleMatrix1D getCapletVols()>();

        i0 = lengthof r2;

        virtualinvoke r1.<java.io.PrintStream: void println(java.lang.String)>("List of calibrated caplet volatilities");

        virtualinvoke r1.<java.io.PrintStream: void println(java.lang.String)>("Expiry\tStrike\tVolatility");

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = r2[i1];

        $d0 = $r7.<com.opengamma.util.tuple.DoublesPair: double first>;

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d0);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\t");

        $r10 = r2[i1];

        $d1 = $r10.<com.opengamma.util.tuple.DoublesPair: double second>;

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d1);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\t");

        $r13 = newarray (int)[1];

        $r13[0] = i1;

        $r14 = virtualinvoke r3.<com.opengamma.analytics.math.matrix.DoubleMatrix1D: java.lang.Double getEntry(int[])>($r13);

        $r15 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r14);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintStream: void println(java.lang.String)>($r16);

        i1 = i1 + 1;

        goto label1;

     label2:
        virtualinvoke r1.<java.io.PrintStream: void println()>();

        return;
    }

    public void printSurface(java.io.PrintStream, int, int)
    {
        com.opengamma.analytics.financial.interestrate.capletstripping.CapletStrippingResult r0;
        java.io.PrintStream r1;
        int i0, i1, i2, $i3, $i4, $i5, $i6, i7, i8, i9, i10, i11;
        double[] r2, r3, r9, r10;
        double d0, d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21, $d22, $d23;
        com.opengamma.util.tuple.DoublesPair[] r4;
        com.opengamma.analytics.math.matrix.DoubleMatrix1D r5;
        java.util.Map r8;
        java.lang.Double r11, $r33;
        com.opengamma.analytics.financial.interestrate.capletstripping.MultiCapFloorPricer $r13, $r14, $r15;
        java.util.HashMap $r16;
        com.opengamma.analytics.math.interpolation.GridInterpolator2D $r17;
        java.lang.StringBuilder $r18, $r19, $r20, $r23, $r24, $r25, $r27, $r28, $r29;
        java.lang.String $r21, $r26, $r30;
        com.opengamma.util.tuple.DoublesPair $r22, $r32;
        int[] $r31;
        boolean $z0, $z1;
        com.opengamma.analytics.math.interpolation.CombinedInterpolatorExtrapolator r35;

        r0 := @this: com.opengamma.analytics.financial.interestrate.capletstripping.CapletStrippingResult;

        r1 := @parameter0: java.io.PrintStream;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "out");

        if i0 <= 1 goto label01;

        $z0 = 1;

        goto label02;

     label01:
        $z0 = 0;

     label02:
        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z0, "need at least 2 expiry points");

        if i0 <= 2 goto label03;

        $z1 = 1;

        goto label04;

     label03:
        $z1 = 0;

     label04:
        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z1, "need at least 2 strike points");

        $r13 = r0.<com.opengamma.analytics.financial.interestrate.capletstripping.CapletStrippingResult: com.opengamma.analytics.financial.interestrate.capletstripping.MultiCapFloorPricer _pricer>;

        r2 = virtualinvoke $r13.<com.opengamma.analytics.financial.interestrate.capletstripping.MultiCapFloorPricer: double[] getCapletExpiries()>();

        $r14 = r0.<com.opengamma.analytics.financial.interestrate.capletstripping.CapletStrippingResult: com.opengamma.analytics.financial.interestrate.capletstripping.MultiCapFloorPricer _pricer>;

        r3 = virtualinvoke $r14.<com.opengamma.analytics.financial.interestrate.capletstripping.MultiCapFloorPricer: double[] getStrikes()>();

        $i3 = lengthof r2;

        $i4 = $i3 - 1;

        $d3 = r2[$i4];

        $d2 = r2[0];

        d0 = $d3 - $d2;

        $i5 = lengthof r3;

        $i6 = $i5 - 1;

        $d5 = r3[$i6];

        $d4 = r3[0];

        d1 = $d5 - $d4;

        $r15 = r0.<com.opengamma.analytics.financial.interestrate.capletstripping.CapletStrippingResult: com.opengamma.analytics.financial.interestrate.capletstripping.MultiCapFloorPricer _pricer>;

        r4 = virtualinvoke $r15.<com.opengamma.analytics.financial.interestrate.capletstripping.MultiCapFloorPricer: com.opengamma.util.tuple.DoublesPair[] getExpiryStrikeArray()>();

        r5 = virtualinvoke r0.<com.opengamma.analytics.financial.interestrate.capletstripping.CapletStrippingResult: com.opengamma.analytics.math.matrix.DoubleMatrix1D getCapletVols()>();

        i2 = lengthof r4;

        $r16 = new java.util.HashMap;

        specialinvoke $r16.<java.util.HashMap: void <init>(int)>(i2);

        i7 = 0;

     label05:
        if i7 >= i2 goto label06;

        $r32 = r4[i7];

        $r31 = newarray (int)[1];

        $r31[0] = i7;

        $r33 = virtualinvoke r5.<com.opengamma.analytics.math.matrix.DoubleMatrix1D: java.lang.Double getEntry(int[])>($r31);

        interfaceinvoke $r16.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r32, $r33);

        i7 = i7 + 1;

        goto label05;

     label06:
        r35 = staticinvoke <com.opengamma.analytics.math.interpolation.CombinedInterpolatorExtrapolatorFactory: com.opengamma.analytics.math.interpolation.CombinedInterpolatorExtrapolator getInterpolator(java.lang.String,java.lang.String)>("Linear", "LinearExtrapolator");

        $r17 = new com.opengamma.analytics.math.interpolation.GridInterpolator2D;

        specialinvoke $r17.<com.opengamma.analytics.math.interpolation.GridInterpolator2D: void <init>(com.opengamma.analytics.math.interpolation.Interpolator1D,com.opengamma.analytics.math.interpolation.Interpolator1D)>(r35, r35);

        r8 = virtualinvoke $r17.<com.opengamma.analytics.math.interpolation.GridInterpolator2D: java.util.Map getDataBundle(java.util.Map)>($r16);

        r9 = newarray (double)[i0];

        r10 = newarray (double)[i1];

        i8 = 0;

     label07:
        if i8 >= i1 goto label08;

        $d22 = r3[0];

        $d17 = (double) i8;

        $d20 = d1 * $d17;

        $d18 = (double) i1;

        $d19 = $d18 - 1.0;

        $d21 = $d20 / $d19;

        $d23 = $d22 + $d21;

        r10[i8] = $d23;

        i8 = i8 + 1;

        goto label07;

     label08:
        virtualinvoke r1.<java.io.PrintStream: void println()>();

        i9 = 0;

     label09:
        if i9 >= i0 goto label10;

        $d14 = r2[0];

        $d9 = (double) i9;

        $d12 = d0 * $d9;

        $d10 = (double) i0;

        $d11 = $d10 - 1.0;

        $d13 = $d12 / $d11;

        $d15 = $d14 + $d13;

        r9[i9] = $d15;

        $r27 = new java.lang.StringBuilder;

        specialinvoke $r27.<java.lang.StringBuilder: void <init>()>();

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\t");

        $d16 = r9[i9];

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d16);

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintStream: void print(java.lang.String)>($r30);

        i9 = i9 + 1;

        goto label09;

     label10:
        i10 = 0;

     label11:
        if i10 >= i1 goto label14;

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $d6 = r10[i10];

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d6);

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintStream: void print(java.lang.String)>($r21);

        i11 = 0;

     label12:
        if i11 >= i0 goto label13;

        $d8 = r9[i11];

        $d7 = r10[i10];

        $r22 = staticinvoke <com.opengamma.util.tuple.DoublesPair: com.opengamma.util.tuple.DoublesPair of(double,double)>($d8, $d7);

        r11 = virtualinvoke $r17.<com.opengamma.analytics.math.interpolation.GridInterpolator2D: java.lang.Double interpolate(java.util.Map,com.opengamma.util.tuple.DoublesPair)>(r8, $r22);

        $r23 = new java.lang.StringBuilder;

        specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\t");

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r11);

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintStream: void print(java.lang.String)>($r26);

        i11 = i11 + 1;

        goto label12;

     label13:
        i10 = i10 + 1;

        goto label11;

     label14:
        virtualinvoke r1.<java.io.PrintStream: void println()>();

        return;
    }

    private void toTabSeparated(java.lang.StringBuilder, com.opengamma.analytics.math.matrix.DoubleMatrix1D)
    {
        com.opengamma.analytics.financial.interestrate.capletstripping.CapletStrippingResult r0;
        java.lang.StringBuilder r1;
        com.opengamma.analytics.math.matrix.DoubleMatrix1D r2;
        double[] $r3;

        r0 := @this: com.opengamma.analytics.financial.interestrate.capletstripping.CapletStrippingResult;

        r1 := @parameter0: java.lang.StringBuilder;

        r2 := @parameter1: com.opengamma.analytics.math.matrix.DoubleMatrix1D;

        $r3 = virtualinvoke r2.<com.opengamma.analytics.math.matrix.DoubleMatrix1D: double[] getData()>();

        specialinvoke r0.<com.opengamma.analytics.financial.interestrate.capletstripping.CapletStrippingResult: void toTabSeparated(java.lang.StringBuilder,double[])>(r1, $r3);

        return;
    }

    private void toTabSeparated(java.lang.StringBuilder, double[])
    {
        com.opengamma.analytics.financial.interestrate.capletstripping.CapletStrippingResult r0;
        java.lang.StringBuilder r1;
        double[] r2;
        int i0, i1;
        double $d0;

        r0 := @this: com.opengamma.analytics.financial.interestrate.capletstripping.CapletStrippingResult;

        r1 := @parameter0: java.lang.StringBuilder;

        r2 := @parameter1: double[];

        i0 = lengthof r2;

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\t");

        $d0 = r2[i1];

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d0);

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }
}
