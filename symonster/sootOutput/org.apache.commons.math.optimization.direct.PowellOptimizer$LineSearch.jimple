class org.apache.commons.math.optimization.direct.PowellOptimizer$LineSearch extends java.lang.Object
{
    private final org.apache.commons.math.optimization.univariate.AbstractUnivariateRealOptimizer optim;
    private final org.apache.commons.math.optimization.univariate.BracketFinder bracket;
    private double optimum;
    private double valueAtOptimum;
    final org.apache.commons.math.optimization.direct.PowellOptimizer this$0;

    public void <init>(org.apache.commons.math.optimization.direct.PowellOptimizer, double, double)
    {
        org.apache.commons.math.optimization.direct.PowellOptimizer$LineSearch r0;
        org.apache.commons.math.optimization.direct.PowellOptimizer r1;
        double d0, d1;
        org.apache.commons.math.optimization.univariate.BrentOptimizer $r2;
        org.apache.commons.math.optimization.univariate.BracketFinder $r3;
        org.apache.commons.math.optimization.univariate.AbstractUnivariateRealOptimizer $r4, $r5;

        r0 := @this: org.apache.commons.math.optimization.direct.PowellOptimizer$LineSearch;

        r1 := @parameter0: org.apache.commons.math.optimization.direct.PowellOptimizer;

        d0 := @parameter1: double;

        d1 := @parameter2: double;

        r0.<org.apache.commons.math.optimization.direct.PowellOptimizer$LineSearch: org.apache.commons.math.optimization.direct.PowellOptimizer this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new org.apache.commons.math.optimization.univariate.BrentOptimizer;

        specialinvoke $r2.<org.apache.commons.math.optimization.univariate.BrentOptimizer: void <init>()>();

        r0.<org.apache.commons.math.optimization.direct.PowellOptimizer$LineSearch: org.apache.commons.math.optimization.univariate.AbstractUnivariateRealOptimizer optim> = $r2;

        $r3 = new org.apache.commons.math.optimization.univariate.BracketFinder;

        specialinvoke $r3.<org.apache.commons.math.optimization.univariate.BracketFinder: void <init>()>();

        r0.<org.apache.commons.math.optimization.direct.PowellOptimizer$LineSearch: org.apache.commons.math.optimization.univariate.BracketFinder bracket> = $r3;

        r0.<org.apache.commons.math.optimization.direct.PowellOptimizer$LineSearch: double optimum> = #NaN;

        r0.<org.apache.commons.math.optimization.direct.PowellOptimizer$LineSearch: double valueAtOptimum> = #NaN;

        $r4 = r0.<org.apache.commons.math.optimization.direct.PowellOptimizer$LineSearch: org.apache.commons.math.optimization.univariate.AbstractUnivariateRealOptimizer optim>;

        virtualinvoke $r4.<org.apache.commons.math.optimization.univariate.AbstractUnivariateRealOptimizer: void setRelativeAccuracy(double)>(d0);

        $r5 = r0.<org.apache.commons.math.optimization.direct.PowellOptimizer$LineSearch: org.apache.commons.math.optimization.univariate.AbstractUnivariateRealOptimizer optim>;

        virtualinvoke $r5.<org.apache.commons.math.optimization.univariate.AbstractUnivariateRealOptimizer: void setAbsoluteAccuracy(double)>(d1);

        return;
    }

    public void search(double[], double[]) throws org.apache.commons.math.optimization.OptimizationException, org.apache.commons.math.FunctionEvaluationException
    {
        org.apache.commons.math.optimization.direct.PowellOptimizer$LineSearch r0;
        double[] r1, r2;
        org.apache.commons.math.optimization.direct.PowellOptimizer$LineSearch$1 $r4;
        org.apache.commons.math.optimization.direct.PowellOptimizer $r5, $r8;
        org.apache.commons.math.optimization.univariate.BracketFinder $r6, $r11, $r12, $r13;
        org.apache.commons.math.optimization.GoalType $r7, $r10;
        org.apache.commons.math.optimization.univariate.AbstractUnivariateRealOptimizer $r9, $r14;
        double $d0, $d1, $d2, $d3, $d4;
        org.apache.commons.math.MaxIterationsExceededException $r15;
        org.apache.commons.math.optimization.OptimizationException $r16;
        int i0;

        r0 := @this: org.apache.commons.math.optimization.direct.PowellOptimizer$LineSearch;

        r1 := @parameter0: double[];

        r2 := @parameter1: double[];

        r0.<org.apache.commons.math.optimization.direct.PowellOptimizer$LineSearch: double optimum> = #NaN;

        r0.<org.apache.commons.math.optimization.direct.PowellOptimizer$LineSearch: double valueAtOptimum> = #NaN;

     label1:
        i0 = lengthof r1;

        $r4 = new org.apache.commons.math.optimization.direct.PowellOptimizer$LineSearch$1;

        specialinvoke $r4.<org.apache.commons.math.optimization.direct.PowellOptimizer$LineSearch$1: void <init>(org.apache.commons.math.optimization.direct.PowellOptimizer$LineSearch,int,double[],double[])>(r0, i0, r1, r2);

        $r6 = r0.<org.apache.commons.math.optimization.direct.PowellOptimizer$LineSearch: org.apache.commons.math.optimization.univariate.BracketFinder bracket>;

        $r5 = r0.<org.apache.commons.math.optimization.direct.PowellOptimizer$LineSearch: org.apache.commons.math.optimization.direct.PowellOptimizer this$0>;

        $r7 = staticinvoke <org.apache.commons.math.optimization.direct.PowellOptimizer: org.apache.commons.math.optimization.GoalType access$100(org.apache.commons.math.optimization.direct.PowellOptimizer)>($r5);

        virtualinvoke $r6.<org.apache.commons.math.optimization.univariate.BracketFinder: void search(org.apache.commons.math.analysis.UnivariateRealFunction,org.apache.commons.math.optimization.GoalType,double,double)>($r4, $r7, 0.0, 1.0);

        $r9 = r0.<org.apache.commons.math.optimization.direct.PowellOptimizer$LineSearch: org.apache.commons.math.optimization.univariate.AbstractUnivariateRealOptimizer optim>;

        $r8 = r0.<org.apache.commons.math.optimization.direct.PowellOptimizer$LineSearch: org.apache.commons.math.optimization.direct.PowellOptimizer this$0>;

        $r10 = staticinvoke <org.apache.commons.math.optimization.direct.PowellOptimizer: org.apache.commons.math.optimization.GoalType access$200(org.apache.commons.math.optimization.direct.PowellOptimizer)>($r8);

        $r11 = r0.<org.apache.commons.math.optimization.direct.PowellOptimizer$LineSearch: org.apache.commons.math.optimization.univariate.BracketFinder bracket>;

        $d0 = virtualinvoke $r11.<org.apache.commons.math.optimization.univariate.BracketFinder: double getLo()>();

        $r12 = r0.<org.apache.commons.math.optimization.direct.PowellOptimizer$LineSearch: org.apache.commons.math.optimization.univariate.BracketFinder bracket>;

        $d1 = virtualinvoke $r12.<org.apache.commons.math.optimization.univariate.BracketFinder: double getHi()>();

        $r13 = r0.<org.apache.commons.math.optimization.direct.PowellOptimizer$LineSearch: org.apache.commons.math.optimization.univariate.BracketFinder bracket>;

        $d2 = virtualinvoke $r13.<org.apache.commons.math.optimization.univariate.BracketFinder: double getMid()>();

        $d3 = virtualinvoke $r9.<org.apache.commons.math.optimization.univariate.AbstractUnivariateRealOptimizer: double optimize(org.apache.commons.math.analysis.UnivariateRealFunction,org.apache.commons.math.optimization.GoalType,double,double,double)>($r4, $r10, $d0, $d1, $d2);

        r0.<org.apache.commons.math.optimization.direct.PowellOptimizer$LineSearch: double optimum> = $d3;

        $r14 = r0.<org.apache.commons.math.optimization.direct.PowellOptimizer$LineSearch: org.apache.commons.math.optimization.univariate.AbstractUnivariateRealOptimizer optim>;

        $d4 = virtualinvoke $r14.<org.apache.commons.math.optimization.univariate.AbstractUnivariateRealOptimizer: double getFunctionValue()>();

        r0.<org.apache.commons.math.optimization.direct.PowellOptimizer$LineSearch: double valueAtOptimum> = $d4;

     label2:
        goto label4;

     label3:
        $r15 := @caughtexception;

        $r16 = new org.apache.commons.math.optimization.OptimizationException;

        specialinvoke $r16.<org.apache.commons.math.optimization.OptimizationException: void <init>(java.lang.Throwable)>($r15);

        throw $r16;

     label4:
        return;

        catch org.apache.commons.math.MaxIterationsExceededException from label1 to label2 with label3;
    }

    public double getOptimum()
    {
        org.apache.commons.math.optimization.direct.PowellOptimizer$LineSearch r0;
        double $d0;

        r0 := @this: org.apache.commons.math.optimization.direct.PowellOptimizer$LineSearch;

        $d0 = r0.<org.apache.commons.math.optimization.direct.PowellOptimizer$LineSearch: double optimum>;

        return $d0;
    }

    public double getValueAtOptimum()
    {
        org.apache.commons.math.optimization.direct.PowellOptimizer$LineSearch r0;
        double $d0;

        r0 := @this: org.apache.commons.math.optimization.direct.PowellOptimizer$LineSearch;

        $d0 = r0.<org.apache.commons.math.optimization.direct.PowellOptimizer$LineSearch: double valueAtOptimum>;

        return $d0;
    }
}
