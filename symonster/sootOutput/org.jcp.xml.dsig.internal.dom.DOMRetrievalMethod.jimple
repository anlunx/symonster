public final class org.jcp.xml.dsig.internal.dom.DOMRetrievalMethod extends org.jcp.xml.dsig.internal.dom.DOMStructure implements javax.xml.crypto.dsig.keyinfo.RetrievalMethod, javax.xml.crypto.dom.DOMURIReference
{
    private final java.util.List transforms;
    private java.lang.String uri;
    private java.lang.String type;
    private org.w3c.dom.Attr here;

    public void <init>(java.lang.String, java.lang.String, java.util.List)
    {
        org.jcp.xml.dsig.internal.dom.DOMRetrievalMethod r0;
        java.lang.String r1, r2, $r14, $r18;
        java.util.List r3, $r4, $r7;
        int i0, i1;
        boolean $z0, $z1, $z2;
        java.net.URI $r5;
        java.util.ArrayList $r6;
        java.lang.Object $r8;
        java.lang.ClassCastException $r9;
        java.lang.StringBuilder $r10, $r11, $r12, $r13;
        java.lang.NullPointerException $r15;
        java.net.URISyntaxException $r16;
        java.lang.IllegalArgumentException $r17;

        r0 := @this: org.jcp.xml.dsig.internal.dom.DOMRetrievalMethod;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.util.List;

        specialinvoke r0.<org.jcp.xml.dsig.internal.dom.DOMStructure: void <init>()>();

        if r1 != null goto label01;

        $r15 = new java.lang.NullPointerException;

        specialinvoke $r15.<java.lang.NullPointerException: void <init>(java.lang.String)>("uri cannot be null");

        throw $r15;

     label01:
        if r3 == null goto label02;

        $z1 = interfaceinvoke r3.<java.util.List: boolean isEmpty()>();

        if $z1 == 0 goto label03;

     label02:
        $r4 = <java.util.Collections: java.util.List EMPTY_LIST>;

        r0.<org.jcp.xml.dsig.internal.dom.DOMRetrievalMethod: java.util.List transforms> = $r4;

        goto label07;

     label03:
        $r6 = new java.util.ArrayList;

        specialinvoke $r6.<java.util.ArrayList: void <init>(java.util.Collection)>(r3);

        i1 = 0;

        i0 = interfaceinvoke $r6.<java.util.List: int size()>();

     label04:
        if i1 >= i0 goto label06;

        $r8 = interfaceinvoke $r6.<java.util.List: java.lang.Object get(int)>(i1);

        $z2 = $r8 instanceof javax.xml.crypto.dsig.Transform;

        if $z2 != 0 goto label05;

        $r9 = new java.lang.ClassCastException;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("transforms[");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("] is not a valid type");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r9.<java.lang.ClassCastException: void <init>(java.lang.String)>($r14);

        throw $r9;

     label05:
        i1 = i1 + 1;

        goto label04;

     label06:
        $r7 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r6);

        r0.<org.jcp.xml.dsig.internal.dom.DOMRetrievalMethod: java.util.List transforms> = $r7;

     label07:
        r0.<org.jcp.xml.dsig.internal.dom.DOMRetrievalMethod: java.lang.String uri> = r1;

        if r1 == null goto label11;

        $z0 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("");

        if $z0 != 0 goto label11;

     label08:
        $r5 = new java.net.URI;

        specialinvoke $r5.<java.net.URI: void <init>(java.lang.String)>(r1);

     label09:
        goto label11;

     label10:
        $r16 := @caughtexception;

        $r17 = new java.lang.IllegalArgumentException;

        $r18 = virtualinvoke $r16.<java.net.URISyntaxException: java.lang.String getMessage()>();

        specialinvoke $r17.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r18);

        throw $r17;

     label11:
        r0.<org.jcp.xml.dsig.internal.dom.DOMRetrievalMethod: java.lang.String type> = r2;

        return;

        catch java.net.URISyntaxException from label08 to label09 with label10;
    }

    public void <init>(org.w3c.dom.Element, javax.xml.crypto.XMLCryptoContext, java.security.Provider) throws javax.xml.crypto.MarshalException
    {
        org.jcp.xml.dsig.internal.dom.DOMRetrievalMethod r0;
        org.w3c.dom.Element r1, r5, r15;
        javax.xml.crypto.XMLCryptoContext r2;
        java.security.Provider r3;
        boolean z0, $z1;
        java.lang.String $r7, $r8;
        org.w3c.dom.Attr $r9;
        java.util.ArrayList $r10;
        java.util.List $r11, $r12;
        org.jcp.xml.dsig.internal.dom.DOMTransform $r13;
        javax.xml.crypto.MarshalException $r14;
        int i0;

        r0 := @this: org.jcp.xml.dsig.internal.dom.DOMRetrievalMethod;

        r1 := @parameter0: org.w3c.dom.Element;

        r2 := @parameter1: javax.xml.crypto.XMLCryptoContext;

        r3 := @parameter2: java.security.Provider;

        specialinvoke r0.<org.jcp.xml.dsig.internal.dom.DOMStructure: void <init>()>();

        $r7 = staticinvoke <org.jcp.xml.dsig.internal.dom.DOMUtils: java.lang.String getAttributeValue(org.w3c.dom.Element,java.lang.String)>(r1, "URI");

        r0.<org.jcp.xml.dsig.internal.dom.DOMRetrievalMethod: java.lang.String uri> = $r7;

        $r8 = staticinvoke <org.jcp.xml.dsig.internal.dom.DOMUtils: java.lang.String getAttributeValue(org.w3c.dom.Element,java.lang.String)>(r1, "Type");

        r0.<org.jcp.xml.dsig.internal.dom.DOMRetrievalMethod: java.lang.String type> = $r8;

        $r9 = interfaceinvoke r1.<org.w3c.dom.Element: org.w3c.dom.Attr getAttributeNodeNS(java.lang.String,java.lang.String)>(null, "URI");

        r0.<org.jcp.xml.dsig.internal.dom.DOMRetrievalMethod: org.w3c.dom.Attr here> = $r9;

        z0 = staticinvoke <org.jcp.xml.dsig.internal.dom.Utils: boolean secureValidation(javax.xml.crypto.XMLCryptoContext)>(r2);

        $r10 = new java.util.ArrayList;

        specialinvoke $r10.<java.util.ArrayList: void <init>()>();

        r5 = staticinvoke <org.jcp.xml.dsig.internal.dom.DOMUtils: org.w3c.dom.Element getFirstChildElement(org.w3c.dom.Node)>(r1);

        i0 = 0;

        if r5 == null goto label2;

        r15 = staticinvoke <org.jcp.xml.dsig.internal.dom.DOMUtils: org.w3c.dom.Element getFirstChildElement(org.w3c.dom.Node)>(r5);

     label1:
        if r15 == null goto label2;

        $r13 = new org.jcp.xml.dsig.internal.dom.DOMTransform;

        specialinvoke $r13.<org.jcp.xml.dsig.internal.dom.DOMTransform: void <init>(org.w3c.dom.Element,javax.xml.crypto.XMLCryptoContext,java.security.Provider)>(r15, r2, r3);

        interfaceinvoke $r10.<java.util.List: boolean add(java.lang.Object)>($r13);

        r15 = staticinvoke <org.jcp.xml.dsig.internal.dom.DOMUtils: org.w3c.dom.Element getNextSiblingElement(org.w3c.dom.Node)>(r15);

        i0 = i0 + 1;

        if z0 == 0 goto label1;

        if i0 <= 5 goto label1;

        $r14 = new javax.xml.crypto.MarshalException;

        specialinvoke $r14.<javax.xml.crypto.MarshalException: void <init>(java.lang.String)>("A maxiumum of 5 transforms per Reference are allowed with secure validation");

        throw $r14;

     label2:
        $z1 = interfaceinvoke $r10.<java.util.List: boolean isEmpty()>();

        if $z1 == 0 goto label3;

        $r12 = <java.util.Collections: java.util.List EMPTY_LIST>;

        r0.<org.jcp.xml.dsig.internal.dom.DOMRetrievalMethod: java.util.List transforms> = $r12;

        goto label4;

     label3:
        $r11 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r10);

        r0.<org.jcp.xml.dsig.internal.dom.DOMRetrievalMethod: java.util.List transforms> = $r11;

     label4:
        return;
    }

    public java.lang.String getURI()
    {
        org.jcp.xml.dsig.internal.dom.DOMRetrievalMethod r0;
        java.lang.String $r1;

        r0 := @this: org.jcp.xml.dsig.internal.dom.DOMRetrievalMethod;

        $r1 = r0.<org.jcp.xml.dsig.internal.dom.DOMRetrievalMethod: java.lang.String uri>;

        return $r1;
    }

    public java.lang.String getType()
    {
        org.jcp.xml.dsig.internal.dom.DOMRetrievalMethod r0;
        java.lang.String $r1;

        r0 := @this: org.jcp.xml.dsig.internal.dom.DOMRetrievalMethod;

        $r1 = r0.<org.jcp.xml.dsig.internal.dom.DOMRetrievalMethod: java.lang.String type>;

        return $r1;
    }

    public java.util.List getTransforms()
    {
        org.jcp.xml.dsig.internal.dom.DOMRetrievalMethod r0;
        java.util.List $r1;

        r0 := @this: org.jcp.xml.dsig.internal.dom.DOMRetrievalMethod;

        $r1 = r0.<org.jcp.xml.dsig.internal.dom.DOMRetrievalMethod: java.util.List transforms>;

        return $r1;
    }

    public void marshal(org.w3c.dom.Node, java.lang.String, javax.xml.crypto.dom.DOMCryptoContext) throws javax.xml.crypto.MarshalException
    {
        org.jcp.xml.dsig.internal.dom.DOMRetrievalMethod r0;
        org.w3c.dom.Node r1;
        java.lang.String r2, $r7, $r8;
        javax.xml.crypto.dom.DOMCryptoContext r3;
        org.w3c.dom.Document r4;
        org.w3c.dom.Element r5, r6;
        int i0, i1;
        java.util.List $r9, $r13, $r14;
        boolean $z0;
        org.w3c.dom.Attr $r11;
        java.lang.Object $r15;
        org.jcp.xml.dsig.internal.dom.DOMTransform $r16;

        r0 := @this: org.jcp.xml.dsig.internal.dom.DOMRetrievalMethod;

        r1 := @parameter0: org.w3c.dom.Node;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: javax.xml.crypto.dom.DOMCryptoContext;

        r4 = staticinvoke <org.jcp.xml.dsig.internal.dom.DOMUtils: org.w3c.dom.Document getOwnerDocument(org.w3c.dom.Node)>(r1);

        r5 = staticinvoke <org.jcp.xml.dsig.internal.dom.DOMUtils: org.w3c.dom.Element createElement(org.w3c.dom.Document,java.lang.String,java.lang.String,java.lang.String)>(r4, "RetrievalMethod", "http://www.w3.org/2000/09/xmldsig#", r2);

        $r7 = r0.<org.jcp.xml.dsig.internal.dom.DOMRetrievalMethod: java.lang.String uri>;

        staticinvoke <org.jcp.xml.dsig.internal.dom.DOMUtils: void setAttribute(org.w3c.dom.Element,java.lang.String,java.lang.String)>(r5, "URI", $r7);

        $r8 = r0.<org.jcp.xml.dsig.internal.dom.DOMRetrievalMethod: java.lang.String type>;

        staticinvoke <org.jcp.xml.dsig.internal.dom.DOMUtils: void setAttribute(org.w3c.dom.Element,java.lang.String,java.lang.String)>(r5, "Type", $r8);

        $r9 = r0.<org.jcp.xml.dsig.internal.dom.DOMRetrievalMethod: java.util.List transforms>;

        $z0 = interfaceinvoke $r9.<java.util.List: boolean isEmpty()>();

        if $z0 != 0 goto label2;

        r6 = staticinvoke <org.jcp.xml.dsig.internal.dom.DOMUtils: org.w3c.dom.Element createElement(org.w3c.dom.Document,java.lang.String,java.lang.String,java.lang.String)>(r4, "Transforms", "http://www.w3.org/2000/09/xmldsig#", r2);

        interfaceinvoke r5.<org.w3c.dom.Element: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>(r6);

        i1 = 0;

        $r13 = r0.<org.jcp.xml.dsig.internal.dom.DOMRetrievalMethod: java.util.List transforms>;

        i0 = interfaceinvoke $r13.<java.util.List: int size()>();

     label1:
        if i1 >= i0 goto label2;

        $r14 = r0.<org.jcp.xml.dsig.internal.dom.DOMRetrievalMethod: java.util.List transforms>;

        $r15 = interfaceinvoke $r14.<java.util.List: java.lang.Object get(int)>(i1);

        $r16 = (org.jcp.xml.dsig.internal.dom.DOMTransform) $r15;

        virtualinvoke $r16.<org.jcp.xml.dsig.internal.dom.DOMTransform: void marshal(org.w3c.dom.Node,java.lang.String,javax.xml.crypto.dom.DOMCryptoContext)>(r6, r2, r3);

        i1 = i1 + 1;

        goto label1;

     label2:
        interfaceinvoke r1.<org.w3c.dom.Node: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>(r5);

        $r11 = interfaceinvoke r5.<org.w3c.dom.Element: org.w3c.dom.Attr getAttributeNodeNS(java.lang.String,java.lang.String)>(null, "URI");

        r0.<org.jcp.xml.dsig.internal.dom.DOMRetrievalMethod: org.w3c.dom.Attr here> = $r11;

        return;
    }

    public org.w3c.dom.Node getHere()
    {
        org.jcp.xml.dsig.internal.dom.DOMRetrievalMethod r0;
        org.w3c.dom.Attr $r1;

        r0 := @this: org.jcp.xml.dsig.internal.dom.DOMRetrievalMethod;

        $r1 = r0.<org.jcp.xml.dsig.internal.dom.DOMRetrievalMethod: org.w3c.dom.Attr here>;

        return $r1;
    }

    public javax.xml.crypto.Data dereference(javax.xml.crypto.XMLCryptoContext) throws javax.xml.crypto.URIReferenceException
    {
        org.jcp.xml.dsig.internal.dom.DOMRetrievalMethod r0;
        javax.xml.crypto.XMLCryptoContext r1;
        java.util.List $r2, $r7;
        boolean $z0, $z1, $z2, $z3;
        java.lang.Object $r3, $r8;
        java.lang.String $r4, $r5;
        javax.xml.crypto.URIReferenceException $r6, $r12;
        org.jcp.xml.dsig.internal.dom.DOMTransform $r9;
        java.lang.NullPointerException $r10;
        java.lang.Exception $r11;
        javax.xml.crypto.URIDereferencer r13;
        javax.xml.crypto.Data r14;
        int i0, i1;
        javax.xml.crypto.dsig.Transform r15;
        javax.xml.crypto.NodeSetData r17;
        java.util.Iterator r18;
        org.w3c.dom.Node r19;

        r0 := @this: org.jcp.xml.dsig.internal.dom.DOMRetrievalMethod;

        r1 := @parameter0: javax.xml.crypto.XMLCryptoContext;

        if r1 != null goto label1;

        $r10 = new java.lang.NullPointerException;

        specialinvoke $r10.<java.lang.NullPointerException: void <init>(java.lang.String)>("context cannot be null");

        throw $r10;

     label1:
        r13 = interfaceinvoke r1.<javax.xml.crypto.XMLCryptoContext: javax.xml.crypto.URIDereferencer getURIDereferencer()>();

        if r13 != null goto label2;

        r13 = <org.jcp.xml.dsig.internal.dom.DOMURIDereferencer: javax.xml.crypto.URIDereferencer INSTANCE>;

     label2:
        r14 = interfaceinvoke r13.<javax.xml.crypto.URIDereferencer: javax.xml.crypto.Data dereference(javax.xml.crypto.URIReference,javax.xml.crypto.XMLCryptoContext)>(r0, r1);

     label3:
        i0 = 0;

        $r2 = r0.<org.jcp.xml.dsig.internal.dom.DOMRetrievalMethod: java.util.List transforms>;

        i1 = interfaceinvoke $r2.<java.util.List: int size()>();

     label4:
        if i0 >= i1 goto label5;

        $r7 = r0.<org.jcp.xml.dsig.internal.dom.DOMRetrievalMethod: java.util.List transforms>;

        $r8 = interfaceinvoke $r7.<java.util.List: java.lang.Object get(int)>(i0);

        r15 = (javax.xml.crypto.dsig.Transform) $r8;

        $r9 = (org.jcp.xml.dsig.internal.dom.DOMTransform) r15;

        r14 = virtualinvoke $r9.<org.jcp.xml.dsig.internal.dom.DOMTransform: javax.xml.crypto.Data transform(javax.xml.crypto.Data,javax.xml.crypto.XMLCryptoContext)>(r14, r1);

        i0 = i0 + 1;

        goto label4;

     label5:
        goto label7;

     label6:
        $r11 := @caughtexception;

        $r12 = new javax.xml.crypto.URIReferenceException;

        specialinvoke $r12.<javax.xml.crypto.URIReferenceException: void <init>(java.lang.Throwable)>($r11);

        throw $r12;

     label7:
        $z0 = r14 instanceof javax.xml.crypto.NodeSetData;

        if $z0 == 0 goto label8;

        $z1 = staticinvoke <org.jcp.xml.dsig.internal.dom.Utils: boolean secureValidation(javax.xml.crypto.XMLCryptoContext)>(r1);

        if $z1 == 0 goto label8;

        r17 = (javax.xml.crypto.NodeSetData) r14;

        r18 = interfaceinvoke r17.<javax.xml.crypto.NodeSetData: java.util.Iterator iterator()>();

        $z2 = interfaceinvoke r18.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label8;

        $r3 = interfaceinvoke r18.<java.util.Iterator: java.lang.Object next()>();

        r19 = (org.w3c.dom.Node) $r3;

        $r4 = "RetrievalMethod";

        $r5 = interfaceinvoke r19.<org.w3c.dom.Node: java.lang.String getLocalName()>();

        $z3 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r5);

        if $z3 == 0 goto label8;

        $r6 = new javax.xml.crypto.URIReferenceException;

        specialinvoke $r6.<javax.xml.crypto.URIReferenceException: void <init>(java.lang.String)>("It is forbidden to have one RetrievalMethod point to another when secure validation is enabled");

        throw $r6;

     label8:
        return r14;

        catch java.lang.Exception from label3 to label5 with label6;
    }

    public javax.xml.crypto.XMLStructure dereferenceAsXMLStructure(javax.xml.crypto.XMLCryptoContext) throws javax.xml.crypto.URIReferenceException
    {
        org.jcp.xml.dsig.internal.dom.DOMRetrievalMethod r0;
        javax.xml.crypto.XMLCryptoContext r1;
        javax.xml.parsers.DocumentBuilderFactory r2;
        javax.xml.parsers.DocumentBuilder r3;
        org.w3c.dom.Document r4;
        org.w3c.dom.Element r5;
        javax.xml.crypto.Data $r6;
        java.lang.Boolean $r7;
        boolean $z0, $z1;
        java.io.ByteArrayInputStream $r8;
        com.sun.org.apache.xml.internal.security.signature.XMLSignatureInput $r9;
        byte[] $r10;
        java.lang.String $r11;
        org.jcp.xml.dsig.internal.dom.DOMX509Data $r12;
        java.lang.Exception $r13;
        javax.xml.crypto.URIReferenceException $r14;
        org.jcp.xml.dsig.internal.dom.ApacheData r15;

        r0 := @this: org.jcp.xml.dsig.internal.dom.DOMRetrievalMethod;

        r1 := @parameter0: javax.xml.crypto.XMLCryptoContext;

     label1:
        $r6 = virtualinvoke r0.<org.jcp.xml.dsig.internal.dom.DOMRetrievalMethod: javax.xml.crypto.Data dereference(javax.xml.crypto.XMLCryptoContext)>(r1);

        r15 = (org.jcp.xml.dsig.internal.dom.ApacheData) $r6;

        r2 = staticinvoke <javax.xml.parsers.DocumentBuilderFactory: javax.xml.parsers.DocumentBuilderFactory newInstance()>();

        virtualinvoke r2.<javax.xml.parsers.DocumentBuilderFactory: void setNamespaceAware(boolean)>(1);

        $r7 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        $z0 = virtualinvoke $r7.<java.lang.Boolean: boolean booleanValue()>();

        virtualinvoke r2.<javax.xml.parsers.DocumentBuilderFactory: void setFeature(java.lang.String,boolean)>("http://javax.xml.XMLConstants/feature/secure-processing", $z0);

        r3 = virtualinvoke r2.<javax.xml.parsers.DocumentBuilderFactory: javax.xml.parsers.DocumentBuilder newDocumentBuilder()>();

        $r8 = new java.io.ByteArrayInputStream;

        $r9 = interfaceinvoke r15.<org.jcp.xml.dsig.internal.dom.ApacheData: com.sun.org.apache.xml.internal.security.signature.XMLSignatureInput getXMLSignatureInput()>();

        $r10 = virtualinvoke $r9.<com.sun.org.apache.xml.internal.security.signature.XMLSignatureInput: byte[] getBytes()>();

        specialinvoke $r8.<java.io.ByteArrayInputStream: void <init>(byte[])>($r10);

        r4 = virtualinvoke r3.<javax.xml.parsers.DocumentBuilder: org.w3c.dom.Document parse(java.io.InputStream)>($r8);

        r5 = interfaceinvoke r4.<org.w3c.dom.Document: org.w3c.dom.Element getDocumentElement()>();

        $r11 = interfaceinvoke r5.<org.w3c.dom.Element: java.lang.String getLocalName()>();

        $z1 = virtualinvoke $r11.<java.lang.String: boolean equals(java.lang.Object)>("X509Data");

        if $z1 == 0 goto label3;

        $r12 = new org.jcp.xml.dsig.internal.dom.DOMX509Data;

        specialinvoke $r12.<org.jcp.xml.dsig.internal.dom.DOMX509Data: void <init>(org.w3c.dom.Element)>(r5);

     label2:
        return $r12;

     label3:
        return null;

     label4:
        $r13 := @caughtexception;

        $r14 = new javax.xml.crypto.URIReferenceException;

        specialinvoke $r14.<javax.xml.crypto.URIReferenceException: void <init>(java.lang.Throwable)>($r13);

        throw $r14;

        catch java.lang.Exception from label1 to label2 with label4;
    }

    public boolean equals(java.lang.Object)
    {
        org.jcp.xml.dsig.internal.dom.DOMRetrievalMethod r0;
        java.lang.Object r1;
        javax.xml.crypto.dsig.keyinfo.RetrievalMethod r2;
        boolean $z1, $z2, $z3, $z4, $z5;
        java.lang.String $r3, $r4, $r5, $r8, $r9, $r10;
        java.util.List $r6, $r7;

        r0 := @this: org.jcp.xml.dsig.internal.dom.DOMRetrievalMethod;

        r1 := @parameter0: java.lang.Object;

        if r0 != r1 goto label1;

        return 1;

     label1:
        $z1 = r1 instanceof javax.xml.crypto.dsig.keyinfo.RetrievalMethod;

        if $z1 != 0 goto label2;

        return 0;

     label2:
        r2 = (javax.xml.crypto.dsig.keyinfo.RetrievalMethod) r1;

        $r3 = r0.<org.jcp.xml.dsig.internal.dom.DOMRetrievalMethod: java.lang.String type>;

        if $r3 != null goto label4;

        $r8 = interfaceinvoke r2.<javax.xml.crypto.dsig.keyinfo.RetrievalMethod: java.lang.String getType()>();

        if $r8 != null goto label3;

        $z3 = 1;

        goto label5;

     label3:
        $z3 = 0;

        goto label5;

     label4:
        $r4 = r0.<org.jcp.xml.dsig.internal.dom.DOMRetrievalMethod: java.lang.String type>;

        $r5 = interfaceinvoke r2.<javax.xml.crypto.dsig.keyinfo.RetrievalMethod: java.lang.String getType()>();

        $z3 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r5);

     label5:
        $r9 = r0.<org.jcp.xml.dsig.internal.dom.DOMRetrievalMethod: java.lang.String uri>;

        $r10 = interfaceinvoke r2.<javax.xml.crypto.dsig.keyinfo.RetrievalMethod: java.lang.String getURI()>();

        $z4 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>($r10);

        if $z4 == 0 goto label6;

        $r6 = r0.<org.jcp.xml.dsig.internal.dom.DOMRetrievalMethod: java.util.List transforms>;

        $r7 = interfaceinvoke r2.<javax.xml.crypto.dsig.keyinfo.RetrievalMethod: java.util.List getTransforms()>();

        $z2 = interfaceinvoke $r6.<java.util.List: boolean equals(java.lang.Object)>($r7);

        if $z2 == 0 goto label6;

        if $z3 == 0 goto label6;

        $z5 = 1;

        goto label7;

     label6:
        $z5 = 0;

     label7:
        return $z5;
    }
}
