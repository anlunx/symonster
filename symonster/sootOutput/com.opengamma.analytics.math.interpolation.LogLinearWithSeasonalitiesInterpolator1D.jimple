public class com.opengamma.analytics.math.interpolation.LogLinearWithSeasonalitiesInterpolator1D extends com.opengamma.analytics.math.interpolation.Interpolator1D
{
    private static final long serialVersionUID;
    private static final int NB_MONTH;
    private final double[] _seasonalValues;

    public void <init>(double[])
    {
        com.opengamma.analytics.math.interpolation.LogLinearWithSeasonalitiesInterpolator1D r0;
        double[] r1, r2;
        int $i0, i1;
        double $d0, $d1, $d2, d3;
        boolean $z0;

        r0 := @this: com.opengamma.analytics.math.interpolation.LogLinearWithSeasonalitiesInterpolator1D;

        r1 := @parameter0: double[];

        specialinvoke r0.<com.opengamma.analytics.math.interpolation.Interpolator1D: void <init>()>();

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object,java.lang.String)>(r1, "Monthly factors");

        $i0 = lengthof r1;

        if $i0 != 11 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        staticinvoke <org.apache.commons.lang.Validate: void isTrue(boolean,java.lang.String)>($z0, "Monthly factors with incorrect length; should be 11");

        d3 = 0.0;

        r2 = newarray (double)[12];

        i1 = 0;

     label3:
        if i1 >= 11 goto label4;

        $d1 = r1[i1];

        r2[i1] = $d1;

        $d2 = r1[i1];

        d3 = d3 + $d2;

        i1 = i1 + 1;

        goto label3;

     label4:
        $d0 = 1.0 - d3;

        r2[11] = $d0;

        r0.<com.opengamma.analytics.math.interpolation.LogLinearWithSeasonalitiesInterpolator1D: double[] _seasonalValues> = r2;

        return;
    }

    public java.lang.Double interpolate(com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle, java.lang.Double)
    {
        com.opengamma.analytics.math.interpolation.LogLinearWithSeasonalitiesInterpolator1D r0;
        com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle r1, r21;
        java.lang.Double r2, r4, r5, r6, r7, $r23;
        com.opengamma.analytics.math.interpolation.data.InterpolationBoundedValues r3;
        double[] r8, r9, $r16;
        double d0, d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20;
        org.apache.commons.math.analysis.UnivariateRealFunction r12;
        int $i0, $i1, $i2, $i3, i4;
        org.apache.commons.math.analysis.solvers.BrentSolver $r14;
        com.opengamma.analytics.math.interpolation.LogLinearWithSeasonalitiesInterpolator1D$1 $r15;
        org.apache.commons.math.MaxIterationsExceededException $r17;
        org.apache.commons.math.FunctionEvaluationException $r18;
        com.opengamma.analytics.math.interpolation.StepInterpolator1D $r22;

        r0 := @this: com.opengamma.analytics.math.interpolation.LogLinearWithSeasonalitiesInterpolator1D;

        r1 := @parameter0: com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle;

        r2 := @parameter1: java.lang.Double;

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object,java.lang.String)>(r2, "value");

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object,java.lang.String)>(r1, "data bundle");

        r3 = interfaceinvoke r1.<com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle: com.opengamma.analytics.math.interpolation.data.InterpolationBoundedValues getBoundedValues(java.lang.Double)>(r2);

        r4 = virtualinvoke r3.<com.opengamma.analytics.math.interpolation.data.InterpolationBoundedValues: java.lang.Double getLowerBoundKey()>();

        r5 = virtualinvoke r3.<com.opengamma.analytics.math.interpolation.data.InterpolationBoundedValues: java.lang.Double getLowerBoundValue()>();

        $i0 = interfaceinvoke r1.<com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle: int getLowerBoundIndex(java.lang.Double)>(r2);

        $i1 = interfaceinvoke r1.<com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle: int size()>();

        $i2 = $i1 - 1;

        if $i0 != $i2 goto label1;

        return r5;

     label1:
        r6 = virtualinvoke r3.<com.opengamma.analytics.math.interpolation.data.InterpolationBoundedValues: java.lang.Double getHigherBoundKey()>();

        r7 = virtualinvoke r3.<com.opengamma.analytics.math.interpolation.data.InterpolationBoundedValues: java.lang.Double getHigherBoundValue()>();

        r8 = newarray (double)[12];

        r9 = newarray (double)[12];

        $d2 = virtualinvoke r4.<java.lang.Double: double doubleValue()>();

        r8[0] = $d2;

        $d3 = virtualinvoke r5.<java.lang.Double: double doubleValue()>();

        r9[0] = $d3;

        $r14 = new org.apache.commons.math.analysis.solvers.BrentSolver;

        specialinvoke $r14.<org.apache.commons.math.analysis.solvers.BrentSolver: void <init>()>();

        $r15 = new com.opengamma.analytics.math.interpolation.LogLinearWithSeasonalitiesInterpolator1D$1;

        specialinvoke $r15.<com.opengamma.analytics.math.interpolation.LogLinearWithSeasonalitiesInterpolator1D$1: void <init>(com.opengamma.analytics.math.interpolation.LogLinearWithSeasonalitiesInterpolator1D,java.lang.Double,java.lang.Double)>(r0, r5, r7);

        $d4 = virtualinvoke r7.<java.lang.Double: double doubleValue()>();

        $d5 = virtualinvoke r5.<java.lang.Double: double doubleValue()>();

        $d6 = $d4 / $d5;

        $d7 = staticinvoke <java.lang.Math: double pow(double,double)>($d6, 0.08333333333333333);

        d0 = $d7 - 1.0;

        r12 = staticinvoke <com.opengamma.analytics.math.util.wrapper.CommonsMathWrapper: org.apache.commons.math.analysis.UnivariateRealFunction wrapUnivariate(com.opengamma.analytics.math.function.Function1D)>($r15);

     label2:
        d1 = virtualinvoke $r14.<org.apache.commons.math.analysis.solvers.BrentSolver: double solve(org.apache.commons.math.analysis.UnivariateRealFunction,double,double,double)>(r12, -0.5, 0.5, d0);

        i4 = 1;

     label3:
        if i4 >= 12 goto label4;

        $d8 = virtualinvoke r4.<java.lang.Double: double doubleValue()>();

        $d9 = (double) i4;

        $d10 = virtualinvoke r6.<java.lang.Double: double doubleValue()>();

        $d11 = virtualinvoke r4.<java.lang.Double: double doubleValue()>();

        $d12 = $d10 - $d11;

        $d13 = $d9 * $d12;

        $d14 = $d13 / 12.0;

        $d15 = $d8 + $d14;

        r8[i4] = $d15;

        $i3 = i4 - 1;

        $d19 = r9[$i3];

        $d17 = 1.0 + d1;

        $r16 = r0.<com.opengamma.analytics.math.interpolation.LogLinearWithSeasonalitiesInterpolator1D: double[] _seasonalValues>;

        $d16 = $r16[i4];

        $d18 = $d17 + $d16;

        $d20 = $d19 * $d18;

        r9[i4] = $d20;

        i4 = i4 + 1;

        goto label3;

     label4:
        goto label7;

     label5:
        $r17 := @caughtexception;

        virtualinvoke $r17.<org.apache.commons.math.MaxIterationsExceededException: void printStackTrace()>();

        goto label7;

     label6:
        $r18 := @caughtexception;

        virtualinvoke $r18.<org.apache.commons.math.FunctionEvaluationException: void printStackTrace()>();

     label7:
        r21 = virtualinvoke r0.<com.opengamma.analytics.math.interpolation.LogLinearWithSeasonalitiesInterpolator1D: com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle getDataBundleFromSortedArrays(double[],double[])>(r8, r9);

        $r22 = new com.opengamma.analytics.math.interpolation.StepInterpolator1D;

        specialinvoke $r22.<com.opengamma.analytics.math.interpolation.StepInterpolator1D: void <init>()>();

        $r23 = virtualinvoke $r22.<com.opengamma.analytics.math.interpolation.StepInterpolator1D: java.lang.Double interpolate(com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle,java.lang.Double)>(r21, r2);

        return $r23;

        catch org.apache.commons.math.MaxIterationsExceededException from label2 to label4 with label5;
        catch org.apache.commons.math.FunctionEvaluationException from label2 to label4 with label6;
    }

    public com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle getDataBundle(double[], double[])
    {
        com.opengamma.analytics.math.interpolation.LogLinearWithSeasonalitiesInterpolator1D r0;
        double[] r1, r2;
        com.opengamma.analytics.math.interpolation.data.ArrayInterpolator1DDataBundle $r3;

        r0 := @this: com.opengamma.analytics.math.interpolation.LogLinearWithSeasonalitiesInterpolator1D;

        r1 := @parameter0: double[];

        r2 := @parameter1: double[];

        $r3 = new com.opengamma.analytics.math.interpolation.data.ArrayInterpolator1DDataBundle;

        specialinvoke $r3.<com.opengamma.analytics.math.interpolation.data.ArrayInterpolator1DDataBundle: void <init>(double[],double[])>(r1, r2);

        return $r3;
    }

    public com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle getDataBundleFromSortedArrays(double[], double[])
    {
        com.opengamma.analytics.math.interpolation.LogLinearWithSeasonalitiesInterpolator1D r0;
        double[] r1, r2;
        com.opengamma.analytics.math.interpolation.data.ArrayInterpolator1DDataBundle $r3;

        r0 := @this: com.opengamma.analytics.math.interpolation.LogLinearWithSeasonalitiesInterpolator1D;

        r1 := @parameter0: double[];

        r2 := @parameter1: double[];

        $r3 = new com.opengamma.analytics.math.interpolation.data.ArrayInterpolator1DDataBundle;

        specialinvoke $r3.<com.opengamma.analytics.math.interpolation.data.ArrayInterpolator1DDataBundle: void <init>(double[],double[],boolean)>(r1, r2, 1);

        return $r3;
    }

    public double[] getNodeSensitivitiesForValue(com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle, java.lang.Double)
    {
        com.opengamma.analytics.math.interpolation.LogLinearWithSeasonalitiesInterpolator1D r0;
        com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle r1;
        java.lang.Double r2;
        double[] $r3;

        r0 := @this: com.opengamma.analytics.math.interpolation.LogLinearWithSeasonalitiesInterpolator1D;

        r1 := @parameter0: com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle;

        r2 := @parameter1: java.lang.Double;

        $r3 = virtualinvoke r0.<com.opengamma.analytics.math.interpolation.LogLinearWithSeasonalitiesInterpolator1D: double[] getFiniteDifferenceSensitivities(com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle,java.lang.Double)>(r1, r2);

        return $r3;
    }

    public volatile java.lang.Double interpolate(java.lang.Object, java.lang.Object)
    {
        com.opengamma.analytics.math.interpolation.LogLinearWithSeasonalitiesInterpolator1D r0;
        java.lang.Object r1, r2;
        java.lang.Double $r3, $r5;
        com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle $r4;

        r0 := @this: com.opengamma.analytics.math.interpolation.LogLinearWithSeasonalitiesInterpolator1D;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r4 = (com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle) r1;

        $r3 = (java.lang.Double) r2;

        $r5 = virtualinvoke r0.<com.opengamma.analytics.math.interpolation.LogLinearWithSeasonalitiesInterpolator1D: java.lang.Double interpolate(com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle,java.lang.Double)>($r4, $r3);

        return $r5;
    }

    static double[] access$000(com.opengamma.analytics.math.interpolation.LogLinearWithSeasonalitiesInterpolator1D)
    {
        com.opengamma.analytics.math.interpolation.LogLinearWithSeasonalitiesInterpolator1D r0;
        double[] $r1;

        r0 := @parameter0: com.opengamma.analytics.math.interpolation.LogLinearWithSeasonalitiesInterpolator1D;

        $r1 = r0.<com.opengamma.analytics.math.interpolation.LogLinearWithSeasonalitiesInterpolator1D: double[] _seasonalValues>;

        return $r1;
    }

    public static void <clinit>()
    {
        <com.opengamma.analytics.math.interpolation.LogLinearWithSeasonalitiesInterpolator1D: int NB_MONTH> = 12;

        <com.opengamma.analytics.math.interpolation.LogLinearWithSeasonalitiesInterpolator1D: long serialVersionUID> = 1L;

        return;
    }
}
