public class com.opengamma.analytics.math.surface.InterpolatedFromCurvesSurfaceAdditiveShiftFunction extends java.lang.Object implements com.opengamma.analytics.math.surface.SurfaceShiftFunction
{

    public void <init>()
    {
        com.opengamma.analytics.math.surface.InterpolatedFromCurvesSurfaceAdditiveShiftFunction r0;

        r0 := @this: com.opengamma.analytics.math.surface.InterpolatedFromCurvesSurfaceAdditiveShiftFunction;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public com.opengamma.analytics.math.surface.InterpolatedFromCurvesDoublesSurface evaluate(com.opengamma.analytics.math.surface.InterpolatedFromCurvesDoublesSurface, double)
    {
        com.opengamma.analytics.math.surface.InterpolatedFromCurvesSurfaceAdditiveShiftFunction r0;
        com.opengamma.analytics.math.surface.InterpolatedFromCurvesDoublesSurface r1, $r7;
        double d0;
        java.lang.StringBuilder $r2, $r3, $r5;
        java.lang.String $r4, $r6;

        r0 := @this: com.opengamma.analytics.math.surface.InterpolatedFromCurvesSurfaceAdditiveShiftFunction;

        r1 := @parameter0: com.opengamma.analytics.math.surface.InterpolatedFromCurvesDoublesSurface;

        d0 := @parameter1: double;

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object,java.lang.String)>(r1, "surface");

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("PARALLEL_SHIFT_");

        $r4 = virtualinvoke r1.<com.opengamma.analytics.math.surface.InterpolatedFromCurvesDoublesSurface: java.lang.String getName()>();

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        $r7 = virtualinvoke r0.<com.opengamma.analytics.math.surface.InterpolatedFromCurvesSurfaceAdditiveShiftFunction: com.opengamma.analytics.math.surface.InterpolatedFromCurvesDoublesSurface evaluate(com.opengamma.analytics.math.surface.InterpolatedFromCurvesDoublesSurface,double,java.lang.String)>(r1, d0, $r6);

        return $r7;
    }

    public com.opengamma.analytics.math.surface.InterpolatedFromCurvesDoublesSurface evaluate(com.opengamma.analytics.math.surface.InterpolatedFromCurvesDoublesSurface, double, java.lang.String)
    {
        com.opengamma.analytics.math.surface.InterpolatedFromCurvesSurfaceAdditiveShiftFunction r0;
        com.opengamma.analytics.math.surface.InterpolatedFromCurvesDoublesSurface r1, $r7;
        double d0;
        java.lang.String r2;
        boolean z0;
        double[] r3;
        com.opengamma.analytics.math.curve.Curve[] r4, r5;
        int i0, $i1, i2;
        com.opengamma.analytics.math.interpolation.Interpolator1D $r6;
        com.opengamma.analytics.math.curve.Curve $r8;
        com.opengamma.analytics.math.curve.DoublesCurve $r9;

        r0 := @this: com.opengamma.analytics.math.surface.InterpolatedFromCurvesSurfaceAdditiveShiftFunction;

        r1 := @parameter0: com.opengamma.analytics.math.surface.InterpolatedFromCurvesDoublesSurface;

        d0 := @parameter1: double;

        r2 := @parameter2: java.lang.String;

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object,java.lang.String)>(r1, "surface");

        z0 = virtualinvoke r1.<com.opengamma.analytics.math.surface.InterpolatedFromCurvesDoublesSurface: boolean isXZCurves()>();

        r3 = virtualinvoke r1.<com.opengamma.analytics.math.surface.InterpolatedFromCurvesDoublesSurface: double[] getPoints()>();

        r4 = virtualinvoke r1.<com.opengamma.analytics.math.surface.InterpolatedFromCurvesDoublesSurface: com.opengamma.analytics.math.curve.Curve[] getCurves()>();

        i0 = lengthof r4;

        $i1 = lengthof r4;

        r5 = newarray (com.opengamma.analytics.math.curve.Curve)[$i1];

        i2 = 0;

     label1:
        if i2 >= i0 goto label2;

        $r8 = r4[i2];

        $r9 = staticinvoke <com.opengamma.analytics.math.curve.CurveShiftFunctionFactory: com.opengamma.analytics.math.curve.DoublesCurve getShiftedCurve(com.opengamma.analytics.math.curve.Curve,double)>($r8, d0);

        r5[i2] = $r9;

        i2 = i2 + 1;

        goto label1;

     label2:
        $r6 = virtualinvoke r1.<com.opengamma.analytics.math.surface.InterpolatedFromCurvesDoublesSurface: com.opengamma.analytics.math.interpolation.Interpolator1D getInterpolator()>();

        $r7 = staticinvoke <com.opengamma.analytics.math.surface.InterpolatedFromCurvesDoublesSurface: com.opengamma.analytics.math.surface.InterpolatedFromCurvesDoublesSurface 'from'(boolean,double[],com.opengamma.analytics.math.curve.Curve[],com.opengamma.analytics.math.interpolation.Interpolator1D,java.lang.String)>(z0, r3, r5, $r6, r2);

        return $r7;
    }

    public com.opengamma.analytics.math.surface.InterpolatedFromCurvesDoublesSurface evaluate(com.opengamma.analytics.math.surface.InterpolatedFromCurvesDoublesSurface, double, double, double)
    {
        com.opengamma.analytics.math.surface.InterpolatedFromCurvesSurfaceAdditiveShiftFunction r0;
        com.opengamma.analytics.math.surface.InterpolatedFromCurvesDoublesSurface r1, $r7;
        double d0, d1, d2;
        java.lang.StringBuilder $r2, $r3, $r5;
        java.lang.String $r4, $r6;

        r0 := @this: com.opengamma.analytics.math.surface.InterpolatedFromCurvesSurfaceAdditiveShiftFunction;

        r1 := @parameter0: com.opengamma.analytics.math.surface.InterpolatedFromCurvesDoublesSurface;

        d0 := @parameter1: double;

        d1 := @parameter2: double;

        d2 := @parameter3: double;

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object,java.lang.String)>(r1, "surface");

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("SINGLE_SHIFT_");

        $r4 = virtualinvoke r1.<com.opengamma.analytics.math.surface.InterpolatedFromCurvesDoublesSurface: java.lang.String getName()>();

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        $r7 = virtualinvoke r0.<com.opengamma.analytics.math.surface.InterpolatedFromCurvesSurfaceAdditiveShiftFunction: com.opengamma.analytics.math.surface.InterpolatedFromCurvesDoublesSurface evaluate(com.opengamma.analytics.math.surface.InterpolatedFromCurvesDoublesSurface,double,double,double,java.lang.String)>(r1, d0, d1, d2, $r6);

        return $r7;
    }

    public com.opengamma.analytics.math.surface.InterpolatedFromCurvesDoublesSurface evaluate(com.opengamma.analytics.math.surface.InterpolatedFromCurvesDoublesSurface, double, double, double, java.lang.String)
    {
        com.opengamma.analytics.math.surface.InterpolatedFromCurvesSurfaceAdditiveShiftFunction r0;
        com.opengamma.analytics.math.surface.InterpolatedFromCurvesDoublesSurface r1, $r14, $r25;
        double d0, d1, d2;
        java.lang.String r2, $r8, $r19;
        boolean z0;
        double[] r3;
        java.lang.UnsupportedOperationException $r4, $r15;
        java.lang.StringBuilder $r5, $r6, $r7, $r16, $r17, $r18;
        com.opengamma.analytics.math.curve.Curve[] $r9, $r20, r26, r27, r28, r29;
        int $i0, $i1, i2, i3;
        java.lang.Object[] $r10, $r21;
        com.opengamma.analytics.math.curve.Curve $r11, $r22;
        com.opengamma.analytics.math.curve.DoublesCurve $r12, $r23;
        com.opengamma.analytics.math.interpolation.Interpolator1D $r13, $r24;

        r0 := @this: com.opengamma.analytics.math.surface.InterpolatedFromCurvesSurfaceAdditiveShiftFunction;

        r1 := @parameter0: com.opengamma.analytics.math.surface.InterpolatedFromCurvesDoublesSurface;

        d0 := @parameter1: double;

        d1 := @parameter2: double;

        d2 := @parameter3: double;

        r2 := @parameter4: java.lang.String;

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object,java.lang.String)>(r1, "surface");

        z0 = virtualinvoke r1.<com.opengamma.analytics.math.surface.InterpolatedFromCurvesDoublesSurface: boolean isXZCurves()>();

        r3 = virtualinvoke r1.<com.opengamma.analytics.math.surface.InterpolatedFromCurvesDoublesSurface: double[] getPoints()>();

        if z0 == 0 goto label2;

        i2 = staticinvoke <java.util.Arrays: int binarySearch(double[],double)>(r3, d1);

        r26 = virtualinvoke r1.<com.opengamma.analytics.math.surface.InterpolatedFromCurvesDoublesSurface: com.opengamma.analytics.math.curve.Curve[] getCurves()>();

        if i2 < 0 goto label1;

        $r20 = virtualinvoke r1.<com.opengamma.analytics.math.surface.InterpolatedFromCurvesDoublesSurface: com.opengamma.analytics.math.curve.Curve[] getCurves()>();

        $i1 = lengthof r3;

        $r21 = staticinvoke <java.util.Arrays: java.lang.Object[] copyOf(java.lang.Object[],int)>($r20, $i1);

        r27 = (com.opengamma.analytics.math.curve.Curve[]) $r21;

        $r22 = r26[i2];

        $r23 = staticinvoke <com.opengamma.analytics.math.curve.CurveShiftFunctionFactory: com.opengamma.analytics.math.curve.DoublesCurve getShiftedCurve(com.opengamma.analytics.math.curve.Curve,double,double)>($r22, d0, d2);

        r27[i2] = $r23;

        $r24 = virtualinvoke r1.<com.opengamma.analytics.math.surface.InterpolatedFromCurvesDoublesSurface: com.opengamma.analytics.math.interpolation.Interpolator1D getInterpolator()>();

        $r25 = staticinvoke <com.opengamma.analytics.math.surface.InterpolatedFromCurvesDoublesSurface: com.opengamma.analytics.math.surface.InterpolatedFromCurvesDoublesSurface fromSorted(boolean,double[],com.opengamma.analytics.math.curve.Curve[],com.opengamma.analytics.math.interpolation.Interpolator1D,java.lang.String)>(z0, r3, r27, $r24, r2);

        return $r25;

     label1:
        $r15 = new java.lang.UnsupportedOperationException;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot get shift for y-value not in original list of curves: asked for ");

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>(d1);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r15.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>($r19);

        throw $r15;

     label2:
        i3 = staticinvoke <java.util.Arrays: int binarySearch(double[],double)>(r3, d0);

        r28 = virtualinvoke r1.<com.opengamma.analytics.math.surface.InterpolatedFromCurvesDoublesSurface: com.opengamma.analytics.math.curve.Curve[] getCurves()>();

        if i3 < 0 goto label3;

        $r9 = virtualinvoke r1.<com.opengamma.analytics.math.surface.InterpolatedFromCurvesDoublesSurface: com.opengamma.analytics.math.curve.Curve[] getCurves()>();

        $i0 = lengthof r3;

        $r10 = staticinvoke <java.util.Arrays: java.lang.Object[] copyOf(java.lang.Object[],int)>($r9, $i0);

        r29 = (com.opengamma.analytics.math.curve.Curve[]) $r10;

        $r11 = r28[i3];

        $r12 = staticinvoke <com.opengamma.analytics.math.curve.CurveShiftFunctionFactory: com.opengamma.analytics.math.curve.DoublesCurve getShiftedCurve(com.opengamma.analytics.math.curve.Curve,double,double)>($r11, d1, d2);

        r29[i3] = $r12;

        $r13 = virtualinvoke r1.<com.opengamma.analytics.math.surface.InterpolatedFromCurvesDoublesSurface: com.opengamma.analytics.math.interpolation.Interpolator1D getInterpolator()>();

        $r14 = staticinvoke <com.opengamma.analytics.math.surface.InterpolatedFromCurvesDoublesSurface: com.opengamma.analytics.math.surface.InterpolatedFromCurvesDoublesSurface fromSorted(boolean,double[],com.opengamma.analytics.math.curve.Curve[],com.opengamma.analytics.math.interpolation.Interpolator1D,java.lang.String)>(z0, r3, r29, $r13, r2);

        return $r14;

     label3:
        $r4 = new java.lang.UnsupportedOperationException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot get shift for x-value not in original list of curves: asked for ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>(d0);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>($r8);

        throw $r4;
    }

    public com.opengamma.analytics.math.surface.InterpolatedFromCurvesDoublesSurface evaluate(com.opengamma.analytics.math.surface.InterpolatedFromCurvesDoublesSurface, double[], double[], double[])
    {
        com.opengamma.analytics.math.surface.InterpolatedFromCurvesSurfaceAdditiveShiftFunction r0;
        com.opengamma.analytics.math.surface.InterpolatedFromCurvesDoublesSurface r1, $r10;
        double[] r2, r3, r4;
        java.lang.StringBuilder $r5, $r6, $r8;
        java.lang.String $r7, $r9;

        r0 := @this: com.opengamma.analytics.math.surface.InterpolatedFromCurvesSurfaceAdditiveShiftFunction;

        r1 := @parameter0: com.opengamma.analytics.math.surface.InterpolatedFromCurvesDoublesSurface;

        r2 := @parameter1: double[];

        r3 := @parameter2: double[];

        r4 := @parameter3: double[];

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object,java.lang.String)>(r1, "surface");

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("MULTIPLE_SHIFT_");

        $r7 = virtualinvoke r1.<com.opengamma.analytics.math.surface.InterpolatedFromCurvesDoublesSurface: java.lang.String getName()>();

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        $r10 = virtualinvoke r0.<com.opengamma.analytics.math.surface.InterpolatedFromCurvesSurfaceAdditiveShiftFunction: com.opengamma.analytics.math.surface.InterpolatedFromCurvesDoublesSurface evaluate(com.opengamma.analytics.math.surface.InterpolatedFromCurvesDoublesSurface,double[],double[],double[],java.lang.String)>(r1, r2, r3, r4, $r9);

        return $r10;
    }

    public com.opengamma.analytics.math.surface.InterpolatedFromCurvesDoublesSurface evaluate(com.opengamma.analytics.math.surface.InterpolatedFromCurvesDoublesSurface, double[], double[], double[], java.lang.String)
    {
        com.opengamma.analytics.math.surface.InterpolatedFromCurvesSurfaceAdditiveShiftFunction r0;
        com.opengamma.analytics.math.surface.InterpolatedFromCurvesDoublesSurface r1, $r10, $r21, $r32;
        double[] r2, r3, r4, r6, $r29;
        java.lang.String r5, $r15, $r26;
        int i0, $i1, $i2, $i3, $i4, i5, i6, i7, i8;
        boolean z0, $z1, $z2, z3, z4;
        com.opengamma.analytics.math.curve.Curve[] $r7, $r18, $r30, r33, r34;
        java.lang.Object[] $r8, $r19;
        com.opengamma.analytics.math.interpolation.Interpolator1D $r9, $r20, $r31;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7;
        java.lang.UnsupportedOperationException $r11, $r22;
        java.lang.StringBuilder $r12, $r13, $r14, $r23, $r24, $r25;
        com.opengamma.analytics.math.curve.Curve $r16, $r27;
        com.opengamma.analytics.math.curve.DoublesCurve $r17, $r28;

        r0 := @this: com.opengamma.analytics.math.surface.InterpolatedFromCurvesSurfaceAdditiveShiftFunction;

        r1 := @parameter0: com.opengamma.analytics.math.surface.InterpolatedFromCurvesDoublesSurface;

        r2 := @parameter1: double[];

        r3 := @parameter2: double[];

        r4 := @parameter3: double[];

        r5 := @parameter4: java.lang.String;

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object,java.lang.String)>(r1, "surface");

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object,java.lang.String)>(r2, "x shifts");

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object,java.lang.String)>(r3, "y shifts");

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object,java.lang.String)>(r4, "shifts");

        i0 = lengthof r2;

        if i0 != 0 goto label01;

        $z1 = virtualinvoke r1.<com.opengamma.analytics.math.surface.InterpolatedFromCurvesDoublesSurface: boolean isXZCurves()>();

        $r29 = virtualinvoke r1.<com.opengamma.analytics.math.surface.InterpolatedFromCurvesDoublesSurface: double[] getPoints()>();

        $r30 = virtualinvoke r1.<com.opengamma.analytics.math.surface.InterpolatedFromCurvesDoublesSurface: com.opengamma.analytics.math.curve.Curve[] getCurves()>();

        $r31 = virtualinvoke r1.<com.opengamma.analytics.math.surface.InterpolatedFromCurvesDoublesSurface: com.opengamma.analytics.math.interpolation.Interpolator1D getInterpolator()>();

        $r32 = staticinvoke <com.opengamma.analytics.math.surface.InterpolatedFromCurvesDoublesSurface: com.opengamma.analytics.math.surface.InterpolatedFromCurvesDoublesSurface 'from'(boolean,double[],com.opengamma.analytics.math.curve.Curve[],com.opengamma.analytics.math.interpolation.Interpolator1D,java.lang.String)>($z1, $r29, $r30, $r31, r5);

        return $r32;

     label01:
        $i1 = lengthof r3;

        if i0 != $i1 goto label02;

        $i4 = lengthof r4;

        if i0 != $i4 goto label02;

        $z2 = 1;

        goto label03;

     label02:
        $z2 = 0;

     label03:
        staticinvoke <org.apache.commons.lang.Validate: void isTrue(boolean)>($z2);

        z0 = virtualinvoke r1.<com.opengamma.analytics.math.surface.InterpolatedFromCurvesDoublesSurface: boolean isXZCurves()>();

        r6 = virtualinvoke r1.<com.opengamma.analytics.math.surface.InterpolatedFromCurvesDoublesSurface: double[] getPoints()>();

        if z0 == 0 goto label08;

        $r18 = virtualinvoke r1.<com.opengamma.analytics.math.surface.InterpolatedFromCurvesDoublesSurface: com.opengamma.analytics.math.curve.Curve[] getCurves()>();

        $i3 = lengthof r6;

        $r19 = staticinvoke <java.util.Arrays: java.lang.Object[] copyOf(java.lang.Object[],int)>($r18, $i3);

        r33 = (com.opengamma.analytics.math.curve.Curve[]) $r19;

        i5 = 0;

     label04:
        if i5 >= i0 goto label07;

        $d4 = r3[i5];

        i6 = staticinvoke <java.util.Arrays: int binarySearch(double[],double)>(r6, $d4);

        z3 = 0;

        if i6 < 0 goto label05;

        $r27 = r33[i6];

        $d7 = r2[i5];

        $d6 = r4[i5];

        $r28 = staticinvoke <com.opengamma.analytics.math.curve.CurveShiftFunctionFactory: com.opengamma.analytics.math.curve.DoublesCurve getShiftedCurve(com.opengamma.analytics.math.curve.Curve,double,double)>($r27, $d7, $d6);

        r33[i6] = $r28;

        z3 = 1;

     label05:
        if z3 != 0 goto label06;

        $r22 = new java.lang.UnsupportedOperationException;

        $r23 = new java.lang.StringBuilder;

        specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot get shift for y-value not in original list of curves: asked for ");

        $d5 = r3[i5];

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d5);

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r22.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>($r26);

        throw $r22;

     label06:
        i5 = i5 + 1;

        goto label04;

     label07:
        $r20 = virtualinvoke r1.<com.opengamma.analytics.math.surface.InterpolatedFromCurvesDoublesSurface: com.opengamma.analytics.math.interpolation.Interpolator1D getInterpolator()>();

        $r21 = staticinvoke <com.opengamma.analytics.math.surface.InterpolatedFromCurvesDoublesSurface: com.opengamma.analytics.math.surface.InterpolatedFromCurvesDoublesSurface fromSorted(boolean,double[],com.opengamma.analytics.math.curve.Curve[],com.opengamma.analytics.math.interpolation.Interpolator1D,java.lang.String)>(z0, r6, r33, $r20, r5);

        return $r21;

     label08:
        $r7 = virtualinvoke r1.<com.opengamma.analytics.math.surface.InterpolatedFromCurvesDoublesSurface: com.opengamma.analytics.math.curve.Curve[] getCurves()>();

        $i2 = lengthof r6;

        $r8 = staticinvoke <java.util.Arrays: java.lang.Object[] copyOf(java.lang.Object[],int)>($r7, $i2);

        r34 = (com.opengamma.analytics.math.curve.Curve[]) $r8;

        i7 = 0;

     label09:
        if i7 >= i0 goto label12;

        $d0 = r2[i7];

        i8 = staticinvoke <java.util.Arrays: int binarySearch(double[],double)>(r6, $d0);

        z4 = 0;

        if i8 < 0 goto label10;

        $r16 = r34[i8];

        $d3 = r3[i7];

        $d2 = r4[i7];

        $r17 = staticinvoke <com.opengamma.analytics.math.curve.CurveShiftFunctionFactory: com.opengamma.analytics.math.curve.DoublesCurve getShiftedCurve(com.opengamma.analytics.math.curve.Curve,double,double)>($r16, $d3, $d2);

        r34[i8] = $r17;

        z4 = 1;

     label10:
        if z4 != 0 goto label11;

        $r11 = new java.lang.UnsupportedOperationException;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot get shift for x-value not in original list of curves: asked for ");

        $d1 = r2[i7];

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d1);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r11.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>($r15);

        throw $r11;

     label11:
        i7 = i7 + 1;

        goto label09;

     label12:
        $r9 = virtualinvoke r1.<com.opengamma.analytics.math.surface.InterpolatedFromCurvesDoublesSurface: com.opengamma.analytics.math.interpolation.Interpolator1D getInterpolator()>();

        $r10 = staticinvoke <com.opengamma.analytics.math.surface.InterpolatedFromCurvesDoublesSurface: com.opengamma.analytics.math.surface.InterpolatedFromCurvesDoublesSurface fromSorted(boolean,double[],com.opengamma.analytics.math.curve.Curve[],com.opengamma.analytics.math.interpolation.Interpolator1D,java.lang.String)>(z0, r6, r34, $r9, r5);

        return $r10;
    }

    public volatile com.opengamma.analytics.math.surface.Surface evaluate(com.opengamma.analytics.math.surface.Surface, double[], double[], double[], java.lang.String)
    {
        com.opengamma.analytics.math.surface.InterpolatedFromCurvesSurfaceAdditiveShiftFunction r0;
        com.opengamma.analytics.math.surface.Surface r1;
        double[] r2, r3, r4;
        java.lang.String r5;
        com.opengamma.analytics.math.surface.InterpolatedFromCurvesDoublesSurface $r6, $r7;

        r0 := @this: com.opengamma.analytics.math.surface.InterpolatedFromCurvesSurfaceAdditiveShiftFunction;

        r1 := @parameter0: com.opengamma.analytics.math.surface.Surface;

        r2 := @parameter1: double[];

        r3 := @parameter2: double[];

        r4 := @parameter3: double[];

        r5 := @parameter4: java.lang.String;

        $r6 = (com.opengamma.analytics.math.surface.InterpolatedFromCurvesDoublesSurface) r1;

        $r7 = virtualinvoke r0.<com.opengamma.analytics.math.surface.InterpolatedFromCurvesSurfaceAdditiveShiftFunction: com.opengamma.analytics.math.surface.InterpolatedFromCurvesDoublesSurface evaluate(com.opengamma.analytics.math.surface.InterpolatedFromCurvesDoublesSurface,double[],double[],double[],java.lang.String)>($r6, r2, r3, r4, r5);

        return $r7;
    }

    public volatile com.opengamma.analytics.math.surface.Surface evaluate(com.opengamma.analytics.math.surface.Surface, double[], double[], double[])
    {
        com.opengamma.analytics.math.surface.InterpolatedFromCurvesSurfaceAdditiveShiftFunction r0;
        com.opengamma.analytics.math.surface.Surface r1;
        double[] r2, r3, r4;
        com.opengamma.analytics.math.surface.InterpolatedFromCurvesDoublesSurface $r5, $r6;

        r0 := @this: com.opengamma.analytics.math.surface.InterpolatedFromCurvesSurfaceAdditiveShiftFunction;

        r1 := @parameter0: com.opengamma.analytics.math.surface.Surface;

        r2 := @parameter1: double[];

        r3 := @parameter2: double[];

        r4 := @parameter3: double[];

        $r5 = (com.opengamma.analytics.math.surface.InterpolatedFromCurvesDoublesSurface) r1;

        $r6 = virtualinvoke r0.<com.opengamma.analytics.math.surface.InterpolatedFromCurvesSurfaceAdditiveShiftFunction: com.opengamma.analytics.math.surface.InterpolatedFromCurvesDoublesSurface evaluate(com.opengamma.analytics.math.surface.InterpolatedFromCurvesDoublesSurface,double[],double[],double[])>($r5, r2, r3, r4);

        return $r6;
    }

    public volatile com.opengamma.analytics.math.surface.Surface evaluate(com.opengamma.analytics.math.surface.Surface, double, double, double, java.lang.String)
    {
        com.opengamma.analytics.math.surface.InterpolatedFromCurvesSurfaceAdditiveShiftFunction r0;
        com.opengamma.analytics.math.surface.Surface r1;
        double d0, d1, d2;
        java.lang.String r2;
        com.opengamma.analytics.math.surface.InterpolatedFromCurvesDoublesSurface $r3, $r4;

        r0 := @this: com.opengamma.analytics.math.surface.InterpolatedFromCurvesSurfaceAdditiveShiftFunction;

        r1 := @parameter0: com.opengamma.analytics.math.surface.Surface;

        d0 := @parameter1: double;

        d1 := @parameter2: double;

        d2 := @parameter3: double;

        r2 := @parameter4: java.lang.String;

        $r3 = (com.opengamma.analytics.math.surface.InterpolatedFromCurvesDoublesSurface) r1;

        $r4 = virtualinvoke r0.<com.opengamma.analytics.math.surface.InterpolatedFromCurvesSurfaceAdditiveShiftFunction: com.opengamma.analytics.math.surface.InterpolatedFromCurvesDoublesSurface evaluate(com.opengamma.analytics.math.surface.InterpolatedFromCurvesDoublesSurface,double,double,double,java.lang.String)>($r3, d0, d1, d2, r2);

        return $r4;
    }

    public volatile com.opengamma.analytics.math.surface.Surface evaluate(com.opengamma.analytics.math.surface.Surface, double, double, double)
    {
        com.opengamma.analytics.math.surface.InterpolatedFromCurvesSurfaceAdditiveShiftFunction r0;
        com.opengamma.analytics.math.surface.Surface r1;
        double d0, d1, d2;
        com.opengamma.analytics.math.surface.InterpolatedFromCurvesDoublesSurface $r2, $r3;

        r0 := @this: com.opengamma.analytics.math.surface.InterpolatedFromCurvesSurfaceAdditiveShiftFunction;

        r1 := @parameter0: com.opengamma.analytics.math.surface.Surface;

        d0 := @parameter1: double;

        d1 := @parameter2: double;

        d2 := @parameter3: double;

        $r2 = (com.opengamma.analytics.math.surface.InterpolatedFromCurvesDoublesSurface) r1;

        $r3 = virtualinvoke r0.<com.opengamma.analytics.math.surface.InterpolatedFromCurvesSurfaceAdditiveShiftFunction: com.opengamma.analytics.math.surface.InterpolatedFromCurvesDoublesSurface evaluate(com.opengamma.analytics.math.surface.InterpolatedFromCurvesDoublesSurface,double,double,double)>($r2, d0, d1, d2);

        return $r3;
    }

    public volatile com.opengamma.analytics.math.surface.Surface evaluate(com.opengamma.analytics.math.surface.Surface, double, java.lang.String)
    {
        com.opengamma.analytics.math.surface.InterpolatedFromCurvesSurfaceAdditiveShiftFunction r0;
        com.opengamma.analytics.math.surface.Surface r1;
        double d0;
        java.lang.String r2;
        com.opengamma.analytics.math.surface.InterpolatedFromCurvesDoublesSurface $r3, $r4;

        r0 := @this: com.opengamma.analytics.math.surface.InterpolatedFromCurvesSurfaceAdditiveShiftFunction;

        r1 := @parameter0: com.opengamma.analytics.math.surface.Surface;

        d0 := @parameter1: double;

        r2 := @parameter2: java.lang.String;

        $r3 = (com.opengamma.analytics.math.surface.InterpolatedFromCurvesDoublesSurface) r1;

        $r4 = virtualinvoke r0.<com.opengamma.analytics.math.surface.InterpolatedFromCurvesSurfaceAdditiveShiftFunction: com.opengamma.analytics.math.surface.InterpolatedFromCurvesDoublesSurface evaluate(com.opengamma.analytics.math.surface.InterpolatedFromCurvesDoublesSurface,double,java.lang.String)>($r3, d0, r2);

        return $r4;
    }

    public volatile com.opengamma.analytics.math.surface.Surface evaluate(com.opengamma.analytics.math.surface.Surface, double)
    {
        com.opengamma.analytics.math.surface.InterpolatedFromCurvesSurfaceAdditiveShiftFunction r0;
        com.opengamma.analytics.math.surface.Surface r1;
        double d0;
        com.opengamma.analytics.math.surface.InterpolatedFromCurvesDoublesSurface $r2, $r3;

        r0 := @this: com.opengamma.analytics.math.surface.InterpolatedFromCurvesSurfaceAdditiveShiftFunction;

        r1 := @parameter0: com.opengamma.analytics.math.surface.Surface;

        d0 := @parameter1: double;

        $r2 = (com.opengamma.analytics.math.surface.InterpolatedFromCurvesDoublesSurface) r1;

        $r3 = virtualinvoke r0.<com.opengamma.analytics.math.surface.InterpolatedFromCurvesSurfaceAdditiveShiftFunction: com.opengamma.analytics.math.surface.InterpolatedFromCurvesDoublesSurface evaluate(com.opengamma.analytics.math.surface.InterpolatedFromCurvesDoublesSurface,double)>($r2, d0);

        return $r3;
    }
}
