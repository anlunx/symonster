public class com.opengamma.analytics.financial.interestrate.SwaptionSurfaceSensitivityNodeCalculator extends java.lang.Object
{

    public void <init>()
    {
        com.opengamma.analytics.financial.interestrate.SwaptionSurfaceSensitivityNodeCalculator r0;

        r0 := @this: com.opengamma.analytics.financial.interestrate.SwaptionSurfaceSensitivityNodeCalculator;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public com.opengamma.analytics.financial.interestrate.sensitivity.PresentValueSwaptionSurfaceSensitivity calculateNodeSensitivities(com.opengamma.analytics.financial.interestrate.sensitivity.PresentValueSwaptionSurfaceSensitivity, com.opengamma.analytics.financial.provider.description.interestrate.SwaptionSurfaceProvider)
    {
        com.opengamma.analytics.financial.interestrate.SwaptionSurfaceSensitivityNodeCalculator r0;
        com.opengamma.analytics.financial.interestrate.sensitivity.PresentValueSwaptionSurfaceSensitivity r1, $r19;
        com.opengamma.analytics.financial.provider.description.interestrate.SwaptionSurfaceProvider r2;
        com.opengamma.analytics.math.surface.InterpolatedDoublesSurface r3;
        java.util.Map r4, r8;
        com.opengamma.analytics.math.interpolation.Interpolator2D r5;
        java.util.Iterator r6;
        java.util.Map$Entry r7;
        com.opengamma.analytics.financial.instrument.index.GeneratorInstrument $r11, $r12, $r20;
        boolean $z0, $z1, $z2;
        com.opengamma.analytics.math.surface.Surface $r13, $r14;
        com.opengamma.analytics.util.amount.SurfaceValue $r15, $r16, $r24, $r27, r28;
        java.util.HashMap $r17;
        java.util.Set $r18;
        java.lang.Object $r21, $r22, $r25;
        com.opengamma.util.tuple.DoublesPair $r23;
        java.lang.Double $r26;
        double $d0;

        r0 := @this: com.opengamma.analytics.financial.interestrate.SwaptionSurfaceSensitivityNodeCalculator;

        r1 := @parameter0: com.opengamma.analytics.financial.interestrate.sensitivity.PresentValueSwaptionSurfaceSensitivity;

        r2 := @parameter1: com.opengamma.analytics.financial.provider.description.interestrate.SwaptionSurfaceProvider;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "Black swaption sensitivities");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, "Black swaption parameters");

        $r11 = interfaceinvoke r2.<com.opengamma.analytics.financial.provider.description.interestrate.SwaptionSurfaceProvider: com.opengamma.analytics.financial.instrument.index.GeneratorInstrument getGeneratorSwap()>();

        $r12 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.sensitivity.PresentValueSwaptionSurfaceSensitivity: com.opengamma.analytics.financial.instrument.index.GeneratorInstrument getGeneratorSwap()>();

        $z0 = virtualinvoke $r11.<com.opengamma.analytics.financial.instrument.index.GeneratorInstrument: boolean equals(java.lang.Object)>($r12);

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z0, "Sensitivities and parameters should refer to the same swap generator");

        $r13 = interfaceinvoke r2.<com.opengamma.analytics.financial.provider.description.interestrate.SwaptionSurfaceProvider: com.opengamma.analytics.math.surface.Surface getParameterSurface()>();

        $z1 = $r13 instanceof com.opengamma.analytics.math.surface.InterpolatedDoublesSurface;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z1, "Can only calculate node sensitivities for interpolated double surfaces");

        $r14 = interfaceinvoke r2.<com.opengamma.analytics.financial.provider.description.interestrate.SwaptionSurfaceProvider: com.opengamma.analytics.math.surface.Surface getParameterSurface()>();

        r3 = (com.opengamma.analytics.math.surface.InterpolatedDoublesSurface) $r14;

        r4 = virtualinvoke r3.<com.opengamma.analytics.math.surface.InterpolatedDoublesSurface: java.util.Map getInterpolatorData()>();

        r5 = virtualinvoke r3.<com.opengamma.analytics.math.surface.InterpolatedDoublesSurface: com.opengamma.analytics.math.interpolation.Interpolator2D getInterpolator()>();

        $r15 = new com.opengamma.analytics.util.amount.SurfaceValue;

        specialinvoke $r15.<com.opengamma.analytics.util.amount.SurfaceValue: void <init>()>();

        r28 = $r15;

        $r16 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.sensitivity.PresentValueSwaptionSurfaceSensitivity: com.opengamma.analytics.util.amount.SurfaceValue getSensitivity()>();

        $r17 = virtualinvoke $r16.<com.opengamma.analytics.util.amount.SurfaceValue: java.util.HashMap getMap()>();

        $r18 = virtualinvoke $r17.<java.util.HashMap: java.util.Set entrySet()>();

        r6 = interfaceinvoke $r18.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z2 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label2;

        $r21 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>();

        r7 = (java.util.Map$Entry) $r21;

        $r22 = interfaceinvoke r7.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r23 = (com.opengamma.util.tuple.DoublesPair) $r22;

        r8 = virtualinvoke r5.<com.opengamma.analytics.math.interpolation.Interpolator2D: java.util.Map getNodeSensitivitiesForValue(java.util.Map,com.opengamma.util.tuple.DoublesPair)>(r4, $r23);

        $r24 = staticinvoke <com.opengamma.analytics.util.amount.SurfaceValue: com.opengamma.analytics.util.amount.SurfaceValue 'from'(java.util.Map)>(r8);

        $r25 = interfaceinvoke r7.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r26 = (java.lang.Double) $r25;

        $d0 = virtualinvoke $r26.<java.lang.Double: double doubleValue()>();

        $r27 = staticinvoke <com.opengamma.analytics.util.amount.SurfaceValue: com.opengamma.analytics.util.amount.SurfaceValue multiplyBy(com.opengamma.analytics.util.amount.SurfaceValue,double)>($r24, $d0);

        r28 = staticinvoke <com.opengamma.analytics.util.amount.SurfaceValue: com.opengamma.analytics.util.amount.SurfaceValue plus(com.opengamma.analytics.util.amount.SurfaceValue,com.opengamma.analytics.util.amount.SurfaceValue)>(r28, $r27);

        goto label1;

     label2:
        $r19 = new com.opengamma.analytics.financial.interestrate.sensitivity.PresentValueSwaptionSurfaceSensitivity;

        $r20 = interfaceinvoke r2.<com.opengamma.analytics.financial.provider.description.interestrate.SwaptionSurfaceProvider: com.opengamma.analytics.financial.instrument.index.GeneratorInstrument getGeneratorSwap()>();

        specialinvoke $r19.<com.opengamma.analytics.financial.interestrate.sensitivity.PresentValueSwaptionSurfaceSensitivity: void <init>(com.opengamma.analytics.util.amount.SurfaceValue,com.opengamma.analytics.financial.instrument.index.GeneratorInstrument)>(r28, $r20);

        return $r19;
    }
}
