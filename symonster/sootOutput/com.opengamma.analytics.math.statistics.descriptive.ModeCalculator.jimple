public class com.opengamma.analytics.math.statistics.descriptive.ModeCalculator extends com.opengamma.analytics.math.function.Function1D
{
    private static final double EPS;

    public void <init>()
    {
        com.opengamma.analytics.math.statistics.descriptive.ModeCalculator r0;

        r0 := @this: com.opengamma.analytics.math.statistics.descriptive.ModeCalculator;

        specialinvoke r0.<com.opengamma.analytics.math.function.Function1D: void <init>()>();

        return;
    }

    public java.lang.Double evaluate(double[])
    {
        com.opengamma.analytics.math.statistics.descriptive.ModeCalculator r0;
        double[] r1, r2;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i7, i8, i9;
        java.util.TreeMap $r5;
        java.lang.Object $r6, $r9;
        java.lang.Integer $r7, $r12;
        java.util.Map$Entry $r8;
        java.lang.Double $r10, $r13, $r15;
        com.opengamma.analytics.math.MathException $r11;
        double $d0, $d1, $d2, $d3, $d4, $d5;
        byte $b6;
        boolean $z0;

        r0 := @this: com.opengamma.analytics.math.statistics.descriptive.ModeCalculator;

        r1 := @parameter0: double[];

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "x");

        $i0 = lengthof r1;

        if $i0 <= 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z0, "x cannot be empty");

        $i1 = lengthof r1;

        if $i1 != 1 goto label3;

        $d5 = r1[0];

        $r15 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d5);

        return $r15;

     label3:
        $i2 = lengthof r1;

        r2 = staticinvoke <java.util.Arrays: double[] copyOf(double[],int)>(r1, $i2);

        staticinvoke <java.util.Arrays: void sort(double[])>(r2);

        $r5 = new java.util.TreeMap;

        specialinvoke $r5.<java.util.TreeMap: void <init>()>();

        i8 = 1;

        i9 = 1;

     label4:
        $i3 = lengthof r2;

        if i9 >= $i3 goto label7;

        $d1 = r2[i9];

        $i5 = i9 - 1;

        $d0 = r2[$i5];

        $d2 = $d1 - $d0;

        $d3 = staticinvoke <java.lang.Math: double abs(double)>($d2);

        $b6 = $d3 cmpg 1.0E-16;

        if $b6 >= 0 goto label5;

        i8 = i8 + 1;

        goto label6;

     label5:
        $r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i8);

        $i7 = i9 - 1;

        $d4 = r2[$i7];

        $r13 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d4);

        virtualinvoke $r5.<java.util.TreeMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r12, $r13);

        i8 = 1;

     label6:
        i9 = i9 + 1;

        goto label4;

     label7:
        $r6 = virtualinvoke $r5.<java.util.TreeMap: java.lang.Object lastKey()>();

        $r7 = (java.lang.Integer) $r6;

        $i4 = virtualinvoke $r7.<java.lang.Integer: int intValue()>();

        if $i4 != 1 goto label8;

        $r11 = new com.opengamma.analytics.math.MathException;

        specialinvoke $r11.<com.opengamma.analytics.math.MathException: void <init>(java.lang.String)>("Could not find mode for array; no repeated values");

        throw $r11;

     label8:
        $r8 = virtualinvoke $r5.<java.util.TreeMap: java.util.Map$Entry lastEntry()>();

        $r9 = interfaceinvoke $r8.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r10 = (java.lang.Double) $r9;

        return $r10;
    }

    public volatile java.lang.Object evaluate(java.lang.Object)
    {
        com.opengamma.analytics.math.statistics.descriptive.ModeCalculator r0;
        java.lang.Object r1;
        double[] $r2;
        java.lang.Double $r3;

        r0 := @this: com.opengamma.analytics.math.statistics.descriptive.ModeCalculator;

        r1 := @parameter0: java.lang.Object;

        $r2 = (double[]) r1;

        $r3 = virtualinvoke r0.<com.opengamma.analytics.math.statistics.descriptive.ModeCalculator: java.lang.Double evaluate(double[])>($r2);

        return $r3;
    }

    public static void <clinit>()
    {
        <com.opengamma.analytics.math.statistics.descriptive.ModeCalculator: double EPS> = 1.0E-16;

        return;
    }
}
