public class com.opengamma.analytics.financial.credit.util.CreditMarketDataUtils extends java.lang.Object
{
    private static final double TOLERANCE;

    public void <init>()
    {
        com.opengamma.analytics.financial.credit.util.CreditMarketDataUtils r0;

        r0 := @this: com.opengamma.analytics.financial.credit.util.CreditMarketDataUtils;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static void checkSpreadData(org.threeten.bp.ZonedDateTime, org.threeten.bp.ZonedDateTime[], double[])
    {
        org.threeten.bp.ZonedDateTime r0, $r9, $r11, $r14, $r15, $r16, $r19;
        org.threeten.bp.ZonedDateTime[] r1;
        double[] r2;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, i7;
        java.lang.Object[] $r6, $r10, $r12, $r17;
        java.lang.Integer $r7, $r8;
        boolean $z0, $z1, $z2;
        double $d0, $d1, $d3, $d4;
        java.lang.Double $r13, $r18;

        r0 := @parameter0: org.threeten.bp.ZonedDateTime;

        r1 := @parameter1: org.threeten.bp.ZonedDateTime[];

        r2 := @parameter2: double[];

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r0, "valuation date");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "market dates");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, "market spreads");

        $i1 = lengthof r1;

        $i0 = lengthof r2;

        if $i1 != $i0 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        $r6 = newarray (java.lang.Object)[2];

        $i2 = lengthof r1;

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        $r6[0] = $r7;

        $i3 = lengthof r2;

        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3);

        $r6[1] = $r8;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String,java.lang.Object[])>($z2, "Number of dates {} and spreads {} should be equal", $r6);

        $r9 = r1[0];

        $z0 = virtualinvoke $r9.<org.threeten.bp.ZonedDateTime: boolean isAfter(org.threeten.bp.chrono.ChronoZonedDateTime)>(r0);

        $r10 = newarray (java.lang.Object)[2];

        $r11 = r1[0];

        $r10[0] = $r11;

        $r10[1] = r0;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String,java.lang.Object[])>($z0, "Calibration instrument of tenor {} is before the valuation date {}", $r10);

        $d1 = r2[0];

        $r12 = newarray (java.lang.Object)[2];

        $d0 = r2[0];

        $r13 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        $r12[0] = $r13;

        $r14 = r1[0];

        $r12[1] = $r14;

        staticinvoke <com.opengamma.util.ArgumentChecker: double notNegativeOrZero(double,double,java.lang.String,java.lang.Object[])>($d1, 1.0E-15, "Market spread ({}) for date {}", $r12);

        $i4 = lengthof r1;

        if $i4 <= 1 goto label4;

        i7 = 1;

     label3:
        $i5 = lengthof r1;

        if i7 >= $i5 goto label4;

        $r16 = r1[i7];

        $i6 = i7 - 1;

        $r15 = r1[$i6];

        $z1 = virtualinvoke $r16.<org.threeten.bp.ZonedDateTime: boolean isAfter(org.threeten.bp.chrono.ChronoZonedDateTime)>($r15);

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z1, "Dates not in ascending order");

        $d4 = r2[i7];

        $r17 = newarray (java.lang.Object)[2];

        $d3 = r2[i7];

        $r18 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d3);

        $r17[0] = $r18;

        $r19 = r1[i7];

        $r17[1] = $r19;

        staticinvoke <com.opengamma.util.ArgumentChecker: double notNegativeOrZero(double,double,java.lang.String,java.lang.Object[])>($d4, 1.0E-15, "Market spread ({}) for date {}", $r17);

        i7 = i7 + 1;

        goto label3;

     label4:
        return;
    }

    public static void <clinit>()
    {
        <com.opengamma.analytics.financial.credit.util.CreditMarketDataUtils: double TOLERANCE> = 1.0E-15;

        return;
    }
}
