public class org.apache.commons.math.genetics.RandomKeyMutation extends java.lang.Object implements org.apache.commons.math.genetics.MutationPolicy
{

    public void <init>()
    {
        org.apache.commons.math.genetics.RandomKeyMutation r0;

        r0 := @this: org.apache.commons.math.genetics.RandomKeyMutation;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public org.apache.commons.math.genetics.Chromosome mutate(org.apache.commons.math.genetics.Chromosome)
    {
        org.apache.commons.math.genetics.RandomKeyMutation r0;
        org.apache.commons.math.genetics.Chromosome r1;
        org.apache.commons.math.genetics.RandomKey r2;
        java.util.List r3;
        int i0, $i1;
        boolean $z0;
        org.apache.commons.math.random.RandomGenerator $r5, $r7;
        java.util.ArrayList $r6;
        double $d0;
        java.lang.Double $r8;
        org.apache.commons.math.genetics.AbstractListChromosome $r10;
        java.lang.Object[] $r11;
        org.apache.commons.math.exception.util.LocalizedFormats $r12;
        java.lang.Class $r13;
        java.lang.String $r14;
        java.lang.IllegalArgumentException $r15;

        r0 := @this: org.apache.commons.math.genetics.RandomKeyMutation;

        r1 := @parameter0: org.apache.commons.math.genetics.Chromosome;

        $z0 = r1 instanceof org.apache.commons.math.genetics.RandomKey;

        if $z0 != 0 goto label1;

        $r12 = <org.apache.commons.math.exception.util.LocalizedFormats: org.apache.commons.math.exception.util.LocalizedFormats RANDOMKEY_MUTATION_WRONG_CLASS>;

        $r11 = newarray (java.lang.Object)[1];

        $r13 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        $r14 = virtualinvoke $r13.<java.lang.Class: java.lang.String getSimpleName()>();

        $r11[0] = $r14;

        $r15 = staticinvoke <org.apache.commons.math.MathRuntimeException: java.lang.IllegalArgumentException createIllegalArgumentException(org.apache.commons.math.exception.util.Localizable,java.lang.Object[])>($r12, $r11);

        throw $r15;

     label1:
        r2 = (org.apache.commons.math.genetics.RandomKey) r1;

        r3 = virtualinvoke r2.<org.apache.commons.math.genetics.RandomKey: java.util.List getRepresentation()>();

        $r5 = staticinvoke <org.apache.commons.math.genetics.GeneticAlgorithm: org.apache.commons.math.random.RandomGenerator getRandomGenerator()>();

        $i1 = interfaceinvoke r3.<java.util.List: int size()>();

        i0 = interfaceinvoke $r5.<org.apache.commons.math.random.RandomGenerator: int nextInt(int)>($i1);

        $r6 = new java.util.ArrayList;

        specialinvoke $r6.<java.util.ArrayList: void <init>(java.util.Collection)>(r3);

        $r7 = staticinvoke <org.apache.commons.math.genetics.GeneticAlgorithm: org.apache.commons.math.random.RandomGenerator getRandomGenerator()>();

        $d0 = interfaceinvoke $r7.<org.apache.commons.math.random.RandomGenerator: double nextDouble()>();

        $r8 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        interfaceinvoke $r6.<java.util.List: java.lang.Object set(int,java.lang.Object)>(i0, $r8);

        $r10 = virtualinvoke r2.<org.apache.commons.math.genetics.RandomKey: org.apache.commons.math.genetics.AbstractListChromosome newFixedLengthChromosome(java.util.List)>($r6);

        return $r10;
    }
}
