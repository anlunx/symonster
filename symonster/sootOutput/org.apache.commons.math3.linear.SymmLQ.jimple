public class org.apache.commons.math3.linear.SymmLQ extends org.apache.commons.math3.linear.PreconditionedIterativeLinearSolver
{
    private static final java.lang.String OPERATOR;
    private static final java.lang.String THRESHOLD;
    private static final java.lang.String VECTOR;
    private static final java.lang.String VECTOR1;
    private static final java.lang.String VECTOR2;
    private final boolean check;
    private final double delta;

    public void <init>(int, double, boolean)
    {
        org.apache.commons.math3.linear.SymmLQ r0;
        int i0;
        double d0;
        boolean z0;

        r0 := @this: org.apache.commons.math3.linear.SymmLQ;

        i0 := @parameter0: int;

        d0 := @parameter1: double;

        z0 := @parameter2: boolean;

        specialinvoke r0.<org.apache.commons.math3.linear.PreconditionedIterativeLinearSolver: void <init>(int)>(i0);

        r0.<org.apache.commons.math3.linear.SymmLQ: double delta> = d0;

        r0.<org.apache.commons.math3.linear.SymmLQ: boolean check> = z0;

        return;
    }

    public void <init>(org.apache.commons.math3.util.IterationManager, double, boolean)
    {
        org.apache.commons.math3.linear.SymmLQ r0;
        org.apache.commons.math3.util.IterationManager r1;
        double d0;
        boolean z0;

        r0 := @this: org.apache.commons.math3.linear.SymmLQ;

        r1 := @parameter0: org.apache.commons.math3.util.IterationManager;

        d0 := @parameter1: double;

        z0 := @parameter2: boolean;

        specialinvoke r0.<org.apache.commons.math3.linear.PreconditionedIterativeLinearSolver: void <init>(org.apache.commons.math3.util.IterationManager)>(r1);

        r0.<org.apache.commons.math3.linear.SymmLQ: double delta> = d0;

        r0.<org.apache.commons.math3.linear.SymmLQ: boolean check> = z0;

        return;
    }

    public final boolean getCheck()
    {
        org.apache.commons.math3.linear.SymmLQ r0;
        boolean $z0;

        r0 := @this: org.apache.commons.math3.linear.SymmLQ;

        $z0 = r0.<org.apache.commons.math3.linear.SymmLQ: boolean check>;

        return $z0;
    }

    public org.apache.commons.math3.linear.RealVector solve(org.apache.commons.math3.linear.RealLinearOperator, org.apache.commons.math3.linear.RealLinearOperator, org.apache.commons.math3.linear.RealVector) throws org.apache.commons.math3.exception.NullArgumentException, org.apache.commons.math3.linear.NonSquareOperatorException, org.apache.commons.math3.exception.DimensionMismatchException, org.apache.commons.math3.exception.MaxCountExceededException, org.apache.commons.math3.linear.NonSelfAdjointOperatorException, org.apache.commons.math3.linear.NonPositiveDefiniteOperatorException, org.apache.commons.math3.linear.IllConditionedOperatorException
    {
        org.apache.commons.math3.linear.SymmLQ r0;
        org.apache.commons.math3.linear.RealLinearOperator r1, r2;
        org.apache.commons.math3.linear.RealVector r3, $r6;
        org.apache.commons.math3.linear.ArrayRealVector $r5;
        int $i0;

        r0 := @this: org.apache.commons.math3.linear.SymmLQ;

        r1 := @parameter0: org.apache.commons.math3.linear.RealLinearOperator;

        r2 := @parameter1: org.apache.commons.math3.linear.RealLinearOperator;

        r3 := @parameter2: org.apache.commons.math3.linear.RealVector;

        staticinvoke <org.apache.commons.math3.util.MathUtils: void checkNotNull(java.lang.Object)>(r1);

        $r5 = new org.apache.commons.math3.linear.ArrayRealVector;

        $i0 = virtualinvoke r1.<org.apache.commons.math3.linear.RealLinearOperator: int getColumnDimension()>();

        specialinvoke $r5.<org.apache.commons.math3.linear.ArrayRealVector: void <init>(int)>($i0);

        $r6 = virtualinvoke r0.<org.apache.commons.math3.linear.SymmLQ: org.apache.commons.math3.linear.RealVector solveInPlace(org.apache.commons.math3.linear.RealLinearOperator,org.apache.commons.math3.linear.RealLinearOperator,org.apache.commons.math3.linear.RealVector,org.apache.commons.math3.linear.RealVector,boolean,double)>(r1, r2, r3, $r5, 0, 0.0);

        return $r6;
    }

    public org.apache.commons.math3.linear.RealVector solve(org.apache.commons.math3.linear.RealLinearOperator, org.apache.commons.math3.linear.RealLinearOperator, org.apache.commons.math3.linear.RealVector, boolean, double) throws org.apache.commons.math3.exception.NullArgumentException, org.apache.commons.math3.linear.NonSquareOperatorException, org.apache.commons.math3.exception.DimensionMismatchException, org.apache.commons.math3.exception.MaxCountExceededException, org.apache.commons.math3.linear.NonSelfAdjointOperatorException, org.apache.commons.math3.linear.NonPositiveDefiniteOperatorException, org.apache.commons.math3.linear.IllConditionedOperatorException
    {
        org.apache.commons.math3.linear.SymmLQ r0;
        org.apache.commons.math3.linear.RealLinearOperator r1, r2;
        org.apache.commons.math3.linear.RealVector r3, $r6;
        boolean z0;
        double d0;
        org.apache.commons.math3.linear.ArrayRealVector $r5;
        int $i0;

        r0 := @this: org.apache.commons.math3.linear.SymmLQ;

        r1 := @parameter0: org.apache.commons.math3.linear.RealLinearOperator;

        r2 := @parameter1: org.apache.commons.math3.linear.RealLinearOperator;

        r3 := @parameter2: org.apache.commons.math3.linear.RealVector;

        z0 := @parameter3: boolean;

        d0 := @parameter4: double;

        staticinvoke <org.apache.commons.math3.util.MathUtils: void checkNotNull(java.lang.Object)>(r1);

        $r5 = new org.apache.commons.math3.linear.ArrayRealVector;

        $i0 = virtualinvoke r1.<org.apache.commons.math3.linear.RealLinearOperator: int getColumnDimension()>();

        specialinvoke $r5.<org.apache.commons.math3.linear.ArrayRealVector: void <init>(int)>($i0);

        $r6 = virtualinvoke r0.<org.apache.commons.math3.linear.SymmLQ: org.apache.commons.math3.linear.RealVector solveInPlace(org.apache.commons.math3.linear.RealLinearOperator,org.apache.commons.math3.linear.RealLinearOperator,org.apache.commons.math3.linear.RealVector,org.apache.commons.math3.linear.RealVector,boolean,double)>(r1, r2, r3, $r5, z0, d0);

        return $r6;
    }

    public org.apache.commons.math3.linear.RealVector solve(org.apache.commons.math3.linear.RealLinearOperator, org.apache.commons.math3.linear.RealLinearOperator, org.apache.commons.math3.linear.RealVector, org.apache.commons.math3.linear.RealVector) throws org.apache.commons.math3.exception.NullArgumentException, org.apache.commons.math3.linear.NonSquareOperatorException, org.apache.commons.math3.exception.DimensionMismatchException, org.apache.commons.math3.linear.NonSelfAdjointOperatorException, org.apache.commons.math3.linear.NonPositiveDefiniteOperatorException, org.apache.commons.math3.linear.IllConditionedOperatorException, org.apache.commons.math3.exception.MaxCountExceededException
    {
        org.apache.commons.math3.linear.SymmLQ r0;
        org.apache.commons.math3.linear.RealLinearOperator r1, r2;
        org.apache.commons.math3.linear.RealVector r3, r4, $r5, $r6;

        r0 := @this: org.apache.commons.math3.linear.SymmLQ;

        r1 := @parameter0: org.apache.commons.math3.linear.RealLinearOperator;

        r2 := @parameter1: org.apache.commons.math3.linear.RealLinearOperator;

        r3 := @parameter2: org.apache.commons.math3.linear.RealVector;

        r4 := @parameter3: org.apache.commons.math3.linear.RealVector;

        staticinvoke <org.apache.commons.math3.util.MathUtils: void checkNotNull(java.lang.Object)>(r4);

        $r5 = virtualinvoke r4.<org.apache.commons.math3.linear.RealVector: org.apache.commons.math3.linear.RealVector copy()>();

        $r6 = virtualinvoke r0.<org.apache.commons.math3.linear.SymmLQ: org.apache.commons.math3.linear.RealVector solveInPlace(org.apache.commons.math3.linear.RealLinearOperator,org.apache.commons.math3.linear.RealLinearOperator,org.apache.commons.math3.linear.RealVector,org.apache.commons.math3.linear.RealVector,boolean,double)>(r1, r2, r3, $r5, 0, 0.0);

        return $r6;
    }

    public org.apache.commons.math3.linear.RealVector solve(org.apache.commons.math3.linear.RealLinearOperator, org.apache.commons.math3.linear.RealVector) throws org.apache.commons.math3.exception.NullArgumentException, org.apache.commons.math3.linear.NonSquareOperatorException, org.apache.commons.math3.exception.DimensionMismatchException, org.apache.commons.math3.linear.NonSelfAdjointOperatorException, org.apache.commons.math3.linear.IllConditionedOperatorException, org.apache.commons.math3.exception.MaxCountExceededException
    {
        org.apache.commons.math3.linear.SymmLQ r0;
        org.apache.commons.math3.linear.RealLinearOperator r1;
        org.apache.commons.math3.linear.RealVector r2, $r5;
        org.apache.commons.math3.linear.ArrayRealVector $r4;
        int $i0;

        r0 := @this: org.apache.commons.math3.linear.SymmLQ;

        r1 := @parameter0: org.apache.commons.math3.linear.RealLinearOperator;

        r2 := @parameter1: org.apache.commons.math3.linear.RealVector;

        staticinvoke <org.apache.commons.math3.util.MathUtils: void checkNotNull(java.lang.Object)>(r1);

        $r4 = new org.apache.commons.math3.linear.ArrayRealVector;

        $i0 = virtualinvoke r1.<org.apache.commons.math3.linear.RealLinearOperator: int getColumnDimension()>();

        specialinvoke $r4.<org.apache.commons.math3.linear.ArrayRealVector: void <init>(int)>($i0);

        virtualinvoke $r4.<org.apache.commons.math3.linear.RealVector: void set(double)>(0.0);

        $r5 = virtualinvoke r0.<org.apache.commons.math3.linear.SymmLQ: org.apache.commons.math3.linear.RealVector solveInPlace(org.apache.commons.math3.linear.RealLinearOperator,org.apache.commons.math3.linear.RealLinearOperator,org.apache.commons.math3.linear.RealVector,org.apache.commons.math3.linear.RealVector,boolean,double)>(r1, null, r2, $r4, 0, 0.0);

        return $r5;
    }

    public org.apache.commons.math3.linear.RealVector solve(org.apache.commons.math3.linear.RealLinearOperator, org.apache.commons.math3.linear.RealVector, boolean, double) throws org.apache.commons.math3.exception.NullArgumentException, org.apache.commons.math3.linear.NonSquareOperatorException, org.apache.commons.math3.exception.DimensionMismatchException, org.apache.commons.math3.linear.NonSelfAdjointOperatorException, org.apache.commons.math3.linear.IllConditionedOperatorException, org.apache.commons.math3.exception.MaxCountExceededException
    {
        org.apache.commons.math3.linear.SymmLQ r0;
        org.apache.commons.math3.linear.RealLinearOperator r1;
        org.apache.commons.math3.linear.RealVector r2, $r5;
        boolean z0;
        double d0;
        org.apache.commons.math3.linear.ArrayRealVector $r4;
        int $i0;

        r0 := @this: org.apache.commons.math3.linear.SymmLQ;

        r1 := @parameter0: org.apache.commons.math3.linear.RealLinearOperator;

        r2 := @parameter1: org.apache.commons.math3.linear.RealVector;

        z0 := @parameter2: boolean;

        d0 := @parameter3: double;

        staticinvoke <org.apache.commons.math3.util.MathUtils: void checkNotNull(java.lang.Object)>(r1);

        $r4 = new org.apache.commons.math3.linear.ArrayRealVector;

        $i0 = virtualinvoke r1.<org.apache.commons.math3.linear.RealLinearOperator: int getColumnDimension()>();

        specialinvoke $r4.<org.apache.commons.math3.linear.ArrayRealVector: void <init>(int)>($i0);

        $r5 = virtualinvoke r0.<org.apache.commons.math3.linear.SymmLQ: org.apache.commons.math3.linear.RealVector solveInPlace(org.apache.commons.math3.linear.RealLinearOperator,org.apache.commons.math3.linear.RealLinearOperator,org.apache.commons.math3.linear.RealVector,org.apache.commons.math3.linear.RealVector,boolean,double)>(r1, null, r2, $r4, z0, d0);

        return $r5;
    }

    public org.apache.commons.math3.linear.RealVector solve(org.apache.commons.math3.linear.RealLinearOperator, org.apache.commons.math3.linear.RealVector, org.apache.commons.math3.linear.RealVector) throws org.apache.commons.math3.exception.NullArgumentException, org.apache.commons.math3.linear.NonSquareOperatorException, org.apache.commons.math3.exception.DimensionMismatchException, org.apache.commons.math3.linear.NonSelfAdjointOperatorException, org.apache.commons.math3.linear.IllConditionedOperatorException, org.apache.commons.math3.exception.MaxCountExceededException
    {
        org.apache.commons.math3.linear.SymmLQ r0;
        org.apache.commons.math3.linear.RealLinearOperator r1;
        org.apache.commons.math3.linear.RealVector r2, r3, $r4, $r5;

        r0 := @this: org.apache.commons.math3.linear.SymmLQ;

        r1 := @parameter0: org.apache.commons.math3.linear.RealLinearOperator;

        r2 := @parameter1: org.apache.commons.math3.linear.RealVector;

        r3 := @parameter2: org.apache.commons.math3.linear.RealVector;

        staticinvoke <org.apache.commons.math3.util.MathUtils: void checkNotNull(java.lang.Object)>(r3);

        $r4 = virtualinvoke r3.<org.apache.commons.math3.linear.RealVector: org.apache.commons.math3.linear.RealVector copy()>();

        $r5 = virtualinvoke r0.<org.apache.commons.math3.linear.SymmLQ: org.apache.commons.math3.linear.RealVector solveInPlace(org.apache.commons.math3.linear.RealLinearOperator,org.apache.commons.math3.linear.RealLinearOperator,org.apache.commons.math3.linear.RealVector,org.apache.commons.math3.linear.RealVector,boolean,double)>(r1, null, r2, $r4, 0, 0.0);

        return $r5;
    }

    public org.apache.commons.math3.linear.RealVector solveInPlace(org.apache.commons.math3.linear.RealLinearOperator, org.apache.commons.math3.linear.RealLinearOperator, org.apache.commons.math3.linear.RealVector, org.apache.commons.math3.linear.RealVector) throws org.apache.commons.math3.exception.NullArgumentException, org.apache.commons.math3.linear.NonSquareOperatorException, org.apache.commons.math3.exception.DimensionMismatchException, org.apache.commons.math3.linear.NonSelfAdjointOperatorException, org.apache.commons.math3.linear.NonPositiveDefiniteOperatorException, org.apache.commons.math3.linear.IllConditionedOperatorException, org.apache.commons.math3.exception.MaxCountExceededException
    {
        org.apache.commons.math3.linear.SymmLQ r0;
        org.apache.commons.math3.linear.RealLinearOperator r1, r2;
        org.apache.commons.math3.linear.RealVector r3, r4, $r5;

        r0 := @this: org.apache.commons.math3.linear.SymmLQ;

        r1 := @parameter0: org.apache.commons.math3.linear.RealLinearOperator;

        r2 := @parameter1: org.apache.commons.math3.linear.RealLinearOperator;

        r3 := @parameter2: org.apache.commons.math3.linear.RealVector;

        r4 := @parameter3: org.apache.commons.math3.linear.RealVector;

        $r5 = virtualinvoke r0.<org.apache.commons.math3.linear.SymmLQ: org.apache.commons.math3.linear.RealVector solveInPlace(org.apache.commons.math3.linear.RealLinearOperator,org.apache.commons.math3.linear.RealLinearOperator,org.apache.commons.math3.linear.RealVector,org.apache.commons.math3.linear.RealVector,boolean,double)>(r1, r2, r3, r4, 0, 0.0);

        return $r5;
    }

    public org.apache.commons.math3.linear.RealVector solveInPlace(org.apache.commons.math3.linear.RealLinearOperator, org.apache.commons.math3.linear.RealLinearOperator, org.apache.commons.math3.linear.RealVector, org.apache.commons.math3.linear.RealVector, boolean, double) throws org.apache.commons.math3.exception.NullArgumentException, org.apache.commons.math3.linear.NonSquareOperatorException, org.apache.commons.math3.exception.DimensionMismatchException, org.apache.commons.math3.linear.NonSelfAdjointOperatorException, org.apache.commons.math3.linear.NonPositiveDefiniteOperatorException, org.apache.commons.math3.linear.IllConditionedOperatorException, org.apache.commons.math3.exception.MaxCountExceededException
    {
        org.apache.commons.math3.linear.SymmLQ r0;
        org.apache.commons.math3.linear.RealLinearOperator r1, r2;
        org.apache.commons.math3.linear.RealVector r3, r4;
        boolean z0, $z2, $z3, $z4, $z5, $z6, $z7;
        double d0, $d1, $d2, $d3, $d4, $d5;
        org.apache.commons.math3.util.IterationManager r5;
        org.apache.commons.math3.linear.SymmLQ$State $r7;
        org.apache.commons.math3.linear.DefaultIterativeLinearSolverEvent $r8, $r9, $r10, $r11;
        int $i0, $i1, $i2, $i3;

        r0 := @this: org.apache.commons.math3.linear.SymmLQ;

        r1 := @parameter0: org.apache.commons.math3.linear.RealLinearOperator;

        r2 := @parameter1: org.apache.commons.math3.linear.RealLinearOperator;

        r3 := @parameter2: org.apache.commons.math3.linear.RealVector;

        r4 := @parameter3: org.apache.commons.math3.linear.RealVector;

        z0 := @parameter4: boolean;

        d0 := @parameter5: double;

        staticinvoke <org.apache.commons.math3.linear.SymmLQ: void checkParameters(org.apache.commons.math3.linear.RealLinearOperator,org.apache.commons.math3.linear.RealLinearOperator,org.apache.commons.math3.linear.RealVector,org.apache.commons.math3.linear.RealVector)>(r1, r2, r3, r4);

        r5 = virtualinvoke r0.<org.apache.commons.math3.linear.SymmLQ: org.apache.commons.math3.util.IterationManager getIterationManager()>();

        virtualinvoke r5.<org.apache.commons.math3.util.IterationManager: void resetIterationCount()>();

        virtualinvoke r5.<org.apache.commons.math3.util.IterationManager: void incrementIterationCount()>();

        $r7 = new org.apache.commons.math3.linear.SymmLQ$State;

        $d1 = r0.<org.apache.commons.math3.linear.SymmLQ: double delta>;

        $z2 = r0.<org.apache.commons.math3.linear.SymmLQ: boolean check>;

        specialinvoke $r7.<org.apache.commons.math3.linear.SymmLQ$State: void <init>(org.apache.commons.math3.linear.RealLinearOperator,org.apache.commons.math3.linear.RealLinearOperator,org.apache.commons.math3.linear.RealVector,boolean,double,double,boolean)>(r1, r2, r3, z0, d0, $d1, $z2);

        virtualinvoke $r7.<org.apache.commons.math3.linear.SymmLQ$State: void init()>();

        virtualinvoke $r7.<org.apache.commons.math3.linear.SymmLQ$State: void refineSolution(org.apache.commons.math3.linear.RealVector)>(r4);

        $r8 = new org.apache.commons.math3.linear.DefaultIterativeLinearSolverEvent;

        $i0 = virtualinvoke r5.<org.apache.commons.math3.util.IterationManager: int getIterations()>();

        $d2 = virtualinvoke $r7.<org.apache.commons.math3.linear.SymmLQ$State: double getNormOfResidual()>();

        specialinvoke $r8.<org.apache.commons.math3.linear.DefaultIterativeLinearSolverEvent: void <init>(java.lang.Object,int,org.apache.commons.math3.linear.RealVector,org.apache.commons.math3.linear.RealVector,double)>(r0, $i0, r4, r3, $d2);

        $z3 = virtualinvoke $r7.<org.apache.commons.math3.linear.SymmLQ$State: boolean bEqualsNullVector()>();

        if $z3 == 0 goto label1;

        virtualinvoke r5.<org.apache.commons.math3.util.IterationManager: void fireTerminationEvent(org.apache.commons.math3.util.IterationEvent)>($r8);

        return r4;

     label1:
        $z4 = virtualinvoke $r7.<org.apache.commons.math3.linear.SymmLQ$State: boolean betaEqualsZero()>();

        if $z4 != 0 goto label2;

        $z6 = virtualinvoke $r7.<org.apache.commons.math3.linear.SymmLQ$State: boolean hasConverged()>();

        if $z6 == 0 goto label3;

     label2:
        $z7 = 1;

        goto label4;

     label3:
        $z7 = 0;

     label4:
        virtualinvoke r5.<org.apache.commons.math3.util.IterationManager: void fireInitializationEvent(org.apache.commons.math3.util.IterationEvent)>($r8);

        if $z7 != 0 goto label6;

     label5:
        virtualinvoke r5.<org.apache.commons.math3.util.IterationManager: void incrementIterationCount()>();

        $r10 = new org.apache.commons.math3.linear.DefaultIterativeLinearSolverEvent;

        $i2 = virtualinvoke r5.<org.apache.commons.math3.util.IterationManager: int getIterations()>();

        $d4 = virtualinvoke $r7.<org.apache.commons.math3.linear.SymmLQ$State: double getNormOfResidual()>();

        specialinvoke $r10.<org.apache.commons.math3.linear.DefaultIterativeLinearSolverEvent: void <init>(java.lang.Object,int,org.apache.commons.math3.linear.RealVector,org.apache.commons.math3.linear.RealVector,double)>(r0, $i2, r4, r3, $d4);

        virtualinvoke r5.<org.apache.commons.math3.util.IterationManager: void fireIterationStartedEvent(org.apache.commons.math3.util.IterationEvent)>($r10);

        virtualinvoke $r7.<org.apache.commons.math3.linear.SymmLQ$State: void update()>();

        virtualinvoke $r7.<org.apache.commons.math3.linear.SymmLQ$State: void refineSolution(org.apache.commons.math3.linear.RealVector)>(r4);

        $r11 = new org.apache.commons.math3.linear.DefaultIterativeLinearSolverEvent;

        $i3 = virtualinvoke r5.<org.apache.commons.math3.util.IterationManager: int getIterations()>();

        $d5 = virtualinvoke $r7.<org.apache.commons.math3.linear.SymmLQ$State: double getNormOfResidual()>();

        specialinvoke $r11.<org.apache.commons.math3.linear.DefaultIterativeLinearSolverEvent: void <init>(java.lang.Object,int,org.apache.commons.math3.linear.RealVector,org.apache.commons.math3.linear.RealVector,double)>(r0, $i3, r4, r3, $d5);

        virtualinvoke r5.<org.apache.commons.math3.util.IterationManager: void fireIterationPerformedEvent(org.apache.commons.math3.util.IterationEvent)>($r11);

        $z5 = virtualinvoke $r7.<org.apache.commons.math3.linear.SymmLQ$State: boolean hasConverged()>();

        if $z5 == 0 goto label5;

     label6:
        $r9 = new org.apache.commons.math3.linear.DefaultIterativeLinearSolverEvent;

        $i1 = virtualinvoke r5.<org.apache.commons.math3.util.IterationManager: int getIterations()>();

        $d3 = virtualinvoke $r7.<org.apache.commons.math3.linear.SymmLQ$State: double getNormOfResidual()>();

        specialinvoke $r9.<org.apache.commons.math3.linear.DefaultIterativeLinearSolverEvent: void <init>(java.lang.Object,int,org.apache.commons.math3.linear.RealVector,org.apache.commons.math3.linear.RealVector,double)>(r0, $i1, r4, r3, $d3);

        virtualinvoke r5.<org.apache.commons.math3.util.IterationManager: void fireTerminationEvent(org.apache.commons.math3.util.IterationEvent)>($r9);

        return r4;
    }

    public org.apache.commons.math3.linear.RealVector solveInPlace(org.apache.commons.math3.linear.RealLinearOperator, org.apache.commons.math3.linear.RealVector, org.apache.commons.math3.linear.RealVector) throws org.apache.commons.math3.exception.NullArgumentException, org.apache.commons.math3.linear.NonSquareOperatorException, org.apache.commons.math3.exception.DimensionMismatchException, org.apache.commons.math3.linear.NonSelfAdjointOperatorException, org.apache.commons.math3.linear.IllConditionedOperatorException, org.apache.commons.math3.exception.MaxCountExceededException
    {
        org.apache.commons.math3.linear.SymmLQ r0;
        org.apache.commons.math3.linear.RealLinearOperator r1;
        org.apache.commons.math3.linear.RealVector r2, r3, $r4;

        r0 := @this: org.apache.commons.math3.linear.SymmLQ;

        r1 := @parameter0: org.apache.commons.math3.linear.RealLinearOperator;

        r2 := @parameter1: org.apache.commons.math3.linear.RealVector;

        r3 := @parameter2: org.apache.commons.math3.linear.RealVector;

        $r4 = virtualinvoke r0.<org.apache.commons.math3.linear.SymmLQ: org.apache.commons.math3.linear.RealVector solveInPlace(org.apache.commons.math3.linear.RealLinearOperator,org.apache.commons.math3.linear.RealLinearOperator,org.apache.commons.math3.linear.RealVector,org.apache.commons.math3.linear.RealVector,boolean,double)>(r1, null, r2, r3, 0, 0.0);

        return $r4;
    }

    public static void <clinit>()
    {
        <org.apache.commons.math3.linear.SymmLQ: java.lang.String VECTOR2> = "vector2";

        <org.apache.commons.math3.linear.SymmLQ: java.lang.String VECTOR1> = "vector1";

        <org.apache.commons.math3.linear.SymmLQ: java.lang.String VECTOR> = "vector";

        <org.apache.commons.math3.linear.SymmLQ: java.lang.String THRESHOLD> = "threshold";

        <org.apache.commons.math3.linear.SymmLQ: java.lang.String OPERATOR> = "operator";

        return;
    }
}
