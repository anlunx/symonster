class org.apache.commons.math3.linear.FieldLUDecomposition$Solver extends java.lang.Object implements org.apache.commons.math3.linear.FieldDecompositionSolver
{
    private final org.apache.commons.math3.Field field;
    private final org.apache.commons.math3.FieldElement[][] lu;
    private final int[] pivot;
    private final boolean singular;

    private void <init>(org.apache.commons.math3.Field, org.apache.commons.math3.FieldElement[][], int[], boolean)
    {
        org.apache.commons.math3.linear.FieldLUDecomposition$Solver r0;
        org.apache.commons.math3.Field r1;
        org.apache.commons.math3.FieldElement[][] r2;
        int[] r3;
        boolean z0;

        r0 := @this: org.apache.commons.math3.linear.FieldLUDecomposition$Solver;

        r1 := @parameter0: org.apache.commons.math3.Field;

        r2 := @parameter1: org.apache.commons.math3.FieldElement[][];

        r3 := @parameter2: int[];

        z0 := @parameter3: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.commons.math3.linear.FieldLUDecomposition$Solver: org.apache.commons.math3.Field field> = r1;

        r0.<org.apache.commons.math3.linear.FieldLUDecomposition$Solver: org.apache.commons.math3.FieldElement[][] lu> = r2;

        r0.<org.apache.commons.math3.linear.FieldLUDecomposition$Solver: int[] pivot> = r3;

        r0.<org.apache.commons.math3.linear.FieldLUDecomposition$Solver: boolean singular> = z0;

        return;
    }

    public boolean isNonSingular()
    {
        org.apache.commons.math3.linear.FieldLUDecomposition$Solver r0;
        boolean $z0, $z1;

        r0 := @this: org.apache.commons.math3.linear.FieldLUDecomposition$Solver;

        $z0 = r0.<org.apache.commons.math3.linear.FieldLUDecomposition$Solver: boolean singular>;

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }

    public org.apache.commons.math3.linear.FieldVector solve(org.apache.commons.math3.linear.FieldVector)
    {
        org.apache.commons.math3.linear.FieldLUDecomposition$Solver r0;
        org.apache.commons.math3.linear.FieldVector r1;
        int i0, $i1, $i2, $i3, i4, i5, i6, i7, i8;
        org.apache.commons.math3.FieldElement[] r3, $r13, $r19, $r26;
        org.apache.commons.math3.linear.ArrayFieldVector $r4, $r5, $r10;
        java.lang.ClassCastException $r6;
        int[] $r7, $r32;
        boolean $z0;
        org.apache.commons.math3.Field $r8, $r11;
        java.lang.Object[] $r9;
        org.apache.commons.math3.FieldElement[][] $r12, $r18, $r25;
        org.apache.commons.math3.FieldElement $r14, $r15, $r17, $r20, $r21, $r24, $r27, $r28, $r31, $r33, r36, r37;
        java.lang.Object $r16, $r22, $r23, $r29, $r30;
        org.apache.commons.math3.linear.SingularMatrixException $r34;
        org.apache.commons.math3.exception.DimensionMismatchException $r35;

        r0 := @this: org.apache.commons.math3.linear.FieldLUDecomposition$Solver;

        r1 := @parameter0: org.apache.commons.math3.linear.FieldVector;

     label01:
        $r4 = (org.apache.commons.math3.linear.ArrayFieldVector) r1;

        $r5 = virtualinvoke r0.<org.apache.commons.math3.linear.FieldLUDecomposition$Solver: org.apache.commons.math3.linear.ArrayFieldVector solve(org.apache.commons.math3.linear.ArrayFieldVector)>($r4);

     label02:
        return $r5;

     label03:
        $r6 := @caughtexception;

        $r7 = r0.<org.apache.commons.math3.linear.FieldLUDecomposition$Solver: int[] pivot>;

        i0 = lengthof $r7;

        $i1 = interfaceinvoke r1.<org.apache.commons.math3.linear.FieldVector: int getDimension()>();

        if $i1 == i0 goto label04;

        $r35 = new org.apache.commons.math3.exception.DimensionMismatchException;

        $i3 = interfaceinvoke r1.<org.apache.commons.math3.linear.FieldVector: int getDimension()>();

        specialinvoke $r35.<org.apache.commons.math3.exception.DimensionMismatchException: void <init>(int,int)>($i3, i0);

        throw $r35;

     label04:
        $z0 = r0.<org.apache.commons.math3.linear.FieldLUDecomposition$Solver: boolean singular>;

        if $z0 == 0 goto label05;

        $r34 = new org.apache.commons.math3.linear.SingularMatrixException;

        specialinvoke $r34.<org.apache.commons.math3.linear.SingularMatrixException: void <init>()>();

        throw $r34;

     label05:
        $r8 = r0.<org.apache.commons.math3.linear.FieldLUDecomposition$Solver: org.apache.commons.math3.Field field>;

        $r9 = staticinvoke <org.apache.commons.math3.util.MathArrays: java.lang.Object[] buildArray(org.apache.commons.math3.Field,int)>($r8, i0);

        r3 = (org.apache.commons.math3.FieldElement[]) $r9;

        i4 = 0;

     label06:
        if i4 >= i0 goto label07;

        $r32 = r0.<org.apache.commons.math3.linear.FieldLUDecomposition$Solver: int[] pivot>;

        $i2 = $r32[i4];

        $r33 = interfaceinvoke r1.<org.apache.commons.math3.linear.FieldVector: org.apache.commons.math3.FieldElement getEntry(int)>($i2);

        r3[i4] = $r33;

        i4 = i4 + 1;

        goto label06;

     label07:
        i5 = 0;

     label08:
        if i5 >= i0 goto label11;

        r36 = r3[i5];

        i6 = i5 + 1;

     label09:
        if i6 >= i0 goto label10;

        $r28 = r3[i6];

        $r25 = r0.<org.apache.commons.math3.linear.FieldLUDecomposition$Solver: org.apache.commons.math3.FieldElement[][] lu>;

        $r26 = $r25[i6];

        $r27 = $r26[i5];

        $r29 = interfaceinvoke r36.<org.apache.commons.math3.FieldElement: java.lang.Object multiply(java.lang.Object)>($r27);

        $r30 = interfaceinvoke $r28.<org.apache.commons.math3.FieldElement: java.lang.Object subtract(java.lang.Object)>($r29);

        $r31 = (org.apache.commons.math3.FieldElement) $r30;

        r3[i6] = $r31;

        i6 = i6 + 1;

        goto label09;

     label10:
        i5 = i5 + 1;

        goto label08;

     label11:
        i7 = i0 - 1;

     label12:
        if i7 < 0 goto label15;

        $r15 = r3[i7];

        $r12 = r0.<org.apache.commons.math3.linear.FieldLUDecomposition$Solver: org.apache.commons.math3.FieldElement[][] lu>;

        $r13 = $r12[i7];

        $r14 = $r13[i7];

        $r16 = interfaceinvoke $r15.<org.apache.commons.math3.FieldElement: java.lang.Object divide(java.lang.Object)>($r14);

        $r17 = (org.apache.commons.math3.FieldElement) $r16;

        r3[i7] = $r17;

        r37 = r3[i7];

        i8 = 0;

     label13:
        if i8 >= i7 goto label14;

        $r21 = r3[i8];

        $r18 = r0.<org.apache.commons.math3.linear.FieldLUDecomposition$Solver: org.apache.commons.math3.FieldElement[][] lu>;

        $r19 = $r18[i8];

        $r20 = $r19[i7];

        $r22 = interfaceinvoke r37.<org.apache.commons.math3.FieldElement: java.lang.Object multiply(java.lang.Object)>($r20);

        $r23 = interfaceinvoke $r21.<org.apache.commons.math3.FieldElement: java.lang.Object subtract(java.lang.Object)>($r22);

        $r24 = (org.apache.commons.math3.FieldElement) $r23;

        r3[i8] = $r24;

        i8 = i8 + 1;

        goto label13;

     label14:
        i7 = i7 + -1;

        goto label12;

     label15:
        $r10 = new org.apache.commons.math3.linear.ArrayFieldVector;

        $r11 = r0.<org.apache.commons.math3.linear.FieldLUDecomposition$Solver: org.apache.commons.math3.Field field>;

        specialinvoke $r10.<org.apache.commons.math3.linear.ArrayFieldVector: void <init>(org.apache.commons.math3.Field,org.apache.commons.math3.FieldElement[],boolean)>($r11, r3, 0);

        return $r10;

        catch java.lang.ClassCastException from label01 to label02 with label03;
    }

    public org.apache.commons.math3.linear.ArrayFieldVector solve(org.apache.commons.math3.linear.ArrayFieldVector)
    {
        org.apache.commons.math3.linear.FieldLUDecomposition$Solver r0;
        org.apache.commons.math3.linear.ArrayFieldVector r1, $r6;
        int i0, i1, $i2, i3, i4, i5, i6, i7;
        org.apache.commons.math3.FieldElement[] r2, $r8, $r14, $r21;
        int[] $r3, $r27;
        boolean $z0;
        org.apache.commons.math3.Field $r4;
        java.lang.Object[] $r5;
        org.apache.commons.math3.FieldElement[][] $r7, $r13, $r20;
        org.apache.commons.math3.FieldElement $r9, $r10, $r12, $r15, $r16, $r19, $r22, $r23, $r26, $r28, r31, r32;
        java.lang.Object $r11, $r17, $r18, $r24, $r25;
        org.apache.commons.math3.linear.SingularMatrixException $r29;
        org.apache.commons.math3.exception.DimensionMismatchException $r30;

        r0 := @this: org.apache.commons.math3.linear.FieldLUDecomposition$Solver;

        r1 := @parameter0: org.apache.commons.math3.linear.ArrayFieldVector;

        $r3 = r0.<org.apache.commons.math3.linear.FieldLUDecomposition$Solver: int[] pivot>;

        i0 = lengthof $r3;

        i1 = virtualinvoke r1.<org.apache.commons.math3.linear.ArrayFieldVector: int getDimension()>();

        if i1 == i0 goto label01;

        $r30 = new org.apache.commons.math3.exception.DimensionMismatchException;

        specialinvoke $r30.<org.apache.commons.math3.exception.DimensionMismatchException: void <init>(int,int)>(i1, i0);

        throw $r30;

     label01:
        $z0 = r0.<org.apache.commons.math3.linear.FieldLUDecomposition$Solver: boolean singular>;

        if $z0 == 0 goto label02;

        $r29 = new org.apache.commons.math3.linear.SingularMatrixException;

        specialinvoke $r29.<org.apache.commons.math3.linear.SingularMatrixException: void <init>()>();

        throw $r29;

     label02:
        $r4 = r0.<org.apache.commons.math3.linear.FieldLUDecomposition$Solver: org.apache.commons.math3.Field field>;

        $r5 = staticinvoke <org.apache.commons.math3.util.MathArrays: java.lang.Object[] buildArray(org.apache.commons.math3.Field,int)>($r4, i0);

        r2 = (org.apache.commons.math3.FieldElement[]) $r5;

        i3 = 0;

     label03:
        if i3 >= i0 goto label04;

        $r27 = r0.<org.apache.commons.math3.linear.FieldLUDecomposition$Solver: int[] pivot>;

        $i2 = $r27[i3];

        $r28 = virtualinvoke r1.<org.apache.commons.math3.linear.ArrayFieldVector: org.apache.commons.math3.FieldElement getEntry(int)>($i2);

        r2[i3] = $r28;

        i3 = i3 + 1;

        goto label03;

     label04:
        i4 = 0;

     label05:
        if i4 >= i0 goto label08;

        r31 = r2[i4];

        i5 = i4 + 1;

     label06:
        if i5 >= i0 goto label07;

        $r23 = r2[i5];

        $r20 = r0.<org.apache.commons.math3.linear.FieldLUDecomposition$Solver: org.apache.commons.math3.FieldElement[][] lu>;

        $r21 = $r20[i5];

        $r22 = $r21[i4];

        $r24 = interfaceinvoke r31.<org.apache.commons.math3.FieldElement: java.lang.Object multiply(java.lang.Object)>($r22);

        $r25 = interfaceinvoke $r23.<org.apache.commons.math3.FieldElement: java.lang.Object subtract(java.lang.Object)>($r24);

        $r26 = (org.apache.commons.math3.FieldElement) $r25;

        r2[i5] = $r26;

        i5 = i5 + 1;

        goto label06;

     label07:
        i4 = i4 + 1;

        goto label05;

     label08:
        i6 = i0 - 1;

     label09:
        if i6 < 0 goto label12;

        $r10 = r2[i6];

        $r7 = r0.<org.apache.commons.math3.linear.FieldLUDecomposition$Solver: org.apache.commons.math3.FieldElement[][] lu>;

        $r8 = $r7[i6];

        $r9 = $r8[i6];

        $r11 = interfaceinvoke $r10.<org.apache.commons.math3.FieldElement: java.lang.Object divide(java.lang.Object)>($r9);

        $r12 = (org.apache.commons.math3.FieldElement) $r11;

        r2[i6] = $r12;

        r32 = r2[i6];

        i7 = 0;

     label10:
        if i7 >= i6 goto label11;

        $r16 = r2[i7];

        $r13 = r0.<org.apache.commons.math3.linear.FieldLUDecomposition$Solver: org.apache.commons.math3.FieldElement[][] lu>;

        $r14 = $r13[i7];

        $r15 = $r14[i6];

        $r17 = interfaceinvoke r32.<org.apache.commons.math3.FieldElement: java.lang.Object multiply(java.lang.Object)>($r15);

        $r18 = interfaceinvoke $r16.<org.apache.commons.math3.FieldElement: java.lang.Object subtract(java.lang.Object)>($r17);

        $r19 = (org.apache.commons.math3.FieldElement) $r18;

        r2[i7] = $r19;

        i7 = i7 + 1;

        goto label10;

     label11:
        i6 = i6 + -1;

        goto label09;

     label12:
        $r6 = new org.apache.commons.math3.linear.ArrayFieldVector;

        specialinvoke $r6.<org.apache.commons.math3.linear.ArrayFieldVector: void <init>(org.apache.commons.math3.FieldElement[],boolean)>(r2, 0);

        return $r6;
    }

    public org.apache.commons.math3.linear.FieldMatrix solve(org.apache.commons.math3.linear.FieldMatrix)
    {
        org.apache.commons.math3.linear.FieldLUDecomposition$Solver r0;
        org.apache.commons.math3.linear.FieldMatrix r1;
        int i0, i1, $i2, $i3, i4, i5, i6, i7, i8, i9, i10, i11, i12, i13;
        org.apache.commons.math3.FieldElement[][] r2, $r8, $r10, $r20;
        int[] $r3, $r27;
        boolean $z0;
        org.apache.commons.math3.Field $r4, $r7;
        java.lang.Object[][] $r5;
        org.apache.commons.math3.linear.Array2DRowFieldMatrix $r6;
        org.apache.commons.math3.FieldElement[] $r9, $r11, $r21, r31, r32, r33, r35, r37;
        org.apache.commons.math3.FieldElement $r12, $r13, $r16, $r17, $r19, $r22, $r23, $r26, $r28, r34, r36, r38;
        java.lang.Object $r14, $r15, $r18, $r24, $r25;
        org.apache.commons.math3.linear.SingularMatrixException $r29;
        org.apache.commons.math3.exception.DimensionMismatchException $r30;

        r0 := @this: org.apache.commons.math3.linear.FieldLUDecomposition$Solver;

        r1 := @parameter0: org.apache.commons.math3.linear.FieldMatrix;

        $r3 = r0.<org.apache.commons.math3.linear.FieldLUDecomposition$Solver: int[] pivot>;

        i0 = lengthof $r3;

        $i2 = interfaceinvoke r1.<org.apache.commons.math3.linear.FieldMatrix: int getRowDimension()>();

        if $i2 == i0 goto label01;

        $r30 = new org.apache.commons.math3.exception.DimensionMismatchException;

        $i3 = interfaceinvoke r1.<org.apache.commons.math3.linear.FieldMatrix: int getRowDimension()>();

        specialinvoke $r30.<org.apache.commons.math3.exception.DimensionMismatchException: void <init>(int,int)>($i3, i0);

        throw $r30;

     label01:
        $z0 = r0.<org.apache.commons.math3.linear.FieldLUDecomposition$Solver: boolean singular>;

        if $z0 == 0 goto label02;

        $r29 = new org.apache.commons.math3.linear.SingularMatrixException;

        specialinvoke $r29.<org.apache.commons.math3.linear.SingularMatrixException: void <init>()>();

        throw $r29;

     label02:
        i1 = interfaceinvoke r1.<org.apache.commons.math3.linear.FieldMatrix: int getColumnDimension()>();

        $r4 = r0.<org.apache.commons.math3.linear.FieldLUDecomposition$Solver: org.apache.commons.math3.Field field>;

        $r5 = staticinvoke <org.apache.commons.math3.util.MathArrays: java.lang.Object[][] buildArray(org.apache.commons.math3.Field,int,int)>($r4, i0, i1);

        r2 = (org.apache.commons.math3.FieldElement[][]) $r5;

        i4 = 0;

     label03:
        if i4 >= i0 goto label06;

        r31 = r2[i4];

        $r27 = r0.<org.apache.commons.math3.linear.FieldLUDecomposition$Solver: int[] pivot>;

        i5 = $r27[i4];

        i6 = 0;

     label04:
        if i6 >= i1 goto label05;

        $r28 = interfaceinvoke r1.<org.apache.commons.math3.linear.FieldMatrix: org.apache.commons.math3.FieldElement getEntry(int,int)>(i5, i6);

        r31[i6] = $r28;

        i6 = i6 + 1;

        goto label04;

     label05:
        i4 = i4 + 1;

        goto label03;

     label06:
        i7 = 0;

     label07:
        if i7 >= i0 goto label12;

        r32 = r2[i7];

        i8 = i7 + 1;

     label08:
        if i8 >= i0 goto label11;

        r33 = r2[i8];

        $r20 = r0.<org.apache.commons.math3.linear.FieldLUDecomposition$Solver: org.apache.commons.math3.FieldElement[][] lu>;

        $r21 = $r20[i8];

        r34 = $r21[i7];

        i9 = 0;

     label09:
        if i9 >= i1 goto label10;

        $r23 = r33[i9];

        $r22 = r32[i9];

        $r24 = interfaceinvoke $r22.<org.apache.commons.math3.FieldElement: java.lang.Object multiply(java.lang.Object)>(r34);

        $r25 = interfaceinvoke $r23.<org.apache.commons.math3.FieldElement: java.lang.Object subtract(java.lang.Object)>($r24);

        $r26 = (org.apache.commons.math3.FieldElement) $r25;

        r33[i9] = $r26;

        i9 = i9 + 1;

        goto label09;

     label10:
        i8 = i8 + 1;

        goto label08;

     label11:
        i7 = i7 + 1;

        goto label07;

     label12:
        i10 = i0 - 1;

     label13:
        if i10 < 0 goto label20;

        r35 = r2[i10];

        $r8 = r0.<org.apache.commons.math3.linear.FieldLUDecomposition$Solver: org.apache.commons.math3.FieldElement[][] lu>;

        $r9 = $r8[i10];

        r36 = $r9[i10];

        i11 = 0;

     label14:
        if i11 >= i1 goto label15;

        $r17 = r35[i11];

        $r18 = interfaceinvoke $r17.<org.apache.commons.math3.FieldElement: java.lang.Object divide(java.lang.Object)>(r36);

        $r19 = (org.apache.commons.math3.FieldElement) $r18;

        r35[i11] = $r19;

        i11 = i11 + 1;

        goto label14;

     label15:
        i12 = 0;

     label16:
        if i12 >= i10 goto label19;

        r37 = r2[i12];

        $r10 = r0.<org.apache.commons.math3.linear.FieldLUDecomposition$Solver: org.apache.commons.math3.FieldElement[][] lu>;

        $r11 = $r10[i12];

        r38 = $r11[i10];

        i13 = 0;

     label17:
        if i13 >= i1 goto label18;

        $r13 = r37[i13];

        $r12 = r35[i13];

        $r14 = interfaceinvoke $r12.<org.apache.commons.math3.FieldElement: java.lang.Object multiply(java.lang.Object)>(r38);

        $r15 = interfaceinvoke $r13.<org.apache.commons.math3.FieldElement: java.lang.Object subtract(java.lang.Object)>($r14);

        $r16 = (org.apache.commons.math3.FieldElement) $r15;

        r37[i13] = $r16;

        i13 = i13 + 1;

        goto label17;

     label18:
        i12 = i12 + 1;

        goto label16;

     label19:
        i10 = i10 + -1;

        goto label13;

     label20:
        $r6 = new org.apache.commons.math3.linear.Array2DRowFieldMatrix;

        $r7 = r0.<org.apache.commons.math3.linear.FieldLUDecomposition$Solver: org.apache.commons.math3.Field field>;

        specialinvoke $r6.<org.apache.commons.math3.linear.Array2DRowFieldMatrix: void <init>(org.apache.commons.math3.Field,org.apache.commons.math3.FieldElement[][],boolean)>($r7, r2, 0);

        return $r6;
    }

    public org.apache.commons.math3.linear.FieldMatrix getInverse()
    {
        org.apache.commons.math3.linear.FieldLUDecomposition$Solver r0;
        int i0, i1;
        org.apache.commons.math3.FieldElement r1;
        int[] $r3;
        org.apache.commons.math3.Field $r4, $r7;
        java.lang.Object $r5;
        org.apache.commons.math3.linear.Array2DRowFieldMatrix $r6;
        org.apache.commons.math3.linear.FieldMatrix $r8;

        r0 := @this: org.apache.commons.math3.linear.FieldLUDecomposition$Solver;

        $r3 = r0.<org.apache.commons.math3.linear.FieldLUDecomposition$Solver: int[] pivot>;

        i0 = lengthof $r3;

        $r4 = r0.<org.apache.commons.math3.linear.FieldLUDecomposition$Solver: org.apache.commons.math3.Field field>;

        $r5 = interfaceinvoke $r4.<org.apache.commons.math3.Field: java.lang.Object getOne()>();

        r1 = (org.apache.commons.math3.FieldElement) $r5;

        $r6 = new org.apache.commons.math3.linear.Array2DRowFieldMatrix;

        $r7 = r0.<org.apache.commons.math3.linear.FieldLUDecomposition$Solver: org.apache.commons.math3.Field field>;

        specialinvoke $r6.<org.apache.commons.math3.linear.Array2DRowFieldMatrix: void <init>(org.apache.commons.math3.Field,int,int)>($r7, i0, i0);

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        interfaceinvoke $r6.<org.apache.commons.math3.linear.FieldMatrix: void setEntry(int,int,org.apache.commons.math3.FieldElement)>(i1, i1, r1);

        i1 = i1 + 1;

        goto label1;

     label2:
        $r8 = virtualinvoke r0.<org.apache.commons.math3.linear.FieldLUDecomposition$Solver: org.apache.commons.math3.linear.FieldMatrix solve(org.apache.commons.math3.linear.FieldMatrix)>($r6);

        return $r8;
    }

    void <init>(org.apache.commons.math3.Field, org.apache.commons.math3.FieldElement[][], int[], boolean, org.apache.commons.math3.linear.FieldLUDecomposition$1)
    {
        org.apache.commons.math3.linear.FieldLUDecomposition$Solver r0;
        org.apache.commons.math3.Field r1;
        org.apache.commons.math3.FieldElement[][] r2;
        int[] r3;
        boolean z0;
        org.apache.commons.math3.linear.FieldLUDecomposition$1 r4;

        r0 := @this: org.apache.commons.math3.linear.FieldLUDecomposition$Solver;

        r1 := @parameter0: org.apache.commons.math3.Field;

        r2 := @parameter1: org.apache.commons.math3.FieldElement[][];

        r3 := @parameter2: int[];

        z0 := @parameter3: boolean;

        r4 := @parameter4: org.apache.commons.math3.linear.FieldLUDecomposition$1;

        specialinvoke r0.<org.apache.commons.math3.linear.FieldLUDecomposition$Solver: void <init>(org.apache.commons.math3.Field,org.apache.commons.math3.FieldElement[][],int[],boolean)>(r1, r2, r3, z0);

        return;
    }
}
