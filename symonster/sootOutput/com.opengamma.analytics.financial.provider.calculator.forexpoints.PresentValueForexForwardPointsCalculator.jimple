public final class com.opengamma.analytics.financial.provider.calculator.forexpoints.PresentValueForexForwardPointsCalculator extends com.opengamma.analytics.financial.interestrate.InstrumentDerivativeVisitorAdapter
{
    private static final com.opengamma.analytics.financial.provider.calculator.forexpoints.PresentValueForexForwardPointsCalculator INSTANCE;
    private static final com.opengamma.analytics.financial.forex.provider.ForexForwardPointsMethod METHOD_FX_FWD;

    private void <init>()
    {
        com.opengamma.analytics.financial.provider.calculator.forexpoints.PresentValueForexForwardPointsCalculator r0;

        r0 := @this: com.opengamma.analytics.financial.provider.calculator.forexpoints.PresentValueForexForwardPointsCalculator;

        specialinvoke r0.<com.opengamma.analytics.financial.interestrate.InstrumentDerivativeVisitorAdapter: void <init>()>();

        return;
    }

    public static com.opengamma.analytics.financial.provider.calculator.forexpoints.PresentValueForexForwardPointsCalculator getInstance()
    {
        com.opengamma.analytics.financial.provider.calculator.forexpoints.PresentValueForexForwardPointsCalculator $r0;

        $r0 = <com.opengamma.analytics.financial.provider.calculator.forexpoints.PresentValueForexForwardPointsCalculator: com.opengamma.analytics.financial.provider.calculator.forexpoints.PresentValueForexForwardPointsCalculator INSTANCE>;

        return $r0;
    }

    public com.opengamma.util.money.MultipleCurrencyAmount visitForex(com.opengamma.analytics.financial.forex.derivative.Forex, com.opengamma.analytics.financial.provider.description.interestrate.MulticurveForwardPointsProviderInterface)
    {
        com.opengamma.analytics.financial.provider.calculator.forexpoints.PresentValueForexForwardPointsCalculator r0;
        com.opengamma.analytics.financial.forex.derivative.Forex r1;
        com.opengamma.analytics.financial.provider.description.interestrate.MulticurveForwardPointsProviderInterface r2;
        com.opengamma.analytics.financial.forex.provider.ForexForwardPointsMethod $r3;
        com.opengamma.util.money.MultipleCurrencyAmount $r4;

        r0 := @this: com.opengamma.analytics.financial.provider.calculator.forexpoints.PresentValueForexForwardPointsCalculator;

        r1 := @parameter0: com.opengamma.analytics.financial.forex.derivative.Forex;

        r2 := @parameter1: com.opengamma.analytics.financial.provider.description.interestrate.MulticurveForwardPointsProviderInterface;

        $r3 = <com.opengamma.analytics.financial.provider.calculator.forexpoints.PresentValueForexForwardPointsCalculator: com.opengamma.analytics.financial.forex.provider.ForexForwardPointsMethod METHOD_FX_FWD>;

        $r4 = virtualinvoke $r3.<com.opengamma.analytics.financial.forex.provider.ForexForwardPointsMethod: com.opengamma.util.money.MultipleCurrencyAmount presentValue(com.opengamma.analytics.financial.forex.derivative.Forex,com.opengamma.analytics.financial.provider.description.interestrate.MulticurveForwardPointsProviderInterface)>(r1, r2);

        return $r4;
    }

    public volatile java.lang.Object visitForex(com.opengamma.analytics.financial.forex.derivative.Forex, java.lang.Object)
    {
        com.opengamma.analytics.financial.provider.calculator.forexpoints.PresentValueForexForwardPointsCalculator r0;
        com.opengamma.analytics.financial.forex.derivative.Forex r1;
        java.lang.Object r2;
        com.opengamma.analytics.financial.provider.description.interestrate.MulticurveForwardPointsProviderInterface $r3;
        com.opengamma.util.money.MultipleCurrencyAmount $r4;

        r0 := @this: com.opengamma.analytics.financial.provider.calculator.forexpoints.PresentValueForexForwardPointsCalculator;

        r1 := @parameter0: com.opengamma.analytics.financial.forex.derivative.Forex;

        r2 := @parameter1: java.lang.Object;

        $r3 = (com.opengamma.analytics.financial.provider.description.interestrate.MulticurveForwardPointsProviderInterface) r2;

        $r4 = virtualinvoke r0.<com.opengamma.analytics.financial.provider.calculator.forexpoints.PresentValueForexForwardPointsCalculator: com.opengamma.util.money.MultipleCurrencyAmount visitForex(com.opengamma.analytics.financial.forex.derivative.Forex,com.opengamma.analytics.financial.provider.description.interestrate.MulticurveForwardPointsProviderInterface)>(r1, $r3);

        return $r4;
    }

    static void <clinit>()
    {
        com.opengamma.analytics.financial.provider.calculator.forexpoints.PresentValueForexForwardPointsCalculator $r0;
        com.opengamma.analytics.financial.forex.provider.ForexForwardPointsMethod $r1;

        $r0 = new com.opengamma.analytics.financial.provider.calculator.forexpoints.PresentValueForexForwardPointsCalculator;

        specialinvoke $r0.<com.opengamma.analytics.financial.provider.calculator.forexpoints.PresentValueForexForwardPointsCalculator: void <init>()>();

        <com.opengamma.analytics.financial.provider.calculator.forexpoints.PresentValueForexForwardPointsCalculator: com.opengamma.analytics.financial.provider.calculator.forexpoints.PresentValueForexForwardPointsCalculator INSTANCE> = $r0;

        $r1 = staticinvoke <com.opengamma.analytics.financial.forex.provider.ForexForwardPointsMethod: com.opengamma.analytics.financial.forex.provider.ForexForwardPointsMethod getInstance()>();

        <com.opengamma.analytics.financial.provider.calculator.forexpoints.PresentValueForexForwardPointsCalculator: com.opengamma.analytics.financial.forex.provider.ForexForwardPointsMethod METHOD_FX_FWD> = $r1;

        return;
    }
}
