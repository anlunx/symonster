public class com.opengamma.analytics.financial.provider.curve.inflationissuer.InflationIssuerDiscountBuildingRepository extends java.lang.Object
{
    private final double _toleranceAbs;
    private final double _toleranceRel;
    private final int _stepMaximum;
    private final com.opengamma.analytics.math.rootfinding.newton.BroydenVectorRootFinder _rootFinder;
    private static final com.opengamma.analytics.math.matrix.MatrixAlgebra MATRIX_ALGEBRA;

    public void <init>(double, double, int)
    {
        com.opengamma.analytics.financial.provider.curve.inflationissuer.InflationIssuerDiscountBuildingRepository r0;
        double d0, d1, $d2, $d3;
        int i0, $i1;
        com.opengamma.analytics.math.rootfinding.newton.BroydenVectorRootFinder $r1;
        com.opengamma.analytics.math.linearalgebra.Decomposition $r2;

        r0 := @this: com.opengamma.analytics.financial.provider.curve.inflationissuer.InflationIssuerDiscountBuildingRepository;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        i0 := @parameter2: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.opengamma.analytics.financial.provider.curve.inflationissuer.InflationIssuerDiscountBuildingRepository: double _toleranceAbs> = d0;

        r0.<com.opengamma.analytics.financial.provider.curve.inflationissuer.InflationIssuerDiscountBuildingRepository: double _toleranceRel> = d1;

        r0.<com.opengamma.analytics.financial.provider.curve.inflationissuer.InflationIssuerDiscountBuildingRepository: int _stepMaximum> = i0;

        $r1 = new com.opengamma.analytics.math.rootfinding.newton.BroydenVectorRootFinder;

        $d2 = r0.<com.opengamma.analytics.financial.provider.curve.inflationissuer.InflationIssuerDiscountBuildingRepository: double _toleranceAbs>;

        $d3 = r0.<com.opengamma.analytics.financial.provider.curve.inflationissuer.InflationIssuerDiscountBuildingRepository: double _toleranceRel>;

        $i1 = r0.<com.opengamma.analytics.financial.provider.curve.inflationissuer.InflationIssuerDiscountBuildingRepository: int _stepMaximum>;

        $r2 = staticinvoke <com.opengamma.analytics.math.linearalgebra.DecompositionFactory: com.opengamma.analytics.math.linearalgebra.Decomposition getDecomposition(java.lang.String)>("SV_COLT");

        specialinvoke $r1.<com.opengamma.analytics.math.rootfinding.newton.BroydenVectorRootFinder: void <init>(double,double,int,com.opengamma.analytics.math.linearalgebra.Decomposition)>($d2, $d3, $i1, $r2);

        r0.<com.opengamma.analytics.financial.provider.curve.inflationissuer.InflationIssuerDiscountBuildingRepository: com.opengamma.analytics.math.rootfinding.newton.BroydenVectorRootFinder _rootFinder> = $r1;

        return;
    }

    private com.opengamma.analytics.financial.provider.description.inflation.InflationIssuerProviderDiscount makeUnit(com.opengamma.analytics.financial.interestrate.InstrumentDerivative[], double[], com.opengamma.analytics.financial.provider.description.inflation.InflationIssuerProviderDiscount, java.util.LinkedHashMap, java.util.LinkedHashMap, java.util.LinkedHashMap, java.util.LinkedHashMap, com.google.common.collect.LinkedListMultimap, java.util.LinkedHashMap, com.opengamma.analytics.financial.interestrate.InstrumentDerivativeVisitor, com.opengamma.analytics.financial.interestrate.InstrumentDerivativeVisitor)
    {
        com.opengamma.analytics.financial.provider.curve.inflationissuer.InflationIssuerDiscountBuildingRepository r0;
        com.opengamma.analytics.financial.interestrate.InstrumentDerivative[] r1;
        double[] r2, r16;
        com.opengamma.analytics.financial.provider.description.inflation.InflationIssuerProviderDiscount r3, r17;
        java.util.LinkedHashMap r4, r5, r6, r7, r9;
        com.google.common.collect.LinkedListMultimap r8;
        com.opengamma.analytics.financial.interestrate.InstrumentDerivativeVisitor r10, r11;
        com.opengamma.analytics.financial.provider.curve.inflationissuer.GeneratorInflationIssuerProviderDiscount $r18, $r26;
        com.opengamma.analytics.financial.provider.curve.inflationissuer.InflationIssuerDiscountBuildingData $r19;
        com.opengamma.analytics.financial.provider.curve.inflationissuer.InflationIssuerDiscountFinderFunction $r20;
        com.opengamma.analytics.financial.provider.curve.inflationissuer.InflationIssuerDiscountFinderJacobian $r21;
        com.opengamma.analytics.financial.provider.sensitivity.inflationissuer.ParameterSensitivityInflationIssuerMatrixCalculator $r22;
        com.opengamma.analytics.math.matrix.DoubleMatrix1D $r23, $r25, $r27;
        com.opengamma.analytics.math.rootfinding.newton.BroydenVectorRootFinder $r24;

        r0 := @this: com.opengamma.analytics.financial.provider.curve.inflationissuer.InflationIssuerDiscountBuildingRepository;

        r1 := @parameter0: com.opengamma.analytics.financial.interestrate.InstrumentDerivative[];

        r2 := @parameter1: double[];

        r3 := @parameter2: com.opengamma.analytics.financial.provider.description.inflation.InflationIssuerProviderDiscount;

        r4 := @parameter3: java.util.LinkedHashMap;

        r5 := @parameter4: java.util.LinkedHashMap;

        r6 := @parameter5: java.util.LinkedHashMap;

        r7 := @parameter6: java.util.LinkedHashMap;

        r8 := @parameter7: com.google.common.collect.LinkedListMultimap;

        r9 := @parameter8: java.util.LinkedHashMap;

        r10 := @parameter9: com.opengamma.analytics.financial.interestrate.InstrumentDerivativeVisitor;

        r11 := @parameter10: com.opengamma.analytics.financial.interestrate.InstrumentDerivativeVisitor;

        $r18 = new com.opengamma.analytics.financial.provider.curve.inflationissuer.GeneratorInflationIssuerProviderDiscount;

        specialinvoke $r18.<com.opengamma.analytics.financial.provider.curve.inflationissuer.GeneratorInflationIssuerProviderDiscount: void <init>(com.opengamma.analytics.financial.provider.description.inflation.InflationIssuerProviderDiscount,java.util.LinkedHashMap,java.util.LinkedHashMap,java.util.LinkedHashMap,com.google.common.collect.LinkedListMultimap,java.util.LinkedHashMap)>(r3, r4, r5, r7, r8, r9);

        $r19 = new com.opengamma.analytics.financial.provider.curve.inflationissuer.InflationIssuerDiscountBuildingData;

        specialinvoke $r19.<com.opengamma.analytics.financial.provider.curve.inflationissuer.InflationIssuerDiscountBuildingData: void <init>(com.opengamma.analytics.financial.interestrate.InstrumentDerivative[],com.opengamma.analytics.financial.provider.curve.inflationissuer.GeneratorInflationIssuerProviderDiscount)>(r1, $r18);

        $r20 = new com.opengamma.analytics.financial.provider.curve.inflationissuer.InflationIssuerDiscountFinderFunction;

        specialinvoke $r20.<com.opengamma.analytics.financial.provider.curve.inflationissuer.InflationIssuerDiscountFinderFunction: void <init>(com.opengamma.analytics.financial.interestrate.InstrumentDerivativeVisitor,com.opengamma.analytics.financial.provider.curve.inflationissuer.InflationIssuerDiscountBuildingData)>(r10, $r19);

        $r21 = new com.opengamma.analytics.financial.provider.curve.inflationissuer.InflationIssuerDiscountFinderJacobian;

        $r22 = new com.opengamma.analytics.financial.provider.sensitivity.inflationissuer.ParameterSensitivityInflationIssuerMatrixCalculator;

        specialinvoke $r22.<com.opengamma.analytics.financial.provider.sensitivity.inflationissuer.ParameterSensitivityInflationIssuerMatrixCalculator: void <init>(com.opengamma.analytics.financial.interestrate.InstrumentDerivativeVisitor)>(r11);

        specialinvoke $r21.<com.opengamma.analytics.financial.provider.curve.inflationissuer.InflationIssuerDiscountFinderJacobian: void <init>(com.opengamma.analytics.financial.provider.sensitivity.inflationissuer.ParameterSensitivityInflationIssuerMatrixProviderAbstractCalculator,com.opengamma.analytics.financial.provider.curve.inflationissuer.InflationIssuerDiscountBuildingData)>($r22, $r19);

        $r24 = r0.<com.opengamma.analytics.financial.provider.curve.inflationissuer.InflationIssuerDiscountBuildingRepository: com.opengamma.analytics.math.rootfinding.newton.BroydenVectorRootFinder _rootFinder>;

        $r23 = new com.opengamma.analytics.math.matrix.DoubleMatrix1D;

        specialinvoke $r23.<com.opengamma.analytics.math.matrix.DoubleMatrix1D: void <init>(double[])>(r2);

        $r25 = virtualinvoke $r24.<com.opengamma.analytics.math.rootfinding.newton.BroydenVectorRootFinder: com.opengamma.analytics.math.matrix.DoubleMatrix1D getRoot(com.opengamma.analytics.math.function.Function1D,com.opengamma.analytics.math.function.Function1D,com.opengamma.analytics.math.matrix.DoubleMatrix1D)>($r20, $r21, $r23);

        r16 = virtualinvoke $r25.<com.opengamma.analytics.math.matrix.DoubleMatrix1D: double[] getData()>();

        $r26 = virtualinvoke $r19.<com.opengamma.analytics.financial.provider.curve.inflationissuer.InflationIssuerDiscountBuildingData: com.opengamma.analytics.financial.provider.curve.inflationissuer.GeneratorInflationIssuerProviderDiscount getGeneratorMarket()>();

        $r27 = new com.opengamma.analytics.math.matrix.DoubleMatrix1D;

        specialinvoke $r27.<com.opengamma.analytics.math.matrix.DoubleMatrix1D: void <init>(double[])>(r16);

        r17 = virtualinvoke $r26.<com.opengamma.analytics.financial.provider.curve.inflationissuer.GeneratorInflationIssuerProviderDiscount: com.opengamma.analytics.financial.provider.description.inflation.InflationIssuerProviderDiscount evaluate(com.opengamma.analytics.math.matrix.DoubleMatrix1D)>($r27);

        return r17;
    }

    private void updateBlockBundle(com.opengamma.analytics.financial.interestrate.InstrumentDerivative[], com.opengamma.analytics.financial.provider.description.inflation.InflationIssuerProviderDiscount, java.util.List, com.opengamma.analytics.financial.provider.curve.CurveBuildingBlockBundle, com.opengamma.analytics.financial.interestrate.InstrumentDerivativeVisitor)
    {
        com.opengamma.analytics.financial.provider.curve.inflationissuer.InflationIssuerDiscountBuildingRepository r0;
        com.opengamma.analytics.financial.interestrate.InstrumentDerivative[] r1;
        com.opengamma.analytics.financial.provider.description.inflation.InflationIssuerProviderDiscount r2;
        java.util.List r3;
        com.opengamma.analytics.financial.provider.curve.CurveBuildingBlockBundle r4;
        com.opengamma.analytics.financial.interestrate.InstrumentDerivativeVisitor r5;
        java.util.Set r8, r17;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, i24, i25, i26, i27, i28, i29, i30, i31, i32, i33, i34, i35, i36, i37, i38, i39, i40, i41, i42;
        int[] r13, r14, r87, r88;
        double[][] r16, r18, r82, r84, r85, r91, r103, r106;
        java.util.Iterator r19, r78, r80, r89, r92, r98, r100, r104;
        java.lang.String r20, r79, r81, r90, r93, r99, r101, r105;
        java.lang.Integer r21, $r40, $r41, $r53, $r54, $r64, $r66, $r75;
        com.opengamma.analytics.financial.provider.sensitivity.inflationissuer.ParameterSensitivityInflationIssuerUnderlyingMatrixCalculator $r22;
        java.util.LinkedHashMap $r23;
        java.util.LinkedHashSet $r24, $r25, $r26, $r27, $r28;
        boolean $z2, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z12, $z15;
        double[] $r29, $r35, $r36, $r37, $r38, $r62, $r63, $r67, $r68, $r69, $r70, $r73;
        com.opengamma.analytics.math.matrix.DoubleMatrix2D $r30, $r34, $r44, $r49, $r60, r83, r86, r97;
        com.opengamma.analytics.math.matrix.MatrixAlgebra $r31, $r45, $r46, $r50;
        com.opengamma.analytics.financial.provider.curve.CurveBuildingBlock $r32, r95;
        java.lang.Object $r33, $r39, $r52, $r57, $r58, $r59, $r61, $r65, $r74, $r76;
        com.opengamma.util.tuple.ObjectsPair $r42, $r55;
        com.opengamma.analytics.math.matrix.Matrix $r47, $r48, $r51;
        com.opengamma.analytics.financial.interestrate.InstrumentDerivative $r71;
        com.opengamma.analytics.math.matrix.DoubleMatrix1D $r72;
        java.util.Map $r77;
        com.opengamma.util.tuple.Pair r94;

        r0 := @this: com.opengamma.analytics.financial.provider.curve.inflationissuer.InflationIssuerDiscountBuildingRepository;

        r1 := @parameter0: com.opengamma.analytics.financial.interestrate.InstrumentDerivative[];

        r2 := @parameter1: com.opengamma.analytics.financial.provider.description.inflation.InflationIssuerProviderDiscount;

        r3 := @parameter2: java.util.List;

        r4 := @parameter3: com.opengamma.analytics.financial.provider.curve.CurveBuildingBlockBundle;

        r5 := @parameter4: com.opengamma.analytics.financial.interestrate.InstrumentDerivativeVisitor;

        $r22 = new com.opengamma.analytics.financial.provider.sensitivity.inflationissuer.ParameterSensitivityInflationIssuerUnderlyingMatrixCalculator;

        specialinvoke $r22.<com.opengamma.analytics.financial.provider.sensitivity.inflationissuer.ParameterSensitivityInflationIssuerUnderlyingMatrixCalculator: void <init>(com.opengamma.analytics.financial.interestrate.InstrumentDerivativeVisitor)>(r5);

        $r23 = new java.util.LinkedHashMap;

        specialinvoke $r23.<java.util.LinkedHashMap: void <init>()>();

        r8 = virtualinvoke r2.<com.opengamma.analytics.financial.provider.description.inflation.InflationIssuerProviderDiscount: java.util.Set getAllNames()>();

        i0 = interfaceinvoke r3.<java.util.List: int size()>();

        $r24 = new java.util.LinkedHashSet;

        specialinvoke $r24.<java.util.LinkedHashSet: void <init>(java.util.Collection)>(r3);

        $r25 = new java.util.LinkedHashSet;

        specialinvoke $r25.<java.util.LinkedHashSet: void <init>(java.util.Collection)>(r8);

        virtualinvoke $r25.<java.util.LinkedHashSet: boolean removeAll(java.util.Collection)>($r24);

        $r26 = new java.util.LinkedHashSet;

        specialinvoke $r26.<java.util.LinkedHashSet: void <init>(java.util.Collection)>($r25);

        virtualinvoke $r26.<java.util.LinkedHashSet: boolean addAll(java.util.Collection)>($r24);

        $r27 = new java.util.LinkedHashSet;

        specialinvoke $r27.<java.util.LinkedHashSet: void <init>()>();

        r78 = virtualinvoke $r25.<java.util.LinkedHashSet: java.util.Iterator iterator()>();

     label01:
        $z2 = interfaceinvoke r78.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label03;

        $r76 = interfaceinvoke r78.<java.util.Iterator: java.lang.Object next()>();

        r79 = (java.lang.String) $r76;

        $r77 = virtualinvoke r4.<com.opengamma.analytics.financial.provider.curve.CurveBuildingBlockBundle: java.util.Map getData()>();

        $z12 = interfaceinvoke $r77.<java.util.Map: boolean containsKey(java.lang.Object)>(r79);

        if $z12 != 0 goto label02;

        virtualinvoke $r27.<java.util.LinkedHashSet: boolean add(java.lang.Object)>(r79);

     label02:
        goto label01;

     label03:
        virtualinvoke $r25.<java.util.LinkedHashSet: boolean removeAll(java.util.Collection)>($r27);

        i24 = virtualinvoke $r26.<java.util.LinkedHashSet: int size()>();

        i25 = i24 - i0;

        i26 = 0;

        r13 = newarray (int)[i0];

        r14 = newarray (int)[i0];

        i27 = 0;

        $r28 = new java.util.LinkedHashSet;

        specialinvoke $r28.<java.util.LinkedHashSet: void <init>(java.util.Collection)>($r25);

        r80 = virtualinvoke $r24.<java.util.LinkedHashSet: java.util.Iterator iterator()>();

     label04:
        $z4 = interfaceinvoke r80.<java.util.Iterator: boolean hasNext()>();

        if $z4 == 0 goto label05;

        $r74 = interfaceinvoke r80.<java.util.Iterator: java.lang.Object next()>();

        r81 = (java.lang.String) $r74;

        r14[i27] = i26;

        $r75 = virtualinvoke r2.<com.opengamma.analytics.financial.provider.description.inflation.InflationIssuerProviderDiscount: java.lang.Integer getNumberOfIntrinsicParameters(java.lang.String,java.util.Set)>(r81, $r28);

        $i22 = virtualinvoke $r75.<java.lang.Integer: int intValue()>();

        r13[i27] = $i22;

        virtualinvoke $r28.<java.util.LinkedHashSet: boolean add(java.lang.Object)>(r81);

        $i23 = r13[i27];

        i26 = i26 + $i23;

        i27 = i27 + 1;

        goto label04;

     label05:
        i28 = lengthof r1;

        r82 = newarray (double[])[i26];

        i29 = 0;

     label06:
        if i29 >= i28 goto label07;

        $r71 = r1[i29];

        $r72 = virtualinvoke $r22.<com.opengamma.analytics.financial.provider.sensitivity.inflationissuer.ParameterSensitivityInflationIssuerUnderlyingMatrixCalculator: com.opengamma.analytics.math.matrix.DoubleMatrix1D calculateSensitivity(com.opengamma.analytics.financial.interestrate.InstrumentDerivative,com.opengamma.analytics.financial.provider.description.inflation.InflationIssuerProviderInterface,java.util.Set)>($r71, r2, $r26);

        $r73 = virtualinvoke $r72.<com.opengamma.analytics.math.matrix.DoubleMatrix1D: double[] getData()>();

        r82[i29] = $r73;

        i29 = i29 + 1;

        goto label06;

     label07:
        $r29 = r82[0];

        i30 = lengthof $r29;

        i1 = i30 - i26;

        r16 = newmultiarray (double)[i26][i26];

        i31 = 0;

     label08:
        if i31 >= i28 goto label09;

        $r70 = r82[i31];

        $r69 = r16[i31];

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r70, i1, $r69, 0, i26);

        i31 = i31 + 1;

        goto label08;

     label09:
        $r31 = <com.opengamma.analytics.financial.provider.curve.inflationissuer.InflationIssuerDiscountBuildingRepository: com.opengamma.analytics.math.matrix.MatrixAlgebra MATRIX_ALGEBRA>;

        $r30 = new com.opengamma.analytics.math.matrix.DoubleMatrix2D;

        specialinvoke $r30.<com.opengamma.analytics.math.matrix.DoubleMatrix2D: void <init>(double[][])>(r16);

        r83 = virtualinvoke $r31.<com.opengamma.analytics.math.matrix.MatrixAlgebra: com.opengamma.analytics.math.matrix.DoubleMatrix2D getInverse(com.opengamma.analytics.math.matrix.Matrix)>($r30);

        r84 = newmultiarray (double)[0][0];

        if i1 <= 0 goto label21;

        r85 = newmultiarray (double)[i26][i1];

        i32 = 0;

     label10:
        if i32 >= i28 goto label11;

        $r68 = r82[i32];

        $r67 = r85[i32];

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r68, 0, $r67, 0, i1);

        i32 = i32 + 1;

        goto label10;

     label11:
        $r45 = <com.opengamma.analytics.financial.provider.curve.inflationissuer.InflationIssuerDiscountBuildingRepository: com.opengamma.analytics.math.matrix.MatrixAlgebra MATRIX_ALGEBRA>;

        $r46 = <com.opengamma.analytics.financial.provider.curve.inflationissuer.InflationIssuerDiscountBuildingRepository: com.opengamma.analytics.math.matrix.MatrixAlgebra MATRIX_ALGEBRA>;

        $r44 = new com.opengamma.analytics.math.matrix.DoubleMatrix2D;

        specialinvoke $r44.<com.opengamma.analytics.math.matrix.DoubleMatrix2D: void <init>(double[][])>(r85);

        $r47 = virtualinvoke $r46.<com.opengamma.analytics.math.matrix.MatrixAlgebra: com.opengamma.analytics.math.matrix.Matrix multiply(com.opengamma.analytics.math.matrix.Matrix,com.opengamma.analytics.math.matrix.Matrix)>(r83, $r44);

        $r48 = virtualinvoke $r45.<com.opengamma.analytics.math.matrix.MatrixAlgebra: com.opengamma.analytics.math.matrix.Matrix scale(com.opengamma.analytics.math.matrix.Matrix,double)>($r47, -1.0);

        r86 = (com.opengamma.analytics.math.matrix.DoubleMatrix2D) $r48;

        r87 = newarray (int)[i25];

        r88 = newarray (int)[i25];

        i33 = 0;

        i34 = 0;

        r89 = virtualinvoke $r25.<java.util.LinkedHashSet: java.util.Iterator iterator()>();

     label12:
        $z6 = interfaceinvoke r89.<java.util.Iterator: boolean hasNext()>();

        if $z6 == 0 goto label13;

        $r65 = interfaceinvoke r89.<java.util.Iterator: java.lang.Object next()>();

        r90 = (java.lang.String) $r65;

        $r66 = virtualinvoke r2.<com.opengamma.analytics.financial.provider.description.inflation.InflationIssuerProviderDiscount: java.lang.Integer getNumberOfParameters(java.lang.String)>(r90);

        $i20 = virtualinvoke $r66.<java.lang.Integer: int intValue()>();

        r87[i34] = $i20;

        r88[i34] = i33;

        $i21 = r87[i34];

        i33 = i33 + $i21;

        i34 = i34 + 1;

        goto label12;

     label13:
        r91 = newmultiarray (double)[i1][i1];

        i35 = 0;

        r92 = virtualinvoke $r25.<java.util.LinkedHashSet: java.util.Iterator iterator()>();

     label14:
        $z7 = interfaceinvoke r92.<java.util.Iterator: boolean hasNext()>();

        if $z7 == 0 goto label19;

        $r57 = interfaceinvoke r92.<java.util.Iterator: java.lang.Object next()>();

        r93 = (java.lang.String) $r57;

        r94 = virtualinvoke r4.<com.opengamma.analytics.financial.provider.curve.CurveBuildingBlockBundle: com.opengamma.util.tuple.Pair getBlock(java.lang.String)>(r93);

        $r58 = virtualinvoke r94.<com.opengamma.util.tuple.Pair: java.lang.Object getFirst()>();

        r95 = (com.opengamma.analytics.financial.provider.curve.CurveBuildingBlock) $r58;

        r17 = virtualinvoke r95.<com.opengamma.analytics.financial.provider.curve.CurveBuildingBlock: java.util.Set getAllNames()>();

        $r59 = virtualinvoke r94.<com.opengamma.util.tuple.Pair: java.lang.Object getSecond()>();

        $r60 = (com.opengamma.analytics.math.matrix.DoubleMatrix2D) $r59;

        r18 = virtualinvoke $r60.<com.opengamma.analytics.math.matrix.DoubleMatrix2D: double[][] getData()>();

        i36 = 0;

        r19 = virtualinvoke $r25.<java.util.LinkedHashSet: java.util.Iterator iterator()>();

     label15:
        $z9 = interfaceinvoke r19.<java.util.Iterator: boolean hasNext()>();

        if $z9 == 0 goto label18;

        $r61 = interfaceinvoke r19.<java.util.Iterator: java.lang.Object next()>();

        r20 = (java.lang.String) $r61;

        $z10 = interfaceinvoke r17.<java.util.Set: boolean contains(java.lang.Object)>(r20);

        if $z10 == 0 goto label17;

        r21 = virtualinvoke r95.<com.opengamma.analytics.financial.provider.curve.CurveBuildingBlock: java.lang.Integer getStart(java.lang.String)>(r20);

        i37 = 0;

     label16:
        $i14 = r87[i35];

        if i37 >= $i14 goto label17;

        $r62 = r18[i37];

        $i15 = virtualinvoke r21.<java.lang.Integer: int intValue()>();

        $i16 = r88[i35];

        $i17 = $i16 + i37;

        $r63 = r91[$i17];

        $i18 = r88[i36];

        $r64 = virtualinvoke r95.<com.opengamma.analytics.financial.provider.curve.CurveBuildingBlock: java.lang.Integer getNbParameters(java.lang.String)>(r20);

        $i19 = virtualinvoke $r64.<java.lang.Integer: int intValue()>();

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r62, $i15, $r63, $i18, $i19);

        i37 = i37 + 1;

        goto label16;

     label17:
        i36 = i36 + 1;

        goto label15;

     label18:
        i35 = i35 + 1;

        goto label14;

     label19:
        $r49 = new com.opengamma.analytics.math.matrix.DoubleMatrix2D;

        specialinvoke $r49.<com.opengamma.analytics.math.matrix.DoubleMatrix2D: void <init>(double[][])>(r91);

        $r50 = <com.opengamma.analytics.financial.provider.curve.inflationissuer.InflationIssuerDiscountBuildingRepository: com.opengamma.analytics.math.matrix.MatrixAlgebra MATRIX_ALGEBRA>;

        $r51 = virtualinvoke $r50.<com.opengamma.analytics.math.matrix.MatrixAlgebra: com.opengamma.analytics.math.matrix.Matrix multiply(com.opengamma.analytics.math.matrix.Matrix,com.opengamma.analytics.math.matrix.Matrix)>(r86, $r49);

        r97 = (com.opengamma.analytics.math.matrix.DoubleMatrix2D) $r51;

        r84 = virtualinvoke r97.<com.opengamma.analytics.math.matrix.DoubleMatrix2D: double[][] getData()>();

        i38 = 0;

        r98 = virtualinvoke $r25.<java.util.LinkedHashSet: java.util.Iterator iterator()>();

     label20:
        $z8 = interfaceinvoke r98.<java.util.Iterator: boolean hasNext()>();

        if $z8 == 0 goto label21;

        $r52 = interfaceinvoke r98.<java.util.Iterator: java.lang.Object next()>();

        r99 = (java.lang.String) $r52;

        $i12 = r88[i38];

        $r53 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i12);

        $i13 = r87[i38];

        $r54 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i13);

        $r55 = staticinvoke <com.opengamma.util.tuple.ObjectsPair: com.opengamma.util.tuple.ObjectsPair of(java.lang.Object,java.lang.Object)>($r53, $r54);

        virtualinvoke $r23.<java.util.LinkedHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r99, $r55);

        i38 = i38 + 1;

        goto label20;

     label21:
        i39 = 0;

        r100 = virtualinvoke $r24.<java.util.LinkedHashSet: java.util.Iterator iterator()>();

     label22:
        $z15 = interfaceinvoke r100.<java.util.Iterator: boolean hasNext()>();

        if $z15 == 0 goto label23;

        $r39 = interfaceinvoke r100.<java.util.Iterator: java.lang.Object next()>();

        r101 = (java.lang.String) $r39;

        $i9 = r14[i39];

        $i10 = i1 + $i9;

        $r40 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i10);

        $i11 = r13[i39];

        $r41 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i11);

        $r42 = staticinvoke <com.opengamma.util.tuple.ObjectsPair: com.opengamma.util.tuple.ObjectsPair of(java.lang.Object,java.lang.Object)>($r40, $r41);

        virtualinvoke $r23.<java.util.LinkedHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r101, $r42);

        i39 = i39 + 1;

        goto label22;

     label23:
        $r32 = new com.opengamma.analytics.financial.provider.curve.CurveBuildingBlock;

        specialinvoke $r32.<com.opengamma.analytics.financial.provider.curve.CurveBuildingBlock: void <init>(java.util.LinkedHashMap)>($r23);

        r103 = virtualinvoke r83.<com.opengamma.analytics.math.matrix.DoubleMatrix2D: double[][] getData()>();

        i40 = 0;

        r104 = virtualinvoke $r24.<java.util.LinkedHashSet: java.util.Iterator iterator()>();

     label24:
        $z5 = interfaceinvoke r104.<java.util.Iterator: boolean hasNext()>();

        if $z5 == 0 goto label29;

        $r33 = interfaceinvoke r104.<java.util.Iterator: java.lang.Object next()>();

        r105 = (java.lang.String) $r33;

        $i2 = r13[i40];

        r106 = newmultiarray (double)[$i2][i30];

        i41 = 0;

     label25:
        $i3 = r13[i40];

        if i41 >= $i3 goto label26;

        $i7 = r14[i40];

        $i8 = $i7 + i41;

        $r38 = r103[$i8];

        $r37 = r106[i41];

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r38, 0, $r37, i1, i26);

        i41 = i41 + 1;

        goto label25;

     label26:
        if i1 <= 0 goto label28;

        i42 = 0;

     label27:
        $i4 = r13[i40];

        if i42 >= $i4 goto label28;

        $i5 = r14[i40];

        $i6 = $i5 + i42;

        $r36 = r84[$i6];

        $r35 = r106[i42];

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r36, 0, $r35, 0, i1);

        i42 = i42 + 1;

        goto label27;

     label28:
        $r34 = new com.opengamma.analytics.math.matrix.DoubleMatrix2D;

        specialinvoke $r34.<com.opengamma.analytics.math.matrix.DoubleMatrix2D: void <init>(double[][])>(r106);

        virtualinvoke r4.<com.opengamma.analytics.financial.provider.curve.CurveBuildingBlockBundle: void add(java.lang.String,com.opengamma.analytics.financial.provider.curve.CurveBuildingBlock,com.opengamma.analytics.math.matrix.DoubleMatrix2D)>(r105, $r32, $r34);

        i40 = i40 + 1;

        goto label24;

     label29:
        return;
    }

    public com.opengamma.util.tuple.Pair makeCurvesFromDerivatives(com.opengamma.analytics.financial.provider.curve.MultiCurveBundle[], com.opengamma.analytics.financial.provider.description.inflation.InflationIssuerProviderDiscount, java.util.LinkedHashMap, com.opengamma.analytics.financial.interestrate.InstrumentDerivativeVisitor, com.opengamma.analytics.financial.interestrate.InstrumentDerivativeVisitor)
    {
        com.opengamma.analytics.financial.provider.curve.inflationissuer.InflationIssuerDiscountBuildingRepository r0;
        com.opengamma.analytics.financial.provider.curve.MultiCurveBundle[] r1;
        com.opengamma.analytics.financial.provider.description.inflation.InflationIssuerProviderDiscount r2;
        java.util.LinkedHashMap r3, $r7, $r8, $r9;
        com.opengamma.analytics.financial.interestrate.InstrumentDerivativeVisitor r4, r5;
        com.google.common.collect.LinkedListMultimap r6;
        com.opengamma.util.tuple.Pair $r10;

        r0 := @this: com.opengamma.analytics.financial.provider.curve.inflationissuer.InflationIssuerDiscountBuildingRepository;

        r1 := @parameter0: com.opengamma.analytics.financial.provider.curve.MultiCurveBundle[];

        r2 := @parameter1: com.opengamma.analytics.financial.provider.description.inflation.InflationIssuerProviderDiscount;

        r3 := @parameter2: java.util.LinkedHashMap;

        r4 := @parameter3: com.opengamma.analytics.financial.interestrate.InstrumentDerivativeVisitor;

        r5 := @parameter4: com.opengamma.analytics.financial.interestrate.InstrumentDerivativeVisitor;

        r6 = staticinvoke <com.google.common.collect.LinkedListMultimap: com.google.common.collect.LinkedListMultimap create()>();

        $r7 = new java.util.LinkedHashMap;

        specialinvoke $r7.<java.util.LinkedHashMap: void <init>()>();

        $r8 = new java.util.LinkedHashMap;

        specialinvoke $r8.<java.util.LinkedHashMap: void <init>()>();

        $r9 = new java.util.LinkedHashMap;

        specialinvoke $r9.<java.util.LinkedHashMap: void <init>()>();

        $r10 = virtualinvoke r0.<com.opengamma.analytics.financial.provider.curve.inflationissuer.InflationIssuerDiscountBuildingRepository: com.opengamma.util.tuple.Pair makeCurvesFromDerivatives(com.opengamma.analytics.financial.provider.curve.MultiCurveBundle[],com.opengamma.analytics.financial.provider.description.inflation.InflationIssuerProviderDiscount,java.util.LinkedHashMap,java.util.LinkedHashMap,java.util.LinkedHashMap,java.util.LinkedHashMap,com.google.common.collect.LinkedListMultimap,com.opengamma.analytics.financial.interestrate.InstrumentDerivativeVisitor,com.opengamma.analytics.financial.interestrate.InstrumentDerivativeVisitor)>(r1, r2, $r7, $r8, $r9, r3, r6, r4, r5);

        return $r10;
    }

    public com.opengamma.util.tuple.Pair makeCurvesFromDerivatives(com.opengamma.analytics.financial.provider.curve.MultiCurveBundle[], com.opengamma.analytics.financial.provider.description.inflation.InflationIssuerProviderDiscount, java.util.LinkedHashMap, java.util.LinkedHashMap, java.util.LinkedHashMap, java.util.LinkedHashMap, com.google.common.collect.LinkedListMultimap, com.opengamma.analytics.financial.interestrate.InstrumentDerivativeVisitor, com.opengamma.analytics.financial.interestrate.InstrumentDerivativeVisitor)
    {
        com.opengamma.analytics.financial.provider.curve.inflationissuer.InflationIssuerDiscountBuildingRepository r0;
        com.opengamma.analytics.financial.provider.curve.MultiCurveBundle[] r1;
        com.opengamma.analytics.financial.provider.description.inflation.InflationIssuerProviderDiscount r2;
        java.util.LinkedHashMap r3, r4, r5, r6;
        com.google.common.collect.LinkedListMultimap r7;
        com.opengamma.analytics.financial.interestrate.InstrumentDerivativeVisitor r8, r9;
        com.opengamma.analytics.financial.provider.curve.CurveBuildingBlockBundle $r10;
        com.opengamma.util.tuple.Pair $r11;

        r0 := @this: com.opengamma.analytics.financial.provider.curve.inflationissuer.InflationIssuerDiscountBuildingRepository;

        r1 := @parameter0: com.opengamma.analytics.financial.provider.curve.MultiCurveBundle[];

        r2 := @parameter1: com.opengamma.analytics.financial.provider.description.inflation.InflationIssuerProviderDiscount;

        r3 := @parameter2: java.util.LinkedHashMap;

        r4 := @parameter3: java.util.LinkedHashMap;

        r5 := @parameter4: java.util.LinkedHashMap;

        r6 := @parameter5: java.util.LinkedHashMap;

        r7 := @parameter6: com.google.common.collect.LinkedListMultimap;

        r8 := @parameter7: com.opengamma.analytics.financial.interestrate.InstrumentDerivativeVisitor;

        r9 := @parameter8: com.opengamma.analytics.financial.interestrate.InstrumentDerivativeVisitor;

        $r10 = new com.opengamma.analytics.financial.provider.curve.CurveBuildingBlockBundle;

        specialinvoke $r10.<com.opengamma.analytics.financial.provider.curve.CurveBuildingBlockBundle: void <init>()>();

        $r11 = virtualinvoke r0.<com.opengamma.analytics.financial.provider.curve.inflationissuer.InflationIssuerDiscountBuildingRepository: com.opengamma.util.tuple.Pair makeCurvesFromDerivatives(com.opengamma.analytics.financial.provider.curve.MultiCurveBundle[],com.opengamma.analytics.financial.provider.description.inflation.InflationIssuerProviderDiscount,com.opengamma.analytics.financial.provider.curve.CurveBuildingBlockBundle,java.util.LinkedHashMap,java.util.LinkedHashMap,java.util.LinkedHashMap,java.util.LinkedHashMap,com.google.common.collect.LinkedListMultimap,com.opengamma.analytics.financial.interestrate.InstrumentDerivativeVisitor,com.opengamma.analytics.financial.interestrate.InstrumentDerivativeVisitor)>(r1, r2, $r10, r3, r4, r5, r6, r7, r8, r9);

        return $r11;
    }

    public com.opengamma.util.tuple.Pair makeCurvesFromDerivatives(com.opengamma.analytics.financial.provider.curve.MultiCurveBundle[], com.opengamma.analytics.financial.provider.description.inflation.InflationIssuerProviderDiscount, com.opengamma.analytics.financial.provider.curve.CurveBuildingBlockBundle, java.util.LinkedHashMap, com.opengamma.analytics.financial.interestrate.InstrumentDerivativeVisitor, com.opengamma.analytics.financial.interestrate.InstrumentDerivativeVisitor)
    {
        com.opengamma.analytics.financial.provider.curve.inflationissuer.InflationIssuerDiscountBuildingRepository r0;
        com.opengamma.analytics.financial.provider.curve.MultiCurveBundle[] r1;
        com.opengamma.analytics.financial.provider.description.inflation.InflationIssuerProviderDiscount r2;
        com.opengamma.analytics.financial.provider.curve.CurveBuildingBlockBundle r3;
        java.util.LinkedHashMap r4, $r8, $r9, $r10;
        com.opengamma.analytics.financial.interestrate.InstrumentDerivativeVisitor r5, r6;
        com.google.common.collect.LinkedListMultimap r7;
        com.opengamma.util.tuple.Pair $r11;

        r0 := @this: com.opengamma.analytics.financial.provider.curve.inflationissuer.InflationIssuerDiscountBuildingRepository;

        r1 := @parameter0: com.opengamma.analytics.financial.provider.curve.MultiCurveBundle[];

        r2 := @parameter1: com.opengamma.analytics.financial.provider.description.inflation.InflationIssuerProviderDiscount;

        r3 := @parameter2: com.opengamma.analytics.financial.provider.curve.CurveBuildingBlockBundle;

        r4 := @parameter3: java.util.LinkedHashMap;

        r5 := @parameter4: com.opengamma.analytics.financial.interestrate.InstrumentDerivativeVisitor;

        r6 := @parameter5: com.opengamma.analytics.financial.interestrate.InstrumentDerivativeVisitor;

        r7 = staticinvoke <com.google.common.collect.LinkedListMultimap: com.google.common.collect.LinkedListMultimap create()>();

        $r8 = new java.util.LinkedHashMap;

        specialinvoke $r8.<java.util.LinkedHashMap: void <init>()>();

        $r9 = new java.util.LinkedHashMap;

        specialinvoke $r9.<java.util.LinkedHashMap: void <init>()>();

        $r10 = new java.util.LinkedHashMap;

        specialinvoke $r10.<java.util.LinkedHashMap: void <init>()>();

        $r11 = virtualinvoke r0.<com.opengamma.analytics.financial.provider.curve.inflationissuer.InflationIssuerDiscountBuildingRepository: com.opengamma.util.tuple.Pair makeCurvesFromDerivatives(com.opengamma.analytics.financial.provider.curve.MultiCurveBundle[],com.opengamma.analytics.financial.provider.description.inflation.InflationIssuerProviderDiscount,com.opengamma.analytics.financial.provider.curve.CurveBuildingBlockBundle,java.util.LinkedHashMap,java.util.LinkedHashMap,java.util.LinkedHashMap,java.util.LinkedHashMap,com.google.common.collect.LinkedListMultimap,com.opengamma.analytics.financial.interestrate.InstrumentDerivativeVisitor,com.opengamma.analytics.financial.interestrate.InstrumentDerivativeVisitor)>(r1, r2, r3, $r8, $r9, $r10, r4, r7, r5, r6);

        return $r11;
    }

    public com.opengamma.util.tuple.Pair makeCurvesFromDerivatives(com.opengamma.analytics.financial.provider.curve.MultiCurveBundle[], com.opengamma.analytics.financial.provider.description.inflation.InflationIssuerProviderDiscount, com.opengamma.analytics.financial.provider.curve.CurveBuildingBlockBundle, java.util.LinkedHashMap, java.util.LinkedHashMap, java.util.LinkedHashMap, java.util.LinkedHashMap, com.google.common.collect.LinkedListMultimap, com.opengamma.analytics.financial.interestrate.InstrumentDerivativeVisitor, com.opengamma.analytics.financial.interestrate.InstrumentDerivativeVisitor)
    {
        com.opengamma.analytics.financial.provider.curve.inflationissuer.InflationIssuerDiscountBuildingRepository r0;
        com.opengamma.analytics.financial.provider.curve.MultiCurveBundle[] r1;
        com.opengamma.analytics.financial.provider.description.inflation.InflationIssuerProviderDiscount r2, r43;
        com.opengamma.analytics.financial.provider.curve.CurveBuildingBlockBundle r3, $r28;
        java.util.LinkedHashMap r4, r5, r6, r7, $r30, $r31, $r33;
        com.google.common.collect.LinkedListMultimap r8;
        com.opengamma.analytics.financial.interestrate.InstrumentDerivativeVisitor r9, r10;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, i12, i13, i14, i15, i16;
        com.opengamma.analytics.financial.provider.curve.MultiCurveBundle r15;
        int[] r16, r18;
        com.opengamma.analytics.financial.provider.curve.SingleCurveBundle r19, r44;
        com.opengamma.analytics.financial.interestrate.InstrumentDerivative[] r20, $r41, r45;
        com.opengamma.analytics.financial.curve.interestrate.generator.GeneratorCurve r21, $r36;
        java.lang.String r22;
        java.util.ArrayList $r29, $r34;
        com.opengamma.util.tuple.Pair $r32, $r39;
        double[] $r35, r46;
        java.util.List $r42;

        r0 := @this: com.opengamma.analytics.financial.provider.curve.inflationissuer.InflationIssuerDiscountBuildingRepository;

        r1 := @parameter0: com.opengamma.analytics.financial.provider.curve.MultiCurveBundle[];

        r2 := @parameter1: com.opengamma.analytics.financial.provider.description.inflation.InflationIssuerProviderDiscount;

        r3 := @parameter2: com.opengamma.analytics.financial.provider.curve.CurveBuildingBlockBundle;

        r4 := @parameter3: java.util.LinkedHashMap;

        r5 := @parameter4: java.util.LinkedHashMap;

        r6 := @parameter5: java.util.LinkedHashMap;

        r7 := @parameter6: java.util.LinkedHashMap;

        r8 := @parameter7: com.google.common.collect.LinkedListMultimap;

        r9 := @parameter8: com.opengamma.analytics.financial.interestrate.InstrumentDerivativeVisitor;

        r10 := @parameter9: com.opengamma.analytics.financial.interestrate.InstrumentDerivativeVisitor;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "curve bundles");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, "known data");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r7, "inflation map");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r9, "calculator");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r10, "sensitivity calculator");

        i0 = lengthof r1;

        r43 = virtualinvoke r2.<com.opengamma.analytics.financial.provider.description.inflation.InflationIssuerProviderDiscount: com.opengamma.analytics.financial.provider.description.inflation.InflationIssuerProviderDiscount copy()>();

        $r28 = new com.opengamma.analytics.financial.provider.curve.CurveBuildingBlockBundle;

        specialinvoke $r28.<com.opengamma.analytics.financial.provider.curve.CurveBuildingBlockBundle: void <init>()>();

        virtualinvoke $r28.<com.opengamma.analytics.financial.provider.curve.CurveBuildingBlockBundle: void addAll(com.opengamma.analytics.financial.provider.curve.CurveBuildingBlockBundle)>(r3);

        $r29 = new java.util.ArrayList;

        specialinvoke $r29.<java.util.ArrayList: void <init>()>();

        $r30 = new java.util.LinkedHashMap;

        specialinvoke $r30.<java.util.LinkedHashMap: void <init>()>();

        $r31 = new java.util.LinkedHashMap;

        specialinvoke $r31.<java.util.LinkedHashMap: void <init>()>();

        i12 = 0;

        i13 = 0;

     label1:
        if i13 >= i0 goto label6;

        r15 = r1[i13];

        i1 = virtualinvoke r15.<com.opengamma.analytics.financial.provider.curve.MultiCurveBundle: int size()>();

        r16 = newarray (int)[i1];

        $r33 = new java.util.LinkedHashMap;

        specialinvoke $r33.<java.util.LinkedHashMap: void <init>()>();

        $i2 = virtualinvoke r15.<com.opengamma.analytics.financial.provider.curve.MultiCurveBundle: int getNumberOfInstruments()>();

        r18 = newarray (int)[$i2];

        i14 = 0;

        i15 = 0;

     label2:
        if i15 >= i1 goto label3;

        r44 = virtualinvoke r15.<com.opengamma.analytics.financial.provider.curve.MultiCurveBundle: com.opengamma.analytics.financial.provider.curve.SingleCurveBundle getCurveBundle(int)>(i15);

        r16[i15] = i14;

        $i10 = virtualinvoke r44.<com.opengamma.analytics.financial.provider.curve.SingleCurveBundle: int size()>();

        r18[i15] = $i10;

        $i11 = r18[i15];

        i14 = i14 + $i11;

        $r41 = virtualinvoke r44.<com.opengamma.analytics.financial.provider.curve.SingleCurveBundle: com.opengamma.analytics.financial.interestrate.InstrumentDerivative[] getDerivatives()>();

        $r42 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r41);

        interfaceinvoke $r29.<java.util.List: boolean addAll(java.util.Collection)>($r42);

        i15 = i15 + 1;

        goto label2;

     label3:
        r45 = newarray (com.opengamma.analytics.financial.interestrate.InstrumentDerivative)[i14];

        r46 = newarray (double)[i14];

        i16 = 0;

     label4:
        if i16 >= i1 goto label5;

        r19 = virtualinvoke r15.<com.opengamma.analytics.financial.provider.curve.MultiCurveBundle: com.opengamma.analytics.financial.provider.curve.SingleCurveBundle getCurveBundle(int)>(i16);

        r20 = virtualinvoke r19.<com.opengamma.analytics.financial.provider.curve.SingleCurveBundle: com.opengamma.analytics.financial.interestrate.InstrumentDerivative[] getDerivatives()>();

        $i4 = r16[i16];

        $i3 = r18[i16];

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r20, 0, r45, $i4, $i3);

        $r35 = virtualinvoke r19.<com.opengamma.analytics.financial.provider.curve.SingleCurveBundle: double[] getStartingPoint()>();

        $i6 = r16[i16];

        $i5 = r18[i16];

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r35, 0, r46, $i6, $i5);

        $r36 = virtualinvoke r19.<com.opengamma.analytics.financial.provider.curve.SingleCurveBundle: com.opengamma.analytics.financial.curve.interestrate.generator.GeneratorCurve getCurveGenerator()>();

        r21 = virtualinvoke $r36.<com.opengamma.analytics.financial.curve.interestrate.generator.GeneratorCurve: com.opengamma.analytics.financial.curve.interestrate.generator.GeneratorCurve finalGenerator(java.lang.Object)>(r20);

        r22 = virtualinvoke r19.<com.opengamma.analytics.financial.provider.curve.SingleCurveBundle: java.lang.String getCurveName()>();

        virtualinvoke $r33.<java.util.LinkedHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r22, r21);

        virtualinvoke $r30.<java.util.LinkedHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r22, r21);

        $i7 = r16[i16];

        $i9 = i12 + $i7;

        $i8 = r18[i16];

        $r39 = staticinvoke <com.opengamma.util.tuple.Pairs: com.opengamma.util.tuple.Pair of(int,int)>($i9, $i8);

        virtualinvoke $r31.<java.util.LinkedHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r22, $r39);

        i16 = i16 + 1;

        goto label4;

     label5:
        r43 = specialinvoke r0.<com.opengamma.analytics.financial.provider.curve.inflationissuer.InflationIssuerDiscountBuildingRepository: com.opengamma.analytics.financial.provider.description.inflation.InflationIssuerProviderDiscount makeUnit(com.opengamma.analytics.financial.interestrate.InstrumentDerivative[],double[],com.opengamma.analytics.financial.provider.description.inflation.InflationIssuerProviderDiscount,java.util.LinkedHashMap,java.util.LinkedHashMap,java.util.LinkedHashMap,java.util.LinkedHashMap,com.google.common.collect.LinkedListMultimap,java.util.LinkedHashMap,com.opengamma.analytics.financial.interestrate.InstrumentDerivativeVisitor,com.opengamma.analytics.financial.interestrate.InstrumentDerivativeVisitor)>(r45, r46, r43, r4, r5, r6, r7, r8, $r33, r9, r10);

        $r34 = virtualinvoke r15.<com.opengamma.analytics.financial.provider.curve.MultiCurveBundle: java.util.ArrayList getNames()>();

        specialinvoke r0.<com.opengamma.analytics.financial.provider.curve.inflationissuer.InflationIssuerDiscountBuildingRepository: void updateBlockBundle(com.opengamma.analytics.financial.interestrate.InstrumentDerivative[],com.opengamma.analytics.financial.provider.description.inflation.InflationIssuerProviderDiscount,java.util.List,com.opengamma.analytics.financial.provider.curve.CurveBuildingBlockBundle,com.opengamma.analytics.financial.interestrate.InstrumentDerivativeVisitor)>(r45, r43, $r34, $r28, r10);

        i12 = i12 + i14;

        i13 = i13 + 1;

        goto label1;

     label6:
        $r32 = staticinvoke <com.opengamma.util.tuple.Pairs: com.opengamma.util.tuple.Pair of(java.lang.Object,java.lang.Object)>(r43, $r28);

        return $r32;
    }

    static void <clinit>()
    {
        com.opengamma.analytics.math.matrix.CommonsMatrixAlgebra $r0;

        $r0 = new com.opengamma.analytics.math.matrix.CommonsMatrixAlgebra;

        specialinvoke $r0.<com.opengamma.analytics.math.matrix.CommonsMatrixAlgebra: void <init>()>();

        <com.opengamma.analytics.financial.provider.curve.inflationissuer.InflationIssuerDiscountBuildingRepository: com.opengamma.analytics.math.matrix.MatrixAlgebra MATRIX_ALGEBRA> = $r0;

        return;
    }
}
