public class com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionPhysicalHullWhiteSuccessiveRootFinderCalibrationEngine extends com.opengamma.analytics.financial.interestrate.method.SuccessiveRootFinderCalibrationEngine
{
    private final java.util.List _calibrationTimes;

    public void <init>(com.opengamma.analytics.financial.interestrate.method.SuccessiveRootFinderCalibrationObjective)
    {
        com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionPhysicalHullWhiteSuccessiveRootFinderCalibrationEngine r0;
        com.opengamma.analytics.financial.interestrate.method.SuccessiveRootFinderCalibrationObjective r1;
        java.util.ArrayList $r2;

        r0 := @this: com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionPhysicalHullWhiteSuccessiveRootFinderCalibrationEngine;

        r1 := @parameter0: com.opengamma.analytics.financial.interestrate.method.SuccessiveRootFinderCalibrationObjective;

        specialinvoke r0.<com.opengamma.analytics.financial.interestrate.method.SuccessiveRootFinderCalibrationEngine: void <init>(com.opengamma.analytics.financial.interestrate.method.SuccessiveRootFinderCalibrationObjective)>(r1);

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        r0.<com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionPhysicalHullWhiteSuccessiveRootFinderCalibrationEngine: java.util.List _calibrationTimes> = $r2;

        return;
    }

    public void addInstrument(com.opengamma.analytics.financial.interestrate.InstrumentDerivative, com.opengamma.analytics.financial.interestrate.method.PricingMethod)
    {
        com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionPhysicalHullWhiteSuccessiveRootFinderCalibrationEngine r0;
        com.opengamma.analytics.financial.interestrate.InstrumentDerivative r1;
        com.opengamma.analytics.financial.interestrate.method.PricingMethod r2;
        boolean $z0;
        java.util.List $r3, $r4, $r5, $r8;
        java.lang.Double $r6, $r9;
        com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionPhysicalFixedIbor $r7;
        double $d0;

        r0 := @this: com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionPhysicalHullWhiteSuccessiveRootFinderCalibrationEngine;

        r1 := @parameter0: com.opengamma.analytics.financial.interestrate.InstrumentDerivative;

        r2 := @parameter1: com.opengamma.analytics.financial.interestrate.method.PricingMethod;

        $z0 = r1 instanceof com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionPhysicalFixedIbor;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z0, "Calibration instruments should be swaptions");

        $r3 = virtualinvoke r0.<com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionPhysicalHullWhiteSuccessiveRootFinderCalibrationEngine: java.util.List getBasket()>();

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>(r1);

        $r4 = virtualinvoke r0.<com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionPhysicalHullWhiteSuccessiveRootFinderCalibrationEngine: java.util.List getMethod()>();

        interfaceinvoke $r4.<java.util.List: boolean add(java.lang.Object)>(r2);

        $r5 = virtualinvoke r0.<com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionPhysicalHullWhiteSuccessiveRootFinderCalibrationEngine: java.util.List getCalibrationPrice()>();

        $r6 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(0.0);

        interfaceinvoke $r5.<java.util.List: boolean add(java.lang.Object)>($r6);

        $r8 = r0.<com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionPhysicalHullWhiteSuccessiveRootFinderCalibrationEngine: java.util.List _calibrationTimes>;

        $r7 = (com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionPhysicalFixedIbor) r1;

        $d0 = virtualinvoke $r7.<com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionPhysicalFixedIbor: double getTimeToExpiry()>();

        $r9 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        interfaceinvoke $r8.<java.util.List: boolean add(java.lang.Object)>($r9);

        return;
    }

    public void calibrate(com.opengamma.analytics.financial.interestrate.YieldCurveBundle)
    {
        com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionPhysicalHullWhiteSuccessiveRootFinderCalibrationEngine r0;
        com.opengamma.analytics.financial.interestrate.YieldCurveBundle r1;
        int i0, $i1, i2;
        com.opengamma.analytics.financial.interestrate.InstrumentDerivative r4;
        double[] r5;
        com.opengamma.analytics.financial.interestrate.method.SuccessiveRootFinderCalibrationObjective $r6, $r9, $r10, $r14, $r15, $r19, $r20, $r21, $r22, $r26;
        java.util.List $r7, $r12, $r16, $r27;
        com.opengamma.analytics.math.rootfinding.RidderSingleRootFinder $r8;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7;
        com.opengamma.analytics.math.rootfinding.BracketRoot $r11;
        java.lang.Object $r13, $r17, $r29;
        java.lang.Double $r18, $r23, $r24, $r30;
        com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionPhysicalHullWhiteCalibrationObjective $r28;

        r0 := @this: com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionPhysicalHullWhiteSuccessiveRootFinderCalibrationEngine;

        r1 := @parameter0: com.opengamma.analytics.financial.interestrate.YieldCurveBundle;

        virtualinvoke r0.<com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionPhysicalHullWhiteSuccessiveRootFinderCalibrationEngine: void computeCalibrationPrice(com.opengamma.analytics.financial.interestrate.YieldCurveBundle)>(r1);

        $r6 = virtualinvoke r0.<com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionPhysicalHullWhiteSuccessiveRootFinderCalibrationEngine: com.opengamma.analytics.financial.interestrate.method.SuccessiveRootFinderCalibrationObjective getCalibrationObjective()>();

        virtualinvoke $r6.<com.opengamma.analytics.financial.interestrate.method.SuccessiveRootFinderCalibrationObjective: void setCurves(com.opengamma.analytics.financial.interestrate.YieldCurveBundle)>(r1);

        $r7 = virtualinvoke r0.<com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionPhysicalHullWhiteSuccessiveRootFinderCalibrationEngine: java.util.List getBasket()>();

        i0 = interfaceinvoke $r7.<java.util.List: int size()>();

        $r8 = new com.opengamma.analytics.math.rootfinding.RidderSingleRootFinder;

        $r9 = virtualinvoke r0.<com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionPhysicalHullWhiteSuccessiveRootFinderCalibrationEngine: com.opengamma.analytics.financial.interestrate.method.SuccessiveRootFinderCalibrationObjective getCalibrationObjective()>();

        $d0 = virtualinvoke $r9.<com.opengamma.analytics.financial.interestrate.method.SuccessiveRootFinderCalibrationObjective: double getFunctionValueAccuracy()>();

        $r10 = virtualinvoke r0.<com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionPhysicalHullWhiteSuccessiveRootFinderCalibrationEngine: com.opengamma.analytics.financial.interestrate.method.SuccessiveRootFinderCalibrationObjective getCalibrationObjective()>();

        $d1 = virtualinvoke $r10.<com.opengamma.analytics.financial.interestrate.method.SuccessiveRootFinderCalibrationObjective: double getVariableAbsoluteAccuracy()>();

        specialinvoke $r8.<com.opengamma.analytics.math.rootfinding.RidderSingleRootFinder: void <init>(double,double)>($d0, $d1);

        $r11 = new com.opengamma.analytics.math.rootfinding.BracketRoot;

        specialinvoke $r11.<com.opengamma.analytics.math.rootfinding.BracketRoot: void <init>()>();

        i2 = 0;

     label1:
        if i2 >= i0 goto label3;

        $r12 = virtualinvoke r0.<com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionPhysicalHullWhiteSuccessiveRootFinderCalibrationEngine: java.util.List getBasket()>();

        $r13 = interfaceinvoke $r12.<java.util.List: java.lang.Object get(int)>(i2);

        r4 = (com.opengamma.analytics.financial.interestrate.InstrumentDerivative) $r13;

        $r14 = virtualinvoke r0.<com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionPhysicalHullWhiteSuccessiveRootFinderCalibrationEngine: com.opengamma.analytics.financial.interestrate.method.SuccessiveRootFinderCalibrationObjective getCalibrationObjective()>();

        virtualinvoke $r14.<com.opengamma.analytics.financial.interestrate.method.SuccessiveRootFinderCalibrationObjective: void setInstrument(com.opengamma.analytics.financial.interestrate.InstrumentDerivative)>(r4);

        $r15 = virtualinvoke r0.<com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionPhysicalHullWhiteSuccessiveRootFinderCalibrationEngine: com.opengamma.analytics.financial.interestrate.method.SuccessiveRootFinderCalibrationObjective getCalibrationObjective()>();

        $r16 = virtualinvoke r0.<com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionPhysicalHullWhiteSuccessiveRootFinderCalibrationEngine: java.util.List getCalibrationPrice()>();

        $r17 = interfaceinvoke $r16.<java.util.List: java.lang.Object get(int)>(i2);

        $r18 = (java.lang.Double) $r17;

        $d2 = virtualinvoke $r18.<java.lang.Double: double doubleValue()>();

        virtualinvoke $r15.<com.opengamma.analytics.financial.interestrate.method.SuccessiveRootFinderCalibrationObjective: void setPrice(double)>($d2);

        $r19 = virtualinvoke r0.<com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionPhysicalHullWhiteSuccessiveRootFinderCalibrationEngine: com.opengamma.analytics.financial.interestrate.method.SuccessiveRootFinderCalibrationObjective getCalibrationObjective()>();

        $r20 = virtualinvoke r0.<com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionPhysicalHullWhiteSuccessiveRootFinderCalibrationEngine: com.opengamma.analytics.financial.interestrate.method.SuccessiveRootFinderCalibrationObjective getCalibrationObjective()>();

        $d3 = virtualinvoke $r20.<com.opengamma.analytics.financial.interestrate.method.SuccessiveRootFinderCalibrationObjective: double getMinimumParameter()>();

        $r21 = virtualinvoke r0.<com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionPhysicalHullWhiteSuccessiveRootFinderCalibrationEngine: com.opengamma.analytics.financial.interestrate.method.SuccessiveRootFinderCalibrationObjective getCalibrationObjective()>();

        $d4 = virtualinvoke $r21.<com.opengamma.analytics.financial.interestrate.method.SuccessiveRootFinderCalibrationObjective: double getMaximumParameter()>();

        r5 = virtualinvoke $r11.<com.opengamma.analytics.math.rootfinding.BracketRoot: double[] getBracketedPoints(com.opengamma.analytics.math.function.Function1D,double,double)>($r19, $d3, $d4);

        $r22 = virtualinvoke r0.<com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionPhysicalHullWhiteSuccessiveRootFinderCalibrationEngine: com.opengamma.analytics.financial.interestrate.method.SuccessiveRootFinderCalibrationObjective getCalibrationObjective()>();

        $d5 = r5[0];

        $r23 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d5);

        $d6 = r5[1];

        $r24 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d6);

        virtualinvoke $r8.<com.opengamma.analytics.math.rootfinding.RidderSingleRootFinder: java.lang.Double getRoot(com.opengamma.analytics.math.function.Function1D,java.lang.Double,java.lang.Double)>($r22, $r23, $r24);

        $i1 = i0 - 1;

        if i2 >= $i1 goto label2;

        $r26 = virtualinvoke r0.<com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionPhysicalHullWhiteSuccessiveRootFinderCalibrationEngine: com.opengamma.analytics.financial.interestrate.method.SuccessiveRootFinderCalibrationObjective getCalibrationObjective()>();

        $r28 = (com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionPhysicalHullWhiteCalibrationObjective) $r26;

        $r27 = r0.<com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionPhysicalHullWhiteSuccessiveRootFinderCalibrationEngine: java.util.List _calibrationTimes>;

        $r29 = interfaceinvoke $r27.<java.util.List: java.lang.Object get(int)>(i2);

        $r30 = (java.lang.Double) $r29;

        $d7 = virtualinvoke $r30.<java.lang.Double: double doubleValue()>();

        virtualinvoke $r28.<com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionPhysicalHullWhiteCalibrationObjective: void setNextCalibrationTime(double)>($d7);

     label2:
        i2 = i2 + 1;

        goto label1;

     label3:
        return;
    }
}
