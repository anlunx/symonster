public class org.apache.commons.math3.fraction.BigFraction extends java.lang.Number implements org.apache.commons.math3.FieldElement, java.lang.Comparable, java.io.Serializable
{
    public static final org.apache.commons.math3.fraction.BigFraction TWO;
    public static final org.apache.commons.math3.fraction.BigFraction ONE;
    public static final org.apache.commons.math3.fraction.BigFraction ZERO;
    public static final org.apache.commons.math3.fraction.BigFraction MINUS_ONE;
    public static final org.apache.commons.math3.fraction.BigFraction FOUR_FIFTHS;
    public static final org.apache.commons.math3.fraction.BigFraction ONE_FIFTH;
    public static final org.apache.commons.math3.fraction.BigFraction ONE_HALF;
    public static final org.apache.commons.math3.fraction.BigFraction ONE_QUARTER;
    public static final org.apache.commons.math3.fraction.BigFraction ONE_THIRD;
    public static final org.apache.commons.math3.fraction.BigFraction THREE_FIFTHS;
    public static final org.apache.commons.math3.fraction.BigFraction THREE_QUARTERS;
    public static final org.apache.commons.math3.fraction.BigFraction TWO_FIFTHS;
    public static final org.apache.commons.math3.fraction.BigFraction TWO_QUARTERS;
    public static final org.apache.commons.math3.fraction.BigFraction TWO_THIRDS;
    private static final long serialVersionUID;
    private static final java.math.BigInteger ONE_HUNDRED;
    private final java.math.BigInteger numerator;
    private final java.math.BigInteger denominator;

    public void <init>(java.math.BigInteger)
    {
        org.apache.commons.math3.fraction.BigFraction r0;
        java.math.BigInteger r1, $r2;

        r0 := @this: org.apache.commons.math3.fraction.BigFraction;

        r1 := @parameter0: java.math.BigInteger;

        $r2 = <java.math.BigInteger: java.math.BigInteger ONE>;

        specialinvoke r0.<org.apache.commons.math3.fraction.BigFraction: void <init>(java.math.BigInteger,java.math.BigInteger)>(r1, $r2);

        return;
    }

    public void <init>(java.math.BigInteger, java.math.BigInteger)
    {
        org.apache.commons.math3.fraction.BigFraction r0;
        java.math.BigInteger r1, $r6, $r7, $r8, $r9, $r10, $r11, r15, r16;
        java.lang.Object[] $r2, $r4, $r13;
        org.apache.commons.math3.exception.util.LocalizedFormats $r3, $r5, $r14;
        boolean $z0, $z1;
        int $i0, $i1;
        org.apache.commons.math3.exception.ZeroException $r12;

        r0 := @this: org.apache.commons.math3.fraction.BigFraction;

        r15 := @parameter0: java.math.BigInteger;

        r16 := @parameter1: java.math.BigInteger;

        specialinvoke r0.<java.lang.Number: void <init>()>();

        $r3 = <org.apache.commons.math3.exception.util.LocalizedFormats: org.apache.commons.math3.exception.util.LocalizedFormats NUMERATOR>;

        $r2 = newarray (java.lang.Object)[0];

        staticinvoke <org.apache.commons.math3.util.MathUtils: void checkNotNull(java.lang.Object,org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])>(r15, $r3, $r2);

        $r5 = <org.apache.commons.math3.exception.util.LocalizedFormats: org.apache.commons.math3.exception.util.LocalizedFormats DENOMINATOR>;

        $r4 = newarray (java.lang.Object)[0];

        staticinvoke <org.apache.commons.math3.util.MathUtils: void checkNotNull(java.lang.Object,org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])>(r16, $r5, $r4);

        $r6 = <java.math.BigInteger: java.math.BigInteger ZERO>;

        $z0 = virtualinvoke $r6.<java.math.BigInteger: boolean equals(java.lang.Object)>(r16);

        if $z0 == 0 goto label1;

        $r12 = new org.apache.commons.math3.exception.ZeroException;

        $r14 = <org.apache.commons.math3.exception.util.LocalizedFormats: org.apache.commons.math3.exception.util.LocalizedFormats ZERO_DENOMINATOR>;

        $r13 = newarray (java.lang.Object)[0];

        specialinvoke $r12.<org.apache.commons.math3.exception.ZeroException: void <init>(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])>($r14, $r13);

        throw $r12;

     label1:
        $r7 = <java.math.BigInteger: java.math.BigInteger ZERO>;

        $z1 = virtualinvoke $r7.<java.math.BigInteger: boolean equals(java.lang.Object)>(r15);

        if $z1 == 0 goto label2;

        $r10 = <java.math.BigInteger: java.math.BigInteger ZERO>;

        r0.<org.apache.commons.math3.fraction.BigFraction: java.math.BigInteger numerator> = $r10;

        $r11 = <java.math.BigInteger: java.math.BigInteger ONE>;

        r0.<org.apache.commons.math3.fraction.BigFraction: java.math.BigInteger denominator> = $r11;

        goto label5;

     label2:
        r1 = virtualinvoke r15.<java.math.BigInteger: java.math.BigInteger gcd(java.math.BigInteger)>(r16);

        $r8 = <java.math.BigInteger: java.math.BigInteger ONE>;

        $i0 = virtualinvoke $r8.<java.math.BigInteger: int compareTo(java.math.BigInteger)>(r1);

        if $i0 >= 0 goto label3;

        r15 = virtualinvoke r15.<java.math.BigInteger: java.math.BigInteger divide(java.math.BigInteger)>(r1);

        r16 = virtualinvoke r16.<java.math.BigInteger: java.math.BigInteger divide(java.math.BigInteger)>(r1);

     label3:
        $r9 = <java.math.BigInteger: java.math.BigInteger ZERO>;

        $i1 = virtualinvoke $r9.<java.math.BigInteger: int compareTo(java.math.BigInteger)>(r16);

        if $i1 <= 0 goto label4;

        r15 = virtualinvoke r15.<java.math.BigInteger: java.math.BigInteger negate()>();

        r16 = virtualinvoke r16.<java.math.BigInteger: java.math.BigInteger negate()>();

     label4:
        r0.<org.apache.commons.math3.fraction.BigFraction: java.math.BigInteger numerator> = r15;

        r0.<org.apache.commons.math3.fraction.BigFraction: java.math.BigInteger denominator> = r16;

     label5:
        return;
    }

    public void <init>(double) throws org.apache.commons.math3.exception.MathIllegalArgumentException
    {
        org.apache.commons.math3.fraction.BigFraction r0;
        double d0;
        long l0, l1, l2, $l5, $l8, l10, $l12;
        boolean $z0, $z1;
        byte $b3, $b4, $b9, $b13;
        int $i6, $i7, i11;
        java.math.BigInteger $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8;
        org.apache.commons.math3.exception.MathIllegalArgumentException $r9, $r12;
        java.lang.Object[] $r10, $r13;
        org.apache.commons.math3.exception.util.LocalizedFormats $r11, $r14;

        r0 := @this: org.apache.commons.math3.fraction.BigFraction;

        d0 := @parameter0: double;

        specialinvoke r0.<java.lang.Number: void <init>()>();

        $z0 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d0);

        if $z0 == 0 goto label1;

        $r12 = new org.apache.commons.math3.exception.MathIllegalArgumentException;

        $r14 = <org.apache.commons.math3.exception.util.LocalizedFormats: org.apache.commons.math3.exception.util.LocalizedFormats NAN_VALUE_CONVERSION>;

        $r13 = newarray (java.lang.Object)[0];

        specialinvoke $r12.<org.apache.commons.math3.exception.MathIllegalArgumentException: void <init>(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])>($r14, $r13);

        throw $r12;

     label1:
        $z1 = staticinvoke <java.lang.Double: boolean isInfinite(double)>(d0);

        if $z1 == 0 goto label2;

        $r9 = new org.apache.commons.math3.exception.MathIllegalArgumentException;

        $r11 = <org.apache.commons.math3.exception.util.LocalizedFormats: org.apache.commons.math3.exception.util.LocalizedFormats INFINITE_VALUE_CONVERSION>;

        $r10 = newarray (java.lang.Object)[0];

        specialinvoke $r9.<org.apache.commons.math3.exception.MathIllegalArgumentException: void <init>(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])>($r11, $r10);

        throw $r9;

     label2:
        l0 = staticinvoke <java.lang.Double: long doubleToLongBits(double)>(d0);

        l1 = l0 & -9223372036854775808L;

        l2 = l0 & 9218868437227405312L;

        l10 = l0 & 4503599627370495L;

        $b3 = l2 cmp 0L;

        if $b3 == 0 goto label3;

        l10 = l10 | 4503599627370496L;

     label3:
        $b4 = l1 cmp 0L;

        if $b4 == 0 goto label4;

        l10 = neg l10;

     label4:
        $l5 = l2 >> 52;

        $i6 = (int) $l5;

        i11 = $i6 - 1075;

     label5:
        $l12 = l10 & 9007199254740990L;

        $b13 = $l12 cmp 0L;

        if $b13 == 0 goto label6;

        $l8 = l10 & 1L;

        $b9 = $l8 cmp 0L;

        if $b9 != 0 goto label6;

        l10 = l10 >> 1;

        i11 = i11 + 1;

        goto label5;

     label6:
        if i11 >= 0 goto label7;

        $r6 = staticinvoke <java.math.BigInteger: java.math.BigInteger valueOf(long)>(l10);

        r0.<org.apache.commons.math3.fraction.BigFraction: java.math.BigInteger numerator> = $r6;

        $r7 = <java.math.BigInteger: java.math.BigInteger ZERO>;

        $i7 = neg i11;

        $r8 = virtualinvoke $r7.<java.math.BigInteger: java.math.BigInteger flipBit(int)>($i7);

        r0.<org.apache.commons.math3.fraction.BigFraction: java.math.BigInteger denominator> = $r8;

        goto label8;

     label7:
        $r1 = staticinvoke <java.math.BigInteger: java.math.BigInteger valueOf(long)>(l10);

        $r2 = <java.math.BigInteger: java.math.BigInteger ZERO>;

        $r3 = virtualinvoke $r2.<java.math.BigInteger: java.math.BigInteger flipBit(int)>(i11);

        $r4 = virtualinvoke $r1.<java.math.BigInteger: java.math.BigInteger multiply(java.math.BigInteger)>($r3);

        r0.<org.apache.commons.math3.fraction.BigFraction: java.math.BigInteger numerator> = $r4;

        $r5 = <java.math.BigInteger: java.math.BigInteger ONE>;

        r0.<org.apache.commons.math3.fraction.BigFraction: java.math.BigInteger denominator> = $r5;

     label8:
        return;
    }

    public void <init>(double, double, int) throws org.apache.commons.math3.fraction.FractionConversionException
    {
        org.apache.commons.math3.fraction.BigFraction r0;
        double d0, d1;
        int i0;

        r0 := @this: org.apache.commons.math3.fraction.BigFraction;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        i0 := @parameter2: int;

        specialinvoke r0.<org.apache.commons.math3.fraction.BigFraction: void <init>(double,double,int,int)>(d0, d1, 2147483647, i0);

        return;
    }

    private void <init>(double, double, int, int) throws org.apache.commons.math3.fraction.FractionConversionException
    {
        org.apache.commons.math3.fraction.BigFraction r0;
        double d0, d1, d2, d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, d15;
        int i0, i1, i27;
        long l3, $l4, $l7, $l8, $l11, $l12, $l14, $l18, l20, l21, l22, l23, l24, l28, l29;
        byte $b5, $b6, $b9, $b10, $b13, $b15, $b16, $b17, $b19;
        org.apache.commons.math3.fraction.FractionConversionException $r1, $r6, $r9;
        java.math.BigInteger $r2, $r3, $r4, $r5, $r7, $r8;
        boolean z0;

        r0 := @this: org.apache.commons.math3.fraction.BigFraction;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        specialinvoke r0.<java.lang.Number: void <init>()>();

        d15 = d0;

        $d4 = staticinvoke <org.apache.commons.math3.util.FastMath: double floor(double)>(d0);

        l20 = (long) $d4;

        $l4 = staticinvoke <org.apache.commons.math3.util.FastMath: long abs(long)>(l20);

        $b5 = $l4 cmp 2147483647L;

        if $b5 <= 0 goto label01;

        $r9 = new org.apache.commons.math3.fraction.FractionConversionException;

        specialinvoke $r9.<org.apache.commons.math3.fraction.FractionConversionException: void <init>(double,long,long)>(d0, l20, 1L);

        throw $r9;

     label01:
        $d5 = (double) l20;

        $d6 = $d5 - d0;

        $d7 = staticinvoke <org.apache.commons.math3.util.FastMath: double abs(double)>($d6);

        $b6 = $d7 cmpg d1;

        if $b6 >= 0 goto label02;

        $r7 = staticinvoke <java.math.BigInteger: java.math.BigInteger valueOf(long)>(l20);

        r0.<org.apache.commons.math3.fraction.BigFraction: java.math.BigInteger numerator> = $r7;

        $r8 = <java.math.BigInteger: java.math.BigInteger ONE>;

        r0.<org.apache.commons.math3.fraction.BigFraction: java.math.BigInteger denominator> = $r8;

        return;

     label02:
        l21 = 1L;

        l22 = 0L;

        l23 = l20;

        l24 = 1L;

        i27 = 0;

        z0 = 0;

     label03:
        i27 = i27 + 1;

        $d8 = (double) l20;

        $d9 = d15 - $d8;

        d2 = 1.0 / $d9;

        $d10 = staticinvoke <org.apache.commons.math3.util.FastMath: double floor(double)>(d2);

        l3 = (long) $d10;

        $l7 = l3 * l23;

        l28 = $l7 + l21;

        $l8 = l3 * l24;

        l29 = $l8 + l22;

        $b9 = l28 cmp 2147483647L;

        if $b9 > 0 goto label04;

        $b16 = l29 cmp 2147483647L;

        if $b16 <= 0 goto label06;

     label04:
        $b10 = d1 cmpl 0.0;

        if $b10 != 0 goto label05;

        $l11 = staticinvoke <org.apache.commons.math3.util.FastMath: long abs(long)>(l24);

        $l12 = (long) i0;

        $b13 = $l11 cmp $l12;

        if $b13 >= 0 goto label05;

        goto label09;

     label05:
        $r1 = new org.apache.commons.math3.fraction.FractionConversionException;

        specialinvoke $r1.<org.apache.commons.math3.fraction.FractionConversionException: void <init>(double,long,long)>(d0, l28, l29);

        throw $r1;

     label06:
        $d12 = (double) l28;

        $d11 = (double) l29;

        d3 = $d12 / $d11;

        if i27 >= i1 goto label07;

        $d13 = d3 - d0;

        $d14 = staticinvoke <org.apache.commons.math3.util.FastMath: double abs(double)>($d13);

        $b17 = $d14 cmpl d1;

        if $b17 <= 0 goto label07;

        $l18 = (long) i0;

        $b19 = l29 cmp $l18;

        if $b19 >= 0 goto label07;

        l21 = l23;

        l23 = l28;

        l22 = l24;

        l24 = l29;

        l20 = l3;

        d15 = d2;

        goto label08;

     label07:
        z0 = 1;

     label08:
        if z0 == 0 goto label03;

     label09:
        if i27 < i1 goto label10;

        $r6 = new org.apache.commons.math3.fraction.FractionConversionException;

        specialinvoke $r6.<org.apache.commons.math3.fraction.FractionConversionException: void <init>(double,int)>(d0, i1);

        throw $r6;

     label10:
        $l14 = (long) i0;

        $b15 = l29 cmp $l14;

        if $b15 >= 0 goto label11;

        $r4 = staticinvoke <java.math.BigInteger: java.math.BigInteger valueOf(long)>(l28);

        r0.<org.apache.commons.math3.fraction.BigFraction: java.math.BigInteger numerator> = $r4;

        $r5 = staticinvoke <java.math.BigInteger: java.math.BigInteger valueOf(long)>(l29);

        r0.<org.apache.commons.math3.fraction.BigFraction: java.math.BigInteger denominator> = $r5;

        goto label12;

     label11:
        $r2 = staticinvoke <java.math.BigInteger: java.math.BigInteger valueOf(long)>(l23);

        r0.<org.apache.commons.math3.fraction.BigFraction: java.math.BigInteger numerator> = $r2;

        $r3 = staticinvoke <java.math.BigInteger: java.math.BigInteger valueOf(long)>(l24);

        r0.<org.apache.commons.math3.fraction.BigFraction: java.math.BigInteger denominator> = $r3;

     label12:
        return;
    }

    public void <init>(double, int) throws org.apache.commons.math3.fraction.FractionConversionException
    {
        org.apache.commons.math3.fraction.BigFraction r0;
        double d0;
        int i0;

        r0 := @this: org.apache.commons.math3.fraction.BigFraction;

        d0 := @parameter0: double;

        i0 := @parameter1: int;

        specialinvoke r0.<org.apache.commons.math3.fraction.BigFraction: void <init>(double,double,int,int)>(d0, 0.0, i0, 100);

        return;
    }

    public void <init>(int)
    {
        org.apache.commons.math3.fraction.BigFraction r0;
        int i0;
        long $l1;
        java.math.BigInteger $r1, $r2;

        r0 := @this: org.apache.commons.math3.fraction.BigFraction;

        i0 := @parameter0: int;

        $l1 = (long) i0;

        $r1 = staticinvoke <java.math.BigInteger: java.math.BigInteger valueOf(long)>($l1);

        $r2 = <java.math.BigInteger: java.math.BigInteger ONE>;

        specialinvoke r0.<org.apache.commons.math3.fraction.BigFraction: void <init>(java.math.BigInteger,java.math.BigInteger)>($r1, $r2);

        return;
    }

    public void <init>(int, int)
    {
        org.apache.commons.math3.fraction.BigFraction r0;
        int i0, i1;
        long $l2, $l3;
        java.math.BigInteger $r1, $r2;

        r0 := @this: org.apache.commons.math3.fraction.BigFraction;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $l2 = (long) i0;

        $r1 = staticinvoke <java.math.BigInteger: java.math.BigInteger valueOf(long)>($l2);

        $l3 = (long) i1;

        $r2 = staticinvoke <java.math.BigInteger: java.math.BigInteger valueOf(long)>($l3);

        specialinvoke r0.<org.apache.commons.math3.fraction.BigFraction: void <init>(java.math.BigInteger,java.math.BigInteger)>($r1, $r2);

        return;
    }

    public void <init>(long)
    {
        org.apache.commons.math3.fraction.BigFraction r0;
        long l0;
        java.math.BigInteger $r1, $r2;

        r0 := @this: org.apache.commons.math3.fraction.BigFraction;

        l0 := @parameter0: long;

        $r1 = staticinvoke <java.math.BigInteger: java.math.BigInteger valueOf(long)>(l0);

        $r2 = <java.math.BigInteger: java.math.BigInteger ONE>;

        specialinvoke r0.<org.apache.commons.math3.fraction.BigFraction: void <init>(java.math.BigInteger,java.math.BigInteger)>($r1, $r2);

        return;
    }

    public void <init>(long, long)
    {
        org.apache.commons.math3.fraction.BigFraction r0;
        long l0, l1;
        java.math.BigInteger $r1, $r2;

        r0 := @this: org.apache.commons.math3.fraction.BigFraction;

        l0 := @parameter0: long;

        l1 := @parameter1: long;

        $r1 = staticinvoke <java.math.BigInteger: java.math.BigInteger valueOf(long)>(l0);

        $r2 = staticinvoke <java.math.BigInteger: java.math.BigInteger valueOf(long)>(l1);

        specialinvoke r0.<org.apache.commons.math3.fraction.BigFraction: void <init>(java.math.BigInteger,java.math.BigInteger)>($r1, $r2);

        return;
    }

    public static org.apache.commons.math3.fraction.BigFraction getReducedFraction(int, int)
    {
        int i0, i1;
        org.apache.commons.math3.fraction.BigFraction $r0, $r1;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        if i0 != 0 goto label1;

        $r1 = <org.apache.commons.math3.fraction.BigFraction: org.apache.commons.math3.fraction.BigFraction ZERO>;

        return $r1;

     label1:
        $r0 = new org.apache.commons.math3.fraction.BigFraction;

        specialinvoke $r0.<org.apache.commons.math3.fraction.BigFraction: void <init>(int,int)>(i0, i1);

        return $r0;
    }

    public org.apache.commons.math3.fraction.BigFraction abs()
    {
        org.apache.commons.math3.fraction.BigFraction r0, $r3;
        java.math.BigInteger $r1, $r2;
        int $i0;

        r0 := @this: org.apache.commons.math3.fraction.BigFraction;

        $r2 = <java.math.BigInteger: java.math.BigInteger ZERO>;

        $r1 = r0.<org.apache.commons.math3.fraction.BigFraction: java.math.BigInteger numerator>;

        $i0 = virtualinvoke $r2.<java.math.BigInteger: int compareTo(java.math.BigInteger)>($r1);

        if $i0 > 0 goto label1;

        $r3 = r0;

        goto label2;

     label1:
        $r3 = virtualinvoke r0.<org.apache.commons.math3.fraction.BigFraction: org.apache.commons.math3.fraction.BigFraction negate()>();

     label2:
        return $r3;
    }

    public org.apache.commons.math3.fraction.BigFraction add(java.math.BigInteger) throws org.apache.commons.math3.exception.NullArgumentException
    {
        org.apache.commons.math3.fraction.BigFraction r0, $r2;
        java.math.BigInteger r1, $r3, $r4, $r5, $r6, $r7;

        r0 := @this: org.apache.commons.math3.fraction.BigFraction;

        r1 := @parameter0: java.math.BigInteger;

        staticinvoke <org.apache.commons.math3.util.MathUtils: void checkNotNull(java.lang.Object)>(r1);

        $r2 = new org.apache.commons.math3.fraction.BigFraction;

        $r4 = r0.<org.apache.commons.math3.fraction.BigFraction: java.math.BigInteger numerator>;

        $r3 = r0.<org.apache.commons.math3.fraction.BigFraction: java.math.BigInteger denominator>;

        $r5 = virtualinvoke $r3.<java.math.BigInteger: java.math.BigInteger multiply(java.math.BigInteger)>(r1);

        $r6 = virtualinvoke $r4.<java.math.BigInteger: java.math.BigInteger add(java.math.BigInteger)>($r5);

        $r7 = r0.<org.apache.commons.math3.fraction.BigFraction: java.math.BigInteger denominator>;

        specialinvoke $r2.<org.apache.commons.math3.fraction.BigFraction: void <init>(java.math.BigInteger,java.math.BigInteger)>($r6, $r7);

        return $r2;
    }

    public org.apache.commons.math3.fraction.BigFraction add(int)
    {
        org.apache.commons.math3.fraction.BigFraction r0, $r2;
        int i0;
        long $l1;
        java.math.BigInteger $r1;

        r0 := @this: org.apache.commons.math3.fraction.BigFraction;

        i0 := @parameter0: int;

        $l1 = (long) i0;

        $r1 = staticinvoke <java.math.BigInteger: java.math.BigInteger valueOf(long)>($l1);

        $r2 = virtualinvoke r0.<org.apache.commons.math3.fraction.BigFraction: org.apache.commons.math3.fraction.BigFraction add(java.math.BigInteger)>($r1);

        return $r2;
    }

    public org.apache.commons.math3.fraction.BigFraction add(long)
    {
        org.apache.commons.math3.fraction.BigFraction r0, $r2;
        long l0;
        java.math.BigInteger $r1;

        r0 := @this: org.apache.commons.math3.fraction.BigFraction;

        l0 := @parameter0: long;

        $r1 = staticinvoke <java.math.BigInteger: java.math.BigInteger valueOf(long)>(l0);

        $r2 = virtualinvoke r0.<org.apache.commons.math3.fraction.BigFraction: org.apache.commons.math3.fraction.BigFraction add(java.math.BigInteger)>($r1);

        return $r2;
    }

    public org.apache.commons.math3.fraction.BigFraction add(org.apache.commons.math3.fraction.BigFraction)
    {
        org.apache.commons.math3.fraction.BigFraction r0, r1, $r2, $r13;
        boolean $z0, $z1;
        java.math.BigInteger $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r14, $r15, r19, r20;
        org.apache.commons.math3.exception.NullArgumentException $r16;
        java.lang.Object[] $r17;
        org.apache.commons.math3.exception.util.LocalizedFormats $r18;

        r0 := @this: org.apache.commons.math3.fraction.BigFraction;

        r1 := @parameter0: org.apache.commons.math3.fraction.BigFraction;

        if r1 != null goto label1;

        $r16 = new org.apache.commons.math3.exception.NullArgumentException;

        $r18 = <org.apache.commons.math3.exception.util.LocalizedFormats: org.apache.commons.math3.exception.util.LocalizedFormats FRACTION>;

        $r17 = newarray (java.lang.Object)[0];

        specialinvoke $r16.<org.apache.commons.math3.exception.NullArgumentException: void <init>(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])>($r18, $r17);

        throw $r16;

     label1:
        $r2 = <org.apache.commons.math3.fraction.BigFraction: org.apache.commons.math3.fraction.BigFraction ZERO>;

        $z0 = virtualinvoke $r2.<org.apache.commons.math3.fraction.BigFraction: boolean equals(java.lang.Object)>(r1);

        if $z0 == 0 goto label2;

        return r0;

     label2:
        $r4 = r0.<org.apache.commons.math3.fraction.BigFraction: java.math.BigInteger denominator>;

        $r3 = r1.<org.apache.commons.math3.fraction.BigFraction: java.math.BigInteger denominator>;

        $z1 = virtualinvoke $r4.<java.math.BigInteger: boolean equals(java.lang.Object)>($r3);

        if $z1 == 0 goto label3;

        $r15 = r0.<org.apache.commons.math3.fraction.BigFraction: java.math.BigInteger numerator>;

        $r14 = r1.<org.apache.commons.math3.fraction.BigFraction: java.math.BigInteger numerator>;

        r19 = virtualinvoke $r15.<java.math.BigInteger: java.math.BigInteger add(java.math.BigInteger)>($r14);

        r20 = r0.<org.apache.commons.math3.fraction.BigFraction: java.math.BigInteger denominator>;

        goto label4;

     label3:
        $r6 = r0.<org.apache.commons.math3.fraction.BigFraction: java.math.BigInteger numerator>;

        $r5 = r1.<org.apache.commons.math3.fraction.BigFraction: java.math.BigInteger denominator>;

        $r7 = virtualinvoke $r6.<java.math.BigInteger: java.math.BigInteger multiply(java.math.BigInteger)>($r5);

        $r9 = r1.<org.apache.commons.math3.fraction.BigFraction: java.math.BigInteger numerator>;

        $r8 = r0.<org.apache.commons.math3.fraction.BigFraction: java.math.BigInteger denominator>;

        $r10 = virtualinvoke $r9.<java.math.BigInteger: java.math.BigInteger multiply(java.math.BigInteger)>($r8);

        r19 = virtualinvoke $r7.<java.math.BigInteger: java.math.BigInteger add(java.math.BigInteger)>($r10);

        $r12 = r0.<org.apache.commons.math3.fraction.BigFraction: java.math.BigInteger denominator>;

        $r11 = r1.<org.apache.commons.math3.fraction.BigFraction: java.math.BigInteger denominator>;

        r20 = virtualinvoke $r12.<java.math.BigInteger: java.math.BigInteger multiply(java.math.BigInteger)>($r11);

     label4:
        $r13 = new org.apache.commons.math3.fraction.BigFraction;

        specialinvoke $r13.<org.apache.commons.math3.fraction.BigFraction: void <init>(java.math.BigInteger,java.math.BigInteger)>(r19, r20);

        return $r13;
    }

    public java.math.BigDecimal bigDecimalValue()
    {
        org.apache.commons.math3.fraction.BigFraction r0;
        java.math.BigDecimal $r1, $r3, $r5;
        java.math.BigInteger $r2, $r4;

        r0 := @this: org.apache.commons.math3.fraction.BigFraction;

        $r1 = new java.math.BigDecimal;

        $r2 = r0.<org.apache.commons.math3.fraction.BigFraction: java.math.BigInteger numerator>;

        specialinvoke $r1.<java.math.BigDecimal: void <init>(java.math.BigInteger)>($r2);

        $r3 = new java.math.BigDecimal;

        $r4 = r0.<org.apache.commons.math3.fraction.BigFraction: java.math.BigInteger denominator>;

        specialinvoke $r3.<java.math.BigDecimal: void <init>(java.math.BigInteger)>($r4);

        $r5 = virtualinvoke $r1.<java.math.BigDecimal: java.math.BigDecimal divide(java.math.BigDecimal)>($r3);

        return $r5;
    }

    public java.math.BigDecimal bigDecimalValue(int)
    {
        org.apache.commons.math3.fraction.BigFraction r0;
        int i0;
        java.math.BigDecimal $r1, $r3, $r5;
        java.math.BigInteger $r2, $r4;

        r0 := @this: org.apache.commons.math3.fraction.BigFraction;

        i0 := @parameter0: int;

        $r1 = new java.math.BigDecimal;

        $r2 = r0.<org.apache.commons.math3.fraction.BigFraction: java.math.BigInteger numerator>;

        specialinvoke $r1.<java.math.BigDecimal: void <init>(java.math.BigInteger)>($r2);

        $r3 = new java.math.BigDecimal;

        $r4 = r0.<org.apache.commons.math3.fraction.BigFraction: java.math.BigInteger denominator>;

        specialinvoke $r3.<java.math.BigDecimal: void <init>(java.math.BigInteger)>($r4);

        $r5 = virtualinvoke $r1.<java.math.BigDecimal: java.math.BigDecimal divide(java.math.BigDecimal,int)>($r3, i0);

        return $r5;
    }

    public java.math.BigDecimal bigDecimalValue(int, int)
    {
        org.apache.commons.math3.fraction.BigFraction r0;
        int i0, i1;
        java.math.BigDecimal $r1, $r3, $r5;
        java.math.BigInteger $r2, $r4;

        r0 := @this: org.apache.commons.math3.fraction.BigFraction;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = new java.math.BigDecimal;

        $r2 = r0.<org.apache.commons.math3.fraction.BigFraction: java.math.BigInteger numerator>;

        specialinvoke $r1.<java.math.BigDecimal: void <init>(java.math.BigInteger)>($r2);

        $r3 = new java.math.BigDecimal;

        $r4 = r0.<org.apache.commons.math3.fraction.BigFraction: java.math.BigInteger denominator>;

        specialinvoke $r3.<java.math.BigDecimal: void <init>(java.math.BigInteger)>($r4);

        $r5 = virtualinvoke $r1.<java.math.BigDecimal: java.math.BigDecimal divide(java.math.BigDecimal,int,int)>($r3, i0, i1);

        return $r5;
    }

    public int compareTo(org.apache.commons.math3.fraction.BigFraction)
    {
        org.apache.commons.math3.fraction.BigFraction r0, r1;
        java.math.BigInteger r2, r3, $r4, $r5, $r6, $r7;
        int $i0;

        r0 := @this: org.apache.commons.math3.fraction.BigFraction;

        r1 := @parameter0: org.apache.commons.math3.fraction.BigFraction;

        $r5 = r0.<org.apache.commons.math3.fraction.BigFraction: java.math.BigInteger numerator>;

        $r4 = r1.<org.apache.commons.math3.fraction.BigFraction: java.math.BigInteger denominator>;

        r2 = virtualinvoke $r5.<java.math.BigInteger: java.math.BigInteger multiply(java.math.BigInteger)>($r4);

        $r7 = r0.<org.apache.commons.math3.fraction.BigFraction: java.math.BigInteger denominator>;

        $r6 = r1.<org.apache.commons.math3.fraction.BigFraction: java.math.BigInteger numerator>;

        r3 = virtualinvoke $r7.<java.math.BigInteger: java.math.BigInteger multiply(java.math.BigInteger)>($r6);

        $i0 = virtualinvoke r2.<java.math.BigInteger: int compareTo(java.math.BigInteger)>(r3);

        return $i0;
    }

    public org.apache.commons.math3.fraction.BigFraction divide(java.math.BigInteger)
    {
        org.apache.commons.math3.fraction.BigFraction r0, $r3;
        java.math.BigInteger r1, $r2, $r4, $r5, $r6;
        boolean $z0;
        org.apache.commons.math3.exception.MathArithmeticException $r7;
        java.lang.Object[] $r8, $r11;
        org.apache.commons.math3.exception.util.LocalizedFormats $r9, $r12;
        org.apache.commons.math3.exception.NullArgumentException $r10;

        r0 := @this: org.apache.commons.math3.fraction.BigFraction;

        r1 := @parameter0: java.math.BigInteger;

        if r1 != null goto label1;

        $r10 = new org.apache.commons.math3.exception.NullArgumentException;

        $r12 = <org.apache.commons.math3.exception.util.LocalizedFormats: org.apache.commons.math3.exception.util.LocalizedFormats FRACTION>;

        $r11 = newarray (java.lang.Object)[0];

        specialinvoke $r10.<org.apache.commons.math3.exception.NullArgumentException: void <init>(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])>($r12, $r11);

        throw $r10;

     label1:
        $r2 = <java.math.BigInteger: java.math.BigInteger ZERO>;

        $z0 = virtualinvoke $r2.<java.math.BigInteger: boolean equals(java.lang.Object)>(r1);

        if $z0 == 0 goto label2;

        $r7 = new org.apache.commons.math3.exception.MathArithmeticException;

        $r9 = <org.apache.commons.math3.exception.util.LocalizedFormats: org.apache.commons.math3.exception.util.LocalizedFormats ZERO_DENOMINATOR>;

        $r8 = newarray (java.lang.Object)[0];

        specialinvoke $r7.<org.apache.commons.math3.exception.MathArithmeticException: void <init>(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])>($r9, $r8);

        throw $r7;

     label2:
        $r3 = new org.apache.commons.math3.fraction.BigFraction;

        $r5 = r0.<org.apache.commons.math3.fraction.BigFraction: java.math.BigInteger numerator>;

        $r4 = r0.<org.apache.commons.math3.fraction.BigFraction: java.math.BigInteger denominator>;

        $r6 = virtualinvoke $r4.<java.math.BigInteger: java.math.BigInteger multiply(java.math.BigInteger)>(r1);

        specialinvoke $r3.<org.apache.commons.math3.fraction.BigFraction: void <init>(java.math.BigInteger,java.math.BigInteger)>($r5, $r6);

        return $r3;
    }

    public org.apache.commons.math3.fraction.BigFraction divide(int)
    {
        org.apache.commons.math3.fraction.BigFraction r0, $r2;
        int i0;
        long $l1;
        java.math.BigInteger $r1;

        r0 := @this: org.apache.commons.math3.fraction.BigFraction;

        i0 := @parameter0: int;

        $l1 = (long) i0;

        $r1 = staticinvoke <java.math.BigInteger: java.math.BigInteger valueOf(long)>($l1);

        $r2 = virtualinvoke r0.<org.apache.commons.math3.fraction.BigFraction: org.apache.commons.math3.fraction.BigFraction divide(java.math.BigInteger)>($r1);

        return $r2;
    }

    public org.apache.commons.math3.fraction.BigFraction divide(long)
    {
        org.apache.commons.math3.fraction.BigFraction r0, $r2;
        long l0;
        java.math.BigInteger $r1;

        r0 := @this: org.apache.commons.math3.fraction.BigFraction;

        l0 := @parameter0: long;

        $r1 = staticinvoke <java.math.BigInteger: java.math.BigInteger valueOf(long)>(l0);

        $r2 = virtualinvoke r0.<org.apache.commons.math3.fraction.BigFraction: org.apache.commons.math3.fraction.BigFraction divide(java.math.BigInteger)>($r1);

        return $r2;
    }

    public org.apache.commons.math3.fraction.BigFraction divide(org.apache.commons.math3.fraction.BigFraction)
    {
        org.apache.commons.math3.fraction.BigFraction r0, r1, $r4, $r5;
        java.math.BigInteger $r2, $r3;
        boolean $z0;
        org.apache.commons.math3.exception.MathArithmeticException $r6;
        java.lang.Object[] $r7, $r10;
        org.apache.commons.math3.exception.util.LocalizedFormats $r8, $r11;
        org.apache.commons.math3.exception.NullArgumentException $r9;

        r0 := @this: org.apache.commons.math3.fraction.BigFraction;

        r1 := @parameter0: org.apache.commons.math3.fraction.BigFraction;

        if r1 != null goto label1;

        $r9 = new org.apache.commons.math3.exception.NullArgumentException;

        $r11 = <org.apache.commons.math3.exception.util.LocalizedFormats: org.apache.commons.math3.exception.util.LocalizedFormats FRACTION>;

        $r10 = newarray (java.lang.Object)[0];

        specialinvoke $r9.<org.apache.commons.math3.exception.NullArgumentException: void <init>(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])>($r11, $r10);

        throw $r9;

     label1:
        $r3 = <java.math.BigInteger: java.math.BigInteger ZERO>;

        $r2 = r1.<org.apache.commons.math3.fraction.BigFraction: java.math.BigInteger numerator>;

        $z0 = virtualinvoke $r3.<java.math.BigInteger: boolean equals(java.lang.Object)>($r2);

        if $z0 == 0 goto label2;

        $r6 = new org.apache.commons.math3.exception.MathArithmeticException;

        $r8 = <org.apache.commons.math3.exception.util.LocalizedFormats: org.apache.commons.math3.exception.util.LocalizedFormats ZERO_DENOMINATOR>;

        $r7 = newarray (java.lang.Object)[0];

        specialinvoke $r6.<org.apache.commons.math3.exception.MathArithmeticException: void <init>(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])>($r8, $r7);

        throw $r6;

     label2:
        $r4 = virtualinvoke r1.<org.apache.commons.math3.fraction.BigFraction: org.apache.commons.math3.fraction.BigFraction reciprocal()>();

        $r5 = virtualinvoke r0.<org.apache.commons.math3.fraction.BigFraction: org.apache.commons.math3.fraction.BigFraction multiply(org.apache.commons.math3.fraction.BigFraction)>($r4);

        return $r5;
    }

    public double doubleValue()
    {
        org.apache.commons.math3.fraction.BigFraction r0;
        int i0, $i1, $i2, $i3, $i4;
        java.math.BigInteger $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8;
        double $d0, $d1, $d2, $d3, d4;
        boolean $z0;

        r0 := @this: org.apache.commons.math3.fraction.BigFraction;

        $r1 = r0.<org.apache.commons.math3.fraction.BigFraction: java.math.BigInteger numerator>;

        $d0 = virtualinvoke $r1.<java.math.BigInteger: double doubleValue()>();

        $r2 = r0.<org.apache.commons.math3.fraction.BigFraction: java.math.BigInteger denominator>;

        $d1 = virtualinvoke $r2.<java.math.BigInteger: double doubleValue()>();

        d4 = $d0 / $d1;

        $z0 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d4);

        if $z0 == 0 goto label1;

        $r3 = r0.<org.apache.commons.math3.fraction.BigFraction: java.math.BigInteger numerator>;

        $i1 = virtualinvoke $r3.<java.math.BigInteger: int bitLength()>();

        $r4 = r0.<org.apache.commons.math3.fraction.BigFraction: java.math.BigInteger denominator>;

        $i2 = virtualinvoke $r4.<java.math.BigInteger: int bitLength()>();

        $i3 = staticinvoke <org.apache.commons.math3.util.FastMath: int max(int,int)>($i1, $i2);

        $i4 = staticinvoke <org.apache.commons.math3.util.FastMath: int getExponent(double)>(1.7976931348623157E308);

        i0 = $i3 - $i4;

        $r5 = r0.<org.apache.commons.math3.fraction.BigFraction: java.math.BigInteger numerator>;

        $r6 = virtualinvoke $r5.<java.math.BigInteger: java.math.BigInteger shiftRight(int)>(i0);

        $d2 = virtualinvoke $r6.<java.math.BigInteger: double doubleValue()>();

        $r7 = r0.<org.apache.commons.math3.fraction.BigFraction: java.math.BigInteger denominator>;

        $r8 = virtualinvoke $r7.<java.math.BigInteger: java.math.BigInteger shiftRight(int)>(i0);

        $d3 = virtualinvoke $r8.<java.math.BigInteger: double doubleValue()>();

        d4 = $d2 / $d3;

     label1:
        return d4;
    }

    public boolean equals(java.lang.Object)
    {
        org.apache.commons.math3.fraction.BigFraction r0, r2, r3, $r4;
        java.lang.Object r1;
        boolean $z0, $z1, $z2, z3, $z4;
        java.math.BigInteger $r5, $r6, $r7, $r8;

        r0 := @this: org.apache.commons.math3.fraction.BigFraction;

        r1 := @parameter0: java.lang.Object;

        z3 = 0;

        if r0 != r1 goto label1;

        z3 = 1;

        goto label4;

     label1:
        $z0 = r1 instanceof org.apache.commons.math3.fraction.BigFraction;

        if $z0 == 0 goto label4;

        $r4 = (org.apache.commons.math3.fraction.BigFraction) r1;

        r2 = virtualinvoke $r4.<org.apache.commons.math3.fraction.BigFraction: org.apache.commons.math3.fraction.BigFraction reduce()>();

        r3 = virtualinvoke r0.<org.apache.commons.math3.fraction.BigFraction: org.apache.commons.math3.fraction.BigFraction reduce()>();

        $r6 = r3.<org.apache.commons.math3.fraction.BigFraction: java.math.BigInteger numerator>;

        $r5 = r2.<org.apache.commons.math3.fraction.BigFraction: java.math.BigInteger numerator>;

        $z1 = virtualinvoke $r6.<java.math.BigInteger: boolean equals(java.lang.Object)>($r5);

        if $z1 == 0 goto label2;

        $r8 = r3.<org.apache.commons.math3.fraction.BigFraction: java.math.BigInteger denominator>;

        $r7 = r2.<org.apache.commons.math3.fraction.BigFraction: java.math.BigInteger denominator>;

        $z2 = virtualinvoke $r8.<java.math.BigInteger: boolean equals(java.lang.Object)>($r7);

        if $z2 == 0 goto label2;

        $z4 = 1;

        goto label3;

     label2:
        $z4 = 0;

     label3:
        z3 = $z4;

     label4:
        return z3;
    }

    public float floatValue()
    {
        org.apache.commons.math3.fraction.BigFraction r0;
        int i0, $i1, $i2, $i3, $i4;
        java.math.BigInteger $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8;
        float $f0, $f1, $f2, $f3, f4;
        double $d0;
        boolean $z0;

        r0 := @this: org.apache.commons.math3.fraction.BigFraction;

        $r1 = r0.<org.apache.commons.math3.fraction.BigFraction: java.math.BigInteger numerator>;

        $f0 = virtualinvoke $r1.<java.math.BigInteger: float floatValue()>();

        $r2 = r0.<org.apache.commons.math3.fraction.BigFraction: java.math.BigInteger denominator>;

        $f1 = virtualinvoke $r2.<java.math.BigInteger: float floatValue()>();

        f4 = $f0 / $f1;

        $d0 = (double) f4;

        $z0 = staticinvoke <java.lang.Double: boolean isNaN(double)>($d0);

        if $z0 == 0 goto label1;

        $r3 = r0.<org.apache.commons.math3.fraction.BigFraction: java.math.BigInteger numerator>;

        $i1 = virtualinvoke $r3.<java.math.BigInteger: int bitLength()>();

        $r4 = r0.<org.apache.commons.math3.fraction.BigFraction: java.math.BigInteger denominator>;

        $i2 = virtualinvoke $r4.<java.math.BigInteger: int bitLength()>();

        $i3 = staticinvoke <org.apache.commons.math3.util.FastMath: int max(int,int)>($i1, $i2);

        $i4 = staticinvoke <org.apache.commons.math3.util.FastMath: int getExponent(float)>(3.4028235E38F);

        i0 = $i3 - $i4;

        $r5 = r0.<org.apache.commons.math3.fraction.BigFraction: java.math.BigInteger numerator>;

        $r6 = virtualinvoke $r5.<java.math.BigInteger: java.math.BigInteger shiftRight(int)>(i0);

        $f2 = virtualinvoke $r6.<java.math.BigInteger: float floatValue()>();

        $r7 = r0.<org.apache.commons.math3.fraction.BigFraction: java.math.BigInteger denominator>;

        $r8 = virtualinvoke $r7.<java.math.BigInteger: java.math.BigInteger shiftRight(int)>(i0);

        $f3 = virtualinvoke $r8.<java.math.BigInteger: float floatValue()>();

        f4 = $f2 / $f3;

     label1:
        return f4;
    }

    public java.math.BigInteger getDenominator()
    {
        org.apache.commons.math3.fraction.BigFraction r0;
        java.math.BigInteger $r1;

        r0 := @this: org.apache.commons.math3.fraction.BigFraction;

        $r1 = r0.<org.apache.commons.math3.fraction.BigFraction: java.math.BigInteger denominator>;

        return $r1;
    }

    public int getDenominatorAsInt()
    {
        org.apache.commons.math3.fraction.BigFraction r0;
        java.math.BigInteger $r1;
        int $i0;

        r0 := @this: org.apache.commons.math3.fraction.BigFraction;

        $r1 = r0.<org.apache.commons.math3.fraction.BigFraction: java.math.BigInteger denominator>;

        $i0 = virtualinvoke $r1.<java.math.BigInteger: int intValue()>();

        return $i0;
    }

    public long getDenominatorAsLong()
    {
        org.apache.commons.math3.fraction.BigFraction r0;
        java.math.BigInteger $r1;
        long $l0;

        r0 := @this: org.apache.commons.math3.fraction.BigFraction;

        $r1 = r0.<org.apache.commons.math3.fraction.BigFraction: java.math.BigInteger denominator>;

        $l0 = virtualinvoke $r1.<java.math.BigInteger: long longValue()>();

        return $l0;
    }

    public java.math.BigInteger getNumerator()
    {
        org.apache.commons.math3.fraction.BigFraction r0;
        java.math.BigInteger $r1;

        r0 := @this: org.apache.commons.math3.fraction.BigFraction;

        $r1 = r0.<org.apache.commons.math3.fraction.BigFraction: java.math.BigInteger numerator>;

        return $r1;
    }

    public int getNumeratorAsInt()
    {
        org.apache.commons.math3.fraction.BigFraction r0;
        java.math.BigInteger $r1;
        int $i0;

        r0 := @this: org.apache.commons.math3.fraction.BigFraction;

        $r1 = r0.<org.apache.commons.math3.fraction.BigFraction: java.math.BigInteger numerator>;

        $i0 = virtualinvoke $r1.<java.math.BigInteger: int intValue()>();

        return $i0;
    }

    public long getNumeratorAsLong()
    {
        org.apache.commons.math3.fraction.BigFraction r0;
        java.math.BigInteger $r1;
        long $l0;

        r0 := @this: org.apache.commons.math3.fraction.BigFraction;

        $r1 = r0.<org.apache.commons.math3.fraction.BigFraction: java.math.BigInteger numerator>;

        $l0 = virtualinvoke $r1.<java.math.BigInteger: long longValue()>();

        return $l0;
    }

    public int hashCode()
    {
        org.apache.commons.math3.fraction.BigFraction r0;
        java.math.BigInteger $r1, $r2;
        int $i0, $i1, $i2, $i3, $i4;

        r0 := @this: org.apache.commons.math3.fraction.BigFraction;

        $r1 = r0.<org.apache.commons.math3.fraction.BigFraction: java.math.BigInteger numerator>;

        $i0 = virtualinvoke $r1.<java.math.BigInteger: int hashCode()>();

        $i1 = 629 + $i0;

        $i2 = 37 * $i1;

        $r2 = r0.<org.apache.commons.math3.fraction.BigFraction: java.math.BigInteger denominator>;

        $i3 = virtualinvoke $r2.<java.math.BigInteger: int hashCode()>();

        $i4 = $i2 + $i3;

        return $i4;
    }

    public int intValue()
    {
        org.apache.commons.math3.fraction.BigFraction r0;
        java.math.BigInteger $r1, $r2, $r3;
        int $i0;

        r0 := @this: org.apache.commons.math3.fraction.BigFraction;

        $r2 = r0.<org.apache.commons.math3.fraction.BigFraction: java.math.BigInteger numerator>;

        $r1 = r0.<org.apache.commons.math3.fraction.BigFraction: java.math.BigInteger denominator>;

        $r3 = virtualinvoke $r2.<java.math.BigInteger: java.math.BigInteger divide(java.math.BigInteger)>($r1);

        $i0 = virtualinvoke $r3.<java.math.BigInteger: int intValue()>();

        return $i0;
    }

    public long longValue()
    {
        org.apache.commons.math3.fraction.BigFraction r0;
        java.math.BigInteger $r1, $r2, $r3;
        long $l0;

        r0 := @this: org.apache.commons.math3.fraction.BigFraction;

        $r2 = r0.<org.apache.commons.math3.fraction.BigFraction: java.math.BigInteger numerator>;

        $r1 = r0.<org.apache.commons.math3.fraction.BigFraction: java.math.BigInteger denominator>;

        $r3 = virtualinvoke $r2.<java.math.BigInteger: java.math.BigInteger divide(java.math.BigInteger)>($r1);

        $l0 = virtualinvoke $r3.<java.math.BigInteger: long longValue()>();

        return $l0;
    }

    public org.apache.commons.math3.fraction.BigFraction multiply(java.math.BigInteger)
    {
        org.apache.commons.math3.fraction.BigFraction r0, $r2;
        java.math.BigInteger r1, $r3, $r4, $r5;
        org.apache.commons.math3.exception.NullArgumentException $r6;

        r0 := @this: org.apache.commons.math3.fraction.BigFraction;

        r1 := @parameter0: java.math.BigInteger;

        if r1 != null goto label1;

        $r6 = new org.apache.commons.math3.exception.NullArgumentException;

        specialinvoke $r6.<org.apache.commons.math3.exception.NullArgumentException: void <init>()>();

        throw $r6;

     label1:
        $r2 = new org.apache.commons.math3.fraction.BigFraction;

        $r3 = r0.<org.apache.commons.math3.fraction.BigFraction: java.math.BigInteger numerator>;

        $r4 = virtualinvoke r1.<java.math.BigInteger: java.math.BigInteger multiply(java.math.BigInteger)>($r3);

        $r5 = r0.<org.apache.commons.math3.fraction.BigFraction: java.math.BigInteger denominator>;

        specialinvoke $r2.<org.apache.commons.math3.fraction.BigFraction: void <init>(java.math.BigInteger,java.math.BigInteger)>($r4, $r5);

        return $r2;
    }

    public org.apache.commons.math3.fraction.BigFraction multiply(int)
    {
        org.apache.commons.math3.fraction.BigFraction r0, $r2;
        int i0;
        long $l1;
        java.math.BigInteger $r1;

        r0 := @this: org.apache.commons.math3.fraction.BigFraction;

        i0 := @parameter0: int;

        $l1 = (long) i0;

        $r1 = staticinvoke <java.math.BigInteger: java.math.BigInteger valueOf(long)>($l1);

        $r2 = virtualinvoke r0.<org.apache.commons.math3.fraction.BigFraction: org.apache.commons.math3.fraction.BigFraction multiply(java.math.BigInteger)>($r1);

        return $r2;
    }

    public org.apache.commons.math3.fraction.BigFraction multiply(long)
    {
        org.apache.commons.math3.fraction.BigFraction r0, $r2;
        long l0;
        java.math.BigInteger $r1;

        r0 := @this: org.apache.commons.math3.fraction.BigFraction;

        l0 := @parameter0: long;

        $r1 = staticinvoke <java.math.BigInteger: java.math.BigInteger valueOf(long)>(l0);

        $r2 = virtualinvoke r0.<org.apache.commons.math3.fraction.BigFraction: org.apache.commons.math3.fraction.BigFraction multiply(java.math.BigInteger)>($r1);

        return $r2;
    }

    public org.apache.commons.math3.fraction.BigFraction multiply(org.apache.commons.math3.fraction.BigFraction)
    {
        org.apache.commons.math3.fraction.BigFraction r0, r1, $r4, $r7;
        java.math.BigInteger $r2, $r3, $r5, $r6, $r8, $r9, $r10, $r11, $r12, $r13;
        boolean $z0, $z1;
        org.apache.commons.math3.exception.NullArgumentException $r14;
        java.lang.Object[] $r15;
        org.apache.commons.math3.exception.util.LocalizedFormats $r16;

        r0 := @this: org.apache.commons.math3.fraction.BigFraction;

        r1 := @parameter0: org.apache.commons.math3.fraction.BigFraction;

        if r1 != null goto label1;

        $r14 = new org.apache.commons.math3.exception.NullArgumentException;

        $r16 = <org.apache.commons.math3.exception.util.LocalizedFormats: org.apache.commons.math3.exception.util.LocalizedFormats FRACTION>;

        $r15 = newarray (java.lang.Object)[0];

        specialinvoke $r14.<org.apache.commons.math3.exception.NullArgumentException: void <init>(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])>($r16, $r15);

        throw $r14;

     label1:
        $r3 = r0.<org.apache.commons.math3.fraction.BigFraction: java.math.BigInteger numerator>;

        $r2 = <java.math.BigInteger: java.math.BigInteger ZERO>;

        $z0 = virtualinvoke $r3.<java.math.BigInteger: boolean equals(java.lang.Object)>($r2);

        if $z0 != 0 goto label2;

        $r6 = r1.<org.apache.commons.math3.fraction.BigFraction: java.math.BigInteger numerator>;

        $r5 = <java.math.BigInteger: java.math.BigInteger ZERO>;

        $z1 = virtualinvoke $r6.<java.math.BigInteger: boolean equals(java.lang.Object)>($r5);

        if $z1 == 0 goto label3;

     label2:
        $r4 = <org.apache.commons.math3.fraction.BigFraction: org.apache.commons.math3.fraction.BigFraction ZERO>;

        return $r4;

     label3:
        $r7 = new org.apache.commons.math3.fraction.BigFraction;

        $r9 = r0.<org.apache.commons.math3.fraction.BigFraction: java.math.BigInteger numerator>;

        $r8 = r1.<org.apache.commons.math3.fraction.BigFraction: java.math.BigInteger numerator>;

        $r10 = virtualinvoke $r9.<java.math.BigInteger: java.math.BigInteger multiply(java.math.BigInteger)>($r8);

        $r12 = r0.<org.apache.commons.math3.fraction.BigFraction: java.math.BigInteger denominator>;

        $r11 = r1.<org.apache.commons.math3.fraction.BigFraction: java.math.BigInteger denominator>;

        $r13 = virtualinvoke $r12.<java.math.BigInteger: java.math.BigInteger multiply(java.math.BigInteger)>($r11);

        specialinvoke $r7.<org.apache.commons.math3.fraction.BigFraction: void <init>(java.math.BigInteger,java.math.BigInteger)>($r10, $r13);

        return $r7;
    }

    public org.apache.commons.math3.fraction.BigFraction negate()
    {
        org.apache.commons.math3.fraction.BigFraction r0, $r1;
        java.math.BigInteger $r2, $r3, $r4;

        r0 := @this: org.apache.commons.math3.fraction.BigFraction;

        $r1 = new org.apache.commons.math3.fraction.BigFraction;

        $r2 = r0.<org.apache.commons.math3.fraction.BigFraction: java.math.BigInteger numerator>;

        $r3 = virtualinvoke $r2.<java.math.BigInteger: java.math.BigInteger negate()>();

        $r4 = r0.<org.apache.commons.math3.fraction.BigFraction: java.math.BigInteger denominator>;

        specialinvoke $r1.<org.apache.commons.math3.fraction.BigFraction: void <init>(java.math.BigInteger,java.math.BigInteger)>($r3, $r4);

        return $r1;
    }

    public double percentageValue()
    {
        org.apache.commons.math3.fraction.BigFraction r0, $r2;
        java.math.BigInteger $r1;
        double $d0;

        r0 := @this: org.apache.commons.math3.fraction.BigFraction;

        $r1 = <org.apache.commons.math3.fraction.BigFraction: java.math.BigInteger ONE_HUNDRED>;

        $r2 = virtualinvoke r0.<org.apache.commons.math3.fraction.BigFraction: org.apache.commons.math3.fraction.BigFraction multiply(java.math.BigInteger)>($r1);

        $d0 = virtualinvoke $r2.<org.apache.commons.math3.fraction.BigFraction: double doubleValue()>();

        return $d0;
    }

    public org.apache.commons.math3.fraction.BigFraction pow(int)
    {
        org.apache.commons.math3.fraction.BigFraction r0, $r1, $r6;
        int i0, $i1, $i2;
        java.math.BigInteger $r2, $r3, $r4, $r5, $r7, $r8, $r9, $r10;

        r0 := @this: org.apache.commons.math3.fraction.BigFraction;

        i0 := @parameter0: int;

        if i0 >= 0 goto label1;

        $r6 = new org.apache.commons.math3.fraction.BigFraction;

        $r7 = r0.<org.apache.commons.math3.fraction.BigFraction: java.math.BigInteger denominator>;

        $i1 = neg i0;

        $r8 = virtualinvoke $r7.<java.math.BigInteger: java.math.BigInteger pow(int)>($i1);

        $r9 = r0.<org.apache.commons.math3.fraction.BigFraction: java.math.BigInteger numerator>;

        $i2 = neg i0;

        $r10 = virtualinvoke $r9.<java.math.BigInteger: java.math.BigInteger pow(int)>($i2);

        specialinvoke $r6.<org.apache.commons.math3.fraction.BigFraction: void <init>(java.math.BigInteger,java.math.BigInteger)>($r8, $r10);

        return $r6;

     label1:
        $r1 = new org.apache.commons.math3.fraction.BigFraction;

        $r2 = r0.<org.apache.commons.math3.fraction.BigFraction: java.math.BigInteger numerator>;

        $r3 = virtualinvoke $r2.<java.math.BigInteger: java.math.BigInteger pow(int)>(i0);

        $r4 = r0.<org.apache.commons.math3.fraction.BigFraction: java.math.BigInteger denominator>;

        $r5 = virtualinvoke $r4.<java.math.BigInteger: java.math.BigInteger pow(int)>(i0);

        specialinvoke $r1.<org.apache.commons.math3.fraction.BigFraction: void <init>(java.math.BigInteger,java.math.BigInteger)>($r3, $r5);

        return $r1;
    }

    public org.apache.commons.math3.fraction.BigFraction pow(long)
    {
        org.apache.commons.math3.fraction.BigFraction r0, $r1, $r6;
        long l0, $l2, $l3;
        byte $b1;
        java.math.BigInteger $r2, $r3, $r4, $r5, $r7, $r8, $r9, $r10;

        r0 := @this: org.apache.commons.math3.fraction.BigFraction;

        l0 := @parameter0: long;

        $b1 = l0 cmp 0L;

        if $b1 >= 0 goto label1;

        $r6 = new org.apache.commons.math3.fraction.BigFraction;

        $r7 = r0.<org.apache.commons.math3.fraction.BigFraction: java.math.BigInteger denominator>;

        $l2 = neg l0;

        $r8 = staticinvoke <org.apache.commons.math3.util.ArithmeticUtils: java.math.BigInteger pow(java.math.BigInteger,long)>($r7, $l2);

        $r9 = r0.<org.apache.commons.math3.fraction.BigFraction: java.math.BigInteger numerator>;

        $l3 = neg l0;

        $r10 = staticinvoke <org.apache.commons.math3.util.ArithmeticUtils: java.math.BigInteger pow(java.math.BigInteger,long)>($r9, $l3);

        specialinvoke $r6.<org.apache.commons.math3.fraction.BigFraction: void <init>(java.math.BigInteger,java.math.BigInteger)>($r8, $r10);

        return $r6;

     label1:
        $r1 = new org.apache.commons.math3.fraction.BigFraction;

        $r2 = r0.<org.apache.commons.math3.fraction.BigFraction: java.math.BigInteger numerator>;

        $r3 = staticinvoke <org.apache.commons.math3.util.ArithmeticUtils: java.math.BigInteger pow(java.math.BigInteger,long)>($r2, l0);

        $r4 = r0.<org.apache.commons.math3.fraction.BigFraction: java.math.BigInteger denominator>;

        $r5 = staticinvoke <org.apache.commons.math3.util.ArithmeticUtils: java.math.BigInteger pow(java.math.BigInteger,long)>($r4, l0);

        specialinvoke $r1.<org.apache.commons.math3.fraction.BigFraction: void <init>(java.math.BigInteger,java.math.BigInteger)>($r3, $r5);

        return $r1;
    }

    public org.apache.commons.math3.fraction.BigFraction pow(java.math.BigInteger)
    {
        org.apache.commons.math3.fraction.BigFraction r0, $r4, $r9;
        java.math.BigInteger r1, r2, $r3, $r5, $r6, $r7, $r8, $r10, $r11, $r12, $r13;
        int $i0;

        r0 := @this: org.apache.commons.math3.fraction.BigFraction;

        r1 := @parameter0: java.math.BigInteger;

        $r3 = <java.math.BigInteger: java.math.BigInteger ZERO>;

        $i0 = virtualinvoke r1.<java.math.BigInteger: int compareTo(java.math.BigInteger)>($r3);

        if $i0 >= 0 goto label1;

        r2 = virtualinvoke r1.<java.math.BigInteger: java.math.BigInteger negate()>();

        $r9 = new org.apache.commons.math3.fraction.BigFraction;

        $r10 = r0.<org.apache.commons.math3.fraction.BigFraction: java.math.BigInteger denominator>;

        $r11 = staticinvoke <org.apache.commons.math3.util.ArithmeticUtils: java.math.BigInteger pow(java.math.BigInteger,java.math.BigInteger)>($r10, r2);

        $r12 = r0.<org.apache.commons.math3.fraction.BigFraction: java.math.BigInteger numerator>;

        $r13 = staticinvoke <org.apache.commons.math3.util.ArithmeticUtils: java.math.BigInteger pow(java.math.BigInteger,java.math.BigInteger)>($r12, r2);

        specialinvoke $r9.<org.apache.commons.math3.fraction.BigFraction: void <init>(java.math.BigInteger,java.math.BigInteger)>($r11, $r13);

        return $r9;

     label1:
        $r4 = new org.apache.commons.math3.fraction.BigFraction;

        $r5 = r0.<org.apache.commons.math3.fraction.BigFraction: java.math.BigInteger numerator>;

        $r6 = staticinvoke <org.apache.commons.math3.util.ArithmeticUtils: java.math.BigInteger pow(java.math.BigInteger,java.math.BigInteger)>($r5, r1);

        $r7 = r0.<org.apache.commons.math3.fraction.BigFraction: java.math.BigInteger denominator>;

        $r8 = staticinvoke <org.apache.commons.math3.util.ArithmeticUtils: java.math.BigInteger pow(java.math.BigInteger,java.math.BigInteger)>($r7, r1);

        specialinvoke $r4.<org.apache.commons.math3.fraction.BigFraction: void <init>(java.math.BigInteger,java.math.BigInteger)>($r6, $r8);

        return $r4;
    }

    public double pow(double)
    {
        org.apache.commons.math3.fraction.BigFraction r0;
        double d0, $d1, $d2, $d3, $d4, $d5;
        java.math.BigInteger $r1, $r2;

        r0 := @this: org.apache.commons.math3.fraction.BigFraction;

        d0 := @parameter0: double;

        $r1 = r0.<org.apache.commons.math3.fraction.BigFraction: java.math.BigInteger numerator>;

        $d1 = virtualinvoke $r1.<java.math.BigInteger: double doubleValue()>();

        $d2 = staticinvoke <org.apache.commons.math3.util.FastMath: double pow(double,double)>($d1, d0);

        $r2 = r0.<org.apache.commons.math3.fraction.BigFraction: java.math.BigInteger denominator>;

        $d3 = virtualinvoke $r2.<java.math.BigInteger: double doubleValue()>();

        $d4 = staticinvoke <org.apache.commons.math3.util.FastMath: double pow(double,double)>($d3, d0);

        $d5 = $d2 / $d4;

        return $d5;
    }

    public org.apache.commons.math3.fraction.BigFraction reciprocal()
    {
        org.apache.commons.math3.fraction.BigFraction r0, $r1;
        java.math.BigInteger $r2, $r3;

        r0 := @this: org.apache.commons.math3.fraction.BigFraction;

        $r1 = new org.apache.commons.math3.fraction.BigFraction;

        $r3 = r0.<org.apache.commons.math3.fraction.BigFraction: java.math.BigInteger denominator>;

        $r2 = r0.<org.apache.commons.math3.fraction.BigFraction: java.math.BigInteger numerator>;

        specialinvoke $r1.<org.apache.commons.math3.fraction.BigFraction: void <init>(java.math.BigInteger,java.math.BigInteger)>($r3, $r2);

        return $r1;
    }

    public org.apache.commons.math3.fraction.BigFraction reduce()
    {
        org.apache.commons.math3.fraction.BigFraction r0, $r4;
        java.math.BigInteger r1, $r2, $r3, $r5, $r6, $r7, $r8;

        r0 := @this: org.apache.commons.math3.fraction.BigFraction;

        $r3 = r0.<org.apache.commons.math3.fraction.BigFraction: java.math.BigInteger numerator>;

        $r2 = r0.<org.apache.commons.math3.fraction.BigFraction: java.math.BigInteger denominator>;

        r1 = virtualinvoke $r3.<java.math.BigInteger: java.math.BigInteger gcd(java.math.BigInteger)>($r2);

        $r4 = new org.apache.commons.math3.fraction.BigFraction;

        $r5 = r0.<org.apache.commons.math3.fraction.BigFraction: java.math.BigInteger numerator>;

        $r6 = virtualinvoke $r5.<java.math.BigInteger: java.math.BigInteger divide(java.math.BigInteger)>(r1);

        $r7 = r0.<org.apache.commons.math3.fraction.BigFraction: java.math.BigInteger denominator>;

        $r8 = virtualinvoke $r7.<java.math.BigInteger: java.math.BigInteger divide(java.math.BigInteger)>(r1);

        specialinvoke $r4.<org.apache.commons.math3.fraction.BigFraction: void <init>(java.math.BigInteger,java.math.BigInteger)>($r6, $r8);

        return $r4;
    }

    public org.apache.commons.math3.fraction.BigFraction subtract(java.math.BigInteger)
    {
        org.apache.commons.math3.fraction.BigFraction r0, $r2;
        java.math.BigInteger r1, $r3, $r4, $r5, $r6, $r7;
        org.apache.commons.math3.exception.NullArgumentException $r8;

        r0 := @this: org.apache.commons.math3.fraction.BigFraction;

        r1 := @parameter0: java.math.BigInteger;

        if r1 != null goto label1;

        $r8 = new org.apache.commons.math3.exception.NullArgumentException;

        specialinvoke $r8.<org.apache.commons.math3.exception.NullArgumentException: void <init>()>();

        throw $r8;

     label1:
        $r2 = new org.apache.commons.math3.fraction.BigFraction;

        $r4 = r0.<org.apache.commons.math3.fraction.BigFraction: java.math.BigInteger numerator>;

        $r3 = r0.<org.apache.commons.math3.fraction.BigFraction: java.math.BigInteger denominator>;

        $r5 = virtualinvoke $r3.<java.math.BigInteger: java.math.BigInteger multiply(java.math.BigInteger)>(r1);

        $r6 = virtualinvoke $r4.<java.math.BigInteger: java.math.BigInteger subtract(java.math.BigInteger)>($r5);

        $r7 = r0.<org.apache.commons.math3.fraction.BigFraction: java.math.BigInteger denominator>;

        specialinvoke $r2.<org.apache.commons.math3.fraction.BigFraction: void <init>(java.math.BigInteger,java.math.BigInteger)>($r6, $r7);

        return $r2;
    }

    public org.apache.commons.math3.fraction.BigFraction subtract(int)
    {
        org.apache.commons.math3.fraction.BigFraction r0, $r2;
        int i0;
        long $l1;
        java.math.BigInteger $r1;

        r0 := @this: org.apache.commons.math3.fraction.BigFraction;

        i0 := @parameter0: int;

        $l1 = (long) i0;

        $r1 = staticinvoke <java.math.BigInteger: java.math.BigInteger valueOf(long)>($l1);

        $r2 = virtualinvoke r0.<org.apache.commons.math3.fraction.BigFraction: org.apache.commons.math3.fraction.BigFraction subtract(java.math.BigInteger)>($r1);

        return $r2;
    }

    public org.apache.commons.math3.fraction.BigFraction subtract(long)
    {
        org.apache.commons.math3.fraction.BigFraction r0, $r2;
        long l0;
        java.math.BigInteger $r1;

        r0 := @this: org.apache.commons.math3.fraction.BigFraction;

        l0 := @parameter0: long;

        $r1 = staticinvoke <java.math.BigInteger: java.math.BigInteger valueOf(long)>(l0);

        $r2 = virtualinvoke r0.<org.apache.commons.math3.fraction.BigFraction: org.apache.commons.math3.fraction.BigFraction subtract(java.math.BigInteger)>($r1);

        return $r2;
    }

    public org.apache.commons.math3.fraction.BigFraction subtract(org.apache.commons.math3.fraction.BigFraction)
    {
        org.apache.commons.math3.fraction.BigFraction r0, r1, $r2, $r13;
        boolean $z0, $z1;
        java.math.BigInteger $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r14, $r15, r19, r20;
        org.apache.commons.math3.exception.NullArgumentException $r16;
        java.lang.Object[] $r17;
        org.apache.commons.math3.exception.util.LocalizedFormats $r18;

        r0 := @this: org.apache.commons.math3.fraction.BigFraction;

        r1 := @parameter0: org.apache.commons.math3.fraction.BigFraction;

        if r1 != null goto label1;

        $r16 = new org.apache.commons.math3.exception.NullArgumentException;

        $r18 = <org.apache.commons.math3.exception.util.LocalizedFormats: org.apache.commons.math3.exception.util.LocalizedFormats FRACTION>;

        $r17 = newarray (java.lang.Object)[0];

        specialinvoke $r16.<org.apache.commons.math3.exception.NullArgumentException: void <init>(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])>($r18, $r17);

        throw $r16;

     label1:
        $r2 = <org.apache.commons.math3.fraction.BigFraction: org.apache.commons.math3.fraction.BigFraction ZERO>;

        $z0 = virtualinvoke $r2.<org.apache.commons.math3.fraction.BigFraction: boolean equals(java.lang.Object)>(r1);

        if $z0 == 0 goto label2;

        return r0;

     label2:
        $r4 = r0.<org.apache.commons.math3.fraction.BigFraction: java.math.BigInteger denominator>;

        $r3 = r1.<org.apache.commons.math3.fraction.BigFraction: java.math.BigInteger denominator>;

        $z1 = virtualinvoke $r4.<java.math.BigInteger: boolean equals(java.lang.Object)>($r3);

        if $z1 == 0 goto label3;

        $r15 = r0.<org.apache.commons.math3.fraction.BigFraction: java.math.BigInteger numerator>;

        $r14 = r1.<org.apache.commons.math3.fraction.BigFraction: java.math.BigInteger numerator>;

        r19 = virtualinvoke $r15.<java.math.BigInteger: java.math.BigInteger subtract(java.math.BigInteger)>($r14);

        r20 = r0.<org.apache.commons.math3.fraction.BigFraction: java.math.BigInteger denominator>;

        goto label4;

     label3:
        $r6 = r0.<org.apache.commons.math3.fraction.BigFraction: java.math.BigInteger numerator>;

        $r5 = r1.<org.apache.commons.math3.fraction.BigFraction: java.math.BigInteger denominator>;

        $r7 = virtualinvoke $r6.<java.math.BigInteger: java.math.BigInteger multiply(java.math.BigInteger)>($r5);

        $r9 = r1.<org.apache.commons.math3.fraction.BigFraction: java.math.BigInteger numerator>;

        $r8 = r0.<org.apache.commons.math3.fraction.BigFraction: java.math.BigInteger denominator>;

        $r10 = virtualinvoke $r9.<java.math.BigInteger: java.math.BigInteger multiply(java.math.BigInteger)>($r8);

        r19 = virtualinvoke $r7.<java.math.BigInteger: java.math.BigInteger subtract(java.math.BigInteger)>($r10);

        $r12 = r0.<org.apache.commons.math3.fraction.BigFraction: java.math.BigInteger denominator>;

        $r11 = r1.<org.apache.commons.math3.fraction.BigFraction: java.math.BigInteger denominator>;

        r20 = virtualinvoke $r12.<java.math.BigInteger: java.math.BigInteger multiply(java.math.BigInteger)>($r11);

     label4:
        $r13 = new org.apache.commons.math3.fraction.BigFraction;

        specialinvoke $r13.<org.apache.commons.math3.fraction.BigFraction: void <init>(java.math.BigInteger,java.math.BigInteger)>(r19, r20);

        return $r13;
    }

    public java.lang.String toString()
    {
        org.apache.commons.math3.fraction.BigFraction r0;
        java.math.BigInteger $r1, $r2, $r3, $r4, $r6, $r9, $r11;
        boolean $z0, $z1;
        java.lang.StringBuilder $r5, $r7, $r8, $r10;
        java.lang.String r12;

        r0 := @this: org.apache.commons.math3.fraction.BigFraction;

        $r2 = <java.math.BigInteger: java.math.BigInteger ONE>;

        $r1 = r0.<org.apache.commons.math3.fraction.BigFraction: java.math.BigInteger denominator>;

        $z0 = virtualinvoke $r2.<java.math.BigInteger: boolean equals(java.lang.Object)>($r1);

        if $z0 == 0 goto label1;

        $r11 = r0.<org.apache.commons.math3.fraction.BigFraction: java.math.BigInteger numerator>;

        r12 = virtualinvoke $r11.<java.math.BigInteger: java.lang.String toString()>();

        goto label3;

     label1:
        $r4 = <java.math.BigInteger: java.math.BigInteger ZERO>;

        $r3 = r0.<org.apache.commons.math3.fraction.BigFraction: java.math.BigInteger numerator>;

        $z1 = virtualinvoke $r4.<java.math.BigInteger: boolean equals(java.lang.Object)>($r3);

        if $z1 == 0 goto label2;

        r12 = "0";

        goto label3;

     label2:
        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = r0.<org.apache.commons.math3.fraction.BigFraction: java.math.BigInteger numerator>;

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" / ");

        $r9 = r0.<org.apache.commons.math3.fraction.BigFraction: java.math.BigInteger denominator>;

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r9);

        r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

     label3:
        return r12;
    }

    public org.apache.commons.math3.fraction.BigFractionField getField()
    {
        org.apache.commons.math3.fraction.BigFraction r0;
        org.apache.commons.math3.fraction.BigFractionField $r1;

        r0 := @this: org.apache.commons.math3.fraction.BigFraction;

        $r1 = staticinvoke <org.apache.commons.math3.fraction.BigFractionField: org.apache.commons.math3.fraction.BigFractionField getInstance()>();

        return $r1;
    }

    public volatile org.apache.commons.math3.Field getField()
    {
        org.apache.commons.math3.fraction.BigFraction r0;
        org.apache.commons.math3.fraction.BigFractionField $r1;

        r0 := @this: org.apache.commons.math3.fraction.BigFraction;

        $r1 = virtualinvoke r0.<org.apache.commons.math3.fraction.BigFraction: org.apache.commons.math3.fraction.BigFractionField getField()>();

        return $r1;
    }

    public volatile java.lang.Object reciprocal() throws org.apache.commons.math3.exception.MathArithmeticException
    {
        org.apache.commons.math3.fraction.BigFraction r0, $r1;

        r0 := @this: org.apache.commons.math3.fraction.BigFraction;

        $r1 = virtualinvoke r0.<org.apache.commons.math3.fraction.BigFraction: org.apache.commons.math3.fraction.BigFraction reciprocal()>();

        return $r1;
    }

    public volatile java.lang.Object divide(java.lang.Object) throws org.apache.commons.math3.exception.NullArgumentException, org.apache.commons.math3.exception.MathArithmeticException
    {
        org.apache.commons.math3.fraction.BigFraction r0, $r2, $r3;
        java.lang.Object r1;

        r0 := @this: org.apache.commons.math3.fraction.BigFraction;

        r1 := @parameter0: java.lang.Object;

        $r2 = (org.apache.commons.math3.fraction.BigFraction) r1;

        $r3 = virtualinvoke r0.<org.apache.commons.math3.fraction.BigFraction: org.apache.commons.math3.fraction.BigFraction divide(org.apache.commons.math3.fraction.BigFraction)>($r2);

        return $r3;
    }

    public volatile java.lang.Object multiply(java.lang.Object) throws org.apache.commons.math3.exception.NullArgumentException
    {
        org.apache.commons.math3.fraction.BigFraction r0, $r2, $r3;
        java.lang.Object r1;

        r0 := @this: org.apache.commons.math3.fraction.BigFraction;

        r1 := @parameter0: java.lang.Object;

        $r2 = (org.apache.commons.math3.fraction.BigFraction) r1;

        $r3 = virtualinvoke r0.<org.apache.commons.math3.fraction.BigFraction: org.apache.commons.math3.fraction.BigFraction multiply(org.apache.commons.math3.fraction.BigFraction)>($r2);

        return $r3;
    }

    public volatile java.lang.Object multiply(int)
    {
        org.apache.commons.math3.fraction.BigFraction r0, $r1;
        int i0;

        r0 := @this: org.apache.commons.math3.fraction.BigFraction;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<org.apache.commons.math3.fraction.BigFraction: org.apache.commons.math3.fraction.BigFraction multiply(int)>(i0);

        return $r1;
    }

    public volatile java.lang.Object negate()
    {
        org.apache.commons.math3.fraction.BigFraction r0, $r1;

        r0 := @this: org.apache.commons.math3.fraction.BigFraction;

        $r1 = virtualinvoke r0.<org.apache.commons.math3.fraction.BigFraction: org.apache.commons.math3.fraction.BigFraction negate()>();

        return $r1;
    }

    public volatile java.lang.Object subtract(java.lang.Object) throws org.apache.commons.math3.exception.NullArgumentException
    {
        org.apache.commons.math3.fraction.BigFraction r0, $r2, $r3;
        java.lang.Object r1;

        r0 := @this: org.apache.commons.math3.fraction.BigFraction;

        r1 := @parameter0: java.lang.Object;

        $r2 = (org.apache.commons.math3.fraction.BigFraction) r1;

        $r3 = virtualinvoke r0.<org.apache.commons.math3.fraction.BigFraction: org.apache.commons.math3.fraction.BigFraction subtract(org.apache.commons.math3.fraction.BigFraction)>($r2);

        return $r3;
    }

    public volatile java.lang.Object add(java.lang.Object) throws org.apache.commons.math3.exception.NullArgumentException
    {
        org.apache.commons.math3.fraction.BigFraction r0, $r2, $r3;
        java.lang.Object r1;

        r0 := @this: org.apache.commons.math3.fraction.BigFraction;

        r1 := @parameter0: java.lang.Object;

        $r2 = (org.apache.commons.math3.fraction.BigFraction) r1;

        $r3 = virtualinvoke r0.<org.apache.commons.math3.fraction.BigFraction: org.apache.commons.math3.fraction.BigFraction add(org.apache.commons.math3.fraction.BigFraction)>($r2);

        return $r3;
    }

    public volatile int compareTo(java.lang.Object)
    {
        org.apache.commons.math3.fraction.BigFraction r0, $r2;
        java.lang.Object r1;
        int $i0;

        r0 := @this: org.apache.commons.math3.fraction.BigFraction;

        r1 := @parameter0: java.lang.Object;

        $r2 = (org.apache.commons.math3.fraction.BigFraction) r1;

        $i0 = virtualinvoke r0.<org.apache.commons.math3.fraction.BigFraction: int compareTo(org.apache.commons.math3.fraction.BigFraction)>($r2);

        return $i0;
    }

    static void <clinit>()
    {
        org.apache.commons.math3.fraction.BigFraction $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13;
        java.math.BigInteger $r14;

        <org.apache.commons.math3.fraction.BigFraction: long serialVersionUID> = -5630213147331578515L;

        $r0 = new org.apache.commons.math3.fraction.BigFraction;

        specialinvoke $r0.<org.apache.commons.math3.fraction.BigFraction: void <init>(int)>(2);

        <org.apache.commons.math3.fraction.BigFraction: org.apache.commons.math3.fraction.BigFraction TWO> = $r0;

        $r1 = new org.apache.commons.math3.fraction.BigFraction;

        specialinvoke $r1.<org.apache.commons.math3.fraction.BigFraction: void <init>(int)>(1);

        <org.apache.commons.math3.fraction.BigFraction: org.apache.commons.math3.fraction.BigFraction ONE> = $r1;

        $r2 = new org.apache.commons.math3.fraction.BigFraction;

        specialinvoke $r2.<org.apache.commons.math3.fraction.BigFraction: void <init>(int)>(0);

        <org.apache.commons.math3.fraction.BigFraction: org.apache.commons.math3.fraction.BigFraction ZERO> = $r2;

        $r3 = new org.apache.commons.math3.fraction.BigFraction;

        specialinvoke $r3.<org.apache.commons.math3.fraction.BigFraction: void <init>(int)>(-1);

        <org.apache.commons.math3.fraction.BigFraction: org.apache.commons.math3.fraction.BigFraction MINUS_ONE> = $r3;

        $r4 = new org.apache.commons.math3.fraction.BigFraction;

        specialinvoke $r4.<org.apache.commons.math3.fraction.BigFraction: void <init>(int,int)>(4, 5);

        <org.apache.commons.math3.fraction.BigFraction: org.apache.commons.math3.fraction.BigFraction FOUR_FIFTHS> = $r4;

        $r5 = new org.apache.commons.math3.fraction.BigFraction;

        specialinvoke $r5.<org.apache.commons.math3.fraction.BigFraction: void <init>(int,int)>(1, 5);

        <org.apache.commons.math3.fraction.BigFraction: org.apache.commons.math3.fraction.BigFraction ONE_FIFTH> = $r5;

        $r6 = new org.apache.commons.math3.fraction.BigFraction;

        specialinvoke $r6.<org.apache.commons.math3.fraction.BigFraction: void <init>(int,int)>(1, 2);

        <org.apache.commons.math3.fraction.BigFraction: org.apache.commons.math3.fraction.BigFraction ONE_HALF> = $r6;

        $r7 = new org.apache.commons.math3.fraction.BigFraction;

        specialinvoke $r7.<org.apache.commons.math3.fraction.BigFraction: void <init>(int,int)>(1, 4);

        <org.apache.commons.math3.fraction.BigFraction: org.apache.commons.math3.fraction.BigFraction ONE_QUARTER> = $r7;

        $r8 = new org.apache.commons.math3.fraction.BigFraction;

        specialinvoke $r8.<org.apache.commons.math3.fraction.BigFraction: void <init>(int,int)>(1, 3);

        <org.apache.commons.math3.fraction.BigFraction: org.apache.commons.math3.fraction.BigFraction ONE_THIRD> = $r8;

        $r9 = new org.apache.commons.math3.fraction.BigFraction;

        specialinvoke $r9.<org.apache.commons.math3.fraction.BigFraction: void <init>(int,int)>(3, 5);

        <org.apache.commons.math3.fraction.BigFraction: org.apache.commons.math3.fraction.BigFraction THREE_FIFTHS> = $r9;

        $r10 = new org.apache.commons.math3.fraction.BigFraction;

        specialinvoke $r10.<org.apache.commons.math3.fraction.BigFraction: void <init>(int,int)>(3, 4);

        <org.apache.commons.math3.fraction.BigFraction: org.apache.commons.math3.fraction.BigFraction THREE_QUARTERS> = $r10;

        $r11 = new org.apache.commons.math3.fraction.BigFraction;

        specialinvoke $r11.<org.apache.commons.math3.fraction.BigFraction: void <init>(int,int)>(2, 5);

        <org.apache.commons.math3.fraction.BigFraction: org.apache.commons.math3.fraction.BigFraction TWO_FIFTHS> = $r11;

        $r12 = new org.apache.commons.math3.fraction.BigFraction;

        specialinvoke $r12.<org.apache.commons.math3.fraction.BigFraction: void <init>(int,int)>(2, 4);

        <org.apache.commons.math3.fraction.BigFraction: org.apache.commons.math3.fraction.BigFraction TWO_QUARTERS> = $r12;

        $r13 = new org.apache.commons.math3.fraction.BigFraction;

        specialinvoke $r13.<org.apache.commons.math3.fraction.BigFraction: void <init>(int,int)>(2, 3);

        <org.apache.commons.math3.fraction.BigFraction: org.apache.commons.math3.fraction.BigFraction TWO_THIRDS> = $r13;

        $r14 = staticinvoke <java.math.BigInteger: java.math.BigInteger valueOf(long)>(100L);

        <org.apache.commons.math3.fraction.BigFraction: java.math.BigInteger ONE_HUNDRED> = $r14;

        return;
    }
}
