public class org.apache.commons.math.stat.descriptive.moment.StandardDeviation extends org.apache.commons.math.stat.descriptive.AbstractStorelessUnivariateStatistic implements java.io.Serializable
{
    private static final long serialVersionUID;
    private org.apache.commons.math.stat.descriptive.moment.Variance variance;

    public void <init>()
    {
        org.apache.commons.math.stat.descriptive.moment.StandardDeviation r0;
        org.apache.commons.math.stat.descriptive.moment.Variance $r1;

        r0 := @this: org.apache.commons.math.stat.descriptive.moment.StandardDeviation;

        specialinvoke r0.<org.apache.commons.math.stat.descriptive.AbstractStorelessUnivariateStatistic: void <init>()>();

        r0.<org.apache.commons.math.stat.descriptive.moment.StandardDeviation: org.apache.commons.math.stat.descriptive.moment.Variance variance> = null;

        $r1 = new org.apache.commons.math.stat.descriptive.moment.Variance;

        specialinvoke $r1.<org.apache.commons.math.stat.descriptive.moment.Variance: void <init>()>();

        r0.<org.apache.commons.math.stat.descriptive.moment.StandardDeviation: org.apache.commons.math.stat.descriptive.moment.Variance variance> = $r1;

        return;
    }

    public void <init>(org.apache.commons.math.stat.descriptive.moment.SecondMoment)
    {
        org.apache.commons.math.stat.descriptive.moment.StandardDeviation r0;
        org.apache.commons.math.stat.descriptive.moment.SecondMoment r1;
        org.apache.commons.math.stat.descriptive.moment.Variance $r2;

        r0 := @this: org.apache.commons.math.stat.descriptive.moment.StandardDeviation;

        r1 := @parameter0: org.apache.commons.math.stat.descriptive.moment.SecondMoment;

        specialinvoke r0.<org.apache.commons.math.stat.descriptive.AbstractStorelessUnivariateStatistic: void <init>()>();

        r0.<org.apache.commons.math.stat.descriptive.moment.StandardDeviation: org.apache.commons.math.stat.descriptive.moment.Variance variance> = null;

        $r2 = new org.apache.commons.math.stat.descriptive.moment.Variance;

        specialinvoke $r2.<org.apache.commons.math.stat.descriptive.moment.Variance: void <init>(org.apache.commons.math.stat.descriptive.moment.SecondMoment)>(r1);

        r0.<org.apache.commons.math.stat.descriptive.moment.StandardDeviation: org.apache.commons.math.stat.descriptive.moment.Variance variance> = $r2;

        return;
    }

    public void <init>(org.apache.commons.math.stat.descriptive.moment.StandardDeviation)
    {
        org.apache.commons.math.stat.descriptive.moment.StandardDeviation r0, r1;

        r0 := @this: org.apache.commons.math.stat.descriptive.moment.StandardDeviation;

        r1 := @parameter0: org.apache.commons.math.stat.descriptive.moment.StandardDeviation;

        specialinvoke r0.<org.apache.commons.math.stat.descriptive.AbstractStorelessUnivariateStatistic: void <init>()>();

        r0.<org.apache.commons.math.stat.descriptive.moment.StandardDeviation: org.apache.commons.math.stat.descriptive.moment.Variance variance> = null;

        staticinvoke <org.apache.commons.math.stat.descriptive.moment.StandardDeviation: void copy(org.apache.commons.math.stat.descriptive.moment.StandardDeviation,org.apache.commons.math.stat.descriptive.moment.StandardDeviation)>(r1, r0);

        return;
    }

    public void <init>(boolean)
    {
        org.apache.commons.math.stat.descriptive.moment.StandardDeviation r0;
        boolean z0;
        org.apache.commons.math.stat.descriptive.moment.Variance $r1;

        r0 := @this: org.apache.commons.math.stat.descriptive.moment.StandardDeviation;

        z0 := @parameter0: boolean;

        specialinvoke r0.<org.apache.commons.math.stat.descriptive.AbstractStorelessUnivariateStatistic: void <init>()>();

        r0.<org.apache.commons.math.stat.descriptive.moment.StandardDeviation: org.apache.commons.math.stat.descriptive.moment.Variance variance> = null;

        $r1 = new org.apache.commons.math.stat.descriptive.moment.Variance;

        specialinvoke $r1.<org.apache.commons.math.stat.descriptive.moment.Variance: void <init>(boolean)>(z0);

        r0.<org.apache.commons.math.stat.descriptive.moment.StandardDeviation: org.apache.commons.math.stat.descriptive.moment.Variance variance> = $r1;

        return;
    }

    public void <init>(boolean, org.apache.commons.math.stat.descriptive.moment.SecondMoment)
    {
        org.apache.commons.math.stat.descriptive.moment.StandardDeviation r0;
        boolean z0;
        org.apache.commons.math.stat.descriptive.moment.SecondMoment r1;
        org.apache.commons.math.stat.descriptive.moment.Variance $r2;

        r0 := @this: org.apache.commons.math.stat.descriptive.moment.StandardDeviation;

        z0 := @parameter0: boolean;

        r1 := @parameter1: org.apache.commons.math.stat.descriptive.moment.SecondMoment;

        specialinvoke r0.<org.apache.commons.math.stat.descriptive.AbstractStorelessUnivariateStatistic: void <init>()>();

        r0.<org.apache.commons.math.stat.descriptive.moment.StandardDeviation: org.apache.commons.math.stat.descriptive.moment.Variance variance> = null;

        $r2 = new org.apache.commons.math.stat.descriptive.moment.Variance;

        specialinvoke $r2.<org.apache.commons.math.stat.descriptive.moment.Variance: void <init>(boolean,org.apache.commons.math.stat.descriptive.moment.SecondMoment)>(z0, r1);

        r0.<org.apache.commons.math.stat.descriptive.moment.StandardDeviation: org.apache.commons.math.stat.descriptive.moment.Variance variance> = $r2;

        return;
    }

    public void increment(double)
    {
        org.apache.commons.math.stat.descriptive.moment.StandardDeviation r0;
        double d0;
        org.apache.commons.math.stat.descriptive.moment.Variance $r1;

        r0 := @this: org.apache.commons.math.stat.descriptive.moment.StandardDeviation;

        d0 := @parameter0: double;

        $r1 = r0.<org.apache.commons.math.stat.descriptive.moment.StandardDeviation: org.apache.commons.math.stat.descriptive.moment.Variance variance>;

        virtualinvoke $r1.<org.apache.commons.math.stat.descriptive.moment.Variance: void increment(double)>(d0);

        return;
    }

    public long getN()
    {
        org.apache.commons.math.stat.descriptive.moment.StandardDeviation r0;
        org.apache.commons.math.stat.descriptive.moment.Variance $r1;
        long $l0;

        r0 := @this: org.apache.commons.math.stat.descriptive.moment.StandardDeviation;

        $r1 = r0.<org.apache.commons.math.stat.descriptive.moment.StandardDeviation: org.apache.commons.math.stat.descriptive.moment.Variance variance>;

        $l0 = virtualinvoke $r1.<org.apache.commons.math.stat.descriptive.moment.Variance: long getN()>();

        return $l0;
    }

    public double getResult()
    {
        org.apache.commons.math.stat.descriptive.moment.StandardDeviation r0;
        org.apache.commons.math.stat.descriptive.moment.Variance $r1;
        double $d0, $d1;

        r0 := @this: org.apache.commons.math.stat.descriptive.moment.StandardDeviation;

        $r1 = r0.<org.apache.commons.math.stat.descriptive.moment.StandardDeviation: org.apache.commons.math.stat.descriptive.moment.Variance variance>;

        $d0 = virtualinvoke $r1.<org.apache.commons.math.stat.descriptive.moment.Variance: double getResult()>();

        $d1 = staticinvoke <org.apache.commons.math.util.FastMath: double sqrt(double)>($d0);

        return $d1;
    }

    public void clear()
    {
        org.apache.commons.math.stat.descriptive.moment.StandardDeviation r0;
        org.apache.commons.math.stat.descriptive.moment.Variance $r1;

        r0 := @this: org.apache.commons.math.stat.descriptive.moment.StandardDeviation;

        $r1 = r0.<org.apache.commons.math.stat.descriptive.moment.StandardDeviation: org.apache.commons.math.stat.descriptive.moment.Variance variance>;

        virtualinvoke $r1.<org.apache.commons.math.stat.descriptive.moment.Variance: void clear()>();

        return;
    }

    public double evaluate(double[])
    {
        org.apache.commons.math.stat.descriptive.moment.StandardDeviation r0;
        double[] r1;
        org.apache.commons.math.stat.descriptive.moment.Variance $r2;
        double $d0, $d1;

        r0 := @this: org.apache.commons.math.stat.descriptive.moment.StandardDeviation;

        r1 := @parameter0: double[];

        $r2 = r0.<org.apache.commons.math.stat.descriptive.moment.StandardDeviation: org.apache.commons.math.stat.descriptive.moment.Variance variance>;

        $d0 = virtualinvoke $r2.<org.apache.commons.math.stat.descriptive.moment.Variance: double evaluate(double[])>(r1);

        $d1 = staticinvoke <org.apache.commons.math.util.FastMath: double sqrt(double)>($d0);

        return $d1;
    }

    public double evaluate(double[], int, int)
    {
        org.apache.commons.math.stat.descriptive.moment.StandardDeviation r0;
        double[] r1;
        int i0, i1;
        org.apache.commons.math.stat.descriptive.moment.Variance $r2;
        double $d0, $d1;

        r0 := @this: org.apache.commons.math.stat.descriptive.moment.StandardDeviation;

        r1 := @parameter0: double[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r2 = r0.<org.apache.commons.math.stat.descriptive.moment.StandardDeviation: org.apache.commons.math.stat.descriptive.moment.Variance variance>;

        $d0 = virtualinvoke $r2.<org.apache.commons.math.stat.descriptive.moment.Variance: double evaluate(double[],int,int)>(r1, i0, i1);

        $d1 = staticinvoke <org.apache.commons.math.util.FastMath: double sqrt(double)>($d0);

        return $d1;
    }

    public double evaluate(double[], double, int, int)
    {
        org.apache.commons.math.stat.descriptive.moment.StandardDeviation r0;
        double[] r1;
        double d0, $d1, $d2;
        int i0, i1;
        org.apache.commons.math.stat.descriptive.moment.Variance $r2;

        r0 := @this: org.apache.commons.math.stat.descriptive.moment.StandardDeviation;

        r1 := @parameter0: double[];

        d0 := @parameter1: double;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        $r2 = r0.<org.apache.commons.math.stat.descriptive.moment.StandardDeviation: org.apache.commons.math.stat.descriptive.moment.Variance variance>;

        $d1 = virtualinvoke $r2.<org.apache.commons.math.stat.descriptive.moment.Variance: double evaluate(double[],double,int,int)>(r1, d0, i0, i1);

        $d2 = staticinvoke <org.apache.commons.math.util.FastMath: double sqrt(double)>($d1);

        return $d2;
    }

    public double evaluate(double[], double)
    {
        org.apache.commons.math.stat.descriptive.moment.StandardDeviation r0;
        double[] r1;
        double d0, $d1, $d2;
        org.apache.commons.math.stat.descriptive.moment.Variance $r2;

        r0 := @this: org.apache.commons.math.stat.descriptive.moment.StandardDeviation;

        r1 := @parameter0: double[];

        d0 := @parameter1: double;

        $r2 = r0.<org.apache.commons.math.stat.descriptive.moment.StandardDeviation: org.apache.commons.math.stat.descriptive.moment.Variance variance>;

        $d1 = virtualinvoke $r2.<org.apache.commons.math.stat.descriptive.moment.Variance: double evaluate(double[],double)>(r1, d0);

        $d2 = staticinvoke <org.apache.commons.math.util.FastMath: double sqrt(double)>($d1);

        return $d2;
    }

    public boolean isBiasCorrected()
    {
        org.apache.commons.math.stat.descriptive.moment.StandardDeviation r0;
        org.apache.commons.math.stat.descriptive.moment.Variance $r1;
        boolean $z0;

        r0 := @this: org.apache.commons.math.stat.descriptive.moment.StandardDeviation;

        $r1 = r0.<org.apache.commons.math.stat.descriptive.moment.StandardDeviation: org.apache.commons.math.stat.descriptive.moment.Variance variance>;

        $z0 = virtualinvoke $r1.<org.apache.commons.math.stat.descriptive.moment.Variance: boolean isBiasCorrected()>();

        return $z0;
    }

    public void setBiasCorrected(boolean)
    {
        org.apache.commons.math.stat.descriptive.moment.StandardDeviation r0;
        boolean z0;
        org.apache.commons.math.stat.descriptive.moment.Variance $r1;

        r0 := @this: org.apache.commons.math.stat.descriptive.moment.StandardDeviation;

        z0 := @parameter0: boolean;

        $r1 = r0.<org.apache.commons.math.stat.descriptive.moment.StandardDeviation: org.apache.commons.math.stat.descriptive.moment.Variance variance>;

        virtualinvoke $r1.<org.apache.commons.math.stat.descriptive.moment.Variance: void setBiasCorrected(boolean)>(z0);

        return;
    }

    public org.apache.commons.math.stat.descriptive.moment.StandardDeviation copy()
    {
        org.apache.commons.math.stat.descriptive.moment.StandardDeviation r0, $r2;

        r0 := @this: org.apache.commons.math.stat.descriptive.moment.StandardDeviation;

        $r2 = new org.apache.commons.math.stat.descriptive.moment.StandardDeviation;

        specialinvoke $r2.<org.apache.commons.math.stat.descriptive.moment.StandardDeviation: void <init>()>();

        staticinvoke <org.apache.commons.math.stat.descriptive.moment.StandardDeviation: void copy(org.apache.commons.math.stat.descriptive.moment.StandardDeviation,org.apache.commons.math.stat.descriptive.moment.StandardDeviation)>(r0, $r2);

        return $r2;
    }

    public static void copy(org.apache.commons.math.stat.descriptive.moment.StandardDeviation, org.apache.commons.math.stat.descriptive.moment.StandardDeviation)
    {
        org.apache.commons.math.stat.descriptive.moment.StandardDeviation r0, r1;
        double[] $r2;
        org.apache.commons.math.stat.descriptive.moment.Variance $r3, $r4;

        r0 := @parameter0: org.apache.commons.math.stat.descriptive.moment.StandardDeviation;

        r1 := @parameter1: org.apache.commons.math.stat.descriptive.moment.StandardDeviation;

        $r2 = virtualinvoke r0.<org.apache.commons.math.stat.descriptive.moment.StandardDeviation: double[] getDataRef()>();

        virtualinvoke r1.<org.apache.commons.math.stat.descriptive.moment.StandardDeviation: void setData(double[])>($r2);

        $r3 = r0.<org.apache.commons.math.stat.descriptive.moment.StandardDeviation: org.apache.commons.math.stat.descriptive.moment.Variance variance>;

        $r4 = virtualinvoke $r3.<org.apache.commons.math.stat.descriptive.moment.Variance: org.apache.commons.math.stat.descriptive.moment.Variance copy()>();

        r1.<org.apache.commons.math.stat.descriptive.moment.StandardDeviation: org.apache.commons.math.stat.descriptive.moment.Variance variance> = $r4;

        return;
    }

    public volatile org.apache.commons.math.stat.descriptive.StorelessUnivariateStatistic copy()
    {
        org.apache.commons.math.stat.descriptive.moment.StandardDeviation r0, $r1;

        r0 := @this: org.apache.commons.math.stat.descriptive.moment.StandardDeviation;

        $r1 = virtualinvoke r0.<org.apache.commons.math.stat.descriptive.moment.StandardDeviation: org.apache.commons.math.stat.descriptive.moment.StandardDeviation copy()>();

        return $r1;
    }

    public volatile org.apache.commons.math.stat.descriptive.UnivariateStatistic copy()
    {
        org.apache.commons.math.stat.descriptive.moment.StandardDeviation r0, $r1;

        r0 := @this: org.apache.commons.math.stat.descriptive.moment.StandardDeviation;

        $r1 = virtualinvoke r0.<org.apache.commons.math.stat.descriptive.moment.StandardDeviation: org.apache.commons.math.stat.descriptive.moment.StandardDeviation copy()>();

        return $r1;
    }

    public static void <clinit>()
    {
        <org.apache.commons.math.stat.descriptive.moment.StandardDeviation: long serialVersionUID> = 5728716329662425188L;

        return;
    }
}
