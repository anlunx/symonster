public class org.jcp.xml.dsig.internal.dom.ApacheNodeSetData extends java.lang.Object implements org.jcp.xml.dsig.internal.dom.ApacheData, javax.xml.crypto.NodeSetData
{
    private com.sun.org.apache.xml.internal.security.signature.XMLSignatureInput xi;

    public void <init>(com.sun.org.apache.xml.internal.security.signature.XMLSignatureInput)
    {
        org.jcp.xml.dsig.internal.dom.ApacheNodeSetData r0;
        com.sun.org.apache.xml.internal.security.signature.XMLSignatureInput r1;

        r0 := @this: org.jcp.xml.dsig.internal.dom.ApacheNodeSetData;

        r1 := @parameter0: com.sun.org.apache.xml.internal.security.signature.XMLSignatureInput;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.jcp.xml.dsig.internal.dom.ApacheNodeSetData: com.sun.org.apache.xml.internal.security.signature.XMLSignatureInput xi> = r1;

        return;
    }

    public java.util.Iterator iterator()
    {
        org.jcp.xml.dsig.internal.dom.ApacheNodeSetData r0;
        com.sun.org.apache.xml.internal.security.signature.XMLSignatureInput $r2, $r4, $r8, $r10;
        java.util.List $r3, $r9, $r11;
        java.util.Set $r5, $r6, $r12, $r13;
        java.util.Iterator $r7, $r14;
        boolean $z0;
        java.lang.Exception $r15;
        java.lang.RuntimeException $r16;

        r0 := @this: org.jcp.xml.dsig.internal.dom.ApacheNodeSetData;

        $r2 = r0.<org.jcp.xml.dsig.internal.dom.ApacheNodeSetData: com.sun.org.apache.xml.internal.security.signature.XMLSignatureInput xi>;

        $r3 = virtualinvoke $r2.<com.sun.org.apache.xml.internal.security.signature.XMLSignatureInput: java.util.List getNodeFilters()>();

        if $r3 == null goto label1;

        $r8 = r0.<org.jcp.xml.dsig.internal.dom.ApacheNodeSetData: com.sun.org.apache.xml.internal.security.signature.XMLSignatureInput xi>;

        $r9 = virtualinvoke $r8.<com.sun.org.apache.xml.internal.security.signature.XMLSignatureInput: java.util.List getNodeFilters()>();

        $z0 = interfaceinvoke $r9.<java.util.List: boolean isEmpty()>();

        if $z0 != 0 goto label1;

        $r10 = r0.<org.jcp.xml.dsig.internal.dom.ApacheNodeSetData: com.sun.org.apache.xml.internal.security.signature.XMLSignatureInput xi>;

        $r11 = virtualinvoke $r10.<com.sun.org.apache.xml.internal.security.signature.XMLSignatureInput: java.util.List getNodeFilters()>();

        $r12 = specialinvoke r0.<org.jcp.xml.dsig.internal.dom.ApacheNodeSetData: java.util.Set getNodeSet(java.util.List)>($r11);

        $r13 = staticinvoke <java.util.Collections: java.util.Set unmodifiableSet(java.util.Set)>($r12);

        $r14 = interfaceinvoke $r13.<java.util.Set: java.util.Iterator iterator()>();

        return $r14;

     label1:
        $r4 = r0.<org.jcp.xml.dsig.internal.dom.ApacheNodeSetData: com.sun.org.apache.xml.internal.security.signature.XMLSignatureInput xi>;

        $r5 = virtualinvoke $r4.<com.sun.org.apache.xml.internal.security.signature.XMLSignatureInput: java.util.Set getNodeSet()>();

        $r6 = staticinvoke <java.util.Collections: java.util.Set unmodifiableSet(java.util.Set)>($r5);

        $r7 = interfaceinvoke $r6.<java.util.Set: java.util.Iterator iterator()>();

     label2:
        return $r7;

     label3:
        $r15 := @caughtexception;

        $r16 = new java.lang.RuntimeException;

        specialinvoke $r16.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("unrecoverable error retrieving nodeset", $r15);

        throw $r16;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public com.sun.org.apache.xml.internal.security.signature.XMLSignatureInput getXMLSignatureInput()
    {
        org.jcp.xml.dsig.internal.dom.ApacheNodeSetData r0;
        com.sun.org.apache.xml.internal.security.signature.XMLSignatureInput $r1;

        r0 := @this: org.jcp.xml.dsig.internal.dom.ApacheNodeSetData;

        $r1 = r0.<org.jcp.xml.dsig.internal.dom.ApacheNodeSetData: com.sun.org.apache.xml.internal.security.signature.XMLSignatureInput xi>;

        return $r1;
    }

    private java.util.Set getNodeSet(java.util.List)
    {
        org.jcp.xml.dsig.internal.dom.ApacheNodeSetData r0;
        java.util.List r1;
        java.util.Iterator r4, r6;
        org.w3c.dom.Node r5, $r11, $r18;
        com.sun.org.apache.xml.internal.security.signature.NodeFilter r7;
        com.sun.org.apache.xml.internal.security.signature.XMLSignatureInput $r8, $r10, $r12, $r17;
        boolean $z0, $z1, $z2, $z3, $z4, z5;
        java.util.LinkedHashSet $r9, $r13;
        java.lang.Object $r14, $r15;
        int $i0;
        org.w3c.dom.Document $r19;

        r0 := @this: org.jcp.xml.dsig.internal.dom.ApacheNodeSetData;

        r1 := @parameter0: java.util.List;

        $r8 = r0.<org.jcp.xml.dsig.internal.dom.ApacheNodeSetData: com.sun.org.apache.xml.internal.security.signature.XMLSignatureInput xi>;

        $z0 = virtualinvoke $r8.<com.sun.org.apache.xml.internal.security.signature.XMLSignatureInput: boolean isNeedsToBeExpanded()>();

        if $z0 == 0 goto label1;

        $r17 = r0.<org.jcp.xml.dsig.internal.dom.ApacheNodeSetData: com.sun.org.apache.xml.internal.security.signature.XMLSignatureInput xi>;

        $r18 = virtualinvoke $r17.<com.sun.org.apache.xml.internal.security.signature.XMLSignatureInput: org.w3c.dom.Node getSubNode()>();

        $r19 = staticinvoke <com.sun.org.apache.xml.internal.security.utils.XMLUtils: org.w3c.dom.Document getOwnerDocument(org.w3c.dom.Node)>($r18);

        staticinvoke <com.sun.org.apache.xml.internal.security.utils.XMLUtils: void circumventBug2650(org.w3c.dom.Document)>($r19);

     label1:
        $r9 = new java.util.LinkedHashSet;

        specialinvoke $r9.<java.util.LinkedHashSet: void <init>()>();

        $r10 = r0.<org.jcp.xml.dsig.internal.dom.ApacheNodeSetData: com.sun.org.apache.xml.internal.security.signature.XMLSignatureInput xi>;

        $r11 = virtualinvoke $r10.<com.sun.org.apache.xml.internal.security.signature.XMLSignatureInput: org.w3c.dom.Node getSubNode()>();

        $r12 = r0.<org.jcp.xml.dsig.internal.dom.ApacheNodeSetData: com.sun.org.apache.xml.internal.security.signature.XMLSignatureInput xi>;

        $z1 = virtualinvoke $r12.<com.sun.org.apache.xml.internal.security.signature.XMLSignatureInput: boolean isExcludeComments()>();

        if $z1 != 0 goto label2;

        $z3 = 1;

        goto label3;

     label2:
        $z3 = 0;

     label3:
        staticinvoke <com.sun.org.apache.xml.internal.security.utils.XMLUtils: void getSet(org.w3c.dom.Node,java.util.Set,org.w3c.dom.Node,boolean)>($r11, $r9, null, $z3);

        $r13 = new java.util.LinkedHashSet;

        specialinvoke $r13.<java.util.LinkedHashSet: void <init>()>();

        r4 = interfaceinvoke $r9.<java.util.Set: java.util.Iterator iterator()>();

     label4:
        $z4 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z4 == 0 goto label9;

        $r14 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        r5 = (org.w3c.dom.Node) $r14;

        r6 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>();

        z5 = 0;

     label5:
        $z2 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label7;

        if z5 != 0 goto label7;

        $r15 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>();

        r7 = (com.sun.org.apache.xml.internal.security.signature.NodeFilter) $r15;

        $i0 = interfaceinvoke r7.<com.sun.org.apache.xml.internal.security.signature.NodeFilter: int isNodeInclude(org.w3c.dom.Node)>(r5);

        if $i0 == 1 goto label6;

        z5 = 1;

     label6:
        goto label5;

     label7:
        if z5 != 0 goto label8;

        interfaceinvoke $r13.<java.util.Set: boolean add(java.lang.Object)>(r5);

     label8:
        goto label4;

     label9:
        return $r13;
    }
}
