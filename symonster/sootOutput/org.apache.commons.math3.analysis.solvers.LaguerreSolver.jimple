public class org.apache.commons.math3.analysis.solvers.LaguerreSolver extends org.apache.commons.math3.analysis.solvers.AbstractPolynomialSolver
{
    private static final double DEFAULT_ABSOLUTE_ACCURACY;
    private final org.apache.commons.math3.analysis.solvers.LaguerreSolver$ComplexSolver complexSolver;

    public void <init>()
    {
        org.apache.commons.math3.analysis.solvers.LaguerreSolver r0;

        r0 := @this: org.apache.commons.math3.analysis.solvers.LaguerreSolver;

        specialinvoke r0.<org.apache.commons.math3.analysis.solvers.LaguerreSolver: void <init>(double)>(1.0E-6);

        return;
    }

    public void <init>(double)
    {
        org.apache.commons.math3.analysis.solvers.LaguerreSolver r0;
        double d0;
        org.apache.commons.math3.analysis.solvers.LaguerreSolver$ComplexSolver $r1;

        r0 := @this: org.apache.commons.math3.analysis.solvers.LaguerreSolver;

        d0 := @parameter0: double;

        specialinvoke r0.<org.apache.commons.math3.analysis.solvers.AbstractPolynomialSolver: void <init>(double)>(d0);

        $r1 = new org.apache.commons.math3.analysis.solvers.LaguerreSolver$ComplexSolver;

        specialinvoke $r1.<org.apache.commons.math3.analysis.solvers.LaguerreSolver$ComplexSolver: void <init>(org.apache.commons.math3.analysis.solvers.LaguerreSolver,org.apache.commons.math3.analysis.solvers.LaguerreSolver$1)>(r0, null);

        r0.<org.apache.commons.math3.analysis.solvers.LaguerreSolver: org.apache.commons.math3.analysis.solvers.LaguerreSolver$ComplexSolver complexSolver> = $r1;

        return;
    }

    public void <init>(double, double)
    {
        org.apache.commons.math3.analysis.solvers.LaguerreSolver r0;
        double d0, d1;
        org.apache.commons.math3.analysis.solvers.LaguerreSolver$ComplexSolver $r1;

        r0 := @this: org.apache.commons.math3.analysis.solvers.LaguerreSolver;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        specialinvoke r0.<org.apache.commons.math3.analysis.solvers.AbstractPolynomialSolver: void <init>(double,double)>(d0, d1);

        $r1 = new org.apache.commons.math3.analysis.solvers.LaguerreSolver$ComplexSolver;

        specialinvoke $r1.<org.apache.commons.math3.analysis.solvers.LaguerreSolver$ComplexSolver: void <init>(org.apache.commons.math3.analysis.solvers.LaguerreSolver,org.apache.commons.math3.analysis.solvers.LaguerreSolver$1)>(r0, null);

        r0.<org.apache.commons.math3.analysis.solvers.LaguerreSolver: org.apache.commons.math3.analysis.solvers.LaguerreSolver$ComplexSolver complexSolver> = $r1;

        return;
    }

    public void <init>(double, double, double)
    {
        org.apache.commons.math3.analysis.solvers.LaguerreSolver r0;
        double d0, d1, d2;
        org.apache.commons.math3.analysis.solvers.LaguerreSolver$ComplexSolver $r1;

        r0 := @this: org.apache.commons.math3.analysis.solvers.LaguerreSolver;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        d2 := @parameter2: double;

        specialinvoke r0.<org.apache.commons.math3.analysis.solvers.AbstractPolynomialSolver: void <init>(double,double,double)>(d0, d1, d2);

        $r1 = new org.apache.commons.math3.analysis.solvers.LaguerreSolver$ComplexSolver;

        specialinvoke $r1.<org.apache.commons.math3.analysis.solvers.LaguerreSolver$ComplexSolver: void <init>(org.apache.commons.math3.analysis.solvers.LaguerreSolver,org.apache.commons.math3.analysis.solvers.LaguerreSolver$1)>(r0, null);

        r0.<org.apache.commons.math3.analysis.solvers.LaguerreSolver: org.apache.commons.math3.analysis.solvers.LaguerreSolver$ComplexSolver complexSolver> = $r1;

        return;
    }

    public double doSolve() throws org.apache.commons.math3.exception.TooManyEvaluationsException, org.apache.commons.math3.exception.NumberIsTooLargeException, org.apache.commons.math3.exception.NoBracketingException
    {
        org.apache.commons.math3.analysis.solvers.LaguerreSolver r0;
        double d0, d1, d2, d3, d4, d5, d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13;
        byte $b0, $b1, $b2, $b3, $b4;
        org.apache.commons.math3.exception.NoBracketingException $r1;

        r0 := @this: org.apache.commons.math3.analysis.solvers.LaguerreSolver;

        d0 = virtualinvoke r0.<org.apache.commons.math3.analysis.solvers.LaguerreSolver: double getMin()>();

        d1 = virtualinvoke r0.<org.apache.commons.math3.analysis.solvers.LaguerreSolver: double getMax()>();

        d2 = virtualinvoke r0.<org.apache.commons.math3.analysis.solvers.LaguerreSolver: double getStartValue()>();

        d3 = virtualinvoke r0.<org.apache.commons.math3.analysis.solvers.LaguerreSolver: double getFunctionValueAccuracy()>();

        virtualinvoke r0.<org.apache.commons.math3.analysis.solvers.LaguerreSolver: void verifySequence(double,double,double)>(d0, d2, d1);

        d4 = virtualinvoke r0.<org.apache.commons.math3.analysis.solvers.LaguerreSolver: double computeObjectiveValue(double)>(d2);

        $d7 = staticinvoke <org.apache.commons.math3.util.FastMath: double abs(double)>(d4);

        $b0 = $d7 cmpg d3;

        if $b0 > 0 goto label1;

        return d2;

     label1:
        d5 = virtualinvoke r0.<org.apache.commons.math3.analysis.solvers.LaguerreSolver: double computeObjectiveValue(double)>(d0);

        $d8 = staticinvoke <org.apache.commons.math3.util.FastMath: double abs(double)>(d5);

        $b1 = $d8 cmpg d3;

        if $b1 > 0 goto label2;

        return d0;

     label2:
        $d9 = d4 * d5;

        $b2 = $d9 cmpg 0.0;

        if $b2 >= 0 goto label3;

        $d13 = virtualinvoke r0.<org.apache.commons.math3.analysis.solvers.LaguerreSolver: double laguerre(double,double,double,double)>(d0, d2, d5, d4);

        return $d13;

     label3:
        d6 = virtualinvoke r0.<org.apache.commons.math3.analysis.solvers.LaguerreSolver: double computeObjectiveValue(double)>(d1);

        $d10 = staticinvoke <org.apache.commons.math3.util.FastMath: double abs(double)>(d6);

        $b3 = $d10 cmpg d3;

        if $b3 > 0 goto label4;

        return d1;

     label4:
        $d11 = d4 * d6;

        $b4 = $d11 cmpg 0.0;

        if $b4 >= 0 goto label5;

        $d12 = virtualinvoke r0.<org.apache.commons.math3.analysis.solvers.LaguerreSolver: double laguerre(double,double,double,double)>(d2, d1, d4, d6);

        return $d12;

     label5:
        $r1 = new org.apache.commons.math3.exception.NoBracketingException;

        specialinvoke $r1.<org.apache.commons.math3.exception.NoBracketingException: void <init>(double,double,double,double)>(d0, d1, d5, d6);

        throw $r1;
    }

    public double laguerre(double, double, double, double)
    {
        org.apache.commons.math3.analysis.solvers.LaguerreSolver r0;
        double d0, d1, d2, d3, $d4, $d5, $d6, d7;
        org.apache.commons.math3.complex.Complex[] r1, r4;
        org.apache.commons.math3.complex.Complex r3, $r6, $r10, $r12;
        double[] $r5;
        org.apache.commons.math3.analysis.solvers.LaguerreSolver$ComplexSolver $r7, $r8, $r9, $r11;
        boolean $z0, $z1;
        int $i0, i1;

        r0 := @this: org.apache.commons.math3.analysis.solvers.LaguerreSolver;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        d2 := @parameter2: double;

        d3 := @parameter3: double;

        $r5 = virtualinvoke r0.<org.apache.commons.math3.analysis.solvers.LaguerreSolver: double[] getCoefficients()>();

        r1 = staticinvoke <org.apache.commons.math3.complex.ComplexUtils: org.apache.commons.math3.complex.Complex[] convertToComplex(double[])>($r5);

        $r6 = new org.apache.commons.math3.complex.Complex;

        $d4 = d0 + d1;

        $d5 = 0.5 * $d4;

        specialinvoke $r6.<org.apache.commons.math3.complex.Complex: void <init>(double,double)>($d5, 0.0);

        $r7 = r0.<org.apache.commons.math3.analysis.solvers.LaguerreSolver: org.apache.commons.math3.analysis.solvers.LaguerreSolver$ComplexSolver complexSolver>;

        r3 = virtualinvoke $r7.<org.apache.commons.math3.analysis.solvers.LaguerreSolver$ComplexSolver: org.apache.commons.math3.complex.Complex solve(org.apache.commons.math3.complex.Complex[],org.apache.commons.math3.complex.Complex)>(r1, $r6);

        $r8 = r0.<org.apache.commons.math3.analysis.solvers.LaguerreSolver: org.apache.commons.math3.analysis.solvers.LaguerreSolver$ComplexSolver complexSolver>;

        $z0 = virtualinvoke $r8.<org.apache.commons.math3.analysis.solvers.LaguerreSolver$ComplexSolver: boolean isRoot(double,double,org.apache.commons.math3.complex.Complex)>(d0, d1, r3);

        if $z0 == 0 goto label1;

        $d6 = virtualinvoke r3.<org.apache.commons.math3.complex.Complex: double getReal()>();

        return $d6;

     label1:
        d7 = #NaN;

        $r9 = r0.<org.apache.commons.math3.analysis.solvers.LaguerreSolver: org.apache.commons.math3.analysis.solvers.LaguerreSolver$ComplexSolver complexSolver>;

        r4 = virtualinvoke $r9.<org.apache.commons.math3.analysis.solvers.LaguerreSolver$ComplexSolver: org.apache.commons.math3.complex.Complex[] solveAll(org.apache.commons.math3.complex.Complex[],org.apache.commons.math3.complex.Complex)>(r1, $r6);

        i1 = 0;

     label2:
        $i0 = lengthof r4;

        if i1 >= $i0 goto label4;

        $r11 = r0.<org.apache.commons.math3.analysis.solvers.LaguerreSolver: org.apache.commons.math3.analysis.solvers.LaguerreSolver$ComplexSolver complexSolver>;

        $r10 = r4[i1];

        $z1 = virtualinvoke $r11.<org.apache.commons.math3.analysis.solvers.LaguerreSolver$ComplexSolver: boolean isRoot(double,double,org.apache.commons.math3.complex.Complex)>(d0, d1, $r10);

        if $z1 == 0 goto label3;

        $r12 = r4[i1];

        d7 = virtualinvoke $r12.<org.apache.commons.math3.complex.Complex: double getReal()>();

        goto label4;

     label3:
        i1 = i1 + 1;

        goto label2;

     label4:
        return d7;
    }

    public org.apache.commons.math3.complex.Complex[] solveAllComplex(double[], double) throws org.apache.commons.math3.exception.NullArgumentException, org.apache.commons.math3.exception.NoDataException, org.apache.commons.math3.exception.TooManyEvaluationsException
    {
        org.apache.commons.math3.analysis.solvers.LaguerreSolver r0;
        double[] r1;
        double d0;
        org.apache.commons.math3.complex.Complex[] $r2;

        r0 := @this: org.apache.commons.math3.analysis.solvers.LaguerreSolver;

        r1 := @parameter0: double[];

        d0 := @parameter1: double;

        $r2 = virtualinvoke r0.<org.apache.commons.math3.analysis.solvers.LaguerreSolver: org.apache.commons.math3.complex.Complex[] solveAllComplex(double[],double,int)>(r1, d0, 2147483647);

        return $r2;
    }

    public org.apache.commons.math3.complex.Complex[] solveAllComplex(double[], double, int) throws org.apache.commons.math3.exception.NullArgumentException, org.apache.commons.math3.exception.NoDataException, org.apache.commons.math3.exception.TooManyEvaluationsException
    {
        org.apache.commons.math3.analysis.solvers.LaguerreSolver r0;
        double[] r1;
        double d0;
        int i0;
        org.apache.commons.math3.analysis.polynomials.PolynomialFunction $r2;
        org.apache.commons.math3.analysis.solvers.LaguerreSolver$ComplexSolver $r3;
        org.apache.commons.math3.complex.Complex[] $r4, $r6;
        org.apache.commons.math3.complex.Complex $r5;

        r0 := @this: org.apache.commons.math3.analysis.solvers.LaguerreSolver;

        r1 := @parameter0: double[];

        d0 := @parameter1: double;

        i0 := @parameter2: int;

        $r2 = new org.apache.commons.math3.analysis.polynomials.PolynomialFunction;

        specialinvoke $r2.<org.apache.commons.math3.analysis.polynomials.PolynomialFunction: void <init>(double[])>(r1);

        virtualinvoke r0.<org.apache.commons.math3.analysis.solvers.LaguerreSolver: void setup(int,org.apache.commons.math3.analysis.polynomials.PolynomialFunction,double,double,double)>(i0, $r2, #-Infinity, #Infinity, d0);

        $r3 = r0.<org.apache.commons.math3.analysis.solvers.LaguerreSolver: org.apache.commons.math3.analysis.solvers.LaguerreSolver$ComplexSolver complexSolver>;

        $r4 = staticinvoke <org.apache.commons.math3.complex.ComplexUtils: org.apache.commons.math3.complex.Complex[] convertToComplex(double[])>(r1);

        $r5 = new org.apache.commons.math3.complex.Complex;

        specialinvoke $r5.<org.apache.commons.math3.complex.Complex: void <init>(double,double)>(d0, 0.0);

        $r6 = virtualinvoke $r3.<org.apache.commons.math3.analysis.solvers.LaguerreSolver$ComplexSolver: org.apache.commons.math3.complex.Complex[] solveAll(org.apache.commons.math3.complex.Complex[],org.apache.commons.math3.complex.Complex)>($r4, $r5);

        return $r6;
    }

    public org.apache.commons.math3.complex.Complex solveComplex(double[], double) throws org.apache.commons.math3.exception.NullArgumentException, org.apache.commons.math3.exception.NoDataException, org.apache.commons.math3.exception.TooManyEvaluationsException
    {
        org.apache.commons.math3.analysis.solvers.LaguerreSolver r0;
        double[] r1;
        double d0;
        org.apache.commons.math3.complex.Complex $r2;

        r0 := @this: org.apache.commons.math3.analysis.solvers.LaguerreSolver;

        r1 := @parameter0: double[];

        d0 := @parameter1: double;

        $r2 = virtualinvoke r0.<org.apache.commons.math3.analysis.solvers.LaguerreSolver: org.apache.commons.math3.complex.Complex solveComplex(double[],double,int)>(r1, d0, 2147483647);

        return $r2;
    }

    public org.apache.commons.math3.complex.Complex solveComplex(double[], double, int) throws org.apache.commons.math3.exception.NullArgumentException, org.apache.commons.math3.exception.NoDataException, org.apache.commons.math3.exception.TooManyEvaluationsException
    {
        org.apache.commons.math3.analysis.solvers.LaguerreSolver r0;
        double[] r1;
        double d0;
        int i0;
        org.apache.commons.math3.analysis.polynomials.PolynomialFunction $r2;
        org.apache.commons.math3.analysis.solvers.LaguerreSolver$ComplexSolver $r3;
        org.apache.commons.math3.complex.Complex[] $r4;
        org.apache.commons.math3.complex.Complex $r5, $r6;

        r0 := @this: org.apache.commons.math3.analysis.solvers.LaguerreSolver;

        r1 := @parameter0: double[];

        d0 := @parameter1: double;

        i0 := @parameter2: int;

        $r2 = new org.apache.commons.math3.analysis.polynomials.PolynomialFunction;

        specialinvoke $r2.<org.apache.commons.math3.analysis.polynomials.PolynomialFunction: void <init>(double[])>(r1);

        virtualinvoke r0.<org.apache.commons.math3.analysis.solvers.LaguerreSolver: void setup(int,org.apache.commons.math3.analysis.polynomials.PolynomialFunction,double,double,double)>(i0, $r2, #-Infinity, #Infinity, d0);

        $r3 = r0.<org.apache.commons.math3.analysis.solvers.LaguerreSolver: org.apache.commons.math3.analysis.solvers.LaguerreSolver$ComplexSolver complexSolver>;

        $r4 = staticinvoke <org.apache.commons.math3.complex.ComplexUtils: org.apache.commons.math3.complex.Complex[] convertToComplex(double[])>(r1);

        $r5 = new org.apache.commons.math3.complex.Complex;

        specialinvoke $r5.<org.apache.commons.math3.complex.Complex: void <init>(double,double)>(d0, 0.0);

        $r6 = virtualinvoke $r3.<org.apache.commons.math3.analysis.solvers.LaguerreSolver$ComplexSolver: org.apache.commons.math3.complex.Complex solve(org.apache.commons.math3.complex.Complex[],org.apache.commons.math3.complex.Complex)>($r4, $r5);

        return $r6;
    }

    public static void <clinit>()
    {
        <org.apache.commons.math3.analysis.solvers.LaguerreSolver: double DEFAULT_ABSOLUTE_ACCURACY> = 1.0E-6;

        return;
    }
}
