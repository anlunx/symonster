public class org.apache.commons.math3.stat.inference.BinomialTest extends java.lang.Object
{

    public void <init>()
    {
        org.apache.commons.math3.stat.inference.BinomialTest r0;

        r0 := @this: org.apache.commons.math3.stat.inference.BinomialTest;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public boolean binomialTest(int, int, double, org.apache.commons.math3.stat.inference.AlternativeHypothesis, double)
    {
        org.apache.commons.math3.stat.inference.BinomialTest r0;
        int i0, i1;
        double d0, d1, d2;
        org.apache.commons.math3.stat.inference.AlternativeHypothesis r1;
        byte $b2;
        boolean $z0;

        r0 := @this: org.apache.commons.math3.stat.inference.BinomialTest;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        d0 := @parameter2: double;

        r1 := @parameter3: org.apache.commons.math3.stat.inference.AlternativeHypothesis;

        d1 := @parameter4: double;

        d2 = virtualinvoke r0.<org.apache.commons.math3.stat.inference.BinomialTest: double binomialTest(int,int,double,org.apache.commons.math3.stat.inference.AlternativeHypothesis)>(i0, i1, d0, r1);

        $b2 = d2 cmpg d1;

        if $b2 >= 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public double binomialTest(int, int, double, org.apache.commons.math3.stat.inference.AlternativeHypothesis)
    {
        org.apache.commons.math3.stat.inference.BinomialTest r0;
        int i0, i1, $i4, $i5, $i6, i9, i10;
        double d0, d1, d2, $d3, $d4, $d5, $d6, d7;
        org.apache.commons.math3.stat.inference.AlternativeHypothesis r1, $r11, $r12;
        byte $b2, $b3, $b7, $b8;
        org.apache.commons.math3.exception.OutOfRangeException $r3;
        java.lang.Double $r4;
        java.lang.Integer $r5, $r6, $r18, $r19, $r21, $r23;
        org.apache.commons.math3.distribution.BinomialDistribution $r7;
        int[] $r8;
        org.apache.commons.math3.exception.MathInternalError $r9;
        java.lang.Object[] $r10, $r16;
        org.apache.commons.math3.exception.util.LocalizedFormats $r13, $r17;
        org.apache.commons.math3.exception.NullArgumentException $r14;
        org.apache.commons.math3.exception.MathIllegalArgumentException $r15;
        org.apache.commons.math3.exception.NotPositiveException $r20, $r22;

        r0 := @this: org.apache.commons.math3.stat.inference.BinomialTest;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        d0 := @parameter2: double;

        r1 := @parameter3: org.apache.commons.math3.stat.inference.AlternativeHypothesis;

        if i0 >= 0 goto label01;

        $r22 = new org.apache.commons.math3.exception.NotPositiveException;

        $r23 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        specialinvoke $r22.<org.apache.commons.math3.exception.NotPositiveException: void <init>(java.lang.Number)>($r23);

        throw $r22;

     label01:
        if i1 >= 0 goto label02;

        $r20 = new org.apache.commons.math3.exception.NotPositiveException;

        $r21 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        specialinvoke $r20.<org.apache.commons.math3.exception.NotPositiveException: void <init>(java.lang.Number)>($r21);

        throw $r20;

     label02:
        $b2 = d0 cmpg 0.0;

        if $b2 < 0 goto label03;

        $b3 = d0 cmpl 1.0;

        if $b3 <= 0 goto label04;

     label03:
        $r3 = new org.apache.commons.math3.exception.OutOfRangeException;

        $r4 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d0);

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        specialinvoke $r3.<org.apache.commons.math3.exception.OutOfRangeException: void <init>(java.lang.Number,java.lang.Number,java.lang.Number)>($r4, $r5, $r6);

        throw $r3;

     label04:
        if i0 >= i1 goto label05;

        $r15 = new org.apache.commons.math3.exception.MathIllegalArgumentException;

        $r17 = <org.apache.commons.math3.exception.util.LocalizedFormats: org.apache.commons.math3.exception.util.LocalizedFormats BINOMIAL_INVALID_PARAMETERS_ORDER>;

        $r16 = newarray (java.lang.Object)[2];

        $r18 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r16[0] = $r18;

        $r19 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        $r16[1] = $r19;

        specialinvoke $r15.<org.apache.commons.math3.exception.MathIllegalArgumentException: void <init>(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])>($r17, $r16);

        throw $r15;

     label05:
        if r1 != null goto label06;

        $r14 = new org.apache.commons.math3.exception.NullArgumentException;

        specialinvoke $r14.<org.apache.commons.math3.exception.NullArgumentException: void <init>()>();

        throw $r14;

     label06:
        $r7 = new org.apache.commons.math3.distribution.BinomialDistribution;

        specialinvoke $r7.<org.apache.commons.math3.distribution.BinomialDistribution: void <init>(org.apache.commons.math3.random.RandomGenerator,int,double)>(null, i0, d0);

        $r8 = <org.apache.commons.math3.stat.inference.BinomialTest$1: int[] $SwitchMap$org$apache$commons$math3$stat$inference$AlternativeHypothesis>;

        $i4 = virtualinvoke r1.<org.apache.commons.math3.stat.inference.AlternativeHypothesis: int ordinal()>();

        $i5 = $r8[$i4];

        tableswitch($i5)
        {
            case 1: goto label07;
            case 2: goto label08;
            case 3: goto label09;
            default: goto label16;
        };

     label07:
        $i6 = i1 - 1;

        $d3 = virtualinvoke $r7.<org.apache.commons.math3.distribution.BinomialDistribution: double cumulativeProbability(int)>($i6);

        $d4 = 1.0 - $d3;

        return $d4;

     label08:
        $d6 = virtualinvoke $r7.<org.apache.commons.math3.distribution.BinomialDistribution: double cumulativeProbability(int)>(i1);

        return $d6;

     label09:
        i9 = 0;

        i10 = i0;

        d7 = 0.0;

     label10:
        d1 = virtualinvoke $r7.<org.apache.commons.math3.distribution.BinomialDistribution: double probability(int)>(i9);

        d2 = virtualinvoke $r7.<org.apache.commons.math3.distribution.BinomialDistribution: double probability(int)>(i10);

        $b7 = d1 cmpl d2;

        if $b7 != 0 goto label11;

        $d5 = 2.0 * d1;

        d7 = d7 + $d5;

        i9 = i9 + 1;

        i10 = i10 + -1;

        goto label13;

     label11:
        $b8 = d1 cmpg d2;

        if $b8 >= 0 goto label12;

        d7 = d7 + d1;

        i9 = i9 + 1;

        goto label13;

     label12:
        d7 = d7 + d2;

        i10 = i10 + -1;

     label13:
        if i9 > i1 goto label15;

        if i10 >= i1 goto label14;

        goto label15;

     label14:
        goto label10;

     label15:
        return d7;

     label16:
        $r9 = new org.apache.commons.math3.exception.MathInternalError;

        $r13 = <org.apache.commons.math3.exception.util.LocalizedFormats: org.apache.commons.math3.exception.util.LocalizedFormats OUT_OF_RANGE_SIMPLE>;

        $r10 = newarray (java.lang.Object)[3];

        $r10[0] = r1;

        $r11 = <org.apache.commons.math3.stat.inference.AlternativeHypothesis: org.apache.commons.math3.stat.inference.AlternativeHypothesis TWO_SIDED>;

        $r10[1] = $r11;

        $r12 = <org.apache.commons.math3.stat.inference.AlternativeHypothesis: org.apache.commons.math3.stat.inference.AlternativeHypothesis LESS_THAN>;

        $r10[2] = $r12;

        specialinvoke $r9.<org.apache.commons.math3.exception.MathInternalError: void <init>(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])>($r13, $r10);

        throw $r9;
    }
}
