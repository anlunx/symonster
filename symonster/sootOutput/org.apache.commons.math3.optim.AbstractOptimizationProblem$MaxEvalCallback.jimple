class org.apache.commons.math3.optim.AbstractOptimizationProblem$MaxEvalCallback extends java.lang.Object implements org.apache.commons.math3.util.Incrementor$MaxCountExceededCallback
{

    private void <init>()
    {
        org.apache.commons.math3.optim.AbstractOptimizationProblem$MaxEvalCallback r0;

        r0 := @this: org.apache.commons.math3.optim.AbstractOptimizationProblem$MaxEvalCallback;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void trigger(int)
    {
        org.apache.commons.math3.optim.AbstractOptimizationProblem$MaxEvalCallback r0;
        int i0;
        org.apache.commons.math3.exception.TooManyEvaluationsException $r1;
        java.lang.Integer $r2;

        r0 := @this: org.apache.commons.math3.optim.AbstractOptimizationProblem$MaxEvalCallback;

        i0 := @parameter0: int;

        $r1 = new org.apache.commons.math3.exception.TooManyEvaluationsException;

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        specialinvoke $r1.<org.apache.commons.math3.exception.TooManyEvaluationsException: void <init>(java.lang.Number)>($r2);

        throw $r1;
    }

    void <init>(org.apache.commons.math3.optim.AbstractOptimizationProblem$1)
    {
        org.apache.commons.math3.optim.AbstractOptimizationProblem$MaxEvalCallback r0;
        org.apache.commons.math3.optim.AbstractOptimizationProblem$1 r1;

        r0 := @this: org.apache.commons.math3.optim.AbstractOptimizationProblem$MaxEvalCallback;

        r1 := @parameter0: org.apache.commons.math3.optim.AbstractOptimizationProblem$1;

        specialinvoke r0.<org.apache.commons.math3.optim.AbstractOptimizationProblem$MaxEvalCallback: void <init>()>();

        return;
    }
}
