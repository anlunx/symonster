public class org.apache.commons.math3.stat.descriptive.SynchronizedMultivariateSummaryStatistics extends org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics
{
    private static final long serialVersionUID;

    public void <init>(int, boolean)
    {
        org.apache.commons.math3.stat.descriptive.SynchronizedMultivariateSummaryStatistics r0;
        int i0;
        boolean z0;

        r0 := @this: org.apache.commons.math3.stat.descriptive.SynchronizedMultivariateSummaryStatistics;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        specialinvoke r0.<org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics: void <init>(int,boolean)>(i0, z0);

        return;
    }

    public synchronized void addValue(double[]) throws org.apache.commons.math3.exception.DimensionMismatchException
    {
        org.apache.commons.math3.stat.descriptive.SynchronizedMultivariateSummaryStatistics r0;
        double[] r1;

        r0 := @this: org.apache.commons.math3.stat.descriptive.SynchronizedMultivariateSummaryStatistics;

        r1 := @parameter0: double[];

        specialinvoke r0.<org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics: void addValue(double[])>(r1);

        return;
    }

    public synchronized int getDimension()
    {
        org.apache.commons.math3.stat.descriptive.SynchronizedMultivariateSummaryStatistics r0;
        int $i0;

        r0 := @this: org.apache.commons.math3.stat.descriptive.SynchronizedMultivariateSummaryStatistics;

        $i0 = specialinvoke r0.<org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics: int getDimension()>();

        return $i0;
    }

    public synchronized long getN()
    {
        org.apache.commons.math3.stat.descriptive.SynchronizedMultivariateSummaryStatistics r0;
        long $l0;

        r0 := @this: org.apache.commons.math3.stat.descriptive.SynchronizedMultivariateSummaryStatistics;

        $l0 = specialinvoke r0.<org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics: long getN()>();

        return $l0;
    }

    public synchronized double[] getSum()
    {
        org.apache.commons.math3.stat.descriptive.SynchronizedMultivariateSummaryStatistics r0;
        double[] $r1;

        r0 := @this: org.apache.commons.math3.stat.descriptive.SynchronizedMultivariateSummaryStatistics;

        $r1 = specialinvoke r0.<org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics: double[] getSum()>();

        return $r1;
    }

    public synchronized double[] getSumSq()
    {
        org.apache.commons.math3.stat.descriptive.SynchronizedMultivariateSummaryStatistics r0;
        double[] $r1;

        r0 := @this: org.apache.commons.math3.stat.descriptive.SynchronizedMultivariateSummaryStatistics;

        $r1 = specialinvoke r0.<org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics: double[] getSumSq()>();

        return $r1;
    }

    public synchronized double[] getSumLog()
    {
        org.apache.commons.math3.stat.descriptive.SynchronizedMultivariateSummaryStatistics r0;
        double[] $r1;

        r0 := @this: org.apache.commons.math3.stat.descriptive.SynchronizedMultivariateSummaryStatistics;

        $r1 = specialinvoke r0.<org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics: double[] getSumLog()>();

        return $r1;
    }

    public synchronized double[] getMean()
    {
        org.apache.commons.math3.stat.descriptive.SynchronizedMultivariateSummaryStatistics r0;
        double[] $r1;

        r0 := @this: org.apache.commons.math3.stat.descriptive.SynchronizedMultivariateSummaryStatistics;

        $r1 = specialinvoke r0.<org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics: double[] getMean()>();

        return $r1;
    }

    public synchronized double[] getStandardDeviation()
    {
        org.apache.commons.math3.stat.descriptive.SynchronizedMultivariateSummaryStatistics r0;
        double[] $r1;

        r0 := @this: org.apache.commons.math3.stat.descriptive.SynchronizedMultivariateSummaryStatistics;

        $r1 = specialinvoke r0.<org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics: double[] getStandardDeviation()>();

        return $r1;
    }

    public synchronized org.apache.commons.math3.linear.RealMatrix getCovariance()
    {
        org.apache.commons.math3.stat.descriptive.SynchronizedMultivariateSummaryStatistics r0;
        org.apache.commons.math3.linear.RealMatrix $r1;

        r0 := @this: org.apache.commons.math3.stat.descriptive.SynchronizedMultivariateSummaryStatistics;

        $r1 = specialinvoke r0.<org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics: org.apache.commons.math3.linear.RealMatrix getCovariance()>();

        return $r1;
    }

    public synchronized double[] getMax()
    {
        org.apache.commons.math3.stat.descriptive.SynchronizedMultivariateSummaryStatistics r0;
        double[] $r1;

        r0 := @this: org.apache.commons.math3.stat.descriptive.SynchronizedMultivariateSummaryStatistics;

        $r1 = specialinvoke r0.<org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics: double[] getMax()>();

        return $r1;
    }

    public synchronized double[] getMin()
    {
        org.apache.commons.math3.stat.descriptive.SynchronizedMultivariateSummaryStatistics r0;
        double[] $r1;

        r0 := @this: org.apache.commons.math3.stat.descriptive.SynchronizedMultivariateSummaryStatistics;

        $r1 = specialinvoke r0.<org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics: double[] getMin()>();

        return $r1;
    }

    public synchronized double[] getGeometricMean()
    {
        org.apache.commons.math3.stat.descriptive.SynchronizedMultivariateSummaryStatistics r0;
        double[] $r1;

        r0 := @this: org.apache.commons.math3.stat.descriptive.SynchronizedMultivariateSummaryStatistics;

        $r1 = specialinvoke r0.<org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics: double[] getGeometricMean()>();

        return $r1;
    }

    public synchronized java.lang.String toString()
    {
        org.apache.commons.math3.stat.descriptive.SynchronizedMultivariateSummaryStatistics r0;
        java.lang.String $r1;

        r0 := @this: org.apache.commons.math3.stat.descriptive.SynchronizedMultivariateSummaryStatistics;

        $r1 = specialinvoke r0.<org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics: java.lang.String toString()>();

        return $r1;
    }

    public synchronized void clear()
    {
        org.apache.commons.math3.stat.descriptive.SynchronizedMultivariateSummaryStatistics r0;

        r0 := @this: org.apache.commons.math3.stat.descriptive.SynchronizedMultivariateSummaryStatistics;

        specialinvoke r0.<org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics: void clear()>();

        return;
    }

    public synchronized boolean equals(java.lang.Object)
    {
        org.apache.commons.math3.stat.descriptive.SynchronizedMultivariateSummaryStatistics r0;
        java.lang.Object r1;
        boolean $z0;

        r0 := @this: org.apache.commons.math3.stat.descriptive.SynchronizedMultivariateSummaryStatistics;

        r1 := @parameter0: java.lang.Object;

        $z0 = specialinvoke r0.<org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics: boolean equals(java.lang.Object)>(r1);

        return $z0;
    }

    public synchronized int hashCode()
    {
        org.apache.commons.math3.stat.descriptive.SynchronizedMultivariateSummaryStatistics r0;
        int $i0;

        r0 := @this: org.apache.commons.math3.stat.descriptive.SynchronizedMultivariateSummaryStatistics;

        $i0 = specialinvoke r0.<org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics: int hashCode()>();

        return $i0;
    }

    public synchronized org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[] getSumImpl()
    {
        org.apache.commons.math3.stat.descriptive.SynchronizedMultivariateSummaryStatistics r0;
        org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[] $r1;

        r0 := @this: org.apache.commons.math3.stat.descriptive.SynchronizedMultivariateSummaryStatistics;

        $r1 = specialinvoke r0.<org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics: org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[] getSumImpl()>();

        return $r1;
    }

    public synchronized void setSumImpl(org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[]) throws org.apache.commons.math3.exception.DimensionMismatchException, org.apache.commons.math3.exception.MathIllegalStateException
    {
        org.apache.commons.math3.stat.descriptive.SynchronizedMultivariateSummaryStatistics r0;
        org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[] r1;

        r0 := @this: org.apache.commons.math3.stat.descriptive.SynchronizedMultivariateSummaryStatistics;

        r1 := @parameter0: org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[];

        specialinvoke r0.<org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics: void setSumImpl(org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[])>(r1);

        return;
    }

    public synchronized org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[] getSumsqImpl()
    {
        org.apache.commons.math3.stat.descriptive.SynchronizedMultivariateSummaryStatistics r0;
        org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[] $r1;

        r0 := @this: org.apache.commons.math3.stat.descriptive.SynchronizedMultivariateSummaryStatistics;

        $r1 = specialinvoke r0.<org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics: org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[] getSumsqImpl()>();

        return $r1;
    }

    public synchronized void setSumsqImpl(org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[]) throws org.apache.commons.math3.exception.DimensionMismatchException, org.apache.commons.math3.exception.MathIllegalStateException
    {
        org.apache.commons.math3.stat.descriptive.SynchronizedMultivariateSummaryStatistics r0;
        org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[] r1;

        r0 := @this: org.apache.commons.math3.stat.descriptive.SynchronizedMultivariateSummaryStatistics;

        r1 := @parameter0: org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[];

        specialinvoke r0.<org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics: void setSumsqImpl(org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[])>(r1);

        return;
    }

    public synchronized org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[] getMinImpl()
    {
        org.apache.commons.math3.stat.descriptive.SynchronizedMultivariateSummaryStatistics r0;
        org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[] $r1;

        r0 := @this: org.apache.commons.math3.stat.descriptive.SynchronizedMultivariateSummaryStatistics;

        $r1 = specialinvoke r0.<org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics: org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[] getMinImpl()>();

        return $r1;
    }

    public synchronized void setMinImpl(org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[]) throws org.apache.commons.math3.exception.DimensionMismatchException, org.apache.commons.math3.exception.MathIllegalStateException
    {
        org.apache.commons.math3.stat.descriptive.SynchronizedMultivariateSummaryStatistics r0;
        org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[] r1;

        r0 := @this: org.apache.commons.math3.stat.descriptive.SynchronizedMultivariateSummaryStatistics;

        r1 := @parameter0: org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[];

        specialinvoke r0.<org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics: void setMinImpl(org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[])>(r1);

        return;
    }

    public synchronized org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[] getMaxImpl()
    {
        org.apache.commons.math3.stat.descriptive.SynchronizedMultivariateSummaryStatistics r0;
        org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[] $r1;

        r0 := @this: org.apache.commons.math3.stat.descriptive.SynchronizedMultivariateSummaryStatistics;

        $r1 = specialinvoke r0.<org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics: org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[] getMaxImpl()>();

        return $r1;
    }

    public synchronized void setMaxImpl(org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[]) throws org.apache.commons.math3.exception.DimensionMismatchException, org.apache.commons.math3.exception.MathIllegalStateException
    {
        org.apache.commons.math3.stat.descriptive.SynchronizedMultivariateSummaryStatistics r0;
        org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[] r1;

        r0 := @this: org.apache.commons.math3.stat.descriptive.SynchronizedMultivariateSummaryStatistics;

        r1 := @parameter0: org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[];

        specialinvoke r0.<org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics: void setMaxImpl(org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[])>(r1);

        return;
    }

    public synchronized org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[] getSumLogImpl()
    {
        org.apache.commons.math3.stat.descriptive.SynchronizedMultivariateSummaryStatistics r0;
        org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[] $r1;

        r0 := @this: org.apache.commons.math3.stat.descriptive.SynchronizedMultivariateSummaryStatistics;

        $r1 = specialinvoke r0.<org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics: org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[] getSumLogImpl()>();

        return $r1;
    }

    public synchronized void setSumLogImpl(org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[]) throws org.apache.commons.math3.exception.DimensionMismatchException, org.apache.commons.math3.exception.MathIllegalStateException
    {
        org.apache.commons.math3.stat.descriptive.SynchronizedMultivariateSummaryStatistics r0;
        org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[] r1;

        r0 := @this: org.apache.commons.math3.stat.descriptive.SynchronizedMultivariateSummaryStatistics;

        r1 := @parameter0: org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[];

        specialinvoke r0.<org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics: void setSumLogImpl(org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[])>(r1);

        return;
    }

    public synchronized org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[] getGeoMeanImpl()
    {
        org.apache.commons.math3.stat.descriptive.SynchronizedMultivariateSummaryStatistics r0;
        org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[] $r1;

        r0 := @this: org.apache.commons.math3.stat.descriptive.SynchronizedMultivariateSummaryStatistics;

        $r1 = specialinvoke r0.<org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics: org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[] getGeoMeanImpl()>();

        return $r1;
    }

    public synchronized void setGeoMeanImpl(org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[]) throws org.apache.commons.math3.exception.DimensionMismatchException, org.apache.commons.math3.exception.MathIllegalStateException
    {
        org.apache.commons.math3.stat.descriptive.SynchronizedMultivariateSummaryStatistics r0;
        org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[] r1;

        r0 := @this: org.apache.commons.math3.stat.descriptive.SynchronizedMultivariateSummaryStatistics;

        r1 := @parameter0: org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[];

        specialinvoke r0.<org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics: void setGeoMeanImpl(org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[])>(r1);

        return;
    }

    public synchronized org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[] getMeanImpl()
    {
        org.apache.commons.math3.stat.descriptive.SynchronizedMultivariateSummaryStatistics r0;
        org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[] $r1;

        r0 := @this: org.apache.commons.math3.stat.descriptive.SynchronizedMultivariateSummaryStatistics;

        $r1 = specialinvoke r0.<org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics: org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[] getMeanImpl()>();

        return $r1;
    }

    public synchronized void setMeanImpl(org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[]) throws org.apache.commons.math3.exception.DimensionMismatchException, org.apache.commons.math3.exception.MathIllegalStateException
    {
        org.apache.commons.math3.stat.descriptive.SynchronizedMultivariateSummaryStatistics r0;
        org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[] r1;

        r0 := @this: org.apache.commons.math3.stat.descriptive.SynchronizedMultivariateSummaryStatistics;

        r1 := @parameter0: org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[];

        specialinvoke r0.<org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics: void setMeanImpl(org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[])>(r1);

        return;
    }

    public static void <clinit>()
    {
        <org.apache.commons.math3.stat.descriptive.SynchronizedMultivariateSummaryStatistics: long serialVersionUID> = 7099834153347155363L;

        return;
    }
}
