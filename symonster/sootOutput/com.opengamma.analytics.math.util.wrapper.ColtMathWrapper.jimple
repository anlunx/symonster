public final class com.opengamma.analytics.math.util.wrapper.ColtMathWrapper extends java.lang.Object
{

    private void <init>()
    {
        com.opengamma.analytics.math.util.wrapper.ColtMathWrapper r0;

        r0 := @this: com.opengamma.analytics.math.util.wrapper.ColtMathWrapper;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static com.opengamma.analytics.math.matrix.DoubleMatrix2D wrap(cern.colt.matrix.DoubleMatrix2D)
    {
        cern.colt.matrix.DoubleMatrix2D r0;
        com.opengamma.analytics.math.matrix.DoubleMatrix2D $r1;
        double[][] $r2;

        r0 := @parameter0: cern.colt.matrix.DoubleMatrix2D;

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object,java.lang.String)>(r0, "x");

        $r1 = new com.opengamma.analytics.math.matrix.DoubleMatrix2D;

        $r2 = virtualinvoke r0.<cern.colt.matrix.DoubleMatrix2D: double[][] toArray()>();

        specialinvoke $r1.<com.opengamma.analytics.math.matrix.DoubleMatrix2D: void <init>(double[][])>($r2);

        return $r1;
    }

    public static cern.colt.matrix.DoubleMatrix2D wrap(com.opengamma.analytics.math.matrix.DoubleMatrix2D)
    {
        com.opengamma.analytics.math.matrix.DoubleMatrix2D r0;
        cern.colt.matrix.DoubleFactory2D $r1;
        double[][] $r2;
        cern.colt.matrix.DoubleMatrix2D $r3;

        r0 := @parameter0: com.opengamma.analytics.math.matrix.DoubleMatrix2D;

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object,java.lang.String)>(r0, "x");

        $r1 = <cern.colt.matrix.DoubleFactory2D: cern.colt.matrix.DoubleFactory2D dense>;

        $r2 = virtualinvoke r0.<com.opengamma.analytics.math.matrix.DoubleMatrix2D: double[][] getData()>();

        $r3 = virtualinvoke $r1.<cern.colt.matrix.DoubleFactory2D: cern.colt.matrix.DoubleMatrix2D make(double[][])>($r2);

        return $r3;
    }
}
