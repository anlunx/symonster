public final class com.opengamma.analytics.financial.interestrate.payments.provider.CouponFixedDiscountingMethod extends java.lang.Object
{
    private static final com.opengamma.analytics.financial.interestrate.payments.provider.CouponFixedDiscountingMethod INSTANCE;

    public static com.opengamma.analytics.financial.interestrate.payments.provider.CouponFixedDiscountingMethod getInstance()
    {
        com.opengamma.analytics.financial.interestrate.payments.provider.CouponFixedDiscountingMethod $r0;

        $r0 = <com.opengamma.analytics.financial.interestrate.payments.provider.CouponFixedDiscountingMethod: com.opengamma.analytics.financial.interestrate.payments.provider.CouponFixedDiscountingMethod INSTANCE>;

        return $r0;
    }

    private void <init>()
    {
        com.opengamma.analytics.financial.interestrate.payments.provider.CouponFixedDiscountingMethod r0;

        r0 := @this: com.opengamma.analytics.financial.interestrate.payments.provider.CouponFixedDiscountingMethod;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public com.opengamma.util.money.MultipleCurrencyAmount presentValue(com.opengamma.analytics.financial.interestrate.payments.derivative.CouponFixed, com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface)
    {
        com.opengamma.analytics.financial.interestrate.payments.provider.CouponFixedDiscountingMethod r0;
        com.opengamma.analytics.financial.interestrate.payments.derivative.CouponFixed r1;
        com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface r2;
        double d0, d1, $d2, $d3;
        com.opengamma.util.money.Currency $r3, $r5;
        java.lang.Double $r4;
        com.opengamma.util.money.MultipleCurrencyAmount $r6;

        r0 := @this: com.opengamma.analytics.financial.interestrate.payments.provider.CouponFixedDiscountingMethod;

        r1 := @parameter0: com.opengamma.analytics.financial.interestrate.payments.derivative.CouponFixed;

        r2 := @parameter1: com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface;

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object,java.lang.String)>(r1, "Coupon");

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object,java.lang.String)>(r2, "multicurve");

        $r3 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.payments.derivative.CouponFixed: com.opengamma.util.money.Currency getCurrency()>();

        $d2 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.payments.derivative.CouponFixed: double getPaymentTime()>();

        $r4 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d2);

        d0 = interfaceinvoke r2.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface: double getDiscountFactor(com.opengamma.util.money.Currency,java.lang.Double)>($r3, $r4);

        $d3 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.payments.derivative.CouponFixed: double getAmount()>();

        d1 = $d3 * d0;

        $r5 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.payments.derivative.CouponFixed: com.opengamma.util.money.Currency getCurrency()>();

        $r6 = staticinvoke <com.opengamma.util.money.MultipleCurrencyAmount: com.opengamma.util.money.MultipleCurrencyAmount of(com.opengamma.util.money.Currency,double)>($r5, d1);

        return $r6;
    }

    public com.opengamma.util.money.CurrencyAmount presentValuePositiveNotional(com.opengamma.analytics.financial.interestrate.payments.derivative.CouponFixed, com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface)
    {
        com.opengamma.analytics.financial.interestrate.payments.provider.CouponFixedDiscountingMethod r0;
        com.opengamma.analytics.financial.interestrate.payments.derivative.CouponFixed r1;
        com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface r2;
        double d0, d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8;
        com.opengamma.util.money.Currency $r3, $r5;
        java.lang.Double $r4;
        com.opengamma.util.money.CurrencyAmount $r6;

        r0 := @this: com.opengamma.analytics.financial.interestrate.payments.provider.CouponFixedDiscountingMethod;

        r1 := @parameter0: com.opengamma.analytics.financial.interestrate.payments.derivative.CouponFixed;

        r2 := @parameter1: com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface;

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object,java.lang.String)>(r1, "Coupon");

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object,java.lang.String)>(r2, "multicurve");

        $r3 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.payments.derivative.CouponFixed: com.opengamma.util.money.Currency getCurrency()>();

        $d2 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.payments.derivative.CouponFixed: double getPaymentTime()>();

        $r4 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d2);

        d0 = interfaceinvoke r2.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface: double getDiscountFactor(com.opengamma.util.money.Currency,java.lang.Double)>($r3, $r4);

        $d3 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.payments.derivative.CouponFixed: double getPaymentYearFraction()>();

        $d4 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.payments.derivative.CouponFixed: double getNotional()>();

        $d5 = staticinvoke <java.lang.Math: double abs(double)>($d4);

        $d6 = $d3 * $d5;

        $d7 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.payments.derivative.CouponFixed: double getFixedRate()>();

        $d8 = $d6 * $d7;

        d1 = $d8 * d0;

        $r5 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.payments.derivative.CouponFixed: com.opengamma.util.money.Currency getCurrency()>();

        $r6 = staticinvoke <com.opengamma.util.money.CurrencyAmount: com.opengamma.util.money.CurrencyAmount of(com.opengamma.util.money.Currency,double)>($r5, d1);

        return $r6;
    }

    public com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyMulticurveSensitivity presentValueCurveSensitivity(com.opengamma.analytics.financial.interestrate.payments.derivative.CouponFixed, com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface)
    {
        com.opengamma.analytics.financial.interestrate.payments.provider.CouponFixedDiscountingMethod r0;
        com.opengamma.analytics.financial.interestrate.payments.derivative.CouponFixed r1;
        com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface r2;
        double d0, $d1, $d2, $d3, $d4, $d5;
        com.opengamma.util.tuple.DoublesPair r4;
        java.util.HashMap $r6;
        com.opengamma.util.money.Currency $r7, $r10, $r14;
        java.lang.Double $r8;
        java.util.ArrayList $r9;
        java.lang.String $r11;
        com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyMulticurveSensitivity $r13, r17;
        com.opengamma.analytics.financial.provider.sensitivity.multicurve.MulticurveSensitivity $r15;

        r0 := @this: com.opengamma.analytics.financial.interestrate.payments.provider.CouponFixedDiscountingMethod;

        r1 := @parameter0: com.opengamma.analytics.financial.interestrate.payments.derivative.CouponFixed;

        r2 := @parameter1: com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface;

        d0 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.payments.derivative.CouponFixed: double getPaymentTime()>();

        $r6 = new java.util.HashMap;

        specialinvoke $r6.<java.util.HashMap: void <init>()>();

        $d1 = neg d0;

        $d2 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.payments.derivative.CouponFixed: double getAmount()>();

        $d3 = $d1 * $d2;

        $r7 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.payments.derivative.CouponFixed: com.opengamma.util.money.Currency getCurrency()>();

        $r8 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d0);

        $d4 = interfaceinvoke r2.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface: double getDiscountFactor(com.opengamma.util.money.Currency,java.lang.Double)>($r7, $r8);

        $d5 = $d3 * $d4;

        r4 = staticinvoke <com.opengamma.util.tuple.DoublesPair: com.opengamma.util.tuple.DoublesPair of(double,double)>(d0, $d5);

        $r9 = new java.util.ArrayList;

        specialinvoke $r9.<java.util.ArrayList: void <init>()>();

        interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>(r4);

        $r10 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.payments.derivative.CouponFixed: com.opengamma.util.money.Currency getCurrency()>();

        $r11 = interfaceinvoke r2.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface: java.lang.String getName(com.opengamma.util.money.Currency)>($r10);

        interfaceinvoke $r6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r11, $r9);

        $r13 = new com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyMulticurveSensitivity;

        specialinvoke $r13.<com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyMulticurveSensitivity: void <init>()>();

        $r14 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.payments.derivative.CouponFixed: com.opengamma.util.money.Currency getCurrency()>();

        $r15 = staticinvoke <com.opengamma.analytics.financial.provider.sensitivity.multicurve.MulticurveSensitivity: com.opengamma.analytics.financial.provider.sensitivity.multicurve.MulticurveSensitivity ofYieldDiscounting(java.util.Map)>($r6);

        r17 = virtualinvoke $r13.<com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyMulticurveSensitivity: com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyMulticurveSensitivity plus(com.opengamma.util.money.Currency,com.opengamma.analytics.financial.provider.sensitivity.multicurve.MulticurveSensitivity)>($r14, $r15);

        return r17;
    }

    static void <clinit>()
    {
        com.opengamma.analytics.financial.interestrate.payments.provider.CouponFixedDiscountingMethod $r0;

        $r0 = new com.opengamma.analytics.financial.interestrate.payments.provider.CouponFixedDiscountingMethod;

        specialinvoke $r0.<com.opengamma.analytics.financial.interestrate.payments.provider.CouponFixedDiscountingMethod: void <init>()>();

        <com.opengamma.analytics.financial.interestrate.payments.provider.CouponFixedDiscountingMethod: com.opengamma.analytics.financial.interestrate.payments.provider.CouponFixedDiscountingMethod INSTANCE> = $r0;

        return;
    }
}
