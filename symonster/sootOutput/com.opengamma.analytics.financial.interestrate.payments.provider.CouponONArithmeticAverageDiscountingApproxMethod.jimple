public final class com.opengamma.analytics.financial.interestrate.payments.provider.CouponONArithmeticAverageDiscountingApproxMethod extends java.lang.Object
{
    private static final com.opengamma.analytics.financial.interestrate.payments.provider.CouponONArithmeticAverageDiscountingApproxMethod INSTANCE;

    public static com.opengamma.analytics.financial.interestrate.payments.provider.CouponONArithmeticAverageDiscountingApproxMethod getInstance()
    {
        com.opengamma.analytics.financial.interestrate.payments.provider.CouponONArithmeticAverageDiscountingApproxMethod $r0;

        $r0 = <com.opengamma.analytics.financial.interestrate.payments.provider.CouponONArithmeticAverageDiscountingApproxMethod: com.opengamma.analytics.financial.interestrate.payments.provider.CouponONArithmeticAverageDiscountingApproxMethod INSTANCE>;

        return $r0;
    }

    private void <init>()
    {
        com.opengamma.analytics.financial.interestrate.payments.provider.CouponONArithmeticAverageDiscountingApproxMethod r0;

        r0 := @this: com.opengamma.analytics.financial.interestrate.payments.provider.CouponONArithmeticAverageDiscountingApproxMethod;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public com.opengamma.util.money.MultipleCurrencyAmount presentValue(com.opengamma.analytics.financial.interestrate.payments.derivative.CouponONArithmeticAverage, com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface)
    {
        com.opengamma.analytics.financial.interestrate.payments.provider.CouponONArithmeticAverageDiscountingApproxMethod r0;
        com.opengamma.analytics.financial.interestrate.payments.derivative.CouponONArithmeticAverage r1;
        com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface r2;
        double[] r3, r4;
        int i0, $i1;
        double d0, d1, d2, d3, d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13;
        com.opengamma.analytics.financial.instrument.index.IndexON $r7;
        com.opengamma.util.money.Currency $r8, $r10;
        java.lang.Double $r9;
        com.opengamma.util.money.MultipleCurrencyAmount $r11;

        r0 := @this: com.opengamma.analytics.financial.interestrate.payments.provider.CouponONArithmeticAverageDiscountingApproxMethod;

        r1 := @parameter0: com.opengamma.analytics.financial.interestrate.payments.derivative.CouponONArithmeticAverage;

        r2 := @parameter1: com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "Coupon");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, "Multi-curve provider");

        r3 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.payments.derivative.CouponONArithmeticAverage: double[] getFixingPeriodStartTimes()>();

        r4 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.payments.derivative.CouponONArithmeticAverage: double[] getFixingPeriodEndTimes()>();

        $i1 = lengthof r4;

        i0 = $i1 - 1;

        d0 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.payments.derivative.CouponONArithmeticAverage: double getFixingPeriodRemainingAccrualFactor()>();

        $r7 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.payments.derivative.CouponONArithmeticAverage: com.opengamma.analytics.financial.instrument.index.IndexON getIndex()>();

        $d6 = r3[0];

        $d5 = r4[i0];

        $d7 = interfaceinvoke r2.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface: double getSimplyCompoundForwardRate(com.opengamma.analytics.financial.instrument.index.IndexON,double,double,double)>($r7, $d6, $d5, d0);

        d1 = $d7 * d0;

        $d8 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.payments.derivative.CouponONArithmeticAverage: double getRateAccrued()>();

        $d9 = 1.0 + d1;

        $d10 = staticinvoke <java.lang.Math: double log(double)>($d9);

        d2 = $d8 + $d10;

        $r8 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.payments.derivative.CouponONArithmeticAverage: com.opengamma.util.money.Currency getCurrency()>();

        $d11 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.payments.derivative.CouponONArithmeticAverage: double getPaymentTime()>();

        $r9 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d11);

        d3 = interfaceinvoke r2.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface: double getDiscountFactor(com.opengamma.util.money.Currency,java.lang.Double)>($r8, $r9);

        $d12 = d3 * d2;

        $d13 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.payments.derivative.CouponONArithmeticAverage: double getNotional()>();

        d4 = $d12 * $d13;

        $r10 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.payments.derivative.CouponONArithmeticAverage: com.opengamma.util.money.Currency getCurrency()>();

        $r11 = staticinvoke <com.opengamma.util.money.MultipleCurrencyAmount: com.opengamma.util.money.MultipleCurrencyAmount of(com.opengamma.util.money.Currency,double)>($r10, d4);

        return $r11;
    }

    public com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyMulticurveSensitivity presentValueCurveSensitivity(com.opengamma.analytics.financial.interestrate.payments.derivative.CouponONArithmeticAverage, com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface)
    {
        com.opengamma.analytics.financial.interestrate.payments.provider.CouponONArithmeticAverageDiscountingApproxMethod r0;
        com.opengamma.analytics.financial.interestrate.payments.derivative.CouponONArithmeticAverage r1;
        com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface r2;
        double[] r3, r4;
        int i0, $i1;
        double d0, d1, d2, d3, d4, d6, d7, d8, d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21, $d22, $d23, $d24, $d25, $d26, $d27;
        com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyMulticurveSensitivity r9;
        com.opengamma.analytics.financial.instrument.index.IndexON $r12, $r24;
        com.opengamma.util.money.Currency $r13, $r18, $r27;
        java.lang.Double $r14;
        java.util.HashMap $r15, $r21;
        java.util.ArrayList $r16, $r22;
        com.opengamma.util.tuple.DoublesPair $r17;
        java.lang.String $r19, $r25;
        com.opengamma.analytics.financial.provider.sensitivity.multicurve.SimplyCompoundedForwardSensitivity $r23;
        com.opengamma.analytics.financial.provider.sensitivity.multicurve.MulticurveSensitivity $r28;

        r0 := @this: com.opengamma.analytics.financial.interestrate.payments.provider.CouponONArithmeticAverageDiscountingApproxMethod;

        r1 := @parameter0: com.opengamma.analytics.financial.interestrate.payments.derivative.CouponONArithmeticAverage;

        r2 := @parameter1: com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "Coupon");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, "Multi-curve provider");

        r3 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.payments.derivative.CouponONArithmeticAverage: double[] getFixingPeriodStartTimes()>();

        r4 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.payments.derivative.CouponONArithmeticAverage: double[] getFixingPeriodEndTimes()>();

        $i1 = lengthof r4;

        i0 = $i1 - 1;

        d0 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.payments.derivative.CouponONArithmeticAverage: double getFixingPeriodRemainingAccrualFactor()>();

        $r12 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.payments.derivative.CouponONArithmeticAverage: com.opengamma.analytics.financial.instrument.index.IndexON getIndex()>();

        $d11 = r3[0];

        $d10 = r4[i0];

        d1 = interfaceinvoke r2.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface: double getSimplyCompoundForwardRate(com.opengamma.analytics.financial.instrument.index.IndexON,double,double,double)>($r12, $d11, $d10, d0);

        d2 = d1 * d0;

        $d12 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.payments.derivative.CouponONArithmeticAverage: double getRateAccrued()>();

        $d13 = 1.0 + d2;

        $d14 = staticinvoke <java.lang.Math: double log(double)>($d13);

        d3 = $d12 + $d14;

        $r13 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.payments.derivative.CouponONArithmeticAverage: com.opengamma.util.money.Currency getCurrency()>();

        $d15 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.payments.derivative.CouponONArithmeticAverage: double getPaymentTime()>();

        $r14 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d15);

        d4 = interfaceinvoke r2.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface: double getDiscountFactor(com.opengamma.util.money.Currency,java.lang.Double)>($r13, $r14);

        $d16 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.payments.derivative.CouponONArithmeticAverage: double getNotional()>();

        $d17 = d3 * $d16;

        d6 = $d17 * 1.0;

        $d18 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.payments.derivative.CouponONArithmeticAverage: double getNotional()>();

        $d19 = d4 * $d18;

        d7 = $d19 * 1.0;

        $d20 = 1.0 + d2;

        d8 = d7 / $d20;

        d9 = d0 * d8;

        $r15 = new java.util.HashMap;

        specialinvoke $r15.<java.util.HashMap: void <init>()>();

        $r16 = new java.util.ArrayList;

        specialinvoke $r16.<java.util.ArrayList: void <init>()>();

        $d21 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.payments.derivative.CouponONArithmeticAverage: double getPaymentTime()>();

        $d22 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.payments.derivative.CouponONArithmeticAverage: double getPaymentTime()>();

        $d23 = neg $d22;

        $d24 = $d23 * d4;

        $d25 = $d24 * d6;

        $r17 = staticinvoke <com.opengamma.util.tuple.DoublesPair: com.opengamma.util.tuple.DoublesPair of(double,double)>($d21, $d25);

        interfaceinvoke $r16.<java.util.List: boolean add(java.lang.Object)>($r17);

        $r18 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.payments.derivative.CouponONArithmeticAverage: com.opengamma.util.money.Currency getCurrency()>();

        $r19 = interfaceinvoke r2.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface: java.lang.String getName(com.opengamma.util.money.Currency)>($r18);

        interfaceinvoke $r15.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r19, $r16);

        $r21 = new java.util.HashMap;

        specialinvoke $r21.<java.util.HashMap: void <init>()>();

        $r22 = new java.util.ArrayList;

        specialinvoke $r22.<java.util.ArrayList: void <init>()>();

        $r23 = new com.opengamma.analytics.financial.provider.sensitivity.multicurve.SimplyCompoundedForwardSensitivity;

        $d27 = r3[0];

        $d26 = r4[i0];

        specialinvoke $r23.<com.opengamma.analytics.financial.provider.sensitivity.multicurve.SimplyCompoundedForwardSensitivity: void <init>(double,double,double,double)>($d27, $d26, d0, d9);

        interfaceinvoke $r22.<java.util.List: boolean add(java.lang.Object)>($r23);

        $r24 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.payments.derivative.CouponONArithmeticAverage: com.opengamma.analytics.financial.instrument.index.IndexON getIndex()>();

        $r25 = interfaceinvoke r2.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface: java.lang.String getName(com.opengamma.analytics.financial.instrument.index.IndexON)>($r24);

        interfaceinvoke $r21.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r25, $r22);

        $r27 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.payments.derivative.CouponONArithmeticAverage: com.opengamma.util.money.Currency getCurrency()>();

        $r28 = staticinvoke <com.opengamma.analytics.financial.provider.sensitivity.multicurve.MulticurveSensitivity: com.opengamma.analytics.financial.provider.sensitivity.multicurve.MulticurveSensitivity of(java.util.Map,java.util.Map)>($r15, $r21);

        r9 = staticinvoke <com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyMulticurveSensitivity: com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyMulticurveSensitivity of(com.opengamma.util.money.Currency,com.opengamma.analytics.financial.provider.sensitivity.multicurve.MulticurveSensitivity)>($r27, $r28);

        return r9;
    }

    static void <clinit>()
    {
        com.opengamma.analytics.financial.interestrate.payments.provider.CouponONArithmeticAverageDiscountingApproxMethod $r0;

        $r0 = new com.opengamma.analytics.financial.interestrate.payments.provider.CouponONArithmeticAverageDiscountingApproxMethod;

        specialinvoke $r0.<com.opengamma.analytics.financial.interestrate.payments.provider.CouponONArithmeticAverageDiscountingApproxMethod: void <init>()>();

        <com.opengamma.analytics.financial.interestrate.payments.provider.CouponONArithmeticAverageDiscountingApproxMethod: com.opengamma.analytics.financial.interestrate.payments.provider.CouponONArithmeticAverageDiscountingApproxMethod INSTANCE> = $r0;

        return;
    }
}
