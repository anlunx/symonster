public class com.opengamma.analytics.math.interpolation.data.Interpolator1DDoubleQuadraticDataBundle extends java.lang.Object implements com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle
{
    private final com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle _underlyingData;
    private com.opengamma.analytics.math.function.RealPolynomialFunction1D[] _quadratics;
    private com.opengamma.analytics.math.function.RealPolynomialFunction1D[] _quadraticsFirstDerivative;

    public void <init>(com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle)
    {
        com.opengamma.analytics.math.interpolation.data.Interpolator1DDoubleQuadraticDataBundle r0;
        com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle r1;

        r0 := @this: com.opengamma.analytics.math.interpolation.data.Interpolator1DDoubleQuadraticDataBundle;

        r1 := @parameter0: com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "underlying data");

        r0.<com.opengamma.analytics.math.interpolation.data.Interpolator1DDoubleQuadraticDataBundle: com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle _underlyingData> = r1;

        return;
    }

    private com.opengamma.analytics.math.function.RealPolynomialFunction1D[] getQuadratics()
    {
        com.opengamma.analytics.math.interpolation.data.Interpolator1DDoubleQuadraticDataBundle r0;
        double[] r1, r2, $r6, $r9;
        int i0, $i1, $i2, $i3, i4;
        double d0, $d1, $d2, $d3, $d4, $d5, $d6, d7, d8;
        com.opengamma.analytics.math.function.RealPolynomialFunction1D $r3, $r5, $r8;
        com.opengamma.analytics.math.function.RealPolynomialFunction1D[] $r4, $r7, r10;

        r0 := @this: com.opengamma.analytics.math.interpolation.data.Interpolator1DDoubleQuadraticDataBundle;

        r1 = virtualinvoke r0.<com.opengamma.analytics.math.interpolation.data.Interpolator1DDoubleQuadraticDataBundle: double[] getKeys()>();

        r2 = virtualinvoke r0.<com.opengamma.analytics.math.interpolation.data.Interpolator1DDoubleQuadraticDataBundle: double[] getValues()>();

        $i1 = lengthof r1;

        i0 = $i1 - 1;

        if i0 != 0 goto label1;

        d7 = r2[0];

        $r7 = newarray (com.opengamma.analytics.math.function.RealPolynomialFunction1D)[1];

        $r8 = new com.opengamma.analytics.math.function.RealPolynomialFunction1D;

        $r9 = newarray (double)[1];

        $r9[0] = d7;

        specialinvoke $r8.<com.opengamma.analytics.math.function.RealPolynomialFunction1D: void <init>(double[])>($r9);

        $r7[0] = $r8;

        return $r7;

     label1:
        if i0 != 1 goto label2;

        d8 = r2[1];

        $d2 = r2[1];

        $d1 = r2[0];

        $d6 = $d2 - $d1;

        $d4 = r1[1];

        $d3 = r1[0];

        $d5 = $d4 - $d3;

        d0 = $d6 / $d5;

        $r4 = newarray (com.opengamma.analytics.math.function.RealPolynomialFunction1D)[1];

        $r5 = new com.opengamma.analytics.math.function.RealPolynomialFunction1D;

        $r6 = newarray (double)[2];

        $r6[0] = d8;

        $r6[1] = d0;

        specialinvoke $r5.<com.opengamma.analytics.math.function.RealPolynomialFunction1D: void <init>(double[])>($r6);

        $r4[0] = $r5;

        return $r4;

     label2:
        $i2 = i0 - 1;

        r10 = newarray (com.opengamma.analytics.math.function.RealPolynomialFunction1D)[$i2];

        i4 = 1;

     label3:
        if i4 >= i0 goto label4;

        $i3 = i4 - 1;

        $r3 = specialinvoke r0.<com.opengamma.analytics.math.interpolation.data.Interpolator1DDoubleQuadraticDataBundle: com.opengamma.analytics.math.function.RealPolynomialFunction1D getQuadratic(double[],double[],int)>(r1, r2, i4);

        r10[$i3] = $r3;

        i4 = i4 + 1;

        goto label3;

     label4:
        return r10;
    }

    private com.opengamma.analytics.math.function.RealPolynomialFunction1D[] getQuadraticsFirstDerivative()
    {
        com.opengamma.analytics.math.interpolation.data.Interpolator1DDoubleQuadraticDataBundle r0;
        double[] r1, r2, $r6, $r9;
        int i0, $i1, $i2, $i3, i4;
        com.opengamma.analytics.math.function.RealPolynomialFunction1D $r3, $r5, $r8;
        double $d0, $d1, $d2, $d3, $d4, $d5, d6;
        com.opengamma.analytics.math.function.RealPolynomialFunction1D[] $r4, $r7, r10;

        r0 := @this: com.opengamma.analytics.math.interpolation.data.Interpolator1DDoubleQuadraticDataBundle;

        r1 = virtualinvoke r0.<com.opengamma.analytics.math.interpolation.data.Interpolator1DDoubleQuadraticDataBundle: double[] getKeys()>();

        r2 = virtualinvoke r0.<com.opengamma.analytics.math.interpolation.data.Interpolator1DDoubleQuadraticDataBundle: double[] getValues()>();

        $i1 = lengthof r1;

        i0 = $i1 - 1;

        if i0 != 0 goto label1;

        $r7 = newarray (com.opengamma.analytics.math.function.RealPolynomialFunction1D)[1];

        $r8 = new com.opengamma.analytics.math.function.RealPolynomialFunction1D;

        $r9 = newarray (double)[1];

        $r9[0] = 0.0;

        specialinvoke $r8.<com.opengamma.analytics.math.function.RealPolynomialFunction1D: void <init>(double[])>($r9);

        $r7[0] = $r8;

        return $r7;

     label1:
        if i0 != 1 goto label2;

        $d1 = r2[1];

        $d0 = r2[0];

        $d5 = $d1 - $d0;

        $d3 = r1[1];

        $d2 = r1[0];

        $d4 = $d3 - $d2;

        d6 = $d5 / $d4;

        $r4 = newarray (com.opengamma.analytics.math.function.RealPolynomialFunction1D)[1];

        $r5 = new com.opengamma.analytics.math.function.RealPolynomialFunction1D;

        $r6 = newarray (double)[1];

        $r6[0] = d6;

        specialinvoke $r5.<com.opengamma.analytics.math.function.RealPolynomialFunction1D: void <init>(double[])>($r6);

        $r4[0] = $r5;

        return $r4;

     label2:
        $i2 = i0 - 1;

        r10 = newarray (com.opengamma.analytics.math.function.RealPolynomialFunction1D)[$i2];

        i4 = 1;

     label3:
        if i4 >= i0 goto label4;

        $i3 = i4 - 1;

        $r3 = specialinvoke r0.<com.opengamma.analytics.math.interpolation.data.Interpolator1DDoubleQuadraticDataBundle: com.opengamma.analytics.math.function.RealPolynomialFunction1D getQuadraticFirstDerivative(double[],double[],int)>(r1, r2, i4);

        r10[$i3] = $r3;

        i4 = i4 + 1;

        goto label3;

     label4:
        return r10;
    }

    private com.opengamma.analytics.math.function.RealPolynomialFunction1D getQuadratic(double[], double[], int)
    {
        com.opengamma.analytics.math.interpolation.data.Interpolator1DDoubleQuadraticDataBundle r0;
        double[] r1, r2, $r4;
        int i0, $i1, $i2, $i3, $i4;
        double d0, d1, d2, d3, d4, d5, d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21, $d22, $d23, $d24;
        com.opengamma.analytics.math.function.RealPolynomialFunction1D $r3;

        r0 := @this: com.opengamma.analytics.math.interpolation.data.Interpolator1DDoubleQuadraticDataBundle;

        r1 := @parameter0: double[];

        r2 := @parameter1: double[];

        i0 := @parameter2: int;

        d0 = r2[i0];

        $d8 = r1[i0];

        $i1 = i0 - 1;

        $d7 = r1[$i1];

        d1 = $d8 - $d7;

        $i2 = i0 + 1;

        $d10 = r1[$i2];

        $d9 = r1[i0];

        d2 = $d10 - $d9;

        $d12 = r2[i0];

        $i3 = i0 - 1;

        $d11 = r2[$i3];

        d3 = $d12 - $d11;

        $i4 = i0 + 1;

        $d14 = r2[$i4];

        $d13 = r2[i0];

        d4 = $d14 - $d13;

        $d15 = d1 * d4;

        $d18 = $d15 / d2;

        $d16 = d2 * d3;

        $d17 = $d16 / d1;

        $d20 = $d18 + $d17;

        $d19 = d1 + d2;

        d5 = $d20 / $d19;

        $d22 = d4 / d2;

        $d21 = d3 / d1;

        $d24 = $d22 - $d21;

        $d23 = d1 + d2;

        d6 = $d24 / $d23;

        $r3 = new com.opengamma.analytics.math.function.RealPolynomialFunction1D;

        $r4 = newarray (double)[3];

        $r4[0] = d0;

        $r4[1] = d5;

        $r4[2] = d6;

        specialinvoke $r3.<com.opengamma.analytics.math.function.RealPolynomialFunction1D: void <init>(double[])>($r4);

        return $r3;
    }

    private com.opengamma.analytics.math.function.RealPolynomialFunction1D getQuadraticFirstDerivative(double[], double[], int)
    {
        com.opengamma.analytics.math.interpolation.data.Interpolator1DDoubleQuadraticDataBundle r0;
        double[] r1, r2, $r4;
        int i0, $i1, $i2, $i3, $i4;
        double d0, d1, d2, d3, d4, d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21, $d22, $d23, $d24;
        com.opengamma.analytics.math.function.RealPolynomialFunction1D $r3;

        r0 := @this: com.opengamma.analytics.math.interpolation.data.Interpolator1DDoubleQuadraticDataBundle;

        r1 := @parameter0: double[];

        r2 := @parameter1: double[];

        i0 := @parameter2: int;

        $d7 = r1[i0];

        $i1 = i0 - 1;

        $d6 = r1[$i1];

        d0 = $d7 - $d6;

        $i2 = i0 + 1;

        $d9 = r1[$i2];

        $d8 = r1[i0];

        d1 = $d9 - $d8;

        $d11 = r2[i0];

        $i3 = i0 - 1;

        $d10 = r2[$i3];

        d2 = $d11 - $d10;

        $i4 = i0 + 1;

        $d13 = r2[$i4];

        $d12 = r2[i0];

        d3 = $d13 - $d12;

        $d14 = d0 * d3;

        $d17 = $d14 / d1;

        $d15 = d1 * d2;

        $d16 = $d15 / d0;

        $d19 = $d17 + $d16;

        $d18 = d0 + d1;

        d4 = $d19 / $d18;

        $d21 = d3 / d1;

        $d20 = d2 / d0;

        $d23 = $d21 - $d20;

        $d22 = d0 + d1;

        d5 = $d23 / $d22;

        $r3 = new com.opengamma.analytics.math.function.RealPolynomialFunction1D;

        $r4 = newarray (double)[2];

        $r4[0] = d4;

        $d24 = 2.0 * d5;

        $r4[1] = $d24;

        specialinvoke $r3.<com.opengamma.analytics.math.function.RealPolynomialFunction1D: void <init>(double[])>($r4);

        return $r3;
    }

    public com.opengamma.analytics.math.function.RealPolynomialFunction1D getQuadratic(int)
    {
        com.opengamma.analytics.math.interpolation.data.Interpolator1DDoubleQuadraticDataBundle r0;
        int i0;
        com.opengamma.analytics.math.function.RealPolynomialFunction1D[] $r1, $r2, $r4;
        com.opengamma.analytics.math.function.RealPolynomialFunction1D $r3;

        r0 := @this: com.opengamma.analytics.math.interpolation.data.Interpolator1DDoubleQuadraticDataBundle;

        i0 := @parameter0: int;

        $r1 = r0.<com.opengamma.analytics.math.interpolation.data.Interpolator1DDoubleQuadraticDataBundle: com.opengamma.analytics.math.function.RealPolynomialFunction1D[] _quadratics>;

        if $r1 != null goto label1;

        $r4 = specialinvoke r0.<com.opengamma.analytics.math.interpolation.data.Interpolator1DDoubleQuadraticDataBundle: com.opengamma.analytics.math.function.RealPolynomialFunction1D[] getQuadratics()>();

        r0.<com.opengamma.analytics.math.interpolation.data.Interpolator1DDoubleQuadraticDataBundle: com.opengamma.analytics.math.function.RealPolynomialFunction1D[] _quadratics> = $r4;

     label1:
        $r2 = r0.<com.opengamma.analytics.math.interpolation.data.Interpolator1DDoubleQuadraticDataBundle: com.opengamma.analytics.math.function.RealPolynomialFunction1D[] _quadratics>;

        $r3 = $r2[i0];

        return $r3;
    }

    public com.opengamma.analytics.math.function.RealPolynomialFunction1D getQuadraticFirstDerivative(int)
    {
        com.opengamma.analytics.math.interpolation.data.Interpolator1DDoubleQuadraticDataBundle r0;
        int i0;
        com.opengamma.analytics.math.function.RealPolynomialFunction1D[] $r1, $r2, $r4;
        com.opengamma.analytics.math.function.RealPolynomialFunction1D $r3;

        r0 := @this: com.opengamma.analytics.math.interpolation.data.Interpolator1DDoubleQuadraticDataBundle;

        i0 := @parameter0: int;

        $r1 = r0.<com.opengamma.analytics.math.interpolation.data.Interpolator1DDoubleQuadraticDataBundle: com.opengamma.analytics.math.function.RealPolynomialFunction1D[] _quadraticsFirstDerivative>;

        if $r1 != null goto label1;

        $r4 = specialinvoke r0.<com.opengamma.analytics.math.interpolation.data.Interpolator1DDoubleQuadraticDataBundle: com.opengamma.analytics.math.function.RealPolynomialFunction1D[] getQuadraticsFirstDerivative()>();

        r0.<com.opengamma.analytics.math.interpolation.data.Interpolator1DDoubleQuadraticDataBundle: com.opengamma.analytics.math.function.RealPolynomialFunction1D[] _quadraticsFirstDerivative> = $r4;

     label1:
        $r2 = r0.<com.opengamma.analytics.math.interpolation.data.Interpolator1DDoubleQuadraticDataBundle: com.opengamma.analytics.math.function.RealPolynomialFunction1D[] _quadraticsFirstDerivative>;

        $r3 = $r2[i0];

        return $r3;
    }

    public boolean containsKey(java.lang.Double)
    {
        com.opengamma.analytics.math.interpolation.data.Interpolator1DDoubleQuadraticDataBundle r0;
        java.lang.Double r1;
        com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle $r2;
        boolean $z0;

        r0 := @this: com.opengamma.analytics.math.interpolation.data.Interpolator1DDoubleQuadraticDataBundle;

        r1 := @parameter0: java.lang.Double;

        $r2 = r0.<com.opengamma.analytics.math.interpolation.data.Interpolator1DDoubleQuadraticDataBundle: com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle _underlyingData>;

        $z0 = interfaceinvoke $r2.<com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle: boolean containsKey(java.lang.Double)>(r1);

        return $z0;
    }

    public java.lang.Double firstKey()
    {
        com.opengamma.analytics.math.interpolation.data.Interpolator1DDoubleQuadraticDataBundle r0;
        com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle $r1;
        java.lang.Double $r2;

        r0 := @this: com.opengamma.analytics.math.interpolation.data.Interpolator1DDoubleQuadraticDataBundle;

        $r1 = r0.<com.opengamma.analytics.math.interpolation.data.Interpolator1DDoubleQuadraticDataBundle: com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle _underlyingData>;

        $r2 = interfaceinvoke $r1.<com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle: java.lang.Double firstKey()>();

        return $r2;
    }

    public java.lang.Double firstValue()
    {
        com.opengamma.analytics.math.interpolation.data.Interpolator1DDoubleQuadraticDataBundle r0;
        com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle $r1;
        java.lang.Double $r2;

        r0 := @this: com.opengamma.analytics.math.interpolation.data.Interpolator1DDoubleQuadraticDataBundle;

        $r1 = r0.<com.opengamma.analytics.math.interpolation.data.Interpolator1DDoubleQuadraticDataBundle: com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle _underlyingData>;

        $r2 = interfaceinvoke $r1.<com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle: java.lang.Double firstValue()>();

        return $r2;
    }

    public java.lang.Double get(java.lang.Double)
    {
        com.opengamma.analytics.math.interpolation.data.Interpolator1DDoubleQuadraticDataBundle r0;
        java.lang.Double r1, $r3;
        com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle $r2;

        r0 := @this: com.opengamma.analytics.math.interpolation.data.Interpolator1DDoubleQuadraticDataBundle;

        r1 := @parameter0: java.lang.Double;

        $r2 = r0.<com.opengamma.analytics.math.interpolation.data.Interpolator1DDoubleQuadraticDataBundle: com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle _underlyingData>;

        $r3 = interfaceinvoke $r2.<com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle: java.lang.Double get(java.lang.Double)>(r1);

        return $r3;
    }

    public com.opengamma.analytics.math.interpolation.data.InterpolationBoundedValues getBoundedValues(java.lang.Double)
    {
        com.opengamma.analytics.math.interpolation.data.Interpolator1DDoubleQuadraticDataBundle r0;
        java.lang.Double r1;
        com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle $r2;
        com.opengamma.analytics.math.interpolation.data.InterpolationBoundedValues $r3;

        r0 := @this: com.opengamma.analytics.math.interpolation.data.Interpolator1DDoubleQuadraticDataBundle;

        r1 := @parameter0: java.lang.Double;

        $r2 = r0.<com.opengamma.analytics.math.interpolation.data.Interpolator1DDoubleQuadraticDataBundle: com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle _underlyingData>;

        $r3 = interfaceinvoke $r2.<com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle: com.opengamma.analytics.math.interpolation.data.InterpolationBoundedValues getBoundedValues(java.lang.Double)>(r1);

        return $r3;
    }

    public double[] getKeys()
    {
        com.opengamma.analytics.math.interpolation.data.Interpolator1DDoubleQuadraticDataBundle r0;
        com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle $r1;
        double[] $r2;

        r0 := @this: com.opengamma.analytics.math.interpolation.data.Interpolator1DDoubleQuadraticDataBundle;

        $r1 = r0.<com.opengamma.analytics.math.interpolation.data.Interpolator1DDoubleQuadraticDataBundle: com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle _underlyingData>;

        $r2 = interfaceinvoke $r1.<com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle: double[] getKeys()>();

        return $r2;
    }

    public int getLowerBoundIndex(java.lang.Double)
    {
        com.opengamma.analytics.math.interpolation.data.Interpolator1DDoubleQuadraticDataBundle r0;
        java.lang.Double r1;
        com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle $r2;
        int $i0;

        r0 := @this: com.opengamma.analytics.math.interpolation.data.Interpolator1DDoubleQuadraticDataBundle;

        r1 := @parameter0: java.lang.Double;

        $r2 = r0.<com.opengamma.analytics.math.interpolation.data.Interpolator1DDoubleQuadraticDataBundle: com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle _underlyingData>;

        $i0 = interfaceinvoke $r2.<com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle: int getLowerBoundIndex(java.lang.Double)>(r1);

        return $i0;
    }

    public java.lang.Double getLowerBoundKey(java.lang.Double)
    {
        com.opengamma.analytics.math.interpolation.data.Interpolator1DDoubleQuadraticDataBundle r0;
        java.lang.Double r1, $r3;
        com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle $r2;

        r0 := @this: com.opengamma.analytics.math.interpolation.data.Interpolator1DDoubleQuadraticDataBundle;

        r1 := @parameter0: java.lang.Double;

        $r2 = r0.<com.opengamma.analytics.math.interpolation.data.Interpolator1DDoubleQuadraticDataBundle: com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle _underlyingData>;

        $r3 = interfaceinvoke $r2.<com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle: java.lang.Double getLowerBoundKey(java.lang.Double)>(r1);

        return $r3;
    }

    public double[] getValues()
    {
        com.opengamma.analytics.math.interpolation.data.Interpolator1DDoubleQuadraticDataBundle r0;
        com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle $r1;
        double[] $r2;

        r0 := @this: com.opengamma.analytics.math.interpolation.data.Interpolator1DDoubleQuadraticDataBundle;

        $r1 = r0.<com.opengamma.analytics.math.interpolation.data.Interpolator1DDoubleQuadraticDataBundle: com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle _underlyingData>;

        $r2 = interfaceinvoke $r1.<com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle: double[] getValues()>();

        return $r2;
    }

    public java.lang.Double higherKey(java.lang.Double)
    {
        com.opengamma.analytics.math.interpolation.data.Interpolator1DDoubleQuadraticDataBundle r0;
        java.lang.Double r1, $r3;
        com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle $r2;

        r0 := @this: com.opengamma.analytics.math.interpolation.data.Interpolator1DDoubleQuadraticDataBundle;

        r1 := @parameter0: java.lang.Double;

        $r2 = r0.<com.opengamma.analytics.math.interpolation.data.Interpolator1DDoubleQuadraticDataBundle: com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle _underlyingData>;

        $r3 = interfaceinvoke $r2.<com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle: java.lang.Double higherKey(java.lang.Double)>(r1);

        return $r3;
    }

    public java.lang.Double higherValue(java.lang.Double)
    {
        com.opengamma.analytics.math.interpolation.data.Interpolator1DDoubleQuadraticDataBundle r0;
        java.lang.Double r1, $r3;
        com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle $r2;

        r0 := @this: com.opengamma.analytics.math.interpolation.data.Interpolator1DDoubleQuadraticDataBundle;

        r1 := @parameter0: java.lang.Double;

        $r2 = r0.<com.opengamma.analytics.math.interpolation.data.Interpolator1DDoubleQuadraticDataBundle: com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle _underlyingData>;

        $r3 = interfaceinvoke $r2.<com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle: java.lang.Double higherValue(java.lang.Double)>(r1);

        return $r3;
    }

    public java.lang.Double lastKey()
    {
        com.opengamma.analytics.math.interpolation.data.Interpolator1DDoubleQuadraticDataBundle r0;
        com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle $r1;
        java.lang.Double $r2;

        r0 := @this: com.opengamma.analytics.math.interpolation.data.Interpolator1DDoubleQuadraticDataBundle;

        $r1 = r0.<com.opengamma.analytics.math.interpolation.data.Interpolator1DDoubleQuadraticDataBundle: com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle _underlyingData>;

        $r2 = interfaceinvoke $r1.<com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle: java.lang.Double lastKey()>();

        return $r2;
    }

    public java.lang.Double lastValue()
    {
        com.opengamma.analytics.math.interpolation.data.Interpolator1DDoubleQuadraticDataBundle r0;
        com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle $r1;
        java.lang.Double $r2;

        r0 := @this: com.opengamma.analytics.math.interpolation.data.Interpolator1DDoubleQuadraticDataBundle;

        $r1 = r0.<com.opengamma.analytics.math.interpolation.data.Interpolator1DDoubleQuadraticDataBundle: com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle _underlyingData>;

        $r2 = interfaceinvoke $r1.<com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle: java.lang.Double lastValue()>();

        return $r2;
    }

    public int size()
    {
        com.opengamma.analytics.math.interpolation.data.Interpolator1DDoubleQuadraticDataBundle r0;
        com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle $r1;
        int $i0;

        r0 := @this: com.opengamma.analytics.math.interpolation.data.Interpolator1DDoubleQuadraticDataBundle;

        $r1 = r0.<com.opengamma.analytics.math.interpolation.data.Interpolator1DDoubleQuadraticDataBundle: com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle _underlyingData>;

        $i0 = interfaceinvoke $r1.<com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle: int size()>();

        return $i0;
    }

    public void setYValueAtIndex(int, double)
    {
        com.opengamma.analytics.math.interpolation.data.Interpolator1DDoubleQuadraticDataBundle r0;
        int i0, i1, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15;
        double d0;
        double[] r1, r2;
        com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle $r3;
        com.opengamma.analytics.math.function.RealPolynomialFunction1D[] $r4, $r5, $r7, $r9, $r11, $r13, $r15, $r17, $r19, $r21, $r23;
        com.opengamma.analytics.math.function.RealPolynomialFunction1D $r6, $r8, $r10, $r12, $r14, $r16, $r18, $r20, $r22;
        java.lang.IllegalArgumentException $r24;

        r0 := @this: com.opengamma.analytics.math.interpolation.data.Interpolator1DDoubleQuadraticDataBundle;

        i0 := @parameter0: int;

        d0 := @parameter1: double;

        staticinvoke <com.opengamma.util.ArgumentChecker: int notNegative(int,java.lang.String)>(i0, "index");

        $i3 = virtualinvoke r0.<com.opengamma.analytics.math.interpolation.data.Interpolator1DDoubleQuadraticDataBundle: int size()>();

        if i0 < $i3 goto label1;

        $r24 = new java.lang.IllegalArgumentException;

        specialinvoke $r24.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Index was greater than number of data points");

        throw $r24;

     label1:
        $r3 = r0.<com.opengamma.analytics.math.interpolation.data.Interpolator1DDoubleQuadraticDataBundle: com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle _underlyingData>;

        interfaceinvoke $r3.<com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle: void setYValueAtIndex(int,double)>(i0, d0);

        $r4 = r0.<com.opengamma.analytics.math.interpolation.data.Interpolator1DDoubleQuadraticDataBundle: com.opengamma.analytics.math.function.RealPolynomialFunction1D[] _quadratics>;

        if $r4 != null goto label2;

        $r23 = specialinvoke r0.<com.opengamma.analytics.math.interpolation.data.Interpolator1DDoubleQuadraticDataBundle: com.opengamma.analytics.math.function.RealPolynomialFunction1D[] getQuadratics()>();

        r0.<com.opengamma.analytics.math.interpolation.data.Interpolator1DDoubleQuadraticDataBundle: com.opengamma.analytics.math.function.RealPolynomialFunction1D[] _quadratics> = $r23;

     label2:
        r1 = virtualinvoke r0.<com.opengamma.analytics.math.interpolation.data.Interpolator1DDoubleQuadraticDataBundle: double[] getKeys()>();

        r2 = virtualinvoke r0.<com.opengamma.analytics.math.interpolation.data.Interpolator1DDoubleQuadraticDataBundle: double[] getValues()>();

        $i4 = virtualinvoke r0.<com.opengamma.analytics.math.interpolation.data.Interpolator1DDoubleQuadraticDataBundle: int size()>();

        i1 = $i4 - 1;

        if i0 != 0 goto label3;

        $r21 = r0.<com.opengamma.analytics.math.interpolation.data.Interpolator1DDoubleQuadraticDataBundle: com.opengamma.analytics.math.function.RealPolynomialFunction1D[] _quadratics>;

        $r22 = specialinvoke r0.<com.opengamma.analytics.math.interpolation.data.Interpolator1DDoubleQuadraticDataBundle: com.opengamma.analytics.math.function.RealPolynomialFunction1D getQuadratic(double[],double[],int)>(r1, r2, 1);

        $r21[0] = $r22;

        return;

     label3:
        if i0 != 1 goto label4;

        $r17 = r0.<com.opengamma.analytics.math.interpolation.data.Interpolator1DDoubleQuadraticDataBundle: com.opengamma.analytics.math.function.RealPolynomialFunction1D[] _quadratics>;

        $r18 = specialinvoke r0.<com.opengamma.analytics.math.interpolation.data.Interpolator1DDoubleQuadraticDataBundle: com.opengamma.analytics.math.function.RealPolynomialFunction1D getQuadratic(double[],double[],int)>(r1, r2, 1);

        $r17[0] = $r18;

        $r19 = r0.<com.opengamma.analytics.math.interpolation.data.Interpolator1DDoubleQuadraticDataBundle: com.opengamma.analytics.math.function.RealPolynomialFunction1D[] _quadratics>;

        $r20 = specialinvoke r0.<com.opengamma.analytics.math.interpolation.data.Interpolator1DDoubleQuadraticDataBundle: com.opengamma.analytics.math.function.RealPolynomialFunction1D getQuadratic(double[],double[],int)>(r1, r2, 2);

        $r19[1] = $r20;

        return;

     label4:
        if i0 != i1 goto label5;

        $r15 = r0.<com.opengamma.analytics.math.interpolation.data.Interpolator1DDoubleQuadraticDataBundle: com.opengamma.analytics.math.function.RealPolynomialFunction1D[] _quadratics>;

        $i15 = i1 - 2;

        $i14 = i1 - 1;

        $r16 = specialinvoke r0.<com.opengamma.analytics.math.interpolation.data.Interpolator1DDoubleQuadraticDataBundle: com.opengamma.analytics.math.function.RealPolynomialFunction1D getQuadratic(double[],double[],int)>(r1, r2, $i14);

        $r15[$i15] = $r16;

        goto label7;

     label5:
        $i5 = i1 - 1;

        if i0 != $i5 goto label6;

        $r11 = r0.<com.opengamma.analytics.math.interpolation.data.Interpolator1DDoubleQuadraticDataBundle: com.opengamma.analytics.math.function.RealPolynomialFunction1D[] _quadratics>;

        $i11 = i1 - 3;

        $i10 = i1 - 2;

        $r12 = specialinvoke r0.<com.opengamma.analytics.math.interpolation.data.Interpolator1DDoubleQuadraticDataBundle: com.opengamma.analytics.math.function.RealPolynomialFunction1D getQuadratic(double[],double[],int)>(r1, r2, $i10);

        $r11[$i11] = $r12;

        $r13 = r0.<com.opengamma.analytics.math.interpolation.data.Interpolator1DDoubleQuadraticDataBundle: com.opengamma.analytics.math.function.RealPolynomialFunction1D[] _quadratics>;

        $i13 = i1 - 2;

        $i12 = i1 - 1;

        $r14 = specialinvoke r0.<com.opengamma.analytics.math.interpolation.data.Interpolator1DDoubleQuadraticDataBundle: com.opengamma.analytics.math.function.RealPolynomialFunction1D getQuadratic(double[],double[],int)>(r1, r2, $i12);

        $r13[$i13] = $r14;

        return;

     label6:
        $r5 = r0.<com.opengamma.analytics.math.interpolation.data.Interpolator1DDoubleQuadraticDataBundle: com.opengamma.analytics.math.function.RealPolynomialFunction1D[] _quadratics>;

        $i7 = i0 - 2;

        $i6 = i0 - 1;

        $r6 = specialinvoke r0.<com.opengamma.analytics.math.interpolation.data.Interpolator1DDoubleQuadraticDataBundle: com.opengamma.analytics.math.function.RealPolynomialFunction1D getQuadratic(double[],double[],int)>(r1, r2, $i6);

        $r5[$i7] = $r6;

        $r7 = r0.<com.opengamma.analytics.math.interpolation.data.Interpolator1DDoubleQuadraticDataBundle: com.opengamma.analytics.math.function.RealPolynomialFunction1D[] _quadratics>;

        $i8 = i0 - 1;

        $r8 = specialinvoke r0.<com.opengamma.analytics.math.interpolation.data.Interpolator1DDoubleQuadraticDataBundle: com.opengamma.analytics.math.function.RealPolynomialFunction1D getQuadratic(double[],double[],int)>(r1, r2, i0);

        $r7[$i8] = $r8;

        $r9 = r0.<com.opengamma.analytics.math.interpolation.data.Interpolator1DDoubleQuadraticDataBundle: com.opengamma.analytics.math.function.RealPolynomialFunction1D[] _quadratics>;

        $i9 = i0 + 1;

        $r10 = specialinvoke r0.<com.opengamma.analytics.math.interpolation.data.Interpolator1DDoubleQuadraticDataBundle: com.opengamma.analytics.math.function.RealPolynomialFunction1D getQuadratic(double[],double[],int)>(r1, r2, $i9);

        $r9[i0] = $r10;

        return;

     label7:
        return;
    }

    public int hashCode()
    {
        com.opengamma.analytics.math.interpolation.data.Interpolator1DDoubleQuadraticDataBundle r0;
        com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle $r1, $r2;
        int $i1, $i3, i4;

        r0 := @this: com.opengamma.analytics.math.interpolation.data.Interpolator1DDoubleQuadraticDataBundle;

        $i1 = 31 * 1;

        $r1 = r0.<com.opengamma.analytics.math.interpolation.data.Interpolator1DDoubleQuadraticDataBundle: com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle _underlyingData>;

        if $r1 != null goto label1;

        $i3 = 0;

        goto label2;

     label1:
        $r2 = r0.<com.opengamma.analytics.math.interpolation.data.Interpolator1DDoubleQuadraticDataBundle: com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle _underlyingData>;

        $i3 = virtualinvoke $r2.<java.lang.Object: int hashCode()>();

     label2:
        i4 = $i1 + $i3;

        return i4;
    }

    public boolean equals(java.lang.Object)
    {
        com.opengamma.analytics.math.interpolation.data.Interpolator1DDoubleQuadraticDataBundle r0, r2;
        java.lang.Object r1;
        java.lang.Class $r3, $r4;
        com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle $r5, $r6;
        boolean $z0;

        r0 := @this: com.opengamma.analytics.math.interpolation.data.Interpolator1DDoubleQuadraticDataBundle;

        r1 := @parameter0: java.lang.Object;

        if r0 != r1 goto label1;

        return 1;

     label1:
        if r1 != null goto label2;

        return 0;

     label2:
        $r3 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r4 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        if $r3 == $r4 goto label3;

        return 0;

     label3:
        r2 = (com.opengamma.analytics.math.interpolation.data.Interpolator1DDoubleQuadraticDataBundle) r1;

        $r6 = r0.<com.opengamma.analytics.math.interpolation.data.Interpolator1DDoubleQuadraticDataBundle: com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle _underlyingData>;

        $r5 = r2.<com.opengamma.analytics.math.interpolation.data.Interpolator1DDoubleQuadraticDataBundle: com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle _underlyingData>;

        $z0 = staticinvoke <org.apache.commons.lang.ObjectUtils: boolean equals(java.lang.Object,java.lang.Object)>($r6, $r5);

        return $z0;
    }
}
