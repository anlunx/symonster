public class org.apache.commons.math3.geometry.spherical.twod.SubCircle extends org.apache.commons.math3.geometry.partitioning.AbstractSubHyperplane
{

    public void <init>(org.apache.commons.math3.geometry.partitioning.Hyperplane, org.apache.commons.math3.geometry.partitioning.Region)
    {
        org.apache.commons.math3.geometry.spherical.twod.SubCircle r0;
        org.apache.commons.math3.geometry.partitioning.Hyperplane r1;
        org.apache.commons.math3.geometry.partitioning.Region r2;

        r0 := @this: org.apache.commons.math3.geometry.spherical.twod.SubCircle;

        r1 := @parameter0: org.apache.commons.math3.geometry.partitioning.Hyperplane;

        r2 := @parameter1: org.apache.commons.math3.geometry.partitioning.Region;

        specialinvoke r0.<org.apache.commons.math3.geometry.partitioning.AbstractSubHyperplane: void <init>(org.apache.commons.math3.geometry.partitioning.Hyperplane,org.apache.commons.math3.geometry.partitioning.Region)>(r1, r2);

        return;
    }

    protected org.apache.commons.math3.geometry.partitioning.AbstractSubHyperplane buildNew(org.apache.commons.math3.geometry.partitioning.Hyperplane, org.apache.commons.math3.geometry.partitioning.Region)
    {
        org.apache.commons.math3.geometry.spherical.twod.SubCircle r0, $r3;
        org.apache.commons.math3.geometry.partitioning.Hyperplane r1;
        org.apache.commons.math3.geometry.partitioning.Region r2;

        r0 := @this: org.apache.commons.math3.geometry.spherical.twod.SubCircle;

        r1 := @parameter0: org.apache.commons.math3.geometry.partitioning.Hyperplane;

        r2 := @parameter1: org.apache.commons.math3.geometry.partitioning.Region;

        $r3 = new org.apache.commons.math3.geometry.spherical.twod.SubCircle;

        specialinvoke $r3.<org.apache.commons.math3.geometry.spherical.twod.SubCircle: void <init>(org.apache.commons.math3.geometry.partitioning.Hyperplane,org.apache.commons.math3.geometry.partitioning.Region)>(r1, r2);

        return $r3;
    }

    public org.apache.commons.math3.geometry.partitioning.Side side(org.apache.commons.math3.geometry.partitioning.Hyperplane)
    {
        org.apache.commons.math3.geometry.spherical.twod.SubCircle r0;
        org.apache.commons.math3.geometry.partitioning.Hyperplane r1, $r4;
        org.apache.commons.math3.geometry.spherical.twod.Circle r2, r3;
        double d0, $d1, $d2, $d3;
        org.apache.commons.math3.geometry.euclidean.threed.Vector3D $r5, $r6;
        byte $b0, $b1;
        org.apache.commons.math3.geometry.partitioning.Side $r7, $r11;
        org.apache.commons.math3.geometry.partitioning.Region $r8;
        org.apache.commons.math3.geometry.spherical.oned.ArcsSet $r9;
        org.apache.commons.math3.geometry.spherical.oned.Arc $r10;

        r0 := @this: org.apache.commons.math3.geometry.spherical.twod.SubCircle;

        r1 := @parameter0: org.apache.commons.math3.geometry.partitioning.Hyperplane;

        $r4 = virtualinvoke r0.<org.apache.commons.math3.geometry.spherical.twod.SubCircle: org.apache.commons.math3.geometry.partitioning.Hyperplane getHyperplane()>();

        r2 = (org.apache.commons.math3.geometry.spherical.twod.Circle) $r4;

        r3 = (org.apache.commons.math3.geometry.spherical.twod.Circle) r1;

        $r5 = virtualinvoke r2.<org.apache.commons.math3.geometry.spherical.twod.Circle: org.apache.commons.math3.geometry.euclidean.threed.Vector3D getPole()>();

        $r6 = virtualinvoke r3.<org.apache.commons.math3.geometry.spherical.twod.Circle: org.apache.commons.math3.geometry.euclidean.threed.Vector3D getPole()>();

        d0 = staticinvoke <org.apache.commons.math3.geometry.euclidean.threed.Vector3D: double angle(org.apache.commons.math3.geometry.euclidean.threed.Vector3D,org.apache.commons.math3.geometry.euclidean.threed.Vector3D)>($r5, $r6);

        $d1 = virtualinvoke r2.<org.apache.commons.math3.geometry.spherical.twod.Circle: double getTolerance()>();

        $b0 = d0 cmpg $d1;

        if $b0 < 0 goto label1;

        $d2 = virtualinvoke r2.<org.apache.commons.math3.geometry.spherical.twod.Circle: double getTolerance()>();

        $d3 = 3.141592653589793 - $d2;

        $b1 = d0 cmpl $d3;

        if $b1 <= 0 goto label2;

     label1:
        $r7 = <org.apache.commons.math3.geometry.partitioning.Side: org.apache.commons.math3.geometry.partitioning.Side HYPER>;

        return $r7;

     label2:
        $r8 = virtualinvoke r0.<org.apache.commons.math3.geometry.spherical.twod.SubCircle: org.apache.commons.math3.geometry.partitioning.Region getRemainingRegion()>();

        $r9 = (org.apache.commons.math3.geometry.spherical.oned.ArcsSet) $r8;

        $r10 = virtualinvoke r2.<org.apache.commons.math3.geometry.spherical.twod.Circle: org.apache.commons.math3.geometry.spherical.oned.Arc getInsideArc(org.apache.commons.math3.geometry.spherical.twod.Circle)>(r3);

        $r11 = virtualinvoke $r9.<org.apache.commons.math3.geometry.spherical.oned.ArcsSet: org.apache.commons.math3.geometry.partitioning.Side side(org.apache.commons.math3.geometry.spherical.oned.Arc)>($r10);

        return $r11;
    }

    public org.apache.commons.math3.geometry.partitioning.SubHyperplane$SplitSubHyperplane split(org.apache.commons.math3.geometry.partitioning.Hyperplane)
    {
        org.apache.commons.math3.geometry.spherical.twod.SubCircle r0, $r18, $r19;
        org.apache.commons.math3.geometry.partitioning.Hyperplane r1, $r8;
        org.apache.commons.math3.geometry.spherical.twod.Circle r2, r3, $r13, $r14;
        double d0, $d1, $d2, $d3;
        org.apache.commons.math3.geometry.spherical.oned.Arc r4;
        org.apache.commons.math3.geometry.spherical.oned.ArcsSet$Split r5;
        org.apache.commons.math3.geometry.spherical.oned.ArcsSet r6, r7, $r12;
        org.apache.commons.math3.geometry.euclidean.threed.Vector3D $r9, $r10;
        byte $b0, $b1;
        org.apache.commons.math3.geometry.partitioning.Region $r11;
        org.apache.commons.math3.geometry.partitioning.SubHyperplane$SplitSubHyperplane $r15, $r16, $r17;

        r0 := @this: org.apache.commons.math3.geometry.spherical.twod.SubCircle;

        r1 := @parameter0: org.apache.commons.math3.geometry.partitioning.Hyperplane;

        $r8 = virtualinvoke r0.<org.apache.commons.math3.geometry.spherical.twod.SubCircle: org.apache.commons.math3.geometry.partitioning.Hyperplane getHyperplane()>();

        r2 = (org.apache.commons.math3.geometry.spherical.twod.Circle) $r8;

        r3 = (org.apache.commons.math3.geometry.spherical.twod.Circle) r1;

        $r9 = virtualinvoke r2.<org.apache.commons.math3.geometry.spherical.twod.Circle: org.apache.commons.math3.geometry.euclidean.threed.Vector3D getPole()>();

        $r10 = virtualinvoke r3.<org.apache.commons.math3.geometry.spherical.twod.Circle: org.apache.commons.math3.geometry.euclidean.threed.Vector3D getPole()>();

        d0 = staticinvoke <org.apache.commons.math3.geometry.euclidean.threed.Vector3D: double angle(org.apache.commons.math3.geometry.euclidean.threed.Vector3D,org.apache.commons.math3.geometry.euclidean.threed.Vector3D)>($r9, $r10);

        $d1 = virtualinvoke r2.<org.apache.commons.math3.geometry.spherical.twod.Circle: double getTolerance()>();

        $b0 = d0 cmpg $d1;

        if $b0 >= 0 goto label1;

        $r16 = new org.apache.commons.math3.geometry.partitioning.SubHyperplane$SplitSubHyperplane;

        specialinvoke $r16.<org.apache.commons.math3.geometry.partitioning.SubHyperplane$SplitSubHyperplane: void <init>(org.apache.commons.math3.geometry.partitioning.SubHyperplane,org.apache.commons.math3.geometry.partitioning.SubHyperplane)>(null, r0);

        return $r16;

     label1:
        $d2 = virtualinvoke r2.<org.apache.commons.math3.geometry.spherical.twod.Circle: double getTolerance()>();

        $d3 = 3.141592653589793 - $d2;

        $b1 = d0 cmpl $d3;

        if $b1 <= 0 goto label2;

        $r15 = new org.apache.commons.math3.geometry.partitioning.SubHyperplane$SplitSubHyperplane;

        specialinvoke $r15.<org.apache.commons.math3.geometry.partitioning.SubHyperplane$SplitSubHyperplane: void <init>(org.apache.commons.math3.geometry.partitioning.SubHyperplane,org.apache.commons.math3.geometry.partitioning.SubHyperplane)>(r0, null);

        return $r15;

     label2:
        r4 = virtualinvoke r2.<org.apache.commons.math3.geometry.spherical.twod.Circle: org.apache.commons.math3.geometry.spherical.oned.Arc getInsideArc(org.apache.commons.math3.geometry.spherical.twod.Circle)>(r3);

        $r11 = virtualinvoke r0.<org.apache.commons.math3.geometry.spherical.twod.SubCircle: org.apache.commons.math3.geometry.partitioning.Region getRemainingRegion()>();

        $r12 = (org.apache.commons.math3.geometry.spherical.oned.ArcsSet) $r11;

        r5 = virtualinvoke $r12.<org.apache.commons.math3.geometry.spherical.oned.ArcsSet: org.apache.commons.math3.geometry.spherical.oned.ArcsSet$Split split(org.apache.commons.math3.geometry.spherical.oned.Arc)>(r4);

        r6 = virtualinvoke r5.<org.apache.commons.math3.geometry.spherical.oned.ArcsSet$Split: org.apache.commons.math3.geometry.spherical.oned.ArcsSet getPlus()>();

        r7 = virtualinvoke r5.<org.apache.commons.math3.geometry.spherical.oned.ArcsSet$Split: org.apache.commons.math3.geometry.spherical.oned.ArcsSet getMinus()>();

        $r17 = new org.apache.commons.math3.geometry.partitioning.SubHyperplane$SplitSubHyperplane;

        if r6 != null goto label3;

        $r18 = null;

        goto label4;

     label3:
        $r18 = new org.apache.commons.math3.geometry.spherical.twod.SubCircle;

        $r13 = virtualinvoke r2.<org.apache.commons.math3.geometry.spherical.twod.Circle: org.apache.commons.math3.geometry.spherical.twod.Circle copySelf()>();

        specialinvoke $r18.<org.apache.commons.math3.geometry.spherical.twod.SubCircle: void <init>(org.apache.commons.math3.geometry.partitioning.Hyperplane,org.apache.commons.math3.geometry.partitioning.Region)>($r13, r6);

     label4:
        if r7 != null goto label5;

        $r19 = null;

        goto label6;

     label5:
        $r19 = new org.apache.commons.math3.geometry.spherical.twod.SubCircle;

        $r14 = virtualinvoke r2.<org.apache.commons.math3.geometry.spherical.twod.Circle: org.apache.commons.math3.geometry.spherical.twod.Circle copySelf()>();

        specialinvoke $r19.<org.apache.commons.math3.geometry.spherical.twod.SubCircle: void <init>(org.apache.commons.math3.geometry.partitioning.Hyperplane,org.apache.commons.math3.geometry.partitioning.Region)>($r14, r7);

     label6:
        specialinvoke $r17.<org.apache.commons.math3.geometry.partitioning.SubHyperplane$SplitSubHyperplane: void <init>(org.apache.commons.math3.geometry.partitioning.SubHyperplane,org.apache.commons.math3.geometry.partitioning.SubHyperplane)>($r18, $r19);

        return $r17;
    }
}
