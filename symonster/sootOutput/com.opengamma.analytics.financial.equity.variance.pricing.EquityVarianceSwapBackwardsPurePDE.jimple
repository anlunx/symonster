public class com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapBackwardsPurePDE extends java.lang.Object
{
    private static final double LAMBDA_T;
    private static final double LAMBDA_X;
    private static final double SIGMA;
    private static final double DEFAULT_THETA;
    private static final com.opengamma.analytics.financial.model.finitedifference.applications.PDE1DCoefficientsProvider PDE_PROVIDER;
    private final int _nTimeSteps;
    private final int _nSpaceSteps;
    private final com.opengamma.analytics.financial.model.finitedifference.ConvectionDiffusionPDESolver _solver;

    public void <init>()
    {
        com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapBackwardsPurePDE r0;
        com.opengamma.analytics.financial.model.finitedifference.ThetaMethodFiniteDifference $r1;

        r0 := @this: com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapBackwardsPurePDE;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapBackwardsPurePDE: int _nTimeSteps> = 100;

        r0.<com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapBackwardsPurePDE: int _nSpaceSteps> = 100;

        $r1 = new com.opengamma.analytics.financial.model.finitedifference.ThetaMethodFiniteDifference;

        specialinvoke $r1.<com.opengamma.analytics.financial.model.finitedifference.ThetaMethodFiniteDifference: void <init>(double,boolean)>(0.5, 0);

        r0.<com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapBackwardsPurePDE: com.opengamma.analytics.financial.model.finitedifference.ConvectionDiffusionPDESolver _solver> = $r1;

        return;
    }

    public double[] expectedVariance(double, com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve, com.opengamma.analytics.financial.equity.variance.pricing.AffineDividends, double, com.opengamma.analytics.financial.model.volatility.local.PureLocalVolatilitySurface)
    {
        com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapBackwardsPurePDE r0;
        double d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, d10, d11, d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21, $d22, $d23, $d24, $d25, d26, d27, $d28, $d29, $d30, $d31;
        com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve r1;
        com.opengamma.analytics.financial.equity.variance.pricing.AffineDividends r2;
        com.opengamma.analytics.financial.model.volatility.local.PureLocalVolatilitySurface r3;
        com.opengamma.analytics.financial.model.finitedifference.ConvectionDiffusionPDE1DStandardCoefficients r6;
        com.opengamma.analytics.math.function.Function1D r7, $r22;
        com.opengamma.analytics.financial.model.finitedifference.PDEResults1D r14;
        int i0, i1, $i2, $i3, $i4, $i5, i7;
        com.opengamma.analytics.financial.equity.variance.pricing.EquityDividendsCurvesBundle $r15;
        java.lang.Double $r16;
        com.opengamma.analytics.financial.model.volatility.local.LocalVolatilitySurfaceMoneyness $r17;
        com.opengamma.analytics.math.surface.Surface $r18;
        com.opengamma.analytics.financial.model.interestrate.curve.ForwardCurve $r19;
        com.opengamma.analytics.financial.model.finitedifference.applications.PDE1DCoefficientsProvider $r20;
        com.opengamma.analytics.financial.model.finitedifference.NeumannBoundaryCondition $r21, $r23;
        com.opengamma.analytics.financial.model.finitedifference.ExponentialMeshing $r24, $r25;
        com.opengamma.analytics.financial.model.finitedifference.PDEGrid1D $r26, $r29;
        com.opengamma.analytics.financial.model.finitedifference.PDE1DDataBundle $r27;
        com.opengamma.analytics.financial.model.finitedifference.ConvectionDiffusionPDESolver $r28;
        double[] $r30, $r31;
        byte $b6;

        r0 := @this: com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapBackwardsPurePDE;

        d0 := @parameter0: double;

        r1 := @parameter1: com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve;

        r2 := @parameter2: com.opengamma.analytics.financial.equity.variance.pricing.AffineDividends;

        d1 := @parameter3: double;

        r3 := @parameter4: com.opengamma.analytics.financial.model.volatility.local.PureLocalVolatilitySurface;

        $r15 = new com.opengamma.analytics.financial.equity.variance.pricing.EquityDividendsCurvesBundle;

        specialinvoke $r15.<com.opengamma.analytics.financial.equity.variance.pricing.EquityDividendsCurvesBundle: void <init>(double,com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve,com.opengamma.analytics.financial.equity.variance.pricing.AffineDividends)>(d0, r1, r2);

        $d13 = staticinvoke <java.lang.Math: double log(double)>(d0);

        $r16 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d1);

        $d14 = virtualinvoke r1.<com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve: double getInterestRate(java.lang.Object)>($r16);

        $d15 = $d14 * d1;

        d2 = $d13 + $d15;

        $r17 = new com.opengamma.analytics.financial.model.volatility.local.LocalVolatilitySurfaceMoneyness;

        $r18 = virtualinvoke r3.<com.opengamma.analytics.financial.model.volatility.local.PureLocalVolatilitySurface: com.opengamma.analytics.math.surface.Surface getSurface()>();

        $r19 = new com.opengamma.analytics.financial.model.interestrate.curve.ForwardCurve;

        specialinvoke $r19.<com.opengamma.analytics.financial.model.interestrate.curve.ForwardCurve: void <init>(double)>(1.0);

        specialinvoke $r17.<com.opengamma.analytics.financial.model.volatility.local.LocalVolatilitySurfaceMoneyness: void <init>(com.opengamma.analytics.math.surface.Surface,com.opengamma.analytics.financial.model.interestrate.curve.ForwardCurve)>($r18, $r19);

        $r20 = <com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapBackwardsPurePDE: com.opengamma.analytics.financial.model.finitedifference.applications.PDE1DCoefficientsProvider PDE_PROVIDER>;

        r6 = virtualinvoke $r20.<com.opengamma.analytics.financial.model.finitedifference.applications.PDE1DCoefficientsProvider: com.opengamma.analytics.financial.model.finitedifference.ConvectionDiffusionPDE1DStandardCoefficients getLogBackwardsLocalVol(double,com.opengamma.analytics.financial.model.volatility.local.LocalVolatilitySurfaceMoneyness)>(d1, $r17);

        r7 = specialinvoke r0.<com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapBackwardsPurePDE: com.opengamma.analytics.math.function.Function1D getLogPayoff(com.opengamma.analytics.financial.equity.variance.pricing.EquityDividendsCurvesBundle,double)>($r15, d1);

        d3 = virtualinvoke r3.<com.opengamma.analytics.financial.model.volatility.local.PureLocalVolatilitySurface: double getVolatility(double,double)>(d1, 1.0);

        $d16 = staticinvoke <java.lang.Math: double sqrt(double)>(d1);

        $d17 = neg $d16;

        $d18 = $d17 * d3;

        d4 = $d18 * 4.0;

        d5 = neg d4;

        $r21 = new com.opengamma.analytics.financial.model.finitedifference.NeumannBoundaryCondition;

        $r22 = specialinvoke r0.<com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapBackwardsPurePDE: com.opengamma.analytics.math.function.Function1D getLowerBoundaryCondition(com.opengamma.analytics.financial.equity.variance.pricing.EquityDividendsCurvesBundle,double)>($r15, d1);

        specialinvoke $r21.<com.opengamma.analytics.financial.model.finitedifference.NeumannBoundaryCondition: void <init>(com.opengamma.analytics.math.function.Function1D,double,boolean)>($r22, d4, 1);

        $r23 = new com.opengamma.analytics.financial.model.finitedifference.NeumannBoundaryCondition;

        specialinvoke $r23.<com.opengamma.analytics.financial.model.finitedifference.NeumannBoundaryCondition: void <init>(double,double,boolean)>(1.0, d5, 0);

        $r24 = new com.opengamma.analytics.financial.model.finitedifference.ExponentialMeshing;

        $i2 = r0.<com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapBackwardsPurePDE: int _nTimeSteps>;

        specialinvoke $r24.<com.opengamma.analytics.financial.model.finitedifference.ExponentialMeshing: void <init>(double,double,int,double)>(0.0, d1, $i2, -4.0);

        $r25 = new com.opengamma.analytics.financial.model.finitedifference.ExponentialMeshing;

        $i3 = r0.<com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapBackwardsPurePDE: int _nSpaceSteps>;

        specialinvoke $r25.<com.opengamma.analytics.financial.model.finitedifference.ExponentialMeshing: void <init>(double,double,int,double)>(d4, d5, $i3, 0.1);

        $r26 = new com.opengamma.analytics.financial.model.finitedifference.PDEGrid1D;

        specialinvoke $r26.<com.opengamma.analytics.financial.model.finitedifference.PDEGrid1D: void <init>(com.opengamma.analytics.financial.model.finitedifference.MeshingFunction,com.opengamma.analytics.financial.model.finitedifference.MeshingFunction)>($r24, $r25);

        $r27 = new com.opengamma.analytics.financial.model.finitedifference.PDE1DDataBundle;

        specialinvoke $r27.<com.opengamma.analytics.financial.model.finitedifference.PDE1DDataBundle: void <init>(com.opengamma.analytics.financial.model.finitedifference.PDE1DCoefficients,com.opengamma.analytics.math.function.Function1D,com.opengamma.analytics.financial.model.finitedifference.BoundaryCondition,com.opengamma.analytics.financial.model.finitedifference.BoundaryCondition,com.opengamma.analytics.financial.model.finitedifference.PDEGrid1D)>(r6, r7, $r21, $r23, $r26);

        $r28 = r0.<com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapBackwardsPurePDE: com.opengamma.analytics.financial.model.finitedifference.ConvectionDiffusionPDESolver _solver>;

        r14 = interfaceinvoke $r28.<com.opengamma.analytics.financial.model.finitedifference.ConvectionDiffusionPDESolver: com.opengamma.analytics.financial.model.finitedifference.PDEResults1D solve(com.opengamma.analytics.financial.model.finitedifference.PDE1DDataBundle)>($r27);

        $r29 = interfaceinvoke r14.<com.opengamma.analytics.financial.model.finitedifference.PDEResults1D: com.opengamma.analytics.financial.model.finitedifference.PDEGrid1D getGrid()>();

        $r30 = virtualinvoke $r29.<com.opengamma.analytics.financial.model.finitedifference.PDEGrid1D: double[] getSpaceNodes()>();

        i0 = staticinvoke <com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SurfaceArrayUtils: int getLowerBoundIndex(double[],double)>($r30, 0.0);

        d6 = interfaceinvoke r14.<com.opengamma.analytics.financial.model.finitedifference.PDEResults1D: double getSpaceValue(int)>(i0);

        $i4 = i0 + 1;

        d7 = interfaceinvoke r14.<com.opengamma.analytics.financial.model.finitedifference.PDEResults1D: double getSpaceValue(int)>($i4);

        d8 = interfaceinvoke r14.<com.opengamma.analytics.financial.model.finitedifference.PDEResults1D: double getFunctionValue(int)>(i0);

        $i5 = i0 + 1;

        d9 = interfaceinvoke r14.<com.opengamma.analytics.financial.model.finitedifference.PDEResults1D: double getFunctionValue(int)>($i5);

        d10 = d7 - d6;

        $d20 = d7 * d8;

        $d19 = d6 * d9;

        $d21 = $d20 - $d19;

        d11 = $d21 / d10;

        $d22 = d11 - d2;

        d12 = -2.0 * $d22;

        i1 = virtualinvoke r2.<com.opengamma.analytics.financial.equity.variance.pricing.AffineDividends: int getNumberOfDividends()>();

        d26 = 0.0;

        d27 = 0.0;

        i7 = 0;

     label1:
        if i1 <= 0 goto label2;

        if i7 >= i1 goto label2;

        $d23 = virtualinvoke r2.<com.opengamma.analytics.financial.equity.variance.pricing.AffineDividends: double getTau(int)>(i7);

        $b6 = $d23 cmpg d1;

        if $b6 > 0 goto label2;

        $d24 = specialinvoke r0.<com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapBackwardsPurePDE: double getCorrection(com.opengamma.analytics.financial.equity.variance.pricing.AffineDividends,com.opengamma.analytics.financial.equity.variance.pricing.EquityDividendsCurvesBundle,int,boolean,com.opengamma.analytics.financial.model.volatility.local.PureLocalVolatilitySurface)>(r2, $r15, i7, 1, r3);

        d26 = d26 + $d24;

        $d25 = specialinvoke r0.<com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapBackwardsPurePDE: double getCorrection(com.opengamma.analytics.financial.equity.variance.pricing.AffineDividends,com.opengamma.analytics.financial.equity.variance.pricing.EquityDividendsCurvesBundle,int,boolean,com.opengamma.analytics.financial.model.volatility.local.PureLocalVolatilitySurface)>(r2, $r15, i7, 0, r3);

        d27 = d27 + $d25;

        i7 = i7 + 1;

        goto label1;

     label2:
        $r31 = newarray (double)[2];

        $d28 = 2.0 * d26;

        $d29 = d12 + $d28;

        $r31[0] = $d29;

        $d30 = 2.0 * d27;

        $d31 = d12 + $d30;

        $r31[1] = $d31;

        return $r31;
    }

    private double getCorrection(com.opengamma.analytics.financial.equity.variance.pricing.AffineDividends, com.opengamma.analytics.financial.equity.variance.pricing.EquityDividendsCurvesBundle, int, boolean, com.opengamma.analytics.financial.model.volatility.local.PureLocalVolatilitySurface)
    {
        com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapBackwardsPurePDE r0;
        com.opengamma.analytics.financial.equity.variance.pricing.AffineDividends r1;
        com.opengamma.analytics.financial.equity.variance.pricing.EquityDividendsCurvesBundle r2;
        int i0, i1, $i3, $i4, $i5, $i6;
        boolean z0;
        com.opengamma.analytics.financial.model.volatility.local.PureLocalVolatilitySurface r3;
        double d0, d1, d2, d3, d4, d5, d6, d7, d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, d21, $d22, d23;
        com.opengamma.analytics.financial.model.finitedifference.ConvectionDiffusionPDE1DStandardCoefficients r5;
        com.opengamma.analytics.math.function.Function1D r6, $r19;
        com.opengamma.analytics.financial.model.finitedifference.PDEResults1D r13;
        byte $b2;
        com.opengamma.analytics.financial.model.volatility.local.LocalVolatilitySurfaceMoneyness $r14;
        com.opengamma.analytics.math.surface.Surface $r15;
        com.opengamma.analytics.financial.model.interestrate.curve.ForwardCurve $r16;
        com.opengamma.analytics.financial.model.finitedifference.applications.PDE1DCoefficientsProvider $r17;
        com.opengamma.analytics.financial.model.finitedifference.NeumannBoundaryCondition $r18, $r20;
        com.opengamma.analytics.financial.model.finitedifference.ExponentialMeshing $r21;
        com.opengamma.analytics.financial.model.finitedifference.HyperbolicMeshing $r22;
        com.opengamma.analytics.financial.model.finitedifference.PDEGrid1D $r23, $r26;
        com.opengamma.analytics.financial.model.finitedifference.PDE1DDataBundle $r24;
        com.opengamma.analytics.financial.model.finitedifference.ConvectionDiffusionPDESolver $r25;
        double[] $r27;

        r0 := @this: com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapBackwardsPurePDE;

        r1 := @parameter0: com.opengamma.analytics.financial.equity.variance.pricing.AffineDividends;

        r2 := @parameter1: com.opengamma.analytics.financial.equity.variance.pricing.EquityDividendsCurvesBundle;

        i0 := @parameter2: int;

        z0 := @parameter3: boolean;

        r3 := @parameter4: com.opengamma.analytics.financial.model.volatility.local.PureLocalVolatilitySurface;

        d0 = virtualinvoke r1.<com.opengamma.analytics.financial.equity.variance.pricing.AffineDividends: double getAlpha(int)>(i0);

        $b2 = d0 cmpl 0.0;

        if $b2 != 0 goto label3;

        $d17 = virtualinvoke r1.<com.opengamma.analytics.financial.equity.variance.pricing.AffineDividends: double getBeta(int)>(i0);

        $d18 = 1.0 - $d17;

        d21 = staticinvoke <java.lang.Math: double log(double)>($d18);

        if z0 == 0 goto label1;

        $d22 = d21;

        goto label2;

     label1:
        $d19 = 0.5 * d21;

        $d20 = $d19 * d21;

        $d22 = d21 + $d20;

     label2:
        return $d22;

     label3:
        d23 = virtualinvoke r1.<com.opengamma.analytics.financial.equity.variance.pricing.AffineDividends: double getTau(int)>(i0);

        d1 = virtualinvoke r3.<com.opengamma.analytics.financial.model.volatility.local.PureLocalVolatilitySurface: double getVolatility(double,double)>(d23, 1.0);

        $d9 = staticinvoke <java.lang.Math: double sqrt(double)>(d23);

        $d10 = neg $d9;

        $d11 = $d10 * d1;

        d2 = $d11 * 4.0;

        d3 = neg d2;

        $r14 = new com.opengamma.analytics.financial.model.volatility.local.LocalVolatilitySurfaceMoneyness;

        $r15 = virtualinvoke r3.<com.opengamma.analytics.financial.model.volatility.local.PureLocalVolatilitySurface: com.opengamma.analytics.math.surface.Surface getSurface()>();

        $r16 = new com.opengamma.analytics.financial.model.interestrate.curve.ForwardCurve;

        specialinvoke $r16.<com.opengamma.analytics.financial.model.interestrate.curve.ForwardCurve: void <init>(double)>(1.0);

        specialinvoke $r14.<com.opengamma.analytics.financial.model.volatility.local.LocalVolatilitySurfaceMoneyness: void <init>(com.opengamma.analytics.math.surface.Surface,com.opengamma.analytics.financial.model.interestrate.curve.ForwardCurve)>($r15, $r16);

        $r17 = <com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapBackwardsPurePDE: com.opengamma.analytics.financial.model.finitedifference.applications.PDE1DCoefficientsProvider PDE_PROVIDER>;

        r5 = virtualinvoke $r17.<com.opengamma.analytics.financial.model.finitedifference.applications.PDE1DCoefficientsProvider: com.opengamma.analytics.financial.model.finitedifference.ConvectionDiffusionPDE1DStandardCoefficients getLogBackwardsLocalVol(double,com.opengamma.analytics.financial.model.volatility.local.LocalVolatilitySurfaceMoneyness)>(d23, $r14);

        r6 = specialinvoke r0.<com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapBackwardsPurePDE: com.opengamma.analytics.math.function.Function1D getCorrectionInitialCondition(com.opengamma.analytics.financial.equity.variance.pricing.AffineDividends,com.opengamma.analytics.financial.equity.variance.pricing.EquityDividendsCurvesBundle,int,boolean)>(r1, r2, i0, z0);

        $r18 = new com.opengamma.analytics.financial.model.finitedifference.NeumannBoundaryCondition;

        $d12 = (double) i0;

        $r19 = specialinvoke r0.<com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapBackwardsPurePDE: com.opengamma.analytics.math.function.Function1D getCorrectionLowerBoundaryCondition(com.opengamma.analytics.financial.equity.variance.pricing.AffineDividends,com.opengamma.analytics.financial.equity.variance.pricing.EquityDividendsCurvesBundle,int,boolean,double)>(r1, r2, i0, z0, $d12);

        specialinvoke $r18.<com.opengamma.analytics.financial.model.finitedifference.NeumannBoundaryCondition: void <init>(com.opengamma.analytics.math.function.Function1D,double,boolean)>($r19, d2, 1);

        $r20 = new com.opengamma.analytics.financial.model.finitedifference.NeumannBoundaryCondition;

        specialinvoke $r20.<com.opengamma.analytics.financial.model.finitedifference.NeumannBoundaryCondition: void <init>(double,double,boolean)>(0.0, d3, 0);

        $r21 = new com.opengamma.analytics.financial.model.finitedifference.ExponentialMeshing;

        $i3 = r0.<com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapBackwardsPurePDE: int _nTimeSteps>;

        specialinvoke $r21.<com.opengamma.analytics.financial.model.finitedifference.ExponentialMeshing: void <init>(double,double,int,double)>(0.0, d23, $i3, -4.0);

        $r22 = new com.opengamma.analytics.financial.model.finitedifference.HyperbolicMeshing;

        $i4 = r0.<com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapBackwardsPurePDE: int _nSpaceSteps>;

        specialinvoke $r22.<com.opengamma.analytics.financial.model.finitedifference.HyperbolicMeshing: void <init>(double,double,double,int,double)>(d2, d3, 0.0, $i4, 0.1);

        $r23 = new com.opengamma.analytics.financial.model.finitedifference.PDEGrid1D;

        specialinvoke $r23.<com.opengamma.analytics.financial.model.finitedifference.PDEGrid1D: void <init>(com.opengamma.analytics.financial.model.finitedifference.MeshingFunction,com.opengamma.analytics.financial.model.finitedifference.MeshingFunction)>($r21, $r22);

        $r24 = new com.opengamma.analytics.financial.model.finitedifference.PDE1DDataBundle;

        specialinvoke $r24.<com.opengamma.analytics.financial.model.finitedifference.PDE1DDataBundle: void <init>(com.opengamma.analytics.financial.model.finitedifference.PDE1DCoefficients,com.opengamma.analytics.math.function.Function1D,com.opengamma.analytics.financial.model.finitedifference.BoundaryCondition,com.opengamma.analytics.financial.model.finitedifference.BoundaryCondition,com.opengamma.analytics.financial.model.finitedifference.PDEGrid1D)>(r5, r6, $r18, $r20, $r23);

        $r25 = r0.<com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapBackwardsPurePDE: com.opengamma.analytics.financial.model.finitedifference.ConvectionDiffusionPDESolver _solver>;

        r13 = interfaceinvoke $r25.<com.opengamma.analytics.financial.model.finitedifference.ConvectionDiffusionPDESolver: com.opengamma.analytics.financial.model.finitedifference.PDEResults1D solve(com.opengamma.analytics.financial.model.finitedifference.PDE1DDataBundle)>($r24);

        $r26 = interfaceinvoke r13.<com.opengamma.analytics.financial.model.finitedifference.PDEResults1D: com.opengamma.analytics.financial.model.finitedifference.PDEGrid1D getGrid()>();

        $r27 = virtualinvoke $r26.<com.opengamma.analytics.financial.model.finitedifference.PDEGrid1D: double[] getSpaceNodes()>();

        i1 = staticinvoke <com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SurfaceArrayUtils: int getLowerBoundIndex(double[],double)>($r27, 0.0);

        d4 = interfaceinvoke r13.<com.opengamma.analytics.financial.model.finitedifference.PDEResults1D: double getSpaceValue(int)>(i1);

        $i5 = i1 + 1;

        d5 = interfaceinvoke r13.<com.opengamma.analytics.financial.model.finitedifference.PDEResults1D: double getSpaceValue(int)>($i5);

        d6 = interfaceinvoke r13.<com.opengamma.analytics.financial.model.finitedifference.PDEResults1D: double getFunctionValue(int)>(i1);

        $i6 = i1 + 1;

        d7 = interfaceinvoke r13.<com.opengamma.analytics.financial.model.finitedifference.PDEResults1D: double getFunctionValue(int)>($i6);

        d8 = d5 - d4;

        $d14 = d5 * d6;

        $d13 = d4 * d7;

        $d15 = $d14 - $d13;

        $d16 = $d15 / d8;

        return $d16;
    }

    private com.opengamma.analytics.math.function.Function1D getLogPayoff(com.opengamma.analytics.financial.equity.variance.pricing.EquityDividendsCurvesBundle, double)
    {
        com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapBackwardsPurePDE r0;
        com.opengamma.analytics.financial.equity.variance.pricing.EquityDividendsCurvesBundle r1;
        double d0, d1, d2, $d4;
        byte $b0;
        com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapBackwardsPurePDE$1 $r2;

        r0 := @this: com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapBackwardsPurePDE;

        r1 := @parameter0: com.opengamma.analytics.financial.equity.variance.pricing.EquityDividendsCurvesBundle;

        d0 := @parameter1: double;

        d1 = virtualinvoke r1.<com.opengamma.analytics.financial.equity.variance.pricing.EquityDividendsCurvesBundle: double getF(double)>(d0);

        d2 = virtualinvoke r1.<com.opengamma.analytics.financial.equity.variance.pricing.EquityDividendsCurvesBundle: double getD(double)>(d0);

        $b0 = d2 cmpl 0.0;

        if $b0 != 0 goto label1;

        $d4 = staticinvoke <java.lang.Math: double log(double)>(d1);

        goto label2;

     label1:
        $d4 = 0.0;

     label2:
        $r2 = new com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapBackwardsPurePDE$1;

        specialinvoke $r2.<com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapBackwardsPurePDE$1: void <init>(com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapBackwardsPurePDE,double,double,double)>(r0, d2, $d4, d1);

        return $r2;
    }

    private com.opengamma.analytics.math.function.Function1D getLowerBoundaryCondition(com.opengamma.analytics.financial.equity.variance.pricing.EquityDividendsCurvesBundle, double)
    {
        com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapBackwardsPurePDE r0;
        com.opengamma.analytics.financial.equity.variance.pricing.EquityDividendsCurvesBundle r1;
        double d0, d1, d2;
        com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapBackwardsPurePDE$2 $r2;

        r0 := @this: com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapBackwardsPurePDE;

        r1 := @parameter0: com.opengamma.analytics.financial.equity.variance.pricing.EquityDividendsCurvesBundle;

        d0 := @parameter1: double;

        d1 = virtualinvoke r1.<com.opengamma.analytics.financial.equity.variance.pricing.EquityDividendsCurvesBundle: double getF(double)>(d0);

        d2 = virtualinvoke r1.<com.opengamma.analytics.financial.equity.variance.pricing.EquityDividendsCurvesBundle: double getD(double)>(d0);

        $r2 = new com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapBackwardsPurePDE$2;

        specialinvoke $r2.<com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapBackwardsPurePDE$2: void <init>(com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapBackwardsPurePDE,double,double)>(r0, d2, d1);

        return $r2;
    }

    private com.opengamma.analytics.math.function.Function1D getCorrectionInitialCondition(com.opengamma.analytics.financial.equity.variance.pricing.AffineDividends, com.opengamma.analytics.financial.equity.variance.pricing.EquityDividendsCurvesBundle, int, boolean)
    {
        com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapBackwardsPurePDE r0;
        com.opengamma.analytics.financial.equity.variance.pricing.AffineDividends r1;
        com.opengamma.analytics.financial.equity.variance.pricing.EquityDividendsCurvesBundle r2;
        int i0;
        boolean z0;
        double d0, d1, d2, d3, d4;
        com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapBackwardsPurePDE$3 $r3;

        r0 := @this: com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapBackwardsPurePDE;

        r1 := @parameter0: com.opengamma.analytics.financial.equity.variance.pricing.AffineDividends;

        r2 := @parameter1: com.opengamma.analytics.financial.equity.variance.pricing.EquityDividendsCurvesBundle;

        i0 := @parameter2: int;

        z0 := @parameter3: boolean;

        d0 = virtualinvoke r1.<com.opengamma.analytics.financial.equity.variance.pricing.AffineDividends: double getTau(int)>(i0);

        d1 = virtualinvoke r1.<com.opengamma.analytics.financial.equity.variance.pricing.AffineDividends: double getAlpha(int)>(i0);

        d2 = virtualinvoke r1.<com.opengamma.analytics.financial.equity.variance.pricing.AffineDividends: double getBeta(int)>(i0);

        d3 = virtualinvoke r2.<com.opengamma.analytics.financial.equity.variance.pricing.EquityDividendsCurvesBundle: double getF(double)>(d0);

        d4 = virtualinvoke r2.<com.opengamma.analytics.financial.equity.variance.pricing.EquityDividendsCurvesBundle: double getD(double)>(d0);

        $r3 = new com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapBackwardsPurePDE$3;

        specialinvoke $r3.<com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapBackwardsPurePDE$3: void <init>(com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapBackwardsPurePDE,double,double,double,double,boolean)>(r0, d3, d4, d2, d1, z0);

        return $r3;
    }

    private com.opengamma.analytics.math.function.Function1D getCorrectionLowerBoundaryCondition(com.opengamma.analytics.financial.equity.variance.pricing.AffineDividends, com.opengamma.analytics.financial.equity.variance.pricing.EquityDividendsCurvesBundle, int, boolean, double)
    {
        com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapBackwardsPurePDE r0;
        com.opengamma.analytics.financial.equity.variance.pricing.AffineDividends r1;
        com.opengamma.analytics.financial.equity.variance.pricing.EquityDividendsCurvesBundle r2;
        int i0;
        boolean z0;
        double d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21;
        com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapBackwardsPurePDE$4 $r3;

        r0 := @this: com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapBackwardsPurePDE;

        r1 := @parameter0: com.opengamma.analytics.financial.equity.variance.pricing.AffineDividends;

        r2 := @parameter1: com.opengamma.analytics.financial.equity.variance.pricing.EquityDividendsCurvesBundle;

        i0 := @parameter2: int;

        z0 := @parameter3: boolean;

        d0 := @parameter4: double;

        d1 = virtualinvoke r1.<com.opengamma.analytics.financial.equity.variance.pricing.AffineDividends: double getTau(int)>(i0);

        d2 = virtualinvoke r1.<com.opengamma.analytics.financial.equity.variance.pricing.AffineDividends: double getAlpha(int)>(i0);

        d3 = virtualinvoke r1.<com.opengamma.analytics.financial.equity.variance.pricing.AffineDividends: double getBeta(int)>(i0);

        d4 = virtualinvoke r2.<com.opengamma.analytics.financial.equity.variance.pricing.EquityDividendsCurvesBundle: double getF(double)>(d1);

        d5 = virtualinvoke r2.<com.opengamma.analytics.financial.equity.variance.pricing.EquityDividendsCurvesBundle: double getD(double)>(d1);

        d6 = staticinvoke <java.lang.Math: double exp(double)>(d0);

        $d10 = d4 - d5;

        $d11 = $d10 * d6;

        d7 = $d11 + d5;

        $d12 = 1.0 - d3;

        $d14 = d7 * $d12;

        $d13 = d7 + d2;

        $d15 = $d14 / $d13;

        d8 = staticinvoke <java.lang.Math: double log(double)>($d15);

        if z0 == 0 goto label1;

        $d21 = 1.0;

        goto label2;

     label1:
        $d21 = 1.0 + d8;

     label2:
        $d16 = $d21 * d2;

        $d18 = $d16 / d7;

        $d17 = d7 + d2;

        $d20 = $d18 / $d17;

        $d19 = d4 - d5;

        d9 = $d20 * $d19;

        $r3 = new com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapBackwardsPurePDE$4;

        specialinvoke $r3.<com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapBackwardsPurePDE$4: void <init>(com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapBackwardsPurePDE,double)>(r0, d9);

        return $r3;
    }

    static void <clinit>()
    {
        com.opengamma.analytics.financial.model.finitedifference.applications.PDE1DCoefficientsProvider $r0;

        <com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapBackwardsPurePDE: double DEFAULT_THETA> = 0.5;

        <com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapBackwardsPurePDE: double SIGMA> = 4.0;

        <com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapBackwardsPurePDE: double LAMBDA_X> = 0.1;

        <com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapBackwardsPurePDE: double LAMBDA_T> = -4.0;

        $r0 = new com.opengamma.analytics.financial.model.finitedifference.applications.PDE1DCoefficientsProvider;

        specialinvoke $r0.<com.opengamma.analytics.financial.model.finitedifference.applications.PDE1DCoefficientsProvider: void <init>()>();

        <com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapBackwardsPurePDE: com.opengamma.analytics.financial.model.finitedifference.applications.PDE1DCoefficientsProvider PDE_PROVIDER> = $r0;

        return;
    }
}
