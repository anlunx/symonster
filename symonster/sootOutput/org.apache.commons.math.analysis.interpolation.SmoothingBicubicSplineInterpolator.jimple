public class org.apache.commons.math.analysis.interpolation.SmoothingBicubicSplineInterpolator extends java.lang.Object implements org.apache.commons.math.analysis.interpolation.BivariateRealGridInterpolator
{

    public void <init>()
    {
        org.apache.commons.math.analysis.interpolation.SmoothingBicubicSplineInterpolator r0;

        r0 := @this: org.apache.commons.math.analysis.interpolation.SmoothingBicubicSplineInterpolator;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public org.apache.commons.math.analysis.BivariateRealFunction interpolate(double[], double[], double[][]) throws org.apache.commons.math.MathException, java.lang.IllegalArgumentException
    {
        org.apache.commons.math.analysis.interpolation.SmoothingBicubicSplineInterpolator r0;
        double[] r1, r2, $r9, $r10, $r11, $r12, $r13, $r15, $r17, $r18, $r19, $r21, $r22, $r24, $r25, $r26, $r28;
        double[][] r3, r4, r35, r38, r40, r42, r44;
        int i0, i1, i2, i3, i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, i14, i15, i16, i17, i18, i19, i20, i21, i22, i23, i24, i25, i26, i27, i28;
        org.apache.commons.math.util.MathUtils$OrderDirection $r5, $r6;
        org.apache.commons.math.analysis.interpolation.SplineInterpolator $r7;
        org.apache.commons.math.analysis.interpolation.BicubicSplineInterpolatingFunction $r8;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21, $d22, $d23;
        org.apache.commons.math.analysis.polynomials.PolynomialSplineFunction $r14, $r16, $r20, $r23, r36, r39;
        org.apache.commons.math.DimensionMismatchException $r27, $r29;
        org.apache.commons.math.exception.util.LocalizedFormats $r30;
        java.lang.Object[] $r31;
        java.lang.IllegalArgumentException $r32;
        org.apache.commons.math.analysis.polynomials.PolynomialSplineFunction[] r34, r37;
        org.apache.commons.math.analysis.UnivariateRealFunction r41, r43;

        r0 := @this: org.apache.commons.math.analysis.interpolation.SmoothingBicubicSplineInterpolator;

        r1 := @parameter0: double[];

        r2 := @parameter1: double[];

        r3 := @parameter2: double[][];

        $i5 = lengthof r1;

        if $i5 == 0 goto label01;

        $i6 = lengthof r2;

        if $i6 == 0 goto label01;

        $i7 = lengthof r3;

        if $i7 != 0 goto label02;

     label01:
        $r30 = <org.apache.commons.math.exception.util.LocalizedFormats: org.apache.commons.math.exception.util.LocalizedFormats NO_DATA>;

        $r31 = newarray (java.lang.Object)[0];

        $r32 = staticinvoke <org.apache.commons.math.MathRuntimeException: java.lang.IllegalArgumentException createIllegalArgumentException(org.apache.commons.math.exception.util.Localizable,java.lang.Object[])>($r30, $r31);

        throw $r32;

     label02:
        $i9 = lengthof r1;

        $i8 = lengthof r3;

        if $i9 == $i8 goto label03;

        $r29 = new org.apache.commons.math.DimensionMismatchException;

        $i13 = lengthof r1;

        $i12 = lengthof r3;

        specialinvoke $r29.<org.apache.commons.math.DimensionMismatchException: void <init>(int,int)>($i13, $i12);

        throw $r29;

     label03:
        $r5 = <org.apache.commons.math.util.MathUtils$OrderDirection: org.apache.commons.math.util.MathUtils$OrderDirection INCREASING>;

        staticinvoke <org.apache.commons.math.util.MathUtils: void checkOrder(double[],org.apache.commons.math.util.MathUtils$OrderDirection,boolean)>(r1, $r5, 1);

        $r6 = <org.apache.commons.math.util.MathUtils$OrderDirection: org.apache.commons.math.util.MathUtils$OrderDirection INCREASING>;

        staticinvoke <org.apache.commons.math.util.MathUtils: void checkOrder(double[],org.apache.commons.math.util.MathUtils$OrderDirection,boolean)>(r2, $r6, 1);

        i0 = lengthof r1;

        i1 = lengthof r2;

        r4 = newmultiarray (double)[i1][i0];

        i14 = 0;

     label04:
        if i14 >= i0 goto label08;

        $r24 = r3[i14];

        $i10 = lengthof $r24;

        if $i10 == i1 goto label05;

        $r27 = new org.apache.commons.math.DimensionMismatchException;

        $r28 = r3[i14];

        $i11 = lengthof $r28;

        specialinvoke $r27.<org.apache.commons.math.DimensionMismatchException: void <init>(int,int)>($i11, i1);

        throw $r27;

     label05:
        i15 = 0;

     label06:
        if i15 >= i1 goto label07;

        $r26 = r4[i15];

        $r25 = r3[i14];

        $d23 = $r25[i15];

        $r26[i14] = $d23;

        i15 = i15 + 1;

        goto label06;

     label07:
        i14 = i14 + 1;

        goto label04;

     label08:
        $r7 = new org.apache.commons.math.analysis.interpolation.SplineInterpolator;

        specialinvoke $r7.<org.apache.commons.math.analysis.interpolation.SplineInterpolator: void <init>()>();

        r34 = newarray (org.apache.commons.math.analysis.polynomials.PolynomialSplineFunction)[i1];

        i16 = 0;

     label09:
        if i16 >= i1 goto label10;

        $r22 = r4[i16];

        $r23 = virtualinvoke $r7.<org.apache.commons.math.analysis.interpolation.SplineInterpolator: org.apache.commons.math.analysis.polynomials.PolynomialSplineFunction interpolate(double[],double[])>(r1, $r22);

        r34[i16] = $r23;

        i16 = i16 + 1;

        goto label09;

     label10:
        r35 = newmultiarray (double)[i0][i1];

        i17 = 0;

     label11:
        if i17 >= i1 goto label14;

        r36 = r34[i17];

        i18 = 0;

     label12:
        if i18 >= i0 goto label13;

        $r21 = r35[i18];

        $d21 = r1[i18];

        $d22 = virtualinvoke r36.<org.apache.commons.math.analysis.polynomials.PolynomialSplineFunction: double value(double)>($d21);

        $r21[i17] = $d22;

        i18 = i18 + 1;

        goto label12;

     label13:
        i17 = i17 + 1;

        goto label11;

     label14:
        r37 = newarray (org.apache.commons.math.analysis.polynomials.PolynomialSplineFunction)[i0];

        i19 = 0;

     label15:
        if i19 >= i0 goto label16;

        $r19 = r35[i19];

        $r20 = virtualinvoke $r7.<org.apache.commons.math.analysis.interpolation.SplineInterpolator: org.apache.commons.math.analysis.polynomials.PolynomialSplineFunction interpolate(double[],double[])>(r2, $r19);

        r37[i19] = $r20;

        i19 = i19 + 1;

        goto label15;

     label16:
        r38 = newmultiarray (double)[i0][i1];

        i20 = 0;

     label17:
        if i20 >= i0 goto label20;

        r39 = r37[i20];

        i21 = 0;

     label18:
        if i21 >= i1 goto label19;

        $r18 = r38[i20];

        $d19 = r2[i21];

        $d20 = virtualinvoke r39.<org.apache.commons.math.analysis.polynomials.PolynomialSplineFunction: double value(double)>($d19);

        $r18[i21] = $d20;

        i21 = i21 + 1;

        goto label18;

     label19:
        i20 = i20 + 1;

        goto label17;

     label20:
        r40 = newmultiarray (double)[i0][i1];

        i22 = 0;

     label21:
        if i22 >= i1 goto label24;

        $r16 = r34[i22];

        r41 = virtualinvoke $r16.<org.apache.commons.math.analysis.polynomials.PolynomialSplineFunction: org.apache.commons.math.analysis.UnivariateRealFunction derivative()>();

        i23 = 0;

     label22:
        if i23 >= i0 goto label23;

        $r17 = r40[i23];

        $d17 = r1[i23];

        $d18 = interfaceinvoke r41.<org.apache.commons.math.analysis.UnivariateRealFunction: double value(double)>($d17);

        $r17[i22] = $d18;

        i23 = i23 + 1;

        goto label22;

     label23:
        i22 = i22 + 1;

        goto label21;

     label24:
        r42 = newmultiarray (double)[i0][i1];

        i24 = 0;

     label25:
        if i24 >= i0 goto label28;

        $r14 = r37[i24];

        r43 = virtualinvoke $r14.<org.apache.commons.math.analysis.polynomials.PolynomialSplineFunction: org.apache.commons.math.analysis.UnivariateRealFunction derivative()>();

        i25 = 0;

     label26:
        if i25 >= i1 goto label27;

        $r15 = r42[i24];

        $d15 = r2[i25];

        $d16 = interfaceinvoke r43.<org.apache.commons.math.analysis.UnivariateRealFunction: double value(double)>($d15);

        $r15[i25] = $d16;

        i25 = i25 + 1;

        goto label26;

     label27:
        i24 = i24 + 1;

        goto label25;

     label28:
        r44 = newmultiarray (double)[i0][i1];

        i26 = 0;

     label29:
        if i26 >= i0 goto label32;

        i27 = specialinvoke r0.<org.apache.commons.math.analysis.interpolation.SmoothingBicubicSplineInterpolator: int nextIndex(int,int)>(i26, i0);

        i2 = specialinvoke r0.<org.apache.commons.math.analysis.interpolation.SmoothingBicubicSplineInterpolator: int previousIndex(int)>(i26);

        i28 = 0;

     label30:
        if i28 >= i1 goto label31;

        i3 = specialinvoke r0.<org.apache.commons.math.analysis.interpolation.SmoothingBicubicSplineInterpolator: int nextIndex(int,int)>(i28, i1);

        i4 = specialinvoke r0.<org.apache.commons.math.analysis.interpolation.SmoothingBicubicSplineInterpolator: int previousIndex(int)>(i28);

        $r13 = r44[i26];

        $r9 = r38[i27];

        $d1 = $r9[i3];

        $r10 = r38[i27];

        $d0 = $r10[i4];

        $d3 = $d1 - $d0;

        $r11 = r38[i2];

        $d2 = $r11[i3];

        $d5 = $d3 - $d2;

        $r12 = r38[i2];

        $d4 = $r12[i4];

        $d13 = $d5 + $d4;

        $d7 = r1[i27];

        $d6 = r1[i2];

        $d11 = $d7 - $d6;

        $d9 = r2[i3];

        $d8 = r2[i4];

        $d10 = $d9 - $d8;

        $d12 = $d11 * $d10;

        $d14 = $d13 / $d12;

        $r13[i28] = $d14;

        i28 = i28 + 1;

        goto label30;

     label31:
        i26 = i26 + 1;

        goto label29;

     label32:
        $r8 = new org.apache.commons.math.analysis.interpolation.BicubicSplineInterpolatingFunction;

        specialinvoke $r8.<org.apache.commons.math.analysis.interpolation.BicubicSplineInterpolatingFunction: void <init>(double[],double[],double[][],double[][],double[][],double[][])>(r1, r2, r38, r40, r42, r44);

        return $r8;
    }

    private int nextIndex(int, int)
    {
        org.apache.commons.math.analysis.interpolation.SmoothingBicubicSplineInterpolator r0;
        int i0, i1, i2, $i3;

        r0 := @this: org.apache.commons.math.analysis.interpolation.SmoothingBicubicSplineInterpolator;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 = i0 + 1;

        if i2 >= i1 goto label1;

        $i3 = i2;

        goto label2;

     label1:
        $i3 = i2 - 1;

     label2:
        return $i3;
    }

    private int previousIndex(int)
    {
        org.apache.commons.math.analysis.interpolation.SmoothingBicubicSplineInterpolator r0;
        int i0, i1, $i2;

        r0 := @this: org.apache.commons.math.analysis.interpolation.SmoothingBicubicSplineInterpolator;

        i0 := @parameter0: int;

        i1 = i0 - 1;

        if i1 < 0 goto label1;

        $i2 = i1;

        goto label2;

     label1:
        $i2 = 0;

     label2:
        return $i2;
    }
}
