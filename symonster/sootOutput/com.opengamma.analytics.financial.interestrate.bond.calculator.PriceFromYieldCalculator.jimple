public class com.opengamma.analytics.financial.interestrate.bond.calculator.PriceFromYieldCalculator extends java.lang.Object
{

    public void <init>()
    {
        com.opengamma.analytics.financial.interestrate.bond.calculator.PriceFromYieldCalculator r0;

        r0 := @this: com.opengamma.analytics.financial.interestrate.bond.calculator.PriceFromYieldCalculator;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static double priceFromYield(com.opengamma.financial.convention.yield.YieldConvention, double, double)
    {
        com.opengamma.financial.convention.yield.YieldConvention r0, $r1, $r2;
        double d0, d1, $d2, $d3, $d4, $d5, $d6;
        java.lang.UnsupportedOperationException $r3;
        java.lang.StringBuilder $r4, $r5, $r7, $r8;
        java.lang.String $r6, $r9;

        r0 := @parameter0: com.opengamma.financial.convention.yield.YieldConvention;

        d0 := @parameter1: double;

        d1 := @parameter2: double;

        $r1 = <com.opengamma.financial.convention.yield.SimpleYieldConvention: com.opengamma.financial.convention.yield.YieldConvention DISCOUNT>;

        if r0 != $r1 goto label1;

        $d5 = d1 * d0;

        $d6 = 1.0 - $d5;

        return $d6;

     label1:
        $r2 = <com.opengamma.financial.convention.yield.SimpleYieldConvention: com.opengamma.financial.convention.yield.YieldConvention INTERESTATMTY>;

        if r0 != $r2 goto label2;

        $d2 = d1 * d0;

        $d3 = 1.0 + $d2;

        $d4 = 1.0 / $d3;

        return $d4;

     label2:
        $r3 = new java.lang.UnsupportedOperationException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("The convention ");

        $r6 = interfaceinvoke r0.<com.opengamma.financial.convention.yield.YieldConvention: java.lang.String getName()>();

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is not supported.");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>($r9);

        throw $r3;
    }
}
