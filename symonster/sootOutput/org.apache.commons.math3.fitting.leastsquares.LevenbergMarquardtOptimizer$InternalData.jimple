class org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer$InternalData extends java.lang.Object
{
    private final double[][] weightedJacobian;
    private final int[] permutation;
    private final int rank;
    private final double[] diagR;
    private final double[] jacNorm;
    private final double[] beta;

    void <init>(double[][], int[], int, double[], double[], double[])
    {
        org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer$InternalData r0;
        double[][] r1;
        int[] r2;
        int i0;
        double[] r3, r4, r5;

        r0 := @this: org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer$InternalData;

        r1 := @parameter0: double[][];

        r2 := @parameter1: int[];

        i0 := @parameter2: int;

        r3 := @parameter3: double[];

        r4 := @parameter4: double[];

        r5 := @parameter5: double[];

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer$InternalData: double[][] weightedJacobian> = r1;

        r0.<org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer$InternalData: int[] permutation> = r2;

        r0.<org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer$InternalData: int rank> = i0;

        r0.<org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer$InternalData: double[] diagR> = r3;

        r0.<org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer$InternalData: double[] jacNorm> = r4;

        r0.<org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer$InternalData: double[] beta> = r5;

        return;
    }

    static double[][] access$000(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer$InternalData)
    {
        org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer$InternalData r0;
        double[][] $r1;

        r0 := @parameter0: org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer$InternalData;

        $r1 = r0.<org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer$InternalData: double[][] weightedJacobian>;

        return $r1;
    }

    static int[] access$100(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer$InternalData)
    {
        org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer$InternalData r0;
        int[] $r1;

        r0 := @parameter0: org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer$InternalData;

        $r1 = r0.<org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer$InternalData: int[] permutation>;

        return $r1;
    }

    static double[] access$200(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer$InternalData)
    {
        org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer$InternalData r0;
        double[] $r1;

        r0 := @parameter0: org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer$InternalData;

        $r1 = r0.<org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer$InternalData: double[] diagR>;

        return $r1;
    }

    static double[] access$300(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer$InternalData)
    {
        org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer$InternalData r0;
        double[] $r1;

        r0 := @parameter0: org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer$InternalData;

        $r1 = r0.<org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer$InternalData: double[] jacNorm>;

        return $r1;
    }

    static int access$400(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer$InternalData)
    {
        org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer$InternalData r0;
        int $i0;

        r0 := @parameter0: org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer$InternalData;

        $i0 = r0.<org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer$InternalData: int rank>;

        return $i0;
    }

    static double[] access$500(org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer$InternalData)
    {
        org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer$InternalData r0;
        double[] $r1;

        r0 := @parameter0: org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer$InternalData;

        $r1 = r0.<org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer$InternalData: double[] beta>;

        return $r1;
    }
}
