public abstract class com.opengamma.financial.convention.daycount.AbstractDayCount extends java.lang.Object implements com.opengamma.financial.convention.daycount.DayCount
{

    public void <init>()
    {
        com.opengamma.financial.convention.daycount.AbstractDayCount r0;

        r0 := @this: com.opengamma.financial.convention.daycount.AbstractDayCount;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public abstract double getDayCountFraction(org.threeten.bp.LocalDate, org.threeten.bp.LocalDate);

    public double getDayCountFraction(org.threeten.bp.LocalDate, org.threeten.bp.LocalDate, com.opengamma.financial.convention.calendar.Calendar)
    {
        com.opengamma.financial.convention.daycount.AbstractDayCount r0;
        org.threeten.bp.LocalDate r1, r2;
        com.opengamma.financial.convention.calendar.Calendar r3;
        double $d0;

        r0 := @this: com.opengamma.financial.convention.daycount.AbstractDayCount;

        r1 := @parameter0: org.threeten.bp.LocalDate;

        r2 := @parameter1: org.threeten.bp.LocalDate;

        r3 := @parameter2: com.opengamma.financial.convention.calendar.Calendar;

        $d0 = virtualinvoke r0.<com.opengamma.financial.convention.daycount.AbstractDayCount: double getDayCountFraction(org.threeten.bp.LocalDate,org.threeten.bp.LocalDate)>(r1, r2);

        return $d0;
    }

    public double getDayCountFraction(org.threeten.bp.ZonedDateTime, org.threeten.bp.ZonedDateTime)
    {
        com.opengamma.financial.convention.daycount.AbstractDayCount r0;
        org.threeten.bp.ZonedDateTime r1, r2;
        org.threeten.bp.LocalDate $r5, $r6;
        double $d0;

        r0 := @this: com.opengamma.financial.convention.daycount.AbstractDayCount;

        r1 := @parameter0: org.threeten.bp.ZonedDateTime;

        r2 := @parameter1: org.threeten.bp.ZonedDateTime;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "first date");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, "second date");

        $r5 = virtualinvoke r1.<org.threeten.bp.ZonedDateTime: org.threeten.bp.LocalDate toLocalDate()>();

        $r6 = virtualinvoke r2.<org.threeten.bp.ZonedDateTime: org.threeten.bp.LocalDate toLocalDate()>();

        $d0 = virtualinvoke r0.<com.opengamma.financial.convention.daycount.AbstractDayCount: double getDayCountFraction(org.threeten.bp.LocalDate,org.threeten.bp.LocalDate)>($r5, $r6);

        return $d0;
    }

    public double getDayCountFraction(org.threeten.bp.ZonedDateTime, org.threeten.bp.ZonedDateTime, com.opengamma.financial.convention.calendar.Calendar)
    {
        com.opengamma.financial.convention.daycount.AbstractDayCount r0;
        org.threeten.bp.ZonedDateTime r1, r2;
        com.opengamma.financial.convention.calendar.Calendar r3;
        org.threeten.bp.LocalDate $r6, $r7;
        double $d0;

        r0 := @this: com.opengamma.financial.convention.daycount.AbstractDayCount;

        r1 := @parameter0: org.threeten.bp.ZonedDateTime;

        r2 := @parameter1: org.threeten.bp.ZonedDateTime;

        r3 := @parameter2: com.opengamma.financial.convention.calendar.Calendar;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "first date");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, "second date");

        $r6 = virtualinvoke r1.<org.threeten.bp.ZonedDateTime: org.threeten.bp.LocalDate toLocalDate()>();

        $r7 = virtualinvoke r2.<org.threeten.bp.ZonedDateTime: org.threeten.bp.LocalDate toLocalDate()>();

        $d0 = virtualinvoke r0.<com.opengamma.financial.convention.daycount.AbstractDayCount: double getDayCountFraction(org.threeten.bp.LocalDate,org.threeten.bp.LocalDate)>($r6, $r7);

        return $d0;
    }

    public abstract double getAccruedInterest(org.threeten.bp.LocalDate, org.threeten.bp.LocalDate, org.threeten.bp.LocalDate, double, double);

    public double getAccruedInterest(org.threeten.bp.ZonedDateTime, org.threeten.bp.ZonedDateTime, org.threeten.bp.ZonedDateTime, double, double)
    {
        com.opengamma.financial.convention.daycount.AbstractDayCount r0;
        org.threeten.bp.ZonedDateTime r1, r2, r3;
        double d0, d1, $d2;
        org.threeten.bp.LocalDate $r7, $r8, $r9;

        r0 := @this: com.opengamma.financial.convention.daycount.AbstractDayCount;

        r1 := @parameter0: org.threeten.bp.ZonedDateTime;

        r2 := @parameter1: org.threeten.bp.ZonedDateTime;

        r3 := @parameter2: org.threeten.bp.ZonedDateTime;

        d0 := @parameter3: double;

        d1 := @parameter4: double;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "previous coupon date");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, "date");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r3, "next coupon date");

        $r7 = virtualinvoke r1.<org.threeten.bp.ZonedDateTime: org.threeten.bp.LocalDate toLocalDate()>();

        $r8 = virtualinvoke r2.<org.threeten.bp.ZonedDateTime: org.threeten.bp.LocalDate toLocalDate()>();

        $r9 = virtualinvoke r3.<org.threeten.bp.ZonedDateTime: org.threeten.bp.LocalDate toLocalDate()>();

        $d2 = virtualinvoke r0.<com.opengamma.financial.convention.daycount.AbstractDayCount: double getAccruedInterest(org.threeten.bp.LocalDate,org.threeten.bp.LocalDate,org.threeten.bp.LocalDate,double,double)>($r7, $r8, $r9, d0, d1);

        return $d2;
    }

    public java.lang.String getConventionName()
    {
        com.opengamma.financial.convention.daycount.AbstractDayCount r0;
        java.lang.String $r1;

        r0 := @this: com.opengamma.financial.convention.daycount.AbstractDayCount;

        $r1 = virtualinvoke r0.<com.opengamma.financial.convention.daycount.AbstractDayCount: java.lang.String getName()>();

        return $r1;
    }

    public abstract java.lang.String getName();
}
