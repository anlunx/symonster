public class org.apache.commons.math.optimization.linear.LinearConstraint extends java.lang.Object implements java.io.Serializable
{
    private static final long serialVersionUID;
    private final transient org.apache.commons.math.linear.RealVector coefficients;
    private final org.apache.commons.math.optimization.linear.Relationship relationship;
    private final double value;

    public void <init>(double[], org.apache.commons.math.optimization.linear.Relationship, double)
    {
        org.apache.commons.math.optimization.linear.LinearConstraint r0;
        double[] r1;
        org.apache.commons.math.optimization.linear.Relationship r2;
        double d0;
        org.apache.commons.math.linear.ArrayRealVector $r3;

        r0 := @this: org.apache.commons.math.optimization.linear.LinearConstraint;

        r1 := @parameter0: double[];

        r2 := @parameter1: org.apache.commons.math.optimization.linear.Relationship;

        d0 := @parameter2: double;

        $r3 = new org.apache.commons.math.linear.ArrayRealVector;

        specialinvoke $r3.<org.apache.commons.math.linear.ArrayRealVector: void <init>(double[])>(r1);

        specialinvoke r0.<org.apache.commons.math.optimization.linear.LinearConstraint: void <init>(org.apache.commons.math.linear.RealVector,org.apache.commons.math.optimization.linear.Relationship,double)>($r3, r2, d0);

        return;
    }

    public void <init>(org.apache.commons.math.linear.RealVector, org.apache.commons.math.optimization.linear.Relationship, double)
    {
        org.apache.commons.math.optimization.linear.LinearConstraint r0;
        org.apache.commons.math.linear.RealVector r1;
        org.apache.commons.math.optimization.linear.Relationship r2;
        double d0;

        r0 := @this: org.apache.commons.math.optimization.linear.LinearConstraint;

        r1 := @parameter0: org.apache.commons.math.linear.RealVector;

        r2 := @parameter1: org.apache.commons.math.optimization.linear.Relationship;

        d0 := @parameter2: double;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.commons.math.optimization.linear.LinearConstraint: org.apache.commons.math.linear.RealVector coefficients> = r1;

        r0.<org.apache.commons.math.optimization.linear.LinearConstraint: org.apache.commons.math.optimization.linear.Relationship relationship> = r2;

        r0.<org.apache.commons.math.optimization.linear.LinearConstraint: double value> = d0;

        return;
    }

    public void <init>(double[], double, org.apache.commons.math.optimization.linear.Relationship, double[], double)
    {
        org.apache.commons.math.optimization.linear.LinearConstraint r0;
        double[] r1, r3, r4;
        double d0, d1, $d2, $d3, $d4, $d5;
        org.apache.commons.math.optimization.linear.Relationship r2;
        int $i0, $i1, i2;
        org.apache.commons.math.linear.ArrayRealVector $r5;

        r0 := @this: org.apache.commons.math.optimization.linear.LinearConstraint;

        r1 := @parameter0: double[];

        d0 := @parameter1: double;

        r2 := @parameter2: org.apache.commons.math.optimization.linear.Relationship;

        r3 := @parameter3: double[];

        d1 := @parameter4: double;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $i0 = lengthof r1;

        r4 = newarray (double)[$i0];

        i2 = 0;

     label1:
        $i1 = lengthof r4;

        if i2 >= $i1 goto label2;

        $d4 = r1[i2];

        $d3 = r3[i2];

        $d5 = $d4 - $d3;

        r4[i2] = $d5;

        i2 = i2 + 1;

        goto label1;

     label2:
        $r5 = new org.apache.commons.math.linear.ArrayRealVector;

        specialinvoke $r5.<org.apache.commons.math.linear.ArrayRealVector: void <init>(double[],boolean)>(r4, 0);

        r0.<org.apache.commons.math.optimization.linear.LinearConstraint: org.apache.commons.math.linear.RealVector coefficients> = $r5;

        r0.<org.apache.commons.math.optimization.linear.LinearConstraint: org.apache.commons.math.optimization.linear.Relationship relationship> = r2;

        $d2 = d1 - d0;

        r0.<org.apache.commons.math.optimization.linear.LinearConstraint: double value> = $d2;

        return;
    }

    public void <init>(org.apache.commons.math.linear.RealVector, double, org.apache.commons.math.optimization.linear.Relationship, org.apache.commons.math.linear.RealVector, double)
    {
        org.apache.commons.math.optimization.linear.LinearConstraint r0;
        org.apache.commons.math.linear.RealVector r1, r3, $r4;
        double d0, d1, $d2;
        org.apache.commons.math.optimization.linear.Relationship r2;

        r0 := @this: org.apache.commons.math.optimization.linear.LinearConstraint;

        r1 := @parameter0: org.apache.commons.math.linear.RealVector;

        d0 := @parameter1: double;

        r2 := @parameter2: org.apache.commons.math.optimization.linear.Relationship;

        r3 := @parameter3: org.apache.commons.math.linear.RealVector;

        d1 := @parameter4: double;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r4 = interfaceinvoke r1.<org.apache.commons.math.linear.RealVector: org.apache.commons.math.linear.RealVector subtract(org.apache.commons.math.linear.RealVector)>(r3);

        r0.<org.apache.commons.math.optimization.linear.LinearConstraint: org.apache.commons.math.linear.RealVector coefficients> = $r4;

        r0.<org.apache.commons.math.optimization.linear.LinearConstraint: org.apache.commons.math.optimization.linear.Relationship relationship> = r2;

        $d2 = d1 - d0;

        r0.<org.apache.commons.math.optimization.linear.LinearConstraint: double value> = $d2;

        return;
    }

    public org.apache.commons.math.linear.RealVector getCoefficients()
    {
        org.apache.commons.math.optimization.linear.LinearConstraint r0;
        org.apache.commons.math.linear.RealVector $r1;

        r0 := @this: org.apache.commons.math.optimization.linear.LinearConstraint;

        $r1 = r0.<org.apache.commons.math.optimization.linear.LinearConstraint: org.apache.commons.math.linear.RealVector coefficients>;

        return $r1;
    }

    public org.apache.commons.math.optimization.linear.Relationship getRelationship()
    {
        org.apache.commons.math.optimization.linear.LinearConstraint r0;
        org.apache.commons.math.optimization.linear.Relationship $r1;

        r0 := @this: org.apache.commons.math.optimization.linear.LinearConstraint;

        $r1 = r0.<org.apache.commons.math.optimization.linear.LinearConstraint: org.apache.commons.math.optimization.linear.Relationship relationship>;

        return $r1;
    }

    public double getValue()
    {
        org.apache.commons.math.optimization.linear.LinearConstraint r0;
        double $d0;

        r0 := @this: org.apache.commons.math.optimization.linear.LinearConstraint;

        $d0 = r0.<org.apache.commons.math.optimization.linear.LinearConstraint: double value>;

        return $d0;
    }

    public boolean equals(java.lang.Object)
    {
        org.apache.commons.math.optimization.linear.LinearConstraint r0, r2;
        java.lang.Object r1;
        boolean $z0, $z1, $z2;
        org.apache.commons.math.optimization.linear.Relationship $r3, $r4;
        double $d0, $d1;
        byte $b0;
        org.apache.commons.math.linear.RealVector $r5, $r6;

        r0 := @this: org.apache.commons.math.optimization.linear.LinearConstraint;

        r1 := @parameter0: java.lang.Object;

        if r0 != r1 goto label1;

        return 1;

     label1:
        $z0 = r1 instanceof org.apache.commons.math.optimization.linear.LinearConstraint;

        if $z0 == 0 goto label4;

        r2 = (org.apache.commons.math.optimization.linear.LinearConstraint) r1;

        $r4 = r0.<org.apache.commons.math.optimization.linear.LinearConstraint: org.apache.commons.math.optimization.linear.Relationship relationship>;

        $r3 = r2.<org.apache.commons.math.optimization.linear.LinearConstraint: org.apache.commons.math.optimization.linear.Relationship relationship>;

        if $r4 != $r3 goto label2;

        $d1 = r0.<org.apache.commons.math.optimization.linear.LinearConstraint: double value>;

        $d0 = r2.<org.apache.commons.math.optimization.linear.LinearConstraint: double value>;

        $b0 = $d1 cmpl $d0;

        if $b0 != 0 goto label2;

        $r6 = r0.<org.apache.commons.math.optimization.linear.LinearConstraint: org.apache.commons.math.linear.RealVector coefficients>;

        $r5 = r2.<org.apache.commons.math.optimization.linear.LinearConstraint: org.apache.commons.math.linear.RealVector coefficients>;

        $z1 = virtualinvoke $r6.<java.lang.Object: boolean equals(java.lang.Object)>($r5);

        if $z1 == 0 goto label2;

        $z2 = 1;

        goto label3;

     label2:
        $z2 = 0;

     label3:
        return $z2;

     label4:
        return 0;
    }

    public int hashCode()
    {
        org.apache.commons.math.optimization.linear.LinearConstraint r0;
        org.apache.commons.math.optimization.linear.Relationship $r1;
        int $i0, $i1, $i2, $i3, $i4;
        double $d0;
        java.lang.Double $r2;
        org.apache.commons.math.linear.RealVector $r3;

        r0 := @this: org.apache.commons.math.optimization.linear.LinearConstraint;

        $r1 = r0.<org.apache.commons.math.optimization.linear.LinearConstraint: org.apache.commons.math.optimization.linear.Relationship relationship>;

        $i0 = virtualinvoke $r1.<org.apache.commons.math.optimization.linear.Relationship: int hashCode()>();

        $d0 = r0.<org.apache.commons.math.optimization.linear.LinearConstraint: double value>;

        $r2 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        $i1 = virtualinvoke $r2.<java.lang.Double: int hashCode()>();

        $i2 = $i0 ^ $i1;

        $r3 = r0.<org.apache.commons.math.optimization.linear.LinearConstraint: org.apache.commons.math.linear.RealVector coefficients>;

        $i3 = virtualinvoke $r3.<java.lang.Object: int hashCode()>();

        $i4 = $i2 ^ $i3;

        return $i4;
    }

    private void writeObject(java.io.ObjectOutputStream) throws java.io.IOException
    {
        org.apache.commons.math.optimization.linear.LinearConstraint r0;
        java.io.ObjectOutputStream r1;
        org.apache.commons.math.linear.RealVector $r2;

        r0 := @this: org.apache.commons.math.optimization.linear.LinearConstraint;

        r1 := @parameter0: java.io.ObjectOutputStream;

        virtualinvoke r1.<java.io.ObjectOutputStream: void defaultWriteObject()>();

        $r2 = r0.<org.apache.commons.math.optimization.linear.LinearConstraint: org.apache.commons.math.linear.RealVector coefficients>;

        staticinvoke <org.apache.commons.math.linear.MatrixUtils: void serializeRealVector(org.apache.commons.math.linear.RealVector,java.io.ObjectOutputStream)>($r2, r1);

        return;
    }

    private void readObject(java.io.ObjectInputStream) throws java.lang.ClassNotFoundException, java.io.IOException
    {
        org.apache.commons.math.optimization.linear.LinearConstraint r0;
        java.io.ObjectInputStream r1;

        r0 := @this: org.apache.commons.math.optimization.linear.LinearConstraint;

        r1 := @parameter0: java.io.ObjectInputStream;

        virtualinvoke r1.<java.io.ObjectInputStream: void defaultReadObject()>();

        staticinvoke <org.apache.commons.math.linear.MatrixUtils: void deserializeRealVector(java.lang.Object,java.lang.String,java.io.ObjectInputStream)>(r0, "coefficients", r1);

        return;
    }

    public static void <clinit>()
    {
        <org.apache.commons.math.optimization.linear.LinearConstraint: long serialVersionUID> = -764632794033034092L;

        return;
    }
}
