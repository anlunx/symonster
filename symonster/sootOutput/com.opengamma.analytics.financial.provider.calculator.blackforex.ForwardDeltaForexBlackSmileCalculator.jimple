public class com.opengamma.analytics.financial.provider.calculator.blackforex.ForwardDeltaForexBlackSmileCalculator extends com.opengamma.analytics.financial.interestrate.InstrumentDerivativeVisitorAdapter
{
    private static final com.opengamma.analytics.financial.provider.calculator.blackforex.ForwardDeltaForexBlackSmileCalculator INSTANCE;
    private static final com.opengamma.analytics.financial.forex.provider.ForexOptionVanillaBlackSmileMethod METHOD_FXOPTIONVANILLA;

    public static com.opengamma.analytics.financial.provider.calculator.blackforex.ForwardDeltaForexBlackSmileCalculator getInstance()
    {
        com.opengamma.analytics.financial.provider.calculator.blackforex.ForwardDeltaForexBlackSmileCalculator $r0;

        $r0 = <com.opengamma.analytics.financial.provider.calculator.blackforex.ForwardDeltaForexBlackSmileCalculator: com.opengamma.analytics.financial.provider.calculator.blackforex.ForwardDeltaForexBlackSmileCalculator INSTANCE>;

        return $r0;
    }

    void <init>()
    {
        com.opengamma.analytics.financial.provider.calculator.blackforex.ForwardDeltaForexBlackSmileCalculator r0;

        r0 := @this: com.opengamma.analytics.financial.provider.calculator.blackforex.ForwardDeltaForexBlackSmileCalculator;

        specialinvoke r0.<com.opengamma.analytics.financial.interestrate.InstrumentDerivativeVisitorAdapter: void <init>()>();

        return;
    }

    public java.lang.Double visitForexOptionVanilla(com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla, com.opengamma.analytics.financial.provider.description.forex.BlackForexSmileProviderInterface)
    {
        com.opengamma.analytics.financial.provider.calculator.blackforex.ForwardDeltaForexBlackSmileCalculator r0;
        com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla r1;
        com.opengamma.analytics.financial.provider.description.forex.BlackForexSmileProviderInterface r2;
        com.opengamma.analytics.financial.forex.provider.ForexOptionVanillaBlackSmileMethod $r3;
        double $d0;
        java.lang.Double $r4;

        r0 := @this: com.opengamma.analytics.financial.provider.calculator.blackforex.ForwardDeltaForexBlackSmileCalculator;

        r1 := @parameter0: com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla;

        r2 := @parameter1: com.opengamma.analytics.financial.provider.description.forex.BlackForexSmileProviderInterface;

        $r3 = <com.opengamma.analytics.financial.provider.calculator.blackforex.ForwardDeltaForexBlackSmileCalculator: com.opengamma.analytics.financial.forex.provider.ForexOptionVanillaBlackSmileMethod METHOD_FXOPTIONVANILLA>;

        $d0 = virtualinvoke $r3.<com.opengamma.analytics.financial.forex.provider.ForexOptionVanillaBlackSmileMethod: double forwardDeltaTheoretical(com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla,com.opengamma.analytics.financial.provider.description.forex.BlackForexSmileProviderInterface)>(r1, r2);

        $r4 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        return $r4;
    }

    public volatile java.lang.Object visitForexOptionVanilla(com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla, java.lang.Object)
    {
        com.opengamma.analytics.financial.provider.calculator.blackforex.ForwardDeltaForexBlackSmileCalculator r0;
        com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla r1;
        java.lang.Object r2;
        com.opengamma.analytics.financial.provider.description.forex.BlackForexSmileProviderInterface $r3;
        java.lang.Double $r4;

        r0 := @this: com.opengamma.analytics.financial.provider.calculator.blackforex.ForwardDeltaForexBlackSmileCalculator;

        r1 := @parameter0: com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla;

        r2 := @parameter1: java.lang.Object;

        $r3 = (com.opengamma.analytics.financial.provider.description.forex.BlackForexSmileProviderInterface) r2;

        $r4 = virtualinvoke r0.<com.opengamma.analytics.financial.provider.calculator.blackforex.ForwardDeltaForexBlackSmileCalculator: java.lang.Double visitForexOptionVanilla(com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla,com.opengamma.analytics.financial.provider.description.forex.BlackForexSmileProviderInterface)>(r1, $r3);

        return $r4;
    }

    static void <clinit>()
    {
        com.opengamma.analytics.financial.provider.calculator.blackforex.ForwardDeltaForexBlackSmileCalculator $r0;
        com.opengamma.analytics.financial.forex.provider.ForexOptionVanillaBlackSmileMethod $r1;

        $r0 = new com.opengamma.analytics.financial.provider.calculator.blackforex.ForwardDeltaForexBlackSmileCalculator;

        specialinvoke $r0.<com.opengamma.analytics.financial.provider.calculator.blackforex.ForwardDeltaForexBlackSmileCalculator: void <init>()>();

        <com.opengamma.analytics.financial.provider.calculator.blackforex.ForwardDeltaForexBlackSmileCalculator: com.opengamma.analytics.financial.provider.calculator.blackforex.ForwardDeltaForexBlackSmileCalculator INSTANCE> = $r0;

        $r1 = staticinvoke <com.opengamma.analytics.financial.forex.provider.ForexOptionVanillaBlackSmileMethod: com.opengamma.analytics.financial.forex.provider.ForexOptionVanillaBlackSmileMethod getInstance()>();

        <com.opengamma.analytics.financial.provider.calculator.blackforex.ForwardDeltaForexBlackSmileCalculator: com.opengamma.analytics.financial.forex.provider.ForexOptionVanillaBlackSmileMethod METHOD_FXOPTIONVANILLA> = $r1;

        return;
    }
}
