public abstract class org.apache.commons.math3.util.ContinuedFraction extends java.lang.Object
{
    private static final double DEFAULT_EPSILON;

    protected void <init>()
    {
        org.apache.commons.math3.util.ContinuedFraction r0;

        r0 := @this: org.apache.commons.math3.util.ContinuedFraction;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    protected abstract double getA(int, double);

    protected abstract double getB(int, double);

    public double evaluate(double) throws org.apache.commons.math3.exception.ConvergenceException
    {
        org.apache.commons.math3.util.ContinuedFraction r0;
        double d0, $d1;

        r0 := @this: org.apache.commons.math3.util.ContinuedFraction;

        d0 := @parameter0: double;

        $d1 = virtualinvoke r0.<org.apache.commons.math3.util.ContinuedFraction: double evaluate(double,double,int)>(d0, 1.0E-8, 2147483647);

        return $d1;
    }

    public double evaluate(double, double) throws org.apache.commons.math3.exception.ConvergenceException
    {
        org.apache.commons.math3.util.ContinuedFraction r0;
        double d0, d1, $d2;

        r0 := @this: org.apache.commons.math3.util.ContinuedFraction;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        $d2 = virtualinvoke r0.<org.apache.commons.math3.util.ContinuedFraction: double evaluate(double,double,int)>(d0, d1, 2147483647);

        return $d2;
    }

    public double evaluate(double, int) throws org.apache.commons.math3.exception.ConvergenceException, org.apache.commons.math3.exception.MaxCountExceededException
    {
        org.apache.commons.math3.util.ContinuedFraction r0;
        double d0, $d1;
        int i0;

        r0 := @this: org.apache.commons.math3.util.ContinuedFraction;

        d0 := @parameter0: double;

        i0 := @parameter1: int;

        $d1 = virtualinvoke r0.<org.apache.commons.math3.util.ContinuedFraction: double evaluate(double,double,int)>(d0, 1.0E-8, i0);

        return $d1;
    }

    public double evaluate(double, double, int) throws org.apache.commons.math3.exception.ConvergenceException, org.apache.commons.math3.exception.MaxCountExceededException
    {
        org.apache.commons.math3.util.ContinuedFraction r0;
        double d0, d1, d3, d4, d5, $d6, $d7, $d8, $d9, d10, d11, d12, d13, d14, d15, d16;
        int i0, i2;
        boolean $z0, $z1, $z2, $z3, $z4;
        org.apache.commons.math3.exception.MaxCountExceededException $r1;
        org.apache.commons.math3.exception.util.LocalizedFormats $r2, $r8, $r12;
        java.lang.Integer $r3;
        java.lang.Object[] $r4, $r7, $r11;
        java.lang.Double $r5, $r9, $r13;
        byte $b1;
        org.apache.commons.math3.exception.ConvergenceException $r6, $r10;

        r0 := @this: org.apache.commons.math3.util.ContinuedFraction;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        i0 := @parameter2: int;

        d10 = virtualinvoke r0.<org.apache.commons.math3.util.ContinuedFraction: double getA(int,double)>(0, d0);

        $z0 = staticinvoke <org.apache.commons.math3.util.Precision: boolean equals(double,double,double)>(d10, 0.0, 1.0E-50);

        if $z0 == 0 goto label1;

        d10 = 1.0E-50;

     label1:
        i2 = 1;

        d11 = 0.0;

        d12 = d10;

        d13 = d10;

     label2:
        if i2 >= i0 goto label8;

        d3 = virtualinvoke r0.<org.apache.commons.math3.util.ContinuedFraction: double getA(int,double)>(i2, d0);

        d4 = virtualinvoke r0.<org.apache.commons.math3.util.ContinuedFraction: double getB(int,double)>(i2, d0);

        $d6 = d4 * d11;

        d14 = d3 + $d6;

        $z1 = staticinvoke <org.apache.commons.math3.util.Precision: boolean equals(double,double,double)>(d14, 0.0, 1.0E-50);

        if $z1 == 0 goto label3;

        d14 = 1.0E-50;

     label3:
        $d7 = d4 / d12;

        d15 = d3 + $d7;

        $z2 = staticinvoke <org.apache.commons.math3.util.Precision: boolean equals(double,double,double)>(d15, 0.0, 1.0E-50);

        if $z2 == 0 goto label4;

        d15 = 1.0E-50;

     label4:
        d16 = 1.0 / d14;

        d5 = d15 * d16;

        d13 = d10 * d5;

        $z3 = staticinvoke <java.lang.Double: boolean isInfinite(double)>(d13);

        if $z3 == 0 goto label5;

        $r10 = new org.apache.commons.math3.exception.ConvergenceException;

        $r12 = <org.apache.commons.math3.exception.util.LocalizedFormats: org.apache.commons.math3.exception.util.LocalizedFormats CONTINUED_FRACTION_INFINITY_DIVERGENCE>;

        $r11 = newarray (java.lang.Object)[1];

        $r13 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d0);

        $r11[0] = $r13;

        specialinvoke $r10.<org.apache.commons.math3.exception.ConvergenceException: void <init>(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])>($r12, $r11);

        throw $r10;

     label5:
        $z4 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d13);

        if $z4 == 0 goto label6;

        $r6 = new org.apache.commons.math3.exception.ConvergenceException;

        $r8 = <org.apache.commons.math3.exception.util.LocalizedFormats: org.apache.commons.math3.exception.util.LocalizedFormats CONTINUED_FRACTION_NAN_DIVERGENCE>;

        $r7 = newarray (java.lang.Object)[1];

        $r9 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d0);

        $r7[0] = $r9;

        specialinvoke $r6.<org.apache.commons.math3.exception.ConvergenceException: void <init>(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])>($r8, $r7);

        throw $r6;

     label6:
        $d8 = d5 - 1.0;

        $d9 = staticinvoke <org.apache.commons.math3.util.FastMath: double abs(double)>($d8);

        $b1 = $d9 cmpg d1;

        if $b1 >= 0 goto label7;

        goto label8;

     label7:
        d11 = d16;

        d12 = d15;

        d10 = d13;

        i2 = i2 + 1;

        goto label2;

     label8:
        if i2 < i0 goto label9;

        $r1 = new org.apache.commons.math3.exception.MaxCountExceededException;

        $r2 = <org.apache.commons.math3.exception.util.LocalizedFormats: org.apache.commons.math3.exception.util.LocalizedFormats NON_CONVERGENT_CONTINUED_FRACTION>;

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r4 = newarray (java.lang.Object)[1];

        $r5 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d0);

        $r4[0] = $r5;

        specialinvoke $r1.<org.apache.commons.math3.exception.MaxCountExceededException: void <init>(org.apache.commons.math3.exception.util.Localizable,java.lang.Number,java.lang.Object[])>($r2, $r3, $r4);

        throw $r1;

     label9:
        return d13;
    }

    public static void <clinit>()
    {
        <org.apache.commons.math3.util.ContinuedFraction: double DEFAULT_EPSILON> = 1.0E-8;

        return;
    }
}
