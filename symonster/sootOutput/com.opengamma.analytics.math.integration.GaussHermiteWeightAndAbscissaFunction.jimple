public class com.opengamma.analytics.math.integration.GaussHermiteWeightAndAbscissaFunction extends java.lang.Object implements com.opengamma.analytics.math.integration.QuadratureWeightAndAbscissaFunction
{
    private static final com.opengamma.analytics.math.function.special.OrthonormalHermitePolynomialFunction HERMITE;
    private static final com.opengamma.analytics.math.rootfinding.NewtonRaphsonSingleRootFinder ROOT_FINDER;

    public void <init>()
    {
        com.opengamma.analytics.math.integration.GaussHermiteWeightAndAbscissaFunction r0;

        r0 := @this: com.opengamma.analytics.math.integration.GaussHermiteWeightAndAbscissaFunction;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public com.opengamma.analytics.math.integration.GaussianQuadratureData generate(int)
    {
        com.opengamma.analytics.math.integration.GaussHermiteWeightAndAbscissaFunction r0;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, i10;
        double[] r1, r2;
        boolean z0, $z1, $z2;
        com.opengamma.util.tuple.Pair[] r3;
        com.opengamma.util.tuple.Pair r4;
        com.opengamma.analytics.math.function.DoubleFunction1D r5, r6;
        double d0, $d1, $d2, $d3, $d4, $d5, $d6, d7, d8, d9;
        com.opengamma.analytics.math.function.special.OrthonormalHermitePolynomialFunction $r7;
        java.lang.Object $r8, $r9, $r12, $r18;
        com.opengamma.analytics.math.integration.GaussianQuadratureData $r10;
        java.lang.Double $r11, $r13, $r15, $r16, $r17, $r19;
        com.opengamma.analytics.math.rootfinding.NewtonRaphsonSingleRootFinder $r14;
        byte $b9;

        r0 := @this: com.opengamma.analytics.math.integration.GaussHermiteWeightAndAbscissaFunction;

        i0 := @parameter0: int;

        if i0 <= 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        staticinvoke <org.apache.commons.lang.Validate: void isTrue(boolean)>($z1);

        r1 = newarray (double)[i0];

        r2 = newarray (double)[i0];

        $i2 = i0 % 2;

        if $i2 == 0 goto label3;

        $z2 = 1;

        goto label4;

     label3:
        $z2 = 0;

     label4:
        z0 = $z2;

        $i3 = i0 + 1;

        $i4 = $i3 / 2;

        if $z2 == 0 goto label5;

        $b9 = 1;

        goto label6;

     label5:
        $b9 = 0;

     label6:
        i1 = $i4 - $b9;

        $r7 = <com.opengamma.analytics.math.integration.GaussHermiteWeightAndAbscissaFunction: com.opengamma.analytics.math.function.special.OrthonormalHermitePolynomialFunction HERMITE>;

        r3 = virtualinvoke $r7.<com.opengamma.analytics.math.function.special.OrthonormalHermitePolynomialFunction: com.opengamma.util.tuple.Pair[] getPolynomialsAndFirstDerivative(int)>(i0);

        r4 = r3[i0];

        $r8 = virtualinvoke r4.<com.opengamma.util.tuple.Pair: java.lang.Object getFirst()>();

        r5 = (com.opengamma.analytics.math.function.DoubleFunction1D) $r8;

        $r9 = virtualinvoke r4.<com.opengamma.util.tuple.Pair: java.lang.Object getSecond()>();

        r6 = (com.opengamma.analytics.math.function.DoubleFunction1D) $r9;

        d7 = 0.0;

        i10 = 0;

     label7:
        if i10 >= i1 goto label8;

        d8 = specialinvoke r0.<com.opengamma.analytics.math.integration.GaussHermiteWeightAndAbscissaFunction: double getInitialRootGuess(double,int,int,double[])>(d7, i10, i0, r1);

        $r14 = <com.opengamma.analytics.math.integration.GaussHermiteWeightAndAbscissaFunction: com.opengamma.analytics.math.rootfinding.NewtonRaphsonSingleRootFinder ROOT_FINDER>;

        $r15 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d8);

        $r16 = virtualinvoke $r14.<com.opengamma.analytics.math.rootfinding.NewtonRaphsonSingleRootFinder: java.lang.Double getRoot(com.opengamma.analytics.math.function.DoubleFunction1D,com.opengamma.analytics.math.function.DoubleFunction1D,java.lang.Double)>(r5, r6, $r15);

        d7 = virtualinvoke $r16.<java.lang.Double: double doubleValue()>();

        $r17 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d7);

        $r18 = virtualinvoke r6.<com.opengamma.analytics.math.function.DoubleFunction1D: java.lang.Object evaluate(java.lang.Object)>($r17);

        $r19 = (java.lang.Double) $r18;

        d0 = virtualinvoke $r19.<java.lang.Double: double doubleValue()>();

        $d3 = neg d7;

        r1[i10] = $d3;

        $i5 = i0 - 1;

        $i6 = $i5 - i10;

        r1[$i6] = d7;

        $d4 = d0 * d0;

        $d5 = 2.0 / $d4;

        r2[i10] = $d5;

        $i7 = i0 - 1;

        $i8 = $i7 - i10;

        $d6 = r2[i10];

        r2[$i8] = $d6;

        i10 = i10 + 1;

        goto label7;

     label8:
        if z0 == 0 goto label9;

        $r11 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(0.0);

        $r12 = virtualinvoke r6.<com.opengamma.analytics.math.function.DoubleFunction1D: java.lang.Object evaluate(java.lang.Object)>($r11);

        $r13 = (java.lang.Double) $r12;

        d9 = virtualinvoke $r13.<java.lang.Double: double doubleValue()>();

        $d1 = 2.0 / d9;

        $d2 = $d1 / d9;

        r2[i1] = $d2;

     label9:
        $r10 = new com.opengamma.analytics.math.integration.GaussianQuadratureData;

        specialinvoke $r10.<com.opengamma.analytics.math.integration.GaussianQuadratureData: void <init>(double[],double[])>(r1, r2);

        return $r10;
    }

    private double getInitialRootGuess(double, int, int, double[])
    {
        com.opengamma.analytics.math.integration.GaussHermiteWeightAndAbscissaFunction r0;
        double d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21, $d22;
        int i0, i1, $i2, $i3, $i4, $i5, $i6;
        double[] r1;

        r0 := @this: com.opengamma.analytics.math.integration.GaussHermiteWeightAndAbscissaFunction;

        d0 := @parameter0: double;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r1 := @parameter3: double[];

        if i0 != 0 goto label1;

        $i3 = 2 * i1;

        $i4 = $i3 + 1;

        $d17 = (double) $i4;

        $d18 = staticinvoke <java.lang.Math: double sqrt(double)>($d17);

        $i5 = 2 * i1;

        $i6 = $i5 + 1;

        $d19 = (double) $i6;

        $d20 = staticinvoke <java.lang.Math: double pow(double,double)>($d19, -0.16666666666666666);

        $d21 = 1.85575 * $d20;

        $d22 = $d18 - $d21;

        return $d22;

     label1:
        if i0 != 1 goto label2;

        $d12 = (double) i1;

        $d13 = staticinvoke <java.lang.Math: double pow(double,double)>($d12, 0.426);

        $d14 = 1.14 * $d13;

        $d15 = $d14 / d0;

        $d16 = d0 - $d15;

        return $d16;

     label2:
        if i0 != 2 goto label3;

        $d10 = 1.86 * d0;

        $d8 = r1[0];

        $d9 = 0.86 * $d8;

        $d11 = $d10 + $d9;

        return $d11;

     label3:
        if i0 != 3 goto label4;

        $d6 = 1.91 * d0;

        $d4 = r1[1];

        $d5 = 0.91 * $d4;

        $d7 = $d6 + $d5;

        return $d7;

     label4:
        $d2 = 2.0 * d0;

        $i2 = i0 - 2;

        $d1 = r1[$i2];

        $d3 = $d2 + $d1;

        return $d3;
    }

    static void <clinit>()
    {
        com.opengamma.analytics.math.function.special.OrthonormalHermitePolynomialFunction $r0;
        com.opengamma.analytics.math.rootfinding.NewtonRaphsonSingleRootFinder $r1;

        $r0 = new com.opengamma.analytics.math.function.special.OrthonormalHermitePolynomialFunction;

        specialinvoke $r0.<com.opengamma.analytics.math.function.special.OrthonormalHermitePolynomialFunction: void <init>()>();

        <com.opengamma.analytics.math.integration.GaussHermiteWeightAndAbscissaFunction: com.opengamma.analytics.math.function.special.OrthonormalHermitePolynomialFunction HERMITE> = $r0;

        $r1 = new com.opengamma.analytics.math.rootfinding.NewtonRaphsonSingleRootFinder;

        specialinvoke $r1.<com.opengamma.analytics.math.rootfinding.NewtonRaphsonSingleRootFinder: void <init>(double)>(1.0E-12);

        <com.opengamma.analytics.math.integration.GaussHermiteWeightAndAbscissaFunction: com.opengamma.analytics.math.rootfinding.NewtonRaphsonSingleRootFinder ROOT_FINDER> = $r1;

        return;
    }
}
