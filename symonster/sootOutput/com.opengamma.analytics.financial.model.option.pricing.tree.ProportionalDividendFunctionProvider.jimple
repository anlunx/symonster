public class com.opengamma.analytics.financial.model.option.pricing.tree.ProportionalDividendFunctionProvider extends com.opengamma.analytics.financial.model.option.pricing.tree.DividendFunctionProvider
{

    public void <init>(double[], double[])
    {
        com.opengamma.analytics.financial.model.option.pricing.tree.ProportionalDividendFunctionProvider r0;
        double[] r1, r2;

        r0 := @this: com.opengamma.analytics.financial.model.option.pricing.tree.ProportionalDividendFunctionProvider;

        r1 := @parameter0: double[];

        r2 := @parameter1: double[];

        specialinvoke r0.<com.opengamma.analytics.financial.model.option.pricing.tree.DividendFunctionProvider: void <init>(double[],double[])>(r1, r2);

        return;
    }

    public double spotModifier(double, double)
    {
        com.opengamma.analytics.financial.model.option.pricing.tree.ProportionalDividendFunctionProvider r0;
        double d0, d1, $d2, $d3, d4;
        double[] r1;
        int i0, i1;

        r0 := @this: com.opengamma.analytics.financial.model.option.pricing.tree.ProportionalDividendFunctionProvider;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        d4 = d0;

        r1 = virtualinvoke r0.<com.opengamma.analytics.financial.model.option.pricing.tree.ProportionalDividendFunctionProvider: double[] getDividends()>();

        i0 = lengthof r1;

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        $d2 = r1[i1];

        $d3 = 1.0 - $d2;

        d4 = d4 * $d3;

        i1 = i1 + 1;

        goto label1;

     label2:
        return d4;
    }

    public double dividendCorrections(double, double, double, int)
    {
        com.opengamma.analytics.financial.model.option.pricing.tree.ProportionalDividendFunctionProvider r0;
        double d0, d1, d2, d3, d4, $d5;
        int i0;
        double[] $r1;

        r0 := @this: com.opengamma.analytics.financial.model.option.pricing.tree.ProportionalDividendFunctionProvider;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        d2 := @parameter2: double;

        i0 := @parameter3: int;

        $r1 = virtualinvoke r0.<com.opengamma.analytics.financial.model.option.pricing.tree.ProportionalDividendFunctionProvider: double[] getDividends()>();

        d3 = $r1[i0];

        $d5 = 1.0 - d3;

        d4 = d0 / $d5;

        return d4;
    }

    public double[] getAssetPricesForDelta(double, double, int[], double, double, double)
    {
        com.opengamma.analytics.financial.model.option.pricing.tree.ProportionalDividendFunctionProvider r0;
        double d0, d1, d2, d3, d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14;
        int[] r1;
        double[] r2, r3;
        int $i0;

        r0 := @this: com.opengamma.analytics.financial.model.option.pricing.tree.ProportionalDividendFunctionProvider;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        r1 := @parameter2: int[];

        d2 := @parameter3: double;

        d3 := @parameter4: double;

        d4 := @parameter5: double;

        r2 = newarray (double)[2];

        r3 = virtualinvoke r0.<com.opengamma.analytics.financial.model.option.pricing.tree.ProportionalDividendFunctionProvider: double[] getDividends()>();

        $i0 = r1[0];

        if $i0 != 0 goto label1;

        $d7 = r3[0];

        $d8 = 1.0 - $d7;

        $d9 = d0 * $d8;

        $d10 = $d9 * d3;

        r2[0] = $d10;

        $d11 = r3[0];

        $d12 = 1.0 - $d11;

        $d13 = d0 * $d12;

        $d14 = $d13 * d2;

        r2[1] = $d14;

        goto label2;

     label1:
        $d5 = d0 * d3;

        r2[0] = $d5;

        $d6 = d0 * d2;

        r2[1] = $d6;

     label2:
        return r2;
    }

    public double[] getAssetPricesForGamma(double, double, int[], double, double, double)
    {
        com.opengamma.analytics.financial.model.option.pricing.tree.ProportionalDividendFunctionProvider r0;
        double d0, d1, d2, d3, d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21, $d22, $d23, $d24, $d25, $d26, $d27, $d28, $d29, $d30, $d31, $d32, $d33, $d34, $d35, $d36, $d37, $d38, $d39, $d40, $d41, $d42, $d43, $d44, $d45, $d46, $d47, $d48, $d49;
        int[] r1;
        double[] r2, r3;
        int $i0, $i1;

        r0 := @this: com.opengamma.analytics.financial.model.option.pricing.tree.ProportionalDividendFunctionProvider;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        r1 := @parameter2: int[];

        d2 := @parameter3: double;

        d3 := @parameter4: double;

        d4 := @parameter5: double;

        r2 = newarray (double)[3];

        r3 = virtualinvoke r0.<com.opengamma.analytics.financial.model.option.pricing.tree.ProportionalDividendFunctionProvider: double[] getDividends()>();

        $i0 = r1[1];

        if $i0 != 1 goto label1;

        $d26 = r3[0];

        $d27 = 1.0 - $d26;

        $d30 = d0 * $d27;

        $d28 = r3[1];

        $d29 = 1.0 - $d28;

        $d31 = $d30 * $d29;

        $d32 = $d31 * d3;

        $d33 = $d32 * d3;

        r2[0] = $d33;

        $d34 = r3[0];

        $d35 = 1.0 - $d34;

        $d38 = d0 * $d35;

        $d36 = r3[1];

        $d37 = 1.0 - $d36;

        $d39 = $d38 * $d37;

        $d40 = $d39 * d2;

        $d41 = $d40 * d3;

        r2[1] = $d41;

        $d42 = r3[0];

        $d43 = 1.0 - $d42;

        $d46 = d0 * $d43;

        $d44 = r3[1];

        $d45 = 1.0 - $d44;

        $d47 = $d46 * $d45;

        $d48 = $d47 * d2;

        $d49 = $d48 * d2;

        r2[2] = $d49;

        goto label3;

     label1:
        $i1 = r1[0];

        if $i1 != 1 goto label2;

        $d11 = r3[0];

        $d12 = 1.0 - $d11;

        $d13 = d0 * $d12;

        $d14 = $d13 * d3;

        $d15 = $d14 * d3;

        r2[0] = $d15;

        $d16 = r3[0];

        $d17 = 1.0 - $d16;

        $d18 = d0 * $d17;

        $d19 = $d18 * d2;

        $d20 = $d19 * d3;

        r2[1] = $d20;

        $d21 = r3[0];

        $d22 = 1.0 - $d21;

        $d23 = d0 * $d22;

        $d24 = $d23 * d2;

        $d25 = $d24 * d2;

        r2[2] = $d25;

        goto label3;

     label2:
        $d5 = d0 * d3;

        $d6 = $d5 * d3;

        r2[0] = $d6;

        $d7 = d0 * d2;

        $d8 = $d7 * d3;

        r2[1] = $d8;

        $d9 = d0 * d2;

        $d10 = $d9 * d2;

        r2[2] = $d10;

     label3:
        return r2;
    }

    public double[] getAssetPricesForDelta(double, double, int[], double, double, double, double)
    {
        com.opengamma.analytics.financial.model.option.pricing.tree.ProportionalDividendFunctionProvider r0;
        double d0, d1, d2, d3, d4, d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20;
        int[] r1;
        double[] r2, r3;
        int $i0;

        r0 := @this: com.opengamma.analytics.financial.model.option.pricing.tree.ProportionalDividendFunctionProvider;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        r1 := @parameter2: int[];

        d2 := @parameter3: double;

        d3 := @parameter4: double;

        d4 := @parameter5: double;

        d5 := @parameter6: double;

        r2 = newarray (double)[3];

        r3 = virtualinvoke r0.<com.opengamma.analytics.financial.model.option.pricing.tree.ProportionalDividendFunctionProvider: double[] getDividends()>();

        $i0 = r1[0];

        if $i0 != 0 goto label1;

        $d9 = r3[0];

        $d10 = 1.0 - $d9;

        $d11 = d0 * $d10;

        $d12 = $d11 * d4;

        r2[0] = $d12;

        $d13 = r3[0];

        $d14 = 1.0 - $d13;

        $d15 = d0 * $d14;

        $d16 = $d15 * d3;

        r2[1] = $d16;

        $d17 = r3[0];

        $d18 = 1.0 - $d17;

        $d19 = d0 * $d18;

        $d20 = $d19 * d2;

        r2[2] = $d20;

        goto label2;

     label1:
        $d6 = d0 * d4;

        r2[0] = $d6;

        $d7 = d0 * d3;

        r2[1] = $d7;

        $d8 = d0 * d2;

        r2[2] = $d8;

     label2:
        return r2;
    }

    public double[] getAssetPricesForGamma(double, double, int[], double, double, double, double)
    {
        com.opengamma.analytics.financial.model.option.pricing.tree.ProportionalDividendFunctionProvider r0;
        double d0, d1, d2, d3, d4, d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, d20, d21, $d22, $d23, $d24, $d25, $d26;
        int[] r1;
        double[] r2, r3;
        int $i0, $i1;

        r0 := @this: com.opengamma.analytics.financial.model.option.pricing.tree.ProportionalDividendFunctionProvider;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        r1 := @parameter2: int[];

        d2 := @parameter3: double;

        d3 := @parameter4: double;

        d4 := @parameter5: double;

        d5 := @parameter6: double;

        r2 = newarray (double)[5];

        r3 = virtualinvoke r0.<com.opengamma.analytics.financial.model.option.pricing.tree.ProportionalDividendFunctionProvider: double[] getDividends()>();

        d20 = d0 * d4;

        d21 = d0 * d2;

        $i0 = r1[1];

        if $i0 != 1 goto label1;

        $d10 = r3[0];

        $d13 = 1.0 - $d10;

        $d11 = r3[1];

        $d12 = 1.0 - $d11;

        $d14 = $d13 * $d12;

        d20 = d20 * $d14;

        $d15 = r3[0];

        $d18 = 1.0 - $d15;

        $d16 = r3[1];

        $d17 = 1.0 - $d16;

        $d19 = $d18 * $d17;

        d21 = d21 * $d19;

        goto label2;

     label1:
        $i1 = r1[0];

        if $i1 != 1 goto label2;

        $d6 = r3[0];

        $d7 = 1.0 - $d6;

        d20 = d20 * $d7;

        $d8 = r3[0];

        $d9 = 1.0 - $d8;

        d21 = d21 * $d9;

     label2:
        $d22 = d20 * d4;

        r2[0] = $d22;

        $d23 = d20 * d3;

        r2[1] = $d23;

        $d24 = d20 * d2;

        r2[2] = $d24;

        $d25 = d21 * d3;

        r2[3] = $d25;

        $d26 = d21 * d2;

        r2[4] = $d26;

        return r2;
    }

    public int hashCode()
    {
        com.opengamma.analytics.financial.model.option.pricing.tree.ProportionalDividendFunctionProvider r0;
        int $i0;

        r0 := @this: com.opengamma.analytics.financial.model.option.pricing.tree.ProportionalDividendFunctionProvider;

        $i0 = specialinvoke r0.<com.opengamma.analytics.financial.model.option.pricing.tree.DividendFunctionProvider: int hashCode()>();

        return $i0;
    }

    public boolean equals(java.lang.Object)
    {
        com.opengamma.analytics.financial.model.option.pricing.tree.ProportionalDividendFunctionProvider r0;
        java.lang.Object r1;
        boolean $z0, $z1;

        r0 := @this: com.opengamma.analytics.financial.model.option.pricing.tree.ProportionalDividendFunctionProvider;

        r1 := @parameter0: java.lang.Object;

        if r0 != r1 goto label1;

        return 1;

     label1:
        if r1 != null goto label2;

        return 0;

     label2:
        $z0 = r1 instanceof com.opengamma.analytics.financial.model.option.pricing.tree.ProportionalDividendFunctionProvider;

        if $z0 != 0 goto label3;

        return 0;

     label3:
        $z1 = specialinvoke r0.<com.opengamma.analytics.financial.model.option.pricing.tree.DividendFunctionProvider: boolean equals(java.lang.Object)>(r1);

        return $z1;
    }
}
