public abstract class com.opengamma.analytics.math.function.ParameterizedFunction extends java.lang.Object
{

    public void <init>()
    {
        com.opengamma.analytics.math.function.ParameterizedFunction r0;

        r0 := @this: com.opengamma.analytics.math.function.ParameterizedFunction;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public abstract java.lang.Object evaluate(java.lang.Object, java.lang.Object);

    public com.opengamma.analytics.math.function.Function1D asFunctionOfParameters(java.lang.Object)
    {
        com.opengamma.analytics.math.function.ParameterizedFunction r0;
        java.lang.Object r1;
        com.opengamma.analytics.math.function.ParameterizedFunction$1 $r2;

        r0 := @this: com.opengamma.analytics.math.function.ParameterizedFunction;

        r1 := @parameter0: java.lang.Object;

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object)>(r1);

        $r2 = new com.opengamma.analytics.math.function.ParameterizedFunction$1;

        specialinvoke $r2.<com.opengamma.analytics.math.function.ParameterizedFunction$1: void <init>(com.opengamma.analytics.math.function.ParameterizedFunction,java.lang.Object)>(r0, r1);

        return $r2;
    }

    public com.opengamma.analytics.math.function.Function1D asFunctionOfArguments(java.lang.Object)
    {
        com.opengamma.analytics.math.function.ParameterizedFunction r0;
        java.lang.Object r1;
        com.opengamma.analytics.math.function.ParameterizedFunction$2 $r2;

        r0 := @this: com.opengamma.analytics.math.function.ParameterizedFunction;

        r1 := @parameter0: java.lang.Object;

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object)>(r1);

        $r2 = new com.opengamma.analytics.math.function.ParameterizedFunction$2;

        specialinvoke $r2.<com.opengamma.analytics.math.function.ParameterizedFunction$2: void <init>(com.opengamma.analytics.math.function.ParameterizedFunction,java.lang.Object)>(r0, r1);

        return $r2;
    }

    public abstract int getNumberOfParameters();
}
