public final class com.opengamma.analytics.financial.forex.method.ForexOptionSingleBarrierBlackMethod extends java.lang.Object implements com.opengamma.analytics.financial.forex.method.ForexPricingMethod
{
    private static final com.opengamma.analytics.financial.forex.method.ForexOptionSingleBarrierBlackMethod INSTANCE;
    private static final double DEFAULT_THETA_SHIFT;
    private static final double DEFAULT_GAMMA_SHIFT;
    private static final double DEFAULT_VOMMA_SHIFT;
    private static final double DEFAULT_VANNA_SHIFT;
    private static final com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackBarrierPriceFunction BARRIER_FUNCTION;

    public static com.opengamma.analytics.financial.forex.method.ForexOptionSingleBarrierBlackMethod getInstance()
    {
        com.opengamma.analytics.financial.forex.method.ForexOptionSingleBarrierBlackMethod $r0;

        $r0 = <com.opengamma.analytics.financial.forex.method.ForexOptionSingleBarrierBlackMethod: com.opengamma.analytics.financial.forex.method.ForexOptionSingleBarrierBlackMethod INSTANCE>;

        return $r0;
    }

    private void <init>()
    {
        com.opengamma.analytics.financial.forex.method.ForexOptionSingleBarrierBlackMethod r0;

        r0 := @this: com.opengamma.analytics.financial.forex.method.ForexOptionSingleBarrierBlackMethod;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public com.opengamma.util.money.MultipleCurrencyAmount presentValue(com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier, com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle)
    {
        com.opengamma.analytics.financial.forex.method.ForexOptionSingleBarrierBlackMethod r0;
        com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier r1;
        com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle r2;
        double d0, d1, d2, d3, d4, d5, d6, d7, d8, d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21, $d22, $d23, d24, d25;
        com.opengamma.util.money.CurrencyAmount r3;
        com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla $r6, $r8, $r14, $r23, $r26, $r29, $r30, $r32, $r34;
        com.opengamma.analytics.financial.forex.derivative.Forex $r7, $r9, $r15, $r24, $r35;
        com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed $r10, $r16, $r25;
        java.lang.String $r11, $r17;
        com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve $r12, $r18;
        java.lang.Double $r13, $r19;
        com.opengamma.analytics.financial.forex.method.FXMatrix $r20;
        com.opengamma.util.money.Currency $r21, $r22, $r27, $r28, $r36;
        boolean $z0;
        com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackBarrierPriceFunction $r31;
        com.opengamma.analytics.financial.model.option.definition.Barrier $r33;
        com.opengamma.util.money.CurrencyAmount[] $r37;
        com.opengamma.util.money.MultipleCurrencyAmount $r38;

        r0 := @this: com.opengamma.analytics.financial.forex.method.ForexOptionSingleBarrierBlackMethod;

        r1 := @parameter0: com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier;

        r2 := @parameter1: com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "Forex option");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, "Smile");

        $r6 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla getUnderlyingOption()>();

        $r7 = virtualinvoke $r6.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        d0 = virtualinvoke $r7.<com.opengamma.analytics.financial.forex.derivative.Forex: double getPaymentTime()>();

        $r8 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla getUnderlyingOption()>();

        $r9 = virtualinvoke $r8.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        $r10 = virtualinvoke $r9.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed getPaymentCurrency2()>();

        $r11 = virtualinvoke $r10.<com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed: java.lang.String getFundingCurveName()>();

        $r12 = virtualinvoke r2.<com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle: com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve getCurve(java.lang.String)>($r11);

        $r13 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d0);

        d1 = virtualinvoke $r12.<com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve: double getInterestRate(java.lang.Object)>($r13);

        $r14 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla getUnderlyingOption()>();

        $r15 = virtualinvoke $r14.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        $r16 = virtualinvoke $r15.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed getPaymentCurrency1()>();

        $r17 = virtualinvoke $r16.<com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed: java.lang.String getFundingCurveName()>();

        $r18 = virtualinvoke r2.<com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle: com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve getCurve(java.lang.String)>($r17);

        $r19 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d0);

        d2 = virtualinvoke $r18.<com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve: double getInterestRate(java.lang.Object)>($r19);

        $d11 = neg d1;

        $d12 = $d11 * d0;

        d3 = staticinvoke <java.lang.Math: double exp(double)>($d12);

        $d13 = neg d2;

        $d14 = $d13 * d0;

        d4 = staticinvoke <java.lang.Math: double exp(double)>($d14);

        $r20 = virtualinvoke r2.<com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle: com.opengamma.analytics.financial.forex.method.FXMatrix getFxRates()>();

        $r21 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.util.money.Currency getCurrency1()>();

        $r22 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.util.money.Currency getCurrency2()>();

        d5 = virtualinvoke $r20.<com.opengamma.analytics.financial.forex.method.FXMatrix: double getFxRate(com.opengamma.util.money.Currency,com.opengamma.util.money.Currency)>($r21, $r22);

        $d15 = d5 * d4;

        d6 = $d15 / d3;

        $r23 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla getUnderlyingOption()>();

        $r24 = virtualinvoke $r23.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        $r25 = virtualinvoke $r24.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed getPaymentCurrency1()>();

        d7 = virtualinvoke $r25.<com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed: double getAmount()>();

        $d16 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: double getRebate()>();

        $d17 = staticinvoke <java.lang.Math: double abs(double)>(d7);

        d8 = $d16 / $d17;

        $r26 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla getUnderlyingOption()>();

        $z0 = virtualinvoke $r26.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: boolean isLong()>();

        if $z0 == 0 goto label1;

        $d23 = 1.0;

        goto label2;

     label1:
        $d23 = -1.0;

     label2:
        $r27 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.util.money.Currency getCurrency1()>();

        $r28 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.util.money.Currency getCurrency2()>();

        $r29 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla getUnderlyingOption()>();

        $d18 = virtualinvoke $r29.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: double getTimeToExpiry()>();

        $r30 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla getUnderlyingOption()>();

        $d19 = virtualinvoke $r30.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: double getStrike()>();

        d10 = staticinvoke <com.opengamma.analytics.financial.forex.method.FXVolatilityUtils: double getVolatility(com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle,com.opengamma.util.money.Currency,com.opengamma.util.money.Currency,double,double,double)>(r2, $r27, $r28, $d18, $d19, d6);

        $r31 = <com.opengamma.analytics.financial.forex.method.ForexOptionSingleBarrierBlackMethod: com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackBarrierPriceFunction BARRIER_FUNCTION>;

        $r32 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla getUnderlyingOption()>();

        $r33 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.analytics.financial.model.option.definition.Barrier getBarrier()>();

        $d20 = d1 - d2;

        d24 = virtualinvoke $r31.<com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackBarrierPriceFunction: double getPrice(com.opengamma.analytics.financial.model.option.pricing.analytic.formula.EuropeanVanillaOption,com.opengamma.analytics.financial.model.option.definition.Barrier,double,double,double,double,double)>($r32, $r33, d8, d5, $d20, d1, d10);

        $d21 = staticinvoke <java.lang.Math: double abs(double)>(d7);

        $d22 = $d21 * $d23;

        d25 = d24 * $d22;

        $r34 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla getUnderlyingOption()>();

        $r35 = virtualinvoke $r34.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        $r36 = virtualinvoke $r35.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.util.money.Currency getCurrency2()>();

        r3 = staticinvoke <com.opengamma.util.money.CurrencyAmount: com.opengamma.util.money.CurrencyAmount of(com.opengamma.util.money.Currency,double)>($r36, d25);

        $r37 = newarray (com.opengamma.util.money.CurrencyAmount)[1];

        $r37[0] = r3;

        $r38 = staticinvoke <com.opengamma.util.money.MultipleCurrencyAmount: com.opengamma.util.money.MultipleCurrencyAmount of(com.opengamma.util.money.CurrencyAmount[])>($r37);

        return $r38;
    }

    public com.opengamma.util.money.MultipleCurrencyAmount presentValue(com.opengamma.analytics.financial.interestrate.InstrumentDerivative, com.opengamma.analytics.financial.interestrate.YieldCurveBundle)
    {
        com.opengamma.analytics.financial.forex.method.ForexOptionSingleBarrierBlackMethod r0;
        com.opengamma.analytics.financial.interestrate.InstrumentDerivative r1;
        com.opengamma.analytics.financial.interestrate.YieldCurveBundle r2;
        boolean $z0, $z1;
        com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle $r3;
        com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier $r4;
        com.opengamma.util.money.MultipleCurrencyAmount $r5;

        r0 := @this: com.opengamma.analytics.financial.forex.method.ForexOptionSingleBarrierBlackMethod;

        r1 := @parameter0: com.opengamma.analytics.financial.interestrate.InstrumentDerivative;

        r2 := @parameter1: com.opengamma.analytics.financial.interestrate.YieldCurveBundle;

        $z0 = r1 instanceof com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z0, "Single barrier Forex option");

        $z1 = r2 instanceof com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z1, "Smile delta data bundle required");

        $r4 = (com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier) r1;

        $r3 = (com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle) r2;

        $r5 = virtualinvoke r0.<com.opengamma.analytics.financial.forex.method.ForexOptionSingleBarrierBlackMethod: com.opengamma.util.money.MultipleCurrencyAmount presentValue(com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier,com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle)>($r4, $r3);

        return $r5;
    }

    public com.opengamma.util.money.MultipleCurrencyAmount currencyExposure(com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier, com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle)
    {
        com.opengamma.analytics.financial.forex.method.ForexOptionSingleBarrierBlackMethod r0;
        com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier r1;
        com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle r2;
        double d0, d1, d2, d3, d4, d5, d6, d8, d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21, $d22, $d23, $d24, $d25, $d26, $d27, $d28, $d29, $d30, $d31, $d32, $d33, $d34, d35, d36;
        double[] r3;
        com.opengamma.util.money.CurrencyAmount[] r4;
        com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla $r7, $r9, $r15, $r24, $r27, $r30, $r31, $r33, $r35, $r39, $r42;
        com.opengamma.analytics.financial.forex.derivative.Forex $r8, $r10, $r16, $r25, $r36, $r40, $r43;
        com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed $r11, $r17, $r26, $r44;
        java.lang.String $r12, $r18;
        com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve $r13, $r19;
        java.lang.Double $r14, $r20;
        com.opengamma.analytics.financial.forex.method.FXMatrix $r21;
        com.opengamma.util.money.Currency $r22, $r23, $r28, $r29, $r37, $r41;
        boolean $z0;
        com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackBarrierPriceFunction $r32;
        com.opengamma.analytics.financial.model.option.definition.Barrier $r34;
        com.opengamma.util.money.CurrencyAmount $r38, $r45;
        com.opengamma.util.money.MultipleCurrencyAmount $r46;

        r0 := @this: com.opengamma.analytics.financial.forex.method.ForexOptionSingleBarrierBlackMethod;

        r1 := @parameter0: com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier;

        r2 := @parameter1: com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "Forex option");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, "Smile");

        $r7 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla getUnderlyingOption()>();

        $r8 = virtualinvoke $r7.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        d0 = virtualinvoke $r8.<com.opengamma.analytics.financial.forex.derivative.Forex: double getPaymentTime()>();

        $r9 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla getUnderlyingOption()>();

        $r10 = virtualinvoke $r9.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        $r11 = virtualinvoke $r10.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed getPaymentCurrency2()>();

        $r12 = virtualinvoke $r11.<com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed: java.lang.String getFundingCurveName()>();

        $r13 = virtualinvoke r2.<com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle: com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve getCurve(java.lang.String)>($r12);

        $r14 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d0);

        d1 = virtualinvoke $r13.<com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve: double getInterestRate(java.lang.Object)>($r14);

        $r15 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla getUnderlyingOption()>();

        $r16 = virtualinvoke $r15.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        $r17 = virtualinvoke $r16.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed getPaymentCurrency1()>();

        $r18 = virtualinvoke $r17.<com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed: java.lang.String getFundingCurveName()>();

        $r19 = virtualinvoke r2.<com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle: com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve getCurve(java.lang.String)>($r18);

        $r20 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d0);

        d2 = virtualinvoke $r19.<com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve: double getInterestRate(java.lang.Object)>($r20);

        $r21 = virtualinvoke r2.<com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle: com.opengamma.analytics.financial.forex.method.FXMatrix getFxRates()>();

        $r22 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.util.money.Currency getCurrency1()>();

        $r23 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.util.money.Currency getCurrency2()>();

        d3 = virtualinvoke $r21.<com.opengamma.analytics.financial.forex.method.FXMatrix: double getFxRate(com.opengamma.util.money.Currency,com.opengamma.util.money.Currency)>($r22, $r23);

        $d10 = neg d2;

        $d11 = $d10 * d0;

        $d12 = staticinvoke <java.lang.Math: double exp(double)>($d11);

        $d15 = d3 * $d12;

        $d13 = neg d1;

        $d14 = $d13 * d0;

        $d16 = staticinvoke <java.lang.Math: double exp(double)>($d14);

        d4 = $d15 / $d16;

        $r24 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla getUnderlyingOption()>();

        $r25 = virtualinvoke $r24.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        $r26 = virtualinvoke $r25.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed getPaymentCurrency1()>();

        d5 = virtualinvoke $r26.<com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed: double getAmount()>();

        $d17 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: double getRebate()>();

        $d18 = staticinvoke <java.lang.Math: double abs(double)>(d5);

        d6 = $d17 / $d18;

        $r27 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla getUnderlyingOption()>();

        $z0 = virtualinvoke $r27.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: boolean isLong()>();

        if $z0 == 0 goto label1;

        $d34 = 1.0;

        goto label2;

     label1:
        $d34 = -1.0;

     label2:
        $r28 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.util.money.Currency getCurrency1()>();

        $r29 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.util.money.Currency getCurrency2()>();

        $r30 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla getUnderlyingOption()>();

        $d19 = virtualinvoke $r30.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: double getTimeToExpiry()>();

        $r31 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla getUnderlyingOption()>();

        $d20 = virtualinvoke $r31.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: double getStrike()>();

        d8 = staticinvoke <com.opengamma.analytics.financial.forex.method.FXVolatilityUtils: double getVolatility(com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle,com.opengamma.util.money.Currency,com.opengamma.util.money.Currency,double,double,double)>(r2, $r28, $r29, $d19, $d20, d4);

        r3 = newarray (double)[5];

        $r32 = <com.opengamma.analytics.financial.forex.method.ForexOptionSingleBarrierBlackMethod: com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackBarrierPriceFunction BARRIER_FUNCTION>;

        $r33 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla getUnderlyingOption()>();

        $r34 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.analytics.financial.model.option.definition.Barrier getBarrier()>();

        $d21 = d1 - d2;

        d35 = virtualinvoke $r32.<com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackBarrierPriceFunction: double getPriceAdjoint(com.opengamma.analytics.financial.model.option.pricing.analytic.formula.EuropeanVanillaOption,com.opengamma.analytics.financial.model.option.definition.Barrier,double,double,double,double,double,double[])>($r33, $r34, d6, d3, $d21, d1, d8, r3);

        $d22 = staticinvoke <java.lang.Math: double abs(double)>(d5);

        $d23 = $d22 * $d34;

        d36 = d35 * $d23;

        d9 = r3[0];

        r4 = newarray (com.opengamma.util.money.CurrencyAmount)[2];

        $r35 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla getUnderlyingOption()>();

        $r36 = virtualinvoke $r35.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        $r37 = virtualinvoke $r36.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.util.money.Currency getCurrency1()>();

        $d24 = staticinvoke <java.lang.Math: double abs(double)>(d5);

        $d25 = d9 * $d24;

        $d26 = $d25 * $d34;

        $r38 = staticinvoke <com.opengamma.util.money.CurrencyAmount: com.opengamma.util.money.CurrencyAmount of(com.opengamma.util.money.Currency,double)>($r37, $d26);

        r4[0] = $r38;

        $r39 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla getUnderlyingOption()>();

        $r40 = virtualinvoke $r39.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        $r41 = virtualinvoke $r40.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.util.money.Currency getCurrency2()>();

        $d27 = neg d9;

        $r42 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla getUnderlyingOption()>();

        $r43 = virtualinvoke $r42.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        $r44 = virtualinvoke $r43.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed getPaymentCurrency1()>();

        $d28 = virtualinvoke $r44.<com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed: double getAmount()>();

        $d29 = staticinvoke <java.lang.Math: double abs(double)>($d28);

        $d30 = $d27 * $d29;

        $d31 = $d30 * d3;

        $d32 = $d31 * $d34;

        $d33 = $d32 + d36;

        $r45 = staticinvoke <com.opengamma.util.money.CurrencyAmount: com.opengamma.util.money.CurrencyAmount of(com.opengamma.util.money.Currency,double)>($r41, $d33);

        r4[1] = $r45;

        $r46 = staticinvoke <com.opengamma.util.money.MultipleCurrencyAmount: com.opengamma.util.money.MultipleCurrencyAmount of(com.opengamma.util.money.CurrencyAmount[])>(r4);

        return $r46;
    }

    public com.opengamma.util.money.MultipleCurrencyAmount currencyExposure(com.opengamma.analytics.financial.interestrate.InstrumentDerivative, com.opengamma.analytics.financial.interestrate.YieldCurveBundle)
    {
        com.opengamma.analytics.financial.forex.method.ForexOptionSingleBarrierBlackMethod r0;
        com.opengamma.analytics.financial.interestrate.InstrumentDerivative r1;
        com.opengamma.analytics.financial.interestrate.YieldCurveBundle r2;
        boolean $z0, $z1;
        com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle $r3;
        com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier $r4;
        com.opengamma.util.money.MultipleCurrencyAmount $r5;

        r0 := @this: com.opengamma.analytics.financial.forex.method.ForexOptionSingleBarrierBlackMethod;

        r1 := @parameter0: com.opengamma.analytics.financial.interestrate.InstrumentDerivative;

        r2 := @parameter1: com.opengamma.analytics.financial.interestrate.YieldCurveBundle;

        $z0 = r1 instanceof com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z0, "Single barrier Forex option");

        $z1 = r2 instanceof com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z1, "Smile delta data bundle required");

        $r4 = (com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier) r1;

        $r3 = (com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle) r2;

        $r5 = virtualinvoke r0.<com.opengamma.analytics.financial.forex.method.ForexOptionSingleBarrierBlackMethod: com.opengamma.util.money.MultipleCurrencyAmount currencyExposure(com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier,com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle)>($r4, $r3);

        return $r5;
    }

    public com.opengamma.analytics.financial.forex.method.MultipleCurrencyInterestRateCurveSensitivity presentValueCurveSensitivity(com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier, com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle)
    {
        com.opengamma.analytics.financial.forex.method.ForexOptionSingleBarrierBlackMethod r0;
        com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier r1;
        com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle r2;
        java.lang.String r3, r4;
        double d0, d1, d2, d3, d4, d5, d6, d8, d10, d11, d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21, $d22, $d23, $d24, $d26, $d27, $d28, $d29, $d30, $d31, $d32, $d33, $d34, $d35, $d36;
        double[] r5;
        com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla $r12, $r15, $r18, $r27, $r30, $r33, $r34, $r36, $r48;
        com.opengamma.analytics.financial.forex.derivative.Forex $r13, $r16, $r19, $r28, $r49;
        com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed $r14, $r17, $r29;
        com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve $r20, $r22;
        java.lang.Double $r21, $r23;
        com.opengamma.analytics.financial.forex.method.FXMatrix $r24;
        com.opengamma.util.money.Currency $r25, $r26, $r31, $r32, $r50;
        boolean $z0;
        com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackBarrierPriceFunction $r35;
        com.opengamma.analytics.financial.model.option.definition.Barrier $r37;
        java.util.ArrayList $r38, $r43;
        com.opengamma.util.tuple.DoublesPair $r39, $r44;
        java.util.HashMap $r40, $r45;
        com.opengamma.analytics.financial.interestrate.InterestRateCurveSensitivity $r42, $r47, r53;
        com.opengamma.analytics.financial.forex.method.MultipleCurrencyInterestRateCurveSensitivity $r51;

        r0 := @this: com.opengamma.analytics.financial.forex.method.ForexOptionSingleBarrierBlackMethod;

        r1 := @parameter0: com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier;

        r2 := @parameter1: com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "Forex option");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, "Smile");

        $r12 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla getUnderlyingOption()>();

        $r13 = virtualinvoke $r12.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        $r14 = virtualinvoke $r13.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed getPaymentCurrency2()>();

        r3 = virtualinvoke $r14.<com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed: java.lang.String getFundingCurveName()>();

        $r15 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla getUnderlyingOption()>();

        $r16 = virtualinvoke $r15.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        $r17 = virtualinvoke $r16.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed getPaymentCurrency1()>();

        r4 = virtualinvoke $r17.<com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed: java.lang.String getFundingCurveName()>();

        $r18 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla getUnderlyingOption()>();

        $r19 = virtualinvoke $r18.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        d0 = virtualinvoke $r19.<com.opengamma.analytics.financial.forex.derivative.Forex: double getPaymentTime()>();

        $r20 = virtualinvoke r2.<com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle: com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve getCurve(java.lang.String)>(r3);

        $r21 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d0);

        d1 = virtualinvoke $r20.<com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve: double getInterestRate(java.lang.Object)>($r21);

        $r22 = virtualinvoke r2.<com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle: com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve getCurve(java.lang.String)>(r4);

        $r23 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d0);

        d2 = virtualinvoke $r22.<com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve: double getInterestRate(java.lang.Object)>($r23);

        $r24 = virtualinvoke r2.<com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle: com.opengamma.analytics.financial.forex.method.FXMatrix getFxRates()>();

        $r25 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.util.money.Currency getCurrency1()>();

        $r26 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.util.money.Currency getCurrency2()>();

        d3 = virtualinvoke $r24.<com.opengamma.analytics.financial.forex.method.FXMatrix: double getFxRate(com.opengamma.util.money.Currency,com.opengamma.util.money.Currency)>($r25, $r26);

        $d13 = neg d2;

        $d14 = $d13 * d0;

        $d15 = staticinvoke <java.lang.Math: double exp(double)>($d14);

        $d18 = d3 * $d15;

        $d16 = neg d1;

        $d17 = $d16 * d0;

        $d19 = staticinvoke <java.lang.Math: double exp(double)>($d17);

        d4 = $d18 / $d19;

        $r27 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla getUnderlyingOption()>();

        $r28 = virtualinvoke $r27.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        $r29 = virtualinvoke $r28.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed getPaymentCurrency1()>();

        d5 = virtualinvoke $r29.<com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed: double getAmount()>();

        $d20 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: double getRebate()>();

        $d21 = staticinvoke <java.lang.Math: double abs(double)>(d5);

        d6 = $d20 / $d21;

        $r30 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla getUnderlyingOption()>();

        $z0 = virtualinvoke $r30.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: boolean isLong()>();

        if $z0 == 0 goto label1;

        $d36 = 1.0;

        goto label2;

     label1:
        $d36 = -1.0;

     label2:
        $r31 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.util.money.Currency getCurrency1()>();

        $r32 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.util.money.Currency getCurrency2()>();

        $r33 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla getUnderlyingOption()>();

        $d22 = virtualinvoke $r33.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: double getTimeToExpiry()>();

        $r34 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla getUnderlyingOption()>();

        $d23 = virtualinvoke $r34.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: double getStrike()>();

        d8 = staticinvoke <com.opengamma.analytics.financial.forex.method.FXVolatilityUtils: double getVolatility(com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle,com.opengamma.util.money.Currency,com.opengamma.util.money.Currency,double,double,double)>(r2, $r31, $r32, $d22, $d23, d4);

        r5 = newarray (double)[5];

        $r35 = <com.opengamma.analytics.financial.forex.method.ForexOptionSingleBarrierBlackMethod: com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackBarrierPriceFunction BARRIER_FUNCTION>;

        $r36 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla getUnderlyingOption()>();

        $r37 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.analytics.financial.model.option.definition.Barrier getBarrier()>();

        $d24 = d1 - d2;

        virtualinvoke $r35.<com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackBarrierPriceFunction: double getPriceAdjoint(com.opengamma.analytics.financial.model.option.pricing.analytic.formula.EuropeanVanillaOption,com.opengamma.analytics.financial.model.option.definition.Barrier,double,double,double,double,double,double[])>($r36, $r37, d6, d3, $d24, d1, d8, r5);

        $d26 = r5[3];

        $d27 = staticinvoke <java.lang.Math: double abs(double)>(d5);

        $d28 = $d26 * $d27;

        $d29 = $d28 * $d36;

        d10 = $d29 * 1.0;

        $d31 = r5[2];

        $d30 = r5[3];

        $d32 = $d31 + $d30;

        $d33 = staticinvoke <java.lang.Math: double abs(double)>(d5);

        $d34 = $d32 * $d33;

        $d35 = $d34 * $d36;

        d11 = $d35 * 1.0;

        d12 = -1.0 * d10;

        $r38 = new java.util.ArrayList;

        specialinvoke $r38.<java.util.ArrayList: void <init>()>();

        $r39 = staticinvoke <com.opengamma.util.tuple.DoublesPair: com.opengamma.util.tuple.DoublesPair of(double,double)>(d0, d12);

        interfaceinvoke $r38.<java.util.List: boolean add(java.lang.Object)>($r39);

        $r40 = new java.util.HashMap;

        specialinvoke $r40.<java.util.HashMap: void <init>()>();

        interfaceinvoke $r40.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r4, $r38);

        $r42 = new com.opengamma.analytics.financial.interestrate.InterestRateCurveSensitivity;

        specialinvoke $r42.<com.opengamma.analytics.financial.interestrate.InterestRateCurveSensitivity: void <init>(java.util.Map)>($r40);

        $r43 = new java.util.ArrayList;

        specialinvoke $r43.<java.util.ArrayList: void <init>()>();

        $r44 = staticinvoke <com.opengamma.util.tuple.DoublesPair: com.opengamma.util.tuple.DoublesPair of(double,double)>(d0, d11);

        interfaceinvoke $r43.<java.util.List: boolean add(java.lang.Object)>($r44);

        $r45 = new java.util.HashMap;

        specialinvoke $r45.<java.util.HashMap: void <init>()>();

        interfaceinvoke $r45.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r3, $r43);

        $r47 = new com.opengamma.analytics.financial.interestrate.InterestRateCurveSensitivity;

        specialinvoke $r47.<com.opengamma.analytics.financial.interestrate.InterestRateCurveSensitivity: void <init>(java.util.Map)>($r45);

        r53 = virtualinvoke $r42.<com.opengamma.analytics.financial.interestrate.InterestRateCurveSensitivity: com.opengamma.analytics.financial.interestrate.InterestRateCurveSensitivity plus(com.opengamma.analytics.financial.interestrate.InterestRateCurveSensitivity)>($r47);

        $r48 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla getUnderlyingOption()>();

        $r49 = virtualinvoke $r48.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        $r50 = virtualinvoke $r49.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.util.money.Currency getCurrency2()>();

        $r51 = staticinvoke <com.opengamma.analytics.financial.forex.method.MultipleCurrencyInterestRateCurveSensitivity: com.opengamma.analytics.financial.forex.method.MultipleCurrencyInterestRateCurveSensitivity of(com.opengamma.util.money.Currency,com.opengamma.analytics.financial.interestrate.InterestRateCurveSensitivity)>($r50, r53);

        return $r51;
    }

    public com.opengamma.analytics.financial.forex.method.MultipleCurrencyInterestRateCurveSensitivity presentValueCurveSensitivity(com.opengamma.analytics.financial.interestrate.InstrumentDerivative, com.opengamma.analytics.financial.interestrate.YieldCurveBundle)
    {
        com.opengamma.analytics.financial.forex.method.ForexOptionSingleBarrierBlackMethod r0;
        com.opengamma.analytics.financial.interestrate.InstrumentDerivative r1;
        com.opengamma.analytics.financial.interestrate.YieldCurveBundle r2;
        boolean $z0, $z1;
        com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle $r3;
        com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier $r4;
        com.opengamma.analytics.financial.forex.method.MultipleCurrencyInterestRateCurveSensitivity $r5;

        r0 := @this: com.opengamma.analytics.financial.forex.method.ForexOptionSingleBarrierBlackMethod;

        r1 := @parameter0: com.opengamma.analytics.financial.interestrate.InstrumentDerivative;

        r2 := @parameter1: com.opengamma.analytics.financial.interestrate.YieldCurveBundle;

        $z0 = r1 instanceof com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z0, "Single barrier Forex option");

        $z1 = r2 instanceof com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z1, "Smile delta data bundle required");

        $r4 = (com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier) r1;

        $r3 = (com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle) r2;

        $r5 = virtualinvoke r0.<com.opengamma.analytics.financial.forex.method.ForexOptionSingleBarrierBlackMethod: com.opengamma.analytics.financial.forex.method.MultipleCurrencyInterestRateCurveSensitivity presentValueCurveSensitivity(com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier,com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle)>($r4, $r3);

        return $r5;
    }

    public com.opengamma.analytics.financial.forex.method.PresentValueForexBlackVolatilitySensitivity presentValueBlackVolatilitySensitivity(com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier, com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle)
    {
        com.opengamma.analytics.financial.forex.method.ForexOptionSingleBarrierBlackMethod r0;
        com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier r1;
        com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle r2;
        java.lang.String r3, r4;
        double d0, d1, d2, d3, d4, d5, d6, d8, d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21, $d23, $d24, $d25, $d26, $d27, $d28;
        double[] r5;
        com.opengamma.util.tuple.DoublesPair r6;
        com.opengamma.analytics.util.amount.SurfaceValue r7;
        com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla $r11, $r14, $r17, $r26, $r29, $r32, $r33, $r35, $r37, $r38, $r41, $r44;
        com.opengamma.analytics.financial.forex.derivative.Forex $r12, $r15, $r18, $r27, $r42, $r45;
        com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed $r13, $r16, $r28;
        com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve $r19, $r21;
        java.lang.Double $r20, $r22, $r39;
        com.opengamma.analytics.financial.forex.method.FXMatrix $r23;
        com.opengamma.util.money.Currency $r24, $r25, $r30, $r31, $r43, $r46;
        boolean $z0;
        com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackBarrierPriceFunction $r34;
        com.opengamma.analytics.financial.model.option.definition.Barrier $r36;
        com.opengamma.analytics.financial.forex.method.PresentValueForexBlackVolatilitySensitivity $r40;

        r0 := @this: com.opengamma.analytics.financial.forex.method.ForexOptionSingleBarrierBlackMethod;

        r1 := @parameter0: com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier;

        r2 := @parameter1: com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "Forex option");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, "Smile");

        $r11 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla getUnderlyingOption()>();

        $r12 = virtualinvoke $r11.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        $r13 = virtualinvoke $r12.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed getPaymentCurrency2()>();

        r3 = virtualinvoke $r13.<com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed: java.lang.String getFundingCurveName()>();

        $r14 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla getUnderlyingOption()>();

        $r15 = virtualinvoke $r14.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        $r16 = virtualinvoke $r15.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed getPaymentCurrency1()>();

        r4 = virtualinvoke $r16.<com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed: java.lang.String getFundingCurveName()>();

        $r17 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla getUnderlyingOption()>();

        $r18 = virtualinvoke $r17.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        d0 = virtualinvoke $r18.<com.opengamma.analytics.financial.forex.derivative.Forex: double getPaymentTime()>();

        $r19 = virtualinvoke r2.<com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle: com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve getCurve(java.lang.String)>(r3);

        $r20 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d0);

        d1 = virtualinvoke $r19.<com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve: double getInterestRate(java.lang.Object)>($r20);

        $r21 = virtualinvoke r2.<com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle: com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve getCurve(java.lang.String)>(r4);

        $r22 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d0);

        d2 = virtualinvoke $r21.<com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve: double getInterestRate(java.lang.Object)>($r22);

        $r23 = virtualinvoke r2.<com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle: com.opengamma.analytics.financial.forex.method.FXMatrix getFxRates()>();

        $r24 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.util.money.Currency getCurrency1()>();

        $r25 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.util.money.Currency getCurrency2()>();

        d3 = virtualinvoke $r23.<com.opengamma.analytics.financial.forex.method.FXMatrix: double getFxRate(com.opengamma.util.money.Currency,com.opengamma.util.money.Currency)>($r24, $r25);

        $d10 = neg d2;

        $d11 = $d10 * d0;

        $d12 = staticinvoke <java.lang.Math: double exp(double)>($d11);

        $d15 = d3 * $d12;

        $d13 = neg d1;

        $d14 = $d13 * d0;

        $d16 = staticinvoke <java.lang.Math: double exp(double)>($d14);

        d4 = $d15 / $d16;

        $r26 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla getUnderlyingOption()>();

        $r27 = virtualinvoke $r26.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        $r28 = virtualinvoke $r27.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed getPaymentCurrency1()>();

        d5 = virtualinvoke $r28.<com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed: double getAmount()>();

        $d17 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: double getRebate()>();

        $d18 = staticinvoke <java.lang.Math: double abs(double)>(d5);

        d6 = $d17 / $d18;

        $r29 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla getUnderlyingOption()>();

        $z0 = virtualinvoke $r29.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: boolean isLong()>();

        if $z0 == 0 goto label1;

        $d28 = 1.0;

        goto label2;

     label1:
        $d28 = -1.0;

     label2:
        $r30 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.util.money.Currency getCurrency1()>();

        $r31 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.util.money.Currency getCurrency2()>();

        $r32 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla getUnderlyingOption()>();

        $d19 = virtualinvoke $r32.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: double getTimeToExpiry()>();

        $r33 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla getUnderlyingOption()>();

        $d20 = virtualinvoke $r33.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: double getStrike()>();

        d8 = staticinvoke <com.opengamma.analytics.financial.forex.method.FXVolatilityUtils: double getVolatility(com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle,com.opengamma.util.money.Currency,com.opengamma.util.money.Currency,double,double,double)>(r2, $r30, $r31, $d19, $d20, d4);

        r5 = newarray (double)[5];

        $r34 = <com.opengamma.analytics.financial.forex.method.ForexOptionSingleBarrierBlackMethod: com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackBarrierPriceFunction BARRIER_FUNCTION>;

        $r35 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla getUnderlyingOption()>();

        $r36 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.analytics.financial.model.option.definition.Barrier getBarrier()>();

        $d21 = d1 - d2;

        virtualinvoke $r34.<com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackBarrierPriceFunction: double getPriceAdjoint(com.opengamma.analytics.financial.model.option.pricing.analytic.formula.EuropeanVanillaOption,com.opengamma.analytics.financial.model.option.definition.Barrier,double,double,double,double,double,double[])>($r35, $r36, d6, d3, $d21, d1, d8, r5);

        $d23 = r5[4];

        $d24 = staticinvoke <java.lang.Math: double abs(double)>(d5);

        $d25 = $d23 * $d24;

        d9 = $d25 * $d28;

        $r37 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla getUnderlyingOption()>();

        $d26 = virtualinvoke $r37.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: double getTimeToExpiry()>();

        $r38 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla getUnderlyingOption()>();

        $d27 = virtualinvoke $r38.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: double getStrike()>();

        r6 = staticinvoke <com.opengamma.util.tuple.DoublesPair: com.opengamma.util.tuple.DoublesPair of(double,double)>($d26, $d27);

        $r39 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d9);

        r7 = staticinvoke <com.opengamma.analytics.util.amount.SurfaceValue: com.opengamma.analytics.util.amount.SurfaceValue 'from'(com.opengamma.util.tuple.DoublesPair,java.lang.Double)>(r6, $r39);

        $r40 = new com.opengamma.analytics.financial.forex.method.PresentValueForexBlackVolatilitySensitivity;

        $r41 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla getUnderlyingOption()>();

        $r42 = virtualinvoke $r41.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        $r43 = virtualinvoke $r42.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.util.money.Currency getCurrency1()>();

        $r44 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla getUnderlyingOption()>();

        $r45 = virtualinvoke $r44.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        $r46 = virtualinvoke $r45.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.util.money.Currency getCurrency2()>();

        specialinvoke $r40.<com.opengamma.analytics.financial.forex.method.PresentValueForexBlackVolatilitySensitivity: void <init>(com.opengamma.util.money.Currency,com.opengamma.util.money.Currency,com.opengamma.analytics.util.amount.SurfaceValue)>($r43, $r46, r7);

        return $r40;
    }

    public com.opengamma.analytics.financial.forex.method.PresentValueForexBlackVolatilitySensitivity presentValueBlackVolatilitySensitivity(com.opengamma.analytics.financial.interestrate.InstrumentDerivative, com.opengamma.analytics.financial.interestrate.YieldCurveBundle)
    {
        com.opengamma.analytics.financial.forex.method.ForexOptionSingleBarrierBlackMethod r0;
        com.opengamma.analytics.financial.interestrate.InstrumentDerivative r1;
        com.opengamma.analytics.financial.interestrate.YieldCurveBundle r2;
        boolean $z0, $z1;
        com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle $r3;
        com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier $r4;
        com.opengamma.analytics.financial.forex.method.PresentValueForexBlackVolatilitySensitivity $r5;

        r0 := @this: com.opengamma.analytics.financial.forex.method.ForexOptionSingleBarrierBlackMethod;

        r1 := @parameter0: com.opengamma.analytics.financial.interestrate.InstrumentDerivative;

        r2 := @parameter1: com.opengamma.analytics.financial.interestrate.YieldCurveBundle;

        $z0 = r1 instanceof com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z0, "Single barrier Forex option");

        $z1 = r2 instanceof com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z1, "Smile delta data bundle required");

        $r4 = (com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier) r1;

        $r3 = (com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle) r2;

        $r5 = virtualinvoke r0.<com.opengamma.analytics.financial.forex.method.ForexOptionSingleBarrierBlackMethod: com.opengamma.analytics.financial.forex.method.PresentValueForexBlackVolatilitySensitivity presentValueBlackVolatilitySensitivity(com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier,com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle)>($r4, $r3);

        return $r5;
    }

    public com.opengamma.analytics.financial.forex.method.PresentValueForexBlackVolatilityNodeSensitivityDataBundle presentValueBlackVolatilityNodeSensitivity(com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier, com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle)
    {
        com.opengamma.analytics.financial.forex.method.ForexOptionSingleBarrierBlackMethod r0;
        com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier r1;
        com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle r2;
        com.opengamma.analytics.financial.forex.method.PresentValueForexBlackVolatilitySensitivity r3;
        com.opengamma.analytics.financial.model.volatility.surface.SmileDeltaTermStructureParametersStrikeInterpolation r4;
        double d0, d1, d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13;
        com.opengamma.analytics.financial.model.volatility.VolatilityAndBucketedSensitivities r5;
        double[][] r6, r8;
        com.opengamma.util.tuple.DoublesPair r7;
        com.opengamma.analytics.financial.model.volatility.VolatilityModel $r11;
        com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla $r12, $r17, $r22, $r27, $r29, $r30, $r31, $r32, $r34, $r37;
        com.opengamma.analytics.financial.forex.derivative.Forex $r13, $r18, $r23, $r28, $r35, $r38;
        com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed $r14, $r24;
        java.lang.String $r15, $r25;
        com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve $r16, $r26;
        com.opengamma.analytics.financial.forex.method.FXMatrix $r19;
        com.opengamma.util.money.Currency $r20, $r21, $r36, $r39;
        int $i0, $i1, $i2, $i3, i4, i5;
        com.opengamma.analytics.financial.forex.method.PresentValueForexBlackVolatilityNodeSensitivityDataBundle $r33;
        com.opengamma.analytics.math.matrix.DoubleMatrix1D $r40, $r42;
        double[] $r41, $r43, $r45, $r46;
        com.opengamma.analytics.math.matrix.DoubleMatrix2D $r44;
        com.opengamma.analytics.util.amount.SurfaceValue $r47;
        java.util.HashMap $r48;
        java.lang.Object $r49;
        java.lang.Double $r50;

        r0 := @this: com.opengamma.analytics.financial.forex.method.ForexOptionSingleBarrierBlackMethod;

        r1 := @parameter0: com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier;

        r2 := @parameter1: com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "Forex option");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, "Smile");

        r3 = virtualinvoke r0.<com.opengamma.analytics.financial.forex.method.ForexOptionSingleBarrierBlackMethod: com.opengamma.analytics.financial.forex.method.PresentValueForexBlackVolatilitySensitivity presentValueBlackVolatilitySensitivity(com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier,com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle)>(r1, r2);

        $r11 = virtualinvoke r2.<com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle: com.opengamma.analytics.financial.model.volatility.VolatilityModel getVolatilityModel()>();

        r4 = (com.opengamma.analytics.financial.model.volatility.surface.SmileDeltaTermStructureParametersStrikeInterpolation) $r11;

        $r12 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla getUnderlyingOption()>();

        $r13 = virtualinvoke $r12.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        $r14 = virtualinvoke $r13.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed getPaymentCurrency2()>();

        $r15 = virtualinvoke $r14.<com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed: java.lang.String getFundingCurveName()>();

        $r16 = virtualinvoke r2.<com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle: com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve getCurve(java.lang.String)>($r15);

        $r17 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla getUnderlyingOption()>();

        $r18 = virtualinvoke $r17.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        $d3 = virtualinvoke $r18.<com.opengamma.analytics.financial.forex.derivative.Forex: double getPaymentTime()>();

        d0 = virtualinvoke $r16.<com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve: double getDiscountFactor(double)>($d3);

        $r19 = virtualinvoke r2.<com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle: com.opengamma.analytics.financial.forex.method.FXMatrix getFxRates()>();

        $r20 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.util.money.Currency getCurrency1()>();

        $r21 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.util.money.Currency getCurrency2()>();

        d1 = virtualinvoke $r19.<com.opengamma.analytics.financial.forex.method.FXMatrix: double getFxRate(com.opengamma.util.money.Currency,com.opengamma.util.money.Currency)>($r20, $r21);

        $r22 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla getUnderlyingOption()>();

        $r23 = virtualinvoke $r22.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        $r24 = virtualinvoke $r23.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed getPaymentCurrency1()>();

        $r25 = virtualinvoke $r24.<com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed: java.lang.String getFundingCurveName()>();

        $r26 = virtualinvoke r2.<com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle: com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve getCurve(java.lang.String)>($r25);

        $r27 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla getUnderlyingOption()>();

        $r28 = virtualinvoke $r27.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        $d4 = virtualinvoke $r28.<com.opengamma.analytics.financial.forex.derivative.Forex: double getPaymentTime()>();

        $d5 = virtualinvoke $r26.<com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve: double getDiscountFactor(double)>($d4);

        $d6 = d1 * $d5;

        d2 = $d6 / d0;

        $r29 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla getUnderlyingOption()>();

        $d7 = virtualinvoke $r29.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: double getTimeToExpiry()>();

        $r30 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla getUnderlyingOption()>();

        $d8 = virtualinvoke $r30.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: double getStrike()>();

        r5 = virtualinvoke r4.<com.opengamma.analytics.financial.model.volatility.surface.SmileDeltaTermStructureParametersStrikeInterpolation: com.opengamma.analytics.financial.model.volatility.VolatilityAndBucketedSensitivities getVolatilityAndSensitivities(double,double,double)>($d7, $d8, d2);

        r6 = virtualinvoke r5.<com.opengamma.analytics.financial.model.volatility.VolatilityAndBucketedSensitivities: double[][] getBucketedSensitivities()>();

        $r31 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla getUnderlyingOption()>();

        $d9 = virtualinvoke $r31.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: double getTimeToExpiry()>();

        $r32 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla getUnderlyingOption()>();

        $d10 = virtualinvoke $r32.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: double getStrike()>();

        r7 = staticinvoke <com.opengamma.util.tuple.DoublesPair: com.opengamma.util.tuple.DoublesPair of(double,double)>($d9, $d10);

        $i0 = virtualinvoke r4.<com.opengamma.analytics.financial.model.volatility.surface.SmileDeltaTermStructureParametersStrikeInterpolation: int getNumberExpiration()>();

        $i1 = virtualinvoke r4.<com.opengamma.analytics.financial.model.volatility.surface.SmileDeltaTermStructureParametersStrikeInterpolation: int getNumberStrike()>();

        r8 = newmultiarray (double)[$i0][$i1];

        i4 = 0;

     label1:
        $i2 = virtualinvoke r4.<com.opengamma.analytics.financial.model.volatility.surface.SmileDeltaTermStructureParametersStrikeInterpolation: int getNumberExpiration()>();

        if i4 >= $i2 goto label4;

        i5 = 0;

     label2:
        $i3 = virtualinvoke r4.<com.opengamma.analytics.financial.model.volatility.surface.SmileDeltaTermStructureParametersStrikeInterpolation: int getNumberStrike()>();

        if i5 >= $i3 goto label3;

        $r46 = r8[i4];

        $r45 = r6[i4];

        $d11 = $r45[i5];

        $r47 = virtualinvoke r3.<com.opengamma.analytics.financial.forex.method.PresentValueForexBlackVolatilitySensitivity: com.opengamma.analytics.util.amount.SurfaceValue getVega()>();

        $r48 = virtualinvoke $r47.<com.opengamma.analytics.util.amount.SurfaceValue: java.util.HashMap getMap()>();

        $r49 = virtualinvoke $r48.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r7);

        $r50 = (java.lang.Double) $r49;

        $d12 = virtualinvoke $r50.<java.lang.Double: double doubleValue()>();

        $d13 = $d11 * $d12;

        $r46[i5] = $d13;

        i5 = i5 + 1;

        goto label2;

     label3:
        i4 = i4 + 1;

        goto label1;

     label4:
        $r33 = new com.opengamma.analytics.financial.forex.method.PresentValueForexBlackVolatilityNodeSensitivityDataBundle;

        $r34 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla getUnderlyingOption()>();

        $r35 = virtualinvoke $r34.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        $r36 = virtualinvoke $r35.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.util.money.Currency getCurrency1()>();

        $r37 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla getUnderlyingOption()>();

        $r38 = virtualinvoke $r37.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        $r39 = virtualinvoke $r38.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.util.money.Currency getCurrency2()>();

        $r40 = new com.opengamma.analytics.math.matrix.DoubleMatrix1D;

        $r41 = virtualinvoke r4.<com.opengamma.analytics.financial.model.volatility.surface.SmileDeltaTermStructureParametersStrikeInterpolation: double[] getTimeToExpiration()>();

        specialinvoke $r40.<com.opengamma.analytics.math.matrix.DoubleMatrix1D: void <init>(double[])>($r41);

        $r42 = new com.opengamma.analytics.math.matrix.DoubleMatrix1D;

        $r43 = virtualinvoke r4.<com.opengamma.analytics.financial.model.volatility.surface.SmileDeltaTermStructureParametersStrikeInterpolation: double[] getDeltaFull()>();

        specialinvoke $r42.<com.opengamma.analytics.math.matrix.DoubleMatrix1D: void <init>(double[])>($r43);

        $r44 = new com.opengamma.analytics.math.matrix.DoubleMatrix2D;

        specialinvoke $r44.<com.opengamma.analytics.math.matrix.DoubleMatrix2D: void <init>(double[][])>(r8);

        specialinvoke $r33.<com.opengamma.analytics.financial.forex.method.PresentValueForexBlackVolatilityNodeSensitivityDataBundle: void <init>(com.opengamma.util.money.Currency,com.opengamma.util.money.Currency,com.opengamma.analytics.math.matrix.DoubleMatrix1D,com.opengamma.analytics.math.matrix.DoubleMatrix1D,com.opengamma.analytics.math.matrix.DoubleMatrix2D)>($r36, $r39, $r40, $r42, $r44);

        return $r33;
    }

    public double impliedVolatility(com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier, com.opengamma.analytics.financial.interestrate.YieldCurveBundle)
    {
        com.opengamma.analytics.financial.forex.method.ForexOptionSingleBarrierBlackMethod r0;
        com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier r1;
        com.opengamma.analytics.financial.interestrate.YieldCurveBundle r2;
        com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle r3;
        java.lang.String r4, r5;
        double d0, d1, d2, d3, d4, d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14;
        boolean $z0;
        com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla $r7, $r10, $r13, $r24, $r25;
        com.opengamma.analytics.financial.forex.derivative.Forex $r8, $r11, $r14;
        com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed $r9, $r12;
        com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve $r15, $r17;
        java.lang.Double $r16, $r18;
        com.opengamma.analytics.financial.forex.method.FXMatrix $r19;
        com.opengamma.util.money.Currency $r20, $r21, $r22, $r23;

        r0 := @this: com.opengamma.analytics.financial.forex.method.ForexOptionSingleBarrierBlackMethod;

        r1 := @parameter0: com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier;

        r2 := @parameter1: com.opengamma.analytics.financial.interestrate.YieldCurveBundle;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, "Curves");

        $z0 = r2 instanceof com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z0, "Yield curve bundle should contain smile data");

        r3 = (com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle) r2;

        $r7 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla getUnderlyingOption()>();

        $r8 = virtualinvoke $r7.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        $r9 = virtualinvoke $r8.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed getPaymentCurrency2()>();

        r4 = virtualinvoke $r9.<com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed: java.lang.String getFundingCurveName()>();

        $r10 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla getUnderlyingOption()>();

        $r11 = virtualinvoke $r10.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        $r12 = virtualinvoke $r11.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed getPaymentCurrency1()>();

        r5 = virtualinvoke $r12.<com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed: java.lang.String getFundingCurveName()>();

        $r13 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla getUnderlyingOption()>();

        $r14 = virtualinvoke $r13.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        d0 = virtualinvoke $r14.<com.opengamma.analytics.financial.forex.derivative.Forex: double getPaymentTime()>();

        $r15 = virtualinvoke r3.<com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle: com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve getCurve(java.lang.String)>(r4);

        $r16 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d0);

        d1 = virtualinvoke $r15.<com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve: double getInterestRate(java.lang.Object)>($r16);

        $r17 = virtualinvoke r3.<com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle: com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve getCurve(java.lang.String)>(r5);

        $r18 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d0);

        d2 = virtualinvoke $r17.<com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve: double getInterestRate(java.lang.Object)>($r18);

        $r19 = virtualinvoke r3.<com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle: com.opengamma.analytics.financial.forex.method.FXMatrix getFxRates()>();

        $r20 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.util.money.Currency getCurrency1()>();

        $r21 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.util.money.Currency getCurrency2()>();

        d3 = virtualinvoke $r19.<com.opengamma.analytics.financial.forex.method.FXMatrix: double getFxRate(com.opengamma.util.money.Currency,com.opengamma.util.money.Currency)>($r20, $r21);

        $d6 = neg d2;

        $d7 = $d6 * d0;

        $d8 = staticinvoke <java.lang.Math: double exp(double)>($d7);

        $d11 = d3 * $d8;

        $d9 = neg d1;

        $d10 = $d9 * d0;

        $d12 = staticinvoke <java.lang.Math: double exp(double)>($d10);

        d4 = $d11 / $d12;

        $r22 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.util.money.Currency getCurrency1()>();

        $r23 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.util.money.Currency getCurrency2()>();

        $r24 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla getUnderlyingOption()>();

        $d13 = virtualinvoke $r24.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: double getTimeToExpiry()>();

        $r25 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla getUnderlyingOption()>();

        $d14 = virtualinvoke $r25.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: double getStrike()>();

        d5 = staticinvoke <com.opengamma.analytics.financial.forex.method.FXVolatilityUtils: double getVolatility(com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle,com.opengamma.util.money.Currency,com.opengamma.util.money.Currency,double,double,double)>(r3, $r22, $r23, $d13, $d14, d4);

        return d5;
    }

    public double deltaRelative(com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier, com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle, boolean)
    {
        com.opengamma.analytics.financial.forex.method.ForexOptionSingleBarrierBlackMethod r0;
        com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier r1;
        com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle r2;
        boolean z0, $z1, $z2;
        com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla r3, $r27, $r31;
        java.lang.String r4, r5;
        double d0, d1, d2, d3, d4, d5, d6, d7, d9, d10, d11, d12, d13, d14, $d15, $d16, $d17, $d18, $d20, $d21, $d22, $d23, $d24;
        double[] r6;
        com.opengamma.util.money.Currency $r9, $r10, $r19, $r20, $r21, $r22;
        com.opengamma.analytics.financial.forex.derivative.Forex $r11, $r13, $r15, $r28;
        com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed $r12, $r14, $r29;
        com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve $r16, $r17, $r23, $r25;
        com.opengamma.analytics.financial.forex.method.FXMatrix $r18;
        java.lang.Double $r24, $r26;
        com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackBarrierPriceFunction $r30;
        com.opengamma.analytics.financial.model.option.definition.Barrier $r32;

        r0 := @this: com.opengamma.analytics.financial.forex.method.ForexOptionSingleBarrierBlackMethod;

        r1 := @parameter0: com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier;

        r2 := @parameter1: com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle;

        z0 := @parameter2: boolean;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "Forex option");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, "Smile");

        $r9 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.util.money.Currency getCurrency1()>();

        $r10 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.util.money.Currency getCurrency2()>();

        $z1 = virtualinvoke r2.<com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle: boolean checkCurrencies(com.opengamma.util.money.Currency,com.opengamma.util.money.Currency)>($r9, $r10);

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z1, "Option currencies not compatible with smile data");

        r3 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla getUnderlyingOption()>();

        $r11 = virtualinvoke r3.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        $r12 = virtualinvoke $r11.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed getPaymentCurrency2()>();

        r4 = virtualinvoke $r12.<com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed: java.lang.String getFundingCurveName()>();

        $r13 = virtualinvoke r3.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        $r14 = virtualinvoke $r13.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed getPaymentCurrency1()>();

        r5 = virtualinvoke $r14.<com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed: java.lang.String getFundingCurveName()>();

        d0 = virtualinvoke r3.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: double getTimeToExpiry()>();

        d1 = virtualinvoke r3.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: double getStrike()>();

        $r15 = virtualinvoke r3.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        d2 = virtualinvoke $r15.<com.opengamma.analytics.financial.forex.derivative.Forex: double getPaymentTime()>();

        $r16 = virtualinvoke r2.<com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle: com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve getCurve(java.lang.String)>(r5);

        d3 = virtualinvoke $r16.<com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve: double getDiscountFactor(double)>(d2);

        $r17 = virtualinvoke r2.<com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle: com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve getCurve(java.lang.String)>(r4);

        d4 = virtualinvoke $r17.<com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve: double getDiscountFactor(double)>(d2);

        $r18 = virtualinvoke r2.<com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle: com.opengamma.analytics.financial.forex.method.FXMatrix getFxRates()>();

        $r19 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.util.money.Currency getCurrency1()>();

        $r20 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.util.money.Currency getCurrency2()>();

        d5 = virtualinvoke $r18.<com.opengamma.analytics.financial.forex.method.FXMatrix: double getFxRate(com.opengamma.util.money.Currency,com.opengamma.util.money.Currency)>($r19, $r20);

        $d15 = d5 * d3;

        d6 = $d15 / d4;

        $r21 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.util.money.Currency getCurrency1()>();

        $r22 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.util.money.Currency getCurrency2()>();

        d7 = staticinvoke <com.opengamma.analytics.financial.forex.method.FXVolatilityUtils: double getVolatility(com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle,com.opengamma.util.money.Currency,com.opengamma.util.money.Currency,double,double,double)>(r2, $r21, $r22, d0, d1, d6);

        $z2 = virtualinvoke r3.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: boolean isLong()>();

        if $z2 == 0 goto label1;

        $d24 = 1.0;

        goto label2;

     label1:
        $d24 = -1.0;

     label2:
        $r23 = virtualinvoke r2.<com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle: com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve getCurve(java.lang.String)>(r4);

        $r24 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d2);

        d9 = virtualinvoke $r23.<com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve: double getInterestRate(java.lang.Object)>($r24);

        $r25 = virtualinvoke r2.<com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle: com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve getCurve(java.lang.String)>(r5);

        $r26 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d2);

        d10 = virtualinvoke $r25.<com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve: double getInterestRate(java.lang.Object)>($r26);

        $r27 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla getUnderlyingOption()>();

        $r28 = virtualinvoke $r27.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        $r29 = virtualinvoke $r28.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed getPaymentCurrency1()>();

        d11 = virtualinvoke $r29.<com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed: double getAmount()>();

        $d16 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: double getRebate()>();

        $d17 = staticinvoke <java.lang.Math: double abs(double)>(d11);

        d12 = $d16 / $d17;

        r6 = newarray (double)[5];

        $r30 = <com.opengamma.analytics.financial.forex.method.ForexOptionSingleBarrierBlackMethod: com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackBarrierPriceFunction BARRIER_FUNCTION>;

        $r31 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla getUnderlyingOption()>();

        $r32 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.analytics.financial.model.option.definition.Barrier getBarrier()>();

        $d18 = d9 - d10;

        virtualinvoke $r30.<com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackBarrierPriceFunction: double getPriceAdjoint(com.opengamma.analytics.financial.model.option.pricing.analytic.formula.EuropeanVanillaOption,com.opengamma.analytics.financial.model.option.definition.Barrier,double,double,double,double,double,double[])>($r31, $r32, d12, d5, $d18, d9, d7, r6);

        $d20 = r6[0];

        $d21 = $d20 * $d24;

        d13 = $d21 / d3;

        if z0 == 0 goto label3;

        return d13;

     label3:
        $d22 = neg d13;

        $d23 = $d22 * d5;

        d14 = $d23 * d5;

        return d14;
    }

    public com.opengamma.util.money.CurrencyAmount delta(com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier, com.opengamma.analytics.financial.interestrate.YieldCurveBundle, boolean)
    {
        com.opengamma.analytics.financial.forex.method.ForexOptionSingleBarrierBlackMethod r0;
        com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier r1;
        com.opengamma.analytics.financial.interestrate.YieldCurveBundle r2;
        boolean z0, $z1;
        com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle r3;
        double d0, $d1, $d2, $d3;
        com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla r4;
        com.opengamma.analytics.financial.forex.derivative.Forex $r6, $r8;
        com.opengamma.util.money.Currency $r7;
        com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed $r9;
        com.opengamma.util.money.CurrencyAmount $r10;

        r0 := @this: com.opengamma.analytics.financial.forex.method.ForexOptionSingleBarrierBlackMethod;

        r1 := @parameter0: com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier;

        r2 := @parameter1: com.opengamma.analytics.financial.interestrate.YieldCurveBundle;

        z0 := @parameter2: boolean;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, "Curves");

        $z1 = r2 instanceof com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z1, "Yield curve bundle should contain smile data");

        r3 = (com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle) r2;

        d0 = virtualinvoke r0.<com.opengamma.analytics.financial.forex.method.ForexOptionSingleBarrierBlackMethod: double deltaRelative(com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier,com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle,boolean)>(r1, r3, z0);

        r4 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla getUnderlyingOption()>();

        $r6 = virtualinvoke r4.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        $r7 = virtualinvoke $r6.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.util.money.Currency getCurrency2()>();

        $r8 = virtualinvoke r4.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        $r9 = virtualinvoke $r8.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed getPaymentCurrency1()>();

        $d1 = virtualinvoke $r9.<com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed: double getAmount()>();

        $d2 = staticinvoke <java.lang.Math: double abs(double)>($d1);

        $d3 = d0 * $d2;

        $r10 = staticinvoke <com.opengamma.util.money.CurrencyAmount: com.opengamma.util.money.CurrencyAmount of(com.opengamma.util.money.Currency,double)>($r7, $d3);

        return $r10;
    }

    public double forwardDeltaTheoretical(com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier, com.opengamma.analytics.financial.interestrate.YieldCurveBundle)
    {
        com.opengamma.analytics.financial.forex.method.ForexOptionSingleBarrierBlackMethod r0;
        com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier r1;
        com.opengamma.analytics.financial.interestrate.YieldCurveBundle r2;
        com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle r3;
        java.lang.String r4;
        double d0, d1, $d2, $d3;
        boolean $z0;
        com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla $r6, $r9;
        com.opengamma.analytics.financial.forex.derivative.Forex $r7, $r10;
        com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed $r8;
        com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve $r11;

        r0 := @this: com.opengamma.analytics.financial.forex.method.ForexOptionSingleBarrierBlackMethod;

        r1 := @parameter0: com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier;

        r2 := @parameter1: com.opengamma.analytics.financial.interestrate.YieldCurveBundle;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, "Curves");

        $z0 = r2 instanceof com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z0, "Yield curve bundle should contain smile data");

        r3 = (com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle) r2;

        $r6 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla getUnderlyingOption()>();

        $r7 = virtualinvoke $r6.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        $r8 = virtualinvoke $r7.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed getPaymentCurrency1()>();

        r4 = virtualinvoke $r8.<com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed: java.lang.String getFundingCurveName()>();

        $r9 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla getUnderlyingOption()>();

        $r10 = virtualinvoke $r9.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        d0 = virtualinvoke $r10.<com.opengamma.analytics.financial.forex.derivative.Forex: double getPaymentTime()>();

        $r11 = virtualinvoke r3.<com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle: com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve getCurve(java.lang.String)>(r4);

        d1 = virtualinvoke $r11.<com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve: double getDiscountFactor(double)>(d0);

        $d2 = virtualinvoke r0.<com.opengamma.analytics.financial.forex.method.ForexOptionSingleBarrierBlackMethod: double spotDeltaTheoretical(com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier,com.opengamma.analytics.financial.interestrate.YieldCurveBundle)>(r1, r2);

        $d3 = $d2 / d1;

        return $d3;
    }

    public double spotDeltaTheoretical(com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier, com.opengamma.analytics.financial.interestrate.YieldCurveBundle)
    {
        com.opengamma.analytics.financial.forex.method.ForexOptionSingleBarrierBlackMethod r0;
        com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier r1;
        com.opengamma.analytics.financial.interestrate.YieldCurveBundle r2;
        com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle r3;
        com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla r4, $r23, $r28, $r29, $r31;
        java.lang.String r5, r6;
        double d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, $d10, $d11, $d12, $d13, $d14, $d15, $d17;
        double[] r7;
        boolean $z0;
        com.opengamma.analytics.financial.forex.derivative.Forex $r9, $r11, $r13, $r24;
        com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed $r10, $r12, $r25;
        com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve $r14, $r15, $r19, $r21;
        com.opengamma.analytics.financial.forex.method.FXMatrix $r16;
        com.opengamma.util.money.Currency $r17, $r18, $r26, $r27;
        java.lang.Double $r20, $r22;
        com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackBarrierPriceFunction $r30;
        com.opengamma.analytics.financial.model.option.definition.Barrier $r32;

        r0 := @this: com.opengamma.analytics.financial.forex.method.ForexOptionSingleBarrierBlackMethod;

        r1 := @parameter0: com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier;

        r2 := @parameter1: com.opengamma.analytics.financial.interestrate.YieldCurveBundle;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, "Curves");

        $z0 = r2 instanceof com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z0, "Yield curve bundle should contain smile data");

        r3 = (com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle) r2;

        r4 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla getUnderlyingOption()>();

        $r9 = virtualinvoke r4.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        $r10 = virtualinvoke $r9.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed getPaymentCurrency2()>();

        r5 = virtualinvoke $r10.<com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed: java.lang.String getFundingCurveName()>();

        $r11 = virtualinvoke r4.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        $r12 = virtualinvoke $r11.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed getPaymentCurrency1()>();

        r6 = virtualinvoke $r12.<com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed: java.lang.String getFundingCurveName()>();

        $r13 = virtualinvoke r4.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        d0 = virtualinvoke $r13.<com.opengamma.analytics.financial.forex.derivative.Forex: double getPaymentTime()>();

        $r14 = virtualinvoke r3.<com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle: com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve getCurve(java.lang.String)>(r6);

        d1 = virtualinvoke $r14.<com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve: double getDiscountFactor(double)>(d0);

        $r15 = virtualinvoke r3.<com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle: com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve getCurve(java.lang.String)>(r5);

        d2 = virtualinvoke $r15.<com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve: double getDiscountFactor(double)>(d0);

        $r16 = virtualinvoke r3.<com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle: com.opengamma.analytics.financial.forex.method.FXMatrix getFxRates()>();

        $r17 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.util.money.Currency getCurrency1()>();

        $r18 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.util.money.Currency getCurrency2()>();

        d3 = virtualinvoke $r16.<com.opengamma.analytics.financial.forex.method.FXMatrix: double getFxRate(com.opengamma.util.money.Currency,com.opengamma.util.money.Currency)>($r17, $r18);

        $d10 = d3 * d1;

        d4 = $d10 / d2;

        $r19 = virtualinvoke r3.<com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle: com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve getCurve(java.lang.String)>(r5);

        $r20 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d0);

        d5 = virtualinvoke $r19.<com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve: double getInterestRate(java.lang.Object)>($r20);

        $r21 = virtualinvoke r3.<com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle: com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve getCurve(java.lang.String)>(r6);

        $r22 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d0);

        d6 = virtualinvoke $r21.<com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve: double getInterestRate(java.lang.Object)>($r22);

        $r23 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla getUnderlyingOption()>();

        $r24 = virtualinvoke $r23.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        $r25 = virtualinvoke $r24.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed getPaymentCurrency1()>();

        d7 = virtualinvoke $r25.<com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed: double getAmount()>();

        $d11 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: double getRebate()>();

        $d12 = staticinvoke <java.lang.Math: double abs(double)>(d7);

        d8 = $d11 / $d12;

        $r26 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.util.money.Currency getCurrency1()>();

        $r27 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.util.money.Currency getCurrency2()>();

        $r28 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla getUnderlyingOption()>();

        $d13 = virtualinvoke $r28.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: double getTimeToExpiry()>();

        $r29 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla getUnderlyingOption()>();

        $d14 = virtualinvoke $r29.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: double getStrike()>();

        d9 = staticinvoke <com.opengamma.analytics.financial.forex.method.FXVolatilityUtils: double getVolatility(com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle,com.opengamma.util.money.Currency,com.opengamma.util.money.Currency,double,double,double)>(r3, $r26, $r27, $d13, $d14, d4);

        r7 = newarray (double)[5];

        $r30 = <com.opengamma.analytics.financial.forex.method.ForexOptionSingleBarrierBlackMethod: com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackBarrierPriceFunction BARRIER_FUNCTION>;

        $r31 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla getUnderlyingOption()>();

        $r32 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.analytics.financial.model.option.definition.Barrier getBarrier()>();

        $d15 = d5 - d6;

        virtualinvoke $r30.<com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackBarrierPriceFunction: double getPriceAdjoint(com.opengamma.analytics.financial.model.option.pricing.analytic.formula.EuropeanVanillaOption,com.opengamma.analytics.financial.model.option.definition.Barrier,double,double,double,double,double,double[])>($r31, $r32, d8, d3, $d15, d5, d9, r7);

        $d17 = r7[0];

        return $d17;
    }

    public com.opengamma.util.money.CurrencyAmount gammaFd(com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier, com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle, double)
    {
        com.opengamma.analytics.financial.forex.method.ForexOptionSingleBarrierBlackMethod r0;
        com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier r1;
        com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle r2;
        double d0, d1, d2, d3, d4, d5, d6, d7, d9, d10, d11, d12, d13, d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21, $d22, $d23, $d24, $d25, $d26, $d27, $d28, $d30, $d32, $d33, $d34, $d35, $d36, $d37, $d38, $d39, $d40, $d41;
        java.lang.String r3, r4;
        double[] r5, r6;
        com.opengamma.util.money.Currency r7, $r23, $r24, $r29, $r30;
        com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla $r10, $r13, $r16, $r25, $r28, $r31, $r32, $r34, $r37, $r39;
        com.opengamma.analytics.financial.forex.derivative.Forex $r11, $r14, $r17, $r26, $r40;
        com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed $r12, $r15, $r27;
        com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve $r18, $r20;
        java.lang.Double $r19, $r21;
        com.opengamma.analytics.financial.forex.method.FXMatrix $r22;
        boolean $z0;
        com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackBarrierPriceFunction $r33, $r36;
        com.opengamma.analytics.financial.model.option.definition.Barrier $r35, $r38;
        com.opengamma.util.money.CurrencyAmount $r41;

        r0 := @this: com.opengamma.analytics.financial.forex.method.ForexOptionSingleBarrierBlackMethod;

        r1 := @parameter0: com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier;

        r2 := @parameter1: com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle;

        d0 := @parameter2: double;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "Forex option");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, "Smile");

        $r10 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla getUnderlyingOption()>();

        $r11 = virtualinvoke $r10.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        $r12 = virtualinvoke $r11.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed getPaymentCurrency2()>();

        r3 = virtualinvoke $r12.<com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed: java.lang.String getFundingCurveName()>();

        $r13 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla getUnderlyingOption()>();

        $r14 = virtualinvoke $r13.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        $r15 = virtualinvoke $r14.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed getPaymentCurrency1()>();

        r4 = virtualinvoke $r15.<com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed: java.lang.String getFundingCurveName()>();

        $r16 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla getUnderlyingOption()>();

        $r17 = virtualinvoke $r16.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        d1 = virtualinvoke $r17.<com.opengamma.analytics.financial.forex.derivative.Forex: double getPaymentTime()>();

        $r18 = virtualinvoke r2.<com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle: com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve getCurve(java.lang.String)>(r3);

        $r19 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d1);

        d2 = virtualinvoke $r18.<com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve: double getInterestRate(java.lang.Object)>($r19);

        $r20 = virtualinvoke r2.<com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle: com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve getCurve(java.lang.String)>(r4);

        $r21 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d1);

        d3 = virtualinvoke $r20.<com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve: double getInterestRate(java.lang.Object)>($r21);

        $r22 = virtualinvoke r2.<com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle: com.opengamma.analytics.financial.forex.method.FXMatrix getFxRates()>();

        $r23 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.util.money.Currency getCurrency1()>();

        $r24 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.util.money.Currency getCurrency2()>();

        d4 = virtualinvoke $r22.<com.opengamma.analytics.financial.forex.method.FXMatrix: double getFxRate(com.opengamma.util.money.Currency,com.opengamma.util.money.Currency)>($r23, $r24);

        $d15 = neg d3;

        $d16 = $d15 * d1;

        $d17 = staticinvoke <java.lang.Math: double exp(double)>($d16);

        $d20 = d4 * $d17;

        $d18 = neg d2;

        $d19 = $d18 * d1;

        $d21 = staticinvoke <java.lang.Math: double exp(double)>($d19);

        d5 = $d20 / $d21;

        $r25 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla getUnderlyingOption()>();

        $r26 = virtualinvoke $r25.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        $r27 = virtualinvoke $r26.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed getPaymentCurrency1()>();

        d6 = virtualinvoke $r27.<com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed: double getAmount()>();

        $d22 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: double getRebate()>();

        $d23 = staticinvoke <java.lang.Math: double abs(double)>(d6);

        d7 = $d22 / $d23;

        $r28 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla getUnderlyingOption()>();

        $z0 = virtualinvoke $r28.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: boolean isLong()>();

        if $z0 == 0 goto label1;

        $d41 = 1.0;

        goto label2;

     label1:
        $d41 = -1.0;

     label2:
        $r29 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.util.money.Currency getCurrency1()>();

        $r30 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.util.money.Currency getCurrency2()>();

        $r31 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla getUnderlyingOption()>();

        $d24 = virtualinvoke $r31.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: double getTimeToExpiry()>();

        $r32 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla getUnderlyingOption()>();

        $d25 = virtualinvoke $r32.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: double getStrike()>();

        d9 = staticinvoke <com.opengamma.analytics.financial.forex.method.FXVolatilityUtils: double getVolatility(com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle,com.opengamma.util.money.Currency,com.opengamma.util.money.Currency,double,double,double)>(r2, $r29, $r30, $d24, $d25, d5);

        $d26 = 1.0 + d0;

        d10 = $d26 * d4;

        $d27 = 1.0 - d0;

        d11 = $d27 * d4;

        r5 = newarray (double)[5];

        r6 = newarray (double)[5];

        $r33 = <com.opengamma.analytics.financial.forex.method.ForexOptionSingleBarrierBlackMethod: com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackBarrierPriceFunction BARRIER_FUNCTION>;

        $r34 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla getUnderlyingOption()>();

        $r35 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.analytics.financial.model.option.definition.Barrier getBarrier()>();

        $d28 = d2 - d3;

        virtualinvoke $r33.<com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackBarrierPriceFunction: double getPriceAdjoint(com.opengamma.analytics.financial.model.option.pricing.analytic.formula.EuropeanVanillaOption,com.opengamma.analytics.financial.model.option.definition.Barrier,double,double,double,double,double,double[])>($r34, $r35, d7, d10, $d28, d2, d9, r5);

        $r36 = <com.opengamma.analytics.financial.forex.method.ForexOptionSingleBarrierBlackMethod: com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackBarrierPriceFunction BARRIER_FUNCTION>;

        $r37 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla getUnderlyingOption()>();

        $r38 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.analytics.financial.model.option.definition.Barrier getBarrier()>();

        $d30 = d2 - d3;

        virtualinvoke $r36.<com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackBarrierPriceFunction: double getPriceAdjoint(com.opengamma.analytics.financial.model.option.pricing.analytic.formula.EuropeanVanillaOption,com.opengamma.analytics.financial.model.option.definition.Barrier,double,double,double,double,double,double[])>($r37, $r38, d7, d11, $d30, d2, d9, r6);

        $d32 = r5[0];

        $d33 = staticinvoke <java.lang.Math: double abs(double)>(d6);

        $d34 = $d32 * $d33;

        d12 = $d34 * $d41;

        $d35 = r6[0];

        $d36 = staticinvoke <java.lang.Math: double abs(double)>(d6);

        $d37 = $d35 * $d36;

        d13 = $d37 * $d41;

        $d40 = d12 - d13;

        $d38 = 2.0 * d0;

        $d39 = $d38 * d4;

        d14 = $d40 / $d39;

        $r39 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla getUnderlyingOption()>();

        $r40 = virtualinvoke $r39.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        r7 = virtualinvoke $r40.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.util.money.Currency getCurrency2()>();

        $r41 = staticinvoke <com.opengamma.util.money.CurrencyAmount: com.opengamma.util.money.CurrencyAmount of(com.opengamma.util.money.Currency,double)>(r7, d14);

        return $r41;
    }

    public com.opengamma.util.money.CurrencyAmount gammaSpot(com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier, com.opengamma.analytics.financial.interestrate.YieldCurveBundle, boolean)
    {
        com.opengamma.analytics.financial.forex.method.ForexOptionSingleBarrierBlackMethod r0;
        com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier r1;
        com.opengamma.analytics.financial.interestrate.YieldCurveBundle r2;
        boolean z0, $z1, $z2;
        com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle r3;
        com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla r4, $r8;
        com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed r5;
        double d1, d2, d3, d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12;
        com.opengamma.analytics.financial.forex.derivative.Forex $r7;
        com.opengamma.util.money.CurrencyAmount $r9, $r14, $r16;
        com.opengamma.analytics.financial.forex.method.FXMatrix $r10;
        com.opengamma.util.money.Currency $r11, $r12, $r13, $r15;

        r0 := @this: com.opengamma.analytics.financial.forex.method.ForexOptionSingleBarrierBlackMethod;

        r1 := @parameter0: com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier;

        r2 := @parameter1: com.opengamma.analytics.financial.interestrate.YieldCurveBundle;

        z0 := @parameter2: boolean;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, "Curves");

        $z1 = r2 instanceof com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z1, "Yield curve bundle should contain smile data");

        r3 = (com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle) r2;

        r4 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla getUnderlyingOption()>();

        $r7 = virtualinvoke r4.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        r5 = virtualinvoke $r7.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed getPaymentCurrency2()>();

        $r8 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla getUnderlyingOption()>();

        $z2 = virtualinvoke $r8.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: boolean isLong()>();

        if $z2 == 0 goto label1;

        $d12 = 1.0;

        goto label2;

     label1:
        $d12 = -1.0;

     label2:
        $r9 = virtualinvoke r0.<com.opengamma.analytics.financial.forex.method.ForexOptionSingleBarrierBlackMethod: com.opengamma.util.money.CurrencyAmount gammaFd(com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier,com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle)>(r1, r3);

        $d5 = virtualinvoke $r9.<com.opengamma.util.money.CurrencyAmount: double getAmount()>();

        d1 = $d5 * $d12;

        $r10 = virtualinvoke r3.<com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle: com.opengamma.analytics.financial.forex.method.FXMatrix getFxRates()>();

        $r11 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.util.money.Currency getCurrency1()>();

        $r12 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.util.money.Currency getCurrency2()>();

        d2 = virtualinvoke $r10.<com.opengamma.analytics.financial.forex.method.FXMatrix: double getFxRate(com.opengamma.util.money.Currency,com.opengamma.util.money.Currency)>($r11, $r12);

        if z0 == 0 goto label3;

        $r15 = virtualinvoke r5.<com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed: com.opengamma.util.money.Currency getCurrency()>();

        $r16 = staticinvoke <com.opengamma.util.money.CurrencyAmount: com.opengamma.util.money.CurrencyAmount of(com.opengamma.util.money.Currency,double)>($r15, d1);

        return $r16;

     label3:
        $d6 = virtualinvoke r0.<com.opengamma.analytics.financial.forex.method.ForexOptionSingleBarrierBlackMethod: double spotDeltaTheoretical(com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier,com.opengamma.analytics.financial.interestrate.YieldCurveBundle)>(r1, r2);

        d3 = $d6 * $d12;

        $d8 = d1 * d2;

        $d7 = 2.0 * d3;

        $d9 = $d8 + $d7;

        $d10 = $d9 * d2;

        $d11 = $d10 * d2;

        d4 = $d11 * d2;

        $r13 = virtualinvoke r5.<com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed: com.opengamma.util.money.Currency getCurrency()>();

        $r14 = staticinvoke <com.opengamma.util.money.CurrencyAmount: com.opengamma.util.money.CurrencyAmount of(com.opengamma.util.money.Currency,double)>($r13, d4);

        return $r14;
    }

    public com.opengamma.util.money.CurrencyAmount gammaFd(com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier, com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle)
    {
        com.opengamma.analytics.financial.forex.method.ForexOptionSingleBarrierBlackMethod r0;
        com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier r1;
        com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle r2;
        com.opengamma.util.money.CurrencyAmount $r5;

        r0 := @this: com.opengamma.analytics.financial.forex.method.ForexOptionSingleBarrierBlackMethod;

        r1 := @parameter0: com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier;

        r2 := @parameter1: com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "Forex option");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, "Smile");

        $r5 = virtualinvoke r0.<com.opengamma.analytics.financial.forex.method.ForexOptionSingleBarrierBlackMethod: com.opengamma.util.money.CurrencyAmount gammaFd(com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier,com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle,double)>(r1, r2, 1.0E-5);

        return $r5;
    }

    public com.opengamma.util.money.CurrencyAmount gammaFd(com.opengamma.analytics.financial.interestrate.InstrumentDerivative, com.opengamma.analytics.financial.interestrate.YieldCurveBundle)
    {
        com.opengamma.analytics.financial.forex.method.ForexOptionSingleBarrierBlackMethod r0;
        com.opengamma.analytics.financial.interestrate.InstrumentDerivative r1;
        com.opengamma.analytics.financial.interestrate.YieldCurveBundle r2;
        boolean $z0, $z1;
        com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle $r3;
        com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier $r4;
        com.opengamma.util.money.CurrencyAmount $r5;

        r0 := @this: com.opengamma.analytics.financial.forex.method.ForexOptionSingleBarrierBlackMethod;

        r1 := @parameter0: com.opengamma.analytics.financial.interestrate.InstrumentDerivative;

        r2 := @parameter1: com.opengamma.analytics.financial.interestrate.YieldCurveBundle;

        $z0 = r1 instanceof com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z0, "Single barrier Forex option");

        $z1 = r2 instanceof com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z1, "Smile delta data bundle required");

        $r4 = (com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier) r1;

        $r3 = (com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle) r2;

        $r5 = virtualinvoke r0.<com.opengamma.analytics.financial.forex.method.ForexOptionSingleBarrierBlackMethod: com.opengamma.util.money.CurrencyAmount gammaFd(com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier,com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle)>($r4, $r3);

        return $r5;
    }

    public com.opengamma.util.money.CurrencyAmount forwardTheta(com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier, com.opengamma.analytics.financial.interestrate.YieldCurveBundle)
    {
        com.opengamma.analytics.financial.forex.method.ForexOptionSingleBarrierBlackMethod r0;
        com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier r1;
        com.opengamma.analytics.financial.interestrate.YieldCurveBundle r2;
        com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle r3;
        com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla r4, $r28, $r32, $r36;
        java.lang.String r5, r6;
        double d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, d10, d11, d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21, $d22, $d23, $d24, $d25, $d26, $d27, $d28, $d29, $d30, $d31, $d32, $d33;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        com.opengamma.analytics.financial.forex.derivative.Forex $r10, $r12, $r14, $r24, $r29, $r33, $r37, $r39;
        com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed $r11, $r13, $r25, $r38;
        com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve $r15, $r16, $r20, $r22;
        com.opengamma.analytics.financial.forex.method.FXMatrix $r17;
        com.opengamma.util.money.Currency $r18, $r19, $r26, $r27, $r40;
        java.lang.Double $r21, $r23;
        com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackBarrierPriceFunction $r30, $r34;
        com.opengamma.analytics.financial.model.option.definition.Barrier $r31, $r35;
        com.opengamma.util.money.CurrencyAmount $r41;

        r0 := @this: com.opengamma.analytics.financial.forex.method.ForexOptionSingleBarrierBlackMethod;

        r1 := @parameter0: com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier;

        r2 := @parameter1: com.opengamma.analytics.financial.interestrate.YieldCurveBundle;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, "Curves");

        $z0 = r2 instanceof com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z0, "Yield curve bundle should contain smile data");

        r3 = (com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle) r2;

        r4 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla getUnderlyingOption()>();

        $r10 = virtualinvoke r4.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        $r11 = virtualinvoke $r10.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed getPaymentCurrency2()>();

        r5 = virtualinvoke $r11.<com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed: java.lang.String getFundingCurveName()>();

        $r12 = virtualinvoke r4.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        $r13 = virtualinvoke $r12.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed getPaymentCurrency1()>();

        r6 = virtualinvoke $r13.<com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed: java.lang.String getFundingCurveName()>();

        $r14 = virtualinvoke r4.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        d0 = virtualinvoke $r14.<com.opengamma.analytics.financial.forex.derivative.Forex: double getPaymentTime()>();

        $r15 = virtualinvoke r3.<com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle: com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve getCurve(java.lang.String)>(r6);

        d1 = virtualinvoke $r15.<com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve: double getDiscountFactor(double)>(d0);

        $r16 = virtualinvoke r3.<com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle: com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve getCurve(java.lang.String)>(r5);

        d2 = virtualinvoke $r16.<com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve: double getDiscountFactor(double)>(d0);

        $r17 = virtualinvoke r3.<com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle: com.opengamma.analytics.financial.forex.method.FXMatrix getFxRates()>();

        $r18 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.util.money.Currency getCurrency1()>();

        $r19 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.util.money.Currency getCurrency2()>();

        d3 = virtualinvoke $r17.<com.opengamma.analytics.financial.forex.method.FXMatrix: double getFxRate(com.opengamma.util.money.Currency,com.opengamma.util.money.Currency)>($r18, $r19);

        $d14 = d3 * d1;

        d4 = $d14 / d2;

        $r20 = virtualinvoke r3.<com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle: com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve getCurve(java.lang.String)>(r5);

        $r21 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d0);

        d5 = virtualinvoke $r20.<com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve: double getInterestRate(java.lang.Object)>($r21);

        $r22 = virtualinvoke r3.<com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle: com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve getCurve(java.lang.String)>(r6);

        $r23 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d0);

        d6 = virtualinvoke $r22.<com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve: double getInterestRate(java.lang.Object)>($r23);

        $r24 = virtualinvoke r4.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        $r25 = virtualinvoke $r24.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed getPaymentCurrency1()>();

        d7 = virtualinvoke $r25.<com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed: double getAmount()>();

        $d15 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: double getRebate()>();

        $d16 = staticinvoke <java.lang.Math: double abs(double)>(d7);

        d8 = $d15 / $d16;

        $r26 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.util.money.Currency getCurrency1()>();

        $r27 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.util.money.Currency getCurrency2()>();

        $d17 = virtualinvoke r4.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: double getTimeToExpiry()>();

        $d18 = virtualinvoke r4.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: double getStrike()>();

        d9 = staticinvoke <com.opengamma.analytics.financial.forex.method.FXVolatilityUtils: double getVolatility(com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle,com.opengamma.util.money.Currency,com.opengamma.util.money.Currency,double,double,double)>(r3, $r26, $r27, $d17, $d18, d4);

        $r28 = new com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla;

        $r29 = virtualinvoke r4.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        $d19 = virtualinvoke r4.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: double getTimeToExpiry()>();

        $d20 = $d19 + 1.1415525114155251E-4;

        $z1 = virtualinvoke r4.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: boolean isCall()>();

        $z2 = virtualinvoke r4.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: boolean isLong()>();

        specialinvoke $r28.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: void <init>(com.opengamma.analytics.financial.forex.derivative.Forex,double,boolean,boolean)>($r29, $d20, $z1, $z2);

        $r30 = <com.opengamma.analytics.financial.forex.method.ForexOptionSingleBarrierBlackMethod: com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackBarrierPriceFunction BARRIER_FUNCTION>;

        $r31 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.analytics.financial.model.option.definition.Barrier getBarrier()>();

        $d21 = d5 - d6;

        $d22 = virtualinvoke $r30.<com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackBarrierPriceFunction: double getPrice(com.opengamma.analytics.financial.model.option.pricing.analytic.formula.EuropeanVanillaOption,com.opengamma.analytics.financial.model.option.definition.Barrier,double,double,double,double,double)>($r28, $r31, d8, d3, $d21, d5, d9);

        d10 = $d22 / d2;

        $r32 = new com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla;

        $r33 = virtualinvoke r4.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        $d23 = virtualinvoke r4.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: double getTimeToExpiry()>();

        $d24 = $d23 - 1.1415525114155251E-4;

        $z3 = virtualinvoke r4.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: boolean isCall()>();

        $z4 = virtualinvoke r4.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: boolean isLong()>();

        specialinvoke $r32.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: void <init>(com.opengamma.analytics.financial.forex.derivative.Forex,double,boolean,boolean)>($r33, $d24, $z3, $z4);

        $r34 = <com.opengamma.analytics.financial.forex.method.ForexOptionSingleBarrierBlackMethod: com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackBarrierPriceFunction BARRIER_FUNCTION>;

        $r35 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.analytics.financial.model.option.definition.Barrier getBarrier()>();

        $d25 = d5 - d6;

        $d26 = virtualinvoke $r34.<com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackBarrierPriceFunction: double getPrice(com.opengamma.analytics.financial.model.option.pricing.analytic.formula.EuropeanVanillaOption,com.opengamma.analytics.financial.model.option.definition.Barrier,double,double,double,double,double)>($r32, $r35, d8, d3, $d25, d5, d9);

        d11 = $d26 / d2;

        $r36 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla getUnderlyingOption()>();

        $z5 = virtualinvoke $r36.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: boolean isLong()>();

        if $z5 == 0 goto label1;

        $d33 = 1.0;

        goto label2;

     label1:
        $d33 = -1.0;

     label2:
        $d27 = d10 - d11;

        $d28 = -0.5 * $d27;

        $d29 = $d28 / 1.1415525114155251E-4;

        $d30 = $d29 * $d33;

        $r37 = virtualinvoke r4.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        $r38 = virtualinvoke $r37.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed getPaymentCurrency1()>();

        $d31 = virtualinvoke $r38.<com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed: double getAmount()>();

        $d32 = staticinvoke <java.lang.Math: double abs(double)>($d31);

        d13 = $d30 * $d32;

        $r39 = virtualinvoke r4.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        $r40 = virtualinvoke $r39.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.util.money.Currency getCurrency2()>();

        $r41 = staticinvoke <com.opengamma.util.money.CurrencyAmount: com.opengamma.util.money.CurrencyAmount of(com.opengamma.util.money.Currency,double)>($r40, d13);

        return $r41;
    }

    public double thetaTheoretical(com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier, com.opengamma.analytics.financial.interestrate.YieldCurveBundle)
    {
        com.opengamma.analytics.financial.forex.method.ForexOptionSingleBarrierBlackMethod r0;
        com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier r1;
        com.opengamma.analytics.financial.interestrate.YieldCurveBundle r2;
        com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle r3;
        com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla r4, $r28, $r32;
        java.lang.String r5, r6;
        double d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, d10, d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21, $d22, $d23, $d24, $d25;
        boolean $z0, $z1, $z2, $z3, $z4;
        com.opengamma.analytics.financial.forex.derivative.Forex $r10, $r12, $r14, $r24, $r29, $r33;
        com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed $r11, $r13, $r25;
        com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve $r15, $r16, $r20, $r22;
        com.opengamma.analytics.financial.forex.method.FXMatrix $r17;
        com.opengamma.util.money.Currency $r18, $r19, $r26, $r27;
        java.lang.Double $r21, $r23;
        com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackBarrierPriceFunction $r30, $r34;
        com.opengamma.analytics.financial.model.option.definition.Barrier $r31, $r35;

        r0 := @this: com.opengamma.analytics.financial.forex.method.ForexOptionSingleBarrierBlackMethod;

        r1 := @parameter0: com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier;

        r2 := @parameter1: com.opengamma.analytics.financial.interestrate.YieldCurveBundle;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, "Curves");

        $z0 = r2 instanceof com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z0, "Yield curve bundle should contain smile data");

        r3 = (com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle) r2;

        r4 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla getUnderlyingOption()>();

        $r10 = virtualinvoke r4.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        $r11 = virtualinvoke $r10.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed getPaymentCurrency2()>();

        r5 = virtualinvoke $r11.<com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed: java.lang.String getFundingCurveName()>();

        $r12 = virtualinvoke r4.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        $r13 = virtualinvoke $r12.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed getPaymentCurrency1()>();

        r6 = virtualinvoke $r13.<com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed: java.lang.String getFundingCurveName()>();

        $r14 = virtualinvoke r4.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        d0 = virtualinvoke $r14.<com.opengamma.analytics.financial.forex.derivative.Forex: double getPaymentTime()>();

        $r15 = virtualinvoke r3.<com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle: com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve getCurve(java.lang.String)>(r6);

        d1 = virtualinvoke $r15.<com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve: double getDiscountFactor(double)>(d0);

        $r16 = virtualinvoke r3.<com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle: com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve getCurve(java.lang.String)>(r5);

        d2 = virtualinvoke $r16.<com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve: double getDiscountFactor(double)>(d0);

        $r17 = virtualinvoke r3.<com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle: com.opengamma.analytics.financial.forex.method.FXMatrix getFxRates()>();

        $r18 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.util.money.Currency getCurrency1()>();

        $r19 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.util.money.Currency getCurrency2()>();

        d3 = virtualinvoke $r17.<com.opengamma.analytics.financial.forex.method.FXMatrix: double getFxRate(com.opengamma.util.money.Currency,com.opengamma.util.money.Currency)>($r18, $r19);

        $d12 = d3 * d1;

        d4 = $d12 / d2;

        $r20 = virtualinvoke r3.<com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle: com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve getCurve(java.lang.String)>(r5);

        $r21 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d0);

        d5 = virtualinvoke $r20.<com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve: double getInterestRate(java.lang.Object)>($r21);

        $r22 = virtualinvoke r3.<com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle: com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve getCurve(java.lang.String)>(r6);

        $r23 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d0);

        d6 = virtualinvoke $r22.<com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve: double getInterestRate(java.lang.Object)>($r23);

        $r24 = virtualinvoke r4.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        $r25 = virtualinvoke $r24.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed getPaymentCurrency1()>();

        d7 = virtualinvoke $r25.<com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed: double getAmount()>();

        $d13 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: double getRebate()>();

        $d14 = staticinvoke <java.lang.Math: double abs(double)>(d7);

        d8 = $d13 / $d14;

        $r26 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.util.money.Currency getCurrency1()>();

        $r27 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.util.money.Currency getCurrency2()>();

        $d15 = virtualinvoke r4.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: double getTimeToExpiry()>();

        $d16 = virtualinvoke r4.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: double getStrike()>();

        d9 = staticinvoke <com.opengamma.analytics.financial.forex.method.FXVolatilityUtils: double getVolatility(com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle,com.opengamma.util.money.Currency,com.opengamma.util.money.Currency,double,double,double)>(r3, $r26, $r27, $d15, $d16, d4);

        $r28 = new com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla;

        $r29 = virtualinvoke r4.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        $d17 = virtualinvoke r4.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: double getTimeToExpiry()>();

        $d18 = $d17 + 1.1415525114155251E-4;

        $z1 = virtualinvoke r4.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: boolean isCall()>();

        $z2 = virtualinvoke r4.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: boolean isLong()>();

        specialinvoke $r28.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: void <init>(com.opengamma.analytics.financial.forex.derivative.Forex,double,boolean,boolean)>($r29, $d18, $z1, $z2);

        $r30 = <com.opengamma.analytics.financial.forex.method.ForexOptionSingleBarrierBlackMethod: com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackBarrierPriceFunction BARRIER_FUNCTION>;

        $r31 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.analytics.financial.model.option.definition.Barrier getBarrier()>();

        $d19 = d5 - d6;

        d10 = virtualinvoke $r30.<com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackBarrierPriceFunction: double getPrice(com.opengamma.analytics.financial.model.option.pricing.analytic.formula.EuropeanVanillaOption,com.opengamma.analytics.financial.model.option.definition.Barrier,double,double,double,double,double)>($r28, $r31, d8, d3, $d19, d5, d9);

        $r32 = new com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla;

        $r33 = virtualinvoke r4.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        $d20 = virtualinvoke r4.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: double getTimeToExpiry()>();

        $d21 = $d20 - 1.1415525114155251E-4;

        $z3 = virtualinvoke r4.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: boolean isCall()>();

        $z4 = virtualinvoke r4.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: boolean isLong()>();

        specialinvoke $r32.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: void <init>(com.opengamma.analytics.financial.forex.derivative.Forex,double,boolean,boolean)>($r33, $d21, $z3, $z4);

        $r34 = <com.opengamma.analytics.financial.forex.method.ForexOptionSingleBarrierBlackMethod: com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackBarrierPriceFunction BARRIER_FUNCTION>;

        $r35 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.analytics.financial.model.option.definition.Barrier getBarrier()>();

        $d22 = d5 - d6;

        d11 = virtualinvoke $r34.<com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackBarrierPriceFunction: double getPrice(com.opengamma.analytics.financial.model.option.pricing.analytic.formula.EuropeanVanillaOption,com.opengamma.analytics.financial.model.option.definition.Barrier,double,double,double,double,double)>($r32, $r35, d8, d3, $d22, d5, d9);

        $d23 = d10 - d11;

        $d24 = -0.5 * $d23;

        $d25 = $d24 / 1.1415525114155251E-4;

        return $d25;
    }

    public double forwardDriftlessThetaTheoretical(com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier, com.opengamma.analytics.financial.interestrate.YieldCurveBundle)
    {
        com.opengamma.analytics.financial.forex.method.ForexOptionSingleBarrierBlackMethod r0;
        com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier r1;
        com.opengamma.analytics.financial.interestrate.YieldCurveBundle r2;
        com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle r3;
        com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla r4, $r24, $r28;
        java.lang.String r5, r6;
        double d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21;
        boolean $z0, $z1, $z2, $z3, $z4;
        com.opengamma.analytics.financial.forex.derivative.Forex $r10, $r12, $r14, $r20, $r25, $r29;
        com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed $r11, $r13, $r21;
        com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve $r15, $r16;
        com.opengamma.analytics.financial.forex.method.FXMatrix $r17;
        com.opengamma.util.money.Currency $r18, $r19, $r22, $r23;
        com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackBarrierPriceFunction $r26, $r30;
        com.opengamma.analytics.financial.model.option.definition.Barrier $r27, $r31;

        r0 := @this: com.opengamma.analytics.financial.forex.method.ForexOptionSingleBarrierBlackMethod;

        r1 := @parameter0: com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier;

        r2 := @parameter1: com.opengamma.analytics.financial.interestrate.YieldCurveBundle;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, "Curves");

        $z0 = r2 instanceof com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z0, "Yield curve bundle should contain smile data");

        r3 = (com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle) r2;

        r4 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla getUnderlyingOption()>();

        $r10 = virtualinvoke r4.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        $r11 = virtualinvoke $r10.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed getPaymentCurrency2()>();

        r5 = virtualinvoke $r11.<com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed: java.lang.String getFundingCurveName()>();

        $r12 = virtualinvoke r4.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        $r13 = virtualinvoke $r12.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed getPaymentCurrency1()>();

        r6 = virtualinvoke $r13.<com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed: java.lang.String getFundingCurveName()>();

        $r14 = virtualinvoke r4.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        d0 = virtualinvoke $r14.<com.opengamma.analytics.financial.forex.derivative.Forex: double getPaymentTime()>();

        $r15 = virtualinvoke r3.<com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle: com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve getCurve(java.lang.String)>(r6);

        d1 = virtualinvoke $r15.<com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve: double getDiscountFactor(double)>(d0);

        $r16 = virtualinvoke r3.<com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle: com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve getCurve(java.lang.String)>(r5);

        d2 = virtualinvoke $r16.<com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve: double getDiscountFactor(double)>(d0);

        $r17 = virtualinvoke r3.<com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle: com.opengamma.analytics.financial.forex.method.FXMatrix getFxRates()>();

        $r18 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.util.money.Currency getCurrency1()>();

        $r19 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.util.money.Currency getCurrency2()>();

        d3 = virtualinvoke $r17.<com.opengamma.analytics.financial.forex.method.FXMatrix: double getFxRate(com.opengamma.util.money.Currency,com.opengamma.util.money.Currency)>($r18, $r19);

        $d10 = d3 * d1;

        d4 = $d10 / d2;

        $r20 = virtualinvoke r4.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        $r21 = virtualinvoke $r20.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed getPaymentCurrency1()>();

        d5 = virtualinvoke $r21.<com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed: double getAmount()>();

        $d11 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: double getRebate()>();

        $d12 = staticinvoke <java.lang.Math: double abs(double)>(d5);

        d6 = $d11 / $d12;

        $r22 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.util.money.Currency getCurrency1()>();

        $r23 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.util.money.Currency getCurrency2()>();

        $d13 = virtualinvoke r4.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: double getTimeToExpiry()>();

        $d14 = virtualinvoke r4.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: double getStrike()>();

        d7 = staticinvoke <com.opengamma.analytics.financial.forex.method.FXVolatilityUtils: double getVolatility(com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle,com.opengamma.util.money.Currency,com.opengamma.util.money.Currency,double,double,double)>(r3, $r22, $r23, $d13, $d14, d4);

        $r24 = new com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla;

        $r25 = virtualinvoke r4.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        $d15 = virtualinvoke r4.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: double getTimeToExpiry()>();

        $d16 = $d15 + 1.1415525114155251E-4;

        $z1 = virtualinvoke r4.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: boolean isCall()>();

        $z2 = virtualinvoke r4.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: boolean isLong()>();

        specialinvoke $r24.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: void <init>(com.opengamma.analytics.financial.forex.derivative.Forex,double,boolean,boolean)>($r25, $d16, $z1, $z2);

        $r26 = <com.opengamma.analytics.financial.forex.method.ForexOptionSingleBarrierBlackMethod: com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackBarrierPriceFunction BARRIER_FUNCTION>;

        $r27 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.analytics.financial.model.option.definition.Barrier getBarrier()>();

        d8 = virtualinvoke $r26.<com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackBarrierPriceFunction: double getPrice(com.opengamma.analytics.financial.model.option.pricing.analytic.formula.EuropeanVanillaOption,com.opengamma.analytics.financial.model.option.definition.Barrier,double,double,double,double,double)>($r24, $r27, d6, d4, 0.0, 0.0, d7);

        $r28 = new com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla;

        $r29 = virtualinvoke r4.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        $d17 = virtualinvoke r4.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: double getTimeToExpiry()>();

        $d18 = $d17 - 1.1415525114155251E-4;

        $z3 = virtualinvoke r4.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: boolean isCall()>();

        $z4 = virtualinvoke r4.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: boolean isLong()>();

        specialinvoke $r28.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: void <init>(com.opengamma.analytics.financial.forex.derivative.Forex,double,boolean,boolean)>($r29, $d18, $z3, $z4);

        $r30 = <com.opengamma.analytics.financial.forex.method.ForexOptionSingleBarrierBlackMethod: com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackBarrierPriceFunction BARRIER_FUNCTION>;

        $r31 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.analytics.financial.model.option.definition.Barrier getBarrier()>();

        d9 = virtualinvoke $r30.<com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackBarrierPriceFunction: double getPrice(com.opengamma.analytics.financial.model.option.pricing.analytic.formula.EuropeanVanillaOption,com.opengamma.analytics.financial.model.option.definition.Barrier,double,double,double,double,double)>($r28, $r31, d6, d4, 0.0, 0.0, d7);

        $d19 = d8 - d9;

        $d20 = -0.5 * $d19;

        $d21 = $d20 / 1.1415525114155251E-4;

        return $d21;
    }

    public com.opengamma.util.money.CurrencyAmount vommaFd(com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier, com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle, double)
    {
        com.opengamma.analytics.financial.forex.method.ForexOptionSingleBarrierBlackMethod r0;
        com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier r1;
        com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle r2;
        double d0, d1, d2, d3, d4, d5, d6, d7, d9, d10, d11, d12, d13, d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21, $d22, $d23, $d24, $d25, $d26, $d27, $d28, $d30, $d32, $d33, $d34, $d35, $d36, $d37, $d38, $d39, $d40, $d41;
        java.lang.String r3, r4;
        double[] r5, r6;
        com.opengamma.util.money.Currency r7, $r23, $r24, $r29, $r30;
        com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla $r10, $r13, $r16, $r25, $r28, $r31, $r32, $r34, $r37, $r39;
        com.opengamma.analytics.financial.forex.derivative.Forex $r11, $r14, $r17, $r26, $r40;
        com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed $r12, $r15, $r27;
        com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve $r18, $r20;
        java.lang.Double $r19, $r21;
        com.opengamma.analytics.financial.forex.method.FXMatrix $r22;
        boolean $z0;
        com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackBarrierPriceFunction $r33, $r36;
        com.opengamma.analytics.financial.model.option.definition.Barrier $r35, $r38;
        com.opengamma.util.money.CurrencyAmount $r41;

        r0 := @this: com.opengamma.analytics.financial.forex.method.ForexOptionSingleBarrierBlackMethod;

        r1 := @parameter0: com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier;

        r2 := @parameter1: com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle;

        d0 := @parameter2: double;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "Forex option");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, "Smile");

        $r10 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla getUnderlyingOption()>();

        $r11 = virtualinvoke $r10.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        $r12 = virtualinvoke $r11.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed getPaymentCurrency2()>();

        r3 = virtualinvoke $r12.<com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed: java.lang.String getFundingCurveName()>();

        $r13 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla getUnderlyingOption()>();

        $r14 = virtualinvoke $r13.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        $r15 = virtualinvoke $r14.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed getPaymentCurrency1()>();

        r4 = virtualinvoke $r15.<com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed: java.lang.String getFundingCurveName()>();

        $r16 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla getUnderlyingOption()>();

        $r17 = virtualinvoke $r16.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        d1 = virtualinvoke $r17.<com.opengamma.analytics.financial.forex.derivative.Forex: double getPaymentTime()>();

        $r18 = virtualinvoke r2.<com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle: com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve getCurve(java.lang.String)>(r3);

        $r19 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d1);

        d2 = virtualinvoke $r18.<com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve: double getInterestRate(java.lang.Object)>($r19);

        $r20 = virtualinvoke r2.<com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle: com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve getCurve(java.lang.String)>(r4);

        $r21 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d1);

        d3 = virtualinvoke $r20.<com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve: double getInterestRate(java.lang.Object)>($r21);

        $r22 = virtualinvoke r2.<com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle: com.opengamma.analytics.financial.forex.method.FXMatrix getFxRates()>();

        $r23 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.util.money.Currency getCurrency1()>();

        $r24 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.util.money.Currency getCurrency2()>();

        d4 = virtualinvoke $r22.<com.opengamma.analytics.financial.forex.method.FXMatrix: double getFxRate(com.opengamma.util.money.Currency,com.opengamma.util.money.Currency)>($r23, $r24);

        $d15 = neg d3;

        $d16 = $d15 * d1;

        $d17 = staticinvoke <java.lang.Math: double exp(double)>($d16);

        $d20 = d4 * $d17;

        $d18 = neg d2;

        $d19 = $d18 * d1;

        $d21 = staticinvoke <java.lang.Math: double exp(double)>($d19);

        d5 = $d20 / $d21;

        $r25 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla getUnderlyingOption()>();

        $r26 = virtualinvoke $r25.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        $r27 = virtualinvoke $r26.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed getPaymentCurrency1()>();

        d6 = virtualinvoke $r27.<com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed: double getAmount()>();

        $d22 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: double getRebate()>();

        $d23 = staticinvoke <java.lang.Math: double abs(double)>(d6);

        d7 = $d22 / $d23;

        $r28 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla getUnderlyingOption()>();

        $z0 = virtualinvoke $r28.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: boolean isLong()>();

        if $z0 == 0 goto label1;

        $d41 = 1.0;

        goto label2;

     label1:
        $d41 = -1.0;

     label2:
        $r29 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.util.money.Currency getCurrency1()>();

        $r30 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.util.money.Currency getCurrency2()>();

        $r31 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla getUnderlyingOption()>();

        $d24 = virtualinvoke $r31.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: double getTimeToExpiry()>();

        $r32 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla getUnderlyingOption()>();

        $d25 = virtualinvoke $r32.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: double getStrike()>();

        d9 = staticinvoke <com.opengamma.analytics.financial.forex.method.FXVolatilityUtils: double getVolatility(com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle,com.opengamma.util.money.Currency,com.opengamma.util.money.Currency,double,double,double)>(r2, $r29, $r30, $d24, $d25, d5);

        $d26 = 1.0 + d0;

        d10 = $d26 * d9;

        $d27 = 1.0 - d0;

        d11 = $d27 * d9;

        r5 = newarray (double)[5];

        r6 = newarray (double)[5];

        $r33 = <com.opengamma.analytics.financial.forex.method.ForexOptionSingleBarrierBlackMethod: com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackBarrierPriceFunction BARRIER_FUNCTION>;

        $r34 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla getUnderlyingOption()>();

        $r35 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.analytics.financial.model.option.definition.Barrier getBarrier()>();

        $d28 = d2 - d3;

        virtualinvoke $r33.<com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackBarrierPriceFunction: double getPriceAdjoint(com.opengamma.analytics.financial.model.option.pricing.analytic.formula.EuropeanVanillaOption,com.opengamma.analytics.financial.model.option.definition.Barrier,double,double,double,double,double,double[])>($r34, $r35, d7, d4, $d28, d2, d10, r5);

        $r36 = <com.opengamma.analytics.financial.forex.method.ForexOptionSingleBarrierBlackMethod: com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackBarrierPriceFunction BARRIER_FUNCTION>;

        $r37 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla getUnderlyingOption()>();

        $r38 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.analytics.financial.model.option.definition.Barrier getBarrier()>();

        $d30 = d2 - d3;

        virtualinvoke $r36.<com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackBarrierPriceFunction: double getPriceAdjoint(com.opengamma.analytics.financial.model.option.pricing.analytic.formula.EuropeanVanillaOption,com.opengamma.analytics.financial.model.option.definition.Barrier,double,double,double,double,double,double[])>($r37, $r38, d7, d4, $d30, d2, d11, r6);

        $d32 = r5[4];

        $d33 = staticinvoke <java.lang.Math: double abs(double)>(d6);

        $d34 = $d32 * $d33;

        d12 = $d34 * $d41;

        $d35 = r6[4];

        $d36 = staticinvoke <java.lang.Math: double abs(double)>(d6);

        $d37 = $d35 * $d36;

        d13 = $d37 * $d41;

        $d40 = d12 - d13;

        $d38 = 2.0 * d0;

        $d39 = $d38 * d9;

        d14 = $d40 / $d39;

        $r39 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla getUnderlyingOption()>();

        $r40 = virtualinvoke $r39.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        r7 = virtualinvoke $r40.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.util.money.Currency getCurrency2()>();

        $r41 = staticinvoke <com.opengamma.util.money.CurrencyAmount: com.opengamma.util.money.CurrencyAmount of(com.opengamma.util.money.Currency,double)>(r7, d14);

        return $r41;
    }

    public com.opengamma.util.money.CurrencyAmount vommaFd(com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier, com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle)
    {
        com.opengamma.analytics.financial.forex.method.ForexOptionSingleBarrierBlackMethod r0;
        com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier r1;
        com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle r2;
        com.opengamma.util.money.CurrencyAmount $r5;

        r0 := @this: com.opengamma.analytics.financial.forex.method.ForexOptionSingleBarrierBlackMethod;

        r1 := @parameter0: com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier;

        r2 := @parameter1: com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "Forex option");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, "Smile");

        $r5 = virtualinvoke r0.<com.opengamma.analytics.financial.forex.method.ForexOptionSingleBarrierBlackMethod: com.opengamma.util.money.CurrencyAmount vommaFd(com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier,com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle,double)>(r1, r2, 1.0E-5);

        return $r5;
    }

    public com.opengamma.util.money.CurrencyAmount vommaFd(com.opengamma.analytics.financial.interestrate.InstrumentDerivative, com.opengamma.analytics.financial.interestrate.YieldCurveBundle)
    {
        com.opengamma.analytics.financial.forex.method.ForexOptionSingleBarrierBlackMethod r0;
        com.opengamma.analytics.financial.interestrate.InstrumentDerivative r1;
        com.opengamma.analytics.financial.interestrate.YieldCurveBundle r2;
        boolean $z0, $z1;
        com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle $r3;
        com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier $r4;
        com.opengamma.util.money.CurrencyAmount $r5;

        r0 := @this: com.opengamma.analytics.financial.forex.method.ForexOptionSingleBarrierBlackMethod;

        r1 := @parameter0: com.opengamma.analytics.financial.interestrate.InstrumentDerivative;

        r2 := @parameter1: com.opengamma.analytics.financial.interestrate.YieldCurveBundle;

        $z0 = r1 instanceof com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z0, "Single barrier Forex option");

        $z1 = r2 instanceof com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z1, "Smile delta data bundle required");

        $r4 = (com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier) r1;

        $r3 = (com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle) r2;

        $r5 = virtualinvoke r0.<com.opengamma.analytics.financial.forex.method.ForexOptionSingleBarrierBlackMethod: com.opengamma.util.money.CurrencyAmount vommaFd(com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier,com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle)>($r4, $r3);

        return $r5;
    }

    public com.opengamma.util.money.CurrencyAmount vannaFd(com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier, com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle, double)
    {
        com.opengamma.analytics.financial.forex.method.ForexOptionSingleBarrierBlackMethod r0;
        com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier r1;
        com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle r2;
        double d0;
        com.opengamma.util.money.CurrencyAmount $r3;

        r0 := @this: com.opengamma.analytics.financial.forex.method.ForexOptionSingleBarrierBlackMethod;

        r1 := @parameter0: com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier;

        r2 := @parameter1: com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle;

        d0 := @parameter2: double;

        $r3 = virtualinvoke r0.<com.opengamma.analytics.financial.forex.method.ForexOptionSingleBarrierBlackMethod: com.opengamma.util.money.CurrencyAmount d2PriceDSpotDVolFD(com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier,com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle,double)>(r1, r2, d0);

        return $r3;
    }

    public com.opengamma.util.money.CurrencyAmount vannaFd(com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier, com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle)
    {
        com.opengamma.analytics.financial.forex.method.ForexOptionSingleBarrierBlackMethod r0;
        com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier r1;
        com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle r2;
        com.opengamma.util.money.CurrencyAmount $r5;

        r0 := @this: com.opengamma.analytics.financial.forex.method.ForexOptionSingleBarrierBlackMethod;

        r1 := @parameter0: com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier;

        r2 := @parameter1: com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "Forex option");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, "Smile");

        $r5 = virtualinvoke r0.<com.opengamma.analytics.financial.forex.method.ForexOptionSingleBarrierBlackMethod: com.opengamma.util.money.CurrencyAmount vannaFd(com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier,com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle,double)>(r1, r2, 1.0E-5);

        return $r5;
    }

    public com.opengamma.util.money.CurrencyAmount vannaFd(com.opengamma.analytics.financial.interestrate.InstrumentDerivative, com.opengamma.analytics.financial.interestrate.YieldCurveBundle)
    {
        com.opengamma.analytics.financial.forex.method.ForexOptionSingleBarrierBlackMethod r0;
        com.opengamma.analytics.financial.interestrate.InstrumentDerivative r1;
        com.opengamma.analytics.financial.interestrate.YieldCurveBundle r2;
        boolean $z0, $z1;
        com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle $r3;
        com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier $r4;
        com.opengamma.util.money.CurrencyAmount $r5;

        r0 := @this: com.opengamma.analytics.financial.forex.method.ForexOptionSingleBarrierBlackMethod;

        r1 := @parameter0: com.opengamma.analytics.financial.interestrate.InstrumentDerivative;

        r2 := @parameter1: com.opengamma.analytics.financial.interestrate.YieldCurveBundle;

        $z0 = r1 instanceof com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z0, "Single barrier Forex option");

        $z1 = r2 instanceof com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z1, "Smile delta data bundle required");

        $r4 = (com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier) r1;

        $r3 = (com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle) r2;

        $r5 = virtualinvoke r0.<com.opengamma.analytics.financial.forex.method.ForexOptionSingleBarrierBlackMethod: com.opengamma.util.money.CurrencyAmount vannaFd(com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier,com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle)>($r4, $r3);

        return $r5;
    }

    public com.opengamma.util.money.CurrencyAmount dVegaDSpotFD(com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier, com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle, double)
    {
        com.opengamma.analytics.financial.forex.method.ForexOptionSingleBarrierBlackMethod r0;
        com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier r1;
        com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle r2;
        double d0, d1, d2, d3, d4, d5, d6, d7, d9, d10, d11, d12, d13, d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21, $d22, $d23, $d24, $d25, $d26, $d27, $d28, $d30, $d32, $d33, $d34, $d35, $d36, $d37, $d38, $d39, $d40, $d41;
        java.lang.String r3, r4;
        double[] r5, r6;
        com.opengamma.util.money.Currency r7, $r23, $r24, $r29, $r30;
        com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla $r10, $r13, $r16, $r25, $r28, $r31, $r32, $r34, $r37, $r39;
        com.opengamma.analytics.financial.forex.derivative.Forex $r11, $r14, $r17, $r26, $r40;
        com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed $r12, $r15, $r27;
        com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve $r18, $r20;
        java.lang.Double $r19, $r21;
        com.opengamma.analytics.financial.forex.method.FXMatrix $r22;
        boolean $z0;
        com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackBarrierPriceFunction $r33, $r36;
        com.opengamma.analytics.financial.model.option.definition.Barrier $r35, $r38;
        com.opengamma.util.money.CurrencyAmount $r41;

        r0 := @this: com.opengamma.analytics.financial.forex.method.ForexOptionSingleBarrierBlackMethod;

        r1 := @parameter0: com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier;

        r2 := @parameter1: com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle;

        d0 := @parameter2: double;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "Forex option");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, "Smile");

        $r10 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla getUnderlyingOption()>();

        $r11 = virtualinvoke $r10.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        $r12 = virtualinvoke $r11.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed getPaymentCurrency2()>();

        r3 = virtualinvoke $r12.<com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed: java.lang.String getFundingCurveName()>();

        $r13 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla getUnderlyingOption()>();

        $r14 = virtualinvoke $r13.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        $r15 = virtualinvoke $r14.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed getPaymentCurrency1()>();

        r4 = virtualinvoke $r15.<com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed: java.lang.String getFundingCurveName()>();

        $r16 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla getUnderlyingOption()>();

        $r17 = virtualinvoke $r16.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        d1 = virtualinvoke $r17.<com.opengamma.analytics.financial.forex.derivative.Forex: double getPaymentTime()>();

        $r18 = virtualinvoke r2.<com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle: com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve getCurve(java.lang.String)>(r3);

        $r19 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d1);

        d2 = virtualinvoke $r18.<com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve: double getInterestRate(java.lang.Object)>($r19);

        $r20 = virtualinvoke r2.<com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle: com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve getCurve(java.lang.String)>(r4);

        $r21 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d1);

        d3 = virtualinvoke $r20.<com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve: double getInterestRate(java.lang.Object)>($r21);

        $r22 = virtualinvoke r2.<com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle: com.opengamma.analytics.financial.forex.method.FXMatrix getFxRates()>();

        $r23 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.util.money.Currency getCurrency1()>();

        $r24 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.util.money.Currency getCurrency2()>();

        d4 = virtualinvoke $r22.<com.opengamma.analytics.financial.forex.method.FXMatrix: double getFxRate(com.opengamma.util.money.Currency,com.opengamma.util.money.Currency)>($r23, $r24);

        $d15 = neg d3;

        $d16 = $d15 * d1;

        $d17 = staticinvoke <java.lang.Math: double exp(double)>($d16);

        $d20 = d4 * $d17;

        $d18 = neg d2;

        $d19 = $d18 * d1;

        $d21 = staticinvoke <java.lang.Math: double exp(double)>($d19);

        d5 = $d20 / $d21;

        $r25 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla getUnderlyingOption()>();

        $r26 = virtualinvoke $r25.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        $r27 = virtualinvoke $r26.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed getPaymentCurrency1()>();

        d6 = virtualinvoke $r27.<com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed: double getAmount()>();

        $d22 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: double getRebate()>();

        $d23 = staticinvoke <java.lang.Math: double abs(double)>(d6);

        d7 = $d22 / $d23;

        $r28 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla getUnderlyingOption()>();

        $z0 = virtualinvoke $r28.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: boolean isLong()>();

        if $z0 == 0 goto label1;

        $d41 = 1.0;

        goto label2;

     label1:
        $d41 = -1.0;

     label2:
        $r29 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.util.money.Currency getCurrency1()>();

        $r30 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.util.money.Currency getCurrency2()>();

        $r31 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla getUnderlyingOption()>();

        $d24 = virtualinvoke $r31.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: double getTimeToExpiry()>();

        $r32 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla getUnderlyingOption()>();

        $d25 = virtualinvoke $r32.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: double getStrike()>();

        d9 = staticinvoke <com.opengamma.analytics.financial.forex.method.FXVolatilityUtils: double getVolatility(com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle,com.opengamma.util.money.Currency,com.opengamma.util.money.Currency,double,double,double)>(r2, $r29, $r30, $d24, $d25, d5);

        $d26 = 1.0 + d0;

        d10 = $d26 * d4;

        $d27 = 1.0 - d0;

        d11 = $d27 * d4;

        r5 = newarray (double)[5];

        r6 = newarray (double)[5];

        $r33 = <com.opengamma.analytics.financial.forex.method.ForexOptionSingleBarrierBlackMethod: com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackBarrierPriceFunction BARRIER_FUNCTION>;

        $r34 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla getUnderlyingOption()>();

        $r35 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.analytics.financial.model.option.definition.Barrier getBarrier()>();

        $d28 = d2 - d3;

        virtualinvoke $r33.<com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackBarrierPriceFunction: double getPriceAdjoint(com.opengamma.analytics.financial.model.option.pricing.analytic.formula.EuropeanVanillaOption,com.opengamma.analytics.financial.model.option.definition.Barrier,double,double,double,double,double,double[])>($r34, $r35, d7, d10, $d28, d2, d9, r5);

        $r36 = <com.opengamma.analytics.financial.forex.method.ForexOptionSingleBarrierBlackMethod: com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackBarrierPriceFunction BARRIER_FUNCTION>;

        $r37 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla getUnderlyingOption()>();

        $r38 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.analytics.financial.model.option.definition.Barrier getBarrier()>();

        $d30 = d2 - d3;

        virtualinvoke $r36.<com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackBarrierPriceFunction: double getPriceAdjoint(com.opengamma.analytics.financial.model.option.pricing.analytic.formula.EuropeanVanillaOption,com.opengamma.analytics.financial.model.option.definition.Barrier,double,double,double,double,double,double[])>($r37, $r38, d7, d11, $d30, d2, d9, r6);

        $d32 = r5[4];

        $d33 = staticinvoke <java.lang.Math: double abs(double)>(d6);

        $d34 = $d32 * $d33;

        d12 = $d34 * $d41;

        $d35 = r6[4];

        $d36 = staticinvoke <java.lang.Math: double abs(double)>(d6);

        $d37 = $d35 * $d36;

        d13 = $d37 * $d41;

        $d40 = d12 - d13;

        $d38 = 2.0 * d0;

        $d39 = $d38 * d9;

        d14 = $d40 / $d39;

        $r39 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla getUnderlyingOption()>();

        $r40 = virtualinvoke $r39.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        r7 = virtualinvoke $r40.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.util.money.Currency getCurrency2()>();

        $r41 = staticinvoke <com.opengamma.util.money.CurrencyAmount: com.opengamma.util.money.CurrencyAmount of(com.opengamma.util.money.Currency,double)>(r7, d14);

        return $r41;
    }

    public com.opengamma.util.money.CurrencyAmount dDeltaDVolFD(com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier, com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle, double)
    {
        com.opengamma.analytics.financial.forex.method.ForexOptionSingleBarrierBlackMethod r0;
        com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier r1;
        com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle r2;
        double d0, d1, d2, d3, d4, d5, d6, d7, d9, d10, d11, d12, d13, d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21, $d22, $d23, $d24, $d25, $d26, $d27, $d28, $d30, $d32, $d33, $d34, $d35, $d36, $d37, $d38, $d39, $d40, $d41;
        java.lang.String r3, r4;
        double[] r5, r6;
        com.opengamma.util.money.Currency r7, $r23, $r24, $r29, $r30;
        com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla $r10, $r13, $r16, $r25, $r28, $r31, $r32, $r34, $r37, $r39;
        com.opengamma.analytics.financial.forex.derivative.Forex $r11, $r14, $r17, $r26, $r40;
        com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed $r12, $r15, $r27;
        com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve $r18, $r20;
        java.lang.Double $r19, $r21;
        com.opengamma.analytics.financial.forex.method.FXMatrix $r22;
        boolean $z0;
        com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackBarrierPriceFunction $r33, $r36;
        com.opengamma.analytics.financial.model.option.definition.Barrier $r35, $r38;
        com.opengamma.util.money.CurrencyAmount $r41;

        r0 := @this: com.opengamma.analytics.financial.forex.method.ForexOptionSingleBarrierBlackMethod;

        r1 := @parameter0: com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier;

        r2 := @parameter1: com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle;

        d0 := @parameter2: double;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "Forex option");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, "Smile");

        $r10 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla getUnderlyingOption()>();

        $r11 = virtualinvoke $r10.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        $r12 = virtualinvoke $r11.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed getPaymentCurrency2()>();

        r3 = virtualinvoke $r12.<com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed: java.lang.String getFundingCurveName()>();

        $r13 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla getUnderlyingOption()>();

        $r14 = virtualinvoke $r13.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        $r15 = virtualinvoke $r14.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed getPaymentCurrency1()>();

        r4 = virtualinvoke $r15.<com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed: java.lang.String getFundingCurveName()>();

        $r16 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla getUnderlyingOption()>();

        $r17 = virtualinvoke $r16.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        d1 = virtualinvoke $r17.<com.opengamma.analytics.financial.forex.derivative.Forex: double getPaymentTime()>();

        $r18 = virtualinvoke r2.<com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle: com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve getCurve(java.lang.String)>(r3);

        $r19 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d1);

        d2 = virtualinvoke $r18.<com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve: double getInterestRate(java.lang.Object)>($r19);

        $r20 = virtualinvoke r2.<com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle: com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve getCurve(java.lang.String)>(r4);

        $r21 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d1);

        d3 = virtualinvoke $r20.<com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve: double getInterestRate(java.lang.Object)>($r21);

        $r22 = virtualinvoke r2.<com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle: com.opengamma.analytics.financial.forex.method.FXMatrix getFxRates()>();

        $r23 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.util.money.Currency getCurrency1()>();

        $r24 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.util.money.Currency getCurrency2()>();

        d4 = virtualinvoke $r22.<com.opengamma.analytics.financial.forex.method.FXMatrix: double getFxRate(com.opengamma.util.money.Currency,com.opengamma.util.money.Currency)>($r23, $r24);

        $d15 = neg d3;

        $d16 = $d15 * d1;

        $d17 = staticinvoke <java.lang.Math: double exp(double)>($d16);

        $d20 = d4 * $d17;

        $d18 = neg d2;

        $d19 = $d18 * d1;

        $d21 = staticinvoke <java.lang.Math: double exp(double)>($d19);

        d5 = $d20 / $d21;

        $r25 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla getUnderlyingOption()>();

        $r26 = virtualinvoke $r25.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        $r27 = virtualinvoke $r26.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed getPaymentCurrency1()>();

        d6 = virtualinvoke $r27.<com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed: double getAmount()>();

        $d22 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: double getRebate()>();

        $d23 = staticinvoke <java.lang.Math: double abs(double)>(d6);

        d7 = $d22 / $d23;

        $r28 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla getUnderlyingOption()>();

        $z0 = virtualinvoke $r28.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: boolean isLong()>();

        if $z0 == 0 goto label1;

        $d41 = 1.0;

        goto label2;

     label1:
        $d41 = -1.0;

     label2:
        $r29 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.util.money.Currency getCurrency1()>();

        $r30 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.util.money.Currency getCurrency2()>();

        $r31 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla getUnderlyingOption()>();

        $d24 = virtualinvoke $r31.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: double getTimeToExpiry()>();

        $r32 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla getUnderlyingOption()>();

        $d25 = virtualinvoke $r32.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: double getStrike()>();

        d9 = staticinvoke <com.opengamma.analytics.financial.forex.method.FXVolatilityUtils: double getVolatility(com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle,com.opengamma.util.money.Currency,com.opengamma.util.money.Currency,double,double,double)>(r2, $r29, $r30, $d24, $d25, d5);

        $d26 = 1.0 + d0;

        d10 = $d26 * d9;

        $d27 = 1.0 - d0;

        d11 = $d27 * d9;

        r5 = newarray (double)[5];

        r6 = newarray (double)[5];

        $r33 = <com.opengamma.analytics.financial.forex.method.ForexOptionSingleBarrierBlackMethod: com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackBarrierPriceFunction BARRIER_FUNCTION>;

        $r34 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla getUnderlyingOption()>();

        $r35 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.analytics.financial.model.option.definition.Barrier getBarrier()>();

        $d28 = d2 - d3;

        virtualinvoke $r33.<com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackBarrierPriceFunction: double getPriceAdjoint(com.opengamma.analytics.financial.model.option.pricing.analytic.formula.EuropeanVanillaOption,com.opengamma.analytics.financial.model.option.definition.Barrier,double,double,double,double,double,double[])>($r34, $r35, d7, d4, $d28, d2, d10, r5);

        $r36 = <com.opengamma.analytics.financial.forex.method.ForexOptionSingleBarrierBlackMethod: com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackBarrierPriceFunction BARRIER_FUNCTION>;

        $r37 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla getUnderlyingOption()>();

        $r38 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.analytics.financial.model.option.definition.Barrier getBarrier()>();

        $d30 = d2 - d3;

        virtualinvoke $r36.<com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackBarrierPriceFunction: double getPriceAdjoint(com.opengamma.analytics.financial.model.option.pricing.analytic.formula.EuropeanVanillaOption,com.opengamma.analytics.financial.model.option.definition.Barrier,double,double,double,double,double,double[])>($r37, $r38, d7, d4, $d30, d2, d11, r6);

        $d32 = r5[0];

        $d33 = staticinvoke <java.lang.Math: double abs(double)>(d6);

        $d34 = $d32 * $d33;

        d12 = $d34 * $d41;

        $d35 = r6[0];

        $d36 = staticinvoke <java.lang.Math: double abs(double)>(d6);

        $d37 = $d35 * $d36;

        d13 = $d37 * $d41;

        $d40 = d12 - d13;

        $d38 = 2.0 * d0;

        $d39 = $d38 * d4;

        d14 = $d40 / $d39;

        $r39 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla getUnderlyingOption()>();

        $r40 = virtualinvoke $r39.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        r7 = virtualinvoke $r40.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.util.money.Currency getCurrency2()>();

        $r41 = staticinvoke <com.opengamma.util.money.CurrencyAmount: com.opengamma.util.money.CurrencyAmount of(com.opengamma.util.money.Currency,double)>(r7, d14);

        return $r41;
    }

    public com.opengamma.util.money.CurrencyAmount d2PriceDSpotDVolFD(com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier, com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle, double)
    {
        com.opengamma.analytics.financial.forex.method.ForexOptionSingleBarrierBlackMethod r0;
        com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier r1;
        com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle r2;
        double d0, d1, d2, d3, d4, d5, d6, d7, d8, d10, d11, d12, d13, d14, d15, d16, d17, d18, d19, $d20, $d21, $d22, $d23, $d24, $d25, $d26, $d27, $d28, $d29, $d30, $d31, $d32, $d33, $d34, $d35, $d36, $d37, $d38, $d39, $d40, $d41, $d42, $d43, $d44, $d45, $d46;
        java.lang.String r3, r4;
        com.opengamma.util.money.Currency r5, $r21, $r22, $r27, $r28;
        com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla $r8, $r11, $r14, $r23, $r26, $r29, $r30, $r32, $r35, $r38, $r41, $r43;
        com.opengamma.analytics.financial.forex.derivative.Forex $r9, $r12, $r15, $r24, $r44;
        com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed $r10, $r13, $r25;
        com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve $r16, $r18;
        java.lang.Double $r17, $r19;
        com.opengamma.analytics.financial.forex.method.FXMatrix $r20;
        boolean $z0;
        com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackBarrierPriceFunction $r31, $r34, $r37, $r40;
        com.opengamma.analytics.financial.model.option.definition.Barrier $r33, $r36, $r39, $r42;
        com.opengamma.util.money.CurrencyAmount $r45;

        r0 := @this: com.opengamma.analytics.financial.forex.method.ForexOptionSingleBarrierBlackMethod;

        r1 := @parameter0: com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier;

        r2 := @parameter1: com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle;

        d0 := @parameter2: double;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "Forex option");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, "Smile");

        $r8 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla getUnderlyingOption()>();

        $r9 = virtualinvoke $r8.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        $r10 = virtualinvoke $r9.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed getPaymentCurrency2()>();

        r3 = virtualinvoke $r10.<com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed: java.lang.String getFundingCurveName()>();

        $r11 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla getUnderlyingOption()>();

        $r12 = virtualinvoke $r11.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        $r13 = virtualinvoke $r12.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed getPaymentCurrency1()>();

        r4 = virtualinvoke $r13.<com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed: java.lang.String getFundingCurveName()>();

        $r14 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla getUnderlyingOption()>();

        $r15 = virtualinvoke $r14.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        d1 = virtualinvoke $r15.<com.opengamma.analytics.financial.forex.derivative.Forex: double getPaymentTime()>();

        $r16 = virtualinvoke r2.<com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle: com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve getCurve(java.lang.String)>(r3);

        $r17 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d1);

        d2 = virtualinvoke $r16.<com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve: double getInterestRate(java.lang.Object)>($r17);

        $r18 = virtualinvoke r2.<com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle: com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve getCurve(java.lang.String)>(r4);

        $r19 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d1);

        d3 = virtualinvoke $r18.<com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve: double getInterestRate(java.lang.Object)>($r19);

        d4 = d2 - d3;

        $r20 = virtualinvoke r2.<com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle: com.opengamma.analytics.financial.forex.method.FXMatrix getFxRates()>();

        $r21 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.util.money.Currency getCurrency1()>();

        $r22 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.util.money.Currency getCurrency2()>();

        d5 = virtualinvoke $r20.<com.opengamma.analytics.financial.forex.method.FXMatrix: double getFxRate(com.opengamma.util.money.Currency,com.opengamma.util.money.Currency)>($r21, $r22);

        $d20 = neg d3;

        $d21 = $d20 * d1;

        $d22 = staticinvoke <java.lang.Math: double exp(double)>($d21);

        $d25 = d5 * $d22;

        $d23 = neg d2;

        $d24 = $d23 * d1;

        $d26 = staticinvoke <java.lang.Math: double exp(double)>($d24);

        d6 = $d25 / $d26;

        $r23 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla getUnderlyingOption()>();

        $r24 = virtualinvoke $r23.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        $r25 = virtualinvoke $r24.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed getPaymentCurrency1()>();

        d7 = virtualinvoke $r25.<com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed: double getAmount()>();

        $d27 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: double getRebate()>();

        $d28 = staticinvoke <java.lang.Math: double abs(double)>(d7);

        d8 = $d27 / $d28;

        $r26 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla getUnderlyingOption()>();

        $z0 = virtualinvoke $r26.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: boolean isLong()>();

        if $z0 == 0 goto label1;

        $d46 = 1.0;

        goto label2;

     label1:
        $d46 = -1.0;

     label2:
        $r27 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.util.money.Currency getCurrency1()>();

        $r28 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.util.money.Currency getCurrency2()>();

        $r29 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla getUnderlyingOption()>();

        $d29 = virtualinvoke $r29.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: double getTimeToExpiry()>();

        $r30 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla getUnderlyingOption()>();

        $d30 = virtualinvoke $r30.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: double getStrike()>();

        d10 = staticinvoke <com.opengamma.analytics.financial.forex.method.FXVolatilityUtils: double getVolatility(com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle,com.opengamma.util.money.Currency,com.opengamma.util.money.Currency,double,double,double)>(r2, $r27, $r28, $d29, $d30, d6);

        $d31 = 1.0 + d0;

        d11 = $d31 * d10;

        $d32 = 1.0 - d0;

        d12 = $d32 * d10;

        $d33 = 1.0 + d0;

        d13 = $d33 * d5;

        $d34 = 1.0 - d0;

        d14 = $d34 * d5;

        $r31 = <com.opengamma.analytics.financial.forex.method.ForexOptionSingleBarrierBlackMethod: com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackBarrierPriceFunction BARRIER_FUNCTION>;

        $r32 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla getUnderlyingOption()>();

        $r33 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.analytics.financial.model.option.definition.Barrier getBarrier()>();

        d15 = virtualinvoke $r31.<com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackBarrierPriceFunction: double getPrice(com.opengamma.analytics.financial.model.option.pricing.analytic.formula.EuropeanVanillaOption,com.opengamma.analytics.financial.model.option.definition.Barrier,double,double,double,double,double)>($r32, $r33, d8, d13, d4, d2, d11);

        $r34 = <com.opengamma.analytics.financial.forex.method.ForexOptionSingleBarrierBlackMethod: com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackBarrierPriceFunction BARRIER_FUNCTION>;

        $r35 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla getUnderlyingOption()>();

        $r36 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.analytics.financial.model.option.definition.Barrier getBarrier()>();

        d16 = virtualinvoke $r34.<com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackBarrierPriceFunction: double getPrice(com.opengamma.analytics.financial.model.option.pricing.analytic.formula.EuropeanVanillaOption,com.opengamma.analytics.financial.model.option.definition.Barrier,double,double,double,double,double)>($r35, $r36, d8, d14, d4, d2, d12);

        $r37 = <com.opengamma.analytics.financial.forex.method.ForexOptionSingleBarrierBlackMethod: com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackBarrierPriceFunction BARRIER_FUNCTION>;

        $r38 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla getUnderlyingOption()>();

        $r39 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.analytics.financial.model.option.definition.Barrier getBarrier()>();

        d17 = virtualinvoke $r37.<com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackBarrierPriceFunction: double getPrice(com.opengamma.analytics.financial.model.option.pricing.analytic.formula.EuropeanVanillaOption,com.opengamma.analytics.financial.model.option.definition.Barrier,double,double,double,double,double)>($r38, $r39, d8, d13, d4, d2, d12);

        $r40 = <com.opengamma.analytics.financial.forex.method.ForexOptionSingleBarrierBlackMethod: com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackBarrierPriceFunction BARRIER_FUNCTION>;

        $r41 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla getUnderlyingOption()>();

        $r42 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.analytics.financial.model.option.definition.Barrier getBarrier()>();

        d18 = virtualinvoke $r40.<com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackBarrierPriceFunction: double getPrice(com.opengamma.analytics.financial.model.option.pricing.analytic.formula.EuropeanVanillaOption,com.opengamma.analytics.financial.model.option.definition.Barrier,double,double,double,double,double)>($r41, $r42, d8, d14, d4, d2, d11);

        $d35 = d15 - d17;

        $d36 = $d35 - d18;

        $d39 = $d36 + d16;

        $d37 = 2.0 * d0;

        $d38 = $d37 * d5;

        $d42 = $d39 / $d38;

        $d40 = 2.0 * d0;

        $d41 = $d40 * d10;

        $d43 = $d42 / $d41;

        $d44 = staticinvoke <java.lang.Math: double abs(double)>(d7);

        $d45 = $d43 * $d44;

        d19 = $d45 * $d46;

        $r43 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla getUnderlyingOption()>();

        $r44 = virtualinvoke $r43.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        r5 = virtualinvoke $r44.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.util.money.Currency getCurrency2()>();

        $r45 = staticinvoke <com.opengamma.util.money.CurrencyAmount: com.opengamma.util.money.CurrencyAmount of(com.opengamma.util.money.Currency,double)>(r5, d19);

        return $r45;
    }

    public com.opengamma.util.money.CurrencyAmount d2PriceDSpotDVolFdAlt(com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier, com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle, double)
    {
        com.opengamma.analytics.financial.forex.method.ForexOptionSingleBarrierBlackMethod r0;
        com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier r1;
        com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle r2;
        double d0, d1, d2, d3, d4, d5, d6, d7, d8, d10, d11, d12, d13, d14, d15, d16, d17, d18, d19, d20, d21, d22, $d23, $d24, $d25, $d26, $d27, $d28, $d29, $d30, $d31, $d32, $d33, $d34, $d35, $d36, $d37, $d38, $d39, $d40, $d41, $d42, $d43, $d44, $d45, $d46, $d47, $d48, $d49, $d50, $d51, $d52;
        java.lang.String r3, r4;
        com.opengamma.util.money.Currency r5, $r21, $r22, $r27, $r28;
        com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla $r8, $r11, $r14, $r23, $r26, $r29, $r30, $r32, $r35, $r38, $r41, $r44, $r47, $r50, $r52;
        com.opengamma.analytics.financial.forex.derivative.Forex $r9, $r12, $r15, $r24, $r53;
        com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed $r10, $r13, $r25;
        com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve $r16, $r18;
        java.lang.Double $r17, $r19;
        com.opengamma.analytics.financial.forex.method.FXMatrix $r20;
        boolean $z0;
        com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackBarrierPriceFunction $r31, $r34, $r37, $r40, $r43, $r46, $r49;
        com.opengamma.analytics.financial.model.option.definition.Barrier $r33, $r36, $r39, $r42, $r45, $r48, $r51;
        com.opengamma.util.money.CurrencyAmount $r54;

        r0 := @this: com.opengamma.analytics.financial.forex.method.ForexOptionSingleBarrierBlackMethod;

        r1 := @parameter0: com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier;

        r2 := @parameter1: com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle;

        d0 := @parameter2: double;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "Forex option");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, "Smile");

        $r8 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla getUnderlyingOption()>();

        $r9 = virtualinvoke $r8.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        $r10 = virtualinvoke $r9.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed getPaymentCurrency2()>();

        r3 = virtualinvoke $r10.<com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed: java.lang.String getFundingCurveName()>();

        $r11 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla getUnderlyingOption()>();

        $r12 = virtualinvoke $r11.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        $r13 = virtualinvoke $r12.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed getPaymentCurrency1()>();

        r4 = virtualinvoke $r13.<com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed: java.lang.String getFundingCurveName()>();

        $r14 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla getUnderlyingOption()>();

        $r15 = virtualinvoke $r14.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        d1 = virtualinvoke $r15.<com.opengamma.analytics.financial.forex.derivative.Forex: double getPaymentTime()>();

        $r16 = virtualinvoke r2.<com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle: com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve getCurve(java.lang.String)>(r3);

        $r17 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d1);

        d2 = virtualinvoke $r16.<com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve: double getInterestRate(java.lang.Object)>($r17);

        $r18 = virtualinvoke r2.<com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle: com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve getCurve(java.lang.String)>(r4);

        $r19 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d1);

        d3 = virtualinvoke $r18.<com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve: double getInterestRate(java.lang.Object)>($r19);

        d4 = d2 - d3;

        $r20 = virtualinvoke r2.<com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle: com.opengamma.analytics.financial.forex.method.FXMatrix getFxRates()>();

        $r21 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.util.money.Currency getCurrency1()>();

        $r22 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.util.money.Currency getCurrency2()>();

        d5 = virtualinvoke $r20.<com.opengamma.analytics.financial.forex.method.FXMatrix: double getFxRate(com.opengamma.util.money.Currency,com.opengamma.util.money.Currency)>($r21, $r22);

        $d23 = neg d3;

        $d24 = $d23 * d1;

        $d25 = staticinvoke <java.lang.Math: double exp(double)>($d24);

        $d28 = d5 * $d25;

        $d26 = neg d2;

        $d27 = $d26 * d1;

        $d29 = staticinvoke <java.lang.Math: double exp(double)>($d27);

        d6 = $d28 / $d29;

        $r23 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla getUnderlyingOption()>();

        $r24 = virtualinvoke $r23.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        $r25 = virtualinvoke $r24.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed getPaymentCurrency1()>();

        d7 = virtualinvoke $r25.<com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed: double getAmount()>();

        $d30 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: double getRebate()>();

        $d31 = staticinvoke <java.lang.Math: double abs(double)>(d7);

        d8 = $d30 / $d31;

        $r26 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla getUnderlyingOption()>();

        $z0 = virtualinvoke $r26.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: boolean isLong()>();

        if $z0 == 0 goto label1;

        $d52 = 1.0;

        goto label2;

     label1:
        $d52 = -1.0;

     label2:
        $r27 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.util.money.Currency getCurrency1()>();

        $r28 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.util.money.Currency getCurrency2()>();

        $r29 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla getUnderlyingOption()>();

        $d32 = virtualinvoke $r29.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: double getTimeToExpiry()>();

        $r30 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla getUnderlyingOption()>();

        $d33 = virtualinvoke $r30.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: double getStrike()>();

        d10 = staticinvoke <com.opengamma.analytics.financial.forex.method.FXVolatilityUtils: double getVolatility(com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle,com.opengamma.util.money.Currency,com.opengamma.util.money.Currency,double,double,double)>(r2, $r27, $r28, $d32, $d33, d6);

        $d34 = 1.0 + d0;

        d11 = $d34 * d10;

        $d35 = 1.0 - d0;

        d12 = $d35 * d10;

        $d36 = 1.0 + d0;

        d13 = $d36 * d5;

        $d37 = 1.0 - d0;

        d14 = $d37 * d5;

        $r31 = <com.opengamma.analytics.financial.forex.method.ForexOptionSingleBarrierBlackMethod: com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackBarrierPriceFunction BARRIER_FUNCTION>;

        $r32 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla getUnderlyingOption()>();

        $r33 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.analytics.financial.model.option.definition.Barrier getBarrier()>();

        d15 = virtualinvoke $r31.<com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackBarrierPriceFunction: double getPrice(com.opengamma.analytics.financial.model.option.pricing.analytic.formula.EuropeanVanillaOption,com.opengamma.analytics.financial.model.option.definition.Barrier,double,double,double,double,double)>($r32, $r33, d8, d5, d4, d2, d10);

        $r34 = <com.opengamma.analytics.financial.forex.method.ForexOptionSingleBarrierBlackMethod: com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackBarrierPriceFunction BARRIER_FUNCTION>;

        $r35 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla getUnderlyingOption()>();

        $r36 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.analytics.financial.model.option.definition.Barrier getBarrier()>();

        d16 = virtualinvoke $r34.<com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackBarrierPriceFunction: double getPrice(com.opengamma.analytics.financial.model.option.pricing.analytic.formula.EuropeanVanillaOption,com.opengamma.analytics.financial.model.option.definition.Barrier,double,double,double,double,double)>($r35, $r36, d8, d13, d4, d2, d11);

        $r37 = <com.opengamma.analytics.financial.forex.method.ForexOptionSingleBarrierBlackMethod: com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackBarrierPriceFunction BARRIER_FUNCTION>;

        $r38 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla getUnderlyingOption()>();

        $r39 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.analytics.financial.model.option.definition.Barrier getBarrier()>();

        d17 = virtualinvoke $r37.<com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackBarrierPriceFunction: double getPrice(com.opengamma.analytics.financial.model.option.pricing.analytic.formula.EuropeanVanillaOption,com.opengamma.analytics.financial.model.option.definition.Barrier,double,double,double,double,double)>($r38, $r39, d8, d14, d4, d2, d12);

        $r40 = <com.opengamma.analytics.financial.forex.method.ForexOptionSingleBarrierBlackMethod: com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackBarrierPriceFunction BARRIER_FUNCTION>;

        $r41 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla getUnderlyingOption()>();

        $r42 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.analytics.financial.model.option.definition.Barrier getBarrier()>();

        d18 = virtualinvoke $r40.<com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackBarrierPriceFunction: double getPrice(com.opengamma.analytics.financial.model.option.pricing.analytic.formula.EuropeanVanillaOption,com.opengamma.analytics.financial.model.option.definition.Barrier,double,double,double,double,double)>($r41, $r42, d8, d5, d4, d2, d11);

        $r43 = <com.opengamma.analytics.financial.forex.method.ForexOptionSingleBarrierBlackMethod: com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackBarrierPriceFunction BARRIER_FUNCTION>;

        $r44 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla getUnderlyingOption()>();

        $r45 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.analytics.financial.model.option.definition.Barrier getBarrier()>();

        d19 = virtualinvoke $r43.<com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackBarrierPriceFunction: double getPrice(com.opengamma.analytics.financial.model.option.pricing.analytic.formula.EuropeanVanillaOption,com.opengamma.analytics.financial.model.option.definition.Barrier,double,double,double,double,double)>($r44, $r45, d8, d5, d4, d2, d12);

        $r46 = <com.opengamma.analytics.financial.forex.method.ForexOptionSingleBarrierBlackMethod: com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackBarrierPriceFunction BARRIER_FUNCTION>;

        $r47 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla getUnderlyingOption()>();

        $r48 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.analytics.financial.model.option.definition.Barrier getBarrier()>();

        d20 = virtualinvoke $r46.<com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackBarrierPriceFunction: double getPrice(com.opengamma.analytics.financial.model.option.pricing.analytic.formula.EuropeanVanillaOption,com.opengamma.analytics.financial.model.option.definition.Barrier,double,double,double,double,double)>($r47, $r48, d8, d13, d4, d2, d10);

        $r49 = <com.opengamma.analytics.financial.forex.method.ForexOptionSingleBarrierBlackMethod: com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackBarrierPriceFunction BARRIER_FUNCTION>;

        $r50 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla getUnderlyingOption()>();

        $r51 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.analytics.financial.model.option.definition.Barrier getBarrier()>();

        d21 = virtualinvoke $r49.<com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackBarrierPriceFunction: double getPrice(com.opengamma.analytics.financial.model.option.pricing.analytic.formula.EuropeanVanillaOption,com.opengamma.analytics.financial.model.option.definition.Barrier,double,double,double,double,double)>($r50, $r51, d8, d14, d4, d2, d10);

        $d38 = d16 - d18;

        $d40 = $d38 - d20;

        $d39 = 2.0 * d15;

        $d41 = $d40 + $d39;

        $d42 = $d41 + d17;

        $d43 = $d42 - d19;

        $d48 = $d43 - d21;

        $d44 = 2.0 * d0;

        $d45 = $d44 * d5;

        $d46 = $d45 * d0;

        $d47 = $d46 * d10;

        $d49 = $d48 / $d47;

        $d50 = staticinvoke <java.lang.Math: double abs(double)>(d7);

        $d51 = $d49 * $d50;

        d22 = $d51 * $d52;

        $r52 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla getUnderlyingOption()>();

        $r53 = virtualinvoke $r52.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        r5 = virtualinvoke $r53.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.util.money.Currency getCurrency2()>();

        $r54 = staticinvoke <com.opengamma.util.money.CurrencyAmount: com.opengamma.util.money.CurrencyAmount of(com.opengamma.util.money.Currency,double)>(r5, d22);

        return $r54;
    }

    public double forwardGammaTheoretical(com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier, com.opengamma.analytics.financial.interestrate.YieldCurveBundle)
    {
        com.opengamma.analytics.financial.forex.method.ForexOptionSingleBarrierBlackMethod r0;
        com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier r1;
        com.opengamma.analytics.financial.interestrate.YieldCurveBundle r2;
        com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle r3;
        java.lang.String r4, r5;
        double d0, d1, d2, $d3, $d4, $d5, $d6;
        boolean $z0;
        com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla $r7, $r10, $r13;
        com.opengamma.analytics.financial.forex.derivative.Forex $r8, $r11, $r14;
        com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed $r9, $r12;
        com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve $r15, $r16;

        r0 := @this: com.opengamma.analytics.financial.forex.method.ForexOptionSingleBarrierBlackMethod;

        r1 := @parameter0: com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier;

        r2 := @parameter1: com.opengamma.analytics.financial.interestrate.YieldCurveBundle;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, "Curves");

        $z0 = r2 instanceof com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z0, "Yield curve bundle should contain smile data");

        r3 = (com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle) r2;

        $r7 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla getUnderlyingOption()>();

        $r8 = virtualinvoke $r7.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        $r9 = virtualinvoke $r8.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed getPaymentCurrency2()>();

        r4 = virtualinvoke $r9.<com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed: java.lang.String getFundingCurveName()>();

        $r10 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla getUnderlyingOption()>();

        $r11 = virtualinvoke $r10.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        $r12 = virtualinvoke $r11.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed getPaymentCurrency1()>();

        r5 = virtualinvoke $r12.<com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed: java.lang.String getFundingCurveName()>();

        $r13 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla getUnderlyingOption()>();

        $r14 = virtualinvoke $r13.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        d0 = virtualinvoke $r14.<com.opengamma.analytics.financial.forex.derivative.Forex: double getPaymentTime()>();

        $r15 = virtualinvoke r3.<com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle: com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve getCurve(java.lang.String)>(r4);

        d1 = virtualinvoke $r15.<com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve: double getDiscountFactor(double)>(d0);

        $r16 = virtualinvoke r3.<com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle: com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve getCurve(java.lang.String)>(r5);

        d2 = virtualinvoke $r16.<com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve: double getDiscountFactor(double)>(d0);

        $d3 = virtualinvoke r0.<com.opengamma.analytics.financial.forex.method.ForexOptionSingleBarrierBlackMethod: double spotGammaTheoretical(com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier,com.opengamma.analytics.financial.interestrate.YieldCurveBundle)>(r1, r2);

        $d5 = $d3 * d1;

        $d4 = d2 * d2;

        $d6 = $d5 / $d4;

        return $d6;
    }

    public double spotGammaTheoretical(com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier, com.opengamma.analytics.financial.interestrate.YieldCurveBundle)
    {
        com.opengamma.analytics.financial.forex.method.ForexOptionSingleBarrierBlackMethod r0;
        com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier r1;
        com.opengamma.analytics.financial.interestrate.YieldCurveBundle r2;
        com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle r3;
        java.lang.String r4, r5;
        double d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21, $d23, $d25, $d26, $d27, $d28, $d29;
        double[] r6, r7;
        boolean $z0;
        com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla $r9, $r12, $r15, $r24, $r29, $r30, $r32, $r35;
        com.opengamma.analytics.financial.forex.derivative.Forex $r10, $r13, $r16, $r25;
        com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed $r11, $r14, $r26;
        com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve $r17, $r19;
        java.lang.Double $r18, $r20;
        com.opengamma.analytics.financial.forex.method.FXMatrix $r21;
        com.opengamma.util.money.Currency $r22, $r23, $r27, $r28;
        com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackBarrierPriceFunction $r31, $r34;
        com.opengamma.analytics.financial.model.option.definition.Barrier $r33, $r36;

        r0 := @this: com.opengamma.analytics.financial.forex.method.ForexOptionSingleBarrierBlackMethod;

        r1 := @parameter0: com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier;

        r2 := @parameter1: com.opengamma.analytics.financial.interestrate.YieldCurveBundle;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "Forex option");

        $z0 = r2 instanceof com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z0, "Yield curve bundle should contain smile data");

        r3 = (com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle) r2;

        $r9 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla getUnderlyingOption()>();

        $r10 = virtualinvoke $r9.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        $r11 = virtualinvoke $r10.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed getPaymentCurrency2()>();

        r4 = virtualinvoke $r11.<com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed: java.lang.String getFundingCurveName()>();

        $r12 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla getUnderlyingOption()>();

        $r13 = virtualinvoke $r12.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        $r14 = virtualinvoke $r13.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed getPaymentCurrency1()>();

        r5 = virtualinvoke $r14.<com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed: java.lang.String getFundingCurveName()>();

        $r15 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla getUnderlyingOption()>();

        $r16 = virtualinvoke $r15.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        d0 = virtualinvoke $r16.<com.opengamma.analytics.financial.forex.derivative.Forex: double getPaymentTime()>();

        $r17 = virtualinvoke r3.<com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle: com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve getCurve(java.lang.String)>(r4);

        $r18 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d0);

        d1 = virtualinvoke $r17.<com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve: double getInterestRate(java.lang.Object)>($r18);

        $r19 = virtualinvoke r3.<com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle: com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve getCurve(java.lang.String)>(r5);

        $r20 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d0);

        d2 = virtualinvoke $r19.<com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve: double getInterestRate(java.lang.Object)>($r20);

        $r21 = virtualinvoke r3.<com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle: com.opengamma.analytics.financial.forex.method.FXMatrix getFxRates()>();

        $r22 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.util.money.Currency getCurrency1()>();

        $r23 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.util.money.Currency getCurrency2()>();

        d3 = virtualinvoke $r21.<com.opengamma.analytics.financial.forex.method.FXMatrix: double getFxRate(com.opengamma.util.money.Currency,com.opengamma.util.money.Currency)>($r22, $r23);

        $d10 = neg d2;

        $d11 = $d10 * d0;

        $d12 = staticinvoke <java.lang.Math: double exp(double)>($d11);

        $d15 = d3 * $d12;

        $d13 = neg d1;

        $d14 = $d13 * d0;

        $d16 = staticinvoke <java.lang.Math: double exp(double)>($d14);

        d4 = $d15 / $d16;

        $r24 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla getUnderlyingOption()>();

        $r25 = virtualinvoke $r24.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        $r26 = virtualinvoke $r25.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed getPaymentCurrency1()>();

        d5 = virtualinvoke $r26.<com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed: double getAmount()>();

        $d17 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: double getRebate()>();

        $d18 = staticinvoke <java.lang.Math: double abs(double)>(d5);

        d6 = $d17 / $d18;

        $r27 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.util.money.Currency getCurrency1()>();

        $r28 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.util.money.Currency getCurrency2()>();

        $r29 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla getUnderlyingOption()>();

        $d19 = virtualinvoke $r29.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: double getTimeToExpiry()>();

        $r30 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla getUnderlyingOption()>();

        $d20 = virtualinvoke $r30.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: double getStrike()>();

        d7 = staticinvoke <com.opengamma.analytics.financial.forex.method.FXVolatilityUtils: double getVolatility(com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle,com.opengamma.util.money.Currency,com.opengamma.util.money.Currency,double,double,double)>(r3, $r27, $r28, $d19, $d20, d4);

        d8 = 1.00001 * d3;

        d9 = 0.99999 * d3;

        r6 = newarray (double)[5];

        r7 = newarray (double)[5];

        $r31 = <com.opengamma.analytics.financial.forex.method.ForexOptionSingleBarrierBlackMethod: com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackBarrierPriceFunction BARRIER_FUNCTION>;

        $r32 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla getUnderlyingOption()>();

        $r33 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.analytics.financial.model.option.definition.Barrier getBarrier()>();

        $d21 = d1 - d2;

        virtualinvoke $r31.<com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackBarrierPriceFunction: double getPriceAdjoint(com.opengamma.analytics.financial.model.option.pricing.analytic.formula.EuropeanVanillaOption,com.opengamma.analytics.financial.model.option.definition.Barrier,double,double,double,double,double,double[])>($r32, $r33, d6, d8, $d21, d1, d7, r6);

        $r34 = <com.opengamma.analytics.financial.forex.method.ForexOptionSingleBarrierBlackMethod: com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackBarrierPriceFunction BARRIER_FUNCTION>;

        $r35 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla getUnderlyingOption()>();

        $r36 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.analytics.financial.model.option.definition.Barrier getBarrier()>();

        $d23 = d1 - d2;

        virtualinvoke $r34.<com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackBarrierPriceFunction: double getPriceAdjoint(com.opengamma.analytics.financial.model.option.pricing.analytic.formula.EuropeanVanillaOption,com.opengamma.analytics.financial.model.option.definition.Barrier,double,double,double,double,double,double[])>($r35, $r36, d6, d9, $d23, d1, d7, r7);

        $d26 = r6[0];

        $d25 = r7[0];

        $d28 = $d26 - $d25;

        $d27 = 2.0E-5 * d3;

        $d29 = $d28 / $d27;

        return $d29;
    }

    public double forwardVegaTheoretical(com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier, com.opengamma.analytics.financial.interestrate.YieldCurveBundle)
    {
        com.opengamma.analytics.financial.forex.method.ForexOptionSingleBarrierBlackMethod r0;
        com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier r1;
        com.opengamma.analytics.financial.interestrate.YieldCurveBundle r2;
        com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle r3;
        java.lang.String r4, r5;
        double d0, d1, d2, d3, d4, d5, d6, d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d21;
        double[] r6;
        boolean $z0;
        com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla $r8, $r11, $r14, $r23, $r28, $r29, $r31;
        com.opengamma.analytics.financial.forex.derivative.Forex $r9, $r12, $r15, $r24;
        com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed $r10, $r13, $r25;
        com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve $r16, $r18;
        java.lang.Double $r17, $r19;
        com.opengamma.analytics.financial.forex.method.FXMatrix $r20;
        com.opengamma.util.money.Currency $r21, $r22, $r26, $r27;
        com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackBarrierPriceFunction $r30;
        com.opengamma.analytics.financial.model.option.definition.Barrier $r32;

        r0 := @this: com.opengamma.analytics.financial.forex.method.ForexOptionSingleBarrierBlackMethod;

        r1 := @parameter0: com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier;

        r2 := @parameter1: com.opengamma.analytics.financial.interestrate.YieldCurveBundle;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "Forex option");

        $z0 = r2 instanceof com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z0, "Yield curve bundle should contain smile data");

        r3 = (com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle) r2;

        $r8 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla getUnderlyingOption()>();

        $r9 = virtualinvoke $r8.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        $r10 = virtualinvoke $r9.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed getPaymentCurrency2()>();

        r4 = virtualinvoke $r10.<com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed: java.lang.String getFundingCurveName()>();

        $r11 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla getUnderlyingOption()>();

        $r12 = virtualinvoke $r11.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        $r13 = virtualinvoke $r12.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed getPaymentCurrency1()>();

        r5 = virtualinvoke $r13.<com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed: java.lang.String getFundingCurveName()>();

        $r14 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla getUnderlyingOption()>();

        $r15 = virtualinvoke $r14.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        d0 = virtualinvoke $r15.<com.opengamma.analytics.financial.forex.derivative.Forex: double getPaymentTime()>();

        $r16 = virtualinvoke r3.<com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle: com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve getCurve(java.lang.String)>(r4);

        $r17 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d0);

        d1 = virtualinvoke $r16.<com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve: double getInterestRate(java.lang.Object)>($r17);

        $r18 = virtualinvoke r3.<com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle: com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve getCurve(java.lang.String)>(r5);

        $r19 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d0);

        d2 = virtualinvoke $r18.<com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve: double getInterestRate(java.lang.Object)>($r19);

        $r20 = virtualinvoke r3.<com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle: com.opengamma.analytics.financial.forex.method.FXMatrix getFxRates()>();

        $r21 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.util.money.Currency getCurrency1()>();

        $r22 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.util.money.Currency getCurrency2()>();

        d3 = virtualinvoke $r20.<com.opengamma.analytics.financial.forex.method.FXMatrix: double getFxRate(com.opengamma.util.money.Currency,com.opengamma.util.money.Currency)>($r21, $r22);

        $d8 = neg d2;

        $d9 = $d8 * d0;

        $d10 = staticinvoke <java.lang.Math: double exp(double)>($d9);

        $d13 = d3 * $d10;

        $d11 = neg d1;

        $d12 = $d11 * d0;

        $d14 = staticinvoke <java.lang.Math: double exp(double)>($d12);

        d4 = $d13 / $d14;

        $r23 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla getUnderlyingOption()>();

        $r24 = virtualinvoke $r23.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        $r25 = virtualinvoke $r24.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed getPaymentCurrency1()>();

        d5 = virtualinvoke $r25.<com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed: double getAmount()>();

        $d15 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: double getRebate()>();

        $d16 = staticinvoke <java.lang.Math: double abs(double)>(d5);

        d6 = $d15 / $d16;

        $r26 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.util.money.Currency getCurrency1()>();

        $r27 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.util.money.Currency getCurrency2()>();

        $r28 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla getUnderlyingOption()>();

        $d17 = virtualinvoke $r28.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: double getTimeToExpiry()>();

        $r29 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla getUnderlyingOption()>();

        $d18 = virtualinvoke $r29.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: double getStrike()>();

        d7 = staticinvoke <com.opengamma.analytics.financial.forex.method.FXVolatilityUtils: double getVolatility(com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle,com.opengamma.util.money.Currency,com.opengamma.util.money.Currency,double,double,double)>(r3, $r26, $r27, $d17, $d18, d4);

        r6 = newarray (double)[5];

        $r30 = <com.opengamma.analytics.financial.forex.method.ForexOptionSingleBarrierBlackMethod: com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackBarrierPriceFunction BARRIER_FUNCTION>;

        $r31 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla getUnderlyingOption()>();

        $r32 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionSingleBarrier: com.opengamma.analytics.financial.model.option.definition.Barrier getBarrier()>();

        $d19 = d1 - d2;

        virtualinvoke $r30.<com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackBarrierPriceFunction: double getPriceAdjoint(com.opengamma.analytics.financial.model.option.pricing.analytic.formula.EuropeanVanillaOption,com.opengamma.analytics.financial.model.option.definition.Barrier,double,double,double,double,double,double[])>($r31, $r32, d6, d3, $d19, d1, d7, r6);

        $d21 = r6[4];

        return $d21;
    }

    static void <clinit>()
    {
        com.opengamma.analytics.financial.forex.method.ForexOptionSingleBarrierBlackMethod $r0;
        com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackBarrierPriceFunction $r1;

        <com.opengamma.analytics.financial.forex.method.ForexOptionSingleBarrierBlackMethod: double DEFAULT_VANNA_SHIFT> = 1.0E-5;

        <com.opengamma.analytics.financial.forex.method.ForexOptionSingleBarrierBlackMethod: double DEFAULT_VOMMA_SHIFT> = 1.0E-5;

        <com.opengamma.analytics.financial.forex.method.ForexOptionSingleBarrierBlackMethod: double DEFAULT_GAMMA_SHIFT> = 1.0E-5;

        <com.opengamma.analytics.financial.forex.method.ForexOptionSingleBarrierBlackMethod: double DEFAULT_THETA_SHIFT> = 1.1415525114155251E-4;

        $r0 = new com.opengamma.analytics.financial.forex.method.ForexOptionSingleBarrierBlackMethod;

        specialinvoke $r0.<com.opengamma.analytics.financial.forex.method.ForexOptionSingleBarrierBlackMethod: void <init>()>();

        <com.opengamma.analytics.financial.forex.method.ForexOptionSingleBarrierBlackMethod: com.opengamma.analytics.financial.forex.method.ForexOptionSingleBarrierBlackMethod INSTANCE> = $r0;

        $r1 = staticinvoke <com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackBarrierPriceFunction: com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackBarrierPriceFunction getInstance()>();

        <com.opengamma.analytics.financial.forex.method.ForexOptionSingleBarrierBlackMethod: com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackBarrierPriceFunction BARRIER_FUNCTION> = $r1;

        return;
    }
}
