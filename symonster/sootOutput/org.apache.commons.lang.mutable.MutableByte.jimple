public class org.apache.commons.lang.mutable.MutableByte extends java.lang.Number implements java.lang.Comparable, org.apache.commons.lang.mutable.Mutable
{
    private static final long serialVersionUID;
    private byte value;

    public void <init>()
    {
        org.apache.commons.lang.mutable.MutableByte r0;

        r0 := @this: org.apache.commons.lang.mutable.MutableByte;

        specialinvoke r0.<java.lang.Number: void <init>()>();

        return;
    }

    public void <init>(byte)
    {
        org.apache.commons.lang.mutable.MutableByte r0;
        byte b0;

        r0 := @this: org.apache.commons.lang.mutable.MutableByte;

        b0 := @parameter0: byte;

        specialinvoke r0.<java.lang.Number: void <init>()>();

        r0.<org.apache.commons.lang.mutable.MutableByte: byte value> = b0;

        return;
    }

    public void <init>(java.lang.Number)
    {
        org.apache.commons.lang.mutable.MutableByte r0;
        java.lang.Number r1;
        byte $b0;

        r0 := @this: org.apache.commons.lang.mutable.MutableByte;

        r1 := @parameter0: java.lang.Number;

        specialinvoke r0.<java.lang.Number: void <init>()>();

        $b0 = virtualinvoke r1.<java.lang.Number: byte byteValue()>();

        r0.<org.apache.commons.lang.mutable.MutableByte: byte value> = $b0;

        return;
    }

    public void <init>(java.lang.String) throws java.lang.NumberFormatException
    {
        org.apache.commons.lang.mutable.MutableByte r0;
        java.lang.String r1;
        byte $b0;

        r0 := @this: org.apache.commons.lang.mutable.MutableByte;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<java.lang.Number: void <init>()>();

        $b0 = staticinvoke <java.lang.Byte: byte parseByte(java.lang.String)>(r1);

        r0.<org.apache.commons.lang.mutable.MutableByte: byte value> = $b0;

        return;
    }

    public java.lang.Object getValue()
    {
        org.apache.commons.lang.mutable.MutableByte r0;
        java.lang.Byte $r1;
        byte $b0;

        r0 := @this: org.apache.commons.lang.mutable.MutableByte;

        $r1 = new java.lang.Byte;

        $b0 = r0.<org.apache.commons.lang.mutable.MutableByte: byte value>;

        specialinvoke $r1.<java.lang.Byte: void <init>(byte)>($b0);

        return $r1;
    }

    public void setValue(byte)
    {
        org.apache.commons.lang.mutable.MutableByte r0;
        byte b0;

        r0 := @this: org.apache.commons.lang.mutable.MutableByte;

        b0 := @parameter0: byte;

        r0.<org.apache.commons.lang.mutable.MutableByte: byte value> = b0;

        return;
    }

    public void setValue(java.lang.Object)
    {
        org.apache.commons.lang.mutable.MutableByte r0;
        java.lang.Object r1;
        java.lang.Number $r2;
        byte $b0;

        r0 := @this: org.apache.commons.lang.mutable.MutableByte;

        r1 := @parameter0: java.lang.Object;

        $r2 = (java.lang.Number) r1;

        $b0 = virtualinvoke $r2.<java.lang.Number: byte byteValue()>();

        virtualinvoke r0.<org.apache.commons.lang.mutable.MutableByte: void setValue(byte)>($b0);

        return;
    }

    public void increment()
    {
        org.apache.commons.lang.mutable.MutableByte r0;
        byte $b0, $b2;
        int $i1;

        r0 := @this: org.apache.commons.lang.mutable.MutableByte;

        $b0 = r0.<org.apache.commons.lang.mutable.MutableByte: byte value>;

        $i1 = $b0 + 1;

        $b2 = (byte) $i1;

        r0.<org.apache.commons.lang.mutable.MutableByte: byte value> = $b2;

        return;
    }

    public void decrement()
    {
        org.apache.commons.lang.mutable.MutableByte r0;
        byte $b0, $b2;
        int $i1;

        r0 := @this: org.apache.commons.lang.mutable.MutableByte;

        $b0 = r0.<org.apache.commons.lang.mutable.MutableByte: byte value>;

        $i1 = $b0 - 1;

        $b2 = (byte) $i1;

        r0.<org.apache.commons.lang.mutable.MutableByte: byte value> = $b2;

        return;
    }

    public void add(byte)
    {
        org.apache.commons.lang.mutable.MutableByte r0;
        byte b0, $b1, $b3;
        int $i2;

        r0 := @this: org.apache.commons.lang.mutable.MutableByte;

        b0 := @parameter0: byte;

        $b1 = r0.<org.apache.commons.lang.mutable.MutableByte: byte value>;

        $i2 = $b1 + b0;

        $b3 = (byte) $i2;

        r0.<org.apache.commons.lang.mutable.MutableByte: byte value> = $b3;

        return;
    }

    public void add(java.lang.Number)
    {
        org.apache.commons.lang.mutable.MutableByte r0;
        java.lang.Number r1;
        byte $b0, $b1, $b3;
        int $i2;

        r0 := @this: org.apache.commons.lang.mutable.MutableByte;

        r1 := @parameter0: java.lang.Number;

        $b0 = r0.<org.apache.commons.lang.mutable.MutableByte: byte value>;

        $b1 = virtualinvoke r1.<java.lang.Number: byte byteValue()>();

        $i2 = $b0 + $b1;

        $b3 = (byte) $i2;

        r0.<org.apache.commons.lang.mutable.MutableByte: byte value> = $b3;

        return;
    }

    public void subtract(byte)
    {
        org.apache.commons.lang.mutable.MutableByte r0;
        byte b0, $b1, $b3;
        int $i2;

        r0 := @this: org.apache.commons.lang.mutable.MutableByte;

        b0 := @parameter0: byte;

        $b1 = r0.<org.apache.commons.lang.mutable.MutableByte: byte value>;

        $i2 = $b1 - b0;

        $b3 = (byte) $i2;

        r0.<org.apache.commons.lang.mutable.MutableByte: byte value> = $b3;

        return;
    }

    public void subtract(java.lang.Number)
    {
        org.apache.commons.lang.mutable.MutableByte r0;
        java.lang.Number r1;
        byte $b0, $b1, $b3;
        int $i2;

        r0 := @this: org.apache.commons.lang.mutable.MutableByte;

        r1 := @parameter0: java.lang.Number;

        $b0 = r0.<org.apache.commons.lang.mutable.MutableByte: byte value>;

        $b1 = virtualinvoke r1.<java.lang.Number: byte byteValue()>();

        $i2 = $b0 - $b1;

        $b3 = (byte) $i2;

        r0.<org.apache.commons.lang.mutable.MutableByte: byte value> = $b3;

        return;
    }

    public byte byteValue()
    {
        org.apache.commons.lang.mutable.MutableByte r0;
        byte $b0;

        r0 := @this: org.apache.commons.lang.mutable.MutableByte;

        $b0 = r0.<org.apache.commons.lang.mutable.MutableByte: byte value>;

        return $b0;
    }

    public int intValue()
    {
        org.apache.commons.lang.mutable.MutableByte r0;
        byte $b0;

        r0 := @this: org.apache.commons.lang.mutable.MutableByte;

        $b0 = r0.<org.apache.commons.lang.mutable.MutableByte: byte value>;

        return $b0;
    }

    public long longValue()
    {
        org.apache.commons.lang.mutable.MutableByte r0;
        byte $b0;
        long $l1;

        r0 := @this: org.apache.commons.lang.mutable.MutableByte;

        $b0 = r0.<org.apache.commons.lang.mutable.MutableByte: byte value>;

        $l1 = (long) $b0;

        return $l1;
    }

    public float floatValue()
    {
        org.apache.commons.lang.mutable.MutableByte r0;
        byte $b0;
        float $f0;

        r0 := @this: org.apache.commons.lang.mutable.MutableByte;

        $b0 = r0.<org.apache.commons.lang.mutable.MutableByte: byte value>;

        $f0 = (float) $b0;

        return $f0;
    }

    public double doubleValue()
    {
        org.apache.commons.lang.mutable.MutableByte r0;
        byte $b0;
        double $d0;

        r0 := @this: org.apache.commons.lang.mutable.MutableByte;

        $b0 = r0.<org.apache.commons.lang.mutable.MutableByte: byte value>;

        $d0 = (double) $b0;

        return $d0;
    }

    public java.lang.Byte toByte()
    {
        org.apache.commons.lang.mutable.MutableByte r0;
        java.lang.Byte $r1;
        byte $b0;

        r0 := @this: org.apache.commons.lang.mutable.MutableByte;

        $r1 = new java.lang.Byte;

        $b0 = virtualinvoke r0.<org.apache.commons.lang.mutable.MutableByte: byte byteValue()>();

        specialinvoke $r1.<java.lang.Byte: void <init>(byte)>($b0);

        return $r1;
    }

    public boolean equals(java.lang.Object)
    {
        org.apache.commons.lang.mutable.MutableByte r0, $r2;
        java.lang.Object r1;
        boolean $z0, $z1;
        byte $b0, $b1;

        r0 := @this: org.apache.commons.lang.mutable.MutableByte;

        r1 := @parameter0: java.lang.Object;

        $z0 = r1 instanceof org.apache.commons.lang.mutable.MutableByte;

        if $z0 == 0 goto label3;

        $b0 = r0.<org.apache.commons.lang.mutable.MutableByte: byte value>;

        $r2 = (org.apache.commons.lang.mutable.MutableByte) r1;

        $b1 = virtualinvoke $r2.<org.apache.commons.lang.mutable.MutableByte: byte byteValue()>();

        if $b0 != $b1 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;

     label3:
        return 0;
    }

    public int hashCode()
    {
        org.apache.commons.lang.mutable.MutableByte r0;
        byte $b0;

        r0 := @this: org.apache.commons.lang.mutable.MutableByte;

        $b0 = r0.<org.apache.commons.lang.mutable.MutableByte: byte value>;

        return $b0;
    }

    public int compareTo(java.lang.Object)
    {
        org.apache.commons.lang.mutable.MutableByte r0, r2;
        java.lang.Object r1;
        byte b0, $b1, $b2, $b3;

        r0 := @this: org.apache.commons.lang.mutable.MutableByte;

        r1 := @parameter0: java.lang.Object;

        r2 = (org.apache.commons.lang.mutable.MutableByte) r1;

        b0 = r2.<org.apache.commons.lang.mutable.MutableByte: byte value>;

        $b1 = r0.<org.apache.commons.lang.mutable.MutableByte: byte value>;

        if $b1 >= b0 goto label1;

        $b3 = -1;

        goto label3;

     label1:
        $b2 = r0.<org.apache.commons.lang.mutable.MutableByte: byte value>;

        if $b2 != b0 goto label2;

        $b3 = 0;

        goto label3;

     label2:
        $b3 = 1;

     label3:
        return $b3;
    }

    public java.lang.String toString()
    {
        org.apache.commons.lang.mutable.MutableByte r0;
        byte $b0;
        java.lang.String $r1;

        r0 := @this: org.apache.commons.lang.mutable.MutableByte;

        $b0 = r0.<org.apache.commons.lang.mutable.MutableByte: byte value>;

        $r1 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($b0);

        return $r1;
    }

    public static void <clinit>()
    {
        <org.apache.commons.lang.mutable.MutableByte: long serialVersionUID> = -1585823265L;

        return;
    }
}
