public final class com.opengamma.analytics.financial.interestrate.bond.method.BondSecurityDiscountingMethod extends java.lang.Object
{
    private static final com.opengamma.analytics.financial.interestrate.bond.method.BondSecurityDiscountingMethod INSTANCE;
    private static final com.opengamma.analytics.financial.interestrate.PresentValueCalculator PVC;
    private static final com.opengamma.analytics.financial.interestrate.PresentValueCurveSensitivityCalculator PVCSC;
    private static final com.opengamma.analytics.financial.interestrate.PresentValueParallelCurveSensitivityCalculator PVPCSC;
    private static final com.opengamma.analytics.math.rootfinding.BracketRoot BRACKETER;
    private static final com.opengamma.analytics.math.rootfinding.RealSingleRootFinder ROOT_FINDER;
    private static final com.opengamma.analytics.math.rootfinding.BracketRoot ROOT_BRACKETER;

    public static com.opengamma.analytics.financial.interestrate.bond.method.BondSecurityDiscountingMethod getInstance()
    {
        com.opengamma.analytics.financial.interestrate.bond.method.BondSecurityDiscountingMethod $r0;

        $r0 = <com.opengamma.analytics.financial.interestrate.bond.method.BondSecurityDiscountingMethod: com.opengamma.analytics.financial.interestrate.bond.method.BondSecurityDiscountingMethod INSTANCE>;

        return $r0;
    }

    private void <init>()
    {
        com.opengamma.analytics.financial.interestrate.bond.method.BondSecurityDiscountingMethod r0;

        r0 := @this: com.opengamma.analytics.financial.interestrate.bond.method.BondSecurityDiscountingMethod;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public double presentValue(com.opengamma.analytics.financial.interestrate.bond.definition.BondSecurity, com.opengamma.analytics.financial.interestrate.YieldCurveBundle)
    {
        com.opengamma.analytics.financial.interestrate.bond.method.BondSecurityDiscountingMethod r0;
        com.opengamma.analytics.financial.interestrate.bond.definition.BondSecurity r1;
        com.opengamma.analytics.financial.interestrate.YieldCurveBundle r2;
        double d0, d1, $d2;
        com.opengamma.analytics.financial.interestrate.annuity.derivative.Annuity $r3, $r7;
        com.opengamma.analytics.financial.interestrate.PresentValueCalculator $r4, $r8;
        java.lang.Object $r5, $r9;
        java.lang.Double $r6, $r10;

        r0 := @this: com.opengamma.analytics.financial.interestrate.bond.method.BondSecurityDiscountingMethod;

        r1 := @parameter0: com.opengamma.analytics.financial.interestrate.bond.definition.BondSecurity;

        r2 := @parameter1: com.opengamma.analytics.financial.interestrate.YieldCurveBundle;

        $r3 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.bond.definition.BondSecurity: com.opengamma.analytics.financial.interestrate.annuity.derivative.Annuity getNominal()>();

        $r4 = <com.opengamma.analytics.financial.interestrate.bond.method.BondSecurityDiscountingMethod: com.opengamma.analytics.financial.interestrate.PresentValueCalculator PVC>;

        $r5 = virtualinvoke $r3.<com.opengamma.analytics.financial.interestrate.annuity.derivative.Annuity: java.lang.Object accept(com.opengamma.analytics.financial.interestrate.InstrumentDerivativeVisitor,java.lang.Object)>($r4, r2);

        $r6 = (java.lang.Double) $r5;

        d0 = virtualinvoke $r6.<java.lang.Double: double doubleValue()>();

        $r7 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.bond.definition.BondSecurity: com.opengamma.analytics.financial.interestrate.annuity.derivative.Annuity getCoupon()>();

        $r8 = <com.opengamma.analytics.financial.interestrate.bond.method.BondSecurityDiscountingMethod: com.opengamma.analytics.financial.interestrate.PresentValueCalculator PVC>;

        $r9 = virtualinvoke $r7.<com.opengamma.analytics.financial.interestrate.annuity.derivative.Annuity: java.lang.Object accept(com.opengamma.analytics.financial.interestrate.InstrumentDerivativeVisitor,java.lang.Object)>($r8, r2);

        $r10 = (java.lang.Double) $r9;

        d1 = virtualinvoke $r10.<java.lang.Double: double doubleValue()>();

        $d2 = d0 + d1;

        return $d2;
    }

    public double presentValueFromCleanPrice(com.opengamma.analytics.financial.interestrate.bond.definition.BondSecurity, com.opengamma.analytics.financial.interestrate.YieldCurveBundle, double)
    {
        com.opengamma.analytics.financial.interestrate.bond.method.BondSecurityDiscountingMethod r0;
        com.opengamma.analytics.financial.interestrate.bond.definition.BondSecurity r1;
        com.opengamma.analytics.financial.interestrate.YieldCurveBundle r2;
        double d0, d1, d2, $d3, $d4, $d5, $d6, $d7;
        com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity r3;
        boolean $z0;
        java.lang.String $r4;
        com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve $r5;
        com.opengamma.analytics.financial.interestrate.annuity.derivative.Annuity $r6;
        com.opengamma.analytics.financial.interestrate.payments.derivative.Payment $r7;
        com.opengamma.analytics.financial.interestrate.payments.derivative.CouponFixed $r8;

        r0 := @this: com.opengamma.analytics.financial.interestrate.bond.method.BondSecurityDiscountingMethod;

        r1 := @parameter0: com.opengamma.analytics.financial.interestrate.bond.definition.BondSecurity;

        r2 := @parameter1: com.opengamma.analytics.financial.interestrate.YieldCurveBundle;

        d0 := @parameter2: double;

        $z0 = r1 instanceof com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z0, "Present value from clean price available only for fixed coupon bond");

        r3 = (com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity) r1;

        $r4 = virtualinvoke r3.<com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity: java.lang.String getRepoCurveName()>();

        $r5 = virtualinvoke r2.<com.opengamma.analytics.financial.interestrate.YieldCurveBundle: com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve getCurve(java.lang.String)>($r4);

        $d3 = virtualinvoke r3.<com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity: double getSettlementTime()>();

        d1 = virtualinvoke $r5.<com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve: double getDiscountFactor(double)>($d3);

        $r6 = virtualinvoke r3.<com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity: com.opengamma.analytics.financial.interestrate.annuity.derivative.Annuity getCoupon()>();

        $r7 = virtualinvoke $r6.<com.opengamma.analytics.financial.interestrate.annuity.derivative.Annuity: com.opengamma.analytics.financial.interestrate.payments.derivative.Payment getNthPayment(int)>(0);

        $r8 = (com.opengamma.analytics.financial.interestrate.payments.derivative.CouponFixed) $r7;

        $d4 = virtualinvoke $r8.<com.opengamma.analytics.financial.interestrate.payments.derivative.CouponFixed: double getNotional()>();

        $d5 = d0 * $d4;

        $d6 = virtualinvoke r3.<com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity: double getAccruedInterest()>();

        $d7 = $d5 + $d6;

        d2 = $d7 * d1;

        return d2;
    }

    public double presentValueFromZSpread(com.opengamma.analytics.financial.interestrate.bond.definition.BondSecurity, com.opengamma.analytics.financial.interestrate.YieldCurveBundle, double)
    {
        com.opengamma.analytics.financial.interestrate.bond.method.BondSecurityDiscountingMethod r0;
        com.opengamma.analytics.financial.interestrate.bond.definition.BondSecurity r1;
        com.opengamma.analytics.financial.interestrate.YieldCurveBundle r2, $r6;
        double d0, d1;
        java.lang.String r3;
        com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve r5, $r7;

        r0 := @this: com.opengamma.analytics.financial.interestrate.bond.method.BondSecurityDiscountingMethod;

        r1 := @parameter0: com.opengamma.analytics.financial.interestrate.bond.definition.BondSecurity;

        r2 := @parameter1: com.opengamma.analytics.financial.interestrate.YieldCurveBundle;

        d0 := @parameter2: double;

        r3 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.bond.definition.BondSecurity: java.lang.String getDiscountingCurveName()>();

        $r6 = new com.opengamma.analytics.financial.interestrate.YieldCurveBundle;

        specialinvoke $r6.<com.opengamma.analytics.financial.interestrate.YieldCurveBundle: void <init>()>();

        virtualinvoke $r6.<com.opengamma.analytics.financial.interestrate.YieldCurveBundle: void addAll(com.opengamma.analytics.financial.interestrate.YieldCurveBundle)>(r2);

        $r7 = virtualinvoke r2.<com.opengamma.analytics.financial.interestrate.YieldCurveBundle: com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve getCurve(java.lang.String)>(r3);

        r5 = virtualinvoke $r7.<com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve: com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve withParallelShift(double)>(d0);

        virtualinvoke $r6.<com.opengamma.analytics.financial.interestrate.YieldCurveBundle: void replaceCurve(java.lang.String,com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve)>(r3, r5);

        d1 = virtualinvoke r0.<com.opengamma.analytics.financial.interestrate.bond.method.BondSecurityDiscountingMethod: double presentValue(com.opengamma.analytics.financial.interestrate.bond.definition.BondSecurity,com.opengamma.analytics.financial.interestrate.YieldCurveBundle)>(r1, $r6);

        return d1;
    }

    public double presentValueZSpreadSensitivity(com.opengamma.analytics.financial.interestrate.bond.definition.BondSecurity, com.opengamma.analytics.financial.interestrate.YieldCurveBundle, double)
    {
        com.opengamma.analytics.financial.interestrate.bond.method.BondSecurityDiscountingMethod r0;
        com.opengamma.analytics.financial.interestrate.bond.definition.BondSecurity r1;
        com.opengamma.analytics.financial.interestrate.YieldCurveBundle r2, $r7;
        double d0, $d1;
        java.lang.String r3;
        com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve r5, $r8;
        com.opengamma.analytics.util.amount.StringAmount r6;
        java.util.HashMap $r9;
        java.lang.Object $r10;
        java.lang.Double $r11;

        r0 := @this: com.opengamma.analytics.financial.interestrate.bond.method.BondSecurityDiscountingMethod;

        r1 := @parameter0: com.opengamma.analytics.financial.interestrate.bond.definition.BondSecurity;

        r2 := @parameter1: com.opengamma.analytics.financial.interestrate.YieldCurveBundle;

        d0 := @parameter2: double;

        r3 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.bond.definition.BondSecurity: java.lang.String getDiscountingCurveName()>();

        $r7 = new com.opengamma.analytics.financial.interestrate.YieldCurveBundle;

        specialinvoke $r7.<com.opengamma.analytics.financial.interestrate.YieldCurveBundle: void <init>()>();

        virtualinvoke $r7.<com.opengamma.analytics.financial.interestrate.YieldCurveBundle: void addAll(com.opengamma.analytics.financial.interestrate.YieldCurveBundle)>(r2);

        $r8 = virtualinvoke r2.<com.opengamma.analytics.financial.interestrate.YieldCurveBundle: com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve getCurve(java.lang.String)>(r3);

        r5 = virtualinvoke $r8.<com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve: com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve withParallelShift(double)>(d0);

        virtualinvoke $r7.<com.opengamma.analytics.financial.interestrate.YieldCurveBundle: void replaceCurve(java.lang.String,com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve)>(r3, r5);

        r6 = virtualinvoke r0.<com.opengamma.analytics.financial.interestrate.bond.method.BondSecurityDiscountingMethod: com.opengamma.analytics.util.amount.StringAmount presentValueParallelCurveSensitivity(com.opengamma.analytics.financial.interestrate.bond.definition.BondSecurity,com.opengamma.analytics.financial.interestrate.YieldCurveBundle)>(r1, $r7);

        $r9 = virtualinvoke r6.<com.opengamma.analytics.util.amount.StringAmount: java.util.HashMap getMap()>();

        $r10 = virtualinvoke $r9.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r3);

        $r11 = (java.lang.Double) $r10;

        $d1 = virtualinvoke $r11.<java.lang.Double: double doubleValue()>();

        return $d1;
    }

    public double dirtyPriceFromCurves(com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity, com.opengamma.analytics.financial.interestrate.YieldCurveBundle)
    {
        com.opengamma.analytics.financial.interestrate.bond.method.BondSecurityDiscountingMethod r0;
        com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity r1;
        com.opengamma.analytics.financial.interestrate.YieldCurveBundle r2;
        double d0, d1, d2, $d3, $d4, $d5;
        java.lang.String $r3;
        com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve $r4;
        com.opengamma.analytics.financial.interestrate.annuity.derivative.Annuity $r5;
        com.opengamma.analytics.financial.interestrate.payments.derivative.Payment $r6;
        com.opengamma.analytics.financial.interestrate.payments.derivative.CouponFixed $r7;

        r0 := @this: com.opengamma.analytics.financial.interestrate.bond.method.BondSecurityDiscountingMethod;

        r1 := @parameter0: com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity;

        r2 := @parameter1: com.opengamma.analytics.financial.interestrate.YieldCurveBundle;

        d0 = virtualinvoke r0.<com.opengamma.analytics.financial.interestrate.bond.method.BondSecurityDiscountingMethod: double presentValue(com.opengamma.analytics.financial.interestrate.bond.definition.BondSecurity,com.opengamma.analytics.financial.interestrate.YieldCurveBundle)>(r1, r2);

        $r3 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity: java.lang.String getRepoCurveName()>();

        $r4 = virtualinvoke r2.<com.opengamma.analytics.financial.interestrate.YieldCurveBundle: com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve getCurve(java.lang.String)>($r3);

        $d3 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity: double getSettlementTime()>();

        d1 = virtualinvoke $r4.<com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve: double getDiscountFactor(double)>($d3);

        $r5 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity: com.opengamma.analytics.financial.interestrate.annuity.derivative.Annuity getCoupon()>();

        $r6 = virtualinvoke $r5.<com.opengamma.analytics.financial.interestrate.annuity.derivative.Annuity: com.opengamma.analytics.financial.interestrate.payments.derivative.Payment getNthPayment(int)>(0);

        $r7 = (com.opengamma.analytics.financial.interestrate.payments.derivative.CouponFixed) $r6;

        d2 = virtualinvoke $r7.<com.opengamma.analytics.financial.interestrate.payments.derivative.CouponFixed: double getNotional()>();

        $d4 = d0 / d1;

        $d5 = $d4 / d2;

        return $d5;
    }

    public double dirtyPriceFromCleanPrice(com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity, double)
    {
        com.opengamma.analytics.financial.interestrate.bond.method.BondSecurityDiscountingMethod r0;
        com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity r1;
        double d0, d1, $d2, $d3, $d4;
        com.opengamma.analytics.financial.interestrate.annuity.derivative.Annuity $r2;
        com.opengamma.analytics.financial.interestrate.payments.derivative.Payment $r3;
        com.opengamma.analytics.financial.interestrate.payments.derivative.CouponFixed $r4;

        r0 := @this: com.opengamma.analytics.financial.interestrate.bond.method.BondSecurityDiscountingMethod;

        r1 := @parameter0: com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity;

        d0 := @parameter1: double;

        $r2 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity: com.opengamma.analytics.financial.interestrate.annuity.derivative.Annuity getCoupon()>();

        $r3 = virtualinvoke $r2.<com.opengamma.analytics.financial.interestrate.annuity.derivative.Annuity: com.opengamma.analytics.financial.interestrate.payments.derivative.Payment getNthPayment(int)>(0);

        $r4 = (com.opengamma.analytics.financial.interestrate.payments.derivative.CouponFixed) $r3;

        d1 = virtualinvoke $r4.<com.opengamma.analytics.financial.interestrate.payments.derivative.CouponFixed: double getNotional()>();

        $d2 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity: double getAccruedInterest()>();

        $d3 = $d2 / d1;

        $d4 = d0 + $d3;

        return $d4;
    }

    public double dirtyPriceFromYield(com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity, double)
    {
        com.opengamma.analytics.financial.interestrate.bond.method.BondSecurityDiscountingMethod r0;
        com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity r1;
        double d0, d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21;
        int i0, $i1, $i2, $i3, $i4, $i5;
        com.opengamma.analytics.financial.interestrate.annuity.derivative.Annuity $r3, $r4, $r5, $r6, $r29, $r32;
        com.opengamma.analytics.financial.interestrate.payments.derivative.Payment $r7, $r30, $r33;
        com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed $r8;
        com.opengamma.financial.convention.yield.YieldConvention $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r24, $r35, $r36;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;
        java.lang.UnsupportedOperationException $r21;
        java.lang.StringBuilder $r22, $r23, $r26, $r27;
        java.lang.String $r25, $r28;
        com.opengamma.analytics.financial.interestrate.payments.derivative.CouponFixed $r31, $r34;

        r0 := @this: com.opengamma.analytics.financial.interestrate.bond.method.BondSecurityDiscountingMethod;

        r1 := @parameter0: com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity;

        d0 := @parameter1: double;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "bond");

        $r3 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity: com.opengamma.analytics.financial.interestrate.annuity.derivative.Annuity getNominal()>();

        $i1 = virtualinvoke $r3.<com.opengamma.analytics.financial.interestrate.annuity.derivative.Annuity: int getNumberOfPayments()>();

        if $i1 != 1 goto label1;

        $z7 = 1;

        goto label2;

     label1:
        $z7 = 0;

     label2:
        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z7, "Yield: more than one nominal repayment.");

        $r4 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity: com.opengamma.analytics.financial.interestrate.annuity.derivative.Annuity getCoupon()>();

        i0 = virtualinvoke $r4.<com.opengamma.analytics.financial.interestrate.annuity.derivative.Annuity: int getNumberOfPayments()>();

        $r5 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity: com.opengamma.analytics.financial.interestrate.annuity.derivative.Annuity getNominal()>();

        $r6 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity: com.opengamma.analytics.financial.interestrate.annuity.derivative.Annuity getNominal()>();

        $i2 = virtualinvoke $r6.<com.opengamma.analytics.financial.interestrate.annuity.derivative.Annuity: int getNumberOfPayments()>();

        $i3 = $i2 - 1;

        $r7 = virtualinvoke $r5.<com.opengamma.analytics.financial.interestrate.annuity.derivative.Annuity: com.opengamma.analytics.financial.interestrate.payments.derivative.Payment getNthPayment(int)>($i3);

        $r8 = (com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed) $r7;

        d1 = virtualinvoke $r8.<com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed: double getAmount()>();

        $r9 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity: com.opengamma.financial.convention.yield.YieldConvention getYieldConvention()>();

        $r10 = <com.opengamma.financial.convention.yield.SimpleYieldConvention: com.opengamma.financial.convention.yield.YieldConvention US_STREET>;

        $z0 = virtualinvoke $r9.<java.lang.Object: boolean equals(java.lang.Object)>($r10);

        if $z0 != 0 goto label3;

        $r35 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity: com.opengamma.financial.convention.yield.YieldConvention getYieldConvention()>();

        $r36 = <com.opengamma.financial.convention.yield.SimpleYieldConvention: com.opengamma.financial.convention.yield.YieldConvention GERMAN_BOND>;

        $z6 = virtualinvoke $r35.<java.lang.Object: boolean equals(java.lang.Object)>($r36);

        if $z6 == 0 goto label4;

     label3:
        if i0 != 1 goto label4;

        $r32 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity: com.opengamma.analytics.financial.interestrate.annuity.derivative.Annuity getCoupon()>();

        $r33 = virtualinvoke $r32.<com.opengamma.analytics.financial.interestrate.annuity.derivative.Annuity: com.opengamma.analytics.financial.interestrate.payments.derivative.Payment getNthPayment(int)>(0);

        $r34 = (com.opengamma.analytics.financial.interestrate.payments.derivative.CouponFixed) $r33;

        $d12 = virtualinvoke $r34.<com.opengamma.analytics.financial.interestrate.payments.derivative.CouponFixed: double getAmount()>();

        $d13 = d1 + $d12;

        $d14 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity: double getFactorToNextCoupon()>();

        $d15 = $d14 * d0;

        $i5 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity: int getCouponPerYear()>();

        $d16 = (double) $i5;

        $d17 = $d15 / $d16;

        $d18 = 1.0 + $d17;

        $d19 = $d13 / $d18;

        $d20 = $d19 / d1;

        return $d20;

     label4:
        $r11 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity: com.opengamma.financial.convention.yield.YieldConvention getYieldConvention()>();

        $r12 = <com.opengamma.financial.convention.yield.SimpleYieldConvention: com.opengamma.financial.convention.yield.YieldConvention FRANCE_COMPOUND_METHOD>;

        $z1 = virtualinvoke $r11.<java.lang.Object: boolean equals(java.lang.Object)>($r12);

        if $z1 == 0 goto label5;

        if i0 != 1 goto label5;

        $r29 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity: com.opengamma.analytics.financial.interestrate.annuity.derivative.Annuity getCoupon()>();

        $r30 = virtualinvoke $r29.<com.opengamma.analytics.financial.interestrate.annuity.derivative.Annuity: com.opengamma.analytics.financial.interestrate.payments.derivative.Payment getNthPayment(int)>(0);

        $r31 = (com.opengamma.analytics.financial.interestrate.payments.derivative.CouponFixed) $r30;

        $d2 = virtualinvoke $r31.<com.opengamma.analytics.financial.interestrate.payments.derivative.CouponFixed: double getAmount()>();

        $d3 = d1 + $d2;

        $d4 = $d3 / d1;

        $i4 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity: int getCouponPerYear()>();

        $d5 = (double) $i4;

        $d6 = d0 / $d5;

        $d7 = 1.0 + $d6;

        $d8 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity: double getFactorToNextCoupon()>();

        $d9 = neg $d8;

        $d10 = staticinvoke <java.lang.Math: double pow(double,double)>($d7, $d9);

        $d11 = $d4 * $d10;

        return $d11;

     label5:
        $r13 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity: com.opengamma.financial.convention.yield.YieldConvention getYieldConvention()>();

        $r14 = <com.opengamma.financial.convention.yield.SimpleYieldConvention: com.opengamma.financial.convention.yield.YieldConvention US_STREET>;

        $z2 = virtualinvoke $r13.<java.lang.Object: boolean equals(java.lang.Object)>($r14);

        if $z2 != 0 goto label6;

        $r15 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity: com.opengamma.financial.convention.yield.YieldConvention getYieldConvention()>();

        $r16 = <com.opengamma.financial.convention.yield.SimpleYieldConvention: com.opengamma.financial.convention.yield.YieldConvention UK_BUMP_DMO_METHOD>;

        $z3 = virtualinvoke $r15.<java.lang.Object: boolean equals(java.lang.Object)>($r16);

        if $z3 != 0 goto label6;

        $r17 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity: com.opengamma.financial.convention.yield.YieldConvention getYieldConvention()>();

        $r18 = <com.opengamma.financial.convention.yield.SimpleYieldConvention: com.opengamma.financial.convention.yield.YieldConvention GERMAN_BOND>;

        $z4 = virtualinvoke $r17.<java.lang.Object: boolean equals(java.lang.Object)>($r18);

        if $z4 != 0 goto label6;

        $r19 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity: com.opengamma.financial.convention.yield.YieldConvention getYieldConvention()>();

        $r20 = <com.opengamma.financial.convention.yield.SimpleYieldConvention: com.opengamma.financial.convention.yield.YieldConvention FRANCE_COMPOUND_METHOD>;

        $z5 = virtualinvoke $r19.<java.lang.Object: boolean equals(java.lang.Object)>($r20);

        if $z5 == 0 goto label7;

     label6:
        $d21 = specialinvoke r0.<com.opengamma.analytics.financial.interestrate.bond.method.BondSecurityDiscountingMethod: double dirtyPriceFromYieldStandard(com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity,double)>(r1, d0);

        return $d21;

     label7:
        $r21 = new java.lang.UnsupportedOperationException;

        $r22 = new java.lang.StringBuilder;

        specialinvoke $r22.<java.lang.StringBuilder: void <init>()>();

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("The convention ");

        $r24 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity: com.opengamma.financial.convention.yield.YieldConvention getYieldConvention()>();

        $r25 = interfaceinvoke $r24.<com.opengamma.financial.convention.yield.YieldConvention: java.lang.String getName()>();

        $r26 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r25);

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is not supported.");

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r21.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>($r28);

        throw $r21;
    }

    private double dirtyPriceFromYieldStandard(com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity, double)
    {
        com.opengamma.analytics.financial.interestrate.bond.method.BondSecurityDiscountingMethod r0;
        com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity r1;
        double d0, d1, d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, d17, d18;
        int i0, $i1, $i2, $i3, i4;
        com.opengamma.analytics.financial.interestrate.annuity.derivative.Annuity $r2, $r3, $r4, $r7;
        com.opengamma.analytics.financial.interestrate.payments.derivative.Payment $r5, $r8;
        com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed $r6;
        com.opengamma.analytics.financial.interestrate.payments.derivative.CouponFixed $r9;
        boolean $z0;

        r0 := @this: com.opengamma.analytics.financial.interestrate.bond.method.BondSecurityDiscountingMethod;

        r1 := @parameter0: com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity;

        d0 := @parameter1: double;

        $r2 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity: com.opengamma.analytics.financial.interestrate.annuity.derivative.Annuity getNominal()>();

        $i1 = virtualinvoke $r2.<com.opengamma.analytics.financial.interestrate.annuity.derivative.Annuity: int getNumberOfPayments()>();

        if $i1 != 1 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z0, "Yield: more than one nominal repayment.");

        $r3 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity: com.opengamma.analytics.financial.interestrate.annuity.derivative.Annuity getCoupon()>();

        i0 = virtualinvoke $r3.<com.opengamma.analytics.financial.interestrate.annuity.derivative.Annuity: int getNumberOfPayments()>();

        $r4 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity: com.opengamma.analytics.financial.interestrate.annuity.derivative.Annuity getNominal()>();

        $r5 = virtualinvoke $r4.<com.opengamma.analytics.financial.interestrate.annuity.derivative.Annuity: com.opengamma.analytics.financial.interestrate.payments.derivative.Payment getNthPayment(int)>(0);

        $r6 = (com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed) $r5;

        d1 = virtualinvoke $r6.<com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed: double getAmount()>();

        $i2 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity: int getCouponPerYear()>();

        $d3 = (double) $i2;

        $d4 = d0 / $d3;

        d2 = 1.0 + $d4;

        d17 = 0.0;

        i4 = 0;

     label3:
        if i4 >= i0 goto label4;

        $r7 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity: com.opengamma.analytics.financial.interestrate.annuity.derivative.Annuity getCoupon()>();

        $r8 = virtualinvoke $r7.<com.opengamma.analytics.financial.interestrate.annuity.derivative.Annuity: com.opengamma.analytics.financial.interestrate.payments.derivative.Payment getNthPayment(int)>(i4);

        $r9 = (com.opengamma.analytics.financial.interestrate.payments.derivative.CouponFixed) $r8;

        $d13 = virtualinvoke $r9.<com.opengamma.analytics.financial.interestrate.payments.derivative.CouponFixed: double getAmount()>();

        $d14 = (double) i4;

        $d15 = staticinvoke <java.lang.Math: double pow(double,double)>(d2, $d14);

        $d16 = $d13 / $d15;

        d17 = d17 + $d16;

        i4 = i4 + 1;

        goto label3;

     label4:
        $i3 = i0 - 1;

        $d5 = (double) $i3;

        $d6 = staticinvoke <java.lang.Math: double pow(double,double)>(d2, $d5);

        $d7 = d1 / $d6;

        d18 = d17 + $d7;

        $d8 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity: double getFactorToNextCoupon()>();

        $d9 = neg $d8;

        $d10 = staticinvoke <java.lang.Math: double pow(double,double)>(d2, $d9);

        $d11 = d18 * $d10;

        $d12 = $d11 / d1;

        return $d12;
    }

    public com.opengamma.analytics.financial.interestrate.InterestRateCurveSensitivity dirtyPriceCurveSensitivity(com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity, com.opengamma.analytics.financial.interestrate.YieldCurveBundle)
    {
        com.opengamma.analytics.financial.interestrate.bond.method.BondSecurityDiscountingMethod r0;
        com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity r1;
        com.opengamma.analytics.financial.interestrate.YieldCurveBundle r2;
        double d0, d1, d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9;
        com.opengamma.analytics.financial.interestrate.InterestRateCurveSensitivity r3, $r16, $r17, r19, r20;
        com.opengamma.analytics.financial.interestrate.annuity.derivative.Annuity $r6;
        com.opengamma.analytics.financial.interestrate.payments.derivative.Payment $r7;
        com.opengamma.analytics.financial.interestrate.payments.derivative.CouponFixed $r8;
        java.lang.String $r9, $r14;
        com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve $r10;
        java.util.HashMap $r11;
        java.util.ArrayList $r12;
        com.opengamma.util.tuple.DoublesPair $r13;

        r0 := @this: com.opengamma.analytics.financial.interestrate.bond.method.BondSecurityDiscountingMethod;

        r1 := @parameter0: com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity;

        r2 := @parameter1: com.opengamma.analytics.financial.interestrate.YieldCurveBundle;

        $r6 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity: com.opengamma.analytics.financial.interestrate.annuity.derivative.Annuity getCoupon()>();

        $r7 = virtualinvoke $r6.<com.opengamma.analytics.financial.interestrate.annuity.derivative.Annuity: com.opengamma.analytics.financial.interestrate.payments.derivative.Payment getNthPayment(int)>(0);

        $r8 = (com.opengamma.analytics.financial.interestrate.payments.derivative.CouponFixed) $r7;

        d0 = virtualinvoke $r8.<com.opengamma.analytics.financial.interestrate.payments.derivative.CouponFixed: double getNotional()>();

        d1 = virtualinvoke r0.<com.opengamma.analytics.financial.interestrate.bond.method.BondSecurityDiscountingMethod: double presentValue(com.opengamma.analytics.financial.interestrate.bond.definition.BondSecurity,com.opengamma.analytics.financial.interestrate.YieldCurveBundle)>(r1, r2);

        r3 = virtualinvoke r0.<com.opengamma.analytics.financial.interestrate.bond.method.BondSecurityDiscountingMethod: com.opengamma.analytics.financial.interestrate.InterestRateCurveSensitivity presentValueCurveSensitivity(com.opengamma.analytics.financial.interestrate.bond.definition.BondSecurity,com.opengamma.analytics.financial.interestrate.YieldCurveBundle)>(r1, r2);

        $r9 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity: java.lang.String getRepoCurveName()>();

        $r10 = virtualinvoke r2.<com.opengamma.analytics.financial.interestrate.YieldCurveBundle: com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve getCurve(java.lang.String)>($r9);

        $d3 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity: double getSettlementTime()>();

        d2 = virtualinvoke $r10.<com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve: double getDiscountFactor(double)>($d3);

        $r11 = new java.util.HashMap;

        specialinvoke $r11.<java.util.HashMap: void <init>()>();

        $r12 = new java.util.ArrayList;

        specialinvoke $r12.<java.util.ArrayList: void <init>()>();

        $d4 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity: double getSettlementTime()>();

        $d5 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity: double getSettlementTime()>();

        $d6 = $d5 / d2;

        $r13 = staticinvoke <com.opengamma.util.tuple.DoublesPair: com.opengamma.util.tuple.DoublesPair of(double,double)>($d4, $d6);

        interfaceinvoke $r12.<java.util.List: boolean add(java.lang.Object)>($r13);

        $r14 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity: java.lang.String getRepoCurveName()>();

        interfaceinvoke $r11.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r14, $r12);

        $r16 = new com.opengamma.analytics.financial.interestrate.InterestRateCurveSensitivity;

        specialinvoke $r16.<com.opengamma.analytics.financial.interestrate.InterestRateCurveSensitivity: void <init>(java.util.Map)>($r11);

        $d7 = d1 / d0;

        r19 = virtualinvoke $r16.<com.opengamma.analytics.financial.interestrate.InterestRateCurveSensitivity: com.opengamma.analytics.financial.interestrate.InterestRateCurveSensitivity multipliedBy(double)>($d7);

        $d8 = d2 * d0;

        $d9 = 1.0 / $d8;

        $r17 = virtualinvoke r3.<com.opengamma.analytics.financial.interestrate.InterestRateCurveSensitivity: com.opengamma.analytics.financial.interestrate.InterestRateCurveSensitivity multipliedBy(double)>($d9);

        r20 = virtualinvoke r19.<com.opengamma.analytics.financial.interestrate.InterestRateCurveSensitivity: com.opengamma.analytics.financial.interestrate.InterestRateCurveSensitivity plus(com.opengamma.analytics.financial.interestrate.InterestRateCurveSensitivity)>($r17);

        return r20;
    }

    public double cleanPriceFromCurves(com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity, com.opengamma.analytics.financial.interestrate.YieldCurveBundle)
    {
        com.opengamma.analytics.financial.interestrate.bond.method.BondSecurityDiscountingMethod r0;
        com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity r1;
        com.opengamma.analytics.financial.interestrate.YieldCurveBundle r2;
        double d0, $d1;

        r0 := @this: com.opengamma.analytics.financial.interestrate.bond.method.BondSecurityDiscountingMethod;

        r1 := @parameter0: com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity;

        r2 := @parameter1: com.opengamma.analytics.financial.interestrate.YieldCurveBundle;

        d0 = virtualinvoke r0.<com.opengamma.analytics.financial.interestrate.bond.method.BondSecurityDiscountingMethod: double dirtyPriceFromCurves(com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity,com.opengamma.analytics.financial.interestrate.YieldCurveBundle)>(r1, r2);

        $d1 = virtualinvoke r0.<com.opengamma.analytics.financial.interestrate.bond.method.BondSecurityDiscountingMethod: double cleanPriceFromDirtyPrice(com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity,double)>(r1, d0);

        return $d1;
    }

    public double cleanPriceFromDirtyPrice(com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity, double)
    {
        com.opengamma.analytics.financial.interestrate.bond.method.BondSecurityDiscountingMethod r0;
        com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity r1;
        double d0, d1, $d2, $d3, $d4;
        com.opengamma.analytics.financial.interestrate.annuity.derivative.Annuity $r2;
        com.opengamma.analytics.financial.interestrate.payments.derivative.Payment $r3;
        com.opengamma.analytics.financial.interestrate.payments.derivative.CouponFixed $r4;

        r0 := @this: com.opengamma.analytics.financial.interestrate.bond.method.BondSecurityDiscountingMethod;

        r1 := @parameter0: com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity;

        d0 := @parameter1: double;

        $r2 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity: com.opengamma.analytics.financial.interestrate.annuity.derivative.Annuity getCoupon()>();

        $r3 = virtualinvoke $r2.<com.opengamma.analytics.financial.interestrate.annuity.derivative.Annuity: com.opengamma.analytics.financial.interestrate.payments.derivative.Payment getNthPayment(int)>(0);

        $r4 = (com.opengamma.analytics.financial.interestrate.payments.derivative.CouponFixed) $r3;

        d1 = virtualinvoke $r4.<com.opengamma.analytics.financial.interestrate.payments.derivative.CouponFixed: double getNotional()>();

        $d2 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity: double getAccruedInterest()>();

        $d3 = $d2 / d1;

        $d4 = d0 - $d3;

        return $d4;
    }

    public double cleanPriceFromYield(com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity, double)
    {
        com.opengamma.analytics.financial.interestrate.bond.method.BondSecurityDiscountingMethod r0;
        com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity r1;
        double d0, d1, d2;

        r0 := @this: com.opengamma.analytics.financial.interestrate.bond.method.BondSecurityDiscountingMethod;

        r1 := @parameter0: com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity;

        d0 := @parameter1: double;

        d1 = virtualinvoke r0.<com.opengamma.analytics.financial.interestrate.bond.method.BondSecurityDiscountingMethod: double dirtyPriceFromYield(com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity,double)>(r1, d0);

        d2 = virtualinvoke r0.<com.opengamma.analytics.financial.interestrate.bond.method.BondSecurityDiscountingMethod: double cleanPriceFromDirtyPrice(com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity,double)>(r1, d1);

        return d2;
    }

    public double yieldFromDirtyPrice(com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity, double)
    {
        com.opengamma.analytics.financial.interestrate.bond.method.BondSecurityDiscountingMethod r0;
        com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity r1;
        double d0, d1, $d2, $d3;
        double[] r3;
        com.opengamma.analytics.financial.interestrate.bond.method.BondSecurityDiscountingMethod$1 $r4;
        com.opengamma.analytics.math.rootfinding.BracketRoot $r5;
        com.opengamma.analytics.math.rootfinding.RealSingleRootFinder $r6;
        java.lang.Double $r7, $r8, $r9;

        r0 := @this: com.opengamma.analytics.financial.interestrate.bond.method.BondSecurityDiscountingMethod;

        r1 := @parameter0: com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity;

        d0 := @parameter1: double;

        $r4 = new com.opengamma.analytics.financial.interestrate.bond.method.BondSecurityDiscountingMethod$1;

        specialinvoke $r4.<com.opengamma.analytics.financial.interestrate.bond.method.BondSecurityDiscountingMethod$1: void <init>(com.opengamma.analytics.financial.interestrate.bond.method.BondSecurityDiscountingMethod,com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity,double)>(r0, r1, d0);

        $r5 = <com.opengamma.analytics.financial.interestrate.bond.method.BondSecurityDiscountingMethod: com.opengamma.analytics.math.rootfinding.BracketRoot BRACKETER>;

        r3 = virtualinvoke $r5.<com.opengamma.analytics.math.rootfinding.BracketRoot: double[] getBracketedPoints(com.opengamma.analytics.math.function.Function1D,double,double)>($r4, 0.0, 0.2);

        $r6 = <com.opengamma.analytics.financial.interestrate.bond.method.BondSecurityDiscountingMethod: com.opengamma.analytics.math.rootfinding.RealSingleRootFinder ROOT_FINDER>;

        $d2 = r3[0];

        $r7 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d2);

        $d3 = r3[1];

        $r8 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d3);

        $r9 = virtualinvoke $r6.<com.opengamma.analytics.math.rootfinding.RealSingleRootFinder: java.lang.Double getRoot(com.opengamma.analytics.math.function.Function1D,java.lang.Double,java.lang.Double)>($r4, $r7, $r8);

        d1 = virtualinvoke $r9.<java.lang.Double: double doubleValue()>();

        return d1;
    }

    public double yieldFromCurves(com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity, com.opengamma.analytics.financial.interestrate.YieldCurveBundle)
    {
        com.opengamma.analytics.financial.interestrate.bond.method.BondSecurityDiscountingMethod r0;
        com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity r1;
        com.opengamma.analytics.financial.interestrate.YieldCurveBundle r2;
        double d0, d1;

        r0 := @this: com.opengamma.analytics.financial.interestrate.bond.method.BondSecurityDiscountingMethod;

        r1 := @parameter0: com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity;

        r2 := @parameter1: com.opengamma.analytics.financial.interestrate.YieldCurveBundle;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "Bond");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, "Curves");

        d0 = virtualinvoke r0.<com.opengamma.analytics.financial.interestrate.bond.method.BondSecurityDiscountingMethod: double dirtyPriceFromCurves(com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity,com.opengamma.analytics.financial.interestrate.YieldCurveBundle)>(r1, r2);

        d1 = virtualinvoke r0.<com.opengamma.analytics.financial.interestrate.bond.method.BondSecurityDiscountingMethod: double yieldFromDirtyPrice(com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity,double)>(r1, d0);

        return d1;
    }

    public double yieldFromCleanPrice(com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity, double)
    {
        com.opengamma.analytics.financial.interestrate.bond.method.BondSecurityDiscountingMethod r0;
        com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity r1;
        double d0, d1, d2;

        r0 := @this: com.opengamma.analytics.financial.interestrate.bond.method.BondSecurityDiscountingMethod;

        r1 := @parameter0: com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity;

        d0 := @parameter1: double;

        d1 = virtualinvoke r0.<com.opengamma.analytics.financial.interestrate.bond.method.BondSecurityDiscountingMethod: double dirtyPriceFromCleanPrice(com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity,double)>(r1, d0);

        d2 = virtualinvoke r0.<com.opengamma.analytics.financial.interestrate.bond.method.BondSecurityDiscountingMethod: double yieldFromDirtyPrice(com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity,double)>(r1, d1);

        return d2;
    }

    public double modifiedDurationFromYield(com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity, double)
    {
        com.opengamma.analytics.financial.interestrate.bond.method.BondSecurityDiscountingMethod r0;
        com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity r1;
        double d0, d1, d2, d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21, $d22, $d23, $d24, $d25, $d26, $d27, $d28, $d29, $d30, $d31, $d32, $d33, $d34, $d35, $d36, $d37, $d38, $d39, $d40, $d41, $d42, $d43, $d44, $d45, $d46, $d47, $d48, $d49, $d50, $d51, $d52, $d53, $d54, d55, d56, d57, d58, d59;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, i13;
        com.opengamma.analytics.financial.interestrate.annuity.derivative.Annuity $r2, $r3, $r4, $r13, $r16;
        com.opengamma.analytics.financial.interestrate.payments.derivative.Payment $r5, $r14, $r17;
        com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed $r6;
        com.opengamma.financial.convention.yield.YieldConvention $r7, $r8, $r9, $r10, $r11, $r12, $r19, $r20, $r21, $r22, $r23, $r24, $r28;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        com.opengamma.analytics.financial.interestrate.payments.derivative.CouponFixed $r15, $r18;
        java.lang.UnsupportedOperationException $r25;
        java.lang.StringBuilder $r26, $r27, $r30, $r31;
        java.lang.String $r29, $r32;

        r0 := @this: com.opengamma.analytics.financial.interestrate.bond.method.BondSecurityDiscountingMethod;

        r1 := @parameter0: com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity;

        d0 := @parameter1: double;

        $r2 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity: com.opengamma.analytics.financial.interestrate.annuity.derivative.Annuity getCoupon()>();

        i0 = virtualinvoke $r2.<com.opengamma.analytics.financial.interestrate.annuity.derivative.Annuity: int getNumberOfPayments()>();

        $r3 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity: com.opengamma.analytics.financial.interestrate.annuity.derivative.Annuity getNominal()>();

        $r4 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity: com.opengamma.analytics.financial.interestrate.annuity.derivative.Annuity getNominal()>();

        $i1 = virtualinvoke $r4.<com.opengamma.analytics.financial.interestrate.annuity.derivative.Annuity: int getNumberOfPayments()>();

        $i2 = $i1 - 1;

        $r5 = virtualinvoke $r3.<com.opengamma.analytics.financial.interestrate.annuity.derivative.Annuity: com.opengamma.analytics.financial.interestrate.payments.derivative.Payment getNthPayment(int)>($i2);

        $r6 = (com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed) $r5;

        d1 = virtualinvoke $r6.<com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed: double getAmount()>();

        $r7 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity: com.opengamma.financial.convention.yield.YieldConvention getYieldConvention()>();

        $r8 = <com.opengamma.financial.convention.yield.SimpleYieldConvention: com.opengamma.financial.convention.yield.YieldConvention US_STREET>;

        $z0 = virtualinvoke $r7.<java.lang.Object: boolean equals(java.lang.Object)>($r8);

        if $z0 == 0 goto label1;

        if i0 != 1 goto label1;

        $d44 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity: double getFactorToNextCoupon()>();

        $i10 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity: int getCouponPerYear()>();

        $d45 = (double) $i10;

        $d46 = $d44 / $d45;

        $d47 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity: double getFactorToNextCoupon()>();

        $d48 = $d47 * d0;

        $i11 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity: int getCouponPerYear()>();

        $d49 = (double) $i11;

        $d50 = $d48 / $d49;

        $d51 = 1.0 + $d50;

        $d52 = $d46 / $d51;

        return $d52;

     label1:
        $r9 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity: com.opengamma.financial.convention.yield.YieldConvention getYieldConvention()>();

        $r10 = <com.opengamma.financial.convention.yield.SimpleYieldConvention: com.opengamma.financial.convention.yield.YieldConvention FRANCE_COMPOUND_METHOD>;

        $z1 = virtualinvoke $r9.<java.lang.Object: boolean equals(java.lang.Object)>($r10);

        if $z1 == 0 goto label2;

        if i0 != 1 goto label2;

        $d37 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity: double getFactorToNextCoupon()>();

        $i8 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity: int getCouponPerYear()>();

        $d38 = (double) $i8;

        $d39 = $d37 / $d38;

        $i9 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity: int getCouponPerYear()>();

        $d40 = (double) $i9;

        $d41 = d0 / $d40;

        $d42 = 1.0 + $d41;

        $d43 = $d39 / $d42;

        return $d43;

     label2:
        $r11 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity: com.opengamma.financial.convention.yield.YieldConvention getYieldConvention()>();

        $r12 = <com.opengamma.financial.convention.yield.SimpleYieldConvention: com.opengamma.financial.convention.yield.YieldConvention US_STREET>;

        $z2 = virtualinvoke $r11.<java.lang.Object: boolean equals(java.lang.Object)>($r12);

        if $z2 != 0 goto label3;

        $r19 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity: com.opengamma.financial.convention.yield.YieldConvention getYieldConvention()>();

        $r20 = <com.opengamma.financial.convention.yield.SimpleYieldConvention: com.opengamma.financial.convention.yield.YieldConvention UK_BUMP_DMO_METHOD>;

        $z3 = virtualinvoke $r19.<java.lang.Object: boolean equals(java.lang.Object)>($r20);

        if $z3 != 0 goto label3;

        $r21 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity: com.opengamma.financial.convention.yield.YieldConvention getYieldConvention()>();

        $r22 = <com.opengamma.financial.convention.yield.SimpleYieldConvention: com.opengamma.financial.convention.yield.YieldConvention GERMAN_BOND>;

        $z4 = virtualinvoke $r21.<java.lang.Object: boolean equals(java.lang.Object)>($r22);

        if $z4 != 0 goto label3;

        $r23 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity: com.opengamma.financial.convention.yield.YieldConvention getYieldConvention()>();

        $r24 = <com.opengamma.financial.convention.yield.SimpleYieldConvention: com.opengamma.financial.convention.yield.YieldConvention FRANCE_COMPOUND_METHOD>;

        $z5 = virtualinvoke $r23.<java.lang.Object: boolean equals(java.lang.Object)>($r24);

        if $z5 == 0 goto label6;

     label3:
        $i12 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity: int getCouponPerYear()>();

        $d53 = (double) $i12;

        $d54 = d0 / $d53;

        d2 = 1.0 + $d54;

        d55 = 0.0;

        d56 = 0.0;

        i13 = 0;

     label4:
        if i13 >= i0 goto label5;

        $r13 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity: com.opengamma.analytics.financial.interestrate.annuity.derivative.Annuity getCoupon()>();

        $r14 = virtualinvoke $r13.<com.opengamma.analytics.financial.interestrate.annuity.derivative.Annuity: com.opengamma.analytics.financial.interestrate.payments.derivative.Payment getNthPayment(int)>(i13);

        $r15 = (com.opengamma.analytics.financial.interestrate.payments.derivative.CouponFixed) $r14;

        $d23 = virtualinvoke $r15.<com.opengamma.analytics.financial.interestrate.payments.derivative.CouponFixed: double getAmount()>();

        $i6 = i13 + 1;

        $d24 = (double) $i6;

        $d25 = staticinvoke <java.lang.Math: double pow(double,double)>(d2, $d24);

        $d26 = $d23 / $d25;

        $d27 = (double) i13;

        $d28 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity: double getFactorToNextCoupon()>();

        $d29 = $d27 + $d28;

        $d30 = $d26 * $d29;

        $i7 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity: int getCouponPerYear()>();

        $d31 = (double) $i7;

        $d32 = $d30 / $d31;

        d55 = d55 + $d32;

        $r16 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity: com.opengamma.analytics.financial.interestrate.annuity.derivative.Annuity getCoupon()>();

        $r17 = virtualinvoke $r16.<com.opengamma.analytics.financial.interestrate.annuity.derivative.Annuity: com.opengamma.analytics.financial.interestrate.payments.derivative.Payment getNthPayment(int)>(i13);

        $r18 = (com.opengamma.analytics.financial.interestrate.payments.derivative.CouponFixed) $r17;

        $d33 = virtualinvoke $r18.<com.opengamma.analytics.financial.interestrate.payments.derivative.CouponFixed: double getAmount()>();

        $d34 = (double) i13;

        $d35 = staticinvoke <java.lang.Math: double pow(double,double)>(d2, $d34);

        $d36 = $d33 / $d35;

        d56 = d56 + $d36;

        i13 = i13 + 1;

        goto label4;

     label5:
        $d4 = (double) i0;

        $d5 = staticinvoke <java.lang.Math: double pow(double,double)>(d2, $d4);

        $d6 = d1 / $d5;

        $i3 = i0 - 1;

        $d7 = (double) $i3;

        $d8 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity: double getFactorToNextCoupon()>();

        $d9 = $d7 + $d8;

        $d10 = $d6 * $d9;

        $i4 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity: int getCouponPerYear()>();

        $d11 = (double) $i4;

        $d12 = $d10 / $d11;

        d57 = d55 + $d12;

        $i5 = i0 - 1;

        $d13 = (double) $i5;

        $d14 = staticinvoke <java.lang.Math: double pow(double,double)>(d2, $d13);

        $d15 = d1 / $d14;

        d58 = d56 + $d15;

        $d16 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity: double getFactorToNextCoupon()>();

        $d17 = neg $d16;

        $d18 = staticinvoke <java.lang.Math: double pow(double,double)>(d2, $d17);

        d59 = d58 * $d18;

        $d19 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity: double getFactorToNextCoupon()>();

        $d20 = neg $d19;

        $d21 = staticinvoke <java.lang.Math: double pow(double,double)>(d2, $d20);

        $d22 = d57 * $d21;

        d3 = $d22 / d59;

        return d3;

     label6:
        $r25 = new java.lang.UnsupportedOperationException;

        $r26 = new java.lang.StringBuilder;

        specialinvoke $r26.<java.lang.StringBuilder: void <init>()>();

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("The convention ");

        $r28 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity: com.opengamma.financial.convention.yield.YieldConvention getYieldConvention()>();

        $r29 = interfaceinvoke $r28.<com.opengamma.financial.convention.yield.YieldConvention: java.lang.String getName()>();

        $r30 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r29);

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is not supported.");

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r25.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>($r32);

        throw $r25;
    }

    public double modifiedDurationFromCurves(com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity, com.opengamma.analytics.financial.interestrate.YieldCurveBundle)
    {
        com.opengamma.analytics.financial.interestrate.bond.method.BondSecurityDiscountingMethod r0;
        com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity r1;
        com.opengamma.analytics.financial.interestrate.YieldCurveBundle r2;
        double d0, $d1;

        r0 := @this: com.opengamma.analytics.financial.interestrate.bond.method.BondSecurityDiscountingMethod;

        r1 := @parameter0: com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity;

        r2 := @parameter1: com.opengamma.analytics.financial.interestrate.YieldCurveBundle;

        d0 = virtualinvoke r0.<com.opengamma.analytics.financial.interestrate.bond.method.BondSecurityDiscountingMethod: double yieldFromCurves(com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity,com.opengamma.analytics.financial.interestrate.YieldCurveBundle)>(r1, r2);

        $d1 = virtualinvoke r0.<com.opengamma.analytics.financial.interestrate.bond.method.BondSecurityDiscountingMethod: double modifiedDurationFromYield(com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity,double)>(r1, d0);

        return $d1;
    }

    public double modifiedDurationFromDirtyPrice(com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity, double)
    {
        com.opengamma.analytics.financial.interestrate.bond.method.BondSecurityDiscountingMethod r0;
        com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity r1;
        double d0, d1, $d2;

        r0 := @this: com.opengamma.analytics.financial.interestrate.bond.method.BondSecurityDiscountingMethod;

        r1 := @parameter0: com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity;

        d0 := @parameter1: double;

        d1 = virtualinvoke r0.<com.opengamma.analytics.financial.interestrate.bond.method.BondSecurityDiscountingMethod: double yieldFromDirtyPrice(com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity,double)>(r1, d0);

        $d2 = virtualinvoke r0.<com.opengamma.analytics.financial.interestrate.bond.method.BondSecurityDiscountingMethod: double modifiedDurationFromYield(com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity,double)>(r1, d1);

        return $d2;
    }

    public double modifiedDurationFromCleanPrice(com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity, double)
    {
        com.opengamma.analytics.financial.interestrate.bond.method.BondSecurityDiscountingMethod r0;
        com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity r1;
        double d0, d1, $d2;

        r0 := @this: com.opengamma.analytics.financial.interestrate.bond.method.BondSecurityDiscountingMethod;

        r1 := @parameter0: com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity;

        d0 := @parameter1: double;

        d1 = virtualinvoke r0.<com.opengamma.analytics.financial.interestrate.bond.method.BondSecurityDiscountingMethod: double yieldFromCleanPrice(com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity,double)>(r1, d0);

        $d2 = virtualinvoke r0.<com.opengamma.analytics.financial.interestrate.bond.method.BondSecurityDiscountingMethod: double modifiedDurationFromYield(com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity,double)>(r1, d1);

        return $d2;
    }

    public double macaulayDurationFromYield(com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity, double)
    {
        com.opengamma.analytics.financial.interestrate.bond.method.BondSecurityDiscountingMethod r0;
        com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity r1;
        double d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8;
        int i0, $i1, $i2;
        com.opengamma.analytics.financial.interestrate.annuity.derivative.Annuity $r2;
        com.opengamma.financial.convention.yield.YieldConvention $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r16, $r21, $r22;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        java.lang.UnsupportedOperationException $r13;
        java.lang.StringBuilder $r14, $r15, $r18, $r19;
        java.lang.String $r17, $r20;

        r0 := @this: com.opengamma.analytics.financial.interestrate.bond.method.BondSecurityDiscountingMethod;

        r1 := @parameter0: com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity;

        d0 := @parameter1: double;

        $r2 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity: com.opengamma.analytics.financial.interestrate.annuity.derivative.Annuity getCoupon()>();

        i0 = virtualinvoke $r2.<com.opengamma.analytics.financial.interestrate.annuity.derivative.Annuity: int getNumberOfPayments()>();

        $r3 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity: com.opengamma.financial.convention.yield.YieldConvention getYieldConvention()>();

        $r4 = <com.opengamma.financial.convention.yield.SimpleYieldConvention: com.opengamma.financial.convention.yield.YieldConvention US_STREET>;

        $z0 = virtualinvoke $r3.<java.lang.Object: boolean equals(java.lang.Object)>($r4);

        if $z0 != 0 goto label1;

        $r21 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity: com.opengamma.financial.convention.yield.YieldConvention getYieldConvention()>();

        $r22 = <com.opengamma.financial.convention.yield.SimpleYieldConvention: com.opengamma.financial.convention.yield.YieldConvention FRANCE_COMPOUND_METHOD>;

        $z5 = virtualinvoke $r21.<java.lang.Object: boolean equals(java.lang.Object)>($r22);

        if $z5 == 0 goto label2;

     label1:
        if i0 != 1 goto label2;

        $d1 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity: double getFactorToNextCoupon()>();

        $i1 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity: int getCouponPerYear()>();

        $d2 = (double) $i1;

        $d3 = $d1 / $d2;

        return $d3;

     label2:
        $r5 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity: com.opengamma.financial.convention.yield.YieldConvention getYieldConvention()>();

        $r6 = <com.opengamma.financial.convention.yield.SimpleYieldConvention: com.opengamma.financial.convention.yield.YieldConvention US_STREET>;

        $z1 = virtualinvoke $r5.<java.lang.Object: boolean equals(java.lang.Object)>($r6);

        if $z1 != 0 goto label3;

        $r7 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity: com.opengamma.financial.convention.yield.YieldConvention getYieldConvention()>();

        $r8 = <com.opengamma.financial.convention.yield.SimpleYieldConvention: com.opengamma.financial.convention.yield.YieldConvention UK_BUMP_DMO_METHOD>;

        $z2 = virtualinvoke $r7.<java.lang.Object: boolean equals(java.lang.Object)>($r8);

        if $z2 != 0 goto label3;

        $r9 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity: com.opengamma.financial.convention.yield.YieldConvention getYieldConvention()>();

        $r10 = <com.opengamma.financial.convention.yield.SimpleYieldConvention: com.opengamma.financial.convention.yield.YieldConvention GERMAN_BOND>;

        $z3 = virtualinvoke $r9.<java.lang.Object: boolean equals(java.lang.Object)>($r10);

        if $z3 != 0 goto label3;

        $r11 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity: com.opengamma.financial.convention.yield.YieldConvention getYieldConvention()>();

        $r12 = <com.opengamma.financial.convention.yield.SimpleYieldConvention: com.opengamma.financial.convention.yield.YieldConvention FRANCE_COMPOUND_METHOD>;

        $z4 = virtualinvoke $r11.<java.lang.Object: boolean equals(java.lang.Object)>($r12);

        if $z4 == 0 goto label4;

     label3:
        $d4 = virtualinvoke r0.<com.opengamma.analytics.financial.interestrate.bond.method.BondSecurityDiscountingMethod: double modifiedDurationFromYield(com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity,double)>(r1, d0);

        $i2 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity: int getCouponPerYear()>();

        $d5 = (double) $i2;

        $d6 = d0 / $d5;

        $d7 = 1.0 + $d6;

        $d8 = $d4 * $d7;

        return $d8;

     label4:
        $r13 = new java.lang.UnsupportedOperationException;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("The convention ");

        $r16 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity: com.opengamma.financial.convention.yield.YieldConvention getYieldConvention()>();

        $r17 = interfaceinvoke $r16.<com.opengamma.financial.convention.yield.YieldConvention: java.lang.String getName()>();

        $r18 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is not supported for Macaulay duration.");

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r13.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>($r20);

        throw $r13;
    }

    public double macaulayDurationFromCurves(com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity, com.opengamma.analytics.financial.interestrate.YieldCurveBundle)
    {
        com.opengamma.analytics.financial.interestrate.bond.method.BondSecurityDiscountingMethod r0;
        com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity r1;
        com.opengamma.analytics.financial.interestrate.YieldCurveBundle r2;
        double d0, $d1;

        r0 := @this: com.opengamma.analytics.financial.interestrate.bond.method.BondSecurityDiscountingMethod;

        r1 := @parameter0: com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity;

        r2 := @parameter1: com.opengamma.analytics.financial.interestrate.YieldCurveBundle;

        d0 = virtualinvoke r0.<com.opengamma.analytics.financial.interestrate.bond.method.BondSecurityDiscountingMethod: double yieldFromCurves(com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity,com.opengamma.analytics.financial.interestrate.YieldCurveBundle)>(r1, r2);

        $d1 = virtualinvoke r0.<com.opengamma.analytics.financial.interestrate.bond.method.BondSecurityDiscountingMethod: double macaulayDurationFromYield(com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity,double)>(r1, d0);

        return $d1;
    }

    public double macaulayDurationFromDirtyPrice(com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity, double)
    {
        com.opengamma.analytics.financial.interestrate.bond.method.BondSecurityDiscountingMethod r0;
        com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity r1;
        double d0, d1, $d2;

        r0 := @this: com.opengamma.analytics.financial.interestrate.bond.method.BondSecurityDiscountingMethod;

        r1 := @parameter0: com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity;

        d0 := @parameter1: double;

        d1 = virtualinvoke r0.<com.opengamma.analytics.financial.interestrate.bond.method.BondSecurityDiscountingMethod: double yieldFromDirtyPrice(com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity,double)>(r1, d0);

        $d2 = virtualinvoke r0.<com.opengamma.analytics.financial.interestrate.bond.method.BondSecurityDiscountingMethod: double macaulayDurationFromYield(com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity,double)>(r1, d1);

        return $d2;
    }

    public double convexityFromYield(com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity, double)
    {
        com.opengamma.analytics.financial.interestrate.bond.method.BondSecurityDiscountingMethod r0;
        com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity r1;
        double d0, d1, d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21, $d22, $d23, $d24, $d25, $d26, $d27, $d28, $d29, $d30, $d31, $d32, $d33, $d34, $d35, $d36, $d37, $d38, $d39, $d40, $d41, $d42, $d43, $d44, $d45, $d46, $d47, $d48, $d49, $d50, $d51, $d52, $d53, $d54, d55, d56, $d57, $d58, d59, d60, d61, d62, d63, d64;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, i16;
        com.opengamma.financial.convention.yield.YieldConvention r2, $r8, $r15, $r16, $r17, $r25, $r26, $r27;
        com.opengamma.analytics.financial.interestrate.annuity.derivative.Annuity $r3, $r4, $r5, $r9, $r12;
        com.opengamma.analytics.financial.interestrate.payments.derivative.Payment $r6, $r10, $r13;
        com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed $r7;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        com.opengamma.analytics.financial.interestrate.payments.derivative.CouponFixed $r11, $r14;
        java.lang.UnsupportedOperationException $r18, $r28;
        java.lang.StringBuilder $r19, $r20, $r22, $r23, $r29, $r30, $r32, $r33;
        java.lang.String $r21, $r24, $r31, $r34;

        r0 := @this: com.opengamma.analytics.financial.interestrate.bond.method.BondSecurityDiscountingMethod;

        r1 := @parameter0: com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity;

        d0 := @parameter1: double;

        $r3 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity: com.opengamma.analytics.financial.interestrate.annuity.derivative.Annuity getCoupon()>();

        i0 = virtualinvoke $r3.<com.opengamma.analytics.financial.interestrate.annuity.derivative.Annuity: int getNumberOfPayments()>();

        $r4 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity: com.opengamma.analytics.financial.interestrate.annuity.derivative.Annuity getNominal()>();

        $r5 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity: com.opengamma.analytics.financial.interestrate.annuity.derivative.Annuity getNominal()>();

        $i1 = virtualinvoke $r5.<com.opengamma.analytics.financial.interestrate.annuity.derivative.Annuity: int getNumberOfPayments()>();

        $i2 = $i1 - 1;

        $r6 = virtualinvoke $r4.<com.opengamma.analytics.financial.interestrate.annuity.derivative.Annuity: com.opengamma.analytics.financial.interestrate.payments.derivative.Payment getNthPayment(int)>($i2);

        $r7 = (com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed) $r6;

        d1 = virtualinvoke $r7.<com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed: double getAmount()>();

        r2 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity: com.opengamma.financial.convention.yield.YieldConvention getYieldConvention()>();

        if i0 != 1 goto label3;

        $r25 = <com.opengamma.financial.convention.yield.SimpleYieldConvention: com.opengamma.financial.convention.yield.YieldConvention US_STREET>;

        $z4 = virtualinvoke r2.<java.lang.Object: boolean equals(java.lang.Object)>($r25);

        if $z4 != 0 goto label1;

        $r26 = <com.opengamma.financial.convention.yield.SimpleYieldConvention: com.opengamma.financial.convention.yield.YieldConvention GERMAN_BOND>;

        $z5 = virtualinvoke r2.<java.lang.Object: boolean equals(java.lang.Object)>($r26);

        if $z5 == 0 goto label2;

     label1:
        $d45 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity: double getFactorToNextCoupon()>();

        $i13 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity: int getCouponPerYear()>();

        $d46 = (double) $i13;

        d55 = $d45 / $d46;

        $d47 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity: double getFactorToNextCoupon()>();

        $d48 = $d47 * d0;

        $i14 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity: int getCouponPerYear()>();

        $d49 = (double) $i14;

        $d50 = $d48 / $d49;

        d56 = 1.0 + $d50;

        $d51 = 2.0 * d55;

        $d53 = $d51 * d55;

        $d52 = d56 * d56;

        $d54 = $d53 / $d52;

        return $d54;

     label2:
        $r27 = <com.opengamma.financial.convention.yield.SimpleYieldConvention: com.opengamma.financial.convention.yield.YieldConvention FRANCE_COMPOUND_METHOD>;

        $z6 = virtualinvoke r2.<java.lang.Object: boolean equals(java.lang.Object)>($r27);

        if $z6 == 0 goto label3;

        $r28 = new java.lang.UnsupportedOperationException;

        $r29 = new java.lang.StringBuilder;

        specialinvoke $r29.<java.lang.StringBuilder: void <init>()>();

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("The convention ");

        $r31 = interfaceinvoke r2.<com.opengamma.financial.convention.yield.YieldConvention: java.lang.String getName()>();

        $r32 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r31);

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("with only one coupon is not supported.");

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r28.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>($r34);

        throw $r28;

     label3:
        $r8 = <com.opengamma.financial.convention.yield.SimpleYieldConvention: com.opengamma.financial.convention.yield.YieldConvention US_STREET>;

        $z0 = virtualinvoke r2.<java.lang.Object: boolean equals(java.lang.Object)>($r8);

        if $z0 != 0 goto label4;

        $r15 = <com.opengamma.financial.convention.yield.SimpleYieldConvention: com.opengamma.financial.convention.yield.YieldConvention UK_BUMP_DMO_METHOD>;

        $z1 = virtualinvoke r2.<java.lang.Object: boolean equals(java.lang.Object)>($r15);

        if $z1 != 0 goto label4;

        $r16 = <com.opengamma.financial.convention.yield.SimpleYieldConvention: com.opengamma.financial.convention.yield.YieldConvention GERMAN_BOND>;

        $z2 = virtualinvoke r2.<java.lang.Object: boolean equals(java.lang.Object)>($r16);

        if $z2 != 0 goto label4;

        $r17 = <com.opengamma.financial.convention.yield.SimpleYieldConvention: com.opengamma.financial.convention.yield.YieldConvention FRANCE_COMPOUND_METHOD>;

        $z3 = virtualinvoke r2.<java.lang.Object: boolean equals(java.lang.Object)>($r17);

        if $z3 == 0 goto label7;

     label4:
        $i15 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity: int getCouponPerYear()>();

        $d57 = (double) $i15;

        $d58 = d0 / $d57;

        d59 = 1.0 + $d58;

        d60 = 0.0;

        d61 = 0.0;

        i16 = 0;

     label5:
        if i16 >= i0 goto label6;

        $r9 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity: com.opengamma.analytics.financial.interestrate.annuity.derivative.Annuity getCoupon()>();

        $r10 = virtualinvoke $r9.<com.opengamma.analytics.financial.interestrate.annuity.derivative.Annuity: com.opengamma.analytics.financial.interestrate.payments.derivative.Payment getNthPayment(int)>(i16);

        $r11 = (com.opengamma.analytics.financial.interestrate.payments.derivative.CouponFixed) $r10;

        $d26 = virtualinvoke $r11.<com.opengamma.analytics.financial.interestrate.payments.derivative.CouponFixed: double getAmount()>();

        $i9 = i16 + 2;

        $d27 = (double) $i9;

        $d28 = staticinvoke <java.lang.Math: double pow(double,double)>(d59, $d27);

        $d29 = $d26 / $d28;

        $d30 = (double) i16;

        $d31 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity: double getFactorToNextCoupon()>();

        $d32 = $d30 + $d31;

        $d33 = $d29 * $d32;

        $d34 = (double) i16;

        $d35 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity: double getFactorToNextCoupon()>();

        $d36 = $d34 + $d35;

        $d37 = $d36 + 1.0;

        $d38 = $d33 * $d37;

        $i10 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity: int getCouponPerYear()>();

        $i11 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity: int getCouponPerYear()>();

        $i12 = $i10 * $i11;

        $d39 = (double) $i12;

        $d40 = $d38 / $d39;

        d60 = d60 + $d40;

        $r12 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity: com.opengamma.analytics.financial.interestrate.annuity.derivative.Annuity getCoupon()>();

        $r13 = virtualinvoke $r12.<com.opengamma.analytics.financial.interestrate.annuity.derivative.Annuity: com.opengamma.analytics.financial.interestrate.payments.derivative.Payment getNthPayment(int)>(i16);

        $r14 = (com.opengamma.analytics.financial.interestrate.payments.derivative.CouponFixed) $r13;

        $d41 = virtualinvoke $r14.<com.opengamma.analytics.financial.interestrate.payments.derivative.CouponFixed: double getAmount()>();

        $d42 = (double) i16;

        $d43 = staticinvoke <java.lang.Math: double pow(double,double)>(d59, $d42);

        $d44 = $d41 / $d43;

        d61 = d61 + $d44;

        i16 = i16 + 1;

        goto label5;

     label6:
        $i3 = i0 + 1;

        $d3 = (double) $i3;

        $d4 = staticinvoke <java.lang.Math: double pow(double,double)>(d59, $d3);

        $d5 = d1 / $d4;

        $i4 = i0 - 1;

        $d6 = (double) $i4;

        $d7 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity: double getFactorToNextCoupon()>();

        $d8 = $d6 + $d7;

        $d9 = $d5 * $d8;

        $d10 = (double) i0;

        $d11 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity: double getFactorToNextCoupon()>();

        $d12 = $d10 + $d11;

        $d13 = $d9 * $d12;

        $i5 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity: int getCouponPerYear()>();

        $i6 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity: int getCouponPerYear()>();

        $i7 = $i5 * $i6;

        $d14 = (double) $i7;

        $d15 = $d13 / $d14;

        d62 = d60 + $d15;

        $i8 = i0 - 1;

        $d16 = (double) $i8;

        $d17 = staticinvoke <java.lang.Math: double pow(double,double)>(d59, $d16);

        $d18 = d1 / $d17;

        d63 = d61 + $d18;

        $d19 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity: double getFactorToNextCoupon()>();

        $d20 = neg $d19;

        $d21 = staticinvoke <java.lang.Math: double pow(double,double)>(d59, $d20);

        d64 = d63 * $d21;

        $d22 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity: double getFactorToNextCoupon()>();

        $d23 = neg $d22;

        $d24 = staticinvoke <java.lang.Math: double pow(double,double)>(d59, $d23);

        $d25 = d62 * $d24;

        d2 = $d25 / d64;

        return d2;

     label7:
        $r18 = new java.lang.UnsupportedOperationException;

        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("The convention ");

        $r21 = interfaceinvoke r2.<com.opengamma.financial.convention.yield.YieldConvention: java.lang.String getName()>();

        $r22 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r21);

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is not supported.");

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r18.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>($r24);

        throw $r18;
    }

    public double convexityFromCurves(com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity, com.opengamma.analytics.financial.interestrate.YieldCurveBundle)
    {
        com.opengamma.analytics.financial.interestrate.bond.method.BondSecurityDiscountingMethod r0;
        com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity r1;
        com.opengamma.analytics.financial.interestrate.YieldCurveBundle r2;
        double d0, $d1;

        r0 := @this: com.opengamma.analytics.financial.interestrate.bond.method.BondSecurityDiscountingMethod;

        r1 := @parameter0: com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity;

        r2 := @parameter1: com.opengamma.analytics.financial.interestrate.YieldCurveBundle;

        d0 = virtualinvoke r0.<com.opengamma.analytics.financial.interestrate.bond.method.BondSecurityDiscountingMethod: double yieldFromCurves(com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity,com.opengamma.analytics.financial.interestrate.YieldCurveBundle)>(r1, r2);

        $d1 = virtualinvoke r0.<com.opengamma.analytics.financial.interestrate.bond.method.BondSecurityDiscountingMethod: double convexityFromYield(com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity,double)>(r1, d0);

        return $d1;
    }

    public double convexityFromDirtyPrice(com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity, double)
    {
        com.opengamma.analytics.financial.interestrate.bond.method.BondSecurityDiscountingMethod r0;
        com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity r1;
        double d0, d1, $d2;

        r0 := @this: com.opengamma.analytics.financial.interestrate.bond.method.BondSecurityDiscountingMethod;

        r1 := @parameter0: com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity;

        d0 := @parameter1: double;

        d1 = virtualinvoke r0.<com.opengamma.analytics.financial.interestrate.bond.method.BondSecurityDiscountingMethod: double yieldFromDirtyPrice(com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity,double)>(r1, d0);

        $d2 = virtualinvoke r0.<com.opengamma.analytics.financial.interestrate.bond.method.BondSecurityDiscountingMethod: double convexityFromYield(com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity,double)>(r1, d1);

        return $d2;
    }

    public double convexityFromCleanPrice(com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity, double)
    {
        com.opengamma.analytics.financial.interestrate.bond.method.BondSecurityDiscountingMethod r0;
        com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity r1;
        double d0, d1, $d2;

        r0 := @this: com.opengamma.analytics.financial.interestrate.bond.method.BondSecurityDiscountingMethod;

        r1 := @parameter0: com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity;

        d0 := @parameter1: double;

        d1 = virtualinvoke r0.<com.opengamma.analytics.financial.interestrate.bond.method.BondSecurityDiscountingMethod: double yieldFromCleanPrice(com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity,double)>(r1, d0);

        $d2 = virtualinvoke r0.<com.opengamma.analytics.financial.interestrate.bond.method.BondSecurityDiscountingMethod: double convexityFromYield(com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity,double)>(r1, d1);

        return $d2;
    }

    public double zSpreadFromCurvesAndPV(com.opengamma.analytics.financial.interestrate.bond.definition.BondSecurity, com.opengamma.analytics.financial.interestrate.YieldCurveBundle, double)
    {
        com.opengamma.analytics.financial.interestrate.bond.method.BondSecurityDiscountingMethod r0;
        com.opengamma.analytics.financial.interestrate.bond.definition.BondSecurity r1;
        com.opengamma.analytics.financial.interestrate.YieldCurveBundle r2;
        double d0, $d1, $d2, $d3;
        double[] r4;
        com.opengamma.analytics.financial.interestrate.bond.method.BondSecurityDiscountingMethod$2 $r7;
        com.opengamma.analytics.math.rootfinding.BracketRoot $r8;
        com.opengamma.analytics.math.rootfinding.RealSingleRootFinder $r9;
        java.lang.Double $r10, $r11, $r12;

        r0 := @this: com.opengamma.analytics.financial.interestrate.bond.method.BondSecurityDiscountingMethod;

        r1 := @parameter0: com.opengamma.analytics.financial.interestrate.bond.definition.BondSecurity;

        r2 := @parameter1: com.opengamma.analytics.financial.interestrate.YieldCurveBundle;

        d0 := @parameter2: double;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "bond");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, "curves");

        $r7 = new com.opengamma.analytics.financial.interestrate.bond.method.BondSecurityDiscountingMethod$2;

        specialinvoke $r7.<com.opengamma.analytics.financial.interestrate.bond.method.BondSecurityDiscountingMethod$2: void <init>(com.opengamma.analytics.financial.interestrate.bond.method.BondSecurityDiscountingMethod,com.opengamma.analytics.financial.interestrate.bond.definition.BondSecurity,com.opengamma.analytics.financial.interestrate.YieldCurveBundle,double)>(r0, r1, r2, d0);

        $r8 = <com.opengamma.analytics.financial.interestrate.bond.method.BondSecurityDiscountingMethod: com.opengamma.analytics.math.rootfinding.BracketRoot ROOT_BRACKETER>;

        r4 = virtualinvoke $r8.<com.opengamma.analytics.math.rootfinding.BracketRoot: double[] getBracketedPoints(com.opengamma.analytics.math.function.Function1D,double,double)>($r7, -0.01, 0.01);

        $r9 = <com.opengamma.analytics.financial.interestrate.bond.method.BondSecurityDiscountingMethod: com.opengamma.analytics.math.rootfinding.RealSingleRootFinder ROOT_FINDER>;

        $d1 = r4[0];

        $r10 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d1);

        $d2 = r4[1];

        $r11 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d2);

        $r12 = virtualinvoke $r9.<com.opengamma.analytics.math.rootfinding.RealSingleRootFinder: java.lang.Double getRoot(com.opengamma.analytics.math.function.Function1D,java.lang.Double,java.lang.Double)>($r7, $r10, $r11);

        $d3 = virtualinvoke $r12.<java.lang.Double: double doubleValue()>();

        return $d3;
    }

    public double presentValueZSpreadSensitivityFromCurvesAndPV(com.opengamma.analytics.financial.interestrate.bond.definition.BondSecurity, com.opengamma.analytics.financial.interestrate.YieldCurveBundle, double)
    {
        com.opengamma.analytics.financial.interestrate.bond.method.BondSecurityDiscountingMethod r0;
        com.opengamma.analytics.financial.interestrate.bond.definition.BondSecurity r1;
        com.opengamma.analytics.financial.interestrate.YieldCurveBundle r2;
        double d0, d1, $d2;

        r0 := @this: com.opengamma.analytics.financial.interestrate.bond.method.BondSecurityDiscountingMethod;

        r1 := @parameter0: com.opengamma.analytics.financial.interestrate.bond.definition.BondSecurity;

        r2 := @parameter1: com.opengamma.analytics.financial.interestrate.YieldCurveBundle;

        d0 := @parameter2: double;

        d1 = virtualinvoke r0.<com.opengamma.analytics.financial.interestrate.bond.method.BondSecurityDiscountingMethod: double zSpreadFromCurvesAndPV(com.opengamma.analytics.financial.interestrate.bond.definition.BondSecurity,com.opengamma.analytics.financial.interestrate.YieldCurveBundle,double)>(r1, r2, d0);

        $d2 = virtualinvoke r0.<com.opengamma.analytics.financial.interestrate.bond.method.BondSecurityDiscountingMethod: double presentValueZSpreadSensitivity(com.opengamma.analytics.financial.interestrate.bond.definition.BondSecurity,com.opengamma.analytics.financial.interestrate.YieldCurveBundle,double)>(r1, r2, d1);

        return $d2;
    }

    public double zSpreadFromCurvesAndClean(com.opengamma.analytics.financial.interestrate.bond.definition.BondSecurity, com.opengamma.analytics.financial.interestrate.YieldCurveBundle, double)
    {
        com.opengamma.analytics.financial.interestrate.bond.method.BondSecurityDiscountingMethod r0;
        com.opengamma.analytics.financial.interestrate.bond.definition.BondSecurity r1;
        com.opengamma.analytics.financial.interestrate.YieldCurveBundle r2;
        double d0, $d1, $d2;

        r0 := @this: com.opengamma.analytics.financial.interestrate.bond.method.BondSecurityDiscountingMethod;

        r1 := @parameter0: com.opengamma.analytics.financial.interestrate.bond.definition.BondSecurity;

        r2 := @parameter1: com.opengamma.analytics.financial.interestrate.YieldCurveBundle;

        d0 := @parameter2: double;

        $d1 = virtualinvoke r0.<com.opengamma.analytics.financial.interestrate.bond.method.BondSecurityDiscountingMethod: double presentValueFromCleanPrice(com.opengamma.analytics.financial.interestrate.bond.definition.BondSecurity,com.opengamma.analytics.financial.interestrate.YieldCurveBundle,double)>(r1, r2, d0);

        $d2 = virtualinvoke r0.<com.opengamma.analytics.financial.interestrate.bond.method.BondSecurityDiscountingMethod: double zSpreadFromCurvesAndPV(com.opengamma.analytics.financial.interestrate.bond.definition.BondSecurity,com.opengamma.analytics.financial.interestrate.YieldCurveBundle,double)>(r1, r2, $d1);

        return $d2;
    }

    public double presentValueZSpreadSensitivityFromCurvesAndClean(com.opengamma.analytics.financial.interestrate.bond.definition.BondSecurity, com.opengamma.analytics.financial.interestrate.YieldCurveBundle, double)
    {
        com.opengamma.analytics.financial.interestrate.bond.method.BondSecurityDiscountingMethod r0;
        com.opengamma.analytics.financial.interestrate.bond.definition.BondSecurity r1;
        com.opengamma.analytics.financial.interestrate.YieldCurveBundle r2;
        double d0, $d1, $d2;

        r0 := @this: com.opengamma.analytics.financial.interestrate.bond.method.BondSecurityDiscountingMethod;

        r1 := @parameter0: com.opengamma.analytics.financial.interestrate.bond.definition.BondSecurity;

        r2 := @parameter1: com.opengamma.analytics.financial.interestrate.YieldCurveBundle;

        d0 := @parameter2: double;

        $d1 = virtualinvoke r0.<com.opengamma.analytics.financial.interestrate.bond.method.BondSecurityDiscountingMethod: double presentValueFromCleanPrice(com.opengamma.analytics.financial.interestrate.bond.definition.BondSecurity,com.opengamma.analytics.financial.interestrate.YieldCurveBundle,double)>(r1, r2, d0);

        $d2 = virtualinvoke r0.<com.opengamma.analytics.financial.interestrate.bond.method.BondSecurityDiscountingMethod: double presentValueZSpreadSensitivityFromCurvesAndPV(com.opengamma.analytics.financial.interestrate.bond.definition.BondSecurity,com.opengamma.analytics.financial.interestrate.YieldCurveBundle,double)>(r1, r2, $d1);

        return $d2;
    }

    public com.opengamma.analytics.financial.interestrate.InterestRateCurveSensitivity presentValueCurveSensitivity(com.opengamma.analytics.financial.interestrate.bond.definition.BondSecurity, com.opengamma.analytics.financial.interestrate.YieldCurveBundle)
    {
        com.opengamma.analytics.financial.interestrate.bond.method.BondSecurityDiscountingMethod r0;
        com.opengamma.analytics.financial.interestrate.bond.definition.BondSecurity r1;
        com.opengamma.analytics.financial.interestrate.YieldCurveBundle r2;
        com.opengamma.analytics.financial.interestrate.InterestRateCurveSensitivity $r5, $r10, $r15;
        com.opengamma.analytics.financial.interestrate.annuity.derivative.Annuity $r6, $r11;
        com.opengamma.analytics.financial.interestrate.PresentValueCurveSensitivityCalculator $r7, $r12;
        java.lang.Object $r8, $r13;
        java.util.Map $r9, $r14;

        r0 := @this: com.opengamma.analytics.financial.interestrate.bond.method.BondSecurityDiscountingMethod;

        r1 := @parameter0: com.opengamma.analytics.financial.interestrate.bond.definition.BondSecurity;

        r2 := @parameter1: com.opengamma.analytics.financial.interestrate.YieldCurveBundle;

        $r5 = new com.opengamma.analytics.financial.interestrate.InterestRateCurveSensitivity;

        $r6 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.bond.definition.BondSecurity: com.opengamma.analytics.financial.interestrate.annuity.derivative.Annuity getNominal()>();

        $r7 = <com.opengamma.analytics.financial.interestrate.bond.method.BondSecurityDiscountingMethod: com.opengamma.analytics.financial.interestrate.PresentValueCurveSensitivityCalculator PVCSC>;

        $r8 = virtualinvoke $r6.<com.opengamma.analytics.financial.interestrate.annuity.derivative.Annuity: java.lang.Object accept(com.opengamma.analytics.financial.interestrate.InstrumentDerivativeVisitor,java.lang.Object)>($r7, r2);

        $r9 = (java.util.Map) $r8;

        specialinvoke $r5.<com.opengamma.analytics.financial.interestrate.InterestRateCurveSensitivity: void <init>(java.util.Map)>($r9);

        $r10 = new com.opengamma.analytics.financial.interestrate.InterestRateCurveSensitivity;

        $r11 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.bond.definition.BondSecurity: com.opengamma.analytics.financial.interestrate.annuity.derivative.Annuity getCoupon()>();

        $r12 = <com.opengamma.analytics.financial.interestrate.bond.method.BondSecurityDiscountingMethod: com.opengamma.analytics.financial.interestrate.PresentValueCurveSensitivityCalculator PVCSC>;

        $r13 = virtualinvoke $r11.<com.opengamma.analytics.financial.interestrate.annuity.derivative.Annuity: java.lang.Object accept(com.opengamma.analytics.financial.interestrate.InstrumentDerivativeVisitor,java.lang.Object)>($r12, r2);

        $r14 = (java.util.Map) $r13;

        specialinvoke $r10.<com.opengamma.analytics.financial.interestrate.InterestRateCurveSensitivity: void <init>(java.util.Map)>($r14);

        $r15 = virtualinvoke $r5.<com.opengamma.analytics.financial.interestrate.InterestRateCurveSensitivity: com.opengamma.analytics.financial.interestrate.InterestRateCurveSensitivity plus(com.opengamma.analytics.financial.interestrate.InterestRateCurveSensitivity)>($r10);

        return $r15;
    }

    public com.opengamma.analytics.util.amount.StringAmount presentValueParallelCurveSensitivity(com.opengamma.analytics.financial.interestrate.bond.definition.BondSecurity, com.opengamma.analytics.financial.interestrate.YieldCurveBundle)
    {
        com.opengamma.analytics.financial.interestrate.bond.method.BondSecurityDiscountingMethod r0;
        com.opengamma.analytics.financial.interestrate.bond.definition.BondSecurity r1;
        com.opengamma.analytics.financial.interestrate.YieldCurveBundle r2;
        com.opengamma.analytics.util.amount.StringAmount r3, r4, $r11;
        com.opengamma.analytics.financial.interestrate.annuity.derivative.Annuity $r5, $r8;
        com.opengamma.analytics.financial.interestrate.PresentValueParallelCurveSensitivityCalculator $r6, $r9;
        java.lang.Object $r7, $r10;

        r0 := @this: com.opengamma.analytics.financial.interestrate.bond.method.BondSecurityDiscountingMethod;

        r1 := @parameter0: com.opengamma.analytics.financial.interestrate.bond.definition.BondSecurity;

        r2 := @parameter1: com.opengamma.analytics.financial.interestrate.YieldCurveBundle;

        $r5 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.bond.definition.BondSecurity: com.opengamma.analytics.financial.interestrate.annuity.derivative.Annuity getNominal()>();

        $r6 = <com.opengamma.analytics.financial.interestrate.bond.method.BondSecurityDiscountingMethod: com.opengamma.analytics.financial.interestrate.PresentValueParallelCurveSensitivityCalculator PVPCSC>;

        $r7 = virtualinvoke $r5.<com.opengamma.analytics.financial.interestrate.annuity.derivative.Annuity: java.lang.Object accept(com.opengamma.analytics.financial.interestrate.InstrumentDerivativeVisitor,java.lang.Object)>($r6, r2);

        r3 = (com.opengamma.analytics.util.amount.StringAmount) $r7;

        $r8 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.bond.definition.BondSecurity: com.opengamma.analytics.financial.interestrate.annuity.derivative.Annuity getCoupon()>();

        $r9 = <com.opengamma.analytics.financial.interestrate.bond.method.BondSecurityDiscountingMethod: com.opengamma.analytics.financial.interestrate.PresentValueParallelCurveSensitivityCalculator PVPCSC>;

        $r10 = virtualinvoke $r8.<com.opengamma.analytics.financial.interestrate.annuity.derivative.Annuity: java.lang.Object accept(com.opengamma.analytics.financial.interestrate.InstrumentDerivativeVisitor,java.lang.Object)>($r9, r2);

        r4 = (com.opengamma.analytics.util.amount.StringAmount) $r10;

        $r11 = staticinvoke <com.opengamma.analytics.util.amount.StringAmount: com.opengamma.analytics.util.amount.StringAmount plus(com.opengamma.analytics.util.amount.StringAmount,com.opengamma.analytics.util.amount.StringAmount)>(r3, r4);

        return $r11;
    }

    public double accruedInterestFromCurves(com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity, com.opengamma.analytics.financial.interestrate.YieldCurveBundle)
    {
        com.opengamma.analytics.financial.interestrate.bond.method.BondSecurityDiscountingMethod r0;
        com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity r1;
        com.opengamma.analytics.financial.interestrate.YieldCurveBundle r2;
        double $d0, $d1, $d2;

        r0 := @this: com.opengamma.analytics.financial.interestrate.bond.method.BondSecurityDiscountingMethod;

        r1 := @parameter0: com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity;

        r2 := @parameter1: com.opengamma.analytics.financial.interestrate.YieldCurveBundle;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "bond");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, "curves");

        $d0 = virtualinvoke r0.<com.opengamma.analytics.financial.interestrate.bond.method.BondSecurityDiscountingMethod: double dirtyPriceFromCurves(com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity,com.opengamma.analytics.financial.interestrate.YieldCurveBundle)>(r1, r2);

        $d1 = virtualinvoke r0.<com.opengamma.analytics.financial.interestrate.bond.method.BondSecurityDiscountingMethod: double cleanPriceFromCurves(com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity,com.opengamma.analytics.financial.interestrate.YieldCurveBundle)>(r1, r2);

        $d2 = $d0 - $d1;

        return $d2;
    }

    static void <clinit>()
    {
        com.opengamma.analytics.financial.interestrate.bond.method.BondSecurityDiscountingMethod $r0;
        com.opengamma.analytics.financial.interestrate.PresentValueCalculator $r1;
        com.opengamma.analytics.financial.interestrate.PresentValueCurveSensitivityCalculator $r2;
        com.opengamma.analytics.financial.interestrate.PresentValueParallelCurveSensitivityCalculator $r3;
        com.opengamma.analytics.math.rootfinding.BracketRoot $r4, $r6;
        com.opengamma.analytics.math.rootfinding.BrentSingleRootFinder $r5;

        $r0 = new com.opengamma.analytics.financial.interestrate.bond.method.BondSecurityDiscountingMethod;

        specialinvoke $r0.<com.opengamma.analytics.financial.interestrate.bond.method.BondSecurityDiscountingMethod: void <init>()>();

        <com.opengamma.analytics.financial.interestrate.bond.method.BondSecurityDiscountingMethod: com.opengamma.analytics.financial.interestrate.bond.method.BondSecurityDiscountingMethod INSTANCE> = $r0;

        $r1 = staticinvoke <com.opengamma.analytics.financial.interestrate.PresentValueCalculator: com.opengamma.analytics.financial.interestrate.PresentValueCalculator getInstance()>();

        <com.opengamma.analytics.financial.interestrate.bond.method.BondSecurityDiscountingMethod: com.opengamma.analytics.financial.interestrate.PresentValueCalculator PVC> = $r1;

        $r2 = staticinvoke <com.opengamma.analytics.financial.interestrate.PresentValueCurveSensitivityCalculator: com.opengamma.analytics.financial.interestrate.PresentValueCurveSensitivityCalculator getInstance()>();

        <com.opengamma.analytics.financial.interestrate.bond.method.BondSecurityDiscountingMethod: com.opengamma.analytics.financial.interestrate.PresentValueCurveSensitivityCalculator PVCSC> = $r2;

        $r3 = staticinvoke <com.opengamma.analytics.financial.interestrate.PresentValueParallelCurveSensitivityCalculator: com.opengamma.analytics.financial.interestrate.PresentValueParallelCurveSensitivityCalculator getInstance()>();

        <com.opengamma.analytics.financial.interestrate.bond.method.BondSecurityDiscountingMethod: com.opengamma.analytics.financial.interestrate.PresentValueParallelCurveSensitivityCalculator PVPCSC> = $r3;

        $r4 = new com.opengamma.analytics.math.rootfinding.BracketRoot;

        specialinvoke $r4.<com.opengamma.analytics.math.rootfinding.BracketRoot: void <init>()>();

        <com.opengamma.analytics.financial.interestrate.bond.method.BondSecurityDiscountingMethod: com.opengamma.analytics.math.rootfinding.BracketRoot BRACKETER> = $r4;

        $r5 = new com.opengamma.analytics.math.rootfinding.BrentSingleRootFinder;

        specialinvoke $r5.<com.opengamma.analytics.math.rootfinding.BrentSingleRootFinder: void <init>()>();

        <com.opengamma.analytics.financial.interestrate.bond.method.BondSecurityDiscountingMethod: com.opengamma.analytics.math.rootfinding.RealSingleRootFinder ROOT_FINDER> = $r5;

        $r6 = new com.opengamma.analytics.math.rootfinding.BracketRoot;

        specialinvoke $r6.<com.opengamma.analytics.math.rootfinding.BracketRoot: void <init>()>();

        <com.opengamma.analytics.financial.interestrate.bond.method.BondSecurityDiscountingMethod: com.opengamma.analytics.math.rootfinding.BracketRoot ROOT_BRACKETER> = $r6;

        return;
    }
}
