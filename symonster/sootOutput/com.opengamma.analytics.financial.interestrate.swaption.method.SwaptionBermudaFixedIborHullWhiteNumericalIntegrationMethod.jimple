public final class com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionBermudaFixedIborHullWhiteNumericalIntegrationMethod extends java.lang.Object implements com.opengamma.analytics.financial.interestrate.method.PricingMethod
{
    private static final com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionBermudaFixedIborHullWhiteNumericalIntegrationMethod INSTANCE;
    private static final int NB_POINT;
    private static final com.opengamma.analytics.financial.interestrate.CashFlowEquivalentCalculator CFEC;
    private static final com.opengamma.analytics.financial.model.interestrate.HullWhiteOneFactorPiecewiseConstantInterestRateModel MODEL;
    private static final com.opengamma.analytics.math.statistics.distribution.ProbabilityDistribution NORMAL;

    public static com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionBermudaFixedIborHullWhiteNumericalIntegrationMethod getInstance()
    {
        com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionBermudaFixedIborHullWhiteNumericalIntegrationMethod $r0;

        $r0 = <com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionBermudaFixedIborHullWhiteNumericalIntegrationMethod: com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionBermudaFixedIborHullWhiteNumericalIntegrationMethod INSTANCE>;

        return $r0;
    }

    private void <init>()
    {
        com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionBermudaFixedIborHullWhiteNumericalIntegrationMethod r0;

        r0 := @this: com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionBermudaFixedIborHullWhiteNumericalIntegrationMethod;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public com.opengamma.util.money.CurrencyAmount presentValue(com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionBermudaFixedIbor, com.opengamma.analytics.financial.model.interestrate.definition.HullWhiteOneFactorPiecewiseConstantDataBundle)
    {
        com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionBermudaFixedIborHullWhiteNumericalIntegrationMethod r0;
        com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionBermudaFixedIbor r1;
        com.opengamma.analytics.financial.model.interestrate.definition.HullWhiteOneFactorPiecewiseConstantDataBundle r2;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43, $i44, $i45, $i46, $i47, $i48, $i49, $i50, $i51, $i52, $i53, $i54, $i55, $i56, $i57, $i58, $i59, $i60, $i61, $i62, $i63, $i64, $i65, $i66, $i67, $i68, $i69, $i70, $i71, $i72, $i73, $i74, $i75, $i76, $i77, $i78, $i79, $i80, $i81, $i82, $i83, $i84, $i85, $i86, $i87, $i88, $i89, $i90, $i91, $i92, $i93, $i94, $i95, $i96, $i97, $i98, $i99, $i100, $i101, $i102, $i103, $i104, $i105, $i106, $i107, $i108, $i109, $i110, $i111, $i112, $i113, $i114, $i115, $i116, $i117, $i118, $i119, $i120, i121, i122, i123, i124, i126, i127, i128, i129, i130, i131, i132, i133, i134, i135, i136, i137, i138, i139, i140, i141, i142, i143, i144, i145, i146, $i147, $i148, $i149, $i150, i152, i153, i154, i155, i156, i157, i158, i159, i160, i161, i162;
        com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve r3;
        double[] r4, r9, r12, r13, r14, r20, r23, r24, r25, r26, r27, r28, $r31, $r36, $r37, $r38, $r45, $r50, $r52, $r53, $r54, $r55, $r58, $r59, $r60, $r61, $r62, $r63, $r64, $r65, $r66, $r67, $r68, $r69, $r70, $r71, $r72, $r73, $r74, $r75, $r76, $r77, $r78, $r79, $r80, $r81, $r84, $r85, $r86, $r87, $r88, $r89, $r90, $r91, $r92, $r93, $r94, $r95, $r96, $r97, $r98, $r99, $r100, $r101, $r102, $r103, $r104, $r105, $r106, $r107, $r108, $r109, $r110, $r111, $r112, $r113, $r114, $r115, $r116, $r117, $r118, $r119, $r120, $r121, $r124, $r125, $r126, $r127, $r128, $r129, $r130, $r131, $r132, $r133, $r134, $r135, $r136, $r137, $r138, $r139, $r140, $r141, $r142, $r143, $r144, $r145, $r146, $r147, $r148, $r149, $r150, $r151, $r152, $r153, $r155, $r158, $r159, $r160, $r161, $r162, $r163, $r164, $r165, $r166, $r167, $r168, $r170, $r174, $r175, $r178, $r184, $r185, $r186, $r187, $r189, $r192, $r193, $r194, $r196, $r198, $r200, $r204, $r206, $r209, $r211, $r219, $r221, $r222, r232, r233, r234, r238, r239, r240;
        com.opengamma.analytics.financial.interestrate.annuity.derivative.AnnuityPaymentFixed[] r5;
        double[][][] r6, r7;
        double[][] r8, r10, r11, r15, r16, r17, r18, r19, r22, $r169, $r173, $r199, $r202, $r203, $r205, $r207, $r208, $r210, $r217, $r218, $r220, r231, r235, r236, r237, r241, r242, r243;
        double d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, d10, d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21, $d22, $d23, $d24, $d25, $d26, $d27, $d28, $d29, $d30, $d31, $d32, $d33, $d34, $d35, $d36, $d37, $d38, $d39, $d40, $d41, $d42, $d43, $d44, $d45, $d46, $d47, $d48, $d49, $d50, $d51, $d52, $d53, $d54, $d55, $d56, $d57, $d58, $d59, $d60, $d61, $d62, $d63, $d64, $d65, $d66, $d67, $d68, $d69, $d70, $d71, $d72, $d73, $d74, $d75, $d76, $d77, $d78, $d79, $d80, $d81, $d82, $d83, $d84, $d85, $d86, $d87, $d88, $d89, $d90, $d91, $d92, $d93, $d94, $d95, $d96, $d97, $d98, $d99, $d100, $d101, $d102, $d103, $d104, $d105, $d106, $d107, $d108, $d109, $d110, $d111, $d112, $d113, $d114, $d115, $d116, $d117, $d118, $d119, $d120, $d121, $d122, $d123, $d124, $d125, $d126, $d127, $d128, $d129, $d130, $d131, $d132, $d133, $d134, $d135, $d136, $d137, $d138, $d139, $d140, $d141, $d142, $d143, $d144, $d145, $d146, $d147, $d148, $d149, $d150, $d151, $d152, $d153, $d154, $d155, $d156, $d157, $d158, $d159, $d160, $d161, $d162, $d163, $d164, $d165, $d166, $d167, $d168, $d169, $d170, $d171, $d172, $d173, $d174, $d175, $d176, $d177, $d178, $d179, $d180, $d181, $d182, $d183, $d184, $d185, $d186, $d187, $d188, $d189, $d190, $d191, $d192, $d193, $d194, $d195, $d196, $d197, $d198, $d199, $d200, $d201, $d202, $d203, $d204, $d205, $d206, $d207, $d208, $d209, $d210, $d211, $d212, $d213, $d214, $d215, $d216, $d217, $d218, $d219, $d220, $d221, $d222, $d223, $d224, $d225, $d226, $d227, $d228, $d229, $d230, $d231, $d232, $d233, $d234, $d235, $d236, $d237, $d238, $d239, $d240, $d241, $d242, $d243, $d244, $d245, $d246, $d247, $d248, $d249, $d250, $d251, $d252, $d253, $d254, $d255, $d256, $d257, $d258, $d259, $d260, $d261, $d262, $d263, $d264, $d265, $d266, $d267, $d268, $d269, $d270, $d271, $d272, d273, d274, d275, d276, $d277, $d278, d279, $d280;
        int[] r21, r228, r229, r230;
        com.opengamma.analytics.financial.interestrate.swap.derivative.SwapFixedCoupon[] $r32, $r46, $r223;
        com.opengamma.analytics.financial.interestrate.swap.derivative.SwapFixedCoupon $r33, $r47, $r225;
        com.opengamma.analytics.financial.interestrate.annuity.derivative.Annuity $r34;
        java.lang.String $r35;
        com.opengamma.analytics.financial.model.interestrate.HullWhiteOneFactorPiecewiseConstantInterestRateModel $r39, $r182, $r212;
        com.opengamma.analytics.math.statistics.distribution.ProbabilityDistribution $r40, $r56, $r82, $r122, $r171;
        java.lang.Double $r41, $r57, $r83, $r123, $r172;
        com.opengamma.analytics.financial.interestrate.annuity.derivative.AnnuityPaymentFixed $r42, $r154, $r179, $r188, $r201, $r214, $r227;
        com.opengamma.analytics.financial.interestrate.payments.derivative.Payment $r43, $r156, $r180, $r190, $r215;
        com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed $r44, $r157, $r181, $r191, $r216;
        com.opengamma.analytics.financial.interestrate.annuity.derivative.AnnuityCouponFixed $r48;
        com.opengamma.util.money.Currency $r49;
        boolean $z0, $z1;
        com.opengamma.util.money.CurrencyAmount $r51;
        byte $b28, $b151;
        com.opengamma.analytics.financial.model.interestrate.definition.HullWhiteOneFactorPiecewiseConstantParameters $r176, $r177, $r183, $r195, $r197, $r213;
        com.opengamma.analytics.financial.interestrate.CashFlowEquivalentCalculator $r224;
        java.lang.Object $r226;

        r0 := @this: com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionBermudaFixedIborHullWhiteNumericalIntegrationMethod;

        r1 := @parameter0: com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionBermudaFixedIbor;

        r2 := @parameter1: com.opengamma.analytics.financial.model.interestrate.definition.HullWhiteOneFactorPiecewiseConstantDataBundle;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "swaption");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, "Hull-White data");

        $r31 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionBermudaFixedIbor: double[] getExpiryTime()>();

        i0 = lengthof $r31;

        if i0 <= 1 goto label01;

        $z1 = 1;

        goto label02;

     label01:
        $z1 = 0;

     label02:
        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z1, "At least two expiry dates required for this method");

        $r32 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionBermudaFixedIbor: com.opengamma.analytics.financial.interestrate.swap.derivative.SwapFixedCoupon[] getUnderlyingSwap()>();

        $r33 = $r32[0];

        $r34 = virtualinvoke $r33.<com.opengamma.analytics.financial.interestrate.swap.derivative.SwapFixedCoupon: com.opengamma.analytics.financial.interestrate.annuity.derivative.Annuity getFirstLeg()>();

        $r35 = virtualinvoke $r34.<com.opengamma.analytics.financial.interestrate.annuity.derivative.Annuity: java.lang.String getDiscountCurve()>();

        r3 = virtualinvoke r2.<com.opengamma.analytics.financial.model.interestrate.definition.HullWhiteOneFactorPiecewiseConstantDataBundle: com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve getCurve(java.lang.String)>($r35);

        $i2 = i0 + 1;

        r4 = newarray (double)[$i2];

        r4[0] = 0.0;

        $r36 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionBermudaFixedIbor: double[] getExpiryTime()>();

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r36, 0, r4, 1, i0);

        r5 = newarray (com.opengamma.analytics.financial.interestrate.annuity.derivative.AnnuityPaymentFixed)[i0];

        i121 = 0;

     label03:
        if i121 >= i0 goto label04;

        $r223 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionBermudaFixedIbor: com.opengamma.analytics.financial.interestrate.swap.derivative.SwapFixedCoupon[] getUnderlyingSwap()>();

        $r225 = $r223[i121];

        $r224 = <com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionBermudaFixedIborHullWhiteNumericalIntegrationMethod: com.opengamma.analytics.financial.interestrate.CashFlowEquivalentCalculator CFEC>;

        $r226 = virtualinvoke $r225.<com.opengamma.analytics.financial.interestrate.swap.derivative.SwapFixedCoupon: java.lang.Object accept(com.opengamma.analytics.financial.interestrate.InstrumentDerivativeVisitor,java.lang.Object)>($r224, r2);

        $r227 = (com.opengamma.analytics.financial.interestrate.annuity.derivative.AnnuityPaymentFixed) $r226;

        r5[i121] = $r227;

        i121 = i121 + 1;

        goto label03;

     label04:
        r228 = newarray (int)[i0];

        r6 = newarray (double[][])[i0];

        r7 = newarray (double[][])[i0];

        i122 = 0;

     label05:
        if i122 >= i0 goto label10;

        $r201 = r5[i122];

        $i113 = virtualinvoke $r201.<com.opengamma.analytics.financial.interestrate.annuity.derivative.AnnuityPaymentFixed: int getNumberOfPayments()>();

        r228[i122] = $i113;

        $i114 = i122 + 1;

        $r202 = newarray (double[])[$i114];

        r6[i122] = $r202;

        $i115 = i122 + 1;

        $r203 = newarray (double[])[$i115];

        r7[i122] = $r203;

        i123 = 0;

     label06:
        if i123 > i122 goto label09;

        $r205 = r6[i122];

        $i116 = r228[i122];

        $r204 = newarray (double)[$i116];

        $r205[i123] = $r204;

        $r207 = r7[i122];

        $i117 = r228[i122];

        $r206 = newarray (double)[$i117];

        $r207[i123] = $r206;

        i124 = 0;

     label07:
        $r208 = r6[i122];

        $r209 = $r208[i123];

        $i118 = lengthof $r209;

        if i124 >= $i118 goto label08;

        $r210 = r6[i122];

        $r211 = $r210[i123];

        $r212 = <com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionBermudaFixedIborHullWhiteNumericalIntegrationMethod: com.opengamma.analytics.financial.model.interestrate.HullWhiteOneFactorPiecewiseConstantInterestRateModel MODEL>;

        $r213 = virtualinvoke r2.<com.opengamma.analytics.financial.model.interestrate.definition.HullWhiteOneFactorPiecewiseConstantDataBundle: com.opengamma.analytics.financial.model.interestrate.definition.HullWhiteOneFactorPiecewiseConstantParameters getHullWhiteParameter()>();

        $d265 = r4[i123];

        $i119 = i123 + 1;

        $d266 = r4[$i119];

        $i120 = i123 + 1;

        $d267 = r4[$i120];

        $r214 = r5[i122];

        $r215 = virtualinvoke $r214.<com.opengamma.analytics.financial.interestrate.annuity.derivative.AnnuityPaymentFixed: com.opengamma.analytics.financial.interestrate.payments.derivative.Payment getNthPayment(int)>(i124);

        $r216 = (com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed) $r215;

        $d268 = virtualinvoke $r216.<com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed: double getPaymentTime()>();

        $d269 = virtualinvoke $r212.<com.opengamma.analytics.financial.model.interestrate.HullWhiteOneFactorPiecewiseConstantInterestRateModel: double alpha(com.opengamma.analytics.financial.model.interestrate.definition.HullWhiteOneFactorPiecewiseConstantParameters,double,double,double,double)>($r213, $d265, $d266, $d267, $d268);

        $r211[i124] = $d269;

        $r217 = r7[i122];

        $r222 = $r217[i123];

        $r218 = r6[i122];

        $r219 = $r218[i123];

        $d271 = $r219[i124];

        $r220 = r6[i122];

        $r221 = $r220[i123];

        $d270 = $r221[i124];

        $d272 = $d271 * $d270;

        $r222[i124] = $d272;

        i124 = i124 + 1;

        goto label07;

     label08:
        i123 = i123 + 1;

        goto label06;

     label09:
        i122 = i122 + 1;

        goto label05;

     label10:
        $i3 = i0 - 1;

        r229 = newarray (int)[$i3];

        $i4 = i0 - 1;

        r230 = newarray (int)[$i4];

        i126 = 1;

     label11:
        $i5 = i0 - 1;

        if i126 >= $i5 goto label12;

        r229[i126] = 0;

        r230[i126] = 100;

        i126 = i126 + 1;

        goto label11;

     label12:
        r229[0] = 50;

        r230[0] = 50;

        r231 = newarray (double[])[i0];

        r8 = newarray (double[])[i0];

        r9 = newarray (double)[i0];

        r10 = newarray (double[])[i0];

        r11 = newarray (double[])[i0];

        i127 = 0;

     label13:
        if i127 >= i0 goto label18;

        $r182 = <com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionBermudaFixedIborHullWhiteNumericalIntegrationMethod: com.opengamma.analytics.financial.model.interestrate.HullWhiteOneFactorPiecewiseConstantInterestRateModel MODEL>;

        $r183 = virtualinvoke r2.<com.opengamma.analytics.financial.model.interestrate.definition.HullWhiteOneFactorPiecewiseConstantDataBundle: com.opengamma.analytics.financial.model.interestrate.definition.HullWhiteOneFactorPiecewiseConstantParameters getHullWhiteParameter()>();

        $d251 = r4[i127];

        $i107 = i127 + 1;

        $d250 = r4[$i107];

        $d252 = virtualinvoke $r182.<com.opengamma.analytics.financial.model.interestrate.HullWhiteOneFactorPiecewiseConstantInterestRateModel: double beta(com.opengamma.analytics.financial.model.interestrate.definition.HullWhiteOneFactorPiecewiseConstantParameters,double,double)>($r183, $d251, $d250);

        r9[i127] = $d252;

        $i108 = r228[i127];

        $r184 = newarray (double)[$i108];

        r231[i127] = $r184;

        $i109 = r228[i127];

        $r185 = newarray (double)[$i109];

        r8[i127] = $r185;

        $i110 = r228[i127];

        $r186 = newarray (double)[$i110];

        r10[i127] = $r186;

        $i111 = r228[i127];

        $r187 = newarray (double)[$i111];

        r11[i127] = $r187;

        i128 = 0;

     label14:
        $i112 = r228[i127];

        if i128 >= $i112 goto label17;

        $r189 = r231[i127];

        $r188 = r5[i127];

        $r190 = virtualinvoke $r188.<com.opengamma.analytics.financial.interestrate.annuity.derivative.AnnuityPaymentFixed: com.opengamma.analytics.financial.interestrate.payments.derivative.Payment getNthPayment(int)>(i128);

        $r191 = (com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed) $r190;

        $d253 = virtualinvoke $r191.<com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed: double getPaymentTime()>();

        $r189[i128] = $d253;

        $r193 = r8[i127];

        $r192 = r231[i127];

        $d254 = $r192[i128];

        $d255 = virtualinvoke r3.<com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve: double getDiscountFactor(double)>($d254);

        $r193[i128] = $d255;

        $r194 = r10[i127];

        $r195 = virtualinvoke r2.<com.opengamma.analytics.financial.model.interestrate.definition.HullWhiteOneFactorPiecewiseConstantDataBundle: com.opengamma.analytics.financial.model.interestrate.definition.HullWhiteOneFactorPiecewiseConstantParameters getHullWhiteParameter()>();

        $d256 = virtualinvoke $r195.<com.opengamma.analytics.financial.model.interestrate.definition.HullWhiteOneFactorPiecewiseConstantParameters: double getMeanReversion()>();

        $d258 = neg $d256;

        $r196 = r231[i127];

        $d257 = $r196[i128];

        $d259 = $d258 * $d257;

        $d260 = staticinvoke <java.lang.Math: double exp(double)>($d259);

        $d261 = 1.0 - $d260;

        $r197 = virtualinvoke r2.<com.opengamma.analytics.financial.model.interestrate.definition.HullWhiteOneFactorPiecewiseConstantDataBundle: com.opengamma.analytics.financial.model.interestrate.definition.HullWhiteOneFactorPiecewiseConstantParameters getHullWhiteParameter()>();

        $d262 = virtualinvoke $r197.<com.opengamma.analytics.financial.model.interestrate.definition.HullWhiteOneFactorPiecewiseConstantParameters: double getMeanReversion()>();

        $d263 = $d261 / $d262;

        $r194[i128] = $d263;

        d273 = 0.0;

        i129 = 0;

     label15:
        if i129 > i127 goto label16;

        $r199 = r7[i127];

        $r200 = $r199[i129];

        $d264 = $r200[i128];

        d273 = d273 + $d264;

        i129 = i129 + 1;

        goto label15;

     label16:
        $r198 = r11[i127];

        $r198[i128] = d273;

        i128 = i128 + 1;

        goto label14;

     label17:
        i127 = i127 + 1;

        goto label13;

     label18:
        $i6 = i0 - 1;

        $i7 = r228[$i6];

        r232 = newarray (double)[$i7];

        i130 = 0;

     label19:
        $i8 = i0 - 1;

        $i9 = r228[$i8];

        if i130 >= $i9 goto label20;

        $i105 = i0 - 1;

        $r178 = r8[$i105];

        $d247 = $r178[i130];

        $i106 = i0 - 1;

        $r179 = r5[$i106];

        $r180 = virtualinvoke $r179.<com.opengamma.analytics.financial.interestrate.annuity.derivative.AnnuityPaymentFixed: com.opengamma.analytics.financial.interestrate.payments.derivative.Payment getNthPayment(int)>(i130);

        $r181 = (com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed) $r180;

        $d248 = virtualinvoke $r181.<com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed: double getAmount()>();

        $d249 = $d247 * $d248;

        r232[i130] = $d249;

        i130 = i130 + 1;

        goto label19;

     label20:
        $r39 = <com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionBermudaFixedIborHullWhiteNumericalIntegrationMethod: com.opengamma.analytics.financial.model.interestrate.HullWhiteOneFactorPiecewiseConstantInterestRateModel MODEL>;

        $i10 = i0 - 1;

        $r38 = r11[$i10];

        $i11 = i0 - 1;

        $r37 = r10[$i11];

        d274 = virtualinvoke $r39.<com.opengamma.analytics.financial.model.interestrate.HullWhiteOneFactorPiecewiseConstantInterestRateModel: double lambda(double[],double[],double[])>(r232, $r38, $r37);

        r12 = newarray (double)[i0];

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r9, 0, r12, 0, i0);

        staticinvoke <java.util.Arrays: void sort(double[])>(r12);

        d0 = r12[0];

        $i12 = i0 - 1;

        d1 = r12[$i12];

        $d12 = 10.0 * d0;

        d2 = staticinvoke <java.lang.Math: double min(double,double)>($d12, d1);

        $r40 = <com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionBermudaFixedIborHullWhiteNumericalIntegrationMethod: com.opengamma.analytics.math.statistics.distribution.ProbabilityDistribution NORMAL>;

        $r41 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(1.0E-4);

        $d13 = interfaceinvoke $r40.<com.opengamma.analytics.math.statistics.distribution.ProbabilityDistribution: double getInverseCDF(java.lang.Object)>($r41);

        $d14 = -0.04 * $d13;

        d3 = $d14 * d2;

        r13 = newarray (double)[101];

        i131 = 0;

     label21:
        if i131 >= 101 goto label22;

        $d245 = -50.0 * d3;

        $d243 = (double) i131;

        $d244 = $d243 * d3;

        $d246 = $d245 + $d244;

        r13[i131] = $d246;

        i131 = i131 + 1;

        goto label21;

     label22:
        r233 = newarray (double)[201];

        i132 = 0;

     label23:
        if i132 >= 201 goto label24;

        $d241 = -100.0 * d3;

        $d239 = (double) i132;

        $d240 = $d239 * d3;

        $d242 = $d241 + $d240;

        r233[i132] = $d242;

        i132 = i132 + 1;

        goto label23;

     label24:
        r234 = newarray (double)[i0];

        i133 = 0;

     label25:
        if i133 >= i0 goto label26;

        $r176 = virtualinvoke r2.<com.opengamma.analytics.financial.model.interestrate.definition.HullWhiteOneFactorPiecewiseConstantDataBundle: com.opengamma.analytics.financial.model.interestrate.definition.HullWhiteOneFactorPiecewiseConstantParameters getHullWhiteParameter()>();

        $d231 = virtualinvoke $r176.<com.opengamma.analytics.financial.model.interestrate.definition.HullWhiteOneFactorPiecewiseConstantParameters: double getMeanReversion()>();

        $d233 = neg $d231;

        $i104 = i133 + 1;

        $d232 = r4[$i104];

        $d234 = $d233 * $d232;

        $d235 = staticinvoke <java.lang.Math: double exp(double)>($d234);

        $d236 = 1.0 - $d235;

        $r177 = virtualinvoke r2.<com.opengamma.analytics.financial.model.interestrate.definition.HullWhiteOneFactorPiecewiseConstantDataBundle: com.opengamma.analytics.financial.model.interestrate.definition.HullWhiteOneFactorPiecewiseConstantParameters getHullWhiteParameter()>();

        $d237 = virtualinvoke $r177.<com.opengamma.analytics.financial.model.interestrate.definition.HullWhiteOneFactorPiecewiseConstantParameters: double getMeanReversion()>();

        $d238 = $d236 / $d237;

        r234[i133] = $d238;

        i133 = i133 + 1;

        goto label25;

     label26:
        $i13 = i0 - 1;

        r235 = newmultiarray (double)[$i13][101];

        i134 = i0 - 2;

     label27:
        if i134 < 0 goto label30;

        i135 = 0;

     label28:
        if i135 >= 101 goto label29;

        $r175 = r235[i134];

        $d228 = r13[i135];

        $d227 = r234[i134];

        $d229 = $d228 * $d227;

        $d230 = staticinvoke <java.lang.Math: double exp(double)>($d229);

        $r175[i135] = $d230;

        i135 = i135 + 1;

        goto label28;

     label29:
        i134 = i134 + -1;

        goto label27;

     label30:
        r236 = newarray (double[])[i0];

        $i14 = i0 - 1;

        r237 = newarray (double[])[$i14];

        $i15 = i0 - 1;

        $r42 = r5[$i15];

        $r43 = virtualinvoke $r42.<com.opengamma.analytics.financial.interestrate.annuity.derivative.AnnuityPaymentFixed: com.opengamma.analytics.financial.interestrate.payments.derivative.Payment getNthPayment(int)>(0);

        $r44 = (com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed) $r43;

        $d15 = virtualinvoke $r44.<com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed: double getAmount()>();

        $d16 = staticinvoke <java.lang.Math: double signum(double)>($d15);

        d4 = neg $d16;

        r14 = newarray (double)[101];

        i136 = 0;

     label31:
        if i136 >= 101 goto label32;

        $d223 = r13[i136];

        $d225 = d274 - $d223;

        $i103 = i0 - 1;

        $d224 = r9[$i103];

        $d226 = $d225 / $d224;

        r14[i136] = $d226;

        i136 = i136 + 1;

        goto label31;

     label32:
        $i16 = i0 - 1;

        $i17 = r228[$i16];

        r238 = newarray (double)[$i17];

        i137 = 0;

     label33:
        $i18 = i0 - 1;

        $i19 = r228[$i18];

        if i137 >= $i19 goto label36;

        d275 = 0.0;

        i138 = 0;

     label34:
        $i101 = i0 - 2;

        if i138 > $i101 goto label35;

        $i102 = i0 - 1;

        $r173 = r7[$i102];

        $r174 = $r173[i138];

        $d222 = $r174[i137];

        d275 = d275 + $d222;

        i138 = i138 + 1;

        goto label34;

     label35:
        r238[i137] = d275;

        i137 = i137 + 1;

        goto label33;

     label36:
        $i20 = i0 - 1;

        $r45 = newarray (double)[201];

        r236[$i20] = $r45;

        i139 = 0;

     label37:
        $i21 = i0 - 1;

        $i22 = r228[$i21];

        if i139 >= $i22 goto label40;

        i140 = 0;

     label38:
        if i140 >= 101 goto label39;

        $i96 = i0 - 1;

        $r167 = r236[$i96];

        $i97 = 50 + i140;

        $d211 = $r167[$i97];

        $d212 = r232[i139];

        $d204 = r238[i139];

        $d205 = neg $d204;

        $d209 = $d205 / 2.0;

        $i98 = i0 - 1;

        $r168 = r10[$i98];

        $d207 = $r168[i139];

        $d206 = r13[i140];

        $d208 = $d207 * $d206;

        $d210 = $d209 - $d208;

        $d213 = staticinvoke <java.lang.Math: double exp(double)>($d210);

        $d218 = $d212 * $d213;

        $r171 = <com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionBermudaFixedIborHullWhiteNumericalIntegrationMethod: com.opengamma.analytics.math.statistics.distribution.ProbabilityDistribution NORMAL>;

        $d215 = r14[i140];

        $i99 = i0 - 1;

        $r169 = r6[$i99];

        $i100 = i0 - 1;

        $r170 = $r169[$i100];

        $d214 = $r170[i139];

        $d216 = $d215 + $d214;

        $d217 = d4 * $d216;

        $r172 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d217);

        $d219 = interfaceinvoke $r171.<com.opengamma.analytics.math.statistics.distribution.ProbabilityDistribution: double getCDF(java.lang.Object)>($r172);

        $d220 = $d218 * $d219;

        $d221 = $d211 + $d220;

        $r167[$i97] = $d221;

        i140 = i140 + 1;

        goto label38;

     label39:
        i139 = i139 + 1;

        goto label37;

     label40:
        i141 = 0;

     label41:
        if i141 >= 50 goto label42;

        $i94 = i0 - 1;

        $r166 = r236[$i94];

        $i95 = i0 - 1;

        $r165 = r236[$i95];

        $d203 = $r165[50];

        $r166[i141] = $d203;

        i141 = i141 + 1;

        goto label41;

     label42:
        i142 = 0;

     label43:
        if i142 >= 50 goto label44;

        $i91 = i0 - 1;

        $r164 = r236[$i91];

        $i93 = 151 + i142;

        $i92 = i0 - 1;

        $r163 = r236[$i92];

        $d202 = $r163[150];

        $r164[$i93] = $d202;

        i142 = i142 + 1;

        goto label43;

     label44:
        $d17 = staticinvoke <java.lang.Math: double sqrt(double)>(6.283185307179586);

        d276 = 1.0 / $d17;

        $i23 = i0 - 1;

        r15 = newarray (double[])[$i23];

        r18 = newmultiarray (double)[3][201];

        r19 = newmultiarray (double)[3][201];

        r20 = newarray (double)[3];

        $i24 = i0 - 1;

        r21 = newarray (int)[$i24];

        $i25 = i0 - 1;

        r22 = newmultiarray (double)[$i25][101];

        r23 = newarray (double)[101];

        r24 = newarray (double)[101];

        r25 = newarray (double)[101];

        r26 = newarray (double)[102];

        r27 = newarray (double)[102];

        r28 = newarray (double)[102];

        i143 = i0 - 2;

     label45:
        if i143 < 0 goto label81;

        $r52 = newarray (double)[201];

        r236[i143] = $r52;

        $r53 = newarray (double)[201];

        r237[i143] = $r53;

        $i26 = r228[i143];

        $r54 = newarray (double)[$i26];

        r15[i143] = $r54;

        i144 = 0;

     label46:
        $i27 = r228[i143];

        if i144 >= $i27 goto label49;

        $r155 = r15[i143];

        $r154 = r5[i143];

        $r156 = virtualinvoke $r154.<com.opengamma.analytics.financial.interestrate.annuity.derivative.AnnuityPaymentFixed: com.opengamma.analytics.financial.interestrate.payments.derivative.Payment getNthPayment(int)>(i144);

        $r157 = (com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed) $r156;

        $d187 = virtualinvoke $r157.<com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed: double getAmount()>();

        $r158 = r8[i143];

        $d188 = $r158[i144];

        $d189 = $d187 * $d188;

        $r155[i144] = $d189;

        i145 = 0;

     label47:
        if i145 >= 201 goto label48;

        $r159 = r237[i143];

        $d197 = $r159[i145];

        $r160 = r15[i143];

        $d198 = $r160[i144];

        $r161 = r11[i143];

        $d190 = $r161[i144];

        $d191 = neg $d190;

        $d195 = $d191 / 2.0;

        $r162 = r10[i143];

        $d193 = $r162[i144];

        $d192 = r233[i145];

        $d194 = $d193 * $d192;

        $d196 = $d195 - $d194;

        $d199 = staticinvoke <java.lang.Math: double exp(double)>($d196);

        $d200 = $d198 * $d199;

        $d201 = $d197 + $d200;

        $r159[i145] = $d201;

        i145 = i145 + 1;

        goto label47;

     label48:
        i144 = i144 + 1;

        goto label46;

     label49:
        i146 = 0;

     label50:
        if i146 >= 101 goto label51;

        $r153 = r22[i143];

        $d185 = r13[i146];

        $d184 = r9[i143];

        $d186 = $d185 / $d184;

        $r153[i146] = $d186;

        i146 = i146 + 1;

        goto label50;

     label51:
        $d21 = r234[i143];

        $d20 = r9[i143];

        d6 = $d21 * $d20;

        $d22 = d6 * d6;

        $d23 = $d22 / 2.0;

        d7 = staticinvoke <java.lang.Math: double exp(double)>($d23);

        $b28 = d4 cmpg 0.0;

        if $b28 >= 0 goto label52;

        $i90 = i143 + 1;

        r239 = r236[$i90];

        r240 = r237[i143];

        goto label53;

     label52:
        $i29 = i143 + 1;

        r240 = r236[$i29];

        r239 = r237[i143];

     label53:
        r21[i143] = 0;

     label54:
        $i147 = r21[i143];

        $i148 = $i147 + 1;

        $d277 = r239[$i148];

        $i149 = r21[i143];

        $i150 = $i149 + 1;

        $d278 = r240[$i150];

        $b151 = $d277 cmpl $d278;

        if $b151 < 0 goto label55;

        $i88 = r21[i143];

        $i89 = $i88 + 1;

        r21[i143] = $i89;

        goto label54;

     label55:
        $d24 = r9[i143];

        $d25 = d3 / $d24;

        r16 = staticinvoke <com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionBermudaFixedIborHullWhiteNumericalIntegrationMethod: double[][] parafit(double,double[])>($d25, r239);

        $d26 = r9[i143];

        $d27 = d3 / $d26;

        r17 = staticinvoke <com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionBermudaFixedIborHullWhiteNumericalIntegrationMethod: double[][] parafit(double,double[])>($d27, r240);

        i152 = 0;

     label56:
        if i152 >= 3 goto label57;

        $r141 = r16[i152];

        $i70 = r21[i143];

        $d182 = $r141[$i70];

        $r142 = r17[i152];

        $i71 = r21[i143];

        $d181 = $r142[$i71];

        $d183 = $d182 - $d181;

        r20[i152] = $d183;

        $r144 = r16[i152];

        $r143 = r18[i152];

        $i72 = r21[i143];

        $i73 = $i72 + 1;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r144, 0, $r143, 0, $i73);

        $r147 = r16[i152];

        $i79 = r21[i143];

        $r146 = r18[i152];

        $i74 = r21[i143];

        $i78 = $i74 + 1;

        $r145 = r16[i152];

        $i76 = lengthof $r145;

        $i75 = r21[i143];

        $i77 = $i76 - $i75;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r147, $i79, $r146, $i78, $i77);

        $r149 = r17[i152];

        $r148 = r19[i152];

        $i80 = r21[i143];

        $i81 = $i80 + 1;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r149, 0, $r148, 0, $i81);

        $r152 = r17[i152];

        $i87 = r21[i143];

        $r151 = r19[i152];

        $i82 = r21[i143];

        $i86 = $i82 + 1;

        $r150 = r17[i152];

        $i84 = lengthof $r150;

        $i83 = r21[i143];

        $i85 = $i84 - $i83;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r152, $i87, $r151, $i86, $i85);

        i152 = i152 + 1;

        goto label56;

     label57:
        i153 = 0;

     label58:
        if i153 >= 201 goto label59;

        $r129 = r18[1];

        $r127 = r18[1];

        $d158 = $r127[i153];

        $r128 = r18[0];

        $d155 = $r128[i153];

        $d156 = $d155 * 2.0;

        $d157 = $d156 * d6;

        $d159 = $d158 + $d157;

        $r129[i153] = $d159;

        $r133 = r18[2];

        $r130 = r18[2];

        $d162 = $r130[i153];

        $r131 = r18[1];

        $d160 = $r131[i153];

        $d161 = $d160 * d6;

        $d166 = $d162 + $d161;

        $r132 = r18[0];

        $d163 = $r132[i153];

        $d164 = $d163 * d6;

        $d165 = $d164 * d6;

        $d167 = $d166 - $d165;

        $r133[i153] = $d167;

        $r136 = r19[1];

        $r134 = r19[1];

        $d171 = $r134[i153];

        $r135 = r19[0];

        $d168 = $r135[i153];

        $d169 = $d168 * 2.0;

        $d170 = $d169 * d6;

        $d172 = $d171 + $d170;

        $r136[i153] = $d172;

        $r140 = r19[2];

        $r137 = r19[2];

        $d175 = $r137[i153];

        $r138 = r19[1];

        $d173 = $r138[i153];

        $d174 = $d173 * d6;

        $d179 = $d175 + $d174;

        $r139 = r19[0];

        $d176 = $r139[i153];

        $d177 = $d176 * d6;

        $d178 = $d177 * d6;

        $d180 = $d179 - $d178;

        $r140[i153] = $d180;

        i153 = i153 + 1;

        goto label58;

     label59:
        $d28 = r20[1];

        $d37 = neg $d28;

        $d30 = r20[1];

        $d29 = r20[1];

        $d35 = $d30 * $d29;

        $d31 = r20[0];

        $d33 = 4.0 * $d31;

        $d32 = r20[2];

        $d34 = $d33 * $d32;

        $d36 = $d35 - $d34;

        $d38 = staticinvoke <java.lang.Math: double sqrt(double)>($d36);

        $d41 = $d37 - $d38;

        $d39 = r20[0];

        $d40 = 2.0 * $d39;

        d5 = $d41 / $d40;

        $r56 = <com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionBermudaFixedIborHullWhiteNumericalIntegrationMethod: com.opengamma.analytics.math.statistics.distribution.ProbabilityDistribution NORMAL>;

        $r55 = r22[i143];

        $d42 = $r55[0];

        $r57 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d42);

        d11 = interfaceinvoke $r56.<com.opengamma.analytics.math.statistics.distribution.ProbabilityDistribution: double getCDF(java.lang.Object)>($r57);

        i154 = 0;

     label60:
        if i154 >= 101 goto label61;

        $r122 = <com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionBermudaFixedIborHullWhiteNumericalIntegrationMethod: com.opengamma.analytics.math.statistics.distribution.ProbabilityDistribution NORMAL>;

        $r121 = r22[i143];

        $d136 = $r121[i154];

        $d137 = $d136 - d6;

        $r123 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d137);

        $d138 = interfaceinvoke $r122.<com.opengamma.analytics.math.statistics.distribution.ProbabilityDistribution: double getCDF(java.lang.Object)>($r123);

        r23[i154] = $d138;

        $d146 = neg d276;

        $r124 = r22[i143];

        $d139 = $r124[i154];

        $d140 = $d139 - d6;

        $d143 = neg $d140;

        $r125 = r22[i143];

        $d141 = $r125[i154];

        $d142 = $d141 - d6;

        $d144 = $d143 * $d142;

        $d145 = $d144 / 2.0;

        $d147 = staticinvoke <java.lang.Math: double exp(double)>($d145);

        $d148 = $d146 * $d147;

        r24[i154] = $d148;

        $d151 = r24[i154];

        $r126 = r22[i143];

        $d149 = $r126[i154];

        $d150 = $d149 - d6;

        $d153 = $d151 * $d150;

        $d152 = r23[i154];

        $d154 = $d153 + $d152;

        r25[i154] = $d154;

        i154 = i154 + 1;

        goto label60;

     label61:
        i155 = r229[i143];

     label62:
        $i30 = r230[i143];

        if i155 > $i30 goto label78;

        $i32 = r21[i143];

        $i33 = $i32 - i155;

        i1 = $i33 + 1;

        $i35 = i155 + 100;

        $i34 = r21[i143];

        if $i35 > $i34 goto label67;

        r241 = newmultiarray (double)[3][100];

        i156 = 0;

     label63:
        if i156 >= 3 goto label64;

        $r120 = r18[i156];

        $r119 = r241[i156];

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r120, i155, $r119, 0, 100);

        i156 = i156 + 1;

        goto label63;

     label64:
        i157 = 0;

     label65:
        if i157 >= 100 goto label66;

        $r111 = r241[1];

        $r108 = r241[1];

        $d123 = $r108[i157];

        $r109 = r241[0];

        $d119 = $r109[i157];

        $d121 = $d119 * 2.0;

        $r110 = r22[i143];

        $d120 = $r110[i155];

        $d122 = $d121 * $d120;

        $d124 = $d123 + $d122;

        $r111[i157] = $d124;

        $r118 = r241[2];

        $r112 = r241[2];

        $d128 = $r112[i157];

        $r113 = r241[1];

        $d126 = $r113[i157];

        $r114 = r22[i143];

        $d125 = $r114[i155];

        $d127 = $d126 * $d125;

        $d134 = $d128 + $d127;

        $r115 = r241[0];

        $d130 = $r115[i157];

        $r116 = r22[i143];

        $d129 = $r116[i155];

        $d132 = $d130 * $d129;

        $r117 = r22[i143];

        $d131 = $r117[i155];

        $d133 = $d132 * $d131;

        $d135 = $d134 - $d133;

        $r118[i157] = $d135;

        i157 = i157 + 1;

        goto label65;

     label66:
        $r105 = r236[i143];

        $i67 = i155 + 50;

        $r105[$i67] = 0.0;

        $r107 = r236[i143];

        $i69 = i155 + 50;

        $r106 = r236[i143];

        $i68 = i155 + 50;

        $d115 = $r106[$i68];

        $d116 = staticinvoke <com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionBermudaFixedIborHullWhiteNumericalIntegrationMethod: double ni2ncdf(double[],double[],double[],double[][])>(r25, r24, r23, r241);

        $d117 = d7 * $d116;

        $d118 = $d115 + $d117;

        $r107[$i69] = $d118;

        goto label77;

     label67:
        $i36 = r21[i143];

        if i155 >= $i36 goto label72;

        r242 = newmultiarray (double)[3][101];

        $r81 = r22[i143];

        $d76 = $r81[i155];

        $d77 = d5 - $d76;

        d279 = $d77 - d6;

        $r82 = <com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionBermudaFixedIborHullWhiteNumericalIntegrationMethod: com.opengamma.analytics.math.statistics.distribution.ProbabilityDistribution NORMAL>;

        $r83 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d279);

        d8 = interfaceinvoke $r82.<com.opengamma.analytics.math.statistics.distribution.ProbabilityDistribution: double getCDF(java.lang.Object)>($r83);

        $d78 = d279 * d279;

        $d79 = neg $d78;

        $d80 = $d79 / 2.0;

        $d81 = staticinvoke <java.lang.Math: double exp(double)>($d80);

        $d82 = neg $d81;

        d9 = $d82 * d276;

        $d83 = d9 * d279;

        d10 = $d83 + d8;

        i158 = 0;

     label68:
        if i158 >= 3 goto label69;

        $r102 = r18[i158];

        $r101 = r242[i158];

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r102, i155, $r101, 0, 101);

        $r104 = r19[i158];

        $i59 = r21[i143];

        $i66 = $i59 + 1;

        $r103 = r242[i158];

        $i60 = r21[i143];

        $i61 = $i60 + 1;

        $i65 = $i61 - i155;

        $i63 = i155 + 100;

        $i62 = r21[i143];

        $i64 = $i63 - $i62;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r104, $i66, $r103, $i65, $i64);

        i158 = i158 + 1;

        goto label68;

     label69:
        i159 = 0;

     label70:
        if i159 >= 100 goto label71;

        $r93 = r242[1];

        $r90 = r242[1];

        $d102 = $r90[i159];

        $r91 = r242[0];

        $d98 = $r91[i159];

        $d100 = $d98 * 2.0;

        $r92 = r22[i143];

        $d99 = $r92[i155];

        $d101 = $d100 * $d99;

        $d103 = $d102 + $d101;

        $r93[i159] = $d103;

        $r100 = r242[2];

        $r94 = r242[2];

        $d107 = $r94[i159];

        $r95 = r242[1];

        $d105 = $r95[i159];

        $r96 = r22[i143];

        $d104 = $r96[i155];

        $d106 = $d105 * $d104;

        $d113 = $d107 + $d106;

        $r97 = r242[0];

        $d109 = $r97[i159];

        $r98 = r22[i143];

        $d108 = $r98[i155];

        $d111 = $d109 * $d108;

        $r99 = r22[i143];

        $d110 = $r99[i155];

        $d112 = $d111 * $d110;

        $d114 = $d113 - $d112;

        $r100[i159] = $d114;

        i159 = i159 + 1;

        goto label70;

     label71:
        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r23, 0, r26, 0, i1);

        r26[i1] = d8;

        $i46 = i1 + 1;

        $i44 = lengthof r23;

        $i45 = $i44 - i1;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r23, i1, r26, $i46, $i45);

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r24, 0, r27, 0, i1);

        r27[i1] = d9;

        $i49 = i1 + 1;

        $i47 = lengthof r24;

        $i48 = $i47 - i1;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r24, i1, r27, $i49, $i48);

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r25, 0, r28, 0, i1);

        r28[i1] = d10;

        $i52 = i1 + 1;

        $i50 = lengthof r25;

        $i51 = $i50 - i1;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r25, i1, r28, $i52, $i51);

        $r85 = r236[i143];

        $i53 = i155 + 50;

        $d85 = r239[i155];

        $r84 = r235[i143];

        $d84 = $r84[0];

        $d86 = $d85 * $d84;

        $d87 = $d86 * d11;

        $r85[$i53] = $d87;

        $r86 = r236[i143];

        $i54 = i155 + 50;

        $d88 = $r86[$i54];

        $d89 = staticinvoke <com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionBermudaFixedIborHullWhiteNumericalIntegrationMethod: double ni2ncdf(double[],double[],double[],double[][])>(r28, r27, r26, r242);

        $d90 = d7 * $d89;

        $d91 = $d88 + $d90;

        $r86[$i54] = $d91;

        $r87 = r236[i143];

        $i55 = i155 + 50;

        $d96 = $r87[$i55];

        $i56 = i155 + 100;

        $d93 = r240[$i56];

        $r89 = r235[i143];

        $r88 = r235[i143];

        $i57 = lengthof $r88;

        $i58 = $i57 - 1;

        $d92 = $r89[$i58];

        $d94 = $d93 * $d92;

        $d95 = $d94 * d11;

        $d97 = $d96 + $d95;

        $r87[$i55] = $d97;

        goto label77;

     label72:
        r243 = newmultiarray (double)[3][100];

        i160 = 0;

     label73:
        if i160 >= 3 goto label74;

        $r80 = r19[i160];

        $i43 = i155 + 1;

        $r79 = r243[i160];

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r80, $i43, $r79, 0, 100);

        i160 = i160 + 1;

        goto label73;

     label74:
        i161 = 0;

     label75:
        if i161 >= 100 goto label76;

        $r71 = r243[1];

        $r68 = r243[1];

        $d63 = $r68[i161];

        $r69 = r243[0];

        $d59 = $r69[i161];

        $d61 = $d59 * 2.0;

        $r70 = r22[i143];

        $d60 = $r70[i155];

        $d62 = $d61 * $d60;

        $d64 = $d63 + $d62;

        $r71[i161] = $d64;

        $r78 = r243[2];

        $r72 = r243[2];

        $d68 = $r72[i161];

        $r73 = r243[1];

        $d66 = $r73[i161];

        $r74 = r22[i143];

        $d65 = $r74[i155];

        $d67 = $d66 * $d65;

        $d74 = $d68 + $d67;

        $r75 = r243[0];

        $d70 = $r75[i161];

        $r76 = r22[i143];

        $d69 = $r76[i155];

        $d72 = $d70 * $d69;

        $r77 = r22[i143];

        $d71 = $r77[i155];

        $d73 = $d72 * $d71;

        $d75 = $d74 - $d73;

        $r78[i161] = $d75;

        i161 = i161 + 1;

        goto label75;

     label76:
        $r63 = r236[i143];

        $i37 = i155 + 50;

        $d46 = r240[i155];

        $r62 = r235[i143];

        $d45 = $r62[0];

        $d47 = $d46 * $d45;

        $d48 = $d47 * d11;

        $r63[$i37] = $d48;

        $r64 = r236[i143];

        $i38 = i155 + 50;

        $d49 = $r64[$i38];

        $d50 = staticinvoke <com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionBermudaFixedIborHullWhiteNumericalIntegrationMethod: double ni2ncdf(double[],double[],double[],double[][])>(r25, r24, r23, r243);

        $d51 = d7 * $d50;

        $d52 = $d49 + $d51;

        $r64[$i38] = $d52;

        $r65 = r236[i143];

        $i39 = i155 + 50;

        $d57 = $r65[$i39];

        $i40 = i155 + 100;

        $d54 = r240[$i40];

        $r67 = r235[i143];

        $r66 = r235[i143];

        $i41 = lengthof $r66;

        $i42 = $i41 - 1;

        $d53 = $r67[$i42];

        $d55 = $d54 * $d53;

        $d56 = $d55 * d11;

        $d58 = $d57 + $d56;

        $r65[$i39] = $d58;

     label77:
        i155 = i155 + 1;

        goto label62;

     label78:
        i162 = 0;

     label79:
        if i162 >= 50 goto label80;

        $r59 = r236[i143];

        $r58 = r236[i143];

        $d43 = $r58[50];

        $r59[i162] = $d43;

        $r61 = r236[i143];

        $i31 = 151 + i162;

        $r60 = r236[i143];

        $d44 = $r60[150];

        $r61[$i31] = $d44;

        i162 = i162 + 1;

        goto label79;

     label80:
        i143 = i143 + -1;

        goto label45;

     label81:
        $r46 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionBermudaFixedIbor: com.opengamma.analytics.financial.interestrate.swap.derivative.SwapFixedCoupon[] getUnderlyingSwap()>();

        $r47 = $r46[0];

        $r48 = virtualinvoke $r47.<com.opengamma.analytics.financial.interestrate.swap.derivative.SwapFixedCoupon: com.opengamma.analytics.financial.interestrate.annuity.derivative.AnnuityCouponFixed getFixedLeg()>();

        $r49 = virtualinvoke $r48.<com.opengamma.analytics.financial.interestrate.annuity.derivative.AnnuityCouponFixed: com.opengamma.util.money.Currency getCurrency()>();

        $r50 = r236[0];

        $d18 = $r50[100];

        $z0 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionBermudaFixedIbor: boolean isLong()>();

        if $z0 == 0 goto label82;

        $d280 = 1.0;

        goto label83;

     label82:
        $d280 = -1.0;

     label83:
        $d19 = $d18 * $d280;

        $r51 = staticinvoke <com.opengamma.util.money.CurrencyAmount: com.opengamma.util.money.CurrencyAmount of(com.opengamma.util.money.Currency,double)>($r49, $d19);

        return $r51;
    }

    public com.opengamma.util.money.CurrencyAmount presentValue(com.opengamma.analytics.financial.interestrate.InstrumentDerivative, com.opengamma.analytics.financial.interestrate.YieldCurveBundle)
    {
        com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionBermudaFixedIborHullWhiteNumericalIntegrationMethod r0;
        com.opengamma.analytics.financial.interestrate.InstrumentDerivative r1;
        com.opengamma.analytics.financial.interestrate.YieldCurveBundle r2;
        boolean $z0, $z1;
        com.opengamma.analytics.financial.model.interestrate.definition.HullWhiteOneFactorPiecewiseConstantDataBundle $r3;
        com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionBermudaFixedIbor $r4;
        com.opengamma.util.money.CurrencyAmount $r5;

        r0 := @this: com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionBermudaFixedIborHullWhiteNumericalIntegrationMethod;

        r1 := @parameter0: com.opengamma.analytics.financial.interestrate.InstrumentDerivative;

        r2 := @parameter1: com.opengamma.analytics.financial.interestrate.YieldCurveBundle;

        $z0 = r1 instanceof com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionBermudaFixedIbor;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z0, "Physical delivery swaption");

        $z1 = r2 instanceof com.opengamma.analytics.financial.model.interestrate.definition.HullWhiteOneFactorPiecewiseConstantDataBundle;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z1, "Bundle should contain Hull-White data");

        $r4 = (com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionBermudaFixedIbor) r1;

        $r3 = (com.opengamma.analytics.financial.model.interestrate.definition.HullWhiteOneFactorPiecewiseConstantDataBundle) r2;

        $r5 = virtualinvoke r0.<com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionBermudaFixedIborHullWhiteNumericalIntegrationMethod: com.opengamma.util.money.CurrencyAmount presentValue(com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionBermudaFixedIbor,com.opengamma.analytics.financial.model.interestrate.definition.HullWhiteOneFactorPiecewiseConstantDataBundle)>($r4, $r3);

        return $r5;
    }

    private static double[][] parafit(double, double[])
    {
        double d0, d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21, $d22, $d23, $d24, $d25, $d26, $d27, $d28, $d29, $d30, $d31, $d32, $d33, d34, d35, d36;
        double[] r0, r1, r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, i26, i27;
        double[][] r12;

        d0 := @parameter0: double;

        r0 := @parameter1: double[];

        i0 = lengthof r0;

        $i2 = i0 - 1;

        i1 = $i2 / 2;

        d1 = d0 * d0;

        r1 = newarray (double)[i1];

        r2 = newarray (double)[i1];

        i26 = 0;

     label1:
        if i26 >= i1 goto label2;

        $i25 = neg i1;

        $d30 = (double) $i25;

        $d28 = (double) i26;

        $d29 = 2.0 * $d28;

        $d31 = $d30 + $d29;

        r1[i26] = $d31;

        $d32 = r1[i26];

        $d33 = $d32 * d0;

        r2[i26] = $d33;

        i26 = i26 + 1;

        goto label1;

     label2:
        $i3 = 2 * i1;

        r12 = newmultiarray (double)[3][$i3];

        i27 = 0;

     label3:
        if i27 >= i1 goto label4;

        $i4 = 2 * i27;

        $i5 = 2 + $i4;

        $d4 = r0[$i5];

        $i6 = 2 * i27;

        $i7 = 1 + $i6;

        $d2 = r0[$i7];

        $d3 = 2.0 * $d2;

        $d6 = $d4 - $d3;

        $i8 = 2 * i27;

        $d5 = r0[$i8];

        $d8 = $d6 + $d5;

        $d7 = 2.0 * d1;

        d34 = $d8 / $d7;

        $r3 = r12[0];

        $i9 = 2 * i27;

        $r3[$i9] = d34;

        $r4 = r12[0];

        $i10 = 2 * i27;

        $i11 = $i10 + 1;

        $r4[$i11] = d34;

        $i12 = 2 * i27;

        $i13 = 1 + $i12;

        $d10 = r0[$i13];

        $i14 = 2 * i27;

        $d9 = r0[$i14];

        $d11 = $d10 - $d9;

        $d17 = $d11 / d0;

        $d12 = r2[i27];

        $d13 = 2.0 * $d12;

        $d15 = $d13 + d0;

        $r5 = r12[0];

        $i15 = 2 * i27;

        $d14 = $r5[$i15];

        $d16 = $d15 * $d14;

        d35 = $d17 - $d16;

        $r6 = r12[1];

        $i16 = 2 * i27;

        $r6[$i16] = d35;

        $r7 = r12[1];

        $i17 = 2 * i27;

        $i18 = $i17 + 1;

        $r7[$i18] = d35;

        $i19 = 2 * i27;

        $d23 = r0[$i19];

        $d19 = r2[i27];

        $d18 = r2[i27];

        $d21 = $d19 * $d18;

        $r8 = r12[0];

        $i20 = 2 * i27;

        $d20 = $r8[$i20];

        $d22 = $d21 * $d20;

        $d27 = $d23 - $d22;

        $d25 = r2[i27];

        $r9 = r12[1];

        $i21 = 2 * i27;

        $d24 = $r9[$i21];

        $d26 = $d25 * $d24;

        d36 = $d27 - $d26;

        $r10 = r12[2];

        $i22 = 2 * i27;

        $r10[$i22] = d36;

        $r11 = r12[2];

        $i23 = 2 * i27;

        $i24 = $i23 + 1;

        $r11[$i24] = d36;

        i27 = i27 + 1;

        goto label3;

     label4:
        return r12;
    }

    private static double ni2ncdf(double[], double[], double[], double[][])
    {
        double[] r0, r1, r2, $r4, $r5, $r6, $r7;
        double[][] r3;
        int $i0, $i1, $i2, $i3, i4;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, d15, d16, d17;

        r0 := @parameter0: double[];

        r1 := @parameter1: double[];

        r2 := @parameter2: double[];

        r3 := @parameter3: double[][];

        d15 = 0.0;

        i4 = 0;

     label1:
        $r4 = r3[0];

        $i0 = lengthof $r4;

        if i4 >= $i0 goto label2;

        $r5 = r3[0];

        $d3 = $r5[i4];

        $i1 = i4 + 1;

        $d1 = r0[$i1];

        $d0 = r0[i4];

        $d2 = $d1 - $d0;

        $d4 = $d3 * $d2;

        d16 = d15 + $d4;

        $r6 = r3[1];

        $d8 = $r6[i4];

        $i2 = i4 + 1;

        $d6 = r1[$i2];

        $d5 = r1[i4];

        $d7 = $d6 - $d5;

        $d9 = $d8 * $d7;

        d17 = d16 + $d9;

        $r7 = r3[2];

        $d13 = $r7[i4];

        $i3 = i4 + 1;

        $d11 = r2[$i3];

        $d10 = r2[i4];

        $d12 = $d11 - $d10;

        $d14 = $d13 * $d12;

        d15 = d17 + $d14;

        i4 = i4 + 1;

        goto label1;

     label2:
        return d15;
    }

    static void <clinit>()
    {
        com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionBermudaFixedIborHullWhiteNumericalIntegrationMethod $r0;
        com.opengamma.analytics.financial.interestrate.CashFlowEquivalentCalculator $r1;
        com.opengamma.analytics.financial.model.interestrate.HullWhiteOneFactorPiecewiseConstantInterestRateModel $r2;
        com.opengamma.analytics.math.statistics.distribution.NormalDistribution $r3;

        <com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionBermudaFixedIborHullWhiteNumericalIntegrationMethod: int NB_POINT> = 50;

        $r0 = new com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionBermudaFixedIborHullWhiteNumericalIntegrationMethod;

        specialinvoke $r0.<com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionBermudaFixedIborHullWhiteNumericalIntegrationMethod: void <init>()>();

        <com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionBermudaFixedIborHullWhiteNumericalIntegrationMethod: com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionBermudaFixedIborHullWhiteNumericalIntegrationMethod INSTANCE> = $r0;

        $r1 = staticinvoke <com.opengamma.analytics.financial.interestrate.CashFlowEquivalentCalculator: com.opengamma.analytics.financial.interestrate.CashFlowEquivalentCalculator getInstance()>();

        <com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionBermudaFixedIborHullWhiteNumericalIntegrationMethod: com.opengamma.analytics.financial.interestrate.CashFlowEquivalentCalculator CFEC> = $r1;

        $r2 = new com.opengamma.analytics.financial.model.interestrate.HullWhiteOneFactorPiecewiseConstantInterestRateModel;

        specialinvoke $r2.<com.opengamma.analytics.financial.model.interestrate.HullWhiteOneFactorPiecewiseConstantInterestRateModel: void <init>()>();

        <com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionBermudaFixedIborHullWhiteNumericalIntegrationMethod: com.opengamma.analytics.financial.model.interestrate.HullWhiteOneFactorPiecewiseConstantInterestRateModel MODEL> = $r2;

        $r3 = new com.opengamma.analytics.math.statistics.distribution.NormalDistribution;

        specialinvoke $r3.<com.opengamma.analytics.math.statistics.distribution.NormalDistribution: void <init>(double,double)>(0.0, 1.0);

        <com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionBermudaFixedIborHullWhiteNumericalIntegrationMethod: com.opengamma.analytics.math.statistics.distribution.ProbabilityDistribution NORMAL> = $r3;

        return;
    }
}
