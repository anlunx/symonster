public class com.opengamma.analytics.financial.provider.calculator.discounting.CrossGammaSingleCurveCalculator extends java.lang.Object
{
    private static final double BP1;
    private final com.opengamma.analytics.math.differentiation.VectorFieldFirstOrderDifferentiator _differentiator;
    private final com.opengamma.analytics.financial.provider.sensitivity.parameter.ParameterSensitivityParameterCalculator _psc;
    private final double _shift;

    public void <init>(com.opengamma.analytics.financial.interestrate.InstrumentDerivativeVisitor)
    {
        com.opengamma.analytics.financial.provider.calculator.discounting.CrossGammaSingleCurveCalculator r0;
        com.opengamma.analytics.financial.interestrate.InstrumentDerivativeVisitor r1;
        com.opengamma.analytics.financial.provider.sensitivity.parameter.ParameterSensitivityParameterCalculator $r2;
        com.opengamma.analytics.math.differentiation.VectorFieldFirstOrderDifferentiator $r3;
        double $d0;
        com.opengamma.analytics.math.differentiation.FiniteDifferenceType $r4;

        r0 := @this: com.opengamma.analytics.financial.provider.calculator.discounting.CrossGammaSingleCurveCalculator;

        r1 := @parameter0: com.opengamma.analytics.financial.interestrate.InstrumentDerivativeVisitor;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new com.opengamma.analytics.financial.provider.sensitivity.parameter.ParameterSensitivityParameterCalculator;

        specialinvoke $r2.<com.opengamma.analytics.financial.provider.sensitivity.parameter.ParameterSensitivityParameterCalculator: void <init>(com.opengamma.analytics.financial.interestrate.InstrumentDerivativeVisitor)>(r1);

        r0.<com.opengamma.analytics.financial.provider.calculator.discounting.CrossGammaSingleCurveCalculator: com.opengamma.analytics.financial.provider.sensitivity.parameter.ParameterSensitivityParameterCalculator _psc> = $r2;

        r0.<com.opengamma.analytics.financial.provider.calculator.discounting.CrossGammaSingleCurveCalculator: double _shift> = 1.0E-4;

        $r3 = new com.opengamma.analytics.math.differentiation.VectorFieldFirstOrderDifferentiator;

        $r4 = <com.opengamma.analytics.math.differentiation.FiniteDifferenceType: com.opengamma.analytics.math.differentiation.FiniteDifferenceType FORWARD>;

        $d0 = r0.<com.opengamma.analytics.financial.provider.calculator.discounting.CrossGammaSingleCurveCalculator: double _shift>;

        specialinvoke $r3.<com.opengamma.analytics.math.differentiation.VectorFieldFirstOrderDifferentiator: void <init>(com.opengamma.analytics.math.differentiation.FiniteDifferenceType,double)>($r4, $d0);

        r0.<com.opengamma.analytics.financial.provider.calculator.discounting.CrossGammaSingleCurveCalculator: com.opengamma.analytics.math.differentiation.VectorFieldFirstOrderDifferentiator _differentiator> = $r3;

        return;
    }

    public void <init>(double, com.opengamma.analytics.financial.interestrate.InstrumentDerivativeVisitor)
    {
        com.opengamma.analytics.financial.provider.calculator.discounting.CrossGammaSingleCurveCalculator r0;
        double d0, $d1;
        com.opengamma.analytics.financial.interestrate.InstrumentDerivativeVisitor r1;
        com.opengamma.analytics.financial.provider.sensitivity.parameter.ParameterSensitivityParameterCalculator $r2;
        com.opengamma.analytics.math.differentiation.VectorFieldFirstOrderDifferentiator $r3;
        com.opengamma.analytics.math.differentiation.FiniteDifferenceType $r4;

        r0 := @this: com.opengamma.analytics.financial.provider.calculator.discounting.CrossGammaSingleCurveCalculator;

        d0 := @parameter0: double;

        r1 := @parameter1: com.opengamma.analytics.financial.interestrate.InstrumentDerivativeVisitor;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new com.opengamma.analytics.financial.provider.sensitivity.parameter.ParameterSensitivityParameterCalculator;

        specialinvoke $r2.<com.opengamma.analytics.financial.provider.sensitivity.parameter.ParameterSensitivityParameterCalculator: void <init>(com.opengamma.analytics.financial.interestrate.InstrumentDerivativeVisitor)>(r1);

        r0.<com.opengamma.analytics.financial.provider.calculator.discounting.CrossGammaSingleCurveCalculator: com.opengamma.analytics.financial.provider.sensitivity.parameter.ParameterSensitivityParameterCalculator _psc> = $r2;

        r0.<com.opengamma.analytics.financial.provider.calculator.discounting.CrossGammaSingleCurveCalculator: double _shift> = d0;

        $r3 = new com.opengamma.analytics.math.differentiation.VectorFieldFirstOrderDifferentiator;

        $r4 = <com.opengamma.analytics.math.differentiation.FiniteDifferenceType: com.opengamma.analytics.math.differentiation.FiniteDifferenceType FORWARD>;

        $d1 = r0.<com.opengamma.analytics.financial.provider.calculator.discounting.CrossGammaSingleCurveCalculator: double _shift>;

        specialinvoke $r3.<com.opengamma.analytics.math.differentiation.VectorFieldFirstOrderDifferentiator: void <init>(com.opengamma.analytics.math.differentiation.FiniteDifferenceType,double)>($r4, $d1);

        r0.<com.opengamma.analytics.financial.provider.calculator.discounting.CrossGammaSingleCurveCalculator: com.opengamma.analytics.math.differentiation.VectorFieldFirstOrderDifferentiator _differentiator> = $r3;

        return;
    }

    public com.opengamma.analytics.math.matrix.DoubleMatrix2D calculateCrossGamma(com.opengamma.analytics.financial.interestrate.InstrumentDerivative, com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount)
    {
        com.opengamma.analytics.financial.provider.calculator.discounting.CrossGammaSingleCurveCalculator r0;
        com.opengamma.analytics.financial.interestrate.InstrumentDerivative r1;
        com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount r2, $r30;
        java.lang.String r3;
        com.opengamma.util.money.Currency r4, r55;
        com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve r5, r53;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9;
        double[] r6, r9, $r24, $r25, $r39, r51, r52, r60;
        int i0, $i1, i2, i3, i4, i5;
        com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyParameterSensitivity r7, $r36, $r37;
        com.opengamma.analytics.math.matrix.DoubleMatrix1D r8, $r38;
        com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyParameterSensitivity[] r10;
        double[][] r11;
        java.util.Set $r13, $r14, $r32, $r33, $r34;
        java.util.Iterator $r15, $r18, r54, r56, r58;
        java.lang.Object $r16, $r19, $r26, $r40, $r41, $r42;
        java.util.List $r17;
        com.opengamma.analytics.math.curve.Curve $r20, $r21;
        com.opengamma.analytics.financial.provider.sensitivity.parameter.ParameterSensitivityParameterCalculator $r22, $r35;
        com.opengamma.analytics.math.matrix.DoubleMatrix2D $r23;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8;
        com.opengamma.analytics.financial.model.interestrate.curve.DiscountCurve $r27, r50;
        com.opengamma.analytics.math.curve.InterpolatedDoublesCurve $r28, $r44, r49;
        com.opengamma.analytics.math.interpolation.Interpolator1D $r29, $r45;
        com.opengamma.analytics.financial.forex.method.FXMatrix $r31;
        com.opengamma.analytics.financial.model.interestrate.curve.YieldCurve $r43, r48;
        com.opengamma.analytics.math.curve.DoublesCurve $r46, $r47;
        com.opengamma.analytics.financial.instrument.index.IborIndex r57;
        com.opengamma.analytics.financial.instrument.index.IndexON r59;

        r0 := @this: com.opengamma.analytics.financial.provider.calculator.discounting.CrossGammaSingleCurveCalculator;

        r1 := @parameter0: com.opengamma.analytics.financial.interestrate.InstrumentDerivative;

        r2 := @parameter1: com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount;

        $r13 = virtualinvoke r2.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount: java.util.Set getAllNames()>();

        $i1 = interfaceinvoke $r13.<java.util.Set: int size()>();

        if $i1 != 1 goto label01;

        $z7 = 1;

        goto label02;

     label01:
        $z7 = 0;

     label02:
        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z7, "provider should have only one curve for GammaSingleCurve computation");

        $r14 = virtualinvoke r2.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount: java.util.Set getAllNames()>();

        $r15 = interfaceinvoke $r14.<java.util.Set: java.util.Iterator iterator()>();

        $r16 = interfaceinvoke $r15.<java.util.Iterator: java.lang.Object next()>();

        r3 = (java.lang.String) $r16;

        $r17 = virtualinvoke r2.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount: java.util.List getCurrencyForName(java.lang.String)>(r3);

        $r18 = interfaceinvoke $r17.<java.util.List: java.util.Iterator iterator()>();

        $r19 = staticinvoke <com.google.common.collect.Iterators: java.lang.Object getOnlyElement(java.util.Iterator)>($r18);

        r4 = (com.opengamma.util.money.Currency) $r19;

        r5 = virtualinvoke r2.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount: com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve getCurve(java.lang.String)>(r3);

        $z1 = r5 instanceof com.opengamma.analytics.financial.model.interestrate.curve.YieldCurve;

        if $z1 != 0 goto label03;

        $z6 = r5 instanceof com.opengamma.analytics.financial.model.interestrate.curve.DiscountCurve;

        if $z6 == 0 goto label04;

     label03:
        $z8 = 1;

        goto label05;

     label04:
        $z8 = 0;

     label05:
        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z8, "curve should be YieldCurve or DiscountCurve");

        z0 = r5 instanceof com.opengamma.analytics.financial.model.interestrate.curve.YieldCurve;

        if z0 == 0 goto label06;

        r48 = (com.opengamma.analytics.financial.model.interestrate.curve.YieldCurve) r5;

        $r46 = virtualinvoke r48.<com.opengamma.analytics.financial.model.interestrate.curve.YieldCurve: com.opengamma.analytics.math.curve.DoublesCurve getCurve()>();

        $z5 = $r46 instanceof com.opengamma.analytics.math.curve.InterpolatedDoublesCurve;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z5, "Yield curve should be based on InterpolatedDoublesCurve");

        $r47 = virtualinvoke r48.<com.opengamma.analytics.financial.model.interestrate.curve.YieldCurve: com.opengamma.analytics.math.curve.DoublesCurve getCurve()>();

        r49 = (com.opengamma.analytics.math.curve.InterpolatedDoublesCurve) $r47;

        goto label07;

     label06:
        r50 = (com.opengamma.analytics.financial.model.interestrate.curve.DiscountCurve) r5;

        $r20 = virtualinvoke r50.<com.opengamma.analytics.financial.model.interestrate.curve.DiscountCurve: com.opengamma.analytics.math.curve.Curve getCurve()>();

        $z2 = $r20 instanceof com.opengamma.analytics.math.curve.InterpolatedDoublesCurve;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z2, "Discount curve should be based on InterpolatedDoublesCurve");

        $r21 = virtualinvoke r50.<com.opengamma.analytics.financial.model.interestrate.curve.DiscountCurve: com.opengamma.analytics.math.curve.Curve getCurve()>();

        r49 = (com.opengamma.analytics.math.curve.InterpolatedDoublesCurve) $r21;

     label07:
        r51 = virtualinvoke r49.<com.opengamma.analytics.math.curve.InterpolatedDoublesCurve: double[] getYDataAsPrimitive()>();

        r6 = virtualinvoke r49.<com.opengamma.analytics.math.curve.InterpolatedDoublesCurve: double[] getXDataAsPrimitive()>();

        i0 = lengthof r51;

        $r22 = r0.<com.opengamma.analytics.financial.provider.calculator.discounting.CrossGammaSingleCurveCalculator: com.opengamma.analytics.financial.provider.sensitivity.parameter.ParameterSensitivityParameterCalculator _psc>;

        r7 = virtualinvoke $r22.<com.opengamma.analytics.financial.provider.sensitivity.parameter.ParameterSensitivityParameterCalculator: com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyParameterSensitivity calculateSensitivity(com.opengamma.analytics.financial.interestrate.InstrumentDerivative,com.opengamma.analytics.financial.provider.description.interestrate.ParameterProviderInterface)>(r1, r2);

        r8 = virtualinvoke r7.<com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyParameterSensitivity: com.opengamma.analytics.math.matrix.DoubleMatrix1D getSensitivity(java.lang.String,com.opengamma.util.money.Currency)>(r3, r4);

        r9 = virtualinvoke r8.<com.opengamma.analytics.math.matrix.DoubleMatrix1D: double[] getData()>();

        r10 = newarray (com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyParameterSensitivity)[i0];

        r11 = newmultiarray (double)[i0][i0];

        i2 = 0;

     label08:
        if i2 >= i0 goto label19;

        $r26 = virtualinvoke r51.<java.lang.Object: java.lang.Object clone()>();

        r52 = (double[]) $r26;

        $d2 = r52[i2];

        $d1 = r0.<com.opengamma.analytics.financial.provider.calculator.discounting.CrossGammaSingleCurveCalculator: double _shift>;

        $d3 = $d2 + $d1;

        r52[i2] = $d3;

        if z0 == 0 goto label09;

        $r43 = new com.opengamma.analytics.financial.model.interestrate.curve.YieldCurve;

        $r44 = new com.opengamma.analytics.math.curve.InterpolatedDoublesCurve;

        $r45 = virtualinvoke r49.<com.opengamma.analytics.math.curve.InterpolatedDoublesCurve: com.opengamma.analytics.math.interpolation.Interpolator1D getInterpolator()>();

        specialinvoke $r44.<com.opengamma.analytics.math.curve.InterpolatedDoublesCurve: void <init>(double[],double[],com.opengamma.analytics.math.interpolation.Interpolator1D,boolean)>(r6, r52, $r45, 1);

        specialinvoke $r43.<com.opengamma.analytics.financial.model.interestrate.curve.YieldCurve: void <init>(java.lang.String,com.opengamma.analytics.math.curve.DoublesCurve)>(r3, $r44);

        r53 = $r43;

        goto label10;

     label09:
        $r27 = new com.opengamma.analytics.financial.model.interestrate.curve.DiscountCurve;

        $r28 = new com.opengamma.analytics.math.curve.InterpolatedDoublesCurve;

        $r29 = virtualinvoke r49.<com.opengamma.analytics.math.curve.InterpolatedDoublesCurve: com.opengamma.analytics.math.interpolation.Interpolator1D getInterpolator()>();

        specialinvoke $r28.<com.opengamma.analytics.math.curve.InterpolatedDoublesCurve: void <init>(double[],double[],com.opengamma.analytics.math.interpolation.Interpolator1D,boolean)>(r6, r52, $r29, 1);

        specialinvoke $r27.<com.opengamma.analytics.financial.model.interestrate.curve.DiscountCurve: void <init>(java.lang.String,com.opengamma.analytics.math.curve.DoublesCurve)>(r3, $r28);

        r53 = $r27;

     label10:
        $r30 = new com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount;

        specialinvoke $r30.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount: void <init>()>();

        $r31 = virtualinvoke r2.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount: com.opengamma.analytics.financial.forex.method.FXMatrix getFxRates()>();

        virtualinvoke $r30.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount: void setForexMatrix(com.opengamma.analytics.financial.forex.method.FXMatrix)>($r31);

        $r32 = virtualinvoke r2.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount: java.util.Set getCurrencies()>();

        r54 = interfaceinvoke $r32.<java.util.Set: java.util.Iterator iterator()>();

     label11:
        $z9 = interfaceinvoke r54.<java.util.Iterator: boolean hasNext()>();

        if $z9 == 0 goto label12;

        $r42 = interfaceinvoke r54.<java.util.Iterator: java.lang.Object next()>();

        r55 = (com.opengamma.util.money.Currency) $r42;

        virtualinvoke $r30.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount: void setCurve(com.opengamma.util.money.Currency,com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve)>(r55, r53);

        goto label11;

     label12:
        $r33 = virtualinvoke r2.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount: java.util.Set getIndexesIbor()>();

        r56 = interfaceinvoke $r33.<java.util.Set: java.util.Iterator iterator()>();

     label13:
        $z3 = interfaceinvoke r56.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label14;

        $r41 = interfaceinvoke r56.<java.util.Iterator: java.lang.Object next()>();

        r57 = (com.opengamma.analytics.financial.instrument.index.IborIndex) $r41;

        virtualinvoke $r30.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount: void setCurve(com.opengamma.analytics.financial.instrument.index.IborIndex,com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve)>(r57, r53);

        goto label13;

     label14:
        $r34 = virtualinvoke r2.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount: java.util.Set getIndexesON()>();

        r58 = interfaceinvoke $r34.<java.util.Set: java.util.Iterator iterator()>();

     label15:
        $z4 = interfaceinvoke r58.<java.util.Iterator: boolean hasNext()>();

        if $z4 == 0 goto label16;

        $r40 = interfaceinvoke r58.<java.util.Iterator: java.lang.Object next()>();

        r59 = (com.opengamma.analytics.financial.instrument.index.IndexON) $r40;

        virtualinvoke $r30.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount: void setCurve(com.opengamma.analytics.financial.instrument.index.IndexON,com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve)>(r59, r53);

        goto label15;

     label16:
        $r35 = r0.<com.opengamma.analytics.financial.provider.calculator.discounting.CrossGammaSingleCurveCalculator: com.opengamma.analytics.financial.provider.sensitivity.parameter.ParameterSensitivityParameterCalculator _psc>;

        $r36 = virtualinvoke $r35.<com.opengamma.analytics.financial.provider.sensitivity.parameter.ParameterSensitivityParameterCalculator: com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyParameterSensitivity calculateSensitivity(com.opengamma.analytics.financial.interestrate.InstrumentDerivative,com.opengamma.analytics.financial.provider.description.interestrate.ParameterProviderInterface)>(r1, $r30);

        r10[i2] = $r36;

        $r37 = r10[i2];

        $r38 = virtualinvoke $r37.<com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyParameterSensitivity: com.opengamma.analytics.math.matrix.DoubleMatrix1D getSensitivity(java.lang.String,com.opengamma.util.money.Currency)>(r3, r4);

        r60 = virtualinvoke $r38.<com.opengamma.analytics.math.matrix.DoubleMatrix1D: double[] getData()>();

        i3 = 0;

     label17:
        if i3 >= i0 goto label18;

        $r39 = r11[i2];

        $d5 = r60[i3];

        $d4 = r9[i3];

        $d7 = $d5 - $d4;

        $d6 = r0.<com.opengamma.analytics.financial.provider.calculator.discounting.CrossGammaSingleCurveCalculator: double _shift>;

        $d8 = $d7 / $d6;

        $r39[i3] = $d8;

        i3 = i3 + 1;

        goto label17;

     label18:
        i2 = i2 + 1;

        goto label08;

     label19:
        i4 = 1;

     label20:
        if i4 >= i0 goto label23;

        i5 = i4;

     label21:
        if i5 >= i0 goto label22;

        $r25 = r11[i5];

        $r24 = r11[i4];

        $d0 = $r24[i5];

        $r25[i4] = $d0;

        i5 = i5 + 1;

        goto label21;

     label22:
        i4 = i4 + 1;

        goto label20;

     label23:
        $r23 = new com.opengamma.analytics.math.matrix.DoubleMatrix2D;

        specialinvoke $r23.<com.opengamma.analytics.math.matrix.DoubleMatrix2D: void <init>(double[][])>(r11);

        return $r23;
    }

    public double[] calculateSumOfColumnsGamma(com.opengamma.analytics.financial.interestrate.InstrumentDerivative, com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount)
    {
        com.opengamma.analytics.financial.provider.calculator.discounting.CrossGammaSingleCurveCalculator r0;
        com.opengamma.analytics.financial.interestrate.InstrumentDerivative r1;
        com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount r2;
        java.lang.String r3;
        com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve r4;
        com.opengamma.analytics.financial.model.interestrate.curve.YieldCurve r5;
        com.opengamma.analytics.math.function.Function1D r7;
        double[][] r8;
        double[] r9, $r19, $r22;
        java.util.Set $r10, $r11;
        int $i0, $i1, i2, $i3;
        java.util.Iterator $r12;
        java.lang.Object $r13, $r20;
        boolean $z0, $z1, $z2;
        com.opengamma.analytics.math.curve.DoublesCurve $r14;
        com.opengamma.analytics.financial.provider.calculator.discounting.Delta $r15;
        com.opengamma.analytics.financial.provider.sensitivity.parameter.ParameterSensitivityParameterCalculator $r16;
        com.opengamma.analytics.math.differentiation.VectorFieldFirstOrderDifferentiator $r17;
        com.opengamma.analytics.math.matrix.DoubleMatrix1D $r18;
        com.opengamma.analytics.math.matrix.DoubleMatrix2D $r21;
        double $d0;

        r0 := @this: com.opengamma.analytics.financial.provider.calculator.discounting.CrossGammaSingleCurveCalculator;

        r1 := @parameter0: com.opengamma.analytics.financial.interestrate.InstrumentDerivative;

        r2 := @parameter1: com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount;

        $r10 = virtualinvoke r2.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount: java.util.Set getAllNames()>();

        $i0 = interfaceinvoke $r10.<java.util.Set: int size()>();

        if $i0 != 1 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z2, "provider should have only one curve for GammaSingleCurve computation");

        $r11 = virtualinvoke r2.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount: java.util.Set getAllNames()>();

        $r12 = interfaceinvoke $r11.<java.util.Set: java.util.Iterator iterator()>();

        $r13 = interfaceinvoke $r12.<java.util.Iterator: java.lang.Object next()>();

        r3 = (java.lang.String) $r13;

        r4 = virtualinvoke r2.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount: com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve getCurve(java.lang.String)>(r3);

        $z0 = r4 instanceof com.opengamma.analytics.financial.model.interestrate.curve.YieldCurve;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z0, "curve should be YieldCurve");

        r5 = (com.opengamma.analytics.financial.model.interestrate.curve.YieldCurve) r4;

        $r14 = virtualinvoke r5.<com.opengamma.analytics.financial.model.interestrate.curve.YieldCurve: com.opengamma.analytics.math.curve.DoublesCurve getCurve()>();

        $z1 = $r14 instanceof com.opengamma.analytics.math.curve.InterpolatedDoublesCurve;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z1, "Yield curve should be based on InterpolatedDoublesCurve");

        $r15 = new com.opengamma.analytics.financial.provider.calculator.discounting.Delta;

        $r16 = r0.<com.opengamma.analytics.financial.provider.calculator.discounting.CrossGammaSingleCurveCalculator: com.opengamma.analytics.financial.provider.sensitivity.parameter.ParameterSensitivityParameterCalculator _psc>;

        specialinvoke $r15.<com.opengamma.analytics.financial.provider.calculator.discounting.Delta: void <init>(com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount,com.opengamma.analytics.financial.interestrate.InstrumentDerivative,com.opengamma.analytics.financial.provider.sensitivity.parameter.ParameterSensitivityParameterCalculator)>(r2, r1, $r16);

        $r17 = r0.<com.opengamma.analytics.financial.provider.calculator.discounting.CrossGammaSingleCurveCalculator: com.opengamma.analytics.math.differentiation.VectorFieldFirstOrderDifferentiator _differentiator>;

        r7 = virtualinvoke $r17.<com.opengamma.analytics.math.differentiation.VectorFieldFirstOrderDifferentiator: com.opengamma.analytics.math.function.Function1D differentiate(com.opengamma.analytics.math.function.Function1D)>($r15);

        $r18 = new com.opengamma.analytics.math.matrix.DoubleMatrix1D;

        $r19 = newarray (double)[1];

        specialinvoke $r18.<com.opengamma.analytics.math.matrix.DoubleMatrix1D: void <init>(double[])>($r19);

        $r20 = virtualinvoke r7.<com.opengamma.analytics.math.function.Function1D: java.lang.Object evaluate(java.lang.Object)>($r18);

        $r21 = (com.opengamma.analytics.math.matrix.DoubleMatrix2D) $r20;

        r8 = virtualinvoke $r21.<com.opengamma.analytics.math.matrix.DoubleMatrix2D: double[][] getData()>();

        $i1 = lengthof r8;

        r9 = newarray (double)[$i1];

        i2 = 0;

     label3:
        $i3 = lengthof r8;

        if i2 >= $i3 goto label4;

        $r22 = r8[i2];

        $d0 = $r22[0];

        r9[i2] = $d0;

        i2 = i2 + 1;

        goto label3;

     label4:
        return r9;
    }

    public static void <clinit>()
    {
        <com.opengamma.analytics.financial.provider.calculator.discounting.CrossGammaSingleCurveCalculator: double BP1> = 1.0E-4;

        return;
    }
}
