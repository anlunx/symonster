public abstract class org.apache.commons.math3.optim.AbstractOptimizationProblem extends java.lang.Object implements org.apache.commons.math3.optim.OptimizationProblem
{
    private static final org.apache.commons.math3.optim.AbstractOptimizationProblem$MaxEvalCallback MAX_EVAL_CALLBACK;
    private static final org.apache.commons.math3.optim.AbstractOptimizationProblem$MaxIterCallback MAX_ITER_CALLBACK;
    private final int maxEvaluations;
    private final int maxIterations;
    private final org.apache.commons.math3.optim.ConvergenceChecker checker;

    protected void <init>(int, int, org.apache.commons.math3.optim.ConvergenceChecker)
    {
        org.apache.commons.math3.optim.AbstractOptimizationProblem r0;
        int i0, i1;
        org.apache.commons.math3.optim.ConvergenceChecker r1;

        r0 := @this: org.apache.commons.math3.optim.AbstractOptimizationProblem;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: org.apache.commons.math3.optim.ConvergenceChecker;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.commons.math3.optim.AbstractOptimizationProblem: int maxEvaluations> = i0;

        r0.<org.apache.commons.math3.optim.AbstractOptimizationProblem: int maxIterations> = i1;

        r0.<org.apache.commons.math3.optim.AbstractOptimizationProblem: org.apache.commons.math3.optim.ConvergenceChecker checker> = r1;

        return;
    }

    public org.apache.commons.math3.util.Incrementor getEvaluationCounter()
    {
        org.apache.commons.math3.optim.AbstractOptimizationProblem r0;
        org.apache.commons.math3.util.Incrementor $r1;
        org.apache.commons.math3.optim.AbstractOptimizationProblem$MaxEvalCallback $r2;
        int $i0;

        r0 := @this: org.apache.commons.math3.optim.AbstractOptimizationProblem;

        $r1 = new org.apache.commons.math3.util.Incrementor;

        $i0 = r0.<org.apache.commons.math3.optim.AbstractOptimizationProblem: int maxEvaluations>;

        $r2 = <org.apache.commons.math3.optim.AbstractOptimizationProblem: org.apache.commons.math3.optim.AbstractOptimizationProblem$MaxEvalCallback MAX_EVAL_CALLBACK>;

        specialinvoke $r1.<org.apache.commons.math3.util.Incrementor: void <init>(int,org.apache.commons.math3.util.Incrementor$MaxCountExceededCallback)>($i0, $r2);

        return $r1;
    }

    public org.apache.commons.math3.util.Incrementor getIterationCounter()
    {
        org.apache.commons.math3.optim.AbstractOptimizationProblem r0;
        org.apache.commons.math3.util.Incrementor $r1;
        org.apache.commons.math3.optim.AbstractOptimizationProblem$MaxIterCallback $r2;
        int $i0;

        r0 := @this: org.apache.commons.math3.optim.AbstractOptimizationProblem;

        $r1 = new org.apache.commons.math3.util.Incrementor;

        $i0 = r0.<org.apache.commons.math3.optim.AbstractOptimizationProblem: int maxIterations>;

        $r2 = <org.apache.commons.math3.optim.AbstractOptimizationProblem: org.apache.commons.math3.optim.AbstractOptimizationProblem$MaxIterCallback MAX_ITER_CALLBACK>;

        specialinvoke $r1.<org.apache.commons.math3.util.Incrementor: void <init>(int,org.apache.commons.math3.util.Incrementor$MaxCountExceededCallback)>($i0, $r2);

        return $r1;
    }

    public org.apache.commons.math3.optim.ConvergenceChecker getConvergenceChecker()
    {
        org.apache.commons.math3.optim.AbstractOptimizationProblem r0;
        org.apache.commons.math3.optim.ConvergenceChecker $r1;

        r0 := @this: org.apache.commons.math3.optim.AbstractOptimizationProblem;

        $r1 = r0.<org.apache.commons.math3.optim.AbstractOptimizationProblem: org.apache.commons.math3.optim.ConvergenceChecker checker>;

        return $r1;
    }

    static void <clinit>()
    {
        org.apache.commons.math3.optim.AbstractOptimizationProblem$MaxEvalCallback $r0;
        org.apache.commons.math3.optim.AbstractOptimizationProblem$MaxIterCallback $r1;

        $r0 = new org.apache.commons.math3.optim.AbstractOptimizationProblem$MaxEvalCallback;

        specialinvoke $r0.<org.apache.commons.math3.optim.AbstractOptimizationProblem$MaxEvalCallback: void <init>(org.apache.commons.math3.optim.AbstractOptimizationProblem$1)>(null);

        <org.apache.commons.math3.optim.AbstractOptimizationProblem: org.apache.commons.math3.optim.AbstractOptimizationProblem$MaxEvalCallback MAX_EVAL_CALLBACK> = $r0;

        $r1 = new org.apache.commons.math3.optim.AbstractOptimizationProblem$MaxIterCallback;

        specialinvoke $r1.<org.apache.commons.math3.optim.AbstractOptimizationProblem$MaxIterCallback: void <init>(org.apache.commons.math3.optim.AbstractOptimizationProblem$1)>(null);

        <org.apache.commons.math3.optim.AbstractOptimizationProblem: org.apache.commons.math3.optim.AbstractOptimizationProblem$MaxIterCallback MAX_ITER_CALLBACK> = $r1;

        return;
    }
}
