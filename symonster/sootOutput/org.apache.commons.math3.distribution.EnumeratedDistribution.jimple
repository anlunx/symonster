public class org.apache.commons.math3.distribution.EnumeratedDistribution extends java.lang.Object implements java.io.Serializable
{
    private static final long serialVersionUID;
    protected final org.apache.commons.math3.random.RandomGenerator random;
    private final java.util.List singletons;
    private final double[] probabilities;
    private final double[] cumulativeProbabilities;

    public void <init>(java.util.List) throws org.apache.commons.math3.exception.NotPositiveException, org.apache.commons.math3.exception.MathArithmeticException, org.apache.commons.math3.exception.NotFiniteNumberException, org.apache.commons.math3.exception.NotANumberException
    {
        org.apache.commons.math3.distribution.EnumeratedDistribution r0;
        java.util.List r1;
        org.apache.commons.math3.random.Well19937c $r2;

        r0 := @this: org.apache.commons.math3.distribution.EnumeratedDistribution;

        r1 := @parameter0: java.util.List;

        $r2 = new org.apache.commons.math3.random.Well19937c;

        specialinvoke $r2.<org.apache.commons.math3.random.Well19937c: void <init>()>();

        specialinvoke r0.<org.apache.commons.math3.distribution.EnumeratedDistribution: void <init>(org.apache.commons.math3.random.RandomGenerator,java.util.List)>($r2, r1);

        return;
    }

    public void <init>(org.apache.commons.math3.random.RandomGenerator, java.util.List) throws org.apache.commons.math3.exception.NotPositiveException, org.apache.commons.math3.exception.MathArithmeticException, org.apache.commons.math3.exception.NotFiniteNumberException, org.apache.commons.math3.exception.NotANumberException
    {
        org.apache.commons.math3.distribution.EnumeratedDistribution r0;
        org.apache.commons.math3.random.RandomGenerator r1;
        java.util.List r2, $r13;
        double[] r3, $r6, $r7, $r8, $r9, $r10, $r11;
        org.apache.commons.math3.util.Pair r4;
        java.util.ArrayList $r5;
        int $i0, $i1, $i2, $i3, $i4, i6, i7;
        double $d0, d1, d2;
        java.lang.Object $r12, $r14, $r15, $r22;
        java.lang.Double $r16, $r19;
        byte $b5;
        boolean $z1, $z2;
        org.apache.commons.math3.exception.NotANumberException $r17;
        org.apache.commons.math3.exception.NotFiniteNumberException $r18;
        java.lang.Object[] $r20;
        org.apache.commons.math3.exception.NotPositiveException $r21;
        java.lang.Number $r23;

        r0 := @this: org.apache.commons.math3.distribution.EnumeratedDistribution;

        r1 := @parameter0: org.apache.commons.math3.random.RandomGenerator;

        r2 := @parameter1: java.util.List;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.commons.math3.distribution.EnumeratedDistribution: org.apache.commons.math3.random.RandomGenerator random> = r1;

        $r5 = new java.util.ArrayList;

        $i0 = interfaceinvoke r2.<java.util.List: int size()>();

        specialinvoke $r5.<java.util.ArrayList: void <init>(int)>($i0);

        r0.<org.apache.commons.math3.distribution.EnumeratedDistribution: java.util.List singletons> = $r5;

        $i1 = interfaceinvoke r2.<java.util.List: int size()>();

        r3 = newarray (double)[$i1];

        i6 = 0;

     label1:
        $i2 = interfaceinvoke r2.<java.util.List: int size()>();

        if i6 >= $i2 goto label5;

        $r12 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>(i6);

        r4 = (org.apache.commons.math3.util.Pair) $r12;

        $r13 = r0.<org.apache.commons.math3.distribution.EnumeratedDistribution: java.util.List singletons>;

        $r14 = virtualinvoke r4.<org.apache.commons.math3.util.Pair: java.lang.Object getKey()>();

        interfaceinvoke $r13.<java.util.List: boolean add(java.lang.Object)>($r14);

        $r15 = virtualinvoke r4.<org.apache.commons.math3.util.Pair: java.lang.Object getValue()>();

        $r16 = (java.lang.Double) $r15;

        d1 = virtualinvoke $r16.<java.lang.Double: double doubleValue()>();

        $b5 = d1 cmpg 0.0;

        if $b5 >= 0 goto label2;

        $r21 = new org.apache.commons.math3.exception.NotPositiveException;

        $r22 = virtualinvoke r4.<org.apache.commons.math3.util.Pair: java.lang.Object getValue()>();

        $r23 = (java.lang.Number) $r22;

        specialinvoke $r21.<org.apache.commons.math3.exception.NotPositiveException: void <init>(java.lang.Number)>($r23);

        throw $r21;

     label2:
        $z1 = staticinvoke <java.lang.Double: boolean isInfinite(double)>(d1);

        if $z1 == 0 goto label3;

        $r18 = new org.apache.commons.math3.exception.NotFiniteNumberException;

        $r19 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d1);

        $r20 = newarray (java.lang.Object)[0];

        specialinvoke $r18.<org.apache.commons.math3.exception.NotFiniteNumberException: void <init>(java.lang.Number,java.lang.Object[])>($r19, $r20);

        throw $r18;

     label3:
        $z2 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d1);

        if $z2 == 0 goto label4;

        $r17 = new org.apache.commons.math3.exception.NotANumberException;

        specialinvoke $r17.<org.apache.commons.math3.exception.NotANumberException: void <init>()>();

        throw $r17;

     label4:
        r3[i6] = d1;

        i6 = i6 + 1;

        goto label1;

     label5:
        $r6 = staticinvoke <org.apache.commons.math3.util.MathArrays: double[] normalizeArray(double[],double)>(r3, 1.0);

        r0.<org.apache.commons.math3.distribution.EnumeratedDistribution: double[] probabilities> = $r6;

        $r7 = r0.<org.apache.commons.math3.distribution.EnumeratedDistribution: double[] probabilities>;

        $i3 = lengthof $r7;

        $r8 = newarray (double)[$i3];

        r0.<org.apache.commons.math3.distribution.EnumeratedDistribution: double[] cumulativeProbabilities> = $r8;

        d2 = 0.0;

        i7 = 0;

     label6:
        $r9 = r0.<org.apache.commons.math3.distribution.EnumeratedDistribution: double[] probabilities>;

        $i4 = lengthof $r9;

        if i7 >= $i4 goto label7;

        $r10 = r0.<org.apache.commons.math3.distribution.EnumeratedDistribution: double[] probabilities>;

        $d0 = $r10[i7];

        d2 = d2 + $d0;

        $r11 = r0.<org.apache.commons.math3.distribution.EnumeratedDistribution: double[] cumulativeProbabilities>;

        $r11[i7] = d2;

        i7 = i7 + 1;

        goto label6;

     label7:
        return;
    }

    public void reseedRandomGenerator(long)
    {
        org.apache.commons.math3.distribution.EnumeratedDistribution r0;
        long l0;
        org.apache.commons.math3.random.RandomGenerator $r1;

        r0 := @this: org.apache.commons.math3.distribution.EnumeratedDistribution;

        l0 := @parameter0: long;

        $r1 = r0.<org.apache.commons.math3.distribution.EnumeratedDistribution: org.apache.commons.math3.random.RandomGenerator random>;

        interfaceinvoke $r1.<org.apache.commons.math3.random.RandomGenerator: void setSeed(long)>(l0);

        return;
    }

    double probability(java.lang.Object)
    {
        org.apache.commons.math3.distribution.EnumeratedDistribution r0;
        java.lang.Object r1, $r4, $r7;
        double[] $r2, $r5;
        int $i0, i1;
        java.util.List $r3, $r6;
        boolean $z0;
        double $d0, d1;

        r0 := @this: org.apache.commons.math3.distribution.EnumeratedDistribution;

        r1 := @parameter0: java.lang.Object;

        d1 = 0.0;

        i1 = 0;

     label1:
        $r2 = r0.<org.apache.commons.math3.distribution.EnumeratedDistribution: double[] probabilities>;

        $i0 = lengthof $r2;

        if i1 >= $i0 goto label5;

        if r1 != null goto label2;

        $r6 = r0.<org.apache.commons.math3.distribution.EnumeratedDistribution: java.util.List singletons>;

        $r7 = interfaceinvoke $r6.<java.util.List: java.lang.Object get(int)>(i1);

        if $r7 == null goto label3;

     label2:
        if r1 == null goto label4;

        $r3 = r0.<org.apache.commons.math3.distribution.EnumeratedDistribution: java.util.List singletons>;

        $r4 = interfaceinvoke $r3.<java.util.List: java.lang.Object get(int)>(i1);

        $z0 = virtualinvoke r1.<java.lang.Object: boolean equals(java.lang.Object)>($r4);

        if $z0 == 0 goto label4;

     label3:
        $r5 = r0.<org.apache.commons.math3.distribution.EnumeratedDistribution: double[] probabilities>;

        $d0 = $r5[i1];

        d1 = d1 + $d0;

     label4:
        i1 = i1 + 1;

        goto label1;

     label5:
        return d1;
    }

    public java.util.List getPmf()
    {
        org.apache.commons.math3.distribution.EnumeratedDistribution r0;
        java.util.ArrayList $r2;
        double[] $r3, $r4, $r8;
        int $i0, $i1, i2;
        org.apache.commons.math3.util.Pair $r5;
        java.util.List $r6;
        java.lang.Object $r7;
        double $d0;
        java.lang.Double $r9;

        r0 := @this: org.apache.commons.math3.distribution.EnumeratedDistribution;

        $r2 = new java.util.ArrayList;

        $r3 = r0.<org.apache.commons.math3.distribution.EnumeratedDistribution: double[] probabilities>;

        $i0 = lengthof $r3;

        specialinvoke $r2.<java.util.ArrayList: void <init>(int)>($i0);

        i2 = 0;

     label1:
        $r4 = r0.<org.apache.commons.math3.distribution.EnumeratedDistribution: double[] probabilities>;

        $i1 = lengthof $r4;

        if i2 >= $i1 goto label2;

        $r5 = new org.apache.commons.math3.util.Pair;

        $r6 = r0.<org.apache.commons.math3.distribution.EnumeratedDistribution: java.util.List singletons>;

        $r7 = interfaceinvoke $r6.<java.util.List: java.lang.Object get(int)>(i2);

        $r8 = r0.<org.apache.commons.math3.distribution.EnumeratedDistribution: double[] probabilities>;

        $d0 = $r8[i2];

        $r9 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        specialinvoke $r5.<org.apache.commons.math3.util.Pair: void <init>(java.lang.Object,java.lang.Object)>($r7, $r9);

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>($r5);

        i2 = i2 + 1;

        goto label1;

     label2:
        return $r2;
    }

    public java.lang.Object sample()
    {
        org.apache.commons.math3.distribution.EnumeratedDistribution r0;
        double d0, $d1;
        org.apache.commons.math3.random.RandomGenerator $r1;
        double[] $r2, $r3, $r4;
        int $i0, $i2, i3, $i4, $i5;
        byte $b1;
        java.util.List $r5, $r7, $r8;
        java.lang.Object $r6, $r9;

        r0 := @this: org.apache.commons.math3.distribution.EnumeratedDistribution;

        $r1 = r0.<org.apache.commons.math3.distribution.EnumeratedDistribution: org.apache.commons.math3.random.RandomGenerator random>;

        d0 = interfaceinvoke $r1.<org.apache.commons.math3.random.RandomGenerator: double nextDouble()>();

        $r2 = r0.<org.apache.commons.math3.distribution.EnumeratedDistribution: double[] cumulativeProbabilities>;

        i3 = staticinvoke <java.util.Arrays: int binarySearch(double[],double)>($r2, d0);

        if i3 >= 0 goto label1;

        $i2 = neg i3;

        i3 = $i2 - 1;

     label1:
        if i3 < 0 goto label2;

        $r3 = r0.<org.apache.commons.math3.distribution.EnumeratedDistribution: double[] probabilities>;

        $i0 = lengthof $r3;

        if i3 >= $i0 goto label2;

        $r4 = r0.<org.apache.commons.math3.distribution.EnumeratedDistribution: double[] cumulativeProbabilities>;

        $d1 = $r4[i3];

        $b1 = d0 cmpg $d1;

        if $b1 >= 0 goto label2;

        $r5 = r0.<org.apache.commons.math3.distribution.EnumeratedDistribution: java.util.List singletons>;

        $r6 = interfaceinvoke $r5.<java.util.List: java.lang.Object get(int)>(i3);

        return $r6;

     label2:
        $r7 = r0.<org.apache.commons.math3.distribution.EnumeratedDistribution: java.util.List singletons>;

        $r8 = r0.<org.apache.commons.math3.distribution.EnumeratedDistribution: java.util.List singletons>;

        $i4 = interfaceinvoke $r8.<java.util.List: int size()>();

        $i5 = $i4 - 1;

        $r9 = interfaceinvoke $r7.<java.util.List: java.lang.Object get(int)>($i5);

        return $r9;
    }

    public java.lang.Object[] sample(int) throws org.apache.commons.math3.exception.NotStrictlyPositiveException
    {
        org.apache.commons.math3.distribution.EnumeratedDistribution r0;
        int i0, i1;
        java.lang.Object[] r1;
        java.lang.Object $r2;
        org.apache.commons.math3.exception.NotStrictlyPositiveException $r3;
        org.apache.commons.math3.exception.util.LocalizedFormats $r4;
        java.lang.Integer $r5;

        r0 := @this: org.apache.commons.math3.distribution.EnumeratedDistribution;

        i0 := @parameter0: int;

        if i0 > 0 goto label1;

        $r3 = new org.apache.commons.math3.exception.NotStrictlyPositiveException;

        $r4 = <org.apache.commons.math3.exception.util.LocalizedFormats: org.apache.commons.math3.exception.util.LocalizedFormats NUMBER_OF_SAMPLES>;

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        specialinvoke $r3.<org.apache.commons.math3.exception.NotStrictlyPositiveException: void <init>(org.apache.commons.math3.exception.util.Localizable,java.lang.Number)>($r4, $r5);

        throw $r3;

     label1:
        r1 = newarray (java.lang.Object)[i0];

        i1 = 0;

     label2:
        if i1 >= i0 goto label3;

        $r2 = virtualinvoke r0.<org.apache.commons.math3.distribution.EnumeratedDistribution: java.lang.Object sample()>();

        r1[i1] = $r2;

        i1 = i1 + 1;

        goto label2;

     label3:
        return r1;
    }

    public java.lang.Object[] sample(int, java.lang.Object[]) throws org.apache.commons.math3.exception.NotStrictlyPositiveException
    {
        org.apache.commons.math3.distribution.EnumeratedDistribution r0;
        int i0, $i1, i2;
        java.lang.Object[] r1, $r6, $r8, r13, r14;
        java.lang.Object $r2, $r5;
        java.lang.Class $r3, $r4;
        org.apache.commons.math3.exception.NullArgumentException $r7;
        org.apache.commons.math3.exception.util.LocalizedFormats $r9, $r11;
        org.apache.commons.math3.exception.NotStrictlyPositiveException $r10;
        java.lang.Integer $r12;

        r0 := @this: org.apache.commons.math3.distribution.EnumeratedDistribution;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.Object[];

        if i0 > 0 goto label1;

        $r10 = new org.apache.commons.math3.exception.NotStrictlyPositiveException;

        $r11 = <org.apache.commons.math3.exception.util.LocalizedFormats: org.apache.commons.math3.exception.util.LocalizedFormats NUMBER_OF_SAMPLES>;

        $r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        specialinvoke $r10.<org.apache.commons.math3.exception.NotStrictlyPositiveException: void <init>(org.apache.commons.math3.exception.util.Localizable,java.lang.Number)>($r11, $r12);

        throw $r10;

     label1:
        if r1 != null goto label2;

        $r7 = new org.apache.commons.math3.exception.NullArgumentException;

        $r9 = <org.apache.commons.math3.exception.util.LocalizedFormats: org.apache.commons.math3.exception.util.LocalizedFormats INPUT_ARRAY>;

        $r8 = newarray (java.lang.Object)[0];

        specialinvoke $r7.<org.apache.commons.math3.exception.NullArgumentException: void <init>(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])>($r9, $r8);

        throw $r7;

     label2:
        $i1 = lengthof r1;

        if $i1 >= i0 goto label3;

        $r3 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Class getComponentType()>();

        $r5 = staticinvoke <java.lang.reflect.Array: java.lang.Object newInstance(java.lang.Class,int)>($r4, i0);

        $r6 = (java.lang.Object[]) $r5;

        r13 = (java.lang.Object[]) $r6;

        r14 = r13;

        goto label4;

     label3:
        r14 = r1;

     label4:
        i2 = 0;

     label5:
        if i2 >= i0 goto label6;

        $r2 = virtualinvoke r0.<org.apache.commons.math3.distribution.EnumeratedDistribution: java.lang.Object sample()>();

        r14[i2] = $r2;

        i2 = i2 + 1;

        goto label5;

     label6:
        return r14;
    }

    public static void <clinit>()
    {
        <org.apache.commons.math3.distribution.EnumeratedDistribution: long serialVersionUID> = 20123308L;

        return;
    }
}
