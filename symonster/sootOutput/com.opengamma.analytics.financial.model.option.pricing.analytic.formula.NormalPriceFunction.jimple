public class com.opengamma.analytics.financial.model.option.pricing.analytic.formula.NormalPriceFunction extends java.lang.Object implements com.opengamma.analytics.financial.model.option.pricing.analytic.formula.OptionPriceFunction
{
    private static final com.opengamma.analytics.math.statistics.distribution.ProbabilityDistribution NORMAL;

    public void <init>()
    {
        com.opengamma.analytics.financial.model.option.pricing.analytic.formula.NormalPriceFunction r0;

        r0 := @this: com.opengamma.analytics.financial.model.option.pricing.analytic.formula.NormalPriceFunction;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public com.opengamma.analytics.math.function.Function1D getPriceFunction(com.opengamma.analytics.financial.model.option.pricing.analytic.formula.EuropeanVanillaOption)
    {
        com.opengamma.analytics.financial.model.option.pricing.analytic.formula.NormalPriceFunction r0;
        com.opengamma.analytics.financial.model.option.pricing.analytic.formula.EuropeanVanillaOption r1;
        double d0, d1;
        com.opengamma.analytics.financial.model.option.pricing.analytic.formula.NormalPriceFunction$1 $r2;

        r0 := @this: com.opengamma.analytics.financial.model.option.pricing.analytic.formula.NormalPriceFunction;

        r1 := @parameter0: com.opengamma.analytics.financial.model.option.pricing.analytic.formula.EuropeanVanillaOption;

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object,java.lang.String)>(r1, "option");

        d0 = virtualinvoke r1.<com.opengamma.analytics.financial.model.option.pricing.analytic.formula.EuropeanVanillaOption: double getStrike()>();

        d1 = virtualinvoke r1.<com.opengamma.analytics.financial.model.option.pricing.analytic.formula.EuropeanVanillaOption: double getTimeToExpiry()>();

        $r2 = new com.opengamma.analytics.financial.model.option.pricing.analytic.formula.NormalPriceFunction$1;

        specialinvoke $r2.<com.opengamma.analytics.financial.model.option.pricing.analytic.formula.NormalPriceFunction$1: void <init>(com.opengamma.analytics.financial.model.option.pricing.analytic.formula.NormalPriceFunction,double,com.opengamma.analytics.financial.model.option.pricing.analytic.formula.EuropeanVanillaOption,double)>(r0, d1, r1, d0);

        return $r2;
    }

    public double getPriceAdjoint(com.opengamma.analytics.financial.model.option.pricing.analytic.formula.EuropeanVanillaOption, com.opengamma.analytics.financial.model.option.pricing.analytic.formula.NormalFunctionData, double[])
    {
        com.opengamma.analytics.financial.model.option.pricing.analytic.formula.NormalPriceFunction r0;
        com.opengamma.analytics.financial.model.option.pricing.analytic.formula.EuropeanVanillaOption r1;
        com.opengamma.analytics.financial.model.option.pricing.analytic.formula.NormalFunctionData r2;
        double[] r3;
        double d0, d1, d2, d3, d4, d5, d7, d8, d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21, $d22, $d23, $d24, $d25, $d26, $d27, $d28, $d29, $d30, $d31, $d32, $d33, $d34, $d35, $d36, $d37, $d38, $d39, $d40, $d41, $d42, $d43, $d44, $d45, $d46, $d47, $d48, $d49, $d50, d51, d52, d53, d54, $d55, d56, $d57, d59;
        byte b0, $b2, $b3, $b4, $b5, $b6;
        int $i1;
        boolean $z0, $z1;
        com.opengamma.analytics.math.statistics.distribution.ProbabilityDistribution $r4, $r6;
        java.lang.Double $r5, $r7;

        r0 := @this: com.opengamma.analytics.financial.model.option.pricing.analytic.formula.NormalPriceFunction;

        r1 := @parameter0: com.opengamma.analytics.financial.model.option.pricing.analytic.formula.EuropeanVanillaOption;

        r2 := @parameter1: com.opengamma.analytics.financial.model.option.pricing.analytic.formula.NormalFunctionData;

        r3 := @parameter2: double[];

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object,java.lang.String)>(r1, "option");

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object,java.lang.String)>(r2, "data");

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object,java.lang.String)>(r3, "derivatives");

        $i1 = lengthof r3;

        if $i1 != 3 goto label01;

        $z1 = 1;

        goto label02;

     label01:
        $z1 = 0;

     label02:
        staticinvoke <org.apache.commons.lang.Validate: void isTrue(boolean,java.lang.String)>($z1, "array size");

        d0 = virtualinvoke r1.<com.opengamma.analytics.financial.model.option.pricing.analytic.formula.EuropeanVanillaOption: double getStrike()>();

        d1 = virtualinvoke r1.<com.opengamma.analytics.financial.model.option.pricing.analytic.formula.EuropeanVanillaOption: double getTimeToExpiry()>();

        d2 = virtualinvoke r2.<com.opengamma.analytics.financial.model.option.pricing.analytic.formula.NormalFunctionData: double getForward()>();

        d3 = virtualinvoke r2.<com.opengamma.analytics.financial.model.option.pricing.analytic.formula.NormalFunctionData: double getNumeraire()>();

        d4 = virtualinvoke r2.<com.opengamma.analytics.financial.model.option.pricing.analytic.formula.NormalFunctionData: double getNormalVolatility()>();

        $z0 = virtualinvoke r1.<com.opengamma.analytics.financial.model.option.pricing.analytic.formula.EuropeanVanillaOption: boolean isCall()>();

        if $z0 == 0 goto label03;

        $b6 = 1;

        goto label04;

     label03:
        $b6 = -1;

     label04:
        b0 = $b6;

        d51 = 0.0;

        d52 = 0.0;

        d53 = 0.0;

        d54 = 0.0;

        $d10 = staticinvoke <java.lang.Math: double sqrt(double)>(d1);

        d5 = d4 * $d10;

        $b2 = d5 cmpg 1.0E-16;

        if $b2 >= 0 goto label07;

        $d50 = (double) $b6;

        $d49 = d2 - d0;

        d54 = $d50 * $d49;

        $b5 = d54 cmpl 0.0;

        if $b5 <= 0 goto label05;

        $d55 = d3 * d54;

        goto label06;

     label05:
        $d55 = 0.0;

     label06:
        d56 = $d55;

        goto label08;

     label07:
        $d12 = (double) $b6;

        $d11 = d2 - d0;

        $d13 = $d12 * $d11;

        d53 = $d13 / d5;

        $r4 = <com.opengamma.analytics.financial.model.option.pricing.analytic.formula.NormalPriceFunction: com.opengamma.analytics.math.statistics.distribution.ProbabilityDistribution NORMAL>;

        $r5 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d53);

        d51 = interfaceinvoke $r4.<com.opengamma.analytics.math.statistics.distribution.ProbabilityDistribution: double getCDF(java.lang.Object)>($r5);

        $r6 = <com.opengamma.analytics.financial.model.option.pricing.analytic.formula.NormalPriceFunction: com.opengamma.analytics.math.statistics.distribution.ProbabilityDistribution NORMAL>;

        $r7 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d53);

        d52 = interfaceinvoke $r6.<com.opengamma.analytics.math.statistics.distribution.ProbabilityDistribution: double getPDF(java.lang.Object)>($r7);

        $d15 = (double) $b6;

        $d14 = d2 - d0;

        $d16 = $d15 * $d14;

        $d18 = $d16 * d51;

        $d17 = d5 * d52;

        $d19 = $d18 + $d17;

        d56 = d3 * $d19;

     label08:
        $b3 = d5 cmpg 1.0E-16;

        if $b3 >= 0 goto label11;

        $b4 = d54 cmpl 0.0;

        if $b4 <= 0 goto label09;

        $d57 = d3;

        goto label10;

     label09:
        $d57 = 0.0;

     label10:
        $d45 = (double) b0;

        $d46 = $d45 * $d57;

        r3[0] = $d46;

        $d47 = r3[0];

        $d48 = neg $d47;

        r3[2] = $d48;

        r3[1] = 0.0;

        goto label12;

     label11:
        $d21 = (double) b0;

        $d20 = d2 - d0;

        $d22 = $d21 * $d20;

        $d23 = d3 * $d22;

        d59 = $d23 * 1.0;

        $d24 = d3 * d5;

        d7 = $d24 * 1.0;

        $d27 = d52 * d59;

        $d25 = d52 * d53;

        $d26 = $d25 * d7;

        d8 = $d27 - $d26;

        $d28 = (double) b0;

        $d29 = d3 * $d28;

        $d30 = $d29 * d51;

        $d34 = $d30 * 1.0;

        $d31 = (double) b0;

        $d32 = $d31 / d5;

        $d33 = $d32 * d8;

        $d35 = $d34 + $d33;

        r3[0] = $d35;

        $d36 = r3[0];

        $d37 = neg $d36;

        r3[2] = $d37;

        $d38 = neg d53;

        $d39 = $d38 / d5;

        $d42 = $d39 * d8;

        $d40 = d3 * d52;

        $d41 = $d40 * 1.0;

        d9 = $d42 + $d41;

        $d43 = staticinvoke <java.lang.Math: double sqrt(double)>(d1);

        $d44 = $d43 * d9;

        r3[1] = $d44;

     label12:
        return d56;
    }

    public double getDelta(com.opengamma.analytics.financial.model.option.pricing.analytic.formula.EuropeanVanillaOption, com.opengamma.analytics.financial.model.option.pricing.analytic.formula.NormalFunctionData)
    {
        com.opengamma.analytics.financial.model.option.pricing.analytic.formula.NormalPriceFunction r0;
        com.opengamma.analytics.financial.model.option.pricing.analytic.formula.EuropeanVanillaOption r1;
        com.opengamma.analytics.financial.model.option.pricing.analytic.formula.NormalFunctionData r2;
        double d0, d1, d2, d3, d4, d5, d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, d21, $d22, d23;
        boolean $z0;
        byte $b1, $b2, $b3, $b4;
        com.opengamma.analytics.math.statistics.distribution.ProbabilityDistribution $r3;
        java.lang.Double $r4;

        r0 := @this: com.opengamma.analytics.financial.model.option.pricing.analytic.formula.NormalPriceFunction;

        r1 := @parameter0: com.opengamma.analytics.financial.model.option.pricing.analytic.formula.EuropeanVanillaOption;

        r2 := @parameter1: com.opengamma.analytics.financial.model.option.pricing.analytic.formula.NormalFunctionData;

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object,java.lang.String)>(r1, "option");

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object,java.lang.String)>(r2, "data");

        d0 = virtualinvoke r1.<com.opengamma.analytics.financial.model.option.pricing.analytic.formula.EuropeanVanillaOption: double getStrike()>();

        d1 = virtualinvoke r1.<com.opengamma.analytics.financial.model.option.pricing.analytic.formula.EuropeanVanillaOption: double getTimeToExpiry()>();

        d2 = virtualinvoke r2.<com.opengamma.analytics.financial.model.option.pricing.analytic.formula.NormalFunctionData: double getForward()>();

        d3 = virtualinvoke r2.<com.opengamma.analytics.financial.model.option.pricing.analytic.formula.NormalFunctionData: double getNumeraire()>();

        d4 = virtualinvoke r2.<com.opengamma.analytics.financial.model.option.pricing.analytic.formula.NormalFunctionData: double getNormalVolatility()>();

        $z0 = virtualinvoke r1.<com.opengamma.analytics.financial.model.option.pricing.analytic.formula.EuropeanVanillaOption: boolean isCall()>();

        if $z0 == 0 goto label1;

        $b4 = 1;

        goto label2;

     label1:
        $b4 = -1;

     label2:
        $d7 = staticinvoke <java.lang.Math: double sqrt(double)>(d1);

        d5 = d4 * $d7;

        $b1 = d5 cmpg 1.0E-16;

        if $b1 >= 0 goto label6;

        $d15 = (double) $b4;

        $d14 = d2 - d0;

        d21 = $d15 * $d14;

        $d16 = staticinvoke <java.lang.Math: double abs(double)>(d21);

        $b2 = $d16 cmpg 1.0E-16;

        if $b2 > 0 goto label3;

        $d18 = (double) $b4;

        $d19 = $d18 * 0.5;

        $d20 = $d19 * d3;

        return $d20;

     label3:
        $b3 = d21 cmpl 0.0;

        if $b3 <= 0 goto label4;

        $d17 = (double) $b4;

        $d22 = $d17 * d3;

        goto label5;

     label4:
        $d22 = 0.0;

     label5:
        return $d22;

     label6:
        $d9 = (double) $b4;

        $d8 = d2 - d0;

        $d10 = $d9 * $d8;

        d23 = $d10 / d5;

        $r3 = <com.opengamma.analytics.financial.model.option.pricing.analytic.formula.NormalPriceFunction: com.opengamma.analytics.math.statistics.distribution.ProbabilityDistribution NORMAL>;

        $r4 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d23);

        d6 = interfaceinvoke $r3.<com.opengamma.analytics.math.statistics.distribution.ProbabilityDistribution: double getCDF(java.lang.Object)>($r4);

        $d11 = (double) $b4;

        $d12 = d3 * $d11;

        $d13 = $d12 * d6;

        return $d13;
    }

    public double getGamma(com.opengamma.analytics.financial.model.option.pricing.analytic.formula.EuropeanVanillaOption, com.opengamma.analytics.financial.model.option.pricing.analytic.formula.NormalFunctionData)
    {
        com.opengamma.analytics.financial.model.option.pricing.analytic.formula.NormalPriceFunction r0;
        com.opengamma.analytics.financial.model.option.pricing.analytic.formula.EuropeanVanillaOption r1;
        com.opengamma.analytics.financial.model.option.pricing.analytic.formula.NormalFunctionData r2;
        double d0, d1, d2, d3, d4, d5, d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, d16, $d17, d18;
        boolean $z0;
        byte $b1, $b2, $b3;
        com.opengamma.analytics.math.statistics.distribution.ProbabilityDistribution $r3;
        java.lang.Double $r4;

        r0 := @this: com.opengamma.analytics.financial.model.option.pricing.analytic.formula.NormalPriceFunction;

        r1 := @parameter0: com.opengamma.analytics.financial.model.option.pricing.analytic.formula.EuropeanVanillaOption;

        r2 := @parameter1: com.opengamma.analytics.financial.model.option.pricing.analytic.formula.NormalFunctionData;

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object,java.lang.String)>(r1, "option");

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object,java.lang.String)>(r2, "data");

        d0 = virtualinvoke r1.<com.opengamma.analytics.financial.model.option.pricing.analytic.formula.EuropeanVanillaOption: double getStrike()>();

        d1 = virtualinvoke r1.<com.opengamma.analytics.financial.model.option.pricing.analytic.formula.EuropeanVanillaOption: double getTimeToExpiry()>();

        d2 = virtualinvoke r2.<com.opengamma.analytics.financial.model.option.pricing.analytic.formula.NormalFunctionData: double getForward()>();

        d3 = virtualinvoke r2.<com.opengamma.analytics.financial.model.option.pricing.analytic.formula.NormalFunctionData: double getNumeraire()>();

        d4 = virtualinvoke r2.<com.opengamma.analytics.financial.model.option.pricing.analytic.formula.NormalFunctionData: double getNormalVolatility()>();

        $z0 = virtualinvoke r1.<com.opengamma.analytics.financial.model.option.pricing.analytic.formula.EuropeanVanillaOption: boolean isCall()>();

        if $z0 == 0 goto label1;

        $b3 = 1;

        goto label2;

     label1:
        $b3 = -1;

     label2:
        $d7 = staticinvoke <java.lang.Math: double sqrt(double)>(d1);

        d5 = d4 * $d7;

        $b1 = d5 cmpg 1.0E-16;

        if $b1 >= 0 goto label5;

        $d12 = (double) $b3;

        $d11 = d2 - d0;

        d16 = $d12 * $d11;

        $d13 = staticinvoke <java.lang.Math: double abs(double)>(d16);

        $b2 = $d13 cmpl 1.0E-16;

        if $b2 <= 0 goto label3;

        $d17 = 0.0;

        goto label4;

     label3:
        $d14 = staticinvoke <java.lang.Math: double sqrt(double)>(6.283185307179586);

        $d15 = d3 / $d14;

        $d17 = $d15 / d5;

     label4:
        return $d17;

     label5:
        $d8 = d2 - d0;

        d18 = $d8 / d5;

        $r3 = <com.opengamma.analytics.financial.model.option.pricing.analytic.formula.NormalPriceFunction: com.opengamma.analytics.math.statistics.distribution.ProbabilityDistribution NORMAL>;

        $r4 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d18);

        d6 = interfaceinvoke $r3.<com.opengamma.analytics.math.statistics.distribution.ProbabilityDistribution: double getPDF(java.lang.Object)>($r4);

        $d9 = d3 * d6;

        $d10 = $d9 / d5;

        return $d10;
    }

    public double getVega(com.opengamma.analytics.financial.model.option.pricing.analytic.formula.EuropeanVanillaOption, com.opengamma.analytics.financial.model.option.pricing.analytic.formula.NormalFunctionData)
    {
        com.opengamma.analytics.financial.model.option.pricing.analytic.formula.NormalPriceFunction r0;
        com.opengamma.analytics.financial.model.option.pricing.analytic.formula.EuropeanVanillaOption r1;
        com.opengamma.analytics.financial.model.option.pricing.analytic.formula.NormalFunctionData r2;
        double d0, d1, d2, d3, d4, d5, d6, d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, d16, $d17, d18;
        boolean $z0;
        byte $b1, $b2, $b3;
        com.opengamma.analytics.math.statistics.distribution.ProbabilityDistribution $r3;
        java.lang.Double $r4;

        r0 := @this: com.opengamma.analytics.financial.model.option.pricing.analytic.formula.NormalPriceFunction;

        r1 := @parameter0: com.opengamma.analytics.financial.model.option.pricing.analytic.formula.EuropeanVanillaOption;

        r2 := @parameter1: com.opengamma.analytics.financial.model.option.pricing.analytic.formula.NormalFunctionData;

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object,java.lang.String)>(r1, "option");

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object,java.lang.String)>(r2, "data");

        d0 = virtualinvoke r1.<com.opengamma.analytics.financial.model.option.pricing.analytic.formula.EuropeanVanillaOption: double getStrike()>();

        d1 = virtualinvoke r1.<com.opengamma.analytics.financial.model.option.pricing.analytic.formula.EuropeanVanillaOption: double getTimeToExpiry()>();

        d2 = virtualinvoke r2.<com.opengamma.analytics.financial.model.option.pricing.analytic.formula.NormalFunctionData: double getForward()>();

        d3 = virtualinvoke r2.<com.opengamma.analytics.financial.model.option.pricing.analytic.formula.NormalFunctionData: double getNumeraire()>();

        d4 = virtualinvoke r2.<com.opengamma.analytics.financial.model.option.pricing.analytic.formula.NormalFunctionData: double getNormalVolatility()>();

        $z0 = virtualinvoke r1.<com.opengamma.analytics.financial.model.option.pricing.analytic.formula.EuropeanVanillaOption: boolean isCall()>();

        if $z0 == 0 goto label1;

        $b3 = 1;

        goto label2;

     label1:
        $b3 = -1;

     label2:
        d5 = staticinvoke <java.lang.Math: double sqrt(double)>(d1);

        d6 = d4 * d5;

        $b1 = d6 cmpg 1.0E-16;

        if $b1 >= 0 goto label5;

        $d12 = (double) $b3;

        $d11 = d2 - d0;

        d16 = $d12 * $d11;

        $d13 = staticinvoke <java.lang.Math: double abs(double)>(d16);

        $b2 = $d13 cmpl 1.0E-16;

        if $b2 <= 0 goto label3;

        $d17 = 0.0;

        goto label4;

     label3:
        $d14 = d3 * d5;

        $d15 = staticinvoke <java.lang.Math: double sqrt(double)>(6.283185307179586);

        $d17 = $d14 / $d15;

     label4:
        return $d17;

     label5:
        $d8 = d2 - d0;

        d18 = $d8 / d6;

        $r3 = <com.opengamma.analytics.financial.model.option.pricing.analytic.formula.NormalPriceFunction: com.opengamma.analytics.math.statistics.distribution.ProbabilityDistribution NORMAL>;

        $r4 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d18);

        d7 = interfaceinvoke $r3.<com.opengamma.analytics.math.statistics.distribution.ProbabilityDistribution: double getPDF(java.lang.Object)>($r4);

        $d9 = d3 * d7;

        $d10 = $d9 * d5;

        return $d10;
    }

    public double getTheta(com.opengamma.analytics.financial.model.option.pricing.analytic.formula.EuropeanVanillaOption, com.opengamma.analytics.financial.model.option.pricing.analytic.formula.NormalFunctionData)
    {
        com.opengamma.analytics.financial.model.option.pricing.analytic.formula.NormalPriceFunction r0;
        com.opengamma.analytics.financial.model.option.pricing.analytic.formula.EuropeanVanillaOption r1;
        com.opengamma.analytics.financial.model.option.pricing.analytic.formula.NormalFunctionData r2;
        double d0, d1, d2, d3, d4, d5, d6, d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, d20, $d21, d22;
        boolean $z0;
        byte $b1, $b2, $b3;
        com.opengamma.analytics.math.statistics.distribution.ProbabilityDistribution $r3;
        java.lang.Double $r4;

        r0 := @this: com.opengamma.analytics.financial.model.option.pricing.analytic.formula.NormalPriceFunction;

        r1 := @parameter0: com.opengamma.analytics.financial.model.option.pricing.analytic.formula.EuropeanVanillaOption;

        r2 := @parameter1: com.opengamma.analytics.financial.model.option.pricing.analytic.formula.NormalFunctionData;

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object,java.lang.String)>(r1, "option");

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object,java.lang.String)>(r2, "data");

        d0 = virtualinvoke r1.<com.opengamma.analytics.financial.model.option.pricing.analytic.formula.EuropeanVanillaOption: double getStrike()>();

        d1 = virtualinvoke r1.<com.opengamma.analytics.financial.model.option.pricing.analytic.formula.EuropeanVanillaOption: double getTimeToExpiry()>();

        d2 = virtualinvoke r2.<com.opengamma.analytics.financial.model.option.pricing.analytic.formula.NormalFunctionData: double getForward()>();

        d3 = virtualinvoke r2.<com.opengamma.analytics.financial.model.option.pricing.analytic.formula.NormalFunctionData: double getNumeraire()>();

        d4 = virtualinvoke r2.<com.opengamma.analytics.financial.model.option.pricing.analytic.formula.NormalFunctionData: double getNormalVolatility()>();

        $z0 = virtualinvoke r1.<com.opengamma.analytics.financial.model.option.pricing.analytic.formula.EuropeanVanillaOption: boolean isCall()>();

        if $z0 == 0 goto label1;

        $b3 = 1;

        goto label2;

     label1:
        $b3 = -1;

     label2:
        d5 = staticinvoke <java.lang.Math: double sqrt(double)>(d1);

        d6 = d4 * d5;

        $b1 = d6 cmpg 1.0E-16;

        if $b1 >= 0 goto label5;

        $d14 = (double) $b3;

        $d13 = d2 - d0;

        d20 = $d14 * $d13;

        $d15 = staticinvoke <java.lang.Math: double abs(double)>(d20);

        $b2 = $d15 cmpl 1.0E-16;

        if $b2 <= 0 goto label3;

        $d21 = 0.0;

        goto label4;

     label3:
        $d16 = -0.5 * d3;

        $d17 = $d16 * d4;

        $d18 = $d17 / d5;

        $d19 = staticinvoke <java.lang.Math: double sqrt(double)>(6.283185307179586);

        $d21 = $d18 / $d19;

     label4:
        return $d21;

     label5:
        $d8 = d2 - d0;

        d22 = $d8 / d6;

        $r3 = <com.opengamma.analytics.financial.model.option.pricing.analytic.formula.NormalPriceFunction: com.opengamma.analytics.math.statistics.distribution.ProbabilityDistribution NORMAL>;

        $r4 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d22);

        d7 = interfaceinvoke $r3.<com.opengamma.analytics.math.statistics.distribution.ProbabilityDistribution: double getPDF(java.lang.Object)>($r4);

        $d9 = -0.5 * d3;

        $d10 = $d9 * d7;

        $d11 = $d10 * d4;

        $d12 = $d11 / d5;

        return $d12;
    }

    static com.opengamma.analytics.math.statistics.distribution.ProbabilityDistribution access$000()
    {
        com.opengamma.analytics.math.statistics.distribution.ProbabilityDistribution $r0;

        $r0 = <com.opengamma.analytics.financial.model.option.pricing.analytic.formula.NormalPriceFunction: com.opengamma.analytics.math.statistics.distribution.ProbabilityDistribution NORMAL>;

        return $r0;
    }

    static void <clinit>()
    {
        com.opengamma.analytics.math.statistics.distribution.NormalDistribution $r0;

        $r0 = new com.opengamma.analytics.math.statistics.distribution.NormalDistribution;

        specialinvoke $r0.<com.opengamma.analytics.math.statistics.distribution.NormalDistribution: void <init>(double,double)>(0.0, 1.0);

        <com.opengamma.analytics.financial.model.option.pricing.analytic.formula.NormalPriceFunction: com.opengamma.analytics.math.statistics.distribution.ProbabilityDistribution NORMAL> = $r0;

        return;
    }
}
