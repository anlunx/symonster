public class com.opengamma.analytics.financial.model.interestrate.curve.ForwardCurveAffineDividends extends com.opengamma.analytics.financial.model.interestrate.curve.ForwardCurve
{
    private final com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve _riskFreeCurve;
    private final com.opengamma.analytics.financial.equity.variance.pricing.AffineDividends _dividends;

    public void <init>(double, com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve, com.opengamma.analytics.financial.equity.variance.pricing.AffineDividends)
    {
        com.opengamma.analytics.financial.model.interestrate.curve.ForwardCurveAffineDividends r0;
        double d0;
        com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve r1;
        com.opengamma.analytics.financial.equity.variance.pricing.AffineDividends r2;
        com.opengamma.analytics.math.curve.Curve $r3;

        r0 := @this: com.opengamma.analytics.financial.model.interestrate.curve.ForwardCurveAffineDividends;

        d0 := @parameter0: double;

        r1 := @parameter1: com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve;

        r2 := @parameter2: com.opengamma.analytics.financial.equity.variance.pricing.AffineDividends;

        $r3 = staticinvoke <com.opengamma.analytics.financial.model.interestrate.curve.ForwardCurveAffineDividends: com.opengamma.analytics.math.curve.Curve getForwardCurve(double,com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve,com.opengamma.analytics.financial.equity.variance.pricing.AffineDividends)>(d0, r1, r2);

        specialinvoke r0.<com.opengamma.analytics.financial.model.interestrate.curve.ForwardCurve: void <init>(com.opengamma.analytics.math.curve.Curve)>($r3);

        r0.<com.opengamma.analytics.financial.model.interestrate.curve.ForwardCurveAffineDividends: com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve _riskFreeCurve> = r1;

        r0.<com.opengamma.analytics.financial.model.interestrate.curve.ForwardCurveAffineDividends: com.opengamma.analytics.financial.equity.variance.pricing.AffineDividends _dividends> = r2;

        return;
    }

    protected static com.opengamma.analytics.math.curve.Curve getForwardCurve(double, com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve, com.opengamma.analytics.financial.equity.variance.pricing.AffineDividends)
    {
        double d0;
        com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve r0;
        com.opengamma.analytics.financial.equity.variance.pricing.AffineDividends r1;
        byte $b0;
        java.lang.Object[] $r3;
        java.lang.Double $r4;
        int $i1;
        com.opengamma.analytics.financial.model.interestrate.curve.ForwardCurveAffineDividends$1 $r7;
        com.opengamma.analytics.financial.model.interestrate.curve.ForwardCurveAffineDividends$2 $r8;
        com.opengamma.analytics.math.curve.ConstantDoublesCurve $r9;
        com.opengamma.analytics.financial.model.interestrate.curve.YieldCurve $r10;
        com.opengamma.analytics.math.curve.Curve $r11;
        boolean $z0;

        d0 := @parameter0: double;

        r0 := @parameter1: com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve;

        r1 := @parameter2: com.opengamma.analytics.financial.equity.variance.pricing.AffineDividends;

        $b0 = d0 cmpl 0.0;

        if $b0 <= 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        $r3 = newarray (java.lang.Object)[1];

        $r4 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d0);

        $r3[0] = $r4;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String,java.lang.Object[])>($z0, "Negative spot. S_0 = {}", $r3);

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r0, "null risk free curve");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "null dividends");

        $i1 = virtualinvoke r1.<com.opengamma.analytics.financial.equity.variance.pricing.AffineDividends: int getNumberOfDividends()>();

        if $i1 != 0 goto label3;

        $r9 = staticinvoke <com.opengamma.analytics.math.curve.ConstantDoublesCurve: com.opengamma.analytics.math.curve.ConstantDoublesCurve 'from'(double)>(0.0);

        $r10 = staticinvoke <com.opengamma.analytics.financial.model.interestrate.curve.YieldCurve: com.opengamma.analytics.financial.model.interestrate.curve.YieldCurve 'from'(com.opengamma.analytics.math.curve.DoublesCurve)>($r9);

        $r11 = staticinvoke <com.opengamma.analytics.financial.model.interestrate.curve.ForwardCurveAffineDividends: com.opengamma.analytics.math.curve.Curve getForwardCurve(double,com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve,com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve)>(d0, r0, $r10);

        return $r11;

     label3:
        $r7 = new com.opengamma.analytics.financial.model.interestrate.curve.ForwardCurveAffineDividends$1;

        specialinvoke $r7.<com.opengamma.analytics.financial.model.interestrate.curve.ForwardCurveAffineDividends$1: void <init>(com.opengamma.analytics.financial.equity.variance.pricing.AffineDividends,com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve,double)>(r1, r0, d0);

        $r8 = new com.opengamma.analytics.financial.model.interestrate.curve.ForwardCurveAffineDividends$2;

        specialinvoke $r8.<com.opengamma.analytics.financial.model.interestrate.curve.ForwardCurveAffineDividends$2: void <init>(com.opengamma.analytics.math.function.Function1D,double,com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve,com.opengamma.analytics.financial.equity.variance.pricing.AffineDividends)>($r7, d0, r0, r1);

        return $r8;
    }

    public com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve getRiskFreeCurve()
    {
        com.opengamma.analytics.financial.model.interestrate.curve.ForwardCurveAffineDividends r0;
        com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve $r1;

        r0 := @this: com.opengamma.analytics.financial.model.interestrate.curve.ForwardCurveAffineDividends;

        $r1 = r0.<com.opengamma.analytics.financial.model.interestrate.curve.ForwardCurveAffineDividends: com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve _riskFreeCurve>;

        return $r1;
    }

    public com.opengamma.analytics.financial.equity.variance.pricing.AffineDividends getDividends()
    {
        com.opengamma.analytics.financial.model.interestrate.curve.ForwardCurveAffineDividends r0;
        com.opengamma.analytics.financial.equity.variance.pricing.AffineDividends $r1;

        r0 := @this: com.opengamma.analytics.financial.model.interestrate.curve.ForwardCurveAffineDividends;

        $r1 = r0.<com.opengamma.analytics.financial.model.interestrate.curve.ForwardCurveAffineDividends: com.opengamma.analytics.financial.equity.variance.pricing.AffineDividends _dividends>;

        return $r1;
    }

    public com.opengamma.analytics.financial.model.interestrate.curve.ForwardCurveAffineDividends withFractionalShift(double)
    {
        com.opengamma.analytics.financial.model.interestrate.curve.ForwardCurveAffineDividends r0, $r1;
        double d0, $d1, $d2, $d3;
        byte $b0;
        com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve $r2;
        com.opengamma.analytics.financial.equity.variance.pricing.AffineDividends $r3;
        boolean $z0;

        r0 := @this: com.opengamma.analytics.financial.model.interestrate.curve.ForwardCurveAffineDividends;

        d0 := @parameter0: double;

        $b0 = d0 cmpl -1.0;

        if $b0 <= 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z0, "shift must be > -1");

        $r1 = new com.opengamma.analytics.financial.model.interestrate.curve.ForwardCurveAffineDividends;

        $d1 = 1.0 + d0;

        $d2 = virtualinvoke r0.<com.opengamma.analytics.financial.model.interestrate.curve.ForwardCurveAffineDividends: double getSpot()>();

        $d3 = $d1 * $d2;

        $r2 = virtualinvoke r0.<com.opengamma.analytics.financial.model.interestrate.curve.ForwardCurveAffineDividends: com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve getRiskFreeCurve()>();

        $r3 = virtualinvoke r0.<com.opengamma.analytics.financial.model.interestrate.curve.ForwardCurveAffineDividends: com.opengamma.analytics.financial.equity.variance.pricing.AffineDividends getDividends()>();

        specialinvoke $r1.<com.opengamma.analytics.financial.model.interestrate.curve.ForwardCurveAffineDividends: void <init>(double,com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve,com.opengamma.analytics.financial.equity.variance.pricing.AffineDividends)>($d3, $r2, $r3);

        return $r1;
    }

    public int hashCode()
    {
        com.opengamma.analytics.financial.model.interestrate.curve.ForwardCurveAffineDividends r0;
        long l1, $l6, $l7;
        int $i2, $i3, $i4, $i5, $i8, $i9, $i10, $i11, $i12, $i13, i15, i16, i17, i18, i19;
        com.opengamma.analytics.math.curve.Curve $r1, $r2;
        double $d0;
        com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve $r3;
        com.opengamma.analytics.financial.equity.variance.pricing.AffineDividends $r4;

        r0 := @this: com.opengamma.analytics.financial.model.interestrate.curve.ForwardCurveAffineDividends;

        $i2 = 31 * 1;

        $r1 = virtualinvoke r0.<com.opengamma.analytics.financial.model.interestrate.curve.ForwardCurveAffineDividends: com.opengamma.analytics.math.curve.Curve getDriftCurve()>();

        $i3 = virtualinvoke $r1.<com.opengamma.analytics.math.curve.Curve: int hashCode()>();

        i15 = $i2 + $i3;

        $i4 = 31 * i15;

        $r2 = virtualinvoke r0.<com.opengamma.analytics.financial.model.interestrate.curve.ForwardCurveAffineDividends: com.opengamma.analytics.math.curve.Curve getForwardCurve()>();

        $i5 = virtualinvoke $r2.<com.opengamma.analytics.math.curve.Curve: int hashCode()>();

        i16 = $i4 + $i5;

        $d0 = virtualinvoke r0.<com.opengamma.analytics.financial.model.interestrate.curve.ForwardCurveAffineDividends: double getSpot()>();

        l1 = staticinvoke <java.lang.Double: long doubleToLongBits(double)>($d0);

        $i9 = 31 * i16;

        $l6 = l1 >>> 32;

        $l7 = l1 ^ $l6;

        $i8 = (int) $l7;

        i17 = $i9 + $i8;

        $i10 = 31 * i17;

        $r3 = virtualinvoke r0.<com.opengamma.analytics.financial.model.interestrate.curve.ForwardCurveAffineDividends: com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve getRiskFreeCurve()>();

        $i11 = virtualinvoke $r3.<java.lang.Object: int hashCode()>();

        i18 = $i10 + $i11;

        $i12 = 31 * i18;

        $r4 = virtualinvoke r0.<com.opengamma.analytics.financial.model.interestrate.curve.ForwardCurveAffineDividends: com.opengamma.analytics.financial.equity.variance.pricing.AffineDividends getDividends()>();

        $i13 = virtualinvoke $r4.<com.opengamma.analytics.financial.equity.variance.pricing.AffineDividends: int hashCode()>();

        i19 = $i12 + $i13;

        return i19;
    }

    public boolean equals(java.lang.Object)
    {
        com.opengamma.analytics.financial.model.interestrate.curve.ForwardCurveAffineDividends r0, r2;
        java.lang.Object r1;
        java.lang.Class $r3, $r4;
        com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve $r5, $r6;
        boolean $z0, $z1;
        com.opengamma.analytics.financial.equity.variance.pricing.AffineDividends $r7, $r8;
        double $d0, $d1;
        long $l0, $l1;
        byte $b2;

        r0 := @this: com.opengamma.analytics.financial.model.interestrate.curve.ForwardCurveAffineDividends;

        r1 := @parameter0: java.lang.Object;

        if r0 != r1 goto label1;

        return 1;

     label1:
        if r1 != null goto label2;

        return 0;

     label2:
        $r3 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r4 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        if $r3 == $r4 goto label3;

        return 0;

     label3:
        r2 = (com.opengamma.analytics.financial.model.interestrate.curve.ForwardCurveAffineDividends) r1;

        $r5 = virtualinvoke r0.<com.opengamma.analytics.financial.model.interestrate.curve.ForwardCurveAffineDividends: com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve getRiskFreeCurve()>();

        $r6 = virtualinvoke r2.<com.opengamma.analytics.financial.model.interestrate.curve.ForwardCurveAffineDividends: com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve getRiskFreeCurve()>();

        $z0 = staticinvoke <org.apache.commons.lang.ObjectUtils: boolean equals(java.lang.Object,java.lang.Object)>($r5, $r6);

        if $z0 != 0 goto label4;

        return 0;

     label4:
        $r7 = virtualinvoke r0.<com.opengamma.analytics.financial.model.interestrate.curve.ForwardCurveAffineDividends: com.opengamma.analytics.financial.equity.variance.pricing.AffineDividends getDividends()>();

        $r8 = virtualinvoke r2.<com.opengamma.analytics.financial.model.interestrate.curve.ForwardCurveAffineDividends: com.opengamma.analytics.financial.equity.variance.pricing.AffineDividends getDividends()>();

        $z1 = staticinvoke <org.apache.commons.lang.ObjectUtils: boolean equals(java.lang.Object,java.lang.Object)>($r7, $r8);

        if $z1 != 0 goto label5;

        return 0;

     label5:
        $d0 = virtualinvoke r0.<com.opengamma.analytics.financial.model.interestrate.curve.ForwardCurveAffineDividends: double getSpot()>();

        $l0 = staticinvoke <java.lang.Double: long doubleToLongBits(double)>($d0);

        $d1 = virtualinvoke r2.<com.opengamma.analytics.financial.model.interestrate.curve.ForwardCurveAffineDividends: double getSpot()>();

        $l1 = staticinvoke <java.lang.Double: long doubleToLongBits(double)>($d1);

        $b2 = $l0 cmp $l1;

        if $b2 == 0 goto label6;

        return 0;

     label6:
        return 1;
    }

    public volatile com.opengamma.analytics.financial.model.interestrate.curve.ForwardCurve withFractionalShift(double)
    {
        com.opengamma.analytics.financial.model.interestrate.curve.ForwardCurveAffineDividends r0, $r1;
        double d0;

        r0 := @this: com.opengamma.analytics.financial.model.interestrate.curve.ForwardCurveAffineDividends;

        d0 := @parameter0: double;

        $r1 = virtualinvoke r0.<com.opengamma.analytics.financial.model.interestrate.curve.ForwardCurveAffineDividends: com.opengamma.analytics.financial.model.interestrate.curve.ForwardCurveAffineDividends withFractionalShift(double)>(d0);

        return $r1;
    }
}
