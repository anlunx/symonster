public class org.apache.commons.math3.ode.ExpandableStatefulODE extends java.lang.Object
{
    private final org.apache.commons.math3.ode.FirstOrderDifferentialEquations primary;
    private final org.apache.commons.math3.ode.EquationsMapper primaryMapper;
    private double time;
    private final double[] primaryState;
    private final double[] primaryStateDot;
    private java.util.List components;

    public void <init>(org.apache.commons.math3.ode.FirstOrderDifferentialEquations)
    {
        org.apache.commons.math3.ode.ExpandableStatefulODE r0;
        org.apache.commons.math3.ode.FirstOrderDifferentialEquations r1;
        int i0;
        org.apache.commons.math3.ode.EquationsMapper $r2;
        double[] $r3, $r4;
        java.util.ArrayList $r5;

        r0 := @this: org.apache.commons.math3.ode.ExpandableStatefulODE;

        r1 := @parameter0: org.apache.commons.math3.ode.FirstOrderDifferentialEquations;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        i0 = interfaceinvoke r1.<org.apache.commons.math3.ode.FirstOrderDifferentialEquations: int getDimension()>();

        r0.<org.apache.commons.math3.ode.ExpandableStatefulODE: org.apache.commons.math3.ode.FirstOrderDifferentialEquations primary> = r1;

        $r2 = new org.apache.commons.math3.ode.EquationsMapper;

        specialinvoke $r2.<org.apache.commons.math3.ode.EquationsMapper: void <init>(int,int)>(0, i0);

        r0.<org.apache.commons.math3.ode.ExpandableStatefulODE: org.apache.commons.math3.ode.EquationsMapper primaryMapper> = $r2;

        r0.<org.apache.commons.math3.ode.ExpandableStatefulODE: double time> = #NaN;

        $r3 = newarray (double)[i0];

        r0.<org.apache.commons.math3.ode.ExpandableStatefulODE: double[] primaryState> = $r3;

        $r4 = newarray (double)[i0];

        r0.<org.apache.commons.math3.ode.ExpandableStatefulODE: double[] primaryStateDot> = $r4;

        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>()>();

        r0.<org.apache.commons.math3.ode.ExpandableStatefulODE: java.util.List components> = $r5;

        return;
    }

    public org.apache.commons.math3.ode.FirstOrderDifferentialEquations getPrimary()
    {
        org.apache.commons.math3.ode.ExpandableStatefulODE r0;
        org.apache.commons.math3.ode.FirstOrderDifferentialEquations $r1;

        r0 := @this: org.apache.commons.math3.ode.ExpandableStatefulODE;

        $r1 = r0.<org.apache.commons.math3.ode.ExpandableStatefulODE: org.apache.commons.math3.ode.FirstOrderDifferentialEquations primary>;

        return $r1;
    }

    public int getTotalDimension()
    {
        org.apache.commons.math3.ode.ExpandableStatefulODE r0;
        org.apache.commons.math3.ode.EquationsMapper r1, $r7;
        java.util.List $r2, $r3, $r4;
        boolean $z0;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        java.lang.Object $r5;
        org.apache.commons.math3.ode.ExpandableStatefulODE$SecondaryComponent $r6;

        r0 := @this: org.apache.commons.math3.ode.ExpandableStatefulODE;

        $r2 = r0.<org.apache.commons.math3.ode.ExpandableStatefulODE: java.util.List components>;

        $z0 = interfaceinvoke $r2.<java.util.List: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        $r7 = r0.<org.apache.commons.math3.ode.ExpandableStatefulODE: org.apache.commons.math3.ode.EquationsMapper primaryMapper>;

        $i5 = virtualinvoke $r7.<org.apache.commons.math3.ode.EquationsMapper: int getDimension()>();

        return $i5;

     label1:
        $r4 = r0.<org.apache.commons.math3.ode.ExpandableStatefulODE: java.util.List components>;

        $r3 = r0.<org.apache.commons.math3.ode.ExpandableStatefulODE: java.util.List components>;

        $i0 = interfaceinvoke $r3.<java.util.List: int size()>();

        $i1 = $i0 - 1;

        $r5 = interfaceinvoke $r4.<java.util.List: java.lang.Object get(int)>($i1);

        $r6 = (org.apache.commons.math3.ode.ExpandableStatefulODE$SecondaryComponent) $r5;

        r1 = staticinvoke <org.apache.commons.math3.ode.ExpandableStatefulODE$SecondaryComponent: org.apache.commons.math3.ode.EquationsMapper access$000(org.apache.commons.math3.ode.ExpandableStatefulODE$SecondaryComponent)>($r6);

        $i2 = virtualinvoke r1.<org.apache.commons.math3.ode.EquationsMapper: int getFirstIndex()>();

        $i3 = virtualinvoke r1.<org.apache.commons.math3.ode.EquationsMapper: int getDimension()>();

        $i4 = $i2 + $i3;

        return $i4;
    }

    public void computeDerivatives(double, double[], double[]) throws org.apache.commons.math3.exception.MaxCountExceededException, org.apache.commons.math3.exception.DimensionMismatchException
    {
        org.apache.commons.math3.ode.ExpandableStatefulODE r0;
        double d0;
        double[] r1, r2, $r5, $r7, $r8, $r11, $r15, $r17, $r18, $r19, $r20, $r22;
        java.util.Iterator r3;
        org.apache.commons.math3.ode.ExpandableStatefulODE$SecondaryComponent r4;
        org.apache.commons.math3.ode.EquationsMapper $r6, $r12, $r14, $r21;
        org.apache.commons.math3.ode.FirstOrderDifferentialEquations $r9;
        java.util.List $r10;
        boolean $z0;
        java.lang.Object $r13;
        org.apache.commons.math3.ode.SecondaryEquations $r16;

        r0 := @this: org.apache.commons.math3.ode.ExpandableStatefulODE;

        d0 := @parameter0: double;

        r1 := @parameter1: double[];

        r2 := @parameter2: double[];

        $r6 = r0.<org.apache.commons.math3.ode.ExpandableStatefulODE: org.apache.commons.math3.ode.EquationsMapper primaryMapper>;

        $r5 = r0.<org.apache.commons.math3.ode.ExpandableStatefulODE: double[] primaryState>;

        virtualinvoke $r6.<org.apache.commons.math3.ode.EquationsMapper: void extractEquationData(double[],double[])>(r1, $r5);

        $r9 = r0.<org.apache.commons.math3.ode.ExpandableStatefulODE: org.apache.commons.math3.ode.FirstOrderDifferentialEquations primary>;

        $r8 = r0.<org.apache.commons.math3.ode.ExpandableStatefulODE: double[] primaryState>;

        $r7 = r0.<org.apache.commons.math3.ode.ExpandableStatefulODE: double[] primaryStateDot>;

        interfaceinvoke $r9.<org.apache.commons.math3.ode.FirstOrderDifferentialEquations: void computeDerivatives(double,double[],double[])>(d0, $r8, $r7);

        $r10 = r0.<org.apache.commons.math3.ode.ExpandableStatefulODE: java.util.List components>;

        r3 = interfaceinvoke $r10.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r13 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (org.apache.commons.math3.ode.ExpandableStatefulODE$SecondaryComponent) $r13;

        $r14 = staticinvoke <org.apache.commons.math3.ode.ExpandableStatefulODE$SecondaryComponent: org.apache.commons.math3.ode.EquationsMapper access$000(org.apache.commons.math3.ode.ExpandableStatefulODE$SecondaryComponent)>(r4);

        $r15 = staticinvoke <org.apache.commons.math3.ode.ExpandableStatefulODE$SecondaryComponent: double[] access$100(org.apache.commons.math3.ode.ExpandableStatefulODE$SecondaryComponent)>(r4);

        virtualinvoke $r14.<org.apache.commons.math3.ode.EquationsMapper: void extractEquationData(double[],double[])>(r1, $r15);

        $r16 = staticinvoke <org.apache.commons.math3.ode.ExpandableStatefulODE$SecondaryComponent: org.apache.commons.math3.ode.SecondaryEquations access$300(org.apache.commons.math3.ode.ExpandableStatefulODE$SecondaryComponent)>(r4);

        $r17 = r0.<org.apache.commons.math3.ode.ExpandableStatefulODE: double[] primaryState>;

        $r18 = r0.<org.apache.commons.math3.ode.ExpandableStatefulODE: double[] primaryStateDot>;

        $r19 = staticinvoke <org.apache.commons.math3.ode.ExpandableStatefulODE$SecondaryComponent: double[] access$100(org.apache.commons.math3.ode.ExpandableStatefulODE$SecondaryComponent)>(r4);

        $r20 = staticinvoke <org.apache.commons.math3.ode.ExpandableStatefulODE$SecondaryComponent: double[] access$200(org.apache.commons.math3.ode.ExpandableStatefulODE$SecondaryComponent)>(r4);

        interfaceinvoke $r16.<org.apache.commons.math3.ode.SecondaryEquations: void computeDerivatives(double,double[],double[],double[],double[])>(d0, $r17, $r18, $r19, $r20);

        $r21 = staticinvoke <org.apache.commons.math3.ode.ExpandableStatefulODE$SecondaryComponent: org.apache.commons.math3.ode.EquationsMapper access$000(org.apache.commons.math3.ode.ExpandableStatefulODE$SecondaryComponent)>(r4);

        $r22 = staticinvoke <org.apache.commons.math3.ode.ExpandableStatefulODE$SecondaryComponent: double[] access$200(org.apache.commons.math3.ode.ExpandableStatefulODE$SecondaryComponent)>(r4);

        virtualinvoke $r21.<org.apache.commons.math3.ode.EquationsMapper: void insertEquationData(double[],double[])>($r22, r2);

        goto label1;

     label2:
        $r12 = r0.<org.apache.commons.math3.ode.ExpandableStatefulODE: org.apache.commons.math3.ode.EquationsMapper primaryMapper>;

        $r11 = r0.<org.apache.commons.math3.ode.ExpandableStatefulODE: double[] primaryStateDot>;

        virtualinvoke $r12.<org.apache.commons.math3.ode.EquationsMapper: void insertEquationData(double[],double[])>($r11, r2);

        return;
    }

    public int addSecondaryEquations(org.apache.commons.math3.ode.SecondaryEquations)
    {
        org.apache.commons.math3.ode.ExpandableStatefulODE r0;
        org.apache.commons.math3.ode.SecondaryEquations r1;
        org.apache.commons.math3.ode.ExpandableStatefulODE$SecondaryComponent r2, $r9;
        java.util.List $r3, $r4, $r5, $r10, $r11;
        boolean $z0;
        int $i0, $i1, $i2, $i3, $i4, $i5, i6;
        java.lang.Object $r6;
        org.apache.commons.math3.ode.EquationsMapper $r7, $r8;
        java.util.ArrayList $r12;
        org.apache.commons.math3.ode.FirstOrderDifferentialEquations $r13;

        r0 := @this: org.apache.commons.math3.ode.ExpandableStatefulODE;

        r1 := @parameter0: org.apache.commons.math3.ode.SecondaryEquations;

        $r3 = r0.<org.apache.commons.math3.ode.ExpandableStatefulODE: java.util.List components>;

        $z0 = interfaceinvoke $r3.<java.util.List: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        $r12 = new java.util.ArrayList;

        specialinvoke $r12.<java.util.ArrayList: void <init>()>();

        r0.<org.apache.commons.math3.ode.ExpandableStatefulODE: java.util.List components> = $r12;

        $r13 = r0.<org.apache.commons.math3.ode.ExpandableStatefulODE: org.apache.commons.math3.ode.FirstOrderDifferentialEquations primary>;

        i6 = interfaceinvoke $r13.<org.apache.commons.math3.ode.FirstOrderDifferentialEquations: int getDimension()>();

        goto label2;

     label1:
        $r5 = r0.<org.apache.commons.math3.ode.ExpandableStatefulODE: java.util.List components>;

        $r4 = r0.<org.apache.commons.math3.ode.ExpandableStatefulODE: java.util.List components>;

        $i0 = interfaceinvoke $r4.<java.util.List: int size()>();

        $i1 = $i0 - 1;

        $r6 = interfaceinvoke $r5.<java.util.List: java.lang.Object get(int)>($i1);

        r2 = (org.apache.commons.math3.ode.ExpandableStatefulODE$SecondaryComponent) $r6;

        $r7 = staticinvoke <org.apache.commons.math3.ode.ExpandableStatefulODE$SecondaryComponent: org.apache.commons.math3.ode.EquationsMapper access$000(org.apache.commons.math3.ode.ExpandableStatefulODE$SecondaryComponent)>(r2);

        $i2 = virtualinvoke $r7.<org.apache.commons.math3.ode.EquationsMapper: int getFirstIndex()>();

        $r8 = staticinvoke <org.apache.commons.math3.ode.ExpandableStatefulODE$SecondaryComponent: org.apache.commons.math3.ode.EquationsMapper access$000(org.apache.commons.math3.ode.ExpandableStatefulODE$SecondaryComponent)>(r2);

        $i3 = virtualinvoke $r8.<org.apache.commons.math3.ode.EquationsMapper: int getDimension()>();

        i6 = $i2 + $i3;

     label2:
        $r10 = r0.<org.apache.commons.math3.ode.ExpandableStatefulODE: java.util.List components>;

        $r9 = new org.apache.commons.math3.ode.ExpandableStatefulODE$SecondaryComponent;

        specialinvoke $r9.<org.apache.commons.math3.ode.ExpandableStatefulODE$SecondaryComponent: void <init>(org.apache.commons.math3.ode.SecondaryEquations,int)>(r1, i6);

        interfaceinvoke $r10.<java.util.List: boolean add(java.lang.Object)>($r9);

        $r11 = r0.<org.apache.commons.math3.ode.ExpandableStatefulODE: java.util.List components>;

        $i4 = interfaceinvoke $r11.<java.util.List: int size()>();

        $i5 = $i4 - 1;

        return $i5;
    }

    public org.apache.commons.math3.ode.EquationsMapper getPrimaryMapper()
    {
        org.apache.commons.math3.ode.ExpandableStatefulODE r0;
        org.apache.commons.math3.ode.EquationsMapper $r1;

        r0 := @this: org.apache.commons.math3.ode.ExpandableStatefulODE;

        $r1 = r0.<org.apache.commons.math3.ode.ExpandableStatefulODE: org.apache.commons.math3.ode.EquationsMapper primaryMapper>;

        return $r1;
    }

    public org.apache.commons.math3.ode.EquationsMapper[] getSecondaryMappers()
    {
        org.apache.commons.math3.ode.ExpandableStatefulODE r0;
        org.apache.commons.math3.ode.EquationsMapper[] r1;
        java.util.List $r2, $r3;
        int $i0, $i1, i2;
        java.lang.Object $r4;
        org.apache.commons.math3.ode.ExpandableStatefulODE$SecondaryComponent $r5;
        org.apache.commons.math3.ode.EquationsMapper $r6;

        r0 := @this: org.apache.commons.math3.ode.ExpandableStatefulODE;

        $r2 = r0.<org.apache.commons.math3.ode.ExpandableStatefulODE: java.util.List components>;

        $i0 = interfaceinvoke $r2.<java.util.List: int size()>();

        r1 = newarray (org.apache.commons.math3.ode.EquationsMapper)[$i0];

        i2 = 0;

     label1:
        $i1 = lengthof r1;

        if i2 >= $i1 goto label2;

        $r3 = r0.<org.apache.commons.math3.ode.ExpandableStatefulODE: java.util.List components>;

        $r4 = interfaceinvoke $r3.<java.util.List: java.lang.Object get(int)>(i2);

        $r5 = (org.apache.commons.math3.ode.ExpandableStatefulODE$SecondaryComponent) $r4;

        $r6 = staticinvoke <org.apache.commons.math3.ode.ExpandableStatefulODE$SecondaryComponent: org.apache.commons.math3.ode.EquationsMapper access$000(org.apache.commons.math3.ode.ExpandableStatefulODE$SecondaryComponent)>($r5);

        r1[i2] = $r6;

        i2 = i2 + 1;

        goto label1;

     label2:
        return r1;
    }

    public void setTime(double)
    {
        org.apache.commons.math3.ode.ExpandableStatefulODE r0;
        double d0;

        r0 := @this: org.apache.commons.math3.ode.ExpandableStatefulODE;

        d0 := @parameter0: double;

        r0.<org.apache.commons.math3.ode.ExpandableStatefulODE: double time> = d0;

        return;
    }

    public double getTime()
    {
        org.apache.commons.math3.ode.ExpandableStatefulODE r0;
        double $d0;

        r0 := @this: org.apache.commons.math3.ode.ExpandableStatefulODE;

        $d0 = r0.<org.apache.commons.math3.ode.ExpandableStatefulODE: double time>;

        return $d0;
    }

    public void setPrimaryState(double[]) throws org.apache.commons.math3.exception.DimensionMismatchException
    {
        org.apache.commons.math3.ode.ExpandableStatefulODE r0;
        double[] r1, $r2, $r3, $r5;
        int $i0, $i1, $i2, $i3, $i4;
        org.apache.commons.math3.exception.DimensionMismatchException $r4;

        r0 := @this: org.apache.commons.math3.ode.ExpandableStatefulODE;

        r1 := @parameter0: double[];

        $i1 = lengthof r1;

        $r2 = r0.<org.apache.commons.math3.ode.ExpandableStatefulODE: double[] primaryState>;

        $i0 = lengthof $r2;

        if $i1 == $i0 goto label1;

        $r4 = new org.apache.commons.math3.exception.DimensionMismatchException;

        $i4 = lengthof r1;

        $r5 = r0.<org.apache.commons.math3.ode.ExpandableStatefulODE: double[] primaryState>;

        $i3 = lengthof $r5;

        specialinvoke $r4.<org.apache.commons.math3.exception.DimensionMismatchException: void <init>(int,int)>($i4, $i3);

        throw $r4;

     label1:
        $r3 = r0.<org.apache.commons.math3.ode.ExpandableStatefulODE: double[] primaryState>;

        $i2 = lengthof r1;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, 0, $r3, 0, $i2);

        return;
    }

    public double[] getPrimaryState()
    {
        org.apache.commons.math3.ode.ExpandableStatefulODE r0;
        double[] $r1, $r3;
        java.lang.Object $r2;

        r0 := @this: org.apache.commons.math3.ode.ExpandableStatefulODE;

        $r1 = r0.<org.apache.commons.math3.ode.ExpandableStatefulODE: double[] primaryState>;

        $r2 = virtualinvoke $r1.<java.lang.Object: java.lang.Object clone()>();

        $r3 = (double[]) $r2;

        return $r3;
    }

    public double[] getPrimaryStateDot()
    {
        org.apache.commons.math3.ode.ExpandableStatefulODE r0;
        double[] $r1, $r3;
        java.lang.Object $r2;

        r0 := @this: org.apache.commons.math3.ode.ExpandableStatefulODE;

        $r1 = r0.<org.apache.commons.math3.ode.ExpandableStatefulODE: double[] primaryStateDot>;

        $r2 = virtualinvoke $r1.<java.lang.Object: java.lang.Object clone()>();

        $r3 = (double[]) $r2;

        return $r3;
    }

    public void setSecondaryState(int, double[]) throws org.apache.commons.math3.exception.DimensionMismatchException
    {
        org.apache.commons.math3.ode.ExpandableStatefulODE r0;
        int i0, $i1, $i2, $i3, $i4, $i5;
        double[] r1, r2;
        java.util.List $r3;
        java.lang.Object $r4;
        org.apache.commons.math3.ode.ExpandableStatefulODE$SecondaryComponent $r5;
        org.apache.commons.math3.exception.DimensionMismatchException $r6;

        r0 := @this: org.apache.commons.math3.ode.ExpandableStatefulODE;

        i0 := @parameter0: int;

        r1 := @parameter1: double[];

        $r3 = r0.<org.apache.commons.math3.ode.ExpandableStatefulODE: java.util.List components>;

        $r4 = interfaceinvoke $r3.<java.util.List: java.lang.Object get(int)>(i0);

        $r5 = (org.apache.commons.math3.ode.ExpandableStatefulODE$SecondaryComponent) $r4;

        r2 = staticinvoke <org.apache.commons.math3.ode.ExpandableStatefulODE$SecondaryComponent: double[] access$100(org.apache.commons.math3.ode.ExpandableStatefulODE$SecondaryComponent)>($r5);

        $i2 = lengthof r1;

        $i1 = lengthof r2;

        if $i2 == $i1 goto label1;

        $r6 = new org.apache.commons.math3.exception.DimensionMismatchException;

        $i5 = lengthof r1;

        $i4 = lengthof r2;

        specialinvoke $r6.<org.apache.commons.math3.exception.DimensionMismatchException: void <init>(int,int)>($i5, $i4);

        throw $r6;

     label1:
        $i3 = lengthof r1;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, 0, r2, 0, $i3);

        return;
    }

    public double[] getSecondaryState(int)
    {
        org.apache.commons.math3.ode.ExpandableStatefulODE r0;
        int i0;
        java.util.List $r1;
        java.lang.Object $r2, $r5;
        org.apache.commons.math3.ode.ExpandableStatefulODE$SecondaryComponent $r3;
        double[] $r4, $r6;

        r0 := @this: org.apache.commons.math3.ode.ExpandableStatefulODE;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.commons.math3.ode.ExpandableStatefulODE: java.util.List components>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>(i0);

        $r3 = (org.apache.commons.math3.ode.ExpandableStatefulODE$SecondaryComponent) $r2;

        $r4 = staticinvoke <org.apache.commons.math3.ode.ExpandableStatefulODE$SecondaryComponent: double[] access$100(org.apache.commons.math3.ode.ExpandableStatefulODE$SecondaryComponent)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.Object: java.lang.Object clone()>();

        $r6 = (double[]) $r5;

        return $r6;
    }

    public double[] getSecondaryStateDot(int)
    {
        org.apache.commons.math3.ode.ExpandableStatefulODE r0;
        int i0;
        java.util.List $r1;
        java.lang.Object $r2, $r5;
        org.apache.commons.math3.ode.ExpandableStatefulODE$SecondaryComponent $r3;
        double[] $r4, $r6;

        r0 := @this: org.apache.commons.math3.ode.ExpandableStatefulODE;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.commons.math3.ode.ExpandableStatefulODE: java.util.List components>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>(i0);

        $r3 = (org.apache.commons.math3.ode.ExpandableStatefulODE$SecondaryComponent) $r2;

        $r4 = staticinvoke <org.apache.commons.math3.ode.ExpandableStatefulODE$SecondaryComponent: double[] access$200(org.apache.commons.math3.ode.ExpandableStatefulODE$SecondaryComponent)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.Object: java.lang.Object clone()>();

        $r6 = (double[]) $r5;

        return $r6;
    }

    public void setCompleteState(double[]) throws org.apache.commons.math3.exception.DimensionMismatchException
    {
        org.apache.commons.math3.ode.ExpandableStatefulODE r0;
        double[] r1, $r4, $r9;
        java.util.Iterator r2;
        org.apache.commons.math3.ode.ExpandableStatefulODE$SecondaryComponent r3;
        int $i0, $i1, $i2, $i3;
        org.apache.commons.math3.ode.EquationsMapper $r5, $r8;
        java.util.List $r6;
        boolean $z0;
        java.lang.Object $r7;
        org.apache.commons.math3.exception.DimensionMismatchException $r10;

        r0 := @this: org.apache.commons.math3.ode.ExpandableStatefulODE;

        r1 := @parameter0: double[];

        $i0 = lengthof r1;

        $i1 = virtualinvoke r0.<org.apache.commons.math3.ode.ExpandableStatefulODE: int getTotalDimension()>();

        if $i0 == $i1 goto label1;

        $r10 = new org.apache.commons.math3.exception.DimensionMismatchException;

        $i2 = lengthof r1;

        $i3 = virtualinvoke r0.<org.apache.commons.math3.ode.ExpandableStatefulODE: int getTotalDimension()>();

        specialinvoke $r10.<org.apache.commons.math3.exception.DimensionMismatchException: void <init>(int,int)>($i2, $i3);

        throw $r10;

     label1:
        $r5 = r0.<org.apache.commons.math3.ode.ExpandableStatefulODE: org.apache.commons.math3.ode.EquationsMapper primaryMapper>;

        $r4 = r0.<org.apache.commons.math3.ode.ExpandableStatefulODE: double[] primaryState>;

        virtualinvoke $r5.<org.apache.commons.math3.ode.EquationsMapper: void extractEquationData(double[],double[])>(r1, $r4);

        $r6 = r0.<org.apache.commons.math3.ode.ExpandableStatefulODE: java.util.List components>;

        r2 = interfaceinvoke $r6.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r7 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (org.apache.commons.math3.ode.ExpandableStatefulODE$SecondaryComponent) $r7;

        $r8 = staticinvoke <org.apache.commons.math3.ode.ExpandableStatefulODE$SecondaryComponent: org.apache.commons.math3.ode.EquationsMapper access$000(org.apache.commons.math3.ode.ExpandableStatefulODE$SecondaryComponent)>(r3);

        $r9 = staticinvoke <org.apache.commons.math3.ode.ExpandableStatefulODE$SecondaryComponent: double[] access$100(org.apache.commons.math3.ode.ExpandableStatefulODE$SecondaryComponent)>(r3);

        virtualinvoke $r8.<org.apache.commons.math3.ode.EquationsMapper: void extractEquationData(double[],double[])>(r1, $r9);

        goto label2;

     label3:
        return;
    }

    public double[] getCompleteState() throws org.apache.commons.math3.exception.DimensionMismatchException
    {
        org.apache.commons.math3.ode.ExpandableStatefulODE r0;
        double[] r1, $r4, $r9;
        java.util.Iterator r2;
        org.apache.commons.math3.ode.ExpandableStatefulODE$SecondaryComponent r3;
        int $i0;
        org.apache.commons.math3.ode.EquationsMapper $r5, $r8;
        java.util.List $r6;
        boolean $z0;
        java.lang.Object $r7;

        r0 := @this: org.apache.commons.math3.ode.ExpandableStatefulODE;

        $i0 = virtualinvoke r0.<org.apache.commons.math3.ode.ExpandableStatefulODE: int getTotalDimension()>();

        r1 = newarray (double)[$i0];

        $r5 = r0.<org.apache.commons.math3.ode.ExpandableStatefulODE: org.apache.commons.math3.ode.EquationsMapper primaryMapper>;

        $r4 = r0.<org.apache.commons.math3.ode.ExpandableStatefulODE: double[] primaryState>;

        virtualinvoke $r5.<org.apache.commons.math3.ode.EquationsMapper: void insertEquationData(double[],double[])>($r4, r1);

        $r6 = r0.<org.apache.commons.math3.ode.ExpandableStatefulODE: java.util.List components>;

        r2 = interfaceinvoke $r6.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r7 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (org.apache.commons.math3.ode.ExpandableStatefulODE$SecondaryComponent) $r7;

        $r8 = staticinvoke <org.apache.commons.math3.ode.ExpandableStatefulODE$SecondaryComponent: org.apache.commons.math3.ode.EquationsMapper access$000(org.apache.commons.math3.ode.ExpandableStatefulODE$SecondaryComponent)>(r3);

        $r9 = staticinvoke <org.apache.commons.math3.ode.ExpandableStatefulODE$SecondaryComponent: double[] access$100(org.apache.commons.math3.ode.ExpandableStatefulODE$SecondaryComponent)>(r3);

        virtualinvoke $r8.<org.apache.commons.math3.ode.EquationsMapper: void insertEquationData(double[],double[])>($r9, r1);

        goto label1;

     label2:
        return r1;
    }
}
