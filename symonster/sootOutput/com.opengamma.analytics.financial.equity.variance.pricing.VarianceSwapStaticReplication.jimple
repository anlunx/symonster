public class com.opengamma.analytics.financial.equity.variance.pricing.VarianceSwapStaticReplication extends java.lang.Object
{
    private final com.opengamma.analytics.financial.equity.variance.pricing.ExpectedVarianceStaticReplicationCalculator _cal;

    public void <init>()
    {
        com.opengamma.analytics.financial.equity.variance.pricing.VarianceSwapStaticReplication r0;
        com.opengamma.analytics.financial.equity.variance.pricing.ExpectedVarianceStaticReplicationCalculator $r1;

        r0 := @this: com.opengamma.analytics.financial.equity.variance.pricing.VarianceSwapStaticReplication;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new com.opengamma.analytics.financial.equity.variance.pricing.ExpectedVarianceStaticReplicationCalculator;

        specialinvoke $r1.<com.opengamma.analytics.financial.equity.variance.pricing.ExpectedVarianceStaticReplicationCalculator: void <init>()>();

        r0.<com.opengamma.analytics.financial.equity.variance.pricing.VarianceSwapStaticReplication: com.opengamma.analytics.financial.equity.variance.pricing.ExpectedVarianceStaticReplicationCalculator _cal> = $r1;

        return;
    }

    public void <init>(double)
    {
        com.opengamma.analytics.financial.equity.variance.pricing.VarianceSwapStaticReplication r0;
        double d0;
        com.opengamma.analytics.financial.equity.variance.pricing.ExpectedVarianceStaticReplicationCalculator $r1;

        r0 := @this: com.opengamma.analytics.financial.equity.variance.pricing.VarianceSwapStaticReplication;

        d0 := @parameter0: double;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new com.opengamma.analytics.financial.equity.variance.pricing.ExpectedVarianceStaticReplicationCalculator;

        specialinvoke $r1.<com.opengamma.analytics.financial.equity.variance.pricing.ExpectedVarianceStaticReplicationCalculator: void <init>(double)>(d0);

        r0.<com.opengamma.analytics.financial.equity.variance.pricing.VarianceSwapStaticReplication: com.opengamma.analytics.financial.equity.variance.pricing.ExpectedVarianceStaticReplicationCalculator _cal> = $r1;

        return;
    }

    public void <init>(com.opengamma.analytics.math.integration.Integrator1D)
    {
        com.opengamma.analytics.financial.equity.variance.pricing.VarianceSwapStaticReplication r0;
        com.opengamma.analytics.math.integration.Integrator1D r1;
        com.opengamma.analytics.financial.equity.variance.pricing.ExpectedVarianceStaticReplicationCalculator $r2;

        r0 := @this: com.opengamma.analytics.financial.equity.variance.pricing.VarianceSwapStaticReplication;

        r1 := @parameter0: com.opengamma.analytics.math.integration.Integrator1D;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new com.opengamma.analytics.financial.equity.variance.pricing.ExpectedVarianceStaticReplicationCalculator;

        specialinvoke $r2.<com.opengamma.analytics.financial.equity.variance.pricing.ExpectedVarianceStaticReplicationCalculator: void <init>(com.opengamma.analytics.math.integration.Integrator1D)>(r1);

        r0.<com.opengamma.analytics.financial.equity.variance.pricing.VarianceSwapStaticReplication: com.opengamma.analytics.financial.equity.variance.pricing.ExpectedVarianceStaticReplicationCalculator _cal> = $r2;

        return;
    }

    public void <init>(com.opengamma.analytics.math.integration.Integrator1D, double)
    {
        com.opengamma.analytics.financial.equity.variance.pricing.VarianceSwapStaticReplication r0;
        com.opengamma.analytics.math.integration.Integrator1D r1;
        double d0;
        com.opengamma.analytics.financial.equity.variance.pricing.ExpectedVarianceStaticReplicationCalculator $r2;

        r0 := @this: com.opengamma.analytics.financial.equity.variance.pricing.VarianceSwapStaticReplication;

        r1 := @parameter0: com.opengamma.analytics.math.integration.Integrator1D;

        d0 := @parameter1: double;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new com.opengamma.analytics.financial.equity.variance.pricing.ExpectedVarianceStaticReplicationCalculator;

        specialinvoke $r2.<com.opengamma.analytics.financial.equity.variance.pricing.ExpectedVarianceStaticReplicationCalculator: void <init>(com.opengamma.analytics.math.integration.Integrator1D,double)>(r1, d0);

        r0.<com.opengamma.analytics.financial.equity.variance.pricing.VarianceSwapStaticReplication: com.opengamma.analytics.financial.equity.variance.pricing.ExpectedVarianceStaticReplicationCalculator _cal> = $r2;

        return;
    }

    public double presentValue(com.opengamma.analytics.financial.varianceswap.VarianceSwap, com.opengamma.analytics.financial.equity.StaticReplicationDataBundle)
    {
        com.opengamma.analytics.financial.equity.variance.pricing.VarianceSwapStaticReplication r0;
        com.opengamma.analytics.financial.varianceswap.VarianceSwap r1;
        com.opengamma.analytics.financial.equity.StaticReplicationDataBundle r2;
        double d0, d1, d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, d12, $d13, $d14, $d15, d16, $d17, $d18;
        int i0, i1, $i4, $i5, $i6, $i7, $i8, i9;
        byte $b2, $b3;
        com.opengamma.analytics.financial.equity.variance.pricing.RealizedVariance $r5;
        java.lang.Double $r6;
        double[] $r7, $r8;
        boolean $z0;
        com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve $r9;

        r0 := @this: com.opengamma.analytics.financial.equity.variance.pricing.VarianceSwapStaticReplication;

        r1 := @parameter0: com.opengamma.analytics.financial.varianceswap.VarianceSwap;

        r2 := @parameter1: com.opengamma.analytics.financial.equity.StaticReplicationDataBundle;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "VarianceSwap deriv");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, "EquityOptionDataBundle market");

        $d3 = virtualinvoke r1.<com.opengamma.analytics.financial.varianceswap.VarianceSwap: double getTimeToSettlement()>();

        $b2 = $d3 cmpg 0.0;

        if $b2 >= 0 goto label1;

        return 0.0;

     label1:
        $r5 = new com.opengamma.analytics.financial.equity.variance.pricing.RealizedVariance;

        specialinvoke $r5.<com.opengamma.analytics.financial.equity.variance.pricing.RealizedVariance: void <init>()>();

        $r6 = virtualinvoke $r5.<com.opengamma.analytics.financial.equity.variance.pricing.RealizedVariance: java.lang.Double evaluate(com.opengamma.analytics.financial.varianceswap.VarianceSwap)>(r1);

        d0 = virtualinvoke $r6.<java.lang.Double: double doubleValue()>();

        d1 = virtualinvoke r0.<com.opengamma.analytics.financial.equity.variance.pricing.VarianceSwapStaticReplication: double expectedVariance(com.opengamma.analytics.financial.varianceswap.VarianceSwap,com.opengamma.analytics.financial.equity.StaticReplicationDataBundle)>(r1, r2);

        i0 = virtualinvoke r1.<com.opengamma.analytics.financial.varianceswap.VarianceSwap: int getObsExpected()>();

        i1 = virtualinvoke r1.<com.opengamma.analytics.financial.varianceswap.VarianceSwap: int getObsDisrupted()>();

        $d4 = virtualinvoke r1.<com.opengamma.analytics.financial.varianceswap.VarianceSwap: double getTimeToObsStart()>();

        $b3 = $d4 cmpl 0.0;

        if $b3 <= 0 goto label2;

        d12 = d1;

        goto label5;

     label2:
        $r7 = virtualinvoke r1.<com.opengamma.analytics.financial.varianceswap.VarianceSwap: double[] getObservations()>();

        $i4 = lengthof $r7;

        if $i4 <= 0 goto label3;

        $z0 = 1;

        goto label4;

     label3:
        $z0 = 0;

     label4:
        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z0, "presentValue requested after first observation date, yet no observations have been provided.");

        $r8 = virtualinvoke r1.<com.opengamma.analytics.financial.varianceswap.VarianceSwap: double[] getObservations()>();

        i9 = lengthof $r8;

        $i5 = i9 - 1;

        $d5 = (double) $i5;

        $d8 = d0 * $d5;

        $i6 = i0 - i9;

        $i7 = $i6 - i1;

        $d6 = (double) $i7;

        $d7 = d1 * $d6;

        $d10 = $d8 + $d7;

        $i8 = i0 - 1;

        $d9 = (double) $i8;

        d12 = $d10 / $d9;

     label5:
        $d13 = virtualinvoke r1.<com.opengamma.analytics.financial.varianceswap.VarianceSwap: double getVarNotional()>();

        $d14 = virtualinvoke r1.<com.opengamma.analytics.financial.varianceswap.VarianceSwap: double getVarStrike()>();

        $d15 = d12 - $d14;

        d16 = $d13 * $d15;

        $r9 = virtualinvoke r2.<com.opengamma.analytics.financial.equity.StaticReplicationDataBundle: com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve getDiscountCurve()>();

        $d17 = virtualinvoke r1.<com.opengamma.analytics.financial.varianceswap.VarianceSwap: double getTimeToSettlement()>();

        d2 = virtualinvoke $r9.<com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve: double getDiscountFactor(double)>($d17);

        $d18 = d2 * d16;

        return $d18;
    }

    public double expectedVariance(com.opengamma.analytics.financial.varianceswap.VarianceSwap, com.opengamma.analytics.financial.equity.StaticReplicationDataBundle)
    {
        com.opengamma.analytics.financial.equity.variance.pricing.VarianceSwapStaticReplication r0;
        com.opengamma.analytics.financial.varianceswap.VarianceSwap r1;
        com.opengamma.analytics.financial.equity.StaticReplicationDataBundle r2;
        double d0, d1, d2, d3, $d4, $d5, $d6, $d7, $d8;
        byte $b0, $b1;
        boolean $z1;

        r0 := @this: com.opengamma.analytics.financial.equity.variance.pricing.VarianceSwapStaticReplication;

        r1 := @parameter0: com.opengamma.analytics.financial.varianceswap.VarianceSwap;

        r2 := @parameter1: com.opengamma.analytics.financial.equity.StaticReplicationDataBundle;

        specialinvoke r0.<com.opengamma.analytics.financial.equity.variance.pricing.VarianceSwapStaticReplication: void validateData(com.opengamma.analytics.financial.varianceswap.VarianceSwap,com.opengamma.analytics.financial.equity.StaticReplicationDataBundle)>(r1, r2);

        d0 = virtualinvoke r1.<com.opengamma.analytics.financial.varianceswap.VarianceSwap: double getTimeToObsEnd()>();

        $b0 = d0 cmpg 0.0;

        if $b0 > 0 goto label1;

        return 0.0;

     label1:
        d1 = virtualinvoke r1.<com.opengamma.analytics.financial.varianceswap.VarianceSwap: double getTimeToObsStart()>();

        d2 = virtualinvoke r0.<com.opengamma.analytics.financial.equity.variance.pricing.VarianceSwapStaticReplication: double expectedVarianceFromSpot(double,com.opengamma.analytics.financial.equity.StaticReplicationDataBundle)>(d0, r2);

        $b1 = d1 cmpl 0.0;

        if $b1 <= 0 goto label2;

        $z1 = 1;

        goto label3;

     label2:
        $z1 = 0;

     label3:
        if $z1 != 0 goto label4;

        return d2;

     label4:
        d3 = virtualinvoke r0.<com.opengamma.analytics.financial.equity.variance.pricing.VarianceSwapStaticReplication: double expectedVarianceFromSpot(double,com.opengamma.analytics.financial.equity.StaticReplicationDataBundle)>(d1, r2);

        $d5 = d2 * d0;

        $d4 = d3 * d1;

        $d7 = $d5 - $d4;

        $d6 = d0 - d1;

        $d8 = $d7 / $d6;

        return $d8;
    }

    private void validateData(com.opengamma.analytics.financial.varianceswap.VarianceSwap, com.opengamma.analytics.financial.equity.StaticReplicationDataBundle)
    {
        com.opengamma.analytics.financial.equity.variance.pricing.VarianceSwapStaticReplication r0;
        com.opengamma.analytics.financial.varianceswap.VarianceSwap r1;
        com.opengamma.analytics.financial.equity.StaticReplicationDataBundle r2;
        double d0, d1;
        byte $b0;
        boolean $z0;

        r0 := @this: com.opengamma.analytics.financial.equity.variance.pricing.VarianceSwapStaticReplication;

        r1 := @parameter0: com.opengamma.analytics.financial.varianceswap.VarianceSwap;

        r2 := @parameter1: com.opengamma.analytics.financial.equity.StaticReplicationDataBundle;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "VarianceSwap deriv");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, "EquityOptionDataBundle market");

        d0 = virtualinvoke r1.<com.opengamma.analytics.financial.varianceswap.VarianceSwap: double getTimeToObsEnd()>();

        d1 = virtualinvoke r1.<com.opengamma.analytics.financial.varianceswap.VarianceSwap: double getTimeToObsStart()>();

        $b0 = d1 cmpg d0;

        if $b0 >= 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z0, "timeToLastObs is not sufficiently longer than timeToFirstObs");

        return;
    }

    protected double expectedVarianceFromSpot(double, com.opengamma.analytics.financial.equity.StaticReplicationDataBundle)
    {
        com.opengamma.analytics.financial.equity.variance.pricing.VarianceSwapStaticReplication r0;
        double d0, d1, $d2;
        com.opengamma.analytics.financial.equity.StaticReplicationDataBundle r1;
        com.opengamma.analytics.financial.model.volatility.surface.BlackVolatilitySurface r2;
        com.opengamma.analytics.financial.model.interestrate.curve.ForwardCurve $r4;
        com.opengamma.analytics.financial.equity.variance.pricing.VarianceSwapStaticReplication$VarianceCalculator $r5;

        r0 := @this: com.opengamma.analytics.financial.equity.variance.pricing.VarianceSwapStaticReplication;

        d0 := @parameter0: double;

        r1 := @parameter1: com.opengamma.analytics.financial.equity.StaticReplicationDataBundle;

        $r4 = virtualinvoke r1.<com.opengamma.analytics.financial.equity.StaticReplicationDataBundle: com.opengamma.analytics.financial.model.interestrate.curve.ForwardCurve getForwardCurve()>();

        d1 = virtualinvoke $r4.<com.opengamma.analytics.financial.model.interestrate.curve.ForwardCurve: double getForward(double)>(d0);

        r2 = virtualinvoke r1.<com.opengamma.analytics.financial.equity.StaticReplicationDataBundle: com.opengamma.analytics.financial.model.volatility.surface.BlackVolatilitySurface getVolatilitySurface()>();

        $r5 = new com.opengamma.analytics.financial.equity.variance.pricing.VarianceSwapStaticReplication$VarianceCalculator;

        specialinvoke $r5.<com.opengamma.analytics.financial.equity.variance.pricing.VarianceSwapStaticReplication$VarianceCalculator: void <init>(com.opengamma.analytics.financial.equity.variance.pricing.VarianceSwapStaticReplication,double,double)>(r0, d1, d0);

        $d2 = virtualinvoke $r5.<com.opengamma.analytics.financial.equity.variance.pricing.VarianceSwapStaticReplication$VarianceCalculator: double getVariance(com.opengamma.analytics.financial.model.volatility.surface.BlackVolatilitySurface)>(r2);

        return $d2;
    }

    public double expectedVolatility(com.opengamma.analytics.financial.varianceswap.VarianceSwap, com.opengamma.analytics.financial.equity.StaticReplicationDataBundle)
    {
        com.opengamma.analytics.financial.equity.variance.pricing.VarianceSwapStaticReplication r0;
        com.opengamma.analytics.financial.varianceswap.VarianceSwap r1;
        com.opengamma.analytics.financial.equity.StaticReplicationDataBundle r2;
        double d0, $d1;

        r0 := @this: com.opengamma.analytics.financial.equity.variance.pricing.VarianceSwapStaticReplication;

        r1 := @parameter0: com.opengamma.analytics.financial.varianceswap.VarianceSwap;

        r2 := @parameter1: com.opengamma.analytics.financial.equity.StaticReplicationDataBundle;

        d0 = virtualinvoke r0.<com.opengamma.analytics.financial.equity.variance.pricing.VarianceSwapStaticReplication: double expectedVariance(com.opengamma.analytics.financial.varianceswap.VarianceSwap,com.opengamma.analytics.financial.equity.StaticReplicationDataBundle)>(r1, r2);

        $d1 = staticinvoke <java.lang.Math: double sqrt(double)>(d0);

        return $d1;
    }

    static com.opengamma.analytics.financial.equity.variance.pricing.ExpectedVarianceStaticReplicationCalculator access$000(com.opengamma.analytics.financial.equity.variance.pricing.VarianceSwapStaticReplication)
    {
        com.opengamma.analytics.financial.equity.variance.pricing.VarianceSwapStaticReplication r0;
        com.opengamma.analytics.financial.equity.variance.pricing.ExpectedVarianceStaticReplicationCalculator $r1;

        r0 := @parameter0: com.opengamma.analytics.financial.equity.variance.pricing.VarianceSwapStaticReplication;

        $r1 = r0.<com.opengamma.analytics.financial.equity.variance.pricing.VarianceSwapStaticReplication: com.opengamma.analytics.financial.equity.variance.pricing.ExpectedVarianceStaticReplicationCalculator _cal>;

        return $r1;
    }
}
