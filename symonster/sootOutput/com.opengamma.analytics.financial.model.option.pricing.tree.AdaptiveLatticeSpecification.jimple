public class com.opengamma.analytics.financial.model.option.pricing.tree.AdaptiveLatticeSpecification extends com.opengamma.analytics.financial.model.option.pricing.tree.LatticeSpecification
{
    private static final double SHIFT;
    private final com.opengamma.analytics.financial.model.option.pricing.tree.BarrierOptionFunctionProvider _provider;

    public void <init>(com.opengamma.analytics.financial.model.option.pricing.tree.OptionFunctionProvider1D)
    {
        com.opengamma.analytics.financial.model.option.pricing.tree.AdaptiveLatticeSpecification r0;
        com.opengamma.analytics.financial.model.option.pricing.tree.OptionFunctionProvider1D r1;
        boolean $z0, $z1;
        com.opengamma.analytics.financial.model.option.pricing.tree.BarrierOptionFunctionProvider $r3;
        org.apache.commons.lang.NotImplementedException $r4;
        java.lang.IllegalArgumentException $r5;

        r0 := @this: com.opengamma.analytics.financial.model.option.pricing.tree.AdaptiveLatticeSpecification;

        r1 := @parameter0: com.opengamma.analytics.financial.model.option.pricing.tree.OptionFunctionProvider1D;

        specialinvoke r0.<com.opengamma.analytics.financial.model.option.pricing.tree.LatticeSpecification: void <init>()>();

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "provider");

        $z0 = r1 instanceof com.opengamma.analytics.financial.model.option.pricing.tree.BarrierOptionFunctionProvider;

        if $z0 != 0 goto label1;

        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r5;

     label1:
        $z1 = r1 instanceof com.opengamma.analytics.financial.model.option.pricing.tree.DoubleBarrierOptionFunctionProvider;

        if $z1 == 0 goto label2;

        $r4 = new org.apache.commons.lang.NotImplementedException;

        specialinvoke $r4.<org.apache.commons.lang.NotImplementedException: void <init>()>();

        throw $r4;

     label2:
        $r3 = (com.opengamma.analytics.financial.model.option.pricing.tree.BarrierOptionFunctionProvider) r1;

        r0.<com.opengamma.analytics.financial.model.option.pricing.tree.AdaptiveLatticeSpecification: com.opengamma.analytics.financial.model.option.pricing.tree.BarrierOptionFunctionProvider _provider> = $r3;

        return;
    }

    public double[] getParameters(double, double, double, double, double, int, double)
    {
        com.opengamma.analytics.financial.model.option.pricing.tree.AdaptiveLatticeSpecification r0;
        double d0, d1, d2, d3, d4, d5;
        int i0;
        java.lang.IllegalArgumentException $r1;

        r0 := @this: com.opengamma.analytics.financial.model.option.pricing.tree.AdaptiveLatticeSpecification;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        d2 := @parameter2: double;

        d3 := @parameter3: double;

        d4 := @parameter4: double;

        i0 := @parameter5: int;

        d5 := @parameter6: double;

        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("This lattice specification does not cover binomial tree");

        throw $r1;
    }

    public double[] getParametersTrinomial(double, double, double, double, double, int, double)
    {
        com.opengamma.analytics.financial.model.option.pricing.tree.AdaptiveLatticeSpecification r0;
        double d0, d1, d2, d3, d4, d5, d6, d8, d9, d10, d11, d12, d13, d14, d15, d16, d17, d18, d19, d20, d21, d22, $d23, $d24, $d25, $d26, $d27, $d28, $d29, $d30, $d31, $d32, $d33, $d34, $d35, $d36, $d37, $d38, $d39, $d40, $d41, $d42, $d43, $d44, $d45;
        int i0, i1;
        com.opengamma.analytics.financial.model.option.pricing.tree.BarrierOptionFunctionProvider$BarrierTypes r1, $r4;
        com.opengamma.analytics.financial.model.option.pricing.tree.BarrierOptionFunctionProvider $r2, $r3;
        long $l2;
        double[] $r5;

        r0 := @this: com.opengamma.analytics.financial.model.option.pricing.tree.AdaptiveLatticeSpecification;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        d2 := @parameter2: double;

        d3 := @parameter3: double;

        d4 := @parameter4: double;

        i0 := @parameter5: int;

        d5 := @parameter6: double;

        $r2 = r0.<com.opengamma.analytics.financial.model.option.pricing.tree.AdaptiveLatticeSpecification: com.opengamma.analytics.financial.model.option.pricing.tree.BarrierOptionFunctionProvider _provider>;

        d6 = virtualinvoke $r2.<com.opengamma.analytics.financial.model.option.pricing.tree.BarrierOptionFunctionProvider: double getBarrier()>();

        $r3 = r0.<com.opengamma.analytics.financial.model.option.pricing.tree.AdaptiveLatticeSpecification: com.opengamma.analytics.financial.model.option.pricing.tree.BarrierOptionFunctionProvider _provider>;

        r1 = virtualinvoke $r3.<com.opengamma.analytics.financial.model.option.pricing.tree.BarrierOptionFunctionProvider: com.opengamma.analytics.financial.model.option.pricing.tree.BarrierOptionFunctionProvider$BarrierTypes getBarrierType()>();

        $r4 = <com.opengamma.analytics.financial.model.option.pricing.tree.BarrierOptionFunctionProvider$BarrierTypes: com.opengamma.analytics.financial.model.option.pricing.tree.BarrierOptionFunctionProvider$BarrierTypes UpAndOut>;

        if r1 != $r4 goto label1;

        $d45 = 1.0;

        goto label2;

     label1:
        $d45 = -1.0;

     label2:
        $d23 = $d45 * 1.0E-12;

        d8 = d6 + $d23;

        d9 = d3 * d3;

        $d24 = 0.5 * d9;

        d10 = d4 - $d24;

        d11 = d10 * d5;

        d12 = d11 * d11;

        d13 = staticinvoke <java.lang.Math: double sqrt(double)>(d5);

        $d25 = staticinvoke <java.lang.Math: double sqrt(double)>(3.0);

        $d26 = d3 * $d25;

        d14 = $d26 * d13;

        $d27 = d0 / d6;

        $d28 = staticinvoke <java.lang.Math: double log(double)>($d27);

        $d29 = $d28 / d14;

        $l2 = staticinvoke <java.lang.Math: long round(double)>($d29);

        i1 = (int) $l2;

        $d30 = d8 / d0;

        $d31 = staticinvoke <java.lang.Math: double log(double)>($d30);

        $d32 = (double) i1;

        $d33 = $d32 * d3;

        $d34 = $d33 * d13;

        $d35 = $d31 / $d34;

        d15 = staticinvoke <java.lang.Math: double abs(double)>($d35);

        $d36 = d3 * d15;

        d16 = $d36 * d13;

        d17 = staticinvoke <java.lang.Math: double exp(double)>(d16);

        $d37 = neg d16;

        d18 = staticinvoke <java.lang.Math: double exp(double)>($d37);

        $d38 = d9 * d5;

        $d39 = $d38 + d12;

        $d40 = $d39 / d16;

        d19 = $d40 / d16;

        $d41 = d11 / d16;

        $d42 = d19 + $d41;

        d20 = 0.5 * $d42;

        d21 = 1.0 - d19;

        $d43 = d11 / d16;

        $d44 = d19 - $d43;

        d22 = 0.5 * $d44;

        $r5 = newarray (double)[6];

        $r5[0] = d17;

        $r5[1] = 1.0;

        $r5[2] = d18;

        $r5[3] = d20;

        $r5[4] = d21;

        $r5[5] = d22;

        return $r5;
    }

    public static void <clinit>()
    {
        <com.opengamma.analytics.financial.model.option.pricing.tree.AdaptiveLatticeSpecification: double SHIFT> = 1.0E-12;

        return;
    }
}
