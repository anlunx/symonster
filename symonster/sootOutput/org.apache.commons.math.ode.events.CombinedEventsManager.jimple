public class org.apache.commons.math.ode.events.CombinedEventsManager extends java.lang.Object
{
    private final java.util.List states;
    private org.apache.commons.math.ode.events.EventState first;
    private boolean initialized;

    public void <init>()
    {
        org.apache.commons.math.ode.events.CombinedEventsManager r0;
        java.util.ArrayList $r1;

        r0 := @this: org.apache.commons.math.ode.events.CombinedEventsManager;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        r0.<org.apache.commons.math.ode.events.CombinedEventsManager: java.util.List states> = $r1;

        r0.<org.apache.commons.math.ode.events.CombinedEventsManager: org.apache.commons.math.ode.events.EventState first> = null;

        r0.<org.apache.commons.math.ode.events.CombinedEventsManager: boolean initialized> = 0;

        return;
    }

    public void addEventHandler(org.apache.commons.math.ode.events.EventHandler, double, double, int)
    {
        org.apache.commons.math.ode.events.CombinedEventsManager r0;
        org.apache.commons.math.ode.events.EventHandler r1;
        double d0, d1;
        int i0;
        org.apache.commons.math.ode.events.EventState $r2;
        java.util.List $r3;

        r0 := @this: org.apache.commons.math.ode.events.CombinedEventsManager;

        r1 := @parameter0: org.apache.commons.math.ode.events.EventHandler;

        d0 := @parameter1: double;

        d1 := @parameter2: double;

        i0 := @parameter3: int;

        $r3 = r0.<org.apache.commons.math.ode.events.CombinedEventsManager: java.util.List states>;

        $r2 = new org.apache.commons.math.ode.events.EventState;

        specialinvoke $r2.<org.apache.commons.math.ode.events.EventState: void <init>(org.apache.commons.math.ode.events.EventHandler,double,double,int)>(r1, d0, d1, i0);

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>($r2);

        return;
    }

    public java.util.Collection getEventsHandlers()
    {
        org.apache.commons.math.ode.events.CombinedEventsManager r0;
        java.util.Iterator r2;
        org.apache.commons.math.ode.events.EventState r3;
        java.util.ArrayList $r4;
        java.util.List $r5;
        boolean $z0;
        java.util.Collection $r6;
        java.lang.Object $r7;
        org.apache.commons.math.ode.events.EventHandler $r8;

        r0 := @this: org.apache.commons.math.ode.events.CombinedEventsManager;

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        $r5 = r0.<org.apache.commons.math.ode.events.CombinedEventsManager: java.util.List states>;

        r2 = interfaceinvoke $r5.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r7 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (org.apache.commons.math.ode.events.EventState) $r7;

        $r8 = virtualinvoke r3.<org.apache.commons.math.ode.events.EventState: org.apache.commons.math.ode.events.EventHandler getEventHandler()>();

        interfaceinvoke $r4.<java.util.List: boolean add(java.lang.Object)>($r8);

        goto label1;

     label2:
        $r6 = staticinvoke <java.util.Collections: java.util.Collection unmodifiableCollection(java.util.Collection)>($r4);

        return $r6;
    }

    public void clearEventsHandlers()
    {
        org.apache.commons.math.ode.events.CombinedEventsManager r0;
        java.util.List $r1;

        r0 := @this: org.apache.commons.math.ode.events.CombinedEventsManager;

        $r1 = r0.<org.apache.commons.math.ode.events.CombinedEventsManager: java.util.List states>;

        interfaceinvoke $r1.<java.util.List: void clear()>();

        return;
    }

    public java.util.Collection getEventsStates()
    {
        org.apache.commons.math.ode.events.CombinedEventsManager r0;
        java.util.List $r1;

        r0 := @this: org.apache.commons.math.ode.events.CombinedEventsManager;

        $r1 = r0.<org.apache.commons.math.ode.events.CombinedEventsManager: java.util.List states>;

        return $r1;
    }

    public boolean isEmpty()
    {
        org.apache.commons.math.ode.events.CombinedEventsManager r0;
        java.util.List $r1;
        boolean $z0;

        r0 := @this: org.apache.commons.math.ode.events.CombinedEventsManager;

        $r1 = r0.<org.apache.commons.math.ode.events.CombinedEventsManager: java.util.List states>;

        $z0 = interfaceinvoke $r1.<java.util.List: boolean isEmpty()>();

        return $z0;
    }

    public boolean evaluateStep(org.apache.commons.math.ode.sampling.StepInterpolator) throws org.apache.commons.math.ode.DerivativeException, org.apache.commons.math.ode.IntegratorException
    {
        org.apache.commons.math.ode.events.CombinedEventsManager r0;
        org.apache.commons.math.ode.sampling.StepInterpolator r1;
        java.util.List $r2, $r3, $r9;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;
        org.apache.commons.math.ode.events.EventState $r4, $r6, $r7, $r8, r17, r19;
        java.lang.Object $r5, $r10;
        double $d0, $d1, $d2, $d3;
        byte $b0, $b1;
        org.apache.commons.math.ConvergenceException $r11;
        org.apache.commons.math.ode.IntegratorException $r12, $r14;
        org.apache.commons.math.ode.events.EventException $r13;
        org.apache.commons.math.ode.DerivativeException $r15;
        java.util.Iterator r16, r18;
        java.lang.Throwable r21;

        r0 := @this: org.apache.commons.math.ode.events.CombinedEventsManager;

        r1 := @parameter0: org.apache.commons.math.ode.sampling.StepInterpolator;

     label01:
        r0.<org.apache.commons.math.ode.events.CombinedEventsManager: org.apache.commons.math.ode.events.EventState first> = null;

        $r2 = r0.<org.apache.commons.math.ode.events.CombinedEventsManager: java.util.List states>;

        $z0 = interfaceinvoke $r2.<java.util.List: boolean isEmpty()>();

        if $z0 == 0 goto label03;

     label02:
        return 0;

     label03:
        $z1 = r0.<org.apache.commons.math.ode.events.CombinedEventsManager: boolean initialized>;

        if $z1 != 0 goto label06;

        $r9 = r0.<org.apache.commons.math.ode.events.CombinedEventsManager: java.util.List states>;

        r16 = interfaceinvoke $r9.<java.util.List: java.util.Iterator iterator()>();

     label04:
        $z4 = interfaceinvoke r16.<java.util.Iterator: boolean hasNext()>();

        if $z4 == 0 goto label05;

        $r10 = interfaceinvoke r16.<java.util.Iterator: java.lang.Object next()>();

        r17 = (org.apache.commons.math.ode.events.EventState) $r10;

        virtualinvoke r17.<org.apache.commons.math.ode.events.EventState: void reinitializeBegin(org.apache.commons.math.ode.sampling.StepInterpolator)>(r1);

        goto label04;

     label05:
        r0.<org.apache.commons.math.ode.events.CombinedEventsManager: boolean initialized> = 1;

     label06:
        $r3 = r0.<org.apache.commons.math.ode.events.CombinedEventsManager: java.util.List states>;

        r18 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();

     label07:
        $z6 = interfaceinvoke r18.<java.util.Iterator: boolean hasNext()>();

        if $z6 == 0 goto label11;

        $r5 = interfaceinvoke r18.<java.util.Iterator: java.lang.Object next()>();

        r19 = (org.apache.commons.math.ode.events.EventState) $r5;

        $z2 = virtualinvoke r19.<org.apache.commons.math.ode.events.EventState: boolean evaluateStep(org.apache.commons.math.ode.sampling.StepInterpolator)>(r1);

        if $z2 == 0 goto label10;

        $r6 = r0.<org.apache.commons.math.ode.events.CombinedEventsManager: org.apache.commons.math.ode.events.EventState first>;

        if $r6 != null goto label08;

        r0.<org.apache.commons.math.ode.events.CombinedEventsManager: org.apache.commons.math.ode.events.EventState first> = r19;

        goto label10;

     label08:
        $z3 = interfaceinvoke r1.<org.apache.commons.math.ode.sampling.StepInterpolator: boolean isForward()>();

        if $z3 == 0 goto label09;

        $d2 = virtualinvoke r19.<org.apache.commons.math.ode.events.EventState: double getEventTime()>();

        $r8 = r0.<org.apache.commons.math.ode.events.CombinedEventsManager: org.apache.commons.math.ode.events.EventState first>;

        $d3 = virtualinvoke $r8.<org.apache.commons.math.ode.events.EventState: double getEventTime()>();

        $b1 = $d2 cmpg $d3;

        if $b1 >= 0 goto label10;

        r0.<org.apache.commons.math.ode.events.CombinedEventsManager: org.apache.commons.math.ode.events.EventState first> = r19;

        goto label10;

     label09:
        $d0 = virtualinvoke r19.<org.apache.commons.math.ode.events.EventState: double getEventTime()>();

        $r7 = r0.<org.apache.commons.math.ode.events.CombinedEventsManager: org.apache.commons.math.ode.events.EventState first>;

        $d1 = virtualinvoke $r7.<org.apache.commons.math.ode.events.EventState: double getEventTime()>();

        $b0 = $d0 cmpl $d1;

        if $b0 <= 0 goto label10;

        r0.<org.apache.commons.math.ode.events.CombinedEventsManager: org.apache.commons.math.ode.events.EventState first> = r19;

     label10:
        goto label07;

     label11:
        $r4 = r0.<org.apache.commons.math.ode.events.CombinedEventsManager: org.apache.commons.math.ode.events.EventState first>;

        if $r4 == null goto label12;

        $z7 = 1;

        goto label13;

     label12:
        $z7 = 0;

     label13:
        return $z7;

     label14:
        $r13 := @caughtexception;

        r21 = virtualinvoke $r13.<org.apache.commons.math.ode.events.EventException: java.lang.Throwable getCause()>();

        if r21 == null goto label15;

        $z5 = r21 instanceof org.apache.commons.math.ode.DerivativeException;

        if $z5 == 0 goto label15;

        $r15 = (org.apache.commons.math.ode.DerivativeException) r21;

        throw $r15;

     label15:
        $r14 = new org.apache.commons.math.ode.IntegratorException;

        specialinvoke $r14.<org.apache.commons.math.ode.IntegratorException: void <init>(java.lang.Throwable)>($r13);

        throw $r14;

     label16:
        $r11 := @caughtexception;

        $r12 = new org.apache.commons.math.ode.IntegratorException;

        specialinvoke $r12.<org.apache.commons.math.ode.IntegratorException: void <init>(java.lang.Throwable)>($r11);

        throw $r12;

        catch org.apache.commons.math.ode.events.EventException from label01 to label02 with label14;
        catch org.apache.commons.math.ode.events.EventException from label03 to label13 with label14;
        catch org.apache.commons.math.ConvergenceException from label01 to label02 with label16;
        catch org.apache.commons.math.ConvergenceException from label03 to label13 with label16;
    }

    public double getEventTime()
    {
        org.apache.commons.math.ode.events.CombinedEventsManager r0;
        org.apache.commons.math.ode.events.EventState $r1, $r2;
        double $d0;

        r0 := @this: org.apache.commons.math.ode.events.CombinedEventsManager;

        $r1 = r0.<org.apache.commons.math.ode.events.CombinedEventsManager: org.apache.commons.math.ode.events.EventState first>;

        if $r1 != null goto label1;

        $d0 = #NaN;

        goto label2;

     label1:
        $r2 = r0.<org.apache.commons.math.ode.events.CombinedEventsManager: org.apache.commons.math.ode.events.EventState first>;

        $d0 = virtualinvoke $r2.<org.apache.commons.math.ode.events.EventState: double getEventTime()>();

     label2:
        return $d0;
    }

    public void stepAccepted(double, double[]) throws org.apache.commons.math.ode.IntegratorException
    {
        org.apache.commons.math.ode.events.CombinedEventsManager r0;
        double d0;
        double[] r1;
        org.apache.commons.math.ode.events.EventState r2;
        java.util.List $r3;
        boolean $z0;
        java.lang.Object $r4;
        org.apache.commons.math.ode.events.EventException $r5;
        org.apache.commons.math.ode.IntegratorException $r6;
        java.util.Iterator r7;

        r0 := @this: org.apache.commons.math.ode.events.CombinedEventsManager;

        d0 := @parameter0: double;

        r1 := @parameter1: double[];

     label1:
        $r3 = r0.<org.apache.commons.math.ode.events.CombinedEventsManager: java.util.List states>;

        r7 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r4 = interfaceinvoke r7.<java.util.Iterator: java.lang.Object next()>();

        r2 = (org.apache.commons.math.ode.events.EventState) $r4;

        virtualinvoke r2.<org.apache.commons.math.ode.events.EventState: void stepAccepted(double,double[])>(d0, r1);

        goto label2;

     label3:
        goto label5;

     label4:
        $r5 := @caughtexception;

        $r6 = new org.apache.commons.math.ode.IntegratorException;

        specialinvoke $r6.<org.apache.commons.math.ode.IntegratorException: void <init>(java.lang.Throwable)>($r5);

        throw $r6;

     label5:
        return;

        catch org.apache.commons.math.ode.events.EventException from label1 to label3 with label4;
    }

    public boolean stop()
    {
        org.apache.commons.math.ode.events.CombinedEventsManager r0;
        java.util.Iterator r1;
        org.apache.commons.math.ode.events.EventState r2;
        java.util.List $r3;
        boolean $z0, $z1;
        java.lang.Object $r4;

        r0 := @this: org.apache.commons.math.ode.events.CombinedEventsManager;

        $r3 = r0.<org.apache.commons.math.ode.events.CombinedEventsManager: java.util.List states>;

        r1 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r4 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r2 = (org.apache.commons.math.ode.events.EventState) $r4;

        $z1 = virtualinvoke r2.<org.apache.commons.math.ode.events.EventState: boolean stop()>();

        if $z1 == 0 goto label2;

        return 1;

     label2:
        goto label1;

     label3:
        return 0;
    }

    public boolean reset(double, double[]) throws org.apache.commons.math.ode.IntegratorException
    {
        org.apache.commons.math.ode.events.CombinedEventsManager r0;
        double d0;
        double[] r1;
        java.util.Iterator r2;
        org.apache.commons.math.ode.events.EventState r3;
        java.util.List $r4;
        boolean $z0, $z1, z2;
        java.lang.Object $r5;
        org.apache.commons.math.ode.events.EventException $r6;
        org.apache.commons.math.ode.IntegratorException $r7;

        r0 := @this: org.apache.commons.math.ode.events.CombinedEventsManager;

        d0 := @parameter0: double;

        r1 := @parameter1: double[];

     label1:
        z2 = 0;

        $r4 = r0.<org.apache.commons.math.ode.events.CombinedEventsManager: java.util.List states>;

        r2 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r5 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (org.apache.commons.math.ode.events.EventState) $r5;

        $z1 = virtualinvoke r3.<org.apache.commons.math.ode.events.EventState: boolean reset(double,double[])>(d0, r1);

        if $z1 == 0 goto label3;

        z2 = 1;

     label3:
        goto label2;

     label4:
        return z2;

     label5:
        $r6 := @caughtexception;

        $r7 = new org.apache.commons.math.ode.IntegratorException;

        specialinvoke $r7.<org.apache.commons.math.ode.IntegratorException: void <init>(java.lang.Throwable)>($r6);

        throw $r7;

        catch org.apache.commons.math.ode.events.EventException from label1 to label4 with label5;
    }
}
