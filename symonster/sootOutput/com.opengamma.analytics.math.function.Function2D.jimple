public abstract class com.opengamma.analytics.math.function.Function2D extends java.lang.Object implements com.opengamma.analytics.math.function.Function
{

    public void <init>()
    {
        com.opengamma.analytics.math.function.Function2D r0;

        r0 := @this: com.opengamma.analytics.math.function.Function2D;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public transient java.lang.Object evaluate(java.lang.Object[])
    {
        com.opengamma.analytics.math.function.Function2D r0;
        java.lang.Object[] r1;
        int $i0;
        java.lang.Object $r3, $r4, $r5;
        boolean $z0;

        r0 := @this: com.opengamma.analytics.math.function.Function2D;

        r1 := @parameter0: java.lang.Object[];

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object[] noNulls(java.lang.Object[],java.lang.String)>(r1, "parameter list");

        $i0 = lengthof r1;

        if $i0 != 2 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z0, "parameter list must be of length 2");

        $r4 = r1[0];

        $r3 = r1[1];

        $r5 = virtualinvoke r0.<com.opengamma.analytics.math.function.Function2D: java.lang.Object evaluate(java.lang.Object,java.lang.Object)>($r4, $r3);

        return $r5;
    }

    public abstract java.lang.Object evaluate(java.lang.Object, java.lang.Object);
}
