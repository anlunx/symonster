public class com.opengamma.analytics.financial.interestrate.ContinuousInterestRate extends com.opengamma.analytics.financial.interestrate.InterestRate
{

    public void <init>(double)
    {
        com.opengamma.analytics.financial.interestrate.ContinuousInterestRate r0;
        double d0;

        r0 := @this: com.opengamma.analytics.financial.interestrate.ContinuousInterestRate;

        d0 := @parameter0: double;

        specialinvoke r0.<com.opengamma.analytics.financial.interestrate.InterestRate: void <init>(double)>(d0);

        return;
    }

    public com.opengamma.analytics.financial.interestrate.InterestRate fromContinuous(com.opengamma.analytics.financial.interestrate.ContinuousInterestRate)
    {
        com.opengamma.analytics.financial.interestrate.ContinuousInterestRate r0, r1, $r2;
        double $d0;

        r0 := @this: com.opengamma.analytics.financial.interestrate.ContinuousInterestRate;

        r1 := @parameter0: com.opengamma.analytics.financial.interestrate.ContinuousInterestRate;

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object)>(r1);

        $r2 = new com.opengamma.analytics.financial.interestrate.ContinuousInterestRate;

        $d0 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.ContinuousInterestRate: double getRate()>();

        specialinvoke $r2.<com.opengamma.analytics.financial.interestrate.ContinuousInterestRate: void <init>(double)>($d0);

        return $r2;
    }

    public double fromContinuousDerivative(com.opengamma.analytics.financial.interestrate.ContinuousInterestRate)
    {
        com.opengamma.analytics.financial.interestrate.ContinuousInterestRate r0, r1;

        r0 := @this: com.opengamma.analytics.financial.interestrate.ContinuousInterestRate;

        r1 := @parameter0: com.opengamma.analytics.financial.interestrate.ContinuousInterestRate;

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object)>(r1);

        return 1.0;
    }

    public com.opengamma.analytics.financial.interestrate.InterestRate fromPeriodic(com.opengamma.analytics.financial.interestrate.PeriodicInterestRate)
    {
        com.opengamma.analytics.financial.interestrate.ContinuousInterestRate r0, $r2;
        com.opengamma.analytics.financial.interestrate.PeriodicInterestRate r1;
        int i0;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6;

        r0 := @this: com.opengamma.analytics.financial.interestrate.ContinuousInterestRate;

        r1 := @parameter0: com.opengamma.analytics.financial.interestrate.PeriodicInterestRate;

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object)>(r1);

        i0 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.PeriodicInterestRate: int getCompoundingPeriodsPerYear()>();

        $r2 = new com.opengamma.analytics.financial.interestrate.ContinuousInterestRate;

        $d0 = (double) i0;

        $d1 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.PeriodicInterestRate: double getRate()>();

        $d2 = (double) i0;

        $d3 = $d1 / $d2;

        $d4 = 1.0 + $d3;

        $d5 = staticinvoke <java.lang.Math: double log(double)>($d4);

        $d6 = $d0 * $d5;

        specialinvoke $r2.<com.opengamma.analytics.financial.interestrate.ContinuousInterestRate: void <init>(double)>($d6);

        return $r2;
    }

    public double getDiscountFactor(double)
    {
        com.opengamma.analytics.financial.interestrate.ContinuousInterestRate r0;
        double d0, $d1, $d2, $d3, $d4;

        r0 := @this: com.opengamma.analytics.financial.interestrate.ContinuousInterestRate;

        d0 := @parameter0: double;

        $d1 = virtualinvoke r0.<com.opengamma.analytics.financial.interestrate.ContinuousInterestRate: double getRate()>();

        $d2 = neg $d1;

        $d3 = $d2 * d0;

        $d4 = staticinvoke <java.lang.Math: double exp(double)>($d3);

        return $d4;
    }

    public com.opengamma.analytics.financial.interestrate.ContinuousInterestRate toContinuous()
    {
        com.opengamma.analytics.financial.interestrate.ContinuousInterestRate r0, $r1;
        double $d0;

        r0 := @this: com.opengamma.analytics.financial.interestrate.ContinuousInterestRate;

        $r1 = new com.opengamma.analytics.financial.interestrate.ContinuousInterestRate;

        $d0 = virtualinvoke r0.<com.opengamma.analytics.financial.interestrate.ContinuousInterestRate: double getRate()>();

        specialinvoke $r1.<com.opengamma.analytics.financial.interestrate.ContinuousInterestRate: void <init>(double)>($d0);

        return $r1;
    }

    public com.opengamma.analytics.financial.interestrate.PeriodicInterestRate toPeriodic(int)
    {
        com.opengamma.analytics.financial.interestrate.ContinuousInterestRate r0;
        int i0;
        com.opengamma.analytics.financial.interestrate.PeriodicInterestRate $r1;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6;

        r0 := @this: com.opengamma.analytics.financial.interestrate.ContinuousInterestRate;

        i0 := @parameter0: int;

        staticinvoke <com.opengamma.util.ArgumentChecker: int notNegativeOrZero(int,java.lang.String)>(i0, "compounding periods per year");

        $r1 = new com.opengamma.analytics.financial.interestrate.PeriodicInterestRate;

        $d0 = (double) i0;

        $d1 = virtualinvoke r0.<com.opengamma.analytics.financial.interestrate.ContinuousInterestRate: double getRate()>();

        $d2 = (double) i0;

        $d3 = $d1 / $d2;

        $d4 = staticinvoke <java.lang.Math: double exp(double)>($d3);

        $d5 = $d4 - 1.0;

        $d6 = $d0 * $d5;

        specialinvoke $r1.<com.opengamma.analytics.financial.interestrate.PeriodicInterestRate: void <init>(double,int)>($d6, i0);

        return $r1;
    }

    public java.lang.String toString()
    {
        com.opengamma.analytics.financial.interestrate.ContinuousInterestRate r0;
        java.lang.StringBuilder $r1, $r2, $r3, $r4;
        double $d0;
        java.lang.String $r5;

        r0 := @this: com.opengamma.analytics.financial.interestrate.ContinuousInterestRate;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Continuous[r = ");

        $d0 = virtualinvoke r0.<com.opengamma.analytics.financial.interestrate.ContinuousInterestRate: double getRate()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r5;
    }
}
