public class com.opengamma.analytics.financial.model.volatility.smile.fitting.sabr.EuropeanOptionPrices extends java.lang.Object
{
    private final double[] _expiries;
    private final double[][] _strikes;
    private final double[][] _otmPrices;
    private final int _nExpiries;

    public void <init>(double[], double[][], double[][])
    {
        com.opengamma.analytics.financial.model.volatility.smile.fitting.sabr.EuropeanOptionPrices r0;
        double[] r1, $r15, $r18, $r19, $r21, $r22, $r23, $r25, $r26, $r27, $r31, $r33;
        double[][] r2, r3, $r16, $r17, $r20, $r24;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, i21, $i22, i23;
        java.lang.Object[] $r7, $r9, $r12, $r28;
        java.lang.Integer $r8, $r10, $r11, $r13, $r14, $r29, $r32, $r34;
        double $d0;
        java.lang.Double $r30;
        boolean $z0, $z1, $z2, $z3;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.smile.fitting.sabr.EuropeanOptionPrices;

        r1 := @parameter0: double[];

        r2 := @parameter1: double[][];

        r3 := @parameter2: double[][];

        specialinvoke r0.<java.lang.Object: void <init>()>();

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "expiries");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, "strikes");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r3, "otmPrices");

        $i0 = lengthof r1;

        r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.sabr.EuropeanOptionPrices: int _nExpiries> = $i0;

        $i1 = r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.sabr.EuropeanOptionPrices: int _nExpiries>;

        if $i1 <= 0 goto label01;

        $z0 = 1;

        goto label02;

     label01:
        $z0 = 0;

     label02:
        $r7 = newarray (java.lang.Object)[1];

        $i2 = r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.sabr.EuropeanOptionPrices: int _nExpiries>;

        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        $r7[0] = $r8;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String,java.lang.Object[])>($z0, "Need at least one expiry, given {} ", $r7);

        $i4 = lengthof r2;

        $i3 = r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.sabr.EuropeanOptionPrices: int _nExpiries>;

        if $i4 != $i3 goto label03;

        $z1 = 1;

        goto label04;

     label03:
        $z1 = 0;

     label04:
        $r9 = newarray (java.lang.Object)[2];

        $i5 = lengthof r2;

        $r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i5);

        $r9[0] = $r10;

        $i6 = r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.sabr.EuropeanOptionPrices: int _nExpiries>;

        $r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i6);

        $r9[1] = $r11;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String,java.lang.Object[])>($z1, "number of strike strips ({}) not equal to number of expiries({})", $r9);

        $i8 = lengthof r3;

        $i7 = r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.sabr.EuropeanOptionPrices: int _nExpiries>;

        if $i8 != $i7 goto label05;

        $z2 = 1;

        goto label06;

     label05:
        $z2 = 0;

     label06:
        $r12 = newarray (java.lang.Object)[2];

        $i9 = lengthof r2;

        $r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i9);

        $r12[0] = $r13;

        $i10 = r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.sabr.EuropeanOptionPrices: int _nExpiries>;

        $r14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i10);

        $r12[1] = $r14;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String,java.lang.Object[])>($z2, "number of price strips ({}) not equal to number of expiries({})", $r12);

        i21 = 0;

     label07:
        $i22 = r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.sabr.EuropeanOptionPrices: int _nExpiries>;

        if i21 >= $i22 goto label10;

        $r26 = r2[i21];

        $i18 = lengthof $r26;

        $r27 = r3[i21];

        $i17 = lengthof $r27;

        if $i18 != $i17 goto label08;

        $z3 = 1;

        goto label09;

     label08:
        $z3 = 0;

     label09:
        $r28 = newarray (java.lang.Object)[4];

        $r29 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i21);

        $r28[0] = $r29;

        $d0 = r1[i21];

        $r30 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        $r28[1] = $r30;

        $r31 = r3[i21];

        $i19 = lengthof $r31;

        $r32 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i19);

        $r28[2] = $r32;

        $r33 = r2[i21];

        $i20 = lengthof $r33;

        $r34 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i20);

        $r28[3] = $r34;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String,java.lang.Object[])>($z3, "number of prices and strikes in strip #{} (expiry = {}) do not match. {} prices and {} strikes", $r28);

        i21 = i21 + 1;

        goto label07;

     label10:
        $i11 = r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.sabr.EuropeanOptionPrices: int _nExpiries>;

        $r15 = staticinvoke <java.util.Arrays: double[] copyOf(double[],int)>(r1, $i11);

        r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.sabr.EuropeanOptionPrices: double[] _expiries> = $r15;

        $i12 = r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.sabr.EuropeanOptionPrices: int _nExpiries>;

        $r16 = newarray (double[])[$i12];

        r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.sabr.EuropeanOptionPrices: double[][] _strikes> = $r16;

        $i13 = r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.sabr.EuropeanOptionPrices: int _nExpiries>;

        $r17 = newarray (double[])[$i13];

        r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.sabr.EuropeanOptionPrices: double[][] _otmPrices> = $r17;

        i23 = 0;

     label11:
        $i14 = r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.sabr.EuropeanOptionPrices: int _nExpiries>;

        if i23 >= $i14 goto label12;

        $r20 = r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.sabr.EuropeanOptionPrices: double[][] _strikes>;

        $r19 = r2[i23];

        $r18 = r2[i23];

        $i15 = lengthof $r18;

        $r21 = staticinvoke <java.util.Arrays: double[] copyOf(double[],int)>($r19, $i15);

        $r20[i23] = $r21;

        $r24 = r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.sabr.EuropeanOptionPrices: double[][] _otmPrices>;

        $r23 = r3[i23];

        $r22 = r3[i23];

        $i16 = lengthof $r22;

        $r25 = staticinvoke <java.util.Arrays: double[] copyOf(double[],int)>($r23, $i16);

        $r24[i23] = $r25;

        i23 = i23 + 1;

        goto label11;

     label12:
        return;
    }

    public int getNumExpiries()
    {
        com.opengamma.analytics.financial.model.volatility.smile.fitting.sabr.EuropeanOptionPrices r0;
        int $i0;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.smile.fitting.sabr.EuropeanOptionPrices;

        $i0 = r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.sabr.EuropeanOptionPrices: int _nExpiries>;

        return $i0;
    }

    public double[] getExpiries()
    {
        com.opengamma.analytics.financial.model.volatility.smile.fitting.sabr.EuropeanOptionPrices r0;
        double[] $r1;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.smile.fitting.sabr.EuropeanOptionPrices;

        $r1 = r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.sabr.EuropeanOptionPrices: double[] _expiries>;

        return $r1;
    }

    public double[][] getStrikes()
    {
        com.opengamma.analytics.financial.model.volatility.smile.fitting.sabr.EuropeanOptionPrices r0;
        double[][] $r1;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.smile.fitting.sabr.EuropeanOptionPrices;

        $r1 = r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.sabr.EuropeanOptionPrices: double[][] _strikes>;

        return $r1;
    }

    public double[][] getOTMPrices()
    {
        com.opengamma.analytics.financial.model.volatility.smile.fitting.sabr.EuropeanOptionPrices r0;
        double[][] $r1;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.smile.fitting.sabr.EuropeanOptionPrices;

        $r1 = r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.sabr.EuropeanOptionPrices: double[][] _otmPrices>;

        return $r1;
    }

    public com.opengamma.analytics.financial.model.volatility.smile.fitting.sabr.EuropeanOptionPrices withBumpedPoint(int, int, double)
    {
        com.opengamma.analytics.financial.model.volatility.smile.fitting.sabr.EuropeanOptionPrices r0, $r13;
        int i0, i1, $i2, $i3, $i4;
        double d0, $d1, $d2, $d3, $d4, $d5, $d6;
        double[] r1, $r6, $r11, $r12, $r15;
        double[][] r2, $r5, $r9, $r10, $r14;
        boolean $z0, $z1;
        java.lang.Object[] $r3, $r7;
        java.lang.Integer $r4, $r8;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.smile.fitting.sabr.EuropeanOptionPrices;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        d0 := @parameter2: double;

        $i2 = r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.sabr.EuropeanOptionPrices: int _nExpiries>;

        $d2 = (double) $i2;

        $d1 = (double) i0;

        $z0 = staticinvoke <com.opengamma.util.ArgumentChecker: boolean isInRangeExcludingHigh(double,double,double)>(0.0, $d2, $d1);

        $r3 = newarray (java.lang.Object)[1];

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r3[0] = $r4;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String,java.lang.Object[])>($z0, "Invalid index for expiry; {}", $r3);

        $r5 = r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.sabr.EuropeanOptionPrices: double[][] _strikes>;

        $r6 = $r5[i0];

        $i3 = lengthof $r6;

        $d4 = (double) $i3;

        $d3 = (double) i1;

        $z1 = staticinvoke <com.opengamma.util.ArgumentChecker: boolean isInRangeExcludingHigh(double,double,double)>(0.0, $d4, $d3);

        $r7 = newarray (java.lang.Object)[1];

        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        $r7[0] = $r8;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String,java.lang.Object[])>($z1, "Invalid index for strike; {}", $r7);

        $r9 = r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.sabr.EuropeanOptionPrices: double[][] _otmPrices>;

        $r12 = $r9[i0];

        $r10 = r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.sabr.EuropeanOptionPrices: double[][] _otmPrices>;

        $r11 = $r10[i0];

        $i4 = lengthof $r11;

        r1 = staticinvoke <java.util.Arrays: double[] copyOf(double[],int)>($r12, $i4);

        $d5 = r1[i1];

        $d6 = $d5 + d0;

        r1[i1] = $d6;

        r2 = r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.sabr.EuropeanOptionPrices: double[][] _otmPrices>;

        r2[i0] = r1;

        $r13 = new com.opengamma.analytics.financial.model.volatility.smile.fitting.sabr.EuropeanOptionPrices;

        $r15 = r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.sabr.EuropeanOptionPrices: double[] _expiries>;

        $r14 = r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.sabr.EuropeanOptionPrices: double[][] _strikes>;

        specialinvoke $r13.<com.opengamma.analytics.financial.model.volatility.smile.fitting.sabr.EuropeanOptionPrices: void <init>(double[],double[][],double[][])>($r15, $r14, r2);

        return $r13;
    }
}
