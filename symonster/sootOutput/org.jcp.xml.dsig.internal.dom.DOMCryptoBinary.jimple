public final class org.jcp.xml.dsig.internal.dom.DOMCryptoBinary extends org.jcp.xml.dsig.internal.dom.DOMStructure
{
    private final java.math.BigInteger bigNum;
    private final java.lang.String value;

    public void <init>(java.math.BigInteger)
    {
        org.jcp.xml.dsig.internal.dom.DOMCryptoBinary r0;
        java.math.BigInteger r1;
        java.lang.String $r2;
        java.lang.NullPointerException $r3;

        r0 := @this: org.jcp.xml.dsig.internal.dom.DOMCryptoBinary;

        r1 := @parameter0: java.math.BigInteger;

        specialinvoke r0.<org.jcp.xml.dsig.internal.dom.DOMStructure: void <init>()>();

        if r1 != null goto label1;

        $r3 = new java.lang.NullPointerException;

        specialinvoke $r3.<java.lang.NullPointerException: void <init>(java.lang.String)>("bigNum is null");

        throw $r3;

     label1:
        r0.<org.jcp.xml.dsig.internal.dom.DOMCryptoBinary: java.math.BigInteger bigNum> = r1;

        $r2 = staticinvoke <com.sun.org.apache.xml.internal.security.utils.Base64: java.lang.String encode(java.math.BigInteger)>(r1);

        r0.<org.jcp.xml.dsig.internal.dom.DOMCryptoBinary: java.lang.String value> = $r2;

        return;
    }

    public void <init>(org.w3c.dom.Node) throws javax.xml.crypto.MarshalException
    {
        org.jcp.xml.dsig.internal.dom.DOMCryptoBinary r0;
        org.w3c.dom.Node r1;
        java.lang.String $r3;
        org.w3c.dom.Text $r4;
        java.math.BigInteger $r5;
        java.lang.Exception $r6;
        javax.xml.crypto.MarshalException $r7;

        r0 := @this: org.jcp.xml.dsig.internal.dom.DOMCryptoBinary;

        r1 := @parameter0: org.w3c.dom.Node;

        specialinvoke r0.<org.jcp.xml.dsig.internal.dom.DOMStructure: void <init>()>();

        $r3 = interfaceinvoke r1.<org.w3c.dom.Node: java.lang.String getNodeValue()>();

        r0.<org.jcp.xml.dsig.internal.dom.DOMCryptoBinary: java.lang.String value> = $r3;

     label1:
        $r4 = (org.w3c.dom.Text) r1;

        $r5 = staticinvoke <com.sun.org.apache.xml.internal.security.utils.Base64: java.math.BigInteger decodeBigIntegerFromText(org.w3c.dom.Text)>($r4);

        r0.<org.jcp.xml.dsig.internal.dom.DOMCryptoBinary: java.math.BigInteger bigNum> = $r5;

     label2:
        goto label4;

     label3:
        $r6 := @caughtexception;

        $r7 = new javax.xml.crypto.MarshalException;

        specialinvoke $r7.<javax.xml.crypto.MarshalException: void <init>(java.lang.Throwable)>($r6);

        throw $r7;

     label4:
        return;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public java.math.BigInteger getBigNum()
    {
        org.jcp.xml.dsig.internal.dom.DOMCryptoBinary r0;
        java.math.BigInteger $r1;

        r0 := @this: org.jcp.xml.dsig.internal.dom.DOMCryptoBinary;

        $r1 = r0.<org.jcp.xml.dsig.internal.dom.DOMCryptoBinary: java.math.BigInteger bigNum>;

        return $r1;
    }

    public void marshal(org.w3c.dom.Node, java.lang.String, javax.xml.crypto.dom.DOMCryptoContext) throws javax.xml.crypto.MarshalException
    {
        org.jcp.xml.dsig.internal.dom.DOMCryptoBinary r0;
        org.w3c.dom.Node r1;
        java.lang.String r2, $r5;
        javax.xml.crypto.dom.DOMCryptoContext r3;
        org.w3c.dom.Document $r4;
        org.w3c.dom.Text $r6;

        r0 := @this: org.jcp.xml.dsig.internal.dom.DOMCryptoBinary;

        r1 := @parameter0: org.w3c.dom.Node;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: javax.xml.crypto.dom.DOMCryptoContext;

        $r4 = staticinvoke <org.jcp.xml.dsig.internal.dom.DOMUtils: org.w3c.dom.Document getOwnerDocument(org.w3c.dom.Node)>(r1);

        $r5 = r0.<org.jcp.xml.dsig.internal.dom.DOMCryptoBinary: java.lang.String value>;

        $r6 = interfaceinvoke $r4.<org.w3c.dom.Document: org.w3c.dom.Text createTextNode(java.lang.String)>($r5);

        interfaceinvoke r1.<org.w3c.dom.Node: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>($r6);

        return;
    }
}
