public final class com.opengamma.analytics.financial.forex.method.ForexDiscountingMethod extends java.lang.Object implements com.opengamma.analytics.financial.forex.method.ForexPricingMethod
{
    private static final com.opengamma.analytics.financial.forex.method.ForexDiscountingMethod INSTANCE;
    private static final com.opengamma.analytics.financial.interestrate.payments.method.PaymentFixedDiscountingMethod METHOD_PAY;
    private static final com.opengamma.analytics.financial.interestrate.PresentValueCurveSensitivityCalculator PVSC;

    public static com.opengamma.analytics.financial.forex.method.ForexDiscountingMethod getInstance()
    {
        com.opengamma.analytics.financial.forex.method.ForexDiscountingMethod $r0;

        $r0 = <com.opengamma.analytics.financial.forex.method.ForexDiscountingMethod: com.opengamma.analytics.financial.forex.method.ForexDiscountingMethod INSTANCE>;

        return $r0;
    }

    private void <init>()
    {
        com.opengamma.analytics.financial.forex.method.ForexDiscountingMethod r0;

        r0 := @this: com.opengamma.analytics.financial.forex.method.ForexDiscountingMethod;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public com.opengamma.util.money.MultipleCurrencyAmount presentValue(com.opengamma.analytics.financial.forex.derivative.Forex, com.opengamma.analytics.financial.interestrate.YieldCurveBundle)
    {
        com.opengamma.analytics.financial.forex.method.ForexDiscountingMethod r0;
        com.opengamma.analytics.financial.forex.derivative.Forex r1;
        com.opengamma.analytics.financial.interestrate.YieldCurveBundle r2;
        com.opengamma.util.money.CurrencyAmount r3, r4;
        com.opengamma.analytics.financial.interestrate.payments.method.PaymentFixedDiscountingMethod $r5, $r7;
        com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed $r6, $r8;
        com.opengamma.util.money.CurrencyAmount[] $r9;
        com.opengamma.util.money.MultipleCurrencyAmount $r10;

        r0 := @this: com.opengamma.analytics.financial.forex.method.ForexDiscountingMethod;

        r1 := @parameter0: com.opengamma.analytics.financial.forex.derivative.Forex;

        r2 := @parameter1: com.opengamma.analytics.financial.interestrate.YieldCurveBundle;

        $r5 = <com.opengamma.analytics.financial.forex.method.ForexDiscountingMethod: com.opengamma.analytics.financial.interestrate.payments.method.PaymentFixedDiscountingMethod METHOD_PAY>;

        $r6 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed getPaymentCurrency1()>();

        r3 = virtualinvoke $r5.<com.opengamma.analytics.financial.interestrate.payments.method.PaymentFixedDiscountingMethod: com.opengamma.util.money.CurrencyAmount presentValue(com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed,com.opengamma.analytics.financial.interestrate.YieldCurveBundle)>($r6, r2);

        $r7 = <com.opengamma.analytics.financial.forex.method.ForexDiscountingMethod: com.opengamma.analytics.financial.interestrate.payments.method.PaymentFixedDiscountingMethod METHOD_PAY>;

        $r8 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed getPaymentCurrency2()>();

        r4 = virtualinvoke $r7.<com.opengamma.analytics.financial.interestrate.payments.method.PaymentFixedDiscountingMethod: com.opengamma.util.money.CurrencyAmount presentValue(com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed,com.opengamma.analytics.financial.interestrate.YieldCurveBundle)>($r8, r2);

        $r9 = newarray (com.opengamma.util.money.CurrencyAmount)[2];

        $r9[0] = r3;

        $r9[1] = r4;

        $r10 = staticinvoke <com.opengamma.util.money.MultipleCurrencyAmount: com.opengamma.util.money.MultipleCurrencyAmount of(com.opengamma.util.money.CurrencyAmount[])>($r9);

        return $r10;
    }

    public com.opengamma.util.money.MultipleCurrencyAmount presentValue(com.opengamma.analytics.financial.interestrate.InstrumentDerivative, com.opengamma.analytics.financial.interestrate.YieldCurveBundle)
    {
        com.opengamma.analytics.financial.forex.method.ForexDiscountingMethod r0;
        com.opengamma.analytics.financial.interestrate.InstrumentDerivative r1;
        com.opengamma.analytics.financial.interestrate.YieldCurveBundle r2;
        boolean $z0;
        com.opengamma.analytics.financial.forex.derivative.Forex $r3;
        com.opengamma.util.money.MultipleCurrencyAmount $r4;

        r0 := @this: com.opengamma.analytics.financial.forex.method.ForexDiscountingMethod;

        r1 := @parameter0: com.opengamma.analytics.financial.interestrate.InstrumentDerivative;

        r2 := @parameter1: com.opengamma.analytics.financial.interestrate.YieldCurveBundle;

        $z0 = r1 instanceof com.opengamma.analytics.financial.forex.derivative.Forex;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z0, "Derivative should be Forex");

        $r3 = (com.opengamma.analytics.financial.forex.derivative.Forex) r1;

        $r4 = virtualinvoke r0.<com.opengamma.analytics.financial.forex.method.ForexDiscountingMethod: com.opengamma.util.money.MultipleCurrencyAmount presentValue(com.opengamma.analytics.financial.forex.derivative.Forex,com.opengamma.analytics.financial.interestrate.YieldCurveBundle)>($r3, r2);

        return $r4;
    }

    public com.opengamma.util.money.MultipleCurrencyAmount currencyExposure(com.opengamma.analytics.financial.interestrate.InstrumentDerivative, com.opengamma.analytics.financial.interestrate.YieldCurveBundle)
    {
        com.opengamma.analytics.financial.forex.method.ForexDiscountingMethod r0;
        com.opengamma.analytics.financial.interestrate.InstrumentDerivative r1;
        com.opengamma.analytics.financial.interestrate.YieldCurveBundle r2;
        com.opengamma.util.money.MultipleCurrencyAmount $r3;

        r0 := @this: com.opengamma.analytics.financial.forex.method.ForexDiscountingMethod;

        r1 := @parameter0: com.opengamma.analytics.financial.interestrate.InstrumentDerivative;

        r2 := @parameter1: com.opengamma.analytics.financial.interestrate.YieldCurveBundle;

        $r3 = virtualinvoke r0.<com.opengamma.analytics.financial.forex.method.ForexDiscountingMethod: com.opengamma.util.money.MultipleCurrencyAmount presentValue(com.opengamma.analytics.financial.interestrate.InstrumentDerivative,com.opengamma.analytics.financial.interestrate.YieldCurveBundle)>(r1, r2);

        return $r3;
    }

    public double forwardForexRate(com.opengamma.analytics.financial.forex.derivative.Forex, com.opengamma.analytics.financial.interestrate.YieldCurveBundle)
    {
        com.opengamma.analytics.financial.forex.method.ForexDiscountingMethod r0;
        com.opengamma.analytics.financial.forex.derivative.Forex r1;
        com.opengamma.analytics.financial.interestrate.YieldCurveBundle r2;
        double d0, d1, d2, $d3, $d4, $d5, $d6;
        com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed $r3, $r6;
        java.lang.String $r4, $r7;
        com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve $r5, $r8;
        com.opengamma.analytics.financial.forex.method.FXMatrix $r9;
        com.opengamma.util.money.Currency $r10, $r11;

        r0 := @this: com.opengamma.analytics.financial.forex.method.ForexDiscountingMethod;

        r1 := @parameter0: com.opengamma.analytics.financial.forex.derivative.Forex;

        r2 := @parameter1: com.opengamma.analytics.financial.interestrate.YieldCurveBundle;

        $r3 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed getPaymentCurrency2()>();

        $r4 = virtualinvoke $r3.<com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed: java.lang.String getFundingCurveName()>();

        $r5 = virtualinvoke r2.<com.opengamma.analytics.financial.interestrate.YieldCurveBundle: com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve getCurve(java.lang.String)>($r4);

        $d3 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.Forex: double getPaymentTime()>();

        d0 = virtualinvoke $r5.<com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve: double getDiscountFactor(double)>($d3);

        $r6 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed getPaymentCurrency1()>();

        $r7 = virtualinvoke $r6.<com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed: java.lang.String getFundingCurveName()>();

        $r8 = virtualinvoke r2.<com.opengamma.analytics.financial.interestrate.YieldCurveBundle: com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve getCurve(java.lang.String)>($r7);

        $d4 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.Forex: double getPaymentTime()>();

        d1 = virtualinvoke $r8.<com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve: double getDiscountFactor(double)>($d4);

        $r9 = virtualinvoke r2.<com.opengamma.analytics.financial.interestrate.YieldCurveBundle: com.opengamma.analytics.financial.forex.method.FXMatrix getFxRates()>();

        $r10 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.util.money.Currency getCurrency1()>();

        $r11 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.util.money.Currency getCurrency2()>();

        d2 = virtualinvoke $r9.<com.opengamma.analytics.financial.forex.method.FXMatrix: double getFxRate(com.opengamma.util.money.Currency,com.opengamma.util.money.Currency)>($r10, $r11);

        $d5 = d2 * d1;

        $d6 = $d5 / d0;

        return $d6;
    }

    public com.opengamma.analytics.financial.forex.method.MultipleCurrencyInterestRateCurveSensitivity presentValueCurveSensitivity(com.opengamma.analytics.financial.forex.derivative.Forex, com.opengamma.analytics.financial.interestrate.YieldCurveBundle)
    {
        com.opengamma.analytics.financial.forex.method.ForexDiscountingMethod r0;
        com.opengamma.analytics.financial.forex.derivative.Forex r1;
        com.opengamma.analytics.financial.interestrate.YieldCurveBundle r2;
        com.opengamma.analytics.financial.interestrate.InterestRateCurveSensitivity $r5, $r10;
        com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed $r6, $r11;
        com.opengamma.analytics.financial.interestrate.PresentValueCurveSensitivityCalculator $r7, $r12;
        java.lang.Object $r8, $r13;
        java.util.Map $r9, $r14;
        com.opengamma.util.money.Currency $r15, $r16;
        com.opengamma.analytics.financial.forex.method.MultipleCurrencyInterestRateCurveSensitivity r17, r18;

        r0 := @this: com.opengamma.analytics.financial.forex.method.ForexDiscountingMethod;

        r1 := @parameter0: com.opengamma.analytics.financial.forex.derivative.Forex;

        r2 := @parameter1: com.opengamma.analytics.financial.interestrate.YieldCurveBundle;

        $r5 = new com.opengamma.analytics.financial.interestrate.InterestRateCurveSensitivity;

        $r6 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed getPaymentCurrency1()>();

        $r7 = <com.opengamma.analytics.financial.forex.method.ForexDiscountingMethod: com.opengamma.analytics.financial.interestrate.PresentValueCurveSensitivityCalculator PVSC>;

        $r8 = virtualinvoke $r6.<com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed: java.lang.Object accept(com.opengamma.analytics.financial.interestrate.InstrumentDerivativeVisitor,java.lang.Object)>($r7, r2);

        $r9 = (java.util.Map) $r8;

        specialinvoke $r5.<com.opengamma.analytics.financial.interestrate.InterestRateCurveSensitivity: void <init>(java.util.Map)>($r9);

        $r10 = new com.opengamma.analytics.financial.interestrate.InterestRateCurveSensitivity;

        $r11 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed getPaymentCurrency2()>();

        $r12 = <com.opengamma.analytics.financial.forex.method.ForexDiscountingMethod: com.opengamma.analytics.financial.interestrate.PresentValueCurveSensitivityCalculator PVSC>;

        $r13 = virtualinvoke $r11.<com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed: java.lang.Object accept(com.opengamma.analytics.financial.interestrate.InstrumentDerivativeVisitor,java.lang.Object)>($r12, r2);

        $r14 = (java.util.Map) $r13;

        specialinvoke $r10.<com.opengamma.analytics.financial.interestrate.InterestRateCurveSensitivity: void <init>(java.util.Map)>($r14);

        $r15 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.util.money.Currency getCurrency1()>();

        r17 = staticinvoke <com.opengamma.analytics.financial.forex.method.MultipleCurrencyInterestRateCurveSensitivity: com.opengamma.analytics.financial.forex.method.MultipleCurrencyInterestRateCurveSensitivity of(com.opengamma.util.money.Currency,com.opengamma.analytics.financial.interestrate.InterestRateCurveSensitivity)>($r15, $r5);

        $r16 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.util.money.Currency getCurrency2()>();

        r18 = virtualinvoke r17.<com.opengamma.analytics.financial.forex.method.MultipleCurrencyInterestRateCurveSensitivity: com.opengamma.analytics.financial.forex.method.MultipleCurrencyInterestRateCurveSensitivity plus(com.opengamma.util.money.Currency,com.opengamma.analytics.financial.interestrate.InterestRateCurveSensitivity)>($r16, $r10);

        return r18;
    }

    public com.opengamma.analytics.financial.forex.method.MultipleCurrencyInterestRateCurveSensitivity presentValueCurveSensitivity(com.opengamma.analytics.financial.interestrate.InstrumentDerivative, com.opengamma.analytics.financial.interestrate.YieldCurveBundle)
    {
        com.opengamma.analytics.financial.forex.method.ForexDiscountingMethod r0;
        com.opengamma.analytics.financial.interestrate.InstrumentDerivative r1;
        com.opengamma.analytics.financial.interestrate.YieldCurveBundle r2;
        boolean $z0;
        com.opengamma.analytics.financial.forex.derivative.Forex $r3;
        com.opengamma.analytics.financial.forex.method.MultipleCurrencyInterestRateCurveSensitivity $r4;

        r0 := @this: com.opengamma.analytics.financial.forex.method.ForexDiscountingMethod;

        r1 := @parameter0: com.opengamma.analytics.financial.interestrate.InstrumentDerivative;

        r2 := @parameter1: com.opengamma.analytics.financial.interestrate.YieldCurveBundle;

        $z0 = r1 instanceof com.opengamma.analytics.financial.forex.derivative.Forex;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z0, "Forex");

        $r3 = (com.opengamma.analytics.financial.forex.derivative.Forex) r1;

        $r4 = virtualinvoke r0.<com.opengamma.analytics.financial.forex.method.ForexDiscountingMethod: com.opengamma.analytics.financial.forex.method.MultipleCurrencyInterestRateCurveSensitivity presentValueCurveSensitivity(com.opengamma.analytics.financial.forex.derivative.Forex,com.opengamma.analytics.financial.interestrate.YieldCurveBundle)>($r3, r2);

        return $r4;
    }

    static void <clinit>()
    {
        com.opengamma.analytics.financial.forex.method.ForexDiscountingMethod $r0;
        com.opengamma.analytics.financial.interestrate.payments.method.PaymentFixedDiscountingMethod $r1;
        com.opengamma.analytics.financial.interestrate.PresentValueCurveSensitivityCalculator $r2;

        $r0 = new com.opengamma.analytics.financial.forex.method.ForexDiscountingMethod;

        specialinvoke $r0.<com.opengamma.analytics.financial.forex.method.ForexDiscountingMethod: void <init>()>();

        <com.opengamma.analytics.financial.forex.method.ForexDiscountingMethod: com.opengamma.analytics.financial.forex.method.ForexDiscountingMethod INSTANCE> = $r0;

        $r1 = staticinvoke <com.opengamma.analytics.financial.interestrate.payments.method.PaymentFixedDiscountingMethod: com.opengamma.analytics.financial.interestrate.payments.method.PaymentFixedDiscountingMethod getInstance()>();

        <com.opengamma.analytics.financial.forex.method.ForexDiscountingMethod: com.opengamma.analytics.financial.interestrate.payments.method.PaymentFixedDiscountingMethod METHOD_PAY> = $r1;

        $r2 = staticinvoke <com.opengamma.analytics.financial.interestrate.PresentValueCurveSensitivityCalculator: com.opengamma.analytics.financial.interestrate.PresentValueCurveSensitivityCalculator getInstance()>();

        <com.opengamma.analytics.financial.forex.method.ForexDiscountingMethod: com.opengamma.analytics.financial.interestrate.PresentValueCurveSensitivityCalculator PVSC> = $r2;

        return;
    }
}
