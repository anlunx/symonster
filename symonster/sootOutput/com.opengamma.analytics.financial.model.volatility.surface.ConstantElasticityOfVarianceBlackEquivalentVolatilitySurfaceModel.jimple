public class com.opengamma.analytics.financial.model.volatility.surface.ConstantElasticityOfVarianceBlackEquivalentVolatilitySurfaceModel extends java.lang.Object implements com.opengamma.analytics.financial.model.volatility.surface.VolatilitySurfaceModel
{
    private static final org.slf4j.Logger s_logger;

    public void <init>()
    {
        com.opengamma.analytics.financial.model.volatility.surface.ConstantElasticityOfVarianceBlackEquivalentVolatilitySurfaceModel r0;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.surface.ConstantElasticityOfVarianceBlackEquivalentVolatilitySurfaceModel;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public com.opengamma.analytics.financial.model.volatility.surface.VolatilitySurface getSurface(java.util.Map, com.opengamma.analytics.financial.model.option.definition.ConstantElasticityOfVarianceModelDataBundle)
    {
        com.opengamma.analytics.financial.model.volatility.surface.ConstantElasticityOfVarianceBlackEquivalentVolatilitySurfaceModel r0;
        java.util.Map r1;
        com.opengamma.analytics.financial.model.option.definition.ConstantElasticityOfVarianceModelDataBundle r2;
        com.opengamma.analytics.financial.model.option.definition.OptionDefinition r3;
        double d0, d1, d2, d3, d4, d5, d6, d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21, $d22, $d23, $d24, $d25, $d26, $d27, $d28, $d29;
        int $i0;
        java.util.Set $r5;
        java.util.Iterator $r6;
        java.lang.Object $r7;
        java.lang.Double $r8;
        org.threeten.bp.ZonedDateTime $r9;
        com.opengamma.analytics.financial.model.volatility.surface.VolatilitySurface $r10;
        com.opengamma.analytics.math.surface.ConstantDoublesSurface $r11;
        org.slf4j.Logger $r12;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.surface.ConstantElasticityOfVarianceBlackEquivalentVolatilitySurfaceModel;

        r1 := @parameter0: java.util.Map;

        r2 := @parameter1: com.opengamma.analytics.financial.model.option.definition.ConstantElasticityOfVarianceModelDataBundle;

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object,java.lang.String)>(r1, "option data");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.util.Map notEmpty(java.util.Map,java.lang.String)>(r1, "option data");

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object,java.lang.String)>(r2, "data");

        $i0 = interfaceinvoke r1.<java.util.Map: int size()>();

        if $i0 <= 1 goto label1;

        $r12 = <com.opengamma.analytics.financial.model.volatility.surface.ConstantElasticityOfVarianceBlackEquivalentVolatilitySurfaceModel: org.slf4j.Logger s_logger>;

        interfaceinvoke $r12.<org.slf4j.Logger: void warn(java.lang.String)>("Have more than one option: only using the first");

     label1:
        $r5 = interfaceinvoke r1.<java.util.Map: java.util.Set keySet()>();

        $r6 = interfaceinvoke $r5.<java.util.Set: java.util.Iterator iterator()>();

        $r7 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        r3 = (com.opengamma.analytics.financial.model.option.definition.OptionDefinition) $r7;

        $r8 = virtualinvoke r3.<com.opengamma.analytics.financial.model.option.definition.OptionDefinition: java.lang.Double getStrike()>();

        d0 = virtualinvoke $r8.<java.lang.Double: double doubleValue()>();

        $r9 = virtualinvoke r2.<com.opengamma.analytics.financial.model.option.definition.ConstantElasticityOfVarianceModelDataBundle: org.threeten.bp.ZonedDateTime getDate()>();

        d1 = virtualinvoke r3.<com.opengamma.analytics.financial.model.option.definition.OptionDefinition: double getTimeToExpiry(org.threeten.bp.ZonedDateTime)>($r9);

        d2 = virtualinvoke r2.<com.opengamma.analytics.financial.model.option.definition.ConstantElasticityOfVarianceModelDataBundle: double getVolatility(double,double)>(d1, d0);

        d3 = virtualinvoke r2.<com.opengamma.analytics.financial.model.option.definition.ConstantElasticityOfVarianceModelDataBundle: double getElasticity()>();

        d4 = virtualinvoke r2.<com.opengamma.analytics.financial.model.option.definition.ConstantElasticityOfVarianceModelDataBundle: double getSpot()>();

        $d8 = d4 + d0;

        d5 = 0.5 * $d8;

        d6 = 1.0 - d3;

        $d9 = 2.0 + d3;

        $d11 = d6 * $d9;

        $d10 = d5 - d0;

        $d13 = $d11 * $d10;

        $d12 = d5 - d0;

        $d14 = $d13 * $d12;

        $d15 = $d14 / 24.0;

        $d16 = $d15 / d5;

        $d17 = $d16 / d5;

        $d23 = 1.0 + $d17;

        $d18 = d6 * d6;

        $d19 = $d18 * d2;

        $d20 = $d19 * d2;

        $d21 = $d20 * d1;

        $d24 = $d21 / 24.0;

        $d22 = 2.0 * d6;

        $d25 = staticinvoke <java.lang.Math: double pow(double,double)>(d5, $d22);

        $d26 = $d24 / $d25;

        $d27 = $d23 + $d26;

        $d28 = d2 * $d27;

        $d29 = staticinvoke <java.lang.Math: double pow(double,double)>(d5, d6);

        d7 = $d28 / $d29;

        $r10 = new com.opengamma.analytics.financial.model.volatility.surface.VolatilitySurface;

        $r11 = staticinvoke <com.opengamma.analytics.math.surface.ConstantDoublesSurface: com.opengamma.analytics.math.surface.ConstantDoublesSurface 'from'(double)>(d7);

        specialinvoke $r10.<com.opengamma.analytics.financial.model.volatility.surface.VolatilitySurface: void <init>(com.opengamma.analytics.math.surface.Surface)>($r11);

        return $r10;
    }

    public volatile com.opengamma.analytics.financial.model.volatility.surface.VolatilitySurface getSurface(java.lang.Object, java.lang.Object)
    {
        com.opengamma.analytics.financial.model.volatility.surface.ConstantElasticityOfVarianceBlackEquivalentVolatilitySurfaceModel r0;
        java.lang.Object r1, r2;
        com.opengamma.analytics.financial.model.option.definition.ConstantElasticityOfVarianceModelDataBundle $r3;
        java.util.Map $r4;
        com.opengamma.analytics.financial.model.volatility.surface.VolatilitySurface $r5;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.surface.ConstantElasticityOfVarianceBlackEquivalentVolatilitySurfaceModel;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r4 = (java.util.Map) r1;

        $r3 = (com.opengamma.analytics.financial.model.option.definition.ConstantElasticityOfVarianceModelDataBundle) r2;

        $r5 = virtualinvoke r0.<com.opengamma.analytics.financial.model.volatility.surface.ConstantElasticityOfVarianceBlackEquivalentVolatilitySurfaceModel: com.opengamma.analytics.financial.model.volatility.surface.VolatilitySurface getSurface(java.util.Map,com.opengamma.analytics.financial.model.option.definition.ConstantElasticityOfVarianceModelDataBundle)>($r4, $r3);

        return $r5;
    }

    static void <clinit>()
    {
        org.slf4j.Logger $r0;

        $r0 = staticinvoke <org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>(class "com/opengamma/analytics/financial/model/volatility/surface/ConstantElasticityOfVarianceBlackEquivalentVolatilitySurfaceModel");

        <com.opengamma.analytics.financial.model.volatility.surface.ConstantElasticityOfVarianceBlackEquivalentVolatilitySurfaceModel: org.slf4j.Logger s_logger> = $r0;

        return;
    }
}
