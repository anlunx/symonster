public class org.apache.commons.math3.optimization.univariate.UnivariateMultiStartOptimizer extends java.lang.Object implements org.apache.commons.math3.optimization.univariate.BaseUnivariateOptimizer
{
    private final org.apache.commons.math3.optimization.univariate.BaseUnivariateOptimizer optimizer;
    private int maxEvaluations;
    private int totalEvaluations;
    private int starts;
    private org.apache.commons.math3.random.RandomGenerator generator;
    private org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair[] optima;

    public void <init>(org.apache.commons.math3.optimization.univariate.BaseUnivariateOptimizer, int, org.apache.commons.math3.random.RandomGenerator)
    {
        org.apache.commons.math3.optimization.univariate.UnivariateMultiStartOptimizer r0;
        org.apache.commons.math3.optimization.univariate.BaseUnivariateOptimizer r1;
        int i0;
        org.apache.commons.math3.random.RandomGenerator r2;
        org.apache.commons.math3.exception.NullArgumentException $r3;
        org.apache.commons.math3.exception.NotStrictlyPositiveException $r4;
        java.lang.Integer $r5;

        r0 := @this: org.apache.commons.math3.optimization.univariate.UnivariateMultiStartOptimizer;

        r1 := @parameter0: org.apache.commons.math3.optimization.univariate.BaseUnivariateOptimizer;

        i0 := @parameter1: int;

        r2 := @parameter2: org.apache.commons.math3.random.RandomGenerator;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        if r1 == null goto label1;

        if r2 != null goto label2;

     label1:
        $r3 = new org.apache.commons.math3.exception.NullArgumentException;

        specialinvoke $r3.<org.apache.commons.math3.exception.NullArgumentException: void <init>()>();

        throw $r3;

     label2:
        if i0 >= 1 goto label3;

        $r4 = new org.apache.commons.math3.exception.NotStrictlyPositiveException;

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        specialinvoke $r4.<org.apache.commons.math3.exception.NotStrictlyPositiveException: void <init>(java.lang.Number)>($r5);

        throw $r4;

     label3:
        r0.<org.apache.commons.math3.optimization.univariate.UnivariateMultiStartOptimizer: org.apache.commons.math3.optimization.univariate.BaseUnivariateOptimizer optimizer> = r1;

        r0.<org.apache.commons.math3.optimization.univariate.UnivariateMultiStartOptimizer: int starts> = i0;

        r0.<org.apache.commons.math3.optimization.univariate.UnivariateMultiStartOptimizer: org.apache.commons.math3.random.RandomGenerator generator> = r2;

        return;
    }

    public org.apache.commons.math3.optimization.ConvergenceChecker getConvergenceChecker()
    {
        org.apache.commons.math3.optimization.univariate.UnivariateMultiStartOptimizer r0;
        org.apache.commons.math3.optimization.univariate.BaseUnivariateOptimizer $r1;
        org.apache.commons.math3.optimization.ConvergenceChecker $r2;

        r0 := @this: org.apache.commons.math3.optimization.univariate.UnivariateMultiStartOptimizer;

        $r1 = r0.<org.apache.commons.math3.optimization.univariate.UnivariateMultiStartOptimizer: org.apache.commons.math3.optimization.univariate.BaseUnivariateOptimizer optimizer>;

        $r2 = interfaceinvoke $r1.<org.apache.commons.math3.optimization.univariate.BaseUnivariateOptimizer: org.apache.commons.math3.optimization.ConvergenceChecker getConvergenceChecker()>();

        return $r2;
    }

    public int getMaxEvaluations()
    {
        org.apache.commons.math3.optimization.univariate.UnivariateMultiStartOptimizer r0;
        int $i0;

        r0 := @this: org.apache.commons.math3.optimization.univariate.UnivariateMultiStartOptimizer;

        $i0 = r0.<org.apache.commons.math3.optimization.univariate.UnivariateMultiStartOptimizer: int maxEvaluations>;

        return $i0;
    }

    public int getEvaluations()
    {
        org.apache.commons.math3.optimization.univariate.UnivariateMultiStartOptimizer r0;
        int $i0;

        r0 := @this: org.apache.commons.math3.optimization.univariate.UnivariateMultiStartOptimizer;

        $i0 = r0.<org.apache.commons.math3.optimization.univariate.UnivariateMultiStartOptimizer: int totalEvaluations>;

        return $i0;
    }

    public org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair[] getOptima()
    {
        org.apache.commons.math3.optimization.univariate.UnivariateMultiStartOptimizer r0;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair[] $r1, $r2, $r4;
        java.lang.Object $r3;
        org.apache.commons.math3.exception.MathIllegalStateException $r5;
        java.lang.Object[] $r6;
        org.apache.commons.math3.exception.util.LocalizedFormats $r7;

        r0 := @this: org.apache.commons.math3.optimization.univariate.UnivariateMultiStartOptimizer;

        $r1 = r0.<org.apache.commons.math3.optimization.univariate.UnivariateMultiStartOptimizer: org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair[] optima>;

        if $r1 != null goto label1;

        $r5 = new org.apache.commons.math3.exception.MathIllegalStateException;

        $r7 = <org.apache.commons.math3.exception.util.LocalizedFormats: org.apache.commons.math3.exception.util.LocalizedFormats NO_OPTIMUM_COMPUTED_YET>;

        $r6 = newarray (java.lang.Object)[0];

        specialinvoke $r5.<org.apache.commons.math3.exception.MathIllegalStateException: void <init>(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])>($r7, $r6);

        throw $r5;

     label1:
        $r2 = r0.<org.apache.commons.math3.optimization.univariate.UnivariateMultiStartOptimizer: org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair[] optima>;

        $r3 = virtualinvoke $r2.<java.lang.Object: java.lang.Object clone()>();

        $r4 = (org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair[]) $r3;

        return $r4;
    }

    public org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair optimize(int, org.apache.commons.math3.analysis.UnivariateFunction, org.apache.commons.math3.optimization.GoalType, double, double)
    {
        org.apache.commons.math3.optimization.univariate.UnivariateMultiStartOptimizer r0;
        int i0;
        org.apache.commons.math3.analysis.UnivariateFunction r1;
        org.apache.commons.math3.optimization.GoalType r2;
        double d0, d1, $d2, $d3, $d4;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair $r3;

        r0 := @this: org.apache.commons.math3.optimization.univariate.UnivariateMultiStartOptimizer;

        i0 := @parameter0: int;

        r1 := @parameter1: org.apache.commons.math3.analysis.UnivariateFunction;

        r2 := @parameter2: org.apache.commons.math3.optimization.GoalType;

        d0 := @parameter3: double;

        d1 := @parameter4: double;

        $d2 = d1 - d0;

        $d3 = 0.5 * $d2;

        $d4 = d0 + $d3;

        $r3 = virtualinvoke r0.<org.apache.commons.math3.optimization.univariate.UnivariateMultiStartOptimizer: org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair optimize(int,org.apache.commons.math3.analysis.UnivariateFunction,org.apache.commons.math3.optimization.GoalType,double,double,double)>(i0, r1, r2, d0, d1, $d4);

        return $r3;
    }

    public org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair optimize(int, org.apache.commons.math3.analysis.UnivariateFunction, org.apache.commons.math3.optimization.GoalType, double, double, double)
    {
        org.apache.commons.math3.optimization.univariate.UnivariateMultiStartOptimizer r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, i8;
        org.apache.commons.math3.analysis.UnivariateFunction r1;
        org.apache.commons.math3.optimization.GoalType r2;
        double d0, d1, d2, $d3, $d4, $d5, $d6;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair[] $r3, $r4, $r6, $r10, $r14;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair $r5, $r7, $r11;
        org.apache.commons.math3.random.RandomGenerator $r8;
        org.apache.commons.math3.optimization.univariate.BaseUnivariateOptimizer $r9, $r12;
        java.lang.RuntimeException $r13, r16;

        r0 := @this: org.apache.commons.math3.optimization.univariate.UnivariateMultiStartOptimizer;

        i0 := @parameter0: int;

        r1 := @parameter1: org.apache.commons.math3.analysis.UnivariateFunction;

        r2 := @parameter2: org.apache.commons.math3.optimization.GoalType;

        d0 := @parameter3: double;

        d1 := @parameter4: double;

        d2 := @parameter5: double;

        r16 = null;

        $i1 = r0.<org.apache.commons.math3.optimization.univariate.UnivariateMultiStartOptimizer: int starts>;

        $r3 = newarray (org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair)[$i1];

        r0.<org.apache.commons.math3.optimization.univariate.UnivariateMultiStartOptimizer: org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair[] optima> = $r3;

        r0.<org.apache.commons.math3.optimization.univariate.UnivariateMultiStartOptimizer: int totalEvaluations> = 0;

        i8 = 0;

     label1:
        $i2 = r0.<org.apache.commons.math3.optimization.univariate.UnivariateMultiStartOptimizer: int starts>;

        if i8 >= $i2 goto label8;

     label2:
        if i8 != 0 goto label3;

        $d6 = d2;

        goto label4;

     label3:
        $r8 = r0.<org.apache.commons.math3.optimization.univariate.UnivariateMultiStartOptimizer: org.apache.commons.math3.random.RandomGenerator generator>;

        $d3 = interfaceinvoke $r8.<org.apache.commons.math3.random.RandomGenerator: double nextDouble()>();

        $d4 = d1 - d0;

        $d5 = $d3 * $d4;

        $d6 = d0 + $d5;

     label4:
        $r10 = r0.<org.apache.commons.math3.optimization.univariate.UnivariateMultiStartOptimizer: org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair[] optima>;

        $r9 = r0.<org.apache.commons.math3.optimization.univariate.UnivariateMultiStartOptimizer: org.apache.commons.math3.optimization.univariate.BaseUnivariateOptimizer optimizer>;

        $i3 = r0.<org.apache.commons.math3.optimization.univariate.UnivariateMultiStartOptimizer: int totalEvaluations>;

        $i4 = i0 - $i3;

        $r11 = interfaceinvoke $r9.<org.apache.commons.math3.optimization.univariate.BaseUnivariateOptimizer: org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair optimize(int,org.apache.commons.math3.analysis.UnivariateFunction,org.apache.commons.math3.optimization.GoalType,double,double,double)>($i4, r1, r2, d0, d1, $d6);

        $r10[i8] = $r11;

     label5:
        goto label7;

     label6:
        $r13 := @caughtexception;

        r16 = $r13;

        $r14 = r0.<org.apache.commons.math3.optimization.univariate.UnivariateMultiStartOptimizer: org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair[] optima>;

        $r14[i8] = null;

     label7:
        $i5 = r0.<org.apache.commons.math3.optimization.univariate.UnivariateMultiStartOptimizer: int totalEvaluations>;

        $r12 = r0.<org.apache.commons.math3.optimization.univariate.UnivariateMultiStartOptimizer: org.apache.commons.math3.optimization.univariate.BaseUnivariateOptimizer optimizer>;

        $i6 = interfaceinvoke $r12.<org.apache.commons.math3.optimization.univariate.BaseUnivariateOptimizer: int getEvaluations()>();

        $i7 = $i5 + $i6;

        r0.<org.apache.commons.math3.optimization.univariate.UnivariateMultiStartOptimizer: int totalEvaluations> = $i7;

        i8 = i8 + 1;

        goto label1;

     label8:
        specialinvoke r0.<org.apache.commons.math3.optimization.univariate.UnivariateMultiStartOptimizer: void sortPairs(org.apache.commons.math3.optimization.GoalType)>(r2);

        $r4 = r0.<org.apache.commons.math3.optimization.univariate.UnivariateMultiStartOptimizer: org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair[] optima>;

        $r5 = $r4[0];

        if $r5 != null goto label9;

        throw r16;

     label9:
        $r6 = r0.<org.apache.commons.math3.optimization.univariate.UnivariateMultiStartOptimizer: org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair[] optima>;

        $r7 = $r6[0];

        return $r7;

        catch java.lang.RuntimeException from label2 to label5 with label6;
    }

    private void sortPairs(org.apache.commons.math3.optimization.GoalType)
    {
        org.apache.commons.math3.optimization.univariate.UnivariateMultiStartOptimizer r0;
        org.apache.commons.math3.optimization.GoalType r1;
        org.apache.commons.math3.optimization.univariate.UnivariateMultiStartOptimizer$1 $r2;
        org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair[] $r3;

        r0 := @this: org.apache.commons.math3.optimization.univariate.UnivariateMultiStartOptimizer;

        r1 := @parameter0: org.apache.commons.math3.optimization.GoalType;

        $r3 = r0.<org.apache.commons.math3.optimization.univariate.UnivariateMultiStartOptimizer: org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair[] optima>;

        $r2 = new org.apache.commons.math3.optimization.univariate.UnivariateMultiStartOptimizer$1;

        specialinvoke $r2.<org.apache.commons.math3.optimization.univariate.UnivariateMultiStartOptimizer$1: void <init>(org.apache.commons.math3.optimization.univariate.UnivariateMultiStartOptimizer,org.apache.commons.math3.optimization.GoalType)>(r0, r1);

        staticinvoke <java.util.Arrays: void sort(java.lang.Object[],java.util.Comparator)>($r3, $r2);

        return;
    }
}
