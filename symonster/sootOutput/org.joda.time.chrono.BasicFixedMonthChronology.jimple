abstract class org.joda.time.chrono.BasicFixedMonthChronology extends org.joda.time.chrono.BasicChronology
{
    private static final long serialVersionUID;
    static final int MONTH_LENGTH;
    static final long MILLIS_PER_YEAR;
    static final long MILLIS_PER_MONTH;

    void <init>(org.joda.time.Chronology, java.lang.Object, int)
    {
        org.joda.time.chrono.BasicFixedMonthChronology r0;
        org.joda.time.Chronology r1;
        java.lang.Object r2;
        int i0;

        r0 := @this: org.joda.time.chrono.BasicFixedMonthChronology;

        r1 := @parameter0: org.joda.time.Chronology;

        r2 := @parameter1: java.lang.Object;

        i0 := @parameter2: int;

        specialinvoke r0.<org.joda.time.chrono.BasicChronology: void <init>(org.joda.time.Chronology,java.lang.Object,int)>(r1, r2, i0);

        return;
    }

    long setYear(long, int)
    {
        org.joda.time.chrono.BasicFixedMonthChronology r0;
        int i0, i1, i2, i4;
        boolean $z0;
        long l3, l5, $l6, l7;

        r0 := @this: org.joda.time.chrono.BasicFixedMonthChronology;

        l3 := @parameter0: long;

        i0 := @parameter1: int;

        i1 = virtualinvoke r0.<org.joda.time.chrono.BasicFixedMonthChronology: int getYear(long)>(l3);

        i4 = virtualinvoke r0.<org.joda.time.chrono.BasicFixedMonthChronology: int getDayOfYear(long,int)>(l3, i1);

        i2 = virtualinvoke r0.<org.joda.time.chrono.BasicFixedMonthChronology: int getMillisOfDay(long)>(l3);

        if i4 <= 365 goto label1;

        $z0 = virtualinvoke r0.<org.joda.time.chrono.BasicFixedMonthChronology: boolean isLeapYear(int)>(i0);

        if $z0 != 0 goto label1;

        i4 = i4 + -1;

     label1:
        l5 = virtualinvoke r0.<org.joda.time.chrono.BasicFixedMonthChronology: long getYearMonthDayMillis(int,int,int)>(i0, 1, i4);

        $l6 = (long) i2;

        l7 = l5 + $l6;

        return l7;
    }

    long getYearDifference(long, long)
    {
        org.joda.time.chrono.BasicFixedMonthChronology r0;
        long l0, l1, l4, l5, $l6, $l7, $l9;
        int i2, i3, i10;
        byte $b8;

        r0 := @this: org.joda.time.chrono.BasicFixedMonthChronology;

        l0 := @parameter0: long;

        l1 := @parameter1: long;

        i2 = virtualinvoke r0.<org.joda.time.chrono.BasicFixedMonthChronology: int getYear(long)>(l0);

        i3 = virtualinvoke r0.<org.joda.time.chrono.BasicFixedMonthChronology: int getYear(long)>(l1);

        $l6 = virtualinvoke r0.<org.joda.time.chrono.BasicFixedMonthChronology: long getYearMillis(int)>(i2);

        l4 = l0 - $l6;

        $l7 = virtualinvoke r0.<org.joda.time.chrono.BasicFixedMonthChronology: long getYearMillis(int)>(i3);

        l5 = l1 - $l7;

        i10 = i2 - i3;

        $b8 = l4 cmp l5;

        if $b8 >= 0 goto label1;

        i10 = i10 + -1;

     label1:
        $l9 = (long) i10;

        return $l9;
    }

    long getTotalMillisByYearMonth(int, int)
    {
        org.joda.time.chrono.BasicFixedMonthChronology r0;
        int i0, i1, $i2;
        long $l3, $l4;

        r0 := @this: org.joda.time.chrono.BasicFixedMonthChronology;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $i2 = i1 - 1;

        $l3 = (long) $i2;

        $l4 = $l3 * 2592000000L;

        return $l4;
    }

    int getDayOfMonth(long)
    {
        org.joda.time.chrono.BasicFixedMonthChronology r0;
        long l0;
        int $i1, $i2, $i3, $i4;

        r0 := @this: org.joda.time.chrono.BasicFixedMonthChronology;

        l0 := @parameter0: long;

        $i1 = virtualinvoke r0.<org.joda.time.chrono.BasicFixedMonthChronology: int getDayOfYear(long)>(l0);

        $i2 = $i1 - 1;

        $i3 = $i2 % 30;

        $i4 = $i3 + 1;

        return $i4;
    }

    boolean isLeapYear(int)
    {
        org.joda.time.chrono.BasicFixedMonthChronology r0;
        int i0, $i1;
        boolean $z0;

        r0 := @this: org.joda.time.chrono.BasicFixedMonthChronology;

        i0 := @parameter0: int;

        $i1 = i0 & 3;

        if $i1 != 3 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    int getDaysInYearMonth(int, int)
    {
        org.joda.time.chrono.BasicFixedMonthChronology r0;
        int i0, i1;
        boolean $z0;
        byte $b2;

        r0 := @this: org.joda.time.chrono.BasicFixedMonthChronology;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        if i1 == 13 goto label1;

        $b2 = 30;

        goto label3;

     label1:
        $z0 = virtualinvoke r0.<org.joda.time.chrono.BasicFixedMonthChronology: boolean isLeapYear(int)>(i0);

        if $z0 == 0 goto label2;

        $b2 = 6;

        goto label3;

     label2:
        $b2 = 5;

     label3:
        return $b2;
    }

    int getDaysInMonthMax()
    {
        org.joda.time.chrono.BasicFixedMonthChronology r0;

        r0 := @this: org.joda.time.chrono.BasicFixedMonthChronology;

        return 30;
    }

    int getDaysInMonthMax(int)
    {
        org.joda.time.chrono.BasicFixedMonthChronology r0;
        int i0;
        byte $b1;

        r0 := @this: org.joda.time.chrono.BasicFixedMonthChronology;

        i0 := @parameter0: int;

        if i0 == 13 goto label1;

        $b1 = 30;

        goto label2;

     label1:
        $b1 = 6;

     label2:
        return $b1;
    }

    int getMonthOfYear(long)
    {
        org.joda.time.chrono.BasicFixedMonthChronology r0;
        long l0;
        int $i1, $i2, $i3, $i4;

        r0 := @this: org.joda.time.chrono.BasicFixedMonthChronology;

        l0 := @parameter0: long;

        $i1 = virtualinvoke r0.<org.joda.time.chrono.BasicFixedMonthChronology: int getDayOfYear(long)>(l0);

        $i2 = $i1 - 1;

        $i3 = $i2 / 30;

        $i4 = $i3 + 1;

        return $i4;
    }

    int getMonthOfYear(long, int)
    {
        org.joda.time.chrono.BasicFixedMonthChronology r0;
        long l0, l2, $l3, $l4;
        int i1, $i5, $i6;

        r0 := @this: org.joda.time.chrono.BasicFixedMonthChronology;

        l0 := @parameter0: long;

        i1 := @parameter1: int;

        $l3 = virtualinvoke r0.<org.joda.time.chrono.BasicFixedMonthChronology: long getYearMillis(int)>(i1);

        $l4 = l0 - $l3;

        l2 = $l4 / 2592000000L;

        $i5 = (int) l2;

        $i6 = $i5 + 1;

        return $i6;
    }

    int getMaxMonth()
    {
        org.joda.time.chrono.BasicFixedMonthChronology r0;

        r0 := @this: org.joda.time.chrono.BasicFixedMonthChronology;

        return 13;
    }

    long getAverageMillisPerYear()
    {
        org.joda.time.chrono.BasicFixedMonthChronology r0;

        r0 := @this: org.joda.time.chrono.BasicFixedMonthChronology;

        return 31557600000L;
    }

    long getAverageMillisPerYearDividedByTwo()
    {
        org.joda.time.chrono.BasicFixedMonthChronology r0;

        r0 := @this: org.joda.time.chrono.BasicFixedMonthChronology;

        return 15778800000L;
    }

    long getAverageMillisPerMonth()
    {
        org.joda.time.chrono.BasicFixedMonthChronology r0;

        r0 := @this: org.joda.time.chrono.BasicFixedMonthChronology;

        return 2592000000L;
    }

    public static void <clinit>()
    {
        <org.joda.time.chrono.BasicFixedMonthChronology: long MILLIS_PER_MONTH> = 2592000000L;

        <org.joda.time.chrono.BasicFixedMonthChronology: long MILLIS_PER_YEAR> = 31557600000L;

        <org.joda.time.chrono.BasicFixedMonthChronology: int MONTH_LENGTH> = 30;

        <org.joda.time.chrono.BasicFixedMonthChronology: long serialVersionUID> = 261387371998L;

        return;
    }
}
