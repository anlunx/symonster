public class com.opengamma.analytics.math.interpolation.data.NavigableMapInterpolator1DDataBundle extends java.lang.Object implements com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle
{
    private final java.util.NavigableMap _backingMap;
    static final boolean $assertionsDisabled;

    public void <init>(java.util.NavigableMap)
    {
        com.opengamma.analytics.math.interpolation.data.NavigableMapInterpolator1DDataBundle r0;
        java.util.NavigableMap r1;
        int $i0;
        boolean $z0;

        r0 := @this: com.opengamma.analytics.math.interpolation.data.NavigableMapInterpolator1DDataBundle;

        r1 := @parameter0: java.util.NavigableMap;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "Backing map");

        $i0 = interfaceinvoke r1.<java.util.NavigableMap: int size()>();

        if $i0 <= 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z0, "Must have at least two data points.");

        r0.<com.opengamma.analytics.math.interpolation.data.NavigableMapInterpolator1DDataBundle: java.util.NavigableMap _backingMap> = r1;

        return;
    }

    public java.lang.Double getLowerBoundKey(java.lang.Double)
    {
        com.opengamma.analytics.math.interpolation.data.NavigableMapInterpolator1DDataBundle r0;
        java.lang.Double r1, $r2, $r3, $r6, $r12, $r20;
        double $d0, $d1, $d2, $d3;
        byte $b0, $b1;
        java.util.NavigableMap $r4;
        java.lang.Object $r5;
        java.lang.IllegalArgumentException $r7, $r15;
        java.lang.StringBuilder $r8, $r9, $r10, $r11, $r13, $r16, $r17, $r18, $r19, $r21;
        java.lang.String $r14, $r22;

        r0 := @this: com.opengamma.analytics.math.interpolation.data.NavigableMapInterpolator1DDataBundle;

        r1 := @parameter0: java.lang.Double;

        $d0 = virtualinvoke r1.<java.lang.Double: double doubleValue()>();

        $r2 = virtualinvoke r0.<com.opengamma.analytics.math.interpolation.data.NavigableMapInterpolator1DDataBundle: java.lang.Double firstKey()>();

        $d1 = virtualinvoke $r2.<java.lang.Double: double doubleValue()>();

        $b0 = $d0 cmpg $d1;

        if $b0 >= 0 goto label1;

        $r15 = new java.lang.IllegalArgumentException;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Could not get lower bound key for ");

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": lowest x-value is ");

        $r20 = virtualinvoke r0.<com.opengamma.analytics.math.interpolation.data.NavigableMapInterpolator1DDataBundle: java.lang.Double firstKey()>();

        $r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r20);

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r15.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r22);

        throw $r15;

     label1:
        $d2 = virtualinvoke r1.<java.lang.Double: double doubleValue()>();

        $r3 = virtualinvoke r0.<com.opengamma.analytics.math.interpolation.data.NavigableMapInterpolator1DDataBundle: java.lang.Double lastKey()>();

        $d3 = virtualinvoke $r3.<java.lang.Double: double doubleValue()>();

        $b1 = $d2 cmpl $d3;

        if $b1 <= 0 goto label2;

        $r7 = new java.lang.IllegalArgumentException;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Could not get lower bound key for ");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": highest x-value is ");

        $r12 = virtualinvoke r0.<com.opengamma.analytics.math.interpolation.data.NavigableMapInterpolator1DDataBundle: java.lang.Double lastKey()>();

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r12);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r14);

        throw $r7;

     label2:
        $r4 = r0.<com.opengamma.analytics.math.interpolation.data.NavigableMapInterpolator1DDataBundle: java.util.NavigableMap _backingMap>;

        $r5 = interfaceinvoke $r4.<java.util.NavigableMap: java.lang.Object floorKey(java.lang.Object)>(r1);

        $r6 = (java.lang.Double) $r5;

        return $r6;
    }

    public int getLowerBoundIndex(java.lang.Double)
    {
        com.opengamma.analytics.math.interpolation.data.NavigableMapInterpolator1DDataBundle r0;
        java.lang.Double r1, r2, r8;
        java.util.Iterator r3;
        java.util.NavigableMap $r4;
        java.util.Set $r5;
        java.lang.Object $r6, $r7;
        boolean $z0;
        int i0;

        r0 := @this: com.opengamma.analytics.math.interpolation.data.NavigableMapInterpolator1DDataBundle;

        r1 := @parameter0: java.lang.Double;

        r2 = virtualinvoke r0.<com.opengamma.analytics.math.interpolation.data.NavigableMapInterpolator1DDataBundle: java.lang.Double getLowerBoundKey(java.lang.Double)>(r1);

        i0 = 0;

        $r4 = r0.<com.opengamma.analytics.math.interpolation.data.NavigableMapInterpolator1DDataBundle: java.util.NavigableMap _backingMap>;

        $r5 = interfaceinvoke $r4.<java.util.NavigableMap: java.util.Set keySet()>();

        r3 = interfaceinvoke $r5.<java.util.Set: java.util.Iterator iterator()>();

        $r6 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r8 = (java.lang.Double) $r6;

     label1:
        $z0 = virtualinvoke r8.<java.lang.Double: boolean equals(java.lang.Object)>(r2);

        if $z0 != 0 goto label2;

        $r7 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r8 = (java.lang.Double) $r7;

        i0 = i0 + 1;

        goto label1;

     label2:
        return i0;
    }

    public java.lang.Double get(java.lang.Double)
    {
        com.opengamma.analytics.math.interpolation.data.NavigableMapInterpolator1DDataBundle r0;
        java.lang.Double r1, $r4;
        java.util.NavigableMap $r2;
        java.lang.Object $r3;

        r0 := @this: com.opengamma.analytics.math.interpolation.data.NavigableMapInterpolator1DDataBundle;

        r1 := @parameter0: java.lang.Double;

        $r2 = r0.<com.opengamma.analytics.math.interpolation.data.NavigableMapInterpolator1DDataBundle: java.util.NavigableMap _backingMap>;

        $r3 = interfaceinvoke $r2.<java.util.NavigableMap: java.lang.Object get(java.lang.Object)>(r1);

        $r4 = (java.lang.Double) $r3;

        return $r4;
    }

    public java.lang.Double lastKey()
    {
        com.opengamma.analytics.math.interpolation.data.NavigableMapInterpolator1DDataBundle r0;
        java.util.NavigableMap $r1;
        java.lang.Object $r2;
        java.lang.Double $r3;

        r0 := @this: com.opengamma.analytics.math.interpolation.data.NavigableMapInterpolator1DDataBundle;

        $r1 = r0.<com.opengamma.analytics.math.interpolation.data.NavigableMapInterpolator1DDataBundle: java.util.NavigableMap _backingMap>;

        $r2 = interfaceinvoke $r1.<java.util.NavigableMap: java.lang.Object lastKey()>();

        $r3 = (java.lang.Double) $r2;

        return $r3;
    }

    public java.lang.Double lastValue()
    {
        com.opengamma.analytics.math.interpolation.data.NavigableMapInterpolator1DDataBundle r0;
        java.util.NavigableMap $r1;
        java.util.Map$Entry $r2;
        java.lang.Object $r3;
        java.lang.Double $r4;

        r0 := @this: com.opengamma.analytics.math.interpolation.data.NavigableMapInterpolator1DDataBundle;

        $r1 = r0.<com.opengamma.analytics.math.interpolation.data.NavigableMapInterpolator1DDataBundle: java.util.NavigableMap _backingMap>;

        $r2 = interfaceinvoke $r1.<java.util.NavigableMap: java.util.Map$Entry lastEntry()>();

        $r3 = interfaceinvoke $r2.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r4 = (java.lang.Double) $r3;

        return $r4;
    }

    public java.lang.Double higherKey(java.lang.Double)
    {
        com.opengamma.analytics.math.interpolation.data.NavigableMapInterpolator1DDataBundle r0;
        java.lang.Double r1, $r2, $r3, $r6, $r12, $r20;
        double $d0, $d1, $d2, $d3;
        byte $b0, $b1;
        java.util.NavigableMap $r4;
        java.lang.Object $r5;
        java.lang.IllegalArgumentException $r7, $r15;
        java.lang.StringBuilder $r8, $r9, $r10, $r11, $r13, $r16, $r17, $r18, $r19, $r21;
        java.lang.String $r14, $r22;

        r0 := @this: com.opengamma.analytics.math.interpolation.data.NavigableMapInterpolator1DDataBundle;

        r1 := @parameter0: java.lang.Double;

        $d0 = virtualinvoke r1.<java.lang.Double: double doubleValue()>();

        $r2 = virtualinvoke r0.<com.opengamma.analytics.math.interpolation.data.NavigableMapInterpolator1DDataBundle: java.lang.Double firstKey()>();

        $d1 = virtualinvoke $r2.<java.lang.Double: double doubleValue()>();

        $b0 = $d0 cmpg $d1;

        if $b0 >= 0 goto label1;

        $r15 = new java.lang.IllegalArgumentException;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Could not get lower bound key for ");

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": lowest x-value is ");

        $r20 = virtualinvoke r0.<com.opengamma.analytics.math.interpolation.data.NavigableMapInterpolator1DDataBundle: java.lang.Double firstKey()>();

        $r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r20);

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r15.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r22);

        throw $r15;

     label1:
        $d2 = virtualinvoke r1.<java.lang.Double: double doubleValue()>();

        $r3 = virtualinvoke r0.<com.opengamma.analytics.math.interpolation.data.NavigableMapInterpolator1DDataBundle: java.lang.Double lastKey()>();

        $d3 = virtualinvoke $r3.<java.lang.Double: double doubleValue()>();

        $b1 = $d2 cmpl $d3;

        if $b1 <= 0 goto label2;

        $r7 = new java.lang.IllegalArgumentException;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Could not get lower bound key for ");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": highest x-value is ");

        $r12 = virtualinvoke r0.<com.opengamma.analytics.math.interpolation.data.NavigableMapInterpolator1DDataBundle: java.lang.Double lastKey()>();

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r12);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r14);

        throw $r7;

     label2:
        $r4 = r0.<com.opengamma.analytics.math.interpolation.data.NavigableMapInterpolator1DDataBundle: java.util.NavigableMap _backingMap>;

        $r5 = interfaceinvoke $r4.<java.util.NavigableMap: java.lang.Object higherKey(java.lang.Object)>(r1);

        $r6 = (java.lang.Double) $r5;

        return $r6;
    }

    public java.lang.Double higherValue(java.lang.Double)
    {
        com.opengamma.analytics.math.interpolation.data.NavigableMapInterpolator1DDataBundle r0;
        java.lang.Double r1, $r5;
        java.util.Map$Entry r2;
        java.util.NavigableMap $r3;
        java.lang.Object $r4;

        r0 := @this: com.opengamma.analytics.math.interpolation.data.NavigableMapInterpolator1DDataBundle;

        r1 := @parameter0: java.lang.Double;

        $r3 = r0.<com.opengamma.analytics.math.interpolation.data.NavigableMapInterpolator1DDataBundle: java.util.NavigableMap _backingMap>;

        r2 = interfaceinvoke $r3.<java.util.NavigableMap: java.util.Map$Entry higherEntry(java.lang.Object)>(r1);

        if r2 != null goto label1;

        return null;

     label1:
        $r4 = interfaceinvoke r2.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r5 = (java.lang.Double) $r4;

        return $r5;
    }

    public int size()
    {
        com.opengamma.analytics.math.interpolation.data.NavigableMapInterpolator1DDataBundle r0;
        java.util.NavigableMap $r1;
        int $i0;

        r0 := @this: com.opengamma.analytics.math.interpolation.data.NavigableMapInterpolator1DDataBundle;

        $r1 = r0.<com.opengamma.analytics.math.interpolation.data.NavigableMapInterpolator1DDataBundle: java.util.NavigableMap _backingMap>;

        $i0 = interfaceinvoke $r1.<java.util.NavigableMap: int size()>();

        return $i0;
    }

    public double[] getKeys()
    {
        com.opengamma.analytics.math.interpolation.data.NavigableMapInterpolator1DDataBundle r0;
        double[] r1;
        java.util.Iterator r2;
        java.lang.Double r3;
        int $i0, $i1, $i2, i3;
        java.util.NavigableMap $r4;
        java.util.Set $r5;
        boolean $z0, $z1;
        java.lang.AssertionError $r6;
        java.lang.Object $r7;
        double $d0;

        r0 := @this: com.opengamma.analytics.math.interpolation.data.NavigableMapInterpolator1DDataBundle;

        $i0 = virtualinvoke r0.<com.opengamma.analytics.math.interpolation.data.NavigableMapInterpolator1DDataBundle: int size()>();

        r1 = newarray (double)[$i0];

        i3 = 0;

        $r4 = r0.<com.opengamma.analytics.math.interpolation.data.NavigableMapInterpolator1DDataBundle: java.util.NavigableMap _backingMap>;

        $r5 = interfaceinvoke $r4.<java.util.NavigableMap: java.util.Set keySet()>();

        r2 = interfaceinvoke $r5.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r7 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (java.lang.Double) $r7;

        $i2 = i3;

        i3 = i3 + 1;

        $d0 = virtualinvoke r3.<java.lang.Double: double doubleValue()>();

        r1[$i2] = $d0;

        goto label1;

     label2:
        $z1 = <com.opengamma.analytics.math.interpolation.data.NavigableMapInterpolator1DDataBundle: boolean $assertionsDisabled>;

        if $z1 != 0 goto label3;

        $i1 = virtualinvoke r0.<com.opengamma.analytics.math.interpolation.data.NavigableMapInterpolator1DDataBundle: int size()>();

        if i3 == $i1 goto label3;

        $r6 = new java.lang.AssertionError;

        specialinvoke $r6.<java.lang.AssertionError: void <init>()>();

        throw $r6;

     label3:
        return r1;
    }

    public double[] getValues()
    {
        com.opengamma.analytics.math.interpolation.data.NavigableMapInterpolator1DDataBundle r0;
        double[] r1;
        java.util.Iterator r2;
        java.lang.Double r3;
        int $i0, $i1, $i2, i3;
        java.util.NavigableMap $r4;
        java.util.Collection $r5;
        boolean $z0, $z1;
        java.lang.AssertionError $r6;
        java.lang.Object $r7;
        double $d0;

        r0 := @this: com.opengamma.analytics.math.interpolation.data.NavigableMapInterpolator1DDataBundle;

        $i0 = virtualinvoke r0.<com.opengamma.analytics.math.interpolation.data.NavigableMapInterpolator1DDataBundle: int size()>();

        r1 = newarray (double)[$i0];

        i3 = 0;

        $r4 = r0.<com.opengamma.analytics.math.interpolation.data.NavigableMapInterpolator1DDataBundle: java.util.NavigableMap _backingMap>;

        $r5 = interfaceinvoke $r4.<java.util.NavigableMap: java.util.Collection values()>();

        r2 = interfaceinvoke $r5.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r7 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (java.lang.Double) $r7;

        $i2 = i3;

        i3 = i3 + 1;

        $d0 = virtualinvoke r3.<java.lang.Double: double doubleValue()>();

        r1[$i2] = $d0;

        goto label1;

     label2:
        $z1 = <com.opengamma.analytics.math.interpolation.data.NavigableMapInterpolator1DDataBundle: boolean $assertionsDisabled>;

        if $z1 != 0 goto label3;

        $i1 = virtualinvoke r0.<com.opengamma.analytics.math.interpolation.data.NavigableMapInterpolator1DDataBundle: int size()>();

        if i3 == $i1 goto label3;

        $r6 = new java.lang.AssertionError;

        specialinvoke $r6.<java.lang.AssertionError: void <init>()>();

        throw $r6;

     label3:
        return r1;
    }

    public java.lang.Double firstKey()
    {
        com.opengamma.analytics.math.interpolation.data.NavigableMapInterpolator1DDataBundle r0;
        java.util.NavigableMap $r1;
        java.lang.Object $r2;
        java.lang.Double $r3;

        r0 := @this: com.opengamma.analytics.math.interpolation.data.NavigableMapInterpolator1DDataBundle;

        $r1 = r0.<com.opengamma.analytics.math.interpolation.data.NavigableMapInterpolator1DDataBundle: java.util.NavigableMap _backingMap>;

        $r2 = interfaceinvoke $r1.<java.util.NavigableMap: java.lang.Object firstKey()>();

        $r3 = (java.lang.Double) $r2;

        return $r3;
    }

    public java.lang.Double firstValue()
    {
        com.opengamma.analytics.math.interpolation.data.NavigableMapInterpolator1DDataBundle r0;
        java.util.NavigableMap $r1;
        java.util.Map$Entry $r2;
        java.lang.Object $r3;
        java.lang.Double $r4;

        r0 := @this: com.opengamma.analytics.math.interpolation.data.NavigableMapInterpolator1DDataBundle;

        $r1 = r0.<com.opengamma.analytics.math.interpolation.data.NavigableMapInterpolator1DDataBundle: java.util.NavigableMap _backingMap>;

        $r2 = interfaceinvoke $r1.<java.util.NavigableMap: java.util.Map$Entry firstEntry()>();

        $r3 = interfaceinvoke $r2.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r4 = (java.lang.Double) $r3;

        return $r4;
    }

    public boolean containsKey(java.lang.Double)
    {
        com.opengamma.analytics.math.interpolation.data.NavigableMapInterpolator1DDataBundle r0;
        java.lang.Double r1;
        java.util.NavigableMap $r2;
        boolean $z0;

        r0 := @this: com.opengamma.analytics.math.interpolation.data.NavigableMapInterpolator1DDataBundle;

        r1 := @parameter0: java.lang.Double;

        $r2 = r0.<com.opengamma.analytics.math.interpolation.data.NavigableMapInterpolator1DDataBundle: java.util.NavigableMap _backingMap>;

        $z0 = interfaceinvoke $r2.<java.util.NavigableMap: boolean containsKey(java.lang.Object)>(r1);

        return $z0;
    }

    public com.opengamma.analytics.math.interpolation.data.InterpolationBoundedValues getBoundedValues(java.lang.Double)
    {
        com.opengamma.analytics.math.interpolation.data.NavigableMapInterpolator1DDataBundle r0;
        java.lang.Double r1, r2, r3, $r4, $r6, $r7, $r9, $r10;
        boolean $z0;
        com.opengamma.analytics.math.interpolation.data.InterpolationBoundedValues $r5, $r8;
        int $i0, $i1;

        r0 := @this: com.opengamma.analytics.math.interpolation.data.NavigableMapInterpolator1DDataBundle;

        r1 := @parameter0: java.lang.Double;

        r2 = virtualinvoke r0.<com.opengamma.analytics.math.interpolation.data.NavigableMapInterpolator1DDataBundle: java.lang.Double getLowerBoundKey(java.lang.Double)>(r1);

        r3 = virtualinvoke r0.<com.opengamma.analytics.math.interpolation.data.NavigableMapInterpolator1DDataBundle: java.lang.Double higherKey(java.lang.Double)>(r1);

        $r4 = virtualinvoke r0.<com.opengamma.analytics.math.interpolation.data.NavigableMapInterpolator1DDataBundle: java.lang.Double lastKey()>();

        $z0 = virtualinvoke r3.<java.lang.Double: boolean equals(java.lang.Object)>($r4);

        if $z0 == 0 goto label1;

        $r8 = new com.opengamma.analytics.math.interpolation.data.InterpolationBoundedValues;

        $i1 = virtualinvoke r0.<com.opengamma.analytics.math.interpolation.data.NavigableMapInterpolator1DDataBundle: int getLowerBoundIndex(java.lang.Double)>(r1);

        $r9 = virtualinvoke r0.<com.opengamma.analytics.math.interpolation.data.NavigableMapInterpolator1DDataBundle: java.lang.Double lastKey()>();

        $r10 = virtualinvoke r0.<com.opengamma.analytics.math.interpolation.data.NavigableMapInterpolator1DDataBundle: java.lang.Double lastValue()>();

        specialinvoke $r8.<com.opengamma.analytics.math.interpolation.data.InterpolationBoundedValues: void <init>(int,java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>($i1, $r9, $r10, null, null);

        return $r8;

     label1:
        $r5 = new com.opengamma.analytics.math.interpolation.data.InterpolationBoundedValues;

        $i0 = virtualinvoke r0.<com.opengamma.analytics.math.interpolation.data.NavigableMapInterpolator1DDataBundle: int getLowerBoundIndex(java.lang.Double)>(r1);

        $r6 = virtualinvoke r0.<com.opengamma.analytics.math.interpolation.data.NavigableMapInterpolator1DDataBundle: java.lang.Double get(java.lang.Double)>(r2);

        $r7 = virtualinvoke r0.<com.opengamma.analytics.math.interpolation.data.NavigableMapInterpolator1DDataBundle: java.lang.Double higherValue(java.lang.Double)>(r1);

        specialinvoke $r5.<com.opengamma.analytics.math.interpolation.data.InterpolationBoundedValues: void <init>(int,java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)>($i0, r2, $r6, r3, $r7);

        return $r5;
    }

    public int hashCode()
    {
        com.opengamma.analytics.math.interpolation.data.NavigableMapInterpolator1DDataBundle r0;
        java.util.NavigableMap $r1, $r2;
        int $i1, $i3, i4;

        r0 := @this: com.opengamma.analytics.math.interpolation.data.NavigableMapInterpolator1DDataBundle;

        $i1 = 31 * 1;

        $r1 = r0.<com.opengamma.analytics.math.interpolation.data.NavigableMapInterpolator1DDataBundle: java.util.NavigableMap _backingMap>;

        if $r1 != null goto label1;

        $i3 = 0;

        goto label2;

     label1:
        $r2 = r0.<com.opengamma.analytics.math.interpolation.data.NavigableMapInterpolator1DDataBundle: java.util.NavigableMap _backingMap>;

        $i3 = virtualinvoke $r2.<java.lang.Object: int hashCode()>();

     label2:
        i4 = $i1 + $i3;

        return i4;
    }

    public boolean equals(java.lang.Object)
    {
        com.opengamma.analytics.math.interpolation.data.NavigableMapInterpolator1DDataBundle r0, r2;
        java.lang.Object r1;
        java.lang.Class $r3, $r4;
        java.util.NavigableMap $r5, $r6, $r7, $r8;
        boolean $z0;

        r0 := @this: com.opengamma.analytics.math.interpolation.data.NavigableMapInterpolator1DDataBundle;

        r1 := @parameter0: java.lang.Object;

        if r0 != r1 goto label1;

        return 1;

     label1:
        if r1 != null goto label2;

        return 0;

     label2:
        $r3 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r4 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        if $r3 == $r4 goto label3;

        return 0;

     label3:
        r2 = (com.opengamma.analytics.math.interpolation.data.NavigableMapInterpolator1DDataBundle) r1;

        $r5 = r0.<com.opengamma.analytics.math.interpolation.data.NavigableMapInterpolator1DDataBundle: java.util.NavigableMap _backingMap>;

        if $r5 != null goto label4;

        $r8 = r2.<com.opengamma.analytics.math.interpolation.data.NavigableMapInterpolator1DDataBundle: java.util.NavigableMap _backingMap>;

        if $r8 == null goto label5;

        return 0;

     label4:
        $r7 = r0.<com.opengamma.analytics.math.interpolation.data.NavigableMapInterpolator1DDataBundle: java.util.NavigableMap _backingMap>;

        $r6 = r2.<com.opengamma.analytics.math.interpolation.data.NavigableMapInterpolator1DDataBundle: java.util.NavigableMap _backingMap>;

        $z0 = virtualinvoke $r7.<java.lang.Object: boolean equals(java.lang.Object)>($r6);

        if $z0 != 0 goto label5;

        return 0;

     label5:
        return 1;
    }

    public void setYValueAtIndex(int, double)
    {
        com.opengamma.analytics.math.interpolation.data.NavigableMapInterpolator1DDataBundle r0;
        int i0, $i2, i3;
        double d0;
        java.util.Iterator r1;
        java.util.Map$Entry r2;
        java.util.NavigableMap $r3, $r6;
        java.util.Set $r4;
        boolean $z0;
        java.lang.Object $r5, $r7;
        java.lang.Double $r8;
        java.lang.IllegalArgumentException $r10;

        r0 := @this: com.opengamma.analytics.math.interpolation.data.NavigableMapInterpolator1DDataBundle;

        i0 := @parameter0: int;

        d0 := @parameter1: double;

        staticinvoke <com.opengamma.util.ArgumentChecker: int notNegative(int,java.lang.String)>(i0, "index");

        $i2 = virtualinvoke r0.<com.opengamma.analytics.math.interpolation.data.NavigableMapInterpolator1DDataBundle: int size()>();

        if i0 < $i2 goto label1;

        $r10 = new java.lang.IllegalArgumentException;

        specialinvoke $r10.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Index was greater than number of data points");

        throw $r10;

     label1:
        i3 = 0;

        $r3 = r0.<com.opengamma.analytics.math.interpolation.data.NavigableMapInterpolator1DDataBundle: java.util.NavigableMap _backingMap>;

        $r4 = interfaceinvoke $r3.<java.util.NavigableMap: java.util.Set entrySet()>();

        r1 = interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r5 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r2 = (java.util.Map$Entry) $r5;

        if i3 != i0 goto label3;

        $r6 = r0.<com.opengamma.analytics.math.interpolation.data.NavigableMapInterpolator1DDataBundle: java.util.NavigableMap _backingMap>;

        $r7 = interfaceinvoke r2.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r8 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d0);

        interfaceinvoke $r6.<java.util.NavigableMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r7, $r8);

     label3:
        i3 = i3 + 1;

        goto label2;

     label4:
        return;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;

        $r0 = class "com/opengamma/analytics/math/interpolation/data/NavigableMapInterpolator1DDataBundle";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <com.opengamma.analytics.math.interpolation.data.NavigableMapInterpolator1DDataBundle: boolean $assertionsDisabled> = $z1;

        return;
    }
}
