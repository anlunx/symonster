public class com.opengamma.analytics.financial.var.parametric.DeltaMeanCalculator extends com.opengamma.analytics.math.function.Function1D
{
    private final com.opengamma.analytics.math.matrix.MatrixAlgebra _algebra;

    public void <init>(com.opengamma.analytics.math.matrix.MatrixAlgebra)
    {
        com.opengamma.analytics.financial.var.parametric.DeltaMeanCalculator r0;
        com.opengamma.analytics.math.matrix.MatrixAlgebra r1;

        r0 := @this: com.opengamma.analytics.financial.var.parametric.DeltaMeanCalculator;

        r1 := @parameter0: com.opengamma.analytics.math.matrix.MatrixAlgebra;

        specialinvoke r0.<com.opengamma.analytics.math.function.Function1D: void <init>()>();

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object,java.lang.String)>(r1, "algebra");

        r0.<com.opengamma.analytics.financial.var.parametric.DeltaMeanCalculator: com.opengamma.analytics.math.matrix.MatrixAlgebra _algebra> = r1;

        return;
    }

    public java.lang.Double evaluate(java.util.Map)
    {
        com.opengamma.analytics.financial.var.parametric.DeltaMeanCalculator r0;
        java.util.Map r1;
        com.opengamma.analytics.financial.var.parametric.ParametricVaRDataBundle r2;
        com.opengamma.analytics.math.matrix.DoubleMatrix1D r3, r4;
        java.lang.Integer $r5, $r6;
        boolean $z0;
        java.lang.Object $r7;
        com.opengamma.analytics.math.matrix.Matrix $r8;
        com.opengamma.analytics.math.matrix.MatrixAlgebra $r9;
        double $d0;
        java.lang.Double $r10;

        r0 := @this: com.opengamma.analytics.financial.var.parametric.DeltaMeanCalculator;

        r1 := @parameter0: java.util.Map;

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object,java.lang.String)>(r1, "data");

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        $z0 = interfaceinvoke r1.<java.util.Map: boolean containsKey(java.lang.Object)>($r5);

        staticinvoke <org.apache.commons.lang.Validate: void isTrue(boolean)>($z0);

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        $r7 = interfaceinvoke r1.<java.util.Map: java.lang.Object get(java.lang.Object)>($r6);

        r2 = (com.opengamma.analytics.financial.var.parametric.ParametricVaRDataBundle) $r7;

        r3 = virtualinvoke r2.<com.opengamma.analytics.financial.var.parametric.ParametricVaRDataBundle: com.opengamma.analytics.math.matrix.DoubleMatrix1D getExpectedReturn()>();

        $r8 = virtualinvoke r2.<com.opengamma.analytics.financial.var.parametric.ParametricVaRDataBundle: com.opengamma.analytics.math.matrix.Matrix getSensitivities()>();

        r4 = (com.opengamma.analytics.math.matrix.DoubleMatrix1D) $r8;

        $r9 = r0.<com.opengamma.analytics.financial.var.parametric.DeltaMeanCalculator: com.opengamma.analytics.math.matrix.MatrixAlgebra _algebra>;

        $d0 = virtualinvoke $r9.<com.opengamma.analytics.math.matrix.MatrixAlgebra: double getInnerProduct(com.opengamma.analytics.math.matrix.Matrix,com.opengamma.analytics.math.matrix.Matrix)>(r4, r3);

        $r10 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        return $r10;
    }

    public int hashCode()
    {
        com.opengamma.analytics.financial.var.parametric.DeltaMeanCalculator r0;
        com.opengamma.analytics.math.matrix.MatrixAlgebra $r1;
        int $i1, $i2, i4;

        r0 := @this: com.opengamma.analytics.financial.var.parametric.DeltaMeanCalculator;

        $i1 = 31 * 1;

        $r1 = r0.<com.opengamma.analytics.financial.var.parametric.DeltaMeanCalculator: com.opengamma.analytics.math.matrix.MatrixAlgebra _algebra>;

        $i2 = virtualinvoke $r1.<java.lang.Object: int hashCode()>();

        i4 = $i1 + $i2;

        return i4;
    }

    public boolean equals(java.lang.Object)
    {
        com.opengamma.analytics.financial.var.parametric.DeltaMeanCalculator r0, r2;
        java.lang.Object r1;
        java.lang.Class $r3, $r4;
        com.opengamma.analytics.math.matrix.MatrixAlgebra $r5, $r6;
        boolean $z0;

        r0 := @this: com.opengamma.analytics.financial.var.parametric.DeltaMeanCalculator;

        r1 := @parameter0: java.lang.Object;

        if r0 != r1 goto label1;

        return 1;

     label1:
        if r1 != null goto label2;

        return 0;

     label2:
        $r3 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r4 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        if $r3 == $r4 goto label3;

        return 0;

     label3:
        r2 = (com.opengamma.analytics.financial.var.parametric.DeltaMeanCalculator) r1;

        $r6 = r0.<com.opengamma.analytics.financial.var.parametric.DeltaMeanCalculator: com.opengamma.analytics.math.matrix.MatrixAlgebra _algebra>;

        $r5 = r2.<com.opengamma.analytics.financial.var.parametric.DeltaMeanCalculator: com.opengamma.analytics.math.matrix.MatrixAlgebra _algebra>;

        $z0 = staticinvoke <org.apache.commons.lang.ObjectUtils: boolean equals(java.lang.Object,java.lang.Object)>($r6, $r5);

        return $z0;
    }

    public volatile java.lang.Object evaluate(java.lang.Object)
    {
        com.opengamma.analytics.financial.var.parametric.DeltaMeanCalculator r0;
        java.lang.Object r1;
        java.util.Map $r2;
        java.lang.Double $r3;

        r0 := @this: com.opengamma.analytics.financial.var.parametric.DeltaMeanCalculator;

        r1 := @parameter0: java.lang.Object;

        $r2 = (java.util.Map) r1;

        $r3 = virtualinvoke r0.<com.opengamma.analytics.financial.var.parametric.DeltaMeanCalculator: java.lang.Double evaluate(java.util.Map)>($r2);

        return $r3;
    }
}
