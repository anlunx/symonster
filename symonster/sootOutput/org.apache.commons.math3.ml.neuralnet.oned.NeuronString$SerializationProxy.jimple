class org.apache.commons.math3.ml.neuralnet.oned.NeuronString$SerializationProxy extends java.lang.Object implements java.io.Serializable
{
    private static final long serialVersionUID;
    private final boolean wrap;
    private final double[][] featuresList;

    void <init>(boolean, double[][])
    {
        org.apache.commons.math3.ml.neuralnet.oned.NeuronString$SerializationProxy r0;
        boolean z0;
        double[][] r1;

        r0 := @this: org.apache.commons.math3.ml.neuralnet.oned.NeuronString$SerializationProxy;

        z0 := @parameter0: boolean;

        r1 := @parameter1: double[][];

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.commons.math3.ml.neuralnet.oned.NeuronString$SerializationProxy: boolean wrap> = z0;

        r0.<org.apache.commons.math3.ml.neuralnet.oned.NeuronString$SerializationProxy: double[][] featuresList> = r1;

        return;
    }

    private java.lang.Object readResolve()
    {
        org.apache.commons.math3.ml.neuralnet.oned.NeuronString$SerializationProxy r0;
        org.apache.commons.math3.ml.neuralnet.oned.NeuronString $r1;
        double[][] $r2;
        boolean $z0;

        r0 := @this: org.apache.commons.math3.ml.neuralnet.oned.NeuronString$SerializationProxy;

        $r1 = new org.apache.commons.math3.ml.neuralnet.oned.NeuronString;

        $z0 = r0.<org.apache.commons.math3.ml.neuralnet.oned.NeuronString$SerializationProxy: boolean wrap>;

        $r2 = r0.<org.apache.commons.math3.ml.neuralnet.oned.NeuronString$SerializationProxy: double[][] featuresList>;

        specialinvoke $r1.<org.apache.commons.math3.ml.neuralnet.oned.NeuronString: void <init>(boolean,double[][])>($z0, $r2);

        return $r1;
    }

    public static void <clinit>()
    {
        <org.apache.commons.math3.ml.neuralnet.oned.NeuronString$SerializationProxy: long serialVersionUID> = 20130226L;

        return;
    }
}
