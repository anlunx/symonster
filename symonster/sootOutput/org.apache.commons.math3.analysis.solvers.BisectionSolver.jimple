public class org.apache.commons.math3.analysis.solvers.BisectionSolver extends org.apache.commons.math3.analysis.solvers.AbstractUnivariateSolver
{
    private static final double DEFAULT_ABSOLUTE_ACCURACY;

    public void <init>()
    {
        org.apache.commons.math3.analysis.solvers.BisectionSolver r0;

        r0 := @this: org.apache.commons.math3.analysis.solvers.BisectionSolver;

        specialinvoke r0.<org.apache.commons.math3.analysis.solvers.BisectionSolver: void <init>(double)>(1.0E-6);

        return;
    }

    public void <init>(double)
    {
        org.apache.commons.math3.analysis.solvers.BisectionSolver r0;
        double d0;

        r0 := @this: org.apache.commons.math3.analysis.solvers.BisectionSolver;

        d0 := @parameter0: double;

        specialinvoke r0.<org.apache.commons.math3.analysis.solvers.AbstractUnivariateSolver: void <init>(double)>(d0);

        return;
    }

    public void <init>(double, double)
    {
        org.apache.commons.math3.analysis.solvers.BisectionSolver r0;
        double d0, d1;

        r0 := @this: org.apache.commons.math3.analysis.solvers.BisectionSolver;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        specialinvoke r0.<org.apache.commons.math3.analysis.solvers.AbstractUnivariateSolver: void <init>(double,double)>(d0, d1);

        return;
    }

    protected double doSolve() throws org.apache.commons.math3.exception.TooManyEvaluationsException
    {
        org.apache.commons.math3.analysis.solvers.BisectionSolver r0;
        double d0, d1, d2, $d3, $d4, $d5, d6, d7, d8, d9;
        byte $b0, $b1;

        r0 := @this: org.apache.commons.math3.analysis.solvers.BisectionSolver;

        d6 = virtualinvoke r0.<org.apache.commons.math3.analysis.solvers.BisectionSolver: double getMin()>();

        d7 = virtualinvoke r0.<org.apache.commons.math3.analysis.solvers.BisectionSolver: double getMax()>();

        virtualinvoke r0.<org.apache.commons.math3.analysis.solvers.BisectionSolver: void verifyInterval(double,double)>(d6, d7);

        d0 = virtualinvoke r0.<org.apache.commons.math3.analysis.solvers.BisectionSolver: double getAbsoluteAccuracy()>();

     label1:
        d8 = staticinvoke <org.apache.commons.math3.analysis.solvers.UnivariateSolverUtils: double midpoint(double,double)>(d6, d7);

        d2 = virtualinvoke r0.<org.apache.commons.math3.analysis.solvers.BisectionSolver: double computeObjectiveValue(double)>(d6);

        d1 = virtualinvoke r0.<org.apache.commons.math3.analysis.solvers.BisectionSolver: double computeObjectiveValue(double)>(d8);

        $d3 = d1 * d2;

        $b0 = $d3 cmpl 0.0;

        if $b0 <= 0 goto label2;

        d6 = d8;

        goto label3;

     label2:
        d7 = d8;

     label3:
        $d4 = d7 - d6;

        $d5 = staticinvoke <org.apache.commons.math3.util.FastMath: double abs(double)>($d4);

        $b1 = $d5 cmpg d0;

        if $b1 > 0 goto label1;

        d9 = staticinvoke <org.apache.commons.math3.analysis.solvers.UnivariateSolverUtils: double midpoint(double,double)>(d6, d7);

        return d9;
    }

    public static void <clinit>()
    {
        <org.apache.commons.math3.analysis.solvers.BisectionSolver: double DEFAULT_ABSOLUTE_ACCURACY> = 1.0E-6;

        return;
    }
}
