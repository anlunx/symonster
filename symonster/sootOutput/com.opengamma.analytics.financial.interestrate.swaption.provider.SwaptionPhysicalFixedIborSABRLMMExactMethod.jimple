public class com.opengamma.analytics.financial.interestrate.swaption.provider.SwaptionPhysicalFixedIborSABRLMMExactMethod extends java.lang.Object
{
    private static final double DEFAULT_MEAN_REVERSION;
    private static final double DEFAULT_DISPLACEMENT;
    private static final double DEFAULT_ANGLE;
    private static final com.opengamma.analytics.financial.provider.calculator.sabrswaption.PresentValueSABRSwaptionCalculator PVSSC;
    private static final com.opengamma.analytics.financial.provider.calculator.sabrswaption.PresentValueCurveSensitivitySABRSwaptionCalculator PVCSSSC;
    private static final com.opengamma.analytics.financial.provider.calculator.sabrswaption.PresentValueSABRSensitivitySABRSwaptionCalculator PVSSSSC;
    private static final com.opengamma.analytics.financial.interestrate.swaption.provider.SwaptionPhysicalFixedIborLMMDDMethod METHOD_SWAPTION_LMM;
    private static final com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionPhysicalFixedIborBasketMethod METHOD_BASKET;

    public void <init>()
    {
        com.opengamma.analytics.financial.interestrate.swaption.provider.SwaptionPhysicalFixedIborSABRLMMExactMethod r0;

        r0 := @this: com.opengamma.analytics.financial.interestrate.swaption.provider.SwaptionPhysicalFixedIborSABRLMMExactMethod;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public com.opengamma.util.money.MultipleCurrencyAmount presentValue(com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionPhysicalFixedIbor, com.opengamma.analytics.financial.provider.description.interestrate.SABRSwaptionProviderInterface)
    {
        com.opengamma.analytics.financial.interestrate.swaption.provider.SwaptionPhysicalFixedIborSABRLMMExactMethod r0;
        com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionPhysicalFixedIbor r1;
        com.opengamma.analytics.financial.provider.description.interestrate.SABRSwaptionProviderInterface r2;
        com.opengamma.util.money.Currency r3, $r18;
        com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface r4;
        com.opengamma.analytics.financial.model.interestrate.definition.LiborMarketModelDisplacedDiffusionParameters r5;
        com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionPhysicalFixedIbor[] r8;
        com.opengamma.analytics.financial.interestrate.swaption.provider.SwaptionPhysicalFixedIborSABRLMMExactMethod$VolatilityLMMAngle $r12;
        com.opengamma.analytics.financial.provider.method.SuccessiveRootFinderLMMDDCalibrationObjective $r13;
        com.opengamma.analytics.financial.provider.method.SuccessiveRootFinderLMMDDCalibrationEngine $r14;
        com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionPhysicalFixedIborBasketMethod $r15;
        com.opengamma.analytics.financial.provider.calculator.sabrswaption.PresentValueSABRSwaptionCalculator $r16;
        com.opengamma.analytics.financial.provider.description.interestrate.LiborMarketModelDisplacedDiffusionProvider $r17;
        com.opengamma.analytics.financial.interestrate.swaption.provider.SwaptionPhysicalFixedIborLMMDDMethod $r19;
        com.opengamma.util.money.MultipleCurrencyAmount $r20, $r21;
        double $d0;

        r0 := @this: com.opengamma.analytics.financial.interestrate.swaption.provider.SwaptionPhysicalFixedIborSABRLMMExactMethod;

        r1 := @parameter0: com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionPhysicalFixedIbor;

        r2 := @parameter1: com.opengamma.analytics.financial.provider.description.interestrate.SABRSwaptionProviderInterface;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "Swaption");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, "SABR swaption provider");

        r3 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionPhysicalFixedIbor: com.opengamma.util.money.Currency getCurrency()>();

        r4 = interfaceinvoke r2.<com.opengamma.analytics.financial.provider.description.interestrate.SABRSwaptionProviderInterface: com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface getMulticurveProvider()>();

        $r12 = new com.opengamma.analytics.financial.interestrate.swaption.provider.SwaptionPhysicalFixedIborSABRLMMExactMethod$VolatilityLMMAngle;

        specialinvoke $r12.<com.opengamma.analytics.financial.interestrate.swaption.provider.SwaptionPhysicalFixedIborSABRLMMExactMethod$VolatilityLMMAngle: void <init>(double,double)>(1.5707963267948966, 0.1);

        r5 = staticinvoke <com.opengamma.analytics.financial.model.interestrate.definition.LiborMarketModelDisplacedDiffusionParameters: com.opengamma.analytics.financial.model.interestrate.definition.LiborMarketModelDisplacedDiffusionParameters 'from'(com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionPhysicalFixedIbor,double,double,com.opengamma.analytics.math.function.Function1D)>(r1, 0.1, 0.01, $r12);

        $r13 = new com.opengamma.analytics.financial.provider.method.SuccessiveRootFinderLMMDDCalibrationObjective;

        specialinvoke $r13.<com.opengamma.analytics.financial.provider.method.SuccessiveRootFinderLMMDDCalibrationObjective: void <init>(com.opengamma.analytics.financial.model.interestrate.definition.LiborMarketModelDisplacedDiffusionParameters,com.opengamma.util.money.Currency)>(r5, r3);

        $r14 = new com.opengamma.analytics.financial.provider.method.SuccessiveRootFinderLMMDDCalibrationEngine;

        specialinvoke $r14.<com.opengamma.analytics.financial.provider.method.SuccessiveRootFinderLMMDDCalibrationEngine: void <init>(com.opengamma.analytics.financial.provider.method.SuccessiveRootFinderCalibrationObjectiveWithMultiCurves)>($r13);

        $r15 = <com.opengamma.analytics.financial.interestrate.swaption.provider.SwaptionPhysicalFixedIborSABRLMMExactMethod: com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionPhysicalFixedIborBasketMethod METHOD_BASKET>;

        r8 = virtualinvoke $r15.<com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionPhysicalFixedIborBasketMethod: com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionPhysicalFixedIbor[] calibrationBasketFixedLegPeriod(com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionPhysicalFixedIbor)>(r1);

        $r16 = <com.opengamma.analytics.financial.interestrate.swaption.provider.SwaptionPhysicalFixedIborSABRLMMExactMethod: com.opengamma.analytics.financial.provider.calculator.sabrswaption.PresentValueSABRSwaptionCalculator PVSSC>;

        virtualinvoke $r14.<com.opengamma.analytics.financial.provider.method.SuccessiveRootFinderLMMDDCalibrationEngine: void addInstrument(com.opengamma.analytics.financial.interestrate.InstrumentDerivative[],com.opengamma.analytics.financial.interestrate.InstrumentDerivativeVisitor)>(r8, $r16);

        virtualinvoke $r14.<com.opengamma.analytics.financial.provider.method.SuccessiveRootFinderLMMDDCalibrationEngine: void calibrate(com.opengamma.analytics.financial.provider.description.interestrate.ParameterProviderInterface)>(r2);

        $r17 = new com.opengamma.analytics.financial.provider.description.interestrate.LiborMarketModelDisplacedDiffusionProvider;

        specialinvoke $r17.<com.opengamma.analytics.financial.provider.description.interestrate.LiborMarketModelDisplacedDiffusionProvider: void <init>(com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface,com.opengamma.analytics.financial.model.interestrate.definition.LiborMarketModelDisplacedDiffusionParameters,com.opengamma.util.money.Currency)>(r4, r5, r3);

        $r18 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionPhysicalFixedIbor: com.opengamma.util.money.Currency getCurrency()>();

        $r19 = <com.opengamma.analytics.financial.interestrate.swaption.provider.SwaptionPhysicalFixedIborSABRLMMExactMethod: com.opengamma.analytics.financial.interestrate.swaption.provider.SwaptionPhysicalFixedIborLMMDDMethod METHOD_SWAPTION_LMM>;

        $r20 = virtualinvoke $r19.<com.opengamma.analytics.financial.interestrate.swaption.provider.SwaptionPhysicalFixedIborLMMDDMethod: com.opengamma.util.money.MultipleCurrencyAmount presentValue(com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionPhysicalFixedIbor,com.opengamma.analytics.financial.provider.description.interestrate.LiborMarketModelDisplacedDiffusionProviderInterface)>(r1, $r17);

        $d0 = virtualinvoke $r20.<com.opengamma.util.money.MultipleCurrencyAmount: double getAmount(com.opengamma.util.money.Currency)>(r3);

        $r21 = staticinvoke <com.opengamma.util.money.MultipleCurrencyAmount: com.opengamma.util.money.MultipleCurrencyAmount of(com.opengamma.util.money.Currency,double)>($r18, $d0);

        return $r21;
    }

    public com.opengamma.analytics.financial.interestrate.PresentValueSABRSensitivityDataBundle presentValueSABRSensitivity(com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionPhysicalFixedIbor, com.opengamma.analytics.financial.provider.description.interestrate.SABRSwaptionProviderInterface)
    {
        com.opengamma.analytics.financial.interestrate.swaption.provider.SwaptionPhysicalFixedIborSABRLMMExactMethod r0;
        com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionPhysicalFixedIbor r1, $r61, $r62, $r64, $r109;
        com.opengamma.analytics.financial.provider.description.interestrate.SABRSwaptionProviderInterface r2;
        com.opengamma.util.money.Currency r3;
        com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface r4;
        com.opengamma.analytics.financial.model.interestrate.definition.LiborMarketModelDisplacedDiffusionParameters r5;
        com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionPhysicalFixedIbor[] r8;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, i7, i8, i9, i10, i11, i12, i13, i14, i15, i16;
        java.util.List r10;
        double[] r11, r25, r26, r27, $r73, $r80, $r87, $r97, $r99, $r101, $r106, $r108;
        double[][][] r12;
        double[][] r13, r15, r16, r17, $r55, $r57, $r59, $r98, $r100, $r107, $r111, r115;
        com.opengamma.analytics.financial.interestrate.PresentValueSABRSensitivityDataBundle[] r14;
        com.opengamma.analytics.math.matrix.DoubleMatrix2D r18, r20, r21, r23, r24, $r40, $r42, $r44, $r46, $r48, $r50, $r52, $r54, $r56, $r58, r114, r120;
        com.opengamma.util.tuple.DoublesPair r29, $r76, $r83, $r90;
        com.opengamma.analytics.financial.interestrate.swaption.provider.SwaptionPhysicalFixedIborSABRLMMExactMethod$VolatilityLMMAngle $r32;
        com.opengamma.analytics.financial.provider.method.SuccessiveRootFinderLMMDDCalibrationObjective $r33;
        com.opengamma.analytics.financial.provider.method.SuccessiveRootFinderLMMDDCalibrationEngine $r34;
        com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionPhysicalFixedIborBasketMethod $r35;
        com.opengamma.analytics.financial.provider.calculator.sabrswaption.PresentValueSABRSwaptionCalculator $r36;
        com.opengamma.analytics.financial.provider.description.interestrate.LiborMarketModelDisplacedDiffusionProvider $r37;
        com.opengamma.analytics.financial.interestrate.swaption.provider.SwaptionPhysicalFixedIborLMMDDMethod $r38, $r110;
        com.opengamma.analytics.math.matrix.CommonsMatrixAlgebra $r39;
        com.opengamma.analytics.math.matrix.DoubleMatrix1D $r41;
        com.opengamma.analytics.math.matrix.Matrix $r43, $r45, $r47, $r49, $r51, $r53;
        com.opengamma.analytics.financial.interestrate.PresentValueSABRSensitivityDataBundle $r60, $r66, $r67, $r72, $r79, $r86;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17;
        com.opengamma.analytics.financial.provider.calculator.sabrswaption.PresentValueSABRSensitivitySABRSwaptionCalculator $r63;
        java.lang.Object $r65, $r77, $r84, $r91, $r93, $r95, $r102, $r104;
        com.opengamma.analytics.util.amount.SurfaceValue $r68, $r74, $r81, $r88;
        java.util.HashMap $r69, $r75, $r82, $r89;
        com.opengamma.util.tuple.DoublesPair[] $r70, r117;
        java.lang.Object[] $r71;
        java.lang.Double $r78, $r85, $r92;
        java.lang.Integer $r94, $r96, $r103, $r105;
        java.util.Set r116;

        r0 := @this: com.opengamma.analytics.financial.interestrate.swaption.provider.SwaptionPhysicalFixedIborSABRLMMExactMethod;

        r1 := @parameter0: com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionPhysicalFixedIbor;

        r2 := @parameter1: com.opengamma.analytics.financial.provider.description.interestrate.SABRSwaptionProviderInterface;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "Swaption");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, "SABR swaption provider");

        r3 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionPhysicalFixedIbor: com.opengamma.util.money.Currency getCurrency()>();

        r4 = interfaceinvoke r2.<com.opengamma.analytics.financial.provider.description.interestrate.SABRSwaptionProviderInterface: com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface getMulticurveProvider()>();

        $r32 = new com.opengamma.analytics.financial.interestrate.swaption.provider.SwaptionPhysicalFixedIborSABRLMMExactMethod$VolatilityLMMAngle;

        specialinvoke $r32.<com.opengamma.analytics.financial.interestrate.swaption.provider.SwaptionPhysicalFixedIborSABRLMMExactMethod$VolatilityLMMAngle: void <init>(double,double)>(1.5707963267948966, 0.1);

        r5 = staticinvoke <com.opengamma.analytics.financial.model.interestrate.definition.LiborMarketModelDisplacedDiffusionParameters: com.opengamma.analytics.financial.model.interestrate.definition.LiborMarketModelDisplacedDiffusionParameters 'from'(com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionPhysicalFixedIbor,double,double,com.opengamma.analytics.math.function.Function1D)>(r1, 0.1, 0.01, $r32);

        $r33 = new com.opengamma.analytics.financial.provider.method.SuccessiveRootFinderLMMDDCalibrationObjective;

        specialinvoke $r33.<com.opengamma.analytics.financial.provider.method.SuccessiveRootFinderLMMDDCalibrationObjective: void <init>(com.opengamma.analytics.financial.model.interestrate.definition.LiborMarketModelDisplacedDiffusionParameters,com.opengamma.util.money.Currency)>(r5, r3);

        $r34 = new com.opengamma.analytics.financial.provider.method.SuccessiveRootFinderLMMDDCalibrationEngine;

        specialinvoke $r34.<com.opengamma.analytics.financial.provider.method.SuccessiveRootFinderLMMDDCalibrationEngine: void <init>(com.opengamma.analytics.financial.provider.method.SuccessiveRootFinderCalibrationObjectiveWithMultiCurves)>($r33);

        $r35 = <com.opengamma.analytics.financial.interestrate.swaption.provider.SwaptionPhysicalFixedIborSABRLMMExactMethod: com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionPhysicalFixedIborBasketMethod METHOD_BASKET>;

        r8 = virtualinvoke $r35.<com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionPhysicalFixedIborBasketMethod: com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionPhysicalFixedIbor[] calibrationBasketFixedLegPeriod(com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionPhysicalFixedIbor)>(r1);

        $r36 = <com.opengamma.analytics.financial.interestrate.swaption.provider.SwaptionPhysicalFixedIborSABRLMMExactMethod: com.opengamma.analytics.financial.provider.calculator.sabrswaption.PresentValueSABRSwaptionCalculator PVSSC>;

        virtualinvoke $r34.<com.opengamma.analytics.financial.provider.method.SuccessiveRootFinderLMMDDCalibrationEngine: void addInstrument(com.opengamma.analytics.financial.interestrate.InstrumentDerivative[],com.opengamma.analytics.financial.interestrate.InstrumentDerivativeVisitor)>(r8, $r36);

        virtualinvoke $r34.<com.opengamma.analytics.financial.provider.method.SuccessiveRootFinderLMMDDCalibrationEngine: void calibrate(com.opengamma.analytics.financial.provider.description.interestrate.ParameterProviderInterface)>(r2);

        $r37 = new com.opengamma.analytics.financial.provider.description.interestrate.LiborMarketModelDisplacedDiffusionProvider;

        specialinvoke $r37.<com.opengamma.analytics.financial.provider.description.interestrate.LiborMarketModelDisplacedDiffusionProvider: void <init>(com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface,com.opengamma.analytics.financial.model.interestrate.definition.LiborMarketModelDisplacedDiffusionParameters,com.opengamma.util.money.Currency)>(r4, r5, r3);

        i0 = lengthof r8;

        i1 = virtualinvoke r5.<com.opengamma.analytics.financial.model.interestrate.definition.LiborMarketModelDisplacedDiffusionParameters: int getNbFactor()>();

        r10 = virtualinvoke $r34.<com.opengamma.analytics.financial.provider.method.SuccessiveRootFinderLMMDDCalibrationEngine: java.util.List getInstrumentIndex()>();

        r11 = newarray (double)[i0];

        r12 = newarray (double[][])[i0];

        r13 = newmultiarray (double)[i0][i0];

        r14 = newarray (com.opengamma.analytics.financial.interestrate.PresentValueSABRSensitivityDataBundle)[i0];

        $r38 = <com.opengamma.analytics.financial.interestrate.swaption.provider.SwaptionPhysicalFixedIborSABRLMMExactMethod: com.opengamma.analytics.financial.interestrate.swaption.provider.SwaptionPhysicalFixedIborLMMDDMethod METHOD_SWAPTION_LMM>;

        r15 = virtualinvoke $r38.<com.opengamma.analytics.financial.interestrate.swaption.provider.SwaptionPhysicalFixedIborLMMDDMethod: double[][] presentValueLMMSensitivity(com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionPhysicalFixedIbor,com.opengamma.analytics.financial.provider.description.interestrate.LiborMarketModelDisplacedDiffusionProviderInterface)>(r1, $r37);

        i7 = 0;

     label01:
        if i7 >= i0 goto label02;

        $r110 = <com.opengamma.analytics.financial.interestrate.swaption.provider.SwaptionPhysicalFixedIborSABRLMMExactMethod: com.opengamma.analytics.financial.interestrate.swaption.provider.SwaptionPhysicalFixedIborLMMDDMethod METHOD_SWAPTION_LMM>;

        $r109 = r8[i7];

        $r111 = virtualinvoke $r110.<com.opengamma.analytics.financial.interestrate.swaption.provider.SwaptionPhysicalFixedIborLMMDDMethod: double[][] presentValueLMMSensitivity(com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionPhysicalFixedIbor,com.opengamma.analytics.financial.provider.description.interestrate.LiborMarketModelDisplacedDiffusionProviderInterface)>($r109, $r37);

        r12[i7] = $r111;

        i7 = i7 + 1;

        goto label01;

     label02:
        i8 = 0;

     label03:
        if i8 >= i0 goto label08;

        $r102 = interfaceinvoke r10.<java.util.List: java.lang.Object get(int)>(i8);

        $r103 = (java.lang.Integer) $r102;

        i9 = virtualinvoke $r103.<java.lang.Integer: int intValue()>();

     label04:
        $i5 = i8 + 1;

        $r104 = interfaceinvoke r10.<java.util.List: java.lang.Object get(int)>($i5);

        $r105 = (java.lang.Integer) $r104;

        $i6 = virtualinvoke $r105.<java.lang.Integer: int intValue()>();

        if i9 >= $i6 goto label07;

        i10 = 0;

     label05:
        if i10 >= i1 goto label06;

        $d13 = r11[i8];

        $r106 = r15[i9];

        $d14 = $r106[i10];

        $r107 = virtualinvoke r5.<com.opengamma.analytics.financial.model.interestrate.definition.LiborMarketModelDisplacedDiffusionParameters: double[][] getVolatility()>();

        $r108 = $r107[i9];

        $d15 = $r108[i10];

        $d16 = $d14 * $d15;

        $d17 = $d13 + $d16;

        r11[i8] = $d17;

        i10 = i10 + 1;

        goto label05;

     label06:
        i9 = i9 + 1;

        goto label04;

     label07:
        i8 = i8 + 1;

        goto label03;

     label08:
        i11 = 0;

     label09:
        if i11 >= i0 goto label16;

        i12 = 0;

     label10:
        if i12 >= i0 goto label15;

        $r93 = interfaceinvoke r10.<java.util.List: java.lang.Object get(int)>(i12);

        $r94 = (java.lang.Integer) $r93;

        i13 = virtualinvoke $r94.<java.lang.Integer: int intValue()>();

     label11:
        $i3 = i12 + 1;

        $r95 = interfaceinvoke r10.<java.util.List: java.lang.Object get(int)>($i3);

        $r96 = (java.lang.Integer) $r95;

        $i4 = virtualinvoke $r96.<java.lang.Integer: int intValue()>();

        if i13 >= $i4 goto label14;

        i14 = 0;

     label12:
        if i14 >= i1 goto label13;

        $r97 = r13[i11];

        $d8 = $r97[i12];

        $r98 = r12[i11];

        $r99 = $r98[i13];

        $d9 = $r99[i14];

        $r100 = virtualinvoke r5.<com.opengamma.analytics.financial.model.interestrate.definition.LiborMarketModelDisplacedDiffusionParameters: double[][] getVolatility()>();

        $r101 = $r100[i13];

        $d10 = $r101[i14];

        $d11 = $d9 * $d10;

        $d12 = $d8 + $d11;

        $r97[i12] = $d12;

        i14 = i14 + 1;

        goto label12;

     label13:
        i13 = i13 + 1;

        goto label11;

     label14:
        i12 = i12 + 1;

        goto label10;

     label15:
        i11 = i11 + 1;

        goto label09;

     label16:
        $r39 = new com.opengamma.analytics.math.matrix.CommonsMatrixAlgebra;

        specialinvoke $r39.<com.opengamma.analytics.math.matrix.CommonsMatrixAlgebra: void <init>()>();

        $r40 = new com.opengamma.analytics.math.matrix.DoubleMatrix2D;

        specialinvoke $r40.<com.opengamma.analytics.math.matrix.DoubleMatrix2D: void <init>(double[][])>(r13);

        r114 = virtualinvoke $r39.<com.opengamma.analytics.math.matrix.CommonsMatrixAlgebra: com.opengamma.analytics.math.matrix.DoubleMatrix2D getInverse(com.opengamma.analytics.math.matrix.Matrix)>($r40);

        r115 = newmultiarray (double)[i0][i0];

        r16 = newmultiarray (double)[i0][i0];

        r17 = newmultiarray (double)[i0][i0];

        i15 = 0;

     label17:
        if i15 >= i0 goto label18;

        $r64 = r8[i15];

        $r63 = <com.opengamma.analytics.financial.interestrate.swaption.provider.SwaptionPhysicalFixedIborSABRLMMExactMethod: com.opengamma.analytics.financial.provider.calculator.sabrswaption.PresentValueSABRSensitivitySABRSwaptionCalculator PVSSSSC>;

        $r65 = virtualinvoke $r64.<com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionPhysicalFixedIbor: java.lang.Object accept(com.opengamma.analytics.financial.interestrate.InstrumentDerivativeVisitor,java.lang.Object)>($r63, r2);

        $r66 = (com.opengamma.analytics.financial.interestrate.PresentValueSABRSensitivityDataBundle) $r65;

        r14[i15] = $r66;

        $r67 = r14[i15];

        $r68 = virtualinvoke $r67.<com.opengamma.analytics.financial.interestrate.PresentValueSABRSensitivityDataBundle: com.opengamma.analytics.util.amount.SurfaceValue getAlpha()>();

        $r69 = virtualinvoke $r68.<com.opengamma.analytics.util.amount.SurfaceValue: java.util.HashMap getMap()>();

        r116 = virtualinvoke $r69.<java.util.HashMap: java.util.Set keySet()>();

        $i2 = interfaceinvoke r116.<java.util.Set: int size()>();

        $r70 = newarray (com.opengamma.util.tuple.DoublesPair)[$i2];

        $r71 = interfaceinvoke r116.<java.util.Set: java.lang.Object[] toArray(java.lang.Object[])>($r70);

        r117 = (com.opengamma.util.tuple.DoublesPair[]) $r71;

        $r73 = r115[i15];

        $r72 = r14[i15];

        $r74 = virtualinvoke $r72.<com.opengamma.analytics.financial.interestrate.PresentValueSABRSensitivityDataBundle: com.opengamma.analytics.util.amount.SurfaceValue getAlpha()>();

        $r75 = virtualinvoke $r74.<com.opengamma.analytics.util.amount.SurfaceValue: java.util.HashMap getMap()>();

        $r76 = r117[0];

        $r77 = virtualinvoke $r75.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r76);

        $r78 = (java.lang.Double) $r77;

        $d5 = virtualinvoke $r78.<java.lang.Double: double doubleValue()>();

        $r73[i15] = $d5;

        $r80 = r16[i15];

        $r79 = r14[i15];

        $r81 = virtualinvoke $r79.<com.opengamma.analytics.financial.interestrate.PresentValueSABRSensitivityDataBundle: com.opengamma.analytics.util.amount.SurfaceValue getRho()>();

        $r82 = virtualinvoke $r81.<com.opengamma.analytics.util.amount.SurfaceValue: java.util.HashMap getMap()>();

        $r83 = r117[0];

        $r84 = virtualinvoke $r82.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r83);

        $r85 = (java.lang.Double) $r84;

        $d6 = virtualinvoke $r85.<java.lang.Double: double doubleValue()>();

        $r80[i15] = $d6;

        $r87 = r17[i15];

        $r86 = r14[i15];

        $r88 = virtualinvoke $r86.<com.opengamma.analytics.financial.interestrate.PresentValueSABRSensitivityDataBundle: com.opengamma.analytics.util.amount.SurfaceValue getNu()>();

        $r89 = virtualinvoke $r88.<com.opengamma.analytics.util.amount.SurfaceValue: java.util.HashMap getMap()>();

        $r90 = r117[0];

        $r91 = virtualinvoke $r89.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r90);

        $r92 = (java.lang.Double) $r91;

        $d7 = virtualinvoke $r92.<java.lang.Double: double doubleValue()>();

        $r87[i15] = $d7;

        i15 = i15 + 1;

        goto label17;

     label18:
        $r41 = new com.opengamma.analytics.math.matrix.DoubleMatrix1D;

        specialinvoke $r41.<com.opengamma.analytics.math.matrix.DoubleMatrix1D: void <init>(double[])>(r11);

        $r42 = new com.opengamma.analytics.math.matrix.DoubleMatrix2D;

        specialinvoke $r42.<com.opengamma.analytics.math.matrix.DoubleMatrix2D: void <init>(double[][])>(r115);

        $r43 = virtualinvoke $r39.<com.opengamma.analytics.math.matrix.CommonsMatrixAlgebra: com.opengamma.analytics.math.matrix.Matrix multiply(com.opengamma.analytics.math.matrix.Matrix,com.opengamma.analytics.math.matrix.Matrix)>(r114, $r42);

        r120 = (com.opengamma.analytics.math.matrix.DoubleMatrix2D) $r43;

        $r44 = virtualinvoke $r39.<com.opengamma.analytics.math.matrix.CommonsMatrixAlgebra: com.opengamma.analytics.math.matrix.DoubleMatrix2D getTranspose(com.opengamma.analytics.math.matrix.Matrix)>(r120);

        $r45 = virtualinvoke $r39.<com.opengamma.analytics.math.matrix.CommonsMatrixAlgebra: com.opengamma.analytics.math.matrix.Matrix multiply(com.opengamma.analytics.math.matrix.Matrix,com.opengamma.analytics.math.matrix.Matrix)>($r44, $r41);

        r18 = (com.opengamma.analytics.math.matrix.DoubleMatrix2D) $r45;

        $r46 = new com.opengamma.analytics.math.matrix.DoubleMatrix2D;

        specialinvoke $r46.<com.opengamma.analytics.math.matrix.DoubleMatrix2D: void <init>(double[][])>(r16);

        $r47 = virtualinvoke $r39.<com.opengamma.analytics.math.matrix.CommonsMatrixAlgebra: com.opengamma.analytics.math.matrix.Matrix multiply(com.opengamma.analytics.math.matrix.Matrix,com.opengamma.analytics.math.matrix.Matrix)>(r114, $r46);

        r20 = (com.opengamma.analytics.math.matrix.DoubleMatrix2D) $r47;

        $r48 = virtualinvoke $r39.<com.opengamma.analytics.math.matrix.CommonsMatrixAlgebra: com.opengamma.analytics.math.matrix.DoubleMatrix2D getTranspose(com.opengamma.analytics.math.matrix.Matrix)>(r20);

        $r49 = virtualinvoke $r39.<com.opengamma.analytics.math.matrix.CommonsMatrixAlgebra: com.opengamma.analytics.math.matrix.Matrix multiply(com.opengamma.analytics.math.matrix.Matrix,com.opengamma.analytics.math.matrix.Matrix)>($r48, $r41);

        r21 = (com.opengamma.analytics.math.matrix.DoubleMatrix2D) $r49;

        $r50 = new com.opengamma.analytics.math.matrix.DoubleMatrix2D;

        specialinvoke $r50.<com.opengamma.analytics.math.matrix.DoubleMatrix2D: void <init>(double[][])>(r17);

        $r51 = virtualinvoke $r39.<com.opengamma.analytics.math.matrix.CommonsMatrixAlgebra: com.opengamma.analytics.math.matrix.Matrix multiply(com.opengamma.analytics.math.matrix.Matrix,com.opengamma.analytics.math.matrix.Matrix)>(r114, $r50);

        r23 = (com.opengamma.analytics.math.matrix.DoubleMatrix2D) $r51;

        $r52 = virtualinvoke $r39.<com.opengamma.analytics.math.matrix.CommonsMatrixAlgebra: com.opengamma.analytics.math.matrix.DoubleMatrix2D getTranspose(com.opengamma.analytics.math.matrix.Matrix)>(r23);

        $r53 = virtualinvoke $r39.<com.opengamma.analytics.math.matrix.CommonsMatrixAlgebra: com.opengamma.analytics.math.matrix.Matrix multiply(com.opengamma.analytics.math.matrix.Matrix,com.opengamma.analytics.math.matrix.Matrix)>($r52, $r41);

        r24 = (com.opengamma.analytics.math.matrix.DoubleMatrix2D) $r53;

        $r54 = virtualinvoke $r39.<com.opengamma.analytics.math.matrix.CommonsMatrixAlgebra: com.opengamma.analytics.math.matrix.DoubleMatrix2D getTranspose(com.opengamma.analytics.math.matrix.Matrix)>(r18);

        $r55 = virtualinvoke $r54.<com.opengamma.analytics.math.matrix.DoubleMatrix2D: double[][] getData()>();

        r25 = $r55[0];

        $r56 = virtualinvoke $r39.<com.opengamma.analytics.math.matrix.CommonsMatrixAlgebra: com.opengamma.analytics.math.matrix.DoubleMatrix2D getTranspose(com.opengamma.analytics.math.matrix.Matrix)>(r21);

        $r57 = virtualinvoke $r56.<com.opengamma.analytics.math.matrix.DoubleMatrix2D: double[][] getData()>();

        r26 = $r57[0];

        $r58 = virtualinvoke $r39.<com.opengamma.analytics.math.matrix.CommonsMatrixAlgebra: com.opengamma.analytics.math.matrix.DoubleMatrix2D getTranspose(com.opengamma.analytics.math.matrix.Matrix)>(r24);

        $r59 = virtualinvoke $r58.<com.opengamma.analytics.math.matrix.DoubleMatrix2D: double[][] getData()>();

        r27 = $r59[0];

        $r60 = new com.opengamma.analytics.financial.interestrate.PresentValueSABRSensitivityDataBundle;

        specialinvoke $r60.<com.opengamma.analytics.financial.interestrate.PresentValueSABRSensitivityDataBundle: void <init>()>();

        i16 = 0;

     label19:
        if i16 >= i0 goto label20;

        $r61 = r8[i16];

        $d0 = virtualinvoke $r61.<com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionPhysicalFixedIbor: double getTimeToExpiry()>();

        $r62 = r8[i16];

        $d1 = virtualinvoke $r62.<com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionPhysicalFixedIbor: double getMaturityTime()>();

        r29 = staticinvoke <com.opengamma.util.tuple.DoublesPair: com.opengamma.util.tuple.DoublesPair of(double,double)>($d0, $d1);

        $d2 = r25[i16];

        virtualinvoke $r60.<com.opengamma.analytics.financial.interestrate.PresentValueSABRSensitivityDataBundle: void addAlpha(com.opengamma.util.tuple.DoublesPair,double)>(r29, $d2);

        $d3 = r26[i16];

        virtualinvoke $r60.<com.opengamma.analytics.financial.interestrate.PresentValueSABRSensitivityDataBundle: void addRho(com.opengamma.util.tuple.DoublesPair,double)>(r29, $d3);

        $d4 = r27[i16];

        virtualinvoke $r60.<com.opengamma.analytics.financial.interestrate.PresentValueSABRSensitivityDataBundle: void addNu(com.opengamma.util.tuple.DoublesPair,double)>(r29, $d4);

        i16 = i16 + 1;

        goto label19;

     label20:
        return $r60;
    }

    public com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyMulticurveSensitivity presentValueCurveSensitivity(com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionPhysicalFixedIbor, com.opengamma.analytics.financial.provider.description.interestrate.SABRSwaptionProviderInterface)
    {
        com.opengamma.analytics.financial.interestrate.swaption.provider.SwaptionPhysicalFixedIborSABRLMMExactMethod r0;
        com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionPhysicalFixedIbor r1, $r41, $r46, $r73;
        com.opengamma.analytics.financial.provider.description.interestrate.SABRSwaptionProviderInterface r2;
        com.opengamma.util.money.Currency r3;
        com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface r4;
        com.opengamma.analytics.financial.model.interestrate.definition.LiborMarketModelDisplacedDiffusionParameters r5;
        com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionPhysicalFixedIbor[] r8;
        int i0, i1, $i2, $i3, $i4, $i5, i6, i7, i8, i9, i10, i11, i12, i13, i14, i15, i16, i17;
        java.util.List r10;
        double[] r11, $r61, $r63, $r65, $r70, $r72;
        double[][][] r12;
        double[][] r13, r14, $r62, $r64, $r71, $r75;
        com.opengamma.analytics.math.matrix.DoubleMatrix2D r16, $r29;
        com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyMulticurveSensitivity[] r17, r78, r79, r80;
        com.opengamma.analytics.financial.interestrate.swaption.provider.SwaptionPhysicalFixedIborSABRLMMExactMethod$VolatilityLMMAngle $r20;
        com.opengamma.analytics.financial.provider.method.SuccessiveRootFinderLMMDDCalibrationObjective $r21;
        com.opengamma.analytics.financial.provider.method.SuccessiveRootFinderLMMDDCalibrationEngine $r22;
        com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionPhysicalFixedIborBasketMethod $r23;
        com.opengamma.analytics.financial.provider.calculator.sabrswaption.PresentValueSABRSwaptionCalculator $r24;
        com.opengamma.analytics.financial.provider.description.interestrate.LiborMarketModelDisplacedDiffusionProvider $r25;
        com.opengamma.analytics.financial.interestrate.swaption.provider.SwaptionPhysicalFixedIborLMMDDMethod $r26, $r27, $r47, $r74;
        com.opengamma.analytics.math.matrix.CommonsMatrixAlgebra $r28;
        com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyMulticurveSensitivity $r30, $r31, $r32, $r33, $r35, $r36, $r38, $r39, $r43, $r44, $r45, $r48, $r49, $r50, $r51, $r52, $r53, $r54, $r55, $r56, r76, r77, r82, r83, r84, r85;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11;
        int[] $r34;
        java.lang.Double $r37;
        com.opengamma.analytics.financial.provider.calculator.sabrswaption.PresentValueCurveSensitivitySABRSwaptionCalculator $r40;
        java.lang.Object $r42, $r57, $r59, $r66, $r68;
        java.lang.Integer $r58, $r60, $r67, $r69;

        r0 := @this: com.opengamma.analytics.financial.interestrate.swaption.provider.SwaptionPhysicalFixedIborSABRLMMExactMethod;

        r1 := @parameter0: com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionPhysicalFixedIbor;

        r2 := @parameter1: com.opengamma.analytics.financial.provider.description.interestrate.SABRSwaptionProviderInterface;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "Swaption");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, "SABR swaption provider");

        r3 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionPhysicalFixedIbor: com.opengamma.util.money.Currency getCurrency()>();

        r4 = interfaceinvoke r2.<com.opengamma.analytics.financial.provider.description.interestrate.SABRSwaptionProviderInterface: com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface getMulticurveProvider()>();

        $r20 = new com.opengamma.analytics.financial.interestrate.swaption.provider.SwaptionPhysicalFixedIborSABRLMMExactMethod$VolatilityLMMAngle;

        specialinvoke $r20.<com.opengamma.analytics.financial.interestrate.swaption.provider.SwaptionPhysicalFixedIborSABRLMMExactMethod$VolatilityLMMAngle: void <init>(double,double)>(1.5707963267948966, 0.1);

        r5 = staticinvoke <com.opengamma.analytics.financial.model.interestrate.definition.LiborMarketModelDisplacedDiffusionParameters: com.opengamma.analytics.financial.model.interestrate.definition.LiborMarketModelDisplacedDiffusionParameters 'from'(com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionPhysicalFixedIbor,double,double,com.opengamma.analytics.math.function.Function1D)>(r1, 0.1, 0.01, $r20);

        $r21 = new com.opengamma.analytics.financial.provider.method.SuccessiveRootFinderLMMDDCalibrationObjective;

        specialinvoke $r21.<com.opengamma.analytics.financial.provider.method.SuccessiveRootFinderLMMDDCalibrationObjective: void <init>(com.opengamma.analytics.financial.model.interestrate.definition.LiborMarketModelDisplacedDiffusionParameters,com.opengamma.util.money.Currency)>(r5, r3);

        $r22 = new com.opengamma.analytics.financial.provider.method.SuccessiveRootFinderLMMDDCalibrationEngine;

        specialinvoke $r22.<com.opengamma.analytics.financial.provider.method.SuccessiveRootFinderLMMDDCalibrationEngine: void <init>(com.opengamma.analytics.financial.provider.method.SuccessiveRootFinderCalibrationObjectiveWithMultiCurves)>($r21);

        $r23 = <com.opengamma.analytics.financial.interestrate.swaption.provider.SwaptionPhysicalFixedIborSABRLMMExactMethod: com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionPhysicalFixedIborBasketMethod METHOD_BASKET>;

        r8 = virtualinvoke $r23.<com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionPhysicalFixedIborBasketMethod: com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionPhysicalFixedIbor[] calibrationBasketFixedLegPeriod(com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionPhysicalFixedIbor)>(r1);

        $r24 = <com.opengamma.analytics.financial.interestrate.swaption.provider.SwaptionPhysicalFixedIborSABRLMMExactMethod: com.opengamma.analytics.financial.provider.calculator.sabrswaption.PresentValueSABRSwaptionCalculator PVSSC>;

        virtualinvoke $r22.<com.opengamma.analytics.financial.provider.method.SuccessiveRootFinderLMMDDCalibrationEngine: void addInstrument(com.opengamma.analytics.financial.interestrate.InstrumentDerivative[],com.opengamma.analytics.financial.interestrate.InstrumentDerivativeVisitor)>(r8, $r24);

        virtualinvoke $r22.<com.opengamma.analytics.financial.provider.method.SuccessiveRootFinderLMMDDCalibrationEngine: void calibrate(com.opengamma.analytics.financial.provider.description.interestrate.ParameterProviderInterface)>(r2);

        $r25 = new com.opengamma.analytics.financial.provider.description.interestrate.LiborMarketModelDisplacedDiffusionProvider;

        specialinvoke $r25.<com.opengamma.analytics.financial.provider.description.interestrate.LiborMarketModelDisplacedDiffusionProvider: void <init>(com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface,com.opengamma.analytics.financial.model.interestrate.definition.LiborMarketModelDisplacedDiffusionParameters,com.opengamma.util.money.Currency)>(r4, r5, r3);

        i0 = lengthof r8;

        i1 = virtualinvoke r5.<com.opengamma.analytics.financial.model.interestrate.definition.LiborMarketModelDisplacedDiffusionParameters: int getNbFactor()>();

        r10 = virtualinvoke $r22.<com.opengamma.analytics.financial.provider.method.SuccessiveRootFinderLMMDDCalibrationEngine: java.util.List getInstrumentIndex()>();

        r11 = newarray (double)[i0];

        r12 = newarray (double[][])[i0];

        r13 = newmultiarray (double)[i0][i0];

        $r26 = <com.opengamma.analytics.financial.interestrate.swaption.provider.SwaptionPhysicalFixedIborSABRLMMExactMethod: com.opengamma.analytics.financial.interestrate.swaption.provider.SwaptionPhysicalFixedIborLMMDDMethod METHOD_SWAPTION_LMM>;

        r76 = virtualinvoke $r26.<com.opengamma.analytics.financial.interestrate.swaption.provider.SwaptionPhysicalFixedIborLMMDDMethod: com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyMulticurveSensitivity presentValueCurveSensitivity(com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionPhysicalFixedIbor,com.opengamma.analytics.financial.provider.description.interestrate.LiborMarketModelDisplacedDiffusionProviderInterface)>(r1, $r25);

        r77 = virtualinvoke r76.<com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyMulticurveSensitivity: com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyMulticurveSensitivity cleaned()>();

        $r27 = <com.opengamma.analytics.financial.interestrate.swaption.provider.SwaptionPhysicalFixedIborSABRLMMExactMethod: com.opengamma.analytics.financial.interestrate.swaption.provider.SwaptionPhysicalFixedIborLMMDDMethod METHOD_SWAPTION_LMM>;

        r14 = virtualinvoke $r27.<com.opengamma.analytics.financial.interestrate.swaption.provider.SwaptionPhysicalFixedIborLMMDDMethod: double[][] presentValueLMMSensitivity(com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionPhysicalFixedIbor,com.opengamma.analytics.financial.provider.description.interestrate.LiborMarketModelDisplacedDiffusionProviderInterface)>(r1, $r25);

        i6 = 0;

     label01:
        if i6 >= i0 goto label02;

        $r74 = <com.opengamma.analytics.financial.interestrate.swaption.provider.SwaptionPhysicalFixedIborSABRLMMExactMethod: com.opengamma.analytics.financial.interestrate.swaption.provider.SwaptionPhysicalFixedIborLMMDDMethod METHOD_SWAPTION_LMM>;

        $r73 = r8[i6];

        $r75 = virtualinvoke $r74.<com.opengamma.analytics.financial.interestrate.swaption.provider.SwaptionPhysicalFixedIborLMMDDMethod: double[][] presentValueLMMSensitivity(com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionPhysicalFixedIbor,com.opengamma.analytics.financial.provider.description.interestrate.LiborMarketModelDisplacedDiffusionProviderInterface)>($r73, $r25);

        r12[i6] = $r75;

        i6 = i6 + 1;

        goto label01;

     label02:
        i7 = 0;

     label03:
        if i7 >= i0 goto label08;

        $r66 = interfaceinvoke r10.<java.util.List: java.lang.Object get(int)>(i7);

        $r67 = (java.lang.Integer) $r66;

        i8 = virtualinvoke $r67.<java.lang.Integer: int intValue()>();

     label04:
        $i4 = i7 + 1;

        $r68 = interfaceinvoke r10.<java.util.List: java.lang.Object get(int)>($i4);

        $r69 = (java.lang.Integer) $r68;

        $i5 = virtualinvoke $r69.<java.lang.Integer: int intValue()>();

        if i8 >= $i5 goto label07;

        i9 = 0;

     label05:
        if i9 >= i1 goto label06;

        $d7 = r11[i7];

        $r70 = r14[i8];

        $d8 = $r70[i9];

        $r71 = virtualinvoke r5.<com.opengamma.analytics.financial.model.interestrate.definition.LiborMarketModelDisplacedDiffusionParameters: double[][] getVolatility()>();

        $r72 = $r71[i8];

        $d9 = $r72[i9];

        $d10 = $d8 * $d9;

        $d11 = $d7 + $d10;

        r11[i7] = $d11;

        i9 = i9 + 1;

        goto label05;

     label06:
        i8 = i8 + 1;

        goto label04;

     label07:
        i7 = i7 + 1;

        goto label03;

     label08:
        i10 = 0;

     label09:
        if i10 >= i0 goto label16;

        i11 = 0;

     label10:
        if i11 >= i0 goto label15;

        $r57 = interfaceinvoke r10.<java.util.List: java.lang.Object get(int)>(i11);

        $r58 = (java.lang.Integer) $r57;

        i12 = virtualinvoke $r58.<java.lang.Integer: int intValue()>();

     label11:
        $i2 = i11 + 1;

        $r59 = interfaceinvoke r10.<java.util.List: java.lang.Object get(int)>($i2);

        $r60 = (java.lang.Integer) $r59;

        $i3 = virtualinvoke $r60.<java.lang.Integer: int intValue()>();

        if i12 >= $i3 goto label14;

        i13 = 0;

     label12:
        if i13 >= i1 goto label13;

        $r61 = r13[i10];

        $d2 = $r61[i11];

        $r62 = r12[i10];

        $r63 = $r62[i12];

        $d3 = $r63[i13];

        $r64 = virtualinvoke r5.<com.opengamma.analytics.financial.model.interestrate.definition.LiborMarketModelDisplacedDiffusionParameters: double[][] getVolatility()>();

        $r65 = $r64[i12];

        $d4 = $r65[i13];

        $d5 = $d3 * $d4;

        $d6 = $d2 + $d5;

        $r61[i11] = $d6;

        i13 = i13 + 1;

        goto label12;

     label13:
        i12 = i12 + 1;

        goto label11;

     label14:
        i11 = i11 + 1;

        goto label10;

     label15:
        i10 = i10 + 1;

        goto label09;

     label16:
        r78 = newarray (com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyMulticurveSensitivity)[i0];

        r79 = newarray (com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyMulticurveSensitivity)[i0];

        r80 = newarray (com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyMulticurveSensitivity)[i0];

        i14 = 0;

     label17:
        if i14 >= i0 goto label18;

        $r41 = r8[i14];

        $r40 = <com.opengamma.analytics.financial.interestrate.swaption.provider.SwaptionPhysicalFixedIborSABRLMMExactMethod: com.opengamma.analytics.financial.provider.calculator.sabrswaption.PresentValueCurveSensitivitySABRSwaptionCalculator PVCSSSC>;

        $r42 = virtualinvoke $r41.<com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionPhysicalFixedIbor: java.lang.Object accept(com.opengamma.analytics.financial.interestrate.InstrumentDerivativeVisitor,java.lang.Object)>($r40, r2);

        $r43 = (com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyMulticurveSensitivity) $r42;

        r78[i14] = $r43;

        $r44 = r78[i14];

        $r45 = virtualinvoke $r44.<com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyMulticurveSensitivity: com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyMulticurveSensitivity cleaned()>();

        r78[i14] = $r45;

        $r47 = <com.opengamma.analytics.financial.interestrate.swaption.provider.SwaptionPhysicalFixedIborSABRLMMExactMethod: com.opengamma.analytics.financial.interestrate.swaption.provider.SwaptionPhysicalFixedIborLMMDDMethod METHOD_SWAPTION_LMM>;

        $r46 = r8[i14];

        $r48 = virtualinvoke $r47.<com.opengamma.analytics.financial.interestrate.swaption.provider.SwaptionPhysicalFixedIborLMMDDMethod: com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyMulticurveSensitivity presentValueCurveSensitivity(com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionPhysicalFixedIbor,com.opengamma.analytics.financial.provider.description.interestrate.LiborMarketModelDisplacedDiffusionProviderInterface)>($r46, $r25);

        r79[i14] = $r48;

        $r49 = r79[i14];

        $r50 = virtualinvoke $r49.<com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyMulticurveSensitivity: com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyMulticurveSensitivity cleaned()>();

        r79[i14] = $r50;

        $r52 = r78[i14];

        $r51 = r79[i14];

        $r53 = virtualinvoke $r51.<com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyMulticurveSensitivity: com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyMulticurveSensitivity multipliedBy(double)>(-1.0);

        $r54 = virtualinvoke $r52.<com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyMulticurveSensitivity: com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyMulticurveSensitivity plus(com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyMulticurveSensitivity)>($r53);

        r80[i14] = $r54;

        $r55 = r80[i14];

        $r56 = virtualinvoke $r55.<com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyMulticurveSensitivity: com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyMulticurveSensitivity cleaned()>();

        r80[i14] = $r56;

        i14 = i14 + 1;

        goto label17;

     label18:
        $r28 = new com.opengamma.analytics.math.matrix.CommonsMatrixAlgebra;

        specialinvoke $r28.<com.opengamma.analytics.math.matrix.CommonsMatrixAlgebra: void <init>()>();

        $r29 = new com.opengamma.analytics.math.matrix.DoubleMatrix2D;

        specialinvoke $r29.<com.opengamma.analytics.math.matrix.DoubleMatrix2D: void <init>(double[][])>(r13);

        r16 = virtualinvoke $r28.<com.opengamma.analytics.math.matrix.CommonsMatrixAlgebra: com.opengamma.analytics.math.matrix.DoubleMatrix2D getInverse(com.opengamma.analytics.math.matrix.Matrix)>($r29);

        r17 = newarray (com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyMulticurveSensitivity)[i0];

        i15 = 0;

     label19:
        if i15 >= i0 goto label22;

        $r33 = new com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyMulticurveSensitivity;

        specialinvoke $r33.<com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyMulticurveSensitivity: void <init>()>();

        r17[i15] = $r33;

        i16 = 0;

     label20:
        if i16 > i15 goto label21;

        $r35 = r17[i15];

        $r36 = r80[i16];

        $r34 = newarray (int)[2];

        $r34[0] = i15;

        $r34[1] = i16;

        $r37 = virtualinvoke r16.<com.opengamma.analytics.math.matrix.DoubleMatrix2D: java.lang.Double getEntry(int[])>($r34);

        $d1 = virtualinvoke $r37.<java.lang.Double: double doubleValue()>();

        $r38 = virtualinvoke $r36.<com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyMulticurveSensitivity: com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyMulticurveSensitivity multipliedBy(double)>($d1);

        $r39 = virtualinvoke $r35.<com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyMulticurveSensitivity: com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyMulticurveSensitivity plus(com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyMulticurveSensitivity)>($r38);

        r17[i15] = $r39;

        i16 = i16 + 1;

        goto label20;

     label21:
        i15 = i15 + 1;

        goto label19;

     label22:
        $r30 = new com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyMulticurveSensitivity;

        specialinvoke $r30.<com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyMulticurveSensitivity: void <init>()>();

        r82 = $r30;

        i17 = 0;

     label23:
        if i17 >= i0 goto label24;

        $r31 = r17[i17];

        $d0 = r11[i17];

        $r32 = virtualinvoke $r31.<com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyMulticurveSensitivity: com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyMulticurveSensitivity multipliedBy(double)>($d0);

        r82 = virtualinvoke r82.<com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyMulticurveSensitivity: com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyMulticurveSensitivity plus(com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyMulticurveSensitivity)>($r32);

        i17 = i17 + 1;

        goto label23;

     label24:
        r83 = virtualinvoke r82.<com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyMulticurveSensitivity: com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyMulticurveSensitivity cleaned()>();

        r84 = virtualinvoke r77.<com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyMulticurveSensitivity: com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyMulticurveSensitivity plus(com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyMulticurveSensitivity)>(r83);

        r85 = virtualinvoke r84.<com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyMulticurveSensitivity: com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyMulticurveSensitivity cleaned()>();

        return r85;
    }

    public java.util.List presentValueCurveSABRSensitivity(com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionPhysicalFixedIbor, com.opengamma.analytics.financial.provider.description.interestrate.SABRSwaptionProviderInterface)
    {
        com.opengamma.analytics.financial.interestrate.swaption.provider.SwaptionPhysicalFixedIborSABRLMMExactMethod r0;
        com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionPhysicalFixedIbor r1, $r79, $r80, $r82, $r112, $r117, $r144;
        com.opengamma.analytics.financial.provider.description.interestrate.SABRSwaptionProviderInterface r2;
        com.opengamma.util.money.Currency r3, $r66;
        com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface r4;
        com.opengamma.analytics.financial.model.interestrate.definition.LiborMarketModelDisplacedDiffusionParameters r5;
        com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionPhysicalFixedIbor[] r8;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, i7, i8, i9, i10, i11, i12, i13, i14, i15, i16, i17, i18, i19, i20;
        java.util.List r10;
        double[] r11, r28, r29, r30, $r91, $r98, $r105, $r132, $r134, $r136, $r141, $r143;
        double[][][] r12;
        double[][] r13, r15, r18, r19, r20, $r58, $r60, $r62, $r133, $r135, $r142, $r146;
        com.opengamma.analytics.financial.interestrate.PresentValueSABRSensitivityDataBundle[] r14;
        com.opengamma.analytics.math.matrix.DoubleMatrix2D r17, r21, r23, r24, r26, r27, $r43, $r45, $r47, $r49, $r51, $r53, $r55, $r57, $r59, $r61, r157;
        com.opengamma.analytics.financial.interestrate.swaption.provider.SwaptionPhysicalFixedIborSABRLMMExactMethod$VolatilityLMMAngle $r34;
        com.opengamma.analytics.financial.provider.method.SuccessiveRootFinderLMMDDCalibrationObjective $r35;
        com.opengamma.analytics.financial.provider.method.SuccessiveRootFinderLMMDDCalibrationEngine $r36;
        com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionPhysicalFixedIborBasketMethod $r37;
        com.opengamma.analytics.financial.provider.calculator.sabrswaption.PresentValueSABRSwaptionCalculator $r38;
        com.opengamma.analytics.financial.provider.description.interestrate.LiborMarketModelDisplacedDiffusionProvider $r39;
        com.opengamma.analytics.financial.interestrate.swaption.provider.SwaptionPhysicalFixedIborLMMDDMethod $r40, $r41, $r67, $r118, $r145;
        com.opengamma.analytics.math.matrix.CommonsMatrixAlgebra $r42;
        com.opengamma.analytics.math.matrix.DoubleMatrix1D $r44;
        com.opengamma.analytics.math.matrix.Matrix $r46, $r48, $r50, $r52, $r54, $r56;
        com.opengamma.analytics.financial.interestrate.PresentValueSABRSensitivityDataBundle $r63, $r84, $r85, $r90, $r97, $r104;
        com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyMulticurveSensitivity $r64, $r70, $r71, $r72, $r74, $r75, $r77, $r78, $r114, $r115, $r116, $r119, $r120, $r121, $r122, $r123, $r124, $r125, $r126, $r127, r147, r148, r160, r161, r162;
        java.util.ArrayList $r65;
        com.opengamma.util.money.MultipleCurrencyAmount $r68;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20;
        com.opengamma.util.money.CurrencyAmount $r69;
        int[] $r73;
        java.lang.Double $r76, $r96, $r103, $r110;
        com.opengamma.analytics.financial.provider.calculator.sabrswaption.PresentValueSABRSensitivitySABRSwaptionCalculator $r81;
        java.lang.Object $r83, $r95, $r102, $r109, $r113, $r128, $r130, $r137, $r139;
        com.opengamma.analytics.util.amount.SurfaceValue $r86, $r92, $r99, $r106;
        java.util.HashMap $r87, $r93, $r100, $r107;
        com.opengamma.util.tuple.DoublesPair[] $r88, r154;
        java.lang.Object[] $r89;
        com.opengamma.util.tuple.DoublesPair $r94, $r101, $r108, r158;
        com.opengamma.analytics.financial.provider.calculator.sabrswaption.PresentValueCurveSensitivitySABRSwaptionCalculator $r111;
        java.lang.Integer $r129, $r131, $r138, $r140;
        com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyMulticurveSensitivity[] r149, r150, r151, r159;
        java.util.Set r153;

        r0 := @this: com.opengamma.analytics.financial.interestrate.swaption.provider.SwaptionPhysicalFixedIborSABRLMMExactMethod;

        r1 := @parameter0: com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionPhysicalFixedIbor;

        r2 := @parameter1: com.opengamma.analytics.financial.provider.description.interestrate.SABRSwaptionProviderInterface;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "Swaption");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, "SABR swaption provider");

        r3 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionPhysicalFixedIbor: com.opengamma.util.money.Currency getCurrency()>();

        r4 = interfaceinvoke r2.<com.opengamma.analytics.financial.provider.description.interestrate.SABRSwaptionProviderInterface: com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface getMulticurveProvider()>();

        $r34 = new com.opengamma.analytics.financial.interestrate.swaption.provider.SwaptionPhysicalFixedIborSABRLMMExactMethod$VolatilityLMMAngle;

        specialinvoke $r34.<com.opengamma.analytics.financial.interestrate.swaption.provider.SwaptionPhysicalFixedIborSABRLMMExactMethod$VolatilityLMMAngle: void <init>(double,double)>(1.5707963267948966, 0.1);

        r5 = staticinvoke <com.opengamma.analytics.financial.model.interestrate.definition.LiborMarketModelDisplacedDiffusionParameters: com.opengamma.analytics.financial.model.interestrate.definition.LiborMarketModelDisplacedDiffusionParameters 'from'(com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionPhysicalFixedIbor,double,double,com.opengamma.analytics.math.function.Function1D)>(r1, 0.1, 0.01, $r34);

        $r35 = new com.opengamma.analytics.financial.provider.method.SuccessiveRootFinderLMMDDCalibrationObjective;

        specialinvoke $r35.<com.opengamma.analytics.financial.provider.method.SuccessiveRootFinderLMMDDCalibrationObjective: void <init>(com.opengamma.analytics.financial.model.interestrate.definition.LiborMarketModelDisplacedDiffusionParameters,com.opengamma.util.money.Currency)>(r5, r3);

        $r36 = new com.opengamma.analytics.financial.provider.method.SuccessiveRootFinderLMMDDCalibrationEngine;

        specialinvoke $r36.<com.opengamma.analytics.financial.provider.method.SuccessiveRootFinderLMMDDCalibrationEngine: void <init>(com.opengamma.analytics.financial.provider.method.SuccessiveRootFinderCalibrationObjectiveWithMultiCurves)>($r35);

        $r37 = <com.opengamma.analytics.financial.interestrate.swaption.provider.SwaptionPhysicalFixedIborSABRLMMExactMethod: com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionPhysicalFixedIborBasketMethod METHOD_BASKET>;

        r8 = virtualinvoke $r37.<com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionPhysicalFixedIborBasketMethod: com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionPhysicalFixedIbor[] calibrationBasketFixedLegPeriod(com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionPhysicalFixedIbor)>(r1);

        $r38 = <com.opengamma.analytics.financial.interestrate.swaption.provider.SwaptionPhysicalFixedIborSABRLMMExactMethod: com.opengamma.analytics.financial.provider.calculator.sabrswaption.PresentValueSABRSwaptionCalculator PVSSC>;

        virtualinvoke $r36.<com.opengamma.analytics.financial.provider.method.SuccessiveRootFinderLMMDDCalibrationEngine: void addInstrument(com.opengamma.analytics.financial.interestrate.InstrumentDerivative[],com.opengamma.analytics.financial.interestrate.InstrumentDerivativeVisitor)>(r8, $r38);

        virtualinvoke $r36.<com.opengamma.analytics.financial.provider.method.SuccessiveRootFinderLMMDDCalibrationEngine: void calibrate(com.opengamma.analytics.financial.provider.description.interestrate.ParameterProviderInterface)>(r2);

        $r39 = new com.opengamma.analytics.financial.provider.description.interestrate.LiborMarketModelDisplacedDiffusionProvider;

        specialinvoke $r39.<com.opengamma.analytics.financial.provider.description.interestrate.LiborMarketModelDisplacedDiffusionProvider: void <init>(com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface,com.opengamma.analytics.financial.model.interestrate.definition.LiborMarketModelDisplacedDiffusionParameters,com.opengamma.util.money.Currency)>(r4, r5, r3);

        i0 = lengthof r8;

        i1 = virtualinvoke r5.<com.opengamma.analytics.financial.model.interestrate.definition.LiborMarketModelDisplacedDiffusionParameters: int getNbFactor()>();

        r10 = virtualinvoke $r36.<com.opengamma.analytics.financial.provider.method.SuccessiveRootFinderLMMDDCalibrationEngine: java.util.List getInstrumentIndex()>();

        r11 = newarray (double)[i0];

        r12 = newarray (double[][])[i0];

        r13 = newmultiarray (double)[i0][i0];

        r14 = newarray (com.opengamma.analytics.financial.interestrate.PresentValueSABRSensitivityDataBundle)[i0];

        $r40 = <com.opengamma.analytics.financial.interestrate.swaption.provider.SwaptionPhysicalFixedIborSABRLMMExactMethod: com.opengamma.analytics.financial.interestrate.swaption.provider.SwaptionPhysicalFixedIborLMMDDMethod METHOD_SWAPTION_LMM>;

        r147 = virtualinvoke $r40.<com.opengamma.analytics.financial.interestrate.swaption.provider.SwaptionPhysicalFixedIborLMMDDMethod: com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyMulticurveSensitivity presentValueCurveSensitivity(com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionPhysicalFixedIbor,com.opengamma.analytics.financial.provider.description.interestrate.LiborMarketModelDisplacedDiffusionProviderInterface)>(r1, $r39);

        r148 = virtualinvoke r147.<com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyMulticurveSensitivity: com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyMulticurveSensitivity cleaned()>();

        $r41 = <com.opengamma.analytics.financial.interestrate.swaption.provider.SwaptionPhysicalFixedIborSABRLMMExactMethod: com.opengamma.analytics.financial.interestrate.swaption.provider.SwaptionPhysicalFixedIborLMMDDMethod METHOD_SWAPTION_LMM>;

        r15 = virtualinvoke $r41.<com.opengamma.analytics.financial.interestrate.swaption.provider.SwaptionPhysicalFixedIborLMMDDMethod: double[][] presentValueLMMSensitivity(com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionPhysicalFixedIbor,com.opengamma.analytics.financial.provider.description.interestrate.LiborMarketModelDisplacedDiffusionProviderInterface)>(r1, $r39);

        i7 = 0;

     label01:
        if i7 >= i0 goto label02;

        $r145 = <com.opengamma.analytics.financial.interestrate.swaption.provider.SwaptionPhysicalFixedIborSABRLMMExactMethod: com.opengamma.analytics.financial.interestrate.swaption.provider.SwaptionPhysicalFixedIborLMMDDMethod METHOD_SWAPTION_LMM>;

        $r144 = r8[i7];

        $r146 = virtualinvoke $r145.<com.opengamma.analytics.financial.interestrate.swaption.provider.SwaptionPhysicalFixedIborLMMDDMethod: double[][] presentValueLMMSensitivity(com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionPhysicalFixedIbor,com.opengamma.analytics.financial.provider.description.interestrate.LiborMarketModelDisplacedDiffusionProviderInterface)>($r144, $r39);

        r12[i7] = $r146;

        i7 = i7 + 1;

        goto label01;

     label02:
        i8 = 0;

     label03:
        if i8 >= i0 goto label08;

        $r137 = interfaceinvoke r10.<java.util.List: java.lang.Object get(int)>(i8);

        $r138 = (java.lang.Integer) $r137;

        i9 = virtualinvoke $r138.<java.lang.Integer: int intValue()>();

     label04:
        $i5 = i8 + 1;

        $r139 = interfaceinvoke r10.<java.util.List: java.lang.Object get(int)>($i5);

        $r140 = (java.lang.Integer) $r139;

        $i6 = virtualinvoke $r140.<java.lang.Integer: int intValue()>();

        if i9 >= $i6 goto label07;

        i10 = 0;

     label05:
        if i10 >= i1 goto label06;

        $d16 = r11[i8];

        $r141 = r15[i9];

        $d17 = $r141[i10];

        $r142 = virtualinvoke r5.<com.opengamma.analytics.financial.model.interestrate.definition.LiborMarketModelDisplacedDiffusionParameters: double[][] getVolatility()>();

        $r143 = $r142[i9];

        $d18 = $r143[i10];

        $d19 = $d17 * $d18;

        $d20 = $d16 + $d19;

        r11[i8] = $d20;

        i10 = i10 + 1;

        goto label05;

     label06:
        i9 = i9 + 1;

        goto label04;

     label07:
        i8 = i8 + 1;

        goto label03;

     label08:
        i11 = 0;

     label09:
        if i11 >= i0 goto label16;

        i12 = 0;

     label10:
        if i12 >= i0 goto label15;

        $r128 = interfaceinvoke r10.<java.util.List: java.lang.Object get(int)>(i12);

        $r129 = (java.lang.Integer) $r128;

        i13 = virtualinvoke $r129.<java.lang.Integer: int intValue()>();

     label11:
        $i3 = i12 + 1;

        $r130 = interfaceinvoke r10.<java.util.List: java.lang.Object get(int)>($i3);

        $r131 = (java.lang.Integer) $r130;

        $i4 = virtualinvoke $r131.<java.lang.Integer: int intValue()>();

        if i13 >= $i4 goto label14;

        i14 = 0;

     label12:
        if i14 >= i1 goto label13;

        $r132 = r13[i11];

        $d11 = $r132[i12];

        $r133 = r12[i11];

        $r134 = $r133[i13];

        $d12 = $r134[i14];

        $r135 = virtualinvoke r5.<com.opengamma.analytics.financial.model.interestrate.definition.LiborMarketModelDisplacedDiffusionParameters: double[][] getVolatility()>();

        $r136 = $r135[i13];

        $d13 = $r136[i14];

        $d14 = $d12 * $d13;

        $d15 = $d11 + $d14;

        $r132[i12] = $d15;

        i14 = i14 + 1;

        goto label12;

     label13:
        i13 = i13 + 1;

        goto label11;

     label14:
        i12 = i12 + 1;

        goto label10;

     label15:
        i11 = i11 + 1;

        goto label09;

     label16:
        r149 = newarray (com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyMulticurveSensitivity)[i0];

        r150 = newarray (com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyMulticurveSensitivity)[i0];

        r151 = newarray (com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyMulticurveSensitivity)[i0];

        i15 = 0;

     label17:
        if i15 >= i0 goto label18;

        $r112 = r8[i15];

        $r111 = <com.opengamma.analytics.financial.interestrate.swaption.provider.SwaptionPhysicalFixedIborSABRLMMExactMethod: com.opengamma.analytics.financial.provider.calculator.sabrswaption.PresentValueCurveSensitivitySABRSwaptionCalculator PVCSSSC>;

        $r113 = virtualinvoke $r112.<com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionPhysicalFixedIbor: java.lang.Object accept(com.opengamma.analytics.financial.interestrate.InstrumentDerivativeVisitor,java.lang.Object)>($r111, r2);

        $r114 = (com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyMulticurveSensitivity) $r113;

        r149[i15] = $r114;

        $r115 = r149[i15];

        $r116 = virtualinvoke $r115.<com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyMulticurveSensitivity: com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyMulticurveSensitivity cleaned()>();

        r149[i15] = $r116;

        $r118 = <com.opengamma.analytics.financial.interestrate.swaption.provider.SwaptionPhysicalFixedIborSABRLMMExactMethod: com.opengamma.analytics.financial.interestrate.swaption.provider.SwaptionPhysicalFixedIborLMMDDMethod METHOD_SWAPTION_LMM>;

        $r117 = r8[i15];

        $r119 = virtualinvoke $r118.<com.opengamma.analytics.financial.interestrate.swaption.provider.SwaptionPhysicalFixedIborLMMDDMethod: com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyMulticurveSensitivity presentValueCurveSensitivity(com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionPhysicalFixedIbor,com.opengamma.analytics.financial.provider.description.interestrate.LiborMarketModelDisplacedDiffusionProviderInterface)>($r117, $r39);

        r150[i15] = $r119;

        $r120 = r150[i15];

        $r121 = virtualinvoke $r120.<com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyMulticurveSensitivity: com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyMulticurveSensitivity cleaned()>();

        r150[i15] = $r121;

        $r123 = r149[i15];

        $r122 = r150[i15];

        $r124 = virtualinvoke $r122.<com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyMulticurveSensitivity: com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyMulticurveSensitivity multipliedBy(double)>(-1.0);

        $r125 = virtualinvoke $r123.<com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyMulticurveSensitivity: com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyMulticurveSensitivity plus(com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyMulticurveSensitivity)>($r124);

        r151[i15] = $r125;

        $r126 = r151[i15];

        $r127 = virtualinvoke $r126.<com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyMulticurveSensitivity: com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyMulticurveSensitivity cleaned()>();

        r151[i15] = $r127;

        i15 = i15 + 1;

        goto label17;

     label18:
        $r42 = new com.opengamma.analytics.math.matrix.CommonsMatrixAlgebra;

        specialinvoke $r42.<com.opengamma.analytics.math.matrix.CommonsMatrixAlgebra: void <init>()>();

        $r43 = new com.opengamma.analytics.math.matrix.DoubleMatrix2D;

        specialinvoke $r43.<com.opengamma.analytics.math.matrix.DoubleMatrix2D: void <init>(double[][])>(r13);

        r17 = virtualinvoke $r42.<com.opengamma.analytics.math.matrix.CommonsMatrixAlgebra: com.opengamma.analytics.math.matrix.DoubleMatrix2D getInverse(com.opengamma.analytics.math.matrix.Matrix)>($r43);

        r18 = newmultiarray (double)[i0][i0];

        r19 = newmultiarray (double)[i0][i0];

        r20 = newmultiarray (double)[i0][i0];

        i16 = 0;

     label19:
        if i16 >= i0 goto label20;

        $r82 = r8[i16];

        $r81 = <com.opengamma.analytics.financial.interestrate.swaption.provider.SwaptionPhysicalFixedIborSABRLMMExactMethod: com.opengamma.analytics.financial.provider.calculator.sabrswaption.PresentValueSABRSensitivitySABRSwaptionCalculator PVSSSSC>;

        $r83 = virtualinvoke $r82.<com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionPhysicalFixedIbor: java.lang.Object accept(com.opengamma.analytics.financial.interestrate.InstrumentDerivativeVisitor,java.lang.Object)>($r81, r2);

        $r84 = (com.opengamma.analytics.financial.interestrate.PresentValueSABRSensitivityDataBundle) $r83;

        r14[i16] = $r84;

        $r85 = r14[i16];

        $r86 = virtualinvoke $r85.<com.opengamma.analytics.financial.interestrate.PresentValueSABRSensitivityDataBundle: com.opengamma.analytics.util.amount.SurfaceValue getAlpha()>();

        $r87 = virtualinvoke $r86.<com.opengamma.analytics.util.amount.SurfaceValue: java.util.HashMap getMap()>();

        r153 = virtualinvoke $r87.<java.util.HashMap: java.util.Set keySet()>();

        $i2 = interfaceinvoke r153.<java.util.Set: int size()>();

        $r88 = newarray (com.opengamma.util.tuple.DoublesPair)[$i2];

        $r89 = interfaceinvoke r153.<java.util.Set: java.lang.Object[] toArray(java.lang.Object[])>($r88);

        r154 = (com.opengamma.util.tuple.DoublesPair[]) $r89;

        $r91 = r18[i16];

        $r90 = r14[i16];

        $r92 = virtualinvoke $r90.<com.opengamma.analytics.financial.interestrate.PresentValueSABRSensitivityDataBundle: com.opengamma.analytics.util.amount.SurfaceValue getAlpha()>();

        $r93 = virtualinvoke $r92.<com.opengamma.analytics.util.amount.SurfaceValue: java.util.HashMap getMap()>();

        $r94 = r154[0];

        $r95 = virtualinvoke $r93.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r94);

        $r96 = (java.lang.Double) $r95;

        $d8 = virtualinvoke $r96.<java.lang.Double: double doubleValue()>();

        $r91[i16] = $d8;

        $r98 = r19[i16];

        $r97 = r14[i16];

        $r99 = virtualinvoke $r97.<com.opengamma.analytics.financial.interestrate.PresentValueSABRSensitivityDataBundle: com.opengamma.analytics.util.amount.SurfaceValue getRho()>();

        $r100 = virtualinvoke $r99.<com.opengamma.analytics.util.amount.SurfaceValue: java.util.HashMap getMap()>();

        $r101 = r154[0];

        $r102 = virtualinvoke $r100.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r101);

        $r103 = (java.lang.Double) $r102;

        $d9 = virtualinvoke $r103.<java.lang.Double: double doubleValue()>();

        $r98[i16] = $d9;

        $r105 = r20[i16];

        $r104 = r14[i16];

        $r106 = virtualinvoke $r104.<com.opengamma.analytics.financial.interestrate.PresentValueSABRSensitivityDataBundle: com.opengamma.analytics.util.amount.SurfaceValue getNu()>();

        $r107 = virtualinvoke $r106.<com.opengamma.analytics.util.amount.SurfaceValue: java.util.HashMap getMap()>();

        $r108 = r154[0];

        $r109 = virtualinvoke $r107.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r108);

        $r110 = (java.lang.Double) $r109;

        $d10 = virtualinvoke $r110.<java.lang.Double: double doubleValue()>();

        $r105[i16] = $d10;

        i16 = i16 + 1;

        goto label19;

     label20:
        $r44 = new com.opengamma.analytics.math.matrix.DoubleMatrix1D;

        specialinvoke $r44.<com.opengamma.analytics.math.matrix.DoubleMatrix1D: void <init>(double[])>(r11);

        $r45 = new com.opengamma.analytics.math.matrix.DoubleMatrix2D;

        specialinvoke $r45.<com.opengamma.analytics.math.matrix.DoubleMatrix2D: void <init>(double[][])>(r18);

        $r46 = virtualinvoke $r42.<com.opengamma.analytics.math.matrix.CommonsMatrixAlgebra: com.opengamma.analytics.math.matrix.Matrix multiply(com.opengamma.analytics.math.matrix.Matrix,com.opengamma.analytics.math.matrix.Matrix)>(r17, $r45);

        r157 = (com.opengamma.analytics.math.matrix.DoubleMatrix2D) $r46;

        $r47 = virtualinvoke $r42.<com.opengamma.analytics.math.matrix.CommonsMatrixAlgebra: com.opengamma.analytics.math.matrix.DoubleMatrix2D getTranspose(com.opengamma.analytics.math.matrix.Matrix)>(r157);

        $r48 = virtualinvoke $r42.<com.opengamma.analytics.math.matrix.CommonsMatrixAlgebra: com.opengamma.analytics.math.matrix.Matrix multiply(com.opengamma.analytics.math.matrix.Matrix,com.opengamma.analytics.math.matrix.Matrix)>($r47, $r44);

        r21 = (com.opengamma.analytics.math.matrix.DoubleMatrix2D) $r48;

        $r49 = new com.opengamma.analytics.math.matrix.DoubleMatrix2D;

        specialinvoke $r49.<com.opengamma.analytics.math.matrix.DoubleMatrix2D: void <init>(double[][])>(r19);

        $r50 = virtualinvoke $r42.<com.opengamma.analytics.math.matrix.CommonsMatrixAlgebra: com.opengamma.analytics.math.matrix.Matrix multiply(com.opengamma.analytics.math.matrix.Matrix,com.opengamma.analytics.math.matrix.Matrix)>(r17, $r49);

        r23 = (com.opengamma.analytics.math.matrix.DoubleMatrix2D) $r50;

        $r51 = virtualinvoke $r42.<com.opengamma.analytics.math.matrix.CommonsMatrixAlgebra: com.opengamma.analytics.math.matrix.DoubleMatrix2D getTranspose(com.opengamma.analytics.math.matrix.Matrix)>(r23);

        $r52 = virtualinvoke $r42.<com.opengamma.analytics.math.matrix.CommonsMatrixAlgebra: com.opengamma.analytics.math.matrix.Matrix multiply(com.opengamma.analytics.math.matrix.Matrix,com.opengamma.analytics.math.matrix.Matrix)>($r51, $r44);

        r24 = (com.opengamma.analytics.math.matrix.DoubleMatrix2D) $r52;

        $r53 = new com.opengamma.analytics.math.matrix.DoubleMatrix2D;

        specialinvoke $r53.<com.opengamma.analytics.math.matrix.DoubleMatrix2D: void <init>(double[][])>(r20);

        $r54 = virtualinvoke $r42.<com.opengamma.analytics.math.matrix.CommonsMatrixAlgebra: com.opengamma.analytics.math.matrix.Matrix multiply(com.opengamma.analytics.math.matrix.Matrix,com.opengamma.analytics.math.matrix.Matrix)>(r17, $r53);

        r26 = (com.opengamma.analytics.math.matrix.DoubleMatrix2D) $r54;

        $r55 = virtualinvoke $r42.<com.opengamma.analytics.math.matrix.CommonsMatrixAlgebra: com.opengamma.analytics.math.matrix.DoubleMatrix2D getTranspose(com.opengamma.analytics.math.matrix.Matrix)>(r26);

        $r56 = virtualinvoke $r42.<com.opengamma.analytics.math.matrix.CommonsMatrixAlgebra: com.opengamma.analytics.math.matrix.Matrix multiply(com.opengamma.analytics.math.matrix.Matrix,com.opengamma.analytics.math.matrix.Matrix)>($r55, $r44);

        r27 = (com.opengamma.analytics.math.matrix.DoubleMatrix2D) $r56;

        $r57 = virtualinvoke $r42.<com.opengamma.analytics.math.matrix.CommonsMatrixAlgebra: com.opengamma.analytics.math.matrix.DoubleMatrix2D getTranspose(com.opengamma.analytics.math.matrix.Matrix)>(r21);

        $r58 = virtualinvoke $r57.<com.opengamma.analytics.math.matrix.DoubleMatrix2D: double[][] getData()>();

        r28 = $r58[0];

        $r59 = virtualinvoke $r42.<com.opengamma.analytics.math.matrix.CommonsMatrixAlgebra: com.opengamma.analytics.math.matrix.DoubleMatrix2D getTranspose(com.opengamma.analytics.math.matrix.Matrix)>(r24);

        $r60 = virtualinvoke $r59.<com.opengamma.analytics.math.matrix.DoubleMatrix2D: double[][] getData()>();

        r29 = $r60[0];

        $r61 = virtualinvoke $r42.<com.opengamma.analytics.math.matrix.CommonsMatrixAlgebra: com.opengamma.analytics.math.matrix.DoubleMatrix2D getTranspose(com.opengamma.analytics.math.matrix.Matrix)>(r27);

        $r62 = virtualinvoke $r61.<com.opengamma.analytics.math.matrix.DoubleMatrix2D: double[][] getData()>();

        r30 = $r62[0];

        $r63 = new com.opengamma.analytics.financial.interestrate.PresentValueSABRSensitivityDataBundle;

        specialinvoke $r63.<com.opengamma.analytics.financial.interestrate.PresentValueSABRSensitivityDataBundle: void <init>()>();

        i17 = 0;

     label21:
        if i17 >= i0 goto label22;

        $r79 = r8[i17];

        $d3 = virtualinvoke $r79.<com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionPhysicalFixedIbor: double getTimeToExpiry()>();

        $r80 = r8[i17];

        $d4 = virtualinvoke $r80.<com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionPhysicalFixedIbor: double getMaturityTime()>();

        r158 = staticinvoke <com.opengamma.util.tuple.DoublesPair: com.opengamma.util.tuple.DoublesPair of(double,double)>($d3, $d4);

        $d5 = r28[i17];

        virtualinvoke $r63.<com.opengamma.analytics.financial.interestrate.PresentValueSABRSensitivityDataBundle: void addAlpha(com.opengamma.util.tuple.DoublesPair,double)>(r158, $d5);

        $d6 = r29[i17];

        virtualinvoke $r63.<com.opengamma.analytics.financial.interestrate.PresentValueSABRSensitivityDataBundle: void addRho(com.opengamma.util.tuple.DoublesPair,double)>(r158, $d6);

        $d7 = r30[i17];

        virtualinvoke $r63.<com.opengamma.analytics.financial.interestrate.PresentValueSABRSensitivityDataBundle: void addNu(com.opengamma.util.tuple.DoublesPair,double)>(r158, $d7);

        i17 = i17 + 1;

        goto label21;

     label22:
        r159 = newarray (com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyMulticurveSensitivity)[i0];

        i18 = 0;

     label23:
        if i18 >= i0 goto label26;

        $r72 = new com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyMulticurveSensitivity;

        specialinvoke $r72.<com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyMulticurveSensitivity: void <init>()>();

        r159[i18] = $r72;

        i19 = 0;

     label24:
        if i19 > i18 goto label25;

        $r74 = r159[i18];

        $r75 = r151[i19];

        $r73 = newarray (int)[2];

        $r73[0] = i18;

        $r73[1] = i19;

        $r76 = virtualinvoke r17.<com.opengamma.analytics.math.matrix.DoubleMatrix2D: java.lang.Double getEntry(int[])>($r73);

        $d2 = virtualinvoke $r76.<java.lang.Double: double doubleValue()>();

        $r77 = virtualinvoke $r75.<com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyMulticurveSensitivity: com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyMulticurveSensitivity multipliedBy(double)>($d2);

        $r78 = virtualinvoke $r74.<com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyMulticurveSensitivity: com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyMulticurveSensitivity plus(com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyMulticurveSensitivity)>($r77);

        r159[i18] = $r78;

        i19 = i19 + 1;

        goto label24;

     label25:
        i18 = i18 + 1;

        goto label23;

     label26:
        $r64 = new com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyMulticurveSensitivity;

        specialinvoke $r64.<com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyMulticurveSensitivity: void <init>()>();

        r160 = $r64;

        i20 = 0;

     label27:
        if i20 >= i0 goto label28;

        $r70 = r159[i20];

        $d1 = r11[i20];

        $r71 = virtualinvoke $r70.<com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyMulticurveSensitivity: com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyMulticurveSensitivity multipliedBy(double)>($d1);

        r160 = virtualinvoke r160.<com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyMulticurveSensitivity: com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyMulticurveSensitivity plus(com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyMulticurveSensitivity)>($r71);

        i20 = i20 + 1;

        goto label27;

     label28:
        r161 = virtualinvoke r160.<com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyMulticurveSensitivity: com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyMulticurveSensitivity plus(com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyMulticurveSensitivity)>(r148);

        r162 = virtualinvoke r161.<com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyMulticurveSensitivity: com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyMulticurveSensitivity cleaned()>();

        $r65 = new java.util.ArrayList;

        specialinvoke $r65.<java.util.ArrayList: void <init>()>();

        $r66 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionPhysicalFixedIbor: com.opengamma.util.money.Currency getCurrency()>();

        $r67 = <com.opengamma.analytics.financial.interestrate.swaption.provider.SwaptionPhysicalFixedIborSABRLMMExactMethod: com.opengamma.analytics.financial.interestrate.swaption.provider.SwaptionPhysicalFixedIborLMMDDMethod METHOD_SWAPTION_LMM>;

        $r68 = virtualinvoke $r67.<com.opengamma.analytics.financial.interestrate.swaption.provider.SwaptionPhysicalFixedIborLMMDDMethod: com.opengamma.util.money.MultipleCurrencyAmount presentValue(com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionPhysicalFixedIbor,com.opengamma.analytics.financial.provider.description.interestrate.LiborMarketModelDisplacedDiffusionProviderInterface)>(r1, $r39);

        $d0 = virtualinvoke $r68.<com.opengamma.util.money.MultipleCurrencyAmount: double getAmount(com.opengamma.util.money.Currency)>(r3);

        $r69 = staticinvoke <com.opengamma.util.money.CurrencyAmount: com.opengamma.util.money.CurrencyAmount of(com.opengamma.util.money.Currency,double)>($r66, $d0);

        interfaceinvoke $r65.<java.util.List: boolean add(java.lang.Object)>($r69);

        interfaceinvoke $r65.<java.util.List: boolean add(java.lang.Object)>(r162);

        interfaceinvoke $r65.<java.util.List: boolean add(java.lang.Object)>($r63);

        return $r65;
    }

    static void <clinit>()
    {
        com.opengamma.analytics.financial.provider.calculator.sabrswaption.PresentValueSABRSwaptionCalculator $r0;
        com.opengamma.analytics.financial.provider.calculator.sabrswaption.PresentValueCurveSensitivitySABRSwaptionCalculator $r1;
        com.opengamma.analytics.financial.provider.calculator.sabrswaption.PresentValueSABRSensitivitySABRSwaptionCalculator $r2;
        com.opengamma.analytics.financial.interestrate.swaption.provider.SwaptionPhysicalFixedIborLMMDDMethod $r3;
        com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionPhysicalFixedIborBasketMethod $r4;

        <com.opengamma.analytics.financial.interestrate.swaption.provider.SwaptionPhysicalFixedIborSABRLMMExactMethod: double DEFAULT_ANGLE> = 1.5707963267948966;

        <com.opengamma.analytics.financial.interestrate.swaption.provider.SwaptionPhysicalFixedIborSABRLMMExactMethod: double DEFAULT_DISPLACEMENT> = 0.1;

        <com.opengamma.analytics.financial.interestrate.swaption.provider.SwaptionPhysicalFixedIborSABRLMMExactMethod: double DEFAULT_MEAN_REVERSION> = 0.01;

        $r0 = staticinvoke <com.opengamma.analytics.financial.provider.calculator.sabrswaption.PresentValueSABRSwaptionCalculator: com.opengamma.analytics.financial.provider.calculator.sabrswaption.PresentValueSABRSwaptionCalculator getInstance()>();

        <com.opengamma.analytics.financial.interestrate.swaption.provider.SwaptionPhysicalFixedIborSABRLMMExactMethod: com.opengamma.analytics.financial.provider.calculator.sabrswaption.PresentValueSABRSwaptionCalculator PVSSC> = $r0;

        $r1 = staticinvoke <com.opengamma.analytics.financial.provider.calculator.sabrswaption.PresentValueCurveSensitivitySABRSwaptionCalculator: com.opengamma.analytics.financial.provider.calculator.sabrswaption.PresentValueCurveSensitivitySABRSwaptionCalculator getInstance()>();

        <com.opengamma.analytics.financial.interestrate.swaption.provider.SwaptionPhysicalFixedIborSABRLMMExactMethod: com.opengamma.analytics.financial.provider.calculator.sabrswaption.PresentValueCurveSensitivitySABRSwaptionCalculator PVCSSSC> = $r1;

        $r2 = staticinvoke <com.opengamma.analytics.financial.provider.calculator.sabrswaption.PresentValueSABRSensitivitySABRSwaptionCalculator: com.opengamma.analytics.financial.provider.calculator.sabrswaption.PresentValueSABRSensitivitySABRSwaptionCalculator getInstance()>();

        <com.opengamma.analytics.financial.interestrate.swaption.provider.SwaptionPhysicalFixedIborSABRLMMExactMethod: com.opengamma.analytics.financial.provider.calculator.sabrswaption.PresentValueSABRSensitivitySABRSwaptionCalculator PVSSSSC> = $r2;

        $r3 = staticinvoke <com.opengamma.analytics.financial.interestrate.swaption.provider.SwaptionPhysicalFixedIborLMMDDMethod: com.opengamma.analytics.financial.interestrate.swaption.provider.SwaptionPhysicalFixedIborLMMDDMethod getInstance()>();

        <com.opengamma.analytics.financial.interestrate.swaption.provider.SwaptionPhysicalFixedIborSABRLMMExactMethod: com.opengamma.analytics.financial.interestrate.swaption.provider.SwaptionPhysicalFixedIborLMMDDMethod METHOD_SWAPTION_LMM> = $r3;

        $r4 = staticinvoke <com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionPhysicalFixedIborBasketMethod: com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionPhysicalFixedIborBasketMethod getInstance()>();

        <com.opengamma.analytics.financial.interestrate.swaption.provider.SwaptionPhysicalFixedIborSABRLMMExactMethod: com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionPhysicalFixedIborBasketMethod METHOD_BASKET> = $r4;

        return;
    }
}
