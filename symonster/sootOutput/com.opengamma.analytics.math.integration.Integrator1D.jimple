public abstract class com.opengamma.analytics.math.integration.Integrator1D extends java.lang.Object implements com.opengamma.analytics.math.integration.Integrator
{
    private static final org.slf4j.Logger s_logger;

    public void <init>()
    {
        com.opengamma.analytics.math.integration.Integrator1D r0;

        r0 := @this: com.opengamma.analytics.math.integration.Integrator1D;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public java.lang.Object integrate(com.opengamma.analytics.math.function.Function1D, java.lang.Object[], java.lang.Object[])
    {
        com.opengamma.analytics.math.integration.Integrator1D r0;
        com.opengamma.analytics.math.function.Function1D r1;
        java.lang.Object[] r2, r3;
        java.lang.Object $r4, $r5, $r6, $r7, $r8;
        int $i0, $i1;
        org.slf4j.Logger $r9, $r10;

        r0 := @this: com.opengamma.analytics.math.integration.Integrator1D;

        r1 := @parameter0: com.opengamma.analytics.math.function.Function1D;

        r2 := @parameter1: java.lang.Object[];

        r3 := @parameter2: java.lang.Object[];

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object,java.lang.String)>(r1, "function was null");

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object,java.lang.String)>(r2, "lower bound array was null");

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object,java.lang.String)>(r3, "upper bound array was null");

        staticinvoke <org.apache.commons.lang.Validate: void notEmpty(java.lang.Object[],java.lang.String)>(r2, "lower bound array was empty");

        staticinvoke <org.apache.commons.lang.Validate: void notEmpty(java.lang.Object[],java.lang.String)>(r3, "upper bound array was empty");

        $r4 = r2[0];

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object,java.lang.String)>($r4, "lower bound was null");

        $r5 = r3[0];

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object,java.lang.String)>($r5, "upper bound was null");

        $i0 = lengthof r2;

        if $i0 <= 1 goto label1;

        $r10 = <com.opengamma.analytics.math.integration.Integrator1D: org.slf4j.Logger s_logger>;

        interfaceinvoke $r10.<org.slf4j.Logger: void info(java.lang.String)>("Lower bound array had more than one element; only using the first");

     label1:
        $i1 = lengthof r3;

        if $i1 <= 1 goto label2;

        $r9 = <com.opengamma.analytics.math.integration.Integrator1D: org.slf4j.Logger s_logger>;

        interfaceinvoke $r9.<org.slf4j.Logger: void info(java.lang.String)>("Upper bound array had more than one element; only using the first");

     label2:
        $r7 = r2[0];

        $r6 = r3[0];

        $r8 = virtualinvoke r0.<com.opengamma.analytics.math.integration.Integrator1D: java.lang.Object integrate(com.opengamma.analytics.math.function.Function1D,java.lang.Object,java.lang.Object)>(r1, $r7, $r6);

        return $r8;
    }

    public abstract java.lang.Object integrate(com.opengamma.analytics.math.function.Function1D, java.lang.Object, java.lang.Object);

    public volatile java.lang.Object integrate(com.opengamma.analytics.math.function.Function, java.lang.Object[], java.lang.Object[])
    {
        com.opengamma.analytics.math.integration.Integrator1D r0;
        com.opengamma.analytics.math.function.Function r1;
        java.lang.Object[] r2, r3;
        com.opengamma.analytics.math.function.Function1D $r4;
        java.lang.Object $r5;

        r0 := @this: com.opengamma.analytics.math.integration.Integrator1D;

        r1 := @parameter0: com.opengamma.analytics.math.function.Function;

        r2 := @parameter1: java.lang.Object[];

        r3 := @parameter2: java.lang.Object[];

        $r4 = (com.opengamma.analytics.math.function.Function1D) r1;

        $r5 = virtualinvoke r0.<com.opengamma.analytics.math.integration.Integrator1D: java.lang.Object integrate(com.opengamma.analytics.math.function.Function1D,java.lang.Object[],java.lang.Object[])>($r4, r2, r3);

        return $r5;
    }

    static void <clinit>()
    {
        org.slf4j.Logger $r0;

        $r0 = staticinvoke <org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>(class "com/opengamma/analytics/math/integration/Integrator1D");

        <com.opengamma.analytics.math.integration.Integrator1D: org.slf4j.Logger s_logger> = $r0;

        return;
    }
}
