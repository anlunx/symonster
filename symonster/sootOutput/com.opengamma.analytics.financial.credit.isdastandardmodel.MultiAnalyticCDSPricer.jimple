public class com.opengamma.analytics.financial.credit.isdastandardmodel.MultiAnalyticCDSPricer extends java.lang.Object
{
    private static final double HALFDAY;
    private static final com.opengamma.analytics.financial.credit.isdastandardmodel.AccrualOnDefaultFormulae DEFAULT_FORMULA;
    private final com.opengamma.analytics.financial.credit.isdastandardmodel.AccrualOnDefaultFormulae _formula;
    private final double _omega;

    public void <init>()
    {
        com.opengamma.analytics.financial.credit.isdastandardmodel.MultiAnalyticCDSPricer r0;
        com.opengamma.analytics.financial.credit.isdastandardmodel.AccrualOnDefaultFormulae $r1;

        r0 := @this: com.opengamma.analytics.financial.credit.isdastandardmodel.MultiAnalyticCDSPricer;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = <com.opengamma.analytics.financial.credit.isdastandardmodel.MultiAnalyticCDSPricer: com.opengamma.analytics.financial.credit.isdastandardmodel.AccrualOnDefaultFormulae DEFAULT_FORMULA>;

        r0.<com.opengamma.analytics.financial.credit.isdastandardmodel.MultiAnalyticCDSPricer: com.opengamma.analytics.financial.credit.isdastandardmodel.AccrualOnDefaultFormulae _formula> = $r1;

        r0.<com.opengamma.analytics.financial.credit.isdastandardmodel.MultiAnalyticCDSPricer: double _omega> = 0.0013698630136986301;

        return;
    }

    public void <init>(com.opengamma.analytics.financial.credit.isdastandardmodel.AccrualOnDefaultFormulae)
    {
        com.opengamma.analytics.financial.credit.isdastandardmodel.MultiAnalyticCDSPricer r0;
        com.opengamma.analytics.financial.credit.isdastandardmodel.AccrualOnDefaultFormulae r1, $r3;

        r0 := @this: com.opengamma.analytics.financial.credit.isdastandardmodel.MultiAnalyticCDSPricer;

        r1 := @parameter0: com.opengamma.analytics.financial.credit.isdastandardmodel.AccrualOnDefaultFormulae;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "formula");

        r0.<com.opengamma.analytics.financial.credit.isdastandardmodel.MultiAnalyticCDSPricer: com.opengamma.analytics.financial.credit.isdastandardmodel.AccrualOnDefaultFormulae _formula> = r1;

        $r3 = <com.opengamma.analytics.financial.credit.isdastandardmodel.AccrualOnDefaultFormulae: com.opengamma.analytics.financial.credit.isdastandardmodel.AccrualOnDefaultFormulae OrignalISDA>;

        if r1 != $r3 goto label1;

        r0.<com.opengamma.analytics.financial.credit.isdastandardmodel.MultiAnalyticCDSPricer: double _omega> = 0.0013698630136986301;

        goto label2;

     label1:
        r0.<com.opengamma.analytics.financial.credit.isdastandardmodel.MultiAnalyticCDSPricer: double _omega> = 0.0;

     label2:
        return;
    }

    public double[] pv(com.opengamma.analytics.financial.credit.isdastandardmodel.MultiCDSAnalytic, com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantYieldCurve, com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantCreditCurve, double, com.opengamma.analytics.financial.credit.isdastandardmodel.PriceType)
    {
        com.opengamma.analytics.financial.credit.isdastandardmodel.MultiAnalyticCDSPricer r0;
        com.opengamma.analytics.financial.credit.isdastandardmodel.MultiCDSAnalytic r1;
        com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantYieldCurve r2;
        com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantCreditCurve r3;
        double d0;
        com.opengamma.analytics.financial.credit.isdastandardmodel.PriceType r4;
        int i0;
        double[] r5, $r6;

        r0 := @this: com.opengamma.analytics.financial.credit.isdastandardmodel.MultiAnalyticCDSPricer;

        r1 := @parameter0: com.opengamma.analytics.financial.credit.isdastandardmodel.MultiCDSAnalytic;

        r2 := @parameter1: com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantYieldCurve;

        r3 := @parameter2: com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantCreditCurve;

        d0 := @parameter3: double;

        r4 := @parameter4: com.opengamma.analytics.financial.credit.isdastandardmodel.PriceType;

        i0 = virtualinvoke r1.<com.opengamma.analytics.financial.credit.isdastandardmodel.MultiCDSAnalytic: int getNumMaturities()>();

        r5 = newarray (double)[i0];

        staticinvoke <java.util.Arrays: void fill(double[],double)>(r5, d0);

        $r6 = virtualinvoke r0.<com.opengamma.analytics.financial.credit.isdastandardmodel.MultiAnalyticCDSPricer: double[] pv(com.opengamma.analytics.financial.credit.isdastandardmodel.MultiCDSAnalytic,com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantYieldCurve,com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantCreditCurve,double[],com.opengamma.analytics.financial.credit.isdastandardmodel.PriceType)>(r1, r2, r3, r5, r4);

        return $r6;
    }

    public double[] pv(com.opengamma.analytics.financial.credit.isdastandardmodel.MultiCDSAnalytic, com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantYieldCurve, com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantCreditCurve, double[], com.opengamma.analytics.financial.credit.isdastandardmodel.PriceType)
    {
        com.opengamma.analytics.financial.credit.isdastandardmodel.MultiAnalyticCDSPricer r0;
        com.opengamma.analytics.financial.credit.isdastandardmodel.MultiCDSAnalytic r1;
        com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantYieldCurve r2;
        com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantCreditCurve r3;
        double[] r4, r6, r7, r8;
        com.opengamma.analytics.financial.credit.isdastandardmodel.PriceType r5;
        int i0, $i1, $i2, $i3, $i4, i6;
        java.lang.Object[] $r10;
        java.lang.Integer $r11, $r12;
        double $d0, $d1, $d2, $d3, $d4, $d5;
        byte $b5;
        boolean $z0;

        r0 := @this: com.opengamma.analytics.financial.credit.isdastandardmodel.MultiAnalyticCDSPricer;

        r1 := @parameter0: com.opengamma.analytics.financial.credit.isdastandardmodel.MultiCDSAnalytic;

        r2 := @parameter1: com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantYieldCurve;

        r3 := @parameter2: com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantCreditCurve;

        r4 := @parameter3: double[];

        r5 := @parameter4: com.opengamma.analytics.financial.credit.isdastandardmodel.PriceType;

        i0 = virtualinvoke r1.<com.opengamma.analytics.financial.credit.isdastandardmodel.MultiCDSAnalytic: int getNumMaturities()>();

        staticinvoke <com.opengamma.util.ArgumentChecker: double[] notEmpty(double[],java.lang.String)>(r4, "premiums");

        $i1 = lengthof r4;

        if i0 != $i1 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        $r10 = newarray (java.lang.Object)[2];

        $r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r10[0] = $r11;

        $i2 = lengthof r4;

        $r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        $r10[1] = $r12;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String,java.lang.Object[])>($z0, "premiums wrong length. Should be {}, but is {}", $r10);

        r6 = newarray (double)[i0];

        $i3 = virtualinvoke r1.<com.opengamma.analytics.financial.credit.isdastandardmodel.MultiCDSAnalytic: int getNumMaturities()>();

        $i4 = $i3 - 1;

        $d0 = virtualinvoke r1.<com.opengamma.analytics.financial.credit.isdastandardmodel.MultiCDSAnalytic: double getProtectionEnd(int)>($i4);

        $b5 = $d0 cmpg 0.0;

        if $b5 > 0 goto label3;

        return r6;

     label3:
        r7 = virtualinvoke r0.<com.opengamma.analytics.financial.credit.isdastandardmodel.MultiAnalyticCDSPricer: double[] pvPremiumLegPerUnitSpread(com.opengamma.analytics.financial.credit.isdastandardmodel.MultiCDSAnalytic,com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantYieldCurve,com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantCreditCurve,com.opengamma.analytics.financial.credit.isdastandardmodel.PriceType)>(r1, r2, r3, r5);

        r8 = virtualinvoke r0.<com.opengamma.analytics.financial.credit.isdastandardmodel.MultiAnalyticCDSPricer: double[] protectionLeg(com.opengamma.analytics.financial.credit.isdastandardmodel.MultiCDSAnalytic,com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantYieldCurve,com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantCreditCurve)>(r1, r2, r3);

        i6 = 0;

     label4:
        if i6 >= i0 goto label5;

        $d4 = r8[i6];

        $d2 = r4[i6];

        $d1 = r7[i6];

        $d3 = $d2 * $d1;

        $d5 = $d4 - $d3;

        r6[i6] = $d5;

        i6 = i6 + 1;

        goto label4;

     label5:
        return r6;
    }

    public double[] pv(com.opengamma.analytics.financial.credit.isdastandardmodel.MultiCDSAnalytic, com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantYieldCurve, com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantCreditCurve, double[])
    {
        com.opengamma.analytics.financial.credit.isdastandardmodel.MultiAnalyticCDSPricer r0;
        com.opengamma.analytics.financial.credit.isdastandardmodel.MultiCDSAnalytic r1;
        com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantYieldCurve r2;
        com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantCreditCurve r3;
        double[] r4, $r6;
        com.opengamma.analytics.financial.credit.isdastandardmodel.PriceType $r5;

        r0 := @this: com.opengamma.analytics.financial.credit.isdastandardmodel.MultiAnalyticCDSPricer;

        r1 := @parameter0: com.opengamma.analytics.financial.credit.isdastandardmodel.MultiCDSAnalytic;

        r2 := @parameter1: com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantYieldCurve;

        r3 := @parameter2: com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantCreditCurve;

        r4 := @parameter3: double[];

        $r5 = <com.opengamma.analytics.financial.credit.isdastandardmodel.PriceType: com.opengamma.analytics.financial.credit.isdastandardmodel.PriceType CLEAN>;

        $r6 = virtualinvoke r0.<com.opengamma.analytics.financial.credit.isdastandardmodel.MultiAnalyticCDSPricer: double[] pv(com.opengamma.analytics.financial.credit.isdastandardmodel.MultiCDSAnalytic,com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantYieldCurve,com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantCreditCurve,double[],com.opengamma.analytics.financial.credit.isdastandardmodel.PriceType)>(r1, r2, r3, r4, $r5);

        return $r6;
    }

    public double[] pv(com.opengamma.analytics.financial.credit.isdastandardmodel.MultiCDSAnalytic, com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantYieldCurve, com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantCreditCurve, double)
    {
        com.opengamma.analytics.financial.credit.isdastandardmodel.MultiAnalyticCDSPricer r0;
        com.opengamma.analytics.financial.credit.isdastandardmodel.MultiCDSAnalytic r1;
        com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantYieldCurve r2;
        com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantCreditCurve r3;
        double d0;
        com.opengamma.analytics.financial.credit.isdastandardmodel.PriceType $r4;
        double[] $r5;

        r0 := @this: com.opengamma.analytics.financial.credit.isdastandardmodel.MultiAnalyticCDSPricer;

        r1 := @parameter0: com.opengamma.analytics.financial.credit.isdastandardmodel.MultiCDSAnalytic;

        r2 := @parameter1: com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantYieldCurve;

        r3 := @parameter2: com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantCreditCurve;

        d0 := @parameter3: double;

        $r4 = <com.opengamma.analytics.financial.credit.isdastandardmodel.PriceType: com.opengamma.analytics.financial.credit.isdastandardmodel.PriceType CLEAN>;

        $r5 = virtualinvoke r0.<com.opengamma.analytics.financial.credit.isdastandardmodel.MultiAnalyticCDSPricer: double[] pv(com.opengamma.analytics.financial.credit.isdastandardmodel.MultiCDSAnalytic,com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantYieldCurve,com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantCreditCurve,double,com.opengamma.analytics.financial.credit.isdastandardmodel.PriceType)>(r1, r2, r3, d0, $r4);

        return $r5;
    }

    public double[] parSpread(com.opengamma.analytics.financial.credit.isdastandardmodel.MultiCDSAnalytic, com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantYieldCurve, com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantCreditCurve)
    {
        com.opengamma.analytics.financial.credit.isdastandardmodel.MultiAnalyticCDSPricer r0;
        com.opengamma.analytics.financial.credit.isdastandardmodel.MultiCDSAnalytic r1;
        com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantYieldCurve r2;
        com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantCreditCurve r3;
        double[] r4, r5, r6;
        int i0, i2;
        double $d0, $d1, $d2, $d3;
        byte $b1;
        com.opengamma.analytics.financial.credit.isdastandardmodel.PriceType $r7;
        java.lang.IllegalArgumentException $r8;

        r0 := @this: com.opengamma.analytics.financial.credit.isdastandardmodel.MultiAnalyticCDSPricer;

        r1 := @parameter0: com.opengamma.analytics.financial.credit.isdastandardmodel.MultiCDSAnalytic;

        r2 := @parameter1: com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantYieldCurve;

        r3 := @parameter2: com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantCreditCurve;

        $d0 = virtualinvoke r1.<com.opengamma.analytics.financial.credit.isdastandardmodel.MultiCDSAnalytic: double getProtectionEnd(int)>(0);

        $b1 = $d0 cmpg 0.0;

        if $b1 > 0 goto label1;

        $r8 = new java.lang.IllegalArgumentException;

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("A CDSs has expired - cannot compute a par spread for it");

        throw $r8;

     label1:
        $r7 = <com.opengamma.analytics.financial.credit.isdastandardmodel.PriceType: com.opengamma.analytics.financial.credit.isdastandardmodel.PriceType CLEAN>;

        r4 = virtualinvoke r0.<com.opengamma.analytics.financial.credit.isdastandardmodel.MultiAnalyticCDSPricer: double[] pvPremiumLegPerUnitSpread(com.opengamma.analytics.financial.credit.isdastandardmodel.MultiCDSAnalytic,com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantYieldCurve,com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantCreditCurve,com.opengamma.analytics.financial.credit.isdastandardmodel.PriceType)>(r1, r2, r3, $r7);

        r5 = virtualinvoke r0.<com.opengamma.analytics.financial.credit.isdastandardmodel.MultiAnalyticCDSPricer: double[] protectionLeg(com.opengamma.analytics.financial.credit.isdastandardmodel.MultiCDSAnalytic,com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantYieldCurve,com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantCreditCurve)>(r1, r2, r3);

        i0 = virtualinvoke r1.<com.opengamma.analytics.financial.credit.isdastandardmodel.MultiCDSAnalytic: int getNumMaturities()>();

        r6 = newarray (double)[i0];

        i2 = 0;

     label2:
        if i2 >= i0 goto label3;

        $d2 = r5[i2];

        $d1 = r4[i2];

        $d3 = $d2 / $d1;

        r6[i2] = $d3;

        i2 = i2 + 1;

        goto label2;

     label3:
        return r6;
    }

    public double[] pvPremiumLegPerUnitSpread(com.opengamma.analytics.financial.credit.isdastandardmodel.MultiCDSAnalytic, com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantYieldCurve, com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantCreditCurve, com.opengamma.analytics.financial.credit.isdastandardmodel.PriceType)
    {
        com.opengamma.analytics.financial.credit.isdastandardmodel.MultiAnalyticCDSPricer r0;
        com.opengamma.analytics.financial.credit.isdastandardmodel.MultiCDSAnalytic r1;
        com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantYieldCurve r2;
        com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantCreditCurve r3;
        com.opengamma.analytics.financial.credit.isdastandardmodel.PriceType r4, $r10;
        int i0, i1, $i3, i4, i5, i6, i7;
        double d0, d1, d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21, $d22, $d23, $d24, d25, d26, d27, d29, d30;
        double[] r5, r11;
        com.opengamma.analytics.financial.credit.isdastandardmodel.CDSCoupon r6, r12, r13;
        boolean $z0, $z1, $z2;
        byte $b2;

        r0 := @this: com.opengamma.analytics.financial.credit.isdastandardmodel.MultiAnalyticCDSPricer;

        r1 := @parameter0: com.opengamma.analytics.financial.credit.isdastandardmodel.MultiCDSAnalytic;

        r2 := @parameter1: com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantYieldCurve;

        r3 := @parameter2: com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantCreditCurve;

        r4 := @parameter3: com.opengamma.analytics.financial.credit.isdastandardmodel.PriceType;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "null cds");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, "null yieldCurve");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r3, "null creditCurve");

        r11 = null;

        i0 = virtualinvoke r1.<com.opengamma.analytics.financial.credit.isdastandardmodel.MultiCDSAnalytic: int getNumMaturities()>();

        $z0 = virtualinvoke r1.<com.opengamma.analytics.financial.credit.isdastandardmodel.MultiCDSAnalytic: boolean isPayAccOnDefault()>();

        if $z0 == 0 goto label01;

        $d23 = virtualinvoke r1.<com.opengamma.analytics.financial.credit.isdastandardmodel.MultiCDSAnalytic: double getEffectiveProtectionStart()>();

        $i3 = i0 - 1;

        $d24 = virtualinvoke r1.<com.opengamma.analytics.financial.credit.isdastandardmodel.MultiCDSAnalytic: double getProtectionEnd(int)>($i3);

        r11 = staticinvoke <com.opengamma.analytics.financial.credit.isdastandardmodel.DoublesScheduleGenerator: double[] getIntegrationsPoints(double,double,com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantYieldCurve,com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantCreditCurve)>($d23, $d24, r2, r3);

     label01:
        $d3 = virtualinvoke r1.<com.opengamma.analytics.financial.credit.isdastandardmodel.MultiCDSAnalytic: double getCashSettleTime()>();

        d0 = virtualinvoke r2.<com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantYieldCurve: double getDiscountFactor(double)>($d3);

        r5 = newarray (double)[i0];

        i4 = 0;

        d25 = 0.0;

        i5 = 0;

     label02:
        if i5 >= i0 goto label12;

        $d4 = virtualinvoke r1.<com.opengamma.analytics.financial.credit.isdastandardmodel.MultiCDSAnalytic: double getProtectionEnd(int)>(i5);

        $b2 = $d4 cmpg 0.0;

        if $b2 > 0 goto label03;

        goto label11;

     label03:
        i1 = virtualinvoke r1.<com.opengamma.analytics.financial.credit.isdastandardmodel.MultiCDSAnalytic: int getPaymentIndexForMaturity(int)>(i5);

        i6 = i4;

     label04:
        if i6 >= i1 goto label05;

        r6 = virtualinvoke r1.<com.opengamma.analytics.financial.credit.isdastandardmodel.MultiCDSAnalytic: com.opengamma.analytics.financial.credit.isdastandardmodel.CDSCoupon getStandardCoupon(int)>(i6);

        $d18 = virtualinvoke r6.<com.opengamma.analytics.financial.credit.isdastandardmodel.CDSCoupon: double getEffEnd()>();

        d26 = virtualinvoke r3.<com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantCreditCurve: double getDiscountFactor(double)>($d18);

        $d19 = virtualinvoke r6.<com.opengamma.analytics.financial.credit.isdastandardmodel.CDSCoupon: double getPaymentTime()>();

        d1 = virtualinvoke r2.<com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantYieldCurve: double getDiscountFactor(double)>($d19);

        $d20 = virtualinvoke r6.<com.opengamma.analytics.financial.credit.isdastandardmodel.CDSCoupon: double getYearFrac()>();

        $d21 = $d20 * d1;

        $d22 = $d21 * d26;

        d25 = d25 + $d22;

        i6 = i6 + 1;

        goto label04;

     label05:
        $z1 = virtualinvoke r1.<com.opengamma.analytics.financial.credit.isdastandardmodel.MultiCDSAnalytic: boolean isPayAccOnDefault()>();

        if $z1 == 0 goto label08;

        d27 = 0.0;

        i7 = i4;

     label06:
        if i7 >= i1 goto label07;

        r12 = virtualinvoke r1.<com.opengamma.analytics.financial.credit.isdastandardmodel.MultiCDSAnalytic: com.opengamma.analytics.financial.credit.isdastandardmodel.CDSCoupon getStandardCoupon(int)>(i7);

        $d16 = virtualinvoke r1.<com.opengamma.analytics.financial.credit.isdastandardmodel.MultiCDSAnalytic: double getEffectiveProtectionStart()>();

        $d17 = specialinvoke r0.<com.opengamma.analytics.financial.credit.isdastandardmodel.MultiAnalyticCDSPricer: double calculateSinglePeriodAccrualOnDefault(com.opengamma.analytics.financial.credit.isdastandardmodel.CDSCoupon,double,double[],com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantYieldCurve,com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantCreditCurve)>(r12, $d16, r11, r2, r3);

        d27 = d27 + $d17;

        i7 = i7 + 1;

        goto label06;

     label07:
        d25 = d25 + d27;

     label08:
        r13 = virtualinvoke r1.<com.opengamma.analytics.financial.credit.isdastandardmodel.MultiCDSAnalytic: com.opengamma.analytics.financial.credit.isdastandardmodel.CDSCoupon getTerminalCoupon(int)>(i5);

        $d5 = virtualinvoke r13.<com.opengamma.analytics.financial.credit.isdastandardmodel.CDSCoupon: double getEffEnd()>();

        d29 = virtualinvoke r3.<com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantCreditCurve: double getDiscountFactor(double)>($d5);

        $d6 = virtualinvoke r13.<com.opengamma.analytics.financial.credit.isdastandardmodel.CDSCoupon: double getPaymentTime()>();

        d2 = virtualinvoke r2.<com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantYieldCurve: double getDiscountFactor(double)>($d6);

        $d7 = virtualinvoke r13.<com.opengamma.analytics.financial.credit.isdastandardmodel.CDSCoupon: double getYearFrac()>();

        $d8 = $d7 * d2;

        $d9 = $d8 * d29;

        d30 = d25 + $d9;

        $z2 = virtualinvoke r1.<com.opengamma.analytics.financial.credit.isdastandardmodel.MultiCDSAnalytic: boolean isPayAccOnDefault()>();

        if $z2 == 0 goto label09;

        $d14 = virtualinvoke r1.<com.opengamma.analytics.financial.credit.isdastandardmodel.MultiCDSAnalytic: double getEffectiveProtectionStart()>();

        $d15 = specialinvoke r0.<com.opengamma.analytics.financial.credit.isdastandardmodel.MultiAnalyticCDSPricer: double calculateSinglePeriodAccrualOnDefault(com.opengamma.analytics.financial.credit.isdastandardmodel.CDSCoupon,double,double[],com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantYieldCurve,com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantCreditCurve)>(r13, $d14, r11, r2, r3);

        d30 = d30 + $d15;

     label09:
        $d10 = d30 / d0;

        r5[i5] = $d10;

        $r10 = <com.opengamma.analytics.financial.credit.isdastandardmodel.PriceType: com.opengamma.analytics.financial.credit.isdastandardmodel.PriceType CLEAN>;

        if r4 != $r10 goto label10;

        $d11 = r5[i5];

        $d12 = virtualinvoke r1.<com.opengamma.analytics.financial.credit.isdastandardmodel.MultiCDSAnalytic: double getAccruedPremiumPerUnitSpread(int)>(i5);

        $d13 = $d11 - $d12;

        r5[i5] = $d13;

     label10:
        i4 = staticinvoke <java.lang.Math: int max(int,int)>(0, i1);

     label11:
        i5 = i5 + 1;

        goto label02;

     label12:
        return r5;
    }

    private double calculateSinglePeriodAccrualOnDefault(com.opengamma.analytics.financial.credit.isdastandardmodel.CDSCoupon, double, double[], com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantYieldCurve, com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantCreditCurve)
    {
        com.opengamma.analytics.financial.credit.isdastandardmodel.MultiAnalyticCDSPricer r0;
        com.opengamma.analytics.financial.credit.isdastandardmodel.CDSCoupon r1;
        double d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21, $d22, $d23, $d24, $d25, $d26, $d27, $d28, $d29, $d30, $d31, $d32, $d33, $d34, $d35, $d36, $d37, $d38, $d39, $d40, $d41, $d42, $d43, $d44, $d45, $d46, $d47, $d48, $d49, $d50, $d51, $d52, $d53, $d54, d55, d56, d57, d58, d59, d60, d61, d62;
        double[] r2, r5;
        com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantYieldCurve r3;
        com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantCreditCurve r4;
        int i0, $i2, i5;
        byte $b1, $b3, $b4;
        com.opengamma.analytics.financial.credit.isdastandardmodel.AccrualOnDefaultFormulae $r6, $r7;

        r0 := @this: com.opengamma.analytics.financial.credit.isdastandardmodel.MultiAnalyticCDSPricer;

        r1 := @parameter0: com.opengamma.analytics.financial.credit.isdastandardmodel.CDSCoupon;

        d0 := @parameter1: double;

        r2 := @parameter2: double[];

        r3 := @parameter3: com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantYieldCurve;

        r4 := @parameter4: com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantCreditCurve;

        $d10 = virtualinvoke r1.<com.opengamma.analytics.financial.credit.isdastandardmodel.CDSCoupon: double getEffStart()>();

        d1 = staticinvoke <java.lang.Math: double max(double,double)>($d10, d0);

        $d11 = virtualinvoke r1.<com.opengamma.analytics.financial.credit.isdastandardmodel.CDSCoupon: double getEffEnd()>();

        $b1 = d1 cmpl $d11;

        if $b1 < 0 goto label1;

        return 0.0;

     label1:
        $d12 = virtualinvoke r1.<com.opengamma.analytics.financial.credit.isdastandardmodel.CDSCoupon: double getEffEnd()>();

        r5 = staticinvoke <com.opengamma.analytics.financial.credit.isdastandardmodel.DoublesScheduleGenerator: double[] truncateSetInclusive(double,double,double[])>(d1, $d12, r2);

        d55 = r5[0];

        d56 = virtualinvoke r4.<com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantCreditCurve: double getRT(double)>(d55);

        d57 = virtualinvoke r3.<com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantYieldCurve: double getRT(double)>(d55);

        $d13 = neg d57;

        $d14 = $d13 - d56;

        d58 = staticinvoke <java.lang.Math: double exp(double)>($d14);

        $d15 = virtualinvoke r1.<com.opengamma.analytics.financial.credit.isdastandardmodel.CDSCoupon: double getEffStart()>();

        $d17 = d55 - $d15;

        $d16 = r0.<com.opengamma.analytics.financial.credit.isdastandardmodel.MultiAnalyticCDSPricer: double _omega>;

        d59 = $d17 + $d16;

        d60 = 0.0;

        i0 = lengthof r5;

        i5 = 1;

     label2:
        if i5 >= i0 goto label8;

        d61 = r5[i5];

        d2 = virtualinvoke r4.<com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantCreditCurve: double getRT(double)>(d61);

        d3 = virtualinvoke r3.<com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantYieldCurve: double getRT(double)>(d61);

        $d20 = neg d3;

        $d21 = $d20 - d2;

        d4 = staticinvoke <java.lang.Math: double exp(double)>($d21);

        $d23 = r5[i5];

        $i2 = i5 - 1;

        $d22 = r5[$i2];

        d5 = $d23 - $d22;

        d6 = d2 - d56;

        d7 = d3 - d57;

        $d24 = d6 + d7;

        d8 = $d24 + 1.0E-50;

        $r7 = r0.<com.opengamma.analytics.financial.credit.isdastandardmodel.MultiAnalyticCDSPricer: com.opengamma.analytics.financial.credit.isdastandardmodel.AccrualOnDefaultFormulae _formula>;

        $r6 = <com.opengamma.analytics.financial.credit.isdastandardmodel.AccrualOnDefaultFormulae: com.opengamma.analytics.financial.credit.isdastandardmodel.AccrualOnDefaultFormulae MarkitFix>;

        if $r7 != $r6 goto label4;

        $d45 = staticinvoke <java.lang.Math: double abs(double)>(d8);

        $b4 = $d45 cmpg 1.0E-5;

        if $b4 >= 0 goto label3;

        $d51 = d6 * d5;

        $d53 = $d51 * d58;

        $d52 = neg d8;

        $d54 = staticinvoke <com.opengamma.analytics.math.utilities.Epsilon: double epsilonP(double)>($d52);

        d62 = $d53 * $d54;

        goto label7;

     label3:
        $d46 = d6 * d5;

        $d50 = $d46 / d8;

        $d47 = d58 - d4;

        $d48 = $d47 / d8;

        $d49 = $d48 - d4;

        d62 = $d50 * $d49;

        goto label7;

     label4:
        $d25 = virtualinvoke r1.<com.opengamma.analytics.financial.credit.isdastandardmodel.CDSCoupon: double getEffStart()>();

        $d27 = d61 - $d25;

        $d26 = r0.<com.opengamma.analytics.financial.credit.isdastandardmodel.MultiAnalyticCDSPricer: double _omega>;

        d9 = $d27 + $d26;

        $d28 = staticinvoke <java.lang.Math: double abs(double)>(d8);

        $b3 = $d28 cmpg 1.0E-5;

        if $b3 >= 0 goto label5;

        $d38 = d6 * d58;

        $d37 = neg d8;

        $d39 = staticinvoke <com.opengamma.analytics.math.utilities.Epsilon: double epsilon(double)>($d37);

        $d41 = d59 * $d39;

        $d40 = neg d8;

        $d42 = staticinvoke <com.opengamma.analytics.math.utilities.Epsilon: double epsilonP(double)>($d40);

        $d43 = d5 * $d42;

        $d44 = $d41 + $d43;

        d62 = $d38 * $d44;

        goto label6;

     label5:
        $d36 = d6 / d8;

        $d30 = d59 * d58;

        $d29 = d9 * d4;

        $d34 = $d30 - $d29;

        $d32 = d5 / d8;

        $d31 = d58 - d4;

        $d33 = $d32 * $d31;

        $d35 = $d34 + $d33;

        d62 = $d36 * $d35;

     label6:
        d59 = d9;

     label7:
        d60 = d60 + d62;

        d56 = d2;

        d57 = d3;

        d58 = d4;

        i5 = i5 + 1;

        goto label2;

     label8:
        $d18 = virtualinvoke r1.<com.opengamma.analytics.financial.credit.isdastandardmodel.CDSCoupon: double getYFRatio()>();

        $d19 = $d18 * d60;

        return $d19;
    }

    public double[] protectionLeg(com.opengamma.analytics.financial.credit.isdastandardmodel.MultiCDSAnalytic, com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantYieldCurve, com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantCreditCurve)
    {
        com.opengamma.analytics.financial.credit.isdastandardmodel.MultiAnalyticCDSPricer r0;
        com.opengamma.analytics.financial.credit.isdastandardmodel.MultiCDSAnalytic r1;
        com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantYieldCurve r2;
        com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantCreditCurve r3;
        double d0, d1, d2, $d3, $d4, $d5, $d6, $d7, d8, d9;
        int i0, $i1, i3;
        double[] r4, r5, r6;
        byte $b2;

        r0 := @this: com.opengamma.analytics.financial.credit.isdastandardmodel.MultiAnalyticCDSPricer;

        r1 := @parameter0: com.opengamma.analytics.financial.credit.isdastandardmodel.MultiCDSAnalytic;

        r2 := @parameter1: com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantYieldCurve;

        r3 := @parameter2: com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantCreditCurve;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "null cds");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, "null yieldCurve");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r3, "null creditCurve");

        $d3 = virtualinvoke r1.<com.opengamma.analytics.financial.credit.isdastandardmodel.MultiCDSAnalytic: double getCashSettleTime()>();

        d0 = virtualinvoke r2.<com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantYieldCurve: double getDiscountFactor(double)>($d3);

        $d4 = virtualinvoke r1.<com.opengamma.analytics.financial.credit.isdastandardmodel.MultiCDSAnalytic: double getLGD()>();

        d1 = $d4 / d0;

        i0 = virtualinvoke r1.<com.opengamma.analytics.financial.credit.isdastandardmodel.MultiCDSAnalytic: int getNumMaturities()>();

        d8 = virtualinvoke r1.<com.opengamma.analytics.financial.credit.isdastandardmodel.MultiCDSAnalytic: double getEffectiveProtectionStart()>();

        $i1 = i0 - 1;

        $d5 = virtualinvoke r1.<com.opengamma.analytics.financial.credit.isdastandardmodel.MultiCDSAnalytic: double getProtectionEnd(int)>($i1);

        r4 = staticinvoke <com.opengamma.analytics.financial.credit.isdastandardmodel.DoublesScheduleGenerator: double[] getIntegrationsPoints(double,double,com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantYieldCurve,com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantCreditCurve)>(d8, $d5, r2, r3);

        r5 = newarray (double)[i0];

        d9 = 0.0;

        i3 = 0;

     label1:
        if i3 >= i0 goto label4;

        d2 = virtualinvoke r1.<com.opengamma.analytics.financial.credit.isdastandardmodel.MultiCDSAnalytic: double getProtectionEnd(int)>(i3);

        $b2 = d2 cmpg 0.0;

        if $b2 > 0 goto label2;

        goto label3;

     label2:
        r6 = staticinvoke <com.opengamma.analytics.financial.credit.isdastandardmodel.DoublesScheduleGenerator: double[] truncateSetInclusive(double,double,double[])>(d8, d2, r4);

        $d6 = specialinvoke r0.<com.opengamma.analytics.financial.credit.isdastandardmodel.MultiAnalyticCDSPricer: double protectionLegInterval(double[],com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantYieldCurve,com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantCreditCurve)>(r6, r2, r3);

        d9 = d9 + $d6;

        $d7 = d9 * d1;

        r5[i3] = $d7;

        d8 = d2;

     label3:
        i3 = i3 + 1;

        goto label1;

     label4:
        return r5;
    }

    private double protectionLegInterval(double[], com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantYieldCurve, com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantCreditCurve)
    {
        com.opengamma.analytics.financial.credit.isdastandardmodel.MultiAnalyticCDSPricer r0;
        double[] r1;
        com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantYieldCurve r2;
        com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantCreditCurve r3;
        int i0, i2;
        double d0, d1, d2, d3, d4, d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, d20, d21, d22, d23, d24;
        byte $b1;

        r0 := @this: com.opengamma.analytics.financial.credit.isdastandardmodel.MultiAnalyticCDSPricer;

        r1 := @parameter0: double[];

        r2 := @parameter1: com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantYieldCurve;

        r3 := @parameter2: com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantCreditCurve;

        $d6 = r1[0];

        d20 = virtualinvoke r3.<com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantCreditCurve: double getRT(double)>($d6);

        $d7 = r1[0];

        d21 = virtualinvoke r2.<com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantYieldCurve: double getRT(double)>($d7);

        $d8 = neg d20;

        $d9 = $d8 - d21;

        d22 = staticinvoke <java.lang.Math: double exp(double)>($d9);

        d23 = 0.0;

        i0 = lengthof r1;

        i2 = 1;

     label1:
        if i2 >= i0 goto label4;

        $d10 = r1[i2];

        d0 = virtualinvoke r3.<com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantCreditCurve: double getRT(double)>($d10);

        $d11 = r1[i2];

        d1 = virtualinvoke r2.<com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantYieldCurve: double getRT(double)>($d11);

        $d12 = neg d0;

        $d13 = $d12 - d1;

        d2 = staticinvoke <java.lang.Math: double exp(double)>($d13);

        d3 = d0 - d20;

        d4 = d1 - d21;

        d5 = d3 + d4;

        $d14 = staticinvoke <java.lang.Math: double abs(double)>(d5);

        $b1 = $d14 cmpg 1.0E-5;

        if $b1 >= 0 goto label2;

        $d18 = d3 * d22;

        $d17 = neg d5;

        $d19 = staticinvoke <com.opengamma.analytics.math.utilities.Epsilon: double epsilon(double)>($d17);

        d24 = $d18 * $d19;

        goto label3;

     label2:
        $d15 = d22 - d2;

        $d16 = $d15 * d3;

        d24 = $d16 / d5;

     label3:
        d23 = d23 + d24;

        d20 = d0;

        d21 = d1;

        d22 = d2;

        i2 = i2 + 1;

        goto label1;

     label4:
        return d23;
    }

    static void <clinit>()
    {
        com.opengamma.analytics.financial.credit.isdastandardmodel.AccrualOnDefaultFormulae $r0;

        <com.opengamma.analytics.financial.credit.isdastandardmodel.MultiAnalyticCDSPricer: double HALFDAY> = 0.0013698630136986301;

        $r0 = <com.opengamma.analytics.financial.credit.isdastandardmodel.AccrualOnDefaultFormulae: com.opengamma.analytics.financial.credit.isdastandardmodel.AccrualOnDefaultFormulae OrignalISDA>;

        <com.opengamma.analytics.financial.credit.isdastandardmodel.MultiAnalyticCDSPricer: com.opengamma.analytics.financial.credit.isdastandardmodel.AccrualOnDefaultFormulae DEFAULT_FORMULA> = $r0;

        return;
    }
}
