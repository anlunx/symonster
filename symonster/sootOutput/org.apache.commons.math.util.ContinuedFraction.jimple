public abstract class org.apache.commons.math.util.ContinuedFraction extends java.lang.Object
{
    private static final double DEFAULT_EPSILON;

    protected void <init>()
    {
        org.apache.commons.math.util.ContinuedFraction r0;

        r0 := @this: org.apache.commons.math.util.ContinuedFraction;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    protected abstract double getA(int, double);

    protected abstract double getB(int, double);

    public double evaluate(double) throws org.apache.commons.math.MathException
    {
        org.apache.commons.math.util.ContinuedFraction r0;
        double d0, $d1;

        r0 := @this: org.apache.commons.math.util.ContinuedFraction;

        d0 := @parameter0: double;

        $d1 = virtualinvoke r0.<org.apache.commons.math.util.ContinuedFraction: double evaluate(double,double,int)>(d0, 1.0E-8, 2147483647);

        return $d1;
    }

    public double evaluate(double, double) throws org.apache.commons.math.MathException
    {
        org.apache.commons.math.util.ContinuedFraction r0;
        double d0, d1, $d2;

        r0 := @this: org.apache.commons.math.util.ContinuedFraction;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        $d2 = virtualinvoke r0.<org.apache.commons.math.util.ContinuedFraction: double evaluate(double,double,int)>(d0, d1, 2147483647);

        return $d2;
    }

    public double evaluate(double, int) throws org.apache.commons.math.MathException
    {
        org.apache.commons.math.util.ContinuedFraction r0;
        double d0, $d1;
        int i0;

        r0 := @this: org.apache.commons.math.util.ContinuedFraction;

        d0 := @parameter0: double;

        i0 := @parameter1: int;

        $d1 = virtualinvoke r0.<org.apache.commons.math.util.ContinuedFraction: double evaluate(double,double,int)>(d0, 1.0E-8, i0);

        return $d1;
    }

    public double evaluate(double, double, int) throws org.apache.commons.math.MathException
    {
        org.apache.commons.math.util.ContinuedFraction r0;
        double d0, d1, d2, d3, d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21, $d22, d23, d24, d25, d26, d27, d28, d29, d30, d31, d33, d34;
        int i0, i7, i8;
        org.apache.commons.math.MaxIterationsExceededException $r1;
        java.lang.Object[] $r2, $r6, $r10, $r14;
        org.apache.commons.math.exception.util.LocalizedFormats $r3, $r7, $r11, $r15;
        java.lang.Double $r4, $r8, $r12, $r16;
        byte $b2, $b3, $b4, $b5, $b6;
        boolean $z0, $z1, $z2, $z3, z4, $z5, $z6;
        org.apache.commons.math.ConvergenceException $r5, $r9, $r13;

        r0 := @this: org.apache.commons.math.util.ContinuedFraction;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        i0 := @parameter2: int;

        d23 = 1.0;

        d24 = virtualinvoke r0.<org.apache.commons.math.util.ContinuedFraction: double getA(int,double)>(0, d0);

        d25 = 0.0;

        d26 = 1.0;

        d27 = d24 / 1.0;

        i7 = 0;

        d28 = 1.7976931348623157E308;

     label01:
        if i7 >= i0 goto label14;

        $b2 = d28 cmpl d1;

        if $b2 <= 0 goto label14;

        i7 = i7 + 1;

        d2 = virtualinvoke r0.<org.apache.commons.math.util.ContinuedFraction: double getA(int,double)>(i7, d0);

        d3 = virtualinvoke r0.<org.apache.commons.math.util.ContinuedFraction: double getB(int,double)>(i7, d0);

        $d6 = d2 * d24;

        $d5 = d3 * d23;

        d29 = $d6 + $d5;

        $d8 = d2 * d26;

        $d7 = d3 * d25;

        d30 = $d8 + $d7;

        z4 = 0;

        $z0 = staticinvoke <java.lang.Double: boolean isInfinite(double)>(d29);

        if $z0 != 0 goto label02;

        $z3 = staticinvoke <java.lang.Double: boolean isInfinite(double)>(d30);

        if $z3 == 0 goto label11;

     label02:
        d31 = 1.0;

        d4 = staticinvoke <org.apache.commons.math.util.FastMath: double max(double,double)>(d2, d3);

        $b3 = d4 cmpg 0.0;

        if $b3 > 0 goto label03;

        $r13 = new org.apache.commons.math.ConvergenceException;

        $r15 = <org.apache.commons.math.exception.util.LocalizedFormats: org.apache.commons.math.exception.util.LocalizedFormats CONTINUED_FRACTION_INFINITY_DIVERGENCE>;

        $r14 = newarray (java.lang.Object)[1];

        $r16 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d0);

        $r14[0] = $r16;

        specialinvoke $r13.<org.apache.commons.math.ConvergenceException: void <init>(org.apache.commons.math.exception.util.Localizable,java.lang.Object[])>($r15, $r14);

        throw $r13;

     label03:
        z4 = 1;

        i8 = 0;

     label04:
        if i8 >= 5 goto label11;

        d33 = d31;

        d31 = d31 * d4;

        $b4 = d2 cmpl 0.0;

        if $b4 == 0 goto label05;

        $b6 = d2 cmpl d3;

        if $b6 <= 0 goto label05;

        $d19 = d24 / d33;

        $d17 = d3 / d31;

        $d18 = $d17 * d23;

        d29 = $d19 + $d18;

        $d22 = d26 / d33;

        $d20 = d3 / d31;

        $d21 = $d20 * d25;

        d30 = $d22 + $d21;

        goto label06;

     label05:
        $b5 = d3 cmpl 0.0;

        if $b5 == 0 goto label06;

        $d11 = d2 / d31;

        $d13 = $d11 * d24;

        $d12 = d23 / d33;

        d29 = $d13 + $d12;

        $d14 = d2 / d31;

        $d16 = $d14 * d26;

        $d15 = d25 / d33;

        d30 = $d16 + $d15;

     label06:
        $z5 = staticinvoke <java.lang.Double: boolean isInfinite(double)>(d29);

        if $z5 != 0 goto label07;

        $z2 = staticinvoke <java.lang.Double: boolean isInfinite(double)>(d30);

        if $z2 == 0 goto label08;

     label07:
        $z6 = 1;

        goto label09;

     label08:
        $z6 = 0;

     label09:
        z4 = $z6;

        if $z6 != 0 goto label10;

        goto label11;

     label10:
        i8 = i8 + 1;

        goto label04;

     label11:
        if z4 == 0 goto label12;

        $r9 = new org.apache.commons.math.ConvergenceException;

        $r11 = <org.apache.commons.math.exception.util.LocalizedFormats: org.apache.commons.math.exception.util.LocalizedFormats CONTINUED_FRACTION_INFINITY_DIVERGENCE>;

        $r10 = newarray (java.lang.Object)[1];

        $r12 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d0);

        $r10[0] = $r12;

        specialinvoke $r9.<org.apache.commons.math.ConvergenceException: void <init>(org.apache.commons.math.exception.util.Localizable,java.lang.Object[])>($r11, $r10);

        throw $r9;

     label12:
        d34 = d29 / d30;

        $z1 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d34);

        if $z1 == 0 goto label13;

        $r5 = new org.apache.commons.math.ConvergenceException;

        $r7 = <org.apache.commons.math.exception.util.LocalizedFormats: org.apache.commons.math.exception.util.LocalizedFormats CONTINUED_FRACTION_NAN_DIVERGENCE>;

        $r6 = newarray (java.lang.Object)[1];

        $r8 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d0);

        $r6[0] = $r8;

        specialinvoke $r5.<org.apache.commons.math.ConvergenceException: void <init>(org.apache.commons.math.exception.util.Localizable,java.lang.Object[])>($r7, $r6);

        throw $r5;

     label13:
        $d9 = d34 / d27;

        $d10 = $d9 - 1.0;

        d28 = staticinvoke <org.apache.commons.math.util.FastMath: double abs(double)>($d10);

        d27 = d29 / d30;

        d23 = d24;

        d24 = d29;

        d25 = d26;

        d26 = d30;

        goto label01;

     label14:
        if i7 < i0 goto label15;

        $r1 = new org.apache.commons.math.MaxIterationsExceededException;

        $r3 = <org.apache.commons.math.exception.util.LocalizedFormats: org.apache.commons.math.exception.util.LocalizedFormats NON_CONVERGENT_CONTINUED_FRACTION>;

        $r2 = newarray (java.lang.Object)[1];

        $r4 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d0);

        $r2[0] = $r4;

        specialinvoke $r1.<org.apache.commons.math.MaxIterationsExceededException: void <init>(int,org.apache.commons.math.exception.util.Localizable,java.lang.Object[])>(i0, $r3, $r2);

        throw $r1;

     label15:
        return d27;
    }

    public static void <clinit>()
    {
        <org.apache.commons.math.util.ContinuedFraction: double DEFAULT_EPSILON> = 1.0E-8;

        return;
    }
}
