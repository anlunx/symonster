class com.opengamma.analytics.financial.model.option.pricing.analytic.LogOptionModel$1 extends com.opengamma.analytics.math.function.Function1D
{
    final com.opengamma.analytics.financial.model.option.definition.LogOptionDefinition val$definition;
    final com.opengamma.analytics.financial.model.option.pricing.analytic.LogOptionModel this$0;

    void <init>(com.opengamma.analytics.financial.model.option.pricing.analytic.LogOptionModel, com.opengamma.analytics.financial.model.option.definition.LogOptionDefinition)
    {
        com.opengamma.analytics.financial.model.option.pricing.analytic.LogOptionModel$1 r0;
        com.opengamma.analytics.financial.model.option.pricing.analytic.LogOptionModel r1;
        com.opengamma.analytics.financial.model.option.definition.LogOptionDefinition r2;

        r0 := @this: com.opengamma.analytics.financial.model.option.pricing.analytic.LogOptionModel$1;

        r1 := @parameter0: com.opengamma.analytics.financial.model.option.pricing.analytic.LogOptionModel;

        r2 := @parameter1: com.opengamma.analytics.financial.model.option.definition.LogOptionDefinition;

        r0.<com.opengamma.analytics.financial.model.option.pricing.analytic.LogOptionModel$1: com.opengamma.analytics.financial.model.option.pricing.analytic.LogOptionModel this$0> = r1;

        r0.<com.opengamma.analytics.financial.model.option.pricing.analytic.LogOptionModel$1: com.opengamma.analytics.financial.model.option.definition.LogOptionDefinition val$definition> = r2;

        specialinvoke r0.<com.opengamma.analytics.math.function.Function1D: void <init>()>();

        return;
    }

    public java.lang.Double evaluate(com.opengamma.analytics.financial.model.option.definition.StandardOptionDataBundle)
    {
        com.opengamma.analytics.financial.model.option.pricing.analytic.LogOptionModel$1 r0;
        com.opengamma.analytics.financial.model.option.definition.StandardOptionDataBundle r1;
        double d0, d1, d2, d3, d4, d5, d6, d7, d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21, $d22, $d23, $d24;
        com.opengamma.analytics.financial.model.option.definition.LogOptionDefinition $r2, $r4;
        java.lang.Double $r3, $r8, $r11, $r12;
        org.threeten.bp.ZonedDateTime $r5;
        com.opengamma.analytics.financial.model.option.pricing.analytic.LogOptionModel $r6, $r9;
        com.opengamma.analytics.math.statistics.distribution.ProbabilityDistribution $r7, $r10;

        r0 := @this: com.opengamma.analytics.financial.model.option.pricing.analytic.LogOptionModel$1;

        r1 := @parameter0: com.opengamma.analytics.financial.model.option.definition.StandardOptionDataBundle;

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object)>(r1);

        d0 = virtualinvoke r1.<com.opengamma.analytics.financial.model.option.definition.StandardOptionDataBundle: double getSpot()>();

        $r2 = r0.<com.opengamma.analytics.financial.model.option.pricing.analytic.LogOptionModel$1: com.opengamma.analytics.financial.model.option.definition.LogOptionDefinition val$definition>;

        $r3 = virtualinvoke $r2.<com.opengamma.analytics.financial.model.option.definition.LogOptionDefinition: java.lang.Double getStrike()>();

        d1 = virtualinvoke $r3.<java.lang.Double: double doubleValue()>();

        $r4 = r0.<com.opengamma.analytics.financial.model.option.pricing.analytic.LogOptionModel$1: com.opengamma.analytics.financial.model.option.definition.LogOptionDefinition val$definition>;

        $r5 = virtualinvoke r1.<com.opengamma.analytics.financial.model.option.definition.StandardOptionDataBundle: org.threeten.bp.ZonedDateTime getDate()>();

        d2 = virtualinvoke $r4.<com.opengamma.analytics.financial.model.option.definition.LogOptionDefinition: double getTimeToExpiry(org.threeten.bp.ZonedDateTime)>($r5);

        d3 = virtualinvoke r1.<com.opengamma.analytics.financial.model.option.definition.StandardOptionDataBundle: double getCostOfCarry()>();

        d4 = virtualinvoke r1.<com.opengamma.analytics.financial.model.option.definition.StandardOptionDataBundle: double getInterestRate(double)>(d2);

        d5 = virtualinvoke r1.<com.opengamma.analytics.financial.model.option.definition.StandardOptionDataBundle: double getVolatility(double,double)>(d2, d1);

        $d9 = neg d4;

        $d10 = $d9 * d2;

        d6 = staticinvoke <java.lang.Math: double exp(double)>($d10);

        $d11 = staticinvoke <java.lang.Math: double sqrt(double)>(d2);

        d7 = d5 * $d11;

        $d12 = d0 / d1;

        $d13 = staticinvoke <java.lang.Math: double log(double)>($d12);

        $d14 = d5 * d5;

        $d15 = $d14 * 0.5;

        $d16 = d3 - $d15;

        $d17 = d2 * $d16;

        $d18 = $d13 + $d17;

        d8 = $d18 / d7;

        $d19 = d6 * d7;

        $r6 = r0.<com.opengamma.analytics.financial.model.option.pricing.analytic.LogOptionModel$1: com.opengamma.analytics.financial.model.option.pricing.analytic.LogOptionModel this$0>;

        $r7 = staticinvoke <com.opengamma.analytics.financial.model.option.pricing.analytic.LogOptionModel: com.opengamma.analytics.math.statistics.distribution.ProbabilityDistribution access$000(com.opengamma.analytics.financial.model.option.pricing.analytic.LogOptionModel)>($r6);

        $r8 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d8);

        $d20 = interfaceinvoke $r7.<com.opengamma.analytics.math.statistics.distribution.ProbabilityDistribution: double getPDF(java.lang.Object)>($r8);

        $r9 = r0.<com.opengamma.analytics.financial.model.option.pricing.analytic.LogOptionModel$1: com.opengamma.analytics.financial.model.option.pricing.analytic.LogOptionModel this$0>;

        $r10 = staticinvoke <com.opengamma.analytics.financial.model.option.pricing.analytic.LogOptionModel: com.opengamma.analytics.math.statistics.distribution.ProbabilityDistribution access$000(com.opengamma.analytics.financial.model.option.pricing.analytic.LogOptionModel)>($r9);

        $r11 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d8);

        $d21 = interfaceinvoke $r10.<com.opengamma.analytics.math.statistics.distribution.ProbabilityDistribution: double getCDF(java.lang.Object)>($r11);

        $d22 = d8 * $d21;

        $d23 = $d20 + $d22;

        $d24 = $d19 * $d23;

        $r12 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d24);

        return $r12;
    }

    public volatile java.lang.Object evaluate(java.lang.Object)
    {
        com.opengamma.analytics.financial.model.option.pricing.analytic.LogOptionModel$1 r0;
        java.lang.Object r1;
        com.opengamma.analytics.financial.model.option.definition.StandardOptionDataBundle $r2;
        java.lang.Double $r3;

        r0 := @this: com.opengamma.analytics.financial.model.option.pricing.analytic.LogOptionModel$1;

        r1 := @parameter0: java.lang.Object;

        $r2 = (com.opengamma.analytics.financial.model.option.definition.StandardOptionDataBundle) r1;

        $r3 = virtualinvoke r0.<com.opengamma.analytics.financial.model.option.pricing.analytic.LogOptionModel$1: java.lang.Double evaluate(com.opengamma.analytics.financial.model.option.definition.StandardOptionDataBundle)>($r2);

        return $r3;
    }
}
