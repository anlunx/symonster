public final class com.opengamma.analytics.financial.forex.provider.ForexDiscountingMethod extends java.lang.Object
{
    private static final com.opengamma.analytics.financial.forex.provider.ForexDiscountingMethod INSTANCE;
    private static final com.opengamma.analytics.financial.interestrate.payments.provider.PaymentFixedDiscountingMethod METHOD_PAY;

    public static com.opengamma.analytics.financial.forex.provider.ForexDiscountingMethod getInstance()
    {
        com.opengamma.analytics.financial.forex.provider.ForexDiscountingMethod $r0;

        $r0 = <com.opengamma.analytics.financial.forex.provider.ForexDiscountingMethod: com.opengamma.analytics.financial.forex.provider.ForexDiscountingMethod INSTANCE>;

        return $r0;
    }

    private void <init>()
    {
        com.opengamma.analytics.financial.forex.provider.ForexDiscountingMethod r0;

        r0 := @this: com.opengamma.analytics.financial.forex.provider.ForexDiscountingMethod;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public com.opengamma.util.money.MultipleCurrencyAmount presentValue(com.opengamma.analytics.financial.forex.derivative.Forex, com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface)
    {
        com.opengamma.analytics.financial.forex.provider.ForexDiscountingMethod r0;
        com.opengamma.analytics.financial.forex.derivative.Forex r1;
        com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface r2;
        com.opengamma.util.money.MultipleCurrencyAmount r3, r4, $r9;
        com.opengamma.analytics.financial.interestrate.payments.provider.PaymentFixedDiscountingMethod $r5, $r7;
        com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed $r6, $r8;

        r0 := @this: com.opengamma.analytics.financial.forex.provider.ForexDiscountingMethod;

        r1 := @parameter0: com.opengamma.analytics.financial.forex.derivative.Forex;

        r2 := @parameter1: com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface;

        $r5 = <com.opengamma.analytics.financial.forex.provider.ForexDiscountingMethod: com.opengamma.analytics.financial.interestrate.payments.provider.PaymentFixedDiscountingMethod METHOD_PAY>;

        $r6 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed getPaymentCurrency1()>();

        r3 = virtualinvoke $r5.<com.opengamma.analytics.financial.interestrate.payments.provider.PaymentFixedDiscountingMethod: com.opengamma.util.money.MultipleCurrencyAmount presentValue(com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed,com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface)>($r6, r2);

        $r7 = <com.opengamma.analytics.financial.forex.provider.ForexDiscountingMethod: com.opengamma.analytics.financial.interestrate.payments.provider.PaymentFixedDiscountingMethod METHOD_PAY>;

        $r8 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed getPaymentCurrency2()>();

        r4 = virtualinvoke $r7.<com.opengamma.analytics.financial.interestrate.payments.provider.PaymentFixedDiscountingMethod: com.opengamma.util.money.MultipleCurrencyAmount presentValue(com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed,com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface)>($r8, r2);

        $r9 = virtualinvoke r3.<com.opengamma.util.money.MultipleCurrencyAmount: com.opengamma.util.money.MultipleCurrencyAmount plus(com.opengamma.util.money.MultipleCurrencyAmount)>(r4);

        return $r9;
    }

    public com.opengamma.util.money.MultipleCurrencyAmount currencyExposure(com.opengamma.analytics.financial.forex.derivative.Forex, com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface)
    {
        com.opengamma.analytics.financial.forex.provider.ForexDiscountingMethod r0;
        com.opengamma.analytics.financial.forex.derivative.Forex r1;
        com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface r2;
        com.opengamma.util.money.MultipleCurrencyAmount $r3;

        r0 := @this: com.opengamma.analytics.financial.forex.provider.ForexDiscountingMethod;

        r1 := @parameter0: com.opengamma.analytics.financial.forex.derivative.Forex;

        r2 := @parameter1: com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface;

        $r3 = virtualinvoke r0.<com.opengamma.analytics.financial.forex.provider.ForexDiscountingMethod: com.opengamma.util.money.MultipleCurrencyAmount presentValue(com.opengamma.analytics.financial.forex.derivative.Forex,com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface)>(r1, r2);

        return $r3;
    }

    public double parSpread(com.opengamma.analytics.financial.forex.derivative.Forex, com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface)
    {
        com.opengamma.analytics.financial.forex.provider.ForexDiscountingMethod r0;
        com.opengamma.analytics.financial.forex.derivative.Forex r1;
        com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface r2;
        com.opengamma.util.money.Currency r3, $r9;
        double d0, d1, d2, $d3, $d4, $d5;
        com.opengamma.analytics.financial.forex.method.FXMatrix $r6;
        com.opengamma.util.money.MultipleCurrencyAmount $r7;
        com.opengamma.util.money.CurrencyAmount $r8;
        java.lang.Double $r10;
        com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed $r11;

        r0 := @this: com.opengamma.analytics.financial.forex.provider.ForexDiscountingMethod;

        r1 := @parameter0: com.opengamma.analytics.financial.forex.derivative.Forex;

        r2 := @parameter1: com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "Forex");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, "Multi-curves provider");

        r3 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.util.money.Currency getCurrency2()>();

        $r6 = interfaceinvoke r2.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface: com.opengamma.analytics.financial.forex.method.FXMatrix getFxRates()>();

        $r7 = virtualinvoke r0.<com.opengamma.analytics.financial.forex.provider.ForexDiscountingMethod: com.opengamma.util.money.MultipleCurrencyAmount presentValue(com.opengamma.analytics.financial.forex.derivative.Forex,com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface)>(r1, r2);

        $r8 = virtualinvoke $r6.<com.opengamma.analytics.financial.forex.method.FXMatrix: com.opengamma.util.money.CurrencyAmount convert(com.opengamma.util.money.MultipleCurrencyAmount,com.opengamma.util.money.Currency)>($r7, r3);

        d0 = virtualinvoke $r8.<com.opengamma.util.money.CurrencyAmount: double getAmount()>();

        $r9 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.util.money.Currency getCurrency2()>();

        $d3 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.Forex: double getPaymentTime()>();

        $r10 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d3);

        d1 = interfaceinvoke r2.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface: double getDiscountFactor(com.opengamma.util.money.Currency,java.lang.Double)>($r9, $r10);

        $r11 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed getPaymentCurrency1()>();

        d2 = virtualinvoke $r11.<com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed: double getAmount()>();

        $d4 = d2 * d1;

        $d5 = d0 / $d4;

        return $d5;
    }

    public double forwardForexRate(com.opengamma.analytics.financial.forex.derivative.Forex, com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface)
    {
        com.opengamma.analytics.financial.forex.provider.ForexDiscountingMethod r0;
        com.opengamma.analytics.financial.forex.derivative.Forex r1;
        com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface r2;
        double d0, d1, d2, $d3, $d4, $d5, $d6;
        com.opengamma.util.money.Currency $r3, $r5, $r7, $r8;
        java.lang.Double $r4, $r6;

        r0 := @this: com.opengamma.analytics.financial.forex.provider.ForexDiscountingMethod;

        r1 := @parameter0: com.opengamma.analytics.financial.forex.derivative.Forex;

        r2 := @parameter1: com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface;

        $r3 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.util.money.Currency getCurrency2()>();

        $d3 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.Forex: double getPaymentTime()>();

        $r4 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d3);

        d0 = interfaceinvoke r2.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface: double getDiscountFactor(com.opengamma.util.money.Currency,java.lang.Double)>($r3, $r4);

        $r5 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.util.money.Currency getCurrency1()>();

        $d4 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.Forex: double getPaymentTime()>();

        $r6 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d4);

        d1 = interfaceinvoke r2.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface: double getDiscountFactor(com.opengamma.util.money.Currency,java.lang.Double)>($r5, $r6);

        $r7 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.util.money.Currency getCurrency1()>();

        $r8 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.util.money.Currency getCurrency2()>();

        d2 = interfaceinvoke r2.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface: double getFxRate(com.opengamma.util.money.Currency,com.opengamma.util.money.Currency)>($r7, $r8);

        $d5 = d2 * d1;

        $d6 = $d5 / d0;

        return $d6;
    }

    public com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyMulticurveSensitivity presentValueCurveSensitivity(com.opengamma.analytics.financial.forex.derivative.Forex, com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface)
    {
        com.opengamma.analytics.financial.forex.provider.ForexDiscountingMethod r0;
        com.opengamma.analytics.financial.forex.derivative.Forex r1;
        com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface r2;
        com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyMulticurveSensitivity r3, r4, $r9;
        com.opengamma.analytics.financial.interestrate.payments.provider.PaymentFixedDiscountingMethod $r5, $r7;
        com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed $r6, $r8;

        r0 := @this: com.opengamma.analytics.financial.forex.provider.ForexDiscountingMethod;

        r1 := @parameter0: com.opengamma.analytics.financial.forex.derivative.Forex;

        r2 := @parameter1: com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface;

        $r5 = <com.opengamma.analytics.financial.forex.provider.ForexDiscountingMethod: com.opengamma.analytics.financial.interestrate.payments.provider.PaymentFixedDiscountingMethod METHOD_PAY>;

        $r6 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed getPaymentCurrency1()>();

        r3 = virtualinvoke $r5.<com.opengamma.analytics.financial.interestrate.payments.provider.PaymentFixedDiscountingMethod: com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyMulticurveSensitivity presentValueCurveSensitivity(com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed,com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface)>($r6, r2);

        $r7 = <com.opengamma.analytics.financial.forex.provider.ForexDiscountingMethod: com.opengamma.analytics.financial.interestrate.payments.provider.PaymentFixedDiscountingMethod METHOD_PAY>;

        $r8 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed getPaymentCurrency2()>();

        r4 = virtualinvoke $r7.<com.opengamma.analytics.financial.interestrate.payments.provider.PaymentFixedDiscountingMethod: com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyMulticurveSensitivity presentValueCurveSensitivity(com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed,com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface)>($r8, r2);

        $r9 = virtualinvoke r3.<com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyMulticurveSensitivity: com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyMulticurveSensitivity plus(com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyMulticurveSensitivity)>(r4);

        return $r9;
    }

    public com.opengamma.analytics.financial.provider.sensitivity.multicurve.MulticurveSensitivity parSpreadCurveSensitivity(com.opengamma.analytics.financial.forex.derivative.Forex, com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface)
    {
        com.opengamma.analytics.financial.forex.provider.ForexDiscountingMethod r0;
        com.opengamma.analytics.financial.forex.derivative.Forex r1;
        com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface r2;
        com.opengamma.util.money.Currency r3, $r14;
        double d0, d1, d2, d3, d5, d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15;
        com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyMulticurveSensitivity r4, $r18;
        com.opengamma.analytics.financial.provider.sensitivity.multicurve.MulticurveSensitivity r5, r8, $r24, $r25;
        com.opengamma.analytics.financial.forex.method.FXMatrix $r11, $r17;
        com.opengamma.util.money.MultipleCurrencyAmount $r12;
        com.opengamma.util.money.CurrencyAmount $r13;
        java.lang.Double $r15;
        com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed $r16;
        java.util.ArrayList $r19;
        com.opengamma.util.tuple.DoublesPair $r20;
        java.util.HashMap $r21;
        java.lang.String $r22;

        r0 := @this: com.opengamma.analytics.financial.forex.provider.ForexDiscountingMethod;

        r1 := @parameter0: com.opengamma.analytics.financial.forex.derivative.Forex;

        r2 := @parameter1: com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "Forex");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, "Multi-curves provider");

        r3 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.util.money.Currency getCurrency2()>();

        d0 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.Forex: double getPaymentTime()>();

        $r11 = interfaceinvoke r2.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface: com.opengamma.analytics.financial.forex.method.FXMatrix getFxRates()>();

        $r12 = virtualinvoke r0.<com.opengamma.analytics.financial.forex.provider.ForexDiscountingMethod: com.opengamma.util.money.MultipleCurrencyAmount presentValue(com.opengamma.analytics.financial.forex.derivative.Forex,com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface)>(r1, r2);

        $r13 = virtualinvoke $r11.<com.opengamma.analytics.financial.forex.method.FXMatrix: com.opengamma.util.money.CurrencyAmount convert(com.opengamma.util.money.MultipleCurrencyAmount,com.opengamma.util.money.Currency)>($r12, r3);

        d1 = virtualinvoke $r13.<com.opengamma.util.money.CurrencyAmount: double getAmount()>();

        $r14 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.util.money.Currency getCurrency2()>();

        $d7 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.Forex: double getPaymentTime()>();

        $r15 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d7);

        d2 = interfaceinvoke r2.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface: double getDiscountFactor(com.opengamma.util.money.Currency,java.lang.Double)>($r14, $r15);

        $r16 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed getPaymentCurrency1()>();

        d3 = virtualinvoke $r16.<com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed: double getAmount()>();

        $d10 = neg d1;

        $d8 = d3 * d2;

        $d9 = $d8 * d2;

        $d11 = $d10 / $d9;

        d5 = $d11 * 1.0;

        $d12 = d3 * d2;

        d6 = 1.0 / $d12;

        r4 = virtualinvoke r0.<com.opengamma.analytics.financial.forex.provider.ForexDiscountingMethod: com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyMulticurveSensitivity presentValueCurveSensitivity(com.opengamma.analytics.financial.forex.derivative.Forex,com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface)>(r1, r2);

        $r17 = interfaceinvoke r2.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface: com.opengamma.analytics.financial.forex.method.FXMatrix getFxRates()>();

        $r18 = virtualinvoke r4.<com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyMulticurveSensitivity: com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyMulticurveSensitivity converted(com.opengamma.util.money.Currency,com.opengamma.analytics.financial.forex.method.FXMatrix)>(r3, $r17);

        r5 = virtualinvoke $r18.<com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyMulticurveSensitivity: com.opengamma.analytics.financial.provider.sensitivity.multicurve.MulticurveSensitivity getSensitivity(com.opengamma.util.money.Currency)>(r3);

        $r19 = new java.util.ArrayList;

        specialinvoke $r19.<java.util.ArrayList: void <init>()>();

        $d13 = neg d0;

        $d14 = $d13 * d2;

        $d15 = $d14 * d5;

        $r20 = staticinvoke <com.opengamma.util.tuple.DoublesPair: com.opengamma.util.tuple.DoublesPair of(double,double)>(d0, $d15);

        interfaceinvoke $r19.<java.util.List: boolean add(java.lang.Object)>($r20);

        $r21 = new java.util.HashMap;

        specialinvoke $r21.<java.util.HashMap: void <init>()>();

        $r22 = interfaceinvoke r2.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface: java.lang.String getName(com.opengamma.util.money.Currency)>(r3);

        interfaceinvoke $r21.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r22, $r19);

        r8 = staticinvoke <com.opengamma.analytics.financial.provider.sensitivity.multicurve.MulticurveSensitivity: com.opengamma.analytics.financial.provider.sensitivity.multicurve.MulticurveSensitivity ofYieldDiscounting(java.util.Map)>($r21);

        $r24 = virtualinvoke r5.<com.opengamma.analytics.financial.provider.sensitivity.multicurve.MulticurveSensitivity: com.opengamma.analytics.financial.provider.sensitivity.multicurve.MulticurveSensitivity multipliedBy(double)>(d6);

        $r25 = virtualinvoke $r24.<com.opengamma.analytics.financial.provider.sensitivity.multicurve.MulticurveSensitivity: com.opengamma.analytics.financial.provider.sensitivity.multicurve.MulticurveSensitivity plus(com.opengamma.analytics.financial.provider.sensitivity.multicurve.MulticurveSensitivity)>(r8);

        return $r25;
    }

    static void <clinit>()
    {
        com.opengamma.analytics.financial.forex.provider.ForexDiscountingMethod $r0;
        com.opengamma.analytics.financial.interestrate.payments.provider.PaymentFixedDiscountingMethod $r1;

        $r0 = new com.opengamma.analytics.financial.forex.provider.ForexDiscountingMethod;

        specialinvoke $r0.<com.opengamma.analytics.financial.forex.provider.ForexDiscountingMethod: void <init>()>();

        <com.opengamma.analytics.financial.forex.provider.ForexDiscountingMethod: com.opengamma.analytics.financial.forex.provider.ForexDiscountingMethod INSTANCE> = $r0;

        $r1 = staticinvoke <com.opengamma.analytics.financial.interestrate.payments.provider.PaymentFixedDiscountingMethod: com.opengamma.analytics.financial.interestrate.payments.provider.PaymentFixedDiscountingMethod getInstance()>();

        <com.opengamma.analytics.financial.forex.provider.ForexDiscountingMethod: com.opengamma.analytics.financial.interestrate.payments.provider.PaymentFixedDiscountingMethod METHOD_PAY> = $r1;

        return;
    }
}
