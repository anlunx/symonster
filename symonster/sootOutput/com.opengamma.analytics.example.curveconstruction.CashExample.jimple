public class com.opengamma.analytics.example.curveconstruction.CashExample extends java.lang.Object
{
    public static final com.opengamma.util.money.Currency ccy;
    public static final double t;
    public static final double notional;
    public static final double r;
    public static final java.lang.String yieldCurveName;
    public static final double y;

    public void <init>()
    {
        com.opengamma.analytics.example.curveconstruction.CashExample r0;

        r0 := @this: com.opengamma.analytics.example.curveconstruction.CashExample;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static void cashDemo(java.io.PrintStream)
    {
        java.io.PrintStream r0;
        com.opengamma.analytics.financial.interestrate.cash.derivative.Cash $r2;
        com.opengamma.util.money.Currency $r3;
        double $d0;

        r0 := @parameter0: java.io.PrintStream;

        $r2 = new com.opengamma.analytics.financial.interestrate.cash.derivative.Cash;

        $r3 = <com.opengamma.analytics.example.curveconstruction.CashExample: com.opengamma.util.money.Currency ccy>;

        specialinvoke $r2.<com.opengamma.analytics.financial.interestrate.cash.derivative.Cash: void <init>(com.opengamma.util.money.Currency,double,double,double,double,double,java.lang.String)>($r3, 0.0, 1.0, 10000.0, 0.03, 1.0, "Euro Yield Curve Fixed 2%");

        $d0 = virtualinvoke $r2.<com.opengamma.analytics.financial.interestrate.cash.derivative.Cash: double getInterestAmount()>();

        virtualinvoke r0.<java.io.PrintStream: void println(double)>($d0);

        return;
    }

    public static com.opengamma.analytics.financial.interestrate.YieldCurveBundle getBundle()
    {
        com.opengamma.analytics.financial.model.interestrate.curve.YieldCurve r2;
        com.opengamma.analytics.financial.interestrate.YieldCurveBundle $r3;
        com.opengamma.analytics.math.curve.ConstantDoublesCurve $r4;

        $r3 = new com.opengamma.analytics.financial.interestrate.YieldCurveBundle;

        specialinvoke $r3.<com.opengamma.analytics.financial.interestrate.YieldCurveBundle: void <init>()>();

        $r4 = new com.opengamma.analytics.math.curve.ConstantDoublesCurve;

        specialinvoke $r4.<com.opengamma.analytics.math.curve.ConstantDoublesCurve: void <init>(double)>(0.02);

        r2 = staticinvoke <com.opengamma.analytics.financial.model.interestrate.curve.YieldCurve: com.opengamma.analytics.financial.model.interestrate.curve.YieldCurve 'from'(com.opengamma.analytics.math.curve.DoublesCurve)>($r4);

        virtualinvoke $r3.<com.opengamma.analytics.financial.interestrate.YieldCurveBundle: void setCurve(java.lang.String,com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve)>("Euro Yield Curve Fixed 2%", r2);

        return $r3;
    }

    public static void parRateDemo(java.io.PrintStream)
    {
        java.io.PrintStream r0;
        com.opengamma.analytics.financial.interestrate.YieldCurveBundle r2;
        com.opengamma.analytics.financial.interestrate.ParRateCalculator r3;
        double d0;
        com.opengamma.analytics.financial.interestrate.cash.derivative.Cash $r4;
        com.opengamma.util.money.Currency $r5;
        java.lang.Object $r6;
        java.lang.Double $r7;

        r0 := @parameter0: java.io.PrintStream;

        $r4 = new com.opengamma.analytics.financial.interestrate.cash.derivative.Cash;

        $r5 = <com.opengamma.analytics.example.curveconstruction.CashExample: com.opengamma.util.money.Currency ccy>;

        specialinvoke $r4.<com.opengamma.analytics.financial.interestrate.cash.derivative.Cash: void <init>(com.opengamma.util.money.Currency,double,double,double,double,double,java.lang.String)>($r5, 0.0, 1.0, 10000.0, 0.03, 1.0, "Euro Yield Curve Fixed 2%");

        r2 = staticinvoke <com.opengamma.analytics.example.curveconstruction.CashExample: com.opengamma.analytics.financial.interestrate.YieldCurveBundle getBundle()>();

        r3 = staticinvoke <com.opengamma.analytics.financial.interestrate.ParRateCalculator: com.opengamma.analytics.financial.interestrate.ParRateCalculator getInstance()>();

        $r6 = virtualinvoke $r4.<com.opengamma.analytics.financial.interestrate.cash.derivative.Cash: java.lang.Object accept(com.opengamma.analytics.financial.interestrate.InstrumentDerivativeVisitor,java.lang.Object)>(r3, r2);

        $r7 = (java.lang.Double) $r6;

        d0 = virtualinvoke $r7.<java.lang.Double: double doubleValue()>();

        virtualinvoke r0.<java.io.PrintStream: void println(double)>(d0);

        return;
    }

    public static void presentValueDemo(java.io.PrintStream)
    {
        java.io.PrintStream r0;
        com.opengamma.analytics.financial.interestrate.YieldCurveBundle r2;
        com.opengamma.analytics.financial.interestrate.PresentValueCalculator r3;
        double d0;
        com.opengamma.analytics.financial.interestrate.cash.derivative.Cash $r4;
        com.opengamma.util.money.Currency $r5;
        java.lang.Object $r6;
        java.lang.Double $r7;

        r0 := @parameter0: java.io.PrintStream;

        $r4 = new com.opengamma.analytics.financial.interestrate.cash.derivative.Cash;

        $r5 = <com.opengamma.analytics.example.curveconstruction.CashExample: com.opengamma.util.money.Currency ccy>;

        specialinvoke $r4.<com.opengamma.analytics.financial.interestrate.cash.derivative.Cash: void <init>(com.opengamma.util.money.Currency,double,double,double,double,double,java.lang.String)>($r5, 0.0, 1.0, 10000.0, 0.03, 1.0, "Euro Yield Curve Fixed 2%");

        r2 = staticinvoke <com.opengamma.analytics.example.curveconstruction.CashExample: com.opengamma.analytics.financial.interestrate.YieldCurveBundle getBundle()>();

        r3 = staticinvoke <com.opengamma.analytics.financial.interestrate.PresentValueCalculator: com.opengamma.analytics.financial.interestrate.PresentValueCalculator getInstance()>();

        $r6 = virtualinvoke $r4.<com.opengamma.analytics.financial.interestrate.cash.derivative.Cash: java.lang.Object accept(com.opengamma.analytics.financial.interestrate.InstrumentDerivativeVisitor,java.lang.Object)>(r3, r2);

        $r7 = (java.lang.Double) $r6;

        d0 = virtualinvoke $r7.<java.lang.Double: double doubleValue()>();

        virtualinvoke r0.<java.io.PrintStream: void println(double)>(d0);

        return;
    }

    static void <clinit>()
    {
        com.opengamma.util.money.Currency $r0;

        <com.opengamma.analytics.example.curveconstruction.CashExample: double y> = 0.02;

        <com.opengamma.analytics.example.curveconstruction.CashExample: java.lang.String yieldCurveName> = "Euro Yield Curve Fixed 2%";

        <com.opengamma.analytics.example.curveconstruction.CashExample: double r> = 0.03;

        <com.opengamma.analytics.example.curveconstruction.CashExample: double notional> = 10000.0;

        <com.opengamma.analytics.example.curveconstruction.CashExample: double t> = 1.0;

        $r0 = <com.opengamma.util.money.Currency: com.opengamma.util.money.Currency EUR>;

        <com.opengamma.analytics.example.curveconstruction.CashExample: com.opengamma.util.money.Currency ccy> = $r0;

        return;
    }
}
