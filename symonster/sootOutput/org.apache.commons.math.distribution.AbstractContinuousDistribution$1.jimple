class org.apache.commons.math.distribution.AbstractContinuousDistribution$1 extends java.lang.Object implements org.apache.commons.math.analysis.UnivariateRealFunction
{
    final double val$p;
    final org.apache.commons.math.distribution.AbstractContinuousDistribution this$0;

    void <init>(org.apache.commons.math.distribution.AbstractContinuousDistribution, double)
    {
        org.apache.commons.math.distribution.AbstractContinuousDistribution$1 r0;
        org.apache.commons.math.distribution.AbstractContinuousDistribution r1;
        double d0;

        r0 := @this: org.apache.commons.math.distribution.AbstractContinuousDistribution$1;

        r1 := @parameter0: org.apache.commons.math.distribution.AbstractContinuousDistribution;

        d0 := @parameter1: double;

        r0.<org.apache.commons.math.distribution.AbstractContinuousDistribution$1: org.apache.commons.math.distribution.AbstractContinuousDistribution this$0> = r1;

        r0.<org.apache.commons.math.distribution.AbstractContinuousDistribution$1: double val$p> = d0;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public double value(double) throws org.apache.commons.math.FunctionEvaluationException
    {
        org.apache.commons.math.distribution.AbstractContinuousDistribution$1 r0;
        double d0, $d1, $d2, $d3, d5;
        org.apache.commons.math.distribution.AbstractContinuousDistribution $r2;
        boolean $z0;
        org.apache.commons.math.FunctionEvaluationException $r3, $r9;
        java.lang.Object[] $r4, $r11, $r13;
        org.apache.commons.math.exception.util.LocalizedFormats $r5;
        java.lang.Double $r6, $r7;
        org.apache.commons.math.MathException $r8;
        org.apache.commons.math.exception.util.Localizable $r10, $r12;

        r0 := @this: org.apache.commons.math.distribution.AbstractContinuousDistribution$1;

        d0 := @parameter0: double;

     label1:
        $r2 = r0.<org.apache.commons.math.distribution.AbstractContinuousDistribution$1: org.apache.commons.math.distribution.AbstractContinuousDistribution this$0>;

        $d1 = virtualinvoke $r2.<org.apache.commons.math.distribution.AbstractContinuousDistribution: double cumulativeProbability(double)>(d0);

        $d2 = r0.<org.apache.commons.math.distribution.AbstractContinuousDistribution$1: double val$p>;

        d5 = $d1 - $d2;

     label2:
        goto label4;

     label3:
        $r8 := @caughtexception;

        $r9 = new org.apache.commons.math.FunctionEvaluationException;

        $r10 = virtualinvoke $r8.<org.apache.commons.math.MathException: org.apache.commons.math.exception.util.Localizable getSpecificPattern()>();

        $r11 = newarray (java.lang.Object)[2];

        $r12 = virtualinvoke $r8.<org.apache.commons.math.MathException: org.apache.commons.math.exception.util.Localizable getGeneralPattern()>();

        $r11[0] = $r12;

        $r13 = virtualinvoke $r8.<org.apache.commons.math.MathException: java.lang.Object[] getArguments()>();

        $r11[1] = $r13;

        specialinvoke $r9.<org.apache.commons.math.FunctionEvaluationException: void <init>(double,org.apache.commons.math.exception.util.Localizable,java.lang.Object[])>(d0, $r10, $r11);

        throw $r9;

     label4:
        $z0 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d5);

        if $z0 == 0 goto label5;

        $r3 = new org.apache.commons.math.FunctionEvaluationException;

        $r5 = <org.apache.commons.math.exception.util.LocalizedFormats: org.apache.commons.math.exception.util.LocalizedFormats CUMULATIVE_PROBABILITY_RETURNED_NAN>;

        $r4 = newarray (java.lang.Object)[2];

        $r6 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d0);

        $r4[0] = $r6;

        $d3 = r0.<org.apache.commons.math.distribution.AbstractContinuousDistribution$1: double val$p>;

        $r7 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d3);

        $r4[1] = $r7;

        specialinvoke $r3.<org.apache.commons.math.FunctionEvaluationException: void <init>(double,org.apache.commons.math.exception.util.Localizable,java.lang.Object[])>(d0, $r5, $r4);

        throw $r3;

     label5:
        return d5;

        catch org.apache.commons.math.MathException from label1 to label2 with label3;
    }
}
