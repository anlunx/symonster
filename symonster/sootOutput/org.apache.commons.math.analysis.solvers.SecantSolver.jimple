public class org.apache.commons.math.analysis.solvers.SecantSolver extends org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
{

    public void <init>(org.apache.commons.math.analysis.UnivariateRealFunction)
    {
        org.apache.commons.math.analysis.solvers.SecantSolver r0;
        org.apache.commons.math.analysis.UnivariateRealFunction r1;

        r0 := @this: org.apache.commons.math.analysis.solvers.SecantSolver;

        r1 := @parameter0: org.apache.commons.math.analysis.UnivariateRealFunction;

        specialinvoke r0.<org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl: void <init>(org.apache.commons.math.analysis.UnivariateRealFunction,int,double)>(r1, 100, 1.0E-6);

        return;
    }

    public void <init>()
    {
        org.apache.commons.math.analysis.solvers.SecantSolver r0;

        r0 := @this: org.apache.commons.math.analysis.solvers.SecantSolver;

        specialinvoke r0.<org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl: void <init>(int,double)>(100, 1.0E-6);

        return;
    }

    public double solve(double, double) throws org.apache.commons.math.ConvergenceException, org.apache.commons.math.FunctionEvaluationException
    {
        org.apache.commons.math.analysis.solvers.SecantSolver r0;
        double d0, d1, $d2;
        org.apache.commons.math.analysis.UnivariateRealFunction $r1;

        r0 := @this: org.apache.commons.math.analysis.solvers.SecantSolver;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        $r1 = r0.<org.apache.commons.math.analysis.solvers.SecantSolver: org.apache.commons.math.analysis.UnivariateRealFunction f>;

        $d2 = virtualinvoke r0.<org.apache.commons.math.analysis.solvers.SecantSolver: double solve(org.apache.commons.math.analysis.UnivariateRealFunction,double,double)>($r1, d0, d1);

        return $d2;
    }

    public double solve(double, double, double) throws org.apache.commons.math.ConvergenceException, org.apache.commons.math.FunctionEvaluationException
    {
        org.apache.commons.math.analysis.solvers.SecantSolver r0;
        double d0, d1, d2, $d3;
        org.apache.commons.math.analysis.UnivariateRealFunction $r1;

        r0 := @this: org.apache.commons.math.analysis.solvers.SecantSolver;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        d2 := @parameter2: double;

        $r1 = r0.<org.apache.commons.math.analysis.solvers.SecantSolver: org.apache.commons.math.analysis.UnivariateRealFunction f>;

        $d3 = virtualinvoke r0.<org.apache.commons.math.analysis.solvers.SecantSolver: double solve(org.apache.commons.math.analysis.UnivariateRealFunction,double,double,double)>($r1, d0, d1, d2);

        return $d3;
    }

    public double solve(int, org.apache.commons.math.analysis.UnivariateRealFunction, double, double, double) throws org.apache.commons.math.MaxIterationsExceededException, org.apache.commons.math.FunctionEvaluationException
    {
        org.apache.commons.math.analysis.solvers.SecantSolver r0;
        int i0;
        org.apache.commons.math.analysis.UnivariateRealFunction r1;
        double d0, d1, d2, $d3;

        r0 := @this: org.apache.commons.math.analysis.solvers.SecantSolver;

        i0 := @parameter0: int;

        r1 := @parameter1: org.apache.commons.math.analysis.UnivariateRealFunction;

        d0 := @parameter2: double;

        d1 := @parameter3: double;

        d2 := @parameter4: double;

        virtualinvoke r0.<org.apache.commons.math.analysis.solvers.SecantSolver: void setMaximalIterationCount(int)>(i0);

        $d3 = virtualinvoke r0.<org.apache.commons.math.analysis.solvers.SecantSolver: double solve(org.apache.commons.math.analysis.UnivariateRealFunction,double,double,double)>(r1, d0, d1, d2);

        return $d3;
    }

    public double solve(org.apache.commons.math.analysis.UnivariateRealFunction, double, double, double) throws org.apache.commons.math.MaxIterationsExceededException, org.apache.commons.math.FunctionEvaluationException
    {
        org.apache.commons.math.analysis.solvers.SecantSolver r0;
        org.apache.commons.math.analysis.UnivariateRealFunction r1;
        double d0, d1, d2, $d3;

        r0 := @this: org.apache.commons.math.analysis.solvers.SecantSolver;

        r1 := @parameter0: org.apache.commons.math.analysis.UnivariateRealFunction;

        d0 := @parameter1: double;

        d1 := @parameter2: double;

        d2 := @parameter3: double;

        $d3 = virtualinvoke r0.<org.apache.commons.math.analysis.solvers.SecantSolver: double solve(org.apache.commons.math.analysis.UnivariateRealFunction,double,double)>(r1, d0, d1);

        return $d3;
    }

    public double solve(int, org.apache.commons.math.analysis.UnivariateRealFunction, double, double) throws org.apache.commons.math.MaxIterationsExceededException, org.apache.commons.math.FunctionEvaluationException
    {
        org.apache.commons.math.analysis.solvers.SecantSolver r0;
        int i0;
        org.apache.commons.math.analysis.UnivariateRealFunction r1;
        double d0, d1, $d2;

        r0 := @this: org.apache.commons.math.analysis.solvers.SecantSolver;

        i0 := @parameter0: int;

        r1 := @parameter1: org.apache.commons.math.analysis.UnivariateRealFunction;

        d0 := @parameter2: double;

        d1 := @parameter3: double;

        virtualinvoke r0.<org.apache.commons.math.analysis.solvers.SecantSolver: void setMaximalIterationCount(int)>(i0);

        $d2 = virtualinvoke r0.<org.apache.commons.math.analysis.solvers.SecantSolver: double solve(org.apache.commons.math.analysis.UnivariateRealFunction,double,double)>(r1, d0, d1);

        return $d2;
    }

    public double solve(org.apache.commons.math.analysis.UnivariateRealFunction, double, double) throws org.apache.commons.math.MaxIterationsExceededException, org.apache.commons.math.FunctionEvaluationException
    {
        org.apache.commons.math.analysis.solvers.SecantSolver r0;
        org.apache.commons.math.analysis.UnivariateRealFunction r1;
        double d0, d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, d21, d22, d23, d24, d25, d26, d27, d28;
        byte $b0, $b3, $b4, $b5, $b6, $b7, $b8, $b10;
        int $i1, $i2, i9;
        org.apache.commons.math.MaxIterationsExceededException $r2;
        java.lang.Object[] $r3;
        org.apache.commons.math.exception.util.LocalizedFormats $r4;
        java.lang.Double $r5, $r6, $r7, $r8;
        java.lang.IllegalArgumentException $r9;
        boolean $z0, $z1;

        r0 := @this: org.apache.commons.math.analysis.solvers.SecantSolver;

        r1 := @parameter0: org.apache.commons.math.analysis.UnivariateRealFunction;

        d0 := @parameter1: double;

        d1 := @parameter2: double;

        virtualinvoke r0.<org.apache.commons.math.analysis.solvers.SecantSolver: void clearResult()>();

        virtualinvoke r0.<org.apache.commons.math.analysis.solvers.SecantSolver: void verifyInterval(double,double)>(d0, d1);

        d21 = d0;

        d22 = d1;

        d23 = interfaceinvoke r1.<org.apache.commons.math.analysis.UnivariateRealFunction: double value(double)>(d0);

        d24 = interfaceinvoke r1.<org.apache.commons.math.analysis.UnivariateRealFunction: double value(double)>(d1);

        $d2 = d23 * d24;

        $b0 = $d2 cmpl 0.0;

        if $b0 < 0 goto label01;

        $r4 = <org.apache.commons.math.exception.util.LocalizedFormats: org.apache.commons.math.exception.util.LocalizedFormats SAME_SIGN_AT_ENDPOINTS>;

        $r3 = newarray (java.lang.Object)[4];

        $r5 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d0);

        $r3[0] = $r5;

        $r6 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d1);

        $r3[1] = $r6;

        $r7 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d23);

        $r3[2] = $r7;

        $r8 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d24);

        $r3[3] = $r8;

        $r9 = staticinvoke <org.apache.commons.math.MathRuntimeException: java.lang.IllegalArgumentException createIllegalArgumentException(org.apache.commons.math.exception.util.Localizable,java.lang.Object[])>($r4, $r3);

        throw $r9;

     label01:
        d25 = d0;

        d26 = d23;

        d27 = d0 - d1;

        i9 = 0;

     label02:
        $i1 = r0.<org.apache.commons.math.analysis.solvers.SecantSolver: int maximalIterationCount>;

        if i9 >= $i1 goto label13;

        $d3 = staticinvoke <org.apache.commons.math.util.FastMath: double abs(double)>(d26);

        $d4 = staticinvoke <org.apache.commons.math.util.FastMath: double abs(double)>(d24);

        $b3 = $d3 cmpg $d4;

        if $b3 >= 0 goto label03;

        d21 = d22;

        d22 = d25;

        d25 = d21;

        d23 = d24;

        d24 = d26;

        d26 = d23;

     label03:
        $d5 = staticinvoke <org.apache.commons.math.util.FastMath: double abs(double)>(d24);

        $d6 = r0.<org.apache.commons.math.analysis.solvers.SecantSolver: double functionValueAccuracy>;

        $b4 = $d5 cmpg $d6;

        if $b4 > 0 goto label04;

        virtualinvoke r0.<org.apache.commons.math.analysis.solvers.SecantSolver: void setResult(double,int)>(d22, i9);

        $d20 = r0.<org.apache.commons.math.analysis.solvers.SecantSolver: double result>;

        return $d20;

     label04:
        $d7 = staticinvoke <org.apache.commons.math.util.FastMath: double abs(double)>(d27);

        $d8 = r0.<org.apache.commons.math.analysis.solvers.SecantSolver: double relativeAccuracy>;

        $d9 = staticinvoke <org.apache.commons.math.util.FastMath: double abs(double)>(d22);

        $d11 = $d8 * $d9;

        $d10 = r0.<org.apache.commons.math.analysis.solvers.SecantSolver: double absoluteAccuracy>;

        $d12 = staticinvoke <org.apache.commons.math.util.FastMath: double max(double,double)>($d11, $d10);

        $b5 = $d7 cmpg $d12;

        if $b5 >= 0 goto label05;

        virtualinvoke r0.<org.apache.commons.math.analysis.solvers.SecantSolver: void setResult(double,int)>(d22, i9);

        $d19 = r0.<org.apache.commons.math.analysis.solvers.SecantSolver: double result>;

        return $d19;

     label05:
        $d13 = staticinvoke <org.apache.commons.math.util.FastMath: double abs(double)>(d24);

        $d14 = staticinvoke <org.apache.commons.math.util.FastMath: double abs(double)>(d23);

        $b6 = $d13 cmpl $d14;

        if $b6 <= 0 goto label06;

        d28 = 0.5 * d27;

        goto label07;

     label06:
        $d17 = d21 - d22;

        $d15 = d23 / d24;

        $d16 = 1.0 - $d15;

        d28 = $d17 / $d16;

        $d18 = d28 / d27;

        $b7 = $d18 cmpl 1.0;

        if $b7 <= 0 goto label07;

        d28 = 0.5 * d27;

     label07:
        d21 = d22;

        d23 = d24;

        d22 = d22 + d28;

        d24 = interfaceinvoke r1.<org.apache.commons.math.analysis.UnivariateRealFunction: double value(double)>(d22);

        $b10 = d24 cmpl 0.0;

        if $b10 <= 0 goto label08;

        $z0 = 1;

        goto label09;

     label08:
        $z0 = 0;

     label09:
        $b8 = d26 cmpl 0.0;

        if $b8 <= 0 goto label10;

        $z1 = 1;

        goto label11;

     label10:
        $z1 = 0;

     label11:
        if $z0 != $z1 goto label12;

        d25 = d21;

        d26 = d23;

     label12:
        d27 = d25 - d22;

        i9 = i9 + 1;

        goto label02;

     label13:
        $r2 = new org.apache.commons.math.MaxIterationsExceededException;

        $i2 = r0.<org.apache.commons.math.analysis.solvers.SecantSolver: int maximalIterationCount>;

        specialinvoke $r2.<org.apache.commons.math.MaxIterationsExceededException: void <init>(int)>($i2);

        throw $r2;
    }
}
