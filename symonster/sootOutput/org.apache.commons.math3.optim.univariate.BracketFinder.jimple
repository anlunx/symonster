public class org.apache.commons.math3.optim.univariate.BracketFinder extends java.lang.Object
{
    private static final double EPS_MIN;
    private static final double GOLD;
    private final double growLimit;
    private final org.apache.commons.math3.util.Incrementor evaluations;
    private double lo;
    private double hi;
    private double mid;
    private double fLo;
    private double fHi;
    private double fMid;

    public void <init>()
    {
        org.apache.commons.math3.optim.univariate.BracketFinder r0;

        r0 := @this: org.apache.commons.math3.optim.univariate.BracketFinder;

        specialinvoke r0.<org.apache.commons.math3.optim.univariate.BracketFinder: void <init>(double,int)>(100.0, 50);

        return;
    }

    public void <init>(double, int)
    {
        org.apache.commons.math3.optim.univariate.BracketFinder r0;
        double d0;
        int i0;
        org.apache.commons.math3.util.Incrementor $r1, $r2;
        byte $b1;
        org.apache.commons.math3.exception.NotStrictlyPositiveException $r3, $r5;
        java.lang.Integer $r4;
        java.lang.Double $r6;

        r0 := @this: org.apache.commons.math3.optim.univariate.BracketFinder;

        d0 := @parameter0: double;

        i0 := @parameter1: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new org.apache.commons.math3.util.Incrementor;

        specialinvoke $r1.<org.apache.commons.math3.util.Incrementor: void <init>()>();

        r0.<org.apache.commons.math3.optim.univariate.BracketFinder: org.apache.commons.math3.util.Incrementor evaluations> = $r1;

        $b1 = d0 cmpg 0.0;

        if $b1 > 0 goto label1;

        $r5 = new org.apache.commons.math3.exception.NotStrictlyPositiveException;

        $r6 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d0);

        specialinvoke $r5.<org.apache.commons.math3.exception.NotStrictlyPositiveException: void <init>(java.lang.Number)>($r6);

        throw $r5;

     label1:
        if i0 > 0 goto label2;

        $r3 = new org.apache.commons.math3.exception.NotStrictlyPositiveException;

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        specialinvoke $r3.<org.apache.commons.math3.exception.NotStrictlyPositiveException: void <init>(java.lang.Number)>($r4);

        throw $r3;

     label2:
        r0.<org.apache.commons.math3.optim.univariate.BracketFinder: double growLimit> = d0;

        $r2 = r0.<org.apache.commons.math3.optim.univariate.BracketFinder: org.apache.commons.math3.util.Incrementor evaluations>;

        virtualinvoke $r2.<org.apache.commons.math3.util.Incrementor: void setMaximalCount(int)>(i0);

        return;
    }

    public void search(org.apache.commons.math3.analysis.UnivariateFunction, org.apache.commons.math3.optim.nonlinear.scalar.GoalType, double, double)
    {
        org.apache.commons.math3.optim.univariate.BracketFinder r0;
        org.apache.commons.math3.analysis.UnivariateFunction r1;
        org.apache.commons.math3.optim.nonlinear.scalar.GoalType r2, $r4;
        boolean z0, $z1;
        double d0, d1, d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21, $d22, $d23, $d24, $d25, $d26, $d27, $d28, $d29, $d30, $d31, $d32, $d33, $d34, d35, d36, d37, d38, d39, d40, $d41, $d42, d43, d44, d45, $d46, d47, d48, d49, $d50, $d51, d52, d53;
        org.apache.commons.math3.util.Incrementor $r3;
        byte $b0, $b1, $b2, $b3, $b4, $b5, $b6, $b7, $b8, $b9, $b10, $b11, $b12, $b13, $b14;

        r0 := @this: org.apache.commons.math3.optim.univariate.BracketFinder;

        r1 := @parameter0: org.apache.commons.math3.analysis.UnivariateFunction;

        r2 := @parameter1: org.apache.commons.math3.optim.nonlinear.scalar.GoalType;

        d35 := @parameter2: double;

        d36 := @parameter3: double;

        $r3 = r0.<org.apache.commons.math3.optim.univariate.BracketFinder: org.apache.commons.math3.util.Incrementor evaluations>;

        virtualinvoke $r3.<org.apache.commons.math3.util.Incrementor: void resetCount()>();

        $r4 = <org.apache.commons.math3.optim.nonlinear.scalar.GoalType: org.apache.commons.math3.optim.nonlinear.scalar.GoalType MINIMIZE>;

        if r2 != $r4 goto label01;

        $z1 = 1;

        goto label02;

     label01:
        $z1 = 0;

     label02:
        z0 = $z1;

        d37 = specialinvoke r0.<org.apache.commons.math3.optim.univariate.BracketFinder: double eval(org.apache.commons.math3.analysis.UnivariateFunction,double)>(r1, d35);

        d38 = specialinvoke r0.<org.apache.commons.math3.optim.univariate.BracketFinder: double eval(org.apache.commons.math3.analysis.UnivariateFunction,double)>(r1, d36);

        if $z1 == 0 goto label03;

        $b13 = d37 cmpg d38;

        if $b13 >= 0 goto label05;

        goto label04;

     label03:
        $b0 = d37 cmpl d38;

        if $b0 <= 0 goto label05;

     label04:
        d39 = d35;

        d35 = d36;

        d36 = d39;

        d40 = d37;

        d37 = d38;

        d38 = d40;

     label05:
        $d41 = d36 - d35;

        $d42 = 1.618034 * $d41;

        d43 = d36 + $d42;

        d44 = specialinvoke r0.<org.apache.commons.math3.optim.univariate.BracketFinder: double eval(org.apache.commons.math3.analysis.UnivariateFunction,double)>(r1, d43);

     label06:
        if z0 == 0 goto label07;

        $b12 = d44 cmpg d38;

        if $b12 >= 0 goto label23;

        goto label08;

     label07:
        $b1 = d44 cmpl d38;

        if $b1 <= 0 goto label23;

     label08:
        $d7 = d36 - d35;

        $d6 = d38 - d44;

        d45 = $d7 * $d6;

        $d9 = d36 - d43;

        $d8 = d38 - d37;

        d0 = $d9 * $d8;

        d1 = d0 - d45;

        $d10 = staticinvoke <org.apache.commons.math3.util.FastMath: double abs(double)>(d1);

        $b2 = $d10 cmpg 1.0E-21;

        if $b2 >= 0 goto label09;

        $d46 = 2.0E-21;

        goto label10;

     label09:
        $d46 = 2.0 * d1;

     label10:
        $d11 = d36 - d43;

        $d14 = $d11 * d0;

        $d12 = d36 - d35;

        $d13 = $d12 * d45;

        $d15 = $d14 - $d13;

        $d16 = $d15 / $d46;

        d47 = d36 - $d16;

        $d18 = r0.<org.apache.commons.math3.optim.univariate.BracketFinder: double growLimit>;

        $d17 = d43 - d36;

        $d19 = $d18 * $d17;

        d3 = d36 + $d19;

        $d21 = d47 - d43;

        $d20 = d36 - d47;

        $d22 = $d21 * $d20;

        $b3 = $d22 cmpl 0.0;

        if $b3 <= 0 goto label17;

        d48 = specialinvoke r0.<org.apache.commons.math3.optim.univariate.BracketFinder: double eval(org.apache.commons.math3.analysis.UnivariateFunction,double)>(r1, d47);

        if z0 == 0 goto label11;

        $b11 = d48 cmpg d44;

        if $b11 >= 0 goto label13;

        goto label12;

     label11:
        $b8 = d48 cmpl d44;

        if $b8 <= 0 goto label13;

     label12:
        d35 = d36;

        d36 = d47;

        d37 = d38;

        d38 = d48;

        goto label23;

     label13:
        if z0 == 0 goto label14;

        $b10 = d48 cmpl d38;

        if $b10 <= 0 goto label16;

        goto label15;

     label14:
        $b9 = d48 cmpg d38;

        if $b9 >= 0 goto label16;

     label15:
        d43 = d47;

        d44 = d48;

        goto label23;

     label16:
        $d33 = d43 - d36;

        $d34 = 1.618034 * $d33;

        d47 = d43 + $d34;

        d49 = specialinvoke r0.<org.apache.commons.math3.optim.univariate.BracketFinder: double eval(org.apache.commons.math3.analysis.UnivariateFunction,double)>(r1, d47);

        goto label22;

     label17:
        $d24 = d47 - d3;

        $d23 = d3 - d43;

        $d25 = $d24 * $d23;

        $b4 = $d25 cmpl 0.0;

        if $b4 < 0 goto label18;

        d47 = d3;

        d49 = specialinvoke r0.<org.apache.commons.math3.optim.univariate.BracketFinder: double eval(org.apache.commons.math3.analysis.UnivariateFunction,double)>(r1, d3);

        goto label22;

     label18:
        $d27 = d47 - d3;

        $d26 = d43 - d47;

        $d28 = $d27 * $d26;

        $b5 = $d28 cmpl 0.0;

        if $b5 <= 0 goto label21;

        d49 = specialinvoke r0.<org.apache.commons.math3.optim.univariate.BracketFinder: double eval(org.apache.commons.math3.analysis.UnivariateFunction,double)>(r1, d47);

        if z0 == 0 goto label19;

        $b7 = d49 cmpg d44;

        if $b7 >= 0 goto label22;

        goto label20;

     label19:
        $b6 = d49 cmpl d44;

        if $b6 <= 0 goto label22;

     label20:
        d36 = d43;

        d43 = d47;

        $d31 = d47 - d36;

        $d32 = 1.618034 * $d31;

        d47 = d47 + $d32;

        d38 = d44;

        d44 = d49;

        d49 = specialinvoke r0.<org.apache.commons.math3.optim.univariate.BracketFinder: double eval(org.apache.commons.math3.analysis.UnivariateFunction,double)>(r1, d47);

        goto label22;

     label21:
        $d29 = d43 - d36;

        $d30 = 1.618034 * $d29;

        d47 = d43 + $d30;

        d49 = specialinvoke r0.<org.apache.commons.math3.optim.univariate.BracketFinder: double eval(org.apache.commons.math3.analysis.UnivariateFunction,double)>(r1, d47);

     label22:
        d35 = d36;

        d37 = d38;

        d36 = d43;

        d38 = d44;

        d43 = d47;

        d44 = d49;

        goto label06;

     label23:
        r0.<org.apache.commons.math3.optim.univariate.BracketFinder: double lo> = d35;

        r0.<org.apache.commons.math3.optim.univariate.BracketFinder: double fLo> = d37;

        r0.<org.apache.commons.math3.optim.univariate.BracketFinder: double mid> = d36;

        r0.<org.apache.commons.math3.optim.univariate.BracketFinder: double fMid> = d38;

        r0.<org.apache.commons.math3.optim.univariate.BracketFinder: double hi> = d43;

        r0.<org.apache.commons.math3.optim.univariate.BracketFinder: double fHi> = d44;

        $d50 = r0.<org.apache.commons.math3.optim.univariate.BracketFinder: double lo>;

        $d51 = r0.<org.apache.commons.math3.optim.univariate.BracketFinder: double hi>;

        $b14 = $d50 cmpl $d51;

        if $b14 <= 0 goto label24;

        d52 = r0.<org.apache.commons.math3.optim.univariate.BracketFinder: double lo>;

        $d4 = r0.<org.apache.commons.math3.optim.univariate.BracketFinder: double hi>;

        r0.<org.apache.commons.math3.optim.univariate.BracketFinder: double lo> = $d4;

        r0.<org.apache.commons.math3.optim.univariate.BracketFinder: double hi> = d52;

        d53 = r0.<org.apache.commons.math3.optim.univariate.BracketFinder: double fLo>;

        $d5 = r0.<org.apache.commons.math3.optim.univariate.BracketFinder: double fHi>;

        r0.<org.apache.commons.math3.optim.univariate.BracketFinder: double fLo> = $d5;

        r0.<org.apache.commons.math3.optim.univariate.BracketFinder: double fHi> = d53;

     label24:
        return;
    }

    public int getMaxEvaluations()
    {
        org.apache.commons.math3.optim.univariate.BracketFinder r0;
        org.apache.commons.math3.util.Incrementor $r1;
        int $i0;

        r0 := @this: org.apache.commons.math3.optim.univariate.BracketFinder;

        $r1 = r0.<org.apache.commons.math3.optim.univariate.BracketFinder: org.apache.commons.math3.util.Incrementor evaluations>;

        $i0 = virtualinvoke $r1.<org.apache.commons.math3.util.Incrementor: int getMaximalCount()>();

        return $i0;
    }

    public int getEvaluations()
    {
        org.apache.commons.math3.optim.univariate.BracketFinder r0;
        org.apache.commons.math3.util.Incrementor $r1;
        int $i0;

        r0 := @this: org.apache.commons.math3.optim.univariate.BracketFinder;

        $r1 = r0.<org.apache.commons.math3.optim.univariate.BracketFinder: org.apache.commons.math3.util.Incrementor evaluations>;

        $i0 = virtualinvoke $r1.<org.apache.commons.math3.util.Incrementor: int getCount()>();

        return $i0;
    }

    public double getLo()
    {
        org.apache.commons.math3.optim.univariate.BracketFinder r0;
        double $d0;

        r0 := @this: org.apache.commons.math3.optim.univariate.BracketFinder;

        $d0 = r0.<org.apache.commons.math3.optim.univariate.BracketFinder: double lo>;

        return $d0;
    }

    public double getFLo()
    {
        org.apache.commons.math3.optim.univariate.BracketFinder r0;
        double $d0;

        r0 := @this: org.apache.commons.math3.optim.univariate.BracketFinder;

        $d0 = r0.<org.apache.commons.math3.optim.univariate.BracketFinder: double fLo>;

        return $d0;
    }

    public double getHi()
    {
        org.apache.commons.math3.optim.univariate.BracketFinder r0;
        double $d0;

        r0 := @this: org.apache.commons.math3.optim.univariate.BracketFinder;

        $d0 = r0.<org.apache.commons.math3.optim.univariate.BracketFinder: double hi>;

        return $d0;
    }

    public double getFHi()
    {
        org.apache.commons.math3.optim.univariate.BracketFinder r0;
        double $d0;

        r0 := @this: org.apache.commons.math3.optim.univariate.BracketFinder;

        $d0 = r0.<org.apache.commons.math3.optim.univariate.BracketFinder: double fHi>;

        return $d0;
    }

    public double getMid()
    {
        org.apache.commons.math3.optim.univariate.BracketFinder r0;
        double $d0;

        r0 := @this: org.apache.commons.math3.optim.univariate.BracketFinder;

        $d0 = r0.<org.apache.commons.math3.optim.univariate.BracketFinder: double mid>;

        return $d0;
    }

    public double getFMid()
    {
        org.apache.commons.math3.optim.univariate.BracketFinder r0;
        double $d0;

        r0 := @this: org.apache.commons.math3.optim.univariate.BracketFinder;

        $d0 = r0.<org.apache.commons.math3.optim.univariate.BracketFinder: double fMid>;

        return $d0;
    }

    private double eval(org.apache.commons.math3.analysis.UnivariateFunction, double)
    {
        org.apache.commons.math3.optim.univariate.BracketFinder r0;
        org.apache.commons.math3.analysis.UnivariateFunction r1;
        double d0, $d1;
        org.apache.commons.math3.util.Incrementor $r3;
        org.apache.commons.math3.exception.MaxCountExceededException $r4;
        org.apache.commons.math3.exception.TooManyEvaluationsException $r5;
        java.lang.Number $r6;

        r0 := @this: org.apache.commons.math3.optim.univariate.BracketFinder;

        r1 := @parameter0: org.apache.commons.math3.analysis.UnivariateFunction;

        d0 := @parameter1: double;

     label1:
        $r3 = r0.<org.apache.commons.math3.optim.univariate.BracketFinder: org.apache.commons.math3.util.Incrementor evaluations>;

        virtualinvoke $r3.<org.apache.commons.math3.util.Incrementor: void incrementCount()>();

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

        $r5 = new org.apache.commons.math3.exception.TooManyEvaluationsException;

        $r6 = virtualinvoke $r4.<org.apache.commons.math3.exception.MaxCountExceededException: java.lang.Number getMax()>();

        specialinvoke $r5.<org.apache.commons.math3.exception.TooManyEvaluationsException: void <init>(java.lang.Number)>($r6);

        throw $r5;

     label4:
        $d1 = interfaceinvoke r1.<org.apache.commons.math3.analysis.UnivariateFunction: double value(double)>(d0);

        return $d1;

        catch org.apache.commons.math3.exception.MaxCountExceededException from label1 to label2 with label3;
    }

    public static void <clinit>()
    {
        <org.apache.commons.math3.optim.univariate.BracketFinder: double GOLD> = 1.618034;

        <org.apache.commons.math3.optim.univariate.BracketFinder: double EPS_MIN> = 1.0E-21;

        return;
    }
}
