public class org.apache.commons.math.DuplicateSampleAbscissaException extends org.apache.commons.math.MathException
{
    private static final long serialVersionUID;

    public void <init>(double, int, int)
    {
        org.apache.commons.math.DuplicateSampleAbscissaException r0;
        double d0;
        int i0, i1;
        java.lang.Object[] $r1;
        org.apache.commons.math.exception.util.LocalizedFormats $r2;
        java.lang.Double $r3;
        java.lang.Integer $r4, $r5;

        r0 := @this: org.apache.commons.math.DuplicateSampleAbscissaException;

        d0 := @parameter0: double;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r2 = <org.apache.commons.math.exception.util.LocalizedFormats: org.apache.commons.math.exception.util.LocalizedFormats DUPLICATED_ABSCISSA>;

        $r1 = newarray (java.lang.Object)[3];

        $r3 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d0);

        $r1[0] = $r3;

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r1[1] = $r4;

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        $r1[2] = $r5;

        specialinvoke r0.<org.apache.commons.math.MathException: void <init>(org.apache.commons.math.exception.util.Localizable,java.lang.Object[])>($r2, $r1);

        return;
    }

    public double getDuplicateAbscissa()
    {
        org.apache.commons.math.DuplicateSampleAbscissaException r0;
        java.lang.Object[] $r1;
        java.lang.Object $r2;
        java.lang.Double $r3;
        double $d0;

        r0 := @this: org.apache.commons.math.DuplicateSampleAbscissaException;

        $r1 = virtualinvoke r0.<org.apache.commons.math.DuplicateSampleAbscissaException: java.lang.Object[] getArguments()>();

        $r2 = $r1[0];

        $r3 = (java.lang.Double) $r2;

        $d0 = virtualinvoke $r3.<java.lang.Double: double doubleValue()>();

        return $d0;
    }

    public static void <clinit>()
    {
        <org.apache.commons.math.DuplicateSampleAbscissaException: long serialVersionUID> = -2271007547170169872L;

        return;
    }
}
