class com.opengamma.analytics.financial.model.volatility.smile.fitting.SABRConjugateGradientLeastSquareFitter$1 extends com.opengamma.analytics.math.function.Function1D
{
    final com.opengamma.analytics.math.minimization.UncoupledParameterTransforms val$transforms;
    final int val$n;
    final com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackFunctionData[] val$data;
    final com.opengamma.analytics.financial.model.option.pricing.analytic.formula.EuropeanVanillaOption[] val$options;
    final double val$forward;
    final double[] val$errors;
    final com.opengamma.analytics.financial.model.volatility.smile.fitting.SABRConjugateGradientLeastSquareFitter this$0;

    void <init>(com.opengamma.analytics.financial.model.volatility.smile.fitting.SABRConjugateGradientLeastSquareFitter, com.opengamma.analytics.math.minimization.UncoupledParameterTransforms, int, com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackFunctionData[], com.opengamma.analytics.financial.model.option.pricing.analytic.formula.EuropeanVanillaOption[], double, double[])
    {
        com.opengamma.analytics.financial.model.volatility.smile.fitting.SABRConjugateGradientLeastSquareFitter$1 r0;
        com.opengamma.analytics.financial.model.volatility.smile.fitting.SABRConjugateGradientLeastSquareFitter r1;
        com.opengamma.analytics.math.minimization.UncoupledParameterTransforms r2;
        int i0;
        com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackFunctionData[] r3;
        com.opengamma.analytics.financial.model.option.pricing.analytic.formula.EuropeanVanillaOption[] r4;
        double d0;
        double[] r5;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.smile.fitting.SABRConjugateGradientLeastSquareFitter$1;

        r1 := @parameter0: com.opengamma.analytics.financial.model.volatility.smile.fitting.SABRConjugateGradientLeastSquareFitter;

        r2 := @parameter1: com.opengamma.analytics.math.minimization.UncoupledParameterTransforms;

        i0 := @parameter2: int;

        r3 := @parameter3: com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackFunctionData[];

        r4 := @parameter4: com.opengamma.analytics.financial.model.option.pricing.analytic.formula.EuropeanVanillaOption[];

        d0 := @parameter5: double;

        r5 := @parameter6: double[];

        r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.SABRConjugateGradientLeastSquareFitter$1: com.opengamma.analytics.financial.model.volatility.smile.fitting.SABRConjugateGradientLeastSquareFitter this$0> = r1;

        r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.SABRConjugateGradientLeastSquareFitter$1: com.opengamma.analytics.math.minimization.UncoupledParameterTransforms val$transforms> = r2;

        r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.SABRConjugateGradientLeastSquareFitter$1: int val$n> = i0;

        r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.SABRConjugateGradientLeastSquareFitter$1: com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackFunctionData[] val$data> = r3;

        r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.SABRConjugateGradientLeastSquareFitter$1: com.opengamma.analytics.financial.model.option.pricing.analytic.formula.EuropeanVanillaOption[] val$options> = r4;

        r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.SABRConjugateGradientLeastSquareFitter$1: double val$forward> = d0;

        r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.SABRConjugateGradientLeastSquareFitter$1: double[] val$errors> = r5;

        specialinvoke r0.<com.opengamma.analytics.math.function.Function1D: void <init>()>();

        return;
    }

    public java.lang.Double evaluate(com.opengamma.analytics.math.matrix.DoubleMatrix1D)
    {
        com.opengamma.analytics.financial.model.volatility.smile.fitting.SABRConjugateGradientLeastSquareFitter$1 r0;
        com.opengamma.analytics.math.matrix.DoubleMatrix1D r1, r2;
        double d0, d1, d2, d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, d11;
        com.opengamma.analytics.math.minimization.UncoupledParameterTransforms $r4;
        int[] $r5, $r7, $r9, $r11;
        java.lang.Double $r6, $r8, $r10, $r12, $r14, $r23;
        com.opengamma.analytics.financial.model.volatility.smile.function.SABRFormulaData $r13;
        int $i0, i1;
        com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackFunctionData[] $r15;
        com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackFunctionData $r16;
        com.opengamma.analytics.financial.model.volatility.smile.fitting.SABRConjugateGradientLeastSquareFitter $r17;
        com.opengamma.analytics.financial.model.volatility.smile.function.VolatilityFunctionProvider $r18;
        com.opengamma.analytics.financial.model.option.pricing.analytic.formula.EuropeanVanillaOption[] $r19;
        com.opengamma.analytics.financial.model.option.pricing.analytic.formula.EuropeanVanillaOption $r20;
        com.opengamma.analytics.math.function.Function1D $r21;
        java.lang.Object $r22;
        double[] $r24;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.smile.fitting.SABRConjugateGradientLeastSquareFitter$1;

        r1 := @parameter0: com.opengamma.analytics.math.matrix.DoubleMatrix1D;

        $r4 = r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.SABRConjugateGradientLeastSquareFitter$1: com.opengamma.analytics.math.minimization.UncoupledParameterTransforms val$transforms>;

        r2 = virtualinvoke $r4.<com.opengamma.analytics.math.minimization.UncoupledParameterTransforms: com.opengamma.analytics.math.matrix.DoubleMatrix1D inverseTransform(com.opengamma.analytics.math.matrix.DoubleMatrix1D)>(r1);

        $r5 = newarray (int)[1];

        $r5[0] = 0;

        $r6 = virtualinvoke r2.<com.opengamma.analytics.math.matrix.DoubleMatrix1D: java.lang.Double getEntry(int[])>($r5);

        d0 = virtualinvoke $r6.<java.lang.Double: double doubleValue()>();

        $r7 = newarray (int)[1];

        $r7[0] = 1;

        $r8 = virtualinvoke r2.<com.opengamma.analytics.math.matrix.DoubleMatrix1D: java.lang.Double getEntry(int[])>($r7);

        d1 = virtualinvoke $r8.<java.lang.Double: double doubleValue()>();

        $r9 = newarray (int)[1];

        $r9[0] = 2;

        $r10 = virtualinvoke r2.<com.opengamma.analytics.math.matrix.DoubleMatrix1D: java.lang.Double getEntry(int[])>($r9);

        d2 = virtualinvoke $r10.<java.lang.Double: double doubleValue()>();

        $r11 = newarray (int)[1];

        $r11[0] = 3;

        $r12 = virtualinvoke r2.<com.opengamma.analytics.math.matrix.DoubleMatrix1D: java.lang.Double getEntry(int[])>($r11);

        d3 = virtualinvoke $r12.<java.lang.Double: double doubleValue()>();

        d11 = 0.0;

        $r13 = new com.opengamma.analytics.financial.model.volatility.smile.function.SABRFormulaData;

        specialinvoke $r13.<com.opengamma.analytics.financial.model.volatility.smile.function.SABRFormulaData: void <init>(double,double,double,double)>(d0, d1, d3, d2);

        i1 = 0;

     label1:
        $i0 = r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.SABRConjugateGradientLeastSquareFitter$1: int val$n>;

        if i1 >= $i0 goto label2;

        $r15 = r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.SABRConjugateGradientLeastSquareFitter$1: com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackFunctionData[] val$data>;

        $r16 = $r15[i1];

        $d4 = virtualinvoke $r16.<com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackFunctionData: double getBlackVolatility()>();

        $r17 = r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.SABRConjugateGradientLeastSquareFitter$1: com.opengamma.analytics.financial.model.volatility.smile.fitting.SABRConjugateGradientLeastSquareFitter this$0>;

        $r18 = staticinvoke <com.opengamma.analytics.financial.model.volatility.smile.fitting.SABRConjugateGradientLeastSquareFitter: com.opengamma.analytics.financial.model.volatility.smile.function.VolatilityFunctionProvider access$000(com.opengamma.analytics.financial.model.volatility.smile.fitting.SABRConjugateGradientLeastSquareFitter)>($r17);

        $r19 = r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.SABRConjugateGradientLeastSquareFitter$1: com.opengamma.analytics.financial.model.option.pricing.analytic.formula.EuropeanVanillaOption[] val$options>;

        $r20 = $r19[i1];

        $d5 = r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.SABRConjugateGradientLeastSquareFitter$1: double val$forward>;

        $r21 = virtualinvoke $r18.<com.opengamma.analytics.financial.model.volatility.smile.function.VolatilityFunctionProvider: com.opengamma.analytics.math.function.Function1D getVolatilityFunction(com.opengamma.analytics.financial.model.option.pricing.analytic.formula.EuropeanVanillaOption,double)>($r20, $d5);

        $r22 = virtualinvoke $r21.<com.opengamma.analytics.math.function.Function1D: java.lang.Object evaluate(java.lang.Object)>($r13);

        $r23 = (java.lang.Double) $r22;

        $d6 = virtualinvoke $r23.<java.lang.Double: double doubleValue()>();

        $d8 = $d4 - $d6;

        $r24 = r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.SABRConjugateGradientLeastSquareFitter$1: double[] val$errors>;

        $d7 = $r24[i1];

        $d9 = $d8 / $d7;

        $d10 = staticinvoke <com.opengamma.analytics.math.FunctionUtils: double square(double)>($d9);

        d11 = d11 + $d10;

        i1 = i1 + 1;

        goto label1;

     label2:
        $r14 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d11);

        return $r14;
    }

    public volatile java.lang.Object evaluate(java.lang.Object)
    {
        com.opengamma.analytics.financial.model.volatility.smile.fitting.SABRConjugateGradientLeastSquareFitter$1 r0;
        java.lang.Object r1;
        com.opengamma.analytics.math.matrix.DoubleMatrix1D $r2;
        java.lang.Double $r3;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.smile.fitting.SABRConjugateGradientLeastSquareFitter$1;

        r1 := @parameter0: java.lang.Object;

        $r2 = (com.opengamma.analytics.math.matrix.DoubleMatrix1D) r1;

        $r3 = virtualinvoke r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.SABRConjugateGradientLeastSquareFitter$1: java.lang.Double evaluate(com.opengamma.analytics.math.matrix.DoubleMatrix1D)>($r2);

        return $r3;
    }
}
