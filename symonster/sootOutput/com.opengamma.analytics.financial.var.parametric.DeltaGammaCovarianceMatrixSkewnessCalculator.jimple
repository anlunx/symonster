public class com.opengamma.analytics.financial.var.parametric.DeltaGammaCovarianceMatrixSkewnessCalculator extends com.opengamma.analytics.math.function.Function1D
{
    private final com.opengamma.analytics.math.matrix.MatrixAlgebra _algebra;

    public void <init>(com.opengamma.analytics.math.matrix.MatrixAlgebra)
    {
        com.opengamma.analytics.financial.var.parametric.DeltaGammaCovarianceMatrixSkewnessCalculator r0;
        com.opengamma.analytics.math.matrix.MatrixAlgebra r1;

        r0 := @this: com.opengamma.analytics.financial.var.parametric.DeltaGammaCovarianceMatrixSkewnessCalculator;

        r1 := @parameter0: com.opengamma.analytics.math.matrix.MatrixAlgebra;

        specialinvoke r0.<com.opengamma.analytics.math.function.Function1D: void <init>()>();

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object)>(r1);

        r0.<com.opengamma.analytics.financial.var.parametric.DeltaGammaCovarianceMatrixSkewnessCalculator: com.opengamma.analytics.math.matrix.MatrixAlgebra _algebra> = r1;

        return;
    }

    public java.lang.Double evaluate(java.util.Map)
    {
        com.opengamma.analytics.financial.var.parametric.DeltaGammaCovarianceMatrixSkewnessCalculator r0;
        java.util.Map r1;
        com.opengamma.analytics.financial.var.parametric.ParametricVaRDataBundle r2, r3;
        com.opengamma.analytics.math.matrix.DoubleMatrix1D r4;
        com.opengamma.analytics.math.matrix.Matrix r5, r8, $r13, $r22, $r23, $r29;
        com.opengamma.analytics.math.matrix.DoubleMatrix2D r6, r7, $r18, $r26;
        double d0, d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9;
        java.lang.Integer $r9, $r11;
        java.lang.Object $r10, $r12;
        java.lang.Double $r14, $r30, $r32;
        int $i0, $i1, $i2;
        com.opengamma.analytics.math.matrix.MatrixAlgebra $r15, $r16, $r17, $r19, $r20, $r21, $r24, $r25, $r27, $r28;
        java.lang.IllegalArgumentException $r31;

        r0 := @this: com.opengamma.analytics.financial.var.parametric.DeltaGammaCovarianceMatrixSkewnessCalculator;

        r1 := @parameter0: java.util.Map;

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object,java.lang.String)>(r1, "data");

        $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        $r10 = interfaceinvoke r1.<java.util.Map: java.lang.Object get(java.lang.Object)>($r9);

        r2 = (com.opengamma.analytics.financial.var.parametric.ParametricVaRDataBundle) $r10;

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object,java.lang.String)>(r2, "first order data");

        $r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2);

        $r12 = interfaceinvoke r1.<java.util.Map: java.lang.Object get(java.lang.Object)>($r11);

        r3 = (com.opengamma.analytics.financial.var.parametric.ParametricVaRDataBundle) $r12;

        if r3 != null goto label1;

        $r32 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(0.0);

        return $r32;

     label1:
        $r13 = virtualinvoke r2.<com.opengamma.analytics.financial.var.parametric.ParametricVaRDataBundle: com.opengamma.analytics.math.matrix.Matrix getSensitivities()>();

        r4 = (com.opengamma.analytics.math.matrix.DoubleMatrix1D) $r13;

        r5 = virtualinvoke r3.<com.opengamma.analytics.financial.var.parametric.ParametricVaRDataBundle: com.opengamma.analytics.math.matrix.Matrix getSensitivities()>();

        if r5 == null goto label2;

        $i0 = interfaceinvoke r5.<com.opengamma.analytics.math.matrix.Matrix: int getNumberOfElements()>();

        if $i0 != 0 goto label3;

     label2:
        $r14 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(0.0);

        return $r14;

     label3:
        r6 = (com.opengamma.analytics.math.matrix.DoubleMatrix2D) r5;

        r7 = virtualinvoke r2.<com.opengamma.analytics.financial.var.parametric.ParametricVaRDataBundle: com.opengamma.analytics.math.matrix.DoubleMatrix2D getCovarianceMatrix()>();

        $i1 = virtualinvoke r6.<com.opengamma.analytics.math.matrix.DoubleMatrix2D: int getNumberOfColumns()>();

        $i2 = virtualinvoke r7.<com.opengamma.analytics.math.matrix.DoubleMatrix2D: int getNumberOfColumns()>();

        if $i1 == $i2 goto label4;

        $r31 = new java.lang.IllegalArgumentException;

        specialinvoke $r31.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Gamma matrix and covariance matrix were incompatible sizes");

        throw $r31;

     label4:
        $r15 = r0.<com.opengamma.analytics.financial.var.parametric.DeltaGammaCovarianceMatrixSkewnessCalculator: com.opengamma.analytics.math.matrix.MatrixAlgebra _algebra>;

        r8 = virtualinvoke $r15.<com.opengamma.analytics.math.matrix.MatrixAlgebra: com.opengamma.analytics.math.matrix.Matrix multiply(com.opengamma.analytics.math.matrix.Matrix,com.opengamma.analytics.math.matrix.Matrix)>(r6, r7);

        $r17 = r0.<com.opengamma.analytics.financial.var.parametric.DeltaGammaCovarianceMatrixSkewnessCalculator: com.opengamma.analytics.math.matrix.MatrixAlgebra _algebra>;

        $r16 = r0.<com.opengamma.analytics.financial.var.parametric.DeltaGammaCovarianceMatrixSkewnessCalculator: com.opengamma.analytics.math.matrix.MatrixAlgebra _algebra>;

        $r18 = virtualinvoke $r16.<com.opengamma.analytics.math.matrix.MatrixAlgebra: com.opengamma.analytics.math.matrix.DoubleMatrix2D getPower(com.opengamma.analytics.math.matrix.Matrix,int)>(r8, 3);

        $d2 = virtualinvoke $r17.<com.opengamma.analytics.math.matrix.MatrixAlgebra: double getTrace(com.opengamma.analytics.math.matrix.Matrix)>($r18);

        $r20 = r0.<com.opengamma.analytics.financial.var.parametric.DeltaGammaCovarianceMatrixSkewnessCalculator: com.opengamma.analytics.math.matrix.MatrixAlgebra _algebra>;

        $r21 = r0.<com.opengamma.analytics.financial.var.parametric.DeltaGammaCovarianceMatrixSkewnessCalculator: com.opengamma.analytics.math.matrix.MatrixAlgebra _algebra>;

        $r19 = r0.<com.opengamma.analytics.financial.var.parametric.DeltaGammaCovarianceMatrixSkewnessCalculator: com.opengamma.analytics.math.matrix.MatrixAlgebra _algebra>;

        $r22 = virtualinvoke $r19.<com.opengamma.analytics.math.matrix.MatrixAlgebra: com.opengamma.analytics.math.matrix.Matrix multiply(com.opengamma.analytics.math.matrix.Matrix,com.opengamma.analytics.math.matrix.Matrix)>(r7, r8);

        $r23 = virtualinvoke $r21.<com.opengamma.analytics.math.matrix.MatrixAlgebra: com.opengamma.analytics.math.matrix.Matrix multiply(com.opengamma.analytics.math.matrix.Matrix,com.opengamma.analytics.math.matrix.Matrix)>($r22, r4);

        $d3 = virtualinvoke $r20.<com.opengamma.analytics.math.matrix.MatrixAlgebra: double getInnerProduct(com.opengamma.analytics.math.matrix.Matrix,com.opengamma.analytics.math.matrix.Matrix)>(r4, $r23);

        $d4 = 3.0 * $d3;

        d0 = $d2 + $d4;

        $r25 = r0.<com.opengamma.analytics.financial.var.parametric.DeltaGammaCovarianceMatrixSkewnessCalculator: com.opengamma.analytics.math.matrix.MatrixAlgebra _algebra>;

        $r24 = r0.<com.opengamma.analytics.financial.var.parametric.DeltaGammaCovarianceMatrixSkewnessCalculator: com.opengamma.analytics.math.matrix.MatrixAlgebra _algebra>;

        $r26 = virtualinvoke $r24.<com.opengamma.analytics.math.matrix.MatrixAlgebra: com.opengamma.analytics.math.matrix.DoubleMatrix2D getPower(com.opengamma.analytics.math.matrix.Matrix,int)>(r8, 2);

        $d5 = virtualinvoke $r25.<com.opengamma.analytics.math.matrix.MatrixAlgebra: double getTrace(com.opengamma.analytics.math.matrix.Matrix)>($r26);

        $d6 = 0.5 * $d5;

        $r28 = r0.<com.opengamma.analytics.financial.var.parametric.DeltaGammaCovarianceMatrixSkewnessCalculator: com.opengamma.analytics.math.matrix.MatrixAlgebra _algebra>;

        $r27 = r0.<com.opengamma.analytics.financial.var.parametric.DeltaGammaCovarianceMatrixSkewnessCalculator: com.opengamma.analytics.math.matrix.MatrixAlgebra _algebra>;

        $r29 = virtualinvoke $r27.<com.opengamma.analytics.math.matrix.MatrixAlgebra: com.opengamma.analytics.math.matrix.Matrix multiply(com.opengamma.analytics.math.matrix.Matrix,com.opengamma.analytics.math.matrix.Matrix)>(r7, r4);

        $d7 = virtualinvoke $r28.<com.opengamma.analytics.math.matrix.MatrixAlgebra: double getInnerProduct(com.opengamma.analytics.math.matrix.Matrix,com.opengamma.analytics.math.matrix.Matrix)>(r4, $r29);

        $d8 = $d6 + $d7;

        d1 = staticinvoke <java.lang.Math: double pow(double,double)>($d8, 1.5);

        $d9 = d0 / d1;

        $r30 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d9);

        return $r30;
    }

    public int hashCode()
    {
        com.opengamma.analytics.financial.var.parametric.DeltaGammaCovarianceMatrixSkewnessCalculator r0;
        com.opengamma.analytics.math.matrix.MatrixAlgebra $r1;
        int $i1, $i2, i4;

        r0 := @this: com.opengamma.analytics.financial.var.parametric.DeltaGammaCovarianceMatrixSkewnessCalculator;

        $i1 = 31 * 1;

        $r1 = r0.<com.opengamma.analytics.financial.var.parametric.DeltaGammaCovarianceMatrixSkewnessCalculator: com.opengamma.analytics.math.matrix.MatrixAlgebra _algebra>;

        $i2 = virtualinvoke $r1.<java.lang.Object: int hashCode()>();

        i4 = $i1 + $i2;

        return i4;
    }

    public boolean equals(java.lang.Object)
    {
        com.opengamma.analytics.financial.var.parametric.DeltaGammaCovarianceMatrixSkewnessCalculator r0, r2;
        java.lang.Object r1;
        java.lang.Class $r3, $r4;
        com.opengamma.analytics.math.matrix.MatrixAlgebra $r5, $r6;
        boolean $z0;

        r0 := @this: com.opengamma.analytics.financial.var.parametric.DeltaGammaCovarianceMatrixSkewnessCalculator;

        r1 := @parameter0: java.lang.Object;

        if r0 != r1 goto label1;

        return 1;

     label1:
        if r1 != null goto label2;

        return 0;

     label2:
        $r3 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r4 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        if $r3 == $r4 goto label3;

        return 0;

     label3:
        r2 = (com.opengamma.analytics.financial.var.parametric.DeltaGammaCovarianceMatrixSkewnessCalculator) r1;

        $r6 = r0.<com.opengamma.analytics.financial.var.parametric.DeltaGammaCovarianceMatrixSkewnessCalculator: com.opengamma.analytics.math.matrix.MatrixAlgebra _algebra>;

        $r5 = r2.<com.opengamma.analytics.financial.var.parametric.DeltaGammaCovarianceMatrixSkewnessCalculator: com.opengamma.analytics.math.matrix.MatrixAlgebra _algebra>;

        $z0 = staticinvoke <org.apache.commons.lang.ObjectUtils: boolean equals(java.lang.Object,java.lang.Object)>($r6, $r5);

        return $z0;
    }

    public volatile java.lang.Object evaluate(java.lang.Object)
    {
        com.opengamma.analytics.financial.var.parametric.DeltaGammaCovarianceMatrixSkewnessCalculator r0;
        java.lang.Object r1;
        java.util.Map $r2;
        java.lang.Double $r3;

        r0 := @this: com.opengamma.analytics.financial.var.parametric.DeltaGammaCovarianceMatrixSkewnessCalculator;

        r1 := @parameter0: java.lang.Object;

        $r2 = (java.util.Map) r1;

        $r3 = virtualinvoke r0.<com.opengamma.analytics.financial.var.parametric.DeltaGammaCovarianceMatrixSkewnessCalculator: java.lang.Double evaluate(java.util.Map)>($r2);

        return $r3;
    }
}
