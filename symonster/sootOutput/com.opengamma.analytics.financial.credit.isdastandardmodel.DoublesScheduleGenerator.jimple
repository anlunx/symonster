public abstract class com.opengamma.analytics.financial.credit.isdastandardmodel.DoublesScheduleGenerator extends java.lang.Object
{
    private static final double TOL;

    public void <init>()
    {
        com.opengamma.analytics.financial.credit.isdastandardmodel.DoublesScheduleGenerator r0;

        r0 := @this: com.opengamma.analytics.financial.credit.isdastandardmodel.DoublesScheduleGenerator;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static double[] getIntegrationsPoints(double, double, com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantYieldCurve, com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantCreditCurve)
    {
        double d0, d1;
        com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantYieldCurve r0;
        com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantCreditCurve r1;
        double[] $r2, $r3, $r4;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        r0 := @parameter2: com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantYieldCurve;

        r1 := @parameter3: com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantCreditCurve;

        $r2 = virtualinvoke r0.<com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantYieldCurve: double[] getKnotTimes()>();

        $r3 = virtualinvoke r1.<com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantCreditCurve: double[] getKnotTimes()>();

        $r4 = staticinvoke <com.opengamma.analytics.financial.credit.isdastandardmodel.DoublesScheduleGenerator: double[] getIntegrationsPoints(double,double,double[],double[])>(d0, d1, $r2, $r3);

        return $r4;
    }

    public static double[] getIntegrationsPoints(double, double, double[], double[])
    {
        double d0, d1, $d2, $d3, $d4, $d5;
        double[] r0, r1, r2, r3, r4, r5, r6;
        int i0, i1, i2, $i3, $i4, i5, i6, i7;
        boolean $z0, $z1;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        r0 := @parameter2: double[];

        r1 := @parameter3: double[];

        r2 = staticinvoke <com.opengamma.analytics.financial.credit.isdastandardmodel.DoublesScheduleGenerator: double[] truncateSetExclusive(double,double,double[])>(d0, d1, r0);

        r3 = staticinvoke <com.opengamma.analytics.financial.credit.isdastandardmodel.DoublesScheduleGenerator: double[] truncateSetExclusive(double,double,double[])>(d0, d1, r1);

        i0 = lengthof r2;

        i1 = lengthof r3;

        i2 = i0 + i1;

        r4 = newarray (double)[i2];

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r2, 0, r4, 0, i0);

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r3, 0, r4, i0, i1);

        staticinvoke <java.util.Arrays: void sort(double[])>(r4);

        $i3 = i2 + 2;

        r5 = newarray (double)[$i3];

        r5[0] = d0;

        i5 = 0;

        i6 = 0;

     label1:
        if i6 >= i2 goto label3;

        $d4 = r5[i5];

        $d3 = r4[i6];

        $z1 = staticinvoke <com.opengamma.analytics.financial.credit.isdastandardmodel.DoublesScheduleGenerator: boolean different(double,double)>($d4, $d3);

        if $z1 == 0 goto label2;

        i5 = i5 + 1;

        $d5 = r4[i6];

        r5[i5] = $d5;

     label2:
        i6 = i6 + 1;

        goto label1;

     label3:
        $d2 = r5[i5];

        $z0 = staticinvoke <com.opengamma.analytics.financial.credit.isdastandardmodel.DoublesScheduleGenerator: boolean different(double,double)>($d2, d1);

        if $z0 == 0 goto label4;

        i5 = i5 + 1;

     label4:
        r5[i5] = d1;

        i7 = i5 + 1;

        $i4 = i2 + 2;

        if i7 != $i4 goto label5;

        return r5;

     label5:
        r6 = newarray (double)[i7];

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r5, 0, r6, 0, i7);

        return r6;
    }

    public static double[] combineSets(double[], double[])
    {
        double[] r0, r1, r2, r3, r4;
        int i0, i1, i2, i3, i4, i5;
        double $d0, $d1, $d2, $d3;
        boolean $z0;

        r0 := @parameter0: double[];

        r1 := @parameter1: double[];

        i0 = lengthof r0;

        i1 = lengthof r1;

        i2 = i0 + i1;

        r2 = newarray (double)[i2];

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r0, 0, r2, 0, i0);

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, 0, r2, i0, i1);

        staticinvoke <java.util.Arrays: void sort(double[])>(r2);

        r3 = newarray (double)[i2];

        $d0 = r2[0];

        r3[0] = $d0;

        i3 = 0;

        i4 = 1;

     label1:
        if i4 >= i2 goto label3;

        $d2 = r3[i3];

        $d1 = r2[i4];

        $z0 = staticinvoke <com.opengamma.analytics.financial.credit.isdastandardmodel.DoublesScheduleGenerator: boolean different(double,double)>($d2, $d1);

        if $z0 == 0 goto label2;

        i3 = i3 + 1;

        $d3 = r2[i4];

        r3[i3] = $d3;

     label2:
        i4 = i4 + 1;

        goto label1;

     label3:
        i5 = i3 + 1;

        if i5 != i2 goto label4;

        return r3;

     label4:
        r4 = newarray (double)[i5];

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r3, 0, r4, 0, i5);

        return r4;
    }

    private static boolean different(double, double)
    {
        double d0, d1, $d2, $d3;
        byte $b0;
        boolean $z0;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        $d2 = d0 - d1;

        $d3 = staticinvoke <java.lang.Math: double abs(double)>($d2);

        $b0 = $d3 cmpl 0.0013698630136986301;

        if $b0 <= 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public static double[] truncateSetInclusive(double, double, double[])
    {
        double d0, d1, $d2, $d3;
        double[] r0, r1, r2, $r5;
        int i0, i1, $i2, $i3, $i4, $i7;
        boolean z0, z1;
        byte $b8, $b9, $b10;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        r0 := @parameter2: double[];

        r1 = staticinvoke <com.opengamma.analytics.financial.credit.isdastandardmodel.DoublesScheduleGenerator: double[] truncateSetExclusive(double,double,double[])>(d0, d1, r0);

        i0 = lengthof r1;

        if i0 != 0 goto label1;

        $r5 = newarray (double)[2];

        $r5[0] = d0;

        $r5[1] = d1;

        return $r5;

     label1:
        $d2 = r1[0];

        z0 = staticinvoke <com.opengamma.analytics.financial.credit.isdastandardmodel.DoublesScheduleGenerator: boolean different(double,double)>(d0, $d2);

        $i2 = i0 - 1;

        $d3 = r1[$i2];

        z1 = staticinvoke <com.opengamma.analytics.financial.credit.isdastandardmodel.DoublesScheduleGenerator: boolean different(double,double)>(d1, $d3);

        if z0 != 0 goto label2;

        if z1 != 0 goto label2;

        r1[0] = d0;

        $i7 = i0 - 1;

        r1[$i7] = d1;

        return r1;

     label2:
        if z0 == 0 goto label3;

        $b8 = 1;

        goto label4;

     label3:
        $b8 = 0;

     label4:
        $i3 = i0 + $b8;

        if z1 == 0 goto label5;

        $b9 = 1;

        goto label6;

     label5:
        $b9 = 0;

     label6:
        i1 = $i3 + $b9;

        r2 = newarray (double)[i1];

        if z0 == 0 goto label7;

        $b10 = 1;

        goto label8;

     label7:
        $b10 = 0;

     label8:
        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, 0, r2, $b10, i0);

        r2[0] = d0;

        $i4 = i1 - 1;

        r2[$i4] = d1;

        return r2;
    }

    public static double[] truncateSetExclusive(double, double, double[])
    {
        double d0, d1, $d2, $d3, $d4, $d5;
        double[] r0, r1, $r2;
        int i0, $i2, $i5, $i6, i7, i8, $i9, $i10, i12, i13, $i14, i15;
        byte $b1, $b3, $b4, $b11;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        r0 := @parameter2: double[];

        i0 = lengthof r0;

        $d2 = r0[0];

        $b1 = d1 cmpg $d2;

        if $b1 < 0 goto label01;

        $i2 = i0 - 1;

        $d3 = r0[$i2];

        $b3 = d0 cmpl $d3;

        if $b3 <= 0 goto label02;

     label01:
        $r2 = newarray (double)[0];

        return $r2;

     label02:
        $d4 = r0[0];

        $b4 = d0 cmpg $d4;

        if $b4 >= 0 goto label03;

        i7 = 0;

        goto label06;

     label03:
        i8 = staticinvoke <java.util.Arrays: int binarySearch(double[],double)>(r0, d0);

        if i8 < 0 goto label04;

        $i9 = i8 + 1;

        goto label05;

     label04:
        $i5 = i8 + 1;

        $i9 = neg $i5;

     label05:
        i7 = $i9;

     label06:
        $i10 = i0 - 1;

        $d5 = r0[$i10];

        $b11 = d1 cmpl $d5;

        if $b11 <= 0 goto label07;

        i12 = i0;

        goto label10;

     label07:
        i13 = staticinvoke <java.util.Arrays: int binarySearch(double[],int,int,double)>(r0, i7, i0, d1);

        if i13 < 0 goto label08;

        $i14 = i13;

        goto label09;

     label08:
        $i6 = i13 + 1;

        $i14 = neg $i6;

     label09:
        i12 = $i14;

     label10:
        i15 = i12 - i7;

        if i15 != i0 goto label11;

        return r0;

     label11:
        r1 = newarray (double)[i15];

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r0, i7, r1, 0, i15);

        return r1;
    }

    public static double[] leftTruncate(double, double[])
    {
        double d0, $d1, $d2;
        double[] r0, $r1, r2;
        int i0, i1, $i4, $i6, $i7, $i8, $i9;
        byte $b3, $b5;

        d0 := @parameter0: double;

        r0 := @parameter1: double[];

        i0 = lengthof r0;

        if i0 != 0 goto label1;

        return r0;

     label1:
        $d1 = r0[0];

        $b3 = d0 cmpg $d1;

        if $b3 >= 0 goto label2;

        return r0;

     label2:
        $i4 = i0 - 1;

        $d2 = r0[$i4];

        $b5 = d0 cmpl $d2;

        if $b5 < 0 goto label3;

        $r1 = newarray (double)[0];

        return $r1;

     label3:
        i1 = staticinvoke <java.util.Arrays: int binarySearch(double[],double)>(r0, d0);

        if i1 < 0 goto label4;

        $i9 = i1 + 1;

        goto label5;

     label4:
        $i6 = i1 + 1;

        $i9 = neg $i6;

     label5:
        if $i9 != 0 goto label6;

        r2 = r0;

        goto label7;

     label6:
        $i7 = i0 - $i9;

        r2 = newarray (double)[$i7];

        $i8 = i0 - $i9;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r0, $i9, r2, 0, $i8);

     label7:
        return r2;
    }

    public static void <clinit>()
    {
        <com.opengamma.analytics.financial.credit.isdastandardmodel.DoublesScheduleGenerator: double TOL> = 0.0013698630136986301;

        return;
    }
}
