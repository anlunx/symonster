public final class com.opengamma.analytics.financial.interestrate.InstrumentSensitivityCalculator extends java.lang.Object
{
    private static final com.opengamma.analytics.math.matrix.MatrixAlgebra MATRIX_ALGEBRA;
    private static final com.opengamma.analytics.financial.interestrate.InstrumentSensitivityCalculator INSTANCE;

    public static com.opengamma.analytics.financial.interestrate.InstrumentSensitivityCalculator getInstance()
    {
        com.opengamma.analytics.financial.interestrate.InstrumentSensitivityCalculator $r0;

        $r0 = <com.opengamma.analytics.financial.interestrate.InstrumentSensitivityCalculator: com.opengamma.analytics.financial.interestrate.InstrumentSensitivityCalculator INSTANCE>;

        return $r0;
    }

    private void <init>()
    {
        com.opengamma.analytics.financial.interestrate.InstrumentSensitivityCalculator r0;

        r0 := @this: com.opengamma.analytics.financial.interestrate.InstrumentSensitivityCalculator;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public com.opengamma.analytics.math.matrix.DoubleMatrix1D calculateFromPresentValue(com.opengamma.analytics.financial.interestrate.InstrumentDerivative, com.opengamma.analytics.financial.interestrate.YieldCurveBundle, com.opengamma.analytics.financial.interestrate.YieldCurveBundle, com.opengamma.analytics.math.matrix.DoubleMatrix1D, com.opengamma.analytics.math.matrix.DoubleMatrix2D, com.opengamma.analytics.financial.interestrate.PresentValueNodeSensitivityCalculator)
    {
        com.opengamma.analytics.financial.interestrate.InstrumentSensitivityCalculator r0;
        com.opengamma.analytics.financial.interestrate.InstrumentDerivative r1;
        com.opengamma.analytics.financial.interestrate.YieldCurveBundle r2, r3;
        com.opengamma.analytics.math.matrix.DoubleMatrix1D r4, r7, $r11;
        com.opengamma.analytics.math.matrix.DoubleMatrix2D r5, r8;
        com.opengamma.analytics.financial.interestrate.PresentValueNodeSensitivityCalculator r6;
        int i0, $i1, $i2, $i3, i4, i5;
        double[] r9;
        com.opengamma.analytics.math.matrix.MatrixAlgebra $r10;
        int[] $r12, $r14, $r16;
        java.lang.Double $r13, $r15, $r17;
        double $d0, $d1, $d2, $d3, $d4, $d5, d6;
        boolean $z0, $z1, $z2;

        r0 := @this: com.opengamma.analytics.financial.interestrate.InstrumentSensitivityCalculator;

        r1 := @parameter0: com.opengamma.analytics.financial.interestrate.InstrumentDerivative;

        r2 := @parameter1: com.opengamma.analytics.financial.interestrate.YieldCurveBundle;

        r3 := @parameter2: com.opengamma.analytics.financial.interestrate.YieldCurveBundle;

        r4 := @parameter3: com.opengamma.analytics.math.matrix.DoubleMatrix1D;

        r5 := @parameter4: com.opengamma.analytics.math.matrix.DoubleMatrix2D;

        r6 := @parameter5: com.opengamma.analytics.financial.interestrate.PresentValueNodeSensitivityCalculator;

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object,java.lang.String)>(r6, "node sensitivity calculator");

        r7 = virtualinvoke r6.<com.opengamma.analytics.financial.interestrate.PresentValueNodeSensitivityCalculator: com.opengamma.analytics.math.matrix.DoubleMatrix1D calculateSensitivities(com.opengamma.analytics.financial.interestrate.InstrumentDerivative,com.opengamma.analytics.financial.interestrate.YieldCurveBundle,com.opengamma.analytics.financial.interestrate.YieldCurveBundle)>(r1, r2, r3);

        i0 = virtualinvoke r7.<com.opengamma.analytics.math.matrix.DoubleMatrix1D: int getNumberOfElements()>();

        $i1 = virtualinvoke r4.<com.opengamma.analytics.math.matrix.DoubleMatrix1D: int getNumberOfElements()>();

        if i0 != $i1 goto label01;

        $z0 = 1;

        goto label02;

     label01:
        $z0 = 0;

     label02:
        staticinvoke <org.apache.commons.lang.Validate: void isTrue(boolean)>($z0);

        $i2 = virtualinvoke r5.<com.opengamma.analytics.math.matrix.DoubleMatrix2D: int getNumberOfColumns()>();

        if i0 != $i2 goto label03;

        $z1 = 1;

        goto label04;

     label03:
        $z1 = 0;

     label04:
        staticinvoke <org.apache.commons.lang.Validate: void isTrue(boolean)>($z1);

        $i3 = virtualinvoke r5.<com.opengamma.analytics.math.matrix.DoubleMatrix2D: int getNumberOfRows()>();

        if i0 != $i3 goto label05;

        $z2 = 1;

        goto label06;

     label05:
        $z2 = 0;

     label06:
        staticinvoke <org.apache.commons.lang.Validate: void isTrue(boolean)>($z2);

        $r10 = <com.opengamma.analytics.financial.interestrate.InstrumentSensitivityCalculator: com.opengamma.analytics.math.matrix.MatrixAlgebra MATRIX_ALGEBRA>;

        r8 = virtualinvoke $r10.<com.opengamma.analytics.math.matrix.MatrixAlgebra: com.opengamma.analytics.math.matrix.DoubleMatrix2D getInverse(com.opengamma.analytics.math.matrix.Matrix)>(r5);

        r9 = newarray (double)[i0];

        i4 = 0;

     label07:
        if i4 >= i0 goto label10;

        d6 = 0.0;

        i5 = 0;

     label08:
        if i5 >= i0 goto label09;

        $r12 = newarray (int)[1];

        $r12[0] = i4;

        $r13 = virtualinvoke r4.<com.opengamma.analytics.math.matrix.DoubleMatrix1D: java.lang.Double getEntry(int[])>($r12);

        $d0 = virtualinvoke $r13.<java.lang.Double: double doubleValue()>();

        $d1 = neg $d0;

        $r14 = newarray (int)[2];

        $r14[0] = i5;

        $r14[1] = i4;

        $r15 = virtualinvoke r8.<com.opengamma.analytics.math.matrix.DoubleMatrix2D: java.lang.Double getEntry(int[])>($r14);

        $d2 = virtualinvoke $r15.<java.lang.Double: double doubleValue()>();

        $d3 = $d1 * $d2;

        $r16 = newarray (int)[1];

        $r16[0] = i5;

        $r17 = virtualinvoke r7.<com.opengamma.analytics.math.matrix.DoubleMatrix1D: java.lang.Double getEntry(int[])>($r16);

        $d4 = virtualinvoke $r17.<java.lang.Double: double doubleValue()>();

        $d5 = $d3 * $d4;

        d6 = d6 + $d5;

        i5 = i5 + 1;

        goto label08;

     label09:
        r9[i4] = d6;

        i4 = i4 + 1;

        goto label07;

     label10:
        $r11 = new com.opengamma.analytics.math.matrix.DoubleMatrix1D;

        specialinvoke $r11.<com.opengamma.analytics.math.matrix.DoubleMatrix1D: void <init>(double[])>(r9);

        return $r11;
    }

    public com.opengamma.analytics.math.matrix.DoubleMatrix1D calculateFromParRate(com.opengamma.analytics.financial.interestrate.InstrumentDerivative, com.opengamma.analytics.financial.interestrate.YieldCurveBundle, com.opengamma.analytics.financial.interestrate.YieldCurveBundle, com.opengamma.analytics.math.matrix.DoubleMatrix2D, com.opengamma.analytics.financial.interestrate.PresentValueNodeSensitivityCalculator)
    {
        com.opengamma.analytics.financial.interestrate.InstrumentSensitivityCalculator r0;
        com.opengamma.analytics.financial.interestrate.InstrumentDerivative r1;
        com.opengamma.analytics.financial.interestrate.YieldCurveBundle r2, r3;
        com.opengamma.analytics.math.matrix.DoubleMatrix2D r4, r7;
        com.opengamma.analytics.financial.interestrate.PresentValueNodeSensitivityCalculator r5;
        com.opengamma.analytics.math.matrix.DoubleMatrix1D r6, $r24;
        int i0, $i1, $i2, $i3, $i4, i5, i6;
        double[] r8;
        java.lang.StringBuilder $r9, $r10, $r11, $r12, $r13, $r14, $r16, $r17, $r18, $r19, $r20, $r21;
        java.lang.String $r15, $r22;
        com.opengamma.analytics.math.matrix.MatrixAlgebra $r23;
        int[] $r25, $r27;
        java.lang.Double $r26, $r28;
        double $d0, $d1, $d2, d3;
        boolean $z0, $z1;

        r0 := @this: com.opengamma.analytics.financial.interestrate.InstrumentSensitivityCalculator;

        r1 := @parameter0: com.opengamma.analytics.financial.interestrate.InstrumentDerivative;

        r2 := @parameter1: com.opengamma.analytics.financial.interestrate.YieldCurveBundle;

        r3 := @parameter2: com.opengamma.analytics.financial.interestrate.YieldCurveBundle;

        r4 := @parameter3: com.opengamma.analytics.math.matrix.DoubleMatrix2D;

        r5 := @parameter4: com.opengamma.analytics.financial.interestrate.PresentValueNodeSensitivityCalculator;

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object,java.lang.String)>(r5, "node sensitivity calculator");

        r6 = virtualinvoke r5.<com.opengamma.analytics.financial.interestrate.PresentValueNodeSensitivityCalculator: com.opengamma.analytics.math.matrix.DoubleMatrix1D calculateSensitivities(com.opengamma.analytics.financial.interestrate.InstrumentDerivative,com.opengamma.analytics.financial.interestrate.YieldCurveBundle,com.opengamma.analytics.financial.interestrate.YieldCurveBundle)>(r1, r2, r3);

        i0 = virtualinvoke r6.<com.opengamma.analytics.math.matrix.DoubleMatrix1D: int getNumberOfElements()>();

        $i1 = virtualinvoke r4.<com.opengamma.analytics.math.matrix.DoubleMatrix2D: int getNumberOfColumns()>();

        if i0 != $i1 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Have ");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" node sensitivities but ");

        $i2 = virtualinvoke r4.<com.opengamma.analytics.math.matrix.DoubleMatrix2D: int getNumberOfColumns()>();

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" columns in Jacobian");

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <org.apache.commons.lang.Validate: void isTrue(boolean,java.lang.String)>($z0, $r15);

        $i3 = virtualinvoke r4.<com.opengamma.analytics.math.matrix.DoubleMatrix2D: int getNumberOfRows()>();

        if i0 != $i3 goto label3;

        $z1 = 1;

        goto label4;

     label3:
        $z1 = 0;

     label4:
        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Have ");

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" node sensitivities but ");

        $i4 = virtualinvoke r4.<com.opengamma.analytics.math.matrix.DoubleMatrix2D: int getNumberOfRows()>();

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" rows in Jacobian");

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <org.apache.commons.lang.Validate: void isTrue(boolean,java.lang.String)>($z1, $r22);

        $r23 = <com.opengamma.analytics.financial.interestrate.InstrumentSensitivityCalculator: com.opengamma.analytics.math.matrix.MatrixAlgebra MATRIX_ALGEBRA>;

        r7 = virtualinvoke $r23.<com.opengamma.analytics.math.matrix.MatrixAlgebra: com.opengamma.analytics.math.matrix.DoubleMatrix2D getInverse(com.opengamma.analytics.math.matrix.Matrix)>(r4);

        r8 = newarray (double)[i0];

        i5 = 0;

     label5:
        if i5 >= i0 goto label8;

        d3 = 0.0;

        i6 = 0;

     label6:
        if i6 >= i0 goto label7;

        $r25 = newarray (int)[2];

        $r25[0] = i6;

        $r25[1] = i5;

        $r26 = virtualinvoke r7.<com.opengamma.analytics.math.matrix.DoubleMatrix2D: java.lang.Double getEntry(int[])>($r25);

        $d0 = virtualinvoke $r26.<java.lang.Double: double doubleValue()>();

        $r27 = newarray (int)[1];

        $r27[0] = i6;

        $r28 = virtualinvoke r6.<com.opengamma.analytics.math.matrix.DoubleMatrix1D: java.lang.Double getEntry(int[])>($r27);

        $d1 = virtualinvoke $r28.<java.lang.Double: double doubleValue()>();

        $d2 = $d0 * $d1;

        d3 = d3 + $d2;

        i6 = i6 + 1;

        goto label6;

     label7:
        r8[i5] = d3;

        i5 = i5 + 1;

        goto label5;

     label8:
        $r24 = new com.opengamma.analytics.math.matrix.DoubleMatrix1D;

        specialinvoke $r24.<com.opengamma.analytics.math.matrix.DoubleMatrix1D: void <init>(double[])>(r8);

        return $r24;
    }

    public com.opengamma.analytics.math.matrix.DoubleMatrix1D calculateFromSimpleInterpolatedCurve(com.opengamma.analytics.financial.interestrate.InstrumentDerivative, com.opengamma.analytics.financial.interestrate.YieldCurveBundle, com.opengamma.analytics.financial.interestrate.PresentValueNodeSensitivityCalculator)
    {
        com.opengamma.analytics.financial.interestrate.InstrumentSensitivityCalculator r0;
        com.opengamma.analytics.financial.interestrate.InstrumentDerivative r1;
        com.opengamma.analytics.financial.interestrate.YieldCurveBundle r2;
        com.opengamma.analytics.financial.interestrate.PresentValueNodeSensitivityCalculator r3;
        com.opengamma.analytics.math.matrix.DoubleMatrix1D $r4;

        r0 := @this: com.opengamma.analytics.financial.interestrate.InstrumentSensitivityCalculator;

        r1 := @parameter0: com.opengamma.analytics.financial.interestrate.InstrumentDerivative;

        r2 := @parameter1: com.opengamma.analytics.financial.interestrate.YieldCurveBundle;

        r3 := @parameter2: com.opengamma.analytics.financial.interestrate.PresentValueNodeSensitivityCalculator;

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object,java.lang.String)>(r3, "node sensitivity calculator");

        $r4 = virtualinvoke r3.<com.opengamma.analytics.financial.interestrate.PresentValueNodeSensitivityCalculator: com.opengamma.analytics.math.matrix.DoubleMatrix1D calculateSensitivities(com.opengamma.analytics.financial.interestrate.InstrumentDerivative,com.opengamma.analytics.financial.interestrate.YieldCurveBundle,com.opengamma.analytics.financial.interestrate.YieldCurveBundle)>(r1, null, r2);

        return $r4;
    }

    static void <clinit>()
    {
        com.opengamma.analytics.math.matrix.ColtMatrixAlgebra $r0;
        com.opengamma.analytics.financial.interestrate.InstrumentSensitivityCalculator $r1;

        $r0 = new com.opengamma.analytics.math.matrix.ColtMatrixAlgebra;

        specialinvoke $r0.<com.opengamma.analytics.math.matrix.ColtMatrixAlgebra: void <init>()>();

        <com.opengamma.analytics.financial.interestrate.InstrumentSensitivityCalculator: com.opengamma.analytics.math.matrix.MatrixAlgebra MATRIX_ALGEBRA> = $r0;

        $r1 = new com.opengamma.analytics.financial.interestrate.InstrumentSensitivityCalculator;

        specialinvoke $r1.<com.opengamma.analytics.financial.interestrate.InstrumentSensitivityCalculator: void <init>()>();

        <com.opengamma.analytics.financial.interestrate.InstrumentSensitivityCalculator: com.opengamma.analytics.financial.interestrate.InstrumentSensitivityCalculator INSTANCE> = $r1;

        return;
    }
}
