public class com.opengamma.analytics.financial.provider.sensitivity.issuer.ParameterSensitivityIssuerCalculator extends com.opengamma.analytics.financial.provider.sensitivity.issuer.AbstractParameterSensitivityIssuerCalculator
{

    public void <init>(com.opengamma.analytics.financial.interestrate.InstrumentDerivativeVisitor)
    {
        com.opengamma.analytics.financial.provider.sensitivity.issuer.ParameterSensitivityIssuerCalculator r0;
        com.opengamma.analytics.financial.interestrate.InstrumentDerivativeVisitor r1;

        r0 := @this: com.opengamma.analytics.financial.provider.sensitivity.issuer.ParameterSensitivityIssuerCalculator;

        r1 := @parameter0: com.opengamma.analytics.financial.interestrate.InstrumentDerivativeVisitor;

        specialinvoke r0.<com.opengamma.analytics.financial.provider.sensitivity.issuer.AbstractParameterSensitivityIssuerCalculator: void <init>(com.opengamma.analytics.financial.interestrate.InstrumentDerivativeVisitor)>(r1);

        return;
    }

    public com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyParameterSensitivity pointToParameterSensitivity(com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyMulticurveSensitivity, com.opengamma.analytics.financial.provider.description.interestrate.ParameterIssuerProviderInterface, java.util.Set)
    {
        com.opengamma.analytics.financial.provider.sensitivity.issuer.ParameterSensitivityIssuerCalculator r0;
        com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyMulticurveSensitivity r1;
        com.opengamma.analytics.financial.provider.description.interestrate.ParameterIssuerProviderInterface r2;
        java.util.Set r3, $r5, $r6, $r9, $r23;
        com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyParameterSensitivity $r4, r35;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        java.lang.Object $r7, $r10, $r11, $r12, $r16, $r18, $r21, $r24, $r25, $r26, $r30, $r32;
        com.opengamma.analytics.financial.provider.sensitivity.multicurve.MulticurveSensitivity $r8, $r22;
        com.opengamma.util.tuple.Pair $r13, $r27;
        com.opengamma.analytics.math.matrix.DoubleMatrix1D $r14, $r28;
        com.opengamma.analytics.financial.provider.description.interestrate.IssuerProviderInterface $r15, $r29;
        java.lang.String $r17, $r31;
        java.util.List $r19, $r33;
        double[] $r20, $r34;
        java.util.Iterator r36, r39, r41, r44;
        com.opengamma.util.money.Currency r37, r42;
        java.util.Map r38, r43;
        java.util.Map$Entry r40, r45;

        r0 := @this: com.opengamma.analytics.financial.provider.sensitivity.issuer.ParameterSensitivityIssuerCalculator;

        r1 := @parameter0: com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyMulticurveSensitivity;

        r2 := @parameter1: com.opengamma.analytics.financial.provider.description.interestrate.ParameterIssuerProviderInterface;

        r3 := @parameter2: java.util.Set;

        $r4 = new com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyParameterSensitivity;

        specialinvoke $r4.<com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyParameterSensitivity: void <init>()>();

        r35 = $r4;

        $r5 = virtualinvoke r1.<com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyMulticurveSensitivity: java.util.Set getCurrencies()>();

        r36 = interfaceinvoke $r5.<java.util.Set: java.util.Iterator iterator()>();

     label01:
        $z0 = interfaceinvoke r36.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label05;

        $r21 = interfaceinvoke r36.<java.util.Iterator: java.lang.Object next()>();

        r37 = (com.opengamma.util.money.Currency) $r21;

        $r22 = virtualinvoke r1.<com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyMulticurveSensitivity: com.opengamma.analytics.financial.provider.sensitivity.multicurve.MulticurveSensitivity getSensitivity(com.opengamma.util.money.Currency)>(r37);

        r38 = virtualinvoke $r22.<com.opengamma.analytics.financial.provider.sensitivity.multicurve.MulticurveSensitivity: java.util.Map getYieldDiscountingSensitivities()>();

        $r23 = interfaceinvoke r38.<java.util.Map: java.util.Set entrySet()>();

        r39 = interfaceinvoke $r23.<java.util.Set: java.util.Iterator iterator()>();

     label02:
        $z4 = interfaceinvoke r39.<java.util.Iterator: boolean hasNext()>();

        if $z4 == 0 goto label04;

        $r24 = interfaceinvoke r39.<java.util.Iterator: java.lang.Object next()>();

        r40 = (java.util.Map$Entry) $r24;

        $r25 = interfaceinvoke r40.<java.util.Map$Entry: java.lang.Object getKey()>();

        $z5 = interfaceinvoke r3.<java.util.Set: boolean contains(java.lang.Object)>($r25);

        if $z5 == 0 goto label03;

        $r26 = interfaceinvoke r40.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r27 = staticinvoke <com.opengamma.util.tuple.Pairs: com.opengamma.util.tuple.Pair of(java.lang.Object,java.lang.Object)>($r26, r37);

        $r28 = new com.opengamma.analytics.math.matrix.DoubleMatrix1D;

        $r29 = interfaceinvoke r2.<com.opengamma.analytics.financial.provider.description.interestrate.ParameterIssuerProviderInterface: com.opengamma.analytics.financial.provider.description.interestrate.IssuerProviderInterface getIssuerProvider()>();

        $r30 = interfaceinvoke r40.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r31 = (java.lang.String) $r30;

        $r32 = interfaceinvoke r40.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r33 = (java.util.List) $r32;

        $r34 = interfaceinvoke $r29.<com.opengamma.analytics.financial.provider.description.interestrate.IssuerProviderInterface: double[] parameterSensitivity(java.lang.String,java.util.List)>($r31, $r33);

        specialinvoke $r28.<com.opengamma.analytics.math.matrix.DoubleMatrix1D: void <init>(double[])>($r34);

        r35 = virtualinvoke r35.<com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyParameterSensitivity: com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyParameterSensitivity plus(com.opengamma.util.tuple.Pair,com.opengamma.analytics.math.matrix.DoubleMatrix1D)>($r27, $r28);

     label03:
        goto label02;

     label04:
        goto label01;

     label05:
        $r6 = virtualinvoke r1.<com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyMulticurveSensitivity: java.util.Set getCurrencies()>();

        r41 = interfaceinvoke $r6.<java.util.Set: java.util.Iterator iterator()>();

     label06:
        $z1 = interfaceinvoke r41.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label10;

        $r7 = interfaceinvoke r41.<java.util.Iterator: java.lang.Object next()>();

        r42 = (com.opengamma.util.money.Currency) $r7;

        $r8 = virtualinvoke r1.<com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyMulticurveSensitivity: com.opengamma.analytics.financial.provider.sensitivity.multicurve.MulticurveSensitivity getSensitivity(com.opengamma.util.money.Currency)>(r42);

        r43 = virtualinvoke $r8.<com.opengamma.analytics.financial.provider.sensitivity.multicurve.MulticurveSensitivity: java.util.Map getForwardSensitivities()>();

        $r9 = interfaceinvoke r43.<java.util.Map: java.util.Set entrySet()>();

        r44 = interfaceinvoke $r9.<java.util.Set: java.util.Iterator iterator()>();

     label07:
        $z2 = interfaceinvoke r44.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label09;

        $r10 = interfaceinvoke r44.<java.util.Iterator: java.lang.Object next()>();

        r45 = (java.util.Map$Entry) $r10;

        $r11 = interfaceinvoke r45.<java.util.Map$Entry: java.lang.Object getKey()>();

        $z3 = interfaceinvoke r3.<java.util.Set: boolean contains(java.lang.Object)>($r11);

        if $z3 == 0 goto label08;

        $r12 = interfaceinvoke r45.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r13 = staticinvoke <com.opengamma.util.tuple.Pairs: com.opengamma.util.tuple.Pair of(java.lang.Object,java.lang.Object)>($r12, r42);

        $r14 = new com.opengamma.analytics.math.matrix.DoubleMatrix1D;

        $r15 = interfaceinvoke r2.<com.opengamma.analytics.financial.provider.description.interestrate.ParameterIssuerProviderInterface: com.opengamma.analytics.financial.provider.description.interestrate.IssuerProviderInterface getIssuerProvider()>();

        $r16 = interfaceinvoke r45.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r17 = (java.lang.String) $r16;

        $r18 = interfaceinvoke r45.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r19 = (java.util.List) $r18;

        $r20 = interfaceinvoke $r15.<com.opengamma.analytics.financial.provider.description.interestrate.IssuerProviderInterface: double[] parameterForwardSensitivity(java.lang.String,java.util.List)>($r17, $r19);

        specialinvoke $r14.<com.opengamma.analytics.math.matrix.DoubleMatrix1D: void <init>(double[])>($r20);

        r35 = virtualinvoke r35.<com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyParameterSensitivity: com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyParameterSensitivity plus(com.opengamma.util.tuple.Pair,com.opengamma.analytics.math.matrix.DoubleMatrix1D)>($r13, $r14);

     label08:
        goto label07;

     label09:
        goto label06;

     label10:
        return r35;
    }

    public com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyParameterSensitivity pointToParameterSensitivity(com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyMulticurveSensitivity, com.opengamma.analytics.financial.provider.description.interestrate.ParameterIssuerProviderInterface)
    {
        com.opengamma.analytics.financial.provider.sensitivity.issuer.ParameterSensitivityIssuerCalculator r0;
        com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyMulticurveSensitivity r1;
        com.opengamma.analytics.financial.provider.description.interestrate.ParameterIssuerProviderInterface r2;
        com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyParameterSensitivity $r3, r32;
        java.util.Set $r4, $r5, $r8, $r21;
        boolean $z0, $z1, $z2, $z3;
        java.lang.Object $r6, $r9, $r10, $r14, $r16, $r19, $r22, $r23, $r27, $r29;
        com.opengamma.analytics.financial.provider.sensitivity.multicurve.MulticurveSensitivity $r7, $r20;
        com.opengamma.util.tuple.Pair $r11, $r24;
        com.opengamma.analytics.math.matrix.DoubleMatrix1D $r12, $r25;
        com.opengamma.analytics.financial.provider.description.interestrate.IssuerProviderInterface $r13, $r26;
        java.lang.String $r15, $r28;
        java.util.List $r17, $r30;
        double[] $r18, $r31;
        java.util.Iterator r33, r36, r38, r41;
        com.opengamma.util.money.Currency r34, r39;
        java.util.Map r35, r40;
        java.util.Map$Entry r37, r42;

        r0 := @this: com.opengamma.analytics.financial.provider.sensitivity.issuer.ParameterSensitivityIssuerCalculator;

        r1 := @parameter0: com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyMulticurveSensitivity;

        r2 := @parameter1: com.opengamma.analytics.financial.provider.description.interestrate.ParameterIssuerProviderInterface;

        $r3 = new com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyParameterSensitivity;

        specialinvoke $r3.<com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyParameterSensitivity: void <init>()>();

        r32 = $r3;

        $r4 = virtualinvoke r1.<com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyMulticurveSensitivity: java.util.Set getCurrencies()>();

        r33 = interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r33.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r19 = interfaceinvoke r33.<java.util.Iterator: java.lang.Object next()>();

        r34 = (com.opengamma.util.money.Currency) $r19;

        $r20 = virtualinvoke r1.<com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyMulticurveSensitivity: com.opengamma.analytics.financial.provider.sensitivity.multicurve.MulticurveSensitivity getSensitivity(com.opengamma.util.money.Currency)>(r34);

        r35 = virtualinvoke $r20.<com.opengamma.analytics.financial.provider.sensitivity.multicurve.MulticurveSensitivity: java.util.Map getYieldDiscountingSensitivities()>();

        $r21 = interfaceinvoke r35.<java.util.Map: java.util.Set entrySet()>();

        r36 = interfaceinvoke $r21.<java.util.Set: java.util.Iterator iterator()>();

     label2:
        $z3 = interfaceinvoke r36.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label3;

        $r22 = interfaceinvoke r36.<java.util.Iterator: java.lang.Object next()>();

        r37 = (java.util.Map$Entry) $r22;

        $r23 = interfaceinvoke r37.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r24 = staticinvoke <com.opengamma.util.tuple.Pairs: com.opengamma.util.tuple.Pair of(java.lang.Object,java.lang.Object)>($r23, r34);

        $r25 = new com.opengamma.analytics.math.matrix.DoubleMatrix1D;

        $r26 = interfaceinvoke r2.<com.opengamma.analytics.financial.provider.description.interestrate.ParameterIssuerProviderInterface: com.opengamma.analytics.financial.provider.description.interestrate.IssuerProviderInterface getIssuerProvider()>();

        $r27 = interfaceinvoke r37.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r28 = (java.lang.String) $r27;

        $r29 = interfaceinvoke r37.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r30 = (java.util.List) $r29;

        $r31 = interfaceinvoke $r26.<com.opengamma.analytics.financial.provider.description.interestrate.IssuerProviderInterface: double[] parameterSensitivity(java.lang.String,java.util.List)>($r28, $r30);

        specialinvoke $r25.<com.opengamma.analytics.math.matrix.DoubleMatrix1D: void <init>(double[])>($r31);

        r32 = virtualinvoke r32.<com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyParameterSensitivity: com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyParameterSensitivity plus(com.opengamma.util.tuple.Pair,com.opengamma.analytics.math.matrix.DoubleMatrix1D)>($r24, $r25);

        goto label2;

     label3:
        goto label1;

     label4:
        $r5 = virtualinvoke r1.<com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyMulticurveSensitivity: java.util.Set getCurrencies()>();

        r38 = interfaceinvoke $r5.<java.util.Set: java.util.Iterator iterator()>();

     label5:
        $z1 = interfaceinvoke r38.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label8;

        $r6 = interfaceinvoke r38.<java.util.Iterator: java.lang.Object next()>();

        r39 = (com.opengamma.util.money.Currency) $r6;

        $r7 = virtualinvoke r1.<com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyMulticurveSensitivity: com.opengamma.analytics.financial.provider.sensitivity.multicurve.MulticurveSensitivity getSensitivity(com.opengamma.util.money.Currency)>(r39);

        r40 = virtualinvoke $r7.<com.opengamma.analytics.financial.provider.sensitivity.multicurve.MulticurveSensitivity: java.util.Map getForwardSensitivities()>();

        $r8 = interfaceinvoke r40.<java.util.Map: java.util.Set entrySet()>();

        r41 = interfaceinvoke $r8.<java.util.Set: java.util.Iterator iterator()>();

     label6:
        $z2 = interfaceinvoke r41.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label7;

        $r9 = interfaceinvoke r41.<java.util.Iterator: java.lang.Object next()>();

        r42 = (java.util.Map$Entry) $r9;

        $r10 = interfaceinvoke r42.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r11 = staticinvoke <com.opengamma.util.tuple.Pairs: com.opengamma.util.tuple.Pair of(java.lang.Object,java.lang.Object)>($r10, r39);

        $r12 = new com.opengamma.analytics.math.matrix.DoubleMatrix1D;

        $r13 = interfaceinvoke r2.<com.opengamma.analytics.financial.provider.description.interestrate.ParameterIssuerProviderInterface: com.opengamma.analytics.financial.provider.description.interestrate.IssuerProviderInterface getIssuerProvider()>();

        $r14 = interfaceinvoke r42.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r15 = (java.lang.String) $r14;

        $r16 = interfaceinvoke r42.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r17 = (java.util.List) $r16;

        $r18 = interfaceinvoke $r13.<com.opengamma.analytics.financial.provider.description.interestrate.IssuerProviderInterface: double[] parameterForwardSensitivity(java.lang.String,java.util.List)>($r15, $r17);

        specialinvoke $r12.<com.opengamma.analytics.math.matrix.DoubleMatrix1D: void <init>(double[])>($r18);

        r32 = virtualinvoke r32.<com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyParameterSensitivity: com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyParameterSensitivity plus(com.opengamma.util.tuple.Pair,com.opengamma.analytics.math.matrix.DoubleMatrix1D)>($r11, $r12);

        goto label6;

     label7:
        goto label5;

     label8:
        return r32;
    }
}
