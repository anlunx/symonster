class org.apache.commons.math3.optimization.direct.CMAESOptimizer$DoubleIndex extends java.lang.Object implements java.lang.Comparable
{
    private final double value;
    private final int index;

    void <init>(double, int)
    {
        org.apache.commons.math3.optimization.direct.CMAESOptimizer$DoubleIndex r0;
        double d0;
        int i0;

        r0 := @this: org.apache.commons.math3.optimization.direct.CMAESOptimizer$DoubleIndex;

        d0 := @parameter0: double;

        i0 := @parameter1: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.commons.math3.optimization.direct.CMAESOptimizer$DoubleIndex: double value> = d0;

        r0.<org.apache.commons.math3.optimization.direct.CMAESOptimizer$DoubleIndex: int index> = i0;

        return;
    }

    public int compareTo(org.apache.commons.math3.optimization.direct.CMAESOptimizer$DoubleIndex)
    {
        org.apache.commons.math3.optimization.direct.CMAESOptimizer$DoubleIndex r0, r1;
        double $d0, $d1;
        int $i0;

        r0 := @this: org.apache.commons.math3.optimization.direct.CMAESOptimizer$DoubleIndex;

        r1 := @parameter0: org.apache.commons.math3.optimization.direct.CMAESOptimizer$DoubleIndex;

        $d1 = r0.<org.apache.commons.math3.optimization.direct.CMAESOptimizer$DoubleIndex: double value>;

        $d0 = r1.<org.apache.commons.math3.optimization.direct.CMAESOptimizer$DoubleIndex: double value>;

        $i0 = staticinvoke <java.lang.Double: int compare(double,double)>($d1, $d0);

        return $i0;
    }

    public boolean equals(java.lang.Object)
    {
        org.apache.commons.math3.optimization.direct.CMAESOptimizer$DoubleIndex r0, $r2;
        java.lang.Object r1;
        boolean $z0, $z1;
        double $d0, $d1;
        int $i0;

        r0 := @this: org.apache.commons.math3.optimization.direct.CMAESOptimizer$DoubleIndex;

        r1 := @parameter0: java.lang.Object;

        if r0 != r1 goto label1;

        return 1;

     label1:
        $z0 = r1 instanceof org.apache.commons.math3.optimization.direct.CMAESOptimizer$DoubleIndex;

        if $z0 == 0 goto label4;

        $d1 = r0.<org.apache.commons.math3.optimization.direct.CMAESOptimizer$DoubleIndex: double value>;

        $r2 = (org.apache.commons.math3.optimization.direct.CMAESOptimizer$DoubleIndex) r1;

        $d0 = $r2.<org.apache.commons.math3.optimization.direct.CMAESOptimizer$DoubleIndex: double value>;

        $i0 = staticinvoke <java.lang.Double: int compare(double,double)>($d1, $d0);

        if $i0 != 0 goto label2;

        $z1 = 1;

        goto label3;

     label2:
        $z1 = 0;

     label3:
        return $z1;

     label4:
        return 0;
    }

    public int hashCode()
    {
        org.apache.commons.math3.optimization.direct.CMAESOptimizer$DoubleIndex r0;
        long l0, $l1, $l2, $l3, $l4;
        double $d0;
        int $i5;

        r0 := @this: org.apache.commons.math3.optimization.direct.CMAESOptimizer$DoubleIndex;

        $d0 = r0.<org.apache.commons.math3.optimization.direct.CMAESOptimizer$DoubleIndex: double value>;

        l0 = staticinvoke <java.lang.Double: long doubleToLongBits(double)>($d0);

        $l1 = l0 >>> 32;

        $l2 = 1438542L ^ $l1;

        $l3 = $l2 ^ l0;

        $l4 = $l3 & -1L;

        $i5 = (int) $l4;

        return $i5;
    }

    public volatile int compareTo(java.lang.Object)
    {
        org.apache.commons.math3.optimization.direct.CMAESOptimizer$DoubleIndex r0, $r2;
        java.lang.Object r1;
        int $i0;

        r0 := @this: org.apache.commons.math3.optimization.direct.CMAESOptimizer$DoubleIndex;

        r1 := @parameter0: java.lang.Object;

        $r2 = (org.apache.commons.math3.optimization.direct.CMAESOptimizer$DoubleIndex) r1;

        $i0 = virtualinvoke r0.<org.apache.commons.math3.optimization.direct.CMAESOptimizer$DoubleIndex: int compareTo(org.apache.commons.math3.optimization.direct.CMAESOptimizer$DoubleIndex)>($r2);

        return $i0;
    }

    static int access$100(org.apache.commons.math3.optimization.direct.CMAESOptimizer$DoubleIndex)
    {
        org.apache.commons.math3.optimization.direct.CMAESOptimizer$DoubleIndex r0;
        int $i0;

        r0 := @parameter0: org.apache.commons.math3.optimization.direct.CMAESOptimizer$DoubleIndex;

        $i0 = r0.<org.apache.commons.math3.optimization.direct.CMAESOptimizer$DoubleIndex: int index>;

        return $i0;
    }
}
