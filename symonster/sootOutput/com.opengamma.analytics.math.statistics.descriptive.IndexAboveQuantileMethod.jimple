public class com.opengamma.analytics.math.statistics.descriptive.IndexAboveQuantileMethod extends com.opengamma.analytics.math.statistics.descriptive.DiscreteQuantileMethod
{
    public static final com.opengamma.analytics.math.statistics.descriptive.IndexAboveQuantileMethod DEFAULT;

    public void <init>()
    {
        com.opengamma.analytics.math.statistics.descriptive.IndexAboveQuantileMethod r0;

        r0 := @this: com.opengamma.analytics.math.statistics.descriptive.IndexAboveQuantileMethod;

        specialinvoke r0.<com.opengamma.analytics.math.statistics.descriptive.DiscreteQuantileMethod: void <init>()>();

        return;
    }

    int index(double)
    {
        com.opengamma.analytics.math.statistics.descriptive.IndexAboveQuantileMethod r0;
        double d0, $d1;
        int $i0;

        r0 := @this: com.opengamma.analytics.math.statistics.descriptive.IndexAboveQuantileMethod;

        d0 := @parameter0: double;

        $d1 = staticinvoke <java.lang.Math: double ceil(double)>(d0);

        $i0 = (int) $d1;

        return $i0;
    }

    static void <clinit>()
    {
        com.opengamma.analytics.math.statistics.descriptive.IndexAboveQuantileMethod $r0;

        $r0 = new com.opengamma.analytics.math.statistics.descriptive.IndexAboveQuantileMethod;

        specialinvoke $r0.<com.opengamma.analytics.math.statistics.descriptive.IndexAboveQuantileMethod: void <init>()>();

        <com.opengamma.analytics.math.statistics.descriptive.IndexAboveQuantileMethod: com.opengamma.analytics.math.statistics.descriptive.IndexAboveQuantileMethod DEFAULT> = $r0;

        return;
    }
}
