public final class com.opengamma.analytics.math.interpolation.Interpolator1DFactory extends java.lang.Object
{
    public static final java.lang.String LINEAR;
    public static final java.lang.String EXPONENTIAL;
    public static final java.lang.String LOG_LINEAR;
    public static final java.lang.String NATURAL_CUBIC_SPLINE;
    public static final java.lang.String BARYCENTRIC_RATIONAL_FUNCTION;
    public static final java.lang.String POLYNOMIAL;
    public static final java.lang.String RATIONAL_FUNCTION;
    public static final java.lang.String STEP;
    public static final java.lang.String STEP_UPPER;
    public static final java.lang.String DOUBLE_QUADRATIC;
    public static final java.lang.String MONOTONIC_CUBIC;
    public static final java.lang.String PCHIP;
    public static final java.lang.String MOD_PCHIP;
    public static final java.lang.String TIME_SQUARE;
    public static final java.lang.String FLAT_EXTRAPOLATOR;
    public static final java.lang.String LINEAR_EXTRAPOLATOR;
    public static final java.lang.String LOG_LINEAR_EXTRAPOLATOR;
    public static final java.lang.String QUADRATIC_LEFT_EXTRAPOLATOR;
    public static final java.lang.String EXPONENTIAL_EXTRAPOLATOR;
    public static final java.lang.String ISDA_INTERPOLATOR;
    public static final java.lang.String ISDA_EXTRAPOLATOR;
    public static final com.opengamma.analytics.math.interpolation.LinearInterpolator1D LINEAR_INSTANCE;
    public static final com.opengamma.analytics.math.interpolation.ExponentialInterpolator1D EXPONENTIAL_INSTANCE;
    public static final com.opengamma.analytics.math.interpolation.LogLinearInterpolator1D LOG_LINEAR_INSTANCE;
    public static final com.opengamma.analytics.math.interpolation.NaturalCubicSplineInterpolator1D NATURAL_CUBIC_SPLINE_INSTANCE;
    public static final com.opengamma.analytics.math.interpolation.StepInterpolator1D STEP_INSTANCE;
    public static final com.opengamma.analytics.math.interpolation.StepUpperInterpolator1D STEP_UPPER_INSTANCE;
    public static final com.opengamma.analytics.math.interpolation.DoubleQuadraticInterpolator1D DOUBLE_QUADRATIC_INSTANCE;
    public static final com.opengamma.analytics.math.interpolation.PCHIPInterpolator1D MONOTONIC_CUBIC_INSTANCE;
    public static final com.opengamma.analytics.math.interpolation.PCHIPInterpolator1D PCHIP_INSTANCE;
    public static final com.opengamma.analytics.math.interpolation.PCHIPYieldCurveInterpolator1D MOD_PCHIP_INSTANCE;
    public static final com.opengamma.analytics.math.interpolation.TimeSquareInterpolator1D TIME_SQUARE_INSTANCE;
    public static final com.opengamma.analytics.math.interpolation.FlatExtrapolator1D FLAT_EXTRAPOLATOR_INSTANCE;
    public static final com.opengamma.analytics.math.interpolation.ExponentialExtrapolator1D EXPONENTIAL_EXTRAPOLATOR_INSTANCE;
    public static final java.lang.String CLAMPED_CUBIC;
    public static final com.opengamma.analytics.math.interpolation.ClampedCubicSplineInterpolator1D CLAMPED_CUBIC_INSTANCE;
    public static final java.lang.String CLAMPED_CUBIC_MONOTONE;
    public static final com.opengamma.analytics.math.interpolation.MonotonicityPreservingCubicSplineInterpolator1D CLAMPED_CUBIC_MONOTONE_INSTANCE;
    public static final java.lang.String CLAMPED_CUBIC_NONNEGATIVE;
    public static final com.opengamma.analytics.math.interpolation.NonnegativityPreservingCubicSplineInterpolator1D CLAMPED_CUBIC_NONNEGATIVE_INSTANCE;
    public static final java.lang.String CLAMPED_QUINTIC_MONOTONE;
    public static final com.opengamma.analytics.math.interpolation.MonotonicityPreservingQuinticSplineInterpolator1D CLAMPED_QUINTIC_MONOTONE_INSTANCE;
    public static final java.lang.String CLAMPED_QUINTIC_NONNEGATIVE;
    public static final com.opengamma.analytics.math.interpolation.NonnegativityPreservingQuinticSplineInterpolator1D CLAMPED_QUINTIC_NONNEGATIVE_INSTANCE;
    public static final java.lang.String NATURAL_CUBIC_MONOTONE;
    public static final com.opengamma.analytics.math.interpolation.MonotonicityPreservingCubicSplineInterpolator1D NATURAL_CUBIC_MONOTONE_INSTANCE;
    public static final java.lang.String NATURAL_CUBIC_NONNEGATIVE;
    public static final com.opengamma.analytics.math.interpolation.NonnegativityPreservingCubicSplineInterpolator1D NATURAL_CUBIC_NONNEGATIVE_INSTANCE;
    public static final java.lang.String NATURAL_QUINTIC_MONOTONE;
    public static final com.opengamma.analytics.math.interpolation.MonotonicityPreservingQuinticSplineInterpolator1D NATURAL_QUINTIC_MONOTONE_INSTANCE;
    public static final java.lang.String NATURAL_QUINTIC_NONNEGATIVE;
    public static final com.opengamma.analytics.math.interpolation.NonnegativityPreservingQuinticSplineInterpolator1D NATURAL_QUINTIC_NONNEGATIVE_INSTANCE;
    public static final java.lang.String NOTAKNOT_CUBIC;
    public static final com.opengamma.analytics.math.interpolation.NotAKnotCubicSplineInterpolator1D NOTAKNOT_CUBIC_INSTANCE;
    public static final java.lang.String NOTAKNOT_CUBIC_MONOTONE;
    public static final com.opengamma.analytics.math.interpolation.MonotonicityPreservingCubicSplineInterpolator1D NOTAKNOT_CUBIC_MONOTONE_INSTANCE;
    public static final java.lang.String NOTAKNOT_CUBIC_NONNEGATIVE;
    public static final com.opengamma.analytics.math.interpolation.NonnegativityPreservingCubicSplineInterpolator1D NOTAKNOT_CUBIC_NONNEGATIVE_INSTANCE;
    public static final java.lang.String NOTAKNOT_QUINTIC_MONOTONE;
    public static final com.opengamma.analytics.math.interpolation.MonotonicityPreservingQuinticSplineInterpolator1D NOTAKNOT_QUINTIC_MONOTONE_INSTANCE;
    public static final java.lang.String NOTAKNOT_QUINTIC_NONNEGATIVE;
    public static final com.opengamma.analytics.math.interpolation.NonnegativityPreservingQuinticSplineInterpolator1D NOTAKNOT_QUINTIC_NONNEGATIVE_INSTANCE;
    public static final java.lang.String CONSTRAINED_CUBIC;
    public static final com.opengamma.analytics.math.interpolation.ConstrainedCubicSplineInterpolator1D CONSTRAINED_CUBIC_INSTANCE;
    public static final java.lang.String CONSTRAINED_CUBIC_MONOTONE;
    public static final com.opengamma.analytics.math.interpolation.MonotonicityPreservingCubicSplineInterpolator1D CONSTRAINED_CUBIC_MONOTONE_INSTANCE;
    public static final java.lang.String CONSTRAINED_CUBIC_NONNEGATIVE;
    public static final com.opengamma.analytics.math.interpolation.NonnegativityPreservingCubicSplineInterpolator1D CONSTRAINED_CUBIC_NONNEGATIVE_INSTANCE;
    public static final java.lang.String AKIMA_CUBIC;
    public static final com.opengamma.analytics.math.interpolation.SemiLocalCubicSplineInterpolator1D AKIMA_CUBIC_INSTANCE;
    public static final java.lang.String AKIMA_CUBIC_MONOTONE;
    public static final com.opengamma.analytics.math.interpolation.MonotonicityPreservingCubicSplineInterpolator1D AKIMA_CUBIC_MONOTONE_INSTANCE;
    public static final java.lang.String AKIMA_CUBIC_NONNEGATIVE;
    public static final com.opengamma.analytics.math.interpolation.NonnegativityPreservingCubicSplineInterpolator1D AKIMA_CUBIC_NONNEGATIVE_INSTANCE;
    public static final java.lang.String MONOTONE_CONVEX_CUBIC;
    public static final com.opengamma.analytics.math.interpolation.MonotoneConvexSplineInterpolator1D MONOTONE_CONVEX_CUBIC_INSTANCE;
    public static final java.lang.String C2_SHAPE_PRESERVING_CUBIC;
    public static final com.opengamma.analytics.math.interpolation.ShapePreservingCubicSplineInterpolator1D C2_SHAPE_PRESERVING_CUBIC_INSTANCE;
    public static final java.lang.String LOG_NATURAL_CUBIC_MONOTONE;
    public static final com.opengamma.analytics.math.interpolation.LogNaturalCubicMonotonicityPreservingInterpolator1D LOG_NATURAL_CUBIC_MONOTONE_INSTANCE;
    public static final java.lang.String LOG_NATURAL_CUBIC;
    public static final com.opengamma.analytics.math.interpolation.LogNaturalCubicInterpolator1D LOG_NATURAL_CUBIC_INSTANCE;
    public static final java.lang.String LOG_NOTAKNOT_CUBIC;
    public static final com.opengamma.analytics.math.interpolation.LogNotAKnotCubicSplineInterpolator1D LOG_NOTAKNOT_CUBIC_INSTANCE;
    public static final java.lang.String LOG_CLAMPED_CUBIC;
    public static final com.opengamma.analytics.math.interpolation.LogClampedCubicSplineInterpolator1D LOG_CLAMPED_CUBIC_INSTANCE;
    public static final java.lang.String PRODUCT_NATURAL_CUBIC;
    public static final com.opengamma.analytics.math.interpolation.ProductPiecewisePolynomialInterpolator1D PRODUCT_NATURAL_CUBIC_INSTANCE;
    public static final java.lang.String PRODUCT_POLYNOMIAL_EXTRAPOLATOR;
    public static final java.lang.String RECIPROCAL_EXTRAPOLATOR;
    public static final java.lang.String SQUARE_LINEAR;
    public static final com.opengamma.analytics.math.interpolation.SquareLinearInterpolator1D SQUARE_LINEAR_INSTANCE;
    private static final java.util.Map s_staticInstances;
    private static final java.util.Map s_instanceNames;

    private void <init>()
    {
        com.opengamma.analytics.math.interpolation.Interpolator1DFactory r0;

        r0 := @this: com.opengamma.analytics.math.interpolation.Interpolator1DFactory;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static com.opengamma.analytics.math.interpolation.Interpolator1D getInterpolator(java.lang.String)
    {
        java.lang.String r0, $r8;
        com.opengamma.analytics.math.interpolation.Interpolator1D r1;
        java.util.Map $r2;
        java.lang.Object $r3;
        java.lang.IllegalArgumentException $r4;
        java.lang.StringBuilder $r5, $r6, $r7;

        r0 := @parameter0: java.lang.String;

        $r2 = <com.opengamma.analytics.math.interpolation.Interpolator1DFactory: java.util.Map s_staticInstances>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r0);

        r1 = (com.opengamma.analytics.math.interpolation.Interpolator1D) $r3;

        if r1 == null goto label1;

        return r1;

     label1:
        $r4 = new java.lang.IllegalArgumentException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Interpolator not handled: ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r8);

        throw $r4;
    }

    public static java.lang.String getInterpolatorName(com.opengamma.analytics.math.interpolation.Interpolator1D)
    {
        com.opengamma.analytics.math.interpolation.Interpolator1D r0;
        java.lang.String r1;
        java.util.Map $r2;
        java.lang.Class $r3;
        java.lang.Object $r4;
        boolean $z0, $z1, $z2, $z3, $z4;

        r0 := @parameter0: com.opengamma.analytics.math.interpolation.Interpolator1D;

        if r0 != null goto label1;

        return null;

     label1:
        $r2 = <com.opengamma.analytics.math.interpolation.Interpolator1DFactory: java.util.Map s_instanceNames>;

        $r3 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r4 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>($r3);

        r1 = (java.lang.String) $r4;

        $z0 = r0 instanceof com.opengamma.analytics.math.interpolation.LinearExtrapolator1D;

        if $z0 == 0 goto label2;

        return "LinearExtrapolator";

     label2:
        $z1 = r0 instanceof com.opengamma.analytics.math.interpolation.LogLinearExtrapolator1D;

        if $z1 == 0 goto label3;

        return "LogLinearExtrapolator";

     label3:
        $z2 = r0 instanceof com.opengamma.analytics.math.interpolation.QuadraticPolynomialLeftExtrapolator;

        if $z2 == 0 goto label4;

        return "QuadraticLeftExtrapolator";

     label4:
        $z3 = r0 instanceof com.opengamma.analytics.math.interpolation.ReciprocalExtrapolator1D;

        if $z3 == 0 goto label5;

        return "ReciprocalExtrapolator";

     label5:
        $z4 = r0 instanceof com.opengamma.analytics.math.interpolation.ProductPolynomialExtrapolator1D;

        if $z4 == 0 goto label6;

        return "ProductPolynomialExtrapolator";

     label6:
        return r1;
    }

    static void <clinit>()
    {
        com.opengamma.analytics.math.interpolation.LinearInterpolator1D $r2, $r62;
        com.opengamma.analytics.math.interpolation.ExponentialInterpolator1D $r3, $r65;
        com.opengamma.analytics.math.interpolation.LogLinearInterpolator1D $r4, $r68;
        com.opengamma.analytics.math.interpolation.NaturalCubicSplineInterpolator1D $r5, $r71;
        com.opengamma.analytics.math.interpolation.StepInterpolator1D $r6, $r74;
        com.opengamma.analytics.math.interpolation.StepUpperInterpolator1D $r7, $r77;
        com.opengamma.analytics.math.interpolation.DoubleQuadraticInterpolator1D $r8, $r80;
        com.opengamma.analytics.math.interpolation.PCHIPInterpolator1D $r9, $r10, $r83, $r86;
        com.opengamma.analytics.math.interpolation.PCHIPYieldCurveInterpolator1D $r11, $r89;
        com.opengamma.analytics.math.interpolation.TimeSquareInterpolator1D $r12, $r92;
        com.opengamma.analytics.math.interpolation.FlatExtrapolator1D $r13, $r95;
        com.opengamma.analytics.math.interpolation.ExponentialExtrapolator1D $r14, $r98;
        com.opengamma.analytics.math.interpolation.ClampedCubicSplineInterpolator1D $r15, $r101;
        com.opengamma.analytics.math.interpolation.MonotonicityPreservingCubicSplineInterpolator1D $r16, $r24, $r33, $r42, $r47, $r104, $r116, $r131, $r146, $r155;
        com.opengamma.analytics.math.interpolation.CubicSplineInterpolator $r17, $r19, $r21, $r23, $r34, $r36, $r38, $r40;
        com.opengamma.analytics.math.interpolation.NonnegativityPreservingCubicSplineInterpolator1D $r18, $r26, $r35, $r44, $r49, $r107, $r119, $r134, $r149, $r158;
        com.opengamma.analytics.math.interpolation.MonotonicityPreservingQuinticSplineInterpolator1D $r20, $r28, $r37, $r110, $r122, $r137;
        com.opengamma.analytics.math.interpolation.NonnegativityPreservingQuinticSplineInterpolator1D $r22, $r30, $r39, $r113, $r125, $r140;
        com.opengamma.analytics.math.interpolation.NaturalSplineInterpolator $r25, $r27, $r29, $r31, $r58;
        com.opengamma.analytics.math.interpolation.NotAKnotCubicSplineInterpolator1D $r32, $r128;
        com.opengamma.analytics.math.interpolation.ConstrainedCubicSplineInterpolator1D $r41, $r143;
        com.opengamma.analytics.math.interpolation.ConstrainedCubicSplineInterpolator $r43, $r45;
        com.opengamma.analytics.math.interpolation.SemiLocalCubicSplineInterpolator1D $r46, $r152;
        com.opengamma.analytics.math.interpolation.SemiLocalCubicSplineInterpolator $r48, $r50;
        com.opengamma.analytics.math.interpolation.MonotoneConvexSplineInterpolator1D $r51, $r161;
        com.opengamma.analytics.math.interpolation.ShapePreservingCubicSplineInterpolator1D $r52, $r164;
        com.opengamma.analytics.math.interpolation.LogNaturalCubicMonotonicityPreservingInterpolator1D $r53, $r167;
        com.opengamma.analytics.math.interpolation.LogNaturalCubicInterpolator1D $r54, $r170;
        com.opengamma.analytics.math.interpolation.LogNotAKnotCubicSplineInterpolator1D $r55, $r173;
        com.opengamma.analytics.math.interpolation.LogClampedCubicSplineInterpolator1D $r56, $r176;
        com.opengamma.analytics.math.interpolation.ProductPiecewisePolynomialInterpolator1D $r57, $r179;
        com.opengamma.analytics.math.interpolation.SquareLinearInterpolator1D $r59, $r182;
        java.util.HashMap $r60, $r61, $r185, $r186;

        <com.opengamma.analytics.math.interpolation.Interpolator1DFactory: java.lang.String SQUARE_LINEAR> = "SquareLinear";

        <com.opengamma.analytics.math.interpolation.Interpolator1DFactory: java.lang.String RECIPROCAL_EXTRAPOLATOR> = "ReciprocalExtrapolator";

        <com.opengamma.analytics.math.interpolation.Interpolator1DFactory: java.lang.String PRODUCT_POLYNOMIAL_EXTRAPOLATOR> = "ProductPolynomialExtrapolator";

        <com.opengamma.analytics.math.interpolation.Interpolator1DFactory: java.lang.String PRODUCT_NATURAL_CUBIC> = "ProductNaturalCubic";

        <com.opengamma.analytics.math.interpolation.Interpolator1DFactory: java.lang.String LOG_CLAMPED_CUBIC> = "LogClampedCubic";

        <com.opengamma.analytics.math.interpolation.Interpolator1DFactory: java.lang.String LOG_NOTAKNOT_CUBIC> = "LogNotAKnotCubic";

        <com.opengamma.analytics.math.interpolation.Interpolator1DFactory: java.lang.String LOG_NATURAL_CUBIC> = "LogNaturalCubic";

        <com.opengamma.analytics.math.interpolation.Interpolator1DFactory: java.lang.String LOG_NATURAL_CUBIC_MONOTONE> = "LogNaturalCubicWithMonotonicity";

        <com.opengamma.analytics.math.interpolation.Interpolator1DFactory: java.lang.String C2_SHAPE_PRESERVING_CUBIC> = "C2ShapePreservingCubicSpline";

        <com.opengamma.analytics.math.interpolation.Interpolator1DFactory: java.lang.String MONOTONE_CONVEX_CUBIC> = "MonotoneConvexCubicSpline";

        <com.opengamma.analytics.math.interpolation.Interpolator1DFactory: java.lang.String AKIMA_CUBIC_NONNEGATIVE> = "AkimaCubicSplineWithNonnegativity";

        <com.opengamma.analytics.math.interpolation.Interpolator1DFactory: java.lang.String AKIMA_CUBIC_MONOTONE> = "AkimaCubicSplineWithMonotonicity";

        <com.opengamma.analytics.math.interpolation.Interpolator1DFactory: java.lang.String AKIMA_CUBIC> = "AkimaCubicSpline";

        <com.opengamma.analytics.math.interpolation.Interpolator1DFactory: java.lang.String CONSTRAINED_CUBIC_NONNEGATIVE> = "ConstrainedCubicSplineWithNonnegativity";

        <com.opengamma.analytics.math.interpolation.Interpolator1DFactory: java.lang.String CONSTRAINED_CUBIC_MONOTONE> = "ConstrainedCubicSplineWithMonotonicity";

        <com.opengamma.analytics.math.interpolation.Interpolator1DFactory: java.lang.String CONSTRAINED_CUBIC> = "ConstrainedCubicSpline";

        <com.opengamma.analytics.math.interpolation.Interpolator1DFactory: java.lang.String NOTAKNOT_QUINTIC_NONNEGATIVE> = "NotAKnotQuinticSplineWithNonnegativity";

        <com.opengamma.analytics.math.interpolation.Interpolator1DFactory: java.lang.String NOTAKNOT_QUINTIC_MONOTONE> = "NotAKnotQuinticSplineWithMonotonicity";

        <com.opengamma.analytics.math.interpolation.Interpolator1DFactory: java.lang.String NOTAKNOT_CUBIC_NONNEGATIVE> = "NotAKnotCubicSplineWithNonnegativity";

        <com.opengamma.analytics.math.interpolation.Interpolator1DFactory: java.lang.String NOTAKNOT_CUBIC_MONOTONE> = "NotAKnotCubicSplineWithMonotonicity";

        <com.opengamma.analytics.math.interpolation.Interpolator1DFactory: java.lang.String NOTAKNOT_CUBIC> = "NotAKnotCubicSpline";

        <com.opengamma.analytics.math.interpolation.Interpolator1DFactory: java.lang.String NATURAL_QUINTIC_NONNEGATIVE> = "NaturalQuinticSplineWithNonnegativity";

        <com.opengamma.analytics.math.interpolation.Interpolator1DFactory: java.lang.String NATURAL_QUINTIC_MONOTONE> = "NaturalQuinticSplineWithMonotonicity";

        <com.opengamma.analytics.math.interpolation.Interpolator1DFactory: java.lang.String NATURAL_CUBIC_NONNEGATIVE> = "NaturalCubicSplineWithNonnegativity";

        <com.opengamma.analytics.math.interpolation.Interpolator1DFactory: java.lang.String NATURAL_CUBIC_MONOTONE> = "NaturalCubicSplineWithMonotonicity";

        <com.opengamma.analytics.math.interpolation.Interpolator1DFactory: java.lang.String CLAMPED_QUINTIC_NONNEGATIVE> = "ClampedQuinticSplineWithNonnegativity";

        <com.opengamma.analytics.math.interpolation.Interpolator1DFactory: java.lang.String CLAMPED_QUINTIC_MONOTONE> = "ClampedQuinticSplineWithMonotonicity";

        <com.opengamma.analytics.math.interpolation.Interpolator1DFactory: java.lang.String CLAMPED_CUBIC_NONNEGATIVE> = "ClampedCubicSplineWithNonnegativity";

        <com.opengamma.analytics.math.interpolation.Interpolator1DFactory: java.lang.String CLAMPED_CUBIC_MONOTONE> = "ClampedCubicSplineWithMonotonicity";

        <com.opengamma.analytics.math.interpolation.Interpolator1DFactory: java.lang.String CLAMPED_CUBIC> = "ClampedCubicSpline";

        <com.opengamma.analytics.math.interpolation.Interpolator1DFactory: java.lang.String ISDA_EXTRAPOLATOR> = "ISDAExtrapolator";

        <com.opengamma.analytics.math.interpolation.Interpolator1DFactory: java.lang.String ISDA_INTERPOLATOR> = "ISDAInterpolator";

        <com.opengamma.analytics.math.interpolation.Interpolator1DFactory: java.lang.String EXPONENTIAL_EXTRAPOLATOR> = "ExponentialExtrapolator";

        <com.opengamma.analytics.math.interpolation.Interpolator1DFactory: java.lang.String QUADRATIC_LEFT_EXTRAPOLATOR> = "QuadraticLeftExtrapolator";

        <com.opengamma.analytics.math.interpolation.Interpolator1DFactory: java.lang.String LOG_LINEAR_EXTRAPOLATOR> = "LogLinearExtrapolator";

        <com.opengamma.analytics.math.interpolation.Interpolator1DFactory: java.lang.String LINEAR_EXTRAPOLATOR> = "LinearExtrapolator";

        <com.opengamma.analytics.math.interpolation.Interpolator1DFactory: java.lang.String FLAT_EXTRAPOLATOR> = "FlatExtrapolator";

        <com.opengamma.analytics.math.interpolation.Interpolator1DFactory: java.lang.String TIME_SQUARE> = "TimeSquare";

        <com.opengamma.analytics.math.interpolation.Interpolator1DFactory: java.lang.String MOD_PCHIP> = "ModifiedPCHIP";

        <com.opengamma.analytics.math.interpolation.Interpolator1DFactory: java.lang.String PCHIP> = "PCHIP";

        <com.opengamma.analytics.math.interpolation.Interpolator1DFactory: java.lang.String MONOTONIC_CUBIC> = "MonotonicityPreservingCubicSpline";

        <com.opengamma.analytics.math.interpolation.Interpolator1DFactory: java.lang.String DOUBLE_QUADRATIC> = "DoubleQuadratic";

        <com.opengamma.analytics.math.interpolation.Interpolator1DFactory: java.lang.String STEP_UPPER> = "StepUpper";

        <com.opengamma.analytics.math.interpolation.Interpolator1DFactory: java.lang.String STEP> = "Step";

        <com.opengamma.analytics.math.interpolation.Interpolator1DFactory: java.lang.String RATIONAL_FUNCTION> = "RationalFunction";

        <com.opengamma.analytics.math.interpolation.Interpolator1DFactory: java.lang.String POLYNOMIAL> = "Polynomial";

        <com.opengamma.analytics.math.interpolation.Interpolator1DFactory: java.lang.String BARYCENTRIC_RATIONAL_FUNCTION> = "BarycentricRationalFunction";

        <com.opengamma.analytics.math.interpolation.Interpolator1DFactory: java.lang.String NATURAL_CUBIC_SPLINE> = "NaturalCubicSpline";

        <com.opengamma.analytics.math.interpolation.Interpolator1DFactory: java.lang.String LOG_LINEAR> = "LogLinear";

        <com.opengamma.analytics.math.interpolation.Interpolator1DFactory: java.lang.String EXPONENTIAL> = "Exponential";

        <com.opengamma.analytics.math.interpolation.Interpolator1DFactory: java.lang.String LINEAR> = "Linear";

        $r2 = new com.opengamma.analytics.math.interpolation.LinearInterpolator1D;

        specialinvoke $r2.<com.opengamma.analytics.math.interpolation.LinearInterpolator1D: void <init>()>();

        <com.opengamma.analytics.math.interpolation.Interpolator1DFactory: com.opengamma.analytics.math.interpolation.LinearInterpolator1D LINEAR_INSTANCE> = $r2;

        $r3 = new com.opengamma.analytics.math.interpolation.ExponentialInterpolator1D;

        specialinvoke $r3.<com.opengamma.analytics.math.interpolation.ExponentialInterpolator1D: void <init>()>();

        <com.opengamma.analytics.math.interpolation.Interpolator1DFactory: com.opengamma.analytics.math.interpolation.ExponentialInterpolator1D EXPONENTIAL_INSTANCE> = $r3;

        $r4 = new com.opengamma.analytics.math.interpolation.LogLinearInterpolator1D;

        specialinvoke $r4.<com.opengamma.analytics.math.interpolation.LogLinearInterpolator1D: void <init>()>();

        <com.opengamma.analytics.math.interpolation.Interpolator1DFactory: com.opengamma.analytics.math.interpolation.LogLinearInterpolator1D LOG_LINEAR_INSTANCE> = $r4;

        $r5 = new com.opengamma.analytics.math.interpolation.NaturalCubicSplineInterpolator1D;

        specialinvoke $r5.<com.opengamma.analytics.math.interpolation.NaturalCubicSplineInterpolator1D: void <init>()>();

        <com.opengamma.analytics.math.interpolation.Interpolator1DFactory: com.opengamma.analytics.math.interpolation.NaturalCubicSplineInterpolator1D NATURAL_CUBIC_SPLINE_INSTANCE> = $r5;

        $r6 = new com.opengamma.analytics.math.interpolation.StepInterpolator1D;

        specialinvoke $r6.<com.opengamma.analytics.math.interpolation.StepInterpolator1D: void <init>()>();

        <com.opengamma.analytics.math.interpolation.Interpolator1DFactory: com.opengamma.analytics.math.interpolation.StepInterpolator1D STEP_INSTANCE> = $r6;

        $r7 = new com.opengamma.analytics.math.interpolation.StepUpperInterpolator1D;

        specialinvoke $r7.<com.opengamma.analytics.math.interpolation.StepUpperInterpolator1D: void <init>()>();

        <com.opengamma.analytics.math.interpolation.Interpolator1DFactory: com.opengamma.analytics.math.interpolation.StepUpperInterpolator1D STEP_UPPER_INSTANCE> = $r7;

        $r8 = new com.opengamma.analytics.math.interpolation.DoubleQuadraticInterpolator1D;

        specialinvoke $r8.<com.opengamma.analytics.math.interpolation.DoubleQuadraticInterpolator1D: void <init>()>();

        <com.opengamma.analytics.math.interpolation.Interpolator1DFactory: com.opengamma.analytics.math.interpolation.DoubleQuadraticInterpolator1D DOUBLE_QUADRATIC_INSTANCE> = $r8;

        $r9 = new com.opengamma.analytics.math.interpolation.PCHIPInterpolator1D;

        specialinvoke $r9.<com.opengamma.analytics.math.interpolation.PCHIPInterpolator1D: void <init>()>();

        <com.opengamma.analytics.math.interpolation.Interpolator1DFactory: com.opengamma.analytics.math.interpolation.PCHIPInterpolator1D MONOTONIC_CUBIC_INSTANCE> = $r9;

        $r10 = new com.opengamma.analytics.math.interpolation.PCHIPInterpolator1D;

        specialinvoke $r10.<com.opengamma.analytics.math.interpolation.PCHIPInterpolator1D: void <init>()>();

        <com.opengamma.analytics.math.interpolation.Interpolator1DFactory: com.opengamma.analytics.math.interpolation.PCHIPInterpolator1D PCHIP_INSTANCE> = $r10;

        $r11 = new com.opengamma.analytics.math.interpolation.PCHIPYieldCurveInterpolator1D;

        specialinvoke $r11.<com.opengamma.analytics.math.interpolation.PCHIPYieldCurveInterpolator1D: void <init>()>();

        <com.opengamma.analytics.math.interpolation.Interpolator1DFactory: com.opengamma.analytics.math.interpolation.PCHIPYieldCurveInterpolator1D MOD_PCHIP_INSTANCE> = $r11;

        $r12 = new com.opengamma.analytics.math.interpolation.TimeSquareInterpolator1D;

        specialinvoke $r12.<com.opengamma.analytics.math.interpolation.TimeSquareInterpolator1D: void <init>()>();

        <com.opengamma.analytics.math.interpolation.Interpolator1DFactory: com.opengamma.analytics.math.interpolation.TimeSquareInterpolator1D TIME_SQUARE_INSTANCE> = $r12;

        $r13 = new com.opengamma.analytics.math.interpolation.FlatExtrapolator1D;

        specialinvoke $r13.<com.opengamma.analytics.math.interpolation.FlatExtrapolator1D: void <init>()>();

        <com.opengamma.analytics.math.interpolation.Interpolator1DFactory: com.opengamma.analytics.math.interpolation.FlatExtrapolator1D FLAT_EXTRAPOLATOR_INSTANCE> = $r13;

        $r14 = new com.opengamma.analytics.math.interpolation.ExponentialExtrapolator1D;

        specialinvoke $r14.<com.opengamma.analytics.math.interpolation.ExponentialExtrapolator1D: void <init>()>();

        <com.opengamma.analytics.math.interpolation.Interpolator1DFactory: com.opengamma.analytics.math.interpolation.ExponentialExtrapolator1D EXPONENTIAL_EXTRAPOLATOR_INSTANCE> = $r14;

        $r15 = new com.opengamma.analytics.math.interpolation.ClampedCubicSplineInterpolator1D;

        specialinvoke $r15.<com.opengamma.analytics.math.interpolation.ClampedCubicSplineInterpolator1D: void <init>()>();

        <com.opengamma.analytics.math.interpolation.Interpolator1DFactory: com.opengamma.analytics.math.interpolation.ClampedCubicSplineInterpolator1D CLAMPED_CUBIC_INSTANCE> = $r15;

        $r16 = new com.opengamma.analytics.math.interpolation.MonotonicityPreservingCubicSplineInterpolator1D;

        $r17 = new com.opengamma.analytics.math.interpolation.CubicSplineInterpolator;

        specialinvoke $r17.<com.opengamma.analytics.math.interpolation.CubicSplineInterpolator: void <init>()>();

        specialinvoke $r16.<com.opengamma.analytics.math.interpolation.MonotonicityPreservingCubicSplineInterpolator1D: void <init>(com.opengamma.analytics.math.interpolation.PiecewisePolynomialInterpolator)>($r17);

        <com.opengamma.analytics.math.interpolation.Interpolator1DFactory: com.opengamma.analytics.math.interpolation.MonotonicityPreservingCubicSplineInterpolator1D CLAMPED_CUBIC_MONOTONE_INSTANCE> = $r16;

        $r18 = new com.opengamma.analytics.math.interpolation.NonnegativityPreservingCubicSplineInterpolator1D;

        $r19 = new com.opengamma.analytics.math.interpolation.CubicSplineInterpolator;

        specialinvoke $r19.<com.opengamma.analytics.math.interpolation.CubicSplineInterpolator: void <init>()>();

        specialinvoke $r18.<com.opengamma.analytics.math.interpolation.NonnegativityPreservingCubicSplineInterpolator1D: void <init>(com.opengamma.analytics.math.interpolation.PiecewisePolynomialInterpolator)>($r19);

        <com.opengamma.analytics.math.interpolation.Interpolator1DFactory: com.opengamma.analytics.math.interpolation.NonnegativityPreservingCubicSplineInterpolator1D CLAMPED_CUBIC_NONNEGATIVE_INSTANCE> = $r18;

        $r20 = new com.opengamma.analytics.math.interpolation.MonotonicityPreservingQuinticSplineInterpolator1D;

        $r21 = new com.opengamma.analytics.math.interpolation.CubicSplineInterpolator;

        specialinvoke $r21.<com.opengamma.analytics.math.interpolation.CubicSplineInterpolator: void <init>()>();

        specialinvoke $r20.<com.opengamma.analytics.math.interpolation.MonotonicityPreservingQuinticSplineInterpolator1D: void <init>(com.opengamma.analytics.math.interpolation.PiecewisePolynomialInterpolator)>($r21);

        <com.opengamma.analytics.math.interpolation.Interpolator1DFactory: com.opengamma.analytics.math.interpolation.MonotonicityPreservingQuinticSplineInterpolator1D CLAMPED_QUINTIC_MONOTONE_INSTANCE> = $r20;

        $r22 = new com.opengamma.analytics.math.interpolation.NonnegativityPreservingQuinticSplineInterpolator1D;

        $r23 = new com.opengamma.analytics.math.interpolation.CubicSplineInterpolator;

        specialinvoke $r23.<com.opengamma.analytics.math.interpolation.CubicSplineInterpolator: void <init>()>();

        specialinvoke $r22.<com.opengamma.analytics.math.interpolation.NonnegativityPreservingQuinticSplineInterpolator1D: void <init>(com.opengamma.analytics.math.interpolation.PiecewisePolynomialInterpolator)>($r23);

        <com.opengamma.analytics.math.interpolation.Interpolator1DFactory: com.opengamma.analytics.math.interpolation.NonnegativityPreservingQuinticSplineInterpolator1D CLAMPED_QUINTIC_NONNEGATIVE_INSTANCE> = $r22;

        $r24 = new com.opengamma.analytics.math.interpolation.MonotonicityPreservingCubicSplineInterpolator1D;

        $r25 = new com.opengamma.analytics.math.interpolation.NaturalSplineInterpolator;

        specialinvoke $r25.<com.opengamma.analytics.math.interpolation.NaturalSplineInterpolator: void <init>()>();

        specialinvoke $r24.<com.opengamma.analytics.math.interpolation.MonotonicityPreservingCubicSplineInterpolator1D: void <init>(com.opengamma.analytics.math.interpolation.PiecewisePolynomialInterpolator)>($r25);

        <com.opengamma.analytics.math.interpolation.Interpolator1DFactory: com.opengamma.analytics.math.interpolation.MonotonicityPreservingCubicSplineInterpolator1D NATURAL_CUBIC_MONOTONE_INSTANCE> = $r24;

        $r26 = new com.opengamma.analytics.math.interpolation.NonnegativityPreservingCubicSplineInterpolator1D;

        $r27 = new com.opengamma.analytics.math.interpolation.NaturalSplineInterpolator;

        specialinvoke $r27.<com.opengamma.analytics.math.interpolation.NaturalSplineInterpolator: void <init>()>();

        specialinvoke $r26.<com.opengamma.analytics.math.interpolation.NonnegativityPreservingCubicSplineInterpolator1D: void <init>(com.opengamma.analytics.math.interpolation.PiecewisePolynomialInterpolator)>($r27);

        <com.opengamma.analytics.math.interpolation.Interpolator1DFactory: com.opengamma.analytics.math.interpolation.NonnegativityPreservingCubicSplineInterpolator1D NATURAL_CUBIC_NONNEGATIVE_INSTANCE> = $r26;

        $r28 = new com.opengamma.analytics.math.interpolation.MonotonicityPreservingQuinticSplineInterpolator1D;

        $r29 = new com.opengamma.analytics.math.interpolation.NaturalSplineInterpolator;

        specialinvoke $r29.<com.opengamma.analytics.math.interpolation.NaturalSplineInterpolator: void <init>()>();

        specialinvoke $r28.<com.opengamma.analytics.math.interpolation.MonotonicityPreservingQuinticSplineInterpolator1D: void <init>(com.opengamma.analytics.math.interpolation.PiecewisePolynomialInterpolator)>($r29);

        <com.opengamma.analytics.math.interpolation.Interpolator1DFactory: com.opengamma.analytics.math.interpolation.MonotonicityPreservingQuinticSplineInterpolator1D NATURAL_QUINTIC_MONOTONE_INSTANCE> = $r28;

        $r30 = new com.opengamma.analytics.math.interpolation.NonnegativityPreservingQuinticSplineInterpolator1D;

        $r31 = new com.opengamma.analytics.math.interpolation.NaturalSplineInterpolator;

        specialinvoke $r31.<com.opengamma.analytics.math.interpolation.NaturalSplineInterpolator: void <init>()>();

        specialinvoke $r30.<com.opengamma.analytics.math.interpolation.NonnegativityPreservingQuinticSplineInterpolator1D: void <init>(com.opengamma.analytics.math.interpolation.PiecewisePolynomialInterpolator)>($r31);

        <com.opengamma.analytics.math.interpolation.Interpolator1DFactory: com.opengamma.analytics.math.interpolation.NonnegativityPreservingQuinticSplineInterpolator1D NATURAL_QUINTIC_NONNEGATIVE_INSTANCE> = $r30;

        $r32 = new com.opengamma.analytics.math.interpolation.NotAKnotCubicSplineInterpolator1D;

        specialinvoke $r32.<com.opengamma.analytics.math.interpolation.NotAKnotCubicSplineInterpolator1D: void <init>()>();

        <com.opengamma.analytics.math.interpolation.Interpolator1DFactory: com.opengamma.analytics.math.interpolation.NotAKnotCubicSplineInterpolator1D NOTAKNOT_CUBIC_INSTANCE> = $r32;

        $r33 = new com.opengamma.analytics.math.interpolation.MonotonicityPreservingCubicSplineInterpolator1D;

        $r34 = new com.opengamma.analytics.math.interpolation.CubicSplineInterpolator;

        specialinvoke $r34.<com.opengamma.analytics.math.interpolation.CubicSplineInterpolator: void <init>()>();

        specialinvoke $r33.<com.opengamma.analytics.math.interpolation.MonotonicityPreservingCubicSplineInterpolator1D: void <init>(com.opengamma.analytics.math.interpolation.PiecewisePolynomialInterpolator)>($r34);

        <com.opengamma.analytics.math.interpolation.Interpolator1DFactory: com.opengamma.analytics.math.interpolation.MonotonicityPreservingCubicSplineInterpolator1D NOTAKNOT_CUBIC_MONOTONE_INSTANCE> = $r33;

        $r35 = new com.opengamma.analytics.math.interpolation.NonnegativityPreservingCubicSplineInterpolator1D;

        $r36 = new com.opengamma.analytics.math.interpolation.CubicSplineInterpolator;

        specialinvoke $r36.<com.opengamma.analytics.math.interpolation.CubicSplineInterpolator: void <init>()>();

        specialinvoke $r35.<com.opengamma.analytics.math.interpolation.NonnegativityPreservingCubicSplineInterpolator1D: void <init>(com.opengamma.analytics.math.interpolation.PiecewisePolynomialInterpolator)>($r36);

        <com.opengamma.analytics.math.interpolation.Interpolator1DFactory: com.opengamma.analytics.math.interpolation.NonnegativityPreservingCubicSplineInterpolator1D NOTAKNOT_CUBIC_NONNEGATIVE_INSTANCE> = $r35;

        $r37 = new com.opengamma.analytics.math.interpolation.MonotonicityPreservingQuinticSplineInterpolator1D;

        $r38 = new com.opengamma.analytics.math.interpolation.CubicSplineInterpolator;

        specialinvoke $r38.<com.opengamma.analytics.math.interpolation.CubicSplineInterpolator: void <init>()>();

        specialinvoke $r37.<com.opengamma.analytics.math.interpolation.MonotonicityPreservingQuinticSplineInterpolator1D: void <init>(com.opengamma.analytics.math.interpolation.PiecewisePolynomialInterpolator)>($r38);

        <com.opengamma.analytics.math.interpolation.Interpolator1DFactory: com.opengamma.analytics.math.interpolation.MonotonicityPreservingQuinticSplineInterpolator1D NOTAKNOT_QUINTIC_MONOTONE_INSTANCE> = $r37;

        $r39 = new com.opengamma.analytics.math.interpolation.NonnegativityPreservingQuinticSplineInterpolator1D;

        $r40 = new com.opengamma.analytics.math.interpolation.CubicSplineInterpolator;

        specialinvoke $r40.<com.opengamma.analytics.math.interpolation.CubicSplineInterpolator: void <init>()>();

        specialinvoke $r39.<com.opengamma.analytics.math.interpolation.NonnegativityPreservingQuinticSplineInterpolator1D: void <init>(com.opengamma.analytics.math.interpolation.PiecewisePolynomialInterpolator)>($r40);

        <com.opengamma.analytics.math.interpolation.Interpolator1DFactory: com.opengamma.analytics.math.interpolation.NonnegativityPreservingQuinticSplineInterpolator1D NOTAKNOT_QUINTIC_NONNEGATIVE_INSTANCE> = $r39;

        $r41 = new com.opengamma.analytics.math.interpolation.ConstrainedCubicSplineInterpolator1D;

        specialinvoke $r41.<com.opengamma.analytics.math.interpolation.ConstrainedCubicSplineInterpolator1D: void <init>()>();

        <com.opengamma.analytics.math.interpolation.Interpolator1DFactory: com.opengamma.analytics.math.interpolation.ConstrainedCubicSplineInterpolator1D CONSTRAINED_CUBIC_INSTANCE> = $r41;

        $r42 = new com.opengamma.analytics.math.interpolation.MonotonicityPreservingCubicSplineInterpolator1D;

        $r43 = new com.opengamma.analytics.math.interpolation.ConstrainedCubicSplineInterpolator;

        specialinvoke $r43.<com.opengamma.analytics.math.interpolation.ConstrainedCubicSplineInterpolator: void <init>()>();

        specialinvoke $r42.<com.opengamma.analytics.math.interpolation.MonotonicityPreservingCubicSplineInterpolator1D: void <init>(com.opengamma.analytics.math.interpolation.PiecewisePolynomialInterpolator)>($r43);

        <com.opengamma.analytics.math.interpolation.Interpolator1DFactory: com.opengamma.analytics.math.interpolation.MonotonicityPreservingCubicSplineInterpolator1D CONSTRAINED_CUBIC_MONOTONE_INSTANCE> = $r42;

        $r44 = new com.opengamma.analytics.math.interpolation.NonnegativityPreservingCubicSplineInterpolator1D;

        $r45 = new com.opengamma.analytics.math.interpolation.ConstrainedCubicSplineInterpolator;

        specialinvoke $r45.<com.opengamma.analytics.math.interpolation.ConstrainedCubicSplineInterpolator: void <init>()>();

        specialinvoke $r44.<com.opengamma.analytics.math.interpolation.NonnegativityPreservingCubicSplineInterpolator1D: void <init>(com.opengamma.analytics.math.interpolation.PiecewisePolynomialInterpolator)>($r45);

        <com.opengamma.analytics.math.interpolation.Interpolator1DFactory: com.opengamma.analytics.math.interpolation.NonnegativityPreservingCubicSplineInterpolator1D CONSTRAINED_CUBIC_NONNEGATIVE_INSTANCE> = $r44;

        $r46 = new com.opengamma.analytics.math.interpolation.SemiLocalCubicSplineInterpolator1D;

        specialinvoke $r46.<com.opengamma.analytics.math.interpolation.SemiLocalCubicSplineInterpolator1D: void <init>()>();

        <com.opengamma.analytics.math.interpolation.Interpolator1DFactory: com.opengamma.analytics.math.interpolation.SemiLocalCubicSplineInterpolator1D AKIMA_CUBIC_INSTANCE> = $r46;

        $r47 = new com.opengamma.analytics.math.interpolation.MonotonicityPreservingCubicSplineInterpolator1D;

        $r48 = new com.opengamma.analytics.math.interpolation.SemiLocalCubicSplineInterpolator;

        specialinvoke $r48.<com.opengamma.analytics.math.interpolation.SemiLocalCubicSplineInterpolator: void <init>()>();

        specialinvoke $r47.<com.opengamma.analytics.math.interpolation.MonotonicityPreservingCubicSplineInterpolator1D: void <init>(com.opengamma.analytics.math.interpolation.PiecewisePolynomialInterpolator)>($r48);

        <com.opengamma.analytics.math.interpolation.Interpolator1DFactory: com.opengamma.analytics.math.interpolation.MonotonicityPreservingCubicSplineInterpolator1D AKIMA_CUBIC_MONOTONE_INSTANCE> = $r47;

        $r49 = new com.opengamma.analytics.math.interpolation.NonnegativityPreservingCubicSplineInterpolator1D;

        $r50 = new com.opengamma.analytics.math.interpolation.SemiLocalCubicSplineInterpolator;

        specialinvoke $r50.<com.opengamma.analytics.math.interpolation.SemiLocalCubicSplineInterpolator: void <init>()>();

        specialinvoke $r49.<com.opengamma.analytics.math.interpolation.NonnegativityPreservingCubicSplineInterpolator1D: void <init>(com.opengamma.analytics.math.interpolation.PiecewisePolynomialInterpolator)>($r50);

        <com.opengamma.analytics.math.interpolation.Interpolator1DFactory: com.opengamma.analytics.math.interpolation.NonnegativityPreservingCubicSplineInterpolator1D AKIMA_CUBIC_NONNEGATIVE_INSTANCE> = $r49;

        $r51 = new com.opengamma.analytics.math.interpolation.MonotoneConvexSplineInterpolator1D;

        specialinvoke $r51.<com.opengamma.analytics.math.interpolation.MonotoneConvexSplineInterpolator1D: void <init>()>();

        <com.opengamma.analytics.math.interpolation.Interpolator1DFactory: com.opengamma.analytics.math.interpolation.MonotoneConvexSplineInterpolator1D MONOTONE_CONVEX_CUBIC_INSTANCE> = $r51;

        $r52 = new com.opengamma.analytics.math.interpolation.ShapePreservingCubicSplineInterpolator1D;

        specialinvoke $r52.<com.opengamma.analytics.math.interpolation.ShapePreservingCubicSplineInterpolator1D: void <init>()>();

        <com.opengamma.analytics.math.interpolation.Interpolator1DFactory: com.opengamma.analytics.math.interpolation.ShapePreservingCubicSplineInterpolator1D C2_SHAPE_PRESERVING_CUBIC_INSTANCE> = $r52;

        $r53 = new com.opengamma.analytics.math.interpolation.LogNaturalCubicMonotonicityPreservingInterpolator1D;

        specialinvoke $r53.<com.opengamma.analytics.math.interpolation.LogNaturalCubicMonotonicityPreservingInterpolator1D: void <init>()>();

        <com.opengamma.analytics.math.interpolation.Interpolator1DFactory: com.opengamma.analytics.math.interpolation.LogNaturalCubicMonotonicityPreservingInterpolator1D LOG_NATURAL_CUBIC_MONOTONE_INSTANCE> = $r53;

        $r54 = new com.opengamma.analytics.math.interpolation.LogNaturalCubicInterpolator1D;

        specialinvoke $r54.<com.opengamma.analytics.math.interpolation.LogNaturalCubicInterpolator1D: void <init>()>();

        <com.opengamma.analytics.math.interpolation.Interpolator1DFactory: com.opengamma.analytics.math.interpolation.LogNaturalCubicInterpolator1D LOG_NATURAL_CUBIC_INSTANCE> = $r54;

        $r55 = new com.opengamma.analytics.math.interpolation.LogNotAKnotCubicSplineInterpolator1D;

        specialinvoke $r55.<com.opengamma.analytics.math.interpolation.LogNotAKnotCubicSplineInterpolator1D: void <init>()>();

        <com.opengamma.analytics.math.interpolation.Interpolator1DFactory: com.opengamma.analytics.math.interpolation.LogNotAKnotCubicSplineInterpolator1D LOG_NOTAKNOT_CUBIC_INSTANCE> = $r55;

        $r56 = new com.opengamma.analytics.math.interpolation.LogClampedCubicSplineInterpolator1D;

        specialinvoke $r56.<com.opengamma.analytics.math.interpolation.LogClampedCubicSplineInterpolator1D: void <init>()>();

        <com.opengamma.analytics.math.interpolation.Interpolator1DFactory: com.opengamma.analytics.math.interpolation.LogClampedCubicSplineInterpolator1D LOG_CLAMPED_CUBIC_INSTANCE> = $r56;

        $r57 = new com.opengamma.analytics.math.interpolation.ProductPiecewisePolynomialInterpolator1D;

        $r58 = new com.opengamma.analytics.math.interpolation.NaturalSplineInterpolator;

        specialinvoke $r58.<com.opengamma.analytics.math.interpolation.NaturalSplineInterpolator: void <init>()>();

        specialinvoke $r57.<com.opengamma.analytics.math.interpolation.ProductPiecewisePolynomialInterpolator1D: void <init>(com.opengamma.analytics.math.interpolation.PiecewisePolynomialInterpolator)>($r58);

        <com.opengamma.analytics.math.interpolation.Interpolator1DFactory: com.opengamma.analytics.math.interpolation.ProductPiecewisePolynomialInterpolator1D PRODUCT_NATURAL_CUBIC_INSTANCE> = $r57;

        $r59 = new com.opengamma.analytics.math.interpolation.SquareLinearInterpolator1D;

        specialinvoke $r59.<com.opengamma.analytics.math.interpolation.SquareLinearInterpolator1D: void <init>()>();

        <com.opengamma.analytics.math.interpolation.Interpolator1DFactory: com.opengamma.analytics.math.interpolation.SquareLinearInterpolator1D SQUARE_LINEAR_INSTANCE> = $r59;

        $r60 = new java.util.HashMap;

        specialinvoke $r60.<java.util.HashMap: void <init>()>();

        $r61 = new java.util.HashMap;

        specialinvoke $r61.<java.util.HashMap: void <init>()>();

        $r62 = <com.opengamma.analytics.math.interpolation.Interpolator1DFactory: com.opengamma.analytics.math.interpolation.LinearInterpolator1D LINEAR_INSTANCE>;

        interfaceinvoke $r60.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("Linear", $r62);

        interfaceinvoke $r61.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(class "com/opengamma/analytics/math/interpolation/LinearInterpolator1D", "Linear");

        $r65 = <com.opengamma.analytics.math.interpolation.Interpolator1DFactory: com.opengamma.analytics.math.interpolation.ExponentialInterpolator1D EXPONENTIAL_INSTANCE>;

        interfaceinvoke $r60.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("Exponential", $r65);

        interfaceinvoke $r61.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(class "com/opengamma/analytics/math/interpolation/ExponentialInterpolator1D", "Exponential");

        $r68 = <com.opengamma.analytics.math.interpolation.Interpolator1DFactory: com.opengamma.analytics.math.interpolation.LogLinearInterpolator1D LOG_LINEAR_INSTANCE>;

        interfaceinvoke $r60.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("LogLinear", $r68);

        interfaceinvoke $r61.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(class "com/opengamma/analytics/math/interpolation/LogLinearInterpolator1D", "LogLinear");

        $r71 = <com.opengamma.analytics.math.interpolation.Interpolator1DFactory: com.opengamma.analytics.math.interpolation.NaturalCubicSplineInterpolator1D NATURAL_CUBIC_SPLINE_INSTANCE>;

        interfaceinvoke $r60.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("NaturalCubicSpline", $r71);

        interfaceinvoke $r61.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(class "com/opengamma/analytics/math/interpolation/NaturalCubicSplineInterpolator1D", "NaturalCubicSpline");

        $r74 = <com.opengamma.analytics.math.interpolation.Interpolator1DFactory: com.opengamma.analytics.math.interpolation.StepInterpolator1D STEP_INSTANCE>;

        interfaceinvoke $r60.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("Step", $r74);

        interfaceinvoke $r61.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(class "com/opengamma/analytics/math/interpolation/StepInterpolator1D", "Step");

        $r77 = <com.opengamma.analytics.math.interpolation.Interpolator1DFactory: com.opengamma.analytics.math.interpolation.StepUpperInterpolator1D STEP_UPPER_INSTANCE>;

        interfaceinvoke $r60.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("StepUpper", $r77);

        interfaceinvoke $r61.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(class "com/opengamma/analytics/math/interpolation/StepUpperInterpolator1D", "StepUpper");

        $r80 = <com.opengamma.analytics.math.interpolation.Interpolator1DFactory: com.opengamma.analytics.math.interpolation.DoubleQuadraticInterpolator1D DOUBLE_QUADRATIC_INSTANCE>;

        interfaceinvoke $r60.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("DoubleQuadratic", $r80);

        interfaceinvoke $r61.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(class "com/opengamma/analytics/math/interpolation/DoubleQuadraticInterpolator1D", "DoubleQuadratic");

        $r83 = <com.opengamma.analytics.math.interpolation.Interpolator1DFactory: com.opengamma.analytics.math.interpolation.PCHIPInterpolator1D MONOTONIC_CUBIC_INSTANCE>;

        interfaceinvoke $r60.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("MonotonicityPreservingCubicSpline", $r83);

        interfaceinvoke $r61.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(class "com/opengamma/analytics/math/interpolation/PCHIPInterpolator1D", "MonotonicityPreservingCubicSpline");

        $r86 = <com.opengamma.analytics.math.interpolation.Interpolator1DFactory: com.opengamma.analytics.math.interpolation.PCHIPInterpolator1D PCHIP_INSTANCE>;

        interfaceinvoke $r60.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("PCHIP", $r86);

        interfaceinvoke $r61.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(class "com/opengamma/analytics/math/interpolation/PCHIPInterpolator1D", "PCHIP");

        $r89 = <com.opengamma.analytics.math.interpolation.Interpolator1DFactory: com.opengamma.analytics.math.interpolation.PCHIPYieldCurveInterpolator1D MOD_PCHIP_INSTANCE>;

        interfaceinvoke $r60.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("ModifiedPCHIP", $r89);

        interfaceinvoke $r61.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(class "com/opengamma/analytics/math/interpolation/PCHIPYieldCurveInterpolator1D", "ModifiedPCHIP");

        $r92 = <com.opengamma.analytics.math.interpolation.Interpolator1DFactory: com.opengamma.analytics.math.interpolation.TimeSquareInterpolator1D TIME_SQUARE_INSTANCE>;

        interfaceinvoke $r60.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("TimeSquare", $r92);

        interfaceinvoke $r61.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(class "com/opengamma/analytics/math/interpolation/TimeSquareInterpolator1D", "TimeSquare");

        $r95 = <com.opengamma.analytics.math.interpolation.Interpolator1DFactory: com.opengamma.analytics.math.interpolation.FlatExtrapolator1D FLAT_EXTRAPOLATOR_INSTANCE>;

        interfaceinvoke $r60.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("FlatExtrapolator", $r95);

        interfaceinvoke $r61.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(class "com/opengamma/analytics/math/interpolation/FlatExtrapolator1D", "FlatExtrapolator");

        $r98 = <com.opengamma.analytics.math.interpolation.Interpolator1DFactory: com.opengamma.analytics.math.interpolation.ExponentialExtrapolator1D EXPONENTIAL_EXTRAPOLATOR_INSTANCE>;

        interfaceinvoke $r60.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("ExponentialExtrapolator", $r98);

        interfaceinvoke $r61.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(class "com/opengamma/analytics/math/interpolation/ExponentialExtrapolator1D", "ExponentialExtrapolator");

        $r101 = <com.opengamma.analytics.math.interpolation.Interpolator1DFactory: com.opengamma.analytics.math.interpolation.ClampedCubicSplineInterpolator1D CLAMPED_CUBIC_INSTANCE>;

        interfaceinvoke $r60.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("ClampedCubicSpline", $r101);

        interfaceinvoke $r61.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(class "com/opengamma/analytics/math/interpolation/ClampedCubicSplineInterpolator1D", "ClampedCubicSpline");

        $r104 = <com.opengamma.analytics.math.interpolation.Interpolator1DFactory: com.opengamma.analytics.math.interpolation.MonotonicityPreservingCubicSplineInterpolator1D CLAMPED_CUBIC_MONOTONE_INSTANCE>;

        interfaceinvoke $r60.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("ClampedCubicSplineWithMonotonicity", $r104);

        interfaceinvoke $r61.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(class "com/opengamma/analytics/math/interpolation/MonotonicityPreservingCubicSplineInterpolator1D", "ClampedCubicSplineWithMonotonicity");

        $r107 = <com.opengamma.analytics.math.interpolation.Interpolator1DFactory: com.opengamma.analytics.math.interpolation.NonnegativityPreservingCubicSplineInterpolator1D CLAMPED_CUBIC_NONNEGATIVE_INSTANCE>;

        interfaceinvoke $r60.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("ClampedCubicSplineWithNonnegativity", $r107);

        interfaceinvoke $r61.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(class "com/opengamma/analytics/math/interpolation/NonnegativityPreservingCubicSplineInterpolator1D", "ClampedCubicSplineWithNonnegativity");

        $r110 = <com.opengamma.analytics.math.interpolation.Interpolator1DFactory: com.opengamma.analytics.math.interpolation.MonotonicityPreservingQuinticSplineInterpolator1D CLAMPED_QUINTIC_MONOTONE_INSTANCE>;

        interfaceinvoke $r60.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("ClampedQuinticSplineWithMonotonicity", $r110);

        interfaceinvoke $r61.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(class "com/opengamma/analytics/math/interpolation/MonotonicityPreservingQuinticSplineInterpolator1D", "ClampedQuinticSplineWithMonotonicity");

        $r113 = <com.opengamma.analytics.math.interpolation.Interpolator1DFactory: com.opengamma.analytics.math.interpolation.NonnegativityPreservingQuinticSplineInterpolator1D CLAMPED_QUINTIC_NONNEGATIVE_INSTANCE>;

        interfaceinvoke $r60.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("ClampedQuinticSplineWithNonnegativity", $r113);

        interfaceinvoke $r61.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(class "com/opengamma/analytics/math/interpolation/NonnegativityPreservingQuinticSplineInterpolator1D", "ClampedQuinticSplineWithNonnegativity");

        $r116 = <com.opengamma.analytics.math.interpolation.Interpolator1DFactory: com.opengamma.analytics.math.interpolation.MonotonicityPreservingCubicSplineInterpolator1D NATURAL_CUBIC_MONOTONE_INSTANCE>;

        interfaceinvoke $r60.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("NaturalCubicSplineWithMonotonicity", $r116);

        interfaceinvoke $r61.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(class "com/opengamma/analytics/math/interpolation/MonotonicityPreservingCubicSplineInterpolator1D", "NaturalCubicSplineWithMonotonicity");

        $r119 = <com.opengamma.analytics.math.interpolation.Interpolator1DFactory: com.opengamma.analytics.math.interpolation.NonnegativityPreservingCubicSplineInterpolator1D NATURAL_CUBIC_NONNEGATIVE_INSTANCE>;

        interfaceinvoke $r60.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("NaturalCubicSplineWithNonnegativity", $r119);

        interfaceinvoke $r61.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(class "com/opengamma/analytics/math/interpolation/NonnegativityPreservingCubicSplineInterpolator1D", "NaturalCubicSplineWithNonnegativity");

        $r122 = <com.opengamma.analytics.math.interpolation.Interpolator1DFactory: com.opengamma.analytics.math.interpolation.MonotonicityPreservingQuinticSplineInterpolator1D NATURAL_QUINTIC_MONOTONE_INSTANCE>;

        interfaceinvoke $r60.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("NaturalQuinticSplineWithMonotonicity", $r122);

        interfaceinvoke $r61.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(class "com/opengamma/analytics/math/interpolation/MonotonicityPreservingQuinticSplineInterpolator1D", "NaturalQuinticSplineWithMonotonicity");

        $r125 = <com.opengamma.analytics.math.interpolation.Interpolator1DFactory: com.opengamma.analytics.math.interpolation.NonnegativityPreservingQuinticSplineInterpolator1D NATURAL_QUINTIC_NONNEGATIVE_INSTANCE>;

        interfaceinvoke $r60.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("NaturalQuinticSplineWithNonnegativity", $r125);

        interfaceinvoke $r61.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(class "com/opengamma/analytics/math/interpolation/NonnegativityPreservingQuinticSplineInterpolator1D", "NaturalQuinticSplineWithNonnegativity");

        $r128 = <com.opengamma.analytics.math.interpolation.Interpolator1DFactory: com.opengamma.analytics.math.interpolation.NotAKnotCubicSplineInterpolator1D NOTAKNOT_CUBIC_INSTANCE>;

        interfaceinvoke $r60.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("NotAKnotCubicSpline", $r128);

        interfaceinvoke $r61.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(class "com/opengamma/analytics/math/interpolation/NotAKnotCubicSplineInterpolator1D", "NotAKnotCubicSpline");

        $r131 = <com.opengamma.analytics.math.interpolation.Interpolator1DFactory: com.opengamma.analytics.math.interpolation.MonotonicityPreservingCubicSplineInterpolator1D NOTAKNOT_CUBIC_MONOTONE_INSTANCE>;

        interfaceinvoke $r60.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("NotAKnotCubicSplineWithMonotonicity", $r131);

        interfaceinvoke $r61.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(class "com/opengamma/analytics/math/interpolation/MonotonicityPreservingCubicSplineInterpolator1D", "NotAKnotCubicSplineWithMonotonicity");

        $r134 = <com.opengamma.analytics.math.interpolation.Interpolator1DFactory: com.opengamma.analytics.math.interpolation.NonnegativityPreservingCubicSplineInterpolator1D NOTAKNOT_CUBIC_NONNEGATIVE_INSTANCE>;

        interfaceinvoke $r60.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("NotAKnotCubicSplineWithNonnegativity", $r134);

        interfaceinvoke $r61.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(class "com/opengamma/analytics/math/interpolation/NonnegativityPreservingCubicSplineInterpolator1D", "NotAKnotCubicSplineWithNonnegativity");

        $r137 = <com.opengamma.analytics.math.interpolation.Interpolator1DFactory: com.opengamma.analytics.math.interpolation.MonotonicityPreservingQuinticSplineInterpolator1D NOTAKNOT_QUINTIC_MONOTONE_INSTANCE>;

        interfaceinvoke $r60.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("NotAKnotQuinticSplineWithMonotonicity", $r137);

        interfaceinvoke $r61.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(class "com/opengamma/analytics/math/interpolation/MonotonicityPreservingQuinticSplineInterpolator1D", "NotAKnotQuinticSplineWithMonotonicity");

        $r140 = <com.opengamma.analytics.math.interpolation.Interpolator1DFactory: com.opengamma.analytics.math.interpolation.NonnegativityPreservingQuinticSplineInterpolator1D NOTAKNOT_QUINTIC_NONNEGATIVE_INSTANCE>;

        interfaceinvoke $r60.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("NotAKnotQuinticSplineWithNonnegativity", $r140);

        interfaceinvoke $r61.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(class "com/opengamma/analytics/math/interpolation/NonnegativityPreservingQuinticSplineInterpolator1D", "NotAKnotQuinticSplineWithNonnegativity");

        $r143 = <com.opengamma.analytics.math.interpolation.Interpolator1DFactory: com.opengamma.analytics.math.interpolation.ConstrainedCubicSplineInterpolator1D CONSTRAINED_CUBIC_INSTANCE>;

        interfaceinvoke $r60.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("ConstrainedCubicSpline", $r143);

        interfaceinvoke $r61.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(class "com/opengamma/analytics/math/interpolation/ConstrainedCubicSplineInterpolator1D", "ConstrainedCubicSpline");

        $r146 = <com.opengamma.analytics.math.interpolation.Interpolator1DFactory: com.opengamma.analytics.math.interpolation.MonotonicityPreservingCubicSplineInterpolator1D CONSTRAINED_CUBIC_MONOTONE_INSTANCE>;

        interfaceinvoke $r60.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("ConstrainedCubicSplineWithMonotonicity", $r146);

        interfaceinvoke $r61.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(class "com/opengamma/analytics/math/interpolation/MonotonicityPreservingCubicSplineInterpolator1D", "ConstrainedCubicSplineWithMonotonicity");

        $r149 = <com.opengamma.analytics.math.interpolation.Interpolator1DFactory: com.opengamma.analytics.math.interpolation.NonnegativityPreservingCubicSplineInterpolator1D CONSTRAINED_CUBIC_NONNEGATIVE_INSTANCE>;

        interfaceinvoke $r60.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("ConstrainedCubicSplineWithNonnegativity", $r149);

        interfaceinvoke $r61.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(class "com/opengamma/analytics/math/interpolation/NonnegativityPreservingCubicSplineInterpolator1D", "ConstrainedCubicSplineWithNonnegativity");

        $r152 = <com.opengamma.analytics.math.interpolation.Interpolator1DFactory: com.opengamma.analytics.math.interpolation.SemiLocalCubicSplineInterpolator1D AKIMA_CUBIC_INSTANCE>;

        interfaceinvoke $r60.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("AkimaCubicSpline", $r152);

        interfaceinvoke $r61.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(class "com/opengamma/analytics/math/interpolation/SemiLocalCubicSplineInterpolator1D", "AkimaCubicSpline");

        $r155 = <com.opengamma.analytics.math.interpolation.Interpolator1DFactory: com.opengamma.analytics.math.interpolation.MonotonicityPreservingCubicSplineInterpolator1D AKIMA_CUBIC_MONOTONE_INSTANCE>;

        interfaceinvoke $r60.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("AkimaCubicSplineWithMonotonicity", $r155);

        interfaceinvoke $r61.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(class "com/opengamma/analytics/math/interpolation/MonotonicityPreservingCubicSplineInterpolator1D", "AkimaCubicSplineWithMonotonicity");

        $r158 = <com.opengamma.analytics.math.interpolation.Interpolator1DFactory: com.opengamma.analytics.math.interpolation.NonnegativityPreservingCubicSplineInterpolator1D AKIMA_CUBIC_NONNEGATIVE_INSTANCE>;

        interfaceinvoke $r60.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("AkimaCubicSplineWithNonnegativity", $r158);

        interfaceinvoke $r61.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(class "com/opengamma/analytics/math/interpolation/NonnegativityPreservingCubicSplineInterpolator1D", "AkimaCubicSplineWithNonnegativity");

        $r161 = <com.opengamma.analytics.math.interpolation.Interpolator1DFactory: com.opengamma.analytics.math.interpolation.MonotoneConvexSplineInterpolator1D MONOTONE_CONVEX_CUBIC_INSTANCE>;

        interfaceinvoke $r60.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("MonotoneConvexCubicSpline", $r161);

        interfaceinvoke $r61.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(class "com/opengamma/analytics/math/interpolation/MonotoneConvexSplineInterpolator1D", "MonotoneConvexCubicSpline");

        $r164 = <com.opengamma.analytics.math.interpolation.Interpolator1DFactory: com.opengamma.analytics.math.interpolation.ShapePreservingCubicSplineInterpolator1D C2_SHAPE_PRESERVING_CUBIC_INSTANCE>;

        interfaceinvoke $r60.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("C2ShapePreservingCubicSpline", $r164);

        interfaceinvoke $r61.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(class "com/opengamma/analytics/math/interpolation/ShapePreservingCubicSplineInterpolator1D", "C2ShapePreservingCubicSpline");

        $r167 = <com.opengamma.analytics.math.interpolation.Interpolator1DFactory: com.opengamma.analytics.math.interpolation.LogNaturalCubicMonotonicityPreservingInterpolator1D LOG_NATURAL_CUBIC_MONOTONE_INSTANCE>;

        interfaceinvoke $r60.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("LogNaturalCubicWithMonotonicity", $r167);

        interfaceinvoke $r61.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(class "com/opengamma/analytics/math/interpolation/LogNaturalCubicMonotonicityPreservingInterpolator1D", "LogNaturalCubicWithMonotonicity");

        $r170 = <com.opengamma.analytics.math.interpolation.Interpolator1DFactory: com.opengamma.analytics.math.interpolation.LogNaturalCubicInterpolator1D LOG_NATURAL_CUBIC_INSTANCE>;

        interfaceinvoke $r60.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("LogNaturalCubic", $r170);

        interfaceinvoke $r61.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(class "com/opengamma/analytics/math/interpolation/LogNaturalCubicInterpolator1D", "LogNaturalCubic");

        $r173 = <com.opengamma.analytics.math.interpolation.Interpolator1DFactory: com.opengamma.analytics.math.interpolation.LogNotAKnotCubicSplineInterpolator1D LOG_NOTAKNOT_CUBIC_INSTANCE>;

        interfaceinvoke $r60.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("LogNotAKnotCubic", $r173);

        interfaceinvoke $r61.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(class "com/opengamma/analytics/math/interpolation/LogNotAKnotCubicSplineInterpolator1D", "LogNotAKnotCubic");

        $r176 = <com.opengamma.analytics.math.interpolation.Interpolator1DFactory: com.opengamma.analytics.math.interpolation.LogClampedCubicSplineInterpolator1D LOG_CLAMPED_CUBIC_INSTANCE>;

        interfaceinvoke $r60.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("LogClampedCubic", $r176);

        interfaceinvoke $r61.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(class "com/opengamma/analytics/math/interpolation/LogClampedCubicSplineInterpolator1D", "LogClampedCubic");

        $r179 = <com.opengamma.analytics.math.interpolation.Interpolator1DFactory: com.opengamma.analytics.math.interpolation.ProductPiecewisePolynomialInterpolator1D PRODUCT_NATURAL_CUBIC_INSTANCE>;

        interfaceinvoke $r60.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("ProductNaturalCubic", $r179);

        interfaceinvoke $r61.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(class "com/opengamma/analytics/math/interpolation/ProductPiecewisePolynomialInterpolator1D", "ProductNaturalCubic");

        $r182 = <com.opengamma.analytics.math.interpolation.Interpolator1DFactory: com.opengamma.analytics.math.interpolation.SquareLinearInterpolator1D SQUARE_LINEAR_INSTANCE>;

        interfaceinvoke $r60.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("SquareLinear", $r182);

        interfaceinvoke $r61.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(class "com/opengamma/analytics/math/interpolation/SquareLinearInterpolator1D", "SquareLinear");

        $r185 = new java.util.HashMap;

        specialinvoke $r185.<java.util.HashMap: void <init>(java.util.Map)>($r60);

        <com.opengamma.analytics.math.interpolation.Interpolator1DFactory: java.util.Map s_staticInstances> = $r185;

        $r186 = new java.util.HashMap;

        specialinvoke $r186.<java.util.HashMap: void <init>(java.util.Map)>($r61);

        <com.opengamma.analytics.math.interpolation.Interpolator1DFactory: java.util.Map s_instanceNames> = $r186;

        return;
    }
}
