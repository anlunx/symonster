class org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator$2 extends java.lang.Object implements org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiableVectorFunction
{
    final org.apache.commons.math3.analysis.UnivariateVectorFunction val$function;
    final org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator this$0;

    void <init>(org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator, org.apache.commons.math3.analysis.UnivariateVectorFunction)
    {
        org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator$2 r0;
        org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator r1;
        org.apache.commons.math3.analysis.UnivariateVectorFunction r2;

        r0 := @this: org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator$2;

        r1 := @parameter0: org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator;

        r2 := @parameter1: org.apache.commons.math3.analysis.UnivariateVectorFunction;

        r0.<org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator$2: org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator this$0> = r1;

        r0.<org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator$2: org.apache.commons.math3.analysis.UnivariateVectorFunction val$function> = r2;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public double[] value(double) throws org.apache.commons.math3.exception.MathIllegalArgumentException
    {
        org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator$2 r0;
        double d0;
        org.apache.commons.math3.analysis.UnivariateVectorFunction $r1;
        double[] $r2;

        r0 := @this: org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator$2;

        d0 := @parameter0: double;

        $r1 = r0.<org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator$2: org.apache.commons.math3.analysis.UnivariateVectorFunction val$function>;

        $r2 = interfaceinvoke $r1.<org.apache.commons.math3.analysis.UnivariateVectorFunction: double[] value(double)>(d0);

        return $r2;
    }

    public org.apache.commons.math3.analysis.differentiation.DerivativeStructure[] value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) throws org.apache.commons.math3.exception.MathIllegalArgumentException
    {
        org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator$2 r0;
        org.apache.commons.math3.analysis.differentiation.DerivativeStructure r1, $r9;
        double d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, i9, i10, $i11, i12;
        org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator $r2, $r3, $r4, $r5, $r6, $r8, $r10, $r13, $r16;
        double[] $r7, $r12, r19;
        org.apache.commons.math3.analysis.UnivariateVectorFunction $r11;
        org.apache.commons.math3.exception.NumberIsTooLargeException $r14;
        java.lang.Integer $r15, $r17;
        double[][] r18;
        org.apache.commons.math3.analysis.differentiation.DerivativeStructure[] r20;

        r0 := @this: org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator$2;

        r1 := @parameter0: org.apache.commons.math3.analysis.differentiation.DerivativeStructure;

        $i0 = virtualinvoke r1.<org.apache.commons.math3.analysis.differentiation.DerivativeStructure: int getOrder()>();

        $r2 = r0.<org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator$2: org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator this$0>;

        $i1 = staticinvoke <org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator: int access$000(org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator)>($r2);

        if $i0 < $i1 goto label1;

        $r14 = new org.apache.commons.math3.exception.NumberIsTooLargeException;

        $i7 = virtualinvoke r1.<org.apache.commons.math3.analysis.differentiation.DerivativeStructure: int getOrder()>();

        $r15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i7);

        $r16 = r0.<org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator$2: org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator this$0>;

        $i8 = staticinvoke <org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator: int access$000(org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator)>($r16);

        $r17 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i8);

        specialinvoke $r14.<org.apache.commons.math3.exception.NumberIsTooLargeException: void <init>(java.lang.Number,java.lang.Number,boolean)>($r15, $r17, 0);

        throw $r14;

     label1:
        $d1 = virtualinvoke r1.<org.apache.commons.math3.analysis.differentiation.DerivativeStructure: double getValue()>();

        $r3 = r0.<org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator$2: org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator this$0>;

        $d2 = staticinvoke <org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator: double access$100(org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator)>($r3);

        $d3 = staticinvoke <org.apache.commons.math3.util.FastMath: double min(double,double)>($d1, $d2);

        $r4 = r0.<org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator$2: org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator this$0>;

        $d4 = staticinvoke <org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator: double access$200(org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator)>($r4);

        $d5 = staticinvoke <org.apache.commons.math3.util.FastMath: double max(double,double)>($d3, $d4);

        $r5 = r0.<org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator$2: org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator this$0>;

        $d6 = staticinvoke <org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator: double access$300(org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator)>($r5);

        d0 = $d5 - $d6;

        r18 = (double[][]) null;

        i9 = 0;

     label2:
        $r6 = r0.<org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator$2: org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator this$0>;

        $i2 = staticinvoke <org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator: int access$000(org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator)>($r6);

        if i9 >= $i2 goto label6;

        $r11 = r0.<org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator$2: org.apache.commons.math3.analysis.UnivariateVectorFunction val$function>;

        $d7 = (double) i9;

        $r10 = r0.<org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator$2: org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator this$0>;

        $d8 = staticinvoke <org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator: double access$400(org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator)>($r10);

        $d9 = $d7 * $d8;

        $d10 = d0 + $d9;

        r19 = interfaceinvoke $r11.<org.apache.commons.math3.analysis.UnivariateVectorFunction: double[] value(double)>($d10);

        if i9 != 0 goto label3;

        $i5 = lengthof r19;

        $r13 = r0.<org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator$2: org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator this$0>;

        $i6 = staticinvoke <org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator: int access$000(org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator)>($r13);

        r18 = newmultiarray (double)[$i5][$i6];

     label3:
        i10 = 0;

     label4:
        $i11 = lengthof r19;

        if i10 >= $i11 goto label5;

        $r12 = r18[i10];

        $d11 = r19[i10];

        $r12[i9] = $d11;

        i10 = i10 + 1;

        goto label4;

     label5:
        i9 = i9 + 1;

        goto label2;

     label6:
        $i3 = lengthof r18;

        r20 = newarray (org.apache.commons.math3.analysis.differentiation.DerivativeStructure)[$i3];

        i12 = 0;

     label7:
        $i4 = lengthof r20;

        if i12 >= $i4 goto label8;

        $r8 = r0.<org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator$2: org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator this$0>;

        $r7 = r18[i12];

        $r9 = staticinvoke <org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator: org.apache.commons.math3.analysis.differentiation.DerivativeStructure access$500(org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator,org.apache.commons.math3.analysis.differentiation.DerivativeStructure,double,double[])>($r8, r1, d0, $r7);

        r20[i12] = $r9;

        i12 = i12 + 1;

        goto label7;

     label8:
        return r20;
    }
}
