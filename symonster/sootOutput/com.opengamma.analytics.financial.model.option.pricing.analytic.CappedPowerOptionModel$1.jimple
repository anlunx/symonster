class com.opengamma.analytics.financial.model.option.pricing.analytic.CappedPowerOptionModel$1 extends com.opengamma.analytics.math.function.Function1D
{
    final com.opengamma.analytics.financial.model.option.definition.CappedPowerOptionDefinition val$definition;
    final com.opengamma.analytics.financial.model.option.pricing.analytic.CappedPowerOptionModel this$0;

    void <init>(com.opengamma.analytics.financial.model.option.pricing.analytic.CappedPowerOptionModel, com.opengamma.analytics.financial.model.option.definition.CappedPowerOptionDefinition)
    {
        com.opengamma.analytics.financial.model.option.pricing.analytic.CappedPowerOptionModel$1 r0;
        com.opengamma.analytics.financial.model.option.pricing.analytic.CappedPowerOptionModel r1;
        com.opengamma.analytics.financial.model.option.definition.CappedPowerOptionDefinition r2;

        r0 := @this: com.opengamma.analytics.financial.model.option.pricing.analytic.CappedPowerOptionModel$1;

        r1 := @parameter0: com.opengamma.analytics.financial.model.option.pricing.analytic.CappedPowerOptionModel;

        r2 := @parameter1: com.opengamma.analytics.financial.model.option.definition.CappedPowerOptionDefinition;

        r0.<com.opengamma.analytics.financial.model.option.pricing.analytic.CappedPowerOptionModel$1: com.opengamma.analytics.financial.model.option.pricing.analytic.CappedPowerOptionModel this$0> = r1;

        r0.<com.opengamma.analytics.financial.model.option.pricing.analytic.CappedPowerOptionModel$1: com.opengamma.analytics.financial.model.option.definition.CappedPowerOptionDefinition val$definition> = r2;

        specialinvoke r0.<com.opengamma.analytics.math.function.Function1D: void <init>()>();

        return;
    }

    public java.lang.Double evaluate(com.opengamma.analytics.financial.model.option.definition.StandardOptionDataBundle)
    {
        com.opengamma.analytics.financial.model.option.pricing.analytic.CappedPowerOptionModel$1 r0;
        com.opengamma.analytics.financial.model.option.definition.StandardOptionDataBundle r1;
        double d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, d10, d11, d12, d13, d14, d15, d16, d17, d18, $d19, $d20, $d21, $d22, $d23, $d24, $d25, $d26, $d27, $d28, $d29, $d30, $d31, $d32, $d33, $d34, $d35, $d36, $d37, $d38, $d39, $d40, $d41, $d42, $d43, $d44, $d45, $d46, $d47, $d48, $d49, $d50, $d51, $d52, $d53, $d54, $d55, $d56, $d57, $d58, $d59, $d60, $d61, $d62, $d63, $d64, $d65, $d66, $d67, $d68, $d69;
        boolean z0;
        com.opengamma.analytics.financial.model.option.definition.CappedPowerOptionDefinition $r2, $r4, $r6, $r7, $r8;
        java.lang.Double $r3, $r13, $r15, $r17, $r19, $r20;
        org.threeten.bp.ZonedDateTime $r5;
        java.lang.Boolean $r9;
        com.opengamma.analytics.financial.model.option.pricing.analytic.CappedPowerOptionModel $r10, $r11;
        com.opengamma.analytics.math.statistics.distribution.ProbabilityDistribution $r12, $r14, $r16, $r18;
        byte $b1;

        r0 := @this: com.opengamma.analytics.financial.model.option.pricing.analytic.CappedPowerOptionModel$1;

        r1 := @parameter0: com.opengamma.analytics.financial.model.option.definition.StandardOptionDataBundle;

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object)>(r1);

        d0 = virtualinvoke r1.<com.opengamma.analytics.financial.model.option.definition.StandardOptionDataBundle: double getSpot()>();

        $r2 = r0.<com.opengamma.analytics.financial.model.option.pricing.analytic.CappedPowerOptionModel$1: com.opengamma.analytics.financial.model.option.definition.CappedPowerOptionDefinition val$definition>;

        $r3 = virtualinvoke $r2.<com.opengamma.analytics.financial.model.option.definition.CappedPowerOptionDefinition: java.lang.Double getStrike()>();

        d1 = virtualinvoke $r3.<java.lang.Double: double doubleValue()>();

        $r4 = r0.<com.opengamma.analytics.financial.model.option.pricing.analytic.CappedPowerOptionModel$1: com.opengamma.analytics.financial.model.option.definition.CappedPowerOptionDefinition val$definition>;

        $r5 = virtualinvoke r1.<com.opengamma.analytics.financial.model.option.definition.StandardOptionDataBundle: org.threeten.bp.ZonedDateTime getDate()>();

        d2 = virtualinvoke $r4.<com.opengamma.analytics.financial.model.option.definition.CappedPowerOptionDefinition: double getTimeToExpiry(org.threeten.bp.ZonedDateTime)>($r5);

        d3 = virtualinvoke r1.<com.opengamma.analytics.financial.model.option.definition.StandardOptionDataBundle: double getVolatility(double,double)>(d2, d1);

        d4 = virtualinvoke r1.<com.opengamma.analytics.financial.model.option.definition.StandardOptionDataBundle: double getInterestRate(double)>(d2);

        d5 = virtualinvoke r1.<com.opengamma.analytics.financial.model.option.definition.StandardOptionDataBundle: double getCostOfCarry()>();

        $r6 = r0.<com.opengamma.analytics.financial.model.option.pricing.analytic.CappedPowerOptionModel$1: com.opengamma.analytics.financial.model.option.definition.CappedPowerOptionDefinition val$definition>;

        d6 = virtualinvoke $r6.<com.opengamma.analytics.financial.model.option.definition.CappedPowerOptionDefinition: double getPower()>();

        d7 = 1.0 / d6;

        $r7 = r0.<com.opengamma.analytics.financial.model.option.pricing.analytic.CappedPowerOptionModel$1: com.opengamma.analytics.financial.model.option.definition.CappedPowerOptionDefinition val$definition>;

        d8 = virtualinvoke $r7.<com.opengamma.analytics.financial.model.option.definition.CappedPowerOptionDefinition: double getCap()>();

        $r8 = r0.<com.opengamma.analytics.financial.model.option.pricing.analytic.CappedPowerOptionModel$1: com.opengamma.analytics.financial.model.option.definition.CappedPowerOptionDefinition val$definition>;

        $r9 = virtualinvoke $r8.<com.opengamma.analytics.financial.model.option.definition.CappedPowerOptionDefinition: java.lang.Boolean isCall()>();

        z0 = virtualinvoke $r9.<java.lang.Boolean: boolean booleanValue()>();

        $d19 = staticinvoke <java.lang.Math: double sqrt(double)>(d2);

        d9 = d3 * $d19;

        $d21 = d3 * d3;

        $d20 = d6 - 0.5;

        $d22 = $d21 * $d20;

        $d23 = d5 + $d22;

        d10 = d2 * $d23;

        $r10 = r0.<com.opengamma.analytics.financial.model.option.pricing.analytic.CappedPowerOptionModel$1: com.opengamma.analytics.financial.model.option.pricing.analytic.CappedPowerOptionModel this$0>;

        $d24 = 1.0 / d6;

        $d25 = staticinvoke <java.lang.Math: double pow(double,double)>(d1, $d24);

        $d26 = d0 / $d25;

        d11 = virtualinvoke $r10.<com.opengamma.analytics.financial.model.option.pricing.analytic.CappedPowerOptionModel: double getD(double,double,double)>($d26, d10, d9);

        $d27 = d6 * d9;

        d12 = d11 - $d27;

        $r11 = r0.<com.opengamma.analytics.financial.model.option.pricing.analytic.CappedPowerOptionModel$1: com.opengamma.analytics.financial.model.option.pricing.analytic.CappedPowerOptionModel this$0>;

        if z0 == 0 goto label1;

        $d67 = d1 + d8;

        $d68 = staticinvoke <java.lang.Math: double pow(double,double)>($d67, d7);

        $d69 = d0 / $d68;

        goto label2;

     label1:
        $d28 = d1 - d8;

        $d29 = staticinvoke <java.lang.Math: double pow(double,double)>($d28, d7);

        $d69 = d0 / $d29;

     label2:
        d13 = virtualinvoke $r11.<com.opengamma.analytics.financial.model.option.pricing.analytic.CappedPowerOptionModel: double getD(double,double,double)>($d69, d10, d9);

        $d30 = d6 * d9;

        d14 = d13 - $d30;

        if z0 == 0 goto label3;

        $b1 = 1;

        goto label4;

     label3:
        $b1 = -1;

     label4:
        $d31 = neg d4;

        $d32 = $d31 * d2;

        d15 = staticinvoke <java.lang.Math: double exp(double)>($d32);

        $d37 = d6 - 1.0;

        $d33 = d6 * d3;

        $d34 = $d33 * d3;

        $d35 = $d34 * 0.5;

        $d36 = d4 + $d35;

        $d40 = $d37 * $d36;

        $d38 = d4 - d5;

        $d39 = d6 * $d38;

        $d41 = $d40 - $d39;

        $d42 = d2 * $d41;

        d16 = staticinvoke <java.lang.Math: double exp(double)>($d42);

        $d43 = staticinvoke <java.lang.Math: double pow(double,double)>(d0, d6);

        $d44 = $d43 * d16;

        $r12 = staticinvoke <com.opengamma.analytics.financial.model.option.pricing.analytic.CappedPowerOptionModel: com.opengamma.analytics.math.statistics.distribution.ProbabilityDistribution access$000()>();

        $d45 = (double) $b1;

        $d46 = $d45 * d11;

        $r13 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d46);

        $d47 = interfaceinvoke $r12.<com.opengamma.analytics.math.statistics.distribution.ProbabilityDistribution: double getCDF(java.lang.Object)>($r13);

        $r14 = staticinvoke <com.opengamma.analytics.financial.model.option.pricing.analytic.CappedPowerOptionModel: com.opengamma.analytics.math.statistics.distribution.ProbabilityDistribution access$000()>();

        $d48 = (double) $b1;

        $d49 = $d48 * d13;

        $r15 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d49);

        $d50 = interfaceinvoke $r14.<com.opengamma.analytics.math.statistics.distribution.ProbabilityDistribution: double getCDF(java.lang.Object)>($r15);

        $d51 = $d47 - $d50;

        d17 = $d44 * $d51;

        $r16 = staticinvoke <com.opengamma.analytics.financial.model.option.pricing.analytic.CappedPowerOptionModel: com.opengamma.analytics.math.statistics.distribution.ProbabilityDistribution access$000()>();

        $d52 = (double) $b1;

        $d53 = $d52 * d12;

        $r17 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d53);

        $d54 = interfaceinvoke $r16.<com.opengamma.analytics.math.statistics.distribution.ProbabilityDistribution: double getCDF(java.lang.Object)>($r17);

        $d57 = d1 * $d54;

        $d55 = (double) $b1;

        $d56 = $d55 * d8;

        $d58 = d1 + $d56;

        $r18 = staticinvoke <com.opengamma.analytics.financial.model.option.pricing.analytic.CappedPowerOptionModel: com.opengamma.analytics.math.statistics.distribution.ProbabilityDistribution access$000()>();

        $d59 = (double) $b1;

        $d60 = $d59 * d14;

        $r19 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d60);

        $d61 = interfaceinvoke $r18.<com.opengamma.analytics.math.statistics.distribution.ProbabilityDistribution: double getCDF(java.lang.Object)>($r19);

        $d62 = $d58 * $d61;

        $d63 = $d57 - $d62;

        d18 = d15 * $d63;

        $d65 = (double) $b1;

        $d64 = d17 - d18;

        $d66 = $d65 * $d64;

        $r20 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d66);

        return $r20;
    }

    public volatile java.lang.Object evaluate(java.lang.Object)
    {
        com.opengamma.analytics.financial.model.option.pricing.analytic.CappedPowerOptionModel$1 r0;
        java.lang.Object r1;
        com.opengamma.analytics.financial.model.option.definition.StandardOptionDataBundle $r2;
        java.lang.Double $r3;

        r0 := @this: com.opengamma.analytics.financial.model.option.pricing.analytic.CappedPowerOptionModel$1;

        r1 := @parameter0: java.lang.Object;

        $r2 = (com.opengamma.analytics.financial.model.option.definition.StandardOptionDataBundle) r1;

        $r3 = virtualinvoke r0.<com.opengamma.analytics.financial.model.option.pricing.analytic.CappedPowerOptionModel$1: java.lang.Double evaluate(com.opengamma.analytics.financial.model.option.definition.StandardOptionDataBundle)>($r2);

        return $r3;
    }
}
