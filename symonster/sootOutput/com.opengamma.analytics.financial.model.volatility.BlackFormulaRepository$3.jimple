final class com.opengamma.analytics.financial.model.volatility.BlackFormulaRepository$3 extends com.opengamma.analytics.math.function.Function1D
{
    final com.opengamma.analytics.financial.model.volatility.SimpleOptionData[] val$data;

    void <init>(com.opengamma.analytics.financial.model.volatility.SimpleOptionData[])
    {
        com.opengamma.analytics.financial.model.volatility.BlackFormulaRepository$3 r0;
        com.opengamma.analytics.financial.model.volatility.SimpleOptionData[] r1;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.BlackFormulaRepository$3;

        r1 := @parameter0: com.opengamma.analytics.financial.model.volatility.SimpleOptionData[];

        r0.<com.opengamma.analytics.financial.model.volatility.BlackFormulaRepository$3: com.opengamma.analytics.financial.model.volatility.SimpleOptionData[] val$data> = r1;

        specialinvoke r0.<com.opengamma.analytics.math.function.Function1D: void <init>()>();

        return;
    }

    public java.lang.Double evaluate(java.lang.Double)
    {
        com.opengamma.analytics.financial.model.volatility.BlackFormulaRepository$3 r0;
        java.lang.Double r1, $r4;
        com.opengamma.analytics.financial.model.volatility.SimpleOptionData[] r2;
        int i0, i1;
        com.opengamma.analytics.financial.model.volatility.SimpleOptionData r3;
        double $d0, $d1, d2;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.BlackFormulaRepository$3;

        r1 := @parameter0: java.lang.Double;

        d2 = 0.0;

        r2 = r0.<com.opengamma.analytics.financial.model.volatility.BlackFormulaRepository$3: com.opengamma.analytics.financial.model.volatility.SimpleOptionData[] val$data>;

        i0 = lengthof r2;

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        r3 = r2[i1];

        $d0 = virtualinvoke r1.<java.lang.Double: double doubleValue()>();

        $d1 = staticinvoke <com.opengamma.analytics.financial.model.volatility.BlackFormulaRepository: double price(com.opengamma.analytics.financial.model.volatility.SimpleOptionData,double)>(r3, $d0);

        d2 = d2 + $d1;

        i1 = i1 + 1;

        goto label1;

     label2:
        $r4 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d2);

        return $r4;
    }

    public volatile java.lang.Object evaluate(java.lang.Object)
    {
        com.opengamma.analytics.financial.model.volatility.BlackFormulaRepository$3 r0;
        java.lang.Object r1;
        java.lang.Double $r2, $r3;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.BlackFormulaRepository$3;

        r1 := @parameter0: java.lang.Object;

        $r2 = (java.lang.Double) r1;

        $r3 = virtualinvoke r0.<com.opengamma.analytics.financial.model.volatility.BlackFormulaRepository$3: java.lang.Double evaluate(java.lang.Double)>($r2);

        return $r3;
    }
}
