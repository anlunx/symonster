public abstract class com.opengamma.analytics.financial.provider.method.CalibrationEngineWithPrices extends java.lang.Object
{
    private final java.util.List _basket;
    private final java.util.List _calibrationPrices;

    public void <init>(com.opengamma.analytics.financial.forex.method.FXMatrix, com.opengamma.util.money.Currency)
    {
        com.opengamma.analytics.financial.provider.method.CalibrationEngineWithPrices r0;
        com.opengamma.analytics.financial.forex.method.FXMatrix r1;
        com.opengamma.util.money.Currency r2;
        java.util.ArrayList $r3, $r4;

        r0 := @this: com.opengamma.analytics.financial.provider.method.CalibrationEngineWithPrices;

        r1 := @parameter0: com.opengamma.analytics.financial.forex.method.FXMatrix;

        r2 := @parameter1: com.opengamma.util.money.Currency;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        r0.<com.opengamma.analytics.financial.provider.method.CalibrationEngineWithPrices: java.util.List _basket> = $r3;

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        r0.<com.opengamma.analytics.financial.provider.method.CalibrationEngineWithPrices: java.util.List _calibrationPrices> = $r4;

        return;
    }

    public void addInstrument(com.opengamma.analytics.financial.interestrate.InstrumentDerivative, double)
    {
        com.opengamma.analytics.financial.provider.method.CalibrationEngineWithPrices r0;
        com.opengamma.analytics.financial.interestrate.InstrumentDerivative r1;
        double d0;
        java.util.List $r2, $r3;
        java.lang.Double $r4;

        r0 := @this: com.opengamma.analytics.financial.provider.method.CalibrationEngineWithPrices;

        r1 := @parameter0: com.opengamma.analytics.financial.interestrate.InstrumentDerivative;

        d0 := @parameter1: double;

        $r2 = r0.<com.opengamma.analytics.financial.provider.method.CalibrationEngineWithPrices: java.util.List _basket>;

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>(r1);

        $r3 = r0.<com.opengamma.analytics.financial.provider.method.CalibrationEngineWithPrices: java.util.List _calibrationPrices>;

        $r4 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d0);

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>($r4);

        return;
    }

    public void addInstrument(com.opengamma.analytics.financial.interestrate.InstrumentDerivative[], double[])
    {
        com.opengamma.analytics.financial.provider.method.CalibrationEngineWithPrices r0;
        com.opengamma.analytics.financial.interestrate.InstrumentDerivative[] r1;
        double[] r2;
        int $i0, $i1, i2, $i3;
        double $d0;
        com.opengamma.analytics.financial.interestrate.InstrumentDerivative $r3;
        boolean $z0;

        r0 := @this: com.opengamma.analytics.financial.provider.method.CalibrationEngineWithPrices;

        r1 := @parameter0: com.opengamma.analytics.financial.interestrate.InstrumentDerivative[];

        r2 := @parameter1: double[];

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object,java.lang.String)>(r1, "Instrument");

        $i1 = lengthof r1;

        $i0 = lengthof r2;

        if $i1 != $i0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        staticinvoke <org.apache.commons.lang.Validate: void isTrue(boolean)>($z0);

        i2 = 0;

     label3:
        $i3 = lengthof r1;

        if i2 >= $i3 goto label4;

        $r3 = r1[i2];

        $d0 = r2[i2];

        virtualinvoke r0.<com.opengamma.analytics.financial.provider.method.CalibrationEngineWithPrices: void addInstrument(com.opengamma.analytics.financial.interestrate.InstrumentDerivative,double)>($r3, $d0);

        i2 = i2 + 1;

        goto label3;

     label4:
        return;
    }

    public abstract void calibrate(com.opengamma.analytics.financial.provider.description.interestrate.ParameterProviderInterface);

    public java.util.List getBasket()
    {
        com.opengamma.analytics.financial.provider.method.CalibrationEngineWithPrices r0;
        java.util.List $r1;

        r0 := @this: com.opengamma.analytics.financial.provider.method.CalibrationEngineWithPrices;

        $r1 = r0.<com.opengamma.analytics.financial.provider.method.CalibrationEngineWithPrices: java.util.List _basket>;

        return $r1;
    }

    public java.util.List getCalibrationPrices()
    {
        com.opengamma.analytics.financial.provider.method.CalibrationEngineWithPrices r0;
        java.util.List $r1;

        r0 := @this: com.opengamma.analytics.financial.provider.method.CalibrationEngineWithPrices;

        $r1 = r0.<com.opengamma.analytics.financial.provider.method.CalibrationEngineWithPrices: java.util.List _calibrationPrices>;

        return $r1;
    }
}
