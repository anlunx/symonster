public class com.opengamma.analytics.financial.model.volatility.surface.SABRBlackEquivalentVolatilitySurfaceModel extends java.lang.Object implements com.opengamma.analytics.financial.model.volatility.surface.VolatilitySurfaceModel
{
    private static final com.opengamma.analytics.financial.model.volatility.smile.function.SABRHaganVolatilityFunction SABR_FUNCTION;

    public void <init>()
    {
        com.opengamma.analytics.financial.model.volatility.surface.SABRBlackEquivalentVolatilitySurfaceModel r0;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.surface.SABRBlackEquivalentVolatilitySurfaceModel;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public com.opengamma.analytics.financial.model.volatility.surface.VolatilitySurface getSurface(com.opengamma.analytics.financial.model.option.definition.OptionDefinition, com.opengamma.analytics.financial.model.option.definition.SABRDataBundle)
    {
        com.opengamma.analytics.financial.model.volatility.surface.SABRBlackEquivalentVolatilitySurfaceModel r0;
        com.opengamma.analytics.financial.model.option.definition.OptionDefinition r1;
        com.opengamma.analytics.financial.model.option.definition.SABRDataBundle r2;
        double d0, d1, d2, d3, d4, d5, d6, d7, $d8, $d9, $d10, $d11;
        java.lang.Double $r3, $r11;
        org.threeten.bp.ZonedDateTime $r4;
        com.opengamma.analytics.financial.model.volatility.surface.VolatilitySurface $r5;
        com.opengamma.analytics.financial.model.option.pricing.analytic.formula.EuropeanVanillaOption $r6;
        com.opengamma.analytics.financial.model.volatility.smile.function.SABRHaganVolatilityFunction $r7;
        com.opengamma.analytics.math.function.Function1D $r8;
        com.opengamma.analytics.financial.model.volatility.smile.function.SABRFormulaData $r9;
        java.lang.Object $r10;
        com.opengamma.analytics.math.surface.ConstantDoublesSurface $r12;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.surface.SABRBlackEquivalentVolatilitySurfaceModel;

        r1 := @parameter0: com.opengamma.analytics.financial.model.option.definition.OptionDefinition;

        r2 := @parameter1: com.opengamma.analytics.financial.model.option.definition.SABRDataBundle;

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object,java.lang.String)>(r1, "option definition");

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object)>(r2);

        $r3 = virtualinvoke r1.<com.opengamma.analytics.financial.model.option.definition.OptionDefinition: java.lang.Double getStrike()>();

        d0 = virtualinvoke $r3.<java.lang.Double: double doubleValue()>();

        $r4 = virtualinvoke r2.<com.opengamma.analytics.financial.model.option.definition.SABRDataBundle: org.threeten.bp.ZonedDateTime getDate()>();

        d1 = virtualinvoke r1.<com.opengamma.analytics.financial.model.option.definition.OptionDefinition: double getTimeToExpiry(org.threeten.bp.ZonedDateTime)>($r4);

        d2 = virtualinvoke r2.<com.opengamma.analytics.financial.model.option.definition.SABRDataBundle: double getAlpha()>();

        d3 = virtualinvoke r2.<com.opengamma.analytics.financial.model.option.definition.SABRDataBundle: double getBeta()>();

        d4 = virtualinvoke r2.<com.opengamma.analytics.financial.model.option.definition.SABRDataBundle: double getRho()>();

        d5 = virtualinvoke r2.<com.opengamma.analytics.financial.model.option.definition.SABRDataBundle: double getVolOfVol()>();

        d6 = virtualinvoke r2.<com.opengamma.analytics.financial.model.option.definition.SABRDataBundle: double getCostOfCarry()>();

        $d8 = virtualinvoke r2.<com.opengamma.analytics.financial.model.option.definition.SABRDataBundle: double getSpot()>();

        $d9 = d6 * d1;

        $d10 = staticinvoke <java.lang.Math: double exp(double)>($d9);

        d7 = $d8 * $d10;

        $r5 = new com.opengamma.analytics.financial.model.volatility.surface.VolatilitySurface;

        $r7 = <com.opengamma.analytics.financial.model.volatility.surface.SABRBlackEquivalentVolatilitySurfaceModel: com.opengamma.analytics.financial.model.volatility.smile.function.SABRHaganVolatilityFunction SABR_FUNCTION>;

        $r6 = new com.opengamma.analytics.financial.model.option.pricing.analytic.formula.EuropeanVanillaOption;

        specialinvoke $r6.<com.opengamma.analytics.financial.model.option.pricing.analytic.formula.EuropeanVanillaOption: void <init>(double,double,boolean)>(d0, d1, 1);

        $r8 = virtualinvoke $r7.<com.opengamma.analytics.financial.model.volatility.smile.function.SABRHaganVolatilityFunction: com.opengamma.analytics.math.function.Function1D getVolatilityFunction(com.opengamma.analytics.financial.model.option.pricing.analytic.formula.EuropeanVanillaOption,double)>($r6, d7);

        $r9 = new com.opengamma.analytics.financial.model.volatility.smile.function.SABRFormulaData;

        specialinvoke $r9.<com.opengamma.analytics.financial.model.volatility.smile.function.SABRFormulaData: void <init>(double,double,double,double)>(d2, d3, d4, d5);

        $r10 = virtualinvoke $r8.<com.opengamma.analytics.math.function.Function1D: java.lang.Object evaluate(java.lang.Object)>($r9);

        $r11 = (java.lang.Double) $r10;

        $d11 = virtualinvoke $r11.<java.lang.Double: double doubleValue()>();

        $r12 = staticinvoke <com.opengamma.analytics.math.surface.ConstantDoublesSurface: com.opengamma.analytics.math.surface.ConstantDoublesSurface 'from'(double)>($d11);

        specialinvoke $r5.<com.opengamma.analytics.financial.model.volatility.surface.VolatilitySurface: void <init>(com.opengamma.analytics.math.surface.Surface)>($r12);

        return $r5;
    }

    public volatile com.opengamma.analytics.financial.model.volatility.surface.VolatilitySurface getSurface(java.lang.Object, java.lang.Object)
    {
        com.opengamma.analytics.financial.model.volatility.surface.SABRBlackEquivalentVolatilitySurfaceModel r0;
        java.lang.Object r1, r2;
        com.opengamma.analytics.financial.model.option.definition.SABRDataBundle $r3;
        com.opengamma.analytics.financial.model.option.definition.OptionDefinition $r4;
        com.opengamma.analytics.financial.model.volatility.surface.VolatilitySurface $r5;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.surface.SABRBlackEquivalentVolatilitySurfaceModel;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r4 = (com.opengamma.analytics.financial.model.option.definition.OptionDefinition) r1;

        $r3 = (com.opengamma.analytics.financial.model.option.definition.SABRDataBundle) r2;

        $r5 = virtualinvoke r0.<com.opengamma.analytics.financial.model.volatility.surface.SABRBlackEquivalentVolatilitySurfaceModel: com.opengamma.analytics.financial.model.volatility.surface.VolatilitySurface getSurface(com.opengamma.analytics.financial.model.option.definition.OptionDefinition,com.opengamma.analytics.financial.model.option.definition.SABRDataBundle)>($r4, $r3);

        return $r5;
    }

    static void <clinit>()
    {
        com.opengamma.analytics.financial.model.volatility.smile.function.SABRHaganVolatilityFunction $r0;

        $r0 = new com.opengamma.analytics.financial.model.volatility.smile.function.SABRHaganVolatilityFunction;

        specialinvoke $r0.<com.opengamma.analytics.financial.model.volatility.smile.function.SABRHaganVolatilityFunction: void <init>()>();

        <com.opengamma.analytics.financial.model.volatility.surface.SABRBlackEquivalentVolatilitySurfaceModel: com.opengamma.analytics.financial.model.volatility.smile.function.SABRHaganVolatilityFunction SABR_FUNCTION> = $r0;

        return;
    }
}
