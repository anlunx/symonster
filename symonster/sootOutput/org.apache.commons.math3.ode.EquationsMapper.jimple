public class org.apache.commons.math3.ode.EquationsMapper extends java.lang.Object implements java.io.Serializable
{
    private static final long serialVersionUID;
    private final int firstIndex;
    private final int dimension;

    public void <init>(int, int)
    {
        org.apache.commons.math3.ode.EquationsMapper r0;
        int i0, i1;

        r0 := @this: org.apache.commons.math3.ode.EquationsMapper;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.commons.math3.ode.EquationsMapper: int firstIndex> = i0;

        r0.<org.apache.commons.math3.ode.EquationsMapper: int dimension> = i1;

        return;
    }

    public int getFirstIndex()
    {
        org.apache.commons.math3.ode.EquationsMapper r0;
        int $i0;

        r0 := @this: org.apache.commons.math3.ode.EquationsMapper;

        $i0 = r0.<org.apache.commons.math3.ode.EquationsMapper: int firstIndex>;

        return $i0;
    }

    public int getDimension()
    {
        org.apache.commons.math3.ode.EquationsMapper r0;
        int $i0;

        r0 := @this: org.apache.commons.math3.ode.EquationsMapper;

        $i0 = r0.<org.apache.commons.math3.ode.EquationsMapper: int dimension>;

        return $i0;
    }

    public void extractEquationData(double[], double[]) throws org.apache.commons.math3.exception.DimensionMismatchException
    {
        org.apache.commons.math3.ode.EquationsMapper r0;
        double[] r1, r2;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        org.apache.commons.math3.exception.DimensionMismatchException $r3;

        r0 := @this: org.apache.commons.math3.ode.EquationsMapper;

        r1 := @parameter0: double[];

        r2 := @parameter1: double[];

        $i1 = lengthof r2;

        $i0 = r0.<org.apache.commons.math3.ode.EquationsMapper: int dimension>;

        if $i1 == $i0 goto label1;

        $r3 = new org.apache.commons.math3.exception.DimensionMismatchException;

        $i5 = lengthof r2;

        $i4 = r0.<org.apache.commons.math3.ode.EquationsMapper: int dimension>;

        specialinvoke $r3.<org.apache.commons.math3.exception.DimensionMismatchException: void <init>(int,int)>($i5, $i4);

        throw $r3;

     label1:
        $i3 = r0.<org.apache.commons.math3.ode.EquationsMapper: int firstIndex>;

        $i2 = r0.<org.apache.commons.math3.ode.EquationsMapper: int dimension>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, $i3, r2, 0, $i2);

        return;
    }

    public void insertEquationData(double[], double[]) throws org.apache.commons.math3.exception.DimensionMismatchException
    {
        org.apache.commons.math3.ode.EquationsMapper r0;
        double[] r1, r2;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        org.apache.commons.math3.exception.DimensionMismatchException $r3;

        r0 := @this: org.apache.commons.math3.ode.EquationsMapper;

        r1 := @parameter0: double[];

        r2 := @parameter1: double[];

        $i1 = lengthof r1;

        $i0 = r0.<org.apache.commons.math3.ode.EquationsMapper: int dimension>;

        if $i1 == $i0 goto label1;

        $r3 = new org.apache.commons.math3.exception.DimensionMismatchException;

        $i5 = lengthof r1;

        $i4 = r0.<org.apache.commons.math3.ode.EquationsMapper: int dimension>;

        specialinvoke $r3.<org.apache.commons.math3.exception.DimensionMismatchException: void <init>(int,int)>($i5, $i4);

        throw $r3;

     label1:
        $i3 = r0.<org.apache.commons.math3.ode.EquationsMapper: int firstIndex>;

        $i2 = r0.<org.apache.commons.math3.ode.EquationsMapper: int dimension>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, 0, r2, $i3, $i2);

        return;
    }

    public static void <clinit>()
    {
        <org.apache.commons.math3.ode.EquationsMapper: long serialVersionUID> = 20110925L;

        return;
    }
}
