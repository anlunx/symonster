final class com.opengamma.analytics.financial.model.interestrate.curve.ForwardCurve$8 extends com.opengamma.analytics.math.curve.FunctionalDoublesCurve
{
    final com.opengamma.analytics.math.curve.Curve val$fwdCurve;

    void <init>(com.opengamma.analytics.math.function.Function1D, com.opengamma.analytics.math.curve.Curve)
    {
        com.opengamma.analytics.financial.model.interestrate.curve.ForwardCurve$8 r0;
        com.opengamma.analytics.math.function.Function1D r1;
        com.opengamma.analytics.math.curve.Curve r2;

        r0 := @this: com.opengamma.analytics.financial.model.interestrate.curve.ForwardCurve$8;

        r1 := @parameter0: com.opengamma.analytics.math.function.Function1D;

        r2 := @parameter1: com.opengamma.analytics.math.curve.Curve;

        r0.<com.opengamma.analytics.financial.model.interestrate.curve.ForwardCurve$8: com.opengamma.analytics.math.curve.Curve val$fwdCurve> = r2;

        specialinvoke r0.<com.opengamma.analytics.math.curve.FunctionalDoublesCurve: void <init>(com.opengamma.analytics.math.function.Function1D)>(r1);

        return;
    }

    public java.lang.Object writeReplace()
    {
        com.opengamma.analytics.financial.model.interestrate.curve.ForwardCurve$8 r0;
        com.opengamma.analytics.util.serialization.InvokedSerializedForm $r1;
        java.lang.Object[] $r2;
        com.opengamma.analytics.math.curve.Curve $r3;

        r0 := @this: com.opengamma.analytics.financial.model.interestrate.curve.ForwardCurve$8;

        $r1 = new com.opengamma.analytics.util.serialization.InvokedSerializedForm;

        $r2 = newarray (java.lang.Object)[1];

        $r3 = r0.<com.opengamma.analytics.financial.model.interestrate.curve.ForwardCurve$8: com.opengamma.analytics.math.curve.Curve val$fwdCurve>;

        $r2[0] = $r3;

        specialinvoke $r1.<com.opengamma.analytics.util.serialization.InvokedSerializedForm: void <init>(java.lang.Object,java.lang.String,java.lang.Object[])>(class "com/opengamma/analytics/financial/model/interestrate/curve/ForwardCurve", "getDriftCurve", $r2);

        return $r1;
    }
}
