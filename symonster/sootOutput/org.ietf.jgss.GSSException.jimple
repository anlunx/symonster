public class org.ietf.jgss.GSSException extends java.lang.Exception
{
    private static final long serialVersionUID;
    public static final int BAD_BINDINGS;
    public static final int BAD_MECH;
    public static final int BAD_NAME;
    public static final int BAD_NAMETYPE;
    public static final int BAD_STATUS;
    public static final int BAD_MIC;
    public static final int CONTEXT_EXPIRED;
    public static final int CREDENTIALS_EXPIRED;
    public static final int DEFECTIVE_CREDENTIAL;
    public static final int DEFECTIVE_TOKEN;
    public static final int FAILURE;
    public static final int NO_CONTEXT;
    public static final int NO_CRED;
    public static final int BAD_QOP;
    public static final int UNAUTHORIZED;
    public static final int UNAVAILABLE;
    public static final int DUPLICATE_ELEMENT;
    public static final int NAME_NOT_MN;
    public static final int DUPLICATE_TOKEN;
    public static final int OLD_TOKEN;
    public static final int UNSEQ_TOKEN;
    public static final int GAP_TOKEN;
    private static java.lang.String[] messages;
    private int major;
    private int minor;
    private java.lang.String minorMessage;
    private java.lang.String majorString;

    public void <init>(int)
    {
        org.ietf.jgss.GSSException r0;
        int i0;
        boolean $z0;

        r0 := @this: org.ietf.jgss.GSSException;

        i0 := @parameter0: int;

        specialinvoke r0.<java.lang.Exception: void <init>()>();

        r0.<org.ietf.jgss.GSSException: int minor> = 0;

        r0.<org.ietf.jgss.GSSException: java.lang.String minorMessage> = null;

        r0.<org.ietf.jgss.GSSException: java.lang.String majorString> = null;

        $z0 = specialinvoke r0.<org.ietf.jgss.GSSException: boolean validateMajor(int)>(i0);

        if $z0 == 0 goto label1;

        r0.<org.ietf.jgss.GSSException: int major> = i0;

        goto label2;

     label1:
        r0.<org.ietf.jgss.GSSException: int major> = 11;

     label2:
        return;
    }

    void <init>(int, java.lang.String)
    {
        org.ietf.jgss.GSSException r0;
        int i0;
        java.lang.String r1;
        boolean $z0;

        r0 := @this: org.ietf.jgss.GSSException;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        specialinvoke r0.<java.lang.Exception: void <init>()>();

        r0.<org.ietf.jgss.GSSException: int minor> = 0;

        r0.<org.ietf.jgss.GSSException: java.lang.String minorMessage> = null;

        r0.<org.ietf.jgss.GSSException: java.lang.String majorString> = null;

        $z0 = specialinvoke r0.<org.ietf.jgss.GSSException: boolean validateMajor(int)>(i0);

        if $z0 == 0 goto label1;

        r0.<org.ietf.jgss.GSSException: int major> = i0;

        goto label2;

     label1:
        r0.<org.ietf.jgss.GSSException: int major> = 11;

     label2:
        r0.<org.ietf.jgss.GSSException: java.lang.String majorString> = r1;

        return;
    }

    public void <init>(int, int, java.lang.String)
    {
        org.ietf.jgss.GSSException r0;
        int i0, i1;
        java.lang.String r1;
        boolean $z0;

        r0 := @this: org.ietf.jgss.GSSException;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: java.lang.String;

        specialinvoke r0.<java.lang.Exception: void <init>()>();

        r0.<org.ietf.jgss.GSSException: int minor> = 0;

        r0.<org.ietf.jgss.GSSException: java.lang.String minorMessage> = null;

        r0.<org.ietf.jgss.GSSException: java.lang.String majorString> = null;

        $z0 = specialinvoke r0.<org.ietf.jgss.GSSException: boolean validateMajor(int)>(i0);

        if $z0 == 0 goto label1;

        r0.<org.ietf.jgss.GSSException: int major> = i0;

        goto label2;

     label1:
        r0.<org.ietf.jgss.GSSException: int major> = 11;

     label2:
        r0.<org.ietf.jgss.GSSException: int minor> = i1;

        r0.<org.ietf.jgss.GSSException: java.lang.String minorMessage> = r1;

        return;
    }

    public int getMajor()
    {
        org.ietf.jgss.GSSException r0;
        int $i0;

        r0 := @this: org.ietf.jgss.GSSException;

        $i0 = r0.<org.ietf.jgss.GSSException: int major>;

        return $i0;
    }

    public int getMinor()
    {
        org.ietf.jgss.GSSException r0;
        int $i0;

        r0 := @this: org.ietf.jgss.GSSException;

        $i0 = r0.<org.ietf.jgss.GSSException: int minor>;

        return $i0;
    }

    public java.lang.String getMajorString()
    {
        org.ietf.jgss.GSSException r0;
        java.lang.String $r1, $r3, $r4;
        int $i0, $i1;
        java.lang.String[] $r2;

        r0 := @this: org.ietf.jgss.GSSException;

        $r1 = r0.<org.ietf.jgss.GSSException: java.lang.String majorString>;

        if $r1 == null goto label1;

        $r4 = r0.<org.ietf.jgss.GSSException: java.lang.String majorString>;

        return $r4;

     label1:
        $r2 = <org.ietf.jgss.GSSException: java.lang.String[] messages>;

        $i0 = r0.<org.ietf.jgss.GSSException: int major>;

        $i1 = $i0 - 1;

        $r3 = $r2[$i1];

        return $r3;
    }

    public java.lang.String getMinorString()
    {
        org.ietf.jgss.GSSException r0;
        java.lang.String $r1;

        r0 := @this: org.ietf.jgss.GSSException;

        $r1 = r0.<org.ietf.jgss.GSSException: java.lang.String minorMessage>;

        return $r1;
    }

    public void setMinor(int, java.lang.String)
    {
        org.ietf.jgss.GSSException r0;
        int i0;
        java.lang.String r1;

        r0 := @this: org.ietf.jgss.GSSException;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        r0.<org.ietf.jgss.GSSException: int minor> = i0;

        r0.<org.ietf.jgss.GSSException: java.lang.String minorMessage> = r1;

        return;
    }

    public java.lang.String toString()
    {
        org.ietf.jgss.GSSException r0;
        java.lang.StringBuilder $r1, $r2, $r4;
        java.lang.String $r3, $r5;

        r0 := @this: org.ietf.jgss.GSSException;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("GSSException: ");

        $r3 = virtualinvoke r0.<org.ietf.jgss.GSSException: java.lang.String getMessage()>();

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r5;
    }

    public java.lang.String getMessage()
    {
        org.ietf.jgss.GSSException r0;
        int $i0;
        java.lang.StringBuilder $r1, $r3, $r4, $r6, $r7;
        java.lang.String $r2, $r5, $r8, $r9;

        r0 := @this: org.ietf.jgss.GSSException;

        $i0 = r0.<org.ietf.jgss.GSSException: int minor>;

        if $i0 != 0 goto label1;

        $r9 = virtualinvoke r0.<org.ietf.jgss.GSSException: java.lang.String getMajorString()>();

        return $r9;

     label1:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke r0.<org.ietf.jgss.GSSException: java.lang.String getMajorString()>();

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (Mechanism level: ");

        $r5 = virtualinvoke r0.<org.ietf.jgss.GSSException: java.lang.String getMinorString()>();

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r8;
    }

    private boolean validateMajor(int)
    {
        org.ietf.jgss.GSSException r0;
        int i0, $i1;
        java.lang.String[] $r1;

        r0 := @this: org.ietf.jgss.GSSException;

        i0 := @parameter0: int;

        if i0 <= 0 goto label1;

        $r1 = <org.ietf.jgss.GSSException: java.lang.String[] messages>;

        $i1 = lengthof $r1;

        if i0 > $i1 goto label1;

        return 1;

     label1:
        return 0;
    }

    static void <clinit>()
    {
        java.lang.String[] $r0;

        <org.ietf.jgss.GSSException: int GAP_TOKEN> = 22;

        <org.ietf.jgss.GSSException: int UNSEQ_TOKEN> = 21;

        <org.ietf.jgss.GSSException: int OLD_TOKEN> = 20;

        <org.ietf.jgss.GSSException: int DUPLICATE_TOKEN> = 19;

        <org.ietf.jgss.GSSException: int NAME_NOT_MN> = 18;

        <org.ietf.jgss.GSSException: int DUPLICATE_ELEMENT> = 17;

        <org.ietf.jgss.GSSException: int UNAVAILABLE> = 16;

        <org.ietf.jgss.GSSException: int UNAUTHORIZED> = 15;

        <org.ietf.jgss.GSSException: int BAD_QOP> = 14;

        <org.ietf.jgss.GSSException: int NO_CRED> = 13;

        <org.ietf.jgss.GSSException: int NO_CONTEXT> = 12;

        <org.ietf.jgss.GSSException: int FAILURE> = 11;

        <org.ietf.jgss.GSSException: int DEFECTIVE_TOKEN> = 10;

        <org.ietf.jgss.GSSException: int DEFECTIVE_CREDENTIAL> = 9;

        <org.ietf.jgss.GSSException: int CREDENTIALS_EXPIRED> = 8;

        <org.ietf.jgss.GSSException: int CONTEXT_EXPIRED> = 7;

        <org.ietf.jgss.GSSException: int BAD_MIC> = 6;

        <org.ietf.jgss.GSSException: int BAD_STATUS> = 5;

        <org.ietf.jgss.GSSException: int BAD_NAMETYPE> = 4;

        <org.ietf.jgss.GSSException: int BAD_NAME> = 3;

        <org.ietf.jgss.GSSException: int BAD_MECH> = 2;

        <org.ietf.jgss.GSSException: int BAD_BINDINGS> = 1;

        <org.ietf.jgss.GSSException: long serialVersionUID> = -2706218945227726672L;

        $r0 = newarray (java.lang.String)[22];

        $r0[0] = "Channel binding mismatch";

        $r0[1] = "Unsupported mechanism requested";

        $r0[2] = "Invalid name provided";

        $r0[3] = "Name of unsupported type provided";

        $r0[4] = "Invalid input status selector";

        $r0[5] = "Token had invalid integrity check";

        $r0[6] = "Specified security context expired";

        $r0[7] = "Expired credentials detected";

        $r0[8] = "Defective credential detected";

        $r0[9] = "Defective token detected";

        $r0[10] = "Failure unspecified at GSS-API level";

        $r0[11] = "Security context init/accept not yet called or context deleted";

        $r0[12] = "No valid credentials provided";

        $r0[13] = "Unsupported QOP value";

        $r0[14] = "Operation unauthorized";

        $r0[15] = "Operation unavailable";

        $r0[16] = "Duplicate credential element requested";

        $r0[17] = "Name contains multi-mechanism elements";

        $r0[18] = "The token was a duplicate of an earlier token";

        $r0[19] = "The token\'s validity period has expired";

        $r0[20] = "A later token has already been processed";

        $r0[21] = "An expected per-message token was not received";

        <org.ietf.jgss.GSSException: java.lang.String[] messages> = $r0;

        return;
    }
}
