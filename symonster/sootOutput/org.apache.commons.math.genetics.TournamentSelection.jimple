public class org.apache.commons.math.genetics.TournamentSelection extends java.lang.Object implements org.apache.commons.math.genetics.SelectionPolicy
{
    private int arity;

    public void <init>(int)
    {
        org.apache.commons.math.genetics.TournamentSelection r0;
        int i0;

        r0 := @this: org.apache.commons.math.genetics.TournamentSelection;

        i0 := @parameter0: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.commons.math.genetics.TournamentSelection: int arity> = i0;

        return;
    }

    public org.apache.commons.math.genetics.ChromosomePair select(org.apache.commons.math.genetics.Population)
    {
        org.apache.commons.math.genetics.TournamentSelection r0;
        org.apache.commons.math.genetics.Population r1;
        org.apache.commons.math.genetics.ChromosomePair $r2;
        org.apache.commons.math.genetics.ListPopulation $r3, $r5;
        org.apache.commons.math.genetics.Chromosome $r4, $r6;

        r0 := @this: org.apache.commons.math.genetics.TournamentSelection;

        r1 := @parameter0: org.apache.commons.math.genetics.Population;

        $r2 = new org.apache.commons.math.genetics.ChromosomePair;

        $r3 = (org.apache.commons.math.genetics.ListPopulation) r1;

        $r4 = specialinvoke r0.<org.apache.commons.math.genetics.TournamentSelection: org.apache.commons.math.genetics.Chromosome tournament(org.apache.commons.math.genetics.ListPopulation)>($r3);

        $r5 = (org.apache.commons.math.genetics.ListPopulation) r1;

        $r6 = specialinvoke r0.<org.apache.commons.math.genetics.TournamentSelection: org.apache.commons.math.genetics.Chromosome tournament(org.apache.commons.math.genetics.ListPopulation)>($r5);

        specialinvoke $r2.<org.apache.commons.math.genetics.ChromosomePair: void <init>(org.apache.commons.math.genetics.Chromosome,org.apache.commons.math.genetics.Chromosome)>($r4, $r6);

        return $r2;
    }

    private org.apache.commons.math.genetics.Chromosome tournament(org.apache.commons.math.genetics.ListPopulation)
    {
        org.apache.commons.math.genetics.TournamentSelection r0;
        org.apache.commons.math.genetics.ListPopulation r1;
        int i0, $i1, $i2, $i3, $i4, $i5, i6;
        org.apache.commons.math.genetics.TournamentSelection$1 $r4;
        java.util.ArrayList $r5;
        java.util.List $r6;
        org.apache.commons.math.genetics.Chromosome $r7, $r10;
        org.apache.commons.math.random.RandomGenerator $r8;
        java.lang.Object $r9;
        java.lang.IllegalArgumentException $r12;

        r0 := @this: org.apache.commons.math.genetics.TournamentSelection;

        r1 := @parameter0: org.apache.commons.math.genetics.ListPopulation;

        $i1 = virtualinvoke r1.<org.apache.commons.math.genetics.ListPopulation: int getPopulationSize()>();

        $i2 = r0.<org.apache.commons.math.genetics.TournamentSelection: int arity>;

        if $i1 >= $i2 goto label1;

        $r12 = new java.lang.IllegalArgumentException;

        specialinvoke $r12.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Tournament arity cannot be bigger than population size.");

        throw $r12;

     label1:
        $r4 = new org.apache.commons.math.genetics.TournamentSelection$1;

        $i3 = r0.<org.apache.commons.math.genetics.TournamentSelection: int arity>;

        specialinvoke $r4.<org.apache.commons.math.genetics.TournamentSelection$1: void <init>(org.apache.commons.math.genetics.TournamentSelection,int)>(r0, $i3);

        $r5 = new java.util.ArrayList;

        $r6 = virtualinvoke r1.<org.apache.commons.math.genetics.ListPopulation: java.util.List getChromosomes()>();

        specialinvoke $r5.<java.util.ArrayList: void <init>(java.util.Collection)>($r6);

        i6 = 0;

     label2:
        $i4 = r0.<org.apache.commons.math.genetics.TournamentSelection: int arity>;

        if i6 >= $i4 goto label3;

        $r8 = staticinvoke <org.apache.commons.math.genetics.GeneticAlgorithm: org.apache.commons.math.random.RandomGenerator getRandomGenerator()>();

        $i5 = interfaceinvoke $r5.<java.util.List: int size()>();

        i0 = interfaceinvoke $r8.<org.apache.commons.math.random.RandomGenerator: int nextInt(int)>($i5);

        $r9 = interfaceinvoke $r5.<java.util.List: java.lang.Object get(int)>(i0);

        $r10 = (org.apache.commons.math.genetics.Chromosome) $r9;

        virtualinvoke $r4.<org.apache.commons.math.genetics.ListPopulation: void addChromosome(org.apache.commons.math.genetics.Chromosome)>($r10);

        interfaceinvoke $r5.<java.util.List: java.lang.Object remove(int)>(i0);

        i6 = i6 + 1;

        goto label2;

     label3:
        $r7 = virtualinvoke $r4.<org.apache.commons.math.genetics.ListPopulation: org.apache.commons.math.genetics.Chromosome getFittestChromosome()>();

        return $r7;
    }

    public int getArity()
    {
        org.apache.commons.math.genetics.TournamentSelection r0;
        int $i0;

        r0 := @this: org.apache.commons.math.genetics.TournamentSelection;

        $i0 = r0.<org.apache.commons.math.genetics.TournamentSelection: int arity>;

        return $i0;
    }

    public void setArity(int)
    {
        org.apache.commons.math.genetics.TournamentSelection r0;
        int i0;

        r0 := @this: org.apache.commons.math.genetics.TournamentSelection;

        i0 := @parameter0: int;

        r0.<org.apache.commons.math.genetics.TournamentSelection: int arity> = i0;

        return;
    }
}
