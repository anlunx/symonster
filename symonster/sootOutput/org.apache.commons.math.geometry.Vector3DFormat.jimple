public class org.apache.commons.math.geometry.Vector3DFormat extends org.apache.commons.math.util.CompositeFormat
{
    private static final long serialVersionUID;
    private static final java.lang.String DEFAULT_PREFIX;
    private static final java.lang.String DEFAULT_SUFFIX;
    private static final java.lang.String DEFAULT_SEPARATOR;
    private final java.lang.String prefix;
    private final java.lang.String suffix;
    private final java.lang.String separator;
    private final java.lang.String trimmedPrefix;
    private final java.lang.String trimmedSuffix;
    private final java.lang.String trimmedSeparator;
    private final java.text.NumberFormat format;

    public void <init>()
    {
        org.apache.commons.math.geometry.Vector3DFormat r0;
        java.text.NumberFormat $r1;

        r0 := @this: org.apache.commons.math.geometry.Vector3DFormat;

        $r1 = staticinvoke <org.apache.commons.math.geometry.Vector3DFormat: java.text.NumberFormat getDefaultNumberFormat()>();

        specialinvoke r0.<org.apache.commons.math.geometry.Vector3DFormat: void <init>(java.lang.String,java.lang.String,java.lang.String,java.text.NumberFormat)>("{", "}", "; ", $r1);

        return;
    }

    public void <init>(java.text.NumberFormat)
    {
        org.apache.commons.math.geometry.Vector3DFormat r0;
        java.text.NumberFormat r1;

        r0 := @this: org.apache.commons.math.geometry.Vector3DFormat;

        r1 := @parameter0: java.text.NumberFormat;

        specialinvoke r0.<org.apache.commons.math.geometry.Vector3DFormat: void <init>(java.lang.String,java.lang.String,java.lang.String,java.text.NumberFormat)>("{", "}", "; ", r1);

        return;
    }

    public void <init>(java.lang.String, java.lang.String, java.lang.String)
    {
        org.apache.commons.math.geometry.Vector3DFormat r0;
        java.lang.String r1, r2, r3;
        java.text.NumberFormat $r4;

        r0 := @this: org.apache.commons.math.geometry.Vector3DFormat;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        $r4 = staticinvoke <org.apache.commons.math.geometry.Vector3DFormat: java.text.NumberFormat getDefaultNumberFormat()>();

        specialinvoke r0.<org.apache.commons.math.geometry.Vector3DFormat: void <init>(java.lang.String,java.lang.String,java.lang.String,java.text.NumberFormat)>(r1, r2, r3, $r4);

        return;
    }

    public void <init>(java.lang.String, java.lang.String, java.lang.String, java.text.NumberFormat)
    {
        org.apache.commons.math.geometry.Vector3DFormat r0;
        java.lang.String r1, r2, r3, $r5, $r6, $r7;
        java.text.NumberFormat r4;

        r0 := @this: org.apache.commons.math.geometry.Vector3DFormat;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.text.NumberFormat;

        specialinvoke r0.<org.apache.commons.math.util.CompositeFormat: void <init>()>();

        r0.<org.apache.commons.math.geometry.Vector3DFormat: java.lang.String prefix> = r1;

        r0.<org.apache.commons.math.geometry.Vector3DFormat: java.lang.String suffix> = r2;

        r0.<org.apache.commons.math.geometry.Vector3DFormat: java.lang.String separator> = r3;

        $r5 = virtualinvoke r1.<java.lang.String: java.lang.String trim()>();

        r0.<org.apache.commons.math.geometry.Vector3DFormat: java.lang.String trimmedPrefix> = $r5;

        $r6 = virtualinvoke r2.<java.lang.String: java.lang.String trim()>();

        r0.<org.apache.commons.math.geometry.Vector3DFormat: java.lang.String trimmedSuffix> = $r6;

        $r7 = virtualinvoke r3.<java.lang.String: java.lang.String trim()>();

        r0.<org.apache.commons.math.geometry.Vector3DFormat: java.lang.String trimmedSeparator> = $r7;

        r0.<org.apache.commons.math.geometry.Vector3DFormat: java.text.NumberFormat format> = r4;

        return;
    }

    public static java.util.Locale[] getAvailableLocales()
    {
        java.util.Locale[] $r0;

        $r0 = staticinvoke <java.text.NumberFormat: java.util.Locale[] getAvailableLocales()>();

        return $r0;
    }

    public java.lang.String getPrefix()
    {
        org.apache.commons.math.geometry.Vector3DFormat r0;
        java.lang.String $r1;

        r0 := @this: org.apache.commons.math.geometry.Vector3DFormat;

        $r1 = r0.<org.apache.commons.math.geometry.Vector3DFormat: java.lang.String prefix>;

        return $r1;
    }

    public java.lang.String getSuffix()
    {
        org.apache.commons.math.geometry.Vector3DFormat r0;
        java.lang.String $r1;

        r0 := @this: org.apache.commons.math.geometry.Vector3DFormat;

        $r1 = r0.<org.apache.commons.math.geometry.Vector3DFormat: java.lang.String suffix>;

        return $r1;
    }

    public java.lang.String getSeparator()
    {
        org.apache.commons.math.geometry.Vector3DFormat r0;
        java.lang.String $r1;

        r0 := @this: org.apache.commons.math.geometry.Vector3DFormat;

        $r1 = r0.<org.apache.commons.math.geometry.Vector3DFormat: java.lang.String separator>;

        return $r1;
    }

    public java.text.NumberFormat getFormat()
    {
        org.apache.commons.math.geometry.Vector3DFormat r0;
        java.text.NumberFormat $r1;

        r0 := @this: org.apache.commons.math.geometry.Vector3DFormat;

        $r1 = r0.<org.apache.commons.math.geometry.Vector3DFormat: java.text.NumberFormat format>;

        return $r1;
    }

    public static org.apache.commons.math.geometry.Vector3DFormat getInstance()
    {
        java.util.Locale $r0;
        org.apache.commons.math.geometry.Vector3DFormat $r1;

        $r0 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>();

        $r1 = staticinvoke <org.apache.commons.math.geometry.Vector3DFormat: org.apache.commons.math.geometry.Vector3DFormat getInstance(java.util.Locale)>($r0);

        return $r1;
    }

    public static org.apache.commons.math.geometry.Vector3DFormat getInstance(java.util.Locale)
    {
        java.util.Locale r0;
        org.apache.commons.math.geometry.Vector3DFormat $r1;
        java.text.NumberFormat $r2;

        r0 := @parameter0: java.util.Locale;

        $r1 = new org.apache.commons.math.geometry.Vector3DFormat;

        $r2 = staticinvoke <org.apache.commons.math.geometry.Vector3DFormat: java.text.NumberFormat getDefaultNumberFormat(java.util.Locale)>(r0);

        specialinvoke $r1.<org.apache.commons.math.geometry.Vector3DFormat: void <init>(java.text.NumberFormat)>($r2);

        return $r1;
    }

    public static java.lang.String formatVector3D(org.apache.commons.math.geometry.Vector3D)
    {
        org.apache.commons.math.geometry.Vector3D r0;
        org.apache.commons.math.geometry.Vector3DFormat $r1;
        java.lang.String $r2;

        r0 := @parameter0: org.apache.commons.math.geometry.Vector3D;

        $r1 = staticinvoke <org.apache.commons.math.geometry.Vector3DFormat: org.apache.commons.math.geometry.Vector3DFormat getInstance()>();

        $r2 = virtualinvoke $r1.<org.apache.commons.math.geometry.Vector3DFormat: java.lang.String format(java.lang.Object)>(r0);

        return $r2;
    }

    public java.lang.StringBuffer format(org.apache.commons.math.geometry.Vector3D, java.lang.StringBuffer, java.text.FieldPosition)
    {
        org.apache.commons.math.geometry.Vector3DFormat r0;
        org.apache.commons.math.geometry.Vector3D r1;
        java.lang.StringBuffer r2;
        java.text.FieldPosition r3;
        java.lang.String $r4, $r8, $r12, $r16;
        double $d0, $d1, $d2;
        java.text.NumberFormat $r6, $r10, $r14;

        r0 := @this: org.apache.commons.math.geometry.Vector3DFormat;

        r1 := @parameter0: org.apache.commons.math.geometry.Vector3D;

        r2 := @parameter1: java.lang.StringBuffer;

        r3 := @parameter2: java.text.FieldPosition;

        virtualinvoke r3.<java.text.FieldPosition: void setBeginIndex(int)>(0);

        virtualinvoke r3.<java.text.FieldPosition: void setEndIndex(int)>(0);

        $r4 = r0.<org.apache.commons.math.geometry.Vector3DFormat: java.lang.String prefix>;

        virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);

        $d0 = virtualinvoke r1.<org.apache.commons.math.geometry.Vector3D: double getX()>();

        $r6 = r0.<org.apache.commons.math.geometry.Vector3DFormat: java.text.NumberFormat format>;

        virtualinvoke r0.<org.apache.commons.math.geometry.Vector3DFormat: java.lang.StringBuffer formatDouble(double,java.text.NumberFormat,java.lang.StringBuffer,java.text.FieldPosition)>($d0, $r6, r2, r3);

        $r8 = r0.<org.apache.commons.math.geometry.Vector3DFormat: java.lang.String separator>;

        virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r8);

        $d1 = virtualinvoke r1.<org.apache.commons.math.geometry.Vector3D: double getY()>();

        $r10 = r0.<org.apache.commons.math.geometry.Vector3DFormat: java.text.NumberFormat format>;

        virtualinvoke r0.<org.apache.commons.math.geometry.Vector3DFormat: java.lang.StringBuffer formatDouble(double,java.text.NumberFormat,java.lang.StringBuffer,java.text.FieldPosition)>($d1, $r10, r2, r3);

        $r12 = r0.<org.apache.commons.math.geometry.Vector3DFormat: java.lang.String separator>;

        virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r12);

        $d2 = virtualinvoke r1.<org.apache.commons.math.geometry.Vector3D: double getZ()>();

        $r14 = r0.<org.apache.commons.math.geometry.Vector3DFormat: java.text.NumberFormat format>;

        virtualinvoke r0.<org.apache.commons.math.geometry.Vector3DFormat: java.lang.StringBuffer formatDouble(double,java.text.NumberFormat,java.lang.StringBuffer,java.text.FieldPosition)>($d2, $r14, r2, r3);

        $r16 = r0.<org.apache.commons.math.geometry.Vector3DFormat: java.lang.String suffix>;

        virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r16);

        return r2;
    }

    public java.lang.StringBuffer format(java.lang.Object, java.lang.StringBuffer, java.text.FieldPosition)
    {
        org.apache.commons.math.geometry.Vector3DFormat r0;
        java.lang.Object r1;
        java.lang.StringBuffer r2, $r10;
        java.text.FieldPosition r3;
        boolean $z0;
        java.lang.Object[] $r4;
        org.apache.commons.math.exception.util.LocalizedFormats $r5;
        java.lang.Class $r6;
        java.lang.String $r7;
        java.lang.IllegalArgumentException $r8;
        org.apache.commons.math.geometry.Vector3D $r9;

        r0 := @this: org.apache.commons.math.geometry.Vector3DFormat;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.StringBuffer;

        r3 := @parameter2: java.text.FieldPosition;

        $z0 = r1 instanceof org.apache.commons.math.geometry.Vector3D;

        if $z0 == 0 goto label1;

        $r9 = (org.apache.commons.math.geometry.Vector3D) r1;

        $r10 = virtualinvoke r0.<org.apache.commons.math.geometry.Vector3DFormat: java.lang.StringBuffer format(org.apache.commons.math.geometry.Vector3D,java.lang.StringBuffer,java.text.FieldPosition)>($r9, r2, r3);

        return $r10;

     label1:
        $r5 = <org.apache.commons.math.exception.util.LocalizedFormats: org.apache.commons.math.exception.util.LocalizedFormats CANNOT_FORMAT_INSTANCE_AS_3D_VECTOR>;

        $r4 = newarray (java.lang.Object)[1];

        $r6 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        $r7 = virtualinvoke $r6.<java.lang.Class: java.lang.String getName()>();

        $r4[0] = $r7;

        $r8 = staticinvoke <org.apache.commons.math.MathRuntimeException: java.lang.IllegalArgumentException createIllegalArgumentException(org.apache.commons.math.exception.util.Localizable,java.lang.Object[])>($r5, $r4);

        throw $r8;
    }

    public org.apache.commons.math.geometry.Vector3D parse(java.lang.String) throws java.text.ParseException
    {
        org.apache.commons.math.geometry.Vector3DFormat r0;
        java.lang.String r1;
        org.apache.commons.math.geometry.Vector3D r3;
        java.text.ParsePosition $r4;
        int $i0, $i1;
        java.lang.Object[] $r5;
        org.apache.commons.math.exception.util.LocalizedFormats $r6;
        java.text.ParseException $r7;

        r0 := @this: org.apache.commons.math.geometry.Vector3DFormat;

        r1 := @parameter0: java.lang.String;

        $r4 = new java.text.ParsePosition;

        specialinvoke $r4.<java.text.ParsePosition: void <init>(int)>(0);

        r3 = virtualinvoke r0.<org.apache.commons.math.geometry.Vector3DFormat: org.apache.commons.math.geometry.Vector3D parse(java.lang.String,java.text.ParsePosition)>(r1, $r4);

        $i0 = virtualinvoke $r4.<java.text.ParsePosition: int getIndex()>();

        if $i0 != 0 goto label1;

        $i1 = virtualinvoke $r4.<java.text.ParsePosition: int getErrorIndex()>();

        $r6 = <org.apache.commons.math.exception.util.LocalizedFormats: org.apache.commons.math.exception.util.LocalizedFormats UNPARSEABLE_3D_VECTOR>;

        $r5 = newarray (java.lang.Object)[1];

        $r5[0] = r1;

        $r7 = staticinvoke <org.apache.commons.math.MathRuntimeException: java.text.ParseException createParseException(int,org.apache.commons.math.exception.util.Localizable,java.lang.Object[])>($i1, $r6, $r5);

        throw $r7;

     label1:
        return r3;
    }

    public org.apache.commons.math.geometry.Vector3D parse(java.lang.String, java.text.ParsePosition)
    {
        org.apache.commons.math.geometry.Vector3DFormat r0;
        java.lang.String r1, $r6, $r8, $r10, $r12;
        java.text.ParsePosition r2;
        int i0;
        java.lang.Number r3, r4, r5;
        boolean $z0, $z1, $z2, $z3;
        java.text.NumberFormat $r7, $r9, $r11;
        org.apache.commons.math.geometry.Vector3D $r13;
        double $d0, $d1, $d2;

        r0 := @this: org.apache.commons.math.geometry.Vector3DFormat;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.text.ParsePosition;

        i0 = virtualinvoke r2.<java.text.ParsePosition: int getIndex()>();

        virtualinvoke r0.<org.apache.commons.math.geometry.Vector3DFormat: void parseAndIgnoreWhitespace(java.lang.String,java.text.ParsePosition)>(r1, r2);

        $r6 = r0.<org.apache.commons.math.geometry.Vector3DFormat: java.lang.String trimmedPrefix>;

        $z0 = virtualinvoke r0.<org.apache.commons.math.geometry.Vector3DFormat: boolean parseFixedstring(java.lang.String,java.lang.String,java.text.ParsePosition)>(r1, $r6, r2);

        if $z0 != 0 goto label1;

        return null;

     label1:
        virtualinvoke r0.<org.apache.commons.math.geometry.Vector3DFormat: void parseAndIgnoreWhitespace(java.lang.String,java.text.ParsePosition)>(r1, r2);

        $r7 = r0.<org.apache.commons.math.geometry.Vector3DFormat: java.text.NumberFormat format>;

        r3 = virtualinvoke r0.<org.apache.commons.math.geometry.Vector3DFormat: java.lang.Number parseNumber(java.lang.String,java.text.NumberFormat,java.text.ParsePosition)>(r1, $r7, r2);

        if r3 != null goto label2;

        virtualinvoke r2.<java.text.ParsePosition: void setIndex(int)>(i0);

        return null;

     label2:
        virtualinvoke r0.<org.apache.commons.math.geometry.Vector3DFormat: void parseAndIgnoreWhitespace(java.lang.String,java.text.ParsePosition)>(r1, r2);

        $r8 = r0.<org.apache.commons.math.geometry.Vector3DFormat: java.lang.String trimmedSeparator>;

        $z1 = virtualinvoke r0.<org.apache.commons.math.geometry.Vector3DFormat: boolean parseFixedstring(java.lang.String,java.lang.String,java.text.ParsePosition)>(r1, $r8, r2);

        if $z1 != 0 goto label3;

        return null;

     label3:
        virtualinvoke r0.<org.apache.commons.math.geometry.Vector3DFormat: void parseAndIgnoreWhitespace(java.lang.String,java.text.ParsePosition)>(r1, r2);

        $r9 = r0.<org.apache.commons.math.geometry.Vector3DFormat: java.text.NumberFormat format>;

        r4 = virtualinvoke r0.<org.apache.commons.math.geometry.Vector3DFormat: java.lang.Number parseNumber(java.lang.String,java.text.NumberFormat,java.text.ParsePosition)>(r1, $r9, r2);

        if r4 != null goto label4;

        virtualinvoke r2.<java.text.ParsePosition: void setIndex(int)>(i0);

        return null;

     label4:
        virtualinvoke r0.<org.apache.commons.math.geometry.Vector3DFormat: void parseAndIgnoreWhitespace(java.lang.String,java.text.ParsePosition)>(r1, r2);

        $r10 = r0.<org.apache.commons.math.geometry.Vector3DFormat: java.lang.String trimmedSeparator>;

        $z2 = virtualinvoke r0.<org.apache.commons.math.geometry.Vector3DFormat: boolean parseFixedstring(java.lang.String,java.lang.String,java.text.ParsePosition)>(r1, $r10, r2);

        if $z2 != 0 goto label5;

        return null;

     label5:
        virtualinvoke r0.<org.apache.commons.math.geometry.Vector3DFormat: void parseAndIgnoreWhitespace(java.lang.String,java.text.ParsePosition)>(r1, r2);

        $r11 = r0.<org.apache.commons.math.geometry.Vector3DFormat: java.text.NumberFormat format>;

        r5 = virtualinvoke r0.<org.apache.commons.math.geometry.Vector3DFormat: java.lang.Number parseNumber(java.lang.String,java.text.NumberFormat,java.text.ParsePosition)>(r1, $r11, r2);

        if r5 != null goto label6;

        virtualinvoke r2.<java.text.ParsePosition: void setIndex(int)>(i0);

        return null;

     label6:
        virtualinvoke r0.<org.apache.commons.math.geometry.Vector3DFormat: void parseAndIgnoreWhitespace(java.lang.String,java.text.ParsePosition)>(r1, r2);

        $r12 = r0.<org.apache.commons.math.geometry.Vector3DFormat: java.lang.String trimmedSuffix>;

        $z3 = virtualinvoke r0.<org.apache.commons.math.geometry.Vector3DFormat: boolean parseFixedstring(java.lang.String,java.lang.String,java.text.ParsePosition)>(r1, $r12, r2);

        if $z3 != 0 goto label7;

        return null;

     label7:
        $r13 = new org.apache.commons.math.geometry.Vector3D;

        $d0 = virtualinvoke r3.<java.lang.Number: double doubleValue()>();

        $d1 = virtualinvoke r4.<java.lang.Number: double doubleValue()>();

        $d2 = virtualinvoke r5.<java.lang.Number: double doubleValue()>();

        specialinvoke $r13.<org.apache.commons.math.geometry.Vector3D: void <init>(double,double,double)>($d0, $d1, $d2);

        return $r13;
    }

    public java.lang.Object parseObject(java.lang.String, java.text.ParsePosition)
    {
        org.apache.commons.math.geometry.Vector3DFormat r0;
        java.lang.String r1;
        java.text.ParsePosition r2;
        org.apache.commons.math.geometry.Vector3D $r3;

        r0 := @this: org.apache.commons.math.geometry.Vector3DFormat;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.text.ParsePosition;

        $r3 = virtualinvoke r0.<org.apache.commons.math.geometry.Vector3DFormat: org.apache.commons.math.geometry.Vector3D parse(java.lang.String,java.text.ParsePosition)>(r1, r2);

        return $r3;
    }

    public static void <clinit>()
    {
        <org.apache.commons.math.geometry.Vector3DFormat: java.lang.String DEFAULT_SEPARATOR> = "; ";

        <org.apache.commons.math.geometry.Vector3DFormat: java.lang.String DEFAULT_SUFFIX> = "}";

        <org.apache.commons.math.geometry.Vector3DFormat: java.lang.String DEFAULT_PREFIX> = "{";

        <org.apache.commons.math.geometry.Vector3DFormat: long serialVersionUID> = -5447606608652576301L;

        return;
    }
}
