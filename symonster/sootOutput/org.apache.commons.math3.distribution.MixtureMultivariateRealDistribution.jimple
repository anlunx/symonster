public class org.apache.commons.math3.distribution.MixtureMultivariateRealDistribution extends org.apache.commons.math3.distribution.AbstractMultivariateRealDistribution
{
    private final double[] weight;
    private final java.util.List distribution;

    public void <init>(java.util.List)
    {
        org.apache.commons.math3.distribution.MixtureMultivariateRealDistribution r0;
        java.util.List r1;
        org.apache.commons.math3.random.Well19937c $r2;

        r0 := @this: org.apache.commons.math3.distribution.MixtureMultivariateRealDistribution;

        r1 := @parameter0: java.util.List;

        $r2 = new org.apache.commons.math3.random.Well19937c;

        specialinvoke $r2.<org.apache.commons.math3.random.Well19937c: void <init>()>();

        specialinvoke r0.<org.apache.commons.math3.distribution.MixtureMultivariateRealDistribution: void <init>(org.apache.commons.math3.random.RandomGenerator,java.util.List)>($r2, r1);

        return;
    }

    public void <init>(org.apache.commons.math3.random.RandomGenerator, java.util.List)
    {
        org.apache.commons.math3.distribution.MixtureMultivariateRealDistribution r0;
        org.apache.commons.math3.random.RandomGenerator r1;
        java.util.List r2, $r13;
        int i0, i1, $i2, $i3, $i5, i6, i7;
        java.lang.Object $r3, $r5, $r9, $r11, $r14, $r18, $r19, $r21, $r23, $r26, $r29;
        org.apache.commons.math3.util.Pair $r4, r31, r32;
        org.apache.commons.math3.distribution.MultivariateRealDistribution $r6, $r20, $r30;
        boolean $z0;
        java.util.ArrayList $r7;
        double[] $r8, $r10;
        java.lang.Double $r12, $r22, $r24;
        double $d0, $d1, $d2, $d3, d4;
        org.apache.commons.math3.exception.MathArithmeticException $r15;
        java.lang.Object[] $r16;
        org.apache.commons.math3.exception.util.LocalizedFormats $r17;
        byte $b4;
        org.apache.commons.math3.exception.NotPositiveException $r25;
        java.lang.Number $r27;
        org.apache.commons.math3.exception.DimensionMismatchException $r28;

        r0 := @this: org.apache.commons.math3.distribution.MixtureMultivariateRealDistribution;

        r1 := @parameter0: org.apache.commons.math3.random.RandomGenerator;

        r2 := @parameter1: java.util.List;

        $r3 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>(0);

        $r4 = (org.apache.commons.math3.util.Pair) $r3;

        $r5 = virtualinvoke $r4.<org.apache.commons.math3.util.Pair: java.lang.Object getSecond()>();

        $r6 = (org.apache.commons.math3.distribution.MultivariateRealDistribution) $r5;

        $i2 = interfaceinvoke $r6.<org.apache.commons.math3.distribution.MultivariateRealDistribution: int getDimension()>();

        specialinvoke r0.<org.apache.commons.math3.distribution.AbstractMultivariateRealDistribution: void <init>(org.apache.commons.math3.random.RandomGenerator,int)>(r1, $i2);

        i0 = interfaceinvoke r2.<java.util.List: int size()>();

        i1 = virtualinvoke r0.<org.apache.commons.math3.distribution.MixtureMultivariateRealDistribution: int getDimension()>();

        d4 = 0.0;

        i6 = 0;

     label1:
        if i6 >= i0 goto label4;

        $r18 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>(i6);

        r31 = (org.apache.commons.math3.util.Pair) $r18;

        $r19 = virtualinvoke r31.<org.apache.commons.math3.util.Pair: java.lang.Object getSecond()>();

        $r20 = (org.apache.commons.math3.distribution.MultivariateRealDistribution) $r19;

        $i3 = interfaceinvoke $r20.<org.apache.commons.math3.distribution.MultivariateRealDistribution: int getDimension()>();

        if $i3 == i1 goto label2;

        $r28 = new org.apache.commons.math3.exception.DimensionMismatchException;

        $r29 = virtualinvoke r31.<org.apache.commons.math3.util.Pair: java.lang.Object getSecond()>();

        $r30 = (org.apache.commons.math3.distribution.MultivariateRealDistribution) $r29;

        $i5 = interfaceinvoke $r30.<org.apache.commons.math3.distribution.MultivariateRealDistribution: int getDimension()>();

        specialinvoke $r28.<org.apache.commons.math3.exception.DimensionMismatchException: void <init>(int,int)>($i5, i1);

        throw $r28;

     label2:
        $r21 = virtualinvoke r31.<org.apache.commons.math3.util.Pair: java.lang.Object getFirst()>();

        $r22 = (java.lang.Double) $r21;

        $d2 = virtualinvoke $r22.<java.lang.Double: double doubleValue()>();

        $b4 = $d2 cmpg 0.0;

        if $b4 >= 0 goto label3;

        $r25 = new org.apache.commons.math3.exception.NotPositiveException;

        $r26 = virtualinvoke r31.<org.apache.commons.math3.util.Pair: java.lang.Object getFirst()>();

        $r27 = (java.lang.Number) $r26;

        specialinvoke $r25.<org.apache.commons.math3.exception.NotPositiveException: void <init>(java.lang.Number)>($r27);

        throw $r25;

     label3:
        $r23 = virtualinvoke r31.<org.apache.commons.math3.util.Pair: java.lang.Object getFirst()>();

        $r24 = (java.lang.Double) $r23;

        $d3 = virtualinvoke $r24.<java.lang.Double: double doubleValue()>();

        d4 = d4 + $d3;

        i6 = i6 + 1;

        goto label1;

     label4:
        $z0 = staticinvoke <java.lang.Double: boolean isInfinite(double)>(d4);

        if $z0 == 0 goto label5;

        $r15 = new org.apache.commons.math3.exception.MathArithmeticException;

        $r17 = <org.apache.commons.math3.exception.util.LocalizedFormats: org.apache.commons.math3.exception.util.LocalizedFormats OVERFLOW>;

        $r16 = newarray (java.lang.Object)[0];

        specialinvoke $r15.<org.apache.commons.math3.exception.MathArithmeticException: void <init>(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])>($r17, $r16);

        throw $r15;

     label5:
        $r7 = new java.util.ArrayList;

        specialinvoke $r7.<java.util.ArrayList: void <init>()>();

        r0.<org.apache.commons.math3.distribution.MixtureMultivariateRealDistribution: java.util.List distribution> = $r7;

        $r8 = newarray (double)[i0];

        r0.<org.apache.commons.math3.distribution.MixtureMultivariateRealDistribution: double[] weight> = $r8;

        i7 = 0;

     label6:
        if i7 >= i0 goto label7;

        $r9 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>(i7);

        r32 = (org.apache.commons.math3.util.Pair) $r9;

        $r10 = r0.<org.apache.commons.math3.distribution.MixtureMultivariateRealDistribution: double[] weight>;

        $r11 = virtualinvoke r32.<org.apache.commons.math3.util.Pair: java.lang.Object getFirst()>();

        $r12 = (java.lang.Double) $r11;

        $d0 = virtualinvoke $r12.<java.lang.Double: double doubleValue()>();

        $d1 = $d0 / d4;

        $r10[i7] = $d1;

        $r13 = r0.<org.apache.commons.math3.distribution.MixtureMultivariateRealDistribution: java.util.List distribution>;

        $r14 = virtualinvoke r32.<org.apache.commons.math3.util.Pair: java.lang.Object getSecond()>();

        interfaceinvoke $r13.<java.util.List: boolean add(java.lang.Object)>($r14);

        i7 = i7 + 1;

        goto label6;

     label7:
        return;
    }

    public double density(double[])
    {
        org.apache.commons.math3.distribution.MixtureMultivariateRealDistribution r0;
        double[] r1, $r2, $r3;
        int $i0, i1;
        java.util.List $r4;
        double $d0, $d1, $d2, d3;
        java.lang.Object $r5;
        org.apache.commons.math3.distribution.MultivariateRealDistribution $r6;

        r0 := @this: org.apache.commons.math3.distribution.MixtureMultivariateRealDistribution;

        r1 := @parameter0: double[];

        d3 = 0.0;

        i1 = 0;

     label1:
        $r2 = r0.<org.apache.commons.math3.distribution.MixtureMultivariateRealDistribution: double[] weight>;

        $i0 = lengthof $r2;

        if i1 >= $i0 goto label2;

        $r3 = r0.<org.apache.commons.math3.distribution.MixtureMultivariateRealDistribution: double[] weight>;

        $d0 = $r3[i1];

        $r4 = r0.<org.apache.commons.math3.distribution.MixtureMultivariateRealDistribution: java.util.List distribution>;

        $r5 = interfaceinvoke $r4.<java.util.List: java.lang.Object get(int)>(i1);

        $r6 = (org.apache.commons.math3.distribution.MultivariateRealDistribution) $r5;

        $d1 = interfaceinvoke $r6.<org.apache.commons.math3.distribution.MultivariateRealDistribution: double density(double[])>(r1);

        $d2 = $d0 * $d1;

        d3 = d3 + $d2;

        i1 = i1 + 1;

        goto label1;

     label2:
        return d3;
    }

    public double[] sample()
    {
        org.apache.commons.math3.distribution.MixtureMultivariateRealDistribution r0;
        double d0, $d1, d2;
        org.apache.commons.math3.random.RandomGenerator $r1;
        double[] $r2, $r3, $r7, r11;
        int $i0, $i1, $i2, i4;
        java.util.List $r4, $r8;
        java.lang.Object $r5, $r9;
        org.apache.commons.math3.distribution.MultivariateRealDistribution $r6, $r10;
        byte $b3;

        r0 := @this: org.apache.commons.math3.distribution.MixtureMultivariateRealDistribution;

        r11 = null;

        $r1 = r0.<org.apache.commons.math3.distribution.MixtureMultivariateRealDistribution: org.apache.commons.math3.random.RandomGenerator random>;

        d0 = interfaceinvoke $r1.<org.apache.commons.math3.random.RandomGenerator: double nextDouble()>();

        d2 = 0.0;

        i4 = 0;

     label1:
        $r2 = r0.<org.apache.commons.math3.distribution.MixtureMultivariateRealDistribution: double[] weight>;

        $i0 = lengthof $r2;

        if i4 >= $i0 goto label3;

        $r7 = r0.<org.apache.commons.math3.distribution.MixtureMultivariateRealDistribution: double[] weight>;

        $d1 = $r7[i4];

        d2 = d2 + $d1;

        $b3 = d0 cmpg d2;

        if $b3 > 0 goto label2;

        $r8 = r0.<org.apache.commons.math3.distribution.MixtureMultivariateRealDistribution: java.util.List distribution>;

        $r9 = interfaceinvoke $r8.<java.util.List: java.lang.Object get(int)>(i4);

        $r10 = (org.apache.commons.math3.distribution.MultivariateRealDistribution) $r9;

        r11 = interfaceinvoke $r10.<org.apache.commons.math3.distribution.MultivariateRealDistribution: double[] sample()>();

        goto label3;

     label2:
        i4 = i4 + 1;

        goto label1;

     label3:
        if r11 != null goto label4;

        $r4 = r0.<org.apache.commons.math3.distribution.MixtureMultivariateRealDistribution: java.util.List distribution>;

        $r3 = r0.<org.apache.commons.math3.distribution.MixtureMultivariateRealDistribution: double[] weight>;

        $i1 = lengthof $r3;

        $i2 = $i1 - 1;

        $r5 = interfaceinvoke $r4.<java.util.List: java.lang.Object get(int)>($i2);

        $r6 = (org.apache.commons.math3.distribution.MultivariateRealDistribution) $r5;

        r11 = interfaceinvoke $r6.<org.apache.commons.math3.distribution.MultivariateRealDistribution: double[] sample()>();

     label4:
        return r11;
    }

    public void reseedRandomGenerator(long)
    {
        org.apache.commons.math3.distribution.MixtureMultivariateRealDistribution r0;
        long l0, $l3, $l4;
        java.util.List $r1, $r2;
        int $i1, $i2, i5;
        java.lang.Object $r3;
        org.apache.commons.math3.distribution.MultivariateRealDistribution $r4;

        r0 := @this: org.apache.commons.math3.distribution.MixtureMultivariateRealDistribution;

        l0 := @parameter0: long;

        specialinvoke r0.<org.apache.commons.math3.distribution.AbstractMultivariateRealDistribution: void reseedRandomGenerator(long)>(l0);

        i5 = 0;

     label1:
        $r1 = r0.<org.apache.commons.math3.distribution.MixtureMultivariateRealDistribution: java.util.List distribution>;

        $i1 = interfaceinvoke $r1.<java.util.List: int size()>();

        if i5 >= $i1 goto label2;

        $r2 = r0.<org.apache.commons.math3.distribution.MixtureMultivariateRealDistribution: java.util.List distribution>;

        $r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>(i5);

        $r4 = (org.apache.commons.math3.distribution.MultivariateRealDistribution) $r3;

        $i2 = i5 + 1;

        $l3 = (long) $i2;

        $l4 = $l3 + l0;

        interfaceinvoke $r4.<org.apache.commons.math3.distribution.MultivariateRealDistribution: void reseedRandomGenerator(long)>($l4);

        i5 = i5 + 1;

        goto label1;

     label2:
        return;
    }

    public java.util.List getComponents()
    {
        org.apache.commons.math3.distribution.MixtureMultivariateRealDistribution r0;
        java.util.ArrayList $r2;
        double[] $r3, $r4, $r6;
        int $i0, $i1, i2;
        org.apache.commons.math3.util.Pair $r5;
        double $d0;
        java.lang.Double $r7;
        java.util.List $r8;
        java.lang.Object $r9;

        r0 := @this: org.apache.commons.math3.distribution.MixtureMultivariateRealDistribution;

        $r2 = new java.util.ArrayList;

        $r3 = r0.<org.apache.commons.math3.distribution.MixtureMultivariateRealDistribution: double[] weight>;

        $i0 = lengthof $r3;

        specialinvoke $r2.<java.util.ArrayList: void <init>(int)>($i0);

        i2 = 0;

     label1:
        $r4 = r0.<org.apache.commons.math3.distribution.MixtureMultivariateRealDistribution: double[] weight>;

        $i1 = lengthof $r4;

        if i2 >= $i1 goto label2;

        $r5 = new org.apache.commons.math3.util.Pair;

        $r6 = r0.<org.apache.commons.math3.distribution.MixtureMultivariateRealDistribution: double[] weight>;

        $d0 = $r6[i2];

        $r7 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        $r8 = r0.<org.apache.commons.math3.distribution.MixtureMultivariateRealDistribution: java.util.List distribution>;

        $r9 = interfaceinvoke $r8.<java.util.List: java.lang.Object get(int)>(i2);

        specialinvoke $r5.<org.apache.commons.math3.util.Pair: void <init>(java.lang.Object,java.lang.Object)>($r7, $r9);

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>($r5);

        i2 = i2 + 1;

        goto label1;

     label2:
        return $r2;
    }
}
