public class org.apache.commons.math3.analysis.function.Gaussian$Parametric extends java.lang.Object implements org.apache.commons.math3.analysis.ParametricUnivariateFunction
{

    public void <init>()
    {
        org.apache.commons.math3.analysis.function.Gaussian$Parametric r0;

        r0 := @this: org.apache.commons.math3.analysis.function.Gaussian$Parametric;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public transient double value(double, double[]) throws org.apache.commons.math3.exception.NullArgumentException, org.apache.commons.math3.exception.DimensionMismatchException, org.apache.commons.math3.exception.NotStrictlyPositiveException
    {
        org.apache.commons.math3.analysis.function.Gaussian$Parametric r0;
        double d0, d1, d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9;
        double[] r1;

        r0 := @this: org.apache.commons.math3.analysis.function.Gaussian$Parametric;

        d0 := @parameter0: double;

        r1 := @parameter1: double[];

        specialinvoke r0.<org.apache.commons.math3.analysis.function.Gaussian$Parametric: void validateParameters(double[])>(r1);

        $d3 = r1[1];

        d1 = d0 - $d3;

        $d4 = r1[2];

        $d6 = 2.0 * $d4;

        $d5 = r1[2];

        $d7 = $d6 * $d5;

        d2 = 1.0 / $d7;

        $d8 = r1[0];

        $d9 = staticinvoke <org.apache.commons.math3.analysis.function.Gaussian: double access$000(double,double,double)>(d1, $d8, d2);

        return $d9;
    }

    public transient double[] gradient(double, double[]) throws org.apache.commons.math3.exception.NullArgumentException, org.apache.commons.math3.exception.DimensionMismatchException, org.apache.commons.math3.exception.NotStrictlyPositiveException
    {
        org.apache.commons.math3.analysis.function.Gaussian$Parametric r0;
        double d0, d1, d2, d3, d4, d5, d6, d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14;
        double[] r1, $r2;

        r0 := @this: org.apache.commons.math3.analysis.function.Gaussian$Parametric;

        d0 := @parameter0: double;

        r1 := @parameter1: double[];

        specialinvoke r0.<org.apache.commons.math3.analysis.function.Gaussian$Parametric: void validateParameters(double[])>(r1);

        d1 = r1[0];

        $d8 = r1[1];

        d2 = d0 - $d8;

        d3 = r1[2];

        $d9 = 2.0 * d3;

        $d10 = $d9 * d3;

        d4 = 1.0 / $d10;

        d5 = staticinvoke <org.apache.commons.math3.analysis.function.Gaussian: double access$000(double,double,double)>(d2, 1.0, d4);

        $d11 = d1 * d5;

        $d12 = $d11 * 2.0;

        $d13 = $d12 * d4;

        d6 = $d13 * d2;

        $d14 = d6 * d2;

        d7 = $d14 / d3;

        $r2 = newarray (double)[3];

        $r2[0] = d5;

        $r2[1] = d6;

        $r2[2] = d7;

        return $r2;
    }

    private void validateParameters(double[]) throws org.apache.commons.math3.exception.NullArgumentException, org.apache.commons.math3.exception.DimensionMismatchException, org.apache.commons.math3.exception.NotStrictlyPositiveException
    {
        org.apache.commons.math3.analysis.function.Gaussian$Parametric r0;
        double[] r1;
        int $i0, $i2;
        double $d0, $d1;
        byte $b1;
        org.apache.commons.math3.exception.NotStrictlyPositiveException $r2;
        java.lang.Double $r3;
        org.apache.commons.math3.exception.DimensionMismatchException $r4;
        org.apache.commons.math3.exception.NullArgumentException $r5;

        r0 := @this: org.apache.commons.math3.analysis.function.Gaussian$Parametric;

        r1 := @parameter0: double[];

        if r1 != null goto label1;

        $r5 = new org.apache.commons.math3.exception.NullArgumentException;

        specialinvoke $r5.<org.apache.commons.math3.exception.NullArgumentException: void <init>()>();

        throw $r5;

     label1:
        $i0 = lengthof r1;

        if $i0 == 3 goto label2;

        $r4 = new org.apache.commons.math3.exception.DimensionMismatchException;

        $i2 = lengthof r1;

        specialinvoke $r4.<org.apache.commons.math3.exception.DimensionMismatchException: void <init>(int,int)>($i2, 3);

        throw $r4;

     label2:
        $d0 = r1[2];

        $b1 = $d0 cmpg 0.0;

        if $b1 > 0 goto label3;

        $r2 = new org.apache.commons.math3.exception.NotStrictlyPositiveException;

        $d1 = r1[2];

        $r3 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d1);

        specialinvoke $r2.<org.apache.commons.math3.exception.NotStrictlyPositiveException: void <init>(java.lang.Number)>($r3);

        throw $r2;

     label3:
        return;
    }
}
