public final class com.opengamma.analytics.financial.instrument.NettedFixedCashFlowVisitor extends com.opengamma.analytics.financial.instrument.InstrumentDefinitionVisitorSameMethodAdapter
{
    private static final com.opengamma.analytics.financial.instrument.FixedPayCashFlowVisitor PAY_VISITOR;
    private static final com.opengamma.analytics.financial.instrument.FixedReceiveCashFlowVisitor RECEIVE_VISITOR;
    private static final com.opengamma.analytics.financial.instrument.NettedFixedCashFlowVisitor INSTANCE;

    public void <init>()
    {
        com.opengamma.analytics.financial.instrument.NettedFixedCashFlowVisitor r0;

        r0 := @this: com.opengamma.analytics.financial.instrument.NettedFixedCashFlowVisitor;

        specialinvoke r0.<com.opengamma.analytics.financial.instrument.InstrumentDefinitionVisitorSameMethodAdapter: void <init>()>();

        return;
    }

    public static com.opengamma.analytics.financial.instrument.InstrumentDefinitionVisitorSameMethodAdapter getVisitor()
    {
        com.opengamma.analytics.financial.instrument.NettedFixedCashFlowVisitor $r0;

        $r0 = <com.opengamma.analytics.financial.instrument.NettedFixedCashFlowVisitor: com.opengamma.analytics.financial.instrument.NettedFixedCashFlowVisitor INSTANCE>;

        return $r0;
    }

    public java.util.Map visit(com.opengamma.analytics.financial.instrument.InstrumentDefinition)
    {
        com.opengamma.analytics.financial.instrument.NettedFixedCashFlowVisitor r0;
        com.opengamma.analytics.financial.instrument.InstrumentDefinition r1;
        java.util.Map $r2;

        r0 := @this: com.opengamma.analytics.financial.instrument.NettedFixedCashFlowVisitor;

        r1 := @parameter0: com.opengamma.analytics.financial.instrument.InstrumentDefinition;

        $r2 = virtualinvoke r0.<com.opengamma.analytics.financial.instrument.NettedFixedCashFlowVisitor: java.util.Map visit(com.opengamma.analytics.financial.instrument.InstrumentDefinition,com.opengamma.timeseries.DoubleTimeSeries)>(r1, null);

        return $r2;
    }

    public java.util.Map visit(com.opengamma.analytics.financial.instrument.InstrumentDefinition, com.opengamma.timeseries.DoubleTimeSeries)
    {
        com.opengamma.analytics.financial.instrument.NettedFixedCashFlowVisitor r0;
        com.opengamma.analytics.financial.instrument.InstrumentDefinition r1;
        com.opengamma.timeseries.DoubleTimeSeries r2;
        java.util.Map r3, r4, $r10;
        com.opengamma.analytics.financial.instrument.FixedPayCashFlowVisitor $r6;
        java.lang.Object $r7, $r9;
        com.opengamma.analytics.financial.instrument.FixedReceiveCashFlowVisitor $r8;

        r0 := @this: com.opengamma.analytics.financial.instrument.NettedFixedCashFlowVisitor;

        r1 := @parameter0: com.opengamma.analytics.financial.instrument.InstrumentDefinition;

        r2 := @parameter1: com.opengamma.timeseries.DoubleTimeSeries;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "instrument");

        $r6 = <com.opengamma.analytics.financial.instrument.NettedFixedCashFlowVisitor: com.opengamma.analytics.financial.instrument.FixedPayCashFlowVisitor PAY_VISITOR>;

        $r7 = interfaceinvoke r1.<com.opengamma.analytics.financial.instrument.InstrumentDefinition: java.lang.Object accept(com.opengamma.analytics.financial.instrument.InstrumentDefinitionVisitor,java.lang.Object)>($r6, r2);

        r3 = (java.util.Map) $r7;

        $r8 = <com.opengamma.analytics.financial.instrument.NettedFixedCashFlowVisitor: com.opengamma.analytics.financial.instrument.FixedReceiveCashFlowVisitor RECEIVE_VISITOR>;

        $r9 = interfaceinvoke r1.<com.opengamma.analytics.financial.instrument.InstrumentDefinition: java.lang.Object accept(com.opengamma.analytics.financial.instrument.InstrumentDefinitionVisitor,java.lang.Object)>($r8, r2);

        r4 = (java.util.Map) $r9;

        $r10 = staticinvoke <com.opengamma.analytics.financial.instrument.NettedFixedCashFlowVisitor: java.util.Map add(java.util.Map,java.util.Map)>(r3, r4);

        return $r10;
    }

    private static java.util.Map add(java.util.Map, java.util.Map)
    {
        java.util.Map r0, r1;
        java.util.Iterator r3;
        java.util.Map$Entry r4;
        com.opengamma.util.money.MultipleCurrencyAmount r5, $r11, $r15, $r16;
        org.threeten.bp.LocalDate r6;
        java.util.HashMap $r7;
        java.util.Set $r8;
        boolean $z0, $z1;
        java.lang.Object $r9, $r10, $r12, $r14;

        r0 := @parameter0: java.util.Map;

        r1 := @parameter1: java.util.Map;

        $r7 = new java.util.HashMap;

        specialinvoke $r7.<java.util.HashMap: void <init>(java.util.Map)>(r1);

        $r8 = interfaceinvoke r0.<java.util.Map: java.util.Set entrySet()>();

        r3 = interfaceinvoke $r8.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r9 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (java.util.Map$Entry) $r9;

        $r10 = interfaceinvoke r4.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r11 = (com.opengamma.util.money.MultipleCurrencyAmount) $r10;

        r5 = virtualinvoke $r11.<com.opengamma.util.money.MultipleCurrencyAmount: com.opengamma.util.money.MultipleCurrencyAmount multipliedBy(double)>(-1.0);

        $r12 = interfaceinvoke r4.<java.util.Map$Entry: java.lang.Object getKey()>();

        r6 = (org.threeten.bp.LocalDate) $r12;

        $z1 = interfaceinvoke $r7.<java.util.Map: boolean containsKey(java.lang.Object)>(r6);

        if $z1 == 0 goto label2;

        $r14 = interfaceinvoke $r7.<java.util.Map: java.lang.Object get(java.lang.Object)>(r6);

        $r15 = (com.opengamma.util.money.MultipleCurrencyAmount) $r14;

        $r16 = virtualinvoke $r15.<com.opengamma.util.money.MultipleCurrencyAmount: com.opengamma.util.money.MultipleCurrencyAmount plus(com.opengamma.util.money.MultipleCurrencyAmount)>(r5);

        interfaceinvoke $r7.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r6, $r16);

        goto label3;

     label2:
        interfaceinvoke $r7.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r6, r5);

     label3:
        goto label1;

     label4:
        return $r7;
    }

    public volatile java.lang.Object visit(com.opengamma.analytics.financial.instrument.InstrumentDefinition, java.lang.Object)
    {
        com.opengamma.analytics.financial.instrument.NettedFixedCashFlowVisitor r0;
        com.opengamma.analytics.financial.instrument.InstrumentDefinition r1;
        java.lang.Object r2;
        com.opengamma.timeseries.DoubleTimeSeries $r3;
        java.util.Map $r4;

        r0 := @this: com.opengamma.analytics.financial.instrument.NettedFixedCashFlowVisitor;

        r1 := @parameter0: com.opengamma.analytics.financial.instrument.InstrumentDefinition;

        r2 := @parameter1: java.lang.Object;

        $r3 = (com.opengamma.timeseries.DoubleTimeSeries) r2;

        $r4 = virtualinvoke r0.<com.opengamma.analytics.financial.instrument.NettedFixedCashFlowVisitor: java.util.Map visit(com.opengamma.analytics.financial.instrument.InstrumentDefinition,com.opengamma.timeseries.DoubleTimeSeries)>(r1, $r3);

        return $r4;
    }

    public volatile java.lang.Object visit(com.opengamma.analytics.financial.instrument.InstrumentDefinition)
    {
        com.opengamma.analytics.financial.instrument.NettedFixedCashFlowVisitor r0;
        com.opengamma.analytics.financial.instrument.InstrumentDefinition r1;
        java.util.Map $r2;

        r0 := @this: com.opengamma.analytics.financial.instrument.NettedFixedCashFlowVisitor;

        r1 := @parameter0: com.opengamma.analytics.financial.instrument.InstrumentDefinition;

        $r2 = virtualinvoke r0.<com.opengamma.analytics.financial.instrument.NettedFixedCashFlowVisitor: java.util.Map visit(com.opengamma.analytics.financial.instrument.InstrumentDefinition)>(r1);

        return $r2;
    }

    static void <clinit>()
    {
        com.opengamma.analytics.financial.instrument.FixedPayCashFlowVisitor $r0;
        com.opengamma.analytics.financial.instrument.FixedReceiveCashFlowVisitor $r1;
        com.opengamma.analytics.financial.instrument.NettedFixedCashFlowVisitor $r2;

        $r0 = staticinvoke <com.opengamma.analytics.financial.instrument.FixedPayCashFlowVisitor: com.opengamma.analytics.financial.instrument.FixedPayCashFlowVisitor getInstance()>();

        <com.opengamma.analytics.financial.instrument.NettedFixedCashFlowVisitor: com.opengamma.analytics.financial.instrument.FixedPayCashFlowVisitor PAY_VISITOR> = $r0;

        $r1 = staticinvoke <com.opengamma.analytics.financial.instrument.FixedReceiveCashFlowVisitor: com.opengamma.analytics.financial.instrument.FixedReceiveCashFlowVisitor getInstance()>();

        <com.opengamma.analytics.financial.instrument.NettedFixedCashFlowVisitor: com.opengamma.analytics.financial.instrument.FixedReceiveCashFlowVisitor RECEIVE_VISITOR> = $r1;

        $r2 = new com.opengamma.analytics.financial.instrument.NettedFixedCashFlowVisitor;

        specialinvoke $r2.<com.opengamma.analytics.financial.instrument.NettedFixedCashFlowVisitor: void <init>()>();

        <com.opengamma.analytics.financial.instrument.NettedFixedCashFlowVisitor: com.opengamma.analytics.financial.instrument.NettedFixedCashFlowVisitor INSTANCE> = $r2;

        return;
    }
}
