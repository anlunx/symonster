public final enum class org.apache.commons.math.optimization.linear.Relationship extends java.lang.Enum
{
    public static final enum org.apache.commons.math.optimization.linear.Relationship EQ;
    public static final enum org.apache.commons.math.optimization.linear.Relationship LEQ;
    public static final enum org.apache.commons.math.optimization.linear.Relationship GEQ;
    private final java.lang.String stringValue;
    private static final org.apache.commons.math.optimization.linear.Relationship[] $VALUES;

    public static org.apache.commons.math.optimization.linear.Relationship[] values()
    {
        org.apache.commons.math.optimization.linear.Relationship[] $r0, $r2;
        java.lang.Object $r1;

        $r0 = <org.apache.commons.math.optimization.linear.Relationship: org.apache.commons.math.optimization.linear.Relationship[] $VALUES>;

        $r1 = virtualinvoke $r0.<java.lang.Object: java.lang.Object clone()>();

        $r2 = (org.apache.commons.math.optimization.linear.Relationship[]) $r1;

        return $r2;
    }

    public static org.apache.commons.math.optimization.linear.Relationship valueOf(java.lang.String)
    {
        java.lang.String r0;
        java.lang.Enum $r1;
        org.apache.commons.math.optimization.linear.Relationship $r2;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "org/apache/commons/math/optimization/linear/Relationship", r0);

        $r2 = (org.apache.commons.math.optimization.linear.Relationship) $r1;

        return $r2;
    }

    private void <init>(java.lang.String, int, java.lang.String)
    {
        org.apache.commons.math.optimization.linear.Relationship r0;
        java.lang.String r1, r2;
        int i0;

        r0 := @this: org.apache.commons.math.optimization.linear.Relationship;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.String;

        specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>(r1, i0);

        r0.<org.apache.commons.math.optimization.linear.Relationship: java.lang.String stringValue> = r2;

        return;
    }

    public java.lang.String toString()
    {
        org.apache.commons.math.optimization.linear.Relationship r0;
        java.lang.String $r1;

        r0 := @this: org.apache.commons.math.optimization.linear.Relationship;

        $r1 = r0.<org.apache.commons.math.optimization.linear.Relationship: java.lang.String stringValue>;

        return $r1;
    }

    public org.apache.commons.math.optimization.linear.Relationship oppositeRelationship()
    {
        org.apache.commons.math.optimization.linear.Relationship r0, $r2, $r3, $r4;
        int[] $r1;
        int $i0, $i1;

        r0 := @this: org.apache.commons.math.optimization.linear.Relationship;

        $r1 = <org.apache.commons.math.optimization.linear.Relationship$1: int[] $SwitchMap$org$apache$commons$math$optimization$linear$Relationship>;

        $i0 = virtualinvoke r0.<org.apache.commons.math.optimization.linear.Relationship: int ordinal()>();

        $i1 = $r1[$i0];

        lookupswitch($i1)
        {
            case 1: goto label1;
            case 2: goto label2;
            default: goto label3;
        };

     label1:
        $r3 = <org.apache.commons.math.optimization.linear.Relationship: org.apache.commons.math.optimization.linear.Relationship GEQ>;

        return $r3;

     label2:
        $r2 = <org.apache.commons.math.optimization.linear.Relationship: org.apache.commons.math.optimization.linear.Relationship LEQ>;

        return $r2;

     label3:
        $r4 = <org.apache.commons.math.optimization.linear.Relationship: org.apache.commons.math.optimization.linear.Relationship EQ>;

        return $r4;
    }

    static void <clinit>()
    {
        org.apache.commons.math.optimization.linear.Relationship $r0, $r1, $r2, $r4, $r5, $r6;
        org.apache.commons.math.optimization.linear.Relationship[] $r3;

        $r0 = new org.apache.commons.math.optimization.linear.Relationship;

        specialinvoke $r0.<org.apache.commons.math.optimization.linear.Relationship: void <init>(java.lang.String,int,java.lang.String)>("EQ", 0, "=");

        <org.apache.commons.math.optimization.linear.Relationship: org.apache.commons.math.optimization.linear.Relationship EQ> = $r0;

        $r1 = new org.apache.commons.math.optimization.linear.Relationship;

        specialinvoke $r1.<org.apache.commons.math.optimization.linear.Relationship: void <init>(java.lang.String,int,java.lang.String)>("LEQ", 1, "<=");

        <org.apache.commons.math.optimization.linear.Relationship: org.apache.commons.math.optimization.linear.Relationship LEQ> = $r1;

        $r2 = new org.apache.commons.math.optimization.linear.Relationship;

        specialinvoke $r2.<org.apache.commons.math.optimization.linear.Relationship: void <init>(java.lang.String,int,java.lang.String)>("GEQ", 2, ">=");

        <org.apache.commons.math.optimization.linear.Relationship: org.apache.commons.math.optimization.linear.Relationship GEQ> = $r2;

        $r3 = newarray (org.apache.commons.math.optimization.linear.Relationship)[3];

        $r4 = <org.apache.commons.math.optimization.linear.Relationship: org.apache.commons.math.optimization.linear.Relationship EQ>;

        $r3[0] = $r4;

        $r5 = <org.apache.commons.math.optimization.linear.Relationship: org.apache.commons.math.optimization.linear.Relationship LEQ>;

        $r3[1] = $r5;

        $r6 = <org.apache.commons.math.optimization.linear.Relationship: org.apache.commons.math.optimization.linear.Relationship GEQ>;

        $r3[2] = $r6;

        <org.apache.commons.math.optimization.linear.Relationship: org.apache.commons.math.optimization.linear.Relationship[] $VALUES> = $r3;

        return;
    }
}
