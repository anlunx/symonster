public final class org.jcp.xml.dsig.internal.dom.DOMXPathFilter2Transform extends org.jcp.xml.dsig.internal.dom.ApacheTransform
{

    public void <init>()
    {
        org.jcp.xml.dsig.internal.dom.DOMXPathFilter2Transform r0;

        r0 := @this: org.jcp.xml.dsig.internal.dom.DOMXPathFilter2Transform;

        specialinvoke r0.<org.jcp.xml.dsig.internal.dom.ApacheTransform: void <init>()>();

        return;
    }

    public void init(javax.xml.crypto.dsig.spec.TransformParameterSpec) throws java.security.InvalidAlgorithmParameterException
    {
        org.jcp.xml.dsig.internal.dom.DOMXPathFilter2Transform r0;
        javax.xml.crypto.dsig.spec.TransformParameterSpec r1;
        boolean $z0;
        java.security.InvalidAlgorithmParameterException $r2, $r3;

        r0 := @this: org.jcp.xml.dsig.internal.dom.DOMXPathFilter2Transform;

        r1 := @parameter0: javax.xml.crypto.dsig.spec.TransformParameterSpec;

        if r1 != null goto label1;

        $r3 = new java.security.InvalidAlgorithmParameterException;

        specialinvoke $r3.<java.security.InvalidAlgorithmParameterException: void <init>(java.lang.String)>("params are required");

        throw $r3;

     label1:
        $z0 = r1 instanceof javax.xml.crypto.dsig.spec.XPathFilter2ParameterSpec;

        if $z0 != 0 goto label2;

        $r2 = new java.security.InvalidAlgorithmParameterException;

        specialinvoke $r2.<java.security.InvalidAlgorithmParameterException: void <init>(java.lang.String)>("params must be of type XPathFilter2ParameterSpec");

        throw $r2;

     label2:
        r0.<org.jcp.xml.dsig.internal.dom.DOMXPathFilter2Transform: javax.xml.crypto.dsig.spec.TransformParameterSpec params> = r1;

        return;
    }

    public void init(javax.xml.crypto.XMLStructure, javax.xml.crypto.XMLCryptoContext) throws java.security.InvalidAlgorithmParameterException
    {
        org.jcp.xml.dsig.internal.dom.DOMXPathFilter2Transform r0;
        javax.xml.crypto.XMLStructure r1;
        javax.xml.crypto.XMLCryptoContext r2;
        org.w3c.dom.Element $r4, $r5;
        javax.xml.crypto.MarshalException $r6;
        java.security.InvalidAlgorithmParameterException $r7, $r9;
        java.lang.Throwable $r8;

        r0 := @this: org.jcp.xml.dsig.internal.dom.DOMXPathFilter2Transform;

        r1 := @parameter0: javax.xml.crypto.XMLStructure;

        r2 := @parameter1: javax.xml.crypto.XMLCryptoContext;

        specialinvoke r0.<org.jcp.xml.dsig.internal.dom.ApacheTransform: void init(javax.xml.crypto.XMLStructure,javax.xml.crypto.XMLCryptoContext)>(r1, r2);

     label1:
        $r4 = r0.<org.jcp.xml.dsig.internal.dom.DOMXPathFilter2Transform: org.w3c.dom.Element transformElem>;

        $r5 = staticinvoke <org.jcp.xml.dsig.internal.dom.DOMUtils: org.w3c.dom.Element getFirstChildElement(org.w3c.dom.Node)>($r4);

        specialinvoke r0.<org.jcp.xml.dsig.internal.dom.DOMXPathFilter2Transform: void unmarshalParams(org.w3c.dom.Element)>($r5);

     label2:
        goto label4;

     label3:
        $r6 := @caughtexception;

        $r7 = new java.security.InvalidAlgorithmParameterException;

        specialinvoke $r7.<java.security.InvalidAlgorithmParameterException: void <init>()>();

        $r8 = virtualinvoke $r7.<java.security.InvalidAlgorithmParameterException: java.lang.Throwable initCause(java.lang.Throwable)>($r6);

        $r9 = (java.security.InvalidAlgorithmParameterException) $r8;

        throw $r9;

     label4:
        return;

        catch javax.xml.crypto.MarshalException from label1 to label2 with label3;
    }

    private void unmarshalParams(org.w3c.dom.Element) throws javax.xml.crypto.MarshalException
    {
        org.jcp.xml.dsig.internal.dom.DOMXPathFilter2Transform r0;
        java.lang.String r2, r3, r7, $r15, $r20, $r21;
        org.w3c.dom.NamedNodeMap r4;
        int i0, i1;
        org.w3c.dom.Attr r6;
        java.util.ArrayList $r8;
        javax.xml.crypto.dsig.spec.XPathFilter2ParameterSpec $r9;
        org.w3c.dom.Node $r10, $r19;
        boolean $z0, $z1, $z2, $z3;
        javax.xml.crypto.MarshalException $r11, $r22;
        java.lang.StringBuilder $r12, $r13, $r14;
        javax.xml.crypto.dsig.spec.XPathType $r16, $r18;
        java.util.HashMap $r17;
        org.w3c.dom.Element r23;
        javax.xml.crypto.dsig.spec.XPathType$Filter r24;

        r0 := @this: org.jcp.xml.dsig.internal.dom.DOMXPathFilter2Transform;

        r23 := @parameter0: org.w3c.dom.Element;

        $r8 = new java.util.ArrayList;

        specialinvoke $r8.<java.util.ArrayList: void <init>()>();

     label01:
        if r23 == null goto label12;

        $r10 = interfaceinvoke r23.<org.w3c.dom.Element: org.w3c.dom.Node getFirstChild()>();

        r2 = interfaceinvoke $r10.<org.w3c.dom.Node: java.lang.String getNodeValue()>();

        r3 = staticinvoke <org.jcp.xml.dsig.internal.dom.DOMUtils: java.lang.String getAttributeValue(org.w3c.dom.Element,java.lang.String)>(r23, "Filter");

        if r3 != null goto label02;

        $r22 = new javax.xml.crypto.MarshalException;

        specialinvoke $r22.<javax.xml.crypto.MarshalException: void <init>(java.lang.String)>("filter cannot be null");

        throw $r22;

     label02:
        $z0 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>("intersect");

        if $z0 == 0 goto label03;

        r24 = <javax.xml.crypto.dsig.spec.XPathType$Filter: javax.xml.crypto.dsig.spec.XPathType$Filter INTERSECT>;

        goto label06;

     label03:
        $z1 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>("subtract");

        if $z1 == 0 goto label04;

        r24 = <javax.xml.crypto.dsig.spec.XPathType$Filter: javax.xml.crypto.dsig.spec.XPathType$Filter SUBTRACT>;

        goto label06;

     label04:
        $z2 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>("union");

        if $z2 == 0 goto label05;

        r24 = <javax.xml.crypto.dsig.spec.XPathType$Filter: javax.xml.crypto.dsig.spec.XPathType$Filter UNION>;

        goto label06;

     label05:
        $r11 = new javax.xml.crypto.MarshalException;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown XPathType filter type");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r11.<javax.xml.crypto.MarshalException: void <init>(java.lang.String)>($r15);

        throw $r11;

     label06:
        r4 = interfaceinvoke r23.<org.w3c.dom.Element: org.w3c.dom.NamedNodeMap getAttributes()>();

        if r4 == null goto label10;

        i0 = interfaceinvoke r4.<org.w3c.dom.NamedNodeMap: int getLength()>();

        $r17 = new java.util.HashMap;

        specialinvoke $r17.<java.util.HashMap: void <init>(int)>(i0);

        i1 = 0;

     label07:
        if i1 >= i0 goto label09;

        $r19 = interfaceinvoke r4.<org.w3c.dom.NamedNodeMap: org.w3c.dom.Node item(int)>(i1);

        r6 = (org.w3c.dom.Attr) $r19;

        r7 = interfaceinvoke r6.<org.w3c.dom.Attr: java.lang.String getPrefix()>();

        if r7 == null goto label08;

        $z3 = virtualinvoke r7.<java.lang.String: boolean equals(java.lang.Object)>("xmlns");

        if $z3 == 0 goto label08;

        $r20 = interfaceinvoke r6.<org.w3c.dom.Attr: java.lang.String getLocalName()>();

        $r21 = interfaceinvoke r6.<org.w3c.dom.Attr: java.lang.String getValue()>();

        interfaceinvoke $r17.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r20, $r21);

     label08:
        i1 = i1 + 1;

        goto label07;

     label09:
        $r18 = new javax.xml.crypto.dsig.spec.XPathType;

        specialinvoke $r18.<javax.xml.crypto.dsig.spec.XPathType: void <init>(java.lang.String,javax.xml.crypto.dsig.spec.XPathType$Filter,java.util.Map)>(r2, r24, $r17);

        interfaceinvoke $r8.<java.util.List: boolean add(java.lang.Object)>($r18);

        goto label11;

     label10:
        $r16 = new javax.xml.crypto.dsig.spec.XPathType;

        specialinvoke $r16.<javax.xml.crypto.dsig.spec.XPathType: void <init>(java.lang.String,javax.xml.crypto.dsig.spec.XPathType$Filter)>(r2, r24);

        interfaceinvoke $r8.<java.util.List: boolean add(java.lang.Object)>($r16);

     label11:
        r23 = staticinvoke <org.jcp.xml.dsig.internal.dom.DOMUtils: org.w3c.dom.Element getNextSiblingElement(org.w3c.dom.Node)>(r23);

        goto label01;

     label12:
        $r9 = new javax.xml.crypto.dsig.spec.XPathFilter2ParameterSpec;

        specialinvoke $r9.<javax.xml.crypto.dsig.spec.XPathFilter2ParameterSpec: void <init>(java.util.List)>($r8);

        r0.<org.jcp.xml.dsig.internal.dom.DOMXPathFilter2Transform: javax.xml.crypto.dsig.spec.TransformParameterSpec params> = $r9;

        return;
    }

    public void marshalParams(javax.xml.crypto.XMLStructure, javax.xml.crypto.XMLCryptoContext) throws javax.xml.crypto.MarshalException
    {
        org.jcp.xml.dsig.internal.dom.DOMXPathFilter2Transform r0;
        javax.xml.crypto.XMLStructure r1;
        javax.xml.crypto.XMLCryptoContext r2;
        javax.xml.crypto.dsig.spec.XPathFilter2ParameterSpec r3;
        java.lang.String r4, r5, $r15, $r19, $r28, $r30, $r32, $r36;
        java.util.List r6;
        int i0, $i1, i2;
        javax.xml.crypto.dsig.spec.XPathType r7;
        org.w3c.dom.Element r8, $r22;
        java.util.Iterator r9;
        java.util.Map$Entry r10;
        java.security.spec.AlgorithmParameterSpec $r11;
        java.lang.Object $r12, $r24, $r27, $r31;
        org.w3c.dom.Document $r13, $r14;
        org.w3c.dom.Text $r16;
        javax.xml.crypto.dsig.spec.XPathType$Filter $r18;
        java.util.Map $r20;
        java.util.Set $r21;
        boolean $z0;
        java.lang.StringBuilder $r25, $r26, $r29, $r33, $r34, $r35;

        r0 := @this: org.jcp.xml.dsig.internal.dom.DOMXPathFilter2Transform;

        r1 := @parameter0: javax.xml.crypto.XMLStructure;

        r2 := @parameter1: javax.xml.crypto.XMLCryptoContext;

        specialinvoke r0.<org.jcp.xml.dsig.internal.dom.ApacheTransform: void marshalParams(javax.xml.crypto.XMLStructure,javax.xml.crypto.XMLCryptoContext)>(r1, r2);

        $r11 = virtualinvoke r0.<org.jcp.xml.dsig.internal.dom.DOMXPathFilter2Transform: java.security.spec.AlgorithmParameterSpec getParameterSpec()>();

        r3 = (javax.xml.crypto.dsig.spec.XPathFilter2ParameterSpec) $r11;

        r4 = staticinvoke <org.jcp.xml.dsig.internal.dom.DOMUtils: java.lang.String getNSPrefix(javax.xml.crypto.XMLCryptoContext,java.lang.String)>(r2, "http://www.w3.org/2002/06/xmldsig-filter2");

        if r4 == null goto label1;

        $i1 = virtualinvoke r4.<java.lang.String: int length()>();

        if $i1 != 0 goto label2;

     label1:
        $r36 = "xmlns";

        goto label3;

     label2:
        $r33 = new java.lang.StringBuilder;

        specialinvoke $r33.<java.lang.StringBuilder: void <init>()>();

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("xmlns:");

        $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.String toString()>();

     label3:
        r5 = $r36;

        r6 = virtualinvoke r3.<javax.xml.crypto.dsig.spec.XPathFilter2ParameterSpec: java.util.List getXPathList()>();

        i2 = 0;

        i0 = interfaceinvoke r6.<java.util.List: int size()>();

     label4:
        if i2 >= i0 goto label7;

        $r12 = interfaceinvoke r6.<java.util.List: java.lang.Object get(int)>(i2);

        r7 = (javax.xml.crypto.dsig.spec.XPathType) $r12;

        $r13 = r0.<org.jcp.xml.dsig.internal.dom.DOMXPathFilter2Transform: org.w3c.dom.Document ownerDoc>;

        r8 = staticinvoke <org.jcp.xml.dsig.internal.dom.DOMUtils: org.w3c.dom.Element createElement(org.w3c.dom.Document,java.lang.String,java.lang.String,java.lang.String)>($r13, "XPath", "http://www.w3.org/2002/06/xmldsig-filter2", r4);

        $r14 = r0.<org.jcp.xml.dsig.internal.dom.DOMXPathFilter2Transform: org.w3c.dom.Document ownerDoc>;

        $r15 = virtualinvoke r7.<javax.xml.crypto.dsig.spec.XPathType: java.lang.String getExpression()>();

        $r16 = interfaceinvoke $r14.<org.w3c.dom.Document: org.w3c.dom.Text createTextNode(java.lang.String)>($r15);

        interfaceinvoke r8.<org.w3c.dom.Element: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>($r16);

        $r18 = virtualinvoke r7.<javax.xml.crypto.dsig.spec.XPathType: javax.xml.crypto.dsig.spec.XPathType$Filter getFilter()>();

        $r19 = virtualinvoke $r18.<javax.xml.crypto.dsig.spec.XPathType$Filter: java.lang.String toString()>();

        staticinvoke <org.jcp.xml.dsig.internal.dom.DOMUtils: void setAttribute(org.w3c.dom.Element,java.lang.String,java.lang.String)>(r8, "Filter", $r19);

        interfaceinvoke r8.<org.w3c.dom.Element: void setAttributeNS(java.lang.String,java.lang.String,java.lang.String)>("http://www.w3.org/2000/xmlns/", r5, "http://www.w3.org/2002/06/xmldsig-filter2");

        $r20 = virtualinvoke r7.<javax.xml.crypto.dsig.spec.XPathType: java.util.Map getNamespaceMap()>();

        $r21 = interfaceinvoke $r20.<java.util.Map: java.util.Set entrySet()>();

        r9 = interfaceinvoke $r21.<java.util.Set: java.util.Iterator iterator()>();

     label5:
        $z0 = interfaceinvoke r9.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label6;

        $r24 = interfaceinvoke r9.<java.util.Iterator: java.lang.Object next()>();

        r10 = (java.util.Map$Entry) $r24;

        $r25 = new java.lang.StringBuilder;

        specialinvoke $r25.<java.lang.StringBuilder: void <init>()>();

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("xmlns:");

        $r27 = interfaceinvoke r10.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r28 = (java.lang.String) $r27;

        $r29 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r28);

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.String toString()>();

        $r31 = interfaceinvoke r10.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r32 = (java.lang.String) $r31;

        interfaceinvoke r8.<org.w3c.dom.Element: void setAttributeNS(java.lang.String,java.lang.String,java.lang.String)>("http://www.w3.org/2000/xmlns/", $r30, $r32);

        goto label5;

     label6:
        $r22 = r0.<org.jcp.xml.dsig.internal.dom.DOMXPathFilter2Transform: org.w3c.dom.Element transformElem>;

        interfaceinvoke $r22.<org.w3c.dom.Element: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>(r8);

        i2 = i2 + 1;

        goto label4;

     label7:
        return;
    }
}
