public class com.opengamma.analytics.math.interpolation.data.Interpolator1DQuadraticSplineDataBundle extends java.lang.Object implements com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle
{
    private final com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle _underlyingData;
    private final double[] _a;
    private final double[] _b;

    public void <init>(com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle)
    {
        com.opengamma.analytics.math.interpolation.data.Interpolator1DQuadraticSplineDataBundle r0;
        com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle r1, $r6, $r7, $r8, $r11, $r14;
        double[] r2, r3, r4, $r9, $r10, $r12, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i9, i10, i11;
        double d0, d1, d2, d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21, $d22, $d23, $d24, $d25, $d26, $d27, $d28, $d29, $d30, $d31, $d32, $d33, $d34, $d35, $d36, $d37, d38, d39;
        java.lang.Double $r13, $r15;
        byte $b8;
        boolean $z0;

        r0 := @this: com.opengamma.analytics.math.interpolation.data.Interpolator1DQuadraticSplineDataBundle;

        r1 := @parameter0: com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "underlying data");

        r0.<com.opengamma.analytics.math.interpolation.data.Interpolator1DQuadraticSplineDataBundle: com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle _underlyingData> = r1;

        $r6 = r0.<com.opengamma.analytics.math.interpolation.data.Interpolator1DQuadraticSplineDataBundle: com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle _underlyingData>;

        r2 = interfaceinvoke $r6.<com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle: double[] getKeys()>();

        $r7 = r0.<com.opengamma.analytics.math.interpolation.data.Interpolator1DQuadraticSplineDataBundle: com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle _underlyingData>;

        r3 = interfaceinvoke $r7.<com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle: double[] getValues()>();

        $r8 = r0.<com.opengamma.analytics.math.interpolation.data.Interpolator1DQuadraticSplineDataBundle: com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle _underlyingData>;

        i0 = interfaceinvoke $r8.<com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle: int size()>();

        r4 = newarray (double)[i0];

        $d4 = r2[0];

        r4[0] = $d4;

        i10 = 1;

     label1:
        if i10 >= i0 goto label2;

        $d36 = r2[i10];

        $i9 = i10 - 1;

        $d35 = r2[$i9];

        $d37 = $d36 - $d35;

        r4[i10] = $d37;

        i10 = i10 + 1;

        goto label1;

     label2:
        $i1 = i0 + 1;

        $r9 = newarray (double)[$i1];

        r0.<com.opengamma.analytics.math.interpolation.data.Interpolator1DQuadraticSplineDataBundle: double[] _a> = $r9;

        $i2 = i0 + 1;

        $r10 = newarray (double)[$i2];

        r0.<com.opengamma.analytics.math.interpolation.data.Interpolator1DQuadraticSplineDataBundle: double[] _b> = $r10;

        $r12 = r0.<com.opengamma.analytics.math.interpolation.data.Interpolator1DQuadraticSplineDataBundle: double[] _a>;

        $r11 = r0.<com.opengamma.analytics.math.interpolation.data.Interpolator1DQuadraticSplineDataBundle: com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle _underlyingData>;

        $r13 = interfaceinvoke $r11.<com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle: java.lang.Double firstValue()>();

        $d5 = virtualinvoke $r13.<java.lang.Double: double doubleValue()>();

        $r14 = r0.<com.opengamma.analytics.math.interpolation.data.Interpolator1DQuadraticSplineDataBundle: com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle _underlyingData>;

        $r15 = interfaceinvoke $r14.<com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle: java.lang.Double firstKey()>();

        $d6 = virtualinvoke $r15.<java.lang.Double: double doubleValue()>();

        $d7 = $d5 / $d6;

        $d8 = staticinvoke <java.lang.Math: double sqrt(double)>($d7);

        $r12[0] = $d8;

        i11 = 1;

     label3:
        if i11 >= i0 goto label6;

        $r20 = r0.<com.opengamma.analytics.math.interpolation.data.Interpolator1DQuadraticSplineDataBundle: double[] _a>;

        $r18 = r0.<com.opengamma.analytics.math.interpolation.data.Interpolator1DQuadraticSplineDataBundle: double[] _a>;

        $i4 = i11 - 1;

        $d13 = $r18[$i4];

        $r19 = r0.<com.opengamma.analytics.math.interpolation.data.Interpolator1DQuadraticSplineDataBundle: double[] _b>;

        $i5 = i11 - 1;

        $d11 = $r19[$i5];

        $i6 = i11 - 1;

        $d10 = r4[$i6];

        $d12 = $d11 * $d10;

        $d14 = $d13 + $d12;

        $r20[i11] = $d14;

        $d15 = r4[i11];

        $d16 = staticinvoke <java.lang.Math: double pow(double,double)>($d15, 3.0);

        d0 = $d16 / 3.0;

        $r21 = r0.<com.opengamma.analytics.math.interpolation.data.Interpolator1DQuadraticSplineDataBundle: double[] _a>;

        $d18 = $r21[i11];

        $d17 = r4[i11];

        $d20 = $d18 * $d17;

        $d19 = r4[i11];

        d1 = $d20 * $d19;

        $r22 = r0.<com.opengamma.analytics.math.interpolation.data.Interpolator1DQuadraticSplineDataBundle: double[] _a>;

        $d22 = $r22[i11];

        $r23 = r0.<com.opengamma.analytics.math.interpolation.data.Interpolator1DQuadraticSplineDataBundle: double[] _a>;

        $d21 = $r23[i11];

        $d24 = $d22 * $d21;

        $d23 = r4[i11];

        $d26 = $d24 * $d23;

        $i7 = i11 - 1;

        $d25 = r3[$i7];

        $d28 = $d26 + $d25;

        $d27 = r3[i11];

        d2 = $d28 - $d27;

        $d31 = d1 * d1;

        $d29 = 4.0 * d0;

        $d30 = $d29 * d2;

        d38 = $d31 - $d30;

        $b8 = d38 cmpl 0.0;

        if $b8 < 0 goto label4;

        $z0 = 1;

        goto label5;

     label4:
        $z0 = 0;

     label5:
        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z0, "root of neg");

        d39 = staticinvoke <java.lang.Math: double sqrt(double)>(d38);

        $d32 = neg d1;

        $d33 = $d32 + d39;

        $d34 = $d33 / 2.0;

        d3 = $d34 / d0;

        $r24 = r0.<com.opengamma.analytics.math.interpolation.data.Interpolator1DQuadraticSplineDataBundle: double[] _b>;

        $r24[i11] = d3;

        i11 = i11 + 1;

        goto label3;

     label6:
        $r17 = r0.<com.opengamma.analytics.math.interpolation.data.Interpolator1DQuadraticSplineDataBundle: double[] _a>;

        $r16 = r0.<com.opengamma.analytics.math.interpolation.data.Interpolator1DQuadraticSplineDataBundle: double[] _a>;

        $i3 = i0 - 1;

        $d9 = $r16[$i3];

        $r17[i0] = $d9;

        return;
    }

    public boolean containsKey(java.lang.Double)
    {
        com.opengamma.analytics.math.interpolation.data.Interpolator1DQuadraticSplineDataBundle r0;
        java.lang.Double r1;
        com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle $r2;
        boolean $z0;

        r0 := @this: com.opengamma.analytics.math.interpolation.data.Interpolator1DQuadraticSplineDataBundle;

        r1 := @parameter0: java.lang.Double;

        $r2 = r0.<com.opengamma.analytics.math.interpolation.data.Interpolator1DQuadraticSplineDataBundle: com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle _underlyingData>;

        $z0 = interfaceinvoke $r2.<com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle: boolean containsKey(java.lang.Double)>(r1);

        return $z0;
    }

    public java.lang.Double firstKey()
    {
        com.opengamma.analytics.math.interpolation.data.Interpolator1DQuadraticSplineDataBundle r0;
        com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle $r1;
        java.lang.Double $r2;

        r0 := @this: com.opengamma.analytics.math.interpolation.data.Interpolator1DQuadraticSplineDataBundle;

        $r1 = r0.<com.opengamma.analytics.math.interpolation.data.Interpolator1DQuadraticSplineDataBundle: com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle _underlyingData>;

        $r2 = interfaceinvoke $r1.<com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle: java.lang.Double firstKey()>();

        return $r2;
    }

    public java.lang.Double firstValue()
    {
        com.opengamma.analytics.math.interpolation.data.Interpolator1DQuadraticSplineDataBundle r0;
        com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle $r1;
        java.lang.Double $r2;

        r0 := @this: com.opengamma.analytics.math.interpolation.data.Interpolator1DQuadraticSplineDataBundle;

        $r1 = r0.<com.opengamma.analytics.math.interpolation.data.Interpolator1DQuadraticSplineDataBundle: com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle _underlyingData>;

        $r2 = interfaceinvoke $r1.<com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle: java.lang.Double firstValue()>();

        return $r2;
    }

    public java.lang.Double get(java.lang.Double)
    {
        com.opengamma.analytics.math.interpolation.data.Interpolator1DQuadraticSplineDataBundle r0;
        java.lang.Double r1, $r3;
        com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle $r2;

        r0 := @this: com.opengamma.analytics.math.interpolation.data.Interpolator1DQuadraticSplineDataBundle;

        r1 := @parameter0: java.lang.Double;

        $r2 = r0.<com.opengamma.analytics.math.interpolation.data.Interpolator1DQuadraticSplineDataBundle: com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle _underlyingData>;

        $r3 = interfaceinvoke $r2.<com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle: java.lang.Double get(java.lang.Double)>(r1);

        return $r3;
    }

    public com.opengamma.analytics.math.interpolation.data.InterpolationBoundedValues getBoundedValues(java.lang.Double)
    {
        com.opengamma.analytics.math.interpolation.data.Interpolator1DQuadraticSplineDataBundle r0;
        java.lang.Double r1;
        com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle $r2;
        com.opengamma.analytics.math.interpolation.data.InterpolationBoundedValues $r3;

        r0 := @this: com.opengamma.analytics.math.interpolation.data.Interpolator1DQuadraticSplineDataBundle;

        r1 := @parameter0: java.lang.Double;

        $r2 = r0.<com.opengamma.analytics.math.interpolation.data.Interpolator1DQuadraticSplineDataBundle: com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle _underlyingData>;

        $r3 = interfaceinvoke $r2.<com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle: com.opengamma.analytics.math.interpolation.data.InterpolationBoundedValues getBoundedValues(java.lang.Double)>(r1);

        return $r3;
    }

    public double[] getKeys()
    {
        com.opengamma.analytics.math.interpolation.data.Interpolator1DQuadraticSplineDataBundle r0;
        com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle $r1;
        double[] $r2;

        r0 := @this: com.opengamma.analytics.math.interpolation.data.Interpolator1DQuadraticSplineDataBundle;

        $r1 = r0.<com.opengamma.analytics.math.interpolation.data.Interpolator1DQuadraticSplineDataBundle: com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle _underlyingData>;

        $r2 = interfaceinvoke $r1.<com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle: double[] getKeys()>();

        return $r2;
    }

    public int getLowerBoundIndex(java.lang.Double)
    {
        com.opengamma.analytics.math.interpolation.data.Interpolator1DQuadraticSplineDataBundle r0;
        java.lang.Double r1;
        double[] r2;
        int i0, $i2, $i4, i5, i6;
        com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle $r3, $r4;
        double $d0, $d1, $d2, $d3, $d4;
        byte $b1, $b3;

        r0 := @this: com.opengamma.analytics.math.interpolation.data.Interpolator1DQuadraticSplineDataBundle;

        r1 := @parameter0: java.lang.Double;

        $r3 = r0.<com.opengamma.analytics.math.interpolation.data.Interpolator1DQuadraticSplineDataBundle: com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle _underlyingData>;

        r2 = interfaceinvoke $r3.<com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle: double[] getKeys()>();

        $r4 = r0.<com.opengamma.analytics.math.interpolation.data.Interpolator1DQuadraticSplineDataBundle: com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle _underlyingData>;

        i0 = interfaceinvoke $r4.<com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle: int size()>();

        $d0 = virtualinvoke r1.<java.lang.Double: double doubleValue()>();

        $d1 = r2[0];

        $b1 = $d0 cmpg $d1;

        if $b1 >= 0 goto label1;

        return 0;

     label1:
        $d2 = virtualinvoke r1.<java.lang.Double: double doubleValue()>();

        $i2 = i0 - 1;

        $d3 = r2[$i2];

        $b3 = $d2 cmpl $d3;

        if $b3 <= 0 goto label2;

        return i0;

     label2:
        $d4 = virtualinvoke r1.<java.lang.Double: double doubleValue()>();

        i5 = staticinvoke <java.util.Arrays: int binarySearch(double[],double)>(r2, $d4);

        if i5 < 0 goto label3;

        return i5;

     label3:
        if i5 >= 0 goto label4;

        $i4 = i5 + 1;

        i6 = neg $i4;

        i5 = i6 + -1;

     label4:
        return i5;
    }

    public java.lang.Double getLowerBoundKey(java.lang.Double)
    {
        com.opengamma.analytics.math.interpolation.data.Interpolator1DQuadraticSplineDataBundle r0;
        java.lang.Double r1, $r3;
        com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle $r2;

        r0 := @this: com.opengamma.analytics.math.interpolation.data.Interpolator1DQuadraticSplineDataBundle;

        r1 := @parameter0: java.lang.Double;

        $r2 = r0.<com.opengamma.analytics.math.interpolation.data.Interpolator1DQuadraticSplineDataBundle: com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle _underlyingData>;

        $r3 = interfaceinvoke $r2.<com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle: java.lang.Double getLowerBoundKey(java.lang.Double)>(r1);

        return $r3;
    }

    public double[] getValues()
    {
        com.opengamma.analytics.math.interpolation.data.Interpolator1DQuadraticSplineDataBundle r0;
        com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle $r1;
        double[] $r2;

        r0 := @this: com.opengamma.analytics.math.interpolation.data.Interpolator1DQuadraticSplineDataBundle;

        $r1 = r0.<com.opengamma.analytics.math.interpolation.data.Interpolator1DQuadraticSplineDataBundle: com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle _underlyingData>;

        $r2 = interfaceinvoke $r1.<com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle: double[] getValues()>();

        return $r2;
    }

    public java.lang.Double higherKey(java.lang.Double)
    {
        com.opengamma.analytics.math.interpolation.data.Interpolator1DQuadraticSplineDataBundle r0;
        java.lang.Double r1, $r3;
        com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle $r2;

        r0 := @this: com.opengamma.analytics.math.interpolation.data.Interpolator1DQuadraticSplineDataBundle;

        r1 := @parameter0: java.lang.Double;

        $r2 = r0.<com.opengamma.analytics.math.interpolation.data.Interpolator1DQuadraticSplineDataBundle: com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle _underlyingData>;

        $r3 = interfaceinvoke $r2.<com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle: java.lang.Double higherKey(java.lang.Double)>(r1);

        return $r3;
    }

    public java.lang.Double higherValue(java.lang.Double)
    {
        com.opengamma.analytics.math.interpolation.data.Interpolator1DQuadraticSplineDataBundle r0;
        java.lang.Double r1, $r3;
        com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle $r2;

        r0 := @this: com.opengamma.analytics.math.interpolation.data.Interpolator1DQuadraticSplineDataBundle;

        r1 := @parameter0: java.lang.Double;

        $r2 = r0.<com.opengamma.analytics.math.interpolation.data.Interpolator1DQuadraticSplineDataBundle: com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle _underlyingData>;

        $r3 = interfaceinvoke $r2.<com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle: java.lang.Double higherValue(java.lang.Double)>(r1);

        return $r3;
    }

    public java.lang.Double lastKey()
    {
        com.opengamma.analytics.math.interpolation.data.Interpolator1DQuadraticSplineDataBundle r0;
        com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle $r1;
        java.lang.Double $r2;

        r0 := @this: com.opengamma.analytics.math.interpolation.data.Interpolator1DQuadraticSplineDataBundle;

        $r1 = r0.<com.opengamma.analytics.math.interpolation.data.Interpolator1DQuadraticSplineDataBundle: com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle _underlyingData>;

        $r2 = interfaceinvoke $r1.<com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle: java.lang.Double lastKey()>();

        return $r2;
    }

    public java.lang.Double lastValue()
    {
        com.opengamma.analytics.math.interpolation.data.Interpolator1DQuadraticSplineDataBundle r0;
        com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle $r1;
        java.lang.Double $r2;

        r0 := @this: com.opengamma.analytics.math.interpolation.data.Interpolator1DQuadraticSplineDataBundle;

        $r1 = r0.<com.opengamma.analytics.math.interpolation.data.Interpolator1DQuadraticSplineDataBundle: com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle _underlyingData>;

        $r2 = interfaceinvoke $r1.<com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle: java.lang.Double lastValue()>();

        return $r2;
    }

    public int size()
    {
        com.opengamma.analytics.math.interpolation.data.Interpolator1DQuadraticSplineDataBundle r0;
        com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle $r1;
        int $i0;

        r0 := @this: com.opengamma.analytics.math.interpolation.data.Interpolator1DQuadraticSplineDataBundle;

        $r1 = r0.<com.opengamma.analytics.math.interpolation.data.Interpolator1DQuadraticSplineDataBundle: com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle _underlyingData>;

        $i0 = interfaceinvoke $r1.<com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle: int size()>();

        return $i0;
    }

    public void setYValueAtIndex(int, double)
    {
        com.opengamma.analytics.math.interpolation.data.Interpolator1DQuadraticSplineDataBundle r0;
        int i0;
        double d0;

        r0 := @this: com.opengamma.analytics.math.interpolation.data.Interpolator1DQuadraticSplineDataBundle;

        i0 := @parameter0: int;

        d0 := @parameter1: double;

        return;
    }

    public double getA(int)
    {
        com.opengamma.analytics.math.interpolation.data.Interpolator1DQuadraticSplineDataBundle r0;
        int i0;
        double[] $r1;
        double $d0;

        r0 := @this: com.opengamma.analytics.math.interpolation.data.Interpolator1DQuadraticSplineDataBundle;

        i0 := @parameter0: int;

        $r1 = r0.<com.opengamma.analytics.math.interpolation.data.Interpolator1DQuadraticSplineDataBundle: double[] _a>;

        $d0 = $r1[i0];

        return $d0;
    }

    public double getB(int)
    {
        com.opengamma.analytics.math.interpolation.data.Interpolator1DQuadraticSplineDataBundle r0;
        int i0;
        double[] $r1;
        double $d0;

        r0 := @this: com.opengamma.analytics.math.interpolation.data.Interpolator1DQuadraticSplineDataBundle;

        i0 := @parameter0: int;

        $r1 = r0.<com.opengamma.analytics.math.interpolation.data.Interpolator1DQuadraticSplineDataBundle: double[] _b>;

        $d0 = $r1[i0];

        return $d0;
    }
}
