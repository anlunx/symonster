public class com.opengamma.analytics.math.interpolation.PCHIPInterpolator1D extends com.opengamma.analytics.math.interpolation.Interpolator1D
{
    private static final long serialVersionUID;
    private static final com.opengamma.analytics.math.function.PiecewisePolynomialFunction1D FUNC;

    public void <init>()
    {
        com.opengamma.analytics.math.interpolation.PCHIPInterpolator1D r0;

        r0 := @this: com.opengamma.analytics.math.interpolation.PCHIPInterpolator1D;

        specialinvoke r0.<com.opengamma.analytics.math.interpolation.Interpolator1D: void <init>()>();

        return;
    }

    public java.lang.Double interpolate(com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle, java.lang.Double)
    {
        com.opengamma.analytics.math.interpolation.PCHIPInterpolator1D r0;
        com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle r1;
        java.lang.Double r2, $r8;
        com.opengamma.analytics.math.interpolation.data.Interpolator1DPiecewisePoynomialDataBundle r3;
        com.opengamma.analytics.math.matrix.DoubleMatrix1D r4;
        boolean $z0;
        com.opengamma.analytics.math.function.PiecewisePolynomialFunction1D $r5;
        com.opengamma.analytics.math.interpolation.PiecewisePolynomialResultsWithSensitivity $r6;
        double $d0;
        int[] $r7;

        r0 := @this: com.opengamma.analytics.math.interpolation.PCHIPInterpolator1D;

        r1 := @parameter0: com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle;

        r2 := @parameter1: java.lang.Double;

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object,java.lang.String)>(r2, "value");

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object,java.lang.String)>(r1, "data bundle");

        $z0 = r1 instanceof com.opengamma.analytics.math.interpolation.data.Interpolator1DPiecewisePoynomialDataBundle;

        staticinvoke <org.apache.commons.lang.Validate: void isTrue(boolean)>($z0);

        r3 = (com.opengamma.analytics.math.interpolation.data.Interpolator1DPiecewisePoynomialDataBundle) r1;

        $r5 = <com.opengamma.analytics.math.interpolation.PCHIPInterpolator1D: com.opengamma.analytics.math.function.PiecewisePolynomialFunction1D FUNC>;

        $r6 = virtualinvoke r3.<com.opengamma.analytics.math.interpolation.data.Interpolator1DPiecewisePoynomialDataBundle: com.opengamma.analytics.math.interpolation.PiecewisePolynomialResultsWithSensitivity getPiecewisePolynomialResultsWithSensitivity()>();

        $d0 = virtualinvoke r2.<java.lang.Double: double doubleValue()>();

        r4 = virtualinvoke $r5.<com.opengamma.analytics.math.function.PiecewisePolynomialFunction1D: com.opengamma.analytics.math.matrix.DoubleMatrix1D evaluate(com.opengamma.analytics.math.interpolation.PiecewisePolynomialResult,double)>($r6, $d0);

        $r7 = newarray (int)[1];

        $r7[0] = 0;

        $r8 = virtualinvoke r4.<com.opengamma.analytics.math.matrix.DoubleMatrix1D: java.lang.Double getEntry(int[])>($r7);

        return $r8;
    }

    public double firstDerivative(com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle, java.lang.Double)
    {
        com.opengamma.analytics.math.interpolation.PCHIPInterpolator1D r0;
        com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle r1;
        java.lang.Double r2, $r8;
        com.opengamma.analytics.math.interpolation.data.Interpolator1DPiecewisePoynomialDataBundle r3;
        com.opengamma.analytics.math.matrix.DoubleMatrix1D r4;
        boolean $z0;
        com.opengamma.analytics.math.function.PiecewisePolynomialFunction1D $r5;
        com.opengamma.analytics.math.interpolation.PiecewisePolynomialResultsWithSensitivity $r6;
        double $d0, $d1;
        int[] $r7;

        r0 := @this: com.opengamma.analytics.math.interpolation.PCHIPInterpolator1D;

        r1 := @parameter0: com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle;

        r2 := @parameter1: java.lang.Double;

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object,java.lang.String)>(r2, "value");

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object,java.lang.String)>(r1, "data bundle");

        $z0 = r1 instanceof com.opengamma.analytics.math.interpolation.data.Interpolator1DPiecewisePoynomialDataBundle;

        staticinvoke <org.apache.commons.lang.Validate: void isTrue(boolean)>($z0);

        r3 = (com.opengamma.analytics.math.interpolation.data.Interpolator1DPiecewisePoynomialDataBundle) r1;

        $r5 = <com.opengamma.analytics.math.interpolation.PCHIPInterpolator1D: com.opengamma.analytics.math.function.PiecewisePolynomialFunction1D FUNC>;

        $r6 = virtualinvoke r3.<com.opengamma.analytics.math.interpolation.data.Interpolator1DPiecewisePoynomialDataBundle: com.opengamma.analytics.math.interpolation.PiecewisePolynomialResultsWithSensitivity getPiecewisePolynomialResultsWithSensitivity()>();

        $d0 = virtualinvoke r2.<java.lang.Double: double doubleValue()>();

        r4 = virtualinvoke $r5.<com.opengamma.analytics.math.function.PiecewisePolynomialFunction1D: com.opengamma.analytics.math.matrix.DoubleMatrix1D differentiate(com.opengamma.analytics.math.interpolation.PiecewisePolynomialResult,double)>($r6, $d0);

        $r7 = newarray (int)[1];

        $r7[0] = 0;

        $r8 = virtualinvoke r4.<com.opengamma.analytics.math.matrix.DoubleMatrix1D: java.lang.Double getEntry(int[])>($r7);

        $d1 = virtualinvoke $r8.<java.lang.Double: double doubleValue()>();

        return $d1;
    }

    public double[] getNodeSensitivitiesForValue(com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle, java.lang.Double)
    {
        com.opengamma.analytics.math.interpolation.PCHIPInterpolator1D r0;
        com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle r1;
        java.lang.Double r2;
        org.apache.commons.lang.NotImplementedException $r3;

        r0 := @this: com.opengamma.analytics.math.interpolation.PCHIPInterpolator1D;

        r1 := @parameter0: com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle;

        r2 := @parameter1: java.lang.Double;

        $r3 = new org.apache.commons.lang.NotImplementedException;

        specialinvoke $r3.<org.apache.commons.lang.NotImplementedException: void <init>()>();

        throw $r3;
    }

    public com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle getDataBundle(double[], double[])
    {
        com.opengamma.analytics.math.interpolation.PCHIPInterpolator1D r0;
        double[] r1, r2;
        com.opengamma.analytics.math.interpolation.data.Interpolator1DPiecewisePoynomialDataBundle $r3;
        com.opengamma.analytics.math.interpolation.data.ArrayInterpolator1DDataBundle $r4;
        com.opengamma.analytics.math.interpolation.PiecewiseCubicHermiteSplineInterpolatorWithSensitivity $r5;

        r0 := @this: com.opengamma.analytics.math.interpolation.PCHIPInterpolator1D;

        r1 := @parameter0: double[];

        r2 := @parameter1: double[];

        $r3 = new com.opengamma.analytics.math.interpolation.data.Interpolator1DPiecewisePoynomialDataBundle;

        $r4 = new com.opengamma.analytics.math.interpolation.data.ArrayInterpolator1DDataBundle;

        specialinvoke $r4.<com.opengamma.analytics.math.interpolation.data.ArrayInterpolator1DDataBundle: void <init>(double[],double[],boolean)>(r1, r2, 1);

        $r5 = new com.opengamma.analytics.math.interpolation.PiecewiseCubicHermiteSplineInterpolatorWithSensitivity;

        specialinvoke $r5.<com.opengamma.analytics.math.interpolation.PiecewiseCubicHermiteSplineInterpolatorWithSensitivity: void <init>()>();

        specialinvoke $r3.<com.opengamma.analytics.math.interpolation.data.Interpolator1DPiecewisePoynomialDataBundle: void <init>(com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle,com.opengamma.analytics.math.interpolation.PiecewisePolynomialInterpolator)>($r4, $r5);

        return $r3;
    }

    public com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle getDataBundleFromSortedArrays(double[], double[])
    {
        com.opengamma.analytics.math.interpolation.PCHIPInterpolator1D r0;
        double[] r1, r2;
        com.opengamma.analytics.math.interpolation.data.Interpolator1DPiecewisePoynomialDataBundle $r3;
        com.opengamma.analytics.math.interpolation.data.ArrayInterpolator1DDataBundle $r4;
        com.opengamma.analytics.math.interpolation.PiecewiseCubicHermiteSplineInterpolatorWithSensitivity $r5;

        r0 := @this: com.opengamma.analytics.math.interpolation.PCHIPInterpolator1D;

        r1 := @parameter0: double[];

        r2 := @parameter1: double[];

        $r3 = new com.opengamma.analytics.math.interpolation.data.Interpolator1DPiecewisePoynomialDataBundle;

        $r4 = new com.opengamma.analytics.math.interpolation.data.ArrayInterpolator1DDataBundle;

        specialinvoke $r4.<com.opengamma.analytics.math.interpolation.data.ArrayInterpolator1DDataBundle: void <init>(double[],double[],boolean)>(r1, r2, 1);

        $r5 = new com.opengamma.analytics.math.interpolation.PiecewiseCubicHermiteSplineInterpolatorWithSensitivity;

        specialinvoke $r5.<com.opengamma.analytics.math.interpolation.PiecewiseCubicHermiteSplineInterpolatorWithSensitivity: void <init>()>();

        specialinvoke $r3.<com.opengamma.analytics.math.interpolation.data.Interpolator1DPiecewisePoynomialDataBundle: void <init>(com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle,com.opengamma.analytics.math.interpolation.PiecewisePolynomialInterpolator)>($r4, $r5);

        return $r3;
    }

    public volatile java.lang.Double interpolate(java.lang.Object, java.lang.Object)
    {
        com.opengamma.analytics.math.interpolation.PCHIPInterpolator1D r0;
        java.lang.Object r1, r2;
        java.lang.Double $r3, $r5;
        com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle $r4;

        r0 := @this: com.opengamma.analytics.math.interpolation.PCHIPInterpolator1D;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r4 = (com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle) r1;

        $r3 = (java.lang.Double) r2;

        $r5 = virtualinvoke r0.<com.opengamma.analytics.math.interpolation.PCHIPInterpolator1D: java.lang.Double interpolate(com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle,java.lang.Double)>($r4, $r3);

        return $r5;
    }

    static void <clinit>()
    {
        com.opengamma.analytics.math.function.PiecewisePolynomialWithSensitivityFunction1D $r0;

        <com.opengamma.analytics.math.interpolation.PCHIPInterpolator1D: long serialVersionUID> = 1L;

        $r0 = new com.opengamma.analytics.math.function.PiecewisePolynomialWithSensitivityFunction1D;

        specialinvoke $r0.<com.opengamma.analytics.math.function.PiecewisePolynomialWithSensitivityFunction1D: void <init>()>();

        <com.opengamma.analytics.math.interpolation.PCHIPInterpolator1D: com.opengamma.analytics.math.function.PiecewisePolynomialFunction1D FUNC> = $r0;

        return;
    }
}
