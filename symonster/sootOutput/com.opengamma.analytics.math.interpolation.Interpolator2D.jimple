public abstract class com.opengamma.analytics.math.interpolation.Interpolator2D extends java.lang.Object implements com.opengamma.analytics.math.interpolation.Interpolator
{

    public void <init>()
    {
        com.opengamma.analytics.math.interpolation.Interpolator2D r0;

        r0 := @this: com.opengamma.analytics.math.interpolation.Interpolator2D;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public abstract java.lang.Double interpolate(java.util.Map, com.opengamma.util.tuple.DoublesPair);

    public abstract java.util.Map getNodeSensitivitiesForValue(java.util.Map, com.opengamma.util.tuple.DoublesPair);

    public volatile java.lang.Double interpolate(java.lang.Object, java.lang.Object)
    {
        com.opengamma.analytics.math.interpolation.Interpolator2D r0;
        java.lang.Object r1, r2;
        com.opengamma.util.tuple.DoublesPair $r3;
        java.util.Map $r4;
        java.lang.Double $r5;

        r0 := @this: com.opengamma.analytics.math.interpolation.Interpolator2D;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r4 = (java.util.Map) r1;

        $r3 = (com.opengamma.util.tuple.DoublesPair) r2;

        $r5 = virtualinvoke r0.<com.opengamma.analytics.math.interpolation.Interpolator2D: java.lang.Double interpolate(java.util.Map,com.opengamma.util.tuple.DoublesPair)>($r4, $r3);

        return $r5;
    }
}
