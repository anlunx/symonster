public class com.opengamma.analytics.financial.volatilityswap.VolatilitySwapGreeksCalculator extends java.lang.Object
{

    public void <init>()
    {
        com.opengamma.analytics.financial.volatilityswap.VolatilitySwapGreeksCalculator r0;

        r0 := @this: com.opengamma.analytics.financial.volatilityswap.VolatilitySwapGreeksCalculator;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public double[] getFXVolatilitySwapGreeks(com.opengamma.analytics.financial.volatilityswap.VolatilitySwapCalculatorResultWithStrikes, com.opengamma.analytics.financial.volatilityswap.FXVolatilitySwap, com.opengamma.analytics.financial.provider.description.volatilityswap.CarrLeeFXData)
    {
        com.opengamma.analytics.financial.volatilityswap.VolatilitySwapGreeksCalculator r0;
        com.opengamma.analytics.financial.volatilityswap.VolatilitySwapCalculatorResultWithStrikes r1;
        com.opengamma.analytics.financial.volatilityswap.FXVolatilitySwap r2;
        com.opengamma.analytics.financial.provider.description.volatilityswap.CarrLeeFXData r3;
        double d0, d1, d2, d3, d4, d5, d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, d18;
        double[] r4, r5, r7, r8, $r23;
        int i0, i1, i4, i5;
        com.opengamma.analytics.financial.model.volatility.surface.SmileDeltaTermStructureParameters r6;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        byte $b2, $b3;
        com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface $r12, $r15;
        com.opengamma.util.money.Currency $r13, $r16;
        java.lang.Double $r14, $r17, $r18, $r19, $r20, $r22, $r24, $r25, $r26, $r28, $r29, $r30, $r31, $r33;
        com.opengamma.util.tuple.Triple $r21, $r27, $r32;

        r0 := @this: com.opengamma.analytics.financial.volatilityswap.VolatilitySwapGreeksCalculator;

        r1 := @parameter0: com.opengamma.analytics.financial.volatilityswap.VolatilitySwapCalculatorResultWithStrikes;

        r2 := @parameter1: com.opengamma.analytics.financial.volatilityswap.FXVolatilitySwap;

        r3 := @parameter2: com.opengamma.analytics.financial.provider.description.volatilityswap.CarrLeeFXData;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "result");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, "swap");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r3, "data");

        d0 = virtualinvoke r3.<com.opengamma.analytics.financial.provider.description.volatilityswap.CarrLeeFXData: double getSpot()>();

        d1 = virtualinvoke r2.<com.opengamma.analytics.financial.volatilityswap.FXVolatilitySwap: double getTimeToMaturity()>();

        $z0 = staticinvoke <com.google.common.primitives.Doubles: boolean isFinite(double)>(d1);

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z0, "timeToExpiry should be finite");

        $b2 = d1 cmpl 0.0;

        if $b2 <= 0 goto label1;

        $z4 = 1;

        goto label2;

     label1:
        $z4 = 0;

     label2:
        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z4, "timeToExpiry should be positive");

        $z1 = staticinvoke <com.google.common.primitives.Doubles: boolean isFinite(double)>(d0);

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z1, "spot should be finite");

        $b3 = d0 cmpl 0.0;

        if $b3 <= 0 goto label3;

        $z5 = 1;

        goto label4;

     label3:
        $z5 = 0;

     label4:
        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z5, "spot should be positive");

        $r12 = virtualinvoke r3.<com.opengamma.analytics.financial.provider.description.volatilityswap.CarrLeeFXData: com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface getMulticurveProvider()>();

        $r13 = virtualinvoke r2.<com.opengamma.analytics.financial.volatilityswap.FXVolatilitySwap: com.opengamma.util.money.Currency getBaseCurrency()>();

        $r14 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d1);

        d2 = interfaceinvoke $r12.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface: double getDiscountFactor(com.opengamma.util.money.Currency,java.lang.Double)>($r13, $r14);

        $r15 = virtualinvoke r3.<com.opengamma.analytics.financial.provider.description.volatilityswap.CarrLeeFXData: com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface getMulticurveProvider()>();

        $r16 = virtualinvoke r2.<com.opengamma.analytics.financial.volatilityswap.FXVolatilitySwap: com.opengamma.util.money.Currency getCounterCurrency()>();

        $r17 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d1);

        d3 = interfaceinvoke $r15.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface: double getDiscountFactor(com.opengamma.util.money.Currency,java.lang.Double)>($r16, $r17);

        $d7 = staticinvoke <java.lang.Math: double log(double)>(d2);

        $d8 = neg $d7;

        d4 = $d8 / d1;

        $d9 = staticinvoke <java.lang.Math: double log(double)>(d3);

        $d10 = neg $d9;

        d5 = $d10 / d1;

        $z2 = staticinvoke <com.google.common.primitives.Doubles: boolean isFinite(double)>(d4);

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z2, "domestic rate should be finite");

        $z3 = staticinvoke <com.google.common.primitives.Doubles: boolean isFinite(double)>(d5);

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z3, "foreign rate should be finite");

        r4 = virtualinvoke r1.<com.opengamma.analytics.financial.volatilityswap.VolatilitySwapCalculatorResultWithStrikes: double[] getPutStrikes()>();

        $d11 = d4 - d5;

        $d12 = $d11 * d1;

        $d13 = staticinvoke <java.lang.Math: double exp(double)>($d12);

        d6 = d0 * $d13;

        r5 = virtualinvoke r1.<com.opengamma.analytics.financial.volatilityswap.VolatilitySwapCalculatorResultWithStrikes: double[] getCallStrikes()>();

        i0 = lengthof r4;

        i1 = lengthof r5;

        r6 = virtualinvoke r3.<com.opengamma.analytics.financial.provider.description.volatilityswap.CarrLeeFXData: com.opengamma.analytics.financial.model.volatility.surface.SmileDeltaTermStructureParameters getVolatilityData()>();

        r7 = newarray (double)[i0];

        r8 = newarray (double)[i1];

        i4 = 0;

     label5:
        if i4 >= i0 goto label6;

        $r29 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d1);

        $d16 = r4[i4];

        $r30 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d16);

        $r31 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d6);

        $r32 = staticinvoke <com.opengamma.util.tuple.Triple: com.opengamma.util.tuple.Triple of(java.lang.Object,java.lang.Object,java.lang.Object)>($r29, $r30, $r31);

        $r33 = virtualinvoke r6.<com.opengamma.analytics.financial.model.volatility.surface.SmileDeltaTermStructureParameters: java.lang.Double getVolatility(com.opengamma.util.tuple.Triple)>($r32);

        $d17 = virtualinvoke $r33.<java.lang.Double: double doubleValue()>();

        r7[i4] = $d17;

        i4 = i4 + 1;

        goto label5;

     label6:
        $r18 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d1);

        $r19 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d6);

        $r20 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d6);

        $r21 = staticinvoke <com.opengamma.util.tuple.Triple: com.opengamma.util.tuple.Triple of(java.lang.Object,java.lang.Object,java.lang.Object)>($r18, $r19, $r20);

        $r22 = virtualinvoke r6.<com.opengamma.analytics.financial.model.volatility.surface.SmileDeltaTermStructureParameters: java.lang.Double getVolatility(com.opengamma.util.tuple.Triple)>($r21);

        d18 = virtualinvoke $r22.<java.lang.Double: double doubleValue()>();

        i5 = 0;

     label7:
        if i5 >= i1 goto label8;

        $r24 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d1);

        $d14 = r5[i5];

        $r25 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d14);

        $r26 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d6);

        $r27 = staticinvoke <com.opengamma.util.tuple.Triple: com.opengamma.util.tuple.Triple of(java.lang.Object,java.lang.Object,java.lang.Object)>($r24, $r25, $r26);

        $r28 = virtualinvoke r6.<com.opengamma.analytics.financial.model.volatility.surface.SmileDeltaTermStructureParameters: java.lang.Double getVolatility(com.opengamma.util.tuple.Triple)>($r27);

        $d15 = virtualinvoke $r28.<java.lang.Double: double doubleValue()>();

        r8[i5] = $d15;

        i5 = i5 + 1;

        goto label7;

     label8:
        $r23 = specialinvoke r0.<com.opengamma.analytics.financial.volatilityswap.VolatilitySwapGreeksCalculator: double[] getGreeks(com.opengamma.analytics.financial.volatilityswap.VolatilitySwapCalculatorResult,double,double[],double[],double,double,double,double[],double,double[])>(r1, d0, r4, r5, d1, d4, d5, r7, d18, r8);

        return $r23;
    }

    public double[] getFXVolatilitySwapGreeks(com.opengamma.analytics.financial.volatilityswap.FXVolatilitySwap, com.opengamma.analytics.financial.provider.description.volatilityswap.CarrLeeFXData)
    {
        com.opengamma.analytics.financial.volatilityswap.VolatilitySwapGreeksCalculator r0;
        com.opengamma.analytics.financial.volatilityswap.FXVolatilitySwap r1;
        com.opengamma.analytics.financial.provider.description.volatilityswap.CarrLeeFXData r2;
        com.opengamma.analytics.financial.volatilityswap.VolatilitySwapCalculatorResultWithStrikes r4;
        com.opengamma.analytics.financial.volatilityswap.CarrLeeFXVolatilitySwapCalculator $r7;
        double[] $r8;

        r0 := @this: com.opengamma.analytics.financial.volatilityswap.VolatilitySwapGreeksCalculator;

        r1 := @parameter0: com.opengamma.analytics.financial.volatilityswap.FXVolatilitySwap;

        r2 := @parameter1: com.opengamma.analytics.financial.provider.description.volatilityswap.CarrLeeFXData;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "swap");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, "data");

        $r7 = new com.opengamma.analytics.financial.volatilityswap.CarrLeeFXVolatilitySwapCalculator;

        specialinvoke $r7.<com.opengamma.analytics.financial.volatilityswap.CarrLeeFXVolatilitySwapCalculator: void <init>()>();

        r4 = virtualinvoke $r7.<com.opengamma.analytics.financial.volatilityswap.CarrLeeFXVolatilitySwapCalculator: com.opengamma.analytics.financial.volatilityswap.VolatilitySwapCalculatorResultWithStrikes visitFXVolatilitySwap(com.opengamma.analytics.financial.volatilityswap.FXVolatilitySwap,com.opengamma.analytics.financial.provider.description.volatilityswap.CarrLeeFXData)>(r1, r2);

        $r8 = virtualinvoke r0.<com.opengamma.analytics.financial.volatilityswap.VolatilitySwapGreeksCalculator: double[] getFXVolatilitySwapGreeks(com.opengamma.analytics.financial.volatilityswap.VolatilitySwapCalculatorResultWithStrikes,com.opengamma.analytics.financial.volatilityswap.FXVolatilitySwap,com.opengamma.analytics.financial.provider.description.volatilityswap.CarrLeeFXData)>(r4, r1, r2);

        return $r8;
    }

    private double[] getGreeks(com.opengamma.analytics.financial.volatilityswap.VolatilitySwapCalculatorResult, double, double[], double[], double, double, double, double[], double, double[])
    {
        com.opengamma.analytics.financial.volatilityswap.VolatilitySwapGreeksCalculator r0;
        com.opengamma.analytics.financial.volatilityswap.VolatilitySwapCalculatorResult r1;
        double d0, d1, d2, d3, d4, d5, d6, d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15;
        double[] r2, r3, r4, r5, r6, r7, r8;
        int i0, i1, i4, i5;
        byte $b3;

        r0 := @this: com.opengamma.analytics.financial.volatilityswap.VolatilitySwapGreeksCalculator;

        r1 := @parameter0: com.opengamma.analytics.financial.volatilityswap.VolatilitySwapCalculatorResult;

        d0 := @parameter1: double;

        r2 := @parameter2: double[];

        r3 := @parameter3: double[];

        d1 := @parameter4: double;

        d2 := @parameter5: double;

        d3 := @parameter6: double;

        r4 := @parameter7: double[];

        d4 := @parameter8: double;

        r5 := @parameter9: double[];

        i0 = lengthof r3;

        i1 = lengthof r2;

        d5 = d2 - d3;

        $d8 = d5 * d1;

        $d9 = staticinvoke <java.lang.Math: double exp(double)>($d8);

        d6 = d0 * $d9;

        r6 = virtualinvoke r1.<com.opengamma.analytics.financial.volatilityswap.VolatilitySwapCalculatorResult: double[] getPutWeights()>();

        d7 = virtualinvoke r1.<com.opengamma.analytics.financial.volatilityswap.VolatilitySwapCalculatorResult: double getStraddleWeight()>();

        r7 = virtualinvoke r1.<com.opengamma.analytics.financial.volatilityswap.VolatilitySwapCalculatorResult: double[] getCallWeights()>();

        r8 = newarray (double)[4];

        i4 = 0;

     label1:
        if i4 >= i1 goto label2;

        $d15 = r6[i4];

        $d14 = r2[i4];

        $d13 = r4[i4];

        specialinvoke r0.<com.opengamma.analytics.financial.volatilityswap.VolatilitySwapGreeksCalculator: void getGreeksFraction(double[],double,double,double,double,double,double,double,boolean)>(r8, $d15, d0, $d14, d1, $d13, d2, d5, 0);

        i4 = i4 + 1;

        goto label1;

     label2:
        $b3 = d7 cmpl 0.0;

        if $b3 == 0 goto label3;

        specialinvoke r0.<com.opengamma.analytics.financial.volatilityswap.VolatilitySwapGreeksCalculator: void getGreeksFraction(double[],double,double,double,double,double,double,double,boolean)>(r8, d7, d0, d6, d1, d4, d2, d5, 1);

     label3:
        i5 = 0;

     label4:
        if i5 >= i0 goto label5;

        $d12 = r7[i5];

        $d11 = r3[i5];

        $d10 = r5[i5];

        specialinvoke r0.<com.opengamma.analytics.financial.volatilityswap.VolatilitySwapGreeksCalculator: void getGreeksFraction(double[],double,double,double,double,double,double,double,boolean)>(r8, $d12, d0, $d11, d1, $d10, d2, d5, 1);

        i5 = i5 + 1;

        goto label4;

     label5:
        return r8;
    }

    private void getGreeksFraction(double[], double, double, double, double, double, double, double, boolean)
    {
        com.opengamma.analytics.financial.volatilityswap.VolatilitySwapGreeksCalculator r0;
        double[] r1;
        double d0, d1, d2, d3, d4, d5, d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21, $d22;
        boolean z0;

        r0 := @this: com.opengamma.analytics.financial.volatilityswap.VolatilitySwapGreeksCalculator;

        r1 := @parameter0: double[];

        d0 := @parameter1: double;

        d1 := @parameter2: double;

        d2 := @parameter3: double;

        d3 := @parameter4: double;

        d4 := @parameter5: double;

        d5 := @parameter6: double;

        d6 := @parameter7: double;

        z0 := @parameter8: boolean;

        $d7 = r1[0];

        $d8 = staticinvoke <com.opengamma.analytics.financial.model.volatility.BlackScholesFormulaRepository: double delta(double,double,double,double,double,double,boolean)>(d1, d2, d3, d4, d5, d6, z0);

        $d9 = d0 * $d8;

        $d10 = $d7 + $d9;

        r1[0] = $d10;

        $d11 = r1[1];

        $d12 = staticinvoke <com.opengamma.analytics.financial.model.volatility.BlackScholesFormulaRepository: double gamma(double,double,double,double,double,double)>(d1, d2, d3, d4, d5, d6);

        $d13 = d0 * $d12;

        $d14 = $d11 + $d13;

        r1[1] = $d14;

        $d15 = r1[2];

        $d16 = staticinvoke <com.opengamma.analytics.financial.model.volatility.BlackScholesFormulaRepository: double vega(double,double,double,double,double,double)>(d1, d2, d3, d4, d5, d6);

        $d17 = d0 * $d16;

        $d18 = $d15 + $d17;

        r1[2] = $d18;

        $d19 = r1[3];

        $d20 = staticinvoke <com.opengamma.analytics.financial.model.volatility.BlackScholesFormulaRepository: double theta(double,double,double,double,double,double,boolean)>(d1, d2, d3, d4, d5, d6, z0);

        $d21 = d0 * $d20;

        $d22 = $d19 - $d21;

        r1[3] = $d22;

        return;
    }
}
