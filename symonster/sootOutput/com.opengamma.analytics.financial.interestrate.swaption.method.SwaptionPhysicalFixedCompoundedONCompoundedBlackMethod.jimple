public final class com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionPhysicalFixedCompoundedONCompoundedBlackMethod extends java.lang.Object implements com.opengamma.analytics.financial.interestrate.method.PricingMethod
{
    private static final com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionPhysicalFixedCompoundedONCompoundedBlackMethod INSTANCE;
    private static final com.opengamma.analytics.financial.interestrate.swap.method.SwapFixedCompoundingONCompoundingDiscountingMethod METHOD_SWAP;

    public static com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionPhysicalFixedCompoundedONCompoundedBlackMethod getInstance()
    {
        com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionPhysicalFixedCompoundedONCompoundedBlackMethod $r0;

        $r0 = <com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionPhysicalFixedCompoundedONCompoundedBlackMethod: com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionPhysicalFixedCompoundedONCompoundedBlackMethod INSTANCE>;

        return $r0;
    }

    private void <init>()
    {
        com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionPhysicalFixedCompoundedONCompoundedBlackMethod r0;

        r0 := @this: com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionPhysicalFixedCompoundedONCompoundedBlackMethod;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public com.opengamma.util.money.CurrencyAmount presentValue(com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionPhysicalFixedCompoundedONCompounded, com.opengamma.analytics.financial.model.option.definition.YieldCurveWithBlackSwaptionBundle)
    {
        com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionPhysicalFixedCompoundedONCompoundedBlackMethod r0;
        com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionPhysicalFixedCompoundedONCompounded r1;
        com.opengamma.analytics.financial.model.option.definition.YieldCurveWithBlackSwaptionBundle r2;
        com.opengamma.analytics.financial.interestrate.swap.derivative.Swap r3;
        com.opengamma.analytics.financial.interestrate.payments.derivative.CouponFixedAccruedCompounding r4, $r17;
        double d0, d1, d2, d3, d4, d5, d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17;
        com.opengamma.analytics.math.function.Function1D r8;
        com.opengamma.analytics.financial.interestrate.annuity.derivative.Annuity $r11, $r15;
        com.opengamma.analytics.financial.interestrate.payments.derivative.Payment $r12, $r16;
        java.lang.String $r13;
        com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve $r14;
        com.opengamma.analytics.financial.interestrate.swap.method.SwapFixedCompoundingONCompoundingDiscountingMethod $r18;
        com.opengamma.analytics.financial.model.option.pricing.analytic.formula.EuropeanVanillaOption $r19;
        boolean $z0, $z1;
        com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackPriceFunction $r20;
        com.opengamma.analytics.financial.model.option.parameters.BlackFlatSwaptionParameters $r21;
        com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackFunctionData $r22;
        java.lang.Object $r23;
        java.lang.Double $r24;
        com.opengamma.util.money.Currency $r25;
        com.opengamma.util.money.CurrencyAmount $r26;

        r0 := @this: com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionPhysicalFixedCompoundedONCompoundedBlackMethod;

        r1 := @parameter0: com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionPhysicalFixedCompoundedONCompounded;

        r2 := @parameter1: com.opengamma.analytics.financial.model.option.definition.YieldCurveWithBlackSwaptionBundle;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "Swaption");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, "Curves with Black volatility");

        r3 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionPhysicalFixedCompoundedONCompounded: com.opengamma.analytics.financial.interestrate.swap.derivative.Swap getUnderlyingSwap()>();

        $r11 = virtualinvoke r3.<com.opengamma.analytics.financial.interestrate.swap.derivative.Swap: com.opengamma.analytics.financial.interestrate.annuity.derivative.Annuity getFirstLeg()>();

        $r12 = virtualinvoke $r11.<com.opengamma.analytics.financial.interestrate.annuity.derivative.Annuity: com.opengamma.analytics.financial.interestrate.payments.derivative.Payment getNthPayment(int)>(0);

        r4 = (com.opengamma.analytics.financial.interestrate.payments.derivative.CouponFixedAccruedCompounding) $r12;

        $r13 = virtualinvoke r4.<com.opengamma.analytics.financial.interestrate.payments.derivative.CouponFixedAccruedCompounding: java.lang.String getFundingCurveName()>();

        $r14 = virtualinvoke r2.<com.opengamma.analytics.financial.model.option.definition.YieldCurveWithBlackSwaptionBundle: com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve getCurve(java.lang.String)>($r13);

        $d7 = virtualinvoke r4.<com.opengamma.analytics.financial.interestrate.payments.derivative.CouponFixedAccruedCompounding: double getPaymentTime()>();

        $d8 = virtualinvoke $r14.<com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve: double getDiscountFactor(double)>($d7);

        $d9 = virtualinvoke r4.<com.opengamma.analytics.financial.interestrate.payments.derivative.CouponFixedAccruedCompounding: double getNotional()>();

        $d10 = staticinvoke <java.lang.Math: double abs(double)>($d9);

        d0 = $d8 * $d10;

        $r15 = virtualinvoke r3.<com.opengamma.analytics.financial.interestrate.swap.derivative.Swap: com.opengamma.analytics.financial.interestrate.annuity.derivative.Annuity getFirstLeg()>();

        $r16 = virtualinvoke $r15.<com.opengamma.analytics.financial.interestrate.annuity.derivative.Annuity: com.opengamma.analytics.financial.interestrate.payments.derivative.Payment getNthPayment(int)>(0);

        $r17 = (com.opengamma.analytics.financial.interestrate.payments.derivative.CouponFixedAccruedCompounding) $r16;

        d1 = virtualinvoke $r17.<com.opengamma.analytics.financial.interestrate.payments.derivative.CouponFixedAccruedCompounding: double getPaymentYearFraction()>();

        $r18 = <com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionPhysicalFixedCompoundedONCompoundedBlackMethod: com.opengamma.analytics.financial.interestrate.swap.method.SwapFixedCompoundingONCompoundingDiscountingMethod METHOD_SWAP>;

        d2 = virtualinvoke $r18.<com.opengamma.analytics.financial.interestrate.swap.method.SwapFixedCompoundingONCompoundingDiscountingMethod: double forwardModified(com.opengamma.analytics.financial.interestrate.swap.derivative.Swap,com.opengamma.analytics.financial.interestrate.YieldCurveBundle)>(r3, r2);

        $d11 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionPhysicalFixedCompoundedONCompounded: double getStrike()>();

        $d12 = 1.0 + $d11;

        $d13 = staticinvoke <java.lang.Math: double pow(double,double)>($d12, d1);

        d3 = $d13 - 1.0;

        d4 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionPhysicalFixedCompoundedONCompounded: double getMaturityTime()>();

        $r19 = new com.opengamma.analytics.financial.model.option.pricing.analytic.formula.EuropeanVanillaOption;

        $d14 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionPhysicalFixedCompoundedONCompounded: double getTimeToExpiry()>();

        $z0 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionPhysicalFixedCompoundedONCompounded: boolean isCall()>();

        specialinvoke $r19.<com.opengamma.analytics.financial.model.option.pricing.analytic.formula.EuropeanVanillaOption: void <init>(double,double,boolean)>(d3, $d14, $z0);

        $r20 = new com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackPriceFunction;

        specialinvoke $r20.<com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackPriceFunction: void <init>()>();

        $r21 = virtualinvoke r2.<com.opengamma.analytics.financial.model.option.definition.YieldCurveWithBlackSwaptionBundle: com.opengamma.analytics.financial.model.option.parameters.BlackFlatSwaptionParameters getBlackParameters()>();

        $d15 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionPhysicalFixedCompoundedONCompounded: double getTimeToExpiry()>();

        d5 = virtualinvoke $r21.<com.opengamma.analytics.financial.model.option.parameters.BlackFlatSwaptionParameters: double getVolatility(double,double)>($d15, d4);

        $r22 = new com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackFunctionData;

        specialinvoke $r22.<com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackFunctionData: void <init>(double,double,double)>(d2, d0, d5);

        r8 = virtualinvoke $r20.<com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackPriceFunction: com.opengamma.analytics.math.function.Function1D getPriceFunction(com.opengamma.analytics.financial.model.option.pricing.analytic.formula.EuropeanVanillaOption)>($r19);

        $r23 = virtualinvoke r8.<com.opengamma.analytics.math.function.Function1D: java.lang.Object evaluate(java.lang.Object)>($r22);

        $r24 = (java.lang.Double) $r23;

        $d16 = virtualinvoke $r24.<java.lang.Double: double doubleValue()>();

        $z1 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionPhysicalFixedCompoundedONCompounded: boolean isLong()>();

        if $z1 == 0 goto label1;

        $d17 = 1.0;

        goto label2;

     label1:
        $d17 = -1.0;

     label2:
        d6 = $d16 * $d17;

        $r25 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionPhysicalFixedCompoundedONCompounded: com.opengamma.util.money.Currency getCurrency()>();

        $r26 = staticinvoke <com.opengamma.util.money.CurrencyAmount: com.opengamma.util.money.CurrencyAmount of(com.opengamma.util.money.Currency,double)>($r25, d6);

        return $r26;
    }

    public double forward(com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionPhysicalFixedCompoundedONCompounded, com.opengamma.analytics.financial.model.option.definition.YieldCurveWithBlackSwaptionBundle)
    {
        com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionPhysicalFixedCompoundedONCompoundedBlackMethod r0;
        com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionPhysicalFixedCompoundedONCompounded r1;
        com.opengamma.analytics.financial.model.option.definition.YieldCurveWithBlackSwaptionBundle r2;
        com.opengamma.analytics.financial.interestrate.swap.derivative.Swap r3;
        com.opengamma.analytics.financial.interestrate.swap.method.SwapFixedCompoundingONCompoundingDiscountingMethod $r6;
        double $d0;

        r0 := @this: com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionPhysicalFixedCompoundedONCompoundedBlackMethod;

        r1 := @parameter0: com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionPhysicalFixedCompoundedONCompounded;

        r2 := @parameter1: com.opengamma.analytics.financial.model.option.definition.YieldCurveWithBlackSwaptionBundle;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "Swaption");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, "Curves with Black volatility");

        r3 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionPhysicalFixedCompoundedONCompounded: com.opengamma.analytics.financial.interestrate.swap.derivative.Swap getUnderlyingSwap()>();

        $r6 = <com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionPhysicalFixedCompoundedONCompoundedBlackMethod: com.opengamma.analytics.financial.interestrate.swap.method.SwapFixedCompoundingONCompoundingDiscountingMethod METHOD_SWAP>;

        $d0 = virtualinvoke $r6.<com.opengamma.analytics.financial.interestrate.swap.method.SwapFixedCompoundingONCompoundingDiscountingMethod: double forward(com.opengamma.analytics.financial.interestrate.swap.derivative.Swap,com.opengamma.analytics.financial.interestrate.YieldCurveBundle)>(r3, r2);

        return $d0;
    }

    public com.opengamma.util.money.CurrencyAmount presentValue(com.opengamma.analytics.financial.interestrate.InstrumentDerivative, com.opengamma.analytics.financial.interestrate.YieldCurveBundle)
    {
        com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionPhysicalFixedCompoundedONCompoundedBlackMethod r0;
        com.opengamma.analytics.financial.interestrate.InstrumentDerivative r1;
        com.opengamma.analytics.financial.interestrate.YieldCurveBundle r2;
        boolean $z0, $z1;
        com.opengamma.analytics.financial.model.option.definition.YieldCurveWithBlackSwaptionBundle $r3;
        com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionPhysicalFixedCompoundedONCompounded $r4;
        com.opengamma.util.money.CurrencyAmount $r5;

        r0 := @this: com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionPhysicalFixedCompoundedONCompoundedBlackMethod;

        r1 := @parameter0: com.opengamma.analytics.financial.interestrate.InstrumentDerivative;

        r2 := @parameter1: com.opengamma.analytics.financial.interestrate.YieldCurveBundle;

        $z0 = r1 instanceof com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionPhysicalFixedCompoundedONCompounded;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z0, "Physical delivery swaption");

        $z1 = r2 instanceof com.opengamma.analytics.financial.model.option.definition.YieldCurveWithBlackSwaptionBundle;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z1, "Bundle should contain Black Swaption data");

        $r4 = (com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionPhysicalFixedCompoundedONCompounded) r1;

        $r3 = (com.opengamma.analytics.financial.model.option.definition.YieldCurveWithBlackSwaptionBundle) r2;

        $r5 = virtualinvoke r0.<com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionPhysicalFixedCompoundedONCompoundedBlackMethod: com.opengamma.util.money.CurrencyAmount presentValue(com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionPhysicalFixedCompoundedONCompounded,com.opengamma.analytics.financial.model.option.definition.YieldCurveWithBlackSwaptionBundle)>($r4, $r3);

        return $r5;
    }

    public double impliedVolatility(com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionPhysicalFixedCompoundedONCompounded, com.opengamma.analytics.financial.interestrate.YieldCurveBundle)
    {
        com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionPhysicalFixedCompoundedONCompoundedBlackMethod r0;
        com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionPhysicalFixedCompoundedONCompounded r1;
        com.opengamma.analytics.financial.interestrate.YieldCurveBundle r2;
        com.opengamma.analytics.financial.model.option.definition.YieldCurveWithBlackSwaptionBundle r3;
        double d0, d1, $d2;
        boolean $z0;
        com.opengamma.analytics.financial.model.option.parameters.BlackFlatSwaptionParameters $r6;

        r0 := @this: com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionPhysicalFixedCompoundedONCompoundedBlackMethod;

        r1 := @parameter0: com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionPhysicalFixedCompoundedONCompounded;

        r2 := @parameter1: com.opengamma.analytics.financial.interestrate.YieldCurveBundle;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, "Curves");

        $z0 = r2 instanceof com.opengamma.analytics.financial.model.option.definition.YieldCurveWithBlackSwaptionBundle;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z0, "Yield curve bundle should contain Black swaption data");

        r3 = (com.opengamma.analytics.financial.model.option.definition.YieldCurveWithBlackSwaptionBundle) r2;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "Forex option");

        d0 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionPhysicalFixedCompoundedONCompounded: double getMaturityTime()>();

        $r6 = virtualinvoke r3.<com.opengamma.analytics.financial.model.option.definition.YieldCurveWithBlackSwaptionBundle: com.opengamma.analytics.financial.model.option.parameters.BlackFlatSwaptionParameters getBlackParameters()>();

        $d2 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionPhysicalFixedCompoundedONCompounded: double getTimeToExpiry()>();

        d1 = virtualinvoke $r6.<com.opengamma.analytics.financial.model.option.parameters.BlackFlatSwaptionParameters: double getVolatility(double,double)>($d2, d0);

        return d1;
    }

    public com.opengamma.analytics.financial.interestrate.InterestRateCurveSensitivity presentValueCurveSensitivity(com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionPhysicalFixedCompoundedONCompounded, com.opengamma.analytics.financial.model.option.definition.YieldCurveWithBlackSwaptionBundle)
    {
        com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionPhysicalFixedCompoundedONCompoundedBlackMethod r0;
        com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionPhysicalFixedCompoundedONCompounded r1;
        com.opengamma.analytics.financial.model.option.definition.YieldCurveWithBlackSwaptionBundle r2;
        com.opengamma.analytics.financial.interestrate.swap.derivative.Swap r3;
        com.opengamma.analytics.financial.interestrate.payments.derivative.CouponFixedAccruedCompounding r4, $r20;
        double d0, d1, d2, d3, d4, d5, d8, d9, d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21, $d22, $d23, $d24, $d25, $d26, $d27, $d28, $d29;
        double[] r8;
        com.opengamma.analytics.financial.interestrate.InterestRateCurveSensitivity r9, $r32, $r33, r35, r36;
        com.opengamma.analytics.financial.interestrate.annuity.derivative.Annuity $r14, $r18;
        com.opengamma.analytics.financial.interestrate.payments.derivative.Payment $r15, $r19;
        java.lang.String $r16, $r30;
        com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve $r17;
        com.opengamma.analytics.financial.interestrate.swap.method.SwapFixedCompoundingONCompoundingDiscountingMethod $r21, $r26;
        com.opengamma.analytics.financial.model.option.pricing.analytic.formula.EuropeanVanillaOption $r22;
        boolean $z0, $z1;
        com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackPriceFunction $r23;
        com.opengamma.analytics.financial.model.option.parameters.BlackFlatSwaptionParameters $r24;
        com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackFunctionData $r25;
        java.util.ArrayList $r27;
        com.opengamma.util.tuple.DoublesPair $r28;
        java.util.HashMap $r29;

        r0 := @this: com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionPhysicalFixedCompoundedONCompoundedBlackMethod;

        r1 := @parameter0: com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionPhysicalFixedCompoundedONCompounded;

        r2 := @parameter1: com.opengamma.analytics.financial.model.option.definition.YieldCurveWithBlackSwaptionBundle;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "Swaption");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, "Curves with Black volatility");

        r3 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionPhysicalFixedCompoundedONCompounded: com.opengamma.analytics.financial.interestrate.swap.derivative.Swap getUnderlyingSwap()>();

        $r14 = virtualinvoke r3.<com.opengamma.analytics.financial.interestrate.swap.derivative.Swap: com.opengamma.analytics.financial.interestrate.annuity.derivative.Annuity getFirstLeg()>();

        $r15 = virtualinvoke $r14.<com.opengamma.analytics.financial.interestrate.annuity.derivative.Annuity: com.opengamma.analytics.financial.interestrate.payments.derivative.Payment getNthPayment(int)>(0);

        r4 = (com.opengamma.analytics.financial.interestrate.payments.derivative.CouponFixedAccruedCompounding) $r15;

        $r16 = virtualinvoke r4.<com.opengamma.analytics.financial.interestrate.payments.derivative.CouponFixedAccruedCompounding: java.lang.String getFundingCurveName()>();

        $r17 = virtualinvoke r2.<com.opengamma.analytics.financial.model.option.definition.YieldCurveWithBlackSwaptionBundle: com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve getCurve(java.lang.String)>($r16);

        $d11 = virtualinvoke r4.<com.opengamma.analytics.financial.interestrate.payments.derivative.CouponFixedAccruedCompounding: double getPaymentTime()>();

        $d12 = virtualinvoke $r17.<com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve: double getDiscountFactor(double)>($d11);

        $d13 = virtualinvoke r4.<com.opengamma.analytics.financial.interestrate.payments.derivative.CouponFixedAccruedCompounding: double getNotional()>();

        $d14 = $d12 * $d13;

        d0 = staticinvoke <java.lang.Math: double abs(double)>($d14);

        $r18 = virtualinvoke r3.<com.opengamma.analytics.financial.interestrate.swap.derivative.Swap: com.opengamma.analytics.financial.interestrate.annuity.derivative.Annuity getFirstLeg()>();

        $r19 = virtualinvoke $r18.<com.opengamma.analytics.financial.interestrate.annuity.derivative.Annuity: com.opengamma.analytics.financial.interestrate.payments.derivative.Payment getNthPayment(int)>(0);

        $r20 = (com.opengamma.analytics.financial.interestrate.payments.derivative.CouponFixedAccruedCompounding) $r19;

        d1 = virtualinvoke $r20.<com.opengamma.analytics.financial.interestrate.payments.derivative.CouponFixedAccruedCompounding: double getPaymentYearFraction()>();

        $r21 = <com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionPhysicalFixedCompoundedONCompoundedBlackMethod: com.opengamma.analytics.financial.interestrate.swap.method.SwapFixedCompoundingONCompoundingDiscountingMethod METHOD_SWAP>;

        d2 = virtualinvoke $r21.<com.opengamma.analytics.financial.interestrate.swap.method.SwapFixedCompoundingONCompoundingDiscountingMethod: double forwardModified(com.opengamma.analytics.financial.interestrate.swap.derivative.Swap,com.opengamma.analytics.financial.interestrate.YieldCurveBundle)>(r3, r2);

        $d15 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionPhysicalFixedCompoundedONCompounded: double getStrike()>();

        $d16 = 1.0 + $d15;

        $d17 = staticinvoke <java.lang.Math: double pow(double,double)>($d16, d1);

        d3 = $d17 - 1.0;

        d4 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionPhysicalFixedCompoundedONCompounded: double getMaturityTime()>();

        $r22 = new com.opengamma.analytics.financial.model.option.pricing.analytic.formula.EuropeanVanillaOption;

        $d18 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionPhysicalFixedCompoundedONCompounded: double getTimeToExpiry()>();

        $z0 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionPhysicalFixedCompoundedONCompounded: boolean isCall()>();

        specialinvoke $r22.<com.opengamma.analytics.financial.model.option.pricing.analytic.formula.EuropeanVanillaOption: void <init>(double,double,boolean)>(d3, $d18, $z0);

        $r23 = new com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackPriceFunction;

        specialinvoke $r23.<com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackPriceFunction: void <init>()>();

        $r24 = virtualinvoke r2.<com.opengamma.analytics.financial.model.option.definition.YieldCurveWithBlackSwaptionBundle: com.opengamma.analytics.financial.model.option.parameters.BlackFlatSwaptionParameters getBlackParameters()>();

        $d19 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionPhysicalFixedCompoundedONCompounded: double getTimeToExpiry()>();

        d5 = virtualinvoke $r24.<com.opengamma.analytics.financial.model.option.parameters.BlackFlatSwaptionParameters: double getVolatility(double,double)>($d19, d4);

        $r25 = new com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackFunctionData;

        specialinvoke $r25.<com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackFunctionData: void <init>(double,double,double)>(d2, 1.0, d5);

        r8 = virtualinvoke $r23.<com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackPriceFunction: double[] getPriceAdjoint(com.opengamma.analytics.financial.model.option.pricing.analytic.formula.EuropeanVanillaOption,com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackFunctionData)>($r22, $r25);

        $z1 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionPhysicalFixedCompoundedONCompounded: boolean isLong()>();

        if $z1 == 0 goto label1;

        $d29 = 1.0;

        goto label2;

     label1:
        $d29 = -1.0;

     label2:
        $d20 = r8[0];

        $d21 = $d20 * $d29;

        d8 = $d21 * 1.0;

        $d22 = r8[1];

        $d23 = d0 * $d22;

        $d24 = $d23 * $d29;

        d9 = $d24 * 1.0;

        $r26 = <com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionPhysicalFixedCompoundedONCompoundedBlackMethod: com.opengamma.analytics.financial.interestrate.swap.method.SwapFixedCompoundingONCompoundingDiscountingMethod METHOD_SWAP>;

        r9 = virtualinvoke $r26.<com.opengamma.analytics.financial.interestrate.swap.method.SwapFixedCompoundingONCompoundingDiscountingMethod: com.opengamma.analytics.financial.interestrate.InterestRateCurveSensitivity forwardModifiedCurveSensitivity(com.opengamma.analytics.financial.interestrate.swap.derivative.Swap,com.opengamma.analytics.financial.interestrate.YieldCurveBundle)>(r3, r2);

        $d25 = virtualinvoke r4.<com.opengamma.analytics.financial.interestrate.payments.derivative.CouponFixedAccruedCompounding: double getPaymentTime()>();

        $d26 = neg $d25;

        d10 = $d26 * d0;

        $r27 = new java.util.ArrayList;

        specialinvoke $r27.<java.util.ArrayList: void <init>()>();

        $d27 = virtualinvoke r4.<com.opengamma.analytics.financial.interestrate.payments.derivative.CouponFixedAccruedCompounding: double getPaymentTime()>();

        $d28 = d10 * d8;

        $r28 = staticinvoke <com.opengamma.util.tuple.DoublesPair: com.opengamma.util.tuple.DoublesPair of(double,double)>($d27, $d28);

        interfaceinvoke $r27.<java.util.List: boolean add(java.lang.Object)>($r28);

        $r29 = new java.util.HashMap;

        specialinvoke $r29.<java.util.HashMap: void <init>()>();

        $r30 = virtualinvoke r4.<com.opengamma.analytics.financial.interestrate.payments.derivative.CouponFixedAccruedCompounding: java.lang.String getFundingCurveName()>();

        interfaceinvoke $r29.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r30, $r27);

        $r32 = new com.opengamma.analytics.financial.interestrate.InterestRateCurveSensitivity;

        specialinvoke $r32.<com.opengamma.analytics.financial.interestrate.InterestRateCurveSensitivity: void <init>(java.util.Map)>($r29);

        $r33 = virtualinvoke r9.<com.opengamma.analytics.financial.interestrate.InterestRateCurveSensitivity: com.opengamma.analytics.financial.interestrate.InterestRateCurveSensitivity multipliedBy(double)>(d9);

        r35 = virtualinvoke $r32.<com.opengamma.analytics.financial.interestrate.InterestRateCurveSensitivity: com.opengamma.analytics.financial.interestrate.InterestRateCurveSensitivity plus(com.opengamma.analytics.financial.interestrate.InterestRateCurveSensitivity)>($r33);

        r36 = virtualinvoke r35.<com.opengamma.analytics.financial.interestrate.InterestRateCurveSensitivity: com.opengamma.analytics.financial.interestrate.InterestRateCurveSensitivity cleaned()>();

        return r36;
    }

    public com.opengamma.analytics.financial.interestrate.sensitivity.PresentValueSwaptionSurfaceSensitivity presentValueBlackSensitivity(com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionPhysicalFixedCompoundedONCompounded, com.opengamma.analytics.financial.model.option.definition.YieldCurveWithBlackSwaptionBundle)
    {
        com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionPhysicalFixedCompoundedONCompoundedBlackMethod r0;
        com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionPhysicalFixedCompoundedONCompounded r1;
        com.opengamma.analytics.financial.model.option.definition.YieldCurveWithBlackSwaptionBundle r2;
        com.opengamma.analytics.financial.interestrate.swap.derivative.Swap r3;
        com.opengamma.analytics.financial.interestrate.payments.derivative.CouponFixedAccruedCompounding r4, $r19;
        double d0, d1, d2, d3, d4, d5, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20;
        double[] r8;
        com.opengamma.util.tuple.DoublesPair r9;
        com.opengamma.analytics.financial.interestrate.annuity.derivative.Annuity $r13, $r17;
        com.opengamma.analytics.financial.interestrate.payments.derivative.Payment $r14, $r18;
        java.lang.String $r15;
        com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve $r16;
        com.opengamma.analytics.financial.interestrate.swap.method.SwapFixedCompoundingONCompoundingDiscountingMethod $r20;
        com.opengamma.analytics.financial.model.option.pricing.analytic.formula.EuropeanVanillaOption $r21;
        boolean $z0, $z1;
        com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackPriceFunction $r22;
        com.opengamma.analytics.financial.model.option.parameters.BlackFlatSwaptionParameters $r23, $r29;
        com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackFunctionData $r24;
        java.util.HashMap $r25;
        java.lang.Double $r26;
        com.opengamma.analytics.financial.interestrate.sensitivity.PresentValueSwaptionSurfaceSensitivity $r28;
        com.opengamma.analytics.financial.instrument.index.GeneratorInstrument $r30;

        r0 := @this: com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionPhysicalFixedCompoundedONCompoundedBlackMethod;

        r1 := @parameter0: com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionPhysicalFixedCompoundedONCompounded;

        r2 := @parameter1: com.opengamma.analytics.financial.model.option.definition.YieldCurveWithBlackSwaptionBundle;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "Swaption");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, "Curves with Black volatility");

        r3 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionPhysicalFixedCompoundedONCompounded: com.opengamma.analytics.financial.interestrate.swap.derivative.Swap getUnderlyingSwap()>();

        $r13 = virtualinvoke r3.<com.opengamma.analytics.financial.interestrate.swap.derivative.Swap: com.opengamma.analytics.financial.interestrate.annuity.derivative.Annuity getFirstLeg()>();

        $r14 = virtualinvoke $r13.<com.opengamma.analytics.financial.interestrate.annuity.derivative.Annuity: com.opengamma.analytics.financial.interestrate.payments.derivative.Payment getNthPayment(int)>(0);

        r4 = (com.opengamma.analytics.financial.interestrate.payments.derivative.CouponFixedAccruedCompounding) $r14;

        $r15 = virtualinvoke r4.<com.opengamma.analytics.financial.interestrate.payments.derivative.CouponFixedAccruedCompounding: java.lang.String getFundingCurveName()>();

        $r16 = virtualinvoke r2.<com.opengamma.analytics.financial.model.option.definition.YieldCurveWithBlackSwaptionBundle: com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve getCurve(java.lang.String)>($r15);

        $d7 = virtualinvoke r4.<com.opengamma.analytics.financial.interestrate.payments.derivative.CouponFixedAccruedCompounding: double getPaymentTime()>();

        $d8 = virtualinvoke $r16.<com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve: double getDiscountFactor(double)>($d7);

        $d9 = virtualinvoke r4.<com.opengamma.analytics.financial.interestrate.payments.derivative.CouponFixedAccruedCompounding: double getNotional()>();

        $d10 = $d8 * $d9;

        d0 = staticinvoke <java.lang.Math: double abs(double)>($d10);

        $r17 = virtualinvoke r3.<com.opengamma.analytics.financial.interestrate.swap.derivative.Swap: com.opengamma.analytics.financial.interestrate.annuity.derivative.Annuity getFirstLeg()>();

        $r18 = virtualinvoke $r17.<com.opengamma.analytics.financial.interestrate.annuity.derivative.Annuity: com.opengamma.analytics.financial.interestrate.payments.derivative.Payment getNthPayment(int)>(0);

        $r19 = (com.opengamma.analytics.financial.interestrate.payments.derivative.CouponFixedAccruedCompounding) $r18;

        d1 = virtualinvoke $r19.<com.opengamma.analytics.financial.interestrate.payments.derivative.CouponFixedAccruedCompounding: double getPaymentYearFraction()>();

        $r20 = <com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionPhysicalFixedCompoundedONCompoundedBlackMethod: com.opengamma.analytics.financial.interestrate.swap.method.SwapFixedCompoundingONCompoundingDiscountingMethod METHOD_SWAP>;

        d2 = virtualinvoke $r20.<com.opengamma.analytics.financial.interestrate.swap.method.SwapFixedCompoundingONCompoundingDiscountingMethod: double forwardModified(com.opengamma.analytics.financial.interestrate.swap.derivative.Swap,com.opengamma.analytics.financial.interestrate.YieldCurveBundle)>(r3, r2);

        $d11 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionPhysicalFixedCompoundedONCompounded: double getStrike()>();

        $d12 = 1.0 + $d11;

        $d13 = staticinvoke <java.lang.Math: double pow(double,double)>($d12, d1);

        d3 = $d13 - 1.0;

        d4 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionPhysicalFixedCompoundedONCompounded: double getMaturityTime()>();

        $r21 = new com.opengamma.analytics.financial.model.option.pricing.analytic.formula.EuropeanVanillaOption;

        $d14 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionPhysicalFixedCompoundedONCompounded: double getTimeToExpiry()>();

        $z0 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionPhysicalFixedCompoundedONCompounded: boolean isCall()>();

        specialinvoke $r21.<com.opengamma.analytics.financial.model.option.pricing.analytic.formula.EuropeanVanillaOption: void <init>(double,double,boolean)>(d3, $d14, $z0);

        $r22 = new com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackPriceFunction;

        specialinvoke $r22.<com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackPriceFunction: void <init>()>();

        $r23 = virtualinvoke r2.<com.opengamma.analytics.financial.model.option.definition.YieldCurveWithBlackSwaptionBundle: com.opengamma.analytics.financial.model.option.parameters.BlackFlatSwaptionParameters getBlackParameters()>();

        $d15 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionPhysicalFixedCompoundedONCompounded: double getTimeToExpiry()>();

        d5 = virtualinvoke $r23.<com.opengamma.analytics.financial.model.option.parameters.BlackFlatSwaptionParameters: double getVolatility(double,double)>($d15, d4);

        $r24 = new com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackFunctionData;

        specialinvoke $r24.<com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackFunctionData: void <init>(double,double,double)>(d2, 1.0, d5);

        r8 = virtualinvoke $r22.<com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackPriceFunction: double[] getPriceAdjoint(com.opengamma.analytics.financial.model.option.pricing.analytic.formula.EuropeanVanillaOption,com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackFunctionData)>($r21, $r24);

        $z1 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionPhysicalFixedCompoundedONCompounded: boolean isLong()>();

        if $z1 == 0 goto label1;

        $d20 = 1.0;

        goto label2;

     label1:
        $d20 = -1.0;

     label2:
        $d16 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionPhysicalFixedCompoundedONCompounded: double getTimeToExpiry()>();

        r9 = staticinvoke <com.opengamma.util.tuple.DoublesPair: com.opengamma.util.tuple.DoublesPair of(double,double)>($d16, d4);

        $r25 = new java.util.HashMap;

        specialinvoke $r25.<java.util.HashMap: void <init>()>();

        $d17 = r8[2];

        $d18 = $d17 * d0;

        $d19 = $d18 * $d20;

        $r26 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d19);

        interfaceinvoke $r25.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r9, $r26);

        $r28 = new com.opengamma.analytics.financial.interestrate.sensitivity.PresentValueSwaptionSurfaceSensitivity;

        $r29 = virtualinvoke r2.<com.opengamma.analytics.financial.model.option.definition.YieldCurveWithBlackSwaptionBundle: com.opengamma.analytics.financial.model.option.parameters.BlackFlatSwaptionParameters getBlackParameters()>();

        $r30 = virtualinvoke $r29.<com.opengamma.analytics.financial.model.option.parameters.BlackFlatSwaptionParameters: com.opengamma.analytics.financial.instrument.index.GeneratorInstrument getGeneratorSwap()>();

        specialinvoke $r28.<com.opengamma.analytics.financial.interestrate.sensitivity.PresentValueSwaptionSurfaceSensitivity: void <init>(java.util.Map,com.opengamma.analytics.financial.instrument.index.GeneratorInstrument)>($r25, $r30);

        return $r28;
    }

    public com.opengamma.util.money.CurrencyAmount delta(com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionPhysicalFixedCompoundedONCompounded, com.opengamma.analytics.financial.model.option.definition.YieldCurveWithBlackSwaptionBundle)
    {
        com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionPhysicalFixedCompoundedONCompoundedBlackMethod r0;
        com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionPhysicalFixedCompoundedONCompounded r1;
        com.opengamma.analytics.financial.model.option.definition.YieldCurveWithBlackSwaptionBundle r2;
        com.opengamma.analytics.financial.interestrate.swap.derivative.Swap r3;
        com.opengamma.analytics.financial.interestrate.payments.derivative.CouponFixedAccruedCompounding r4;
        double d0, d1, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11;
        com.opengamma.analytics.financial.interestrate.annuity.derivative.Annuity $r7;
        com.opengamma.analytics.financial.interestrate.payments.derivative.Payment $r8;
        java.lang.String $r9;
        com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve $r10;
        com.opengamma.analytics.financial.interestrate.swap.method.SwapFixedCompoundingONCompoundingDiscountingMethod $r11;
        boolean $z0;
        com.opengamma.util.money.Currency $r12;
        com.opengamma.util.money.CurrencyAmount $r13;

        r0 := @this: com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionPhysicalFixedCompoundedONCompoundedBlackMethod;

        r1 := @parameter0: com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionPhysicalFixedCompoundedONCompounded;

        r2 := @parameter1: com.opengamma.analytics.financial.model.option.definition.YieldCurveWithBlackSwaptionBundle;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "Swaption");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, "Curves with Black volatility");

        r3 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionPhysicalFixedCompoundedONCompounded: com.opengamma.analytics.financial.interestrate.swap.derivative.Swap getUnderlyingSwap()>();

        $r7 = virtualinvoke r3.<com.opengamma.analytics.financial.interestrate.swap.derivative.Swap: com.opengamma.analytics.financial.interestrate.annuity.derivative.Annuity getFirstLeg()>();

        $r8 = virtualinvoke $r7.<com.opengamma.analytics.financial.interestrate.annuity.derivative.Annuity: com.opengamma.analytics.financial.interestrate.payments.derivative.Payment getNthPayment(int)>(0);

        r4 = (com.opengamma.analytics.financial.interestrate.payments.derivative.CouponFixedAccruedCompounding) $r8;

        $r9 = virtualinvoke r4.<com.opengamma.analytics.financial.interestrate.payments.derivative.CouponFixedAccruedCompounding: java.lang.String getFundingCurveName()>();

        $r10 = virtualinvoke r2.<com.opengamma.analytics.financial.model.option.definition.YieldCurveWithBlackSwaptionBundle: com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve getCurve(java.lang.String)>($r9);

        $d3 = virtualinvoke r4.<com.opengamma.analytics.financial.interestrate.payments.derivative.CouponFixedAccruedCompounding: double getPaymentTime()>();

        $d4 = virtualinvoke $r10.<com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve: double getDiscountFactor(double)>($d3);

        $d5 = virtualinvoke r4.<com.opengamma.analytics.financial.interestrate.payments.derivative.CouponFixedAccruedCompounding: double getNotional()>();

        $d6 = $d4 * $d5;

        d0 = staticinvoke <java.lang.Math: double abs(double)>($d6);

        $r11 = <com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionPhysicalFixedCompoundedONCompoundedBlackMethod: com.opengamma.analytics.financial.interestrate.swap.method.SwapFixedCompoundingONCompoundingDiscountingMethod METHOD_SWAP>;

        d1 = virtualinvoke $r11.<com.opengamma.analytics.financial.interestrate.swap.method.SwapFixedCompoundingONCompoundingDiscountingMethod: double forwardModified(com.opengamma.analytics.financial.interestrate.swap.derivative.Swap,com.opengamma.analytics.financial.interestrate.YieldCurveBundle)>(r3, r2);

        $z0 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionPhysicalFixedCompoundedONCompounded: boolean isLong()>();

        if $z0 == 0 goto label1;

        $d11 = 1.0;

        goto label2;

     label1:
        $d11 = -1.0;

     label2:
        $r12 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionPhysicalFixedCompoundedONCompounded: com.opengamma.util.money.Currency getCurrency()>();

        $d7 = virtualinvoke r0.<com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionPhysicalFixedCompoundedONCompoundedBlackMethod: double forwardDeltaTheoretical(com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionPhysicalFixedCompoundedONCompounded,com.opengamma.analytics.financial.model.option.definition.YieldCurveWithBlackSwaptionBundle)>(r1, r2);

        $d8 = $d7 * d1;

        $d9 = $d8 * d0;

        $d10 = $d9 * $d11;

        $r13 = staticinvoke <com.opengamma.util.money.CurrencyAmount: com.opengamma.util.money.CurrencyAmount of(com.opengamma.util.money.Currency,double)>($r12, $d10);

        return $r13;
    }

    public com.opengamma.util.money.CurrencyAmount gamma(com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionPhysicalFixedCompoundedONCompounded, com.opengamma.analytics.financial.model.option.definition.YieldCurveWithBlackSwaptionBundle)
    {
        com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionPhysicalFixedCompoundedONCompoundedBlackMethod r0;
        com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionPhysicalFixedCompoundedONCompounded r1;
        com.opengamma.analytics.financial.model.option.definition.YieldCurveWithBlackSwaptionBundle r2;
        double d0, d1, d2, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12;
        com.opengamma.analytics.financial.interestrate.swap.derivative.Swap r3;
        com.opengamma.analytics.financial.interestrate.payments.derivative.CouponFixedAccruedCompounding r4;
        com.opengamma.analytics.financial.interestrate.annuity.derivative.Annuity $r6;
        com.opengamma.analytics.financial.interestrate.payments.derivative.Payment $r7;
        java.lang.String $r8;
        com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve $r9;
        com.opengamma.analytics.financial.interestrate.swap.method.SwapFixedCompoundingONCompoundingDiscountingMethod $r10;
        boolean $z0;
        com.opengamma.util.money.Currency $r11;
        com.opengamma.util.money.CurrencyAmount $r12;

        r0 := @this: com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionPhysicalFixedCompoundedONCompoundedBlackMethod;

        r1 := @parameter0: com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionPhysicalFixedCompoundedONCompounded;

        r2 := @parameter1: com.opengamma.analytics.financial.model.option.definition.YieldCurveWithBlackSwaptionBundle;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, "Curves");

        d0 = virtualinvoke r0.<com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionPhysicalFixedCompoundedONCompoundedBlackMethod: double forwardGammaTheoretical(com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionPhysicalFixedCompoundedONCompounded,com.opengamma.analytics.financial.model.option.definition.YieldCurveWithBlackSwaptionBundle)>(r1, r2);

        r3 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionPhysicalFixedCompoundedONCompounded: com.opengamma.analytics.financial.interestrate.swap.derivative.Swap getUnderlyingSwap()>();

        $r6 = virtualinvoke r3.<com.opengamma.analytics.financial.interestrate.swap.derivative.Swap: com.opengamma.analytics.financial.interestrate.annuity.derivative.Annuity getFirstLeg()>();

        $r7 = virtualinvoke $r6.<com.opengamma.analytics.financial.interestrate.annuity.derivative.Annuity: com.opengamma.analytics.financial.interestrate.payments.derivative.Payment getNthPayment(int)>(0);

        r4 = (com.opengamma.analytics.financial.interestrate.payments.derivative.CouponFixedAccruedCompounding) $r7;

        $r8 = virtualinvoke r4.<com.opengamma.analytics.financial.interestrate.payments.derivative.CouponFixedAccruedCompounding: java.lang.String getFundingCurveName()>();

        $r9 = virtualinvoke r2.<com.opengamma.analytics.financial.model.option.definition.YieldCurveWithBlackSwaptionBundle: com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve getCurve(java.lang.String)>($r8);

        $d4 = virtualinvoke r4.<com.opengamma.analytics.financial.interestrate.payments.derivative.CouponFixedAccruedCompounding: double getPaymentTime()>();

        $d5 = virtualinvoke $r9.<com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve: double getDiscountFactor(double)>($d4);

        $d6 = virtualinvoke r4.<com.opengamma.analytics.financial.interestrate.payments.derivative.CouponFixedAccruedCompounding: double getNotional()>();

        $d7 = $d5 * $d6;

        d1 = staticinvoke <java.lang.Math: double abs(double)>($d7);

        $r10 = <com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionPhysicalFixedCompoundedONCompoundedBlackMethod: com.opengamma.analytics.financial.interestrate.swap.method.SwapFixedCompoundingONCompoundingDiscountingMethod METHOD_SWAP>;

        d2 = virtualinvoke $r10.<com.opengamma.analytics.financial.interestrate.swap.method.SwapFixedCompoundingONCompoundingDiscountingMethod: double forwardModified(com.opengamma.analytics.financial.interestrate.swap.derivative.Swap,com.opengamma.analytics.financial.interestrate.YieldCurveBundle)>(r3, r2);

        $z0 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionPhysicalFixedCompoundedONCompounded: boolean isLong()>();

        if $z0 == 0 goto label1;

        $d12 = 1.0;

        goto label2;

     label1:
        $d12 = -1.0;

     label2:
        $r11 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionPhysicalFixedCompoundedONCompounded: com.opengamma.util.money.Currency getCurrency()>();

        $d8 = d0 * d2;

        $d9 = $d8 * d2;

        $d10 = $d9 * d1;

        $d11 = $d10 * $d12;

        $r12 = staticinvoke <com.opengamma.util.money.CurrencyAmount: com.opengamma.util.money.CurrencyAmount of(com.opengamma.util.money.Currency,double)>($r11, $d11);

        return $r12;
    }

    public com.opengamma.util.money.CurrencyAmount theta(com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionPhysicalFixedCompoundedONCompounded, com.opengamma.analytics.financial.model.option.definition.YieldCurveWithBlackSwaptionBundle)
    {
        com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionPhysicalFixedCompoundedONCompoundedBlackMethod r0;
        com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionPhysicalFixedCompoundedONCompounded r1;
        com.opengamma.analytics.financial.model.option.definition.YieldCurveWithBlackSwaptionBundle r2;
        com.opengamma.analytics.financial.interestrate.swap.derivative.Swap r3;
        com.opengamma.analytics.financial.interestrate.payments.derivative.CouponFixedAccruedCompounding r4;
        double d0, $d2, $d3, $d4, $d5, $d6, $d7, $d8;
        com.opengamma.analytics.financial.interestrate.annuity.derivative.Annuity $r7;
        com.opengamma.analytics.financial.interestrate.payments.derivative.Payment $r8;
        java.lang.String $r9;
        com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve $r10;
        boolean $z0;
        com.opengamma.util.money.Currency $r11;
        com.opengamma.util.money.CurrencyAmount $r12;

        r0 := @this: com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionPhysicalFixedCompoundedONCompoundedBlackMethod;

        r1 := @parameter0: com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionPhysicalFixedCompoundedONCompounded;

        r2 := @parameter1: com.opengamma.analytics.financial.model.option.definition.YieldCurveWithBlackSwaptionBundle;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "Swaption");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, "Curves with Black volatility");

        r3 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionPhysicalFixedCompoundedONCompounded: com.opengamma.analytics.financial.interestrate.swap.derivative.Swap getUnderlyingSwap()>();

        $r7 = virtualinvoke r3.<com.opengamma.analytics.financial.interestrate.swap.derivative.Swap: com.opengamma.analytics.financial.interestrate.annuity.derivative.Annuity getFirstLeg()>();

        $r8 = virtualinvoke $r7.<com.opengamma.analytics.financial.interestrate.annuity.derivative.Annuity: com.opengamma.analytics.financial.interestrate.payments.derivative.Payment getNthPayment(int)>(0);

        r4 = (com.opengamma.analytics.financial.interestrate.payments.derivative.CouponFixedAccruedCompounding) $r8;

        $r9 = virtualinvoke r4.<com.opengamma.analytics.financial.interestrate.payments.derivative.CouponFixedAccruedCompounding: java.lang.String getFundingCurveName()>();

        $r10 = virtualinvoke r2.<com.opengamma.analytics.financial.model.option.definition.YieldCurveWithBlackSwaptionBundle: com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve getCurve(java.lang.String)>($r9);

        $d2 = virtualinvoke r4.<com.opengamma.analytics.financial.interestrate.payments.derivative.CouponFixedAccruedCompounding: double getPaymentTime()>();

        $d3 = virtualinvoke $r10.<com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve: double getDiscountFactor(double)>($d2);

        $d4 = virtualinvoke r4.<com.opengamma.analytics.financial.interestrate.payments.derivative.CouponFixedAccruedCompounding: double getNotional()>();

        d0 = $d3 * $d4;

        $z0 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionPhysicalFixedCompoundedONCompounded: boolean isLong()>();

        if $z0 == 0 goto label1;

        $d8 = 1.0;

        goto label2;

     label1:
        $d8 = -1.0;

     label2:
        $r11 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionPhysicalFixedCompoundedONCompounded: com.opengamma.util.money.Currency getCurrency()>();

        $d5 = virtualinvoke r0.<com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionPhysicalFixedCompoundedONCompoundedBlackMethod: double forwardThetaTheoretical(com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionPhysicalFixedCompoundedONCompounded,com.opengamma.analytics.financial.model.option.definition.YieldCurveWithBlackSwaptionBundle)>(r1, r2);

        $d6 = $d5 * d0;

        $d7 = $d6 * $d8;

        $r12 = staticinvoke <com.opengamma.util.money.CurrencyAmount: com.opengamma.util.money.CurrencyAmount of(com.opengamma.util.money.Currency,double)>($r11, $d7);

        return $r12;
    }

    public double forwardDeltaTheoretical(com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionPhysicalFixedCompoundedONCompounded, com.opengamma.analytics.financial.model.option.definition.YieldCurveWithBlackSwaptionBundle)
    {
        com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionPhysicalFixedCompoundedONCompoundedBlackMethod r0;
        com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionPhysicalFixedCompoundedONCompounded r1;
        com.opengamma.analytics.financial.model.option.definition.YieldCurveWithBlackSwaptionBundle r2;
        com.opengamma.analytics.financial.interestrate.swap.derivative.Swap r3;
        double d0, d1, d2, d3, d4, d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12;
        com.opengamma.analytics.financial.interestrate.annuity.derivative.Annuity $r6;
        com.opengamma.analytics.financial.interestrate.payments.derivative.Payment $r7;
        com.opengamma.analytics.financial.interestrate.payments.derivative.CouponFixedAccruedCompounding $r8;
        com.opengamma.analytics.financial.interestrate.swap.method.SwapFixedCompoundingONCompoundingDiscountingMethod $r9;
        com.opengamma.analytics.financial.model.option.parameters.BlackFlatSwaptionParameters $r10;
        boolean $z0, $z1;

        r0 := @this: com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionPhysicalFixedCompoundedONCompoundedBlackMethod;

        r1 := @parameter0: com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionPhysicalFixedCompoundedONCompounded;

        r2 := @parameter1: com.opengamma.analytics.financial.model.option.definition.YieldCurveWithBlackSwaptionBundle;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "Swaption");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, "Curves with Black volatility");

        r3 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionPhysicalFixedCompoundedONCompounded: com.opengamma.analytics.financial.interestrate.swap.derivative.Swap getUnderlyingSwap()>();

        $r6 = virtualinvoke r3.<com.opengamma.analytics.financial.interestrate.swap.derivative.Swap: com.opengamma.analytics.financial.interestrate.annuity.derivative.Annuity getFirstLeg()>();

        $r7 = virtualinvoke $r6.<com.opengamma.analytics.financial.interestrate.annuity.derivative.Annuity: com.opengamma.analytics.financial.interestrate.payments.derivative.Payment getNthPayment(int)>(0);

        $r8 = (com.opengamma.analytics.financial.interestrate.payments.derivative.CouponFixedAccruedCompounding) $r7;

        d0 = virtualinvoke $r8.<com.opengamma.analytics.financial.interestrate.payments.derivative.CouponFixedAccruedCompounding: double getPaymentYearFraction()>();

        $r9 = <com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionPhysicalFixedCompoundedONCompoundedBlackMethod: com.opengamma.analytics.financial.interestrate.swap.method.SwapFixedCompoundingONCompoundingDiscountingMethod METHOD_SWAP>;

        d1 = virtualinvoke $r9.<com.opengamma.analytics.financial.interestrate.swap.method.SwapFixedCompoundingONCompoundingDiscountingMethod: double forwardModified(com.opengamma.analytics.financial.interestrate.swap.derivative.Swap,com.opengamma.analytics.financial.interestrate.YieldCurveBundle)>(r3, r2);

        $d6 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionPhysicalFixedCompoundedONCompounded: double getStrike()>();

        $d7 = 1.0 + $d6;

        $d8 = staticinvoke <java.lang.Math: double pow(double,double)>($d7, d0);

        d2 = $d8 - 1.0;

        d3 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionPhysicalFixedCompoundedONCompounded: double getMaturityTime()>();

        $r10 = virtualinvoke r2.<com.opengamma.analytics.financial.model.option.definition.YieldCurveWithBlackSwaptionBundle: com.opengamma.analytics.financial.model.option.parameters.BlackFlatSwaptionParameters getBlackParameters()>();

        $d9 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionPhysicalFixedCompoundedONCompounded: double getTimeToExpiry()>();

        d4 = virtualinvoke $r10.<com.opengamma.analytics.financial.model.option.parameters.BlackFlatSwaptionParameters: double getVolatility(double,double)>($d9, d3);

        d5 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionPhysicalFixedCompoundedONCompounded: double getTimeToExpiry()>();

        $z0 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionPhysicalFixedCompoundedONCompounded: boolean isCall()>();

        $d10 = staticinvoke <com.opengamma.analytics.financial.model.volatility.BlackFormulaRepository: double delta(double,double,double,double,boolean)>(d1, d2, d5, d4, $z0);

        $z1 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionPhysicalFixedCompoundedONCompounded: boolean isLong()>();

        if $z1 == 0 goto label1;

        $d12 = 1.0;

        goto label2;

     label1:
        $d12 = -1.0;

     label2:
        $d11 = $d10 * $d12;

        return $d11;
    }

    public double forwardVegaTheoretical(com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionPhysicalFixedCompoundedONCompounded, com.opengamma.analytics.financial.model.option.definition.YieldCurveWithBlackSwaptionBundle)
    {
        com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionPhysicalFixedCompoundedONCompoundedBlackMethod r0;
        com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionPhysicalFixedCompoundedONCompounded r1;
        com.opengamma.analytics.financial.model.option.definition.YieldCurveWithBlackSwaptionBundle r2;
        com.opengamma.analytics.financial.interestrate.swap.derivative.Swap r3;
        double d0, d1, d2, d3, d4, d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12;
        com.opengamma.analytics.financial.interestrate.swap.method.SwapFixedCompoundingONCompoundingDiscountingMethod $r6;
        com.opengamma.analytics.financial.interestrate.annuity.derivative.Annuity $r7;
        com.opengamma.analytics.financial.interestrate.payments.derivative.Payment $r8;
        com.opengamma.analytics.financial.interestrate.payments.derivative.CouponFixedAccruedCompounding $r9;
        com.opengamma.analytics.financial.model.option.parameters.BlackFlatSwaptionParameters $r10;
        boolean $z0;

        r0 := @this: com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionPhysicalFixedCompoundedONCompoundedBlackMethod;

        r1 := @parameter0: com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionPhysicalFixedCompoundedONCompounded;

        r2 := @parameter1: com.opengamma.analytics.financial.model.option.definition.YieldCurveWithBlackSwaptionBundle;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "Swaption");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, "Curves with Black volatility");

        r3 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionPhysicalFixedCompoundedONCompounded: com.opengamma.analytics.financial.interestrate.swap.derivative.Swap getUnderlyingSwap()>();

        $r6 = <com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionPhysicalFixedCompoundedONCompoundedBlackMethod: com.opengamma.analytics.financial.interestrate.swap.method.SwapFixedCompoundingONCompoundingDiscountingMethod METHOD_SWAP>;

        d0 = virtualinvoke $r6.<com.opengamma.analytics.financial.interestrate.swap.method.SwapFixedCompoundingONCompoundingDiscountingMethod: double forwardModified(com.opengamma.analytics.financial.interestrate.swap.derivative.Swap,com.opengamma.analytics.financial.interestrate.YieldCurveBundle)>(r3, r2);

        $r7 = virtualinvoke r3.<com.opengamma.analytics.financial.interestrate.swap.derivative.Swap: com.opengamma.analytics.financial.interestrate.annuity.derivative.Annuity getFirstLeg()>();

        $r8 = virtualinvoke $r7.<com.opengamma.analytics.financial.interestrate.annuity.derivative.Annuity: com.opengamma.analytics.financial.interestrate.payments.derivative.Payment getNthPayment(int)>(0);

        $r9 = (com.opengamma.analytics.financial.interestrate.payments.derivative.CouponFixedAccruedCompounding) $r8;

        d1 = virtualinvoke $r9.<com.opengamma.analytics.financial.interestrate.payments.derivative.CouponFixedAccruedCompounding: double getPaymentYearFraction()>();

        $d6 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionPhysicalFixedCompoundedONCompounded: double getStrike()>();

        $d7 = 1.0 + $d6;

        $d8 = staticinvoke <java.lang.Math: double pow(double,double)>($d7, d1);

        d2 = $d8 - 1.0;

        d3 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionPhysicalFixedCompoundedONCompounded: double getMaturityTime()>();

        $r10 = virtualinvoke r2.<com.opengamma.analytics.financial.model.option.definition.YieldCurveWithBlackSwaptionBundle: com.opengamma.analytics.financial.model.option.parameters.BlackFlatSwaptionParameters getBlackParameters()>();

        $d9 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionPhysicalFixedCompoundedONCompounded: double getTimeToExpiry()>();

        d4 = virtualinvoke $r10.<com.opengamma.analytics.financial.model.option.parameters.BlackFlatSwaptionParameters: double getVolatility(double,double)>($d9, d3);

        d5 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionPhysicalFixedCompoundedONCompounded: double getTimeToExpiry()>();

        $d10 = staticinvoke <com.opengamma.analytics.financial.model.volatility.BlackFormulaRepository: double vega(double,double,double,double)>(d0, d2, d5, d4);

        $z0 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionPhysicalFixedCompoundedONCompounded: boolean isLong()>();

        if $z0 == 0 goto label1;

        $d12 = 1.0;

        goto label2;

     label1:
        $d12 = -1.0;

     label2:
        $d11 = $d10 * $d12;

        return $d11;
    }

    public double forwardGammaTheoretical(com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionPhysicalFixedCompoundedONCompounded, com.opengamma.analytics.financial.model.option.definition.YieldCurveWithBlackSwaptionBundle)
    {
        com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionPhysicalFixedCompoundedONCompoundedBlackMethod r0;
        com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionPhysicalFixedCompoundedONCompounded r1;
        com.opengamma.analytics.financial.model.option.definition.YieldCurveWithBlackSwaptionBundle r2;
        com.opengamma.analytics.financial.interestrate.swap.derivative.Swap r3;
        double d0, d1, d2, d3, d4, d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12;
        com.opengamma.analytics.financial.interestrate.annuity.derivative.Annuity $r6;
        com.opengamma.analytics.financial.interestrate.payments.derivative.Payment $r7;
        com.opengamma.analytics.financial.interestrate.payments.derivative.CouponFixedAccruedCompounding $r8;
        com.opengamma.analytics.financial.interestrate.swap.method.SwapFixedCompoundingONCompoundingDiscountingMethod $r9;
        com.opengamma.analytics.financial.model.option.parameters.BlackFlatSwaptionParameters $r10;
        boolean $z0;

        r0 := @this: com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionPhysicalFixedCompoundedONCompoundedBlackMethod;

        r1 := @parameter0: com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionPhysicalFixedCompoundedONCompounded;

        r2 := @parameter1: com.opengamma.analytics.financial.model.option.definition.YieldCurveWithBlackSwaptionBundle;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "Swaption");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, "Curves with Black volatility");

        r3 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionPhysicalFixedCompoundedONCompounded: com.opengamma.analytics.financial.interestrate.swap.derivative.Swap getUnderlyingSwap()>();

        $r6 = virtualinvoke r3.<com.opengamma.analytics.financial.interestrate.swap.derivative.Swap: com.opengamma.analytics.financial.interestrate.annuity.derivative.Annuity getFirstLeg()>();

        $r7 = virtualinvoke $r6.<com.opengamma.analytics.financial.interestrate.annuity.derivative.Annuity: com.opengamma.analytics.financial.interestrate.payments.derivative.Payment getNthPayment(int)>(0);

        $r8 = (com.opengamma.analytics.financial.interestrate.payments.derivative.CouponFixedAccruedCompounding) $r7;

        d0 = virtualinvoke $r8.<com.opengamma.analytics.financial.interestrate.payments.derivative.CouponFixedAccruedCompounding: double getPaymentYearFraction()>();

        $r9 = <com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionPhysicalFixedCompoundedONCompoundedBlackMethod: com.opengamma.analytics.financial.interestrate.swap.method.SwapFixedCompoundingONCompoundingDiscountingMethod METHOD_SWAP>;

        d1 = virtualinvoke $r9.<com.opengamma.analytics.financial.interestrate.swap.method.SwapFixedCompoundingONCompoundingDiscountingMethod: double forwardModified(com.opengamma.analytics.financial.interestrate.swap.derivative.Swap,com.opengamma.analytics.financial.interestrate.YieldCurveBundle)>(r3, r2);

        $d6 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionPhysicalFixedCompoundedONCompounded: double getStrike()>();

        $d7 = 1.0 + $d6;

        $d8 = staticinvoke <java.lang.Math: double pow(double,double)>($d7, d0);

        d2 = $d8 - 1.0;

        d3 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionPhysicalFixedCompoundedONCompounded: double getMaturityTime()>();

        $r10 = virtualinvoke r2.<com.opengamma.analytics.financial.model.option.definition.YieldCurveWithBlackSwaptionBundle: com.opengamma.analytics.financial.model.option.parameters.BlackFlatSwaptionParameters getBlackParameters()>();

        $d9 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionPhysicalFixedCompoundedONCompounded: double getTimeToExpiry()>();

        d4 = virtualinvoke $r10.<com.opengamma.analytics.financial.model.option.parameters.BlackFlatSwaptionParameters: double getVolatility(double,double)>($d9, d3);

        d5 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionPhysicalFixedCompoundedONCompounded: double getTimeToExpiry()>();

        $d10 = staticinvoke <com.opengamma.analytics.financial.model.volatility.BlackFormulaRepository: double gamma(double,double,double,double)>(d1, d2, d5, d4);

        $z0 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionPhysicalFixedCompoundedONCompounded: boolean isLong()>();

        if $z0 == 0 goto label1;

        $d12 = 1.0;

        goto label2;

     label1:
        $d12 = -1.0;

     label2:
        $d11 = $d10 * $d12;

        return $d11;
    }

    public double driftlessThetaTheoretical(com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionPhysicalFixedCompoundedONCompounded, com.opengamma.analytics.financial.model.option.definition.YieldCurveWithBlackSwaptionBundle)
    {
        com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionPhysicalFixedCompoundedONCompoundedBlackMethod r0;
        com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionPhysicalFixedCompoundedONCompounded r1;
        com.opengamma.analytics.financial.model.option.definition.YieldCurveWithBlackSwaptionBundle r2;
        com.opengamma.analytics.financial.interestrate.swap.derivative.Swap r3;
        double d0, d1, d2, d3, d4, d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12;
        com.opengamma.analytics.financial.interestrate.annuity.derivative.Annuity $r6;
        com.opengamma.analytics.financial.interestrate.payments.derivative.Payment $r7;
        com.opengamma.analytics.financial.interestrate.payments.derivative.CouponFixedAccruedCompounding $r8;
        com.opengamma.analytics.financial.interestrate.swap.method.SwapFixedCompoundingONCompoundingDiscountingMethod $r9;
        com.opengamma.analytics.financial.model.option.parameters.BlackFlatSwaptionParameters $r10;
        boolean $z0;

        r0 := @this: com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionPhysicalFixedCompoundedONCompoundedBlackMethod;

        r1 := @parameter0: com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionPhysicalFixedCompoundedONCompounded;

        r2 := @parameter1: com.opengamma.analytics.financial.model.option.definition.YieldCurveWithBlackSwaptionBundle;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "Swaption");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, "Curves with Black volatility");

        r3 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionPhysicalFixedCompoundedONCompounded: com.opengamma.analytics.financial.interestrate.swap.derivative.Swap getUnderlyingSwap()>();

        $r6 = virtualinvoke r3.<com.opengamma.analytics.financial.interestrate.swap.derivative.Swap: com.opengamma.analytics.financial.interestrate.annuity.derivative.Annuity getFirstLeg()>();

        $r7 = virtualinvoke $r6.<com.opengamma.analytics.financial.interestrate.annuity.derivative.Annuity: com.opengamma.analytics.financial.interestrate.payments.derivative.Payment getNthPayment(int)>(0);

        $r8 = (com.opengamma.analytics.financial.interestrate.payments.derivative.CouponFixedAccruedCompounding) $r7;

        d0 = virtualinvoke $r8.<com.opengamma.analytics.financial.interestrate.payments.derivative.CouponFixedAccruedCompounding: double getPaymentYearFraction()>();

        $r9 = <com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionPhysicalFixedCompoundedONCompoundedBlackMethod: com.opengamma.analytics.financial.interestrate.swap.method.SwapFixedCompoundingONCompoundingDiscountingMethod METHOD_SWAP>;

        d1 = virtualinvoke $r9.<com.opengamma.analytics.financial.interestrate.swap.method.SwapFixedCompoundingONCompoundingDiscountingMethod: double forwardModified(com.opengamma.analytics.financial.interestrate.swap.derivative.Swap,com.opengamma.analytics.financial.interestrate.YieldCurveBundle)>(r3, r2);

        $d6 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionPhysicalFixedCompoundedONCompounded: double getStrike()>();

        $d7 = 1.0 + $d6;

        $d8 = staticinvoke <java.lang.Math: double pow(double,double)>($d7, d0);

        d2 = $d8 - 1.0;

        d3 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionPhysicalFixedCompoundedONCompounded: double getMaturityTime()>();

        $r10 = virtualinvoke r2.<com.opengamma.analytics.financial.model.option.definition.YieldCurveWithBlackSwaptionBundle: com.opengamma.analytics.financial.model.option.parameters.BlackFlatSwaptionParameters getBlackParameters()>();

        $d9 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionPhysicalFixedCompoundedONCompounded: double getTimeToExpiry()>();

        d4 = virtualinvoke $r10.<com.opengamma.analytics.financial.model.option.parameters.BlackFlatSwaptionParameters: double getVolatility(double,double)>($d9, d3);

        d5 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionPhysicalFixedCompoundedONCompounded: double getTimeToExpiry()>();

        $d10 = staticinvoke <com.opengamma.analytics.financial.model.volatility.BlackFormulaRepository: double driftlessTheta(double,double,double,double)>(d1, d2, d5, d4);

        $z0 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionPhysicalFixedCompoundedONCompounded: boolean isLong()>();

        if $z0 == 0 goto label1;

        $d12 = 1.0;

        goto label2;

     label1:
        $d12 = -1.0;

     label2:
        $d11 = $d10 * $d12;

        return $d11;
    }

    public double forwardThetaTheoretical(com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionPhysicalFixedCompoundedONCompounded, com.opengamma.analytics.financial.model.option.definition.YieldCurveWithBlackSwaptionBundle)
    {
        com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionPhysicalFixedCompoundedONCompoundedBlackMethod r0;
        com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionPhysicalFixedCompoundedONCompounded r1;
        com.opengamma.analytics.financial.model.option.definition.YieldCurveWithBlackSwaptionBundle r2;
        com.opengamma.analytics.financial.interestrate.swap.derivative.Swap r3;
        double d0, d1, d2, d3, d4, d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17;
        boolean z0, $z1, $z2;
        com.opengamma.analytics.financial.interestrate.annuity.derivative.Annuity $r6;
        com.opengamma.analytics.financial.interestrate.payments.derivative.Payment $r7;
        com.opengamma.analytics.financial.interestrate.payments.derivative.CouponFixedAccruedCompounding $r8;
        com.opengamma.analytics.financial.interestrate.swap.method.SwapFixedCompoundingONCompoundingDiscountingMethod $r9;
        com.opengamma.analytics.financial.model.option.parameters.BlackFlatSwaptionParameters $r10;

        r0 := @this: com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionPhysicalFixedCompoundedONCompoundedBlackMethod;

        r1 := @parameter0: com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionPhysicalFixedCompoundedONCompounded;

        r2 := @parameter1: com.opengamma.analytics.financial.model.option.definition.YieldCurveWithBlackSwaptionBundle;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "Swaption");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, "Curves with Black volatility");

        r3 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionPhysicalFixedCompoundedONCompounded: com.opengamma.analytics.financial.interestrate.swap.derivative.Swap getUnderlyingSwap()>();

        $r6 = virtualinvoke r3.<com.opengamma.analytics.financial.interestrate.swap.derivative.Swap: com.opengamma.analytics.financial.interestrate.annuity.derivative.Annuity getFirstLeg()>();

        $r7 = virtualinvoke $r6.<com.opengamma.analytics.financial.interestrate.annuity.derivative.Annuity: com.opengamma.analytics.financial.interestrate.payments.derivative.Payment getNthPayment(int)>(0);

        $r8 = (com.opengamma.analytics.financial.interestrate.payments.derivative.CouponFixedAccruedCompounding) $r7;

        d0 = virtualinvoke $r8.<com.opengamma.analytics.financial.interestrate.payments.derivative.CouponFixedAccruedCompounding: double getPaymentYearFraction()>();

        $r9 = <com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionPhysicalFixedCompoundedONCompoundedBlackMethod: com.opengamma.analytics.financial.interestrate.swap.method.SwapFixedCompoundingONCompoundingDiscountingMethod METHOD_SWAP>;

        d1 = virtualinvoke $r9.<com.opengamma.analytics.financial.interestrate.swap.method.SwapFixedCompoundingONCompoundingDiscountingMethod: double forwardModified(com.opengamma.analytics.financial.interestrate.swap.derivative.Swap,com.opengamma.analytics.financial.interestrate.YieldCurveBundle)>(r3, r2);

        $d6 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionPhysicalFixedCompoundedONCompounded: double getStrike()>();

        $d7 = 1.0 + $d6;

        $d8 = staticinvoke <java.lang.Math: double pow(double,double)>($d7, d0);

        d2 = $d8 - 1.0;

        d3 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionPhysicalFixedCompoundedONCompounded: double getMaturityTime()>();

        $r10 = virtualinvoke r2.<com.opengamma.analytics.financial.model.option.definition.YieldCurveWithBlackSwaptionBundle: com.opengamma.analytics.financial.model.option.parameters.BlackFlatSwaptionParameters getBlackParameters()>();

        $d9 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionPhysicalFixedCompoundedONCompounded: double getTimeToExpiry()>();

        d4 = virtualinvoke $r10.<com.opengamma.analytics.financial.model.option.parameters.BlackFlatSwaptionParameters: double getVolatility(double,double)>($d9, d3);

        d5 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionPhysicalFixedCompoundedONCompounded: double getTimeToExpiry()>();

        z0 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionPhysicalFixedCompoundedONCompounded: boolean isCall()>();

        $d10 = staticinvoke <com.opengamma.analytics.financial.model.volatility.BlackFormulaRepository: double price(double,double,double,double,boolean)>(d1, d2, d5, d4, z0);

        $d11 = d1 * $d10;

        $z1 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionPhysicalFixedCompoundedONCompounded: boolean isLong()>();

        if $z1 == 0 goto label1;

        $d16 = 1.0;

        goto label2;

     label1:
        $d16 = -1.0;

     label2:
        $d12 = $d11 * $d16;

        $d13 = staticinvoke <com.opengamma.analytics.financial.model.volatility.BlackFormulaRepository: double driftlessTheta(double,double,double,double)>(d1, d2, d5, d4);

        $z2 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionPhysicalFixedCompoundedONCompounded: boolean isLong()>();

        if $z2 == 0 goto label3;

        $d17 = 1.0;

        goto label4;

     label3:
        $d17 = -1.0;

     label4:
        $d14 = $d13 * $d17;

        $d15 = $d12 + $d14;

        return $d15;
    }

    static void <clinit>()
    {
        com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionPhysicalFixedCompoundedONCompoundedBlackMethod $r0;
        com.opengamma.analytics.financial.interestrate.swap.method.SwapFixedCompoundingONCompoundingDiscountingMethod $r1;

        $r0 = new com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionPhysicalFixedCompoundedONCompoundedBlackMethod;

        specialinvoke $r0.<com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionPhysicalFixedCompoundedONCompoundedBlackMethod: void <init>()>();

        <com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionPhysicalFixedCompoundedONCompoundedBlackMethod: com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionPhysicalFixedCompoundedONCompoundedBlackMethod INSTANCE> = $r0;

        $r1 = staticinvoke <com.opengamma.analytics.financial.interestrate.swap.method.SwapFixedCompoundingONCompoundingDiscountingMethod: com.opengamma.analytics.financial.interestrate.swap.method.SwapFixedCompoundingONCompoundingDiscountingMethod getInstance()>();

        <com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionPhysicalFixedCompoundedONCompoundedBlackMethod: com.opengamma.analytics.financial.interestrate.swap.method.SwapFixedCompoundingONCompoundingDiscountingMethod METHOD_SWAP> = $r1;

        return;
    }
}
