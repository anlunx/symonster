final class org.apache.commons.math.special.Gamma$1 extends org.apache.commons.math.util.ContinuedFraction
{
    final double val$a;

    void <init>(double)
    {
        org.apache.commons.math.special.Gamma$1 r0;
        double d0;

        r0 := @this: org.apache.commons.math.special.Gamma$1;

        d0 := @parameter0: double;

        r0.<org.apache.commons.math.special.Gamma$1: double val$a> = d0;

        specialinvoke r0.<org.apache.commons.math.util.ContinuedFraction: void <init>()>();

        return;
    }

    protected double getA(int, double)
    {
        org.apache.commons.math.special.Gamma$1 r0;
        int i0;
        double d0, $d1, $d2, $d3, $d4, $d5, $d6;

        r0 := @this: org.apache.commons.math.special.Gamma$1;

        i0 := @parameter0: int;

        d0 := @parameter1: double;

        $d1 = (double) i0;

        $d2 = 2.0 * $d1;

        $d4 = $d2 + 1.0;

        $d3 = r0.<org.apache.commons.math.special.Gamma$1: double val$a>;

        $d5 = $d4 - $d3;

        $d6 = $d5 + d0;

        return $d6;
    }

    protected double getB(int, double)
    {
        org.apache.commons.math.special.Gamma$1 r0;
        int i0;
        double d0, $d1, $d2, $d3, $d4, $d5;

        r0 := @this: org.apache.commons.math.special.Gamma$1;

        i0 := @parameter0: int;

        d0 := @parameter1: double;

        $d4 = (double) i0;

        $d2 = r0.<org.apache.commons.math.special.Gamma$1: double val$a>;

        $d1 = (double) i0;

        $d3 = $d2 - $d1;

        $d5 = $d4 * $d3;

        return $d5;
    }
}
