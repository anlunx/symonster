public class org.apache.commons.math3.exception.NonMonotonicSequenceException extends org.apache.commons.math3.exception.MathIllegalNumberException
{
    private static final long serialVersionUID;
    private final org.apache.commons.math3.util.MathArrays$OrderDirection direction;
    private final boolean strict;
    private final int index;
    private final java.lang.Number previous;

    public void <init>(java.lang.Number, java.lang.Number, int)
    {
        org.apache.commons.math3.exception.NonMonotonicSequenceException r0;
        java.lang.Number r1, r2;
        int i0;
        org.apache.commons.math3.util.MathArrays$OrderDirection $r3;

        r0 := @this: org.apache.commons.math3.exception.NonMonotonicSequenceException;

        r1 := @parameter0: java.lang.Number;

        r2 := @parameter1: java.lang.Number;

        i0 := @parameter2: int;

        $r3 = <org.apache.commons.math3.util.MathArrays$OrderDirection: org.apache.commons.math3.util.MathArrays$OrderDirection INCREASING>;

        specialinvoke r0.<org.apache.commons.math3.exception.NonMonotonicSequenceException: void <init>(java.lang.Number,java.lang.Number,int,org.apache.commons.math3.util.MathArrays$OrderDirection,boolean)>(r1, r2, i0, $r3, 1);

        return;
    }

    public void <init>(java.lang.Number, java.lang.Number, int, org.apache.commons.math3.util.MathArrays$OrderDirection, boolean)
    {
        org.apache.commons.math3.exception.NonMonotonicSequenceException r0;
        java.lang.Number r1, r2;
        int i0, $i1;
        org.apache.commons.math3.util.MathArrays$OrderDirection r3, $r4;
        boolean z0;
        org.apache.commons.math3.exception.util.LocalizedFormats $r6;
        java.lang.Object[] $r7;
        java.lang.Integer $r8, $r9;

        r0 := @this: org.apache.commons.math3.exception.NonMonotonicSequenceException;

        r1 := @parameter0: java.lang.Number;

        r2 := @parameter1: java.lang.Number;

        i0 := @parameter2: int;

        r3 := @parameter3: org.apache.commons.math3.util.MathArrays$OrderDirection;

        z0 := @parameter4: boolean;

        $r4 = <org.apache.commons.math3.util.MathArrays$OrderDirection: org.apache.commons.math3.util.MathArrays$OrderDirection INCREASING>;

        if r3 != $r4 goto label2;

        if z0 == 0 goto label1;

        $r6 = <org.apache.commons.math3.exception.util.LocalizedFormats: org.apache.commons.math3.exception.util.LocalizedFormats NOT_STRICTLY_INCREASING_SEQUENCE>;

        goto label4;

     label1:
        $r6 = <org.apache.commons.math3.exception.util.LocalizedFormats: org.apache.commons.math3.exception.util.LocalizedFormats NOT_INCREASING_SEQUENCE>;

        goto label4;

     label2:
        if z0 == 0 goto label3;

        $r6 = <org.apache.commons.math3.exception.util.LocalizedFormats: org.apache.commons.math3.exception.util.LocalizedFormats NOT_STRICTLY_DECREASING_SEQUENCE>;

        goto label4;

     label3:
        $r6 = <org.apache.commons.math3.exception.util.LocalizedFormats: org.apache.commons.math3.exception.util.LocalizedFormats NOT_DECREASING_SEQUENCE>;

     label4:
        $r7 = newarray (java.lang.Object)[3];

        $r7[0] = r2;

        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r7[1] = $r8;

        $i1 = i0 - 1;

        $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $r7[2] = $r9;

        specialinvoke r0.<org.apache.commons.math3.exception.MathIllegalNumberException: void <init>(org.apache.commons.math3.exception.util.Localizable,java.lang.Number,java.lang.Object[])>($r6, r1, $r7);

        r0.<org.apache.commons.math3.exception.NonMonotonicSequenceException: org.apache.commons.math3.util.MathArrays$OrderDirection direction> = r3;

        r0.<org.apache.commons.math3.exception.NonMonotonicSequenceException: boolean strict> = z0;

        r0.<org.apache.commons.math3.exception.NonMonotonicSequenceException: int index> = i0;

        r0.<org.apache.commons.math3.exception.NonMonotonicSequenceException: java.lang.Number previous> = r2;

        return;
    }

    public org.apache.commons.math3.util.MathArrays$OrderDirection getDirection()
    {
        org.apache.commons.math3.exception.NonMonotonicSequenceException r0;
        org.apache.commons.math3.util.MathArrays$OrderDirection $r1;

        r0 := @this: org.apache.commons.math3.exception.NonMonotonicSequenceException;

        $r1 = r0.<org.apache.commons.math3.exception.NonMonotonicSequenceException: org.apache.commons.math3.util.MathArrays$OrderDirection direction>;

        return $r1;
    }

    public boolean getStrict()
    {
        org.apache.commons.math3.exception.NonMonotonicSequenceException r0;
        boolean $z0;

        r0 := @this: org.apache.commons.math3.exception.NonMonotonicSequenceException;

        $z0 = r0.<org.apache.commons.math3.exception.NonMonotonicSequenceException: boolean strict>;

        return $z0;
    }

    public int getIndex()
    {
        org.apache.commons.math3.exception.NonMonotonicSequenceException r0;
        int $i0;

        r0 := @this: org.apache.commons.math3.exception.NonMonotonicSequenceException;

        $i0 = r0.<org.apache.commons.math3.exception.NonMonotonicSequenceException: int index>;

        return $i0;
    }

    public java.lang.Number getPrevious()
    {
        org.apache.commons.math3.exception.NonMonotonicSequenceException r0;
        java.lang.Number $r1;

        r0 := @this: org.apache.commons.math3.exception.NonMonotonicSequenceException;

        $r1 = r0.<org.apache.commons.math3.exception.NonMonotonicSequenceException: java.lang.Number previous>;

        return $r1;
    }

    public static void <clinit>()
    {
        <org.apache.commons.math3.exception.NonMonotonicSequenceException: long serialVersionUID> = 3596849179428944575L;

        return;
    }
}
