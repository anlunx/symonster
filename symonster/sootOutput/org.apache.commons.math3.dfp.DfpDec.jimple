public class org.apache.commons.math3.dfp.DfpDec extends org.apache.commons.math3.dfp.Dfp
{

    protected void <init>(org.apache.commons.math3.dfp.DfpField)
    {
        org.apache.commons.math3.dfp.DfpDec r0;
        org.apache.commons.math3.dfp.DfpField r1;

        r0 := @this: org.apache.commons.math3.dfp.DfpDec;

        r1 := @parameter0: org.apache.commons.math3.dfp.DfpField;

        specialinvoke r0.<org.apache.commons.math3.dfp.Dfp: void <init>(org.apache.commons.math3.dfp.DfpField)>(r1);

        return;
    }

    protected void <init>(org.apache.commons.math3.dfp.DfpField, byte)
    {
        org.apache.commons.math3.dfp.DfpDec r0;
        org.apache.commons.math3.dfp.DfpField r1;
        byte b0;

        r0 := @this: org.apache.commons.math3.dfp.DfpDec;

        r1 := @parameter0: org.apache.commons.math3.dfp.DfpField;

        b0 := @parameter1: byte;

        specialinvoke r0.<org.apache.commons.math3.dfp.Dfp: void <init>(org.apache.commons.math3.dfp.DfpField,byte)>(r1, b0);

        return;
    }

    protected void <init>(org.apache.commons.math3.dfp.DfpField, int)
    {
        org.apache.commons.math3.dfp.DfpDec r0;
        org.apache.commons.math3.dfp.DfpField r1;
        int i0;

        r0 := @this: org.apache.commons.math3.dfp.DfpDec;

        r1 := @parameter0: org.apache.commons.math3.dfp.DfpField;

        i0 := @parameter1: int;

        specialinvoke r0.<org.apache.commons.math3.dfp.Dfp: void <init>(org.apache.commons.math3.dfp.DfpField,int)>(r1, i0);

        return;
    }

    protected void <init>(org.apache.commons.math3.dfp.DfpField, long)
    {
        org.apache.commons.math3.dfp.DfpDec r0;
        org.apache.commons.math3.dfp.DfpField r1;
        long l0;

        r0 := @this: org.apache.commons.math3.dfp.DfpDec;

        r1 := @parameter0: org.apache.commons.math3.dfp.DfpField;

        l0 := @parameter1: long;

        specialinvoke r0.<org.apache.commons.math3.dfp.Dfp: void <init>(org.apache.commons.math3.dfp.DfpField,long)>(r1, l0);

        return;
    }

    protected void <init>(org.apache.commons.math3.dfp.DfpField, double)
    {
        org.apache.commons.math3.dfp.DfpDec r0;
        org.apache.commons.math3.dfp.DfpField r1;
        double d0;

        r0 := @this: org.apache.commons.math3.dfp.DfpDec;

        r1 := @parameter0: org.apache.commons.math3.dfp.DfpField;

        d0 := @parameter1: double;

        specialinvoke r0.<org.apache.commons.math3.dfp.Dfp: void <init>(org.apache.commons.math3.dfp.DfpField,double)>(r1, d0);

        virtualinvoke r0.<org.apache.commons.math3.dfp.DfpDec: int round(int)>(0);

        return;
    }

    public void <init>(org.apache.commons.math3.dfp.Dfp)
    {
        org.apache.commons.math3.dfp.DfpDec r0;
        org.apache.commons.math3.dfp.Dfp r1;

        r0 := @this: org.apache.commons.math3.dfp.DfpDec;

        r1 := @parameter0: org.apache.commons.math3.dfp.Dfp;

        specialinvoke r0.<org.apache.commons.math3.dfp.Dfp: void <init>(org.apache.commons.math3.dfp.Dfp)>(r1);

        virtualinvoke r0.<org.apache.commons.math3.dfp.DfpDec: int round(int)>(0);

        return;
    }

    protected void <init>(org.apache.commons.math3.dfp.DfpField, java.lang.String)
    {
        org.apache.commons.math3.dfp.DfpDec r0;
        org.apache.commons.math3.dfp.DfpField r1;
        java.lang.String r2;

        r0 := @this: org.apache.commons.math3.dfp.DfpDec;

        r1 := @parameter0: org.apache.commons.math3.dfp.DfpField;

        r2 := @parameter1: java.lang.String;

        specialinvoke r0.<org.apache.commons.math3.dfp.Dfp: void <init>(org.apache.commons.math3.dfp.DfpField,java.lang.String)>(r1, r2);

        virtualinvoke r0.<org.apache.commons.math3.dfp.DfpDec: int round(int)>(0);

        return;
    }

    protected void <init>(org.apache.commons.math3.dfp.DfpField, byte, byte)
    {
        org.apache.commons.math3.dfp.DfpDec r0;
        org.apache.commons.math3.dfp.DfpField r1;
        byte b0, b1;

        r0 := @this: org.apache.commons.math3.dfp.DfpDec;

        r1 := @parameter0: org.apache.commons.math3.dfp.DfpField;

        b0 := @parameter1: byte;

        b1 := @parameter2: byte;

        specialinvoke r0.<org.apache.commons.math3.dfp.Dfp: void <init>(org.apache.commons.math3.dfp.DfpField,byte,byte)>(r1, b0, b1);

        return;
    }

    public org.apache.commons.math3.dfp.Dfp newInstance()
    {
        org.apache.commons.math3.dfp.DfpDec r0, $r1;
        org.apache.commons.math3.dfp.DfpField $r2;

        r0 := @this: org.apache.commons.math3.dfp.DfpDec;

        $r1 = new org.apache.commons.math3.dfp.DfpDec;

        $r2 = virtualinvoke r0.<org.apache.commons.math3.dfp.DfpDec: org.apache.commons.math3.dfp.DfpField getField()>();

        specialinvoke $r1.<org.apache.commons.math3.dfp.DfpDec: void <init>(org.apache.commons.math3.dfp.DfpField)>($r2);

        return $r1;
    }

    public org.apache.commons.math3.dfp.Dfp newInstance(byte)
    {
        org.apache.commons.math3.dfp.DfpDec r0, $r1;
        byte b0;
        org.apache.commons.math3.dfp.DfpField $r2;

        r0 := @this: org.apache.commons.math3.dfp.DfpDec;

        b0 := @parameter0: byte;

        $r1 = new org.apache.commons.math3.dfp.DfpDec;

        $r2 = virtualinvoke r0.<org.apache.commons.math3.dfp.DfpDec: org.apache.commons.math3.dfp.DfpField getField()>();

        specialinvoke $r1.<org.apache.commons.math3.dfp.DfpDec: void <init>(org.apache.commons.math3.dfp.DfpField,byte)>($r2, b0);

        return $r1;
    }

    public org.apache.commons.math3.dfp.Dfp newInstance(int)
    {
        org.apache.commons.math3.dfp.DfpDec r0, $r1;
        int i0;
        org.apache.commons.math3.dfp.DfpField $r2;

        r0 := @this: org.apache.commons.math3.dfp.DfpDec;

        i0 := @parameter0: int;

        $r1 = new org.apache.commons.math3.dfp.DfpDec;

        $r2 = virtualinvoke r0.<org.apache.commons.math3.dfp.DfpDec: org.apache.commons.math3.dfp.DfpField getField()>();

        specialinvoke $r1.<org.apache.commons.math3.dfp.DfpDec: void <init>(org.apache.commons.math3.dfp.DfpField,int)>($r2, i0);

        return $r1;
    }

    public org.apache.commons.math3.dfp.Dfp newInstance(long)
    {
        org.apache.commons.math3.dfp.DfpDec r0, $r1;
        long l0;
        org.apache.commons.math3.dfp.DfpField $r2;

        r0 := @this: org.apache.commons.math3.dfp.DfpDec;

        l0 := @parameter0: long;

        $r1 = new org.apache.commons.math3.dfp.DfpDec;

        $r2 = virtualinvoke r0.<org.apache.commons.math3.dfp.DfpDec: org.apache.commons.math3.dfp.DfpField getField()>();

        specialinvoke $r1.<org.apache.commons.math3.dfp.DfpDec: void <init>(org.apache.commons.math3.dfp.DfpField,long)>($r2, l0);

        return $r1;
    }

    public org.apache.commons.math3.dfp.Dfp newInstance(double)
    {
        org.apache.commons.math3.dfp.DfpDec r0, $r1;
        double d0;
        org.apache.commons.math3.dfp.DfpField $r2;

        r0 := @this: org.apache.commons.math3.dfp.DfpDec;

        d0 := @parameter0: double;

        $r1 = new org.apache.commons.math3.dfp.DfpDec;

        $r2 = virtualinvoke r0.<org.apache.commons.math3.dfp.DfpDec: org.apache.commons.math3.dfp.DfpField getField()>();

        specialinvoke $r1.<org.apache.commons.math3.dfp.DfpDec: void <init>(org.apache.commons.math3.dfp.DfpField,double)>($r2, d0);

        return $r1;
    }

    public org.apache.commons.math3.dfp.Dfp newInstance(org.apache.commons.math3.dfp.Dfp)
    {
        org.apache.commons.math3.dfp.DfpDec r0, $r5;
        org.apache.commons.math3.dfp.Dfp r1, r2, $r7, $r8;
        org.apache.commons.math3.dfp.DfpField $r3, $r4, $r6;
        int $i0, $i1;

        r0 := @this: org.apache.commons.math3.dfp.DfpDec;

        r1 := @parameter0: org.apache.commons.math3.dfp.Dfp;

        $r3 = virtualinvoke r0.<org.apache.commons.math3.dfp.DfpDec: org.apache.commons.math3.dfp.DfpField getField()>();

        $i0 = virtualinvoke $r3.<org.apache.commons.math3.dfp.DfpField: int getRadixDigits()>();

        $r4 = virtualinvoke r1.<org.apache.commons.math3.dfp.Dfp: org.apache.commons.math3.dfp.DfpField getField()>();

        $i1 = virtualinvoke $r4.<org.apache.commons.math3.dfp.DfpField: int getRadixDigits()>();

        if $i0 == $i1 goto label1;

        $r6 = virtualinvoke r0.<org.apache.commons.math3.dfp.DfpDec: org.apache.commons.math3.dfp.DfpField getField()>();

        virtualinvoke $r6.<org.apache.commons.math3.dfp.DfpField: void setIEEEFlagsBits(int)>(1);

        $r7 = virtualinvoke r0.<org.apache.commons.math3.dfp.DfpDec: org.apache.commons.math3.dfp.Dfp getZero()>();

        r2 = virtualinvoke r0.<org.apache.commons.math3.dfp.DfpDec: org.apache.commons.math3.dfp.Dfp newInstance(org.apache.commons.math3.dfp.Dfp)>($r7);

        r2.<org.apache.commons.math3.dfp.Dfp: byte nans> = 3;

        $r8 = virtualinvoke r0.<org.apache.commons.math3.dfp.DfpDec: org.apache.commons.math3.dfp.Dfp dotrap(int,java.lang.String,org.apache.commons.math3.dfp.Dfp,org.apache.commons.math3.dfp.Dfp)>(1, "newInstance", r1, r2);

        return $r8;

     label1:
        $r5 = new org.apache.commons.math3.dfp.DfpDec;

        specialinvoke $r5.<org.apache.commons.math3.dfp.DfpDec: void <init>(org.apache.commons.math3.dfp.Dfp)>(r1);

        return $r5;
    }

    public org.apache.commons.math3.dfp.Dfp newInstance(java.lang.String)
    {
        org.apache.commons.math3.dfp.DfpDec r0, $r2;
        java.lang.String r1;
        org.apache.commons.math3.dfp.DfpField $r3;

        r0 := @this: org.apache.commons.math3.dfp.DfpDec;

        r1 := @parameter0: java.lang.String;

        $r2 = new org.apache.commons.math3.dfp.DfpDec;

        $r3 = virtualinvoke r0.<org.apache.commons.math3.dfp.DfpDec: org.apache.commons.math3.dfp.DfpField getField()>();

        specialinvoke $r2.<org.apache.commons.math3.dfp.DfpDec: void <init>(org.apache.commons.math3.dfp.DfpField,java.lang.String)>($r3, r1);

        return $r2;
    }

    public org.apache.commons.math3.dfp.Dfp newInstance(byte, byte)
    {
        org.apache.commons.math3.dfp.DfpDec r0, $r1;
        byte b0, b1;
        org.apache.commons.math3.dfp.DfpField $r2;

        r0 := @this: org.apache.commons.math3.dfp.DfpDec;

        b0 := @parameter0: byte;

        b1 := @parameter1: byte;

        $r1 = new org.apache.commons.math3.dfp.DfpDec;

        $r2 = virtualinvoke r0.<org.apache.commons.math3.dfp.DfpDec: org.apache.commons.math3.dfp.DfpField getField()>();

        specialinvoke $r1.<org.apache.commons.math3.dfp.DfpDec: void <init>(org.apache.commons.math3.dfp.DfpField,byte,byte)>($r2, b0, b1);

        return $r1;
    }

    protected int getDecimalDigits()
    {
        org.apache.commons.math3.dfp.DfpDec r0;
        int $i0, $i1, $i2;

        r0 := @this: org.apache.commons.math3.dfp.DfpDec;

        $i0 = virtualinvoke r0.<org.apache.commons.math3.dfp.DfpDec: int getRadixDigits()>();

        $i1 = $i0 * 4;

        $i2 = $i1 - 3;

        return $i2;
    }

    protected int round(int)
    {
        org.apache.commons.math3.dfp.DfpDec r0;
        int i0, i1, i2, i3, i4, i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i25, $i26, $i27, $i28, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, i43, i44, i45, i46, i47, i49, i50, i51, i52, i53, $i54;
        int[] $r1, $r2, $r3, $r4, $r5, $r6, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22;
        org.apache.commons.math3.dfp.DfpField $r7, $r9, $r10, $r11;
        org.apache.commons.math3.dfp.DfpField$RoundingMode $r8;
        byte $b24, $b29;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;

        r0 := @this: org.apache.commons.math3.dfp.DfpDec;

        i0 := @parameter0: int;

        $r2 = r0.<org.apache.commons.math3.dfp.DfpDec: int[] mant>;

        $r1 = r0.<org.apache.commons.math3.dfp.DfpDec: int[] mant>;

        $i6 = lengthof $r1;

        $i7 = $i6 - 1;

        i1 = $r2[$i7];

        if i1 != 0 goto label01;

        return 0;

     label01:
        $r3 = r0.<org.apache.commons.math3.dfp.DfpDec: int[] mant>;

        $i8 = lengthof $r3;

        i43 = $i8 * 4;

        i44 = 1000;

     label02:
        if i44 <= i1 goto label03;

        i44 = i44 / 10;

        i43 = i43 + -1;

        goto label02;

     label03:
        i2 = virtualinvoke r0.<org.apache.commons.math3.dfp.DfpDec: int getDecimalDigits()>();

        i3 = i43 - i2;

        i4 = i3 / 4;

        i45 = 1;

        i46 = 0;

     label04:
        $i9 = i3 % 4;

        if i46 >= $i9 goto label05;

        i45 = i45 * 10;

        i46 = i46 + 1;

        goto label04;

     label05:
        $r4 = r0.<org.apache.commons.math3.dfp.DfpDec: int[] mant>;

        i47 = $r4[i4];

        if i45 > 1 goto label06;

        $r22 = r0.<org.apache.commons.math3.dfp.DfpDec: int[] mant>;

        $i39 = lengthof $r22;

        $i40 = 4 * $i39;

        $i41 = $i40 - 3;

        if i2 != $i41 goto label06;

        $i42 = specialinvoke r0.<org.apache.commons.math3.dfp.Dfp: int round(int)>(i0);

        return $i42;

     label06:
        if i45 != 1 goto label07;

        $r19 = r0.<org.apache.commons.math3.dfp.DfpDec: int[] mant>;

        $i31 = i4 - 1;

        $i32 = $r19[$i31];

        $i33 = $i32 / 1000;

        i49 = $i33 % 10;

        $r20 = r0.<org.apache.commons.math3.dfp.DfpDec: int[] mant>;

        $i34 = i4 - 1;

        $i35 = $r20[$i34];

        $i36 = $i35 % 1000;

        $r20[$i34] = $i36;

        $r21 = r0.<org.apache.commons.math3.dfp.DfpDec: int[] mant>;

        $i37 = i4 - 1;

        $i38 = $r21[$i37];

        i50 = i0 | $i38;

        goto label08;

     label07:
        $i10 = i47 * 10;

        $i11 = $i10 / i45;

        i49 = $i11 % 10;

        $i12 = i45 / 10;

        $i13 = i47 % $i12;

        i50 = i0 | $i13;

     label08:
        i51 = 0;

     label09:
        if i51 >= i4 goto label10;

        $r17 = r0.<org.apache.commons.math3.dfp.DfpDec: int[] mant>;

        $i30 = $r17[i51];

        i50 = i50 | $i30;

        $r18 = r0.<org.apache.commons.math3.dfp.DfpDec: int[] mant>;

        $r18[i51] = 0;

        i51 = i51 + 1;

        goto label09;

     label10:
        $r5 = r0.<org.apache.commons.math3.dfp.DfpDec: int[] mant>;

        $i14 = i47 / i45;

        $i15 = $i14 * i45;

        $r5[i4] = $i15;

        $r6 = <org.apache.commons.math3.dfp.DfpDec$1: int[] $SwitchMap$org$apache$commons$math3$dfp$DfpField$RoundingMode>;

        $r7 = virtualinvoke r0.<org.apache.commons.math3.dfp.DfpDec: org.apache.commons.math3.dfp.DfpField getField()>();

        $r8 = virtualinvoke $r7.<org.apache.commons.math3.dfp.DfpField: org.apache.commons.math3.dfp.DfpField$RoundingMode getRoundingMode()>();

        $i16 = virtualinvoke $r8.<org.apache.commons.math3.dfp.DfpField$RoundingMode: int ordinal()>();

        $i17 = $r6[$i16];

        tableswitch($i17)
        {
            case 1: goto label11;
            case 2: goto label12;
            case 3: goto label16;
            case 4: goto label19;
            case 5: goto label22;
            case 6: goto label27;
            case 7: goto label32;
            case 8: goto label36;
            default: goto label36;
        };

     label11:
        z0 = 0;

        goto label40;

     label12:
        if i49 != 0 goto label13;

        if i50 == 0 goto label14;

     label13:
        $z1 = 1;

        goto label15;

     label14:
        $z1 = 0;

     label15:
        z0 = $z1;

        goto label40;

     label16:
        if i49 < 5 goto label17;

        $z2 = 1;

        goto label18;

     label17:
        $z2 = 0;

     label18:
        z0 = $z2;

        goto label40;

     label19:
        if i49 <= 5 goto label20;

        $z3 = 1;

        goto label21;

     label20:
        $z3 = 0;

     label21:
        z0 = $z3;

        goto label40;

     label22:
        if i49 > 5 goto label24;

        if i49 != 5 goto label23;

        if i50 != 0 goto label24;

     label23:
        if i49 != 5 goto label25;

        if i50 != 0 goto label25;

        $i27 = i47 / i45;

        $i28 = $i27 & 1;

        if $i28 != 1 goto label25;

     label24:
        $z4 = 1;

        goto label26;

     label25:
        $z4 = 0;

     label26:
        z0 = $z4;

        goto label40;

     label27:
        if i49 > 5 goto label29;

        if i49 != 5 goto label28;

        if i50 != 0 goto label29;

     label28:
        if i49 != 5 goto label30;

        if i50 != 0 goto label30;

        $i25 = i47 / i45;

        $i26 = $i25 & 1;

        if $i26 != 0 goto label30;

     label29:
        $z5 = 1;

        goto label31;

     label30:
        $z5 = 0;

     label31:
        z0 = $z5;

        goto label40;

     label32:
        $b24 = r0.<org.apache.commons.math3.dfp.DfpDec: byte sign>;

        if $b24 != 1 goto label34;

        if i49 != 0 goto label33;

        if i50 == 0 goto label34;

     label33:
        $z6 = 1;

        goto label35;

     label34:
        $z6 = 0;

     label35:
        z0 = $z6;

        goto label40;

     label36:
        $b29 = r0.<org.apache.commons.math3.dfp.DfpDec: byte sign>;

        if $b29 != -1 goto label38;

        if i49 != 0 goto label37;

        if i50 == 0 goto label38;

     label37:
        $z7 = 1;

        goto label39;

     label38:
        $z7 = 0;

     label39:
        z0 = $z7;

     label40:
        if z0 == 0 goto label43;

        i52 = i45;

        i53 = i4;

     label41:
        $r12 = r0.<org.apache.commons.math3.dfp.DfpDec: int[] mant>;

        $i19 = lengthof $r12;

        if i53 >= $i19 goto label42;

        $r15 = r0.<org.apache.commons.math3.dfp.DfpDec: int[] mant>;

        $i22 = $r15[i53];

        i5 = $i22 + i52;

        i52 = i5 / 10000;

        $r16 = r0.<org.apache.commons.math3.dfp.DfpDec: int[] mant>;

        $i23 = i5 % 10000;

        $r16[i53] = $i23;

        i53 = i53 + 1;

        goto label41;

     label42:
        if i52 == 0 goto label43;

        virtualinvoke r0.<org.apache.commons.math3.dfp.DfpDec: void shiftRight()>();

        $r14 = r0.<org.apache.commons.math3.dfp.DfpDec: int[] mant>;

        $r13 = r0.<org.apache.commons.math3.dfp.DfpDec: int[] mant>;

        $i20 = lengthof $r13;

        $i21 = $i20 - 1;

        $r14[$i21] = i52;

     label43:
        $i54 = r0.<org.apache.commons.math3.dfp.DfpDec: int exp>;

        if $i54 >= -32767 goto label44;

        $r11 = virtualinvoke r0.<org.apache.commons.math3.dfp.DfpDec: org.apache.commons.math3.dfp.DfpField getField()>();

        virtualinvoke $r11.<org.apache.commons.math3.dfp.DfpField: void setIEEEFlagsBits(int)>(8);

        return 8;

     label44:
        $i18 = r0.<org.apache.commons.math3.dfp.DfpDec: int exp>;

        if $i18 <= 32768 goto label45;

        $r10 = virtualinvoke r0.<org.apache.commons.math3.dfp.DfpDec: org.apache.commons.math3.dfp.DfpField getField()>();

        virtualinvoke $r10.<org.apache.commons.math3.dfp.DfpField: void setIEEEFlagsBits(int)>(4);

        return 4;

     label45:
        if i49 != 0 goto label46;

        if i50 == 0 goto label47;

     label46:
        $r9 = virtualinvoke r0.<org.apache.commons.math3.dfp.DfpDec: org.apache.commons.math3.dfp.DfpField getField()>();

        virtualinvoke $r9.<org.apache.commons.math3.dfp.DfpField: void setIEEEFlagsBits(int)>(16);

        return 16;

     label47:
        return 0;
    }

    public org.apache.commons.math3.dfp.Dfp nextAfter(org.apache.commons.math3.dfp.Dfp)
    {
        org.apache.commons.math3.dfp.DfpDec r0;
        org.apache.commons.math3.dfp.Dfp r1, $r5, $r6, $r7, $r8, $r9, $r12, $r13, $r15, $r16, $r17, $r18, $r19, $r21, $r23, $r24, r25, r26, r27, r28, r29, r30, r31, $r32;
        org.apache.commons.math3.dfp.DfpField $r3, $r4, $r10, $r11, $r22;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, z9, $z10, $z11;
        int[] $r14, $r20;

        r0 := @this: org.apache.commons.math3.dfp.DfpDec;

        r1 := @parameter0: org.apache.commons.math3.dfp.Dfp;

        $r3 = virtualinvoke r0.<org.apache.commons.math3.dfp.DfpDec: org.apache.commons.math3.dfp.DfpField getField()>();

        $i0 = virtualinvoke $r3.<org.apache.commons.math3.dfp.DfpField: int getRadixDigits()>();

        $r4 = virtualinvoke r1.<org.apache.commons.math3.dfp.Dfp: org.apache.commons.math3.dfp.DfpField getField()>();

        $i1 = virtualinvoke $r4.<org.apache.commons.math3.dfp.DfpField: int getRadixDigits()>();

        if $i0 == $i1 goto label01;

        $r22 = virtualinvoke r0.<org.apache.commons.math3.dfp.DfpDec: org.apache.commons.math3.dfp.DfpField getField()>();

        virtualinvoke $r22.<org.apache.commons.math3.dfp.DfpField: void setIEEEFlagsBits(int)>(1);

        $r23 = virtualinvoke r0.<org.apache.commons.math3.dfp.DfpDec: org.apache.commons.math3.dfp.Dfp getZero()>();

        r25 = virtualinvoke r0.<org.apache.commons.math3.dfp.DfpDec: org.apache.commons.math3.dfp.Dfp newInstance(org.apache.commons.math3.dfp.Dfp)>($r23);

        r25.<org.apache.commons.math3.dfp.Dfp: byte nans> = 3;

        $r24 = virtualinvoke r0.<org.apache.commons.math3.dfp.DfpDec: org.apache.commons.math3.dfp.Dfp dotrap(int,java.lang.String,org.apache.commons.math3.dfp.Dfp,org.apache.commons.math3.dfp.Dfp)>(1, "nextAfter", r1, r25);

        return $r24;

     label01:
        z9 = 0;

        $z0 = virtualinvoke r0.<org.apache.commons.math3.dfp.DfpDec: boolean lessThan(org.apache.commons.math3.dfp.Dfp)>(r1);

        if $z0 == 0 goto label02;

        z9 = 1;

     label02:
        $z1 = virtualinvoke r0.<org.apache.commons.math3.dfp.DfpDec: boolean equals(java.lang.Object)>(r1);

        if $z1 == 0 goto label03;

        $r21 = virtualinvoke r0.<org.apache.commons.math3.dfp.DfpDec: org.apache.commons.math3.dfp.Dfp newInstance(org.apache.commons.math3.dfp.Dfp)>(r1);

        return $r21;

     label03:
        $r5 = virtualinvoke r0.<org.apache.commons.math3.dfp.DfpDec: org.apache.commons.math3.dfp.Dfp getZero()>();

        $z2 = virtualinvoke r0.<org.apache.commons.math3.dfp.DfpDec: boolean lessThan(org.apache.commons.math3.dfp.Dfp)>($r5);

        if $z2 == 0 goto label06;

        if z9 != 0 goto label04;

        $z10 = 1;

        goto label05;

     label04:
        $z10 = 0;

     label05:
        z9 = $z10;

     label06:
        if z9 == 0 goto label09;

        $i10 = virtualinvoke r0.<org.apache.commons.math3.dfp.DfpDec: int intLog10()>();

        $i11 = virtualinvoke r0.<org.apache.commons.math3.dfp.DfpDec: int getDecimalDigits()>();

        $i12 = $i10 - $i11;

        $i13 = $i12 + 1;

        r26 = virtualinvoke r0.<org.apache.commons.math3.dfp.DfpDec: org.apache.commons.math3.dfp.Dfp power10(int)>($i13);

        r27 = staticinvoke <org.apache.commons.math3.dfp.DfpDec: org.apache.commons.math3.dfp.Dfp copysign(org.apache.commons.math3.dfp.Dfp,org.apache.commons.math3.dfp.Dfp)>(r26, r0);

        $r16 = virtualinvoke r0.<org.apache.commons.math3.dfp.DfpDec: org.apache.commons.math3.dfp.Dfp getZero()>();

        $z7 = virtualinvoke r0.<org.apache.commons.math3.dfp.DfpDec: boolean equals(java.lang.Object)>($r16);

        if $z7 == 0 goto label07;

        $r20 = r0.<org.apache.commons.math3.dfp.DfpDec: int[] mant>;

        $i14 = lengthof $r20;

        $i15 = -32767 - $i14;

        $i16 = $i15 - 1;

        r27 = virtualinvoke r0.<org.apache.commons.math3.dfp.DfpDec: org.apache.commons.math3.dfp.Dfp power10K(int)>($i16);

     label07:
        $r17 = virtualinvoke r0.<org.apache.commons.math3.dfp.DfpDec: org.apache.commons.math3.dfp.Dfp getZero()>();

        $z8 = virtualinvoke r27.<org.apache.commons.math3.dfp.Dfp: boolean equals(java.lang.Object)>($r17);

        if $z8 == 0 goto label08;

        $r18 = virtualinvoke r0.<org.apache.commons.math3.dfp.DfpDec: org.apache.commons.math3.dfp.Dfp getZero()>();

        $r19 = virtualinvoke r0.<org.apache.commons.math3.dfp.DfpDec: org.apache.commons.math3.dfp.Dfp newInstance(org.apache.commons.math3.dfp.Dfp)>($r18);

        r28 = staticinvoke <org.apache.commons.math3.dfp.DfpDec: org.apache.commons.math3.dfp.Dfp copysign(org.apache.commons.math3.dfp.Dfp,org.apache.commons.math3.dfp.Dfp)>($r19, r0);

        goto label14;

     label08:
        r28 = virtualinvoke r0.<org.apache.commons.math3.dfp.DfpDec: org.apache.commons.math3.dfp.Dfp add(org.apache.commons.math3.dfp.Dfp)>(r27);

        goto label14;

     label09:
        $i2 = virtualinvoke r0.<org.apache.commons.math3.dfp.DfpDec: int intLog10()>();

        r29 = virtualinvoke r0.<org.apache.commons.math3.dfp.DfpDec: org.apache.commons.math3.dfp.Dfp power10(int)>($i2);

        r30 = staticinvoke <org.apache.commons.math3.dfp.DfpDec: org.apache.commons.math3.dfp.Dfp copysign(org.apache.commons.math3.dfp.Dfp,org.apache.commons.math3.dfp.Dfp)>(r29, r0);

        $z3 = virtualinvoke r0.<org.apache.commons.math3.dfp.DfpDec: boolean equals(java.lang.Object)>(r30);

        if $z3 == 0 goto label10;

        $i9 = virtualinvoke r0.<org.apache.commons.math3.dfp.DfpDec: int getDecimalDigits()>();

        $r15 = virtualinvoke r0.<org.apache.commons.math3.dfp.DfpDec: org.apache.commons.math3.dfp.Dfp power10(int)>($i9);

        r31 = virtualinvoke r30.<org.apache.commons.math3.dfp.Dfp: org.apache.commons.math3.dfp.Dfp divide(org.apache.commons.math3.dfp.Dfp)>($r15);

        goto label11;

     label10:
        $i3 = virtualinvoke r0.<org.apache.commons.math3.dfp.DfpDec: int getDecimalDigits()>();

        $i4 = $i3 - 1;

        $r6 = virtualinvoke r0.<org.apache.commons.math3.dfp.DfpDec: org.apache.commons.math3.dfp.Dfp power10(int)>($i4);

        r31 = virtualinvoke r30.<org.apache.commons.math3.dfp.Dfp: org.apache.commons.math3.dfp.Dfp divide(org.apache.commons.math3.dfp.Dfp)>($r6);

     label11:
        $r7 = virtualinvoke r0.<org.apache.commons.math3.dfp.DfpDec: org.apache.commons.math3.dfp.Dfp getZero()>();

        $z4 = virtualinvoke r0.<org.apache.commons.math3.dfp.DfpDec: boolean equals(java.lang.Object)>($r7);

        if $z4 == 0 goto label12;

        $r14 = r0.<org.apache.commons.math3.dfp.DfpDec: int[] mant>;

        $i6 = lengthof $r14;

        $i7 = -32767 - $i6;

        $i8 = $i7 - 1;

        r31 = virtualinvoke r0.<org.apache.commons.math3.dfp.DfpDec: org.apache.commons.math3.dfp.Dfp power10K(int)>($i8);

     label12:
        $r8 = virtualinvoke r0.<org.apache.commons.math3.dfp.DfpDec: org.apache.commons.math3.dfp.Dfp getZero()>();

        $z5 = virtualinvoke r31.<org.apache.commons.math3.dfp.Dfp: boolean equals(java.lang.Object)>($r8);

        if $z5 == 0 goto label13;

        $r12 = virtualinvoke r0.<org.apache.commons.math3.dfp.DfpDec: org.apache.commons.math3.dfp.Dfp getZero()>();

        $r13 = virtualinvoke r0.<org.apache.commons.math3.dfp.DfpDec: org.apache.commons.math3.dfp.Dfp newInstance(org.apache.commons.math3.dfp.Dfp)>($r12);

        r28 = staticinvoke <org.apache.commons.math3.dfp.DfpDec: org.apache.commons.math3.dfp.Dfp copysign(org.apache.commons.math3.dfp.Dfp,org.apache.commons.math3.dfp.Dfp)>($r13, r0);

        goto label14;

     label13:
        r28 = virtualinvoke r0.<org.apache.commons.math3.dfp.DfpDec: org.apache.commons.math3.dfp.Dfp subtract(org.apache.commons.math3.dfp.Dfp)>(r31);

     label14:
        $i17 = virtualinvoke r28.<org.apache.commons.math3.dfp.Dfp: int classify()>();

        if $i17 != 1 goto label15;

        $i5 = virtualinvoke r0.<org.apache.commons.math3.dfp.DfpDec: int classify()>();

        if $i5 == 1 goto label15;

        $r11 = virtualinvoke r0.<org.apache.commons.math3.dfp.DfpDec: org.apache.commons.math3.dfp.DfpField getField()>();

        virtualinvoke $r11.<org.apache.commons.math3.dfp.DfpField: void setIEEEFlagsBits(int)>(16);

        r28 = virtualinvoke r0.<org.apache.commons.math3.dfp.DfpDec: org.apache.commons.math3.dfp.Dfp dotrap(int,java.lang.String,org.apache.commons.math3.dfp.Dfp,org.apache.commons.math3.dfp.Dfp)>(16, "nextAfter", r1, r28);

     label15:
        $r32 = virtualinvoke r0.<org.apache.commons.math3.dfp.DfpDec: org.apache.commons.math3.dfp.Dfp getZero()>();

        $z11 = virtualinvoke r28.<org.apache.commons.math3.dfp.Dfp: boolean equals(java.lang.Object)>($r32);

        if $z11 == 0 goto label16;

        $r9 = virtualinvoke r0.<org.apache.commons.math3.dfp.DfpDec: org.apache.commons.math3.dfp.Dfp getZero()>();

        $z6 = virtualinvoke r0.<org.apache.commons.math3.dfp.DfpDec: boolean equals(java.lang.Object)>($r9);

        if $z6 != 0 goto label16;

        $r10 = virtualinvoke r0.<org.apache.commons.math3.dfp.DfpDec: org.apache.commons.math3.dfp.DfpField getField()>();

        virtualinvoke $r10.<org.apache.commons.math3.dfp.DfpField: void setIEEEFlagsBits(int)>(16);

        r28 = virtualinvoke r0.<org.apache.commons.math3.dfp.DfpDec: org.apache.commons.math3.dfp.Dfp dotrap(int,java.lang.String,org.apache.commons.math3.dfp.Dfp,org.apache.commons.math3.dfp.Dfp)>(16, "nextAfter", r1, r28);

     label16:
        return r28;
    }
}
