public final class org.apache.commons.lang.CharRange extends java.lang.Object implements java.io.Serializable
{
    private static final long serialVersionUID;
    private final char start;
    private final char end;
    private final boolean negated;
    private transient java.lang.String iToString;

    public static org.apache.commons.lang.CharRange is(char)
    {
        char c0;
        org.apache.commons.lang.CharRange $r0;

        c0 := @parameter0: char;

        $r0 = new org.apache.commons.lang.CharRange;

        specialinvoke $r0.<org.apache.commons.lang.CharRange: void <init>(char,char,boolean)>(c0, c0, 0);

        return $r0;
    }

    public static org.apache.commons.lang.CharRange isNot(char)
    {
        char c0;
        org.apache.commons.lang.CharRange $r0;

        c0 := @parameter0: char;

        $r0 = new org.apache.commons.lang.CharRange;

        specialinvoke $r0.<org.apache.commons.lang.CharRange: void <init>(char,char,boolean)>(c0, c0, 1);

        return $r0;
    }

    public static org.apache.commons.lang.CharRange isIn(char, char)
    {
        char c0, c1;
        org.apache.commons.lang.CharRange $r0;

        c0 := @parameter0: char;

        c1 := @parameter1: char;

        $r0 = new org.apache.commons.lang.CharRange;

        specialinvoke $r0.<org.apache.commons.lang.CharRange: void <init>(char,char,boolean)>(c0, c1, 0);

        return $r0;
    }

    public static org.apache.commons.lang.CharRange isNotIn(char, char)
    {
        char c0, c1;
        org.apache.commons.lang.CharRange $r0;

        c0 := @parameter0: char;

        c1 := @parameter1: char;

        $r0 = new org.apache.commons.lang.CharRange;

        specialinvoke $r0.<org.apache.commons.lang.CharRange: void <init>(char,char,boolean)>(c0, c1, 1);

        return $r0;
    }

    public void <init>(char)
    {
        org.apache.commons.lang.CharRange r0;
        char c0;

        r0 := @this: org.apache.commons.lang.CharRange;

        c0 := @parameter0: char;

        specialinvoke r0.<org.apache.commons.lang.CharRange: void <init>(char,char,boolean)>(c0, c0, 0);

        return;
    }

    public void <init>(char, boolean)
    {
        org.apache.commons.lang.CharRange r0;
        char c0;
        boolean z0;

        r0 := @this: org.apache.commons.lang.CharRange;

        c0 := @parameter0: char;

        z0 := @parameter1: boolean;

        specialinvoke r0.<org.apache.commons.lang.CharRange: void <init>(char,char,boolean)>(c0, c0, z0);

        return;
    }

    public void <init>(char, char)
    {
        org.apache.commons.lang.CharRange r0;
        char c0, c1;

        r0 := @this: org.apache.commons.lang.CharRange;

        c0 := @parameter0: char;

        c1 := @parameter1: char;

        specialinvoke r0.<org.apache.commons.lang.CharRange: void <init>(char,char,boolean)>(c0, c1, 0);

        return;
    }

    public void <init>(char, char, boolean)
    {
        org.apache.commons.lang.CharRange r0;
        boolean z0;
        char c0, c1, c2;

        r0 := @this: org.apache.commons.lang.CharRange;

        c1 := @parameter0: char;

        c2 := @parameter1: char;

        z0 := @parameter2: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        if c1 <= c2 goto label1;

        c0 = c1;

        c1 = c2;

        c2 = c0;

     label1:
        r0.<org.apache.commons.lang.CharRange: char start> = c1;

        r0.<org.apache.commons.lang.CharRange: char end> = c2;

        r0.<org.apache.commons.lang.CharRange: boolean negated> = z0;

        return;
    }

    public char getStart()
    {
        org.apache.commons.lang.CharRange r0;
        char $c0;

        r0 := @this: org.apache.commons.lang.CharRange;

        $c0 = r0.<org.apache.commons.lang.CharRange: char start>;

        return $c0;
    }

    public char getEnd()
    {
        org.apache.commons.lang.CharRange r0;
        char $c0;

        r0 := @this: org.apache.commons.lang.CharRange;

        $c0 = r0.<org.apache.commons.lang.CharRange: char end>;

        return $c0;
    }

    public boolean isNegated()
    {
        org.apache.commons.lang.CharRange r0;
        boolean $z0;

        r0 := @this: org.apache.commons.lang.CharRange;

        $z0 = r0.<org.apache.commons.lang.CharRange: boolean negated>;

        return $z0;
    }

    public boolean contains(char)
    {
        org.apache.commons.lang.CharRange r0;
        char c0, $c1, $c2;
        boolean $z0, $z1, $z2;

        r0 := @this: org.apache.commons.lang.CharRange;

        c0 := @parameter0: char;

        $c1 = r0.<org.apache.commons.lang.CharRange: char start>;

        if c0 < $c1 goto label1;

        $c2 = r0.<org.apache.commons.lang.CharRange: char end>;

        if c0 > $c2 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        $z1 = r0.<org.apache.commons.lang.CharRange: boolean negated>;

        if $z0 == $z1 goto label3;

        $z2 = 1;

        goto label4;

     label3:
        $z2 = 0;

     label4:
        return $z2;
    }

    public boolean contains(org.apache.commons.lang.CharRange)
    {
        org.apache.commons.lang.CharRange r0, r1;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        char $c0, $c1, $c2, $c3, $c4, $c5, $c6, $c7, $c8, $c9, $c10, $c11, $c12, $c13;
        java.lang.IllegalArgumentException $r2;

        r0 := @this: org.apache.commons.lang.CharRange;

        r1 := @parameter0: org.apache.commons.lang.CharRange;

        if r1 != null goto label01;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("The Range must not be null");

        throw $r2;

     label01:
        $z0 = r0.<org.apache.commons.lang.CharRange: boolean negated>;

        if $z0 == 0 goto label08;

        $z2 = r1.<org.apache.commons.lang.CharRange: boolean negated>;

        if $z2 == 0 goto label04;

        $c11 = r0.<org.apache.commons.lang.CharRange: char start>;

        $c10 = r1.<org.apache.commons.lang.CharRange: char start>;

        if $c11 < $c10 goto label02;

        $c13 = r0.<org.apache.commons.lang.CharRange: char end>;

        $c12 = r1.<org.apache.commons.lang.CharRange: char end>;

        if $c13 > $c12 goto label02;

        $z3 = 1;

        goto label03;

     label02:
        $z3 = 0;

     label03:
        return $z3;

     label04:
        $c7 = r1.<org.apache.commons.lang.CharRange: char end>;

        $c6 = r0.<org.apache.commons.lang.CharRange: char start>;

        if $c7 < $c6 goto label05;

        $c9 = r1.<org.apache.commons.lang.CharRange: char start>;

        $c8 = r0.<org.apache.commons.lang.CharRange: char end>;

        if $c9 <= $c8 goto label06;

     label05:
        $z4 = 1;

        goto label07;

     label06:
        $z4 = 0;

     label07:
        return $z4;

     label08:
        $z1 = r1.<org.apache.commons.lang.CharRange: boolean negated>;

        if $z1 == 0 goto label11;

        $c4 = r0.<org.apache.commons.lang.CharRange: char start>;

        if $c4 != 0 goto label09;

        $c5 = r0.<org.apache.commons.lang.CharRange: char end>;

        if $c5 != 65535 goto label09;

        $z5 = 1;

        goto label10;

     label09:
        $z5 = 0;

     label10:
        return $z5;

     label11:
        $c1 = r0.<org.apache.commons.lang.CharRange: char start>;

        $c0 = r1.<org.apache.commons.lang.CharRange: char start>;

        if $c1 > $c0 goto label12;

        $c3 = r0.<org.apache.commons.lang.CharRange: char end>;

        $c2 = r1.<org.apache.commons.lang.CharRange: char end>;

        if $c3 < $c2 goto label12;

        $z6 = 1;

        goto label13;

     label12:
        $z6 = 0;

     label13:
        return $z6;
    }

    public boolean equals(java.lang.Object)
    {
        org.apache.commons.lang.CharRange r0, r2;
        java.lang.Object r1;
        boolean $z0, $z1, $z2, $z3;
        char $c0, $c1, $c2, $c3;

        r0 := @this: org.apache.commons.lang.CharRange;

        r1 := @parameter0: java.lang.Object;

        if r1 != r0 goto label1;

        return 1;

     label1:
        $z0 = r1 instanceof org.apache.commons.lang.CharRange;

        if $z0 != 0 goto label2;

        return 0;

     label2:
        r2 = (org.apache.commons.lang.CharRange) r1;

        $c1 = r0.<org.apache.commons.lang.CharRange: char start>;

        $c0 = r2.<org.apache.commons.lang.CharRange: char start>;

        if $c1 != $c0 goto label3;

        $c3 = r0.<org.apache.commons.lang.CharRange: char end>;

        $c2 = r2.<org.apache.commons.lang.CharRange: char end>;

        if $c3 != $c2 goto label3;

        $z2 = r0.<org.apache.commons.lang.CharRange: boolean negated>;

        $z1 = r2.<org.apache.commons.lang.CharRange: boolean negated>;

        if $z2 != $z1 goto label3;

        $z3 = 1;

        goto label4;

     label3:
        $z3 = 0;

     label4:
        return $z3;
    }

    public int hashCode()
    {
        org.apache.commons.lang.CharRange r0;
        char $c0, $c1;
        int $i2, $i3, $i4, $i5;
        boolean $z0;
        byte $b6;

        r0 := @this: org.apache.commons.lang.CharRange;

        $c0 = r0.<org.apache.commons.lang.CharRange: char start>;

        $i3 = 83 + $c0;

        $c1 = r0.<org.apache.commons.lang.CharRange: char end>;

        $i2 = 7 * $c1;

        $i4 = $i3 + $i2;

        $z0 = r0.<org.apache.commons.lang.CharRange: boolean negated>;

        if $z0 == 0 goto label1;

        $b6 = 1;

        goto label2;

     label1:
        $b6 = 0;

     label2:
        $i5 = $i4 + $b6;

        return $i5;
    }

    public java.lang.String toString()
    {
        org.apache.commons.lang.CharRange r0;
        java.lang.String $r2, $r5, $r9;
        org.apache.commons.lang.text.StrBuilder $r3;
        boolean $z0;
        char $c0, $c1, $c2, $c3;

        r0 := @this: org.apache.commons.lang.CharRange;

        $r2 = r0.<org.apache.commons.lang.CharRange: java.lang.String iToString>;

        if $r2 != null goto label3;

        $r3 = new org.apache.commons.lang.text.StrBuilder;

        specialinvoke $r3.<org.apache.commons.lang.text.StrBuilder: void <init>(int)>(4);

        $z0 = virtualinvoke r0.<org.apache.commons.lang.CharRange: boolean isNegated()>();

        if $z0 == 0 goto label1;

        virtualinvoke $r3.<org.apache.commons.lang.text.StrBuilder: org.apache.commons.lang.text.StrBuilder append(char)>(94);

     label1:
        $c0 = r0.<org.apache.commons.lang.CharRange: char start>;

        virtualinvoke $r3.<org.apache.commons.lang.text.StrBuilder: org.apache.commons.lang.text.StrBuilder append(char)>($c0);

        $c2 = r0.<org.apache.commons.lang.CharRange: char start>;

        $c1 = r0.<org.apache.commons.lang.CharRange: char end>;

        if $c2 == $c1 goto label2;

        virtualinvoke $r3.<org.apache.commons.lang.text.StrBuilder: org.apache.commons.lang.text.StrBuilder append(char)>(45);

        $c3 = r0.<org.apache.commons.lang.CharRange: char end>;

        virtualinvoke $r3.<org.apache.commons.lang.text.StrBuilder: org.apache.commons.lang.text.StrBuilder append(char)>($c3);

     label2:
        $r5 = virtualinvoke $r3.<org.apache.commons.lang.text.StrBuilder: java.lang.String toString()>();

        r0.<org.apache.commons.lang.CharRange: java.lang.String iToString> = $r5;

     label3:
        $r9 = r0.<org.apache.commons.lang.CharRange: java.lang.String iToString>;

        return $r9;
    }

    public java.util.Iterator iterator()
    {
        org.apache.commons.lang.CharRange r0;
        org.apache.commons.lang.CharRange$CharacterIterator $r1;

        r0 := @this: org.apache.commons.lang.CharRange;

        $r1 = new org.apache.commons.lang.CharRange$CharacterIterator;

        specialinvoke $r1.<org.apache.commons.lang.CharRange$CharacterIterator: void <init>(org.apache.commons.lang.CharRange,org.apache.commons.lang.CharRange$1)>(r0, null);

        return $r1;
    }

    static boolean access$100(org.apache.commons.lang.CharRange)
    {
        org.apache.commons.lang.CharRange r0;
        boolean $z0;

        r0 := @parameter0: org.apache.commons.lang.CharRange;

        $z0 = r0.<org.apache.commons.lang.CharRange: boolean negated>;

        return $z0;
    }

    static char access$200(org.apache.commons.lang.CharRange)
    {
        org.apache.commons.lang.CharRange r0;
        char $c0;

        r0 := @parameter0: org.apache.commons.lang.CharRange;

        $c0 = r0.<org.apache.commons.lang.CharRange: char start>;

        return $c0;
    }

    static char access$300(org.apache.commons.lang.CharRange)
    {
        org.apache.commons.lang.CharRange r0;
        char $c0;

        r0 := @parameter0: org.apache.commons.lang.CharRange;

        $c0 = r0.<org.apache.commons.lang.CharRange: char end>;

        return $c0;
    }

    public static void <clinit>()
    {
        <org.apache.commons.lang.CharRange: long serialVersionUID> = 8270183163158333422L;

        return;
    }
}
