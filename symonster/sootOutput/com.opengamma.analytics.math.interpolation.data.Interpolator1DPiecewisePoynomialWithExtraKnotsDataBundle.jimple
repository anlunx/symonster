public class com.opengamma.analytics.math.interpolation.data.Interpolator1DPiecewisePoynomialWithExtraKnotsDataBundle extends java.lang.Object implements com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle
{
    private final com.opengamma.analytics.math.interpolation.PiecewisePolynomialResult _poly;
    private final com.opengamma.analytics.math.interpolation.PiecewisePolynomialResult[] _polyUp;
    private final com.opengamma.analytics.math.interpolation.PiecewisePolynomialResult[] _polyDw;
    private final com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle _underlyingData;
    private static final double EPS;
    private static final double SMALL;

    public void <init>(com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle, com.opengamma.analytics.math.interpolation.PiecewisePolynomialInterpolator)
    {
        com.opengamma.analytics.math.interpolation.data.Interpolator1DPiecewisePoynomialWithExtraKnotsDataBundle r0;
        com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle r1;
        com.opengamma.analytics.math.interpolation.PiecewisePolynomialInterpolator r2;
        double[] r3, r4, r5, $r8, $r9, $r14, $r17;
        int i0, $i3, $i4, i5;
        com.opengamma.analytics.math.interpolation.PiecewisePolynomialResult $r10, $r15, $r18;
        com.opengamma.analytics.math.interpolation.PiecewisePolynomialResult[] $r11, $r12, $r13, $r16;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9;
        byte $b1, $b2;

        r0 := @this: com.opengamma.analytics.math.interpolation.data.Interpolator1DPiecewisePoynomialWithExtraKnotsDataBundle;

        r1 := @parameter0: com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle;

        r2 := @parameter1: com.opengamma.analytics.math.interpolation.PiecewisePolynomialInterpolator;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "underlying data");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, "method");

        r0.<com.opengamma.analytics.math.interpolation.data.Interpolator1DPiecewisePoynomialWithExtraKnotsDataBundle: com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle _underlyingData> = r1;

        $r8 = interfaceinvoke r1.<com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle: double[] getKeys()>();

        $r9 = interfaceinvoke r1.<com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle: double[] getValues()>();

        $r10 = virtualinvoke r2.<com.opengamma.analytics.math.interpolation.PiecewisePolynomialInterpolator: com.opengamma.analytics.math.interpolation.PiecewisePolynomialResult interpolate(double[],double[])>($r8, $r9);

        r0.<com.opengamma.analytics.math.interpolation.data.Interpolator1DPiecewisePoynomialWithExtraKnotsDataBundle: com.opengamma.analytics.math.interpolation.PiecewisePolynomialResult _poly> = $r10;

        r3 = interfaceinvoke r1.<com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle: double[] getValues()>();

        i0 = lengthof r3;

        $r11 = newarray (com.opengamma.analytics.math.interpolation.PiecewisePolynomialResult)[i0];

        r0.<com.opengamma.analytics.math.interpolation.data.Interpolator1DPiecewisePoynomialWithExtraKnotsDataBundle: com.opengamma.analytics.math.interpolation.PiecewisePolynomialResult[] _polyUp> = $r11;

        $r12 = newarray (com.opengamma.analytics.math.interpolation.PiecewisePolynomialResult)[i0];

        r0.<com.opengamma.analytics.math.interpolation.data.Interpolator1DPiecewisePoynomialWithExtraKnotsDataBundle: com.opengamma.analytics.math.interpolation.PiecewisePolynomialResult[] _polyDw> = $r12;

        r4 = staticinvoke <java.util.Arrays: double[] copyOf(double[],int)>(r3, i0);

        r5 = staticinvoke <java.util.Arrays: double[] copyOf(double[],int)>(r3, i0);

        i5 = 0;

     label1:
        if i5 >= i0 goto label6;

        $i4 = i5;

        $d0 = r3[i5];

        $d1 = staticinvoke <java.lang.Math: double abs(double)>($d0);

        $b1 = $d1 cmpg 1.0E-14;

        if $b1 >= 0 goto label2;

        $d8 = 1.0E-7;

        goto label3;

     label2:
        $d2 = r3[i5];

        $d8 = $d2 * 1.0000001;

     label3:
        r4[$i4] = $d8;

        $i3 = i5;

        $d3 = r3[i5];

        $d4 = staticinvoke <java.lang.Math: double abs(double)>($d3);

        $b2 = $d4 cmpg 1.0E-14;

        if $b2 >= 0 goto label4;

        $d9 = -1.0E-7;

        goto label5;

     label4:
        $d5 = r3[i5];

        $d9 = $d5 * 0.9999999;

     label5:
        r5[$i3] = $d9;

        $r13 = r0.<com.opengamma.analytics.math.interpolation.data.Interpolator1DPiecewisePoynomialWithExtraKnotsDataBundle: com.opengamma.analytics.math.interpolation.PiecewisePolynomialResult[] _polyUp>;

        $r14 = interfaceinvoke r1.<com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle: double[] getKeys()>();

        $r15 = virtualinvoke r2.<com.opengamma.analytics.math.interpolation.PiecewisePolynomialInterpolator: com.opengamma.analytics.math.interpolation.PiecewisePolynomialResult interpolate(double[],double[])>($r14, r4);

        $r13[i5] = $r15;

        $r16 = r0.<com.opengamma.analytics.math.interpolation.data.Interpolator1DPiecewisePoynomialWithExtraKnotsDataBundle: com.opengamma.analytics.math.interpolation.PiecewisePolynomialResult[] _polyDw>;

        $r17 = interfaceinvoke r1.<com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle: double[] getKeys()>();

        $r18 = virtualinvoke r2.<com.opengamma.analytics.math.interpolation.PiecewisePolynomialInterpolator: com.opengamma.analytics.math.interpolation.PiecewisePolynomialResult interpolate(double[],double[])>($r17, r5);

        $r16[i5] = $r18;

        $d6 = r3[i5];

        r4[i5] = $d6;

        $d7 = r3[i5];

        r5[i5] = $d7;

        i5 = i5 + 1;

        goto label1;

     label6:
        return;
    }

    public com.opengamma.analytics.math.interpolation.PiecewisePolynomialResult getPiecewisePolynomialResult()
    {
        com.opengamma.analytics.math.interpolation.data.Interpolator1DPiecewisePoynomialWithExtraKnotsDataBundle r0;
        com.opengamma.analytics.math.interpolation.PiecewisePolynomialResult $r1;

        r0 := @this: com.opengamma.analytics.math.interpolation.data.Interpolator1DPiecewisePoynomialWithExtraKnotsDataBundle;

        $r1 = r0.<com.opengamma.analytics.math.interpolation.data.Interpolator1DPiecewisePoynomialWithExtraKnotsDataBundle: com.opengamma.analytics.math.interpolation.PiecewisePolynomialResult _poly>;

        return $r1;
    }

    public com.opengamma.analytics.math.interpolation.PiecewisePolynomialResult[] getPiecewisePolynomialResultUp()
    {
        com.opengamma.analytics.math.interpolation.data.Interpolator1DPiecewisePoynomialWithExtraKnotsDataBundle r0;
        com.opengamma.analytics.math.interpolation.PiecewisePolynomialResult[] $r1;

        r0 := @this: com.opengamma.analytics.math.interpolation.data.Interpolator1DPiecewisePoynomialWithExtraKnotsDataBundle;

        $r1 = r0.<com.opengamma.analytics.math.interpolation.data.Interpolator1DPiecewisePoynomialWithExtraKnotsDataBundle: com.opengamma.analytics.math.interpolation.PiecewisePolynomialResult[] _polyUp>;

        return $r1;
    }

    public com.opengamma.analytics.math.interpolation.PiecewisePolynomialResult[] getPiecewisePolynomialResultDw()
    {
        com.opengamma.analytics.math.interpolation.data.Interpolator1DPiecewisePoynomialWithExtraKnotsDataBundle r0;
        com.opengamma.analytics.math.interpolation.PiecewisePolynomialResult[] $r1;

        r0 := @this: com.opengamma.analytics.math.interpolation.data.Interpolator1DPiecewisePoynomialWithExtraKnotsDataBundle;

        $r1 = r0.<com.opengamma.analytics.math.interpolation.data.Interpolator1DPiecewisePoynomialWithExtraKnotsDataBundle: com.opengamma.analytics.math.interpolation.PiecewisePolynomialResult[] _polyDw>;

        return $r1;
    }

    public double getEps()
    {
        com.opengamma.analytics.math.interpolation.data.Interpolator1DPiecewisePoynomialWithExtraKnotsDataBundle r0;

        r0 := @this: com.opengamma.analytics.math.interpolation.data.Interpolator1DPiecewisePoynomialWithExtraKnotsDataBundle;

        return 1.0E-7;
    }

    public double getSmall()
    {
        com.opengamma.analytics.math.interpolation.data.Interpolator1DPiecewisePoynomialWithExtraKnotsDataBundle r0;

        r0 := @this: com.opengamma.analytics.math.interpolation.data.Interpolator1DPiecewisePoynomialWithExtraKnotsDataBundle;

        return 1.0E-14;
    }

    public double[] getBreakpointsX()
    {
        com.opengamma.analytics.math.interpolation.data.Interpolator1DPiecewisePoynomialWithExtraKnotsDataBundle r0;
        com.opengamma.analytics.math.interpolation.PiecewisePolynomialResult $r1;
        com.opengamma.analytics.math.matrix.DoubleMatrix1D $r2;
        double[] $r3;

        r0 := @this: com.opengamma.analytics.math.interpolation.data.Interpolator1DPiecewisePoynomialWithExtraKnotsDataBundle;

        $r1 = r0.<com.opengamma.analytics.math.interpolation.data.Interpolator1DPiecewisePoynomialWithExtraKnotsDataBundle: com.opengamma.analytics.math.interpolation.PiecewisePolynomialResult _poly>;

        $r2 = virtualinvoke $r1.<com.opengamma.analytics.math.interpolation.PiecewisePolynomialResult: com.opengamma.analytics.math.matrix.DoubleMatrix1D getKnots()>();

        $r3 = virtualinvoke $r2.<com.opengamma.analytics.math.matrix.DoubleMatrix1D: double[] getData()>();

        return $r3;
    }

    public double[] getBreakPointsY()
    {
        com.opengamma.analytics.math.interpolation.data.Interpolator1DPiecewisePoynomialWithExtraKnotsDataBundle r0;
        int i0, i1, $i2, $i3, $i4, i5;
        double[][] r1;
        double[] r2, $r7, $r10;
        com.opengamma.analytics.math.interpolation.PiecewisePolynomialResult $r3, $r5;
        com.opengamma.analytics.math.matrix.DoubleMatrix1D $r4;
        com.opengamma.analytics.math.matrix.DoubleMatrix2D $r6;
        com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle $r8;
        java.lang.Double $r9;
        double $d0, $d1;

        r0 := @this: com.opengamma.analytics.math.interpolation.data.Interpolator1DPiecewisePoynomialWithExtraKnotsDataBundle;

        $r3 = r0.<com.opengamma.analytics.math.interpolation.data.Interpolator1DPiecewisePoynomialWithExtraKnotsDataBundle: com.opengamma.analytics.math.interpolation.PiecewisePolynomialResult _poly>;

        $r4 = virtualinvoke $r3.<com.opengamma.analytics.math.interpolation.PiecewisePolynomialResult: com.opengamma.analytics.math.matrix.DoubleMatrix1D getKnots()>();

        i0 = virtualinvoke $r4.<com.opengamma.analytics.math.matrix.DoubleMatrix1D: int getNumberOfElements()>();

        $r5 = r0.<com.opengamma.analytics.math.interpolation.data.Interpolator1DPiecewisePoynomialWithExtraKnotsDataBundle: com.opengamma.analytics.math.interpolation.PiecewisePolynomialResult _poly>;

        $r6 = virtualinvoke $r5.<com.opengamma.analytics.math.interpolation.PiecewisePolynomialResult: com.opengamma.analytics.math.matrix.DoubleMatrix2D getCoefMatrix()>();

        r1 = virtualinvoke $r6.<com.opengamma.analytics.math.matrix.DoubleMatrix2D: double[][] getData()>();

        $r7 = r1[0];

        i1 = lengthof $r7;

        r2 = newarray (double)[i0];

        i5 = 0;

     label1:
        $i2 = i0 - 1;

        if i5 >= $i2 goto label2;

        $r10 = r1[i5];

        $i4 = i1 - 1;

        $d1 = $r10[$i4];

        r2[i5] = $d1;

        i5 = i5 + 1;

        goto label1;

     label2:
        $i3 = i0 - 1;

        $r8 = r0.<com.opengamma.analytics.math.interpolation.data.Interpolator1DPiecewisePoynomialWithExtraKnotsDataBundle: com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle _underlyingData>;

        $r9 = interfaceinvoke $r8.<com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle: java.lang.Double lastValue()>();

        $d0 = virtualinvoke $r9.<java.lang.Double: double doubleValue()>();

        r2[$i3] = $d0;

        return r2;
    }

    public boolean containsKey(java.lang.Double)
    {
        com.opengamma.analytics.math.interpolation.data.Interpolator1DPiecewisePoynomialWithExtraKnotsDataBundle r0;
        java.lang.Double r1;
        com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle $r2;
        boolean $z0;

        r0 := @this: com.opengamma.analytics.math.interpolation.data.Interpolator1DPiecewisePoynomialWithExtraKnotsDataBundle;

        r1 := @parameter0: java.lang.Double;

        $r2 = r0.<com.opengamma.analytics.math.interpolation.data.Interpolator1DPiecewisePoynomialWithExtraKnotsDataBundle: com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle _underlyingData>;

        $z0 = interfaceinvoke $r2.<com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle: boolean containsKey(java.lang.Double)>(r1);

        return $z0;
    }

    public java.lang.Double firstKey()
    {
        com.opengamma.analytics.math.interpolation.data.Interpolator1DPiecewisePoynomialWithExtraKnotsDataBundle r0;
        com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle $r1;
        java.lang.Double $r2;

        r0 := @this: com.opengamma.analytics.math.interpolation.data.Interpolator1DPiecewisePoynomialWithExtraKnotsDataBundle;

        $r1 = r0.<com.opengamma.analytics.math.interpolation.data.Interpolator1DPiecewisePoynomialWithExtraKnotsDataBundle: com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle _underlyingData>;

        $r2 = interfaceinvoke $r1.<com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle: java.lang.Double firstKey()>();

        return $r2;
    }

    public java.lang.Double firstValue()
    {
        com.opengamma.analytics.math.interpolation.data.Interpolator1DPiecewisePoynomialWithExtraKnotsDataBundle r0;
        com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle $r1;
        java.lang.Double $r2;

        r0 := @this: com.opengamma.analytics.math.interpolation.data.Interpolator1DPiecewisePoynomialWithExtraKnotsDataBundle;

        $r1 = r0.<com.opengamma.analytics.math.interpolation.data.Interpolator1DPiecewisePoynomialWithExtraKnotsDataBundle: com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle _underlyingData>;

        $r2 = interfaceinvoke $r1.<com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle: java.lang.Double firstValue()>();

        return $r2;
    }

    public java.lang.Double get(java.lang.Double)
    {
        com.opengamma.analytics.math.interpolation.data.Interpolator1DPiecewisePoynomialWithExtraKnotsDataBundle r0;
        java.lang.Double r1, $r3;
        com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle $r2;

        r0 := @this: com.opengamma.analytics.math.interpolation.data.Interpolator1DPiecewisePoynomialWithExtraKnotsDataBundle;

        r1 := @parameter0: java.lang.Double;

        $r2 = r0.<com.opengamma.analytics.math.interpolation.data.Interpolator1DPiecewisePoynomialWithExtraKnotsDataBundle: com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle _underlyingData>;

        $r3 = interfaceinvoke $r2.<com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle: java.lang.Double get(java.lang.Double)>(r1);

        return $r3;
    }

    public com.opengamma.analytics.math.interpolation.data.InterpolationBoundedValues getBoundedValues(java.lang.Double)
    {
        com.opengamma.analytics.math.interpolation.data.Interpolator1DPiecewisePoynomialWithExtraKnotsDataBundle r0;
        java.lang.Double r1;
        com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle $r2;
        com.opengamma.analytics.math.interpolation.data.InterpolationBoundedValues $r3;

        r0 := @this: com.opengamma.analytics.math.interpolation.data.Interpolator1DPiecewisePoynomialWithExtraKnotsDataBundle;

        r1 := @parameter0: java.lang.Double;

        $r2 = r0.<com.opengamma.analytics.math.interpolation.data.Interpolator1DPiecewisePoynomialWithExtraKnotsDataBundle: com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle _underlyingData>;

        $r3 = interfaceinvoke $r2.<com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle: com.opengamma.analytics.math.interpolation.data.InterpolationBoundedValues getBoundedValues(java.lang.Double)>(r1);

        return $r3;
    }

    public double[] getKeys()
    {
        com.opengamma.analytics.math.interpolation.data.Interpolator1DPiecewisePoynomialWithExtraKnotsDataBundle r0;
        com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle $r1;
        double[] $r2;

        r0 := @this: com.opengamma.analytics.math.interpolation.data.Interpolator1DPiecewisePoynomialWithExtraKnotsDataBundle;

        $r1 = r0.<com.opengamma.analytics.math.interpolation.data.Interpolator1DPiecewisePoynomialWithExtraKnotsDataBundle: com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle _underlyingData>;

        $r2 = interfaceinvoke $r1.<com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle: double[] getKeys()>();

        return $r2;
    }

    public int getLowerBoundIndex(java.lang.Double)
    {
        com.opengamma.analytics.math.interpolation.data.Interpolator1DPiecewisePoynomialWithExtraKnotsDataBundle r0;
        java.lang.Double r1;
        com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle $r2;
        int $i0;

        r0 := @this: com.opengamma.analytics.math.interpolation.data.Interpolator1DPiecewisePoynomialWithExtraKnotsDataBundle;

        r1 := @parameter0: java.lang.Double;

        $r2 = r0.<com.opengamma.analytics.math.interpolation.data.Interpolator1DPiecewisePoynomialWithExtraKnotsDataBundle: com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle _underlyingData>;

        $i0 = interfaceinvoke $r2.<com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle: int getLowerBoundIndex(java.lang.Double)>(r1);

        return $i0;
    }

    public java.lang.Double getLowerBoundKey(java.lang.Double)
    {
        com.opengamma.analytics.math.interpolation.data.Interpolator1DPiecewisePoynomialWithExtraKnotsDataBundle r0;
        java.lang.Double r1, $r3;
        com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle $r2;

        r0 := @this: com.opengamma.analytics.math.interpolation.data.Interpolator1DPiecewisePoynomialWithExtraKnotsDataBundle;

        r1 := @parameter0: java.lang.Double;

        $r2 = r0.<com.opengamma.analytics.math.interpolation.data.Interpolator1DPiecewisePoynomialWithExtraKnotsDataBundle: com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle _underlyingData>;

        $r3 = interfaceinvoke $r2.<com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle: java.lang.Double getLowerBoundKey(java.lang.Double)>(r1);

        return $r3;
    }

    public double[] getValues()
    {
        com.opengamma.analytics.math.interpolation.data.Interpolator1DPiecewisePoynomialWithExtraKnotsDataBundle r0;
        com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle $r1;
        double[] $r2;

        r0 := @this: com.opengamma.analytics.math.interpolation.data.Interpolator1DPiecewisePoynomialWithExtraKnotsDataBundle;

        $r1 = r0.<com.opengamma.analytics.math.interpolation.data.Interpolator1DPiecewisePoynomialWithExtraKnotsDataBundle: com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle _underlyingData>;

        $r2 = interfaceinvoke $r1.<com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle: double[] getValues()>();

        return $r2;
    }

    public java.lang.Double higherKey(java.lang.Double)
    {
        com.opengamma.analytics.math.interpolation.data.Interpolator1DPiecewisePoynomialWithExtraKnotsDataBundle r0;
        java.lang.Double r1, $r3;
        com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle $r2;

        r0 := @this: com.opengamma.analytics.math.interpolation.data.Interpolator1DPiecewisePoynomialWithExtraKnotsDataBundle;

        r1 := @parameter0: java.lang.Double;

        $r2 = r0.<com.opengamma.analytics.math.interpolation.data.Interpolator1DPiecewisePoynomialWithExtraKnotsDataBundle: com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle _underlyingData>;

        $r3 = interfaceinvoke $r2.<com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle: java.lang.Double higherKey(java.lang.Double)>(r1);

        return $r3;
    }

    public java.lang.Double higherValue(java.lang.Double)
    {
        com.opengamma.analytics.math.interpolation.data.Interpolator1DPiecewisePoynomialWithExtraKnotsDataBundle r0;
        java.lang.Double r1, $r3;
        com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle $r2;

        r0 := @this: com.opengamma.analytics.math.interpolation.data.Interpolator1DPiecewisePoynomialWithExtraKnotsDataBundle;

        r1 := @parameter0: java.lang.Double;

        $r2 = r0.<com.opengamma.analytics.math.interpolation.data.Interpolator1DPiecewisePoynomialWithExtraKnotsDataBundle: com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle _underlyingData>;

        $r3 = interfaceinvoke $r2.<com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle: java.lang.Double higherValue(java.lang.Double)>(r1);

        return $r3;
    }

    public java.lang.Double lastKey()
    {
        com.opengamma.analytics.math.interpolation.data.Interpolator1DPiecewisePoynomialWithExtraKnotsDataBundle r0;
        com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle $r1;
        java.lang.Double $r2;

        r0 := @this: com.opengamma.analytics.math.interpolation.data.Interpolator1DPiecewisePoynomialWithExtraKnotsDataBundle;

        $r1 = r0.<com.opengamma.analytics.math.interpolation.data.Interpolator1DPiecewisePoynomialWithExtraKnotsDataBundle: com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle _underlyingData>;

        $r2 = interfaceinvoke $r1.<com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle: java.lang.Double lastKey()>();

        return $r2;
    }

    public java.lang.Double lastValue()
    {
        com.opengamma.analytics.math.interpolation.data.Interpolator1DPiecewisePoynomialWithExtraKnotsDataBundle r0;
        com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle $r1;
        java.lang.Double $r2;

        r0 := @this: com.opengamma.analytics.math.interpolation.data.Interpolator1DPiecewisePoynomialWithExtraKnotsDataBundle;

        $r1 = r0.<com.opengamma.analytics.math.interpolation.data.Interpolator1DPiecewisePoynomialWithExtraKnotsDataBundle: com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle _underlyingData>;

        $r2 = interfaceinvoke $r1.<com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle: java.lang.Double lastValue()>();

        return $r2;
    }

    public int size()
    {
        com.opengamma.analytics.math.interpolation.data.Interpolator1DPiecewisePoynomialWithExtraKnotsDataBundle r0;
        com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle $r1;
        int $i0;

        r0 := @this: com.opengamma.analytics.math.interpolation.data.Interpolator1DPiecewisePoynomialWithExtraKnotsDataBundle;

        $r1 = r0.<com.opengamma.analytics.math.interpolation.data.Interpolator1DPiecewisePoynomialWithExtraKnotsDataBundle: com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle _underlyingData>;

        $i0 = interfaceinvoke $r1.<com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle: int size()>();

        return $i0;
    }

    public void setYValueAtIndex(int, double)
    {
        com.opengamma.analytics.math.interpolation.data.Interpolator1DPiecewisePoynomialWithExtraKnotsDataBundle r0;
        int i0;
        double d0;
        org.apache.commons.lang.NotImplementedException $r1;

        r0 := @this: com.opengamma.analytics.math.interpolation.data.Interpolator1DPiecewisePoynomialWithExtraKnotsDataBundle;

        i0 := @parameter0: int;

        d0 := @parameter1: double;

        $r1 = new org.apache.commons.lang.NotImplementedException;

        specialinvoke $r1.<org.apache.commons.lang.NotImplementedException: void <init>()>();

        throw $r1;
    }

    public int hashCode()
    {
        com.opengamma.analytics.math.interpolation.data.Interpolator1DPiecewisePoynomialWithExtraKnotsDataBundle r0;
        com.opengamma.analytics.math.interpolation.PiecewisePolynomialResult $r1;
        int $i1, $i2, $i3, $i4, i6, i7;
        com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle $r2;

        r0 := @this: com.opengamma.analytics.math.interpolation.data.Interpolator1DPiecewisePoynomialWithExtraKnotsDataBundle;

        $i1 = 31 * 1;

        $r1 = r0.<com.opengamma.analytics.math.interpolation.data.Interpolator1DPiecewisePoynomialWithExtraKnotsDataBundle: com.opengamma.analytics.math.interpolation.PiecewisePolynomialResult _poly>;

        $i2 = virtualinvoke $r1.<com.opengamma.analytics.math.interpolation.PiecewisePolynomialResult: int hashCode()>();

        i6 = $i1 + $i2;

        $i3 = 31 * i6;

        $r2 = r0.<com.opengamma.analytics.math.interpolation.data.Interpolator1DPiecewisePoynomialWithExtraKnotsDataBundle: com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle _underlyingData>;

        $i4 = virtualinvoke $r2.<java.lang.Object: int hashCode()>();

        i7 = $i3 + $i4;

        return i7;
    }

    public boolean equals(java.lang.Object)
    {
        com.opengamma.analytics.math.interpolation.data.Interpolator1DPiecewisePoynomialWithExtraKnotsDataBundle r0, r2;
        java.lang.Object r1;
        boolean $z0, $z1, $z2;
        com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle $r3, $r4;
        com.opengamma.analytics.math.interpolation.PiecewisePolynomialResult $r5, $r6;

        r0 := @this: com.opengamma.analytics.math.interpolation.data.Interpolator1DPiecewisePoynomialWithExtraKnotsDataBundle;

        r1 := @parameter0: java.lang.Object;

        if r0 != r1 goto label1;

        return 1;

     label1:
        if r1 != null goto label2;

        return 0;

     label2:
        $z0 = r1 instanceof com.opengamma.analytics.math.interpolation.data.Interpolator1DPiecewisePoynomialWithExtraKnotsDataBundle;

        if $z0 != 0 goto label3;

        return 0;

     label3:
        r2 = (com.opengamma.analytics.math.interpolation.data.Interpolator1DPiecewisePoynomialWithExtraKnotsDataBundle) r1;

        $r4 = r0.<com.opengamma.analytics.math.interpolation.data.Interpolator1DPiecewisePoynomialWithExtraKnotsDataBundle: com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle _underlyingData>;

        $r3 = r2.<com.opengamma.analytics.math.interpolation.data.Interpolator1DPiecewisePoynomialWithExtraKnotsDataBundle: com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle _underlyingData>;

        $z1 = virtualinvoke $r4.<java.lang.Object: boolean equals(java.lang.Object)>($r3);

        if $z1 != 0 goto label4;

        return 0;

     label4:
        $r6 = r0.<com.opengamma.analytics.math.interpolation.data.Interpolator1DPiecewisePoynomialWithExtraKnotsDataBundle: com.opengamma.analytics.math.interpolation.PiecewisePolynomialResult _poly>;

        $r5 = r2.<com.opengamma.analytics.math.interpolation.data.Interpolator1DPiecewisePoynomialWithExtraKnotsDataBundle: com.opengamma.analytics.math.interpolation.PiecewisePolynomialResult _poly>;

        $z2 = virtualinvoke $r6.<com.opengamma.analytics.math.interpolation.PiecewisePolynomialResult: boolean equals(java.lang.Object)>($r5);

        if $z2 != 0 goto label5;

        return 0;

     label5:
        return 1;
    }

    public static void <clinit>()
    {
        <com.opengamma.analytics.math.interpolation.data.Interpolator1DPiecewisePoynomialWithExtraKnotsDataBundle: double SMALL> = 1.0E-14;

        <com.opengamma.analytics.math.interpolation.data.Interpolator1DPiecewisePoynomialWithExtraKnotsDataBundle: double EPS> = 1.0E-7;

        return;
    }
}
