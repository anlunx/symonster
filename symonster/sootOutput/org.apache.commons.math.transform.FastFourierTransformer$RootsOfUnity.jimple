class org.apache.commons.math.transform.FastFourierTransformer$RootsOfUnity extends java.lang.Object implements java.io.Serializable
{
    private static final long serialVersionUID;
    private int omegaCount;
    private double[] omegaReal;
    private double[] omegaImaginaryForward;
    private double[] omegaImaginaryInverse;
    private boolean isForward;

    public void <init>()
    {
        org.apache.commons.math.transform.FastFourierTransformer$RootsOfUnity r0;

        r0 := @this: org.apache.commons.math.transform.FastFourierTransformer$RootsOfUnity;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.commons.math.transform.FastFourierTransformer$RootsOfUnity: int omegaCount> = 0;

        r0.<org.apache.commons.math.transform.FastFourierTransformer$RootsOfUnity: double[] omegaReal> = null;

        r0.<org.apache.commons.math.transform.FastFourierTransformer$RootsOfUnity: double[] omegaImaginaryForward> = null;

        r0.<org.apache.commons.math.transform.FastFourierTransformer$RootsOfUnity: double[] omegaImaginaryInverse> = null;

        r0.<org.apache.commons.math.transform.FastFourierTransformer$RootsOfUnity: boolean isForward> = 1;

        return;
    }

    public synchronized boolean isForward() throws java.lang.IllegalStateException
    {
        org.apache.commons.math.transform.FastFourierTransformer$RootsOfUnity r0;
        int $i0;
        boolean $z0;
        java.lang.Object[] $r1;
        org.apache.commons.math.exception.util.LocalizedFormats $r2;
        java.lang.IllegalStateException $r3;

        r0 := @this: org.apache.commons.math.transform.FastFourierTransformer$RootsOfUnity;

        $i0 = r0.<org.apache.commons.math.transform.FastFourierTransformer$RootsOfUnity: int omegaCount>;

        if $i0 != 0 goto label1;

        $r2 = <org.apache.commons.math.exception.util.LocalizedFormats: org.apache.commons.math.exception.util.LocalizedFormats ROOTS_OF_UNITY_NOT_COMPUTED_YET>;

        $r1 = newarray (java.lang.Object)[0];

        $r3 = staticinvoke <org.apache.commons.math.MathRuntimeException: java.lang.IllegalStateException createIllegalStateException(org.apache.commons.math.exception.util.Localizable,java.lang.Object[])>($r2, $r1);

        throw $r3;

     label1:
        $z0 = r0.<org.apache.commons.math.transform.FastFourierTransformer$RootsOfUnity: boolean isForward>;

        return $z0;
    }

    public synchronized void computeOmega(int) throws java.lang.IllegalArgumentException
    {
        org.apache.commons.math.transform.FastFourierTransformer$RootsOfUnity r0;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, i7;
        double d0, d1, d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15;
        double[] $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14;
        java.lang.Object[] $r16;
        org.apache.commons.math.exception.util.LocalizedFormats $r17;
        java.lang.IllegalArgumentException $r18;
        boolean $z0;

        r0 := @this: org.apache.commons.math.transform.FastFourierTransformer$RootsOfUnity;

        i0 := @parameter0: int;

        if i0 != 0 goto label1;

        $r17 = <org.apache.commons.math.exception.util.LocalizedFormats: org.apache.commons.math.exception.util.LocalizedFormats CANNOT_COMPUTE_0TH_ROOT_OF_UNITY>;

        $r16 = newarray (java.lang.Object)[0];

        $r18 = staticinvoke <org.apache.commons.math.MathRuntimeException: java.lang.IllegalArgumentException createIllegalArgumentException(org.apache.commons.math.exception.util.Localizable,java.lang.Object[])>($r17, $r16);

        throw $r18;

     label1:
        if i0 <= 0 goto label2;

        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        r0.<org.apache.commons.math.transform.FastFourierTransformer$RootsOfUnity: boolean isForward> = $z0;

        i1 = staticinvoke <org.apache.commons.math.util.FastMath: int abs(int)>(i0);

        $i2 = r0.<org.apache.commons.math.transform.FastFourierTransformer$RootsOfUnity: int omegaCount>;

        if i1 != $i2 goto label4;

        return;

     label4:
        $d3 = (double) i1;

        d0 = 6.283185307179586 / $d3;

        d1 = staticinvoke <org.apache.commons.math.util.FastMath: double cos(double)>(d0);

        d2 = staticinvoke <org.apache.commons.math.util.FastMath: double sin(double)>(d0);

        $r1 = newarray (double)[i1];

        r0.<org.apache.commons.math.transform.FastFourierTransformer$RootsOfUnity: double[] omegaReal> = $r1;

        $r2 = newarray (double)[i1];

        r0.<org.apache.commons.math.transform.FastFourierTransformer$RootsOfUnity: double[] omegaImaginaryForward> = $r2;

        $r3 = newarray (double)[i1];

        r0.<org.apache.commons.math.transform.FastFourierTransformer$RootsOfUnity: double[] omegaImaginaryInverse> = $r3;

        $r4 = r0.<org.apache.commons.math.transform.FastFourierTransformer$RootsOfUnity: double[] omegaReal>;

        $r4[0] = 1.0;

        $r5 = r0.<org.apache.commons.math.transform.FastFourierTransformer$RootsOfUnity: double[] omegaImaginaryForward>;

        $r5[0] = 0.0;

        $r6 = r0.<org.apache.commons.math.transform.FastFourierTransformer$RootsOfUnity: double[] omegaImaginaryInverse>;

        $r6[0] = 0.0;

        i7 = 1;

     label5:
        if i7 >= i1 goto label6;

        $r9 = r0.<org.apache.commons.math.transform.FastFourierTransformer$RootsOfUnity: double[] omegaReal>;

        $r7 = r0.<org.apache.commons.math.transform.FastFourierTransformer$RootsOfUnity: double[] omegaReal>;

        $i3 = i7 - 1;

        $d4 = $r7[$i3];

        $d7 = $d4 * d1;

        $r8 = r0.<org.apache.commons.math.transform.FastFourierTransformer$RootsOfUnity: double[] omegaImaginaryForward>;

        $i4 = i7 - 1;

        $d5 = $r8[$i4];

        $d6 = $d5 * d2;

        $d8 = $d7 + $d6;

        $r9[i7] = $d8;

        $r12 = r0.<org.apache.commons.math.transform.FastFourierTransformer$RootsOfUnity: double[] omegaImaginaryForward>;

        $r10 = r0.<org.apache.commons.math.transform.FastFourierTransformer$RootsOfUnity: double[] omegaImaginaryForward>;

        $i5 = i7 - 1;

        $d9 = $r10[$i5];

        $d12 = $d9 * d1;

        $r11 = r0.<org.apache.commons.math.transform.FastFourierTransformer$RootsOfUnity: double[] omegaReal>;

        $i6 = i7 - 1;

        $d10 = $r11[$i6];

        $d11 = $d10 * d2;

        $d13 = $d12 - $d11;

        $r12[i7] = $d13;

        $r14 = r0.<org.apache.commons.math.transform.FastFourierTransformer$RootsOfUnity: double[] omegaImaginaryInverse>;

        $r13 = r0.<org.apache.commons.math.transform.FastFourierTransformer$RootsOfUnity: double[] omegaImaginaryForward>;

        $d14 = $r13[i7];

        $d15 = neg $d14;

        $r14[i7] = $d15;

        i7 = i7 + 1;

        goto label5;

     label6:
        r0.<org.apache.commons.math.transform.FastFourierTransformer$RootsOfUnity: int omegaCount> = i1;

        return;
    }

    public synchronized double getOmegaReal(int) throws java.lang.IllegalStateException, java.lang.IllegalArgumentException
    {
        org.apache.commons.math.transform.FastFourierTransformer$RootsOfUnity r0;
        int i0, $i1, $i2, $i3, $i4;
        java.lang.Object[] $r1, $r8;
        org.apache.commons.math.exception.util.LocalizedFormats $r2, $r9;
        java.lang.Integer $r3, $r4, $r5;
        java.lang.IllegalArgumentException $r6;
        double[] $r7;
        double $d0;
        java.lang.IllegalStateException $r10;

        r0 := @this: org.apache.commons.math.transform.FastFourierTransformer$RootsOfUnity;

        i0 := @parameter0: int;

        $i1 = r0.<org.apache.commons.math.transform.FastFourierTransformer$RootsOfUnity: int omegaCount>;

        if $i1 != 0 goto label1;

        $r9 = <org.apache.commons.math.exception.util.LocalizedFormats: org.apache.commons.math.exception.util.LocalizedFormats ROOTS_OF_UNITY_NOT_COMPUTED_YET>;

        $r8 = newarray (java.lang.Object)[0];

        $r10 = staticinvoke <org.apache.commons.math.MathRuntimeException: java.lang.IllegalStateException createIllegalStateException(org.apache.commons.math.exception.util.Localizable,java.lang.Object[])>($r9, $r8);

        throw $r10;

     label1:
        if i0 < 0 goto label2;

        $i4 = r0.<org.apache.commons.math.transform.FastFourierTransformer$RootsOfUnity: int omegaCount>;

        if i0 < $i4 goto label3;

     label2:
        $r2 = <org.apache.commons.math.exception.util.LocalizedFormats: org.apache.commons.math.exception.util.LocalizedFormats OUT_OF_RANGE_ROOT_OF_UNITY_INDEX>;

        $r1 = newarray (java.lang.Object)[3];

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r1[0] = $r3;

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        $r1[1] = $r4;

        $i2 = r0.<org.apache.commons.math.transform.FastFourierTransformer$RootsOfUnity: int omegaCount>;

        $i3 = $i2 - 1;

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3);

        $r1[2] = $r5;

        $r6 = staticinvoke <org.apache.commons.math.MathRuntimeException: java.lang.IllegalArgumentException createIllegalArgumentException(org.apache.commons.math.exception.util.Localizable,java.lang.Object[])>($r2, $r1);

        throw $r6;

     label3:
        $r7 = r0.<org.apache.commons.math.transform.FastFourierTransformer$RootsOfUnity: double[] omegaReal>;

        $d0 = $r7[i0];

        return $d0;
    }

    public synchronized double getOmegaImaginary(int) throws java.lang.IllegalStateException, java.lang.IllegalArgumentException
    {
        org.apache.commons.math.transform.FastFourierTransformer$RootsOfUnity r0;
        int i0, $i1, $i2, $i3, $i4;
        java.lang.Object[] $r1, $r9;
        org.apache.commons.math.exception.util.LocalizedFormats $r2, $r10;
        java.lang.Integer $r3, $r4, $r5;
        java.lang.IllegalArgumentException $r6;
        boolean $z0;
        double[] $r7, $r8;
        java.lang.IllegalStateException $r11;
        double $d0;

        r0 := @this: org.apache.commons.math.transform.FastFourierTransformer$RootsOfUnity;

        i0 := @parameter0: int;

        $i1 = r0.<org.apache.commons.math.transform.FastFourierTransformer$RootsOfUnity: int omegaCount>;

        if $i1 != 0 goto label1;

        $r10 = <org.apache.commons.math.exception.util.LocalizedFormats: org.apache.commons.math.exception.util.LocalizedFormats ROOTS_OF_UNITY_NOT_COMPUTED_YET>;

        $r9 = newarray (java.lang.Object)[0];

        $r11 = staticinvoke <org.apache.commons.math.MathRuntimeException: java.lang.IllegalStateException createIllegalStateException(org.apache.commons.math.exception.util.Localizable,java.lang.Object[])>($r10, $r9);

        throw $r11;

     label1:
        if i0 < 0 goto label2;

        $i4 = r0.<org.apache.commons.math.transform.FastFourierTransformer$RootsOfUnity: int omegaCount>;

        if i0 < $i4 goto label3;

     label2:
        $r2 = <org.apache.commons.math.exception.util.LocalizedFormats: org.apache.commons.math.exception.util.LocalizedFormats OUT_OF_RANGE_ROOT_OF_UNITY_INDEX>;

        $r1 = newarray (java.lang.Object)[3];

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r1[0] = $r3;

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        $r1[1] = $r4;

        $i2 = r0.<org.apache.commons.math.transform.FastFourierTransformer$RootsOfUnity: int omegaCount>;

        $i3 = $i2 - 1;

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3);

        $r1[2] = $r5;

        $r6 = staticinvoke <org.apache.commons.math.MathRuntimeException: java.lang.IllegalArgumentException createIllegalArgumentException(org.apache.commons.math.exception.util.Localizable,java.lang.Object[])>($r2, $r1);

        throw $r6;

     label3:
        $z0 = r0.<org.apache.commons.math.transform.FastFourierTransformer$RootsOfUnity: boolean isForward>;

        if $z0 == 0 goto label4;

        $r8 = r0.<org.apache.commons.math.transform.FastFourierTransformer$RootsOfUnity: double[] omegaImaginaryForward>;

        $d0 = $r8[i0];

        goto label5;

     label4:
        $r7 = r0.<org.apache.commons.math.transform.FastFourierTransformer$RootsOfUnity: double[] omegaImaginaryInverse>;

        $d0 = $r7[i0];

     label5:
        return $d0;
    }

    public static void <clinit>()
    {
        <org.apache.commons.math.transform.FastFourierTransformer$RootsOfUnity: long serialVersionUID> = 6404784357747329667L;

        return;
    }
}
