public class org.apache.commons.math3.analysis.interpolation.BicubicSplineInterpolator extends java.lang.Object implements org.apache.commons.math3.analysis.interpolation.BivariateGridInterpolator
{
    private final boolean initializeDerivatives;

    public void <init>()
    {
        org.apache.commons.math3.analysis.interpolation.BicubicSplineInterpolator r0;

        r0 := @this: org.apache.commons.math3.analysis.interpolation.BicubicSplineInterpolator;

        specialinvoke r0.<org.apache.commons.math3.analysis.interpolation.BicubicSplineInterpolator: void <init>(boolean)>(0);

        return;
    }

    public void <init>(boolean)
    {
        org.apache.commons.math3.analysis.interpolation.BicubicSplineInterpolator r0;
        boolean z0;

        r0 := @this: org.apache.commons.math3.analysis.interpolation.BicubicSplineInterpolator;

        z0 := @parameter0: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.commons.math3.analysis.interpolation.BicubicSplineInterpolator: boolean initializeDerivatives> = z0;

        return;
    }

    public org.apache.commons.math3.analysis.interpolation.BicubicSplineInterpolatingFunction interpolate(double[], double[], double[][]) throws org.apache.commons.math3.exception.NoDataException, org.apache.commons.math3.exception.DimensionMismatchException, org.apache.commons.math3.exception.NonMonotonicSequenceException, org.apache.commons.math3.exception.NumberIsTooSmallException
    {
        org.apache.commons.math3.analysis.interpolation.BicubicSplineInterpolator r0;
        double[] r1, r2, $r7, $r8, $r9, $r10, $r11, $r13, $r15, $r16, $r18, $r20, $r21, $r22, $r24;
        double[][] r3, r4, r30, r32, r34;
        int i0, i1, i2, i3, i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, i14, i15, i16, i17, i18, i19, i20, i21, i22, i23, i24;
        org.apache.commons.math3.analysis.interpolation.SplineInterpolator $r5;
        org.apache.commons.math3.analysis.interpolation.BicubicSplineInterpolatingFunction $r6;
        boolean $z0;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19;
        org.apache.commons.math3.analysis.polynomials.PolynomialSplineFunction $r12, $r14, $r17, $r19;
        org.apache.commons.math3.exception.DimensionMismatchException $r23, $r25;
        org.apache.commons.math3.exception.NoDataException $r26;
        org.apache.commons.math3.analysis.polynomials.PolynomialSplineFunction[] r28, r29;
        org.apache.commons.math3.analysis.UnivariateFunction r31, r33;

        r0 := @this: org.apache.commons.math3.analysis.interpolation.BicubicSplineInterpolator;

        r1 := @parameter0: double[];

        r2 := @parameter1: double[];

        r3 := @parameter2: double[][];

        $i5 = lengthof r1;

        if $i5 == 0 goto label01;

        $i6 = lengthof r2;

        if $i6 == 0 goto label01;

        $i7 = lengthof r3;

        if $i7 != 0 goto label02;

     label01:
        $r26 = new org.apache.commons.math3.exception.NoDataException;

        specialinvoke $r26.<org.apache.commons.math3.exception.NoDataException: void <init>()>();

        throw $r26;

     label02:
        $i9 = lengthof r1;

        $i8 = lengthof r3;

        if $i9 == $i8 goto label03;

        $r25 = new org.apache.commons.math3.exception.DimensionMismatchException;

        $i13 = lengthof r1;

        $i12 = lengthof r3;

        specialinvoke $r25.<org.apache.commons.math3.exception.DimensionMismatchException: void <init>(int,int)>($i13, $i12);

        throw $r25;

     label03:
        staticinvoke <org.apache.commons.math3.util.MathArrays: void checkOrder(double[])>(r1);

        staticinvoke <org.apache.commons.math3.util.MathArrays: void checkOrder(double[])>(r2);

        i0 = lengthof r1;

        i1 = lengthof r2;

        r4 = newmultiarray (double)[i1][i0];

        i14 = 0;

     label04:
        if i14 >= i0 goto label08;

        $r20 = r3[i14];

        $i10 = lengthof $r20;

        if $i10 == i1 goto label05;

        $r23 = new org.apache.commons.math3.exception.DimensionMismatchException;

        $r24 = r3[i14];

        $i11 = lengthof $r24;

        specialinvoke $r23.<org.apache.commons.math3.exception.DimensionMismatchException: void <init>(int,int)>($i11, i1);

        throw $r23;

     label05:
        i15 = 0;

     label06:
        if i15 >= i1 goto label07;

        $r22 = r4[i15];

        $r21 = r3[i14];

        $d19 = $r21[i15];

        $r22[i14] = $d19;

        i15 = i15 + 1;

        goto label06;

     label07:
        i14 = i14 + 1;

        goto label04;

     label08:
        $r5 = new org.apache.commons.math3.analysis.interpolation.SplineInterpolator;

        specialinvoke $r5.<org.apache.commons.math3.analysis.interpolation.SplineInterpolator: void <init>()>();

        r28 = newarray (org.apache.commons.math3.analysis.polynomials.PolynomialSplineFunction)[i1];

        i16 = 0;

     label09:
        if i16 >= i1 goto label10;

        $r18 = r4[i16];

        $r19 = virtualinvoke $r5.<org.apache.commons.math3.analysis.interpolation.SplineInterpolator: org.apache.commons.math3.analysis.polynomials.PolynomialSplineFunction interpolate(double[],double[])>(r1, $r18);

        r28[i16] = $r19;

        i16 = i16 + 1;

        goto label09;

     label10:
        r29 = newarray (org.apache.commons.math3.analysis.polynomials.PolynomialSplineFunction)[i0];

        i17 = 0;

     label11:
        if i17 >= i0 goto label12;

        $r16 = r3[i17];

        $r17 = virtualinvoke $r5.<org.apache.commons.math3.analysis.interpolation.SplineInterpolator: org.apache.commons.math3.analysis.polynomials.PolynomialSplineFunction interpolate(double[],double[])>(r2, $r16);

        r29[i17] = $r17;

        i17 = i17 + 1;

        goto label11;

     label12:
        r30 = newmultiarray (double)[i0][i1];

        i18 = 0;

     label13:
        if i18 >= i1 goto label16;

        $r14 = r28[i18];

        r31 = virtualinvoke $r14.<org.apache.commons.math3.analysis.polynomials.PolynomialSplineFunction: org.apache.commons.math3.analysis.UnivariateFunction derivative()>();

        i19 = 0;

     label14:
        if i19 >= i0 goto label15;

        $r15 = r30[i19];

        $d17 = r1[i19];

        $d18 = interfaceinvoke r31.<org.apache.commons.math3.analysis.UnivariateFunction: double value(double)>($d17);

        $r15[i18] = $d18;

        i19 = i19 + 1;

        goto label14;

     label15:
        i18 = i18 + 1;

        goto label13;

     label16:
        r32 = newmultiarray (double)[i0][i1];

        i20 = 0;

     label17:
        if i20 >= i0 goto label20;

        $r12 = r29[i20];

        r33 = virtualinvoke $r12.<org.apache.commons.math3.analysis.polynomials.PolynomialSplineFunction: org.apache.commons.math3.analysis.UnivariateFunction derivative()>();

        i21 = 0;

     label18:
        if i21 >= i1 goto label19;

        $r13 = r32[i20];

        $d15 = r2[i21];

        $d16 = interfaceinvoke r33.<org.apache.commons.math3.analysis.UnivariateFunction: double value(double)>($d15);

        $r13[i21] = $d16;

        i21 = i21 + 1;

        goto label18;

     label19:
        i20 = i20 + 1;

        goto label17;

     label20:
        r34 = newmultiarray (double)[i0][i1];

        i22 = 0;

     label21:
        if i22 >= i0 goto label24;

        i23 = specialinvoke r0.<org.apache.commons.math3.analysis.interpolation.BicubicSplineInterpolator: int nextIndex(int,int)>(i22, i0);

        i2 = specialinvoke r0.<org.apache.commons.math3.analysis.interpolation.BicubicSplineInterpolator: int previousIndex(int)>(i22);

        i24 = 0;

     label22:
        if i24 >= i1 goto label23;

        i3 = specialinvoke r0.<org.apache.commons.math3.analysis.interpolation.BicubicSplineInterpolator: int nextIndex(int,int)>(i24, i1);

        i4 = specialinvoke r0.<org.apache.commons.math3.analysis.interpolation.BicubicSplineInterpolator: int previousIndex(int)>(i24);

        $r11 = r34[i22];

        $r7 = r3[i23];

        $d1 = $r7[i3];

        $r8 = r3[i23];

        $d0 = $r8[i4];

        $d3 = $d1 - $d0;

        $r9 = r3[i2];

        $d2 = $r9[i3];

        $d5 = $d3 - $d2;

        $r10 = r3[i2];

        $d4 = $r10[i4];

        $d13 = $d5 + $d4;

        $d7 = r1[i23];

        $d6 = r1[i2];

        $d11 = $d7 - $d6;

        $d9 = r2[i3];

        $d8 = r2[i4];

        $d10 = $d9 - $d8;

        $d12 = $d11 * $d10;

        $d14 = $d13 / $d12;

        $r11[i24] = $d14;

        i24 = i24 + 1;

        goto label22;

     label23:
        i22 = i22 + 1;

        goto label21;

     label24:
        $r6 = new org.apache.commons.math3.analysis.interpolation.BicubicSplineInterpolatingFunction;

        $z0 = r0.<org.apache.commons.math3.analysis.interpolation.BicubicSplineInterpolator: boolean initializeDerivatives>;

        specialinvoke $r6.<org.apache.commons.math3.analysis.interpolation.BicubicSplineInterpolatingFunction: void <init>(double[],double[],double[][],double[][],double[][],double[][],boolean)>(r1, r2, r3, r30, r32, r34, $z0);

        return $r6;
    }

    private int nextIndex(int, int)
    {
        org.apache.commons.math3.analysis.interpolation.BicubicSplineInterpolator r0;
        int i0, i1, i2, $i3;

        r0 := @this: org.apache.commons.math3.analysis.interpolation.BicubicSplineInterpolator;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 = i0 + 1;

        if i2 >= i1 goto label1;

        $i3 = i2;

        goto label2;

     label1:
        $i3 = i2 - 1;

     label2:
        return $i3;
    }

    private int previousIndex(int)
    {
        org.apache.commons.math3.analysis.interpolation.BicubicSplineInterpolator r0;
        int i0, i1, $i2;

        r0 := @this: org.apache.commons.math3.analysis.interpolation.BicubicSplineInterpolator;

        i0 := @parameter0: int;

        i1 = i0 - 1;

        if i1 < 0 goto label1;

        $i2 = i1;

        goto label2;

     label1:
        $i2 = 0;

     label2:
        return $i2;
    }

    public volatile org.apache.commons.math3.analysis.BivariateFunction interpolate(double[], double[], double[][]) throws org.apache.commons.math3.exception.NoDataException, org.apache.commons.math3.exception.DimensionMismatchException, org.apache.commons.math3.exception.NonMonotonicSequenceException, org.apache.commons.math3.exception.NumberIsTooSmallException
    {
        org.apache.commons.math3.analysis.interpolation.BicubicSplineInterpolator r0;
        double[] r1, r2;
        double[][] r3;
        org.apache.commons.math3.analysis.interpolation.BicubicSplineInterpolatingFunction $r4;

        r0 := @this: org.apache.commons.math3.analysis.interpolation.BicubicSplineInterpolator;

        r1 := @parameter0: double[];

        r2 := @parameter1: double[];

        r3 := @parameter2: double[][];

        $r4 = virtualinvoke r0.<org.apache.commons.math3.analysis.interpolation.BicubicSplineInterpolator: org.apache.commons.math3.analysis.interpolation.BicubicSplineInterpolatingFunction interpolate(double[],double[],double[][])>(r1, r2, r3);

        return $r4;
    }
}
