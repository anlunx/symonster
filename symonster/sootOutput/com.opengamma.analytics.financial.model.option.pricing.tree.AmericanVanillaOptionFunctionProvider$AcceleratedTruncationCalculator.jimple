class com.opengamma.analytics.financial.model.option.pricing.tree.AmericanVanillaOptionFunctionProvider$AcceleratedTruncationCalculator extends com.opengamma.analytics.financial.model.option.pricing.tree.AmericanVanillaOptionFunctionProvider$Calculator
{
    private final double _volatility;
    private final double _interestRate;
    private final double _dividend;
    private final double _stdDiv;
    private final double _dt;
    private final com.opengamma.analytics.math.statistics.distribution.ProbabilityDistribution _normal;
    final com.opengamma.analytics.financial.model.option.pricing.tree.AmericanVanillaOptionFunctionProvider this$0;

    public void <init>(com.opengamma.analytics.financial.model.option.pricing.tree.AmericanVanillaOptionFunctionProvider, double, double, double, double)
    {
        com.opengamma.analytics.financial.model.option.pricing.tree.AmericanVanillaOptionFunctionProvider$AcceleratedTruncationCalculator r0;
        com.opengamma.analytics.financial.model.option.pricing.tree.AmericanVanillaOptionFunctionProvider r1;
        double d0, d1, d2, d3, $d4, $d5, $d6;
        com.opengamma.analytics.math.statistics.distribution.NormalDistribution $r2;
        byte $b0, $b1;
        boolean $z0, $z1, $z2, $z3;
        int $i2;

        r0 := @this: com.opengamma.analytics.financial.model.option.pricing.tree.AmericanVanillaOptionFunctionProvider$AcceleratedTruncationCalculator;

        r1 := @parameter0: com.opengamma.analytics.financial.model.option.pricing.tree.AmericanVanillaOptionFunctionProvider;

        d0 := @parameter1: double;

        d1 := @parameter2: double;

        d2 := @parameter3: double;

        d3 := @parameter4: double;

        r0.<com.opengamma.analytics.financial.model.option.pricing.tree.AmericanVanillaOptionFunctionProvider$AcceleratedTruncationCalculator: com.opengamma.analytics.financial.model.option.pricing.tree.AmericanVanillaOptionFunctionProvider this$0> = r1;

        specialinvoke r0.<com.opengamma.analytics.financial.model.option.pricing.tree.AmericanVanillaOptionFunctionProvider$Calculator: void <init>(com.opengamma.analytics.financial.model.option.pricing.tree.AmericanVanillaOptionFunctionProvider,com.opengamma.analytics.financial.model.option.pricing.tree.AmericanVanillaOptionFunctionProvider$1)>(r1, null);

        $r2 = new com.opengamma.analytics.math.statistics.distribution.NormalDistribution;

        specialinvoke $r2.<com.opengamma.analytics.math.statistics.distribution.NormalDistribution: void <init>(double,double)>(0.0, 1.0);

        r0.<com.opengamma.analytics.financial.model.option.pricing.tree.AmericanVanillaOptionFunctionProvider$AcceleratedTruncationCalculator: com.opengamma.analytics.math.statistics.distribution.ProbabilityDistribution _normal> = $r2;

        $b0 = d0 cmpl 0.0;

        if $b0 <= 0 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z2, "volatility should be positive");

        $z0 = staticinvoke <com.google.common.primitives.Doubles: boolean isFinite(double)>(d0);

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z0, "volatility should be finite");

        $b1 = d3 cmpl 0.0;

        if $b1 <= 0 goto label3;

        $z3 = 1;

        goto label4;

     label3:
        $z3 = 0;

     label4:
        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z3, "stdDiv should be positive");

        $z1 = staticinvoke <com.google.common.primitives.Doubles: boolean isFinite(double)>(d3);

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z1, "stdDiv should be finite");

        r0.<com.opengamma.analytics.financial.model.option.pricing.tree.AmericanVanillaOptionFunctionProvider$AcceleratedTruncationCalculator: double _volatility> = d0;

        r0.<com.opengamma.analytics.financial.model.option.pricing.tree.AmericanVanillaOptionFunctionProvider$AcceleratedTruncationCalculator: double _interestRate> = d1;

        r0.<com.opengamma.analytics.financial.model.option.pricing.tree.AmericanVanillaOptionFunctionProvider$AcceleratedTruncationCalculator: double _dividend> = d2;

        r0.<com.opengamma.analytics.financial.model.option.pricing.tree.AmericanVanillaOptionFunctionProvider$AcceleratedTruncationCalculator: double _stdDiv> = d3;

        $d4 = virtualinvoke r1.<com.opengamma.analytics.financial.model.option.pricing.tree.AmericanVanillaOptionFunctionProvider: double getTimeToExpiry()>();

        $i2 = virtualinvoke r1.<com.opengamma.analytics.financial.model.option.pricing.tree.AmericanVanillaOptionFunctionProvider: int getNumberOfSteps()>();

        $d5 = (double) $i2;

        $d6 = $d4 / $d5;

        r0.<com.opengamma.analytics.financial.model.option.pricing.tree.AmericanVanillaOptionFunctionProvider$AcceleratedTruncationCalculator: double _dt> = $d6;

        return;
    }

    public double[] payoffsAtExpiry(double, double, double)
    {
        com.opengamma.analytics.financial.model.option.pricing.tree.AmericanVanillaOptionFunctionProvider$AcceleratedTruncationCalculator r0;
        double d0, d1, d2;
        int i0, $i1;
        double[] r1;
        com.opengamma.analytics.financial.model.option.pricing.tree.AmericanVanillaOptionFunctionProvider $r2;

        r0 := @this: com.opengamma.analytics.financial.model.option.pricing.tree.AmericanVanillaOptionFunctionProvider$AcceleratedTruncationCalculator;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        d2 := @parameter2: double;

        $r2 = r0.<com.opengamma.analytics.financial.model.option.pricing.tree.AmericanVanillaOptionFunctionProvider$AcceleratedTruncationCalculator: com.opengamma.analytics.financial.model.option.pricing.tree.AmericanVanillaOptionFunctionProvider this$0>;

        $i1 = virtualinvoke $r2.<com.opengamma.analytics.financial.model.option.pricing.tree.AmericanVanillaOptionFunctionProvider: int getNumberOfSteps()>();

        i0 = $i1 + 1;

        r1 = newarray (double)[i0];

        staticinvoke <java.util.Arrays: void fill(double[],double)>(r1, 0.0);

        return r1;
    }

    public double[] nextValues(double, double, double, double[], double, double, double, double, int)
    {
        com.opengamma.analytics.financial.model.option.pricing.tree.AmericanVanillaOptionFunctionProvider$AcceleratedTruncationCalculator r0;
        double d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, d10, d11, d12, d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21, $d22, $d23, $d24, $d25, $d26, $d27, $d28, $d29, $d30, $d31, $d32, $d33, $d34, $d35, $d36, $d37, $d38, $d39, $d40, $d41, $d42, $d43, $d44, $d45, $d46, $d47, $d48, $d49, $d50, $d51, $d52, $d53, $d54, $d55, $d56, $d57, $d58, $d59, d60, $d61, $d62, d63;
        double[] r1, r2;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, i8, i9, i10, i11, i12, $i13, i14, $i15, i17, $i18;
        com.opengamma.analytics.financial.model.option.pricing.tree.AmericanVanillaOptionFunctionProvider $r3, $r4, $r5, $r6;

        r0 := @this: com.opengamma.analytics.financial.model.option.pricing.tree.AmericanVanillaOptionFunctionProvider$AcceleratedTruncationCalculator;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        d2 := @parameter2: double;

        r1 := @parameter3: double[];

        d3 := @parameter4: double;

        d4 := @parameter5: double;

        d5 := @parameter6: double;

        d6 := @parameter7: double;

        i0 := @parameter8: int;

        $r3 = r0.<com.opengamma.analytics.financial.model.option.pricing.tree.AmericanVanillaOptionFunctionProvider$AcceleratedTruncationCalculator: com.opengamma.analytics.financial.model.option.pricing.tree.AmericanVanillaOptionFunctionProvider this$0>;

        d7 = virtualinvoke $r3.<com.opengamma.analytics.financial.model.option.pricing.tree.AmericanVanillaOptionFunctionProvider: double getStrike()>();

        $r4 = r0.<com.opengamma.analytics.financial.model.option.pricing.tree.AmericanVanillaOptionFunctionProvider$AcceleratedTruncationCalculator: com.opengamma.analytics.financial.model.option.pricing.tree.AmericanVanillaOptionFunctionProvider this$0>;

        d8 = virtualinvoke $r4.<com.opengamma.analytics.financial.model.option.pricing.tree.AmericanVanillaOptionFunctionProvider: double getSign()>();

        i1 = i0 + 1;

        $d14 = (double) i0;

        $d15 = staticinvoke <java.lang.Math: double pow(double,double)>(d5, $d14);

        d9 = d4 * $d15;

        r2 = newarray (double)[i1];

        $r5 = r0.<com.opengamma.analytics.financial.model.option.pricing.tree.AmericanVanillaOptionFunctionProvider$AcceleratedTruncationCalculator: com.opengamma.analytics.financial.model.option.pricing.tree.AmericanVanillaOptionFunctionProvider this$0>;

        $d16 = virtualinvoke $r5.<com.opengamma.analytics.financial.model.option.pricing.tree.AmericanVanillaOptionFunctionProvider: double getTimeToExpiry()>();

        $d18 = (double) i0;

        $d17 = r0.<com.opengamma.analytics.financial.model.option.pricing.tree.AmericanVanillaOptionFunctionProvider$AcceleratedTruncationCalculator: double _dt>;

        $d19 = $d18 * $d17;

        d10 = $d16 - $d19;

        $d20 = d7 / d9;

        $d21 = staticinvoke <java.lang.Math: double log(double)>($d20);

        $d23 = r0.<com.opengamma.analytics.financial.model.option.pricing.tree.AmericanVanillaOptionFunctionProvider$AcceleratedTruncationCalculator: double _interestRate>;

        $d22 = r0.<com.opengamma.analytics.financial.model.option.pricing.tree.AmericanVanillaOptionFunctionProvider$AcceleratedTruncationCalculator: double _dividend>;

        $d24 = $d23 - $d22;

        $d25 = $d24 * d10;

        d11 = $d21 - $d25;

        $d27 = r0.<com.opengamma.analytics.financial.model.option.pricing.tree.AmericanVanillaOptionFunctionProvider$AcceleratedTruncationCalculator: double _stdDiv>;

        $d26 = r0.<com.opengamma.analytics.financial.model.option.pricing.tree.AmericanVanillaOptionFunctionProvider$AcceleratedTruncationCalculator: double _volatility>;

        $d28 = $d27 * $d26;

        $d29 = staticinvoke <java.lang.Math: double sqrt(double)>(d10);

        d12 = $d28 * $d29;

        $d30 = staticinvoke <java.lang.Math: double log(double)>(d6);

        d13 = 1.0 / $d30;

        $d31 = d11 + d12;

        $d32 = $d31 * d13;

        i8 = (int) $d32;

        $d33 = d11 - d12;

        $d34 = $d33 * d13;

        $i2 = (int) $d34;

        i9 = $i2 + 1;

        i10 = staticinvoke <java.lang.Math: int min(int,int)>(i8, i0);

        i11 = staticinvoke <java.lang.Math: int max(int,int)>(i9, 0);

        if i10 != i0 goto label03;

        if i11 != 0 goto label03;

        d60 = d9;

        i12 = 0;

     label01:
        if i12 >= i1 goto label02;

        $i7 = i12 + 1;

        $d50 = r1[$i7];

        $d53 = d1 * $d50;

        $d51 = r1[i12];

        $d52 = d2 * $d51;

        $d54 = $d53 + $d52;

        $d58 = d0 * $d54;

        $d55 = d60 + d3;

        $d56 = $d55 - d7;

        $d57 = d8 * $d56;

        $d59 = staticinvoke <java.lang.Math: double max(double,double)>($d58, $d57);

        r2[i12] = $d59;

        d60 = d60 * d6;

        i12 = i12 + 1;

        goto label01;

     label02:
        return r2;

     label03:
        staticinvoke <java.util.Arrays: void fill(double[],double)>(r2, 0.0);

        $i3 = i0 - 1;

        if i10 >= $i3 goto label04;

        $i13 = i10 + 2;

        goto label06;

     label04:
        if i10 >= i0 goto label05;

        $i13 = i10 - 1;

        goto label06;

     label05:
        $i13 = i10;

     label06:
        i14 = $i13;

        if i11 <= 1 goto label07;

        $i15 = i11 - 2;

        goto label09;

     label07:
        if i11 <= 0 goto label08;

        $i15 = i11 - 1;

        goto label09;

     label08:
        $i15 = i11;

     label09:
        $d61 = (double) $i15;

        $d62 = staticinvoke <java.lang.Math: double pow(double,double)>(d6, $d61);

        d63 = d9 * $d62;

        i17 = $i15;

     label10:
        $i18 = i14 + 1;

        if i17 >= $i18 goto label13;

        $r6 = r0.<com.opengamma.analytics.financial.model.option.pricing.tree.AmericanVanillaOptionFunctionProvider$AcceleratedTruncationCalculator: com.opengamma.analytics.financial.model.option.pricing.tree.AmericanVanillaOptionFunctionProvider this$0>;

        $i4 = virtualinvoke $r6.<com.opengamma.analytics.financial.model.option.pricing.tree.AmericanVanillaOptionFunctionProvider: int getNumberOfSteps()>();

        $i5 = $i4 - 1;

        if $i5 != i0 goto label11;

        $d48 = r0.<com.opengamma.analytics.financial.model.option.pricing.tree.AmericanVanillaOptionFunctionProvider$AcceleratedTruncationCalculator: double _dt>;

        $d47 = r0.<com.opengamma.analytics.financial.model.option.pricing.tree.AmericanVanillaOptionFunctionProvider$AcceleratedTruncationCalculator: double _volatility>;

        $d46 = r0.<com.opengamma.analytics.financial.model.option.pricing.tree.AmericanVanillaOptionFunctionProvider$AcceleratedTruncationCalculator: double _interestRate>;

        $d45 = r0.<com.opengamma.analytics.financial.model.option.pricing.tree.AmericanVanillaOptionFunctionProvider$AcceleratedTruncationCalculator: double _dividend>;

        $d49 = specialinvoke r0.<com.opengamma.analytics.financial.model.option.pricing.tree.AmericanVanillaOptionFunctionProvider$AcceleratedTruncationCalculator: double blackScholesPrice(double,double,double,double,double,double,double)>(d63, d7, $d48, $d47, $d46, $d45, d8);

        r2[i17] = $d49;

        goto label12;

     label11:
        $i6 = i17 + 1;

        $d35 = r1[$i6];

        $d38 = d1 * $d35;

        $d36 = r1[i17];

        $d37 = d2 * $d36;

        $d39 = $d38 + $d37;

        $d43 = d0 * $d39;

        $d40 = d63 + d3;

        $d41 = $d40 - d7;

        $d42 = d8 * $d41;

        $d44 = staticinvoke <java.lang.Math: double max(double,double)>($d43, $d42);

        r2[i17] = $d44;

     label12:
        d63 = d63 * d6;

        i17 = i17 + 1;

        goto label10;

     label13:
        return r2;
    }

    private double blackScholesPrice(double, double, double, double, double, double, double)
    {
        com.opengamma.analytics.financial.model.option.pricing.tree.AmericanVanillaOptionFunctionProvider$AcceleratedTruncationCalculator r0;
        double d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, d10, d11, d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21, $d22, $d23, $d24, $d25, $d26, $d27, $d28, $d29, $d30, $d31, $d32, $d33, $d34;
        com.opengamma.analytics.math.statistics.distribution.ProbabilityDistribution $r1, $r3;
        java.lang.Double $r2, $r4;

        r0 := @this: com.opengamma.analytics.financial.model.option.pricing.tree.AmericanVanillaOptionFunctionProvider$AcceleratedTruncationCalculator;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        d2 := @parameter2: double;

        d3 := @parameter3: double;

        d4 := @parameter4: double;

        d5 := @parameter5: double;

        d6 := @parameter6: double;

        $d13 = neg d5;

        $d14 = $d13 * d2;

        d7 = staticinvoke <java.lang.Math: double exp(double)>($d14);

        $d15 = neg d4;

        $d16 = $d15 * d2;

        d8 = staticinvoke <java.lang.Math: double exp(double)>($d16);

        $d17 = staticinvoke <java.lang.Math: double sqrt(double)>(d2);

        d9 = d3 * $d17;

        $d18 = d0 / d1;

        $d19 = staticinvoke <java.lang.Math: double log(double)>($d18);

        $d20 = d4 - d5;

        $d21 = $d20 * d2;

        $d22 = $d19 + $d21;

        d10 = $d22 / d9;

        $d23 = 0.5 * d9;

        d11 = d10 + $d23;

        $d24 = 0.5 * d9;

        d12 = d10 - $d24;

        $d26 = d0 * d7;

        $r1 = r0.<com.opengamma.analytics.financial.model.option.pricing.tree.AmericanVanillaOptionFunctionProvider$AcceleratedTruncationCalculator: com.opengamma.analytics.math.statistics.distribution.ProbabilityDistribution _normal>;

        $d25 = d6 * d11;

        $r2 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d25);

        $d27 = interfaceinvoke $r1.<com.opengamma.analytics.math.statistics.distribution.ProbabilityDistribution: double getCDF(java.lang.Object)>($r2);

        $d29 = $d26 * $d27;

        $d30 = d8 * d1;

        $r3 = r0.<com.opengamma.analytics.financial.model.option.pricing.tree.AmericanVanillaOptionFunctionProvider$AcceleratedTruncationCalculator: com.opengamma.analytics.math.statistics.distribution.ProbabilityDistribution _normal>;

        $d28 = d6 * d12;

        $r4 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d28);

        $d31 = interfaceinvoke $r3.<com.opengamma.analytics.math.statistics.distribution.ProbabilityDistribution: double getCDF(java.lang.Object)>($r4);

        $d32 = $d30 * $d31;

        $d33 = $d29 - $d32;

        $d34 = d6 * $d33;

        return $d34;
    }
}
