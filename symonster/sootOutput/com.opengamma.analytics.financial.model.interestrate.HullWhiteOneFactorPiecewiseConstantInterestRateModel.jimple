public class com.opengamma.analytics.financial.model.interestrate.HullWhiteOneFactorPiecewiseConstantInterestRateModel extends java.lang.Object
{

    public void <init>()
    {
        com.opengamma.analytics.financial.model.interestrate.HullWhiteOneFactorPiecewiseConstantInterestRateModel r0;

        r0 := @this: com.opengamma.analytics.financial.model.interestrate.HullWhiteOneFactorPiecewiseConstantInterestRateModel;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public double futuresConvexityFactor(com.opengamma.analytics.financial.model.interestrate.definition.HullWhiteOneFactorPiecewiseConstantParameters, double, double, double)
    {
        com.opengamma.analytics.financial.model.interestrate.HullWhiteOneFactorPiecewiseConstantInterestRateModel r0;
        com.opengamma.analytics.financial.model.interestrate.definition.HullWhiteOneFactorPiecewiseConstantParameters r1;
        double d0, d1, d2, d3, d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21, $d22, $d23, $d24, $d25, $d26, $d27, $d28, $d29, $d30, $d31, $d32, $d33, $d34, $d35, $d36, $d37, $d38, $d39, $d40, $d41, $d42, $d43, $d44, $d45, $d46, $d47, $d48, $d49, d50;
        double[] r2, $r3, $r4, $r5, $r6;
        byte $b0;
        int $i1, $i2, $i3, i4, i5;

        r0 := @this: com.opengamma.analytics.financial.model.interestrate.HullWhiteOneFactorPiecewiseConstantInterestRateModel;

        r1 := @parameter0: com.opengamma.analytics.financial.model.interestrate.definition.HullWhiteOneFactorPiecewiseConstantParameters;

        d0 := @parameter1: double;

        d1 := @parameter2: double;

        d2 := @parameter3: double;

        $d5 = virtualinvoke r1.<com.opengamma.analytics.financial.model.interestrate.definition.HullWhiteOneFactorPiecewiseConstantParameters: double getMeanReversion()>();

        $d6 = neg $d5;

        $d7 = $d6 * d1;

        $d8 = staticinvoke <java.lang.Math: double exp(double)>($d7);

        $d9 = virtualinvoke r1.<com.opengamma.analytics.financial.model.interestrate.definition.HullWhiteOneFactorPiecewiseConstantParameters: double getMeanReversion()>();

        $d10 = neg $d9;

        $d11 = $d10 * d2;

        $d12 = staticinvoke <java.lang.Math: double exp(double)>($d11);

        d3 = $d8 - $d12;

        $d13 = virtualinvoke r1.<com.opengamma.analytics.financial.model.interestrate.definition.HullWhiteOneFactorPiecewiseConstantParameters: double getMeanReversion()>();

        $d14 = 2.0 * $d13;

        $d15 = virtualinvoke r1.<com.opengamma.analytics.financial.model.interestrate.definition.HullWhiteOneFactorPiecewiseConstantParameters: double getMeanReversion()>();

        $d16 = $d14 * $d15;

        $d17 = virtualinvoke r1.<com.opengamma.analytics.financial.model.interestrate.definition.HullWhiteOneFactorPiecewiseConstantParameters: double getMeanReversion()>();

        d4 = $d16 * $d17;

        i4 = 1;

     label1:
        $r3 = virtualinvoke r1.<com.opengamma.analytics.financial.model.interestrate.definition.HullWhiteOneFactorPiecewiseConstantParameters: double[] getVolatilityTime()>();

        $d18 = $r3[i4];

        $b0 = d0 cmpl $d18;

        if $b0 <= 0 goto label2;

        i4 = i4 + 1;

        goto label1;

     label2:
        $i1 = i4 + 1;

        r2 = newarray (double)[$i1];

        $r4 = virtualinvoke r1.<com.opengamma.analytics.financial.model.interestrate.definition.HullWhiteOneFactorPiecewiseConstantParameters: double[] getVolatilityTime()>();

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r4, 0, r2, 0, i4);

        r2[i4] = d0;

        d50 = 0.0;

        i5 = 0;

     label3:
        if i5 >= i4 goto label4;

        $r5 = virtualinvoke r1.<com.opengamma.analytics.financial.model.interestrate.definition.HullWhiteOneFactorPiecewiseConstantParameters: double[] getVolatility()>();

        $d22 = $r5[i5];

        $r6 = virtualinvoke r1.<com.opengamma.analytics.financial.model.interestrate.definition.HullWhiteOneFactorPiecewiseConstantParameters: double[] getVolatility()>();

        $d23 = $r6[i5];

        $d24 = $d22 * $d23;

        $d25 = virtualinvoke r1.<com.opengamma.analytics.financial.model.interestrate.definition.HullWhiteOneFactorPiecewiseConstantParameters: double getMeanReversion()>();

        $i2 = i5 + 1;

        $d26 = r2[$i2];

        $d27 = $d25 * $d26;

        $d28 = staticinvoke <java.lang.Math: double exp(double)>($d27);

        $d29 = virtualinvoke r1.<com.opengamma.analytics.financial.model.interestrate.definition.HullWhiteOneFactorPiecewiseConstantParameters: double getMeanReversion()>();

        $d30 = r2[i5];

        $d31 = $d29 * $d30;

        $d32 = staticinvoke <java.lang.Math: double exp(double)>($d31);

        $d33 = $d28 - $d32;

        $d34 = $d24 * $d33;

        $d35 = virtualinvoke r1.<com.opengamma.analytics.financial.model.interestrate.definition.HullWhiteOneFactorPiecewiseConstantParameters: double getMeanReversion()>();

        $d38 = neg $d35;

        $i3 = i5 + 1;

        $d36 = r2[$i3];

        $d37 = d2 - $d36;

        $d39 = $d38 * $d37;

        $d40 = staticinvoke <java.lang.Math: double exp(double)>($d39);

        $d41 = 2.0 - $d40;

        $d42 = virtualinvoke r1.<com.opengamma.analytics.financial.model.interestrate.definition.HullWhiteOneFactorPiecewiseConstantParameters: double getMeanReversion()>();

        $d45 = neg $d42;

        $d43 = r2[i5];

        $d44 = d2 - $d43;

        $d46 = $d45 * $d44;

        $d47 = staticinvoke <java.lang.Math: double exp(double)>($d46);

        $d48 = $d41 - $d47;

        $d49 = $d34 * $d48;

        d50 = d50 + $d49;

        i5 = i5 + 1;

        goto label3;

     label4:
        $d19 = d3 / d4;

        $d20 = $d19 * d50;

        $d21 = staticinvoke <java.lang.Math: double exp(double)>($d20);

        return $d21;
    }

    public double futuresConvexityFactor(com.opengamma.analytics.financial.model.interestrate.definition.HullWhiteOneFactorPiecewiseConstantParameters, double, double, double, double[])
    {
        com.opengamma.analytics.financial.model.interestrate.HullWhiteOneFactorPiecewiseConstantInterestRateModel r0;
        com.opengamma.analytics.financial.model.interestrate.definition.HullWhiteOneFactorPiecewiseConstantParameters r1;
        double d0, d1, d2, d3, d4, d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21, $d22, $d23, $d24, $d25, $d26, $d27, $d28, $d29, $d30, $d31, $d32, $d33, $d34, $d35, $d36, $d37, $d38, $d39, $d40, $d41, $d42, $d43, $d44, $d45, $d46, $d47, $d48, $d49, $d50, $d51, $d52, $d53, $d54, $d55, $d56, $d57, $d58, d59, d60;
        double[] r2, r3, r4, $r5, $r6, $r7, $r8, $r9, $r10;
        int i0, $i1, $i2, $i3, $i4, i5, i7, i8;
        boolean $z0;
        byte $b6;

        r0 := @this: com.opengamma.analytics.financial.model.interestrate.HullWhiteOneFactorPiecewiseConstantInterestRateModel;

        r1 := @parameter0: com.opengamma.analytics.financial.model.interestrate.definition.HullWhiteOneFactorPiecewiseConstantParameters;

        d0 := @parameter1: double;

        d1 := @parameter2: double;

        d2 := @parameter3: double;

        r2 := @parameter4: double[];

        $r5 = virtualinvoke r1.<com.opengamma.analytics.financial.model.interestrate.definition.HullWhiteOneFactorPiecewiseConstantParameters: double[] getVolatility()>();

        i0 = lengthof $r5;

        $i1 = lengthof r2;

        if $i1 != i0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z0, "derivatives vector of incorrect size");

        $d7 = virtualinvoke r1.<com.opengamma.analytics.financial.model.interestrate.definition.HullWhiteOneFactorPiecewiseConstantParameters: double getMeanReversion()>();

        $d8 = neg $d7;

        $d9 = $d8 * d1;

        $d10 = staticinvoke <java.lang.Math: double exp(double)>($d9);

        $d11 = virtualinvoke r1.<com.opengamma.analytics.financial.model.interestrate.definition.HullWhiteOneFactorPiecewiseConstantParameters: double getMeanReversion()>();

        $d12 = neg $d11;

        $d13 = $d12 * d2;

        $d14 = staticinvoke <java.lang.Math: double exp(double)>($d13);

        d3 = $d10 - $d14;

        $d15 = virtualinvoke r1.<com.opengamma.analytics.financial.model.interestrate.definition.HullWhiteOneFactorPiecewiseConstantParameters: double getMeanReversion()>();

        $d16 = 2.0 * $d15;

        $d17 = virtualinvoke r1.<com.opengamma.analytics.financial.model.interestrate.definition.HullWhiteOneFactorPiecewiseConstantParameters: double getMeanReversion()>();

        $d18 = $d16 * $d17;

        $d19 = virtualinvoke r1.<com.opengamma.analytics.financial.model.interestrate.definition.HullWhiteOneFactorPiecewiseConstantParameters: double getMeanReversion()>();

        d4 = $d18 * $d19;

        i5 = 1;

     label3:
        $r10 = virtualinvoke r1.<com.opengamma.analytics.financial.model.interestrate.definition.HullWhiteOneFactorPiecewiseConstantParameters: double[] getVolatilityTime()>();

        $d58 = $r10[i5];

        $b6 = d0 cmpl $d58;

        if $b6 <= 0 goto label4;

        i5 = i5 + 1;

        goto label3;

     label4:
        $i2 = i5 + 1;

        r3 = newarray (double)[$i2];

        $r6 = virtualinvoke r1.<com.opengamma.analytics.financial.model.interestrate.definition.HullWhiteOneFactorPiecewiseConstantParameters: double[] getVolatilityTime()>();

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r6, 0, r3, 0, i5);

        r3[i5] = d0;

        d59 = 0.0;

        r4 = newarray (double)[i5];

        i7 = 0;

     label5:
        if i7 >= i5 goto label6;

        $d29 = virtualinvoke r1.<com.opengamma.analytics.financial.model.interestrate.definition.HullWhiteOneFactorPiecewiseConstantParameters: double getMeanReversion()>();

        $i3 = i7 + 1;

        $d30 = r3[$i3];

        $d31 = $d29 * $d30;

        $d32 = staticinvoke <java.lang.Math: double exp(double)>($d31);

        $d33 = virtualinvoke r1.<com.opengamma.analytics.financial.model.interestrate.definition.HullWhiteOneFactorPiecewiseConstantParameters: double getMeanReversion()>();

        $d34 = r3[i7];

        $d35 = $d33 * $d34;

        $d36 = staticinvoke <java.lang.Math: double exp(double)>($d35);

        $d37 = $d32 - $d36;

        $d38 = virtualinvoke r1.<com.opengamma.analytics.financial.model.interestrate.definition.HullWhiteOneFactorPiecewiseConstantParameters: double getMeanReversion()>();

        $d41 = neg $d38;

        $i4 = i7 + 1;

        $d39 = r3[$i4];

        $d40 = d2 - $d39;

        $d42 = $d41 * $d40;

        $d43 = staticinvoke <java.lang.Math: double exp(double)>($d42);

        $d44 = 2.0 - $d43;

        $d45 = virtualinvoke r1.<com.opengamma.analytics.financial.model.interestrate.definition.HullWhiteOneFactorPiecewiseConstantParameters: double getMeanReversion()>();

        $d48 = neg $d45;

        $d46 = r3[i7];

        $d47 = d2 - $d46;

        $d49 = $d48 * $d47;

        $d50 = staticinvoke <java.lang.Math: double exp(double)>($d49);

        $d51 = $d44 - $d50;

        $d52 = $d37 * $d51;

        r4[i7] = $d52;

        $r8 = virtualinvoke r1.<com.opengamma.analytics.financial.model.interestrate.definition.HullWhiteOneFactorPiecewiseConstantParameters: double[] getVolatility()>();

        $d53 = $r8[i7];

        $r9 = virtualinvoke r1.<com.opengamma.analytics.financial.model.interestrate.definition.HullWhiteOneFactorPiecewiseConstantParameters: double[] getVolatility()>();

        $d54 = $r9[i7];

        $d56 = $d53 * $d54;

        $d55 = r4[i7];

        $d57 = $d56 * $d55;

        d59 = d59 + $d57;

        i7 = i7 + 1;

        goto label5;

     label6:
        $d20 = d3 / d4;

        $d21 = $d20 * d59;

        d60 = staticinvoke <java.lang.Math: double exp(double)>($d21);

        $d22 = d3 / d4;

        $d23 = $d22 * d60;

        d6 = $d23 * 1.0;

        i8 = 0;

     label7:
        if i8 >= i5 goto label8;

        $r7 = virtualinvoke r1.<com.opengamma.analytics.financial.model.interestrate.definition.HullWhiteOneFactorPiecewiseConstantParameters: double[] getVolatility()>();

        $d24 = $r7[i8];

        $d26 = 2.0 * $d24;

        $d25 = r4[i8];

        $d27 = $d26 * $d25;

        $d28 = $d27 * d6;

        r2[i8] = $d28;

        i8 = i8 + 1;

        goto label7;

     label8:
        return d60;
    }

    public double paymentDelayConvexityFactor(com.opengamma.analytics.financial.model.interestrate.definition.HullWhiteOneFactorPiecewiseConstantParameters, double, double, double, double, double)
    {
        com.opengamma.analytics.financial.model.interestrate.HullWhiteOneFactorPiecewiseConstantInterestRateModel r0;
        com.opengamma.analytics.financial.model.interestrate.definition.HullWhiteOneFactorPiecewiseConstantParameters r1;
        double d0, d1, d2, d3, d4, d5, d6, d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21, $d22, $d23, $d24, $d25, $d26, $d27, $d28, $d29, $d30, $d31, $d32, $d33, $d34, $d35, $d36, $d37, d38;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, i17, i18;
        double[] r2, r3, $r4, $r5, $r6, $r7, $r8;

        r0 := @this: com.opengamma.analytics.financial.model.interestrate.HullWhiteOneFactorPiecewiseConstantInterestRateModel;

        r1 := @parameter0: com.opengamma.analytics.financial.model.interestrate.definition.HullWhiteOneFactorPiecewiseConstantParameters;

        d0 := @parameter1: double;

        d1 := @parameter2: double;

        d2 := @parameter3: double;

        d3 := @parameter4: double;

        d4 := @parameter5: double;

        d5 = virtualinvoke r1.<com.opengamma.analytics.financial.model.interestrate.definition.HullWhiteOneFactorPiecewiseConstantParameters: double getMeanReversion()>();

        $d8 = neg d5;

        $d9 = $d8 * d3;

        $d10 = staticinvoke <java.lang.Math: double exp(double)>($d9);

        $d11 = neg d5;

        $d12 = $d11 * d4;

        $d13 = staticinvoke <java.lang.Math: double exp(double)>($d12);

        $d16 = $d10 - $d13;

        $d14 = neg d5;

        $d15 = $d14 * d3;

        $d17 = staticinvoke <java.lang.Math: double exp(double)>($d15);

        $d18 = neg d5;

        $d19 = $d18 * d2;

        $d20 = staticinvoke <java.lang.Math: double exp(double)>($d19);

        $d21 = $d17 - $d20;

        d6 = $d16 * $d21;

        $d22 = 2.0 * d5;

        $d23 = $d22 * d5;

        d7 = $d23 * d5;

        $r4 = virtualinvoke r1.<com.opengamma.analytics.financial.model.interestrate.definition.HullWhiteOneFactorPiecewiseConstantParameters: double[] getVolatilityTime()>();

        $i3 = staticinvoke <java.util.Arrays: int binarySearch(double[],double)>($r4, d0);

        $i4 = $i3 + 1;

        i0 = staticinvoke <java.lang.Math: int abs(int)>($i4);

        $r5 = virtualinvoke r1.<com.opengamma.analytics.financial.model.interestrate.definition.HullWhiteOneFactorPiecewiseConstantParameters: double[] getVolatilityTime()>();

        $i5 = staticinvoke <java.util.Arrays: int binarySearch(double[],double)>($r5, d1);

        $i6 = $i5 + 1;

        i1 = staticinvoke <java.lang.Math: int abs(int)>($i6);

        $i7 = i1 - i0;

        i2 = $i7 + 1;

        $i8 = i2 + 1;

        r2 = newarray (double)[$i8];

        r2[0] = d0;

        $r6 = virtualinvoke r1.<com.opengamma.analytics.financial.model.interestrate.definition.HullWhiteOneFactorPiecewiseConstantParameters: double[] getVolatilityTime()>();

        $i9 = i2 - 1;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r6, i0, r2, 1, $i9);

        r2[i2] = d1;

        d38 = 0.0;

        $i10 = i2 + 1;

        r3 = newarray (double)[$i10];

        i17 = 0;

     label1:
        $i11 = i2 + 1;

        if i17 >= $i11 goto label2;

        $d35 = 2.0 * d5;

        $d34 = r2[i17];

        $d36 = $d35 * $d34;

        $d37 = staticinvoke <java.lang.Math: double exp(double)>($d36);

        r3[i17] = $d37;

        i17 = i17 + 1;

        goto label1;

     label2:
        i18 = 0;

     label3:
        if i18 >= i2 goto label4;

        $r7 = virtualinvoke r1.<com.opengamma.analytics.financial.model.interestrate.definition.HullWhiteOneFactorPiecewiseConstantParameters: double[] getVolatility()>();

        $i12 = i18 + i0;

        $i13 = $i12 - 1;

        $d27 = $r7[$i13];

        $r8 = virtualinvoke r1.<com.opengamma.analytics.financial.model.interestrate.definition.HullWhiteOneFactorPiecewiseConstantParameters: double[] getVolatility()>();

        $i14 = i18 + i0;

        $i15 = $i14 - 1;

        $d28 = $r8[$i15];

        $d32 = $d27 * $d28;

        $i16 = i18 + 1;

        $d30 = r3[$i16];

        $d29 = r3[i18];

        $d31 = $d30 - $d29;

        $d33 = $d32 * $d31;

        d38 = d38 + $d33;

        i18 = i18 + 1;

        goto label3;

     label4:
        $d24 = d6 * d38;

        $d25 = $d24 / d7;

        $d26 = staticinvoke <java.lang.Math: double exp(double)>($d25);

        return $d26;
    }

    public double alpha(com.opengamma.analytics.financial.model.interestrate.definition.HullWhiteOneFactorPiecewiseConstantParameters, double, double, double, double)
    {
        com.opengamma.analytics.financial.model.interestrate.HullWhiteOneFactorPiecewiseConstantInterestRateModel r0;
        com.opengamma.analytics.financial.model.interestrate.definition.HullWhiteOneFactorPiecewiseConstantParameters r1;
        double d0, d1, d2, d3, d4, d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21, $d22, $d23, $d24, $d25, $d26, $d27, $d28, $d29, $d30, $d31, $d32, $d33, d34;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, i17, i18;
        double[] r2, r3, $r4, $r5, $r6, $r7, $r8;

        r0 := @this: com.opengamma.analytics.financial.model.interestrate.HullWhiteOneFactorPiecewiseConstantInterestRateModel;

        r1 := @parameter0: com.opengamma.analytics.financial.model.interestrate.definition.HullWhiteOneFactorPiecewiseConstantParameters;

        d0 := @parameter1: double;

        d1 := @parameter2: double;

        d2 := @parameter3: double;

        d3 := @parameter4: double;

        $d6 = virtualinvoke r1.<com.opengamma.analytics.financial.model.interestrate.definition.HullWhiteOneFactorPiecewiseConstantParameters: double getMeanReversion()>();

        $d7 = neg $d6;

        $d8 = $d7 * d2;

        $d9 = staticinvoke <java.lang.Math: double exp(double)>($d8);

        $d10 = virtualinvoke r1.<com.opengamma.analytics.financial.model.interestrate.definition.HullWhiteOneFactorPiecewiseConstantParameters: double getMeanReversion()>();

        $d11 = neg $d10;

        $d12 = $d11 * d3;

        $d13 = staticinvoke <java.lang.Math: double exp(double)>($d12);

        d4 = $d9 - $d13;

        $d14 = virtualinvoke r1.<com.opengamma.analytics.financial.model.interestrate.definition.HullWhiteOneFactorPiecewiseConstantParameters: double getMeanReversion()>();

        $d15 = 2.0 * $d14;

        $d16 = virtualinvoke r1.<com.opengamma.analytics.financial.model.interestrate.definition.HullWhiteOneFactorPiecewiseConstantParameters: double getMeanReversion()>();

        $d17 = $d15 * $d16;

        $d18 = virtualinvoke r1.<com.opengamma.analytics.financial.model.interestrate.definition.HullWhiteOneFactorPiecewiseConstantParameters: double getMeanReversion()>();

        d5 = $d17 * $d18;

        $r4 = virtualinvoke r1.<com.opengamma.analytics.financial.model.interestrate.definition.HullWhiteOneFactorPiecewiseConstantParameters: double[] getVolatilityTime()>();

        $i3 = staticinvoke <java.util.Arrays: int binarySearch(double[],double)>($r4, d0);

        $i4 = $i3 + 1;

        i0 = staticinvoke <java.lang.Math: int abs(int)>($i4);

        $r5 = virtualinvoke r1.<com.opengamma.analytics.financial.model.interestrate.definition.HullWhiteOneFactorPiecewiseConstantParameters: double[] getVolatilityTime()>();

        $i5 = staticinvoke <java.util.Arrays: int binarySearch(double[],double)>($r5, d1);

        $i6 = $i5 + 1;

        i1 = staticinvoke <java.lang.Math: int abs(int)>($i6);

        $i7 = i1 - i0;

        i2 = $i7 + 1;

        $i8 = i2 + 1;

        r2 = newarray (double)[$i8];

        r2[0] = d0;

        $r6 = virtualinvoke r1.<com.opengamma.analytics.financial.model.interestrate.definition.HullWhiteOneFactorPiecewiseConstantParameters: double[] getVolatilityTime()>();

        $i9 = i2 - 1;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r6, i0, r2, 1, $i9);

        r2[i2] = d1;

        d34 = 0.0;

        $i10 = i2 + 1;

        r3 = newarray (double)[$i10];

        i17 = 0;

     label1:
        $i11 = i2 + 1;

        if i17 >= $i11 goto label2;

        $d29 = virtualinvoke r1.<com.opengamma.analytics.financial.model.interestrate.definition.HullWhiteOneFactorPiecewiseConstantParameters: double getMeanReversion()>();

        $d31 = 2.0 * $d29;

        $d30 = r2[i17];

        $d32 = $d31 * $d30;

        $d33 = staticinvoke <java.lang.Math: double exp(double)>($d32);

        r3[i17] = $d33;

        i17 = i17 + 1;

        goto label1;

     label2:
        i18 = 0;

     label3:
        if i18 >= i2 goto label4;

        $r7 = virtualinvoke r1.<com.opengamma.analytics.financial.model.interestrate.definition.HullWhiteOneFactorPiecewiseConstantParameters: double[] getVolatility()>();

        $i12 = i18 + i0;

        $i13 = $i12 - 1;

        $d22 = $r7[$i13];

        $r8 = virtualinvoke r1.<com.opengamma.analytics.financial.model.interestrate.definition.HullWhiteOneFactorPiecewiseConstantParameters: double[] getVolatility()>();

        $i14 = i18 + i0;

        $i15 = $i14 - 1;

        $d23 = $r8[$i15];

        $d27 = $d22 * $d23;

        $i16 = i18 + 1;

        $d25 = r3[$i16];

        $d24 = r3[i18];

        $d26 = $d25 - $d24;

        $d28 = $d27 * $d26;

        d34 = d34 + $d28;

        i18 = i18 + 1;

        goto label3;

     label4:
        $d19 = d34 / d5;

        $d20 = staticinvoke <java.lang.Math: double sqrt(double)>($d19);

        $d21 = d4 * $d20;

        return $d21;
    }

    public double alpha(com.opengamma.analytics.financial.model.interestrate.definition.HullWhiteOneFactorPiecewiseConstantParameters, double, double, double, double, double[])
    {
        com.opengamma.analytics.financial.model.interestrate.HullWhiteOneFactorPiecewiseConstantInterestRateModel r0;
        com.opengamma.analytics.financial.model.interestrate.definition.HullWhiteOneFactorPiecewiseConstantParameters r1;
        double d0, d1, d2, d3, d4, d5, d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21, $d22, $d23, $d24, $d25, $d26, $d27, $d28, $d29, $d30, $d31, $d32, $d33, $d34, $d35, $d36, $d37, $d38, $d39, $d40, $d41, $d42, $d43, d44, d45, d46;
        double[] r2, r3, r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, i23, i24, i25, i26;

        r0 := @this: com.opengamma.analytics.financial.model.interestrate.HullWhiteOneFactorPiecewiseConstantInterestRateModel;

        r1 := @parameter0: com.opengamma.analytics.financial.model.interestrate.definition.HullWhiteOneFactorPiecewiseConstantParameters;

        d0 := @parameter1: double;

        d1 := @parameter2: double;

        d2 := @parameter3: double;

        d3 := @parameter4: double;

        r2 := @parameter5: double[];

        $r5 = virtualinvoke r1.<com.opengamma.analytics.financial.model.interestrate.definition.HullWhiteOneFactorPiecewiseConstantParameters: double[] getVolatility()>();

        i0 = lengthof $r5;

        i23 = 0;

     label1:
        if i23 >= i0 goto label2;

        r2[i23] = 0.0;

        i23 = i23 + 1;

        goto label1;

     label2:
        $d8 = virtualinvoke r1.<com.opengamma.analytics.financial.model.interestrate.definition.HullWhiteOneFactorPiecewiseConstantParameters: double getMeanReversion()>();

        $d9 = neg $d8;

        $d10 = $d9 * d2;

        $d11 = staticinvoke <java.lang.Math: double exp(double)>($d10);

        $d12 = virtualinvoke r1.<com.opengamma.analytics.financial.model.interestrate.definition.HullWhiteOneFactorPiecewiseConstantParameters: double getMeanReversion()>();

        $d13 = neg $d12;

        $d14 = $d13 * d3;

        $d15 = staticinvoke <java.lang.Math: double exp(double)>($d14);

        d44 = $d11 - $d15;

        $d16 = virtualinvoke r1.<com.opengamma.analytics.financial.model.interestrate.definition.HullWhiteOneFactorPiecewiseConstantParameters: double getMeanReversion()>();

        $d17 = 2.0 * $d16;

        $d18 = virtualinvoke r1.<com.opengamma.analytics.financial.model.interestrate.definition.HullWhiteOneFactorPiecewiseConstantParameters: double getMeanReversion()>();

        $d19 = $d17 * $d18;

        $d20 = virtualinvoke r1.<com.opengamma.analytics.financial.model.interestrate.definition.HullWhiteOneFactorPiecewiseConstantParameters: double getMeanReversion()>();

        d4 = $d19 * $d20;

        $r6 = virtualinvoke r1.<com.opengamma.analytics.financial.model.interestrate.definition.HullWhiteOneFactorPiecewiseConstantParameters: double[] getVolatilityTime()>();

        $i4 = staticinvoke <java.util.Arrays: int binarySearch(double[],double)>($r6, d0);

        $i5 = $i4 + 1;

        i1 = staticinvoke <java.lang.Math: int abs(int)>($i5);

        $r7 = virtualinvoke r1.<com.opengamma.analytics.financial.model.interestrate.definition.HullWhiteOneFactorPiecewiseConstantParameters: double[] getVolatilityTime()>();

        $i6 = staticinvoke <java.util.Arrays: int binarySearch(double[],double)>($r7, d1);

        $i7 = $i6 + 1;

        i2 = staticinvoke <java.lang.Math: int abs(int)>($i7);

        $i8 = i2 - i1;

        i3 = $i8 + 1;

        $i9 = i3 + 1;

        r3 = newarray (double)[$i9];

        r3[0] = d0;

        $r8 = virtualinvoke r1.<com.opengamma.analytics.financial.model.interestrate.definition.HullWhiteOneFactorPiecewiseConstantParameters: double[] getVolatilityTime()>();

        $i10 = i3 - 1;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r8, i1, r3, 1, $i10);

        r3[i3] = d1;

        d45 = 0.0;

        $i11 = i3 + 1;

        r4 = newarray (double)[$i11];

        i24 = 0;

     label3:
        $i12 = i3 + 1;

        if i24 >= $i12 goto label4;

        $d39 = virtualinvoke r1.<com.opengamma.analytics.financial.model.interestrate.definition.HullWhiteOneFactorPiecewiseConstantParameters: double getMeanReversion()>();

        $d41 = 2.0 * $d39;

        $d40 = r3[i24];

        $d42 = $d41 * $d40;

        $d43 = staticinvoke <java.lang.Math: double exp(double)>($d42);

        r4[i24] = $d43;

        i24 = i24 + 1;

        goto label3;

     label4:
        i25 = 0;

     label5:
        if i25 >= i3 goto label6;

        $r10 = virtualinvoke r1.<com.opengamma.analytics.financial.model.interestrate.definition.HullWhiteOneFactorPiecewiseConstantParameters: double[] getVolatility()>();

        $i18 = i25 + i1;

        $i19 = $i18 - 1;

        $d32 = $r10[$i19];

        $r11 = virtualinvoke r1.<com.opengamma.analytics.financial.model.interestrate.definition.HullWhiteOneFactorPiecewiseConstantParameters: double[] getVolatility()>();

        $i20 = i25 + i1;

        $i21 = $i20 - 1;

        $d33 = $r11[$i21];

        $d37 = $d32 * $d33;

        $i22 = i25 + 1;

        $d35 = r4[$i22];

        $d34 = r4[i25];

        $d36 = $d35 - $d34;

        $d38 = $d37 * $d36;

        d45 = d45 + $d38;

        i25 = i25 + 1;

        goto label5;

     label6:
        $d21 = d45 / d4;

        d46 = staticinvoke <java.lang.Math: double sqrt(double)>($d21);

        d5 = d44 * d46;

        $d22 = d44 / d46;

        $d23 = $d22 / 2.0;

        $d24 = $d23 / d4;

        d7 = $d24 * 1.0;

        i26 = 0;

     label7:
        if i26 >= i3 goto label8;

        $i13 = i26 + i1;

        $i14 = $i13 - 1;

        $r9 = virtualinvoke r1.<com.opengamma.analytics.financial.model.interestrate.definition.HullWhiteOneFactorPiecewiseConstantParameters: double[] getVolatility()>();

        $i15 = i26 + i1;

        $i16 = $i15 - 1;

        $d25 = $r9[$i16];

        $d29 = 2.0 * $d25;

        $i17 = i26 + 1;

        $d27 = r4[$i17];

        $d26 = r4[i26];

        $d28 = $d27 - $d26;

        $d30 = $d29 * $d28;

        $d31 = $d30 * d7;

        r2[$i14] = $d31;

        i26 = i26 + 1;

        goto label7;

     label8:
        return d5;
    }

    public double kappa(double[], double[])
    {
        com.opengamma.analytics.financial.model.interestrate.HullWhiteOneFactorPiecewiseConstantInterestRateModel r0;
        double[] r1, r2, r6;
        com.opengamma.analytics.financial.model.interestrate.HullWhiteOneFactorPiecewiseConstantInterestRateModel$1 $r7;
        com.opengamma.analytics.math.rootfinding.BracketRoot $r8;
        com.opengamma.analytics.math.rootfinding.RidderSingleRootFinder $r9;
        double $d1, $d2, $d3;
        java.lang.Double $r10, $r11, $r12;

        r0 := @this: com.opengamma.analytics.financial.model.interestrate.HullWhiteOneFactorPiecewiseConstantInterestRateModel;

        r1 := @parameter0: double[];

        r2 := @parameter1: double[];

        $r7 = new com.opengamma.analytics.financial.model.interestrate.HullWhiteOneFactorPiecewiseConstantInterestRateModel$1;

        specialinvoke $r7.<com.opengamma.analytics.financial.model.interestrate.HullWhiteOneFactorPiecewiseConstantInterestRateModel$1: void <init>(com.opengamma.analytics.financial.model.interestrate.HullWhiteOneFactorPiecewiseConstantInterestRateModel,double[],double[])>(r0, r2, r1);

        $r8 = new com.opengamma.analytics.math.rootfinding.BracketRoot;

        specialinvoke $r8.<com.opengamma.analytics.math.rootfinding.BracketRoot: void <init>()>();

        $r9 = new com.opengamma.analytics.math.rootfinding.RidderSingleRootFinder;

        specialinvoke $r9.<com.opengamma.analytics.math.rootfinding.RidderSingleRootFinder: void <init>(double)>(1.0E-8);

        r6 = virtualinvoke $r8.<com.opengamma.analytics.math.rootfinding.BracketRoot: double[] getBracketedPoints(com.opengamma.analytics.math.function.Function1D,double,double)>($r7, -2.0, 2.0);

        $d1 = r6[0];

        $r10 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d1);

        $d2 = r6[1];

        $r11 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d2);

        $r12 = virtualinvoke $r9.<com.opengamma.analytics.math.rootfinding.RidderSingleRootFinder: java.lang.Double getRoot(com.opengamma.analytics.math.function.Function1D,java.lang.Double,java.lang.Double)>($r7, $r10, $r11);

        $d3 = virtualinvoke $r12.<java.lang.Double: double doubleValue()>();

        return $d3;
    }

    public double beta(com.opengamma.analytics.financial.model.interestrate.definition.HullWhiteOneFactorPiecewiseConstantParameters, double, double)
    {
        com.opengamma.analytics.financial.model.interestrate.HullWhiteOneFactorPiecewiseConstantInterestRateModel r0;
        com.opengamma.analytics.financial.model.interestrate.definition.HullWhiteOneFactorPiecewiseConstantParameters r1;
        double d0, d1, d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21, $d22, d23;
        int i0, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, i11, i12, i13;
        double[] r2, $r3, $r4, $r5, $r6, $r7;
        byte $b1, $b2;

        r0 := @this: com.opengamma.analytics.financial.model.interestrate.HullWhiteOneFactorPiecewiseConstantInterestRateModel;

        r1 := @parameter0: com.opengamma.analytics.financial.model.interestrate.definition.HullWhiteOneFactorPiecewiseConstantParameters;

        d0 := @parameter1: double;

        d1 := @parameter2: double;

        $d3 = virtualinvoke r1.<com.opengamma.analytics.financial.model.interestrate.definition.HullWhiteOneFactorPiecewiseConstantParameters: double getMeanReversion()>();

        d2 = 2.0 * $d3;

        i11 = 1;

     label1:
        $r3 = virtualinvoke r1.<com.opengamma.analytics.financial.model.interestrate.definition.HullWhiteOneFactorPiecewiseConstantParameters: double[] getVolatilityTime()>();

        $d4 = $r3[i11];

        $b1 = d0 cmpl $d4;

        if $b1 <= 0 goto label2;

        i11 = i11 + 1;

        goto label1;

     label2:
        i12 = i11;

     label3:
        $r4 = virtualinvoke r1.<com.opengamma.analytics.financial.model.interestrate.definition.HullWhiteOneFactorPiecewiseConstantParameters: double[] getVolatilityTime()>();

        $d5 = $r4[i12];

        $b2 = d1 cmpl $d5;

        if $b2 <= 0 goto label4;

        i12 = i12 + 1;

        goto label3;

     label4:
        $i3 = i12 - i11;

        i0 = $i3 + 1;

        $i4 = i0 + 1;

        r2 = newarray (double)[$i4];

        r2[0] = d0;

        $r5 = virtualinvoke r1.<com.opengamma.analytics.financial.model.interestrate.definition.HullWhiteOneFactorPiecewiseConstantParameters: double[] getVolatilityTime()>();

        $i5 = i0 - 1;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r5, i11, r2, 1, $i5);

        r2[i0] = d1;

        d23 = 0.0;

        i13 = 0;

     label5:
        if i13 >= i0 goto label6;

        $r6 = virtualinvoke r1.<com.opengamma.analytics.financial.model.interestrate.definition.HullWhiteOneFactorPiecewiseConstantParameters: double[] getVolatility()>();

        $i6 = i13 + i11;

        $i7 = $i6 - 1;

        $d8 = $r6[$i7];

        $r7 = virtualinvoke r1.<com.opengamma.analytics.financial.model.interestrate.definition.HullWhiteOneFactorPiecewiseConstantParameters: double[] getVolatility()>();

        $i8 = i13 + i11;

        $i9 = $i8 - 1;

        $d9 = $r7[$i9];

        $d10 = $d8 * $d9;

        $d11 = virtualinvoke r1.<com.opengamma.analytics.financial.model.interestrate.definition.HullWhiteOneFactorPiecewiseConstantParameters: double getMeanReversion()>();

        $d13 = 2.0 * $d11;

        $i10 = i13 + 1;

        $d12 = r2[$i10];

        $d14 = $d13 * $d12;

        $d15 = staticinvoke <java.lang.Math: double exp(double)>($d14);

        $d16 = virtualinvoke r1.<com.opengamma.analytics.financial.model.interestrate.definition.HullWhiteOneFactorPiecewiseConstantParameters: double getMeanReversion()>();

        $d18 = 2.0 * $d16;

        $d17 = r2[i13];

        $d19 = $d18 * $d17;

        $d20 = staticinvoke <java.lang.Math: double exp(double)>($d19);

        $d21 = $d15 - $d20;

        $d22 = $d10 * $d21;

        d23 = d23 + $d22;

        i13 = i13 + 1;

        goto label5;

     label6:
        $d6 = d23 / d2;

        $d7 = staticinvoke <java.lang.Math: double sqrt(double)>($d6);

        return $d7;
    }

    public double lambda(double[], double[], double[])
    {
        com.opengamma.analytics.financial.model.interestrate.HullWhiteOneFactorPiecewiseConstantInterestRateModel r0;
        double[] r1, r2, r3, r7;
        com.opengamma.analytics.financial.model.interestrate.HullWhiteOneFactorPiecewiseConstantInterestRateModel$2 $r8;
        com.opengamma.analytics.math.rootfinding.BracketRoot $r9;
        com.opengamma.analytics.math.rootfinding.RidderSingleRootFinder $r10;
        double $d1, $d2, $d3;
        java.lang.Double $r11, $r12, $r13;

        r0 := @this: com.opengamma.analytics.financial.model.interestrate.HullWhiteOneFactorPiecewiseConstantInterestRateModel;

        r1 := @parameter0: double[];

        r2 := @parameter1: double[];

        r3 := @parameter2: double[];

        $r8 = new com.opengamma.analytics.financial.model.interestrate.HullWhiteOneFactorPiecewiseConstantInterestRateModel$2;

        specialinvoke $r8.<com.opengamma.analytics.financial.model.interestrate.HullWhiteOneFactorPiecewiseConstantInterestRateModel$2: void <init>(com.opengamma.analytics.financial.model.interestrate.HullWhiteOneFactorPiecewiseConstantInterestRateModel,double[],double[],double[])>(r0, r2, r1, r3);

        $r9 = new com.opengamma.analytics.math.rootfinding.BracketRoot;

        specialinvoke $r9.<com.opengamma.analytics.math.rootfinding.BracketRoot: void <init>()>();

        $r10 = new com.opengamma.analytics.math.rootfinding.RidderSingleRootFinder;

        specialinvoke $r10.<com.opengamma.analytics.math.rootfinding.RidderSingleRootFinder: void <init>(double)>(1.0E-8);

        r7 = virtualinvoke $r9.<com.opengamma.analytics.math.rootfinding.BracketRoot: double[] getBracketedPoints(com.opengamma.analytics.math.function.Function1D,double,double)>($r8, -2.0, 2.0);

        $d1 = r7[0];

        $r11 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d1);

        $d2 = r7[1];

        $r12 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d2);

        $r13 = virtualinvoke $r10.<com.opengamma.analytics.math.rootfinding.RidderSingleRootFinder: java.lang.Double getRoot(com.opengamma.analytics.math.function.Function1D,java.lang.Double,java.lang.Double)>($r8, $r11, $r12);

        $d3 = virtualinvoke $r13.<java.lang.Double: double doubleValue()>();

        return $d3;
    }

    public double[][] volatilityMaturityPart(com.opengamma.analytics.financial.model.interestrate.definition.HullWhiteOneFactorPiecewiseConstantParameters, double, double[][])
    {
        com.opengamma.analytics.financial.model.interestrate.HullWhiteOneFactorPiecewiseConstantInterestRateModel r0;
        com.opengamma.analytics.financial.model.interestrate.definition.HullWhiteOneFactorPiecewiseConstantParameters r1;
        double d0, d1, d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10;
        double[][] r2, r3;
        int $i0, $i1, $i2, $i3, i4, i5;
        double[] $r4, $r5, $r6, $r7, $r8;

        r0 := @this: com.opengamma.analytics.financial.model.interestrate.HullWhiteOneFactorPiecewiseConstantInterestRateModel;

        r1 := @parameter0: com.opengamma.analytics.financial.model.interestrate.definition.HullWhiteOneFactorPiecewiseConstantParameters;

        d0 := @parameter1: double;

        r2 := @parameter2: double[][];

        d1 = virtualinvoke r1.<com.opengamma.analytics.financial.model.interestrate.definition.HullWhiteOneFactorPiecewiseConstantParameters: double getMeanReversion()>();

        $i0 = lengthof r2;

        r3 = newarray (double[])[$i0];

        $d3 = neg d1;

        $d4 = $d3 * d0;

        d2 = staticinvoke <java.lang.Math: double exp(double)>($d4);

        i4 = 0;

     label1:
        $i1 = lengthof r2;

        if i4 >= $i1 goto label4;

        $r4 = r2[i4];

        $i2 = lengthof $r4;

        $r5 = newarray (double)[$i2];

        r3[i4] = $r5;

        i5 = 0;

     label2:
        $r6 = r2[i4];

        $i3 = lengthof $r6;

        if i5 >= $i3 goto label3;

        $r8 = r3[i4];

        $d6 = neg d1;

        $r7 = r2[i4];

        $d5 = $r7[i5];

        $d7 = $d6 * $d5;

        $d8 = staticinvoke <java.lang.Math: double exp(double)>($d7);

        $d9 = d2 - $d8;

        $d10 = $d9 / d1;

        $r8[i5] = $d10;

        i5 = i5 + 1;

        goto label2;

     label3:
        i4 = i4 + 1;

        goto label1;

     label4:
        return r3;
    }

    public double gamma(com.opengamma.analytics.financial.model.interestrate.definition.HullWhiteOneFactorPiecewiseConstantParameters, double, double)
    {
        com.opengamma.analytics.financial.model.interestrate.HullWhiteOneFactorPiecewiseConstantInterestRateModel r0;
        com.opengamma.analytics.financial.model.interestrate.definition.HullWhiteOneFactorPiecewiseConstantParameters r1;
        double d0, d1, d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, d16;
        double[] r2, r3, r4, $r5, $r6, $r7;
        int i0, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, i12, i13, i14, i15;
        byte $b1, $b2;

        r0 := @this: com.opengamma.analytics.financial.model.interestrate.HullWhiteOneFactorPiecewiseConstantInterestRateModel;

        r1 := @parameter0: com.opengamma.analytics.financial.model.interestrate.definition.HullWhiteOneFactorPiecewiseConstantParameters;

        d0 := @parameter1: double;

        d1 := @parameter2: double;

        d2 = virtualinvoke r1.<com.opengamma.analytics.financial.model.interestrate.definition.HullWhiteOneFactorPiecewiseConstantParameters: double getMeanReversion()>();

        r2 = virtualinvoke r1.<com.opengamma.analytics.financial.model.interestrate.definition.HullWhiteOneFactorPiecewiseConstantParameters: double[] getVolatility()>();

        i12 = 1;

     label1:
        $r5 = virtualinvoke r1.<com.opengamma.analytics.financial.model.interestrate.definition.HullWhiteOneFactorPiecewiseConstantParameters: double[] getVolatilityTime()>();

        $d3 = $r5[i12];

        $b1 = d0 cmpl $d3;

        if $b1 <= 0 goto label2;

        i12 = i12 + 1;

        goto label1;

     label2:
        i13 = i12;

     label3:
        $r6 = virtualinvoke r1.<com.opengamma.analytics.financial.model.interestrate.definition.HullWhiteOneFactorPiecewiseConstantParameters: double[] getVolatilityTime()>();

        $d4 = $r6[i13];

        $b2 = d1 cmpl $d4;

        if $b2 <= 0 goto label4;

        i13 = i13 + 1;

        goto label3;

     label4:
        $i3 = i13 - i12;

        i0 = $i3 + 2;

        r3 = newarray (double)[i0];

        r3[0] = d0;

        $r7 = virtualinvoke r1.<com.opengamma.analytics.financial.model.interestrate.definition.HullWhiteOneFactorPiecewiseConstantParameters: double[] getVolatilityTime()>();

        $i4 = i0 - 2;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r7, i12, r3, 1, $i4);

        $i5 = i0 - 1;

        r3[$i5] = d1;

        d16 = 0.0;

        r4 = newarray (double)[i0];

        i14 = 0;

     label5:
        if i14 >= i0 goto label6;

        $d13 = 2.0 * d2;

        $d12 = r3[i14];

        $d14 = $d13 * $d12;

        $d15 = staticinvoke <java.lang.Math: double exp(double)>($d14);

        r4[i14] = $d15;

        i14 = i14 + 1;

        goto label5;

     label6:
        i15 = 0;

     label7:
        $i6 = i0 - 1;

        if i15 >= $i6 goto label8;

        $i7 = i12 - 1;

        $i8 = $i7 + i15;

        $d6 = r2[$i8];

        $i9 = i12 - 1;

        $i10 = $i9 + i15;

        $d5 = r2[$i10];

        $d10 = $d6 * $d5;

        $i11 = i15 + 1;

        $d8 = r4[$i11];

        $d7 = r4[i15];

        $d9 = $d8 - $d7;

        $d11 = $d10 * $d9;

        d16 = d16 + $d11;

        i15 = i15 + 1;

        goto label7;

     label8:
        return d16;
    }

    public double swapRate(double, double[], double[], double[], double[])
    {
        com.opengamma.analytics.financial.model.interestrate.HullWhiteOneFactorPiecewiseConstantInterestRateModel r0;
        double d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21, $d22, $d23, $d24, d25, d26;
        double[] r1, r2, r3, r4;
        int $i0, $i1, $i2, i3, $i4, i5;
        boolean $z0;

        r0 := @this: com.opengamma.analytics.financial.model.interestrate.HullWhiteOneFactorPiecewiseConstantInterestRateModel;

        d0 := @parameter0: double;

        r1 := @parameter1: double[];

        r2 := @parameter2: double[];

        r3 := @parameter3: double[];

        r4 := @parameter4: double[];

        $i1 = lengthof r1;

        $i0 = lengthof r2;

        if $i1 != $i0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z0, "Length shouyld be equal");

        d25 = 0.0;

        i3 = 0;

     label3:
        $i4 = lengthof r3;

        if i3 >= $i4 goto label4;

        $d22 = r3[i3];

        $d14 = r4[i3];

        $d15 = neg $d14;

        $d20 = $d15 * d0;

        $d16 = r4[i3];

        $d18 = 0.5 * $d16;

        $d17 = r4[i3];

        $d19 = $d18 * $d17;

        $d21 = $d20 - $d19;

        $d23 = staticinvoke <java.lang.Math: double exp(double)>($d21);

        $d24 = $d22 * $d23;

        d25 = d25 + $d24;

        i3 = i3 + 1;

        goto label3;

     label4:
        d26 = 0.0;

        i5 = 0;

     label5:
        $i2 = lengthof r1;

        if i5 >= $i2 goto label6;

        $d11 = r1[i5];

        $d3 = r2[i5];

        $d4 = neg $d3;

        $d9 = $d4 * d0;

        $d5 = r2[i5];

        $d7 = 0.5 * $d5;

        $d6 = r2[i5];

        $d8 = $d7 * $d6;

        $d10 = $d9 - $d8;

        $d12 = staticinvoke <java.lang.Math: double exp(double)>($d10);

        $d13 = $d11 * $d12;

        d26 = d26 + $d13;

        i5 = i5 + 1;

        goto label5;

     label6:
        $d1 = neg d25;

        $d2 = $d1 / d26;

        return $d2;
    }

    public double swapRateDx1(double, double[], double[], double[], double[])
    {
        com.opengamma.analytics.financial.model.interestrate.HullWhiteOneFactorPiecewiseConstantInterestRateModel r0;
        double d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21, $d22, $d23, $d24, $d25, $d26, $d27, $d28, $d29, $d30, $d31, $d32, d33, d34, d35, d36, d37, d38;
        double[] r1, r2, r3, r4;
        int $i0, $i1, i2, i3;

        r0 := @this: com.opengamma.analytics.financial.model.interestrate.HullWhiteOneFactorPiecewiseConstantInterestRateModel;

        d0 := @parameter0: double;

        r1 := @parameter1: double[];

        r2 := @parameter2: double[];

        r3 := @parameter3: double[];

        r4 := @parameter4: double[];

        d33 = 0.0;

        d34 = 0.0;

        i2 = 0;

     label1:
        $i0 = lengthof r3;

        if i2 >= $i0 goto label2;

        $d28 = r3[i2];

        $d20 = r4[i2];

        $d21 = neg $d20;

        $d26 = $d21 * d0;

        $d22 = r4[i2];

        $d24 = 0.5 * $d22;

        $d23 = r4[i2];

        $d25 = $d24 * $d23;

        $d27 = $d26 - $d25;

        $d29 = staticinvoke <java.lang.Math: double exp(double)>($d27);

        d35 = $d28 * $d29;

        d33 = d33 + d35;

        $d30 = r4[i2];

        $d31 = neg $d30;

        $d32 = $d31 * d35;

        d34 = d34 + $d32;

        i2 = i2 + 1;

        goto label1;

     label2:
        d36 = 0.0;

        d37 = 0.0;

        i3 = 0;

     label3:
        $i1 = lengthof r1;

        if i3 >= $i1 goto label4;

        $d15 = r1[i3];

        $d7 = r2[i3];

        $d8 = neg $d7;

        $d13 = $d8 * d0;

        $d9 = r2[i3];

        $d11 = 0.5 * $d9;

        $d10 = r2[i3];

        $d12 = $d11 * $d10;

        $d14 = $d13 - $d12;

        $d16 = staticinvoke <java.lang.Math: double exp(double)>($d14);

        d38 = $d15 * $d16;

        d36 = d36 + d38;

        $d17 = r2[i3];

        $d18 = neg $d17;

        $d19 = $d18 * d38;

        d37 = d37 + $d19;

        i3 = i3 + 1;

        goto label3;

     label4:
        $d2 = d34 * d36;

        $d1 = d33 * d37;

        $d3 = $d2 - $d1;

        $d5 = neg $d3;

        $d4 = d36 * d36;

        $d6 = $d5 / $d4;

        return $d6;
    }

    public double swapRateDx2(double, double[], double[], double[], double[])
    {
        com.opengamma.analytics.financial.model.interestrate.HullWhiteOneFactorPiecewiseConstantInterestRateModel r0;
        double d0, d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21, $d22, $d23, $d24, $d25, $d26, $d27, $d28, $d29, $d30, $d31, $d32, $d33, $d34, $d35, $d36, $d37, $d38, $d39, $d40, $d41, $d42, $d43, $d44, $d45, $d46, $d47, $d48, d49, d50, d51, d52, d53, d54, d55, d56, d57;
        double[] r1, r2, r3, r4;
        int $i0, $i1, i2, i3;

        r0 := @this: com.opengamma.analytics.financial.model.interestrate.HullWhiteOneFactorPiecewiseConstantInterestRateModel;

        d0 := @parameter0: double;

        r1 := @parameter1: double[];

        r2 := @parameter2: double[];

        r3 := @parameter3: double[];

        r4 := @parameter4: double[];

        d49 = 0.0;

        d50 = 0.0;

        d51 = 0.0;

        i2 = 0;

     label1:
        $i0 = lengthof r3;

        if i2 >= $i0 goto label2;

        $d40 = r3[i2];

        $d32 = r4[i2];

        $d33 = neg $d32;

        $d38 = $d33 * d0;

        $d34 = r4[i2];

        $d36 = 0.5 * $d34;

        $d35 = r4[i2];

        $d37 = $d36 * $d35;

        $d39 = $d38 - $d37;

        $d41 = staticinvoke <java.lang.Math: double exp(double)>($d39);

        d52 = $d40 * $d41;

        d49 = d49 + d52;

        $d42 = r4[i2];

        $d43 = neg $d42;

        $d44 = $d43 * d52;

        d50 = d50 + $d44;

        $d46 = r4[i2];

        $d45 = r4[i2];

        $d47 = $d46 * $d45;

        $d48 = $d47 * d52;

        d51 = d51 + $d48;

        i2 = i2 + 1;

        goto label1;

     label2:
        d53 = 0.0;

        d54 = 0.0;

        d55 = 0.0;

        i3 = 0;

     label3:
        $i1 = lengthof r1;

        if i3 >= $i1 goto label4;

        $d23 = r1[i3];

        $d15 = r2[i3];

        $d16 = neg $d15;

        $d21 = $d16 * d0;

        $d17 = r2[i3];

        $d19 = 0.5 * $d17;

        $d18 = r2[i3];

        $d20 = $d19 * $d18;

        $d22 = $d21 - $d20;

        $d24 = staticinvoke <java.lang.Math: double exp(double)>($d22);

        d56 = $d23 * $d24;

        d53 = d53 + d56;

        $d25 = r2[i3];

        $d26 = neg $d25;

        $d27 = $d26 * d56;

        d54 = d54 + $d27;

        $d29 = r2[i3];

        $d28 = r2[i3];

        $d30 = $d29 * $d28;

        $d31 = $d30 * d56;

        d55 = d55 + $d31;

        i3 = i3 + 1;

        goto label3;

     label4:
        d57 = d53 * d53;

        d1 = d53 * d57;

        $d2 = neg d51;

        $d8 = $d2 / d53;

        $d3 = 2.0 * d50;

        $d5 = $d3 * d54;

        $d4 = d49 * d55;

        $d6 = $d5 + $d4;

        $d7 = $d6 / d57;

        $d13 = $d8 + $d7;

        $d9 = 2.0 * d49;

        $d10 = $d9 * d54;

        $d11 = $d10 * d54;

        $d12 = $d11 / d1;

        $d14 = $d13 - $d12;

        return $d14;
    }

    public double[] swapRateDdcfi1(double, double[], double[], double[], double[])
    {
        com.opengamma.analytics.financial.model.interestrate.HullWhiteOneFactorPiecewiseConstantInterestRateModel r0;
        double d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21, $d22, d23;
        double[] r1, r2, r3, r4, r5;
        int i0, i1, i2, i3;

        r0 := @this: com.opengamma.analytics.financial.model.interestrate.HullWhiteOneFactorPiecewiseConstantInterestRateModel;

        d0 := @parameter0: double;

        r1 := @parameter1: double[];

        r2 := @parameter2: double[];

        r3 := @parameter3: double[];

        r4 := @parameter4: double[];

        i0 = lengthof r3;

        i1 = lengthof r1;

        r5 = newarray (double)[i0];

        d23 = 0.0;

        i2 = 0;

     label1:
        if i2 >= i1 goto label2;

        $d20 = r1[i2];

        $d12 = r2[i2];

        $d13 = neg $d12;

        $d18 = $d13 * d0;

        $d14 = r2[i2];

        $d16 = 0.5 * $d14;

        $d15 = r2[i2];

        $d17 = $d16 * $d15;

        $d19 = $d18 - $d17;

        $d21 = staticinvoke <java.lang.Math: double exp(double)>($d19);

        $d22 = $d20 * $d21;

        d23 = d23 + $d22;

        i2 = i2 + 1;

        goto label1;

     label2:
        i3 = 0;

     label3:
        if i3 >= i0 goto label4;

        $d1 = r4[i3];

        $d2 = neg $d1;

        $d7 = $d2 * d0;

        $d3 = r4[i3];

        $d5 = 0.5 * $d3;

        $d4 = r4[i3];

        $d6 = $d5 * $d4;

        $d8 = $d7 - $d6;

        $d9 = staticinvoke <java.lang.Math: double exp(double)>($d8);

        $d10 = neg $d9;

        $d11 = $d10 / d23;

        r5[i3] = $d11;

        i3 = i3 + 1;

        goto label3;

     label4:
        return r5;
    }

    public double[] swapRateDdcff1(double, double[], double[], double[], double[])
    {
        com.opengamma.analytics.financial.model.interestrate.HullWhiteOneFactorPiecewiseConstantInterestRateModel r0;
        double d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21, $d22, $d23, $d24, $d25, $d26, d27, d28, d29;
        double[] r1, r2, r3, r4, r5, r6;
        int i0, i1, i2, i3, i4;

        r0 := @this: com.opengamma.analytics.financial.model.interestrate.HullWhiteOneFactorPiecewiseConstantInterestRateModel;

        d0 := @parameter0: double;

        r1 := @parameter1: double[];

        r2 := @parameter2: double[];

        r3 := @parameter3: double[];

        r4 := @parameter4: double[];

        i0 = lengthof r1;

        i1 = lengthof r3;

        r5 = newarray (double)[i1];

        d27 = 0.0;

        i2 = 0;

     label1:
        if i2 >= i1 goto label2;

        $d24 = r3[i2];

        $d16 = r4[i2];

        $d17 = neg $d16;

        $d22 = $d17 * d0;

        $d18 = r4[i2];

        $d20 = 0.5 * $d18;

        $d19 = r4[i2];

        $d21 = $d20 * $d19;

        $d23 = $d22 - $d21;

        $d25 = staticinvoke <java.lang.Math: double exp(double)>($d23);

        $d26 = $d24 * $d25;

        d27 = d27 + $d26;

        i2 = i2 + 1;

        goto label1;

     label2:
        d28 = 0.0;

        i3 = 0;

     label3:
        if i3 >= i0 goto label4;

        $d4 = r2[i3];

        $d5 = neg $d4;

        $d10 = $d5 * d0;

        $d6 = r2[i3];

        $d8 = 0.5 * $d6;

        $d7 = r2[i3];

        $d9 = $d8 * $d7;

        $d11 = $d10 - $d9;

        $d12 = staticinvoke <java.lang.Math: double exp(double)>($d11);

        r5[i3] = $d12;

        $d14 = r1[i3];

        $d13 = r5[i3];

        $d15 = $d14 * $d13;

        d28 = d28 + $d15;

        i3 = i3 + 1;

        goto label3;

     label4:
        $d1 = d28 * d28;

        d29 = d27 / $d1;

        r6 = newarray (double)[i0];

        i4 = 0;

     label5:
        if i4 >= i0 goto label6;

        $d2 = r5[i4];

        $d3 = d29 * $d2;

        r6[i4] = $d3;

        i4 = i4 + 1;

        goto label5;

     label6:
        return r6;
    }

    public double[] swapRateDai1(double, double[], double[], double[], double[])
    {
        com.opengamma.analytics.financial.model.interestrate.HullWhiteOneFactorPiecewiseConstantInterestRateModel r0;
        double d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21, $d22, $d23, $d24, $d25, $d26, d27;
        double[] r1, r2, r3, r4, r5;
        int i0, i1, i2, i3;

        r0 := @this: com.opengamma.analytics.financial.model.interestrate.HullWhiteOneFactorPiecewiseConstantInterestRateModel;

        d0 := @parameter0: double;

        r1 := @parameter1: double[];

        r2 := @parameter2: double[];

        r3 := @parameter3: double[];

        r4 := @parameter4: double[];

        i0 = lengthof r3;

        i1 = lengthof r1;

        r5 = newarray (double)[i0];

        d27 = 0.0;

        i2 = 0;

     label1:
        if i2 >= i1 goto label2;

        $d24 = r1[i2];

        $d16 = r2[i2];

        $d17 = neg $d16;

        $d22 = $d17 * d0;

        $d18 = r2[i2];

        $d20 = 0.5 * $d18;

        $d19 = r2[i2];

        $d21 = $d20 * $d19;

        $d23 = $d22 - $d21;

        $d25 = staticinvoke <java.lang.Math: double exp(double)>($d23);

        $d26 = $d24 * $d25;

        d27 = d27 + $d26;

        i2 = i2 + 1;

        goto label1;

     label2:
        i3 = 0;

     label3:
        if i3 >= i0 goto label4;

        $d9 = r3[i3];

        $d1 = r4[i3];

        $d2 = neg $d1;

        $d7 = $d2 * d0;

        $d3 = r4[i3];

        $d5 = 0.5 * $d3;

        $d4 = r4[i3];

        $d6 = $d5 * $d4;

        $d8 = $d7 - $d6;

        $d10 = staticinvoke <java.lang.Math: double exp(double)>($d8);

        $d13 = $d9 * $d10;

        $d11 = r4[i3];

        $d12 = d0 + $d11;

        $d14 = $d13 * $d12;

        $d15 = $d14 / d27;

        r5[i3] = $d15;

        i3 = i3 + 1;

        goto label3;

     label4:
        return r5;
    }

    public double[] swapRateDaf1(double, double[], double[], double[], double[])
    {
        com.opengamma.analytics.financial.model.interestrate.HullWhiteOneFactorPiecewiseConstantInterestRateModel r0;
        double d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21, $d22, $d23, $d24, $d25, $d26, $d27, $d28, $d29, $d30, d31, d32, d33;
        double[] r1, r2, r3, r4, r5, r6;
        int i0, i1, i2, i3, i4;

        r0 := @this: com.opengamma.analytics.financial.model.interestrate.HullWhiteOneFactorPiecewiseConstantInterestRateModel;

        d0 := @parameter0: double;

        r1 := @parameter1: double[];

        r2 := @parameter2: double[];

        r3 := @parameter3: double[];

        r4 := @parameter4: double[];

        i0 = lengthof r1;

        i1 = lengthof r3;

        r5 = newarray (double)[i1];

        d31 = 0.0;

        i2 = 0;

     label1:
        if i2 >= i1 goto label2;

        $d28 = r3[i2];

        $d20 = r4[i2];

        $d21 = neg $d20;

        $d26 = $d21 * d0;

        $d22 = r4[i2];

        $d24 = 0.5 * $d22;

        $d23 = r4[i2];

        $d25 = $d24 * $d23;

        $d27 = $d26 - $d25;

        $d29 = staticinvoke <java.lang.Math: double exp(double)>($d27);

        $d30 = $d28 * $d29;

        d31 = d31 + $d30;

        i2 = i2 + 1;

        goto label1;

     label2:
        d32 = 0.0;

        i3 = 0;

     label3:
        if i3 >= i0 goto label4;

        $d16 = r1[i3];

        $d8 = r2[i3];

        $d9 = neg $d8;

        $d14 = $d9 * d0;

        $d10 = r2[i3];

        $d12 = 0.5 * $d10;

        $d11 = r2[i3];

        $d13 = $d12 * $d11;

        $d15 = $d14 - $d13;

        $d17 = staticinvoke <java.lang.Math: double exp(double)>($d15);

        $d18 = $d16 * $d17;

        r5[i3] = $d18;

        $d19 = r5[i3];

        d32 = d32 + $d19;

        i3 = i3 + 1;

        goto label3;

     label4:
        $d1 = d32 * d32;

        d33 = d31 / $d1;

        r6 = newarray (double)[i0];

        i4 = 0;

     label5:
        if i4 >= i0 goto label6;

        $d2 = r5[i4];

        $d6 = d33 * $d2;

        $d4 = neg d0;

        $d3 = r2[i4];

        $d5 = $d4 - $d3;

        $d7 = $d6 * $d5;

        r6[i4] = $d7;

        i4 = i4 + 1;

        goto label5;

     label6:
        return r6;
    }

    public com.opengamma.util.tuple.Pair swapRateDx2Ddcf1(double, double[], double[], double[], double[])
    {
        com.opengamma.analytics.financial.model.interestrate.HullWhiteOneFactorPiecewiseConstantInterestRateModel r0;
        double d0, d1, d2, d4, d5, d6, d7, d8, d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21, $d22, $d23, $d24, $d25, $d26, $d27, $d28, $d29, $d30, $d31, $d32, $d33, $d34, $d35, $d36, $d37, $d38, $d39, $d40, $d41, $d42, $d43, $d44, $d45, $d46, $d47, $d48, $d49, $d50, $d51, $d52, $d53, $d54, $d55, $d56, $d57, $d58, $d59, $d60, $d61, $d62, $d63, $d64, $d65, $d66, $d67, $d68, $d69, $d70, $d71, $d72, $d73, $d74, $d75, $d76, $d77, $d78, $d79, $d80, $d81, $d82, $d83, $d84, $d85, $d86, $d87, $d88, $d89, $d90, $d91, $d92, $d93, $d94, $d95, $d96, $d97, $d98, $d99, $d100, $d101, $d102, $d103, $d104, d105, d106, d107, d108, d109, d110, d111;
        double[] r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r13;
        int i0, i1, i2, i3, i4, i5;
        com.opengamma.util.tuple.ObjectsPair $r12;

        r0 := @this: com.opengamma.analytics.financial.model.interestrate.HullWhiteOneFactorPiecewiseConstantInterestRateModel;

        d0 := @parameter0: double;

        r1 := @parameter1: double[];

        r2 := @parameter2: double[];

        r3 := @parameter3: double[];

        r4 := @parameter4: double[];

        i0 = lengthof r1;

        i1 = lengthof r3;

        d105 = 0.0;

        d106 = 0.0;

        d107 = 0.0;

        r5 = newarray (double)[i1];

        r6 = newarray (double)[i1];

        i2 = 0;

     label1:
        if i2 >= i1 goto label2;

        $d83 = r4[i2];

        $d84 = neg $d83;

        $d89 = $d84 * d0;

        $d85 = r4[i2];

        $d87 = 0.5 * $d85;

        $d86 = r4[i2];

        $d88 = $d87 * $d86;

        $d90 = $d89 - $d88;

        $d91 = staticinvoke <java.lang.Math: double exp(double)>($d90);

        r6[i2] = $d91;

        $d93 = r3[i2];

        $d92 = r6[i2];

        $d94 = $d93 * $d92;

        r5[i2] = $d94;

        $d95 = r5[i2];

        d105 = d105 + $d95;

        $d96 = r4[i2];

        $d98 = neg $d96;

        $d97 = r5[i2];

        $d99 = $d98 * $d97;

        d106 = d106 + $d99;

        $d101 = r4[i2];

        $d100 = r4[i2];

        $d103 = $d101 * $d100;

        $d102 = r5[i2];

        $d104 = $d103 * $d102;

        d107 = d107 + $d104;

        i2 = i2 + 1;

        goto label1;

     label2:
        d108 = 0.0;

        d109 = 0.0;

        d110 = 0.0;

        r7 = newarray (double)[i0];

        r8 = newarray (double)[i0];

        i3 = 0;

     label3:
        if i3 >= i0 goto label4;

        $d61 = r2[i3];

        $d62 = neg $d61;

        $d67 = $d62 * d0;

        $d63 = r2[i3];

        $d65 = 0.5 * $d63;

        $d64 = r2[i3];

        $d66 = $d65 * $d64;

        $d68 = $d67 - $d66;

        $d69 = staticinvoke <java.lang.Math: double exp(double)>($d68);

        r8[i3] = $d69;

        $d71 = r1[i3];

        $d70 = r8[i3];

        $d72 = $d71 * $d70;

        r7[i3] = $d72;

        $d73 = r7[i3];

        d108 = d108 + $d73;

        $d74 = r2[i3];

        $d76 = neg $d74;

        $d75 = r7[i3];

        $d77 = $d76 * $d75;

        d109 = d109 + $d77;

        $d79 = r2[i3];

        $d78 = r2[i3];

        $d81 = $d79 * $d78;

        $d80 = r7[i3];

        $d82 = $d81 * $d80;

        d110 = d110 + $d82;

        i3 = i3 + 1;

        goto label3;

     label4:
        d111 = d108 * d108;

        d1 = d108 * d111;

        d2 = d108 * d1;

        $d13 = d107 / d111;

        $d10 = 2.0 * d105;

        $d11 = $d10 * d110;

        $d12 = $d11 / d1;

        $d17 = $d13 - $d12;

        $d14 = 4.0 * d106;

        $d15 = $d14 * d109;

        $d16 = $d15 / d1;

        $d22 = $d17 - $d16;

        $d18 = 6.0 * d109;

        $d19 = $d18 * d109;

        $d20 = $d19 * d105;

        $d21 = $d20 / d2;

        $d23 = $d22 + $d21;

        d4 = $d23 * 1.0;

        $d24 = 2.0 * d106;

        $d28 = $d24 / d111;

        $d25 = 4.0 * d105;

        $d26 = $d25 * d109;

        $d27 = $d26 / d1;

        $d29 = $d28 - $d27;

        d5 = $d29 * 1.0;

        $d30 = d105 / d111;

        d6 = $d30 * 1.0;

        $d34 = d110 / d111;

        $d31 = 2.0 * d109;

        $d32 = $d31 * d109;

        $d33 = $d32 / d1;

        $d35 = $d34 - $d33;

        d7 = $d35 * 1.0;

        $d36 = 2.0 * d109;

        $d37 = $d36 / d111;

        d8 = $d37 * 1.0;

        $d38 = -1.0 / d108;

        d9 = $d38 * 1.0;

        r9 = newarray (double)[i0];

        r10 = newarray (double)[i0];

        i4 = 0;

     label5:
        if i4 >= i0 goto label6;

        $d50 = r2[i4];

        $d51 = $d50 * d5;

        $d56 = d4 - $d51;

        $d53 = r2[i4];

        $d52 = r2[i4];

        $d54 = $d53 * $d52;

        $d55 = $d54 * d6;

        $d57 = $d56 + $d55;

        r10[i4] = $d57;

        $d59 = r8[i4];

        $d58 = r10[i4];

        $d60 = $d59 * $d58;

        r9[i4] = $d60;

        i4 = i4 + 1;

        goto label5;

     label6:
        r13 = newarray (double)[i1];

        r11 = newarray (double)[i1];

        i5 = 0;

     label7:
        if i5 >= i1 goto label8;

        $d39 = r4[i5];

        $d40 = $d39 * d8;

        $d45 = d7 - $d40;

        $d42 = r4[i5];

        $d41 = r4[i5];

        $d43 = $d42 * $d41;

        $d44 = $d43 * d9;

        $d46 = $d45 + $d44;

        r11[i5] = $d46;

        $d48 = r6[i5];

        $d47 = r11[i5];

        $d49 = $d48 * $d47;

        r13[i5] = $d49;

        i5 = i5 + 1;

        goto label7;

     label8:
        $r12 = staticinvoke <com.opengamma.util.tuple.ObjectsPair: com.opengamma.util.tuple.ObjectsPair of(java.lang.Object,java.lang.Object)>(r9, r13);

        return $r12;
    }

    public com.opengamma.util.tuple.Pair swapRateDx2Da1(double, double[], double[], double[], double[])
    {
        com.opengamma.analytics.financial.model.interestrate.HullWhiteOneFactorPiecewiseConstantInterestRateModel r0;
        double d0, d1, d2, d4, d5, d6, d7, d8, d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21, $d22, $d23, $d24, $d25, $d26, $d27, $d28, $d29, $d30, $d31, $d32, $d33, $d34, $d35, $d36, $d37, $d38, $d39, $d40, $d41, $d42, $d43, $d44, $d45, $d46, $d47, $d48, $d49, $d50, $d51, $d52, $d53, $d54, $d55, $d56, $d57, $d58, $d59, $d60, $d61, $d62, $d63, $d64, $d65, $d66, $d67, $d68, $d69, $d70, $d71, $d72, $d73, $d74, $d75, $d76, $d77, $d78, $d79, $d80, $d81, $d82, $d83, $d84, $d85, $d86, $d87, $d88, $d89, $d90, $d91, $d92, $d93, $d94, $d95, $d96, $d97, $d98, $d99, $d100, $d101, $d102, $d103, $d104, $d105, $d106, $d107, $d108, $d109, $d110, $d111, $d112, $d113, $d114, $d115, $d116, $d117, $d118, $d119, $d120, $d121, $d122, $d123, $d124, $d125, $d126, $d127, $d128, $d129, $d130, d131, d132, d133, d134, d135, d136, d137;
        double[] r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r13;
        int i0, i1, i2, i3, i4, i5;
        com.opengamma.util.tuple.ObjectsPair $r12;

        r0 := @this: com.opengamma.analytics.financial.model.interestrate.HullWhiteOneFactorPiecewiseConstantInterestRateModel;

        d0 := @parameter0: double;

        r1 := @parameter1: double[];

        r2 := @parameter2: double[];

        r3 := @parameter3: double[];

        r4 := @parameter4: double[];

        i0 = lengthof r1;

        i1 = lengthof r3;

        d131 = 0.0;

        d132 = 0.0;

        d133 = 0.0;

        r5 = newarray (double)[i1];

        r6 = newarray (double)[i1];

        i2 = 0;

     label1:
        if i2 >= i1 goto label2;

        $d109 = r4[i2];

        $d110 = neg $d109;

        $d115 = $d110 * d0;

        $d111 = r4[i2];

        $d113 = 0.5 * $d111;

        $d112 = r4[i2];

        $d114 = $d113 * $d112;

        $d116 = $d115 - $d114;

        $d117 = staticinvoke <java.lang.Math: double exp(double)>($d116);

        r6[i2] = $d117;

        $d119 = r3[i2];

        $d118 = r6[i2];

        $d120 = $d119 * $d118;

        r5[i2] = $d120;

        $d121 = r5[i2];

        d131 = d131 + $d121;

        $d122 = r4[i2];

        $d124 = neg $d122;

        $d123 = r5[i2];

        $d125 = $d124 * $d123;

        d132 = d132 + $d125;

        $d127 = r4[i2];

        $d126 = r4[i2];

        $d129 = $d127 * $d126;

        $d128 = r5[i2];

        $d130 = $d129 * $d128;

        d133 = d133 + $d130;

        i2 = i2 + 1;

        goto label1;

     label2:
        d134 = 0.0;

        d135 = 0.0;

        d136 = 0.0;

        r7 = newarray (double)[i0];

        r8 = newarray (double)[i0];

        i3 = 0;

     label3:
        if i3 >= i0 goto label4;

        $d87 = r2[i3];

        $d88 = neg $d87;

        $d93 = $d88 * d0;

        $d89 = r2[i3];

        $d91 = 0.5 * $d89;

        $d90 = r2[i3];

        $d92 = $d91 * $d90;

        $d94 = $d93 - $d92;

        $d95 = staticinvoke <java.lang.Math: double exp(double)>($d94);

        r8[i3] = $d95;

        $d97 = r1[i3];

        $d96 = r8[i3];

        $d98 = $d97 * $d96;

        r7[i3] = $d98;

        $d99 = r7[i3];

        d134 = d134 + $d99;

        $d100 = r2[i3];

        $d102 = neg $d100;

        $d101 = r7[i3];

        $d103 = $d102 * $d101;

        d135 = d135 + $d103;

        $d105 = r2[i3];

        $d104 = r2[i3];

        $d107 = $d105 * $d104;

        $d106 = r7[i3];

        $d108 = $d107 * $d106;

        d136 = d136 + $d108;

        i3 = i3 + 1;

        goto label3;

     label4:
        d137 = d134 * d134;

        d1 = d134 * d137;

        d2 = d134 * d1;

        $d13 = d133 / d137;

        $d10 = 2.0 * d131;

        $d11 = $d10 * d136;

        $d12 = $d11 / d1;

        $d17 = $d13 - $d12;

        $d14 = 4.0 * d132;

        $d15 = $d14 * d135;

        $d16 = $d15 / d1;

        $d22 = $d17 - $d16;

        $d18 = 6.0 * d135;

        $d19 = $d18 * d135;

        $d20 = $d19 * d131;

        $d21 = $d20 / d2;

        $d23 = $d22 + $d21;

        d4 = $d23 * 1.0;

        $d24 = 2.0 * d132;

        $d28 = $d24 / d137;

        $d25 = 4.0 * d131;

        $d26 = $d25 * d135;

        $d27 = $d26 / d1;

        $d29 = $d28 - $d27;

        d5 = $d29 * 1.0;

        $d30 = d131 / d137;

        d6 = $d30 * 1.0;

        $d34 = d136 / d137;

        $d31 = 2.0 * d135;

        $d32 = $d31 * d135;

        $d33 = $d32 / d1;

        $d35 = $d34 - $d33;

        d7 = $d35 * 1.0;

        $d36 = 2.0 * d135;

        $d37 = $d36 / d137;

        d8 = $d37 * 1.0;

        $d38 = -1.0 / d134;

        d9 = $d38 * 1.0;

        r9 = newarray (double)[i0];

        r10 = newarray (double)[i0];

        i4 = 0;

     label5:
        if i4 >= i0 goto label6;

        $d63 = r2[i4];

        $d64 = $d63 * d5;

        $d69 = d4 - $d64;

        $d66 = r2[i4];

        $d65 = r2[i4];

        $d67 = $d66 * $d65;

        $d68 = $d67 * d6;

        $d70 = $d69 + $d68;

        r10[i4] = $d70;

        $d74 = r7[i4];

        $d72 = neg d0;

        $d71 = r2[i4];

        $d73 = $d72 - $d71;

        $d76 = $d74 * $d73;

        $d75 = r10[i4];

        $d79 = $d76 * $d75;

        $d77 = r7[i4];

        $d78 = $d77 * d5;

        $d85 = $d79 - $d78;

        $d80 = r2[i4];

        $d82 = 2.0 * $d80;

        $d81 = r7[i4];

        $d83 = $d82 * $d81;

        $d84 = $d83 * d6;

        $d86 = $d85 + $d84;

        r9[i4] = $d86;

        i4 = i4 + 1;

        goto label5;

     label6:
        r13 = newarray (double)[i1];

        r11 = newarray (double)[i1];

        i5 = 0;

     label7:
        if i5 >= i1 goto label8;

        $d39 = r4[i5];

        $d40 = $d39 * d8;

        $d45 = d7 - $d40;

        $d42 = r4[i5];

        $d41 = r4[i5];

        $d43 = $d42 * $d41;

        $d44 = $d43 * d9;

        $d46 = $d45 + $d44;

        r11[i5] = $d46;

        $d50 = r5[i5];

        $d48 = neg d0;

        $d47 = r4[i5];

        $d49 = $d48 - $d47;

        $d52 = $d50 * $d49;

        $d51 = r11[i5];

        $d55 = $d52 * $d51;

        $d53 = r5[i5];

        $d54 = $d53 * d8;

        $d61 = $d55 - $d54;

        $d56 = r4[i5];

        $d58 = 2.0 * $d56;

        $d57 = r5[i5];

        $d59 = $d58 * $d57;

        $d60 = $d59 * d9;

        $d62 = $d61 + $d60;

        r13[i5] = $d62;

        i5 = i5 + 1;

        goto label7;

     label8:
        $r12 = staticinvoke <com.opengamma.util.tuple.ObjectsPair: com.opengamma.util.tuple.ObjectsPair of(java.lang.Object,java.lang.Object)>(r9, r13);

        return $r12;
    }
}
