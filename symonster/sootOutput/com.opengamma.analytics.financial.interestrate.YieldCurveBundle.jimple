public class com.opengamma.analytics.financial.interestrate.YieldCurveBundle extends java.lang.Object
{
    private final java.util.Map _curves;
    private final java.util.Map _curveCurrency;
    private final com.opengamma.analytics.financial.forex.method.FXMatrix _fxMatrix;

    public void <init>()
    {
        com.opengamma.analytics.financial.interestrate.YieldCurveBundle r0;
        java.util.LinkedHashMap $r1;
        java.util.HashMap $r2;
        com.opengamma.analytics.financial.forex.method.FXMatrix $r3;

        r0 := @this: com.opengamma.analytics.financial.interestrate.YieldCurveBundle;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.LinkedHashMap;

        specialinvoke $r1.<java.util.LinkedHashMap: void <init>()>();

        r0.<com.opengamma.analytics.financial.interestrate.YieldCurveBundle: java.util.Map _curves> = $r1;

        $r2 = new java.util.HashMap;

        specialinvoke $r2.<java.util.HashMap: void <init>()>();

        r0.<com.opengamma.analytics.financial.interestrate.YieldCurveBundle: java.util.Map _curveCurrency> = $r2;

        $r3 = new com.opengamma.analytics.financial.forex.method.FXMatrix;

        specialinvoke $r3.<com.opengamma.analytics.financial.forex.method.FXMatrix: void <init>()>();

        r0.<com.opengamma.analytics.financial.interestrate.YieldCurveBundle: com.opengamma.analytics.financial.forex.method.FXMatrix _fxMatrix> = $r3;

        return;
    }

    public void <init>(com.opengamma.analytics.financial.forex.method.FXMatrix, java.util.Map, java.util.Map)
    {
        com.opengamma.analytics.financial.interestrate.YieldCurveBundle r0;
        com.opengamma.analytics.financial.forex.method.FXMatrix r1, $r8;
        java.util.Map r2, r3, $r13;
        java.util.LinkedHashMap $r6;
        java.util.HashMap $r7;
        java.util.Set $r9;
        java.util.Collection $r11;

        r0 := @this: com.opengamma.analytics.financial.interestrate.YieldCurveBundle;

        r1 := @parameter0: com.opengamma.analytics.financial.forex.method.FXMatrix;

        r2 := @parameter1: java.util.Map;

        r3 := @parameter2: java.util.Map;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "FX matrix");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, "curve currency");

        $r6 = new java.util.LinkedHashMap;

        specialinvoke $r6.<java.util.LinkedHashMap: void <init>()>();

        r0.<com.opengamma.analytics.financial.interestrate.YieldCurveBundle: java.util.Map _curves> = $r6;

        if r3 == null goto label1;

        $r9 = interfaceinvoke r3.<java.util.Map: java.util.Set keySet()>();

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Iterable noNulls(java.lang.Iterable,java.lang.String)>($r9, "curve map key set");

        $r11 = interfaceinvoke r3.<java.util.Map: java.util.Collection values()>();

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Iterable noNulls(java.lang.Iterable,java.lang.String)>($r11, "curve map entry set");

        $r13 = r0.<com.opengamma.analytics.financial.interestrate.YieldCurveBundle: java.util.Map _curves>;

        interfaceinvoke $r13.<java.util.Map: void putAll(java.util.Map)>(r3);

     label1:
        $r7 = new java.util.HashMap;

        specialinvoke $r7.<java.util.HashMap: void <init>(java.util.Map)>(r2);

        r0.<com.opengamma.analytics.financial.interestrate.YieldCurveBundle: java.util.Map _curveCurrency> = $r7;

        $r8 = new com.opengamma.analytics.financial.forex.method.FXMatrix;

        specialinvoke $r8.<com.opengamma.analytics.financial.forex.method.FXMatrix: void <init>(com.opengamma.analytics.financial.forex.method.FXMatrix)>(r1);

        r0.<com.opengamma.analytics.financial.interestrate.YieldCurveBundle: com.opengamma.analytics.financial.forex.method.FXMatrix _fxMatrix> = $r8;

        return;
    }

    public void <init>(com.opengamma.analytics.financial.forex.method.FXMatrix, java.util.Map)
    {
        com.opengamma.analytics.financial.interestrate.YieldCurveBundle r0;
        com.opengamma.analytics.financial.forex.method.FXMatrix r1, $r5;
        java.util.Map r2;
        java.util.LinkedHashMap $r3;
        java.util.HashMap $r4;

        r0 := @this: com.opengamma.analytics.financial.interestrate.YieldCurveBundle;

        r1 := @parameter0: com.opengamma.analytics.financial.forex.method.FXMatrix;

        r2 := @parameter1: java.util.Map;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r3 = new java.util.LinkedHashMap;

        specialinvoke $r3.<java.util.LinkedHashMap: void <init>()>();

        r0.<com.opengamma.analytics.financial.interestrate.YieldCurveBundle: java.util.Map _curves> = $r3;

        $r4 = new java.util.HashMap;

        specialinvoke $r4.<java.util.HashMap: void <init>(java.util.Map)>(r2);

        r0.<com.opengamma.analytics.financial.interestrate.YieldCurveBundle: java.util.Map _curveCurrency> = $r4;

        $r5 = new com.opengamma.analytics.financial.forex.method.FXMatrix;

        specialinvoke $r5.<com.opengamma.analytics.financial.forex.method.FXMatrix: void <init>(com.opengamma.analytics.financial.forex.method.FXMatrix)>(r1);

        r0.<com.opengamma.analytics.financial.interestrate.YieldCurveBundle: com.opengamma.analytics.financial.forex.method.FXMatrix _fxMatrix> = $r5;

        return;
    }

    public void <init>(java.util.Map)
    {
        com.opengamma.analytics.financial.interestrate.YieldCurveBundle r0;
        java.util.Map r1, $r9;
        java.util.LinkedHashMap $r2;
        java.util.HashMap $r3;
        com.opengamma.analytics.financial.forex.method.FXMatrix $r4;
        java.util.Set $r5;
        java.util.Collection $r7;

        r0 := @this: com.opengamma.analytics.financial.interestrate.YieldCurveBundle;

        r1 := @parameter0: java.util.Map;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new java.util.LinkedHashMap;

        specialinvoke $r2.<java.util.LinkedHashMap: void <init>()>();

        r0.<com.opengamma.analytics.financial.interestrate.YieldCurveBundle: java.util.Map _curves> = $r2;

        $r3 = new java.util.HashMap;

        specialinvoke $r3.<java.util.HashMap: void <init>()>();

        r0.<com.opengamma.analytics.financial.interestrate.YieldCurveBundle: java.util.Map _curveCurrency> = $r3;

        $r4 = new com.opengamma.analytics.financial.forex.method.FXMatrix;

        specialinvoke $r4.<com.opengamma.analytics.financial.forex.method.FXMatrix: void <init>()>();

        r0.<com.opengamma.analytics.financial.interestrate.YieldCurveBundle: com.opengamma.analytics.financial.forex.method.FXMatrix _fxMatrix> = $r4;

        if r1 == null goto label1;

        $r5 = interfaceinvoke r1.<java.util.Map: java.util.Set keySet()>();

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Iterable noNulls(java.lang.Iterable,java.lang.String)>($r5, "curves map key set");

        $r7 = interfaceinvoke r1.<java.util.Map: java.util.Collection values()>();

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Iterable noNulls(java.lang.Iterable,java.lang.String)>($r7, "curves map values");

        $r9 = r0.<com.opengamma.analytics.financial.interestrate.YieldCurveBundle: java.util.Map _curves>;

        interfaceinvoke $r9.<java.util.Map: void putAll(java.util.Map)>(r1);

     label1:
        return;
    }

    public void <init>(java.lang.String[], com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve[])
    {
        com.opengamma.analytics.financial.interestrate.YieldCurveBundle r0;
        java.lang.String[] r1;
        com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve[] r2;
        int i0, $i1, $i2, $i3, $i4, i5;
        java.lang.Object[] $r5;
        java.lang.Integer $r6, $r7;
        java.util.LinkedHashMap $r10;
        java.util.HashMap $r11;
        com.opengamma.analytics.financial.forex.method.FXMatrix $r12;
        com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve $r13;
        java.lang.String $r14;
        java.util.Map $r15;
        boolean $z0;

        r0 := @this: com.opengamma.analytics.financial.interestrate.YieldCurveBundle;

        r1 := @parameter0: java.lang.String[];

        r2 := @parameter1: com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve[];

        specialinvoke r0.<java.lang.Object: void <init>()>();

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "names");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, "curves");

        $i2 = lengthof r1;

        $i1 = lengthof r2;

        if $i2 != $i1 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        $r5 = newarray (java.lang.Object)[2];

        $i3 = lengthof r1;

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3);

        $r5[0] = $r6;

        $i4 = lengthof r2;

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i4);

        $r5[1] = $r7;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String,java.lang.Object[])>($z0, "Different number of names ({}) and curves ({})", $r5);

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object[] noNulls(java.lang.Object[],java.lang.String)>(r1, "names");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object[] noNulls(java.lang.Object[],java.lang.String)>(r2, "curves");

        $r10 = new java.util.LinkedHashMap;

        specialinvoke $r10.<java.util.LinkedHashMap: void <init>()>();

        r0.<com.opengamma.analytics.financial.interestrate.YieldCurveBundle: java.util.Map _curves> = $r10;

        $r11 = new java.util.HashMap;

        specialinvoke $r11.<java.util.HashMap: void <init>()>();

        r0.<com.opengamma.analytics.financial.interestrate.YieldCurveBundle: java.util.Map _curveCurrency> = $r11;

        $r12 = new com.opengamma.analytics.financial.forex.method.FXMatrix;

        specialinvoke $r12.<com.opengamma.analytics.financial.forex.method.FXMatrix: void <init>()>();

        r0.<com.opengamma.analytics.financial.interestrate.YieldCurveBundle: com.opengamma.analytics.financial.forex.method.FXMatrix _fxMatrix> = $r12;

        i0 = lengthof r1;

        i5 = 0;

     label3:
        if i5 >= i0 goto label4;

        $r15 = r0.<com.opengamma.analytics.financial.interestrate.YieldCurveBundle: java.util.Map _curves>;

        $r14 = r1[i5];

        $r13 = r2[i5];

        interfaceinvoke $r15.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r14, $r13);

        i5 = i5 + 1;

        goto label3;

     label4:
        return;
    }

    public void <init>(com.opengamma.analytics.financial.forex.method.FXMatrix, java.lang.String[], com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve[])
    {
        com.opengamma.analytics.financial.interestrate.YieldCurveBundle r0;
        com.opengamma.analytics.financial.forex.method.FXMatrix r1;
        java.lang.String[] r2;
        com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve[] r3;
        int i0, $i1, $i2, $i3, $i4, i5;
        java.lang.Object[] $r6;
        java.lang.Integer $r7, $r8;
        java.util.LinkedHashMap $r11;
        java.util.HashMap $r12;
        com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve $r13;
        java.lang.String $r14;
        java.util.Map $r15;
        boolean $z0;

        r0 := @this: com.opengamma.analytics.financial.interestrate.YieldCurveBundle;

        r1 := @parameter0: com.opengamma.analytics.financial.forex.method.FXMatrix;

        r2 := @parameter1: java.lang.String[];

        r3 := @parameter2: com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve[];

        specialinvoke r0.<java.lang.Object: void <init>()>();

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, "names");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r3, "curves");

        $i2 = lengthof r2;

        $i1 = lengthof r3;

        if $i2 != $i1 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        $r6 = newarray (java.lang.Object)[2];

        $i3 = lengthof r2;

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3);

        $r6[0] = $r7;

        $i4 = lengthof r3;

        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i4);

        $r6[1] = $r8;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String,java.lang.Object[])>($z0, "Different number of names ({}) and curves ({})", $r6);

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object[] noNulls(java.lang.Object[],java.lang.String)>(r2, "names");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object[] noNulls(java.lang.Object[],java.lang.String)>(r3, "curves");

        $r11 = new java.util.LinkedHashMap;

        specialinvoke $r11.<java.util.LinkedHashMap: void <init>()>();

        r0.<com.opengamma.analytics.financial.interestrate.YieldCurveBundle: java.util.Map _curves> = $r11;

        $r12 = new java.util.HashMap;

        specialinvoke $r12.<java.util.HashMap: void <init>()>();

        r0.<com.opengamma.analytics.financial.interestrate.YieldCurveBundle: java.util.Map _curveCurrency> = $r12;

        i0 = lengthof r2;

        i5 = 0;

     label3:
        if i5 >= i0 goto label4;

        $r15 = r0.<com.opengamma.analytics.financial.interestrate.YieldCurveBundle: java.util.Map _curves>;

        $r14 = r2[i5];

        $r13 = r3[i5];

        interfaceinvoke $r15.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r14, $r13);

        i5 = i5 + 1;

        goto label3;

     label4:
        r0.<com.opengamma.analytics.financial.interestrate.YieldCurveBundle: com.opengamma.analytics.financial.forex.method.FXMatrix _fxMatrix> = r1;

        return;
    }

    public void <init>(java.util.Map, com.opengamma.analytics.financial.forex.method.FXMatrix, java.util.Map)
    {
        com.opengamma.analytics.financial.interestrate.YieldCurveBundle r0;
        java.util.Map r1, r3;
        com.opengamma.analytics.financial.forex.method.FXMatrix r2, $r9;
        java.util.LinkedHashMap $r7;
        java.util.HashMap $r8;

        r0 := @this: com.opengamma.analytics.financial.interestrate.YieldCurveBundle;

        r1 := @parameter0: java.util.Map;

        r2 := @parameter1: com.opengamma.analytics.financial.forex.method.FXMatrix;

        r3 := @parameter2: java.util.Map;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "curves map");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, "FX matrix");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r3, "curve currency");

        $r7 = new java.util.LinkedHashMap;

        specialinvoke $r7.<java.util.LinkedHashMap: void <init>(java.util.Map)>(r1);

        r0.<com.opengamma.analytics.financial.interestrate.YieldCurveBundle: java.util.Map _curves> = $r7;

        $r8 = new java.util.HashMap;

        specialinvoke $r8.<java.util.HashMap: void <init>(java.util.Map)>(r3);

        r0.<com.opengamma.analytics.financial.interestrate.YieldCurveBundle: java.util.Map _curveCurrency> = $r8;

        $r9 = new com.opengamma.analytics.financial.forex.method.FXMatrix;

        specialinvoke $r9.<com.opengamma.analytics.financial.forex.method.FXMatrix: void <init>(com.opengamma.analytics.financial.forex.method.FXMatrix)>(r2);

        r0.<com.opengamma.analytics.financial.interestrate.YieldCurveBundle: com.opengamma.analytics.financial.forex.method.FXMatrix _fxMatrix> = $r9;

        return;
    }

    public void <init>(java.lang.String[], com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve[], com.opengamma.util.money.Currency[])
    {
        com.opengamma.analytics.financial.interestrate.YieldCurveBundle r0;
        java.lang.String[] r1;
        com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve[] r2;
        com.opengamma.util.money.Currency[] r3;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, i9;
        java.lang.Object[] $r6, $r9;
        java.lang.Integer $r7, $r8, $r10, $r11;
        java.util.LinkedHashMap $r14;
        java.util.HashMap $r15;
        com.opengamma.analytics.financial.forex.method.FXMatrix $r16;
        com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve $r17;
        java.lang.String $r18, $r22;
        java.util.Map $r19, $r23;
        com.opengamma.util.money.Currency $r21;
        boolean $z0, $z1;

        r0 := @this: com.opengamma.analytics.financial.interestrate.YieldCurveBundle;

        r1 := @parameter0: java.lang.String[];

        r2 := @parameter1: com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve[];

        r3 := @parameter2: com.opengamma.util.money.Currency[];

        specialinvoke r0.<java.lang.Object: void <init>()>();

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "names");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, "curves");

        $i2 = lengthof r1;

        $i1 = lengthof r2;

        if $i2 != $i1 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        $r6 = newarray (java.lang.Object)[2];

        $i3 = lengthof r1;

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3);

        $r6[0] = $r7;

        $i4 = lengthof r2;

        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i4);

        $r6[1] = $r8;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String,java.lang.Object[])>($z0, "Different number of names ({}) and curves ({})", $r6);

        $i6 = lengthof r1;

        $i5 = lengthof r3;

        if $i6 != $i5 goto label3;

        $z1 = 1;

        goto label4;

     label3:
        $z1 = 0;

     label4:
        $r9 = newarray (java.lang.Object)[2];

        $i7 = lengthof r1;

        $r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i7);

        $r9[0] = $r10;

        $i8 = lengthof r3;

        $r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i8);

        $r9[1] = $r11;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String,java.lang.Object[])>($z1, "Different number of names ({}) and currencies ({})", $r9);

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object[] noNulls(java.lang.Object[],java.lang.String)>(r1, "names");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object[] noNulls(java.lang.Object[],java.lang.String)>(r2, "curves");

        $r14 = new java.util.LinkedHashMap;

        specialinvoke $r14.<java.util.LinkedHashMap: void <init>()>();

        r0.<com.opengamma.analytics.financial.interestrate.YieldCurveBundle: java.util.Map _curves> = $r14;

        $r15 = new java.util.HashMap;

        specialinvoke $r15.<java.util.HashMap: void <init>()>();

        r0.<com.opengamma.analytics.financial.interestrate.YieldCurveBundle: java.util.Map _curveCurrency> = $r15;

        $r16 = new com.opengamma.analytics.financial.forex.method.FXMatrix;

        specialinvoke $r16.<com.opengamma.analytics.financial.forex.method.FXMatrix: void <init>()>();

        r0.<com.opengamma.analytics.financial.interestrate.YieldCurveBundle: com.opengamma.analytics.financial.forex.method.FXMatrix _fxMatrix> = $r16;

        i0 = lengthof r1;

        i9 = 0;

     label5:
        if i9 >= i0 goto label6;

        $r19 = r0.<com.opengamma.analytics.financial.interestrate.YieldCurveBundle: java.util.Map _curves>;

        $r18 = r1[i9];

        $r17 = r2[i9];

        interfaceinvoke $r19.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r18, $r17);

        $r23 = r0.<com.opengamma.analytics.financial.interestrate.YieldCurveBundle: java.util.Map _curveCurrency>;

        $r22 = r1[i9];

        $r21 = r3[i9];

        interfaceinvoke $r23.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r22, $r21);

        i9 = i9 + 1;

        goto label5;

     label6:
        return;
    }

    public void <init>(com.opengamma.analytics.financial.interestrate.YieldCurveBundle)
    {
        com.opengamma.analytics.financial.interestrate.YieldCurveBundle r0, r1;
        java.util.LinkedHashMap $r3;
        java.util.Map $r4, $r6;
        java.util.HashMap $r5;
        com.opengamma.analytics.financial.forex.method.FXMatrix $r7, $r8;

        r0 := @this: com.opengamma.analytics.financial.interestrate.YieldCurveBundle;

        r1 := @parameter0: com.opengamma.analytics.financial.interestrate.YieldCurveBundle;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "bundle");

        $r3 = new java.util.LinkedHashMap;

        $r4 = r1.<com.opengamma.analytics.financial.interestrate.YieldCurveBundle: java.util.Map _curves>;

        specialinvoke $r3.<java.util.LinkedHashMap: void <init>(java.util.Map)>($r4);

        r0.<com.opengamma.analytics.financial.interestrate.YieldCurveBundle: java.util.Map _curves> = $r3;

        $r5 = new java.util.HashMap;

        $r6 = r1.<com.opengamma.analytics.financial.interestrate.YieldCurveBundle: java.util.Map _curveCurrency>;

        specialinvoke $r5.<java.util.HashMap: void <init>(java.util.Map)>($r6);

        r0.<com.opengamma.analytics.financial.interestrate.YieldCurveBundle: java.util.Map _curveCurrency> = $r5;

        $r7 = new com.opengamma.analytics.financial.forex.method.FXMatrix;

        $r8 = r1.<com.opengamma.analytics.financial.interestrate.YieldCurveBundle: com.opengamma.analytics.financial.forex.method.FXMatrix _fxMatrix>;

        specialinvoke $r7.<com.opengamma.analytics.financial.forex.method.FXMatrix: void <init>(com.opengamma.analytics.financial.forex.method.FXMatrix)>($r8);

        r0.<com.opengamma.analytics.financial.interestrate.YieldCurveBundle: com.opengamma.analytics.financial.forex.method.FXMatrix _fxMatrix> = $r7;

        return;
    }

    public com.opengamma.analytics.financial.interestrate.YieldCurveBundle copy()
    {
        com.opengamma.analytics.financial.interestrate.YieldCurveBundle r0, $r10;
        java.util.LinkedHashMap $r4;
        java.util.Map $r5, $r7;
        java.util.HashMap $r6;
        com.opengamma.analytics.financial.forex.method.FXMatrix $r8, $r9;

        r0 := @this: com.opengamma.analytics.financial.interestrate.YieldCurveBundle;

        $r4 = new java.util.LinkedHashMap;

        $r5 = r0.<com.opengamma.analytics.financial.interestrate.YieldCurveBundle: java.util.Map _curves>;

        specialinvoke $r4.<java.util.LinkedHashMap: void <init>(java.util.Map)>($r5);

        $r6 = new java.util.HashMap;

        $r7 = r0.<com.opengamma.analytics.financial.interestrate.YieldCurveBundle: java.util.Map _curveCurrency>;

        specialinvoke $r6.<java.util.HashMap: void <init>(java.util.Map)>($r7);

        $r8 = new com.opengamma.analytics.financial.forex.method.FXMatrix;

        $r9 = r0.<com.opengamma.analytics.financial.interestrate.YieldCurveBundle: com.opengamma.analytics.financial.forex.method.FXMatrix _fxMatrix>;

        specialinvoke $r8.<com.opengamma.analytics.financial.forex.method.FXMatrix: void <init>(com.opengamma.analytics.financial.forex.method.FXMatrix)>($r9);

        $r10 = new com.opengamma.analytics.financial.interestrate.YieldCurveBundle;

        specialinvoke $r10.<com.opengamma.analytics.financial.interestrate.YieldCurveBundle: void <init>(com.opengamma.analytics.financial.forex.method.FXMatrix,java.util.Map,java.util.Map)>($r8, $r6, $r4);

        return $r10;
    }

    public void setCurve(java.lang.String, com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve)
    {
        com.opengamma.analytics.financial.interestrate.YieldCurveBundle r0;
        java.lang.String r1, $r12;
        com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve r2;
        java.util.Map $r5, $r6;
        boolean $z0;
        java.lang.IllegalArgumentException $r8;
        java.lang.StringBuilder $r9, $r10, $r11;

        r0 := @this: com.opengamma.analytics.financial.interestrate.YieldCurveBundle;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "name");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, "curve");

        $r5 = r0.<com.opengamma.analytics.financial.interestrate.YieldCurveBundle: java.util.Map _curves>;

        $z0 = interfaceinvoke $r5.<java.util.Map: boolean containsKey(java.lang.Object)>(r1);

        if $z0 == 0 goto label1;

        $r8 = new java.lang.IllegalArgumentException;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Named yield curve already set: ");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r12);

        throw $r8;

     label1:
        $r6 = r0.<com.opengamma.analytics.financial.interestrate.YieldCurveBundle: java.util.Map _curves>;

        interfaceinvoke $r6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2);

        return;
    }

    public void replaceCurve(java.lang.String, com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve)
    {
        com.opengamma.analytics.financial.interestrate.YieldCurveBundle r0;
        java.lang.String r1, $r12;
        com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve r2;
        java.util.Map $r5, $r6;
        boolean $z0;
        java.lang.IllegalArgumentException $r8;
        java.lang.StringBuilder $r9, $r10, $r11;

        r0 := @this: com.opengamma.analytics.financial.interestrate.YieldCurveBundle;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "name");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, "curve");

        $r5 = r0.<com.opengamma.analytics.financial.interestrate.YieldCurveBundle: java.util.Map _curves>;

        $z0 = interfaceinvoke $r5.<java.util.Map: boolean containsKey(java.lang.Object)>(r1);

        if $z0 != 0 goto label1;

        $r8 = new java.lang.IllegalArgumentException;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Named yield curve not in set");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r12);

        throw $r8;

     label1:
        $r6 = r0.<com.opengamma.analytics.financial.interestrate.YieldCurveBundle: java.util.Map _curves>;

        interfaceinvoke $r6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2);

        return;
    }

    public void addAll(com.opengamma.analytics.financial.interestrate.YieldCurveBundle)
    {
        com.opengamma.analytics.financial.interestrate.YieldCurveBundle r0, r1;
        java.util.Map $r3, $r4;

        r0 := @this: com.opengamma.analytics.financial.interestrate.YieldCurveBundle;

        r1 := @parameter0: com.opengamma.analytics.financial.interestrate.YieldCurveBundle;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "yield curve bundle");

        $r4 = r0.<com.opengamma.analytics.financial.interestrate.YieldCurveBundle: java.util.Map _curves>;

        $r3 = r1.<com.opengamma.analytics.financial.interestrate.YieldCurveBundle: java.util.Map _curves>;

        interfaceinvoke $r4.<java.util.Map: void putAll(java.util.Map)>($r3);

        return;
    }

    public com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve getCurve(java.lang.String)
    {
        com.opengamma.analytics.financial.interestrate.YieldCurveBundle r0;
        java.lang.String r1, $r7;
        java.util.Map $r2, $r8;
        boolean $z0;
        java.lang.IllegalArgumentException $r3;
        java.lang.StringBuilder $r4, $r5, $r6;
        java.lang.Object $r9;
        com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve $r10;

        r0 := @this: com.opengamma.analytics.financial.interestrate.YieldCurveBundle;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.opengamma.analytics.financial.interestrate.YieldCurveBundle: java.util.Map _curves>;

        $z0 = interfaceinvoke $r2.<java.util.Map: boolean containsKey(java.lang.Object)>(r1);

        if $z0 == 0 goto label1;

        $r8 = r0.<com.opengamma.analytics.financial.interestrate.YieldCurveBundle: java.util.Map _curves>;

        $r9 = interfaceinvoke $r8.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        $r10 = (com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve) $r9;

        return $r10;

     label1:
        $r3 = new java.lang.IllegalArgumentException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Named yield curve not found: ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r7);

        throw $r3;
    }

    public java.util.Map getCurvesMap()
    {
        com.opengamma.analytics.financial.interestrate.YieldCurveBundle r0;
        java.util.Map $r1;

        r0 := @this: com.opengamma.analytics.financial.interestrate.YieldCurveBundle;

        $r1 = r0.<com.opengamma.analytics.financial.interestrate.YieldCurveBundle: java.util.Map _curves>;

        return $r1;
    }

    public int size()
    {
        com.opengamma.analytics.financial.interestrate.YieldCurveBundle r0;
        java.util.Map $r1;
        int $i0;

        r0 := @this: com.opengamma.analytics.financial.interestrate.YieldCurveBundle;

        $r1 = r0.<com.opengamma.analytics.financial.interestrate.YieldCurveBundle: java.util.Map _curves>;

        $i0 = interfaceinvoke $r1.<java.util.Map: int size()>();

        return $i0;
    }

    public java.util.Set getAllNames()
    {
        com.opengamma.analytics.financial.interestrate.YieldCurveBundle r0;
        java.util.Map $r1;
        java.util.Set $r2;

        r0 := @this: com.opengamma.analytics.financial.interestrate.YieldCurveBundle;

        $r1 = r0.<com.opengamma.analytics.financial.interestrate.YieldCurveBundle: java.util.Map _curves>;

        $r2 = interfaceinvoke $r1.<java.util.Map: java.util.Set keySet()>();

        return $r2;
    }

    public java.lang.Boolean containsName(java.lang.String)
    {
        com.opengamma.analytics.financial.interestrate.YieldCurveBundle r0;
        java.lang.String r1;
        java.util.Map $r2;
        boolean $z0;
        java.lang.Boolean $r3;

        r0 := @this: com.opengamma.analytics.financial.interestrate.YieldCurveBundle;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.opengamma.analytics.financial.interestrate.YieldCurveBundle: java.util.Map _curves>;

        $z0 = interfaceinvoke $r2.<java.util.Map: boolean containsKey(java.lang.Object)>(r1);

        $r3 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        return $r3;
    }

    public java.util.Map getCurrencyMap()
    {
        com.opengamma.analytics.financial.interestrate.YieldCurveBundle r0;
        java.util.Map $r1;

        r0 := @this: com.opengamma.analytics.financial.interestrate.YieldCurveBundle;

        $r1 = r0.<com.opengamma.analytics.financial.interestrate.YieldCurveBundle: java.util.Map _curveCurrency>;

        return $r1;
    }

    public com.opengamma.util.money.Currency getCurveCurrency(java.lang.String)
    {
        com.opengamma.analytics.financial.interestrate.YieldCurveBundle r0;
        java.lang.String r1, $r9;
        com.opengamma.util.money.Currency r2;
        java.util.Map $r3;
        java.lang.Object $r4;
        java.lang.IllegalArgumentException $r5;
        java.lang.StringBuilder $r6, $r7, $r8;

        r0 := @this: com.opengamma.analytics.financial.interestrate.YieldCurveBundle;

        r1 := @parameter0: java.lang.String;

        $r3 = r0.<com.opengamma.analytics.financial.interestrate.YieldCurveBundle: java.util.Map _curveCurrency>;

        $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        r2 = (com.opengamma.util.money.Currency) $r4;

        if r2 != null goto label1;

        $r5 = new java.lang.IllegalArgumentException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Named yield curve not in map: ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r9);

        throw $r5;

     label1:
        return r2;
    }

    public com.opengamma.analytics.financial.forex.method.FXMatrix getFxRates()
    {
        com.opengamma.analytics.financial.interestrate.YieldCurveBundle r0;
        com.opengamma.analytics.financial.forex.method.FXMatrix $r1;

        r0 := @this: com.opengamma.analytics.financial.interestrate.YieldCurveBundle;

        $r1 = r0.<com.opengamma.analytics.financial.interestrate.YieldCurveBundle: com.opengamma.analytics.financial.forex.method.FXMatrix _fxMatrix>;

        return $r1;
    }

    public int hashCode()
    {
        com.opengamma.analytics.financial.interestrate.YieldCurveBundle r0;
        java.util.Map $r1, $r2;
        int $i1, $i2, $i3, $i4, $i5, $i6, i8, i9, i10;
        com.opengamma.analytics.financial.forex.method.FXMatrix $r3;

        r0 := @this: com.opengamma.analytics.financial.interestrate.YieldCurveBundle;

        $i1 = 31 * 1;

        $r1 = r0.<com.opengamma.analytics.financial.interestrate.YieldCurveBundle: java.util.Map _curveCurrency>;

        $i2 = interfaceinvoke $r1.<java.util.Map: int hashCode()>();

        i8 = $i1 + $i2;

        $i3 = 31 * i8;

        $r2 = r0.<com.opengamma.analytics.financial.interestrate.YieldCurveBundle: java.util.Map _curves>;

        $i4 = interfaceinvoke $r2.<java.util.Map: int hashCode()>();

        i9 = $i3 + $i4;

        $i5 = 31 * i9;

        $r3 = r0.<com.opengamma.analytics.financial.interestrate.YieldCurveBundle: com.opengamma.analytics.financial.forex.method.FXMatrix _fxMatrix>;

        $i6 = virtualinvoke $r3.<com.opengamma.analytics.financial.forex.method.FXMatrix: int hashCode()>();

        i10 = $i5 + $i6;

        return i10;
    }

    public boolean equals(java.lang.Object)
    {
        com.opengamma.analytics.financial.interestrate.YieldCurveBundle r0, r2;
        java.lang.Object r1;
        java.lang.Class $r3, $r4;
        java.util.Map $r5, $r6, $r7, $r8;
        boolean $z0, $z1, $z2;
        com.opengamma.analytics.financial.forex.method.FXMatrix $r9, $r10;

        r0 := @this: com.opengamma.analytics.financial.interestrate.YieldCurveBundle;

        r1 := @parameter0: java.lang.Object;

        if r0 != r1 goto label1;

        return 1;

     label1:
        if r1 != null goto label2;

        return 0;

     label2:
        $r3 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r4 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        if $r3 == $r4 goto label3;

        return 0;

     label3:
        r2 = (com.opengamma.analytics.financial.interestrate.YieldCurveBundle) r1;

        $r6 = r0.<com.opengamma.analytics.financial.interestrate.YieldCurveBundle: java.util.Map _curveCurrency>;

        $r5 = r2.<com.opengamma.analytics.financial.interestrate.YieldCurveBundle: java.util.Map _curveCurrency>;

        $z0 = staticinvoke <org.apache.commons.lang.ObjectUtils: boolean equals(java.lang.Object,java.lang.Object)>($r6, $r5);

        if $z0 != 0 goto label4;

        return 0;

     label4:
        $r8 = r0.<com.opengamma.analytics.financial.interestrate.YieldCurveBundle: java.util.Map _curves>;

        $r7 = r2.<com.opengamma.analytics.financial.interestrate.YieldCurveBundle: java.util.Map _curves>;

        $z1 = staticinvoke <org.apache.commons.lang.ObjectUtils: boolean equals(java.lang.Object,java.lang.Object)>($r8, $r7);

        if $z1 != 0 goto label5;

        return 0;

     label5:
        $r10 = r0.<com.opengamma.analytics.financial.interestrate.YieldCurveBundle: com.opengamma.analytics.financial.forex.method.FXMatrix _fxMatrix>;

        $r9 = r2.<com.opengamma.analytics.financial.interestrate.YieldCurveBundle: com.opengamma.analytics.financial.forex.method.FXMatrix _fxMatrix>;

        $z2 = staticinvoke <org.apache.commons.lang.ObjectUtils: boolean equals(java.lang.Object,java.lang.Object)>($r10, $r9);

        if $z2 != 0 goto label6;

        return 0;

     label6:
        return 1;
    }
}
