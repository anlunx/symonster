public class org.apache.commons.math3.ode.nonstiff.DormandPrince853Integrator extends org.apache.commons.math3.ode.nonstiff.EmbeddedRungeKuttaIntegrator
{
    private static final java.lang.String METHOD_NAME;
    private static final double[] STATIC_C;
    private static final double[][] STATIC_A;
    private static final double[] STATIC_B;
    private static final double E1_01;
    private static final double E1_06;
    private static final double E1_07;
    private static final double E1_08;
    private static final double E1_09;
    private static final double E1_10;
    private static final double E1_11;
    private static final double E1_12;
    private static final double E2_01;
    private static final double E2_06;
    private static final double E2_07;
    private static final double E2_08;
    private static final double E2_09;
    private static final double E2_10;
    private static final double E2_11;
    private static final double E2_12;

    public void <init>(double, double, double, double)
    {
        org.apache.commons.math3.ode.nonstiff.DormandPrince853Integrator r0;
        double d0, d1, d2, d3;
        org.apache.commons.math3.ode.nonstiff.DormandPrince853StepInterpolator $r1;
        double[] $r2, $r4;
        double[][] $r3;

        r0 := @this: org.apache.commons.math3.ode.nonstiff.DormandPrince853Integrator;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        d2 := @parameter2: double;

        d3 := @parameter3: double;

        $r2 = <org.apache.commons.math3.ode.nonstiff.DormandPrince853Integrator: double[] STATIC_C>;

        $r3 = <org.apache.commons.math3.ode.nonstiff.DormandPrince853Integrator: double[][] STATIC_A>;

        $r4 = <org.apache.commons.math3.ode.nonstiff.DormandPrince853Integrator: double[] STATIC_B>;

        $r1 = new org.apache.commons.math3.ode.nonstiff.DormandPrince853StepInterpolator;

        specialinvoke $r1.<org.apache.commons.math3.ode.nonstiff.DormandPrince853StepInterpolator: void <init>()>();

        specialinvoke r0.<org.apache.commons.math3.ode.nonstiff.EmbeddedRungeKuttaIntegrator: void <init>(java.lang.String,boolean,double[],double[][],double[],org.apache.commons.math3.ode.nonstiff.RungeKuttaStepInterpolator,double,double,double,double)>("Dormand-Prince 8 (5, 3)", 1, $r2, $r3, $r4, $r1, d0, d1, d2, d3);

        return;
    }

    public void <init>(double, double, double[], double[])
    {
        org.apache.commons.math3.ode.nonstiff.DormandPrince853Integrator r0;
        double d0, d1;
        double[] r1, r2, $r4, $r6;
        org.apache.commons.math3.ode.nonstiff.DormandPrince853StepInterpolator $r3;
        double[][] $r5;

        r0 := @this: org.apache.commons.math3.ode.nonstiff.DormandPrince853Integrator;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        r1 := @parameter2: double[];

        r2 := @parameter3: double[];

        $r4 = <org.apache.commons.math3.ode.nonstiff.DormandPrince853Integrator: double[] STATIC_C>;

        $r5 = <org.apache.commons.math3.ode.nonstiff.DormandPrince853Integrator: double[][] STATIC_A>;

        $r6 = <org.apache.commons.math3.ode.nonstiff.DormandPrince853Integrator: double[] STATIC_B>;

        $r3 = new org.apache.commons.math3.ode.nonstiff.DormandPrince853StepInterpolator;

        specialinvoke $r3.<org.apache.commons.math3.ode.nonstiff.DormandPrince853StepInterpolator: void <init>()>();

        specialinvoke r0.<org.apache.commons.math3.ode.nonstiff.EmbeddedRungeKuttaIntegrator: void <init>(java.lang.String,boolean,double[],double[][],double[],org.apache.commons.math3.ode.nonstiff.RungeKuttaStepInterpolator,double,double,double[],double[])>("Dormand-Prince 8 (5, 3)", 1, $r4, $r5, $r6, $r3, d0, d1, r1, r2);

        return;
    }

    public int getOrder()
    {
        org.apache.commons.math3.ode.nonstiff.DormandPrince853Integrator r0;

        r0 := @this: org.apache.commons.math3.ode.nonstiff.DormandPrince853Integrator;

        return 8;
    }

    protected double estimateError(double[][], double[], double[], double)
    {
        org.apache.commons.math3.ode.nonstiff.DormandPrince853Integrator r0;
        double[][] r1;
        double[] r2, r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22;
        double d0, d1, d2, d3, d5, d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21, $d22, $d23, $d24, $d25, $d26, $d27, $d28, $d29, $d30, $d31, $d32, $d33, $d34, $d35, $d36, $d37, $d38, $d39, $d40, $d41, $d42, $d43, $d44, $d45, $d46, $d47, $d48, $d49, $d50, $d51, $d52, $d53, $d54, $d55, $d56, $d57, $d58, $d59, $d60, $d61, $d62, $d63, $d64, $d65, $d66, $d67, $d68, $d69, d70, d71, $d72, d73;
        int $i0, $i2, i3;
        byte $b1;

        r0 := @this: org.apache.commons.math3.ode.nonstiff.DormandPrince853Integrator;

        r1 := @parameter0: double[][];

        r2 := @parameter1: double[];

        r3 := @parameter2: double[];

        d0 := @parameter3: double;

        d70 = 0.0;

        d71 = 0.0;

        i3 = 0;

     label1:
        $i0 = r0.<org.apache.commons.math3.ode.nonstiff.DormandPrince853Integrator: int mainSetDimension>;

        if i3 >= $i0 goto label4;

        $r4 = r1[0];

        $d14 = $r4[i3];

        $d17 = 0.01312004499419488 * $d14;

        $r5 = r1[5];

        $d15 = $r5[i3];

        $d16 = -1.2251564463762044 * $d15;

        $d20 = $d17 + $d16;

        $r6 = r1[6];

        $d18 = $r6[i3];

        $d19 = -0.4957589496572502 * $d18;

        $d23 = $d20 + $d19;

        $r7 = r1[7];

        $d21 = $r7[i3];

        $d22 = 1.6643771824549864 * $d21;

        $d26 = $d23 + $d22;

        $r8 = r1[8];

        $d24 = $r8[i3];

        $d25 = -0.35032884874997366 * $d24;

        $d29 = $d26 + $d25;

        $r9 = r1[9];

        $d27 = $r9[i3];

        $d28 = 0.3341791187130175 * $d27;

        $d32 = $d29 + $d28;

        $r10 = r1[10];

        $d30 = $r10[i3];

        $d31 = 0.08192320648511571 * $d30;

        $d35 = $d32 + $d31;

        $r11 = r1[11];

        $d33 = $r11[i3];

        $d34 = -0.022355307863886294 * $d33;

        d1 = $d35 + $d34;

        $r12 = r1[0];

        $d36 = $r12[i3];

        $d39 = -0.18980075407240762 * $d36;

        $r13 = r1[5];

        $d37 = $r13[i3];

        $d38 = 4.450312892752409 * $d37;

        $d42 = $d39 + $d38;

        $r14 = r1[6];

        $d40 = $r14[i3];

        $d41 = 1.8915178993145003 * $d40;

        $d45 = $d42 + $d41;

        $r15 = r1[7];

        $d43 = $r15[i3];

        $d44 = -5.801203960010585 * $d43;

        $d48 = $d45 + $d44;

        $r16 = r1[8];

        $d46 = $r16[i3];

        $d47 = -0.42268232132379197 * $d46;

        $d51 = $d48 + $d47;

        $r17 = r1[9];

        $d49 = $r17[i3];

        $d50 = -0.1521609496625161 * $d49;

        $d54 = $d51 + $d50;

        $r18 = r1[10];

        $d52 = $r18[i3];

        $d53 = 0.20136540080403034 * $d52;

        $d57 = $d54 + $d53;

        $r19 = r1[11];

        $d55 = $r19[i3];

        $d56 = 0.022651792198360825 * $d55;

        d2 = $d57 + $d56;

        $d58 = r2[i3];

        $d59 = staticinvoke <org.apache.commons.math3.util.FastMath: double abs(double)>($d58);

        $d60 = r3[i3];

        $d61 = staticinvoke <org.apache.commons.math3.util.FastMath: double abs(double)>($d60);

        d3 = staticinvoke <org.apache.commons.math3.util.FastMath: double max(double,double)>($d59, $d61);

        $r20 = r0.<org.apache.commons.math3.ode.nonstiff.DormandPrince853Integrator: double[] vecAbsoluteTolerance>;

        if $r20 != null goto label2;

        $d69 = r0.<org.apache.commons.math3.ode.nonstiff.DormandPrince853Integrator: double scalAbsoluteTolerance>;

        $d67 = r0.<org.apache.commons.math3.ode.nonstiff.DormandPrince853Integrator: double scalRelativeTolerance>;

        $d68 = $d67 * d3;

        $d72 = $d69 + $d68;

        goto label3;

     label2:
        $r21 = r0.<org.apache.commons.math3.ode.nonstiff.DormandPrince853Integrator: double[] vecAbsoluteTolerance>;

        $d64 = $r21[i3];

        $r22 = r0.<org.apache.commons.math3.ode.nonstiff.DormandPrince853Integrator: double[] vecRelativeTolerance>;

        $d62 = $r22[i3];

        $d63 = $d62 * d3;

        $d72 = $d64 + $d63;

     label3:
        d5 = d1 / $d72;

        $d65 = d5 * d5;

        d70 = d70 + $d65;

        d6 = d2 / $d72;

        $d66 = d6 * d6;

        d71 = d71 + $d66;

        i3 = i3 + 1;

        goto label1;

     label4:
        $d7 = 0.01 * d71;

        d73 = d70 + $d7;

        $b1 = d73 cmpg 0.0;

        if $b1 > 0 goto label5;

        d73 = 1.0;

     label5:
        $d8 = staticinvoke <org.apache.commons.math3.util.FastMath: double abs(double)>(d0);

        $d11 = $d8 * d70;

        $i2 = r0.<org.apache.commons.math3.ode.nonstiff.DormandPrince853Integrator: int mainSetDimension>;

        $d9 = (double) $i2;

        $d10 = $d9 * d73;

        $d12 = staticinvoke <org.apache.commons.math3.util.FastMath: double sqrt(double)>($d10);

        $d13 = $d11 / $d12;

        return $d13;
    }

    static void <clinit>()
    {
        double[] $r0, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21, $d22, $d23, $d24, $d25, $d26, $d27, $d28, $d29, $d30, $d31, $d32, $d33, $d34, $d35, $d36, $d37, $d38, $d39, $d40, $d41, $d42, $d43, $d44, $d45, $d46, $d47, $d48, $d49, $d50, $d51, $d52, $d53, $d54, $d55, $d56, $d57, $d58, $d59, $d60, $d61, $d62, $d63, $d64, $d65, $d66, $d67, $d68, $d69, $d70, $d71, $d72, $d73, $d74, $d75, $d76, $d77, $d78, $d79, $d80, $d81, $d82, $d83, $d84, $d85, $d86, $d87, $d88, $d89, $d90, $d91, $d92, $d93, $d94;
        double[][] $r1;

        <org.apache.commons.math3.ode.nonstiff.DormandPrince853Integrator: double E2_12> = 0.022651792198360825;

        <org.apache.commons.math3.ode.nonstiff.DormandPrince853Integrator: double E2_11> = 0.20136540080403034;

        <org.apache.commons.math3.ode.nonstiff.DormandPrince853Integrator: double E2_10> = -0.1521609496625161;

        <org.apache.commons.math3.ode.nonstiff.DormandPrince853Integrator: double E2_09> = -0.42268232132379197;

        <org.apache.commons.math3.ode.nonstiff.DormandPrince853Integrator: double E2_08> = -5.801203960010585;

        <org.apache.commons.math3.ode.nonstiff.DormandPrince853Integrator: double E2_07> = 1.8915178993145003;

        <org.apache.commons.math3.ode.nonstiff.DormandPrince853Integrator: double E2_06> = 4.450312892752409;

        <org.apache.commons.math3.ode.nonstiff.DormandPrince853Integrator: double E2_01> = -0.18980075407240762;

        <org.apache.commons.math3.ode.nonstiff.DormandPrince853Integrator: double E1_12> = -0.022355307863886294;

        <org.apache.commons.math3.ode.nonstiff.DormandPrince853Integrator: double E1_11> = 0.08192320648511571;

        <org.apache.commons.math3.ode.nonstiff.DormandPrince853Integrator: double E1_10> = 0.3341791187130175;

        <org.apache.commons.math3.ode.nonstiff.DormandPrince853Integrator: double E1_09> = -0.35032884874997366;

        <org.apache.commons.math3.ode.nonstiff.DormandPrince853Integrator: double E1_08> = 1.6643771824549864;

        <org.apache.commons.math3.ode.nonstiff.DormandPrince853Integrator: double E1_07> = -0.4957589496572502;

        <org.apache.commons.math3.ode.nonstiff.DormandPrince853Integrator: double E1_06> = -1.2251564463762044;

        <org.apache.commons.math3.ode.nonstiff.DormandPrince853Integrator: double E1_01> = 0.01312004499419488;

        <org.apache.commons.math3.ode.nonstiff.DormandPrince853Integrator: java.lang.String METHOD_NAME> = "Dormand-Prince 8 (5, 3)";

        $r0 = newarray (double)[12];

        $d0 = staticinvoke <org.apache.commons.math3.util.FastMath: double sqrt(double)>(6.0);

        $d1 = 2.0 * $d0;

        $d2 = 12.0 - $d1;

        $d3 = $d2 / 135.0;

        $r0[0] = $d3;

        $d4 = staticinvoke <org.apache.commons.math3.util.FastMath: double sqrt(double)>(6.0);

        $d5 = 6.0 - $d4;

        $d6 = $d5 / 45.0;

        $r0[1] = $d6;

        $d7 = staticinvoke <org.apache.commons.math3.util.FastMath: double sqrt(double)>(6.0);

        $d8 = 6.0 - $d7;

        $d9 = $d8 / 30.0;

        $r0[2] = $d9;

        $d10 = staticinvoke <org.apache.commons.math3.util.FastMath: double sqrt(double)>(6.0);

        $d11 = 6.0 + $d10;

        $d12 = $d11 / 30.0;

        $r0[3] = $d12;

        $r0[4] = 0.3333333333333333;

        $r0[5] = 0.25;

        $r0[6] = 0.3076923076923077;

        $r0[7] = 0.6512820512820513;

        $r0[8] = 0.6;

        $r0[9] = 0.8571428571428571;

        $r0[10] = 1.0;

        $r0[11] = 1.0;

        <org.apache.commons.math3.ode.nonstiff.DormandPrince853Integrator: double[] STATIC_C> = $r0;

        $r1 = newarray (double[])[12];

        $r2 = newarray (double)[1];

        $d13 = staticinvoke <org.apache.commons.math3.util.FastMath: double sqrt(double)>(6.0);

        $d14 = 2.0 * $d13;

        $d15 = 12.0 - $d14;

        $d16 = $d15 / 135.0;

        $r2[0] = $d16;

        $r1[0] = $r2;

        $r3 = newarray (double)[2];

        $d17 = staticinvoke <org.apache.commons.math3.util.FastMath: double sqrt(double)>(6.0);

        $d18 = 6.0 - $d17;

        $d19 = $d18 / 180.0;

        $r3[0] = $d19;

        $d20 = staticinvoke <org.apache.commons.math3.util.FastMath: double sqrt(double)>(6.0);

        $d21 = 6.0 - $d20;

        $d22 = $d21 / 60.0;

        $r3[1] = $d22;

        $r1[1] = $r3;

        $r4 = newarray (double)[3];

        $d23 = staticinvoke <org.apache.commons.math3.util.FastMath: double sqrt(double)>(6.0);

        $d24 = 6.0 - $d23;

        $d25 = $d24 / 120.0;

        $r4[0] = $d25;

        $r4[1] = 0.0;

        $d26 = staticinvoke <org.apache.commons.math3.util.FastMath: double sqrt(double)>(6.0);

        $d27 = 6.0 - $d26;

        $d28 = $d27 / 40.0;

        $r4[2] = $d28;

        $r1[2] = $r4;

        $r5 = newarray (double)[4];

        $d29 = staticinvoke <org.apache.commons.math3.util.FastMath: double sqrt(double)>(6.0);

        $d30 = 107.0 * $d29;

        $d31 = 462.0 + $d30;

        $d32 = $d31 / 3000.0;

        $r5[0] = $d32;

        $r5[1] = 0.0;

        $d33 = staticinvoke <org.apache.commons.math3.util.FastMath: double sqrt(double)>(6.0);

        $d34 = 197.0 * $d33;

        $d35 = -402.0 - $d34;

        $d36 = $d35 / 1000.0;

        $r5[2] = $d36;

        $d37 = staticinvoke <org.apache.commons.math3.util.FastMath: double sqrt(double)>(6.0);

        $d38 = 73.0 * $d37;

        $d39 = 168.0 + $d38;

        $d40 = $d39 / 375.0;

        $r5[3] = $d40;

        $r1[3] = $r5;

        $r6 = newarray (double)[5];

        $r6[0] = 0.037037037037037035;

        $r6[1] = 0.0;

        $r6[2] = 0.0;

        $d41 = staticinvoke <org.apache.commons.math3.util.FastMath: double sqrt(double)>(6.0);

        $d42 = 16.0 + $d41;

        $d43 = $d42 / 108.0;

        $r6[3] = $d43;

        $d44 = staticinvoke <org.apache.commons.math3.util.FastMath: double sqrt(double)>(6.0);

        $d45 = 16.0 - $d44;

        $d46 = $d45 / 108.0;

        $r6[4] = $d46;

        $r1[4] = $r6;

        $r7 = newarray (double)[6];

        $r7[0] = 0.037109375;

        $r7[1] = 0.0;

        $r7[2] = 0.0;

        $d47 = staticinvoke <org.apache.commons.math3.util.FastMath: double sqrt(double)>(6.0);

        $d48 = 23.0 * $d47;

        $d49 = 118.0 + $d48;

        $d50 = $d49 / 1024.0;

        $r7[3] = $d50;

        $d51 = staticinvoke <org.apache.commons.math3.util.FastMath: double sqrt(double)>(6.0);

        $d52 = 23.0 * $d51;

        $d53 = 118.0 - $d52;

        $d54 = $d53 / 1024.0;

        $r7[4] = $d54;

        $r7[5] = -0.017578125;

        $r1[5] = $r7;

        $r8 = newarray (double)[7];

        $r8[0] = 0.03709200011850479;

        $r8[1] = 0.0;

        $r8[2] = 0.0;

        $d55 = staticinvoke <org.apache.commons.math3.util.FastMath: double sqrt(double)>(6.0);

        $d56 = 4784.0 * $d55;

        $d57 = 51544.0 + $d56;

        $d58 = $d57 / 371293.0;

        $r8[3] = $d58;

        $d59 = staticinvoke <org.apache.commons.math3.util.FastMath: double sqrt(double)>(6.0);

        $d60 = 4784.0 * $d59;

        $d61 = 51544.0 - $d60;

        $d62 = $d61 / 371293.0;

        $r8[4] = $d62;

        $r8[5] = -0.015319437748624402;

        $r8[6] = 0.008273789163814023;

        $r1[6] = $r8;

        $r9 = newarray (double)[8];

        $r9[0] = 0.6241109587160757;

        $r9[1] = 0.0;

        $r9[2] = 0.0;

        $d63 = staticinvoke <org.apache.commons.math3.util.FastMath: double sqrt(double)>(6.0);

        $d64 = 3.18801444819E11 * $d63;

        $d65 = -1.324889724104E12 - $d64;

        $d66 = $d65 / 6.265569375E11;

        $r9[3] = $d66;

        $d67 = staticinvoke <org.apache.commons.math3.util.FastMath: double sqrt(double)>(6.0);

        $d68 = 3.18801444819E11 * $d67;

        $d69 = -1.324889724104E12 + $d68;

        $d70 = $d69 / 6.265569375E11;

        $r9[4] = $d70;

        $r9[5] = 27.59209969944671;

        $r9[6] = 20.154067550477894;

        $r9[7] = -43.48988418106996;

        $r1[7] = $r9;

        $r10 = newarray (double)[9];

        $r10[0] = 0.47766253643826434;

        $r10[1] = 0.0;

        $r10[2] = 0.0;

        $d71 = staticinvoke <org.apache.commons.math3.util.FastMath: double sqrt(double)>(6.0);

        $d72 = 1137963.0 * $d71;

        $d73 = -4521408.0 - $d72;

        $d74 = $d73 / 2937500.0;

        $r10[3] = $d74;

        $d75 = staticinvoke <org.apache.commons.math3.util.FastMath: double sqrt(double)>(6.0);

        $d76 = 1137963.0 * $d75;

        $d77 = -4521408.0 + $d76;

        $d78 = $d77 / 2937500.0;

        $r10[4] = $d78;

        $r10[5] = 21.230051448181193;

        $r10[6] = 15.279233632882423;

        $r10[7] = -33.28821096898486;

        $r10[8] = -0.020331201708508627;

        $r1[8] = $r10;

        $r11 = newarray (double)[10];

        $r11[0] = -0.9371424300859873;

        $r11[1] = 0.0;

        $r11[2] = 0.0;

        $d79 = staticinvoke <org.apache.commons.math3.util.FastMath: double sqrt(double)>(6.0);

        $d80 = 94326.0 * $d79;

        $d81 = 354216.0 + $d80;

        $d82 = $d81 / 112847.0;

        $r11[3] = $d82;

        $d83 = staticinvoke <org.apache.commons.math3.util.FastMath: double sqrt(double)>(6.0);

        $d84 = 94326.0 * $d83;

        $d85 = 354216.0 - $d84;

        $d86 = $d85 / 112847.0;

        $r11[4] = $d86;

        $r11[5] = -8.149787010746927;

        $r11[6] = -18.52006565999696;

        $r11[7] = 22.739487099350505;

        $r11[8] = 2.4936055526796523;

        $r11[9] = -3.0467644718982196;

        $r1[9] = $r11;

        $r12 = newarray (double)[11];

        $r12[0] = 2.273310147516538;

        $r12[1] = 0.0;

        $r12[2] = 0.0;

        $d87 = staticinvoke <org.apache.commons.math3.util.FastMath: double sqrt(double)>(6.0);

        $d88 = 960905.0 * $d87;

        $d89 = -3457480.0 - $d88;

        $d90 = $d89 / 551636.0;

        $r12[3] = $d90;

        $d91 = staticinvoke <org.apache.commons.math3.util.FastMath: double sqrt(double)>(6.0);

        $d92 = 960905.0 * $d91;

        $d93 = -3457480.0 + $d92;

        $d94 = $d93 / 551636.0;

        $r12[4] = $d94;

        $r12[5] = -17.9589318631188;

        $r12[6] = 27.94888452941996;

        $r12[7] = -2.8589982771350235;

        $r12[8] = -8.87285693353063;

        $r12[9] = 12.360567175794303;

        $r12[10] = 0.6433927460157636;

        $r1[10] = $r12;

        $r13 = newarray (double)[12];

        $r13[0] = 0.054293734116568765;

        $r13[1] = 0.0;

        $r13[2] = 0.0;

        $r13[3] = 0.0;

        $r13[4] = 0.0;

        $r13[5] = 4.450312892752409;

        $r13[6] = 1.8915178993145003;

        $r13[7] = -5.801203960010585;

        $r13[8] = 0.3111643669578199;

        $r13[9] = -0.1521609496625161;

        $r13[10] = 0.20136540080403034;

        $r13[11] = 0.04471061572777259;

        $r1[11] = $r13;

        <org.apache.commons.math3.ode.nonstiff.DormandPrince853Integrator: double[][] STATIC_A> = $r1;

        $r14 = newarray (double)[13];

        $r14[0] = 0.054293734116568765;

        $r14[1] = 0.0;

        $r14[2] = 0.0;

        $r14[3] = 0.0;

        $r14[4] = 0.0;

        $r14[5] = 4.450312892752409;

        $r14[6] = 1.8915178993145003;

        $r14[7] = -5.801203960010585;

        $r14[8] = 0.3111643669578199;

        $r14[9] = -0.1521609496625161;

        $r14[10] = 0.20136540080403034;

        $r14[11] = 0.04471061572777259;

        $r14[12] = 0.0;

        <org.apache.commons.math3.ode.nonstiff.DormandPrince853Integrator: double[] STATIC_B> = $r14;

        return;
    }
}
