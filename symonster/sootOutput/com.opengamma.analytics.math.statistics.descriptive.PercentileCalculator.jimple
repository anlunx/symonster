public class com.opengamma.analytics.math.statistics.descriptive.PercentileCalculator extends com.opengamma.analytics.math.function.Function1D
{
    private double _percentile;

    public void <init>(double)
    {
        com.opengamma.analytics.math.statistics.descriptive.PercentileCalculator r0;
        double d0;
        byte $b0, $b1;
        boolean $z0;

        r0 := @this: com.opengamma.analytics.math.statistics.descriptive.PercentileCalculator;

        d0 := @parameter0: double;

        specialinvoke r0.<com.opengamma.analytics.math.function.Function1D: void <init>()>();

        $b0 = d0 cmpl 0.0;

        if $b0 <= 0 goto label1;

        $b1 = d0 cmpg 1.0;

        if $b1 >= 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        staticinvoke <org.apache.commons.lang.Validate: void isTrue(boolean,java.lang.String)>($z0, "Percentile must be between 0 and 1");

        r0.<com.opengamma.analytics.math.statistics.descriptive.PercentileCalculator: double _percentile> = d0;

        return;
    }

    public void setPercentile(double)
    {
        com.opengamma.analytics.math.statistics.descriptive.PercentileCalculator r0;
        double d0;
        byte $b0, $b1;
        boolean $z0;

        r0 := @this: com.opengamma.analytics.math.statistics.descriptive.PercentileCalculator;

        d0 := @parameter0: double;

        $b0 = d0 cmpl 0.0;

        if $b0 <= 0 goto label1;

        $b1 = d0 cmpg 1.0;

        if $b1 >= 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        staticinvoke <org.apache.commons.lang.Validate: void isTrue(boolean,java.lang.String)>($z0, "Percentile must be between 0 and 1");

        r0.<com.opengamma.analytics.math.statistics.descriptive.PercentileCalculator: double _percentile> = d0;

        return;
    }

    public java.lang.Double evaluate(double[])
    {
        com.opengamma.analytics.math.statistics.descriptive.PercentileCalculator r0;
        double[] r1, r2;
        int i0, i1, $i2, $i3, $i10, $i11, $i12;
        double d0, d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13;
        long $l4, $l6, $l7, $l9;
        byte $b5, $b8;
        java.lang.Double $r3, $r4, $r5;
        boolean $z0;

        r0 := @this: com.opengamma.analytics.math.statistics.descriptive.PercentileCalculator;

        r1 := @parameter0: double[];

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object,java.lang.String)>(r1, "x");

        $i2 = lengthof r1;

        if $i2 <= 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        staticinvoke <org.apache.commons.lang.Validate: void isTrue(boolean,java.lang.String)>($z0, "x cannot be empty");

        i0 = lengthof r1;

        r2 = staticinvoke <java.util.Arrays: double[] copyOf(double[],int)>(r1, i0);

        staticinvoke <java.util.Arrays: void sort(double[])>(r2);

        $d3 = r0.<com.opengamma.analytics.math.statistics.descriptive.PercentileCalculator: double _percentile>;

        $i3 = i0 - 1;

        $d2 = (double) $i3;

        $d4 = $d3 * $d2;

        d0 = $d4 + 1.0;

        $l4 = staticinvoke <java.lang.Math: long round(double)>(d0);

        $b5 = $l4 cmp 1L;

        if $b5 != 0 goto label3;

        $d13 = r2[0];

        $r5 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d13);

        return $r5;

     label3:
        $l6 = staticinvoke <java.lang.Math: long round(double)>(d0);

        $l7 = (long) i0;

        $b8 = $l6 cmp $l7;

        if $b8 != 0 goto label4;

        $i12 = i0 - 1;

        $d12 = r2[$i12];

        $r4 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d12);

        return $r4;

     label4:
        d1 = d0 % 1.0;

        $d5 = d0 - d1;

        $l9 = staticinvoke <java.lang.Math: long round(double)>($d5);

        i1 = (int) $l9;

        $i10 = i1 - 1;

        $d10 = r2[$i10];

        $d7 = r2[i1];

        $i11 = i1 - 1;

        $d6 = r2[$i11];

        $d8 = $d7 - $d6;

        $d9 = d1 * $d8;

        $d11 = $d10 + $d9;

        $r3 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d11);

        return $r3;
    }

    public volatile java.lang.Object evaluate(java.lang.Object)
    {
        com.opengamma.analytics.math.statistics.descriptive.PercentileCalculator r0;
        java.lang.Object r1;
        double[] $r2;
        java.lang.Double $r3;

        r0 := @this: com.opengamma.analytics.math.statistics.descriptive.PercentileCalculator;

        r1 := @parameter0: java.lang.Object;

        $r2 = (double[]) r1;

        $r3 = virtualinvoke r0.<com.opengamma.analytics.math.statistics.descriptive.PercentileCalculator: java.lang.Double evaluate(double[])>($r2);

        return $r3;
    }
}
