public abstract class com.opengamma.analytics.math.curve.ObjectsCurve extends com.opengamma.analytics.math.curve.Curve
{
    private int _n;
    private java.lang.Comparable[] _xData;
    private java.lang.Object[] _yData;

    protected void <init>()
    {
        com.opengamma.analytics.math.curve.ObjectsCurve r0;

        r0 := @this: com.opengamma.analytics.math.curve.ObjectsCurve;

        specialinvoke r0.<com.opengamma.analytics.math.curve.Curve: void <init>()>();

        return;
    }

    public void <init>(java.lang.Comparable[], java.lang.Object[], boolean)
    {
        com.opengamma.analytics.math.curve.ObjectsCurve r0;
        java.lang.Comparable[] r1, $r9, $r12;
        java.lang.Object[] r2, $r5, $r8, $r10, $r11;
        boolean z0, $z1;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, i7, $i8;
        java.lang.Integer $r6, $r7;
        java.lang.StringBuilder $r13, $r15, $r16, $r17, $r20, $r22, $r23, $r24;
        java.lang.Comparable $r14;
        java.lang.String $r18, $r25;
        java.lang.Object $r21;

        r0 := @this: com.opengamma.analytics.math.curve.ObjectsCurve;

        r1 := @parameter0: java.lang.Comparable[];

        r2 := @parameter1: java.lang.Object[];

        z0 := @parameter2: boolean;

        specialinvoke r0.<com.opengamma.analytics.math.curve.Curve: void <init>()>();

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "x data");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, "y data");

        $i0 = lengthof r1;

        r0.<com.opengamma.analytics.math.curve.ObjectsCurve: int _n> = $i0;

        $i2 = r0.<com.opengamma.analytics.math.curve.ObjectsCurve: int _n>;

        $i1 = lengthof r2;

        if $i2 != $i1 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        $r5 = newarray (java.lang.Object)[2];

        $i3 = r0.<com.opengamma.analytics.math.curve.ObjectsCurve: int _n>;

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3);

        $r5[0] = $r6;

        $i4 = lengthof r2;

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i4);

        $r5[1] = $r7;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String,java.lang.Object[])>($z1, "size of x data {} does not match size of y data {}", $r5);

        $i5 = r0.<com.opengamma.analytics.math.curve.ObjectsCurve: int _n>;

        $r8 = staticinvoke <java.util.Arrays: java.lang.Object[] copyOf(java.lang.Object[],int)>(r1, $i5);

        $r9 = (java.lang.Comparable[]) $r8;

        r0.<com.opengamma.analytics.math.curve.ObjectsCurve: java.lang.Comparable[] _xData> = $r9;

        $i6 = r0.<com.opengamma.analytics.math.curve.ObjectsCurve: int _n>;

        $r10 = staticinvoke <java.util.Arrays: java.lang.Object[] copyOf(java.lang.Object[],int)>(r2, $i6);

        r0.<com.opengamma.analytics.math.curve.ObjectsCurve: java.lang.Object[] _yData> = $r10;

        i7 = 0;

     label3:
        $i8 = r0.<com.opengamma.analytics.math.curve.ObjectsCurve: int _n>;

        if i7 >= $i8 goto label4;

        $r14 = r1[i7];

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("element ");

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i7);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" of x data");

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>($r14, $r18);

        $r21 = r2[i7];

        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();

        $r22 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("element ");

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i7);

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" of y data");

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>($r21, $r25);

        i7 = i7 + 1;

        goto label3;

     label4:
        if z0 != 0 goto label5;

        $r12 = r0.<com.opengamma.analytics.math.curve.ObjectsCurve: java.lang.Comparable[] _xData>;

        $r11 = r0.<com.opengamma.analytics.math.curve.ObjectsCurve: java.lang.Object[] _yData>;

        staticinvoke <com.opengamma.util.ParallelArrayBinarySort: void parallelBinarySort(java.lang.Comparable[],java.lang.Object[])>($r12, $r11);

     label5:
        return;
    }

    public void <init>(java.util.Map, boolean)
    {
        com.opengamma.analytics.math.curve.ObjectsCurve r0;
        java.util.Map r1;
        boolean z0;
        java.util.Map$Entry r2;
        java.util.Set $r3, $r7, $r10;
        java.util.Collection $r5, $r19;
        int $i0;
        java.util.Iterator $r8;
        java.lang.Object $r9, $r11, $r14, $r20, $r22;
        java.lang.Comparable $r12;
        java.lang.Class $r13, $r21;
        java.lang.Comparable[] $r15, $r16, $r18, $r27;
        java.lang.Object[] $r17, $r23, $r24, $r25, $r26;

        r0 := @this: com.opengamma.analytics.math.curve.ObjectsCurve;

        r1 := @parameter0: java.util.Map;

        z0 := @parameter1: boolean;

        specialinvoke r0.<com.opengamma.analytics.math.curve.Curve: void <init>()>();

        $r3 = interfaceinvoke r1.<java.util.Map: java.util.Set keySet()>();

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Iterable noNulls(java.lang.Iterable,java.lang.String)>($r3, "x values");

        $r5 = interfaceinvoke r1.<java.util.Map: java.util.Collection values()>();

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Iterable noNulls(java.lang.Iterable,java.lang.String)>($r5, "y values");

        $i0 = interfaceinvoke r1.<java.util.Map: int size()>();

        r0.<com.opengamma.analytics.math.curve.ObjectsCurve: int _n> = $i0;

        $r7 = interfaceinvoke r1.<java.util.Map: java.util.Set entrySet()>();

        $r8 = interfaceinvoke $r7.<java.util.Set: java.util.Iterator iterator()>();

        $r9 = interfaceinvoke $r8.<java.util.Iterator: java.lang.Object next()>();

        r2 = (java.util.Map$Entry) $r9;

        $r10 = interfaceinvoke r1.<java.util.Map: java.util.Set keySet()>();

        $r11 = interfaceinvoke r2.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r12 = (java.lang.Comparable) $r11;

        $r13 = virtualinvoke $r12.<java.lang.Object: java.lang.Class getClass()>();

        $r14 = staticinvoke <java.lang.reflect.Array: java.lang.Object newInstance(java.lang.Class,int)>($r13, 0);

        $r15 = (java.lang.Comparable[]) $r14;

        $r16 = (java.lang.Comparable[]) $r15;

        $r17 = interfaceinvoke $r10.<java.util.Set: java.lang.Object[] toArray(java.lang.Object[])>($r16);

        $r18 = (java.lang.Comparable[]) $r17;

        r0.<com.opengamma.analytics.math.curve.ObjectsCurve: java.lang.Comparable[] _xData> = $r18;

        $r19 = interfaceinvoke r1.<java.util.Map: java.util.Collection values()>();

        $r20 = interfaceinvoke r2.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r21 = virtualinvoke $r20.<java.lang.Object: java.lang.Class getClass()>();

        $r22 = staticinvoke <java.lang.reflect.Array: java.lang.Object newInstance(java.lang.Class,int)>($r21, 0);

        $r23 = (java.lang.Object[]) $r22;

        $r24 = (java.lang.Object[]) $r23;

        $r25 = interfaceinvoke $r19.<java.util.Collection: java.lang.Object[] toArray(java.lang.Object[])>($r24);

        r0.<com.opengamma.analytics.math.curve.ObjectsCurve: java.lang.Object[] _yData> = $r25;

        if z0 != 0 goto label1;

        $r27 = r0.<com.opengamma.analytics.math.curve.ObjectsCurve: java.lang.Comparable[] _xData>;

        $r26 = r0.<com.opengamma.analytics.math.curve.ObjectsCurve: java.lang.Object[] _yData>;

        staticinvoke <com.opengamma.util.ParallelArrayBinarySort: void parallelBinarySort(java.lang.Comparable[],java.lang.Object[])>($r27, $r26);

     label1:
        return;
    }

    public void <init>(java.util.Set, boolean)
    {
        com.opengamma.analytics.math.curve.ObjectsCurve r0;
        java.util.Set r1;
        boolean z0, $z1;
        com.opengamma.util.tuple.Pair r4, r31;
        int $i0, $i1, $i2;
        java.util.ArrayList $r6, $r7;
        java.util.Iterator $r8, r30;
        java.lang.Object $r9, $r10, $r13, $r18, $r20, $r26, $r28, $r29;
        java.lang.Comparable $r11;
        java.lang.Class $r12, $r19;
        java.lang.Comparable[] $r14, $r15, $r17, $r25;
        java.lang.Object[] $r16, $r21, $r22, $r23, $r24;

        r0 := @this: com.opengamma.analytics.math.curve.ObjectsCurve;

        r1 := @parameter0: java.util.Set;

        z0 := @parameter1: boolean;

        specialinvoke r0.<com.opengamma.analytics.math.curve.Curve: void <init>()>();

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "data");

        $i0 = interfaceinvoke r1.<java.util.Set: int size()>();

        r0.<com.opengamma.analytics.math.curve.ObjectsCurve: int _n> = $i0;

        $r6 = new java.util.ArrayList;

        $i1 = r0.<com.opengamma.analytics.math.curve.ObjectsCurve: int _n>;

        specialinvoke $r6.<java.util.ArrayList: void <init>(int)>($i1);

        $r7 = new java.util.ArrayList;

        $i2 = r0.<com.opengamma.analytics.math.curve.ObjectsCurve: int _n>;

        specialinvoke $r7.<java.util.ArrayList: void <init>(int)>($i2);

        r30 = interfaceinvoke r1.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z1 = interfaceinvoke r30.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label2;

        $r26 = interfaceinvoke r30.<java.util.Iterator: java.lang.Object next()>();

        r4 = (com.opengamma.util.tuple.Pair) $r26;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r4, "element of data");

        $r28 = virtualinvoke r4.<com.opengamma.util.tuple.Pair: java.lang.Object getFirst()>();

        interfaceinvoke $r6.<java.util.List: boolean add(java.lang.Object)>($r28);

        $r29 = virtualinvoke r4.<com.opengamma.util.tuple.Pair: java.lang.Object getSecond()>();

        interfaceinvoke $r7.<java.util.List: boolean add(java.lang.Object)>($r29);

        goto label1;

     label2:
        $r8 = interfaceinvoke r1.<java.util.Set: java.util.Iterator iterator()>();

        $r9 = interfaceinvoke $r8.<java.util.Iterator: java.lang.Object next()>();

        r31 = (com.opengamma.util.tuple.Pair) $r9;

        $r10 = virtualinvoke r31.<com.opengamma.util.tuple.Pair: java.lang.Object getFirst()>();

        $r11 = (java.lang.Comparable) $r10;

        $r12 = virtualinvoke $r11.<java.lang.Object: java.lang.Class getClass()>();

        $r13 = staticinvoke <java.lang.reflect.Array: java.lang.Object newInstance(java.lang.Class,int)>($r12, 0);

        $r14 = (java.lang.Comparable[]) $r13;

        $r15 = (java.lang.Comparable[]) $r14;

        $r16 = interfaceinvoke $r6.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r15);

        $r17 = (java.lang.Comparable[]) $r16;

        r0.<com.opengamma.analytics.math.curve.ObjectsCurve: java.lang.Comparable[] _xData> = $r17;

        $r18 = virtualinvoke r31.<com.opengamma.util.tuple.Pair: java.lang.Object getSecond()>();

        $r19 = virtualinvoke $r18.<java.lang.Object: java.lang.Class getClass()>();

        $r20 = staticinvoke <java.lang.reflect.Array: java.lang.Object newInstance(java.lang.Class,int)>($r19, 0);

        $r21 = (java.lang.Object[]) $r20;

        $r22 = (java.lang.Object[]) $r21;

        $r23 = interfaceinvoke $r7.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r22);

        r0.<com.opengamma.analytics.math.curve.ObjectsCurve: java.lang.Object[] _yData> = $r23;

        if z0 != 0 goto label3;

        $r25 = r0.<com.opengamma.analytics.math.curve.ObjectsCurve: java.lang.Comparable[] _xData>;

        $r24 = r0.<com.opengamma.analytics.math.curve.ObjectsCurve: java.lang.Object[] _yData>;

        staticinvoke <com.opengamma.util.ParallelArrayBinarySort: void parallelBinarySort(java.lang.Comparable[],java.lang.Object[])>($r25, $r24);

     label3:
        return;
    }

    public void <init>(java.util.List, java.util.List, boolean)
    {
        com.opengamma.analytics.math.curve.ObjectsCurve r0;
        java.util.List r1, r2;
        boolean z0, $z1;
        int $i0, $i1, $i2, $i3, $i4;
        java.lang.Object[] $r5, $r14, $r19, $r20, $r21, $r22;
        java.lang.Integer $r6, $r7;
        java.lang.Object $r8, $r11, $r16, $r18;
        java.lang.Comparable $r9;
        java.lang.Class $r10, $r17;
        java.lang.Comparable[] $r12, $r13, $r15, $r23;

        r0 := @this: com.opengamma.analytics.math.curve.ObjectsCurve;

        r1 := @parameter0: java.util.List;

        r2 := @parameter1: java.util.List;

        z0 := @parameter2: boolean;

        specialinvoke r0.<com.opengamma.analytics.math.curve.Curve: void <init>()>();

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "x data");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, "y data");

        $i0 = interfaceinvoke r1.<java.util.List: int size()>();

        r0.<com.opengamma.analytics.math.curve.ObjectsCurve: int _n> = $i0;

        $i1 = r0.<com.opengamma.analytics.math.curve.ObjectsCurve: int _n>;

        $i2 = interfaceinvoke r2.<java.util.List: int size()>();

        if $i1 != $i2 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        $r5 = newarray (java.lang.Object)[2];

        $i3 = r0.<com.opengamma.analytics.math.curve.ObjectsCurve: int _n>;

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3);

        $r5[0] = $r6;

        $i4 = interfaceinvoke r2.<java.util.List: int size()>();

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i4);

        $r5[1] = $r7;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String,java.lang.Object[])>($z1, "size of x data {} does not match size of y data {}", $r5);

        $r8 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(0);

        $r9 = (java.lang.Comparable) $r8;

        $r10 = virtualinvoke $r9.<java.lang.Object: java.lang.Class getClass()>();

        $r11 = staticinvoke <java.lang.reflect.Array: java.lang.Object newInstance(java.lang.Class,int)>($r10, 0);

        $r12 = (java.lang.Comparable[]) $r11;

        $r13 = (java.lang.Comparable[]) $r12;

        $r14 = interfaceinvoke r1.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r13);

        $r15 = (java.lang.Comparable[]) $r14;

        r0.<com.opengamma.analytics.math.curve.ObjectsCurve: java.lang.Comparable[] _xData> = $r15;

        $r16 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>(0);

        $r17 = virtualinvoke $r16.<java.lang.Object: java.lang.Class getClass()>();

        $r18 = staticinvoke <java.lang.reflect.Array: java.lang.Object newInstance(java.lang.Class,int)>($r17, 0);

        $r19 = (java.lang.Object[]) $r18;

        $r20 = (java.lang.Object[]) $r19;

        $r21 = interfaceinvoke r2.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r20);

        r0.<com.opengamma.analytics.math.curve.ObjectsCurve: java.lang.Object[] _yData> = $r21;

        if z0 != 0 goto label3;

        $r23 = r0.<com.opengamma.analytics.math.curve.ObjectsCurve: java.lang.Comparable[] _xData>;

        $r22 = r0.<com.opengamma.analytics.math.curve.ObjectsCurve: java.lang.Object[] _yData>;

        staticinvoke <com.opengamma.util.ParallelArrayBinarySort: void parallelBinarySort(java.lang.Comparable[],java.lang.Object[])>($r23, $r22);

     label3:
        return;
    }

    public void <init>(java.lang.Comparable[], java.lang.Object[], boolean, java.lang.String)
    {
        com.opengamma.analytics.math.curve.ObjectsCurve r0;
        java.lang.Comparable[] r1, $r10, $r13;
        java.lang.Object[] r2, $r6, $r9, $r11, $r12;
        boolean z0, $z1;
        java.lang.String r3;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6;
        java.lang.Integer $r7, $r8;

        r0 := @this: com.opengamma.analytics.math.curve.ObjectsCurve;

        r1 := @parameter0: java.lang.Comparable[];

        r2 := @parameter1: java.lang.Object[];

        z0 := @parameter2: boolean;

        r3 := @parameter3: java.lang.String;

        specialinvoke r0.<com.opengamma.analytics.math.curve.Curve: void <init>(java.lang.String)>(r3);

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "x data");

        $i0 = lengthof r1;

        r0.<com.opengamma.analytics.math.curve.ObjectsCurve: int _n> = $i0;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, "y data");

        $i2 = r0.<com.opengamma.analytics.math.curve.ObjectsCurve: int _n>;

        $i1 = lengthof r2;

        if $i2 != $i1 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        $r6 = newarray (java.lang.Object)[2];

        $i3 = r0.<com.opengamma.analytics.math.curve.ObjectsCurve: int _n>;

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3);

        $r6[0] = $r7;

        $i4 = lengthof r2;

        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i4);

        $r6[1] = $r8;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String,java.lang.Object[])>($z1, "size of x data {} does not match size of y data {}", $r6);

        $i5 = r0.<com.opengamma.analytics.math.curve.ObjectsCurve: int _n>;

        $r9 = staticinvoke <java.util.Arrays: java.lang.Object[] copyOf(java.lang.Object[],int)>(r1, $i5);

        $r10 = (java.lang.Comparable[]) $r9;

        r0.<com.opengamma.analytics.math.curve.ObjectsCurve: java.lang.Comparable[] _xData> = $r10;

        $i6 = r0.<com.opengamma.analytics.math.curve.ObjectsCurve: int _n>;

        $r11 = staticinvoke <java.util.Arrays: java.lang.Object[] copyOf(java.lang.Object[],int)>(r2, $i6);

        r0.<com.opengamma.analytics.math.curve.ObjectsCurve: java.lang.Object[] _yData> = $r11;

        if z0 != 0 goto label3;

        $r13 = r0.<com.opengamma.analytics.math.curve.ObjectsCurve: java.lang.Comparable[] _xData>;

        $r12 = r0.<com.opengamma.analytics.math.curve.ObjectsCurve: java.lang.Object[] _yData>;

        staticinvoke <com.opengamma.util.ParallelArrayBinarySort: void parallelBinarySort(java.lang.Comparable[],java.lang.Object[])>($r13, $r12);

     label3:
        return;
    }

    public void <init>(java.util.Map, boolean, java.lang.String)
    {
        com.opengamma.analytics.math.curve.ObjectsCurve r0;
        java.util.Map r1;
        boolean z0;
        java.lang.String r2;
        java.util.Map$Entry r3;
        java.util.Set $r4, $r8, $r11;
        java.util.Collection $r6, $r20;
        int $i0;
        java.util.Iterator $r9;
        java.lang.Object $r10, $r12, $r15, $r21, $r23;
        java.lang.Comparable $r13;
        java.lang.Class $r14, $r22;
        java.lang.Comparable[] $r16, $r17, $r19, $r28;
        java.lang.Object[] $r18, $r24, $r25, $r26, $r27;

        r0 := @this: com.opengamma.analytics.math.curve.ObjectsCurve;

        r1 := @parameter0: java.util.Map;

        z0 := @parameter1: boolean;

        r2 := @parameter2: java.lang.String;

        specialinvoke r0.<com.opengamma.analytics.math.curve.Curve: void <init>(java.lang.String)>(r2);

        $r4 = interfaceinvoke r1.<java.util.Map: java.util.Set keySet()>();

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Iterable noNulls(java.lang.Iterable,java.lang.String)>($r4, "x values");

        $r6 = interfaceinvoke r1.<java.util.Map: java.util.Collection values()>();

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Iterable noNulls(java.lang.Iterable,java.lang.String)>($r6, "y values");

        $i0 = interfaceinvoke r1.<java.util.Map: int size()>();

        r0.<com.opengamma.analytics.math.curve.ObjectsCurve: int _n> = $i0;

        $r8 = interfaceinvoke r1.<java.util.Map: java.util.Set entrySet()>();

        $r9 = interfaceinvoke $r8.<java.util.Set: java.util.Iterator iterator()>();

        $r10 = interfaceinvoke $r9.<java.util.Iterator: java.lang.Object next()>();

        r3 = (java.util.Map$Entry) $r10;

        $r11 = interfaceinvoke r1.<java.util.Map: java.util.Set keySet()>();

        $r12 = interfaceinvoke r3.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r13 = (java.lang.Comparable) $r12;

        $r14 = virtualinvoke $r13.<java.lang.Object: java.lang.Class getClass()>();

        $r15 = staticinvoke <java.lang.reflect.Array: java.lang.Object newInstance(java.lang.Class,int)>($r14, 0);

        $r16 = (java.lang.Comparable[]) $r15;

        $r17 = (java.lang.Comparable[]) $r16;

        $r18 = interfaceinvoke $r11.<java.util.Set: java.lang.Object[] toArray(java.lang.Object[])>($r17);

        $r19 = (java.lang.Comparable[]) $r18;

        r0.<com.opengamma.analytics.math.curve.ObjectsCurve: java.lang.Comparable[] _xData> = $r19;

        $r20 = interfaceinvoke r1.<java.util.Map: java.util.Collection values()>();

        $r21 = interfaceinvoke r3.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r22 = virtualinvoke $r21.<java.lang.Object: java.lang.Class getClass()>();

        $r23 = staticinvoke <java.lang.reflect.Array: java.lang.Object newInstance(java.lang.Class,int)>($r22, 0);

        $r24 = (java.lang.Object[]) $r23;

        $r25 = (java.lang.Object[]) $r24;

        $r26 = interfaceinvoke $r20.<java.util.Collection: java.lang.Object[] toArray(java.lang.Object[])>($r25);

        r0.<com.opengamma.analytics.math.curve.ObjectsCurve: java.lang.Object[] _yData> = $r26;

        if z0 != 0 goto label1;

        $r28 = r0.<com.opengamma.analytics.math.curve.ObjectsCurve: java.lang.Comparable[] _xData>;

        $r27 = r0.<com.opengamma.analytics.math.curve.ObjectsCurve: java.lang.Object[] _yData>;

        staticinvoke <com.opengamma.util.ParallelArrayBinarySort: void parallelBinarySort(java.lang.Comparable[],java.lang.Object[])>($r28, $r27);

     label1:
        return;
    }

    public void <init>(java.util.Set, boolean, java.lang.String)
    {
        com.opengamma.analytics.math.curve.ObjectsCurve r0;
        java.util.Set r1;
        boolean z0, $z2;
        java.lang.String r2;
        com.opengamma.util.tuple.Pair r5, r32;
        int $i0, $i1, $i2;
        java.util.ArrayList $r7, $r8;
        java.util.Iterator $r9, r31;
        java.lang.Object $r10, $r11, $r14, $r19, $r21, $r27, $r29, $r30;
        java.lang.Comparable $r12;
        java.lang.Class $r13, $r20;
        java.lang.Comparable[] $r15, $r16, $r18, $r26;
        java.lang.Object[] $r17, $r22, $r23, $r24, $r25;

        r0 := @this: com.opengamma.analytics.math.curve.ObjectsCurve;

        r1 := @parameter0: java.util.Set;

        z0 := @parameter1: boolean;

        r2 := @parameter2: java.lang.String;

        specialinvoke r0.<com.opengamma.analytics.math.curve.Curve: void <init>(java.lang.String)>(r2);

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "data");

        $i0 = interfaceinvoke r1.<java.util.Set: int size()>();

        r0.<com.opengamma.analytics.math.curve.ObjectsCurve: int _n> = $i0;

        $r7 = new java.util.ArrayList;

        $i1 = r0.<com.opengamma.analytics.math.curve.ObjectsCurve: int _n>;

        specialinvoke $r7.<java.util.ArrayList: void <init>(int)>($i1);

        $r8 = new java.util.ArrayList;

        $i2 = r0.<com.opengamma.analytics.math.curve.ObjectsCurve: int _n>;

        specialinvoke $r8.<java.util.ArrayList: void <init>(int)>($i2);

        r31 = interfaceinvoke r1.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z2 = interfaceinvoke r31.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label2;

        $r27 = interfaceinvoke r31.<java.util.Iterator: java.lang.Object next()>();

        r5 = (com.opengamma.util.tuple.Pair) $r27;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r5, "element 0 of data");

        $r29 = virtualinvoke r5.<com.opengamma.util.tuple.Pair: java.lang.Object getFirst()>();

        interfaceinvoke $r7.<java.util.List: boolean add(java.lang.Object)>($r29);

        $r30 = virtualinvoke r5.<com.opengamma.util.tuple.Pair: java.lang.Object getSecond()>();

        interfaceinvoke $r8.<java.util.List: boolean add(java.lang.Object)>($r30);

        goto label1;

     label2:
        $r9 = interfaceinvoke r1.<java.util.Set: java.util.Iterator iterator()>();

        $r10 = interfaceinvoke $r9.<java.util.Iterator: java.lang.Object next()>();

        r32 = (com.opengamma.util.tuple.Pair) $r10;

        $r11 = virtualinvoke r32.<com.opengamma.util.tuple.Pair: java.lang.Object getFirst()>();

        $r12 = (java.lang.Comparable) $r11;

        $r13 = virtualinvoke $r12.<java.lang.Object: java.lang.Class getClass()>();

        $r14 = staticinvoke <java.lang.reflect.Array: java.lang.Object newInstance(java.lang.Class,int)>($r13, 0);

        $r15 = (java.lang.Comparable[]) $r14;

        $r16 = (java.lang.Comparable[]) $r15;

        $r17 = interfaceinvoke $r7.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r16);

        $r18 = (java.lang.Comparable[]) $r17;

        r0.<com.opengamma.analytics.math.curve.ObjectsCurve: java.lang.Comparable[] _xData> = $r18;

        $r19 = virtualinvoke r32.<com.opengamma.util.tuple.Pair: java.lang.Object getSecond()>();

        $r20 = virtualinvoke $r19.<java.lang.Object: java.lang.Class getClass()>();

        $r21 = staticinvoke <java.lang.reflect.Array: java.lang.Object newInstance(java.lang.Class,int)>($r20, 0);

        $r22 = (java.lang.Object[]) $r21;

        $r23 = (java.lang.Object[]) $r22;

        $r24 = interfaceinvoke $r8.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r23);

        r0.<com.opengamma.analytics.math.curve.ObjectsCurve: java.lang.Object[] _yData> = $r24;

        if z0 != 0 goto label3;

        $r26 = r0.<com.opengamma.analytics.math.curve.ObjectsCurve: java.lang.Comparable[] _xData>;

        $r25 = r0.<com.opengamma.analytics.math.curve.ObjectsCurve: java.lang.Object[] _yData>;

        staticinvoke <com.opengamma.util.ParallelArrayBinarySort: void parallelBinarySort(java.lang.Comparable[],java.lang.Object[])>($r26, $r25);

     label3:
        return;
    }

    public void <init>(java.util.List, java.util.List, boolean, java.lang.String)
    {
        com.opengamma.analytics.math.curve.ObjectsCurve r0;
        java.util.List r1, r2;
        boolean z0, $z1;
        java.lang.String r3;
        int $i0, $i1, $i2, $i3, $i4;
        java.lang.Object[] $r6, $r15, $r20, $r21, $r22, $r23;
        java.lang.Integer $r7, $r8;
        java.lang.Object $r9, $r12, $r17, $r19;
        java.lang.Comparable $r10;
        java.lang.Class $r11, $r18;
        java.lang.Comparable[] $r13, $r14, $r16, $r24;

        r0 := @this: com.opengamma.analytics.math.curve.ObjectsCurve;

        r1 := @parameter0: java.util.List;

        r2 := @parameter1: java.util.List;

        z0 := @parameter2: boolean;

        r3 := @parameter3: java.lang.String;

        specialinvoke r0.<com.opengamma.analytics.math.curve.Curve: void <init>(java.lang.String)>(r3);

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "x data");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, "y data");

        $i0 = interfaceinvoke r1.<java.util.List: int size()>();

        r0.<com.opengamma.analytics.math.curve.ObjectsCurve: int _n> = $i0;

        $i1 = r0.<com.opengamma.analytics.math.curve.ObjectsCurve: int _n>;

        $i2 = interfaceinvoke r2.<java.util.List: int size()>();

        if $i1 != $i2 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        $r6 = newarray (java.lang.Object)[2];

        $i3 = r0.<com.opengamma.analytics.math.curve.ObjectsCurve: int _n>;

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3);

        $r6[0] = $r7;

        $i4 = interfaceinvoke r2.<java.util.List: int size()>();

        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i4);

        $r6[1] = $r8;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String,java.lang.Object[])>($z1, "size of x data {} does not match size of y data {}", $r6);

        $r9 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(0);

        $r10 = (java.lang.Comparable) $r9;

        $r11 = virtualinvoke $r10.<java.lang.Object: java.lang.Class getClass()>();

        $r12 = staticinvoke <java.lang.reflect.Array: java.lang.Object newInstance(java.lang.Class,int)>($r11, 0);

        $r13 = (java.lang.Comparable[]) $r12;

        $r14 = (java.lang.Comparable[]) $r13;

        $r15 = interfaceinvoke r1.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r14);

        $r16 = (java.lang.Comparable[]) $r15;

        r0.<com.opengamma.analytics.math.curve.ObjectsCurve: java.lang.Comparable[] _xData> = $r16;

        $r17 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>(0);

        $r18 = virtualinvoke $r17.<java.lang.Object: java.lang.Class getClass()>();

        $r19 = staticinvoke <java.lang.reflect.Array: java.lang.Object newInstance(java.lang.Class,int)>($r18, 0);

        $r20 = (java.lang.Object[]) $r19;

        $r21 = (java.lang.Object[]) $r20;

        $r22 = interfaceinvoke r2.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r21);

        r0.<com.opengamma.analytics.math.curve.ObjectsCurve: java.lang.Object[] _yData> = $r22;

        if z0 != 0 goto label3;

        $r24 = r0.<com.opengamma.analytics.math.curve.ObjectsCurve: java.lang.Comparable[] _xData>;

        $r23 = r0.<com.opengamma.analytics.math.curve.ObjectsCurve: java.lang.Object[] _yData>;

        staticinvoke <com.opengamma.util.ParallelArrayBinarySort: void parallelBinarySort(java.lang.Comparable[],java.lang.Object[])>($r24, $r23);

     label3:
        return;
    }

    public java.lang.Comparable[] getXData()
    {
        com.opengamma.analytics.math.curve.ObjectsCurve r0;
        java.lang.Comparable[] $r1;

        r0 := @this: com.opengamma.analytics.math.curve.ObjectsCurve;

        $r1 = r0.<com.opengamma.analytics.math.curve.ObjectsCurve: java.lang.Comparable[] _xData>;

        return $r1;
    }

    public java.lang.Object[] getYData()
    {
        com.opengamma.analytics.math.curve.ObjectsCurve r0;
        java.lang.Object[] $r1;

        r0 := @this: com.opengamma.analytics.math.curve.ObjectsCurve;

        $r1 = r0.<com.opengamma.analytics.math.curve.ObjectsCurve: java.lang.Object[] _yData>;

        return $r1;
    }

    public int size()
    {
        com.opengamma.analytics.math.curve.ObjectsCurve r0;
        int $i0;

        r0 := @this: com.opengamma.analytics.math.curve.ObjectsCurve;

        $i0 = r0.<com.opengamma.analytics.math.curve.ObjectsCurve: int _n>;

        return $i0;
    }

    public boolean equals(java.lang.Object)
    {
        com.opengamma.analytics.math.curve.ObjectsCurve r0, r2;
        java.lang.Object r1;
        boolean $z0, $z1, $z2, $z3;
        java.lang.Class $r3, $r4;
        java.lang.Comparable[] $r5, $r6;
        java.lang.Object[] $r7, $r8;

        r0 := @this: com.opengamma.analytics.math.curve.ObjectsCurve;

        r1 := @parameter0: java.lang.Object;

        if r0 != r1 goto label1;

        return 1;

     label1:
        $z0 = specialinvoke r0.<com.opengamma.analytics.math.curve.Curve: boolean equals(java.lang.Object)>(r1);

        if $z0 != 0 goto label2;

        return 0;

     label2:
        $r3 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r4 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        if $r3 == $r4 goto label3;

        return 0;

     label3:
        r2 = (com.opengamma.analytics.math.curve.ObjectsCurve) r1;

        $r6 = r0.<com.opengamma.analytics.math.curve.ObjectsCurve: java.lang.Comparable[] _xData>;

        $r5 = r2.<com.opengamma.analytics.math.curve.ObjectsCurve: java.lang.Comparable[] _xData>;

        $z1 = staticinvoke <org.apache.commons.lang.ArrayUtils: boolean isEquals(java.lang.Object,java.lang.Object)>($r6, $r5);

        if $z1 == 0 goto label4;

        $r8 = r0.<com.opengamma.analytics.math.curve.ObjectsCurve: java.lang.Object[] _yData>;

        $r7 = r2.<com.opengamma.analytics.math.curve.ObjectsCurve: java.lang.Object[] _yData>;

        $z2 = staticinvoke <org.apache.commons.lang.ArrayUtils: boolean isEquals(java.lang.Object,java.lang.Object)>($r8, $r7);

        if $z2 == 0 goto label4;

        $z3 = 1;

        goto label5;

     label4:
        $z3 = 0;

     label5:
        return $z3;
    }

    public int hashCode()
    {
        com.opengamma.analytics.math.curve.ObjectsCurve r0;
        java.lang.Comparable[] $r1;
        int $i1, $i2, $i3, $i4, i5, i6, i7;
        java.lang.Object[] $r2;

        r0 := @this: com.opengamma.analytics.math.curve.ObjectsCurve;

        i5 = specialinvoke r0.<com.opengamma.analytics.math.curve.Curve: int hashCode()>();

        $i1 = 31 * i5;

        $r1 = r0.<com.opengamma.analytics.math.curve.ObjectsCurve: java.lang.Comparable[] _xData>;

        $i2 = staticinvoke <java.util.Arrays: int hashCode(java.lang.Object[])>($r1);

        i6 = $i1 + $i2;

        $i3 = 31 * i6;

        $r2 = r0.<com.opengamma.analytics.math.curve.ObjectsCurve: java.lang.Object[] _yData>;

        $i4 = staticinvoke <java.util.Arrays: int hashCode(java.lang.Object[])>($r2);

        i7 = $i3 + $i4;

        return i7;
    }

    public static com.opengamma.analytics.math.curve.ObjectsCurve$Meta meta()
    {
        com.opengamma.analytics.math.curve.ObjectsCurve$Meta $r0;

        $r0 = <com.opengamma.analytics.math.curve.ObjectsCurve$Meta: com.opengamma.analytics.math.curve.ObjectsCurve$Meta INSTANCE>;

        return $r0;
    }

    public static com.opengamma.analytics.math.curve.ObjectsCurve$Meta metaObjectsCurve(java.lang.Class, java.lang.Class)
    {
        java.lang.Class r0, r1;
        com.opengamma.analytics.math.curve.ObjectsCurve$Meta $r2;

        r0 := @parameter0: java.lang.Class;

        r1 := @parameter1: java.lang.Class;

        $r2 = <com.opengamma.analytics.math.curve.ObjectsCurve$Meta: com.opengamma.analytics.math.curve.ObjectsCurve$Meta INSTANCE>;

        return $r2;
    }

    public com.opengamma.analytics.math.curve.ObjectsCurve$Meta metaBean()
    {
        com.opengamma.analytics.math.curve.ObjectsCurve r0;
        com.opengamma.analytics.math.curve.ObjectsCurve$Meta $r1;

        r0 := @this: com.opengamma.analytics.math.curve.ObjectsCurve;

        $r1 = <com.opengamma.analytics.math.curve.ObjectsCurve$Meta: com.opengamma.analytics.math.curve.ObjectsCurve$Meta INSTANCE>;

        return $r1;
    }

    private int getN()
    {
        com.opengamma.analytics.math.curve.ObjectsCurve r0;
        int $i0;

        r0 := @this: com.opengamma.analytics.math.curve.ObjectsCurve;

        $i0 = r0.<com.opengamma.analytics.math.curve.ObjectsCurve: int _n>;

        return $i0;
    }

    private void setN(int)
    {
        com.opengamma.analytics.math.curve.ObjectsCurve r0;
        int i0;

        r0 := @this: com.opengamma.analytics.math.curve.ObjectsCurve;

        i0 := @parameter0: int;

        r0.<com.opengamma.analytics.math.curve.ObjectsCurve: int _n> = i0;

        return;
    }

    public final org.joda.beans.Property n()
    {
        com.opengamma.analytics.math.curve.ObjectsCurve r0;
        com.opengamma.analytics.math.curve.ObjectsCurve$Meta $r1;
        org.joda.beans.MetaProperty $r2;
        org.joda.beans.Property $r3;

        r0 := @this: com.opengamma.analytics.math.curve.ObjectsCurve;

        $r1 = virtualinvoke r0.<com.opengamma.analytics.math.curve.ObjectsCurve: com.opengamma.analytics.math.curve.ObjectsCurve$Meta metaBean()>();

        $r2 = virtualinvoke $r1.<com.opengamma.analytics.math.curve.ObjectsCurve$Meta: org.joda.beans.MetaProperty n()>();

        $r3 = interfaceinvoke $r2.<org.joda.beans.MetaProperty: org.joda.beans.Property createProperty(org.joda.beans.Bean)>(r0);

        return $r3;
    }

    private void setXData(java.lang.Comparable[])
    {
        com.opengamma.analytics.math.curve.ObjectsCurve r0;
        java.lang.Comparable[] r1;

        r0 := @this: com.opengamma.analytics.math.curve.ObjectsCurve;

        r1 := @parameter0: java.lang.Comparable[];

        staticinvoke <org.joda.beans.JodaBeanUtils: void notNull(java.lang.Object,java.lang.String)>(r1, "xData");

        r0.<com.opengamma.analytics.math.curve.ObjectsCurve: java.lang.Comparable[] _xData> = r1;

        return;
    }

    public final org.joda.beans.Property xData()
    {
        com.opengamma.analytics.math.curve.ObjectsCurve r0;
        com.opengamma.analytics.math.curve.ObjectsCurve$Meta $r1;
        org.joda.beans.MetaProperty $r2;
        org.joda.beans.Property $r3;

        r0 := @this: com.opengamma.analytics.math.curve.ObjectsCurve;

        $r1 = virtualinvoke r0.<com.opengamma.analytics.math.curve.ObjectsCurve: com.opengamma.analytics.math.curve.ObjectsCurve$Meta metaBean()>();

        $r2 = virtualinvoke $r1.<com.opengamma.analytics.math.curve.ObjectsCurve$Meta: org.joda.beans.MetaProperty xData()>();

        $r3 = interfaceinvoke $r2.<org.joda.beans.MetaProperty: org.joda.beans.Property createProperty(org.joda.beans.Bean)>(r0);

        return $r3;
    }

    private void setYData(java.lang.Object[])
    {
        com.opengamma.analytics.math.curve.ObjectsCurve r0;
        java.lang.Object[] r1;

        r0 := @this: com.opengamma.analytics.math.curve.ObjectsCurve;

        r1 := @parameter0: java.lang.Object[];

        staticinvoke <org.joda.beans.JodaBeanUtils: void notNull(java.lang.Object,java.lang.String)>(r1, "yData");

        r0.<com.opengamma.analytics.math.curve.ObjectsCurve: java.lang.Object[] _yData> = r1;

        return;
    }

    public final org.joda.beans.Property yData()
    {
        com.opengamma.analytics.math.curve.ObjectsCurve r0;
        com.opengamma.analytics.math.curve.ObjectsCurve$Meta $r1;
        org.joda.beans.MetaProperty $r2;
        org.joda.beans.Property $r3;

        r0 := @this: com.opengamma.analytics.math.curve.ObjectsCurve;

        $r1 = virtualinvoke r0.<com.opengamma.analytics.math.curve.ObjectsCurve: com.opengamma.analytics.math.curve.ObjectsCurve$Meta metaBean()>();

        $r2 = virtualinvoke $r1.<com.opengamma.analytics.math.curve.ObjectsCurve$Meta: org.joda.beans.MetaProperty yData()>();

        $r3 = interfaceinvoke $r2.<org.joda.beans.MetaProperty: org.joda.beans.Property createProperty(org.joda.beans.Bean)>(r0);

        return $r3;
    }

    public java.lang.String toString()
    {
        com.opengamma.analytics.math.curve.ObjectsCurve r0;
        int i0, $i1, $i2, $i3;
        java.lang.StringBuilder $r2;
        java.lang.String $r5;

        r0 := @this: com.opengamma.analytics.math.curve.ObjectsCurve;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(int)>(128);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ObjectsCurve{");

        i0 = virtualinvoke $r2.<java.lang.StringBuilder: int length()>();

        virtualinvoke r0.<com.opengamma.analytics.math.curve.ObjectsCurve: void toString(java.lang.StringBuilder)>($r2);

        $i1 = virtualinvoke $r2.<java.lang.StringBuilder: int length()>();

        if $i1 <= i0 goto label1;

        $i2 = virtualinvoke $r2.<java.lang.StringBuilder: int length()>();

        $i3 = $i2 - 2;

        virtualinvoke $r2.<java.lang.StringBuilder: void setLength(int)>($i3);

     label1:
        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(125);

        $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r5;
    }

    protected void toString(java.lang.StringBuilder)
    {
        com.opengamma.analytics.math.curve.ObjectsCurve r0;
        java.lang.StringBuilder r1, $r2, $r3, $r6, $r7, $r9, $r10, $r13, $r14, $r16, $r17, $r20, $r21;
        int $i0;
        java.lang.Integer $r4;
        java.lang.String $r5, $r12, $r19;
        java.lang.Comparable[] $r11;
        java.lang.Object[] $r18;

        r0 := @this: com.opengamma.analytics.math.curve.ObjectsCurve;

        r1 := @parameter0: java.lang.StringBuilder;

        specialinvoke r0.<com.opengamma.analytics.math.curve.Curve: void toString(java.lang.StringBuilder)>(r1);

        $r2 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("n");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(61);

        $i0 = specialinvoke r0.<com.opengamma.analytics.math.curve.ObjectsCurve: int getN()>();

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r5 = staticinvoke <org.joda.beans.JodaBeanUtils: java.lang.String toString(java.lang.Object)>($r4);

        $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(44);

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

        $r9 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("xData");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(61);

        $r11 = virtualinvoke r0.<com.opengamma.analytics.math.curve.ObjectsCurve: java.lang.Comparable[] getXData()>();

        $r12 = staticinvoke <org.joda.beans.JodaBeanUtils: java.lang.String toString(java.lang.Object)>($r11);

        $r13 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(44);

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

        $r16 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("yData");

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(61);

        $r18 = virtualinvoke r0.<com.opengamma.analytics.math.curve.ObjectsCurve: java.lang.Object[] getYData()>();

        $r19 = staticinvoke <org.joda.beans.JodaBeanUtils: java.lang.String toString(java.lang.Object)>($r18);

        $r20 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r19);

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(44);

        virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

        return;
    }

    public volatile com.opengamma.analytics.math.curve.Curve$Meta metaBean()
    {
        com.opengamma.analytics.math.curve.ObjectsCurve r0;
        com.opengamma.analytics.math.curve.ObjectsCurve$Meta $r1;

        r0 := @this: com.opengamma.analytics.math.curve.ObjectsCurve;

        $r1 = virtualinvoke r0.<com.opengamma.analytics.math.curve.ObjectsCurve: com.opengamma.analytics.math.curve.ObjectsCurve$Meta metaBean()>();

        return $r1;
    }

    public volatile org.joda.beans.MetaBean metaBean()
    {
        com.opengamma.analytics.math.curve.ObjectsCurve r0;
        com.opengamma.analytics.math.curve.ObjectsCurve$Meta $r1;
        org.joda.beans.MetaBean r2;

        r0 := @this: com.opengamma.analytics.math.curve.ObjectsCurve;

        $r1 = virtualinvoke r0.<com.opengamma.analytics.math.curve.ObjectsCurve: com.opengamma.analytics.math.curve.ObjectsCurve$Meta metaBean()>();

        r2 = (org.joda.beans.MetaBean) $r1;

        return r2;
    }

    static int access$000(com.opengamma.analytics.math.curve.ObjectsCurve)
    {
        com.opengamma.analytics.math.curve.ObjectsCurve r0;
        int $i0;

        r0 := @parameter0: com.opengamma.analytics.math.curve.ObjectsCurve;

        $i0 = specialinvoke r0.<com.opengamma.analytics.math.curve.ObjectsCurve: int getN()>();

        return $i0;
    }

    static void access$100(com.opengamma.analytics.math.curve.ObjectsCurve, int)
    {
        com.opengamma.analytics.math.curve.ObjectsCurve r0;
        int i0;

        r0 := @parameter0: com.opengamma.analytics.math.curve.ObjectsCurve;

        i0 := @parameter1: int;

        specialinvoke r0.<com.opengamma.analytics.math.curve.ObjectsCurve: void setN(int)>(i0);

        return;
    }

    static void access$200(com.opengamma.analytics.math.curve.ObjectsCurve, java.lang.Comparable[])
    {
        com.opengamma.analytics.math.curve.ObjectsCurve r0;
        java.lang.Comparable[] r1;

        r0 := @parameter0: com.opengamma.analytics.math.curve.ObjectsCurve;

        r1 := @parameter1: java.lang.Comparable[];

        specialinvoke r0.<com.opengamma.analytics.math.curve.ObjectsCurve: void setXData(java.lang.Comparable[])>(r1);

        return;
    }

    static void access$300(com.opengamma.analytics.math.curve.ObjectsCurve, java.lang.Object[])
    {
        com.opengamma.analytics.math.curve.ObjectsCurve r0;
        java.lang.Object[] r1;

        r0 := @parameter0: com.opengamma.analytics.math.curve.ObjectsCurve;

        r1 := @parameter1: java.lang.Object[];

        specialinvoke r0.<com.opengamma.analytics.math.curve.ObjectsCurve: void setYData(java.lang.Object[])>(r1);

        return;
    }

    static java.lang.Comparable[] access$400(com.opengamma.analytics.math.curve.ObjectsCurve)
    {
        com.opengamma.analytics.math.curve.ObjectsCurve r0;
        java.lang.Comparable[] $r1;

        r0 := @parameter0: com.opengamma.analytics.math.curve.ObjectsCurve;

        $r1 = r0.<com.opengamma.analytics.math.curve.ObjectsCurve: java.lang.Comparable[] _xData>;

        return $r1;
    }

    static java.lang.Object[] access$500(com.opengamma.analytics.math.curve.ObjectsCurve)
    {
        com.opengamma.analytics.math.curve.ObjectsCurve r0;
        java.lang.Object[] $r1;

        r0 := @parameter0: com.opengamma.analytics.math.curve.ObjectsCurve;

        $r1 = r0.<com.opengamma.analytics.math.curve.ObjectsCurve: java.lang.Object[] _yData>;

        return $r1;
    }

    static void <clinit>()
    {
        com.opengamma.analytics.math.curve.ObjectsCurve$Meta $r0;
        org.joda.beans.MetaBean r1;

        $r0 = <com.opengamma.analytics.math.curve.ObjectsCurve$Meta: com.opengamma.analytics.math.curve.ObjectsCurve$Meta INSTANCE>;

        r1 = (org.joda.beans.MetaBean) $r0;

        staticinvoke <org.joda.beans.JodaBeanUtils: void registerMetaBean(org.joda.beans.MetaBean)>(r1);

        return;
    }
}
