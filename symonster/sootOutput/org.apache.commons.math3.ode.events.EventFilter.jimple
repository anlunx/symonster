public class org.apache.commons.math3.ode.events.EventFilter extends java.lang.Object implements org.apache.commons.math3.ode.events.EventHandler
{
    private static final int HISTORY_SIZE;
    private final org.apache.commons.math3.ode.events.EventHandler rawHandler;
    private final org.apache.commons.math3.ode.events.FilterType filter;
    private final org.apache.commons.math3.ode.events.Transformer[] transformers;
    private final double[] updates;
    private boolean forward;
    private double extremeT;

    public void <init>(org.apache.commons.math3.ode.events.EventHandler, org.apache.commons.math3.ode.events.FilterType)
    {
        org.apache.commons.math3.ode.events.EventFilter r0;
        org.apache.commons.math3.ode.events.EventHandler r1;
        org.apache.commons.math3.ode.events.FilterType r2;
        org.apache.commons.math3.ode.events.Transformer[] $r3;
        double[] $r4;

        r0 := @this: org.apache.commons.math3.ode.events.EventFilter;

        r1 := @parameter0: org.apache.commons.math3.ode.events.EventHandler;

        r2 := @parameter1: org.apache.commons.math3.ode.events.FilterType;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.commons.math3.ode.events.EventFilter: org.apache.commons.math3.ode.events.EventHandler rawHandler> = r1;

        r0.<org.apache.commons.math3.ode.events.EventFilter: org.apache.commons.math3.ode.events.FilterType filter> = r2;

        $r3 = newarray (org.apache.commons.math3.ode.events.Transformer)[100];

        r0.<org.apache.commons.math3.ode.events.EventFilter: org.apache.commons.math3.ode.events.Transformer[] transformers> = $r3;

        $r4 = newarray (double)[100];

        r0.<org.apache.commons.math3.ode.events.EventFilter: double[] updates> = $r4;

        return;
    }

    public void init(double, double[], double)
    {
        org.apache.commons.math3.ode.events.EventFilter r0;
        double d0, d1, $d2, $d3;
        double[] r1, $r5;
        org.apache.commons.math3.ode.events.EventHandler $r2;
        byte $b0;
        boolean $z0, $z1;
        org.apache.commons.math3.ode.events.Transformer $r3;
        org.apache.commons.math3.ode.events.Transformer[] $r4;

        r0 := @this: org.apache.commons.math3.ode.events.EventFilter;

        d0 := @parameter0: double;

        r1 := @parameter1: double[];

        d1 := @parameter2: double;

        $r2 = r0.<org.apache.commons.math3.ode.events.EventFilter: org.apache.commons.math3.ode.events.EventHandler rawHandler>;

        interfaceinvoke $r2.<org.apache.commons.math3.ode.events.EventHandler: void init(double,double[],double)>(d0, r1, d1);

        $b0 = d1 cmpl d0;

        if $b0 < 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        r0.<org.apache.commons.math3.ode.events.EventFilter: boolean forward> = $z1;

        $z0 = r0.<org.apache.commons.math3.ode.events.EventFilter: boolean forward>;

        if $z0 == 0 goto label3;

        $d3 = #-Infinity;

        goto label4;

     label3:
        $d3 = #Infinity;

     label4:
        r0.<org.apache.commons.math3.ode.events.EventFilter: double extremeT> = $d3;

        $r4 = r0.<org.apache.commons.math3.ode.events.EventFilter: org.apache.commons.math3.ode.events.Transformer[] transformers>;

        $r3 = <org.apache.commons.math3.ode.events.Transformer: org.apache.commons.math3.ode.events.Transformer UNINITIALIZED>;

        staticinvoke <java.util.Arrays: void fill(java.lang.Object[],java.lang.Object)>($r4, $r3);

        $r5 = r0.<org.apache.commons.math3.ode.events.EventFilter: double[] updates>;

        $d2 = r0.<org.apache.commons.math3.ode.events.EventFilter: double extremeT>;

        staticinvoke <java.util.Arrays: void fill(double[],double)>($r5, $d2);

        return;
    }

    public double g(double, double[])
    {
        org.apache.commons.math3.ode.events.EventFilter r0;
        double d0, d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13;
        double[] r1, $r4, $r5, $r8, $r13, $r14, $r15, $r19, $r24, $r29, $r30, $r33;
        org.apache.commons.math3.ode.events.Transformer r2, $r7, $r10, $r23, $r26, r35, r36, r37;
        org.apache.commons.math3.ode.events.EventHandler $r3;
        boolean $z0, $z1, $z2;
        byte $b0, $b5, $b11, $b12;
        int $i1, $i2, $i3, $i4, $i6, $i7, $i8, $i9, $i10, i13, i14, i15;
        org.apache.commons.math3.ode.events.Transformer[] $r6, $r9, $r11, $r16, $r17, $r18, $r20, $r21, $r22, $r25, $r27, $r31, $r32, $r34;
        org.apache.commons.math3.ode.events.FilterType $r12, $r28;

        r0 := @this: org.apache.commons.math3.ode.events.EventFilter;

        d0 := @parameter0: double;

        r1 := @parameter1: double[];

        $r3 = r0.<org.apache.commons.math3.ode.events.EventFilter: org.apache.commons.math3.ode.events.EventHandler rawHandler>;

        d1 = interfaceinvoke $r3.<org.apache.commons.math3.ode.events.EventHandler: double g(double,double[])>(d0, r1);

        $z0 = r0.<org.apache.commons.math3.ode.events.EventFilter: boolean forward>;

        if $z0 == 0 goto label06;

        $r21 = r0.<org.apache.commons.math3.ode.events.EventFilter: org.apache.commons.math3.ode.events.Transformer[] transformers>;

        $i10 = lengthof $r21;

        i13 = $i10 - 1;

        $d8 = r0.<org.apache.commons.math3.ode.events.EventFilter: double extremeT>;

        $b11 = $d8 cmpg d0;

        if $b11 >= 0 goto label02;

        $r27 = r0.<org.apache.commons.math3.ode.events.EventFilter: org.apache.commons.math3.ode.events.Transformer[] transformers>;

        r35 = $r27[i13];

        $r28 = r0.<org.apache.commons.math3.ode.events.EventFilter: org.apache.commons.math3.ode.events.FilterType filter>;

        $z2 = r0.<org.apache.commons.math3.ode.events.EventFilter: boolean forward>;

        r2 = virtualinvoke $r28.<org.apache.commons.math3.ode.events.FilterType: org.apache.commons.math3.ode.events.Transformer selectTransformer(org.apache.commons.math3.ode.events.Transformer,double,boolean)>(r35, d1, $z2);

        if r2 == r35 goto label01;

        $r30 = r0.<org.apache.commons.math3.ode.events.EventFilter: double[] updates>;

        $r29 = r0.<org.apache.commons.math3.ode.events.EventFilter: double[] updates>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r30, 1, $r29, 0, i13);

        $r32 = r0.<org.apache.commons.math3.ode.events.EventFilter: org.apache.commons.math3.ode.events.Transformer[] transformers>;

        $r31 = r0.<org.apache.commons.math3.ode.events.EventFilter: org.apache.commons.math3.ode.events.Transformer[] transformers>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r32, 1, $r31, 0, i13);

        $r33 = r0.<org.apache.commons.math3.ode.events.EventFilter: double[] updates>;

        $d13 = r0.<org.apache.commons.math3.ode.events.EventFilter: double extremeT>;

        $r33[i13] = $d13;

        $r34 = r0.<org.apache.commons.math3.ode.events.EventFilter: org.apache.commons.math3.ode.events.Transformer[] transformers>;

        $r34[i13] = r2;

     label01:
        r0.<org.apache.commons.math3.ode.events.EventFilter: double extremeT> = d0;

        $d12 = virtualinvoke r2.<org.apache.commons.math3.ode.events.Transformer: double transformed(double)>(d1);

        return $d12;

     label02:
        i14 = i13;

     label03:
        if i14 <= 0 goto label05;

        $r24 = r0.<org.apache.commons.math3.ode.events.EventFilter: double[] updates>;

        $d10 = $r24[i14];

        $b12 = $d10 cmpg d0;

        if $b12 > 0 goto label04;

        $r25 = r0.<org.apache.commons.math3.ode.events.EventFilter: org.apache.commons.math3.ode.events.Transformer[] transformers>;

        $r26 = $r25[i14];

        $d11 = virtualinvoke $r26.<org.apache.commons.math3.ode.events.Transformer: double transformed(double)>(d1);

        return $d11;

     label04:
        i14 = i14 + -1;

        goto label03;

     label05:
        $r22 = r0.<org.apache.commons.math3.ode.events.EventFilter: org.apache.commons.math3.ode.events.Transformer[] transformers>;

        $r23 = $r22[0];

        $d9 = virtualinvoke $r23.<org.apache.commons.math3.ode.events.Transformer: double transformed(double)>(d1);

        return $d9;

     label06:
        $d2 = r0.<org.apache.commons.math3.ode.events.EventFilter: double extremeT>;

        $b0 = d0 cmpg $d2;

        if $b0 >= 0 goto label08;

        $r11 = r0.<org.apache.commons.math3.ode.events.EventFilter: org.apache.commons.math3.ode.events.Transformer[] transformers>;

        r36 = $r11[0];

        $r12 = r0.<org.apache.commons.math3.ode.events.EventFilter: org.apache.commons.math3.ode.events.FilterType filter>;

        $z1 = r0.<org.apache.commons.math3.ode.events.EventFilter: boolean forward>;

        r37 = virtualinvoke $r12.<org.apache.commons.math3.ode.events.FilterType: org.apache.commons.math3.ode.events.Transformer selectTransformer(org.apache.commons.math3.ode.events.Transformer,double,boolean)>(r36, d1, $z1);

        if r37 == r36 goto label07;

        $r15 = r0.<org.apache.commons.math3.ode.events.EventFilter: double[] updates>;

        $r14 = r0.<org.apache.commons.math3.ode.events.EventFilter: double[] updates>;

        $r13 = r0.<org.apache.commons.math3.ode.events.EventFilter: double[] updates>;

        $i6 = lengthof $r13;

        $i7 = $i6 - 1;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r15, 0, $r14, 1, $i7);

        $r18 = r0.<org.apache.commons.math3.ode.events.EventFilter: org.apache.commons.math3.ode.events.Transformer[] transformers>;

        $r17 = r0.<org.apache.commons.math3.ode.events.EventFilter: org.apache.commons.math3.ode.events.Transformer[] transformers>;

        $r16 = r0.<org.apache.commons.math3.ode.events.EventFilter: org.apache.commons.math3.ode.events.Transformer[] transformers>;

        $i8 = lengthof $r16;

        $i9 = $i8 - 1;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r18, 0, $r17, 1, $i9);

        $r19 = r0.<org.apache.commons.math3.ode.events.EventFilter: double[] updates>;

        $d7 = r0.<org.apache.commons.math3.ode.events.EventFilter: double extremeT>;

        $r19[0] = $d7;

        $r20 = r0.<org.apache.commons.math3.ode.events.EventFilter: org.apache.commons.math3.ode.events.Transformer[] transformers>;

        $r20[0] = r37;

     label07:
        r0.<org.apache.commons.math3.ode.events.EventFilter: double extremeT> = d0;

        $d6 = virtualinvoke r37.<org.apache.commons.math3.ode.events.Transformer: double transformed(double)>(d1);

        return $d6;

     label08:
        i15 = 0;

     label09:
        $r4 = r0.<org.apache.commons.math3.ode.events.EventFilter: double[] updates>;

        $i1 = lengthof $r4;

        $i2 = $i1 - 1;

        if i15 >= $i2 goto label11;

        $r8 = r0.<org.apache.commons.math3.ode.events.EventFilter: double[] updates>;

        $d4 = $r8[i15];

        $b5 = d0 cmpg $d4;

        if $b5 > 0 goto label10;

        $r9 = r0.<org.apache.commons.math3.ode.events.EventFilter: org.apache.commons.math3.ode.events.Transformer[] transformers>;

        $r10 = $r9[i15];

        $d5 = virtualinvoke $r10.<org.apache.commons.math3.ode.events.Transformer: double transformed(double)>(d1);

        return $d5;

     label10:
        i15 = i15 + 1;

        goto label09;

     label11:
        $r6 = r0.<org.apache.commons.math3.ode.events.EventFilter: org.apache.commons.math3.ode.events.Transformer[] transformers>;

        $r5 = r0.<org.apache.commons.math3.ode.events.EventFilter: double[] updates>;

        $i3 = lengthof $r5;

        $i4 = $i3 - 1;

        $r7 = $r6[$i4];

        $d3 = virtualinvoke $r7.<org.apache.commons.math3.ode.events.Transformer: double transformed(double)>(d1);

        return $d3;
    }

    public org.apache.commons.math3.ode.events.EventHandler$Action eventOccurred(double, double[], boolean)
    {
        org.apache.commons.math3.ode.events.EventFilter r0;
        double d0;
        double[] r1;
        boolean z0, $z1;
        org.apache.commons.math3.ode.events.FilterType $r2;
        org.apache.commons.math3.ode.events.EventHandler $r3;
        org.apache.commons.math3.ode.events.EventHandler$Action $r4;

        r0 := @this: org.apache.commons.math3.ode.events.EventFilter;

        d0 := @parameter0: double;

        r1 := @parameter1: double[];

        z0 := @parameter2: boolean;

        $r3 = r0.<org.apache.commons.math3.ode.events.EventFilter: org.apache.commons.math3.ode.events.EventHandler rawHandler>;

        $r2 = r0.<org.apache.commons.math3.ode.events.EventFilter: org.apache.commons.math3.ode.events.FilterType filter>;

        $z1 = virtualinvoke $r2.<org.apache.commons.math3.ode.events.FilterType: boolean getTriggeredIncreasing()>();

        $r4 = interfaceinvoke $r3.<org.apache.commons.math3.ode.events.EventHandler: org.apache.commons.math3.ode.events.EventHandler$Action eventOccurred(double,double[],boolean)>(d0, r1, $z1);

        return $r4;
    }

    public void resetState(double, double[])
    {
        org.apache.commons.math3.ode.events.EventFilter r0;
        double d0;
        double[] r1;
        org.apache.commons.math3.ode.events.EventHandler $r2;

        r0 := @this: org.apache.commons.math3.ode.events.EventFilter;

        d0 := @parameter0: double;

        r1 := @parameter1: double[];

        $r2 = r0.<org.apache.commons.math3.ode.events.EventFilter: org.apache.commons.math3.ode.events.EventHandler rawHandler>;

        interfaceinvoke $r2.<org.apache.commons.math3.ode.events.EventHandler: void resetState(double,double[])>(d0, r1);

        return;
    }

    public static void <clinit>()
    {
        <org.apache.commons.math3.ode.events.EventFilter: int HISTORY_SIZE> = 100;

        return;
    }
}
