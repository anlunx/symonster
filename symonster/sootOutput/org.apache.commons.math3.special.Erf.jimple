public class org.apache.commons.math3.special.Erf extends java.lang.Object
{
    private static final double X_CRIT;

    private void <init>()
    {
        org.apache.commons.math3.special.Erf r0;

        r0 := @this: org.apache.commons.math3.special.Erf;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static double erf(double)
    {
        double d0, d1, $d2, $d3, $d4, $d5;
        byte $b0, $b1, $b2;

        d0 := @parameter0: double;

        $d2 = staticinvoke <org.apache.commons.math3.util.FastMath: double abs(double)>(d0);

        $b0 = $d2 cmpl 40.0;

        if $b0 <= 0 goto label3;

        $b2 = d0 cmpl 0.0;

        if $b2 <= 0 goto label1;

        $d4 = 1.0;

        goto label2;

     label1:
        $d4 = -1.0;

     label2:
        return $d4;

     label3:
        $d3 = d0 * d0;

        d1 = staticinvoke <org.apache.commons.math3.special.Gamma: double regularizedGammaP(double,double,double,int)>(0.5, $d3, 1.0E-15, 10000);

        $b1 = d0 cmpg 0.0;

        if $b1 >= 0 goto label4;

        $d5 = neg d1;

        goto label5;

     label4:
        $d5 = d1;

     label5:
        return $d5;
    }

    public static double erfc(double)
    {
        double d0, d1, $d2, $d3, $d4, $d5;
        byte $b0, $b1, $b2;

        d0 := @parameter0: double;

        $d2 = staticinvoke <org.apache.commons.math3.util.FastMath: double abs(double)>(d0);

        $b0 = $d2 cmpl 40.0;

        if $b0 <= 0 goto label3;

        $b2 = d0 cmpl 0.0;

        if $b2 <= 0 goto label1;

        $d4 = 0.0;

        goto label2;

     label1:
        $d4 = 2.0;

     label2:
        return $d4;

     label3:
        $d3 = d0 * d0;

        d1 = staticinvoke <org.apache.commons.math3.special.Gamma: double regularizedGammaQ(double,double,double,int)>(0.5, $d3, 1.0E-15, 10000);

        $b1 = d0 cmpg 0.0;

        if $b1 >= 0 goto label4;

        $d5 = 2.0 - d1;

        goto label5;

     label4:
        $d5 = d1;

     label5:
        return $d5;
    }

    public static double erf(double, double)
    {
        double d0, d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14;
        byte $b0, $b1, $b2, $b3, $b4;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        $b0 = d0 cmpl d1;

        if $b0 <= 0 goto label1;

        $d12 = staticinvoke <org.apache.commons.math3.special.Erf: double erf(double,double)>(d1, d0);

        $d13 = neg $d12;

        return $d13;

     label1:
        $b1 = d0 cmpg -0.4769362762044697;

        if $b1 >= 0 goto label3;

        $b4 = d1 cmpg 0.0;

        if $b4 >= 0 goto label2;

        $d8 = neg d1;

        $d9 = staticinvoke <org.apache.commons.math3.special.Erf: double erfc(double)>($d8);

        $d10 = neg d0;

        $d11 = staticinvoke <org.apache.commons.math3.special.Erf: double erfc(double)>($d10);

        $d14 = $d9 - $d11;

        goto label5;

     label2:
        $d6 = staticinvoke <org.apache.commons.math3.special.Erf: double erf(double)>(d1);

        $d7 = staticinvoke <org.apache.commons.math3.special.Erf: double erf(double)>(d0);

        $d14 = $d6 - $d7;

        goto label5;

     label3:
        $b2 = d1 cmpl 0.4769362762044697;

        if $b2 <= 0 goto label4;

        $b3 = d0 cmpl 0.0;

        if $b3 <= 0 goto label4;

        $d4 = staticinvoke <org.apache.commons.math3.special.Erf: double erfc(double)>(d0);

        $d5 = staticinvoke <org.apache.commons.math3.special.Erf: double erfc(double)>(d1);

        $d14 = $d4 - $d5;

        goto label5;

     label4:
        $d2 = staticinvoke <org.apache.commons.math3.special.Erf: double erf(double)>(d1);

        $d3 = staticinvoke <org.apache.commons.math3.special.Erf: double erf(double)>(d0);

        $d14 = $d2 - $d3;

     label5:
        return $d14;
    }

    public static double erfInv(double)
    {
        double d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21, $d22, $d23, $d24, $d25, $d26, $d27, $d28, $d29, $d30, $d31, $d32, $d33, $d34, $d35, $d36, $d37, $d38, $d39, $d40, $d41, $d42, $d43, $d44, $d45, $d46, $d47, $d48, $d49, $d50, $d51, $d52, $d53, $d54, $d55, $d56, $d57, $d58, $d59, $d60, $d61, $d62, d63, d64, d66, d67, d68, d69, d70, d71, d72, d73, d74, d75, d76, d77, d78, d79, d80, d81, d82, d83, d84, d85, d86, d87, d88, d90, d91, d92, d93, d94, d95, d96, d97, d98, d99, d100, d101, d102, d103, d104, d105, d106, d107, d109, d110, d111, d112, d113, d114, d115, d116, d117, d118, d119, d120, d121, d122, d123, $d124;
        byte $b0, $b1;
        boolean $z0;

        d0 := @parameter0: double;

        $d2 = 1.0 - d0;

        $d1 = 1.0 + d0;

        $d3 = $d2 * $d1;

        $d4 = staticinvoke <org.apache.commons.math3.util.FastMath: double log(double)>($d3);

        d63 = neg $d4;

        $b0 = d63 cmpg 6.25;

        if $b0 >= 0 goto label1;

        d64 = d63 - 3.125;

        $d41 = -3.64441206401782E-21 * d64;

        d66 = -1.6850591381820166E-19 + $d41;

        $d42 = d66 * d64;

        d67 = 1.28584807152564E-18 + $d42;

        $d43 = d67 * d64;

        d68 = 1.1157877678025181E-17 + $d43;

        $d44 = d68 * d64;

        d69 = -1.333171662854621E-16 + $d44;

        $d45 = d69 * d64;

        d70 = 2.0972767875968562E-17 + $d45;

        $d46 = d70 * d64;

        d71 = 6.637638134358324E-15 + $d46;

        $d47 = d71 * d64;

        d72 = -4.054566272975207E-14 + $d47;

        $d48 = d72 * d64;

        d73 = -8.151934197605472E-14 + $d48;

        $d49 = d73 * d64;

        d74 = 2.6335093153082323E-12 + $d49;

        $d50 = d74 * d64;

        d75 = -1.2975133253453532E-11 + $d50;

        $d51 = d75 * d64;

        d76 = -5.415412054294628E-11 + $d51;

        $d52 = d76 * d64;

        d77 = 1.0512122733215323E-9 + $d52;

        $d53 = d77 * d64;

        d78 = -4.112633980346984E-9 + $d53;

        $d54 = d78 * d64;

        d79 = -2.9070369957882005E-8 + $d54;

        $d55 = d79 * d64;

        d80 = 4.2347877827932404E-7 + $d55;

        $d56 = d80 * d64;

        d81 = -1.3654692000834679E-6 + $d56;

        $d57 = d81 * d64;

        d82 = -1.3882523362786469E-5 + $d57;

        $d58 = d82 * d64;

        d83 = 1.8673420803405714E-4 + $d58;

        $d59 = d83 * d64;

        d84 = -7.40702534166267E-4 + $d59;

        $d60 = d84 * d64;

        d85 = -0.006033670871430149 + $d60;

        $d61 = d85 * d64;

        d86 = 0.24015818242558962 + $d61;

        $d62 = d86 * d64;

        d87 = 1.6536545626831027 + $d62;

        goto label4;

     label1:
        $b1 = d63 cmpg 16.0;

        if $b1 >= 0 goto label2;

        $d22 = staticinvoke <org.apache.commons.math3.util.FastMath: double sqrt(double)>(d63);

        d88 = $d22 - 3.25;

        $d23 = 2.2137376921775787E-9 * d88;

        d90 = 9.075656193888539E-8 + $d23;

        $d24 = d90 * d88;

        d91 = -2.7517406297064545E-7 + $d24;

        $d25 = d91 * d88;

        d92 = 1.8239629214389228E-8 + $d25;

        $d26 = d92 * d88;

        d93 = 1.5027403968909828E-6 + $d26;

        $d27 = d93 * d88;

        d94 = -4.013867526981546E-6 + $d27;

        $d28 = d94 * d88;

        d95 = 2.9234449089955446E-6 + $d28;

        $d29 = d95 * d88;

        d96 = 1.2475304481671779E-5 + $d29;

        $d30 = d96 * d88;

        d97 = -4.7318229009055734E-5 + $d30;

        $d31 = d97 * d88;

        d98 = 6.828485145957318E-5 + $d31;

        $d32 = d98 * d88;

        d99 = 2.4031110387097894E-5 + $d32;

        $d33 = d99 * d88;

        d100 = -3.550375203628475E-4 + $d33;

        $d34 = d100 * d88;

        d101 = 9.532893797373805E-4 + $d34;

        $d35 = d101 * d88;

        d102 = -0.0016882755560235047 + $d35;

        $d36 = d102 * d88;

        d103 = 0.002491442096107851 + $d36;

        $d37 = d103 * d88;

        d104 = -0.003751208507569241 + $d37;

        $d38 = d104 * d88;

        d105 = 0.005370914553590064 + $d38;

        $d39 = d105 * d88;

        d106 = 1.0052589676941592 + $d39;

        $d40 = d106 * d88;

        d87 = 3.0838856104922208 + $d40;

        goto label4;

     label2:
        $z0 = staticinvoke <java.lang.Double: boolean isInfinite(double)>(d63);

        if $z0 != 0 goto label3;

        $d5 = staticinvoke <org.apache.commons.math3.util.FastMath: double sqrt(double)>(d63);

        d107 = $d5 - 5.0;

        $d6 = -2.7109920616438573E-11 * d107;

        d109 = -2.555641816996525E-10 + $d6;

        $d7 = d109 * d107;

        d110 = 1.5076572693500548E-9 + $d7;

        $d8 = d110 * d107;

        d111 = -3.789465440126737E-9 + $d8;

        $d9 = d111 * d107;

        d112 = 7.61570120807834E-9 + $d9;

        $d10 = d112 * d107;

        d113 = -1.496002662714924E-8 + $d10;

        $d11 = d113 * d107;

        d114 = 2.914795345090108E-8 + $d11;

        $d12 = d114 * d107;

        d115 = -6.771199775845234E-8 + $d12;

        $d13 = d115 * d107;

        d116 = 2.2900482228026655E-7 + $d13;

        $d14 = d116 * d107;

        d117 = -9.9298272942317E-7 + $d14;

        $d15 = d117 * d107;

        d118 = 4.526062597223154E-6 + $d15;

        $d16 = d118 * d107;

        d119 = -1.968177810553167E-5 + $d16;

        $d17 = d119 * d107;

        d120 = 7.599527703001776E-5 + $d17;

        $d18 = d120 * d107;

        d121 = -2.1503011930044477E-4 + $d18;

        $d19 = d121 * d107;

        d122 = -1.3871931833623122E-4 + $d19;

        $d20 = d122 * d107;

        d123 = 1.0103004648645344 + $d20;

        $d21 = d123 * d107;

        d87 = 4.849906401408584 + $d21;

        goto label4;

     label3:
        d87 = #Infinity;

     label4:
        $d124 = d87 * d0;

        return $d124;
    }

    public static double erfcInv(double)
    {
        double d0, $d1, $d2;

        d0 := @parameter0: double;

        $d1 = 1.0 - d0;

        $d2 = staticinvoke <org.apache.commons.math3.special.Erf: double erfInv(double)>($d1);

        return $d2;
    }

    public static void <clinit>()
    {
        <org.apache.commons.math3.special.Erf: double X_CRIT> = 0.4769362762044697;

        return;
    }
}
