class com.opengamma.analytics.financial.model.volatility.smile.function.VolatilityFunctionProvider$7 extends com.opengamma.analytics.math.function.Function1D
{
    final int val$n;
    final java.util.List val$funcs;
    final com.opengamma.analytics.financial.model.volatility.smile.function.VolatilityFunctionProvider this$0;

    void <init>(com.opengamma.analytics.financial.model.volatility.smile.function.VolatilityFunctionProvider, int, java.util.List)
    {
        com.opengamma.analytics.financial.model.volatility.smile.function.VolatilityFunctionProvider$7 r0;
        com.opengamma.analytics.financial.model.volatility.smile.function.VolatilityFunctionProvider r1;
        int i0;
        java.util.List r2;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.smile.function.VolatilityFunctionProvider$7;

        r1 := @parameter0: com.opengamma.analytics.financial.model.volatility.smile.function.VolatilityFunctionProvider;

        i0 := @parameter1: int;

        r2 := @parameter2: java.util.List;

        r0.<com.opengamma.analytics.financial.model.volatility.smile.function.VolatilityFunctionProvider$7: com.opengamma.analytics.financial.model.volatility.smile.function.VolatilityFunctionProvider this$0> = r1;

        r0.<com.opengamma.analytics.financial.model.volatility.smile.function.VolatilityFunctionProvider$7: int val$n> = i0;

        r0.<com.opengamma.analytics.financial.model.volatility.smile.function.VolatilityFunctionProvider$7: java.util.List val$funcs> = r2;

        specialinvoke r0.<com.opengamma.analytics.math.function.Function1D: void <init>()>();

        return;
    }

    public double[][] evaluate(com.opengamma.analytics.financial.model.volatility.smile.function.SmileModelData)
    {
        com.opengamma.analytics.financial.model.volatility.smile.function.VolatilityFunctionProvider$7 r0;
        com.opengamma.analytics.financial.model.volatility.smile.function.SmileModelData r1;
        double[][] r2;
        int $i0, $i1, i2;
        java.util.List $r3;
        java.lang.Object $r4, $r6;
        com.opengamma.analytics.math.function.Function1D $r5;
        double[] $r7;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.smile.function.VolatilityFunctionProvider$7;

        r1 := @parameter0: com.opengamma.analytics.financial.model.volatility.smile.function.SmileModelData;

        $i0 = r0.<com.opengamma.analytics.financial.model.volatility.smile.function.VolatilityFunctionProvider$7: int val$n>;

        r2 = newarray (double[])[$i0];

        i2 = 0;

     label1:
        $i1 = r0.<com.opengamma.analytics.financial.model.volatility.smile.function.VolatilityFunctionProvider$7: int val$n>;

        if i2 >= $i1 goto label2;

        $r3 = r0.<com.opengamma.analytics.financial.model.volatility.smile.function.VolatilityFunctionProvider$7: java.util.List val$funcs>;

        $r4 = interfaceinvoke $r3.<java.util.List: java.lang.Object get(int)>(i2);

        $r5 = (com.opengamma.analytics.math.function.Function1D) $r4;

        $r6 = virtualinvoke $r5.<com.opengamma.analytics.math.function.Function1D: java.lang.Object evaluate(java.lang.Object)>(r1);

        $r7 = (double[]) $r6;

        r2[i2] = $r7;

        i2 = i2 + 1;

        goto label1;

     label2:
        return r2;
    }

    public volatile java.lang.Object evaluate(java.lang.Object)
    {
        com.opengamma.analytics.financial.model.volatility.smile.function.VolatilityFunctionProvider$7 r0;
        java.lang.Object r1;
        com.opengamma.analytics.financial.model.volatility.smile.function.SmileModelData $r2;
        double[][] $r3;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.smile.function.VolatilityFunctionProvider$7;

        r1 := @parameter0: java.lang.Object;

        $r2 = (com.opengamma.analytics.financial.model.volatility.smile.function.SmileModelData) r1;

        $r3 = virtualinvoke r0.<com.opengamma.analytics.financial.model.volatility.smile.function.VolatilityFunctionProvider$7: double[][] evaluate(com.opengamma.analytics.financial.model.volatility.smile.function.SmileModelData)>($r2);

        return $r3;
    }
}
