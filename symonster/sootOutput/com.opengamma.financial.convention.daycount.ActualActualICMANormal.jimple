public class com.opengamma.financial.convention.daycount.ActualActualICMANormal extends com.opengamma.financial.convention.daycount.ActualTypeDayCount
{
    private static final long serialVersionUID;

    public void <init>()
    {
        com.opengamma.financial.convention.daycount.ActualActualICMANormal r0;

        r0 := @this: com.opengamma.financial.convention.daycount.ActualActualICMANormal;

        specialinvoke r0.<com.opengamma.financial.convention.daycount.ActualTypeDayCount: void <init>()>();

        return;
    }

    public double getDayCountFraction(org.threeten.bp.LocalDate, org.threeten.bp.LocalDate)
    {
        com.opengamma.financial.convention.daycount.ActualActualICMANormal r0;
        org.threeten.bp.LocalDate r1, r2;
        org.apache.commons.lang.NotImplementedException $r3;

        r0 := @this: com.opengamma.financial.convention.daycount.ActualActualICMANormal;

        r1 := @parameter0: org.threeten.bp.LocalDate;

        r2 := @parameter1: org.threeten.bp.LocalDate;

        $r3 = new org.apache.commons.lang.NotImplementedException;

        specialinvoke $r3.<org.apache.commons.lang.NotImplementedException: void <init>(java.lang.String)>("Cannot get daycount fraction; need information about the coupon and payment frequency");

        throw $r3;
    }

    public double getAccruedInterest(org.threeten.bp.LocalDate, org.threeten.bp.LocalDate, org.threeten.bp.LocalDate, double, double)
    {
        com.opengamma.financial.convention.daycount.ActualActualICMANormal r0;
        org.threeten.bp.LocalDate r1, r2, r3;
        double d0, d1, $d2;
        com.opengamma.financial.convention.StubType $r4;

        r0 := @this: com.opengamma.financial.convention.daycount.ActualActualICMANormal;

        r1 := @parameter0: org.threeten.bp.LocalDate;

        r2 := @parameter1: org.threeten.bp.LocalDate;

        r3 := @parameter2: org.threeten.bp.LocalDate;

        d0 := @parameter3: double;

        d1 := @parameter4: double;

        $r4 = <com.opengamma.financial.convention.StubType: com.opengamma.financial.convention.StubType NONE>;

        $d2 = virtualinvoke r0.<com.opengamma.financial.convention.daycount.ActualActualICMANormal: double getAccruedInterest(org.threeten.bp.LocalDate,org.threeten.bp.LocalDate,org.threeten.bp.LocalDate,double,double,com.opengamma.financial.convention.StubType)>(r1, r2, r3, d0, d1, $r4);

        return $d2;
    }

    public double getAccruedInterest(org.threeten.bp.ZonedDateTime, org.threeten.bp.ZonedDateTime, org.threeten.bp.ZonedDateTime, double, double, com.opengamma.financial.convention.StubType)
    {
        com.opengamma.financial.convention.daycount.ActualActualICMANormal r0;
        org.threeten.bp.ZonedDateTime r1, r2, r3;
        double d0, d1, $d2;
        com.opengamma.financial.convention.StubType r4;
        org.threeten.bp.LocalDate $r5, $r6, $r7;

        r0 := @this: com.opengamma.financial.convention.daycount.ActualActualICMANormal;

        r1 := @parameter0: org.threeten.bp.ZonedDateTime;

        r2 := @parameter1: org.threeten.bp.ZonedDateTime;

        r3 := @parameter2: org.threeten.bp.ZonedDateTime;

        d0 := @parameter3: double;

        d1 := @parameter4: double;

        r4 := @parameter5: com.opengamma.financial.convention.StubType;

        $r5 = virtualinvoke r1.<org.threeten.bp.ZonedDateTime: org.threeten.bp.LocalDate toLocalDate()>();

        $r6 = virtualinvoke r2.<org.threeten.bp.ZonedDateTime: org.threeten.bp.LocalDate toLocalDate()>();

        $r7 = virtualinvoke r3.<org.threeten.bp.ZonedDateTime: org.threeten.bp.LocalDate toLocalDate()>();

        $d2 = virtualinvoke r0.<com.opengamma.financial.convention.daycount.ActualActualICMANormal: double getAccruedInterest(org.threeten.bp.LocalDate,org.threeten.bp.LocalDate,org.threeten.bp.LocalDate,double,double,com.opengamma.financial.convention.StubType)>($r5, $r6, $r7, d0, d1, r4);

        return $d2;
    }

    public double getAccruedInterest(org.threeten.bp.LocalDate, org.threeten.bp.LocalDate, org.threeten.bp.LocalDate, double, double, com.opengamma.financial.convention.StubType)
    {
        com.opengamma.financial.convention.daycount.ActualActualICMANormal r0;
        org.threeten.bp.LocalDate r1, r2, r3, $r9, $r11, $r14, $r16, r24, r25;
        double d0, d1, d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21, $d22, $d23, $d24, $d25, $d26, $d27, $d28, $d29, $d30, $d31, $d32, $d33, $d34, $d35, $d36, $d37, d38;
        com.opengamma.financial.convention.StubType r4;
        long l0, l1, l2, $l6, $l8, $l10, $l11, $l12, $l14, $l15, $l16, $l18, $l19, l20, l21, l22, l23, l24, l25, l26, l28, l29, l30, l31, l32, l33, l34, l35;
        int i3, $i4, $i5, $i7, $i13;
        org.threeten.bp.temporal.TemporalField $r5, $r6, $r7, $r10, $r12, $r13, $r15, $r17, $r18;
        int[] $r8;
        byte $b9, $b17;
        java.lang.IllegalArgumentException $r19;
        java.lang.StringBuilder $r20, $r21, $r22;
        java.lang.String $r23;

        r0 := @this: com.opengamma.financial.convention.daycount.ActualActualICMANormal;

        r1 := @parameter0: org.threeten.bp.LocalDate;

        r2 := @parameter1: org.threeten.bp.LocalDate;

        r3 := @parameter2: org.threeten.bp.LocalDate;

        d0 := @parameter3: double;

        d1 := @parameter4: double;

        r4 := @parameter5: com.opengamma.financial.convention.StubType;

        virtualinvoke r0.<com.opengamma.financial.convention.daycount.ActualActualICMANormal: void testDates(org.threeten.bp.LocalDate,org.threeten.bp.LocalDate,org.threeten.bp.LocalDate)>(r1, r2, r3);

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object,java.lang.String)>(r4, "stub type");

        $r5 = <org.threeten.bp.temporal.JulianFields: org.threeten.bp.temporal.TemporalField MODIFIED_JULIAN_DAY>;

        l0 = virtualinvoke r1.<org.threeten.bp.LocalDate: long getLong(org.threeten.bp.temporal.TemporalField)>($r5);

        $r6 = <org.threeten.bp.temporal.JulianFields: org.threeten.bp.temporal.TemporalField MODIFIED_JULIAN_DAY>;

        l1 = virtualinvoke r3.<org.threeten.bp.LocalDate: long getLong(org.threeten.bp.temporal.TemporalField)>($r6);

        $r7 = <org.threeten.bp.temporal.JulianFields: org.threeten.bp.temporal.TemporalField MODIFIED_JULIAN_DAY>;

        l2 = virtualinvoke r2.<org.threeten.bp.LocalDate: long getLong(org.threeten.bp.temporal.TemporalField)>($r7);

        $d3 = 12.0 / d1;

        i3 = (int) $d3;

        $r8 = <com.opengamma.financial.convention.daycount.ActualActualICMANormal$1: int[] $SwitchMap$com$opengamma$financial$convention$StubType>;

        $i4 = virtualinvoke r4.<com.opengamma.financial.convention.StubType: int ordinal()>();

        $i5 = $r8[$i4];

        tableswitch($i5)
        {
            case 1: goto label1;
            case 2: goto label2;
            case 3: goto label3;
            case 4: goto label5;
            case 5: goto label6;
            default: goto label8;
        };

     label1:
        l20 = l2 - l0;

        l21 = l1 - l0;

        $d4 = (double) l20;

        $d6 = d0 * $d4;

        $d5 = (double) l21;

        $d7 = $d6 / $d5;

        $d8 = $d7 / d1;

        return $d8;

     label2:
        $l18 = (long) i3;

        r24 = virtualinvoke r3.<org.threeten.bp.LocalDate: org.threeten.bp.LocalDate minusMonths(long)>($l18);

        $r18 = <org.threeten.bp.temporal.JulianFields: org.threeten.bp.temporal.TemporalField MODIFIED_JULIAN_DAY>;

        $l19 = virtualinvoke r24.<org.threeten.bp.LocalDate: long getLong(org.threeten.bp.temporal.TemporalField)>($r18);

        l22 = l1 - $l19;

        l23 = l2 - l0;

        $d33 = (double) l23;

        $d35 = d0 * $d33;

        $d34 = (double) l22;

        $d36 = $d35 / $d34;

        $d37 = $d36 / d1;

        return $d37;

     label3:
        $i13 = i3 * 2;

        $l14 = (long) $i13;

        $r14 = virtualinvoke r3.<org.threeten.bp.LocalDate: org.threeten.bp.LocalDate minusMonths(long)>($l14);

        $r15 = <org.threeten.bp.temporal.JulianFields: org.threeten.bp.temporal.TemporalField MODIFIED_JULIAN_DAY>;

        l24 = virtualinvoke $r14.<org.threeten.bp.LocalDate: long getLong(org.threeten.bp.temporal.TemporalField)>($r15);

        $l15 = (long) i3;

        $r16 = virtualinvoke r3.<org.threeten.bp.LocalDate: org.threeten.bp.LocalDate minusMonths(long)>($l15);

        $r17 = <org.threeten.bp.temporal.JulianFields: org.threeten.bp.temporal.TemporalField MODIFIED_JULIAN_DAY>;

        l25 = virtualinvoke $r16.<org.threeten.bp.LocalDate: long getLong(org.threeten.bp.temporal.TemporalField)>($r17);

        l26 = l25 - l0;

        $l16 = l25 - l24;

        d38 = (double) $l16;

        $b17 = l2 cmp l25;

        if $b17 <= 0 goto label4;

        $d28 = (double) l26;

        $d29 = $d28 / d38;

        $d30 = $d29 + 1.0;

        $d31 = d0 * $d30;

        $d32 = $d31 / d1;

        return $d32;

     label4:
        l28 = l2 - l24;

        $d24 = (double) l28;

        $d25 = $d24 / d38;

        $d26 = d0 * $d25;

        $d27 = $d26 / d1;

        return $d27;

     label5:
        $l11 = (long) i3;

        r25 = virtualinvoke r1.<org.threeten.bp.LocalDate: org.threeten.bp.LocalDate plusMonths(long)>($l11);

        $r13 = <org.threeten.bp.temporal.JulianFields: org.threeten.bp.temporal.TemporalField MODIFIED_JULIAN_DAY>;

        $l12 = virtualinvoke r25.<org.threeten.bp.LocalDate: long getLong(org.threeten.bp.temporal.TemporalField)>($r13);

        l29 = $l12 - l0;

        l30 = l2 - l0;

        $d19 = (double) l30;

        $d21 = d0 * $d19;

        $d20 = (double) l29;

        $d22 = $d21 / $d20;

        $d23 = $d22 / d1;

        return $d23;

     label6:
        $l6 = (long) i3;

        $r9 = virtualinvoke r1.<org.threeten.bp.LocalDate: org.threeten.bp.LocalDate plusMonths(long)>($l6);

        $r10 = <org.threeten.bp.temporal.JulianFields: org.threeten.bp.temporal.TemporalField MODIFIED_JULIAN_DAY>;

        l31 = virtualinvoke $r9.<org.threeten.bp.LocalDate: long getLong(org.threeten.bp.temporal.TemporalField)>($r10);

        $i7 = 2 * i3;

        $l8 = (long) $i7;

        $r11 = virtualinvoke r1.<org.threeten.bp.LocalDate: org.threeten.bp.LocalDate plusMonths(long)>($l8);

        $r12 = <org.threeten.bp.temporal.JulianFields: org.threeten.bp.temporal.TemporalField MODIFIED_JULIAN_DAY>;

        l32 = virtualinvoke $r11.<org.threeten.bp.LocalDate: long getLong(org.threeten.bp.temporal.TemporalField)>($r12);

        l33 = l31 - l0;

        $b9 = l2 cmp l31;

        if $b9 >= 0 goto label7;

        l34 = l2 - l0;

        $d14 = (double) l34;

        $d16 = d0 * $d14;

        $d15 = (double) l33;

        $d17 = $d16 / $d15;

        $d18 = $d17 / d1;

        return $d18;

     label7:
        l35 = l2 - l31;

        $l10 = l32 - l31;

        d2 = (double) $l10;

        $d9 = (double) l35;

        $d10 = $d9 / d2;

        $d11 = 1.0 + $d10;

        $d12 = d0 * $d11;

        $d13 = $d12 / d1;

        return $d13;

     label8:
        $r19 = new java.lang.IllegalArgumentException;

        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot handle stub type ");

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r4);

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r19.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r23);

        throw $r19;
    }

    public java.lang.String getName()
    {
        com.opengamma.financial.convention.daycount.ActualActualICMANormal r0;

        r0 := @this: com.opengamma.financial.convention.daycount.ActualActualICMANormal;

        return "Actual/Actual ICMA Normal";
    }

    public static void <clinit>()
    {
        <com.opengamma.financial.convention.daycount.ActualActualICMANormal: long serialVersionUID> = 1L;

        return;
    }
}
