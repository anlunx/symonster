public class com.opengamma.analytics.math.interpolation.PolynomialsLeastSquaresFitterResult extends java.lang.Object
{
    private double[] _coefficients;
    private com.opengamma.analytics.math.matrix.DoubleMatrix2D _rMatrix;
    private int _dof;
    private double _diffNorm;
    private double[] _meanAndStd;

    public void <init>(double[], com.opengamma.analytics.math.matrix.DoubleMatrix2D, int, double)
    {
        com.opengamma.analytics.math.interpolation.PolynomialsLeastSquaresFitterResult r0;
        double[] r1;
        com.opengamma.analytics.math.matrix.DoubleMatrix2D r2;
        int i0;
        double d0;

        r0 := @this: com.opengamma.analytics.math.interpolation.PolynomialsLeastSquaresFitterResult;

        r1 := @parameter0: double[];

        r2 := @parameter1: com.opengamma.analytics.math.matrix.DoubleMatrix2D;

        i0 := @parameter2: int;

        d0 := @parameter3: double;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.opengamma.analytics.math.interpolation.PolynomialsLeastSquaresFitterResult: double[] _coefficients> = r1;

        r0.<com.opengamma.analytics.math.interpolation.PolynomialsLeastSquaresFitterResult: com.opengamma.analytics.math.matrix.DoubleMatrix2D _rMatrix> = r2;

        r0.<com.opengamma.analytics.math.interpolation.PolynomialsLeastSquaresFitterResult: int _dof> = i0;

        r0.<com.opengamma.analytics.math.interpolation.PolynomialsLeastSquaresFitterResult: double _diffNorm> = d0;

        r0.<com.opengamma.analytics.math.interpolation.PolynomialsLeastSquaresFitterResult: double[] _meanAndStd> = null;

        return;
    }

    public void <init>(double[], com.opengamma.analytics.math.matrix.DoubleMatrix2D, int, double, double[])
    {
        com.opengamma.analytics.math.interpolation.PolynomialsLeastSquaresFitterResult r0;
        double[] r1, r3;
        com.opengamma.analytics.math.matrix.DoubleMatrix2D r2;
        int i0;
        double d0;

        r0 := @this: com.opengamma.analytics.math.interpolation.PolynomialsLeastSquaresFitterResult;

        r1 := @parameter0: double[];

        r2 := @parameter1: com.opengamma.analytics.math.matrix.DoubleMatrix2D;

        i0 := @parameter2: int;

        d0 := @parameter3: double;

        r3 := @parameter4: double[];

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.opengamma.analytics.math.interpolation.PolynomialsLeastSquaresFitterResult: double[] _coefficients> = r1;

        r0.<com.opengamma.analytics.math.interpolation.PolynomialsLeastSquaresFitterResult: com.opengamma.analytics.math.matrix.DoubleMatrix2D _rMatrix> = r2;

        r0.<com.opengamma.analytics.math.interpolation.PolynomialsLeastSquaresFitterResult: int _dof> = i0;

        r0.<com.opengamma.analytics.math.interpolation.PolynomialsLeastSquaresFitterResult: double _diffNorm> = d0;

        r0.<com.opengamma.analytics.math.interpolation.PolynomialsLeastSquaresFitterResult: double[] _meanAndStd> = r3;

        return;
    }

    public double[] getCoeff()
    {
        com.opengamma.analytics.math.interpolation.PolynomialsLeastSquaresFitterResult r0;
        double[] $r1;

        r0 := @this: com.opengamma.analytics.math.interpolation.PolynomialsLeastSquaresFitterResult;

        $r1 = r0.<com.opengamma.analytics.math.interpolation.PolynomialsLeastSquaresFitterResult: double[] _coefficients>;

        return $r1;
    }

    public com.opengamma.analytics.math.matrix.DoubleMatrix2D getRMat()
    {
        com.opengamma.analytics.math.interpolation.PolynomialsLeastSquaresFitterResult r0;
        com.opengamma.analytics.math.matrix.DoubleMatrix2D $r1;

        r0 := @this: com.opengamma.analytics.math.interpolation.PolynomialsLeastSquaresFitterResult;

        $r1 = r0.<com.opengamma.analytics.math.interpolation.PolynomialsLeastSquaresFitterResult: com.opengamma.analytics.math.matrix.DoubleMatrix2D _rMatrix>;

        return $r1;
    }

    public int getDof()
    {
        com.opengamma.analytics.math.interpolation.PolynomialsLeastSquaresFitterResult r0;
        int $i0;

        r0 := @this: com.opengamma.analytics.math.interpolation.PolynomialsLeastSquaresFitterResult;

        $i0 = r0.<com.opengamma.analytics.math.interpolation.PolynomialsLeastSquaresFitterResult: int _dof>;

        return $i0;
    }

    public double getDiffNorm()
    {
        com.opengamma.analytics.math.interpolation.PolynomialsLeastSquaresFitterResult r0;
        double $d0;

        r0 := @this: com.opengamma.analytics.math.interpolation.PolynomialsLeastSquaresFitterResult;

        $d0 = r0.<com.opengamma.analytics.math.interpolation.PolynomialsLeastSquaresFitterResult: double _diffNorm>;

        return $d0;
    }

    public double[] getMeanAndStd()
    {
        com.opengamma.analytics.math.interpolation.PolynomialsLeastSquaresFitterResult r0;
        double[] $r1, $r3;

        r0 := @this: com.opengamma.analytics.math.interpolation.PolynomialsLeastSquaresFitterResult;

        $r1 = r0.<com.opengamma.analytics.math.interpolation.PolynomialsLeastSquaresFitterResult: double[] _meanAndStd>;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>($r1, "xData are not normalized");

        $r3 = r0.<com.opengamma.analytics.math.interpolation.PolynomialsLeastSquaresFitterResult: double[] _meanAndStd>;

        return $r3;
    }
}
