public class org.apache.commons.math.optimization.fitting.HarmonicCoefficientsGuesser extends java.lang.Object
{
    private final org.apache.commons.math.optimization.fitting.WeightedObservedPoint[] observations;
    private double a;
    private double omega;
    private double phi;

    public void <init>(org.apache.commons.math.optimization.fitting.WeightedObservedPoint[])
    {
        org.apache.commons.math.optimization.fitting.HarmonicCoefficientsGuesser r0;
        org.apache.commons.math.optimization.fitting.WeightedObservedPoint[] r1, $r3;
        java.lang.Object $r2;

        r0 := @this: org.apache.commons.math.optimization.fitting.HarmonicCoefficientsGuesser;

        r1 := @parameter0: org.apache.commons.math.optimization.fitting.WeightedObservedPoint[];

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = virtualinvoke r1.<java.lang.Object: java.lang.Object clone()>();

        $r3 = (org.apache.commons.math.optimization.fitting.WeightedObservedPoint[]) $r2;

        r0.<org.apache.commons.math.optimization.fitting.HarmonicCoefficientsGuesser: org.apache.commons.math.optimization.fitting.WeightedObservedPoint[] observations> = $r3;

        r0.<org.apache.commons.math.optimization.fitting.HarmonicCoefficientsGuesser: double a> = #NaN;

        r0.<org.apache.commons.math.optimization.fitting.HarmonicCoefficientsGuesser: double omega> = #NaN;

        return;
    }

    public void guess() throws org.apache.commons.math.optimization.OptimizationException
    {
        org.apache.commons.math.optimization.fitting.HarmonicCoefficientsGuesser r0;

        r0 := @this: org.apache.commons.math.optimization.fitting.HarmonicCoefficientsGuesser;

        specialinvoke r0.<org.apache.commons.math.optimization.fitting.HarmonicCoefficientsGuesser: void sortObservations()>();

        specialinvoke r0.<org.apache.commons.math.optimization.fitting.HarmonicCoefficientsGuesser: void guessAOmega()>();

        specialinvoke r0.<org.apache.commons.math.optimization.fitting.HarmonicCoefficientsGuesser: void guessPhi()>();

        return;
    }

    private void sortObservations()
    {
        org.apache.commons.math.optimization.fitting.HarmonicCoefficientsGuesser r0;
        org.apache.commons.math.optimization.fitting.WeightedObservedPoint r1, r10, r11;
        org.apache.commons.math.optimization.fitting.WeightedObservedPoint[] $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9;
        int $i0, $i2, $i4, $i5, i6, i7;
        double $d0, $d1, $d2, $d3;
        byte $b1, $b3;

        r0 := @this: org.apache.commons.math.optimization.fitting.HarmonicCoefficientsGuesser;

        $r2 = r0.<org.apache.commons.math.optimization.fitting.HarmonicCoefficientsGuesser: org.apache.commons.math.optimization.fitting.WeightedObservedPoint[] observations>;

        r10 = $r2[0];

        i6 = 1;

     label1:
        $r3 = r0.<org.apache.commons.math.optimization.fitting.HarmonicCoefficientsGuesser: org.apache.commons.math.optimization.fitting.WeightedObservedPoint[] observations>;

        $i0 = lengthof $r3;

        if i6 >= $i0 goto label5;

        r1 = r10;

        $r4 = r0.<org.apache.commons.math.optimization.fitting.HarmonicCoefficientsGuesser: org.apache.commons.math.optimization.fitting.WeightedObservedPoint[] observations>;

        r10 = $r4[i6];

        $d0 = virtualinvoke r10.<org.apache.commons.math.optimization.fitting.WeightedObservedPoint: double getX()>();

        $d1 = virtualinvoke r1.<org.apache.commons.math.optimization.fitting.WeightedObservedPoint: double getX()>();

        $b1 = $d0 cmpg $d1;

        if $b1 >= 0 goto label4;

        i7 = i6 - 1;

        $r5 = r0.<org.apache.commons.math.optimization.fitting.HarmonicCoefficientsGuesser: org.apache.commons.math.optimization.fitting.WeightedObservedPoint[] observations>;

        r11 = $r5[i7];

     label2:
        if i7 < 0 goto label3;

        $d2 = virtualinvoke r10.<org.apache.commons.math.optimization.fitting.WeightedObservedPoint: double getX()>();

        $d3 = virtualinvoke r11.<org.apache.commons.math.optimization.fitting.WeightedObservedPoint: double getX()>();

        $b3 = $d2 cmpg $d3;

        if $b3 >= 0 goto label3;

        $r8 = r0.<org.apache.commons.math.optimization.fitting.HarmonicCoefficientsGuesser: org.apache.commons.math.optimization.fitting.WeightedObservedPoint[] observations>;

        $i4 = i7 + 1;

        $r8[$i4] = r11;

        $i5 = i7;

        i7 = i7 + -1;

        if $i5 == 0 goto label2;

        $r9 = r0.<org.apache.commons.math.optimization.fitting.HarmonicCoefficientsGuesser: org.apache.commons.math.optimization.fitting.WeightedObservedPoint[] observations>;

        r11 = $r9[i7];

        goto label2;

     label3:
        $r6 = r0.<org.apache.commons.math.optimization.fitting.HarmonicCoefficientsGuesser: org.apache.commons.math.optimization.fitting.WeightedObservedPoint[] observations>;

        $i2 = i7 + 1;

        $r6[$i2] = r10;

        $r7 = r0.<org.apache.commons.math.optimization.fitting.HarmonicCoefficientsGuesser: org.apache.commons.math.optimization.fitting.WeightedObservedPoint[] observations>;

        r10 = $r7[i6];

     label4:
        i6 = i6 + 1;

        goto label1;

     label5:
        return;
    }

    private void guessAOmega() throws org.apache.commons.math.optimization.OptimizationException
    {
        org.apache.commons.math.optimization.fitting.HarmonicCoefficientsGuesser r0;
        double d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21, $d22, $d23, $d24, $d25, $d26, $d27, $d28, $d29, $d30, $d31, $d32, $d33, d34, d35, d36, d37, d38, d39, d40, d41, d42, d43;
        org.apache.commons.math.optimization.fitting.WeightedObservedPoint[] $r1, $r3, $r5, $r9, $r11;
        org.apache.commons.math.optimization.fitting.WeightedObservedPoint $r2, $r4, $r10, $r12;
        int $i0, i3;
        byte $b1, $b2;
        org.apache.commons.math.optimization.OptimizationException $r6;
        java.lang.Object[] $r7;
        org.apache.commons.math.exception.util.LocalizedFormats $r8;

        r0 := @this: org.apache.commons.math.optimization.fitting.HarmonicCoefficientsGuesser;

        d34 = 0.0;

        d35 = 0.0;

        d36 = 0.0;

        d37 = 0.0;

        d38 = 0.0;

        $r1 = r0.<org.apache.commons.math.optimization.fitting.HarmonicCoefficientsGuesser: org.apache.commons.math.optimization.fitting.WeightedObservedPoint[] observations>;

        $r2 = $r1[0];

        d39 = virtualinvoke $r2.<org.apache.commons.math.optimization.fitting.WeightedObservedPoint: double getX()>();

        $r3 = r0.<org.apache.commons.math.optimization.fitting.HarmonicCoefficientsGuesser: org.apache.commons.math.optimization.fitting.WeightedObservedPoint[] observations>;

        $r4 = $r3[0];

        d40 = virtualinvoke $r4.<org.apache.commons.math.optimization.fitting.WeightedObservedPoint: double getY()>();

        d41 = 0.0;

        d42 = 0.0;

        d0 = d39;

        i3 = 1;

     label1:
        $r5 = r0.<org.apache.commons.math.optimization.fitting.HarmonicCoefficientsGuesser: org.apache.commons.math.optimization.fitting.WeightedObservedPoint[] observations>;

        $i0 = lengthof $r5;

        if i3 >= $i0 goto label2;

        d1 = d39;

        d3 = d40;

        $r9 = r0.<org.apache.commons.math.optimization.fitting.HarmonicCoefficientsGuesser: org.apache.commons.math.optimization.fitting.WeightedObservedPoint[] observations>;

        $r10 = $r9[i3];

        d39 = virtualinvoke $r10.<org.apache.commons.math.optimization.fitting.WeightedObservedPoint: double getX()>();

        $r11 = r0.<org.apache.commons.math.optimization.fitting.HarmonicCoefficientsGuesser: org.apache.commons.math.optimization.fitting.WeightedObservedPoint[] observations>;

        $r12 = $r11[i3];

        d40 = virtualinvoke $r12.<org.apache.commons.math.optimization.fitting.WeightedObservedPoint: double getY()>();

        d5 = d39 - d1;

        d6 = d40 - d3;

        $d23 = d3 * d3;

        $d22 = d3 * d40;

        $d25 = $d23 + $d22;

        $d24 = d40 * d40;

        $d26 = $d25 + $d24;

        $d27 = d5 * $d26;

        d7 = $d27 / 3.0;

        $d28 = d6 * d6;

        d8 = $d28 / d5;

        d9 = d39 - d0;

        d41 = d41 + d7;

        d42 = d42 + d8;

        $d29 = d9 * d9;

        d34 = d34 + $d29;

        $d30 = d41 * d41;

        d35 = d35 + $d30;

        $d31 = d9 * d41;

        d36 = d36 + $d31;

        $d32 = d9 * d42;

        d37 = d37 + $d32;

        $d33 = d41 * d42;

        d38 = d38 + $d33;

        i3 = i3 + 1;

        goto label1;

     label2:
        $d11 = d35 * d37;

        $d10 = d36 * d38;

        d43 = $d11 - $d10;

        $d13 = d36 * d37;

        $d12 = d34 * d38;

        d2 = $d13 - $d12;

        $d15 = d34 * d35;

        $d14 = d36 * d36;

        d4 = $d15 - $d14;

        $d16 = d43 / d2;

        $b1 = $d16 cmpg 0.0;

        if $b1 < 0 goto label3;

        $d17 = d2 / d4;

        $b2 = $d17 cmpg 0.0;

        if $b2 >= 0 goto label4;

     label3:
        $r6 = new org.apache.commons.math.optimization.OptimizationException;

        $r8 = <org.apache.commons.math.exception.util.LocalizedFormats: org.apache.commons.math.exception.util.LocalizedFormats UNABLE_TO_FIRST_GUESS_HARMONIC_COEFFICIENTS>;

        $r7 = newarray (java.lang.Object)[0];

        specialinvoke $r6.<org.apache.commons.math.optimization.OptimizationException: void <init>(org.apache.commons.math.exception.util.Localizable,java.lang.Object[])>($r8, $r7);

        throw $r6;

     label4:
        $d18 = d43 / d2;

        $d19 = staticinvoke <org.apache.commons.math.util.FastMath: double sqrt(double)>($d18);

        r0.<org.apache.commons.math.optimization.fitting.HarmonicCoefficientsGuesser: double a> = $d19;

        $d20 = d2 / d4;

        $d21 = staticinvoke <org.apache.commons.math.util.FastMath: double sqrt(double)>($d20);

        r0.<org.apache.commons.math.optimization.fitting.HarmonicCoefficientsGuesser: double omega> = $d21;

        return;
    }

    private void guessPhi()
    {
        org.apache.commons.math.optimization.fitting.HarmonicCoefficientsGuesser r0;
        double d0, d1, d2, d3, d4, d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, d21, d22, d23, d24;
        org.apache.commons.math.optimization.fitting.WeightedObservedPoint[] $r1, $r3, $r5, $r6, $r8;
        org.apache.commons.math.optimization.fitting.WeightedObservedPoint $r2, $r4, $r7, $r9;
        int $i0, i1;

        r0 := @this: org.apache.commons.math.optimization.fitting.HarmonicCoefficientsGuesser;

        d21 = 0.0;

        d22 = 0.0;

        $r1 = r0.<org.apache.commons.math.optimization.fitting.HarmonicCoefficientsGuesser: org.apache.commons.math.optimization.fitting.WeightedObservedPoint[] observations>;

        $r2 = $r1[0];

        d23 = virtualinvoke $r2.<org.apache.commons.math.optimization.fitting.WeightedObservedPoint: double getX()>();

        $r3 = r0.<org.apache.commons.math.optimization.fitting.HarmonicCoefficientsGuesser: org.apache.commons.math.optimization.fitting.WeightedObservedPoint[] observations>;

        $r4 = $r3[0];

        d24 = virtualinvoke $r4.<org.apache.commons.math.optimization.fitting.WeightedObservedPoint: double getY()>();

        i1 = 1;

     label1:
        $r5 = r0.<org.apache.commons.math.optimization.fitting.HarmonicCoefficientsGuesser: org.apache.commons.math.optimization.fitting.WeightedObservedPoint[] observations>;

        $i0 = lengthof $r5;

        if i1 >= $i0 goto label2;

        d0 = d23;

        d1 = d24;

        $r6 = r0.<org.apache.commons.math.optimization.fitting.HarmonicCoefficientsGuesser: org.apache.commons.math.optimization.fitting.WeightedObservedPoint[] observations>;

        $r7 = $r6[i1];

        d23 = virtualinvoke $r7.<org.apache.commons.math.optimization.fitting.WeightedObservedPoint: double getX()>();

        $r8 = r0.<org.apache.commons.math.optimization.fitting.HarmonicCoefficientsGuesser: org.apache.commons.math.optimization.fitting.WeightedObservedPoint[] observations>;

        $r9 = $r8[i1];

        d24 = virtualinvoke $r9.<org.apache.commons.math.optimization.fitting.WeightedObservedPoint: double getY()>();

        $d9 = d24 - d1;

        $d8 = d23 - d0;

        d2 = $d9 / $d8;

        $d10 = r0.<org.apache.commons.math.optimization.fitting.HarmonicCoefficientsGuesser: double omega>;

        d3 = $d10 * d23;

        d4 = staticinvoke <org.apache.commons.math.util.FastMath: double cos(double)>(d3);

        d5 = staticinvoke <org.apache.commons.math.util.FastMath: double sin(double)>(d3);

        $d11 = r0.<org.apache.commons.math.optimization.fitting.HarmonicCoefficientsGuesser: double omega>;

        $d12 = $d11 * d24;

        $d14 = $d12 * d4;

        $d13 = d2 * d5;

        $d15 = $d14 - $d13;

        d21 = d21 + $d15;

        $d16 = r0.<org.apache.commons.math.optimization.fitting.HarmonicCoefficientsGuesser: double omega>;

        $d17 = $d16 * d24;

        $d19 = $d17 * d5;

        $d18 = d2 * d4;

        $d20 = $d19 + $d18;

        d22 = d22 + $d20;

        i1 = i1 + 1;

        goto label1;

     label2:
        $d6 = neg d22;

        $d7 = staticinvoke <org.apache.commons.math.util.FastMath: double atan2(double,double)>($d6, d21);

        r0.<org.apache.commons.math.optimization.fitting.HarmonicCoefficientsGuesser: double phi> = $d7;

        return;
    }

    public double getGuessedAmplitude()
    {
        org.apache.commons.math.optimization.fitting.HarmonicCoefficientsGuesser r0;
        double $d0;

        r0 := @this: org.apache.commons.math.optimization.fitting.HarmonicCoefficientsGuesser;

        $d0 = r0.<org.apache.commons.math.optimization.fitting.HarmonicCoefficientsGuesser: double a>;

        return $d0;
    }

    public double getGuessedPulsation()
    {
        org.apache.commons.math.optimization.fitting.HarmonicCoefficientsGuesser r0;
        double $d0;

        r0 := @this: org.apache.commons.math.optimization.fitting.HarmonicCoefficientsGuesser;

        $d0 = r0.<org.apache.commons.math.optimization.fitting.HarmonicCoefficientsGuesser: double omega>;

        return $d0;
    }

    public double getGuessedPhase()
    {
        org.apache.commons.math.optimization.fitting.HarmonicCoefficientsGuesser r0;
        double $d0;

        r0 := @this: org.apache.commons.math.optimization.fitting.HarmonicCoefficientsGuesser;

        $d0 = r0.<org.apache.commons.math.optimization.fitting.HarmonicCoefficientsGuesser: double phi>;

        return $d0;
    }
}
