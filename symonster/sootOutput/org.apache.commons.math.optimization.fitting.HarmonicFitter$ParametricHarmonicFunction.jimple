class org.apache.commons.math.optimization.fitting.HarmonicFitter$ParametricHarmonicFunction extends java.lang.Object implements org.apache.commons.math.optimization.fitting.ParametricRealFunction
{

    private void <init>()
    {
        org.apache.commons.math.optimization.fitting.HarmonicFitter$ParametricHarmonicFunction r0;

        r0 := @this: org.apache.commons.math.optimization.fitting.HarmonicFitter$ParametricHarmonicFunction;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public double value(double, double[])
    {
        org.apache.commons.math.optimization.fitting.HarmonicFitter$ParametricHarmonicFunction r0;
        double d0, d1, d2, d3, $d4, $d5, $d6, $d7;
        double[] r1;

        r0 := @this: org.apache.commons.math.optimization.fitting.HarmonicFitter$ParametricHarmonicFunction;

        d0 := @parameter0: double;

        r1 := @parameter1: double[];

        d1 = r1[0];

        d2 = r1[1];

        d3 = r1[2];

        $d4 = d2 * d0;

        $d5 = $d4 + d3;

        $d6 = staticinvoke <org.apache.commons.math.util.FastMath: double cos(double)>($d5);

        $d7 = d1 * $d6;

        return $d7;
    }

    public double[] gradient(double, double[])
    {
        org.apache.commons.math.optimization.fitting.HarmonicFitter$ParametricHarmonicFunction r0;
        double d0, d1, d2, d3, d4, d5, d6, $d7, $d8, $d9, $d10, $d11, $d12;
        double[] r1, $r2;

        r0 := @this: org.apache.commons.math.optimization.fitting.HarmonicFitter$ParametricHarmonicFunction;

        d0 := @parameter0: double;

        r1 := @parameter1: double[];

        d1 = r1[0];

        d2 = r1[1];

        d3 = r1[2];

        $d7 = d2 * d0;

        d4 = $d7 + d3;

        d5 = staticinvoke <org.apache.commons.math.util.FastMath: double cos(double)>(d4);

        d6 = staticinvoke <org.apache.commons.math.util.FastMath: double sin(double)>(d4);

        $r2 = newarray (double)[3];

        $r2[0] = d5;

        $d8 = neg d1;

        $d9 = $d8 * d0;

        $d10 = $d9 * d6;

        $r2[1] = $d10;

        $d11 = neg d1;

        $d12 = $d11 * d6;

        $r2[2] = $d12;

        return $r2;
    }

    void <init>(org.apache.commons.math.optimization.fitting.HarmonicFitter$1)
    {
        org.apache.commons.math.optimization.fitting.HarmonicFitter$ParametricHarmonicFunction r0;
        org.apache.commons.math.optimization.fitting.HarmonicFitter$1 r1;

        r0 := @this: org.apache.commons.math.optimization.fitting.HarmonicFitter$ParametricHarmonicFunction;

        r1 := @parameter0: org.apache.commons.math.optimization.fitting.HarmonicFitter$1;

        specialinvoke r0.<org.apache.commons.math.optimization.fitting.HarmonicFitter$ParametricHarmonicFunction: void <init>()>();

        return;
    }
}
