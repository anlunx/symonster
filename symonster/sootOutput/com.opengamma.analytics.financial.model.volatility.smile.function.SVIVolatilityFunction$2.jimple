class com.opengamma.analytics.financial.model.volatility.smile.function.SVIVolatilityFunction$2 extends com.opengamma.analytics.math.function.Function1D
{
    final double val$forward;
    final double val$strike;
    final double val$kappa;
    final com.opengamma.analytics.financial.model.volatility.smile.function.SVIVolatilityFunction this$0;

    void <init>(com.opengamma.analytics.financial.model.volatility.smile.function.SVIVolatilityFunction, double, double, double)
    {
        com.opengamma.analytics.financial.model.volatility.smile.function.SVIVolatilityFunction$2 r0;
        com.opengamma.analytics.financial.model.volatility.smile.function.SVIVolatilityFunction r1;
        double d0, d1, d2;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.smile.function.SVIVolatilityFunction$2;

        r1 := @parameter0: com.opengamma.analytics.financial.model.volatility.smile.function.SVIVolatilityFunction;

        d0 := @parameter1: double;

        d1 := @parameter2: double;

        d2 := @parameter3: double;

        r0.<com.opengamma.analytics.financial.model.volatility.smile.function.SVIVolatilityFunction$2: com.opengamma.analytics.financial.model.volatility.smile.function.SVIVolatilityFunction this$0> = r1;

        r0.<com.opengamma.analytics.financial.model.volatility.smile.function.SVIVolatilityFunction$2: double val$forward> = d0;

        r0.<com.opengamma.analytics.financial.model.volatility.smile.function.SVIVolatilityFunction$2: double val$strike> = d1;

        r0.<com.opengamma.analytics.financial.model.volatility.smile.function.SVIVolatilityFunction$2: double val$kappa> = d2;

        specialinvoke r0.<com.opengamma.analytics.math.function.Function1D: void <init>()>();

        return;
    }

    public double[] evaluate(com.opengamma.analytics.financial.model.volatility.smile.function.SVIFormulaData)
    {
        com.opengamma.analytics.financial.model.volatility.smile.function.SVIVolatilityFunction$2 r0;
        com.opengamma.analytics.financial.model.volatility.smile.function.SVIFormulaData r1;
        double $d0, $d1, $d2;
        com.opengamma.analytics.financial.model.volatility.smile.function.SVIVolatilityFunction $r2;
        double[] $r3;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.smile.function.SVIVolatilityFunction$2;

        r1 := @parameter0: com.opengamma.analytics.financial.model.volatility.smile.function.SVIFormulaData;

        $r2 = r0.<com.opengamma.analytics.financial.model.volatility.smile.function.SVIVolatilityFunction$2: com.opengamma.analytics.financial.model.volatility.smile.function.SVIVolatilityFunction this$0>;

        $d2 = r0.<com.opengamma.analytics.financial.model.volatility.smile.function.SVIVolatilityFunction$2: double val$forward>;

        $d1 = r0.<com.opengamma.analytics.financial.model.volatility.smile.function.SVIVolatilityFunction$2: double val$strike>;

        $d0 = r0.<com.opengamma.analytics.financial.model.volatility.smile.function.SVIVolatilityFunction$2: double val$kappa>;

        $r3 = staticinvoke <com.opengamma.analytics.financial.model.volatility.smile.function.SVIVolatilityFunction: double[] access$100(com.opengamma.analytics.financial.model.volatility.smile.function.SVIVolatilityFunction,double,double,double,com.opengamma.analytics.financial.model.volatility.smile.function.SVIFormulaData)>($r2, $d2, $d1, $d0, r1);

        return $r3;
    }

    public volatile java.lang.Object evaluate(java.lang.Object)
    {
        com.opengamma.analytics.financial.model.volatility.smile.function.SVIVolatilityFunction$2 r0;
        java.lang.Object r1;
        com.opengamma.analytics.financial.model.volatility.smile.function.SVIFormulaData $r2;
        double[] $r3;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.smile.function.SVIVolatilityFunction$2;

        r1 := @parameter0: java.lang.Object;

        $r2 = (com.opengamma.analytics.financial.model.volatility.smile.function.SVIFormulaData) r1;

        $r3 = virtualinvoke r0.<com.opengamma.analytics.financial.model.volatility.smile.function.SVIVolatilityFunction$2: double[] evaluate(com.opengamma.analytics.financial.model.volatility.smile.function.SVIFormulaData)>($r2);

        return $r3;
    }
}
