public class org.apache.commons.math.analysis.solvers.BrentSolver extends org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
{
    public static final double DEFAULT_ABSOLUTE_ACCURACY;
    public static final int DEFAULT_MAXIMUM_ITERATIONS;
    private static final long serialVersionUID;

    public void <init>(org.apache.commons.math.analysis.UnivariateRealFunction)
    {
        org.apache.commons.math.analysis.solvers.BrentSolver r0;
        org.apache.commons.math.analysis.UnivariateRealFunction r1;

        r0 := @this: org.apache.commons.math.analysis.solvers.BrentSolver;

        r1 := @parameter0: org.apache.commons.math.analysis.UnivariateRealFunction;

        specialinvoke r0.<org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl: void <init>(org.apache.commons.math.analysis.UnivariateRealFunction,int,double)>(r1, 100, 1.0E-6);

        return;
    }

    public void <init>()
    {
        org.apache.commons.math.analysis.solvers.BrentSolver r0;

        r0 := @this: org.apache.commons.math.analysis.solvers.BrentSolver;

        specialinvoke r0.<org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl: void <init>(int,double)>(100, 1.0E-6);

        return;
    }

    public void <init>(double)
    {
        org.apache.commons.math.analysis.solvers.BrentSolver r0;
        double d0;

        r0 := @this: org.apache.commons.math.analysis.solvers.BrentSolver;

        d0 := @parameter0: double;

        specialinvoke r0.<org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl: void <init>(int,double)>(100, d0);

        return;
    }

    public void <init>(int, double)
    {
        org.apache.commons.math.analysis.solvers.BrentSolver r0;
        int i0;
        double d0;

        r0 := @this: org.apache.commons.math.analysis.solvers.BrentSolver;

        i0 := @parameter0: int;

        d0 := @parameter1: double;

        specialinvoke r0.<org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl: void <init>(int,double)>(i0, d0);

        return;
    }

    public double solve(double, double) throws org.apache.commons.math.MaxIterationsExceededException, org.apache.commons.math.FunctionEvaluationException
    {
        org.apache.commons.math.analysis.solvers.BrentSolver r0;
        double d0, d1, $d2;
        org.apache.commons.math.analysis.UnivariateRealFunction $r1;

        r0 := @this: org.apache.commons.math.analysis.solvers.BrentSolver;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        $r1 = r0.<org.apache.commons.math.analysis.solvers.BrentSolver: org.apache.commons.math.analysis.UnivariateRealFunction f>;

        $d2 = virtualinvoke r0.<org.apache.commons.math.analysis.solvers.BrentSolver: double solve(org.apache.commons.math.analysis.UnivariateRealFunction,double,double)>($r1, d0, d1);

        return $d2;
    }

    public double solve(double, double, double) throws org.apache.commons.math.MaxIterationsExceededException, org.apache.commons.math.FunctionEvaluationException
    {
        org.apache.commons.math.analysis.solvers.BrentSolver r0;
        double d0, d1, d2, $d3;
        org.apache.commons.math.analysis.UnivariateRealFunction $r1;

        r0 := @this: org.apache.commons.math.analysis.solvers.BrentSolver;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        d2 := @parameter2: double;

        $r1 = r0.<org.apache.commons.math.analysis.solvers.BrentSolver: org.apache.commons.math.analysis.UnivariateRealFunction f>;

        $d3 = virtualinvoke r0.<org.apache.commons.math.analysis.solvers.BrentSolver: double solve(org.apache.commons.math.analysis.UnivariateRealFunction,double,double,double)>($r1, d0, d1, d2);

        return $d3;
    }

    public double solve(org.apache.commons.math.analysis.UnivariateRealFunction, double, double, double) throws org.apache.commons.math.MaxIterationsExceededException, org.apache.commons.math.FunctionEvaluationException
    {
        org.apache.commons.math.analysis.solvers.BrentSolver r0;
        org.apache.commons.math.analysis.UnivariateRealFunction r1;
        double d0, d1, d2, d3, d4, d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18;
        byte $b0, $b1, $b2, $b3, $b4, $b5, $b6;
        java.lang.Object[] $r2, $r8;
        org.apache.commons.math.exception.util.LocalizedFormats $r3, $r9;
        java.lang.Double $r4, $r5, $r6, $r10, $r11, $r12, $r13;
        java.lang.IllegalArgumentException $r7, $r14;

        r0 := @this: org.apache.commons.math.analysis.solvers.BrentSolver;

        r1 := @parameter0: org.apache.commons.math.analysis.UnivariateRealFunction;

        d0 := @parameter1: double;

        d1 := @parameter2: double;

        d2 := @parameter3: double;

        virtualinvoke r0.<org.apache.commons.math.analysis.solvers.BrentSolver: void clearResult()>();

        $b0 = d2 cmpg d0;

        if $b0 < 0 goto label1;

        $b1 = d2 cmpl d1;

        if $b1 <= 0 goto label2;

     label1:
        $r3 = <org.apache.commons.math.exception.util.LocalizedFormats: org.apache.commons.math.exception.util.LocalizedFormats INVALID_INTERVAL_INITIAL_VALUE_PARAMETERS>;

        $r2 = newarray (java.lang.Object)[3];

        $r4 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d0);

        $r2[0] = $r4;

        $r5 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d2);

        $r2[1] = $r5;

        $r6 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d1);

        $r2[2] = $r6;

        $r7 = staticinvoke <org.apache.commons.math.MathRuntimeException: java.lang.IllegalArgumentException createIllegalArgumentException(org.apache.commons.math.exception.util.Localizable,java.lang.Object[])>($r3, $r2);

        throw $r7;

     label2:
        d3 = interfaceinvoke r1.<org.apache.commons.math.analysis.UnivariateRealFunction: double value(double)>(d2);

        $d6 = staticinvoke <org.apache.commons.math.util.FastMath: double abs(double)>(d3);

        $d7 = r0.<org.apache.commons.math.analysis.solvers.BrentSolver: double functionValueAccuracy>;

        $b2 = $d6 cmpg $d7;

        if $b2 > 0 goto label3;

        virtualinvoke r0.<org.apache.commons.math.analysis.solvers.BrentSolver: void setResult(double,int)>(d2, 0);

        $d18 = r0.<org.apache.commons.math.analysis.solvers.BrentSolver: double result>;

        return $d18;

     label3:
        d4 = interfaceinvoke r1.<org.apache.commons.math.analysis.UnivariateRealFunction: double value(double)>(d0);

        $d8 = staticinvoke <org.apache.commons.math.util.FastMath: double abs(double)>(d4);

        $d9 = r0.<org.apache.commons.math.analysis.solvers.BrentSolver: double functionValueAccuracy>;

        $b3 = $d8 cmpg $d9;

        if $b3 > 0 goto label4;

        virtualinvoke r0.<org.apache.commons.math.analysis.solvers.BrentSolver: void setResult(double,int)>(d0, 0);

        $d17 = r0.<org.apache.commons.math.analysis.solvers.BrentSolver: double result>;

        return $d17;

     label4:
        $d10 = d3 * d4;

        $b4 = $d10 cmpg 0.0;

        if $b4 >= 0 goto label5;

        $d16 = specialinvoke r0.<org.apache.commons.math.analysis.solvers.BrentSolver: double solve(org.apache.commons.math.analysis.UnivariateRealFunction,double,double,double,double,double,double)>(r1, d0, d4, d2, d3, d0, d4);

        return $d16;

     label5:
        d5 = interfaceinvoke r1.<org.apache.commons.math.analysis.UnivariateRealFunction: double value(double)>(d1);

        $d11 = staticinvoke <org.apache.commons.math.util.FastMath: double abs(double)>(d5);

        $d12 = r0.<org.apache.commons.math.analysis.solvers.BrentSolver: double functionValueAccuracy>;

        $b5 = $d11 cmpg $d12;

        if $b5 > 0 goto label6;

        virtualinvoke r0.<org.apache.commons.math.analysis.solvers.BrentSolver: void setResult(double,int)>(d1, 0);

        $d15 = r0.<org.apache.commons.math.analysis.solvers.BrentSolver: double result>;

        return $d15;

     label6:
        $d13 = d3 * d5;

        $b6 = $d13 cmpg 0.0;

        if $b6 >= 0 goto label7;

        $d14 = specialinvoke r0.<org.apache.commons.math.analysis.solvers.BrentSolver: double solve(org.apache.commons.math.analysis.UnivariateRealFunction,double,double,double,double,double,double)>(r1, d2, d3, d1, d5, d2, d3);

        return $d14;

     label7:
        $r9 = <org.apache.commons.math.exception.util.LocalizedFormats: org.apache.commons.math.exception.util.LocalizedFormats SAME_SIGN_AT_ENDPOINTS>;

        $r8 = newarray (java.lang.Object)[4];

        $r10 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d0);

        $r8[0] = $r10;

        $r11 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d1);

        $r8[1] = $r11;

        $r12 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d4);

        $r8[2] = $r12;

        $r13 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d5);

        $r8[3] = $r13;

        $r14 = staticinvoke <org.apache.commons.math.MathRuntimeException: java.lang.IllegalArgumentException createIllegalArgumentException(org.apache.commons.math.exception.util.Localizable,java.lang.Object[])>($r9, $r8);

        throw $r14;
    }

    public double solve(int, org.apache.commons.math.analysis.UnivariateRealFunction, double, double, double) throws org.apache.commons.math.MaxIterationsExceededException, org.apache.commons.math.FunctionEvaluationException
    {
        org.apache.commons.math.analysis.solvers.BrentSolver r0;
        int i0;
        org.apache.commons.math.analysis.UnivariateRealFunction r1;
        double d0, d1, d2, $d3;

        r0 := @this: org.apache.commons.math.analysis.solvers.BrentSolver;

        i0 := @parameter0: int;

        r1 := @parameter1: org.apache.commons.math.analysis.UnivariateRealFunction;

        d0 := @parameter2: double;

        d1 := @parameter3: double;

        d2 := @parameter4: double;

        virtualinvoke r0.<org.apache.commons.math.analysis.solvers.BrentSolver: void setMaximalIterationCount(int)>(i0);

        $d3 = virtualinvoke r0.<org.apache.commons.math.analysis.solvers.BrentSolver: double solve(org.apache.commons.math.analysis.UnivariateRealFunction,double,double,double)>(r1, d0, d1, d2);

        return $d3;
    }

    public double solve(org.apache.commons.math.analysis.UnivariateRealFunction, double, double) throws org.apache.commons.math.MaxIterationsExceededException, org.apache.commons.math.FunctionEvaluationException
    {
        org.apache.commons.math.analysis.solvers.BrentSolver r0;
        org.apache.commons.math.analysis.UnivariateRealFunction r1;
        double d0, d1, d2, d3, d4, $d5, $d6, $d7, $d8, d10;
        byte $b0, $b1, $b2, $b3, $b4;
        java.lang.Object[] $r2;
        org.apache.commons.math.exception.util.LocalizedFormats $r3;
        java.lang.Double $r4, $r5, $r6, $r7;
        java.lang.IllegalArgumentException $r8;

        r0 := @this: org.apache.commons.math.analysis.solvers.BrentSolver;

        r1 := @parameter0: org.apache.commons.math.analysis.UnivariateRealFunction;

        d0 := @parameter1: double;

        d1 := @parameter2: double;

        virtualinvoke r0.<org.apache.commons.math.analysis.solvers.BrentSolver: void clearResult()>();

        virtualinvoke r0.<org.apache.commons.math.analysis.solvers.BrentSolver: void verifyInterval(double,double)>(d0, d1);

        d2 = interfaceinvoke r1.<org.apache.commons.math.analysis.UnivariateRealFunction: double value(double)>(d0);

        d3 = interfaceinvoke r1.<org.apache.commons.math.analysis.UnivariateRealFunction: double value(double)>(d1);

        d4 = d2 * d3;

        $b0 = d4 cmpl 0.0;

        if $b0 <= 0 goto label3;

        $d5 = staticinvoke <org.apache.commons.math.util.FastMath: double abs(double)>(d2);

        $d6 = r0.<org.apache.commons.math.analysis.solvers.BrentSolver: double functionValueAccuracy>;

        $b3 = $d5 cmpg $d6;

        if $b3 > 0 goto label1;

        virtualinvoke r0.<org.apache.commons.math.analysis.solvers.BrentSolver: void setResult(double,int)>(d0, 0);

        d10 = d0;

        goto label6;

     label1:
        $d7 = staticinvoke <org.apache.commons.math.util.FastMath: double abs(double)>(d3);

        $d8 = r0.<org.apache.commons.math.analysis.solvers.BrentSolver: double functionValueAccuracy>;

        $b4 = $d7 cmpg $d8;

        if $b4 > 0 goto label2;

        virtualinvoke r0.<org.apache.commons.math.analysis.solvers.BrentSolver: void setResult(double,int)>(d1, 0);

        d10 = d1;

        goto label6;

     label2:
        $r3 = <org.apache.commons.math.exception.util.LocalizedFormats: org.apache.commons.math.exception.util.LocalizedFormats SAME_SIGN_AT_ENDPOINTS>;

        $r2 = newarray (java.lang.Object)[4];

        $r4 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d0);

        $r2[0] = $r4;

        $r5 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d1);

        $r2[1] = $r5;

        $r6 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d2);

        $r2[2] = $r6;

        $r7 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d3);

        $r2[3] = $r7;

        $r8 = staticinvoke <org.apache.commons.math.MathRuntimeException: java.lang.IllegalArgumentException createIllegalArgumentException(org.apache.commons.math.exception.util.Localizable,java.lang.Object[])>($r3, $r2);

        throw $r8;

     label3:
        $b1 = d4 cmpg 0.0;

        if $b1 >= 0 goto label4;

        d10 = specialinvoke r0.<org.apache.commons.math.analysis.solvers.BrentSolver: double solve(org.apache.commons.math.analysis.UnivariateRealFunction,double,double,double,double,double,double)>(r1, d0, d2, d1, d3, d0, d2);

        goto label6;

     label4:
        $b2 = d2 cmpl 0.0;

        if $b2 != 0 goto label5;

        d10 = d0;

        goto label6;

     label5:
        d10 = d1;

     label6:
        return d10;
    }

    public double solve(int, org.apache.commons.math.analysis.UnivariateRealFunction, double, double) throws org.apache.commons.math.MaxIterationsExceededException, org.apache.commons.math.FunctionEvaluationException
    {
        org.apache.commons.math.analysis.solvers.BrentSolver r0;
        int i0;
        org.apache.commons.math.analysis.UnivariateRealFunction r1;
        double d0, d1, $d2;

        r0 := @this: org.apache.commons.math.analysis.solvers.BrentSolver;

        i0 := @parameter0: int;

        r1 := @parameter1: org.apache.commons.math.analysis.UnivariateRealFunction;

        d0 := @parameter2: double;

        d1 := @parameter3: double;

        virtualinvoke r0.<org.apache.commons.math.analysis.solvers.BrentSolver: void setMaximalIterationCount(int)>(i0);

        $d2 = virtualinvoke r0.<org.apache.commons.math.analysis.solvers.BrentSolver: double solve(org.apache.commons.math.analysis.UnivariateRealFunction,double,double)>(r1, d0, d1);

        return $d2;
    }

    private double solve(org.apache.commons.math.analysis.UnivariateRealFunction, double, double, double, double, double, double) throws org.apache.commons.math.MaxIterationsExceededException, org.apache.commons.math.FunctionEvaluationException
    {
        org.apache.commons.math.analysis.solvers.BrentSolver r0;
        org.apache.commons.math.analysis.UnivariateRealFunction r1;
        double d0, d1, d2, d3, d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21, $d22, $d23, $d24, $d25, $d26, $d27, $d28, $d29, $d30, $d31, $d32, $d33, $d34, $d35, $d36, $d37, $d38, $d39, $d40, d41, d42, d43, d44, d45, d46, d47, d48, d49, d50, $d51;
        int $i0, $i1, i14;
        org.apache.commons.math.MaxIterationsExceededException $r2;
        byte $b2, $b3, $b4, $b5, $b6, $b7, $b8, $b9, $b10, $b11, $b12, $b13, $b15, $b16;
        boolean $z0, $z1;

        r0 := @this: org.apache.commons.math.analysis.solvers.BrentSolver;

        r1 := @parameter0: org.apache.commons.math.analysis.UnivariateRealFunction;

        d41 := @parameter1: double;

        d42 := @parameter2: double;

        d43 := @parameter3: double;

        d44 := @parameter4: double;

        d45 := @parameter5: double;

        d46 := @parameter6: double;

        d47 = d43 - d41;

        d48 = d47;

        i14 = 0;

     label01:
        $i0 = r0.<org.apache.commons.math.analysis.solvers.BrentSolver: int maximalIterationCount>;

        if i14 >= $i0 goto label22;

        $d5 = staticinvoke <org.apache.commons.math.util.FastMath: double abs(double)>(d46);

        $d6 = staticinvoke <org.apache.commons.math.util.FastMath: double abs(double)>(d44);

        $b2 = $d5 cmpg $d6;

        if $b2 >= 0 goto label02;

        d41 = d43;

        d43 = d45;

        d45 = d41;

        d42 = d44;

        d44 = d46;

        d46 = d42;

     label02:
        $d7 = staticinvoke <org.apache.commons.math.util.FastMath: double abs(double)>(d44);

        $d8 = r0.<org.apache.commons.math.analysis.solvers.BrentSolver: double functionValueAccuracy>;

        $b3 = $d7 cmpg $d8;

        if $b3 > 0 goto label03;

        virtualinvoke r0.<org.apache.commons.math.analysis.solvers.BrentSolver: void setResult(double,int)>(d43, i14);

        $d40 = r0.<org.apache.commons.math.analysis.solvers.BrentSolver: double result>;

        return $d40;

     label03:
        d0 = d45 - d43;

        $d9 = r0.<org.apache.commons.math.analysis.solvers.BrentSolver: double relativeAccuracy>;

        $d10 = staticinvoke <org.apache.commons.math.util.FastMath: double abs(double)>(d43);

        $d12 = $d9 * $d10;

        $d11 = r0.<org.apache.commons.math.analysis.solvers.BrentSolver: double absoluteAccuracy>;

        d1 = staticinvoke <org.apache.commons.math.util.FastMath: double max(double,double)>($d12, $d11);

        $d13 = staticinvoke <org.apache.commons.math.util.FastMath: double abs(double)>(d0);

        $b4 = $d13 cmpg d1;

        if $b4 > 0 goto label04;

        virtualinvoke r0.<org.apache.commons.math.analysis.solvers.BrentSolver: void setResult(double,int)>(d43, i14);

        $d39 = r0.<org.apache.commons.math.analysis.solvers.BrentSolver: double result>;

        return $d39;

     label04:
        $d14 = staticinvoke <org.apache.commons.math.util.FastMath: double abs(double)>(d48);

        $b5 = $d14 cmpg d1;

        if $b5 < 0 goto label05;

        $d17 = staticinvoke <org.apache.commons.math.util.FastMath: double abs(double)>(d42);

        $d18 = staticinvoke <org.apache.commons.math.util.FastMath: double abs(double)>(d44);

        $b9 = $d17 cmpg $d18;

        if $b9 > 0 goto label06;

     label05:
        d47 = 0.5 * d0;

        d48 = d47;

        goto label13;

     label06:
        d2 = d44 / d42;

        $b10 = d41 cmpl d45;

        if $b10 != 0 goto label07;

        d49 = d0 * d2;

        d50 = 1.0 - d2;

        goto label08;

     label07:
        d3 = d42 / d46;

        d4 = d44 / d46;

        $d20 = d0 * d3;

        $d19 = d3 - d4;

        $d24 = $d20 * $d19;

        $d22 = d43 - d41;

        $d21 = d4 - 1.0;

        $d23 = $d22 * $d21;

        $d25 = $d24 - $d23;

        d49 = d2 * $d25;

        $d27 = d3 - 1.0;

        $d26 = d4 - 1.0;

        $d29 = $d27 * $d26;

        $d28 = d2 - 1.0;

        d50 = $d29 * $d28;

     label08:
        $b11 = d49 cmpl 0.0;

        if $b11 <= 0 goto label09;

        d50 = neg d50;

        goto label10;

     label09:
        d49 = neg d49;

     label10:
        $d32 = 2.0 * d49;

        $d30 = 1.5 * d0;

        $d33 = $d30 * d50;

        $d31 = d1 * d50;

        $d34 = staticinvoke <org.apache.commons.math.util.FastMath: double abs(double)>($d31);

        $d35 = $d33 - $d34;

        $b12 = $d32 cmpl $d35;

        if $b12 >= 0 goto label11;

        $d36 = 0.5 * d48;

        $d37 = $d36 * d50;

        $d38 = staticinvoke <org.apache.commons.math.util.FastMath: double abs(double)>($d37);

        $b13 = d49 cmpl $d38;

        if $b13 < 0 goto label12;

     label11:
        d47 = 0.5 * d0;

        d48 = d47;

        goto label13;

     label12:
        d48 = d47;

        d47 = d49 / d50;

     label13:
        d41 = d43;

        d42 = d44;

        $d51 = staticinvoke <org.apache.commons.math.util.FastMath: double abs(double)>(d47);

        $b15 = $d51 cmpl d1;

        if $b15 <= 0 goto label14;

        d43 = d43 + d47;

        goto label16;

     label14:
        $b6 = d0 cmpl 0.0;

        if $b6 <= 0 goto label15;

        $d16 = 0.5 * d1;

        d43 = d43 + $d16;

        goto label16;

     label15:
        $b7 = d0 cmpg 0.0;

        if $b7 > 0 goto label16;

        $d15 = 0.5 * d1;

        d43 = d43 - $d15;

     label16:
        d44 = interfaceinvoke r1.<org.apache.commons.math.analysis.UnivariateRealFunction: double value(double)>(d43);

        $b16 = d44 cmpl 0.0;

        if $b16 <= 0 goto label17;

        $z0 = 1;

        goto label18;

     label17:
        $z0 = 0;

     label18:
        $b8 = d46 cmpl 0.0;

        if $b8 <= 0 goto label19;

        $z1 = 1;

        goto label20;

     label19:
        $z1 = 0;

     label20:
        if $z0 != $z1 goto label21;

        d45 = d41;

        d46 = d42;

        d47 = d43 - d41;

        d48 = d47;

     label21:
        i14 = i14 + 1;

        goto label01;

     label22:
        $r2 = new org.apache.commons.math.MaxIterationsExceededException;

        $i1 = r0.<org.apache.commons.math.analysis.solvers.BrentSolver: int maximalIterationCount>;

        specialinvoke $r2.<org.apache.commons.math.MaxIterationsExceededException: void <init>(int)>($i1);

        throw $r2;
    }

    public static void <clinit>()
    {
        <org.apache.commons.math.analysis.solvers.BrentSolver: long serialVersionUID> = 7694577816772532779L;

        <org.apache.commons.math.analysis.solvers.BrentSolver: int DEFAULT_MAXIMUM_ITERATIONS> = 100;

        <org.apache.commons.math.analysis.solvers.BrentSolver: double DEFAULT_ABSOLUTE_ACCURACY> = 1.0E-6;

        return;
    }
}
