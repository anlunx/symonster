public abstract class com.opengamma.analytics.financial.interestrate.method.CalibrationEngine extends java.lang.Object
{
    private final java.util.List _basket;
    private final java.util.List _method;
    private final java.util.List _calibrationPrice;

    public void <init>()
    {
        com.opengamma.analytics.financial.interestrate.method.CalibrationEngine r0;
        java.util.ArrayList $r1, $r2, $r3;

        r0 := @this: com.opengamma.analytics.financial.interestrate.method.CalibrationEngine;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        r0.<com.opengamma.analytics.financial.interestrate.method.CalibrationEngine: java.util.List _basket> = $r1;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        r0.<com.opengamma.analytics.financial.interestrate.method.CalibrationEngine: java.util.List _method> = $r2;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        r0.<com.opengamma.analytics.financial.interestrate.method.CalibrationEngine: java.util.List _calibrationPrice> = $r3;

        return;
    }

    public void addInstrument(com.opengamma.analytics.financial.interestrate.InstrumentDerivative, com.opengamma.analytics.financial.interestrate.method.PricingMethod)
    {
        com.opengamma.analytics.financial.interestrate.method.CalibrationEngine r0;
        com.opengamma.analytics.financial.interestrate.InstrumentDerivative r1;
        com.opengamma.analytics.financial.interestrate.method.PricingMethod r2;
        java.util.List $r3, $r4, $r5;
        java.lang.Double $r6;

        r0 := @this: com.opengamma.analytics.financial.interestrate.method.CalibrationEngine;

        r1 := @parameter0: com.opengamma.analytics.financial.interestrate.InstrumentDerivative;

        r2 := @parameter1: com.opengamma.analytics.financial.interestrate.method.PricingMethod;

        $r3 = r0.<com.opengamma.analytics.financial.interestrate.method.CalibrationEngine: java.util.List _basket>;

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>(r1);

        $r4 = r0.<com.opengamma.analytics.financial.interestrate.method.CalibrationEngine: java.util.List _method>;

        interfaceinvoke $r4.<java.util.List: boolean add(java.lang.Object)>(r2);

        $r5 = r0.<com.opengamma.analytics.financial.interestrate.method.CalibrationEngine: java.util.List _calibrationPrice>;

        $r6 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(0.0);

        interfaceinvoke $r5.<java.util.List: boolean add(java.lang.Object)>($r6);

        return;
    }

    public void addInstrument(com.opengamma.analytics.financial.interestrate.InstrumentDerivative[], com.opengamma.analytics.financial.interestrate.method.PricingMethod)
    {
        com.opengamma.analytics.financial.interestrate.method.CalibrationEngine r0;
        com.opengamma.analytics.financial.interestrate.InstrumentDerivative[] r1;
        com.opengamma.analytics.financial.interestrate.method.PricingMethod r2;
        int i0, i1;
        com.opengamma.analytics.financial.interestrate.InstrumentDerivative r4;

        r0 := @this: com.opengamma.analytics.financial.interestrate.method.CalibrationEngine;

        r1 := @parameter0: com.opengamma.analytics.financial.interestrate.InstrumentDerivative[];

        r2 := @parameter1: com.opengamma.analytics.financial.interestrate.method.PricingMethod;

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object,java.lang.String)>(r1, "Instrument");

        i0 = lengthof r1;

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        r4 = r1[i1];

        virtualinvoke r0.<com.opengamma.analytics.financial.interestrate.method.CalibrationEngine: void addInstrument(com.opengamma.analytics.financial.interestrate.InstrumentDerivative,com.opengamma.analytics.financial.interestrate.method.PricingMethod)>(r4, r2);

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    public void computeCalibrationPrice(com.opengamma.analytics.financial.interestrate.YieldCurveBundle)
    {
        com.opengamma.analytics.financial.interestrate.method.CalibrationEngine r0;
        com.opengamma.analytics.financial.interestrate.YieldCurveBundle r1;
        int i0, i1;
        double d0;
        java.util.List $r2, $r3, $r5, $r10;
        java.lang.Object $r4, $r7;
        com.opengamma.analytics.financial.interestrate.method.PricingMethod $r6;
        com.opengamma.analytics.financial.interestrate.InstrumentDerivative $r8;
        com.opengamma.util.money.CurrencyAmount $r9;
        java.lang.Double $r11;

        r0 := @this: com.opengamma.analytics.financial.interestrate.method.CalibrationEngine;

        r1 := @parameter0: com.opengamma.analytics.financial.interestrate.YieldCurveBundle;

        $r2 = r0.<com.opengamma.analytics.financial.interestrate.method.CalibrationEngine: java.util.List _basket>;

        i0 = interfaceinvoke $r2.<java.util.List: int size()>();

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        $r3 = r0.<com.opengamma.analytics.financial.interestrate.method.CalibrationEngine: java.util.List _method>;

        $r4 = interfaceinvoke $r3.<java.util.List: java.lang.Object get(int)>(i1);

        $r6 = (com.opengamma.analytics.financial.interestrate.method.PricingMethod) $r4;

        $r5 = r0.<com.opengamma.analytics.financial.interestrate.method.CalibrationEngine: java.util.List _basket>;

        $r7 = interfaceinvoke $r5.<java.util.List: java.lang.Object get(int)>(i1);

        $r8 = (com.opengamma.analytics.financial.interestrate.InstrumentDerivative) $r7;

        $r9 = interfaceinvoke $r6.<com.opengamma.analytics.financial.interestrate.method.PricingMethod: com.opengamma.util.money.CurrencyAmount presentValue(com.opengamma.analytics.financial.interestrate.InstrumentDerivative,com.opengamma.analytics.financial.interestrate.YieldCurveBundle)>($r8, r1);

        d0 = virtualinvoke $r9.<com.opengamma.util.money.CurrencyAmount: double getAmount()>();

        $r10 = r0.<com.opengamma.analytics.financial.interestrate.method.CalibrationEngine: java.util.List _calibrationPrice>;

        $r11 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d0);

        interfaceinvoke $r10.<java.util.List: java.lang.Object set(int,java.lang.Object)>(i1, $r11);

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    public abstract void calibrate(com.opengamma.analytics.financial.interestrate.YieldCurveBundle);

    public java.util.List getBasket()
    {
        com.opengamma.analytics.financial.interestrate.method.CalibrationEngine r0;
        java.util.List $r1;

        r0 := @this: com.opengamma.analytics.financial.interestrate.method.CalibrationEngine;

        $r1 = r0.<com.opengamma.analytics.financial.interestrate.method.CalibrationEngine: java.util.List _basket>;

        return $r1;
    }

    public java.util.List getMethod()
    {
        com.opengamma.analytics.financial.interestrate.method.CalibrationEngine r0;
        java.util.List $r1;

        r0 := @this: com.opengamma.analytics.financial.interestrate.method.CalibrationEngine;

        $r1 = r0.<com.opengamma.analytics.financial.interestrate.method.CalibrationEngine: java.util.List _method>;

        return $r1;
    }

    public java.util.List getCalibrationPrice()
    {
        com.opengamma.analytics.financial.interestrate.method.CalibrationEngine r0;
        java.util.List $r1;

        r0 := @this: com.opengamma.analytics.financial.interestrate.method.CalibrationEngine;

        $r1 = r0.<com.opengamma.analytics.financial.interestrate.method.CalibrationEngine: java.util.List _calibrationPrice>;

        return $r1;
    }
}
