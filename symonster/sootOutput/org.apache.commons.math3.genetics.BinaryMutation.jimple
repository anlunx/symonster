public class org.apache.commons.math3.genetics.BinaryMutation extends java.lang.Object implements org.apache.commons.math3.genetics.MutationPolicy
{

    public void <init>()
    {
        org.apache.commons.math3.genetics.BinaryMutation r0;

        r0 := @this: org.apache.commons.math3.genetics.BinaryMutation;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public org.apache.commons.math3.genetics.Chromosome mutate(org.apache.commons.math3.genetics.Chromosome) throws org.apache.commons.math3.exception.MathIllegalArgumentException
    {
        org.apache.commons.math3.genetics.BinaryMutation r0;
        org.apache.commons.math3.genetics.Chromosome r1;
        org.apache.commons.math3.genetics.BinaryChromosome r2;
        int i0, $i1, $i2;
        org.apache.commons.math3.genetics.AbstractListChromosome r4;
        boolean $z0;
        java.util.ArrayList $r5;
        java.util.List $r6, $r8;
        org.apache.commons.math3.random.RandomGenerator $r7;
        java.lang.Object $r9;
        java.lang.Integer $r10, $r11;
        org.apache.commons.math3.exception.MathIllegalArgumentException $r14;
        java.lang.Object[] $r15;
        org.apache.commons.math3.exception.util.LocalizedFormats $r16;
        byte $b4;

        r0 := @this: org.apache.commons.math3.genetics.BinaryMutation;

        r1 := @parameter0: org.apache.commons.math3.genetics.Chromosome;

        $z0 = r1 instanceof org.apache.commons.math3.genetics.BinaryChromosome;

        if $z0 != 0 goto label1;

        $r14 = new org.apache.commons.math3.exception.MathIllegalArgumentException;

        $r16 = <org.apache.commons.math3.exception.util.LocalizedFormats: org.apache.commons.math3.exception.util.LocalizedFormats INVALID_BINARY_CHROMOSOME>;

        $r15 = newarray (java.lang.Object)[0];

        specialinvoke $r14.<org.apache.commons.math3.exception.MathIllegalArgumentException: void <init>(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])>($r16, $r15);

        throw $r14;

     label1:
        r2 = (org.apache.commons.math3.genetics.BinaryChromosome) r1;

        $r5 = new java.util.ArrayList;

        $r6 = virtualinvoke r2.<org.apache.commons.math3.genetics.BinaryChromosome: java.util.List getRepresentation()>();

        specialinvoke $r5.<java.util.ArrayList: void <init>(java.util.Collection)>($r6);

        $r7 = staticinvoke <org.apache.commons.math3.genetics.GeneticAlgorithm: org.apache.commons.math3.random.RandomGenerator getRandomGenerator()>();

        $i1 = virtualinvoke r2.<org.apache.commons.math3.genetics.BinaryChromosome: int getLength()>();

        i0 = interfaceinvoke $r7.<org.apache.commons.math3.random.RandomGenerator: int nextInt(int)>($i1);

        $r8 = virtualinvoke r2.<org.apache.commons.math3.genetics.BinaryChromosome: java.util.List getRepresentation()>();

        $r9 = interfaceinvoke $r8.<java.util.List: java.lang.Object get(int)>(i0);

        $r10 = (java.lang.Integer) $r9;

        $i2 = virtualinvoke $r10.<java.lang.Integer: int intValue()>();

        if $i2 != 0 goto label2;

        $b4 = 1;

        goto label3;

     label2:
        $b4 = 0;

     label3:
        $r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($b4);

        interfaceinvoke $r5.<java.util.List: java.lang.Object set(int,java.lang.Object)>(i0, $r11);

        r4 = virtualinvoke r2.<org.apache.commons.math3.genetics.BinaryChromosome: org.apache.commons.math3.genetics.AbstractListChromosome newFixedLengthChromosome(java.util.List)>($r5);

        return r4;
    }
}
