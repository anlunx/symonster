public class org.apache.commons.math3.ml.neuralnet.FeatureInitializerFactory extends java.lang.Object
{

    private void <init>()
    {
        org.apache.commons.math3.ml.neuralnet.FeatureInitializerFactory r0;

        r0 := @this: org.apache.commons.math3.ml.neuralnet.FeatureInitializerFactory;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static org.apache.commons.math3.ml.neuralnet.FeatureInitializer uniform(org.apache.commons.math3.random.RandomGenerator, double, double)
    {
        org.apache.commons.math3.random.RandomGenerator r0;
        double d0, d1;
        org.apache.commons.math3.distribution.UniformRealDistribution $r1;
        org.apache.commons.math3.analysis.function.Constant $r2;
        org.apache.commons.math3.ml.neuralnet.FeatureInitializer $r3, $r4;

        r0 := @parameter0: org.apache.commons.math3.random.RandomGenerator;

        d0 := @parameter1: double;

        d1 := @parameter2: double;

        $r1 = new org.apache.commons.math3.distribution.UniformRealDistribution;

        specialinvoke $r1.<org.apache.commons.math3.distribution.UniformRealDistribution: void <init>(org.apache.commons.math3.random.RandomGenerator,double,double)>(r0, d0, d1);

        $r2 = new org.apache.commons.math3.analysis.function.Constant;

        specialinvoke $r2.<org.apache.commons.math3.analysis.function.Constant: void <init>(double)>(0.0);

        $r3 = staticinvoke <org.apache.commons.math3.ml.neuralnet.FeatureInitializerFactory: org.apache.commons.math3.ml.neuralnet.FeatureInitializer function(org.apache.commons.math3.analysis.UnivariateFunction,double,double)>($r2, 0.0, 0.0);

        $r4 = staticinvoke <org.apache.commons.math3.ml.neuralnet.FeatureInitializerFactory: org.apache.commons.math3.ml.neuralnet.FeatureInitializer randomize(org.apache.commons.math3.distribution.RealDistribution,org.apache.commons.math3.ml.neuralnet.FeatureInitializer)>($r1, $r3);

        return $r4;
    }

    public static org.apache.commons.math3.ml.neuralnet.FeatureInitializer uniform(double, double)
    {
        double d0, d1;
        org.apache.commons.math3.distribution.UniformRealDistribution $r0;
        org.apache.commons.math3.analysis.function.Constant $r1;
        org.apache.commons.math3.ml.neuralnet.FeatureInitializer $r2, $r3;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        $r0 = new org.apache.commons.math3.distribution.UniformRealDistribution;

        specialinvoke $r0.<org.apache.commons.math3.distribution.UniformRealDistribution: void <init>(double,double)>(d0, d1);

        $r1 = new org.apache.commons.math3.analysis.function.Constant;

        specialinvoke $r1.<org.apache.commons.math3.analysis.function.Constant: void <init>(double)>(0.0);

        $r2 = staticinvoke <org.apache.commons.math3.ml.neuralnet.FeatureInitializerFactory: org.apache.commons.math3.ml.neuralnet.FeatureInitializer function(org.apache.commons.math3.analysis.UnivariateFunction,double,double)>($r1, 0.0, 0.0);

        $r3 = staticinvoke <org.apache.commons.math3.ml.neuralnet.FeatureInitializerFactory: org.apache.commons.math3.ml.neuralnet.FeatureInitializer randomize(org.apache.commons.math3.distribution.RealDistribution,org.apache.commons.math3.ml.neuralnet.FeatureInitializer)>($r0, $r2);

        return $r3;
    }

    public static org.apache.commons.math3.ml.neuralnet.FeatureInitializer function(org.apache.commons.math3.analysis.UnivariateFunction, double, double)
    {
        org.apache.commons.math3.analysis.UnivariateFunction r0;
        double d0, d1;
        org.apache.commons.math3.ml.neuralnet.FeatureInitializerFactory$1 $r1;

        r0 := @parameter0: org.apache.commons.math3.analysis.UnivariateFunction;

        d0 := @parameter1: double;

        d1 := @parameter2: double;

        $r1 = new org.apache.commons.math3.ml.neuralnet.FeatureInitializerFactory$1;

        specialinvoke $r1.<org.apache.commons.math3.ml.neuralnet.FeatureInitializerFactory$1: void <init>(double,org.apache.commons.math3.analysis.UnivariateFunction,double)>(d0, r0, d1);

        return $r1;
    }

    public static org.apache.commons.math3.ml.neuralnet.FeatureInitializer randomize(org.apache.commons.math3.distribution.RealDistribution, org.apache.commons.math3.ml.neuralnet.FeatureInitializer)
    {
        org.apache.commons.math3.distribution.RealDistribution r0;
        org.apache.commons.math3.ml.neuralnet.FeatureInitializer r1;
        org.apache.commons.math3.ml.neuralnet.FeatureInitializerFactory$2 $r2;

        r0 := @parameter0: org.apache.commons.math3.distribution.RealDistribution;

        r1 := @parameter1: org.apache.commons.math3.ml.neuralnet.FeatureInitializer;

        $r2 = new org.apache.commons.math3.ml.neuralnet.FeatureInitializerFactory$2;

        specialinvoke $r2.<org.apache.commons.math3.ml.neuralnet.FeatureInitializerFactory$2: void <init>(org.apache.commons.math3.ml.neuralnet.FeatureInitializer,org.apache.commons.math3.distribution.RealDistribution)>(r1, r0);

        return $r2;
    }
}
