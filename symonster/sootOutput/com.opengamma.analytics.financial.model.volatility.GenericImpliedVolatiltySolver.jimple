public class com.opengamma.analytics.financial.model.volatility.GenericImpliedVolatiltySolver extends java.lang.Object
{
    private static final int MAX_ITERATIONS;
    private static final double VOL_TOL;
    private static final double VOL_GUESS;
    private static final double BRACKET_STEP;
    private static final double MAX_CHANGE;
    private final com.opengamma.analytics.math.function.Function1D _priceFunc;
    private final com.opengamma.analytics.math.function.Function1D _priceAndVegaFunc;

    public void <init>(com.opengamma.analytics.math.function.Function1D)
    {
        com.opengamma.analytics.financial.model.volatility.GenericImpliedVolatiltySolver r0;
        com.opengamma.analytics.math.function.Function1D r1;
        com.opengamma.analytics.financial.model.volatility.GenericImpliedVolatiltySolver$1 $r3;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.GenericImpliedVolatiltySolver;

        r1 := @parameter0: com.opengamma.analytics.math.function.Function1D;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "priceAndVegaFunc");

        r0.<com.opengamma.analytics.financial.model.volatility.GenericImpliedVolatiltySolver: com.opengamma.analytics.math.function.Function1D _priceAndVegaFunc> = r1;

        $r3 = new com.opengamma.analytics.financial.model.volatility.GenericImpliedVolatiltySolver$1;

        specialinvoke $r3.<com.opengamma.analytics.financial.model.volatility.GenericImpliedVolatiltySolver$1: void <init>(com.opengamma.analytics.financial.model.volatility.GenericImpliedVolatiltySolver)>(r0);

        r0.<com.opengamma.analytics.financial.model.volatility.GenericImpliedVolatiltySolver: com.opengamma.analytics.math.function.Function1D _priceFunc> = $r3;

        return;
    }

    public void <init>(com.opengamma.analytics.math.function.Function1D, com.opengamma.analytics.math.function.Function1D)
    {
        com.opengamma.analytics.financial.model.volatility.GenericImpliedVolatiltySolver r0;
        com.opengamma.analytics.math.function.Function1D r1, r2;
        com.opengamma.analytics.financial.model.volatility.GenericImpliedVolatiltySolver$2 $r5;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.GenericImpliedVolatiltySolver;

        r1 := @parameter0: com.opengamma.analytics.math.function.Function1D;

        r2 := @parameter1: com.opengamma.analytics.math.function.Function1D;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "priceFunc");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, "vegaFunc");

        r0.<com.opengamma.analytics.financial.model.volatility.GenericImpliedVolatiltySolver: com.opengamma.analytics.math.function.Function1D _priceFunc> = r1;

        $r5 = new com.opengamma.analytics.financial.model.volatility.GenericImpliedVolatiltySolver$2;

        specialinvoke $r5.<com.opengamma.analytics.financial.model.volatility.GenericImpliedVolatiltySolver$2: void <init>(com.opengamma.analytics.financial.model.volatility.GenericImpliedVolatiltySolver,com.opengamma.analytics.math.function.Function1D,com.opengamma.analytics.math.function.Function1D)>(r0, r1, r2);

        r0.<com.opengamma.analytics.financial.model.volatility.GenericImpliedVolatiltySolver: com.opengamma.analytics.math.function.Function1D _priceAndVegaFunc> = $r5;

        return;
    }

    public double impliedVolatility(double)
    {
        com.opengamma.analytics.financial.model.volatility.GenericImpliedVolatiltySolver r0;
        double d0, $d1;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.GenericImpliedVolatiltySolver;

        d0 := @parameter0: double;

        $d1 = virtualinvoke r0.<com.opengamma.analytics.financial.model.volatility.GenericImpliedVolatiltySolver: double impliedVolatility(double,double)>(d0, 0.3);

        return $d1;
    }

    public double impliedVolatility(double, double)
    {
        com.opengamma.analytics.financial.model.volatility.GenericImpliedVolatiltySolver r0;
        double d0, d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21, $d22, $d23, $d24, d25, d26, d27, d28, d29, d30, $d31, d32, d33;
        byte $b0, $b1, $b2, $b3, $b4, $b5, $b6, $b9;
        java.lang.Object[] $r1, $r3;
        java.lang.Double $r2, $r4, $r6, $r9;
        boolean $z0, $z1, $z2, $z3, $z4, $z6;
        com.opengamma.analytics.math.function.Function1D $r5, $r8;
        java.lang.Object $r7, $r10;
        int $i7, i8;
        com.opengamma.analytics.math.MathException $r11;
        java.lang.IllegalArgumentException $r12;
        java.lang.StringBuilder $r13, $r15, $r16, $r17, $r18;
        java.lang.String $r14, $r19;
        double[] r20, r22, r23;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.GenericImpliedVolatiltySolver;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        $b0 = d1 cmpl 0.0;

        if $b0 < 0 goto label01;

        $z3 = 1;

        goto label02;

     label01:
        $z3 = 0;

     label02:
        $r1 = newarray (java.lang.Object)[1];

        $r2 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d1);

        $r1[0] = $r2;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String,java.lang.Object[])>($z3, "volGuess must be positive; have {}", $r1);

        $z0 = staticinvoke <com.google.common.primitives.Doubles: boolean isFinite(double)>(d1);

        $r3 = newarray (java.lang.Object)[1];

        $r4 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d1);

        $r3[0] = $r4;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String,java.lang.Object[])>($z0, "volGuess must be finite; have {} ", $r3);

     label03:
        r20 = specialinvoke r0.<com.opengamma.analytics.financial.model.volatility.GenericImpliedVolatiltySolver: double[] bracketRoot(double,double)>(d0, d1);

        d25 = r20[0];

        d26 = r20[1];

     label04:
        goto label06;

     label05:
        $r11 := @caughtexception;

        $r12 = new java.lang.IllegalArgumentException;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r11.<com.opengamma.analytics.math.MathException: java.lang.String toString()>();

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" No implied Volatility for this price. [price: ");

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>(d0);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r12.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r19);

        throw $r12;

     label06:
        $d2 = d25 + d26;

        d27 = $d2 / 2.0;

        $r5 = r0.<com.opengamma.analytics.financial.model.volatility.GenericImpliedVolatiltySolver: com.opengamma.analytics.math.function.Function1D _priceAndVegaFunc>;

        $r6 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d27);

        $r7 = virtualinvoke $r5.<com.opengamma.analytics.math.function.Function1D: java.lang.Object evaluate(java.lang.Object)>($r6);

        r22 = (double[]) $r7;

        $d3 = r22[1];

        $b1 = $d3 cmpl 0.0;

        if $b1 == 0 goto label07;

        $d5 = r22[1];

        $z1 = staticinvoke <java.lang.Double: boolean isNaN(double)>($d5);

        if $z1 == 0 goto label08;

     label07:
        $d4 = specialinvoke r0.<com.opengamma.analytics.financial.model.volatility.GenericImpliedVolatiltySolver: double solveByBisection(double,double,double)>(d0, d25, d26);

        return $d4;

     label08:
        $d6 = r22[0];

        d28 = $d6 - d0;

        $b2 = d28 cmpl 0.0;

        if $b2 <= 0 goto label09;

        $z4 = 1;

        goto label10;

     label09:
        $z4 = 0;

     label10:
        if $z4 == 0 goto label11;

        d26 = d27;

        goto label12;

     label11:
        d25 = d27;

     label12:
        $d8 = neg d28;

        $d7 = r22[1];

        d29 = $d8 / $d7;

        $b3 = d29 cmpl 0.0;

        if $b3 <= 0 goto label13;

        $d23 = d26 - d27;

        $d24 = staticinvoke <java.lang.Math: double min(double,double)>(d29, $d23);

        d30 = staticinvoke <java.lang.Math: double min(double,double)>(0.5, $d24);

        goto label14;

     label13:
        $d9 = d25 - d27;

        $d10 = staticinvoke <java.lang.Math: double max(double,double)>(d29, $d9);

        d30 = staticinvoke <java.lang.Math: double max(double,double)>(-0.5, $d10);

     label14:
        i8 = 0;

     label15:
        $d31 = staticinvoke <java.lang.Math: double abs(double)>(d30);

        $b9 = $d31 cmpl 1.0E-9;

        if $b9 <= 0 goto label24;

        d27 = d27 + d30;

        $r8 = r0.<com.opengamma.analytics.financial.model.volatility.GenericImpliedVolatiltySolver: com.opengamma.analytics.math.function.Function1D _priceAndVegaFunc>;

        $r9 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d27);

        $r10 = virtualinvoke $r8.<com.opengamma.analytics.math.function.Function1D: java.lang.Object evaluate(java.lang.Object)>($r9);

        r23 = (double[]) $r10;

        $d12 = r23[1];

        $b4 = $d12 cmpl 0.0;

        if $b4 == 0 goto label16;

        $d14 = r23[1];

        $z2 = staticinvoke <java.lang.Double: boolean isNaN(double)>($d14);

        if $z2 == 0 goto label17;

     label16:
        $d13 = specialinvoke r0.<com.opengamma.analytics.financial.model.volatility.GenericImpliedVolatiltySolver: double solveByBisection(double,double,double)>(d0, d25, d26);

        return $d13;

     label17:
        $d15 = r23[0];

        d32 = $d15 - d0;

        $b5 = d32 cmpl 0.0;

        if $b5 <= 0 goto label18;

        $z6 = 1;

        goto label19;

     label18:
        $z6 = 0;

     label19:
        if $z6 == 0 goto label20;

        d26 = d27;

        goto label21;

     label20:
        d25 = d27;

     label21:
        $d17 = neg d32;

        $d16 = r23[1];

        d33 = $d17 / $d16;

        $b6 = d33 cmpl 0.0;

        if $b6 <= 0 goto label22;

        $d21 = d26 - d27;

        $d22 = staticinvoke <java.lang.Math: double min(double,double)>(d33, $d21);

        d30 = staticinvoke <java.lang.Math: double min(double,double)>(0.5, $d22);

        goto label23;

     label22:
        $d18 = d25 - d27;

        $d19 = staticinvoke <java.lang.Math: double max(double,double)>(d33, $d18);

        d30 = staticinvoke <java.lang.Math: double max(double,double)>(-0.5, $d19);

     label23:
        $i7 = i8;

        i8 = i8 + 1;

        if $i7 <= 20 goto label15;

        $d20 = specialinvoke r0.<com.opengamma.analytics.financial.model.volatility.GenericImpliedVolatiltySolver: double solveByBisection(double,double,double)>(d0, d25, d26);

        return $d20;

     label24:
        $d11 = d27 + d30;

        return $d11;

        catch com.opengamma.analytics.math.MathException from label03 to label04 with label05;
    }

    private double[] bracketRoot(double, double)
    {
        com.opengamma.analytics.financial.model.volatility.GenericImpliedVolatiltySolver r0;
        double d0, d1, $d2, $d3, $d4;
        com.opengamma.analytics.math.rootfinding.BracketRoot $r3;
        com.opengamma.analytics.financial.model.volatility.GenericImpliedVolatiltySolver$3 $r4;
        double[] $r5;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.GenericImpliedVolatiltySolver;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        $r3 = new com.opengamma.analytics.math.rootfinding.BracketRoot;

        specialinvoke $r3.<com.opengamma.analytics.math.rootfinding.BracketRoot: void <init>()>();

        $r4 = new com.opengamma.analytics.financial.model.volatility.GenericImpliedVolatiltySolver$3;

        specialinvoke $r4.<com.opengamma.analytics.financial.model.volatility.GenericImpliedVolatiltySolver$3: void <init>(com.opengamma.analytics.financial.model.volatility.GenericImpliedVolatiltySolver,double)>(r0, d0);

        $d2 = d1 - 0.1;

        $d3 = staticinvoke <java.lang.Math: double max(double,double)>(0.0, $d2);

        $d4 = d1 + 0.1;

        $r5 = virtualinvoke $r3.<com.opengamma.analytics.math.rootfinding.BracketRoot: double[] getBracketedPoints(com.opengamma.analytics.math.function.Function1D,double,double,double,double)>($r4, $d3, $d4, 0.0, #Infinity);

        return $r5;
    }

    private double solveByBisection(double, double, double)
    {
        com.opengamma.analytics.financial.model.volatility.GenericImpliedVolatiltySolver r0;
        double d0, d1, d2, $d3;
        com.opengamma.analytics.math.rootfinding.BisectionSingleRootFinder $r3;
        com.opengamma.analytics.financial.model.volatility.GenericImpliedVolatiltySolver$4 $r4;
        java.lang.Double $r5, $r6, $r7;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.GenericImpliedVolatiltySolver;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        d2 := @parameter2: double;

        $r3 = new com.opengamma.analytics.math.rootfinding.BisectionSingleRootFinder;

        specialinvoke $r3.<com.opengamma.analytics.math.rootfinding.BisectionSingleRootFinder: void <init>(double)>(1.0E-9);

        $r4 = new com.opengamma.analytics.financial.model.volatility.GenericImpliedVolatiltySolver$4;

        specialinvoke $r4.<com.opengamma.analytics.financial.model.volatility.GenericImpliedVolatiltySolver$4: void <init>(com.opengamma.analytics.financial.model.volatility.GenericImpliedVolatiltySolver,double)>(r0, d0);

        $r5 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d1);

        $r6 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d2);

        $r7 = virtualinvoke $r3.<com.opengamma.analytics.math.rootfinding.BisectionSingleRootFinder: java.lang.Double getRoot(com.opengamma.analytics.math.function.Function1D,java.lang.Double,java.lang.Double)>($r4, $r5, $r6);

        $d3 = virtualinvoke $r7.<java.lang.Double: double doubleValue()>();

        return $d3;
    }

    static com.opengamma.analytics.math.function.Function1D access$000(com.opengamma.analytics.financial.model.volatility.GenericImpliedVolatiltySolver)
    {
        com.opengamma.analytics.financial.model.volatility.GenericImpliedVolatiltySolver r0;
        com.opengamma.analytics.math.function.Function1D $r1;

        r0 := @parameter0: com.opengamma.analytics.financial.model.volatility.GenericImpliedVolatiltySolver;

        $r1 = r0.<com.opengamma.analytics.financial.model.volatility.GenericImpliedVolatiltySolver: com.opengamma.analytics.math.function.Function1D _priceAndVegaFunc>;

        return $r1;
    }

    static com.opengamma.analytics.math.function.Function1D access$100(com.opengamma.analytics.financial.model.volatility.GenericImpliedVolatiltySolver)
    {
        com.opengamma.analytics.financial.model.volatility.GenericImpliedVolatiltySolver r0;
        com.opengamma.analytics.math.function.Function1D $r1;

        r0 := @parameter0: com.opengamma.analytics.financial.model.volatility.GenericImpliedVolatiltySolver;

        $r1 = r0.<com.opengamma.analytics.financial.model.volatility.GenericImpliedVolatiltySolver: com.opengamma.analytics.math.function.Function1D _priceFunc>;

        return $r1;
    }

    public static void <clinit>()
    {
        <com.opengamma.analytics.financial.model.volatility.GenericImpliedVolatiltySolver: double MAX_CHANGE> = 0.5;

        <com.opengamma.analytics.financial.model.volatility.GenericImpliedVolatiltySolver: double BRACKET_STEP> = 0.1;

        <com.opengamma.analytics.financial.model.volatility.GenericImpliedVolatiltySolver: double VOL_GUESS> = 0.3;

        <com.opengamma.analytics.financial.model.volatility.GenericImpliedVolatiltySolver: double VOL_TOL> = 1.0E-9;

        <com.opengamma.analytics.financial.model.volatility.GenericImpliedVolatiltySolver: int MAX_ITERATIONS> = 20;

        return;
    }
}
