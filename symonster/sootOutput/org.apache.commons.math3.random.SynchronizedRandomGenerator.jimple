public class org.apache.commons.math3.random.SynchronizedRandomGenerator extends java.lang.Object implements org.apache.commons.math3.random.RandomGenerator
{
    private final org.apache.commons.math3.random.RandomGenerator wrapped;

    public void <init>(org.apache.commons.math3.random.RandomGenerator)
    {
        org.apache.commons.math3.random.SynchronizedRandomGenerator r0;
        org.apache.commons.math3.random.RandomGenerator r1;

        r0 := @this: org.apache.commons.math3.random.SynchronizedRandomGenerator;

        r1 := @parameter0: org.apache.commons.math3.random.RandomGenerator;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.commons.math3.random.SynchronizedRandomGenerator: org.apache.commons.math3.random.RandomGenerator wrapped> = r1;

        return;
    }

    public synchronized void setSeed(int)
    {
        org.apache.commons.math3.random.SynchronizedRandomGenerator r0;
        int i0;
        org.apache.commons.math3.random.RandomGenerator $r1;

        r0 := @this: org.apache.commons.math3.random.SynchronizedRandomGenerator;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.commons.math3.random.SynchronizedRandomGenerator: org.apache.commons.math3.random.RandomGenerator wrapped>;

        interfaceinvoke $r1.<org.apache.commons.math3.random.RandomGenerator: void setSeed(int)>(i0);

        return;
    }

    public synchronized void setSeed(int[])
    {
        org.apache.commons.math3.random.SynchronizedRandomGenerator r0;
        int[] r1;
        org.apache.commons.math3.random.RandomGenerator $r2;

        r0 := @this: org.apache.commons.math3.random.SynchronizedRandomGenerator;

        r1 := @parameter0: int[];

        $r2 = r0.<org.apache.commons.math3.random.SynchronizedRandomGenerator: org.apache.commons.math3.random.RandomGenerator wrapped>;

        interfaceinvoke $r2.<org.apache.commons.math3.random.RandomGenerator: void setSeed(int[])>(r1);

        return;
    }

    public synchronized void setSeed(long)
    {
        org.apache.commons.math3.random.SynchronizedRandomGenerator r0;
        long l0;
        org.apache.commons.math3.random.RandomGenerator $r1;

        r0 := @this: org.apache.commons.math3.random.SynchronizedRandomGenerator;

        l0 := @parameter0: long;

        $r1 = r0.<org.apache.commons.math3.random.SynchronizedRandomGenerator: org.apache.commons.math3.random.RandomGenerator wrapped>;

        interfaceinvoke $r1.<org.apache.commons.math3.random.RandomGenerator: void setSeed(long)>(l0);

        return;
    }

    public synchronized void nextBytes(byte[])
    {
        org.apache.commons.math3.random.SynchronizedRandomGenerator r0;
        byte[] r1;
        org.apache.commons.math3.random.RandomGenerator $r2;

        r0 := @this: org.apache.commons.math3.random.SynchronizedRandomGenerator;

        r1 := @parameter0: byte[];

        $r2 = r0.<org.apache.commons.math3.random.SynchronizedRandomGenerator: org.apache.commons.math3.random.RandomGenerator wrapped>;

        interfaceinvoke $r2.<org.apache.commons.math3.random.RandomGenerator: void nextBytes(byte[])>(r1);

        return;
    }

    public synchronized int nextInt()
    {
        org.apache.commons.math3.random.SynchronizedRandomGenerator r0;
        org.apache.commons.math3.random.RandomGenerator $r1;
        int $i0;

        r0 := @this: org.apache.commons.math3.random.SynchronizedRandomGenerator;

        $r1 = r0.<org.apache.commons.math3.random.SynchronizedRandomGenerator: org.apache.commons.math3.random.RandomGenerator wrapped>;

        $i0 = interfaceinvoke $r1.<org.apache.commons.math3.random.RandomGenerator: int nextInt()>();

        return $i0;
    }

    public synchronized int nextInt(int)
    {
        org.apache.commons.math3.random.SynchronizedRandomGenerator r0;
        int i0, $i1;
        org.apache.commons.math3.random.RandomGenerator $r1;

        r0 := @this: org.apache.commons.math3.random.SynchronizedRandomGenerator;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.commons.math3.random.SynchronizedRandomGenerator: org.apache.commons.math3.random.RandomGenerator wrapped>;

        $i1 = interfaceinvoke $r1.<org.apache.commons.math3.random.RandomGenerator: int nextInt(int)>(i0);

        return $i1;
    }

    public synchronized long nextLong()
    {
        org.apache.commons.math3.random.SynchronizedRandomGenerator r0;
        org.apache.commons.math3.random.RandomGenerator $r1;
        long $l0;

        r0 := @this: org.apache.commons.math3.random.SynchronizedRandomGenerator;

        $r1 = r0.<org.apache.commons.math3.random.SynchronizedRandomGenerator: org.apache.commons.math3.random.RandomGenerator wrapped>;

        $l0 = interfaceinvoke $r1.<org.apache.commons.math3.random.RandomGenerator: long nextLong()>();

        return $l0;
    }

    public synchronized boolean nextBoolean()
    {
        org.apache.commons.math3.random.SynchronizedRandomGenerator r0;
        org.apache.commons.math3.random.RandomGenerator $r1;
        boolean $z0;

        r0 := @this: org.apache.commons.math3.random.SynchronizedRandomGenerator;

        $r1 = r0.<org.apache.commons.math3.random.SynchronizedRandomGenerator: org.apache.commons.math3.random.RandomGenerator wrapped>;

        $z0 = interfaceinvoke $r1.<org.apache.commons.math3.random.RandomGenerator: boolean nextBoolean()>();

        return $z0;
    }

    public synchronized float nextFloat()
    {
        org.apache.commons.math3.random.SynchronizedRandomGenerator r0;
        org.apache.commons.math3.random.RandomGenerator $r1;
        float $f0;

        r0 := @this: org.apache.commons.math3.random.SynchronizedRandomGenerator;

        $r1 = r0.<org.apache.commons.math3.random.SynchronizedRandomGenerator: org.apache.commons.math3.random.RandomGenerator wrapped>;

        $f0 = interfaceinvoke $r1.<org.apache.commons.math3.random.RandomGenerator: float nextFloat()>();

        return $f0;
    }

    public synchronized double nextDouble()
    {
        org.apache.commons.math3.random.SynchronizedRandomGenerator r0;
        org.apache.commons.math3.random.RandomGenerator $r1;
        double $d0;

        r0 := @this: org.apache.commons.math3.random.SynchronizedRandomGenerator;

        $r1 = r0.<org.apache.commons.math3.random.SynchronizedRandomGenerator: org.apache.commons.math3.random.RandomGenerator wrapped>;

        $d0 = interfaceinvoke $r1.<org.apache.commons.math3.random.RandomGenerator: double nextDouble()>();

        return $d0;
    }

    public synchronized double nextGaussian()
    {
        org.apache.commons.math3.random.SynchronizedRandomGenerator r0;
        org.apache.commons.math3.random.RandomGenerator $r1;
        double $d0;

        r0 := @this: org.apache.commons.math3.random.SynchronizedRandomGenerator;

        $r1 = r0.<org.apache.commons.math3.random.SynchronizedRandomGenerator: org.apache.commons.math3.random.RandomGenerator wrapped>;

        $d0 = interfaceinvoke $r1.<org.apache.commons.math3.random.RandomGenerator: double nextGaussian()>();

        return $d0;
    }
}
