public class com.opengamma.analytics.financial.equity.variance.pricing.ExpectedVarianceStaticReplicationCalculator extends java.lang.Object
{
    private static final double SMALL_TIME_CUTOFF;
    private static final double DEFAULT_TOL;
    private static final double MIN_TOL;
    private static final double MAX_TOL;
    private static final com.opengamma.analytics.math.integration.Integrator1D DEFAULT_INTEGRATOR;
    private static final com.opengamma.analytics.math.statistics.distribution.ProbabilityDistribution NORMAL;
    private final double _tol;
    private final com.opengamma.analytics.math.integration.Integrator1D _integrator;

    public void <init>()
    {
        com.opengamma.analytics.financial.equity.variance.pricing.ExpectedVarianceStaticReplicationCalculator r0;
        com.opengamma.analytics.math.integration.Integrator1D $r1;

        r0 := @this: com.opengamma.analytics.financial.equity.variance.pricing.ExpectedVarianceStaticReplicationCalculator;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.opengamma.analytics.financial.equity.variance.pricing.ExpectedVarianceStaticReplicationCalculator: double _tol> = 1.0E-9;

        $r1 = <com.opengamma.analytics.financial.equity.variance.pricing.ExpectedVarianceStaticReplicationCalculator: com.opengamma.analytics.math.integration.Integrator1D DEFAULT_INTEGRATOR>;

        r0.<com.opengamma.analytics.financial.equity.variance.pricing.ExpectedVarianceStaticReplicationCalculator: com.opengamma.analytics.math.integration.Integrator1D _integrator> = $r1;

        return;
    }

    public void <init>(double)
    {
        com.opengamma.analytics.financial.equity.variance.pricing.ExpectedVarianceStaticReplicationCalculator r0;
        double d0;
        byte $b0, $b1;
        boolean $z0;
        java.lang.Object[] $r1;
        java.lang.Double $r2, $r3, $r4;
        com.opengamma.analytics.math.integration.Integrator1D $r5;

        r0 := @this: com.opengamma.analytics.financial.equity.variance.pricing.ExpectedVarianceStaticReplicationCalculator;

        d0 := @parameter0: double;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $b0 = d0 cmpl 1.0E-15;

        if $b0 <= 0 goto label1;

        $b1 = d0 cmpg 0.1;

        if $b1 >= 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        $r1 = newarray (java.lang.Object)[3];

        $r2 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(1.0E-15);

        $r1[0] = $r2;

        $r3 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(0.1);

        $r1[1] = $r3;

        $r4 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d0);

        $r1[2] = $r4;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String,java.lang.Object[])>($z0, "tol must be in range {} to {} exclusive. Value given is {}", $r1);

        r0.<com.opengamma.analytics.financial.equity.variance.pricing.ExpectedVarianceStaticReplicationCalculator: double _tol> = d0;

        $r5 = <com.opengamma.analytics.financial.equity.variance.pricing.ExpectedVarianceStaticReplicationCalculator: com.opengamma.analytics.math.integration.Integrator1D DEFAULT_INTEGRATOR>;

        r0.<com.opengamma.analytics.financial.equity.variance.pricing.ExpectedVarianceStaticReplicationCalculator: com.opengamma.analytics.math.integration.Integrator1D _integrator> = $r5;

        return;
    }

    public void <init>(com.opengamma.analytics.math.integration.Integrator1D)
    {
        com.opengamma.analytics.financial.equity.variance.pricing.ExpectedVarianceStaticReplicationCalculator r0;
        com.opengamma.analytics.math.integration.Integrator1D r1;

        r0 := @this: com.opengamma.analytics.financial.equity.variance.pricing.ExpectedVarianceStaticReplicationCalculator;

        r1 := @parameter0: com.opengamma.analytics.math.integration.Integrator1D;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "null integrator1d");

        r0.<com.opengamma.analytics.financial.equity.variance.pricing.ExpectedVarianceStaticReplicationCalculator: double _tol> = 1.0E-9;

        r0.<com.opengamma.analytics.financial.equity.variance.pricing.ExpectedVarianceStaticReplicationCalculator: com.opengamma.analytics.math.integration.Integrator1D _integrator> = r1;

        return;
    }

    public void <init>(com.opengamma.analytics.math.integration.Integrator1D, double)
    {
        com.opengamma.analytics.financial.equity.variance.pricing.ExpectedVarianceStaticReplicationCalculator r0;
        com.opengamma.analytics.math.integration.Integrator1D r1;
        double d0;
        byte $b0, $b1;
        boolean $z0;
        java.lang.Object[] $r3;
        java.lang.Double $r4, $r5, $r6;

        r0 := @this: com.opengamma.analytics.financial.equity.variance.pricing.ExpectedVarianceStaticReplicationCalculator;

        r1 := @parameter0: com.opengamma.analytics.math.integration.Integrator1D;

        d0 := @parameter1: double;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "null integrator1d");

        $b0 = d0 cmpl 1.0E-15;

        if $b0 <= 0 goto label1;

        $b1 = d0 cmpg 0.1;

        if $b1 >= 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        $r3 = newarray (java.lang.Object)[3];

        $r4 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(1.0E-15);

        $r3[0] = $r4;

        $r5 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(0.1);

        $r3[1] = $r5;

        $r6 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d0);

        $r3[2] = $r6;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String,java.lang.Object[])>($z0, "tol must be in range {} to {} exclusive. Value given is {}", $r3);

        r0.<com.opengamma.analytics.financial.equity.variance.pricing.ExpectedVarianceStaticReplicationCalculator: double _tol> = d0;

        r0.<com.opengamma.analytics.financial.equity.variance.pricing.ExpectedVarianceStaticReplicationCalculator: com.opengamma.analytics.math.integration.Integrator1D _integrator> = r1;

        return;
    }

    public double getAnnualizedVariance(double, double, com.opengamma.analytics.financial.model.volatility.surface.BlackVolatilitySurfaceStrike)
    {
        com.opengamma.analytics.financial.equity.variance.pricing.ExpectedVarianceStaticReplicationCalculator r0;
        double d0, d1, d2, d3, d4, d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, d18, d19, d20, d21, d22;
        com.opengamma.analytics.financial.model.volatility.surface.BlackVolatilitySurfaceStrike r1;
        com.opengamma.analytics.math.function.Function1D r2, r3;
        byte $b0, $b1, $b2, $b3;
        java.lang.Object[] $r4, $r6;
        java.lang.Double $r5, $r7, $r10, $r12, $r13, $r15, $r17, $r18, $r20, $r21, $r23, $r25, $r26, $r28, $r29, $r31;
        com.opengamma.analytics.math.statistics.distribution.ProbabilityDistribution $r9;
        com.opengamma.analytics.math.integration.Integrator1D $r11, $r16, $r24;
        java.lang.Object $r14, $r19, $r22, $r27, $r30;
        boolean $z0, $z1;

        r0 := @this: com.opengamma.analytics.financial.equity.variance.pricing.ExpectedVarianceStaticReplicationCalculator;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        r1 := @parameter2: com.opengamma.analytics.financial.model.volatility.surface.BlackVolatilitySurfaceStrike;

        $b0 = d0 cmpl 0.0;

        if $b0 <= 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        $r4 = newarray (java.lang.Object)[1];

        $r5 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d0);

        $r4[0] = $r5;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String,java.lang.Object[])>($z0, "forward is {}", $r4);

        $b1 = d1 cmpl 0.0;

        if $b1 <= 0 goto label3;

        $z1 = 1;

        goto label4;

     label3:
        $z1 = 0;

     label4:
        $r6 = newarray (java.lang.Object)[1];

        $r7 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d1);

        $r6[0] = $r7;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String,java.lang.Object[])>($z1, "expiry is {}", $r6);

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "null surface");

        d2 = virtualinvoke r1.<com.opengamma.analytics.financial.model.volatility.surface.BlackVolatilitySurfaceStrike: double getVolatility(double,double)>(d1, d0);

        $b2 = d1 cmpg 1.0E-4;

        if $b2 >= 0 goto label5;

        $d17 = d2 * d2;

        return $d17;

     label5:
        r2 = specialinvoke r0.<com.opengamma.analytics.financial.equity.variance.pricing.ExpectedVarianceStaticReplicationCalculator: com.opengamma.analytics.math.function.Function1D getStrikeIntegrand(double,double,com.opengamma.analytics.financial.model.volatility.surface.BlackVolatilitySurfaceStrike)>(d0, d1, r1);

        r3 = specialinvoke r0.<com.opengamma.analytics.financial.equity.variance.pricing.ExpectedVarianceStaticReplicationCalculator: com.opengamma.analytics.math.function.Function1D getRemainderFunction(double,double,com.opengamma.analytics.financial.model.volatility.surface.BlackVolatilitySurfaceStrike)>(d0, d1, r1);

        d3 = staticinvoke <java.lang.Math: double sqrt(double)>(d1);

        $r9 = <com.opengamma.analytics.financial.equity.variance.pricing.ExpectedVarianceStaticReplicationCalculator: com.opengamma.analytics.math.statistics.distribution.ProbabilityDistribution NORMAL>;

        $d6 = r0.<com.opengamma.analytics.financial.equity.variance.pricing.ExpectedVarianceStaticReplicationCalculator: double _tol>;

        $r10 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d6);

        d4 = interfaceinvoke $r9.<com.opengamma.analytics.math.statistics.distribution.ProbabilityDistribution: double getInverseCDF(java.lang.Object)>($r10);

        $r11 = r0.<com.opengamma.analytics.financial.equity.variance.pricing.ExpectedVarianceStaticReplicationCalculator: com.opengamma.analytics.math.integration.Integrator1D _integrator>;

        $r12 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(0.0);

        $r13 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d0);

        $r14 = virtualinvoke $r11.<com.opengamma.analytics.math.integration.Integrator1D: java.lang.Object integrate(com.opengamma.analytics.math.function.Function1D,java.lang.Object,java.lang.Object)>(r2, $r12, $r13);

        $r15 = (java.lang.Double) $r14;

        d5 = virtualinvoke $r15.<java.lang.Double: double doubleValue()>();

        $d7 = neg d4;

        $d8 = $d7 * d2;

        $d9 = $d8 * d3;

        $d10 = staticinvoke <java.lang.Math: double exp(double)>($d9);

        d18 = d0 * $d10;

        $r16 = r0.<com.opengamma.analytics.financial.equity.variance.pricing.ExpectedVarianceStaticReplicationCalculator: com.opengamma.analytics.math.integration.Integrator1D _integrator>;

        $r17 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d0);

        $r18 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d18);

        $r19 = virtualinvoke $r16.<com.opengamma.analytics.math.integration.Integrator1D: java.lang.Object integrate(com.opengamma.analytics.math.function.Function1D,java.lang.Object,java.lang.Object)>(r2, $r17, $r18);

        $r20 = (java.lang.Double) $r19;

        d19 = virtualinvoke $r20.<java.lang.Double: double doubleValue()>();

        $r21 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d18);

        $r22 = virtualinvoke r3.<com.opengamma.analytics.math.function.Function1D: java.lang.Object evaluate(java.lang.Object)>($r21);

        $r23 = (java.lang.Double) $r22;

        d20 = virtualinvoke $r23.<java.lang.Double: double doubleValue()>();

        d21 = d20 / d19;

     label6:
        $d11 = r0.<com.opengamma.analytics.financial.equity.variance.pricing.ExpectedVarianceStaticReplicationCalculator: double _tol>;

        $b3 = d21 cmpl $d11;

        if $b3 <= 0 goto label7;

        $r24 = r0.<com.opengamma.analytics.financial.equity.variance.pricing.ExpectedVarianceStaticReplicationCalculator: com.opengamma.analytics.math.integration.Integrator1D _integrator>;

        $r25 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d18);

        $d15 = 2.0 * d18;

        $r26 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d15);

        $r27 = virtualinvoke $r24.<com.opengamma.analytics.math.integration.Integrator1D: java.lang.Object integrate(com.opengamma.analytics.math.function.Function1D,java.lang.Object,java.lang.Object)>(r2, $r25, $r26);

        $r28 = (java.lang.Double) $r27;

        $d16 = virtualinvoke $r28.<java.lang.Double: double doubleValue()>();

        d19 = d19 + $d16;

        d18 = d18 * 2.0;

        $r29 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d18);

        $r30 = virtualinvoke r3.<com.opengamma.analytics.math.function.Function1D: java.lang.Object evaluate(java.lang.Object)>($r29);

        $r31 = (java.lang.Double) $r30;

        d22 = virtualinvoke $r31.<java.lang.Double: double doubleValue()>();

        d21 = d22 / d5;

        goto label6;

     label7:
        $d12 = d5 + d19;

        $d13 = 2.0 * $d12;

        $d14 = $d13 / d1;

        return $d14;
    }

    public double getAnnualizedVariance(double, com.opengamma.analytics.financial.model.volatility.surface.BlackVolatilitySurfaceMoneyness)
    {
        com.opengamma.analytics.financial.equity.variance.pricing.ExpectedVarianceStaticReplicationCalculator r0;
        double d0, $d1;
        com.opengamma.analytics.financial.model.volatility.surface.BlackVolatilitySurfaceMoneyness r1;
        com.opengamma.analytics.financial.model.volatility.surface.BlackVolatilitySurfaceLogMoneyness r2;
        byte $b0;
        java.lang.Object[] $r3;
        java.lang.Double $r4;
        boolean $z0;

        r0 := @this: com.opengamma.analytics.financial.equity.variance.pricing.ExpectedVarianceStaticReplicationCalculator;

        d0 := @parameter0: double;

        r1 := @parameter1: com.opengamma.analytics.financial.model.volatility.surface.BlackVolatilitySurfaceMoneyness;

        $b0 = d0 cmpl 0.0;

        if $b0 <= 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        $r3 = newarray (java.lang.Object)[1];

        $r4 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d0);

        $r3[0] = $r4;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String,java.lang.Object[])>($z0, "expiry is {}", $r3);

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "null surface");

        r2 = staticinvoke <com.opengamma.analytics.financial.model.volatility.surface.BlackVolatilitySurfaceConverter: com.opengamma.analytics.financial.model.volatility.surface.BlackVolatilitySurfaceLogMoneyness toLogMoneynessSurface(com.opengamma.analytics.financial.model.volatility.surface.BlackVolatilitySurfaceMoneyness)>(r1);

        $d1 = virtualinvoke r0.<com.opengamma.analytics.financial.equity.variance.pricing.ExpectedVarianceStaticReplicationCalculator: double getAnnualizedVariance(double,com.opengamma.analytics.financial.model.volatility.surface.BlackVolatilitySurfaceLogMoneyness)>(d0, r2);

        return $d1;
    }

    public double getAnnualizedVariance(double, com.opengamma.analytics.financial.model.volatility.surface.BlackVolatilitySurfaceLogMoneyness)
    {
        com.opengamma.analytics.financial.equity.variance.pricing.ExpectedVarianceStaticReplicationCalculator r0;
        double d0, d1, d2, d3, d4, d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21, $d22, $d23, $d24, $d25, $d26, $d27, $d28, $d29, d30, d31, d32, d33, d34, d35, d36, d37;
        com.opengamma.analytics.financial.model.volatility.surface.BlackVolatilitySurfaceLogMoneyness r1;
        com.opengamma.analytics.math.function.Function1D r2;
        byte $b0, $b1, $b2, $b3;
        java.lang.Object[] $r3;
        java.lang.Double $r4, $r7, $r9, $r10, $r12, $r13, $r15, $r17, $r18, $r20, $r21, $r23, $r25, $r26, $r28, $r29, $r31, $r33, $r34, $r36, $r37, $r39;
        com.opengamma.analytics.math.statistics.distribution.ProbabilityDistribution $r6;
        com.opengamma.analytics.math.integration.Integrator1D $r8, $r16, $r24, $r32;
        java.lang.Object $r11, $r14, $r19, $r22, $r27, $r30, $r35, $r38;
        int $i4, $i5, $i6, $i7, i8, i9;
        boolean $z0;

        r0 := @this: com.opengamma.analytics.financial.equity.variance.pricing.ExpectedVarianceStaticReplicationCalculator;

        d0 := @parameter0: double;

        r1 := @parameter1: com.opengamma.analytics.financial.model.volatility.surface.BlackVolatilitySurfaceLogMoneyness;

        $b0 = d0 cmpl 0.0;

        if $b0 <= 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        $r3 = newarray (java.lang.Object)[1];

        $r4 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d0);

        $r3[0] = $r4;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String,java.lang.Object[])>($z0, "expiry is {}", $r3);

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "null surface");

        d1 = virtualinvoke r1.<com.opengamma.analytics.financial.model.volatility.surface.BlackVolatilitySurfaceLogMoneyness: double getVolatilityForLogMoneyness(double,double)>(d0, 0.0);

        $b1 = d0 cmpg 1.0E-4;

        if $b1 >= 0 goto label3;

        $d29 = d1 * d1;

        return $d29;

     label3:
        d2 = staticinvoke <java.lang.Math: double sqrt(double)>(d0);

        $r6 = <com.opengamma.analytics.financial.equity.variance.pricing.ExpectedVarianceStaticReplicationCalculator: com.opengamma.analytics.math.statistics.distribution.ProbabilityDistribution NORMAL>;

        $d6 = r0.<com.opengamma.analytics.financial.equity.variance.pricing.ExpectedVarianceStaticReplicationCalculator: double _tol>;

        $r7 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d6);

        d3 = interfaceinvoke $r6.<com.opengamma.analytics.math.statistics.distribution.ProbabilityDistribution: double getInverseCDF(java.lang.Object)>($r7);

        r2 = specialinvoke r0.<com.opengamma.analytics.financial.equity.variance.pricing.ExpectedVarianceStaticReplicationCalculator: com.opengamma.analytics.math.function.Function1D getLogMoneynessIntegrand(double,com.opengamma.analytics.financial.model.volatility.surface.BlackVolatilitySurfaceLogMoneyness)>(d0, r1);

        $d7 = d3 * d1;

        d4 = $d7 * d2;

        $r8 = r0.<com.opengamma.analytics.financial.equity.variance.pricing.ExpectedVarianceStaticReplicationCalculator: com.opengamma.analytics.math.integration.Integrator1D _integrator>;

        $r9 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d4);

        $r10 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(0.0);

        $r11 = virtualinvoke $r8.<com.opengamma.analytics.math.integration.Integrator1D: java.lang.Object integrate(com.opengamma.analytics.math.function.Function1D,java.lang.Object,java.lang.Object)>(r2, $r9, $r10);

        $r12 = (java.lang.Double) $r11;

        d30 = virtualinvoke $r12.<java.lang.Double: double doubleValue()>();

        $r13 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d4);

        $r14 = virtualinvoke r2.<com.opengamma.analytics.math.function.Function1D: java.lang.Object evaluate(java.lang.Object)>($r13);

        $r15 = (java.lang.Double) $r14;

        d31 = virtualinvoke $r15.<java.lang.Double: double doubleValue()>();

        d32 = d31 / d30;

        i8 = 1;

     label4:
        $d8 = r0.<com.opengamma.analytics.financial.equity.variance.pricing.ExpectedVarianceStaticReplicationCalculator: double _tol>;

        $b2 = d32 cmpl $d8;

        if $b2 <= 0 goto label5;

        $r32 = r0.<com.opengamma.analytics.financial.equity.variance.pricing.ExpectedVarianceStaticReplicationCalculator: com.opengamma.analytics.math.integration.Integrator1D _integrator>;

        $i6 = i8 + 1;

        $d22 = (double) $i6;

        $d23 = $d22 * d4;

        $r33 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d23);

        $d24 = (double) i8;

        $d25 = $d24 * d4;

        $r34 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d25);

        $r35 = virtualinvoke $r32.<com.opengamma.analytics.math.integration.Integrator1D: java.lang.Object integrate(com.opengamma.analytics.math.function.Function1D,java.lang.Object,java.lang.Object)>(r2, $r33, $r34);

        $r36 = (java.lang.Double) $r35;

        $d26 = virtualinvoke $r36.<java.lang.Double: double doubleValue()>();

        d30 = d30 + $d26;

        i8 = i8 + 1;

        $i7 = i8 + 1;

        $d27 = (double) $i7;

        $d28 = $d27 * d4;

        $r37 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d28);

        $r38 = virtualinvoke r2.<com.opengamma.analytics.math.function.Function1D: java.lang.Object evaluate(java.lang.Object)>($r37);

        $r39 = (java.lang.Double) $r38;

        d31 = virtualinvoke $r39.<java.lang.Double: double doubleValue()>();

        d32 = d31 / d30;

        goto label4;

     label5:
        d33 = d30 + d31;

        $d9 = neg d3;

        $d10 = $d9 * d1;

        d5 = $d10 * d2;

        $r16 = r0.<com.opengamma.analytics.financial.equity.variance.pricing.ExpectedVarianceStaticReplicationCalculator: com.opengamma.analytics.math.integration.Integrator1D _integrator>;

        $r17 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(0.0);

        $r18 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d5);

        $r19 = virtualinvoke $r16.<com.opengamma.analytics.math.integration.Integrator1D: java.lang.Object integrate(com.opengamma.analytics.math.function.Function1D,java.lang.Object,java.lang.Object)>(r2, $r17, $r18);

        $r20 = (java.lang.Double) $r19;

        d34 = virtualinvoke $r20.<java.lang.Double: double doubleValue()>();

        $r21 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d5);

        $r22 = virtualinvoke r2.<com.opengamma.analytics.math.function.Function1D: java.lang.Object evaluate(java.lang.Object)>($r21);

        $r23 = (java.lang.Double) $r22;

        d35 = virtualinvoke $r23.<java.lang.Double: double doubleValue()>();

        d36 = d35 / d34;

        i9 = 1;

     label6:
        $d11 = r0.<com.opengamma.analytics.financial.equity.variance.pricing.ExpectedVarianceStaticReplicationCalculator: double _tol>;

        $b3 = d36 cmpl $d11;

        if $b3 <= 0 goto label7;

        $r24 = r0.<com.opengamma.analytics.financial.equity.variance.pricing.ExpectedVarianceStaticReplicationCalculator: com.opengamma.analytics.math.integration.Integrator1D _integrator>;

        $d15 = (double) i9;

        $d16 = $d15 * d5;

        $r25 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d16);

        $i4 = 1 + i9;

        $d17 = (double) $i4;

        $d18 = $d17 * d5;

        $r26 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d18);

        $r27 = virtualinvoke $r24.<com.opengamma.analytics.math.integration.Integrator1D: java.lang.Object integrate(com.opengamma.analytics.math.function.Function1D,java.lang.Object,java.lang.Object)>(r2, $r25, $r26);

        $r28 = (java.lang.Double) $r27;

        $d19 = virtualinvoke $r28.<java.lang.Double: double doubleValue()>();

        d34 = d34 + $d19;

        i9 = i9 + 1;

        $i5 = 1 + i9;

        $d20 = (double) $i5;

        $d21 = $d20 * d5;

        $r29 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d21);

        $r30 = virtualinvoke r2.<com.opengamma.analytics.math.function.Function1D: java.lang.Object evaluate(java.lang.Object)>($r29);

        $r31 = (java.lang.Double) $r30;

        d37 = virtualinvoke $r31.<java.lang.Double: double doubleValue()>();

        d36 = d37 / d33;

        goto label6;

     label7:
        $d12 = d33 + d34;

        $d13 = 2.0 * $d12;

        $d14 = $d13 / d0;

        return $d14;
    }

    public double getAnnualizedVariance(double, double, com.opengamma.analytics.financial.model.volatility.surface.BlackVolatilitySurfaceDelta)
    {
        com.opengamma.analytics.financial.equity.variance.pricing.ExpectedVarianceStaticReplicationCalculator r0;
        double d0, d1, d2, d3, d4, d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, d13;
        com.opengamma.analytics.financial.model.volatility.surface.BlackVolatilitySurfaceDelta r1;
        byte $b0, $b1, $b2;
        java.lang.Object[] $r2, $r4;
        java.lang.Double $r3, $r5, $r8, $r9, $r11, $r13, $r14, $r16;
        com.opengamma.analytics.math.integration.Integrator1D $r7, $r12;
        java.lang.Object $r10, $r15;
        boolean $z0, $z1;
        com.opengamma.analytics.math.function.Function1D r17;

        r0 := @this: com.opengamma.analytics.financial.equity.variance.pricing.ExpectedVarianceStaticReplicationCalculator;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        r1 := @parameter2: com.opengamma.analytics.financial.model.volatility.surface.BlackVolatilitySurfaceDelta;

        $b0 = d0 cmpl 0.0;

        if $b0 <= 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        $r2 = newarray (java.lang.Object)[1];

        $r3 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d0);

        $r2[0] = $r3;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String,java.lang.Object[])>($z0, "forward is {}", $r2);

        $b1 = d1 cmpl 0.0;

        if $b1 <= 0 goto label3;

        $z1 = 1;

        goto label4;

     label3:
        $z1 = 0;

     label4:
        $r4 = newarray (java.lang.Object)[1];

        $r5 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d1);

        $r4[0] = $r5;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String,java.lang.Object[])>($z1, "expiry is {}", $r4);

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "null surface");

        $b2 = d1 cmpg 1.0E-4;

        if $b2 >= 0 goto label5;

        d13 = virtualinvoke r1.<com.opengamma.analytics.financial.model.volatility.surface.BlackVolatilitySurfaceDelta: double getVolatilityForDelta(double,double)>(d1, 0.5);

        $d12 = d13 * d13;

        return $d12;

     label5:
        r17 = specialinvoke r0.<com.opengamma.analytics.financial.equity.variance.pricing.ExpectedVarianceStaticReplicationCalculator: com.opengamma.analytics.math.function.Function1D getDeltaIntegrand(double,double,com.opengamma.analytics.financial.model.volatility.surface.BlackVolatilitySurfaceDelta)>(d0, d1, r1);

        d2 = virtualinvoke r1.<com.opengamma.analytics.financial.model.volatility.surface.BlackVolatilitySurfaceDelta: double getVolatility(double,double)>(d1, d0);

        d3 = staticinvoke <com.opengamma.analytics.financial.model.volatility.BlackFormulaRepository: double delta(double,double,double,double,boolean)>(d0, d0, d1, d2, 1);

        $r7 = r0.<com.opengamma.analytics.financial.equity.variance.pricing.ExpectedVarianceStaticReplicationCalculator: com.opengamma.analytics.math.integration.Integrator1D _integrator>;

        $d6 = r0.<com.opengamma.analytics.financial.equity.variance.pricing.ExpectedVarianceStaticReplicationCalculator: double _tol>;

        $r8 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d6);

        $r9 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d3);

        $r10 = virtualinvoke $r7.<com.opengamma.analytics.math.integration.Integrator1D: java.lang.Object integrate(com.opengamma.analytics.math.function.Function1D,java.lang.Object,java.lang.Object)>(r17, $r8, $r9);

        $r11 = (java.lang.Double) $r10;

        d4 = virtualinvoke $r11.<java.lang.Double: double doubleValue()>();

        $r12 = r0.<com.opengamma.analytics.financial.equity.variance.pricing.ExpectedVarianceStaticReplicationCalculator: com.opengamma.analytics.math.integration.Integrator1D _integrator>;

        $r13 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d3);

        $d7 = r0.<com.opengamma.analytics.financial.equity.variance.pricing.ExpectedVarianceStaticReplicationCalculator: double _tol>;

        $d8 = 1.0 - $d7;

        $r14 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d8);

        $r15 = virtualinvoke $r12.<com.opengamma.analytics.math.integration.Integrator1D: java.lang.Object integrate(com.opengamma.analytics.math.function.Function1D,java.lang.Object,java.lang.Object)>(r17, $r13, $r14);

        $r16 = (java.lang.Double) $r15;

        d5 = virtualinvoke $r16.<java.lang.Double: double doubleValue()>();

        $d9 = d5 + d4;

        $d10 = 2.0 * $d9;

        $d11 = $d10 / d1;

        return $d11;
    }

    private com.opengamma.analytics.math.function.Function1D getStrikeIntegrand(double, double, com.opengamma.analytics.financial.model.volatility.surface.BlackVolatilitySurfaceStrike)
    {
        com.opengamma.analytics.financial.equity.variance.pricing.ExpectedVarianceStaticReplicationCalculator r0;
        double d0, d1;
        com.opengamma.analytics.financial.model.volatility.surface.BlackVolatilitySurfaceStrike r1;
        com.opengamma.analytics.financial.equity.variance.pricing.ExpectedVarianceStaticReplicationCalculator$1 $r3;

        r0 := @this: com.opengamma.analytics.financial.equity.variance.pricing.ExpectedVarianceStaticReplicationCalculator;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        r1 := @parameter2: com.opengamma.analytics.financial.model.volatility.surface.BlackVolatilitySurfaceStrike;

        $r3 = new com.opengamma.analytics.financial.equity.variance.pricing.ExpectedVarianceStaticReplicationCalculator$1;

        specialinvoke $r3.<com.opengamma.analytics.financial.equity.variance.pricing.ExpectedVarianceStaticReplicationCalculator$1: void <init>(com.opengamma.analytics.financial.equity.variance.pricing.ExpectedVarianceStaticReplicationCalculator,double,com.opengamma.analytics.financial.model.volatility.surface.BlackVolatilitySurfaceStrike,double)>(r0, d0, r1, d1);

        return $r3;
    }

    private com.opengamma.analytics.math.function.Function1D getLogMoneynessIntegrand(double, com.opengamma.analytics.financial.model.volatility.surface.BlackVolatilitySurfaceLogMoneyness)
    {
        com.opengamma.analytics.financial.equity.variance.pricing.ExpectedVarianceStaticReplicationCalculator r0;
        double d0, d1;
        com.opengamma.analytics.financial.model.volatility.surface.BlackVolatilitySurfaceLogMoneyness r1;
        com.opengamma.analytics.financial.equity.variance.pricing.ExpectedVarianceStaticReplicationCalculator$2 $r3;

        r0 := @this: com.opengamma.analytics.financial.equity.variance.pricing.ExpectedVarianceStaticReplicationCalculator;

        d0 := @parameter0: double;

        r1 := @parameter1: com.opengamma.analytics.financial.model.volatility.surface.BlackVolatilitySurfaceLogMoneyness;

        d1 = staticinvoke <java.lang.Math: double sqrt(double)>(d0);

        $r3 = new com.opengamma.analytics.financial.equity.variance.pricing.ExpectedVarianceStaticReplicationCalculator$2;

        specialinvoke $r3.<com.opengamma.analytics.financial.equity.variance.pricing.ExpectedVarianceStaticReplicationCalculator$2: void <init>(com.opengamma.analytics.financial.equity.variance.pricing.ExpectedVarianceStaticReplicationCalculator,com.opengamma.analytics.financial.model.volatility.surface.BlackVolatilitySurfaceLogMoneyness,double,double)>(r0, r1, d0, d1);

        return $r3;
    }

    private com.opengamma.analytics.math.function.Function1D getDeltaIntegrand(double, double, com.opengamma.analytics.financial.model.volatility.surface.BlackVolatilitySurfaceDelta)
    {
        com.opengamma.analytics.financial.equity.variance.pricing.ExpectedVarianceStaticReplicationCalculator r0;
        double d0, d1, d3;
        com.opengamma.analytics.financial.model.volatility.surface.BlackVolatilitySurfaceDelta r1;
        com.opengamma.analytics.financial.equity.variance.pricing.ExpectedVarianceStaticReplicationCalculator$3 $r3;

        r0 := @this: com.opengamma.analytics.financial.equity.variance.pricing.ExpectedVarianceStaticReplicationCalculator;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        r1 := @parameter2: com.opengamma.analytics.financial.model.volatility.surface.BlackVolatilitySurfaceDelta;

        d3 = staticinvoke <java.lang.Math: double sqrt(double)>(d1);

        $r3 = new com.opengamma.analytics.financial.equity.variance.pricing.ExpectedVarianceStaticReplicationCalculator$3;

        specialinvoke $r3.<com.opengamma.analytics.financial.equity.variance.pricing.ExpectedVarianceStaticReplicationCalculator$3: void <init>(com.opengamma.analytics.financial.equity.variance.pricing.ExpectedVarianceStaticReplicationCalculator,com.opengamma.analytics.financial.model.volatility.surface.BlackVolatilitySurfaceDelta,double,double,double)>(r0, r1, d1, d3, d0);

        return $r3;
    }

    private com.opengamma.analytics.math.function.Function1D getRemainderFunction(double, double, com.opengamma.analytics.financial.model.volatility.surface.BlackVolatilitySurfaceStrike)
    {
        com.opengamma.analytics.financial.equity.variance.pricing.ExpectedVarianceStaticReplicationCalculator r0;
        double d0, d1;
        com.opengamma.analytics.financial.model.volatility.surface.BlackVolatilitySurfaceStrike r1;
        com.opengamma.analytics.financial.equity.variance.pricing.ExpectedVarianceStaticReplicationCalculator$4 $r2;

        r0 := @this: com.opengamma.analytics.financial.equity.variance.pricing.ExpectedVarianceStaticReplicationCalculator;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        r1 := @parameter2: com.opengamma.analytics.financial.model.volatility.surface.BlackVolatilitySurfaceStrike;

        $r2 = new com.opengamma.analytics.financial.equity.variance.pricing.ExpectedVarianceStaticReplicationCalculator$4;

        specialinvoke $r2.<com.opengamma.analytics.financial.equity.variance.pricing.ExpectedVarianceStaticReplicationCalculator$4: void <init>(com.opengamma.analytics.financial.equity.variance.pricing.ExpectedVarianceStaticReplicationCalculator,double,com.opengamma.analytics.financial.model.volatility.surface.BlackVolatilitySurfaceStrike,double)>(r0, d0, r1, d1);

        return $r2;
    }

    static com.opengamma.analytics.math.statistics.distribution.ProbabilityDistribution access$000()
    {
        com.opengamma.analytics.math.statistics.distribution.ProbabilityDistribution $r0;

        $r0 = <com.opengamma.analytics.financial.equity.variance.pricing.ExpectedVarianceStaticReplicationCalculator: com.opengamma.analytics.math.statistics.distribution.ProbabilityDistribution NORMAL>;

        return $r0;
    }

    static void <clinit>()
    {
        com.opengamma.analytics.math.integration.RungeKuttaIntegrator1D $r0;
        com.opengamma.analytics.math.statistics.distribution.NormalDistribution $r1;

        <com.opengamma.analytics.financial.equity.variance.pricing.ExpectedVarianceStaticReplicationCalculator: double MAX_TOL> = 0.1;

        <com.opengamma.analytics.financial.equity.variance.pricing.ExpectedVarianceStaticReplicationCalculator: double MIN_TOL> = 1.0E-15;

        <com.opengamma.analytics.financial.equity.variance.pricing.ExpectedVarianceStaticReplicationCalculator: double DEFAULT_TOL> = 1.0E-9;

        <com.opengamma.analytics.financial.equity.variance.pricing.ExpectedVarianceStaticReplicationCalculator: double SMALL_TIME_CUTOFF> = 1.0E-4;

        $r0 = new com.opengamma.analytics.math.integration.RungeKuttaIntegrator1D;

        specialinvoke $r0.<com.opengamma.analytics.math.integration.RungeKuttaIntegrator1D: void <init>()>();

        <com.opengamma.analytics.financial.equity.variance.pricing.ExpectedVarianceStaticReplicationCalculator: com.opengamma.analytics.math.integration.Integrator1D DEFAULT_INTEGRATOR> = $r0;

        $r1 = new com.opengamma.analytics.math.statistics.distribution.NormalDistribution;

        specialinvoke $r1.<com.opengamma.analytics.math.statistics.distribution.NormalDistribution: void <init>(double,double)>(0.0, 1.0);

        <com.opengamma.analytics.financial.equity.variance.pricing.ExpectedVarianceStaticReplicationCalculator: com.opengamma.analytics.math.statistics.distribution.ProbabilityDistribution NORMAL> = $r1;

        return;
    }
}
