final class org.apache.commons.math3.analysis.FunctionUtils$2 extends java.lang.Object implements org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiableFunction
{
    final org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiableFunction[] val$f;

    void <init>(org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiableFunction[])
    {
        org.apache.commons.math3.analysis.FunctionUtils$2 r0;
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiableFunction[] r1;

        r0 := @this: org.apache.commons.math3.analysis.FunctionUtils$2;

        r1 := @parameter0: org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiableFunction[];

        r0.<org.apache.commons.math3.analysis.FunctionUtils$2: org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiableFunction[] val$f> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public double value(double)
    {
        org.apache.commons.math3.analysis.FunctionUtils$2 r0;
        double d0, d1;
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiableFunction[] $r1, $r2;
        int $i0, i1;
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiableFunction $r3;

        r0 := @this: org.apache.commons.math3.analysis.FunctionUtils$2;

        d0 := @parameter0: double;

        d1 = d0;

        $r1 = r0.<org.apache.commons.math3.analysis.FunctionUtils$2: org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiableFunction[] val$f>;

        $i0 = lengthof $r1;

        i1 = $i0 - 1;

     label1:
        if i1 < 0 goto label2;

        $r2 = r0.<org.apache.commons.math3.analysis.FunctionUtils$2: org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiableFunction[] val$f>;

        $r3 = $r2[i1];

        d1 = interfaceinvoke $r3.<org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiableFunction: double value(double)>(d1);

        i1 = i1 + -1;

        goto label1;

     label2:
        return d1;
    }

    public org.apache.commons.math3.analysis.differentiation.DerivativeStructure value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure)
    {
        org.apache.commons.math3.analysis.FunctionUtils$2 r0;
        org.apache.commons.math3.analysis.differentiation.DerivativeStructure r1, r5;
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiableFunction[] $r2, $r3;
        int $i0, i1;
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiableFunction $r4;

        r0 := @this: org.apache.commons.math3.analysis.FunctionUtils$2;

        r1 := @parameter0: org.apache.commons.math3.analysis.differentiation.DerivativeStructure;

        r5 = r1;

        $r2 = r0.<org.apache.commons.math3.analysis.FunctionUtils$2: org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiableFunction[] val$f>;

        $i0 = lengthof $r2;

        i1 = $i0 - 1;

     label1:
        if i1 < 0 goto label2;

        $r3 = r0.<org.apache.commons.math3.analysis.FunctionUtils$2: org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiableFunction[] val$f>;

        $r4 = $r3[i1];

        r5 = interfaceinvoke $r4.<org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiableFunction: org.apache.commons.math3.analysis.differentiation.DerivativeStructure value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure)>(r5);

        i1 = i1 + -1;

        goto label1;

     label2:
        return r5;
    }
}
