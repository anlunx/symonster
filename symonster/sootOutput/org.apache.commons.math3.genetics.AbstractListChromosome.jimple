public abstract class org.apache.commons.math3.genetics.AbstractListChromosome extends org.apache.commons.math3.genetics.Chromosome
{
    private final java.util.List representation;

    public void <init>(java.util.List) throws org.apache.commons.math3.genetics.InvalidRepresentationException
    {
        org.apache.commons.math3.genetics.AbstractListChromosome r0;
        java.util.List r1;

        r0 := @this: org.apache.commons.math3.genetics.AbstractListChromosome;

        r1 := @parameter0: java.util.List;

        specialinvoke r0.<org.apache.commons.math3.genetics.AbstractListChromosome: void <init>(java.util.List,boolean)>(r1, 1);

        return;
    }

    public void <init>(java.lang.Object[]) throws org.apache.commons.math3.genetics.InvalidRepresentationException
    {
        org.apache.commons.math3.genetics.AbstractListChromosome r0;
        java.lang.Object[] r1;
        java.util.List $r2;

        r0 := @this: org.apache.commons.math3.genetics.AbstractListChromosome;

        r1 := @parameter0: java.lang.Object[];

        $r2 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(r1);

        specialinvoke r0.<org.apache.commons.math3.genetics.AbstractListChromosome: void <init>(java.util.List)>($r2);

        return;
    }

    public void <init>(java.util.List, boolean)
    {
        org.apache.commons.math3.genetics.AbstractListChromosome r0;
        java.util.List r1, $r2, $r4;
        boolean z0;
        java.util.ArrayList r5;

        r0 := @this: org.apache.commons.math3.genetics.AbstractListChromosome;

        r1 := @parameter0: java.util.List;

        z0 := @parameter1: boolean;

        specialinvoke r0.<org.apache.commons.math3.genetics.Chromosome: void <init>()>();

        virtualinvoke r0.<org.apache.commons.math3.genetics.AbstractListChromosome: void checkValidity(java.util.List)>(r1);

        if z0 == 0 goto label1;

        r5 = new java.util.ArrayList;

        $r4 = r5;

        specialinvoke r5.<java.util.ArrayList: void <init>(java.util.Collection)>(r1);

        goto label2;

     label1:
        $r4 = r1;

     label2:
        $r2 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r4);

        r0.<org.apache.commons.math3.genetics.AbstractListChromosome: java.util.List representation> = $r2;

        return;
    }

    protected abstract void checkValidity(java.util.List) throws org.apache.commons.math3.genetics.InvalidRepresentationException;

    protected java.util.List getRepresentation()
    {
        org.apache.commons.math3.genetics.AbstractListChromosome r0;
        java.util.List $r1;

        r0 := @this: org.apache.commons.math3.genetics.AbstractListChromosome;

        $r1 = r0.<org.apache.commons.math3.genetics.AbstractListChromosome: java.util.List representation>;

        return $r1;
    }

    public int getLength()
    {
        org.apache.commons.math3.genetics.AbstractListChromosome r0;
        java.util.List $r1;
        int $i0;

        r0 := @this: org.apache.commons.math3.genetics.AbstractListChromosome;

        $r1 = virtualinvoke r0.<org.apache.commons.math3.genetics.AbstractListChromosome: java.util.List getRepresentation()>();

        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        return $i0;
    }

    public abstract org.apache.commons.math3.genetics.AbstractListChromosome newFixedLengthChromosome(java.util.List);

    public java.lang.String toString()
    {
        org.apache.commons.math3.genetics.AbstractListChromosome r0;
        java.lang.Object[] $r1;
        double $d0;
        java.lang.Double $r2;
        java.util.List $r3;
        java.lang.String $r4;

        r0 := @this: org.apache.commons.math3.genetics.AbstractListChromosome;

        $r1 = newarray (java.lang.Object)[2];

        $d0 = virtualinvoke r0.<org.apache.commons.math3.genetics.AbstractListChromosome: double getFitness()>();

        $r2 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        $r1[0] = $r2;

        $r3 = virtualinvoke r0.<org.apache.commons.math3.genetics.AbstractListChromosome: java.util.List getRepresentation()>();

        $r1[1] = $r3;

        $r4 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("(f=%s %s)", $r1);

        return $r4;
    }
}
