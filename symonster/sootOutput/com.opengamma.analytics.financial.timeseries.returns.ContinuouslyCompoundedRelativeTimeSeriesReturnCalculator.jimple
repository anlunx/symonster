public class com.opengamma.analytics.financial.timeseries.returns.ContinuouslyCompoundedRelativeTimeSeriesReturnCalculator extends com.opengamma.analytics.financial.timeseries.returns.RelativeTimeSeriesReturnCalculator
{
    private static final org.slf4j.Logger s_logger;
    private static final double ZERO;

    public void <init>(com.opengamma.util.CalculationMode)
    {
        com.opengamma.analytics.financial.timeseries.returns.ContinuouslyCompoundedRelativeTimeSeriesReturnCalculator r0;
        com.opengamma.util.CalculationMode r1;

        r0 := @this: com.opengamma.analytics.financial.timeseries.returns.ContinuouslyCompoundedRelativeTimeSeriesReturnCalculator;

        r1 := @parameter0: com.opengamma.util.CalculationMode;

        specialinvoke r0.<com.opengamma.analytics.financial.timeseries.returns.RelativeTimeSeriesReturnCalculator: void <init>(com.opengamma.util.CalculationMode)>(r1);

        return;
    }

    public transient com.opengamma.timeseries.date.localdate.LocalDateDoubleTimeSeries evaluate(com.opengamma.timeseries.date.localdate.LocalDateDoubleTimeSeries[])
    {
        com.opengamma.analytics.financial.timeseries.returns.ContinuouslyCompoundedRelativeTimeSeriesReturnCalculator r0;
        com.opengamma.timeseries.date.localdate.LocalDateDoubleTimeSeries[] r1;
        com.opengamma.timeseries.date.localdate.LocalDateDoubleTimeSeries r2, r3, $r8;
        int i0, i1, $i2, $i4, $i5, i6;
        int[] r4;
        double[] r5;
        com.opengamma.timeseries.date.localdate.LocalDateDoubleEntryIterator r6;
        java.lang.Double r7, $r19;
        java.lang.Object $r9, $r15, $r18;
        com.opengamma.util.CalculationMode $r10, $r11;
        boolean $z0, $z1;
        java.lang.StringBuilder $r14, $r16, r21;
        java.lang.String $r17;
        double $d0, $d1, $d2, $d3, $d4, $d5;
        byte $b3;
        org.slf4j.Logger $r20;
        com.opengamma.timeseries.TimeSeriesException r22;
        java.lang.Throwable r23;

        r0 := @this: com.opengamma.analytics.financial.timeseries.returns.ContinuouslyCompoundedRelativeTimeSeriesReturnCalculator;

        r1 := @parameter0: com.opengamma.timeseries.date.localdate.LocalDateDoubleTimeSeries[];

        virtualinvoke r0.<com.opengamma.analytics.financial.timeseries.returns.ContinuouslyCompoundedRelativeTimeSeriesReturnCalculator: void testInputData(com.opengamma.timeseries.DoubleTimeSeries[])>(r1);

        $i2 = lengthof r1;

        if $i2 <= 2 goto label1;

        $r20 = <com.opengamma.analytics.financial.timeseries.returns.ContinuouslyCompoundedRelativeTimeSeriesReturnCalculator: org.slf4j.Logger s_logger>;

        interfaceinvoke $r20.<org.slf4j.Logger: void info(java.lang.String)>("Have more than two time series in array; only using first two");

     label1:
        r2 = r1[0];

        r3 = r1[1];

        i0 = interfaceinvoke r2.<com.opengamma.timeseries.date.localdate.LocalDateDoubleTimeSeries: int size()>();

        r4 = newarray (int)[i0];

        r5 = newarray (double)[i0];

        r6 = interfaceinvoke r2.<com.opengamma.timeseries.date.localdate.LocalDateDoubleTimeSeries: com.opengamma.timeseries.date.localdate.LocalDateDoubleEntryIterator iterator()>();

        i6 = 0;

     label2:
        $z1 = interfaceinvoke r6.<com.opengamma.timeseries.date.localdate.LocalDateDoubleEntryIterator: boolean hasNext()>();

        if $z1 == 0 goto label6;

        i1 = interfaceinvoke r6.<com.opengamma.timeseries.date.localdate.LocalDateDoubleEntryIterator: int nextTimeFast()>();

        $r9 = interfaceinvoke r3.<com.opengamma.timeseries.date.localdate.LocalDateDoubleTimeSeries: java.lang.Object getValue(int)>(i1);

        r7 = (java.lang.Double) $r9;

        if r7 == null goto label3;

        $d0 = virtualinvoke r7.<java.lang.Double: double doubleValue()>();

        $d1 = staticinvoke <java.lang.Math: double abs(double)>($d0);

        $b3 = $d1 cmpg 1.0E-12;

        if $b3 >= 0 goto label4;

     label3:
        $r10 = virtualinvoke r0.<com.opengamma.analytics.financial.timeseries.returns.ContinuouslyCompoundedRelativeTimeSeriesReturnCalculator: com.opengamma.util.CalculationMode getMode()>();

        $r11 = <com.opengamma.util.CalculationMode: com.opengamma.util.CalculationMode STRICT>;

        $z0 = virtualinvoke $r10.<com.opengamma.util.CalculationMode: boolean equals(java.lang.Object)>($r11);

        if $z0 == 0 goto label5;

        r22 = new com.opengamma.timeseries.TimeSeriesException;

        r21 = new java.lang.StringBuilder;

        specialinvoke r21.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No data in second series for time ");

        $r15 = interfaceinvoke r6.<com.opengamma.timeseries.date.localdate.LocalDateDoubleEntryIterator: java.lang.Object currentTime()>();

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r15);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r22.<com.opengamma.timeseries.TimeSeriesException: void <init>(java.lang.String)>($r17);

        r23 = (java.lang.Throwable) r22;

        throw r23;

     label4:
        $i4 = interfaceinvoke r6.<com.opengamma.timeseries.date.localdate.LocalDateDoubleEntryIterator: int currentTimeFast()>();

        r4[i6] = $i4;

        $i5 = i6;

        i6 = i6 + 1;

        $r18 = interfaceinvoke r6.<com.opengamma.timeseries.date.localdate.LocalDateDoubleEntryIterator: java.lang.Object currentValue()>();

        $r19 = (java.lang.Double) $r18;

        $d2 = virtualinvoke $r19.<java.lang.Double: double doubleValue()>();

        $d3 = virtualinvoke r7.<java.lang.Double: double doubleValue()>();

        $d4 = $d2 / $d3;

        $d5 = staticinvoke <java.lang.Math: double log(double)>($d4);

        r5[$i5] = $d5;

     label5:
        goto label2;

     label6:
        $r8 = virtualinvoke r0.<com.opengamma.analytics.financial.timeseries.returns.ContinuouslyCompoundedRelativeTimeSeriesReturnCalculator: com.opengamma.timeseries.date.localdate.LocalDateDoubleTimeSeries getSeries(int[],double[],int)>(r4, r5, i6);

        return $r8;
    }

    public volatile java.lang.Object evaluate(java.lang.Object[])
    {
        com.opengamma.analytics.financial.timeseries.returns.ContinuouslyCompoundedRelativeTimeSeriesReturnCalculator r0;
        java.lang.Object[] r1;
        com.opengamma.timeseries.date.localdate.LocalDateDoubleTimeSeries[] $r2;
        com.opengamma.timeseries.date.localdate.LocalDateDoubleTimeSeries $r3;

        r0 := @this: com.opengamma.analytics.financial.timeseries.returns.ContinuouslyCompoundedRelativeTimeSeriesReturnCalculator;

        r1 := @parameter0: java.lang.Object[];

        $r2 = (com.opengamma.timeseries.date.localdate.LocalDateDoubleTimeSeries[]) r1;

        $r3 = virtualinvoke r0.<com.opengamma.analytics.financial.timeseries.returns.ContinuouslyCompoundedRelativeTimeSeriesReturnCalculator: com.opengamma.timeseries.date.localdate.LocalDateDoubleTimeSeries evaluate(com.opengamma.timeseries.date.localdate.LocalDateDoubleTimeSeries[])>($r2);

        return $r3;
    }

    static void <clinit>()
    {
        org.slf4j.Logger $r0;

        <com.opengamma.analytics.financial.timeseries.returns.ContinuouslyCompoundedRelativeTimeSeriesReturnCalculator: double ZERO> = 1.0E-12;

        $r0 = staticinvoke <org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>(class "com/opengamma/analytics/financial/timeseries/returns/SimpleNetRelativeTimeSeriesReturnCalculator");

        <com.opengamma.analytics.financial.timeseries.returns.ContinuouslyCompoundedRelativeTimeSeriesReturnCalculator: org.slf4j.Logger s_logger> = $r0;

        return;
    }
}
