class com.opengamma.analytics.financial.model.volatility.discrete.DiscreteVolatilityFunctionProviderFromVolSurface$1 extends com.opengamma.analytics.financial.model.volatility.discrete.DiscreteVolatilityFunction
{
    final int val$n;
    final com.opengamma.util.tuple.DoublesPair[] val$expiryStrikePoints;
    final com.opengamma.analytics.financial.model.volatility.discrete.DiscreteVolatilityFunctionProviderFromVolSurface this$0;

    void <init>(com.opengamma.analytics.financial.model.volatility.discrete.DiscreteVolatilityFunctionProviderFromVolSurface, int, com.opengamma.util.tuple.DoublesPair[])
    {
        com.opengamma.analytics.financial.model.volatility.discrete.DiscreteVolatilityFunctionProviderFromVolSurface$1 r0;
        com.opengamma.analytics.financial.model.volatility.discrete.DiscreteVolatilityFunctionProviderFromVolSurface r1;
        int i0;
        com.opengamma.util.tuple.DoublesPair[] r2;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.discrete.DiscreteVolatilityFunctionProviderFromVolSurface$1;

        r1 := @parameter0: com.opengamma.analytics.financial.model.volatility.discrete.DiscreteVolatilityFunctionProviderFromVolSurface;

        i0 := @parameter1: int;

        r2 := @parameter2: com.opengamma.util.tuple.DoublesPair[];

        r0.<com.opengamma.analytics.financial.model.volatility.discrete.DiscreteVolatilityFunctionProviderFromVolSurface$1: com.opengamma.analytics.financial.model.volatility.discrete.DiscreteVolatilityFunctionProviderFromVolSurface this$0> = r1;

        r0.<com.opengamma.analytics.financial.model.volatility.discrete.DiscreteVolatilityFunctionProviderFromVolSurface$1: int val$n> = i0;

        r0.<com.opengamma.analytics.financial.model.volatility.discrete.DiscreteVolatilityFunctionProviderFromVolSurface$1: com.opengamma.util.tuple.DoublesPair[] val$expiryStrikePoints> = r2;

        specialinvoke r0.<com.opengamma.analytics.financial.model.volatility.discrete.DiscreteVolatilityFunction: void <init>()>();

        return;
    }

    public com.opengamma.analytics.math.matrix.DoubleMatrix1D evaluate(com.opengamma.analytics.math.matrix.DoubleMatrix1D)
    {
        com.opengamma.analytics.financial.model.volatility.discrete.DiscreteVolatilityFunctionProviderFromVolSurface$1 r0;
        com.opengamma.analytics.math.matrix.DoubleMatrix1D r1, $r6;
        double[] r3;
        com.opengamma.analytics.financial.model.volatility.surface.VolatilitySurface r4;
        int $i0, $i1, i2;
        com.opengamma.analytics.financial.model.volatility.discrete.DiscreteVolatilityFunctionProviderFromVolSurface $r7;
        com.opengamma.analytics.financial.model.volatility.surface.VolatilitySurfaceProvider $r8;
        com.opengamma.util.tuple.DoublesPair[] $r9;
        com.opengamma.util.tuple.DoublesPair $r10;
        java.lang.Double $r11;
        double $d0;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.discrete.DiscreteVolatilityFunctionProviderFromVolSurface$1;

        r1 := @parameter0: com.opengamma.analytics.math.matrix.DoubleMatrix1D;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "x");

        $r6 = new com.opengamma.analytics.math.matrix.DoubleMatrix1D;

        $i0 = r0.<com.opengamma.analytics.financial.model.volatility.discrete.DiscreteVolatilityFunctionProviderFromVolSurface$1: int val$n>;

        specialinvoke $r6.<com.opengamma.analytics.math.matrix.DoubleMatrix1D: void <init>(int)>($i0);

        r3 = virtualinvoke $r6.<com.opengamma.analytics.math.matrix.DoubleMatrix1D: double[] getData()>();

        $r7 = r0.<com.opengamma.analytics.financial.model.volatility.discrete.DiscreteVolatilityFunctionProviderFromVolSurface$1: com.opengamma.analytics.financial.model.volatility.discrete.DiscreteVolatilityFunctionProviderFromVolSurface this$0>;

        $r8 = staticinvoke <com.opengamma.analytics.financial.model.volatility.discrete.DiscreteVolatilityFunctionProviderFromVolSurface: com.opengamma.analytics.financial.model.volatility.surface.VolatilitySurfaceProvider access$000(com.opengamma.analytics.financial.model.volatility.discrete.DiscreteVolatilityFunctionProviderFromVolSurface)>($r7);

        r4 = interfaceinvoke $r8.<com.opengamma.analytics.financial.model.volatility.surface.VolatilitySurfaceProvider: com.opengamma.analytics.financial.model.volatility.surface.VolatilitySurface getVolSurface(com.opengamma.analytics.math.matrix.DoubleMatrix1D)>(r1);

        i2 = 0;

     label1:
        $i1 = r0.<com.opengamma.analytics.financial.model.volatility.discrete.DiscreteVolatilityFunctionProviderFromVolSurface$1: int val$n>;

        if i2 >= $i1 goto label2;

        $r9 = r0.<com.opengamma.analytics.financial.model.volatility.discrete.DiscreteVolatilityFunctionProviderFromVolSurface$1: com.opengamma.util.tuple.DoublesPair[] val$expiryStrikePoints>;

        $r10 = $r9[i2];

        $r11 = virtualinvoke r4.<com.opengamma.analytics.financial.model.volatility.surface.VolatilitySurface: java.lang.Double getVolatility(com.opengamma.util.tuple.DoublesPair)>($r10);

        $d0 = virtualinvoke $r11.<java.lang.Double: double doubleValue()>();

        r3[i2] = $d0;

        i2 = i2 + 1;

        goto label1;

     label2:
        return $r6;
    }

    public com.opengamma.analytics.math.matrix.DoubleMatrix2D calculateJacobian(com.opengamma.analytics.math.matrix.DoubleMatrix1D)
    {
        com.opengamma.analytics.financial.model.volatility.discrete.DiscreteVolatilityFunctionProviderFromVolSurface$1 r0;
        com.opengamma.analytics.math.matrix.DoubleMatrix1D r1, $r14;
        com.opengamma.analytics.math.surface.Surface r2;
        com.opengamma.analytics.financial.model.volatility.discrete.DiscreteVolatilityFunctionProviderFromVolSurface $r5, $r8;
        com.opengamma.analytics.financial.model.volatility.surface.VolatilitySurfaceProvider $r6, $r9;
        com.opengamma.analytics.math.matrix.DoubleMatrix2D $r7;
        int $i0, $i1, $i2, i3;
        double[][] $r10;
        com.opengamma.util.tuple.DoublesPair[] $r11;
        com.opengamma.util.tuple.DoublesPair $r12;
        java.lang.Object $r13;
        double[] $r15;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.discrete.DiscreteVolatilityFunctionProviderFromVolSurface$1;

        r1 := @parameter0: com.opengamma.analytics.math.matrix.DoubleMatrix1D;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "x");

        $r5 = r0.<com.opengamma.analytics.financial.model.volatility.discrete.DiscreteVolatilityFunctionProviderFromVolSurface$1: com.opengamma.analytics.financial.model.volatility.discrete.DiscreteVolatilityFunctionProviderFromVolSurface this$0>;

        $r6 = staticinvoke <com.opengamma.analytics.financial.model.volatility.discrete.DiscreteVolatilityFunctionProviderFromVolSurface: com.opengamma.analytics.financial.model.volatility.surface.VolatilitySurfaceProvider access$000(com.opengamma.analytics.financial.model.volatility.discrete.DiscreteVolatilityFunctionProviderFromVolSurface)>($r5);

        r2 = interfaceinvoke $r6.<com.opengamma.analytics.financial.model.volatility.surface.VolatilitySurfaceProvider: com.opengamma.analytics.math.surface.Surface getParameterSensitivitySurface(com.opengamma.analytics.math.matrix.DoubleMatrix1D)>(r1);

        $r7 = new com.opengamma.analytics.math.matrix.DoubleMatrix2D;

        $i0 = r0.<com.opengamma.analytics.financial.model.volatility.discrete.DiscreteVolatilityFunctionProviderFromVolSurface$1: int val$n>;

        $r8 = r0.<com.opengamma.analytics.financial.model.volatility.discrete.DiscreteVolatilityFunctionProviderFromVolSurface$1: com.opengamma.analytics.financial.model.volatility.discrete.DiscreteVolatilityFunctionProviderFromVolSurface this$0>;

        $r9 = staticinvoke <com.opengamma.analytics.financial.model.volatility.discrete.DiscreteVolatilityFunctionProviderFromVolSurface: com.opengamma.analytics.financial.model.volatility.surface.VolatilitySurfaceProvider access$000(com.opengamma.analytics.financial.model.volatility.discrete.DiscreteVolatilityFunctionProviderFromVolSurface)>($r8);

        $i1 = interfaceinvoke $r9.<com.opengamma.analytics.financial.model.volatility.surface.VolatilitySurfaceProvider: int getNumModelParameters()>();

        specialinvoke $r7.<com.opengamma.analytics.math.matrix.DoubleMatrix2D: void <init>(int,int)>($i0, $i1);

        i3 = 0;

     label1:
        $i2 = r0.<com.opengamma.analytics.financial.model.volatility.discrete.DiscreteVolatilityFunctionProviderFromVolSurface$1: int val$n>;

        if i3 >= $i2 goto label2;

        $r10 = virtualinvoke $r7.<com.opengamma.analytics.math.matrix.DoubleMatrix2D: double[][] getData()>();

        $r11 = r0.<com.opengamma.analytics.financial.model.volatility.discrete.DiscreteVolatilityFunctionProviderFromVolSurface$1: com.opengamma.util.tuple.DoublesPair[] val$expiryStrikePoints>;

        $r12 = $r11[i3];

        $r13 = virtualinvoke r2.<com.opengamma.analytics.math.surface.Surface: java.lang.Object getZValue(com.opengamma.util.tuple.Pair)>($r12);

        $r14 = (com.opengamma.analytics.math.matrix.DoubleMatrix1D) $r13;

        $r15 = virtualinvoke $r14.<com.opengamma.analytics.math.matrix.DoubleMatrix1D: double[] getData()>();

        $r10[i3] = $r15;

        i3 = i3 + 1;

        goto label1;

     label2:
        return $r7;
    }

    public int getLengthOfDomain()
    {
        com.opengamma.analytics.financial.model.volatility.discrete.DiscreteVolatilityFunctionProviderFromVolSurface$1 r0;
        com.opengamma.analytics.financial.model.volatility.discrete.DiscreteVolatilityFunctionProviderFromVolSurface $r1;
        com.opengamma.analytics.financial.model.volatility.surface.VolatilitySurfaceProvider $r2;
        int $i0;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.discrete.DiscreteVolatilityFunctionProviderFromVolSurface$1;

        $r1 = r0.<com.opengamma.analytics.financial.model.volatility.discrete.DiscreteVolatilityFunctionProviderFromVolSurface$1: com.opengamma.analytics.financial.model.volatility.discrete.DiscreteVolatilityFunctionProviderFromVolSurface this$0>;

        $r2 = staticinvoke <com.opengamma.analytics.financial.model.volatility.discrete.DiscreteVolatilityFunctionProviderFromVolSurface: com.opengamma.analytics.financial.model.volatility.surface.VolatilitySurfaceProvider access$000(com.opengamma.analytics.financial.model.volatility.discrete.DiscreteVolatilityFunctionProviderFromVolSurface)>($r1);

        $i0 = interfaceinvoke $r2.<com.opengamma.analytics.financial.model.volatility.surface.VolatilitySurfaceProvider: int getNumModelParameters()>();

        return $i0;
    }

    public int getLengthOfRange()
    {
        com.opengamma.analytics.financial.model.volatility.discrete.DiscreteVolatilityFunctionProviderFromVolSurface$1 r0;
        int $i0;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.discrete.DiscreteVolatilityFunctionProviderFromVolSurface$1;

        $i0 = r0.<com.opengamma.analytics.financial.model.volatility.discrete.DiscreteVolatilityFunctionProviderFromVolSurface$1: int val$n>;

        return $i0;
    }

    public volatile java.lang.Object evaluate(java.lang.Object)
    {
        com.opengamma.analytics.financial.model.volatility.discrete.DiscreteVolatilityFunctionProviderFromVolSurface$1 r0;
        java.lang.Object r1;
        com.opengamma.analytics.math.matrix.DoubleMatrix1D $r2, $r3;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.discrete.DiscreteVolatilityFunctionProviderFromVolSurface$1;

        r1 := @parameter0: java.lang.Object;

        $r2 = (com.opengamma.analytics.math.matrix.DoubleMatrix1D) r1;

        $r3 = virtualinvoke r0.<com.opengamma.analytics.financial.model.volatility.discrete.DiscreteVolatilityFunctionProviderFromVolSurface$1: com.opengamma.analytics.math.matrix.DoubleMatrix1D evaluate(com.opengamma.analytics.math.matrix.DoubleMatrix1D)>($r2);

        return $r3;
    }
}
