public class org.apache.commons.math3.geometry.euclidean.twod.Segment extends java.lang.Object
{
    private final org.apache.commons.math3.geometry.euclidean.twod.Vector2D start;
    private final org.apache.commons.math3.geometry.euclidean.twod.Vector2D end;
    private final org.apache.commons.math3.geometry.euclidean.twod.Line line;

    public void <init>(org.apache.commons.math3.geometry.euclidean.twod.Vector2D, org.apache.commons.math3.geometry.euclidean.twod.Vector2D, org.apache.commons.math3.geometry.euclidean.twod.Line)
    {
        org.apache.commons.math3.geometry.euclidean.twod.Segment r0;
        org.apache.commons.math3.geometry.euclidean.twod.Vector2D r1, r2;
        org.apache.commons.math3.geometry.euclidean.twod.Line r3;

        r0 := @this: org.apache.commons.math3.geometry.euclidean.twod.Segment;

        r1 := @parameter0: org.apache.commons.math3.geometry.euclidean.twod.Vector2D;

        r2 := @parameter1: org.apache.commons.math3.geometry.euclidean.twod.Vector2D;

        r3 := @parameter2: org.apache.commons.math3.geometry.euclidean.twod.Line;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.commons.math3.geometry.euclidean.twod.Segment: org.apache.commons.math3.geometry.euclidean.twod.Vector2D start> = r1;

        r0.<org.apache.commons.math3.geometry.euclidean.twod.Segment: org.apache.commons.math3.geometry.euclidean.twod.Vector2D end> = r2;

        r0.<org.apache.commons.math3.geometry.euclidean.twod.Segment: org.apache.commons.math3.geometry.euclidean.twod.Line line> = r3;

        return;
    }

    public org.apache.commons.math3.geometry.euclidean.twod.Vector2D getStart()
    {
        org.apache.commons.math3.geometry.euclidean.twod.Segment r0;
        org.apache.commons.math3.geometry.euclidean.twod.Vector2D $r1;

        r0 := @this: org.apache.commons.math3.geometry.euclidean.twod.Segment;

        $r1 = r0.<org.apache.commons.math3.geometry.euclidean.twod.Segment: org.apache.commons.math3.geometry.euclidean.twod.Vector2D start>;

        return $r1;
    }

    public org.apache.commons.math3.geometry.euclidean.twod.Vector2D getEnd()
    {
        org.apache.commons.math3.geometry.euclidean.twod.Segment r0;
        org.apache.commons.math3.geometry.euclidean.twod.Vector2D $r1;

        r0 := @this: org.apache.commons.math3.geometry.euclidean.twod.Segment;

        $r1 = r0.<org.apache.commons.math3.geometry.euclidean.twod.Segment: org.apache.commons.math3.geometry.euclidean.twod.Vector2D end>;

        return $r1;
    }

    public org.apache.commons.math3.geometry.euclidean.twod.Line getLine()
    {
        org.apache.commons.math3.geometry.euclidean.twod.Segment r0;
        org.apache.commons.math3.geometry.euclidean.twod.Line $r1;

        r0 := @this: org.apache.commons.math3.geometry.euclidean.twod.Segment;

        $r1 = r0.<org.apache.commons.math3.geometry.euclidean.twod.Segment: org.apache.commons.math3.geometry.euclidean.twod.Line line>;

        return $r1;
    }

    public double distance(org.apache.commons.math3.geometry.euclidean.twod.Vector2D)
    {
        org.apache.commons.math3.geometry.euclidean.twod.Segment r0;
        org.apache.commons.math3.geometry.euclidean.twod.Vector2D r1, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13;
        double d0, d1, d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21, $d22, $d23, $d24, d25, d26, d27, d28;
        byte $b0, $b1;

        r0 := @this: org.apache.commons.math3.geometry.euclidean.twod.Segment;

        r1 := @parameter0: org.apache.commons.math3.geometry.euclidean.twod.Vector2D;

        $r3 = r0.<org.apache.commons.math3.geometry.euclidean.twod.Segment: org.apache.commons.math3.geometry.euclidean.twod.Vector2D end>;

        $d3 = virtualinvoke $r3.<org.apache.commons.math3.geometry.euclidean.twod.Vector2D: double getX()>();

        $r4 = r0.<org.apache.commons.math3.geometry.euclidean.twod.Segment: org.apache.commons.math3.geometry.euclidean.twod.Vector2D start>;

        $d4 = virtualinvoke $r4.<org.apache.commons.math3.geometry.euclidean.twod.Vector2D: double getX()>();

        d0 = $d3 - $d4;

        $r5 = r0.<org.apache.commons.math3.geometry.euclidean.twod.Segment: org.apache.commons.math3.geometry.euclidean.twod.Vector2D end>;

        $d5 = virtualinvoke $r5.<org.apache.commons.math3.geometry.euclidean.twod.Vector2D: double getY()>();

        $r6 = r0.<org.apache.commons.math3.geometry.euclidean.twod.Segment: org.apache.commons.math3.geometry.euclidean.twod.Vector2D start>;

        $d6 = virtualinvoke $r6.<org.apache.commons.math3.geometry.euclidean.twod.Vector2D: double getY()>();

        d1 = $d5 - $d6;

        $d7 = virtualinvoke r1.<org.apache.commons.math3.geometry.euclidean.twod.Vector2D: double getX()>();

        $r7 = r0.<org.apache.commons.math3.geometry.euclidean.twod.Segment: org.apache.commons.math3.geometry.euclidean.twod.Vector2D start>;

        $d8 = virtualinvoke $r7.<org.apache.commons.math3.geometry.euclidean.twod.Vector2D: double getX()>();

        $d9 = $d7 - $d8;

        $d10 = $d9 * d0;

        $d11 = virtualinvoke r1.<org.apache.commons.math3.geometry.euclidean.twod.Vector2D: double getY()>();

        $r8 = r0.<org.apache.commons.math3.geometry.euclidean.twod.Segment: org.apache.commons.math3.geometry.euclidean.twod.Vector2D start>;

        $d12 = virtualinvoke $r8.<org.apache.commons.math3.geometry.euclidean.twod.Vector2D: double getY()>();

        $d13 = $d11 - $d12;

        $d14 = $d13 * d1;

        $d18 = $d10 + $d14;

        $d16 = d0 * d0;

        $d15 = d1 * d1;

        $d17 = $d16 + $d15;

        d2 = $d18 / $d17;

        $b0 = d2 cmpg 0.0;

        if $b0 < 0 goto label1;

        $b1 = d2 cmpl 1.0;

        if $b1 <= 0 goto label2;

     label1:
        $r9 = virtualinvoke r0.<org.apache.commons.math3.geometry.euclidean.twod.Segment: org.apache.commons.math3.geometry.euclidean.twod.Vector2D getStart()>();

        d25 = virtualinvoke $r9.<org.apache.commons.math3.geometry.euclidean.twod.Vector2D: double distance(org.apache.commons.math3.geometry.Point)>(r1);

        $r10 = virtualinvoke r0.<org.apache.commons.math3.geometry.euclidean.twod.Segment: org.apache.commons.math3.geometry.euclidean.twod.Vector2D getEnd()>();

        d26 = virtualinvoke $r10.<org.apache.commons.math3.geometry.euclidean.twod.Vector2D: double distance(org.apache.commons.math3.geometry.Point)>(r1);

        $d19 = staticinvoke <org.apache.commons.math3.util.FastMath: double min(double,double)>(d25, d26);

        return $d19;

     label2:
        $r11 = r0.<org.apache.commons.math3.geometry.euclidean.twod.Segment: org.apache.commons.math3.geometry.euclidean.twod.Vector2D start>;

        $d20 = virtualinvoke $r11.<org.apache.commons.math3.geometry.euclidean.twod.Vector2D: double getX()>();

        $d21 = d2 * d0;

        d27 = $d20 + $d21;

        $r12 = r0.<org.apache.commons.math3.geometry.euclidean.twod.Segment: org.apache.commons.math3.geometry.euclidean.twod.Vector2D start>;

        $d22 = virtualinvoke $r12.<org.apache.commons.math3.geometry.euclidean.twod.Vector2D: double getY()>();

        $d23 = d2 * d1;

        d28 = $d22 + $d23;

        $r13 = new org.apache.commons.math3.geometry.euclidean.twod.Vector2D;

        specialinvoke $r13.<org.apache.commons.math3.geometry.euclidean.twod.Vector2D: void <init>(double,double)>(d27, d28);

        $d24 = virtualinvoke $r13.<org.apache.commons.math3.geometry.euclidean.twod.Vector2D: double distance(org.apache.commons.math3.geometry.Point)>(r1);

        return $d24;
    }
}
