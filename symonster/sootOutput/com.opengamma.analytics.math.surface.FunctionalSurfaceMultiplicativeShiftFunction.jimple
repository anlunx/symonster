public class com.opengamma.analytics.math.surface.FunctionalSurfaceMultiplicativeShiftFunction extends java.lang.Object implements com.opengamma.analytics.math.surface.SurfaceShiftFunction
{

    public void <init>()
    {
        com.opengamma.analytics.math.surface.FunctionalSurfaceMultiplicativeShiftFunction r0;

        r0 := @this: com.opengamma.analytics.math.surface.FunctionalSurfaceMultiplicativeShiftFunction;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public com.opengamma.analytics.math.surface.FunctionalDoublesSurface evaluate(com.opengamma.analytics.math.surface.FunctionalDoublesSurface, double)
    {
        com.opengamma.analytics.math.surface.FunctionalSurfaceMultiplicativeShiftFunction r0;
        com.opengamma.analytics.math.surface.FunctionalDoublesSurface r1, $r7;
        double d0;
        java.lang.StringBuilder $r2, $r3, $r5;
        java.lang.String $r4, $r6;

        r0 := @this: com.opengamma.analytics.math.surface.FunctionalSurfaceMultiplicativeShiftFunction;

        r1 := @parameter0: com.opengamma.analytics.math.surface.FunctionalDoublesSurface;

        d0 := @parameter1: double;

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object,java.lang.String)>(r1, "surface");

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("CONSTANT_MULTIPLIER_");

        $r4 = virtualinvoke r1.<com.opengamma.analytics.math.surface.FunctionalDoublesSurface: java.lang.String getName()>();

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        $r7 = virtualinvoke r0.<com.opengamma.analytics.math.surface.FunctionalSurfaceMultiplicativeShiftFunction: com.opengamma.analytics.math.surface.FunctionalDoublesSurface evaluate(com.opengamma.analytics.math.surface.FunctionalDoublesSurface,double,java.lang.String)>(r1, d0, $r6);

        return $r7;
    }

    public com.opengamma.analytics.math.surface.FunctionalDoublesSurface evaluate(com.opengamma.analytics.math.surface.FunctionalDoublesSurface, double, java.lang.String)
    {
        com.opengamma.analytics.math.surface.FunctionalSurfaceMultiplicativeShiftFunction r0;
        com.opengamma.analytics.math.surface.FunctionalDoublesSurface r1, $r6;
        double d0;
        java.lang.String r2;
        com.opengamma.analytics.math.function.Function r3;
        com.opengamma.analytics.math.surface.FunctionalSurfaceMultiplicativeShiftFunction$ShiftedFunction $r5;

        r0 := @this: com.opengamma.analytics.math.surface.FunctionalSurfaceMultiplicativeShiftFunction;

        r1 := @parameter0: com.opengamma.analytics.math.surface.FunctionalDoublesSurface;

        d0 := @parameter1: double;

        r2 := @parameter2: java.lang.String;

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object,java.lang.String)>(r1, "surface");

        r3 = virtualinvoke r1.<com.opengamma.analytics.math.surface.FunctionalDoublesSurface: com.opengamma.analytics.math.function.Function getFunction()>();

        $r5 = new com.opengamma.analytics.math.surface.FunctionalSurfaceMultiplicativeShiftFunction$ShiftedFunction;

        specialinvoke $r5.<com.opengamma.analytics.math.surface.FunctionalSurfaceMultiplicativeShiftFunction$ShiftedFunction: void <init>(double,com.opengamma.analytics.math.function.Function)>(d0, r3);

        $r6 = staticinvoke <com.opengamma.analytics.math.surface.FunctionalDoublesSurface: com.opengamma.analytics.math.surface.FunctionalDoublesSurface 'from'(com.opengamma.analytics.math.function.Function,java.lang.String)>($r5, r2);

        return $r6;
    }

    public com.opengamma.analytics.math.surface.FunctionalDoublesSurface evaluate(com.opengamma.analytics.math.surface.FunctionalDoublesSurface, double, double, double)
    {
        com.opengamma.analytics.math.surface.FunctionalSurfaceMultiplicativeShiftFunction r0;
        com.opengamma.analytics.math.surface.FunctionalDoublesSurface r1;
        double d0, d1, d2;
        java.lang.UnsupportedOperationException $r2;

        r0 := @this: com.opengamma.analytics.math.surface.FunctionalSurfaceMultiplicativeShiftFunction;

        r1 := @parameter0: com.opengamma.analytics.math.surface.FunctionalDoublesSurface;

        d0 := @parameter1: double;

        d1 := @parameter2: double;

        d2 := @parameter3: double;

        $r2 = new java.lang.UnsupportedOperationException;

        specialinvoke $r2.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r2;
    }

    public com.opengamma.analytics.math.surface.FunctionalDoublesSurface evaluate(com.opengamma.analytics.math.surface.FunctionalDoublesSurface, double, double, double, java.lang.String)
    {
        com.opengamma.analytics.math.surface.FunctionalSurfaceMultiplicativeShiftFunction r0;
        com.opengamma.analytics.math.surface.FunctionalDoublesSurface r1;
        double d0, d1, d2;
        java.lang.String r2;
        java.lang.UnsupportedOperationException $r3;

        r0 := @this: com.opengamma.analytics.math.surface.FunctionalSurfaceMultiplicativeShiftFunction;

        r1 := @parameter0: com.opengamma.analytics.math.surface.FunctionalDoublesSurface;

        d0 := @parameter1: double;

        d1 := @parameter2: double;

        d2 := @parameter3: double;

        r2 := @parameter4: java.lang.String;

        $r3 = new java.lang.UnsupportedOperationException;

        specialinvoke $r3.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r3;
    }

    public com.opengamma.analytics.math.surface.FunctionalDoublesSurface evaluate(com.opengamma.analytics.math.surface.FunctionalDoublesSurface, double[], double[], double[])
    {
        com.opengamma.analytics.math.surface.FunctionalSurfaceMultiplicativeShiftFunction r0;
        com.opengamma.analytics.math.surface.FunctionalDoublesSurface r1;
        double[] r2, r3, r4;
        java.lang.UnsupportedOperationException $r5;

        r0 := @this: com.opengamma.analytics.math.surface.FunctionalSurfaceMultiplicativeShiftFunction;

        r1 := @parameter0: com.opengamma.analytics.math.surface.FunctionalDoublesSurface;

        r2 := @parameter1: double[];

        r3 := @parameter2: double[];

        r4 := @parameter3: double[];

        $r5 = new java.lang.UnsupportedOperationException;

        specialinvoke $r5.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r5;
    }

    public com.opengamma.analytics.math.surface.FunctionalDoublesSurface evaluate(com.opengamma.analytics.math.surface.FunctionalDoublesSurface, double[], double[], double[], java.lang.String)
    {
        com.opengamma.analytics.math.surface.FunctionalSurfaceMultiplicativeShiftFunction r0;
        com.opengamma.analytics.math.surface.FunctionalDoublesSurface r1;
        double[] r2, r3, r4;
        java.lang.String r5;
        java.lang.UnsupportedOperationException $r6;

        r0 := @this: com.opengamma.analytics.math.surface.FunctionalSurfaceMultiplicativeShiftFunction;

        r1 := @parameter0: com.opengamma.analytics.math.surface.FunctionalDoublesSurface;

        r2 := @parameter1: double[];

        r3 := @parameter2: double[];

        r4 := @parameter3: double[];

        r5 := @parameter4: java.lang.String;

        $r6 = new java.lang.UnsupportedOperationException;

        specialinvoke $r6.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r6;
    }

    public volatile com.opengamma.analytics.math.surface.Surface evaluate(com.opengamma.analytics.math.surface.Surface, double[], double[], double[], java.lang.String)
    {
        com.opengamma.analytics.math.surface.FunctionalSurfaceMultiplicativeShiftFunction r0;
        com.opengamma.analytics.math.surface.Surface r1;
        double[] r2, r3, r4;
        java.lang.String r5;
        com.opengamma.analytics.math.surface.FunctionalDoublesSurface $r6, $r7;

        r0 := @this: com.opengamma.analytics.math.surface.FunctionalSurfaceMultiplicativeShiftFunction;

        r1 := @parameter0: com.opengamma.analytics.math.surface.Surface;

        r2 := @parameter1: double[];

        r3 := @parameter2: double[];

        r4 := @parameter3: double[];

        r5 := @parameter4: java.lang.String;

        $r6 = (com.opengamma.analytics.math.surface.FunctionalDoublesSurface) r1;

        $r7 = virtualinvoke r0.<com.opengamma.analytics.math.surface.FunctionalSurfaceMultiplicativeShiftFunction: com.opengamma.analytics.math.surface.FunctionalDoublesSurface evaluate(com.opengamma.analytics.math.surface.FunctionalDoublesSurface,double[],double[],double[],java.lang.String)>($r6, r2, r3, r4, r5);

        return $r7;
    }

    public volatile com.opengamma.analytics.math.surface.Surface evaluate(com.opengamma.analytics.math.surface.Surface, double[], double[], double[])
    {
        com.opengamma.analytics.math.surface.FunctionalSurfaceMultiplicativeShiftFunction r0;
        com.opengamma.analytics.math.surface.Surface r1;
        double[] r2, r3, r4;
        com.opengamma.analytics.math.surface.FunctionalDoublesSurface $r5, $r6;

        r0 := @this: com.opengamma.analytics.math.surface.FunctionalSurfaceMultiplicativeShiftFunction;

        r1 := @parameter0: com.opengamma.analytics.math.surface.Surface;

        r2 := @parameter1: double[];

        r3 := @parameter2: double[];

        r4 := @parameter3: double[];

        $r5 = (com.opengamma.analytics.math.surface.FunctionalDoublesSurface) r1;

        $r6 = virtualinvoke r0.<com.opengamma.analytics.math.surface.FunctionalSurfaceMultiplicativeShiftFunction: com.opengamma.analytics.math.surface.FunctionalDoublesSurface evaluate(com.opengamma.analytics.math.surface.FunctionalDoublesSurface,double[],double[],double[])>($r5, r2, r3, r4);

        return $r6;
    }

    public volatile com.opengamma.analytics.math.surface.Surface evaluate(com.opengamma.analytics.math.surface.Surface, double, double, double, java.lang.String)
    {
        com.opengamma.analytics.math.surface.FunctionalSurfaceMultiplicativeShiftFunction r0;
        com.opengamma.analytics.math.surface.Surface r1;
        double d0, d1, d2;
        java.lang.String r2;
        com.opengamma.analytics.math.surface.FunctionalDoublesSurface $r3, $r4;

        r0 := @this: com.opengamma.analytics.math.surface.FunctionalSurfaceMultiplicativeShiftFunction;

        r1 := @parameter0: com.opengamma.analytics.math.surface.Surface;

        d0 := @parameter1: double;

        d1 := @parameter2: double;

        d2 := @parameter3: double;

        r2 := @parameter4: java.lang.String;

        $r3 = (com.opengamma.analytics.math.surface.FunctionalDoublesSurface) r1;

        $r4 = virtualinvoke r0.<com.opengamma.analytics.math.surface.FunctionalSurfaceMultiplicativeShiftFunction: com.opengamma.analytics.math.surface.FunctionalDoublesSurface evaluate(com.opengamma.analytics.math.surface.FunctionalDoublesSurface,double,double,double,java.lang.String)>($r3, d0, d1, d2, r2);

        return $r4;
    }

    public volatile com.opengamma.analytics.math.surface.Surface evaluate(com.opengamma.analytics.math.surface.Surface, double, double, double)
    {
        com.opengamma.analytics.math.surface.FunctionalSurfaceMultiplicativeShiftFunction r0;
        com.opengamma.analytics.math.surface.Surface r1;
        double d0, d1, d2;
        com.opengamma.analytics.math.surface.FunctionalDoublesSurface $r2, $r3;

        r0 := @this: com.opengamma.analytics.math.surface.FunctionalSurfaceMultiplicativeShiftFunction;

        r1 := @parameter0: com.opengamma.analytics.math.surface.Surface;

        d0 := @parameter1: double;

        d1 := @parameter2: double;

        d2 := @parameter3: double;

        $r2 = (com.opengamma.analytics.math.surface.FunctionalDoublesSurface) r1;

        $r3 = virtualinvoke r0.<com.opengamma.analytics.math.surface.FunctionalSurfaceMultiplicativeShiftFunction: com.opengamma.analytics.math.surface.FunctionalDoublesSurface evaluate(com.opengamma.analytics.math.surface.FunctionalDoublesSurface,double,double,double)>($r2, d0, d1, d2);

        return $r3;
    }

    public volatile com.opengamma.analytics.math.surface.Surface evaluate(com.opengamma.analytics.math.surface.Surface, double, java.lang.String)
    {
        com.opengamma.analytics.math.surface.FunctionalSurfaceMultiplicativeShiftFunction r0;
        com.opengamma.analytics.math.surface.Surface r1;
        double d0;
        java.lang.String r2;
        com.opengamma.analytics.math.surface.FunctionalDoublesSurface $r3, $r4;

        r0 := @this: com.opengamma.analytics.math.surface.FunctionalSurfaceMultiplicativeShiftFunction;

        r1 := @parameter0: com.opengamma.analytics.math.surface.Surface;

        d0 := @parameter1: double;

        r2 := @parameter2: java.lang.String;

        $r3 = (com.opengamma.analytics.math.surface.FunctionalDoublesSurface) r1;

        $r4 = virtualinvoke r0.<com.opengamma.analytics.math.surface.FunctionalSurfaceMultiplicativeShiftFunction: com.opengamma.analytics.math.surface.FunctionalDoublesSurface evaluate(com.opengamma.analytics.math.surface.FunctionalDoublesSurface,double,java.lang.String)>($r3, d0, r2);

        return $r4;
    }

    public volatile com.opengamma.analytics.math.surface.Surface evaluate(com.opengamma.analytics.math.surface.Surface, double)
    {
        com.opengamma.analytics.math.surface.FunctionalSurfaceMultiplicativeShiftFunction r0;
        com.opengamma.analytics.math.surface.Surface r1;
        double d0;
        com.opengamma.analytics.math.surface.FunctionalDoublesSurface $r2, $r3;

        r0 := @this: com.opengamma.analytics.math.surface.FunctionalSurfaceMultiplicativeShiftFunction;

        r1 := @parameter0: com.opengamma.analytics.math.surface.Surface;

        d0 := @parameter1: double;

        $r2 = (com.opengamma.analytics.math.surface.FunctionalDoublesSurface) r1;

        $r3 = virtualinvoke r0.<com.opengamma.analytics.math.surface.FunctionalSurfaceMultiplicativeShiftFunction: com.opengamma.analytics.math.surface.FunctionalDoublesSurface evaluate(com.opengamma.analytics.math.surface.FunctionalDoublesSurface,double)>($r2, d0);

        return $r3;
    }
}
