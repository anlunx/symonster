public class org.apache.commons.math.random.UncorrelatedRandomVectorGenerator extends java.lang.Object implements org.apache.commons.math.random.RandomVectorGenerator
{
    private final org.apache.commons.math.random.NormalizedRandomGenerator generator;
    private final double[] mean;
    private final double[] standardDeviation;

    public void <init>(double[], double[], org.apache.commons.math.random.NormalizedRandomGenerator)
    {
        org.apache.commons.math.random.UncorrelatedRandomVectorGenerator r0;
        double[] r1, r2, $r5, $r7;
        org.apache.commons.math.random.NormalizedRandomGenerator r3;
        int $i0, $i1, $i2, $i3;
        java.lang.Object $r4, $r6;
        org.apache.commons.math.exception.DimensionMismatchException $r8;

        r0 := @this: org.apache.commons.math.random.UncorrelatedRandomVectorGenerator;

        r1 := @parameter0: double[];

        r2 := @parameter1: double[];

        r3 := @parameter2: org.apache.commons.math.random.NormalizedRandomGenerator;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $i1 = lengthof r1;

        $i0 = lengthof r2;

        if $i1 == $i0 goto label1;

        $r8 = new org.apache.commons.math.exception.DimensionMismatchException;

        $i3 = lengthof r1;

        $i2 = lengthof r2;

        specialinvoke $r8.<org.apache.commons.math.exception.DimensionMismatchException: void <init>(int,int)>($i3, $i2);

        throw $r8;

     label1:
        $r4 = virtualinvoke r1.<java.lang.Object: java.lang.Object clone()>();

        $r5 = (double[]) $r4;

        r0.<org.apache.commons.math.random.UncorrelatedRandomVectorGenerator: double[] mean> = $r5;

        $r6 = virtualinvoke r2.<java.lang.Object: java.lang.Object clone()>();

        $r7 = (double[]) $r6;

        r0.<org.apache.commons.math.random.UncorrelatedRandomVectorGenerator: double[] standardDeviation> = $r7;

        r0.<org.apache.commons.math.random.UncorrelatedRandomVectorGenerator: org.apache.commons.math.random.NormalizedRandomGenerator generator> = r3;

        return;
    }

    public void <init>(int, org.apache.commons.math.random.NormalizedRandomGenerator)
    {
        org.apache.commons.math.random.UncorrelatedRandomVectorGenerator r0;
        int i0;
        org.apache.commons.math.random.NormalizedRandomGenerator r1;
        double[] $r2, $r3, $r4;

        r0 := @this: org.apache.commons.math.random.UncorrelatedRandomVectorGenerator;

        i0 := @parameter0: int;

        r1 := @parameter1: org.apache.commons.math.random.NormalizedRandomGenerator;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = newarray (double)[i0];

        r0.<org.apache.commons.math.random.UncorrelatedRandomVectorGenerator: double[] mean> = $r2;

        $r3 = newarray (double)[i0];

        r0.<org.apache.commons.math.random.UncorrelatedRandomVectorGenerator: double[] standardDeviation> = $r3;

        $r4 = r0.<org.apache.commons.math.random.UncorrelatedRandomVectorGenerator: double[] standardDeviation>;

        staticinvoke <java.util.Arrays: void fill(double[],double)>($r4, 1.0);

        r0.<org.apache.commons.math.random.UncorrelatedRandomVectorGenerator: org.apache.commons.math.random.NormalizedRandomGenerator generator> = r1;

        return;
    }

    public double[] nextVector()
    {
        org.apache.commons.math.random.UncorrelatedRandomVectorGenerator r0;
        double[] r1, $r2, $r3, $r4;
        int $i0, $i1, i2;
        org.apache.commons.math.random.NormalizedRandomGenerator $r5;
        double $d0, $d1, $d2, $d3, $d4;

        r0 := @this: org.apache.commons.math.random.UncorrelatedRandomVectorGenerator;

        $r2 = r0.<org.apache.commons.math.random.UncorrelatedRandomVectorGenerator: double[] mean>;

        $i0 = lengthof $r2;

        r1 = newarray (double)[$i0];

        i2 = 0;

     label1:
        $i1 = lengthof r1;

        if i2 >= $i1 goto label2;

        $r3 = r0.<org.apache.commons.math.random.UncorrelatedRandomVectorGenerator: double[] mean>;

        $d0 = $r3[i2];

        $r4 = r0.<org.apache.commons.math.random.UncorrelatedRandomVectorGenerator: double[] standardDeviation>;

        $d1 = $r4[i2];

        $r5 = r0.<org.apache.commons.math.random.UncorrelatedRandomVectorGenerator: org.apache.commons.math.random.NormalizedRandomGenerator generator>;

        $d2 = interfaceinvoke $r5.<org.apache.commons.math.random.NormalizedRandomGenerator: double nextNormalizedDouble()>();

        $d3 = $d1 * $d2;

        $d4 = $d0 + $d3;

        r1[i2] = $d4;

        i2 = i2 + 1;

        goto label1;

     label2:
        return r1;
    }
}
