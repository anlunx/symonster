public class org.apache.commons.math3.optimization.BaseMultivariateMultiStartOptimizer extends java.lang.Object implements org.apache.commons.math3.optimization.BaseMultivariateOptimizer
{
    private final org.apache.commons.math3.optimization.BaseMultivariateOptimizer optimizer;
    private int maxEvaluations;
    private int totalEvaluations;
    private int starts;
    private org.apache.commons.math3.random.RandomVectorGenerator generator;
    private org.apache.commons.math3.optimization.PointValuePair[] optima;

    protected void <init>(org.apache.commons.math3.optimization.BaseMultivariateOptimizer, int, org.apache.commons.math3.random.RandomVectorGenerator)
    {
        org.apache.commons.math3.optimization.BaseMultivariateMultiStartOptimizer r0;
        org.apache.commons.math3.optimization.BaseMultivariateOptimizer r1;
        int i0;
        org.apache.commons.math3.random.RandomVectorGenerator r2;
        org.apache.commons.math3.exception.NullArgumentException $r3;
        org.apache.commons.math3.exception.NotStrictlyPositiveException $r4;
        java.lang.Integer $r5;

        r0 := @this: org.apache.commons.math3.optimization.BaseMultivariateMultiStartOptimizer;

        r1 := @parameter0: org.apache.commons.math3.optimization.BaseMultivariateOptimizer;

        i0 := @parameter1: int;

        r2 := @parameter2: org.apache.commons.math3.random.RandomVectorGenerator;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        if r1 == null goto label1;

        if r2 != null goto label2;

     label1:
        $r3 = new org.apache.commons.math3.exception.NullArgumentException;

        specialinvoke $r3.<org.apache.commons.math3.exception.NullArgumentException: void <init>()>();

        throw $r3;

     label2:
        if i0 >= 1 goto label3;

        $r4 = new org.apache.commons.math3.exception.NotStrictlyPositiveException;

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        specialinvoke $r4.<org.apache.commons.math3.exception.NotStrictlyPositiveException: void <init>(java.lang.Number)>($r5);

        throw $r4;

     label3:
        r0.<org.apache.commons.math3.optimization.BaseMultivariateMultiStartOptimizer: org.apache.commons.math3.optimization.BaseMultivariateOptimizer optimizer> = r1;

        r0.<org.apache.commons.math3.optimization.BaseMultivariateMultiStartOptimizer: int starts> = i0;

        r0.<org.apache.commons.math3.optimization.BaseMultivariateMultiStartOptimizer: org.apache.commons.math3.random.RandomVectorGenerator generator> = r2;

        return;
    }

    public org.apache.commons.math3.optimization.PointValuePair[] getOptima()
    {
        org.apache.commons.math3.optimization.BaseMultivariateMultiStartOptimizer r0;
        org.apache.commons.math3.optimization.PointValuePair[] $r1, $r2, $r4;
        java.lang.Object $r3;
        org.apache.commons.math3.exception.MathIllegalStateException $r5;
        java.lang.Object[] $r6;
        org.apache.commons.math3.exception.util.LocalizedFormats $r7;

        r0 := @this: org.apache.commons.math3.optimization.BaseMultivariateMultiStartOptimizer;

        $r1 = r0.<org.apache.commons.math3.optimization.BaseMultivariateMultiStartOptimizer: org.apache.commons.math3.optimization.PointValuePair[] optima>;

        if $r1 != null goto label1;

        $r5 = new org.apache.commons.math3.exception.MathIllegalStateException;

        $r7 = <org.apache.commons.math3.exception.util.LocalizedFormats: org.apache.commons.math3.exception.util.LocalizedFormats NO_OPTIMUM_COMPUTED_YET>;

        $r6 = newarray (java.lang.Object)[0];

        specialinvoke $r5.<org.apache.commons.math3.exception.MathIllegalStateException: void <init>(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])>($r7, $r6);

        throw $r5;

     label1:
        $r2 = r0.<org.apache.commons.math3.optimization.BaseMultivariateMultiStartOptimizer: org.apache.commons.math3.optimization.PointValuePair[] optima>;

        $r3 = virtualinvoke $r2.<java.lang.Object: java.lang.Object clone()>();

        $r4 = (org.apache.commons.math3.optimization.PointValuePair[]) $r3;

        return $r4;
    }

    public int getMaxEvaluations()
    {
        org.apache.commons.math3.optimization.BaseMultivariateMultiStartOptimizer r0;
        int $i0;

        r0 := @this: org.apache.commons.math3.optimization.BaseMultivariateMultiStartOptimizer;

        $i0 = r0.<org.apache.commons.math3.optimization.BaseMultivariateMultiStartOptimizer: int maxEvaluations>;

        return $i0;
    }

    public int getEvaluations()
    {
        org.apache.commons.math3.optimization.BaseMultivariateMultiStartOptimizer r0;
        int $i0;

        r0 := @this: org.apache.commons.math3.optimization.BaseMultivariateMultiStartOptimizer;

        $i0 = r0.<org.apache.commons.math3.optimization.BaseMultivariateMultiStartOptimizer: int totalEvaluations>;

        return $i0;
    }

    public org.apache.commons.math3.optimization.ConvergenceChecker getConvergenceChecker()
    {
        org.apache.commons.math3.optimization.BaseMultivariateMultiStartOptimizer r0;
        org.apache.commons.math3.optimization.BaseMultivariateOptimizer $r1;
        org.apache.commons.math3.optimization.ConvergenceChecker $r2;

        r0 := @this: org.apache.commons.math3.optimization.BaseMultivariateMultiStartOptimizer;

        $r1 = r0.<org.apache.commons.math3.optimization.BaseMultivariateMultiStartOptimizer: org.apache.commons.math3.optimization.BaseMultivariateOptimizer optimizer>;

        $r2 = interfaceinvoke $r1.<org.apache.commons.math3.optimization.BaseMultivariateOptimizer: org.apache.commons.math3.optimization.ConvergenceChecker getConvergenceChecker()>();

        return $r2;
    }

    public org.apache.commons.math3.optimization.PointValuePair optimize(int, org.apache.commons.math3.analysis.MultivariateFunction, org.apache.commons.math3.optimization.GoalType, double[])
    {
        org.apache.commons.math3.optimization.BaseMultivariateMultiStartOptimizer r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, i9;
        org.apache.commons.math3.analysis.MultivariateFunction r1;
        org.apache.commons.math3.optimization.GoalType r2;
        double[] r3, $r21;
        org.apache.commons.math3.optimization.PointValuePair[] $r5, $r6, $r8, $r11, $r18;
        org.apache.commons.math3.optimization.PointValuePair $r7, $r9, $r13;
        org.apache.commons.math3.random.RandomVectorGenerator $r10;
        org.apache.commons.math3.optimization.BaseMultivariateOptimizer $r12, $r14;
        java.lang.RuntimeException $r17, r20;

        r0 := @this: org.apache.commons.math3.optimization.BaseMultivariateMultiStartOptimizer;

        i0 := @parameter0: int;

        r1 := @parameter1: org.apache.commons.math3.analysis.MultivariateFunction;

        r2 := @parameter2: org.apache.commons.math3.optimization.GoalType;

        r3 := @parameter3: double[];

        r0.<org.apache.commons.math3.optimization.BaseMultivariateMultiStartOptimizer: int maxEvaluations> = i0;

        r20 = null;

        $i1 = r0.<org.apache.commons.math3.optimization.BaseMultivariateMultiStartOptimizer: int starts>;

        $r5 = newarray (org.apache.commons.math3.optimization.PointValuePair)[$i1];

        r0.<org.apache.commons.math3.optimization.BaseMultivariateMultiStartOptimizer: org.apache.commons.math3.optimization.PointValuePair[] optima> = $r5;

        r0.<org.apache.commons.math3.optimization.BaseMultivariateMultiStartOptimizer: int totalEvaluations> = 0;

        i9 = 0;

     label1:
        $i2 = r0.<org.apache.commons.math3.optimization.BaseMultivariateMultiStartOptimizer: int starts>;

        if i9 >= $i2 goto label8;

     label2:
        $r11 = r0.<org.apache.commons.math3.optimization.BaseMultivariateMultiStartOptimizer: org.apache.commons.math3.optimization.PointValuePair[] optima>;

        $i8 = i9;

        $r12 = r0.<org.apache.commons.math3.optimization.BaseMultivariateMultiStartOptimizer: org.apache.commons.math3.optimization.BaseMultivariateOptimizer optimizer>;

        $i3 = r0.<org.apache.commons.math3.optimization.BaseMultivariateMultiStartOptimizer: int totalEvaluations>;

        $i4 = i0 - $i3;

        if i9 != 0 goto label3;

        $r21 = r3;

        goto label4;

     label3:
        $r10 = r0.<org.apache.commons.math3.optimization.BaseMultivariateMultiStartOptimizer: org.apache.commons.math3.random.RandomVectorGenerator generator>;

        $r21 = interfaceinvoke $r10.<org.apache.commons.math3.random.RandomVectorGenerator: double[] nextVector()>();

     label4:
        $r13 = interfaceinvoke $r12.<org.apache.commons.math3.optimization.BaseMultivariateOptimizer: org.apache.commons.math3.optimization.PointValuePair optimize(int,org.apache.commons.math3.analysis.MultivariateFunction,org.apache.commons.math3.optimization.GoalType,double[])>($i4, r1, r2, $r21);

        $r11[$i8] = $r13;

     label5:
        goto label7;

     label6:
        $r17 := @caughtexception;

        r20 = $r17;

        $r18 = r0.<org.apache.commons.math3.optimization.BaseMultivariateMultiStartOptimizer: org.apache.commons.math3.optimization.PointValuePair[] optima>;

        $r18[i9] = null;

     label7:
        $i5 = r0.<org.apache.commons.math3.optimization.BaseMultivariateMultiStartOptimizer: int totalEvaluations>;

        $r14 = r0.<org.apache.commons.math3.optimization.BaseMultivariateMultiStartOptimizer: org.apache.commons.math3.optimization.BaseMultivariateOptimizer optimizer>;

        $i6 = interfaceinvoke $r14.<org.apache.commons.math3.optimization.BaseMultivariateOptimizer: int getEvaluations()>();

        $i7 = $i5 + $i6;

        r0.<org.apache.commons.math3.optimization.BaseMultivariateMultiStartOptimizer: int totalEvaluations> = $i7;

        i9 = i9 + 1;

        goto label1;

     label8:
        specialinvoke r0.<org.apache.commons.math3.optimization.BaseMultivariateMultiStartOptimizer: void sortPairs(org.apache.commons.math3.optimization.GoalType)>(r2);

        $r6 = r0.<org.apache.commons.math3.optimization.BaseMultivariateMultiStartOptimizer: org.apache.commons.math3.optimization.PointValuePair[] optima>;

        $r7 = $r6[0];

        if $r7 != null goto label9;

        throw r20;

     label9:
        $r8 = r0.<org.apache.commons.math3.optimization.BaseMultivariateMultiStartOptimizer: org.apache.commons.math3.optimization.PointValuePair[] optima>;

        $r9 = $r8[0];

        return $r9;

        catch java.lang.RuntimeException from label2 to label5 with label6;
    }

    private void sortPairs(org.apache.commons.math3.optimization.GoalType)
    {
        org.apache.commons.math3.optimization.BaseMultivariateMultiStartOptimizer r0;
        org.apache.commons.math3.optimization.GoalType r1;
        org.apache.commons.math3.optimization.BaseMultivariateMultiStartOptimizer$1 $r2;
        org.apache.commons.math3.optimization.PointValuePair[] $r3;

        r0 := @this: org.apache.commons.math3.optimization.BaseMultivariateMultiStartOptimizer;

        r1 := @parameter0: org.apache.commons.math3.optimization.GoalType;

        $r3 = r0.<org.apache.commons.math3.optimization.BaseMultivariateMultiStartOptimizer: org.apache.commons.math3.optimization.PointValuePair[] optima>;

        $r2 = new org.apache.commons.math3.optimization.BaseMultivariateMultiStartOptimizer$1;

        specialinvoke $r2.<org.apache.commons.math3.optimization.BaseMultivariateMultiStartOptimizer$1: void <init>(org.apache.commons.math3.optimization.BaseMultivariateMultiStartOptimizer,org.apache.commons.math3.optimization.GoalType)>(r0, r1);

        staticinvoke <java.util.Arrays: void sort(java.lang.Object[],java.util.Comparator)>($r3, $r2);

        return;
    }
}
