public class org.apache.commons.math3.fitting.GaussianFitter extends org.apache.commons.math3.fitting.CurveFitter
{

    public void <init>(org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer)
    {
        org.apache.commons.math3.fitting.GaussianFitter r0;
        org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer r1;

        r0 := @this: org.apache.commons.math3.fitting.GaussianFitter;

        r1 := @parameter0: org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer;

        specialinvoke r0.<org.apache.commons.math3.fitting.CurveFitter: void <init>(org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer)>(r1);

        return;
    }

    public double[] fit(double[])
    {
        org.apache.commons.math3.fitting.GaussianFitter r0;
        double[] r1, $r4;
        org.apache.commons.math3.fitting.GaussianFitter$1 $r3;

        r0 := @this: org.apache.commons.math3.fitting.GaussianFitter;

        r1 := @parameter0: double[];

        $r3 = new org.apache.commons.math3.fitting.GaussianFitter$1;

        specialinvoke $r3.<org.apache.commons.math3.fitting.GaussianFitter$1: void <init>(org.apache.commons.math3.fitting.GaussianFitter)>(r0);

        $r4 = virtualinvoke r0.<org.apache.commons.math3.fitting.GaussianFitter: double[] fit(org.apache.commons.math3.analysis.ParametricUnivariateFunction,double[])>($r3, r1);

        return $r4;
    }

    public double[] fit()
    {
        org.apache.commons.math3.fitting.GaussianFitter r0;
        double[] r1, $r4;
        org.apache.commons.math3.fitting.GaussianFitter$ParameterGuesser $r2;
        org.apache.commons.math3.fitting.WeightedObservedPoint[] $r3;

        r0 := @this: org.apache.commons.math3.fitting.GaussianFitter;

        $r2 = new org.apache.commons.math3.fitting.GaussianFitter$ParameterGuesser;

        $r3 = virtualinvoke r0.<org.apache.commons.math3.fitting.GaussianFitter: org.apache.commons.math3.fitting.WeightedObservedPoint[] getObservations()>();

        specialinvoke $r2.<org.apache.commons.math3.fitting.GaussianFitter$ParameterGuesser: void <init>(org.apache.commons.math3.fitting.WeightedObservedPoint[])>($r3);

        r1 = virtualinvoke $r2.<org.apache.commons.math3.fitting.GaussianFitter$ParameterGuesser: double[] guess()>();

        $r4 = virtualinvoke r0.<org.apache.commons.math3.fitting.GaussianFitter: double[] fit(double[])>(r1);

        return $r4;
    }
}
