public final class com.opengamma.analytics.financial.interestrate.swaption.provider.SwaptionPhysicalFixedIborSABRMethod extends java.lang.Object
{
    private static final com.opengamma.analytics.financial.interestrate.swaption.provider.SwaptionPhysicalFixedIborSABRMethod INSTANCE;
    private static final com.opengamma.analytics.financial.interestrate.swap.provider.SwapFixedCouponDiscountingMethod METHOD_SWAP;
    private static final com.opengamma.analytics.financial.provider.calculator.discounting.ParRateDiscountingCalculator PRDC;
    private static final com.opengamma.analytics.financial.provider.calculator.discounting.ParRateCurveSensitivityDiscountingCalculator PRCSDC;

    public static com.opengamma.analytics.financial.interestrate.swaption.provider.SwaptionPhysicalFixedIborSABRMethod getInstance()
    {
        com.opengamma.analytics.financial.interestrate.swaption.provider.SwaptionPhysicalFixedIborSABRMethod $r0;

        $r0 = <com.opengamma.analytics.financial.interestrate.swaption.provider.SwaptionPhysicalFixedIborSABRMethod: com.opengamma.analytics.financial.interestrate.swaption.provider.SwaptionPhysicalFixedIborSABRMethod INSTANCE>;

        return $r0;
    }

    private void <init>()
    {
        com.opengamma.analytics.financial.interestrate.swaption.provider.SwaptionPhysicalFixedIborSABRMethod r0;

        r0 := @this: com.opengamma.analytics.financial.interestrate.swaption.provider.SwaptionPhysicalFixedIborSABRMethod;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public com.opengamma.util.money.MultipleCurrencyAmount presentValue(com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionPhysicalFixedIbor, com.opengamma.analytics.financial.provider.description.interestrate.SABRSwaptionProviderInterface)
    {
        com.opengamma.analytics.financial.interestrate.swaption.provider.SwaptionPhysicalFixedIborSABRMethod r0;
        com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionPhysicalFixedIbor r1;
        com.opengamma.analytics.financial.provider.description.interestrate.SABRSwaptionProviderInterface r2;
        com.opengamma.financial.convention.daycount.DayCount r3;
        com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface r4;
        double d0, d1, d2, d3, d4, d5, $d6, $d7, $d8, $d9;
        com.opengamma.analytics.math.function.Function1D r8;
        com.opengamma.analytics.financial.instrument.index.GeneratorSwapFixedIbor $r11;
        com.opengamma.analytics.financial.interestrate.swap.provider.SwapFixedCouponDiscountingMethod $r12, $r17;
        com.opengamma.analytics.financial.interestrate.swap.derivative.SwapFixedCoupon $r13, $r15, $r18;
        com.opengamma.analytics.financial.provider.calculator.discounting.ParRateDiscountingCalculator $r14;
        java.lang.Double $r16, $r24;
        com.opengamma.analytics.financial.model.option.pricing.analytic.formula.EuropeanVanillaOption $r19;
        boolean $z0, $z1;
        com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackPriceFunction $r20;
        com.opengamma.analytics.financial.model.option.definition.SABRInterestRateParameters $r21;
        com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackFunctionData $r22;
        java.lang.Object $r23;
        com.opengamma.util.money.Currency $r25;
        com.opengamma.util.money.MultipleCurrencyAmount $r26;

        r0 := @this: com.opengamma.analytics.financial.interestrate.swaption.provider.SwaptionPhysicalFixedIborSABRMethod;

        r1 := @parameter0: com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionPhysicalFixedIbor;

        r2 := @parameter1: com.opengamma.analytics.financial.provider.description.interestrate.SABRSwaptionProviderInterface;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "Swaption");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, "SABR swaption provider");

        $r11 = interfaceinvoke r2.<com.opengamma.analytics.financial.provider.description.interestrate.SABRSwaptionProviderInterface: com.opengamma.analytics.financial.instrument.index.GeneratorSwapFixedIbor getSABRGenerator()>();

        r3 = virtualinvoke $r11.<com.opengamma.analytics.financial.instrument.index.GeneratorSwapFixedIbor: com.opengamma.financial.convention.daycount.DayCount getFixedLegDayCount()>();

        r4 = interfaceinvoke r2.<com.opengamma.analytics.financial.provider.description.interestrate.SABRSwaptionProviderInterface: com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface getMulticurveProvider()>();

        $r12 = <com.opengamma.analytics.financial.interestrate.swaption.provider.SwaptionPhysicalFixedIborSABRMethod: com.opengamma.analytics.financial.interestrate.swap.provider.SwapFixedCouponDiscountingMethod METHOD_SWAP>;

        $r13 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionPhysicalFixedIbor: com.opengamma.analytics.financial.interestrate.swap.derivative.SwapFixedCoupon getUnderlyingSwap()>();

        d0 = virtualinvoke $r12.<com.opengamma.analytics.financial.interestrate.swap.provider.SwapFixedCouponDiscountingMethod: double presentValueBasisPoint(com.opengamma.analytics.financial.interestrate.swap.derivative.SwapFixedCoupon,com.opengamma.financial.convention.daycount.DayCount,com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface)>($r13, r3, r4);

        $r14 = <com.opengamma.analytics.financial.interestrate.swaption.provider.SwaptionPhysicalFixedIborSABRMethod: com.opengamma.analytics.financial.provider.calculator.discounting.ParRateDiscountingCalculator PRDC>;

        $r15 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionPhysicalFixedIbor: com.opengamma.analytics.financial.interestrate.swap.derivative.SwapFixedCoupon getUnderlyingSwap()>();

        $r16 = virtualinvoke $r14.<com.opengamma.analytics.financial.provider.calculator.discounting.ParRateDiscountingCalculator: java.lang.Double visitFixedCouponSwap(com.opengamma.analytics.financial.interestrate.swap.derivative.SwapFixedCoupon,com.opengamma.financial.convention.daycount.DayCount,com.opengamma.analytics.financial.provider.description.interestrate.ParameterProviderInterface)>($r15, r3, r4);

        d1 = virtualinvoke $r16.<java.lang.Double: double doubleValue()>();

        $r17 = <com.opengamma.analytics.financial.interestrate.swaption.provider.SwaptionPhysicalFixedIborSABRMethod: com.opengamma.analytics.financial.interestrate.swap.provider.SwapFixedCouponDiscountingMethod METHOD_SWAP>;

        $r18 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionPhysicalFixedIbor: com.opengamma.analytics.financial.interestrate.swap.derivative.SwapFixedCoupon getUnderlyingSwap()>();

        d2 = virtualinvoke $r17.<com.opengamma.analytics.financial.interestrate.swap.provider.SwapFixedCouponDiscountingMethod: double couponEquivalent(com.opengamma.analytics.financial.interestrate.swap.derivative.SwapFixedCoupon,double,com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface)>($r18, d0, r4);

        d3 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionPhysicalFixedIbor: double getMaturityTime()>();

        $r19 = new com.opengamma.analytics.financial.model.option.pricing.analytic.formula.EuropeanVanillaOption;

        $d6 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionPhysicalFixedIbor: double getTimeToExpiry()>();

        $z0 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionPhysicalFixedIbor: boolean isCall()>();

        specialinvoke $r19.<com.opengamma.analytics.financial.model.option.pricing.analytic.formula.EuropeanVanillaOption: void <init>(double,double,boolean)>(d2, $d6, $z0);

        $r20 = new com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackPriceFunction;

        specialinvoke $r20.<com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackPriceFunction: void <init>()>();

        $r21 = interfaceinvoke r2.<com.opengamma.analytics.financial.provider.description.interestrate.SABRSwaptionProviderInterface: com.opengamma.analytics.financial.model.option.definition.SABRInterestRateParameters getSABRParameter()>();

        $d7 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionPhysicalFixedIbor: double getTimeToExpiry()>();

        d4 = virtualinvoke $r21.<com.opengamma.analytics.financial.model.option.definition.SABRInterestRateParameters: double getVolatility(double,double,double,double)>($d7, d3, d2, d1);

        $r22 = new com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackFunctionData;

        specialinvoke $r22.<com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackFunctionData: void <init>(double,double,double)>(d1, d0, d4);

        r8 = virtualinvoke $r20.<com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackPriceFunction: com.opengamma.analytics.math.function.Function1D getPriceFunction(com.opengamma.analytics.financial.model.option.pricing.analytic.formula.EuropeanVanillaOption)>($r19);

        $r23 = virtualinvoke r8.<com.opengamma.analytics.math.function.Function1D: java.lang.Object evaluate(java.lang.Object)>($r22);

        $r24 = (java.lang.Double) $r23;

        $d8 = virtualinvoke $r24.<java.lang.Double: double doubleValue()>();

        $z1 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionPhysicalFixedIbor: boolean isLong()>();

        if $z1 == 0 goto label1;

        $d9 = 1.0;

        goto label2;

     label1:
        $d9 = -1.0;

     label2:
        d5 = $d8 * $d9;

        $r25 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionPhysicalFixedIbor: com.opengamma.util.money.Currency getCurrency()>();

        $r26 = staticinvoke <com.opengamma.util.money.MultipleCurrencyAmount: com.opengamma.util.money.MultipleCurrencyAmount of(com.opengamma.util.money.Currency,double)>($r25, d5);

        return $r26;
    }

    public double impliedVolatility(com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionPhysicalFixedIbor, com.opengamma.analytics.financial.provider.description.interestrate.SABRSwaptionProviderInterface)
    {
        com.opengamma.analytics.financial.interestrate.swaption.provider.SwaptionPhysicalFixedIborSABRMethod r0;
        com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionPhysicalFixedIbor r1;
        com.opengamma.analytics.financial.provider.description.interestrate.SABRSwaptionProviderInterface r2;
        com.opengamma.financial.convention.daycount.DayCount r3;
        com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface r4;
        double d0, d1, d2, d3, d4, $d5;
        com.opengamma.analytics.financial.instrument.index.GeneratorSwapFixedIbor $r7;
        com.opengamma.analytics.financial.interestrate.swap.provider.SwapFixedCouponDiscountingMethod $r8, $r13;
        com.opengamma.analytics.financial.interestrate.swap.derivative.SwapFixedCoupon $r9, $r11, $r14;
        com.opengamma.analytics.financial.provider.calculator.discounting.ParRateDiscountingCalculator $r10;
        java.lang.Double $r12;
        com.opengamma.analytics.financial.model.option.definition.SABRInterestRateParameters $r15;

        r0 := @this: com.opengamma.analytics.financial.interestrate.swaption.provider.SwaptionPhysicalFixedIborSABRMethod;

        r1 := @parameter0: com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionPhysicalFixedIbor;

        r2 := @parameter1: com.opengamma.analytics.financial.provider.description.interestrate.SABRSwaptionProviderInterface;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "Swaption");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, "SABR swaption provider");

        $r7 = interfaceinvoke r2.<com.opengamma.analytics.financial.provider.description.interestrate.SABRSwaptionProviderInterface: com.opengamma.analytics.financial.instrument.index.GeneratorSwapFixedIbor getSABRGenerator()>();

        r3 = virtualinvoke $r7.<com.opengamma.analytics.financial.instrument.index.GeneratorSwapFixedIbor: com.opengamma.financial.convention.daycount.DayCount getFixedLegDayCount()>();

        r4 = interfaceinvoke r2.<com.opengamma.analytics.financial.provider.description.interestrate.SABRSwaptionProviderInterface: com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface getMulticurveProvider()>();

        $r8 = <com.opengamma.analytics.financial.interestrate.swaption.provider.SwaptionPhysicalFixedIborSABRMethod: com.opengamma.analytics.financial.interestrate.swap.provider.SwapFixedCouponDiscountingMethod METHOD_SWAP>;

        $r9 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionPhysicalFixedIbor: com.opengamma.analytics.financial.interestrate.swap.derivative.SwapFixedCoupon getUnderlyingSwap()>();

        d0 = virtualinvoke $r8.<com.opengamma.analytics.financial.interestrate.swap.provider.SwapFixedCouponDiscountingMethod: double presentValueBasisPoint(com.opengamma.analytics.financial.interestrate.swap.derivative.SwapFixedCoupon,com.opengamma.financial.convention.daycount.DayCount,com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface)>($r9, r3, r4);

        $r10 = <com.opengamma.analytics.financial.interestrate.swaption.provider.SwaptionPhysicalFixedIborSABRMethod: com.opengamma.analytics.financial.provider.calculator.discounting.ParRateDiscountingCalculator PRDC>;

        $r11 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionPhysicalFixedIbor: com.opengamma.analytics.financial.interestrate.swap.derivative.SwapFixedCoupon getUnderlyingSwap()>();

        $r12 = virtualinvoke $r10.<com.opengamma.analytics.financial.provider.calculator.discounting.ParRateDiscountingCalculator: java.lang.Double visitFixedCouponSwap(com.opengamma.analytics.financial.interestrate.swap.derivative.SwapFixedCoupon,com.opengamma.financial.convention.daycount.DayCount,com.opengamma.analytics.financial.provider.description.interestrate.ParameterProviderInterface)>($r11, r3, r4);

        d1 = virtualinvoke $r12.<java.lang.Double: double doubleValue()>();

        $r13 = <com.opengamma.analytics.financial.interestrate.swaption.provider.SwaptionPhysicalFixedIborSABRMethod: com.opengamma.analytics.financial.interestrate.swap.provider.SwapFixedCouponDiscountingMethod METHOD_SWAP>;

        $r14 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionPhysicalFixedIbor: com.opengamma.analytics.financial.interestrate.swap.derivative.SwapFixedCoupon getUnderlyingSwap()>();

        d2 = virtualinvoke $r13.<com.opengamma.analytics.financial.interestrate.swap.provider.SwapFixedCouponDiscountingMethod: double couponEquivalent(com.opengamma.analytics.financial.interestrate.swap.derivative.SwapFixedCoupon,double,com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface)>($r14, d0, r4);

        d3 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionPhysicalFixedIbor: double getMaturityTime()>();

        $r15 = interfaceinvoke r2.<com.opengamma.analytics.financial.provider.description.interestrate.SABRSwaptionProviderInterface: com.opengamma.analytics.financial.model.option.definition.SABRInterestRateParameters getSABRParameter()>();

        $d5 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionPhysicalFixedIbor: double getTimeToExpiry()>();

        d4 = virtualinvoke $r15.<com.opengamma.analytics.financial.model.option.definition.SABRInterestRateParameters: double getVolatility(double,double,double,double)>($d5, d3, d2, d1);

        return d4;
    }

    public com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyMulticurveSensitivity presentValueCurveSensitivity(com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionPhysicalFixedIbor, com.opengamma.analytics.financial.provider.description.interestrate.SABRSwaptionProviderInterface)
    {
        com.opengamma.analytics.financial.interestrate.swaption.provider.SwaptionPhysicalFixedIborSABRMethod r0;
        com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionPhysicalFixedIbor r1;
        com.opengamma.analytics.financial.provider.description.interestrate.SABRSwaptionProviderInterface r2;
        com.opengamma.financial.convention.daycount.DayCount r3;
        double d0, d1, d2, d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13;
        com.opengamma.analytics.financial.provider.sensitivity.multicurve.MulticurveSensitivity r4, r5, $r34, r37, r38;
        double[] r8, r10;
        com.opengamma.analytics.financial.instrument.index.GeneratorSwapFixedIbor $r13;
        com.opengamma.analytics.financial.interestrate.swap.provider.SwapFixedCouponDiscountingMethod $r14, $r21, $r24;
        com.opengamma.analytics.financial.interestrate.swap.derivative.SwapFixedCoupon $r15, $r18, $r22, $r25, $r28;
        com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface $r16, $r19, $r23, $r26, $r29;
        com.opengamma.analytics.financial.provider.calculator.discounting.ParRateDiscountingCalculator $r17;
        java.lang.Double $r20;
        com.opengamma.analytics.financial.provider.calculator.discounting.ParRateCurveSensitivityDiscountingCalculator $r27;
        com.opengamma.analytics.financial.model.option.pricing.analytic.formula.EuropeanVanillaOption $r30;
        boolean $z0, $z1;
        com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackPriceFunction $r31;
        com.opengamma.analytics.financial.model.option.definition.SABRInterestRateParameters $r32;
        com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackFunctionData $r33;
        com.opengamma.util.money.Currency $r35;
        com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyMulticurveSensitivity $r36;

        r0 := @this: com.opengamma.analytics.financial.interestrate.swaption.provider.SwaptionPhysicalFixedIborSABRMethod;

        r1 := @parameter0: com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionPhysicalFixedIbor;

        r2 := @parameter1: com.opengamma.analytics.financial.provider.description.interestrate.SABRSwaptionProviderInterface;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "Swaption");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, "SABR swaption provider");

        $r13 = interfaceinvoke r2.<com.opengamma.analytics.financial.provider.description.interestrate.SABRSwaptionProviderInterface: com.opengamma.analytics.financial.instrument.index.GeneratorSwapFixedIbor getSABRGenerator()>();

        r3 = virtualinvoke $r13.<com.opengamma.analytics.financial.instrument.index.GeneratorSwapFixedIbor: com.opengamma.financial.convention.daycount.DayCount getFixedLegDayCount()>();

        $r14 = <com.opengamma.analytics.financial.interestrate.swaption.provider.SwaptionPhysicalFixedIborSABRMethod: com.opengamma.analytics.financial.interestrate.swap.provider.SwapFixedCouponDiscountingMethod METHOD_SWAP>;

        $r15 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionPhysicalFixedIbor: com.opengamma.analytics.financial.interestrate.swap.derivative.SwapFixedCoupon getUnderlyingSwap()>();

        $r16 = interfaceinvoke r2.<com.opengamma.analytics.financial.provider.description.interestrate.SABRSwaptionProviderInterface: com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface getMulticurveProvider()>();

        d0 = virtualinvoke $r14.<com.opengamma.analytics.financial.interestrate.swap.provider.SwapFixedCouponDiscountingMethod: double presentValueBasisPoint(com.opengamma.analytics.financial.interestrate.swap.derivative.SwapFixedCoupon,com.opengamma.financial.convention.daycount.DayCount,com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface)>($r15, r3, $r16);

        $r17 = <com.opengamma.analytics.financial.interestrate.swaption.provider.SwaptionPhysicalFixedIborSABRMethod: com.opengamma.analytics.financial.provider.calculator.discounting.ParRateDiscountingCalculator PRDC>;

        $r18 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionPhysicalFixedIbor: com.opengamma.analytics.financial.interestrate.swap.derivative.SwapFixedCoupon getUnderlyingSwap()>();

        $r19 = interfaceinvoke r2.<com.opengamma.analytics.financial.provider.description.interestrate.SABRSwaptionProviderInterface: com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface getMulticurveProvider()>();

        $r20 = virtualinvoke $r17.<com.opengamma.analytics.financial.provider.calculator.discounting.ParRateDiscountingCalculator: java.lang.Double visitFixedCouponSwap(com.opengamma.analytics.financial.interestrate.swap.derivative.SwapFixedCoupon,com.opengamma.financial.convention.daycount.DayCount,com.opengamma.analytics.financial.provider.description.interestrate.ParameterProviderInterface)>($r18, r3, $r19);

        d1 = virtualinvoke $r20.<java.lang.Double: double doubleValue()>();

        $r21 = <com.opengamma.analytics.financial.interestrate.swaption.provider.SwaptionPhysicalFixedIborSABRMethod: com.opengamma.analytics.financial.interestrate.swap.provider.SwapFixedCouponDiscountingMethod METHOD_SWAP>;

        $r22 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionPhysicalFixedIbor: com.opengamma.analytics.financial.interestrate.swap.derivative.SwapFixedCoupon getUnderlyingSwap()>();

        $r23 = interfaceinvoke r2.<com.opengamma.analytics.financial.provider.description.interestrate.SABRSwaptionProviderInterface: com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface getMulticurveProvider()>();

        d2 = virtualinvoke $r21.<com.opengamma.analytics.financial.interestrate.swap.provider.SwapFixedCouponDiscountingMethod: double couponEquivalent(com.opengamma.analytics.financial.interestrate.swap.derivative.SwapFixedCoupon,double,com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface)>($r22, d0, $r23);

        d3 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionPhysicalFixedIbor: double getMaturityTime()>();

        $r24 = <com.opengamma.analytics.financial.interestrate.swaption.provider.SwaptionPhysicalFixedIborSABRMethod: com.opengamma.analytics.financial.interestrate.swap.provider.SwapFixedCouponDiscountingMethod METHOD_SWAP>;

        $r25 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionPhysicalFixedIbor: com.opengamma.analytics.financial.interestrate.swap.derivative.SwapFixedCoupon getUnderlyingSwap()>();

        $r26 = interfaceinvoke r2.<com.opengamma.analytics.financial.provider.description.interestrate.SABRSwaptionProviderInterface: com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface getMulticurveProvider()>();

        r4 = virtualinvoke $r24.<com.opengamma.analytics.financial.interestrate.swap.provider.SwapFixedCouponDiscountingMethod: com.opengamma.analytics.financial.provider.sensitivity.multicurve.MulticurveSensitivity presentValueBasisPointCurveSensitivity(com.opengamma.analytics.financial.interestrate.swap.derivative.SwapFixedCoupon,com.opengamma.financial.convention.daycount.DayCount,com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface)>($r25, r3, $r26);

        $r27 = <com.opengamma.analytics.financial.interestrate.swaption.provider.SwaptionPhysicalFixedIborSABRMethod: com.opengamma.analytics.financial.provider.calculator.discounting.ParRateCurveSensitivityDiscountingCalculator PRCSDC>;

        $r28 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionPhysicalFixedIbor: com.opengamma.analytics.financial.interestrate.swap.derivative.SwapFixedCoupon getUnderlyingSwap()>();

        $r29 = interfaceinvoke r2.<com.opengamma.analytics.financial.provider.description.interestrate.SABRSwaptionProviderInterface: com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface getMulticurveProvider()>();

        r5 = virtualinvoke $r27.<com.opengamma.analytics.financial.provider.calculator.discounting.ParRateCurveSensitivityDiscountingCalculator: com.opengamma.analytics.financial.provider.sensitivity.multicurve.MulticurveSensitivity visitFixedCouponSwap(com.opengamma.analytics.financial.interestrate.swap.derivative.SwapFixedCoupon,com.opengamma.financial.convention.daycount.DayCount,com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface)>($r28, r3, $r29);

        $r30 = new com.opengamma.analytics.financial.model.option.pricing.analytic.formula.EuropeanVanillaOption;

        $d4 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionPhysicalFixedIbor: double getTimeToExpiry()>();

        $z0 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionPhysicalFixedIbor: boolean isCall()>();

        specialinvoke $r30.<com.opengamma.analytics.financial.model.option.pricing.analytic.formula.EuropeanVanillaOption: void <init>(double,double,boolean)>(d2, $d4, $z0);

        $r31 = new com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackPriceFunction;

        specialinvoke $r31.<com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackPriceFunction: void <init>()>();

        $r32 = interfaceinvoke r2.<com.opengamma.analytics.financial.provider.description.interestrate.SABRSwaptionProviderInterface: com.opengamma.analytics.financial.model.option.definition.SABRInterestRateParameters getSABRParameter()>();

        $d5 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionPhysicalFixedIbor: double getTimeToExpiry()>();

        r8 = virtualinvoke $r32.<com.opengamma.analytics.financial.model.option.definition.SABRInterestRateParameters: double[] getVolatilityAdjoint(double,double,double,double)>($d5, d3, d2, d1);

        $r33 = new com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackFunctionData;

        $d6 = r8[0];

        specialinvoke $r33.<com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackFunctionData: void <init>(double,double,double)>(d1, 1.0, $d6);

        r10 = virtualinvoke $r31.<com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackPriceFunction: double[] getPriceAdjoint(com.opengamma.analytics.financial.model.option.pricing.analytic.formula.EuropeanVanillaOption,com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackFunctionData)>($r30, $r33);

        $d7 = r10[0];

        r37 = virtualinvoke r4.<com.opengamma.analytics.financial.provider.sensitivity.multicurve.MulticurveSensitivity: com.opengamma.analytics.financial.provider.sensitivity.multicurve.MulticurveSensitivity multipliedBy(double)>($d7);

        $d11 = r10[1];

        $d9 = r10[2];

        $d8 = r8[1];

        $d10 = $d9 * $d8;

        $d12 = $d11 + $d10;

        $d13 = d0 * $d12;

        $r34 = virtualinvoke r5.<com.opengamma.analytics.financial.provider.sensitivity.multicurve.MulticurveSensitivity: com.opengamma.analytics.financial.provider.sensitivity.multicurve.MulticurveSensitivity multipliedBy(double)>($d13);

        r38 = virtualinvoke r37.<com.opengamma.analytics.financial.provider.sensitivity.multicurve.MulticurveSensitivity: com.opengamma.analytics.financial.provider.sensitivity.multicurve.MulticurveSensitivity plus(com.opengamma.analytics.financial.provider.sensitivity.multicurve.MulticurveSensitivity)>($r34);

        $z1 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionPhysicalFixedIbor: boolean isLong()>();

        if $z1 != 0 goto label1;

        r38 = virtualinvoke r38.<com.opengamma.analytics.financial.provider.sensitivity.multicurve.MulticurveSensitivity: com.opengamma.analytics.financial.provider.sensitivity.multicurve.MulticurveSensitivity multipliedBy(double)>(-1.0);

     label1:
        $r35 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionPhysicalFixedIbor: com.opengamma.util.money.Currency getCurrency()>();

        $r36 = staticinvoke <com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyMulticurveSensitivity: com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyMulticurveSensitivity of(com.opengamma.util.money.Currency,com.opengamma.analytics.financial.provider.sensitivity.multicurve.MulticurveSensitivity)>($r35, r38);

        return $r36;
    }

    public com.opengamma.analytics.financial.interestrate.PresentValueSABRSensitivityDataBundle presentValueSABRSensitivity(com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionPhysicalFixedIbor, com.opengamma.analytics.financial.provider.description.interestrate.SABRSwaptionProviderInterface)
    {
        com.opengamma.analytics.financial.interestrate.swaption.provider.SwaptionPhysicalFixedIborSABRMethod r0;
        com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionPhysicalFixedIbor r1;
        com.opengamma.analytics.financial.provider.description.interestrate.SABRSwaptionProviderInterface r2;
        com.opengamma.financial.convention.daycount.DayCount r3;
        double d0, d1, d2, d3, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21, $d22, $d23, $d24, $d25, $d26, $d27, $d28, $d29;
        com.opengamma.util.tuple.DoublesPair r5;
        double[] r8, r10;
        com.opengamma.analytics.financial.instrument.index.GeneratorSwapFixedIbor $r13;
        com.opengamma.analytics.financial.interestrate.swap.provider.SwapFixedCouponDiscountingMethod $r14, $r21;
        com.opengamma.analytics.financial.interestrate.swap.derivative.SwapFixedCoupon $r15, $r18, $r22;
        com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface $r16, $r19, $r23;
        com.opengamma.analytics.financial.provider.calculator.discounting.ParRateDiscountingCalculator $r17;
        java.lang.Double $r20;
        com.opengamma.analytics.financial.interestrate.PresentValueSABRSensitivityDataBundle $r24;
        com.opengamma.analytics.financial.model.option.pricing.analytic.formula.EuropeanVanillaOption $r25;
        boolean $z0, $z1;
        com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackPriceFunction $r26;
        com.opengamma.analytics.financial.model.option.definition.SABRInterestRateParameters $r27;
        com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackFunctionData $r28;

        r0 := @this: com.opengamma.analytics.financial.interestrate.swaption.provider.SwaptionPhysicalFixedIborSABRMethod;

        r1 := @parameter0: com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionPhysicalFixedIbor;

        r2 := @parameter1: com.opengamma.analytics.financial.provider.description.interestrate.SABRSwaptionProviderInterface;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "Swaption");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, "SABR swaption provider");

        $r13 = interfaceinvoke r2.<com.opengamma.analytics.financial.provider.description.interestrate.SABRSwaptionProviderInterface: com.opengamma.analytics.financial.instrument.index.GeneratorSwapFixedIbor getSABRGenerator()>();

        r3 = virtualinvoke $r13.<com.opengamma.analytics.financial.instrument.index.GeneratorSwapFixedIbor: com.opengamma.financial.convention.daycount.DayCount getFixedLegDayCount()>();

        $r14 = <com.opengamma.analytics.financial.interestrate.swaption.provider.SwaptionPhysicalFixedIborSABRMethod: com.opengamma.analytics.financial.interestrate.swap.provider.SwapFixedCouponDiscountingMethod METHOD_SWAP>;

        $r15 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionPhysicalFixedIbor: com.opengamma.analytics.financial.interestrate.swap.derivative.SwapFixedCoupon getUnderlyingSwap()>();

        $r16 = interfaceinvoke r2.<com.opengamma.analytics.financial.provider.description.interestrate.SABRSwaptionProviderInterface: com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface getMulticurveProvider()>();

        d0 = virtualinvoke $r14.<com.opengamma.analytics.financial.interestrate.swap.provider.SwapFixedCouponDiscountingMethod: double presentValueBasisPoint(com.opengamma.analytics.financial.interestrate.swap.derivative.SwapFixedCoupon,com.opengamma.financial.convention.daycount.DayCount,com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface)>($r15, r3, $r16);

        $r17 = <com.opengamma.analytics.financial.interestrate.swaption.provider.SwaptionPhysicalFixedIborSABRMethod: com.opengamma.analytics.financial.provider.calculator.discounting.ParRateDiscountingCalculator PRDC>;

        $r18 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionPhysicalFixedIbor: com.opengamma.analytics.financial.interestrate.swap.derivative.SwapFixedCoupon getUnderlyingSwap()>();

        $r19 = interfaceinvoke r2.<com.opengamma.analytics.financial.provider.description.interestrate.SABRSwaptionProviderInterface: com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface getMulticurveProvider()>();

        $r20 = virtualinvoke $r17.<com.opengamma.analytics.financial.provider.calculator.discounting.ParRateDiscountingCalculator: java.lang.Double visitFixedCouponSwap(com.opengamma.analytics.financial.interestrate.swap.derivative.SwapFixedCoupon,com.opengamma.financial.convention.daycount.DayCount,com.opengamma.analytics.financial.provider.description.interestrate.ParameterProviderInterface)>($r18, r3, $r19);

        d1 = virtualinvoke $r20.<java.lang.Double: double doubleValue()>();

        $r21 = <com.opengamma.analytics.financial.interestrate.swaption.provider.SwaptionPhysicalFixedIborSABRMethod: com.opengamma.analytics.financial.interestrate.swap.provider.SwapFixedCouponDiscountingMethod METHOD_SWAP>;

        $r22 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionPhysicalFixedIbor: com.opengamma.analytics.financial.interestrate.swap.derivative.SwapFixedCoupon getUnderlyingSwap()>();

        $r23 = interfaceinvoke r2.<com.opengamma.analytics.financial.provider.description.interestrate.SABRSwaptionProviderInterface: com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface getMulticurveProvider()>();

        d2 = virtualinvoke $r21.<com.opengamma.analytics.financial.interestrate.swap.provider.SwapFixedCouponDiscountingMethod: double couponEquivalent(com.opengamma.analytics.financial.interestrate.swap.derivative.SwapFixedCoupon,double,com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface)>($r22, d0, $r23);

        d3 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionPhysicalFixedIbor: double getMaturityTime()>();

        $r24 = new com.opengamma.analytics.financial.interestrate.PresentValueSABRSensitivityDataBundle;

        specialinvoke $r24.<com.opengamma.analytics.financial.interestrate.PresentValueSABRSensitivityDataBundle: void <init>()>();

        $d5 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionPhysicalFixedIbor: double getTimeToExpiry()>();

        r5 = staticinvoke <com.opengamma.util.tuple.DoublesPair: com.opengamma.util.tuple.DoublesPair of(double,double)>($d5, d3);

        $r25 = new com.opengamma.analytics.financial.model.option.pricing.analytic.formula.EuropeanVanillaOption;

        $d6 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionPhysicalFixedIbor: double getTimeToExpiry()>();

        $z0 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionPhysicalFixedIbor: boolean isCall()>();

        specialinvoke $r25.<com.opengamma.analytics.financial.model.option.pricing.analytic.formula.EuropeanVanillaOption: void <init>(double,double,boolean)>(d2, $d6, $z0);

        $r26 = new com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackPriceFunction;

        specialinvoke $r26.<com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackPriceFunction: void <init>()>();

        $r27 = interfaceinvoke r2.<com.opengamma.analytics.financial.provider.description.interestrate.SABRSwaptionProviderInterface: com.opengamma.analytics.financial.model.option.definition.SABRInterestRateParameters getSABRParameter()>();

        $d7 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionPhysicalFixedIbor: double getTimeToExpiry()>();

        r8 = virtualinvoke $r27.<com.opengamma.analytics.financial.model.option.definition.SABRInterestRateParameters: double[] getVolatilityAdjoint(double,double,double,double)>($d7, d3, d2, d1);

        $r28 = new com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackFunctionData;

        $d8 = r8[0];

        specialinvoke $r28.<com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackFunctionData: void <init>(double,double,double)>(d1, 1.0, $d8);

        r10 = virtualinvoke $r26.<com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackPriceFunction: double[] getPriceAdjoint(com.opengamma.analytics.financial.model.option.pricing.analytic.formula.EuropeanVanillaOption,com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackFunctionData)>($r25, $r28);

        $z1 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionPhysicalFixedIbor: boolean isLong()>();

        if $z1 == 0 goto label1;

        $d29 = 1.0;

        goto label2;

     label1:
        $d29 = -1.0;

     label2:
        $d10 = $d29 * d0;

        $d9 = r10[2];

        $d12 = $d10 * $d9;

        $d11 = r8[3];

        $d13 = $d12 * $d11;

        virtualinvoke $r24.<com.opengamma.analytics.financial.interestrate.PresentValueSABRSensitivityDataBundle: void addAlpha(com.opengamma.util.tuple.DoublesPair,double)>(r5, $d13);

        $d15 = $d29 * d0;

        $d14 = r10[2];

        $d17 = $d15 * $d14;

        $d16 = r8[4];

        $d18 = $d17 * $d16;

        virtualinvoke $r24.<com.opengamma.analytics.financial.interestrate.PresentValueSABRSensitivityDataBundle: void addBeta(com.opengamma.util.tuple.DoublesPair,double)>(r5, $d18);

        $d20 = $d29 * d0;

        $d19 = r10[2];

        $d22 = $d20 * $d19;

        $d21 = r8[5];

        $d23 = $d22 * $d21;

        virtualinvoke $r24.<com.opengamma.analytics.financial.interestrate.PresentValueSABRSensitivityDataBundle: void addRho(com.opengamma.util.tuple.DoublesPair,double)>(r5, $d23);

        $d25 = $d29 * d0;

        $d24 = r10[2];

        $d27 = $d25 * $d24;

        $d26 = r8[6];

        $d28 = $d27 * $d26;

        virtualinvoke $r24.<com.opengamma.analytics.financial.interestrate.PresentValueSABRSensitivityDataBundle: void addNu(com.opengamma.util.tuple.DoublesPair,double)>(r5, $d28);

        return $r24;
    }

    public com.opengamma.util.tuple.Triple presentValueAD(com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionPhysicalFixedIbor, com.opengamma.analytics.financial.provider.description.interestrate.SABRSwaptionProviderInterface)
    {
        com.opengamma.analytics.financial.interestrate.swaption.provider.SwaptionPhysicalFixedIborSABRMethod r0;
        com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionPhysicalFixedIbor r1;
        com.opengamma.analytics.financial.provider.description.interestrate.SABRSwaptionProviderInterface r2;
        com.opengamma.financial.convention.daycount.DayCount r3;
        double d0, d1, d2, d3, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21, $d22, $d23, $d24, $d25, $d26, $d27, $d28, $d29, $d30, $d31, $d32, $d33, $d34, $d35, $d36, $d37, $d38, $d39, $d40;
        double[] r6, r12;
        com.opengamma.analytics.math.function.Function1D r8;
        com.opengamma.util.money.MultipleCurrencyAmount r9;
        com.opengamma.analytics.financial.provider.sensitivity.multicurve.MulticurveSensitivity r10, r11, $r42, r46, r47;
        com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyMulticurveSensitivity r13;
        com.opengamma.util.tuple.DoublesPair r15;
        com.opengamma.analytics.financial.instrument.index.GeneratorSwapFixedIbor $r18;
        com.opengamma.analytics.financial.interestrate.swap.provider.SwapFixedCouponDiscountingMethod $r19, $r26, $r36;
        com.opengamma.analytics.financial.interestrate.swap.derivative.SwapFixedCoupon $r20, $r23, $r27, $r37, $r40;
        com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface $r21, $r24, $r28, $r38, $r41;
        com.opengamma.analytics.financial.provider.calculator.discounting.ParRateDiscountingCalculator $r22;
        java.lang.Double $r25, $r35;
        com.opengamma.analytics.financial.model.option.pricing.analytic.formula.EuropeanVanillaOption $r29;
        boolean $z0, $z1, $z2, $z3;
        com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackPriceFunction $r30;
        com.opengamma.analytics.financial.model.option.definition.SABRInterestRateParameters $r31;
        com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackFunctionData $r32;
        com.opengamma.util.money.Currency $r33, $r43;
        java.lang.Object $r34;
        com.opengamma.analytics.financial.provider.calculator.discounting.ParRateCurveSensitivityDiscountingCalculator $r39;
        com.opengamma.analytics.financial.interestrate.PresentValueSABRSensitivityDataBundle $r44;
        com.opengamma.util.tuple.Triple $r45;

        r0 := @this: com.opengamma.analytics.financial.interestrate.swaption.provider.SwaptionPhysicalFixedIborSABRMethod;

        r1 := @parameter0: com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionPhysicalFixedIbor;

        r2 := @parameter1: com.opengamma.analytics.financial.provider.description.interestrate.SABRSwaptionProviderInterface;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "Swaption");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, "SABR swaption provider");

        $r18 = interfaceinvoke r2.<com.opengamma.analytics.financial.provider.description.interestrate.SABRSwaptionProviderInterface: com.opengamma.analytics.financial.instrument.index.GeneratorSwapFixedIbor getSABRGenerator()>();

        r3 = virtualinvoke $r18.<com.opengamma.analytics.financial.instrument.index.GeneratorSwapFixedIbor: com.opengamma.financial.convention.daycount.DayCount getFixedLegDayCount()>();

        $r19 = <com.opengamma.analytics.financial.interestrate.swaption.provider.SwaptionPhysicalFixedIborSABRMethod: com.opengamma.analytics.financial.interestrate.swap.provider.SwapFixedCouponDiscountingMethod METHOD_SWAP>;

        $r20 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionPhysicalFixedIbor: com.opengamma.analytics.financial.interestrate.swap.derivative.SwapFixedCoupon getUnderlyingSwap()>();

        $r21 = interfaceinvoke r2.<com.opengamma.analytics.financial.provider.description.interestrate.SABRSwaptionProviderInterface: com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface getMulticurveProvider()>();

        d0 = virtualinvoke $r19.<com.opengamma.analytics.financial.interestrate.swap.provider.SwapFixedCouponDiscountingMethod: double presentValueBasisPoint(com.opengamma.analytics.financial.interestrate.swap.derivative.SwapFixedCoupon,com.opengamma.financial.convention.daycount.DayCount,com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface)>($r20, r3, $r21);

        $r22 = <com.opengamma.analytics.financial.interestrate.swaption.provider.SwaptionPhysicalFixedIborSABRMethod: com.opengamma.analytics.financial.provider.calculator.discounting.ParRateDiscountingCalculator PRDC>;

        $r23 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionPhysicalFixedIbor: com.opengamma.analytics.financial.interestrate.swap.derivative.SwapFixedCoupon getUnderlyingSwap()>();

        $r24 = interfaceinvoke r2.<com.opengamma.analytics.financial.provider.description.interestrate.SABRSwaptionProviderInterface: com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface getMulticurveProvider()>();

        $r25 = virtualinvoke $r22.<com.opengamma.analytics.financial.provider.calculator.discounting.ParRateDiscountingCalculator: java.lang.Double visitFixedCouponSwap(com.opengamma.analytics.financial.interestrate.swap.derivative.SwapFixedCoupon,com.opengamma.financial.convention.daycount.DayCount,com.opengamma.analytics.financial.provider.description.interestrate.ParameterProviderInterface)>($r23, r3, $r24);

        d1 = virtualinvoke $r25.<java.lang.Double: double doubleValue()>();

        $r26 = <com.opengamma.analytics.financial.interestrate.swaption.provider.SwaptionPhysicalFixedIborSABRMethod: com.opengamma.analytics.financial.interestrate.swap.provider.SwapFixedCouponDiscountingMethod METHOD_SWAP>;

        $r27 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionPhysicalFixedIbor: com.opengamma.analytics.financial.interestrate.swap.derivative.SwapFixedCoupon getUnderlyingSwap()>();

        $r28 = interfaceinvoke r2.<com.opengamma.analytics.financial.provider.description.interestrate.SABRSwaptionProviderInterface: com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface getMulticurveProvider()>();

        d2 = virtualinvoke $r26.<com.opengamma.analytics.financial.interestrate.swap.provider.SwapFixedCouponDiscountingMethod: double couponEquivalent(com.opengamma.analytics.financial.interestrate.swap.derivative.SwapFixedCoupon,double,com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface)>($r27, d0, $r28);

        d3 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionPhysicalFixedIbor: double getMaturityTime()>();

        $r29 = new com.opengamma.analytics.financial.model.option.pricing.analytic.formula.EuropeanVanillaOption;

        $d5 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionPhysicalFixedIbor: double getTimeToExpiry()>();

        $z0 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionPhysicalFixedIbor: boolean isCall()>();

        specialinvoke $r29.<com.opengamma.analytics.financial.model.option.pricing.analytic.formula.EuropeanVanillaOption: void <init>(double,double,boolean)>(d2, $d5, $z0);

        $r30 = new com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackPriceFunction;

        specialinvoke $r30.<com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackPriceFunction: void <init>()>();

        $r31 = interfaceinvoke r2.<com.opengamma.analytics.financial.provider.description.interestrate.SABRSwaptionProviderInterface: com.opengamma.analytics.financial.model.option.definition.SABRInterestRateParameters getSABRParameter()>();

        $d6 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionPhysicalFixedIbor: double getTimeToExpiry()>();

        r6 = virtualinvoke $r31.<com.opengamma.analytics.financial.model.option.definition.SABRInterestRateParameters: double[] getVolatilityAdjoint(double,double,double,double)>($d6, d3, d2, d1);

        $r32 = new com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackFunctionData;

        $d7 = r6[0];

        specialinvoke $r32.<com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackFunctionData: void <init>(double,double,double)>(d1, 1.0, $d7);

        r8 = virtualinvoke $r30.<com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackPriceFunction: com.opengamma.analytics.math.function.Function1D getPriceFunction(com.opengamma.analytics.financial.model.option.pricing.analytic.formula.EuropeanVanillaOption)>($r29);

        $r33 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionPhysicalFixedIbor: com.opengamma.util.money.Currency getCurrency()>();

        $r34 = virtualinvoke r8.<com.opengamma.analytics.math.function.Function1D: java.lang.Object evaluate(java.lang.Object)>($r32);

        $r35 = (java.lang.Double) $r34;

        $d8 = virtualinvoke $r35.<java.lang.Double: double doubleValue()>();

        $d9 = d0 * $d8;

        $z1 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionPhysicalFixedIbor: boolean isLong()>();

        if $z1 == 0 goto label1;

        $d39 = 1.0;

        goto label2;

     label1:
        $d39 = -1.0;

     label2:
        $d10 = $d9 * $d39;

        r9 = staticinvoke <com.opengamma.util.money.MultipleCurrencyAmount: com.opengamma.util.money.MultipleCurrencyAmount of(com.opengamma.util.money.Currency,double)>($r33, $d10);

        $r36 = <com.opengamma.analytics.financial.interestrate.swaption.provider.SwaptionPhysicalFixedIborSABRMethod: com.opengamma.analytics.financial.interestrate.swap.provider.SwapFixedCouponDiscountingMethod METHOD_SWAP>;

        $r37 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionPhysicalFixedIbor: com.opengamma.analytics.financial.interestrate.swap.derivative.SwapFixedCoupon getUnderlyingSwap()>();

        $r38 = interfaceinvoke r2.<com.opengamma.analytics.financial.provider.description.interestrate.SABRSwaptionProviderInterface: com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface getMulticurveProvider()>();

        r10 = virtualinvoke $r36.<com.opengamma.analytics.financial.interestrate.swap.provider.SwapFixedCouponDiscountingMethod: com.opengamma.analytics.financial.provider.sensitivity.multicurve.MulticurveSensitivity presentValueBasisPointCurveSensitivity(com.opengamma.analytics.financial.interestrate.swap.derivative.SwapFixedCoupon,com.opengamma.financial.convention.daycount.DayCount,com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface)>($r37, r3, $r38);

        $r39 = <com.opengamma.analytics.financial.interestrate.swaption.provider.SwaptionPhysicalFixedIborSABRMethod: com.opengamma.analytics.financial.provider.calculator.discounting.ParRateCurveSensitivityDiscountingCalculator PRCSDC>;

        $r40 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionPhysicalFixedIbor: com.opengamma.analytics.financial.interestrate.swap.derivative.SwapFixedCoupon getUnderlyingSwap()>();

        $r41 = interfaceinvoke r2.<com.opengamma.analytics.financial.provider.description.interestrate.SABRSwaptionProviderInterface: com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface getMulticurveProvider()>();

        r11 = virtualinvoke $r39.<com.opengamma.analytics.financial.provider.calculator.discounting.ParRateCurveSensitivityDiscountingCalculator: com.opengamma.analytics.financial.provider.sensitivity.multicurve.MulticurveSensitivity visitFixedCouponSwap(com.opengamma.analytics.financial.interestrate.swap.derivative.SwapFixedCoupon,com.opengamma.financial.convention.daycount.DayCount,com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface)>($r40, r3, $r41);

        r12 = virtualinvoke $r30.<com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackPriceFunction: double[] getPriceAdjoint(com.opengamma.analytics.financial.model.option.pricing.analytic.formula.EuropeanVanillaOption,com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackFunctionData)>($r29, $r32);

        $d11 = r12[0];

        r46 = virtualinvoke r10.<com.opengamma.analytics.financial.provider.sensitivity.multicurve.MulticurveSensitivity: com.opengamma.analytics.financial.provider.sensitivity.multicurve.MulticurveSensitivity multipliedBy(double)>($d11);

        $d15 = r12[1];

        $d13 = r12[2];

        $d12 = r6[1];

        $d14 = $d13 * $d12;

        $d16 = $d15 + $d14;

        $d17 = d0 * $d16;

        $r42 = virtualinvoke r11.<com.opengamma.analytics.financial.provider.sensitivity.multicurve.MulticurveSensitivity: com.opengamma.analytics.financial.provider.sensitivity.multicurve.MulticurveSensitivity multipliedBy(double)>($d17);

        r47 = virtualinvoke r46.<com.opengamma.analytics.financial.provider.sensitivity.multicurve.MulticurveSensitivity: com.opengamma.analytics.financial.provider.sensitivity.multicurve.MulticurveSensitivity plus(com.opengamma.analytics.financial.provider.sensitivity.multicurve.MulticurveSensitivity)>($r42);

        $z2 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionPhysicalFixedIbor: boolean isLong()>();

        if $z2 != 0 goto label3;

        r47 = virtualinvoke r47.<com.opengamma.analytics.financial.provider.sensitivity.multicurve.MulticurveSensitivity: com.opengamma.analytics.financial.provider.sensitivity.multicurve.MulticurveSensitivity multipliedBy(double)>(-1.0);

     label3:
        $r43 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionPhysicalFixedIbor: com.opengamma.util.money.Currency getCurrency()>();

        r13 = staticinvoke <com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyMulticurveSensitivity: com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyMulticurveSensitivity of(com.opengamma.util.money.Currency,com.opengamma.analytics.financial.provider.sensitivity.multicurve.MulticurveSensitivity)>($r43, r47);

        $r44 = new com.opengamma.analytics.financial.interestrate.PresentValueSABRSensitivityDataBundle;

        specialinvoke $r44.<com.opengamma.analytics.financial.interestrate.PresentValueSABRSensitivityDataBundle: void <init>()>();

        $d18 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionPhysicalFixedIbor: double getTimeToExpiry()>();

        r15 = staticinvoke <com.opengamma.util.tuple.DoublesPair: com.opengamma.util.tuple.DoublesPair of(double,double)>($d18, d3);

        $z3 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionPhysicalFixedIbor: boolean isLong()>();

        if $z3 == 0 goto label4;

        $d40 = 1.0;

        goto label5;

     label4:
        $d40 = -1.0;

     label5:
        $d20 = $d40 * d0;

        $d19 = r12[2];

        $d22 = $d20 * $d19;

        $d21 = r6[3];

        $d23 = $d22 * $d21;

        virtualinvoke $r44.<com.opengamma.analytics.financial.interestrate.PresentValueSABRSensitivityDataBundle: void addAlpha(com.opengamma.util.tuple.DoublesPair,double)>(r15, $d23);

        $d25 = $d40 * d0;

        $d24 = r12[2];

        $d27 = $d25 * $d24;

        $d26 = r6[4];

        $d28 = $d27 * $d26;

        virtualinvoke $r44.<com.opengamma.analytics.financial.interestrate.PresentValueSABRSensitivityDataBundle: void addBeta(com.opengamma.util.tuple.DoublesPair,double)>(r15, $d28);

        $d30 = $d40 * d0;

        $d29 = r12[2];

        $d32 = $d30 * $d29;

        $d31 = r6[5];

        $d33 = $d32 * $d31;

        virtualinvoke $r44.<com.opengamma.analytics.financial.interestrate.PresentValueSABRSensitivityDataBundle: void addRho(com.opengamma.util.tuple.DoublesPair,double)>(r15, $d33);

        $d35 = $d40 * d0;

        $d34 = r12[2];

        $d37 = $d35 * $d34;

        $d36 = r6[6];

        $d38 = $d37 * $d36;

        virtualinvoke $r44.<com.opengamma.analytics.financial.interestrate.PresentValueSABRSensitivityDataBundle: void addNu(com.opengamma.util.tuple.DoublesPair,double)>(r15, $d38);

        $r45 = staticinvoke <com.opengamma.util.tuple.Triple: com.opengamma.util.tuple.Triple of(java.lang.Object,java.lang.Object,java.lang.Object)>(r9, r13, $r44);

        return $r45;
    }

    static void <clinit>()
    {
        com.opengamma.analytics.financial.interestrate.swaption.provider.SwaptionPhysicalFixedIborSABRMethod $r0;
        com.opengamma.analytics.financial.interestrate.swap.provider.SwapFixedCouponDiscountingMethod $r1;
        com.opengamma.analytics.financial.provider.calculator.discounting.ParRateDiscountingCalculator $r2;
        com.opengamma.analytics.financial.provider.calculator.discounting.ParRateCurveSensitivityDiscountingCalculator $r3;

        $r0 = new com.opengamma.analytics.financial.interestrate.swaption.provider.SwaptionPhysicalFixedIborSABRMethod;

        specialinvoke $r0.<com.opengamma.analytics.financial.interestrate.swaption.provider.SwaptionPhysicalFixedIborSABRMethod: void <init>()>();

        <com.opengamma.analytics.financial.interestrate.swaption.provider.SwaptionPhysicalFixedIborSABRMethod: com.opengamma.analytics.financial.interestrate.swaption.provider.SwaptionPhysicalFixedIborSABRMethod INSTANCE> = $r0;

        $r1 = staticinvoke <com.opengamma.analytics.financial.interestrate.swap.provider.SwapFixedCouponDiscountingMethod: com.opengamma.analytics.financial.interestrate.swap.provider.SwapFixedCouponDiscountingMethod getInstance()>();

        <com.opengamma.analytics.financial.interestrate.swaption.provider.SwaptionPhysicalFixedIborSABRMethod: com.opengamma.analytics.financial.interestrate.swap.provider.SwapFixedCouponDiscountingMethod METHOD_SWAP> = $r1;

        $r2 = staticinvoke <com.opengamma.analytics.financial.provider.calculator.discounting.ParRateDiscountingCalculator: com.opengamma.analytics.financial.provider.calculator.discounting.ParRateDiscountingCalculator getInstance()>();

        <com.opengamma.analytics.financial.interestrate.swaption.provider.SwaptionPhysicalFixedIborSABRMethod: com.opengamma.analytics.financial.provider.calculator.discounting.ParRateDiscountingCalculator PRDC> = $r2;

        $r3 = staticinvoke <com.opengamma.analytics.financial.provider.calculator.discounting.ParRateCurveSensitivityDiscountingCalculator: com.opengamma.analytics.financial.provider.calculator.discounting.ParRateCurveSensitivityDiscountingCalculator getInstance()>();

        <com.opengamma.analytics.financial.interestrate.swaption.provider.SwaptionPhysicalFixedIborSABRMethod: com.opengamma.analytics.financial.provider.calculator.discounting.ParRateCurveSensitivityDiscountingCalculator PRCSDC> = $r3;

        return;
    }
}
