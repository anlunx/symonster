public class com.opengamma.analytics.math.statistics.ConfidenceInterval extends java.lang.Object
{
    private final double _lower;
    private final double _upper;
    private final double _confidenceLevel;
    private final double _value;

    public void <init>(double, double, double, double)
    {
        com.opengamma.analytics.math.statistics.ConfidenceInterval r0;
        double d0, d1, d2, d3;
        boolean $z0;
        byte $b0, $b1, $b2;
        java.lang.IllegalArgumentException $r1, $r2, $r3, $r4;

        r0 := @this: com.opengamma.analytics.math.statistics.ConfidenceInterval;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        d2 := @parameter2: double;

        d3 := @parameter3: double;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $z0 = staticinvoke <com.opengamma.util.ArgumentChecker: boolean isInRangeInclusive(double,double,double)>(0.0, 1.0, d3);

        if $z0 != 0 goto label1;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Confidence level must be in the range 0 <= x <= 1");

        throw $r4;

     label1:
        $b0 = d1 cmpl d2;

        if $b0 < 0 goto label2;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Lower bound must be less than upper bound");

        throw $r3;

     label2:
        $b1 = d0 cmpg d1;

        if $b1 >= 0 goto label3;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Lower bound must be less than the value");

        throw $r2;

     label3:
        $b2 = d0 cmpl d2;

        if $b2 <= 0 goto label4;

        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Upper bound must be greater than the value");

        throw $r1;

     label4:
        r0.<com.opengamma.analytics.math.statistics.ConfidenceInterval: double _value> = d0;

        r0.<com.opengamma.analytics.math.statistics.ConfidenceInterval: double _lower> = d1;

        r0.<com.opengamma.analytics.math.statistics.ConfidenceInterval: double _upper> = d2;

        r0.<com.opengamma.analytics.math.statistics.ConfidenceInterval: double _confidenceLevel> = d3;

        return;
    }

    public double getValue()
    {
        com.opengamma.analytics.math.statistics.ConfidenceInterval r0;
        double $d0;

        r0 := @this: com.opengamma.analytics.math.statistics.ConfidenceInterval;

        $d0 = r0.<com.opengamma.analytics.math.statistics.ConfidenceInterval: double _value>;

        return $d0;
    }

    public double getLowerInterval()
    {
        com.opengamma.analytics.math.statistics.ConfidenceInterval r0;
        double $d0;

        r0 := @this: com.opengamma.analytics.math.statistics.ConfidenceInterval;

        $d0 = r0.<com.opengamma.analytics.math.statistics.ConfidenceInterval: double _lower>;

        return $d0;
    }

    public double getUpperInterval()
    {
        com.opengamma.analytics.math.statistics.ConfidenceInterval r0;
        double $d0;

        r0 := @this: com.opengamma.analytics.math.statistics.ConfidenceInterval;

        $d0 = r0.<com.opengamma.analytics.math.statistics.ConfidenceInterval: double _upper>;

        return $d0;
    }

    public double getConfidenceLevel()
    {
        com.opengamma.analytics.math.statistics.ConfidenceInterval r0;
        double $d0;

        r0 := @this: com.opengamma.analytics.math.statistics.ConfidenceInterval;

        $d0 = r0.<com.opengamma.analytics.math.statistics.ConfidenceInterval: double _confidenceLevel>;

        return $d0;
    }

    public boolean isWithinInterval(double)
    {
        com.opengamma.analytics.math.statistics.ConfidenceInterval r0;
        double d0, $d1, $d2;
        byte $b0, $b1;
        boolean $z0;

        r0 := @this: com.opengamma.analytics.math.statistics.ConfidenceInterval;

        d0 := @parameter0: double;

        $d1 = r0.<com.opengamma.analytics.math.statistics.ConfidenceInterval: double _lower>;

        $b0 = d0 cmpl $d1;

        if $b0 <= 0 goto label1;

        $d2 = r0.<com.opengamma.analytics.math.statistics.ConfidenceInterval: double _upper>;

        $b1 = d0 cmpg $d2;

        if $b1 >= 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public int hashCode()
    {
        com.opengamma.analytics.math.statistics.ConfidenceInterval r0;
        double $d0, $d1, $d2, $d3;
        long $l1, $l2, $l5, $l6, $l9, $l10, $l13, $l14, l18, l20, l22, l24;
        int $i3, $i4, $i7, $i8, $i11, $i12, $i15, $i16, i19, i21, i23, i25;

        r0 := @this: com.opengamma.analytics.math.statistics.ConfidenceInterval;

        $d0 = r0.<com.opengamma.analytics.math.statistics.ConfidenceInterval: double _confidenceLevel>;

        l18 = staticinvoke <java.lang.Double: long doubleToLongBits(double)>($d0);

        $i4 = 31 * 1;

        $l1 = l18 >>> 32;

        $l2 = l18 ^ $l1;

        $i3 = (int) $l2;

        i19 = $i4 + $i3;

        $d1 = r0.<com.opengamma.analytics.math.statistics.ConfidenceInterval: double _lower>;

        l20 = staticinvoke <java.lang.Double: long doubleToLongBits(double)>($d1);

        $i8 = 31 * i19;

        $l5 = l20 >>> 32;

        $l6 = l20 ^ $l5;

        $i7 = (int) $l6;

        i21 = $i8 + $i7;

        $d2 = r0.<com.opengamma.analytics.math.statistics.ConfidenceInterval: double _upper>;

        l22 = staticinvoke <java.lang.Double: long doubleToLongBits(double)>($d2);

        $i12 = 31 * i21;

        $l9 = l22 >>> 32;

        $l10 = l22 ^ $l9;

        $i11 = (int) $l10;

        i23 = $i12 + $i11;

        $d3 = r0.<com.opengamma.analytics.math.statistics.ConfidenceInterval: double _value>;

        l24 = staticinvoke <java.lang.Double: long doubleToLongBits(double)>($d3);

        $i16 = 31 * i23;

        $l13 = l24 >>> 32;

        $l14 = l24 ^ $l13;

        $i15 = (int) $l14;

        i25 = $i16 + $i15;

        return i25;
    }

    public boolean equals(java.lang.Object)
    {
        com.opengamma.analytics.math.statistics.ConfidenceInterval r0, r2;
        java.lang.Object r1;
        java.lang.Class $r3, $r4;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7;
        long $l0, $l1, $l3, $l4, $l6, $l7, $l9, $l10;
        byte $b2, $b5, $b8, $b11;

        r0 := @this: com.opengamma.analytics.math.statistics.ConfidenceInterval;

        r1 := @parameter0: java.lang.Object;

        if r0 != r1 goto label1;

        return 1;

     label1:
        if r1 != null goto label2;

        return 0;

     label2:
        $r3 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r4 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        if $r3 == $r4 goto label3;

        return 0;

     label3:
        r2 = (com.opengamma.analytics.math.statistics.ConfidenceInterval) r1;

        $d0 = r0.<com.opengamma.analytics.math.statistics.ConfidenceInterval: double _confidenceLevel>;

        $l0 = staticinvoke <java.lang.Double: long doubleToLongBits(double)>($d0);

        $d1 = r2.<com.opengamma.analytics.math.statistics.ConfidenceInterval: double _confidenceLevel>;

        $l1 = staticinvoke <java.lang.Double: long doubleToLongBits(double)>($d1);

        $b2 = $l0 cmp $l1;

        if $b2 == 0 goto label4;

        return 0;

     label4:
        $d2 = r0.<com.opengamma.analytics.math.statistics.ConfidenceInterval: double _lower>;

        $l3 = staticinvoke <java.lang.Double: long doubleToLongBits(double)>($d2);

        $d3 = r2.<com.opengamma.analytics.math.statistics.ConfidenceInterval: double _lower>;

        $l4 = staticinvoke <java.lang.Double: long doubleToLongBits(double)>($d3);

        $b5 = $l3 cmp $l4;

        if $b5 == 0 goto label5;

        return 0;

     label5:
        $d4 = r0.<com.opengamma.analytics.math.statistics.ConfidenceInterval: double _upper>;

        $l6 = staticinvoke <java.lang.Double: long doubleToLongBits(double)>($d4);

        $d5 = r2.<com.opengamma.analytics.math.statistics.ConfidenceInterval: double _upper>;

        $l7 = staticinvoke <java.lang.Double: long doubleToLongBits(double)>($d5);

        $b8 = $l6 cmp $l7;

        if $b8 == 0 goto label6;

        return 0;

     label6:
        $d6 = r0.<com.opengamma.analytics.math.statistics.ConfidenceInterval: double _value>;

        $l9 = staticinvoke <java.lang.Double: long doubleToLongBits(double)>($d6);

        $d7 = r2.<com.opengamma.analytics.math.statistics.ConfidenceInterval: double _value>;

        $l10 = staticinvoke <java.lang.Double: long doubleToLongBits(double)>($d7);

        $b11 = $l9 cmp $l10;

        if $b11 == 0 goto label7;

        return 0;

     label7:
        return 1;
    }
}
