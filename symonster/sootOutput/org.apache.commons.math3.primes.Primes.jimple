public class org.apache.commons.math3.primes.Primes extends java.lang.Object
{

    private void <init>()
    {
        org.apache.commons.math3.primes.Primes r0;

        r0 := @this: org.apache.commons.math3.primes.Primes;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static boolean isPrime(int)
    {
        int i0, i1, i2, $i3, i4;
        int[] r0;
        boolean $z0, $z1;

        i0 := @parameter0: int;

        if i0 >= 2 goto label1;

        return 0;

     label1:
        r0 = <org.apache.commons.math3.primes.SmallPrimes: int[] PRIMES>;

        i1 = lengthof r0;

        i4 = 0;

     label2:
        if i4 >= i1 goto label6;

        i2 = r0[i4];

        $i3 = i0 % i2;

        if 0 != $i3 goto label5;

        if i0 != i2 goto label3;

        $z1 = 1;

        goto label4;

     label3:
        $z1 = 0;

     label4:
        return $z1;

     label5:
        i4 = i4 + 1;

        goto label2;

     label6:
        $z0 = staticinvoke <org.apache.commons.math3.primes.SmallPrimes: boolean millerRabinPrimeTest(int)>(i0);

        return $z0;
    }

    public static int nextPrime(int)
    {
        int i0, i1, i2, i3;
        boolean $z0, $z1, $z2;
        org.apache.commons.math3.exception.MathIllegalArgumentException $r0;
        java.lang.Object[] $r1;
        org.apache.commons.math3.exception.util.LocalizedFormats $r2;
        java.lang.Integer $r3, $r4;

        i1 := @parameter0: int;

        if i1 >= 0 goto label1;

        $r0 = new org.apache.commons.math3.exception.MathIllegalArgumentException;

        $r2 = <org.apache.commons.math3.exception.util.LocalizedFormats: org.apache.commons.math3.exception.util.LocalizedFormats NUMBER_TOO_SMALL>;

        $r1 = newarray (java.lang.Object)[2];

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        $r1[0] = $r3;

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        $r1[1] = $r4;

        specialinvoke $r0.<org.apache.commons.math3.exception.MathIllegalArgumentException: void <init>(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])>($r2, $r1);

        throw $r0;

     label1:
        if i1 != 2 goto label2;

        return 2;

     label2:
        i2 = i1 | 1;

        if i2 != 1 goto label3;

        return 2;

     label3:
        $z0 = staticinvoke <org.apache.commons.math3.primes.Primes: boolean isPrime(int)>(i2);

        if $z0 == 0 goto label4;

        return i2;

     label4:
        i0 = i2 % 3;

        if 0 != i0 goto label5;

        i2 = i2 + 2;

        goto label6;

     label5:
        if 1 != i0 goto label6;

        i2 = i2 + 4;

     label6:
        $z2 = staticinvoke <org.apache.commons.math3.primes.Primes: boolean isPrime(int)>(i2);

        if $z2 == 0 goto label7;

        return i2;

     label7:
        i3 = i2 + 2;

        $z1 = staticinvoke <org.apache.commons.math3.primes.Primes: boolean isPrime(int)>(i3);

        if $z1 == 0 goto label8;

        return i3;

     label8:
        i2 = i3 + 4;

        goto label6;
    }

    public static java.util.List primeFactors(int)
    {
        int i0;
        java.util.List $r0;
        org.apache.commons.math3.exception.MathIllegalArgumentException $r1;
        java.lang.Object[] $r2;
        org.apache.commons.math3.exception.util.LocalizedFormats $r3;
        java.lang.Integer $r4, $r5;

        i0 := @parameter0: int;

        if i0 >= 2 goto label1;

        $r1 = new org.apache.commons.math3.exception.MathIllegalArgumentException;

        $r3 = <org.apache.commons.math3.exception.util.LocalizedFormats: org.apache.commons.math3.exception.util.LocalizedFormats NUMBER_TOO_SMALL>;

        $r2 = newarray (java.lang.Object)[2];

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r2[0] = $r4;

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2);

        $r2[1] = $r5;

        specialinvoke $r1.<org.apache.commons.math3.exception.MathIllegalArgumentException: void <init>(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])>($r3, $r2);

        throw $r1;

     label1:
        $r0 = staticinvoke <org.apache.commons.math3.primes.SmallPrimes: java.util.List trialDivision(int)>(i0);

        return $r0;
    }
}
