public class com.opengamma.analytics.math.interpolation.MonotoneConvexSplineInterpolator1D extends com.opengamma.analytics.math.interpolation.PiecewisePolynomialInterpolator1D
{
    private static final long serialVersionUID;
    private static final com.opengamma.analytics.math.function.PiecewisePolynomialFunction1D FUNC;
    private static final com.opengamma.analytics.math.interpolation.MonotoneConvexSplineInterpolator BASE_METHOD;

    public void <init>()
    {
        com.opengamma.analytics.math.interpolation.MonotoneConvexSplineInterpolator1D r0;
        com.opengamma.analytics.math.interpolation.MonotoneConvexSplineInterpolator $r1;

        r0 := @this: com.opengamma.analytics.math.interpolation.MonotoneConvexSplineInterpolator1D;

        $r1 = <com.opengamma.analytics.math.interpolation.MonotoneConvexSplineInterpolator1D: com.opengamma.analytics.math.interpolation.MonotoneConvexSplineInterpolator BASE_METHOD>;

        specialinvoke r0.<com.opengamma.analytics.math.interpolation.PiecewisePolynomialInterpolator1D: void <init>(com.opengamma.analytics.math.interpolation.PiecewisePolynomialInterpolator)>($r1);

        return;
    }

    public java.lang.Double interpolate(com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle, java.lang.Double)
    {
        com.opengamma.analytics.math.interpolation.MonotoneConvexSplineInterpolator1D r0;
        com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle r1;
        java.lang.Double r2, $r8;
        com.opengamma.analytics.math.interpolation.data.Interpolator1DPiecewisePoynomialWithExtraKnotsDataBundle r3;
        com.opengamma.analytics.math.matrix.DoubleMatrix1D r4;
        boolean $z0;
        com.opengamma.analytics.math.function.PiecewisePolynomialFunction1D $r5;
        com.opengamma.analytics.math.interpolation.PiecewisePolynomialResult $r6;
        double $d0;
        int[] $r7;

        r0 := @this: com.opengamma.analytics.math.interpolation.MonotoneConvexSplineInterpolator1D;

        r1 := @parameter0: com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle;

        r2 := @parameter1: java.lang.Double;

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object,java.lang.String)>(r2, "value");

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object,java.lang.String)>(r1, "data bundle");

        $z0 = r1 instanceof com.opengamma.analytics.math.interpolation.data.Interpolator1DPiecewisePoynomialWithExtraKnotsDataBundle;

        staticinvoke <org.apache.commons.lang.Validate: void isTrue(boolean)>($z0);

        r3 = (com.opengamma.analytics.math.interpolation.data.Interpolator1DPiecewisePoynomialWithExtraKnotsDataBundle) r1;

        $r5 = <com.opengamma.analytics.math.interpolation.MonotoneConvexSplineInterpolator1D: com.opengamma.analytics.math.function.PiecewisePolynomialFunction1D FUNC>;

        $r6 = virtualinvoke r3.<com.opengamma.analytics.math.interpolation.data.Interpolator1DPiecewisePoynomialWithExtraKnotsDataBundle: com.opengamma.analytics.math.interpolation.PiecewisePolynomialResult getPiecewisePolynomialResult()>();

        $d0 = virtualinvoke r2.<java.lang.Double: double doubleValue()>();

        r4 = virtualinvoke $r5.<com.opengamma.analytics.math.function.PiecewisePolynomialFunction1D: com.opengamma.analytics.math.matrix.DoubleMatrix1D evaluate(com.opengamma.analytics.math.interpolation.PiecewisePolynomialResult,double)>($r6, $d0);

        $r7 = newarray (int)[1];

        $r7[0] = 0;

        $r8 = virtualinvoke r4.<com.opengamma.analytics.math.matrix.DoubleMatrix1D: java.lang.Double getEntry(int[])>($r7);

        return $r8;
    }

    public double firstDerivative(com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle, java.lang.Double)
    {
        com.opengamma.analytics.math.interpolation.MonotoneConvexSplineInterpolator1D r0;
        com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle r1;
        java.lang.Double r2, $r8;
        com.opengamma.analytics.math.interpolation.data.Interpolator1DPiecewisePoynomialWithExtraKnotsDataBundle r3;
        com.opengamma.analytics.math.matrix.DoubleMatrix1D r4;
        boolean $z0;
        com.opengamma.analytics.math.function.PiecewisePolynomialFunction1D $r5;
        com.opengamma.analytics.math.interpolation.PiecewisePolynomialResult $r6;
        double $d0, $d1;
        int[] $r7;

        r0 := @this: com.opengamma.analytics.math.interpolation.MonotoneConvexSplineInterpolator1D;

        r1 := @parameter0: com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle;

        r2 := @parameter1: java.lang.Double;

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object,java.lang.String)>(r2, "value");

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object,java.lang.String)>(r1, "data bundle");

        $z0 = r1 instanceof com.opengamma.analytics.math.interpolation.data.Interpolator1DPiecewisePoynomialWithExtraKnotsDataBundle;

        staticinvoke <org.apache.commons.lang.Validate: void isTrue(boolean)>($z0);

        r3 = (com.opengamma.analytics.math.interpolation.data.Interpolator1DPiecewisePoynomialWithExtraKnotsDataBundle) r1;

        $r5 = <com.opengamma.analytics.math.interpolation.MonotoneConvexSplineInterpolator1D: com.opengamma.analytics.math.function.PiecewisePolynomialFunction1D FUNC>;

        $r6 = virtualinvoke r3.<com.opengamma.analytics.math.interpolation.data.Interpolator1DPiecewisePoynomialWithExtraKnotsDataBundle: com.opengamma.analytics.math.interpolation.PiecewisePolynomialResult getPiecewisePolynomialResult()>();

        $d0 = virtualinvoke r2.<java.lang.Double: double doubleValue()>();

        r4 = virtualinvoke $r5.<com.opengamma.analytics.math.function.PiecewisePolynomialFunction1D: com.opengamma.analytics.math.matrix.DoubleMatrix1D differentiate(com.opengamma.analytics.math.interpolation.PiecewisePolynomialResult,double)>($r6, $d0);

        $r7 = newarray (int)[1];

        $r7[0] = 0;

        $r8 = virtualinvoke r4.<com.opengamma.analytics.math.matrix.DoubleMatrix1D: java.lang.Double getEntry(int[])>($r7);

        $d1 = virtualinvoke $r8.<java.lang.Double: double doubleValue()>();

        return $d1;
    }

    public double[] getNodeSensitivitiesForValue(com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle, java.lang.Double)
    {
        com.opengamma.analytics.math.interpolation.MonotoneConvexSplineInterpolator1D r0;
        com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle r1;
        java.lang.Double r2;
        com.opengamma.analytics.math.interpolation.data.Interpolator1DPiecewisePoynomialWithExtraKnotsDataBundle r3;
        int i0, i2;
        double[] r4, $r5, $r6, $r11, $r16;
        double d0, d1, d3, d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13;
        boolean $z0;
        byte $b1;
        com.opengamma.analytics.math.function.PiecewisePolynomialFunction1D $r7, $r12;
        com.opengamma.analytics.math.interpolation.PiecewisePolynomialResult[] $r8, $r13;
        com.opengamma.analytics.math.interpolation.PiecewisePolynomialResult $r9, $r14;
        com.opengamma.analytics.math.matrix.DoubleMatrix1D $r10, $r15;

        r0 := @this: com.opengamma.analytics.math.interpolation.MonotoneConvexSplineInterpolator1D;

        r1 := @parameter0: com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle;

        r2 := @parameter1: java.lang.Double;

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object,java.lang.String)>(r2, "value");

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object,java.lang.String)>(r1, "data bundle");

        $z0 = r1 instanceof com.opengamma.analytics.math.interpolation.data.Interpolator1DPiecewisePoynomialWithExtraKnotsDataBundle;

        staticinvoke <org.apache.commons.lang.Validate: void isTrue(boolean)>($z0);

        r3 = (com.opengamma.analytics.math.interpolation.data.Interpolator1DPiecewisePoynomialWithExtraKnotsDataBundle) r1;

        i0 = virtualinvoke r3.<com.opengamma.analytics.math.interpolation.data.Interpolator1DPiecewisePoynomialWithExtraKnotsDataBundle: int size()>();

        r4 = newarray (double)[i0];

        d0 = virtualinvoke r3.<com.opengamma.analytics.math.interpolation.data.Interpolator1DPiecewisePoynomialWithExtraKnotsDataBundle: double getEps()>();

        d1 = virtualinvoke r3.<com.opengamma.analytics.math.interpolation.data.Interpolator1DPiecewisePoynomialWithExtraKnotsDataBundle: double getSmall()>();

        i2 = 0;

     label1:
        if i2 >= i0 goto label4;

        $r5 = virtualinvoke r3.<com.opengamma.analytics.math.interpolation.data.Interpolator1DPiecewisePoynomialWithExtraKnotsDataBundle: double[] getValues()>();

        $d5 = $r5[i2];

        $d6 = staticinvoke <java.lang.Math: double abs(double)>($d5);

        $b1 = $d6 cmpg d1;

        if $b1 >= 0 goto label2;

        $d13 = d0;

        goto label3;

     label2:
        $r6 = virtualinvoke r3.<com.opengamma.analytics.math.interpolation.data.Interpolator1DPiecewisePoynomialWithExtraKnotsDataBundle: double[] getValues()>();

        $d7 = $r6[i2];

        $d13 = $d7 * d0;

     label3:
        $r7 = <com.opengamma.analytics.math.interpolation.MonotoneConvexSplineInterpolator1D: com.opengamma.analytics.math.function.PiecewisePolynomialFunction1D FUNC>;

        $r8 = virtualinvoke r3.<com.opengamma.analytics.math.interpolation.data.Interpolator1DPiecewisePoynomialWithExtraKnotsDataBundle: com.opengamma.analytics.math.interpolation.PiecewisePolynomialResult[] getPiecewisePolynomialResultUp()>();

        $r9 = $r8[i2];

        $d8 = virtualinvoke r2.<java.lang.Double: double doubleValue()>();

        $r10 = virtualinvoke $r7.<com.opengamma.analytics.math.function.PiecewisePolynomialFunction1D: com.opengamma.analytics.math.matrix.DoubleMatrix1D evaluate(com.opengamma.analytics.math.interpolation.PiecewisePolynomialResult,double)>($r9, $d8);

        $r11 = virtualinvoke $r10.<com.opengamma.analytics.math.matrix.DoubleMatrix1D: double[] getData()>();

        d3 = $r11[0];

        $r12 = <com.opengamma.analytics.math.interpolation.MonotoneConvexSplineInterpolator1D: com.opengamma.analytics.math.function.PiecewisePolynomialFunction1D FUNC>;

        $r13 = virtualinvoke r3.<com.opengamma.analytics.math.interpolation.data.Interpolator1DPiecewisePoynomialWithExtraKnotsDataBundle: com.opengamma.analytics.math.interpolation.PiecewisePolynomialResult[] getPiecewisePolynomialResultDw()>();

        $r14 = $r13[i2];

        $d9 = virtualinvoke r2.<java.lang.Double: double doubleValue()>();

        $r15 = virtualinvoke $r12.<com.opengamma.analytics.math.function.PiecewisePolynomialFunction1D: com.opengamma.analytics.math.matrix.DoubleMatrix1D evaluate(com.opengamma.analytics.math.interpolation.PiecewisePolynomialResult,double)>($r14, $d9);

        $r16 = virtualinvoke $r15.<com.opengamma.analytics.math.matrix.DoubleMatrix1D: double[] getData()>();

        d4 = $r16[0];

        $d10 = d3 - d4;

        $d11 = 0.5 * $d10;

        $d12 = $d11 / $d13;

        r4[i2] = $d12;

        i2 = i2 + 1;

        goto label1;

     label4:
        return r4;
    }

    public com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle getDataBundle(double[], double[])
    {
        com.opengamma.analytics.math.interpolation.MonotoneConvexSplineInterpolator1D r0;
        double[] r1, r2;
        com.opengamma.analytics.math.interpolation.data.Interpolator1DPiecewisePoynomialWithExtraKnotsDataBundle $r3;
        com.opengamma.analytics.math.interpolation.data.ArrayInterpolator1DDataBundle $r4;
        com.opengamma.analytics.math.interpolation.MonotoneConvexSplineInterpolator $r5;

        r0 := @this: com.opengamma.analytics.math.interpolation.MonotoneConvexSplineInterpolator1D;

        r1 := @parameter0: double[];

        r2 := @parameter1: double[];

        $r3 = new com.opengamma.analytics.math.interpolation.data.Interpolator1DPiecewisePoynomialWithExtraKnotsDataBundle;

        $r4 = new com.opengamma.analytics.math.interpolation.data.ArrayInterpolator1DDataBundle;

        specialinvoke $r4.<com.opengamma.analytics.math.interpolation.data.ArrayInterpolator1DDataBundle: void <init>(double[],double[],boolean)>(r1, r2, 0);

        $r5 = <com.opengamma.analytics.math.interpolation.MonotoneConvexSplineInterpolator1D: com.opengamma.analytics.math.interpolation.MonotoneConvexSplineInterpolator BASE_METHOD>;

        specialinvoke $r3.<com.opengamma.analytics.math.interpolation.data.Interpolator1DPiecewisePoynomialWithExtraKnotsDataBundle: void <init>(com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle,com.opengamma.analytics.math.interpolation.PiecewisePolynomialInterpolator)>($r4, $r5);

        return $r3;
    }

    public com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle getDataBundleFromSortedArrays(double[], double[])
    {
        com.opengamma.analytics.math.interpolation.MonotoneConvexSplineInterpolator1D r0;
        double[] r1, r2;
        com.opengamma.analytics.math.interpolation.data.Interpolator1DPiecewisePoynomialWithExtraKnotsDataBundle $r3;
        com.opengamma.analytics.math.interpolation.data.ArrayInterpolator1DDataBundle $r4;
        com.opengamma.analytics.math.interpolation.MonotoneConvexSplineInterpolator $r5;

        r0 := @this: com.opengamma.analytics.math.interpolation.MonotoneConvexSplineInterpolator1D;

        r1 := @parameter0: double[];

        r2 := @parameter1: double[];

        $r3 = new com.opengamma.analytics.math.interpolation.data.Interpolator1DPiecewisePoynomialWithExtraKnotsDataBundle;

        $r4 = new com.opengamma.analytics.math.interpolation.data.ArrayInterpolator1DDataBundle;

        specialinvoke $r4.<com.opengamma.analytics.math.interpolation.data.ArrayInterpolator1DDataBundle: void <init>(double[],double[],boolean)>(r1, r2, 1);

        $r5 = <com.opengamma.analytics.math.interpolation.MonotoneConvexSplineInterpolator1D: com.opengamma.analytics.math.interpolation.MonotoneConvexSplineInterpolator BASE_METHOD>;

        specialinvoke $r3.<com.opengamma.analytics.math.interpolation.data.Interpolator1DPiecewisePoynomialWithExtraKnotsDataBundle: void <init>(com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle,com.opengamma.analytics.math.interpolation.PiecewisePolynomialInterpolator)>($r4, $r5);

        return $r3;
    }

    public volatile java.lang.Double interpolate(java.lang.Object, java.lang.Object)
    {
        com.opengamma.analytics.math.interpolation.MonotoneConvexSplineInterpolator1D r0;
        java.lang.Object r1, r2;
        java.lang.Double $r3, $r5;
        com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle $r4;

        r0 := @this: com.opengamma.analytics.math.interpolation.MonotoneConvexSplineInterpolator1D;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r4 = (com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle) r1;

        $r3 = (java.lang.Double) r2;

        $r5 = virtualinvoke r0.<com.opengamma.analytics.math.interpolation.MonotoneConvexSplineInterpolator1D: java.lang.Double interpolate(com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle,java.lang.Double)>($r4, $r3);

        return $r5;
    }

    static void <clinit>()
    {
        com.opengamma.analytics.math.function.PiecewisePolynomialFunction1D $r0;
        com.opengamma.analytics.math.interpolation.MonotoneConvexSplineInterpolator $r1;

        <com.opengamma.analytics.math.interpolation.MonotoneConvexSplineInterpolator1D: long serialVersionUID> = 1L;

        $r0 = new com.opengamma.analytics.math.function.PiecewisePolynomialFunction1D;

        specialinvoke $r0.<com.opengamma.analytics.math.function.PiecewisePolynomialFunction1D: void <init>()>();

        <com.opengamma.analytics.math.interpolation.MonotoneConvexSplineInterpolator1D: com.opengamma.analytics.math.function.PiecewisePolynomialFunction1D FUNC> = $r0;

        $r1 = new com.opengamma.analytics.math.interpolation.MonotoneConvexSplineInterpolator;

        specialinvoke $r1.<com.opengamma.analytics.math.interpolation.MonotoneConvexSplineInterpolator: void <init>()>();

        <com.opengamma.analytics.math.interpolation.MonotoneConvexSplineInterpolator1D: com.opengamma.analytics.math.interpolation.MonotoneConvexSplineInterpolator BASE_METHOD> = $r1;

        return;
    }
}
