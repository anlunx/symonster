public class org.apache.commons.math3.ml.neuralnet.sofm.util.QuasiSigmoidDecayFunction extends java.lang.Object
{
    private final org.apache.commons.math3.analysis.function.Logistic sigmoid;
    private final double scale;

    public void <init>(double, double, long)
    {
        org.apache.commons.math3.ml.neuralnet.sofm.util.QuasiSigmoidDecayFunction r0;
        double d0, d1, d3, d4, d8, $d9, $d10;
        long l0;
        byte $b1, $b2, $b3;
        org.apache.commons.math3.analysis.function.Logistic $r1, $r2;
        org.apache.commons.math3.exception.NotStrictlyPositiveException $r3, $r8;
        java.lang.Long $r4;
        org.apache.commons.math3.exception.NumberIsTooLargeException $r5;
        java.lang.Double $r6, $r9;
        java.lang.Integer $r7;

        r0 := @this: org.apache.commons.math3.ml.neuralnet.sofm.util.QuasiSigmoidDecayFunction;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        l0 := @parameter2: long;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $b1 = d0 cmpg 0.0;

        if $b1 > 0 goto label1;

        $r8 = new org.apache.commons.math3.exception.NotStrictlyPositiveException;

        $r9 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d0);

        specialinvoke $r8.<org.apache.commons.math3.exception.NotStrictlyPositiveException: void <init>(java.lang.Number)>($r9);

        throw $r8;

     label1:
        $b2 = d1 cmpl 0.0;

        if $b2 < 0 goto label2;

        $r5 = new org.apache.commons.math3.exception.NumberIsTooLargeException;

        $r6 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d1);

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        specialinvoke $r5.<org.apache.commons.math3.exception.NumberIsTooLargeException: void <init>(java.lang.Number,java.lang.Number,boolean)>($r6, $r7, 0);

        throw $r5;

     label2:
        $b3 = l0 cmp 1L;

        if $b3 > 0 goto label3;

        $r3 = new org.apache.commons.math3.exception.NotStrictlyPositiveException;

        $r4 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l0);

        specialinvoke $r3.<org.apache.commons.math3.exception.NotStrictlyPositiveException: void <init>(java.lang.Number)>($r4);

        throw $r3;

     label3:
        d3 = (double) l0;

        $d9 = 4.0 * d1;

        d4 = $d9 / d0;

        $r1 = new org.apache.commons.math3.analysis.function.Logistic;

        specialinvoke $r1.<org.apache.commons.math3.analysis.function.Logistic: void <init>(double,double,double,double,double,double)>(d0, d3, d4, 1.0, 0.0, 1.0);

        r0.<org.apache.commons.math3.ml.neuralnet.sofm.util.QuasiSigmoidDecayFunction: org.apache.commons.math3.analysis.function.Logistic sigmoid> = $r1;

        $r2 = r0.<org.apache.commons.math3.ml.neuralnet.sofm.util.QuasiSigmoidDecayFunction: org.apache.commons.math3.analysis.function.Logistic sigmoid>;

        d8 = virtualinvoke $r2.<org.apache.commons.math3.analysis.function.Logistic: double value(double)>(0.0);

        $d10 = d0 / d8;

        r0.<org.apache.commons.math3.ml.neuralnet.sofm.util.QuasiSigmoidDecayFunction: double scale> = $d10;

        return;
    }

    public double value(long)
    {
        org.apache.commons.math3.ml.neuralnet.sofm.util.QuasiSigmoidDecayFunction r0;
        long l0;
        double $d0, $d1, $d2, $d3;
        org.apache.commons.math3.analysis.function.Logistic $r1;

        r0 := @this: org.apache.commons.math3.ml.neuralnet.sofm.util.QuasiSigmoidDecayFunction;

        l0 := @parameter0: long;

        $d1 = r0.<org.apache.commons.math3.ml.neuralnet.sofm.util.QuasiSigmoidDecayFunction: double scale>;

        $r1 = r0.<org.apache.commons.math3.ml.neuralnet.sofm.util.QuasiSigmoidDecayFunction: org.apache.commons.math3.analysis.function.Logistic sigmoid>;

        $d0 = (double) l0;

        $d2 = virtualinvoke $r1.<org.apache.commons.math3.analysis.function.Logistic: double value(double)>($d0);

        $d3 = $d1 * $d2;

        return $d3;
    }
}
