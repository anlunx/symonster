public class org.apache.commons.math3.analysis.interpolation.PiecewiseBicubicSplineInterpolator extends java.lang.Object implements org.apache.commons.math3.analysis.interpolation.BivariateGridInterpolator
{

    public void <init>()
    {
        org.apache.commons.math3.analysis.interpolation.PiecewiseBicubicSplineInterpolator r0;

        r0 := @this: org.apache.commons.math3.analysis.interpolation.PiecewiseBicubicSplineInterpolator;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public org.apache.commons.math3.analysis.interpolation.PiecewiseBicubicSplineInterpolatingFunction interpolate(double[], double[], double[][]) throws org.apache.commons.math3.exception.DimensionMismatchException, org.apache.commons.math3.exception.NullArgumentException, org.apache.commons.math3.exception.NoDataException, org.apache.commons.math3.exception.NonMonotonicSequenceException
    {
        org.apache.commons.math3.analysis.interpolation.PiecewiseBicubicSplineInterpolator r0;
        double[] r1, r2, $r4;
        double[][] r3;
        int $i0, $i1, $i2;
        org.apache.commons.math3.analysis.interpolation.PiecewiseBicubicSplineInterpolatingFunction $r5;
        org.apache.commons.math3.exception.NullArgumentException $r6;
        org.apache.commons.math3.exception.NoDataException $r7;

        r0 := @this: org.apache.commons.math3.analysis.interpolation.PiecewiseBicubicSplineInterpolator;

        r1 := @parameter0: double[];

        r2 := @parameter1: double[];

        r3 := @parameter2: double[][];

        if r1 == null goto label1;

        if r2 == null goto label1;

        if r3 == null goto label1;

        $r4 = r3[0];

        if $r4 != null goto label2;

     label1:
        $r6 = new org.apache.commons.math3.exception.NullArgumentException;

        specialinvoke $r6.<org.apache.commons.math3.exception.NullArgumentException: void <init>()>();

        throw $r6;

     label2:
        $i0 = lengthof r1;

        if $i0 == 0 goto label3;

        $i1 = lengthof r2;

        if $i1 == 0 goto label3;

        $i2 = lengthof r3;

        if $i2 != 0 goto label4;

     label3:
        $r7 = new org.apache.commons.math3.exception.NoDataException;

        specialinvoke $r7.<org.apache.commons.math3.exception.NoDataException: void <init>()>();

        throw $r7;

     label4:
        staticinvoke <org.apache.commons.math3.util.MathArrays: void checkOrder(double[])>(r1);

        staticinvoke <org.apache.commons.math3.util.MathArrays: void checkOrder(double[])>(r2);

        $r5 = new org.apache.commons.math3.analysis.interpolation.PiecewiseBicubicSplineInterpolatingFunction;

        specialinvoke $r5.<org.apache.commons.math3.analysis.interpolation.PiecewiseBicubicSplineInterpolatingFunction: void <init>(double[],double[],double[][])>(r1, r2, r3);

        return $r5;
    }

    public volatile org.apache.commons.math3.analysis.BivariateFunction interpolate(double[], double[], double[][]) throws org.apache.commons.math3.exception.NoDataException, org.apache.commons.math3.exception.DimensionMismatchException, org.apache.commons.math3.exception.NonMonotonicSequenceException, org.apache.commons.math3.exception.NumberIsTooSmallException
    {
        org.apache.commons.math3.analysis.interpolation.PiecewiseBicubicSplineInterpolator r0;
        double[] r1, r2;
        double[][] r3;
        org.apache.commons.math3.analysis.interpolation.PiecewiseBicubicSplineInterpolatingFunction $r4;

        r0 := @this: org.apache.commons.math3.analysis.interpolation.PiecewiseBicubicSplineInterpolator;

        r1 := @parameter0: double[];

        r2 := @parameter1: double[];

        r3 := @parameter2: double[][];

        $r4 = virtualinvoke r0.<org.apache.commons.math3.analysis.interpolation.PiecewiseBicubicSplineInterpolator: org.apache.commons.math3.analysis.interpolation.PiecewiseBicubicSplineInterpolatingFunction interpolate(double[],double[],double[][])>(r1, r2, r3);

        return $r4;
    }
}
