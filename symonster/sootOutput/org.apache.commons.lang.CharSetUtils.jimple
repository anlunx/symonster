public class org.apache.commons.lang.CharSetUtils extends java.lang.Object
{

    public void <init>()
    {
        org.apache.commons.lang.CharSetUtils r0;

        r0 := @this: org.apache.commons.lang.CharSetUtils;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static org.apache.commons.lang.CharSet evaluateSet(java.lang.String[])
    {
        java.lang.String[] r0;
        org.apache.commons.lang.CharSet $r1;

        r0 := @parameter0: java.lang.String[];

        if r0 != null goto label1;

        return null;

     label1:
        $r1 = new org.apache.commons.lang.CharSet;

        specialinvoke $r1.<org.apache.commons.lang.CharSet: void <init>(java.lang.String[])>(r0);

        return $r1;
    }

    public static java.lang.String squeeze(java.lang.String, java.lang.String)
    {
        java.lang.String r0, r1, $r3;
        java.lang.String[] r2;
        boolean $z0, $z1;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        $z0 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isEmpty(java.lang.String)>(r0);

        if $z0 != 0 goto label1;

        $z1 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isEmpty(java.lang.String)>(r1);

        if $z1 == 0 goto label2;

     label1:
        return r0;

     label2:
        r2 = newarray (java.lang.String)[1];

        r2[0] = r1;

        $r3 = staticinvoke <org.apache.commons.lang.CharSetUtils: java.lang.String squeeze(java.lang.String,java.lang.String[])>(r0, r2);

        return $r3;
    }

    public static java.lang.String squeeze(java.lang.String, java.lang.String[])
    {
        java.lang.String r0, $r6;
        java.lang.String[] r1;
        org.apache.commons.lang.CharSet r2;
        char[] r4;
        int i0, $i1, i4;
        boolean $z0, $z1, $z2;
        org.apache.commons.lang.text.StrBuilder $r5;
        char c2, c5;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String[];

        $z0 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isEmpty(java.lang.String)>(r0);

        if $z0 != 0 goto label1;

        $z1 = staticinvoke <org.apache.commons.lang.ArrayUtils: boolean isEmpty(java.lang.Object[])>(r1);

        if $z1 == 0 goto label2;

     label1:
        return r0;

     label2:
        r2 = staticinvoke <org.apache.commons.lang.CharSet: org.apache.commons.lang.CharSet getInstance(java.lang.String[])>(r1);

        $r5 = new org.apache.commons.lang.text.StrBuilder;

        $i1 = virtualinvoke r0.<java.lang.String: int length()>();

        specialinvoke $r5.<org.apache.commons.lang.text.StrBuilder: void <init>(int)>($i1);

        r4 = virtualinvoke r0.<java.lang.String: char[] toCharArray()>();

        i0 = lengthof r4;

        c2 = 32;

        i4 = 0;

     label3:
        if i4 >= i0 goto label6;

        c5 = r4[i4];

        $z2 = virtualinvoke r2.<org.apache.commons.lang.CharSet: boolean contains(char)>(c5);

        if $z2 == 0 goto label4;

        if c5 != c2 goto label4;

        if i4 == 0 goto label4;

        goto label5;

     label4:
        virtualinvoke $r5.<org.apache.commons.lang.text.StrBuilder: org.apache.commons.lang.text.StrBuilder append(char)>(c5);

        c2 = c5;

     label5:
        i4 = i4 + 1;

        goto label3;

     label6:
        $r6 = virtualinvoke $r5.<org.apache.commons.lang.text.StrBuilder: java.lang.String toString()>();

        return $r6;
    }

    public static int count(java.lang.String, java.lang.String)
    {
        java.lang.String r0, r1;
        java.lang.String[] r2;
        boolean $z0, $z1;
        int $i0;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        $z0 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isEmpty(java.lang.String)>(r0);

        if $z0 != 0 goto label1;

        $z1 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isEmpty(java.lang.String)>(r1);

        if $z1 == 0 goto label2;

     label1:
        return 0;

     label2:
        r2 = newarray (java.lang.String)[1];

        r2[0] = r1;

        $i0 = staticinvoke <org.apache.commons.lang.CharSetUtils: int count(java.lang.String,java.lang.String[])>(r0, r2);

        return $i0;
    }

    public static int count(java.lang.String, java.lang.String[])
    {
        java.lang.String r0;
        java.lang.String[] r1;
        org.apache.commons.lang.CharSet r2;
        char[] r3;
        int i0, i2, i3;
        boolean $z0, $z1, $z2;
        char $c1;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String[];

        $z0 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isEmpty(java.lang.String)>(r0);

        if $z0 != 0 goto label1;

        $z1 = staticinvoke <org.apache.commons.lang.ArrayUtils: boolean isEmpty(java.lang.Object[])>(r1);

        if $z1 == 0 goto label2;

     label1:
        return 0;

     label2:
        r2 = staticinvoke <org.apache.commons.lang.CharSet: org.apache.commons.lang.CharSet getInstance(java.lang.String[])>(r1);

        i2 = 0;

        r3 = virtualinvoke r0.<java.lang.String: char[] toCharArray()>();

        i0 = lengthof r3;

        i3 = 0;

     label3:
        if i3 >= i0 goto label5;

        $c1 = r3[i3];

        $z2 = virtualinvoke r2.<org.apache.commons.lang.CharSet: boolean contains(char)>($c1);

        if $z2 == 0 goto label4;

        i2 = i2 + 1;

     label4:
        i3 = i3 + 1;

        goto label3;

     label5:
        return i2;
    }

    public static java.lang.String keep(java.lang.String, java.lang.String)
    {
        java.lang.String r0, r1, $r3;
        java.lang.String[] r2;
        int $i0;
        boolean $z0;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        if r0 != null goto label1;

        return null;

     label1:
        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        if $i0 == 0 goto label2;

        $z0 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isEmpty(java.lang.String)>(r1);

        if $z0 == 0 goto label3;

     label2:
        return "";

     label3:
        r2 = newarray (java.lang.String)[1];

        r2[0] = r1;

        $r3 = staticinvoke <org.apache.commons.lang.CharSetUtils: java.lang.String keep(java.lang.String,java.lang.String[])>(r0, r2);

        return $r3;
    }

    public static java.lang.String keep(java.lang.String, java.lang.String[])
    {
        java.lang.String r0, $r2;
        java.lang.String[] r1;
        int $i0;
        boolean $z0;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String[];

        if r0 != null goto label1;

        return null;

     label1:
        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        if $i0 == 0 goto label2;

        $z0 = staticinvoke <org.apache.commons.lang.ArrayUtils: boolean isEmpty(java.lang.Object[])>(r1);

        if $z0 == 0 goto label3;

     label2:
        return "";

     label3:
        $r2 = staticinvoke <org.apache.commons.lang.CharSetUtils: java.lang.String modify(java.lang.String,java.lang.String[],boolean)>(r0, r1, 1);

        return $r2;
    }

    public static java.lang.String delete(java.lang.String, java.lang.String)
    {
        java.lang.String r0, r1, $r3;
        java.lang.String[] r2;
        boolean $z0, $z1;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        $z0 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isEmpty(java.lang.String)>(r0);

        if $z0 != 0 goto label1;

        $z1 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isEmpty(java.lang.String)>(r1);

        if $z1 == 0 goto label2;

     label1:
        return r0;

     label2:
        r2 = newarray (java.lang.String)[1];

        r2[0] = r1;

        $r3 = staticinvoke <org.apache.commons.lang.CharSetUtils: java.lang.String delete(java.lang.String,java.lang.String[])>(r0, r2);

        return $r3;
    }

    public static java.lang.String delete(java.lang.String, java.lang.String[])
    {
        java.lang.String r0, $r2;
        java.lang.String[] r1;
        boolean $z0, $z1;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String[];

        $z0 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isEmpty(java.lang.String)>(r0);

        if $z0 != 0 goto label1;

        $z1 = staticinvoke <org.apache.commons.lang.ArrayUtils: boolean isEmpty(java.lang.Object[])>(r1);

        if $z1 == 0 goto label2;

     label1:
        return r0;

     label2:
        $r2 = staticinvoke <org.apache.commons.lang.CharSetUtils: java.lang.String modify(java.lang.String,java.lang.String[],boolean)>(r0, r1, 0);

        return $r2;
    }

    private static java.lang.String modify(java.lang.String, java.lang.String[], boolean)
    {
        java.lang.String r0, $r6;
        java.lang.String[] r1;
        boolean z0, $z1;
        org.apache.commons.lang.CharSet r2;
        char[] r4;
        int i0, $i1, i4;
        org.apache.commons.lang.text.StrBuilder $r5;
        char $c2, $c3;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String[];

        z0 := @parameter2: boolean;

        r2 = staticinvoke <org.apache.commons.lang.CharSet: org.apache.commons.lang.CharSet getInstance(java.lang.String[])>(r1);

        $r5 = new org.apache.commons.lang.text.StrBuilder;

        $i1 = virtualinvoke r0.<java.lang.String: int length()>();

        specialinvoke $r5.<org.apache.commons.lang.text.StrBuilder: void <init>(int)>($i1);

        r4 = virtualinvoke r0.<java.lang.String: char[] toCharArray()>();

        i0 = lengthof r4;

        i4 = 0;

     label1:
        if i4 >= i0 goto label3;

        $c2 = r4[i4];

        $z1 = virtualinvoke r2.<org.apache.commons.lang.CharSet: boolean contains(char)>($c2);

        if $z1 != z0 goto label2;

        $c3 = r4[i4];

        virtualinvoke $r5.<org.apache.commons.lang.text.StrBuilder: org.apache.commons.lang.text.StrBuilder append(char)>($c3);

     label2:
        i4 = i4 + 1;

        goto label1;

     label3:
        $r6 = virtualinvoke $r5.<org.apache.commons.lang.text.StrBuilder: java.lang.String toString()>();

        return $r6;
    }

    public static java.lang.String translate(java.lang.String, java.lang.String, java.lang.String)
    {
        java.lang.String r0, r1, r2, $r7;
        char[] r4, r5;
        int i0, i1, $i2, $i3, i7, i8;
        boolean $z0;
        org.apache.commons.lang.text.StrBuilder $r6;
        char $c4, $c5, $c6;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        $z0 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isEmpty(java.lang.String)>(r0);

        if $z0 == 0 goto label1;

        return r0;

     label1:
        $r6 = new org.apache.commons.lang.text.StrBuilder;

        $i2 = virtualinvoke r0.<java.lang.String: int length()>();

        specialinvoke $r6.<org.apache.commons.lang.text.StrBuilder: void <init>(int)>($i2);

        r4 = virtualinvoke r0.<java.lang.String: char[] toCharArray()>();

        r5 = virtualinvoke r2.<java.lang.String: char[] toCharArray()>();

        i0 = lengthof r4;

        $i3 = virtualinvoke r2.<java.lang.String: int length()>();

        i1 = $i3 - 1;

        i7 = 0;

     label2:
        if i7 >= i0 goto label6;

        $c4 = r4[i7];

        i8 = virtualinvoke r1.<java.lang.String: int indexOf(int)>($c4);

        if i8 == -1 goto label4;

        if i8 <= i1 goto label3;

        i8 = i1;

     label3:
        $c6 = r5[i8];

        virtualinvoke $r6.<org.apache.commons.lang.text.StrBuilder: org.apache.commons.lang.text.StrBuilder append(char)>($c6);

        goto label5;

     label4:
        $c5 = r4[i7];

        virtualinvoke $r6.<org.apache.commons.lang.text.StrBuilder: org.apache.commons.lang.text.StrBuilder append(char)>($c5);

     label5:
        i7 = i7 + 1;

        goto label2;

     label6:
        $r7 = virtualinvoke $r6.<org.apache.commons.lang.text.StrBuilder: java.lang.String toString()>();

        return $r7;
    }
}
