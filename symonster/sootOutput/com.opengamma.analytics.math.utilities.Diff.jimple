public class com.opengamma.analytics.math.utilities.Diff extends java.lang.Object
{

    public void <init>()
    {
        com.opengamma.analytics.math.utilities.Diff r0;

        r0 := @this: com.opengamma.analytics.math.utilities.Diff;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static double[] values(double[])
    {
        double[] r0, r1;
        int i0, $i1, $i2, i3;
        double $d0, $d1, $d2;

        r0 := @parameter0: double[];

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r0, "v");

        $i1 = lengthof r0;

        i0 = $i1 - 1;

        r1 = newarray (double)[i0];

        i3 = 0;

     label1:
        if i3 >= i0 goto label2;

        $i2 = i3 + 1;

        $d1 = r0[$i2];

        $d0 = r0[i3];

        $d2 = $d1 - $d0;

        r1[i3] = $d2;

        i3 = i3 + 1;

        goto label1;

     label2:
        return r1;
    }

    public static double[] values(double[], int)
    {
        double[] r0, r13;
        int i0, $i1, $i2, $i3, $i4, $i5, i6;
        java.lang.StringBuilder $r2, $r3, $r4, $r6, $r7, $r8, $r9, $r10, $r11;
        java.lang.String $r5, $r12;
        boolean $z0, $z1;

        r0 := @parameter0: double[];

        i0 := @parameter1: int;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r0, "v");

        if i0 <= -1 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid number of differences requested, t must be positive or 0. The given t was: ");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z0, $r5);

        $i1 = lengthof r0;

        if i0 >= $i1 goto label3;

        $z1 = 1;

        goto label4;

     label3:
        $z1 = 0;

     label4:
        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid number of differences requested, \'t\' is greater than the number of elements in \'v\'. The given \'t\' was: ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" and \'v\' contains ");

        $i2 = lengthof r0;

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" elements.");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z1, $r12);

        if i0 != 0 goto label5;

        $i4 = lengthof r0;

        r13 = newarray (double)[$i4];

        $i5 = lengthof r0;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r0, 0, r13, 0, $i5);

        goto label7;

     label5:
        r13 = staticinvoke <com.opengamma.analytics.math.utilities.Diff: double[] values(double[])>(r0);

        i6 = 0;

     label6:
        $i3 = i0 - 1;

        if i6 >= $i3 goto label7;

        r13 = staticinvoke <com.opengamma.analytics.math.utilities.Diff: double[] values(double[])>(r13);

        i6 = i6 + 1;

        goto label6;

     label7:
        return r13;
    }

    public static float[] values(float[])
    {
        float[] r0, r1;
        int i0, $i1, $i2, i3;
        float $f0, $f1, $f2;

        r0 := @parameter0: float[];

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r0, "v");

        $i1 = lengthof r0;

        i0 = $i1 - 1;

        r1 = newarray (float)[i0];

        i3 = 0;

     label1:
        if i3 >= i0 goto label2;

        $i2 = i3 + 1;

        $f1 = r0[$i2];

        $f0 = r0[i3];

        $f2 = $f1 - $f0;

        r1[i3] = $f2;

        i3 = i3 + 1;

        goto label1;

     label2:
        return r1;
    }

    public static float[] values(float[], int)
    {
        float[] r0, r13;
        int i0, $i1, $i2, $i3, $i4, $i5, i6;
        java.lang.StringBuilder $r2, $r3, $r4, $r6, $r7, $r8, $r9, $r10, $r11;
        java.lang.String $r5, $r12;
        boolean $z0, $z1;

        r0 := @parameter0: float[];

        i0 := @parameter1: int;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r0, "v");

        if i0 <= -1 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid number of differences requested, t must be positive or 0. The given t was: ");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z0, $r5);

        $i1 = lengthof r0;

        if i0 >= $i1 goto label3;

        $z1 = 1;

        goto label4;

     label3:
        $z1 = 0;

     label4:
        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid number of differences requested, \'t\' is greater than the number of elements in \'v\'. The given \'t\' was: ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" and \'v\' contains ");

        $i2 = lengthof r0;

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" elements.");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z1, $r12);

        if i0 != 0 goto label5;

        $i4 = lengthof r0;

        r13 = newarray (float)[$i4];

        $i5 = lengthof r0;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r0, 0, r13, 0, $i5);

        goto label7;

     label5:
        r13 = staticinvoke <com.opengamma.analytics.math.utilities.Diff: float[] values(float[])>(r0);

        i6 = 0;

     label6:
        $i3 = i0 - 1;

        if i6 >= $i3 goto label7;

        r13 = staticinvoke <com.opengamma.analytics.math.utilities.Diff: float[] values(float[])>(r13);

        i6 = i6 + 1;

        goto label6;

     label7:
        return r13;
    }

    public static int[] values(int[])
    {
        int[] r0, r1;
        int i0, $i1, $i2, $i3, $i4, $i5, i6;

        r0 := @parameter0: int[];

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r0, "v");

        $i1 = lengthof r0;

        i0 = $i1 - 1;

        r1 = newarray (int)[i0];

        i6 = 0;

     label1:
        if i6 >= i0 goto label2;

        $i2 = i6 + 1;

        $i4 = r0[$i2];

        $i3 = r0[i6];

        $i5 = $i4 - $i3;

        r1[i6] = $i5;

        i6 = i6 + 1;

        goto label1;

     label2:
        return r1;
    }

    public static int[] values(int[], int)
    {
        int[] r0, r13;
        int i0, $i1, $i2, $i3, $i4, $i5, i6;
        java.lang.StringBuilder $r2, $r3, $r4, $r6, $r7, $r8, $r9, $r10, $r11;
        java.lang.String $r5, $r12;
        boolean $z0, $z1;

        r0 := @parameter0: int[];

        i0 := @parameter1: int;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r0, "v");

        if i0 <= -1 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid number of differences requested, t must be positive or 0. The given t was: ");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z0, $r5);

        $i1 = lengthof r0;

        if i0 >= $i1 goto label3;

        $z1 = 1;

        goto label4;

     label3:
        $z1 = 0;

     label4:
        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid number of differences requested, \'t\' is greater than the number of elements in \'v\'. The given \'t\' was: ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" and \'v\' contains ");

        $i2 = lengthof r0;

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" elements.");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z1, $r12);

        if i0 != 0 goto label5;

        $i4 = lengthof r0;

        r13 = newarray (int)[$i4];

        $i5 = lengthof r0;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r0, 0, r13, 0, $i5);

        goto label7;

     label5:
        r13 = staticinvoke <com.opengamma.analytics.math.utilities.Diff: int[] values(int[])>(r0);

        i6 = 0;

     label6:
        $i3 = i0 - 1;

        if i6 >= $i3 goto label7;

        r13 = staticinvoke <com.opengamma.analytics.math.utilities.Diff: int[] values(int[])>(r13);

        i6 = i6 + 1;

        goto label6;

     label7:
        return r13;
    }

    public static long[] values(long[])
    {
        long[] r0, r1;
        int i0, $i1, $i2, i6;
        long $l3, $l4, $l5;

        r0 := @parameter0: long[];

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r0, "v");

        $i1 = lengthof r0;

        i0 = $i1 - 1;

        r1 = newarray (long)[i0];

        i6 = 0;

     label1:
        if i6 >= i0 goto label2;

        $i2 = i6 + 1;

        $l4 = r0[$i2];

        $l3 = r0[i6];

        $l5 = $l4 - $l3;

        r1[i6] = $l5;

        i6 = i6 + 1;

        goto label1;

     label2:
        return r1;
    }

    public static long[] values(long[], int)
    {
        long[] r0, r13;
        int i0, $i1, $i2, $i3, $i4, $i5, i6;
        java.lang.StringBuilder $r2, $r3, $r4, $r6, $r7, $r8, $r9, $r10, $r11;
        java.lang.String $r5, $r12;
        boolean $z0, $z1;

        r0 := @parameter0: long[];

        i0 := @parameter1: int;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r0, "v");

        if i0 <= -1 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid number of differences requested, t must be positive or 0. The given t was: ");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z0, $r5);

        $i1 = lengthof r0;

        if i0 >= $i1 goto label3;

        $z1 = 1;

        goto label4;

     label3:
        $z1 = 0;

     label4:
        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid number of differences requested, \'t\' is greater than the number of elements in \'v\'. The given \'t\' was: ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" and \'v\' contains ");

        $i2 = lengthof r0;

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" elements.");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z1, $r12);

        if i0 != 0 goto label5;

        $i4 = lengthof r0;

        r13 = newarray (long)[$i4];

        $i5 = lengthof r0;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r0, 0, r13, 0, $i5);

        goto label7;

     label5:
        r13 = staticinvoke <com.opengamma.analytics.math.utilities.Diff: long[] values(long[])>(r0);

        i6 = 0;

     label6:
        $i3 = i0 - 1;

        if i6 >= $i3 goto label7;

        r13 = staticinvoke <com.opengamma.analytics.math.utilities.Diff: long[] values(long[])>(r13);

        i6 = i6 + 1;

        goto label6;

     label7:
        return r13;
    }
}
