public class org.apache.commons.math3.geometry.euclidean.threed.SphereGenerator extends java.lang.Object implements org.apache.commons.math3.geometry.enclosing.SupportBallGenerator
{

    public void <init>()
    {
        org.apache.commons.math3.geometry.euclidean.threed.SphereGenerator r0;

        r0 := @this: org.apache.commons.math3.geometry.euclidean.threed.SphereGenerator;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public org.apache.commons.math3.geometry.enclosing.EnclosingBall ballOnSupport(java.util.List)
    {
        org.apache.commons.math3.geometry.euclidean.threed.SphereGenerator r0;
        java.util.List r1, $r101;
        org.apache.commons.math3.geometry.euclidean.threed.Vector3D r2, r3, r4, $r93, $r105, $r108, $r114, r117;
        org.apache.commons.math3.fraction.BigFraction r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, $r24, $r25, $r26, $r27, $r29, $r30, $r31, $r32, $r34, $r35, $r36, $r37, $r39, $r40, $r41, $r42, $r43, $r44, $r45, $r46, $r47, $r48, $r49, $r50, $r51, $r52, $r53, $r54, $r55, $r56, $r57, $r58, $r59, $r60, $r61, $r62, $r63, $r64, $r65, $r66, $r67, $r68, $r69, $r70, $r71, $r72, $r73, $r74, $r75, $r76, $r77, $r78, $r79, $r80, $r81, $r82, $r83, $r84, $r85, $r86, $r87, $r88, $r89, $r90, $r91;
        int $i0, $i1, $i2, $i3;
        java.lang.Object $r19, $r20, $r21, $r22;
        org.apache.commons.math3.fraction.BigFraction[] $r23, $r28, $r33, $r38;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21, $d22, $d23, $d24, $d25;
        org.apache.commons.math3.geometry.enclosing.EnclosingBall $r92, $r102, $r107, $r110, $r112, r116;
        org.apache.commons.math3.geometry.euclidean.threed.Vector3D[] $r94, $r106, $r109, $r111, $r113;
        org.apache.commons.math3.geometry.euclidean.threed.Plane $r95;
        org.apache.commons.math3.geometry.euclidean.twod.DiskGenerator $r96;
        org.apache.commons.math3.geometry.euclidean.twod.Vector2D[] $r97;
        org.apache.commons.math3.geometry.euclidean.twod.Vector2D $r98, $r99, $r100;
        org.apache.commons.math3.geometry.Point $r103;
        org.apache.commons.math3.geometry.Vector $r104;

        r0 := @this: org.apache.commons.math3.geometry.euclidean.threed.SphereGenerator;

        r1 := @parameter0: java.util.List;

        $i0 = interfaceinvoke r1.<java.util.List: int size()>();

        if $i0 >= 1 goto label1;

        $r112 = new org.apache.commons.math3.geometry.enclosing.EnclosingBall;

        $r114 = <org.apache.commons.math3.geometry.euclidean.threed.Vector3D: org.apache.commons.math3.geometry.euclidean.threed.Vector3D ZERO>;

        $r113 = newarray (org.apache.commons.math3.geometry.euclidean.threed.Vector3D)[0];

        specialinvoke $r112.<org.apache.commons.math3.geometry.enclosing.EnclosingBall: void <init>(org.apache.commons.math3.geometry.Point,double,org.apache.commons.math3.geometry.Point[])>($r114, #-Infinity, $r113);

        return $r112;

     label1:
        $r19 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(0);

        r2 = (org.apache.commons.math3.geometry.euclidean.threed.Vector3D) $r19;

        $i1 = interfaceinvoke r1.<java.util.List: int size()>();

        if $i1 >= 2 goto label2;

        $r110 = new org.apache.commons.math3.geometry.enclosing.EnclosingBall;

        $r111 = newarray (org.apache.commons.math3.geometry.euclidean.threed.Vector3D)[1];

        $r111[0] = r2;

        specialinvoke $r110.<org.apache.commons.math3.geometry.enclosing.EnclosingBall: void <init>(org.apache.commons.math3.geometry.Point,double,org.apache.commons.math3.geometry.Point[])>(r2, 0.0, $r111);

        return $r110;

     label2:
        $r20 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(1);

        r3 = (org.apache.commons.math3.geometry.euclidean.threed.Vector3D) $r20;

        $i2 = interfaceinvoke r1.<java.util.List: int size()>();

        if $i2 >= 3 goto label3;

        $r107 = new org.apache.commons.math3.geometry.enclosing.EnclosingBall;

        $r108 = new org.apache.commons.math3.geometry.euclidean.threed.Vector3D;

        specialinvoke $r108.<org.apache.commons.math3.geometry.euclidean.threed.Vector3D: void <init>(double,org.apache.commons.math3.geometry.euclidean.threed.Vector3D,double,org.apache.commons.math3.geometry.euclidean.threed.Vector3D)>(0.5, r2, 0.5, r3);

        $d24 = virtualinvoke r2.<org.apache.commons.math3.geometry.euclidean.threed.Vector3D: double distance(org.apache.commons.math3.geometry.Vector)>(r3);

        $d25 = 0.5 * $d24;

        $r109 = newarray (org.apache.commons.math3.geometry.euclidean.threed.Vector3D)[2];

        $r109[0] = r2;

        $r109[1] = r3;

        specialinvoke $r107.<org.apache.commons.math3.geometry.enclosing.EnclosingBall: void <init>(org.apache.commons.math3.geometry.Point,double,org.apache.commons.math3.geometry.Point[])>($r108, $d25, $r109);

        return $r107;

     label3:
        $r21 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(2);

        r4 = (org.apache.commons.math3.geometry.euclidean.threed.Vector3D) $r21;

        $i3 = interfaceinvoke r1.<java.util.List: int size()>();

        if $i3 >= 4 goto label4;

        $r95 = new org.apache.commons.math3.geometry.euclidean.threed.Plane;

        $d17 = virtualinvoke r2.<org.apache.commons.math3.geometry.euclidean.threed.Vector3D: double getNorm1()>();

        $d18 = virtualinvoke r3.<org.apache.commons.math3.geometry.euclidean.threed.Vector3D: double getNorm1()>();

        $d19 = $d17 + $d18;

        $d20 = virtualinvoke r4.<org.apache.commons.math3.geometry.euclidean.threed.Vector3D: double getNorm1()>();

        $d21 = $d19 + $d20;

        $d22 = 1.0E-10 * $d21;

        specialinvoke $r95.<org.apache.commons.math3.geometry.euclidean.threed.Plane: void <init>(org.apache.commons.math3.geometry.euclidean.threed.Vector3D,org.apache.commons.math3.geometry.euclidean.threed.Vector3D,org.apache.commons.math3.geometry.euclidean.threed.Vector3D,double)>(r2, r3, r4, $d22);

        $r96 = new org.apache.commons.math3.geometry.euclidean.twod.DiskGenerator;

        specialinvoke $r96.<org.apache.commons.math3.geometry.euclidean.twod.DiskGenerator: void <init>()>();

        $r97 = newarray (org.apache.commons.math3.geometry.euclidean.twod.Vector2D)[3];

        $r98 = virtualinvoke $r95.<org.apache.commons.math3.geometry.euclidean.threed.Plane: org.apache.commons.math3.geometry.euclidean.twod.Vector2D toSubSpace(org.apache.commons.math3.geometry.Vector)>(r2);

        $r97[0] = $r98;

        $r99 = virtualinvoke $r95.<org.apache.commons.math3.geometry.euclidean.threed.Plane: org.apache.commons.math3.geometry.euclidean.twod.Vector2D toSubSpace(org.apache.commons.math3.geometry.Vector)>(r3);

        $r97[1] = $r99;

        $r100 = virtualinvoke $r95.<org.apache.commons.math3.geometry.euclidean.threed.Plane: org.apache.commons.math3.geometry.euclidean.twod.Vector2D toSubSpace(org.apache.commons.math3.geometry.Vector)>(r4);

        $r97[2] = $r100;

        $r101 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r97);

        r116 = virtualinvoke $r96.<org.apache.commons.math3.geometry.euclidean.twod.DiskGenerator: org.apache.commons.math3.geometry.enclosing.EnclosingBall ballOnSupport(java.util.List)>($r101);

        $r102 = new org.apache.commons.math3.geometry.enclosing.EnclosingBall;

        $r103 = virtualinvoke r116.<org.apache.commons.math3.geometry.enclosing.EnclosingBall: org.apache.commons.math3.geometry.Point getCenter()>();

        $r104 = (org.apache.commons.math3.geometry.Vector) $r103;

        $r105 = virtualinvoke $r95.<org.apache.commons.math3.geometry.euclidean.threed.Plane: org.apache.commons.math3.geometry.euclidean.threed.Vector3D toSpace(org.apache.commons.math3.geometry.Vector)>($r104);

        $d23 = virtualinvoke r116.<org.apache.commons.math3.geometry.enclosing.EnclosingBall: double getRadius()>();

        $r106 = newarray (org.apache.commons.math3.geometry.euclidean.threed.Vector3D)[3];

        $r106[0] = r2;

        $r106[1] = r3;

        $r106[2] = r4;

        specialinvoke $r102.<org.apache.commons.math3.geometry.enclosing.EnclosingBall: void <init>(org.apache.commons.math3.geometry.Point,double,org.apache.commons.math3.geometry.Point[])>($r105, $d23, $r106);

        return $r102;

     label4:
        $r22 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(3);

        r117 = (org.apache.commons.math3.geometry.euclidean.threed.Vector3D) $r22;

        $r23 = newarray (org.apache.commons.math3.fraction.BigFraction)[4];

        $r24 = new org.apache.commons.math3.fraction.BigFraction;

        $d0 = virtualinvoke r2.<org.apache.commons.math3.geometry.euclidean.threed.Vector3D: double getX()>();

        specialinvoke $r24.<org.apache.commons.math3.fraction.BigFraction: void <init>(double)>($d0);

        $r23[0] = $r24;

        $r25 = new org.apache.commons.math3.fraction.BigFraction;

        $d1 = virtualinvoke r3.<org.apache.commons.math3.geometry.euclidean.threed.Vector3D: double getX()>();

        specialinvoke $r25.<org.apache.commons.math3.fraction.BigFraction: void <init>(double)>($d1);

        $r23[1] = $r25;

        $r26 = new org.apache.commons.math3.fraction.BigFraction;

        $d2 = virtualinvoke r4.<org.apache.commons.math3.geometry.euclidean.threed.Vector3D: double getX()>();

        specialinvoke $r26.<org.apache.commons.math3.fraction.BigFraction: void <init>(double)>($d2);

        $r23[2] = $r26;

        $r27 = new org.apache.commons.math3.fraction.BigFraction;

        $d3 = virtualinvoke r117.<org.apache.commons.math3.geometry.euclidean.threed.Vector3D: double getX()>();

        specialinvoke $r27.<org.apache.commons.math3.fraction.BigFraction: void <init>(double)>($d3);

        $r23[3] = $r27;

        $r28 = newarray (org.apache.commons.math3.fraction.BigFraction)[4];

        $r29 = new org.apache.commons.math3.fraction.BigFraction;

        $d4 = virtualinvoke r2.<org.apache.commons.math3.geometry.euclidean.threed.Vector3D: double getY()>();

        specialinvoke $r29.<org.apache.commons.math3.fraction.BigFraction: void <init>(double)>($d4);

        $r28[0] = $r29;

        $r30 = new org.apache.commons.math3.fraction.BigFraction;

        $d5 = virtualinvoke r3.<org.apache.commons.math3.geometry.euclidean.threed.Vector3D: double getY()>();

        specialinvoke $r30.<org.apache.commons.math3.fraction.BigFraction: void <init>(double)>($d5);

        $r28[1] = $r30;

        $r31 = new org.apache.commons.math3.fraction.BigFraction;

        $d6 = virtualinvoke r4.<org.apache.commons.math3.geometry.euclidean.threed.Vector3D: double getY()>();

        specialinvoke $r31.<org.apache.commons.math3.fraction.BigFraction: void <init>(double)>($d6);

        $r28[2] = $r31;

        $r32 = new org.apache.commons.math3.fraction.BigFraction;

        $d7 = virtualinvoke r117.<org.apache.commons.math3.geometry.euclidean.threed.Vector3D: double getY()>();

        specialinvoke $r32.<org.apache.commons.math3.fraction.BigFraction: void <init>(double)>($d7);

        $r28[3] = $r32;

        $r33 = newarray (org.apache.commons.math3.fraction.BigFraction)[4];

        $r34 = new org.apache.commons.math3.fraction.BigFraction;

        $d8 = virtualinvoke r2.<org.apache.commons.math3.geometry.euclidean.threed.Vector3D: double getZ()>();

        specialinvoke $r34.<org.apache.commons.math3.fraction.BigFraction: void <init>(double)>($d8);

        $r33[0] = $r34;

        $r35 = new org.apache.commons.math3.fraction.BigFraction;

        $d9 = virtualinvoke r3.<org.apache.commons.math3.geometry.euclidean.threed.Vector3D: double getZ()>();

        specialinvoke $r35.<org.apache.commons.math3.fraction.BigFraction: void <init>(double)>($d9);

        $r33[1] = $r35;

        $r36 = new org.apache.commons.math3.fraction.BigFraction;

        $d10 = virtualinvoke r4.<org.apache.commons.math3.geometry.euclidean.threed.Vector3D: double getZ()>();

        specialinvoke $r36.<org.apache.commons.math3.fraction.BigFraction: void <init>(double)>($d10);

        $r33[2] = $r36;

        $r37 = new org.apache.commons.math3.fraction.BigFraction;

        $d11 = virtualinvoke r117.<org.apache.commons.math3.geometry.euclidean.threed.Vector3D: double getZ()>();

        specialinvoke $r37.<org.apache.commons.math3.fraction.BigFraction: void <init>(double)>($d11);

        $r33[3] = $r37;

        $r38 = newarray (org.apache.commons.math3.fraction.BigFraction)[4];

        $r40 = $r23[0];

        $r39 = $r23[0];

        $r41 = virtualinvoke $r40.<org.apache.commons.math3.fraction.BigFraction: org.apache.commons.math3.fraction.BigFraction multiply(org.apache.commons.math3.fraction.BigFraction)>($r39);

        $r43 = $r28[0];

        $r42 = $r28[0];

        $r44 = virtualinvoke $r43.<org.apache.commons.math3.fraction.BigFraction: org.apache.commons.math3.fraction.BigFraction multiply(org.apache.commons.math3.fraction.BigFraction)>($r42);

        $r45 = virtualinvoke $r41.<org.apache.commons.math3.fraction.BigFraction: org.apache.commons.math3.fraction.BigFraction add(org.apache.commons.math3.fraction.BigFraction)>($r44);

        $r47 = $r33[0];

        $r46 = $r33[0];

        $r48 = virtualinvoke $r47.<org.apache.commons.math3.fraction.BigFraction: org.apache.commons.math3.fraction.BigFraction multiply(org.apache.commons.math3.fraction.BigFraction)>($r46);

        $r49 = virtualinvoke $r45.<org.apache.commons.math3.fraction.BigFraction: org.apache.commons.math3.fraction.BigFraction add(org.apache.commons.math3.fraction.BigFraction)>($r48);

        $r38[0] = $r49;

        $r51 = $r23[1];

        $r50 = $r23[1];

        $r52 = virtualinvoke $r51.<org.apache.commons.math3.fraction.BigFraction: org.apache.commons.math3.fraction.BigFraction multiply(org.apache.commons.math3.fraction.BigFraction)>($r50);

        $r54 = $r28[1];

        $r53 = $r28[1];

        $r55 = virtualinvoke $r54.<org.apache.commons.math3.fraction.BigFraction: org.apache.commons.math3.fraction.BigFraction multiply(org.apache.commons.math3.fraction.BigFraction)>($r53);

        $r56 = virtualinvoke $r52.<org.apache.commons.math3.fraction.BigFraction: org.apache.commons.math3.fraction.BigFraction add(org.apache.commons.math3.fraction.BigFraction)>($r55);

        $r58 = $r33[1];

        $r57 = $r33[1];

        $r59 = virtualinvoke $r58.<org.apache.commons.math3.fraction.BigFraction: org.apache.commons.math3.fraction.BigFraction multiply(org.apache.commons.math3.fraction.BigFraction)>($r57);

        $r60 = virtualinvoke $r56.<org.apache.commons.math3.fraction.BigFraction: org.apache.commons.math3.fraction.BigFraction add(org.apache.commons.math3.fraction.BigFraction)>($r59);

        $r38[1] = $r60;

        $r62 = $r23[2];

        $r61 = $r23[2];

        $r63 = virtualinvoke $r62.<org.apache.commons.math3.fraction.BigFraction: org.apache.commons.math3.fraction.BigFraction multiply(org.apache.commons.math3.fraction.BigFraction)>($r61);

        $r65 = $r28[2];

        $r64 = $r28[2];

        $r66 = virtualinvoke $r65.<org.apache.commons.math3.fraction.BigFraction: org.apache.commons.math3.fraction.BigFraction multiply(org.apache.commons.math3.fraction.BigFraction)>($r64);

        $r67 = virtualinvoke $r63.<org.apache.commons.math3.fraction.BigFraction: org.apache.commons.math3.fraction.BigFraction add(org.apache.commons.math3.fraction.BigFraction)>($r66);

        $r69 = $r33[2];

        $r68 = $r33[2];

        $r70 = virtualinvoke $r69.<org.apache.commons.math3.fraction.BigFraction: org.apache.commons.math3.fraction.BigFraction multiply(org.apache.commons.math3.fraction.BigFraction)>($r68);

        $r71 = virtualinvoke $r67.<org.apache.commons.math3.fraction.BigFraction: org.apache.commons.math3.fraction.BigFraction add(org.apache.commons.math3.fraction.BigFraction)>($r70);

        $r38[2] = $r71;

        $r73 = $r23[3];

        $r72 = $r23[3];

        $r74 = virtualinvoke $r73.<org.apache.commons.math3.fraction.BigFraction: org.apache.commons.math3.fraction.BigFraction multiply(org.apache.commons.math3.fraction.BigFraction)>($r72);

        $r76 = $r28[3];

        $r75 = $r28[3];

        $r77 = virtualinvoke $r76.<org.apache.commons.math3.fraction.BigFraction: org.apache.commons.math3.fraction.BigFraction multiply(org.apache.commons.math3.fraction.BigFraction)>($r75);

        $r78 = virtualinvoke $r74.<org.apache.commons.math3.fraction.BigFraction: org.apache.commons.math3.fraction.BigFraction add(org.apache.commons.math3.fraction.BigFraction)>($r77);

        $r80 = $r33[3];

        $r79 = $r33[3];

        $r81 = virtualinvoke $r80.<org.apache.commons.math3.fraction.BigFraction: org.apache.commons.math3.fraction.BigFraction multiply(org.apache.commons.math3.fraction.BigFraction)>($r79);

        $r82 = virtualinvoke $r78.<org.apache.commons.math3.fraction.BigFraction: org.apache.commons.math3.fraction.BigFraction add(org.apache.commons.math3.fraction.BigFraction)>($r81);

        $r38[3] = $r82;

        $r83 = specialinvoke r0.<org.apache.commons.math3.geometry.euclidean.threed.SphereGenerator: org.apache.commons.math3.fraction.BigFraction minor(org.apache.commons.math3.fraction.BigFraction[],org.apache.commons.math3.fraction.BigFraction[],org.apache.commons.math3.fraction.BigFraction[])>($r23, $r28, $r33);

        r8 = virtualinvoke $r83.<org.apache.commons.math3.fraction.BigFraction: org.apache.commons.math3.fraction.BigFraction multiply(int)>(2);

        r9 = specialinvoke r0.<org.apache.commons.math3.geometry.euclidean.threed.SphereGenerator: org.apache.commons.math3.fraction.BigFraction minor(org.apache.commons.math3.fraction.BigFraction[],org.apache.commons.math3.fraction.BigFraction[],org.apache.commons.math3.fraction.BigFraction[])>($r38, $r28, $r33);

        r10 = specialinvoke r0.<org.apache.commons.math3.geometry.euclidean.threed.SphereGenerator: org.apache.commons.math3.fraction.BigFraction minor(org.apache.commons.math3.fraction.BigFraction[],org.apache.commons.math3.fraction.BigFraction[],org.apache.commons.math3.fraction.BigFraction[])>($r38, $r23, $r33);

        r11 = specialinvoke r0.<org.apache.commons.math3.geometry.euclidean.threed.SphereGenerator: org.apache.commons.math3.fraction.BigFraction minor(org.apache.commons.math3.fraction.BigFraction[],org.apache.commons.math3.fraction.BigFraction[],org.apache.commons.math3.fraction.BigFraction[])>($r38, $r23, $r28);

        r12 = virtualinvoke r9.<org.apache.commons.math3.fraction.BigFraction: org.apache.commons.math3.fraction.BigFraction divide(org.apache.commons.math3.fraction.BigFraction)>(r8);

        $r84 = virtualinvoke r10.<org.apache.commons.math3.fraction.BigFraction: org.apache.commons.math3.fraction.BigFraction divide(org.apache.commons.math3.fraction.BigFraction)>(r8);

        r13 = virtualinvoke $r84.<org.apache.commons.math3.fraction.BigFraction: org.apache.commons.math3.fraction.BigFraction negate()>();

        r14 = virtualinvoke r11.<org.apache.commons.math3.fraction.BigFraction: org.apache.commons.math3.fraction.BigFraction divide(org.apache.commons.math3.fraction.BigFraction)>(r8);

        $r85 = $r23[0];

        r15 = virtualinvoke $r85.<org.apache.commons.math3.fraction.BigFraction: org.apache.commons.math3.fraction.BigFraction subtract(org.apache.commons.math3.fraction.BigFraction)>(r12);

        $r86 = $r28[0];

        r16 = virtualinvoke $r86.<org.apache.commons.math3.fraction.BigFraction: org.apache.commons.math3.fraction.BigFraction subtract(org.apache.commons.math3.fraction.BigFraction)>(r13);

        $r87 = $r33[0];

        r17 = virtualinvoke $r87.<org.apache.commons.math3.fraction.BigFraction: org.apache.commons.math3.fraction.BigFraction subtract(org.apache.commons.math3.fraction.BigFraction)>(r14);

        $r88 = virtualinvoke r15.<org.apache.commons.math3.fraction.BigFraction: org.apache.commons.math3.fraction.BigFraction multiply(org.apache.commons.math3.fraction.BigFraction)>(r15);

        $r89 = virtualinvoke r16.<org.apache.commons.math3.fraction.BigFraction: org.apache.commons.math3.fraction.BigFraction multiply(org.apache.commons.math3.fraction.BigFraction)>(r16);

        $r90 = virtualinvoke $r88.<org.apache.commons.math3.fraction.BigFraction: org.apache.commons.math3.fraction.BigFraction add(org.apache.commons.math3.fraction.BigFraction)>($r89);

        $r91 = virtualinvoke r17.<org.apache.commons.math3.fraction.BigFraction: org.apache.commons.math3.fraction.BigFraction multiply(org.apache.commons.math3.fraction.BigFraction)>(r17);

        r18 = virtualinvoke $r90.<org.apache.commons.math3.fraction.BigFraction: org.apache.commons.math3.fraction.BigFraction add(org.apache.commons.math3.fraction.BigFraction)>($r91);

        $r92 = new org.apache.commons.math3.geometry.enclosing.EnclosingBall;

        $r93 = new org.apache.commons.math3.geometry.euclidean.threed.Vector3D;

        $d12 = virtualinvoke r12.<org.apache.commons.math3.fraction.BigFraction: double doubleValue()>();

        $d13 = virtualinvoke r13.<org.apache.commons.math3.fraction.BigFraction: double doubleValue()>();

        $d14 = virtualinvoke r14.<org.apache.commons.math3.fraction.BigFraction: double doubleValue()>();

        specialinvoke $r93.<org.apache.commons.math3.geometry.euclidean.threed.Vector3D: void <init>(double,double,double)>($d12, $d13, $d14);

        $d15 = virtualinvoke r18.<org.apache.commons.math3.fraction.BigFraction: double doubleValue()>();

        $d16 = staticinvoke <org.apache.commons.math3.util.FastMath: double sqrt(double)>($d15);

        $r94 = newarray (org.apache.commons.math3.geometry.euclidean.threed.Vector3D)[4];

        $r94[0] = r2;

        $r94[1] = r3;

        $r94[2] = r4;

        $r94[3] = r117;

        specialinvoke $r92.<org.apache.commons.math3.geometry.enclosing.EnclosingBall: void <init>(org.apache.commons.math3.geometry.Point,double,org.apache.commons.math3.geometry.Point[])>($r93, $d16, $r94);

        return $r92;
    }

    private org.apache.commons.math3.fraction.BigFraction minor(org.apache.commons.math3.fraction.BigFraction[], org.apache.commons.math3.fraction.BigFraction[], org.apache.commons.math3.fraction.BigFraction[])
    {
        org.apache.commons.math3.geometry.euclidean.threed.SphereGenerator r0;
        org.apache.commons.math3.fraction.BigFraction[] r1, r2, r3;
        org.apache.commons.math3.fraction.BigFraction $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r25, $r26, $r27, $r28, $r29, $r30, $r31, $r32, $r33, $r34, $r35, $r36, $r37, $r38, $r39, $r40, $r41, $r42, $r43, $r44, $r45, $r46, $r47, $r48, $r49, $r50, $r51, $r52, $r53, $r54, $r55, $r56, $r57, $r58, $r59, $r60, $r61, $r62, $r63, $r64, $r65, $r66, $r67, $r68, $r69, $r70, $r71, $r72, $r73, $r74, $r75, $r76, $r77, $r78, $r79, $r80, $r81, $r82, $r83, $r84, $r85, $r86, $r87, $r88, $r89, $r90, $r91, $r92, $r93, $r94, $r95, $r96, $r97, $r98;

        r0 := @this: org.apache.commons.math3.geometry.euclidean.threed.SphereGenerator;

        r1 := @parameter0: org.apache.commons.math3.fraction.BigFraction[];

        r2 := @parameter1: org.apache.commons.math3.fraction.BigFraction[];

        r3 := @parameter2: org.apache.commons.math3.fraction.BigFraction[];

        $r5 = r2[0];

        $r4 = r3[1];

        $r6 = virtualinvoke $r5.<org.apache.commons.math3.fraction.BigFraction: org.apache.commons.math3.fraction.BigFraction multiply(org.apache.commons.math3.fraction.BigFraction)>($r4);

        $r8 = r1[2];

        $r7 = r1[3];

        $r9 = virtualinvoke $r8.<org.apache.commons.math3.fraction.BigFraction: org.apache.commons.math3.fraction.BigFraction subtract(org.apache.commons.math3.fraction.BigFraction)>($r7);

        $r10 = virtualinvoke $r6.<org.apache.commons.math3.fraction.BigFraction: org.apache.commons.math3.fraction.BigFraction multiply(org.apache.commons.math3.fraction.BigFraction)>($r9);

        $r12 = r2[0];

        $r11 = r3[2];

        $r13 = virtualinvoke $r12.<org.apache.commons.math3.fraction.BigFraction: org.apache.commons.math3.fraction.BigFraction multiply(org.apache.commons.math3.fraction.BigFraction)>($r11);

        $r15 = r1[3];

        $r14 = r1[1];

        $r16 = virtualinvoke $r15.<org.apache.commons.math3.fraction.BigFraction: org.apache.commons.math3.fraction.BigFraction subtract(org.apache.commons.math3.fraction.BigFraction)>($r14);

        $r17 = virtualinvoke $r13.<org.apache.commons.math3.fraction.BigFraction: org.apache.commons.math3.fraction.BigFraction multiply(org.apache.commons.math3.fraction.BigFraction)>($r16);

        $r18 = virtualinvoke $r10.<org.apache.commons.math3.fraction.BigFraction: org.apache.commons.math3.fraction.BigFraction add(org.apache.commons.math3.fraction.BigFraction)>($r17);

        $r20 = r2[0];

        $r19 = r3[3];

        $r21 = virtualinvoke $r20.<org.apache.commons.math3.fraction.BigFraction: org.apache.commons.math3.fraction.BigFraction multiply(org.apache.commons.math3.fraction.BigFraction)>($r19);

        $r23 = r1[1];

        $r22 = r1[2];

        $r24 = virtualinvoke $r23.<org.apache.commons.math3.fraction.BigFraction: org.apache.commons.math3.fraction.BigFraction subtract(org.apache.commons.math3.fraction.BigFraction)>($r22);

        $r25 = virtualinvoke $r21.<org.apache.commons.math3.fraction.BigFraction: org.apache.commons.math3.fraction.BigFraction multiply(org.apache.commons.math3.fraction.BigFraction)>($r24);

        $r26 = virtualinvoke $r18.<org.apache.commons.math3.fraction.BigFraction: org.apache.commons.math3.fraction.BigFraction add(org.apache.commons.math3.fraction.BigFraction)>($r25);

        $r28 = r2[1];

        $r27 = r3[0];

        $r29 = virtualinvoke $r28.<org.apache.commons.math3.fraction.BigFraction: org.apache.commons.math3.fraction.BigFraction multiply(org.apache.commons.math3.fraction.BigFraction)>($r27);

        $r31 = r1[3];

        $r30 = r1[2];

        $r32 = virtualinvoke $r31.<org.apache.commons.math3.fraction.BigFraction: org.apache.commons.math3.fraction.BigFraction subtract(org.apache.commons.math3.fraction.BigFraction)>($r30);

        $r33 = virtualinvoke $r29.<org.apache.commons.math3.fraction.BigFraction: org.apache.commons.math3.fraction.BigFraction multiply(org.apache.commons.math3.fraction.BigFraction)>($r32);

        $r34 = virtualinvoke $r26.<org.apache.commons.math3.fraction.BigFraction: org.apache.commons.math3.fraction.BigFraction add(org.apache.commons.math3.fraction.BigFraction)>($r33);

        $r36 = r2[1];

        $r35 = r3[2];

        $r37 = virtualinvoke $r36.<org.apache.commons.math3.fraction.BigFraction: org.apache.commons.math3.fraction.BigFraction multiply(org.apache.commons.math3.fraction.BigFraction)>($r35);

        $r39 = r1[0];

        $r38 = r1[3];

        $r40 = virtualinvoke $r39.<org.apache.commons.math3.fraction.BigFraction: org.apache.commons.math3.fraction.BigFraction subtract(org.apache.commons.math3.fraction.BigFraction)>($r38);

        $r41 = virtualinvoke $r37.<org.apache.commons.math3.fraction.BigFraction: org.apache.commons.math3.fraction.BigFraction multiply(org.apache.commons.math3.fraction.BigFraction)>($r40);

        $r42 = virtualinvoke $r34.<org.apache.commons.math3.fraction.BigFraction: org.apache.commons.math3.fraction.BigFraction add(org.apache.commons.math3.fraction.BigFraction)>($r41);

        $r44 = r2[1];

        $r43 = r3[3];

        $r45 = virtualinvoke $r44.<org.apache.commons.math3.fraction.BigFraction: org.apache.commons.math3.fraction.BigFraction multiply(org.apache.commons.math3.fraction.BigFraction)>($r43);

        $r47 = r1[2];

        $r46 = r1[0];

        $r48 = virtualinvoke $r47.<org.apache.commons.math3.fraction.BigFraction: org.apache.commons.math3.fraction.BigFraction subtract(org.apache.commons.math3.fraction.BigFraction)>($r46);

        $r49 = virtualinvoke $r45.<org.apache.commons.math3.fraction.BigFraction: org.apache.commons.math3.fraction.BigFraction multiply(org.apache.commons.math3.fraction.BigFraction)>($r48);

        $r50 = virtualinvoke $r42.<org.apache.commons.math3.fraction.BigFraction: org.apache.commons.math3.fraction.BigFraction add(org.apache.commons.math3.fraction.BigFraction)>($r49);

        $r52 = r2[2];

        $r51 = r3[0];

        $r53 = virtualinvoke $r52.<org.apache.commons.math3.fraction.BigFraction: org.apache.commons.math3.fraction.BigFraction multiply(org.apache.commons.math3.fraction.BigFraction)>($r51);

        $r55 = r1[1];

        $r54 = r1[3];

        $r56 = virtualinvoke $r55.<org.apache.commons.math3.fraction.BigFraction: org.apache.commons.math3.fraction.BigFraction subtract(org.apache.commons.math3.fraction.BigFraction)>($r54);

        $r57 = virtualinvoke $r53.<org.apache.commons.math3.fraction.BigFraction: org.apache.commons.math3.fraction.BigFraction multiply(org.apache.commons.math3.fraction.BigFraction)>($r56);

        $r58 = virtualinvoke $r50.<org.apache.commons.math3.fraction.BigFraction: org.apache.commons.math3.fraction.BigFraction add(org.apache.commons.math3.fraction.BigFraction)>($r57);

        $r60 = r2[2];

        $r59 = r3[1];

        $r61 = virtualinvoke $r60.<org.apache.commons.math3.fraction.BigFraction: org.apache.commons.math3.fraction.BigFraction multiply(org.apache.commons.math3.fraction.BigFraction)>($r59);

        $r63 = r1[3];

        $r62 = r1[0];

        $r64 = virtualinvoke $r63.<org.apache.commons.math3.fraction.BigFraction: org.apache.commons.math3.fraction.BigFraction subtract(org.apache.commons.math3.fraction.BigFraction)>($r62);

        $r65 = virtualinvoke $r61.<org.apache.commons.math3.fraction.BigFraction: org.apache.commons.math3.fraction.BigFraction multiply(org.apache.commons.math3.fraction.BigFraction)>($r64);

        $r66 = virtualinvoke $r58.<org.apache.commons.math3.fraction.BigFraction: org.apache.commons.math3.fraction.BigFraction add(org.apache.commons.math3.fraction.BigFraction)>($r65);

        $r68 = r2[2];

        $r67 = r3[3];

        $r69 = virtualinvoke $r68.<org.apache.commons.math3.fraction.BigFraction: org.apache.commons.math3.fraction.BigFraction multiply(org.apache.commons.math3.fraction.BigFraction)>($r67);

        $r71 = r1[0];

        $r70 = r1[1];

        $r72 = virtualinvoke $r71.<org.apache.commons.math3.fraction.BigFraction: org.apache.commons.math3.fraction.BigFraction subtract(org.apache.commons.math3.fraction.BigFraction)>($r70);

        $r73 = virtualinvoke $r69.<org.apache.commons.math3.fraction.BigFraction: org.apache.commons.math3.fraction.BigFraction multiply(org.apache.commons.math3.fraction.BigFraction)>($r72);

        $r74 = virtualinvoke $r66.<org.apache.commons.math3.fraction.BigFraction: org.apache.commons.math3.fraction.BigFraction add(org.apache.commons.math3.fraction.BigFraction)>($r73);

        $r76 = r2[3];

        $r75 = r3[0];

        $r77 = virtualinvoke $r76.<org.apache.commons.math3.fraction.BigFraction: org.apache.commons.math3.fraction.BigFraction multiply(org.apache.commons.math3.fraction.BigFraction)>($r75);

        $r79 = r1[2];

        $r78 = r1[1];

        $r80 = virtualinvoke $r79.<org.apache.commons.math3.fraction.BigFraction: org.apache.commons.math3.fraction.BigFraction subtract(org.apache.commons.math3.fraction.BigFraction)>($r78);

        $r81 = virtualinvoke $r77.<org.apache.commons.math3.fraction.BigFraction: org.apache.commons.math3.fraction.BigFraction multiply(org.apache.commons.math3.fraction.BigFraction)>($r80);

        $r82 = virtualinvoke $r74.<org.apache.commons.math3.fraction.BigFraction: org.apache.commons.math3.fraction.BigFraction add(org.apache.commons.math3.fraction.BigFraction)>($r81);

        $r84 = r2[3];

        $r83 = r3[1];

        $r85 = virtualinvoke $r84.<org.apache.commons.math3.fraction.BigFraction: org.apache.commons.math3.fraction.BigFraction multiply(org.apache.commons.math3.fraction.BigFraction)>($r83);

        $r87 = r1[0];

        $r86 = r1[2];

        $r88 = virtualinvoke $r87.<org.apache.commons.math3.fraction.BigFraction: org.apache.commons.math3.fraction.BigFraction subtract(org.apache.commons.math3.fraction.BigFraction)>($r86);

        $r89 = virtualinvoke $r85.<org.apache.commons.math3.fraction.BigFraction: org.apache.commons.math3.fraction.BigFraction multiply(org.apache.commons.math3.fraction.BigFraction)>($r88);

        $r90 = virtualinvoke $r82.<org.apache.commons.math3.fraction.BigFraction: org.apache.commons.math3.fraction.BigFraction add(org.apache.commons.math3.fraction.BigFraction)>($r89);

        $r92 = r2[3];

        $r91 = r3[2];

        $r93 = virtualinvoke $r92.<org.apache.commons.math3.fraction.BigFraction: org.apache.commons.math3.fraction.BigFraction multiply(org.apache.commons.math3.fraction.BigFraction)>($r91);

        $r95 = r1[1];

        $r94 = r1[0];

        $r96 = virtualinvoke $r95.<org.apache.commons.math3.fraction.BigFraction: org.apache.commons.math3.fraction.BigFraction subtract(org.apache.commons.math3.fraction.BigFraction)>($r94);

        $r97 = virtualinvoke $r93.<org.apache.commons.math3.fraction.BigFraction: org.apache.commons.math3.fraction.BigFraction multiply(org.apache.commons.math3.fraction.BigFraction)>($r96);

        $r98 = virtualinvoke $r90.<org.apache.commons.math3.fraction.BigFraction: org.apache.commons.math3.fraction.BigFraction add(org.apache.commons.math3.fraction.BigFraction)>($r97);

        return $r98;
    }
}
