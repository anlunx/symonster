public class org.apache.commons.math3.stat.inference.OneWayAnova extends java.lang.Object
{

    public void <init>()
    {
        org.apache.commons.math3.stat.inference.OneWayAnova r0;

        r0 := @this: org.apache.commons.math3.stat.inference.OneWayAnova;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public double anovaFValue(java.util.Collection) throws org.apache.commons.math3.exception.NullArgumentException, org.apache.commons.math3.exception.DimensionMismatchException
    {
        org.apache.commons.math3.stat.inference.OneWayAnova r0;
        java.util.Collection r1;
        org.apache.commons.math3.stat.inference.OneWayAnova$AnovaStats r2;
        double $d0;

        r0 := @this: org.apache.commons.math3.stat.inference.OneWayAnova;

        r1 := @parameter0: java.util.Collection;

        r2 = specialinvoke r0.<org.apache.commons.math3.stat.inference.OneWayAnova: org.apache.commons.math3.stat.inference.OneWayAnova$AnovaStats anovaStats(java.util.Collection)>(r1);

        $d0 = staticinvoke <org.apache.commons.math3.stat.inference.OneWayAnova$AnovaStats: double access$000(org.apache.commons.math3.stat.inference.OneWayAnova$AnovaStats)>(r2);

        return $d0;
    }

    public double anovaPValue(java.util.Collection) throws org.apache.commons.math3.exception.NullArgumentException, org.apache.commons.math3.exception.DimensionMismatchException, org.apache.commons.math3.exception.ConvergenceException, org.apache.commons.math3.exception.MaxCountExceededException
    {
        org.apache.commons.math3.stat.inference.OneWayAnova r0;
        java.util.Collection r1;
        org.apache.commons.math3.stat.inference.OneWayAnova$AnovaStats r2;
        org.apache.commons.math3.distribution.FDistribution $r4;
        int $i0, $i1;
        double $d0, $d1, $d2, $d3, $d4;

        r0 := @this: org.apache.commons.math3.stat.inference.OneWayAnova;

        r1 := @parameter0: java.util.Collection;

        r2 = specialinvoke r0.<org.apache.commons.math3.stat.inference.OneWayAnova: org.apache.commons.math3.stat.inference.OneWayAnova$AnovaStats anovaStats(java.util.Collection)>(r1);

        $r4 = new org.apache.commons.math3.distribution.FDistribution;

        $i0 = staticinvoke <org.apache.commons.math3.stat.inference.OneWayAnova$AnovaStats: int access$100(org.apache.commons.math3.stat.inference.OneWayAnova$AnovaStats)>(r2);

        $d0 = (double) $i0;

        $i1 = staticinvoke <org.apache.commons.math3.stat.inference.OneWayAnova$AnovaStats: int access$200(org.apache.commons.math3.stat.inference.OneWayAnova$AnovaStats)>(r2);

        $d1 = (double) $i1;

        specialinvoke $r4.<org.apache.commons.math3.distribution.FDistribution: void <init>(org.apache.commons.math3.random.RandomGenerator,double,double)>(null, $d0, $d1);

        $d2 = staticinvoke <org.apache.commons.math3.stat.inference.OneWayAnova$AnovaStats: double access$000(org.apache.commons.math3.stat.inference.OneWayAnova$AnovaStats)>(r2);

        $d3 = virtualinvoke $r4.<org.apache.commons.math3.distribution.FDistribution: double cumulativeProbability(double)>($d2);

        $d4 = 1.0 - $d3;

        return $d4;
    }

    public double anovaPValue(java.util.Collection, boolean) throws org.apache.commons.math3.exception.NullArgumentException, org.apache.commons.math3.exception.DimensionMismatchException, org.apache.commons.math3.exception.ConvergenceException, org.apache.commons.math3.exception.MaxCountExceededException
    {
        org.apache.commons.math3.stat.inference.OneWayAnova r0;
        java.util.Collection r1;
        boolean z0;
        org.apache.commons.math3.stat.inference.OneWayAnova$AnovaStats r2;
        org.apache.commons.math3.distribution.FDistribution $r4;
        int $i0, $i1;
        double $d0, $d1, $d2, $d3, $d4;

        r0 := @this: org.apache.commons.math3.stat.inference.OneWayAnova;

        r1 := @parameter0: java.util.Collection;

        z0 := @parameter1: boolean;

        r2 = specialinvoke r0.<org.apache.commons.math3.stat.inference.OneWayAnova: org.apache.commons.math3.stat.inference.OneWayAnova$AnovaStats anovaStats(java.util.Collection,boolean)>(r1, z0);

        $r4 = new org.apache.commons.math3.distribution.FDistribution;

        $i0 = staticinvoke <org.apache.commons.math3.stat.inference.OneWayAnova$AnovaStats: int access$100(org.apache.commons.math3.stat.inference.OneWayAnova$AnovaStats)>(r2);

        $d0 = (double) $i0;

        $i1 = staticinvoke <org.apache.commons.math3.stat.inference.OneWayAnova$AnovaStats: int access$200(org.apache.commons.math3.stat.inference.OneWayAnova$AnovaStats)>(r2);

        $d1 = (double) $i1;

        specialinvoke $r4.<org.apache.commons.math3.distribution.FDistribution: void <init>(org.apache.commons.math3.random.RandomGenerator,double,double)>(null, $d0, $d1);

        $d2 = staticinvoke <org.apache.commons.math3.stat.inference.OneWayAnova$AnovaStats: double access$000(org.apache.commons.math3.stat.inference.OneWayAnova$AnovaStats)>(r2);

        $d3 = virtualinvoke $r4.<org.apache.commons.math3.distribution.FDistribution: double cumulativeProbability(double)>($d2);

        $d4 = 1.0 - $d3;

        return $d4;
    }

    private org.apache.commons.math3.stat.inference.OneWayAnova$AnovaStats anovaStats(java.util.Collection) throws org.apache.commons.math3.exception.NullArgumentException, org.apache.commons.math3.exception.DimensionMismatchException
    {
        org.apache.commons.math3.stat.inference.OneWayAnova r0;
        java.util.Collection r1;
        java.util.Iterator r3;
        double[] r4;
        int i0, $i1, i2;
        double d0;
        java.util.ArrayList $r7;
        boolean $z0;
        org.apache.commons.math3.stat.inference.OneWayAnova$AnovaStats $r8;
        java.lang.Object $r9;
        org.apache.commons.math3.stat.descriptive.SummaryStatistics $r10;

        r0 := @this: org.apache.commons.math3.stat.inference.OneWayAnova;

        r1 := @parameter0: java.util.Collection;

        staticinvoke <org.apache.commons.math3.util.MathUtils: void checkNotNull(java.lang.Object)>(r1);

        $r7 = new java.util.ArrayList;

        $i1 = interfaceinvoke r1.<java.util.Collection: int size()>();

        specialinvoke $r7.<java.util.ArrayList: void <init>(int)>($i1);

        r3 = interfaceinvoke r1.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r9 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (double[]) $r9;

        $r10 = new org.apache.commons.math3.stat.descriptive.SummaryStatistics;

        specialinvoke $r10.<org.apache.commons.math3.stat.descriptive.SummaryStatistics: void <init>()>();

        interfaceinvoke $r7.<java.util.Collection: boolean add(java.lang.Object)>($r10);

        i0 = lengthof r4;

        i2 = 0;

     label2:
        if i2 >= i0 goto label3;

        d0 = r4[i2];

        virtualinvoke $r10.<org.apache.commons.math3.stat.descriptive.SummaryStatistics: void addValue(double)>(d0);

        i2 = i2 + 1;

        goto label2;

     label3:
        goto label1;

     label4:
        $r8 = specialinvoke r0.<org.apache.commons.math3.stat.inference.OneWayAnova: org.apache.commons.math3.stat.inference.OneWayAnova$AnovaStats anovaStats(java.util.Collection,boolean)>($r7, 0);

        return $r8;
    }

    public boolean anovaTest(java.util.Collection, double) throws org.apache.commons.math3.exception.NullArgumentException, org.apache.commons.math3.exception.DimensionMismatchException, org.apache.commons.math3.exception.OutOfRangeException, org.apache.commons.math3.exception.ConvergenceException, org.apache.commons.math3.exception.MaxCountExceededException
    {
        org.apache.commons.math3.stat.inference.OneWayAnova r0;
        java.util.Collection r1;
        double d0, $d1;
        byte $b0, $b1, $b2;
        org.apache.commons.math3.exception.OutOfRangeException $r2;
        org.apache.commons.math3.exception.util.LocalizedFormats $r3;
        java.lang.Double $r4, $r6;
        java.lang.Integer $r5;
        boolean $z0;

        r0 := @this: org.apache.commons.math3.stat.inference.OneWayAnova;

        r1 := @parameter0: java.util.Collection;

        d0 := @parameter1: double;

        $b0 = d0 cmpg 0.0;

        if $b0 <= 0 goto label1;

        $b1 = d0 cmpl 0.5;

        if $b1 <= 0 goto label2;

     label1:
        $r2 = new org.apache.commons.math3.exception.OutOfRangeException;

        $r3 = <org.apache.commons.math3.exception.util.LocalizedFormats: org.apache.commons.math3.exception.util.LocalizedFormats OUT_OF_BOUND_SIGNIFICANCE_LEVEL>;

        $r4 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d0);

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        $r6 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(0.5);

        specialinvoke $r2.<org.apache.commons.math3.exception.OutOfRangeException: void <init>(org.apache.commons.math3.exception.util.Localizable,java.lang.Number,java.lang.Number,java.lang.Number)>($r3, $r4, $r5, $r6);

        throw $r2;

     label2:
        $d1 = virtualinvoke r0.<org.apache.commons.math3.stat.inference.OneWayAnova: double anovaPValue(java.util.Collection)>(r1);

        $b2 = $d1 cmpg d0;

        if $b2 >= 0 goto label3;

        $z0 = 1;

        goto label4;

     label3:
        $z0 = 0;

     label4:
        return $z0;
    }

    private org.apache.commons.math3.stat.inference.OneWayAnova$AnovaStats anovaStats(java.util.Collection, boolean) throws org.apache.commons.math3.exception.NullArgumentException, org.apache.commons.math3.exception.DimensionMismatchException
    {
        org.apache.commons.math3.stat.inference.OneWayAnova r0;
        java.util.Collection r1;
        boolean z0, $z1, $z2;
        org.apache.commons.math3.stat.descriptive.SummaryStatistics r2, r11;
        double d0, d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, d10, d11, d12, d13, d14, d15, d16, d17, d18;
        int i0, $i1, $i3, $i4, $i8, $i9, i10, i11, i12;
        org.apache.commons.math3.stat.inference.OneWayAnova$AnovaStats $r3;
        java.lang.Object $r4, $r5;
        long $l2, $l5, $l7;
        byte $b6;
        org.apache.commons.math3.exception.DimensionMismatchException $r6, $r8;
        org.apache.commons.math3.exception.util.LocalizedFormats $r7, $r9;
        java.util.Iterator r10, r12;

        r0 := @this: org.apache.commons.math3.stat.inference.OneWayAnova;

        r1 := @parameter0: java.util.Collection;

        z0 := @parameter1: boolean;

        staticinvoke <org.apache.commons.math3.util.MathUtils: void checkNotNull(java.lang.Object)>(r1);

        if z0 != 0 goto label4;

        $i4 = interfaceinvoke r1.<java.util.Collection: int size()>();

        if $i4 >= 2 goto label1;

        $r8 = new org.apache.commons.math3.exception.DimensionMismatchException;

        $r9 = <org.apache.commons.math3.exception.util.LocalizedFormats: org.apache.commons.math3.exception.util.LocalizedFormats TWO_OR_MORE_CATEGORIES_REQUIRED>;

        $i9 = interfaceinvoke r1.<java.util.Collection: int size()>();

        specialinvoke $r8.<org.apache.commons.math3.exception.DimensionMismatchException: void <init>(org.apache.commons.math3.exception.util.Localizable,int,int)>($r9, $i9, 2);

        throw $r8;

     label1:
        r10 = interfaceinvoke r1.<java.util.Collection: java.util.Iterator iterator()>();

     label2:
        $z1 = interfaceinvoke r10.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label4;

        $r5 = interfaceinvoke r10.<java.util.Iterator: java.lang.Object next()>();

        r11 = (org.apache.commons.math3.stat.descriptive.SummaryStatistics) $r5;

        $l5 = virtualinvoke r11.<org.apache.commons.math3.stat.descriptive.SummaryStatistics: long getN()>();

        $b6 = $l5 cmp 1L;

        if $b6 > 0 goto label3;

        $r6 = new org.apache.commons.math3.exception.DimensionMismatchException;

        $r7 = <org.apache.commons.math3.exception.util.LocalizedFormats: org.apache.commons.math3.exception.util.LocalizedFormats TWO_OR_MORE_VALUES_IN_CATEGORY_REQUIRED>;

        $l7 = virtualinvoke r11.<org.apache.commons.math3.stat.descriptive.SummaryStatistics: long getN()>();

        $i8 = (int) $l7;

        specialinvoke $r6.<org.apache.commons.math3.exception.DimensionMismatchException: void <init>(org.apache.commons.math3.exception.util.Localizable,int,int)>($r7, $i8, 2);

        throw $r6;

     label3:
        goto label2;

     label4:
        i10 = 0;

        d10 = 0.0;

        d11 = 0.0;

        d12 = 0.0;

        i11 = 0;

        r12 = interfaceinvoke r1.<java.util.Collection: java.util.Iterator iterator()>();

     label5:
        $z2 = interfaceinvoke r12.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label6;

        $r4 = interfaceinvoke r12.<java.util.Iterator: java.lang.Object next()>();

        r2 = (org.apache.commons.math3.stat.descriptive.SummaryStatistics) $r4;

        d13 = virtualinvoke r2.<org.apache.commons.math3.stat.descriptive.SummaryStatistics: double getSum()>();

        d14 = virtualinvoke r2.<org.apache.commons.math3.stat.descriptive.SummaryStatistics: double getSumsq()>();

        $l2 = virtualinvoke r2.<org.apache.commons.math3.stat.descriptive.SummaryStatistics: long getN()>();

        i0 = (int) $l2;

        i11 = i11 + i0;

        d11 = d11 + d13;

        d12 = d12 + d14;

        $i3 = i0 - 1;

        i10 = i10 + $i3;

        $d8 = d13 * d13;

        $d7 = (double) i0;

        $d9 = $d8 / $d7;

        d15 = d14 - $d9;

        d10 = d10 + d15;

        goto label5;

     label6:
        $d3 = d11 * d11;

        $d2 = (double) i11;

        $d4 = $d3 / $d2;

        d16 = d12 - $d4;

        d17 = d16 - d10;

        $i1 = interfaceinvoke r1.<java.util.Collection: int size()>();

        i12 = $i1 - 1;

        $d5 = (double) i12;

        d0 = d17 / $d5;

        $d6 = (double) i10;

        d18 = d10 / $d6;

        d1 = d0 / d18;

        $r3 = new org.apache.commons.math3.stat.inference.OneWayAnova$AnovaStats;

        specialinvoke $r3.<org.apache.commons.math3.stat.inference.OneWayAnova$AnovaStats: void <init>(int,int,double,org.apache.commons.math3.stat.inference.OneWayAnova$1)>(i12, i10, d1, null);

        return $r3;
    }
}
