public class com.opengamma.analytics.example.curveconstruction.FunctionExample extends java.lang.Object
{
    static final boolean $assertionsDisabled;

    public void <init>()
    {
        com.opengamma.analytics.example.curveconstruction.FunctionExample r0;

        r0 := @this: com.opengamma.analytics.example.curveconstruction.FunctionExample;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static com.opengamma.analytics.math.function.RealPolynomialFunction1D getFunction()
    {
        double[] $r1;
        com.opengamma.analytics.math.function.RealPolynomialFunction1D $r2;

        $r1 = newarray (double)[4];

        $r1[0] = -125.0;

        $r1[1] = 75.0;

        $r1[2] = -15.0;

        $r1[3] = 1.0;

        $r2 = new com.opengamma.analytics.math.function.RealPolynomialFunction1D;

        specialinvoke $r2.<com.opengamma.analytics.math.function.RealPolynomialFunction1D: void <init>(double[])>($r1);

        return $r2;
    }

    public static void polyDerivativeDemo(java.io.PrintStream)
    {
        java.io.PrintStream r0;
        com.opengamma.analytics.math.function.RealPolynomialFunction1D r1, r2;
        double[] r3;
        boolean $z0;
        java.lang.String $r4;
        java.lang.Double $r5, $r6;
        double $d0;
        byte $b0;
        java.lang.AssertionError $r7;

        r0 := @parameter0: java.io.PrintStream;

        r1 = staticinvoke <com.opengamma.analytics.example.curveconstruction.FunctionExample: com.opengamma.analytics.math.function.RealPolynomialFunction1D getFunction()>();

        $z0 = <com.opengamma.analytics.example.curveconstruction.FunctionExample: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $r5 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(5.0);

        $r6 = virtualinvoke r1.<com.opengamma.analytics.math.function.RealPolynomialFunction1D: java.lang.Double evaluate(java.lang.Double)>($r5);

        $d0 = virtualinvoke $r6.<java.lang.Double: double doubleValue()>();

        $b0 = $d0 cmpl 0.0;

        if $b0 == 0 goto label1;

        $r7 = new java.lang.AssertionError;

        specialinvoke $r7.<java.lang.AssertionError: void <init>()>();

        throw $r7;

     label1:
        r2 = virtualinvoke r1.<com.opengamma.analytics.math.function.RealPolynomialFunction1D: com.opengamma.analytics.math.function.RealPolynomialFunction1D derivative()>();

        r3 = virtualinvoke r2.<com.opengamma.analytics.math.function.RealPolynomialFunction1D: double[] getCoefficients()>();

        $r4 = staticinvoke <java.util.Arrays: java.lang.String toString(double[])>(r3);

        virtualinvoke r0.<java.io.PrintStream: void println(java.lang.String)>($r4);

        return;
    }

    public static void cubicRealRootFindingDemo(java.io.PrintStream)
    {
        java.io.PrintStream r0;
        com.opengamma.analytics.math.function.RealPolynomialFunction1D r1;
        java.lang.Double[] r3;
        com.opengamma.analytics.math.rootfinding.CubicRealRootFinder $r4;
        java.lang.String $r5;

        r0 := @parameter0: java.io.PrintStream;

        r1 = staticinvoke <com.opengamma.analytics.example.curveconstruction.FunctionExample: com.opengamma.analytics.math.function.RealPolynomialFunction1D getFunction()>();

        $r4 = new com.opengamma.analytics.math.rootfinding.CubicRealRootFinder;

        specialinvoke $r4.<com.opengamma.analytics.math.rootfinding.CubicRealRootFinder: void <init>()>();

        r3 = virtualinvoke $r4.<com.opengamma.analytics.math.rootfinding.CubicRealRootFinder: java.lang.Double[] getRoots(com.opengamma.analytics.math.function.RealPolynomialFunction1D)>(r1);

        $r5 = staticinvoke <java.util.Arrays: java.lang.String toString(java.lang.Object[])>(r3);

        virtualinvoke r0.<java.io.PrintStream: void println(java.lang.String)>($r5);

        return;
    }

    public static void brentSingleRootFinderDemo(java.io.PrintStream)
    {
        java.io.PrintStream r0;
        com.opengamma.analytics.math.function.RealPolynomialFunction1D r1;
        java.lang.Double r3, $r5, $r6;
        com.opengamma.analytics.math.rootfinding.BrentSingleRootFinder $r4;

        r0 := @parameter0: java.io.PrintStream;

        r1 = staticinvoke <com.opengamma.analytics.example.curveconstruction.FunctionExample: com.opengamma.analytics.math.function.RealPolynomialFunction1D getFunction()>();

        $r4 = new com.opengamma.analytics.math.rootfinding.BrentSingleRootFinder;

        specialinvoke $r4.<com.opengamma.analytics.math.rootfinding.BrentSingleRootFinder: void <init>()>();

        $r5 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(-10.0);

        $r6 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(10.0);

        r3 = virtualinvoke $r4.<com.opengamma.analytics.math.rootfinding.BrentSingleRootFinder: java.lang.Double getRoot(com.opengamma.analytics.math.function.Function1D,java.lang.Double,java.lang.Double)>(r1, $r5, $r6);

        virtualinvoke r0.<java.io.PrintStream: void println(java.lang.Object)>(r3);

        return;
    }

    public static void brentSingleRootFinderNotBracketingDemo(java.io.PrintStream)
    {
        java.io.PrintStream r0;
        com.opengamma.analytics.math.function.RealPolynomialFunction1D r1;
        com.opengamma.analytics.math.rootfinding.BrentSingleRootFinder $r4;
        java.lang.Double $r5, $r6;
        java.lang.IllegalArgumentException $r8;

        r0 := @parameter0: java.io.PrintStream;

        r1 = staticinvoke <com.opengamma.analytics.example.curveconstruction.FunctionExample: com.opengamma.analytics.math.function.RealPolynomialFunction1D getFunction()>();

        $r4 = new com.opengamma.analytics.math.rootfinding.BrentSingleRootFinder;

        specialinvoke $r4.<com.opengamma.analytics.math.rootfinding.BrentSingleRootFinder: void <init>()>();

     label1:
        virtualinvoke r0.<java.io.PrintStream: void println(java.lang.String)>("Trying to call getRoot with arguments that don\'t bracket the root...");

        $r5 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(-1.0);

        $r6 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(1.0);

        virtualinvoke $r4.<com.opengamma.analytics.math.rootfinding.BrentSingleRootFinder: java.lang.Double getRoot(com.opengamma.analytics.math.function.Function1D,java.lang.Double,java.lang.Double)>(r1, $r5, $r6);

     label2:
        goto label4;

     label3:
        $r8 := @caughtexception;

        virtualinvoke r0.<java.io.PrintStream: void println(java.lang.String)>("IllegalArgumentException called");

     label4:
        return;

        catch java.lang.IllegalArgumentException from label1 to label2 with label3;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;

        $r0 = class "com/opengamma/analytics/example/curveconstruction/FunctionExample";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <com.opengamma.analytics.example.curveconstruction.FunctionExample: boolean $assertionsDisabled> = $z1;

        return;
    }
}
