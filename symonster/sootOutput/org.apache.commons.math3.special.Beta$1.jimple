final class org.apache.commons.math3.special.Beta$1 extends org.apache.commons.math3.util.ContinuedFraction
{
    final double val$b;
    final double val$a;

    void <init>(double, double)
    {
        org.apache.commons.math3.special.Beta$1 r0;
        double d0, d1;

        r0 := @this: org.apache.commons.math3.special.Beta$1;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        r0.<org.apache.commons.math3.special.Beta$1: double val$b> = d0;

        r0.<org.apache.commons.math3.special.Beta$1: double val$a> = d1;

        specialinvoke r0.<org.apache.commons.math3.util.ContinuedFraction: void <init>()>();

        return;
    }

    protected double getB(int, double)
    {
        org.apache.commons.math3.special.Beta$1 r0;
        int i0, $i1;
        double d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21, $d22, $d23, $d24, $d25, $d26, $d27, $d28, $d29, $d30, $d31, $d32, d33, d34, d35;

        r0 := @this: org.apache.commons.math3.special.Beta$1;

        i0 := @parameter0: int;

        d0 := @parameter1: double;

        $i1 = i0 % 2;

        if $i1 != 0 goto label1;

        $d20 = (double) i0;

        d33 = $d20 / 2.0;

        $d21 = r0.<org.apache.commons.math3.special.Beta$1: double val$b>;

        $d22 = $d21 - d33;

        $d23 = d33 * $d22;

        $d32 = $d23 * d0;

        $d25 = r0.<org.apache.commons.math3.special.Beta$1: double val$a>;

        $d24 = 2.0 * d33;

        $d26 = $d25 + $d24;

        $d30 = $d26 - 1.0;

        $d28 = r0.<org.apache.commons.math3.special.Beta$1: double val$a>;

        $d27 = 2.0 * d33;

        $d29 = $d28 + $d27;

        $d31 = $d30 * $d29;

        d34 = $d32 / $d31;

        goto label2;

     label1:
        $d1 = (double) i0;

        $d2 = $d1 - 1.0;

        d35 = $d2 / 2.0;

        $d3 = r0.<org.apache.commons.math3.special.Beta$1: double val$a>;

        $d8 = $d3 + d35;

        $d5 = r0.<org.apache.commons.math3.special.Beta$1: double val$a>;

        $d4 = r0.<org.apache.commons.math3.special.Beta$1: double val$b>;

        $d6 = $d5 + $d4;

        $d7 = $d6 + d35;

        $d9 = $d8 * $d7;

        $d10 = $d9 * d0;

        $d19 = neg $d10;

        $d12 = r0.<org.apache.commons.math3.special.Beta$1: double val$a>;

        $d11 = 2.0 * d35;

        $d17 = $d12 + $d11;

        $d14 = r0.<org.apache.commons.math3.special.Beta$1: double val$a>;

        $d13 = 2.0 * d35;

        $d15 = $d14 + $d13;

        $d16 = $d15 + 1.0;

        $d18 = $d17 * $d16;

        d34 = $d19 / $d18;

     label2:
        return d34;
    }

    protected double getA(int, double)
    {
        org.apache.commons.math3.special.Beta$1 r0;
        int i0;
        double d0;

        r0 := @this: org.apache.commons.math3.special.Beta$1;

        i0 := @parameter0: int;

        d0 := @parameter1: double;

        return 1.0;
    }
}
