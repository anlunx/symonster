public abstract class org.apache.commons.math3.optim.nonlinear.scalar.GradientMultivariateOptimizer extends org.apache.commons.math3.optim.nonlinear.scalar.MultivariateOptimizer
{
    private org.apache.commons.math3.analysis.MultivariateVectorFunction gradient;

    protected void <init>(org.apache.commons.math3.optim.ConvergenceChecker)
    {
        org.apache.commons.math3.optim.nonlinear.scalar.GradientMultivariateOptimizer r0;
        org.apache.commons.math3.optim.ConvergenceChecker r1;

        r0 := @this: org.apache.commons.math3.optim.nonlinear.scalar.GradientMultivariateOptimizer;

        r1 := @parameter0: org.apache.commons.math3.optim.ConvergenceChecker;

        specialinvoke r0.<org.apache.commons.math3.optim.nonlinear.scalar.MultivariateOptimizer: void <init>(org.apache.commons.math3.optim.ConvergenceChecker)>(r1);

        return;
    }

    protected double[] computeObjectiveGradient(double[])
    {
        org.apache.commons.math3.optim.nonlinear.scalar.GradientMultivariateOptimizer r0;
        double[] r1, $r3;
        org.apache.commons.math3.analysis.MultivariateVectorFunction $r2;

        r0 := @this: org.apache.commons.math3.optim.nonlinear.scalar.GradientMultivariateOptimizer;

        r1 := @parameter0: double[];

        $r2 = r0.<org.apache.commons.math3.optim.nonlinear.scalar.GradientMultivariateOptimizer: org.apache.commons.math3.analysis.MultivariateVectorFunction gradient>;

        $r3 = interfaceinvoke $r2.<org.apache.commons.math3.analysis.MultivariateVectorFunction: double[] value(double[])>(r1);

        return $r3;
    }

    public transient org.apache.commons.math3.optim.PointValuePair optimize(org.apache.commons.math3.optim.OptimizationData[]) throws org.apache.commons.math3.exception.TooManyEvaluationsException
    {
        org.apache.commons.math3.optim.nonlinear.scalar.GradientMultivariateOptimizer r0;
        org.apache.commons.math3.optim.OptimizationData[] r1;
        org.apache.commons.math3.optim.PointValuePair $r2;

        r0 := @this: org.apache.commons.math3.optim.nonlinear.scalar.GradientMultivariateOptimizer;

        r1 := @parameter0: org.apache.commons.math3.optim.OptimizationData[];

        $r2 = specialinvoke r0.<org.apache.commons.math3.optim.nonlinear.scalar.MultivariateOptimizer: org.apache.commons.math3.optim.PointValuePair optimize(org.apache.commons.math3.optim.OptimizationData[])>(r1);

        return $r2;
    }

    protected transient void parseOptimizationData(org.apache.commons.math3.optim.OptimizationData[])
    {
        org.apache.commons.math3.optim.nonlinear.scalar.GradientMultivariateOptimizer r0;
        org.apache.commons.math3.optim.OptimizationData[] r1;
        int i0, i1;
        org.apache.commons.math3.optim.OptimizationData r3;
        boolean $z0;
        org.apache.commons.math3.optim.nonlinear.scalar.ObjectiveFunctionGradient $r4;
        org.apache.commons.math3.analysis.MultivariateVectorFunction $r5;

        r0 := @this: org.apache.commons.math3.optim.nonlinear.scalar.GradientMultivariateOptimizer;

        r1 := @parameter0: org.apache.commons.math3.optim.OptimizationData[];

        specialinvoke r0.<org.apache.commons.math3.optim.nonlinear.scalar.MultivariateOptimizer: void parseOptimizationData(org.apache.commons.math3.optim.OptimizationData[])>(r1);

        i0 = lengthof r1;

        i1 = 0;

     label1:
        if i1 >= i0 goto label3;

        r3 = r1[i1];

        $z0 = r3 instanceof org.apache.commons.math3.optim.nonlinear.scalar.ObjectiveFunctionGradient;

        if $z0 == 0 goto label2;

        $r4 = (org.apache.commons.math3.optim.nonlinear.scalar.ObjectiveFunctionGradient) r3;

        $r5 = virtualinvoke $r4.<org.apache.commons.math3.optim.nonlinear.scalar.ObjectiveFunctionGradient: org.apache.commons.math3.analysis.MultivariateVectorFunction getObjectiveFunctionGradient()>();

        r0.<org.apache.commons.math3.optim.nonlinear.scalar.GradientMultivariateOptimizer: org.apache.commons.math3.analysis.MultivariateVectorFunction gradient> = $r5;

        goto label3;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return;
    }

    public volatile java.lang.Object optimize(org.apache.commons.math3.optim.OptimizationData[])
    {
        org.apache.commons.math3.optim.nonlinear.scalar.GradientMultivariateOptimizer r0;
        org.apache.commons.math3.optim.OptimizationData[] r1;
        org.apache.commons.math3.optim.PointValuePair $r2;

        r0 := @this: org.apache.commons.math3.optim.nonlinear.scalar.GradientMultivariateOptimizer;

        r1 := @parameter0: org.apache.commons.math3.optim.OptimizationData[];

        $r2 = virtualinvoke r0.<org.apache.commons.math3.optim.nonlinear.scalar.GradientMultivariateOptimizer: org.apache.commons.math3.optim.PointValuePair optimize(org.apache.commons.math3.optim.OptimizationData[])>(r1);

        return $r2;
    }
}
