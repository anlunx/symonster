public final class com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionCashFixedCompoundedONCompoundedBlackMethod extends java.lang.Object implements com.opengamma.analytics.financial.interestrate.method.PricingMethod
{
    private static final com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionCashFixedCompoundedONCompoundedBlackMethod INSTANCE;
    private static final com.opengamma.analytics.financial.interestrate.PresentValueCurveSensitivityCalculator PV_SENSITIVITY_CALCULATOR;
    private static final com.opengamma.analytics.financial.interestrate.PresentValueCalculator PVC;
    private static final com.opengamma.analytics.financial.interestrate.swap.method.SwapFixedCompoundingONCompoundingDiscountingMethod METHOD_SWAP;
    private static final com.opengamma.analytics.financial.interestrate.ParRateCalculator PRC;

    public static com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionCashFixedCompoundedONCompoundedBlackMethod getInstance()
    {
        com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionCashFixedCompoundedONCompoundedBlackMethod $r0;

        $r0 = <com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionCashFixedCompoundedONCompoundedBlackMethod: com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionCashFixedCompoundedONCompoundedBlackMethod INSTANCE>;

        return $r0;
    }

    private void <init>()
    {
        com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionCashFixedCompoundedONCompoundedBlackMethod r0;

        r0 := @this: com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionCashFixedCompoundedONCompoundedBlackMethod;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public com.opengamma.util.money.CurrencyAmount presentValue(com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionCashFixedCompoundedONCompounded, com.opengamma.analytics.financial.model.option.definition.YieldCurveWithBlackSwaptionBundle)
    {
        com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionCashFixedCompoundedONCompoundedBlackMethod r0;
        com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionCashFixedCompoundedONCompounded r1;
        com.opengamma.analytics.financial.model.option.definition.YieldCurveWithBlackSwaptionBundle r2;

        r0 := @this: com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionCashFixedCompoundedONCompoundedBlackMethod;

        r1 := @parameter0: com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionCashFixedCompoundedONCompounded;

        r2 := @parameter1: com.opengamma.analytics.financial.model.option.definition.YieldCurveWithBlackSwaptionBundle;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>(0, "Method not implemented");

        return null;
    }

    public com.opengamma.util.money.CurrencyAmount presentValue(com.opengamma.analytics.financial.interestrate.InstrumentDerivative, com.opengamma.analytics.financial.interestrate.YieldCurveBundle)
    {
        com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionCashFixedCompoundedONCompoundedBlackMethod r0;
        com.opengamma.analytics.financial.interestrate.InstrumentDerivative r1;
        com.opengamma.analytics.financial.interestrate.YieldCurveBundle r2;
        boolean $z0, $z1;
        com.opengamma.util.money.CurrencyAmount $r3;

        r0 := @this: com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionCashFixedCompoundedONCompoundedBlackMethod;

        r1 := @parameter0: com.opengamma.analytics.financial.interestrate.InstrumentDerivative;

        r2 := @parameter1: com.opengamma.analytics.financial.interestrate.YieldCurveBundle;

        $z0 = r1 instanceof com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionCashFixedIbor;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z0, "Physical delivery swaption");

        $z1 = r2 instanceof com.opengamma.analytics.financial.model.option.definition.YieldCurveWithBlackSwaptionBundle;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z1, "Bundle should contain Black Swaption data");

        $r3 = virtualinvoke r0.<com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionCashFixedCompoundedONCompoundedBlackMethod: com.opengamma.util.money.CurrencyAmount presentValue(com.opengamma.analytics.financial.interestrate.InstrumentDerivative,com.opengamma.analytics.financial.interestrate.YieldCurveBundle)>(r1, r2);

        return $r3;
    }

    public com.opengamma.analytics.financial.interestrate.InterestRateCurveSensitivity presentValueCurveSensitivity(com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionCashFixedCompoundedONCompounded, com.opengamma.analytics.financial.model.option.definition.YieldCurveWithBlackSwaptionBundle)
    {
        com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionCashFixedCompoundedONCompoundedBlackMethod r0;
        com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionCashFixedCompoundedONCompounded r1;
        com.opengamma.analytics.financial.model.option.definition.YieldCurveWithBlackSwaptionBundle r2;

        r0 := @this: com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionCashFixedCompoundedONCompoundedBlackMethod;

        r1 := @parameter0: com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionCashFixedCompoundedONCompounded;

        r2 := @parameter1: com.opengamma.analytics.financial.model.option.definition.YieldCurveWithBlackSwaptionBundle;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>(0, "Method not implemented");

        return null;
    }

    public com.opengamma.analytics.financial.interestrate.sensitivity.PresentValueSwaptionSurfaceSensitivity presentValueBlackSensitivity(com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionCashFixedCompoundedONCompounded, com.opengamma.analytics.financial.model.option.definition.YieldCurveWithBlackSwaptionBundle)
    {
        com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionCashFixedCompoundedONCompoundedBlackMethod r0;
        com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionCashFixedCompoundedONCompounded r1;
        com.opengamma.analytics.financial.model.option.definition.YieldCurveWithBlackSwaptionBundle r2;

        r0 := @this: com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionCashFixedCompoundedONCompoundedBlackMethod;

        r1 := @parameter0: com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionCashFixedCompoundedONCompounded;

        r2 := @parameter1: com.opengamma.analytics.financial.model.option.definition.YieldCurveWithBlackSwaptionBundle;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>(0, "Method not implemented");

        return null;
    }

    public double impliedVolatility(com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionCashFixedCompoundedONCompounded, com.opengamma.analytics.financial.interestrate.YieldCurveBundle)
    {
        com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionCashFixedCompoundedONCompoundedBlackMethod r0;
        com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionCashFixedCompoundedONCompounded r1;
        com.opengamma.analytics.financial.interestrate.YieldCurveBundle r2;
        com.opengamma.analytics.financial.model.option.definition.YieldCurveWithBlackSwaptionBundle r3;
        double d0, d1, $d2;
        boolean $z0;
        com.opengamma.analytics.financial.model.option.parameters.BlackFlatSwaptionParameters $r6;

        r0 := @this: com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionCashFixedCompoundedONCompoundedBlackMethod;

        r1 := @parameter0: com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionCashFixedCompoundedONCompounded;

        r2 := @parameter1: com.opengamma.analytics.financial.interestrate.YieldCurveBundle;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, "Curves");

        $z0 = r2 instanceof com.opengamma.analytics.financial.model.option.definition.YieldCurveWithBlackSwaptionBundle;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z0, "Yield curve bundle should contain Black swaption data");

        r3 = (com.opengamma.analytics.financial.model.option.definition.YieldCurveWithBlackSwaptionBundle) r2;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "Forex option");

        d0 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionCashFixedCompoundedONCompounded: double getMaturityTime()>();

        $r6 = virtualinvoke r3.<com.opengamma.analytics.financial.model.option.definition.YieldCurveWithBlackSwaptionBundle: com.opengamma.analytics.financial.model.option.parameters.BlackFlatSwaptionParameters getBlackParameters()>();

        $d2 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionCashFixedCompoundedONCompounded: double getTimeToExpiry()>();

        d1 = virtualinvoke $r6.<com.opengamma.analytics.financial.model.option.parameters.BlackFlatSwaptionParameters: double getVolatility(double,double)>($d2, d0);

        return d1;
    }

    static void <clinit>()
    {
        com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionCashFixedCompoundedONCompoundedBlackMethod $r0;
        com.opengamma.analytics.financial.interestrate.PresentValueCurveSensitivityCalculator $r1;
        com.opengamma.analytics.financial.interestrate.PresentValueCalculator $r2;
        com.opengamma.analytics.financial.interestrate.swap.method.SwapFixedCompoundingONCompoundingDiscountingMethod $r3;
        com.opengamma.analytics.financial.interestrate.ParRateCalculator $r4;

        $r0 = new com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionCashFixedCompoundedONCompoundedBlackMethod;

        specialinvoke $r0.<com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionCashFixedCompoundedONCompoundedBlackMethod: void <init>()>();

        <com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionCashFixedCompoundedONCompoundedBlackMethod: com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionCashFixedCompoundedONCompoundedBlackMethod INSTANCE> = $r0;

        $r1 = staticinvoke <com.opengamma.analytics.financial.interestrate.PresentValueCurveSensitivityCalculator: com.opengamma.analytics.financial.interestrate.PresentValueCurveSensitivityCalculator getInstance()>();

        <com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionCashFixedCompoundedONCompoundedBlackMethod: com.opengamma.analytics.financial.interestrate.PresentValueCurveSensitivityCalculator PV_SENSITIVITY_CALCULATOR> = $r1;

        $r2 = staticinvoke <com.opengamma.analytics.financial.interestrate.PresentValueCalculator: com.opengamma.analytics.financial.interestrate.PresentValueCalculator getInstance()>();

        <com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionCashFixedCompoundedONCompoundedBlackMethod: com.opengamma.analytics.financial.interestrate.PresentValueCalculator PVC> = $r2;

        $r3 = staticinvoke <com.opengamma.analytics.financial.interestrate.swap.method.SwapFixedCompoundingONCompoundingDiscountingMethod: com.opengamma.analytics.financial.interestrate.swap.method.SwapFixedCompoundingONCompoundingDiscountingMethod getInstance()>();

        <com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionCashFixedCompoundedONCompoundedBlackMethod: com.opengamma.analytics.financial.interestrate.swap.method.SwapFixedCompoundingONCompoundingDiscountingMethod METHOD_SWAP> = $r3;

        $r4 = staticinvoke <com.opengamma.analytics.financial.interestrate.ParRateCalculator: com.opengamma.analytics.financial.interestrate.ParRateCalculator getInstance()>();

        <com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionCashFixedCompoundedONCompoundedBlackMethod: com.opengamma.analytics.financial.interestrate.ParRateCalculator PRC> = $r4;

        return;
    }
}
