public class org.apache.commons.math3.stat.inference.MannWhitneyUTest extends java.lang.Object
{
    private org.apache.commons.math3.stat.ranking.NaturalRanking naturalRanking;

    public void <init>()
    {
        org.apache.commons.math3.stat.inference.MannWhitneyUTest r0;
        org.apache.commons.math3.stat.ranking.NaturalRanking $r1;
        org.apache.commons.math3.stat.ranking.TiesStrategy $r2;
        org.apache.commons.math3.stat.ranking.NaNStrategy $r3;

        r0 := @this: org.apache.commons.math3.stat.inference.MannWhitneyUTest;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new org.apache.commons.math3.stat.ranking.NaturalRanking;

        $r3 = <org.apache.commons.math3.stat.ranking.NaNStrategy: org.apache.commons.math3.stat.ranking.NaNStrategy FIXED>;

        $r2 = <org.apache.commons.math3.stat.ranking.TiesStrategy: org.apache.commons.math3.stat.ranking.TiesStrategy AVERAGE>;

        specialinvoke $r1.<org.apache.commons.math3.stat.ranking.NaturalRanking: void <init>(org.apache.commons.math3.stat.ranking.NaNStrategy,org.apache.commons.math3.stat.ranking.TiesStrategy)>($r3, $r2);

        r0.<org.apache.commons.math3.stat.inference.MannWhitneyUTest: org.apache.commons.math3.stat.ranking.NaturalRanking naturalRanking> = $r1;

        return;
    }

    public void <init>(org.apache.commons.math3.stat.ranking.NaNStrategy, org.apache.commons.math3.stat.ranking.TiesStrategy)
    {
        org.apache.commons.math3.stat.inference.MannWhitneyUTest r0;
        org.apache.commons.math3.stat.ranking.NaNStrategy r1;
        org.apache.commons.math3.stat.ranking.TiesStrategy r2;
        org.apache.commons.math3.stat.ranking.NaturalRanking $r3;

        r0 := @this: org.apache.commons.math3.stat.inference.MannWhitneyUTest;

        r1 := @parameter0: org.apache.commons.math3.stat.ranking.NaNStrategy;

        r2 := @parameter1: org.apache.commons.math3.stat.ranking.TiesStrategy;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r3 = new org.apache.commons.math3.stat.ranking.NaturalRanking;

        specialinvoke $r3.<org.apache.commons.math3.stat.ranking.NaturalRanking: void <init>(org.apache.commons.math3.stat.ranking.NaNStrategy,org.apache.commons.math3.stat.ranking.TiesStrategy)>(r1, r2);

        r0.<org.apache.commons.math3.stat.inference.MannWhitneyUTest: org.apache.commons.math3.stat.ranking.NaturalRanking naturalRanking> = $r3;

        return;
    }

    private void ensureDataConformance(double[], double[]) throws org.apache.commons.math3.exception.NullArgumentException, org.apache.commons.math3.exception.NoDataException
    {
        org.apache.commons.math3.stat.inference.MannWhitneyUTest r0;
        double[] r1, r2;
        org.apache.commons.math3.exception.NullArgumentException $r3;
        int $i0, $i1;
        org.apache.commons.math3.exception.NoDataException $r4;

        r0 := @this: org.apache.commons.math3.stat.inference.MannWhitneyUTest;

        r1 := @parameter0: double[];

        r2 := @parameter1: double[];

        if r1 == null goto label1;

        if r2 != null goto label2;

     label1:
        $r3 = new org.apache.commons.math3.exception.NullArgumentException;

        specialinvoke $r3.<org.apache.commons.math3.exception.NullArgumentException: void <init>()>();

        throw $r3;

     label2:
        $i0 = lengthof r1;

        if $i0 == 0 goto label3;

        $i1 = lengthof r2;

        if $i1 != 0 goto label4;

     label3:
        $r4 = new org.apache.commons.math3.exception.NoDataException;

        specialinvoke $r4.<org.apache.commons.math3.exception.NoDataException: void <init>()>();

        throw $r4;

     label4:
        return;
    }

    private double[] concatenateSamples(double[], double[])
    {
        org.apache.commons.math3.stat.inference.MannWhitneyUTest r0;
        double[] r1, r2, r3;
        int $i0, $i1, $i2, $i3, $i4, $i5;

        r0 := @this: org.apache.commons.math3.stat.inference.MannWhitneyUTest;

        r1 := @parameter0: double[];

        r2 := @parameter1: double[];

        $i1 = lengthof r1;

        $i0 = lengthof r2;

        $i2 = $i1 + $i0;

        r3 = newarray (double)[$i2];

        $i3 = lengthof r1;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, 0, r3, 0, $i3);

        $i5 = lengthof r1;

        $i4 = lengthof r2;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r2, 0, r3, $i5, $i4);

        return r3;
    }

    public double mannWhitneyU(double[], double[]) throws org.apache.commons.math3.exception.NullArgumentException, org.apache.commons.math3.exception.NoDataException
    {
        org.apache.commons.math3.stat.inference.MannWhitneyUTest r0;
        double[] r1, r2, r3, r4;
        double d0, $d1, $d2, $d3, $d4, d5, d6;
        org.apache.commons.math3.stat.ranking.NaturalRanking $r5;
        int $i0, $i1, $i2, $i3, $i8, $i9, i13;
        long $l4, $l5, $l6, $l7, $l10, $l11, $l12;

        r0 := @this: org.apache.commons.math3.stat.inference.MannWhitneyUTest;

        r1 := @parameter0: double[];

        r2 := @parameter1: double[];

        specialinvoke r0.<org.apache.commons.math3.stat.inference.MannWhitneyUTest: void ensureDataConformance(double[],double[])>(r1, r2);

        r3 = specialinvoke r0.<org.apache.commons.math3.stat.inference.MannWhitneyUTest: double[] concatenateSamples(double[],double[])>(r1, r2);

        $r5 = r0.<org.apache.commons.math3.stat.inference.MannWhitneyUTest: org.apache.commons.math3.stat.ranking.NaturalRanking naturalRanking>;

        r4 = virtualinvoke $r5.<org.apache.commons.math3.stat.ranking.NaturalRanking: double[] rank(double[])>(r3);

        d5 = 0.0;

        i13 = 0;

     label1:
        $i0 = lengthof r1;

        if i13 >= $i0 goto label2;

        $d4 = r4[i13];

        d5 = d5 + $d4;

        i13 = i13 + 1;

        goto label1;

     label2:
        $i1 = lengthof r1;

        $l5 = (long) $i1;

        $i2 = lengthof r1;

        $i3 = $i2 + 1;

        $l4 = (long) $i3;

        $l6 = $l5 * $l4;

        $l7 = $l6 / 2L;

        $d1 = (double) $l7;

        d6 = d5 - $d1;

        $i8 = lengthof r1;

        $l11 = (long) $i8;

        $i9 = lengthof r2;

        $l10 = (long) $i9;

        $l12 = $l11 * $l10;

        $d2 = (double) $l12;

        d0 = $d2 - d6;

        $d3 = staticinvoke <org.apache.commons.math3.util.FastMath: double max(double,double)>(d6, d0);

        return $d3;
    }

    private double calculateAsymptoticPValue(double, int, int) throws org.apache.commons.math3.exception.ConvergenceException, org.apache.commons.math3.exception.MaxCountExceededException
    {
        org.apache.commons.math3.stat.inference.MannWhitneyUTest r0;
        double d0, d1, d2, d3, $d4, $d5, $d6, $d7, $d8, $d9;
        int i0, i1, $i5, $i6;
        long l2, $l3, $l4, $l7, $l8;
        org.apache.commons.math3.distribution.NormalDistribution $r2;

        r0 := @this: org.apache.commons.math3.stat.inference.MannWhitneyUTest;

        d0 := @parameter0: double;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $l4 = (long) i0;

        $l3 = (long) i1;

        l2 = $l4 * $l3;

        $d4 = (double) l2;

        d1 = $d4 / 2.0;

        $i5 = i0 + i1;

        $i6 = $i5 + 1;

        $l7 = (long) $i6;

        $l8 = l2 * $l7;

        $d5 = (double) $l8;

        d2 = $d5 / 12.0;

        $d6 = d0 - d1;

        $d7 = staticinvoke <org.apache.commons.math3.util.FastMath: double sqrt(double)>(d2);

        d3 = $d6 / $d7;

        $r2 = new org.apache.commons.math3.distribution.NormalDistribution;

        specialinvoke $r2.<org.apache.commons.math3.distribution.NormalDistribution: void <init>(org.apache.commons.math3.random.RandomGenerator,double,double)>(null, 0.0, 1.0);

        $d8 = virtualinvoke $r2.<org.apache.commons.math3.distribution.NormalDistribution: double cumulativeProbability(double)>(d3);

        $d9 = 2.0 * $d8;

        return $d9;
    }

    public double mannWhitneyUTest(double[], double[]) throws org.apache.commons.math3.exception.NullArgumentException, org.apache.commons.math3.exception.NoDataException, org.apache.commons.math3.exception.ConvergenceException, org.apache.commons.math3.exception.MaxCountExceededException
    {
        org.apache.commons.math3.stat.inference.MannWhitneyUTest r0;
        double[] r1, r2;
        double d0, d1, $d2, $d3;
        int $i0, $i1, $i5, $i6;
        long $l2, $l3, $l4;

        r0 := @this: org.apache.commons.math3.stat.inference.MannWhitneyUTest;

        r1 := @parameter0: double[];

        r2 := @parameter1: double[];

        specialinvoke r0.<org.apache.commons.math3.stat.inference.MannWhitneyUTest: void ensureDataConformance(double[],double[])>(r1, r2);

        d0 = virtualinvoke r0.<org.apache.commons.math3.stat.inference.MannWhitneyUTest: double mannWhitneyU(double[],double[])>(r1, r2);

        $i0 = lengthof r1;

        $l3 = (long) $i0;

        $i1 = lengthof r2;

        $l2 = (long) $i1;

        $l4 = $l3 * $l2;

        $d2 = (double) $l4;

        d1 = $d2 - d0;

        $i6 = lengthof r1;

        $i5 = lengthof r2;

        $d3 = specialinvoke r0.<org.apache.commons.math3.stat.inference.MannWhitneyUTest: double calculateAsymptoticPValue(double,int,int)>(d1, $i6, $i5);

        return $d3;
    }
}
