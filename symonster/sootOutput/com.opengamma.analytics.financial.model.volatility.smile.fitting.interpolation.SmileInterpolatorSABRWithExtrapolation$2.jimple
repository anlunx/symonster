class com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolatorSABRWithExtrapolation$2 extends com.opengamma.analytics.math.function.Function1D
{
    final double val$cutOffStrikeLow;
    final com.opengamma.analytics.math.function.Function1D val$extrapFunc;
    final double val$cutOffStrikeHigh;
    final com.opengamma.analytics.math.function.Function1D val$interpFunc;
    final com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolatorSABRWithExtrapolation this$0;

    void <init>(com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolatorSABRWithExtrapolation, double, com.opengamma.analytics.math.function.Function1D, double, com.opengamma.analytics.math.function.Function1D)
    {
        com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolatorSABRWithExtrapolation$2 r0;
        com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolatorSABRWithExtrapolation r1;
        double d0, d1;
        com.opengamma.analytics.math.function.Function1D r2, r3;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolatorSABRWithExtrapolation$2;

        r1 := @parameter0: com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolatorSABRWithExtrapolation;

        d0 := @parameter1: double;

        r2 := @parameter2: com.opengamma.analytics.math.function.Function1D;

        d1 := @parameter3: double;

        r3 := @parameter4: com.opengamma.analytics.math.function.Function1D;

        r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolatorSABRWithExtrapolation$2: com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolatorSABRWithExtrapolation this$0> = r1;

        r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolatorSABRWithExtrapolation$2: double val$cutOffStrikeLow> = d0;

        r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolatorSABRWithExtrapolation$2: com.opengamma.analytics.math.function.Function1D val$extrapFunc> = r2;

        r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolatorSABRWithExtrapolation$2: double val$cutOffStrikeHigh> = d1;

        r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolatorSABRWithExtrapolation$2: com.opengamma.analytics.math.function.Function1D val$interpFunc> = r3;

        specialinvoke r0.<com.opengamma.analytics.math.function.Function1D: void <init>()>();

        return;
    }

    public java.lang.Double evaluate(java.lang.Double)
    {
        com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolatorSABRWithExtrapolation$2 r0;
        java.lang.Double r1, $r4, $r7, $r10;
        double $d0, $d2, $d3, $d4, $d5;
        byte $b0, $b1;
        com.opengamma.analytics.math.function.Function1D $r2, $r5, $r8;
        java.lang.Object $r3, $r6, $r9;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolatorSABRWithExtrapolation$2;

        r1 := @parameter0: java.lang.Double;

        $d0 = virtualinvoke r1.<java.lang.Double: double doubleValue()>();

        staticinvoke <com.opengamma.util.ArgumentChecker: double notNegative(double,java.lang.String)>($d0, "strike");

        $d2 = virtualinvoke r1.<java.lang.Double: double doubleValue()>();

        $d3 = r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolatorSABRWithExtrapolation$2: double val$cutOffStrikeLow>;

        $b0 = $d2 cmpg $d3;

        if $b0 >= 0 goto label1;

        $r8 = r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolatorSABRWithExtrapolation$2: com.opengamma.analytics.math.function.Function1D val$extrapFunc>;

        $r9 = virtualinvoke $r8.<com.opengamma.analytics.math.function.Function1D: java.lang.Object evaluate(java.lang.Object)>(r1);

        $r10 = (java.lang.Double) $r9;

        return $r10;

     label1:
        $d4 = virtualinvoke r1.<java.lang.Double: double doubleValue()>();

        $d5 = r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolatorSABRWithExtrapolation$2: double val$cutOffStrikeHigh>;

        $b1 = $d4 cmpl $d5;

        if $b1 <= 0 goto label2;

        $r5 = r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolatorSABRWithExtrapolation$2: com.opengamma.analytics.math.function.Function1D val$extrapFunc>;

        $r6 = virtualinvoke $r5.<com.opengamma.analytics.math.function.Function1D: java.lang.Object evaluate(java.lang.Object)>(r1);

        $r7 = (java.lang.Double) $r6;

        return $r7;

     label2:
        $r2 = r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolatorSABRWithExtrapolation$2: com.opengamma.analytics.math.function.Function1D val$interpFunc>;

        $r3 = virtualinvoke $r2.<com.opengamma.analytics.math.function.Function1D: java.lang.Object evaluate(java.lang.Object)>(r1);

        $r4 = (java.lang.Double) $r3;

        return $r4;
    }

    public volatile java.lang.Object evaluate(java.lang.Object)
    {
        com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolatorSABRWithExtrapolation$2 r0;
        java.lang.Object r1;
        java.lang.Double $r2, $r3;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolatorSABRWithExtrapolation$2;

        r1 := @parameter0: java.lang.Object;

        $r2 = (java.lang.Double) r1;

        $r3 = virtualinvoke r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolatorSABRWithExtrapolation$2: java.lang.Double evaluate(java.lang.Double)>($r2);

        return $r3;
    }
}
