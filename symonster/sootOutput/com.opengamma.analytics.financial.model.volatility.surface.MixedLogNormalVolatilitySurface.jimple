public class com.opengamma.analytics.financial.model.volatility.surface.MixedLogNormalVolatilitySurface extends java.lang.Object
{
    private static final com.opengamma.analytics.math.statistics.distribution.ProbabilityDistribution NORMAL;

    public void <init>()
    {
        com.opengamma.analytics.financial.model.volatility.surface.MixedLogNormalVolatilitySurface r0;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.surface.MixedLogNormalVolatilitySurface;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static com.opengamma.analytics.financial.model.volatility.surface.PriceSurface getPriceSurface(com.opengamma.analytics.financial.model.interestrate.curve.ForwardCurve, com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve, com.opengamma.analytics.financial.model.volatility.smile.function.MultiHorizonMixedLogNormalModelData)
    {
        com.opengamma.analytics.financial.model.interestrate.curve.ForwardCurve r0;
        com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve r1;
        com.opengamma.analytics.financial.model.volatility.smile.function.MultiHorizonMixedLogNormalModelData r2;
        double[] r3, r4, r5;
        int i0, i1;
        com.opengamma.analytics.financial.model.volatility.surface.MixedLogNormalVolatilitySurface$1 $r9;
        com.opengamma.analytics.financial.model.volatility.surface.PriceSurface $r10;
        com.opengamma.analytics.math.surface.FunctionalDoublesSurface $r11;
        double $d1, $d2, $d3, d4;

        r0 := @parameter0: com.opengamma.analytics.financial.model.interestrate.curve.ForwardCurve;

        r1 := @parameter1: com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve;

        r2 := @parameter2: com.opengamma.analytics.financial.model.volatility.smile.function.MultiHorizonMixedLogNormalModelData;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r0, "null fwdCurve");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, "null data");

        r3 = virtualinvoke r2.<com.opengamma.analytics.financial.model.volatility.smile.function.MultiHorizonMixedLogNormalModelData: double[] getWeights()>();

        r4 = virtualinvoke r2.<com.opengamma.analytics.financial.model.volatility.smile.function.MultiHorizonMixedLogNormalModelData: double[] getVolatilities()>();

        r5 = virtualinvoke r2.<com.opengamma.analytics.financial.model.volatility.smile.function.MultiHorizonMixedLogNormalModelData: double[] getMus()>();

        i0 = lengthof r3;

        d4 = 0.0;

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        $d2 = r3[i1];

        $d1 = r4[i1];

        $d3 = $d2 * $d1;

        d4 = d4 + $d3;

        i1 = i1 + 1;

        goto label1;

     label2:
        $r9 = new com.opengamma.analytics.financial.model.volatility.surface.MixedLogNormalVolatilitySurface$1;

        specialinvoke $r9.<com.opengamma.analytics.financial.model.volatility.surface.MixedLogNormalVolatilitySurface$1: void <init>(com.opengamma.analytics.financial.model.interestrate.curve.ForwardCurve,double,int,double[],double[],double[],com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve)>(r0, d4, i0, r3, r5, r4, r1);

        $r10 = new com.opengamma.analytics.financial.model.volatility.surface.PriceSurface;

        $r11 = staticinvoke <com.opengamma.analytics.math.surface.FunctionalDoublesSurface: com.opengamma.analytics.math.surface.FunctionalDoublesSurface 'from'(com.opengamma.analytics.math.function.Function)>($r9);

        specialinvoke $r10.<com.opengamma.analytics.financial.model.volatility.surface.PriceSurface: void <init>(com.opengamma.analytics.math.surface.Surface)>($r11);

        return $r10;
    }

    public static com.opengamma.analytics.financial.model.volatility.surface.BlackVolatilitySurfaceStrike getImpliedVolatilitySurface(com.opengamma.analytics.financial.model.interestrate.curve.ForwardCurve, com.opengamma.analytics.financial.model.volatility.smile.function.MultiHorizonMixedLogNormalModelData)
    {
        com.opengamma.analytics.financial.model.interestrate.curve.ForwardCurve r0;
        com.opengamma.analytics.financial.model.volatility.smile.function.MultiHorizonMixedLogNormalModelData r1;
        double[] r2, r3, r4;
        int i0, i1;
        com.opengamma.analytics.financial.model.volatility.surface.MixedLogNormalVolatilitySurface$2 $r8;
        com.opengamma.analytics.financial.model.volatility.surface.BlackVolatilitySurfaceStrike $r9;
        com.opengamma.analytics.math.surface.FunctionalDoublesSurface $r10;
        double $d1, $d2, $d3, d4;

        r0 := @parameter0: com.opengamma.analytics.financial.model.interestrate.curve.ForwardCurve;

        r1 := @parameter1: com.opengamma.analytics.financial.model.volatility.smile.function.MultiHorizonMixedLogNormalModelData;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r0, "null fwdCurve");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "null data");

        r2 = virtualinvoke r1.<com.opengamma.analytics.financial.model.volatility.smile.function.MultiHorizonMixedLogNormalModelData: double[] getWeights()>();

        r3 = virtualinvoke r1.<com.opengamma.analytics.financial.model.volatility.smile.function.MultiHorizonMixedLogNormalModelData: double[] getVolatilities()>();

        r4 = virtualinvoke r1.<com.opengamma.analytics.financial.model.volatility.smile.function.MultiHorizonMixedLogNormalModelData: double[] getMus()>();

        i0 = lengthof r2;

        d4 = 0.0;

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        $d2 = r2[i1];

        $d1 = r3[i1];

        $d3 = $d2 * $d1;

        d4 = d4 + $d3;

        i1 = i1 + 1;

        goto label1;

     label2:
        $r8 = new com.opengamma.analytics.financial.model.volatility.surface.MixedLogNormalVolatilitySurface$2;

        specialinvoke $r8.<com.opengamma.analytics.financial.model.volatility.surface.MixedLogNormalVolatilitySurface$2: void <init>(com.opengamma.analytics.financial.model.interestrate.curve.ForwardCurve,double,int,double[],double[],double[])>(r0, d4, i0, r2, r4, r3);

        $r9 = new com.opengamma.analytics.financial.model.volatility.surface.BlackVolatilitySurfaceStrike;

        $r10 = staticinvoke <com.opengamma.analytics.math.surface.FunctionalDoublesSurface: com.opengamma.analytics.math.surface.FunctionalDoublesSurface 'from'(com.opengamma.analytics.math.function.Function)>($r8);

        specialinvoke $r9.<com.opengamma.analytics.financial.model.volatility.surface.BlackVolatilitySurfaceStrike: void <init>(com.opengamma.analytics.math.surface.Surface)>($r10);

        return $r9;
    }

    public static com.opengamma.analytics.financial.model.volatility.local.LocalVolatilitySurfaceStrike getLocalVolatilitySurface(com.opengamma.analytics.financial.model.interestrate.curve.ForwardCurve, com.opengamma.analytics.financial.model.volatility.smile.function.MultiHorizonMixedLogNormalModelData)
    {
        com.opengamma.analytics.financial.model.interestrate.curve.ForwardCurve r0;
        com.opengamma.analytics.financial.model.volatility.smile.function.MultiHorizonMixedLogNormalModelData r1;
        double d2;
        double[] r2, r3, r4;
        int i0;
        com.opengamma.analytics.financial.model.volatility.surface.MixedLogNormalVolatilitySurface$3 $r8;
        com.opengamma.analytics.financial.model.volatility.local.LocalVolatilitySurfaceStrike $r9;
        com.opengamma.analytics.math.surface.FunctionalDoublesSurface $r10;

        r0 := @parameter0: com.opengamma.analytics.financial.model.interestrate.curve.ForwardCurve;

        r1 := @parameter1: com.opengamma.analytics.financial.model.volatility.smile.function.MultiHorizonMixedLogNormalModelData;

        d2 = staticinvoke <java.lang.Math: double sqrt(double)>(1.0E-4);

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r0, "null fwdCurve");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "null data");

        r2 = virtualinvoke r1.<com.opengamma.analytics.financial.model.volatility.smile.function.MultiHorizonMixedLogNormalModelData: double[] getWeights()>();

        r3 = virtualinvoke r1.<com.opengamma.analytics.financial.model.volatility.smile.function.MultiHorizonMixedLogNormalModelData: double[] getVolatilities()>();

        r4 = virtualinvoke r1.<com.opengamma.analytics.financial.model.volatility.smile.function.MultiHorizonMixedLogNormalModelData: double[] getMus()>();

        i0 = lengthof r2;

        $r8 = new com.opengamma.analytics.financial.model.volatility.surface.MixedLogNormalVolatilitySurface$3;

        specialinvoke $r8.<com.opengamma.analytics.financial.model.volatility.surface.MixedLogNormalVolatilitySurface$3: void <init>(com.opengamma.analytics.financial.model.interestrate.curve.ForwardCurve,double,int,double[],double[],double[])>(r0, d2, i0, r2, r4, r3);

        $r9 = new com.opengamma.analytics.financial.model.volatility.local.LocalVolatilitySurfaceStrike;

        $r10 = staticinvoke <com.opengamma.analytics.math.surface.FunctionalDoublesSurface: com.opengamma.analytics.math.surface.FunctionalDoublesSurface 'from'(com.opengamma.analytics.math.function.Function)>($r8);

        specialinvoke $r9.<com.opengamma.analytics.financial.model.volatility.local.LocalVolatilitySurfaceStrike: void <init>(com.opengamma.analytics.math.surface.Surface)>($r10);

        return $r9;
    }

    static com.opengamma.analytics.math.statistics.distribution.ProbabilityDistribution access$000()
    {
        com.opengamma.analytics.math.statistics.distribution.ProbabilityDistribution $r0;

        $r0 = <com.opengamma.analytics.financial.model.volatility.surface.MixedLogNormalVolatilitySurface: com.opengamma.analytics.math.statistics.distribution.ProbabilityDistribution NORMAL>;

        return $r0;
    }

    static void <clinit>()
    {
        com.opengamma.analytics.math.statistics.distribution.NormalDistribution $r0;

        $r0 = new com.opengamma.analytics.math.statistics.distribution.NormalDistribution;

        specialinvoke $r0.<com.opengamma.analytics.math.statistics.distribution.NormalDistribution: void <init>(double,double)>(0.0, 1.0);

        <com.opengamma.analytics.financial.model.volatility.surface.MixedLogNormalVolatilitySurface: com.opengamma.analytics.math.statistics.distribution.ProbabilityDistribution NORMAL> = $r0;

        return;
    }
}
