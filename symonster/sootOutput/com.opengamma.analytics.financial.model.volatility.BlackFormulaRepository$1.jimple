final class com.opengamma.analytics.financial.model.volatility.BlackFormulaRepository$1 extends com.opengamma.analytics.math.function.Function1D
{
    final double val$forward;
    final double val$strike;
    final double val$timeToExpiry;
    final boolean val$isCall;

    void <init>(double, double, double, boolean)
    {
        com.opengamma.analytics.financial.model.volatility.BlackFormulaRepository$1 r0;
        double d0, d1, d2;
        boolean z0;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.BlackFormulaRepository$1;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        d2 := @parameter2: double;

        z0 := @parameter3: boolean;

        r0.<com.opengamma.analytics.financial.model.volatility.BlackFormulaRepository$1: double val$forward> = d0;

        r0.<com.opengamma.analytics.financial.model.volatility.BlackFormulaRepository$1: double val$strike> = d1;

        r0.<com.opengamma.analytics.financial.model.volatility.BlackFormulaRepository$1: double val$timeToExpiry> = d2;

        r0.<com.opengamma.analytics.financial.model.volatility.BlackFormulaRepository$1: boolean val$isCall> = z0;

        specialinvoke r0.<com.opengamma.analytics.math.function.Function1D: void <init>()>();

        return;
    }

    public java.lang.Double evaluate(java.lang.Double)
    {
        com.opengamma.analytics.financial.model.volatility.BlackFormulaRepository$1 r0;
        java.lang.Double r1, $r2;
        double $d0, $d1, $d2, $d3, $d4;
        boolean $z0;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.BlackFormulaRepository$1;

        r1 := @parameter0: java.lang.Double;

        $d0 = r0.<com.opengamma.analytics.financial.model.volatility.BlackFormulaRepository$1: double val$forward>;

        $d1 = r0.<com.opengamma.analytics.financial.model.volatility.BlackFormulaRepository$1: double val$strike>;

        $d2 = r0.<com.opengamma.analytics.financial.model.volatility.BlackFormulaRepository$1: double val$timeToExpiry>;

        $d3 = virtualinvoke r1.<java.lang.Double: double doubleValue()>();

        $z0 = r0.<com.opengamma.analytics.financial.model.volatility.BlackFormulaRepository$1: boolean val$isCall>;

        $d4 = staticinvoke <com.opengamma.analytics.financial.model.volatility.BlackFormulaRepository: double price(double,double,double,double,boolean)>($d0, $d1, $d2, $d3, $z0);

        $r2 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d4);

        return $r2;
    }

    public volatile java.lang.Object evaluate(java.lang.Object)
    {
        com.opengamma.analytics.financial.model.volatility.BlackFormulaRepository$1 r0;
        java.lang.Object r1;
        java.lang.Double $r2, $r3;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.BlackFormulaRepository$1;

        r1 := @parameter0: java.lang.Object;

        $r2 = (java.lang.Double) r1;

        $r3 = virtualinvoke r0.<com.opengamma.analytics.financial.model.volatility.BlackFormulaRepository$1: java.lang.Double evaluate(java.lang.Double)>($r2);

        return $r3;
    }
}
