public class org.apache.commons.lang.StringEscapeUtils extends java.lang.Object
{
    private static final char CSV_DELIMITER;
    private static final char CSV_QUOTE;
    private static final java.lang.String CSV_QUOTE_STR;
    private static final char[] CSV_SEARCH_CHARS;

    public void <init>()
    {
        org.apache.commons.lang.StringEscapeUtils r0;

        r0 := @this: org.apache.commons.lang.StringEscapeUtils;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static java.lang.String escapeJava(java.lang.String)
    {
        java.lang.String r0, $r1;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <org.apache.commons.lang.StringEscapeUtils: java.lang.String escapeJavaStyleString(java.lang.String,boolean,boolean)>(r0, 0, 0);

        return $r1;
    }

    public static void escapeJava(java.io.Writer, java.lang.String) throws java.io.IOException
    {
        java.io.Writer r0;
        java.lang.String r1;

        r0 := @parameter0: java.io.Writer;

        r1 := @parameter1: java.lang.String;

        staticinvoke <org.apache.commons.lang.StringEscapeUtils: void escapeJavaStyleString(java.io.Writer,java.lang.String,boolean,boolean)>(r0, r1, 0, 0);

        return;
    }

    public static java.lang.String escapeJavaScript(java.lang.String)
    {
        java.lang.String r0, $r1;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <org.apache.commons.lang.StringEscapeUtils: java.lang.String escapeJavaStyleString(java.lang.String,boolean,boolean)>(r0, 1, 1);

        return $r1;
    }

    public static void escapeJavaScript(java.io.Writer, java.lang.String) throws java.io.IOException
    {
        java.io.Writer r0;
        java.lang.String r1;

        r0 := @parameter0: java.io.Writer;

        r1 := @parameter1: java.lang.String;

        staticinvoke <org.apache.commons.lang.StringEscapeUtils: void escapeJavaStyleString(java.io.Writer,java.lang.String,boolean,boolean)>(r0, r1, 1, 1);

        return;
    }

    private static java.lang.String escapeJavaStyleString(java.lang.String, boolean, boolean)
    {
        java.lang.String r0, $r2;
        boolean z0, z1;
        java.io.StringWriter $r1;
        int $i0, $i1;
        java.io.IOException $r3;
        org.apache.commons.lang.UnhandledException $r4;

        r0 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        z1 := @parameter2: boolean;

        if r0 != null goto label1;

        return null;

     label1:
        $r1 = new java.io.StringWriter;

        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        $i1 = $i0 * 2;

        specialinvoke $r1.<java.io.StringWriter: void <init>(int)>($i1);

        staticinvoke <org.apache.commons.lang.StringEscapeUtils: void escapeJavaStyleString(java.io.Writer,java.lang.String,boolean,boolean)>($r1, r0, z0, z1);

        $r2 = virtualinvoke $r1.<java.io.StringWriter: java.lang.String toString()>();

     label2:
        return $r2;

     label3:
        $r3 := @caughtexception;

        $r4 = new org.apache.commons.lang.UnhandledException;

        specialinvoke $r4.<org.apache.commons.lang.UnhandledException: void <init>(java.lang.Throwable)>($r3);

        throw $r4;

        catch java.io.IOException from label1 to label2 with label3;
    }

    private static void escapeJavaStyleString(java.io.Writer, java.lang.String, boolean, boolean) throws java.io.IOException
    {
        java.io.Writer r0;
        java.lang.String r1, $r4, $r6, $r9, $r11, $r14, $r16, $r19, $r21, $r24, $r26;
        boolean z0, z1;
        int i0, i2;
        char c1;
        java.lang.StringBuffer $r2, $r3, $r5, $r7, $r8, $r10, $r12, $r13, $r15, $r17, $r18, $r20, $r22, $r23, $r25;
        java.lang.IllegalArgumentException $r27;

        r0 := @parameter0: java.io.Writer;

        r1 := @parameter1: java.lang.String;

        z0 := @parameter2: boolean;

        z1 := @parameter3: boolean;

        if r0 != null goto label01;

        $r27 = new java.lang.IllegalArgumentException;

        specialinvoke $r27.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("The Writer must not be null");

        throw $r27;

     label01:
        if r1 != null goto label02;

        return;

     label02:
        i0 = virtualinvoke r1.<java.lang.String: int length()>();

        i2 = 0;

     label03:
        if i2 >= i0 goto label23;

        c1 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i2);

        if c1 <= 4095 goto label04;

        $r22 = new java.lang.StringBuffer;

        specialinvoke $r22.<java.lang.StringBuffer: void <init>()>();

        $r23 = virtualinvoke $r22.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\\u");

        $r24 = staticinvoke <org.apache.commons.lang.StringEscapeUtils: java.lang.String hex(char)>(c1);

        $r25 = virtualinvoke $r23.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r24);

        $r26 = virtualinvoke $r25.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<java.io.Writer: void write(java.lang.String)>($r26);

        goto label22;

     label04:
        if c1 <= 255 goto label05;

        $r17 = new java.lang.StringBuffer;

        specialinvoke $r17.<java.lang.StringBuffer: void <init>()>();

        $r18 = virtualinvoke $r17.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\\u0");

        $r19 = staticinvoke <org.apache.commons.lang.StringEscapeUtils: java.lang.String hex(char)>(c1);

        $r20 = virtualinvoke $r18.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r19);

        $r21 = virtualinvoke $r20.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<java.io.Writer: void write(java.lang.String)>($r21);

        goto label22;

     label05:
        if c1 <= 127 goto label06;

        $r12 = new java.lang.StringBuffer;

        specialinvoke $r12.<java.lang.StringBuffer: void <init>()>();

        $r13 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\\u00");

        $r14 = staticinvoke <org.apache.commons.lang.StringEscapeUtils: java.lang.String hex(char)>(c1);

        $r15 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r14);

        $r16 = virtualinvoke $r15.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<java.io.Writer: void write(java.lang.String)>($r16);

        goto label22;

     label06:
        if c1 >= 32 goto label14;

        tableswitch(c1)
        {
            case 8: goto label07;
            case 9: goto label09;
            case 10: goto label08;
            case 11: goto label12;
            case 12: goto label10;
            case 13: goto label11;
            default: goto label12;
        };

     label07:
        virtualinvoke r0.<java.io.Writer: void write(int)>(92);

        virtualinvoke r0.<java.io.Writer: void write(int)>(98);

        goto label22;

     label08:
        virtualinvoke r0.<java.io.Writer: void write(int)>(92);

        virtualinvoke r0.<java.io.Writer: void write(int)>(110);

        goto label22;

     label09:
        virtualinvoke r0.<java.io.Writer: void write(int)>(92);

        virtualinvoke r0.<java.io.Writer: void write(int)>(116);

        goto label22;

     label10:
        virtualinvoke r0.<java.io.Writer: void write(int)>(92);

        virtualinvoke r0.<java.io.Writer: void write(int)>(102);

        goto label22;

     label11:
        virtualinvoke r0.<java.io.Writer: void write(int)>(92);

        virtualinvoke r0.<java.io.Writer: void write(int)>(114);

        goto label22;

     label12:
        if c1 <= 15 goto label13;

        $r7 = new java.lang.StringBuffer;

        specialinvoke $r7.<java.lang.StringBuffer: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\\u00");

        $r9 = staticinvoke <org.apache.commons.lang.StringEscapeUtils: java.lang.String hex(char)>(c1);

        $r10 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<java.io.Writer: void write(java.lang.String)>($r11);

        goto label22;

     label13:
        $r2 = new java.lang.StringBuffer;

        specialinvoke $r2.<java.lang.StringBuffer: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\\u000");

        $r4 = staticinvoke <org.apache.commons.lang.StringEscapeUtils: java.lang.String hex(char)>(c1);

        $r5 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<java.io.Writer: void write(java.lang.String)>($r6);

        goto label22;

     label14:
        lookupswitch(c1)
        {
            case 34: goto label17;
            case 39: goto label15;
            case 47: goto label19;
            case 92: goto label18;
            default: goto label21;
        };

     label15:
        if z0 == 0 goto label16;

        virtualinvoke r0.<java.io.Writer: void write(int)>(92);

     label16:
        virtualinvoke r0.<java.io.Writer: void write(int)>(39);

        goto label22;

     label17:
        virtualinvoke r0.<java.io.Writer: void write(int)>(92);

        virtualinvoke r0.<java.io.Writer: void write(int)>(34);

        goto label22;

     label18:
        virtualinvoke r0.<java.io.Writer: void write(int)>(92);

        virtualinvoke r0.<java.io.Writer: void write(int)>(92);

        goto label22;

     label19:
        if z1 == 0 goto label20;

        virtualinvoke r0.<java.io.Writer: void write(int)>(92);

     label20:
        virtualinvoke r0.<java.io.Writer: void write(int)>(47);

        goto label22;

     label21:
        virtualinvoke r0.<java.io.Writer: void write(int)>(c1);

     label22:
        i2 = i2 + 1;

        goto label03;

     label23:
        return;
    }

    private static java.lang.String hex(char)
    {
        char c0;
        java.lang.String $r0, $r2;
        java.util.Locale $r1;

        c0 := @parameter0: char;

        $r0 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>(c0);

        $r1 = <java.util.Locale: java.util.Locale ENGLISH>;

        $r2 = virtualinvoke $r0.<java.lang.String: java.lang.String toUpperCase(java.util.Locale)>($r1);

        return $r2;
    }

    public static java.lang.String unescapeJava(java.lang.String)
    {
        java.lang.String r0, $r2;
        java.io.StringWriter $r1;
        int $i0;
        java.io.IOException $r3;
        org.apache.commons.lang.UnhandledException $r4;

        r0 := @parameter0: java.lang.String;

        if r0 != null goto label1;

        return null;

     label1:
        $r1 = new java.io.StringWriter;

        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        specialinvoke $r1.<java.io.StringWriter: void <init>(int)>($i0);

        staticinvoke <org.apache.commons.lang.StringEscapeUtils: void unescapeJava(java.io.Writer,java.lang.String)>($r1, r0);

        $r2 = virtualinvoke $r1.<java.io.StringWriter: java.lang.String toString()>();

     label2:
        return $r2;

     label3:
        $r3 := @caughtexception;

        $r4 = new org.apache.commons.lang.UnhandledException;

        specialinvoke $r4.<org.apache.commons.lang.UnhandledException: void <init>(java.lang.Throwable)>($r3);

        throw $r4;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public static void unescapeJava(java.io.Writer, java.lang.String) throws java.io.IOException
    {
        java.io.Writer r0;
        java.lang.String r1, $r5, $r13;
        int i0, $i2, i4, i5;
        char c1, $c3;
        org.apache.commons.lang.text.StrBuilder $r3;
        java.lang.IllegalArgumentException $r7;
        java.lang.NumberFormatException $r8;
        org.apache.commons.lang.exception.NestableRuntimeException $r9;
        java.lang.StringBuffer $r10, $r11, $r12;
        boolean z0, z1;

        r0 := @parameter0: java.io.Writer;

        r1 := @parameter1: java.lang.String;

        if r0 != null goto label01;

        $r7 = new java.lang.IllegalArgumentException;

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("The Writer must not be null");

        throw $r7;

     label01:
        if r1 != null goto label02;

        return;

     label02:
        i0 = virtualinvoke r1.<java.lang.String: int length()>();

        $r3 = new org.apache.commons.lang.text.StrBuilder;

        specialinvoke $r3.<org.apache.commons.lang.text.StrBuilder: void <init>(int)>(4);

        z0 = 0;

        z1 = 0;

        i4 = 0;

     label03:
        if i4 >= i0 goto label21;

        c1 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i4);

        if z1 == 0 goto label07;

        virtualinvoke $r3.<org.apache.commons.lang.text.StrBuilder: org.apache.commons.lang.text.StrBuilder append(char)>(c1);

        $i2 = virtualinvoke $r3.<org.apache.commons.lang.text.StrBuilder: int length()>();

        if $i2 != 4 goto label20;

     label04:
        $r5 = virtualinvoke $r3.<org.apache.commons.lang.text.StrBuilder: java.lang.String toString()>();

        i5 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>($r5, 16);

        $c3 = (char) i5;

        virtualinvoke r0.<java.io.Writer: void write(int)>($c3);

        virtualinvoke $r3.<org.apache.commons.lang.text.StrBuilder: org.apache.commons.lang.text.StrBuilder setLength(int)>(0);

        z1 = 0;

        z0 = 0;

     label05:
        goto label20;

     label06:
        $r8 := @caughtexception;

        $r9 = new org.apache.commons.lang.exception.NestableRuntimeException;

        $r10 = new java.lang.StringBuffer;

        specialinvoke $r10.<java.lang.StringBuffer: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Unable to parse unicode value: ");

        $r12 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r3);

        $r13 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r9.<org.apache.commons.lang.exception.NestableRuntimeException: void <init>(java.lang.String,java.lang.Throwable)>($r13, $r8);

        throw $r9;

     label07:
        if z0 == 0 goto label18;

        z0 = 0;

        lookupswitch(c1)
        {
            case 34: goto label10;
            case 39: goto label09;
            case 92: goto label08;
            case 98: goto label15;
            case 102: goto label12;
            case 110: goto label14;
            case 114: goto label11;
            case 116: goto label13;
            case 117: goto label16;
            default: goto label17;
        };

     label08:
        virtualinvoke r0.<java.io.Writer: void write(int)>(92);

        goto label20;

     label09:
        virtualinvoke r0.<java.io.Writer: void write(int)>(39);

        goto label20;

     label10:
        virtualinvoke r0.<java.io.Writer: void write(int)>(34);

        goto label20;

     label11:
        virtualinvoke r0.<java.io.Writer: void write(int)>(13);

        goto label20;

     label12:
        virtualinvoke r0.<java.io.Writer: void write(int)>(12);

        goto label20;

     label13:
        virtualinvoke r0.<java.io.Writer: void write(int)>(9);

        goto label20;

     label14:
        virtualinvoke r0.<java.io.Writer: void write(int)>(10);

        goto label20;

     label15:
        virtualinvoke r0.<java.io.Writer: void write(int)>(8);

        goto label20;

     label16:
        z1 = 1;

        goto label20;

     label17:
        virtualinvoke r0.<java.io.Writer: void write(int)>(c1);

        goto label20;

     label18:
        if c1 != 92 goto label19;

        z0 = 1;

        goto label20;

     label19:
        virtualinvoke r0.<java.io.Writer: void write(int)>(c1);

     label20:
        i4 = i4 + 1;

        goto label03;

     label21:
        if z0 == 0 goto label22;

        virtualinvoke r0.<java.io.Writer: void write(int)>(92);

     label22:
        return;

        catch java.lang.NumberFormatException from label04 to label05 with label06;
    }

    public static java.lang.String unescapeJavaScript(java.lang.String)
    {
        java.lang.String r0, $r1;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <org.apache.commons.lang.StringEscapeUtils: java.lang.String unescapeJava(java.lang.String)>(r0);

        return $r1;
    }

    public static void unescapeJavaScript(java.io.Writer, java.lang.String) throws java.io.IOException
    {
        java.io.Writer r0;
        java.lang.String r1;

        r0 := @parameter0: java.io.Writer;

        r1 := @parameter1: java.lang.String;

        staticinvoke <org.apache.commons.lang.StringEscapeUtils: void unescapeJava(java.io.Writer,java.lang.String)>(r0, r1);

        return;
    }

    public static java.lang.String escapeHtml(java.lang.String)
    {
        java.lang.String r0, $r2;
        java.io.StringWriter $r1;
        int $i0, $i1;
        double $d0, $d1;
        java.io.IOException $r3;
        org.apache.commons.lang.UnhandledException $r4;

        r0 := @parameter0: java.lang.String;

        if r0 != null goto label1;

        return null;

     label1:
        $r1 = new java.io.StringWriter;

        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        $d0 = (double) $i0;

        $d1 = $d0 * 1.5;

        $i1 = (int) $d1;

        specialinvoke $r1.<java.io.StringWriter: void <init>(int)>($i1);

        staticinvoke <org.apache.commons.lang.StringEscapeUtils: void escapeHtml(java.io.Writer,java.lang.String)>($r1, r0);

        $r2 = virtualinvoke $r1.<java.io.StringWriter: java.lang.String toString()>();

     label2:
        return $r2;

     label3:
        $r3 := @caughtexception;

        $r4 = new org.apache.commons.lang.UnhandledException;

        specialinvoke $r4.<org.apache.commons.lang.UnhandledException: void <init>(java.lang.Throwable)>($r3);

        throw $r4;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public static void escapeHtml(java.io.Writer, java.lang.String) throws java.io.IOException
    {
        java.io.Writer r0;
        java.lang.String r1;
        org.apache.commons.lang.Entities $r2;
        java.lang.IllegalArgumentException $r3;

        r0 := @parameter0: java.io.Writer;

        r1 := @parameter1: java.lang.String;

        if r0 != null goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("The Writer must not be null.");

        throw $r3;

     label1:
        if r1 != null goto label2;

        return;

     label2:
        $r2 = <org.apache.commons.lang.Entities: org.apache.commons.lang.Entities HTML40>;

        virtualinvoke $r2.<org.apache.commons.lang.Entities: void escape(java.io.Writer,java.lang.String)>(r0, r1);

        return;
    }

    public static java.lang.String unescapeHtml(java.lang.String)
    {
        java.lang.String r0, $r2;
        java.io.StringWriter $r1;
        int $i0, $i1;
        double $d0, $d1;
        java.io.IOException $r3;
        org.apache.commons.lang.UnhandledException $r4;

        r0 := @parameter0: java.lang.String;

        if r0 != null goto label1;

        return null;

     label1:
        $r1 = new java.io.StringWriter;

        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        $d0 = (double) $i0;

        $d1 = $d0 * 1.5;

        $i1 = (int) $d1;

        specialinvoke $r1.<java.io.StringWriter: void <init>(int)>($i1);

        staticinvoke <org.apache.commons.lang.StringEscapeUtils: void unescapeHtml(java.io.Writer,java.lang.String)>($r1, r0);

        $r2 = virtualinvoke $r1.<java.io.StringWriter: java.lang.String toString()>();

     label2:
        return $r2;

     label3:
        $r3 := @caughtexception;

        $r4 = new org.apache.commons.lang.UnhandledException;

        specialinvoke $r4.<org.apache.commons.lang.UnhandledException: void <init>(java.lang.Throwable)>($r3);

        throw $r4;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public static void unescapeHtml(java.io.Writer, java.lang.String) throws java.io.IOException
    {
        java.io.Writer r0;
        java.lang.String r1;
        org.apache.commons.lang.Entities $r2;
        java.lang.IllegalArgumentException $r3;

        r0 := @parameter0: java.io.Writer;

        r1 := @parameter1: java.lang.String;

        if r0 != null goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("The Writer must not be null.");

        throw $r3;

     label1:
        if r1 != null goto label2;

        return;

     label2:
        $r2 = <org.apache.commons.lang.Entities: org.apache.commons.lang.Entities HTML40>;

        virtualinvoke $r2.<org.apache.commons.lang.Entities: void unescape(java.io.Writer,java.lang.String)>(r0, r1);

        return;
    }

    public static void escapeXml(java.io.Writer, java.lang.String) throws java.io.IOException
    {
        java.io.Writer r0;
        java.lang.String r1;
        org.apache.commons.lang.Entities $r2;
        java.lang.IllegalArgumentException $r3;

        r0 := @parameter0: java.io.Writer;

        r1 := @parameter1: java.lang.String;

        if r0 != null goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("The Writer must not be null.");

        throw $r3;

     label1:
        if r1 != null goto label2;

        return;

     label2:
        $r2 = <org.apache.commons.lang.Entities: org.apache.commons.lang.Entities XML>;

        virtualinvoke $r2.<org.apache.commons.lang.Entities: void escape(java.io.Writer,java.lang.String)>(r0, r1);

        return;
    }

    public static java.lang.String escapeXml(java.lang.String)
    {
        java.lang.String r0, $r2;
        org.apache.commons.lang.Entities $r1;

        r0 := @parameter0: java.lang.String;

        if r0 != null goto label1;

        return null;

     label1:
        $r1 = <org.apache.commons.lang.Entities: org.apache.commons.lang.Entities XML>;

        $r2 = virtualinvoke $r1.<org.apache.commons.lang.Entities: java.lang.String escape(java.lang.String)>(r0);

        return $r2;
    }

    public static void unescapeXml(java.io.Writer, java.lang.String) throws java.io.IOException
    {
        java.io.Writer r0;
        java.lang.String r1;
        org.apache.commons.lang.Entities $r2;
        java.lang.IllegalArgumentException $r3;

        r0 := @parameter0: java.io.Writer;

        r1 := @parameter1: java.lang.String;

        if r0 != null goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("The Writer must not be null.");

        throw $r3;

     label1:
        if r1 != null goto label2;

        return;

     label2:
        $r2 = <org.apache.commons.lang.Entities: org.apache.commons.lang.Entities XML>;

        virtualinvoke $r2.<org.apache.commons.lang.Entities: void unescape(java.io.Writer,java.lang.String)>(r0, r1);

        return;
    }

    public static java.lang.String unescapeXml(java.lang.String)
    {
        java.lang.String r0, $r2;
        org.apache.commons.lang.Entities $r1;

        r0 := @parameter0: java.lang.String;

        if r0 != null goto label1;

        return null;

     label1:
        $r1 = <org.apache.commons.lang.Entities: org.apache.commons.lang.Entities XML>;

        $r2 = virtualinvoke $r1.<org.apache.commons.lang.Entities: java.lang.String unescape(java.lang.String)>(r0);

        return $r2;
    }

    public static java.lang.String escapeSql(java.lang.String)
    {
        java.lang.String r0, $r1;

        r0 := @parameter0: java.lang.String;

        if r0 != null goto label1;

        return null;

     label1:
        $r1 = staticinvoke <org.apache.commons.lang.StringUtils: java.lang.String replace(java.lang.String,java.lang.String,java.lang.String)>(r0, "\'", "\'\'");

        return $r1;
    }

    public static java.lang.String escapeCsv(java.lang.String)
    {
        java.lang.String r0, $r3;
        char[] $r1;
        boolean $z0;
        java.io.StringWriter $r2;
        java.io.IOException $r4;
        org.apache.commons.lang.UnhandledException $r5;

        r0 := @parameter0: java.lang.String;

        $r1 = <org.apache.commons.lang.StringEscapeUtils: char[] CSV_SEARCH_CHARS>;

        $z0 = staticinvoke <org.apache.commons.lang.StringUtils: boolean containsNone(java.lang.String,char[])>(r0, $r1);

        if $z0 == 0 goto label1;

        return r0;

     label1:
        $r2 = new java.io.StringWriter;

        specialinvoke $r2.<java.io.StringWriter: void <init>()>();

        staticinvoke <org.apache.commons.lang.StringEscapeUtils: void escapeCsv(java.io.Writer,java.lang.String)>($r2, r0);

        $r3 = virtualinvoke $r2.<java.io.StringWriter: java.lang.String toString()>();

     label2:
        return $r3;

     label3:
        $r4 := @caughtexception;

        $r5 = new org.apache.commons.lang.UnhandledException;

        specialinvoke $r5.<org.apache.commons.lang.UnhandledException: void <init>(java.lang.Throwable)>($r4);

        throw $r5;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public static void escapeCsv(java.io.Writer, java.lang.String) throws java.io.IOException
    {
        java.io.Writer r0;
        java.lang.String r1;
        char c0;
        char[] $r2;
        boolean $z0;
        int $i1, i2;

        r0 := @parameter0: java.io.Writer;

        r1 := @parameter1: java.lang.String;

        $r2 = <org.apache.commons.lang.StringEscapeUtils: char[] CSV_SEARCH_CHARS>;

        $z0 = staticinvoke <org.apache.commons.lang.StringUtils: boolean containsNone(java.lang.String,char[])>(r1, $r2);

        if $z0 == 0 goto label2;

        if r1 == null goto label1;

        virtualinvoke r0.<java.io.Writer: void write(java.lang.String)>(r1);

     label1:
        return;

     label2:
        virtualinvoke r0.<java.io.Writer: void write(int)>(34);

        i2 = 0;

     label3:
        $i1 = virtualinvoke r1.<java.lang.String: int length()>();

        if i2 >= $i1 goto label5;

        c0 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i2);

        if c0 != 34 goto label4;

        virtualinvoke r0.<java.io.Writer: void write(int)>(34);

     label4:
        virtualinvoke r0.<java.io.Writer: void write(int)>(c0);

        i2 = i2 + 1;

        goto label3;

     label5:
        virtualinvoke r0.<java.io.Writer: void write(int)>(34);

        return;
    }

    public static java.lang.String unescapeCsv(java.lang.String)
    {
        java.lang.String r0, $r2;
        java.io.StringWriter $r1;
        java.io.IOException $r3;
        org.apache.commons.lang.UnhandledException $r4;

        r0 := @parameter0: java.lang.String;

        if r0 != null goto label1;

        return null;

     label1:
        $r1 = new java.io.StringWriter;

        specialinvoke $r1.<java.io.StringWriter: void <init>()>();

        staticinvoke <org.apache.commons.lang.StringEscapeUtils: void unescapeCsv(java.io.Writer,java.lang.String)>($r1, r0);

        $r2 = virtualinvoke $r1.<java.io.StringWriter: java.lang.String toString()>();

     label2:
        return $r2;

     label3:
        $r3 := @caughtexception;

        $r4 = new org.apache.commons.lang.UnhandledException;

        specialinvoke $r4.<org.apache.commons.lang.UnhandledException: void <init>(java.lang.Throwable)>($r3);

        throw $r4;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public static void unescapeCsv(java.io.Writer, java.lang.String) throws java.io.IOException
    {
        java.io.Writer r0;
        java.lang.String r1, $r4, $r6, $r8, $r9, r10;
        int $i0, $i2, $i3, $i5, $i6;
        char $c1, $c4;
        char[] $r2;
        boolean $z0;
        java.lang.StringBuffer $r3, $r5, $r7;

        r0 := @parameter0: java.io.Writer;

        r10 := @parameter1: java.lang.String;

        if r10 != null goto label1;

        return;

     label1:
        $i0 = virtualinvoke r10.<java.lang.String: int length()>();

        if $i0 >= 2 goto label2;

        virtualinvoke r0.<java.io.Writer: void write(java.lang.String)>(r10);

        return;

     label2:
        $c1 = virtualinvoke r10.<java.lang.String: char charAt(int)>(0);

        if $c1 != 34 goto label3;

        $i2 = virtualinvoke r10.<java.lang.String: int length()>();

        $i3 = $i2 - 1;

        $c4 = virtualinvoke r10.<java.lang.String: char charAt(int)>($i3);

        if $c4 == 34 goto label4;

     label3:
        virtualinvoke r0.<java.io.Writer: void write(java.lang.String)>(r10);

        return;

     label4:
        $i5 = virtualinvoke r10.<java.lang.String: int length()>();

        $i6 = $i5 - 1;

        r1 = virtualinvoke r10.<java.lang.String: java.lang.String substring(int,int)>(1, $i6);

        $r2 = <org.apache.commons.lang.StringEscapeUtils: char[] CSV_SEARCH_CHARS>;

        $z0 = staticinvoke <org.apache.commons.lang.StringUtils: boolean containsAny(java.lang.String,char[])>(r1, $r2);

        if $z0 == 0 goto label5;

        $r3 = new java.lang.StringBuffer;

        specialinvoke $r3.<java.lang.StringBuffer: void <init>()>();

        $r4 = <org.apache.commons.lang.StringEscapeUtils: java.lang.String CSV_QUOTE_STR>;

        $r5 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);

        $r6 = <org.apache.commons.lang.StringEscapeUtils: java.lang.String CSV_QUOTE_STR>;

        $r7 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.String toString()>();

        $r9 = <org.apache.commons.lang.StringEscapeUtils: java.lang.String CSV_QUOTE_STR>;

        r10 = staticinvoke <org.apache.commons.lang.StringUtils: java.lang.String replace(java.lang.String,java.lang.String,java.lang.String)>(r1, $r8, $r9);

     label5:
        virtualinvoke r0.<java.io.Writer: void write(java.lang.String)>(r10);

        return;
    }

    static void <clinit>()
    {
        java.lang.String $r0;
        char[] $r1;

        <org.apache.commons.lang.StringEscapeUtils: char CSV_QUOTE> = 34;

        <org.apache.commons.lang.StringEscapeUtils: char CSV_DELIMITER> = 44;

        $r0 = staticinvoke <java.lang.String: java.lang.String valueOf(char)>(34);

        <org.apache.commons.lang.StringEscapeUtils: java.lang.String CSV_QUOTE_STR> = $r0;

        $r1 = newarray (char)[4];

        $r1[0] = 44;

        $r1[1] = 34;

        $r1[2] = 13;

        $r1[3] = 10;

        <org.apache.commons.lang.StringEscapeUtils: char[] CSV_SEARCH_CHARS> = $r1;

        return;
    }
}
