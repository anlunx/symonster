public class org.apache.commons.math3.util.RandomPivotingStrategy extends java.lang.Object implements org.apache.commons.math3.util.PivotingStrategyInterface, java.io.Serializable
{
    private static final long serialVersionUID;
    private final org.apache.commons.math3.random.RandomGenerator random;

    public void <init>(org.apache.commons.math3.random.RandomGenerator)
    {
        org.apache.commons.math3.util.RandomPivotingStrategy r0;
        org.apache.commons.math3.random.RandomGenerator r1;

        r0 := @this: org.apache.commons.math3.util.RandomPivotingStrategy;

        r1 := @parameter0: org.apache.commons.math3.random.RandomGenerator;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.commons.math3.util.RandomPivotingStrategy: org.apache.commons.math3.random.RandomGenerator random> = r1;

        return;
    }

    public int pivotIndex(double[], int, int) throws org.apache.commons.math3.exception.MathIllegalArgumentException
    {
        org.apache.commons.math3.util.RandomPivotingStrategy r0;
        double[] r1;
        int i0, i1, $i2, $i3, $i4, $i5, $i6;
        org.apache.commons.math3.random.RandomGenerator $r2;

        r0 := @this: org.apache.commons.math3.util.RandomPivotingStrategy;

        r1 := @parameter0: double[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $i2 = i1 - i0;

        staticinvoke <org.apache.commons.math3.util.MathArrays: boolean verifyValues(double[],int,int)>(r1, i0, $i2);

        $r2 = r0.<org.apache.commons.math3.util.RandomPivotingStrategy: org.apache.commons.math3.random.RandomGenerator random>;

        $i3 = i1 - i0;

        $i4 = $i3 - 1;

        $i5 = interfaceinvoke $r2.<org.apache.commons.math3.random.RandomGenerator: int nextInt(int)>($i4);

        $i6 = i0 + $i5;

        return $i6;
    }

    public static void <clinit>()
    {
        <org.apache.commons.math3.util.RandomPivotingStrategy: long serialVersionUID> = 20140713L;

        return;
    }
}
