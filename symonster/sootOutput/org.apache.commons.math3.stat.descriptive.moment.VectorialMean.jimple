public class org.apache.commons.math3.stat.descriptive.moment.VectorialMean extends java.lang.Object implements java.io.Serializable
{
    private static final long serialVersionUID;
    private final org.apache.commons.math3.stat.descriptive.moment.Mean[] means;

    public void <init>(int)
    {
        org.apache.commons.math3.stat.descriptive.moment.VectorialMean r0;
        int i0, i1;
        org.apache.commons.math3.stat.descriptive.moment.Mean[] $r1, $r3;
        org.apache.commons.math3.stat.descriptive.moment.Mean $r2;

        r0 := @this: org.apache.commons.math3.stat.descriptive.moment.VectorialMean;

        i0 := @parameter0: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = newarray (org.apache.commons.math3.stat.descriptive.moment.Mean)[i0];

        r0.<org.apache.commons.math3.stat.descriptive.moment.VectorialMean: org.apache.commons.math3.stat.descriptive.moment.Mean[] means> = $r1;

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        $r3 = r0.<org.apache.commons.math3.stat.descriptive.moment.VectorialMean: org.apache.commons.math3.stat.descriptive.moment.Mean[] means>;

        $r2 = new org.apache.commons.math3.stat.descriptive.moment.Mean;

        specialinvoke $r2.<org.apache.commons.math3.stat.descriptive.moment.Mean: void <init>()>();

        $r3[i1] = $r2;

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    public void increment(double[]) throws org.apache.commons.math3.exception.DimensionMismatchException
    {
        org.apache.commons.math3.stat.descriptive.moment.VectorialMean r0;
        double[] r1;
        org.apache.commons.math3.stat.descriptive.moment.Mean[] $r2, $r3, $r6;
        int $i0, $i1, $i2, $i3, $i4, i5;
        double $d0;
        org.apache.commons.math3.stat.descriptive.moment.Mean $r4;
        org.apache.commons.math3.exception.DimensionMismatchException $r5;

        r0 := @this: org.apache.commons.math3.stat.descriptive.moment.VectorialMean;

        r1 := @parameter0: double[];

        $i1 = lengthof r1;

        $r2 = r0.<org.apache.commons.math3.stat.descriptive.moment.VectorialMean: org.apache.commons.math3.stat.descriptive.moment.Mean[] means>;

        $i0 = lengthof $r2;

        if $i1 == $i0 goto label1;

        $r5 = new org.apache.commons.math3.exception.DimensionMismatchException;

        $i4 = lengthof r1;

        $r6 = r0.<org.apache.commons.math3.stat.descriptive.moment.VectorialMean: org.apache.commons.math3.stat.descriptive.moment.Mean[] means>;

        $i3 = lengthof $r6;

        specialinvoke $r5.<org.apache.commons.math3.exception.DimensionMismatchException: void <init>(int,int)>($i4, $i3);

        throw $r5;

     label1:
        i5 = 0;

     label2:
        $i2 = lengthof r1;

        if i5 >= $i2 goto label3;

        $r3 = r0.<org.apache.commons.math3.stat.descriptive.moment.VectorialMean: org.apache.commons.math3.stat.descriptive.moment.Mean[] means>;

        $r4 = $r3[i5];

        $d0 = r1[i5];

        virtualinvoke $r4.<org.apache.commons.math3.stat.descriptive.moment.Mean: void increment(double)>($d0);

        i5 = i5 + 1;

        goto label2;

     label3:
        return;
    }

    public double[] getResult()
    {
        org.apache.commons.math3.stat.descriptive.moment.VectorialMean r0;
        double[] r1;
        org.apache.commons.math3.stat.descriptive.moment.Mean[] $r2, $r3;
        int $i0, $i1, i2;
        org.apache.commons.math3.stat.descriptive.moment.Mean $r4;
        double $d0;

        r0 := @this: org.apache.commons.math3.stat.descriptive.moment.VectorialMean;

        $r2 = r0.<org.apache.commons.math3.stat.descriptive.moment.VectorialMean: org.apache.commons.math3.stat.descriptive.moment.Mean[] means>;

        $i0 = lengthof $r2;

        r1 = newarray (double)[$i0];

        i2 = 0;

     label1:
        $i1 = lengthof r1;

        if i2 >= $i1 goto label2;

        $r3 = r0.<org.apache.commons.math3.stat.descriptive.moment.VectorialMean: org.apache.commons.math3.stat.descriptive.moment.Mean[] means>;

        $r4 = $r3[i2];

        $d0 = virtualinvoke $r4.<org.apache.commons.math3.stat.descriptive.moment.Mean: double getResult()>();

        r1[i2] = $d0;

        i2 = i2 + 1;

        goto label1;

     label2:
        return r1;
    }

    public long getN()
    {
        org.apache.commons.math3.stat.descriptive.moment.VectorialMean r0;
        org.apache.commons.math3.stat.descriptive.moment.Mean[] $r1, $r2;
        int $i0;
        org.apache.commons.math3.stat.descriptive.moment.Mean $r3;
        long $l1;

        r0 := @this: org.apache.commons.math3.stat.descriptive.moment.VectorialMean;

        $r1 = r0.<org.apache.commons.math3.stat.descriptive.moment.VectorialMean: org.apache.commons.math3.stat.descriptive.moment.Mean[] means>;

        $i0 = lengthof $r1;

        if $i0 != 0 goto label1;

        $l1 = 0L;

        goto label2;

     label1:
        $r2 = r0.<org.apache.commons.math3.stat.descriptive.moment.VectorialMean: org.apache.commons.math3.stat.descriptive.moment.Mean[] means>;

        $r3 = $r2[0];

        $l1 = virtualinvoke $r3.<org.apache.commons.math3.stat.descriptive.moment.Mean: long getN()>();

     label2:
        return $l1;
    }

    public int hashCode()
    {
        org.apache.commons.math3.stat.descriptive.moment.VectorialMean r0;
        org.apache.commons.math3.stat.descriptive.moment.Mean[] $r1;
        int $i1, $i2, i4;

        r0 := @this: org.apache.commons.math3.stat.descriptive.moment.VectorialMean;

        $i1 = 31 * 1;

        $r1 = r0.<org.apache.commons.math3.stat.descriptive.moment.VectorialMean: org.apache.commons.math3.stat.descriptive.moment.Mean[] means>;

        $i2 = staticinvoke <java.util.Arrays: int hashCode(java.lang.Object[])>($r1);

        i4 = $i1 + $i2;

        return i4;
    }

    public boolean equals(java.lang.Object)
    {
        org.apache.commons.math3.stat.descriptive.moment.VectorialMean r0, r2;
        java.lang.Object r1;
        boolean $z0, $z1;
        org.apache.commons.math3.stat.descriptive.moment.Mean[] $r3, $r4;

        r0 := @this: org.apache.commons.math3.stat.descriptive.moment.VectorialMean;

        r1 := @parameter0: java.lang.Object;

        if r0 != r1 goto label1;

        return 1;

     label1:
        $z0 = r1 instanceof org.apache.commons.math3.stat.descriptive.moment.VectorialMean;

        if $z0 != 0 goto label2;

        return 0;

     label2:
        r2 = (org.apache.commons.math3.stat.descriptive.moment.VectorialMean) r1;

        $r4 = r0.<org.apache.commons.math3.stat.descriptive.moment.VectorialMean: org.apache.commons.math3.stat.descriptive.moment.Mean[] means>;

        $r3 = r2.<org.apache.commons.math3.stat.descriptive.moment.VectorialMean: org.apache.commons.math3.stat.descriptive.moment.Mean[] means>;

        $z1 = staticinvoke <java.util.Arrays: boolean equals(java.lang.Object[],java.lang.Object[])>($r4, $r3);

        if $z1 != 0 goto label3;

        return 0;

     label3:
        return 1;
    }

    public static void <clinit>()
    {
        <org.apache.commons.math3.stat.descriptive.moment.VectorialMean: long serialVersionUID> = 8223009086481006892L;

        return;
    }
}
