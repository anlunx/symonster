public class com.opengamma.analytics.financial.model.finitedifference.HyperbolicMeshing extends com.opengamma.analytics.financial.model.finitedifference.MeshingFunction
{
    private final com.opengamma.analytics.financial.model.finitedifference.UniformMeshing _um;
    private final double[] _fpValues;
    private final double _alpha;
    private final double _beta;
    private final double _gamma;
    private final double _delta;
    private final double _l;
    private final double _r;

    public void <init>(double, double, double, int, double)
    {
        com.opengamma.analytics.financial.model.finitedifference.HyperbolicMeshing r0;
        double d0, d1, d2, d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15;
        int i0;
        byte $b1, $b2, $b3, $b4;
        com.opengamma.analytics.financial.model.finitedifference.UniformMeshing $r1;
        boolean $z0, $z1, $z2;

        r0 := @this: com.opengamma.analytics.financial.model.finitedifference.HyperbolicMeshing;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        d2 := @parameter2: double;

        i0 := @parameter3: int;

        d3 := @parameter4: double;

        specialinvoke r0.<com.opengamma.analytics.financial.model.finitedifference.MeshingFunction: void <init>(int)>(i0);

        $b1 = d1 cmpl d0;

        if $b1 <= 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        staticinvoke <org.apache.commons.lang.Validate: void isTrue(boolean,java.lang.String)>($z0, "need xMax > xMin");

        $b2 = d1 cmpl d2;

        if $b2 < 0 goto label3;

        $b3 = d2 cmpl d0;

        if $b3 < 0 goto label3;

        $z1 = 1;

        goto label4;

     label3:
        $z1 = 0;

     label4:
        staticinvoke <org.apache.commons.lang.Validate: void isTrue(boolean,java.lang.String)>($z1, "need xCent between upper and lower bounds");

        $b4 = d3 cmpl 0.0;

        if $b4 <= 0 goto label5;

        $z2 = 1;

        goto label6;

     label5:
        $z2 = 0;

     label6:
        staticinvoke <org.apache.commons.lang.Validate: void isTrue(boolean,java.lang.String)>($z2, "need beta > 0");

        r0.<com.opengamma.analytics.financial.model.finitedifference.HyperbolicMeshing: double _l> = d0;

        r0.<com.opengamma.analytics.financial.model.finitedifference.HyperbolicMeshing: double _r> = d1;

        r0.<com.opengamma.analytics.financial.model.finitedifference.HyperbolicMeshing: double _alpha> = d2;

        $d4 = d1 - d0;

        $d5 = d3 * $d4;

        r0.<com.opengamma.analytics.financial.model.finitedifference.HyperbolicMeshing: double _beta> = $d5;

        $d7 = d0 - d2;

        $d6 = r0.<com.opengamma.analytics.financial.model.finitedifference.HyperbolicMeshing: double _beta>;

        $d8 = $d7 / $d6;

        $d9 = staticinvoke <com.opengamma.analytics.math.TrigonometricFunctionUtils: double asinh(double)>($d8);

        r0.<com.opengamma.analytics.financial.model.finitedifference.HyperbolicMeshing: double _delta> = $d9;

        $d11 = d1 - d2;

        $d10 = r0.<com.opengamma.analytics.financial.model.finitedifference.HyperbolicMeshing: double _beta>;

        $d12 = $d11 / $d10;

        $d13 = staticinvoke <com.opengamma.analytics.math.TrigonometricFunctionUtils: double asinh(double)>($d12);

        $d14 = r0.<com.opengamma.analytics.financial.model.finitedifference.HyperbolicMeshing: double _delta>;

        $d15 = $d13 - $d14;

        r0.<com.opengamma.analytics.financial.model.finitedifference.HyperbolicMeshing: double _gamma> = $d15;

        $r1 = new com.opengamma.analytics.financial.model.finitedifference.UniformMeshing;

        specialinvoke $r1.<com.opengamma.analytics.financial.model.finitedifference.UniformMeshing: void <init>(int)>(i0);

        r0.<com.opengamma.analytics.financial.model.finitedifference.HyperbolicMeshing: com.opengamma.analytics.financial.model.finitedifference.UniformMeshing _um> = $r1;

        r0.<com.opengamma.analytics.financial.model.finitedifference.HyperbolicMeshing: double[] _fpValues> = null;

        return;
    }

    public void <init>(double, double, double, int, double, double[])
    {
        com.opengamma.analytics.financial.model.finitedifference.HyperbolicMeshing r0;
        double d0, d1, d2, d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21, $d22, $d23, $d24, $d25;
        int i0, i1, i6;
        double[] r1, r2, $r4, $r5, $r7;
        byte $b2, $b3, $b4, $b5;
        com.opengamma.analytics.financial.model.finitedifference.UniformMeshing $r6;
        boolean $z0, $z1, $z2;

        r0 := @this: com.opengamma.analytics.financial.model.finitedifference.HyperbolicMeshing;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        d2 := @parameter2: double;

        i0 := @parameter3: int;

        d3 := @parameter4: double;

        r1 := @parameter5: double[];

        specialinvoke r0.<com.opengamma.analytics.financial.model.finitedifference.MeshingFunction: void <init>(int)>(i0);

        $b2 = d1 cmpl d0;

        if $b2 <= 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        staticinvoke <org.apache.commons.lang.Validate: void isTrue(boolean,java.lang.String)>($z0, "need xMax > xMin");

        $b3 = d1 cmpl d2;

        if $b3 < 0 goto label3;

        $b4 = d2 cmpl d0;

        if $b4 < 0 goto label3;

        $z1 = 1;

        goto label4;

     label3:
        $z1 = 0;

     label4:
        staticinvoke <org.apache.commons.lang.Validate: void isTrue(boolean,java.lang.String)>($z1, "need xCent between upper and lower bounds");

        $b5 = d3 cmpl 0.0;

        if $b5 <= 0 goto label5;

        $z2 = 1;

        goto label6;

     label5:
        $z2 = 0;

     label6:
        staticinvoke <org.apache.commons.lang.Validate: void isTrue(boolean,java.lang.String)>($z2, "need beta > 0");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "null fixedPoints");

        r0.<com.opengamma.analytics.financial.model.finitedifference.HyperbolicMeshing: double _l> = d0;

        r0.<com.opengamma.analytics.financial.model.finitedifference.HyperbolicMeshing: double _r> = d1;

        r0.<com.opengamma.analytics.financial.model.finitedifference.HyperbolicMeshing: double _alpha> = d2;

        $d4 = d1 - d0;

        $d5 = d3 * $d4;

        r0.<com.opengamma.analytics.financial.model.finitedifference.HyperbolicMeshing: double _beta> = $d5;

        $d7 = d0 - d2;

        $d6 = r0.<com.opengamma.analytics.financial.model.finitedifference.HyperbolicMeshing: double _beta>;

        $d8 = $d7 / $d6;

        $d9 = staticinvoke <com.opengamma.analytics.math.TrigonometricFunctionUtils: double asinh(double)>($d8);

        r0.<com.opengamma.analytics.financial.model.finitedifference.HyperbolicMeshing: double _delta> = $d9;

        $d11 = d1 - d2;

        $d10 = r0.<com.opengamma.analytics.financial.model.finitedifference.HyperbolicMeshing: double _beta>;

        $d12 = $d11 / $d10;

        $d13 = staticinvoke <com.opengamma.analytics.math.TrigonometricFunctionUtils: double asinh(double)>($d12);

        $d14 = r0.<com.opengamma.analytics.financial.model.finitedifference.HyperbolicMeshing: double _delta>;

        $d15 = $d13 - $d14;

        r0.<com.opengamma.analytics.financial.model.finitedifference.HyperbolicMeshing: double _gamma> = $d15;

        $r4 = staticinvoke <com.opengamma.analytics.math.FunctionUtils: double[] unique(double[])>(r1);

        r0.<com.opengamma.analytics.financial.model.finitedifference.HyperbolicMeshing: double[] _fpValues> = $r4;

        $r5 = r0.<com.opengamma.analytics.financial.model.finitedifference.HyperbolicMeshing: double[] _fpValues>;

        i1 = lengthof $r5;

        r2 = newarray (double)[i1];

        i6 = 0;

     label7:
        if i6 >= i1 goto label8;

        $r7 = r0.<com.opengamma.analytics.financial.model.finitedifference.HyperbolicMeshing: double[] _fpValues>;

        $d17 = $r7[i6];

        $d16 = r0.<com.opengamma.analytics.financial.model.finitedifference.HyperbolicMeshing: double _alpha>;

        $d19 = $d17 - $d16;

        $d18 = r0.<com.opengamma.analytics.financial.model.finitedifference.HyperbolicMeshing: double _beta>;

        $d20 = $d19 / $d18;

        $d21 = staticinvoke <com.opengamma.analytics.math.TrigonometricFunctionUtils: double asinh(double)>($d20);

        $d22 = r0.<com.opengamma.analytics.financial.model.finitedifference.HyperbolicMeshing: double _delta>;

        $d24 = $d21 - $d22;

        $d23 = r0.<com.opengamma.analytics.financial.model.finitedifference.HyperbolicMeshing: double _gamma>;

        $d25 = $d24 / $d23;

        r2[i6] = $d25;

        i6 = i6 + 1;

        goto label7;

     label8:
        $r6 = new com.opengamma.analytics.financial.model.finitedifference.UniformMeshing;

        specialinvoke $r6.<com.opengamma.analytics.financial.model.finitedifference.UniformMeshing: void <init>(int,double[])>(i0, r2);

        r0.<com.opengamma.analytics.financial.model.finitedifference.HyperbolicMeshing: com.opengamma.analytics.financial.model.finitedifference.UniformMeshing _um> = $r6;

        return;
    }

    public java.lang.Double evaluate(java.lang.Integer)
    {
        com.opengamma.analytics.financial.model.finitedifference.HyperbolicMeshing r0;
        java.lang.Integer r1;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, i8;
        double[] $r2, $r7;
        com.opengamma.analytics.financial.model.finitedifference.UniformMeshing $r3, $r6;
        java.lang.Double $r4, $r5, $r8, $r9, $r10;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, d12;
        boolean $z0;

        r0 := @this: com.opengamma.analytics.financial.model.finitedifference.HyperbolicMeshing;

        r1 := @parameter0: java.lang.Integer;

        $i0 = virtualinvoke r1.<java.lang.Integer: int intValue()>();

        if $i0 < 0 goto label1;

        $i5 = virtualinvoke r1.<java.lang.Integer: int intValue()>();

        $i6 = virtualinvoke r0.<com.opengamma.analytics.financial.model.finitedifference.HyperbolicMeshing: int getNumberOfPoints()>();

        if $i5 >= $i6 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        staticinvoke <org.apache.commons.lang.Validate: void isTrue(boolean,java.lang.String)>($z0, "i out of range");

        $i7 = virtualinvoke r1.<java.lang.Integer: int intValue()>();

        if $i7 != 0 goto label3;

        $d11 = r0.<com.opengamma.analytics.financial.model.finitedifference.HyperbolicMeshing: double _l>;

        $r10 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d11);

        return $r10;

     label3:
        $i1 = virtualinvoke r1.<java.lang.Integer: int intValue()>();

        $i2 = virtualinvoke r0.<com.opengamma.analytics.financial.model.finitedifference.HyperbolicMeshing: int getNumberOfPoints()>();

        $i3 = $i2 - 1;

        if $i1 != $i3 goto label4;

        $d10 = r0.<com.opengamma.analytics.financial.model.finitedifference.HyperbolicMeshing: double _r>;

        $r9 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d10);

        return $r9;

     label4:
        $r2 = r0.<com.opengamma.analytics.financial.model.finitedifference.HyperbolicMeshing: double[] _fpValues>;

        if $r2 == null goto label5;

        $r6 = r0.<com.opengamma.analytics.financial.model.finitedifference.HyperbolicMeshing: com.opengamma.analytics.financial.model.finitedifference.UniformMeshing _um>;

        $i4 = virtualinvoke r1.<java.lang.Integer: int intValue()>();

        i8 = virtualinvoke $r6.<com.opengamma.analytics.financial.model.finitedifference.UniformMeshing: int getFixedPointIndex(int)>($i4);

        if i8 < 0 goto label5;

        $r7 = r0.<com.opengamma.analytics.financial.model.finitedifference.HyperbolicMeshing: double[] _fpValues>;

        $d9 = $r7[i8];

        $r8 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d9);

        return $r8;

     label5:
        $r3 = r0.<com.opengamma.analytics.financial.model.finitedifference.HyperbolicMeshing: com.opengamma.analytics.financial.model.finitedifference.UniformMeshing _um>;

        $r4 = virtualinvoke $r3.<com.opengamma.analytics.financial.model.finitedifference.UniformMeshing: java.lang.Double evaluate(java.lang.Integer)>(r1);

        d12 = virtualinvoke $r4.<java.lang.Double: double doubleValue()>();

        $d4 = r0.<com.opengamma.analytics.financial.model.finitedifference.HyperbolicMeshing: double _alpha>;

        $d5 = r0.<com.opengamma.analytics.financial.model.finitedifference.HyperbolicMeshing: double _beta>;

        $d0 = r0.<com.opengamma.analytics.financial.model.finitedifference.HyperbolicMeshing: double _gamma>;

        $d2 = $d0 * d12;

        $d1 = r0.<com.opengamma.analytics.financial.model.finitedifference.HyperbolicMeshing: double _delta>;

        $d3 = $d2 + $d1;

        $d6 = staticinvoke <java.lang.Math: double sinh(double)>($d3);

        $d7 = $d5 * $d6;

        $d8 = $d4 + $d7;

        $r5 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d8);

        return $r5;
    }

    public volatile java.lang.Object evaluate(java.lang.Object)
    {
        com.opengamma.analytics.financial.model.finitedifference.HyperbolicMeshing r0;
        java.lang.Object r1;
        java.lang.Integer $r2;
        java.lang.Double $r3;

        r0 := @this: com.opengamma.analytics.financial.model.finitedifference.HyperbolicMeshing;

        r1 := @parameter0: java.lang.Object;

        $r2 = (java.lang.Integer) r1;

        $r3 = virtualinvoke r0.<com.opengamma.analytics.financial.model.finitedifference.HyperbolicMeshing: java.lang.Double evaluate(java.lang.Integer)>($r2);

        return $r3;
    }
}
