public final class com.opengamma.analytics.financial.forex.provider.ForexNonDeliverableForwardDiscountingMethod extends java.lang.Object
{
    private static final com.opengamma.analytics.financial.forex.provider.ForexNonDeliverableForwardDiscountingMethod INSTANCE;

    private void <init>()
    {
        com.opengamma.analytics.financial.forex.provider.ForexNonDeliverableForwardDiscountingMethod r0;

        r0 := @this: com.opengamma.analytics.financial.forex.provider.ForexNonDeliverableForwardDiscountingMethod;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static com.opengamma.analytics.financial.forex.provider.ForexNonDeliverableForwardDiscountingMethod getInstance()
    {
        com.opengamma.analytics.financial.forex.provider.ForexNonDeliverableForwardDiscountingMethod $r0;

        $r0 = <com.opengamma.analytics.financial.forex.provider.ForexNonDeliverableForwardDiscountingMethod: com.opengamma.analytics.financial.forex.provider.ForexNonDeliverableForwardDiscountingMethod INSTANCE>;

        return $r0;
    }

    public com.opengamma.util.money.MultipleCurrencyAmount presentValue(com.opengamma.analytics.financial.forex.derivative.ForexNonDeliverableForward, com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface)
    {
        com.opengamma.analytics.financial.forex.provider.ForexNonDeliverableForwardDiscountingMethod r0;
        com.opengamma.analytics.financial.forex.derivative.ForexNonDeliverableForward r1;
        com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface r2;
        double d0, d1, d2, d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10;
        com.opengamma.util.money.Currency $r5, $r7, $r9, $r10, $r11;
        java.lang.Double $r6, $r8;
        com.opengamma.util.money.MultipleCurrencyAmount $r12;

        r0 := @this: com.opengamma.analytics.financial.forex.provider.ForexNonDeliverableForwardDiscountingMethod;

        r1 := @parameter0: com.opengamma.analytics.financial.forex.derivative.ForexNonDeliverableForward;

        r2 := @parameter1: com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "Non deliverable forward");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, "Multi-curves provider");

        $r5 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexNonDeliverableForward: com.opengamma.util.money.Currency getCurrency2()>();

        $d4 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexNonDeliverableForward: double getPaymentTime()>();

        $r6 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d4);

        d0 = interfaceinvoke r2.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface: double getDiscountFactor(com.opengamma.util.money.Currency,java.lang.Double)>($r5, $r6);

        $r7 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexNonDeliverableForward: com.opengamma.util.money.Currency getCurrency1()>();

        $d5 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexNonDeliverableForward: double getPaymentTime()>();

        $r8 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d5);

        d1 = interfaceinvoke r2.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface: double getDiscountFactor(com.opengamma.util.money.Currency,java.lang.Double)>($r7, $r8);

        $r9 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexNonDeliverableForward: com.opengamma.util.money.Currency getCurrency2()>();

        $r10 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexNonDeliverableForward: com.opengamma.util.money.Currency getCurrency1()>();

        d2 = interfaceinvoke r2.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface: double getFxRate(com.opengamma.util.money.Currency,com.opengamma.util.money.Currency)>($r9, $r10);

        $d6 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexNonDeliverableForward: double getNotionalCurrency2()>();

        $d7 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexNonDeliverableForward: double getExchangeRate()>();

        $d8 = $d7 / d2;

        $d9 = $d8 * d1;

        $d10 = d0 - $d9;

        d3 = $d6 * $d10;

        $r11 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexNonDeliverableForward: com.opengamma.util.money.Currency getCurrency2()>();

        $r12 = staticinvoke <com.opengamma.util.money.MultipleCurrencyAmount: com.opengamma.util.money.MultipleCurrencyAmount of(com.opengamma.util.money.Currency,double)>($r11, d3);

        return $r12;
    }

    public com.opengamma.util.money.MultipleCurrencyAmount currencyExposure(com.opengamma.analytics.financial.forex.derivative.ForexNonDeliverableForward, com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface)
    {
        com.opengamma.analytics.financial.forex.provider.ForexNonDeliverableForwardDiscountingMethod r0;
        com.opengamma.analytics.financial.forex.derivative.ForexNonDeliverableForward r1;
        com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface r2;
        double d0, d1, d2, d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10;
        com.opengamma.util.money.Currency $r5, $r7, $r10, $r11;
        java.lang.Double $r6, $r8;
        com.opengamma.util.money.Currency[] $r9;
        double[] $r12;
        com.opengamma.util.money.MultipleCurrencyAmount $r13;

        r0 := @this: com.opengamma.analytics.financial.forex.provider.ForexNonDeliverableForwardDiscountingMethod;

        r1 := @parameter0: com.opengamma.analytics.financial.forex.derivative.ForexNonDeliverableForward;

        r2 := @parameter1: com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "Non deliverable forward");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, "Multi-curves provider");

        $r5 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexNonDeliverableForward: com.opengamma.util.money.Currency getCurrency2()>();

        $d4 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexNonDeliverableForward: double getPaymentTime()>();

        $r6 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d4);

        d0 = interfaceinvoke r2.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface: double getDiscountFactor(com.opengamma.util.money.Currency,java.lang.Double)>($r5, $r6);

        $r7 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexNonDeliverableForward: com.opengamma.util.money.Currency getCurrency1()>();

        $d5 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexNonDeliverableForward: double getPaymentTime()>();

        $r8 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d5);

        d1 = interfaceinvoke r2.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface: double getDiscountFactor(com.opengamma.util.money.Currency,java.lang.Double)>($r7, $r8);

        $d6 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexNonDeliverableForward: double getNotionalCurrency2()>();

        $d7 = neg $d6;

        $d8 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexNonDeliverableForward: double getExchangeRate()>();

        $d9 = $d7 * $d8;

        d2 = $d9 * d1;

        $d10 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexNonDeliverableForward: double getNotionalCurrency2()>();

        d3 = $d10 * d0;

        $r9 = newarray (com.opengamma.util.money.Currency)[2];

        $r10 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexNonDeliverableForward: com.opengamma.util.money.Currency getCurrency1()>();

        $r9[0] = $r10;

        $r11 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexNonDeliverableForward: com.opengamma.util.money.Currency getCurrency2()>();

        $r9[1] = $r11;

        $r12 = newarray (double)[2];

        $r12[0] = d2;

        $r12[1] = d3;

        $r13 = staticinvoke <com.opengamma.util.money.MultipleCurrencyAmount: com.opengamma.util.money.MultipleCurrencyAmount of(com.opengamma.util.money.Currency[],double[])>($r9, $r12);

        return $r13;
    }

    public double forwardForexRate(com.opengamma.analytics.financial.forex.derivative.ForexNonDeliverableForward, com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface)
    {
        com.opengamma.analytics.financial.forex.provider.ForexNonDeliverableForwardDiscountingMethod r0;
        com.opengamma.analytics.financial.forex.derivative.ForexNonDeliverableForward r1;
        com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface r2;
        double d0, d1, d2, $d3, $d4, $d5, $d6;
        com.opengamma.util.money.Currency $r5, $r7, $r9, $r10;
        java.lang.Double $r6, $r8;

        r0 := @this: com.opengamma.analytics.financial.forex.provider.ForexNonDeliverableForwardDiscountingMethod;

        r1 := @parameter0: com.opengamma.analytics.financial.forex.derivative.ForexNonDeliverableForward;

        r2 := @parameter1: com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "Non deliverable forward");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, "Multi-curves provider");

        $r5 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexNonDeliverableForward: com.opengamma.util.money.Currency getCurrency2()>();

        $d3 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexNonDeliverableForward: double getPaymentTime()>();

        $r6 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d3);

        d0 = interfaceinvoke r2.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface: double getDiscountFactor(com.opengamma.util.money.Currency,java.lang.Double)>($r5, $r6);

        $r7 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexNonDeliverableForward: com.opengamma.util.money.Currency getCurrency1()>();

        $d4 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexNonDeliverableForward: double getPaymentTime()>();

        $r8 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d4);

        d1 = interfaceinvoke r2.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface: double getDiscountFactor(com.opengamma.util.money.Currency,java.lang.Double)>($r7, $r8);

        $r9 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexNonDeliverableForward: com.opengamma.util.money.Currency getCurrency2()>();

        $r10 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexNonDeliverableForward: com.opengamma.util.money.Currency getCurrency1()>();

        d2 = interfaceinvoke r2.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface: double getFxRate(com.opengamma.util.money.Currency,com.opengamma.util.money.Currency)>($r9, $r10);

        $d5 = d2 * d0;

        $d6 = $d5 / d1;

        return $d6;
    }

    public com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyMulticurveSensitivity presentValueCurveSensitivity(com.opengamma.analytics.financial.forex.derivative.ForexNonDeliverableForward, com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface)
    {
        com.opengamma.analytics.financial.forex.provider.ForexNonDeliverableForwardDiscountingMethod r0;
        com.opengamma.analytics.financial.forex.derivative.ForexNonDeliverableForward r1;
        com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface r2;
        double d0, d1, d2, d4, d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21, $d22, $d23;
        com.opengamma.analytics.financial.provider.sensitivity.multicurve.MulticurveSensitivity r6;
        com.opengamma.util.money.Currency $r9, $r11, $r13, $r14, $r18, $r23, $r26;
        java.lang.Double $r10, $r12;
        java.util.HashMap $r15;
        java.util.ArrayList $r16, $r21;
        com.opengamma.util.tuple.DoublesPair $r17, $r22;
        java.lang.String $r19, $r24;
        com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyMulticurveSensitivity $r27;

        r0 := @this: com.opengamma.analytics.financial.forex.provider.ForexNonDeliverableForwardDiscountingMethod;

        r1 := @parameter0: com.opengamma.analytics.financial.forex.derivative.ForexNonDeliverableForward;

        r2 := @parameter1: com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "Non deliverable forward");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, "Multi-curves provider");

        $r9 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexNonDeliverableForward: com.opengamma.util.money.Currency getCurrency2()>();

        $d6 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexNonDeliverableForward: double getPaymentTime()>();

        $r10 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d6);

        d0 = interfaceinvoke r2.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface: double getDiscountFactor(com.opengamma.util.money.Currency,java.lang.Double)>($r9, $r10);

        $r11 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexNonDeliverableForward: com.opengamma.util.money.Currency getCurrency1()>();

        $d7 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexNonDeliverableForward: double getPaymentTime()>();

        $r12 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d7);

        d1 = interfaceinvoke r2.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface: double getDiscountFactor(com.opengamma.util.money.Currency,java.lang.Double)>($r11, $r12);

        $r13 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexNonDeliverableForward: com.opengamma.util.money.Currency getCurrency2()>();

        $r14 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexNonDeliverableForward: com.opengamma.util.money.Currency getCurrency1()>();

        d2 = interfaceinvoke r2.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface: double getFxRate(com.opengamma.util.money.Currency,com.opengamma.util.money.Currency)>($r13, $r14);

        $d8 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexNonDeliverableForward: double getNotionalCurrency2()>();

        $d9 = neg $d8;

        $d10 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexNonDeliverableForward: double getExchangeRate()>();

        $d11 = $d9 * $d10;

        $d12 = $d11 / d2;

        d4 = $d12 * 1.0;

        $d13 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexNonDeliverableForward: double getNotionalCurrency2()>();

        d5 = $d13 * 1.0;

        $r15 = new java.util.HashMap;

        specialinvoke $r15.<java.util.HashMap: void <init>()>();

        $r16 = new java.util.ArrayList;

        specialinvoke $r16.<java.util.ArrayList: void <init>()>();

        $d14 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexNonDeliverableForward: double getPaymentTime()>();

        $d15 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexNonDeliverableForward: double getPaymentTime()>();

        $d16 = neg $d15;

        $d17 = $d16 * d1;

        $d18 = $d17 * d4;

        $r17 = staticinvoke <com.opengamma.util.tuple.DoublesPair: com.opengamma.util.tuple.DoublesPair of(double,double)>($d14, $d18);

        interfaceinvoke $r16.<java.util.List: boolean add(java.lang.Object)>($r17);

        $r18 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexNonDeliverableForward: com.opengamma.util.money.Currency getCurrency1()>();

        $r19 = interfaceinvoke r2.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface: java.lang.String getName(com.opengamma.util.money.Currency)>($r18);

        interfaceinvoke $r15.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r19, $r16);

        $r21 = new java.util.ArrayList;

        specialinvoke $r21.<java.util.ArrayList: void <init>()>();

        $d19 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexNonDeliverableForward: double getPaymentTime()>();

        $d20 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexNonDeliverableForward: double getPaymentTime()>();

        $d21 = neg $d20;

        $d22 = $d21 * d0;

        $d23 = $d22 * d5;

        $r22 = staticinvoke <com.opengamma.util.tuple.DoublesPair: com.opengamma.util.tuple.DoublesPair of(double,double)>($d19, $d23);

        interfaceinvoke $r21.<java.util.List: boolean add(java.lang.Object)>($r22);

        $r23 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexNonDeliverableForward: com.opengamma.util.money.Currency getCurrency2()>();

        $r24 = interfaceinvoke r2.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface: java.lang.String getName(com.opengamma.util.money.Currency)>($r23);

        interfaceinvoke $r15.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r24, $r21);

        r6 = staticinvoke <com.opengamma.analytics.financial.provider.sensitivity.multicurve.MulticurveSensitivity: com.opengamma.analytics.financial.provider.sensitivity.multicurve.MulticurveSensitivity ofYieldDiscounting(java.util.Map)>($r15);

        $r26 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexNonDeliverableForward: com.opengamma.util.money.Currency getCurrency2()>();

        $r27 = staticinvoke <com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyMulticurveSensitivity: com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyMulticurveSensitivity of(com.opengamma.util.money.Currency,com.opengamma.analytics.financial.provider.sensitivity.multicurve.MulticurveSensitivity)>($r26, r6);

        return $r27;
    }

    static void <clinit>()
    {
        com.opengamma.analytics.financial.forex.provider.ForexNonDeliverableForwardDiscountingMethod $r0;

        $r0 = new com.opengamma.analytics.financial.forex.provider.ForexNonDeliverableForwardDiscountingMethod;

        specialinvoke $r0.<com.opengamma.analytics.financial.forex.provider.ForexNonDeliverableForwardDiscountingMethod: void <init>()>();

        <com.opengamma.analytics.financial.forex.provider.ForexNonDeliverableForwardDiscountingMethod: com.opengamma.analytics.financial.forex.provider.ForexNonDeliverableForwardDiscountingMethod INSTANCE> = $r0;

        return;
    }
}
