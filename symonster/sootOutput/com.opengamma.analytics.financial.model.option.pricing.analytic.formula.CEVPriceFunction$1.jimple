class com.opengamma.analytics.financial.model.option.pricing.analytic.formula.CEVPriceFunction$1 extends com.opengamma.analytics.math.function.Function1D
{
    final com.opengamma.analytics.financial.model.option.pricing.analytic.formula.EuropeanVanillaOption val$option;
    final double val$t;
    final double val$k;
    final boolean val$isCall;
    final com.opengamma.analytics.financial.model.option.pricing.analytic.formula.CEVPriceFunction this$0;

    void <init>(com.opengamma.analytics.financial.model.option.pricing.analytic.formula.CEVPriceFunction, com.opengamma.analytics.financial.model.option.pricing.analytic.formula.EuropeanVanillaOption, double, double, boolean)
    {
        com.opengamma.analytics.financial.model.option.pricing.analytic.formula.CEVPriceFunction$1 r0;
        com.opengamma.analytics.financial.model.option.pricing.analytic.formula.CEVPriceFunction r1;
        com.opengamma.analytics.financial.model.option.pricing.analytic.formula.EuropeanVanillaOption r2;
        double d0, d1;
        boolean z0;

        r0 := @this: com.opengamma.analytics.financial.model.option.pricing.analytic.formula.CEVPriceFunction$1;

        r1 := @parameter0: com.opengamma.analytics.financial.model.option.pricing.analytic.formula.CEVPriceFunction;

        r2 := @parameter1: com.opengamma.analytics.financial.model.option.pricing.analytic.formula.EuropeanVanillaOption;

        d0 := @parameter2: double;

        d1 := @parameter3: double;

        z0 := @parameter4: boolean;

        r0.<com.opengamma.analytics.financial.model.option.pricing.analytic.formula.CEVPriceFunction$1: com.opengamma.analytics.financial.model.option.pricing.analytic.formula.CEVPriceFunction this$0> = r1;

        r0.<com.opengamma.analytics.financial.model.option.pricing.analytic.formula.CEVPriceFunction$1: com.opengamma.analytics.financial.model.option.pricing.analytic.formula.EuropeanVanillaOption val$option> = r2;

        r0.<com.opengamma.analytics.financial.model.option.pricing.analytic.formula.CEVPriceFunction$1: double val$t> = d0;

        r0.<com.opengamma.analytics.financial.model.option.pricing.analytic.formula.CEVPriceFunction$1: double val$k> = d1;

        r0.<com.opengamma.analytics.financial.model.option.pricing.analytic.formula.CEVPriceFunction$1: boolean val$isCall> = z0;

        specialinvoke r0.<com.opengamma.analytics.math.function.Function1D: void <init>()>();

        return;
    }

    public java.lang.Double evaluate(com.opengamma.analytics.financial.model.option.pricing.analytic.formula.CEVFunctionData)
    {
        com.opengamma.analytics.financial.model.option.pricing.analytic.formula.CEVPriceFunction$1 r0;
        com.opengamma.analytics.financial.model.option.pricing.analytic.formula.CEVFunctionData r1;
        double d0, d1, d2, d3, d4, d5, d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21, $d22, $d23, $d24, $d25, $d26, $d27, $d28, $d29, $d30, $d31, $d32, $d33, $d34, $d35, $d36, $d37, $d38, $d39, $d40, $d41, $d42, $d43, $d44, $d45, $d46, $d47, $d48, $d49, $d50, $d51, $d52, $d53, d54;
        byte $b0, $b1, $b2;
        com.opengamma.analytics.math.statistics.distribution.NonCentralChiSquaredDistribution $r2, $r3, $r10, $r11;
        boolean $z0, $z1;
        java.lang.Double $r4, $r5, $r6, $r7, $r8, $r9, $r12, $r13, $r14, $r15, $r16, $r17, $r22, $r27;
        com.opengamma.analytics.financial.model.option.pricing.analytic.formula.NormalPriceFunction $r18;
        com.opengamma.analytics.financial.model.option.pricing.analytic.formula.EuropeanVanillaOption $r19, $r24;
        com.opengamma.analytics.financial.model.option.pricing.analytic.formula.NormalFunctionData $r20;
        java.lang.Object $r21, $r26;
        com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackPriceFunction $r23;
        com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackFunctionData $r25;
        com.opengamma.analytics.math.function.Function1D r28, r29;

        r0 := @this: com.opengamma.analytics.financial.model.option.pricing.analytic.formula.CEVPriceFunction$1;

        r1 := @parameter0: com.opengamma.analytics.financial.model.option.pricing.analytic.formula.CEVFunctionData;

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object,java.lang.String)>(r1, "data");

        d0 = virtualinvoke r1.<com.opengamma.analytics.financial.model.option.pricing.analytic.formula.CEVFunctionData: double getForward()>();

        d1 = virtualinvoke r1.<com.opengamma.analytics.financial.model.option.pricing.analytic.formula.CEVFunctionData: double getNumeraire()>();

        d2 = virtualinvoke r1.<com.opengamma.analytics.financial.model.option.pricing.analytic.formula.CEVFunctionData: double getVolatility()>();

        d3 = virtualinvoke r1.<com.opengamma.analytics.financial.model.option.pricing.analytic.formula.CEVFunctionData: double getBeta()>();

        $b0 = d3 cmpl 1.0;

        if $b0 != 0 goto label1;

        $r23 = staticinvoke <com.opengamma.analytics.financial.model.option.pricing.analytic.formula.CEVPriceFunction: com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackPriceFunction access$000()>();

        $r24 = r0.<com.opengamma.analytics.financial.model.option.pricing.analytic.formula.CEVPriceFunction$1: com.opengamma.analytics.financial.model.option.pricing.analytic.formula.EuropeanVanillaOption val$option>;

        r28 = virtualinvoke $r23.<com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackPriceFunction: com.opengamma.analytics.math.function.Function1D getPriceFunction(com.opengamma.analytics.financial.model.option.pricing.analytic.formula.EuropeanVanillaOption)>($r24);

        $r25 = new com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackFunctionData;

        specialinvoke $r25.<com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackFunctionData: void <init>(double,double,double)>(d0, d1, d2);

        $r26 = virtualinvoke r28.<com.opengamma.analytics.math.function.Function1D: java.lang.Object evaluate(java.lang.Object)>($r25);

        $r27 = (java.lang.Double) $r26;

        return $r27;

     label1:
        $b1 = d3 cmpl 0.0;

        if $b1 != 0 goto label2;

        $r18 = staticinvoke <com.opengamma.analytics.financial.model.option.pricing.analytic.formula.CEVPriceFunction: com.opengamma.analytics.financial.model.option.pricing.analytic.formula.NormalPriceFunction access$100()>();

        $r19 = r0.<com.opengamma.analytics.financial.model.option.pricing.analytic.formula.CEVPriceFunction$1: com.opengamma.analytics.financial.model.option.pricing.analytic.formula.EuropeanVanillaOption val$option>;

        r29 = virtualinvoke $r18.<com.opengamma.analytics.financial.model.option.pricing.analytic.formula.NormalPriceFunction: com.opengamma.analytics.math.function.Function1D getPriceFunction(com.opengamma.analytics.financial.model.option.pricing.analytic.formula.EuropeanVanillaOption)>($r19);

        $r20 = new com.opengamma.analytics.financial.model.option.pricing.analytic.formula.NormalFunctionData;

        specialinvoke $r20.<com.opengamma.analytics.financial.model.option.pricing.analytic.formula.NormalFunctionData: void <init>(double,double,double)>(d0, d1, d2);

        $r21 = virtualinvoke r29.<com.opengamma.analytics.math.function.Function1D: java.lang.Object evaluate(java.lang.Object)>($r20);

        $r22 = (java.lang.Double) $r21;

        return $r22;

     label2:
        $d7 = 1.0 - d3;

        d54 = 1.0 / $d7;

        $d8 = d54 * d54;

        $d9 = $d8 / d2;

        $d11 = $d9 / d2;

        $d10 = r0.<com.opengamma.analytics.financial.model.option.pricing.analytic.formula.CEVPriceFunction$1: double val$t>;

        d4 = $d11 / $d10;

        $d14 = r0.<com.opengamma.analytics.financial.model.option.pricing.analytic.formula.CEVPriceFunction$1: double val$k>;

        $d12 = 1.0 - d3;

        $d13 = 2.0 * $d12;

        $d15 = staticinvoke <java.lang.Math: double pow(double,double)>($d14, $d13);

        d5 = $d15 * d4;

        $d16 = 1.0 - d3;

        $d17 = 2.0 * $d16;

        $d18 = staticinvoke <java.lang.Math: double pow(double,double)>(d0, $d17);

        d6 = $d18 * d4;

        $b2 = d3 cmpg 1.0;

        if $b2 >= 0 goto label4;

        $r10 = new com.opengamma.analytics.math.statistics.distribution.NonCentralChiSquaredDistribution;

        $d37 = d54 + 2.0;

        specialinvoke $r10.<com.opengamma.analytics.math.statistics.distribution.NonCentralChiSquaredDistribution: void <init>(double,double)>($d37, d6);

        $r11 = new com.opengamma.analytics.math.statistics.distribution.NonCentralChiSquaredDistribution;

        specialinvoke $r11.<com.opengamma.analytics.math.statistics.distribution.NonCentralChiSquaredDistribution: void <init>(double,double)>(d54, d5);

        $z1 = r0.<com.opengamma.analytics.financial.model.option.pricing.analytic.formula.CEVPriceFunction$1: boolean val$isCall>;

        if $z1 == 0 goto label3;

        $r15 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d5);

        $d46 = virtualinvoke $r10.<com.opengamma.analytics.math.statistics.distribution.NonCentralChiSquaredDistribution: double getCDF(java.lang.Double)>($r15);

        $d47 = 1.0 - $d46;

        $d48 = d0 * $d47;

        $d49 = r0.<com.opengamma.analytics.financial.model.option.pricing.analytic.formula.CEVPriceFunction$1: double val$k>;

        $r16 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d6);

        $d50 = virtualinvoke $r11.<com.opengamma.analytics.math.statistics.distribution.NonCentralChiSquaredDistribution: double getCDF(java.lang.Double)>($r16);

        $d51 = $d49 * $d50;

        $d52 = $d48 - $d51;

        $d53 = d1 * $d52;

        $r17 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d53);

        return $r17;

     label3:
        $d38 = r0.<com.opengamma.analytics.financial.model.option.pricing.analytic.formula.CEVPriceFunction$1: double val$k>;

        $r12 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d6);

        $d39 = virtualinvoke $r11.<com.opengamma.analytics.math.statistics.distribution.NonCentralChiSquaredDistribution: double getCDF(java.lang.Double)>($r12);

        $d40 = 1.0 - $d39;

        $d41 = $d38 * $d40;

        $r13 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d5);

        $d42 = virtualinvoke $r10.<com.opengamma.analytics.math.statistics.distribution.NonCentralChiSquaredDistribution: double getCDF(java.lang.Double)>($r13);

        $d43 = d0 * $d42;

        $d44 = $d41 - $d43;

        $d45 = d1 * $d44;

        $r14 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d45);

        return $r14;

     label4:
        $r2 = new com.opengamma.analytics.math.statistics.distribution.NonCentralChiSquaredDistribution;

        $d19 = neg d54;

        specialinvoke $r2.<com.opengamma.analytics.math.statistics.distribution.NonCentralChiSquaredDistribution: void <init>(double,double)>($d19, d5);

        $r3 = new com.opengamma.analytics.math.statistics.distribution.NonCentralChiSquaredDistribution;

        $d20 = 2.0 - d54;

        specialinvoke $r3.<com.opengamma.analytics.math.statistics.distribution.NonCentralChiSquaredDistribution: void <init>(double,double)>($d20, d6);

        $z0 = r0.<com.opengamma.analytics.financial.model.option.pricing.analytic.formula.CEVPriceFunction$1: boolean val$isCall>;

        if $z0 == 0 goto label5;

        $r7 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d6);

        $d29 = virtualinvoke $r2.<com.opengamma.analytics.math.statistics.distribution.NonCentralChiSquaredDistribution: double getCDF(java.lang.Double)>($r7);

        $d30 = 1.0 - $d29;

        $d31 = d0 * $d30;

        $d32 = r0.<com.opengamma.analytics.financial.model.option.pricing.analytic.formula.CEVPriceFunction$1: double val$k>;

        $r8 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d5);

        $d33 = virtualinvoke $r3.<com.opengamma.analytics.math.statistics.distribution.NonCentralChiSquaredDistribution: double getCDF(java.lang.Double)>($r8);

        $d34 = $d32 * $d33;

        $d35 = $d31 - $d34;

        $d36 = d1 * $d35;

        $r9 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d36);

        return $r9;

     label5:
        $d21 = r0.<com.opengamma.analytics.financial.model.option.pricing.analytic.formula.CEVPriceFunction$1: double val$k>;

        $r4 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d5);

        $d22 = virtualinvoke $r3.<com.opengamma.analytics.math.statistics.distribution.NonCentralChiSquaredDistribution: double getCDF(java.lang.Double)>($r4);

        $d23 = 1.0 - $d22;

        $d24 = $d21 * $d23;

        $r5 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d6);

        $d25 = virtualinvoke $r2.<com.opengamma.analytics.math.statistics.distribution.NonCentralChiSquaredDistribution: double getCDF(java.lang.Double)>($r5);

        $d26 = d0 * $d25;

        $d27 = $d24 - $d26;

        $d28 = d1 * $d27;

        $r6 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d28);

        return $r6;
    }

    public volatile java.lang.Object evaluate(java.lang.Object)
    {
        com.opengamma.analytics.financial.model.option.pricing.analytic.formula.CEVPriceFunction$1 r0;
        java.lang.Object r1;
        com.opengamma.analytics.financial.model.option.pricing.analytic.formula.CEVFunctionData $r2;
        java.lang.Double $r3;

        r0 := @this: com.opengamma.analytics.financial.model.option.pricing.analytic.formula.CEVPriceFunction$1;

        r1 := @parameter0: java.lang.Object;

        $r2 = (com.opengamma.analytics.financial.model.option.pricing.analytic.formula.CEVFunctionData) r1;

        $r3 = virtualinvoke r0.<com.opengamma.analytics.financial.model.option.pricing.analytic.formula.CEVPriceFunction$1: java.lang.Double evaluate(com.opengamma.analytics.financial.model.option.pricing.analytic.formula.CEVFunctionData)>($r2);

        return $r3;
    }
}
