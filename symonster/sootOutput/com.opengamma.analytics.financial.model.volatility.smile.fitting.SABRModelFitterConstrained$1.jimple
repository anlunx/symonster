class com.opengamma.analytics.financial.model.volatility.smile.fitting.SABRModelFitterConstrained$1 extends com.opengamma.analytics.math.function.Function1D
{
    final com.opengamma.analytics.math.minimization.NonLinearParameterTransforms val$t;
    final com.opengamma.analytics.financial.model.volatility.smile.fitting.SABRModelFitterConstrained this$0;

    void <init>(com.opengamma.analytics.financial.model.volatility.smile.fitting.SABRModelFitterConstrained, com.opengamma.analytics.math.minimization.NonLinearParameterTransforms)
    {
        com.opengamma.analytics.financial.model.volatility.smile.fitting.SABRModelFitterConstrained$1 r0;
        com.opengamma.analytics.financial.model.volatility.smile.fitting.SABRModelFitterConstrained r1;
        com.opengamma.analytics.math.minimization.NonLinearParameterTransforms r2;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.smile.fitting.SABRModelFitterConstrained$1;

        r1 := @parameter0: com.opengamma.analytics.financial.model.volatility.smile.fitting.SABRModelFitterConstrained;

        r2 := @parameter1: com.opengamma.analytics.math.minimization.NonLinearParameterTransforms;

        r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.SABRModelFitterConstrained$1: com.opengamma.analytics.financial.model.volatility.smile.fitting.SABRModelFitterConstrained this$0> = r1;

        r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.SABRModelFitterConstrained$1: com.opengamma.analytics.math.minimization.NonLinearParameterTransforms val$t> = r2;

        specialinvoke r0.<com.opengamma.analytics.math.function.Function1D: void <init>()>();

        return;
    }

    public java.lang.Boolean evaluate(com.opengamma.analytics.math.matrix.DoubleMatrix1D)
    {
        com.opengamma.analytics.financial.model.volatility.smile.fitting.SABRModelFitterConstrained$1 r0;
        com.opengamma.analytics.math.matrix.DoubleMatrix1D r1, r2;
        double d0, d1, d2, d3;
        com.opengamma.analytics.math.minimization.NonLinearParameterTransforms $r3;
        int[] $r4, $r6, $r8, $r10;
        java.lang.Double $r5, $r7, $r9, $r11;
        byte $b0, $b1, $b2, $b3, $b4;
        boolean $z0;
        java.lang.Boolean $r12;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.smile.fitting.SABRModelFitterConstrained$1;

        r1 := @parameter0: com.opengamma.analytics.math.matrix.DoubleMatrix1D;

        $r3 = r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.SABRModelFitterConstrained$1: com.opengamma.analytics.math.minimization.NonLinearParameterTransforms val$t>;

        r2 = interfaceinvoke $r3.<com.opengamma.analytics.math.minimization.NonLinearParameterTransforms: com.opengamma.analytics.math.matrix.DoubleMatrix1D inverseTransform(com.opengamma.analytics.math.matrix.DoubleMatrix1D)>(r1);

        $r4 = newarray (int)[1];

        $r4[0] = 0;

        $r5 = virtualinvoke r2.<com.opengamma.analytics.math.matrix.DoubleMatrix1D: java.lang.Double getEntry(int[])>($r4);

        d0 = virtualinvoke $r5.<java.lang.Double: double doubleValue()>();

        $r6 = newarray (int)[1];

        $r6[0] = 1;

        $r7 = virtualinvoke r2.<com.opengamma.analytics.math.matrix.DoubleMatrix1D: java.lang.Double getEntry(int[])>($r6);

        d1 = virtualinvoke $r7.<java.lang.Double: double doubleValue()>();

        $r8 = newarray (int)[1];

        $r8[0] = 2;

        $r9 = virtualinvoke r2.<com.opengamma.analytics.math.matrix.DoubleMatrix1D: java.lang.Double getEntry(int[])>($r8);

        d2 = virtualinvoke $r9.<java.lang.Double: double doubleValue()>();

        $r10 = newarray (int)[1];

        $r10[0] = 3;

        $r11 = virtualinvoke r2.<com.opengamma.analytics.math.matrix.DoubleMatrix1D: java.lang.Double getEntry(int[])>($r10);

        d3 = virtualinvoke $r11.<java.lang.Double: double doubleValue()>();

        $b0 = d0 cmpl 0.0;

        if $b0 < 0 goto label1;

        $b1 = d1 cmpl 0.0;

        if $b1 < 0 goto label1;

        $b2 = d2 cmpl -1.0;

        if $b2 < 0 goto label1;

        $b3 = d2 cmpg 1.0;

        if $b3 > 0 goto label1;

        $b4 = d3 cmpl 0.0;

        if $b4 < 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        $r12 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        return $r12;
    }

    public volatile java.lang.Object evaluate(java.lang.Object)
    {
        com.opengamma.analytics.financial.model.volatility.smile.fitting.SABRModelFitterConstrained$1 r0;
        java.lang.Object r1;
        com.opengamma.analytics.math.matrix.DoubleMatrix1D $r2;
        java.lang.Boolean $r3;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.smile.fitting.SABRModelFitterConstrained$1;

        r1 := @parameter0: java.lang.Object;

        $r2 = (com.opengamma.analytics.math.matrix.DoubleMatrix1D) r1;

        $r3 = virtualinvoke r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.SABRModelFitterConstrained$1: java.lang.Boolean evaluate(com.opengamma.analytics.math.matrix.DoubleMatrix1D)>($r2);

        return $r3;
    }
}
