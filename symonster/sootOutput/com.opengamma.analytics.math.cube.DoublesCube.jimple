public abstract class com.opengamma.analytics.math.cube.DoublesCube extends com.opengamma.analytics.math.cube.Cube
{
    private final int _n;
    private final double[] _xData;
    private final double[] _yData;
    private final double[] _zData;
    private final double[] _values;
    private java.lang.Double[] _xDataObject;
    private java.lang.Double[] _yDataObject;
    private java.lang.Double[] _zDataObject;
    private java.lang.Double[] _valuesObject;

    public void <init>(double[], double[], double[], double[])
    {
        com.opengamma.analytics.math.cube.DoublesCube r0;
        double[] r1, r2, r3, r4, $r5, $r6, $r7, $r8;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10;
        boolean $z0, $z1, $z2;

        r0 := @this: com.opengamma.analytics.math.cube.DoublesCube;

        r1 := @parameter0: double[];

        r2 := @parameter1: double[];

        r3 := @parameter2: double[];

        r4 := @parameter3: double[];

        specialinvoke r0.<com.opengamma.analytics.math.cube.Cube: void <init>()>();

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object,java.lang.String)>(r1, "x data");

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object,java.lang.String)>(r2, "y data");

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object,java.lang.String)>(r3, "z data");

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object,java.lang.String)>(r4, "values");

        $i0 = lengthof r1;

        r0.<com.opengamma.analytics.math.cube.DoublesCube: int _n> = $i0;

        $i2 = r0.<com.opengamma.analytics.math.cube.DoublesCube: int _n>;

        $i1 = lengthof r2;

        if $i2 != $i1 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        staticinvoke <org.apache.commons.lang.Validate: void isTrue(boolean)>($z0);

        $i4 = r0.<com.opengamma.analytics.math.cube.DoublesCube: int _n>;

        $i3 = lengthof r3;

        if $i4 != $i3 goto label3;

        $z1 = 1;

        goto label4;

     label3:
        $z1 = 0;

     label4:
        staticinvoke <org.apache.commons.lang.Validate: void isTrue(boolean)>($z1);

        $i6 = r0.<com.opengamma.analytics.math.cube.DoublesCube: int _n>;

        $i5 = lengthof r4;

        if $i6 != $i5 goto label5;

        $z2 = 1;

        goto label6;

     label5:
        $z2 = 0;

     label6:
        staticinvoke <org.apache.commons.lang.Validate: void isTrue(boolean)>($z2);

        $i7 = r0.<com.opengamma.analytics.math.cube.DoublesCube: int _n>;

        $r5 = staticinvoke <java.util.Arrays: double[] copyOf(double[],int)>(r1, $i7);

        r0.<com.opengamma.analytics.math.cube.DoublesCube: double[] _xData> = $r5;

        $i8 = r0.<com.opengamma.analytics.math.cube.DoublesCube: int _n>;

        $r6 = staticinvoke <java.util.Arrays: double[] copyOf(double[],int)>(r2, $i8);

        r0.<com.opengamma.analytics.math.cube.DoublesCube: double[] _yData> = $r6;

        $i9 = r0.<com.opengamma.analytics.math.cube.DoublesCube: int _n>;

        $r7 = staticinvoke <java.util.Arrays: double[] copyOf(double[],int)>(r3, $i9);

        r0.<com.opengamma.analytics.math.cube.DoublesCube: double[] _zData> = $r7;

        $i10 = r0.<com.opengamma.analytics.math.cube.DoublesCube: int _n>;

        $r8 = staticinvoke <java.util.Arrays: double[] copyOf(double[],int)>(r4, $i10);

        r0.<com.opengamma.analytics.math.cube.DoublesCube: double[] _values> = $r8;

        return;
    }

    public void <init>(java.lang.Double[], java.lang.Double[], java.lang.Double[], java.lang.Double[])
    {
        com.opengamma.analytics.math.cube.DoublesCube r0;
        java.lang.Double[] r1, r2, r3, r4;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, i11, $i12;
        double[] $r5, $r6, $r7, $r8, $r34, $r36, $r38, $r40;
        java.lang.StringBuilder $r9, $r11, $r12, $r13, $r15, $r17, $r18, $r19, $r21, $r23, $r24, $r25, $r27, $r29, $r30, $r31;
        java.lang.Double $r10, $r16, $r22, $r28, $r33, $r35, $r37, $r39;
        java.lang.String $r14, $r20, $r26, $r32;
        double $d0, $d1, $d2, $d3;
        boolean $z0, $z1, $z2;

        r0 := @this: com.opengamma.analytics.math.cube.DoublesCube;

        r1 := @parameter0: java.lang.Double[];

        r2 := @parameter1: java.lang.Double[];

        r3 := @parameter2: java.lang.Double[];

        r4 := @parameter3: java.lang.Double[];

        specialinvoke r0.<com.opengamma.analytics.math.cube.Cube: void <init>()>();

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object,java.lang.String)>(r1, "x data");

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object,java.lang.String)>(r2, "y data");

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object,java.lang.String)>(r3, "z data");

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object,java.lang.String)>(r4, "data");

        $i0 = lengthof r1;

        r0.<com.opengamma.analytics.math.cube.DoublesCube: int _n> = $i0;

        $i2 = r0.<com.opengamma.analytics.math.cube.DoublesCube: int _n>;

        $i1 = lengthof r2;

        if $i2 != $i1 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        staticinvoke <org.apache.commons.lang.Validate: void isTrue(boolean)>($z0);

        $i4 = r0.<com.opengamma.analytics.math.cube.DoublesCube: int _n>;

        $i3 = lengthof r3;

        if $i4 != $i3 goto label3;

        $z1 = 1;

        goto label4;

     label3:
        $z1 = 0;

     label4:
        staticinvoke <org.apache.commons.lang.Validate: void isTrue(boolean)>($z1);

        $i6 = r0.<com.opengamma.analytics.math.cube.DoublesCube: int _n>;

        $i5 = lengthof r4;

        if $i6 != $i5 goto label5;

        $z2 = 1;

        goto label6;

     label5:
        $z2 = 0;

     label6:
        staticinvoke <org.apache.commons.lang.Validate: void isTrue(boolean)>($z2);

        $i7 = r0.<com.opengamma.analytics.math.cube.DoublesCube: int _n>;

        $r5 = newarray (double)[$i7];

        r0.<com.opengamma.analytics.math.cube.DoublesCube: double[] _xData> = $r5;

        $i8 = r0.<com.opengamma.analytics.math.cube.DoublesCube: int _n>;

        $r6 = newarray (double)[$i8];

        r0.<com.opengamma.analytics.math.cube.DoublesCube: double[] _yData> = $r6;

        $i9 = r0.<com.opengamma.analytics.math.cube.DoublesCube: int _n>;

        $r7 = newarray (double)[$i9];

        r0.<com.opengamma.analytics.math.cube.DoublesCube: double[] _zData> = $r7;

        $i10 = r0.<com.opengamma.analytics.math.cube.DoublesCube: int _n>;

        $r8 = newarray (double)[$i10];

        r0.<com.opengamma.analytics.math.cube.DoublesCube: double[] _values> = $r8;

        i11 = 0;

     label7:
        $i12 = r0.<com.opengamma.analytics.math.cube.DoublesCube: int _n>;

        if i11 >= $i12 goto label8;

        $r10 = r1[i11];

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("element ");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i11);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" of x data");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object,java.lang.String)>($r10, $r14);

        $r16 = r2[i11];

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("element ");

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i11);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" of y data");

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object,java.lang.String)>($r16, $r20);

        $r22 = r3[i11];

        $r21 = new java.lang.StringBuilder;

        specialinvoke $r21.<java.lang.StringBuilder: void <init>()>();

        $r23 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("element ");

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i11);

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" of z data");

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object,java.lang.String)>($r22, $r26);

        $r28 = r4[i11];

        $r27 = new java.lang.StringBuilder;

        specialinvoke $r27.<java.lang.StringBuilder: void <init>()>();

        $r29 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("element ");

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i11);

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" of data");

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object,java.lang.String)>($r28, $r32);

        $r34 = r0.<com.opengamma.analytics.math.cube.DoublesCube: double[] _xData>;

        $r33 = r1[i11];

        $d0 = virtualinvoke $r33.<java.lang.Double: double doubleValue()>();

        $r34[i11] = $d0;

        $r36 = r0.<com.opengamma.analytics.math.cube.DoublesCube: double[] _yData>;

        $r35 = r2[i11];

        $d1 = virtualinvoke $r35.<java.lang.Double: double doubleValue()>();

        $r36[i11] = $d1;

        $r38 = r0.<com.opengamma.analytics.math.cube.DoublesCube: double[] _zData>;

        $r37 = r3[i11];

        $d2 = virtualinvoke $r37.<java.lang.Double: double doubleValue()>();

        $r38[i11] = $d2;

        $r40 = r0.<com.opengamma.analytics.math.cube.DoublesCube: double[] _values>;

        $r39 = r4[i11];

        $d3 = virtualinvoke $r39.<java.lang.Double: double doubleValue()>();

        $r40[i11] = $d3;

        i11 = i11 + 1;

        goto label7;

     label8:
        return;
    }

    public void <init>(java.util.List, java.util.List, java.util.List, java.util.List)
    {
        com.opengamma.analytics.math.cube.DoublesCube r0;
        java.util.List r1, r2, r3, r4;
        java.lang.Double r5, r6, r7, r8;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, i11, $i12;
        double[] $r9, $r10, $r11, $r12, $r37, $r38, $r39, $r40;
        java.lang.Object $r13, $r14, $r15, $r16;
        java.lang.StringBuilder $r17, $r18, $r19, $r20, $r22, $r23, $r24, $r25, $r27, $r28, $r29, $r30, $r32, $r33, $r34, $r35;
        java.lang.String $r21, $r26, $r31, $r36;
        double $d0, $d1, $d2, $d3;
        boolean $z0, $z1, $z2;

        r0 := @this: com.opengamma.analytics.math.cube.DoublesCube;

        r1 := @parameter0: java.util.List;

        r2 := @parameter1: java.util.List;

        r3 := @parameter2: java.util.List;

        r4 := @parameter3: java.util.List;

        specialinvoke r0.<com.opengamma.analytics.math.cube.Cube: void <init>()>();

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object,java.lang.String)>(r1, "x data");

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object,java.lang.String)>(r2, "y data");

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object,java.lang.String)>(r3, "z data");

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object,java.lang.String)>(r4, "data");

        $i0 = interfaceinvoke r1.<java.util.List: int size()>();

        r0.<com.opengamma.analytics.math.cube.DoublesCube: int _n> = $i0;

        $i1 = r0.<com.opengamma.analytics.math.cube.DoublesCube: int _n>;

        $i2 = interfaceinvoke r2.<java.util.List: int size()>();

        if $i1 != $i2 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        staticinvoke <org.apache.commons.lang.Validate: void isTrue(boolean)>($z0);

        $i3 = r0.<com.opengamma.analytics.math.cube.DoublesCube: int _n>;

        $i4 = interfaceinvoke r3.<java.util.List: int size()>();

        if $i3 != $i4 goto label3;

        $z1 = 1;

        goto label4;

     label3:
        $z1 = 0;

     label4:
        staticinvoke <org.apache.commons.lang.Validate: void isTrue(boolean)>($z1);

        $i5 = r0.<com.opengamma.analytics.math.cube.DoublesCube: int _n>;

        $i6 = interfaceinvoke r4.<java.util.List: int size()>();

        if $i5 != $i6 goto label5;

        $z2 = 1;

        goto label6;

     label5:
        $z2 = 0;

     label6:
        staticinvoke <org.apache.commons.lang.Validate: void isTrue(boolean)>($z2);

        $i7 = r0.<com.opengamma.analytics.math.cube.DoublesCube: int _n>;

        $r9 = newarray (double)[$i7];

        r0.<com.opengamma.analytics.math.cube.DoublesCube: double[] _xData> = $r9;

        $i8 = r0.<com.opengamma.analytics.math.cube.DoublesCube: int _n>;

        $r10 = newarray (double)[$i8];

        r0.<com.opengamma.analytics.math.cube.DoublesCube: double[] _yData> = $r10;

        $i9 = r0.<com.opengamma.analytics.math.cube.DoublesCube: int _n>;

        $r11 = newarray (double)[$i9];

        r0.<com.opengamma.analytics.math.cube.DoublesCube: double[] _zData> = $r11;

        $i10 = r0.<com.opengamma.analytics.math.cube.DoublesCube: int _n>;

        $r12 = newarray (double)[$i10];

        r0.<com.opengamma.analytics.math.cube.DoublesCube: double[] _values> = $r12;

        i11 = 0;

     label7:
        $i12 = r0.<com.opengamma.analytics.math.cube.DoublesCube: int _n>;

        if i11 >= $i12 goto label8;

        $r13 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i11);

        r5 = (java.lang.Double) $r13;

        $r14 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>(i11);

        r6 = (java.lang.Double) $r14;

        $r15 = interfaceinvoke r3.<java.util.List: java.lang.Object get(int)>(i11);

        r7 = (java.lang.Double) $r15;

        $r16 = interfaceinvoke r4.<java.util.List: java.lang.Object get(int)>(i11);

        r8 = (java.lang.Double) $r16;

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("element ");

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i11);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" of x data");

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object,java.lang.String)>(r5, $r21);

        $r22 = new java.lang.StringBuilder;

        specialinvoke $r22.<java.lang.StringBuilder: void <init>()>();

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("element ");

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i11);

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" of y data");

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object,java.lang.String)>(r6, $r26);

        $r27 = new java.lang.StringBuilder;

        specialinvoke $r27.<java.lang.StringBuilder: void <init>()>();

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("element ");

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i11);

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" of z data");

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object,java.lang.String)>(r7, $r31);

        $r32 = new java.lang.StringBuilder;

        specialinvoke $r32.<java.lang.StringBuilder: void <init>()>();

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("element ");

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i11);

        $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" of data");

        $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object,java.lang.String)>(r8, $r36);

        $r37 = r0.<com.opengamma.analytics.math.cube.DoublesCube: double[] _xData>;

        $d0 = virtualinvoke r5.<java.lang.Double: double doubleValue()>();

        $r37[i11] = $d0;

        $r38 = r0.<com.opengamma.analytics.math.cube.DoublesCube: double[] _yData>;

        $d1 = virtualinvoke r6.<java.lang.Double: double doubleValue()>();

        $r38[i11] = $d1;

        $r39 = r0.<com.opengamma.analytics.math.cube.DoublesCube: double[] _zData>;

        $d2 = virtualinvoke r7.<java.lang.Double: double doubleValue()>();

        $r39[i11] = $d2;

        $r40 = r0.<com.opengamma.analytics.math.cube.DoublesCube: double[] _values>;

        $d3 = virtualinvoke r8.<java.lang.Double: double doubleValue()>();

        $r40[i11] = $d3;

        i11 = i11 + 1;

        goto label7;

     label8:
        return;
    }

    public void <init>(double[], double[], double[], double[], java.lang.String)
    {
        com.opengamma.analytics.math.cube.DoublesCube r0;
        double[] r1, r2, r3, r4, $r6, $r7, $r8, $r9;
        java.lang.String r5;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10;
        boolean $z0, $z1, $z2;

        r0 := @this: com.opengamma.analytics.math.cube.DoublesCube;

        r1 := @parameter0: double[];

        r2 := @parameter1: double[];

        r3 := @parameter2: double[];

        r4 := @parameter3: double[];

        r5 := @parameter4: java.lang.String;

        specialinvoke r0.<com.opengamma.analytics.math.cube.Cube: void <init>(java.lang.String)>(r5);

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object,java.lang.String)>(r1, "x data");

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object,java.lang.String)>(r2, "y data");

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object,java.lang.String)>(r3, "z data");

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object,java.lang.String)>(r4, "data");

        $i0 = lengthof r1;

        r0.<com.opengamma.analytics.math.cube.DoublesCube: int _n> = $i0;

        $i2 = r0.<com.opengamma.analytics.math.cube.DoublesCube: int _n>;

        $i1 = lengthof r2;

        if $i2 != $i1 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        staticinvoke <org.apache.commons.lang.Validate: void isTrue(boolean)>($z0);

        $i4 = r0.<com.opengamma.analytics.math.cube.DoublesCube: int _n>;

        $i3 = lengthof r3;

        if $i4 != $i3 goto label3;

        $z1 = 1;

        goto label4;

     label3:
        $z1 = 0;

     label4:
        staticinvoke <org.apache.commons.lang.Validate: void isTrue(boolean)>($z1);

        $i6 = r0.<com.opengamma.analytics.math.cube.DoublesCube: int _n>;

        $i5 = lengthof r4;

        if $i6 != $i5 goto label5;

        $z2 = 1;

        goto label6;

     label5:
        $z2 = 0;

     label6:
        staticinvoke <org.apache.commons.lang.Validate: void isTrue(boolean)>($z2);

        $i7 = r0.<com.opengamma.analytics.math.cube.DoublesCube: int _n>;

        $r6 = staticinvoke <java.util.Arrays: double[] copyOf(double[],int)>(r1, $i7);

        r0.<com.opengamma.analytics.math.cube.DoublesCube: double[] _xData> = $r6;

        $i8 = r0.<com.opengamma.analytics.math.cube.DoublesCube: int _n>;

        $r7 = staticinvoke <java.util.Arrays: double[] copyOf(double[],int)>(r2, $i8);

        r0.<com.opengamma.analytics.math.cube.DoublesCube: double[] _yData> = $r7;

        $i9 = r0.<com.opengamma.analytics.math.cube.DoublesCube: int _n>;

        $r8 = staticinvoke <java.util.Arrays: double[] copyOf(double[],int)>(r3, $i9);

        r0.<com.opengamma.analytics.math.cube.DoublesCube: double[] _zData> = $r8;

        $i10 = r0.<com.opengamma.analytics.math.cube.DoublesCube: int _n>;

        $r9 = staticinvoke <java.util.Arrays: double[] copyOf(double[],int)>(r4, $i10);

        r0.<com.opengamma.analytics.math.cube.DoublesCube: double[] _values> = $r9;

        return;
    }

    public void <init>(java.lang.Double[], java.lang.Double[], java.lang.Double[], java.lang.Double[], java.lang.String)
    {
        com.opengamma.analytics.math.cube.DoublesCube r0;
        java.lang.Double[] r1, r2, r3, r4;
        java.lang.String r5, $r15, $r21, $r27, $r33;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, i11, $i12;
        double[] $r6, $r7, $r8, $r9, $r35, $r37, $r39, $r41;
        java.lang.StringBuilder $r10, $r12, $r13, $r14, $r16, $r18, $r19, $r20, $r22, $r24, $r25, $r26, $r28, $r30, $r31, $r32;
        java.lang.Double $r11, $r17, $r23, $r29, $r34, $r36, $r38, $r40;
        double $d0, $d1, $d2, $d3;
        boolean $z0, $z1, $z2;

        r0 := @this: com.opengamma.analytics.math.cube.DoublesCube;

        r1 := @parameter0: java.lang.Double[];

        r2 := @parameter1: java.lang.Double[];

        r3 := @parameter2: java.lang.Double[];

        r4 := @parameter3: java.lang.Double[];

        r5 := @parameter4: java.lang.String;

        specialinvoke r0.<com.opengamma.analytics.math.cube.Cube: void <init>(java.lang.String)>(r5);

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object,java.lang.String)>(r1, "x data");

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object,java.lang.String)>(r2, "y data");

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object,java.lang.String)>(r3, "z data");

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object,java.lang.String)>(r4, "data");

        $i0 = lengthof r1;

        r0.<com.opengamma.analytics.math.cube.DoublesCube: int _n> = $i0;

        $i2 = r0.<com.opengamma.analytics.math.cube.DoublesCube: int _n>;

        $i1 = lengthof r2;

        if $i2 != $i1 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        staticinvoke <org.apache.commons.lang.Validate: void isTrue(boolean)>($z0);

        $i4 = r0.<com.opengamma.analytics.math.cube.DoublesCube: int _n>;

        $i3 = lengthof r3;

        if $i4 != $i3 goto label3;

        $z1 = 1;

        goto label4;

     label3:
        $z1 = 0;

     label4:
        staticinvoke <org.apache.commons.lang.Validate: void isTrue(boolean)>($z1);

        $i6 = r0.<com.opengamma.analytics.math.cube.DoublesCube: int _n>;

        $i5 = lengthof r4;

        if $i6 != $i5 goto label5;

        $z2 = 1;

        goto label6;

     label5:
        $z2 = 0;

     label6:
        staticinvoke <org.apache.commons.lang.Validate: void isTrue(boolean)>($z2);

        $i7 = r0.<com.opengamma.analytics.math.cube.DoublesCube: int _n>;

        $r6 = newarray (double)[$i7];

        r0.<com.opengamma.analytics.math.cube.DoublesCube: double[] _xData> = $r6;

        $i8 = r0.<com.opengamma.analytics.math.cube.DoublesCube: int _n>;

        $r7 = newarray (double)[$i8];

        r0.<com.opengamma.analytics.math.cube.DoublesCube: double[] _yData> = $r7;

        $i9 = r0.<com.opengamma.analytics.math.cube.DoublesCube: int _n>;

        $r8 = newarray (double)[$i9];

        r0.<com.opengamma.analytics.math.cube.DoublesCube: double[] _zData> = $r8;

        $i10 = r0.<com.opengamma.analytics.math.cube.DoublesCube: int _n>;

        $r9 = newarray (double)[$i10];

        r0.<com.opengamma.analytics.math.cube.DoublesCube: double[] _values> = $r9;

        i11 = 0;

     label7:
        $i12 = r0.<com.opengamma.analytics.math.cube.DoublesCube: int _n>;

        if i11 >= $i12 goto label8;

        $r11 = r1[i11];

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("element ");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i11);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" of x data");

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object,java.lang.String)>($r11, $r15);

        $r17 = r2[i11];

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("element ");

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i11);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" of y data");

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object,java.lang.String)>($r17, $r21);

        $r23 = r3[i11];

        $r22 = new java.lang.StringBuilder;

        specialinvoke $r22.<java.lang.StringBuilder: void <init>()>();

        $r24 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("element ");

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i11);

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" of z data");

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object,java.lang.String)>($r23, $r27);

        $r29 = r4[i11];

        $r28 = new java.lang.StringBuilder;

        specialinvoke $r28.<java.lang.StringBuilder: void <init>()>();

        $r30 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("element ");

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i11);

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" of data");

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object,java.lang.String)>($r29, $r33);

        $r35 = r0.<com.opengamma.analytics.math.cube.DoublesCube: double[] _xData>;

        $r34 = r1[i11];

        $d0 = virtualinvoke $r34.<java.lang.Double: double doubleValue()>();

        $r35[i11] = $d0;

        $r37 = r0.<com.opengamma.analytics.math.cube.DoublesCube: double[] _yData>;

        $r36 = r2[i11];

        $d1 = virtualinvoke $r36.<java.lang.Double: double doubleValue()>();

        $r37[i11] = $d1;

        $r39 = r0.<com.opengamma.analytics.math.cube.DoublesCube: double[] _zData>;

        $r38 = r3[i11];

        $d2 = virtualinvoke $r38.<java.lang.Double: double doubleValue()>();

        $r39[i11] = $d2;

        $r41 = r0.<com.opengamma.analytics.math.cube.DoublesCube: double[] _values>;

        $r40 = r4[i11];

        $d3 = virtualinvoke $r40.<java.lang.Double: double doubleValue()>();

        $r41[i11] = $d3;

        i11 = i11 + 1;

        goto label7;

     label8:
        return;
    }

    public void <init>(java.util.List, java.util.List, java.util.List, java.util.List, java.lang.String)
    {
        com.opengamma.analytics.math.cube.DoublesCube r0;
        java.util.List r1, r2, r3, r4;
        java.lang.String r5, $r22, $r27, $r32, $r37;
        java.lang.Double r6, r7, r8, r9;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, i11, $i12;
        double[] $r10, $r11, $r12, $r13, $r38, $r39, $r40, $r41;
        java.lang.Object $r14, $r15, $r16, $r17;
        java.lang.StringBuilder $r18, $r19, $r20, $r21, $r23, $r24, $r25, $r26, $r28, $r29, $r30, $r31, $r33, $r34, $r35, $r36;
        double $d0, $d1, $d2, $d3;
        boolean $z0, $z1, $z2;

        r0 := @this: com.opengamma.analytics.math.cube.DoublesCube;

        r1 := @parameter0: java.util.List;

        r2 := @parameter1: java.util.List;

        r3 := @parameter2: java.util.List;

        r4 := @parameter3: java.util.List;

        r5 := @parameter4: java.lang.String;

        specialinvoke r0.<com.opengamma.analytics.math.cube.Cube: void <init>(java.lang.String)>(r5);

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object,java.lang.String)>(r1, "x data");

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object,java.lang.String)>(r2, "y data");

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object,java.lang.String)>(r3, "z data");

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object,java.lang.String)>(r4, "data");

        $i0 = interfaceinvoke r1.<java.util.List: int size()>();

        r0.<com.opengamma.analytics.math.cube.DoublesCube: int _n> = $i0;

        $i1 = r0.<com.opengamma.analytics.math.cube.DoublesCube: int _n>;

        $i2 = interfaceinvoke r2.<java.util.List: int size()>();

        if $i1 != $i2 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        staticinvoke <org.apache.commons.lang.Validate: void isTrue(boolean)>($z0);

        $i3 = r0.<com.opengamma.analytics.math.cube.DoublesCube: int _n>;

        $i4 = interfaceinvoke r3.<java.util.List: int size()>();

        if $i3 != $i4 goto label3;

        $z1 = 1;

        goto label4;

     label3:
        $z1 = 0;

     label4:
        staticinvoke <org.apache.commons.lang.Validate: void isTrue(boolean)>($z1);

        $i5 = r0.<com.opengamma.analytics.math.cube.DoublesCube: int _n>;

        $i6 = interfaceinvoke r4.<java.util.List: int size()>();

        if $i5 != $i6 goto label5;

        $z2 = 1;

        goto label6;

     label5:
        $z2 = 0;

     label6:
        staticinvoke <org.apache.commons.lang.Validate: void isTrue(boolean)>($z2);

        $i7 = r0.<com.opengamma.analytics.math.cube.DoublesCube: int _n>;

        $r10 = newarray (double)[$i7];

        r0.<com.opengamma.analytics.math.cube.DoublesCube: double[] _xData> = $r10;

        $i8 = r0.<com.opengamma.analytics.math.cube.DoublesCube: int _n>;

        $r11 = newarray (double)[$i8];

        r0.<com.opengamma.analytics.math.cube.DoublesCube: double[] _yData> = $r11;

        $i9 = r0.<com.opengamma.analytics.math.cube.DoublesCube: int _n>;

        $r12 = newarray (double)[$i9];

        r0.<com.opengamma.analytics.math.cube.DoublesCube: double[] _zData> = $r12;

        $i10 = r0.<com.opengamma.analytics.math.cube.DoublesCube: int _n>;

        $r13 = newarray (double)[$i10];

        r0.<com.opengamma.analytics.math.cube.DoublesCube: double[] _values> = $r13;

        i11 = 0;

     label7:
        $i12 = r0.<com.opengamma.analytics.math.cube.DoublesCube: int _n>;

        if i11 >= $i12 goto label8;

        $r14 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i11);

        r6 = (java.lang.Double) $r14;

        $r15 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>(i11);

        r7 = (java.lang.Double) $r15;

        $r16 = interfaceinvoke r3.<java.util.List: java.lang.Object get(int)>(i11);

        r8 = (java.lang.Double) $r16;

        $r17 = interfaceinvoke r4.<java.util.List: java.lang.Object get(int)>(i11);

        r9 = (java.lang.Double) $r17;

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("element ");

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i11);

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" of x data");

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object,java.lang.String)>(r6, $r22);

        $r23 = new java.lang.StringBuilder;

        specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("element ");

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i11);

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" of y data");

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object,java.lang.String)>(r7, $r27);

        $r28 = new java.lang.StringBuilder;

        specialinvoke $r28.<java.lang.StringBuilder: void <init>()>();

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("element ");

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i11);

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" of z data");

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object,java.lang.String)>(r8, $r32);

        $r33 = new java.lang.StringBuilder;

        specialinvoke $r33.<java.lang.StringBuilder: void <init>()>();

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("element ");

        $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i11);

        $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" of data");

        $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object,java.lang.String)>(r9, $r37);

        $r38 = r0.<com.opengamma.analytics.math.cube.DoublesCube: double[] _xData>;

        $d0 = virtualinvoke r6.<java.lang.Double: double doubleValue()>();

        $r38[i11] = $d0;

        $r39 = r0.<com.opengamma.analytics.math.cube.DoublesCube: double[] _yData>;

        $d1 = virtualinvoke r7.<java.lang.Double: double doubleValue()>();

        $r39[i11] = $d1;

        $r40 = r0.<com.opengamma.analytics.math.cube.DoublesCube: double[] _zData>;

        $d2 = virtualinvoke r8.<java.lang.Double: double doubleValue()>();

        $r40[i11] = $d2;

        $r41 = r0.<com.opengamma.analytics.math.cube.DoublesCube: double[] _values>;

        $d3 = virtualinvoke r9.<java.lang.Double: double doubleValue()>();

        $r41[i11] = $d3;

        i11 = i11 + 1;

        goto label7;

     label8:
        return;
    }

    public java.lang.Double[] getXData()
    {
        com.opengamma.analytics.math.cube.DoublesCube r0;
        java.lang.Double[] $r1, $r2, $r3, $r5, $r7;
        int $i0, $i1, i2;
        double[] $r4;
        double $d0;
        java.lang.Double $r6;

        r0 := @this: com.opengamma.analytics.math.cube.DoublesCube;

        $r1 = r0.<com.opengamma.analytics.math.cube.DoublesCube: java.lang.Double[] _xDataObject>;

        if $r1 == null goto label1;

        $r7 = r0.<com.opengamma.analytics.math.cube.DoublesCube: java.lang.Double[] _xDataObject>;

        return $r7;

     label1:
        $i0 = r0.<com.opengamma.analytics.math.cube.DoublesCube: int _n>;

        $r2 = newarray (java.lang.Double)[$i0];

        r0.<com.opengamma.analytics.math.cube.DoublesCube: java.lang.Double[] _xDataObject> = $r2;

        i2 = 0;

     label2:
        $i1 = r0.<com.opengamma.analytics.math.cube.DoublesCube: int _n>;

        if i2 >= $i1 goto label3;

        $r5 = r0.<com.opengamma.analytics.math.cube.DoublesCube: java.lang.Double[] _xDataObject>;

        $r4 = r0.<com.opengamma.analytics.math.cube.DoublesCube: double[] _xData>;

        $d0 = $r4[i2];

        $r6 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        $r5[i2] = $r6;

        i2 = i2 + 1;

        goto label2;

     label3:
        $r3 = r0.<com.opengamma.analytics.math.cube.DoublesCube: java.lang.Double[] _xDataObject>;

        return $r3;
    }

    public java.lang.Double[] getYData()
    {
        com.opengamma.analytics.math.cube.DoublesCube r0;
        java.lang.Double[] $r1, $r2, $r3, $r5, $r7;
        int $i0, $i1, i2;
        double[] $r4;
        double $d0;
        java.lang.Double $r6;

        r0 := @this: com.opengamma.analytics.math.cube.DoublesCube;

        $r1 = r0.<com.opengamma.analytics.math.cube.DoublesCube: java.lang.Double[] _yDataObject>;

        if $r1 == null goto label1;

        $r7 = r0.<com.opengamma.analytics.math.cube.DoublesCube: java.lang.Double[] _yDataObject>;

        return $r7;

     label1:
        $i0 = r0.<com.opengamma.analytics.math.cube.DoublesCube: int _n>;

        $r2 = newarray (java.lang.Double)[$i0];

        r0.<com.opengamma.analytics.math.cube.DoublesCube: java.lang.Double[] _yDataObject> = $r2;

        i2 = 0;

     label2:
        $i1 = r0.<com.opengamma.analytics.math.cube.DoublesCube: int _n>;

        if i2 >= $i1 goto label3;

        $r5 = r0.<com.opengamma.analytics.math.cube.DoublesCube: java.lang.Double[] _yDataObject>;

        $r4 = r0.<com.opengamma.analytics.math.cube.DoublesCube: double[] _yData>;

        $d0 = $r4[i2];

        $r6 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        $r5[i2] = $r6;

        i2 = i2 + 1;

        goto label2;

     label3:
        $r3 = r0.<com.opengamma.analytics.math.cube.DoublesCube: java.lang.Double[] _yDataObject>;

        return $r3;
    }

    public java.lang.Double[] getZData()
    {
        com.opengamma.analytics.math.cube.DoublesCube r0;
        java.lang.Double[] $r1, $r2, $r3, $r5, $r7;
        int $i0, $i1, i2;
        double[] $r4;
        double $d0;
        java.lang.Double $r6;

        r0 := @this: com.opengamma.analytics.math.cube.DoublesCube;

        $r1 = r0.<com.opengamma.analytics.math.cube.DoublesCube: java.lang.Double[] _zDataObject>;

        if $r1 == null goto label1;

        $r7 = r0.<com.opengamma.analytics.math.cube.DoublesCube: java.lang.Double[] _zDataObject>;

        return $r7;

     label1:
        $i0 = r0.<com.opengamma.analytics.math.cube.DoublesCube: int _n>;

        $r2 = newarray (java.lang.Double)[$i0];

        r0.<com.opengamma.analytics.math.cube.DoublesCube: java.lang.Double[] _zDataObject> = $r2;

        i2 = 0;

     label2:
        $i1 = r0.<com.opengamma.analytics.math.cube.DoublesCube: int _n>;

        if i2 >= $i1 goto label3;

        $r5 = r0.<com.opengamma.analytics.math.cube.DoublesCube: java.lang.Double[] _zDataObject>;

        $r4 = r0.<com.opengamma.analytics.math.cube.DoublesCube: double[] _zData>;

        $d0 = $r4[i2];

        $r6 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        $r5[i2] = $r6;

        i2 = i2 + 1;

        goto label2;

     label3:
        $r3 = r0.<com.opengamma.analytics.math.cube.DoublesCube: java.lang.Double[] _zDataObject>;

        return $r3;
    }

    public java.lang.Double[] getValues()
    {
        com.opengamma.analytics.math.cube.DoublesCube r0;
        java.lang.Double[] $r1, $r2, $r3, $r5, $r7;
        int $i0, $i1, i2;
        double[] $r4;
        double $d0;
        java.lang.Double $r6;

        r0 := @this: com.opengamma.analytics.math.cube.DoublesCube;

        $r1 = r0.<com.opengamma.analytics.math.cube.DoublesCube: java.lang.Double[] _valuesObject>;

        if $r1 == null goto label1;

        $r7 = r0.<com.opengamma.analytics.math.cube.DoublesCube: java.lang.Double[] _valuesObject>;

        return $r7;

     label1:
        $i0 = r0.<com.opengamma.analytics.math.cube.DoublesCube: int _n>;

        $r2 = newarray (java.lang.Double)[$i0];

        r0.<com.opengamma.analytics.math.cube.DoublesCube: java.lang.Double[] _valuesObject> = $r2;

        i2 = 0;

     label2:
        $i1 = r0.<com.opengamma.analytics.math.cube.DoublesCube: int _n>;

        if i2 >= $i1 goto label3;

        $r5 = r0.<com.opengamma.analytics.math.cube.DoublesCube: java.lang.Double[] _valuesObject>;

        $r4 = r0.<com.opengamma.analytics.math.cube.DoublesCube: double[] _values>;

        $d0 = $r4[i2];

        $r6 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        $r5[i2] = $r6;

        i2 = i2 + 1;

        goto label2;

     label3:
        $r3 = r0.<com.opengamma.analytics.math.cube.DoublesCube: java.lang.Double[] _valuesObject>;

        return $r3;
    }

    public double[] getXDataAsPrimitive()
    {
        com.opengamma.analytics.math.cube.DoublesCube r0;
        double[] $r1;

        r0 := @this: com.opengamma.analytics.math.cube.DoublesCube;

        $r1 = r0.<com.opengamma.analytics.math.cube.DoublesCube: double[] _xData>;

        return $r1;
    }

    public double[] getYDataAsPrimitive()
    {
        com.opengamma.analytics.math.cube.DoublesCube r0;
        double[] $r1;

        r0 := @this: com.opengamma.analytics.math.cube.DoublesCube;

        $r1 = r0.<com.opengamma.analytics.math.cube.DoublesCube: double[] _yData>;

        return $r1;
    }

    public double[] getZDataAsPrimitive()
    {
        com.opengamma.analytics.math.cube.DoublesCube r0;
        double[] $r1;

        r0 := @this: com.opengamma.analytics.math.cube.DoublesCube;

        $r1 = r0.<com.opengamma.analytics.math.cube.DoublesCube: double[] _zData>;

        return $r1;
    }

    public double[] getValuesAsPrimitive()
    {
        com.opengamma.analytics.math.cube.DoublesCube r0;
        double[] $r1;

        r0 := @this: com.opengamma.analytics.math.cube.DoublesCube;

        $r1 = r0.<com.opengamma.analytics.math.cube.DoublesCube: double[] _values>;

        return $r1;
    }

    public int size()
    {
        com.opengamma.analytics.math.cube.DoublesCube r0;
        int $i0;

        r0 := @this: com.opengamma.analytics.math.cube.DoublesCube;

        $i0 = r0.<com.opengamma.analytics.math.cube.DoublesCube: int _n>;

        return $i0;
    }

    public int hashCode()
    {
        com.opengamma.analytics.math.cube.DoublesCube r0;
        double[] $r1, $r2, $r3, $r4;
        int $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, i9, i10, i11, i12, i13;

        r0 := @this: com.opengamma.analytics.math.cube.DoublesCube;

        i9 = specialinvoke r0.<com.opengamma.analytics.math.cube.Cube: int hashCode()>();

        $i1 = 31 * i9;

        $r1 = r0.<com.opengamma.analytics.math.cube.DoublesCube: double[] _values>;

        $i2 = staticinvoke <java.util.Arrays: int hashCode(double[])>($r1);

        i10 = $i1 + $i2;

        $i3 = 31 * i10;

        $r2 = r0.<com.opengamma.analytics.math.cube.DoublesCube: double[] _xData>;

        $i4 = staticinvoke <java.util.Arrays: int hashCode(double[])>($r2);

        i11 = $i3 + $i4;

        $i5 = 31 * i11;

        $r3 = r0.<com.opengamma.analytics.math.cube.DoublesCube: double[] _yData>;

        $i6 = staticinvoke <java.util.Arrays: int hashCode(double[])>($r3);

        i12 = $i5 + $i6;

        $i7 = 31 * i12;

        $r4 = r0.<com.opengamma.analytics.math.cube.DoublesCube: double[] _zData>;

        $i8 = staticinvoke <java.util.Arrays: int hashCode(double[])>($r4);

        i13 = $i7 + $i8;

        return i13;
    }

    public boolean equals(java.lang.Object)
    {
        com.opengamma.analytics.math.cube.DoublesCube r0, r2;
        java.lang.Object r1;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.lang.Class $r3, $r4;
        double[] $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12;

        r0 := @this: com.opengamma.analytics.math.cube.DoublesCube;

        r1 := @parameter0: java.lang.Object;

        if r0 != r1 goto label1;

        return 1;

     label1:
        $z0 = specialinvoke r0.<com.opengamma.analytics.math.cube.Cube: boolean equals(java.lang.Object)>(r1);

        if $z0 != 0 goto label2;

        return 0;

     label2:
        $r3 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r4 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        if $r3 == $r4 goto label3;

        return 0;

     label3:
        r2 = (com.opengamma.analytics.math.cube.DoublesCube) r1;

        $r6 = r0.<com.opengamma.analytics.math.cube.DoublesCube: double[] _values>;

        $r5 = r2.<com.opengamma.analytics.math.cube.DoublesCube: double[] _values>;

        $z1 = staticinvoke <java.util.Arrays: boolean equals(double[],double[])>($r6, $r5);

        if $z1 != 0 goto label4;

        return 0;

     label4:
        $r8 = r0.<com.opengamma.analytics.math.cube.DoublesCube: double[] _xData>;

        $r7 = r2.<com.opengamma.analytics.math.cube.DoublesCube: double[] _xData>;

        $z2 = staticinvoke <java.util.Arrays: boolean equals(double[],double[])>($r8, $r7);

        if $z2 != 0 goto label5;

        return 0;

     label5:
        $r10 = r0.<com.opengamma.analytics.math.cube.DoublesCube: double[] _yData>;

        $r9 = r2.<com.opengamma.analytics.math.cube.DoublesCube: double[] _yData>;

        $z3 = staticinvoke <java.util.Arrays: boolean equals(double[],double[])>($r10, $r9);

        if $z3 != 0 goto label6;

        return 0;

     label6:
        $r12 = r0.<com.opengamma.analytics.math.cube.DoublesCube: double[] _zData>;

        $r11 = r2.<com.opengamma.analytics.math.cube.DoublesCube: double[] _zData>;

        $z4 = staticinvoke <java.util.Arrays: boolean equals(double[],double[])>($r12, $r11);

        return $z4;
    }

    public volatile java.lang.Object[] getValues()
    {
        com.opengamma.analytics.math.cube.DoublesCube r0;
        java.lang.Double[] $r1;

        r0 := @this: com.opengamma.analytics.math.cube.DoublesCube;

        $r1 = virtualinvoke r0.<com.opengamma.analytics.math.cube.DoublesCube: java.lang.Double[] getValues()>();

        return $r1;
    }

    public volatile java.lang.Object[] getZData()
    {
        com.opengamma.analytics.math.cube.DoublesCube r0;
        java.lang.Double[] $r1;

        r0 := @this: com.opengamma.analytics.math.cube.DoublesCube;

        $r1 = virtualinvoke r0.<com.opengamma.analytics.math.cube.DoublesCube: java.lang.Double[] getZData()>();

        return $r1;
    }

    public volatile java.lang.Object[] getYData()
    {
        com.opengamma.analytics.math.cube.DoublesCube r0;
        java.lang.Double[] $r1;

        r0 := @this: com.opengamma.analytics.math.cube.DoublesCube;

        $r1 = virtualinvoke r0.<com.opengamma.analytics.math.cube.DoublesCube: java.lang.Double[] getYData()>();

        return $r1;
    }

    public volatile java.lang.Object[] getXData()
    {
        com.opengamma.analytics.math.cube.DoublesCube r0;
        java.lang.Double[] $r1;

        r0 := @this: com.opengamma.analytics.math.cube.DoublesCube;

        $r1 = virtualinvoke r0.<com.opengamma.analytics.math.cube.DoublesCube: java.lang.Double[] getXData()>();

        return $r1;
    }
}
