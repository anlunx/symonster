public final class com.opengamma.analytics.financial.provider.calculator.discounting.GammaPV01CurveParametersCalculator extends com.opengamma.analytics.financial.interestrate.InstrumentDerivativeVisitorSameMethodAdapter
{
    private static final double BP1;
    private final com.opengamma.analytics.financial.interestrate.InstrumentDerivativeVisitor _pv01Calculator;

    public void <init>(com.opengamma.analytics.financial.interestrate.InstrumentDerivativeVisitor)
    {
        com.opengamma.analytics.financial.provider.calculator.discounting.GammaPV01CurveParametersCalculator r0;
        com.opengamma.analytics.financial.interestrate.InstrumentDerivativeVisitor r1;
        com.opengamma.analytics.financial.provider.calculator.discounting.PV01CurveParametersCalculator $r3;

        r0 := @this: com.opengamma.analytics.financial.provider.calculator.discounting.GammaPV01CurveParametersCalculator;

        r1 := @parameter0: com.opengamma.analytics.financial.interestrate.InstrumentDerivativeVisitor;

        specialinvoke r0.<com.opengamma.analytics.financial.interestrate.InstrumentDerivativeVisitorSameMethodAdapter: void <init>()>();

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "curve sensitivity calculator");

        $r3 = new com.opengamma.analytics.financial.provider.calculator.discounting.PV01CurveParametersCalculator;

        specialinvoke $r3.<com.opengamma.analytics.financial.provider.calculator.discounting.PV01CurveParametersCalculator: void <init>(com.opengamma.analytics.financial.interestrate.InstrumentDerivativeVisitor)>(r1);

        r0.<com.opengamma.analytics.financial.provider.calculator.discounting.GammaPV01CurveParametersCalculator: com.opengamma.analytics.financial.interestrate.InstrumentDerivativeVisitor _pv01Calculator> = $r3;

        return;
    }

    public java.lang.Double visit(com.opengamma.analytics.financial.interestrate.InstrumentDerivative, com.opengamma.analytics.financial.provider.description.interestrate.ParameterProviderInterface)
    {
        com.opengamma.analytics.financial.provider.calculator.discounting.GammaPV01CurveParametersCalculator r0;
        com.opengamma.analytics.financial.interestrate.InstrumentDerivative r1;
        com.opengamma.analytics.financial.provider.description.interestrate.ParameterProviderInterface r2, r3;
        com.opengamma.analytics.util.amount.ReferenceAmount r4, r5;
        java.util.Iterator r6;
        java.util.Map$Entry r7;
        com.opengamma.util.tuple.Pair r8, $r21, $r28;
        com.opengamma.analytics.financial.interestrate.InstrumentDerivativeVisitor $r11, $r13;
        java.lang.Object $r12, $r14, $r18, $r20, $r22, $r27, $r29, $r32, $r34, $r39;
        java.util.HashMap $r15, $r30, $r31;
        java.util.Set $r16;
        boolean $z0, $z1;
        java.lang.Double $r17, $r33, $r35;
        java.lang.StringBuilder $r19, $r24, $r25, $r37, $r38, $r40, $r41;
        java.lang.String $r23, $r26, $r42;
        double $d0, $d1, $d2, $d3, d4;
        java.lang.IllegalStateException $r36;

        r0 := @this: com.opengamma.analytics.financial.provider.calculator.discounting.GammaPV01CurveParametersCalculator;

        r1 := @parameter0: com.opengamma.analytics.financial.interestrate.InstrumentDerivative;

        r2 := @parameter1: com.opengamma.analytics.financial.provider.description.interestrate.ParameterProviderInterface;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "derivative");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, "multicurves");

        r3 = specialinvoke r0.<com.opengamma.analytics.financial.provider.calculator.discounting.GammaPV01CurveParametersCalculator: com.opengamma.analytics.financial.provider.description.interestrate.ParameterProviderInterface getBumpedProvider(com.opengamma.analytics.financial.provider.description.interestrate.ParameterProviderInterface)>(r2);

        $r11 = r0.<com.opengamma.analytics.financial.provider.calculator.discounting.GammaPV01CurveParametersCalculator: com.opengamma.analytics.financial.interestrate.InstrumentDerivativeVisitor _pv01Calculator>;

        $r12 = interfaceinvoke r1.<com.opengamma.analytics.financial.interestrate.InstrumentDerivative: java.lang.Object accept(com.opengamma.analytics.financial.interestrate.InstrumentDerivativeVisitor,java.lang.Object)>($r11, r2);

        r4 = (com.opengamma.analytics.util.amount.ReferenceAmount) $r12;

        $r13 = r0.<com.opengamma.analytics.financial.provider.calculator.discounting.GammaPV01CurveParametersCalculator: com.opengamma.analytics.financial.interestrate.InstrumentDerivativeVisitor _pv01Calculator>;

        $r14 = interfaceinvoke r1.<com.opengamma.analytics.financial.interestrate.InstrumentDerivative: java.lang.Object accept(com.opengamma.analytics.financial.interestrate.InstrumentDerivativeVisitor,java.lang.Object)>($r13, r3);

        r5 = (com.opengamma.analytics.util.amount.ReferenceAmount) $r14;

        d4 = 0.0;

        $r15 = virtualinvoke r4.<com.opengamma.analytics.util.amount.ReferenceAmount: java.util.HashMap getMap()>();

        $r16 = virtualinvoke $r15.<java.util.HashMap: java.util.Set entrySet()>();

        r6 = interfaceinvoke $r16.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r18 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>();

        r7 = (java.util.Map$Entry) $r18;

        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        $r20 = interfaceinvoke r7.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r21 = (com.opengamma.util.tuple.Pair) $r20;

        $r22 = virtualinvoke $r21.<com.opengamma.util.tuple.Pair: java.lang.Object getFirst()>();

        $r23 = (java.lang.String) $r22;

        $r24 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r23);

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("_WithParallelShift");

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();

        $r27 = interfaceinvoke r7.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r28 = (com.opengamma.util.tuple.Pair) $r27;

        $r29 = virtualinvoke $r28.<com.opengamma.util.tuple.Pair: java.lang.Object getSecond()>();

        r8 = staticinvoke <com.opengamma.util.tuple.Pairs: com.opengamma.util.tuple.Pair of(java.lang.Object,java.lang.Object)>($r26, $r29);

        $r30 = virtualinvoke r5.<com.opengamma.analytics.util.amount.ReferenceAmount: java.util.HashMap getMap()>();

        $z1 = virtualinvoke $r30.<java.util.HashMap: boolean containsKey(java.lang.Object)>(r8);

        if $z1 != 0 goto label2;

        $r36 = new java.lang.IllegalStateException;

        $r37 = new java.lang.StringBuilder;

        specialinvoke $r37.<java.lang.StringBuilder: void <init>()>();

        $r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Have bumped PV01 for curve / currency pair ");

        $r39 = interfaceinvoke r7.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r40 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r39);

        $r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" but no PV01");

        $r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r36.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r42);

        throw $r36;

     label2:
        $r31 = virtualinvoke r5.<com.opengamma.analytics.util.amount.ReferenceAmount: java.util.HashMap getMap()>();

        $r32 = virtualinvoke $r31.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r8);

        $r33 = (java.lang.Double) $r32;

        $d0 = virtualinvoke $r33.<java.lang.Double: double doubleValue()>();

        $r34 = interfaceinvoke r7.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r35 = (java.lang.Double) $r34;

        $d1 = virtualinvoke $r35.<java.lang.Double: double doubleValue()>();

        $d2 = $d0 - $d1;

        $d3 = $d2 / 1.0E-4;

        d4 = d4 + $d3;

        goto label1;

     label3:
        $r17 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d4);

        return $r17;
    }

    public java.lang.Double visit(com.opengamma.analytics.financial.interestrate.InstrumentDerivative)
    {
        com.opengamma.analytics.financial.provider.calculator.discounting.GammaPV01CurveParametersCalculator r0;
        com.opengamma.analytics.financial.interestrate.InstrumentDerivative r1;
        java.lang.UnsupportedOperationException $r2;

        r0 := @this: com.opengamma.analytics.financial.provider.calculator.discounting.GammaPV01CurveParametersCalculator;

        r1 := @parameter0: com.opengamma.analytics.financial.interestrate.InstrumentDerivative;

        $r2 = new java.lang.UnsupportedOperationException;

        specialinvoke $r2.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Need curve data");

        throw $r2;
    }

    private com.opengamma.analytics.financial.provider.description.interestrate.ParameterProviderInterface getBumpedProvider(com.opengamma.analytics.financial.provider.description.interestrate.ParameterProviderInterface)
    {
        com.opengamma.analytics.financial.provider.calculator.discounting.GammaPV01CurveParametersCalculator r0;
        com.opengamma.analytics.financial.provider.description.interestrate.ParameterProviderInterface r1;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15;
        java.lang.UnsupportedOperationException $r2;
        java.lang.StringBuilder $r3, $r4, $r6;
        java.lang.Class $r5;
        java.lang.String $r7;
        com.opengamma.analytics.financial.provider.description.interestrate.IssuerProviderDiscount $r8, r101;
        com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount $r9, $r30, $r40, $r50, $r58, r93, r102;
        com.opengamma.analytics.financial.forex.method.FXMatrix $r10, $r59;
        java.util.Map $r11, $r13, $r15, $r17, $r60, $r62, $r64;
        java.util.Set $r12, $r14, $r16, $r18, $r61, $r63, $r65;
        java.lang.Object $r19, $r20, $r21, $r23, $r28, $r29, $r31, $r33, $r38, $r39, $r41, $r43, $r48, $r49, $r51, $r53, $r66, $r67, $r68, $r70, $r75, $r76, $r77, $r79, $r84, $r85, $r86, $r88;
        com.opengamma.util.tuple.Pair $r22;
        com.opengamma.analytics.ShiftType $r24, $r34, $r44, $r54, $r71, $r80, $r89;
        com.opengamma.analytics.financial.model.interestrate.curve.YieldCurve $r25, $r26, $r35, $r36, $r45, $r46, $r55, $r56, $r72, $r73, $r81, $r82, $r90, $r91;
        java.lang.IllegalArgumentException $r27, $r37, $r47, $r57, $r74, $r83, $r92;
        com.opengamma.analytics.financial.instrument.index.IndexON $r32, $r69;
        com.opengamma.analytics.financial.instrument.index.IborIndex $r42, $r78;
        com.opengamma.util.money.Currency $r52, $r87;
        java.util.Iterator r95, r97, r99, r104, r106, r108, r110;
        java.util.Map$Entry r96, r98, r100, r105, r107, r109, r111;

        r0 := @this: com.opengamma.analytics.financial.provider.calculator.discounting.GammaPV01CurveParametersCalculator;

        r1 := @parameter0: com.opengamma.analytics.financial.provider.description.interestrate.ParameterProviderInterface;

        $z0 = r1 instanceof com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount;

        if $z0 == 0 goto label10;

        r93 = (com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount) r1;

        $r58 = new com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount;

        $r59 = virtualinvoke r93.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount: com.opengamma.analytics.financial.forex.method.FXMatrix getFxRates()>();

        specialinvoke $r58.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount: void <init>(com.opengamma.analytics.financial.forex.method.FXMatrix)>($r59);

        $r60 = virtualinvoke r93.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount: java.util.Map getDiscountingCurves()>();

        $r61 = interfaceinvoke $r60.<java.util.Map: java.util.Set entrySet()>();

        r95 = interfaceinvoke $r61.<java.util.Set: java.util.Iterator iterator()>();

     label01:
        $z10 = interfaceinvoke r95.<java.util.Iterator: boolean hasNext()>();

        if $z10 == 0 goto label03;

        $r84 = interfaceinvoke r95.<java.util.Iterator: java.lang.Object next()>();

        r96 = (java.util.Map$Entry) $r84;

        $r85 = interfaceinvoke r96.<java.util.Map$Entry: java.lang.Object getValue()>();

        $z15 = $r85 instanceof com.opengamma.analytics.financial.model.interestrate.curve.YieldCurve;

        if $z15 != 0 goto label02;

        $r92 = new java.lang.IllegalArgumentException;

        specialinvoke $r92.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Can only bump YieldCurves");

        throw $r92;

     label02:
        $r86 = interfaceinvoke r96.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r87 = (com.opengamma.util.money.Currency) $r86;

        $r88 = interfaceinvoke r96.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r90 = (com.opengamma.analytics.financial.model.interestrate.curve.YieldCurve) $r88;

        $r89 = <com.opengamma.analytics.ShiftType: com.opengamma.analytics.ShiftType ABSOLUTE>;

        $r91 = staticinvoke <com.opengamma.analytics.financial.model.interestrate.curve.YieldCurveUtils: com.opengamma.analytics.financial.model.interestrate.curve.YieldCurve withParallelShift(com.opengamma.analytics.financial.model.interestrate.curve.YieldCurve,double,com.opengamma.analytics.ShiftType)>($r90, 1.0E-4, $r89);

        virtualinvoke $r58.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount: void setCurve(com.opengamma.util.money.Currency,com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve)>($r87, $r91);

        goto label01;

     label03:
        $r62 = virtualinvoke r93.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount: java.util.Map getForwardIborCurves()>();

        $r63 = interfaceinvoke $r62.<java.util.Map: java.util.Set entrySet()>();

        r97 = interfaceinvoke $r63.<java.util.Set: java.util.Iterator iterator()>();

     label04:
        $z11 = interfaceinvoke r97.<java.util.Iterator: boolean hasNext()>();

        if $z11 == 0 goto label06;

        $r75 = interfaceinvoke r97.<java.util.Iterator: java.lang.Object next()>();

        r98 = (java.util.Map$Entry) $r75;

        $r76 = interfaceinvoke r98.<java.util.Map$Entry: java.lang.Object getValue()>();

        $z14 = $r76 instanceof com.opengamma.analytics.financial.model.interestrate.curve.YieldCurve;

        if $z14 != 0 goto label05;

        $r83 = new java.lang.IllegalArgumentException;

        specialinvoke $r83.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Can only bump YieldCurves");

        throw $r83;

     label05:
        $r77 = interfaceinvoke r98.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r78 = (com.opengamma.analytics.financial.instrument.index.IborIndex) $r77;

        $r79 = interfaceinvoke r98.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r81 = (com.opengamma.analytics.financial.model.interestrate.curve.YieldCurve) $r79;

        $r80 = <com.opengamma.analytics.ShiftType: com.opengamma.analytics.ShiftType ABSOLUTE>;

        $r82 = staticinvoke <com.opengamma.analytics.financial.model.interestrate.curve.YieldCurveUtils: com.opengamma.analytics.financial.model.interestrate.curve.YieldCurve withParallelShift(com.opengamma.analytics.financial.model.interestrate.curve.YieldCurve,double,com.opengamma.analytics.ShiftType)>($r81, 1.0E-4, $r80);

        virtualinvoke $r58.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount: void setCurve(com.opengamma.analytics.financial.instrument.index.IborIndex,com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve)>($r78, $r82);

        goto label04;

     label06:
        $r64 = virtualinvoke r93.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount: java.util.Map getForwardONCurves()>();

        $r65 = interfaceinvoke $r64.<java.util.Map: java.util.Set entrySet()>();

        r99 = interfaceinvoke $r65.<java.util.Set: java.util.Iterator iterator()>();

     label07:
        $z12 = interfaceinvoke r99.<java.util.Iterator: boolean hasNext()>();

        if $z12 == 0 goto label09;

        $r66 = interfaceinvoke r99.<java.util.Iterator: java.lang.Object next()>();

        r100 = (java.util.Map$Entry) $r66;

        $r67 = interfaceinvoke r100.<java.util.Map$Entry: java.lang.Object getValue()>();

        $z13 = $r67 instanceof com.opengamma.analytics.financial.model.interestrate.curve.YieldCurve;

        if $z13 != 0 goto label08;

        $r74 = new java.lang.IllegalArgumentException;

        specialinvoke $r74.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Can only bump YieldCurves");

        throw $r74;

     label08:
        $r68 = interfaceinvoke r100.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r69 = (com.opengamma.analytics.financial.instrument.index.IndexON) $r68;

        $r70 = interfaceinvoke r100.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r72 = (com.opengamma.analytics.financial.model.interestrate.curve.YieldCurve) $r70;

        $r71 = <com.opengamma.analytics.ShiftType: com.opengamma.analytics.ShiftType ABSOLUTE>;

        $r73 = staticinvoke <com.opengamma.analytics.financial.model.interestrate.curve.YieldCurveUtils: com.opengamma.analytics.financial.model.interestrate.curve.YieldCurve withParallelShift(com.opengamma.analytics.financial.model.interestrate.curve.YieldCurve,double,com.opengamma.analytics.ShiftType)>($r72, 1.0E-4, $r71);

        virtualinvoke $r58.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount: void setCurve(com.opengamma.analytics.financial.instrument.index.IndexON,com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve)>($r69, $r73);

        goto label07;

     label09:
        return $r58;

     label10:
        $z1 = r1 instanceof com.opengamma.analytics.financial.provider.description.interestrate.IssuerProviderDiscount;

        if $z1 == 0 goto label23;

        r101 = (com.opengamma.analytics.financial.provider.description.interestrate.IssuerProviderDiscount) r1;

        r102 = virtualinvoke r101.<com.opengamma.analytics.financial.provider.description.interestrate.IssuerProviderDiscount: com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount getMulticurveProvider()>();

        $r8 = new com.opengamma.analytics.financial.provider.description.interestrate.IssuerProviderDiscount;

        $r9 = new com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount;

        $r10 = virtualinvoke r102.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount: com.opengamma.analytics.financial.forex.method.FXMatrix getFxRates()>();

        specialinvoke $r9.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount: void <init>(com.opengamma.analytics.financial.forex.method.FXMatrix)>($r10);

        specialinvoke $r8.<com.opengamma.analytics.financial.provider.description.interestrate.IssuerProviderDiscount: void <init>(com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount)>($r9);

        $r11 = virtualinvoke r102.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount: java.util.Map getDiscountingCurves()>();

        $r12 = interfaceinvoke $r11.<java.util.Map: java.util.Set entrySet()>();

        r104 = interfaceinvoke $r12.<java.util.Set: java.util.Iterator iterator()>();

     label11:
        $z2 = interfaceinvoke r104.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label13;

        $r48 = interfaceinvoke r104.<java.util.Iterator: java.lang.Object next()>();

        r105 = (java.util.Map$Entry) $r48;

        $r49 = interfaceinvoke r105.<java.util.Map$Entry: java.lang.Object getValue()>();

        $z9 = $r49 instanceof com.opengamma.analytics.financial.model.interestrate.curve.YieldCurve;

        if $z9 != 0 goto label12;

        $r57 = new java.lang.IllegalArgumentException;

        specialinvoke $r57.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Can only bump YieldCurves");

        throw $r57;

     label12:
        $r50 = virtualinvoke $r8.<com.opengamma.analytics.financial.provider.description.interestrate.IssuerProviderDiscount: com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount getMulticurveProvider()>();

        $r51 = interfaceinvoke r105.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r52 = (com.opengamma.util.money.Currency) $r51;

        $r53 = interfaceinvoke r105.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r55 = (com.opengamma.analytics.financial.model.interestrate.curve.YieldCurve) $r53;

        $r54 = <com.opengamma.analytics.ShiftType: com.opengamma.analytics.ShiftType ABSOLUTE>;

        $r56 = staticinvoke <com.opengamma.analytics.financial.model.interestrate.curve.YieldCurveUtils: com.opengamma.analytics.financial.model.interestrate.curve.YieldCurve withParallelShift(com.opengamma.analytics.financial.model.interestrate.curve.YieldCurve,double,com.opengamma.analytics.ShiftType)>($r55, 1.0E-4, $r54);

        virtualinvoke $r50.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount: void setCurve(com.opengamma.util.money.Currency,com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve)>($r52, $r56);

        goto label11;

     label13:
        $r13 = virtualinvoke r102.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount: java.util.Map getForwardIborCurves()>();

        $r14 = interfaceinvoke $r13.<java.util.Map: java.util.Set entrySet()>();

        r106 = interfaceinvoke $r14.<java.util.Set: java.util.Iterator iterator()>();

     label14:
        $z3 = interfaceinvoke r106.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label16;

        $r38 = interfaceinvoke r106.<java.util.Iterator: java.lang.Object next()>();

        r107 = (java.util.Map$Entry) $r38;

        $r39 = interfaceinvoke r107.<java.util.Map$Entry: java.lang.Object getValue()>();

        $z8 = $r39 instanceof com.opengamma.analytics.financial.model.interestrate.curve.YieldCurve;

        if $z8 != 0 goto label15;

        $r47 = new java.lang.IllegalArgumentException;

        specialinvoke $r47.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Can only bump YieldCurves");

        throw $r47;

     label15:
        $r40 = virtualinvoke $r8.<com.opengamma.analytics.financial.provider.description.interestrate.IssuerProviderDiscount: com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount getMulticurveProvider()>();

        $r41 = interfaceinvoke r107.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r42 = (com.opengamma.analytics.financial.instrument.index.IborIndex) $r41;

        $r43 = interfaceinvoke r107.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r45 = (com.opengamma.analytics.financial.model.interestrate.curve.YieldCurve) $r43;

        $r44 = <com.opengamma.analytics.ShiftType: com.opengamma.analytics.ShiftType ABSOLUTE>;

        $r46 = staticinvoke <com.opengamma.analytics.financial.model.interestrate.curve.YieldCurveUtils: com.opengamma.analytics.financial.model.interestrate.curve.YieldCurve withParallelShift(com.opengamma.analytics.financial.model.interestrate.curve.YieldCurve,double,com.opengamma.analytics.ShiftType)>($r45, 1.0E-4, $r44);

        virtualinvoke $r40.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount: void setCurve(com.opengamma.analytics.financial.instrument.index.IborIndex,com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve)>($r42, $r46);

        goto label14;

     label16:
        $r15 = virtualinvoke r102.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount: java.util.Map getForwardONCurves()>();

        $r16 = interfaceinvoke $r15.<java.util.Map: java.util.Set entrySet()>();

        r108 = interfaceinvoke $r16.<java.util.Set: java.util.Iterator iterator()>();

     label17:
        $z4 = interfaceinvoke r108.<java.util.Iterator: boolean hasNext()>();

        if $z4 == 0 goto label19;

        $r28 = interfaceinvoke r108.<java.util.Iterator: java.lang.Object next()>();

        r109 = (java.util.Map$Entry) $r28;

        $r29 = interfaceinvoke r109.<java.util.Map$Entry: java.lang.Object getValue()>();

        $z7 = $r29 instanceof com.opengamma.analytics.financial.model.interestrate.curve.YieldCurve;

        if $z7 != 0 goto label18;

        $r37 = new java.lang.IllegalArgumentException;

        specialinvoke $r37.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Can only bump YieldCurves");

        throw $r37;

     label18:
        $r30 = virtualinvoke $r8.<com.opengamma.analytics.financial.provider.description.interestrate.IssuerProviderDiscount: com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount getMulticurveProvider()>();

        $r31 = interfaceinvoke r109.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r32 = (com.opengamma.analytics.financial.instrument.index.IndexON) $r31;

        $r33 = interfaceinvoke r109.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r35 = (com.opengamma.analytics.financial.model.interestrate.curve.YieldCurve) $r33;

        $r34 = <com.opengamma.analytics.ShiftType: com.opengamma.analytics.ShiftType ABSOLUTE>;

        $r36 = staticinvoke <com.opengamma.analytics.financial.model.interestrate.curve.YieldCurveUtils: com.opengamma.analytics.financial.model.interestrate.curve.YieldCurve withParallelShift(com.opengamma.analytics.financial.model.interestrate.curve.YieldCurve,double,com.opengamma.analytics.ShiftType)>($r35, 1.0E-4, $r34);

        virtualinvoke $r30.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount: void setCurve(com.opengamma.analytics.financial.instrument.index.IndexON,com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve)>($r32, $r36);

        goto label17;

     label19:
        $r17 = virtualinvoke r101.<com.opengamma.analytics.financial.provider.description.interestrate.IssuerProviderDiscount: java.util.Map getIssuerCurves()>();

        $r18 = interfaceinvoke $r17.<java.util.Map: java.util.Set entrySet()>();

        r110 = interfaceinvoke $r18.<java.util.Set: java.util.Iterator iterator()>();

     label20:
        $z5 = interfaceinvoke r110.<java.util.Iterator: boolean hasNext()>();

        if $z5 == 0 goto label22;

        $r19 = interfaceinvoke r110.<java.util.Iterator: java.lang.Object next()>();

        r111 = (java.util.Map$Entry) $r19;

        $r20 = interfaceinvoke r111.<java.util.Map$Entry: java.lang.Object getValue()>();

        $z6 = $r20 instanceof com.opengamma.analytics.financial.model.interestrate.curve.YieldCurve;

        if $z6 != 0 goto label21;

        $r27 = new java.lang.IllegalArgumentException;

        specialinvoke $r27.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Can only bump YieldCurves");

        throw $r27;

     label21:
        $r21 = interfaceinvoke r111.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r22 = (com.opengamma.util.tuple.Pair) $r21;

        $r23 = interfaceinvoke r111.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r25 = (com.opengamma.analytics.financial.model.interestrate.curve.YieldCurve) $r23;

        $r24 = <com.opengamma.analytics.ShiftType: com.opengamma.analytics.ShiftType ABSOLUTE>;

        $r26 = staticinvoke <com.opengamma.analytics.financial.model.interestrate.curve.YieldCurveUtils: com.opengamma.analytics.financial.model.interestrate.curve.YieldCurve withParallelShift(com.opengamma.analytics.financial.model.interestrate.curve.YieldCurve,double,com.opengamma.analytics.ShiftType)>($r25, 1.0E-4, $r24);

        virtualinvoke $r8.<com.opengamma.analytics.financial.provider.description.interestrate.IssuerProviderDiscount: void setCurve(com.opengamma.util.tuple.Pair,com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve)>($r22, $r26);

        goto label20;

     label22:
        return $r8;

     label23:
        $r2 = new java.lang.UnsupportedOperationException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot bump curves of type ");

        $r5 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>($r7);

        throw $r2;
    }

    public volatile java.lang.Object visit(com.opengamma.analytics.financial.interestrate.InstrumentDerivative, java.lang.Object)
    {
        com.opengamma.analytics.financial.provider.calculator.discounting.GammaPV01CurveParametersCalculator r0;
        com.opengamma.analytics.financial.interestrate.InstrumentDerivative r1;
        java.lang.Object r2;
        com.opengamma.analytics.financial.provider.description.interestrate.ParameterProviderInterface $r3;
        java.lang.Double $r4;

        r0 := @this: com.opengamma.analytics.financial.provider.calculator.discounting.GammaPV01CurveParametersCalculator;

        r1 := @parameter0: com.opengamma.analytics.financial.interestrate.InstrumentDerivative;

        r2 := @parameter1: java.lang.Object;

        $r3 = (com.opengamma.analytics.financial.provider.description.interestrate.ParameterProviderInterface) r2;

        $r4 = virtualinvoke r0.<com.opengamma.analytics.financial.provider.calculator.discounting.GammaPV01CurveParametersCalculator: java.lang.Double visit(com.opengamma.analytics.financial.interestrate.InstrumentDerivative,com.opengamma.analytics.financial.provider.description.interestrate.ParameterProviderInterface)>(r1, $r3);

        return $r4;
    }

    public volatile java.lang.Object visit(com.opengamma.analytics.financial.interestrate.InstrumentDerivative)
    {
        com.opengamma.analytics.financial.provider.calculator.discounting.GammaPV01CurveParametersCalculator r0;
        com.opengamma.analytics.financial.interestrate.InstrumentDerivative r1;
        java.lang.Double $r2;

        r0 := @this: com.opengamma.analytics.financial.provider.calculator.discounting.GammaPV01CurveParametersCalculator;

        r1 := @parameter0: com.opengamma.analytics.financial.interestrate.InstrumentDerivative;

        $r2 = virtualinvoke r0.<com.opengamma.analytics.financial.provider.calculator.discounting.GammaPV01CurveParametersCalculator: java.lang.Double visit(com.opengamma.analytics.financial.interestrate.InstrumentDerivative)>(r1);

        return $r2;
    }

    public static void <clinit>()
    {
        <com.opengamma.analytics.financial.provider.calculator.discounting.GammaPV01CurveParametersCalculator: double BP1> = 1.0E-4;

        return;
    }
}
