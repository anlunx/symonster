public class com.opengamma.analytics.math.matrix.DoubleMatrix2D extends java.lang.Object implements com.opengamma.analytics.math.matrix.Matrix
{
    private final double[][] _data;
    private final int _rows;
    private final int _columns;
    private final int _elements;
    public static final com.opengamma.analytics.math.matrix.DoubleMatrix2D EMPTY_MATRIX;

    public static com.opengamma.analytics.math.matrix.DoubleMatrix2D noCopy(double[][])
    {
        double[][] r0;
        com.opengamma.analytics.math.matrix.DoubleMatrix2D $r1;

        r0 := @parameter0: double[][];

        $r1 = new com.opengamma.analytics.math.matrix.DoubleMatrix2D;

        specialinvoke $r1.<com.opengamma.analytics.math.matrix.DoubleMatrix2D: void <init>(double[][],boolean)>(r0, 0);

        return $r1;
    }

    public void <init>(int, int)
    {
        com.opengamma.analytics.math.matrix.DoubleMatrix2D r0;
        int i0, i1, $i2, $i3, $i4, $i5, $i6;
        double[][] $r1;
        boolean $z0, $z1;

        r0 := @this: com.opengamma.analytics.math.matrix.DoubleMatrix2D;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        if i0 <= 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        staticinvoke <org.apache.commons.lang.Validate: void isTrue(boolean,java.lang.String)>($z0, "row number cannot be negative or zero");

        if i1 <= 0 goto label3;

        $z1 = 1;

        goto label4;

     label3:
        $z1 = 0;

     label4:
        staticinvoke <org.apache.commons.lang.Validate: void isTrue(boolean,java.lang.String)>($z1, "column number cannot be negative or zero");

        r0.<com.opengamma.analytics.math.matrix.DoubleMatrix2D: int _rows> = i0;

        r0.<com.opengamma.analytics.math.matrix.DoubleMatrix2D: int _columns> = i1;

        $i3 = r0.<com.opengamma.analytics.math.matrix.DoubleMatrix2D: int _rows>;

        $i2 = r0.<com.opengamma.analytics.math.matrix.DoubleMatrix2D: int _columns>;

        $r1 = newmultiarray (double)[$i3][$i2];

        r0.<com.opengamma.analytics.math.matrix.DoubleMatrix2D: double[][] _data> = $r1;

        $i5 = r0.<com.opengamma.analytics.math.matrix.DoubleMatrix2D: int _rows>;

        $i4 = r0.<com.opengamma.analytics.math.matrix.DoubleMatrix2D: int _columns>;

        $i6 = $i5 * $i4;

        r0.<com.opengamma.analytics.math.matrix.DoubleMatrix2D: int _elements> = $i6;

        return;
    }

    public void <init>(double[][])
    {
        com.opengamma.analytics.math.matrix.DoubleMatrix2D r0;
        double[][] r1, $r3, $r4, $r8;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, i10;
        double[] $r2, $r5, $r6, $r7;

        r0 := @this: com.opengamma.analytics.math.matrix.DoubleMatrix2D;

        r1 := @parameter0: double[][];

        specialinvoke r0.<java.lang.Object: void <init>()>();

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object)>(r1);

        $i0 = lengthof r1;

        if $i0 != 0 goto label1;

        $r8 = newmultiarray (double)[0][0];

        r0.<com.opengamma.analytics.math.matrix.DoubleMatrix2D: double[][] _data> = $r8;

        r0.<com.opengamma.analytics.math.matrix.DoubleMatrix2D: int _elements> = 0;

        r0.<com.opengamma.analytics.math.matrix.DoubleMatrix2D: int _rows> = 0;

        r0.<com.opengamma.analytics.math.matrix.DoubleMatrix2D: int _columns> = 0;

        goto label4;

     label1:
        $i1 = lengthof r1;

        r0.<com.opengamma.analytics.math.matrix.DoubleMatrix2D: int _rows> = $i1;

        $r2 = r1[0];

        $i2 = lengthof $r2;

        r0.<com.opengamma.analytics.math.matrix.DoubleMatrix2D: int _columns> = $i2;

        $i4 = r0.<com.opengamma.analytics.math.matrix.DoubleMatrix2D: int _rows>;

        $i3 = r0.<com.opengamma.analytics.math.matrix.DoubleMatrix2D: int _columns>;

        $r3 = newmultiarray (double)[$i4][$i3];

        r0.<com.opengamma.analytics.math.matrix.DoubleMatrix2D: double[][] _data> = $r3;

        i10 = 0;

     label2:
        $i5 = r0.<com.opengamma.analytics.math.matrix.DoubleMatrix2D: int _rows>;

        if i10 >= $i5 goto label3;

        $r7 = r1[i10];

        $r4 = r0.<com.opengamma.analytics.math.matrix.DoubleMatrix2D: double[][] _data>;

        $r6 = $r4[i10];

        $r5 = r1[i10];

        $i9 = lengthof $r5;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r7, 0, $r6, 0, $i9);

        i10 = i10 + 1;

        goto label2;

     label3:
        $i7 = r0.<com.opengamma.analytics.math.matrix.DoubleMatrix2D: int _rows>;

        $i6 = r0.<com.opengamma.analytics.math.matrix.DoubleMatrix2D: int _columns>;

        $i8 = $i7 * $i6;

        r0.<com.opengamma.analytics.math.matrix.DoubleMatrix2D: int _elements> = $i8;

     label4:
        return;
    }

    public void <init>(java.lang.Double[][])
    {
        com.opengamma.analytics.math.matrix.DoubleMatrix2D r0;
        java.lang.Double[][] r1;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, i10, i11;
        java.lang.Double[] $r2, $r5;
        double[][] $r3, $r4, $r8;
        java.lang.Double $r6;
        double[] $r7;
        double $d0;

        r0 := @this: com.opengamma.analytics.math.matrix.DoubleMatrix2D;

        r1 := @parameter0: java.lang.Double[][];

        specialinvoke r0.<java.lang.Object: void <init>()>();

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object)>(r1);

        $i0 = lengthof r1;

        if $i0 != 0 goto label1;

        $r8 = newmultiarray (double)[0][0];

        r0.<com.opengamma.analytics.math.matrix.DoubleMatrix2D: double[][] _data> = $r8;

        r0.<com.opengamma.analytics.math.matrix.DoubleMatrix2D: int _elements> = 0;

        r0.<com.opengamma.analytics.math.matrix.DoubleMatrix2D: int _rows> = 0;

        r0.<com.opengamma.analytics.math.matrix.DoubleMatrix2D: int _columns> = 0;

        goto label6;

     label1:
        $i1 = lengthof r1;

        r0.<com.opengamma.analytics.math.matrix.DoubleMatrix2D: int _rows> = $i1;

        $r2 = r1[0];

        $i2 = lengthof $r2;

        r0.<com.opengamma.analytics.math.matrix.DoubleMatrix2D: int _columns> = $i2;

        $i4 = r0.<com.opengamma.analytics.math.matrix.DoubleMatrix2D: int _rows>;

        $i3 = r0.<com.opengamma.analytics.math.matrix.DoubleMatrix2D: int _columns>;

        $r3 = newmultiarray (double)[$i4][$i3];

        r0.<com.opengamma.analytics.math.matrix.DoubleMatrix2D: double[][] _data> = $r3;

        i10 = 0;

     label2:
        $i5 = r0.<com.opengamma.analytics.math.matrix.DoubleMatrix2D: int _rows>;

        if i10 >= $i5 goto label5;

        i11 = 0;

     label3:
        $i9 = r0.<com.opengamma.analytics.math.matrix.DoubleMatrix2D: int _columns>;

        if i11 >= $i9 goto label4;

        $r4 = r0.<com.opengamma.analytics.math.matrix.DoubleMatrix2D: double[][] _data>;

        $r7 = $r4[i10];

        $r5 = r1[i10];

        $r6 = $r5[i11];

        $d0 = virtualinvoke $r6.<java.lang.Double: double doubleValue()>();

        $r7[i11] = $d0;

        i11 = i11 + 1;

        goto label3;

     label4:
        i10 = i10 + 1;

        goto label2;

     label5:
        $i7 = r0.<com.opengamma.analytics.math.matrix.DoubleMatrix2D: int _rows>;

        $i6 = r0.<com.opengamma.analytics.math.matrix.DoubleMatrix2D: int _columns>;

        $i8 = $i7 * $i6;

        r0.<com.opengamma.analytics.math.matrix.DoubleMatrix2D: int _elements> = $i8;

     label6:
        return;
    }

    private void <init>(double[][], boolean)
    {
        com.opengamma.analytics.math.matrix.DoubleMatrix2D r0;
        double[][] r1;
        boolean z0;
        int $i0, $i1, $i2, $i3, $i4;
        double[] $r2;

        r0 := @this: com.opengamma.analytics.math.matrix.DoubleMatrix2D;

        r1 := @parameter0: double[][];

        z0 := @parameter1: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $i0 = lengthof r1;

        r0.<com.opengamma.analytics.math.matrix.DoubleMatrix2D: int _rows> = $i0;

        $r2 = r1[0];

        $i1 = lengthof $r2;

        r0.<com.opengamma.analytics.math.matrix.DoubleMatrix2D: int _columns> = $i1;

        $i3 = r0.<com.opengamma.analytics.math.matrix.DoubleMatrix2D: int _rows>;

        $i2 = r0.<com.opengamma.analytics.math.matrix.DoubleMatrix2D: int _columns>;

        $i4 = $i3 * $i2;

        r0.<com.opengamma.analytics.math.matrix.DoubleMatrix2D: int _elements> = $i4;

        r0.<com.opengamma.analytics.math.matrix.DoubleMatrix2D: double[][] _data> = r1;

        return;
    }

    public com.opengamma.analytics.math.matrix.DoubleMatrix1D getRowVector(int)
    {
        com.opengamma.analytics.math.matrix.DoubleMatrix2D r0;
        int i0;
        com.opengamma.analytics.math.matrix.DoubleMatrix1D $r1;
        double[][] $r2;
        double[] $r3;

        r0 := @this: com.opengamma.analytics.math.matrix.DoubleMatrix2D;

        i0 := @parameter0: int;

        $r1 = new com.opengamma.analytics.math.matrix.DoubleMatrix1D;

        $r2 = r0.<com.opengamma.analytics.math.matrix.DoubleMatrix2D: double[][] _data>;

        $r3 = $r2[i0];

        specialinvoke $r1.<com.opengamma.analytics.math.matrix.DoubleMatrix1D: void <init>(double[])>($r3);

        return $r1;
    }

    public com.opengamma.analytics.math.matrix.DoubleMatrix1D getColumnVector(int)
    {
        com.opengamma.analytics.math.matrix.DoubleMatrix2D r0;
        int i0, $i1, $i2, i3;
        double[] r1, $r4;
        com.opengamma.analytics.math.matrix.DoubleMatrix1D $r2;
        double[][] $r3;
        double $d0;

        r0 := @this: com.opengamma.analytics.math.matrix.DoubleMatrix2D;

        i0 := @parameter0: int;

        $i1 = r0.<com.opengamma.analytics.math.matrix.DoubleMatrix2D: int _rows>;

        r1 = newarray (double)[$i1];

        i3 = 0;

     label1:
        $i2 = r0.<com.opengamma.analytics.math.matrix.DoubleMatrix2D: int _rows>;

        if i3 >= $i2 goto label2;

        $r3 = r0.<com.opengamma.analytics.math.matrix.DoubleMatrix2D: double[][] _data>;

        $r4 = $r3[i3];

        $d0 = $r4[i0];

        r1[i3] = $d0;

        i3 = i3 + 1;

        goto label1;

     label2:
        $r2 = new com.opengamma.analytics.math.matrix.DoubleMatrix1D;

        specialinvoke $r2.<com.opengamma.analytics.math.matrix.DoubleMatrix1D: void <init>(double[])>(r1);

        return $r2;
    }

    public transient java.lang.Double getEntry(int[])
    {
        com.opengamma.analytics.math.matrix.DoubleMatrix2D r0;
        int[] r1;
        double[][] $r3, $r6, $r8, $r12, $r15;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9;
        java.lang.Object[] $r4, $r10;
        java.lang.Integer $r5, $r7, $r11, $r14;
        double[] $r9, $r13, $r16;
        double $d0;
        java.lang.Double $r17;
        boolean $z0, $z1;

        r0 := @this: com.opengamma.analytics.math.matrix.DoubleMatrix2D;

        r1 := @parameter0: int[];

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "indices");

        $i1 = r1[0];

        $r3 = r0.<com.opengamma.analytics.math.matrix.DoubleMatrix2D: double[][] _data>;

        $i0 = lengthof $r3;

        if $i1 >= $i0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        $r4 = newarray (java.lang.Object)[2];

        $i2 = r1[0];

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        $r4[0] = $r5;

        $r6 = r0.<com.opengamma.analytics.math.matrix.DoubleMatrix2D: double[][] _data>;

        $i3 = lengthof $r6;

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3);

        $r4[1] = $r7;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String,java.lang.Object[])>($z0, "x index {} is greater than length of array {}", $r4);

        $i5 = r1[1];

        $r8 = r0.<com.opengamma.analytics.math.matrix.DoubleMatrix2D: double[][] _data>;

        $r9 = $r8[0];

        $i4 = lengthof $r9;

        if $i5 >= $i4 goto label3;

        $z1 = 1;

        goto label4;

     label3:
        $z1 = 0;

     label4:
        $r10 = newarray (java.lang.Object)[2];

        $i6 = r1[1];

        $r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i6);

        $r10[0] = $r11;

        $r12 = r0.<com.opengamma.analytics.math.matrix.DoubleMatrix2D: double[][] _data>;

        $r13 = $r12[0];

        $i7 = lengthof $r13;

        $r14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i7);

        $r10[1] = $r14;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String,java.lang.Object[])>($z1, "y index {} is greater than length of array {}", $r10);

        $r15 = r0.<com.opengamma.analytics.math.matrix.DoubleMatrix2D: double[][] _data>;

        $i8 = r1[0];

        $r16 = $r15[$i8];

        $i9 = r1[1];

        $d0 = $r16[$i9];

        $r17 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        return $r17;
    }

    public double[][] getData()
    {
        com.opengamma.analytics.math.matrix.DoubleMatrix2D r0;
        double[][] $r1;

        r0 := @this: com.opengamma.analytics.math.matrix.DoubleMatrix2D;

        $r1 = r0.<com.opengamma.analytics.math.matrix.DoubleMatrix2D: double[][] _data>;

        return $r1;
    }

    public double[][] toArray()
    {
        com.opengamma.analytics.math.matrix.DoubleMatrix2D r0, $r2;
        double[][] $r3, $r4;

        r0 := @this: com.opengamma.analytics.math.matrix.DoubleMatrix2D;

        $r2 = new com.opengamma.analytics.math.matrix.DoubleMatrix2D;

        $r3 = r0.<com.opengamma.analytics.math.matrix.DoubleMatrix2D: double[][] _data>;

        specialinvoke $r2.<com.opengamma.analytics.math.matrix.DoubleMatrix2D: void <init>(double[][])>($r3);

        $r4 = virtualinvoke $r2.<com.opengamma.analytics.math.matrix.DoubleMatrix2D: double[][] getData()>();

        return $r4;
    }

    public int getNumberOfElements()
    {
        com.opengamma.analytics.math.matrix.DoubleMatrix2D r0;
        int $i0;

        r0 := @this: com.opengamma.analytics.math.matrix.DoubleMatrix2D;

        $i0 = r0.<com.opengamma.analytics.math.matrix.DoubleMatrix2D: int _elements>;

        return $i0;
    }

    public int getNumberOfRows()
    {
        com.opengamma.analytics.math.matrix.DoubleMatrix2D r0;
        int $i0;

        r0 := @this: com.opengamma.analytics.math.matrix.DoubleMatrix2D;

        $i0 = r0.<com.opengamma.analytics.math.matrix.DoubleMatrix2D: int _rows>;

        return $i0;
    }

    public int getNumberOfColumns()
    {
        com.opengamma.analytics.math.matrix.DoubleMatrix2D r0;
        int $i0;

        r0 := @this: com.opengamma.analytics.math.matrix.DoubleMatrix2D;

        $i0 = r0.<com.opengamma.analytics.math.matrix.DoubleMatrix2D: int _columns>;

        return $i0;
    }

    public int hashCode()
    {
        com.opengamma.analytics.math.matrix.DoubleMatrix2D r0;
        int $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, i10, i11, i12, i13, i14;
        double[][] $r1;
        double[] $r2;
        double $d0;
        java.lang.Double $r3;

        r0 := @this: com.opengamma.analytics.math.matrix.DoubleMatrix2D;

        $i2 = 31 * 1;

        $i1 = r0.<com.opengamma.analytics.math.matrix.DoubleMatrix2D: int _columns>;

        i10 = $i2 + $i1;

        $i4 = 31 * i10;

        $i3 = r0.<com.opengamma.analytics.math.matrix.DoubleMatrix2D: int _rows>;

        i11 = $i4 + $i3;

        i12 = 0;

        i13 = 0;

     label1:
        $i5 = r0.<com.opengamma.analytics.math.matrix.DoubleMatrix2D: int _rows>;

        if i13 >= $i5 goto label6;

        i14 = 0;

     label2:
        $i6 = r0.<com.opengamma.analytics.math.matrix.DoubleMatrix2D: int _columns>;

        if i14 >= $i6 goto label4;

        $i7 = 31 * i11;

        $r1 = r0.<com.opengamma.analytics.math.matrix.DoubleMatrix2D: double[][] _data>;

        $r2 = $r1[i13];

        $d0 = $r2[i14];

        $r3 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        $i8 = virtualinvoke $r3.<java.lang.Double: int hashCode()>();

        i11 = $i7 + $i8;

        if i12 != 10 goto label3;

        goto label4;

     label3:
        i12 = i12 + 1;

        i14 = i14 + 1;

        goto label2;

     label4:
        if i12 != 10 goto label5;

        goto label6;

     label5:
        i13 = i13 + 1;

        goto label1;

     label6:
        return i11;
    }

    public boolean equals(java.lang.Object)
    {
        com.opengamma.analytics.math.matrix.DoubleMatrix2D r0, r2;
        java.lang.Object r1;
        java.lang.Class $r3, $r4;
        int $i0, $i1, $i2, $i3, $i4, $i5, i9, i10;
        double[][] $r5, $r7;
        double[] $r6, $r8;
        double $d0, $d1;
        long $l6, $l7;
        byte $b8;

        r0 := @this: com.opengamma.analytics.math.matrix.DoubleMatrix2D;

        r1 := @parameter0: java.lang.Object;

        if r0 != r1 goto label01;

        return 1;

     label01:
        if r1 != null goto label02;

        return 0;

     label02:
        $r3 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r4 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        if $r3 == $r4 goto label03;

        return 0;

     label03:
        r2 = (com.opengamma.analytics.math.matrix.DoubleMatrix2D) r1;

        $i1 = r0.<com.opengamma.analytics.math.matrix.DoubleMatrix2D: int _columns>;

        $i0 = r2.<com.opengamma.analytics.math.matrix.DoubleMatrix2D: int _columns>;

        if $i1 == $i0 goto label04;

        return 0;

     label04:
        $i3 = r0.<com.opengamma.analytics.math.matrix.DoubleMatrix2D: int _rows>;

        $i2 = r2.<com.opengamma.analytics.math.matrix.DoubleMatrix2D: int _rows>;

        if $i3 == $i2 goto label05;

        return 0;

     label05:
        i9 = 0;

     label06:
        $i4 = r0.<com.opengamma.analytics.math.matrix.DoubleMatrix2D: int _rows>;

        if i9 >= $i4 goto label10;

        i10 = 0;

     label07:
        $i5 = r0.<com.opengamma.analytics.math.matrix.DoubleMatrix2D: int _columns>;

        if i10 >= $i5 goto label09;

        $r5 = r0.<com.opengamma.analytics.math.matrix.DoubleMatrix2D: double[][] _data>;

        $r6 = $r5[i9];

        $d0 = $r6[i10];

        $l6 = staticinvoke <java.lang.Double: long doubleToLongBits(double)>($d0);

        $r7 = r2.<com.opengamma.analytics.math.matrix.DoubleMatrix2D: double[][] _data>;

        $r8 = $r7[i9];

        $d1 = $r8[i10];

        $l7 = staticinvoke <java.lang.Double: long doubleToLongBits(double)>($d1);

        $b8 = $l6 cmp $l7;

        if $b8 == 0 goto label08;

        return 0;

     label08:
        i10 = i10 + 1;

        goto label07;

     label09:
        i9 = i9 + 1;

        goto label06;

     label10:
        return 1;
    }

    public java.lang.String toString()
    {
        com.opengamma.analytics.math.matrix.DoubleMatrix2D r0;
        double[][] r2;
        int i0, $i1, $i2, $i3, i4, i5;
        double[] r3;
        java.lang.StringBuffer $r4;
        java.lang.String $r5, $r9;
        double $d0;

        r0 := @this: com.opengamma.analytics.math.matrix.DoubleMatrix2D;

        $r4 = new java.lang.StringBuffer;

        specialinvoke $r4.<java.lang.StringBuffer: void <init>()>();

        r2 = r0.<com.opengamma.analytics.math.matrix.DoubleMatrix2D: double[][] _data>;

        i0 = lengthof r2;

        i4 = 0;

     label1:
        if i4 >= i0 goto label6;

        r3 = r2[i4];

        i5 = 0;

     label2:
        $i1 = lengthof r3;

        if i5 >= $i1 goto label5;

        $d0 = r3[i5];

        virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(double)>($d0);

        $i2 = lengthof r3;

        $i3 = $i2 - 1;

        if i5 != $i3 goto label3;

        $r9 = "\n";

        goto label4;

     label3:
        $r9 = "\t";

     label4:
        virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r9);

        i5 = i5 + 1;

        goto label2;

     label5:
        i4 = i4 + 1;

        goto label1;

     label6:
        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r5;
    }

    public volatile java.lang.Object getEntry(int[])
    {
        com.opengamma.analytics.math.matrix.DoubleMatrix2D r0;
        int[] r1;
        java.lang.Double $r2;

        r0 := @this: com.opengamma.analytics.math.matrix.DoubleMatrix2D;

        r1 := @parameter0: int[];

        $r2 = virtualinvoke r0.<com.opengamma.analytics.math.matrix.DoubleMatrix2D: java.lang.Double getEntry(int[])>(r1);

        return $r2;
    }

    static void <clinit>()
    {
        com.opengamma.analytics.math.matrix.DoubleMatrix2D $r0;
        double[][] $r1;

        $r0 = new com.opengamma.analytics.math.matrix.DoubleMatrix2D;

        $r1 = newmultiarray (double)[0][0];

        specialinvoke $r0.<com.opengamma.analytics.math.matrix.DoubleMatrix2D: void <init>(double[][])>($r1);

        <com.opengamma.analytics.math.matrix.DoubleMatrix2D: com.opengamma.analytics.math.matrix.DoubleMatrix2D EMPTY_MATRIX> = $r0;

        return;
    }
}
