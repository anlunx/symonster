class com.opengamma.analytics.financial.model.option.pricing.fourier.MeanCorrection$1 extends com.opengamma.analytics.math.function.Function1D
{
    final com.opengamma.analytics.math.function.Function1D val$func;
    final com.opengamma.analytics.math.number.ComplexNumber val$w;
    final com.opengamma.analytics.financial.model.option.pricing.fourier.MeanCorrection this$0;

    void <init>(com.opengamma.analytics.financial.model.option.pricing.fourier.MeanCorrection, com.opengamma.analytics.math.function.Function1D, com.opengamma.analytics.math.number.ComplexNumber)
    {
        com.opengamma.analytics.financial.model.option.pricing.fourier.MeanCorrection$1 r0;
        com.opengamma.analytics.financial.model.option.pricing.fourier.MeanCorrection r1;
        com.opengamma.analytics.math.function.Function1D r2;
        com.opengamma.analytics.math.number.ComplexNumber r3;

        r0 := @this: com.opengamma.analytics.financial.model.option.pricing.fourier.MeanCorrection$1;

        r1 := @parameter0: com.opengamma.analytics.financial.model.option.pricing.fourier.MeanCorrection;

        r2 := @parameter1: com.opengamma.analytics.math.function.Function1D;

        r3 := @parameter2: com.opengamma.analytics.math.number.ComplexNumber;

        r0.<com.opengamma.analytics.financial.model.option.pricing.fourier.MeanCorrection$1: com.opengamma.analytics.financial.model.option.pricing.fourier.MeanCorrection this$0> = r1;

        r0.<com.opengamma.analytics.financial.model.option.pricing.fourier.MeanCorrection$1: com.opengamma.analytics.math.function.Function1D val$func> = r2;

        r0.<com.opengamma.analytics.financial.model.option.pricing.fourier.MeanCorrection$1: com.opengamma.analytics.math.number.ComplexNumber val$w> = r3;

        specialinvoke r0.<com.opengamma.analytics.math.function.Function1D: void <init>()>();

        return;
    }

    public com.opengamma.analytics.math.number.ComplexNumber evaluate(com.opengamma.analytics.math.number.ComplexNumber)
    {
        com.opengamma.analytics.financial.model.option.pricing.fourier.MeanCorrection$1 r0;
        com.opengamma.analytics.math.number.ComplexNumber r1, $r4, $r5, $r6, $r7;
        com.opengamma.analytics.math.function.Function1D $r2;
        java.lang.Object $r3;

        r0 := @this: com.opengamma.analytics.financial.model.option.pricing.fourier.MeanCorrection$1;

        r1 := @parameter0: com.opengamma.analytics.math.number.ComplexNumber;

        $r2 = r0.<com.opengamma.analytics.financial.model.option.pricing.fourier.MeanCorrection$1: com.opengamma.analytics.math.function.Function1D val$func>;

        $r3 = virtualinvoke $r2.<com.opengamma.analytics.math.function.Function1D: java.lang.Object evaluate(java.lang.Object)>(r1);

        $r5 = (com.opengamma.analytics.math.number.ComplexNumber) $r3;

        $r4 = r0.<com.opengamma.analytics.financial.model.option.pricing.fourier.MeanCorrection$1: com.opengamma.analytics.math.number.ComplexNumber val$w>;

        $r6 = staticinvoke <com.opengamma.analytics.math.ComplexMathUtils: com.opengamma.analytics.math.number.ComplexNumber multiply(com.opengamma.analytics.math.number.ComplexNumber,com.opengamma.analytics.math.number.ComplexNumber)>($r4, r1);

        $r7 = staticinvoke <com.opengamma.analytics.math.ComplexMathUtils: com.opengamma.analytics.math.number.ComplexNumber add(com.opengamma.analytics.math.number.ComplexNumber,com.opengamma.analytics.math.number.ComplexNumber)>($r5, $r6);

        return $r7;
    }

    public volatile java.lang.Object evaluate(java.lang.Object)
    {
        com.opengamma.analytics.financial.model.option.pricing.fourier.MeanCorrection$1 r0;
        java.lang.Object r1;
        com.opengamma.analytics.math.number.ComplexNumber $r2, $r3;

        r0 := @this: com.opengamma.analytics.financial.model.option.pricing.fourier.MeanCorrection$1;

        r1 := @parameter0: java.lang.Object;

        $r2 = (com.opengamma.analytics.math.number.ComplexNumber) r1;

        $r3 = virtualinvoke r0.<com.opengamma.analytics.financial.model.option.pricing.fourier.MeanCorrection$1: com.opengamma.analytics.math.number.ComplexNumber evaluate(com.opengamma.analytics.math.number.ComplexNumber)>($r2);

        return $r3;
    }
}
