public final class com.opengamma.analytics.financial.equity.variance.VarianceSwapSensitivityCalculator extends com.opengamma.analytics.financial.equity.EquityDerivativeSensitivityCalculator
{
    private static final com.opengamma.analytics.financial.equity.variance.VarianceSwapSensitivityCalculator INSTANCE;

    public static com.opengamma.analytics.financial.equity.variance.VarianceSwapSensitivityCalculator getInstance()
    {
        com.opengamma.analytics.financial.equity.variance.VarianceSwapSensitivityCalculator $r0;

        $r0 = <com.opengamma.analytics.financial.equity.variance.VarianceSwapSensitivityCalculator: com.opengamma.analytics.financial.equity.variance.VarianceSwapSensitivityCalculator INSTANCE>;

        return $r0;
    }

    private void <init>()
    {
        com.opengamma.analytics.financial.equity.variance.VarianceSwapSensitivityCalculator r0;
        com.opengamma.analytics.financial.equity.variance.VarianceSwapPresentValueCalculator $r1;

        r0 := @this: com.opengamma.analytics.financial.equity.variance.VarianceSwapSensitivityCalculator;

        $r1 = staticinvoke <com.opengamma.analytics.financial.equity.variance.VarianceSwapPresentValueCalculator: com.opengamma.analytics.financial.equity.variance.VarianceSwapPresentValueCalculator getInstance()>();

        specialinvoke r0.<com.opengamma.analytics.financial.equity.EquityDerivativeSensitivityCalculator: void <init>(com.opengamma.analytics.financial.interestrate.InstrumentDerivativeVisitor)>($r1);

        return;
    }

    public java.lang.Double calcDiscountRateSensitivity(com.opengamma.analytics.financial.varianceswap.VarianceSwap, com.opengamma.analytics.financial.equity.StaticReplicationDataBundle, double)
    {
        com.opengamma.analytics.financial.equity.variance.VarianceSwapSensitivityCalculator r0;
        com.opengamma.analytics.financial.varianceswap.VarianceSwap r1;
        com.opengamma.analytics.financial.equity.StaticReplicationDataBundle r2;
        double d0, d1, d2, d3, d4, $d5, $d6, $d7;
        com.opengamma.analytics.financial.equity.variance.pricing.VarianceSwapStaticReplication $r6;
        java.lang.Double $r7, $r9;
        com.opengamma.analytics.financial.model.interestrate.curve.ForwardCurve $r8;

        r0 := @this: com.opengamma.analytics.financial.equity.variance.VarianceSwapSensitivityCalculator;

        r1 := @parameter0: com.opengamma.analytics.financial.varianceswap.VarianceSwap;

        r2 := @parameter1: com.opengamma.analytics.financial.equity.StaticReplicationDataBundle;

        d0 := @parameter2: double;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, "market");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "swap");

        $r6 = new com.opengamma.analytics.financial.equity.variance.pricing.VarianceSwapStaticReplication;

        specialinvoke $r6.<com.opengamma.analytics.financial.equity.variance.pricing.VarianceSwapStaticReplication: void <init>()>();

        d1 = virtualinvoke $r6.<com.opengamma.analytics.financial.equity.variance.pricing.VarianceSwapStaticReplication: double presentValue(com.opengamma.analytics.financial.varianceswap.VarianceSwap,com.opengamma.analytics.financial.equity.StaticReplicationDataBundle)>(r1, r2);

        d2 = virtualinvoke r1.<com.opengamma.analytics.financial.varianceswap.VarianceSwap: double getTimeToSettlement()>();

        $r7 = virtualinvoke r0.<com.opengamma.analytics.financial.equity.variance.VarianceSwapSensitivityCalculator: java.lang.Double calcForwardSensitivity(com.opengamma.analytics.financial.interestrate.InstrumentDerivative,com.opengamma.analytics.financial.equity.StaticReplicationDataBundle,double)>(r1, r2, d0);

        d3 = virtualinvoke $r7.<java.lang.Double: double doubleValue()>();

        $r8 = virtualinvoke r2.<com.opengamma.analytics.financial.equity.StaticReplicationDataBundle: com.opengamma.analytics.financial.model.interestrate.curve.ForwardCurve getForwardCurve()>();

        d4 = virtualinvoke $r8.<com.opengamma.analytics.financial.model.interestrate.curve.ForwardCurve: double getForward(double)>(d2);

        $d5 = d4 * d3;

        $d6 = $d5 - d1;

        $d7 = d2 * $d6;

        $r9 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d7);

        return $r9;
    }

    public java.lang.Double calcDiscountRateSensitivity(com.opengamma.analytics.financial.varianceswap.VarianceSwap, com.opengamma.analytics.financial.equity.StaticReplicationDataBundle)
    {
        com.opengamma.analytics.financial.equity.variance.VarianceSwapSensitivityCalculator r0;
        com.opengamma.analytics.financial.varianceswap.VarianceSwap r1;
        com.opengamma.analytics.financial.equity.StaticReplicationDataBundle r2;
        java.lang.Double $r3;

        r0 := @this: com.opengamma.analytics.financial.equity.variance.VarianceSwapSensitivityCalculator;

        r1 := @parameter0: com.opengamma.analytics.financial.varianceswap.VarianceSwap;

        r2 := @parameter1: com.opengamma.analytics.financial.equity.StaticReplicationDataBundle;

        $r3 = virtualinvoke r0.<com.opengamma.analytics.financial.equity.variance.VarianceSwapSensitivityCalculator: java.lang.Double calcDiscountRateSensitivity(com.opengamma.analytics.financial.varianceswap.VarianceSwap,com.opengamma.analytics.financial.equity.StaticReplicationDataBundle,double)>(r1, r2, 0.01);

        return $r3;
    }

    public java.lang.Double calcPV01(com.opengamma.analytics.financial.varianceswap.VarianceSwap, com.opengamma.analytics.financial.equity.StaticReplicationDataBundle)
    {
        com.opengamma.analytics.financial.equity.variance.VarianceSwapSensitivityCalculator r0;
        com.opengamma.analytics.financial.varianceswap.VarianceSwap r1;
        com.opengamma.analytics.financial.equity.StaticReplicationDataBundle r2;
        java.lang.Double $r3, $r4;
        double $d0, $d1;

        r0 := @this: com.opengamma.analytics.financial.equity.variance.VarianceSwapSensitivityCalculator;

        r1 := @parameter0: com.opengamma.analytics.financial.varianceswap.VarianceSwap;

        r2 := @parameter1: com.opengamma.analytics.financial.equity.StaticReplicationDataBundle;

        $r3 = virtualinvoke r0.<com.opengamma.analytics.financial.equity.variance.VarianceSwapSensitivityCalculator: java.lang.Double calcDiscountRateSensitivity(com.opengamma.analytics.financial.varianceswap.VarianceSwap,com.opengamma.analytics.financial.equity.StaticReplicationDataBundle)>(r1, r2);

        $d0 = virtualinvoke $r3.<java.lang.Double: double doubleValue()>();

        $d1 = $d0 / 10000.0;

        $r4 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d1);

        return $r4;
    }

    public com.opengamma.analytics.math.matrix.DoubleMatrix1D calcDeltaBucketed(com.opengamma.analytics.financial.varianceswap.VarianceSwap, com.opengamma.analytics.financial.equity.StaticReplicationDataBundle)
    {
        com.opengamma.analytics.financial.equity.variance.VarianceSwapSensitivityCalculator r0;
        com.opengamma.analytics.financial.varianceswap.VarianceSwap r1;
        com.opengamma.analytics.financial.equity.StaticReplicationDataBundle r2;
        com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve r3;
        double d0, d1;
        com.opengamma.analytics.financial.interestrate.PresentValueNodeSensitivityCalculator r4;
        java.util.List r5, $r11;
        boolean $z0;
        java.lang.Double $r8;
        com.opengamma.util.tuple.DoublesPair[] $r9;
        com.opengamma.util.tuple.DoublesPair $r10;
        com.opengamma.analytics.financial.model.interestrate.curve.YieldCurve $r12;
        com.opengamma.analytics.math.matrix.DoubleMatrix1D $r13;
        int $i0;
        java.lang.Double[] $r14, $r16;
        java.lang.Object[] $r15;
        java.lang.IllegalArgumentException $r17;

        r0 := @this: com.opengamma.analytics.financial.equity.variance.VarianceSwapSensitivityCalculator;

        r1 := @parameter0: com.opengamma.analytics.financial.varianceswap.VarianceSwap;

        r2 := @parameter1: com.opengamma.analytics.financial.equity.StaticReplicationDataBundle;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "null VarianceSwap");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, "null EquityOptionDataBundle");

        r3 = virtualinvoke r2.<com.opengamma.analytics.financial.equity.StaticReplicationDataBundle: com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve getDiscountCurve()>();

        $z0 = r3 instanceof com.opengamma.analytics.financial.model.interestrate.curve.YieldCurve;

        if $z0 != 0 goto label1;

        $r17 = new java.lang.IllegalArgumentException;

        specialinvoke $r17.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Can only handle YieldCurve");

        throw $r17;

     label1:
        d0 = virtualinvoke r1.<com.opengamma.analytics.financial.varianceswap.VarianceSwap: double getTimeToSettlement()>();

        $r8 = virtualinvoke r0.<com.opengamma.analytics.financial.equity.variance.VarianceSwapSensitivityCalculator: java.lang.Double calcDiscountRateSensitivity(com.opengamma.analytics.financial.varianceswap.VarianceSwap,com.opengamma.analytics.financial.equity.StaticReplicationDataBundle)>(r1, r2);

        d1 = virtualinvoke $r8.<java.lang.Double: double doubleValue()>();

        r4 = staticinvoke <com.opengamma.analytics.financial.interestrate.PresentValueNodeSensitivityCalculator: com.opengamma.analytics.financial.interestrate.PresentValueNodeSensitivityCalculator getDefaultInstance()>();

        $r9 = newarray (com.opengamma.util.tuple.DoublesPair)[1];

        $r10 = staticinvoke <com.opengamma.util.tuple.DoublesPair: com.opengamma.util.tuple.DoublesPair of(double,double)>(d0, d1);

        $r9[0] = $r10;

        $r11 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r9);

        $r12 = (com.opengamma.analytics.financial.model.interestrate.curve.YieldCurve) r3;

        r5 = virtualinvoke r4.<com.opengamma.analytics.financial.interestrate.NodeYieldSensitivityCalculator: java.util.List curveToNodeSensitivity(java.util.List,com.opengamma.analytics.financial.model.interestrate.curve.YieldCurve)>($r11, $r12);

        $r13 = new com.opengamma.analytics.math.matrix.DoubleMatrix1D;

        $i0 = interfaceinvoke r5.<java.util.List: int size()>();

        $r14 = newarray (java.lang.Double)[$i0];

        $r15 = interfaceinvoke r5.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r14);

        $r16 = (java.lang.Double[]) $r15;

        specialinvoke $r13.<com.opengamma.analytics.math.matrix.DoubleMatrix1D: void <init>(java.lang.Double[])>($r16);

        return $r13;
    }

    public java.lang.Double calcSensitivityToFairVariance(com.opengamma.analytics.financial.varianceswap.VarianceSwap, com.opengamma.analytics.financial.equity.StaticReplicationDataBundle)
    {
        com.opengamma.analytics.financial.equity.variance.VarianceSwapSensitivityCalculator r0;
        com.opengamma.analytics.financial.varianceswap.VarianceSwap r1;
        com.opengamma.analytics.financial.equity.StaticReplicationDataBundle r2;
        int i0, i1, i2, $i3, $i4;
        double[] $r5;
        double $d0, $d1, $d2, $d3, $d4;
        java.lang.Double $r6;

        r0 := @this: com.opengamma.analytics.financial.equity.variance.VarianceSwapSensitivityCalculator;

        r1 := @parameter0: com.opengamma.analytics.financial.varianceswap.VarianceSwap;

        r2 := @parameter1: com.opengamma.analytics.financial.equity.StaticReplicationDataBundle;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "null VarianceSwap");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, "null EquityOptionDataBundle");

        i0 = virtualinvoke r1.<com.opengamma.analytics.financial.varianceswap.VarianceSwap: int getObsExpected()>();

        $r5 = virtualinvoke r1.<com.opengamma.analytics.financial.varianceswap.VarianceSwap: double[] getObservations()>();

        i1 = lengthof $r5;

        i2 = virtualinvoke r1.<com.opengamma.analytics.financial.varianceswap.VarianceSwap: int getObsDisrupted()>();

        $i3 = i0 - i1;

        $i4 = $i3 - i2;

        $d1 = (double) $i4;

        $d0 = (double) i0;

        $d2 = $d1 / $d0;

        $d3 = virtualinvoke r1.<com.opengamma.analytics.financial.varianceswap.VarianceSwap: double getVarNotional()>();

        $d4 = $d2 * $d3;

        $r6 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d4);

        return $r6;
    }

    static void <clinit>()
    {
        com.opengamma.analytics.financial.equity.variance.VarianceSwapSensitivityCalculator $r0;

        $r0 = new com.opengamma.analytics.financial.equity.variance.VarianceSwapSensitivityCalculator;

        specialinvoke $r0.<com.opengamma.analytics.financial.equity.variance.VarianceSwapSensitivityCalculator: void <init>()>();

        <com.opengamma.analytics.financial.equity.variance.VarianceSwapSensitivityCalculator: com.opengamma.analytics.financial.equity.variance.VarianceSwapSensitivityCalculator INSTANCE> = $r0;

        return;
    }
}
