public class com.opengamma.analytics.financial.riskreward.TreynorRatioCalculator extends java.lang.Object
{
    private final com.opengamma.analytics.financial.timeseries.analysis.DoubleTimeSeriesStatisticsCalculator _expectedAssetReturnCalculator;
    private final com.opengamma.analytics.financial.timeseries.analysis.DoubleTimeSeriesStatisticsCalculator _expectedRiskFreeReturnCalculator;

    public void <init>(com.opengamma.analytics.financial.timeseries.analysis.DoubleTimeSeriesStatisticsCalculator, com.opengamma.analytics.financial.timeseries.analysis.DoubleTimeSeriesStatisticsCalculator)
    {
        com.opengamma.analytics.financial.riskreward.TreynorRatioCalculator r0;
        com.opengamma.analytics.financial.timeseries.analysis.DoubleTimeSeriesStatisticsCalculator r1, r2;

        r0 := @this: com.opengamma.analytics.financial.riskreward.TreynorRatioCalculator;

        r1 := @parameter0: com.opengamma.analytics.financial.timeseries.analysis.DoubleTimeSeriesStatisticsCalculator;

        r2 := @parameter1: com.opengamma.analytics.financial.timeseries.analysis.DoubleTimeSeriesStatisticsCalculator;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object,java.lang.String)>(r1, "expected asset return calculator");

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object,java.lang.String)>(r2, "expected risk free return calculator");

        r0.<com.opengamma.analytics.financial.riskreward.TreynorRatioCalculator: com.opengamma.analytics.financial.timeseries.analysis.DoubleTimeSeriesStatisticsCalculator _expectedAssetReturnCalculator> = r1;

        r0.<com.opengamma.analytics.financial.riskreward.TreynorRatioCalculator: com.opengamma.analytics.financial.timeseries.analysis.DoubleTimeSeriesStatisticsCalculator _expectedRiskFreeReturnCalculator> = r2;

        return;
    }

    public double evaluate(com.opengamma.timeseries.DoubleTimeSeries, com.opengamma.timeseries.DoubleTimeSeries, double)
    {
        com.opengamma.analytics.financial.riskreward.TreynorRatioCalculator r0;
        com.opengamma.timeseries.DoubleTimeSeries r1, r2;
        double d0, $d1, $d2, $d3, $d4;
        java.lang.Double r3, r4;
        com.opengamma.timeseries.DoubleTimeSeries[] $r5, $r7;
        com.opengamma.analytics.financial.timeseries.analysis.DoubleTimeSeriesStatisticsCalculator $r6, $r8;

        r0 := @this: com.opengamma.analytics.financial.riskreward.TreynorRatioCalculator;

        r1 := @parameter0: com.opengamma.timeseries.DoubleTimeSeries;

        r2 := @parameter1: com.opengamma.timeseries.DoubleTimeSeries;

        d0 := @parameter2: double;

        staticinvoke <com.opengamma.analytics.financial.timeseries.util.TimeSeriesDataTestUtils: void testNotNullOrEmpty(com.opengamma.timeseries.DoubleTimeSeries)>(r1);

        staticinvoke <com.opengamma.analytics.financial.timeseries.util.TimeSeriesDataTestUtils: void testNotNullOrEmpty(com.opengamma.timeseries.DoubleTimeSeries)>(r2);

        $r6 = r0.<com.opengamma.analytics.financial.riskreward.TreynorRatioCalculator: com.opengamma.analytics.financial.timeseries.analysis.DoubleTimeSeriesStatisticsCalculator _expectedAssetReturnCalculator>;

        $r5 = newarray (com.opengamma.timeseries.DoubleTimeSeries)[1];

        $r5[0] = r1;

        r3 = virtualinvoke $r6.<com.opengamma.analytics.financial.timeseries.analysis.DoubleTimeSeriesStatisticsCalculator: java.lang.Double evaluate(com.opengamma.timeseries.DoubleTimeSeries[])>($r5);

        $r8 = r0.<com.opengamma.analytics.financial.riskreward.TreynorRatioCalculator: com.opengamma.analytics.financial.timeseries.analysis.DoubleTimeSeriesStatisticsCalculator _expectedRiskFreeReturnCalculator>;

        $r7 = newarray (com.opengamma.timeseries.DoubleTimeSeries)[1];

        $r7[0] = r2;

        r4 = virtualinvoke $r8.<com.opengamma.analytics.financial.timeseries.analysis.DoubleTimeSeriesStatisticsCalculator: java.lang.Double evaluate(com.opengamma.timeseries.DoubleTimeSeries[])>($r7);

        $d1 = virtualinvoke r3.<java.lang.Double: double doubleValue()>();

        $d2 = virtualinvoke r4.<java.lang.Double: double doubleValue()>();

        $d3 = $d1 - $d2;

        $d4 = $d3 / d0;

        return $d4;
    }
}
