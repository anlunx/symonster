final class com.opengamma.analytics.financial.model.volatility.surface.MixedLogNormalVolatilitySurface$1 extends java.lang.Object implements com.opengamma.analytics.math.function.Function
{
    final com.opengamma.analytics.financial.model.interestrate.curve.ForwardCurve val$fwdCurve;
    final double val$tZeroLimit;
    final int val$n;
    final double[] val$w;
    final double[] val$mu;
    final double[] val$sigma;
    final com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve val$disCurve;

    void <init>(com.opengamma.analytics.financial.model.interestrate.curve.ForwardCurve, double, int, double[], double[], double[], com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve)
    {
        com.opengamma.analytics.financial.model.volatility.surface.MixedLogNormalVolatilitySurface$1 r0;
        com.opengamma.analytics.financial.model.interestrate.curve.ForwardCurve r1;
        double d0;
        int i0;
        double[] r2, r3, r4;
        com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve r5;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.surface.MixedLogNormalVolatilitySurface$1;

        r1 := @parameter0: com.opengamma.analytics.financial.model.interestrate.curve.ForwardCurve;

        d0 := @parameter1: double;

        i0 := @parameter2: int;

        r2 := @parameter3: double[];

        r3 := @parameter4: double[];

        r4 := @parameter5: double[];

        r5 := @parameter6: com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve;

        r0.<com.opengamma.analytics.financial.model.volatility.surface.MixedLogNormalVolatilitySurface$1: com.opengamma.analytics.financial.model.interestrate.curve.ForwardCurve val$fwdCurve> = r1;

        r0.<com.opengamma.analytics.financial.model.volatility.surface.MixedLogNormalVolatilitySurface$1: double val$tZeroLimit> = d0;

        r0.<com.opengamma.analytics.financial.model.volatility.surface.MixedLogNormalVolatilitySurface$1: int val$n> = i0;

        r0.<com.opengamma.analytics.financial.model.volatility.surface.MixedLogNormalVolatilitySurface$1: double[] val$w> = r2;

        r0.<com.opengamma.analytics.financial.model.volatility.surface.MixedLogNormalVolatilitySurface$1: double[] val$mu> = r3;

        r0.<com.opengamma.analytics.financial.model.volatility.surface.MixedLogNormalVolatilitySurface$1: double[] val$sigma> = r4;

        r0.<com.opengamma.analytics.financial.model.volatility.surface.MixedLogNormalVolatilitySurface$1: com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve val$disCurve> = r5;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public transient java.lang.Double evaluate(java.lang.Double[])
    {
        com.opengamma.analytics.financial.model.volatility.surface.MixedLogNormalVolatilitySurface$1 r0;
        java.lang.Double[] r1;
        double d0, d1, d2, d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, d20, d21, d22;
        java.lang.Double $r2, $r3, $r6, $r12;
        com.opengamma.analytics.financial.model.interestrate.curve.ForwardCurve $r4;
        byte $b0, $b1, $b2;
        com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve $r5;
        double[] $r7, $r8, $r9, $r10, $r11;
        int i3, $i4, i5, $i6;
        boolean $z0, z1;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.surface.MixedLogNormalVolatilitySurface$1;

        r1 := @parameter0: java.lang.Double[];

        $r2 = r1[0];

        d20 = virtualinvoke $r2.<java.lang.Double: double doubleValue()>();

        $r3 = r1[1];

        d0 = virtualinvoke $r3.<java.lang.Double: double doubleValue()>();

        $r4 = r0.<com.opengamma.analytics.financial.model.volatility.surface.MixedLogNormalVolatilitySurface$1: com.opengamma.analytics.financial.model.interestrate.curve.ForwardCurve val$fwdCurve>;

        d1 = virtualinvoke $r4.<com.opengamma.analytics.financial.model.interestrate.curve.ForwardCurve: double getForward(double)>(d20);

        $b0 = d20 cmpg 1.0E-6;

        if $b0 >= 0 goto label2;

        $b2 = d0 cmpl d1;

        if $b2 != 0 goto label1;

        $d19 = r0.<com.opengamma.analytics.financial.model.volatility.surface.MixedLogNormalVolatilitySurface$1: double val$tZeroLimit>;

        $r12 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d19);

        return $r12;

     label1:
        d20 = 1.0E-6;

     label2:
        d21 = 0.0;

        i3 = 0;

     label3:
        $i4 = r0.<com.opengamma.analytics.financial.model.volatility.surface.MixedLogNormalVolatilitySurface$1: int val$n>;

        if i3 >= $i4 goto label4;

        $r10 = r0.<com.opengamma.analytics.financial.model.volatility.surface.MixedLogNormalVolatilitySurface$1: double[] val$w>;

        $d16 = $r10[i3];

        $r11 = r0.<com.opengamma.analytics.financial.model.volatility.surface.MixedLogNormalVolatilitySurface$1: double[] val$mu>;

        $d14 = $r11[i3];

        $d15 = d20 * $d14;

        $d17 = staticinvoke <java.lang.Math: double exp(double)>($d15);

        $d18 = $d16 * $d17;

        d21 = d21 + $d18;

        i3 = i3 + 1;

        goto label3;

     label4:
        $b1 = d0 cmpl d1;

        if $b1 < 0 goto label5;

        $z0 = 1;

        goto label6;

     label5:
        $z0 = 0;

     label6:
        z1 = $z0;

        d2 = d0 / d1;

        d22 = 0.0;

        i5 = 0;

     label7:
        $i6 = r0.<com.opengamma.analytics.financial.model.volatility.surface.MixedLogNormalVolatilitySurface$1: int val$n>;

        if i5 >= $i6 goto label8;

        $r7 = r0.<com.opengamma.analytics.financial.model.volatility.surface.MixedLogNormalVolatilitySurface$1: double[] val$mu>;

        $d7 = $r7[i5];

        $d8 = d20 * $d7;

        $d9 = staticinvoke <java.lang.Math: double exp(double)>($d8);

        d3 = $d9 / d21;

        $r8 = r0.<com.opengamma.analytics.financial.model.volatility.surface.MixedLogNormalVolatilitySurface$1: double[] val$w>;

        $d11 = $r8[i5];

        $r9 = r0.<com.opengamma.analytics.financial.model.volatility.surface.MixedLogNormalVolatilitySurface$1: double[] val$sigma>;

        $d10 = $r9[i5];

        $d12 = staticinvoke <com.opengamma.analytics.financial.model.volatility.BlackFormulaRepository: double price(double,double,double,double,boolean)>(d3, d2, d20, $d10, z1);

        $d13 = $d11 * $d12;

        d22 = d22 + $d13;

        i5 = i5 + 1;

        goto label7;

     label8:
        $r5 = r0.<com.opengamma.analytics.financial.model.volatility.surface.MixedLogNormalVolatilitySurface$1: com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve val$disCurve>;

        $d4 = virtualinvoke $r5.<com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve: double getDiscountFactor(double)>(d20);

        $d5 = $d4 * d22;

        $d6 = $d5 * d1;

        $r6 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d6);

        return $r6;
    }

    public volatile java.lang.Object evaluate(java.lang.Object[])
    {
        com.opengamma.analytics.financial.model.volatility.surface.MixedLogNormalVolatilitySurface$1 r0;
        java.lang.Object[] r1;
        java.lang.Double[] $r2;
        java.lang.Double $r3;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.surface.MixedLogNormalVolatilitySurface$1;

        r1 := @parameter0: java.lang.Object[];

        $r2 = (java.lang.Double[]) r1;

        $r3 = virtualinvoke r0.<com.opengamma.analytics.financial.model.volatility.surface.MixedLogNormalVolatilitySurface$1: java.lang.Double evaluate(java.lang.Double[])>($r2);

        return $r3;
    }
}
