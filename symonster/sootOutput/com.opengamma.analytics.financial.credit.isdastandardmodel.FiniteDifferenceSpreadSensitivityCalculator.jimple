public class com.opengamma.analytics.financial.credit.isdastandardmodel.FiniteDifferenceSpreadSensitivityCalculator extends java.lang.Object
{
    private final com.opengamma.analytics.financial.credit.isdastandardmodel.MarketQuoteConverter _pufConverter;
    private final com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantCreditCurveBuilder _curveBuilder;
    private final com.opengamma.analytics.financial.credit.isdastandardmodel.AnalyticCDSPricer _pricer;

    public void <init>()
    {
        com.opengamma.analytics.financial.credit.isdastandardmodel.FiniteDifferenceSpreadSensitivityCalculator r0;
        com.opengamma.analytics.financial.credit.isdastandardmodel.MarketQuoteConverter $r1;
        com.opengamma.analytics.financial.credit.isdastandardmodel.FastCreditCurveBuilder $r2;
        com.opengamma.analytics.financial.credit.isdastandardmodel.AnalyticCDSPricer $r3;

        r0 := @this: com.opengamma.analytics.financial.credit.isdastandardmodel.FiniteDifferenceSpreadSensitivityCalculator;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new com.opengamma.analytics.financial.credit.isdastandardmodel.MarketQuoteConverter;

        specialinvoke $r1.<com.opengamma.analytics.financial.credit.isdastandardmodel.MarketQuoteConverter: void <init>()>();

        r0.<com.opengamma.analytics.financial.credit.isdastandardmodel.FiniteDifferenceSpreadSensitivityCalculator: com.opengamma.analytics.financial.credit.isdastandardmodel.MarketQuoteConverter _pufConverter> = $r1;

        $r2 = new com.opengamma.analytics.financial.credit.isdastandardmodel.FastCreditCurveBuilder;

        specialinvoke $r2.<com.opengamma.analytics.financial.credit.isdastandardmodel.FastCreditCurveBuilder: void <init>()>();

        r0.<com.opengamma.analytics.financial.credit.isdastandardmodel.FiniteDifferenceSpreadSensitivityCalculator: com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantCreditCurveBuilder _curveBuilder> = $r2;

        $r3 = new com.opengamma.analytics.financial.credit.isdastandardmodel.AnalyticCDSPricer;

        specialinvoke $r3.<com.opengamma.analytics.financial.credit.isdastandardmodel.AnalyticCDSPricer: void <init>()>();

        r0.<com.opengamma.analytics.financial.credit.isdastandardmodel.FiniteDifferenceSpreadSensitivityCalculator: com.opengamma.analytics.financial.credit.isdastandardmodel.AnalyticCDSPricer _pricer> = $r3;

        return;
    }

    public void <init>(com.opengamma.analytics.financial.credit.isdastandardmodel.AccrualOnDefaultFormulae)
    {
        com.opengamma.analytics.financial.credit.isdastandardmodel.FiniteDifferenceSpreadSensitivityCalculator r0;
        com.opengamma.analytics.financial.credit.isdastandardmodel.AccrualOnDefaultFormulae r1;
        com.opengamma.analytics.financial.credit.isdastandardmodel.MarketQuoteConverter $r2;
        com.opengamma.analytics.financial.credit.isdastandardmodel.FastCreditCurveBuilder $r3;
        com.opengamma.analytics.financial.credit.isdastandardmodel.AnalyticCDSPricer $r4;

        r0 := @this: com.opengamma.analytics.financial.credit.isdastandardmodel.FiniteDifferenceSpreadSensitivityCalculator;

        r1 := @parameter0: com.opengamma.analytics.financial.credit.isdastandardmodel.AccrualOnDefaultFormulae;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new com.opengamma.analytics.financial.credit.isdastandardmodel.MarketQuoteConverter;

        specialinvoke $r2.<com.opengamma.analytics.financial.credit.isdastandardmodel.MarketQuoteConverter: void <init>(com.opengamma.analytics.financial.credit.isdastandardmodel.AccrualOnDefaultFormulae)>(r1);

        r0.<com.opengamma.analytics.financial.credit.isdastandardmodel.FiniteDifferenceSpreadSensitivityCalculator: com.opengamma.analytics.financial.credit.isdastandardmodel.MarketQuoteConverter _pufConverter> = $r2;

        $r3 = new com.opengamma.analytics.financial.credit.isdastandardmodel.FastCreditCurveBuilder;

        specialinvoke $r3.<com.opengamma.analytics.financial.credit.isdastandardmodel.FastCreditCurveBuilder: void <init>(com.opengamma.analytics.financial.credit.isdastandardmodel.AccrualOnDefaultFormulae)>(r1);

        r0.<com.opengamma.analytics.financial.credit.isdastandardmodel.FiniteDifferenceSpreadSensitivityCalculator: com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantCreditCurveBuilder _curveBuilder> = $r3;

        $r4 = new com.opengamma.analytics.financial.credit.isdastandardmodel.AnalyticCDSPricer;

        specialinvoke $r4.<com.opengamma.analytics.financial.credit.isdastandardmodel.AnalyticCDSPricer: void <init>(com.opengamma.analytics.financial.credit.isdastandardmodel.AccrualOnDefaultFormulae)>(r1);

        r0.<com.opengamma.analytics.financial.credit.isdastandardmodel.FiniteDifferenceSpreadSensitivityCalculator: com.opengamma.analytics.financial.credit.isdastandardmodel.AnalyticCDSPricer _pricer> = $r4;

        return;
    }

    public double parallelCS01(com.opengamma.analytics.financial.credit.isdastandardmodel.CDSAnalytic, com.opengamma.analytics.financial.credit.isdastandardmodel.CDSQuoteConvention, com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantYieldCurve, double)
    {
        com.opengamma.analytics.financial.credit.isdastandardmodel.FiniteDifferenceSpreadSensitivityCalculator r0;
        com.opengamma.analytics.financial.credit.isdastandardmodel.CDSAnalytic r1;
        com.opengamma.analytics.financial.credit.isdastandardmodel.CDSQuoteConvention r2;
        com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantYieldCurve r3;
        double d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9;
        boolean $z0, $z1, $z2;
        java.lang.IllegalArgumentException $r4;
        java.lang.StringBuilder $r5, $r6, $r8;
        java.lang.Class $r7;
        java.lang.String $r9;
        com.opengamma.analytics.financial.credit.isdastandardmodel.CDSAnalytic[] $r10, $r13;
        double[] $r11, $r14;
        com.opengamma.analytics.financial.model.BumpType $r12, $r15;
        com.opengamma.analytics.financial.credit.isdastandardmodel.QuotedSpread r16;
        com.opengamma.analytics.financial.credit.isdastandardmodel.PointsUpFront r17;

        r0 := @this: com.opengamma.analytics.financial.credit.isdastandardmodel.FiniteDifferenceSpreadSensitivityCalculator;

        r1 := @parameter0: com.opengamma.analytics.financial.credit.isdastandardmodel.CDSAnalytic;

        r2 := @parameter1: com.opengamma.analytics.financial.credit.isdastandardmodel.CDSQuoteConvention;

        r3 := @parameter2: com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantYieldCurve;

        d0 := @parameter3: double;

        $z0 = r2 instanceof com.opengamma.analytics.financial.credit.isdastandardmodel.QuotedSpread;

        if $z0 == 0 goto label1;

        r16 = (com.opengamma.analytics.financial.credit.isdastandardmodel.QuotedSpread) r2;

        $d7 = virtualinvoke r16.<com.opengamma.analytics.financial.credit.isdastandardmodel.QuotedSpread: double getCoupon()>();

        $r13 = newarray (com.opengamma.analytics.financial.credit.isdastandardmodel.CDSAnalytic)[1];

        $r13[0] = r1;

        $r14 = newarray (double)[1];

        $d8 = virtualinvoke r16.<com.opengamma.analytics.financial.credit.isdastandardmodel.QuotedSpread: double getQuotedSpread()>();

        $r14[0] = $d8;

        $r15 = <com.opengamma.analytics.financial.model.BumpType: com.opengamma.analytics.financial.model.BumpType ADDITIVE>;

        $d9 = virtualinvoke r0.<com.opengamma.analytics.financial.credit.isdastandardmodel.FiniteDifferenceSpreadSensitivityCalculator: double parallelCS01FromParSpreads(com.opengamma.analytics.financial.credit.isdastandardmodel.CDSAnalytic,double,com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantYieldCurve,com.opengamma.analytics.financial.credit.isdastandardmodel.CDSAnalytic[],double[],double,com.opengamma.analytics.financial.model.BumpType)>(r1, $d7, r3, $r13, $r14, d0, $r15);

        return $d9;

     label1:
        $z1 = r2 instanceof com.opengamma.analytics.financial.credit.isdastandardmodel.PointsUpFront;

        if $z1 == 0 goto label2;

        r17 = (com.opengamma.analytics.financial.credit.isdastandardmodel.PointsUpFront) r2;

        $d4 = virtualinvoke r17.<com.opengamma.analytics.financial.credit.isdastandardmodel.PointsUpFront: double getCoupon()>();

        $d5 = virtualinvoke r17.<com.opengamma.analytics.financial.credit.isdastandardmodel.PointsUpFront: double getPointsUpFront()>();

        $d6 = virtualinvoke r0.<com.opengamma.analytics.financial.credit.isdastandardmodel.FiniteDifferenceSpreadSensitivityCalculator: double parallelCS01FromPUF(com.opengamma.analytics.financial.credit.isdastandardmodel.CDSAnalytic,double,com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantYieldCurve,double,double)>(r1, $d4, r3, $d5, d0);

        return $d6;

     label2:
        $z2 = r2 instanceof com.opengamma.analytics.financial.credit.isdastandardmodel.ParSpread;

        if $z2 == 0 goto label3;

        $d1 = interfaceinvoke r2.<com.opengamma.analytics.financial.credit.isdastandardmodel.CDSQuoteConvention: double getCoupon()>();

        $r10 = newarray (com.opengamma.analytics.financial.credit.isdastandardmodel.CDSAnalytic)[1];

        $r10[0] = r1;

        $r11 = newarray (double)[1];

        $d2 = interfaceinvoke r2.<com.opengamma.analytics.financial.credit.isdastandardmodel.CDSQuoteConvention: double getCoupon()>();

        $r11[0] = $d2;

        $r12 = <com.opengamma.analytics.financial.model.BumpType: com.opengamma.analytics.financial.model.BumpType ADDITIVE>;

        $d3 = virtualinvoke r0.<com.opengamma.analytics.financial.credit.isdastandardmodel.FiniteDifferenceSpreadSensitivityCalculator: double parallelCS01FromParSpreads(com.opengamma.analytics.financial.credit.isdastandardmodel.CDSAnalytic,double,com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantYieldCurve,com.opengamma.analytics.financial.credit.isdastandardmodel.CDSAnalytic[],double[],double,com.opengamma.analytics.financial.model.BumpType)>(r1, $d1, r3, $r10, $r11, d0, $r12);

        return $d3;

     label3:
        $r4 = new java.lang.IllegalArgumentException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("unknow type ");

        $r7 = virtualinvoke r2.<java.lang.Object: java.lang.Class getClass()>();

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r9);

        throw $r4;
    }

    public double parallelCS01FromPUF(com.opengamma.analytics.financial.credit.isdastandardmodel.CDSAnalytic, double, com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantYieldCurve, double, double)
    {
        com.opengamma.analytics.financial.credit.isdastandardmodel.FiniteDifferenceSpreadSensitivityCalculator r0;
        com.opengamma.analytics.financial.credit.isdastandardmodel.CDSAnalytic r1;
        double d0, d1, d2, d3, d4, $d5, $d6, $d7;
        com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantYieldCurve r2;
        com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantCreditCurve r3;
        com.opengamma.analytics.financial.credit.isdastandardmodel.MarketQuoteConverter $r4;
        com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantCreditCurveBuilder $r5;
        com.opengamma.analytics.financial.credit.isdastandardmodel.AnalyticCDSPricer $r6;

        r0 := @this: com.opengamma.analytics.financial.credit.isdastandardmodel.FiniteDifferenceSpreadSensitivityCalculator;

        r1 := @parameter0: com.opengamma.analytics.financial.credit.isdastandardmodel.CDSAnalytic;

        d0 := @parameter1: double;

        r2 := @parameter2: com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantYieldCurve;

        d1 := @parameter3: double;

        d2 := @parameter4: double;

        $r4 = r0.<com.opengamma.analytics.financial.credit.isdastandardmodel.FiniteDifferenceSpreadSensitivityCalculator: com.opengamma.analytics.financial.credit.isdastandardmodel.MarketQuoteConverter _pufConverter>;

        $d5 = virtualinvoke $r4.<com.opengamma.analytics.financial.credit.isdastandardmodel.MarketQuoteConverter: double pufToQuotedSpread(com.opengamma.analytics.financial.credit.isdastandardmodel.CDSAnalytic,double,com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantYieldCurve,double)>(r1, d0, r2, d1);

        d3 = $d5 + d2;

        $r5 = r0.<com.opengamma.analytics.financial.credit.isdastandardmodel.FiniteDifferenceSpreadSensitivityCalculator: com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantCreditCurveBuilder _curveBuilder>;

        r3 = virtualinvoke $r5.<com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantCreditCurveBuilder: com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantCreditCurve calibrateCreditCurve(com.opengamma.analytics.financial.credit.isdastandardmodel.CDSAnalytic,double,com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantYieldCurve)>(r1, d3, r2);

        $r6 = r0.<com.opengamma.analytics.financial.credit.isdastandardmodel.FiniteDifferenceSpreadSensitivityCalculator: com.opengamma.analytics.financial.credit.isdastandardmodel.AnalyticCDSPricer _pricer>;

        d4 = virtualinvoke $r6.<com.opengamma.analytics.financial.credit.isdastandardmodel.AnalyticCDSPricer: double pv(com.opengamma.analytics.financial.credit.isdastandardmodel.CDSAnalytic,com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantYieldCurve,com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantCreditCurve,double)>(r1, r2, r3, d0);

        $d6 = d4 - d1;

        $d7 = $d6 / d2;

        return $d7;
    }

    public double parallelCS01FromSpread(com.opengamma.analytics.financial.credit.isdastandardmodel.CDSAnalytic, double, com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantYieldCurve, double, double, com.opengamma.analytics.financial.model.BumpType)
    {
        com.opengamma.analytics.financial.credit.isdastandardmodel.FiniteDifferenceSpreadSensitivityCalculator r0;
        com.opengamma.analytics.financial.credit.isdastandardmodel.CDSAnalytic r1;
        double d0, d1, d2, $d3;
        com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantYieldCurve r2;
        com.opengamma.analytics.financial.model.BumpType r3;
        com.opengamma.analytics.financial.credit.isdastandardmodel.CDSAnalytic[] $r4;
        double[] $r5;

        r0 := @this: com.opengamma.analytics.financial.credit.isdastandardmodel.FiniteDifferenceSpreadSensitivityCalculator;

        r1 := @parameter0: com.opengamma.analytics.financial.credit.isdastandardmodel.CDSAnalytic;

        d0 := @parameter1: double;

        r2 := @parameter2: com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantYieldCurve;

        d1 := @parameter3: double;

        d2 := @parameter4: double;

        r3 := @parameter5: com.opengamma.analytics.financial.model.BumpType;

        $r4 = newarray (com.opengamma.analytics.financial.credit.isdastandardmodel.CDSAnalytic)[1];

        $r4[0] = r1;

        $r5 = newarray (double)[1];

        $r5[0] = d1;

        $d3 = virtualinvoke r0.<com.opengamma.analytics.financial.credit.isdastandardmodel.FiniteDifferenceSpreadSensitivityCalculator: double parallelCS01FromParSpreads(com.opengamma.analytics.financial.credit.isdastandardmodel.CDSAnalytic,double,com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantYieldCurve,com.opengamma.analytics.financial.credit.isdastandardmodel.CDSAnalytic[],double[],double,com.opengamma.analytics.financial.model.BumpType)>(r1, d0, r2, $r4, $r5, d2, r3);

        return $d3;
    }

    public double parallelCS01FromQuotedSpread(com.opengamma.analytics.financial.credit.isdastandardmodel.CDSAnalytic, double, com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantYieldCurve, com.opengamma.analytics.financial.credit.isdastandardmodel.CDSAnalytic, double, double, com.opengamma.analytics.financial.model.BumpType)
    {
        com.opengamma.analytics.financial.credit.isdastandardmodel.FiniteDifferenceSpreadSensitivityCalculator r0;
        com.opengamma.analytics.financial.credit.isdastandardmodel.CDSAnalytic r1, r3;
        double d0, d1, d2, $d3, $d4;
        com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantYieldCurve r2;
        com.opengamma.analytics.financial.model.BumpType r4;
        byte $b0;
        com.opengamma.analytics.financial.credit.isdastandardmodel.CDSAnalytic[] $r9;
        double[] $r10;
        boolean $z0;

        r0 := @this: com.opengamma.analytics.financial.credit.isdastandardmodel.FiniteDifferenceSpreadSensitivityCalculator;

        r1 := @parameter0: com.opengamma.analytics.financial.credit.isdastandardmodel.CDSAnalytic;

        d0 := @parameter1: double;

        r2 := @parameter2: com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantYieldCurve;

        r3 := @parameter3: com.opengamma.analytics.financial.credit.isdastandardmodel.CDSAnalytic;

        d1 := @parameter4: double;

        d2 := @parameter5: double;

        r4 := @parameter6: com.opengamma.analytics.financial.model.BumpType;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "cds");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r3, "referanceCDS");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, "yieldCurve");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r4, "bumpType");

        $d3 = staticinvoke <java.lang.Math: double abs(double)>(d2);

        $b0 = $d3 cmpl 1.0E-10;

        if $b0 <= 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z0, "bump amount too small");

        $r9 = newarray (com.opengamma.analytics.financial.credit.isdastandardmodel.CDSAnalytic)[1];

        $r9[0] = r3;

        $r10 = newarray (double)[1];

        $r10[0] = d1;

        $d4 = virtualinvoke r0.<com.opengamma.analytics.financial.credit.isdastandardmodel.FiniteDifferenceSpreadSensitivityCalculator: double parallelCS01FromParSpreads(com.opengamma.analytics.financial.credit.isdastandardmodel.CDSAnalytic,double,com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantYieldCurve,com.opengamma.analytics.financial.credit.isdastandardmodel.CDSAnalytic[],double[],double,com.opengamma.analytics.financial.model.BumpType)>(r1, d0, r2, $r9, $r10, d2, r4);

        return $d4;
    }

    public double parallelCS01FromPillarQuotes(com.opengamma.analytics.financial.credit.isdastandardmodel.CDSAnalytic, double, com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantYieldCurve, com.opengamma.analytics.financial.credit.isdastandardmodel.CDSAnalytic[], com.opengamma.analytics.financial.credit.isdastandardmodel.CDSQuoteConvention[], double)
    {
        com.opengamma.analytics.financial.credit.isdastandardmodel.FiniteDifferenceSpreadSensitivityCalculator r0;
        com.opengamma.analytics.financial.credit.isdastandardmodel.CDSAnalytic r1;
        double d0, d1, d2, d3, $d4, $d5, $d6;
        com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantYieldCurve r2;
        com.opengamma.analytics.financial.credit.isdastandardmodel.CDSAnalytic[] r3;
        com.opengamma.analytics.financial.credit.isdastandardmodel.CDSQuoteConvention[] r4, r6;
        int i0, $i2;
        com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantCreditCurve r5, r7;
        byte $b1;
        com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantCreditCurveBuilder $r12, $r14;
        com.opengamma.analytics.financial.credit.isdastandardmodel.AnalyticCDSPricer $r13, $r15;
        boolean $z0, $z1;

        r0 := @this: com.opengamma.analytics.financial.credit.isdastandardmodel.FiniteDifferenceSpreadSensitivityCalculator;

        r1 := @parameter0: com.opengamma.analytics.financial.credit.isdastandardmodel.CDSAnalytic;

        d0 := @parameter1: double;

        r2 := @parameter2: com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantYieldCurve;

        r3 := @parameter3: com.opengamma.analytics.financial.credit.isdastandardmodel.CDSAnalytic[];

        r4 := @parameter4: com.opengamma.analytics.financial.credit.isdastandardmodel.CDSQuoteConvention[];

        d1 := @parameter5: double;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "cds");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object[] noNulls(java.lang.Object[],java.lang.String)>(r3, "curvePoints");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, "yieldCurve");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object[] noNulls(java.lang.Object[],java.lang.String)>(r4, "quotes");

        $d4 = staticinvoke <java.lang.Math: double abs(double)>(d1);

        $b1 = $d4 cmpl 1.0E-10;

        if $b1 <= 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z0, "bump amount too small");

        i0 = lengthof r3;

        $i2 = lengthof r4;

        if i0 != $i2 goto label3;

        $z1 = 1;

        goto label4;

     label3:
        $z1 = 0;

     label4:
        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z1, "speads length does not match curvePoints");

        $r12 = r0.<com.opengamma.analytics.financial.credit.isdastandardmodel.FiniteDifferenceSpreadSensitivityCalculator: com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantCreditCurveBuilder _curveBuilder>;

        r5 = virtualinvoke $r12.<com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantCreditCurveBuilder: com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantCreditCurve calibrateCreditCurve(com.opengamma.analytics.financial.credit.isdastandardmodel.CDSAnalytic[],com.opengamma.analytics.financial.credit.isdastandardmodel.CDSQuoteConvention[],com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantYieldCurve)>(r3, r4, r2);

        $r13 = r0.<com.opengamma.analytics.financial.credit.isdastandardmodel.FiniteDifferenceSpreadSensitivityCalculator: com.opengamma.analytics.financial.credit.isdastandardmodel.AnalyticCDSPricer _pricer>;

        d2 = virtualinvoke $r13.<com.opengamma.analytics.financial.credit.isdastandardmodel.AnalyticCDSPricer: double pv(com.opengamma.analytics.financial.credit.isdastandardmodel.CDSAnalytic,com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantYieldCurve,com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantCreditCurve,double)>(r1, r2, r5, d0);

        r6 = virtualinvoke r0.<com.opengamma.analytics.financial.credit.isdastandardmodel.FiniteDifferenceSpreadSensitivityCalculator: com.opengamma.analytics.financial.credit.isdastandardmodel.CDSQuoteConvention[] bumpQuotes(com.opengamma.analytics.financial.credit.isdastandardmodel.CDSAnalytic[],com.opengamma.analytics.financial.credit.isdastandardmodel.CDSQuoteConvention[],com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantYieldCurve,double)>(r3, r4, r2, d1);

        $r14 = r0.<com.opengamma.analytics.financial.credit.isdastandardmodel.FiniteDifferenceSpreadSensitivityCalculator: com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantCreditCurveBuilder _curveBuilder>;

        r7 = virtualinvoke $r14.<com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantCreditCurveBuilder: com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantCreditCurve calibrateCreditCurve(com.opengamma.analytics.financial.credit.isdastandardmodel.CDSAnalytic[],com.opengamma.analytics.financial.credit.isdastandardmodel.CDSQuoteConvention[],com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantYieldCurve)>(r3, r6, r2);

        $r15 = r0.<com.opengamma.analytics.financial.credit.isdastandardmodel.FiniteDifferenceSpreadSensitivityCalculator: com.opengamma.analytics.financial.credit.isdastandardmodel.AnalyticCDSPricer _pricer>;

        d3 = virtualinvoke $r15.<com.opengamma.analytics.financial.credit.isdastandardmodel.AnalyticCDSPricer: double pv(com.opengamma.analytics.financial.credit.isdastandardmodel.CDSAnalytic,com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantYieldCurve,com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantCreditCurve,double)>(r1, r2, r7, d0);

        $d5 = d3 - d2;

        $d6 = $d5 / d1;

        return $d6;
    }

    public double parallelCS01FromParSpreads(com.opengamma.analytics.financial.credit.isdastandardmodel.CDSAnalytic, double, com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantYieldCurve, com.opengamma.analytics.financial.credit.isdastandardmodel.CDSAnalytic[], double[], double, com.opengamma.analytics.financial.model.BumpType)
    {
        com.opengamma.analytics.financial.credit.isdastandardmodel.FiniteDifferenceSpreadSensitivityCalculator r0;
        com.opengamma.analytics.financial.credit.isdastandardmodel.CDSAnalytic r1;
        double d0, d1, d2, $d3, $d4;
        com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantYieldCurve r2;
        com.opengamma.analytics.financial.credit.isdastandardmodel.CDSAnalytic[] r3;
        double[] r4, r6;
        com.opengamma.analytics.financial.model.BumpType r5;
        int i0, $i2;
        byte $b1;
        com.opengamma.analytics.financial.credit.isdastandardmodel.PriceType $r12;
        boolean $z0, $z1;

        r0 := @this: com.opengamma.analytics.financial.credit.isdastandardmodel.FiniteDifferenceSpreadSensitivityCalculator;

        r1 := @parameter0: com.opengamma.analytics.financial.credit.isdastandardmodel.CDSAnalytic;

        d0 := @parameter1: double;

        r2 := @parameter2: com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantYieldCurve;

        r3 := @parameter3: com.opengamma.analytics.financial.credit.isdastandardmodel.CDSAnalytic[];

        r4 := @parameter4: double[];

        d1 := @parameter5: double;

        r5 := @parameter6: com.opengamma.analytics.financial.model.BumpType;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "cds");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object[] noNulls(java.lang.Object[],java.lang.String)>(r3, "curvePoints");

        staticinvoke <com.opengamma.util.ArgumentChecker: double[] notEmpty(double[],java.lang.String)>(r4, "spreads");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, "yieldCurve");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r5, "bumpType");

        $d3 = staticinvoke <java.lang.Math: double abs(double)>(d1);

        $b1 = $d3 cmpl 1.0E-10;

        if $b1 <= 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z0, "bump amount too small");

        i0 = lengthof r3;

        $i2 = lengthof r4;

        if i0 != $i2 goto label3;

        $z1 = 1;

        goto label4;

     label3:
        $z1 = 0;

     label4:
        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z1, "speads length does not match curvePoints");

        r6 = specialinvoke r0.<com.opengamma.analytics.financial.credit.isdastandardmodel.FiniteDifferenceSpreadSensitivityCalculator: double[] makeBumpedSpreads(double[],double,com.opengamma.analytics.financial.model.BumpType)>(r4, d1, r5);

        $r12 = <com.opengamma.analytics.financial.credit.isdastandardmodel.PriceType: com.opengamma.analytics.financial.credit.isdastandardmodel.PriceType DIRTY>;

        d2 = specialinvoke r0.<com.opengamma.analytics.financial.credit.isdastandardmodel.FiniteDifferenceSpreadSensitivityCalculator: double fdCreditDV01(com.opengamma.analytics.financial.credit.isdastandardmodel.CDSAnalytic,double,com.opengamma.analytics.financial.credit.isdastandardmodel.CDSAnalytic[],double[],double[],com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantYieldCurve,com.opengamma.analytics.financial.credit.isdastandardmodel.PriceType)>(r1, d0, r3, r6, r4, r2, $r12);

        $d4 = d2 / d1;

        return $d4;
    }

    public double parallelCS01FromCreditCurve(com.opengamma.analytics.financial.credit.isdastandardmodel.CDSAnalytic, double, com.opengamma.analytics.financial.credit.isdastandardmodel.CDSAnalytic[], com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantYieldCurve, com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantCreditCurve, double)
    {
        com.opengamma.analytics.financial.credit.isdastandardmodel.FiniteDifferenceSpreadSensitivityCalculator r0;
        com.opengamma.analytics.financial.credit.isdastandardmodel.CDSAnalytic r1, $r18, $r20;
        double d0, d1, d2, d3, d4, $d5, $d6, $d7, $d8, $d9, $d10;
        com.opengamma.analytics.financial.credit.isdastandardmodel.CDSAnalytic[] r2;
        com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantYieldCurve r3;
        com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantCreditCurve r4, r8, r21;
        int i0, $i2, i4;
        double[] r5, r6, r7;
        byte $b1, $b3;
        com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantCreditCurveBuilder $r13, $r16;
        com.opengamma.analytics.financial.credit.isdastandardmodel.AnalyticCDSPricer $r14, $r17, $r19;
        com.opengamma.analytics.financial.model.BumpType $r15;
        boolean $z0, $z1;

        r0 := @this: com.opengamma.analytics.financial.credit.isdastandardmodel.FiniteDifferenceSpreadSensitivityCalculator;

        r1 := @parameter0: com.opengamma.analytics.financial.credit.isdastandardmodel.CDSAnalytic;

        d0 := @parameter1: double;

        r2 := @parameter2: com.opengamma.analytics.financial.credit.isdastandardmodel.CDSAnalytic[];

        r3 := @parameter3: com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantYieldCurve;

        r4 := @parameter4: com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantCreditCurve;

        d1 := @parameter5: double;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "cds");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object[] noNulls(java.lang.Object[],java.lang.String)>(r2, "pillarCDSs");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r4, "creditCurve");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r3, "yieldCurve");

        $d5 = staticinvoke <java.lang.Math: double abs(double)>(d1);

        $b1 = $d5 cmpl 1.0E-10;

        if $b1 <= 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z0, "bump amount too small");

        i0 = lengthof r2;

        r5 = newarray (double)[i0];

        r6 = newarray (double)[i0];

        i4 = 0;

     label3:
        if i4 >= i0 goto label7;

        $r19 = r0.<com.opengamma.analytics.financial.credit.isdastandardmodel.FiniteDifferenceSpreadSensitivityCalculator: com.opengamma.analytics.financial.credit.isdastandardmodel.AnalyticCDSPricer _pricer>;

        $r18 = r2[i4];

        $d7 = virtualinvoke $r19.<com.opengamma.analytics.financial.credit.isdastandardmodel.AnalyticCDSPricer: double parSpread(com.opengamma.analytics.financial.credit.isdastandardmodel.CDSAnalytic,com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantYieldCurve,com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantCreditCurve)>($r18, r3, r4);

        r5[i4] = $d7;

        $r20 = r2[i4];

        $d8 = virtualinvoke $r20.<com.opengamma.analytics.financial.credit.isdastandardmodel.CDSAnalytic: double getProtectionEnd()>();

        r6[i4] = $d8;

        if i4 <= 0 goto label6;

        $d10 = r6[i4];

        $i2 = i4 - 1;

        $d9 = r6[$i2];

        $b3 = $d10 cmpl $d9;

        if $b3 <= 0 goto label4;

        $z1 = 1;

        goto label5;

     label4:
        $z1 = 0;

     label5:
        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z1, "pillars must be assending");

     label6:
        i4 = i4 + 1;

        goto label3;

     label7:
        $r13 = r0.<com.opengamma.analytics.financial.credit.isdastandardmodel.FiniteDifferenceSpreadSensitivityCalculator: com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantCreditCurveBuilder _curveBuilder>;

        r21 = virtualinvoke $r13.<com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantCreditCurveBuilder: com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantCreditCurve calibrateCreditCurve(com.opengamma.analytics.financial.credit.isdastandardmodel.CDSAnalytic[],double[],com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantYieldCurve)>(r2, r5, r3);

        $r14 = r0.<com.opengamma.analytics.financial.credit.isdastandardmodel.FiniteDifferenceSpreadSensitivityCalculator: com.opengamma.analytics.financial.credit.isdastandardmodel.AnalyticCDSPricer _pricer>;

        d2 = virtualinvoke $r14.<com.opengamma.analytics.financial.credit.isdastandardmodel.AnalyticCDSPricer: double pv(com.opengamma.analytics.financial.credit.isdastandardmodel.CDSAnalytic,com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantYieldCurve,com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantCreditCurve,double)>(r1, r3, r21, d0);

        $r15 = <com.opengamma.analytics.financial.model.BumpType: com.opengamma.analytics.financial.model.BumpType ADDITIVE>;

        r7 = specialinvoke r0.<com.opengamma.analytics.financial.credit.isdastandardmodel.FiniteDifferenceSpreadSensitivityCalculator: double[] makeBumpedSpreads(double[],double,com.opengamma.analytics.financial.model.BumpType)>(r5, d1, $r15);

        $r16 = r0.<com.opengamma.analytics.financial.credit.isdastandardmodel.FiniteDifferenceSpreadSensitivityCalculator: com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantCreditCurveBuilder _curveBuilder>;

        r8 = virtualinvoke $r16.<com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantCreditCurveBuilder: com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantCreditCurve calibrateCreditCurve(com.opengamma.analytics.financial.credit.isdastandardmodel.CDSAnalytic[],double[],com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantYieldCurve)>(r2, r7, r3);

        $r17 = r0.<com.opengamma.analytics.financial.credit.isdastandardmodel.FiniteDifferenceSpreadSensitivityCalculator: com.opengamma.analytics.financial.credit.isdastandardmodel.AnalyticCDSPricer _pricer>;

        d3 = virtualinvoke $r17.<com.opengamma.analytics.financial.credit.isdastandardmodel.AnalyticCDSPricer: double pv(com.opengamma.analytics.financial.credit.isdastandardmodel.CDSAnalytic,com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantYieldCurve,com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantCreditCurve,double)>(r1, r3, r8, d0);

        $d6 = d3 - d2;

        d4 = $d6 / d1;

        return d4;
    }

    public double[] bucketedCS01FromPillarQuotes(com.opengamma.analytics.financial.credit.isdastandardmodel.CDSAnalytic, double, com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantYieldCurve, com.opengamma.analytics.financial.credit.isdastandardmodel.CDSAnalytic[], com.opengamma.analytics.financial.credit.isdastandardmodel.CDSQuoteConvention[], double)
    {
        com.opengamma.analytics.financial.credit.isdastandardmodel.FiniteDifferenceSpreadSensitivityCalculator r0;
        com.opengamma.analytics.financial.credit.isdastandardmodel.CDSAnalytic r1;
        double d0, d1, d2, d3, $d4, $d5, $d6;
        com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantYieldCurve r2;
        com.opengamma.analytics.financial.credit.isdastandardmodel.CDSAnalytic[] r3;
        com.opengamma.analytics.financial.credit.isdastandardmodel.CDSQuoteConvention[] r4, r7;
        int i0, $i2, i3;
        com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantCreditCurve r5, r8;
        double[] r6;
        byte $b1;
        com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantCreditCurveBuilder $r13, $r15;
        com.opengamma.analytics.financial.credit.isdastandardmodel.AnalyticCDSPricer $r14, $r16;
        boolean $z0, $z1;

        r0 := @this: com.opengamma.analytics.financial.credit.isdastandardmodel.FiniteDifferenceSpreadSensitivityCalculator;

        r1 := @parameter0: com.opengamma.analytics.financial.credit.isdastandardmodel.CDSAnalytic;

        d0 := @parameter1: double;

        r2 := @parameter2: com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantYieldCurve;

        r3 := @parameter3: com.opengamma.analytics.financial.credit.isdastandardmodel.CDSAnalytic[];

        r4 := @parameter4: com.opengamma.analytics.financial.credit.isdastandardmodel.CDSQuoteConvention[];

        d1 := @parameter5: double;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "cds");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object[] noNulls(java.lang.Object[],java.lang.String)>(r3, "curvePoints");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object[] noNulls(java.lang.Object[],java.lang.String)>(r4, "quotes");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, "yieldCurve");

        $d4 = staticinvoke <java.lang.Math: double abs(double)>(d1);

        $b1 = $d4 cmpl 1.0E-10;

        if $b1 <= 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z0, "bump amount too small");

        i0 = lengthof r3;

        $i2 = lengthof r4;

        if i0 != $i2 goto label3;

        $z1 = 1;

        goto label4;

     label3:
        $z1 = 0;

     label4:
        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z1, "speads length does not match curvePoints");

        $r13 = r0.<com.opengamma.analytics.financial.credit.isdastandardmodel.FiniteDifferenceSpreadSensitivityCalculator: com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantCreditCurveBuilder _curveBuilder>;

        r5 = virtualinvoke $r13.<com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantCreditCurveBuilder: com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantCreditCurve calibrateCreditCurve(com.opengamma.analytics.financial.credit.isdastandardmodel.CDSAnalytic[],com.opengamma.analytics.financial.credit.isdastandardmodel.CDSQuoteConvention[],com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantYieldCurve)>(r3, r4, r2);

        $r14 = r0.<com.opengamma.analytics.financial.credit.isdastandardmodel.FiniteDifferenceSpreadSensitivityCalculator: com.opengamma.analytics.financial.credit.isdastandardmodel.AnalyticCDSPricer _pricer>;

        d2 = virtualinvoke $r14.<com.opengamma.analytics.financial.credit.isdastandardmodel.AnalyticCDSPricer: double pv(com.opengamma.analytics.financial.credit.isdastandardmodel.CDSAnalytic,com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantYieldCurve,com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantCreditCurve,double)>(r1, r2, r5, d0);

        r6 = newarray (double)[i0];

        i3 = 0;

     label5:
        if i3 >= i0 goto label6;

        r7 = specialinvoke r0.<com.opengamma.analytics.financial.credit.isdastandardmodel.FiniteDifferenceSpreadSensitivityCalculator: com.opengamma.analytics.financial.credit.isdastandardmodel.CDSQuoteConvention[] bumpQuoteAtIndex(com.opengamma.analytics.financial.credit.isdastandardmodel.CDSAnalytic[],com.opengamma.analytics.financial.credit.isdastandardmodel.CDSQuoteConvention[],com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantYieldCurve,double,int)>(r3, r4, r2, d1, i3);

        $r15 = r0.<com.opengamma.analytics.financial.credit.isdastandardmodel.FiniteDifferenceSpreadSensitivityCalculator: com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantCreditCurveBuilder _curveBuilder>;

        r8 = virtualinvoke $r15.<com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantCreditCurveBuilder: com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantCreditCurve calibrateCreditCurve(com.opengamma.analytics.financial.credit.isdastandardmodel.CDSAnalytic[],com.opengamma.analytics.financial.credit.isdastandardmodel.CDSQuoteConvention[],com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantYieldCurve)>(r3, r7, r2);

        $r16 = r0.<com.opengamma.analytics.financial.credit.isdastandardmodel.FiniteDifferenceSpreadSensitivityCalculator: com.opengamma.analytics.financial.credit.isdastandardmodel.AnalyticCDSPricer _pricer>;

        d3 = virtualinvoke $r16.<com.opengamma.analytics.financial.credit.isdastandardmodel.AnalyticCDSPricer: double pv(com.opengamma.analytics.financial.credit.isdastandardmodel.CDSAnalytic,com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantYieldCurve,com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantCreditCurve,double)>(r1, r2, r8, d0);

        $d5 = d3 - d2;

        $d6 = $d5 / d1;

        r6[i3] = $d6;

        i3 = i3 + 1;

        goto label5;

     label6:
        return r6;
    }

    public double[] bucketedCS01FromParSpreads(com.opengamma.analytics.financial.credit.isdastandardmodel.CDSAnalytic, double, com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantYieldCurve, com.opengamma.analytics.financial.credit.isdastandardmodel.CDSAnalytic[], double[], double, com.opengamma.analytics.financial.model.BumpType)
    {
        com.opengamma.analytics.financial.credit.isdastandardmodel.FiniteDifferenceSpreadSensitivityCalculator r0;
        com.opengamma.analytics.financial.credit.isdastandardmodel.CDSAnalytic r1;
        double d0, d1, d2, d3, $d4, $d5, $d6;
        com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantYieldCurve r2;
        com.opengamma.analytics.financial.credit.isdastandardmodel.CDSAnalytic[] r3;
        double[] r4, r8, r9;
        com.opengamma.analytics.financial.model.BumpType r5;
        int i0, $i2, i3;
        com.opengamma.analytics.financial.credit.isdastandardmodel.PriceType r6;
        com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantCreditCurve r7, r10;
        byte $b1;
        com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantCreditCurveBuilder $r16, $r18;
        com.opengamma.analytics.financial.credit.isdastandardmodel.AnalyticCDSPricer $r17, $r19;
        boolean $z0, $z1;

        r0 := @this: com.opengamma.analytics.financial.credit.isdastandardmodel.FiniteDifferenceSpreadSensitivityCalculator;

        r1 := @parameter0: com.opengamma.analytics.financial.credit.isdastandardmodel.CDSAnalytic;

        d0 := @parameter1: double;

        r2 := @parameter2: com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantYieldCurve;

        r3 := @parameter3: com.opengamma.analytics.financial.credit.isdastandardmodel.CDSAnalytic[];

        r4 := @parameter4: double[];

        d1 := @parameter5: double;

        r5 := @parameter6: com.opengamma.analytics.financial.model.BumpType;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "cds");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object[] noNulls(java.lang.Object[],java.lang.String)>(r3, "curvePoints");

        staticinvoke <com.opengamma.util.ArgumentChecker: double[] notEmpty(double[],java.lang.String)>(r4, "spreads");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, "yieldCurve");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r5, "bumpType");

        $d4 = staticinvoke <java.lang.Math: double abs(double)>(d1);

        $b1 = $d4 cmpl 1.0E-10;

        if $b1 <= 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z0, "bump amount too small");

        i0 = lengthof r3;

        $i2 = lengthof r4;

        if i0 != $i2 goto label3;

        $z1 = 1;

        goto label4;

     label3:
        $z1 = 0;

     label4:
        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z1, "speads length does not match curvePoints");

        r6 = <com.opengamma.analytics.financial.credit.isdastandardmodel.PriceType: com.opengamma.analytics.financial.credit.isdastandardmodel.PriceType DIRTY>;

        $r16 = r0.<com.opengamma.analytics.financial.credit.isdastandardmodel.FiniteDifferenceSpreadSensitivityCalculator: com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantCreditCurveBuilder _curveBuilder>;

        r7 = virtualinvoke $r16.<com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantCreditCurveBuilder: com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantCreditCurve calibrateCreditCurve(com.opengamma.analytics.financial.credit.isdastandardmodel.CDSAnalytic[],double[],com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantYieldCurve)>(r3, r4, r2);

        $r17 = r0.<com.opengamma.analytics.financial.credit.isdastandardmodel.FiniteDifferenceSpreadSensitivityCalculator: com.opengamma.analytics.financial.credit.isdastandardmodel.AnalyticCDSPricer _pricer>;

        d2 = virtualinvoke $r17.<com.opengamma.analytics.financial.credit.isdastandardmodel.AnalyticCDSPricer: double pv(com.opengamma.analytics.financial.credit.isdastandardmodel.CDSAnalytic,com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantYieldCurve,com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantCreditCurve,double,com.opengamma.analytics.financial.credit.isdastandardmodel.PriceType)>(r1, r2, r7, d0, r6);

        r8 = newarray (double)[i0];

        i3 = 0;

     label5:
        if i3 >= i0 goto label6;

        r9 = specialinvoke r0.<com.opengamma.analytics.financial.credit.isdastandardmodel.FiniteDifferenceSpreadSensitivityCalculator: double[] makeBumpedSpreads(double[],double,com.opengamma.analytics.financial.model.BumpType,int)>(r4, d1, r5, i3);

        $r18 = r0.<com.opengamma.analytics.financial.credit.isdastandardmodel.FiniteDifferenceSpreadSensitivityCalculator: com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantCreditCurveBuilder _curveBuilder>;

        r10 = virtualinvoke $r18.<com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantCreditCurveBuilder: com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantCreditCurve calibrateCreditCurve(com.opengamma.analytics.financial.credit.isdastandardmodel.CDSAnalytic[],double[],com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantYieldCurve)>(r3, r9, r2);

        $r19 = r0.<com.opengamma.analytics.financial.credit.isdastandardmodel.FiniteDifferenceSpreadSensitivityCalculator: com.opengamma.analytics.financial.credit.isdastandardmodel.AnalyticCDSPricer _pricer>;

        d3 = virtualinvoke $r19.<com.opengamma.analytics.financial.credit.isdastandardmodel.AnalyticCDSPricer: double pv(com.opengamma.analytics.financial.credit.isdastandardmodel.CDSAnalytic,com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantYieldCurve,com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantCreditCurve,double,com.opengamma.analytics.financial.credit.isdastandardmodel.PriceType)>(r1, r2, r10, d0, r6);

        $d5 = d3 - d2;

        $d6 = $d5 / d1;

        r8[i3] = $d6;

        i3 = i3 + 1;

        goto label5;

     label6:
        return r8;
    }

    public double[] bucketedCS01FromQuotedSpreads(com.opengamma.analytics.financial.credit.isdastandardmodel.CDSAnalytic, double, com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantYieldCurve, com.opengamma.analytics.financial.credit.isdastandardmodel.CDSAnalytic[], double[], double, com.opengamma.analytics.financial.model.BumpType)
    {
        com.opengamma.analytics.financial.credit.isdastandardmodel.FiniteDifferenceSpreadSensitivityCalculator r0;
        com.opengamma.analytics.financial.credit.isdastandardmodel.CDSAnalytic r1, $r21;
        double d0, d1, d2, d3, d4, $d5, $d6, $d7, $d8, $d9, $d10;
        com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantYieldCurve r2;
        com.opengamma.analytics.financial.credit.isdastandardmodel.CDSAnalytic[] r3;
        double[] r4, r7, r8, r10, r11;
        com.opengamma.analytics.financial.model.BumpType r5;
        int i0, $i2, i3;
        com.opengamma.analytics.financial.credit.isdastandardmodel.PriceType r6;
        com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantCreditCurve r9, r12;
        byte $b1;
        com.opengamma.analytics.financial.credit.isdastandardmodel.MarketQuoteConverter $r18, $r22;
        com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantCreditCurveBuilder $r19, $r23;
        com.opengamma.analytics.financial.credit.isdastandardmodel.AnalyticCDSPricer $r20, $r24;
        boolean $z0, $z1;

        r0 := @this: com.opengamma.analytics.financial.credit.isdastandardmodel.FiniteDifferenceSpreadSensitivityCalculator;

        r1 := @parameter0: com.opengamma.analytics.financial.credit.isdastandardmodel.CDSAnalytic;

        d0 := @parameter1: double;

        r2 := @parameter2: com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantYieldCurve;

        r3 := @parameter3: com.opengamma.analytics.financial.credit.isdastandardmodel.CDSAnalytic[];

        r4 := @parameter4: double[];

        d1 := @parameter5: double;

        r5 := @parameter6: com.opengamma.analytics.financial.model.BumpType;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "cds");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object[] noNulls(java.lang.Object[],java.lang.String)>(r3, "curvePoints");

        staticinvoke <com.opengamma.util.ArgumentChecker: double[] notEmpty(double[],java.lang.String)>(r4, "spreads");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, "yieldCurve");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r5, "bumpType");

        $d5 = staticinvoke <java.lang.Math: double abs(double)>(d1);

        $b1 = $d5 cmpl 1.0E-10;

        if $b1 <= 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z0, "bump amount too small");

        i0 = lengthof r3;

        $i2 = lengthof r4;

        if i0 != $i2 goto label3;

        $z1 = 1;

        goto label4;

     label3:
        $z1 = 0;

     label4:
        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z1, "speads length does not match curvePoints");

        r6 = <com.opengamma.analytics.financial.credit.isdastandardmodel.PriceType: com.opengamma.analytics.financial.credit.isdastandardmodel.PriceType DIRTY>;

        r7 = newarray (double)[i0];

        staticinvoke <java.util.Arrays: void fill(double[],double)>(r7, d0);

        $r18 = r0.<com.opengamma.analytics.financial.credit.isdastandardmodel.FiniteDifferenceSpreadSensitivityCalculator: com.opengamma.analytics.financial.credit.isdastandardmodel.MarketQuoteConverter _pufConverter>;

        r8 = virtualinvoke $r18.<com.opengamma.analytics.financial.credit.isdastandardmodel.MarketQuoteConverter: double[] quotedSpreadsToPUF(com.opengamma.analytics.financial.credit.isdastandardmodel.CDSAnalytic[],double[],com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantYieldCurve,double[])>(r3, r7, r2, r4);

        $r19 = r0.<com.opengamma.analytics.financial.credit.isdastandardmodel.FiniteDifferenceSpreadSensitivityCalculator: com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantCreditCurveBuilder _curveBuilder>;

        r9 = virtualinvoke $r19.<com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantCreditCurveBuilder: com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantCreditCurve calibrateCreditCurve(com.opengamma.analytics.financial.credit.isdastandardmodel.CDSAnalytic[],double[],com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantYieldCurve,double[])>(r3, r7, r2, r8);

        $r20 = r0.<com.opengamma.analytics.financial.credit.isdastandardmodel.FiniteDifferenceSpreadSensitivityCalculator: com.opengamma.analytics.financial.credit.isdastandardmodel.AnalyticCDSPricer _pricer>;

        d2 = virtualinvoke $r20.<com.opengamma.analytics.financial.credit.isdastandardmodel.AnalyticCDSPricer: double pv(com.opengamma.analytics.financial.credit.isdastandardmodel.CDSAnalytic,com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantYieldCurve,com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantCreditCurve,double,com.opengamma.analytics.financial.credit.isdastandardmodel.PriceType)>(r1, r2, r9, d0, r6);

        r10 = newarray (double)[i0];

        r11 = newarray (double)[i0];

        i3 = 0;

     label5:
        if i3 >= i0 goto label6;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r8, 0, r10, 0, i0);

        $d6 = r4[i3];

        d3 = specialinvoke r0.<com.opengamma.analytics.financial.credit.isdastandardmodel.FiniteDifferenceSpreadSensitivityCalculator: double bumpedSpread(double,double,com.opengamma.analytics.financial.model.BumpType)>($d6, d1, r5);

        $r22 = r0.<com.opengamma.analytics.financial.credit.isdastandardmodel.FiniteDifferenceSpreadSensitivityCalculator: com.opengamma.analytics.financial.credit.isdastandardmodel.MarketQuoteConverter _pufConverter>;

        $r21 = r3[i3];

        $d7 = r7[i3];

        $d8 = virtualinvoke $r22.<com.opengamma.analytics.financial.credit.isdastandardmodel.MarketQuoteConverter: double quotedSpreadToPUF(com.opengamma.analytics.financial.credit.isdastandardmodel.CDSAnalytic,double,com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantYieldCurve,double)>($r21, $d7, r2, d3);

        r10[i3] = $d8;

        $r23 = r0.<com.opengamma.analytics.financial.credit.isdastandardmodel.FiniteDifferenceSpreadSensitivityCalculator: com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantCreditCurveBuilder _curveBuilder>;

        r12 = virtualinvoke $r23.<com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantCreditCurveBuilder: com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantCreditCurve calibrateCreditCurve(com.opengamma.analytics.financial.credit.isdastandardmodel.CDSAnalytic[],double[],com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantYieldCurve,double[])>(r3, r7, r2, r10);

        $r24 = r0.<com.opengamma.analytics.financial.credit.isdastandardmodel.FiniteDifferenceSpreadSensitivityCalculator: com.opengamma.analytics.financial.credit.isdastandardmodel.AnalyticCDSPricer _pricer>;

        d4 = virtualinvoke $r24.<com.opengamma.analytics.financial.credit.isdastandardmodel.AnalyticCDSPricer: double pv(com.opengamma.analytics.financial.credit.isdastandardmodel.CDSAnalytic,com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantYieldCurve,com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantCreditCurve,double,com.opengamma.analytics.financial.credit.isdastandardmodel.PriceType)>(r1, r2, r12, d0, r6);

        $d9 = d4 - d2;

        $d10 = $d9 / d1;

        r11[i3] = $d10;

        i3 = i3 + 1;

        goto label5;

     label6:
        return r11;
    }

    public double[][] bucketedCS01FromQuotedSpreads(com.opengamma.analytics.financial.credit.isdastandardmodel.CDSAnalytic[], double, com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantYieldCurve, com.opengamma.analytics.financial.credit.isdastandardmodel.CDSAnalytic[], double[], double, com.opengamma.analytics.financial.model.BumpType)
    {
        com.opengamma.analytics.financial.credit.isdastandardmodel.FiniteDifferenceSpreadSensitivityCalculator r0;
        com.opengamma.analytics.financial.credit.isdastandardmodel.CDSAnalytic[] r1, r3;
        double d0, d1, d2, d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11;
        com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantYieldCurve r2;
        double[] r4, r7, r8, r10, $r25, r28;
        com.opengamma.analytics.financial.model.BumpType r5;
        int i0, i1, $i3, i4, i5, i6;
        com.opengamma.analytics.financial.credit.isdastandardmodel.PriceType r6;
        com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantCreditCurve r9, r12;
        double[][] r11;
        byte $b2;
        com.opengamma.analytics.financial.credit.isdastandardmodel.MarketQuoteConverter $r18, $r21;
        com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantCreditCurveBuilder $r19, $r22;
        com.opengamma.analytics.financial.credit.isdastandardmodel.CDSAnalytic $r20, $r23, $r26;
        com.opengamma.analytics.financial.credit.isdastandardmodel.AnalyticCDSPricer $r24, $r27;
        boolean $z0, $z1;

        r0 := @this: com.opengamma.analytics.financial.credit.isdastandardmodel.FiniteDifferenceSpreadSensitivityCalculator;

        r1 := @parameter0: com.opengamma.analytics.financial.credit.isdastandardmodel.CDSAnalytic[];

        d0 := @parameter1: double;

        r2 := @parameter2: com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantYieldCurve;

        r3 := @parameter3: com.opengamma.analytics.financial.credit.isdastandardmodel.CDSAnalytic[];

        r4 := @parameter4: double[];

        d1 := @parameter5: double;

        r5 := @parameter6: com.opengamma.analytics.financial.model.BumpType;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object[] noNulls(java.lang.Object[],java.lang.String)>(r1, "cds");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object[] noNulls(java.lang.Object[],java.lang.String)>(r3, "curvePoints");

        staticinvoke <com.opengamma.util.ArgumentChecker: double[] notEmpty(double[],java.lang.String)>(r4, "spreads");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, "yieldCurve");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r5, "bumpType");

        $d4 = staticinvoke <java.lang.Math: double abs(double)>(d1);

        $b2 = $d4 cmpl 1.0E-10;

        if $b2 <= 0 goto label01;

        $z0 = 1;

        goto label02;

     label01:
        $z0 = 0;

     label02:
        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z0, "bump amount too small");

        i0 = lengthof r3;

        $i3 = lengthof r4;

        if i0 != $i3 goto label03;

        $z1 = 1;

        goto label04;

     label03:
        $z1 = 0;

     label04:
        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z1, "speads length does not match curvePoints");

        r6 = <com.opengamma.analytics.financial.credit.isdastandardmodel.PriceType: com.opengamma.analytics.financial.credit.isdastandardmodel.PriceType DIRTY>;

        r7 = newarray (double)[i0];

        staticinvoke <java.util.Arrays: void fill(double[],double)>(r7, d0);

        i1 = lengthof r1;

        $r18 = r0.<com.opengamma.analytics.financial.credit.isdastandardmodel.FiniteDifferenceSpreadSensitivityCalculator: com.opengamma.analytics.financial.credit.isdastandardmodel.MarketQuoteConverter _pufConverter>;

        r8 = virtualinvoke $r18.<com.opengamma.analytics.financial.credit.isdastandardmodel.MarketQuoteConverter: double[] quotedSpreadsToPUF(com.opengamma.analytics.financial.credit.isdastandardmodel.CDSAnalytic[],double[],com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantYieldCurve,double[])>(r3, r7, r2, r4);

        $r19 = r0.<com.opengamma.analytics.financial.credit.isdastandardmodel.FiniteDifferenceSpreadSensitivityCalculator: com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantCreditCurveBuilder _curveBuilder>;

        r9 = virtualinvoke $r19.<com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantCreditCurveBuilder: com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantCreditCurve calibrateCreditCurve(com.opengamma.analytics.financial.credit.isdastandardmodel.CDSAnalytic[],double[],com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantYieldCurve,double[])>(r3, r7, r2, r8);

        r10 = newarray (double)[i1];

        i4 = 0;

     label05:
        if i4 >= i1 goto label06;

        $r27 = r0.<com.opengamma.analytics.financial.credit.isdastandardmodel.FiniteDifferenceSpreadSensitivityCalculator: com.opengamma.analytics.financial.credit.isdastandardmodel.AnalyticCDSPricer _pricer>;

        $r26 = r1[i4];

        $d11 = virtualinvoke $r27.<com.opengamma.analytics.financial.credit.isdastandardmodel.AnalyticCDSPricer: double pv(com.opengamma.analytics.financial.credit.isdastandardmodel.CDSAnalytic,com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantYieldCurve,com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantCreditCurve,double,com.opengamma.analytics.financial.credit.isdastandardmodel.PriceType)>($r26, r2, r9, d0, r6);

        r10[i4] = $d11;

        i4 = i4 + 1;

        goto label05;

     label06:
        r28 = newarray (double)[i0];

        r11 = newmultiarray (double)[i1][i0];

        i5 = 0;

     label07:
        if i5 >= i0 goto label10;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r8, 0, r28, 0, i0);

        $d5 = r4[i5];

        d2 = specialinvoke r0.<com.opengamma.analytics.financial.credit.isdastandardmodel.FiniteDifferenceSpreadSensitivityCalculator: double bumpedSpread(double,double,com.opengamma.analytics.financial.model.BumpType)>($d5, d1, r5);

        $r21 = r0.<com.opengamma.analytics.financial.credit.isdastandardmodel.FiniteDifferenceSpreadSensitivityCalculator: com.opengamma.analytics.financial.credit.isdastandardmodel.MarketQuoteConverter _pufConverter>;

        $r20 = r3[i5];

        $d6 = r7[i5];

        $d7 = virtualinvoke $r21.<com.opengamma.analytics.financial.credit.isdastandardmodel.MarketQuoteConverter: double quotedSpreadToPUF(com.opengamma.analytics.financial.credit.isdastandardmodel.CDSAnalytic,double,com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantYieldCurve,double)>($r20, $d6, r2, d2);

        r28[i5] = $d7;

        $r22 = r0.<com.opengamma.analytics.financial.credit.isdastandardmodel.FiniteDifferenceSpreadSensitivityCalculator: com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantCreditCurveBuilder _curveBuilder>;

        r12 = virtualinvoke $r22.<com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantCreditCurveBuilder: com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantCreditCurve calibrateCreditCurve(com.opengamma.analytics.financial.credit.isdastandardmodel.CDSAnalytic[],double[],com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantYieldCurve,double[])>(r3, r7, r2, r28);

        i6 = 0;

     label08:
        if i6 >= i1 goto label09;

        $r24 = r0.<com.opengamma.analytics.financial.credit.isdastandardmodel.FiniteDifferenceSpreadSensitivityCalculator: com.opengamma.analytics.financial.credit.isdastandardmodel.AnalyticCDSPricer _pricer>;

        $r23 = r1[i6];

        d3 = virtualinvoke $r24.<com.opengamma.analytics.financial.credit.isdastandardmodel.AnalyticCDSPricer: double pv(com.opengamma.analytics.financial.credit.isdastandardmodel.CDSAnalytic,com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantYieldCurve,com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantCreditCurve,double,com.opengamma.analytics.financial.credit.isdastandardmodel.PriceType)>($r23, r2, r12, d0, r6);

        $r25 = r11[i6];

        $d8 = r10[i6];

        $d9 = d3 - $d8;

        $d10 = $d9 / d1;

        $r25[i5] = $d10;

        i6 = i6 + 1;

        goto label08;

     label09:
        i5 = i5 + 1;

        goto label07;

     label10:
        return r11;
    }

    public double[] bucketedCS01FromParSpreads(com.opengamma.analytics.financial.credit.isdastandardmodel.CDSAnalytic, double, com.opengamma.analytics.financial.credit.isdastandardmodel.CDSAnalytic[], com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantYieldCurve, com.opengamma.analytics.financial.credit.isdastandardmodel.CDSAnalytic[], double[], double)
    {
        com.opengamma.analytics.financial.credit.isdastandardmodel.FiniteDifferenceSpreadSensitivityCalculator r0;
        com.opengamma.analytics.financial.credit.isdastandardmodel.CDSAnalytic r1;
        double d0, d1;
        com.opengamma.analytics.financial.credit.isdastandardmodel.CDSAnalytic[] r2, r4;
        com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantYieldCurve r3;
        double[] r5, $r10;
        com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantCreditCurve r6;
        com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantCreditCurveBuilder $r9;

        r0 := @this: com.opengamma.analytics.financial.credit.isdastandardmodel.FiniteDifferenceSpreadSensitivityCalculator;

        r1 := @parameter0: com.opengamma.analytics.financial.credit.isdastandardmodel.CDSAnalytic;

        d0 := @parameter1: double;

        r2 := @parameter2: com.opengamma.analytics.financial.credit.isdastandardmodel.CDSAnalytic[];

        r3 := @parameter3: com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantYieldCurve;

        r4 := @parameter4: com.opengamma.analytics.financial.credit.isdastandardmodel.CDSAnalytic[];

        r5 := @parameter5: double[];

        d1 := @parameter6: double;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object[] noNulls(java.lang.Object[],java.lang.String)>(r4, "pillarCDSs");

        staticinvoke <com.opengamma.util.ArgumentChecker: double[] notEmpty(double[],java.lang.String)>(r5, "pillarSpreads");

        $r9 = r0.<com.opengamma.analytics.financial.credit.isdastandardmodel.FiniteDifferenceSpreadSensitivityCalculator: com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantCreditCurveBuilder _curveBuilder>;

        r6 = virtualinvoke $r9.<com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantCreditCurveBuilder: com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantCreditCurve calibrateCreditCurve(com.opengamma.analytics.financial.credit.isdastandardmodel.CDSAnalytic[],double[],com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantYieldCurve)>(r4, r5, r3);

        $r10 = virtualinvoke r0.<com.opengamma.analytics.financial.credit.isdastandardmodel.FiniteDifferenceSpreadSensitivityCalculator: double[] bucketedCS01FromCreditCurve(com.opengamma.analytics.financial.credit.isdastandardmodel.CDSAnalytic,double,com.opengamma.analytics.financial.credit.isdastandardmodel.CDSAnalytic[],com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantYieldCurve,com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantCreditCurve,double)>(r1, d0, r2, r3, r6, d1);

        return $r10;
    }

    public double[] bucketedCS01FromPUF(com.opengamma.analytics.financial.credit.isdastandardmodel.CDSAnalytic, com.opengamma.analytics.financial.credit.isdastandardmodel.PointsUpFront, com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantYieldCurve, com.opengamma.analytics.financial.credit.isdastandardmodel.CDSAnalytic[], double)
    {
        com.opengamma.analytics.financial.credit.isdastandardmodel.FiniteDifferenceSpreadSensitivityCalculator r0;
        com.opengamma.analytics.financial.credit.isdastandardmodel.CDSAnalytic r1;
        com.opengamma.analytics.financial.credit.isdastandardmodel.PointsUpFront r2;
        com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantYieldCurve r3;
        com.opengamma.analytics.financial.credit.isdastandardmodel.CDSAnalytic[] r4;
        double d0, $d1;
        com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantCreditCurve r5;
        com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantCreditCurveBuilder $r6;
        double[] $r7;

        r0 := @this: com.opengamma.analytics.financial.credit.isdastandardmodel.FiniteDifferenceSpreadSensitivityCalculator;

        r1 := @parameter0: com.opengamma.analytics.financial.credit.isdastandardmodel.CDSAnalytic;

        r2 := @parameter1: com.opengamma.analytics.financial.credit.isdastandardmodel.PointsUpFront;

        r3 := @parameter2: com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantYieldCurve;

        r4 := @parameter3: com.opengamma.analytics.financial.credit.isdastandardmodel.CDSAnalytic[];

        d0 := @parameter4: double;

        $r6 = r0.<com.opengamma.analytics.financial.credit.isdastandardmodel.FiniteDifferenceSpreadSensitivityCalculator: com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantCreditCurveBuilder _curveBuilder>;

        r5 = virtualinvoke $r6.<com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantCreditCurveBuilder: com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantCreditCurve calibrateCreditCurve(com.opengamma.analytics.financial.credit.isdastandardmodel.CDSAnalytic,com.opengamma.analytics.financial.credit.isdastandardmodel.CDSQuoteConvention,com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantYieldCurve)>(r1, r2, r3);

        $d1 = virtualinvoke r2.<com.opengamma.analytics.financial.credit.isdastandardmodel.PointsUpFront: double getCoupon()>();

        $r7 = virtualinvoke r0.<com.opengamma.analytics.financial.credit.isdastandardmodel.FiniteDifferenceSpreadSensitivityCalculator: double[] bucketedCS01FromCreditCurve(com.opengamma.analytics.financial.credit.isdastandardmodel.CDSAnalytic,double,com.opengamma.analytics.financial.credit.isdastandardmodel.CDSAnalytic[],com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantYieldCurve,com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantCreditCurve,double)>(r1, $d1, r4, r3, r5, d0);

        return $r7;
    }

    public double[] bucketedCS01FromCreditCurve(com.opengamma.analytics.financial.credit.isdastandardmodel.CDSAnalytic, double, com.opengamma.analytics.financial.credit.isdastandardmodel.CDSAnalytic[], com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantYieldCurve, com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantCreditCurve, double)
    {
        com.opengamma.analytics.financial.credit.isdastandardmodel.FiniteDifferenceSpreadSensitivityCalculator r0;
        com.opengamma.analytics.financial.credit.isdastandardmodel.CDSAnalytic r1, $r20, $r22;
        double d0, d1, d2, d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11;
        com.opengamma.analytics.financial.credit.isdastandardmodel.CDSAnalytic[] r2;
        com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantYieldCurve r3;
        com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantCreditCurve r4, r7, r10;
        int i0, $i2, $i3, i5, i6, i7, i8;
        double[] r5, r6, r8, r9;
        byte $b1, $b4;
        com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantCreditCurveBuilder $r15, $r18;
        com.opengamma.analytics.financial.credit.isdastandardmodel.AnalyticCDSPricer $r16, $r19, $r21;
        com.opengamma.analytics.financial.model.BumpType $r17;
        boolean $z0, $z1;

        r0 := @this: com.opengamma.analytics.financial.credit.isdastandardmodel.FiniteDifferenceSpreadSensitivityCalculator;

        r1 := @parameter0: com.opengamma.analytics.financial.credit.isdastandardmodel.CDSAnalytic;

        d0 := @parameter1: double;

        r2 := @parameter2: com.opengamma.analytics.financial.credit.isdastandardmodel.CDSAnalytic[];

        r3 := @parameter3: com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantYieldCurve;

        r4 := @parameter4: com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantCreditCurve;

        d1 := @parameter5: double;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "cds");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object[] noNulls(java.lang.Object[],java.lang.String)>(r2, "bucketCDSs");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r4, "creditCurve");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r3, "yieldCurve");

        $d4 = staticinvoke <java.lang.Math: double abs(double)>(d1);

        $b1 = $d4 cmpl 1.0E-10;

        if $b1 <= 0 goto label01;

        $z0 = 1;

        goto label02;

     label01:
        $z0 = 0;

     label02:
        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z0, "bump amount too small");

        i0 = lengthof r2;

        r5 = newarray (double)[i0];

        r6 = newarray (double)[i0];

        i5 = 0;

     label03:
        if i5 >= i0 goto label07;

        $r21 = r0.<com.opengamma.analytics.financial.credit.isdastandardmodel.FiniteDifferenceSpreadSensitivityCalculator: com.opengamma.analytics.financial.credit.isdastandardmodel.AnalyticCDSPricer _pricer>;

        $r20 = r2[i5];

        $d8 = virtualinvoke $r21.<com.opengamma.analytics.financial.credit.isdastandardmodel.AnalyticCDSPricer: double parSpread(com.opengamma.analytics.financial.credit.isdastandardmodel.CDSAnalytic,com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantYieldCurve,com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantCreditCurve)>($r20, r3, r4);

        r5[i5] = $d8;

        $r22 = r2[i5];

        $d9 = virtualinvoke $r22.<com.opengamma.analytics.financial.credit.isdastandardmodel.CDSAnalytic: double getProtectionEnd()>();

        r6[i5] = $d9;

        if i5 <= 0 goto label06;

        $d11 = r6[i5];

        $i3 = i5 - 1;

        $d10 = r6[$i3];

        $b4 = $d11 cmpl $d10;

        if $b4 <= 0 goto label04;

        $z1 = 1;

        goto label05;

     label04:
        $z1 = 0;

     label05:
        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z1, "buckets must be assending");

     label06:
        i5 = i5 + 1;

        goto label03;

     label07:
        $d5 = virtualinvoke r1.<com.opengamma.analytics.financial.credit.isdastandardmodel.CDSAnalytic: double getProtectionEnd()>();

        i6 = staticinvoke <java.util.Arrays: int binarySearch(double[],double)>(r6, $d5);

        if i6 >= 0 goto label08;

        i6 = -1 - i6;

     label08:
        $i2 = i0 - 1;

        i7 = staticinvoke <java.lang.Math: int min(int,int)>(i6, $i2);

        $r15 = r0.<com.opengamma.analytics.financial.credit.isdastandardmodel.FiniteDifferenceSpreadSensitivityCalculator: com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantCreditCurveBuilder _curveBuilder>;

        r7 = virtualinvoke $r15.<com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantCreditCurveBuilder: com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantCreditCurve calibrateCreditCurve(com.opengamma.analytics.financial.credit.isdastandardmodel.CDSAnalytic[],double[],com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantYieldCurve)>(r2, r5, r3);

        $r16 = r0.<com.opengamma.analytics.financial.credit.isdastandardmodel.FiniteDifferenceSpreadSensitivityCalculator: com.opengamma.analytics.financial.credit.isdastandardmodel.AnalyticCDSPricer _pricer>;

        d2 = virtualinvoke $r16.<com.opengamma.analytics.financial.credit.isdastandardmodel.AnalyticCDSPricer: double pv(com.opengamma.analytics.financial.credit.isdastandardmodel.CDSAnalytic,com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantYieldCurve,com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantCreditCurve,double)>(r1, r3, r7, d0);

        r8 = newarray (double)[i0];

        i8 = 0;

     label09:
        if i8 > i7 goto label10;

        $r17 = <com.opengamma.analytics.financial.model.BumpType: com.opengamma.analytics.financial.model.BumpType ADDITIVE>;

        r9 = specialinvoke r0.<com.opengamma.analytics.financial.credit.isdastandardmodel.FiniteDifferenceSpreadSensitivityCalculator: double[] makeBumpedSpreads(double[],double,com.opengamma.analytics.financial.model.BumpType,int)>(r5, d1, $r17, i8);

        $r18 = r0.<com.opengamma.analytics.financial.credit.isdastandardmodel.FiniteDifferenceSpreadSensitivityCalculator: com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantCreditCurveBuilder _curveBuilder>;

        r10 = virtualinvoke $r18.<com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantCreditCurveBuilder: com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantCreditCurve calibrateCreditCurve(com.opengamma.analytics.financial.credit.isdastandardmodel.CDSAnalytic[],double[],com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantYieldCurve)>(r2, r9, r3);

        $r19 = r0.<com.opengamma.analytics.financial.credit.isdastandardmodel.FiniteDifferenceSpreadSensitivityCalculator: com.opengamma.analytics.financial.credit.isdastandardmodel.AnalyticCDSPricer _pricer>;

        d3 = virtualinvoke $r19.<com.opengamma.analytics.financial.credit.isdastandardmodel.AnalyticCDSPricer: double pv(com.opengamma.analytics.financial.credit.isdastandardmodel.CDSAnalytic,com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantYieldCurve,com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantCreditCurve,double)>(r1, r3, r10, d0);

        $d6 = d3 - d2;

        $d7 = $d6 / d1;

        r8[i8] = $d7;

        i8 = i8 + 1;

        goto label09;

     label10:
        return r8;
    }

    public double finiteDifferenceSpreadSensitivity(com.opengamma.analytics.financial.credit.isdastandardmodel.CDSAnalytic, double, com.opengamma.analytics.financial.credit.isdastandardmodel.PriceType, com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantYieldCurve, com.opengamma.analytics.financial.credit.isdastandardmodel.CDSAnalytic[], double[], double[], com.opengamma.analytics.math.differentiation.FiniteDifferenceType)
    {
        com.opengamma.analytics.financial.credit.isdastandardmodel.FiniteDifferenceSpreadSensitivityCalculator r0;
        com.opengamma.analytics.financial.credit.isdastandardmodel.CDSAnalytic r1;
        double d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7;
        com.opengamma.analytics.financial.credit.isdastandardmodel.PriceType r2;
        com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantYieldCurve r3;
        com.opengamma.analytics.financial.credit.isdastandardmodel.CDSAnalytic[] r4;
        double[] r5, r6;
        com.opengamma.analytics.math.differentiation.FiniteDifferenceType r7, $r20;
        int i0, $i1, $i2, $i3, $i4, i8;
        int[] $r14;
        java.lang.IllegalArgumentException $r15;
        java.lang.StringBuilder $r16, $r17, $r18;
        java.lang.String $r19;
        byte $b5, $b6, $b7;
        boolean $z0, $z1, $z2, $z3, $z4;

        r0 := @this: com.opengamma.analytics.financial.credit.isdastandardmodel.FiniteDifferenceSpreadSensitivityCalculator;

        r1 := @parameter0: com.opengamma.analytics.financial.credit.isdastandardmodel.CDSAnalytic;

        d0 := @parameter1: double;

        r2 := @parameter2: com.opengamma.analytics.financial.credit.isdastandardmodel.PriceType;

        r3 := @parameter3: com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantYieldCurve;

        r4 := @parameter4: com.opengamma.analytics.financial.credit.isdastandardmodel.CDSAnalytic[];

        r5 := @parameter5: double[];

        r6 := @parameter6: double[];

        r7 := @parameter7: com.opengamma.analytics.math.differentiation.FiniteDifferenceType;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "cds");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object[] noNulls(java.lang.Object[],java.lang.String)>(r4, "curvePoints");

        staticinvoke <com.opengamma.util.ArgumentChecker: double[] notEmpty(double[],java.lang.String)>(r5, "spreads");

        staticinvoke <com.opengamma.util.ArgumentChecker: double[] notEmpty(double[],java.lang.String)>(r6, "deltaSpreads");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r3, "yieldCurve");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, "priceType");

        i0 = lengthof r4;

        $i1 = lengthof r5;

        if i0 != $i1 goto label01;

        $z0 = 1;

        goto label02;

     label01:
        $z0 = 0;

     label02:
        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z0, "speads length does not match curvePoints");

        $i2 = lengthof r6;

        if i0 != $i2 goto label03;

        $z1 = 1;

        goto label04;

     label03:
        $z1 = 0;

     label04:
        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z1, "deltaSpreads length does not match curvePoints");

        i8 = 0;

     label05:
        if i8 >= i0 goto label13;

        $d4 = r5[i8];

        $b5 = $d4 cmpl 0.0;

        if $b5 <= 0 goto label06;

        $z2 = 1;

        goto label07;

     label06:
        $z2 = 0;

     label07:
        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z2, "spreads must be positive");

        $d5 = r6[i8];

        $b6 = $d5 cmpl 0.0;

        if $b6 < 0 goto label08;

        $z3 = 1;

        goto label09;

     label08:
        $z3 = 0;

     label09:
        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z3, "deltaSpreads must none negative");

        $r20 = <com.opengamma.analytics.math.differentiation.FiniteDifferenceType: com.opengamma.analytics.math.differentiation.FiniteDifferenceType FORWARD>;

        if r7 == $r20 goto label10;

        $d7 = r6[i8];

        $d6 = r5[i8];

        $b7 = $d7 cmpg $d6;

        if $b7 >= 0 goto label11;

     label10:
        $z4 = 1;

        goto label12;

     label11:
        $z4 = 0;

     label12:
        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z4, "deltaSpread must be less spread, unless forward difference is used");

        i8 = i8 + 1;

        goto label05;

     label13:
        $r14 = <com.opengamma.analytics.financial.credit.isdastandardmodel.FiniteDifferenceSpreadSensitivityCalculator$1: int[] $SwitchMap$com$opengamma$analytics$math$differentiation$FiniteDifferenceType>;

        $i3 = virtualinvoke r7.<com.opengamma.analytics.math.differentiation.FiniteDifferenceType: int ordinal()>();

        $i4 = $r14[$i3];

        tableswitch($i4)
        {
            case 1: goto label14;
            case 2: goto label15;
            case 3: goto label16;
            default: goto label17;
        };

     label14:
        $d1 = specialinvoke r0.<com.opengamma.analytics.financial.credit.isdastandardmodel.FiniteDifferenceSpreadSensitivityCalculator: double fdCentral(com.opengamma.analytics.financial.credit.isdastandardmodel.CDSAnalytic,double,com.opengamma.analytics.financial.credit.isdastandardmodel.CDSAnalytic[],double[],double[],com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantYieldCurve,com.opengamma.analytics.financial.credit.isdastandardmodel.PriceType)>(r1, d0, r4, r5, r6, r3, r2);

        return $d1;

     label15:
        $d3 = specialinvoke r0.<com.opengamma.analytics.financial.credit.isdastandardmodel.FiniteDifferenceSpreadSensitivityCalculator: double fdForward(com.opengamma.analytics.financial.credit.isdastandardmodel.CDSAnalytic,double,com.opengamma.analytics.financial.credit.isdastandardmodel.CDSAnalytic[],double[],double[],com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantYieldCurve,com.opengamma.analytics.financial.credit.isdastandardmodel.PriceType)>(r1, d0, r4, r5, r6, r3, r2);

        return $d3;

     label16:
        $d2 = specialinvoke r0.<com.opengamma.analytics.financial.credit.isdastandardmodel.FiniteDifferenceSpreadSensitivityCalculator: double fdBackwards(com.opengamma.analytics.financial.credit.isdastandardmodel.CDSAnalytic,double,com.opengamma.analytics.financial.credit.isdastandardmodel.CDSAnalytic[],double[],double[],com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantYieldCurve,com.opengamma.analytics.financial.credit.isdastandardmodel.PriceType)>(r1, d0, r4, r5, r6, r3, r2);

        return $d2;

     label17:
        $r15 = new java.lang.IllegalArgumentException;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("unknown type ");

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r7);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r15.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r19);

        throw $r15;
    }

    private double fdCreditDV01(com.opengamma.analytics.financial.credit.isdastandardmodel.CDSAnalytic, double, com.opengamma.analytics.financial.credit.isdastandardmodel.CDSAnalytic[], double[], double[], com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantYieldCurve, com.opengamma.analytics.financial.credit.isdastandardmodel.PriceType)
    {
        com.opengamma.analytics.financial.credit.isdastandardmodel.FiniteDifferenceSpreadSensitivityCalculator r0;
        com.opengamma.analytics.financial.credit.isdastandardmodel.CDSAnalytic r1;
        double d0, d1, d2, $d3;
        com.opengamma.analytics.financial.credit.isdastandardmodel.CDSAnalytic[] r2;
        double[] r3, r4;
        com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantYieldCurve r5;
        com.opengamma.analytics.financial.credit.isdastandardmodel.PriceType r6;
        com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantCreditCurve r7, r8;
        com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantCreditCurveBuilder $r9, $r10;
        com.opengamma.analytics.financial.credit.isdastandardmodel.AnalyticCDSPricer $r11, $r12;

        r0 := @this: com.opengamma.analytics.financial.credit.isdastandardmodel.FiniteDifferenceSpreadSensitivityCalculator;

        r1 := @parameter0: com.opengamma.analytics.financial.credit.isdastandardmodel.CDSAnalytic;

        d0 := @parameter1: double;

        r2 := @parameter2: com.opengamma.analytics.financial.credit.isdastandardmodel.CDSAnalytic[];

        r3 := @parameter3: double[];

        r4 := @parameter4: double[];

        r5 := @parameter5: com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantYieldCurve;

        r6 := @parameter6: com.opengamma.analytics.financial.credit.isdastandardmodel.PriceType;

        $r9 = r0.<com.opengamma.analytics.financial.credit.isdastandardmodel.FiniteDifferenceSpreadSensitivityCalculator: com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantCreditCurveBuilder _curveBuilder>;

        r7 = virtualinvoke $r9.<com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantCreditCurveBuilder: com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantCreditCurve calibrateCreditCurve(com.opengamma.analytics.financial.credit.isdastandardmodel.CDSAnalytic[],double[],com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantYieldCurve)>(r2, r3, r5);

        $r10 = r0.<com.opengamma.analytics.financial.credit.isdastandardmodel.FiniteDifferenceSpreadSensitivityCalculator: com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantCreditCurveBuilder _curveBuilder>;

        r8 = virtualinvoke $r10.<com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantCreditCurveBuilder: com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantCreditCurve calibrateCreditCurve(com.opengamma.analytics.financial.credit.isdastandardmodel.CDSAnalytic[],double[],com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantYieldCurve)>(r2, r4, r5);

        $r11 = r0.<com.opengamma.analytics.financial.credit.isdastandardmodel.FiniteDifferenceSpreadSensitivityCalculator: com.opengamma.analytics.financial.credit.isdastandardmodel.AnalyticCDSPricer _pricer>;

        d1 = virtualinvoke $r11.<com.opengamma.analytics.financial.credit.isdastandardmodel.AnalyticCDSPricer: double pv(com.opengamma.analytics.financial.credit.isdastandardmodel.CDSAnalytic,com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantYieldCurve,com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantCreditCurve,double,com.opengamma.analytics.financial.credit.isdastandardmodel.PriceType)>(r1, r5, r7, d0, r6);

        $r12 = r0.<com.opengamma.analytics.financial.credit.isdastandardmodel.FiniteDifferenceSpreadSensitivityCalculator: com.opengamma.analytics.financial.credit.isdastandardmodel.AnalyticCDSPricer _pricer>;

        d2 = virtualinvoke $r12.<com.opengamma.analytics.financial.credit.isdastandardmodel.AnalyticCDSPricer: double pv(com.opengamma.analytics.financial.credit.isdastandardmodel.CDSAnalytic,com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantYieldCurve,com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantCreditCurve,double,com.opengamma.analytics.financial.credit.isdastandardmodel.PriceType)>(r1, r5, r8, d0, r6);

        $d3 = d1 - d2;

        return $d3;
    }

    private double fdCentral(com.opengamma.analytics.financial.credit.isdastandardmodel.CDSAnalytic, double, com.opengamma.analytics.financial.credit.isdastandardmodel.CDSAnalytic[], double[], double[], com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantYieldCurve, com.opengamma.analytics.financial.credit.isdastandardmodel.PriceType)
    {
        com.opengamma.analytics.financial.credit.isdastandardmodel.FiniteDifferenceSpreadSensitivityCalculator r0;
        com.opengamma.analytics.financial.credit.isdastandardmodel.CDSAnalytic r1;
        double d0, d1, d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9;
        com.opengamma.analytics.financial.credit.isdastandardmodel.CDSAnalytic[] r2;
        double[] r3, r4, r7, r8;
        com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantYieldCurve r5;
        com.opengamma.analytics.financial.credit.isdastandardmodel.PriceType r6;
        int i0, i1;
        com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantCreditCurve r9, r14;
        com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantCreditCurveBuilder $r10, $r11;
        com.opengamma.analytics.financial.credit.isdastandardmodel.AnalyticCDSPricer $r12, $r13;

        r0 := @this: com.opengamma.analytics.financial.credit.isdastandardmodel.FiniteDifferenceSpreadSensitivityCalculator;

        r1 := @parameter0: com.opengamma.analytics.financial.credit.isdastandardmodel.CDSAnalytic;

        d0 := @parameter1: double;

        r2 := @parameter2: com.opengamma.analytics.financial.credit.isdastandardmodel.CDSAnalytic[];

        r3 := @parameter3: double[];

        r4 := @parameter4: double[];

        r5 := @parameter5: com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantYieldCurve;

        r6 := @parameter6: com.opengamma.analytics.financial.credit.isdastandardmodel.PriceType;

        i0 = lengthof r2;

        r7 = newarray (double)[i0];

        r8 = newarray (double)[i0];

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        $d5 = r3[i1];

        $d4 = r4[i1];

        $d6 = $d5 + $d4;

        r7[i1] = $d6;

        $d8 = r3[i1];

        $d7 = r4[i1];

        $d9 = $d8 - $d7;

        r8[i1] = $d9;

        i1 = i1 + 1;

        goto label1;

     label2:
        $r10 = r0.<com.opengamma.analytics.financial.credit.isdastandardmodel.FiniteDifferenceSpreadSensitivityCalculator: com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantCreditCurveBuilder _curveBuilder>;

        r14 = virtualinvoke $r10.<com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantCreditCurveBuilder: com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantCreditCurve calibrateCreditCurve(com.opengamma.analytics.financial.credit.isdastandardmodel.CDSAnalytic[],double[],com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantYieldCurve)>(r2, r7, r5);

        $r11 = r0.<com.opengamma.analytics.financial.credit.isdastandardmodel.FiniteDifferenceSpreadSensitivityCalculator: com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantCreditCurveBuilder _curveBuilder>;

        r9 = virtualinvoke $r11.<com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantCreditCurveBuilder: com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantCreditCurve calibrateCreditCurve(com.opengamma.analytics.financial.credit.isdastandardmodel.CDSAnalytic[],double[],com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantYieldCurve)>(r2, r8, r5);

        $r12 = r0.<com.opengamma.analytics.financial.credit.isdastandardmodel.FiniteDifferenceSpreadSensitivityCalculator: com.opengamma.analytics.financial.credit.isdastandardmodel.AnalyticCDSPricer _pricer>;

        d1 = virtualinvoke $r12.<com.opengamma.analytics.financial.credit.isdastandardmodel.AnalyticCDSPricer: double pv(com.opengamma.analytics.financial.credit.isdastandardmodel.CDSAnalytic,com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantYieldCurve,com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantCreditCurve,double,com.opengamma.analytics.financial.credit.isdastandardmodel.PriceType)>(r1, r5, r14, d0, r6);

        $r13 = r0.<com.opengamma.analytics.financial.credit.isdastandardmodel.FiniteDifferenceSpreadSensitivityCalculator: com.opengamma.analytics.financial.credit.isdastandardmodel.AnalyticCDSPricer _pricer>;

        d2 = virtualinvoke $r13.<com.opengamma.analytics.financial.credit.isdastandardmodel.AnalyticCDSPricer: double pv(com.opengamma.analytics.financial.credit.isdastandardmodel.CDSAnalytic,com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantYieldCurve,com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantCreditCurve,double,com.opengamma.analytics.financial.credit.isdastandardmodel.PriceType)>(r1, r5, r9, d0, r6);

        $d3 = d1 - d2;

        return $d3;
    }

    private double fdForward(com.opengamma.analytics.financial.credit.isdastandardmodel.CDSAnalytic, double, com.opengamma.analytics.financial.credit.isdastandardmodel.CDSAnalytic[], double[], double[], com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantYieldCurve, com.opengamma.analytics.financial.credit.isdastandardmodel.PriceType)
    {
        com.opengamma.analytics.financial.credit.isdastandardmodel.FiniteDifferenceSpreadSensitivityCalculator r0;
        com.opengamma.analytics.financial.credit.isdastandardmodel.CDSAnalytic r1;
        double d0, d1, d2, $d3, $d4, $d5, $d6;
        com.opengamma.analytics.financial.credit.isdastandardmodel.CDSAnalytic[] r2;
        double[] r3, r4, r7;
        com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantYieldCurve r5;
        com.opengamma.analytics.financial.credit.isdastandardmodel.PriceType r6;
        int i0, i1;
        com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantCreditCurve r8, r13;
        com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantCreditCurveBuilder $r9, $r10;
        com.opengamma.analytics.financial.credit.isdastandardmodel.AnalyticCDSPricer $r11, $r12;

        r0 := @this: com.opengamma.analytics.financial.credit.isdastandardmodel.FiniteDifferenceSpreadSensitivityCalculator;

        r1 := @parameter0: com.opengamma.analytics.financial.credit.isdastandardmodel.CDSAnalytic;

        d0 := @parameter1: double;

        r2 := @parameter2: com.opengamma.analytics.financial.credit.isdastandardmodel.CDSAnalytic[];

        r3 := @parameter3: double[];

        r4 := @parameter4: double[];

        r5 := @parameter5: com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantYieldCurve;

        r6 := @parameter6: com.opengamma.analytics.financial.credit.isdastandardmodel.PriceType;

        i0 = lengthof r2;

        r7 = newarray (double)[i0];

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        $d5 = r3[i1];

        $d4 = r4[i1];

        $d6 = $d5 + $d4;

        r7[i1] = $d6;

        i1 = i1 + 1;

        goto label1;

     label2:
        $r9 = r0.<com.opengamma.analytics.financial.credit.isdastandardmodel.FiniteDifferenceSpreadSensitivityCalculator: com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantCreditCurveBuilder _curveBuilder>;

        r13 = virtualinvoke $r9.<com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantCreditCurveBuilder: com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantCreditCurve calibrateCreditCurve(com.opengamma.analytics.financial.credit.isdastandardmodel.CDSAnalytic[],double[],com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantYieldCurve)>(r2, r7, r5);

        $r10 = r0.<com.opengamma.analytics.financial.credit.isdastandardmodel.FiniteDifferenceSpreadSensitivityCalculator: com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantCreditCurveBuilder _curveBuilder>;

        r8 = virtualinvoke $r10.<com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantCreditCurveBuilder: com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantCreditCurve calibrateCreditCurve(com.opengamma.analytics.financial.credit.isdastandardmodel.CDSAnalytic[],double[],com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantYieldCurve)>(r2, r3, r5);

        $r11 = r0.<com.opengamma.analytics.financial.credit.isdastandardmodel.FiniteDifferenceSpreadSensitivityCalculator: com.opengamma.analytics.financial.credit.isdastandardmodel.AnalyticCDSPricer _pricer>;

        d1 = virtualinvoke $r11.<com.opengamma.analytics.financial.credit.isdastandardmodel.AnalyticCDSPricer: double pv(com.opengamma.analytics.financial.credit.isdastandardmodel.CDSAnalytic,com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantYieldCurve,com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantCreditCurve,double,com.opengamma.analytics.financial.credit.isdastandardmodel.PriceType)>(r1, r5, r13, d0, r6);

        $r12 = r0.<com.opengamma.analytics.financial.credit.isdastandardmodel.FiniteDifferenceSpreadSensitivityCalculator: com.opengamma.analytics.financial.credit.isdastandardmodel.AnalyticCDSPricer _pricer>;

        d2 = virtualinvoke $r12.<com.opengamma.analytics.financial.credit.isdastandardmodel.AnalyticCDSPricer: double pv(com.opengamma.analytics.financial.credit.isdastandardmodel.CDSAnalytic,com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantYieldCurve,com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantCreditCurve,double,com.opengamma.analytics.financial.credit.isdastandardmodel.PriceType)>(r1, r5, r8, d0, r6);

        $d3 = d1 - d2;

        return $d3;
    }

    private double fdBackwards(com.opengamma.analytics.financial.credit.isdastandardmodel.CDSAnalytic, double, com.opengamma.analytics.financial.credit.isdastandardmodel.CDSAnalytic[], double[], double[], com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantYieldCurve, com.opengamma.analytics.financial.credit.isdastandardmodel.PriceType)
    {
        com.opengamma.analytics.financial.credit.isdastandardmodel.FiniteDifferenceSpreadSensitivityCalculator r0;
        com.opengamma.analytics.financial.credit.isdastandardmodel.CDSAnalytic r1;
        double d0, d1, d2, $d3, $d4, $d5, $d6;
        com.opengamma.analytics.financial.credit.isdastandardmodel.CDSAnalytic[] r2;
        double[] r3, r4, r7;
        com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantYieldCurve r5;
        com.opengamma.analytics.financial.credit.isdastandardmodel.PriceType r6;
        int i0, i1;
        com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantCreditCurve r8, r13;
        com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantCreditCurveBuilder $r9, $r10;
        com.opengamma.analytics.financial.credit.isdastandardmodel.AnalyticCDSPricer $r11, $r12;

        r0 := @this: com.opengamma.analytics.financial.credit.isdastandardmodel.FiniteDifferenceSpreadSensitivityCalculator;

        r1 := @parameter0: com.opengamma.analytics.financial.credit.isdastandardmodel.CDSAnalytic;

        d0 := @parameter1: double;

        r2 := @parameter2: com.opengamma.analytics.financial.credit.isdastandardmodel.CDSAnalytic[];

        r3 := @parameter3: double[];

        r4 := @parameter4: double[];

        r5 := @parameter5: com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantYieldCurve;

        r6 := @parameter6: com.opengamma.analytics.financial.credit.isdastandardmodel.PriceType;

        i0 = lengthof r2;

        r7 = newarray (double)[i0];

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        $d5 = r3[i1];

        $d4 = r4[i1];

        $d6 = $d5 - $d4;

        r7[i1] = $d6;

        i1 = i1 + 1;

        goto label1;

     label2:
        $r9 = r0.<com.opengamma.analytics.financial.credit.isdastandardmodel.FiniteDifferenceSpreadSensitivityCalculator: com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantCreditCurveBuilder _curveBuilder>;

        r13 = virtualinvoke $r9.<com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantCreditCurveBuilder: com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantCreditCurve calibrateCreditCurve(com.opengamma.analytics.financial.credit.isdastandardmodel.CDSAnalytic[],double[],com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantYieldCurve)>(r2, r3, r5);

        $r10 = r0.<com.opengamma.analytics.financial.credit.isdastandardmodel.FiniteDifferenceSpreadSensitivityCalculator: com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantCreditCurveBuilder _curveBuilder>;

        r8 = virtualinvoke $r10.<com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantCreditCurveBuilder: com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantCreditCurve calibrateCreditCurve(com.opengamma.analytics.financial.credit.isdastandardmodel.CDSAnalytic[],double[],com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantYieldCurve)>(r2, r7, r5);

        $r11 = r0.<com.opengamma.analytics.financial.credit.isdastandardmodel.FiniteDifferenceSpreadSensitivityCalculator: com.opengamma.analytics.financial.credit.isdastandardmodel.AnalyticCDSPricer _pricer>;

        d1 = virtualinvoke $r11.<com.opengamma.analytics.financial.credit.isdastandardmodel.AnalyticCDSPricer: double pv(com.opengamma.analytics.financial.credit.isdastandardmodel.CDSAnalytic,com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantYieldCurve,com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantCreditCurve,double,com.opengamma.analytics.financial.credit.isdastandardmodel.PriceType)>(r1, r5, r13, d0, r6);

        $r12 = r0.<com.opengamma.analytics.financial.credit.isdastandardmodel.FiniteDifferenceSpreadSensitivityCalculator: com.opengamma.analytics.financial.credit.isdastandardmodel.AnalyticCDSPricer _pricer>;

        d2 = virtualinvoke $r12.<com.opengamma.analytics.financial.credit.isdastandardmodel.AnalyticCDSPricer: double pv(com.opengamma.analytics.financial.credit.isdastandardmodel.CDSAnalytic,com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantYieldCurve,com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantCreditCurve,double,com.opengamma.analytics.financial.credit.isdastandardmodel.PriceType)>(r1, r5, r8, d0, r6);

        $d3 = d1 - d2;

        return $d3;
    }

    private double bumpedSpread(double, double, com.opengamma.analytics.financial.model.BumpType)
    {
        com.opengamma.analytics.financial.credit.isdastandardmodel.FiniteDifferenceSpreadSensitivityCalculator r0;
        double d0, d1, $d2, $d3, $d4;
        com.opengamma.analytics.financial.model.BumpType r1, $r2, $r3;
        java.lang.IllegalArgumentException $r4;
        java.lang.StringBuilder $r5, $r6, $r7, $r8;
        java.lang.String $r9;

        r0 := @this: com.opengamma.analytics.financial.credit.isdastandardmodel.FiniteDifferenceSpreadSensitivityCalculator;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        r1 := @parameter2: com.opengamma.analytics.financial.model.BumpType;

        $r2 = <com.opengamma.analytics.financial.model.BumpType: com.opengamma.analytics.financial.model.BumpType ADDITIVE>;

        if r1 != $r2 goto label1;

        $d4 = d0 + d1;

        return $d4;

     label1:
        $r3 = <com.opengamma.analytics.financial.model.BumpType: com.opengamma.analytics.financial.model.BumpType MULTIPLICATIVE>;

        if r1 != $r3 goto label2;

        $d2 = 1.0 + d1;

        $d3 = d0 * $d2;

        return $d3;

     label2:
        $r4 = new java.lang.IllegalArgumentException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("BumpType ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is not supported");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r9);

        throw $r4;
    }

    private double[] makeBumpedSpreads(double[], double, com.opengamma.analytics.financial.model.BumpType)
    {
        com.opengamma.analytics.financial.credit.isdastandardmodel.FiniteDifferenceSpreadSensitivityCalculator r0;
        double[] r1, r3;
        double d0, $d1, $d2, $d3, $d4, d5;
        com.opengamma.analytics.financial.model.BumpType r2, $r4, $r5;
        int i0, i1, i2;
        java.lang.IllegalArgumentException $r6;
        java.lang.StringBuilder $r7, $r8, $r9, $r10;
        java.lang.String $r11;

        r0 := @this: com.opengamma.analytics.financial.credit.isdastandardmodel.FiniteDifferenceSpreadSensitivityCalculator;

        r1 := @parameter0: double[];

        d0 := @parameter1: double;

        r2 := @parameter2: com.opengamma.analytics.financial.model.BumpType;

        i0 = lengthof r1;

        r3 = newarray (double)[i0];

        $r4 = <com.opengamma.analytics.financial.model.BumpType: com.opengamma.analytics.financial.model.BumpType ADDITIVE>;

        if r2 != $r4 goto label3;

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        $d3 = r1[i1];

        $d4 = $d3 + d0;

        r3[i1] = $d4;

        i1 = i1 + 1;

        goto label1;

     label2:
        goto label7;

     label3:
        $r5 = <com.opengamma.analytics.financial.model.BumpType: com.opengamma.analytics.financial.model.BumpType MULTIPLICATIVE>;

        if r2 != $r5 goto label6;

        d5 = 1.0 + d0;

        i2 = 0;

     label4:
        if i2 >= i0 goto label5;

        $d1 = r1[i2];

        $d2 = $d1 * d5;

        r3[i2] = $d2;

        i2 = i2 + 1;

        goto label4;

     label5:
        goto label7;

     label6:
        $r6 = new java.lang.IllegalArgumentException;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("BumpType ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is not supported");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r11);

        throw $r6;

     label7:
        return r3;
    }

    public com.opengamma.analytics.financial.credit.isdastandardmodel.CDSQuoteConvention bumpQuote(com.opengamma.analytics.financial.credit.isdastandardmodel.CDSAnalytic, com.opengamma.analytics.financial.credit.isdastandardmodel.CDSQuoteConvention, com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantYieldCurve, double)
    {
        com.opengamma.analytics.financial.credit.isdastandardmodel.FiniteDifferenceSpreadSensitivityCalculator r0;
        com.opengamma.analytics.financial.credit.isdastandardmodel.CDSAnalytic r1;
        com.opengamma.analytics.financial.credit.isdastandardmodel.CDSQuoteConvention r2;
        com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantYieldCurve r3;
        double d0, d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12;
        boolean $z0, $z1, $z2;
        java.lang.IllegalArgumentException $r4;
        java.lang.StringBuilder $r5, $r6, $r8;
        java.lang.Class $r7;
        java.lang.String $r9;
        com.opengamma.analytics.financial.credit.isdastandardmodel.MarketQuoteConverter $r10, $r12;
        com.opengamma.analytics.financial.credit.isdastandardmodel.PointsUpFront $r11, r16;
        com.opengamma.analytics.financial.credit.isdastandardmodel.QuotedSpread $r13, r15;
        com.opengamma.analytics.financial.credit.isdastandardmodel.ParSpread $r14;

        r0 := @this: com.opengamma.analytics.financial.credit.isdastandardmodel.FiniteDifferenceSpreadSensitivityCalculator;

        r1 := @parameter0: com.opengamma.analytics.financial.credit.isdastandardmodel.CDSAnalytic;

        r2 := @parameter1: com.opengamma.analytics.financial.credit.isdastandardmodel.CDSQuoteConvention;

        r3 := @parameter2: com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantYieldCurve;

        d0 := @parameter3: double;

        $z0 = r2 instanceof com.opengamma.analytics.financial.credit.isdastandardmodel.ParSpread;

        if $z0 == 0 goto label1;

        $r14 = new com.opengamma.analytics.financial.credit.isdastandardmodel.ParSpread;

        $d11 = interfaceinvoke r2.<com.opengamma.analytics.financial.credit.isdastandardmodel.CDSQuoteConvention: double getCoupon()>();

        $d12 = $d11 + d0;

        specialinvoke $r14.<com.opengamma.analytics.financial.credit.isdastandardmodel.ParSpread: void <init>(double)>($d12);

        return $r14;

     label1:
        $z1 = r2 instanceof com.opengamma.analytics.financial.credit.isdastandardmodel.QuotedSpread;

        if $z1 == 0 goto label2;

        r15 = (com.opengamma.analytics.financial.credit.isdastandardmodel.QuotedSpread) r2;

        $r13 = new com.opengamma.analytics.financial.credit.isdastandardmodel.QuotedSpread;

        $d8 = virtualinvoke r15.<com.opengamma.analytics.financial.credit.isdastandardmodel.QuotedSpread: double getCoupon()>();

        $d9 = virtualinvoke r15.<com.opengamma.analytics.financial.credit.isdastandardmodel.QuotedSpread: double getQuotedSpread()>();

        $d10 = $d9 + d0;

        specialinvoke $r13.<com.opengamma.analytics.financial.credit.isdastandardmodel.QuotedSpread: void <init>(double,double)>($d8, $d10);

        return $r13;

     label2:
        $z2 = r2 instanceof com.opengamma.analytics.financial.credit.isdastandardmodel.PointsUpFront;

        if $z2 == 0 goto label3;

        r16 = (com.opengamma.analytics.financial.credit.isdastandardmodel.PointsUpFront) r2;

        $r10 = r0.<com.opengamma.analytics.financial.credit.isdastandardmodel.FiniteDifferenceSpreadSensitivityCalculator: com.opengamma.analytics.financial.credit.isdastandardmodel.MarketQuoteConverter _pufConverter>;

        $d2 = virtualinvoke r16.<com.opengamma.analytics.financial.credit.isdastandardmodel.PointsUpFront: double getCoupon()>();

        $d3 = virtualinvoke r16.<com.opengamma.analytics.financial.credit.isdastandardmodel.PointsUpFront: double getPointsUpFront()>();

        $d4 = virtualinvoke $r10.<com.opengamma.analytics.financial.credit.isdastandardmodel.MarketQuoteConverter: double pufToQuotedSpread(com.opengamma.analytics.financial.credit.isdastandardmodel.CDSAnalytic,double,com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantYieldCurve,double)>(r1, $d2, r3, $d3);

        d1 = $d4 + d0;

        $r11 = new com.opengamma.analytics.financial.credit.isdastandardmodel.PointsUpFront;

        $d5 = virtualinvoke r16.<com.opengamma.analytics.financial.credit.isdastandardmodel.PointsUpFront: double getCoupon()>();

        $r12 = r0.<com.opengamma.analytics.financial.credit.isdastandardmodel.FiniteDifferenceSpreadSensitivityCalculator: com.opengamma.analytics.financial.credit.isdastandardmodel.MarketQuoteConverter _pufConverter>;

        $d6 = virtualinvoke r16.<com.opengamma.analytics.financial.credit.isdastandardmodel.PointsUpFront: double getCoupon()>();

        $d7 = virtualinvoke $r12.<com.opengamma.analytics.financial.credit.isdastandardmodel.MarketQuoteConverter: double quotedSpreadToPUF(com.opengamma.analytics.financial.credit.isdastandardmodel.CDSAnalytic,double,com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantYieldCurve,double)>(r1, $d6, r3, d1);

        specialinvoke $r11.<com.opengamma.analytics.financial.credit.isdastandardmodel.PointsUpFront: void <init>(double,double)>($d5, $d7);

        return $r11;

     label3:
        $r4 = new java.lang.IllegalArgumentException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("unknow type ");

        $r7 = virtualinvoke r2.<java.lang.Object: java.lang.Class getClass()>();

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r9);

        throw $r4;
    }

    public com.opengamma.analytics.financial.credit.isdastandardmodel.CDSQuoteConvention[] bumpQuotes(com.opengamma.analytics.financial.credit.isdastandardmodel.CDSAnalytic[], com.opengamma.analytics.financial.credit.isdastandardmodel.CDSQuoteConvention[], com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantYieldCurve, double)
    {
        com.opengamma.analytics.financial.credit.isdastandardmodel.FiniteDifferenceSpreadSensitivityCalculator r0;
        com.opengamma.analytics.financial.credit.isdastandardmodel.CDSAnalytic[] r1;
        com.opengamma.analytics.financial.credit.isdastandardmodel.CDSQuoteConvention[] r2, r4;
        com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantYieldCurve r3;
        double d0;
        int i0, i1;
        com.opengamma.analytics.financial.credit.isdastandardmodel.CDSQuoteConvention $r5, $r7;
        com.opengamma.analytics.financial.credit.isdastandardmodel.CDSAnalytic $r6;

        r0 := @this: com.opengamma.analytics.financial.credit.isdastandardmodel.FiniteDifferenceSpreadSensitivityCalculator;

        r1 := @parameter0: com.opengamma.analytics.financial.credit.isdastandardmodel.CDSAnalytic[];

        r2 := @parameter1: com.opengamma.analytics.financial.credit.isdastandardmodel.CDSQuoteConvention[];

        r3 := @parameter2: com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantYieldCurve;

        d0 := @parameter3: double;

        i0 = lengthof r1;

        r4 = newarray (com.opengamma.analytics.financial.credit.isdastandardmodel.CDSQuoteConvention)[i0];

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        $r6 = r1[i1];

        $r5 = r2[i1];

        $r7 = virtualinvoke r0.<com.opengamma.analytics.financial.credit.isdastandardmodel.FiniteDifferenceSpreadSensitivityCalculator: com.opengamma.analytics.financial.credit.isdastandardmodel.CDSQuoteConvention bumpQuote(com.opengamma.analytics.financial.credit.isdastandardmodel.CDSAnalytic,com.opengamma.analytics.financial.credit.isdastandardmodel.CDSQuoteConvention,com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantYieldCurve,double)>($r6, $r5, r3, d0);

        r4[i1] = $r7;

        i1 = i1 + 1;

        goto label1;

     label2:
        return r4;
    }

    private com.opengamma.analytics.financial.credit.isdastandardmodel.CDSQuoteConvention[] bumpQuoteAtIndex(com.opengamma.analytics.financial.credit.isdastandardmodel.CDSAnalytic[], com.opengamma.analytics.financial.credit.isdastandardmodel.CDSQuoteConvention[], com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantYieldCurve, double, int)
    {
        com.opengamma.analytics.financial.credit.isdastandardmodel.FiniteDifferenceSpreadSensitivityCalculator r0;
        com.opengamma.analytics.financial.credit.isdastandardmodel.CDSAnalytic[] r1;
        com.opengamma.analytics.financial.credit.isdastandardmodel.CDSQuoteConvention[] r2, r4;
        com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantYieldCurve r3;
        double d0;
        int i0, i1;
        com.opengamma.analytics.financial.credit.isdastandardmodel.CDSQuoteConvention $r5, $r7;
        com.opengamma.analytics.financial.credit.isdastandardmodel.CDSAnalytic $r6;

        r0 := @this: com.opengamma.analytics.financial.credit.isdastandardmodel.FiniteDifferenceSpreadSensitivityCalculator;

        r1 := @parameter0: com.opengamma.analytics.financial.credit.isdastandardmodel.CDSAnalytic[];

        r2 := @parameter1: com.opengamma.analytics.financial.credit.isdastandardmodel.CDSQuoteConvention[];

        r3 := @parameter2: com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantYieldCurve;

        d0 := @parameter3: double;

        i0 := @parameter4: int;

        i1 = lengthof r1;

        r4 = newarray (com.opengamma.analytics.financial.credit.isdastandardmodel.CDSQuoteConvention)[i1];

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r2, 0, r4, 0, i1);

        $r6 = r1[i0];

        $r5 = r2[i0];

        $r7 = virtualinvoke r0.<com.opengamma.analytics.financial.credit.isdastandardmodel.FiniteDifferenceSpreadSensitivityCalculator: com.opengamma.analytics.financial.credit.isdastandardmodel.CDSQuoteConvention bumpQuote(com.opengamma.analytics.financial.credit.isdastandardmodel.CDSAnalytic,com.opengamma.analytics.financial.credit.isdastandardmodel.CDSQuoteConvention,com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantYieldCurve,double)>($r6, $r5, r3, d0);

        r4[i0] = $r7;

        return r4;
    }

    private double[] makeBumpedSpreads(double[], double, com.opengamma.analytics.financial.model.BumpType, int)
    {
        com.opengamma.analytics.financial.credit.isdastandardmodel.FiniteDifferenceSpreadSensitivityCalculator r0;
        double[] r1, r3;
        double d0, $d1, $d2, $d3, $d4, $d5, $d6;
        com.opengamma.analytics.financial.model.BumpType r2;
        int i0, i1, $i2, $i3;
        int[] $r4;
        java.lang.IllegalArgumentException $r5;
        java.lang.StringBuilder $r6, $r7, $r8, $r9;
        java.lang.String $r10;

        r0 := @this: com.opengamma.analytics.financial.credit.isdastandardmodel.FiniteDifferenceSpreadSensitivityCalculator;

        r1 := @parameter0: double[];

        d0 := @parameter1: double;

        r2 := @parameter2: com.opengamma.analytics.financial.model.BumpType;

        i0 := @parameter3: int;

        i1 = lengthof r1;

        r3 = newarray (double)[i1];

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, 0, r3, 0, i1);

        $r4 = <com.opengamma.analytics.financial.credit.isdastandardmodel.FiniteDifferenceSpreadSensitivityCalculator$1: int[] $SwitchMap$com$opengamma$analytics$financial$model$BumpType>;

        $i2 = virtualinvoke r2.<com.opengamma.analytics.financial.model.BumpType: int ordinal()>();

        $i3 = $r4[$i2];

        lookupswitch($i3)
        {
            case 1: goto label1;
            case 2: goto label2;
            default: goto label3;
        };

     label1:
        $d5 = r3[i0];

        $d6 = $d5 + d0;

        r3[i0] = $d6;

        goto label4;

     label2:
        $d3 = r3[i0];

        $d1 = r3[i0];

        $d2 = $d1 * d0;

        $d4 = $d3 + $d2;

        r3[i0] = $d4;

        goto label4;

     label3:
        $r5 = new java.lang.IllegalArgumentException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("BumpType ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is not supported");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r10);

        throw $r5;

     label4:
        return r3;
    }
}
