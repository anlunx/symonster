public abstract class com.opengamma.analytics.math.utilities.Epsilon extends java.lang.Object
{
    private static final double[] COEFF1;
    private static final double[] COEFF2;
    private static final double[] COEFF3;

    public void <init>()
    {
        com.opengamma.analytics.math.utilities.Epsilon r0;

        r0 := @this: com.opengamma.analytics.math.utilities.Epsilon;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static double epsilon(double)
    {
        double d0, $d1, $d2, $d3, $d4;
        byte $b0;
        double[] $r0;

        d0 := @parameter0: double;

        $d1 = staticinvoke <java.lang.Math: double abs(double)>(d0);

        $b0 = $d1 cmpl 1.0E-10;

        if $b0 <= 0 goto label1;

        $d3 = staticinvoke <java.lang.Math: double expm1(double)>(d0);

        $d4 = $d3 / d0;

        return $d4;

     label1:
        $r0 = <com.opengamma.analytics.math.utilities.Epsilon: double[] COEFF1>;

        $d2 = staticinvoke <com.opengamma.analytics.math.utilities.Epsilon: double taylor(double,double[])>(d0, $r0);

        return $d2;
    }

    public static double epsilonP(double)
    {
        double d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8;
        byte $b0;
        double[] $r0;

        d0 := @parameter0: double;

        $d1 = staticinvoke <java.lang.Math: double abs(double)>(d0);

        $b0 = $d1 cmpl 1.0E-7;

        if $b0 <= 0 goto label1;

        $d3 = d0 - 1.0;

        $d4 = staticinvoke <java.lang.Math: double expm1(double)>(d0);

        $d5 = $d3 * $d4;

        $d6 = $d5 + d0;

        $d7 = $d6 / d0;

        $d8 = $d7 / d0;

        return $d8;

     label1:
        $r0 = <com.opengamma.analytics.math.utilities.Epsilon: double[] COEFF2>;

        $d2 = staticinvoke <com.opengamma.analytics.math.utilities.Epsilon: double taylor(double,double[])>(d0, $r0);

        return $d2;
    }

    public static double epsilonPP(double)
    {
        double d0, d1, d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13;
        byte $b0;
        double[] $r0;

        d0 := @parameter0: double;

        $d3 = staticinvoke <java.lang.Math: double abs(double)>(d0);

        $b0 = $d3 cmpl 1.0E-5;

        if $b0 <= 0 goto label1;

        d1 = d0 * d0;

        d2 = d0 * d1;

        $d5 = staticinvoke <java.lang.Math: double expm1(double)>(d0);

        $d6 = 2.0 * d0;

        $d7 = d1 - $d6;

        $d8 = $d7 + 2.0;

        $d9 = $d5 * $d8;

        $d11 = $d9 + d1;

        $d10 = 2.0 * d0;

        $d12 = $d11 - $d10;

        $d13 = $d12 / d2;

        return $d13;

     label1:
        $r0 = <com.opengamma.analytics.math.utilities.Epsilon: double[] COEFF3>;

        $d4 = staticinvoke <com.opengamma.analytics.math.utilities.Epsilon: double taylor(double,double[])>(d0, $r0);

        return $d4;
    }

    private static double taylor(double, double[])
    {
        double d0, $d1, $d2, d3;
        double[] r0;
        int i0, i1;

        d0 := @parameter0: double;

        r0 := @parameter1: double[];

        d3 = r0[0];

        i0 = lengthof r0;

        i1 = 1;

     label1:
        if i1 >= i0 goto label2;

        $d2 = r0[i1];

        $d1 = d0 * d3;

        d3 = $d2 + $d1;

        i1 = i1 + 1;

        goto label1;

     label2:
        return d3;
    }

    static void <clinit>()
    {
        double[] $r0, $r1, $r2;

        $r0 = newarray (double)[4];

        $r0[0] = 0.041666666666666664;

        $r0[1] = 0.16666666666666666;

        $r0[2] = 0.5;

        $r0[3] = 1.0;

        <com.opengamma.analytics.math.utilities.Epsilon: double[] COEFF1> = $r0;

        $r1 = newarray (double)[5];

        $r1[0] = 0.006944444444444444;

        $r1[1] = 0.03333333333333333;

        $r1[2] = 0.125;

        $r1[3] = 0.3333333333333333;

        $r1[4] = 0.5;

        <com.opengamma.analytics.math.utilities.Epsilon: double[] COEFF2> = $r1;

        $r2 = newarray (double)[5];

        $r2[0] = 0.005952380952380952;

        $r2[1] = 0.027777777777777776;

        $r2[2] = 0.1;

        $r2[3] = 0.25;

        $r2[4] = 0.3333333333333333;

        <com.opengamma.analytics.math.utilities.Epsilon: double[] COEFF3> = $r2;

        return;
    }
}
