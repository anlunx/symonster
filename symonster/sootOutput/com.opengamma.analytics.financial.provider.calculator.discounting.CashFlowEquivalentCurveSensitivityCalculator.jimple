public class com.opengamma.analytics.financial.provider.calculator.discounting.CashFlowEquivalentCurveSensitivityCalculator extends com.opengamma.analytics.financial.interestrate.InstrumentDerivativeVisitorAdapter
{
    private static final com.opengamma.analytics.financial.provider.calculator.discounting.CashFlowEquivalentCurveSensitivityCalculator s_instance;

    public static com.opengamma.analytics.financial.provider.calculator.discounting.CashFlowEquivalentCurveSensitivityCalculator getInstance()
    {
        com.opengamma.analytics.financial.provider.calculator.discounting.CashFlowEquivalentCurveSensitivityCalculator $r0;

        $r0 = <com.opengamma.analytics.financial.provider.calculator.discounting.CashFlowEquivalentCurveSensitivityCalculator: com.opengamma.analytics.financial.provider.calculator.discounting.CashFlowEquivalentCurveSensitivityCalculator s_instance>;

        return $r0;
    }

    void <init>()
    {
        com.opengamma.analytics.financial.provider.calculator.discounting.CashFlowEquivalentCurveSensitivityCalculator r0;

        r0 := @this: com.opengamma.analytics.financial.provider.calculator.discounting.CashFlowEquivalentCurveSensitivityCalculator;

        specialinvoke r0.<com.opengamma.analytics.financial.interestrate.InstrumentDerivativeVisitorAdapter: void <init>()>();

        return;
    }

    public java.util.Map visitFixedPayment(com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed, com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface)
    {
        com.opengamma.analytics.financial.provider.calculator.discounting.CashFlowEquivalentCurveSensitivityCalculator r0;
        com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed r1;
        com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface r2;
        java.util.HashMap $r3;

        r0 := @this: com.opengamma.analytics.financial.provider.calculator.discounting.CashFlowEquivalentCurveSensitivityCalculator;

        r1 := @parameter0: com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed;

        r2 := @parameter1: com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface;

        $r3 = new java.util.HashMap;

        specialinvoke $r3.<java.util.HashMap: void <init>()>();

        return $r3;
    }

    public java.util.Map visitCouponFixed(com.opengamma.analytics.financial.interestrate.payments.derivative.CouponFixed, com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface)
    {
        com.opengamma.analytics.financial.provider.calculator.discounting.CashFlowEquivalentCurveSensitivityCalculator r0;
        com.opengamma.analytics.financial.interestrate.payments.derivative.CouponFixed r1;
        com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface r2;
        java.util.HashMap $r3;

        r0 := @this: com.opengamma.analytics.financial.provider.calculator.discounting.CashFlowEquivalentCurveSensitivityCalculator;

        r1 := @parameter0: com.opengamma.analytics.financial.interestrate.payments.derivative.CouponFixed;

        r2 := @parameter1: com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface;

        $r3 = new java.util.HashMap;

        specialinvoke $r3.<java.util.HashMap: void <init>()>();

        return $r3;
    }

    public java.util.Map visitCouponIbor(com.opengamma.analytics.financial.interestrate.payments.derivative.CouponIbor, com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface)
    {
        com.opengamma.analytics.financial.provider.calculator.discounting.CashFlowEquivalentCurveSensitivityCalculator r0;
        com.opengamma.analytics.financial.interestrate.payments.derivative.CouponIbor r1;
        com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface r2;
        com.opengamma.util.money.Currency r3;
        double d0, d1, d2, d3, d4, d5, d6, d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21, $d22;
        com.opengamma.util.tuple.DoublesPair r9, r10;
        java.lang.Double $r13, $r14, $r27;
        com.opengamma.analytics.financial.instrument.index.IborIndex $r15, $r20;
        java.util.HashMap $r16, $r17, $r23;
        java.util.ArrayList $r18, $r24;
        com.opengamma.analytics.financial.provider.sensitivity.multicurve.SimplyCompoundedForwardSensitivity $r19;
        java.lang.String $r21, $r25;
        com.opengamma.analytics.financial.provider.sensitivity.multicurve.MulticurveSensitivity $r28;

        r0 := @this: com.opengamma.analytics.financial.provider.calculator.discounting.CashFlowEquivalentCurveSensitivityCalculator;

        r1 := @parameter0: com.opengamma.analytics.financial.interestrate.payments.derivative.CouponIbor;

        r2 := @parameter1: com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "Payment");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, "Multicurves provider");

        r3 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.payments.derivative.CouponIbor: com.opengamma.util.money.Currency getCurrency()>();

        d0 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.payments.derivative.CouponIbor: double getFixingPeriodStartTime()>();

        d1 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.payments.derivative.CouponIbor: double getFixingPeriodEndTime()>();

        d2 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.payments.derivative.CouponIbor: double getPaymentTime()>();

        $r13 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d2);

        $d8 = interfaceinvoke r2.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface: double getDiscountFactor(com.opengamma.util.money.Currency,java.lang.Double)>(r3, $r13);

        $r14 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d0);

        $d9 = interfaceinvoke r2.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface: double getDiscountFactor(com.opengamma.util.money.Currency,java.lang.Double)>(r3, $r14);

        d3 = $d8 / $d9;

        d4 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.payments.derivative.CouponIbor: double getFixingAccrualFactor()>();

        $r15 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.payments.derivative.CouponIbor: com.opengamma.analytics.financial.instrument.index.IborIndex getIndex()>();

        $d10 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.payments.derivative.CouponIbor: double getFixingAccrualFactor()>();

        $d11 = interfaceinvoke r2.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface: double getSimplyCompoundForwardRate(com.opengamma.analytics.financial.instrument.index.IborIndex,double,double,double)>($r15, d0, d1, $d10);

        $d12 = d4 * $d11;

        $d13 = 1.0 + $d12;

        d5 = $d13 * d3;

        $d14 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.payments.derivative.CouponIbor: double getNotional()>();

        $d15 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.payments.derivative.CouponIbor: double getPaymentYearFraction()>();

        $d16 = $d14 * $d15;

        d6 = $d16 / d4;

        $d17 = d4 * d3;

        d7 = $d17 * d6;

        $r16 = new java.util.HashMap;

        specialinvoke $r16.<java.util.HashMap: void <init>()>();

        $r17 = new java.util.HashMap;

        specialinvoke $r17.<java.util.HashMap: void <init>()>();

        $r18 = new java.util.ArrayList;

        specialinvoke $r18.<java.util.ArrayList: void <init>()>();

        $r19 = new com.opengamma.analytics.financial.provider.sensitivity.multicurve.SimplyCompoundedForwardSensitivity;

        specialinvoke $r19.<com.opengamma.analytics.financial.provider.sensitivity.multicurve.SimplyCompoundedForwardSensitivity: void <init>(double,double,double,double)>(d0, d1, d4, d7);

        interfaceinvoke $r18.<java.util.List: boolean add(java.lang.Object)>($r19);

        $r20 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.payments.derivative.CouponIbor: com.opengamma.analytics.financial.instrument.index.IborIndex getIndex()>();

        $r21 = interfaceinvoke r2.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface: java.lang.String getName(com.opengamma.analytics.financial.instrument.index.IborIndex)>($r20);

        interfaceinvoke $r17.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r21, $r18);

        $r23 = new java.util.HashMap;

        specialinvoke $r23.<java.util.HashMap: void <init>()>();

        $r24 = new java.util.ArrayList;

        specialinvoke $r24.<java.util.ArrayList: void <init>()>();

        $d18 = d5 * d0;

        $d19 = $d18 * d6;

        r9 = staticinvoke <com.opengamma.util.tuple.DoublesPair: com.opengamma.util.tuple.DoublesPair of(double,double)>(d0, $d19);

        interfaceinvoke $r24.<java.util.List: boolean add(java.lang.Object)>(r9);

        $d20 = neg d2;

        $d21 = $d20 * d5;

        $d22 = $d21 * d6;

        r10 = staticinvoke <com.opengamma.util.tuple.DoublesPair: com.opengamma.util.tuple.DoublesPair of(double,double)>(d2, $d22);

        interfaceinvoke $r24.<java.util.List: boolean add(java.lang.Object)>(r10);

        $r25 = interfaceinvoke r2.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface: java.lang.String getName(com.opengamma.util.money.Currency)>(r3);

        interfaceinvoke $r23.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r25, $r24);

        $r27 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d0);

        $r28 = staticinvoke <com.opengamma.analytics.financial.provider.sensitivity.multicurve.MulticurveSensitivity: com.opengamma.analytics.financial.provider.sensitivity.multicurve.MulticurveSensitivity of(java.util.Map,java.util.Map)>($r23, $r17);

        interfaceinvoke $r16.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r27, $r28);

        return $r16;
    }

    public java.util.Map visitCouponIborSpread(com.opengamma.analytics.financial.interestrate.payments.derivative.CouponIborSpread, com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface)
    {
        com.opengamma.analytics.financial.provider.calculator.discounting.CashFlowEquivalentCurveSensitivityCalculator r0;
        com.opengamma.analytics.financial.interestrate.payments.derivative.CouponIborSpread r1;
        com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface r2;
        com.opengamma.util.money.Currency r3;
        double d0, d1, d2, d3, d4, d5, d6, d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21, $d22;
        com.opengamma.util.tuple.DoublesPair r9, r10;
        java.lang.Double $r13, $r14, $r27;
        com.opengamma.analytics.financial.instrument.index.IborIndex $r15, $r20;
        java.util.HashMap $r16, $r17, $r23;
        java.util.ArrayList $r18, $r24;
        com.opengamma.analytics.financial.provider.sensitivity.multicurve.SimplyCompoundedForwardSensitivity $r19;
        java.lang.String $r21, $r25;
        com.opengamma.analytics.financial.provider.sensitivity.multicurve.MulticurveSensitivity $r28;

        r0 := @this: com.opengamma.analytics.financial.provider.calculator.discounting.CashFlowEquivalentCurveSensitivityCalculator;

        r1 := @parameter0: com.opengamma.analytics.financial.interestrate.payments.derivative.CouponIborSpread;

        r2 := @parameter1: com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "Payment");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, "Multicurves provider");

        r3 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.payments.derivative.CouponIborSpread: com.opengamma.util.money.Currency getCurrency()>();

        d0 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.payments.derivative.CouponIborSpread: double getFixingPeriodStartTime()>();

        d1 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.payments.derivative.CouponIborSpread: double getFixingPeriodEndTime()>();

        d2 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.payments.derivative.CouponIborSpread: double getPaymentTime()>();

        $r13 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d2);

        $d8 = interfaceinvoke r2.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface: double getDiscountFactor(com.opengamma.util.money.Currency,java.lang.Double)>(r3, $r13);

        $r14 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d0);

        $d9 = interfaceinvoke r2.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface: double getDiscountFactor(com.opengamma.util.money.Currency,java.lang.Double)>(r3, $r14);

        d3 = $d8 / $d9;

        d4 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.payments.derivative.CouponIborSpread: double getFixingAccrualFactor()>();

        $r15 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.payments.derivative.CouponIborSpread: com.opengamma.analytics.financial.instrument.index.IborIndex getIndex()>();

        $d10 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.payments.derivative.CouponIborSpread: double getFixingAccrualFactor()>();

        $d11 = interfaceinvoke r2.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface: double getSimplyCompoundForwardRate(com.opengamma.analytics.financial.instrument.index.IborIndex,double,double,double)>($r15, d0, d1, $d10);

        $d12 = d4 * $d11;

        $d13 = 1.0 + $d12;

        d5 = $d13 * d3;

        $d14 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.payments.derivative.CouponIborSpread: double getNotional()>();

        $d15 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.payments.derivative.CouponIborSpread: double getPaymentYearFraction()>();

        $d16 = $d14 * $d15;

        d6 = $d16 / d4;

        $d17 = d4 * d3;

        d7 = $d17 * d6;

        $r16 = new java.util.HashMap;

        specialinvoke $r16.<java.util.HashMap: void <init>()>();

        $r17 = new java.util.HashMap;

        specialinvoke $r17.<java.util.HashMap: void <init>()>();

        $r18 = new java.util.ArrayList;

        specialinvoke $r18.<java.util.ArrayList: void <init>()>();

        $r19 = new com.opengamma.analytics.financial.provider.sensitivity.multicurve.SimplyCompoundedForwardSensitivity;

        specialinvoke $r19.<com.opengamma.analytics.financial.provider.sensitivity.multicurve.SimplyCompoundedForwardSensitivity: void <init>(double,double,double,double)>(d0, d1, d4, d7);

        interfaceinvoke $r18.<java.util.List: boolean add(java.lang.Object)>($r19);

        $r20 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.payments.derivative.CouponIborSpread: com.opengamma.analytics.financial.instrument.index.IborIndex getIndex()>();

        $r21 = interfaceinvoke r2.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface: java.lang.String getName(com.opengamma.analytics.financial.instrument.index.IborIndex)>($r20);

        interfaceinvoke $r17.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r21, $r18);

        $r23 = new java.util.HashMap;

        specialinvoke $r23.<java.util.HashMap: void <init>()>();

        $r24 = new java.util.ArrayList;

        specialinvoke $r24.<java.util.ArrayList: void <init>()>();

        $d18 = d5 * d0;

        $d19 = $d18 * d6;

        r9 = staticinvoke <com.opengamma.util.tuple.DoublesPair: com.opengamma.util.tuple.DoublesPair of(double,double)>(d0, $d19);

        interfaceinvoke $r24.<java.util.List: boolean add(java.lang.Object)>(r9);

        $d20 = neg d2;

        $d21 = $d20 * d5;

        $d22 = $d21 * d6;

        r10 = staticinvoke <com.opengamma.util.tuple.DoublesPair: com.opengamma.util.tuple.DoublesPair of(double,double)>(d2, $d22);

        interfaceinvoke $r24.<java.util.List: boolean add(java.lang.Object)>(r10);

        $r25 = interfaceinvoke r2.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface: java.lang.String getName(com.opengamma.util.money.Currency)>(r3);

        interfaceinvoke $r23.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r25, $r24);

        $r27 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d0);

        $r28 = staticinvoke <com.opengamma.analytics.financial.provider.sensitivity.multicurve.MulticurveSensitivity: com.opengamma.analytics.financial.provider.sensitivity.multicurve.MulticurveSensitivity of(java.util.Map,java.util.Map)>($r23, $r17);

        interfaceinvoke $r16.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r27, $r28);

        return $r16;
    }

    public java.util.Map visitGenericAnnuity(com.opengamma.analytics.financial.interestrate.annuity.derivative.Annuity, com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface)
    {
        com.opengamma.analytics.financial.provider.calculator.discounting.CashFlowEquivalentCurveSensitivityCalculator r0;
        com.opengamma.analytics.financial.interestrate.annuity.derivative.Annuity r1;
        com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface r2;
        com.opengamma.analytics.financial.interestrate.payments.derivative.Payment[] r4;
        int i0, i1;
        com.opengamma.analytics.financial.interestrate.payments.derivative.Payment r5;
        java.util.Map r6;
        java.util.HashMap $r9;
        java.lang.Object $r10;

        r0 := @this: com.opengamma.analytics.financial.provider.calculator.discounting.CashFlowEquivalentCurveSensitivityCalculator;

        r1 := @parameter0: com.opengamma.analytics.financial.interestrate.annuity.derivative.Annuity;

        r2 := @parameter1: com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "Annuity");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, "Multicurves provider");

        $r9 = new java.util.HashMap;

        specialinvoke $r9.<java.util.HashMap: void <init>()>();

        r4 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.annuity.derivative.Annuity: com.opengamma.analytics.financial.interestrate.payments.derivative.Payment[] getPayments()>();

        i0 = lengthof r4;

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        r5 = r4[i1];

        $r10 = virtualinvoke r5.<com.opengamma.analytics.financial.interestrate.payments.derivative.Payment: java.lang.Object accept(com.opengamma.analytics.financial.interestrate.InstrumentDerivativeVisitor,java.lang.Object)>(r0, r2);

        r6 = (java.util.Map) $r10;

        interfaceinvoke $r9.<java.util.Map: void putAll(java.util.Map)>(r6);

        i1 = i1 + 1;

        goto label1;

     label2:
        return $r9;
    }

    public java.util.Map visitFixedCouponAnnuity(com.opengamma.analytics.financial.interestrate.annuity.derivative.AnnuityCouponFixed, com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface)
    {
        com.opengamma.analytics.financial.provider.calculator.discounting.CashFlowEquivalentCurveSensitivityCalculator r0;
        com.opengamma.analytics.financial.interestrate.annuity.derivative.AnnuityCouponFixed r1;
        com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface r2;
        java.util.Map $r3;

        r0 := @this: com.opengamma.analytics.financial.provider.calculator.discounting.CashFlowEquivalentCurveSensitivityCalculator;

        r1 := @parameter0: com.opengamma.analytics.financial.interestrate.annuity.derivative.AnnuityCouponFixed;

        r2 := @parameter1: com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface;

        $r3 = virtualinvoke r0.<com.opengamma.analytics.financial.provider.calculator.discounting.CashFlowEquivalentCurveSensitivityCalculator: java.util.Map visitGenericAnnuity(com.opengamma.analytics.financial.interestrate.annuity.derivative.Annuity,com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface)>(r1, r2);

        return $r3;
    }

    public java.util.Map visitSwap(com.opengamma.analytics.financial.interestrate.swap.derivative.Swap, com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface)
    {
        com.opengamma.analytics.financial.provider.calculator.discounting.CashFlowEquivalentCurveSensitivityCalculator r0;
        com.opengamma.analytics.financial.interestrate.swap.derivative.Swap r1;
        com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface r2;
        java.util.Map r4, r5;
        java.util.HashMap $r8;
        com.opengamma.analytics.financial.interestrate.annuity.derivative.Annuity $r9, $r11;
        java.lang.Object $r10, $r12;

        r0 := @this: com.opengamma.analytics.financial.provider.calculator.discounting.CashFlowEquivalentCurveSensitivityCalculator;

        r1 := @parameter0: com.opengamma.analytics.financial.interestrate.swap.derivative.Swap;

        r2 := @parameter1: com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "Swap");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, "Multicurves provider");

        $r8 = new java.util.HashMap;

        specialinvoke $r8.<java.util.HashMap: void <init>()>();

        $r9 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.swap.derivative.Swap: com.opengamma.analytics.financial.interestrate.annuity.derivative.Annuity getFirstLeg()>();

        $r10 = virtualinvoke $r9.<com.opengamma.analytics.financial.interestrate.annuity.derivative.Annuity: java.lang.Object accept(com.opengamma.analytics.financial.interestrate.InstrumentDerivativeVisitor,java.lang.Object)>(r0, r2);

        r4 = (java.util.Map) $r10;

        interfaceinvoke $r8.<java.util.Map: void putAll(java.util.Map)>(r4);

        $r11 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.swap.derivative.Swap: com.opengamma.analytics.financial.interestrate.annuity.derivative.Annuity getSecondLeg()>();

        $r12 = virtualinvoke $r11.<com.opengamma.analytics.financial.interestrate.annuity.derivative.Annuity: java.lang.Object accept(com.opengamma.analytics.financial.interestrate.InstrumentDerivativeVisitor,java.lang.Object)>(r0, r2);

        r5 = (java.util.Map) $r12;

        interfaceinvoke $r8.<java.util.Map: void putAll(java.util.Map)>(r5);

        return $r8;
    }

    public java.util.Map visitFixedCouponSwap(com.opengamma.analytics.financial.interestrate.swap.derivative.SwapFixedCoupon, com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface)
    {
        com.opengamma.analytics.financial.provider.calculator.discounting.CashFlowEquivalentCurveSensitivityCalculator r0;
        com.opengamma.analytics.financial.interestrate.swap.derivative.SwapFixedCoupon r1;
        com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface r2;
        java.util.Map $r3;

        r0 := @this: com.opengamma.analytics.financial.provider.calculator.discounting.CashFlowEquivalentCurveSensitivityCalculator;

        r1 := @parameter0: com.opengamma.analytics.financial.interestrate.swap.derivative.SwapFixedCoupon;

        r2 := @parameter1: com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface;

        $r3 = virtualinvoke r0.<com.opengamma.analytics.financial.provider.calculator.discounting.CashFlowEquivalentCurveSensitivityCalculator: java.util.Map visitSwap(com.opengamma.analytics.financial.interestrate.swap.derivative.Swap,com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface)>(r1, r2);

        return $r3;
    }

    public volatile java.lang.Object visitSwap(com.opengamma.analytics.financial.interestrate.swap.derivative.Swap, java.lang.Object)
    {
        com.opengamma.analytics.financial.provider.calculator.discounting.CashFlowEquivalentCurveSensitivityCalculator r0;
        com.opengamma.analytics.financial.interestrate.swap.derivative.Swap r1;
        java.lang.Object r2;
        com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface $r3;
        java.util.Map $r4;

        r0 := @this: com.opengamma.analytics.financial.provider.calculator.discounting.CashFlowEquivalentCurveSensitivityCalculator;

        r1 := @parameter0: com.opengamma.analytics.financial.interestrate.swap.derivative.Swap;

        r2 := @parameter1: java.lang.Object;

        $r3 = (com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface) r2;

        $r4 = virtualinvoke r0.<com.opengamma.analytics.financial.provider.calculator.discounting.CashFlowEquivalentCurveSensitivityCalculator: java.util.Map visitSwap(com.opengamma.analytics.financial.interestrate.swap.derivative.Swap,com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface)>(r1, $r3);

        return $r4;
    }

    public volatile java.lang.Object visitCouponIborSpread(com.opengamma.analytics.financial.interestrate.payments.derivative.CouponIborSpread, java.lang.Object)
    {
        com.opengamma.analytics.financial.provider.calculator.discounting.CashFlowEquivalentCurveSensitivityCalculator r0;
        com.opengamma.analytics.financial.interestrate.payments.derivative.CouponIborSpread r1;
        java.lang.Object r2;
        com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface $r3;
        java.util.Map $r4;

        r0 := @this: com.opengamma.analytics.financial.provider.calculator.discounting.CashFlowEquivalentCurveSensitivityCalculator;

        r1 := @parameter0: com.opengamma.analytics.financial.interestrate.payments.derivative.CouponIborSpread;

        r2 := @parameter1: java.lang.Object;

        $r3 = (com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface) r2;

        $r4 = virtualinvoke r0.<com.opengamma.analytics.financial.provider.calculator.discounting.CashFlowEquivalentCurveSensitivityCalculator: java.util.Map visitCouponIborSpread(com.opengamma.analytics.financial.interestrate.payments.derivative.CouponIborSpread,com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface)>(r1, $r3);

        return $r4;
    }

    public volatile java.lang.Object visitCouponIbor(com.opengamma.analytics.financial.interestrate.payments.derivative.CouponIbor, java.lang.Object)
    {
        com.opengamma.analytics.financial.provider.calculator.discounting.CashFlowEquivalentCurveSensitivityCalculator r0;
        com.opengamma.analytics.financial.interestrate.payments.derivative.CouponIbor r1;
        java.lang.Object r2;
        com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface $r3;
        java.util.Map $r4;

        r0 := @this: com.opengamma.analytics.financial.provider.calculator.discounting.CashFlowEquivalentCurveSensitivityCalculator;

        r1 := @parameter0: com.opengamma.analytics.financial.interestrate.payments.derivative.CouponIbor;

        r2 := @parameter1: java.lang.Object;

        $r3 = (com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface) r2;

        $r4 = virtualinvoke r0.<com.opengamma.analytics.financial.provider.calculator.discounting.CashFlowEquivalentCurveSensitivityCalculator: java.util.Map visitCouponIbor(com.opengamma.analytics.financial.interestrate.payments.derivative.CouponIbor,com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface)>(r1, $r3);

        return $r4;
    }

    public volatile java.lang.Object visitCouponFixed(com.opengamma.analytics.financial.interestrate.payments.derivative.CouponFixed, java.lang.Object)
    {
        com.opengamma.analytics.financial.provider.calculator.discounting.CashFlowEquivalentCurveSensitivityCalculator r0;
        com.opengamma.analytics.financial.interestrate.payments.derivative.CouponFixed r1;
        java.lang.Object r2;
        com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface $r3;
        java.util.Map $r4;

        r0 := @this: com.opengamma.analytics.financial.provider.calculator.discounting.CashFlowEquivalentCurveSensitivityCalculator;

        r1 := @parameter0: com.opengamma.analytics.financial.interestrate.payments.derivative.CouponFixed;

        r2 := @parameter1: java.lang.Object;

        $r3 = (com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface) r2;

        $r4 = virtualinvoke r0.<com.opengamma.analytics.financial.provider.calculator.discounting.CashFlowEquivalentCurveSensitivityCalculator: java.util.Map visitCouponFixed(com.opengamma.analytics.financial.interestrate.payments.derivative.CouponFixed,com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface)>(r1, $r3);

        return $r4;
    }

    public volatile java.lang.Object visitFixedPayment(com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed, java.lang.Object)
    {
        com.opengamma.analytics.financial.provider.calculator.discounting.CashFlowEquivalentCurveSensitivityCalculator r0;
        com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed r1;
        java.lang.Object r2;
        com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface $r3;
        java.util.Map $r4;

        r0 := @this: com.opengamma.analytics.financial.provider.calculator.discounting.CashFlowEquivalentCurveSensitivityCalculator;

        r1 := @parameter0: com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed;

        r2 := @parameter1: java.lang.Object;

        $r3 = (com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface) r2;

        $r4 = virtualinvoke r0.<com.opengamma.analytics.financial.provider.calculator.discounting.CashFlowEquivalentCurveSensitivityCalculator: java.util.Map visitFixedPayment(com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed,com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface)>(r1, $r3);

        return $r4;
    }

    public volatile java.lang.Object visitFixedCouponSwap(com.opengamma.analytics.financial.interestrate.swap.derivative.SwapFixedCoupon, java.lang.Object)
    {
        com.opengamma.analytics.financial.provider.calculator.discounting.CashFlowEquivalentCurveSensitivityCalculator r0;
        com.opengamma.analytics.financial.interestrate.swap.derivative.SwapFixedCoupon r1;
        java.lang.Object r2;
        com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface $r3;
        java.util.Map $r4;

        r0 := @this: com.opengamma.analytics.financial.provider.calculator.discounting.CashFlowEquivalentCurveSensitivityCalculator;

        r1 := @parameter0: com.opengamma.analytics.financial.interestrate.swap.derivative.SwapFixedCoupon;

        r2 := @parameter1: java.lang.Object;

        $r3 = (com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface) r2;

        $r4 = virtualinvoke r0.<com.opengamma.analytics.financial.provider.calculator.discounting.CashFlowEquivalentCurveSensitivityCalculator: java.util.Map visitFixedCouponSwap(com.opengamma.analytics.financial.interestrate.swap.derivative.SwapFixedCoupon,com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface)>(r1, $r3);

        return $r4;
    }

    public volatile java.lang.Object visitGenericAnnuity(com.opengamma.analytics.financial.interestrate.annuity.derivative.Annuity, java.lang.Object)
    {
        com.opengamma.analytics.financial.provider.calculator.discounting.CashFlowEquivalentCurveSensitivityCalculator r0;
        com.opengamma.analytics.financial.interestrate.annuity.derivative.Annuity r1;
        java.lang.Object r2;
        com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface $r3;
        java.util.Map $r4;

        r0 := @this: com.opengamma.analytics.financial.provider.calculator.discounting.CashFlowEquivalentCurveSensitivityCalculator;

        r1 := @parameter0: com.opengamma.analytics.financial.interestrate.annuity.derivative.Annuity;

        r2 := @parameter1: java.lang.Object;

        $r3 = (com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface) r2;

        $r4 = virtualinvoke r0.<com.opengamma.analytics.financial.provider.calculator.discounting.CashFlowEquivalentCurveSensitivityCalculator: java.util.Map visitGenericAnnuity(com.opengamma.analytics.financial.interestrate.annuity.derivative.Annuity,com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface)>(r1, $r3);

        return $r4;
    }

    public volatile java.lang.Object visitFixedCouponAnnuity(com.opengamma.analytics.financial.interestrate.annuity.derivative.AnnuityCouponFixed, java.lang.Object)
    {
        com.opengamma.analytics.financial.provider.calculator.discounting.CashFlowEquivalentCurveSensitivityCalculator r0;
        com.opengamma.analytics.financial.interestrate.annuity.derivative.AnnuityCouponFixed r1;
        java.lang.Object r2;
        com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface $r3;
        java.util.Map $r4;

        r0 := @this: com.opengamma.analytics.financial.provider.calculator.discounting.CashFlowEquivalentCurveSensitivityCalculator;

        r1 := @parameter0: com.opengamma.analytics.financial.interestrate.annuity.derivative.AnnuityCouponFixed;

        r2 := @parameter1: java.lang.Object;

        $r3 = (com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface) r2;

        $r4 = virtualinvoke r0.<com.opengamma.analytics.financial.provider.calculator.discounting.CashFlowEquivalentCurveSensitivityCalculator: java.util.Map visitFixedCouponAnnuity(com.opengamma.analytics.financial.interestrate.annuity.derivative.AnnuityCouponFixed,com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface)>(r1, $r3);

        return $r4;
    }

    static void <clinit>()
    {
        com.opengamma.analytics.financial.provider.calculator.discounting.CashFlowEquivalentCurveSensitivityCalculator $r0;

        $r0 = new com.opengamma.analytics.financial.provider.calculator.discounting.CashFlowEquivalentCurveSensitivityCalculator;

        specialinvoke $r0.<com.opengamma.analytics.financial.provider.calculator.discounting.CashFlowEquivalentCurveSensitivityCalculator: void <init>()>();

        <com.opengamma.analytics.financial.provider.calculator.discounting.CashFlowEquivalentCurveSensitivityCalculator: com.opengamma.analytics.financial.provider.calculator.discounting.CashFlowEquivalentCurveSensitivityCalculator s_instance> = $r0;

        return;
    }
}
