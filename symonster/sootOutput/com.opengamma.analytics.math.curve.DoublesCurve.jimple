public abstract class com.opengamma.analytics.math.curve.DoublesCurve extends com.opengamma.analytics.math.curve.Curve
{

    protected void <init>()
    {
        com.opengamma.analytics.math.curve.DoublesCurve r0;

        r0 := @this: com.opengamma.analytics.math.curve.DoublesCurve;

        specialinvoke r0.<com.opengamma.analytics.math.curve.Curve: void <init>()>();

        return;
    }

    protected void <init>(java.lang.String)
    {
        com.opengamma.analytics.math.curve.DoublesCurve r0;
        java.lang.String r1;

        r0 := @this: com.opengamma.analytics.math.curve.DoublesCurve;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<com.opengamma.analytics.math.curve.Curve: void <init>(java.lang.String)>(r1);

        return;
    }

    public abstract java.lang.Double[] getYValueParameterSensitivity(java.lang.Double);

    public abstract double getDyDx(double);

    public static com.opengamma.analytics.math.curve.DoublesCurve$Meta meta()
    {
        com.opengamma.analytics.math.curve.DoublesCurve$Meta $r0;

        $r0 = <com.opengamma.analytics.math.curve.DoublesCurve$Meta: com.opengamma.analytics.math.curve.DoublesCurve$Meta INSTANCE>;

        return $r0;
    }

    public com.opengamma.analytics.math.curve.DoublesCurve$Meta metaBean()
    {
        com.opengamma.analytics.math.curve.DoublesCurve r0;
        com.opengamma.analytics.math.curve.DoublesCurve$Meta $r1;

        r0 := @this: com.opengamma.analytics.math.curve.DoublesCurve;

        $r1 = <com.opengamma.analytics.math.curve.DoublesCurve$Meta: com.opengamma.analytics.math.curve.DoublesCurve$Meta INSTANCE>;

        return $r1;
    }

    public boolean equals(java.lang.Object)
    {
        com.opengamma.analytics.math.curve.DoublesCurve r0;
        java.lang.Object r1;
        java.lang.Class $r2, $r3;
        boolean $z0;

        r0 := @this: com.opengamma.analytics.math.curve.DoublesCurve;

        r1 := @parameter0: java.lang.Object;

        if r1 != r0 goto label1;

        return 1;

     label1:
        if r1 == null goto label2;

        $r2 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        if $r2 != $r3 goto label2;

        $z0 = specialinvoke r0.<com.opengamma.analytics.math.curve.Curve: boolean equals(java.lang.Object)>(r1);

        return $z0;

     label2:
        return 0;
    }

    public int hashCode()
    {
        com.opengamma.analytics.math.curve.DoublesCurve r0;
        int $i1, $i2;

        r0 := @this: com.opengamma.analytics.math.curve.DoublesCurve;

        $i1 = specialinvoke r0.<com.opengamma.analytics.math.curve.Curve: int hashCode()>();

        $i2 = 7 ^ $i1;

        return $i2;
    }

    public java.lang.String toString()
    {
        com.opengamma.analytics.math.curve.DoublesCurve r0;
        int i0, $i1, $i2, $i3;
        java.lang.StringBuilder $r2;
        java.lang.String $r5;

        r0 := @this: com.opengamma.analytics.math.curve.DoublesCurve;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(int)>(32);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("DoublesCurve{");

        i0 = virtualinvoke $r2.<java.lang.StringBuilder: int length()>();

        virtualinvoke r0.<com.opengamma.analytics.math.curve.DoublesCurve: void toString(java.lang.StringBuilder)>($r2);

        $i1 = virtualinvoke $r2.<java.lang.StringBuilder: int length()>();

        if $i1 <= i0 goto label1;

        $i2 = virtualinvoke $r2.<java.lang.StringBuilder: int length()>();

        $i3 = $i2 - 2;

        virtualinvoke $r2.<java.lang.StringBuilder: void setLength(int)>($i3);

     label1:
        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(125);

        $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r5;
    }

    protected void toString(java.lang.StringBuilder)
    {
        com.opengamma.analytics.math.curve.DoublesCurve r0;
        java.lang.StringBuilder r1;

        r0 := @this: com.opengamma.analytics.math.curve.DoublesCurve;

        r1 := @parameter0: java.lang.StringBuilder;

        specialinvoke r0.<com.opengamma.analytics.math.curve.Curve: void toString(java.lang.StringBuilder)>(r1);

        return;
    }

    public volatile com.opengamma.analytics.math.curve.Curve$Meta metaBean()
    {
        com.opengamma.analytics.math.curve.DoublesCurve r0;
        com.opengamma.analytics.math.curve.DoublesCurve$Meta $r1;

        r0 := @this: com.opengamma.analytics.math.curve.DoublesCurve;

        $r1 = virtualinvoke r0.<com.opengamma.analytics.math.curve.DoublesCurve: com.opengamma.analytics.math.curve.DoublesCurve$Meta metaBean()>();

        return $r1;
    }

    public volatile org.joda.beans.MetaBean metaBean()
    {
        com.opengamma.analytics.math.curve.DoublesCurve r0;
        com.opengamma.analytics.math.curve.DoublesCurve$Meta $r1;
        org.joda.beans.MetaBean r2;

        r0 := @this: com.opengamma.analytics.math.curve.DoublesCurve;

        $r1 = virtualinvoke r0.<com.opengamma.analytics.math.curve.DoublesCurve: com.opengamma.analytics.math.curve.DoublesCurve$Meta metaBean()>();

        r2 = (org.joda.beans.MetaBean) $r1;

        return r2;
    }

    static void <clinit>()
    {
        com.opengamma.analytics.math.curve.DoublesCurve$Meta $r0;
        org.joda.beans.MetaBean r1;

        $r0 = <com.opengamma.analytics.math.curve.DoublesCurve$Meta: com.opengamma.analytics.math.curve.DoublesCurve$Meta INSTANCE>;

        r1 = (org.joda.beans.MetaBean) $r0;

        staticinvoke <org.joda.beans.JodaBeanUtils: void registerMetaBean(org.joda.beans.MetaBean)>(r1);

        return;
    }
}
