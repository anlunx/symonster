class com.opengamma.analytics.financial.model.volatility.surface.SurfaceConverter$10 extends com.opengamma.analytics.math.function.Function1D
{
    final com.opengamma.analytics.math.surface.Surface val$deltaSurface;
    final double val$t;
    final double val$x;
    final double val$rootT;
    final com.opengamma.analytics.financial.model.volatility.surface.SurfaceConverter this$0;

    void <init>(com.opengamma.analytics.financial.model.volatility.surface.SurfaceConverter, com.opengamma.analytics.math.surface.Surface, double, double, double)
    {
        com.opengamma.analytics.financial.model.volatility.surface.SurfaceConverter$10 r0;
        com.opengamma.analytics.financial.model.volatility.surface.SurfaceConverter r1;
        com.opengamma.analytics.math.surface.Surface r2;
        double d0, d1, d2;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.surface.SurfaceConverter$10;

        r1 := @parameter0: com.opengamma.analytics.financial.model.volatility.surface.SurfaceConverter;

        r2 := @parameter1: com.opengamma.analytics.math.surface.Surface;

        d0 := @parameter2: double;

        d1 := @parameter3: double;

        d2 := @parameter4: double;

        r0.<com.opengamma.analytics.financial.model.volatility.surface.SurfaceConverter$10: com.opengamma.analytics.financial.model.volatility.surface.SurfaceConverter this$0> = r1;

        r0.<com.opengamma.analytics.financial.model.volatility.surface.SurfaceConverter$10: com.opengamma.analytics.math.surface.Surface val$deltaSurface> = r2;

        r0.<com.opengamma.analytics.financial.model.volatility.surface.SurfaceConverter$10: double val$t> = d0;

        r0.<com.opengamma.analytics.financial.model.volatility.surface.SurfaceConverter$10: double val$x> = d1;

        r0.<com.opengamma.analytics.financial.model.volatility.surface.SurfaceConverter$10: double val$rootT> = d2;

        specialinvoke r0.<com.opengamma.analytics.math.function.Function1D: void <init>()>();

        return;
    }

    public java.lang.Double evaluate(java.lang.Double)
    {
        com.opengamma.analytics.financial.model.volatility.surface.SurfaceConverter$10 r0;
        java.lang.Double r1, $r3, $r5, $r6, $r8, $r9, $r11;
        double d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, d18;
        com.opengamma.analytics.math.statistics.distribution.ProbabilityDistribution $r2;
        byte $b0, $b1;
        com.opengamma.analytics.math.surface.Surface $r4;
        java.lang.Object $r7;
        com.opengamma.analytics.math.MathException $r10;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.surface.SurfaceConverter$10;

        r1 := @parameter0: java.lang.Double;

        $r2 = staticinvoke <com.opengamma.analytics.financial.model.volatility.surface.SurfaceConverter: com.opengamma.analytics.math.statistics.distribution.ProbabilityDistribution access$000()>();

        d0 = interfaceinvoke $r2.<com.opengamma.analytics.math.statistics.distribution.ProbabilityDistribution: double getCDF(java.lang.Object)>(r1);

        $b0 = d0 cmpl 1.0;

        if $b0 == 0 goto label1;

        $b1 = d0 cmpl 0.0;

        if $b1 != 0 goto label2;

     label1:
        $d1 = virtualinvoke r1.<java.lang.Double: double doubleValue()>();

        $d2 = neg $d1;

        $r3 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d2);

        return $r3;

     label2:
        $r4 = r0.<com.opengamma.analytics.financial.model.volatility.surface.SurfaceConverter$10: com.opengamma.analytics.math.surface.Surface val$deltaSurface>;

        $d3 = r0.<com.opengamma.analytics.financial.model.volatility.surface.SurfaceConverter$10: double val$t>;

        $r5 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d3);

        $r6 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d0);

        $r7 = virtualinvoke $r4.<com.opengamma.analytics.math.surface.Surface: java.lang.Object getZValue(java.lang.Object,java.lang.Object)>($r5, $r6);

        $r8 = (java.lang.Double) $r7;

        d18 = virtualinvoke $r8.<java.lang.Double: double doubleValue()>();

        $d4 = r0.<com.opengamma.analytics.financial.model.volatility.surface.SurfaceConverter$10: double val$x>;

        $d9 = neg $d4;

        $d6 = d18 * d18;

        $d5 = r0.<com.opengamma.analytics.financial.model.volatility.surface.SurfaceConverter$10: double val$t>;

        $d7 = $d6 * $d5;

        $d8 = $d7 / 2.0;

        $d10 = $d9 + $d8;

        $d12 = $d10 / d18;

        $d11 = r0.<com.opengamma.analytics.financial.model.volatility.surface.SurfaceConverter$10: double val$rootT>;

        $d13 = $d12 / $d11;

        $d14 = virtualinvoke r1.<java.lang.Double: double doubleValue()>();

        $d15 = $d13 - $d14;

        $r9 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d15);

     label3:
        return $r9;

     label4:
        $r10 := @caughtexception;

        $d16 = virtualinvoke r1.<java.lang.Double: double doubleValue()>();

        $d17 = neg $d16;

        $r11 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d17);

        return $r11;

        catch com.opengamma.analytics.math.MathException from label2 to label3 with label4;
    }

    public volatile java.lang.Object evaluate(java.lang.Object)
    {
        com.opengamma.analytics.financial.model.volatility.surface.SurfaceConverter$10 r0;
        java.lang.Object r1;
        java.lang.Double $r2, $r3;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.surface.SurfaceConverter$10;

        r1 := @parameter0: java.lang.Object;

        $r2 = (java.lang.Double) r1;

        $r3 = virtualinvoke r0.<com.opengamma.analytics.financial.model.volatility.surface.SurfaceConverter$10: java.lang.Double evaluate(java.lang.Double)>($r2);

        return $r3;
    }
}
