public abstract class com.opengamma.analytics.math.interpolation.Interpolator1D extends java.lang.Object implements com.opengamma.analytics.math.interpolation.Interpolator, java.io.Serializable
{
    private static final long serialVersionUID;
    private static final double EPS;

    public void <init>()
    {
        com.opengamma.analytics.math.interpolation.Interpolator1D r0;

        r0 := @this: com.opengamma.analytics.math.interpolation.Interpolator1D;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public abstract java.lang.Double interpolate(com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle, java.lang.Double);

    public double firstDerivative(com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle, java.lang.Double)
    {
        com.opengamma.analytics.math.interpolation.Interpolator1D r0;
        com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle r1;
        java.lang.Double r2, $r7, $r8, $r13;
        double d0, $d1, $d2, $d3, $d4;
        com.opengamma.analytics.math.function.Function1D r5, r6;
        com.opengamma.analytics.math.interpolation.Interpolator1D$1 $r9;
        com.opengamma.analytics.math.differentiation.ScalarFirstOrderDifferentiator $r10;
        com.opengamma.analytics.math.differentiation.FiniteDifferenceType $r11;
        java.lang.Object $r12;

        r0 := @this: com.opengamma.analytics.math.interpolation.Interpolator1D;

        r1 := @parameter0: com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle;

        r2 := @parameter1: java.lang.Double;

        $r7 = interfaceinvoke r1.<com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle: java.lang.Double lastKey()>();

        $d1 = virtualinvoke $r7.<java.lang.Double: double doubleValue()>();

        $r8 = interfaceinvoke r1.<com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle: java.lang.Double firstKey()>();

        $d2 = virtualinvoke $r8.<java.lang.Double: double doubleValue()>();

        d0 = $d1 - $d2;

        $r9 = new com.opengamma.analytics.math.interpolation.Interpolator1D$1;

        specialinvoke $r9.<com.opengamma.analytics.math.interpolation.Interpolator1D$1: void <init>(com.opengamma.analytics.math.interpolation.Interpolator1D,com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle)>(r0, r1);

        $r10 = new com.opengamma.analytics.math.differentiation.ScalarFirstOrderDifferentiator;

        $r11 = <com.opengamma.analytics.math.differentiation.FiniteDifferenceType: com.opengamma.analytics.math.differentiation.FiniteDifferenceType CENTRAL>;

        $d3 = d0 * 1.0E-6;

        specialinvoke $r10.<com.opengamma.analytics.math.differentiation.ScalarFirstOrderDifferentiator: void <init>(com.opengamma.analytics.math.differentiation.FiniteDifferenceType,double)>($r11, $d3);

        r5 = virtualinvoke r0.<com.opengamma.analytics.math.interpolation.Interpolator1D: com.opengamma.analytics.math.function.Function1D getFunction(com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle)>(r1);

        r6 = virtualinvoke $r10.<com.opengamma.analytics.math.differentiation.ScalarFirstOrderDifferentiator: com.opengamma.analytics.math.function.Function1D differentiate(com.opengamma.analytics.math.function.Function1D,com.opengamma.analytics.math.function.Function1D)>(r5, $r9);

        $r12 = virtualinvoke r6.<com.opengamma.analytics.math.function.Function1D: java.lang.Object evaluate(java.lang.Object)>(r2);

        $r13 = (java.lang.Double) $r12;

        $d4 = virtualinvoke $r13.<java.lang.Double: double doubleValue()>();

        return $d4;
    }

    public com.opengamma.analytics.math.function.Function1D getFunction(com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle)
    {
        com.opengamma.analytics.math.interpolation.Interpolator1D r0;
        com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle r1;
        com.opengamma.analytics.math.interpolation.Interpolator1D$2 $r2;

        r0 := @this: com.opengamma.analytics.math.interpolation.Interpolator1D;

        r1 := @parameter0: com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle;

        $r2 = new com.opengamma.analytics.math.interpolation.Interpolator1D$2;

        specialinvoke $r2.<com.opengamma.analytics.math.interpolation.Interpolator1D$2: void <init>(com.opengamma.analytics.math.interpolation.Interpolator1D,com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle)>(r0, r1);

        return $r2;
    }

    public com.opengamma.analytics.math.function.Function1D getGradientFunction(com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle)
    {
        com.opengamma.analytics.math.interpolation.Interpolator1D r0;
        com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle r1;
        com.opengamma.analytics.math.interpolation.Interpolator1D$3 $r2;

        r0 := @this: com.opengamma.analytics.math.interpolation.Interpolator1D;

        r1 := @parameter0: com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle;

        $r2 = new com.opengamma.analytics.math.interpolation.Interpolator1D$3;

        specialinvoke $r2.<com.opengamma.analytics.math.interpolation.Interpolator1D$3: void <init>(com.opengamma.analytics.math.interpolation.Interpolator1D,com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle)>(r0, r1);

        return $r2;
    }

    public double[] getNodeSensitivitiesForValue(com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle, java.lang.Double, boolean)
    {
        com.opengamma.analytics.math.interpolation.Interpolator1D r0;
        com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle r1;
        java.lang.Double r2;
        boolean z0;
        double[] $r3;

        r0 := @this: com.opengamma.analytics.math.interpolation.Interpolator1D;

        r1 := @parameter0: com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle;

        r2 := @parameter1: java.lang.Double;

        z0 := @parameter2: boolean;

        if z0 == 0 goto label1;

        $r3 = virtualinvoke r0.<com.opengamma.analytics.math.interpolation.Interpolator1D: double[] getFiniteDifferenceSensitivities(com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle,java.lang.Double)>(r1, r2);

        goto label2;

     label1:
        $r3 = virtualinvoke r0.<com.opengamma.analytics.math.interpolation.Interpolator1D: double[] getNodeSensitivitiesForValue(com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle,java.lang.Double)>(r1, r2);

     label2:
        return $r3;
    }

    public abstract double[] getNodeSensitivitiesForValue(com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle, java.lang.Double);

    protected double[] getFiniteDifferenceSensitivities(com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle, java.lang.Double)
    {
        com.opengamma.analytics.math.interpolation.Interpolator1D r0;
        com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle r1, r6, r7;
        java.lang.Double r2, $r8, $r9;
        double[] r3, r4, r5;
        int i0, $i1, $i2, $i3, $i4, i5;
        double d0, d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10;

        r0 := @this: com.opengamma.analytics.math.interpolation.Interpolator1D;

        r1 := @parameter0: com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle;

        r2 := @parameter1: java.lang.Double;

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object,java.lang.String)>(r1, "data");

        r3 = interfaceinvoke r1.<com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle: double[] getKeys()>();

        r4 = interfaceinvoke r1.<com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle: double[] getValues()>();

        i0 = lengthof r3;

        r5 = newarray (double)[i0];

        r6 = virtualinvoke r0.<com.opengamma.analytics.math.interpolation.Interpolator1D: com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle getDataBundleFromSortedArrays(double[],double[])>(r3, r4);

        r7 = virtualinvoke r0.<com.opengamma.analytics.math.interpolation.Interpolator1D: com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle getDataBundleFromSortedArrays(double[],double[])>(r3, r4);

        i5 = 0;

     label1:
        if i5 >= i0 goto label3;

        if i5 == 0 goto label2;

        $i2 = i5 - 1;

        $i1 = i5 - 1;

        $d9 = r4[$i1];

        interfaceinvoke r6.<com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle: void setYValueAtIndex(int,double)>($i2, $d9);

        $i4 = i5 - 1;

        $i3 = i5 - 1;

        $d10 = r4[$i3];

        interfaceinvoke r7.<com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle: void setYValueAtIndex(int,double)>($i4, $d10);

     label2:
        $d2 = r4[i5];

        $d3 = $d2 + 1.0E-6;

        interfaceinvoke r6.<com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle: void setYValueAtIndex(int,double)>(i5, $d3);

        $d4 = r4[i5];

        $d5 = $d4 - 1.0E-6;

        interfaceinvoke r7.<com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle: void setYValueAtIndex(int,double)>(i5, $d5);

        $r8 = virtualinvoke r0.<com.opengamma.analytics.math.interpolation.Interpolator1D: java.lang.Double interpolate(com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle,java.lang.Double)>(r6, r2);

        d0 = virtualinvoke $r8.<java.lang.Double: double doubleValue()>();

        $r9 = virtualinvoke r0.<com.opengamma.analytics.math.interpolation.Interpolator1D: java.lang.Double interpolate(com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle,java.lang.Double)>(r7, r2);

        d1 = virtualinvoke $r9.<java.lang.Double: double doubleValue()>();

        $d6 = d0 - d1;

        $d7 = $d6 / 2.0;

        $d8 = $d7 / 1.0E-6;

        r5[i5] = $d8;

        i5 = i5 + 1;

        goto label1;

     label3:
        return r5;
    }

    public abstract com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle getDataBundle(double[], double[]);

    public abstract com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle getDataBundleFromSortedArrays(double[], double[]);

    public com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle getDataBundle(java.util.Map)
    {
        com.opengamma.analytics.math.interpolation.Interpolator1D r0;
        java.util.Map r1;
        java.util.Iterator r2;
        java.util.Map$Entry r3;
        boolean $z0, $z1;
        int $i0, $i1, i2;
        java.util.Set $r4, $r11;
        com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle $r5, $r19;
        java.lang.Object $r6, $r7, $r9;
        java.lang.Double $r8, $r10;
        double $d0, $d1;
        java.lang.Double[] $r12, $r14, $r16, $r18;
        java.lang.Object[] $r13, $r17;
        java.util.Collection $r15;
        double[] r20, r21, r22, r23;

        r0 := @this: com.opengamma.analytics.math.interpolation.Interpolator1D;

        r1 := @parameter0: java.util.Map;

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object,java.lang.String)>(r1, "Backing data for interpolation must not be null.");

        staticinvoke <org.apache.commons.lang.Validate: void notEmpty(java.util.Map,java.lang.String)>(r1, "Backing data for interpolation must not be empty.");

        $z0 = r1 instanceof java.util.SortedMap;

        if $z0 == 0 goto label1;

        $r11 = interfaceinvoke r1.<java.util.Map: java.util.Set keySet()>();

        $r12 = <org.apache.commons.lang.ArrayUtils: java.lang.Double[] EMPTY_DOUBLE_OBJECT_ARRAY>;

        $r13 = interfaceinvoke $r11.<java.util.Set: java.lang.Object[] toArray(java.lang.Object[])>($r12);

        $r14 = (java.lang.Double[]) $r13;

        r20 = staticinvoke <org.apache.commons.lang.ArrayUtils: double[] toPrimitive(java.lang.Double[])>($r14);

        $r15 = interfaceinvoke r1.<java.util.Map: java.util.Collection values()>();

        $r16 = <org.apache.commons.lang.ArrayUtils: java.lang.Double[] EMPTY_DOUBLE_OBJECT_ARRAY>;

        $r17 = interfaceinvoke $r15.<java.util.Collection: java.lang.Object[] toArray(java.lang.Object[])>($r16);

        $r18 = (java.lang.Double[]) $r17;

        r21 = staticinvoke <org.apache.commons.lang.ArrayUtils: double[] toPrimitive(java.lang.Double[])>($r18);

        $r19 = virtualinvoke r0.<com.opengamma.analytics.math.interpolation.Interpolator1D: com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle getDataBundleFromSortedArrays(double[],double[])>(r20, r21);

        return $r19;

     label1:
        $i0 = interfaceinvoke r1.<java.util.Map: int size()>();

        r22 = newarray (double)[$i0];

        $i1 = interfaceinvoke r1.<java.util.Map: int size()>();

        r23 = newarray (double)[$i1];

        i2 = 0;

        $r4 = interfaceinvoke r1.<java.util.Map: java.util.Set entrySet()>();

        r2 = interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>();

     label2:
        $z1 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label3;

        $r6 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (java.util.Map$Entry) $r6;

        $r7 = interfaceinvoke r3.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r8 = (java.lang.Double) $r7;

        $d0 = virtualinvoke $r8.<java.lang.Double: double doubleValue()>();

        r22[i2] = $d0;

        $r9 = interfaceinvoke r3.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r10 = (java.lang.Double) $r9;

        $d1 = virtualinvoke $r10.<java.lang.Double: double doubleValue()>();

        r23[i2] = $d1;

        i2 = i2 + 1;

        goto label2;

     label3:
        $r5 = virtualinvoke r0.<com.opengamma.analytics.math.interpolation.Interpolator1D: com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle getDataBundle(double[],double[])>(r22, r23);

        return $r5;
    }

    public int hashCode()
    {
        com.opengamma.analytics.math.interpolation.Interpolator1D r0;
        int i2;

        r0 := @this: com.opengamma.analytics.math.interpolation.Interpolator1D;

        i2 = 31 * 1;

        return i2;
    }

    public boolean equals(java.lang.Object)
    {
        com.opengamma.analytics.math.interpolation.Interpolator1D r0;
        java.lang.Object r1;
        java.lang.Class $r2, $r3;

        r0 := @this: com.opengamma.analytics.math.interpolation.Interpolator1D;

        r1 := @parameter0: java.lang.Object;

        if r0 != r1 goto label1;

        return 1;

     label1:
        if r1 != null goto label2;

        return 0;

     label2:
        $r2 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        if $r2 == $r3 goto label3;

        return 0;

     label3:
        return 1;
    }

    protected boolean classEquals(java.lang.Object)
    {
        com.opengamma.analytics.math.interpolation.Interpolator1D r0;
        java.lang.Object r1;
        java.lang.Class $r2, $r3;
        boolean $z0;

        r0 := @this: com.opengamma.analytics.math.interpolation.Interpolator1D;

        r1 := @parameter0: java.lang.Object;

        if r1 != null goto label1;

        return 0;

     label1:
        $r2 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        $z0 = virtualinvoke $r2.<java.lang.Object: boolean equals(java.lang.Object)>($r3);

        return $z0;
    }

    public volatile java.lang.Double interpolate(java.lang.Object, java.lang.Object)
    {
        com.opengamma.analytics.math.interpolation.Interpolator1D r0;
        java.lang.Object r1, r2;
        java.lang.Double $r3, $r5;
        com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle $r4;

        r0 := @this: com.opengamma.analytics.math.interpolation.Interpolator1D;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r4 = (com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle) r1;

        $r3 = (java.lang.Double) r2;

        $r5 = virtualinvoke r0.<com.opengamma.analytics.math.interpolation.Interpolator1D: java.lang.Double interpolate(com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle,java.lang.Double)>($r4, $r3);

        return $r5;
    }

    public static void <clinit>()
    {
        <com.opengamma.analytics.math.interpolation.Interpolator1D: double EPS> = 1.0E-6;

        <com.opengamma.analytics.math.interpolation.Interpolator1D: long serialVersionUID> = 1L;

        return;
    }
}
