public class org.apache.commons.math3.analysis.integration.LegendreGaussIntegrator extends org.apache.commons.math3.analysis.integration.BaseAbstractUnivariateIntegrator
{
    private static final double[] ABSCISSAS_2;
    private static final double[] WEIGHTS_2;
    private static final double[] ABSCISSAS_3;
    private static final double[] WEIGHTS_3;
    private static final double[] ABSCISSAS_4;
    private static final double[] WEIGHTS_4;
    private static final double[] ABSCISSAS_5;
    private static final double[] WEIGHTS_5;
    private final double[] abscissas;
    private final double[] weights;

    public void <init>(int, double, double, int, int) throws org.apache.commons.math3.exception.MathIllegalArgumentException, org.apache.commons.math3.exception.NotStrictlyPositiveException, org.apache.commons.math3.exception.NumberIsTooSmallException
    {
        org.apache.commons.math3.analysis.integration.LegendreGaussIntegrator r0;
        int i0, i1, i2;
        double d0, d1;
        double[] $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8;
        org.apache.commons.math3.exception.MathIllegalArgumentException $r9;
        java.lang.Object[] $r10;
        org.apache.commons.math3.exception.util.LocalizedFormats $r11;
        java.lang.Integer $r12, $r13, $r14;

        r0 := @this: org.apache.commons.math3.analysis.integration.LegendreGaussIntegrator;

        i0 := @parameter0: int;

        d0 := @parameter1: double;

        d1 := @parameter2: double;

        i1 := @parameter3: int;

        i2 := @parameter4: int;

        specialinvoke r0.<org.apache.commons.math3.analysis.integration.BaseAbstractUnivariateIntegrator: void <init>(double,double,int,int)>(d0, d1, i1, i2);

        tableswitch(i0)
        {
            case 2: goto label1;
            case 3: goto label2;
            case 4: goto label3;
            case 5: goto label4;
            default: goto label5;
        };

     label1:
        $r1 = <org.apache.commons.math3.analysis.integration.LegendreGaussIntegrator: double[] ABSCISSAS_2>;

        r0.<org.apache.commons.math3.analysis.integration.LegendreGaussIntegrator: double[] abscissas> = $r1;

        $r2 = <org.apache.commons.math3.analysis.integration.LegendreGaussIntegrator: double[] WEIGHTS_2>;

        r0.<org.apache.commons.math3.analysis.integration.LegendreGaussIntegrator: double[] weights> = $r2;

        goto label6;

     label2:
        $r7 = <org.apache.commons.math3.analysis.integration.LegendreGaussIntegrator: double[] ABSCISSAS_3>;

        r0.<org.apache.commons.math3.analysis.integration.LegendreGaussIntegrator: double[] abscissas> = $r7;

        $r8 = <org.apache.commons.math3.analysis.integration.LegendreGaussIntegrator: double[] WEIGHTS_3>;

        r0.<org.apache.commons.math3.analysis.integration.LegendreGaussIntegrator: double[] weights> = $r8;

        goto label6;

     label3:
        $r5 = <org.apache.commons.math3.analysis.integration.LegendreGaussIntegrator: double[] ABSCISSAS_4>;

        r0.<org.apache.commons.math3.analysis.integration.LegendreGaussIntegrator: double[] abscissas> = $r5;

        $r6 = <org.apache.commons.math3.analysis.integration.LegendreGaussIntegrator: double[] WEIGHTS_4>;

        r0.<org.apache.commons.math3.analysis.integration.LegendreGaussIntegrator: double[] weights> = $r6;

        goto label6;

     label4:
        $r3 = <org.apache.commons.math3.analysis.integration.LegendreGaussIntegrator: double[] ABSCISSAS_5>;

        r0.<org.apache.commons.math3.analysis.integration.LegendreGaussIntegrator: double[] abscissas> = $r3;

        $r4 = <org.apache.commons.math3.analysis.integration.LegendreGaussIntegrator: double[] WEIGHTS_5>;

        r0.<org.apache.commons.math3.analysis.integration.LegendreGaussIntegrator: double[] weights> = $r4;

        goto label6;

     label5:
        $r9 = new org.apache.commons.math3.exception.MathIllegalArgumentException;

        $r11 = <org.apache.commons.math3.exception.util.LocalizedFormats: org.apache.commons.math3.exception.util.LocalizedFormats N_POINTS_GAUSS_LEGENDRE_INTEGRATOR_NOT_SUPPORTED>;

        $r10 = newarray (java.lang.Object)[3];

        $r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r10[0] = $r12;

        $r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2);

        $r10[1] = $r13;

        $r14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(5);

        $r10[2] = $r14;

        specialinvoke $r9.<org.apache.commons.math3.exception.MathIllegalArgumentException: void <init>(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])>($r11, $r10);

        throw $r9;

     label6:
        return;
    }

    public void <init>(int, double, double) throws org.apache.commons.math3.exception.MathIllegalArgumentException
    {
        org.apache.commons.math3.analysis.integration.LegendreGaussIntegrator r0;
        int i0;
        double d0, d1;

        r0 := @this: org.apache.commons.math3.analysis.integration.LegendreGaussIntegrator;

        i0 := @parameter0: int;

        d0 := @parameter1: double;

        d1 := @parameter2: double;

        specialinvoke r0.<org.apache.commons.math3.analysis.integration.LegendreGaussIntegrator: void <init>(int,double,double,int,int)>(i0, d0, d1, 3, 2147483647);

        return;
    }

    public void <init>(int, int, int) throws org.apache.commons.math3.exception.MathIllegalArgumentException
    {
        org.apache.commons.math3.analysis.integration.LegendreGaussIntegrator r0;
        int i0, i1, i2;

        r0 := @this: org.apache.commons.math3.analysis.integration.LegendreGaussIntegrator;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        specialinvoke r0.<org.apache.commons.math3.analysis.integration.LegendreGaussIntegrator: void <init>(int,double,double,int,int)>(i0, 1.0E-6, 1.0E-15, i1, i2);

        return;
    }

    protected double doIntegrate() throws org.apache.commons.math3.exception.MathIllegalArgumentException, org.apache.commons.math3.exception.TooManyEvaluationsException, org.apache.commons.math3.exception.MaxCountExceededException
    {
        org.apache.commons.math3.analysis.integration.LegendreGaussIntegrator r0;
        double d0, d1, d2, d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, d18;
        org.apache.commons.math3.util.Incrementor $r1, $r3;
        int $i0, $i1, $i2, $i3, $i4, $i5, i7;
        double[] $r2;
        byte $b6;

        r0 := @this: org.apache.commons.math3.analysis.integration.LegendreGaussIntegrator;

        d18 = specialinvoke r0.<org.apache.commons.math3.analysis.integration.LegendreGaussIntegrator: double stage(int)>(1);

        i7 = 2;

     label1:
        d0 = specialinvoke r0.<org.apache.commons.math3.analysis.integration.LegendreGaussIntegrator: double stage(int)>(i7);

        $d4 = d0 - d18;

        d1 = staticinvoke <org.apache.commons.math3.util.FastMath: double abs(double)>($d4);

        $d5 = virtualinvoke r0.<org.apache.commons.math3.analysis.integration.LegendreGaussIntegrator: double getAbsoluteAccuracy()>();

        $d6 = virtualinvoke r0.<org.apache.commons.math3.analysis.integration.LegendreGaussIntegrator: double getRelativeAccuracy()>();

        $d7 = staticinvoke <org.apache.commons.math3.util.FastMath: double abs(double)>(d18);

        $d8 = staticinvoke <org.apache.commons.math3.util.FastMath: double abs(double)>(d0);

        $d9 = $d7 + $d8;

        $d10 = $d6 * $d9;

        $d11 = $d10 * 0.5;

        d2 = staticinvoke <org.apache.commons.math3.util.FastMath: double max(double,double)>($d5, $d11);

        $r1 = r0.<org.apache.commons.math3.analysis.integration.LegendreGaussIntegrator: org.apache.commons.math3.util.Incrementor iterations>;

        $i0 = virtualinvoke $r1.<org.apache.commons.math3.util.Incrementor: int getCount()>();

        $i1 = $i0 + 1;

        $i2 = virtualinvoke r0.<org.apache.commons.math3.analysis.integration.LegendreGaussIntegrator: int getMinimalIterationCount()>();

        if $i1 < $i2 goto label2;

        $b6 = d1 cmpg d2;

        if $b6 > 0 goto label2;

        return d0;

     label2:
        $d14 = d1 / d2;

        $r2 = r0.<org.apache.commons.math3.analysis.integration.LegendreGaussIntegrator: double[] abscissas>;

        $i3 = lengthof $r2;

        $d12 = (double) $i3;

        $d13 = 0.5 / $d12;

        $d15 = staticinvoke <org.apache.commons.math3.util.FastMath: double pow(double,double)>($d14, $d13);

        d3 = staticinvoke <org.apache.commons.math3.util.FastMath: double min(double,double)>(4.0, $d15);

        $d16 = (double) i7;

        $d17 = d3 * $d16;

        $i5 = (int) $d17;

        $i4 = i7 + 1;

        i7 = staticinvoke <org.apache.commons.math3.util.FastMath: int max(int,int)>($i5, $i4);

        d18 = d0;

        $r3 = r0.<org.apache.commons.math3.analysis.integration.LegendreGaussIntegrator: org.apache.commons.math3.util.Incrementor iterations>;

        virtualinvoke $r3.<org.apache.commons.math3.util.Incrementor: void incrementCount()>();

        goto label1;
    }

    private double stage(int) throws org.apache.commons.math3.exception.TooManyEvaluationsException
    {
        org.apache.commons.math3.analysis.integration.LegendreGaussIntegrator r0;
        int i0, $i1, i2, i3;
        double d0, d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, d14, d15;
        double[] $r1, $r2, $r3;

        r0 := @this: org.apache.commons.math3.analysis.integration.LegendreGaussIntegrator;

        i0 := @parameter0: int;

        $d2 = virtualinvoke r0.<org.apache.commons.math3.analysis.integration.LegendreGaussIntegrator: double getMax()>();

        $d3 = virtualinvoke r0.<org.apache.commons.math3.analysis.integration.LegendreGaussIntegrator: double getMin()>();

        $d5 = $d2 - $d3;

        $d4 = (double) i0;

        d0 = $d5 / $d4;

        d1 = d0 / 2.0;

        $d6 = virtualinvoke r0.<org.apache.commons.math3.analysis.integration.LegendreGaussIntegrator: double getMin()>();

        d14 = $d6 + d1;

        d15 = 0.0;

        i2 = 0;

     label1:
        if i2 >= i0 goto label4;

        i3 = 0;

     label2:
        $r1 = r0.<org.apache.commons.math3.analysis.integration.LegendreGaussIntegrator: double[] abscissas>;

        $i1 = lengthof $r1;

        if i3 >= $i1 goto label3;

        $r2 = r0.<org.apache.commons.math3.analysis.integration.LegendreGaussIntegrator: double[] weights>;

        $d11 = $r2[i3];

        $r3 = r0.<org.apache.commons.math3.analysis.integration.LegendreGaussIntegrator: double[] abscissas>;

        $d8 = $r3[i3];

        $d9 = d1 * $d8;

        $d10 = d14 + $d9;

        $d12 = virtualinvoke r0.<org.apache.commons.math3.analysis.integration.LegendreGaussIntegrator: double computeObjectiveValue(double)>($d10);

        $d13 = $d11 * $d12;

        d15 = d15 + $d13;

        i3 = i3 + 1;

        goto label2;

     label3:
        d14 = d14 + d0;

        i2 = i2 + 1;

        goto label1;

     label4:
        $d7 = d1 * d15;

        return $d7;
    }

    static void <clinit>()
    {
        double[] $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21, $d22, $d23, $d24, $d25, $d26, $d27, $d28, $d29, $d30, $d31, $d32, $d33, $d34, $d35, $d36, $d37, $d38, $d39, $d40, $d41, $d42, $d43, $d44, $d45, $d46, $d47, $d48, $d49, $d50, $d51, $d52, $d53, $d54, $d55, $d56, $d57, $d58, $d59, $d60, $d61, $d62, $d63, $d64, $d65, $d66, $d67, $d68, $d69, $d70, $d71, $d72, $d73, $d74, $d75, $d76, $d77, $d78, $d79, $d80, $d81, $d82;

        $r0 = newarray (double)[2];

        $d0 = staticinvoke <org.apache.commons.math3.util.FastMath: double sqrt(double)>(3.0);

        $d1 = -1.0 / $d0;

        $r0[0] = $d1;

        $d2 = staticinvoke <org.apache.commons.math3.util.FastMath: double sqrt(double)>(3.0);

        $d3 = 1.0 / $d2;

        $r0[1] = $d3;

        <org.apache.commons.math3.analysis.integration.LegendreGaussIntegrator: double[] ABSCISSAS_2> = $r0;

        $r1 = newarray (double)[2];

        $r1[0] = 1.0;

        $r1[1] = 1.0;

        <org.apache.commons.math3.analysis.integration.LegendreGaussIntegrator: double[] WEIGHTS_2> = $r1;

        $r2 = newarray (double)[3];

        $d4 = staticinvoke <org.apache.commons.math3.util.FastMath: double sqrt(double)>(0.6);

        $d5 = neg $d4;

        $r2[0] = $d5;

        $r2[1] = 0.0;

        $d6 = staticinvoke <org.apache.commons.math3.util.FastMath: double sqrt(double)>(0.6);

        $r2[2] = $d6;

        <org.apache.commons.math3.analysis.integration.LegendreGaussIntegrator: double[] ABSCISSAS_3> = $r2;

        $r3 = newarray (double)[3];

        $r3[0] = 0.5555555555555556;

        $r3[1] = 0.8888888888888888;

        $r3[2] = 0.5555555555555556;

        <org.apache.commons.math3.analysis.integration.LegendreGaussIntegrator: double[] WEIGHTS_3> = $r3;

        $r4 = newarray (double)[4];

        $d7 = staticinvoke <org.apache.commons.math3.util.FastMath: double sqrt(double)>(30.0);

        $d8 = 2.0 * $d7;

        $d9 = 15.0 + $d8;

        $d10 = $d9 / 35.0;

        $d11 = staticinvoke <org.apache.commons.math3.util.FastMath: double sqrt(double)>($d10);

        $d12 = neg $d11;

        $r4[0] = $d12;

        $d13 = staticinvoke <org.apache.commons.math3.util.FastMath: double sqrt(double)>(30.0);

        $d14 = 2.0 * $d13;

        $d15 = 15.0 - $d14;

        $d16 = $d15 / 35.0;

        $d17 = staticinvoke <org.apache.commons.math3.util.FastMath: double sqrt(double)>($d16);

        $d18 = neg $d17;

        $r4[1] = $d18;

        $d19 = staticinvoke <org.apache.commons.math3.util.FastMath: double sqrt(double)>(30.0);

        $d20 = 2.0 * $d19;

        $d21 = 15.0 - $d20;

        $d22 = $d21 / 35.0;

        $d23 = staticinvoke <org.apache.commons.math3.util.FastMath: double sqrt(double)>($d22);

        $r4[2] = $d23;

        $d24 = staticinvoke <org.apache.commons.math3.util.FastMath: double sqrt(double)>(30.0);

        $d25 = 2.0 * $d24;

        $d26 = 15.0 + $d25;

        $d27 = $d26 / 35.0;

        $d28 = staticinvoke <org.apache.commons.math3.util.FastMath: double sqrt(double)>($d27);

        $r4[3] = $d28;

        <org.apache.commons.math3.analysis.integration.LegendreGaussIntegrator: double[] ABSCISSAS_4> = $r4;

        $r5 = newarray (double)[4];

        $d29 = staticinvoke <org.apache.commons.math3.util.FastMath: double sqrt(double)>(30.0);

        $d30 = 5.0 * $d29;

        $d31 = 90.0 - $d30;

        $d32 = $d31 / 180.0;

        $r5[0] = $d32;

        $d33 = staticinvoke <org.apache.commons.math3.util.FastMath: double sqrt(double)>(30.0);

        $d34 = 5.0 * $d33;

        $d35 = 90.0 + $d34;

        $d36 = $d35 / 180.0;

        $r5[1] = $d36;

        $d37 = staticinvoke <org.apache.commons.math3.util.FastMath: double sqrt(double)>(30.0);

        $d38 = 5.0 * $d37;

        $d39 = 90.0 + $d38;

        $d40 = $d39 / 180.0;

        $r5[2] = $d40;

        $d41 = staticinvoke <org.apache.commons.math3.util.FastMath: double sqrt(double)>(30.0);

        $d42 = 5.0 * $d41;

        $d43 = 90.0 - $d42;

        $d44 = $d43 / 180.0;

        $r5[3] = $d44;

        <org.apache.commons.math3.analysis.integration.LegendreGaussIntegrator: double[] WEIGHTS_4> = $r5;

        $r6 = newarray (double)[5];

        $d45 = staticinvoke <org.apache.commons.math3.util.FastMath: double sqrt(double)>(70.0);

        $d46 = 2.0 * $d45;

        $d47 = 35.0 + $d46;

        $d48 = $d47 / 63.0;

        $d49 = staticinvoke <org.apache.commons.math3.util.FastMath: double sqrt(double)>($d48);

        $d50 = neg $d49;

        $r6[0] = $d50;

        $d51 = staticinvoke <org.apache.commons.math3.util.FastMath: double sqrt(double)>(70.0);

        $d52 = 2.0 * $d51;

        $d53 = 35.0 - $d52;

        $d54 = $d53 / 63.0;

        $d55 = staticinvoke <org.apache.commons.math3.util.FastMath: double sqrt(double)>($d54);

        $d56 = neg $d55;

        $r6[1] = $d56;

        $r6[2] = 0.0;

        $d57 = staticinvoke <org.apache.commons.math3.util.FastMath: double sqrt(double)>(70.0);

        $d58 = 2.0 * $d57;

        $d59 = 35.0 - $d58;

        $d60 = $d59 / 63.0;

        $d61 = staticinvoke <org.apache.commons.math3.util.FastMath: double sqrt(double)>($d60);

        $r6[3] = $d61;

        $d62 = staticinvoke <org.apache.commons.math3.util.FastMath: double sqrt(double)>(70.0);

        $d63 = 2.0 * $d62;

        $d64 = 35.0 + $d63;

        $d65 = $d64 / 63.0;

        $d66 = staticinvoke <org.apache.commons.math3.util.FastMath: double sqrt(double)>($d65);

        $r6[4] = $d66;

        <org.apache.commons.math3.analysis.integration.LegendreGaussIntegrator: double[] ABSCISSAS_5> = $r6;

        $r7 = newarray (double)[5];

        $d67 = staticinvoke <org.apache.commons.math3.util.FastMath: double sqrt(double)>(70.0);

        $d68 = 13.0 * $d67;

        $d69 = 322.0 - $d68;

        $d70 = $d69 / 900.0;

        $r7[0] = $d70;

        $d71 = staticinvoke <org.apache.commons.math3.util.FastMath: double sqrt(double)>(70.0);

        $d72 = 13.0 * $d71;

        $d73 = 322.0 + $d72;

        $d74 = $d73 / 900.0;

        $r7[1] = $d74;

        $r7[2] = 0.5688888888888889;

        $d75 = staticinvoke <org.apache.commons.math3.util.FastMath: double sqrt(double)>(70.0);

        $d76 = 13.0 * $d75;

        $d77 = 322.0 + $d76;

        $d78 = $d77 / 900.0;

        $r7[3] = $d78;

        $d79 = staticinvoke <org.apache.commons.math3.util.FastMath: double sqrt(double)>(70.0);

        $d80 = 13.0 * $d79;

        $d81 = 322.0 - $d80;

        $d82 = $d81 / 900.0;

        $r7[4] = $d82;

        <org.apache.commons.math3.analysis.integration.LegendreGaussIntegrator: double[] WEIGHTS_5> = $r7;

        return;
    }
}
