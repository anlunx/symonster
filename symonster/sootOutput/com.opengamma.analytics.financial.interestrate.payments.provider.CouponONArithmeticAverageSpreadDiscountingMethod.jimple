public final class com.opengamma.analytics.financial.interestrate.payments.provider.CouponONArithmeticAverageSpreadDiscountingMethod extends java.lang.Object
{
    private static final com.opengamma.analytics.financial.interestrate.payments.provider.CouponONArithmeticAverageSpreadDiscountingMethod INSTANCE;

    public static com.opengamma.analytics.financial.interestrate.payments.provider.CouponONArithmeticAverageSpreadDiscountingMethod getInstance()
    {
        com.opengamma.analytics.financial.interestrate.payments.provider.CouponONArithmeticAverageSpreadDiscountingMethod $r0;

        $r0 = <com.opengamma.analytics.financial.interestrate.payments.provider.CouponONArithmeticAverageSpreadDiscountingMethod: com.opengamma.analytics.financial.interestrate.payments.provider.CouponONArithmeticAverageSpreadDiscountingMethod INSTANCE>;

        return $r0;
    }

    private void <init>()
    {
        com.opengamma.analytics.financial.interestrate.payments.provider.CouponONArithmeticAverageSpreadDiscountingMethod r0;

        r0 := @this: com.opengamma.analytics.financial.interestrate.payments.provider.CouponONArithmeticAverageSpreadDiscountingMethod;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public com.opengamma.util.money.MultipleCurrencyAmount presentValue(com.opengamma.analytics.financial.interestrate.payments.derivative.CouponONArithmeticAverageSpread, com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface)
    {
        com.opengamma.analytics.financial.interestrate.payments.provider.CouponONArithmeticAverageSpreadDiscountingMethod r0;
        com.opengamma.analytics.financial.interestrate.payments.derivative.CouponONArithmeticAverageSpread r1;
        com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface r2;
        double[] r3, r4, r5;
        int i0, $i1, i2;
        double d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, d13, d14;
        com.opengamma.util.money.Currency $r8, $r10;
        java.lang.Double $r9;
        com.opengamma.util.money.MultipleCurrencyAmount $r11;
        com.opengamma.analytics.financial.instrument.index.IndexON $r12;

        r0 := @this: com.opengamma.analytics.financial.interestrate.payments.provider.CouponONArithmeticAverageSpreadDiscountingMethod;

        r1 := @parameter0: com.opengamma.analytics.financial.interestrate.payments.derivative.CouponONArithmeticAverageSpread;

        r2 := @parameter1: com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "Coupon");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, "Multi-curve provider");

        r3 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.payments.derivative.CouponONArithmeticAverageSpread: double[] getFixingPeriodAccrualFactors()>();

        r4 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.payments.derivative.CouponONArithmeticAverageSpread: double[] getFixingPeriodTimes()>();

        i0 = lengthof r3;

        r5 = newarray (double)[i0];

        d13 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.payments.derivative.CouponONArithmeticAverageSpread: double getRateAccrued()>();

        i2 = 0;

     label1:
        if i2 >= i0 goto label2;

        $r12 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.payments.derivative.CouponONArithmeticAverageSpread: com.opengamma.analytics.financial.instrument.index.IndexON getIndex()>();

        $d8 = r4[i2];

        $i1 = i2 + 1;

        $d7 = r4[$i1];

        $d6 = r3[i2];

        $d9 = interfaceinvoke r2.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface: double getSimplyCompoundForwardRate(com.opengamma.analytics.financial.instrument.index.IndexON,double,double,double)>($r12, $d8, $d7, $d6);

        r5[i2] = $d9;

        $d11 = r5[i2];

        $d10 = r3[i2];

        $d12 = $d11 * $d10;

        d13 = d13 + $d12;

        i2 = i2 + 1;

        goto label1;

     label2:
        $r8 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.payments.derivative.CouponONArithmeticAverageSpread: com.opengamma.util.money.Currency getCurrency()>();

        $d1 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.payments.derivative.CouponONArithmeticAverageSpread: double getPaymentTime()>();

        $r9 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d1);

        d14 = interfaceinvoke r2.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface: double getDiscountFactor(com.opengamma.util.money.Currency,java.lang.Double)>($r8, $r9);

        $d2 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.payments.derivative.CouponONArithmeticAverageSpread: double getNotional()>();

        $d3 = d13 * $d2;

        $d4 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.payments.derivative.CouponONArithmeticAverageSpread: double getSpreadAmount()>();

        $d5 = $d3 + $d4;

        d0 = d14 * $d5;

        $r10 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.payments.derivative.CouponONArithmeticAverageSpread: com.opengamma.util.money.Currency getCurrency()>();

        $r11 = staticinvoke <com.opengamma.util.money.MultipleCurrencyAmount: com.opengamma.util.money.MultipleCurrencyAmount of(com.opengamma.util.money.Currency,double)>($r10, d0);

        return $r11;
    }

    public com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyMulticurveSensitivity presentValueCurveSensitivity(com.opengamma.analytics.financial.interestrate.payments.derivative.CouponONArithmeticAverageSpread, com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface)
    {
        com.opengamma.analytics.financial.interestrate.payments.provider.CouponONArithmeticAverageSpreadDiscountingMethod r0;
        com.opengamma.analytics.financial.interestrate.payments.derivative.CouponONArithmeticAverageSpread r1;
        com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface r2;
        double[] r3, r4, r5, r6;
        int i0, $i1, $i2, i3, i4, i5;
        double d1, d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21, $d22, $d23, $d24, $d25, $d26, $d27, d28, d29;
        com.opengamma.util.money.Currency $r12, $r17, $r25;
        java.lang.Double $r13;
        java.util.HashMap $r14, $r20;
        java.util.ArrayList $r15, $r21;
        com.opengamma.util.tuple.DoublesPair $r16;
        java.lang.String $r18, $r23;
        com.opengamma.analytics.financial.instrument.index.IndexON $r22, $r28;
        com.opengamma.analytics.financial.provider.sensitivity.multicurve.MulticurveSensitivity $r26;
        com.opengamma.analytics.financial.provider.sensitivity.multicurve.SimplyCompoundedForwardSensitivity $r27;
        com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyMulticurveSensitivity r30;

        r0 := @this: com.opengamma.analytics.financial.interestrate.payments.provider.CouponONArithmeticAverageSpreadDiscountingMethod;

        r1 := @parameter0: com.opengamma.analytics.financial.interestrate.payments.derivative.CouponONArithmeticAverageSpread;

        r2 := @parameter1: com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "Coupon");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, "Multi-curve provider");

        r3 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.payments.derivative.CouponONArithmeticAverageSpread: double[] getFixingPeriodAccrualFactors()>();

        r4 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.payments.derivative.CouponONArithmeticAverageSpread: double[] getFixingPeriodTimes()>();

        i0 = lengthof r3;

        r5 = newarray (double)[i0];

        d28 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.payments.derivative.CouponONArithmeticAverageSpread: double getRateAccrued()>();

        i3 = 0;

     label1:
        if i3 >= i0 goto label2;

        $r28 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.payments.derivative.CouponONArithmeticAverageSpread: com.opengamma.analytics.financial.instrument.index.IndexON getIndex()>();

        $d23 = r4[i3];

        $i2 = i3 + 1;

        $d22 = r4[$i2];

        $d21 = r3[i3];

        $d24 = interfaceinvoke r2.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface: double getSimplyCompoundForwardRate(com.opengamma.analytics.financial.instrument.index.IndexON,double,double,double)>($r28, $d23, $d22, $d21);

        r5[i3] = $d24;

        $d26 = r5[i3];

        $d25 = r3[i3];

        $d27 = $d26 * $d25;

        d28 = d28 + $d27;

        i3 = i3 + 1;

        goto label1;

     label2:
        $r12 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.payments.derivative.CouponONArithmeticAverageSpread: com.opengamma.util.money.Currency getCurrency()>();

        $d3 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.payments.derivative.CouponONArithmeticAverageSpread: double getPaymentTime()>();

        $r13 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d3);

        d29 = interfaceinvoke r2.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface: double getDiscountFactor(com.opengamma.util.money.Currency,java.lang.Double)>($r12, $r13);

        $d4 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.payments.derivative.CouponONArithmeticAverageSpread: double getNotional()>();

        $d5 = d28 * $d4;

        $d6 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.payments.derivative.CouponONArithmeticAverageSpread: double getSpreadAmount()>();

        $d7 = $d5 + $d6;

        d1 = $d7 * 1.0;

        $d8 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.payments.derivative.CouponONArithmeticAverageSpread: double getNotional()>();

        $d9 = d29 * $d8;

        d2 = $d9 * 1.0;

        r6 = newarray (double)[i0];

        i4 = 0;

     label3:
        if i4 >= i0 goto label4;

        $d19 = r3[i4];

        $d20 = $d19 * d2;

        r6[i4] = $d20;

        i4 = i4 + 1;

        goto label3;

     label4:
        $r14 = new java.util.HashMap;

        specialinvoke $r14.<java.util.HashMap: void <init>()>();

        $r15 = new java.util.ArrayList;

        specialinvoke $r15.<java.util.ArrayList: void <init>()>();

        $d10 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.payments.derivative.CouponONArithmeticAverageSpread: double getPaymentTime()>();

        $d11 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.payments.derivative.CouponONArithmeticAverageSpread: double getPaymentTime()>();

        $d12 = neg $d11;

        $d13 = $d12 * d29;

        $d14 = $d13 * d1;

        $r16 = staticinvoke <com.opengamma.util.tuple.DoublesPair: com.opengamma.util.tuple.DoublesPair of(double,double)>($d10, $d14);

        interfaceinvoke $r15.<java.util.List: boolean add(java.lang.Object)>($r16);

        $r17 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.payments.derivative.CouponONArithmeticAverageSpread: com.opengamma.util.money.Currency getCurrency()>();

        $r18 = interfaceinvoke r2.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface: java.lang.String getName(com.opengamma.util.money.Currency)>($r17);

        interfaceinvoke $r14.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r18, $r15);

        $r20 = new java.util.HashMap;

        specialinvoke $r20.<java.util.HashMap: void <init>()>();

        $r21 = new java.util.ArrayList;

        specialinvoke $r21.<java.util.ArrayList: void <init>()>();

        i5 = 0;

     label5:
        if i5 >= i0 goto label6;

        $r27 = new com.opengamma.analytics.financial.provider.sensitivity.multicurve.SimplyCompoundedForwardSensitivity;

        $d18 = r4[i5];

        $i1 = i5 + 1;

        $d17 = r4[$i1];

        $d16 = r3[i5];

        $d15 = r6[i5];

        specialinvoke $r27.<com.opengamma.analytics.financial.provider.sensitivity.multicurve.SimplyCompoundedForwardSensitivity: void <init>(double,double,double,double)>($d18, $d17, $d16, $d15);

        interfaceinvoke $r21.<java.util.List: boolean add(java.lang.Object)>($r27);

        i5 = i5 + 1;

        goto label5;

     label6:
        $r22 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.payments.derivative.CouponONArithmeticAverageSpread: com.opengamma.analytics.financial.instrument.index.IndexON getIndex()>();

        $r23 = interfaceinvoke r2.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface: java.lang.String getName(com.opengamma.analytics.financial.instrument.index.IndexON)>($r22);

        interfaceinvoke $r20.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r23, $r21);

        $r25 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.payments.derivative.CouponONArithmeticAverageSpread: com.opengamma.util.money.Currency getCurrency()>();

        $r26 = staticinvoke <com.opengamma.analytics.financial.provider.sensitivity.multicurve.MulticurveSensitivity: com.opengamma.analytics.financial.provider.sensitivity.multicurve.MulticurveSensitivity of(java.util.Map,java.util.Map)>($r14, $r20);

        r30 = staticinvoke <com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyMulticurveSensitivity: com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyMulticurveSensitivity of(com.opengamma.util.money.Currency,com.opengamma.analytics.financial.provider.sensitivity.multicurve.MulticurveSensitivity)>($r25, $r26);

        return r30;
    }

    static void <clinit>()
    {
        com.opengamma.analytics.financial.interestrate.payments.provider.CouponONArithmeticAverageSpreadDiscountingMethod $r0;

        $r0 = new com.opengamma.analytics.financial.interestrate.payments.provider.CouponONArithmeticAverageSpreadDiscountingMethod;

        specialinvoke $r0.<com.opengamma.analytics.financial.interestrate.payments.provider.CouponONArithmeticAverageSpreadDiscountingMethod: void <init>()>();

        <com.opengamma.analytics.financial.interestrate.payments.provider.CouponONArithmeticAverageSpreadDiscountingMethod: com.opengamma.analytics.financial.interestrate.payments.provider.CouponONArithmeticAverageSpreadDiscountingMethod INSTANCE> = $r0;

        return;
    }
}
