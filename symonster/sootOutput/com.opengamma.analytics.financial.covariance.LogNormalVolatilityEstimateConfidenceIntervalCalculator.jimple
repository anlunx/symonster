public class com.opengamma.analytics.financial.covariance.LogNormalVolatilityEstimateConfidenceIntervalCalculator extends java.lang.Object
{
    private com.opengamma.analytics.math.statistics.distribution.ProbabilityDistribution _chiSquare;

    public void <init>()
    {
        com.opengamma.analytics.financial.covariance.LogNormalVolatilityEstimateConfidenceIntervalCalculator r0;

        r0 := @this: com.opengamma.analytics.financial.covariance.LogNormalVolatilityEstimateConfidenceIntervalCalculator;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public com.opengamma.analytics.math.statistics.ConfidenceInterval getConfidenceInterval(double, double, int)
    {
        com.opengamma.analytics.financial.covariance.LogNormalVolatilityEstimateConfidenceIntervalCalculator r0;
        double d0, d1, d2, d3, d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16;
        int i0, $i1, $i2, $i3;
        com.opengamma.analytics.math.statistics.distribution.ChiSquareDistribution $r1;
        com.opengamma.analytics.math.statistics.distribution.ProbabilityDistribution $r2, $r4;
        java.lang.Double $r3, $r5;
        com.opengamma.analytics.math.statistics.ConfidenceInterval $r6;

        r0 := @this: com.opengamma.analytics.financial.covariance.LogNormalVolatilityEstimateConfidenceIntervalCalculator;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        i0 := @parameter2: int;

        $r1 = new com.opengamma.analytics.math.statistics.distribution.ChiSquareDistribution;

        $i1 = i0 - 1;

        $d5 = (double) $i1;

        specialinvoke $r1.<com.opengamma.analytics.math.statistics.distribution.ChiSquareDistribution: void <init>(double)>($d5);

        r0.<com.opengamma.analytics.financial.covariance.LogNormalVolatilityEstimateConfidenceIntervalCalculator: com.opengamma.analytics.math.statistics.distribution.ProbabilityDistribution _chiSquare> = $r1;

        d2 = 1.0 - d1;

        $i2 = i0 - 1;

        $d8 = (double) $i2;

        $r2 = r0.<com.opengamma.analytics.financial.covariance.LogNormalVolatilityEstimateConfidenceIntervalCalculator: com.opengamma.analytics.math.statistics.distribution.ProbabilityDistribution _chiSquare>;

        $d6 = d2 / 2.0;

        $d7 = 1.0 - $d6;

        $r3 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d7);

        $d9 = interfaceinvoke $r2.<com.opengamma.analytics.math.statistics.distribution.ProbabilityDistribution: double getInverseCDF(java.lang.Object)>($r3);

        $d10 = $d8 / $d9;

        $d11 = staticinvoke <java.lang.Math: double sqrt(double)>($d10);

        d3 = d0 * $d11;

        $i3 = i0 - 1;

        $d13 = (double) $i3;

        $r4 = r0.<com.opengamma.analytics.financial.covariance.LogNormalVolatilityEstimateConfidenceIntervalCalculator: com.opengamma.analytics.math.statistics.distribution.ProbabilityDistribution _chiSquare>;

        $d12 = d2 / 2.0;

        $r5 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d12);

        $d14 = interfaceinvoke $r4.<com.opengamma.analytics.math.statistics.distribution.ProbabilityDistribution: double getInverseCDF(java.lang.Object)>($r5);

        $d15 = $d13 / $d14;

        $d16 = staticinvoke <java.lang.Math: double sqrt(double)>($d15);

        d4 = d0 * $d16;

        $r6 = new com.opengamma.analytics.math.statistics.ConfidenceInterval;

        specialinvoke $r6.<com.opengamma.analytics.math.statistics.ConfidenceInterval: void <init>(double,double,double,double)>(d0, d3, d4, d1);

        return $r6;
    }
}
