public final class com.opengamma.analytics.financial.interestrate.cash.provider.CashDiscountingMethod extends java.lang.Object
{
    private static final com.opengamma.analytics.financial.interestrate.cash.provider.CashDiscountingMethod INSTANCE;

    public static com.opengamma.analytics.financial.interestrate.cash.provider.CashDiscountingMethod getInstance()
    {
        com.opengamma.analytics.financial.interestrate.cash.provider.CashDiscountingMethod $r0;

        $r0 = <com.opengamma.analytics.financial.interestrate.cash.provider.CashDiscountingMethod: com.opengamma.analytics.financial.interestrate.cash.provider.CashDiscountingMethod INSTANCE>;

        return $r0;
    }

    private void <init>()
    {
        com.opengamma.analytics.financial.interestrate.cash.provider.CashDiscountingMethod r0;

        r0 := @this: com.opengamma.analytics.financial.interestrate.cash.provider.CashDiscountingMethod;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public com.opengamma.util.money.MultipleCurrencyAmount presentValue(com.opengamma.analytics.financial.interestrate.cash.derivative.Cash, com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface)
    {
        com.opengamma.analytics.financial.interestrate.cash.provider.CashDiscountingMethod r0;
        com.opengamma.analytics.financial.interestrate.cash.derivative.Cash r1;
        com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface r2;
        double d0, d1, d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10;
        com.opengamma.util.money.Currency $r5, $r7, $r9;
        java.lang.Double $r6, $r8;
        com.opengamma.util.money.MultipleCurrencyAmount $r10;

        r0 := @this: com.opengamma.analytics.financial.interestrate.cash.provider.CashDiscountingMethod;

        r1 := @parameter0: com.opengamma.analytics.financial.interestrate.cash.derivative.Cash;

        r2 := @parameter1: com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "Deposit");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, "Multicurves");

        $r5 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.cash.derivative.Cash: com.opengamma.util.money.Currency getCurrency()>();

        $d3 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.cash.derivative.Cash: double getStartTime()>();

        $r6 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d3);

        d0 = interfaceinvoke r2.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface: double getDiscountFactor(com.opengamma.util.money.Currency,java.lang.Double)>($r5, $r6);

        $r7 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.cash.derivative.Cash: com.opengamma.util.money.Currency getCurrency()>();

        $d4 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.cash.derivative.Cash: double getEndTime()>();

        $r8 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d4);

        d1 = interfaceinvoke r2.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface: double getDiscountFactor(com.opengamma.util.money.Currency,java.lang.Double)>($r7, $r8);

        $d5 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.cash.derivative.Cash: double getNotional()>();

        $d6 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.cash.derivative.Cash: double getInterestAmount()>();

        $d7 = $d5 + $d6;

        $d8 = $d7 * d1;

        $d9 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.cash.derivative.Cash: double getInitialAmount()>();

        $d10 = $d9 * d0;

        d2 = $d8 - $d10;

        $r9 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.cash.derivative.Cash: com.opengamma.util.money.Currency getCurrency()>();

        $r10 = staticinvoke <com.opengamma.util.money.MultipleCurrencyAmount: com.opengamma.util.money.MultipleCurrencyAmount of(com.opengamma.util.money.Currency,double)>($r9, d2);

        return $r10;
    }

    public com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyMulticurveSensitivity presentValueCurveSensitivity(com.opengamma.analytics.financial.interestrate.cash.derivative.Cash, com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface)
    {
        com.opengamma.analytics.financial.interestrate.cash.provider.CashDiscountingMethod r0;
        com.opengamma.analytics.financial.interestrate.cash.derivative.Cash r1;
        com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface r2;
        double d0, d1, d3, d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21;
        com.opengamma.util.money.Currency $r7, $r9, $r15, $r19;
        java.lang.Double $r8, $r10;
        java.util.HashMap $r11;
        java.util.ArrayList $r12;
        com.opengamma.util.tuple.DoublesPair $r13, $r14;
        java.lang.String $r16;
        com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyMulticurveSensitivity $r18, r22;
        com.opengamma.analytics.financial.provider.sensitivity.multicurve.MulticurveSensitivity $r20;

        r0 := @this: com.opengamma.analytics.financial.interestrate.cash.provider.CashDiscountingMethod;

        r1 := @parameter0: com.opengamma.analytics.financial.interestrate.cash.derivative.Cash;

        r2 := @parameter1: com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "Deposit");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, "Multicurves");

        $r7 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.cash.derivative.Cash: com.opengamma.util.money.Currency getCurrency()>();

        $d5 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.cash.derivative.Cash: double getStartTime()>();

        $r8 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d5);

        d0 = interfaceinvoke r2.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface: double getDiscountFactor(com.opengamma.util.money.Currency,java.lang.Double)>($r7, $r8);

        $r9 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.cash.derivative.Cash: com.opengamma.util.money.Currency getCurrency()>();

        $d6 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.cash.derivative.Cash: double getEndTime()>();

        $r10 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d6);

        d1 = interfaceinvoke r2.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface: double getDiscountFactor(com.opengamma.util.money.Currency,java.lang.Double)>($r9, $r10);

        $d7 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.cash.derivative.Cash: double getNotional()>();

        $d8 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.cash.derivative.Cash: double getInterestAmount()>();

        $d9 = $d8 * 1.0;

        d3 = $d7 + $d9;

        $d10 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.cash.derivative.Cash: double getInitialAmount()>();

        $d11 = neg $d10;

        d4 = $d11 * 1.0;

        $r11 = new java.util.HashMap;

        specialinvoke $r11.<java.util.HashMap: void <init>()>();

        $r12 = new java.util.ArrayList;

        specialinvoke $r12.<java.util.ArrayList: void <init>()>();

        $d12 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.cash.derivative.Cash: double getStartTime()>();

        $d13 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.cash.derivative.Cash: double getStartTime()>();

        $d14 = neg $d13;

        $d15 = $d14 * d0;

        $d16 = $d15 * d4;

        $r13 = staticinvoke <com.opengamma.util.tuple.DoublesPair: com.opengamma.util.tuple.DoublesPair of(double,double)>($d12, $d16);

        interfaceinvoke $r12.<java.util.List: boolean add(java.lang.Object)>($r13);

        $d17 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.cash.derivative.Cash: double getEndTime()>();

        $d18 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.cash.derivative.Cash: double getEndTime()>();

        $d19 = neg $d18;

        $d20 = $d19 * d1;

        $d21 = $d20 * d3;

        $r14 = staticinvoke <com.opengamma.util.tuple.DoublesPair: com.opengamma.util.tuple.DoublesPair of(double,double)>($d17, $d21);

        interfaceinvoke $r12.<java.util.List: boolean add(java.lang.Object)>($r14);

        $r15 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.cash.derivative.Cash: com.opengamma.util.money.Currency getCurrency()>();

        $r16 = interfaceinvoke r2.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface: java.lang.String getName(com.opengamma.util.money.Currency)>($r15);

        interfaceinvoke $r11.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r16, $r12);

        $r18 = new com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyMulticurveSensitivity;

        specialinvoke $r18.<com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyMulticurveSensitivity: void <init>()>();

        $r19 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.cash.derivative.Cash: com.opengamma.util.money.Currency getCurrency()>();

        $r20 = staticinvoke <com.opengamma.analytics.financial.provider.sensitivity.multicurve.MulticurveSensitivity: com.opengamma.analytics.financial.provider.sensitivity.multicurve.MulticurveSensitivity ofYieldDiscounting(java.util.Map)>($r11);

        r22 = virtualinvoke $r18.<com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyMulticurveSensitivity: com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyMulticurveSensitivity plus(com.opengamma.util.money.Currency,com.opengamma.analytics.financial.provider.sensitivity.multicurve.MulticurveSensitivity)>($r19, $r20);

        return r22;
    }

    public double parRate(com.opengamma.analytics.financial.interestrate.cash.derivative.Cash, com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface)
    {
        com.opengamma.analytics.financial.interestrate.cash.provider.CashDiscountingMethod r0;
        com.opengamma.analytics.financial.interestrate.cash.derivative.Cash r1;
        com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface r2;
        double d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7;
        com.opengamma.util.money.Currency $r3, $r5;
        java.lang.Double $r4, $r6;

        r0 := @this: com.opengamma.analytics.financial.interestrate.cash.provider.CashDiscountingMethod;

        r1 := @parameter0: com.opengamma.analytics.financial.interestrate.cash.derivative.Cash;

        r2 := @parameter1: com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface;

        d0 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.cash.derivative.Cash: double getAccrualFactor()>();

        $r3 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.cash.derivative.Cash: com.opengamma.util.money.Currency getCurrency()>();

        $d1 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.cash.derivative.Cash: double getStartTime()>();

        $r4 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d1);

        $d2 = interfaceinvoke r2.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface: double getDiscountFactor(com.opengamma.util.money.Currency,java.lang.Double)>($r3, $r4);

        $r5 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.cash.derivative.Cash: com.opengamma.util.money.Currency getCurrency()>();

        $d3 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.cash.derivative.Cash: double getEndTime()>();

        $r6 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d3);

        $d4 = interfaceinvoke r2.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface: double getDiscountFactor(com.opengamma.util.money.Currency,java.lang.Double)>($r5, $r6);

        $d5 = $d2 / $d4;

        $d6 = $d5 - 1.0;

        $d7 = $d6 / d0;

        return $d7;
    }

    public double parSpread(com.opengamma.analytics.financial.interestrate.cash.derivative.Cash, com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface)
    {
        com.opengamma.analytics.financial.interestrate.cash.provider.CashDiscountingMethod r0;
        com.opengamma.analytics.financial.interestrate.cash.derivative.Cash r1;
        com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface r2;
        double d0, d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16;
        byte $b0;
        com.opengamma.util.money.Currency $r5, $r7;
        java.lang.Double $r6, $r8;
        boolean $z0;

        r0 := @this: com.opengamma.analytics.financial.interestrate.cash.provider.CashDiscountingMethod;

        r1 := @parameter0: com.opengamma.analytics.financial.interestrate.cash.derivative.Cash;

        r2 := @parameter1: com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "Deposit");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, "Multicurves");

        $d2 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.cash.derivative.Cash: double getNotional()>();

        $b0 = $d2 cmpl 0.0;

        if $b0 == 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z0, "Notional is 0");

        $r5 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.cash.derivative.Cash: com.opengamma.util.money.Currency getCurrency()>();

        $d3 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.cash.derivative.Cash: double getStartTime()>();

        $r6 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d3);

        d0 = interfaceinvoke r2.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface: double getDiscountFactor(com.opengamma.util.money.Currency,java.lang.Double)>($r5, $r6);

        $r7 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.cash.derivative.Cash: com.opengamma.util.money.Currency getCurrency()>();

        $d4 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.cash.derivative.Cash: double getEndTime()>();

        $r8 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d4);

        d1 = interfaceinvoke r2.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface: double getDiscountFactor(com.opengamma.util.money.Currency,java.lang.Double)>($r7, $r8);

        $d5 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.cash.derivative.Cash: double getInitialAmount()>();

        $d6 = $d5 * d0;

        $d7 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.cash.derivative.Cash: double getNotional()>();

        $d8 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.cash.derivative.Cash: double getInterestAmount()>();

        $d9 = $d7 + $d8;

        $d10 = $d9 * d1;

        $d11 = $d6 - $d10;

        $d12 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.cash.derivative.Cash: double getNotional()>();

        $d13 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.cash.derivative.Cash: double getAccrualFactor()>();

        $d14 = $d12 * $d13;

        $d15 = $d14 * d1;

        $d16 = $d11 / $d15;

        return $d16;
    }

    public com.opengamma.analytics.financial.provider.sensitivity.multicurve.MulticurveSensitivity parSpreadCurveSensitivity(com.opengamma.analytics.financial.interestrate.cash.derivative.Cash, com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface)
    {
        com.opengamma.analytics.financial.interestrate.cash.provider.CashDiscountingMethod r0;
        com.opengamma.analytics.financial.interestrate.cash.derivative.Cash r1;
        com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface r2;
        double d0, d1, d3, d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21, $d22, $d23, $d24, $d25, $d26, $d27, $d28, $d29, $d30, $d31, $d32;
        byte $b0;
        com.opengamma.util.money.Currency $r7, $r9, $r15;
        java.lang.Double $r8, $r10;
        java.util.HashMap $r11;
        java.util.ArrayList $r12;
        com.opengamma.util.tuple.DoublesPair $r13, $r14;
        java.lang.String $r16;
        com.opengamma.analytics.financial.provider.sensitivity.multicurve.MulticurveSensitivity $r18;
        boolean $z2;

        r0 := @this: com.opengamma.analytics.financial.interestrate.cash.provider.CashDiscountingMethod;

        r1 := @parameter0: com.opengamma.analytics.financial.interestrate.cash.derivative.Cash;

        r2 := @parameter1: com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "Deposit");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, "Multicurves");

        $d5 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.cash.derivative.Cash: double getNotional()>();

        $b0 = $d5 cmpl 0.0;

        if $b0 == 0 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z2, "Notional is 0");

        $r7 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.cash.derivative.Cash: com.opengamma.util.money.Currency getCurrency()>();

        $d6 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.cash.derivative.Cash: double getStartTime()>();

        $r8 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d6);

        d0 = interfaceinvoke r2.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface: double getDiscountFactor(com.opengamma.util.money.Currency,java.lang.Double)>($r7, $r8);

        $r9 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.cash.derivative.Cash: com.opengamma.util.money.Currency getCurrency()>();

        $d7 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.cash.derivative.Cash: double getEndTime()>();

        $r10 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d7);

        d1 = interfaceinvoke r2.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface: double getDiscountFactor(com.opengamma.util.money.Currency,java.lang.Double)>($r9, $r10);

        $d8 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.cash.derivative.Cash: double getInitialAmount()>();

        $d10 = $d8 * d0;

        $d9 = d1 * d1;

        $d11 = $d10 / $d9;

        $d12 = neg $d11;

        $d13 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.cash.derivative.Cash: double getNotional()>();

        $d14 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.cash.derivative.Cash: double getAccrualFactor()>();

        $d15 = $d13 * $d14;

        $d16 = $d12 / $d15;

        d3 = $d16 * 1.0;

        $d17 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.cash.derivative.Cash: double getInitialAmount()>();

        $d18 = $d17 / d1;

        $d19 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.cash.derivative.Cash: double getNotional()>();

        $d20 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.cash.derivative.Cash: double getAccrualFactor()>();

        $d21 = $d19 * $d20;

        $d22 = $d18 / $d21;

        d4 = $d22 * 1.0;

        $r11 = new java.util.HashMap;

        specialinvoke $r11.<java.util.HashMap: void <init>()>();

        $r12 = new java.util.ArrayList;

        specialinvoke $r12.<java.util.ArrayList: void <init>()>();

        $d23 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.cash.derivative.Cash: double getStartTime()>();

        $d24 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.cash.derivative.Cash: double getStartTime()>();

        $d25 = neg $d24;

        $d26 = $d25 * d0;

        $d27 = $d26 * d4;

        $r13 = staticinvoke <com.opengamma.util.tuple.DoublesPair: com.opengamma.util.tuple.DoublesPair of(double,double)>($d23, $d27);

        interfaceinvoke $r12.<java.util.List: boolean add(java.lang.Object)>($r13);

        $d28 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.cash.derivative.Cash: double getEndTime()>();

        $d29 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.cash.derivative.Cash: double getEndTime()>();

        $d30 = neg $d29;

        $d31 = $d30 * d1;

        $d32 = $d31 * d3;

        $r14 = staticinvoke <com.opengamma.util.tuple.DoublesPair: com.opengamma.util.tuple.DoublesPair of(double,double)>($d28, $d32);

        interfaceinvoke $r12.<java.util.List: boolean add(java.lang.Object)>($r14);

        $r15 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.cash.derivative.Cash: com.opengamma.util.money.Currency getCurrency()>();

        $r16 = interfaceinvoke r2.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface: java.lang.String getName(com.opengamma.util.money.Currency)>($r15);

        interfaceinvoke $r11.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r16, $r12);

        $r18 = staticinvoke <com.opengamma.analytics.financial.provider.sensitivity.multicurve.MulticurveSensitivity: com.opengamma.analytics.financial.provider.sensitivity.multicurve.MulticurveSensitivity ofYieldDiscounting(java.util.Map)>($r11);

        return $r18;
    }

    static void <clinit>()
    {
        com.opengamma.analytics.financial.interestrate.cash.provider.CashDiscountingMethod $r0;

        $r0 = new com.opengamma.analytics.financial.interestrate.cash.provider.CashDiscountingMethod;

        specialinvoke $r0.<com.opengamma.analytics.financial.interestrate.cash.provider.CashDiscountingMethod: void <init>()>();

        <com.opengamma.analytics.financial.interestrate.cash.provider.CashDiscountingMethod: com.opengamma.analytics.financial.interestrate.cash.provider.CashDiscountingMethod INSTANCE> = $r0;

        return;
    }
}
