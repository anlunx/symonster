public class com.opengamma.analytics.financial.model.interestrate.curve.ForwardCurve extends java.lang.Object
{
    private static final com.opengamma.analytics.math.integration.RungeKuttaIntegrator1D INTEGRATOR;
    private final com.opengamma.analytics.math.curve.Curve _fwdCurve;
    private final com.opengamma.analytics.math.curve.Curve _drift;
    private final double _spot;

    public void <init>(com.opengamma.analytics.math.curve.Curve, com.opengamma.analytics.math.curve.Curve)
    {
        com.opengamma.analytics.financial.model.interestrate.curve.ForwardCurve r0;
        com.opengamma.analytics.math.curve.Curve r1, r2, $r5;
        java.lang.Double $r6, $r8;
        java.lang.Object $r7;
        double $d0;

        r0 := @this: com.opengamma.analytics.financial.model.interestrate.curve.ForwardCurve;

        r1 := @parameter0: com.opengamma.analytics.math.curve.Curve;

        r2 := @parameter1: com.opengamma.analytics.math.curve.Curve;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "null fwdCurve");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, "null driftCurve");

        r0.<com.opengamma.analytics.financial.model.interestrate.curve.ForwardCurve: com.opengamma.analytics.math.curve.Curve _fwdCurve> = r1;

        r0.<com.opengamma.analytics.financial.model.interestrate.curve.ForwardCurve: com.opengamma.analytics.math.curve.Curve _drift> = r2;

        $r5 = r0.<com.opengamma.analytics.financial.model.interestrate.curve.ForwardCurve: com.opengamma.analytics.math.curve.Curve _fwdCurve>;

        $r6 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(0.0);

        $r7 = virtualinvoke $r5.<com.opengamma.analytics.math.curve.Curve: java.lang.Object getYValue(java.lang.Comparable)>($r6);

        $r8 = (java.lang.Double) $r7;

        $d0 = virtualinvoke $r8.<java.lang.Double: double doubleValue()>();

        r0.<com.opengamma.analytics.financial.model.interestrate.curve.ForwardCurve: double _spot> = $d0;

        return;
    }

    public void <init>(com.opengamma.analytics.math.curve.Curve)
    {
        com.opengamma.analytics.financial.model.interestrate.curve.ForwardCurve r0;
        com.opengamma.analytics.math.curve.Curve r1, $r3, $r4;
        java.lang.Double $r5, $r7;
        java.lang.Object $r6;
        double $d0;

        r0 := @this: com.opengamma.analytics.financial.model.interestrate.curve.ForwardCurve;

        r1 := @parameter0: com.opengamma.analytics.math.curve.Curve;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "curve");

        r0.<com.opengamma.analytics.financial.model.interestrate.curve.ForwardCurve: com.opengamma.analytics.math.curve.Curve _fwdCurve> = r1;

        $r3 = staticinvoke <com.opengamma.analytics.financial.model.interestrate.curve.ForwardCurve: com.opengamma.analytics.math.curve.Curve getDriftCurve(com.opengamma.analytics.math.curve.Curve)>(r1);

        r0.<com.opengamma.analytics.financial.model.interestrate.curve.ForwardCurve: com.opengamma.analytics.math.curve.Curve _drift> = $r3;

        $r4 = r0.<com.opengamma.analytics.financial.model.interestrate.curve.ForwardCurve: com.opengamma.analytics.math.curve.Curve _fwdCurve>;

        $r5 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(0.0);

        $r6 = virtualinvoke $r4.<com.opengamma.analytics.math.curve.Curve: java.lang.Object getYValue(java.lang.Comparable)>($r5);

        $r7 = (java.lang.Double) $r6;

        $d0 = virtualinvoke $r7.<java.lang.Double: double doubleValue()>();

        r0.<com.opengamma.analytics.financial.model.interestrate.curve.ForwardCurve: double _spot> = $d0;

        return;
    }

    public void <init>(double)
    {
        com.opengamma.analytics.financial.model.interestrate.curve.ForwardCurve r0;
        double d0;
        com.opengamma.analytics.math.curve.ConstantDoublesCurve $r1, $r2;

        r0 := @this: com.opengamma.analytics.financial.model.interestrate.curve.ForwardCurve;

        d0 := @parameter0: double;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = staticinvoke <com.opengamma.analytics.math.curve.ConstantDoublesCurve: com.opengamma.analytics.math.curve.ConstantDoublesCurve 'from'(double)>(d0);

        r0.<com.opengamma.analytics.financial.model.interestrate.curve.ForwardCurve: com.opengamma.analytics.math.curve.Curve _fwdCurve> = $r1;

        $r2 = staticinvoke <com.opengamma.analytics.math.curve.ConstantDoublesCurve: com.opengamma.analytics.math.curve.ConstantDoublesCurve 'from'(double)>(0.0);

        r0.<com.opengamma.analytics.financial.model.interestrate.curve.ForwardCurve: com.opengamma.analytics.math.curve.Curve _drift> = $r2;

        r0.<com.opengamma.analytics.financial.model.interestrate.curve.ForwardCurve: double _spot> = d0;

        return;
    }

    public void <init>(double, double)
    {
        com.opengamma.analytics.financial.model.interestrate.curve.ForwardCurve r0;
        double d0, d1;
        com.opengamma.analytics.math.curve.ConstantDoublesCurve $r1;
        java.lang.Double $r2, $r3;
        com.opengamma.analytics.math.curve.Curve $r4;

        r0 := @this: com.opengamma.analytics.financial.model.interestrate.curve.ForwardCurve;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = staticinvoke <com.opengamma.analytics.math.curve.ConstantDoublesCurve: com.opengamma.analytics.math.curve.ConstantDoublesCurve 'from'(double)>(d1);

        r0.<com.opengamma.analytics.financial.model.interestrate.curve.ForwardCurve: com.opengamma.analytics.math.curve.Curve _drift> = $r1;

        $r2 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d0);

        $r3 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d1);

        $r4 = staticinvoke <com.opengamma.analytics.financial.model.interestrate.curve.ForwardCurve: com.opengamma.analytics.math.curve.Curve getForwardCurve(java.lang.Double,java.lang.Double)>($r2, $r3);

        r0.<com.opengamma.analytics.financial.model.interestrate.curve.ForwardCurve: com.opengamma.analytics.math.curve.Curve _fwdCurve> = $r4;

        r0.<com.opengamma.analytics.financial.model.interestrate.curve.ForwardCurve: double _spot> = d0;

        return;
    }

    public void <init>(double, com.opengamma.analytics.math.curve.Curve)
    {
        com.opengamma.analytics.financial.model.interestrate.curve.ForwardCurve r0;
        double d0;
        com.opengamma.analytics.math.curve.Curve r1, $r4;
        java.lang.Double $r3;

        r0 := @this: com.opengamma.analytics.financial.model.interestrate.curve.ForwardCurve;

        d0 := @parameter0: double;

        r1 := @parameter1: com.opengamma.analytics.math.curve.Curve;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "null driftCurve");

        r0.<com.opengamma.analytics.financial.model.interestrate.curve.ForwardCurve: com.opengamma.analytics.math.curve.Curve _drift> = r1;

        $r3 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d0);

        $r4 = staticinvoke <com.opengamma.analytics.financial.model.interestrate.curve.ForwardCurve: com.opengamma.analytics.math.curve.Curve getForwardCurve(java.lang.Double,com.opengamma.analytics.math.curve.Curve)>($r3, r1);

        r0.<com.opengamma.analytics.financial.model.interestrate.curve.ForwardCurve: com.opengamma.analytics.math.curve.Curve _fwdCurve> = $r4;

        r0.<com.opengamma.analytics.financial.model.interestrate.curve.ForwardCurve: double _spot> = d0;

        return;
    }

    public void <init>(com.opengamma.analytics.math.function.Function1D)
    {
        com.opengamma.analytics.financial.model.interestrate.curve.ForwardCurve r0;
        com.opengamma.analytics.math.function.Function1D r1;
        com.opengamma.analytics.math.curve.FunctionalDoublesCurve $r2;

        r0 := @this: com.opengamma.analytics.financial.model.interestrate.curve.ForwardCurve;

        r1 := @parameter0: com.opengamma.analytics.math.function.Function1D;

        $r2 = staticinvoke <com.opengamma.analytics.math.curve.FunctionalDoublesCurve: com.opengamma.analytics.math.curve.FunctionalDoublesCurve 'from'(com.opengamma.analytics.math.function.Function1D)>(r1);

        specialinvoke r0.<com.opengamma.analytics.financial.model.interestrate.curve.ForwardCurve: void <init>(com.opengamma.analytics.math.curve.Curve)>($r2);

        return;
    }

    public com.opengamma.analytics.math.curve.Curve getForwardCurve()
    {
        com.opengamma.analytics.financial.model.interestrate.curve.ForwardCurve r0;
        com.opengamma.analytics.math.curve.Curve $r1;

        r0 := @this: com.opengamma.analytics.financial.model.interestrate.curve.ForwardCurve;

        $r1 = r0.<com.opengamma.analytics.financial.model.interestrate.curve.ForwardCurve: com.opengamma.analytics.math.curve.Curve _fwdCurve>;

        return $r1;
    }

    public double getForward(double)
    {
        com.opengamma.analytics.financial.model.interestrate.curve.ForwardCurve r0;
        double d0, $d1;
        com.opengamma.analytics.math.curve.Curve $r1;
        java.lang.Double $r2, $r4;
        java.lang.Object $r3;

        r0 := @this: com.opengamma.analytics.financial.model.interestrate.curve.ForwardCurve;

        d0 := @parameter0: double;

        $r1 = r0.<com.opengamma.analytics.financial.model.interestrate.curve.ForwardCurve: com.opengamma.analytics.math.curve.Curve _fwdCurve>;

        $r2 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d0);

        $r3 = virtualinvoke $r1.<com.opengamma.analytics.math.curve.Curve: java.lang.Object getYValue(java.lang.Comparable)>($r2);

        $r4 = (java.lang.Double) $r3;

        $d1 = virtualinvoke $r4.<java.lang.Double: double doubleValue()>();

        return $d1;
    }

    public com.opengamma.analytics.math.curve.Curve getDriftCurve()
    {
        com.opengamma.analytics.financial.model.interestrate.curve.ForwardCurve r0;
        com.opengamma.analytics.math.curve.Curve $r1;

        r0 := @this: com.opengamma.analytics.financial.model.interestrate.curve.ForwardCurve;

        $r1 = r0.<com.opengamma.analytics.financial.model.interestrate.curve.ForwardCurve: com.opengamma.analytics.math.curve.Curve _drift>;

        return $r1;
    }

    public double getDrift(double)
    {
        com.opengamma.analytics.financial.model.interestrate.curve.ForwardCurve r0;
        double d0, $d1;
        com.opengamma.analytics.math.curve.Curve $r1;
        java.lang.Double $r2, $r4;
        java.lang.Object $r3;

        r0 := @this: com.opengamma.analytics.financial.model.interestrate.curve.ForwardCurve;

        d0 := @parameter0: double;

        $r1 = r0.<com.opengamma.analytics.financial.model.interestrate.curve.ForwardCurve: com.opengamma.analytics.math.curve.Curve _drift>;

        $r2 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d0);

        $r3 = virtualinvoke $r1.<com.opengamma.analytics.math.curve.Curve: java.lang.Object getYValue(java.lang.Comparable)>($r2);

        $r4 = (java.lang.Double) $r3;

        $d1 = virtualinvoke $r4.<java.lang.Double: double doubleValue()>();

        return $d1;
    }

    public double getSpot()
    {
        com.opengamma.analytics.financial.model.interestrate.curve.ForwardCurve r0;
        double $d0;

        r0 := @this: com.opengamma.analytics.financial.model.interestrate.curve.ForwardCurve;

        $d0 = r0.<com.opengamma.analytics.financial.model.interestrate.curve.ForwardCurve: double _spot>;

        return $d0;
    }

    protected static com.opengamma.analytics.math.curve.Curve getForwardCurve(double, com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve, com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve)
    {
        double d0;
        com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve r0, r1;
        com.opengamma.analytics.financial.model.interestrate.curve.ForwardCurve$1 $r5;
        com.opengamma.analytics.financial.model.interestrate.curve.ForwardCurve$2 $r6;

        d0 := @parameter0: double;

        r0 := @parameter1: com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve;

        r1 := @parameter2: com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r0, "risk-free curve");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "cost-of-carry curve");

        $r5 = new com.opengamma.analytics.financial.model.interestrate.curve.ForwardCurve$1;

        specialinvoke $r5.<com.opengamma.analytics.financial.model.interestrate.curve.ForwardCurve$1: void <init>(double,com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve,com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve)>(d0, r1, r0);

        $r6 = new com.opengamma.analytics.financial.model.interestrate.curve.ForwardCurve$2;

        specialinvoke $r6.<com.opengamma.analytics.financial.model.interestrate.curve.ForwardCurve$2: void <init>(com.opengamma.analytics.math.function.Function1D,double,com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve,com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve)>($r5, d0, r0, r1);

        return $r6;
    }

    protected static com.opengamma.analytics.math.curve.Curve getForwardCurve(java.lang.Double, java.lang.Double)
    {
        java.lang.Double r0, r1;
        com.opengamma.analytics.financial.model.interestrate.curve.ForwardCurve$3 $r3;
        com.opengamma.analytics.financial.model.interestrate.curve.ForwardCurve$4 $r4;

        r0 := @parameter0: java.lang.Double;

        r1 := @parameter1: java.lang.Double;

        $r3 = new com.opengamma.analytics.financial.model.interestrate.curve.ForwardCurve$3;

        specialinvoke $r3.<com.opengamma.analytics.financial.model.interestrate.curve.ForwardCurve$3: void <init>(java.lang.Double,java.lang.Double)>(r0, r1);

        $r4 = new com.opengamma.analytics.financial.model.interestrate.curve.ForwardCurve$4;

        specialinvoke $r4.<com.opengamma.analytics.financial.model.interestrate.curve.ForwardCurve$4: void <init>(com.opengamma.analytics.math.function.Function1D,java.lang.Double,java.lang.Double)>($r3, r0, r1);

        return $r4;
    }

    protected static com.opengamma.analytics.math.curve.Curve getForwardCurve(java.lang.Double, com.opengamma.analytics.math.curve.Curve)
    {
        java.lang.Double r0;
        com.opengamma.analytics.math.curve.Curve r1;
        com.opengamma.analytics.financial.model.interestrate.curve.ForwardCurve$5 $r3;
        com.opengamma.analytics.financial.model.interestrate.curve.ForwardCurve$6 $r4;

        r0 := @parameter0: java.lang.Double;

        r1 := @parameter1: com.opengamma.analytics.math.curve.Curve;

        $r3 = new com.opengamma.analytics.financial.model.interestrate.curve.ForwardCurve$5;

        specialinvoke $r3.<com.opengamma.analytics.financial.model.interestrate.curve.ForwardCurve$5: void <init>(com.opengamma.analytics.math.curve.Curve,java.lang.Double)>(r1, r0);

        $r4 = new com.opengamma.analytics.financial.model.interestrate.curve.ForwardCurve$6;

        specialinvoke $r4.<com.opengamma.analytics.financial.model.interestrate.curve.ForwardCurve$6: void <init>(com.opengamma.analytics.math.function.Function1D,java.lang.Double,com.opengamma.analytics.math.curve.Curve)>($r3, r0, r1);

        return $r4;
    }

    protected static com.opengamma.analytics.math.curve.Curve getDriftCurve(com.opengamma.analytics.math.curve.Curve)
    {
        com.opengamma.analytics.math.curve.Curve r0;
        com.opengamma.analytics.financial.model.interestrate.curve.ForwardCurve$7 $r2;
        com.opengamma.analytics.financial.model.interestrate.curve.ForwardCurve$8 $r3;

        r0 := @parameter0: com.opengamma.analytics.math.curve.Curve;

        $r2 = new com.opengamma.analytics.financial.model.interestrate.curve.ForwardCurve$7;

        specialinvoke $r2.<com.opengamma.analytics.financial.model.interestrate.curve.ForwardCurve$7: void <init>(com.opengamma.analytics.math.curve.Curve)>(r0);

        $r3 = new com.opengamma.analytics.financial.model.interestrate.curve.ForwardCurve$8;

        specialinvoke $r3.<com.opengamma.analytics.financial.model.interestrate.curve.ForwardCurve$8: void <init>(com.opengamma.analytics.math.function.Function1D,com.opengamma.analytics.math.curve.Curve)>($r2, r0);

        return $r3;
    }

    public com.opengamma.analytics.financial.model.interestrate.curve.ForwardCurve withFractionalShift(double)
    {
        com.opengamma.analytics.financial.model.interestrate.curve.ForwardCurve r0, $r3;
        double d0;
        byte $b0;
        com.opengamma.analytics.financial.model.interestrate.curve.ForwardCurve$9 $r2;
        com.opengamma.analytics.math.curve.FunctionalDoublesCurve $r4;
        com.opengamma.analytics.math.curve.Curve $r5;
        boolean $z0;

        r0 := @this: com.opengamma.analytics.financial.model.interestrate.curve.ForwardCurve;

        d0 := @parameter0: double;

        $b0 = d0 cmpl -1.0;

        if $b0 <= 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z0, "shift must be > -1");

        $r2 = new com.opengamma.analytics.financial.model.interestrate.curve.ForwardCurve$9;

        specialinvoke $r2.<com.opengamma.analytics.financial.model.interestrate.curve.ForwardCurve$9: void <init>(com.opengamma.analytics.financial.model.interestrate.curve.ForwardCurve,double)>(r0, d0);

        $r3 = new com.opengamma.analytics.financial.model.interestrate.curve.ForwardCurve;

        $r4 = staticinvoke <com.opengamma.analytics.math.curve.FunctionalDoublesCurve: com.opengamma.analytics.math.curve.FunctionalDoublesCurve 'from'(com.opengamma.analytics.math.function.Function1D)>($r2);

        $r5 = r0.<com.opengamma.analytics.financial.model.interestrate.curve.ForwardCurve: com.opengamma.analytics.math.curve.Curve _drift>;

        specialinvoke $r3.<com.opengamma.analytics.financial.model.interestrate.curve.ForwardCurve: void <init>(com.opengamma.analytics.math.curve.Curve,com.opengamma.analytics.math.curve.Curve)>($r4, $r5);

        return $r3;
    }

    public int hashCode()
    {
        com.opengamma.analytics.financial.model.interestrate.curve.ForwardCurve r0;
        long l1, $l6, $l7;
        com.opengamma.analytics.math.curve.Curve $r1, $r2;
        int $i2, $i3, $i4, $i5, $i8, $i9, i11, i12, i13;
        double $d0;

        r0 := @this: com.opengamma.analytics.financial.model.interestrate.curve.ForwardCurve;

        $i2 = 31 * 1;

        $r1 = r0.<com.opengamma.analytics.financial.model.interestrate.curve.ForwardCurve: com.opengamma.analytics.math.curve.Curve _drift>;

        $i3 = virtualinvoke $r1.<com.opengamma.analytics.math.curve.Curve: int hashCode()>();

        i11 = $i2 + $i3;

        $i4 = 31 * i11;

        $r2 = r0.<com.opengamma.analytics.financial.model.interestrate.curve.ForwardCurve: com.opengamma.analytics.math.curve.Curve _fwdCurve>;

        $i5 = virtualinvoke $r2.<com.opengamma.analytics.math.curve.Curve: int hashCode()>();

        i12 = $i4 + $i5;

        $d0 = r0.<com.opengamma.analytics.financial.model.interestrate.curve.ForwardCurve: double _spot>;

        l1 = staticinvoke <java.lang.Double: long doubleToLongBits(double)>($d0);

        $i9 = 31 * i12;

        $l6 = l1 >>> 32;

        $l7 = l1 ^ $l6;

        $i8 = (int) $l7;

        i13 = $i9 + $i8;

        return i13;
    }

    public boolean equals(java.lang.Object)
    {
        com.opengamma.analytics.financial.model.interestrate.curve.ForwardCurve r0, r2;
        java.lang.Object r1;
        java.lang.Class $r3, $r4;
        com.opengamma.analytics.math.curve.Curve $r5, $r6, $r7, $r8;
        boolean $z0, $z1;
        double $d0, $d1;
        long $l0, $l1;
        byte $b2;

        r0 := @this: com.opengamma.analytics.financial.model.interestrate.curve.ForwardCurve;

        r1 := @parameter0: java.lang.Object;

        if r0 != r1 goto label1;

        return 1;

     label1:
        if r1 != null goto label2;

        return 0;

     label2:
        $r3 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r4 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        if $r3 == $r4 goto label3;

        return 0;

     label3:
        r2 = (com.opengamma.analytics.financial.model.interestrate.curve.ForwardCurve) r1;

        $r6 = r0.<com.opengamma.analytics.financial.model.interestrate.curve.ForwardCurve: com.opengamma.analytics.math.curve.Curve _drift>;

        $r5 = r2.<com.opengamma.analytics.financial.model.interestrate.curve.ForwardCurve: com.opengamma.analytics.math.curve.Curve _drift>;

        $z0 = staticinvoke <org.apache.commons.lang.ObjectUtils: boolean equals(java.lang.Object,java.lang.Object)>($r6, $r5);

        if $z0 != 0 goto label4;

        return 0;

     label4:
        $r8 = r0.<com.opengamma.analytics.financial.model.interestrate.curve.ForwardCurve: com.opengamma.analytics.math.curve.Curve _fwdCurve>;

        $r7 = r2.<com.opengamma.analytics.financial.model.interestrate.curve.ForwardCurve: com.opengamma.analytics.math.curve.Curve _fwdCurve>;

        $z1 = staticinvoke <org.apache.commons.lang.ObjectUtils: boolean equals(java.lang.Object,java.lang.Object)>($r8, $r7);

        if $z1 != 0 goto label5;

        return 0;

     label5:
        $d0 = r0.<com.opengamma.analytics.financial.model.interestrate.curve.ForwardCurve: double _spot>;

        $l0 = staticinvoke <java.lang.Double: long doubleToLongBits(double)>($d0);

        $d1 = r2.<com.opengamma.analytics.financial.model.interestrate.curve.ForwardCurve: double _spot>;

        $l1 = staticinvoke <java.lang.Double: long doubleToLongBits(double)>($d1);

        $b2 = $l0 cmp $l1;

        if $b2 == 0 goto label6;

        return 0;

     label6:
        return 1;
    }

    static com.opengamma.analytics.math.integration.RungeKuttaIntegrator1D access$000()
    {
        com.opengamma.analytics.math.integration.RungeKuttaIntegrator1D $r0;

        $r0 = <com.opengamma.analytics.financial.model.interestrate.curve.ForwardCurve: com.opengamma.analytics.math.integration.RungeKuttaIntegrator1D INTEGRATOR>;

        return $r0;
    }

    static com.opengamma.analytics.math.curve.Curve access$100(com.opengamma.analytics.financial.model.interestrate.curve.ForwardCurve)
    {
        com.opengamma.analytics.financial.model.interestrate.curve.ForwardCurve r0;
        com.opengamma.analytics.math.curve.Curve $r1;

        r0 := @parameter0: com.opengamma.analytics.financial.model.interestrate.curve.ForwardCurve;

        $r1 = r0.<com.opengamma.analytics.financial.model.interestrate.curve.ForwardCurve: com.opengamma.analytics.math.curve.Curve _fwdCurve>;

        return $r1;
    }

    static void <clinit>()
    {
        com.opengamma.analytics.math.integration.RungeKuttaIntegrator1D $r0;

        $r0 = new com.opengamma.analytics.math.integration.RungeKuttaIntegrator1D;

        specialinvoke $r0.<com.opengamma.analytics.math.integration.RungeKuttaIntegrator1D: void <init>()>();

        <com.opengamma.analytics.financial.model.interestrate.curve.ForwardCurve: com.opengamma.analytics.math.integration.RungeKuttaIntegrator1D INTEGRATOR> = $r0;

        return;
    }
}
