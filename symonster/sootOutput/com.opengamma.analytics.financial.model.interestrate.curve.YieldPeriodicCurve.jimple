public class com.opengamma.analytics.financial.model.interestrate.curve.YieldPeriodicCurve extends com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve
{
    private final com.opengamma.analytics.math.curve.DoublesCurve _curve;
    private final int _compoundingPeriodsPerYear;

    public void <init>(java.lang.String, int, com.opengamma.analytics.math.curve.DoublesCurve)
    {
        com.opengamma.analytics.financial.model.interestrate.curve.YieldPeriodicCurve r0;
        java.lang.String r1;
        int i0;
        com.opengamma.analytics.math.curve.DoublesCurve r2;

        r0 := @this: com.opengamma.analytics.financial.model.interestrate.curve.YieldPeriodicCurve;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r2 := @parameter2: com.opengamma.analytics.math.curve.DoublesCurve;

        specialinvoke r0.<com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve: void <init>(java.lang.String)>(r1);

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, "Curve");

        r0.<com.opengamma.analytics.financial.model.interestrate.curve.YieldPeriodicCurve: com.opengamma.analytics.math.curve.DoublesCurve _curve> = r2;

        r0.<com.opengamma.analytics.financial.model.interestrate.curve.YieldPeriodicCurve: int _compoundingPeriodsPerYear> = i0;

        return;
    }

    public static com.opengamma.analytics.financial.model.interestrate.curve.YieldPeriodicCurve 'from'(int, com.opengamma.analytics.math.curve.DoublesCurve)
    {
        int i0;
        com.opengamma.analytics.math.curve.DoublesCurve r0;
        com.opengamma.analytics.financial.model.interestrate.curve.YieldPeriodicCurve $r2;
        java.lang.String $r3;

        i0 := @parameter0: int;

        r0 := @parameter1: com.opengamma.analytics.math.curve.DoublesCurve;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r0, "Curve");

        $r2 = new com.opengamma.analytics.financial.model.interestrate.curve.YieldPeriodicCurve;

        $r3 = virtualinvoke r0.<com.opengamma.analytics.math.curve.DoublesCurve: java.lang.String getName()>();

        specialinvoke $r2.<com.opengamma.analytics.financial.model.interestrate.curve.YieldPeriodicCurve: void <init>(java.lang.String,int,com.opengamma.analytics.math.curve.DoublesCurve)>($r3, i0, r0);

        return $r2;
    }

    public static com.opengamma.analytics.financial.model.interestrate.curve.YieldPeriodicCurve fromYieldsInterpolated(double[], double[], int, com.opengamma.analytics.math.interpolation.Interpolator1D, java.lang.String)
    {
        double[] r0, r1, r4;
        int i0, i1, $i2, i3;
        com.opengamma.analytics.math.interpolation.Interpolator1D r2;
        java.lang.String r3;
        com.opengamma.analytics.math.curve.InterpolatedDoublesCurve $r6;
        com.opengamma.analytics.financial.model.interestrate.curve.YieldPeriodicCurve $r7;
        com.opengamma.analytics.financial.interestrate.ContinuousInterestRate $r8;
        double $d0, $d1;
        com.opengamma.analytics.financial.interestrate.PeriodicInterestRate $r9;
        boolean $z0;

        r0 := @parameter0: double[];

        r1 := @parameter1: double[];

        i0 := @parameter2: int;

        r2 := @parameter3: com.opengamma.analytics.math.interpolation.Interpolator1D;

        r3 := @parameter4: java.lang.String;

        i1 = lengthof r1;

        $i2 = lengthof r0;

        if $i2 != i1 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z0, "Yields array of incorrect length");

        r4 = newarray (double)[i1];

        i3 = 0;

     label3:
        if i3 >= i1 goto label4;

        $r8 = new com.opengamma.analytics.financial.interestrate.ContinuousInterestRate;

        $d0 = r1[i3];

        specialinvoke $r8.<com.opengamma.analytics.financial.interestrate.ContinuousInterestRate: void <init>(double)>($d0);

        $r9 = virtualinvoke $r8.<com.opengamma.analytics.financial.interestrate.InterestRate: com.opengamma.analytics.financial.interestrate.PeriodicInterestRate toPeriodic(int)>(i0);

        $d1 = virtualinvoke $r9.<com.opengamma.analytics.financial.interestrate.PeriodicInterestRate: double getRate()>();

        r4[i3] = $d1;

        i3 = i3 + 1;

        goto label3;

     label4:
        $r6 = new com.opengamma.analytics.math.curve.InterpolatedDoublesCurve;

        specialinvoke $r6.<com.opengamma.analytics.math.curve.InterpolatedDoublesCurve: void <init>(double[],double[],com.opengamma.analytics.math.interpolation.Interpolator1D,boolean)>(r0, r4, r2, 0);

        $r7 = new com.opengamma.analytics.financial.model.interestrate.curve.YieldPeriodicCurve;

        specialinvoke $r7.<com.opengamma.analytics.financial.model.interestrate.curve.YieldPeriodicCurve: void <init>(java.lang.String,int,com.opengamma.analytics.math.curve.DoublesCurve)>(r3, i0, $r6);

        return $r7;
    }

    public double getInterestRate(java.lang.Double)
    {
        com.opengamma.analytics.financial.model.interestrate.curve.YieldPeriodicCurve r0;
        java.lang.Double r1, $r4;
        double d0, $d1, $d2, $d3, $d4, $d5, $d6;
        com.opengamma.analytics.math.curve.DoublesCurve $r2;
        java.lang.Object $r3;
        int $i0, $i1;

        r0 := @this: com.opengamma.analytics.financial.model.interestrate.curve.YieldPeriodicCurve;

        r1 := @parameter0: java.lang.Double;

        $r2 = r0.<com.opengamma.analytics.financial.model.interestrate.curve.YieldPeriodicCurve: com.opengamma.analytics.math.curve.DoublesCurve _curve>;

        $r3 = virtualinvoke $r2.<com.opengamma.analytics.math.curve.DoublesCurve: java.lang.Object getYValue(java.lang.Comparable)>(r1);

        $r4 = (java.lang.Double) $r3;

        d0 = virtualinvoke $r4.<java.lang.Double: double doubleValue()>();

        $i0 = r0.<com.opengamma.analytics.financial.model.interestrate.curve.YieldPeriodicCurve: int _compoundingPeriodsPerYear>;

        $d4 = (double) $i0;

        $i1 = r0.<com.opengamma.analytics.financial.model.interestrate.curve.YieldPeriodicCurve: int _compoundingPeriodsPerYear>;

        $d1 = (double) $i1;

        $d2 = d0 / $d1;

        $d3 = 1.0 + $d2;

        $d5 = staticinvoke <java.lang.Math: double log(double)>($d3);

        $d6 = $d4 * $d5;

        return $d6;
    }

    public double getForwardRate(double)
    {
        com.opengamma.analytics.financial.model.interestrate.curve.YieldPeriodicCurve r0;
        double d0, $d1, $d2, $d3, $d4;
        com.opengamma.analytics.math.curve.DoublesCurve $r1, $r5;
        java.lang.Double $r2, $r4;
        java.lang.Object $r3;

        r0 := @this: com.opengamma.analytics.financial.model.interestrate.curve.YieldPeriodicCurve;

        d0 := @parameter0: double;

        $r1 = r0.<com.opengamma.analytics.financial.model.interestrate.curve.YieldPeriodicCurve: com.opengamma.analytics.math.curve.DoublesCurve _curve>;

        $r2 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d0);

        $r3 = virtualinvoke $r1.<com.opengamma.analytics.math.curve.DoublesCurve: java.lang.Object getYValue(java.lang.Comparable)>($r2);

        $r4 = (java.lang.Double) $r3;

        $d1 = virtualinvoke $r4.<java.lang.Double: double doubleValue()>();

        $r5 = r0.<com.opengamma.analytics.financial.model.interestrate.curve.YieldPeriodicCurve: com.opengamma.analytics.math.curve.DoublesCurve _curve>;

        $d2 = virtualinvoke $r5.<com.opengamma.analytics.math.curve.DoublesCurve: double getDyDx(double)>(d0);

        $d3 = d0 * $d2;

        $d4 = $d1 + $d3;

        return $d4;
    }

    public double getDiscountFactor(double)
    {
        com.opengamma.analytics.financial.model.interestrate.curve.YieldPeriodicCurve r0;
        double d0, d1, $d2, $d3, $d4, $d5, $d6, $d7;
        com.opengamma.analytics.math.curve.DoublesCurve $r1;
        java.lang.Double $r2, $r4;
        java.lang.Object $r3;
        int $i0, $i1, $i2;

        r0 := @this: com.opengamma.analytics.financial.model.interestrate.curve.YieldPeriodicCurve;

        d0 := @parameter0: double;

        $r1 = r0.<com.opengamma.analytics.financial.model.interestrate.curve.YieldPeriodicCurve: com.opengamma.analytics.math.curve.DoublesCurve _curve>;

        $r2 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d0);

        $r3 = virtualinvoke $r1.<com.opengamma.analytics.math.curve.DoublesCurve: java.lang.Object getYValue(java.lang.Comparable)>($r2);

        $r4 = (java.lang.Double) $r3;

        d1 = virtualinvoke $r4.<java.lang.Double: double doubleValue()>();

        $i0 = r0.<com.opengamma.analytics.financial.model.interestrate.curve.YieldPeriodicCurve: int _compoundingPeriodsPerYear>;

        $d2 = (double) $i0;

        $d3 = d1 / $d2;

        $d6 = 1.0 + $d3;

        $i1 = r0.<com.opengamma.analytics.financial.model.interestrate.curve.YieldPeriodicCurve: int _compoundingPeriodsPerYear>;

        $i2 = neg $i1;

        $d4 = (double) $i2;

        $d5 = $d4 * d0;

        $d7 = staticinvoke <java.lang.Math: double pow(double,double)>($d6, $d5);

        return $d7;
    }

    public double getPeriodicInterestRate(double, int)
    {
        com.opengamma.analytics.financial.model.interestrate.curve.YieldPeriodicCurve r0;
        double d0, $d1, $d2, $d3;
        int i0, $i1, $i2;
        com.opengamma.analytics.financial.interestrate.PeriodicInterestRate r2, $r3;
        com.opengamma.analytics.math.curve.DoublesCurve $r4, $r8;
        java.lang.Double $r5, $r7, $r9, $r11;
        java.lang.Object $r6, $r10;

        r0 := @this: com.opengamma.analytics.financial.model.interestrate.curve.YieldPeriodicCurve;

        d0 := @parameter0: double;

        i0 := @parameter1: int;

        $i1 = r0.<com.opengamma.analytics.financial.model.interestrate.curve.YieldPeriodicCurve: int _compoundingPeriodsPerYear>;

        if i0 != $i1 goto label1;

        $r8 = r0.<com.opengamma.analytics.financial.model.interestrate.curve.YieldPeriodicCurve: com.opengamma.analytics.math.curve.DoublesCurve _curve>;

        $r9 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d0);

        $r10 = virtualinvoke $r8.<com.opengamma.analytics.math.curve.DoublesCurve: java.lang.Object getYValue(java.lang.Comparable)>($r9);

        $r11 = (java.lang.Double) $r10;

        $d3 = virtualinvoke $r11.<java.lang.Double: double doubleValue()>();

        return $d3;

     label1:
        $r3 = new com.opengamma.analytics.financial.interestrate.PeriodicInterestRate;

        $r4 = r0.<com.opengamma.analytics.financial.model.interestrate.curve.YieldPeriodicCurve: com.opengamma.analytics.math.curve.DoublesCurve _curve>;

        $r5 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d0);

        $r6 = virtualinvoke $r4.<com.opengamma.analytics.math.curve.DoublesCurve: java.lang.Object getYValue(java.lang.Comparable)>($r5);

        $r7 = (java.lang.Double) $r6;

        $d1 = virtualinvoke $r7.<java.lang.Double: double doubleValue()>();

        $i2 = r0.<com.opengamma.analytics.financial.model.interestrate.curve.YieldPeriodicCurve: int _compoundingPeriodsPerYear>;

        specialinvoke $r3.<com.opengamma.analytics.financial.interestrate.PeriodicInterestRate: void <init>(double,int)>($d1, $i2);

        r2 = virtualinvoke $r3.<com.opengamma.analytics.financial.interestrate.InterestRate: com.opengamma.analytics.financial.interestrate.PeriodicInterestRate toPeriodic(int)>(i0);

        $d2 = virtualinvoke r2.<com.opengamma.analytics.financial.interestrate.InterestRate: double getRate()>();

        return $d2;
    }

    public double[] getInterestRateParameterSensitivity(double)
    {
        com.opengamma.analytics.financial.model.interestrate.curve.YieldPeriodicCurve r0;
        double d0, d1, d3, $d4, $d5, $d6, $d7, $d8, $d9;
        java.lang.Double[] r1;
        double[] r2;
        com.opengamma.analytics.math.curve.DoublesCurve $r3, $r7;
        java.lang.Double $r4, $r6, $r8, $r9;
        java.lang.Object $r5;
        int $i0, $i1, $i2, i3;

        r0 := @this: com.opengamma.analytics.financial.model.interestrate.curve.YieldPeriodicCurve;

        d0 := @parameter0: double;

        $r3 = r0.<com.opengamma.analytics.financial.model.interestrate.curve.YieldPeriodicCurve: com.opengamma.analytics.math.curve.DoublesCurve _curve>;

        $r4 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d0);

        $r5 = virtualinvoke $r3.<com.opengamma.analytics.math.curve.DoublesCurve: java.lang.Object getYValue(java.lang.Comparable)>($r4);

        $r6 = (java.lang.Double) $r5;

        d1 = virtualinvoke $r6.<java.lang.Double: double doubleValue()>();

        $i0 = r0.<com.opengamma.analytics.financial.model.interestrate.curve.YieldPeriodicCurve: int _compoundingPeriodsPerYear>;

        $d4 = (double) $i0;

        $d5 = d1 / $d4;

        $d6 = 1.0 + $d5;

        $d7 = 1.0 / $d6;

        d3 = $d7 * 1.0;

        $r7 = r0.<com.opengamma.analytics.financial.model.interestrate.curve.YieldPeriodicCurve: com.opengamma.analytics.math.curve.DoublesCurve _curve>;

        $r8 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d0);

        r1 = virtualinvoke $r7.<com.opengamma.analytics.math.curve.DoublesCurve: java.lang.Double[] getYValueParameterSensitivity(java.lang.Double)>($r8);

        $i1 = lengthof r1;

        r2 = newarray (double)[$i1];

        i3 = 0;

     label1:
        $i2 = lengthof r1;

        if i3 >= $i2 goto label2;

        $r9 = r1[i3];

        $d8 = virtualinvoke $r9.<java.lang.Double: double doubleValue()>();

        $d9 = $d8 * d3;

        r2[i3] = $d9;

        i3 = i3 + 1;

        goto label1;

     label2:
        return r2;
    }

    public int getNumberOfParameters()
    {
        com.opengamma.analytics.financial.model.interestrate.curve.YieldPeriodicCurve r0;
        com.opengamma.analytics.math.curve.DoublesCurve $r1;
        int $i0;

        r0 := @this: com.opengamma.analytics.financial.model.interestrate.curve.YieldPeriodicCurve;

        $r1 = r0.<com.opengamma.analytics.financial.model.interestrate.curve.YieldPeriodicCurve: com.opengamma.analytics.math.curve.DoublesCurve _curve>;

        $i0 = virtualinvoke $r1.<com.opengamma.analytics.math.curve.DoublesCurve: int size()>();

        return $i0;
    }

    public java.util.List getUnderlyingCurvesNames()
    {
        com.opengamma.analytics.financial.model.interestrate.curve.YieldPeriodicCurve r0;
        java.util.ArrayList $r1;

        r0 := @this: com.opengamma.analytics.financial.model.interestrate.curve.YieldPeriodicCurve;

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        return $r1;
    }

    public com.opengamma.analytics.math.curve.DoublesCurve getCurve()
    {
        com.opengamma.analytics.financial.model.interestrate.curve.YieldPeriodicCurve r0;
        com.opengamma.analytics.math.curve.DoublesCurve $r1;

        r0 := @this: com.opengamma.analytics.financial.model.interestrate.curve.YieldPeriodicCurve;

        $r1 = r0.<com.opengamma.analytics.financial.model.interestrate.curve.YieldPeriodicCurve: com.opengamma.analytics.math.curve.DoublesCurve _curve>;

        return $r1;
    }

    public int getCompoundingPeriodsPerYear()
    {
        com.opengamma.analytics.financial.model.interestrate.curve.YieldPeriodicCurve r0;
        int $i0;

        r0 := @this: com.opengamma.analytics.financial.model.interestrate.curve.YieldPeriodicCurve;

        $i0 = r0.<com.opengamma.analytics.financial.model.interestrate.curve.YieldPeriodicCurve: int _compoundingPeriodsPerYear>;

        return $i0;
    }

    public int hashCode()
    {
        com.opengamma.analytics.financial.model.interestrate.curve.YieldPeriodicCurve r0;
        com.opengamma.analytics.math.curve.DoublesCurve $r1;
        int $i1, $i2, i4;

        r0 := @this: com.opengamma.analytics.financial.model.interestrate.curve.YieldPeriodicCurve;

        $i1 = 31 * 1;

        $r1 = r0.<com.opengamma.analytics.financial.model.interestrate.curve.YieldPeriodicCurve: com.opengamma.analytics.math.curve.DoublesCurve _curve>;

        $i2 = virtualinvoke $r1.<com.opengamma.analytics.math.curve.DoublesCurve: int hashCode()>();

        i4 = $i1 + $i2;

        return i4;
    }

    public boolean equals(java.lang.Object)
    {
        com.opengamma.analytics.financial.model.interestrate.curve.YieldPeriodicCurve r0, r2;
        java.lang.Object r1;
        java.lang.Class $r3, $r4;
        com.opengamma.analytics.math.curve.DoublesCurve $r5, $r6;
        boolean $z0;

        r0 := @this: com.opengamma.analytics.financial.model.interestrate.curve.YieldPeriodicCurve;

        r1 := @parameter0: java.lang.Object;

        if r0 != r1 goto label1;

        return 1;

     label1:
        if r1 != null goto label2;

        return 0;

     label2:
        $r3 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r4 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        if $r3 == $r4 goto label3;

        return 0;

     label3:
        r2 = (com.opengamma.analytics.financial.model.interestrate.curve.YieldPeriodicCurve) r1;

        $r6 = r0.<com.opengamma.analytics.financial.model.interestrate.curve.YieldPeriodicCurve: com.opengamma.analytics.math.curve.DoublesCurve _curve>;

        $r5 = r2.<com.opengamma.analytics.financial.model.interestrate.curve.YieldPeriodicCurve: com.opengamma.analytics.math.curve.DoublesCurve _curve>;

        $z0 = staticinvoke <org.apache.commons.lang.ObjectUtils: boolean equals(java.lang.Object,java.lang.Object)>($r6, $r5);

        return $z0;
    }

    public volatile double getInterestRate(java.lang.Object)
    {
        com.opengamma.analytics.financial.model.interestrate.curve.YieldPeriodicCurve r0;
        java.lang.Object r1;
        java.lang.Double $r2;
        double $d0;

        r0 := @this: com.opengamma.analytics.financial.model.interestrate.curve.YieldPeriodicCurve;

        r1 := @parameter0: java.lang.Object;

        $r2 = (java.lang.Double) r1;

        $d0 = virtualinvoke r0.<com.opengamma.analytics.financial.model.interestrate.curve.YieldPeriodicCurve: double getInterestRate(java.lang.Double)>($r2);

        return $d0;
    }
}
