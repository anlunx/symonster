public final class com.opengamma.analytics.math.curve.DoublesCurveInterpolatedAnchor extends com.opengamma.analytics.math.curve.InterpolatedDoublesCurve
{
    private int _anchorIndex;

    private void <init>(double[], double[], int, com.opengamma.analytics.math.interpolation.Interpolator1D, java.lang.String)
    {
        com.opengamma.analytics.math.curve.DoublesCurveInterpolatedAnchor r0;
        double[] r1, r2;
        int i0;
        com.opengamma.analytics.math.interpolation.Interpolator1D r3;
        java.lang.String r4;

        r0 := @this: com.opengamma.analytics.math.curve.DoublesCurveInterpolatedAnchor;

        r1 := @parameter0: double[];

        r2 := @parameter1: double[];

        i0 := @parameter2: int;

        r3 := @parameter3: com.opengamma.analytics.math.interpolation.Interpolator1D;

        r4 := @parameter4: java.lang.String;

        specialinvoke r0.<com.opengamma.analytics.math.curve.InterpolatedDoublesCurve: void <init>(double[],double[],com.opengamma.analytics.math.interpolation.Interpolator1D,boolean,java.lang.String)>(r1, r2, r3, 1, r4);

        r0.<com.opengamma.analytics.math.curve.DoublesCurveInterpolatedAnchor: int _anchorIndex> = i0;

        return;
    }

    public static com.opengamma.analytics.math.curve.DoublesCurveInterpolatedAnchor 'from'(double[], double[], double, com.opengamma.analytics.math.interpolation.Interpolator1D, java.lang.String)
    {
        double[] r0, r1, r4, r5;
        double d0;
        com.opengamma.analytics.math.interpolation.Interpolator1D r2;
        java.lang.String r3;
        int i0, i1, $i2, $i3, $i4;
        com.opengamma.analytics.math.curve.DoublesCurveInterpolatedAnchor $r8;
        boolean $z0;

        r0 := @parameter0: double[];

        r1 := @parameter1: double[];

        d0 := @parameter2: double;

        r2 := @parameter3: com.opengamma.analytics.math.interpolation.Interpolator1D;

        r3 := @parameter4: java.lang.String;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r0, "X data");

        i0 = lengthof r0;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "Y data");

        $i2 = lengthof r1;

        if i0 != $i2 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z0, "Data of incorrect length.");

        $i3 = i0 + 1;

        r4 = newarray (double)[$i3];

        $i4 = i0 + 1;

        r5 = newarray (double)[$i4];

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r0, 0, r4, 0, i0);

        r4[i0] = d0;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, 0, r5, 0, i0);

        staticinvoke <com.opengamma.util.ParallelArrayBinarySort: void parallelBinarySort(double[],double[])>(r4, r5);

        i1 = staticinvoke <org.apache.commons.lang.ArrayUtils: int indexOf(double[],double)>(r4, d0);

        $r8 = new com.opengamma.analytics.math.curve.DoublesCurveInterpolatedAnchor;

        specialinvoke $r8.<com.opengamma.analytics.math.curve.DoublesCurveInterpolatedAnchor: void <init>(double[],double[],int,com.opengamma.analytics.math.interpolation.Interpolator1D,java.lang.String)>(r4, r5, i1, r2, r3);

        return $r8;
    }

    public static com.opengamma.analytics.math.curve.DoublesCurveInterpolatedAnchor 'from'(double[], double[], double, double, com.opengamma.analytics.math.interpolation.Interpolator1D, java.lang.String)
    {
        double[] r0, r1, r4, r5;
        double d0, d1;
        com.opengamma.analytics.math.interpolation.Interpolator1D r2;
        java.lang.String r3;
        int i0, i1, $i2, $i3, $i4;
        com.opengamma.analytics.math.curve.DoublesCurveInterpolatedAnchor $r8;
        boolean $z0;

        r0 := @parameter0: double[];

        r1 := @parameter1: double[];

        d0 := @parameter2: double;

        d1 := @parameter3: double;

        r2 := @parameter4: com.opengamma.analytics.math.interpolation.Interpolator1D;

        r3 := @parameter5: java.lang.String;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r0, "X data");

        i0 = lengthof r0;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "Y data");

        $i2 = lengthof r1;

        if i0 != $i2 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z0, "Data of incorrect length.");

        $i3 = i0 + 1;

        r4 = newarray (double)[$i3];

        $i4 = i0 + 1;

        r5 = newarray (double)[$i4];

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r0, 0, r4, 0, i0);

        r4[i0] = d0;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, 0, r5, 0, i0);

        r5[i0] = d1;

        staticinvoke <com.opengamma.util.ParallelArrayBinarySort: void parallelBinarySort(double[],double[])>(r4, r5);

        i1 = staticinvoke <org.apache.commons.lang.ArrayUtils: int indexOf(double[],double)>(r4, d0);

        $r8 = new com.opengamma.analytics.math.curve.DoublesCurveInterpolatedAnchor;

        specialinvoke $r8.<com.opengamma.analytics.math.curve.DoublesCurveInterpolatedAnchor: void <init>(double[],double[],int,com.opengamma.analytics.math.interpolation.Interpolator1D,java.lang.String)>(r4, r5, i1, r2, r3);

        return $r8;
    }

    protected void <init>()
    {
        com.opengamma.analytics.math.curve.DoublesCurveInterpolatedAnchor r0;

        r0 := @this: com.opengamma.analytics.math.curve.DoublesCurveInterpolatedAnchor;

        specialinvoke r0.<com.opengamma.analytics.math.curve.InterpolatedDoublesCurve: void <init>()>();

        return;
    }

    public int getAnchorIndex()
    {
        com.opengamma.analytics.math.curve.DoublesCurveInterpolatedAnchor r0;
        int $i0;

        r0 := @this: com.opengamma.analytics.math.curve.DoublesCurveInterpolatedAnchor;

        $i0 = r0.<com.opengamma.analytics.math.curve.DoublesCurveInterpolatedAnchor: int _anchorIndex>;

        return $i0;
    }

    public int size()
    {
        com.opengamma.analytics.math.curve.DoublesCurveInterpolatedAnchor r0;
        int $i0, $i1;

        r0 := @this: com.opengamma.analytics.math.curve.DoublesCurveInterpolatedAnchor;

        $i0 = specialinvoke r0.<com.opengamma.analytics.math.curve.InterpolatedDoublesCurve: int size()>();

        $i1 = $i0 - 1;

        return $i1;
    }

    public java.lang.Double[] getYValueParameterSensitivity(java.lang.Double)
    {
        com.opengamma.analytics.math.curve.DoublesCurveInterpolatedAnchor r0;
        java.lang.Double r1;
        java.lang.Double[] r2, r3;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9;

        r0 := @this: com.opengamma.analytics.math.curve.DoublesCurveInterpolatedAnchor;

        r1 := @parameter0: java.lang.Double;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "x");

        r2 = specialinvoke r0.<com.opengamma.analytics.math.curve.InterpolatedDoublesCurve: java.lang.Double[] getYValueParameterSensitivity(java.lang.Double)>(r1);

        $i0 = lengthof r2;

        $i1 = $i0 - 1;

        r3 = newarray (java.lang.Double)[$i1];

        $i2 = r0.<com.opengamma.analytics.math.curve.DoublesCurveInterpolatedAnchor: int _anchorIndex>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r2, 0, r3, 0, $i2);

        $i3 = r0.<com.opengamma.analytics.math.curve.DoublesCurveInterpolatedAnchor: int _anchorIndex>;

        $i9 = $i3 + 1;

        $i8 = r0.<com.opengamma.analytics.math.curve.DoublesCurveInterpolatedAnchor: int _anchorIndex>;

        $i5 = lengthof r2;

        $i4 = r0.<com.opengamma.analytics.math.curve.DoublesCurveInterpolatedAnchor: int _anchorIndex>;

        $i6 = $i5 - $i4;

        $i7 = $i6 - 1;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r2, $i9, r3, $i8, $i7);

        return r3;
    }

    public boolean equals(java.lang.Object)
    {
        com.opengamma.analytics.math.curve.DoublesCurveInterpolatedAnchor r0, r2;
        java.lang.Object r1;
        boolean $z0;
        java.lang.Class $r3, $r4;
        int $i0, $i1;

        r0 := @this: com.opengamma.analytics.math.curve.DoublesCurveInterpolatedAnchor;

        r1 := @parameter0: java.lang.Object;

        if r0 != r1 goto label1;

        return 1;

     label1:
        $z0 = specialinvoke r0.<com.opengamma.analytics.math.curve.InterpolatedDoublesCurve: boolean equals(java.lang.Object)>(r1);

        if $z0 != 0 goto label2;

        return 0;

     label2:
        $r3 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r4 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        if $r3 == $r4 goto label3;

        return 0;

     label3:
        r2 = (com.opengamma.analytics.math.curve.DoublesCurveInterpolatedAnchor) r1;

        $i1 = r0.<com.opengamma.analytics.math.curve.DoublesCurveInterpolatedAnchor: int _anchorIndex>;

        $i0 = r2.<com.opengamma.analytics.math.curve.DoublesCurveInterpolatedAnchor: int _anchorIndex>;

        if $i1 == $i0 goto label4;

        return 0;

     label4:
        return 1;
    }

    public int hashCode()
    {
        com.opengamma.analytics.math.curve.DoublesCurveInterpolatedAnchor r0;
        int $i1, $i2, i3, i4;

        r0 := @this: com.opengamma.analytics.math.curve.DoublesCurveInterpolatedAnchor;

        i3 = specialinvoke r0.<com.opengamma.analytics.math.curve.InterpolatedDoublesCurve: int hashCode()>();

        $i2 = 31 * i3;

        $i1 = r0.<com.opengamma.analytics.math.curve.DoublesCurveInterpolatedAnchor: int _anchorIndex>;

        i4 = $i2 + $i1;

        return i4;
    }

    public static com.opengamma.analytics.math.curve.DoublesCurveInterpolatedAnchor$Meta meta()
    {
        com.opengamma.analytics.math.curve.DoublesCurveInterpolatedAnchor$Meta $r0;

        $r0 = <com.opengamma.analytics.math.curve.DoublesCurveInterpolatedAnchor$Meta: com.opengamma.analytics.math.curve.DoublesCurveInterpolatedAnchor$Meta INSTANCE>;

        return $r0;
    }

    public com.opengamma.analytics.math.curve.DoublesCurveInterpolatedAnchor$Meta metaBean()
    {
        com.opengamma.analytics.math.curve.DoublesCurveInterpolatedAnchor r0;
        com.opengamma.analytics.math.curve.DoublesCurveInterpolatedAnchor$Meta $r1;

        r0 := @this: com.opengamma.analytics.math.curve.DoublesCurveInterpolatedAnchor;

        $r1 = <com.opengamma.analytics.math.curve.DoublesCurveInterpolatedAnchor$Meta: com.opengamma.analytics.math.curve.DoublesCurveInterpolatedAnchor$Meta INSTANCE>;

        return $r1;
    }

    private void setAnchorIndex(int)
    {
        com.opengamma.analytics.math.curve.DoublesCurveInterpolatedAnchor r0;
        int i0;

        r0 := @this: com.opengamma.analytics.math.curve.DoublesCurveInterpolatedAnchor;

        i0 := @parameter0: int;

        r0.<com.opengamma.analytics.math.curve.DoublesCurveInterpolatedAnchor: int _anchorIndex> = i0;

        return;
    }

    public org.joda.beans.Property anchorIndex()
    {
        com.opengamma.analytics.math.curve.DoublesCurveInterpolatedAnchor r0;
        com.opengamma.analytics.math.curve.DoublesCurveInterpolatedAnchor$Meta $r1;
        org.joda.beans.MetaProperty $r2;
        org.joda.beans.Property $r3;

        r0 := @this: com.opengamma.analytics.math.curve.DoublesCurveInterpolatedAnchor;

        $r1 = virtualinvoke r0.<com.opengamma.analytics.math.curve.DoublesCurveInterpolatedAnchor: com.opengamma.analytics.math.curve.DoublesCurveInterpolatedAnchor$Meta metaBean()>();

        $r2 = virtualinvoke $r1.<com.opengamma.analytics.math.curve.DoublesCurveInterpolatedAnchor$Meta: org.joda.beans.MetaProperty anchorIndex()>();

        $r3 = interfaceinvoke $r2.<org.joda.beans.MetaProperty: org.joda.beans.Property createProperty(org.joda.beans.Bean)>(r0);

        return $r3;
    }

    public com.opengamma.analytics.math.curve.DoublesCurveInterpolatedAnchor clone()
    {
        com.opengamma.analytics.math.curve.DoublesCurveInterpolatedAnchor r0, $r2;
        org.joda.beans.Bean $r1;

        r0 := @this: com.opengamma.analytics.math.curve.DoublesCurveInterpolatedAnchor;

        $r1 = staticinvoke <org.joda.beans.JodaBeanUtils: org.joda.beans.Bean cloneAlways(org.joda.beans.Bean)>(r0);

        $r2 = (com.opengamma.analytics.math.curve.DoublesCurveInterpolatedAnchor) $r1;

        return $r2;
    }

    public java.lang.String toString()
    {
        com.opengamma.analytics.math.curve.DoublesCurveInterpolatedAnchor r0;
        int i0, $i1, $i2, $i3;
        java.lang.StringBuilder $r2;
        java.lang.String $r5;

        r0 := @this: com.opengamma.analytics.math.curve.DoublesCurveInterpolatedAnchor;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(int)>(64);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("DoublesCurveInterpolatedAnchor{");

        i0 = virtualinvoke $r2.<java.lang.StringBuilder: int length()>();

        virtualinvoke r0.<com.opengamma.analytics.math.curve.DoublesCurveInterpolatedAnchor: void toString(java.lang.StringBuilder)>($r2);

        $i1 = virtualinvoke $r2.<java.lang.StringBuilder: int length()>();

        if $i1 <= i0 goto label1;

        $i2 = virtualinvoke $r2.<java.lang.StringBuilder: int length()>();

        $i3 = $i2 - 2;

        virtualinvoke $r2.<java.lang.StringBuilder: void setLength(int)>($i3);

     label1:
        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(125);

        $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r5;
    }

    protected void toString(java.lang.StringBuilder)
    {
        com.opengamma.analytics.math.curve.DoublesCurveInterpolatedAnchor r0;
        java.lang.StringBuilder r1, $r2, $r3, $r6, $r7;
        int $i0;
        java.lang.Integer $r4;
        java.lang.String $r5;

        r0 := @this: com.opengamma.analytics.math.curve.DoublesCurveInterpolatedAnchor;

        r1 := @parameter0: java.lang.StringBuilder;

        specialinvoke r0.<com.opengamma.analytics.math.curve.InterpolatedDoublesCurve: void toString(java.lang.StringBuilder)>(r1);

        $r2 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("anchorIndex");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(61);

        $i0 = virtualinvoke r0.<com.opengamma.analytics.math.curve.DoublesCurveInterpolatedAnchor: int getAnchorIndex()>();

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r5 = staticinvoke <org.joda.beans.JodaBeanUtils: java.lang.String toString(java.lang.Object)>($r4);

        $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(44);

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

        return;
    }

    public volatile com.opengamma.analytics.math.curve.InterpolatedDoublesCurve clone()
    {
        com.opengamma.analytics.math.curve.DoublesCurveInterpolatedAnchor r0, $r1;

        r0 := @this: com.opengamma.analytics.math.curve.DoublesCurveInterpolatedAnchor;

        $r1 = virtualinvoke r0.<com.opengamma.analytics.math.curve.DoublesCurveInterpolatedAnchor: com.opengamma.analytics.math.curve.DoublesCurveInterpolatedAnchor clone()>();

        return $r1;
    }

    public volatile com.opengamma.analytics.math.curve.InterpolatedDoublesCurve$Meta metaBean()
    {
        com.opengamma.analytics.math.curve.DoublesCurveInterpolatedAnchor r0;
        com.opengamma.analytics.math.curve.DoublesCurveInterpolatedAnchor$Meta $r1;

        r0 := @this: com.opengamma.analytics.math.curve.DoublesCurveInterpolatedAnchor;

        $r1 = virtualinvoke r0.<com.opengamma.analytics.math.curve.DoublesCurveInterpolatedAnchor: com.opengamma.analytics.math.curve.DoublesCurveInterpolatedAnchor$Meta metaBean()>();

        return $r1;
    }

    public volatile com.opengamma.analytics.math.curve.ArraysDoublesCurve$Meta metaBean()
    {
        com.opengamma.analytics.math.curve.DoublesCurveInterpolatedAnchor r0;
        com.opengamma.analytics.math.curve.DoublesCurveInterpolatedAnchor$Meta $r1;

        r0 := @this: com.opengamma.analytics.math.curve.DoublesCurveInterpolatedAnchor;

        $r1 = virtualinvoke r0.<com.opengamma.analytics.math.curve.DoublesCurveInterpolatedAnchor: com.opengamma.analytics.math.curve.DoublesCurveInterpolatedAnchor$Meta metaBean()>();

        return $r1;
    }

    public volatile com.opengamma.analytics.math.curve.DoublesCurve$Meta metaBean()
    {
        com.opengamma.analytics.math.curve.DoublesCurveInterpolatedAnchor r0;
        com.opengamma.analytics.math.curve.DoublesCurveInterpolatedAnchor$Meta $r1;

        r0 := @this: com.opengamma.analytics.math.curve.DoublesCurveInterpolatedAnchor;

        $r1 = virtualinvoke r0.<com.opengamma.analytics.math.curve.DoublesCurveInterpolatedAnchor: com.opengamma.analytics.math.curve.DoublesCurveInterpolatedAnchor$Meta metaBean()>();

        return $r1;
    }

    public volatile com.opengamma.analytics.math.curve.Curve clone()
    {
        com.opengamma.analytics.math.curve.DoublesCurveInterpolatedAnchor r0, $r1;

        r0 := @this: com.opengamma.analytics.math.curve.DoublesCurveInterpolatedAnchor;

        $r1 = virtualinvoke r0.<com.opengamma.analytics.math.curve.DoublesCurveInterpolatedAnchor: com.opengamma.analytics.math.curve.DoublesCurveInterpolatedAnchor clone()>();

        return $r1;
    }

    public volatile com.opengamma.analytics.math.curve.Curve$Meta metaBean()
    {
        com.opengamma.analytics.math.curve.DoublesCurveInterpolatedAnchor r0;
        com.opengamma.analytics.math.curve.DoublesCurveInterpolatedAnchor$Meta $r1;

        r0 := @this: com.opengamma.analytics.math.curve.DoublesCurveInterpolatedAnchor;

        $r1 = virtualinvoke r0.<com.opengamma.analytics.math.curve.DoublesCurveInterpolatedAnchor: com.opengamma.analytics.math.curve.DoublesCurveInterpolatedAnchor$Meta metaBean()>();

        return $r1;
    }

    public volatile org.joda.beans.MetaBean metaBean()
    {
        com.opengamma.analytics.math.curve.DoublesCurveInterpolatedAnchor r0;
        com.opengamma.analytics.math.curve.DoublesCurveInterpolatedAnchor$Meta $r1;
        org.joda.beans.MetaBean r2;

        r0 := @this: com.opengamma.analytics.math.curve.DoublesCurveInterpolatedAnchor;

        $r1 = virtualinvoke r0.<com.opengamma.analytics.math.curve.DoublesCurveInterpolatedAnchor: com.opengamma.analytics.math.curve.DoublesCurveInterpolatedAnchor$Meta metaBean()>();

        r2 = (org.joda.beans.MetaBean) $r1;

        return r2;
    }

    public volatile java.lang.Object clone() throws java.lang.CloneNotSupportedException
    {
        com.opengamma.analytics.math.curve.DoublesCurveInterpolatedAnchor r0, $r1;

        r0 := @this: com.opengamma.analytics.math.curve.DoublesCurveInterpolatedAnchor;

        $r1 = virtualinvoke r0.<com.opengamma.analytics.math.curve.DoublesCurveInterpolatedAnchor: com.opengamma.analytics.math.curve.DoublesCurveInterpolatedAnchor clone()>();

        return $r1;
    }

    static void access$000(com.opengamma.analytics.math.curve.DoublesCurveInterpolatedAnchor, int)
    {
        com.opengamma.analytics.math.curve.DoublesCurveInterpolatedAnchor r0;
        int i0;

        r0 := @parameter0: com.opengamma.analytics.math.curve.DoublesCurveInterpolatedAnchor;

        i0 := @parameter1: int;

        specialinvoke r0.<com.opengamma.analytics.math.curve.DoublesCurveInterpolatedAnchor: void setAnchorIndex(int)>(i0);

        return;
    }

    static void <clinit>()
    {
        com.opengamma.analytics.math.curve.DoublesCurveInterpolatedAnchor$Meta $r0;
        org.joda.beans.MetaBean r1;

        $r0 = <com.opengamma.analytics.math.curve.DoublesCurveInterpolatedAnchor$Meta: com.opengamma.analytics.math.curve.DoublesCurveInterpolatedAnchor$Meta INSTANCE>;

        r1 = (org.joda.beans.MetaBean) $r0;

        staticinvoke <org.joda.beans.JodaBeanUtils: void registerMetaBean(org.joda.beans.MetaBean)>(r1);

        return;
    }
}
