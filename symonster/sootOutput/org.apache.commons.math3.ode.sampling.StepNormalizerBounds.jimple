public final enum class org.apache.commons.math3.ode.sampling.StepNormalizerBounds extends java.lang.Enum
{
    public static final enum org.apache.commons.math3.ode.sampling.StepNormalizerBounds NEITHER;
    public static final enum org.apache.commons.math3.ode.sampling.StepNormalizerBounds FIRST;
    public static final enum org.apache.commons.math3.ode.sampling.StepNormalizerBounds LAST;
    public static final enum org.apache.commons.math3.ode.sampling.StepNormalizerBounds BOTH;
    private final boolean first;
    private final boolean last;
    private static final org.apache.commons.math3.ode.sampling.StepNormalizerBounds[] $VALUES;

    public static org.apache.commons.math3.ode.sampling.StepNormalizerBounds[] values()
    {
        org.apache.commons.math3.ode.sampling.StepNormalizerBounds[] $r0, $r2;
        java.lang.Object $r1;

        $r0 = <org.apache.commons.math3.ode.sampling.StepNormalizerBounds: org.apache.commons.math3.ode.sampling.StepNormalizerBounds[] $VALUES>;

        $r1 = virtualinvoke $r0.<java.lang.Object: java.lang.Object clone()>();

        $r2 = (org.apache.commons.math3.ode.sampling.StepNormalizerBounds[]) $r1;

        return $r2;
    }

    public static org.apache.commons.math3.ode.sampling.StepNormalizerBounds valueOf(java.lang.String)
    {
        java.lang.String r0;
        java.lang.Enum $r1;
        org.apache.commons.math3.ode.sampling.StepNormalizerBounds $r2;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "org/apache/commons/math3/ode/sampling/StepNormalizerBounds", r0);

        $r2 = (org.apache.commons.math3.ode.sampling.StepNormalizerBounds) $r1;

        return $r2;
    }

    private void <init>(java.lang.String, int, boolean, boolean)
    {
        org.apache.commons.math3.ode.sampling.StepNormalizerBounds r0;
        java.lang.String r1;
        int i0;
        boolean z0, z1;

        r0 := @this: org.apache.commons.math3.ode.sampling.StepNormalizerBounds;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        z0 := @parameter2: boolean;

        z1 := @parameter3: boolean;

        specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>(r1, i0);

        r0.<org.apache.commons.math3.ode.sampling.StepNormalizerBounds: boolean first> = z0;

        r0.<org.apache.commons.math3.ode.sampling.StepNormalizerBounds: boolean last> = z1;

        return;
    }

    public boolean firstIncluded()
    {
        org.apache.commons.math3.ode.sampling.StepNormalizerBounds r0;
        boolean $z0;

        r0 := @this: org.apache.commons.math3.ode.sampling.StepNormalizerBounds;

        $z0 = r0.<org.apache.commons.math3.ode.sampling.StepNormalizerBounds: boolean first>;

        return $z0;
    }

    public boolean lastIncluded()
    {
        org.apache.commons.math3.ode.sampling.StepNormalizerBounds r0;
        boolean $z0;

        r0 := @this: org.apache.commons.math3.ode.sampling.StepNormalizerBounds;

        $z0 = r0.<org.apache.commons.math3.ode.sampling.StepNormalizerBounds: boolean last>;

        return $z0;
    }

    static void <clinit>()
    {
        org.apache.commons.math3.ode.sampling.StepNormalizerBounds $r0, $r1, $r2, $r3, $r5, $r6, $r7, $r8;
        org.apache.commons.math3.ode.sampling.StepNormalizerBounds[] $r4;

        $r0 = new org.apache.commons.math3.ode.sampling.StepNormalizerBounds;

        specialinvoke $r0.<org.apache.commons.math3.ode.sampling.StepNormalizerBounds: void <init>(java.lang.String,int,boolean,boolean)>("NEITHER", 0, 0, 0);

        <org.apache.commons.math3.ode.sampling.StepNormalizerBounds: org.apache.commons.math3.ode.sampling.StepNormalizerBounds NEITHER> = $r0;

        $r1 = new org.apache.commons.math3.ode.sampling.StepNormalizerBounds;

        specialinvoke $r1.<org.apache.commons.math3.ode.sampling.StepNormalizerBounds: void <init>(java.lang.String,int,boolean,boolean)>("FIRST", 1, 1, 0);

        <org.apache.commons.math3.ode.sampling.StepNormalizerBounds: org.apache.commons.math3.ode.sampling.StepNormalizerBounds FIRST> = $r1;

        $r2 = new org.apache.commons.math3.ode.sampling.StepNormalizerBounds;

        specialinvoke $r2.<org.apache.commons.math3.ode.sampling.StepNormalizerBounds: void <init>(java.lang.String,int,boolean,boolean)>("LAST", 2, 0, 1);

        <org.apache.commons.math3.ode.sampling.StepNormalizerBounds: org.apache.commons.math3.ode.sampling.StepNormalizerBounds LAST> = $r2;

        $r3 = new org.apache.commons.math3.ode.sampling.StepNormalizerBounds;

        specialinvoke $r3.<org.apache.commons.math3.ode.sampling.StepNormalizerBounds: void <init>(java.lang.String,int,boolean,boolean)>("BOTH", 3, 1, 1);

        <org.apache.commons.math3.ode.sampling.StepNormalizerBounds: org.apache.commons.math3.ode.sampling.StepNormalizerBounds BOTH> = $r3;

        $r4 = newarray (org.apache.commons.math3.ode.sampling.StepNormalizerBounds)[4];

        $r5 = <org.apache.commons.math3.ode.sampling.StepNormalizerBounds: org.apache.commons.math3.ode.sampling.StepNormalizerBounds NEITHER>;

        $r4[0] = $r5;

        $r6 = <org.apache.commons.math3.ode.sampling.StepNormalizerBounds: org.apache.commons.math3.ode.sampling.StepNormalizerBounds FIRST>;

        $r4[1] = $r6;

        $r7 = <org.apache.commons.math3.ode.sampling.StepNormalizerBounds: org.apache.commons.math3.ode.sampling.StepNormalizerBounds LAST>;

        $r4[2] = $r7;

        $r8 = <org.apache.commons.math3.ode.sampling.StepNormalizerBounds: org.apache.commons.math3.ode.sampling.StepNormalizerBounds BOTH>;

        $r4[3] = $r8;

        <org.apache.commons.math3.ode.sampling.StepNormalizerBounds: org.apache.commons.math3.ode.sampling.StepNormalizerBounds[] $VALUES> = $r4;

        return;
    }
}
