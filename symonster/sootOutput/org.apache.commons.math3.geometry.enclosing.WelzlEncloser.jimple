public class org.apache.commons.math3.geometry.enclosing.WelzlEncloser extends java.lang.Object implements org.apache.commons.math3.geometry.enclosing.Encloser
{
    private final double tolerance;
    private final org.apache.commons.math3.geometry.enclosing.SupportBallGenerator generator;

    public void <init>(double, org.apache.commons.math3.geometry.enclosing.SupportBallGenerator)
    {
        org.apache.commons.math3.geometry.enclosing.WelzlEncloser r0;
        double d0;
        org.apache.commons.math3.geometry.enclosing.SupportBallGenerator r1;

        r0 := @this: org.apache.commons.math3.geometry.enclosing.WelzlEncloser;

        d0 := @parameter0: double;

        r1 := @parameter1: org.apache.commons.math3.geometry.enclosing.SupportBallGenerator;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.commons.math3.geometry.enclosing.WelzlEncloser: double tolerance> = d0;

        r0.<org.apache.commons.math3.geometry.enclosing.WelzlEncloser: org.apache.commons.math3.geometry.enclosing.SupportBallGenerator generator> = r1;

        return;
    }

    public org.apache.commons.math3.geometry.enclosing.EnclosingBall enclose(java.lang.Iterable)
    {
        org.apache.commons.math3.geometry.enclosing.WelzlEncloser r0;
        java.lang.Iterable r1;
        java.util.ArrayList $r2;
        org.apache.commons.math3.geometry.enclosing.SupportBallGenerator $r3;
        org.apache.commons.math3.geometry.enclosing.EnclosingBall $r4, $r6;
        java.util.Iterator $r5;
        boolean $z0;

        r0 := @this: org.apache.commons.math3.geometry.enclosing.WelzlEncloser;

        r1 := @parameter0: java.lang.Iterable;

        if r1 == null goto label1;

        $r5 = interfaceinvoke r1.<java.lang.Iterable: java.util.Iterator iterator()>();

        $z0 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label2;

     label1:
        $r3 = r0.<org.apache.commons.math3.geometry.enclosing.WelzlEncloser: org.apache.commons.math3.geometry.enclosing.SupportBallGenerator generator>;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        $r4 = interfaceinvoke $r3.<org.apache.commons.math3.geometry.enclosing.SupportBallGenerator: org.apache.commons.math3.geometry.enclosing.EnclosingBall ballOnSupport(java.util.List)>($r2);

        return $r4;

     label2:
        $r6 = specialinvoke r0.<org.apache.commons.math3.geometry.enclosing.WelzlEncloser: org.apache.commons.math3.geometry.enclosing.EnclosingBall pivotingBall(java.lang.Iterable)>(r1);

        return $r6;
    }

    private org.apache.commons.math3.geometry.enclosing.EnclosingBall pivotingBall(java.lang.Iterable)
    {
        org.apache.commons.math3.geometry.enclosing.WelzlEncloser r0;
        java.lang.Iterable r1;
        org.apache.commons.math3.geometry.Point r2, r5;
        org.apache.commons.math3.geometry.enclosing.EnclosingBall r6, r15;
        java.util.Iterator $r7;
        java.lang.Object $r8;
        java.util.ArrayList $r9, $r11;
        org.apache.commons.math3.geometry.Space $r10, $r12;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i7, $i8;
        double $d0, $d1, $d2;
        boolean $z1;
        byte $b6;
        java.util.List $r13;
        org.apache.commons.math3.exception.MathInternalError $r14;

        r0 := @this: org.apache.commons.math3.geometry.enclosing.WelzlEncloser;

        r1 := @parameter0: java.lang.Iterable;

        $r7 = interfaceinvoke r1.<java.lang.Iterable: java.util.Iterator iterator()>();

        $r8 = interfaceinvoke $r7.<java.util.Iterator: java.lang.Object next()>();

        r2 = (org.apache.commons.math3.geometry.Point) $r8;

        $r9 = new java.util.ArrayList;

        $r10 = interfaceinvoke r2.<org.apache.commons.math3.geometry.Point: org.apache.commons.math3.geometry.Space getSpace()>();

        $i0 = interfaceinvoke $r10.<org.apache.commons.math3.geometry.Space: int getDimension()>();

        $i1 = $i0 + 1;

        specialinvoke $r9.<java.util.ArrayList: void <init>(int)>($i1);

        $r11 = new java.util.ArrayList;

        $r12 = interfaceinvoke r2.<org.apache.commons.math3.geometry.Point: org.apache.commons.math3.geometry.Space getSpace()>();

        $i2 = interfaceinvoke $r12.<org.apache.commons.math3.geometry.Space: int getDimension()>();

        $i3 = $i2 + 1;

        specialinvoke $r11.<java.util.ArrayList: void <init>(int)>($i3);

        interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>(r2);

        $i4 = interfaceinvoke $r9.<java.util.List: int size()>();

        r15 = specialinvoke r0.<org.apache.commons.math3.geometry.enclosing.WelzlEncloser: org.apache.commons.math3.geometry.enclosing.EnclosingBall moveToFrontBall(java.util.List,int,java.util.List)>($r9, $i4, $r11);

     label1:
        r5 = virtualinvoke r0.<org.apache.commons.math3.geometry.enclosing.WelzlEncloser: org.apache.commons.math3.geometry.Point selectFarthest(java.lang.Iterable,org.apache.commons.math3.geometry.enclosing.EnclosingBall)>(r1, r15);

        $d0 = r0.<org.apache.commons.math3.geometry.enclosing.WelzlEncloser: double tolerance>;

        $z1 = virtualinvoke r15.<org.apache.commons.math3.geometry.enclosing.EnclosingBall: boolean contains(org.apache.commons.math3.geometry.Point,double)>(r5, $d0);

        if $z1 == 0 goto label2;

        return r15;

     label2:
        interfaceinvoke $r11.<java.util.List: void clear()>();

        interfaceinvoke $r11.<java.util.List: boolean add(java.lang.Object)>(r5);

        r6 = r15;

        $i5 = interfaceinvoke $r9.<java.util.List: int size()>();

        r15 = specialinvoke r0.<org.apache.commons.math3.geometry.enclosing.WelzlEncloser: org.apache.commons.math3.geometry.enclosing.EnclosingBall moveToFrontBall(java.util.List,int,java.util.List)>($r9, $i5, $r11);

        $d1 = virtualinvoke r15.<org.apache.commons.math3.geometry.enclosing.EnclosingBall: double getRadius()>();

        $d2 = virtualinvoke r6.<org.apache.commons.math3.geometry.enclosing.EnclosingBall: double getRadius()>();

        $b6 = $d1 cmpg $d2;

        if $b6 >= 0 goto label3;

        $r14 = new org.apache.commons.math3.exception.MathInternalError;

        specialinvoke $r14.<org.apache.commons.math3.exception.MathInternalError: void <init>()>();

        throw $r14;

     label3:
        interfaceinvoke $r9.<java.util.List: void add(int,java.lang.Object)>(0, r5);

        $i7 = virtualinvoke r15.<org.apache.commons.math3.geometry.enclosing.EnclosingBall: int getSupportSize()>();

        $i8 = interfaceinvoke $r9.<java.util.List: int size()>();

        $r13 = interfaceinvoke $r9.<java.util.List: java.util.List subList(int,int)>($i7, $i8);

        interfaceinvoke $r13.<java.util.List: void clear()>();

        goto label1;
    }

    private org.apache.commons.math3.geometry.enclosing.EnclosingBall moveToFrontBall(java.util.List, int, java.util.List)
    {
        org.apache.commons.math3.geometry.enclosing.WelzlEncloser r0;
        java.util.List r1, r2;
        int i0, $i1, $i2, $i3, $i4, $i5, i6, i7;
        org.apache.commons.math3.geometry.Point r3, $r5;
        org.apache.commons.math3.geometry.enclosing.SupportBallGenerator $r4;
        org.apache.commons.math3.geometry.Space $r6;
        java.lang.Object $r7, $r10;
        double $d0;
        boolean $z0;
        org.apache.commons.math3.geometry.enclosing.EnclosingBall r12;

        r0 := @this: org.apache.commons.math3.geometry.enclosing.WelzlEncloser;

        r1 := @parameter0: java.util.List;

        i0 := @parameter1: int;

        r2 := @parameter2: java.util.List;

        $r4 = r0.<org.apache.commons.math3.geometry.enclosing.WelzlEncloser: org.apache.commons.math3.geometry.enclosing.SupportBallGenerator generator>;

        r12 = interfaceinvoke $r4.<org.apache.commons.math3.geometry.enclosing.SupportBallGenerator: org.apache.commons.math3.geometry.enclosing.EnclosingBall ballOnSupport(java.util.List)>(r2);

        $i1 = virtualinvoke r12.<org.apache.commons.math3.geometry.enclosing.EnclosingBall: int getSupportSize()>();

        $r5 = virtualinvoke r12.<org.apache.commons.math3.geometry.enclosing.EnclosingBall: org.apache.commons.math3.geometry.Point getCenter()>();

        $r6 = interfaceinvoke $r5.<org.apache.commons.math3.geometry.Point: org.apache.commons.math3.geometry.Space getSpace()>();

        $i2 = interfaceinvoke $r6.<org.apache.commons.math3.geometry.Space: int getDimension()>();

        if $i1 > $i2 goto label5;

        i6 = 0;

     label1:
        if i6 >= i0 goto label5;

        $r7 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i6);

        r3 = (org.apache.commons.math3.geometry.Point) $r7;

        $d0 = r0.<org.apache.commons.math3.geometry.enclosing.WelzlEncloser: double tolerance>;

        $z0 = virtualinvoke r12.<org.apache.commons.math3.geometry.enclosing.EnclosingBall: boolean contains(org.apache.commons.math3.geometry.Point,double)>(r3, $d0);

        if $z0 != 0 goto label4;

        interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>(r3);

        r12 = specialinvoke r0.<org.apache.commons.math3.geometry.enclosing.WelzlEncloser: org.apache.commons.math3.geometry.enclosing.EnclosingBall moveToFrontBall(java.util.List,int,java.util.List)>(r1, i6, r2);

        $i3 = interfaceinvoke r2.<java.util.List: int size()>();

        $i4 = $i3 - 1;

        interfaceinvoke r2.<java.util.List: java.lang.Object remove(int)>($i4);

        i7 = i6;

     label2:
        if i7 <= 0 goto label3;

        $i5 = i7 - 1;

        $r10 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>($i5);

        interfaceinvoke r1.<java.util.List: java.lang.Object set(int,java.lang.Object)>(i7, $r10);

        i7 = i7 + -1;

        goto label2;

     label3:
        interfaceinvoke r1.<java.util.List: java.lang.Object set(int,java.lang.Object)>(0, r3);

     label4:
        i6 = i6 + 1;

        goto label1;

     label5:
        return r12;
    }

    public org.apache.commons.math3.geometry.Point selectFarthest(java.lang.Iterable, org.apache.commons.math3.geometry.enclosing.EnclosingBall)
    {
        org.apache.commons.math3.geometry.enclosing.WelzlEncloser r0;
        java.lang.Iterable r1;
        org.apache.commons.math3.geometry.enclosing.EnclosingBall r2;
        org.apache.commons.math3.geometry.Point r3, r5, r7;
        java.util.Iterator r4;
        double d0, d1;
        boolean $z0;
        java.lang.Object $r6;
        byte $b0;

        r0 := @this: org.apache.commons.math3.geometry.enclosing.WelzlEncloser;

        r1 := @parameter0: java.lang.Iterable;

        r2 := @parameter1: org.apache.commons.math3.geometry.enclosing.EnclosingBall;

        r3 = virtualinvoke r2.<org.apache.commons.math3.geometry.enclosing.EnclosingBall: org.apache.commons.math3.geometry.Point getCenter()>();

        r7 = null;

        d1 = -1.0;

        r4 = interfaceinvoke r1.<java.lang.Iterable: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r6 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        r5 = (org.apache.commons.math3.geometry.Point) $r6;

        d0 = interfaceinvoke r5.<org.apache.commons.math3.geometry.Point: double distance(org.apache.commons.math3.geometry.Point)>(r3);

        $b0 = d0 cmpl d1;

        if $b0 <= 0 goto label2;

        r7 = r5;

        d1 = d0;

     label2:
        goto label1;

     label3:
        return r7;
    }
}
