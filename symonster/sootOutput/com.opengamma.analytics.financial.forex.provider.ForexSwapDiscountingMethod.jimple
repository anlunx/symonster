public final class com.opengamma.analytics.financial.forex.provider.ForexSwapDiscountingMethod extends java.lang.Object
{
    private static final com.opengamma.analytics.financial.forex.provider.ForexSwapDiscountingMethod INSTANCE;
    private static final com.opengamma.analytics.financial.forex.provider.ForexDiscountingMethod METHOD_FX;

    public static com.opengamma.analytics.financial.forex.provider.ForexSwapDiscountingMethod getInstance()
    {
        com.opengamma.analytics.financial.forex.provider.ForexSwapDiscountingMethod $r0;

        $r0 = <com.opengamma.analytics.financial.forex.provider.ForexSwapDiscountingMethod: com.opengamma.analytics.financial.forex.provider.ForexSwapDiscountingMethod INSTANCE>;

        return $r0;
    }

    private void <init>()
    {
        com.opengamma.analytics.financial.forex.provider.ForexSwapDiscountingMethod r0;

        r0 := @this: com.opengamma.analytics.financial.forex.provider.ForexSwapDiscountingMethod;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public com.opengamma.util.money.MultipleCurrencyAmount presentValue(com.opengamma.analytics.financial.forex.derivative.ForexSwap, com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface)
    {
        com.opengamma.analytics.financial.forex.provider.ForexSwapDiscountingMethod r0;
        com.opengamma.analytics.financial.forex.derivative.ForexSwap r1;
        com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface r2;
        com.opengamma.util.money.MultipleCurrencyAmount r3, $r10, $r11;
        com.opengamma.analytics.financial.forex.provider.ForexDiscountingMethod $r6, $r8;
        com.opengamma.analytics.financial.forex.derivative.Forex $r7, $r9;

        r0 := @this: com.opengamma.analytics.financial.forex.provider.ForexSwapDiscountingMethod;

        r1 := @parameter0: com.opengamma.analytics.financial.forex.derivative.ForexSwap;

        r2 := @parameter1: com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "Forex swap");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, "Multi-curves provider");

        $r6 = <com.opengamma.analytics.financial.forex.provider.ForexSwapDiscountingMethod: com.opengamma.analytics.financial.forex.provider.ForexDiscountingMethod METHOD_FX>;

        $r7 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexSwap: com.opengamma.analytics.financial.forex.derivative.Forex getNearLeg()>();

        r3 = virtualinvoke $r6.<com.opengamma.analytics.financial.forex.provider.ForexDiscountingMethod: com.opengamma.util.money.MultipleCurrencyAmount presentValue(com.opengamma.analytics.financial.forex.derivative.Forex,com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface)>($r7, r2);

        $r8 = <com.opengamma.analytics.financial.forex.provider.ForexSwapDiscountingMethod: com.opengamma.analytics.financial.forex.provider.ForexDiscountingMethod METHOD_FX>;

        $r9 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexSwap: com.opengamma.analytics.financial.forex.derivative.Forex getFarLeg()>();

        $r10 = virtualinvoke $r8.<com.opengamma.analytics.financial.forex.provider.ForexDiscountingMethod: com.opengamma.util.money.MultipleCurrencyAmount presentValue(com.opengamma.analytics.financial.forex.derivative.Forex,com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface)>($r9, r2);

        $r11 = virtualinvoke r3.<com.opengamma.util.money.MultipleCurrencyAmount: com.opengamma.util.money.MultipleCurrencyAmount plus(com.opengamma.util.money.MultipleCurrencyAmount)>($r10);

        return $r11;
    }

    public com.opengamma.util.money.MultipleCurrencyAmount currencyExposure(com.opengamma.analytics.financial.forex.derivative.ForexSwap, com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface)
    {
        com.opengamma.analytics.financial.forex.provider.ForexSwapDiscountingMethod r0;
        com.opengamma.analytics.financial.forex.derivative.ForexSwap r1;
        com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface r2;
        com.opengamma.util.money.MultipleCurrencyAmount $r3;

        r0 := @this: com.opengamma.analytics.financial.forex.provider.ForexSwapDiscountingMethod;

        r1 := @parameter0: com.opengamma.analytics.financial.forex.derivative.ForexSwap;

        r2 := @parameter1: com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface;

        $r3 = virtualinvoke r0.<com.opengamma.analytics.financial.forex.provider.ForexSwapDiscountingMethod: com.opengamma.util.money.MultipleCurrencyAmount presentValue(com.opengamma.analytics.financial.forex.derivative.ForexSwap,com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface)>(r1, r2);

        return $r3;
    }

    public double parSpread(com.opengamma.analytics.financial.forex.derivative.ForexSwap, com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface)
    {
        com.opengamma.analytics.financial.forex.provider.ForexSwapDiscountingMethod r0;
        com.opengamma.analytics.financial.forex.derivative.ForexSwap r1;
        com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface r2;
        com.opengamma.util.money.Currency r3, $r11;
        double d0, d1, d2, $d3, $d4, $d5, $d6;
        com.opengamma.analytics.financial.forex.derivative.Forex $r6, $r10, $r12, $r14;
        com.opengamma.analytics.financial.forex.method.FXMatrix $r7;
        com.opengamma.util.money.MultipleCurrencyAmount $r8;
        com.opengamma.util.money.CurrencyAmount $r9;
        java.lang.Double $r13;
        com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed $r15;

        r0 := @this: com.opengamma.analytics.financial.forex.provider.ForexSwapDiscountingMethod;

        r1 := @parameter0: com.opengamma.analytics.financial.forex.derivative.ForexSwap;

        r2 := @parameter1: com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "Forex swap");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, "Multi-curves provider");

        $r6 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexSwap: com.opengamma.analytics.financial.forex.derivative.Forex getNearLeg()>();

        r3 = virtualinvoke $r6.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.util.money.Currency getCurrency2()>();

        $r7 = interfaceinvoke r2.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface: com.opengamma.analytics.financial.forex.method.FXMatrix getFxRates()>();

        $r8 = virtualinvoke r0.<com.opengamma.analytics.financial.forex.provider.ForexSwapDiscountingMethod: com.opengamma.util.money.MultipleCurrencyAmount presentValue(com.opengamma.analytics.financial.forex.derivative.ForexSwap,com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface)>(r1, r2);

        $r9 = virtualinvoke $r7.<com.opengamma.analytics.financial.forex.method.FXMatrix: com.opengamma.util.money.CurrencyAmount convert(com.opengamma.util.money.MultipleCurrencyAmount,com.opengamma.util.money.Currency)>($r8, r3);

        d0 = virtualinvoke $r9.<com.opengamma.util.money.CurrencyAmount: double getAmount()>();

        $r10 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexSwap: com.opengamma.analytics.financial.forex.derivative.Forex getFarLeg()>();

        $r11 = virtualinvoke $r10.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.util.money.Currency getCurrency2()>();

        $r12 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexSwap: com.opengamma.analytics.financial.forex.derivative.Forex getFarLeg()>();

        $d3 = virtualinvoke $r12.<com.opengamma.analytics.financial.forex.derivative.Forex: double getPaymentTime()>();

        $r13 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d3);

        d1 = interfaceinvoke r2.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface: double getDiscountFactor(com.opengamma.util.money.Currency,java.lang.Double)>($r11, $r13);

        $r14 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexSwap: com.opengamma.analytics.financial.forex.derivative.Forex getNearLeg()>();

        $r15 = virtualinvoke $r14.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed getPaymentCurrency1()>();

        d2 = virtualinvoke $r15.<com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed: double getAmount()>();

        $d5 = neg d0;

        $d4 = d2 * d1;

        $d6 = $d5 / $d4;

        return $d6;
    }

    public com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyMulticurveSensitivity presentValueCurveSensitivity(com.opengamma.analytics.financial.forex.derivative.ForexSwap, com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface)
    {
        com.opengamma.analytics.financial.forex.provider.ForexSwapDiscountingMethod r0;
        com.opengamma.analytics.financial.forex.derivative.ForexSwap r1;
        com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface r2;
        com.opengamma.analytics.financial.forex.provider.ForexDiscountingMethod $r4, $r6;
        com.opengamma.analytics.financial.forex.derivative.Forex $r5, $r7;
        com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyMulticurveSensitivity $r8, r9, r10;

        r0 := @this: com.opengamma.analytics.financial.forex.provider.ForexSwapDiscountingMethod;

        r1 := @parameter0: com.opengamma.analytics.financial.forex.derivative.ForexSwap;

        r2 := @parameter1: com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "Forex swap");

        $r4 = <com.opengamma.analytics.financial.forex.provider.ForexSwapDiscountingMethod: com.opengamma.analytics.financial.forex.provider.ForexDiscountingMethod METHOD_FX>;

        $r5 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexSwap: com.opengamma.analytics.financial.forex.derivative.Forex getNearLeg()>();

        r9 = virtualinvoke $r4.<com.opengamma.analytics.financial.forex.provider.ForexDiscountingMethod: com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyMulticurveSensitivity presentValueCurveSensitivity(com.opengamma.analytics.financial.forex.derivative.Forex,com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface)>($r5, r2);

        $r6 = <com.opengamma.analytics.financial.forex.provider.ForexSwapDiscountingMethod: com.opengamma.analytics.financial.forex.provider.ForexDiscountingMethod METHOD_FX>;

        $r7 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexSwap: com.opengamma.analytics.financial.forex.derivative.Forex getFarLeg()>();

        $r8 = virtualinvoke $r6.<com.opengamma.analytics.financial.forex.provider.ForexDiscountingMethod: com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyMulticurveSensitivity presentValueCurveSensitivity(com.opengamma.analytics.financial.forex.derivative.Forex,com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface)>($r7, r2);

        r10 = virtualinvoke r9.<com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyMulticurveSensitivity: com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyMulticurveSensitivity plus(com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyMulticurveSensitivity)>($r8);

        return r10;
    }

    public com.opengamma.analytics.financial.provider.sensitivity.multicurve.MulticurveSensitivity parSpreadCurveSensitivity(com.opengamma.analytics.financial.forex.derivative.ForexSwap, com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface)
    {
        com.opengamma.analytics.financial.forex.provider.ForexSwapDiscountingMethod r0;
        com.opengamma.analytics.financial.forex.derivative.ForexSwap r1;
        com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface r2;
        com.opengamma.util.money.Currency r3, $r17;
        double d0, d1, d2, d3, d5, d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14;
        com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyMulticurveSensitivity r4, $r23;
        com.opengamma.analytics.financial.provider.sensitivity.multicurve.MulticurveSensitivity r5, r8, $r29, $r30;
        com.opengamma.analytics.financial.forex.derivative.Forex $r11, $r12, $r16, $r18, $r20;
        com.opengamma.analytics.financial.forex.method.FXMatrix $r13, $r22;
        com.opengamma.util.money.MultipleCurrencyAmount $r14;
        com.opengamma.util.money.CurrencyAmount $r15;
        java.lang.Double $r19;
        com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed $r21;
        java.util.ArrayList $r24;
        com.opengamma.util.tuple.DoublesPair $r25;
        java.util.HashMap $r26;
        java.lang.String $r27;

        r0 := @this: com.opengamma.analytics.financial.forex.provider.ForexSwapDiscountingMethod;

        r1 := @parameter0: com.opengamma.analytics.financial.forex.derivative.ForexSwap;

        r2 := @parameter1: com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "Forex swap");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, "Multi-curves provider");

        $r11 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexSwap: com.opengamma.analytics.financial.forex.derivative.Forex getNearLeg()>();

        r3 = virtualinvoke $r11.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.util.money.Currency getCurrency2()>();

        $r12 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexSwap: com.opengamma.analytics.financial.forex.derivative.Forex getFarLeg()>();

        d0 = virtualinvoke $r12.<com.opengamma.analytics.financial.forex.derivative.Forex: double getPaymentTime()>();

        $r13 = interfaceinvoke r2.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface: com.opengamma.analytics.financial.forex.method.FXMatrix getFxRates()>();

        $r14 = virtualinvoke r0.<com.opengamma.analytics.financial.forex.provider.ForexSwapDiscountingMethod: com.opengamma.util.money.MultipleCurrencyAmount presentValue(com.opengamma.analytics.financial.forex.derivative.ForexSwap,com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface)>(r1, r2);

        $r15 = virtualinvoke $r13.<com.opengamma.analytics.financial.forex.method.FXMatrix: com.opengamma.util.money.CurrencyAmount convert(com.opengamma.util.money.MultipleCurrencyAmount,com.opengamma.util.money.Currency)>($r14, r3);

        d1 = virtualinvoke $r15.<com.opengamma.util.money.CurrencyAmount: double getAmount()>();

        $r16 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexSwap: com.opengamma.analytics.financial.forex.derivative.Forex getFarLeg()>();

        $r17 = virtualinvoke $r16.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.util.money.Currency getCurrency2()>();

        $r18 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexSwap: com.opengamma.analytics.financial.forex.derivative.Forex getFarLeg()>();

        $d7 = virtualinvoke $r18.<com.opengamma.analytics.financial.forex.derivative.Forex: double getPaymentTime()>();

        $r19 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d7);

        d2 = interfaceinvoke r2.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface: double getDiscountFactor(com.opengamma.util.money.Currency,java.lang.Double)>($r17, $r19);

        $r20 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexSwap: com.opengamma.analytics.financial.forex.derivative.Forex getNearLeg()>();

        $r21 = virtualinvoke $r20.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed getPaymentCurrency1()>();

        d3 = virtualinvoke $r21.<com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed: double getAmount()>();

        $d8 = d3 * d2;

        $d9 = $d8 * d2;

        $d10 = d1 / $d9;

        d5 = $d10 * 1.0;

        $d11 = d3 * d2;

        d6 = -1.0 / $d11;

        r4 = virtualinvoke r0.<com.opengamma.analytics.financial.forex.provider.ForexSwapDiscountingMethod: com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyMulticurveSensitivity presentValueCurveSensitivity(com.opengamma.analytics.financial.forex.derivative.ForexSwap,com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface)>(r1, r2);

        $r22 = interfaceinvoke r2.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface: com.opengamma.analytics.financial.forex.method.FXMatrix getFxRates()>();

        $r23 = virtualinvoke r4.<com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyMulticurveSensitivity: com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyMulticurveSensitivity converted(com.opengamma.util.money.Currency,com.opengamma.analytics.financial.forex.method.FXMatrix)>(r3, $r22);

        r5 = virtualinvoke $r23.<com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyMulticurveSensitivity: com.opengamma.analytics.financial.provider.sensitivity.multicurve.MulticurveSensitivity getSensitivity(com.opengamma.util.money.Currency)>(r3);

        $r24 = new java.util.ArrayList;

        specialinvoke $r24.<java.util.ArrayList: void <init>()>();

        $d12 = neg d0;

        $d13 = $d12 * d2;

        $d14 = $d13 * d5;

        $r25 = staticinvoke <com.opengamma.util.tuple.DoublesPair: com.opengamma.util.tuple.DoublesPair of(double,double)>(d0, $d14);

        interfaceinvoke $r24.<java.util.List: boolean add(java.lang.Object)>($r25);

        $r26 = new java.util.HashMap;

        specialinvoke $r26.<java.util.HashMap: void <init>()>();

        $r27 = interfaceinvoke r2.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface: java.lang.String getName(com.opengamma.util.money.Currency)>(r3);

        interfaceinvoke $r26.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r27, $r24);

        r8 = staticinvoke <com.opengamma.analytics.financial.provider.sensitivity.multicurve.MulticurveSensitivity: com.opengamma.analytics.financial.provider.sensitivity.multicurve.MulticurveSensitivity ofYieldDiscounting(java.util.Map)>($r26);

        $r29 = virtualinvoke r5.<com.opengamma.analytics.financial.provider.sensitivity.multicurve.MulticurveSensitivity: com.opengamma.analytics.financial.provider.sensitivity.multicurve.MulticurveSensitivity multipliedBy(double)>(d6);

        $r30 = virtualinvoke $r29.<com.opengamma.analytics.financial.provider.sensitivity.multicurve.MulticurveSensitivity: com.opengamma.analytics.financial.provider.sensitivity.multicurve.MulticurveSensitivity plus(com.opengamma.analytics.financial.provider.sensitivity.multicurve.MulticurveSensitivity)>(r8);

        return $r30;
    }

    static void <clinit>()
    {
        com.opengamma.analytics.financial.forex.provider.ForexSwapDiscountingMethod $r0;
        com.opengamma.analytics.financial.forex.provider.ForexDiscountingMethod $r1;

        $r0 = new com.opengamma.analytics.financial.forex.provider.ForexSwapDiscountingMethod;

        specialinvoke $r0.<com.opengamma.analytics.financial.forex.provider.ForexSwapDiscountingMethod: void <init>()>();

        <com.opengamma.analytics.financial.forex.provider.ForexSwapDiscountingMethod: com.opengamma.analytics.financial.forex.provider.ForexSwapDiscountingMethod INSTANCE> = $r0;

        $r1 = staticinvoke <com.opengamma.analytics.financial.forex.provider.ForexDiscountingMethod: com.opengamma.analytics.financial.forex.provider.ForexDiscountingMethod getInstance()>();

        <com.opengamma.analytics.financial.forex.provider.ForexSwapDiscountingMethod: com.opengamma.analytics.financial.forex.provider.ForexDiscountingMethod METHOD_FX> = $r1;

        return;
    }
}
