public final class org.jcp.xml.dsig.internal.dom.DOMXPathTransform extends org.jcp.xml.dsig.internal.dom.ApacheTransform
{

    public void <init>()
    {
        org.jcp.xml.dsig.internal.dom.DOMXPathTransform r0;

        r0 := @this: org.jcp.xml.dsig.internal.dom.DOMXPathTransform;

        specialinvoke r0.<org.jcp.xml.dsig.internal.dom.ApacheTransform: void <init>()>();

        return;
    }

    public void init(javax.xml.crypto.dsig.spec.TransformParameterSpec) throws java.security.InvalidAlgorithmParameterException
    {
        org.jcp.xml.dsig.internal.dom.DOMXPathTransform r0;
        javax.xml.crypto.dsig.spec.TransformParameterSpec r1;
        boolean $z0;
        java.security.InvalidAlgorithmParameterException $r2, $r3;

        r0 := @this: org.jcp.xml.dsig.internal.dom.DOMXPathTransform;

        r1 := @parameter0: javax.xml.crypto.dsig.spec.TransformParameterSpec;

        if r1 != null goto label1;

        $r3 = new java.security.InvalidAlgorithmParameterException;

        specialinvoke $r3.<java.security.InvalidAlgorithmParameterException: void <init>(java.lang.String)>("params are required");

        throw $r3;

     label1:
        $z0 = r1 instanceof javax.xml.crypto.dsig.spec.XPathFilterParameterSpec;

        if $z0 != 0 goto label2;

        $r2 = new java.security.InvalidAlgorithmParameterException;

        specialinvoke $r2.<java.security.InvalidAlgorithmParameterException: void <init>(java.lang.String)>("params must be of type XPathFilterParameterSpec");

        throw $r2;

     label2:
        r0.<org.jcp.xml.dsig.internal.dom.DOMXPathTransform: javax.xml.crypto.dsig.spec.TransformParameterSpec params> = r1;

        return;
    }

    public void init(javax.xml.crypto.XMLStructure, javax.xml.crypto.XMLCryptoContext) throws java.security.InvalidAlgorithmParameterException
    {
        org.jcp.xml.dsig.internal.dom.DOMXPathTransform r0;
        javax.xml.crypto.XMLStructure r1;
        javax.xml.crypto.XMLCryptoContext r2;
        org.w3c.dom.Element $r3, $r4;

        r0 := @this: org.jcp.xml.dsig.internal.dom.DOMXPathTransform;

        r1 := @parameter0: javax.xml.crypto.XMLStructure;

        r2 := @parameter1: javax.xml.crypto.XMLCryptoContext;

        specialinvoke r0.<org.jcp.xml.dsig.internal.dom.ApacheTransform: void init(javax.xml.crypto.XMLStructure,javax.xml.crypto.XMLCryptoContext)>(r1, r2);

        $r3 = r0.<org.jcp.xml.dsig.internal.dom.DOMXPathTransform: org.w3c.dom.Element transformElem>;

        $r4 = staticinvoke <org.jcp.xml.dsig.internal.dom.DOMUtils: org.w3c.dom.Element getFirstChildElement(org.w3c.dom.Node)>($r3);

        specialinvoke r0.<org.jcp.xml.dsig.internal.dom.DOMXPathTransform: void unmarshalParams(org.w3c.dom.Element)>($r4);

        return;
    }

    private void unmarshalParams(org.w3c.dom.Element)
    {
        org.jcp.xml.dsig.internal.dom.DOMXPathTransform r0;
        org.w3c.dom.Element r1;
        java.lang.String r2, r6, $r12, $r13;
        org.w3c.dom.NamedNodeMap r3;
        int i0, i1;
        org.w3c.dom.Attr r5;
        org.w3c.dom.Node $r7, $r11;
        javax.xml.crypto.dsig.spec.XPathFilterParameterSpec $r8, $r10;
        java.util.HashMap $r9;
        boolean $z0;

        r0 := @this: org.jcp.xml.dsig.internal.dom.DOMXPathTransform;

        r1 := @parameter0: org.w3c.dom.Element;

        $r7 = interfaceinvoke r1.<org.w3c.dom.Element: org.w3c.dom.Node getFirstChild()>();

        r2 = interfaceinvoke $r7.<org.w3c.dom.Node: java.lang.String getNodeValue()>();

        r3 = interfaceinvoke r1.<org.w3c.dom.Element: org.w3c.dom.NamedNodeMap getAttributes()>();

        if r3 == null goto label4;

        i0 = interfaceinvoke r3.<org.w3c.dom.NamedNodeMap: int getLength()>();

        $r9 = new java.util.HashMap;

        specialinvoke $r9.<java.util.HashMap: void <init>(int)>(i0);

        i1 = 0;

     label1:
        if i1 >= i0 goto label3;

        $r11 = interfaceinvoke r3.<org.w3c.dom.NamedNodeMap: org.w3c.dom.Node item(int)>(i1);

        r5 = (org.w3c.dom.Attr) $r11;

        r6 = interfaceinvoke r5.<org.w3c.dom.Attr: java.lang.String getPrefix()>();

        if r6 == null goto label2;

        $z0 = virtualinvoke r6.<java.lang.String: boolean equals(java.lang.Object)>("xmlns");

        if $z0 == 0 goto label2;

        $r12 = interfaceinvoke r5.<org.w3c.dom.Attr: java.lang.String getLocalName()>();

        $r13 = interfaceinvoke r5.<org.w3c.dom.Attr: java.lang.String getValue()>();

        interfaceinvoke $r9.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r12, $r13);

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        $r10 = new javax.xml.crypto.dsig.spec.XPathFilterParameterSpec;

        specialinvoke $r10.<javax.xml.crypto.dsig.spec.XPathFilterParameterSpec: void <init>(java.lang.String,java.util.Map)>(r2, $r9);

        r0.<org.jcp.xml.dsig.internal.dom.DOMXPathTransform: javax.xml.crypto.dsig.spec.TransformParameterSpec params> = $r10;

        goto label5;

     label4:
        $r8 = new javax.xml.crypto.dsig.spec.XPathFilterParameterSpec;

        specialinvoke $r8.<javax.xml.crypto.dsig.spec.XPathFilterParameterSpec: void <init>(java.lang.String)>(r2);

        r0.<org.jcp.xml.dsig.internal.dom.DOMXPathTransform: javax.xml.crypto.dsig.spec.TransformParameterSpec params> = $r8;

     label5:
        return;
    }

    public void marshalParams(javax.xml.crypto.XMLStructure, javax.xml.crypto.XMLCryptoContext) throws javax.xml.crypto.MarshalException
    {
        org.jcp.xml.dsig.internal.dom.DOMXPathTransform r0;
        javax.xml.crypto.XMLStructure r1;
        javax.xml.crypto.XMLCryptoContext r2;
        javax.xml.crypto.dsig.spec.XPathFilterParameterSpec r3;
        org.w3c.dom.Element r4, $r16;
        java.util.Iterator r5;
        java.util.Map$Entry r6;
        java.security.spec.AlgorithmParameterSpec $r7;
        org.w3c.dom.Document $r8, $r10;
        java.lang.String $r9, $r11, $r22, $r24, $r26;
        org.w3c.dom.Text $r12;
        java.util.Map $r14;
        java.util.Set $r15;
        boolean $z0;
        java.lang.Object $r18, $r21, $r25;
        java.lang.StringBuilder $r19, $r20, $r23;

        r0 := @this: org.jcp.xml.dsig.internal.dom.DOMXPathTransform;

        r1 := @parameter0: javax.xml.crypto.XMLStructure;

        r2 := @parameter1: javax.xml.crypto.XMLCryptoContext;

        specialinvoke r0.<org.jcp.xml.dsig.internal.dom.ApacheTransform: void marshalParams(javax.xml.crypto.XMLStructure,javax.xml.crypto.XMLCryptoContext)>(r1, r2);

        $r7 = virtualinvoke r0.<org.jcp.xml.dsig.internal.dom.DOMXPathTransform: java.security.spec.AlgorithmParameterSpec getParameterSpec()>();

        r3 = (javax.xml.crypto.dsig.spec.XPathFilterParameterSpec) $r7;

        $r8 = r0.<org.jcp.xml.dsig.internal.dom.DOMXPathTransform: org.w3c.dom.Document ownerDoc>;

        $r9 = staticinvoke <org.jcp.xml.dsig.internal.dom.DOMUtils: java.lang.String getSignaturePrefix(javax.xml.crypto.XMLCryptoContext)>(r2);

        r4 = staticinvoke <org.jcp.xml.dsig.internal.dom.DOMUtils: org.w3c.dom.Element createElement(org.w3c.dom.Document,java.lang.String,java.lang.String,java.lang.String)>($r8, "XPath", "http://www.w3.org/2000/09/xmldsig#", $r9);

        $r10 = r0.<org.jcp.xml.dsig.internal.dom.DOMXPathTransform: org.w3c.dom.Document ownerDoc>;

        $r11 = virtualinvoke r3.<javax.xml.crypto.dsig.spec.XPathFilterParameterSpec: java.lang.String getXPath()>();

        $r12 = interfaceinvoke $r10.<org.w3c.dom.Document: org.w3c.dom.Text createTextNode(java.lang.String)>($r11);

        interfaceinvoke r4.<org.w3c.dom.Element: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>($r12);

        $r14 = virtualinvoke r3.<javax.xml.crypto.dsig.spec.XPathFilterParameterSpec: java.util.Map getNamespaceMap()>();

        $r15 = interfaceinvoke $r14.<java.util.Map: java.util.Set entrySet()>();

        r5 = interfaceinvoke $r15.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r18 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>();

        r6 = (java.util.Map$Entry) $r18;

        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("xmlns:");

        $r21 = interfaceinvoke r6.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r22 = (java.lang.String) $r21;

        $r23 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r22);

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        $r25 = interfaceinvoke r6.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r26 = (java.lang.String) $r25;

        interfaceinvoke r4.<org.w3c.dom.Element: void setAttributeNS(java.lang.String,java.lang.String,java.lang.String)>("http://www.w3.org/2000/xmlns/", $r24, $r26);

        goto label1;

     label2:
        $r16 = r0.<org.jcp.xml.dsig.internal.dom.DOMXPathTransform: org.w3c.dom.Element transformElem>;

        interfaceinvoke $r16.<org.w3c.dom.Element: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>(r4);

        return;
    }
}
