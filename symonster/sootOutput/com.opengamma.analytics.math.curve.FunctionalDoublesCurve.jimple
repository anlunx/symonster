public class com.opengamma.analytics.math.curve.FunctionalDoublesCurve extends com.opengamma.analytics.math.curve.DoublesCurve
{
    private static final com.opengamma.analytics.math.differentiation.ScalarFirstOrderDifferentiator DIFF;
    private com.opengamma.analytics.math.function.Function1D _function;
    private com.opengamma.analytics.math.function.Function1D _derivative;

    public static com.opengamma.analytics.math.curve.FunctionalDoublesCurve 'from'(com.opengamma.analytics.math.function.Function1D)
    {
        com.opengamma.analytics.math.function.Function1D r0;
        com.opengamma.analytics.math.curve.FunctionalDoublesCurve $r1;

        r0 := @parameter0: com.opengamma.analytics.math.function.Function1D;

        $r1 = new com.opengamma.analytics.math.curve.FunctionalDoublesCurve;

        specialinvoke $r1.<com.opengamma.analytics.math.curve.FunctionalDoublesCurve: void <init>(com.opengamma.analytics.math.function.Function1D)>(r0);

        return $r1;
    }

    public static com.opengamma.analytics.math.curve.FunctionalDoublesCurve 'from'(com.opengamma.analytics.math.function.Function1D, com.opengamma.analytics.math.function.Function1D)
    {
        com.opengamma.analytics.math.function.Function1D r0, r1;
        com.opengamma.analytics.math.curve.FunctionalDoublesCurve $r2;

        r0 := @parameter0: com.opengamma.analytics.math.function.Function1D;

        r1 := @parameter1: com.opengamma.analytics.math.function.Function1D;

        $r2 = new com.opengamma.analytics.math.curve.FunctionalDoublesCurve;

        specialinvoke $r2.<com.opengamma.analytics.math.curve.FunctionalDoublesCurve: void <init>(com.opengamma.analytics.math.function.Function1D,com.opengamma.analytics.math.function.Function1D)>(r0, r1);

        return $r2;
    }

    public static com.opengamma.analytics.math.curve.FunctionalDoublesCurve 'from'(com.opengamma.analytics.math.function.Function1D, java.lang.String)
    {
        com.opengamma.analytics.math.function.Function1D r0;
        java.lang.String r1;
        com.opengamma.analytics.math.curve.FunctionalDoublesCurve $r2;

        r0 := @parameter0: com.opengamma.analytics.math.function.Function1D;

        r1 := @parameter1: java.lang.String;

        $r2 = new com.opengamma.analytics.math.curve.FunctionalDoublesCurve;

        specialinvoke $r2.<com.opengamma.analytics.math.curve.FunctionalDoublesCurve: void <init>(com.opengamma.analytics.math.function.Function1D,java.lang.String)>(r0, r1);

        return $r2;
    }

    public static com.opengamma.analytics.math.curve.FunctionalDoublesCurve 'from'(com.opengamma.analytics.math.function.Function1D, com.opengamma.analytics.math.function.Function1D, java.lang.String)
    {
        com.opengamma.analytics.math.function.Function1D r0, r1;
        java.lang.String r2;
        com.opengamma.analytics.math.curve.FunctionalDoublesCurve $r3;

        r0 := @parameter0: com.opengamma.analytics.math.function.Function1D;

        r1 := @parameter1: com.opengamma.analytics.math.function.Function1D;

        r2 := @parameter2: java.lang.String;

        $r3 = new com.opengamma.analytics.math.curve.FunctionalDoublesCurve;

        specialinvoke $r3.<com.opengamma.analytics.math.curve.FunctionalDoublesCurve: void <init>(com.opengamma.analytics.math.function.Function1D,com.opengamma.analytics.math.function.Function1D,java.lang.String)>(r0, r1, r2);

        return $r3;
    }

    protected void <init>()
    {
        com.opengamma.analytics.math.curve.FunctionalDoublesCurve r0;

        r0 := @this: com.opengamma.analytics.math.curve.FunctionalDoublesCurve;

        specialinvoke r0.<com.opengamma.analytics.math.curve.DoublesCurve: void <init>()>();

        return;
    }

    public void <init>(com.opengamma.analytics.math.function.Function1D)
    {
        com.opengamma.analytics.math.curve.FunctionalDoublesCurve r0;
        com.opengamma.analytics.math.function.Function1D r1, $r2, $r4;
        com.opengamma.analytics.math.differentiation.ScalarFirstOrderDifferentiator $r3;

        r0 := @this: com.opengamma.analytics.math.curve.FunctionalDoublesCurve;

        r1 := @parameter0: com.opengamma.analytics.math.function.Function1D;

        specialinvoke r0.<com.opengamma.analytics.math.curve.DoublesCurve: void <init>()>();

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object,java.lang.String)>(r1, "function");

        r0.<com.opengamma.analytics.math.curve.FunctionalDoublesCurve: com.opengamma.analytics.math.function.Function1D _function> = r1;

        $r3 = <com.opengamma.analytics.math.curve.FunctionalDoublesCurve: com.opengamma.analytics.math.differentiation.ScalarFirstOrderDifferentiator DIFF>;

        $r2 = r0.<com.opengamma.analytics.math.curve.FunctionalDoublesCurve: com.opengamma.analytics.math.function.Function1D _function>;

        $r4 = virtualinvoke $r3.<com.opengamma.analytics.math.differentiation.ScalarFirstOrderDifferentiator: com.opengamma.analytics.math.function.Function1D differentiate(com.opengamma.analytics.math.function.Function1D)>($r2);

        r0.<com.opengamma.analytics.math.curve.FunctionalDoublesCurve: com.opengamma.analytics.math.function.Function1D _derivative> = $r4;

        return;
    }

    private void <init>(com.opengamma.analytics.math.function.Function1D, com.opengamma.analytics.math.function.Function1D)
    {
        com.opengamma.analytics.math.curve.FunctionalDoublesCurve r0;
        com.opengamma.analytics.math.function.Function1D r1, r2;

        r0 := @this: com.opengamma.analytics.math.curve.FunctionalDoublesCurve;

        r1 := @parameter0: com.opengamma.analytics.math.function.Function1D;

        r2 := @parameter1: com.opengamma.analytics.math.function.Function1D;

        specialinvoke r0.<com.opengamma.analytics.math.curve.DoublesCurve: void <init>()>();

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "function");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, "derivative");

        r0.<com.opengamma.analytics.math.curve.FunctionalDoublesCurve: com.opengamma.analytics.math.function.Function1D _function> = r1;

        r0.<com.opengamma.analytics.math.curve.FunctionalDoublesCurve: com.opengamma.analytics.math.function.Function1D _derivative> = r2;

        return;
    }

    public void <init>(com.opengamma.analytics.math.function.Function1D, java.lang.String)
    {
        com.opengamma.analytics.math.curve.FunctionalDoublesCurve r0;
        com.opengamma.analytics.math.function.Function1D r1, $r3, $r5;
        java.lang.String r2;
        com.opengamma.analytics.math.differentiation.ScalarFirstOrderDifferentiator $r4;

        r0 := @this: com.opengamma.analytics.math.curve.FunctionalDoublesCurve;

        r1 := @parameter0: com.opengamma.analytics.math.function.Function1D;

        r2 := @parameter1: java.lang.String;

        specialinvoke r0.<com.opengamma.analytics.math.curve.DoublesCurve: void <init>(java.lang.String)>(r2);

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object,java.lang.String)>(r1, "function");

        r0.<com.opengamma.analytics.math.curve.FunctionalDoublesCurve: com.opengamma.analytics.math.function.Function1D _function> = r1;

        $r4 = <com.opengamma.analytics.math.curve.FunctionalDoublesCurve: com.opengamma.analytics.math.differentiation.ScalarFirstOrderDifferentiator DIFF>;

        $r3 = r0.<com.opengamma.analytics.math.curve.FunctionalDoublesCurve: com.opengamma.analytics.math.function.Function1D _function>;

        $r5 = virtualinvoke $r4.<com.opengamma.analytics.math.differentiation.ScalarFirstOrderDifferentiator: com.opengamma.analytics.math.function.Function1D differentiate(com.opengamma.analytics.math.function.Function1D)>($r3);

        r0.<com.opengamma.analytics.math.curve.FunctionalDoublesCurve: com.opengamma.analytics.math.function.Function1D _derivative> = $r5;

        return;
    }

    private void <init>(com.opengamma.analytics.math.function.Function1D, com.opengamma.analytics.math.function.Function1D, java.lang.String)
    {
        com.opengamma.analytics.math.curve.FunctionalDoublesCurve r0;
        com.opengamma.analytics.math.function.Function1D r1, r2;
        java.lang.String r3;

        r0 := @this: com.opengamma.analytics.math.curve.FunctionalDoublesCurve;

        r1 := @parameter0: com.opengamma.analytics.math.function.Function1D;

        r2 := @parameter1: com.opengamma.analytics.math.function.Function1D;

        r3 := @parameter2: java.lang.String;

        specialinvoke r0.<com.opengamma.analytics.math.curve.DoublesCurve: void <init>(java.lang.String)>(r3);

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "function");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, "derivative");

        r0.<com.opengamma.analytics.math.curve.FunctionalDoublesCurve: com.opengamma.analytics.math.function.Function1D _function> = r1;

        r0.<com.opengamma.analytics.math.curve.FunctionalDoublesCurve: com.opengamma.analytics.math.function.Function1D _derivative> = r2;

        return;
    }

    public java.lang.Double[] getXData()
    {
        com.opengamma.analytics.math.curve.FunctionalDoublesCurve r0;
        java.lang.UnsupportedOperationException $r1;

        r0 := @this: com.opengamma.analytics.math.curve.FunctionalDoublesCurve;

        $r1 = new java.lang.UnsupportedOperationException;

        specialinvoke $r1.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Cannot get x data - this curve is defined by a function (x -> y)");

        throw $r1;
    }

    public java.lang.Double[] getYData()
    {
        com.opengamma.analytics.math.curve.FunctionalDoublesCurve r0;
        java.lang.UnsupportedOperationException $r1;

        r0 := @this: com.opengamma.analytics.math.curve.FunctionalDoublesCurve;

        $r1 = new java.lang.UnsupportedOperationException;

        specialinvoke $r1.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Cannot get y data - this curve is defined by a function (x -> y)");

        throw $r1;
    }

    public java.lang.Double getYValue(java.lang.Double)
    {
        com.opengamma.analytics.math.curve.FunctionalDoublesCurve r0;
        java.lang.Double r1, $r4;
        com.opengamma.analytics.math.function.Function1D $r2;
        java.lang.Object $r3;

        r0 := @this: com.opengamma.analytics.math.curve.FunctionalDoublesCurve;

        r1 := @parameter0: java.lang.Double;

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object,java.lang.String)>(r1, "x");

        $r2 = r0.<com.opengamma.analytics.math.curve.FunctionalDoublesCurve: com.opengamma.analytics.math.function.Function1D _function>;

        $r3 = virtualinvoke $r2.<com.opengamma.analytics.math.function.Function1D: java.lang.Object evaluate(java.lang.Object)>(r1);

        $r4 = (java.lang.Double) $r3;

        return $r4;
    }

    public double getDyDx(double)
    {
        com.opengamma.analytics.math.curve.FunctionalDoublesCurve r0;
        double d0, $d1;
        com.opengamma.analytics.math.function.Function1D $r1;
        java.lang.Double $r2, $r4;
        java.lang.Object $r3;

        r0 := @this: com.opengamma.analytics.math.curve.FunctionalDoublesCurve;

        d0 := @parameter0: double;

        $r1 = r0.<com.opengamma.analytics.math.curve.FunctionalDoublesCurve: com.opengamma.analytics.math.function.Function1D _derivative>;

        $r2 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d0);

        $r3 = virtualinvoke $r1.<com.opengamma.analytics.math.function.Function1D: java.lang.Object evaluate(java.lang.Object)>($r2);

        $r4 = (java.lang.Double) $r3;

        $d1 = virtualinvoke $r4.<java.lang.Double: double doubleValue()>();

        return $d1;
    }

    public java.lang.Double[] getYValueParameterSensitivity(java.lang.Double)
    {
        com.opengamma.analytics.math.curve.FunctionalDoublesCurve r0;
        java.lang.Double r1;
        java.lang.UnsupportedOperationException $r2;

        r0 := @this: com.opengamma.analytics.math.curve.FunctionalDoublesCurve;

        r1 := @parameter0: java.lang.Double;

        $r2 = new java.lang.UnsupportedOperationException;

        specialinvoke $r2.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Parameter sensitivity not supported yet for FunctionalDoublesCurve");

        throw $r2;
    }

    public int size()
    {
        com.opengamma.analytics.math.curve.FunctionalDoublesCurve r0;
        java.lang.UnsupportedOperationException $r1;

        r0 := @this: com.opengamma.analytics.math.curve.FunctionalDoublesCurve;

        $r1 = new java.lang.UnsupportedOperationException;

        specialinvoke $r1.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Cannot get size - this curve is defined by a function (x -> y)");

        throw $r1;
    }

    public com.opengamma.analytics.math.curve.InterpolatedDoublesCurve toInterpolatedDoublesCurve(double[], com.opengamma.analytics.math.interpolation.Interpolator1D)
    {
        com.opengamma.analytics.math.curve.FunctionalDoublesCurve r0;
        double[] r1, r3;
        com.opengamma.analytics.math.interpolation.Interpolator1D r2;
        int i0, i1;
        com.opengamma.analytics.math.curve.InterpolatedDoublesCurve $r4;
        double $d0, $d1;
        com.opengamma.analytics.math.function.Function1D $r5;
        java.lang.Double $r6, $r8;
        java.lang.Object $r7;

        r0 := @this: com.opengamma.analytics.math.curve.FunctionalDoublesCurve;

        r1 := @parameter0: double[];

        r2 := @parameter1: com.opengamma.analytics.math.interpolation.Interpolator1D;

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object,java.lang.String)>(r1, "x");

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object)>(r2);

        i0 = lengthof r1;

        r3 = newarray (double)[i0];

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        $r5 = r0.<com.opengamma.analytics.math.curve.FunctionalDoublesCurve: com.opengamma.analytics.math.function.Function1D _function>;

        $d0 = r1[i1];

        $r6 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        $r7 = virtualinvoke $r5.<com.opengamma.analytics.math.function.Function1D: java.lang.Object evaluate(java.lang.Object)>($r6);

        $r8 = (java.lang.Double) $r7;

        $d1 = virtualinvoke $r8.<java.lang.Double: double doubleValue()>();

        r3[i1] = $d1;

        i1 = i1 + 1;

        goto label1;

     label2:
        $r4 = staticinvoke <com.opengamma.analytics.math.curve.InterpolatedDoublesCurve: com.opengamma.analytics.math.curve.InterpolatedDoublesCurve 'from'(double[],double[],com.opengamma.analytics.math.interpolation.Interpolator1D)>(r1, r3, r2);

        return $r4;
    }

    public com.opengamma.analytics.math.function.Function1D getFunction()
    {
        com.opengamma.analytics.math.curve.FunctionalDoublesCurve r0;
        com.opengamma.analytics.math.function.Function1D $r1;

        r0 := @this: com.opengamma.analytics.math.curve.FunctionalDoublesCurve;

        $r1 = r0.<com.opengamma.analytics.math.curve.FunctionalDoublesCurve: com.opengamma.analytics.math.function.Function1D _function>;

        return $r1;
    }

    public com.opengamma.analytics.math.function.Function1D getFirstDerivativeFunction()
    {
        com.opengamma.analytics.math.curve.FunctionalDoublesCurve r0;
        com.opengamma.analytics.math.function.Function1D $r1;

        r0 := @this: com.opengamma.analytics.math.curve.FunctionalDoublesCurve;

        $r1 = r0.<com.opengamma.analytics.math.curve.FunctionalDoublesCurve: com.opengamma.analytics.math.function.Function1D _derivative>;

        return $r1;
    }

    public boolean equals(java.lang.Object)
    {
        com.opengamma.analytics.math.curve.FunctionalDoublesCurve r0, r2;
        java.lang.Object r1;
        boolean $z0, $z1;
        java.lang.Class $r3, $r4;
        com.opengamma.analytics.math.function.Function1D $r5, $r6;

        r0 := @this: com.opengamma.analytics.math.curve.FunctionalDoublesCurve;

        r1 := @parameter0: java.lang.Object;

        if r0 != r1 goto label1;

        return 1;

     label1:
        $z0 = specialinvoke r0.<com.opengamma.analytics.math.curve.DoublesCurve: boolean equals(java.lang.Object)>(r1);

        if $z0 != 0 goto label2;

        return 0;

     label2:
        $r3 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r4 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        if $r3 == $r4 goto label3;

        return 0;

     label3:
        r2 = (com.opengamma.analytics.math.curve.FunctionalDoublesCurve) r1;

        $r6 = r0.<com.opengamma.analytics.math.curve.FunctionalDoublesCurve: com.opengamma.analytics.math.function.Function1D _function>;

        $r5 = r2.<com.opengamma.analytics.math.curve.FunctionalDoublesCurve: com.opengamma.analytics.math.function.Function1D _function>;

        $z1 = staticinvoke <org.apache.commons.lang.ObjectUtils: boolean equals(java.lang.Object,java.lang.Object)>($r6, $r5);

        return $z1;
    }

    public int hashCode()
    {
        com.opengamma.analytics.math.curve.FunctionalDoublesCurve r0;
        com.opengamma.analytics.math.function.Function1D $r1;
        int $i1, $i2, i3, i4;

        r0 := @this: com.opengamma.analytics.math.curve.FunctionalDoublesCurve;

        i3 = specialinvoke r0.<com.opengamma.analytics.math.curve.DoublesCurve: int hashCode()>();

        $i1 = 31 * i3;

        $r1 = r0.<com.opengamma.analytics.math.curve.FunctionalDoublesCurve: com.opengamma.analytics.math.function.Function1D _function>;

        $i2 = virtualinvoke $r1.<java.lang.Object: int hashCode()>();

        i4 = $i1 + $i2;

        return i4;
    }

    public static com.opengamma.analytics.math.curve.FunctionalDoublesCurve$Meta meta()
    {
        com.opengamma.analytics.math.curve.FunctionalDoublesCurve$Meta $r0;

        $r0 = <com.opengamma.analytics.math.curve.FunctionalDoublesCurve$Meta: com.opengamma.analytics.math.curve.FunctionalDoublesCurve$Meta INSTANCE>;

        return $r0;
    }

    public com.opengamma.analytics.math.curve.FunctionalDoublesCurve$Meta metaBean()
    {
        com.opengamma.analytics.math.curve.FunctionalDoublesCurve r0;
        com.opengamma.analytics.math.curve.FunctionalDoublesCurve$Meta $r1;

        r0 := @this: com.opengamma.analytics.math.curve.FunctionalDoublesCurve;

        $r1 = <com.opengamma.analytics.math.curve.FunctionalDoublesCurve$Meta: com.opengamma.analytics.math.curve.FunctionalDoublesCurve$Meta INSTANCE>;

        return $r1;
    }

    private void setFunction(com.opengamma.analytics.math.function.Function1D)
    {
        com.opengamma.analytics.math.curve.FunctionalDoublesCurve r0;
        com.opengamma.analytics.math.function.Function1D r1;

        r0 := @this: com.opengamma.analytics.math.curve.FunctionalDoublesCurve;

        r1 := @parameter0: com.opengamma.analytics.math.function.Function1D;

        staticinvoke <org.joda.beans.JodaBeanUtils: void notNull(java.lang.Object,java.lang.String)>(r1, "function");

        r0.<com.opengamma.analytics.math.curve.FunctionalDoublesCurve: com.opengamma.analytics.math.function.Function1D _function> = r1;

        return;
    }

    public final org.joda.beans.Property function()
    {
        com.opengamma.analytics.math.curve.FunctionalDoublesCurve r0;
        com.opengamma.analytics.math.curve.FunctionalDoublesCurve$Meta $r1;
        org.joda.beans.MetaProperty $r2;
        org.joda.beans.Property $r3;

        r0 := @this: com.opengamma.analytics.math.curve.FunctionalDoublesCurve;

        $r1 = virtualinvoke r0.<com.opengamma.analytics.math.curve.FunctionalDoublesCurve: com.opengamma.analytics.math.curve.FunctionalDoublesCurve$Meta metaBean()>();

        $r2 = virtualinvoke $r1.<com.opengamma.analytics.math.curve.FunctionalDoublesCurve$Meta: org.joda.beans.MetaProperty function()>();

        $r3 = interfaceinvoke $r2.<org.joda.beans.MetaProperty: org.joda.beans.Property createProperty(org.joda.beans.Bean)>(r0);

        return $r3;
    }

    private com.opengamma.analytics.math.function.Function1D getDerivative()
    {
        com.opengamma.analytics.math.curve.FunctionalDoublesCurve r0;
        com.opengamma.analytics.math.function.Function1D $r1;

        r0 := @this: com.opengamma.analytics.math.curve.FunctionalDoublesCurve;

        $r1 = r0.<com.opengamma.analytics.math.curve.FunctionalDoublesCurve: com.opengamma.analytics.math.function.Function1D _derivative>;

        return $r1;
    }

    private void setDerivative(com.opengamma.analytics.math.function.Function1D)
    {
        com.opengamma.analytics.math.curve.FunctionalDoublesCurve r0;
        com.opengamma.analytics.math.function.Function1D r1;

        r0 := @this: com.opengamma.analytics.math.curve.FunctionalDoublesCurve;

        r1 := @parameter0: com.opengamma.analytics.math.function.Function1D;

        staticinvoke <org.joda.beans.JodaBeanUtils: void notNull(java.lang.Object,java.lang.String)>(r1, "derivative");

        r0.<com.opengamma.analytics.math.curve.FunctionalDoublesCurve: com.opengamma.analytics.math.function.Function1D _derivative> = r1;

        return;
    }

    public final org.joda.beans.Property derivative()
    {
        com.opengamma.analytics.math.curve.FunctionalDoublesCurve r0;
        com.opengamma.analytics.math.curve.FunctionalDoublesCurve$Meta $r1;
        org.joda.beans.MetaProperty $r2;
        org.joda.beans.Property $r3;

        r0 := @this: com.opengamma.analytics.math.curve.FunctionalDoublesCurve;

        $r1 = virtualinvoke r0.<com.opengamma.analytics.math.curve.FunctionalDoublesCurve: com.opengamma.analytics.math.curve.FunctionalDoublesCurve$Meta metaBean()>();

        $r2 = virtualinvoke $r1.<com.opengamma.analytics.math.curve.FunctionalDoublesCurve$Meta: org.joda.beans.MetaProperty derivative()>();

        $r3 = interfaceinvoke $r2.<org.joda.beans.MetaProperty: org.joda.beans.Property createProperty(org.joda.beans.Bean)>(r0);

        return $r3;
    }

    public com.opengamma.analytics.math.curve.FunctionalDoublesCurve clone()
    {
        com.opengamma.analytics.math.curve.FunctionalDoublesCurve r0, $r2;
        org.joda.beans.Bean $r1;

        r0 := @this: com.opengamma.analytics.math.curve.FunctionalDoublesCurve;

        $r1 = staticinvoke <org.joda.beans.JodaBeanUtils: org.joda.beans.Bean cloneAlways(org.joda.beans.Bean)>(r0);

        $r2 = (com.opengamma.analytics.math.curve.FunctionalDoublesCurve) $r1;

        return $r2;
    }

    public java.lang.String toString()
    {
        com.opengamma.analytics.math.curve.FunctionalDoublesCurve r0;
        int i0, $i1, $i2, $i3;
        java.lang.StringBuilder $r2;
        java.lang.String $r5;

        r0 := @this: com.opengamma.analytics.math.curve.FunctionalDoublesCurve;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(int)>(96);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("FunctionalDoublesCurve{");

        i0 = virtualinvoke $r2.<java.lang.StringBuilder: int length()>();

        virtualinvoke r0.<com.opengamma.analytics.math.curve.FunctionalDoublesCurve: void toString(java.lang.StringBuilder)>($r2);

        $i1 = virtualinvoke $r2.<java.lang.StringBuilder: int length()>();

        if $i1 <= i0 goto label1;

        $i2 = virtualinvoke $r2.<java.lang.StringBuilder: int length()>();

        $i3 = $i2 - 2;

        virtualinvoke $r2.<java.lang.StringBuilder: void setLength(int)>($i3);

     label1:
        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(125);

        $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r5;
    }

    protected void toString(java.lang.StringBuilder)
    {
        com.opengamma.analytics.math.curve.FunctionalDoublesCurve r0;
        java.lang.StringBuilder r1, $r2, $r3, $r6, $r7, $r9, $r10, $r13, $r14;
        com.opengamma.analytics.math.function.Function1D $r4, $r11;
        java.lang.String $r5, $r12;

        r0 := @this: com.opengamma.analytics.math.curve.FunctionalDoublesCurve;

        r1 := @parameter0: java.lang.StringBuilder;

        specialinvoke r0.<com.opengamma.analytics.math.curve.DoublesCurve: void toString(java.lang.StringBuilder)>(r1);

        $r2 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("function");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(61);

        $r4 = virtualinvoke r0.<com.opengamma.analytics.math.curve.FunctionalDoublesCurve: com.opengamma.analytics.math.function.Function1D getFunction()>();

        $r5 = staticinvoke <org.joda.beans.JodaBeanUtils: java.lang.String toString(java.lang.Object)>($r4);

        $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(44);

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

        $r9 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("derivative");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(61);

        $r11 = specialinvoke r0.<com.opengamma.analytics.math.curve.FunctionalDoublesCurve: com.opengamma.analytics.math.function.Function1D getDerivative()>();

        $r12 = staticinvoke <org.joda.beans.JodaBeanUtils: java.lang.String toString(java.lang.Object)>($r11);

        $r13 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(44);

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

        return;
    }

    public volatile com.opengamma.analytics.math.curve.DoublesCurve$Meta metaBean()
    {
        com.opengamma.analytics.math.curve.FunctionalDoublesCurve r0;
        com.opengamma.analytics.math.curve.FunctionalDoublesCurve$Meta $r1;

        r0 := @this: com.opengamma.analytics.math.curve.FunctionalDoublesCurve;

        $r1 = virtualinvoke r0.<com.opengamma.analytics.math.curve.FunctionalDoublesCurve: com.opengamma.analytics.math.curve.FunctionalDoublesCurve$Meta metaBean()>();

        return $r1;
    }

    public volatile com.opengamma.analytics.math.curve.Curve clone()
    {
        com.opengamma.analytics.math.curve.FunctionalDoublesCurve r0, $r1;

        r0 := @this: com.opengamma.analytics.math.curve.FunctionalDoublesCurve;

        $r1 = virtualinvoke r0.<com.opengamma.analytics.math.curve.FunctionalDoublesCurve: com.opengamma.analytics.math.curve.FunctionalDoublesCurve clone()>();

        return $r1;
    }

    public volatile com.opengamma.analytics.math.curve.Curve$Meta metaBean()
    {
        com.opengamma.analytics.math.curve.FunctionalDoublesCurve r0;
        com.opengamma.analytics.math.curve.FunctionalDoublesCurve$Meta $r1;

        r0 := @this: com.opengamma.analytics.math.curve.FunctionalDoublesCurve;

        $r1 = virtualinvoke r0.<com.opengamma.analytics.math.curve.FunctionalDoublesCurve: com.opengamma.analytics.math.curve.FunctionalDoublesCurve$Meta metaBean()>();

        return $r1;
    }

    public volatile java.lang.Object getYValue(java.lang.Comparable)
    {
        com.opengamma.analytics.math.curve.FunctionalDoublesCurve r0;
        java.lang.Comparable r1;
        java.lang.Double $r2, $r3;

        r0 := @this: com.opengamma.analytics.math.curve.FunctionalDoublesCurve;

        r1 := @parameter0: java.lang.Comparable;

        $r2 = (java.lang.Double) r1;

        $r3 = virtualinvoke r0.<com.opengamma.analytics.math.curve.FunctionalDoublesCurve: java.lang.Double getYValue(java.lang.Double)>($r2);

        return $r3;
    }

    public volatile java.lang.Object[] getYData()
    {
        com.opengamma.analytics.math.curve.FunctionalDoublesCurve r0;
        java.lang.Double[] $r1;

        r0 := @this: com.opengamma.analytics.math.curve.FunctionalDoublesCurve;

        $r1 = virtualinvoke r0.<com.opengamma.analytics.math.curve.FunctionalDoublesCurve: java.lang.Double[] getYData()>();

        return $r1;
    }

    public volatile java.lang.Comparable[] getXData()
    {
        com.opengamma.analytics.math.curve.FunctionalDoublesCurve r0;
        java.lang.Double[] $r1;

        r0 := @this: com.opengamma.analytics.math.curve.FunctionalDoublesCurve;

        $r1 = virtualinvoke r0.<com.opengamma.analytics.math.curve.FunctionalDoublesCurve: java.lang.Double[] getXData()>();

        return $r1;
    }

    public volatile org.joda.beans.MetaBean metaBean()
    {
        com.opengamma.analytics.math.curve.FunctionalDoublesCurve r0;
        com.opengamma.analytics.math.curve.FunctionalDoublesCurve$Meta $r1;
        org.joda.beans.MetaBean r2;

        r0 := @this: com.opengamma.analytics.math.curve.FunctionalDoublesCurve;

        $r1 = virtualinvoke r0.<com.opengamma.analytics.math.curve.FunctionalDoublesCurve: com.opengamma.analytics.math.curve.FunctionalDoublesCurve$Meta metaBean()>();

        r2 = (org.joda.beans.MetaBean) $r1;

        return r2;
    }

    public volatile java.lang.Object clone() throws java.lang.CloneNotSupportedException
    {
        com.opengamma.analytics.math.curve.FunctionalDoublesCurve r0, $r1;

        r0 := @this: com.opengamma.analytics.math.curve.FunctionalDoublesCurve;

        $r1 = virtualinvoke r0.<com.opengamma.analytics.math.curve.FunctionalDoublesCurve: com.opengamma.analytics.math.curve.FunctionalDoublesCurve clone()>();

        return $r1;
    }

    static com.opengamma.analytics.math.function.Function1D access$000(com.opengamma.analytics.math.curve.FunctionalDoublesCurve)
    {
        com.opengamma.analytics.math.curve.FunctionalDoublesCurve r0;
        com.opengamma.analytics.math.function.Function1D $r1;

        r0 := @parameter0: com.opengamma.analytics.math.curve.FunctionalDoublesCurve;

        $r1 = specialinvoke r0.<com.opengamma.analytics.math.curve.FunctionalDoublesCurve: com.opengamma.analytics.math.function.Function1D getDerivative()>();

        return $r1;
    }

    static void access$100(com.opengamma.analytics.math.curve.FunctionalDoublesCurve, com.opengamma.analytics.math.function.Function1D)
    {
        com.opengamma.analytics.math.curve.FunctionalDoublesCurve r0;
        com.opengamma.analytics.math.function.Function1D r1;

        r0 := @parameter0: com.opengamma.analytics.math.curve.FunctionalDoublesCurve;

        r1 := @parameter1: com.opengamma.analytics.math.function.Function1D;

        specialinvoke r0.<com.opengamma.analytics.math.curve.FunctionalDoublesCurve: void setFunction(com.opengamma.analytics.math.function.Function1D)>(r1);

        return;
    }

    static void access$200(com.opengamma.analytics.math.curve.FunctionalDoublesCurve, com.opengamma.analytics.math.function.Function1D)
    {
        com.opengamma.analytics.math.curve.FunctionalDoublesCurve r0;
        com.opengamma.analytics.math.function.Function1D r1;

        r0 := @parameter0: com.opengamma.analytics.math.curve.FunctionalDoublesCurve;

        r1 := @parameter1: com.opengamma.analytics.math.function.Function1D;

        specialinvoke r0.<com.opengamma.analytics.math.curve.FunctionalDoublesCurve: void setDerivative(com.opengamma.analytics.math.function.Function1D)>(r1);

        return;
    }

    static com.opengamma.analytics.math.function.Function1D access$300(com.opengamma.analytics.math.curve.FunctionalDoublesCurve)
    {
        com.opengamma.analytics.math.curve.FunctionalDoublesCurve r0;
        com.opengamma.analytics.math.function.Function1D $r1;

        r0 := @parameter0: com.opengamma.analytics.math.curve.FunctionalDoublesCurve;

        $r1 = r0.<com.opengamma.analytics.math.curve.FunctionalDoublesCurve: com.opengamma.analytics.math.function.Function1D _function>;

        return $r1;
    }

    static com.opengamma.analytics.math.function.Function1D access$400(com.opengamma.analytics.math.curve.FunctionalDoublesCurve)
    {
        com.opengamma.analytics.math.curve.FunctionalDoublesCurve r0;
        com.opengamma.analytics.math.function.Function1D $r1;

        r0 := @parameter0: com.opengamma.analytics.math.curve.FunctionalDoublesCurve;

        $r1 = r0.<com.opengamma.analytics.math.curve.FunctionalDoublesCurve: com.opengamma.analytics.math.function.Function1D _derivative>;

        return $r1;
    }

    static void <clinit>()
    {
        com.opengamma.analytics.math.curve.FunctionalDoublesCurve$Meta $r1;
        com.opengamma.analytics.math.differentiation.ScalarFirstOrderDifferentiator r2;
        org.joda.beans.MetaBean r3;

        r2 = new com.opengamma.analytics.math.differentiation.ScalarFirstOrderDifferentiator;

        specialinvoke r2.<com.opengamma.analytics.math.differentiation.ScalarFirstOrderDifferentiator: void <init>()>();

        <com.opengamma.analytics.math.curve.FunctionalDoublesCurve: com.opengamma.analytics.math.differentiation.ScalarFirstOrderDifferentiator DIFF> = r2;

        $r1 = <com.opengamma.analytics.math.curve.FunctionalDoublesCurve$Meta: com.opengamma.analytics.math.curve.FunctionalDoublesCurve$Meta INSTANCE>;

        r3 = (org.joda.beans.MetaBean) $r1;

        staticinvoke <org.joda.beans.JodaBeanUtils: void registerMetaBean(org.joda.beans.MetaBean)>(r3);

        return;
    }
}
