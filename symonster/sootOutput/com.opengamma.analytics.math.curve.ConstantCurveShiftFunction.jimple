public class com.opengamma.analytics.math.curve.ConstantCurveShiftFunction extends java.lang.Object implements com.opengamma.analytics.math.curve.CurveShiftFunction
{

    public void <init>()
    {
        com.opengamma.analytics.math.curve.ConstantCurveShiftFunction r0;

        r0 := @this: com.opengamma.analytics.math.curve.ConstantCurveShiftFunction;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public com.opengamma.analytics.math.curve.ConstantDoublesCurve evaluate(com.opengamma.analytics.math.curve.ConstantDoublesCurve, double)
    {
        com.opengamma.analytics.math.curve.ConstantCurveShiftFunction r0;
        com.opengamma.analytics.math.curve.ConstantDoublesCurve r1, $r7;
        double d0;
        java.lang.StringBuilder $r2, $r3, $r5;
        java.lang.String $r4, $r6;

        r0 := @this: com.opengamma.analytics.math.curve.ConstantCurveShiftFunction;

        r1 := @parameter0: com.opengamma.analytics.math.curve.ConstantDoublesCurve;

        d0 := @parameter1: double;

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object,java.lang.String)>(r1, "curve");

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("PARALLEL_SHIFT_");

        $r4 = virtualinvoke r1.<com.opengamma.analytics.math.curve.ConstantDoublesCurve: java.lang.String getName()>();

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        $r7 = virtualinvoke r0.<com.opengamma.analytics.math.curve.ConstantCurveShiftFunction: com.opengamma.analytics.math.curve.ConstantDoublesCurve evaluate(com.opengamma.analytics.math.curve.ConstantDoublesCurve,double,java.lang.String)>(r1, d0, $r6);

        return $r7;
    }

    public com.opengamma.analytics.math.curve.ConstantDoublesCurve evaluate(com.opengamma.analytics.math.curve.ConstantDoublesCurve, double, java.lang.String)
    {
        com.opengamma.analytics.math.curve.ConstantCurveShiftFunction r0;
        com.opengamma.analytics.math.curve.ConstantDoublesCurve r1, $r5;
        double d0, d1, $d2;
        java.lang.String r2;
        java.lang.Double[] $r3;
        java.lang.Double $r4;

        r0 := @this: com.opengamma.analytics.math.curve.ConstantCurveShiftFunction;

        r1 := @parameter0: com.opengamma.analytics.math.curve.ConstantDoublesCurve;

        d0 := @parameter1: double;

        r2 := @parameter2: java.lang.String;

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object,java.lang.String)>(r1, "curve");

        $r3 = virtualinvoke r1.<com.opengamma.analytics.math.curve.ConstantDoublesCurve: java.lang.Double[] getYData()>();

        $r4 = $r3[0];

        d1 = virtualinvoke $r4.<java.lang.Double: double doubleValue()>();

        $d2 = d1 + d0;

        $r5 = staticinvoke <com.opengamma.analytics.math.curve.ConstantDoublesCurve: com.opengamma.analytics.math.curve.ConstantDoublesCurve 'from'(double,java.lang.String)>($d2, r2);

        return $r5;
    }

    public com.opengamma.analytics.math.curve.ConstantDoublesCurve evaluate(com.opengamma.analytics.math.curve.ConstantDoublesCurve, double, double)
    {
        com.opengamma.analytics.math.curve.ConstantCurveShiftFunction r0;
        com.opengamma.analytics.math.curve.ConstantDoublesCurve r1;
        double d0, d1;
        java.lang.UnsupportedOperationException $r2;

        r0 := @this: com.opengamma.analytics.math.curve.ConstantCurveShiftFunction;

        r1 := @parameter0: com.opengamma.analytics.math.curve.ConstantDoublesCurve;

        d0 := @parameter1: double;

        d1 := @parameter2: double;

        $r2 = new java.lang.UnsupportedOperationException;

        specialinvoke $r2.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r2;
    }

    public com.opengamma.analytics.math.curve.ConstantDoublesCurve evaluate(com.opengamma.analytics.math.curve.ConstantDoublesCurve, double, double, java.lang.String)
    {
        com.opengamma.analytics.math.curve.ConstantCurveShiftFunction r0;
        com.opengamma.analytics.math.curve.ConstantDoublesCurve r1;
        double d0, d1;
        java.lang.String r2;
        java.lang.UnsupportedOperationException $r3;

        r0 := @this: com.opengamma.analytics.math.curve.ConstantCurveShiftFunction;

        r1 := @parameter0: com.opengamma.analytics.math.curve.ConstantDoublesCurve;

        d0 := @parameter1: double;

        d1 := @parameter2: double;

        r2 := @parameter3: java.lang.String;

        $r3 = new java.lang.UnsupportedOperationException;

        specialinvoke $r3.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r3;
    }

    public com.opengamma.analytics.math.curve.ConstantDoublesCurve evaluate(com.opengamma.analytics.math.curve.ConstantDoublesCurve, double[], double[])
    {
        com.opengamma.analytics.math.curve.ConstantCurveShiftFunction r0;
        com.opengamma.analytics.math.curve.ConstantDoublesCurve r1;
        double[] r2, r3;
        java.lang.UnsupportedOperationException $r4;

        r0 := @this: com.opengamma.analytics.math.curve.ConstantCurveShiftFunction;

        r1 := @parameter0: com.opengamma.analytics.math.curve.ConstantDoublesCurve;

        r2 := @parameter1: double[];

        r3 := @parameter2: double[];

        $r4 = new java.lang.UnsupportedOperationException;

        specialinvoke $r4.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r4;
    }

    public com.opengamma.analytics.math.curve.ConstantDoublesCurve evaluate(com.opengamma.analytics.math.curve.ConstantDoublesCurve, double[], double[], java.lang.String)
    {
        com.opengamma.analytics.math.curve.ConstantCurveShiftFunction r0;
        com.opengamma.analytics.math.curve.ConstantDoublesCurve r1;
        double[] r2, r3;
        java.lang.String r4;
        java.lang.UnsupportedOperationException $r5;

        r0 := @this: com.opengamma.analytics.math.curve.ConstantCurveShiftFunction;

        r1 := @parameter0: com.opengamma.analytics.math.curve.ConstantDoublesCurve;

        r2 := @parameter1: double[];

        r3 := @parameter2: double[];

        r4 := @parameter3: java.lang.String;

        $r5 = new java.lang.UnsupportedOperationException;

        specialinvoke $r5.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r5;
    }

    public volatile com.opengamma.analytics.math.curve.Curve evaluate(com.opengamma.analytics.math.curve.Curve, double[], double[], java.lang.String)
    {
        com.opengamma.analytics.math.curve.ConstantCurveShiftFunction r0;
        com.opengamma.analytics.math.curve.Curve r1;
        double[] r2, r3;
        java.lang.String r4;
        com.opengamma.analytics.math.curve.ConstantDoublesCurve $r5, $r6;

        r0 := @this: com.opengamma.analytics.math.curve.ConstantCurveShiftFunction;

        r1 := @parameter0: com.opengamma.analytics.math.curve.Curve;

        r2 := @parameter1: double[];

        r3 := @parameter2: double[];

        r4 := @parameter3: java.lang.String;

        $r5 = (com.opengamma.analytics.math.curve.ConstantDoublesCurve) r1;

        $r6 = virtualinvoke r0.<com.opengamma.analytics.math.curve.ConstantCurveShiftFunction: com.opengamma.analytics.math.curve.ConstantDoublesCurve evaluate(com.opengamma.analytics.math.curve.ConstantDoublesCurve,double[],double[],java.lang.String)>($r5, r2, r3, r4);

        return $r6;
    }

    public volatile com.opengamma.analytics.math.curve.Curve evaluate(com.opengamma.analytics.math.curve.Curve, double[], double[])
    {
        com.opengamma.analytics.math.curve.ConstantCurveShiftFunction r0;
        com.opengamma.analytics.math.curve.Curve r1;
        double[] r2, r3;
        com.opengamma.analytics.math.curve.ConstantDoublesCurve $r4, $r5;

        r0 := @this: com.opengamma.analytics.math.curve.ConstantCurveShiftFunction;

        r1 := @parameter0: com.opengamma.analytics.math.curve.Curve;

        r2 := @parameter1: double[];

        r3 := @parameter2: double[];

        $r4 = (com.opengamma.analytics.math.curve.ConstantDoublesCurve) r1;

        $r5 = virtualinvoke r0.<com.opengamma.analytics.math.curve.ConstantCurveShiftFunction: com.opengamma.analytics.math.curve.ConstantDoublesCurve evaluate(com.opengamma.analytics.math.curve.ConstantDoublesCurve,double[],double[])>($r4, r2, r3);

        return $r5;
    }

    public volatile com.opengamma.analytics.math.curve.Curve evaluate(com.opengamma.analytics.math.curve.Curve, double, double, java.lang.String)
    {
        com.opengamma.analytics.math.curve.ConstantCurveShiftFunction r0;
        com.opengamma.analytics.math.curve.Curve r1;
        double d0, d1;
        java.lang.String r2;
        com.opengamma.analytics.math.curve.ConstantDoublesCurve $r3, $r4;

        r0 := @this: com.opengamma.analytics.math.curve.ConstantCurveShiftFunction;

        r1 := @parameter0: com.opengamma.analytics.math.curve.Curve;

        d0 := @parameter1: double;

        d1 := @parameter2: double;

        r2 := @parameter3: java.lang.String;

        $r3 = (com.opengamma.analytics.math.curve.ConstantDoublesCurve) r1;

        $r4 = virtualinvoke r0.<com.opengamma.analytics.math.curve.ConstantCurveShiftFunction: com.opengamma.analytics.math.curve.ConstantDoublesCurve evaluate(com.opengamma.analytics.math.curve.ConstantDoublesCurve,double,double,java.lang.String)>($r3, d0, d1, r2);

        return $r4;
    }

    public volatile com.opengamma.analytics.math.curve.Curve evaluate(com.opengamma.analytics.math.curve.Curve, double, double)
    {
        com.opengamma.analytics.math.curve.ConstantCurveShiftFunction r0;
        com.opengamma.analytics.math.curve.Curve r1;
        double d0, d1;
        com.opengamma.analytics.math.curve.ConstantDoublesCurve $r2, $r3;

        r0 := @this: com.opengamma.analytics.math.curve.ConstantCurveShiftFunction;

        r1 := @parameter0: com.opengamma.analytics.math.curve.Curve;

        d0 := @parameter1: double;

        d1 := @parameter2: double;

        $r2 = (com.opengamma.analytics.math.curve.ConstantDoublesCurve) r1;

        $r3 = virtualinvoke r0.<com.opengamma.analytics.math.curve.ConstantCurveShiftFunction: com.opengamma.analytics.math.curve.ConstantDoublesCurve evaluate(com.opengamma.analytics.math.curve.ConstantDoublesCurve,double,double)>($r2, d0, d1);

        return $r3;
    }

    public volatile com.opengamma.analytics.math.curve.Curve evaluate(com.opengamma.analytics.math.curve.Curve, double, java.lang.String)
    {
        com.opengamma.analytics.math.curve.ConstantCurveShiftFunction r0;
        com.opengamma.analytics.math.curve.Curve r1;
        double d0;
        java.lang.String r2;
        com.opengamma.analytics.math.curve.ConstantDoublesCurve $r3, $r4;

        r0 := @this: com.opengamma.analytics.math.curve.ConstantCurveShiftFunction;

        r1 := @parameter0: com.opengamma.analytics.math.curve.Curve;

        d0 := @parameter1: double;

        r2 := @parameter2: java.lang.String;

        $r3 = (com.opengamma.analytics.math.curve.ConstantDoublesCurve) r1;

        $r4 = virtualinvoke r0.<com.opengamma.analytics.math.curve.ConstantCurveShiftFunction: com.opengamma.analytics.math.curve.ConstantDoublesCurve evaluate(com.opengamma.analytics.math.curve.ConstantDoublesCurve,double,java.lang.String)>($r3, d0, r2);

        return $r4;
    }

    public volatile com.opengamma.analytics.math.curve.Curve evaluate(com.opengamma.analytics.math.curve.Curve, double)
    {
        com.opengamma.analytics.math.curve.ConstantCurveShiftFunction r0;
        com.opengamma.analytics.math.curve.Curve r1;
        double d0;
        com.opengamma.analytics.math.curve.ConstantDoublesCurve $r2, $r3;

        r0 := @this: com.opengamma.analytics.math.curve.ConstantCurveShiftFunction;

        r1 := @parameter0: com.opengamma.analytics.math.curve.Curve;

        d0 := @parameter1: double;

        $r2 = (com.opengamma.analytics.math.curve.ConstantDoublesCurve) r1;

        $r3 = virtualinvoke r0.<com.opengamma.analytics.math.curve.ConstantCurveShiftFunction: com.opengamma.analytics.math.curve.ConstantDoublesCurve evaluate(com.opengamma.analytics.math.curve.ConstantDoublesCurve,double)>($r2, d0);

        return $r3;
    }
}
