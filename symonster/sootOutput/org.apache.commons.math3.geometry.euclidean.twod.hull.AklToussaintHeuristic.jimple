public final class org.apache.commons.math3.geometry.euclidean.twod.hull.AklToussaintHeuristic extends java.lang.Object
{

    private void <init>()
    {
        org.apache.commons.math3.geometry.euclidean.twod.hull.AklToussaintHeuristic r0;

        r0 := @this: org.apache.commons.math3.geometry.euclidean.twod.hull.AklToussaintHeuristic;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static java.util.Collection reducePoints(java.util.Collection)
    {
        java.util.Collection r0;
        java.util.Iterator r1, r11;
        org.apache.commons.math3.geometry.euclidean.twod.Vector2D r2, r7, r8, r9, r10, r12;
        boolean $z0, $z1, $z2;
        org.apache.commons.math3.geometry.euclidean.twod.Vector2D[] $r3;
        int $i0, i5;
        java.util.ArrayList $r4;
        java.lang.Object $r5, $r6;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7;
        byte $b1, $b2, $b3, $b4;
        java.util.List r13;

        r0 := @parameter0: java.util.Collection;

        i5 = 0;

        r7 = null;

        r8 = null;

        r9 = null;

        r10 = null;

        r11 = interfaceinvoke r0.<java.util.Collection: java.util.Iterator iterator()>();

     label01:
        $z0 = interfaceinvoke r11.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label10;

        $r6 = interfaceinvoke r11.<java.util.Iterator: java.lang.Object next()>();

        r12 = (org.apache.commons.math3.geometry.euclidean.twod.Vector2D) $r6;

        if r7 == null goto label02;

        $d6 = virtualinvoke r12.<org.apache.commons.math3.geometry.euclidean.twod.Vector2D: double getX()>();

        $d7 = virtualinvoke r7.<org.apache.commons.math3.geometry.euclidean.twod.Vector2D: double getX()>();

        $b4 = $d6 cmpg $d7;

        if $b4 >= 0 goto label03;

     label02:
        r7 = r12;

     label03:
        if r8 == null goto label04;

        $d4 = virtualinvoke r12.<org.apache.commons.math3.geometry.euclidean.twod.Vector2D: double getX()>();

        $d5 = virtualinvoke r8.<org.apache.commons.math3.geometry.euclidean.twod.Vector2D: double getX()>();

        $b3 = $d4 cmpl $d5;

        if $b3 <= 0 goto label05;

     label04:
        r8 = r12;

     label05:
        if r9 == null goto label06;

        $d2 = virtualinvoke r12.<org.apache.commons.math3.geometry.euclidean.twod.Vector2D: double getY()>();

        $d3 = virtualinvoke r9.<org.apache.commons.math3.geometry.euclidean.twod.Vector2D: double getY()>();

        $b2 = $d2 cmpg $d3;

        if $b2 >= 0 goto label07;

     label06:
        r9 = r12;

     label07:
        if r10 == null goto label08;

        $d0 = virtualinvoke r12.<org.apache.commons.math3.geometry.euclidean.twod.Vector2D: double getY()>();

        $d1 = virtualinvoke r10.<org.apache.commons.math3.geometry.euclidean.twod.Vector2D: double getY()>();

        $b1 = $d0 cmpl $d1;

        if $b1 <= 0 goto label09;

     label08:
        r10 = r12;

     label09:
        i5 = i5 + 1;

        goto label01;

     label10:
        if i5 >= 4 goto label11;

        return r0;

     label11:
        $r3 = newarray (org.apache.commons.math3.geometry.euclidean.twod.Vector2D)[4];

        $r3[0] = r9;

        $r3[1] = r8;

        $r3[2] = r10;

        $r3[3] = r7;

        r13 = staticinvoke <org.apache.commons.math3.geometry.euclidean.twod.hull.AklToussaintHeuristic: java.util.List buildQuadrilateral(org.apache.commons.math3.geometry.euclidean.twod.Vector2D[])>($r3);

        $i0 = interfaceinvoke r13.<java.util.List: int size()>();

        if $i0 >= 3 goto label12;

        return r0;

     label12:
        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>(java.util.Collection)>(r13);

        r1 = interfaceinvoke r0.<java.util.Collection: java.util.Iterator iterator()>();

     label13:
        $z1 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label15;

        $r5 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r2 = (org.apache.commons.math3.geometry.euclidean.twod.Vector2D) $r5;

        $z2 = staticinvoke <org.apache.commons.math3.geometry.euclidean.twod.hull.AklToussaintHeuristic: boolean insideQuadrilateral(org.apache.commons.math3.geometry.euclidean.twod.Vector2D,java.util.List)>(r2, r13);

        if $z2 != 0 goto label14;

        interfaceinvoke $r4.<java.util.List: boolean add(java.lang.Object)>(r2);

     label14:
        goto label13;

     label15:
        return $r4;
    }

    private static transient java.util.List buildQuadrilateral(org.apache.commons.math3.geometry.euclidean.twod.Vector2D[])
    {
        org.apache.commons.math3.geometry.euclidean.twod.Vector2D[] r0;
        int i0, i1;
        org.apache.commons.math3.geometry.euclidean.twod.Vector2D r3;
        java.util.ArrayList $r4;
        boolean $z0;

        r0 := @parameter0: org.apache.commons.math3.geometry.euclidean.twod.Vector2D[];

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        i0 = lengthof r0;

        i1 = 0;

     label1:
        if i1 >= i0 goto label3;

        r3 = r0[i1];

        $z0 = interfaceinvoke $r4.<java.util.List: boolean contains(java.lang.Object)>(r3);

        if $z0 != 0 goto label2;

        interfaceinvoke $r4.<java.util.List: boolean add(java.lang.Object)>(r3);

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return $r4;
    }

    private static boolean insideQuadrilateral(org.apache.commons.math3.geometry.euclidean.twod.Vector2D, java.util.List)
    {
        org.apache.commons.math3.geometry.euclidean.twod.Vector2D r0, r6, r7, r8;
        java.util.List r1;
        double d0, $d1, $d2;
        int i0, $i1, i3, $i4;
        java.lang.Object $r2, $r3, $r4;
        boolean $z0, $z1, $z2, $z3;
        byte $b2;

        r0 := @parameter0: org.apache.commons.math3.geometry.euclidean.twod.Vector2D;

        r1 := @parameter1: java.util.List;

        $r2 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(0);

        r6 = (org.apache.commons.math3.geometry.euclidean.twod.Vector2D) $r2;

        $r3 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(1);

        r7 = (org.apache.commons.math3.geometry.euclidean.twod.Vector2D) $r3;

        $z0 = virtualinvoke r0.<org.apache.commons.math3.geometry.euclidean.twod.Vector2D: boolean equals(java.lang.Object)>(r6);

        if $z0 != 0 goto label1;

        $z1 = virtualinvoke r0.<org.apache.commons.math3.geometry.euclidean.twod.Vector2D: boolean equals(java.lang.Object)>(r7);

        if $z1 == 0 goto label2;

     label1:
        return 1;

     label2:
        d0 = virtualinvoke r0.<org.apache.commons.math3.geometry.euclidean.twod.Vector2D: double crossProduct(org.apache.commons.math3.geometry.euclidean.twod.Vector2D,org.apache.commons.math3.geometry.euclidean.twod.Vector2D)>(r6, r7);

        i0 = interfaceinvoke r1.<java.util.List: int size()>();

        i3 = 1;

     label3:
        if i3 >= i0 goto label9;

        r8 = r7;

        $i1 = i3 + 1;

        if $i1 != i0 goto label4;

        $i4 = 0;

        goto label5;

     label4:
        $i4 = i3 + 1;

     label5:
        $r4 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>($i4);

        r7 = (org.apache.commons.math3.geometry.euclidean.twod.Vector2D) $r4;

        $z2 = virtualinvoke r0.<org.apache.commons.math3.geometry.euclidean.twod.Vector2D: boolean equals(java.lang.Object)>(r8);

        if $z2 != 0 goto label6;

        $z3 = virtualinvoke r0.<org.apache.commons.math3.geometry.euclidean.twod.Vector2D: boolean equals(java.lang.Object)>(r7);

        if $z3 == 0 goto label7;

     label6:
        return 1;

     label7:
        $d1 = virtualinvoke r0.<org.apache.commons.math3.geometry.euclidean.twod.Vector2D: double crossProduct(org.apache.commons.math3.geometry.euclidean.twod.Vector2D,org.apache.commons.math3.geometry.euclidean.twod.Vector2D)>(r8, r7);

        $d2 = d0 * $d1;

        $b2 = $d2 cmpg 0.0;

        if $b2 >= 0 goto label8;

        return 0;

     label8:
        i3 = i3 + 1;

        goto label3;

     label9:
        return 1;
    }
}
