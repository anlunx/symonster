public class com.opengamma.analytics.financial.forex.derivative.ForexPriceQuoteConverter extends java.lang.Object
{
    private final double _domPips;
    private final double _s0;
    private final double _k;
    private final double _nd;
    private final double _nf;
    private final double _pcForeign;
    private final double _pcDom;
    private final double _foreignPips;
    private final double _absDom;
    private final double _absForeign;

    public void <init>(double, double, double, double, double)
    {
        com.opengamma.analytics.financial.forex.derivative.ForexPriceQuoteConverter r0;
        double d0, d1, d2, d3, d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19;
        byte $b0, $b1, $b2, $b3, $b4;
        java.lang.Object[] $r1, $r3, $r5, $r7;
        java.lang.Double $r2, $r4, $r6, $r8;
        boolean $z0, $z1, $z2, $z3, $z4;

        r0 := @this: com.opengamma.analytics.financial.forex.derivative.ForexPriceQuoteConverter;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        d2 := @parameter2: double;

        d3 := @parameter3: double;

        d4 := @parameter4: double;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $b0 = d0 cmpl 0.0;

        if $b0 < 0 goto label01;

        $z0 = 1;

        goto label02;

     label01:
        $z0 = 0;

     label02:
        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z0, "Negative price given");

        $b1 = d1 cmpl 0.0;

        if $b1 <= 0 goto label03;

        $z1 = 1;

        goto label04;

     label03:
        $z1 = 0;

     label04:
        $r1 = newarray (java.lang.Object)[1];

        $r2 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d1);

        $r1[0] = $r2;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String,java.lang.Object[])>($z1, "Spot rate must be greater than zero. value gvien is {}", $r1);

        $b2 = d2 cmpl 0.0;

        if $b2 <= 0 goto label05;

        $z2 = 1;

        goto label06;

     label05:
        $z2 = 0;

     label06:
        $r3 = newarray (java.lang.Object)[1];

        $r4 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d2);

        $r3[0] = $r4;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String,java.lang.Object[])>($z2, "Strike  must be greater than zero. value gvien is {}", $r3);

        $b3 = d3 cmpl 0.0;

        if $b3 <= 0 goto label07;

        $z3 = 1;

        goto label08;

     label07:
        $z3 = 0;

     label08:
        $r5 = newarray (java.lang.Object)[1];

        $r6 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d3);

        $r5[0] = $r6;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String,java.lang.Object[])>($z3, "Domestic Notional must be greater than zero. value gvien is {}", $r5);

        $b4 = d4 cmpl 0.0;

        if $b4 <= 0 goto label09;

        $z4 = 1;

        goto label10;

     label09:
        $z4 = 0;

     label10:
        $r7 = newarray (java.lang.Object)[1];

        $r8 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d4);

        $r7[0] = $r8;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String,java.lang.Object[])>($z4, "Foreign Notional must be greater than zero. value gvien is {}", $r7);

        r0.<com.opengamma.analytics.financial.forex.derivative.ForexPriceQuoteConverter: double _domPips> = d0;

        r0.<com.opengamma.analytics.financial.forex.derivative.ForexPriceQuoteConverter: double _s0> = d1;

        r0.<com.opengamma.analytics.financial.forex.derivative.ForexPriceQuoteConverter: double _k> = d2;

        r0.<com.opengamma.analytics.financial.forex.derivative.ForexPriceQuoteConverter: double _nd> = d3;

        r0.<com.opengamma.analytics.financial.forex.derivative.ForexPriceQuoteConverter: double _nf> = d4;

        $d6 = r0.<com.opengamma.analytics.financial.forex.derivative.ForexPriceQuoteConverter: double _domPips>;

        $d5 = r0.<com.opengamma.analytics.financial.forex.derivative.ForexPriceQuoteConverter: double _s0>;

        $d7 = $d6 / $d5;

        r0.<com.opengamma.analytics.financial.forex.derivative.ForexPriceQuoteConverter: double _pcForeign> = $d7;

        $d9 = r0.<com.opengamma.analytics.financial.forex.derivative.ForexPriceQuoteConverter: double _domPips>;

        $d8 = r0.<com.opengamma.analytics.financial.forex.derivative.ForexPriceQuoteConverter: double _k>;

        $d10 = $d9 / $d8;

        r0.<com.opengamma.analytics.financial.forex.derivative.ForexPriceQuoteConverter: double _pcDom> = $d10;

        $d12 = r0.<com.opengamma.analytics.financial.forex.derivative.ForexPriceQuoteConverter: double _pcForeign>;

        $d11 = r0.<com.opengamma.analytics.financial.forex.derivative.ForexPriceQuoteConverter: double _k>;

        $d13 = $d12 / $d11;

        r0.<com.opengamma.analytics.financial.forex.derivative.ForexPriceQuoteConverter: double _foreignPips> = $d13;

        $d15 = r0.<com.opengamma.analytics.financial.forex.derivative.ForexPriceQuoteConverter: double _nd>;

        $d14 = r0.<com.opengamma.analytics.financial.forex.derivative.ForexPriceQuoteConverter: double _domPips>;

        $d16 = $d15 * $d14;

        r0.<com.opengamma.analytics.financial.forex.derivative.ForexPriceQuoteConverter: double _absDom> = $d16;

        $d18 = r0.<com.opengamma.analytics.financial.forex.derivative.ForexPriceQuoteConverter: double _nf>;

        $d17 = r0.<com.opengamma.analytics.financial.forex.derivative.ForexPriceQuoteConverter: double _pcForeign>;

        $d19 = $d18 * $d17;

        r0.<com.opengamma.analytics.financial.forex.derivative.ForexPriceQuoteConverter: double _absForeign> = $d19;

        return;
    }

    public double getDomesticPips()
    {
        com.opengamma.analytics.financial.forex.derivative.ForexPriceQuoteConverter r0;
        double $d0;

        r0 := @this: com.opengamma.analytics.financial.forex.derivative.ForexPriceQuoteConverter;

        $d0 = r0.<com.opengamma.analytics.financial.forex.derivative.ForexPriceQuoteConverter: double _domPips>;

        return $d0;
    }

    public double getPcForeign()
    {
        com.opengamma.analytics.financial.forex.derivative.ForexPriceQuoteConverter r0;
        double $d0;

        r0 := @this: com.opengamma.analytics.financial.forex.derivative.ForexPriceQuoteConverter;

        $d0 = r0.<com.opengamma.analytics.financial.forex.derivative.ForexPriceQuoteConverter: double _pcForeign>;

        return $d0;
    }

    public double getPcDom()
    {
        com.opengamma.analytics.financial.forex.derivative.ForexPriceQuoteConverter r0;
        double $d0;

        r0 := @this: com.opengamma.analytics.financial.forex.derivative.ForexPriceQuoteConverter;

        $d0 = r0.<com.opengamma.analytics.financial.forex.derivative.ForexPriceQuoteConverter: double _pcDom>;

        return $d0;
    }

    public double getForeignPips()
    {
        com.opengamma.analytics.financial.forex.derivative.ForexPriceQuoteConverter r0;
        double $d0;

        r0 := @this: com.opengamma.analytics.financial.forex.derivative.ForexPriceQuoteConverter;

        $d0 = r0.<com.opengamma.analytics.financial.forex.derivative.ForexPriceQuoteConverter: double _foreignPips>;

        return $d0;
    }

    public double getAbsDom()
    {
        com.opengamma.analytics.financial.forex.derivative.ForexPriceQuoteConverter r0;
        double $d0;

        r0 := @this: com.opengamma.analytics.financial.forex.derivative.ForexPriceQuoteConverter;

        $d0 = r0.<com.opengamma.analytics.financial.forex.derivative.ForexPriceQuoteConverter: double _absDom>;

        return $d0;
    }

    public double getAbsForeign()
    {
        com.opengamma.analytics.financial.forex.derivative.ForexPriceQuoteConverter r0;
        double $d0;

        r0 := @this: com.opengamma.analytics.financial.forex.derivative.ForexPriceQuoteConverter;

        $d0 = r0.<com.opengamma.analytics.financial.forex.derivative.ForexPriceQuoteConverter: double _absForeign>;

        return $d0;
    }

    public int hashCode()
    {
        com.opengamma.analytics.financial.forex.derivative.ForexPriceQuoteConverter r0;
        double $d0, $d1, $d2, $d3, $d4;
        long $l1, $l2, $l5, $l6, $l9, $l10, $l13, $l14, $l17, $l18, l22, l24, l26, l28, l30;
        int $i3, $i4, $i7, $i8, $i11, $i12, $i15, $i16, $i19, $i20, i23, i25, i27, i29, i31;

        r0 := @this: com.opengamma.analytics.financial.forex.derivative.ForexPriceQuoteConverter;

        $d0 = r0.<com.opengamma.analytics.financial.forex.derivative.ForexPriceQuoteConverter: double _domPips>;

        l22 = staticinvoke <java.lang.Double: long doubleToLongBits(double)>($d0);

        $i4 = 31 * 1;

        $l1 = l22 >>> 32;

        $l2 = l22 ^ $l1;

        $i3 = (int) $l2;

        i23 = $i4 + $i3;

        $d1 = r0.<com.opengamma.analytics.financial.forex.derivative.ForexPriceQuoteConverter: double _k>;

        l24 = staticinvoke <java.lang.Double: long doubleToLongBits(double)>($d1);

        $i8 = 31 * i23;

        $l5 = l24 >>> 32;

        $l6 = l24 ^ $l5;

        $i7 = (int) $l6;

        i25 = $i8 + $i7;

        $d2 = r0.<com.opengamma.analytics.financial.forex.derivative.ForexPriceQuoteConverter: double _nd>;

        l26 = staticinvoke <java.lang.Double: long doubleToLongBits(double)>($d2);

        $i12 = 31 * i25;

        $l9 = l26 >>> 32;

        $l10 = l26 ^ $l9;

        $i11 = (int) $l10;

        i27 = $i12 + $i11;

        $d3 = r0.<com.opengamma.analytics.financial.forex.derivative.ForexPriceQuoteConverter: double _nf>;

        l28 = staticinvoke <java.lang.Double: long doubleToLongBits(double)>($d3);

        $i16 = 31 * i27;

        $l13 = l28 >>> 32;

        $l14 = l28 ^ $l13;

        $i15 = (int) $l14;

        i29 = $i16 + $i15;

        $d4 = r0.<com.opengamma.analytics.financial.forex.derivative.ForexPriceQuoteConverter: double _s0>;

        l30 = staticinvoke <java.lang.Double: long doubleToLongBits(double)>($d4);

        $i20 = 31 * i29;

        $l17 = l30 >>> 32;

        $l18 = l30 ^ $l17;

        $i19 = (int) $l18;

        i31 = $i20 + $i19;

        return i31;
    }

    public boolean equals(java.lang.Object)
    {
        com.opengamma.analytics.financial.forex.derivative.ForexPriceQuoteConverter r0, r2;
        java.lang.Object r1;
        java.lang.Class $r3, $r4;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9;
        long $l0, $l1, $l3, $l4, $l6, $l7, $l9, $l10, $l12, $l13;
        byte $b2, $b5, $b8, $b11, $b14;

        r0 := @this: com.opengamma.analytics.financial.forex.derivative.ForexPriceQuoteConverter;

        r1 := @parameter0: java.lang.Object;

        if r0 != r1 goto label1;

        return 1;

     label1:
        if r1 != null goto label2;

        return 0;

     label2:
        $r3 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r4 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        if $r3 == $r4 goto label3;

        return 0;

     label3:
        r2 = (com.opengamma.analytics.financial.forex.derivative.ForexPriceQuoteConverter) r1;

        $d0 = r0.<com.opengamma.analytics.financial.forex.derivative.ForexPriceQuoteConverter: double _domPips>;

        $l0 = staticinvoke <java.lang.Double: long doubleToLongBits(double)>($d0);

        $d1 = r2.<com.opengamma.analytics.financial.forex.derivative.ForexPriceQuoteConverter: double _domPips>;

        $l1 = staticinvoke <java.lang.Double: long doubleToLongBits(double)>($d1);

        $b2 = $l0 cmp $l1;

        if $b2 == 0 goto label4;

        return 0;

     label4:
        $d2 = r0.<com.opengamma.analytics.financial.forex.derivative.ForexPriceQuoteConverter: double _k>;

        $l3 = staticinvoke <java.lang.Double: long doubleToLongBits(double)>($d2);

        $d3 = r2.<com.opengamma.analytics.financial.forex.derivative.ForexPriceQuoteConverter: double _k>;

        $l4 = staticinvoke <java.lang.Double: long doubleToLongBits(double)>($d3);

        $b5 = $l3 cmp $l4;

        if $b5 == 0 goto label5;

        return 0;

     label5:
        $d4 = r0.<com.opengamma.analytics.financial.forex.derivative.ForexPriceQuoteConverter: double _nd>;

        $l6 = staticinvoke <java.lang.Double: long doubleToLongBits(double)>($d4);

        $d5 = r2.<com.opengamma.analytics.financial.forex.derivative.ForexPriceQuoteConverter: double _nd>;

        $l7 = staticinvoke <java.lang.Double: long doubleToLongBits(double)>($d5);

        $b8 = $l6 cmp $l7;

        if $b8 == 0 goto label6;

        return 0;

     label6:
        $d6 = r0.<com.opengamma.analytics.financial.forex.derivative.ForexPriceQuoteConverter: double _nf>;

        $l9 = staticinvoke <java.lang.Double: long doubleToLongBits(double)>($d6);

        $d7 = r2.<com.opengamma.analytics.financial.forex.derivative.ForexPriceQuoteConverter: double _nf>;

        $l10 = staticinvoke <java.lang.Double: long doubleToLongBits(double)>($d7);

        $b11 = $l9 cmp $l10;

        if $b11 == 0 goto label7;

        return 0;

     label7:
        $d8 = r0.<com.opengamma.analytics.financial.forex.derivative.ForexPriceQuoteConverter: double _s0>;

        $l12 = staticinvoke <java.lang.Double: long doubleToLongBits(double)>($d8);

        $d9 = r2.<com.opengamma.analytics.financial.forex.derivative.ForexPriceQuoteConverter: double _s0>;

        $l13 = staticinvoke <java.lang.Double: long doubleToLongBits(double)>($d9);

        $b14 = $l12 cmp $l13;

        if $b14 == 0 goto label8;

        return 0;

     label8:
        return 1;
    }
}
