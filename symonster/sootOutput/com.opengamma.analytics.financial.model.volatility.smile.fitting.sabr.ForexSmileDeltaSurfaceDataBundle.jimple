public class com.opengamma.analytics.financial.model.volatility.smile.fitting.sabr.ForexSmileDeltaSurfaceDataBundle extends com.opengamma.analytics.financial.model.volatility.smile.fitting.sabr.SmileSurfaceDataBundle
{
    private final double[] _forwards;
    private final double[] _expiries;
    private final double[][] _strikes;
    private final double[][] _vols;
    private final com.opengamma.analytics.financial.model.interestrate.curve.ForwardCurve _forwardCurve;
    private final int _nExpiries;
    private final boolean _isCallData;

    public void <init>(double[], double[], double[], double[], double[][], double[][], boolean, com.opengamma.analytics.math.interpolation.CombinedInterpolatorExtrapolator)
    {
        com.opengamma.analytics.financial.model.volatility.smile.fitting.sabr.ForexSmileDeltaSurfaceDataBundle r0;
        double[] r1, r2, r3, r4, r8, r9, $r29, $r30, $r36, $r37, $r39, $r41, $r42, $r43, $r44, $r46, $r49, $r51;
        double[][] r5, r6, $r32, $r33, $r34, $r38, $r40;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;
        com.opengamma.analytics.math.interpolation.CombinedInterpolatorExtrapolator r7;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, i25, i26, i27;
        java.lang.Object[] $r16, $r19, $r22, $r25, $r45, $r50;
        java.lang.Integer $r17, $r18, $r20, $r21, $r23, $r24, $r26, $r27, $r47, $r48, $r52, $r53;
        com.opengamma.analytics.financial.model.interestrate.curve.ForwardCurve $r28;
        com.opengamma.analytics.math.curve.InterpolatedDoublesCurve $r31;
        com.opengamma.analytics.financial.model.option.definition.SmileDeltaParameters $r35;
        double $d0, $d1, $d2, $d3, $d4;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.smile.fitting.sabr.ForexSmileDeltaSurfaceDataBundle;

        r1 := @parameter0: double[];

        r2 := @parameter1: double[];

        r3 := @parameter2: double[];

        r4 := @parameter3: double[];

        r5 := @parameter4: double[][];

        r6 := @parameter5: double[][];

        z0 := @parameter6: boolean;

        r7 := @parameter7: com.opengamma.analytics.math.interpolation.CombinedInterpolatorExtrapolator;

        specialinvoke r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.sabr.SmileSurfaceDataBundle: void <init>()>();

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r3, "delta");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "forwards");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, "expiries");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r4, "at-the-money");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r5, "risk reversal");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r6, "strangle");

        $i1 = lengthof r2;

        r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.sabr.ForexSmileDeltaSurfaceDataBundle: int _nExpiries> = $i1;

        $i3 = r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.sabr.ForexSmileDeltaSurfaceDataBundle: int _nExpiries>;

        $i2 = lengthof r1;

        if $i3 != $i2 goto label01;

        $z1 = 1;

        goto label02;

     label01:
        $z1 = 0;

     label02:
        $r16 = newarray (java.lang.Object)[2];

        $i4 = lengthof r1;

        $r17 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i4);

        $r16[0] = $r17;

        $i5 = r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.sabr.ForexSmileDeltaSurfaceDataBundle: int _nExpiries>;

        $r18 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i5);

        $r16[1] = $r18;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String,java.lang.Object[])>($z1, "forwards wrong length; have {}, need {}", $r16);

        $i7 = r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.sabr.ForexSmileDeltaSurfaceDataBundle: int _nExpiries>;

        $i6 = lengthof r4;

        if $i7 != $i6 goto label03;

        $z2 = 1;

        goto label04;

     label03:
        $z2 = 0;

     label04:
        $r19 = newarray (java.lang.Object)[2];

        $i8 = lengthof r4;

        $r20 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i8);

        $r19[0] = $r20;

        $i9 = r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.sabr.ForexSmileDeltaSurfaceDataBundle: int _nExpiries>;

        $r21 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i9);

        $r19[1] = $r21;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String,java.lang.Object[])>($z2, "atms wrong length; have {}, need {}", $r19);

        i0 = lengthof r3;

        if i0 <= 0 goto label05;

        $z3 = 1;

        goto label06;

     label05:
        $z3 = 0;

     label06:
        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z3, "need at least one delta");

        $i10 = lengthof r5;

        if i0 != $i10 goto label07;

        $z4 = 1;

        goto label08;

     label07:
        $z4 = 0;

     label08:
        $r22 = newarray (java.lang.Object)[2];

        $i11 = lengthof r5;

        $r23 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i11);

        $r22[0] = $r23;

        $r24 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r22[1] = $r24;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String,java.lang.Object[])>($z4, "wrong number of rr sets; have {}, need {}", $r22);

        $i12 = lengthof r6;

        if i0 != $i12 goto label09;

        $z5 = 1;

        goto label10;

     label09:
        $z5 = 0;

     label10:
        $r25 = newarray (java.lang.Object)[2];

        $i13 = lengthof r6;

        $r26 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i13);

        $r25[0] = $r26;

        $r27 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r25[1] = $r27;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String,java.lang.Object[])>($z5, "wrong number of strangle sets; have {}, need {}", $r25);

        i25 = 0;

     label11:
        if i25 >= i0 goto label16;

        $i18 = r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.sabr.ForexSmileDeltaSurfaceDataBundle: int _nExpiries>;

        $r44 = r5[i25];

        $i17 = lengthof $r44;

        if $i18 != $i17 goto label12;

        $z6 = 1;

        goto label13;

     label12:
        $z6 = 0;

     label13:
        $r45 = newarray (java.lang.Object)[2];

        $r46 = r5[i25];

        $i19 = lengthof $r46;

        $r47 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i19);

        $r45[0] = $r47;

        $i20 = r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.sabr.ForexSmileDeltaSurfaceDataBundle: int _nExpiries>;

        $r48 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i20);

        $r45[1] = $r48;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String,java.lang.Object[])>($z6, "wrong number of rr; have {}, need {}", $r45);

        $i22 = r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.sabr.ForexSmileDeltaSurfaceDataBundle: int _nExpiries>;

        $r49 = r6[i25];

        $i21 = lengthof $r49;

        if $i22 != $i21 goto label14;

        $z7 = 1;

        goto label15;

     label14:
        $z7 = 0;

     label15:
        $r50 = newarray (java.lang.Object)[2];

        $r51 = r6[i25];

        $i23 = lengthof $r51;

        $r52 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i23);

        $r50[0] = $r52;

        $i24 = r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.sabr.ForexSmileDeltaSurfaceDataBundle: int _nExpiries>;

        $r53 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i24);

        $r50[1] = $r53;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String,java.lang.Object[])>($z7, "wrong number of strangles; have {}, need {}", $r50);

        i25 = i25 + 1;

        goto label11;

     label16:
        r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.sabr.ForexSmileDeltaSurfaceDataBundle: double[] _forwards> = r1;

        r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.sabr.ForexSmileDeltaSurfaceDataBundle: double[] _expiries> = r2;

        $r28 = new com.opengamma.analytics.financial.model.interestrate.curve.ForwardCurve;

        $r30 = r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.sabr.ForexSmileDeltaSurfaceDataBundle: double[] _expiries>;

        $r29 = r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.sabr.ForexSmileDeltaSurfaceDataBundle: double[] _forwards>;

        $r31 = staticinvoke <com.opengamma.analytics.math.curve.InterpolatedDoublesCurve: com.opengamma.analytics.math.curve.InterpolatedDoublesCurve 'from'(double[],double[],com.opengamma.analytics.math.interpolation.Interpolator1D)>($r30, $r29, r7);

        specialinvoke $r28.<com.opengamma.analytics.financial.model.interestrate.curve.ForwardCurve: void <init>(com.opengamma.analytics.math.curve.Curve)>($r31);

        r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.sabr.ForexSmileDeltaSurfaceDataBundle: com.opengamma.analytics.financial.model.interestrate.curve.ForwardCurve _forwardCurve> = $r28;

        $i14 = r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.sabr.ForexSmileDeltaSurfaceDataBundle: int _nExpiries>;

        $r32 = newarray (double[])[$i14];

        r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.sabr.ForexSmileDeltaSurfaceDataBundle: double[][] _strikes> = $r32;

        $i15 = r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.sabr.ForexSmileDeltaSurfaceDataBundle: int _nExpiries>;

        $r33 = newarray (double[])[$i15];

        r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.sabr.ForexSmileDeltaSurfaceDataBundle: double[][] _vols> = $r33;

        i26 = 0;

     label17:
        $i16 = r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.sabr.ForexSmileDeltaSurfaceDataBundle: int _nExpiries>;

        if i26 >= $i16 goto label20;

        r8 = newarray (double)[i0];

        r9 = newarray (double)[i0];

        i27 = 0;

     label18:
        if i27 >= i0 goto label19;

        $r42 = r5[i27];

        $d3 = $r42[i26];

        r8[i27] = $d3;

        $r43 = r6[i27];

        $d4 = $r43[i26];

        r9[i27] = $d4;

        i27 = i27 + 1;

        goto label18;

     label19:
        $r35 = new com.opengamma.analytics.financial.model.option.definition.SmileDeltaParameters;

        $r36 = r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.sabr.ForexSmileDeltaSurfaceDataBundle: double[] _expiries>;

        $d1 = $r36[i26];

        $d0 = r4[i26];

        specialinvoke $r35.<com.opengamma.analytics.financial.model.option.definition.SmileDeltaParameters: void <init>(double,double,double[],double[],double[])>($d1, $d0, r3, r8, r9);

        $r38 = r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.sabr.ForexSmileDeltaSurfaceDataBundle: double[][] _strikes>;

        $r37 = r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.sabr.ForexSmileDeltaSurfaceDataBundle: double[] _forwards>;

        $d2 = $r37[i26];

        $r39 = virtualinvoke $r35.<com.opengamma.analytics.financial.model.option.definition.SmileDeltaParameters: double[] getStrike(double)>($d2);

        $r38[i26] = $r39;

        $r40 = r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.sabr.ForexSmileDeltaSurfaceDataBundle: double[][] _vols>;

        $r41 = virtualinvoke $r35.<com.opengamma.analytics.financial.model.option.definition.SmileDeltaParameters: double[] getVolatility()>();

        $r40[i26] = $r41;

        i26 = i26 + 1;

        goto label17;

     label20:
        r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.sabr.ForexSmileDeltaSurfaceDataBundle: boolean _isCallData> = z0;

        $r34 = r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.sabr.ForexSmileDeltaSurfaceDataBundle: double[][] _vols>;

        virtualinvoke r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.sabr.ForexSmileDeltaSurfaceDataBundle: void checkVolatilities(double[],double[][])>(r2, $r34);

        return;
    }

    public void <init>(com.opengamma.analytics.financial.model.interestrate.curve.ForwardCurve, double[], double[], double[], double[][], double[][], boolean)
    {
        com.opengamma.analytics.financial.model.volatility.smile.fitting.sabr.ForexSmileDeltaSurfaceDataBundle r0;
        com.opengamma.analytics.financial.model.interestrate.curve.ForwardCurve r1;
        double[] r2, r3, r4, r7, r8, $r24, $r28, $r29, $r31, $r32, $r34, $r36, $r37, $r38, $r39, $r41, $r44, $r46;
        double[][] r5, r6, $r25, $r26, $r27, $r33, $r35;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, i22, i23, i24;
        java.lang.Object[] $r15, $r18, $r21, $r40, $r45;
        java.lang.Integer $r16, $r17, $r19, $r20, $r22, $r23, $r42, $r43, $r47, $r48;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6;
        com.opengamma.analytics.financial.model.option.definition.SmileDeltaParameters $r30;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.smile.fitting.sabr.ForexSmileDeltaSurfaceDataBundle;

        r1 := @parameter0: com.opengamma.analytics.financial.model.interestrate.curve.ForwardCurve;

        r2 := @parameter1: double[];

        r3 := @parameter2: double[];

        r4 := @parameter3: double[];

        r5 := @parameter4: double[][];

        r6 := @parameter5: double[][];

        z0 := @parameter6: boolean;

        specialinvoke r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.sabr.SmileSurfaceDataBundle: void <init>()>();

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r3, "delta");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "forward curve");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, "expiries");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r4, "atms");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r5, "risk reversals");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r6, "strangle");

        $i1 = lengthof r2;

        r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.sabr.ForexSmileDeltaSurfaceDataBundle: int _nExpiries> = $i1;

        $i3 = r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.sabr.ForexSmileDeltaSurfaceDataBundle: int _nExpiries>;

        $i2 = lengthof r4;

        if $i3 != $i2 goto label01;

        $z1 = 1;

        goto label02;

     label01:
        $z1 = 0;

     label02:
        $r15 = newarray (java.lang.Object)[2];

        $i4 = lengthof r4;

        $r16 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i4);

        $r15[0] = $r16;

        $i5 = r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.sabr.ForexSmileDeltaSurfaceDataBundle: int _nExpiries>;

        $r17 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i5);

        $r15[1] = $r17;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String,java.lang.Object[])>($z1, "atms wrong length; have {}, need {}", $r15);

        i0 = lengthof r3;

        if i0 <= 0 goto label03;

        $z2 = 1;

        goto label04;

     label03:
        $z2 = 0;

     label04:
        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z2, "need at least one delta");

        $i6 = lengthof r5;

        if i0 != $i6 goto label05;

        $z3 = 1;

        goto label06;

     label05:
        $z3 = 0;

     label06:
        $r18 = newarray (java.lang.Object)[2];

        $i7 = lengthof r5;

        $r19 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i7);

        $r18[0] = $r19;

        $r20 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r18[1] = $r20;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String,java.lang.Object[])>($z3, "wrong number of rr sets; have {}, need {}", $r18);

        $i8 = lengthof r6;

        if i0 != $i8 goto label07;

        $z4 = 1;

        goto label08;

     label07:
        $z4 = 0;

     label08:
        $r21 = newarray (java.lang.Object)[2];

        $i9 = lengthof r6;

        $r22 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i9);

        $r21[0] = $r22;

        $r23 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r21[1] = $r23;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String,java.lang.Object[])>($z4, "wrong number of strangle sets; have {}, need {}", $r21);

        i22 = 0;

     label09:
        if i22 >= i0 goto label14;

        $i15 = r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.sabr.ForexSmileDeltaSurfaceDataBundle: int _nExpiries>;

        $r39 = r5[i22];

        $i14 = lengthof $r39;

        if $i15 != $i14 goto label10;

        $z5 = 1;

        goto label11;

     label10:
        $z5 = 0;

     label11:
        $r40 = newarray (java.lang.Object)[2];

        $r41 = r5[i22];

        $i16 = lengthof $r41;

        $r42 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i16);

        $r40[0] = $r42;

        $i17 = r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.sabr.ForexSmileDeltaSurfaceDataBundle: int _nExpiries>;

        $r43 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i17);

        $r40[1] = $r43;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String,java.lang.Object[])>($z5, "wrong number of rr; have {}, need {}", $r40);

        $i19 = r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.sabr.ForexSmileDeltaSurfaceDataBundle: int _nExpiries>;

        $r44 = r6[i22];

        $i18 = lengthof $r44;

        if $i19 != $i18 goto label12;

        $z6 = 1;

        goto label13;

     label12:
        $z6 = 0;

     label13:
        $r45 = newarray (java.lang.Object)[2];

        $r46 = r6[i22];

        $i20 = lengthof $r46;

        $r47 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i20);

        $r45[0] = $r47;

        $i21 = r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.sabr.ForexSmileDeltaSurfaceDataBundle: int _nExpiries>;

        $r48 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i21);

        $r45[1] = $r48;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String,java.lang.Object[])>($z6, "wrong number of strangles; have {}, need {}", $r45);

        i22 = i22 + 1;

        goto label09;

     label14:
        $i10 = r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.sabr.ForexSmileDeltaSurfaceDataBundle: int _nExpiries>;

        $r24 = newarray (double)[$i10];

        r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.sabr.ForexSmileDeltaSurfaceDataBundle: double[] _forwards> = $r24;

        r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.sabr.ForexSmileDeltaSurfaceDataBundle: double[] _expiries> = r2;

        r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.sabr.ForexSmileDeltaSurfaceDataBundle: com.opengamma.analytics.financial.model.interestrate.curve.ForwardCurve _forwardCurve> = r1;

        $i11 = r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.sabr.ForexSmileDeltaSurfaceDataBundle: int _nExpiries>;

        $r25 = newarray (double[])[$i11];

        r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.sabr.ForexSmileDeltaSurfaceDataBundle: double[][] _strikes> = $r25;

        $i12 = r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.sabr.ForexSmileDeltaSurfaceDataBundle: int _nExpiries>;

        $r26 = newarray (double[])[$i12];

        r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.sabr.ForexSmileDeltaSurfaceDataBundle: double[][] _vols> = $r26;

        i23 = 0;

     label15:
        $i13 = r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.sabr.ForexSmileDeltaSurfaceDataBundle: int _nExpiries>;

        if i23 >= $i13 goto label18;

        $r29 = r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.sabr.ForexSmileDeltaSurfaceDataBundle: double[] _forwards>;

        $r28 = r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.sabr.ForexSmileDeltaSurfaceDataBundle: double[] _expiries>;

        $d0 = $r28[i23];

        $d1 = virtualinvoke r1.<com.opengamma.analytics.financial.model.interestrate.curve.ForwardCurve: double getForward(double)>($d0);

        $r29[i23] = $d1;

        r7 = newarray (double)[i0];

        r8 = newarray (double)[i0];

        i24 = 0;

     label16:
        if i24 >= i0 goto label17;

        $r37 = r5[i24];

        $d5 = $r37[i23];

        r7[i24] = $d5;

        $r38 = r6[i24];

        $d6 = $r38[i23];

        r8[i24] = $d6;

        i24 = i24 + 1;

        goto label16;

     label17:
        $r30 = new com.opengamma.analytics.financial.model.option.definition.SmileDeltaParameters;

        $r31 = r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.sabr.ForexSmileDeltaSurfaceDataBundle: double[] _expiries>;

        $d3 = $r31[i23];

        $d2 = r4[i23];

        specialinvoke $r30.<com.opengamma.analytics.financial.model.option.definition.SmileDeltaParameters: void <init>(double,double,double[],double[],double[])>($d3, $d2, r3, r7, r8);

        $r33 = r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.sabr.ForexSmileDeltaSurfaceDataBundle: double[][] _strikes>;

        $r32 = r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.sabr.ForexSmileDeltaSurfaceDataBundle: double[] _forwards>;

        $d4 = $r32[i23];

        $r34 = virtualinvoke $r30.<com.opengamma.analytics.financial.model.option.definition.SmileDeltaParameters: double[] getStrike(double)>($d4);

        $r33[i23] = $r34;

        $r35 = r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.sabr.ForexSmileDeltaSurfaceDataBundle: double[][] _vols>;

        $r36 = virtualinvoke $r30.<com.opengamma.analytics.financial.model.option.definition.SmileDeltaParameters: double[] getVolatility()>();

        $r35[i23] = $r36;

        i23 = i23 + 1;

        goto label15;

     label18:
        r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.sabr.ForexSmileDeltaSurfaceDataBundle: boolean _isCallData> = z0;

        $r27 = r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.sabr.ForexSmileDeltaSurfaceDataBundle: double[][] _vols>;

        virtualinvoke r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.sabr.ForexSmileDeltaSurfaceDataBundle: void checkVolatilities(double[],double[][])>(r2, $r27);

        return;
    }

    public void <init>(com.opengamma.analytics.financial.model.interestrate.curve.ForwardCurve, double[], double[][], double[][], boolean)
    {
        com.opengamma.analytics.financial.model.volatility.smile.fitting.sabr.ForexSmileDeltaSurfaceDataBundle r0;
        com.opengamma.analytics.financial.model.interestrate.curve.ForwardCurve r1;
        double[] r2, $r15, $r16, $r17, $r18, $r20, $r22;
        double[][] r3, r4;
        boolean z0, $z1, $z2, $z3;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, i15, $i16, i17;
        java.lang.Object[] $r9, $r12, $r19;
        java.lang.Integer $r10, $r11, $r13, $r14, $r21, $r23;
        double $d0, $d1;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.smile.fitting.sabr.ForexSmileDeltaSurfaceDataBundle;

        r1 := @parameter0: com.opengamma.analytics.financial.model.interestrate.curve.ForwardCurve;

        r2 := @parameter1: double[];

        r3 := @parameter2: double[][];

        r4 := @parameter3: double[][];

        z0 := @parameter4: boolean;

        specialinvoke r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.sabr.SmileSurfaceDataBundle: void <init>()>();

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "forward curve");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, "expiries");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r3, "strikes");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r4, "vols");

        $i0 = lengthof r2;

        r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.sabr.ForexSmileDeltaSurfaceDataBundle: int _nExpiries> = $i0;

        $i2 = r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.sabr.ForexSmileDeltaSurfaceDataBundle: int _nExpiries>;

        $i1 = lengthof r3;

        if $i2 != $i1 goto label01;

        $z1 = 1;

        goto label02;

     label01:
        $z1 = 0;

     label02:
        $r9 = newarray (java.lang.Object)[2];

        $i3 = lengthof r3;

        $r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3);

        $r9[0] = $r10;

        $i4 = r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.sabr.ForexSmileDeltaSurfaceDataBundle: int _nExpiries>;

        $r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i4);

        $r9[1] = $r11;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String,java.lang.Object[])>($z1, "strikes wrong length; have {}, need {}", $r9);

        $i6 = r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.sabr.ForexSmileDeltaSurfaceDataBundle: int _nExpiries>;

        $i5 = lengthof r4;

        if $i6 != $i5 goto label03;

        $z2 = 1;

        goto label04;

     label03:
        $z2 = 0;

     label04:
        $r12 = newarray (java.lang.Object)[2];

        $i7 = lengthof r4;

        $r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i7);

        $r12[0] = $r13;

        $i8 = r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.sabr.ForexSmileDeltaSurfaceDataBundle: int _nExpiries>;

        $r14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i8);

        $r12[1] = $r14;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String,java.lang.Object[])>($z2, "implied vols wrong length; have {}, need {}", $r12);

        i15 = 0;

     label05:
        $i16 = r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.sabr.ForexSmileDeltaSurfaceDataBundle: int _nExpiries>;

        if i15 >= $i16 goto label08;

        $r17 = r3[i15];

        $i12 = lengthof $r17;

        $r18 = r4[i15];

        $i11 = lengthof $r18;

        if $i12 != $i11 goto label06;

        $z3 = 1;

        goto label07;

     label06:
        $z3 = 0;

     label07:
        $r19 = newarray (java.lang.Object)[2];

        $r20 = r3[i15];

        $i13 = lengthof $r20;

        $r21 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i13);

        $r19[0] = $r21;

        $r22 = r4[i15];

        $i14 = lengthof $r22;

        $r23 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i14);

        $r19[1] = $r23;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String,java.lang.Object[])>($z3, "wrong number of volatilities; have {}, need {}", $r19);

        i15 = i15 + 1;

        goto label05;

     label08:
        r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.sabr.ForexSmileDeltaSurfaceDataBundle: com.opengamma.analytics.financial.model.interestrate.curve.ForwardCurve _forwardCurve> = r1;

        r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.sabr.ForexSmileDeltaSurfaceDataBundle: double[] _expiries> = r2;

        r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.sabr.ForexSmileDeltaSurfaceDataBundle: double[][] _strikes> = r3;

        r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.sabr.ForexSmileDeltaSurfaceDataBundle: double[][] _vols> = r4;

        $i9 = r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.sabr.ForexSmileDeltaSurfaceDataBundle: int _nExpiries>;

        $r15 = newarray (double)[$i9];

        r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.sabr.ForexSmileDeltaSurfaceDataBundle: double[] _forwards> = $r15;

        i17 = 0;

     label09:
        $i10 = r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.sabr.ForexSmileDeltaSurfaceDataBundle: int _nExpiries>;

        if i17 >= $i10 goto label10;

        $r16 = r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.sabr.ForexSmileDeltaSurfaceDataBundle: double[] _forwards>;

        $d0 = r2[i17];

        $d1 = virtualinvoke r1.<com.opengamma.analytics.financial.model.interestrate.curve.ForwardCurve: double getForward(double)>($d0);

        $r16[i17] = $d1;

        i17 = i17 + 1;

        goto label09;

     label10:
        r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.sabr.ForexSmileDeltaSurfaceDataBundle: boolean _isCallData> = z0;

        return;
    }

    public int getNumExpiries()
    {
        com.opengamma.analytics.financial.model.volatility.smile.fitting.sabr.ForexSmileDeltaSurfaceDataBundle r0;
        int $i0;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.smile.fitting.sabr.ForexSmileDeltaSurfaceDataBundle;

        $i0 = r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.sabr.ForexSmileDeltaSurfaceDataBundle: int _nExpiries>;

        return $i0;
    }

    public double[] getExpiries()
    {
        com.opengamma.analytics.financial.model.volatility.smile.fitting.sabr.ForexSmileDeltaSurfaceDataBundle r0;
        double[] $r1;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.smile.fitting.sabr.ForexSmileDeltaSurfaceDataBundle;

        $r1 = r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.sabr.ForexSmileDeltaSurfaceDataBundle: double[] _expiries>;

        return $r1;
    }

    public double[][] getStrikes()
    {
        com.opengamma.analytics.financial.model.volatility.smile.fitting.sabr.ForexSmileDeltaSurfaceDataBundle r0;
        double[][] $r1;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.smile.fitting.sabr.ForexSmileDeltaSurfaceDataBundle;

        $r1 = r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.sabr.ForexSmileDeltaSurfaceDataBundle: double[][] _strikes>;

        return $r1;
    }

    public double[][] getVolatilities()
    {
        com.opengamma.analytics.financial.model.volatility.smile.fitting.sabr.ForexSmileDeltaSurfaceDataBundle r0;
        double[][] $r1;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.smile.fitting.sabr.ForexSmileDeltaSurfaceDataBundle;

        $r1 = r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.sabr.ForexSmileDeltaSurfaceDataBundle: double[][] _vols>;

        return $r1;
    }

    public double[] getForwards()
    {
        com.opengamma.analytics.financial.model.volatility.smile.fitting.sabr.ForexSmileDeltaSurfaceDataBundle r0;
        double[] $r1;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.smile.fitting.sabr.ForexSmileDeltaSurfaceDataBundle;

        $r1 = r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.sabr.ForexSmileDeltaSurfaceDataBundle: double[] _forwards>;

        return $r1;
    }

    public com.opengamma.analytics.financial.model.interestrate.curve.ForwardCurve getForwardCurve()
    {
        com.opengamma.analytics.financial.model.volatility.smile.fitting.sabr.ForexSmileDeltaSurfaceDataBundle r0;
        com.opengamma.analytics.financial.model.interestrate.curve.ForwardCurve $r1;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.smile.fitting.sabr.ForexSmileDeltaSurfaceDataBundle;

        $r1 = r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.sabr.ForexSmileDeltaSurfaceDataBundle: com.opengamma.analytics.financial.model.interestrate.curve.ForwardCurve _forwardCurve>;

        return $r1;
    }

    public com.opengamma.analytics.financial.model.volatility.smile.fitting.sabr.SmileSurfaceDataBundle withBumpedPoint(int, int, double)
    {
        com.opengamma.analytics.financial.model.volatility.smile.fitting.sabr.ForexSmileDeltaSurfaceDataBundle r0, $r10;
        int i0, i1, i2, $i3, $i4, $i5, $i6, i7;
        double d0, $d1, $d2, $d3, $d4, $d5, $d6;
        double[][] r1, r2, $r13, $r15;
        boolean $z0, $z1, $z2;
        java.lang.Object[] $r3, $r6;
        java.lang.Integer $r4, $r7;
        double[] $r5, $r8, $r9, $r12, $r14, $r16, $r17;
        com.opengamma.analytics.financial.model.interestrate.curve.ForwardCurve $r11;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.smile.fitting.sabr.ForexSmileDeltaSurfaceDataBundle;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        d0 := @parameter2: double;

        $i3 = r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.sabr.ForexSmileDeltaSurfaceDataBundle: int _nExpiries>;

        $d2 = (double) $i3;

        $d1 = (double) i0;

        $z0 = staticinvoke <com.opengamma.util.ArgumentChecker: boolean isInRangeExcludingHigh(double,double,double)>(0.0, $d2, $d1);

        $r3 = newarray (java.lang.Object)[1];

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r3[0] = $r4;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String,java.lang.Object[])>($z0, "Invalid index for expiry; {}", $r3);

        r1 = virtualinvoke r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.sabr.ForexSmileDeltaSurfaceDataBundle: double[][] getStrikes()>();

        $r5 = r1[i0];

        $i4 = lengthof $r5;

        $d4 = (double) $i4;

        $d3 = (double) i1;

        $z1 = staticinvoke <com.opengamma.util.ArgumentChecker: boolean isInRangeExcludingHigh(double,double,double)>(0.0, $d4, $d3);

        $r6 = newarray (java.lang.Object)[1];

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        $r6[0] = $r7;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String,java.lang.Object[])>($z1, "Invalid index for strike; {}", $r6);

        $r8 = r1[i0];

        i2 = lengthof $r8;

        $i5 = r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.sabr.ForexSmileDeltaSurfaceDataBundle: int _nExpiries>;

        r2 = newarray (double[])[$i5];

        i7 = 0;

     label1:
        $i6 = r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.sabr.ForexSmileDeltaSurfaceDataBundle: int _nExpiries>;

        if i7 >= $i6 goto label2;

        $r14 = newarray (double)[i2];

        r2[i7] = $r14;

        $r15 = r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.sabr.ForexSmileDeltaSurfaceDataBundle: double[][] _vols>;

        $r17 = $r15[i7];

        $r16 = r2[i7];

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r17, 0, $r16, 0, i2);

        i7 = i7 + 1;

        goto label1;

     label2:
        $r9 = r2[i0];

        $d5 = $r9[i1];

        $d6 = $d5 + d0;

        $r9[i1] = $d6;

        $r10 = new com.opengamma.analytics.financial.model.volatility.smile.fitting.sabr.ForexSmileDeltaSurfaceDataBundle;

        $r11 = virtualinvoke r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.sabr.ForexSmileDeltaSurfaceDataBundle: com.opengamma.analytics.financial.model.interestrate.curve.ForwardCurve getForwardCurve()>();

        $r12 = virtualinvoke r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.sabr.ForexSmileDeltaSurfaceDataBundle: double[] getExpiries()>();

        $r13 = virtualinvoke r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.sabr.ForexSmileDeltaSurfaceDataBundle: double[][] getStrikes()>();

        $z2 = r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.sabr.ForexSmileDeltaSurfaceDataBundle: boolean _isCallData>;

        specialinvoke $r10.<com.opengamma.analytics.financial.model.volatility.smile.fitting.sabr.ForexSmileDeltaSurfaceDataBundle: void <init>(com.opengamma.analytics.financial.model.interestrate.curve.ForwardCurve,double[],double[][],double[][],boolean)>($r11, $r12, $r13, r2, $z2);

        return $r10;
    }

    public int hashCode()
    {
        com.opengamma.analytics.financial.model.volatility.smile.fitting.sabr.ForexSmileDeltaSurfaceDataBundle r0;
        com.opengamma.analytics.financial.model.interestrate.curve.ForwardCurve $r1;
        int $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, i10, i11, i12, i13;
        double[][] $r2, $r3;
        double[] $r4;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.smile.fitting.sabr.ForexSmileDeltaSurfaceDataBundle;

        $i1 = 31 * 1;

        $r1 = r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.sabr.ForexSmileDeltaSurfaceDataBundle: com.opengamma.analytics.financial.model.interestrate.curve.ForwardCurve _forwardCurve>;

        $i2 = virtualinvoke $r1.<com.opengamma.analytics.financial.model.interestrate.curve.ForwardCurve: int hashCode()>();

        i10 = $i1 + $i2;

        $i3 = 31 * i10;

        $r2 = r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.sabr.ForexSmileDeltaSurfaceDataBundle: double[][] _vols>;

        $i4 = staticinvoke <java.util.Arrays: int deepHashCode(java.lang.Object[])>($r2);

        i11 = $i3 + $i4;

        $i5 = 31 * i11;

        $r3 = r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.sabr.ForexSmileDeltaSurfaceDataBundle: double[][] _strikes>;

        $i6 = staticinvoke <java.util.Arrays: int deepHashCode(java.lang.Object[])>($r3);

        i12 = $i5 + $i6;

        $i7 = 31 * i12;

        $r4 = r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.sabr.ForexSmileDeltaSurfaceDataBundle: double[] _expiries>;

        $i8 = staticinvoke <java.util.Arrays: int hashCode(double[])>($r4);

        i13 = $i7 + $i8;

        return i13;
    }

    public boolean equals(java.lang.Object)
    {
        com.opengamma.analytics.financial.model.volatility.smile.fitting.sabr.ForexSmileDeltaSurfaceDataBundle r0, r2;
        java.lang.Object r1;
        java.lang.Class $r3, $r4;
        com.opengamma.analytics.financial.model.interestrate.curve.ForwardCurve $r5, $r6;
        boolean $z0, $z1, $z2, $z3;
        double[] $r7, $r8, $r11, $r12, $r15, $r16;
        int $i0, i1;
        double[][] $r9, $r10, $r13, $r14;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.smile.fitting.sabr.ForexSmileDeltaSurfaceDataBundle;

        r1 := @parameter0: java.lang.Object;

        if r0 != r1 goto label1;

        return 1;

     label1:
        if r1 != null goto label2;

        return 0;

     label2:
        $r3 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r4 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        if $r3 == $r4 goto label3;

        return 0;

     label3:
        r2 = (com.opengamma.analytics.financial.model.volatility.smile.fitting.sabr.ForexSmileDeltaSurfaceDataBundle) r1;

        $r6 = r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.sabr.ForexSmileDeltaSurfaceDataBundle: com.opengamma.analytics.financial.model.interestrate.curve.ForwardCurve _forwardCurve>;

        $r5 = r2.<com.opengamma.analytics.financial.model.volatility.smile.fitting.sabr.ForexSmileDeltaSurfaceDataBundle: com.opengamma.analytics.financial.model.interestrate.curve.ForwardCurve _forwardCurve>;

        $z0 = staticinvoke <org.apache.commons.lang.ObjectUtils: boolean equals(java.lang.Object,java.lang.Object)>($r6, $r5);

        if $z0 != 0 goto label4;

        return 0;

     label4:
        $r8 = r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.sabr.ForexSmileDeltaSurfaceDataBundle: double[] _expiries>;

        $r7 = r2.<com.opengamma.analytics.financial.model.volatility.smile.fitting.sabr.ForexSmileDeltaSurfaceDataBundle: double[] _expiries>;

        $z1 = staticinvoke <java.util.Arrays: boolean equals(double[],double[])>($r8, $r7);

        if $z1 != 0 goto label5;

        return 0;

     label5:
        i1 = 0;

     label6:
        $i0 = r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.sabr.ForexSmileDeltaSurfaceDataBundle: int _nExpiries>;

        if i1 >= $i0 goto label9;

        $r9 = r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.sabr.ForexSmileDeltaSurfaceDataBundle: double[][] _strikes>;

        $r12 = $r9[i1];

        $r10 = r2.<com.opengamma.analytics.financial.model.volatility.smile.fitting.sabr.ForexSmileDeltaSurfaceDataBundle: double[][] _strikes>;

        $r11 = $r10[i1];

        $z2 = staticinvoke <java.util.Arrays: boolean equals(double[],double[])>($r12, $r11);

        if $z2 != 0 goto label7;

        return 0;

     label7:
        $r13 = r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.sabr.ForexSmileDeltaSurfaceDataBundle: double[][] _vols>;

        $r16 = $r13[i1];

        $r14 = r2.<com.opengamma.analytics.financial.model.volatility.smile.fitting.sabr.ForexSmileDeltaSurfaceDataBundle: double[][] _vols>;

        $r15 = $r14[i1];

        $z3 = staticinvoke <java.util.Arrays: boolean equals(double[],double[])>($r16, $r15);

        if $z3 != 0 goto label8;

        return 0;

     label8:
        i1 = i1 + 1;

        goto label6;

     label9:
        return 1;
    }
}
