class org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet$SubIntervalsIterator extends java.lang.Object implements java.util.Iterator
{
    private org.apache.commons.math3.geometry.partitioning.BSPTree current;
    private double[] pending;
    final org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet this$0;

    public void <init>(org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet)
    {
        org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet$SubIntervalsIterator r0;
        org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet r1;
        org.apache.commons.math3.geometry.partitioning.BSPTree $r2, $r3, $r4, $r6, $r7, $r8;
        boolean $z0, $z1;
        double[] $r5, $r11;
        double $d0;
        java.lang.Object $r9;
        java.lang.Boolean $r10;

        r0 := @this: org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet$SubIntervalsIterator;

        r1 := @parameter0: org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet;

        r0.<org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet$SubIntervalsIterator: org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = staticinvoke <org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet: org.apache.commons.math3.geometry.partitioning.BSPTree access$000(org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet)>(r1);

        r0.<org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet$SubIntervalsIterator: org.apache.commons.math3.geometry.partitioning.BSPTree current> = $r2;

        $r3 = r0.<org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet$SubIntervalsIterator: org.apache.commons.math3.geometry.partitioning.BSPTree current>;

        if $r3 != null goto label2;

        $r7 = virtualinvoke r1.<org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet: org.apache.commons.math3.geometry.partitioning.BSPTree getTree(boolean)>(0);

        $r8 = staticinvoke <org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet: org.apache.commons.math3.geometry.partitioning.BSPTree access$100(org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet,org.apache.commons.math3.geometry.partitioning.BSPTree)>(r1, $r7);

        $r9 = virtualinvoke $r8.<org.apache.commons.math3.geometry.partitioning.BSPTree: java.lang.Object getAttribute()>();

        $r10 = (java.lang.Boolean) $r9;

        $z1 = virtualinvoke $r10.<java.lang.Boolean: boolean booleanValue()>();

        if $z1 == 0 goto label1;

        $r11 = newarray (double)[2];

        $r11[0] = #-Infinity;

        $r11[1] = #Infinity;

        r0.<org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet$SubIntervalsIterator: double[] pending> = $r11;

        goto label4;

     label1:
        r0.<org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet$SubIntervalsIterator: double[] pending> = null;

        goto label4;

     label2:
        $r4 = r0.<org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet$SubIntervalsIterator: org.apache.commons.math3.geometry.partitioning.BSPTree current>;

        $z0 = staticinvoke <org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet: boolean access$200(org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet,org.apache.commons.math3.geometry.partitioning.BSPTree)>(r1, $r4);

        if $z0 == 0 goto label3;

        $r5 = newarray (double)[2];

        $r5[0] = #-Infinity;

        $r6 = r0.<org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet$SubIntervalsIterator: org.apache.commons.math3.geometry.partitioning.BSPTree current>;

        $d0 = staticinvoke <org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet: double access$300(org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet,org.apache.commons.math3.geometry.partitioning.BSPTree)>(r1, $r6);

        $r5[1] = $d0;

        r0.<org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet$SubIntervalsIterator: double[] pending> = $r5;

        goto label4;

     label3:
        specialinvoke r0.<org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet$SubIntervalsIterator: void selectPending()>();

     label4:
        return;
    }

    private void selectPending()
    {
        org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet$SubIntervalsIterator r0;
        double[] $r1, $r3;
        org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet $r2, $r4, $r5, $r6, $r7, $r8, $r9;
        double $d0, $d1, $d2;
        boolean $z0, $z1;
        org.apache.commons.math3.geometry.partitioning.BSPTree r10, r11;

        r0 := @this: org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet$SubIntervalsIterator;

        r10 = r0.<org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet$SubIntervalsIterator: org.apache.commons.math3.geometry.partitioning.BSPTree current>;

     label1:
        if r10 == null goto label2;

        $r8 = r0.<org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet$SubIntervalsIterator: org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet this$0>;

        $z1 = staticinvoke <org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet: boolean access$400(org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet,org.apache.commons.math3.geometry.partitioning.BSPTree)>($r8, r10);

        if $z1 != 0 goto label2;

        $r9 = r0.<org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet$SubIntervalsIterator: org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet this$0>;

        r10 = staticinvoke <org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet: org.apache.commons.math3.geometry.partitioning.BSPTree access$500(org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet,org.apache.commons.math3.geometry.partitioning.BSPTree)>($r9, r10);

        goto label1;

     label2:
        if r10 != null goto label3;

        r0.<org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet$SubIntervalsIterator: org.apache.commons.math3.geometry.partitioning.BSPTree current> = null;

        r0.<org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet$SubIntervalsIterator: double[] pending> = null;

        return;

     label3:
        r11 = r10;

     label4:
        if r11 == null goto label5;

        $r6 = r0.<org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet$SubIntervalsIterator: org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet this$0>;

        $z0 = staticinvoke <org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet: boolean access$200(org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet,org.apache.commons.math3.geometry.partitioning.BSPTree)>($r6, r11);

        if $z0 != 0 goto label5;

        $r7 = r0.<org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet$SubIntervalsIterator: org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet this$0>;

        r11 = staticinvoke <org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet: org.apache.commons.math3.geometry.partitioning.BSPTree access$500(org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet,org.apache.commons.math3.geometry.partitioning.BSPTree)>($r7, r11);

        goto label4;

     label5:
        if r11 == null goto label6;

        $r3 = newarray (double)[2];

        $r4 = r0.<org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet$SubIntervalsIterator: org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet this$0>;

        $d1 = staticinvoke <org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet: double access$300(org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet,org.apache.commons.math3.geometry.partitioning.BSPTree)>($r4, r10);

        $r3[0] = $d1;

        $r5 = r0.<org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet$SubIntervalsIterator: org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet this$0>;

        $d2 = staticinvoke <org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet: double access$300(org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet,org.apache.commons.math3.geometry.partitioning.BSPTree)>($r5, r11);

        $r3[1] = $d2;

        r0.<org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet$SubIntervalsIterator: double[] pending> = $r3;

        r0.<org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet$SubIntervalsIterator: org.apache.commons.math3.geometry.partitioning.BSPTree current> = r11;

        goto label7;

     label6:
        $r1 = newarray (double)[2];

        $r2 = r0.<org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet$SubIntervalsIterator: org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet this$0>;

        $d0 = staticinvoke <org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet: double access$300(org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet,org.apache.commons.math3.geometry.partitioning.BSPTree)>($r2, r10);

        $r1[0] = $d0;

        $r1[1] = #Infinity;

        r0.<org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet$SubIntervalsIterator: double[] pending> = $r1;

        r0.<org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet$SubIntervalsIterator: org.apache.commons.math3.geometry.partitioning.BSPTree current> = null;

     label7:
        return;
    }

    public boolean hasNext()
    {
        org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet$SubIntervalsIterator r0;
        double[] $r1;
        boolean $z0;

        r0 := @this: org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet$SubIntervalsIterator;

        $r1 = r0.<org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet$SubIntervalsIterator: double[] pending>;

        if $r1 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public double[] next()
    {
        org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet$SubIntervalsIterator r0;
        double[] r1, $r2;
        java.util.NoSuchElementException $r3;

        r0 := @this: org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet$SubIntervalsIterator;

        $r2 = r0.<org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet$SubIntervalsIterator: double[] pending>;

        if $r2 != null goto label1;

        $r3 = new java.util.NoSuchElementException;

        specialinvoke $r3.<java.util.NoSuchElementException: void <init>()>();

        throw $r3;

     label1:
        r1 = r0.<org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet$SubIntervalsIterator: double[] pending>;

        specialinvoke r0.<org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet$SubIntervalsIterator: void selectPending()>();

        return r1;
    }

    public void remove()
    {
        org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet$SubIntervalsIterator r0;
        java.lang.UnsupportedOperationException $r1;

        r0 := @this: org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet$SubIntervalsIterator;

        $r1 = new java.lang.UnsupportedOperationException;

        specialinvoke $r1.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r1;
    }

    public volatile java.lang.Object next()
    {
        org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet$SubIntervalsIterator r0;
        double[] $r1;

        r0 := @this: org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet$SubIntervalsIterator;

        $r1 = virtualinvoke r0.<org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet$SubIntervalsIterator: double[] next()>();

        return $r1;
    }
}
