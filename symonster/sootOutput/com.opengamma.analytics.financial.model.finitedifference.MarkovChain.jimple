public class com.opengamma.analytics.financial.model.finitedifference.MarkovChain extends java.lang.Object
{
    private final double _vol1;
    private final double _vol2;
    private final double _lambda12;
    private final double _lambda21;
    private final double _probState1;
    private final double _pi1;
    private final cern.jet.random.engine.MersenneTwister _rand;

    public void <init>(double, double, double, double, double)
    {
        com.opengamma.analytics.financial.model.finitedifference.MarkovChain r0;
        double d0, d1, d2, d3, d4;

        r0 := @this: com.opengamma.analytics.financial.model.finitedifference.MarkovChain;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        d2 := @parameter2: double;

        d3 := @parameter3: double;

        d4 := @parameter4: double;

        specialinvoke r0.<com.opengamma.analytics.financial.model.finitedifference.MarkovChain: void <init>(double,double,double,double,double,int)>(d0, d1, d2, d3, d4, 4357);

        return;
    }

    public void <init>(double, double, double, double, double, int)
    {
        com.opengamma.analytics.financial.model.finitedifference.MarkovChain r0;
        double d0, d1, d2, d3, d4, $d5, $d6;
        int i0;
        byte $b1, $b2, $b3, $b4, $b5, $b6;
        boolean $z0, $z1, $z2, $z3, $z4;
        cern.jet.random.engine.MersenneTwister64 $r1;

        r0 := @this: com.opengamma.analytics.financial.model.finitedifference.MarkovChain;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        d2 := @parameter2: double;

        d3 := @parameter3: double;

        d4 := @parameter4: double;

        i0 := @parameter5: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $b1 = d0 cmpl 0.0;

        if $b1 < 0 goto label01;

        $z0 = 1;

        goto label02;

     label01:
        $z0 = 0;

     label02:
        staticinvoke <org.apache.commons.lang.Validate: void isTrue(boolean)>($z0);

        $b2 = d1 cmpl 0.0;

        if $b2 < 0 goto label03;

        $z1 = 1;

        goto label04;

     label03:
        $z1 = 0;

     label04:
        staticinvoke <org.apache.commons.lang.Validate: void isTrue(boolean)>($z1);

        $b3 = d2 cmpl 0.0;

        if $b3 < 0 goto label05;

        $z2 = 1;

        goto label06;

     label05:
        $z2 = 0;

     label06:
        staticinvoke <org.apache.commons.lang.Validate: void isTrue(boolean)>($z2);

        $b4 = d3 cmpl 0.0;

        if $b4 < 0 goto label07;

        $z3 = 1;

        goto label08;

     label07:
        $z3 = 0;

     label08:
        staticinvoke <org.apache.commons.lang.Validate: void isTrue(boolean)>($z3);

        $b5 = d4 cmpl 0.0;

        if $b5 < 0 goto label09;

        $b6 = d4 cmpg 1.0;

        if $b6 > 0 goto label09;

        $z4 = 1;

        goto label10;

     label09:
        $z4 = 0;

     label10:
        staticinvoke <org.apache.commons.lang.Validate: void isTrue(boolean)>($z4);

        r0.<com.opengamma.analytics.financial.model.finitedifference.MarkovChain: double _vol1> = d0;

        r0.<com.opengamma.analytics.financial.model.finitedifference.MarkovChain: double _vol2> = d1;

        r0.<com.opengamma.analytics.financial.model.finitedifference.MarkovChain: double _lambda12> = d2;

        r0.<com.opengamma.analytics.financial.model.finitedifference.MarkovChain: double _lambda21> = d3;

        r0.<com.opengamma.analytics.financial.model.finitedifference.MarkovChain: double _probState1> = d4;

        $d5 = d2 + d3;

        $d6 = d3 / $d5;

        r0.<com.opengamma.analytics.financial.model.finitedifference.MarkovChain: double _pi1> = $d6;

        $r1 = new cern.jet.random.engine.MersenneTwister64;

        specialinvoke $r1.<cern.jet.random.engine.MersenneTwister64: void <init>(int)>(i0);

        r0.<com.opengamma.analytics.financial.model.finitedifference.MarkovChain: cern.jet.random.engine.MersenneTwister _rand> = $r1;

        return;
    }

    public double price(double, double, double, double, double[])
    {
        com.opengamma.analytics.financial.model.finitedifference.MarkovChain r0;
        double d0, d1, d2, d3, d4, $d5, $d6, $d7, d8;
        double[] r1;
        com.opengamma.analytics.math.function.Function1D r4;
        int i0, $i1, i2;
        com.opengamma.analytics.financial.model.option.pricing.analytic.formula.EuropeanVanillaOption $r7;
        com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackPriceFunction $r8;
        com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackFunctionData $r9;
        java.lang.Object $r10;
        java.lang.Double $r11;

        r0 := @this: com.opengamma.analytics.financial.model.finitedifference.MarkovChain;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        d2 := @parameter2: double;

        d3 := @parameter3: double;

        r1 := @parameter4: double[];

        $r7 = new com.opengamma.analytics.financial.model.option.pricing.analytic.formula.EuropeanVanillaOption;

        specialinvoke $r7.<com.opengamma.analytics.financial.model.option.pricing.analytic.formula.EuropeanVanillaOption: void <init>(double,double,boolean)>(d2, d3, 1);

        $r8 = new com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackPriceFunction;

        specialinvoke $r8.<com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackPriceFunction: void <init>()>();

        r4 = virtualinvoke $r8.<com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackPriceFunction: com.opengamma.analytics.math.function.Function1D getPriceFunction(com.opengamma.analytics.financial.model.option.pricing.analytic.formula.EuropeanVanillaOption)>($r7);

        d8 = 0.0;

        i0 = lengthof r1;

        i2 = 0;

     label1:
        if i2 >= i0 goto label2;

        d4 = r1[i2];

        $r9 = new com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackFunctionData;

        specialinvoke $r9.<com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackFunctionData: void <init>(double,double,double)>(d0, d1, d4);

        $r10 = virtualinvoke r4.<com.opengamma.analytics.math.function.Function1D: java.lang.Object evaluate(java.lang.Object)>($r9);

        $r11 = (java.lang.Double) $r10;

        $d7 = virtualinvoke $r11.<java.lang.Double: double doubleValue()>();

        d8 = d8 + $d7;

        i2 = i2 + 1;

        goto label1;

     label2:
        $i1 = lengthof r1;

        $d5 = (double) $i1;

        $d6 = d8 / $d5;

        return $d6;
    }

    public double priceCEV(double, double, double, double, double, double[])
    {
        com.opengamma.analytics.financial.model.finitedifference.MarkovChain r0;
        double d0, d1, d2, d3, d4, d5, $d6, $d7, $d8, d9;
        double[] r1;
        com.opengamma.analytics.math.function.Function1D r4;
        int i0, $i1, i2;
        com.opengamma.analytics.financial.model.option.pricing.analytic.formula.EuropeanVanillaOption $r7;
        com.opengamma.analytics.financial.model.option.pricing.analytic.formula.CEVPriceFunction $r8;
        com.opengamma.analytics.financial.model.option.pricing.analytic.formula.CEVFunctionData $r9;
        java.lang.Object $r10;
        java.lang.Double $r11;

        r0 := @this: com.opengamma.analytics.financial.model.finitedifference.MarkovChain;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        d2 := @parameter2: double;

        d3 := @parameter3: double;

        d4 := @parameter4: double;

        r1 := @parameter5: double[];

        $r7 = new com.opengamma.analytics.financial.model.option.pricing.analytic.formula.EuropeanVanillaOption;

        specialinvoke $r7.<com.opengamma.analytics.financial.model.option.pricing.analytic.formula.EuropeanVanillaOption: void <init>(double,double,boolean)>(d2, d3, 1);

        $r8 = new com.opengamma.analytics.financial.model.option.pricing.analytic.formula.CEVPriceFunction;

        specialinvoke $r8.<com.opengamma.analytics.financial.model.option.pricing.analytic.formula.CEVPriceFunction: void <init>()>();

        r4 = virtualinvoke $r8.<com.opengamma.analytics.financial.model.option.pricing.analytic.formula.CEVPriceFunction: com.opengamma.analytics.math.function.Function1D getPriceFunction(com.opengamma.analytics.financial.model.option.pricing.analytic.formula.EuropeanVanillaOption)>($r7);

        d9 = 0.0;

        i0 = lengthof r1;

        i2 = 0;

     label1:
        if i2 >= i0 goto label2;

        d5 = r1[i2];

        $r9 = new com.opengamma.analytics.financial.model.option.pricing.analytic.formula.CEVFunctionData;

        specialinvoke $r9.<com.opengamma.analytics.financial.model.option.pricing.analytic.formula.CEVFunctionData: void <init>(double,double,double,double)>(d0, d1, d5, d4);

        $r10 = virtualinvoke r4.<com.opengamma.analytics.math.function.Function1D: java.lang.Object evaluate(java.lang.Object)>($r9);

        $r11 = (java.lang.Double) $r10;

        $d8 = virtualinvoke $r11.<java.lang.Double: double doubleValue()>();

        d9 = d9 + $d8;

        i2 = i2 + 1;

        goto label1;

     label2:
        $i1 = lengthof r1;

        $d6 = (double) $i1;

        $d7 = d9 / $d6;

        return $d7;
    }

    public double[][] price(double[], double[], double[], double[], double[][])
    {
        com.opengamma.analytics.financial.model.finitedifference.MarkovChain r0;
        double[] r1, r2, r3, r4, r8, $r15;
        double[][] r5, r7;
        int i0, i1, i2, $i3, $i4, $i5, $i6, i7, i8, i9;
        double d0, d1, d2, $d3, $d4, $d5, $d6, $d7, d8;
        com.opengamma.analytics.math.function.Function1D r10;
        com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackPriceFunction $r13;
        com.opengamma.analytics.financial.model.option.pricing.analytic.formula.EuropeanVanillaOption $r14;
        com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackFunctionData $r16;
        java.lang.Object $r17;
        java.lang.Double $r18;
        boolean $z0, $z1, $z2;

        r0 := @this: com.opengamma.analytics.financial.model.finitedifference.MarkovChain;

        r1 := @parameter0: double[];

        r2 := @parameter1: double[];

        r3 := @parameter2: double[];

        r4 := @parameter3: double[];

        r5 := @parameter4: double[][];

        i0 = lengthof r1;

        i1 = lengthof r3;

        $i3 = lengthof r2;

        if i0 != $i3 goto label01;

        $z0 = 1;

        goto label02;

     label01:
        $z0 = 0;

     label02:
        staticinvoke <org.apache.commons.lang.Validate: void isTrue(boolean)>($z0);

        $i4 = lengthof r4;

        if i0 != $i4 goto label03;

        $z1 = 1;

        goto label04;

     label03:
        $z1 = 0;

     label04:
        staticinvoke <org.apache.commons.lang.Validate: void isTrue(boolean)>($z1);

        $i5 = lengthof r5;

        if i0 != $i5 goto label05;

        $z2 = 1;

        goto label06;

     label05:
        $z2 = 0;

     label06:
        staticinvoke <org.apache.commons.lang.Validate: void isTrue(boolean)>($z2);

        $r13 = new com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackPriceFunction;

        specialinvoke $r13.<com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackPriceFunction: void <init>()>();

        r7 = newmultiarray (double)[i0][i1];

        i7 = 0;

     label07:
        if i7 >= i0 goto label12;

        d0 = r4[i7];

        r8 = r5[i7];

        i8 = 0;

     label08:
        if i8 >= i1 goto label11;

        d1 = r3[i8];

        $r14 = new com.opengamma.analytics.financial.model.option.pricing.analytic.formula.EuropeanVanillaOption;

        specialinvoke $r14.<com.opengamma.analytics.financial.model.option.pricing.analytic.formula.EuropeanVanillaOption: void <init>(double,double,boolean)>(d1, d0, 1);

        r10 = virtualinvoke $r13.<com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackPriceFunction: com.opengamma.analytics.math.function.Function1D getPriceFunction(com.opengamma.analytics.financial.model.option.pricing.analytic.formula.EuropeanVanillaOption)>($r14);

        d8 = 0.0;

        i2 = lengthof r8;

        i9 = 0;

     label09:
        if i9 >= i2 goto label10;

        d2 = r8[i9];

        $r16 = new com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackFunctionData;

        $d6 = r1[i7];

        $d5 = r2[i7];

        specialinvoke $r16.<com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackFunctionData: void <init>(double,double,double)>($d6, $d5, d2);

        $r17 = virtualinvoke r10.<com.opengamma.analytics.math.function.Function1D: java.lang.Object evaluate(java.lang.Object)>($r16);

        $r18 = (java.lang.Double) $r17;

        $d7 = virtualinvoke $r18.<java.lang.Double: double doubleValue()>();

        d8 = d8 + $d7;

        i9 = i9 + 1;

        goto label09;

     label10:
        $r15 = r7[i7];

        $i6 = lengthof r8;

        $d3 = (double) $i6;

        $d4 = d8 / $d3;

        $r15[i8] = $d4;

        i8 = i8 + 1;

        goto label08;

     label11:
        i7 = i7 + 1;

        goto label07;

     label12:
        return r7;
    }

    public double[] getMoments(double, double[])
    {
        com.opengamma.analytics.financial.model.finitedifference.MarkovChain r0;
        double d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, d19, d20, d21, d22, d23, d24, d25, d26;
        double[] r1, $r2;
        int $i0, $i1, i2, i3, i4;

        r0 := @this: com.opengamma.analytics.financial.model.finitedifference.MarkovChain;

        d0 := @parameter0: double;

        r1 := @parameter1: double[];

        d19 = 0.0;

        d20 = 0.0;

        d21 = 0.0;

        i2 = lengthof r1;

        i3 = 0;

     label1:
        if i3 >= i2 goto label2;

        d22 = r1[i3];

        d23 = d22 * d22;

        d19 = d19 + d23;

        $d16 = d23 * d23;

        d20 = d20 + $d16;

        $d17 = d23 * d23;

        $d18 = $d17 * d23;

        d21 = d21 + $d18;

        i3 = i3 + 1;

        goto label1;

     label2:
        i4 = lengthof r1;

        $d1 = (double) i4;

        d24 = d19 / $d1;

        $d2 = (double) i4;

        $d3 = $d2 * d24;

        $d4 = $d3 * d24;

        $d6 = d20 - $d4;

        $i0 = i4 - 1;

        $d5 = (double) $i0;

        d25 = $d6 / $d5;

        $d7 = 3.0 * d24;

        $d8 = $d7 * d20;

        $d13 = d21 - $d8;

        $i1 = 2 * i4;

        $d9 = (double) $i1;

        $d10 = $d9 * d24;

        $d11 = $d10 * d24;

        $d12 = $d11 * d24;

        $d15 = $d13 + $d12;

        $d14 = (double) i4;

        d26 = $d15 / $d14;

        $r2 = newarray (double)[3];

        $r2[0] = d24;

        $r2[1] = d25;

        $r2[2] = d26;

        return $r2;
    }

    public double[] simulate(double, int)
    {
        com.opengamma.analytics.financial.model.finitedifference.MarkovChain r0;
        double d0, d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, d15, d16, d17, d18;
        int i0, i3;
        double[] r1;
        cern.jet.random.engine.MersenneTwister $r2, $r3;
        byte $b1, $b2, $b4;
        boolean $z0, z1, $z2;

        r0 := @this: com.opengamma.analytics.financial.model.finitedifference.MarkovChain;

        d0 := @parameter0: double;

        i0 := @parameter1: int;

        r1 = newarray (double)[i0];

        i3 = 0;

     label01:
        if i3 >= i0 goto label12;

        $d2 = r0.<com.opengamma.analytics.financial.model.finitedifference.MarkovChain: double _probState1>;

        $r2 = r0.<com.opengamma.analytics.financial.model.finitedifference.MarkovChain: cern.jet.random.engine.MersenneTwister _rand>;

        $d3 = virtualinvoke $r2.<cern.jet.random.engine.MersenneTwister: double nextDouble()>();

        $b1 = $d2 cmpl $d3;

        if $b1 <= 0 goto label02;

        $z0 = 1;

        goto label03;

     label02:
        $z0 = 0;

     label03:
        z1 = $z0;

        d15 = 0.0;

        d16 = 0.0;

     label04:
        $b4 = d15 cmpg d0;

        if $b4 >= 0 goto label11;

        if z1 == 0 goto label05;

        d17 = r0.<com.opengamma.analytics.financial.model.finitedifference.MarkovChain: double _vol1>;

        d18 = r0.<com.opengamma.analytics.financial.model.finitedifference.MarkovChain: double _lambda12>;

        goto label06;

     label05:
        d17 = r0.<com.opengamma.analytics.financial.model.finitedifference.MarkovChain: double _vol2>;

        d18 = r0.<com.opengamma.analytics.financial.model.finitedifference.MarkovChain: double _lambda21>;

     label06:
        $r3 = r0.<com.opengamma.analytics.financial.model.finitedifference.MarkovChain: cern.jet.random.engine.MersenneTwister _rand>;

        $d6 = virtualinvoke $r3.<cern.jet.random.engine.MersenneTwister: double nextDouble()>();

        $d7 = staticinvoke <java.lang.Math: double log(double)>($d6);

        $d8 = neg $d7;

        d1 = $d8 / d18;

        $d9 = d15 + d1;

        $b2 = $d9 cmpg d0;

        if $b2 >= 0 goto label09;

        $d13 = d1 * d17;

        $d14 = $d13 * d17;

        d16 = d16 + $d14;

        if z1 != 0 goto label07;

        $z2 = 1;

        goto label08;

     label07:
        $z2 = 0;

     label08:
        z1 = $z2;

        goto label10;

     label09:
        $d10 = d0 - d15;

        $d11 = $d10 * d17;

        $d12 = $d11 * d17;

        d16 = d16 + $d12;

     label10:
        d15 = d15 + d1;

        goto label04;

     label11:
        $d4 = d16 / d0;

        $d5 = staticinvoke <java.lang.Math: double sqrt(double)>($d4);

        r1[i3] = $d5;

        i3 = i3 + 1;

        goto label01;

     label12:
        return r1;
    }

    public double[][] simulate(double[], int)
    {
        com.opengamma.analytics.financial.model.finitedifference.MarkovChain r0;
        double[] r1;
        int i0;
        double[][] $r2;

        r0 := @this: com.opengamma.analytics.financial.model.finitedifference.MarkovChain;

        r1 := @parameter0: double[];

        i0 := @parameter1: int;

        $r2 = virtualinvoke r0.<com.opengamma.analytics.financial.model.finitedifference.MarkovChain: double[][] simulate(double[],int,double,double)>(r1, i0, 0.0, 1.0);

        return $r2;
    }

    public double[][] simulate(double[], int, double, double)
    {
        com.opengamma.analytics.financial.model.finitedifference.MarkovChain r0;
        double[] r1, $r5, $r6;
        int i0, i1, $i6, $i10, $i12, $i13, i15, i16, i17;
        double d0, d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21, $d22, $d23, $d24, $d25, $d26, $d27, $d28, $d29, $d30, $d31, $d32, $d33, $d34, $d35, $d36, $d37, $d38, $d39, d40, d41, d42, d43, d44, d45;
        double[][] r2;
        byte $b2, $b3, $b4, $b5, $b7, $b8, $b9, $b11, $b14;
        cern.jet.random.engine.MersenneTwister $r3, $r4, $r7;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, z6, $z7;

        r0 := @this: com.opengamma.analytics.financial.model.finitedifference.MarkovChain;

        r1 := @parameter0: double[];

        i0 := @parameter1: int;

        d0 := @parameter2: double;

        d1 := @parameter3: double;

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object)>(r1);

        $b2 = d1 cmpl d0;

        if $b2 <= 0 goto label01;

        $z0 = 1;

        goto label02;

     label01:
        $z0 = 0;

     label02:
        staticinvoke <org.apache.commons.lang.Validate: void isTrue(boolean,java.lang.String)>($z0, "need b > a");

        $b3 = d0 cmpl 0.0;

        if $b3 < 0 goto label03;

        $z1 = 1;

        goto label04;

     label03:
        $z1 = 0;

     label04:
        staticinvoke <org.apache.commons.lang.Validate: void isTrue(boolean,java.lang.String)>($z1, "Nedd a >= 0.0");

        $b4 = d1 cmpg 1.0;

        if $b4 > 0 goto label05;

        $z2 = 1;

        goto label06;

     label05:
        $z2 = 0;

     label06:
        staticinvoke <org.apache.commons.lang.Validate: void isTrue(boolean,java.lang.String)>($z2, "Nedd b <= 1.0");

        i1 = lengthof r1;

        if i1 <= 0 goto label07;

        $z3 = 1;

        goto label08;

     label07:
        $z3 = 0;

     label08:
        staticinvoke <org.apache.commons.lang.Validate: void isTrue(boolean)>($z3);

        i15 = 1;

     label09:
        if i15 >= i1 goto label12;

        $d39 = r1[i15];

        $i13 = i15 - 1;

        $d38 = r1[$i13];

        $b14 = $d39 cmpl $d38;

        if $b14 <= 0 goto label10;

        $z4 = 1;

        goto label11;

     label10:
        $z4 = 0;

     label11:
        staticinvoke <org.apache.commons.lang.Validate: void isTrue(boolean)>($z4);

        i15 = i15 + 1;

        goto label09;

     label12:
        r2 = newmultiarray (double)[i1][i0];

        i16 = 0;

     label13:
        if i16 >= i0 goto label27;

        i17 = 0;

        $d2 = r0.<com.opengamma.analytics.financial.model.finitedifference.MarkovChain: double _probState1>;

        $r3 = r0.<com.opengamma.analytics.financial.model.finitedifference.MarkovChain: cern.jet.random.engine.MersenneTwister _rand>;

        $d3 = virtualinvoke $r3.<cern.jet.random.engine.MersenneTwister: double nextDouble()>();

        $b5 = $d2 cmpl $d3;

        if $b5 <= 0 goto label14;

        $z5 = 1;

        goto label15;

     label14:
        $z5 = 0;

     label15:
        z6 = $z5;

        d40 = 0.0;

        d41 = 0.0;

     label16:
        if i17 >= i1 goto label26;

        $i6 = i1 - 1;

        $d4 = r1[$i6];

        $b7 = d40 cmpg $d4;

        if $b7 >= 0 goto label26;

        if z6 == 0 goto label17;

        d42 = r0.<com.opengamma.analytics.financial.model.finitedifference.MarkovChain: double _vol1>;

        d43 = r0.<com.opengamma.analytics.financial.model.finitedifference.MarkovChain: double _lambda12>;

        goto label18;

     label17:
        d42 = r0.<com.opengamma.analytics.financial.model.finitedifference.MarkovChain: double _vol2>;

        d43 = r0.<com.opengamma.analytics.financial.model.finitedifference.MarkovChain: double _lambda21>;

     label18:
        $b8 = d40 cmpl 0.0;

        if $b8 != 0 goto label19;

        $d32 = d1 - d0;

        $r7 = r0.<com.opengamma.analytics.financial.model.finitedifference.MarkovChain: cern.jet.random.engine.MersenneTwister _rand>;

        $d33 = virtualinvoke $r7.<cern.jet.random.engine.MersenneTwister: double nextDouble()>();

        $d34 = $d32 * $d33;

        $d35 = d0 + $d34;

        $d36 = staticinvoke <java.lang.Math: double log(double)>($d35);

        $d37 = neg $d36;

        d44 = $d37 / d43;

        goto label20;

     label19:
        $r4 = r0.<com.opengamma.analytics.financial.model.finitedifference.MarkovChain: cern.jet.random.engine.MersenneTwister _rand>;

        $d5 = virtualinvoke $r4.<cern.jet.random.engine.MersenneTwister: double nextDouble()>();

        $d6 = staticinvoke <java.lang.Math: double log(double)>($d5);

        $d7 = neg $d6;

        d44 = $d7 / d43;

     label20:
        if z6 != 0 goto label21;

        $z7 = 1;

        goto label22;

     label21:
        $z7 = 0;

     label22:
        z6 = $z7;

        d40 = d40 + d44;

        $d8 = r1[i17];

        $b9 = d40 cmpg $d8;

        if $b9 >= 0 goto label23;

        $d30 = d44 * d42;

        $d31 = $d30 * d42;

        d41 = d41 + $d31;

        goto label16;

     label23:
        $d9 = r1[i17];

        $d10 = $d9 - d40;

        $d11 = $d10 + d44;

        $d12 = $d11 * d42;

        $d13 = $d12 * d42;

        d45 = d41 + $d13;

        $r5 = r2[i17];

        $d14 = r1[i17];

        $d15 = d45 / $d14;

        $d16 = staticinvoke <java.lang.Math: double sqrt(double)>($d15);

        $r5[i16] = $d16;

        i17 = i17 + 1;

     label24:
        if i17 >= i1 goto label25;

        $d21 = r1[i17];

        $b11 = d40 cmpl $d21;

        if $b11 <= 0 goto label25;

        $d23 = r1[i17];

        $i12 = i17 - 1;

        $d22 = r1[$i12];

        $d24 = $d23 - $d22;

        $d25 = $d24 * d42;

        $d26 = $d25 * d42;

        d45 = d45 + $d26;

        $r6 = r2[i17];

        $d27 = r1[i17];

        $d28 = d45 / $d27;

        $d29 = staticinvoke <java.lang.Math: double sqrt(double)>($d28);

        $r6[i16] = $d29;

        i17 = i17 + 1;

        goto label24;

     label25:
        $i10 = i17 - 1;

        $d17 = r1[$i10];

        $d18 = d40 - $d17;

        $d19 = $d18 * d42;

        $d20 = $d19 * d42;

        d41 = d45 + $d20;

        goto label16;

     label26:
        i16 = i16 + 1;

        goto label13;

     label27:
        return r2;
    }
}
