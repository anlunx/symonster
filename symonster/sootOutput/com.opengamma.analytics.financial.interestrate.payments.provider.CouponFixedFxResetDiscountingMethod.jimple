public final class com.opengamma.analytics.financial.interestrate.payments.provider.CouponFixedFxResetDiscountingMethod extends java.lang.Object
{
    private static final com.opengamma.analytics.financial.interestrate.payments.provider.CouponFixedFxResetDiscountingMethod INSTANCE;

    public static com.opengamma.analytics.financial.interestrate.payments.provider.CouponFixedFxResetDiscountingMethod getInstance()
    {
        com.opengamma.analytics.financial.interestrate.payments.provider.CouponFixedFxResetDiscountingMethod $r0;

        $r0 = <com.opengamma.analytics.financial.interestrate.payments.provider.CouponFixedFxResetDiscountingMethod: com.opengamma.analytics.financial.interestrate.payments.provider.CouponFixedFxResetDiscountingMethod INSTANCE>;

        return $r0;
    }

    private void <init>()
    {
        com.opengamma.analytics.financial.interestrate.payments.provider.CouponFixedFxResetDiscountingMethod r0;

        r0 := @this: com.opengamma.analytics.financial.interestrate.payments.provider.CouponFixedFxResetDiscountingMethod;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public com.opengamma.util.money.MultipleCurrencyAmount presentValue(com.opengamma.analytics.financial.interestrate.payments.derivative.CouponFixedFxReset, com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface)
    {
        com.opengamma.analytics.financial.interestrate.payments.provider.CouponFixedFxResetDiscountingMethod r0;
        com.opengamma.analytics.financial.interestrate.payments.derivative.CouponFixedFxReset r1;
        com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface r2;
        com.opengamma.util.money.Currency r3, r4;
        double d0, d1, d2, d3, d4, d5, d6, d7, $d8, $d9;
        java.lang.Double $r5, $r6, $r7;
        com.opengamma.util.money.MultipleCurrencyAmount $r8;

        r0 := @this: com.opengamma.analytics.financial.interestrate.payments.provider.CouponFixedFxResetDiscountingMethod;

        r1 := @parameter0: com.opengamma.analytics.financial.interestrate.payments.derivative.CouponFixedFxReset;

        r2 := @parameter1: com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface;

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object,java.lang.String)>(r1, "Coupon");

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object,java.lang.String)>(r2, "multicurve");

        r3 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.payments.derivative.CouponFixedFxReset: com.opengamma.util.money.Currency getCurrency()>();

        r4 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.payments.derivative.CouponFixedFxReset: com.opengamma.util.money.Currency getReferenceCurrency()>();

        d0 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.payments.derivative.CouponFixedFxReset: double getPaymentTime()>();

        d1 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.payments.derivative.CouponFixedFxReset: double getFxDeliveryTime()>();

        d2 = interfaceinvoke r2.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface: double getFxRate(com.opengamma.util.money.Currency,com.opengamma.util.money.Currency)>(r4, r3);

        d3 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.payments.derivative.CouponFixedFxReset: double paymentAmount(double)>(d2);

        $r5 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d0);

        d4 = interfaceinvoke r2.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface: double getDiscountFactor(com.opengamma.util.money.Currency,java.lang.Double)>(r3, $r5);

        $r6 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d1);

        d5 = interfaceinvoke r2.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface: double getDiscountFactor(com.opengamma.util.money.Currency,java.lang.Double)>(r4, $r6);

        $r7 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d1);

        d6 = interfaceinvoke r2.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface: double getDiscountFactor(com.opengamma.util.money.Currency,java.lang.Double)>(r3, $r7);

        $d8 = d3 * d4;

        $d9 = $d8 * d5;

        d7 = $d9 / d6;

        $r8 = staticinvoke <com.opengamma.util.money.MultipleCurrencyAmount: com.opengamma.util.money.MultipleCurrencyAmount of(com.opengamma.util.money.Currency,double)>(r3, d7);

        return $r8;
    }

    public com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyMulticurveSensitivity presentValueCurveSensitivity(com.opengamma.analytics.financial.interestrate.payments.derivative.CouponFixedFxReset, com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface)
    {
        com.opengamma.analytics.financial.interestrate.payments.provider.CouponFixedFxResetDiscountingMethod r0;
        com.opengamma.analytics.financial.interestrate.payments.derivative.CouponFixedFxReset r1;
        com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface r2;
        com.opengamma.util.money.Currency r3, r4;
        double d0, d1, d2, d3, d4, d5, d6, d8, d9, d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21, $d22, $d23, $d24, $d25, $d26, $d27, $d28;
        java.lang.Double $r9, $r10, $r11;
        com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyMulticurveSensitivity $r12, r27, r28;
        java.util.HashMap $r13, $r20;
        java.util.ArrayList $r14, $r21;
        com.opengamma.util.tuple.DoublesPair $r15, $r16, $r22;
        java.lang.String $r17, $r23;
        com.opengamma.analytics.financial.provider.sensitivity.multicurve.MulticurveSensitivity $r19, $r25;

        r0 := @this: com.opengamma.analytics.financial.interestrate.payments.provider.CouponFixedFxResetDiscountingMethod;

        r1 := @parameter0: com.opengamma.analytics.financial.interestrate.payments.derivative.CouponFixedFxReset;

        r2 := @parameter1: com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface;

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object,java.lang.String)>(r1, "Coupon");

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object,java.lang.String)>(r2, "multicurve");

        r3 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.payments.derivative.CouponFixedFxReset: com.opengamma.util.money.Currency getCurrency()>();

        r4 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.payments.derivative.CouponFixedFxReset: com.opengamma.util.money.Currency getReferenceCurrency()>();

        d0 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.payments.derivative.CouponFixedFxReset: double getPaymentTime()>();

        d1 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.payments.derivative.CouponFixedFxReset: double getFxDeliveryTime()>();

        d2 = interfaceinvoke r2.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface: double getFxRate(com.opengamma.util.money.Currency,com.opengamma.util.money.Currency)>(r4, r3);

        d3 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.payments.derivative.CouponFixedFxReset: double paymentAmount(double)>(d2);

        $r9 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d0);

        d4 = interfaceinvoke r2.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface: double getDiscountFactor(com.opengamma.util.money.Currency,java.lang.Double)>(r3, $r9);

        $r10 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d1);

        d5 = interfaceinvoke r2.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface: double getDiscountFactor(com.opengamma.util.money.Currency,java.lang.Double)>(r4, $r10);

        $r11 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d1);

        d6 = interfaceinvoke r2.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface: double getDiscountFactor(com.opengamma.util.money.Currency,java.lang.Double)>(r3, $r11);

        $d11 = neg d3;

        $d12 = $d11 * d4;

        $d14 = $d12 * d5;

        $d13 = d6 * d6;

        $d15 = $d14 / $d13;

        d8 = $d15 * 1.0;

        $d16 = d3 * d4;

        $d17 = $d16 / d6;

        d9 = $d17 * 1.0;

        $d18 = d3 * d5;

        $d19 = $d18 / d6;

        d10 = $d19 * 1.0;

        $r12 = new com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyMulticurveSensitivity;

        specialinvoke $r12.<com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyMulticurveSensitivity: void <init>()>();

        $r13 = new java.util.HashMap;

        specialinvoke $r13.<java.util.HashMap: void <init>()>();

        $r14 = new java.util.ArrayList;

        specialinvoke $r14.<java.util.ArrayList: void <init>()>();

        $d20 = neg d1;

        $d21 = $d20 * d6;

        $d22 = $d21 * d8;

        $r15 = staticinvoke <com.opengamma.util.tuple.DoublesPair: com.opengamma.util.tuple.DoublesPair of(double,double)>(d1, $d22);

        interfaceinvoke $r14.<java.util.List: boolean add(java.lang.Object)>($r15);

        $d23 = neg d0;

        $d24 = $d23 * d4;

        $d25 = $d24 * d10;

        $r16 = staticinvoke <com.opengamma.util.tuple.DoublesPair: com.opengamma.util.tuple.DoublesPair of(double,double)>(d0, $d25);

        interfaceinvoke $r14.<java.util.List: boolean add(java.lang.Object)>($r16);

        $r17 = interfaceinvoke r2.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface: java.lang.String getName(com.opengamma.util.money.Currency)>(r3);

        interfaceinvoke $r13.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r17, $r14);

        $r19 = staticinvoke <com.opengamma.analytics.financial.provider.sensitivity.multicurve.MulticurveSensitivity: com.opengamma.analytics.financial.provider.sensitivity.multicurve.MulticurveSensitivity ofYieldDiscounting(java.util.Map)>($r13);

        r27 = virtualinvoke $r12.<com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyMulticurveSensitivity: com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyMulticurveSensitivity plus(com.opengamma.util.money.Currency,com.opengamma.analytics.financial.provider.sensitivity.multicurve.MulticurveSensitivity)>(r3, $r19);

        $r20 = new java.util.HashMap;

        specialinvoke $r20.<java.util.HashMap: void <init>()>();

        $r21 = new java.util.ArrayList;

        specialinvoke $r21.<java.util.ArrayList: void <init>()>();

        $d26 = neg d1;

        $d27 = $d26 * d5;

        $d28 = $d27 * d9;

        $r22 = staticinvoke <com.opengamma.util.tuple.DoublesPair: com.opengamma.util.tuple.DoublesPair of(double,double)>(d1, $d28);

        interfaceinvoke $r21.<java.util.List: boolean add(java.lang.Object)>($r22);

        $r23 = interfaceinvoke r2.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface: java.lang.String getName(com.opengamma.util.money.Currency)>(r4);

        interfaceinvoke $r20.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r23, $r21);

        $r25 = staticinvoke <com.opengamma.analytics.financial.provider.sensitivity.multicurve.MulticurveSensitivity: com.opengamma.analytics.financial.provider.sensitivity.multicurve.MulticurveSensitivity ofYieldDiscounting(java.util.Map)>($r20);

        r28 = virtualinvoke r27.<com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyMulticurveSensitivity: com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyMulticurveSensitivity plus(com.opengamma.util.money.Currency,com.opengamma.analytics.financial.provider.sensitivity.multicurve.MulticurveSensitivity)>(r3, $r25);

        return r28;
    }

    public com.opengamma.util.money.MultipleCurrencyAmount currencyExposure(com.opengamma.analytics.financial.interestrate.payments.derivative.CouponFixedFxReset, com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface)
    {
        com.opengamma.analytics.financial.interestrate.payments.provider.CouponFixedFxResetDiscountingMethod r0;
        com.opengamma.analytics.financial.interestrate.payments.derivative.CouponFixedFxReset r1;
        com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface r2;
        com.opengamma.util.money.Currency r3, r4;
        double d0, d1, d2, d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13;
        java.lang.Double $r5, $r6, $r7;
        com.opengamma.util.money.MultipleCurrencyAmount $r8;

        r0 := @this: com.opengamma.analytics.financial.interestrate.payments.provider.CouponFixedFxResetDiscountingMethod;

        r1 := @parameter0: com.opengamma.analytics.financial.interestrate.payments.derivative.CouponFixedFxReset;

        r2 := @parameter1: com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface;

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object,java.lang.String)>(r1, "Coupon");

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object,java.lang.String)>(r2, "multicurve");

        r3 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.payments.derivative.CouponFixedFxReset: com.opengamma.util.money.Currency getCurrency()>();

        r4 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.payments.derivative.CouponFixedFxReset: com.opengamma.util.money.Currency getReferenceCurrency()>();

        $d4 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.payments.derivative.CouponFixedFxReset: double getPaymentTime()>();

        $r5 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d4);

        d0 = interfaceinvoke r2.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface: double getDiscountFactor(com.opengamma.util.money.Currency,java.lang.Double)>(r3, $r5);

        $d5 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.payments.derivative.CouponFixedFxReset: double getFxDeliveryTime()>();

        $r6 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d5);

        d1 = interfaceinvoke r2.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface: double getDiscountFactor(com.opengamma.util.money.Currency,java.lang.Double)>(r4, $r6);

        $d6 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.payments.derivative.CouponFixedFxReset: double getFxDeliveryTime()>();

        $r7 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d6);

        d2 = interfaceinvoke r2.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface: double getDiscountFactor(com.opengamma.util.money.Currency,java.lang.Double)>(r3, $r7);

        $d7 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.payments.derivative.CouponFixedFxReset: double getNotional()>();

        $d8 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.payments.derivative.CouponFixedFxReset: double getPaymentYearFraction()>();

        $d9 = $d7 * $d8;

        $d10 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.payments.derivative.CouponFixedFxReset: double getRate()>();

        $d11 = $d9 * $d10;

        $d12 = $d11 * d0;

        $d13 = $d12 * d1;

        d3 = $d13 / d2;

        $r8 = staticinvoke <com.opengamma.util.money.MultipleCurrencyAmount: com.opengamma.util.money.MultipleCurrencyAmount of(com.opengamma.util.money.Currency,double)>(r4, d3);

        return $r8;
    }

    static void <clinit>()
    {
        com.opengamma.analytics.financial.interestrate.payments.provider.CouponFixedFxResetDiscountingMethod $r0;

        $r0 = new com.opengamma.analytics.financial.interestrate.payments.provider.CouponFixedFxResetDiscountingMethod;

        specialinvoke $r0.<com.opengamma.analytics.financial.interestrate.payments.provider.CouponFixedFxResetDiscountingMethod: void <init>()>();

        <com.opengamma.analytics.financial.interestrate.payments.provider.CouponFixedFxResetDiscountingMethod: com.opengamma.analytics.financial.interestrate.payments.provider.CouponFixedFxResetDiscountingMethod INSTANCE> = $r0;

        return;
    }
}
