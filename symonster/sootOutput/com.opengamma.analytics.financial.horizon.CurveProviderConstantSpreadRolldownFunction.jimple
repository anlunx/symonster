public final class com.opengamma.analytics.financial.horizon.CurveProviderConstantSpreadRolldownFunction extends java.lang.Object implements com.opengamma.analytics.financial.horizon.RolldownFunction
{
    private static final com.opengamma.analytics.financial.horizon.ConstantSpreadYieldCurveRolldownFunction CURVE_ROLLDOWN;
    private static final com.opengamma.analytics.financial.horizon.CurveProviderConstantSpreadRolldownFunction INSTANCE;

    public static com.opengamma.analytics.financial.horizon.CurveProviderConstantSpreadRolldownFunction getInstance()
    {
        com.opengamma.analytics.financial.horizon.CurveProviderConstantSpreadRolldownFunction $r0;

        $r0 = <com.opengamma.analytics.financial.horizon.CurveProviderConstantSpreadRolldownFunction: com.opengamma.analytics.financial.horizon.CurveProviderConstantSpreadRolldownFunction INSTANCE>;

        return $r0;
    }

    private void <init>()
    {
        com.opengamma.analytics.financial.horizon.CurveProviderConstantSpreadRolldownFunction r0;

        r0 := @this: com.opengamma.analytics.financial.horizon.CurveProviderConstantSpreadRolldownFunction;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public com.opengamma.analytics.financial.provider.description.interestrate.ParameterProviderInterface rollDown(com.opengamma.analytics.financial.provider.description.interestrate.ParameterProviderInterface, double)
    {
        com.opengamma.analytics.financial.horizon.CurveProviderConstantSpreadRolldownFunction r0;
        com.opengamma.analytics.financial.provider.description.interestrate.ParameterProviderInterface r1;
        double d0;
        boolean $z0, $z1;
        java.lang.IllegalArgumentException $r3;
        java.lang.StringBuilder $r4, $r5, $r7;
        java.lang.Class $r6;
        java.lang.String $r8;
        com.opengamma.analytics.financial.provider.description.interestrate.IssuerProviderDiscount $r9, $r10;
        com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount $r11, $r12;

        r0 := @this: com.opengamma.analytics.financial.horizon.CurveProviderConstantSpreadRolldownFunction;

        r1 := @parameter0: com.opengamma.analytics.financial.provider.description.interestrate.ParameterProviderInterface;

        d0 := @parameter1: double;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "data");

        $z0 = r1 instanceof com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount;

        if $z0 == 0 goto label1;

        $r11 = (com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount) r1;

        $r12 = specialinvoke r0.<com.opengamma.analytics.financial.horizon.CurveProviderConstantSpreadRolldownFunction: com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount rollDown(com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount,double)>($r11, d0);

        return $r12;

     label1:
        $z1 = r1 instanceof com.opengamma.analytics.financial.provider.description.interestrate.IssuerProviderDiscount;

        if $z1 == 0 goto label2;

        $r9 = (com.opengamma.analytics.financial.provider.description.interestrate.IssuerProviderDiscount) r1;

        $r10 = specialinvoke r0.<com.opengamma.analytics.financial.horizon.CurveProviderConstantSpreadRolldownFunction: com.opengamma.analytics.financial.provider.description.interestrate.IssuerProviderDiscount rollDown(com.opengamma.analytics.financial.provider.description.interestrate.IssuerProviderDiscount,double)>($r9, d0);

        return $r10;

     label2:
        $r3 = new java.lang.IllegalArgumentException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot handle data of type ");

        $r6 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r8);

        throw $r3;
    }

    private com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount rollDown(com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount, double)
    {
        com.opengamma.analytics.financial.horizon.CurveProviderConstantSpreadRolldownFunction r0;
        com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount r1, $r13;
        double d0;
        java.util.Map$Entry r3, r37, r40;
        java.util.LinkedHashMap $r4, $r7, $r10;
        java.util.Map $r5, $r8, $r11;
        java.util.Set $r6, $r9, $r12;
        boolean $z0, $z1, $z2;
        com.opengamma.analytics.financial.forex.method.FXMatrix $r14;
        java.lang.Object $r15, $r16, $r18, $r22, $r23, $r25, $r29, $r30, $r32;
        com.opengamma.analytics.financial.horizon.ConstantSpreadYieldCurveRolldownFunction $r17, $r24, $r31;
        com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve $r19, $r20, $r26, $r27, $r33, $r34;
        java.util.Iterator r36, r39, r42;

        r0 := @this: com.opengamma.analytics.financial.horizon.CurveProviderConstantSpreadRolldownFunction;

        r1 := @parameter0: com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount;

        d0 := @parameter1: double;

        $r4 = new java.util.LinkedHashMap;

        specialinvoke $r4.<java.util.LinkedHashMap: void <init>()>();

        $r5 = virtualinvoke r1.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount: java.util.Map getDiscountingCurves()>();

        $r6 = interfaceinvoke $r5.<java.util.Map: java.util.Set entrySet()>();

        r36 = interfaceinvoke $r6.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r36.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r29 = interfaceinvoke r36.<java.util.Iterator: java.lang.Object next()>();

        r37 = (java.util.Map$Entry) $r29;

        $r30 = interfaceinvoke r37.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r31 = <com.opengamma.analytics.financial.horizon.CurveProviderConstantSpreadRolldownFunction: com.opengamma.analytics.financial.horizon.ConstantSpreadYieldCurveRolldownFunction CURVE_ROLLDOWN>;

        $r32 = interfaceinvoke r37.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r33 = (com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve) $r32;

        $r34 = virtualinvoke $r31.<com.opengamma.analytics.financial.horizon.ConstantSpreadYieldCurveRolldownFunction: com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve rollDown(com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve,double)>($r33, d0);

        interfaceinvoke $r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r30, $r34);

        goto label1;

     label2:
        $r7 = new java.util.LinkedHashMap;

        specialinvoke $r7.<java.util.LinkedHashMap: void <init>()>();

        $r8 = virtualinvoke r1.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount: java.util.Map getForwardIborCurves()>();

        $r9 = interfaceinvoke $r8.<java.util.Map: java.util.Set entrySet()>();

        r39 = interfaceinvoke $r9.<java.util.Set: java.util.Iterator iterator()>();

     label3:
        $z1 = interfaceinvoke r39.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label4;

        $r22 = interfaceinvoke r39.<java.util.Iterator: java.lang.Object next()>();

        r40 = (java.util.Map$Entry) $r22;

        $r23 = interfaceinvoke r40.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r24 = <com.opengamma.analytics.financial.horizon.CurveProviderConstantSpreadRolldownFunction: com.opengamma.analytics.financial.horizon.ConstantSpreadYieldCurveRolldownFunction CURVE_ROLLDOWN>;

        $r25 = interfaceinvoke r40.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r26 = (com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve) $r25;

        $r27 = virtualinvoke $r24.<com.opengamma.analytics.financial.horizon.ConstantSpreadYieldCurveRolldownFunction: com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve rollDown(com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve,double)>($r26, d0);

        interfaceinvoke $r7.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r23, $r27);

        goto label3;

     label4:
        $r10 = new java.util.LinkedHashMap;

        specialinvoke $r10.<java.util.LinkedHashMap: void <init>()>();

        $r11 = virtualinvoke r1.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount: java.util.Map getForwardONCurves()>();

        $r12 = interfaceinvoke $r11.<java.util.Map: java.util.Set entrySet()>();

        r42 = interfaceinvoke $r12.<java.util.Set: java.util.Iterator iterator()>();

     label5:
        $z2 = interfaceinvoke r42.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label6;

        $r15 = interfaceinvoke r42.<java.util.Iterator: java.lang.Object next()>();

        r3 = (java.util.Map$Entry) $r15;

        $r16 = interfaceinvoke r3.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r17 = <com.opengamma.analytics.financial.horizon.CurveProviderConstantSpreadRolldownFunction: com.opengamma.analytics.financial.horizon.ConstantSpreadYieldCurveRolldownFunction CURVE_ROLLDOWN>;

        $r18 = interfaceinvoke r3.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r19 = (com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve) $r18;

        $r20 = virtualinvoke $r17.<com.opengamma.analytics.financial.horizon.ConstantSpreadYieldCurveRolldownFunction: com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve rollDown(com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve,double)>($r19, d0);

        interfaceinvoke $r10.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r16, $r20);

        goto label5;

     label6:
        $r13 = new com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount;

        $r14 = virtualinvoke r1.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount: com.opengamma.analytics.financial.forex.method.FXMatrix getFxRates()>();

        specialinvoke $r13.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount: void <init>(java.util.Map,java.util.Map,java.util.Map,com.opengamma.analytics.financial.forex.method.FXMatrix)>($r4, $r7, $r10, $r14);

        return $r13;
    }

    private com.opengamma.analytics.financial.provider.description.interestrate.IssuerProviderDiscount rollDown(com.opengamma.analytics.financial.provider.description.interestrate.IssuerProviderDiscount, double)
    {
        com.opengamma.analytics.financial.horizon.CurveProviderConstantSpreadRolldownFunction r0;
        com.opengamma.analytics.financial.provider.description.interestrate.IssuerProviderDiscount r1, $r17;
        double d0;
        com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount r2;
        java.util.Map$Entry r4, r48, r51, r54;
        java.util.LinkedHashMap $r5, $r8, $r11, $r14;
        java.util.Map $r6, $r9, $r12, $r15;
        java.util.Set $r7, $r10, $r13, $r16;
        boolean $z0, $z1, $z2, $z3;
        com.opengamma.analytics.financial.forex.method.FXMatrix $r18;
        java.lang.Object $r19, $r20, $r22, $r26, $r27, $r29, $r33, $r34, $r36, $r40, $r41, $r43;
        com.opengamma.analytics.financial.horizon.ConstantSpreadYieldCurveRolldownFunction $r21, $r28, $r35, $r42;
        com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve $r23, $r24, $r30, $r31, $r37, $r38, $r44, $r45;
        java.util.Iterator r47, r50, r53, r56;

        r0 := @this: com.opengamma.analytics.financial.horizon.CurveProviderConstantSpreadRolldownFunction;

        r1 := @parameter0: com.opengamma.analytics.financial.provider.description.interestrate.IssuerProviderDiscount;

        d0 := @parameter1: double;

        r2 = virtualinvoke r1.<com.opengamma.analytics.financial.provider.description.interestrate.IssuerProviderDiscount: com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount getMulticurveProvider()>();

        $r5 = new java.util.LinkedHashMap;

        specialinvoke $r5.<java.util.LinkedHashMap: void <init>()>();

        $r6 = virtualinvoke r2.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount: java.util.Map getDiscountingCurves()>();

        $r7 = interfaceinvoke $r6.<java.util.Map: java.util.Set entrySet()>();

        r47 = interfaceinvoke $r7.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r47.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r40 = interfaceinvoke r47.<java.util.Iterator: java.lang.Object next()>();

        r48 = (java.util.Map$Entry) $r40;

        $r41 = interfaceinvoke r48.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r42 = <com.opengamma.analytics.financial.horizon.CurveProviderConstantSpreadRolldownFunction: com.opengamma.analytics.financial.horizon.ConstantSpreadYieldCurveRolldownFunction CURVE_ROLLDOWN>;

        $r43 = interfaceinvoke r48.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r44 = (com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve) $r43;

        $r45 = virtualinvoke $r42.<com.opengamma.analytics.financial.horizon.ConstantSpreadYieldCurveRolldownFunction: com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve rollDown(com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve,double)>($r44, d0);

        interfaceinvoke $r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r41, $r45);

        goto label1;

     label2:
        $r8 = new java.util.LinkedHashMap;

        specialinvoke $r8.<java.util.LinkedHashMap: void <init>()>();

        $r9 = virtualinvoke r2.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount: java.util.Map getForwardIborCurves()>();

        $r10 = interfaceinvoke $r9.<java.util.Map: java.util.Set entrySet()>();

        r50 = interfaceinvoke $r10.<java.util.Set: java.util.Iterator iterator()>();

     label3:
        $z1 = interfaceinvoke r50.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label4;

        $r33 = interfaceinvoke r50.<java.util.Iterator: java.lang.Object next()>();

        r51 = (java.util.Map$Entry) $r33;

        $r34 = interfaceinvoke r51.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r35 = <com.opengamma.analytics.financial.horizon.CurveProviderConstantSpreadRolldownFunction: com.opengamma.analytics.financial.horizon.ConstantSpreadYieldCurveRolldownFunction CURVE_ROLLDOWN>;

        $r36 = interfaceinvoke r51.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r37 = (com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve) $r36;

        $r38 = virtualinvoke $r35.<com.opengamma.analytics.financial.horizon.ConstantSpreadYieldCurveRolldownFunction: com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve rollDown(com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve,double)>($r37, d0);

        interfaceinvoke $r8.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r34, $r38);

        goto label3;

     label4:
        $r11 = new java.util.LinkedHashMap;

        specialinvoke $r11.<java.util.LinkedHashMap: void <init>()>();

        $r12 = virtualinvoke r2.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount: java.util.Map getForwardONCurves()>();

        $r13 = interfaceinvoke $r12.<java.util.Map: java.util.Set entrySet()>();

        r53 = interfaceinvoke $r13.<java.util.Set: java.util.Iterator iterator()>();

     label5:
        $z2 = interfaceinvoke r53.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label6;

        $r26 = interfaceinvoke r53.<java.util.Iterator: java.lang.Object next()>();

        r54 = (java.util.Map$Entry) $r26;

        $r27 = interfaceinvoke r54.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r28 = <com.opengamma.analytics.financial.horizon.CurveProviderConstantSpreadRolldownFunction: com.opengamma.analytics.financial.horizon.ConstantSpreadYieldCurveRolldownFunction CURVE_ROLLDOWN>;

        $r29 = interfaceinvoke r54.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r30 = (com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve) $r29;

        $r31 = virtualinvoke $r28.<com.opengamma.analytics.financial.horizon.ConstantSpreadYieldCurveRolldownFunction: com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve rollDown(com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve,double)>($r30, d0);

        interfaceinvoke $r11.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r27, $r31);

        goto label5;

     label6:
        $r14 = new java.util.LinkedHashMap;

        specialinvoke $r14.<java.util.LinkedHashMap: void <init>()>();

        $r15 = virtualinvoke r1.<com.opengamma.analytics.financial.provider.description.interestrate.IssuerProviderDiscount: java.util.Map getIssuerCurves()>();

        $r16 = interfaceinvoke $r15.<java.util.Map: java.util.Set entrySet()>();

        r56 = interfaceinvoke $r16.<java.util.Set: java.util.Iterator iterator()>();

     label7:
        $z3 = interfaceinvoke r56.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label8;

        $r19 = interfaceinvoke r56.<java.util.Iterator: java.lang.Object next()>();

        r4 = (java.util.Map$Entry) $r19;

        $r20 = interfaceinvoke r4.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r21 = <com.opengamma.analytics.financial.horizon.CurveProviderConstantSpreadRolldownFunction: com.opengamma.analytics.financial.horizon.ConstantSpreadYieldCurveRolldownFunction CURVE_ROLLDOWN>;

        $r22 = interfaceinvoke r4.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r23 = (com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve) $r22;

        $r24 = virtualinvoke $r21.<com.opengamma.analytics.financial.horizon.ConstantSpreadYieldCurveRolldownFunction: com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve rollDown(com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve,double)>($r23, d0);

        interfaceinvoke $r14.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r20, $r24);

        goto label7;

     label8:
        $r17 = new com.opengamma.analytics.financial.provider.description.interestrate.IssuerProviderDiscount;

        $r18 = virtualinvoke r2.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount: com.opengamma.analytics.financial.forex.method.FXMatrix getFxRates()>();

        specialinvoke $r17.<com.opengamma.analytics.financial.provider.description.interestrate.IssuerProviderDiscount: void <init>(java.util.Map,java.util.Map,java.util.Map,java.util.Map,com.opengamma.analytics.financial.forex.method.FXMatrix)>($r5, $r8, $r11, $r14, $r18);

        return $r17;
    }

    public volatile java.lang.Object rollDown(java.lang.Object, double)
    {
        com.opengamma.analytics.financial.horizon.CurveProviderConstantSpreadRolldownFunction r0;
        java.lang.Object r1;
        double d0;
        com.opengamma.analytics.financial.provider.description.interestrate.ParameterProviderInterface $r2, $r3;

        r0 := @this: com.opengamma.analytics.financial.horizon.CurveProviderConstantSpreadRolldownFunction;

        r1 := @parameter0: java.lang.Object;

        d0 := @parameter1: double;

        $r2 = (com.opengamma.analytics.financial.provider.description.interestrate.ParameterProviderInterface) r1;

        $r3 = virtualinvoke r0.<com.opengamma.analytics.financial.horizon.CurveProviderConstantSpreadRolldownFunction: com.opengamma.analytics.financial.provider.description.interestrate.ParameterProviderInterface rollDown(com.opengamma.analytics.financial.provider.description.interestrate.ParameterProviderInterface,double)>($r2, d0);

        return $r3;
    }

    static void <clinit>()
    {
        com.opengamma.analytics.financial.horizon.ConstantSpreadYieldCurveRolldownFunction $r0;
        com.opengamma.analytics.financial.horizon.CurveProviderConstantSpreadRolldownFunction $r1;

        $r0 = staticinvoke <com.opengamma.analytics.financial.horizon.ConstantSpreadYieldCurveRolldownFunction: com.opengamma.analytics.financial.horizon.ConstantSpreadYieldCurveRolldownFunction getInstance()>();

        <com.opengamma.analytics.financial.horizon.CurveProviderConstantSpreadRolldownFunction: com.opengamma.analytics.financial.horizon.ConstantSpreadYieldCurveRolldownFunction CURVE_ROLLDOWN> = $r0;

        $r1 = new com.opengamma.analytics.financial.horizon.CurveProviderConstantSpreadRolldownFunction;

        specialinvoke $r1.<com.opengamma.analytics.financial.horizon.CurveProviderConstantSpreadRolldownFunction: void <init>()>();

        <com.opengamma.analytics.financial.horizon.CurveProviderConstantSpreadRolldownFunction: com.opengamma.analytics.financial.horizon.CurveProviderConstantSpreadRolldownFunction INSTANCE> = $r1;

        return;
    }
}
