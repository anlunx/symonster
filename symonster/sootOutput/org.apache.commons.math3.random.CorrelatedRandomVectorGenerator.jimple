public class org.apache.commons.math3.random.CorrelatedRandomVectorGenerator extends java.lang.Object implements org.apache.commons.math3.random.RandomVectorGenerator
{
    private final double[] mean;
    private final org.apache.commons.math3.random.NormalizedRandomGenerator generator;
    private final double[] normalized;
    private final org.apache.commons.math3.linear.RealMatrix root;

    public void <init>(double[], org.apache.commons.math3.linear.RealMatrix, double, org.apache.commons.math3.random.NormalizedRandomGenerator)
    {
        org.apache.commons.math3.random.CorrelatedRandomVectorGenerator r0;
        double[] r1, $r6, $r9;
        org.apache.commons.math3.linear.RealMatrix r2, $r8;
        double d0;
        org.apache.commons.math3.random.NormalizedRandomGenerator r3;
        int i0, $i1, $i2, $i3;
        java.lang.Object $r5;
        org.apache.commons.math3.linear.RectangularCholeskyDecomposition $r7;
        org.apache.commons.math3.exception.DimensionMismatchException $r10;

        r0 := @this: org.apache.commons.math3.random.CorrelatedRandomVectorGenerator;

        r1 := @parameter0: double[];

        r2 := @parameter1: org.apache.commons.math3.linear.RealMatrix;

        d0 := @parameter2: double;

        r3 := @parameter3: org.apache.commons.math3.random.NormalizedRandomGenerator;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        i0 = interfaceinvoke r2.<org.apache.commons.math3.linear.RealMatrix: int getRowDimension()>();

        $i1 = lengthof r1;

        if $i1 == i0 goto label1;

        $r10 = new org.apache.commons.math3.exception.DimensionMismatchException;

        $i3 = lengthof r1;

        specialinvoke $r10.<org.apache.commons.math3.exception.DimensionMismatchException: void <init>(int,int)>($i3, i0);

        throw $r10;

     label1:
        $r5 = virtualinvoke r1.<java.lang.Object: java.lang.Object clone()>();

        $r6 = (double[]) $r5;

        r0.<org.apache.commons.math3.random.CorrelatedRandomVectorGenerator: double[] mean> = $r6;

        $r7 = new org.apache.commons.math3.linear.RectangularCholeskyDecomposition;

        specialinvoke $r7.<org.apache.commons.math3.linear.RectangularCholeskyDecomposition: void <init>(org.apache.commons.math3.linear.RealMatrix,double)>(r2, d0);

        $r8 = virtualinvoke $r7.<org.apache.commons.math3.linear.RectangularCholeskyDecomposition: org.apache.commons.math3.linear.RealMatrix getRootMatrix()>();

        r0.<org.apache.commons.math3.random.CorrelatedRandomVectorGenerator: org.apache.commons.math3.linear.RealMatrix root> = $r8;

        r0.<org.apache.commons.math3.random.CorrelatedRandomVectorGenerator: org.apache.commons.math3.random.NormalizedRandomGenerator generator> = r3;

        $i2 = virtualinvoke $r7.<org.apache.commons.math3.linear.RectangularCholeskyDecomposition: int getRank()>();

        $r9 = newarray (double)[$i2];

        r0.<org.apache.commons.math3.random.CorrelatedRandomVectorGenerator: double[] normalized> = $r9;

        return;
    }

    public void <init>(org.apache.commons.math3.linear.RealMatrix, double, org.apache.commons.math3.random.NormalizedRandomGenerator)
    {
        org.apache.commons.math3.random.CorrelatedRandomVectorGenerator r0;
        org.apache.commons.math3.linear.RealMatrix r1, $r5;
        double d0;
        org.apache.commons.math3.random.NormalizedRandomGenerator r2;
        int i0, $i1, i2;
        double[] $r3, $r6, $r7;
        org.apache.commons.math3.linear.RectangularCholeskyDecomposition $r4;

        r0 := @this: org.apache.commons.math3.random.CorrelatedRandomVectorGenerator;

        r1 := @parameter0: org.apache.commons.math3.linear.RealMatrix;

        d0 := @parameter1: double;

        r2 := @parameter2: org.apache.commons.math3.random.NormalizedRandomGenerator;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        i0 = interfaceinvoke r1.<org.apache.commons.math3.linear.RealMatrix: int getRowDimension()>();

        $r3 = newarray (double)[i0];

        r0.<org.apache.commons.math3.random.CorrelatedRandomVectorGenerator: double[] mean> = $r3;

        i2 = 0;

     label1:
        if i2 >= i0 goto label2;

        $r7 = r0.<org.apache.commons.math3.random.CorrelatedRandomVectorGenerator: double[] mean>;

        $r7[i2] = 0.0;

        i2 = i2 + 1;

        goto label1;

     label2:
        $r4 = new org.apache.commons.math3.linear.RectangularCholeskyDecomposition;

        specialinvoke $r4.<org.apache.commons.math3.linear.RectangularCholeskyDecomposition: void <init>(org.apache.commons.math3.linear.RealMatrix,double)>(r1, d0);

        $r5 = virtualinvoke $r4.<org.apache.commons.math3.linear.RectangularCholeskyDecomposition: org.apache.commons.math3.linear.RealMatrix getRootMatrix()>();

        r0.<org.apache.commons.math3.random.CorrelatedRandomVectorGenerator: org.apache.commons.math3.linear.RealMatrix root> = $r5;

        r0.<org.apache.commons.math3.random.CorrelatedRandomVectorGenerator: org.apache.commons.math3.random.NormalizedRandomGenerator generator> = r2;

        $i1 = virtualinvoke $r4.<org.apache.commons.math3.linear.RectangularCholeskyDecomposition: int getRank()>();

        $r6 = newarray (double)[$i1];

        r0.<org.apache.commons.math3.random.CorrelatedRandomVectorGenerator: double[] normalized> = $r6;

        return;
    }

    public org.apache.commons.math3.random.NormalizedRandomGenerator getGenerator()
    {
        org.apache.commons.math3.random.CorrelatedRandomVectorGenerator r0;
        org.apache.commons.math3.random.NormalizedRandomGenerator $r1;

        r0 := @this: org.apache.commons.math3.random.CorrelatedRandomVectorGenerator;

        $r1 = r0.<org.apache.commons.math3.random.CorrelatedRandomVectorGenerator: org.apache.commons.math3.random.NormalizedRandomGenerator generator>;

        return $r1;
    }

    public int getRank()
    {
        org.apache.commons.math3.random.CorrelatedRandomVectorGenerator r0;
        double[] $r1;
        int $i0;

        r0 := @this: org.apache.commons.math3.random.CorrelatedRandomVectorGenerator;

        $r1 = r0.<org.apache.commons.math3.random.CorrelatedRandomVectorGenerator: double[] normalized>;

        $i0 = lengthof $r1;

        return $i0;
    }

    public org.apache.commons.math3.linear.RealMatrix getRootMatrix()
    {
        org.apache.commons.math3.random.CorrelatedRandomVectorGenerator r0;
        org.apache.commons.math3.linear.RealMatrix $r1;

        r0 := @this: org.apache.commons.math3.random.CorrelatedRandomVectorGenerator;

        $r1 = r0.<org.apache.commons.math3.random.CorrelatedRandomVectorGenerator: org.apache.commons.math3.linear.RealMatrix root>;

        return $r1;
    }

    public double[] nextVector()
    {
        org.apache.commons.math3.random.CorrelatedRandomVectorGenerator r0;
        double[] $r1, $r2, $r3, $r6, $r8, r9;
        int $i0, $i1, $i2, $i3, i4, i5, i6;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6;
        org.apache.commons.math3.linear.RealMatrix $r4, $r5;
        org.apache.commons.math3.random.NormalizedRandomGenerator $r7;

        r0 := @this: org.apache.commons.math3.random.CorrelatedRandomVectorGenerator;

        i4 = 0;

     label1:
        $r1 = r0.<org.apache.commons.math3.random.CorrelatedRandomVectorGenerator: double[] normalized>;

        $i0 = lengthof $r1;

        if i4 >= $i0 goto label2;

        $r8 = r0.<org.apache.commons.math3.random.CorrelatedRandomVectorGenerator: double[] normalized>;

        $r7 = r0.<org.apache.commons.math3.random.CorrelatedRandomVectorGenerator: org.apache.commons.math3.random.NormalizedRandomGenerator generator>;

        $d6 = interfaceinvoke $r7.<org.apache.commons.math3.random.NormalizedRandomGenerator: double nextNormalizedDouble()>();

        $r8[i4] = $d6;

        i4 = i4 + 1;

        goto label1;

     label2:
        $r2 = r0.<org.apache.commons.math3.random.CorrelatedRandomVectorGenerator: double[] mean>;

        $i1 = lengthof $r2;

        r9 = newarray (double)[$i1];

        i5 = 0;

     label3:
        $i2 = lengthof r9;

        if i5 >= $i2 goto label6;

        $r3 = r0.<org.apache.commons.math3.random.CorrelatedRandomVectorGenerator: double[] mean>;

        $d0 = $r3[i5];

        r9[i5] = $d0;

        i6 = 0;

     label4:
        $r4 = r0.<org.apache.commons.math3.random.CorrelatedRandomVectorGenerator: org.apache.commons.math3.linear.RealMatrix root>;

        $i3 = interfaceinvoke $r4.<org.apache.commons.math3.linear.RealMatrix: int getColumnDimension()>();

        if i6 >= $i3 goto label5;

        $d1 = r9[i5];

        $r5 = r0.<org.apache.commons.math3.random.CorrelatedRandomVectorGenerator: org.apache.commons.math3.linear.RealMatrix root>;

        $d2 = interfaceinvoke $r5.<org.apache.commons.math3.linear.RealMatrix: double getEntry(int,int)>(i5, i6);

        $r6 = r0.<org.apache.commons.math3.random.CorrelatedRandomVectorGenerator: double[] normalized>;

        $d3 = $r6[i6];

        $d4 = $d2 * $d3;

        $d5 = $d1 + $d4;

        r9[i5] = $d5;

        i6 = i6 + 1;

        goto label4;

     label5:
        i5 = i5 + 1;

        goto label3;

     label6:
        return r9;
    }
}
