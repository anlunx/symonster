public abstract class org.apache.commons.math3.optimization.linear.AbstractLinearOptimizer extends java.lang.Object implements org.apache.commons.math3.optimization.linear.LinearOptimizer
{
    public static final int DEFAULT_MAX_ITERATIONS;
    private org.apache.commons.math3.optimization.linear.LinearObjectiveFunction function;
    private java.util.Collection linearConstraints;
    private org.apache.commons.math3.optimization.GoalType goal;
    private boolean nonNegative;
    private int maxIterations;
    private int iterations;

    protected void <init>()
    {
        org.apache.commons.math3.optimization.linear.AbstractLinearOptimizer r0;

        r0 := @this: org.apache.commons.math3.optimization.linear.AbstractLinearOptimizer;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        virtualinvoke r0.<org.apache.commons.math3.optimization.linear.AbstractLinearOptimizer: void setMaxIterations(int)>(100);

        return;
    }

    protected boolean restrictToNonNegative()
    {
        org.apache.commons.math3.optimization.linear.AbstractLinearOptimizer r0;
        boolean $z0;

        r0 := @this: org.apache.commons.math3.optimization.linear.AbstractLinearOptimizer;

        $z0 = r0.<org.apache.commons.math3.optimization.linear.AbstractLinearOptimizer: boolean nonNegative>;

        return $z0;
    }

    protected org.apache.commons.math3.optimization.GoalType getGoalType()
    {
        org.apache.commons.math3.optimization.linear.AbstractLinearOptimizer r0;
        org.apache.commons.math3.optimization.GoalType $r1;

        r0 := @this: org.apache.commons.math3.optimization.linear.AbstractLinearOptimizer;

        $r1 = r0.<org.apache.commons.math3.optimization.linear.AbstractLinearOptimizer: org.apache.commons.math3.optimization.GoalType goal>;

        return $r1;
    }

    protected org.apache.commons.math3.optimization.linear.LinearObjectiveFunction getFunction()
    {
        org.apache.commons.math3.optimization.linear.AbstractLinearOptimizer r0;
        org.apache.commons.math3.optimization.linear.LinearObjectiveFunction $r1;

        r0 := @this: org.apache.commons.math3.optimization.linear.AbstractLinearOptimizer;

        $r1 = r0.<org.apache.commons.math3.optimization.linear.AbstractLinearOptimizer: org.apache.commons.math3.optimization.linear.LinearObjectiveFunction function>;

        return $r1;
    }

    protected java.util.Collection getConstraints()
    {
        org.apache.commons.math3.optimization.linear.AbstractLinearOptimizer r0;
        java.util.Collection $r1, $r2;

        r0 := @this: org.apache.commons.math3.optimization.linear.AbstractLinearOptimizer;

        $r1 = r0.<org.apache.commons.math3.optimization.linear.AbstractLinearOptimizer: java.util.Collection linearConstraints>;

        $r2 = staticinvoke <java.util.Collections: java.util.Collection unmodifiableCollection(java.util.Collection)>($r1);

        return $r2;
    }

    public void setMaxIterations(int)
    {
        org.apache.commons.math3.optimization.linear.AbstractLinearOptimizer r0;
        int i0;

        r0 := @this: org.apache.commons.math3.optimization.linear.AbstractLinearOptimizer;

        i0 := @parameter0: int;

        r0.<org.apache.commons.math3.optimization.linear.AbstractLinearOptimizer: int maxIterations> = i0;

        return;
    }

    public int getMaxIterations()
    {
        org.apache.commons.math3.optimization.linear.AbstractLinearOptimizer r0;
        int $i0;

        r0 := @this: org.apache.commons.math3.optimization.linear.AbstractLinearOptimizer;

        $i0 = r0.<org.apache.commons.math3.optimization.linear.AbstractLinearOptimizer: int maxIterations>;

        return $i0;
    }

    public int getIterations()
    {
        org.apache.commons.math3.optimization.linear.AbstractLinearOptimizer r0;
        int $i0;

        r0 := @this: org.apache.commons.math3.optimization.linear.AbstractLinearOptimizer;

        $i0 = r0.<org.apache.commons.math3.optimization.linear.AbstractLinearOptimizer: int iterations>;

        return $i0;
    }

    protected void incrementIterationsCounter() throws org.apache.commons.math3.exception.MaxCountExceededException
    {
        org.apache.commons.math3.optimization.linear.AbstractLinearOptimizer r0;
        int $i0, $i1, $i2, $i3;
        org.apache.commons.math3.exception.MaxCountExceededException $r1;
        java.lang.Integer $r2;

        r0 := @this: org.apache.commons.math3.optimization.linear.AbstractLinearOptimizer;

        $i0 = r0.<org.apache.commons.math3.optimization.linear.AbstractLinearOptimizer: int iterations>;

        $i1 = $i0 + 1;

        r0.<org.apache.commons.math3.optimization.linear.AbstractLinearOptimizer: int iterations> = $i1;

        $i2 = r0.<org.apache.commons.math3.optimization.linear.AbstractLinearOptimizer: int maxIterations>;

        if $i1 <= $i2 goto label1;

        $r1 = new org.apache.commons.math3.exception.MaxCountExceededException;

        $i3 = r0.<org.apache.commons.math3.optimization.linear.AbstractLinearOptimizer: int maxIterations>;

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3);

        specialinvoke $r1.<org.apache.commons.math3.exception.MaxCountExceededException: void <init>(java.lang.Number)>($r2);

        throw $r1;

     label1:
        return;
    }

    public org.apache.commons.math3.optimization.PointValuePair optimize(org.apache.commons.math3.optimization.linear.LinearObjectiveFunction, java.util.Collection, org.apache.commons.math3.optimization.GoalType, boolean) throws org.apache.commons.math3.exception.MathIllegalStateException
    {
        org.apache.commons.math3.optimization.linear.AbstractLinearOptimizer r0;
        org.apache.commons.math3.optimization.linear.LinearObjectiveFunction r1;
        java.util.Collection r2;
        org.apache.commons.math3.optimization.GoalType r3;
        boolean z0;
        org.apache.commons.math3.optimization.PointValuePair $r4;

        r0 := @this: org.apache.commons.math3.optimization.linear.AbstractLinearOptimizer;

        r1 := @parameter0: org.apache.commons.math3.optimization.linear.LinearObjectiveFunction;

        r2 := @parameter1: java.util.Collection;

        r3 := @parameter2: org.apache.commons.math3.optimization.GoalType;

        z0 := @parameter3: boolean;

        r0.<org.apache.commons.math3.optimization.linear.AbstractLinearOptimizer: org.apache.commons.math3.optimization.linear.LinearObjectiveFunction function> = r1;

        r0.<org.apache.commons.math3.optimization.linear.AbstractLinearOptimizer: java.util.Collection linearConstraints> = r2;

        r0.<org.apache.commons.math3.optimization.linear.AbstractLinearOptimizer: org.apache.commons.math3.optimization.GoalType goal> = r3;

        r0.<org.apache.commons.math3.optimization.linear.AbstractLinearOptimizer: boolean nonNegative> = z0;

        r0.<org.apache.commons.math3.optimization.linear.AbstractLinearOptimizer: int iterations> = 0;

        $r4 = virtualinvoke r0.<org.apache.commons.math3.optimization.linear.AbstractLinearOptimizer: org.apache.commons.math3.optimization.PointValuePair doOptimize()>();

        return $r4;
    }

    protected abstract org.apache.commons.math3.optimization.PointValuePair doOptimize() throws org.apache.commons.math3.exception.MathIllegalStateException;

    public static void <clinit>()
    {
        <org.apache.commons.math3.optimization.linear.AbstractLinearOptimizer: int DEFAULT_MAX_ITERATIONS> = 100;

        return;
    }
}
