class org.apache.commons.math.analysis.BinaryFunction$8 extends org.apache.commons.math.analysis.ComposableFunction
{
    final double val$fixedY;
    final org.apache.commons.math.analysis.BinaryFunction this$0;

    void <init>(org.apache.commons.math.analysis.BinaryFunction, double)
    {
        org.apache.commons.math.analysis.BinaryFunction$8 r0;
        org.apache.commons.math.analysis.BinaryFunction r1;
        double d0;

        r0 := @this: org.apache.commons.math.analysis.BinaryFunction$8;

        r1 := @parameter0: org.apache.commons.math.analysis.BinaryFunction;

        d0 := @parameter1: double;

        r0.<org.apache.commons.math.analysis.BinaryFunction$8: org.apache.commons.math.analysis.BinaryFunction this$0> = r1;

        r0.<org.apache.commons.math.analysis.BinaryFunction$8: double val$fixedY> = d0;

        specialinvoke r0.<org.apache.commons.math.analysis.ComposableFunction: void <init>()>();

        return;
    }

    public double value(double) throws org.apache.commons.math.FunctionEvaluationException
    {
        org.apache.commons.math.analysis.BinaryFunction$8 r0;
        double d0, $d1, $d2;
        org.apache.commons.math.analysis.BinaryFunction $r1;

        r0 := @this: org.apache.commons.math.analysis.BinaryFunction$8;

        d0 := @parameter0: double;

        $r1 = r0.<org.apache.commons.math.analysis.BinaryFunction$8: org.apache.commons.math.analysis.BinaryFunction this$0>;

        $d1 = r0.<org.apache.commons.math.analysis.BinaryFunction$8: double val$fixedY>;

        $d2 = virtualinvoke $r1.<org.apache.commons.math.analysis.BinaryFunction: double value(double,double)>(d0, $d1);

        return $d2;
    }
}
