public class com.opengamma.analytics.financial.credit.isdastandardmodel.FastCreditCurveBuilder extends com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantCreditCurveBuilder
{
    private static final double HALFDAY;
    private static final com.opengamma.analytics.math.rootfinding.BracketRoot BRACKER;
    private static final com.opengamma.analytics.math.rootfinding.RealSingleRootFinder ROOTFINDER;
    private final double _omega;

    public void <init>()
    {
        com.opengamma.analytics.financial.credit.isdastandardmodel.FastCreditCurveBuilder r0;

        r0 := @this: com.opengamma.analytics.financial.credit.isdastandardmodel.FastCreditCurveBuilder;

        specialinvoke r0.<com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantCreditCurveBuilder: void <init>()>();

        r0.<com.opengamma.analytics.financial.credit.isdastandardmodel.FastCreditCurveBuilder: double _omega> = 0.0013698630136986301;

        return;
    }

    public void <init>(com.opengamma.analytics.financial.credit.isdastandardmodel.AccrualOnDefaultFormulae)
    {
        com.opengamma.analytics.financial.credit.isdastandardmodel.FastCreditCurveBuilder r0;
        com.opengamma.analytics.financial.credit.isdastandardmodel.AccrualOnDefaultFormulae r1, $r2;

        r0 := @this: com.opengamma.analytics.financial.credit.isdastandardmodel.FastCreditCurveBuilder;

        r1 := @parameter0: com.opengamma.analytics.financial.credit.isdastandardmodel.AccrualOnDefaultFormulae;

        specialinvoke r0.<com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantCreditCurveBuilder: void <init>(com.opengamma.analytics.financial.credit.isdastandardmodel.AccrualOnDefaultFormulae)>(r1);

        $r2 = <com.opengamma.analytics.financial.credit.isdastandardmodel.AccrualOnDefaultFormulae: com.opengamma.analytics.financial.credit.isdastandardmodel.AccrualOnDefaultFormulae OrignalISDA>;

        if r1 != $r2 goto label1;

        r0.<com.opengamma.analytics.financial.credit.isdastandardmodel.FastCreditCurveBuilder: double _omega> = 0.0013698630136986301;

        goto label2;

     label1:
        r0.<com.opengamma.analytics.financial.credit.isdastandardmodel.FastCreditCurveBuilder: double _omega> = 0.0;

     label2:
        return;
    }

    public void <init>(com.opengamma.analytics.financial.credit.isdastandardmodel.AccrualOnDefaultFormulae, com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantCreditCurveBuilder$ArbitrageHandling)
    {
        com.opengamma.analytics.financial.credit.isdastandardmodel.FastCreditCurveBuilder r0;
        com.opengamma.analytics.financial.credit.isdastandardmodel.AccrualOnDefaultFormulae r1, $r3;
        com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantCreditCurveBuilder$ArbitrageHandling r2;

        r0 := @this: com.opengamma.analytics.financial.credit.isdastandardmodel.FastCreditCurveBuilder;

        r1 := @parameter0: com.opengamma.analytics.financial.credit.isdastandardmodel.AccrualOnDefaultFormulae;

        r2 := @parameter1: com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantCreditCurveBuilder$ArbitrageHandling;

        specialinvoke r0.<com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantCreditCurveBuilder: void <init>(com.opengamma.analytics.financial.credit.isdastandardmodel.AccrualOnDefaultFormulae,com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantCreditCurveBuilder$ArbitrageHandling)>(r1, r2);

        $r3 = <com.opengamma.analytics.financial.credit.isdastandardmodel.AccrualOnDefaultFormulae: com.opengamma.analytics.financial.credit.isdastandardmodel.AccrualOnDefaultFormulae OrignalISDA>;

        if r1 != $r3 goto label1;

        r0.<com.opengamma.analytics.financial.credit.isdastandardmodel.FastCreditCurveBuilder: double _omega> = 0.0013698630136986301;

        goto label2;

     label1:
        r0.<com.opengamma.analytics.financial.credit.isdastandardmodel.FastCreditCurveBuilder: double _omega> = 0.0;

     label2:
        return;
    }

    public com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantCreditCurve calibrateCreditCurve(com.opengamma.analytics.financial.credit.isdastandardmodel.CDSAnalytic[], double[], com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantYieldCurve, double[])
    {
        com.opengamma.analytics.financial.credit.isdastandardmodel.FastCreditCurveBuilder r0;
        com.opengamma.analytics.financial.credit.isdastandardmodel.CDSAnalytic[] r1;
        double[] r2, r4, r5, r77, r79, r83, r84;
        com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantYieldCurve r3;
        int i0, $i1, $i2, $i3, $i4, $i6, $i8, $i12, $i14, $i16, i17, i18, i19;
        double d0, d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21, $d22, $d23, $d24, $d25, $d26, $d27, $d28, $d29, $d30, $d31, $d32, $d33, $d34, $d35, $d36, $d37, $d38, $d39, $d40, $d41, $d42, $d43, $d44, $d45, $d46, $d47, $d48, $d49, $d50, $d51, $d52, $d53, d54, d55, $d56, d57, d58;
        com.opengamma.analytics.math.function.Function1D r7;
        com.opengamma.analytics.financial.credit.isdastandardmodel.CDSAnalytic $r12, $r15, $r67, $r68, $r69, $r70, $r71;
        com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantCreditCurve $r13, r78;
        com.opengamma.analytics.financial.credit.isdastandardmodel.FastCreditCurveBuilder$Pricer $r14;
        int[] $r16;
        com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantCreditCurveBuilder$ArbitrageHandling $r17, $r64;
        com.opengamma.analytics.math.rootfinding.BracketRoot $r18, $r25, $r33;
        byte $b5, $b7, $b9, $b10, $b11, $b13, $b15;
        com.opengamma.analytics.math.rootfinding.RealSingleRootFinder $r19, $r22, $r26, $r34;
        java.lang.Double $r20, $r21, $r23, $r24, $r27, $r28, $r29, $r30, $r32, $r35, $r36, $r37, $r38, $r40, $r73, $r75, $r80;
        java.lang.Object $r31, $r39, $r74;
        java.lang.StringBuilder $r41, $r42, $r43, $r44, $r45, $r46, $r47, $r48, $r54, $r55, $r56, $r57, $r58, $r62, $r63, $r65;
        java.lang.String $r49, $r53, $r59, $r66;
        java.lang.IllegalArgumentException $r52, $r61;
        com.opengamma.analytics.math.MathException $r72, $r76;
        boolean $z0, $z1, $z2, $z3;

        r0 := @this: com.opengamma.analytics.financial.credit.isdastandardmodel.FastCreditCurveBuilder;

        r1 := @parameter0: com.opengamma.analytics.financial.credit.isdastandardmodel.CDSAnalytic[];

        r2 := @parameter1: double[];

        r3 := @parameter2: com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantYieldCurve;

        r4 := @parameter3: double[];

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object[] noNulls(java.lang.Object[],java.lang.String)>(r1, "null CDSs");

        staticinvoke <com.opengamma.util.ArgumentChecker: double[] notEmpty(double[],java.lang.String)>(r2, "empty fractionalSpreads");

        staticinvoke <com.opengamma.util.ArgumentChecker: double[] notEmpty(double[],java.lang.String)>(r4, "empty pointsUpfront");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r3, "null yieldCurve");

        i0 = lengthof r1;

        $i1 = lengthof r2;

        if i0 != $i1 goto label01;

        $z0 = 1;

        goto label02;

     label01:
        $z0 = 0;

     label02:
        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z0, "Number of CDSs does not match number of spreads");

        $i2 = lengthof r4;

        if i0 != $i2 goto label03;

        $z1 = 1;

        goto label04;

     label03:
        $z1 = 0;

     label04:
        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z1, "Number of CDSs does not match number of pointsUpfront");

        $r12 = r1[0];

        d0 = virtualinvoke $r12.<com.opengamma.analytics.financial.credit.isdastandardmodel.CDSAnalytic: double getEffectiveProtectionStart()>();

        i17 = 1;

     label05:
        if i17 >= i0 goto label10;

        $r69 = r1[i17];

        $d46 = virtualinvoke $r69.<com.opengamma.analytics.financial.credit.isdastandardmodel.CDSAnalytic: double getEffectiveProtectionStart()>();

        $b11 = d0 cmpl $d46;

        if $b11 != 0 goto label06;

        $z2 = 1;

        goto label07;

     label06:
        $z2 = 0;

     label07:
        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z2, "all CDSs must has same protection start");

        $r70 = r1[i17];

        $d47 = virtualinvoke $r70.<com.opengamma.analytics.financial.credit.isdastandardmodel.CDSAnalytic: double getProtectionEnd()>();

        $i12 = i17 - 1;

        $r71 = r1[$i12];

        $d48 = virtualinvoke $r71.<com.opengamma.analytics.financial.credit.isdastandardmodel.CDSAnalytic: double getProtectionEnd()>();

        $b13 = $d47 cmpl $d48;

        if $b13 <= 0 goto label08;

        $z3 = 1;

        goto label09;

     label08:
        $z3 = 0;

     label09:
        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z3, "protection end must be ascending");

        i17 = i17 + 1;

        goto label05;

     label10:
        r77 = newarray (double)[i0];

        r5 = newarray (double)[i0];

        i18 = 0;

     label11:
        if i18 >= i0 goto label12;

        $r67 = r1[i18];

        $d38 = virtualinvoke $r67.<com.opengamma.analytics.financial.credit.isdastandardmodel.CDSAnalytic: double getProtectionEnd()>();

        r5[i18] = $d38;

        $d42 = r2[i18];

        $d40 = r4[i18];

        $d39 = r5[i18];

        $d41 = $d40 / $d39;

        $d43 = $d42 + $d41;

        $r68 = r1[i18];

        $d44 = virtualinvoke $r68.<com.opengamma.analytics.financial.credit.isdastandardmodel.CDSAnalytic: double getLGD()>();

        $d45 = $d43 / $d44;

        r77[i18] = $d45;

        i18 = i18 + 1;

        goto label11;

     label12:
        $r13 = new com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantCreditCurve;

        specialinvoke $r13.<com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantCreditCurve: void <init>(double[],double[])>(r5, r77);

        r78 = $r13;

        i19 = 0;

     label13:
        if i19 >= i0 goto label33;

        $r14 = new com.opengamma.analytics.financial.credit.isdastandardmodel.FastCreditCurveBuilder$Pricer;

        $r15 = r1[i19];

        $d3 = r2[i19];

        $d2 = r4[i19];

        specialinvoke $r14.<com.opengamma.analytics.financial.credit.isdastandardmodel.FastCreditCurveBuilder$Pricer: void <init>(com.opengamma.analytics.financial.credit.isdastandardmodel.FastCreditCurveBuilder,com.opengamma.analytics.financial.credit.isdastandardmodel.CDSAnalytic,com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantYieldCurve,double[],double,double)>(r0, $r15, r3, r5, $d3, $d2);

        r7 = virtualinvoke $r14.<com.opengamma.analytics.financial.credit.isdastandardmodel.FastCreditCurveBuilder$Pricer: com.opengamma.analytics.math.function.Function1D getPointFunction(int,com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantCreditCurve)>(i19, r78);

        $r16 = <com.opengamma.analytics.financial.credit.isdastandardmodel.FastCreditCurveBuilder$1: int[] $SwitchMap$com$opengamma$analytics$financial$credit$isdastandardmodel$ISDACompliantCreditCurveBuilder$ArbitrageHandling>;

        $r17 = virtualinvoke r0.<com.opengamma.analytics.financial.credit.isdastandardmodel.FastCreditCurveBuilder: com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantCreditCurveBuilder$ArbitrageHandling getArbHanding()>();

        $i3 = virtualinvoke $r17.<com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantCreditCurveBuilder$ArbitrageHandling: int ordinal()>();

        $i4 = $r16[$i3];

        tableswitch($i4)
        {
            case 1: goto label14;
            case 2: goto label21;
            case 3: goto label27;
            default: goto label31;
        };

     label14:
        $r18 = <com.opengamma.analytics.financial.credit.isdastandardmodel.FastCreditCurveBuilder: com.opengamma.analytics.math.rootfinding.BracketRoot BRACKER>;

        $d4 = r77[i19];

        $d7 = 0.8 * $d4;

        $d5 = r77[i19];

        $d6 = 1.25 * $d5;

        r79 = virtualinvoke $r18.<com.opengamma.analytics.math.rootfinding.BracketRoot: double[] getBracketedPoints(com.opengamma.analytics.math.function.Function1D,double,double,double,double)>(r7, $d7, $d6, #-Infinity, #Infinity);

        $d9 = r79[0];

        $d8 = r79[1];

        $b5 = $d9 cmpl $d8;

        if $b5 <= 0 goto label15;

        $r22 = <com.opengamma.analytics.financial.credit.isdastandardmodel.FastCreditCurveBuilder: com.opengamma.analytics.math.rootfinding.RealSingleRootFinder ROOTFINDER>;

        $d12 = r79[1];

        $r23 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d12);

        $d13 = r79[0];

        $r24 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d13);

        $r80 = virtualinvoke $r22.<com.opengamma.analytics.math.rootfinding.RealSingleRootFinder: java.lang.Double getRoot(com.opengamma.analytics.math.function.Function1D,java.lang.Double,java.lang.Double)>(r7, $r23, $r24);

        goto label16;

     label15:
        $r19 = <com.opengamma.analytics.financial.credit.isdastandardmodel.FastCreditCurveBuilder: com.opengamma.analytics.math.rootfinding.RealSingleRootFinder ROOTFINDER>;

        $d10 = r79[0];

        $r20 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d10);

        $d11 = r79[1];

        $r21 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d11);

        $r80 = virtualinvoke $r19.<com.opengamma.analytics.math.rootfinding.RealSingleRootFinder: java.lang.Double getRoot(com.opengamma.analytics.math.function.Function1D,java.lang.Double,java.lang.Double)>(r7, $r20, $r21);

     label16:
        d1 = virtualinvoke $r80.<java.lang.Double: double doubleValue()>();

        r78 = virtualinvoke r78.<com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantCreditCurve: com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantCreditCurve withRate(double,int)>(d1, i19);

     label17:
        goto label32;

     label18:
        $r72 := @caughtexception;

        $i14 = i19 - 1;

        $d49 = virtualinvoke r78.<com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantCreditCurve: double getZeroRateAtIndex(int)>($i14);

        $r73 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d49);

        $r74 = virtualinvoke r7.<com.opengamma.analytics.math.function.Function1D: java.lang.Object evaluate(java.lang.Object)>($r73);

        $r75 = (java.lang.Double) $r74;

        $d50 = virtualinvoke $r75.<java.lang.Double: double doubleValue()>();

        $d51 = staticinvoke <java.lang.Math: double abs(double)>($d50);

        $b15 = $d51 cmpg 1.0E-12;

        if $b15 >= 0 goto label19;

        $i16 = i19 - 1;

        $d52 = virtualinvoke r78.<com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantCreditCurve: double getZeroRateAtIndex(int)>($i16);

        r78 = virtualinvoke r78.<com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantCreditCurve: com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantCreditCurve withRate(double,int)>($d52, i19);

        goto label20;

     label19:
        $r76 = new com.opengamma.analytics.math.MathException;

        specialinvoke $r76.<com.opengamma.analytics.math.MathException: void <init>(java.lang.Throwable)>($r72);

        throw $r76;

     label20:
        goto label32;

     label21:
        if i19 != 0 goto label22;

        $d53 = 0.0;

        goto label23;

     label22:
        $i8 = i19 - 1;

        $d24 = virtualinvoke r78.<com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantCreditCurve: double getRTAtIndex(int)>($i8);

        $d25 = virtualinvoke r78.<com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantCreditCurve: double getTimeAtIndex(int)>(i19);

        $d53 = $d24 / $d25;

     label23:
        d54 = $d53;

        if i19 <= 0 goto label26;

        $r38 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d53);

        $r39 = virtualinvoke r7.<com.opengamma.analytics.math.function.Function1D: java.lang.Object evaluate(java.lang.Object)>($r38);

        $r40 = (java.lang.Double) $r39;

        $d33 = virtualinvoke $r40.<java.lang.Double: double doubleValue()>();

        $b9 = $d33 cmpl 0.0;

        if $b9 <= 0 goto label26;

        $r41 = new java.lang.StringBuilder;

        specialinvoke $r41.<java.lang.StringBuilder: void <init>()>();

        $d34 = r4[i19];

        $b10 = $d34 cmpl 0.0;

        if $b10 != 0 goto label24;

        $r54 = new java.lang.StringBuilder;

        specialinvoke $r54.<java.lang.StringBuilder: void <init>()>();

        $r55 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("The par spread of ");

        $d37 = r2[i19];

        $r56 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d37);

        $r57 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" at index ");

        $r58 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i19);

        $r59 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r59);

        goto label25;

     label24:
        $r42 = new java.lang.StringBuilder;

        specialinvoke $r42.<java.lang.StringBuilder: void <init>()>();

        $r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("The premium of ");

        $d35 = r2[i19];

        $r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d35);

        $r45 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("and points up-front of ");

        $d36 = r4[i19];

        $r46 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d36);

        $r47 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" at index ");

        $r48 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i19);

        $r49 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r49);

     label25:
        virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is an arbitrage; cannot fit a curve with positive forward hazard rate. ");

        $r52 = new java.lang.IllegalArgumentException;

        $r53 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r52.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r53);

        throw $r52;

     label26:
        $d26 = r77[i19];

        $d27 = staticinvoke <java.lang.Math: double max(double,double)>(d54, $d26);

        r77[i19] = $d27;

        $r33 = <com.opengamma.analytics.financial.credit.isdastandardmodel.FastCreditCurveBuilder: com.opengamma.analytics.math.rootfinding.BracketRoot BRACKER>;

        $d30 = r77[i19];

        $d28 = r77[i19];

        $d29 = 1.2 * $d28;

        r83 = virtualinvoke $r33.<com.opengamma.analytics.math.rootfinding.BracketRoot: double[] getBracketedPoints(com.opengamma.analytics.math.function.Function1D,double,double,double,double)>(r7, $d30, $d29, d54, #Infinity);

        $r34 = <com.opengamma.analytics.financial.credit.isdastandardmodel.FastCreditCurveBuilder: com.opengamma.analytics.math.rootfinding.RealSingleRootFinder ROOTFINDER>;

        $d31 = r83[0];

        $r35 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d31);

        $d32 = r83[1];

        $r36 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d32);

        $r37 = virtualinvoke $r34.<com.opengamma.analytics.math.rootfinding.RealSingleRootFinder: java.lang.Double getRoot(com.opengamma.analytics.math.function.Function1D,java.lang.Double,java.lang.Double)>(r7, $r35, $r36);

        d55 = virtualinvoke $r37.<java.lang.Double: double doubleValue()>();

        r78 = virtualinvoke r78.<com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantCreditCurve: com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantCreditCurve withRate(double,int)>(d55, i19);

        goto label32;

     label27:
        if i19 != 0 goto label28;

        $d56 = 0.0;

        goto label29;

     label28:
        $i6 = i19 - 1;

        $d14 = virtualinvoke r78.<com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantCreditCurve: double getRTAtIndex(int)>($i6);

        $d15 = virtualinvoke r78.<com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantCreditCurve: double getTimeAtIndex(int)>(i19);

        $d56 = $d14 / $d15;

     label29:
        d57 = $d56;

        if i19 <= 0 goto label30;

        $r30 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d56);

        $r31 = virtualinvoke r7.<com.opengamma.analytics.math.function.Function1D: java.lang.Object evaluate(java.lang.Object)>($r30);

        $r32 = (java.lang.Double) $r31;

        $d23 = virtualinvoke $r32.<java.lang.Double: double doubleValue()>();

        $b7 = $d23 cmpl 0.0;

        if $b7 <= 0 goto label30;

        r78 = virtualinvoke r78.<com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantCreditCurve: com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantCreditCurve withRate(double,int)>($d56, i19);

        goto label32;

     label30:
        $d16 = r77[i19];

        $d17 = staticinvoke <java.lang.Math: double max(double,double)>(d57, $d16);

        r77[i19] = $d17;

        $r25 = <com.opengamma.analytics.financial.credit.isdastandardmodel.FastCreditCurveBuilder: com.opengamma.analytics.math.rootfinding.BracketRoot BRACKER>;

        $d20 = r77[i19];

        $d18 = r77[i19];

        $d19 = 1.2 * $d18;

        r84 = virtualinvoke $r25.<com.opengamma.analytics.math.rootfinding.BracketRoot: double[] getBracketedPoints(com.opengamma.analytics.math.function.Function1D,double,double,double,double)>(r7, $d20, $d19, d57, #Infinity);

        $r26 = <com.opengamma.analytics.financial.credit.isdastandardmodel.FastCreditCurveBuilder: com.opengamma.analytics.math.rootfinding.RealSingleRootFinder ROOTFINDER>;

        $d21 = r84[0];

        $r27 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d21);

        $d22 = r84[1];

        $r28 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d22);

        $r29 = virtualinvoke $r26.<com.opengamma.analytics.math.rootfinding.RealSingleRootFinder: java.lang.Double getRoot(com.opengamma.analytics.math.function.Function1D,java.lang.Double,java.lang.Double)>(r7, $r27, $r28);

        d58 = virtualinvoke $r29.<java.lang.Double: double doubleValue()>();

        r78 = virtualinvoke r78.<com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantCreditCurve: com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantCreditCurve withRate(double,int)>(d58, i19);

        goto label32;

     label31:
        $r61 = new java.lang.IllegalArgumentException;

        $r62 = new java.lang.StringBuilder;

        specialinvoke $r62.<java.lang.StringBuilder: void <init>()>();

        $r63 = virtualinvoke $r62.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("unknow case ");

        $r64 = virtualinvoke r0.<com.opengamma.analytics.financial.credit.isdastandardmodel.FastCreditCurveBuilder: com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantCreditCurveBuilder$ArbitrageHandling getArbHanding()>();

        $r65 = virtualinvoke $r63.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r64);

        $r66 = virtualinvoke $r65.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r61.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r66);

        throw $r61;

     label32:
        i19 = i19 + 1;

        goto label13;

     label33:
        return r78;

        catch com.opengamma.analytics.math.MathException from label14 to label17 with label18;
    }

    static double access$200(com.opengamma.analytics.financial.credit.isdastandardmodel.FastCreditCurveBuilder)
    {
        com.opengamma.analytics.financial.credit.isdastandardmodel.FastCreditCurveBuilder r0;
        double $d0;

        r0 := @parameter0: com.opengamma.analytics.financial.credit.isdastandardmodel.FastCreditCurveBuilder;

        $d0 = r0.<com.opengamma.analytics.financial.credit.isdastandardmodel.FastCreditCurveBuilder: double _omega>;

        return $d0;
    }

    static void <clinit>()
    {
        com.opengamma.analytics.math.rootfinding.BracketRoot $r0;
        com.opengamma.analytics.math.rootfinding.BrentSingleRootFinder $r1;

        <com.opengamma.analytics.financial.credit.isdastandardmodel.FastCreditCurveBuilder: double HALFDAY> = 0.0013698630136986301;

        $r0 = new com.opengamma.analytics.math.rootfinding.BracketRoot;

        specialinvoke $r0.<com.opengamma.analytics.math.rootfinding.BracketRoot: void <init>()>();

        <com.opengamma.analytics.financial.credit.isdastandardmodel.FastCreditCurveBuilder: com.opengamma.analytics.math.rootfinding.BracketRoot BRACKER> = $r0;

        $r1 = new com.opengamma.analytics.math.rootfinding.BrentSingleRootFinder;

        specialinvoke $r1.<com.opengamma.analytics.math.rootfinding.BrentSingleRootFinder: void <init>()>();

        <com.opengamma.analytics.financial.credit.isdastandardmodel.FastCreditCurveBuilder: com.opengamma.analytics.math.rootfinding.RealSingleRootFinder ROOTFINDER> = $r1;

        return;
    }
}
