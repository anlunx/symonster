public class com.opengamma.analytics.financial.forex.method.FXVolatilityUtils extends java.lang.Object
{

    public void <init>()
    {
        com.opengamma.analytics.financial.forex.method.FXVolatilityUtils r0;

        r0 := @this: com.opengamma.analytics.financial.forex.method.FXVolatilityUtils;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static double getVolatility(com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle, com.opengamma.util.money.Currency, com.opengamma.util.money.Currency, double, double, double)
    {
        com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle r0;
        com.opengamma.util.money.Currency r1, r2;
        double d0, d1, d2, $d3, $d4, $d5, $d6;
        com.opengamma.util.tuple.Pair r3;
        com.opengamma.analytics.financial.model.volatility.surface.SmileDeltaTermStructureParametersStrikeInterpolation r4;
        com.opengamma.analytics.financial.model.volatility.VolatilityModel $r8;
        java.lang.Object $r9, $r10, $r22, $r23;
        java.lang.IllegalArgumentException $r11;
        java.lang.StringBuilder $r12, $r13, $r14, $r15, $r16, $r17, $r20;
        java.util.Map $r18;
        java.util.Collection $r19;
        java.lang.String $r21;

        r0 := @parameter0: com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle;

        r1 := @parameter1: com.opengamma.util.money.Currency;

        r2 := @parameter2: com.opengamma.util.money.Currency;

        d0 := @parameter3: double;

        d1 := @parameter4: double;

        d2 := @parameter5: double;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "ccy1");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, "ccy2");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r0, "data");

        r3 = virtualinvoke r0.<com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle: com.opengamma.util.tuple.Pair getCurrencyPair()>();

        $r8 = virtualinvoke r0.<com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle: com.opengamma.analytics.financial.model.volatility.VolatilityModel getVolatilityModel()>();

        r4 = (com.opengamma.analytics.financial.model.volatility.surface.SmileDeltaTermStructureParametersStrikeInterpolation) $r8;

        $r9 = virtualinvoke r3.<com.opengamma.util.tuple.Pair: java.lang.Object getFirst()>();

        if r1 != $r9 goto label1;

        $r23 = virtualinvoke r3.<com.opengamma.util.tuple.Pair: java.lang.Object getSecond()>();

        if r2 != $r23 goto label1;

        $d6 = virtualinvoke r4.<com.opengamma.analytics.financial.model.volatility.surface.SmileDeltaTermStructureParametersStrikeInterpolation: double getVolatility(double,double,double)>(d0, d1, d2);

        return $d6;

     label1:
        $r10 = virtualinvoke r3.<com.opengamma.util.tuple.Pair: java.lang.Object getFirst()>();

        if r2 != $r10 goto label2;

        $r22 = virtualinvoke r3.<com.opengamma.util.tuple.Pair: java.lang.Object getSecond()>();

        if r1 != $r22 goto label2;

        $d4 = 1.0 / d1;

        $d3 = 1.0 / d2;

        $d5 = virtualinvoke r4.<com.opengamma.analytics.financial.model.volatility.surface.SmileDeltaTermStructureParametersStrikeInterpolation: double getVolatility(double,double,double)>(d0, $d4, $d3);

        return $d5;

     label2:
        $r11 = new java.lang.IllegalArgumentException;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Currencies not compatible with smile data; asked for ");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" and ");

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", have ");

        $r18 = virtualinvoke r0.<com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle: java.util.Map getCurrencyMap()>();

        $r19 = interfaceinvoke $r18.<java.util.Map: java.util.Collection values()>();

        $r20 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r19);

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r11.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r21);

        throw $r11;
    }

    public static com.opengamma.analytics.financial.model.volatility.VolatilityAndBucketedSensitivities getVolatilityAndSensitivities(com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle, com.opengamma.util.money.Currency, com.opengamma.util.money.Currency, double, double, double)
    {
        com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle r0;
        com.opengamma.util.money.Currency r1, r2;
        double d0, d1, d2, $d3, $d4;
        com.opengamma.util.tuple.Pair r3;
        com.opengamma.analytics.financial.model.volatility.surface.SmileDeltaTermStructureParametersStrikeInterpolation r4;
        com.opengamma.analytics.financial.model.volatility.VolatilityModel $r8;
        java.lang.Object $r9, $r10, $r22, $r24;
        java.lang.IllegalArgumentException $r11;
        java.lang.StringBuilder $r12, $r13, $r14, $r15, $r16, $r17, $r20;
        java.util.Map $r18;
        java.util.Collection $r19;
        java.lang.String $r21;
        com.opengamma.analytics.financial.model.volatility.VolatilityAndBucketedSensitivities $r23, $r25;

        r0 := @parameter0: com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle;

        r1 := @parameter1: com.opengamma.util.money.Currency;

        r2 := @parameter2: com.opengamma.util.money.Currency;

        d0 := @parameter3: double;

        d1 := @parameter4: double;

        d2 := @parameter5: double;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "ccy1");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, "ccy2");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r0, "data");

        r3 = virtualinvoke r0.<com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle: com.opengamma.util.tuple.Pair getCurrencyPair()>();

        $r8 = virtualinvoke r0.<com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle: com.opengamma.analytics.financial.model.volatility.VolatilityModel getVolatilityModel()>();

        r4 = (com.opengamma.analytics.financial.model.volatility.surface.SmileDeltaTermStructureParametersStrikeInterpolation) $r8;

        $r9 = virtualinvoke r3.<com.opengamma.util.tuple.Pair: java.lang.Object getFirst()>();

        if r1 != $r9 goto label1;

        $r24 = virtualinvoke r3.<com.opengamma.util.tuple.Pair: java.lang.Object getSecond()>();

        if r2 != $r24 goto label1;

        $r25 = virtualinvoke r4.<com.opengamma.analytics.financial.model.volatility.surface.SmileDeltaTermStructureParametersStrikeInterpolation: com.opengamma.analytics.financial.model.volatility.VolatilityAndBucketedSensitivities getVolatilityAndSensitivities(double,double,double)>(d0, d1, d2);

        return $r25;

     label1:
        $r10 = virtualinvoke r3.<com.opengamma.util.tuple.Pair: java.lang.Object getFirst()>();

        if r2 != $r10 goto label2;

        $r22 = virtualinvoke r3.<com.opengamma.util.tuple.Pair: java.lang.Object getSecond()>();

        if r1 != $r22 goto label2;

        $d4 = 1.0 / d1;

        $d3 = 1.0 / d2;

        $r23 = virtualinvoke r4.<com.opengamma.analytics.financial.model.volatility.surface.SmileDeltaTermStructureParametersStrikeInterpolation: com.opengamma.analytics.financial.model.volatility.VolatilityAndBucketedSensitivities getVolatilityAndSensitivities(double,double,double)>(d0, $d4, $d3);

        return $r23;

     label2:
        $r11 = new java.lang.IllegalArgumentException;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Currencies not compatible with smile data; asked for ");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" and ");

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", have ");

        $r18 = virtualinvoke r0.<com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle: java.util.Map getCurrencyMap()>();

        $r19 = interfaceinvoke $r18.<java.util.Map: java.util.Collection values()>();

        $r20 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r19);

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r11.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r21);

        throw $r11;
    }
}
