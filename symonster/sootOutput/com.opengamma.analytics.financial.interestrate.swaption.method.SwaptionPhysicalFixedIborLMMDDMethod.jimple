public final class com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionPhysicalFixedIborLMMDDMethod extends java.lang.Object implements com.opengamma.analytics.financial.interestrate.method.PricingMethod
{
    private static final com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionPhysicalFixedIborLMMDDMethod INSTANCE;
    private static final com.opengamma.analytics.financial.interestrate.CashFlowEquivalentCalculator CFEC;
    private static final com.opengamma.analytics.financial.interestrate.CashFlowEquivalentCurveSensitivityCalculator CFECSC;
    private static final double TIME_TOLERANCE;

    public static com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionPhysicalFixedIborLMMDDMethod getInstance()
    {
        com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionPhysicalFixedIborLMMDDMethod $r0;

        $r0 = <com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionPhysicalFixedIborLMMDDMethod: com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionPhysicalFixedIborLMMDDMethod INSTANCE>;

        return $r0;
    }

    private void <init>()
    {
        com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionPhysicalFixedIborLMMDDMethod r0;

        r0 := @this: com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionPhysicalFixedIborLMMDDMethod;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public com.opengamma.util.money.CurrencyAmount presentValue(com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionPhysicalFixedIbor, com.opengamma.analytics.financial.model.interestrate.definition.LiborMarketModelDisplacedDiffusionDataBundle)
    {
        com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionPhysicalFixedIborLMMDDMethod r0;
        com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionPhysicalFixedIbor r1;
        com.opengamma.analytics.financial.model.interestrate.definition.LiborMarketModelDisplacedDiffusionDataBundle r2;
        com.opengamma.analytics.financial.interestrate.annuity.derivative.AnnuityPaymentFixed r3;
        com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve r4;
        int i0, i1, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43, $i44, $i45, $i47, $i48, $i49, $i51, $i52, $i53, $i54, $i55, $i56, i57, i58, i59, i60, $i61, i62, i63, i64, i65, i66, i67, $i68, i69, i70, i71, i72, i73, i74, i75, i76, i77, i78, i79, i80, i81, i82, i83;
        double d0, d1, d2, d3, d4, d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d20, $d21, $d22, $d23, $d24, $d25, $d26, $d27, $d28, $d29, $d30, $d31, $d32, $d33, $d34, $d35, $d36, $d37, $d38, $d39, $d40, $d41, $d42, $d43, $d44, $d45, $d46, $d47, $d48, $d49, $d50, $d51, $d52, $d53, $d54, $d55, $d56, $d57, $d58, $d59, $d60, $d61, $d62, $d63, $d64, $d65, $d66, $d67, $d68, $d69, $d70, $d71, $d72, $d73, $d74, $d75, $d76, $d77, $d78, $d79, $d80, $d81, $d82, $d83, $d84, $d85, $d86, $d87, $d88, $d89, $d90, $d91, $d92, $d93, $d94, $d95, $d96, $d97, $d98, $d99, $d100, $d101, $d102, $d103, $d104, $d105, $d106, $d107, $d108, $d109, $d110, $d111, $d112, $d113, $d114, $d115, $d116, $d117, $d118, $d119, $d120, $d121, $d122, d123, d124, d125, $d126, d127, d128, d129, d130, d131, $d132;
        boolean z0, $z1, $z2;
        double[] r5, r6, r8, r10, r11, r12, r13, r14, r15, r16, r17, r19, r20, r22, $r41, $r43, $r54, $r55, $r56, $r57, $r58, $r59, $r60, $r61, $r62, $r63, $r64, $r65, $r66, $r67, r72, r74, r75, r76, r77, r78;
        double[][] r7, r18, r21, r73;
        int[] r9;
        com.opengamma.analytics.math.function.Function1D r26;
        com.opengamma.analytics.financial.interestrate.swap.derivative.SwapFixedCoupon $r29, $r50;
        com.opengamma.analytics.financial.interestrate.CashFlowEquivalentCalculator $r30;
        java.lang.Object $r31, $r48;
        java.lang.String $r32;
        com.opengamma.analytics.financial.interestrate.payments.derivative.Payment $r33, $r35, $r68, $r70;
        com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed $r34, $r36, $r69, $r71;
        byte $b2, $b13, $b46, $b50;
        com.opengamma.analytics.financial.model.interestrate.definition.LiborMarketModelDisplacedDiffusionParameters $r37, $r38, $r39, $r40, $r42, $r44;
        com.opengamma.analytics.financial.model.option.pricing.analytic.formula.EuropeanVanillaOption $r45;
        com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackPriceFunction $r46;
        com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackFunctionData $r47;
        java.lang.Double $r49;
        com.opengamma.analytics.financial.interestrate.annuity.derivative.Annuity $r51;
        com.opengamma.util.money.Currency $r52;
        com.opengamma.util.money.CurrencyAmount $r53;

        r0 := @this: com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionPhysicalFixedIborLMMDDMethod;

        r1 := @parameter0: com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionPhysicalFixedIbor;

        r2 := @parameter1: com.opengamma.analytics.financial.model.interestrate.definition.LiborMarketModelDisplacedDiffusionDataBundle;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "swaption");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, "LMM bundle");

        $r29 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionPhysicalFixedIbor: com.opengamma.analytics.financial.interestrate.swap.derivative.SwapFixedCoupon getUnderlyingSwap()>();

        $r30 = <com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionPhysicalFixedIborLMMDDMethod: com.opengamma.analytics.financial.interestrate.CashFlowEquivalentCalculator CFEC>;

        $r31 = virtualinvoke $r29.<com.opengamma.analytics.financial.interestrate.swap.derivative.SwapFixedCoupon: java.lang.Object accept(com.opengamma.analytics.financial.interestrate.InstrumentDerivativeVisitor,java.lang.Object)>($r30, r2);

        r3 = (com.opengamma.analytics.financial.interestrate.annuity.derivative.AnnuityPaymentFixed) $r31;

        $r32 = virtualinvoke r3.<com.opengamma.analytics.financial.interestrate.annuity.derivative.AnnuityPaymentFixed: java.lang.String getDiscountCurve()>();

        r4 = virtualinvoke r2.<com.opengamma.analytics.financial.model.interestrate.definition.LiborMarketModelDisplacedDiffusionDataBundle: com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve getCurve(java.lang.String)>($r32);

        i0 = virtualinvoke r3.<com.opengamma.analytics.financial.interestrate.annuity.derivative.AnnuityPaymentFixed: int getNumberOfPayments()>();

        $r33 = virtualinvoke r3.<com.opengamma.analytics.financial.interestrate.annuity.derivative.AnnuityPaymentFixed: com.opengamma.analytics.financial.interestrate.payments.derivative.Payment getNthPayment(int)>(0);

        $r34 = (com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed) $r33;

        $d6 = virtualinvoke $r34.<com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed: double getAmount()>();

        d0 = staticinvoke <java.lang.Math: double signum(double)>($d6);

        $r35 = virtualinvoke r3.<com.opengamma.analytics.financial.interestrate.annuity.derivative.AnnuityPaymentFixed: com.opengamma.analytics.financial.interestrate.payments.derivative.Payment getNthPayment(int)>(0);

        $r36 = (com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed) $r35;

        $d7 = virtualinvoke $r36.<com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed: double getAmount()>();

        $b2 = $d7 cmpg 0.0;

        if $b2 >= 0 goto label01;

        $z2 = 1;

        goto label02;

     label01:
        $z2 = 0;

     label02:
        z0 = $z2;

        r5 = newarray (double)[i0];

        r6 = newarray (double)[i0];

        i57 = 0;

     label03:
        if i57 >= i0 goto label04;

        $r68 = virtualinvoke r3.<com.opengamma.analytics.financial.interestrate.annuity.derivative.AnnuityPaymentFixed: com.opengamma.analytics.financial.interestrate.payments.derivative.Payment getNthPayment(int)>(i57);

        $r69 = (com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed) $r68;

        $d119 = virtualinvoke $r69.<com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed: double getPaymentTime()>();

        r5[i57] = $d119;

        $r70 = virtualinvoke r3.<com.opengamma.analytics.financial.interestrate.annuity.derivative.AnnuityPaymentFixed: com.opengamma.analytics.financial.interestrate.payments.derivative.Payment getNthPayment(int)>(i57);

        $r71 = (com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed) $r70;

        $d120 = virtualinvoke $r71.<com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed: double getAmount()>();

        $d121 = neg d0;

        $d122 = $d120 * $d121;

        r6[i57] = $d122;

        i57 = i57 + 1;

        goto label03;

     label04:
        d123 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionPhysicalFixedIbor: double getTimeToExpiry()>();

        $r37 = virtualinvoke r2.<com.opengamma.analytics.financial.model.interestrate.definition.LiborMarketModelDisplacedDiffusionDataBundle: com.opengamma.analytics.financial.model.interestrate.definition.LiborMarketModelDisplacedDiffusionParameters getLmmParameter()>();

        i1 = virtualinvoke $r37.<com.opengamma.analytics.financial.model.interestrate.definition.LiborMarketModelDisplacedDiffusionParameters: int getNbFactor()>();

        $r38 = virtualinvoke r2.<com.opengamma.analytics.financial.model.interestrate.definition.LiborMarketModelDisplacedDiffusionDataBundle: com.opengamma.analytics.financial.model.interestrate.definition.LiborMarketModelDisplacedDiffusionParameters getLmmParameter()>();

        r7 = virtualinvoke $r38.<com.opengamma.analytics.financial.model.interestrate.definition.LiborMarketModelDisplacedDiffusionParameters: double[][] getVolatility()>();

        $r39 = virtualinvoke r2.<com.opengamma.analytics.financial.model.interestrate.definition.LiborMarketModelDisplacedDiffusionDataBundle: com.opengamma.analytics.financial.model.interestrate.definition.LiborMarketModelDisplacedDiffusionParameters getLmmParameter()>();

        r8 = virtualinvoke $r39.<com.opengamma.analytics.financial.model.interestrate.definition.LiborMarketModelDisplacedDiffusionParameters: double[] getIborTime()>();

        r9 = newarray (int)[i0];

        i58 = i0 - 1;

        i59 = 0;

        i60 = 0;

     label05:
        if i60 >= i0 goto label11;

        $d112 = r5[i60];

        $i40 = staticinvoke <java.util.Arrays: int binarySearch(double[],double)>(r8, $d112);

        r9[i60] = $i40;

        $i41 = r9[i60];

        if $i41 >= 0 goto label08;

        $i43 = r9[i60];

        $i44 = neg $i43;

        $i45 = $i44 - 1;

        $d114 = r8[$i45];

        $d113 = r5[i60];

        $d115 = $d114 - $d113;

        $b46 = $d115 cmpg 0.001;

        if $b46 >= 0 goto label06;

        $i54 = r9[i60];

        $i55 = neg $i54;

        $i56 = $i55 - 1;

        r9[i60] = $i56;

        goto label08;

     label06:
        $d117 = r5[i60];

        $i47 = r9[i60];

        $i48 = neg $i47;

        $i49 = $i48 - 2;

        $d116 = r8[$i49];

        $d118 = $d117 - $d116;

        $b50 = $d118 cmpg 0.001;

        if $b50 >= 0 goto label07;

        $i51 = r9[i60];

        $i52 = neg $i51;

        $i53 = $i52 - 2;

        r9[i60] = $i53;

        goto label08;

     label07:
        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>(1, "Instrument time incompatible with LMM parametrisation");

     label08:
        $i61 = r9[i60];

        if $i61 >= i58 goto label09;

        i58 = r9[i60];

     label09:
        $i42 = r9[i60];

        if $i42 <= i59 goto label10;

        i59 = r9[i60];

     label10:
        i60 = i60 + 1;

        goto label05;

     label11:
        $i3 = i59 - i58;

        i62 = $i3 + 1;

        r10 = newarray (double)[i62];

        i63 = 0;

     label12:
        if i63 >= i0 goto label13;

        $i38 = r9[i63];

        $i39 = $i38 - i58;

        $d111 = r6[i63];

        r10[$i39] = $d111;

        i63 = i63 + 1;

        goto label12;

     label13:
        r72 = newarray (double)[i62];

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r8, i58, r72, 0, i62);

        r11 = newarray (double)[i62];

        i64 = 0;

     label14:
        if i64 >= i62 goto label15;

        $d109 = r72[i64];

        $d110 = virtualinvoke r4.<com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve: double getDiscountFactor(double)>($d109);

        r11[i64] = $d110;

        i64 = i64 + 1;

        goto label14;

     label15:
        $i4 = i62 - 1;

        r73 = newmultiarray (double)[$i4][i1];

        $i5 = i62 - 1;

        r12 = newarray (double)[$i5];

        $r40 = virtualinvoke r2.<com.opengamma.analytics.financial.model.interestrate.definition.LiborMarketModelDisplacedDiffusionDataBundle: com.opengamma.analytics.financial.model.interestrate.definition.LiborMarketModelDisplacedDiffusionParameters getLmmParameter()>();

        $r41 = virtualinvoke $r40.<com.opengamma.analytics.financial.model.interestrate.definition.LiborMarketModelDisplacedDiffusionParameters: double[] getAccrualFactor()>();

        $i6 = i62 - 1;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r41, i58, r12, 0, $i6);

        $i7 = i62 - 1;

        r13 = newarray (double)[$i7];

        $r42 = virtualinvoke r2.<com.opengamma.analytics.financial.model.interestrate.definition.LiborMarketModelDisplacedDiffusionDataBundle: com.opengamma.analytics.financial.model.interestrate.definition.LiborMarketModelDisplacedDiffusionParameters getLmmParameter()>();

        $r43 = virtualinvoke $r42.<com.opengamma.analytics.financial.model.interestrate.definition.LiborMarketModelDisplacedDiffusionParameters: double[] getDisplacement()>();

        $i8 = i62 - 1;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r43, i58, r13, 0, $i8);

        $i9 = i62 - 1;

        r14 = newarray (double)[$i9];

        $r44 = virtualinvoke r2.<com.opengamma.analytics.financial.model.interestrate.definition.LiborMarketModelDisplacedDiffusionDataBundle: com.opengamma.analytics.financial.model.interestrate.definition.LiborMarketModelDisplacedDiffusionParameters getLmmParameter()>();

        d1 = virtualinvoke $r44.<com.opengamma.analytics.financial.model.interestrate.definition.LiborMarketModelDisplacedDiffusionParameters: double getMeanReversion()>();

        i65 = 0;

     label16:
        $i10 = i62 - 1;

        if i65 >= $i10 goto label17;

        $i36 = i58 + i65;

        $r67 = r7[$i36];

        r73[i65] = $r67;

        $d104 = r11[i65];

        $i37 = i65 + 1;

        $d103 = r11[$i37];

        $d105 = $d104 / $d103;

        $d107 = $d105 - 1.0;

        $d106 = r12[i65];

        $d108 = $d107 / $d106;

        r14[i65] = $d108;

        i65 = i65 + 1;

        goto label16;

     label17:
        $i11 = i62 + 1;

        r74 = newarray (double)[$i11];

        d2 = r10[0];

        r74[0] = d2;

        r74[1] = 0.0;

        $i12 = i62 - 1;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r10, 1, r74, 2, $i12);

        r15 = newarray (double)[i62];

        r16 = newarray (double)[i62];

        d124 = 0.0;

        i66 = 0;

     label18:
        if i66 >= i62 goto label19;

        $d97 = r11[i66];

        $d96 = r11[0];

        $d98 = $d97 / $d96;

        r15[i66] = $d98;

        $i35 = i66 + 1;

        $d100 = r74[$i35];

        $d99 = r15[i66];

        $d101 = $d100 * $d99;

        r16[i66] = $d101;

        $d102 = r16[i66];

        d124 = d124 + $d102;

        i66 = i66 + 1;

        goto label18;

     label19:
        d125 = neg d2;

        $d8 = d124 + d125;

        d3 = $d8 / 2.0;

        $d9 = staticinvoke <java.lang.Math: double abs(double)>(d1);

        $b13 = $d9 cmpg 1.0E-6;

        if $b13 >= 0 goto label20;

        $d126 = d123;

        goto label21;

     label20:
        $d10 = 2.0 * d1;

        $d11 = $d10 * d123;

        $d12 = staticinvoke <java.lang.Math: double exp(double)>($d11);

        $d14 = $d12 - 1.0;

        $d13 = 2.0 * d1;

        $d126 = $d14 / $d13;

     label21:
        d4 = $d126;

        $i14 = i62 - 1;

        r17 = newarray (double)[$i14];

        $i15 = i62 - 1;

        r18 = newmultiarray (double)[$i15][i1];

        i67 = 0;

     label22:
        $i68 = i62 - 1;

        if i67 >= $i68 goto label23;

        $d89 = r14[i67];

        $d88 = r13[i67];

        $d94 = $d89 + $d88;

        $d92 = r14[i67];

        $d90 = r12[i67];

        $d91 = 1.0 / $d90;

        $d93 = $d92 + $d91;

        $d95 = $d94 / $d93;

        r17[i67] = $d95;

        i67 = i67 + 1;

        goto label22;

     label23:
        i69 = 0;

     label24:
        if i69 >= i1 goto label25;

        $r66 = r18[0];

        $d86 = r17[0];

        $r65 = r73[0];

        $d85 = $r65[i69];

        $d87 = $d86 * $d85;

        $r66[i69] = $d87;

        i69 = i69 + 1;

        goto label24;

     label25:
        i70 = 1;

     label26:
        $i16 = i62 - 1;

        if i70 >= $i16 goto label29;

        i71 = 0;

     label27:
        if i71 >= i1 goto label28;

        $r64 = r18[i70];

        $i34 = i70 - 1;

        $r62 = r18[$i34];

        $d83 = $r62[i71];

        $d81 = r17[i70];

        $r63 = r73[i70];

        $d80 = $r63[i71];

        $d82 = $d81 * $d80;

        $d84 = $d83 + $d82;

        $r64[i71] = $d84;

        i71 = i71 + 1;

        goto label27;

     label28:
        i70 = i70 + 1;

        goto label26;

     label29:
        r75 = newarray (double)[i62];

        r76 = newarray (double)[i62];

        i72 = 0;

     label30:
        $i17 = i62 - 1;

        if i72 >= $i17 goto label33;

        i73 = 0;

     label31:
        if i73 >= i1 goto label32;

        $i33 = i72 + 1;

        $d78 = r76[$i33];

        $r60 = r18[i72];

        $d76 = $r60[i73];

        $r61 = r18[i72];

        $d75 = $r61[i73];

        $d77 = $d76 * $d75;

        $d79 = $d78 + $d77;

        r76[$i33] = $d79;

        i73 = i73 + 1;

        goto label31;

     label32:
        $i30 = i72 + 1;

        $i29 = i72 + 1;

        $d71 = r76[$i29];

        $d72 = $d71 * d4;

        r76[$i30] = $d72;

        $i32 = i72 + 1;

        $i31 = i72 + 1;

        $d73 = r76[$i31];

        $d74 = staticinvoke <java.lang.Math: double sqrt(double)>($d73);

        r75[$i32] = $d74;

        i72 = i72 + 1;

        goto label30;

     label33:
        d127 = neg d3;

        d128 = 0.0;

        i74 = 0;

     label34:
        if i74 >= i62 goto label35;

        $d66 = r16[i74];

        $d63 = r16[i74];

        $d62 = r76[i74];

        $d64 = $d63 * $d62;

        $d65 = $d64 / 2.0;

        $d67 = $d66 - $d65;

        d127 = d127 + $d67;

        $d69 = r16[i74];

        $d68 = r75[i74];

        $d70 = $d69 * $d68;

        d128 = d128 + $d70;

        i74 = i74 + 1;

        goto label34;

     label35:
        d129 = d127 / d128;

        r19 = newarray (double)[i62];

        i75 = 0;

     label36:
        if i75 >= i62 goto label37;

        $d60 = r15[i75];

        $d54 = r75[i75];

        $d55 = d129 * $d54;

        $d58 = 1.0 - $d55;

        $d56 = r76[i75];

        $d57 = $d56 / 2.0;

        $d59 = $d58 - $d57;

        $d61 = $d60 * $d59;

        r19[i75] = $d61;

        i75 = i75 + 1;

        goto label36;

     label37:
        $i18 = i62 - 1;

        r77 = newarray (double)[$i18];

        r20 = newarray (double)[i62];

        i76 = 0;

     label38:
        $i19 = i62 - 1;

        if i76 >= $i19 goto label39;

        $d49 = r19[i76];

        $i28 = i76 + 1;

        $d48 = r19[$i28];

        $d50 = $d49 / $d48;

        $d52 = $d50 - 1.0;

        $d51 = r12[i76];

        $d53 = $d52 / $d51;

        r77[i76] = $d53;

        i76 = i76 + 1;

        goto label38;

     label39:
        i77 = 0;

     label40:
        if i77 >= i62 goto label41;

        $i27 = i77 + 1;

        $d45 = r74[$i27];

        $d44 = r19[i77];

        $d46 = $d45 * $d44;

        $d47 = $d46 / d3;

        r20[i77] = $d47;

        i77 = i77 + 1;

        goto label40;

     label41:
        $i20 = i62 - 1;

        r78 = newarray (double)[$i20];

        $i21 = i62 - 1;

        r21 = newmultiarray (double)[$i21][i1];

        i78 = 0;

     label42:
        $i22 = i62 - 1;

        if i78 >= $i22 goto label43;

        $d37 = r77[i78];

        $d36 = r13[i78];

        $d42 = $d37 + $d36;

        $d40 = r77[i78];

        $d38 = r12[i78];

        $d39 = 1.0 / $d38;

        $d41 = $d40 + $d39;

        $d43 = $d42 / $d41;

        r78[i78] = $d43;

        i78 = i78 + 1;

        goto label42;

     label43:
        i79 = 0;

     label44:
        if i79 >= i1 goto label45;

        $r59 = r21[0];

        $d34 = r78[0];

        $r58 = r73[0];

        $d33 = $r58[i79];

        $d35 = $d34 * $d33;

        $r59[i79] = $d35;

        i79 = i79 + 1;

        goto label44;

     label45:
        i80 = 1;

     label46:
        $i23 = i62 - 1;

        if i80 >= $i23 goto label49;

        i81 = 0;

     label47:
        if i81 >= i1 goto label48;

        $r57 = r21[i80];

        $i26 = i80 - 1;

        $r55 = r21[$i26];

        $d31 = $r55[i81];

        $d29 = r78[i80];

        $r56 = r73[i80];

        $d28 = $r56[i81];

        $d30 = $d29 * $d28;

        $d32 = $d31 + $d30;

        $r57[i81] = $d32;

        i81 = i81 + 1;

        goto label47;

     label48:
        i80 = i80 + 1;

        goto label46;

     label49:
        d130 = 0.0;

        r22 = newarray (double)[i1];

        i82 = 0;

     label50:
        if i82 >= i1 goto label53;

        i83 = 0;

     label51:
        $i24 = i62 - 1;

        if i83 >= $i24 goto label52;

        $d26 = r22[i82];

        $i25 = i83 + 1;

        $d24 = r20[$i25];

        $r54 = r21[i83];

        $d23 = $r54[i82];

        $d25 = $d24 * $d23;

        $d27 = $d26 + $d25;

        r22[i82] = $d27;

        i83 = i83 + 1;

        goto label51;

     label52:
        $d21 = r22[i82];

        $d20 = r22[i82];

        $d22 = $d21 * $d20;

        d130 = d130 + $d22;

        i82 = i82 + 1;

        goto label50;

     label53:
        $d15 = d130 * d4;

        d131 = staticinvoke <java.lang.Math: double sqrt(double)>($d15);

        $r45 = new com.opengamma.analytics.financial.model.option.pricing.analytic.formula.EuropeanVanillaOption;

        specialinvoke $r45.<com.opengamma.analytics.financial.model.option.pricing.analytic.formula.EuropeanVanillaOption: void <init>(double,double,boolean)>(d125, 1.0, z0);

        $r46 = new com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackPriceFunction;

        specialinvoke $r46.<com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackPriceFunction: void <init>()>();

        $r47 = new com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackFunctionData;

        specialinvoke $r47.<com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackFunctionData: void <init>(double,double,double)>(d124, 1.0, d131);

        r26 = virtualinvoke $r46.<com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackPriceFunction: com.opengamma.analytics.math.function.Function1D getPriceFunction(com.opengamma.analytics.financial.model.option.pricing.analytic.formula.EuropeanVanillaOption)>($r45);

        $d16 = r11[0];

        $r48 = virtualinvoke r26.<com.opengamma.analytics.math.function.Function1D: java.lang.Object evaluate(java.lang.Object)>($r47);

        $r49 = (java.lang.Double) $r48;

        $d17 = virtualinvoke $r49.<java.lang.Double: double doubleValue()>();

        d5 = $d16 * $d17;

        $r50 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionPhysicalFixedIbor: com.opengamma.analytics.financial.interestrate.swap.derivative.SwapFixedCoupon getUnderlyingSwap()>();

        $r51 = virtualinvoke $r50.<com.opengamma.analytics.financial.interestrate.swap.derivative.SwapFixedCoupon: com.opengamma.analytics.financial.interestrate.annuity.derivative.Annuity getFirstLeg()>();

        $r52 = virtualinvoke $r51.<com.opengamma.analytics.financial.interestrate.annuity.derivative.Annuity: com.opengamma.util.money.Currency getCurrency()>();

        $z1 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionPhysicalFixedIbor: boolean isLong()>();

        if $z1 == 0 goto label54;

        $d132 = 1.0;

        goto label55;

     label54:
        $d132 = -1.0;

     label55:
        $d18 = d5 * $d132;

        $r53 = staticinvoke <com.opengamma.util.money.CurrencyAmount: com.opengamma.util.money.CurrencyAmount of(com.opengamma.util.money.Currency,double)>($r52, $d18);

        return $r53;
    }

    public com.opengamma.util.money.CurrencyAmount presentValue(com.opengamma.analytics.financial.interestrate.InstrumentDerivative, com.opengamma.analytics.financial.interestrate.YieldCurveBundle)
    {
        com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionPhysicalFixedIborLMMDDMethod r0;
        com.opengamma.analytics.financial.interestrate.InstrumentDerivative r1;
        com.opengamma.analytics.financial.interestrate.YieldCurveBundle r2;
        boolean $z0, $z1;
        com.opengamma.analytics.financial.model.interestrate.definition.LiborMarketModelDisplacedDiffusionDataBundle $r3;
        com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionPhysicalFixedIbor $r4;
        com.opengamma.util.money.CurrencyAmount $r5;

        r0 := @this: com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionPhysicalFixedIborLMMDDMethod;

        r1 := @parameter0: com.opengamma.analytics.financial.interestrate.InstrumentDerivative;

        r2 := @parameter1: com.opengamma.analytics.financial.interestrate.YieldCurveBundle;

        $z0 = r1 instanceof com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionPhysicalFixedIbor;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z0, "Physical delivery swaption");

        $z1 = r2 instanceof com.opengamma.analytics.financial.model.interestrate.definition.LiborMarketModelDisplacedDiffusionDataBundle;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z1, "Bundle should contain LMM data");

        $r4 = (com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionPhysicalFixedIbor) r1;

        $r3 = (com.opengamma.analytics.financial.model.interestrate.definition.LiborMarketModelDisplacedDiffusionDataBundle) r2;

        $r5 = virtualinvoke r0.<com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionPhysicalFixedIborLMMDDMethod: com.opengamma.util.money.CurrencyAmount presentValue(com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionPhysicalFixedIbor,com.opengamma.analytics.financial.model.interestrate.definition.LiborMarketModelDisplacedDiffusionDataBundle)>($r4, $r3);

        return $r5;
    }

    public double[][] presentValueLMMSensitivity(com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionPhysicalFixedIbor, com.opengamma.analytics.financial.model.interestrate.definition.LiborMarketModelDisplacedDiffusionDataBundle)
    {
        com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionPhysicalFixedIborLMMDDMethod r0;
        com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionPhysicalFixedIbor r1;
        com.opengamma.analytics.financial.model.interestrate.definition.LiborMarketModelDisplacedDiffusionDataBundle r2;
        com.opengamma.analytics.financial.interestrate.annuity.derivative.AnnuityPaymentFixed r3;
        com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve r4;
        int i0, i1, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43, $i44, $i45, $i46, $i47, $i48, $i49, $i50, $i51, $i52, $i53, $i54, $i55, $i56, $i57, $i58, $i59, $i60, $i61, $i62, $i63, $i64, $i65, $i66, $i67, $i68, $i69, $i70, $i71, $i72, $i73, $i74, $i75, $i77, $i78, $i79, $i81, $i82, $i83, $i84, $i85, $i86, i87, i88, i89, i90, $i91, i92, i93, i94, i95, i96, i97, i98, i99, i100, i101, i102, i103, i104, i105, i106, i107, i108, i109, i110, i111, i112, i113, i114, i115, i116, i117, i118, i119, i120, i121, i122, i123, i124, i125, i126, i127, i128, i129, i130, i131, i132, i133, i134, i135, i136, i137, i138, i139, i140, i141;
        double d0, d1, d2, d3, d5, d6, d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21, $d22, $d23, $d24, $d25, $d26, $d27, $d28, $d29, $d30, $d31, $d32, $d33, $d34, $d35, $d36, $d37, $d38, $d39, $d40, $d41, $d42, $d43, $d44, $d45, $d46, $d47, $d48, $d49, $d50, $d51, $d52, $d53, $d54, $d55, $d56, $d57, $d58, $d59, $d60, $d61, $d62, $d63, $d64, $d65, $d66, $d67, $d68, $d69, $d70, $d71, $d72, $d73, $d74, $d75, $d76, $d77, $d78, $d79, $d80, $d81, $d82, $d83, $d84, $d85, $d86, $d87, $d88, $d89, $d90, $d91, $d92, $d93, $d94, $d95, $d96, $d97, $d98, $d99, $d100, $d101, $d102, $d103, $d104, $d105, $d106, $d107, $d108, $d109, $d110, $d111, $d112, $d113, $d114, $d115, $d116, $d117, $d118, $d119, $d120, $d121, $d122, $d123, $d124, $d125, $d126, $d127, $d128, $d129, $d130, $d131, $d132, $d133, $d134, $d135, $d136, $d137, $d138, $d139, $d140, $d141, $d142, $d143, $d144, $d145, $d146, $d147, $d148, $d149, $d150, $d151, $d152, $d153, $d154, $d155, $d156, $d157, $d158, $d159, $d160, $d161, $d162, $d163, $d164, $d165, $d166, $d167, $d168, $d169, $d170, $d171, $d172, $d173, $d174, $d175, $d176, $d177, $d178, $d179, $d180, $d181, $d182, $d183, $d184, $d185, $d186, $d187, $d188, $d189, $d190, $d191, $d192, $d193, $d194, $d195, $d196, $d197, $d198, $d199, $d200, $d201, $d202, $d203, $d204, $d205, $d206, $d207, $d208, $d209, $d210, $d211, $d212, $d213, $d214, $d215, $d216, $d217, $d218, $d219, $d220, $d221, $d222, $d223, $d224, $d225, $d226, $d227, $d228, $d229, $d230, $d231, $d232, $d233, $d234, $d235, $d236, $d237, $d238, $d239, $d240, $d241, $d242, $d243, $d244, $d245, $d246, $d247, $d248, $d249, $d250, $d251, d252, d253, d254, d255, d256, d257, d258, d259, d260, d261, d262;
        boolean z0, $z1;
        double[] r5, r6, r8, r10, r11, r12, r13, r14, r15, r16, r17, r19, r20, r21, r22, r24, r28, r29, r30, $r43, $r45, $r50, $r51, $r52, $r53, $r54, $r55, $r56, $r57, $r58, $r59, $r60, $r61, $r62, $r63, $r64, $r65, $r66, $r67, $r68, $r69, $r70, $r71, $r72, $r73, $r74, $r75, $r76, $r77, $r78, $r79, $r80, $r81, $r82, r87, r89, r90, r91, r93, r94, r95, r96, r97;
        double[][] r7, r18, r23, r88, r92, r98, r99, r100;
        int[] r9;
        com.opengamma.analytics.financial.interestrate.swap.derivative.SwapFixedCoupon $r31;
        com.opengamma.analytics.financial.interestrate.CashFlowEquivalentCalculator $r32;
        java.lang.Object $r33;
        java.lang.String $r34;
        com.opengamma.analytics.financial.interestrate.payments.derivative.Payment $r35, $r37, $r83, $r85;
        com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed $r36, $r38, $r84, $r86;
        byte $b2, $b76, $b80;
        com.opengamma.analytics.financial.model.interestrate.definition.LiborMarketModelDisplacedDiffusionParameters $r39, $r40, $r41, $r42, $r44, $r46;
        com.opengamma.analytics.financial.model.option.pricing.analytic.formula.EuropeanVanillaOption $r47;
        com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackPriceFunction $r48;
        com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackFunctionData $r49;

        r0 := @this: com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionPhysicalFixedIborLMMDDMethod;

        r1 := @parameter0: com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionPhysicalFixedIbor;

        r2 := @parameter1: com.opengamma.analytics.financial.model.interestrate.definition.LiborMarketModelDisplacedDiffusionDataBundle;

        $r31 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionPhysicalFixedIbor: com.opengamma.analytics.financial.interestrate.swap.derivative.SwapFixedCoupon getUnderlyingSwap()>();

        $r32 = <com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionPhysicalFixedIborLMMDDMethod: com.opengamma.analytics.financial.interestrate.CashFlowEquivalentCalculator CFEC>;

        $r33 = virtualinvoke $r31.<com.opengamma.analytics.financial.interestrate.swap.derivative.SwapFixedCoupon: java.lang.Object accept(com.opengamma.analytics.financial.interestrate.InstrumentDerivativeVisitor,java.lang.Object)>($r32, r2);

        r3 = (com.opengamma.analytics.financial.interestrate.annuity.derivative.AnnuityPaymentFixed) $r33;

        $r34 = virtualinvoke r3.<com.opengamma.analytics.financial.interestrate.annuity.derivative.AnnuityPaymentFixed: java.lang.String getDiscountCurve()>();

        r4 = virtualinvoke r2.<com.opengamma.analytics.financial.model.interestrate.definition.LiborMarketModelDisplacedDiffusionDataBundle: com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve getCurve(java.lang.String)>($r34);

        i0 = virtualinvoke r3.<com.opengamma.analytics.financial.interestrate.annuity.derivative.AnnuityPaymentFixed: int getNumberOfPayments()>();

        $r35 = virtualinvoke r3.<com.opengamma.analytics.financial.interestrate.annuity.derivative.AnnuityPaymentFixed: com.opengamma.analytics.financial.interestrate.payments.derivative.Payment getNthPayment(int)>(0);

        $r36 = (com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed) $r35;

        $d8 = virtualinvoke $r36.<com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed: double getAmount()>();

        d0 = staticinvoke <java.lang.Math: double signum(double)>($d8);

        $r37 = virtualinvoke r3.<com.opengamma.analytics.financial.interestrate.annuity.derivative.AnnuityPaymentFixed: com.opengamma.analytics.financial.interestrate.payments.derivative.Payment getNthPayment(int)>(0);

        $r38 = (com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed) $r37;

        $d9 = virtualinvoke $r38.<com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed: double getAmount()>();

        $b2 = $d9 cmpg 0.0;

        if $b2 >= 0 goto label001;

        $z1 = 1;

        goto label002;

     label001:
        $z1 = 0;

     label002:
        z0 = $z1;

        r5 = newarray (double)[i0];

        r6 = newarray (double)[i0];

        i87 = 0;

     label003:
        if i87 >= i0 goto label004;

        $r83 = virtualinvoke r3.<com.opengamma.analytics.financial.interestrate.annuity.derivative.AnnuityPaymentFixed: com.opengamma.analytics.financial.interestrate.payments.derivative.Payment getNthPayment(int)>(i87);

        $r84 = (com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed) $r83;

        $d248 = virtualinvoke $r84.<com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed: double getPaymentTime()>();

        r5[i87] = $d248;

        $r85 = virtualinvoke r3.<com.opengamma.analytics.financial.interestrate.annuity.derivative.AnnuityPaymentFixed: com.opengamma.analytics.financial.interestrate.payments.derivative.Payment getNthPayment(int)>(i87);

        $r86 = (com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed) $r85;

        $d249 = virtualinvoke $r86.<com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed: double getAmount()>();

        $d250 = neg d0;

        $d251 = $d249 * $d250;

        r6[i87] = $d251;

        i87 = i87 + 1;

        goto label003;

     label004:
        d252 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionPhysicalFixedIbor: double getTimeToExpiry()>();

        $r39 = virtualinvoke r2.<com.opengamma.analytics.financial.model.interestrate.definition.LiborMarketModelDisplacedDiffusionDataBundle: com.opengamma.analytics.financial.model.interestrate.definition.LiborMarketModelDisplacedDiffusionParameters getLmmParameter()>();

        i1 = virtualinvoke $r39.<com.opengamma.analytics.financial.model.interestrate.definition.LiborMarketModelDisplacedDiffusionParameters: int getNbFactor()>();

        $r40 = virtualinvoke r2.<com.opengamma.analytics.financial.model.interestrate.definition.LiborMarketModelDisplacedDiffusionDataBundle: com.opengamma.analytics.financial.model.interestrate.definition.LiborMarketModelDisplacedDiffusionParameters getLmmParameter()>();

        r7 = virtualinvoke $r40.<com.opengamma.analytics.financial.model.interestrate.definition.LiborMarketModelDisplacedDiffusionParameters: double[][] getVolatility()>();

        $r41 = virtualinvoke r2.<com.opengamma.analytics.financial.model.interestrate.definition.LiborMarketModelDisplacedDiffusionDataBundle: com.opengamma.analytics.financial.model.interestrate.definition.LiborMarketModelDisplacedDiffusionParameters getLmmParameter()>();

        r8 = virtualinvoke $r41.<com.opengamma.analytics.financial.model.interestrate.definition.LiborMarketModelDisplacedDiffusionParameters: double[] getIborTime()>();

        r9 = newarray (int)[i0];

        i88 = i0 - 1;

        i89 = 0;

        i90 = 0;

     label005:
        if i90 >= i0 goto label011;

        $d241 = r5[i90];

        $i70 = staticinvoke <java.util.Arrays: int binarySearch(double[],double)>(r8, $d241);

        r9[i90] = $i70;

        $i71 = r9[i90];

        if $i71 >= 0 goto label008;

        $i73 = r9[i90];

        $i74 = neg $i73;

        $i75 = $i74 - 1;

        $d243 = r8[$i75];

        $d242 = r5[i90];

        $d244 = $d243 - $d242;

        $b76 = $d244 cmpg 0.001;

        if $b76 >= 0 goto label006;

        $i84 = r9[i90];

        $i85 = neg $i84;

        $i86 = $i85 - 1;

        r9[i90] = $i86;

        goto label008;

     label006:
        $d246 = r5[i90];

        $i77 = r9[i90];

        $i78 = neg $i77;

        $i79 = $i78 - 2;

        $d245 = r8[$i79];

        $d247 = $d246 - $d245;

        $b80 = $d247 cmpg 0.001;

        if $b80 >= 0 goto label007;

        $i81 = r9[i90];

        $i82 = neg $i81;

        $i83 = $i82 - 2;

        r9[i90] = $i83;

        goto label008;

     label007:
        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>(1, "Instrument time incompatible with LMM");

     label008:
        $i91 = r9[i90];

        if $i91 >= i88 goto label009;

        i88 = r9[i90];

     label009:
        $i72 = r9[i90];

        if $i72 <= i89 goto label010;

        i89 = r9[i90];

     label010:
        i90 = i90 + 1;

        goto label005;

     label011:
        $i3 = i89 - i88;

        i92 = $i3 + 1;

        r10 = newarray (double)[i92];

        i93 = 0;

     label012:
        if i93 >= i0 goto label013;

        $i68 = r9[i93];

        $i69 = $i68 - i88;

        $d240 = r6[i93];

        r10[$i69] = $d240;

        i93 = i93 + 1;

        goto label012;

     label013:
        r87 = newarray (double)[i92];

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r8, i88, r87, 0, i92);

        r11 = newarray (double)[i92];

        i94 = 0;

     label014:
        if i94 >= i92 goto label015;

        $d238 = r87[i94];

        $d239 = virtualinvoke r4.<com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve: double getDiscountFactor(double)>($d238);

        r11[i94] = $d239;

        i94 = i94 + 1;

        goto label014;

     label015:
        $i4 = i92 - 1;

        r88 = newmultiarray (double)[$i4][i1];

        $i5 = i92 - 1;

        r12 = newarray (double)[$i5];

        $r42 = virtualinvoke r2.<com.opengamma.analytics.financial.model.interestrate.definition.LiborMarketModelDisplacedDiffusionDataBundle: com.opengamma.analytics.financial.model.interestrate.definition.LiborMarketModelDisplacedDiffusionParameters getLmmParameter()>();

        $r43 = virtualinvoke $r42.<com.opengamma.analytics.financial.model.interestrate.definition.LiborMarketModelDisplacedDiffusionParameters: double[] getAccrualFactor()>();

        $i6 = i92 - 1;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r43, i88, r12, 0, $i6);

        $i7 = i92 - 1;

        r13 = newarray (double)[$i7];

        $r44 = virtualinvoke r2.<com.opengamma.analytics.financial.model.interestrate.definition.LiborMarketModelDisplacedDiffusionDataBundle: com.opengamma.analytics.financial.model.interestrate.definition.LiborMarketModelDisplacedDiffusionParameters getLmmParameter()>();

        $r45 = virtualinvoke $r44.<com.opengamma.analytics.financial.model.interestrate.definition.LiborMarketModelDisplacedDiffusionParameters: double[] getDisplacement()>();

        $i8 = i92 - 1;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r45, i88, r13, 0, $i8);

        $i9 = i92 - 1;

        r14 = newarray (double)[$i9];

        $r46 = virtualinvoke r2.<com.opengamma.analytics.financial.model.interestrate.definition.LiborMarketModelDisplacedDiffusionDataBundle: com.opengamma.analytics.financial.model.interestrate.definition.LiborMarketModelDisplacedDiffusionParameters getLmmParameter()>();

        d1 = virtualinvoke $r46.<com.opengamma.analytics.financial.model.interestrate.definition.LiborMarketModelDisplacedDiffusionParameters: double getMeanReversion()>();

        i95 = 0;

     label016:
        $i10 = i92 - 1;

        if i95 >= $i10 goto label017;

        $i66 = i88 + i95;

        $r82 = r7[$i66];

        r88[i95] = $r82;

        $d233 = r11[i95];

        $i67 = i95 + 1;

        $d232 = r11[$i67];

        $d234 = $d233 / $d232;

        $d236 = $d234 - 1.0;

        $d235 = r12[i95];

        $d237 = $d236 / $d235;

        r14[i95] = $d237;

        i95 = i95 + 1;

        goto label016;

     label017:
        $i11 = i92 + 1;

        r89 = newarray (double)[$i11];

        d2 = r10[0];

        r89[0] = d2;

        r89[1] = 0.0;

        $i12 = i92 - 1;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r10, 1, r89, 2, $i12);

        r15 = newarray (double)[i92];

        r16 = newarray (double)[i92];

        d253 = 0.0;

        i96 = 0;

     label018:
        if i96 >= i92 goto label019;

        $d226 = r11[i96];

        $d225 = r11[0];

        $d227 = $d226 / $d225;

        r15[i96] = $d227;

        $i65 = i96 + 1;

        $d229 = r89[$i65];

        $d228 = r15[i96];

        $d230 = $d229 * $d228;

        r16[i96] = $d230;

        $d231 = r16[i96];

        d253 = d253 + $d231;

        i96 = i96 + 1;

        goto label018;

     label019:
        d254 = neg d2;

        $d10 = d253 + d254;

        d3 = $d10 / 2.0;

        $i13 = i92 - 1;

        r17 = newarray (double)[$i13];

        $i14 = i92 - 1;

        r18 = newmultiarray (double)[$i14][i1];

        i97 = 0;

     label020:
        $i15 = i92 - 1;

        if i97 >= $i15 goto label021;

        $d218 = r14[i97];

        $d217 = r13[i97];

        $d223 = $d218 + $d217;

        $d221 = r14[i97];

        $d219 = r12[i97];

        $d220 = 1.0 / $d219;

        $d222 = $d221 + $d220;

        $d224 = $d223 / $d222;

        r17[i97] = $d224;

        i97 = i97 + 1;

        goto label020;

     label021:
        i98 = 0;

     label022:
        if i98 >= i1 goto label023;

        $r81 = r18[0];

        $d215 = r17[0];

        $r80 = r88[0];

        $d214 = $r80[i98];

        $d216 = $d215 * $d214;

        $r81[i98] = $d216;

        i98 = i98 + 1;

        goto label022;

     label023:
        i99 = 1;

     label024:
        $i16 = i92 - 1;

        if i99 >= $i16 goto label027;

        i100 = 0;

     label025:
        if i100 >= i1 goto label026;

        $r79 = r18[i99];

        $i64 = i99 - 1;

        $r77 = r18[$i64];

        $d212 = $r77[i100];

        $d210 = r17[i99];

        $r78 = r88[i99];

        $d209 = $r78[i100];

        $d211 = $d210 * $d209;

        $d213 = $d212 + $d211;

        $r79[i100] = $d213;

        i100 = i100 + 1;

        goto label025;

     label026:
        i99 = i99 + 1;

        goto label024;

     label027:
        $d11 = 2.0 * d1;

        $d12 = $d11 * d252;

        $d13 = staticinvoke <java.lang.Math: double exp(double)>($d12);

        $d15 = $d13 - 1.0;

        $d14 = 2.0 * d1;

        d255 = $d15 / $d14;

        r19 = newarray (double)[i92];

        r20 = newarray (double)[i92];

        i101 = 0;

     label028:
        $i17 = i92 - 1;

        if i101 >= $i17 goto label031;

        i102 = 0;

     label029:
        if i102 >= i1 goto label030;

        $i63 = i101 + 1;

        $d207 = r20[$i63];

        $r75 = r18[i101];

        $d205 = $r75[i102];

        $r76 = r18[i101];

        $d204 = $r76[i102];

        $d206 = $d205 * $d204;

        $d208 = $d207 + $d206;

        r20[$i63] = $d208;

        i102 = i102 + 1;

        goto label029;

     label030:
        $i60 = i101 + 1;

        $i59 = i101 + 1;

        $d200 = r20[$i59];

        $d201 = $d200 * d255;

        r20[$i60] = $d201;

        $i62 = i101 + 1;

        $i61 = i101 + 1;

        $d202 = r20[$i61];

        $d203 = staticinvoke <java.lang.Math: double sqrt(double)>($d202);

        r19[$i62] = $d203;

        i101 = i101 + 1;

        goto label028;

     label031:
        d256 = neg d3;

        d257 = 0.0;

        i103 = 0;

     label032:
        if i103 >= i92 goto label033;

        $d195 = r16[i103];

        $d192 = r16[i103];

        $d191 = r20[i103];

        $d193 = $d192 * $d191;

        $d194 = $d193 / 2.0;

        $d196 = $d195 - $d194;

        d256 = d256 + $d196;

        $d198 = r16[i103];

        $d197 = r19[i103];

        $d199 = $d198 * $d197;

        d257 = d257 + $d199;

        i103 = i103 + 1;

        goto label032;

     label033:
        d258 = d256 / d257;

        r21 = newarray (double)[i92];

        i104 = 0;

     label034:
        if i104 >= i92 goto label035;

        $d189 = r15[i104];

        $d183 = r19[i104];

        $d184 = d258 * $d183;

        $d187 = 1.0 - $d184;

        $d185 = r20[i104];

        $d186 = $d185 / 2.0;

        $d188 = $d187 - $d186;

        $d190 = $d189 * $d188;

        r21[i104] = $d190;

        i104 = i104 + 1;

        goto label034;

     label035:
        $i18 = i92 - 1;

        r90 = newarray (double)[$i18];

        r22 = newarray (double)[i92];

        i105 = 0;

     label036:
        $i19 = i92 - 1;

        if i105 >= $i19 goto label037;

        $d178 = r21[i105];

        $i58 = i105 + 1;

        $d177 = r21[$i58];

        $d179 = $d178 / $d177;

        $d181 = $d179 - 1.0;

        $d180 = r12[i105];

        $d182 = $d181 / $d180;

        r90[i105] = $d182;

        i105 = i105 + 1;

        goto label036;

     label037:
        i106 = 0;

     label038:
        if i106 >= i92 goto label039;

        $i57 = i106 + 1;

        $d174 = r89[$i57];

        $d173 = r21[i106];

        $d175 = $d174 * $d173;

        $d176 = $d175 / d3;

        r22[i106] = $d176;

        i106 = i106 + 1;

        goto label038;

     label039:
        $i20 = i92 - 1;

        r91 = newarray (double)[$i20];

        $i21 = i92 - 1;

        r23 = newmultiarray (double)[$i21][i1];

        i107 = 0;

     label040:
        $i22 = i92 - 1;

        if i107 >= $i22 goto label041;

        $d166 = r90[i107];

        $d165 = r13[i107];

        $d171 = $d166 + $d165;

        $d169 = r90[i107];

        $d167 = r12[i107];

        $d168 = 1.0 / $d167;

        $d170 = $d169 + $d168;

        $d172 = $d171 / $d170;

        r91[i107] = $d172;

        i107 = i107 + 1;

        goto label040;

     label041:
        i108 = 0;

     label042:
        if i108 >= i1 goto label043;

        $r74 = r23[0];

        $d163 = r91[0];

        $r73 = r88[0];

        $d162 = $r73[i108];

        $d164 = $d163 * $d162;

        $r74[i108] = $d164;

        i108 = i108 + 1;

        goto label042;

     label043:
        i109 = 1;

     label044:
        $i23 = i92 - 1;

        if i109 >= $i23 goto label047;

        i110 = 0;

     label045:
        if i110 >= i1 goto label046;

        $r72 = r23[i109];

        $i56 = i109 - 1;

        $r70 = r23[$i56];

        $d160 = $r70[i110];

        $d158 = r91[i109];

        $r71 = r88[i109];

        $d157 = $r71[i110];

        $d159 = $d158 * $d157;

        $d161 = $d160 + $d159;

        $r72[i110] = $d161;

        i110 = i110 + 1;

        goto label045;

     label046:
        i109 = i109 + 1;

        goto label044;

     label047:
        d259 = 0.0;

        r24 = newarray (double)[i1];

        i111 = 0;

     label048:
        if i111 >= i1 goto label051;

        i112 = 0;

     label049:
        $i54 = i92 - 1;

        if i112 >= $i54 goto label050;

        $d155 = r24[i111];

        $i55 = i112 + 1;

        $d153 = r22[$i55];

        $r69 = r23[i112];

        $d152 = $r69[i111];

        $d154 = $d153 * $d152;

        $d156 = $d155 + $d154;

        r24[i111] = $d156;

        i112 = i112 + 1;

        goto label049;

     label050:
        $d150 = r24[i111];

        $d149 = r24[i111];

        $d151 = $d150 * $d149;

        d259 = d259 + $d151;

        i111 = i111 + 1;

        goto label048;

     label051:
        $d16 = d259 * d255;

        d260 = staticinvoke <java.lang.Math: double sqrt(double)>($d16);

        $r47 = new com.opengamma.analytics.financial.model.option.pricing.analytic.formula.EuropeanVanillaOption;

        specialinvoke $r47.<com.opengamma.analytics.financial.model.option.pricing.analytic.formula.EuropeanVanillaOption: void <init>(double,double,boolean)>(d254, 1.0, z0);

        $r48 = new com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackPriceFunction;

        specialinvoke $r48.<com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackPriceFunction: void <init>()>();

        $r49 = new com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackFunctionData;

        specialinvoke $r49.<com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackFunctionData: void <init>(double,double,double)>(d253, 1.0, d260);

        r28 = virtualinvoke $r48.<com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackPriceFunction: double[] getPriceAdjoint(com.opengamma.analytics.financial.model.option.pricing.analytic.formula.EuropeanVanillaOption,com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackFunctionData)>($r47, $r49);

        $d18 = r11[0];

        $d17 = r28[2];

        $d19 = $d18 * $d17;

        d5 = $d19 * 1.0;

        $d20 = 2.0 * d260;

        $d21 = d255 / $d20;

        d6 = $d21 * d5;

        r29 = newarray (double)[i1];

        i113 = 0;

     label052:
        if i113 >= i1 goto label053;

        $d146 = r24[i113];

        $d147 = 2.0 * $d146;

        $d148 = $d147 * d6;

        r29[i113] = $d148;

        i113 = i113 + 1;

        goto label052;

     label053:
        $i24 = i92 - 1;

        r92 = newmultiarray (double)[$i24][i1];

        i114 = 0;

     label054:
        $i25 = i92 - 1;

        if i114 >= $i25 goto label057;

        i115 = 0;

     label055:
        if i115 >= i1 goto label056;

        $r68 = r92[i114];

        $i53 = i114 + 1;

        $d144 = r22[$i53];

        $d143 = r29[i115];

        $d145 = $d144 * $d143;

        $r68[i115] = $d145;

        i115 = i115 + 1;

        goto label055;

     label056:
        i114 = i114 + 1;

        goto label054;

     label057:
        i116 = i92 - 3;

     label058:
        if i116 < 0 goto label061;

        i117 = 0;

     label059:
        if i117 >= i1 goto label060;

        $r66 = r92[i116];

        $d141 = $r66[i117];

        $i52 = i116 + 1;

        $r67 = r92[$i52];

        $d140 = $r67[i117];

        $d142 = $d141 + $d140;

        $r66[i117] = $d142;

        i117 = i117 + 1;

        goto label059;

     label060:
        i116 = i116 + -1;

        goto label058;

     label061:
        $i26 = i92 - 1;

        r93 = newarray (double)[$i26];

        i118 = 0;

     label062:
        $i27 = i92 - 1;

        if i118 >= $i27 goto label065;

        i119 = 0;

     label063:
        if i119 >= i1 goto label064;

        $d138 = r93[i118];

        $r64 = r88[i118];

        $d136 = $r64[i119];

        $r65 = r92[i118];

        $d135 = $r65[i119];

        $d137 = $d136 * $d135;

        $d139 = $d138 + $d137;

        r93[i118] = $d139;

        i119 = i119 + 1;

        goto label063;

     label064:
        i118 = i118 + 1;

        goto label062;

     label065:
        r94 = newarray (double)[i92];

        i120 = 0;

     label066:
        if i120 >= i1 goto label069;

        i121 = 0;

     label067:
        $i50 = i92 - 1;

        if i121 >= $i50 goto label068;

        $i51 = i121 + 1;

        $d133 = r94[$i51];

        $r63 = r23[i121];

        $d131 = $r63[i120];

        $d130 = r29[i120];

        $d132 = $d131 * $d130;

        $d134 = $d133 + $d132;

        r94[$i51] = $d134;

        i121 = i121 + 1;

        goto label067;

     label068:
        i120 = i120 + 1;

        goto label066;

     label069:
        $i28 = i92 - 1;

        r95 = newarray (double)[$i28];

        i122 = 0;

     label070:
        $i29 = i92 - 1;

        if i122 >= $i29 goto label071;

        $d112 = r90[i122];

        $d110 = r12[i122];

        $d111 = 1.0 / $d110;

        $d116 = $d112 + $d111;

        $d114 = r90[i122];

        $d113 = r13[i122];

        $d115 = $d114 + $d113;

        $d126 = $d116 - $d115;

        $d119 = r90[i122];

        $d117 = r12[i122];

        $d118 = 1.0 / $d117;

        $d124 = $d119 + $d118;

        $d122 = r90[i122];

        $d120 = r12[i122];

        $d121 = 1.0 / $d120;

        $d123 = $d122 + $d121;

        $d125 = $d124 * $d123;

        $d128 = $d126 / $d125;

        $d127 = r93[i122];

        $d129 = $d128 * $d127;

        r95[i122] = $d129;

        i122 = i122 + 1;

        goto label070;

     label071:
        r96 = newarray (double)[i92];

        i123 = 0;

     label072:
        $i30 = i92 - 1;

        if i123 >= $i30 goto label073;

        $d96 = r96[i123];

        $i46 = i123 + 1;

        $d90 = r21[$i46];

        $d92 = 1.0 / $d90;

        $d91 = r12[i123];

        $d94 = $d92 / $d91;

        $d93 = r95[i123];

        $d95 = $d94 * $d93;

        $d97 = $d96 + $d95;

        r96[i123] = $d97;

        $i47 = i123 + 1;

        $d108 = r96[$i47];

        $d98 = r21[i123];

        $d102 = neg $d98;

        $i48 = i123 + 1;

        $d100 = r21[$i48];

        $i49 = i123 + 1;

        $d99 = r21[$i49];

        $d101 = $d100 * $d99;

        $d104 = $d102 / $d101;

        $d103 = r12[i123];

        $d106 = $d104 / $d103;

        $d105 = r95[i123];

        $d107 = $d106 * $d105;

        $d109 = $d108 + $d107;

        r96[$i47] = $d109;

        i123 = i123 + 1;

        goto label072;

     label073:
        i124 = 0;

     label074:
        if i124 >= i92 goto label075;

        $d88 = r96[i124];

        $i45 = i124 + 1;

        $d84 = r89[$i45];

        $d86 = $d84 / d3;

        $d85 = r94[i124];

        $d87 = $d86 * $d85;

        $d89 = $d88 + $d87;

        r96[i124] = $d89;

        i124 = i124 + 1;

        goto label074;

     label075:
        d261 = 0.0;

        i125 = 0;

     label076:
        if i125 >= i92 goto label077;

        $d78 = r15[i125];

        $d80 = neg $d78;

        $d79 = r19[i125];

        $d82 = $d80 * $d79;

        $d81 = r96[i125];

        $d83 = $d82 * $d81;

        d261 = d261 + $d83;

        i125 = i125 + 1;

        goto label076;

     label077:
        $d22 = 1.0 / d257;

        d262 = $d22 * d261;

        $d24 = neg d256;

        $d23 = d257 * d257;

        $d25 = $d24 / $d23;

        d7 = $d25 * d261;

        r30 = newarray (double)[i92];

        i126 = 0;

     label078:
        if i126 >= i92 goto label079;

        $d73 = r15[i126];

        $d74 = neg $d73;

        $d76 = $d74 * d258;

        $d75 = r96[i126];

        $d77 = $d76 * $d75;

        r30[i126] = $d77;

        i126 = i126 + 1;

        goto label078;

     label079:
        i127 = 0;

     label080:
        if i127 >= i92 goto label081;

        $d71 = r30[i127];

        $d69 = r16[i127];

        $d70 = $d69 * d7;

        $d72 = $d71 + $d70;

        r30[i127] = $d72;

        i127 = i127 + 1;

        goto label080;

     label081:
        r97 = newarray (double)[i92];

        i128 = 0;

     label082:
        if i128 >= i92 goto label083;

        $d64 = r15[i128];

        $d65 = neg $d64;

        $d67 = $d65 / 2.0;

        $d66 = r96[i128];

        $d68 = $d67 * $d66;

        r97[i128] = $d68;

        i128 = i128 + 1;

        goto label082;

     label083:
        i129 = 0;

     label084:
        if i129 >= i92 goto label085;

        $d62 = r97[i129];

        $d58 = r16[i129];

        $d59 = neg $d58;

        $d60 = $d59 / 2.0;

        $d61 = $d60 * d262;

        $d63 = $d62 + $d61;

        r97[i129] = $d63;

        i129 = i129 + 1;

        goto label084;

     label085:
        i130 = 0;

     label086:
        $i31 = i92 - 1;

        if i130 >= $i31 goto label087;

        $i42 = i130 + 1;

        $d56 = r97[$i42];

        $i43 = i130 + 1;

        $d52 = r19[$i43];

        $d54 = 0.5 / $d52;

        $i44 = i130 + 1;

        $d53 = r30[$i44];

        $d55 = $d54 * $d53;

        $d57 = $d56 + $d55;

        r97[$i42] = $d57;

        i130 = i130 + 1;

        goto label086;

     label087:
        $i32 = i92 - 1;

        r98 = newmultiarray (double)[$i32][i1];

        i131 = 0;

     label088:
        $i33 = i92 - 1;

        if i131 >= $i33 goto label091;

        i132 = 0;

     label089:
        if i132 >= i1 goto label090;

        $r62 = r98[i131];

        $r61 = r18[i131];

        $d47 = $r61[i132];

        $d48 = 2.0 * $d47;

        $d50 = $d48 * d255;

        $i41 = i131 + 1;

        $d49 = r97[$i41];

        $d51 = $d50 * $d49;

        $r62[i132] = $d51;

        i132 = i132 + 1;

        goto label089;

     label090:
        i131 = i131 + 1;

        goto label088;

     label091:
        i133 = i92 - 3;

     label092:
        if i133 < 0 goto label095;

        i134 = 0;

     label093:
        if i134 >= i1 goto label094;

        $r59 = r98[i133];

        $d45 = $r59[i134];

        $i40 = i133 + 1;

        $r60 = r98[$i40];

        $d44 = $r60[i134];

        $d46 = $d45 + $d44;

        $r59[i134] = $d46;

        i134 = i134 + 1;

        goto label093;

     label094:
        i133 = i133 + -1;

        goto label092;

     label095:
        $i34 = i92 - 1;

        r99 = newmultiarray (double)[$i34][i1];

        i135 = 0;

     label096:
        if i135 >= i1 goto label097;

        $r58 = r99[0];

        $d42 = r91[0];

        $r57 = r92[0];

        $d41 = $r57[i135];

        $d43 = $d42 * $d41;

        $r58[i135] = $d43;

        i135 = i135 + 1;

        goto label096;

     label097:
        i136 = 1;

     label098:
        $i35 = i92 - 1;

        if i136 >= $i35 goto label101;

        i137 = 0;

     label099:
        if i137 >= i1 goto label100;

        $r55 = r99[i136];

        $d39 = $r55[i137];

        $d37 = r91[i136];

        $r56 = r92[i136];

        $d36 = $r56[i137];

        $d38 = $d37 * $d36;

        $d40 = $d39 + $d38;

        $r55[i137] = $d40;

        i137 = i137 + 1;

        goto label099;

     label100:
        i136 = i136 + 1;

        goto label098;

     label101:
        i138 = 0;

     label102:
        if i138 >= i1 goto label103;

        $r53 = r99[0];

        $d34 = $r53[i138];

        $d32 = r17[0];

        $r54 = r98[0];

        $d31 = $r54[i138];

        $d33 = $d32 * $d31;

        $d35 = $d34 + $d33;

        $r53[i138] = $d35;

        i138 = i138 + 1;

        goto label102;

     label103:
        i139 = 1;

     label104:
        $i36 = i92 - 1;

        if i139 >= $i36 goto label107;

        i140 = 0;

     label105:
        if i140 >= i1 goto label106;

        $r51 = r99[i139];

        $d29 = $r51[i140];

        $d27 = r17[i139];

        $r52 = r98[i139];

        $d26 = $r52[i140];

        $d28 = $d27 * $d26;

        $d30 = $d29 + $d28;

        $r51[i140] = $d30;

        i140 = i140 + 1;

        goto label105;

     label106:
        i139 = i139 + 1;

        goto label104;

     label107:
        $i37 = lengthof r7;

        r100 = newmultiarray (double)[$i37][i1];

        i141 = 0;

     label108:
        $i38 = i92 - 1;

        if i141 >= $i38 goto label109;

        $i39 = i88 + i141;

        $r50 = r99[i141];

        r100[$i39] = $r50;

        i141 = i141 + 1;

        goto label108;

     label109:
        return r100;
    }

    public double[] presentValueDDSensitivity(com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionPhysicalFixedIbor, com.opengamma.analytics.financial.model.interestrate.definition.LiborMarketModelDisplacedDiffusionDataBundle)
    {
        com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionPhysicalFixedIborLMMDDMethod r0;
        com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionPhysicalFixedIbor r1;
        com.opengamma.analytics.financial.model.interestrate.definition.LiborMarketModelDisplacedDiffusionDataBundle r2;
        com.opengamma.analytics.financial.interestrate.annuity.derivative.AnnuityPaymentFixed r3;
        com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve r4;
        int i0, i1, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43, $i44, $i45, $i46, $i47, $i48, $i49, $i50, $i51, $i52, $i53, $i54, $i55, $i56, $i57, $i58, $i59, $i60, $i61, $i62, $i63, $i64, $i65, $i66, $i67, $i68, $i69, $i70, $i71, $i72, $i73, $i74, $i75, $i76, $i78, $i79, $i80, $i82, $i83, $i84, $i85, $i86, $i87, i88, i89, i90, i91, $i92, i93, i94, i95, i96, i97, i98, i99, i100, i101, i102, i103, i104, i105, i106, i107, i108, i109, i110, i111, i112, i113, i114, i115, i116, i117, i118, i119, i120, i121, i122, i123, i124, i125, i126, i127, i128, i129, i130, i131, i132, i133, i134, i135, i136, i137, i138, i139;
        double d0, d1, d2, d3, d5, d6, d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21, $d22, $d23, $d24, $d25, $d26, $d27, $d28, $d29, $d30, $d31, $d32, $d33, $d34, $d35, $d36, $d37, $d38, $d39, $d40, $d41, $d42, $d43, $d44, $d45, $d46, $d47, $d48, $d49, $d50, $d51, $d52, $d53, $d54, $d55, $d56, $d57, $d58, $d59, $d60, $d61, $d62, $d63, $d64, $d65, $d66, $d67, $d68, $d69, $d70, $d71, $d72, $d73, $d74, $d75, $d76, $d77, $d78, $d79, $d80, $d81, $d82, $d83, $d84, $d85, $d86, $d87, $d88, $d89, $d90, $d91, $d92, $d93, $d94, $d95, $d96, $d97, $d98, $d99, $d100, $d101, $d102, $d103, $d104, $d105, $d106, $d107, $d108, $d109, $d110, $d111, $d112, $d113, $d114, $d115, $d116, $d117, $d118, $d119, $d120, $d121, $d122, $d123, $d124, $d125, $d126, $d127, $d128, $d129, $d130, $d131, $d132, $d133, $d134, $d135, $d136, $d137, $d138, $d139, $d140, $d141, $d142, $d143, $d144, $d145, $d146, $d147, $d148, $d149, $d150, $d151, $d152, $d153, $d154, $d155, $d156, $d157, $d158, $d159, $d160, $d161, $d162, $d163, $d164, $d165, $d166, $d167, $d168, $d169, $d170, $d171, $d172, $d173, $d174, $d175, $d176, $d177, $d178, $d179, $d180, $d181, $d182, $d183, $d184, $d185, $d186, $d187, $d188, $d189, $d190, $d191, $d192, $d193, $d194, $d195, $d196, $d197, $d198, $d199, $d200, $d201, $d202, $d203, $d204, $d205, $d206, $d207, $d208, $d209, $d210, $d211, $d212, $d213, $d214, $d215, $d216, $d217, $d218, $d219, $d220, $d221, $d222, $d223, $d224, $d225, $d226, $d227, $d228, $d229, $d230, $d231, $d232, $d233, $d234, $d235, $d236, $d237, $d238, $d239, $d240, $d241, $d242, $d243, $d244, $d245, $d246, $d247, $d248, $d249, $d250, $d251, $d252, $d253, $d254, d255, d256, d257, d258, d259, d260, d261, d262, d263, d264, d265;
        boolean z0, $z1;
        double[] r5, r6, r8, r10, r11, r12, r13, r14, r15, r16, r17, r19, r20, r21, r22, r24, r28, r29, r30, $r43, $r45, $r50, $r51, $r52, $r53, $r54, $r55, $r56, $r57, $r58, $r59, $r60, $r61, $r62, $r63, $r64, $r65, $r66, $r67, $r68, $r69, $r70, $r71, $r72, $r73, $r74, $r75, r80, r82, r83, r84, r86, r87, r88, r89, r90, r92, r93, r94;
        double[][] r7, r18, r23, r81, r85, r91;
        int[] r9;
        com.opengamma.analytics.financial.interestrate.swap.derivative.SwapFixedCoupon $r31;
        com.opengamma.analytics.financial.interestrate.CashFlowEquivalentCalculator $r32;
        java.lang.Object $r33;
        java.lang.String $r34;
        com.opengamma.analytics.financial.interestrate.payments.derivative.Payment $r35, $r37, $r76, $r78;
        com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed $r36, $r38, $r77, $r79;
        byte $b2, $b77, $b81;
        com.opengamma.analytics.financial.model.interestrate.definition.LiborMarketModelDisplacedDiffusionParameters $r39, $r40, $r41, $r42, $r44, $r46;
        com.opengamma.analytics.financial.model.option.pricing.analytic.formula.EuropeanVanillaOption $r47;
        com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackPriceFunction $r48;
        com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackFunctionData $r49;

        r0 := @this: com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionPhysicalFixedIborLMMDDMethod;

        r1 := @parameter0: com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionPhysicalFixedIbor;

        r2 := @parameter1: com.opengamma.analytics.financial.model.interestrate.definition.LiborMarketModelDisplacedDiffusionDataBundle;

        $r31 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionPhysicalFixedIbor: com.opengamma.analytics.financial.interestrate.swap.derivative.SwapFixedCoupon getUnderlyingSwap()>();

        $r32 = <com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionPhysicalFixedIborLMMDDMethod: com.opengamma.analytics.financial.interestrate.CashFlowEquivalentCalculator CFEC>;

        $r33 = virtualinvoke $r31.<com.opengamma.analytics.financial.interestrate.swap.derivative.SwapFixedCoupon: java.lang.Object accept(com.opengamma.analytics.financial.interestrate.InstrumentDerivativeVisitor,java.lang.Object)>($r32, r2);

        r3 = (com.opengamma.analytics.financial.interestrate.annuity.derivative.AnnuityPaymentFixed) $r33;

        $r34 = virtualinvoke r3.<com.opengamma.analytics.financial.interestrate.annuity.derivative.AnnuityPaymentFixed: java.lang.String getDiscountCurve()>();

        r4 = virtualinvoke r2.<com.opengamma.analytics.financial.model.interestrate.definition.LiborMarketModelDisplacedDiffusionDataBundle: com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve getCurve(java.lang.String)>($r34);

        i0 = virtualinvoke r3.<com.opengamma.analytics.financial.interestrate.annuity.derivative.AnnuityPaymentFixed: int getNumberOfPayments()>();

        $r35 = virtualinvoke r3.<com.opengamma.analytics.financial.interestrate.annuity.derivative.AnnuityPaymentFixed: com.opengamma.analytics.financial.interestrate.payments.derivative.Payment getNthPayment(int)>(0);

        $r36 = (com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed) $r35;

        $d8 = virtualinvoke $r36.<com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed: double getAmount()>();

        d0 = staticinvoke <java.lang.Math: double signum(double)>($d8);

        $r37 = virtualinvoke r3.<com.opengamma.analytics.financial.interestrate.annuity.derivative.AnnuityPaymentFixed: com.opengamma.analytics.financial.interestrate.payments.derivative.Payment getNthPayment(int)>(0);

        $r38 = (com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed) $r37;

        $d9 = virtualinvoke $r38.<com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed: double getAmount()>();

        $b2 = $d9 cmpg 0.0;

        if $b2 >= 0 goto label001;

        $z1 = 1;

        goto label002;

     label001:
        $z1 = 0;

     label002:
        z0 = $z1;

        r5 = newarray (double)[i0];

        r6 = newarray (double)[i0];

        i88 = 0;

     label003:
        if i88 >= i0 goto label004;

        $r76 = virtualinvoke r3.<com.opengamma.analytics.financial.interestrate.annuity.derivative.AnnuityPaymentFixed: com.opengamma.analytics.financial.interestrate.payments.derivative.Payment getNthPayment(int)>(i88);

        $r77 = (com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed) $r76;

        $d251 = virtualinvoke $r77.<com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed: double getPaymentTime()>();

        r5[i88] = $d251;

        $r78 = virtualinvoke r3.<com.opengamma.analytics.financial.interestrate.annuity.derivative.AnnuityPaymentFixed: com.opengamma.analytics.financial.interestrate.payments.derivative.Payment getNthPayment(int)>(i88);

        $r79 = (com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed) $r78;

        $d252 = virtualinvoke $r79.<com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed: double getAmount()>();

        $d253 = neg d0;

        $d254 = $d252 * $d253;

        r6[i88] = $d254;

        i88 = i88 + 1;

        goto label003;

     label004:
        d255 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionPhysicalFixedIbor: double getTimeToExpiry()>();

        $r39 = virtualinvoke r2.<com.opengamma.analytics.financial.model.interestrate.definition.LiborMarketModelDisplacedDiffusionDataBundle: com.opengamma.analytics.financial.model.interestrate.definition.LiborMarketModelDisplacedDiffusionParameters getLmmParameter()>();

        i1 = virtualinvoke $r39.<com.opengamma.analytics.financial.model.interestrate.definition.LiborMarketModelDisplacedDiffusionParameters: int getNbFactor()>();

        $r40 = virtualinvoke r2.<com.opengamma.analytics.financial.model.interestrate.definition.LiborMarketModelDisplacedDiffusionDataBundle: com.opengamma.analytics.financial.model.interestrate.definition.LiborMarketModelDisplacedDiffusionParameters getLmmParameter()>();

        r7 = virtualinvoke $r40.<com.opengamma.analytics.financial.model.interestrate.definition.LiborMarketModelDisplacedDiffusionParameters: double[][] getVolatility()>();

        $r41 = virtualinvoke r2.<com.opengamma.analytics.financial.model.interestrate.definition.LiborMarketModelDisplacedDiffusionDataBundle: com.opengamma.analytics.financial.model.interestrate.definition.LiborMarketModelDisplacedDiffusionParameters getLmmParameter()>();

        r8 = virtualinvoke $r41.<com.opengamma.analytics.financial.model.interestrate.definition.LiborMarketModelDisplacedDiffusionParameters: double[] getIborTime()>();

        r9 = newarray (int)[i0];

        i89 = i0 - 1;

        i90 = 0;

        i91 = 0;

     label005:
        if i91 >= i0 goto label011;

        $d244 = r5[i91];

        $i71 = staticinvoke <java.util.Arrays: int binarySearch(double[],double)>(r8, $d244);

        r9[i91] = $i71;

        $i72 = r9[i91];

        if $i72 >= 0 goto label008;

        $i74 = r9[i91];

        $i75 = neg $i74;

        $i76 = $i75 - 1;

        $d246 = r8[$i76];

        $d245 = r5[i91];

        $d247 = $d246 - $d245;

        $b77 = $d247 cmpg 0.001;

        if $b77 >= 0 goto label006;

        $i85 = r9[i91];

        $i86 = neg $i85;

        $i87 = $i86 - 1;

        r9[i91] = $i87;

        goto label008;

     label006:
        $d249 = r5[i91];

        $i78 = r9[i91];

        $i79 = neg $i78;

        $i80 = $i79 - 2;

        $d248 = r8[$i80];

        $d250 = $d249 - $d248;

        $b81 = $d250 cmpg 0.001;

        if $b81 >= 0 goto label007;

        $i82 = r9[i91];

        $i83 = neg $i82;

        $i84 = $i83 - 2;

        r9[i91] = $i84;

        goto label008;

     label007:
        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>(1, "Instrument time incompatible with LMM");

     label008:
        $i92 = r9[i91];

        if $i92 >= i89 goto label009;

        i89 = r9[i91];

     label009:
        $i73 = r9[i91];

        if $i73 <= i90 goto label010;

        i90 = r9[i91];

     label010:
        i91 = i91 + 1;

        goto label005;

     label011:
        $i3 = i90 - i89;

        i93 = $i3 + 1;

        r10 = newarray (double)[i93];

        i94 = 0;

     label012:
        if i94 >= i0 goto label013;

        $i69 = r9[i94];

        $i70 = $i69 - i89;

        $d243 = r6[i94];

        r10[$i70] = $d243;

        i94 = i94 + 1;

        goto label012;

     label013:
        r80 = newarray (double)[i93];

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r8, i89, r80, 0, i93);

        r11 = newarray (double)[i93];

        i95 = 0;

     label014:
        if i95 >= i93 goto label015;

        $d241 = r80[i95];

        $d242 = virtualinvoke r4.<com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve: double getDiscountFactor(double)>($d241);

        r11[i95] = $d242;

        i95 = i95 + 1;

        goto label014;

     label015:
        $i4 = i93 - 1;

        r81 = newmultiarray (double)[$i4][i1];

        $i5 = i93 - 1;

        r12 = newarray (double)[$i5];

        $r42 = virtualinvoke r2.<com.opengamma.analytics.financial.model.interestrate.definition.LiborMarketModelDisplacedDiffusionDataBundle: com.opengamma.analytics.financial.model.interestrate.definition.LiborMarketModelDisplacedDiffusionParameters getLmmParameter()>();

        $r43 = virtualinvoke $r42.<com.opengamma.analytics.financial.model.interestrate.definition.LiborMarketModelDisplacedDiffusionParameters: double[] getAccrualFactor()>();

        $i6 = i93 - 1;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r43, i89, r12, 0, $i6);

        $i7 = i93 - 1;

        r13 = newarray (double)[$i7];

        $r44 = virtualinvoke r2.<com.opengamma.analytics.financial.model.interestrate.definition.LiborMarketModelDisplacedDiffusionDataBundle: com.opengamma.analytics.financial.model.interestrate.definition.LiborMarketModelDisplacedDiffusionParameters getLmmParameter()>();

        $r45 = virtualinvoke $r44.<com.opengamma.analytics.financial.model.interestrate.definition.LiborMarketModelDisplacedDiffusionParameters: double[] getDisplacement()>();

        $i8 = i93 - 1;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r45, i89, r13, 0, $i8);

        $i9 = i93 - 1;

        r14 = newarray (double)[$i9];

        $r46 = virtualinvoke r2.<com.opengamma.analytics.financial.model.interestrate.definition.LiborMarketModelDisplacedDiffusionDataBundle: com.opengamma.analytics.financial.model.interestrate.definition.LiborMarketModelDisplacedDiffusionParameters getLmmParameter()>();

        d1 = virtualinvoke $r46.<com.opengamma.analytics.financial.model.interestrate.definition.LiborMarketModelDisplacedDiffusionParameters: double getMeanReversion()>();

        i96 = 0;

     label016:
        $i10 = i93 - 1;

        if i96 >= $i10 goto label017;

        $i67 = i89 + i96;

        $r75 = r7[$i67];

        r81[i96] = $r75;

        $d236 = r11[i96];

        $i68 = i96 + 1;

        $d235 = r11[$i68];

        $d237 = $d236 / $d235;

        $d239 = $d237 - 1.0;

        $d238 = r12[i96];

        $d240 = $d239 / $d238;

        r14[i96] = $d240;

        i96 = i96 + 1;

        goto label016;

     label017:
        $i11 = i93 + 1;

        r82 = newarray (double)[$i11];

        d2 = r10[0];

        r82[0] = d2;

        r82[1] = 0.0;

        $i12 = i93 - 1;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r10, 1, r82, 2, $i12);

        r15 = newarray (double)[i93];

        r16 = newarray (double)[i93];

        d256 = 0.0;

        i97 = 0;

     label018:
        if i97 >= i93 goto label019;

        $d229 = r11[i97];

        $d228 = r11[0];

        $d230 = $d229 / $d228;

        r15[i97] = $d230;

        $i66 = i97 + 1;

        $d232 = r82[$i66];

        $d231 = r15[i97];

        $d233 = $d232 * $d231;

        r16[i97] = $d233;

        $d234 = r16[i97];

        d256 = d256 + $d234;

        i97 = i97 + 1;

        goto label018;

     label019:
        d257 = neg d2;

        $d10 = d256 + d257;

        d3 = $d10 / 2.0;

        $i13 = i93 - 1;

        r17 = newarray (double)[$i13];

        $i14 = i93 - 1;

        r18 = newmultiarray (double)[$i14][i1];

        i98 = 0;

     label020:
        $i15 = i93 - 1;

        if i98 >= $i15 goto label021;

        $d221 = r14[i98];

        $d220 = r13[i98];

        $d226 = $d221 + $d220;

        $d224 = r14[i98];

        $d222 = r12[i98];

        $d223 = 1.0 / $d222;

        $d225 = $d224 + $d223;

        $d227 = $d226 / $d225;

        r17[i98] = $d227;

        i98 = i98 + 1;

        goto label020;

     label021:
        i99 = 0;

     label022:
        if i99 >= i1 goto label023;

        $r74 = r18[0];

        $d218 = r17[0];

        $r73 = r81[0];

        $d217 = $r73[i99];

        $d219 = $d218 * $d217;

        $r74[i99] = $d219;

        i99 = i99 + 1;

        goto label022;

     label023:
        i100 = 1;

     label024:
        $i16 = i93 - 1;

        if i100 >= $i16 goto label027;

        i101 = 0;

     label025:
        if i101 >= i1 goto label026;

        $r72 = r18[i100];

        $i65 = i100 - 1;

        $r70 = r18[$i65];

        $d215 = $r70[i101];

        $d213 = r17[i100];

        $r71 = r81[i100];

        $d212 = $r71[i101];

        $d214 = $d213 * $d212;

        $d216 = $d215 + $d214;

        $r72[i101] = $d216;

        i101 = i101 + 1;

        goto label025;

     label026:
        i100 = i100 + 1;

        goto label024;

     label027:
        $d11 = 2.0 * d1;

        $d12 = $d11 * d255;

        $d13 = staticinvoke <java.lang.Math: double exp(double)>($d12);

        $d15 = $d13 - 1.0;

        $d14 = 2.0 * d1;

        d258 = $d15 / $d14;

        r19 = newarray (double)[i93];

        r20 = newarray (double)[i93];

        i102 = 0;

     label028:
        $i17 = i93 - 1;

        if i102 >= $i17 goto label031;

        i103 = 0;

     label029:
        if i103 >= i1 goto label030;

        $i64 = i102 + 1;

        $d210 = r20[$i64];

        $r68 = r18[i102];

        $d208 = $r68[i103];

        $r69 = r18[i102];

        $d207 = $r69[i103];

        $d209 = $d208 * $d207;

        $d211 = $d210 + $d209;

        r20[$i64] = $d211;

        i103 = i103 + 1;

        goto label029;

     label030:
        $i61 = i102 + 1;

        $i60 = i102 + 1;

        $d203 = r20[$i60];

        $d204 = $d203 * d258;

        r20[$i61] = $d204;

        $i63 = i102 + 1;

        $i62 = i102 + 1;

        $d205 = r20[$i62];

        $d206 = staticinvoke <java.lang.Math: double sqrt(double)>($d205);

        r19[$i63] = $d206;

        i102 = i102 + 1;

        goto label028;

     label031:
        d259 = neg d3;

        d260 = 0.0;

        i104 = 0;

     label032:
        if i104 >= i93 goto label033;

        $d198 = r16[i104];

        $d195 = r16[i104];

        $d194 = r20[i104];

        $d196 = $d195 * $d194;

        $d197 = $d196 / 2.0;

        $d199 = $d198 - $d197;

        d259 = d259 + $d199;

        $d201 = r16[i104];

        $d200 = r19[i104];

        $d202 = $d201 * $d200;

        d260 = d260 + $d202;

        i104 = i104 + 1;

        goto label032;

     label033:
        d261 = d259 / d260;

        r21 = newarray (double)[i93];

        i105 = 0;

     label034:
        if i105 >= i93 goto label035;

        $d192 = r15[i105];

        $d186 = r19[i105];

        $d187 = d261 * $d186;

        $d190 = 1.0 - $d187;

        $d188 = r20[i105];

        $d189 = $d188 / 2.0;

        $d191 = $d190 - $d189;

        $d193 = $d192 * $d191;

        r21[i105] = $d193;

        i105 = i105 + 1;

        goto label034;

     label035:
        $i18 = i93 - 1;

        r83 = newarray (double)[$i18];

        r22 = newarray (double)[i93];

        i106 = 0;

     label036:
        $i19 = i93 - 1;

        if i106 >= $i19 goto label037;

        $d181 = r21[i106];

        $i59 = i106 + 1;

        $d180 = r21[$i59];

        $d182 = $d181 / $d180;

        $d184 = $d182 - 1.0;

        $d183 = r12[i106];

        $d185 = $d184 / $d183;

        r83[i106] = $d185;

        i106 = i106 + 1;

        goto label036;

     label037:
        i107 = 0;

     label038:
        if i107 >= i93 goto label039;

        $i58 = i107 + 1;

        $d177 = r82[$i58];

        $d176 = r21[i107];

        $d178 = $d177 * $d176;

        $d179 = $d178 / d3;

        r22[i107] = $d179;

        i107 = i107 + 1;

        goto label038;

     label039:
        $i20 = i93 - 1;

        r84 = newarray (double)[$i20];

        $i21 = i93 - 1;

        r23 = newmultiarray (double)[$i21][i1];

        i108 = 0;

     label040:
        $i22 = i93 - 1;

        if i108 >= $i22 goto label041;

        $d169 = r83[i108];

        $d168 = r13[i108];

        $d174 = $d169 + $d168;

        $d172 = r83[i108];

        $d170 = r12[i108];

        $d171 = 1.0 / $d170;

        $d173 = $d172 + $d171;

        $d175 = $d174 / $d173;

        r84[i108] = $d175;

        i108 = i108 + 1;

        goto label040;

     label041:
        i109 = 0;

     label042:
        if i109 >= i1 goto label043;

        $r67 = r23[0];

        $d166 = r84[0];

        $r66 = r81[0];

        $d165 = $r66[i109];

        $d167 = $d166 * $d165;

        $r67[i109] = $d167;

        i109 = i109 + 1;

        goto label042;

     label043:
        i110 = 1;

     label044:
        $i23 = i93 - 1;

        if i110 >= $i23 goto label047;

        i111 = 0;

     label045:
        if i111 >= i1 goto label046;

        $r65 = r23[i110];

        $i57 = i110 - 1;

        $r63 = r23[$i57];

        $d163 = $r63[i111];

        $d161 = r84[i110];

        $r64 = r81[i110];

        $d160 = $r64[i111];

        $d162 = $d161 * $d160;

        $d164 = $d163 + $d162;

        $r65[i111] = $d164;

        i111 = i111 + 1;

        goto label045;

     label046:
        i110 = i110 + 1;

        goto label044;

     label047:
        d262 = 0.0;

        r24 = newarray (double)[i1];

        i112 = 0;

     label048:
        if i112 >= i1 goto label051;

        i113 = 0;

     label049:
        $i55 = i93 - 1;

        if i113 >= $i55 goto label050;

        $d158 = r24[i112];

        $i56 = i113 + 1;

        $d156 = r22[$i56];

        $r62 = r23[i113];

        $d155 = $r62[i112];

        $d157 = $d156 * $d155;

        $d159 = $d158 + $d157;

        r24[i112] = $d159;

        i113 = i113 + 1;

        goto label049;

     label050:
        $d153 = r24[i112];

        $d152 = r24[i112];

        $d154 = $d153 * $d152;

        d262 = d262 + $d154;

        i112 = i112 + 1;

        goto label048;

     label051:
        $d16 = d262 * d258;

        d263 = staticinvoke <java.lang.Math: double sqrt(double)>($d16);

        $r47 = new com.opengamma.analytics.financial.model.option.pricing.analytic.formula.EuropeanVanillaOption;

        specialinvoke $r47.<com.opengamma.analytics.financial.model.option.pricing.analytic.formula.EuropeanVanillaOption: void <init>(double,double,boolean)>(d257, 1.0, z0);

        $r48 = new com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackPriceFunction;

        specialinvoke $r48.<com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackPriceFunction: void <init>()>();

        $r49 = new com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackFunctionData;

        specialinvoke $r49.<com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackFunctionData: void <init>(double,double,double)>(d256, 1.0, d263);

        r28 = virtualinvoke $r48.<com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackPriceFunction: double[] getPriceAdjoint(com.opengamma.analytics.financial.model.option.pricing.analytic.formula.EuropeanVanillaOption,com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackFunctionData)>($r47, $r49);

        $d18 = r11[0];

        $d17 = r28[2];

        $d19 = $d18 * $d17;

        d5 = $d19 * 1.0;

        $d20 = 2.0 * d263;

        $d21 = d258 / $d20;

        d6 = $d21 * d5;

        r29 = newarray (double)[i1];

        i114 = 0;

     label052:
        if i114 >= i1 goto label053;

        $d149 = r24[i114];

        $d150 = 2.0 * $d149;

        $d151 = $d150 * d6;

        r29[i114] = $d151;

        i114 = i114 + 1;

        goto label052;

     label053:
        $i24 = i93 - 1;

        r85 = newmultiarray (double)[$i24][i1];

        i115 = 0;

     label054:
        $i25 = i93 - 1;

        if i115 >= $i25 goto label057;

        i116 = 0;

     label055:
        if i116 >= i1 goto label056;

        $r61 = r85[i115];

        $i54 = i115 + 1;

        $d147 = r22[$i54];

        $d146 = r29[i116];

        $d148 = $d147 * $d146;

        $r61[i116] = $d148;

        i116 = i116 + 1;

        goto label055;

     label056:
        i115 = i115 + 1;

        goto label054;

     label057:
        i117 = i93 - 3;

     label058:
        if i117 < 0 goto label061;

        i118 = 0;

     label059:
        if i118 >= i1 goto label060;

        $r59 = r85[i117];

        $d144 = $r59[i118];

        $i53 = i117 + 1;

        $r60 = r85[$i53];

        $d143 = $r60[i118];

        $d145 = $d144 + $d143;

        $r59[i118] = $d145;

        i118 = i118 + 1;

        goto label059;

     label060:
        i117 = i117 + -1;

        goto label058;

     label061:
        $i26 = i93 - 1;

        r86 = newarray (double)[$i26];

        i119 = 0;

     label062:
        $i27 = i93 - 1;

        if i119 >= $i27 goto label065;

        i120 = 0;

     label063:
        if i120 >= i1 goto label064;

        $d141 = r86[i119];

        $r57 = r81[i119];

        $d139 = $r57[i120];

        $r58 = r85[i119];

        $d138 = $r58[i120];

        $d140 = $d139 * $d138;

        $d142 = $d141 + $d140;

        r86[i119] = $d142;

        i120 = i120 + 1;

        goto label063;

     label064:
        i119 = i119 + 1;

        goto label062;

     label065:
        r87 = newarray (double)[i93];

        i121 = 0;

     label066:
        if i121 >= i1 goto label069;

        i122 = 0;

     label067:
        $i51 = i93 - 1;

        if i122 >= $i51 goto label068;

        $i52 = i122 + 1;

        $d136 = r87[$i52];

        $r56 = r23[i122];

        $d134 = $r56[i121];

        $d133 = r29[i121];

        $d135 = $d134 * $d133;

        $d137 = $d136 + $d135;

        r87[$i52] = $d137;

        i122 = i122 + 1;

        goto label067;

     label068:
        i121 = i121 + 1;

        goto label066;

     label069:
        $i28 = i93 - 1;

        r88 = newarray (double)[$i28];

        i123 = 0;

     label070:
        $i29 = i93 - 1;

        if i123 >= $i29 goto label071;

        $d115 = r83[i123];

        $d113 = r12[i123];

        $d114 = 1.0 / $d113;

        $d119 = $d115 + $d114;

        $d117 = r83[i123];

        $d116 = r13[i123];

        $d118 = $d117 + $d116;

        $d129 = $d119 - $d118;

        $d122 = r83[i123];

        $d120 = r12[i123];

        $d121 = 1.0 / $d120;

        $d127 = $d122 + $d121;

        $d125 = r83[i123];

        $d123 = r12[i123];

        $d124 = 1.0 / $d123;

        $d126 = $d125 + $d124;

        $d128 = $d127 * $d126;

        $d131 = $d129 / $d128;

        $d130 = r86[i123];

        $d132 = $d131 * $d130;

        r88[i123] = $d132;

        i123 = i123 + 1;

        goto label070;

     label071:
        r89 = newarray (double)[i93];

        i124 = 0;

     label072:
        $i30 = i93 - 1;

        if i124 >= $i30 goto label073;

        $d99 = r89[i124];

        $i47 = i124 + 1;

        $d93 = r21[$i47];

        $d95 = 1.0 / $d93;

        $d94 = r12[i124];

        $d97 = $d95 / $d94;

        $d96 = r88[i124];

        $d98 = $d97 * $d96;

        $d100 = $d99 + $d98;

        r89[i124] = $d100;

        $i48 = i124 + 1;

        $d111 = r89[$i48];

        $d101 = r21[i124];

        $d105 = neg $d101;

        $i49 = i124 + 1;

        $d103 = r21[$i49];

        $i50 = i124 + 1;

        $d102 = r21[$i50];

        $d104 = $d103 * $d102;

        $d107 = $d105 / $d104;

        $d106 = r12[i124];

        $d109 = $d107 / $d106;

        $d108 = r88[i124];

        $d110 = $d109 * $d108;

        $d112 = $d111 + $d110;

        r89[$i48] = $d112;

        i124 = i124 + 1;

        goto label072;

     label073:
        i125 = 0;

     label074:
        if i125 >= i93 goto label075;

        $d91 = r89[i125];

        $i46 = i125 + 1;

        $d87 = r82[$i46];

        $d89 = $d87 / d3;

        $d88 = r87[i125];

        $d90 = $d89 * $d88;

        $d92 = $d91 + $d90;

        r89[i125] = $d92;

        i125 = i125 + 1;

        goto label074;

     label075:
        d264 = 0.0;

        i126 = 0;

     label076:
        if i126 >= i93 goto label077;

        $d81 = r15[i126];

        $d83 = neg $d81;

        $d82 = r19[i126];

        $d85 = $d83 * $d82;

        $d84 = r89[i126];

        $d86 = $d85 * $d84;

        d264 = d264 + $d86;

        i126 = i126 + 1;

        goto label076;

     label077:
        $d22 = 1.0 / d260;

        d265 = $d22 * d264;

        $d24 = neg d259;

        $d23 = d260 * d260;

        $d25 = $d24 / $d23;

        d7 = $d25 * d264;

        r30 = newarray (double)[i93];

        i127 = 0;

     label078:
        if i127 >= i93 goto label079;

        $d76 = r15[i127];

        $d77 = neg $d76;

        $d79 = $d77 * d261;

        $d78 = r89[i127];

        $d80 = $d79 * $d78;

        r30[i127] = $d80;

        i127 = i127 + 1;

        goto label078;

     label079:
        i128 = 0;

     label080:
        if i128 >= i93 goto label081;

        $d74 = r30[i128];

        $d72 = r16[i128];

        $d73 = $d72 * d7;

        $d75 = $d74 + $d73;

        r30[i128] = $d75;

        i128 = i128 + 1;

        goto label080;

     label081:
        r90 = newarray (double)[i93];

        i129 = 0;

     label082:
        if i129 >= i93 goto label083;

        $d67 = r15[i129];

        $d68 = neg $d67;

        $d70 = $d68 / 2.0;

        $d69 = r89[i129];

        $d71 = $d70 * $d69;

        r90[i129] = $d71;

        i129 = i129 + 1;

        goto label082;

     label083:
        i130 = 0;

     label084:
        if i130 >= i93 goto label085;

        $d65 = r90[i130];

        $d61 = r16[i130];

        $d62 = neg $d61;

        $d63 = $d62 / 2.0;

        $d64 = $d63 * d265;

        $d66 = $d65 + $d64;

        r90[i130] = $d66;

        i130 = i130 + 1;

        goto label084;

     label085:
        i131 = 0;

     label086:
        $i31 = i93 - 1;

        if i131 >= $i31 goto label087;

        $i43 = i131 + 1;

        $d59 = r90[$i43];

        $i44 = i131 + 1;

        $d55 = r19[$i44];

        $d57 = 0.5 / $d55;

        $i45 = i131 + 1;

        $d56 = r30[$i45];

        $d58 = $d57 * $d56;

        $d60 = $d59 + $d58;

        r90[$i43] = $d60;

        i131 = i131 + 1;

        goto label086;

     label087:
        $i32 = i93 - 1;

        r91 = newmultiarray (double)[$i32][i1];

        i132 = 0;

     label088:
        $i33 = i93 - 1;

        if i132 >= $i33 goto label091;

        i133 = 0;

     label089:
        if i133 >= i1 goto label090;

        $r55 = r91[i132];

        $r54 = r18[i132];

        $d50 = $r54[i133];

        $d51 = 2.0 * $d50;

        $d53 = $d51 * d258;

        $i42 = i132 + 1;

        $d52 = r90[$i42];

        $d54 = $d53 * $d52;

        $r55[i133] = $d54;

        i133 = i133 + 1;

        goto label089;

     label090:
        i132 = i132 + 1;

        goto label088;

     label091:
        i134 = i93 - 3;

     label092:
        if i134 < 0 goto label095;

        i135 = 0;

     label093:
        if i135 >= i1 goto label094;

        $r52 = r91[i134];

        $d48 = $r52[i135];

        $i41 = i134 + 1;

        $r53 = r91[$i41];

        $d47 = $r53[i135];

        $d49 = $d48 + $d47;

        $r52[i135] = $d49;

        i135 = i135 + 1;

        goto label093;

     label094:
        i134 = i134 + -1;

        goto label092;

     label095:
        $i34 = i93 - 1;

        r92 = newarray (double)[$i34];

        i136 = 0;

     label096:
        $i35 = i93 - 1;

        if i136 >= $i35 goto label099;

        i137 = 0;

     label097:
        if i137 >= i1 goto label098;

        $d45 = r92[i136];

        $r50 = r81[i136];

        $d43 = $r50[i137];

        $r51 = r91[i136];

        $d42 = $r51[i137];

        $d44 = $d43 * $d42;

        $d46 = $d45 + $d44;

        r92[i136] = $d46;

        i137 = i137 + 1;

        goto label097;

     label098:
        i136 = i136 + 1;

        goto label096;

     label099:
        $i36 = i93 - 1;

        r93 = newarray (double)[$i36];

        i138 = 0;

     label100:
        $i37 = i93 - 1;

        if i138 >= $i37 goto label101;

        $d37 = r14[i138];

        $d35 = r12[i138];

        $d36 = 1.0 / $d35;

        $d38 = $d37 + $d36;

        $d40 = 1.0 / $d38;

        $d39 = r92[i138];

        $d41 = $d40 * $d39;

        r93[i138] = $d41;

        i138 = i138 + 1;

        goto label100;

     label101:
        i139 = 0;

     label102:
        $i38 = i93 - 1;

        if i139 >= $i38 goto label103;

        $d33 = r93[i139];

        $d28 = r83[i139];

        $d26 = r12[i139];

        $d27 = 1.0 / $d26;

        $d29 = $d28 + $d27;

        $d31 = 1.0 / $d29;

        $d30 = r86[i139];

        $d32 = $d31 * $d30;

        $d34 = $d33 + $d32;

        r93[i139] = $d34;

        i139 = i139 + 1;

        goto label102;

     label103:
        $i39 = lengthof r7;

        r94 = newarray (double)[$i39];

        $i40 = i93 - 1;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r93, 0, r94, i89, $i40);

        return r94;
    }

    public com.opengamma.analytics.financial.interestrate.InterestRateCurveSensitivity presentValueCurveSensitivity(com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionPhysicalFixedIbor, com.opengamma.analytics.financial.model.interestrate.definition.LiborMarketModelDisplacedDiffusionDataBundle)
    {
        com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionPhysicalFixedIborLMMDDMethod r0;
        com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionPhysicalFixedIbor r1;
        com.opengamma.analytics.financial.model.interestrate.definition.LiborMarketModelDisplacedDiffusionDataBundle r2;
        com.opengamma.analytics.financial.interestrate.annuity.derivative.AnnuityPaymentFixed r3;
        com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve r4;
        int i0, i1, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i41, $i42, $i43, $i44, $i45, $i46, $i47, $i48, $i49, $i50, $i51, $i52, $i53, $i54, $i55, $i56, $i57, $i58, $i59, $i60, $i61, $i62, $i63, $i64, $i65, $i66, $i67, $i68, $i69, $i70, $i71, $i72, $i73, $i74, $i75, $i76, $i77, $i78, $i79, $i80, $i81, $i82, $i83, $i84, $i85, $i86, $i87, $i89, $i90, $i91, $i93, $i94, $i95, $i96, $i97, $i98, i99, i100, i101, i102, $i103, i104, i105, i106, i107, i108, i109, i110, i111, i112, i113, i114, i115, i116, i117, i118, i119, i120, i121, i122, i123, i124, i125, i126, i127, i128, i129, i130, i131, i132, i133, i134, i135, i136, i137, i138, i139, i140, i141, i142, i143, i144, i145, i146, i147, i148, i149, i150, i151, i152, i153, i154, i155, i156, i157, i158;
        double d0, d1, d2, d3, d5, d6, d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21, $d22, $d23, $d24, $d25, $d26, $d27, $d28, $d29, $d30, $d31, $d32, $d33, $d34, $d35, $d36, $d37, $d38, $d39, $d40, $d41, $d42, $d43, $d44, $d45, $d46, $d47, $d48, $d49, $d50, $d51, $d52, $d53, $d54, $d55, $d56, $d57, $d58, $d59, $d60, $d61, $d62, $d63, $d64, $d65, $d66, $d67, $d68, $d69, $d70, $d71, $d72, $d73, $d74, $d75, $d76, $d77, $d78, $d79, $d80, $d81, $d82, $d83, $d84, $d85, $d86, $d87, $d88, $d89, $d90, $d91, $d92, $d93, $d94, $d95, $d96, $d97, $d98, $d99, $d100, $d101, $d102, $d103, $d104, $d105, $d106, $d107, $d108, $d109, $d110, $d111, $d112, $d113, $d114, $d115, $d116, $d117, $d118, $d119, $d120, $d121, $d122, $d123, $d124, $d125, $d126, $d127, $d128, $d129, $d130, $d131, $d132, $d133, $d134, $d135, $d136, $d137, $d138, $d139, $d140, $d141, $d142, $d143, $d146, $d147, $d148, $d149, $d150, $d151, $d152, $d153, $d154, $d155, $d156, $d157, $d158, $d159, $d160, $d161, $d162, $d163, $d164, $d165, $d166, $d167, $d168, $d169, $d170, $d171, $d172, $d173, $d174, $d175, $d176, $d177, $d178, $d179, $d180, $d181, $d182, $d183, $d184, $d185, $d186, $d187, $d188, $d189, $d190, $d191, $d192, $d193, $d194, $d195, $d196, $d197, $d198, $d199, $d200, $d201, $d202, $d203, $d204, $d205, $d206, $d207, $d208, $d209, $d210, $d211, $d212, $d213, $d214, $d215, $d216, $d217, $d218, $d219, $d220, $d221, $d222, $d223, $d224, $d225, $d226, $d227, $d228, $d229, $d230, $d231, $d232, $d233, $d234, $d235, $d236, $d237, $d238, $d239, $d240, $d241, $d242, $d243, $d244, $d245, $d246, $d247, $d248, $d249, $d250, $d251, $d252, $d253, $d254, $d255, $d256, $d257, $d258, $d259, $d260, $d261, $d262, $d263, $d264, $d265, $d266, $d267, $d268, $d269, $d270, $d271, $d272, $d273, $d274, $d275, $d276, $d277, $d278, $d279, $d280, $d281, $d282, $d283, $d284, $d285, $d286, $d287, $d288, $d289, $d290, $d291, $d292, $d293, $d294, $d295, $d296, $d297, $d298, $d299, $d300, $d301, $d302, $d303, $d304, $d305, $d306, $d307, $d308, $d309, $d310, $d311, $d312, $d313, $d314, $d315, $d316, $d317, $d318, $d319, $d320, $d321, $d322, $d323, $d324, $d325, $d326, $d327, $d328, $d329, $d330, $d331, $d332, $d333, $d334, $d335, $d336, $d337, $d338, $d339, $d340, $d341, $d342, $d343, $d344, $d345, $d346, $d347, $d348, $d349, $d350, $d351, $d352, $d353, $d354, $d355, $d356, $d357, $d358, $d359, $d360, $d361, $d362, $d363, $d364, $d365, $d366, $d367, d368, d369, d370, d371, d372, d373, d374, d375, d376, $d377, d378, d379, d380, d381, $d382, d383, d384, $d385, d386, $d387;
        boolean z0, $z1, $z2, $z3, $z4, $z6;
        double[] r5, r6, r8, r10, r11, r12, r13, r14, r15, r16, r17, r19, r20, r21, r22, r24, r28, r29, r30, r31, r32, $r47, $r49, $r68, $r69, $r70, $r71, $r72, $r73, $r74, $r75, $r76, $r77, $r78, $r79, $r80, $r81, $r82, $r83, $r84, $r85, $r86, $r87, $r88, $r89, $r90, $r91, $r92, $r93, r98, r100, r101, r102, r104, r105, r106, r107, r108, r110, r111, r112, r113, r114, r115;
        double[][] r7, r18, r23, r99, r103, r109;
        int[] r9;
        java.util.Map r33;
        com.opengamma.analytics.financial.interestrate.InterestRateCurveSensitivity r34, $r58, $r66, r119;
        com.opengamma.analytics.financial.interestrate.swap.derivative.SwapFixedCoupon $r35, $r59;
        com.opengamma.analytics.financial.interestrate.CashFlowEquivalentCalculator $r36;
        java.lang.Object $r37, $r61, $r65;
        java.lang.String $r38, $r56;
        com.opengamma.analytics.financial.interestrate.payments.derivative.Payment $r39, $r41, $r62, $r94, $r96;
        com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed $r40, $r42, $r63, $r95, $r97;
        byte $b2, $b88, $b92;
        com.opengamma.analytics.financial.model.interestrate.definition.LiborMarketModelDisplacedDiffusionParameters $r43, $r44, $r45, $r46, $r48, $r50;
        com.opengamma.analytics.financial.model.option.pricing.analytic.formula.EuropeanVanillaOption $r51;
        com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackPriceFunction $r52;
        com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackFunctionData $r53;
        java.util.ArrayList $r54;
        java.util.HashMap $r55;
        com.opengamma.analytics.financial.interestrate.CashFlowEquivalentCurveSensitivityCalculator $r60;
        java.lang.Double $r64;
        com.opengamma.util.tuple.DoublesPair r117;

        r0 := @this: com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionPhysicalFixedIborLMMDDMethod;

        r1 := @parameter0: com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionPhysicalFixedIbor;

        r2 := @parameter1: com.opengamma.analytics.financial.model.interestrate.definition.LiborMarketModelDisplacedDiffusionDataBundle;

        $r35 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionPhysicalFixedIbor: com.opengamma.analytics.financial.interestrate.swap.derivative.SwapFixedCoupon getUnderlyingSwap()>();

        $r36 = <com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionPhysicalFixedIborLMMDDMethod: com.opengamma.analytics.financial.interestrate.CashFlowEquivalentCalculator CFEC>;

        $r37 = virtualinvoke $r35.<com.opengamma.analytics.financial.interestrate.swap.derivative.SwapFixedCoupon: java.lang.Object accept(com.opengamma.analytics.financial.interestrate.InstrumentDerivativeVisitor,java.lang.Object)>($r36, r2);

        r3 = (com.opengamma.analytics.financial.interestrate.annuity.derivative.AnnuityPaymentFixed) $r37;

        $r38 = virtualinvoke r3.<com.opengamma.analytics.financial.interestrate.annuity.derivative.AnnuityPaymentFixed: java.lang.String getDiscountCurve()>();

        r4 = virtualinvoke r2.<com.opengamma.analytics.financial.model.interestrate.definition.LiborMarketModelDisplacedDiffusionDataBundle: com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve getCurve(java.lang.String)>($r38);

        i0 = virtualinvoke r3.<com.opengamma.analytics.financial.interestrate.annuity.derivative.AnnuityPaymentFixed: int getNumberOfPayments()>();

        $r39 = virtualinvoke r3.<com.opengamma.analytics.financial.interestrate.annuity.derivative.AnnuityPaymentFixed: com.opengamma.analytics.financial.interestrate.payments.derivative.Payment getNthPayment(int)>(0);

        $r40 = (com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed) $r39;

        $d8 = virtualinvoke $r40.<com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed: double getAmount()>();

        d0 = staticinvoke <java.lang.Math: double signum(double)>($d8);

        $r41 = virtualinvoke r3.<com.opengamma.analytics.financial.interestrate.annuity.derivative.AnnuityPaymentFixed: com.opengamma.analytics.financial.interestrate.payments.derivative.Payment getNthPayment(int)>(0);

        $r42 = (com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed) $r41;

        $d9 = virtualinvoke $r42.<com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed: double getAmount()>();

        $b2 = $d9 cmpg 0.0;

        if $b2 >= 0 goto label001;

        $z6 = 1;

        goto label002;

     label001:
        $z6 = 0;

     label002:
        z0 = $z6;

        r5 = newarray (double)[i0];

        r6 = newarray (double)[i0];

        i99 = 0;

     label003:
        if i99 >= i0 goto label004;

        $r94 = virtualinvoke r3.<com.opengamma.analytics.financial.interestrate.annuity.derivative.AnnuityPaymentFixed: com.opengamma.analytics.financial.interestrate.payments.derivative.Payment getNthPayment(int)>(i99);

        $r95 = (com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed) $r94;

        $d364 = virtualinvoke $r95.<com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed: double getPaymentTime()>();

        r5[i99] = $d364;

        $r96 = virtualinvoke r3.<com.opengamma.analytics.financial.interestrate.annuity.derivative.AnnuityPaymentFixed: com.opengamma.analytics.financial.interestrate.payments.derivative.Payment getNthPayment(int)>(i99);

        $r97 = (com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed) $r96;

        $d365 = virtualinvoke $r97.<com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed: double getAmount()>();

        $d366 = neg d0;

        $d367 = $d365 * $d366;

        r6[i99] = $d367;

        i99 = i99 + 1;

        goto label003;

     label004:
        d368 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionPhysicalFixedIbor: double getTimeToExpiry()>();

        $r43 = virtualinvoke r2.<com.opengamma.analytics.financial.model.interestrate.definition.LiborMarketModelDisplacedDiffusionDataBundle: com.opengamma.analytics.financial.model.interestrate.definition.LiborMarketModelDisplacedDiffusionParameters getLmmParameter()>();

        i1 = virtualinvoke $r43.<com.opengamma.analytics.financial.model.interestrate.definition.LiborMarketModelDisplacedDiffusionParameters: int getNbFactor()>();

        $r44 = virtualinvoke r2.<com.opengamma.analytics.financial.model.interestrate.definition.LiborMarketModelDisplacedDiffusionDataBundle: com.opengamma.analytics.financial.model.interestrate.definition.LiborMarketModelDisplacedDiffusionParameters getLmmParameter()>();

        r7 = virtualinvoke $r44.<com.opengamma.analytics.financial.model.interestrate.definition.LiborMarketModelDisplacedDiffusionParameters: double[][] getVolatility()>();

        $r45 = virtualinvoke r2.<com.opengamma.analytics.financial.model.interestrate.definition.LiborMarketModelDisplacedDiffusionDataBundle: com.opengamma.analytics.financial.model.interestrate.definition.LiborMarketModelDisplacedDiffusionParameters getLmmParameter()>();

        r8 = virtualinvoke $r45.<com.opengamma.analytics.financial.model.interestrate.definition.LiborMarketModelDisplacedDiffusionParameters: double[] getIborTime()>();

        r9 = newarray (int)[i0];

        i100 = i0 - 1;

        i101 = 0;

        i102 = 0;

     label005:
        if i102 >= i0 goto label011;

        $d357 = r5[i102];

        $i82 = staticinvoke <java.util.Arrays: int binarySearch(double[],double)>(r8, $d357);

        r9[i102] = $i82;

        $i83 = r9[i102];

        if $i83 >= 0 goto label008;

        $i85 = r9[i102];

        $i86 = neg $i85;

        $i87 = $i86 - 1;

        $d359 = r8[$i87];

        $d358 = r5[i102];

        $d360 = $d359 - $d358;

        $b88 = $d360 cmpg 0.001;

        if $b88 >= 0 goto label006;

        $i96 = r9[i102];

        $i97 = neg $i96;

        $i98 = $i97 - 1;

        r9[i102] = $i98;

        goto label008;

     label006:
        $d362 = r5[i102];

        $i89 = r9[i102];

        $i90 = neg $i89;

        $i91 = $i90 - 2;

        $d361 = r8[$i91];

        $d363 = $d362 - $d361;

        $b92 = $d363 cmpg 0.001;

        if $b92 >= 0 goto label007;

        $i93 = r9[i102];

        $i94 = neg $i93;

        $i95 = $i94 - 2;

        r9[i102] = $i95;

        goto label008;

     label007:
        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>(1, "Instrument time incompatible with LMM");

     label008:
        $i103 = r9[i102];

        if $i103 >= i100 goto label009;

        i100 = r9[i102];

     label009:
        $i84 = r9[i102];

        if $i84 <= i101 goto label010;

        i101 = r9[i102];

     label010:
        i102 = i102 + 1;

        goto label005;

     label011:
        $i3 = i101 - i100;

        i104 = $i3 + 1;

        r10 = newarray (double)[i104];

        i105 = 0;

     label012:
        if i105 >= i0 goto label013;

        $i80 = r9[i105];

        $i81 = $i80 - i100;

        $d356 = r6[i105];

        r10[$i81] = $d356;

        i105 = i105 + 1;

        goto label012;

     label013:
        r98 = newarray (double)[i104];

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r8, i100, r98, 0, i104);

        r11 = newarray (double)[i104];

        i106 = 0;

     label014:
        if i106 >= i104 goto label015;

        $d354 = r98[i106];

        $d355 = virtualinvoke r4.<com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve: double getDiscountFactor(double)>($d354);

        r11[i106] = $d355;

        i106 = i106 + 1;

        goto label014;

     label015:
        $i4 = i104 - 1;

        r99 = newmultiarray (double)[$i4][i1];

        $i5 = i104 - 1;

        r12 = newarray (double)[$i5];

        $r46 = virtualinvoke r2.<com.opengamma.analytics.financial.model.interestrate.definition.LiborMarketModelDisplacedDiffusionDataBundle: com.opengamma.analytics.financial.model.interestrate.definition.LiborMarketModelDisplacedDiffusionParameters getLmmParameter()>();

        $r47 = virtualinvoke $r46.<com.opengamma.analytics.financial.model.interestrate.definition.LiborMarketModelDisplacedDiffusionParameters: double[] getAccrualFactor()>();

        $i6 = i104 - 1;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r47, i100, r12, 0, $i6);

        $i7 = i104 - 1;

        r13 = newarray (double)[$i7];

        $r48 = virtualinvoke r2.<com.opengamma.analytics.financial.model.interestrate.definition.LiborMarketModelDisplacedDiffusionDataBundle: com.opengamma.analytics.financial.model.interestrate.definition.LiborMarketModelDisplacedDiffusionParameters getLmmParameter()>();

        $r49 = virtualinvoke $r48.<com.opengamma.analytics.financial.model.interestrate.definition.LiborMarketModelDisplacedDiffusionParameters: double[] getDisplacement()>();

        $i8 = i104 - 1;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r49, i100, r13, 0, $i8);

        $i9 = i104 - 1;

        r14 = newarray (double)[$i9];

        $r50 = virtualinvoke r2.<com.opengamma.analytics.financial.model.interestrate.definition.LiborMarketModelDisplacedDiffusionDataBundle: com.opengamma.analytics.financial.model.interestrate.definition.LiborMarketModelDisplacedDiffusionParameters getLmmParameter()>();

        d1 = virtualinvoke $r50.<com.opengamma.analytics.financial.model.interestrate.definition.LiborMarketModelDisplacedDiffusionParameters: double getMeanReversion()>();

        i107 = 0;

     label016:
        $i10 = i104 - 1;

        if i107 >= $i10 goto label017;

        $i78 = i100 + i107;

        $r93 = r7[$i78];

        r99[i107] = $r93;

        $d349 = r11[i107];

        $i79 = i107 + 1;

        $d348 = r11[$i79];

        $d350 = $d349 / $d348;

        $d352 = $d350 - 1.0;

        $d351 = r12[i107];

        $d353 = $d352 / $d351;

        r14[i107] = $d353;

        i107 = i107 + 1;

        goto label016;

     label017:
        $i11 = i104 + 1;

        r100 = newarray (double)[$i11];

        d2 = r10[0];

        r100[0] = d2;

        r100[1] = 0.0;

        $i12 = i104 - 1;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r10, 1, r100, 2, $i12);

        r15 = newarray (double)[i104];

        r16 = newarray (double)[i104];

        d369 = 0.0;

        i108 = 0;

     label018:
        if i108 >= i104 goto label019;

        $d342 = r11[i108];

        $d341 = r11[0];

        $d343 = $d342 / $d341;

        r15[i108] = $d343;

        $i77 = i108 + 1;

        $d345 = r100[$i77];

        $d344 = r15[i108];

        $d346 = $d345 * $d344;

        r16[i108] = $d346;

        $d347 = r16[i108];

        d369 = d369 + $d347;

        i108 = i108 + 1;

        goto label018;

     label019:
        $d10 = r100[0];

        d370 = neg $d10;

        $d11 = d369 + d370;

        d3 = $d11 / 2.0;

        $i13 = i104 - 1;

        r17 = newarray (double)[$i13];

        $i14 = i104 - 1;

        r18 = newmultiarray (double)[$i14][i1];

        i109 = 0;

     label020:
        $i15 = i104 - 1;

        if i109 >= $i15 goto label021;

        $d334 = r14[i109];

        $d333 = r13[i109];

        $d339 = $d334 + $d333;

        $d337 = r14[i109];

        $d335 = r12[i109];

        $d336 = 1.0 / $d335;

        $d338 = $d337 + $d336;

        $d340 = $d339 / $d338;

        r17[i109] = $d340;

        i109 = i109 + 1;

        goto label020;

     label021:
        i110 = 0;

     label022:
        if i110 >= i1 goto label023;

        $r92 = r18[0];

        $d331 = r17[0];

        $r91 = r99[0];

        $d330 = $r91[i110];

        $d332 = $d331 * $d330;

        $r92[i110] = $d332;

        i110 = i110 + 1;

        goto label022;

     label023:
        i111 = 1;

     label024:
        $i16 = i104 - 1;

        if i111 >= $i16 goto label027;

        i112 = 0;

     label025:
        if i112 >= i1 goto label026;

        $r90 = r18[i111];

        $i76 = i111 - 1;

        $r88 = r18[$i76];

        $d328 = $r88[i112];

        $d326 = r17[i111];

        $r89 = r99[i111];

        $d325 = $r89[i112];

        $d327 = $d326 * $d325;

        $d329 = $d328 + $d327;

        $r90[i112] = $d329;

        i112 = i112 + 1;

        goto label025;

     label026:
        i111 = i111 + 1;

        goto label024;

     label027:
        $d12 = 2.0 * d1;

        $d13 = $d12 * d368;

        $d14 = staticinvoke <java.lang.Math: double exp(double)>($d13);

        $d16 = $d14 - 1.0;

        $d15 = 2.0 * d1;

        d371 = $d16 / $d15;

        r19 = newarray (double)[i104];

        r20 = newarray (double)[i104];

        i113 = 0;

     label028:
        $i17 = i104 - 1;

        if i113 >= $i17 goto label031;

        i114 = 0;

     label029:
        if i114 >= i1 goto label030;

        $i75 = i113 + 1;

        $d323 = r20[$i75];

        $r86 = r18[i113];

        $d321 = $r86[i114];

        $r87 = r18[i113];

        $d320 = $r87[i114];

        $d322 = $d321 * $d320;

        $d324 = $d323 + $d322;

        r20[$i75] = $d324;

        i114 = i114 + 1;

        goto label029;

     label030:
        $i72 = i113 + 1;

        $i71 = i113 + 1;

        $d316 = r20[$i71];

        $d317 = $d316 * d371;

        r20[$i72] = $d317;

        $i74 = i113 + 1;

        $i73 = i113 + 1;

        $d318 = r20[$i73];

        $d319 = staticinvoke <java.lang.Math: double sqrt(double)>($d318);

        r19[$i74] = $d319;

        i113 = i113 + 1;

        goto label028;

     label031:
        d372 = neg d3;

        d373 = 0.0;

        i115 = 0;

     label032:
        if i115 >= i104 goto label033;

        $d311 = r16[i115];

        $d308 = r16[i115];

        $d307 = r20[i115];

        $d309 = $d308 * $d307;

        $d310 = $d309 / 2.0;

        $d312 = $d311 - $d310;

        d372 = d372 + $d312;

        $d314 = r16[i115];

        $d313 = r19[i115];

        $d315 = $d314 * $d313;

        d373 = d373 + $d315;

        i115 = i115 + 1;

        goto label032;

     label033:
        d374 = d372 / d373;

        r21 = newarray (double)[i104];

        i116 = 0;

     label034:
        if i116 >= i104 goto label035;

        $d305 = r15[i116];

        $d299 = r19[i116];

        $d300 = d374 * $d299;

        $d303 = 1.0 - $d300;

        $d301 = r20[i116];

        $d302 = $d301 / 2.0;

        $d304 = $d303 - $d302;

        $d306 = $d305 * $d304;

        r21[i116] = $d306;

        i116 = i116 + 1;

        goto label034;

     label035:
        $i18 = i104 - 1;

        r101 = newarray (double)[$i18];

        r22 = newarray (double)[i104];

        i117 = 0;

     label036:
        $i19 = i104 - 1;

        if i117 >= $i19 goto label037;

        $d294 = r21[i117];

        $i70 = i117 + 1;

        $d293 = r21[$i70];

        $d295 = $d294 / $d293;

        $d297 = $d295 - 1.0;

        $d296 = r12[i117];

        $d298 = $d297 / $d296;

        r101[i117] = $d298;

        i117 = i117 + 1;

        goto label036;

     label037:
        i118 = 0;

     label038:
        if i118 >= i104 goto label039;

        $i69 = i118 + 1;

        $d290 = r100[$i69];

        $d289 = r21[i118];

        $d291 = $d290 * $d289;

        $d292 = $d291 / d3;

        r22[i118] = $d292;

        i118 = i118 + 1;

        goto label038;

     label039:
        $i20 = i104 - 1;

        r102 = newarray (double)[$i20];

        $i21 = i104 - 1;

        r23 = newmultiarray (double)[$i21][i1];

        i119 = 0;

     label040:
        $i22 = i104 - 1;

        if i119 >= $i22 goto label041;

        $d282 = r101[i119];

        $d281 = r13[i119];

        $d287 = $d282 + $d281;

        $d285 = r101[i119];

        $d283 = r12[i119];

        $d284 = 1.0 / $d283;

        $d286 = $d285 + $d284;

        $d288 = $d287 / $d286;

        r102[i119] = $d288;

        i119 = i119 + 1;

        goto label040;

     label041:
        i120 = 0;

     label042:
        if i120 >= i1 goto label043;

        $r85 = r23[0];

        $d279 = r102[0];

        $r84 = r99[0];

        $d278 = $r84[i120];

        $d280 = $d279 * $d278;

        $r85[i120] = $d280;

        i120 = i120 + 1;

        goto label042;

     label043:
        i121 = 1;

     label044:
        $i23 = i104 - 1;

        if i121 >= $i23 goto label047;

        i122 = 0;

     label045:
        if i122 >= i1 goto label046;

        $r83 = r23[i121];

        $i68 = i121 - 1;

        $r81 = r23[$i68];

        $d276 = $r81[i122];

        $d274 = r102[i121];

        $r82 = r99[i121];

        $d273 = $r82[i122];

        $d275 = $d274 * $d273;

        $d277 = $d276 + $d275;

        $r83[i122] = $d277;

        i122 = i122 + 1;

        goto label045;

     label046:
        i121 = i121 + 1;

        goto label044;

     label047:
        d375 = 0.0;

        r24 = newarray (double)[i1];

        i123 = 0;

     label048:
        if i123 >= i1 goto label051;

        i124 = 0;

     label049:
        $i66 = i104 - 1;

        if i124 >= $i66 goto label050;

        $d271 = r24[i123];

        $i67 = i124 + 1;

        $d269 = r22[$i67];

        $r80 = r23[i124];

        $d268 = $r80[i123];

        $d270 = $d269 * $d268;

        $d272 = $d271 + $d270;

        r24[i123] = $d272;

        i124 = i124 + 1;

        goto label049;

     label050:
        $d266 = r24[i123];

        $d265 = r24[i123];

        $d267 = $d266 * $d265;

        d375 = d375 + $d267;

        i123 = i123 + 1;

        goto label048;

     label051:
        $d17 = d375 * d371;

        d376 = staticinvoke <java.lang.Math: double sqrt(double)>($d17);

        $r51 = new com.opengamma.analytics.financial.model.option.pricing.analytic.formula.EuropeanVanillaOption;

        specialinvoke $r51.<com.opengamma.analytics.financial.model.option.pricing.analytic.formula.EuropeanVanillaOption: void <init>(double,double,boolean)>(d370, 1.0, z0);

        $r52 = new com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackPriceFunction;

        specialinvoke $r52.<com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackPriceFunction: void <init>()>();

        $r53 = new com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackFunctionData;

        specialinvoke $r53.<com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackFunctionData: void <init>(double,double,double)>(d369, 1.0, d376);

        r28 = virtualinvoke $r52.<com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackPriceFunction: double[] getPriceAdjoint(com.opengamma.analytics.financial.model.option.pricing.analytic.formula.EuropeanVanillaOption,com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackFunctionData)>($r51, $r53);

        $d19 = r11[0];

        $d18 = r28[2];

        $d20 = $d19 * $d18;

        $z1 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionPhysicalFixedIbor: boolean isLong()>();

        if $z1 == 0 goto label052;

        $d377 = 1.0;

        goto label053;

     label052:
        $d377 = -1.0;

     label053:
        $d21 = $d20 * $d377;

        d5 = $d21 * 1.0;

        $d22 = 2.0 * d376;

        $d23 = d371 / $d22;

        d6 = $d23 * d5;

        r29 = newarray (double)[i1];

        i125 = 0;

     label054:
        if i125 >= i1 goto label055;

        $d262 = r24[i125];

        $d263 = 2.0 * $d262;

        $d264 = $d263 * d6;

        r29[i125] = $d264;

        i125 = i125 + 1;

        goto label054;

     label055:
        $i24 = i104 - 1;

        r103 = newmultiarray (double)[$i24][i1];

        i126 = 0;

     label056:
        $i25 = i104 - 1;

        if i126 >= $i25 goto label059;

        i127 = 0;

     label057:
        if i127 >= i1 goto label058;

        $r79 = r103[i126];

        $i65 = i126 + 1;

        $d260 = r22[$i65];

        $d259 = r29[i127];

        $d261 = $d260 * $d259;

        $r79[i127] = $d261;

        i127 = i127 + 1;

        goto label057;

     label058:
        i126 = i126 + 1;

        goto label056;

     label059:
        i128 = i104 - 3;

     label060:
        if i128 < 0 goto label063;

        i129 = 0;

     label061:
        if i129 >= i1 goto label062;

        $r77 = r103[i128];

        $d257 = $r77[i129];

        $i64 = i128 + 1;

        $r78 = r103[$i64];

        $d256 = $r78[i129];

        $d258 = $d257 + $d256;

        $r77[i129] = $d258;

        i129 = i129 + 1;

        goto label061;

     label062:
        i128 = i128 + -1;

        goto label060;

     label063:
        $i26 = i104 - 1;

        r104 = newarray (double)[$i26];

        i130 = 0;

     label064:
        $i27 = i104 - 1;

        if i130 >= $i27 goto label067;

        i131 = 0;

     label065:
        if i131 >= i1 goto label066;

        $d254 = r104[i130];

        $r75 = r99[i130];

        $d252 = $r75[i131];

        $r76 = r103[i130];

        $d251 = $r76[i131];

        $d253 = $d252 * $d251;

        $d255 = $d254 + $d253;

        r104[i130] = $d255;

        i131 = i131 + 1;

        goto label065;

     label066:
        i130 = i130 + 1;

        goto label064;

     label067:
        r105 = newarray (double)[i104];

        i132 = 0;

     label068:
        if i132 >= i1 goto label071;

        i133 = 0;

     label069:
        $i62 = i104 - 1;

        if i133 >= $i62 goto label070;

        $i63 = i133 + 1;

        $d249 = r105[$i63];

        $r74 = r23[i133];

        $d247 = $r74[i132];

        $d246 = r29[i132];

        $d248 = $d247 * $d246;

        $d250 = $d249 + $d248;

        r105[$i63] = $d250;

        i133 = i133 + 1;

        goto label069;

     label070:
        i132 = i132 + 1;

        goto label068;

     label071:
        $i28 = i104 - 1;

        r106 = newarray (double)[$i28];

        i134 = 0;

     label072:
        $i29 = i104 - 1;

        if i134 >= $i29 goto label073;

        $d228 = r101[i134];

        $d226 = r12[i134];

        $d227 = 1.0 / $d226;

        $d232 = $d228 + $d227;

        $d230 = r101[i134];

        $d229 = r13[i134];

        $d231 = $d230 + $d229;

        $d242 = $d232 - $d231;

        $d235 = r101[i134];

        $d233 = r12[i134];

        $d234 = 1.0 / $d233;

        $d240 = $d235 + $d234;

        $d238 = r101[i134];

        $d236 = r12[i134];

        $d237 = 1.0 / $d236;

        $d239 = $d238 + $d237;

        $d241 = $d240 * $d239;

        $d244 = $d242 / $d241;

        $d243 = r104[i134];

        $d245 = $d244 * $d243;

        r106[i134] = $d245;

        i134 = i134 + 1;

        goto label072;

     label073:
        r107 = newarray (double)[i104];

        i135 = 0;

     label074:
        $i30 = i104 - 1;

        if i135 >= $i30 goto label075;

        $d212 = r107[i135];

        $i58 = i135 + 1;

        $d206 = r21[$i58];

        $d208 = 1.0 / $d206;

        $d207 = r12[i135];

        $d210 = $d208 / $d207;

        $d209 = r106[i135];

        $d211 = $d210 * $d209;

        $d213 = $d212 + $d211;

        r107[i135] = $d213;

        $i59 = i135 + 1;

        $d224 = r107[$i59];

        $d214 = r21[i135];

        $d218 = neg $d214;

        $i60 = i135 + 1;

        $d216 = r21[$i60];

        $i61 = i135 + 1;

        $d215 = r21[$i61];

        $d217 = $d216 * $d215;

        $d220 = $d218 / $d217;

        $d219 = r12[i135];

        $d222 = $d220 / $d219;

        $d221 = r106[i135];

        $d223 = $d222 * $d221;

        $d225 = $d224 + $d223;

        r107[$i59] = $d225;

        i135 = i135 + 1;

        goto label074;

     label075:
        i136 = 0;

     label076:
        if i136 >= i104 goto label077;

        $d204 = r107[i136];

        $i57 = i136 + 1;

        $d200 = r100[$i57];

        $d202 = $d200 / d3;

        $d201 = r105[i136];

        $d203 = $d202 * $d201;

        $d205 = $d204 + $d203;

        r107[i136] = $d205;

        i136 = i136 + 1;

        goto label076;

     label077:
        d378 = 0.0;

        i137 = 0;

     label078:
        if i137 >= i104 goto label079;

        $d194 = r15[i137];

        $d196 = neg $d194;

        $d195 = r19[i137];

        $d198 = $d196 * $d195;

        $d197 = r107[i137];

        $d199 = $d198 * $d197;

        d378 = d378 + $d199;

        i137 = i137 + 1;

        goto label078;

     label079:
        $d24 = 1.0 / d373;

        d379 = $d24 * d378;

        $d26 = neg d372;

        $d25 = d373 * d373;

        $d27 = $d26 / $d25;

        d7 = $d27 * d378;

        r30 = newarray (double)[i104];

        i138 = 0;

     label080:
        if i138 >= i104 goto label081;

        $d189 = r15[i138];

        $d190 = neg $d189;

        $d192 = $d190 * d374;

        $d191 = r107[i138];

        $d193 = $d192 * $d191;

        r30[i138] = $d193;

        i138 = i138 + 1;

        goto label080;

     label081:
        i139 = 0;

     label082:
        if i139 >= i104 goto label083;

        $d187 = r30[i139];

        $d185 = r16[i139];

        $d186 = $d185 * d7;

        $d188 = $d187 + $d186;

        r30[i139] = $d188;

        i139 = i139 + 1;

        goto label082;

     label083:
        r108 = newarray (double)[i104];

        i140 = 0;

     label084:
        if i140 >= i104 goto label085;

        $d180 = r15[i140];

        $d181 = neg $d180;

        $d183 = $d181 / 2.0;

        $d182 = r107[i140];

        $d184 = $d183 * $d182;

        r108[i140] = $d184;

        i140 = i140 + 1;

        goto label084;

     label085:
        i141 = 0;

     label086:
        if i141 >= i104 goto label087;

        $d178 = r108[i141];

        $d174 = r16[i141];

        $d175 = neg $d174;

        $d176 = $d175 / 2.0;

        $d177 = $d176 * d379;

        $d179 = $d178 + $d177;

        r108[i141] = $d179;

        i141 = i141 + 1;

        goto label086;

     label087:
        i142 = 0;

     label088:
        $i31 = i104 - 1;

        if i142 >= $i31 goto label089;

        $i54 = i142 + 1;

        $d172 = r108[$i54];

        $i55 = i142 + 1;

        $d167 = r19[$i55];

        $d168 = 1.0 / $d167;

        $d170 = $d168 / 2.0;

        $i56 = i142 + 1;

        $d169 = r30[$i56];

        $d171 = $d170 * $d169;

        $d173 = $d172 + $d171;

        r108[$i54] = $d173;

        i142 = i142 + 1;

        goto label088;

     label089:
        $i32 = i104 - 1;

        r109 = newmultiarray (double)[$i32][i1];

        i143 = 0;

     label090:
        $i33 = i104 - 1;

        if i143 >= $i33 goto label093;

        i144 = 0;

     label091:
        if i144 >= i1 goto label092;

        $r73 = r109[i143];

        $r72 = r18[i143];

        $d162 = $r72[i144];

        $d163 = 2.0 * $d162;

        $d165 = $d163 * d371;

        $i53 = i143 + 1;

        $d164 = r108[$i53];

        $d166 = $d165 * $d164;

        $r73[i144] = $d166;

        i144 = i144 + 1;

        goto label091;

     label092:
        i143 = i143 + 1;

        goto label090;

     label093:
        i145 = i104 - 3;

     label094:
        if i145 < 0 goto label097;

        i146 = 0;

     label095:
        if i146 >= i1 goto label096;

        $r70 = r109[i145];

        $d160 = $r70[i146];

        $i52 = i145 + 1;

        $r71 = r109[$i52];

        $d159 = $r71[i146];

        $d161 = $d160 + $d159;

        $r70[i146] = $d161;

        i146 = i146 + 1;

        goto label095;

     label096:
        i145 = i145 + -1;

        goto label094;

     label097:
        $i34 = i104 - 1;

        r110 = newarray (double)[$i34];

        i147 = 0;

     label098:
        $i35 = i104 - 1;

        if i147 >= $i35 goto label101;

        i148 = 0;

     label099:
        if i148 >= i1 goto label100;

        $d157 = r110[i147];

        $r68 = r99[i147];

        $d155 = $r68[i148];

        $r69 = r109[i147];

        $d154 = $r69[i148];

        $d156 = $d155 * $d154;

        $d158 = $d157 + $d156;

        r110[i147] = $d158;

        i148 = i148 + 1;

        goto label099;

     label100:
        i147 = i147 + 1;

        goto label098;

     label101:
        d380 = neg d379;

        i149 = 0;

     label102:
        if i149 >= i104 goto label103;

        $i51 = i149 + 1;

        $d146 = r100[$i51];

        $d148 = neg $d146;

        $d147 = r21[i149];

        $d150 = $d148 * $d147;

        $d149 = d3 * d3;

        $d152 = $d150 / $d149;

        $d151 = r105[i149];

        $d153 = $d152 * $d151;

        d380 = d380 + $d153;

        i149 = i149 + 1;

        goto label102;

     label103:
        d381 = d380 / 2.0;

        $d29 = r11[0];

        $d28 = r28[3];

        $d30 = $d29 * $d28;

        $z2 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionPhysicalFixedIbor: boolean isLong()>();

        if $z2 == 0 goto label104;

        $d382 = 1.0;

        goto label105;

     label104:
        $d382 = -1.0;

     label105:
        $d31 = $d30 * $d382;

        $d32 = $d31 * 1.0;

        d383 = d381 + $d32;

        d384 = d380 / 2.0;

        $d34 = r11[0];

        $d33 = r28[1];

        $d35 = $d34 * $d33;

        $z3 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionPhysicalFixedIbor: boolean isLong()>();

        if $z3 == 0 goto label106;

        $d385 = 1.0;

        goto label107;

     label106:
        $d385 = -1.0;

     label107:
        $d36 = $d35 * $d385;

        $d37 = $d36 * 1.0;

        d386 = d384 + $d37;

        r31 = newarray (double)[i104];

        i150 = 0;

     label108:
        if i150 >= i104 goto label109;

        $d136 = r19[i150];

        $d137 = $d136 * d7;

        $d142 = d386 + $d137;

        $d138 = r20[i150];

        $d139 = $d138 / 2.0;

        $d140 = 1.0 - $d139;

        $d141 = $d140 * d379;

        $d143 = $d142 + $d141;

        r31[i150] = $d143;

        i150 = i150 + 1;

        goto label108;

     label109:
        r111 = newarray (double)[i104];

        i151 = 0;

     label110:
        if i151 >= i104 goto label111;

        $i50 = i151 + 1;

        $d125 = r100[$i50];

        $d124 = r31[i151];

        $d134 = $d125 * $d124;

        $d126 = r19[i151];

        $d127 = d374 * $d126;

        $d130 = 1.0 - $d127;

        $d128 = r20[i151];

        $d129 = $d128 / 2.0;

        $d132 = $d130 - $d129;

        $d131 = r107[i151];

        $d133 = $d132 * $d131;

        $d135 = $d134 + $d133;

        r111[i151] = $d135;

        i151 = i151 + 1;

        goto label110;

     label111:
        $i36 = i104 + 1;

        r112 = newarray (double)[$i36];

        i152 = 0;

     label112:
        if i152 >= i104 goto label113;

        $i49 = i152 + 1;

        $d117 = r15[i152];

        $d116 = r31[i152];

        $d122 = $d117 * $d116;

        $d118 = r21[i152];

        $d120 = $d118 / d3;

        $d119 = r105[i152];

        $d121 = $d120 * $d119;

        $d123 = $d122 + $d121;

        r112[$i49] = $d123;

        i152 = i152 + 1;

        goto label112;

     label113:
        $d39 = r112[0];

        $d38 = neg d383;

        $d40 = $d39 + $d38;

        r112[0] = $d40;

        $i37 = i104 - 1;

        r113 = newarray (double)[$i37];

        i153 = 0;

     label114:
        $i38 = i104 - 1;

        if i153 >= $i38 goto label115;

        $d97 = r14[i153];

        $d95 = r12[i153];

        $d96 = 1.0 / $d95;

        $d98 = $d97 + $d96;

        $d112 = 1.0 / $d98;

        $d100 = r14[i153];

        $d99 = r13[i153];

        $d110 = $d100 + $d99;

        $d103 = r14[i153];

        $d101 = r12[i153];

        $d102 = 1.0 / $d101;

        $d108 = $d103 + $d102;

        $d106 = r14[i153];

        $d104 = r12[i153];

        $d105 = 1.0 / $d104;

        $d107 = $d106 + $d105;

        $d109 = $d108 * $d107;

        $d111 = $d110 / $d109;

        $d114 = $d112 - $d111;

        $d113 = r110[i153];

        $d115 = $d114 * $d113;

        r113[i153] = $d115;

        i153 = i153 + 1;

        goto label114;

     label115:
        r114 = newarray (double)[i104];

        i154 = 0;

     label116:
        $i39 = i104 - 1;

        if i154 >= $i39 goto label117;

        $d81 = r114[i154];

        $i45 = i154 + 1;

        $d75 = r11[$i45];

        $d77 = 1.0 / $d75;

        $d76 = r12[i154];

        $d79 = $d77 / $d76;

        $d78 = r113[i154];

        $d80 = $d79 * $d78;

        $d82 = $d81 + $d80;

        r114[i154] = $d82;

        $i46 = i154 + 1;

        $d93 = r114[$i46];

        $d83 = r11[i154];

        $d87 = neg $d83;

        $i47 = i154 + 1;

        $d85 = r11[$i47];

        $i48 = i154 + 1;

        $d84 = r11[$i48];

        $d86 = $d85 * $d84;

        $d89 = $d87 / $d86;

        $d88 = r12[i154];

        $d91 = $d89 / $d88;

        $d90 = r113[i154];

        $d92 = $d91 * $d90;

        $d94 = $d93 + $d92;

        r114[$i46] = $d94;

        i154 = i154 + 1;

        goto label116;

     label117:
        i155 = 1;

     label118:
        if i155 >= i104 goto label119;

        $d63 = r114[i155];

        $d59 = r11[0];

        $d61 = 1.0 / $d59;

        $d60 = r111[i155];

        $d62 = $d61 * $d60;

        $d64 = $d63 + $d62;

        r114[i155] = $d64;

        $d73 = r114[0];

        $d65 = r11[i155];

        $d69 = neg $d65;

        $d67 = r11[0];

        $d66 = r11[0];

        $d68 = $d67 * $d66;

        $d71 = $d69 / $d68;

        $d70 = r111[i155];

        $d72 = $d71 * $d70;

        $d74 = $d73 + $d72;

        r114[0] = $d74;

        i155 = i155 + 1;

        goto label118;

     label119:
        $d41 = r114[0];

        $d42 = r28[0];

        $z4 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionPhysicalFixedIbor: boolean isLong()>();

        if $z4 == 0 goto label120;

        $d387 = 1.0;

        goto label121;

     label120:
        $d387 = -1.0;

     label121:
        $d43 = $d42 * $d387;

        $d44 = $d43 * 1.0;

        $d45 = $d41 + $d44;

        r114[0] = $d45;

        r115 = newarray (double)[i104];

        $d46 = r112[0];

        r115[0] = $d46;

        $i41 = i104 - 1;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r112, 2, r115, 1, $i41);

        r32 = newarray (double)[i0];

        i156 = 0;

     label122:
        if i156 >= i0 goto label123;

        $i43 = r9[i156];

        $i44 = $i43 - i100;

        $d58 = r115[$i44];

        r32[i156] = $d58;

        i156 = i156 + 1;

        goto label122;

     label123:
        $r54 = new java.util.ArrayList;

        specialinvoke $r54.<java.util.ArrayList: void <init>()>();

        i157 = 0;

     label124:
        if i157 >= i104 goto label125;

        $d57 = r98[i157];

        $d51 = r98[i157];

        $d53 = neg $d51;

        $d52 = r11[i157];

        $d55 = $d53 * $d52;

        $d54 = r114[i157];

        $d56 = $d55 * $d54;

        r117 = staticinvoke <com.opengamma.util.tuple.DoublesPair: com.opengamma.util.tuple.DoublesPair of(double,double)>($d57, $d56);

        interfaceinvoke $r54.<java.util.List: boolean add(java.lang.Object)>(r117);

        i157 = i157 + 1;

        goto label124;

     label125:
        $r55 = new java.util.HashMap;

        specialinvoke $r55.<java.util.HashMap: void <init>()>();

        $r56 = virtualinvoke r3.<com.opengamma.analytics.financial.interestrate.annuity.derivative.AnnuityPaymentFixed: java.lang.String getDiscountCurve()>();

        interfaceinvoke $r55.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r56, $r54);

        $r58 = new com.opengamma.analytics.financial.interestrate.InterestRateCurveSensitivity;

        specialinvoke $r58.<com.opengamma.analytics.financial.interestrate.InterestRateCurveSensitivity: void <init>(java.util.Map)>($r55);

        r119 = $r58;

        $r59 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionPhysicalFixedIbor: com.opengamma.analytics.financial.interestrate.swap.derivative.SwapFixedCoupon getUnderlyingSwap()>();

        $r60 = <com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionPhysicalFixedIborLMMDDMethod: com.opengamma.analytics.financial.interestrate.CashFlowEquivalentCurveSensitivityCalculator CFECSC>;

        $r61 = virtualinvoke $r59.<com.opengamma.analytics.financial.interestrate.swap.derivative.SwapFixedCoupon: java.lang.Object accept(com.opengamma.analytics.financial.interestrate.InstrumentDerivativeVisitor,java.lang.Object)>($r60, r2);

        r33 = (java.util.Map) $r61;

        i158 = 0;

     label126:
        $i42 = virtualinvoke r3.<com.opengamma.analytics.financial.interestrate.annuity.derivative.AnnuityPaymentFixed: int getNumberOfPayments()>();

        if i158 >= $i42 goto label128;

        $r62 = virtualinvoke r3.<com.opengamma.analytics.financial.interestrate.annuity.derivative.AnnuityPaymentFixed: com.opengamma.analytics.financial.interestrate.payments.derivative.Payment getNthPayment(int)>(i158);

        $r63 = (com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed) $r62;

        $d47 = virtualinvoke $r63.<com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed: double getPaymentTime()>();

        $r64 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d47);

        $r65 = interfaceinvoke r33.<java.util.Map: java.lang.Object get(java.lang.Object)>($r64);

        r34 = (com.opengamma.analytics.financial.interestrate.InterestRateCurveSensitivity) $r65;

        if r34 == null goto label127;

        $d49 = neg d0;

        $d48 = r32[i158];

        $d50 = $d49 * $d48;

        $r66 = virtualinvoke r34.<com.opengamma.analytics.financial.interestrate.InterestRateCurveSensitivity: com.opengamma.analytics.financial.interestrate.InterestRateCurveSensitivity multipliedBy(double)>($d50);

        r119 = virtualinvoke r119.<com.opengamma.analytics.financial.interestrate.InterestRateCurveSensitivity: com.opengamma.analytics.financial.interestrate.InterestRateCurveSensitivity plus(com.opengamma.analytics.financial.interestrate.InterestRateCurveSensitivity)>($r66);

     label127:
        i158 = i158 + 1;

        goto label126;

     label128:
        return r119;
    }

    static void <clinit>()
    {
        com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionPhysicalFixedIborLMMDDMethod $r0;
        com.opengamma.analytics.financial.interestrate.CashFlowEquivalentCalculator $r1;
        com.opengamma.analytics.financial.interestrate.CashFlowEquivalentCurveSensitivityCalculator $r2;

        <com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionPhysicalFixedIborLMMDDMethod: double TIME_TOLERANCE> = 0.001;

        $r0 = new com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionPhysicalFixedIborLMMDDMethod;

        specialinvoke $r0.<com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionPhysicalFixedIborLMMDDMethod: void <init>()>();

        <com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionPhysicalFixedIborLMMDDMethod: com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionPhysicalFixedIborLMMDDMethod INSTANCE> = $r0;

        $r1 = staticinvoke <com.opengamma.analytics.financial.interestrate.CashFlowEquivalentCalculator: com.opengamma.analytics.financial.interestrate.CashFlowEquivalentCalculator getInstance()>();

        <com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionPhysicalFixedIborLMMDDMethod: com.opengamma.analytics.financial.interestrate.CashFlowEquivalentCalculator CFEC> = $r1;

        $r2 = staticinvoke <com.opengamma.analytics.financial.interestrate.CashFlowEquivalentCurveSensitivityCalculator: com.opengamma.analytics.financial.interestrate.CashFlowEquivalentCurveSensitivityCalculator getInstance()>();

        <com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionPhysicalFixedIborLMMDDMethod: com.opengamma.analytics.financial.interestrate.CashFlowEquivalentCurveSensitivityCalculator CFECSC> = $r2;

        return;
    }
}
