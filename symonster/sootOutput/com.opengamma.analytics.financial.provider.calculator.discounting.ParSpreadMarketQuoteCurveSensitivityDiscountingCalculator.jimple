public final class com.opengamma.analytics.financial.provider.calculator.discounting.ParSpreadMarketQuoteCurveSensitivityDiscountingCalculator extends com.opengamma.analytics.financial.interestrate.InstrumentDerivativeVisitorAdapter
{
    private static final com.opengamma.analytics.financial.provider.calculator.discounting.ParSpreadMarketQuoteCurveSensitivityDiscountingCalculator INSTANCE;
    private static final com.opengamma.analytics.financial.provider.calculator.discounting.PresentValueDiscountingCalculator PVDC;
    private static final com.opengamma.analytics.financial.provider.calculator.discounting.PresentValueCurveSensitivityDiscountingCalculator PVCSDC;
    private static final com.opengamma.analytics.financial.provider.calculator.discounting.PresentValueMarketQuoteSensitivityDiscountingCalculator PVMQSMC;
    private static final com.opengamma.analytics.financial.provider.calculator.discounting.PresentValueMarketQuoteSensitivityCurveSensitivityDiscountingCalculator PVMQSCSMC;
    private static final com.opengamma.analytics.financial.interestrate.cash.provider.CashDiscountingMethod METHOD_DEPOSIT;
    private static final com.opengamma.analytics.financial.interestrate.cash.provider.DepositIborDiscountingMethod METHOD_DEPOSIT_IBOR;
    private static final com.opengamma.analytics.financial.interestrate.fra.provider.ForwardRateAgreementDiscountingMethod METHOD_FRA;
    private static final com.opengamma.analytics.financial.interestrate.future.provider.InterestRateFutureSecurityDiscountingMethod METHOD_STIR_FUT;
    private static final com.opengamma.analytics.financial.interestrate.future.provider.FederalFundsFutureSecurityDiscountingMethod METHOD_FED_FUNDS;
    private static final com.opengamma.analytics.financial.interestrate.future.provider.FuturesSecurityMulticurveMethod METHOD_FUT;
    private static final com.opengamma.analytics.financial.forex.provider.ForexSwapDiscountingMethod METHOD_FOREX_SWAP;
    private static final com.opengamma.analytics.financial.forex.provider.ForexDiscountingMethod METHOD_FOREX;

    public static com.opengamma.analytics.financial.provider.calculator.discounting.ParSpreadMarketQuoteCurveSensitivityDiscountingCalculator getInstance()
    {
        com.opengamma.analytics.financial.provider.calculator.discounting.ParSpreadMarketQuoteCurveSensitivityDiscountingCalculator $r0;

        $r0 = <com.opengamma.analytics.financial.provider.calculator.discounting.ParSpreadMarketQuoteCurveSensitivityDiscountingCalculator: com.opengamma.analytics.financial.provider.calculator.discounting.ParSpreadMarketQuoteCurveSensitivityDiscountingCalculator INSTANCE>;

        return $r0;
    }

    private void <init>()
    {
        com.opengamma.analytics.financial.provider.calculator.discounting.ParSpreadMarketQuoteCurveSensitivityDiscountingCalculator r0;

        r0 := @this: com.opengamma.analytics.financial.provider.calculator.discounting.ParSpreadMarketQuoteCurveSensitivityDiscountingCalculator;

        specialinvoke r0.<com.opengamma.analytics.financial.interestrate.InstrumentDerivativeVisitorAdapter: void <init>()>();

        return;
    }

    public com.opengamma.analytics.financial.provider.sensitivity.multicurve.MulticurveSensitivity visitCash(com.opengamma.analytics.financial.interestrate.cash.derivative.Cash, com.opengamma.analytics.financial.provider.description.interestrate.ParameterProviderInterface)
    {
        com.opengamma.analytics.financial.provider.calculator.discounting.ParSpreadMarketQuoteCurveSensitivityDiscountingCalculator r0;
        com.opengamma.analytics.financial.interestrate.cash.derivative.Cash r1;
        com.opengamma.analytics.financial.provider.description.interestrate.ParameterProviderInterface r2;
        com.opengamma.analytics.financial.interestrate.cash.provider.CashDiscountingMethod $r3;
        com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface $r4;
        com.opengamma.analytics.financial.provider.sensitivity.multicurve.MulticurveSensitivity $r5;

        r0 := @this: com.opengamma.analytics.financial.provider.calculator.discounting.ParSpreadMarketQuoteCurveSensitivityDiscountingCalculator;

        r1 := @parameter0: com.opengamma.analytics.financial.interestrate.cash.derivative.Cash;

        r2 := @parameter1: com.opengamma.analytics.financial.provider.description.interestrate.ParameterProviderInterface;

        $r3 = <com.opengamma.analytics.financial.provider.calculator.discounting.ParSpreadMarketQuoteCurveSensitivityDiscountingCalculator: com.opengamma.analytics.financial.interestrate.cash.provider.CashDiscountingMethod METHOD_DEPOSIT>;

        $r4 = interfaceinvoke r2.<com.opengamma.analytics.financial.provider.description.interestrate.ParameterProviderInterface: com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface getMulticurveProvider()>();

        $r5 = virtualinvoke $r3.<com.opengamma.analytics.financial.interestrate.cash.provider.CashDiscountingMethod: com.opengamma.analytics.financial.provider.sensitivity.multicurve.MulticurveSensitivity parSpreadCurveSensitivity(com.opengamma.analytics.financial.interestrate.cash.derivative.Cash,com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface)>(r1, $r4);

        return $r5;
    }

    public com.opengamma.analytics.financial.provider.sensitivity.multicurve.MulticurveSensitivity visitDepositIbor(com.opengamma.analytics.financial.interestrate.cash.derivative.DepositIbor, com.opengamma.analytics.financial.provider.description.interestrate.ParameterProviderInterface)
    {
        com.opengamma.analytics.financial.provider.calculator.discounting.ParSpreadMarketQuoteCurveSensitivityDiscountingCalculator r0;
        com.opengamma.analytics.financial.interestrate.cash.derivative.DepositIbor r1;
        com.opengamma.analytics.financial.provider.description.interestrate.ParameterProviderInterface r2;
        com.opengamma.analytics.financial.interestrate.cash.provider.DepositIborDiscountingMethod $r3;
        com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface $r4;
        com.opengamma.analytics.financial.provider.sensitivity.multicurve.MulticurveSensitivity $r5;

        r0 := @this: com.opengamma.analytics.financial.provider.calculator.discounting.ParSpreadMarketQuoteCurveSensitivityDiscountingCalculator;

        r1 := @parameter0: com.opengamma.analytics.financial.interestrate.cash.derivative.DepositIbor;

        r2 := @parameter1: com.opengamma.analytics.financial.provider.description.interestrate.ParameterProviderInterface;

        $r3 = <com.opengamma.analytics.financial.provider.calculator.discounting.ParSpreadMarketQuoteCurveSensitivityDiscountingCalculator: com.opengamma.analytics.financial.interestrate.cash.provider.DepositIborDiscountingMethod METHOD_DEPOSIT_IBOR>;

        $r4 = interfaceinvoke r2.<com.opengamma.analytics.financial.provider.description.interestrate.ParameterProviderInterface: com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface getMulticurveProvider()>();

        $r5 = virtualinvoke $r3.<com.opengamma.analytics.financial.interestrate.cash.provider.DepositIborDiscountingMethod: com.opengamma.analytics.financial.provider.sensitivity.multicurve.MulticurveSensitivity parSpreadCurveSensitivity(com.opengamma.analytics.financial.interestrate.cash.derivative.DepositIbor,com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface)>(r1, $r4);

        return $r5;
    }

    public com.opengamma.analytics.financial.provider.sensitivity.multicurve.MulticurveSensitivity visitForwardRateAgreement(com.opengamma.analytics.financial.interestrate.fra.derivative.ForwardRateAgreement, com.opengamma.analytics.financial.provider.description.interestrate.ParameterProviderInterface)
    {
        com.opengamma.analytics.financial.provider.calculator.discounting.ParSpreadMarketQuoteCurveSensitivityDiscountingCalculator r0;
        com.opengamma.analytics.financial.interestrate.fra.derivative.ForwardRateAgreement r1;
        com.opengamma.analytics.financial.provider.description.interestrate.ParameterProviderInterface r2;
        com.opengamma.analytics.financial.interestrate.fra.provider.ForwardRateAgreementDiscountingMethod $r3;
        com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface $r4;
        com.opengamma.analytics.financial.provider.sensitivity.multicurve.MulticurveSensitivity $r5;

        r0 := @this: com.opengamma.analytics.financial.provider.calculator.discounting.ParSpreadMarketQuoteCurveSensitivityDiscountingCalculator;

        r1 := @parameter0: com.opengamma.analytics.financial.interestrate.fra.derivative.ForwardRateAgreement;

        r2 := @parameter1: com.opengamma.analytics.financial.provider.description.interestrate.ParameterProviderInterface;

        $r3 = <com.opengamma.analytics.financial.provider.calculator.discounting.ParSpreadMarketQuoteCurveSensitivityDiscountingCalculator: com.opengamma.analytics.financial.interestrate.fra.provider.ForwardRateAgreementDiscountingMethod METHOD_FRA>;

        $r4 = interfaceinvoke r2.<com.opengamma.analytics.financial.provider.description.interestrate.ParameterProviderInterface: com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface getMulticurveProvider()>();

        $r5 = virtualinvoke $r3.<com.opengamma.analytics.financial.interestrate.fra.provider.ForwardRateAgreementDiscountingMethod: com.opengamma.analytics.financial.provider.sensitivity.multicurve.MulticurveSensitivity parSpreadCurveSensitivity(com.opengamma.analytics.financial.interestrate.fra.derivative.ForwardRateAgreement,com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface)>(r1, $r4);

        return $r5;
    }

    public com.opengamma.analytics.financial.provider.sensitivity.multicurve.MulticurveSensitivity visitSwap(com.opengamma.analytics.financial.interestrate.swap.derivative.Swap, com.opengamma.analytics.financial.provider.description.interestrate.ParameterProviderInterface)
    {
        com.opengamma.analytics.financial.provider.calculator.discounting.ParSpreadMarketQuoteCurveSensitivityDiscountingCalculator r0;
        com.opengamma.analytics.financial.interestrate.swap.derivative.Swap r1;
        com.opengamma.analytics.financial.provider.description.interestrate.ParameterProviderInterface r2;
        double d0, d1, d2, d3, d4, d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, d18, $d19, $d20, $d21;
        com.opengamma.analytics.financial.provider.sensitivity.multicurve.MulticurveSensitivity r3, r4, $r41, r42, r43, r54, r59, $r71, $r72, $r73;
        com.opengamma.analytics.financial.interestrate.annuity.derivative.Annuity $r7, $r9, $r11, $r12, $r17, $r19, $r24, $r26, $r28, $r32, $r35, $r38, $r45, $r55, $r60;
        com.opengamma.analytics.financial.interestrate.payments.derivative.Payment $r8, $r10, $r27, $r39;
        boolean $z0, $z1;
        int $i0;
        com.opengamma.analytics.financial.provider.calculator.discounting.PresentValueCurveSensitivityDiscountingCalculator $r13, $r20, $r47;
        com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface $r14, $r21, $r34, $r48, $r51, $r57, $r62, $r65;
        java.lang.Object $r15, $r22, $r30, $r49, $r58, $r63, $r68;
        com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyMulticurveSensitivity $r16, $r23, r50, $r53;
        com.opengamma.util.money.Currency $r18, $r25, $r33, $r36, r46;
        com.opengamma.analytics.financial.provider.calculator.discounting.PresentValueDiscountingCalculator $r29, $r67;
        com.opengamma.util.money.MultipleCurrencyAmount $r31, $r69;
        java.lang.Double $r37, $r64;
        com.opengamma.analytics.financial.interestrate.payments.derivative.CouponONCompounded $r40;
        com.opengamma.analytics.financial.interestrate.payments.derivative.CouponFixedAccruedCompounding r44;
        com.opengamma.analytics.financial.forex.method.FXMatrix $r52, $r66;
        com.opengamma.analytics.financial.provider.calculator.discounting.PresentValueMarketQuoteSensitivityCurveSensitivityDiscountingCalculator $r56;
        com.opengamma.analytics.financial.provider.calculator.discounting.PresentValueMarketQuoteSensitivityDiscountingCalculator $r61;
        com.opengamma.util.money.CurrencyAmount $r70;

        r0 := @this: com.opengamma.analytics.financial.provider.calculator.discounting.ParSpreadMarketQuoteCurveSensitivityDiscountingCalculator;

        r1 := @parameter0: com.opengamma.analytics.financial.interestrate.swap.derivative.Swap;

        r2 := @parameter1: com.opengamma.analytics.financial.provider.description.interestrate.ParameterProviderInterface;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, "multicurve");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "Swap");

        $r7 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.swap.derivative.Swap: com.opengamma.analytics.financial.interestrate.annuity.derivative.Annuity getSecondLeg()>();

        $r8 = virtualinvoke $r7.<com.opengamma.analytics.financial.interestrate.annuity.derivative.Annuity: com.opengamma.analytics.financial.interestrate.payments.derivative.Payment getNthPayment(int)>(0);

        $z0 = $r8 instanceof com.opengamma.analytics.financial.interestrate.payments.derivative.CouponONCompounded;

        if $z0 == 0 goto label1;

        $r9 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.swap.derivative.Swap: com.opengamma.analytics.financial.interestrate.annuity.derivative.Annuity getFirstLeg()>();

        $r10 = virtualinvoke $r9.<com.opengamma.analytics.financial.interestrate.annuity.derivative.Annuity: com.opengamma.analytics.financial.interestrate.payments.derivative.Payment getNthPayment(int)>(0);

        $z1 = $r10 instanceof com.opengamma.analytics.financial.interestrate.payments.derivative.CouponFixedAccruedCompounding;

        if $z1 == 0 goto label1;

        $r11 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.swap.derivative.Swap: com.opengamma.analytics.financial.interestrate.annuity.derivative.Annuity getFirstLeg()>();

        $i0 = virtualinvoke $r11.<com.opengamma.analytics.financial.interestrate.annuity.derivative.Annuity: int getNumberOfPayments()>();

        if $i0 != 1 goto label1;

        $r12 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.swap.derivative.Swap: com.opengamma.analytics.financial.interestrate.annuity.derivative.Annuity getFirstLeg()>();

        $r13 = <com.opengamma.analytics.financial.provider.calculator.discounting.ParSpreadMarketQuoteCurveSensitivityDiscountingCalculator: com.opengamma.analytics.financial.provider.calculator.discounting.PresentValueCurveSensitivityDiscountingCalculator PVCSDC>;

        $r14 = interfaceinvoke r2.<com.opengamma.analytics.financial.provider.description.interestrate.ParameterProviderInterface: com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface getMulticurveProvider()>();

        $r15 = virtualinvoke $r12.<com.opengamma.analytics.financial.interestrate.annuity.derivative.Annuity: java.lang.Object accept(com.opengamma.analytics.financial.interestrate.InstrumentDerivativeVisitor,java.lang.Object)>($r13, $r14);

        $r16 = (com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyMulticurveSensitivity) $r15;

        $r17 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.swap.derivative.Swap: com.opengamma.analytics.financial.interestrate.annuity.derivative.Annuity getFirstLeg()>();

        $r18 = virtualinvoke $r17.<com.opengamma.analytics.financial.interestrate.annuity.derivative.Annuity: com.opengamma.util.money.Currency getCurrency()>();

        r42 = virtualinvoke $r16.<com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyMulticurveSensitivity: com.opengamma.analytics.financial.provider.sensitivity.multicurve.MulticurveSensitivity getSensitivity(com.opengamma.util.money.Currency)>($r18);

        $r19 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.swap.derivative.Swap: com.opengamma.analytics.financial.interestrate.annuity.derivative.Annuity getSecondLeg()>();

        $r20 = <com.opengamma.analytics.financial.provider.calculator.discounting.ParSpreadMarketQuoteCurveSensitivityDiscountingCalculator: com.opengamma.analytics.financial.provider.calculator.discounting.PresentValueCurveSensitivityDiscountingCalculator PVCSDC>;

        $r21 = interfaceinvoke r2.<com.opengamma.analytics.financial.provider.description.interestrate.ParameterProviderInterface: com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface getMulticurveProvider()>();

        $r22 = virtualinvoke $r19.<com.opengamma.analytics.financial.interestrate.annuity.derivative.Annuity: java.lang.Object accept(com.opengamma.analytics.financial.interestrate.InstrumentDerivativeVisitor,java.lang.Object)>($r20, $r21);

        $r23 = (com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyMulticurveSensitivity) $r22;

        $r24 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.swap.derivative.Swap: com.opengamma.analytics.financial.interestrate.annuity.derivative.Annuity getSecondLeg()>();

        $r25 = virtualinvoke $r24.<com.opengamma.analytics.financial.interestrate.annuity.derivative.Annuity: com.opengamma.util.money.Currency getCurrency()>();

        r43 = virtualinvoke $r23.<com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyMulticurveSensitivity: com.opengamma.analytics.financial.provider.sensitivity.multicurve.MulticurveSensitivity getSensitivity(com.opengamma.util.money.Currency)>($r25);

        $r26 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.swap.derivative.Swap: com.opengamma.analytics.financial.interestrate.annuity.derivative.Annuity getFirstLeg()>();

        $r27 = virtualinvoke $r26.<com.opengamma.analytics.financial.interestrate.annuity.derivative.Annuity: com.opengamma.analytics.financial.interestrate.payments.derivative.Payment getNthPayment(int)>(0);

        r44 = (com.opengamma.analytics.financial.interestrate.payments.derivative.CouponFixedAccruedCompounding) $r27;

        $r28 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.swap.derivative.Swap: com.opengamma.analytics.financial.interestrate.annuity.derivative.Annuity getSecondLeg()>();

        $r29 = <com.opengamma.analytics.financial.provider.calculator.discounting.ParSpreadMarketQuoteCurveSensitivityDiscountingCalculator: com.opengamma.analytics.financial.provider.calculator.discounting.PresentValueDiscountingCalculator PVDC>;

        $r30 = virtualinvoke $r28.<com.opengamma.analytics.financial.interestrate.annuity.derivative.Annuity: java.lang.Object accept(com.opengamma.analytics.financial.interestrate.InstrumentDerivativeVisitor,java.lang.Object)>($r29, r2);

        $r31 = (com.opengamma.util.money.MultipleCurrencyAmount) $r30;

        $r32 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.swap.derivative.Swap: com.opengamma.analytics.financial.interestrate.annuity.derivative.Annuity getSecondLeg()>();

        $r33 = virtualinvoke $r32.<com.opengamma.analytics.financial.interestrate.annuity.derivative.Annuity: com.opengamma.util.money.Currency getCurrency()>();

        d18 = virtualinvoke $r31.<com.opengamma.util.money.MultipleCurrencyAmount: double getAmount(com.opengamma.util.money.Currency)>($r33);

        $r34 = interfaceinvoke r2.<com.opengamma.analytics.financial.provider.description.interestrate.ParameterProviderInterface: com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface getMulticurveProvider()>();

        $r35 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.swap.derivative.Swap: com.opengamma.analytics.financial.interestrate.annuity.derivative.Annuity getFirstLeg()>();

        $r36 = virtualinvoke $r35.<com.opengamma.analytics.financial.interestrate.annuity.derivative.Annuity: com.opengamma.util.money.Currency getCurrency()>();

        $d6 = virtualinvoke r44.<com.opengamma.analytics.financial.interestrate.payments.derivative.CouponFixedAccruedCompounding: double getPaymentTime()>();

        $r37 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d6);

        d1 = interfaceinvoke $r34.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface: double getDiscountFactor(com.opengamma.util.money.Currency,java.lang.Double)>($r36, $r37);

        d3 = virtualinvoke r44.<com.opengamma.analytics.financial.interestrate.payments.derivative.CouponFixedAccruedCompounding: double getPaymentYearFraction()>();

        $r38 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.swap.derivative.Swap: com.opengamma.analytics.financial.interestrate.annuity.derivative.Annuity getSecondLeg()>();

        $r39 = virtualinvoke $r38.<com.opengamma.analytics.financial.interestrate.annuity.derivative.Annuity: com.opengamma.analytics.financial.interestrate.payments.derivative.Payment getNthPayment(int)>(0);

        $r40 = (com.opengamma.analytics.financial.interestrate.payments.derivative.CouponONCompounded) $r39;

        d4 = virtualinvoke $r40.<com.opengamma.analytics.financial.interestrate.payments.derivative.CouponONCompounded: double getNotional()>();

        $d11 = 1.0 / d3;

        $d7 = d18 / d1;

        $d10 = $d7 / d4;

        $d8 = 1.0 / d3;

        $d9 = $d8 - 1.0;

        $d12 = staticinvoke <java.lang.Math: double pow(double,double)>($d10, $d9);

        $d14 = $d11 * $d12;

        $d13 = d1 * d4;

        d5 = $d14 / $d13;

        $d15 = d18 * d5;

        $d16 = $d15 / d1;

        r3 = virtualinvoke r42.<com.opengamma.analytics.financial.provider.sensitivity.multicurve.MulticurveSensitivity: com.opengamma.analytics.financial.provider.sensitivity.multicurve.MulticurveSensitivity multipliedBy(double)>($d16);

        $d17 = neg d5;

        r4 = virtualinvoke r43.<com.opengamma.analytics.financial.provider.sensitivity.multicurve.MulticurveSensitivity: com.opengamma.analytics.financial.provider.sensitivity.multicurve.MulticurveSensitivity multipliedBy(double)>($d17);

        $r41 = virtualinvoke r3.<com.opengamma.analytics.financial.provider.sensitivity.multicurve.MulticurveSensitivity: com.opengamma.analytics.financial.provider.sensitivity.multicurve.MulticurveSensitivity plus(com.opengamma.analytics.financial.provider.sensitivity.multicurve.MulticurveSensitivity)>(r4);

        return $r41;

     label1:
        $r45 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.swap.derivative.Swap: com.opengamma.analytics.financial.interestrate.annuity.derivative.Annuity getFirstLeg()>();

        r46 = virtualinvoke $r45.<com.opengamma.analytics.financial.interestrate.annuity.derivative.Annuity: com.opengamma.util.money.Currency getCurrency()>();

        $r47 = <com.opengamma.analytics.financial.provider.calculator.discounting.ParSpreadMarketQuoteCurveSensitivityDiscountingCalculator: com.opengamma.analytics.financial.provider.calculator.discounting.PresentValueCurveSensitivityDiscountingCalculator PVCSDC>;

        $r48 = interfaceinvoke r2.<com.opengamma.analytics.financial.provider.description.interestrate.ParameterProviderInterface: com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface getMulticurveProvider()>();

        $r49 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.swap.derivative.Swap: java.lang.Object accept(com.opengamma.analytics.financial.interestrate.InstrumentDerivativeVisitor,java.lang.Object)>($r47, $r48);

        r50 = (com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyMulticurveSensitivity) $r49;

        $r51 = interfaceinvoke r2.<com.opengamma.analytics.financial.provider.description.interestrate.ParameterProviderInterface: com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface getMulticurveProvider()>();

        $r52 = interfaceinvoke $r51.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface: com.opengamma.analytics.financial.forex.method.FXMatrix getFxRates()>();

        $r53 = virtualinvoke r50.<com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyMulticurveSensitivity: com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyMulticurveSensitivity converted(com.opengamma.util.money.Currency,com.opengamma.analytics.financial.forex.method.FXMatrix)>(r46, $r52);

        r54 = virtualinvoke $r53.<com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyMulticurveSensitivity: com.opengamma.analytics.financial.provider.sensitivity.multicurve.MulticurveSensitivity getSensitivity(com.opengamma.util.money.Currency)>(r46);

        $r55 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.swap.derivative.Swap: com.opengamma.analytics.financial.interestrate.annuity.derivative.Annuity getFirstLeg()>();

        $r56 = <com.opengamma.analytics.financial.provider.calculator.discounting.ParSpreadMarketQuoteCurveSensitivityDiscountingCalculator: com.opengamma.analytics.financial.provider.calculator.discounting.PresentValueMarketQuoteSensitivityCurveSensitivityDiscountingCalculator PVMQSCSMC>;

        $r57 = interfaceinvoke r2.<com.opengamma.analytics.financial.provider.description.interestrate.ParameterProviderInterface: com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface getMulticurveProvider()>();

        $r58 = virtualinvoke $r55.<com.opengamma.analytics.financial.interestrate.annuity.derivative.Annuity: java.lang.Object accept(com.opengamma.analytics.financial.interestrate.InstrumentDerivativeVisitor,java.lang.Object)>($r56, $r57);

        r59 = (com.opengamma.analytics.financial.provider.sensitivity.multicurve.MulticurveSensitivity) $r58;

        $r60 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.swap.derivative.Swap: com.opengamma.analytics.financial.interestrate.annuity.derivative.Annuity getFirstLeg()>();

        $r61 = <com.opengamma.analytics.financial.provider.calculator.discounting.ParSpreadMarketQuoteCurveSensitivityDiscountingCalculator: com.opengamma.analytics.financial.provider.calculator.discounting.PresentValueMarketQuoteSensitivityDiscountingCalculator PVMQSMC>;

        $r62 = interfaceinvoke r2.<com.opengamma.analytics.financial.provider.description.interestrate.ParameterProviderInterface: com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface getMulticurveProvider()>();

        $r63 = virtualinvoke $r60.<com.opengamma.analytics.financial.interestrate.annuity.derivative.Annuity: java.lang.Object accept(com.opengamma.analytics.financial.interestrate.InstrumentDerivativeVisitor,java.lang.Object)>($r61, $r62);

        $r64 = (java.lang.Double) $r63;

        d0 = virtualinvoke $r64.<java.lang.Double: double doubleValue()>();

        $r65 = interfaceinvoke r2.<com.opengamma.analytics.financial.provider.description.interestrate.ParameterProviderInterface: com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface getMulticurveProvider()>();

        $r66 = interfaceinvoke $r65.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface: com.opengamma.analytics.financial.forex.method.FXMatrix getFxRates()>();

        $r67 = <com.opengamma.analytics.financial.provider.calculator.discounting.ParSpreadMarketQuoteCurveSensitivityDiscountingCalculator: com.opengamma.analytics.financial.provider.calculator.discounting.PresentValueDiscountingCalculator PVDC>;

        $r68 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.swap.derivative.Swap: java.lang.Object accept(com.opengamma.analytics.financial.interestrate.InstrumentDerivativeVisitor,java.lang.Object)>($r67, r2);

        $r69 = (com.opengamma.util.money.MultipleCurrencyAmount) $r68;

        $r70 = virtualinvoke $r66.<com.opengamma.analytics.financial.forex.method.FXMatrix: com.opengamma.util.money.CurrencyAmount convert(com.opengamma.util.money.MultipleCurrencyAmount,com.opengamma.util.money.Currency)>($r69, r46);

        d2 = virtualinvoke $r70.<com.opengamma.util.money.CurrencyAmount: double getAmount()>();

        $d19 = -1.0 / d0;

        $r71 = virtualinvoke r54.<com.opengamma.analytics.financial.provider.sensitivity.multicurve.MulticurveSensitivity: com.opengamma.analytics.financial.provider.sensitivity.multicurve.MulticurveSensitivity multipliedBy(double)>($d19);

        $d20 = d0 * d0;

        $d21 = d2 / $d20;

        $r72 = virtualinvoke r59.<com.opengamma.analytics.financial.provider.sensitivity.multicurve.MulticurveSensitivity: com.opengamma.analytics.financial.provider.sensitivity.multicurve.MulticurveSensitivity multipliedBy(double)>($d21);

        $r73 = virtualinvoke $r71.<com.opengamma.analytics.financial.provider.sensitivity.multicurve.MulticurveSensitivity: com.opengamma.analytics.financial.provider.sensitivity.multicurve.MulticurveSensitivity plus(com.opengamma.analytics.financial.provider.sensitivity.multicurve.MulticurveSensitivity)>($r72);

        return $r73;
    }

    public com.opengamma.analytics.financial.provider.sensitivity.multicurve.MulticurveSensitivity visitFixedCouponSwap(com.opengamma.analytics.financial.interestrate.swap.derivative.SwapFixedCoupon, com.opengamma.analytics.financial.provider.description.interestrate.ParameterProviderInterface)
    {
        com.opengamma.analytics.financial.provider.calculator.discounting.ParSpreadMarketQuoteCurveSensitivityDiscountingCalculator r0;
        com.opengamma.analytics.financial.interestrate.swap.derivative.SwapFixedCoupon r1;
        com.opengamma.analytics.financial.provider.description.interestrate.ParameterProviderInterface r2;
        com.opengamma.analytics.financial.provider.sensitivity.multicurve.MulticurveSensitivity $r3;

        r0 := @this: com.opengamma.analytics.financial.provider.calculator.discounting.ParSpreadMarketQuoteCurveSensitivityDiscountingCalculator;

        r1 := @parameter0: com.opengamma.analytics.financial.interestrate.swap.derivative.SwapFixedCoupon;

        r2 := @parameter1: com.opengamma.analytics.financial.provider.description.interestrate.ParameterProviderInterface;

        $r3 = virtualinvoke r0.<com.opengamma.analytics.financial.provider.calculator.discounting.ParSpreadMarketQuoteCurveSensitivityDiscountingCalculator: com.opengamma.analytics.financial.provider.sensitivity.multicurve.MulticurveSensitivity visitSwap(com.opengamma.analytics.financial.interestrate.swap.derivative.Swap,com.opengamma.analytics.financial.provider.description.interestrate.ParameterProviderInterface)>(r1, r2);

        return $r3;
    }

    public com.opengamma.analytics.financial.provider.sensitivity.multicurve.MulticurveSensitivity visitSwapMultileg(com.opengamma.analytics.financial.interestrate.swap.derivative.SwapMultileg, com.opengamma.analytics.financial.provider.description.interestrate.ParameterProviderInterface)
    {
        com.opengamma.analytics.financial.provider.calculator.discounting.ParSpreadMarketQuoteCurveSensitivityDiscountingCalculator r0;
        com.opengamma.analytics.financial.interestrate.swap.derivative.SwapMultileg r1;
        com.opengamma.analytics.financial.provider.description.interestrate.ParameterProviderInterface r2;
        com.opengamma.util.money.Currency r3;
        com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyMulticurveSensitivity r4, $r15;
        com.opengamma.analytics.financial.provider.sensitivity.multicurve.MulticurveSensitivity r5, r6, $r34, $r35, $r36;
        double d0, d1, $d2, $d3, $d4;
        com.opengamma.analytics.financial.interestrate.annuity.derivative.Annuity[] $r9, $r16, $r21;
        com.opengamma.analytics.financial.interestrate.annuity.derivative.Annuity $r10, $r17, $r22;
        com.opengamma.analytics.financial.provider.calculator.discounting.PresentValueCurveSensitivityDiscountingCalculator $r11;
        java.lang.Object $r12, $r20, $r25, $r31;
        com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface $r13, $r19, $r24, $r27, $r30;
        com.opengamma.analytics.financial.forex.method.FXMatrix $r14, $r28;
        com.opengamma.analytics.financial.provider.calculator.discounting.PresentValueMarketQuoteSensitivityCurveSensitivityDiscountingCalculator $r18;
        com.opengamma.analytics.financial.provider.calculator.discounting.PresentValueMarketQuoteSensitivityDiscountingCalculator $r23;
        java.lang.Double $r26;
        com.opengamma.analytics.financial.provider.calculator.discounting.PresentValueDiscountingCalculator $r29;
        com.opengamma.util.money.MultipleCurrencyAmount $r32;
        com.opengamma.util.money.CurrencyAmount $r33;

        r0 := @this: com.opengamma.analytics.financial.provider.calculator.discounting.ParSpreadMarketQuoteCurveSensitivityDiscountingCalculator;

        r1 := @parameter0: com.opengamma.analytics.financial.interestrate.swap.derivative.SwapMultileg;

        r2 := @parameter1: com.opengamma.analytics.financial.provider.description.interestrate.ParameterProviderInterface;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, "multicurve");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "Swap");

        $r9 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.swap.derivative.SwapMultileg: com.opengamma.analytics.financial.interestrate.annuity.derivative.Annuity[] getLegs()>();

        $r10 = $r9[0];

        r3 = virtualinvoke $r10.<com.opengamma.analytics.financial.interestrate.annuity.derivative.Annuity: com.opengamma.util.money.Currency getCurrency()>();

        $r11 = <com.opengamma.analytics.financial.provider.calculator.discounting.ParSpreadMarketQuoteCurveSensitivityDiscountingCalculator: com.opengamma.analytics.financial.provider.calculator.discounting.PresentValueCurveSensitivityDiscountingCalculator PVCSDC>;

        $r12 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.swap.derivative.SwapMultileg: java.lang.Object accept(com.opengamma.analytics.financial.interestrate.InstrumentDerivativeVisitor,java.lang.Object)>($r11, r2);

        r4 = (com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyMulticurveSensitivity) $r12;

        $r13 = interfaceinvoke r2.<com.opengamma.analytics.financial.provider.description.interestrate.ParameterProviderInterface: com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface getMulticurveProvider()>();

        $r14 = interfaceinvoke $r13.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface: com.opengamma.analytics.financial.forex.method.FXMatrix getFxRates()>();

        $r15 = virtualinvoke r4.<com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyMulticurveSensitivity: com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyMulticurveSensitivity converted(com.opengamma.util.money.Currency,com.opengamma.analytics.financial.forex.method.FXMatrix)>(r3, $r14);

        r5 = virtualinvoke $r15.<com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyMulticurveSensitivity: com.opengamma.analytics.financial.provider.sensitivity.multicurve.MulticurveSensitivity getSensitivity(com.opengamma.util.money.Currency)>(r3);

        $r16 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.swap.derivative.SwapMultileg: com.opengamma.analytics.financial.interestrate.annuity.derivative.Annuity[] getLegs()>();

        $r17 = $r16[0];

        $r18 = <com.opengamma.analytics.financial.provider.calculator.discounting.ParSpreadMarketQuoteCurveSensitivityDiscountingCalculator: com.opengamma.analytics.financial.provider.calculator.discounting.PresentValueMarketQuoteSensitivityCurveSensitivityDiscountingCalculator PVMQSCSMC>;

        $r19 = interfaceinvoke r2.<com.opengamma.analytics.financial.provider.description.interestrate.ParameterProviderInterface: com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface getMulticurveProvider()>();

        $r20 = virtualinvoke $r17.<com.opengamma.analytics.financial.interestrate.annuity.derivative.Annuity: java.lang.Object accept(com.opengamma.analytics.financial.interestrate.InstrumentDerivativeVisitor,java.lang.Object)>($r18, $r19);

        r6 = (com.opengamma.analytics.financial.provider.sensitivity.multicurve.MulticurveSensitivity) $r20;

        $r21 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.swap.derivative.SwapMultileg: com.opengamma.analytics.financial.interestrate.annuity.derivative.Annuity[] getLegs()>();

        $r22 = $r21[0];

        $r23 = <com.opengamma.analytics.financial.provider.calculator.discounting.ParSpreadMarketQuoteCurveSensitivityDiscountingCalculator: com.opengamma.analytics.financial.provider.calculator.discounting.PresentValueMarketQuoteSensitivityDiscountingCalculator PVMQSMC>;

        $r24 = interfaceinvoke r2.<com.opengamma.analytics.financial.provider.description.interestrate.ParameterProviderInterface: com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface getMulticurveProvider()>();

        $r25 = virtualinvoke $r22.<com.opengamma.analytics.financial.interestrate.annuity.derivative.Annuity: java.lang.Object accept(com.opengamma.analytics.financial.interestrate.InstrumentDerivativeVisitor,java.lang.Object)>($r23, $r24);

        $r26 = (java.lang.Double) $r25;

        d0 = virtualinvoke $r26.<java.lang.Double: double doubleValue()>();

        $r27 = interfaceinvoke r2.<com.opengamma.analytics.financial.provider.description.interestrate.ParameterProviderInterface: com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface getMulticurveProvider()>();

        $r28 = interfaceinvoke $r27.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface: com.opengamma.analytics.financial.forex.method.FXMatrix getFxRates()>();

        $r29 = <com.opengamma.analytics.financial.provider.calculator.discounting.ParSpreadMarketQuoteCurveSensitivityDiscountingCalculator: com.opengamma.analytics.financial.provider.calculator.discounting.PresentValueDiscountingCalculator PVDC>;

        $r30 = interfaceinvoke r2.<com.opengamma.analytics.financial.provider.description.interestrate.ParameterProviderInterface: com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface getMulticurveProvider()>();

        $r31 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.swap.derivative.SwapMultileg: java.lang.Object accept(com.opengamma.analytics.financial.interestrate.InstrumentDerivativeVisitor,java.lang.Object)>($r29, $r30);

        $r32 = (com.opengamma.util.money.MultipleCurrencyAmount) $r31;

        $r33 = virtualinvoke $r28.<com.opengamma.analytics.financial.forex.method.FXMatrix: com.opengamma.util.money.CurrencyAmount convert(com.opengamma.util.money.MultipleCurrencyAmount,com.opengamma.util.money.Currency)>($r32, r3);

        d1 = virtualinvoke $r33.<com.opengamma.util.money.CurrencyAmount: double getAmount()>();

        $d2 = -1.0 / d0;

        $r34 = virtualinvoke r5.<com.opengamma.analytics.financial.provider.sensitivity.multicurve.MulticurveSensitivity: com.opengamma.analytics.financial.provider.sensitivity.multicurve.MulticurveSensitivity multipliedBy(double)>($d2);

        $d3 = d0 * d0;

        $d4 = d1 / $d3;

        $r35 = virtualinvoke r6.<com.opengamma.analytics.financial.provider.sensitivity.multicurve.MulticurveSensitivity: com.opengamma.analytics.financial.provider.sensitivity.multicurve.MulticurveSensitivity multipliedBy(double)>($d4);

        $r36 = virtualinvoke $r34.<com.opengamma.analytics.financial.provider.sensitivity.multicurve.MulticurveSensitivity: com.opengamma.analytics.financial.provider.sensitivity.multicurve.MulticurveSensitivity plus(com.opengamma.analytics.financial.provider.sensitivity.multicurve.MulticurveSensitivity)>($r35);

        return $r36;
    }

    public com.opengamma.analytics.financial.provider.sensitivity.multicurve.MulticurveSensitivity visitInterestRateFutureTransaction(com.opengamma.analytics.financial.interestrate.future.derivative.InterestRateFutureTransaction, com.opengamma.analytics.financial.provider.description.interestrate.ParameterProviderInterface)
    {
        com.opengamma.analytics.financial.provider.calculator.discounting.ParSpreadMarketQuoteCurveSensitivityDiscountingCalculator r0;
        com.opengamma.analytics.financial.interestrate.future.derivative.InterestRateFutureTransaction r1;
        com.opengamma.analytics.financial.provider.description.interestrate.ParameterProviderInterface r2;
        com.opengamma.analytics.financial.interestrate.future.provider.InterestRateFutureSecurityDiscountingMethod $r3;
        com.opengamma.analytics.financial.interestrate.future.derivative.FuturesSecurity $r4;
        com.opengamma.analytics.financial.provider.sensitivity.multicurve.MulticurveSensitivity $r5;

        r0 := @this: com.opengamma.analytics.financial.provider.calculator.discounting.ParSpreadMarketQuoteCurveSensitivityDiscountingCalculator;

        r1 := @parameter0: com.opengamma.analytics.financial.interestrate.future.derivative.InterestRateFutureTransaction;

        r2 := @parameter1: com.opengamma.analytics.financial.provider.description.interestrate.ParameterProviderInterface;

        $r3 = <com.opengamma.analytics.financial.provider.calculator.discounting.ParSpreadMarketQuoteCurveSensitivityDiscountingCalculator: com.opengamma.analytics.financial.interestrate.future.provider.InterestRateFutureSecurityDiscountingMethod METHOD_STIR_FUT>;

        $r4 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.future.derivative.InterestRateFutureTransaction: com.opengamma.analytics.financial.interestrate.future.derivative.FuturesSecurity getUnderlyingSecurity()>();

        $r5 = virtualinvoke $r3.<com.opengamma.analytics.financial.interestrate.future.provider.InterestRateFutureSecurityDiscountingMethod: com.opengamma.analytics.financial.provider.sensitivity.multicurve.MulticurveSensitivity priceCurveSensitivity(com.opengamma.analytics.financial.interestrate.future.derivative.FuturesSecurity,com.opengamma.analytics.financial.provider.description.interestrate.ParameterProviderInterface)>($r4, r2);

        return $r5;
    }

    public com.opengamma.analytics.financial.provider.sensitivity.multicurve.MulticurveSensitivity visitFederalFundsFutureTransaction(com.opengamma.analytics.financial.interestrate.future.derivative.FederalFundsFutureTransaction, com.opengamma.analytics.financial.provider.description.interestrate.ParameterProviderInterface)
    {
        com.opengamma.analytics.financial.provider.calculator.discounting.ParSpreadMarketQuoteCurveSensitivityDiscountingCalculator r0;
        com.opengamma.analytics.financial.interestrate.future.derivative.FederalFundsFutureTransaction r1;
        com.opengamma.analytics.financial.provider.description.interestrate.ParameterProviderInterface r2;
        com.opengamma.analytics.financial.interestrate.future.provider.FederalFundsFutureSecurityDiscountingMethod $r3;
        com.opengamma.analytics.financial.interestrate.future.derivative.FuturesSecurity $r4;
        com.opengamma.analytics.financial.provider.sensitivity.multicurve.MulticurveSensitivity $r5;

        r0 := @this: com.opengamma.analytics.financial.provider.calculator.discounting.ParSpreadMarketQuoteCurveSensitivityDiscountingCalculator;

        r1 := @parameter0: com.opengamma.analytics.financial.interestrate.future.derivative.FederalFundsFutureTransaction;

        r2 := @parameter1: com.opengamma.analytics.financial.provider.description.interestrate.ParameterProviderInterface;

        $r3 = <com.opengamma.analytics.financial.provider.calculator.discounting.ParSpreadMarketQuoteCurveSensitivityDiscountingCalculator: com.opengamma.analytics.financial.interestrate.future.provider.FederalFundsFutureSecurityDiscountingMethod METHOD_FED_FUNDS>;

        $r4 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.future.derivative.FederalFundsFutureTransaction: com.opengamma.analytics.financial.interestrate.future.derivative.FuturesSecurity getUnderlyingSecurity()>();

        $r5 = virtualinvoke $r3.<com.opengamma.analytics.financial.interestrate.future.provider.FederalFundsFutureSecurityDiscountingMethod: com.opengamma.analytics.financial.provider.sensitivity.multicurve.MulticurveSensitivity priceCurveSensitivity(com.opengamma.analytics.financial.interestrate.future.derivative.FuturesSecurity,com.opengamma.analytics.financial.provider.description.interestrate.ParameterProviderInterface)>($r4, r2);

        return $r5;
    }

    public com.opengamma.analytics.financial.provider.sensitivity.multicurve.MulticurveSensitivity visitSwapFuturesPriceDeliverableTransaction(com.opengamma.analytics.financial.interestrate.future.derivative.SwapFuturesPriceDeliverableTransaction, com.opengamma.analytics.financial.provider.description.interestrate.ParameterProviderInterface)
    {
        com.opengamma.analytics.financial.provider.calculator.discounting.ParSpreadMarketQuoteCurveSensitivityDiscountingCalculator r0;
        com.opengamma.analytics.financial.interestrate.future.derivative.SwapFuturesPriceDeliverableTransaction r1;
        com.opengamma.analytics.financial.provider.description.interestrate.ParameterProviderInterface r2;
        com.opengamma.analytics.financial.interestrate.future.provider.FuturesSecurityMulticurveMethod $r3;
        com.opengamma.analytics.financial.interestrate.future.derivative.FuturesSecurity $r4;
        com.opengamma.analytics.financial.provider.sensitivity.multicurve.MulticurveSensitivity $r5;

        r0 := @this: com.opengamma.analytics.financial.provider.calculator.discounting.ParSpreadMarketQuoteCurveSensitivityDiscountingCalculator;

        r1 := @parameter0: com.opengamma.analytics.financial.interestrate.future.derivative.SwapFuturesPriceDeliverableTransaction;

        r2 := @parameter1: com.opengamma.analytics.financial.provider.description.interestrate.ParameterProviderInterface;

        $r3 = <com.opengamma.analytics.financial.provider.calculator.discounting.ParSpreadMarketQuoteCurveSensitivityDiscountingCalculator: com.opengamma.analytics.financial.interestrate.future.provider.FuturesSecurityMulticurveMethod METHOD_FUT>;

        $r4 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.future.derivative.SwapFuturesPriceDeliverableTransaction: com.opengamma.analytics.financial.interestrate.future.derivative.FuturesSecurity getUnderlyingSecurity()>();

        $r5 = virtualinvoke $r3.<com.opengamma.analytics.financial.interestrate.future.provider.FuturesSecurityMulticurveMethod: com.opengamma.analytics.financial.provider.sensitivity.multicurve.MulticurveSensitivity priceCurveSensitivity(com.opengamma.analytics.financial.interestrate.future.derivative.FuturesSecurity,com.opengamma.analytics.financial.provider.description.interestrate.ParameterProviderInterface)>($r4, r2);

        return $r5;
    }

    public com.opengamma.analytics.financial.provider.sensitivity.multicurve.MulticurveSensitivity visitForexSwap(com.opengamma.analytics.financial.forex.derivative.ForexSwap, com.opengamma.analytics.financial.provider.description.interestrate.ParameterProviderInterface)
    {
        com.opengamma.analytics.financial.provider.calculator.discounting.ParSpreadMarketQuoteCurveSensitivityDiscountingCalculator r0;
        com.opengamma.analytics.financial.forex.derivative.ForexSwap r1;
        com.opengamma.analytics.financial.provider.description.interestrate.ParameterProviderInterface r2;
        com.opengamma.analytics.financial.forex.provider.ForexSwapDiscountingMethod $r3;
        com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface $r4;
        com.opengamma.analytics.financial.provider.sensitivity.multicurve.MulticurveSensitivity $r5;

        r0 := @this: com.opengamma.analytics.financial.provider.calculator.discounting.ParSpreadMarketQuoteCurveSensitivityDiscountingCalculator;

        r1 := @parameter0: com.opengamma.analytics.financial.forex.derivative.ForexSwap;

        r2 := @parameter1: com.opengamma.analytics.financial.provider.description.interestrate.ParameterProviderInterface;

        $r3 = <com.opengamma.analytics.financial.provider.calculator.discounting.ParSpreadMarketQuoteCurveSensitivityDiscountingCalculator: com.opengamma.analytics.financial.forex.provider.ForexSwapDiscountingMethod METHOD_FOREX_SWAP>;

        $r4 = interfaceinvoke r2.<com.opengamma.analytics.financial.provider.description.interestrate.ParameterProviderInterface: com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface getMulticurveProvider()>();

        $r5 = virtualinvoke $r3.<com.opengamma.analytics.financial.forex.provider.ForexSwapDiscountingMethod: com.opengamma.analytics.financial.provider.sensitivity.multicurve.MulticurveSensitivity parSpreadCurveSensitivity(com.opengamma.analytics.financial.forex.derivative.ForexSwap,com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface)>(r1, $r4);

        return $r5;
    }

    public com.opengamma.analytics.financial.provider.sensitivity.multicurve.MulticurveSensitivity visitForex(com.opengamma.analytics.financial.forex.derivative.Forex, com.opengamma.analytics.financial.provider.description.interestrate.ParameterProviderInterface)
    {
        com.opengamma.analytics.financial.provider.calculator.discounting.ParSpreadMarketQuoteCurveSensitivityDiscountingCalculator r0;
        com.opengamma.analytics.financial.forex.derivative.Forex r1;
        com.opengamma.analytics.financial.provider.description.interestrate.ParameterProviderInterface r2;
        com.opengamma.analytics.financial.forex.provider.ForexDiscountingMethod $r3;
        com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface $r4;
        com.opengamma.analytics.financial.provider.sensitivity.multicurve.MulticurveSensitivity $r5;

        r0 := @this: com.opengamma.analytics.financial.provider.calculator.discounting.ParSpreadMarketQuoteCurveSensitivityDiscountingCalculator;

        r1 := @parameter0: com.opengamma.analytics.financial.forex.derivative.Forex;

        r2 := @parameter1: com.opengamma.analytics.financial.provider.description.interestrate.ParameterProviderInterface;

        $r3 = <com.opengamma.analytics.financial.provider.calculator.discounting.ParSpreadMarketQuoteCurveSensitivityDiscountingCalculator: com.opengamma.analytics.financial.forex.provider.ForexDiscountingMethod METHOD_FOREX>;

        $r4 = interfaceinvoke r2.<com.opengamma.analytics.financial.provider.description.interestrate.ParameterProviderInterface: com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface getMulticurveProvider()>();

        $r5 = virtualinvoke $r3.<com.opengamma.analytics.financial.forex.provider.ForexDiscountingMethod: com.opengamma.analytics.financial.provider.sensitivity.multicurve.MulticurveSensitivity parSpreadCurveSensitivity(com.opengamma.analytics.financial.forex.derivative.Forex,com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface)>(r1, $r4);

        return $r5;
    }

    public volatile java.lang.Object visitForexSwap(com.opengamma.analytics.financial.forex.derivative.ForexSwap, java.lang.Object)
    {
        com.opengamma.analytics.financial.provider.calculator.discounting.ParSpreadMarketQuoteCurveSensitivityDiscountingCalculator r0;
        com.opengamma.analytics.financial.forex.derivative.ForexSwap r1;
        java.lang.Object r2;
        com.opengamma.analytics.financial.provider.description.interestrate.ParameterProviderInterface $r3;
        com.opengamma.analytics.financial.provider.sensitivity.multicurve.MulticurveSensitivity $r4;

        r0 := @this: com.opengamma.analytics.financial.provider.calculator.discounting.ParSpreadMarketQuoteCurveSensitivityDiscountingCalculator;

        r1 := @parameter0: com.opengamma.analytics.financial.forex.derivative.ForexSwap;

        r2 := @parameter1: java.lang.Object;

        $r3 = (com.opengamma.analytics.financial.provider.description.interestrate.ParameterProviderInterface) r2;

        $r4 = virtualinvoke r0.<com.opengamma.analytics.financial.provider.calculator.discounting.ParSpreadMarketQuoteCurveSensitivityDiscountingCalculator: com.opengamma.analytics.financial.provider.sensitivity.multicurve.MulticurveSensitivity visitForexSwap(com.opengamma.analytics.financial.forex.derivative.ForexSwap,com.opengamma.analytics.financial.provider.description.interestrate.ParameterProviderInterface)>(r1, $r3);

        return $r4;
    }

    public volatile java.lang.Object visitForex(com.opengamma.analytics.financial.forex.derivative.Forex, java.lang.Object)
    {
        com.opengamma.analytics.financial.provider.calculator.discounting.ParSpreadMarketQuoteCurveSensitivityDiscountingCalculator r0;
        com.opengamma.analytics.financial.forex.derivative.Forex r1;
        java.lang.Object r2;
        com.opengamma.analytics.financial.provider.description.interestrate.ParameterProviderInterface $r3;
        com.opengamma.analytics.financial.provider.sensitivity.multicurve.MulticurveSensitivity $r4;

        r0 := @this: com.opengamma.analytics.financial.provider.calculator.discounting.ParSpreadMarketQuoteCurveSensitivityDiscountingCalculator;

        r1 := @parameter0: com.opengamma.analytics.financial.forex.derivative.Forex;

        r2 := @parameter1: java.lang.Object;

        $r3 = (com.opengamma.analytics.financial.provider.description.interestrate.ParameterProviderInterface) r2;

        $r4 = virtualinvoke r0.<com.opengamma.analytics.financial.provider.calculator.discounting.ParSpreadMarketQuoteCurveSensitivityDiscountingCalculator: com.opengamma.analytics.financial.provider.sensitivity.multicurve.MulticurveSensitivity visitForex(com.opengamma.analytics.financial.forex.derivative.Forex,com.opengamma.analytics.financial.provider.description.interestrate.ParameterProviderInterface)>(r1, $r3);

        return $r4;
    }

    public volatile java.lang.Object visitDepositIbor(com.opengamma.analytics.financial.interestrate.cash.derivative.DepositIbor, java.lang.Object)
    {
        com.opengamma.analytics.financial.provider.calculator.discounting.ParSpreadMarketQuoteCurveSensitivityDiscountingCalculator r0;
        com.opengamma.analytics.financial.interestrate.cash.derivative.DepositIbor r1;
        java.lang.Object r2;
        com.opengamma.analytics.financial.provider.description.interestrate.ParameterProviderInterface $r3;
        com.opengamma.analytics.financial.provider.sensitivity.multicurve.MulticurveSensitivity $r4;

        r0 := @this: com.opengamma.analytics.financial.provider.calculator.discounting.ParSpreadMarketQuoteCurveSensitivityDiscountingCalculator;

        r1 := @parameter0: com.opengamma.analytics.financial.interestrate.cash.derivative.DepositIbor;

        r2 := @parameter1: java.lang.Object;

        $r3 = (com.opengamma.analytics.financial.provider.description.interestrate.ParameterProviderInterface) r2;

        $r4 = virtualinvoke r0.<com.opengamma.analytics.financial.provider.calculator.discounting.ParSpreadMarketQuoteCurveSensitivityDiscountingCalculator: com.opengamma.analytics.financial.provider.sensitivity.multicurve.MulticurveSensitivity visitDepositIbor(com.opengamma.analytics.financial.interestrate.cash.derivative.DepositIbor,com.opengamma.analytics.financial.provider.description.interestrate.ParameterProviderInterface)>(r1, $r3);

        return $r4;
    }

    public volatile java.lang.Object visitSwapMultileg(com.opengamma.analytics.financial.interestrate.swap.derivative.SwapMultileg, java.lang.Object)
    {
        com.opengamma.analytics.financial.provider.calculator.discounting.ParSpreadMarketQuoteCurveSensitivityDiscountingCalculator r0;
        com.opengamma.analytics.financial.interestrate.swap.derivative.SwapMultileg r1;
        java.lang.Object r2;
        com.opengamma.analytics.financial.provider.description.interestrate.ParameterProviderInterface $r3;
        com.opengamma.analytics.financial.provider.sensitivity.multicurve.MulticurveSensitivity $r4;

        r0 := @this: com.opengamma.analytics.financial.provider.calculator.discounting.ParSpreadMarketQuoteCurveSensitivityDiscountingCalculator;

        r1 := @parameter0: com.opengamma.analytics.financial.interestrate.swap.derivative.SwapMultileg;

        r2 := @parameter1: java.lang.Object;

        $r3 = (com.opengamma.analytics.financial.provider.description.interestrate.ParameterProviderInterface) r2;

        $r4 = virtualinvoke r0.<com.opengamma.analytics.financial.provider.calculator.discounting.ParSpreadMarketQuoteCurveSensitivityDiscountingCalculator: com.opengamma.analytics.financial.provider.sensitivity.multicurve.MulticurveSensitivity visitSwapMultileg(com.opengamma.analytics.financial.interestrate.swap.derivative.SwapMultileg,com.opengamma.analytics.financial.provider.description.interestrate.ParameterProviderInterface)>(r1, $r3);

        return $r4;
    }

    public volatile java.lang.Object visitSwap(com.opengamma.analytics.financial.interestrate.swap.derivative.Swap, java.lang.Object)
    {
        com.opengamma.analytics.financial.provider.calculator.discounting.ParSpreadMarketQuoteCurveSensitivityDiscountingCalculator r0;
        com.opengamma.analytics.financial.interestrate.swap.derivative.Swap r1;
        java.lang.Object r2;
        com.opengamma.analytics.financial.provider.description.interestrate.ParameterProviderInterface $r3;
        com.opengamma.analytics.financial.provider.sensitivity.multicurve.MulticurveSensitivity $r4;

        r0 := @this: com.opengamma.analytics.financial.provider.calculator.discounting.ParSpreadMarketQuoteCurveSensitivityDiscountingCalculator;

        r1 := @parameter0: com.opengamma.analytics.financial.interestrate.swap.derivative.Swap;

        r2 := @parameter1: java.lang.Object;

        $r3 = (com.opengamma.analytics.financial.provider.description.interestrate.ParameterProviderInterface) r2;

        $r4 = virtualinvoke r0.<com.opengamma.analytics.financial.provider.calculator.discounting.ParSpreadMarketQuoteCurveSensitivityDiscountingCalculator: com.opengamma.analytics.financial.provider.sensitivity.multicurve.MulticurveSensitivity visitSwap(com.opengamma.analytics.financial.interestrate.swap.derivative.Swap,com.opengamma.analytics.financial.provider.description.interestrate.ParameterProviderInterface)>(r1, $r3);

        return $r4;
    }

    public volatile java.lang.Object visitSwapFuturesPriceDeliverableTransaction(com.opengamma.analytics.financial.interestrate.future.derivative.SwapFuturesPriceDeliverableTransaction, java.lang.Object)
    {
        com.opengamma.analytics.financial.provider.calculator.discounting.ParSpreadMarketQuoteCurveSensitivityDiscountingCalculator r0;
        com.opengamma.analytics.financial.interestrate.future.derivative.SwapFuturesPriceDeliverableTransaction r1;
        java.lang.Object r2;
        com.opengamma.analytics.financial.provider.description.interestrate.ParameterProviderInterface $r3;
        com.opengamma.analytics.financial.provider.sensitivity.multicurve.MulticurveSensitivity $r4;

        r0 := @this: com.opengamma.analytics.financial.provider.calculator.discounting.ParSpreadMarketQuoteCurveSensitivityDiscountingCalculator;

        r1 := @parameter0: com.opengamma.analytics.financial.interestrate.future.derivative.SwapFuturesPriceDeliverableTransaction;

        r2 := @parameter1: java.lang.Object;

        $r3 = (com.opengamma.analytics.financial.provider.description.interestrate.ParameterProviderInterface) r2;

        $r4 = virtualinvoke r0.<com.opengamma.analytics.financial.provider.calculator.discounting.ParSpreadMarketQuoteCurveSensitivityDiscountingCalculator: com.opengamma.analytics.financial.provider.sensitivity.multicurve.MulticurveSensitivity visitSwapFuturesPriceDeliverableTransaction(com.opengamma.analytics.financial.interestrate.future.derivative.SwapFuturesPriceDeliverableTransaction,com.opengamma.analytics.financial.provider.description.interestrate.ParameterProviderInterface)>(r1, $r3);

        return $r4;
    }

    public volatile java.lang.Object visitFederalFundsFutureTransaction(com.opengamma.analytics.financial.interestrate.future.derivative.FederalFundsFutureTransaction, java.lang.Object)
    {
        com.opengamma.analytics.financial.provider.calculator.discounting.ParSpreadMarketQuoteCurveSensitivityDiscountingCalculator r0;
        com.opengamma.analytics.financial.interestrate.future.derivative.FederalFundsFutureTransaction r1;
        java.lang.Object r2;
        com.opengamma.analytics.financial.provider.description.interestrate.ParameterProviderInterface $r3;
        com.opengamma.analytics.financial.provider.sensitivity.multicurve.MulticurveSensitivity $r4;

        r0 := @this: com.opengamma.analytics.financial.provider.calculator.discounting.ParSpreadMarketQuoteCurveSensitivityDiscountingCalculator;

        r1 := @parameter0: com.opengamma.analytics.financial.interestrate.future.derivative.FederalFundsFutureTransaction;

        r2 := @parameter1: java.lang.Object;

        $r3 = (com.opengamma.analytics.financial.provider.description.interestrate.ParameterProviderInterface) r2;

        $r4 = virtualinvoke r0.<com.opengamma.analytics.financial.provider.calculator.discounting.ParSpreadMarketQuoteCurveSensitivityDiscountingCalculator: com.opengamma.analytics.financial.provider.sensitivity.multicurve.MulticurveSensitivity visitFederalFundsFutureTransaction(com.opengamma.analytics.financial.interestrate.future.derivative.FederalFundsFutureTransaction,com.opengamma.analytics.financial.provider.description.interestrate.ParameterProviderInterface)>(r1, $r3);

        return $r4;
    }

    public volatile java.lang.Object visitInterestRateFutureTransaction(com.opengamma.analytics.financial.interestrate.future.derivative.InterestRateFutureTransaction, java.lang.Object)
    {
        com.opengamma.analytics.financial.provider.calculator.discounting.ParSpreadMarketQuoteCurveSensitivityDiscountingCalculator r0;
        com.opengamma.analytics.financial.interestrate.future.derivative.InterestRateFutureTransaction r1;
        java.lang.Object r2;
        com.opengamma.analytics.financial.provider.description.interestrate.ParameterProviderInterface $r3;
        com.opengamma.analytics.financial.provider.sensitivity.multicurve.MulticurveSensitivity $r4;

        r0 := @this: com.opengamma.analytics.financial.provider.calculator.discounting.ParSpreadMarketQuoteCurveSensitivityDiscountingCalculator;

        r1 := @parameter0: com.opengamma.analytics.financial.interestrate.future.derivative.InterestRateFutureTransaction;

        r2 := @parameter1: java.lang.Object;

        $r3 = (com.opengamma.analytics.financial.provider.description.interestrate.ParameterProviderInterface) r2;

        $r4 = virtualinvoke r0.<com.opengamma.analytics.financial.provider.calculator.discounting.ParSpreadMarketQuoteCurveSensitivityDiscountingCalculator: com.opengamma.analytics.financial.provider.sensitivity.multicurve.MulticurveSensitivity visitInterestRateFutureTransaction(com.opengamma.analytics.financial.interestrate.future.derivative.InterestRateFutureTransaction,com.opengamma.analytics.financial.provider.description.interestrate.ParameterProviderInterface)>(r1, $r3);

        return $r4;
    }

    public volatile java.lang.Object visitCash(com.opengamma.analytics.financial.interestrate.cash.derivative.Cash, java.lang.Object)
    {
        com.opengamma.analytics.financial.provider.calculator.discounting.ParSpreadMarketQuoteCurveSensitivityDiscountingCalculator r0;
        com.opengamma.analytics.financial.interestrate.cash.derivative.Cash r1;
        java.lang.Object r2;
        com.opengamma.analytics.financial.provider.description.interestrate.ParameterProviderInterface $r3;
        com.opengamma.analytics.financial.provider.sensitivity.multicurve.MulticurveSensitivity $r4;

        r0 := @this: com.opengamma.analytics.financial.provider.calculator.discounting.ParSpreadMarketQuoteCurveSensitivityDiscountingCalculator;

        r1 := @parameter0: com.opengamma.analytics.financial.interestrate.cash.derivative.Cash;

        r2 := @parameter1: java.lang.Object;

        $r3 = (com.opengamma.analytics.financial.provider.description.interestrate.ParameterProviderInterface) r2;

        $r4 = virtualinvoke r0.<com.opengamma.analytics.financial.provider.calculator.discounting.ParSpreadMarketQuoteCurveSensitivityDiscountingCalculator: com.opengamma.analytics.financial.provider.sensitivity.multicurve.MulticurveSensitivity visitCash(com.opengamma.analytics.financial.interestrate.cash.derivative.Cash,com.opengamma.analytics.financial.provider.description.interestrate.ParameterProviderInterface)>(r1, $r3);

        return $r4;
    }

    public volatile java.lang.Object visitFixedCouponSwap(com.opengamma.analytics.financial.interestrate.swap.derivative.SwapFixedCoupon, java.lang.Object)
    {
        com.opengamma.analytics.financial.provider.calculator.discounting.ParSpreadMarketQuoteCurveSensitivityDiscountingCalculator r0;
        com.opengamma.analytics.financial.interestrate.swap.derivative.SwapFixedCoupon r1;
        java.lang.Object r2;
        com.opengamma.analytics.financial.provider.description.interestrate.ParameterProviderInterface $r3;
        com.opengamma.analytics.financial.provider.sensitivity.multicurve.MulticurveSensitivity $r4;

        r0 := @this: com.opengamma.analytics.financial.provider.calculator.discounting.ParSpreadMarketQuoteCurveSensitivityDiscountingCalculator;

        r1 := @parameter0: com.opengamma.analytics.financial.interestrate.swap.derivative.SwapFixedCoupon;

        r2 := @parameter1: java.lang.Object;

        $r3 = (com.opengamma.analytics.financial.provider.description.interestrate.ParameterProviderInterface) r2;

        $r4 = virtualinvoke r0.<com.opengamma.analytics.financial.provider.calculator.discounting.ParSpreadMarketQuoteCurveSensitivityDiscountingCalculator: com.opengamma.analytics.financial.provider.sensitivity.multicurve.MulticurveSensitivity visitFixedCouponSwap(com.opengamma.analytics.financial.interestrate.swap.derivative.SwapFixedCoupon,com.opengamma.analytics.financial.provider.description.interestrate.ParameterProviderInterface)>(r1, $r3);

        return $r4;
    }

    public volatile java.lang.Object visitForwardRateAgreement(com.opengamma.analytics.financial.interestrate.fra.derivative.ForwardRateAgreement, java.lang.Object)
    {
        com.opengamma.analytics.financial.provider.calculator.discounting.ParSpreadMarketQuoteCurveSensitivityDiscountingCalculator r0;
        com.opengamma.analytics.financial.interestrate.fra.derivative.ForwardRateAgreement r1;
        java.lang.Object r2;
        com.opengamma.analytics.financial.provider.description.interestrate.ParameterProviderInterface $r3;
        com.opengamma.analytics.financial.provider.sensitivity.multicurve.MulticurveSensitivity $r4;

        r0 := @this: com.opengamma.analytics.financial.provider.calculator.discounting.ParSpreadMarketQuoteCurveSensitivityDiscountingCalculator;

        r1 := @parameter0: com.opengamma.analytics.financial.interestrate.fra.derivative.ForwardRateAgreement;

        r2 := @parameter1: java.lang.Object;

        $r3 = (com.opengamma.analytics.financial.provider.description.interestrate.ParameterProviderInterface) r2;

        $r4 = virtualinvoke r0.<com.opengamma.analytics.financial.provider.calculator.discounting.ParSpreadMarketQuoteCurveSensitivityDiscountingCalculator: com.opengamma.analytics.financial.provider.sensitivity.multicurve.MulticurveSensitivity visitForwardRateAgreement(com.opengamma.analytics.financial.interestrate.fra.derivative.ForwardRateAgreement,com.opengamma.analytics.financial.provider.description.interestrate.ParameterProviderInterface)>(r1, $r3);

        return $r4;
    }

    static void <clinit>()
    {
        com.opengamma.analytics.financial.provider.calculator.discounting.ParSpreadMarketQuoteCurveSensitivityDiscountingCalculator $r0;
        com.opengamma.analytics.financial.provider.calculator.discounting.PresentValueDiscountingCalculator $r1;
        com.opengamma.analytics.financial.provider.calculator.discounting.PresentValueCurveSensitivityDiscountingCalculator $r2;
        com.opengamma.analytics.financial.provider.calculator.discounting.PresentValueMarketQuoteSensitivityDiscountingCalculator $r3;
        com.opengamma.analytics.financial.provider.calculator.discounting.PresentValueMarketQuoteSensitivityCurveSensitivityDiscountingCalculator $r4;
        com.opengamma.analytics.financial.interestrate.cash.provider.CashDiscountingMethod $r5;
        com.opengamma.analytics.financial.interestrate.cash.provider.DepositIborDiscountingMethod $r6;
        com.opengamma.analytics.financial.interestrate.fra.provider.ForwardRateAgreementDiscountingMethod $r7;
        com.opengamma.analytics.financial.interestrate.future.provider.InterestRateFutureSecurityDiscountingMethod $r8;
        com.opengamma.analytics.financial.interestrate.future.provider.FederalFundsFutureSecurityDiscountingMethod $r9;
        com.opengamma.analytics.financial.interestrate.future.provider.FuturesSecurityMulticurveMethod $r10;
        com.opengamma.analytics.financial.forex.provider.ForexSwapDiscountingMethod $r11;
        com.opengamma.analytics.financial.forex.provider.ForexDiscountingMethod $r12;

        $r0 = new com.opengamma.analytics.financial.provider.calculator.discounting.ParSpreadMarketQuoteCurveSensitivityDiscountingCalculator;

        specialinvoke $r0.<com.opengamma.analytics.financial.provider.calculator.discounting.ParSpreadMarketQuoteCurveSensitivityDiscountingCalculator: void <init>()>();

        <com.opengamma.analytics.financial.provider.calculator.discounting.ParSpreadMarketQuoteCurveSensitivityDiscountingCalculator: com.opengamma.analytics.financial.provider.calculator.discounting.ParSpreadMarketQuoteCurveSensitivityDiscountingCalculator INSTANCE> = $r0;

        $r1 = staticinvoke <com.opengamma.analytics.financial.provider.calculator.discounting.PresentValueDiscountingCalculator: com.opengamma.analytics.financial.provider.calculator.discounting.PresentValueDiscountingCalculator getInstance()>();

        <com.opengamma.analytics.financial.provider.calculator.discounting.ParSpreadMarketQuoteCurveSensitivityDiscountingCalculator: com.opengamma.analytics.financial.provider.calculator.discounting.PresentValueDiscountingCalculator PVDC> = $r1;

        $r2 = staticinvoke <com.opengamma.analytics.financial.provider.calculator.discounting.PresentValueCurveSensitivityDiscountingCalculator: com.opengamma.analytics.financial.provider.calculator.discounting.PresentValueCurveSensitivityDiscountingCalculator getInstance()>();

        <com.opengamma.analytics.financial.provider.calculator.discounting.ParSpreadMarketQuoteCurveSensitivityDiscountingCalculator: com.opengamma.analytics.financial.provider.calculator.discounting.PresentValueCurveSensitivityDiscountingCalculator PVCSDC> = $r2;

        $r3 = staticinvoke <com.opengamma.analytics.financial.provider.calculator.discounting.PresentValueMarketQuoteSensitivityDiscountingCalculator: com.opengamma.analytics.financial.provider.calculator.discounting.PresentValueMarketQuoteSensitivityDiscountingCalculator getInstance()>();

        <com.opengamma.analytics.financial.provider.calculator.discounting.ParSpreadMarketQuoteCurveSensitivityDiscountingCalculator: com.opengamma.analytics.financial.provider.calculator.discounting.PresentValueMarketQuoteSensitivityDiscountingCalculator PVMQSMC> = $r3;

        $r4 = staticinvoke <com.opengamma.analytics.financial.provider.calculator.discounting.PresentValueMarketQuoteSensitivityCurveSensitivityDiscountingCalculator: com.opengamma.analytics.financial.provider.calculator.discounting.PresentValueMarketQuoteSensitivityCurveSensitivityDiscountingCalculator getInstance()>();

        <com.opengamma.analytics.financial.provider.calculator.discounting.ParSpreadMarketQuoteCurveSensitivityDiscountingCalculator: com.opengamma.analytics.financial.provider.calculator.discounting.PresentValueMarketQuoteSensitivityCurveSensitivityDiscountingCalculator PVMQSCSMC> = $r4;

        $r5 = staticinvoke <com.opengamma.analytics.financial.interestrate.cash.provider.CashDiscountingMethod: com.opengamma.analytics.financial.interestrate.cash.provider.CashDiscountingMethod getInstance()>();

        <com.opengamma.analytics.financial.provider.calculator.discounting.ParSpreadMarketQuoteCurveSensitivityDiscountingCalculator: com.opengamma.analytics.financial.interestrate.cash.provider.CashDiscountingMethod METHOD_DEPOSIT> = $r5;

        $r6 = staticinvoke <com.opengamma.analytics.financial.interestrate.cash.provider.DepositIborDiscountingMethod: com.opengamma.analytics.financial.interestrate.cash.provider.DepositIborDiscountingMethod getInstance()>();

        <com.opengamma.analytics.financial.provider.calculator.discounting.ParSpreadMarketQuoteCurveSensitivityDiscountingCalculator: com.opengamma.analytics.financial.interestrate.cash.provider.DepositIborDiscountingMethod METHOD_DEPOSIT_IBOR> = $r6;

        $r7 = staticinvoke <com.opengamma.analytics.financial.interestrate.fra.provider.ForwardRateAgreementDiscountingMethod: com.opengamma.analytics.financial.interestrate.fra.provider.ForwardRateAgreementDiscountingMethod getInstance()>();

        <com.opengamma.analytics.financial.provider.calculator.discounting.ParSpreadMarketQuoteCurveSensitivityDiscountingCalculator: com.opengamma.analytics.financial.interestrate.fra.provider.ForwardRateAgreementDiscountingMethod METHOD_FRA> = $r7;

        $r8 = staticinvoke <com.opengamma.analytics.financial.interestrate.future.provider.InterestRateFutureSecurityDiscountingMethod: com.opengamma.analytics.financial.interestrate.future.provider.InterestRateFutureSecurityDiscountingMethod getInstance()>();

        <com.opengamma.analytics.financial.provider.calculator.discounting.ParSpreadMarketQuoteCurveSensitivityDiscountingCalculator: com.opengamma.analytics.financial.interestrate.future.provider.InterestRateFutureSecurityDiscountingMethod METHOD_STIR_FUT> = $r8;

        $r9 = staticinvoke <com.opengamma.analytics.financial.interestrate.future.provider.FederalFundsFutureSecurityDiscountingMethod: com.opengamma.analytics.financial.interestrate.future.provider.FederalFundsFutureSecurityDiscountingMethod getInstance()>();

        <com.opengamma.analytics.financial.provider.calculator.discounting.ParSpreadMarketQuoteCurveSensitivityDiscountingCalculator: com.opengamma.analytics.financial.interestrate.future.provider.FederalFundsFutureSecurityDiscountingMethod METHOD_FED_FUNDS> = $r9;

        $r10 = new com.opengamma.analytics.financial.interestrate.future.provider.FuturesSecurityMulticurveMethod;

        specialinvoke $r10.<com.opengamma.analytics.financial.interestrate.future.provider.FuturesSecurityMulticurveMethod: void <init>()>();

        <com.opengamma.analytics.financial.provider.calculator.discounting.ParSpreadMarketQuoteCurveSensitivityDiscountingCalculator: com.opengamma.analytics.financial.interestrate.future.provider.FuturesSecurityMulticurveMethod METHOD_FUT> = $r10;

        $r11 = staticinvoke <com.opengamma.analytics.financial.forex.provider.ForexSwapDiscountingMethod: com.opengamma.analytics.financial.forex.provider.ForexSwapDiscountingMethod getInstance()>();

        <com.opengamma.analytics.financial.provider.calculator.discounting.ParSpreadMarketQuoteCurveSensitivityDiscountingCalculator: com.opengamma.analytics.financial.forex.provider.ForexSwapDiscountingMethod METHOD_FOREX_SWAP> = $r11;

        $r12 = staticinvoke <com.opengamma.analytics.financial.forex.provider.ForexDiscountingMethod: com.opengamma.analytics.financial.forex.provider.ForexDiscountingMethod getInstance()>();

        <com.opengamma.analytics.financial.provider.calculator.discounting.ParSpreadMarketQuoteCurveSensitivityDiscountingCalculator: com.opengamma.analytics.financial.forex.provider.ForexDiscountingMethod METHOD_FOREX> = $r12;

        return;
    }
}
