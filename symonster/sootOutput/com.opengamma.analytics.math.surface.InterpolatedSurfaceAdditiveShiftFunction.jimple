public class com.opengamma.analytics.math.surface.InterpolatedSurfaceAdditiveShiftFunction extends java.lang.Object implements com.opengamma.analytics.math.surface.SurfaceShiftFunction
{

    public void <init>()
    {
        com.opengamma.analytics.math.surface.InterpolatedSurfaceAdditiveShiftFunction r0;

        r0 := @this: com.opengamma.analytics.math.surface.InterpolatedSurfaceAdditiveShiftFunction;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public com.opengamma.analytics.math.surface.InterpolatedDoublesSurface evaluate(com.opengamma.analytics.math.surface.InterpolatedDoublesSurface, double)
    {
        com.opengamma.analytics.math.surface.InterpolatedSurfaceAdditiveShiftFunction r0;
        com.opengamma.analytics.math.surface.InterpolatedDoublesSurface r1, $r8;
        double d0;
        java.lang.StringBuilder $r3, $r4, $r6;
        java.lang.String $r5, $r7;

        r0 := @this: com.opengamma.analytics.math.surface.InterpolatedSurfaceAdditiveShiftFunction;

        r1 := @parameter0: com.opengamma.analytics.math.surface.InterpolatedDoublesSurface;

        d0 := @parameter1: double;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "surface");

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("PARALLEL_SHIFT_");

        $r5 = virtualinvoke r1.<com.opengamma.analytics.math.surface.InterpolatedDoublesSurface: java.lang.String getName()>();

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        $r8 = virtualinvoke r0.<com.opengamma.analytics.math.surface.InterpolatedSurfaceAdditiveShiftFunction: com.opengamma.analytics.math.surface.InterpolatedDoublesSurface evaluate(com.opengamma.analytics.math.surface.InterpolatedDoublesSurface,double,java.lang.String)>(r1, d0, $r7);

        return $r8;
    }

    public com.opengamma.analytics.math.surface.InterpolatedDoublesSurface evaluate(com.opengamma.analytics.math.surface.InterpolatedDoublesSurface, double, java.lang.String)
    {
        com.opengamma.analytics.math.surface.InterpolatedSurfaceAdditiveShiftFunction r0;
        com.opengamma.analytics.math.surface.InterpolatedDoublesSurface r1, $r9;
        double d0, $d1, $d2;
        java.lang.String r2;
        double[] r3, r4, r5, $r7;
        int i0, i1;
        com.opengamma.analytics.math.interpolation.Interpolator2D $r8;

        r0 := @this: com.opengamma.analytics.math.surface.InterpolatedSurfaceAdditiveShiftFunction;

        r1 := @parameter0: com.opengamma.analytics.math.surface.InterpolatedDoublesSurface;

        d0 := @parameter1: double;

        r2 := @parameter2: java.lang.String;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "surface");

        r3 = virtualinvoke r1.<com.opengamma.analytics.math.surface.InterpolatedDoublesSurface: double[] getXDataAsPrimitive()>();

        r4 = virtualinvoke r1.<com.opengamma.analytics.math.surface.InterpolatedDoublesSurface: double[] getYDataAsPrimitive()>();

        i0 = lengthof r3;

        $r7 = virtualinvoke r1.<com.opengamma.analytics.math.surface.InterpolatedDoublesSurface: double[] getZDataAsPrimitive()>();

        r5 = staticinvoke <java.util.Arrays: double[] copyOf(double[],int)>($r7, i0);

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        $d1 = r5[i1];

        $d2 = $d1 + d0;

        r5[i1] = $d2;

        i1 = i1 + 1;

        goto label1;

     label2:
        $r8 = virtualinvoke r1.<com.opengamma.analytics.math.surface.InterpolatedDoublesSurface: com.opengamma.analytics.math.interpolation.Interpolator2D getInterpolator()>();

        $r9 = staticinvoke <com.opengamma.analytics.math.surface.InterpolatedDoublesSurface: com.opengamma.analytics.math.surface.InterpolatedDoublesSurface 'from'(double[],double[],double[],com.opengamma.analytics.math.interpolation.Interpolator2D,java.lang.String)>(r3, r4, r5, $r8, r2);

        return $r9;
    }

    public com.opengamma.analytics.math.surface.InterpolatedDoublesSurface evaluate(com.opengamma.analytics.math.surface.InterpolatedDoublesSurface, double, double, double)
    {
        com.opengamma.analytics.math.surface.InterpolatedSurfaceAdditiveShiftFunction r0;
        com.opengamma.analytics.math.surface.InterpolatedDoublesSurface r1, $r8;
        double d0, d1, d2;
        java.lang.StringBuilder $r3, $r4, $r6;
        java.lang.String $r5, $r7;

        r0 := @this: com.opengamma.analytics.math.surface.InterpolatedSurfaceAdditiveShiftFunction;

        r1 := @parameter0: com.opengamma.analytics.math.surface.InterpolatedDoublesSurface;

        d0 := @parameter1: double;

        d1 := @parameter2: double;

        d2 := @parameter3: double;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "surface");

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("SINGLE_SHIFT_");

        $r5 = virtualinvoke r1.<com.opengamma.analytics.math.surface.InterpolatedDoublesSurface: java.lang.String getName()>();

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        $r8 = virtualinvoke r0.<com.opengamma.analytics.math.surface.InterpolatedSurfaceAdditiveShiftFunction: com.opengamma.analytics.math.surface.InterpolatedDoublesSurface evaluate(com.opengamma.analytics.math.surface.InterpolatedDoublesSurface,double,double,double,java.lang.String)>(r1, d0, d1, d2, $r7);

        return $r8;
    }

    public com.opengamma.analytics.math.surface.InterpolatedDoublesSurface evaluate(com.opengamma.analytics.math.surface.InterpolatedDoublesSurface, double, double, double, java.lang.String)
    {
        com.opengamma.analytics.math.surface.InterpolatedSurfaceAdditiveShiftFunction r0;
        com.opengamma.analytics.math.surface.InterpolatedDoublesSurface r1, $r12, $r14;
        double d0, d1, d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11;
        java.lang.String r2;
        double[] r3, r4, r5, r6, r15, r16, r17;
        int i0, $i1, $i2, $i3, i10, i11;
        java.lang.Double $r8, $r9, $r10;
        com.opengamma.analytics.math.interpolation.Interpolator2D $r11, $r13;
        long $l4, $l5, $l7, $l8;
        byte $b6, $b9;

        r0 := @this: com.opengamma.analytics.math.surface.InterpolatedSurfaceAdditiveShiftFunction;

        r1 := @parameter0: com.opengamma.analytics.math.surface.InterpolatedDoublesSurface;

        d0 := @parameter1: double;

        d1 := @parameter2: double;

        d2 := @parameter3: double;

        r2 := @parameter4: java.lang.String;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "surface");

        r3 = virtualinvoke r1.<com.opengamma.analytics.math.surface.InterpolatedDoublesSurface: double[] getXDataAsPrimitive()>();

        r4 = virtualinvoke r1.<com.opengamma.analytics.math.surface.InterpolatedDoublesSurface: double[] getYDataAsPrimitive()>();

        r5 = virtualinvoke r1.<com.opengamma.analytics.math.surface.InterpolatedDoublesSurface: double[] getZDataAsPrimitive()>();

        i0 = lengthof r3;

        i10 = 0;

     label1:
        if i10 >= i0 goto label3;

        $d8 = r3[i10];

        $l4 = staticinvoke <java.lang.Double: long doubleToLongBits(double)>($d8);

        $l5 = staticinvoke <java.lang.Double: long doubleToLongBits(double)>(d0);

        $b6 = $l4 cmp $l5;

        if $b6 != 0 goto label2;

        $d9 = r4[i10];

        $l7 = staticinvoke <java.lang.Double: long doubleToLongBits(double)>($d9);

        $l8 = staticinvoke <java.lang.Double: long doubleToLongBits(double)>(d1);

        $b9 = $l7 cmp $l8;

        if $b9 != 0 goto label2;

        r15 = staticinvoke <java.util.Arrays: double[] copyOf(double[],int)>(r5, i0);

        $d10 = r15[i10];

        $d11 = $d10 + d2;

        r15[i10] = $d11;

        $r13 = virtualinvoke r1.<com.opengamma.analytics.math.surface.InterpolatedDoublesSurface: com.opengamma.analytics.math.interpolation.Interpolator2D getInterpolator()>();

        $r14 = staticinvoke <com.opengamma.analytics.math.surface.InterpolatedDoublesSurface: com.opengamma.analytics.math.surface.InterpolatedDoublesSurface 'from'(double[],double[],double[],com.opengamma.analytics.math.interpolation.Interpolator2D,java.lang.String)>(r3, r4, r15, $r13, r2);

        return $r14;

     label2:
        i10 = i10 + 1;

        goto label1;

     label3:
        $i1 = i0 + 1;

        r16 = newarray (double)[$i1];

        $i2 = i0 + 1;

        r17 = newarray (double)[$i2];

        $i3 = i0 + 1;

        r6 = newarray (double)[$i3];

        i11 = 0;

     label4:
        if i11 >= i0 goto label5;

        $d5 = r3[i11];

        r16[i11] = $d5;

        $d6 = r4[i11];

        r17[i11] = $d6;

        $d7 = r5[i11];

        r6[i11] = $d7;

        i11 = i11 + 1;

        goto label4;

     label5:
        r16[i0] = d0;

        r17[i0] = d1;

        $r8 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d0);

        $r9 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d1);

        $r10 = virtualinvoke r1.<com.opengamma.analytics.math.surface.InterpolatedDoublesSurface: java.lang.Double getZValue(java.lang.Double,java.lang.Double)>($r8, $r9);

        $d3 = virtualinvoke $r10.<java.lang.Double: double doubleValue()>();

        $d4 = $d3 + d2;

        r6[i0] = $d4;

        $r11 = virtualinvoke r1.<com.opengamma.analytics.math.surface.InterpolatedDoublesSurface: com.opengamma.analytics.math.interpolation.Interpolator2D getInterpolator()>();

        $r12 = staticinvoke <com.opengamma.analytics.math.surface.InterpolatedDoublesSurface: com.opengamma.analytics.math.surface.InterpolatedDoublesSurface 'from'(double[],double[],double[],com.opengamma.analytics.math.interpolation.Interpolator2D,java.lang.String)>(r16, r17, r6, $r11, r2);

        return $r12;
    }

    public com.opengamma.analytics.math.surface.InterpolatedDoublesSurface evaluate(com.opengamma.analytics.math.surface.InterpolatedDoublesSurface, double[], double[], double[])
    {
        com.opengamma.analytics.math.surface.InterpolatedSurfaceAdditiveShiftFunction r0;
        com.opengamma.analytics.math.surface.InterpolatedDoublesSurface r1, $r11;
        double[] r2, r3, r4;
        java.lang.StringBuilder $r6, $r7, $r9;
        java.lang.String $r8, $r10;

        r0 := @this: com.opengamma.analytics.math.surface.InterpolatedSurfaceAdditiveShiftFunction;

        r1 := @parameter0: com.opengamma.analytics.math.surface.InterpolatedDoublesSurface;

        r2 := @parameter1: double[];

        r3 := @parameter2: double[];

        r4 := @parameter3: double[];

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "surface");

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("MULTIPLE_SHIFT_");

        $r8 = virtualinvoke r1.<com.opengamma.analytics.math.surface.InterpolatedDoublesSurface: java.lang.String getName()>();

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        $r11 = virtualinvoke r0.<com.opengamma.analytics.math.surface.InterpolatedSurfaceAdditiveShiftFunction: com.opengamma.analytics.math.surface.InterpolatedDoublesSurface evaluate(com.opengamma.analytics.math.surface.InterpolatedDoublesSurface,double[],double[],double[],java.lang.String)>(r1, r2, r3, r4, $r10);

        return $r11;
    }

    public com.opengamma.analytics.math.surface.InterpolatedDoublesSurface evaluate(com.opengamma.analytics.math.surface.InterpolatedDoublesSurface, double[], double[], double[], java.lang.String)
    {
        com.opengamma.analytics.math.surface.InterpolatedSurfaceAdditiveShiftFunction r0;
        com.opengamma.analytics.math.surface.InterpolatedDoublesSurface r1, $r17, $r33;
        double[] r2, r3, r4, $r29, $r30, $r31;
        java.lang.String r5;
        int i0, i1, $i2, $i9, $i10, $i11, i12, i13;
        java.lang.Double[] r6, r7, r8;
        com.opengamma.analytics.math.interpolation.Interpolator2D $r16, $r32;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13;
        java.lang.Double $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r25, $r26, $r27;
        long $l3, $l4, $l6, $l7;
        byte $b5, $b8;
        boolean $z3, z4;
        java.lang.Object[] $r34;
        java.lang.Integer $r35, $r36, $r37;
        java.util.ArrayList $r38, $r40, $r42;
        java.util.List $r39, $r41, $r43;

        r0 := @this: com.opengamma.analytics.math.surface.InterpolatedSurfaceAdditiveShiftFunction;

        r1 := @parameter0: com.opengamma.analytics.math.surface.InterpolatedDoublesSurface;

        r2 := @parameter1: double[];

        r3 := @parameter2: double[];

        r4 := @parameter3: double[];

        r5 := @parameter4: java.lang.String;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "surface");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, "x shift");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r3, "y shift");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r4, "shifts");

        i0 = lengthof r2;

        if i0 != 0 goto label1;

        $r29 = virtualinvoke r1.<com.opengamma.analytics.math.surface.InterpolatedDoublesSurface: double[] getXDataAsPrimitive()>();

        $r30 = virtualinvoke r1.<com.opengamma.analytics.math.surface.InterpolatedDoublesSurface: double[] getYDataAsPrimitive()>();

        $r31 = virtualinvoke r1.<com.opengamma.analytics.math.surface.InterpolatedDoublesSurface: double[] getZDataAsPrimitive()>();

        $r32 = virtualinvoke r1.<com.opengamma.analytics.math.surface.InterpolatedDoublesSurface: com.opengamma.analytics.math.interpolation.Interpolator2D getInterpolator()>();

        $r33 = staticinvoke <com.opengamma.analytics.math.surface.InterpolatedDoublesSurface: com.opengamma.analytics.math.surface.InterpolatedDoublesSurface 'from'(double[],double[],double[],com.opengamma.analytics.math.interpolation.Interpolator2D,java.lang.String)>($r29, $r30, $r31, $r32, r5);

        return $r33;

     label1:
        $i2 = lengthof r3;

        if i0 != $i2 goto label2;

        $i9 = lengthof r4;

        if i0 != $i9 goto label2;

        $z3 = 1;

        goto label3;

     label2:
        $z3 = 0;

     label3:
        $r34 = newarray (java.lang.Object)[3];

        $i10 = lengthof r4;

        $r35 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i10);

        $r34[0] = $r35;

        $r36 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r34[1] = $r36;

        $i11 = lengthof r3;

        $r37 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i11);

        $r34[2] = $r37;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String,java.lang.Object[])>($z3, "number of shifts {} must be equal to number of x shift positions {} and y shift positions {}", $r34);

        r6 = virtualinvoke r1.<com.opengamma.analytics.math.surface.InterpolatedDoublesSurface: java.lang.Double[] getXData()>();

        r7 = virtualinvoke r1.<com.opengamma.analytics.math.surface.InterpolatedDoublesSurface: java.lang.Double[] getYData()>();

        r8 = virtualinvoke r1.<com.opengamma.analytics.math.surface.InterpolatedDoublesSurface: java.lang.Double[] getZData()>();

        $r38 = new java.util.ArrayList;

        $r39 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(r6);

        specialinvoke $r38.<java.util.ArrayList: void <init>(java.util.Collection)>($r39);

        $r40 = new java.util.ArrayList;

        $r41 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(r7);

        specialinvoke $r40.<java.util.ArrayList: void <init>(java.util.Collection)>($r41);

        $r42 = new java.util.ArrayList;

        $r43 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(r8);

        specialinvoke $r42.<java.util.ArrayList: void <init>(java.util.Collection)>($r43);

        i1 = virtualinvoke r1.<com.opengamma.analytics.math.surface.InterpolatedDoublesSurface: int size()>();

        i12 = 0;

     label4:
        if i12 >= i0 goto label9;

        z4 = 0;

        i13 = 0;

     label5:
        if i13 >= i1 goto label7;

        $r24 = r6[i13];

        $d7 = virtualinvoke $r24.<java.lang.Double: double doubleValue()>();

        $l3 = staticinvoke <java.lang.Double: long doubleToLongBits(double)>($d7);

        $d8 = r2[i12];

        $l4 = staticinvoke <java.lang.Double: long doubleToLongBits(double)>($d8);

        $b5 = $l3 cmp $l4;

        if $b5 != 0 goto label6;

        $r25 = r7[i13];

        $d9 = virtualinvoke $r25.<java.lang.Double: double doubleValue()>();

        $l6 = staticinvoke <java.lang.Double: long doubleToLongBits(double)>($d9);

        $d10 = r3[i12];

        $l7 = staticinvoke <java.lang.Double: long doubleToLongBits(double)>($d10);

        $b8 = $l6 cmp $l7;

        if $b8 != 0 goto label6;

        $r26 = r8[i13];

        $d11 = virtualinvoke $r26.<java.lang.Double: double doubleValue()>();

        $d12 = r4[i12];

        $d13 = $d11 + $d12;

        $r27 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d13);

        interfaceinvoke $r42.<java.util.List: java.lang.Object set(int,java.lang.Object)>(i13, $r27);

        z4 = 1;

     label6:
        i13 = i13 + 1;

        goto label5;

     label7:
        if z4 != 0 goto label8;

        $d0 = r2[i12];

        $r18 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        interfaceinvoke $r38.<java.util.List: boolean add(java.lang.Object)>($r18);

        $d1 = r3[i12];

        $r19 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d1);

        interfaceinvoke $r40.<java.util.List: boolean add(java.lang.Object)>($r19);

        $d2 = r2[i12];

        $r20 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d2);

        $d3 = r3[i12];

        $r21 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d3);

        $r22 = virtualinvoke r1.<com.opengamma.analytics.math.surface.InterpolatedDoublesSurface: java.lang.Double getZValue(java.lang.Double,java.lang.Double)>($r20, $r21);

        $d4 = virtualinvoke $r22.<java.lang.Double: double doubleValue()>();

        $d5 = r4[i12];

        $d6 = $d4 + $d5;

        $r23 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d6);

        interfaceinvoke $r42.<java.util.List: boolean add(java.lang.Object)>($r23);

     label8:
        i12 = i12 + 1;

        goto label4;

     label9:
        $r16 = virtualinvoke r1.<com.opengamma.analytics.math.surface.InterpolatedDoublesSurface: com.opengamma.analytics.math.interpolation.Interpolator2D getInterpolator()>();

        $r17 = staticinvoke <com.opengamma.analytics.math.surface.InterpolatedDoublesSurface: com.opengamma.analytics.math.surface.InterpolatedDoublesSurface 'from'(java.util.List,java.util.List,java.util.List,com.opengamma.analytics.math.interpolation.Interpolator2D,java.lang.String)>($r38, $r40, $r42, $r16, r5);

        return $r17;
    }

    public volatile com.opengamma.analytics.math.surface.Surface evaluate(com.opengamma.analytics.math.surface.Surface, double[], double[], double[], java.lang.String)
    {
        com.opengamma.analytics.math.surface.InterpolatedSurfaceAdditiveShiftFunction r0;
        com.opengamma.analytics.math.surface.Surface r1;
        double[] r2, r3, r4;
        java.lang.String r5;
        com.opengamma.analytics.math.surface.InterpolatedDoublesSurface $r6, $r7;

        r0 := @this: com.opengamma.analytics.math.surface.InterpolatedSurfaceAdditiveShiftFunction;

        r1 := @parameter0: com.opengamma.analytics.math.surface.Surface;

        r2 := @parameter1: double[];

        r3 := @parameter2: double[];

        r4 := @parameter3: double[];

        r5 := @parameter4: java.lang.String;

        $r6 = (com.opengamma.analytics.math.surface.InterpolatedDoublesSurface) r1;

        $r7 = virtualinvoke r0.<com.opengamma.analytics.math.surface.InterpolatedSurfaceAdditiveShiftFunction: com.opengamma.analytics.math.surface.InterpolatedDoublesSurface evaluate(com.opengamma.analytics.math.surface.InterpolatedDoublesSurface,double[],double[],double[],java.lang.String)>($r6, r2, r3, r4, r5);

        return $r7;
    }

    public volatile com.opengamma.analytics.math.surface.Surface evaluate(com.opengamma.analytics.math.surface.Surface, double[], double[], double[])
    {
        com.opengamma.analytics.math.surface.InterpolatedSurfaceAdditiveShiftFunction r0;
        com.opengamma.analytics.math.surface.Surface r1;
        double[] r2, r3, r4;
        com.opengamma.analytics.math.surface.InterpolatedDoublesSurface $r5, $r6;

        r0 := @this: com.opengamma.analytics.math.surface.InterpolatedSurfaceAdditiveShiftFunction;

        r1 := @parameter0: com.opengamma.analytics.math.surface.Surface;

        r2 := @parameter1: double[];

        r3 := @parameter2: double[];

        r4 := @parameter3: double[];

        $r5 = (com.opengamma.analytics.math.surface.InterpolatedDoublesSurface) r1;

        $r6 = virtualinvoke r0.<com.opengamma.analytics.math.surface.InterpolatedSurfaceAdditiveShiftFunction: com.opengamma.analytics.math.surface.InterpolatedDoublesSurface evaluate(com.opengamma.analytics.math.surface.InterpolatedDoublesSurface,double[],double[],double[])>($r5, r2, r3, r4);

        return $r6;
    }

    public volatile com.opengamma.analytics.math.surface.Surface evaluate(com.opengamma.analytics.math.surface.Surface, double, double, double, java.lang.String)
    {
        com.opengamma.analytics.math.surface.InterpolatedSurfaceAdditiveShiftFunction r0;
        com.opengamma.analytics.math.surface.Surface r1;
        double d0, d1, d2;
        java.lang.String r2;
        com.opengamma.analytics.math.surface.InterpolatedDoublesSurface $r3, $r4;

        r0 := @this: com.opengamma.analytics.math.surface.InterpolatedSurfaceAdditiveShiftFunction;

        r1 := @parameter0: com.opengamma.analytics.math.surface.Surface;

        d0 := @parameter1: double;

        d1 := @parameter2: double;

        d2 := @parameter3: double;

        r2 := @parameter4: java.lang.String;

        $r3 = (com.opengamma.analytics.math.surface.InterpolatedDoublesSurface) r1;

        $r4 = virtualinvoke r0.<com.opengamma.analytics.math.surface.InterpolatedSurfaceAdditiveShiftFunction: com.opengamma.analytics.math.surface.InterpolatedDoublesSurface evaluate(com.opengamma.analytics.math.surface.InterpolatedDoublesSurface,double,double,double,java.lang.String)>($r3, d0, d1, d2, r2);

        return $r4;
    }

    public volatile com.opengamma.analytics.math.surface.Surface evaluate(com.opengamma.analytics.math.surface.Surface, double, double, double)
    {
        com.opengamma.analytics.math.surface.InterpolatedSurfaceAdditiveShiftFunction r0;
        com.opengamma.analytics.math.surface.Surface r1;
        double d0, d1, d2;
        com.opengamma.analytics.math.surface.InterpolatedDoublesSurface $r2, $r3;

        r0 := @this: com.opengamma.analytics.math.surface.InterpolatedSurfaceAdditiveShiftFunction;

        r1 := @parameter0: com.opengamma.analytics.math.surface.Surface;

        d0 := @parameter1: double;

        d1 := @parameter2: double;

        d2 := @parameter3: double;

        $r2 = (com.opengamma.analytics.math.surface.InterpolatedDoublesSurface) r1;

        $r3 = virtualinvoke r0.<com.opengamma.analytics.math.surface.InterpolatedSurfaceAdditiveShiftFunction: com.opengamma.analytics.math.surface.InterpolatedDoublesSurface evaluate(com.opengamma.analytics.math.surface.InterpolatedDoublesSurface,double,double,double)>($r2, d0, d1, d2);

        return $r3;
    }

    public volatile com.opengamma.analytics.math.surface.Surface evaluate(com.opengamma.analytics.math.surface.Surface, double, java.lang.String)
    {
        com.opengamma.analytics.math.surface.InterpolatedSurfaceAdditiveShiftFunction r0;
        com.opengamma.analytics.math.surface.Surface r1;
        double d0;
        java.lang.String r2;
        com.opengamma.analytics.math.surface.InterpolatedDoublesSurface $r3, $r4;

        r0 := @this: com.opengamma.analytics.math.surface.InterpolatedSurfaceAdditiveShiftFunction;

        r1 := @parameter0: com.opengamma.analytics.math.surface.Surface;

        d0 := @parameter1: double;

        r2 := @parameter2: java.lang.String;

        $r3 = (com.opengamma.analytics.math.surface.InterpolatedDoublesSurface) r1;

        $r4 = virtualinvoke r0.<com.opengamma.analytics.math.surface.InterpolatedSurfaceAdditiveShiftFunction: com.opengamma.analytics.math.surface.InterpolatedDoublesSurface evaluate(com.opengamma.analytics.math.surface.InterpolatedDoublesSurface,double,java.lang.String)>($r3, d0, r2);

        return $r4;
    }

    public volatile com.opengamma.analytics.math.surface.Surface evaluate(com.opengamma.analytics.math.surface.Surface, double)
    {
        com.opengamma.analytics.math.surface.InterpolatedSurfaceAdditiveShiftFunction r0;
        com.opengamma.analytics.math.surface.Surface r1;
        double d0;
        com.opengamma.analytics.math.surface.InterpolatedDoublesSurface $r2, $r3;

        r0 := @this: com.opengamma.analytics.math.surface.InterpolatedSurfaceAdditiveShiftFunction;

        r1 := @parameter0: com.opengamma.analytics.math.surface.Surface;

        d0 := @parameter1: double;

        $r2 = (com.opengamma.analytics.math.surface.InterpolatedDoublesSurface) r1;

        $r3 = virtualinvoke r0.<com.opengamma.analytics.math.surface.InterpolatedSurfaceAdditiveShiftFunction: com.opengamma.analytics.math.surface.InterpolatedDoublesSurface evaluate(com.opengamma.analytics.math.surface.InterpolatedDoublesSurface,double)>($r2, d0);

        return $r3;
    }
}
