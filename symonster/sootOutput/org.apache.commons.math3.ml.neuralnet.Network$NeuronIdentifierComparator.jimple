public class org.apache.commons.math3.ml.neuralnet.Network$NeuronIdentifierComparator extends java.lang.Object implements java.util.Comparator, java.io.Serializable
{
    private static final long serialVersionUID;

    public void <init>()
    {
        org.apache.commons.math3.ml.neuralnet.Network$NeuronIdentifierComparator r0;

        r0 := @this: org.apache.commons.math3.ml.neuralnet.Network$NeuronIdentifierComparator;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public int compare(org.apache.commons.math3.ml.neuralnet.Neuron, org.apache.commons.math3.ml.neuralnet.Neuron)
    {
        org.apache.commons.math3.ml.neuralnet.Network$NeuronIdentifierComparator r0;
        org.apache.commons.math3.ml.neuralnet.Neuron r1, r2;
        long l0, l1;
        byte $b2, $b3, $b4;

        r0 := @this: org.apache.commons.math3.ml.neuralnet.Network$NeuronIdentifierComparator;

        r1 := @parameter0: org.apache.commons.math3.ml.neuralnet.Neuron;

        r2 := @parameter1: org.apache.commons.math3.ml.neuralnet.Neuron;

        l0 = virtualinvoke r1.<org.apache.commons.math3.ml.neuralnet.Neuron: long getIdentifier()>();

        l1 = virtualinvoke r2.<org.apache.commons.math3.ml.neuralnet.Neuron: long getIdentifier()>();

        $b2 = l0 cmp l1;

        if $b2 >= 0 goto label1;

        $b4 = -1;

        goto label3;

     label1:
        $b3 = l0 cmp l1;

        if $b3 <= 0 goto label2;

        $b4 = 1;

        goto label3;

     label2:
        $b4 = 0;

     label3:
        return $b4;
    }

    public volatile int compare(java.lang.Object, java.lang.Object)
    {
        org.apache.commons.math3.ml.neuralnet.Network$NeuronIdentifierComparator r0;
        java.lang.Object r1, r2;
        org.apache.commons.math3.ml.neuralnet.Neuron $r3, $r4;
        int $i0;

        r0 := @this: org.apache.commons.math3.ml.neuralnet.Network$NeuronIdentifierComparator;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r4 = (org.apache.commons.math3.ml.neuralnet.Neuron) r1;

        $r3 = (org.apache.commons.math3.ml.neuralnet.Neuron) r2;

        $i0 = virtualinvoke r0.<org.apache.commons.math3.ml.neuralnet.Network$NeuronIdentifierComparator: int compare(org.apache.commons.math3.ml.neuralnet.Neuron,org.apache.commons.math3.ml.neuralnet.Neuron)>($r4, $r3);

        return $i0;
    }

    public static void <clinit>()
    {
        <org.apache.commons.math3.ml.neuralnet.Network$NeuronIdentifierComparator: long serialVersionUID> = 20130207L;

        return;
    }
}
