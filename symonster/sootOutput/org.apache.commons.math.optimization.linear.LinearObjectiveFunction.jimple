public class org.apache.commons.math.optimization.linear.LinearObjectiveFunction extends java.lang.Object implements java.io.Serializable
{
    private static final long serialVersionUID;
    private final transient org.apache.commons.math.linear.RealVector coefficients;
    private final double constantTerm;

    public void <init>(double[], double)
    {
        org.apache.commons.math.optimization.linear.LinearObjectiveFunction r0;
        double[] r1;
        double d0;
        org.apache.commons.math.linear.ArrayRealVector $r2;

        r0 := @this: org.apache.commons.math.optimization.linear.LinearObjectiveFunction;

        r1 := @parameter0: double[];

        d0 := @parameter1: double;

        $r2 = new org.apache.commons.math.linear.ArrayRealVector;

        specialinvoke $r2.<org.apache.commons.math.linear.ArrayRealVector: void <init>(double[])>(r1);

        specialinvoke r0.<org.apache.commons.math.optimization.linear.LinearObjectiveFunction: void <init>(org.apache.commons.math.linear.RealVector,double)>($r2, d0);

        return;
    }

    public void <init>(org.apache.commons.math.linear.RealVector, double)
    {
        org.apache.commons.math.optimization.linear.LinearObjectiveFunction r0;
        org.apache.commons.math.linear.RealVector r1;
        double d0;

        r0 := @this: org.apache.commons.math.optimization.linear.LinearObjectiveFunction;

        r1 := @parameter0: org.apache.commons.math.linear.RealVector;

        d0 := @parameter1: double;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.commons.math.optimization.linear.LinearObjectiveFunction: org.apache.commons.math.linear.RealVector coefficients> = r1;

        r0.<org.apache.commons.math.optimization.linear.LinearObjectiveFunction: double constantTerm> = d0;

        return;
    }

    public org.apache.commons.math.linear.RealVector getCoefficients()
    {
        org.apache.commons.math.optimization.linear.LinearObjectiveFunction r0;
        org.apache.commons.math.linear.RealVector $r1;

        r0 := @this: org.apache.commons.math.optimization.linear.LinearObjectiveFunction;

        $r1 = r0.<org.apache.commons.math.optimization.linear.LinearObjectiveFunction: org.apache.commons.math.linear.RealVector coefficients>;

        return $r1;
    }

    public double getConstantTerm()
    {
        org.apache.commons.math.optimization.linear.LinearObjectiveFunction r0;
        double $d0;

        r0 := @this: org.apache.commons.math.optimization.linear.LinearObjectiveFunction;

        $d0 = r0.<org.apache.commons.math.optimization.linear.LinearObjectiveFunction: double constantTerm>;

        return $d0;
    }

    public double getValue(double[])
    {
        org.apache.commons.math.optimization.linear.LinearObjectiveFunction r0;
        double[] r1;
        org.apache.commons.math.linear.RealVector $r2;
        double $d0, $d1, $d2;

        r0 := @this: org.apache.commons.math.optimization.linear.LinearObjectiveFunction;

        r1 := @parameter0: double[];

        $r2 = r0.<org.apache.commons.math.optimization.linear.LinearObjectiveFunction: org.apache.commons.math.linear.RealVector coefficients>;

        $d0 = interfaceinvoke $r2.<org.apache.commons.math.linear.RealVector: double dotProduct(double[])>(r1);

        $d1 = r0.<org.apache.commons.math.optimization.linear.LinearObjectiveFunction: double constantTerm>;

        $d2 = $d0 + $d1;

        return $d2;
    }

    public double getValue(org.apache.commons.math.linear.RealVector)
    {
        org.apache.commons.math.optimization.linear.LinearObjectiveFunction r0;
        org.apache.commons.math.linear.RealVector r1, $r2;
        double $d0, $d1, $d2;

        r0 := @this: org.apache.commons.math.optimization.linear.LinearObjectiveFunction;

        r1 := @parameter0: org.apache.commons.math.linear.RealVector;

        $r2 = r0.<org.apache.commons.math.optimization.linear.LinearObjectiveFunction: org.apache.commons.math.linear.RealVector coefficients>;

        $d0 = interfaceinvoke $r2.<org.apache.commons.math.linear.RealVector: double dotProduct(org.apache.commons.math.linear.RealVector)>(r1);

        $d1 = r0.<org.apache.commons.math.optimization.linear.LinearObjectiveFunction: double constantTerm>;

        $d2 = $d0 + $d1;

        return $d2;
    }

    public boolean equals(java.lang.Object)
    {
        org.apache.commons.math.optimization.linear.LinearObjectiveFunction r0, r2;
        java.lang.Object r1;
        boolean $z0, $z1, $z2;
        double $d0, $d1;
        byte $b0;
        org.apache.commons.math.linear.RealVector $r3, $r4;

        r0 := @this: org.apache.commons.math.optimization.linear.LinearObjectiveFunction;

        r1 := @parameter0: java.lang.Object;

        if r0 != r1 goto label1;

        return 1;

     label1:
        $z0 = r1 instanceof org.apache.commons.math.optimization.linear.LinearObjectiveFunction;

        if $z0 == 0 goto label4;

        r2 = (org.apache.commons.math.optimization.linear.LinearObjectiveFunction) r1;

        $d1 = r0.<org.apache.commons.math.optimization.linear.LinearObjectiveFunction: double constantTerm>;

        $d0 = r2.<org.apache.commons.math.optimization.linear.LinearObjectiveFunction: double constantTerm>;

        $b0 = $d1 cmpl $d0;

        if $b0 != 0 goto label2;

        $r4 = r0.<org.apache.commons.math.optimization.linear.LinearObjectiveFunction: org.apache.commons.math.linear.RealVector coefficients>;

        $r3 = r2.<org.apache.commons.math.optimization.linear.LinearObjectiveFunction: org.apache.commons.math.linear.RealVector coefficients>;

        $z1 = virtualinvoke $r4.<java.lang.Object: boolean equals(java.lang.Object)>($r3);

        if $z1 == 0 goto label2;

        $z2 = 1;

        goto label3;

     label2:
        $z2 = 0;

     label3:
        return $z2;

     label4:
        return 0;
    }

    public int hashCode()
    {
        org.apache.commons.math.optimization.linear.LinearObjectiveFunction r0;
        double $d0;
        java.lang.Double $r1;
        int $i0, $i1, $i2;
        org.apache.commons.math.linear.RealVector $r2;

        r0 := @this: org.apache.commons.math.optimization.linear.LinearObjectiveFunction;

        $d0 = r0.<org.apache.commons.math.optimization.linear.LinearObjectiveFunction: double constantTerm>;

        $r1 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        $i0 = virtualinvoke $r1.<java.lang.Double: int hashCode()>();

        $r2 = r0.<org.apache.commons.math.optimization.linear.LinearObjectiveFunction: org.apache.commons.math.linear.RealVector coefficients>;

        $i1 = virtualinvoke $r2.<java.lang.Object: int hashCode()>();

        $i2 = $i0 ^ $i1;

        return $i2;
    }

    private void writeObject(java.io.ObjectOutputStream) throws java.io.IOException
    {
        org.apache.commons.math.optimization.linear.LinearObjectiveFunction r0;
        java.io.ObjectOutputStream r1;
        org.apache.commons.math.linear.RealVector $r2;

        r0 := @this: org.apache.commons.math.optimization.linear.LinearObjectiveFunction;

        r1 := @parameter0: java.io.ObjectOutputStream;

        virtualinvoke r1.<java.io.ObjectOutputStream: void defaultWriteObject()>();

        $r2 = r0.<org.apache.commons.math.optimization.linear.LinearObjectiveFunction: org.apache.commons.math.linear.RealVector coefficients>;

        staticinvoke <org.apache.commons.math.linear.MatrixUtils: void serializeRealVector(org.apache.commons.math.linear.RealVector,java.io.ObjectOutputStream)>($r2, r1);

        return;
    }

    private void readObject(java.io.ObjectInputStream) throws java.lang.ClassNotFoundException, java.io.IOException
    {
        org.apache.commons.math.optimization.linear.LinearObjectiveFunction r0;
        java.io.ObjectInputStream r1;

        r0 := @this: org.apache.commons.math.optimization.linear.LinearObjectiveFunction;

        r1 := @parameter0: java.io.ObjectInputStream;

        virtualinvoke r1.<java.io.ObjectInputStream: void defaultReadObject()>();

        staticinvoke <org.apache.commons.math.linear.MatrixUtils: void deserializeRealVector(java.lang.Object,java.lang.String,java.io.ObjectInputStream)>(r0, "coefficients", r1);

        return;
    }

    public static void <clinit>()
    {
        <org.apache.commons.math.optimization.linear.LinearObjectiveFunction: long serialVersionUID> = -4531815507568396090L;

        return;
    }
}
