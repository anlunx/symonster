public class com.opengamma.analytics.financial.provider.sensitivity.multicurve.AnnuallyCompoundedForwardSensitivity extends com.opengamma.analytics.financial.provider.sensitivity.multicurve.ForwardSensitivity
{

    public void <init>(double, double, double, double)
    {
        com.opengamma.analytics.financial.provider.sensitivity.multicurve.AnnuallyCompoundedForwardSensitivity r0;
        double d0, d1, d2, d3;

        r0 := @this: com.opengamma.analytics.financial.provider.sensitivity.multicurve.AnnuallyCompoundedForwardSensitivity;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        d2 := @parameter2: double;

        d3 := @parameter3: double;

        specialinvoke r0.<com.opengamma.analytics.financial.provider.sensitivity.multicurve.ForwardSensitivity: void <init>(double,double,double,double)>(d0, d1, d2, d3);

        return;
    }

    public double derivativeToYieldStart(double, double)
    {
        com.opengamma.analytics.financial.provider.sensitivity.multicurve.AnnuallyCompoundedForwardSensitivity r0;
        double d0, d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10;

        r0 := @this: com.opengamma.analytics.financial.provider.sensitivity.multicurve.AnnuallyCompoundedForwardSensitivity;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        $d2 = virtualinvoke r0.<com.opengamma.analytics.financial.provider.sensitivity.multicurve.AnnuallyCompoundedForwardSensitivity: double getStartTime()>();

        $d3 = neg $d2;

        $d4 = virtualinvoke r0.<com.opengamma.analytics.financial.provider.sensitivity.multicurve.AnnuallyCompoundedForwardSensitivity: double getAccrualFactor()>();

        $d5 = $d3 / $d4;

        $d6 = d0 / d1;

        $d7 = virtualinvoke r0.<com.opengamma.analytics.financial.provider.sensitivity.multicurve.AnnuallyCompoundedForwardSensitivity: double getAccrualFactor()>();

        $d8 = 1.0 / $d7;

        $d9 = staticinvoke <java.lang.Math: double pow(double,double)>($d6, $d8);

        $d10 = $d5 * $d9;

        return $d10;
    }

    public double derivativeToYieldEnd(double, double)
    {
        com.opengamma.analytics.financial.provider.sensitivity.multicurve.AnnuallyCompoundedForwardSensitivity r0;
        double d0, d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9;

        r0 := @this: com.opengamma.analytics.financial.provider.sensitivity.multicurve.AnnuallyCompoundedForwardSensitivity;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        $d2 = virtualinvoke r0.<com.opengamma.analytics.financial.provider.sensitivity.multicurve.AnnuallyCompoundedForwardSensitivity: double getEndTime()>();

        $d3 = virtualinvoke r0.<com.opengamma.analytics.financial.provider.sensitivity.multicurve.AnnuallyCompoundedForwardSensitivity: double getAccrualFactor()>();

        $d4 = $d2 / $d3;

        $d5 = d0 / d1;

        $d6 = virtualinvoke r0.<com.opengamma.analytics.financial.provider.sensitivity.multicurve.AnnuallyCompoundedForwardSensitivity: double getAccrualFactor()>();

        $d7 = 1.0 / $d6;

        $d8 = staticinvoke <java.lang.Math: double pow(double,double)>($d5, $d7);

        $d9 = $d4 * $d8;

        return $d9;
    }

    public java.lang.String toString()
    {
        com.opengamma.analytics.financial.provider.sensitivity.multicurve.AnnuallyCompoundedForwardSensitivity r0;

        r0 := @this: com.opengamma.analytics.financial.provider.sensitivity.multicurve.AnnuallyCompoundedForwardSensitivity;

        return "AnnuallyCompoundedForwardSensitivity []";
    }
}
