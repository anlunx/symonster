public class com.opengamma.analytics.financial.provider.sensitivity.multicurve.ParameterSensitivityMulticurveDiscountInterpolatedFDCalculator extends java.lang.Object
{
    private final com.opengamma.analytics.financial.interestrate.InstrumentDerivativeVisitor _valueCalculator;
    private final double _shift;

    public void <init>(com.opengamma.analytics.financial.interestrate.InstrumentDerivativeVisitor, double)
    {
        com.opengamma.analytics.financial.provider.sensitivity.multicurve.ParameterSensitivityMulticurveDiscountInterpolatedFDCalculator r0;
        com.opengamma.analytics.financial.interestrate.InstrumentDerivativeVisitor r1;
        double d0;

        r0 := @this: com.opengamma.analytics.financial.provider.sensitivity.multicurve.ParameterSensitivityMulticurveDiscountInterpolatedFDCalculator;

        r1 := @parameter0: com.opengamma.analytics.financial.interestrate.InstrumentDerivativeVisitor;

        d0 := @parameter1: double;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "Calculator");

        r0.<com.opengamma.analytics.financial.provider.sensitivity.multicurve.ParameterSensitivityMulticurveDiscountInterpolatedFDCalculator: com.opengamma.analytics.financial.interestrate.InstrumentDerivativeVisitor _valueCalculator> = r1;

        r0.<com.opengamma.analytics.financial.provider.sensitivity.multicurve.ParameterSensitivityMulticurveDiscountInterpolatedFDCalculator: double _shift> = d0;

        return;
    }

    public com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyParameterSensitivity calculateSensitivity(com.opengamma.analytics.financial.interestrate.InstrumentDerivative, com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount)
    {
        com.opengamma.analytics.financial.provider.sensitivity.multicurve.ParameterSensitivityMulticurveDiscountInterpolatedFDCalculator r0;
        com.opengamma.analytics.financial.interestrate.InstrumentDerivative r1;
        com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount r2, r83, r96, r109;
        com.opengamma.util.money.MultipleCurrencyAmount r3, r4, r84, r85, r97, r98, r110, r111;
        int i0, i1, i2, i3, i4, i5, i6, i7, i8, i9, i10, i11, i12, i13;
        com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyParameterSensitivity $r6, r73;
        com.opengamma.analytics.financial.interestrate.InstrumentDerivativeVisitor $r7, $r25, $r45, $r65;
        java.lang.Object $r8, $r10, $r14, $r19, $r26, $r28, $r30, $r34, $r39, $r46, $r48, $r50, $r54, $r59, $r66, $r68;
        java.util.ArrayList $r9;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8;
        com.opengamma.analytics.math.curve.DoublesCurve $r11, $r12, $r31, $r32, $r51, $r52;
        double[] $r13, $r17, $r18, $r23, $r27, $r33, $r37, $r38, $r43, $r47, $r53, $r57, $r58, $r63, $r67, r81, r94, r107;
        com.opengamma.util.tuple.Pair $r15, $r35, $r55;
        com.opengamma.analytics.math.matrix.DoubleMatrix1D $r16, $r36, $r56;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17;
        com.opengamma.analytics.financial.model.interestrate.curve.YieldCurve $r20, $r40, $r60, r78, r91, r104;
        java.lang.String $r21, $r41, $r61, r86, r99, r112;
        com.opengamma.analytics.math.curve.InterpolatedDoublesCurve $r22, $r42, $r62, r79, r92, r105;
        com.opengamma.analytics.math.interpolation.Interpolator1D $r24, $r44, $r64;
        com.opengamma.util.money.Currency $r29, $r49, $r69, $r72, r76;
        com.opengamma.util.money.CurrencyAmount[] $r70;
        com.opengamma.util.money.CurrencyAmount $r71;
        java.util.Set r74, r87, r100;
        java.util.Iterator r75, r88, r101;
        com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve r77, r90, r103;
        double[][] r80, r93, r106;
        com.opengamma.analytics.financial.instrument.index.IndexON r89;
        com.opengamma.analytics.financial.instrument.index.IborIndex r102;

        r0 := @this: com.opengamma.analytics.financial.provider.sensitivity.multicurve.ParameterSensitivityMulticurveDiscountInterpolatedFDCalculator;

        r1 := @parameter0: com.opengamma.analytics.financial.interestrate.InstrumentDerivative;

        r2 := @parameter1: com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount;

        $r6 = new com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyParameterSensitivity;

        specialinvoke $r6.<com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyParameterSensitivity: void <init>()>();

        r73 = $r6;

        $r7 = r0.<com.opengamma.analytics.financial.provider.sensitivity.multicurve.ParameterSensitivityMulticurveDiscountInterpolatedFDCalculator: com.opengamma.analytics.financial.interestrate.InstrumentDerivativeVisitor _valueCalculator>;

        $r8 = interfaceinvoke r1.<com.opengamma.analytics.financial.interestrate.InstrumentDerivative: java.lang.Object accept(com.opengamma.analytics.financial.interestrate.InstrumentDerivativeVisitor,java.lang.Object)>($r7, r2);

        r3 = (com.opengamma.util.money.MultipleCurrencyAmount) $r8;

        r4 = virtualinvoke r3.<com.opengamma.util.money.MultipleCurrencyAmount: com.opengamma.util.money.MultipleCurrencyAmount multipliedBy(double)>(-1.0);

        i0 = virtualinvoke r3.<com.opengamma.util.money.MultipleCurrencyAmount: int size()>();

        $r9 = new java.util.ArrayList;

        specialinvoke $r9.<java.util.ArrayList: void <init>()>();

        i1 = 0;

     label01:
        if i1 >= i0 goto label02;

        $r70 = virtualinvoke r3.<com.opengamma.util.money.MultipleCurrencyAmount: com.opengamma.util.money.CurrencyAmount[] getCurrencyAmounts()>();

        $r71 = $r70[i1];

        $r72 = virtualinvoke $r71.<com.opengamma.util.money.CurrencyAmount: com.opengamma.util.money.Currency getCurrency()>();

        interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>($r72);

        i1 = i1 + 1;

        goto label01;

     label02:
        r74 = virtualinvoke r2.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount: java.util.Set getCurrencies()>();

        r75 = interfaceinvoke r74.<java.util.Set: java.util.Iterator iterator()>();

     label03:
        $z0 = interfaceinvoke r75.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label10;

        $r50 = interfaceinvoke r75.<java.util.Iterator: java.lang.Object next()>();

        r76 = (com.opengamma.util.money.Currency) $r50;

        r77 = virtualinvoke r2.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount: com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve getCurve(com.opengamma.util.money.Currency)>(r76);

        $z7 = r77 instanceof com.opengamma.analytics.financial.model.interestrate.curve.YieldCurve;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z7, "Curve should be a YieldCurve");

        r78 = (com.opengamma.analytics.financial.model.interestrate.curve.YieldCurve) r77;

        $r51 = virtualinvoke r78.<com.opengamma.analytics.financial.model.interestrate.curve.YieldCurve: com.opengamma.analytics.math.curve.DoublesCurve getCurve()>();

        $z8 = $r51 instanceof com.opengamma.analytics.math.curve.InterpolatedDoublesCurve;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z8, "Yield curve should be based on InterpolatedDoublesCurve");

        $r52 = virtualinvoke r78.<com.opengamma.analytics.financial.model.interestrate.curve.YieldCurve: com.opengamma.analytics.math.curve.DoublesCurve getCurve()>();

        r79 = (com.opengamma.analytics.math.curve.InterpolatedDoublesCurve) $r52;

        $r53 = virtualinvoke r79.<com.opengamma.analytics.math.curve.InterpolatedDoublesCurve: double[] getXDataAsPrimitive()>();

        i2 = lengthof $r53;

        r80 = newmultiarray (double)[i0][i2];

        i3 = 0;

     label04:
        if i3 >= i2 goto label07;

        $r58 = virtualinvoke r79.<com.opengamma.analytics.math.curve.InterpolatedDoublesCurve: double[] getYDataAsPrimitive()>();

        $r59 = virtualinvoke $r58.<java.lang.Object: java.lang.Object clone()>();

        r81 = (double[]) $r59;

        $d13 = r81[i3];

        $d12 = r0.<com.opengamma.analytics.financial.provider.sensitivity.multicurve.ParameterSensitivityMulticurveDiscountInterpolatedFDCalculator: double _shift>;

        $d14 = $d13 + $d12;

        r81[i3] = $d14;

        $r60 = new com.opengamma.analytics.financial.model.interestrate.curve.YieldCurve;

        $r61 = virtualinvoke r79.<com.opengamma.analytics.math.curve.InterpolatedDoublesCurve: java.lang.String getName()>();

        $r62 = new com.opengamma.analytics.math.curve.InterpolatedDoublesCurve;

        $r63 = virtualinvoke r79.<com.opengamma.analytics.math.curve.InterpolatedDoublesCurve: double[] getXDataAsPrimitive()>();

        $r64 = virtualinvoke r79.<com.opengamma.analytics.math.curve.InterpolatedDoublesCurve: com.opengamma.analytics.math.interpolation.Interpolator1D getInterpolator()>();

        specialinvoke $r62.<com.opengamma.analytics.math.curve.InterpolatedDoublesCurve: void <init>(double[],double[],com.opengamma.analytics.math.interpolation.Interpolator1D,boolean)>($r63, r81, $r64, 1);

        specialinvoke $r60.<com.opengamma.analytics.financial.model.interestrate.curve.YieldCurve: void <init>(java.lang.String,com.opengamma.analytics.math.curve.DoublesCurve)>($r61, $r62);

        r83 = virtualinvoke r2.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount: com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount withDiscountFactor(com.opengamma.util.money.Currency,com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve)>(r76, $r60);

        $r65 = r0.<com.opengamma.analytics.financial.provider.sensitivity.multicurve.ParameterSensitivityMulticurveDiscountInterpolatedFDCalculator: com.opengamma.analytics.financial.interestrate.InstrumentDerivativeVisitor _valueCalculator>;

        $r66 = interfaceinvoke r1.<com.opengamma.analytics.financial.interestrate.InstrumentDerivative: java.lang.Object accept(com.opengamma.analytics.financial.interestrate.InstrumentDerivativeVisitor,java.lang.Object)>($r65, r83);

        r84 = (com.opengamma.util.money.MultipleCurrencyAmount) $r66;

        r85 = virtualinvoke r84.<com.opengamma.util.money.MultipleCurrencyAmount: com.opengamma.util.money.MultipleCurrencyAmount plus(com.opengamma.util.money.MultipleCurrencyAmount)>(r4);

        i4 = 0;

     label05:
        if i4 >= i0 goto label06;

        $r67 = r80[i4];

        $r68 = interfaceinvoke $r9.<java.util.List: java.lang.Object get(int)>(i4);

        $r69 = (com.opengamma.util.money.Currency) $r68;

        $d15 = virtualinvoke r85.<com.opengamma.util.money.MultipleCurrencyAmount: double getAmount(com.opengamma.util.money.Currency)>($r69);

        $d16 = r0.<com.opengamma.analytics.financial.provider.sensitivity.multicurve.ParameterSensitivityMulticurveDiscountInterpolatedFDCalculator: double _shift>;

        $d17 = $d15 / $d16;

        $r67[i3] = $d17;

        i4 = i4 + 1;

        goto label05;

     label06:
        i3 = i3 + 1;

        goto label04;

     label07:
        r86 = virtualinvoke r2.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount: java.lang.String getName(com.opengamma.util.money.Currency)>(r76);

        i5 = 0;

     label08:
        if i5 >= i0 goto label09;

        $r54 = interfaceinvoke $r9.<java.util.List: java.lang.Object get(int)>(i5);

        $r55 = staticinvoke <com.opengamma.util.tuple.Pairs: com.opengamma.util.tuple.Pair of(java.lang.Object,java.lang.Object)>(r86, $r54);

        $r56 = new com.opengamma.analytics.math.matrix.DoubleMatrix1D;

        $r57 = r80[i5];

        specialinvoke $r56.<com.opengamma.analytics.math.matrix.DoubleMatrix1D: void <init>(double[])>($r57);

        r73 = virtualinvoke r73.<com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyParameterSensitivity: com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyParameterSensitivity plus(com.opengamma.util.tuple.Pair,com.opengamma.analytics.math.matrix.DoubleMatrix1D)>($r55, $r56);

        i5 = i5 + 1;

        goto label08;

     label09:
        goto label03;

     label10:
        r87 = virtualinvoke r2.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount: java.util.Set getIndexesON()>();

        r88 = interfaceinvoke r87.<java.util.Set: java.util.Iterator iterator()>();

     label11:
        $z1 = interfaceinvoke r88.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label18;

        $r30 = interfaceinvoke r88.<java.util.Iterator: java.lang.Object next()>();

        r89 = (com.opengamma.analytics.financial.instrument.index.IndexON) $r30;

        r90 = virtualinvoke r2.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount: com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve getCurve(com.opengamma.analytics.financial.instrument.index.IndexON)>(r89);

        $z5 = r90 instanceof com.opengamma.analytics.financial.model.interestrate.curve.YieldCurve;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z5, "Curve should be a YieldCurve");

        r91 = (com.opengamma.analytics.financial.model.interestrate.curve.YieldCurve) r90;

        $r31 = virtualinvoke r91.<com.opengamma.analytics.financial.model.interestrate.curve.YieldCurve: com.opengamma.analytics.math.curve.DoublesCurve getCurve()>();

        $z6 = $r31 instanceof com.opengamma.analytics.math.curve.InterpolatedDoublesCurve;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z6, "Yield curve should be based on InterpolatedDoublesCurve");

        $r32 = virtualinvoke r91.<com.opengamma.analytics.financial.model.interestrate.curve.YieldCurve: com.opengamma.analytics.math.curve.DoublesCurve getCurve()>();

        r92 = (com.opengamma.analytics.math.curve.InterpolatedDoublesCurve) $r32;

        $r33 = virtualinvoke r92.<com.opengamma.analytics.math.curve.InterpolatedDoublesCurve: double[] getXDataAsPrimitive()>();

        i6 = lengthof $r33;

        r93 = newmultiarray (double)[i0][i6];

        i7 = 0;

     label12:
        if i7 >= i6 goto label15;

        $r38 = virtualinvoke r92.<com.opengamma.analytics.math.curve.InterpolatedDoublesCurve: double[] getYDataAsPrimitive()>();

        $r39 = virtualinvoke $r38.<java.lang.Object: java.lang.Object clone()>();

        r94 = (double[]) $r39;

        $d7 = r94[i7];

        $d6 = r0.<com.opengamma.analytics.financial.provider.sensitivity.multicurve.ParameterSensitivityMulticurveDiscountInterpolatedFDCalculator: double _shift>;

        $d8 = $d7 + $d6;

        r94[i7] = $d8;

        $r40 = new com.opengamma.analytics.financial.model.interestrate.curve.YieldCurve;

        $r41 = virtualinvoke r92.<com.opengamma.analytics.math.curve.InterpolatedDoublesCurve: java.lang.String getName()>();

        $r42 = new com.opengamma.analytics.math.curve.InterpolatedDoublesCurve;

        $r43 = virtualinvoke r92.<com.opengamma.analytics.math.curve.InterpolatedDoublesCurve: double[] getXDataAsPrimitive()>();

        $r44 = virtualinvoke r92.<com.opengamma.analytics.math.curve.InterpolatedDoublesCurve: com.opengamma.analytics.math.interpolation.Interpolator1D getInterpolator()>();

        specialinvoke $r42.<com.opengamma.analytics.math.curve.InterpolatedDoublesCurve: void <init>(double[],double[],com.opengamma.analytics.math.interpolation.Interpolator1D,boolean)>($r43, r94, $r44, 1);

        specialinvoke $r40.<com.opengamma.analytics.financial.model.interestrate.curve.YieldCurve: void <init>(java.lang.String,com.opengamma.analytics.math.curve.DoublesCurve)>($r41, $r42);

        r96 = virtualinvoke r2.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount: com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount withForward(com.opengamma.analytics.financial.instrument.index.IndexON,com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve)>(r89, $r40);

        $r45 = r0.<com.opengamma.analytics.financial.provider.sensitivity.multicurve.ParameterSensitivityMulticurveDiscountInterpolatedFDCalculator: com.opengamma.analytics.financial.interestrate.InstrumentDerivativeVisitor _valueCalculator>;

        $r46 = interfaceinvoke r1.<com.opengamma.analytics.financial.interestrate.InstrumentDerivative: java.lang.Object accept(com.opengamma.analytics.financial.interestrate.InstrumentDerivativeVisitor,java.lang.Object)>($r45, r96);

        r97 = (com.opengamma.util.money.MultipleCurrencyAmount) $r46;

        r98 = virtualinvoke r97.<com.opengamma.util.money.MultipleCurrencyAmount: com.opengamma.util.money.MultipleCurrencyAmount plus(com.opengamma.util.money.MultipleCurrencyAmount)>(r4);

        i8 = 0;

     label13:
        if i8 >= i0 goto label14;

        $r47 = r93[i8];

        $r48 = interfaceinvoke $r9.<java.util.List: java.lang.Object get(int)>(i8);

        $r49 = (com.opengamma.util.money.Currency) $r48;

        $d9 = virtualinvoke r98.<com.opengamma.util.money.MultipleCurrencyAmount: double getAmount(com.opengamma.util.money.Currency)>($r49);

        $d10 = r0.<com.opengamma.analytics.financial.provider.sensitivity.multicurve.ParameterSensitivityMulticurveDiscountInterpolatedFDCalculator: double _shift>;

        $d11 = $d9 / $d10;

        $r47[i7] = $d11;

        i8 = i8 + 1;

        goto label13;

     label14:
        i7 = i7 + 1;

        goto label12;

     label15:
        r99 = virtualinvoke r2.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount: java.lang.String getName(com.opengamma.analytics.financial.instrument.index.IndexON)>(r89);

        i9 = 0;

     label16:
        if i9 >= i0 goto label17;

        $r34 = interfaceinvoke $r9.<java.util.List: java.lang.Object get(int)>(i9);

        $r35 = staticinvoke <com.opengamma.util.tuple.Pairs: com.opengamma.util.tuple.Pair of(java.lang.Object,java.lang.Object)>(r99, $r34);

        $r36 = new com.opengamma.analytics.math.matrix.DoubleMatrix1D;

        $r37 = r93[i9];

        specialinvoke $r36.<com.opengamma.analytics.math.matrix.DoubleMatrix1D: void <init>(double[])>($r37);

        r73 = virtualinvoke r73.<com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyParameterSensitivity: com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyParameterSensitivity plus(com.opengamma.util.tuple.Pair,com.opengamma.analytics.math.matrix.DoubleMatrix1D)>($r35, $r36);

        i9 = i9 + 1;

        goto label16;

     label17:
        goto label11;

     label18:
        r100 = virtualinvoke r2.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount: java.util.Set getIndexesIbor()>();

        r101 = interfaceinvoke r100.<java.util.Set: java.util.Iterator iterator()>();

     label19:
        $z2 = interfaceinvoke r101.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label26;

        $r10 = interfaceinvoke r101.<java.util.Iterator: java.lang.Object next()>();

        r102 = (com.opengamma.analytics.financial.instrument.index.IborIndex) $r10;

        r103 = virtualinvoke r2.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount: com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve getCurve(com.opengamma.analytics.financial.instrument.index.IborIndex)>(r102);

        $z3 = r103 instanceof com.opengamma.analytics.financial.model.interestrate.curve.YieldCurve;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z3, "Curve should be a YieldCurve");

        r104 = (com.opengamma.analytics.financial.model.interestrate.curve.YieldCurve) r103;

        $r11 = virtualinvoke r104.<com.opengamma.analytics.financial.model.interestrate.curve.YieldCurve: com.opengamma.analytics.math.curve.DoublesCurve getCurve()>();

        $z4 = $r11 instanceof com.opengamma.analytics.math.curve.InterpolatedDoublesCurve;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z4, "Yield curve should be based on InterpolatedDoublesCurve");

        $r12 = virtualinvoke r104.<com.opengamma.analytics.financial.model.interestrate.curve.YieldCurve: com.opengamma.analytics.math.curve.DoublesCurve getCurve()>();

        r105 = (com.opengamma.analytics.math.curve.InterpolatedDoublesCurve) $r12;

        $r13 = virtualinvoke r105.<com.opengamma.analytics.math.curve.InterpolatedDoublesCurve: double[] getXDataAsPrimitive()>();

        i10 = lengthof $r13;

        r106 = newmultiarray (double)[i0][i10];

        i11 = 0;

     label20:
        if i11 >= i10 goto label23;

        $r18 = virtualinvoke r105.<com.opengamma.analytics.math.curve.InterpolatedDoublesCurve: double[] getYDataAsPrimitive()>();

        $r19 = virtualinvoke $r18.<java.lang.Object: java.lang.Object clone()>();

        r107 = (double[]) $r19;

        $d1 = r107[i11];

        $d0 = r0.<com.opengamma.analytics.financial.provider.sensitivity.multicurve.ParameterSensitivityMulticurveDiscountInterpolatedFDCalculator: double _shift>;

        $d2 = $d1 + $d0;

        r107[i11] = $d2;

        $r20 = new com.opengamma.analytics.financial.model.interestrate.curve.YieldCurve;

        $r21 = virtualinvoke r105.<com.opengamma.analytics.math.curve.InterpolatedDoublesCurve: java.lang.String getName()>();

        $r22 = new com.opengamma.analytics.math.curve.InterpolatedDoublesCurve;

        $r23 = virtualinvoke r105.<com.opengamma.analytics.math.curve.InterpolatedDoublesCurve: double[] getXDataAsPrimitive()>();

        $r24 = virtualinvoke r105.<com.opengamma.analytics.math.curve.InterpolatedDoublesCurve: com.opengamma.analytics.math.interpolation.Interpolator1D getInterpolator()>();

        specialinvoke $r22.<com.opengamma.analytics.math.curve.InterpolatedDoublesCurve: void <init>(double[],double[],com.opengamma.analytics.math.interpolation.Interpolator1D,boolean)>($r23, r107, $r24, 1);

        specialinvoke $r20.<com.opengamma.analytics.financial.model.interestrate.curve.YieldCurve: void <init>(java.lang.String,com.opengamma.analytics.math.curve.DoublesCurve)>($r21, $r22);

        r109 = virtualinvoke r2.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount: com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount withForward(com.opengamma.analytics.financial.instrument.index.IborIndex,com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve)>(r102, $r20);

        $r25 = r0.<com.opengamma.analytics.financial.provider.sensitivity.multicurve.ParameterSensitivityMulticurveDiscountInterpolatedFDCalculator: com.opengamma.analytics.financial.interestrate.InstrumentDerivativeVisitor _valueCalculator>;

        $r26 = interfaceinvoke r1.<com.opengamma.analytics.financial.interestrate.InstrumentDerivative: java.lang.Object accept(com.opengamma.analytics.financial.interestrate.InstrumentDerivativeVisitor,java.lang.Object)>($r25, r109);

        r110 = (com.opengamma.util.money.MultipleCurrencyAmount) $r26;

        r111 = virtualinvoke r110.<com.opengamma.util.money.MultipleCurrencyAmount: com.opengamma.util.money.MultipleCurrencyAmount plus(com.opengamma.util.money.MultipleCurrencyAmount)>(r4);

        i12 = 0;

     label21:
        if i12 >= i0 goto label22;

        $r27 = r106[i12];

        $r28 = interfaceinvoke $r9.<java.util.List: java.lang.Object get(int)>(i12);

        $r29 = (com.opengamma.util.money.Currency) $r28;

        $d3 = virtualinvoke r111.<com.opengamma.util.money.MultipleCurrencyAmount: double getAmount(com.opengamma.util.money.Currency)>($r29);

        $d4 = r0.<com.opengamma.analytics.financial.provider.sensitivity.multicurve.ParameterSensitivityMulticurveDiscountInterpolatedFDCalculator: double _shift>;

        $d5 = $d3 / $d4;

        $r27[i11] = $d5;

        i12 = i12 + 1;

        goto label21;

     label22:
        i11 = i11 + 1;

        goto label20;

     label23:
        r112 = virtualinvoke r2.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount: java.lang.String getName(com.opengamma.analytics.financial.instrument.index.IborIndex)>(r102);

        i13 = 0;

     label24:
        if i13 >= i0 goto label25;

        $r14 = interfaceinvoke $r9.<java.util.List: java.lang.Object get(int)>(i13);

        $r15 = staticinvoke <com.opengamma.util.tuple.Pairs: com.opengamma.util.tuple.Pair of(java.lang.Object,java.lang.Object)>(r112, $r14);

        $r16 = new com.opengamma.analytics.math.matrix.DoubleMatrix1D;

        $r17 = r106[i13];

        specialinvoke $r16.<com.opengamma.analytics.math.matrix.DoubleMatrix1D: void <init>(double[])>($r17);

        r73 = virtualinvoke r73.<com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyParameterSensitivity: com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyParameterSensitivity plus(com.opengamma.util.tuple.Pair,com.opengamma.analytics.math.matrix.DoubleMatrix1D)>($r15, $r16);

        i13 = i13 + 1;

        goto label24;

     label25:
        goto label19;

     label26:
        return r73;
    }
}
