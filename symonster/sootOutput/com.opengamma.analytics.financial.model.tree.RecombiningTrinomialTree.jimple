public class com.opengamma.analytics.financial.model.tree.RecombiningTrinomialTree extends com.opengamma.analytics.financial.model.tree.RecombiningTree
{
    public static final com.opengamma.analytics.math.function.Function1D NODES;

    public void <init>(java.lang.Object[][])
    {
        com.opengamma.analytics.financial.model.tree.RecombiningTrinomialTree r0;
        java.lang.Object[][] r1;

        r0 := @this: com.opengamma.analytics.financial.model.tree.RecombiningTrinomialTree;

        r1 := @parameter0: java.lang.Object[][];

        specialinvoke r0.<com.opengamma.analytics.financial.model.tree.RecombiningTree: void <init>(java.lang.Object[][])>(r1);

        return;
    }

    protected int getMaxNodesForStep(int)
    {
        com.opengamma.analytics.financial.model.tree.RecombiningTrinomialTree r0;
        int i0, $i1;
        com.opengamma.analytics.math.function.Function1D $r1;
        java.lang.Integer $r2, $r4;
        java.lang.Object $r3;

        r0 := @this: com.opengamma.analytics.financial.model.tree.RecombiningTrinomialTree;

        i0 := @parameter0: int;

        $r1 = <com.opengamma.analytics.financial.model.tree.RecombiningTrinomialTree: com.opengamma.analytics.math.function.Function1D NODES>;

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r3 = virtualinvoke $r1.<com.opengamma.analytics.math.function.Function1D: java.lang.Object evaluate(java.lang.Object)>($r2);

        $r4 = (java.lang.Integer) $r3;

        $i1 = virtualinvoke $r4.<java.lang.Integer: int intValue()>();

        return $i1;
    }

    static void <clinit>()
    {
        com.opengamma.analytics.financial.model.tree.RecombiningTrinomialTree$1 $r0;

        $r0 = new com.opengamma.analytics.financial.model.tree.RecombiningTrinomialTree$1;

        specialinvoke $r0.<com.opengamma.analytics.financial.model.tree.RecombiningTrinomialTree$1: void <init>()>();

        <com.opengamma.analytics.financial.model.tree.RecombiningTrinomialTree: com.opengamma.analytics.math.function.Function1D NODES> = $r0;

        return;
    }
}
