public final class com.opengamma.analytics.financial.interestrate.payments.provider.CouponONCompoundedDiscountingMethod extends java.lang.Object
{
    private static final com.opengamma.analytics.financial.interestrate.payments.provider.CouponONCompoundedDiscountingMethod INSTANCE;

    public static com.opengamma.analytics.financial.interestrate.payments.provider.CouponONCompoundedDiscountingMethod getInstance()
    {
        com.opengamma.analytics.financial.interestrate.payments.provider.CouponONCompoundedDiscountingMethod $r0;

        $r0 = <com.opengamma.analytics.financial.interestrate.payments.provider.CouponONCompoundedDiscountingMethod: com.opengamma.analytics.financial.interestrate.payments.provider.CouponONCompoundedDiscountingMethod INSTANCE>;

        return $r0;
    }

    private void <init>()
    {
        com.opengamma.analytics.financial.interestrate.payments.provider.CouponONCompoundedDiscountingMethod r0;

        r0 := @this: com.opengamma.analytics.financial.interestrate.payments.provider.CouponONCompoundedDiscountingMethod;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public com.opengamma.util.money.MultipleCurrencyAmount presentValue(com.opengamma.analytics.financial.interestrate.payments.derivative.CouponONCompounded, com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface)
    {
        com.opengamma.analytics.financial.interestrate.payments.provider.CouponONCompoundedDiscountingMethod r0;
        com.opengamma.analytics.financial.interestrate.payments.derivative.CouponONCompounded r1;
        com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface r2;
        double d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, d11, d12;
        double[] $r5, $r11, $r12, $r13, $r14;
        int $i0, i1;
        com.opengamma.util.money.Currency $r6, $r8;
        java.lang.Double $r7;
        com.opengamma.util.money.MultipleCurrencyAmount $r9;
        com.opengamma.analytics.financial.instrument.index.IndexON $r10;

        r0 := @this: com.opengamma.analytics.financial.interestrate.payments.provider.CouponONCompoundedDiscountingMethod;

        r1 := @parameter0: com.opengamma.analytics.financial.interestrate.payments.derivative.CouponONCompounded;

        r2 := @parameter1: com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "Coupon");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, "Market");

        d11 = 1.0;

        i1 = 0;

     label1:
        $r5 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.payments.derivative.CouponONCompounded: double[] getFixingPeriodAccrualFactors()>();

        $i0 = lengthof $r5;

        if i1 >= $i0 goto label2;

        $r10 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.payments.derivative.CouponONCompounded: com.opengamma.analytics.financial.instrument.index.IndexON getIndex()>();

        $r11 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.payments.derivative.CouponONCompounded: double[] getFixingPeriodStartTimes()>();

        $d4 = $r11[i1];

        $r12 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.payments.derivative.CouponONCompounded: double[] getFixingPeriodEndTimes()>();

        $d5 = $r12[i1];

        $r13 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.payments.derivative.CouponONCompounded: double[] getFixingPeriodAccrualFactors()>();

        $d6 = $r13[i1];

        $d7 = interfaceinvoke r2.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface: double getAnnuallyCompoundForwardRate(com.opengamma.analytics.financial.instrument.index.IndexON,double,double,double)>($r10, $d4, $d5, $d6);

        $d8 = 1.0 + $d7;

        $r14 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.payments.derivative.CouponONCompounded: double[] getFixingPeriodAccrualFactors()>();

        $d9 = $r14[i1];

        $d10 = staticinvoke <java.lang.Math: double pow(double,double)>($d8, $d9);

        d11 = d11 * $d10;

        i1 = i1 + 1;

        goto label1;

     label2:
        $r6 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.payments.derivative.CouponONCompounded: com.opengamma.util.money.Currency getCurrency()>();

        $d1 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.payments.derivative.CouponONCompounded: double getPaymentTime()>();

        $r7 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d1);

        d12 = interfaceinvoke r2.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface: double getDiscountFactor(com.opengamma.util.money.Currency,java.lang.Double)>($r6, $r7);

        $d2 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.payments.derivative.CouponONCompounded: double getNotionalAccrued()>();

        $d3 = d12 * $d2;

        d0 = $d3 * d11;

        $r8 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.payments.derivative.CouponONCompounded: com.opengamma.util.money.Currency getCurrency()>();

        $r9 = staticinvoke <com.opengamma.util.money.MultipleCurrencyAmount: com.opengamma.util.money.MultipleCurrencyAmount of(com.opengamma.util.money.Currency,double)>($r8, d0);

        return $r9;
    }

    public com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyMulticurveSensitivity presentValueCurveSensitivity(com.opengamma.analytics.financial.interestrate.payments.derivative.CouponONCompounded, com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface)
    {
        com.opengamma.analytics.financial.interestrate.payments.provider.CouponONCompoundedDiscountingMethod r0;
        com.opengamma.analytics.financial.interestrate.payments.derivative.CouponONCompounded r1;
        com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface r2;
        double d0, d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21, $d22, $d23, $d24, $d25, $d26, $d27, $d28, $d29, d30, d32;
        double[] r3, r4, $r13, $r14, $r15, $r16, $r25, $r32, $r33, $r34, $r35, $r37, $r38, $r39, $r40;
        com.opengamma.util.money.Currency $r11, $r20, $r29;
        java.lang.Double $r12;
        int $i0, $i1, $i2, $i3, $i4, i5, i6, i7;
        java.util.HashMap $r17, $r23;
        java.util.ArrayList $r18, $r24;
        com.opengamma.util.tuple.DoublesPair $r19;
        java.lang.String $r21, $r27;
        com.opengamma.analytics.financial.instrument.index.IndexON $r26, $r36;
        com.opengamma.analytics.financial.provider.sensitivity.multicurve.MulticurveSensitivity $r30;
        com.opengamma.analytics.financial.provider.sensitivity.multicurve.AnnuallyCompoundedForwardSensitivity $r31;
        com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyMulticurveSensitivity r41;

        r0 := @this: com.opengamma.analytics.financial.interestrate.payments.provider.CouponONCompoundedDiscountingMethod;

        r1 := @parameter0: com.opengamma.analytics.financial.interestrate.payments.derivative.CouponONCompounded;

        r2 := @parameter1: com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "Coupon");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, "Multi-curves");

        $r11 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.payments.derivative.CouponONCompounded: com.opengamma.util.money.Currency getCurrency()>();

        $d2 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.payments.derivative.CouponONCompounded: double getPaymentTime()>();

        $r12 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d2);

        d0 = interfaceinvoke r2.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface: double getDiscountFactor(com.opengamma.util.money.Currency,java.lang.Double)>($r11, $r12);

        d30 = 1.0;

        $r13 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.payments.derivative.CouponONCompounded: double[] getFixingPeriodAccrualFactors()>();

        $i0 = lengthof $r13;

        r3 = newarray (double)[$i0];

        i5 = 0;

     label1:
        $r14 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.payments.derivative.CouponONCompounded: double[] getFixingPeriodAccrualFactors()>();

        $i1 = lengthof $r14;

        if i5 >= $i1 goto label2;

        $r36 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.payments.derivative.CouponONCompounded: com.opengamma.analytics.financial.instrument.index.IndexON getIndex()>();

        $r37 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.payments.derivative.CouponONCompounded: double[] getFixingPeriodStartTimes()>();

        $d22 = $r37[i5];

        $r38 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.payments.derivative.CouponONCompounded: double[] getFixingPeriodEndTimes()>();

        $d23 = $r38[i5];

        $r39 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.payments.derivative.CouponONCompounded: double[] getFixingPeriodAccrualFactors()>();

        $d24 = $r39[i5];

        $d25 = interfaceinvoke r2.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface: double getAnnuallyCompoundForwardRate(com.opengamma.analytics.financial.instrument.index.IndexON,double,double,double)>($r36, $d22, $d23, $d24);

        r3[i5] = $d25;

        $d26 = r3[i5];

        $d27 = 1.0 + $d26;

        $r40 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.payments.derivative.CouponONCompounded: double[] getFixingPeriodAccrualFactors()>();

        $d28 = $r40[i5];

        $d29 = staticinvoke <java.lang.Math: double pow(double,double)>($d27, $d28);

        d30 = d30 * $d29;

        i5 = i5 + 1;

        goto label1;

     label2:
        $d3 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.payments.derivative.CouponONCompounded: double getNotionalAccrued()>();

        $d4 = $d3 * d0;

        d1 = $d4 * 1.0;

        $r15 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.payments.derivative.CouponONCompounded: double[] getFixingPeriodAccrualFactors()>();

        $i2 = lengthof $r15;

        r4 = newarray (double)[$i2];

        i6 = 0;

     label3:
        $r16 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.payments.derivative.CouponONCompounded: double[] getFixingPeriodAccrualFactors()>();

        $i3 = lengthof $r16;

        if i6 >= $i3 goto label4;

        $d16 = d1 * d30;

        $r35 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.payments.derivative.CouponONCompounded: double[] getFixingPeriodAccrualFactors()>();

        $d17 = $r35[i6];

        $d20 = $d16 * $d17;

        $d18 = r3[i6];

        $d19 = 1.0 + $d18;

        $d21 = $d20 / $d19;

        r4[i6] = $d21;

        i6 = i6 + 1;

        goto label3;

     label4:
        $d5 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.payments.derivative.CouponONCompounded: double getNotionalAccrued()>();

        $d6 = $d5 * d30;

        d32 = $d6 * 1.0;

        $r17 = new java.util.HashMap;

        specialinvoke $r17.<java.util.HashMap: void <init>()>();

        $r18 = new java.util.ArrayList;

        specialinvoke $r18.<java.util.ArrayList: void <init>()>();

        $d7 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.payments.derivative.CouponONCompounded: double getPaymentTime()>();

        $d8 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.payments.derivative.CouponONCompounded: double getPaymentTime()>();

        $d9 = neg $d8;

        $d10 = $d9 * d0;

        $d11 = $d10 * d32;

        $r19 = staticinvoke <com.opengamma.util.tuple.DoublesPair: com.opengamma.util.tuple.DoublesPair of(double,double)>($d7, $d11);

        interfaceinvoke $r18.<java.util.List: boolean add(java.lang.Object)>($r19);

        $r20 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.payments.derivative.CouponONCompounded: com.opengamma.util.money.Currency getCurrency()>();

        $r21 = interfaceinvoke r2.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface: java.lang.String getName(com.opengamma.util.money.Currency)>($r20);

        interfaceinvoke $r17.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r21, $r18);

        $r23 = new java.util.HashMap;

        specialinvoke $r23.<java.util.HashMap: void <init>()>();

        $r24 = new java.util.ArrayList;

        specialinvoke $r24.<java.util.ArrayList: void <init>()>();

        i7 = 0;

     label5:
        $r25 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.payments.derivative.CouponONCompounded: double[] getFixingPeriodAccrualFactors()>();

        $i4 = lengthof $r25;

        if i7 >= $i4 goto label6;

        $r31 = new com.opengamma.analytics.financial.provider.sensitivity.multicurve.AnnuallyCompoundedForwardSensitivity;

        $r32 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.payments.derivative.CouponONCompounded: double[] getFixingPeriodStartTimes()>();

        $d12 = $r32[i7];

        $r33 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.payments.derivative.CouponONCompounded: double[] getFixingPeriodEndTimes()>();

        $d13 = $r33[i7];

        $r34 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.payments.derivative.CouponONCompounded: double[] getFixingPeriodAccrualFactors()>();

        $d15 = $r34[i7];

        $d14 = r4[i7];

        specialinvoke $r31.<com.opengamma.analytics.financial.provider.sensitivity.multicurve.AnnuallyCompoundedForwardSensitivity: void <init>(double,double,double,double)>($d12, $d13, $d15, $d14);

        interfaceinvoke $r24.<java.util.List: boolean add(java.lang.Object)>($r31);

        i7 = i7 + 1;

        goto label5;

     label6:
        $r26 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.payments.derivative.CouponONCompounded: com.opengamma.analytics.financial.instrument.index.IndexON getIndex()>();

        $r27 = interfaceinvoke r2.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface: java.lang.String getName(com.opengamma.analytics.financial.instrument.index.IndexON)>($r26);

        interfaceinvoke $r23.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r27, $r24);

        $r29 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.payments.derivative.CouponONCompounded: com.opengamma.util.money.Currency getCurrency()>();

        $r30 = staticinvoke <com.opengamma.analytics.financial.provider.sensitivity.multicurve.MulticurveSensitivity: com.opengamma.analytics.financial.provider.sensitivity.multicurve.MulticurveSensitivity of(java.util.Map,java.util.Map)>($r17, $r23);

        r41 = staticinvoke <com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyMulticurveSensitivity: com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyMulticurveSensitivity of(com.opengamma.util.money.Currency,com.opengamma.analytics.financial.provider.sensitivity.multicurve.MulticurveSensitivity)>($r29, $r30);

        return r41;
    }

    static void <clinit>()
    {
        com.opengamma.analytics.financial.interestrate.payments.provider.CouponONCompoundedDiscountingMethod $r0;

        $r0 = new com.opengamma.analytics.financial.interestrate.payments.provider.CouponONCompoundedDiscountingMethod;

        specialinvoke $r0.<com.opengamma.analytics.financial.interestrate.payments.provider.CouponONCompoundedDiscountingMethod: void <init>()>();

        <com.opengamma.analytics.financial.interestrate.payments.provider.CouponONCompoundedDiscountingMethod: com.opengamma.analytics.financial.interestrate.payments.provider.CouponONCompoundedDiscountingMethod INSTANCE> = $r0;

        return;
    }
}
