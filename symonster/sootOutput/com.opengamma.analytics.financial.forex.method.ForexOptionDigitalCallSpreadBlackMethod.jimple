public class com.opengamma.analytics.financial.forex.method.ForexOptionDigitalCallSpreadBlackMethod extends com.opengamma.analytics.financial.forex.method.ForexOptionDigitalCallSpreadMethod
{

    public void <init>(double)
    {
        com.opengamma.analytics.financial.forex.method.ForexOptionDigitalCallSpreadBlackMethod r0;
        double d0;
        com.opengamma.analytics.financial.forex.method.ForexOptionVanillaBlackSmileMethod $r1;

        r0 := @this: com.opengamma.analytics.financial.forex.method.ForexOptionDigitalCallSpreadBlackMethod;

        d0 := @parameter0: double;

        $r1 = staticinvoke <com.opengamma.analytics.financial.forex.method.ForexOptionVanillaBlackSmileMethod: com.opengamma.analytics.financial.forex.method.ForexOptionVanillaBlackSmileMethod getInstance()>();

        specialinvoke r0.<com.opengamma.analytics.financial.forex.method.ForexOptionDigitalCallSpreadMethod: void <init>(com.opengamma.analytics.financial.forex.method.ForexPricingMethod,double)>($r1, d0);

        return;
    }

    public double gammaRelative(com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital, com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle)
    {
        com.opengamma.analytics.financial.forex.method.ForexOptionDigitalCallSpreadBlackMethod r0;
        com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital r1;
        com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle r2;
        com.opengamma.util.money.CurrencyAmount r3;
        double $d0, $d1, $d2, $d3;
        com.opengamma.analytics.financial.forex.derivative.Forex $r4;
        com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed $r5;

        r0 := @this: com.opengamma.analytics.financial.forex.method.ForexOptionDigitalCallSpreadBlackMethod;

        r1 := @parameter0: com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital;

        r2 := @parameter1: com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle;

        r3 = virtualinvoke r0.<com.opengamma.analytics.financial.forex.method.ForexOptionDigitalCallSpreadBlackMethod: com.opengamma.util.money.CurrencyAmount gamma(com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital,com.opengamma.analytics.financial.interestrate.YieldCurveBundle)>(r1, r2);

        $d0 = virtualinvoke r3.<com.opengamma.util.money.CurrencyAmount: double getAmount()>();

        $r4 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        $r5 = virtualinvoke $r4.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed getPaymentCurrency2()>();

        $d1 = virtualinvoke $r5.<com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed: double getAmount()>();

        $d2 = staticinvoke <java.lang.Math: double abs(double)>($d1);

        $d3 = $d0 / $d2;

        return $d3;
    }

    public com.opengamma.util.money.CurrencyAmount gamma(com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital, com.opengamma.analytics.financial.interestrate.YieldCurveBundle)
    {
        com.opengamma.analytics.financial.forex.method.ForexOptionDigitalCallSpreadBlackMethod r0;
        com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital r1;
        com.opengamma.analytics.financial.interestrate.YieldCurveBundle r2;
        com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle r3;
        com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla[] r4;
        com.opengamma.util.money.CurrencyAmount r5, r6, $r16;
        boolean $z0, $z1, $z2, $z3;
        com.opengamma.util.money.Currency $r8, $r9;
        double $d0;
        com.opengamma.analytics.financial.forex.method.ForexPricingMethod $r10, $r13;
        com.opengamma.analytics.financial.forex.method.ForexOptionVanillaBlackSmileMethod $r11, $r14;
        com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla $r12, $r15;

        r0 := @this: com.opengamma.analytics.financial.forex.method.ForexOptionDigitalCallSpreadBlackMethod;

        r1 := @parameter0: com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital;

        r2 := @parameter1: com.opengamma.analytics.financial.interestrate.YieldCurveBundle;

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object,java.lang.String)>(r1, "Forex option");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, "Curves");

        $z0 = r2 instanceof com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z0, "Yield curve bundle should contain smile data");

        r3 = (com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle) r2;

        $r8 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: com.opengamma.util.money.Currency getCurrency1()>();

        $r9 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: com.opengamma.util.money.Currency getCurrency2()>();

        $z1 = virtualinvoke r3.<com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle: boolean checkCurrencies(com.opengamma.util.money.Currency,com.opengamma.util.money.Currency)>($r8, $r9);

        staticinvoke <org.apache.commons.lang.Validate: void isTrue(boolean,java.lang.String)>($z1, "Option currencies not compatible with smile data");

        $d0 = virtualinvoke r0.<com.opengamma.analytics.financial.forex.method.ForexOptionDigitalCallSpreadBlackMethod: double getSpread()>();

        r4 = virtualinvoke r0.<com.opengamma.analytics.financial.forex.method.ForexOptionDigitalCallSpreadBlackMethod: com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla[] callSpread(com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital,double)>(r1, $d0);

        $r10 = virtualinvoke r0.<com.opengamma.analytics.financial.forex.method.ForexOptionDigitalCallSpreadBlackMethod: com.opengamma.analytics.financial.forex.method.ForexPricingMethod getBaseMethod()>();

        $r11 = (com.opengamma.analytics.financial.forex.method.ForexOptionVanillaBlackSmileMethod) $r10;

        $r12 = r4[0];

        $z2 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: boolean payDomestic()>();

        r5 = virtualinvoke $r11.<com.opengamma.analytics.financial.forex.method.ForexOptionVanillaBlackSmileMethod: com.opengamma.util.money.CurrencyAmount gamma(com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla,com.opengamma.analytics.financial.interestrate.YieldCurveBundle,boolean)>($r12, r3, $z2);

        $r13 = virtualinvoke r0.<com.opengamma.analytics.financial.forex.method.ForexOptionDigitalCallSpreadBlackMethod: com.opengamma.analytics.financial.forex.method.ForexPricingMethod getBaseMethod()>();

        $r14 = (com.opengamma.analytics.financial.forex.method.ForexOptionVanillaBlackSmileMethod) $r13;

        $r15 = r4[1];

        $z3 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: boolean payDomestic()>();

        r6 = virtualinvoke $r14.<com.opengamma.analytics.financial.forex.method.ForexOptionVanillaBlackSmileMethod: com.opengamma.util.money.CurrencyAmount gamma(com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla,com.opengamma.analytics.financial.interestrate.YieldCurveBundle,boolean)>($r15, r3, $z3);

        $r16 = virtualinvoke r5.<com.opengamma.util.money.CurrencyAmount: com.opengamma.util.money.CurrencyAmount plus(com.opengamma.util.money.CurrencyAmount)>(r6);

        return $r16;
    }

    public com.opengamma.util.money.CurrencyAmount gammaSpot(com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital, com.opengamma.analytics.financial.interestrate.YieldCurveBundle)
    {
        com.opengamma.analytics.financial.forex.method.ForexOptionDigitalCallSpreadBlackMethod r0;
        com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital r1;
        com.opengamma.analytics.financial.interestrate.YieldCurveBundle r2;
        com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle r3;
        com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla[] r4;
        com.opengamma.util.money.CurrencyAmount r5, r6, $r16;
        boolean $z0, $z1, $z2, $z3;
        com.opengamma.util.money.Currency $r8, $r9;
        double $d0;
        com.opengamma.analytics.financial.forex.method.ForexPricingMethod $r10, $r13;
        com.opengamma.analytics.financial.forex.method.ForexOptionVanillaBlackSmileMethod $r11, $r14;
        com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla $r12, $r15;

        r0 := @this: com.opengamma.analytics.financial.forex.method.ForexOptionDigitalCallSpreadBlackMethod;

        r1 := @parameter0: com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital;

        r2 := @parameter1: com.opengamma.analytics.financial.interestrate.YieldCurveBundle;

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object,java.lang.String)>(r1, "Forex option");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, "Curves");

        $z0 = r2 instanceof com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z0, "Yield curve bundle should contain smile data");

        r3 = (com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle) r2;

        $r8 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: com.opengamma.util.money.Currency getCurrency1()>();

        $r9 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: com.opengamma.util.money.Currency getCurrency2()>();

        $z1 = virtualinvoke r3.<com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle: boolean checkCurrencies(com.opengamma.util.money.Currency,com.opengamma.util.money.Currency)>($r8, $r9);

        staticinvoke <org.apache.commons.lang.Validate: void isTrue(boolean,java.lang.String)>($z1, "Option currencies not compatible with smile data");

        $d0 = virtualinvoke r0.<com.opengamma.analytics.financial.forex.method.ForexOptionDigitalCallSpreadBlackMethod: double getSpread()>();

        r4 = virtualinvoke r0.<com.opengamma.analytics.financial.forex.method.ForexOptionDigitalCallSpreadBlackMethod: com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla[] callSpread(com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital,double)>(r1, $d0);

        $r10 = virtualinvoke r0.<com.opengamma.analytics.financial.forex.method.ForexOptionDigitalCallSpreadBlackMethod: com.opengamma.analytics.financial.forex.method.ForexPricingMethod getBaseMethod()>();

        $r11 = (com.opengamma.analytics.financial.forex.method.ForexOptionVanillaBlackSmileMethod) $r10;

        $r12 = r4[0];

        $z2 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: boolean payDomestic()>();

        r5 = virtualinvoke $r11.<com.opengamma.analytics.financial.forex.method.ForexOptionVanillaBlackSmileMethod: com.opengamma.util.money.CurrencyAmount gammaSpot(com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla,com.opengamma.analytics.financial.interestrate.YieldCurveBundle,boolean)>($r12, r3, $z2);

        $r13 = virtualinvoke r0.<com.opengamma.analytics.financial.forex.method.ForexOptionDigitalCallSpreadBlackMethod: com.opengamma.analytics.financial.forex.method.ForexPricingMethod getBaseMethod()>();

        $r14 = (com.opengamma.analytics.financial.forex.method.ForexOptionVanillaBlackSmileMethod) $r13;

        $r15 = r4[1];

        $z3 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: boolean payDomestic()>();

        r6 = virtualinvoke $r14.<com.opengamma.analytics.financial.forex.method.ForexOptionVanillaBlackSmileMethod: com.opengamma.util.money.CurrencyAmount gammaSpot(com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla,com.opengamma.analytics.financial.interestrate.YieldCurveBundle,boolean)>($r15, r3, $z3);

        $r16 = virtualinvoke r5.<com.opengamma.util.money.CurrencyAmount: com.opengamma.util.money.CurrencyAmount plus(com.opengamma.util.money.CurrencyAmount)>(r6);

        return $r16;
    }

    public com.opengamma.analytics.financial.forex.method.PresentValueForexBlackVolatilitySensitivity presentValueBlackVolatilitySensitivity(com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital, com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle)
    {
        com.opengamma.analytics.financial.forex.method.ForexOptionDigitalCallSpreadBlackMethod r0;
        com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital r1;
        com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle r2;
        com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla[] r3;
        com.opengamma.analytics.financial.forex.method.PresentValueForexBlackVolatilitySensitivity r4, r5, $r14;
        com.opengamma.util.money.Currency $r6, $r7;
        boolean $z0;
        double $d0;
        com.opengamma.analytics.financial.forex.method.ForexPricingMethod $r8, $r11;
        com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla $r9, $r12;
        com.opengamma.analytics.financial.forex.method.ForexOptionVanillaBlackSmileMethod $r10, $r13;

        r0 := @this: com.opengamma.analytics.financial.forex.method.ForexOptionDigitalCallSpreadBlackMethod;

        r1 := @parameter0: com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital;

        r2 := @parameter1: com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle;

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object,java.lang.String)>(r1, "Forex option difital");

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object,java.lang.String)>(r2, "Curve and smile data");

        $r6 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: com.opengamma.util.money.Currency getCurrency1()>();

        $r7 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: com.opengamma.util.money.Currency getCurrency2()>();

        $z0 = virtualinvoke r2.<com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle: boolean checkCurrencies(com.opengamma.util.money.Currency,com.opengamma.util.money.Currency)>($r6, $r7);

        staticinvoke <org.apache.commons.lang.Validate: void isTrue(boolean,java.lang.String)>($z0, "Option currencies not compatible with smile data");

        $d0 = virtualinvoke r0.<com.opengamma.analytics.financial.forex.method.ForexOptionDigitalCallSpreadBlackMethod: double getSpread()>();

        r3 = virtualinvoke r0.<com.opengamma.analytics.financial.forex.method.ForexOptionDigitalCallSpreadBlackMethod: com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla[] callSpread(com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital,double)>(r1, $d0);

        $r8 = virtualinvoke r0.<com.opengamma.analytics.financial.forex.method.ForexOptionDigitalCallSpreadBlackMethod: com.opengamma.analytics.financial.forex.method.ForexPricingMethod getBaseMethod()>();

        $r10 = (com.opengamma.analytics.financial.forex.method.ForexOptionVanillaBlackSmileMethod) $r8;

        $r9 = r3[0];

        r4 = virtualinvoke $r10.<com.opengamma.analytics.financial.forex.method.ForexOptionVanillaBlackSmileMethod: com.opengamma.analytics.financial.forex.method.PresentValueForexBlackVolatilitySensitivity presentValueBlackVolatilitySensitivity(com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla,com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle)>($r9, r2);

        $r11 = virtualinvoke r0.<com.opengamma.analytics.financial.forex.method.ForexOptionDigitalCallSpreadBlackMethod: com.opengamma.analytics.financial.forex.method.ForexPricingMethod getBaseMethod()>();

        $r13 = (com.opengamma.analytics.financial.forex.method.ForexOptionVanillaBlackSmileMethod) $r11;

        $r12 = r3[1];

        r5 = virtualinvoke $r13.<com.opengamma.analytics.financial.forex.method.ForexOptionVanillaBlackSmileMethod: com.opengamma.analytics.financial.forex.method.PresentValueForexBlackVolatilitySensitivity presentValueBlackVolatilitySensitivity(com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla,com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle)>($r12, r2);

        $r14 = virtualinvoke r4.<com.opengamma.analytics.financial.forex.method.PresentValueForexBlackVolatilitySensitivity: com.opengamma.analytics.financial.forex.method.PresentValueForexBlackVolatilitySensitivity plus(com.opengamma.analytics.financial.forex.method.PresentValueForexBlackVolatilitySensitivity)>(r5);

        return $r14;
    }

    public com.opengamma.analytics.financial.forex.method.PresentValueForexBlackVolatilitySensitivity presentValueBlackVolatilitySensitivity(com.opengamma.analytics.financial.interestrate.InstrumentDerivative, com.opengamma.analytics.financial.interestrate.YieldCurveBundle)
    {
        com.opengamma.analytics.financial.forex.method.ForexOptionDigitalCallSpreadBlackMethod r0;
        com.opengamma.analytics.financial.interestrate.InstrumentDerivative r1;
        com.opengamma.analytics.financial.interestrate.YieldCurveBundle r2;
        boolean $z0, $z1;
        com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle $r3;
        com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital $r4;
        com.opengamma.analytics.financial.forex.method.PresentValueForexBlackVolatilitySensitivity $r5;

        r0 := @this: com.opengamma.analytics.financial.forex.method.ForexOptionDigitalCallSpreadBlackMethod;

        r1 := @parameter0: com.opengamma.analytics.financial.interestrate.InstrumentDerivative;

        r2 := @parameter1: com.opengamma.analytics.financial.interestrate.YieldCurveBundle;

        $z0 = r1 instanceof com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital;

        staticinvoke <org.apache.commons.lang.Validate: void isTrue(boolean,java.lang.String)>($z0, "Digital Forex option");

        $z1 = r2 instanceof com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle;

        staticinvoke <org.apache.commons.lang.Validate: void isTrue(boolean,java.lang.String)>($z1, "Smile delta data bundle required");

        $r4 = (com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital) r1;

        $r3 = (com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle) r2;

        $r5 = virtualinvoke r0.<com.opengamma.analytics.financial.forex.method.ForexOptionDigitalCallSpreadBlackMethod: com.opengamma.analytics.financial.forex.method.PresentValueForexBlackVolatilitySensitivity presentValueBlackVolatilitySensitivity(com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital,com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle)>($r4, $r3);

        return $r5;
    }

    public com.opengamma.analytics.financial.forex.method.PresentValueForexBlackVolatilityNodeSensitivityDataBundle presentValueBlackVolatilityNodeSensitivity(com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital, com.opengamma.analytics.financial.interestrate.YieldCurveBundle)
    {
        com.opengamma.analytics.financial.forex.method.ForexOptionDigitalCallSpreadBlackMethod r0;
        com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital r1;
        com.opengamma.analytics.financial.interestrate.YieldCurveBundle r2;
        com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle r3;
        com.opengamma.analytics.financial.forex.method.PresentValueForexBlackVolatilitySensitivity r4;
        double d0, d1, d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13;
        com.opengamma.analytics.financial.model.volatility.surface.SmileDeltaTermStructureParametersStrikeInterpolation r5;
        double[][] r6, r10;
        java.util.Iterator r7;
        com.opengamma.util.tuple.DoublesPair r8;
        com.opengamma.analytics.financial.model.volatility.VolatilityAndBucketedSensitivities r9;
        boolean $z0, $z1, $z2;
        com.opengamma.util.money.Currency $r11, $r12, $r19, $r20, $r32, $r34, $r41, $r42;
        com.opengamma.analytics.financial.forex.derivative.Forex $r13, $r17, $r21, $r25, $r31, $r33;
        com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed $r14, $r22;
        java.lang.String $r15, $r23;
        com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve $r16, $r24;
        com.opengamma.analytics.financial.forex.method.FXMatrix $r18;
        com.opengamma.analytics.financial.model.volatility.VolatilityModel $r26;
        int $i0, $i1, $i2, $i3, i4, i5;
        com.opengamma.analytics.util.amount.SurfaceValue $r27, $r45;
        java.util.HashMap $r28, $r46;
        java.util.Set $r29;
        com.opengamma.analytics.financial.forex.method.PresentValueForexBlackVolatilityNodeSensitivityDataBundle $r30;
        com.opengamma.analytics.math.matrix.DoubleMatrix1D $r35, $r37;
        double[] $r36, $r38, $r43, $r44;
        com.opengamma.analytics.math.matrix.DoubleMatrix2D $r39;
        java.lang.Object $r40, $r47;
        java.lang.Double $r48;

        r0 := @this: com.opengamma.analytics.financial.forex.method.ForexOptionDigitalCallSpreadBlackMethod;

        r1 := @parameter0: com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital;

        r2 := @parameter1: com.opengamma.analytics.financial.interestrate.YieldCurveBundle;

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object,java.lang.String)>(r1, "Forex option");

        $z0 = r2 instanceof com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z0, "Yield curve bundle should contain smile data");

        r3 = (com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle) r2;

        $r11 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: com.opengamma.util.money.Currency getCurrency1()>();

        $r12 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: com.opengamma.util.money.Currency getCurrency2()>();

        $z1 = virtualinvoke r3.<com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle: boolean checkCurrencies(com.opengamma.util.money.Currency,com.opengamma.util.money.Currency)>($r11, $r12);

        staticinvoke <org.apache.commons.lang.Validate: void isTrue(boolean,java.lang.String)>($z1, "Option currencies not compatible with smile data");

        r4 = virtualinvoke r0.<com.opengamma.analytics.financial.forex.method.ForexOptionDigitalCallSpreadBlackMethod: com.opengamma.analytics.financial.forex.method.PresentValueForexBlackVolatilitySensitivity presentValueBlackVolatilitySensitivity(com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital,com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle)>(r1, r3);

        $r13 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        $r14 = virtualinvoke $r13.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed getPaymentCurrency2()>();

        $r15 = virtualinvoke $r14.<com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed: java.lang.String getFundingCurveName()>();

        $r16 = virtualinvoke r3.<com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle: com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve getCurve(java.lang.String)>($r15);

        $r17 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        $d3 = virtualinvoke $r17.<com.opengamma.analytics.financial.forex.derivative.Forex: double getPaymentTime()>();

        d0 = virtualinvoke $r16.<com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve: double getDiscountFactor(double)>($d3);

        $r18 = virtualinvoke r3.<com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle: com.opengamma.analytics.financial.forex.method.FXMatrix getFxRates()>();

        $r19 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: com.opengamma.util.money.Currency getCurrency1()>();

        $r20 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: com.opengamma.util.money.Currency getCurrency2()>();

        d1 = virtualinvoke $r18.<com.opengamma.analytics.financial.forex.method.FXMatrix: double getFxRate(com.opengamma.util.money.Currency,com.opengamma.util.money.Currency)>($r19, $r20);

        $r21 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        $r22 = virtualinvoke $r21.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed getPaymentCurrency1()>();

        $r23 = virtualinvoke $r22.<com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed: java.lang.String getFundingCurveName()>();

        $r24 = virtualinvoke r3.<com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle: com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve getCurve(java.lang.String)>($r23);

        $r25 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        $d4 = virtualinvoke $r25.<com.opengamma.analytics.financial.forex.derivative.Forex: double getPaymentTime()>();

        $d5 = virtualinvoke $r24.<com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve: double getDiscountFactor(double)>($d4);

        $d6 = d1 * $d5;

        d2 = $d6 / d0;

        $r26 = virtualinvoke r3.<com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle: com.opengamma.analytics.financial.model.volatility.VolatilityModel getVolatilityModel()>();

        r5 = (com.opengamma.analytics.financial.model.volatility.surface.SmileDeltaTermStructureParametersStrikeInterpolation) $r26;

        $i0 = virtualinvoke r5.<com.opengamma.analytics.financial.model.volatility.surface.SmileDeltaTermStructureParametersStrikeInterpolation: int getNumberExpiration()>();

        $i1 = virtualinvoke r5.<com.opengamma.analytics.financial.model.volatility.surface.SmileDeltaTermStructureParametersStrikeInterpolation: int getNumberStrike()>();

        r6 = newmultiarray (double)[$i0][$i1];

        $r27 = virtualinvoke r4.<com.opengamma.analytics.financial.forex.method.PresentValueForexBlackVolatilitySensitivity: com.opengamma.analytics.util.amount.SurfaceValue getVega()>();

        $r28 = virtualinvoke $r27.<com.opengamma.analytics.util.amount.SurfaceValue: java.util.HashMap getMap()>();

        $r29 = virtualinvoke $r28.<java.util.HashMap: java.util.Set keySet()>();

        r7 = interfaceinvoke $r29.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z2 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label6;

        $r40 = interfaceinvoke r7.<java.util.Iterator: java.lang.Object next()>();

        r8 = (com.opengamma.util.tuple.DoublesPair) $r40;

        $r41 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: com.opengamma.util.money.Currency getCurrency1()>();

        $r42 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: com.opengamma.util.money.Currency getCurrency2()>();

        $d7 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: double getExpirationTime()>();

        $d8 = r8.<com.opengamma.util.tuple.DoublesPair: double second>;

        r9 = staticinvoke <com.opengamma.analytics.financial.forex.method.FXVolatilityUtils: com.opengamma.analytics.financial.model.volatility.VolatilityAndBucketedSensitivities getVolatilityAndSensitivities(com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle,com.opengamma.util.money.Currency,com.opengamma.util.money.Currency,double,double,double)>(r3, $r41, $r42, $d7, $d8, d2);

        r10 = virtualinvoke r9.<com.opengamma.analytics.financial.model.volatility.VolatilityAndBucketedSensitivities: double[][] getBucketedSensitivities()>();

        i4 = 0;

     label2:
        $i2 = virtualinvoke r5.<com.opengamma.analytics.financial.model.volatility.surface.SmileDeltaTermStructureParametersStrikeInterpolation: int getNumberExpiration()>();

        if i4 >= $i2 goto label5;

        i5 = 0;

     label3:
        $i3 = virtualinvoke r5.<com.opengamma.analytics.financial.model.volatility.surface.SmileDeltaTermStructureParametersStrikeInterpolation: int getNumberStrike()>();

        if i5 >= $i3 goto label4;

        $r43 = r6[i4];

        $d9 = $r43[i5];

        $r44 = r10[i4];

        $d10 = $r44[i5];

        $r45 = virtualinvoke r4.<com.opengamma.analytics.financial.forex.method.PresentValueForexBlackVolatilitySensitivity: com.opengamma.analytics.util.amount.SurfaceValue getVega()>();

        $r46 = virtualinvoke $r45.<com.opengamma.analytics.util.amount.SurfaceValue: java.util.HashMap getMap()>();

        $r47 = virtualinvoke $r46.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r8);

        $r48 = (java.lang.Double) $r47;

        $d11 = virtualinvoke $r48.<java.lang.Double: double doubleValue()>();

        $d12 = $d10 * $d11;

        $d13 = $d9 + $d12;

        $r43[i5] = $d13;

        i5 = i5 + 1;

        goto label3;

     label4:
        i4 = i4 + 1;

        goto label2;

     label5:
        goto label1;

     label6:
        $r30 = new com.opengamma.analytics.financial.forex.method.PresentValueForexBlackVolatilityNodeSensitivityDataBundle;

        $r31 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        $r32 = virtualinvoke $r31.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.util.money.Currency getCurrency1()>();

        $r33 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionDigital: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        $r34 = virtualinvoke $r33.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.util.money.Currency getCurrency2()>();

        $r35 = new com.opengamma.analytics.math.matrix.DoubleMatrix1D;

        $r36 = virtualinvoke r5.<com.opengamma.analytics.financial.model.volatility.surface.SmileDeltaTermStructureParametersStrikeInterpolation: double[] getTimeToExpiration()>();

        specialinvoke $r35.<com.opengamma.analytics.math.matrix.DoubleMatrix1D: void <init>(double[])>($r36);

        $r37 = new com.opengamma.analytics.math.matrix.DoubleMatrix1D;

        $r38 = virtualinvoke r5.<com.opengamma.analytics.financial.model.volatility.surface.SmileDeltaTermStructureParametersStrikeInterpolation: double[] getDeltaFull()>();

        specialinvoke $r37.<com.opengamma.analytics.math.matrix.DoubleMatrix1D: void <init>(double[])>($r38);

        $r39 = new com.opengamma.analytics.math.matrix.DoubleMatrix2D;

        specialinvoke $r39.<com.opengamma.analytics.math.matrix.DoubleMatrix2D: void <init>(double[][])>(r6);

        specialinvoke $r30.<com.opengamma.analytics.financial.forex.method.PresentValueForexBlackVolatilityNodeSensitivityDataBundle: void <init>(com.opengamma.util.money.Currency,com.opengamma.util.money.Currency,com.opengamma.analytics.math.matrix.DoubleMatrix1D,com.opengamma.analytics.math.matrix.DoubleMatrix1D,com.opengamma.analytics.math.matrix.DoubleMatrix2D)>($r32, $r34, $r35, $r37, $r39);

        return $r30;
    }
}
