public abstract class com.opengamma.analytics.financial.provider.method.CalibrationEngineWithCalculators extends com.opengamma.analytics.financial.provider.method.CalibrationEngineWithPrices
{
    private final java.util.List _calculators;
    private final com.opengamma.analytics.financial.forex.method.FXMatrix _fxMatrix;
    private final com.opengamma.util.money.Currency _ccy;

    public void <init>(com.opengamma.analytics.financial.forex.method.FXMatrix, com.opengamma.util.money.Currency)
    {
        com.opengamma.analytics.financial.provider.method.CalibrationEngineWithCalculators r0;
        com.opengamma.analytics.financial.forex.method.FXMatrix r1;
        com.opengamma.util.money.Currency r2;
        java.util.ArrayList $r3;

        r0 := @this: com.opengamma.analytics.financial.provider.method.CalibrationEngineWithCalculators;

        r1 := @parameter0: com.opengamma.analytics.financial.forex.method.FXMatrix;

        r2 := @parameter1: com.opengamma.util.money.Currency;

        specialinvoke r0.<com.opengamma.analytics.financial.provider.method.CalibrationEngineWithPrices: void <init>(com.opengamma.analytics.financial.forex.method.FXMatrix,com.opengamma.util.money.Currency)>(r1, r2);

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        r0.<com.opengamma.analytics.financial.provider.method.CalibrationEngineWithCalculators: java.util.List _calculators> = $r3;

        r0.<com.opengamma.analytics.financial.provider.method.CalibrationEngineWithCalculators: com.opengamma.analytics.financial.forex.method.FXMatrix _fxMatrix> = r1;

        r0.<com.opengamma.analytics.financial.provider.method.CalibrationEngineWithCalculators: com.opengamma.util.money.Currency _ccy> = r2;

        return;
    }

    public void computeCalibrationPrice(com.opengamma.analytics.financial.provider.description.interestrate.ParameterProviderInterface)
    {
        com.opengamma.analytics.financial.provider.method.CalibrationEngineWithCalculators r0;
        com.opengamma.analytics.financial.provider.description.interestrate.ParameterProviderInterface r1;
        int i0, i1;
        com.opengamma.util.money.MultipleCurrencyAmount r2;
        double d0;
        java.util.List $r3, $r4, $r6, $r14;
        java.lang.Object $r5, $r8, $r10;
        com.opengamma.analytics.financial.interestrate.InstrumentDerivative $r7;
        com.opengamma.analytics.financial.interestrate.InstrumentDerivativeVisitor $r9;
        com.opengamma.util.money.Currency $r11;
        com.opengamma.analytics.financial.forex.method.FXMatrix $r12;
        com.opengamma.util.money.CurrencyAmount $r13;
        java.lang.Double $r15;

        r0 := @this: com.opengamma.analytics.financial.provider.method.CalibrationEngineWithCalculators;

        r1 := @parameter0: com.opengamma.analytics.financial.provider.description.interestrate.ParameterProviderInterface;

        $r3 = virtualinvoke r0.<com.opengamma.analytics.financial.provider.method.CalibrationEngineWithCalculators: java.util.List getBasket()>();

        i0 = interfaceinvoke $r3.<java.util.List: int size()>();

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        $r4 = virtualinvoke r0.<com.opengamma.analytics.financial.provider.method.CalibrationEngineWithCalculators: java.util.List getBasket()>();

        $r5 = interfaceinvoke $r4.<java.util.List: java.lang.Object get(int)>(i1);

        $r7 = (com.opengamma.analytics.financial.interestrate.InstrumentDerivative) $r5;

        $r6 = r0.<com.opengamma.analytics.financial.provider.method.CalibrationEngineWithCalculators: java.util.List _calculators>;

        $r8 = interfaceinvoke $r6.<java.util.List: java.lang.Object get(int)>(i1);

        $r9 = (com.opengamma.analytics.financial.interestrate.InstrumentDerivativeVisitor) $r8;

        $r10 = interfaceinvoke $r7.<com.opengamma.analytics.financial.interestrate.InstrumentDerivative: java.lang.Object accept(com.opengamma.analytics.financial.interestrate.InstrumentDerivativeVisitor,java.lang.Object)>($r9, r1);

        r2 = (com.opengamma.util.money.MultipleCurrencyAmount) $r10;

        $r12 = r0.<com.opengamma.analytics.financial.provider.method.CalibrationEngineWithCalculators: com.opengamma.analytics.financial.forex.method.FXMatrix _fxMatrix>;

        $r11 = r0.<com.opengamma.analytics.financial.provider.method.CalibrationEngineWithCalculators: com.opengamma.util.money.Currency _ccy>;

        $r13 = virtualinvoke $r12.<com.opengamma.analytics.financial.forex.method.FXMatrix: com.opengamma.util.money.CurrencyAmount convert(com.opengamma.util.money.MultipleCurrencyAmount,com.opengamma.util.money.Currency)>(r2, $r11);

        d0 = virtualinvoke $r13.<com.opengamma.util.money.CurrencyAmount: double getAmount()>();

        $r14 = virtualinvoke r0.<com.opengamma.analytics.financial.provider.method.CalibrationEngineWithCalculators: java.util.List getCalibrationPrices()>();

        $r15 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d0);

        interfaceinvoke $r14.<java.util.List: java.lang.Object set(int,java.lang.Object)>(i1, $r15);

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    public void addInstrument(com.opengamma.analytics.financial.interestrate.InstrumentDerivative, com.opengamma.analytics.financial.interestrate.InstrumentDerivativeVisitor)
    {
        com.opengamma.analytics.financial.provider.method.CalibrationEngineWithCalculators r0;
        com.opengamma.analytics.financial.interestrate.InstrumentDerivative r1;
        com.opengamma.analytics.financial.interestrate.InstrumentDerivativeVisitor r2;
        java.util.List $r3, $r4, $r5;
        java.lang.Double $r6;

        r0 := @this: com.opengamma.analytics.financial.provider.method.CalibrationEngineWithCalculators;

        r1 := @parameter0: com.opengamma.analytics.financial.interestrate.InstrumentDerivative;

        r2 := @parameter1: com.opengamma.analytics.financial.interestrate.InstrumentDerivativeVisitor;

        $r3 = virtualinvoke r0.<com.opengamma.analytics.financial.provider.method.CalibrationEngineWithCalculators: java.util.List getBasket()>();

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>(r1);

        $r4 = r0.<com.opengamma.analytics.financial.provider.method.CalibrationEngineWithCalculators: java.util.List _calculators>;

        interfaceinvoke $r4.<java.util.List: boolean add(java.lang.Object)>(r2);

        $r5 = virtualinvoke r0.<com.opengamma.analytics.financial.provider.method.CalibrationEngineWithCalculators: java.util.List getCalibrationPrices()>();

        $r6 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(0.0);

        interfaceinvoke $r5.<java.util.List: boolean add(java.lang.Object)>($r6);

        return;
    }

    public void addInstrument(com.opengamma.analytics.financial.interestrate.InstrumentDerivative[], com.opengamma.analytics.financial.interestrate.InstrumentDerivativeVisitor)
    {
        com.opengamma.analytics.financial.provider.method.CalibrationEngineWithCalculators r0;
        com.opengamma.analytics.financial.interestrate.InstrumentDerivative[] r1;
        com.opengamma.analytics.financial.interestrate.InstrumentDerivativeVisitor r2;
        int i0, i1;
        com.opengamma.analytics.financial.interestrate.InstrumentDerivative r4;

        r0 := @this: com.opengamma.analytics.financial.provider.method.CalibrationEngineWithCalculators;

        r1 := @parameter0: com.opengamma.analytics.financial.interestrate.InstrumentDerivative[];

        r2 := @parameter1: com.opengamma.analytics.financial.interestrate.InstrumentDerivativeVisitor;

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object,java.lang.String)>(r1, "Instrument");

        i0 = lengthof r1;

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        r4 = r1[i1];

        virtualinvoke r0.<com.opengamma.analytics.financial.provider.method.CalibrationEngineWithCalculators: void addInstrument(com.opengamma.analytics.financial.interestrate.InstrumentDerivative,com.opengamma.analytics.financial.interestrate.InstrumentDerivativeVisitor)>(r4, r2);

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    public java.util.List getMethod()
    {
        com.opengamma.analytics.financial.provider.method.CalibrationEngineWithCalculators r0;
        java.util.List $r1;

        r0 := @this: com.opengamma.analytics.financial.provider.method.CalibrationEngineWithCalculators;

        $r1 = r0.<com.opengamma.analytics.financial.provider.method.CalibrationEngineWithCalculators: java.util.List _calculators>;

        return $r1;
    }
}
