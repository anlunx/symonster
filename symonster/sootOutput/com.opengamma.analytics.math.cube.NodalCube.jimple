public class com.opengamma.analytics.math.cube.NodalCube extends com.opengamma.analytics.math.cube.Cube
{
    private final java.lang.Object[] _xData;
    private final java.lang.Object[] _yData;
    private final java.lang.Object[] _zData;
    private final java.lang.Object[] _vData;
    private final java.lang.String _name;

    public void <init>(java.util.Collection, java.lang.String)
    {
        com.opengamma.analytics.math.cube.NodalCube r0;
        java.util.Collection r1;
        java.lang.String r2;
        java.util.ArrayList r3, r4, r5, r6;
        java.util.Iterator r7;
        com.opengamma.util.tuple.Quadruple r8;
        boolean $z0;
        java.lang.Object[] $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16;
        java.lang.Object $r17, $r18, $r19, $r20, $r21;

        r0 := @this: com.opengamma.analytics.math.cube.NodalCube;

        r1 := @parameter0: java.util.Collection;

        r2 := @parameter1: java.lang.String;

        specialinvoke r0.<com.opengamma.analytics.math.cube.Cube: void <init>()>();

        r3 = staticinvoke <com.google.common.collect.Lists: java.util.ArrayList newArrayList()>();

        r4 = staticinvoke <com.google.common.collect.Lists: java.util.ArrayList newArrayList()>();

        r5 = staticinvoke <com.google.common.collect.Lists: java.util.ArrayList newArrayList()>();

        r6 = staticinvoke <com.google.common.collect.Lists: java.util.ArrayList newArrayList()>();

        r7 = interfaceinvoke r1.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r17 = interfaceinvoke r7.<java.util.Iterator: java.lang.Object next()>();

        r8 = (com.opengamma.util.tuple.Quadruple) $r17;

        $r18 = virtualinvoke r8.<com.opengamma.util.tuple.Quadruple: java.lang.Object getFirst()>();

        interfaceinvoke r3.<java.util.List: boolean add(java.lang.Object)>($r18);

        $r19 = virtualinvoke r8.<com.opengamma.util.tuple.Quadruple: java.lang.Object getSecond()>();

        interfaceinvoke r4.<java.util.List: boolean add(java.lang.Object)>($r19);

        $r20 = virtualinvoke r8.<com.opengamma.util.tuple.Quadruple: java.lang.Object getThird()>();

        interfaceinvoke r5.<java.util.List: boolean add(java.lang.Object)>($r20);

        $r21 = virtualinvoke r8.<com.opengamma.util.tuple.Quadruple: java.lang.Object getFourth()>();

        interfaceinvoke r6.<java.util.List: boolean add(java.lang.Object)>($r21);

        goto label1;

     label2:
        $r9 = interfaceinvoke r3.<java.util.List: java.lang.Object[] toArray()>();

        $r10 = (java.lang.Object[]) $r9;

        r0.<com.opengamma.analytics.math.cube.NodalCube: java.lang.Object[] _xData> = $r10;

        $r11 = interfaceinvoke r4.<java.util.List: java.lang.Object[] toArray()>();

        $r12 = (java.lang.Object[]) $r11;

        r0.<com.opengamma.analytics.math.cube.NodalCube: java.lang.Object[] _yData> = $r12;

        $r13 = interfaceinvoke r5.<java.util.List: java.lang.Object[] toArray()>();

        $r14 = (java.lang.Object[]) $r13;

        r0.<com.opengamma.analytics.math.cube.NodalCube: java.lang.Object[] _zData> = $r14;

        $r15 = interfaceinvoke r6.<java.util.List: java.lang.Object[] toArray()>();

        $r16 = (java.lang.Object[]) $r15;

        r0.<com.opengamma.analytics.math.cube.NodalCube: java.lang.Object[] _vData> = $r16;

        r0.<com.opengamma.analytics.math.cube.NodalCube: java.lang.String _name> = r2;

        return;
    }

    public static com.opengamma.analytics.math.cube.NodalCube 'from'(java.lang.Object[], java.lang.Object[], java.lang.Object[], java.lang.Object[])
    {
        java.lang.Object[] r0, r1, r2, r3;
        com.opengamma.analytics.math.cube.NodalCube $r4;

        r0 := @parameter0: java.lang.Object[];

        r1 := @parameter1: java.lang.Object[];

        r2 := @parameter2: java.lang.Object[];

        r3 := @parameter3: java.lang.Object[];

        $r4 = new com.opengamma.analytics.math.cube.NodalCube;

        specialinvoke $r4.<com.opengamma.analytics.math.cube.NodalCube: void <init>(java.lang.Object[],java.lang.Object[],java.lang.Object[],java.lang.Object[])>(r0, r1, r2, r3);

        return $r4;
    }

    public static com.opengamma.analytics.math.cube.NodalCube 'from'(java.util.List, java.util.List, java.util.List, java.util.List)
    {
        java.util.List r0, r1, r2, r3;
        com.opengamma.analytics.math.cube.NodalCube $r4;

        r0 := @parameter0: java.util.List;

        r1 := @parameter1: java.util.List;

        r2 := @parameter2: java.util.List;

        r3 := @parameter3: java.util.List;

        $r4 = new com.opengamma.analytics.math.cube.NodalCube;

        specialinvoke $r4.<com.opengamma.analytics.math.cube.NodalCube: void <init>(java.util.List,java.util.List,java.util.List,java.util.List)>(r0, r1, r2, r3);

        return $r4;
    }

    public static com.opengamma.analytics.math.cube.NodalCube 'from'(java.lang.Object[], java.lang.Object[], java.lang.Object[], java.lang.Object[], java.lang.String)
    {
        java.lang.Object[] r0, r1, r2, r3;
        java.lang.String r4;
        com.opengamma.analytics.math.cube.NodalCube $r5;

        r0 := @parameter0: java.lang.Object[];

        r1 := @parameter1: java.lang.Object[];

        r2 := @parameter2: java.lang.Object[];

        r3 := @parameter3: java.lang.Object[];

        r4 := @parameter4: java.lang.String;

        $r5 = new com.opengamma.analytics.math.cube.NodalCube;

        specialinvoke $r5.<com.opengamma.analytics.math.cube.NodalCube: void <init>(java.lang.Object[],java.lang.Object[],java.lang.Object[],java.lang.Object[],java.lang.String)>(r0, r1, r2, r3, r4);

        return $r5;
    }

    public static com.opengamma.analytics.math.cube.NodalCube 'from'(java.util.List, java.util.List, java.util.List, java.util.List, java.lang.String)
    {
        java.util.List r0, r1, r2, r3;
        java.lang.String r4;
        com.opengamma.analytics.math.cube.NodalCube $r5;

        r0 := @parameter0: java.util.List;

        r1 := @parameter1: java.util.List;

        r2 := @parameter2: java.util.List;

        r3 := @parameter3: java.util.List;

        r4 := @parameter4: java.lang.String;

        $r5 = new com.opengamma.analytics.math.cube.NodalCube;

        specialinvoke $r5.<com.opengamma.analytics.math.cube.NodalCube: void <init>(java.util.List,java.util.List,java.util.List,java.util.List,java.lang.String)>(r0, r1, r2, r3, r4);

        return $r5;
    }

    public void <init>(java.lang.Object[], java.lang.Object[], java.lang.Object[], java.lang.Object[])
    {
        com.opengamma.analytics.math.cube.NodalCube r0;
        java.lang.Object[] r1, r2, r3, r4;

        r0 := @this: com.opengamma.analytics.math.cube.NodalCube;

        r1 := @parameter0: java.lang.Object[];

        r2 := @parameter1: java.lang.Object[];

        r3 := @parameter2: java.lang.Object[];

        r4 := @parameter3: java.lang.Object[];

        specialinvoke r0.<com.opengamma.analytics.math.cube.NodalCube: void <init>(java.lang.Object[],java.lang.Object[],java.lang.Object[],java.lang.Object[],java.lang.String)>(r1, r2, r3, r4, null);

        return;
    }

    public void <init>(java.util.List, java.util.List, java.util.List, java.util.List)
    {
        com.opengamma.analytics.math.cube.NodalCube r0;
        java.util.List r1, r2, r3, r4;

        r0 := @this: com.opengamma.analytics.math.cube.NodalCube;

        r1 := @parameter0: java.util.List;

        r2 := @parameter1: java.util.List;

        r3 := @parameter2: java.util.List;

        r4 := @parameter3: java.util.List;

        specialinvoke r0.<com.opengamma.analytics.math.cube.NodalCube: void <init>(java.util.List,java.util.List,java.util.List,java.util.List,java.lang.String)>(r1, r2, r3, r4, null);

        return;
    }

    public void <init>(java.lang.Object[], java.lang.Object[], java.lang.Object[], java.lang.Object[], java.lang.String)
    {
        com.opengamma.analytics.math.cube.NodalCube r0;
        java.lang.Object[] r1, r2, r3, r4;
        java.lang.String r5;

        r0 := @this: com.opengamma.analytics.math.cube.NodalCube;

        r1 := @parameter0: java.lang.Object[];

        r2 := @parameter1: java.lang.Object[];

        r3 := @parameter2: java.lang.Object[];

        r4 := @parameter3: java.lang.Object[];

        r5 := @parameter4: java.lang.String;

        specialinvoke r0.<com.opengamma.analytics.math.cube.Cube: void <init>()>();

        r0.<com.opengamma.analytics.math.cube.NodalCube: java.lang.Object[] _xData> = r1;

        r0.<com.opengamma.analytics.math.cube.NodalCube: java.lang.Object[] _yData> = r2;

        r0.<com.opengamma.analytics.math.cube.NodalCube: java.lang.Object[] _zData> = r3;

        r0.<com.opengamma.analytics.math.cube.NodalCube: java.lang.Object[] _vData> = r4;

        r0.<com.opengamma.analytics.math.cube.NodalCube: java.lang.String _name> = r5;

        return;
    }

    public void <init>(java.util.List, java.util.List, java.util.List, java.util.List, java.lang.String)
    {
        com.opengamma.analytics.math.cube.NodalCube r0;
        java.util.List r1, r2, r3, r4;
        java.lang.String r5;
        java.lang.Object[] $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13;

        r0 := @this: com.opengamma.analytics.math.cube.NodalCube;

        r1 := @parameter0: java.util.List;

        r2 := @parameter1: java.util.List;

        r3 := @parameter2: java.util.List;

        r4 := @parameter3: java.util.List;

        r5 := @parameter4: java.lang.String;

        specialinvoke r0.<com.opengamma.analytics.math.cube.Cube: void <init>()>();

        $r6 = interfaceinvoke r1.<java.util.List: java.lang.Object[] toArray()>();

        $r7 = (java.lang.Object[]) $r6;

        r0.<com.opengamma.analytics.math.cube.NodalCube: java.lang.Object[] _xData> = $r7;

        $r8 = interfaceinvoke r2.<java.util.List: java.lang.Object[] toArray()>();

        $r9 = (java.lang.Object[]) $r8;

        r0.<com.opengamma.analytics.math.cube.NodalCube: java.lang.Object[] _yData> = $r9;

        $r10 = interfaceinvoke r3.<java.util.List: java.lang.Object[] toArray()>();

        $r11 = (java.lang.Object[]) $r10;

        r0.<com.opengamma.analytics.math.cube.NodalCube: java.lang.Object[] _zData> = $r11;

        $r12 = interfaceinvoke r4.<java.util.List: java.lang.Object[] toArray()>();

        $r13 = (java.lang.Object[]) $r12;

        r0.<com.opengamma.analytics.math.cube.NodalCube: java.lang.Object[] _vData> = $r13;

        r0.<com.opengamma.analytics.math.cube.NodalCube: java.lang.String _name> = r5;

        return;
    }

    public java.lang.Object getValue(java.lang.Object, java.lang.Object, java.lang.Object)
    {
        com.opengamma.analytics.math.cube.NodalCube r0;
        java.lang.Object r1, r2, r3, $r17, $r18, $r19, $r21;
        java.lang.Object[] r4, r5, r6, $r20;
        int i0, i1;
        java.lang.IllegalArgumentException $r7;
        java.lang.StringBuilder $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15;
        java.lang.String $r16;
        boolean $z0, $z1, $z2;

        r0 := @this: com.opengamma.analytics.math.cube.NodalCube;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        r3 := @parameter2: java.lang.Object;

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object,java.lang.String)>(r1, "x");

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object,java.lang.String)>(r2, "y");

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object,java.lang.String)>(r2, "z");

        r4 = virtualinvoke r0.<com.opengamma.analytics.math.cube.NodalCube: java.lang.Object[] getXData()>();

        r5 = virtualinvoke r0.<com.opengamma.analytics.math.cube.NodalCube: java.lang.Object[] getYData()>();

        r6 = virtualinvoke r0.<com.opengamma.analytics.math.cube.NodalCube: java.lang.Object[] getZData()>();

        i0 = virtualinvoke r0.<com.opengamma.analytics.math.cube.NodalCube: int size()>();

        i1 = 0;

     label1:
        if i1 >= i0 goto label3;

        $r17 = r4[i1];

        $z0 = virtualinvoke $r17.<java.lang.Object: boolean equals(java.lang.Object)>(r1);

        if $z0 == 0 goto label2;

        $r18 = r5[i1];

        $z1 = virtualinvoke $r18.<java.lang.Object: boolean equals(java.lang.Object)>(r2);

        if $z1 == 0 goto label2;

        $r19 = r6[i1];

        $z2 = virtualinvoke $r19.<java.lang.Object: boolean equals(java.lang.Object)>(r3);

        if $z2 == 0 goto label2;

        $r20 = virtualinvoke r0.<com.opengamma.analytics.math.cube.NodalCube: java.lang.Object[] getValues()>();

        $r21 = $r20[i1];

        return $r21;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        $r7 = new java.lang.IllegalArgumentException;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No x-y-z data in cube for (");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r16);

        throw $r7;
    }

    public java.lang.Object getValue(com.opengamma.util.tuple.Triple)
    {
        com.opengamma.analytics.math.cube.NodalCube r0;
        com.opengamma.util.tuple.Triple r1;
        java.lang.Object $r2, $r3, $r4, $r5;

        r0 := @this: com.opengamma.analytics.math.cube.NodalCube;

        r1 := @parameter0: com.opengamma.util.tuple.Triple;

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object,java.lang.String)>(r1, "x-y-z triple");

        $r2 = virtualinvoke r1.<com.opengamma.util.tuple.Triple: java.lang.Object getFirst()>();

        $r3 = virtualinvoke r1.<com.opengamma.util.tuple.Triple: java.lang.Object getSecond()>();

        $r4 = virtualinvoke r1.<com.opengamma.util.tuple.Triple: java.lang.Object getThird()>();

        $r5 = virtualinvoke r0.<com.opengamma.analytics.math.cube.NodalCube: java.lang.Object getValue(java.lang.Object,java.lang.Object,java.lang.Object)>($r2, $r3, $r4);

        return $r5;
    }

    public java.lang.Object[] getXData()
    {
        com.opengamma.analytics.math.cube.NodalCube r0;
        java.lang.Object[] $r1;

        r0 := @this: com.opengamma.analytics.math.cube.NodalCube;

        $r1 = r0.<com.opengamma.analytics.math.cube.NodalCube: java.lang.Object[] _xData>;

        return $r1;
    }

    public java.lang.Object[] getYData()
    {
        com.opengamma.analytics.math.cube.NodalCube r0;
        java.lang.Object[] $r1;

        r0 := @this: com.opengamma.analytics.math.cube.NodalCube;

        $r1 = r0.<com.opengamma.analytics.math.cube.NodalCube: java.lang.Object[] _yData>;

        return $r1;
    }

    public java.lang.Object[] getZData()
    {
        com.opengamma.analytics.math.cube.NodalCube r0;
        java.lang.Object[] $r1;

        r0 := @this: com.opengamma.analytics.math.cube.NodalCube;

        $r1 = r0.<com.opengamma.analytics.math.cube.NodalCube: java.lang.Object[] _zData>;

        return $r1;
    }

    public java.lang.Object[] getValues()
    {
        com.opengamma.analytics.math.cube.NodalCube r0;
        java.lang.Object[] $r1;

        r0 := @this: com.opengamma.analytics.math.cube.NodalCube;

        $r1 = r0.<com.opengamma.analytics.math.cube.NodalCube: java.lang.Object[] _vData>;

        return $r1;
    }

    public int size()
    {
        com.opengamma.analytics.math.cube.NodalCube r0;
        java.lang.Object[] $r1;
        int $i0;

        r0 := @this: com.opengamma.analytics.math.cube.NodalCube;

        $r1 = r0.<com.opengamma.analytics.math.cube.NodalCube: java.lang.Object[] _vData>;

        $i0 = lengthof $r1;

        return $i0;
    }

    public java.lang.String getName()
    {
        com.opengamma.analytics.math.cube.NodalCube r0;
        java.lang.String $r1;

        r0 := @this: com.opengamma.analytics.math.cube.NodalCube;

        $r1 = r0.<com.opengamma.analytics.math.cube.NodalCube: java.lang.String _name>;

        return $r1;
    }
}
