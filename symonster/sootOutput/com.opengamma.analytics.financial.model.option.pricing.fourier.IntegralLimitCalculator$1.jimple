class com.opengamma.analytics.financial.model.option.pricing.fourier.IntegralLimitCalculator$1 extends com.opengamma.analytics.math.function.Function1D
{
    final double val$alpha;
    final com.opengamma.analytics.math.function.Function1D val$psi;
    final double val$k;
    final com.opengamma.analytics.financial.model.option.pricing.fourier.IntegralLimitCalculator this$0;

    void <init>(com.opengamma.analytics.financial.model.option.pricing.fourier.IntegralLimitCalculator, double, com.opengamma.analytics.math.function.Function1D, double)
    {
        com.opengamma.analytics.financial.model.option.pricing.fourier.IntegralLimitCalculator$1 r0;
        com.opengamma.analytics.financial.model.option.pricing.fourier.IntegralLimitCalculator r1;
        double d0, d1;
        com.opengamma.analytics.math.function.Function1D r2;

        r0 := @this: com.opengamma.analytics.financial.model.option.pricing.fourier.IntegralLimitCalculator$1;

        r1 := @parameter0: com.opengamma.analytics.financial.model.option.pricing.fourier.IntegralLimitCalculator;

        d0 := @parameter1: double;

        r2 := @parameter2: com.opengamma.analytics.math.function.Function1D;

        d1 := @parameter3: double;

        r0.<com.opengamma.analytics.financial.model.option.pricing.fourier.IntegralLimitCalculator$1: com.opengamma.analytics.financial.model.option.pricing.fourier.IntegralLimitCalculator this$0> = r1;

        r0.<com.opengamma.analytics.financial.model.option.pricing.fourier.IntegralLimitCalculator$1: double val$alpha> = d0;

        r0.<com.opengamma.analytics.financial.model.option.pricing.fourier.IntegralLimitCalculator$1: com.opengamma.analytics.math.function.Function1D val$psi> = r2;

        r0.<com.opengamma.analytics.financial.model.option.pricing.fourier.IntegralLimitCalculator$1: double val$k> = d1;

        specialinvoke r0.<com.opengamma.analytics.math.function.Function1D: void <init>()>();

        return;
    }

    public java.lang.Double evaluate(java.lang.Double)
    {
        com.opengamma.analytics.financial.model.option.pricing.fourier.IntegralLimitCalculator$1 r0;
        java.lang.Double r1, $r7;
        com.opengamma.analytics.math.number.ComplexNumber $r3, $r6;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7;
        com.opengamma.analytics.math.function.Function1D $r4;
        java.lang.Object $r5;

        r0 := @this: com.opengamma.analytics.financial.model.option.pricing.fourier.IntegralLimitCalculator$1;

        r1 := @parameter0: java.lang.Double;

        $r3 = new com.opengamma.analytics.math.number.ComplexNumber;

        $d0 = virtualinvoke r1.<java.lang.Double: double doubleValue()>();

        $d1 = r0.<com.opengamma.analytics.financial.model.option.pricing.fourier.IntegralLimitCalculator$1: double val$alpha>;

        $d2 = 1.0 + $d1;

        $d3 = neg $d2;

        specialinvoke $r3.<com.opengamma.analytics.math.number.ComplexNumber: void <init>(double,double)>($d0, $d3);

        $r4 = r0.<com.opengamma.analytics.financial.model.option.pricing.fourier.IntegralLimitCalculator$1: com.opengamma.analytics.math.function.Function1D val$psi>;

        $r5 = virtualinvoke $r4.<com.opengamma.analytics.math.function.Function1D: java.lang.Object evaluate(java.lang.Object)>($r3);

        $r6 = (com.opengamma.analytics.math.number.ComplexNumber) $r5;

        $d4 = staticinvoke <com.opengamma.analytics.math.ComplexMathUtils: double mod(com.opengamma.analytics.math.number.ComplexNumber)>($r6);

        $d5 = staticinvoke <java.lang.Math: double log(double)>($d4);

        $d6 = r0.<com.opengamma.analytics.financial.model.option.pricing.fourier.IntegralLimitCalculator$1: double val$k>;

        $d7 = $d5 - $d6;

        $r7 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d7);

        return $r7;
    }

    public volatile java.lang.Object evaluate(java.lang.Object)
    {
        com.opengamma.analytics.financial.model.option.pricing.fourier.IntegralLimitCalculator$1 r0;
        java.lang.Object r1;
        java.lang.Double $r2, $r3;

        r0 := @this: com.opengamma.analytics.financial.model.option.pricing.fourier.IntegralLimitCalculator$1;

        r1 := @parameter0: java.lang.Object;

        $r2 = (java.lang.Double) r1;

        $r3 = virtualinvoke r0.<com.opengamma.analytics.financial.model.option.pricing.fourier.IntegralLimitCalculator$1: java.lang.Double evaluate(java.lang.Double)>($r2);

        return $r3;
    }
}
