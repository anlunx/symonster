class org.apache.commons.math3.util.Combinations$LexicographicIterator extends java.lang.Object implements java.util.Iterator
{
    private final int k;
    private final int[] c;
    private boolean more;
    private int j;

    public void <init>(int, int)
    {
        org.apache.commons.math3.util.Combinations$LexicographicIterator r0;
        int i0, i1, $i2, $i3, $i4, $i5, i6;
        int[] $r1, $r2, $r3, $r4;

        r0 := @this: org.apache.commons.math3.util.Combinations$LexicographicIterator;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.commons.math3.util.Combinations$LexicographicIterator: boolean more> = 1;

        r0.<org.apache.commons.math3.util.Combinations$LexicographicIterator: int k> = i1;

        $i2 = i1 + 3;

        $r1 = newarray (int)[$i2];

        r0.<org.apache.commons.math3.util.Combinations$LexicographicIterator: int[] c> = $r1;

        if i1 == 0 goto label1;

        if i1 < i0 goto label2;

     label1:
        r0.<org.apache.commons.math3.util.Combinations$LexicographicIterator: boolean more> = 0;

        return;

     label2:
        i6 = 1;

     label3:
        if i6 > i1 goto label4;

        $r4 = r0.<org.apache.commons.math3.util.Combinations$LexicographicIterator: int[] c>;

        $i5 = i6 - 1;

        $r4[i6] = $i5;

        i6 = i6 + 1;

        goto label3;

     label4:
        $r2 = r0.<org.apache.commons.math3.util.Combinations$LexicographicIterator: int[] c>;

        $i3 = i1 + 1;

        $r2[$i3] = i0;

        $r3 = r0.<org.apache.commons.math3.util.Combinations$LexicographicIterator: int[] c>;

        $i4 = i1 + 2;

        $r3[$i4] = 0;

        r0.<org.apache.commons.math3.util.Combinations$LexicographicIterator: int j> = i1;

        return;
    }

    public boolean hasNext()
    {
        org.apache.commons.math3.util.Combinations$LexicographicIterator r0;
        boolean $z0;

        r0 := @this: org.apache.commons.math3.util.Combinations$LexicographicIterator;

        $z0 = r0.<org.apache.commons.math3.util.Combinations$LexicographicIterator: boolean more>;

        return $z0;
    }

    public int[] next()
    {
        org.apache.commons.math3.util.Combinations$LexicographicIterator r0;
        int[] r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10;
        boolean $z0, z1;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, i27, i28;
        java.util.NoSuchElementException $r11;

        r0 := @this: org.apache.commons.math3.util.Combinations$LexicographicIterator;

        $z0 = r0.<org.apache.commons.math3.util.Combinations$LexicographicIterator: boolean more>;

        if $z0 != 0 goto label1;

        $r11 = new java.util.NoSuchElementException;

        specialinvoke $r11.<java.util.NoSuchElementException: void <init>()>();

        throw $r11;

     label1:
        $i0 = r0.<org.apache.commons.math3.util.Combinations$LexicographicIterator: int k>;

        r1 = newarray (int)[$i0];

        $r2 = r0.<org.apache.commons.math3.util.Combinations$LexicographicIterator: int[] c>;

        $i1 = r0.<org.apache.commons.math3.util.Combinations$LexicographicIterator: int k>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, 1, r1, 0, $i1);

        i27 = 0;

        $i2 = r0.<org.apache.commons.math3.util.Combinations$LexicographicIterator: int j>;

        if $i2 <= 0 goto label2;

        i28 = r0.<org.apache.commons.math3.util.Combinations$LexicographicIterator: int j>;

        $r10 = r0.<org.apache.commons.math3.util.Combinations$LexicographicIterator: int[] c>;

        $i24 = r0.<org.apache.commons.math3.util.Combinations$LexicographicIterator: int j>;

        $r10[$i24] = i28;

        $i25 = r0.<org.apache.commons.math3.util.Combinations$LexicographicIterator: int j>;

        $i26 = $i25 - 1;

        r0.<org.apache.commons.math3.util.Combinations$LexicographicIterator: int j> = $i26;

        return r1;

     label2:
        $r3 = r0.<org.apache.commons.math3.util.Combinations$LexicographicIterator: int[] c>;

        $i3 = $r3[1];

        $i5 = $i3 + 1;

        $r4 = r0.<org.apache.commons.math3.util.Combinations$LexicographicIterator: int[] c>;

        $i4 = $r4[2];

        if $i5 >= $i4 goto label3;

        $r9 = r0.<org.apache.commons.math3.util.Combinations$LexicographicIterator: int[] c>;

        $i22 = $r9[1];

        $i23 = $i22 + 1;

        $r9[1] = $i23;

        return r1;

     label3:
        r0.<org.apache.commons.math3.util.Combinations$LexicographicIterator: int j> = 2;

        z1 = 0;

     label4:
        if z1 != 0 goto label6;

        $r6 = r0.<org.apache.commons.math3.util.Combinations$LexicographicIterator: int[] c>;

        $i11 = r0.<org.apache.commons.math3.util.Combinations$LexicographicIterator: int j>;

        $i14 = $i11 - 1;

        $i12 = r0.<org.apache.commons.math3.util.Combinations$LexicographicIterator: int j>;

        $i13 = $i12 - 2;

        $r6[$i14] = $i13;

        $r7 = r0.<org.apache.commons.math3.util.Combinations$LexicographicIterator: int[] c>;

        $i15 = r0.<org.apache.commons.math3.util.Combinations$LexicographicIterator: int j>;

        $i16 = $r7[$i15];

        i27 = $i16 + 1;

        $r8 = r0.<org.apache.commons.math3.util.Combinations$LexicographicIterator: int[] c>;

        $i17 = r0.<org.apache.commons.math3.util.Combinations$LexicographicIterator: int j>;

        $i18 = $i17 + 1;

        $i19 = $r8[$i18];

        if i27 != $i19 goto label5;

        $i20 = r0.<org.apache.commons.math3.util.Combinations$LexicographicIterator: int j>;

        $i21 = $i20 + 1;

        r0.<org.apache.commons.math3.util.Combinations$LexicographicIterator: int j> = $i21;

        goto label4;

     label5:
        z1 = 1;

        goto label4;

     label6:
        $i7 = r0.<org.apache.commons.math3.util.Combinations$LexicographicIterator: int j>;

        $i6 = r0.<org.apache.commons.math3.util.Combinations$LexicographicIterator: int k>;

        if $i7 <= $i6 goto label7;

        r0.<org.apache.commons.math3.util.Combinations$LexicographicIterator: boolean more> = 0;

        return r1;

     label7:
        $r5 = r0.<org.apache.commons.math3.util.Combinations$LexicographicIterator: int[] c>;

        $i8 = r0.<org.apache.commons.math3.util.Combinations$LexicographicIterator: int j>;

        $r5[$i8] = i27;

        $i9 = r0.<org.apache.commons.math3.util.Combinations$LexicographicIterator: int j>;

        $i10 = $i9 - 1;

        r0.<org.apache.commons.math3.util.Combinations$LexicographicIterator: int j> = $i10;

        return r1;
    }

    public void remove()
    {
        org.apache.commons.math3.util.Combinations$LexicographicIterator r0;
        java.lang.UnsupportedOperationException $r1;

        r0 := @this: org.apache.commons.math3.util.Combinations$LexicographicIterator;

        $r1 = new java.lang.UnsupportedOperationException;

        specialinvoke $r1.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r1;
    }

    public volatile java.lang.Object next()
    {
        org.apache.commons.math3.util.Combinations$LexicographicIterator r0;
        int[] $r1;

        r0 := @this: org.apache.commons.math3.util.Combinations$LexicographicIterator;

        $r1 = virtualinvoke r0.<org.apache.commons.math3.util.Combinations$LexicographicIterator: int[] next()>();

        return $r1;
    }
}
