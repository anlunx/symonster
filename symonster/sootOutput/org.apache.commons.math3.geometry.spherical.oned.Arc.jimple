public class org.apache.commons.math3.geometry.spherical.oned.Arc extends java.lang.Object
{
    private final double lower;
    private final double upper;
    private final double middle;
    private final double tolerance;

    public void <init>(double, double, double) throws org.apache.commons.math3.exception.NumberIsTooLargeException
    {
        org.apache.commons.math3.geometry.spherical.oned.Arc r0;
        double d0, d1, d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11;
        boolean $z0;
        byte $b0, $b1;
        org.apache.commons.math3.exception.NumberIsTooLargeException $r1;
        org.apache.commons.math3.exception.util.LocalizedFormats $r2;
        java.lang.Double $r3, $r4;

        r0 := @this: org.apache.commons.math3.geometry.spherical.oned.Arc;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        d2 := @parameter2: double;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.commons.math3.geometry.spherical.oned.Arc: double tolerance> = d2;

        $z0 = staticinvoke <org.apache.commons.math3.util.Precision: boolean equals(double,double,int)>(d0, d1, 0);

        if $z0 != 0 goto label1;

        $d3 = d1 - d0;

        $b0 = $d3 cmpl 6.283185307179586;

        if $b0 < 0 goto label2;

     label1:
        r0.<org.apache.commons.math3.geometry.spherical.oned.Arc: double lower> = 0.0;

        r0.<org.apache.commons.math3.geometry.spherical.oned.Arc: double upper> = 6.283185307179586;

        r0.<org.apache.commons.math3.geometry.spherical.oned.Arc: double middle> = 3.141592653589793;

        goto label4;

     label2:
        $b1 = d0 cmpg d1;

        if $b1 > 0 goto label3;

        $d4 = staticinvoke <org.apache.commons.math3.util.MathUtils: double normalizeAngle(double,double)>(d0, 3.141592653589793);

        r0.<org.apache.commons.math3.geometry.spherical.oned.Arc: double lower> = $d4;

        $d6 = r0.<org.apache.commons.math3.geometry.spherical.oned.Arc: double lower>;

        $d5 = d1 - d0;

        $d7 = $d6 + $d5;

        r0.<org.apache.commons.math3.geometry.spherical.oned.Arc: double upper> = $d7;

        $d9 = r0.<org.apache.commons.math3.geometry.spherical.oned.Arc: double lower>;

        $d8 = r0.<org.apache.commons.math3.geometry.spherical.oned.Arc: double upper>;

        $d10 = $d9 + $d8;

        $d11 = 0.5 * $d10;

        r0.<org.apache.commons.math3.geometry.spherical.oned.Arc: double middle> = $d11;

        goto label4;

     label3:
        $r1 = new org.apache.commons.math3.exception.NumberIsTooLargeException;

        $r2 = <org.apache.commons.math3.exception.util.LocalizedFormats: org.apache.commons.math3.exception.util.LocalizedFormats ENDPOINTS_NOT_AN_INTERVAL>;

        $r3 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d0);

        $r4 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d1);

        specialinvoke $r1.<org.apache.commons.math3.exception.NumberIsTooLargeException: void <init>(org.apache.commons.math3.exception.util.Localizable,java.lang.Number,java.lang.Number,boolean)>($r2, $r3, $r4, 1);

        throw $r1;

     label4:
        return;
    }

    public double getInf()
    {
        org.apache.commons.math3.geometry.spherical.oned.Arc r0;
        double $d0;

        r0 := @this: org.apache.commons.math3.geometry.spherical.oned.Arc;

        $d0 = r0.<org.apache.commons.math3.geometry.spherical.oned.Arc: double lower>;

        return $d0;
    }

    public double getSup()
    {
        org.apache.commons.math3.geometry.spherical.oned.Arc r0;
        double $d0;

        r0 := @this: org.apache.commons.math3.geometry.spherical.oned.Arc;

        $d0 = r0.<org.apache.commons.math3.geometry.spherical.oned.Arc: double upper>;

        return $d0;
    }

    public double getSize()
    {
        org.apache.commons.math3.geometry.spherical.oned.Arc r0;
        double $d0, $d1, $d2;

        r0 := @this: org.apache.commons.math3.geometry.spherical.oned.Arc;

        $d1 = r0.<org.apache.commons.math3.geometry.spherical.oned.Arc: double upper>;

        $d0 = r0.<org.apache.commons.math3.geometry.spherical.oned.Arc: double lower>;

        $d2 = $d1 - $d0;

        return $d2;
    }

    public double getBarycenter()
    {
        org.apache.commons.math3.geometry.spherical.oned.Arc r0;
        double $d0;

        r0 := @this: org.apache.commons.math3.geometry.spherical.oned.Arc;

        $d0 = r0.<org.apache.commons.math3.geometry.spherical.oned.Arc: double middle>;

        return $d0;
    }

    public double getTolerance()
    {
        org.apache.commons.math3.geometry.spherical.oned.Arc r0;
        double $d0;

        r0 := @this: org.apache.commons.math3.geometry.spherical.oned.Arc;

        $d0 = r0.<org.apache.commons.math3.geometry.spherical.oned.Arc: double tolerance>;

        return $d0;
    }

    public org.apache.commons.math3.geometry.partitioning.Region$Location checkPoint(double)
    {
        org.apache.commons.math3.geometry.spherical.oned.Arc r0;
        double d0, d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17;
        byte $b0, $b1, $b2, $b3, $b4;
        org.apache.commons.math3.geometry.partitioning.Region$Location $r1, $r2, $r3;

        r0 := @this: org.apache.commons.math3.geometry.spherical.oned.Arc;

        d0 := @parameter0: double;

        $d2 = r0.<org.apache.commons.math3.geometry.spherical.oned.Arc: double middle>;

        d1 = staticinvoke <org.apache.commons.math3.util.MathUtils: double normalizeAngle(double,double)>(d0, $d2);

        $d4 = r0.<org.apache.commons.math3.geometry.spherical.oned.Arc: double lower>;

        $d3 = r0.<org.apache.commons.math3.geometry.spherical.oned.Arc: double tolerance>;

        $d5 = $d4 - $d3;

        $b0 = d1 cmpg $d5;

        if $b0 < 0 goto label1;

        $d7 = r0.<org.apache.commons.math3.geometry.spherical.oned.Arc: double upper>;

        $d6 = r0.<org.apache.commons.math3.geometry.spherical.oned.Arc: double tolerance>;

        $d8 = $d7 + $d6;

        $b1 = d1 cmpl $d8;

        if $b1 <= 0 goto label2;

     label1:
        $r1 = <org.apache.commons.math3.geometry.partitioning.Region$Location: org.apache.commons.math3.geometry.partitioning.Region$Location OUTSIDE>;

        return $r1;

     label2:
        $d10 = r0.<org.apache.commons.math3.geometry.spherical.oned.Arc: double lower>;

        $d9 = r0.<org.apache.commons.math3.geometry.spherical.oned.Arc: double tolerance>;

        $d11 = $d10 + $d9;

        $b2 = d1 cmpl $d11;

        if $b2 <= 0 goto label3;

        $d16 = r0.<org.apache.commons.math3.geometry.spherical.oned.Arc: double upper>;

        $d15 = r0.<org.apache.commons.math3.geometry.spherical.oned.Arc: double tolerance>;

        $d17 = $d16 - $d15;

        $b4 = d1 cmpg $d17;

        if $b4 >= 0 goto label3;

        $r2 = <org.apache.commons.math3.geometry.partitioning.Region$Location: org.apache.commons.math3.geometry.partitioning.Region$Location INSIDE>;

        return $r2;

     label3:
        $d12 = virtualinvoke r0.<org.apache.commons.math3.geometry.spherical.oned.Arc: double getSize()>();

        $d13 = r0.<org.apache.commons.math3.geometry.spherical.oned.Arc: double tolerance>;

        $d14 = 6.283185307179586 - $d13;

        $b3 = $d12 cmpl $d14;

        if $b3 < 0 goto label4;

        $r3 = <org.apache.commons.math3.geometry.partitioning.Region$Location: org.apache.commons.math3.geometry.partitioning.Region$Location INSIDE>;

        goto label5;

     label4:
        $r3 = <org.apache.commons.math3.geometry.partitioning.Region$Location: org.apache.commons.math3.geometry.partitioning.Region$Location BOUNDARY>;

     label5:
        return $r3;
    }
}
