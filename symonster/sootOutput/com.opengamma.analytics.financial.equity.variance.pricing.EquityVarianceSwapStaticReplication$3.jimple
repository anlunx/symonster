class com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapStaticReplication$3 extends com.opengamma.analytics.math.function.Function1D
{
    final com.opengamma.analytics.financial.model.volatility.surface.PureImpliedVolatilitySurface val$volSurface;
    final double val$tau;
    final double val$f;
    final double val$d;
    final double val$fMd2;
    final double val$alpha;
    final com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapStaticReplication this$0;

    void <init>(com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapStaticReplication, com.opengamma.analytics.financial.model.volatility.surface.PureImpliedVolatilitySurface, double, double, double, double, double)
    {
        com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapStaticReplication$3 r0;
        com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapStaticReplication r1;
        com.opengamma.analytics.financial.model.volatility.surface.PureImpliedVolatilitySurface r2;
        double d0, d1, d2, d3, d4;

        r0 := @this: com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapStaticReplication$3;

        r1 := @parameter0: com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapStaticReplication;

        r2 := @parameter1: com.opengamma.analytics.financial.model.volatility.surface.PureImpliedVolatilitySurface;

        d0 := @parameter2: double;

        d1 := @parameter3: double;

        d2 := @parameter4: double;

        d3 := @parameter5: double;

        d4 := @parameter6: double;

        r0.<com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapStaticReplication$3: com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapStaticReplication this$0> = r1;

        r0.<com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapStaticReplication$3: com.opengamma.analytics.financial.model.volatility.surface.PureImpliedVolatilitySurface val$volSurface> = r2;

        r0.<com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapStaticReplication$3: double val$tau> = d0;

        r0.<com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapStaticReplication$3: double val$f> = d1;

        r0.<com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapStaticReplication$3: double val$d> = d2;

        r0.<com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapStaticReplication$3: double val$fMd2> = d3;

        r0.<com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapStaticReplication$3: double val$alpha> = d4;

        specialinvoke r0.<com.opengamma.analytics.math.function.Function1D: void <init>()>();

        return;
    }

    public java.lang.Double evaluate(java.lang.Double)
    {
        com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapStaticReplication$3 r0;
        java.lang.Double r1, $r3, $r4;
        double d0, d1, d2, d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21, $d22, $d23, $d24, $d25, $d26, $d27, $d28, $d29;
        byte $b0, $b1;
        com.opengamma.analytics.financial.model.volatility.surface.PureImpliedVolatilitySurface $r2;
        boolean $z1;

        r0 := @this: com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapStaticReplication$3;

        r1 := @parameter0: java.lang.Double;

        $d4 = virtualinvoke r1.<java.lang.Double: double doubleValue()>();

        $b0 = $d4 cmpl 0.0;

        if $b0 != 0 goto label1;

        $r4 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(0.0);

        return $r4;

     label1:
        $d5 = virtualinvoke r1.<java.lang.Double: double doubleValue()>();

        $b1 = $d5 cmpl 1.0;

        if $b1 < 0 goto label2;

        $z1 = 1;

        goto label3;

     label2:
        $z1 = 0;

     label3:
        $r2 = r0.<com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapStaticReplication$3: com.opengamma.analytics.financial.model.volatility.surface.PureImpliedVolatilitySurface val$volSurface>;

        $d6 = r0.<com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapStaticReplication$3: double val$tau>;

        $d7 = virtualinvoke r1.<java.lang.Double: double doubleValue()>();

        d0 = virtualinvoke $r2.<com.opengamma.analytics.financial.model.volatility.surface.PureImpliedVolatilitySurface: double getVolatility(double,double)>($d6, $d7);

        $d8 = virtualinvoke r1.<java.lang.Double: double doubleValue()>();

        $d9 = r0.<com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapStaticReplication$3: double val$tau>;

        d1 = staticinvoke <com.opengamma.analytics.financial.model.volatility.BlackFormulaRepository: double price(double,double,double,double,boolean)>(1.0, $d8, $d9, d0, $z1);

        $d11 = r0.<com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapStaticReplication$3: double val$f>;

        $d10 = r0.<com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapStaticReplication$3: double val$d>;

        $d12 = $d11 - $d10;

        $d13 = virtualinvoke r1.<java.lang.Double: double doubleValue()>();

        $d15 = $d12 * $d13;

        $d14 = r0.<com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapStaticReplication$3: double val$d>;

        d2 = $d15 + $d14;

        $d16 = r0.<com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapStaticReplication$3: double val$fMd2>;

        $d18 = neg $d16;

        $d17 = r0.<com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapStaticReplication$3: double val$alpha>;

        $d22 = $d18 * $d17;

        $d20 = 2.0 * d2;

        $d19 = r0.<com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapStaticReplication$3: double val$alpha>;

        $d21 = $d20 + $d19;

        $d23 = $d22 * $d21;

        $d24 = $d23 / d2;

        $d27 = $d24 / d2;

        $d25 = r0.<com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapStaticReplication$3: double val$alpha>;

        $d26 = d2 + $d25;

        $d28 = staticinvoke <com.opengamma.analytics.math.FunctionUtils: double square(double)>($d26);

        d3 = $d27 / $d28;

        $d29 = d1 * d3;

        $r3 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d29);

        return $r3;
    }

    public volatile java.lang.Object evaluate(java.lang.Object)
    {
        com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapStaticReplication$3 r0;
        java.lang.Object r1;
        java.lang.Double $r2, $r3;

        r0 := @this: com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapStaticReplication$3;

        r1 := @parameter0: java.lang.Object;

        $r2 = (java.lang.Double) r1;

        $r3 = virtualinvoke r0.<com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapStaticReplication$3: java.lang.Double evaluate(java.lang.Double)>($r2);

        return $r3;
    }
}
