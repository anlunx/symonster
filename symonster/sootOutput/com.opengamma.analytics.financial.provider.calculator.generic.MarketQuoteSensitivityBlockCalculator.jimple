public final class com.opengamma.analytics.financial.provider.calculator.generic.MarketQuoteSensitivityBlockCalculator extends java.lang.Object
{
    private static final com.opengamma.analytics.math.matrix.MatrixAlgebra MATRIX_ALGEBRA;
    private final com.opengamma.analytics.financial.provider.sensitivity.parameter.ParameterSensitivityParameterAbstractCalculator _parameterSensitivityCalculator;

    public void <init>(com.opengamma.analytics.financial.provider.sensitivity.parameter.ParameterSensitivityParameterAbstractCalculator)
    {
        com.opengamma.analytics.financial.provider.calculator.generic.MarketQuoteSensitivityBlockCalculator r0;
        com.opengamma.analytics.financial.provider.sensitivity.parameter.ParameterSensitivityParameterAbstractCalculator r1;

        r0 := @this: com.opengamma.analytics.financial.provider.calculator.generic.MarketQuoteSensitivityBlockCalculator;

        r1 := @parameter0: com.opengamma.analytics.financial.provider.sensitivity.parameter.ParameterSensitivityParameterAbstractCalculator;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.opengamma.analytics.financial.provider.calculator.generic.MarketQuoteSensitivityBlockCalculator: com.opengamma.analytics.financial.provider.sensitivity.parameter.ParameterSensitivityParameterAbstractCalculator _parameterSensitivityCalculator> = r1;

        return;
    }

    public com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyParameterSensitivity fromParameterSensitivity(com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyParameterSensitivity, com.opengamma.analytics.financial.provider.curve.CurveBuildingBlockBundle)
    {
        com.opengamma.analytics.financial.provider.calculator.generic.MarketQuoteSensitivityBlockCalculator r0;
        com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyParameterSensitivity r1, $r13, $r48, r60;
        com.opengamma.analytics.financial.provider.curve.CurveBuildingBlockBundle r2;
        java.util.Iterator r3, r61;
        com.opengamma.util.tuple.Pair r4, r6, $r57;
        com.opengamma.analytics.math.matrix.DoubleMatrix1D r7, $r19, $r35, $r40, $r44, $r58;
        double[] r8, r10;
        java.lang.String r9, $r18, $r23, $r28, $r30;
        int i0, i1;
        java.util.Set $r14, $r47;
        boolean $z0, $z1;
        java.lang.Object $r15, $r17, $r27, $r32, $r36, $r41, $r45, $r49, $r50, $r53, $r56;
        java.util.LinkedHashMap $r16;
        java.lang.StringBuilder $r20, $r21, $r22, $r25, $r26, $r29;
        com.opengamma.analytics.math.matrix.MatrixAlgebra $r34, $r39;
        com.opengamma.analytics.math.matrix.Matrix $r37, $r38, $r42, $r43;
        com.opengamma.analytics.financial.provider.curve.CurveBuildingBlock $r46, $r51, $r54;
        java.lang.Integer $r52, $r55;

        r0 := @this: com.opengamma.analytics.financial.provider.calculator.generic.MarketQuoteSensitivityBlockCalculator;

        r1 := @parameter0: com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyParameterSensitivity;

        r2 := @parameter1: com.opengamma.analytics.financial.provider.curve.CurveBuildingBlockBundle;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "Sensitivity");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, "Units");

        $r13 = new com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyParameterSensitivity;

        specialinvoke $r13.<com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyParameterSensitivity: void <init>()>();

        r60 = $r13;

        $r14 = virtualinvoke r1.<com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyParameterSensitivity: java.util.Set getAllNamesCurrency()>();

        r3 = interfaceinvoke $r14.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $r15 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (com.opengamma.util.tuple.Pair) $r15;

        $r16 = new java.util.LinkedHashMap;

        specialinvoke $r16.<java.util.LinkedHashMap: void <init>()>();

        $r17 = virtualinvoke r4.<com.opengamma.util.tuple.Pair: java.lang.Object getFirst()>();

        $r18 = (java.lang.String) $r17;

        r6 = virtualinvoke r2.<com.opengamma.analytics.financial.provider.curve.CurveBuildingBlockBundle: com.opengamma.util.tuple.Pair getBlock(java.lang.String)>($r18);

        $r19 = virtualinvoke r1.<com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyParameterSensitivity: com.opengamma.analytics.math.matrix.DoubleMatrix1D getSensitivity(com.opengamma.util.tuple.Pair)>(r4);

        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("sensitivity for ");

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r4);

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>($r19, $r23);

        $r25 = new java.lang.StringBuilder;

        specialinvoke $r25.<java.lang.StringBuilder: void <init>()>();

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("curve building block / Jacobian pair for ");

        $r27 = virtualinvoke r4.<com.opengamma.util.tuple.Pair: java.lang.Object getFirst()>();

        $r28 = (java.lang.String) $r27;

        $r29 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r28);

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r6, $r30);

        $r32 = virtualinvoke r6.<com.opengamma.util.tuple.Pair: java.lang.Object getSecond()>();

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>($r32, "Jacobian");

        $r34 = <com.opengamma.analytics.financial.provider.calculator.generic.MarketQuoteSensitivityBlockCalculator: com.opengamma.analytics.math.matrix.MatrixAlgebra MATRIX_ALGEBRA>;

        $r35 = virtualinvoke r1.<com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyParameterSensitivity: com.opengamma.analytics.math.matrix.DoubleMatrix1D getSensitivity(com.opengamma.util.tuple.Pair)>(r4);

        $r36 = virtualinvoke r6.<com.opengamma.util.tuple.Pair: java.lang.Object getSecond()>();

        $r37 = (com.opengamma.analytics.math.matrix.Matrix) $r36;

        $r38 = virtualinvoke $r34.<com.opengamma.analytics.math.matrix.MatrixAlgebra: com.opengamma.analytics.math.matrix.Matrix multiply(com.opengamma.analytics.math.matrix.Matrix,com.opengamma.analytics.math.matrix.Matrix)>($r35, $r37);

        r7 = (com.opengamma.analytics.math.matrix.DoubleMatrix1D) $r38;

        if r7 == null goto label4;

        $r39 = <com.opengamma.analytics.financial.provider.calculator.generic.MarketQuoteSensitivityBlockCalculator: com.opengamma.analytics.math.matrix.MatrixAlgebra MATRIX_ALGEBRA>;

        $r40 = virtualinvoke r1.<com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyParameterSensitivity: com.opengamma.analytics.math.matrix.DoubleMatrix1D getSensitivity(com.opengamma.util.tuple.Pair)>(r4);

        $r41 = virtualinvoke r6.<com.opengamma.util.tuple.Pair: java.lang.Object getSecond()>();

        $r42 = (com.opengamma.analytics.math.matrix.Matrix) $r41;

        $r43 = virtualinvoke $r39.<com.opengamma.analytics.math.matrix.MatrixAlgebra: com.opengamma.analytics.math.matrix.Matrix multiply(com.opengamma.analytics.math.matrix.Matrix,com.opengamma.analytics.math.matrix.Matrix)>($r40, $r42);

        $r44 = (com.opengamma.analytics.math.matrix.DoubleMatrix1D) $r43;

        r8 = virtualinvoke $r44.<com.opengamma.analytics.math.matrix.DoubleMatrix1D: double[] getData()>();

        $r45 = virtualinvoke r6.<com.opengamma.util.tuple.Pair: java.lang.Object getFirst()>();

        $r46 = (com.opengamma.analytics.financial.provider.curve.CurveBuildingBlock) $r45;

        $r47 = virtualinvoke $r46.<com.opengamma.analytics.financial.provider.curve.CurveBuildingBlock: java.util.Set getAllNames()>();

        r61 = interfaceinvoke $r47.<java.util.Set: java.util.Iterator iterator()>();

     label2:
        $z1 = interfaceinvoke r61.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label3;

        $r49 = interfaceinvoke r61.<java.util.Iterator: java.lang.Object next()>();

        r9 = (java.lang.String) $r49;

        $r50 = virtualinvoke r6.<com.opengamma.util.tuple.Pair: java.lang.Object getFirst()>();

        $r51 = (com.opengamma.analytics.financial.provider.curve.CurveBuildingBlock) $r50;

        $r52 = virtualinvoke $r51.<com.opengamma.analytics.financial.provider.curve.CurveBuildingBlock: java.lang.Integer getNbParameters(java.lang.String)>(r9);

        i0 = virtualinvoke $r52.<java.lang.Integer: int intValue()>();

        $r53 = virtualinvoke r6.<com.opengamma.util.tuple.Pair: java.lang.Object getFirst()>();

        $r54 = (com.opengamma.analytics.financial.provider.curve.CurveBuildingBlock) $r53;

        $r55 = virtualinvoke $r54.<com.opengamma.analytics.financial.provider.curve.CurveBuildingBlock: java.lang.Integer getStart(java.lang.String)>(r9);

        i1 = virtualinvoke $r55.<java.lang.Integer: int intValue()>();

        r10 = newarray (double)[i0];

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r8, i1, r10, 0, i0);

        $r56 = virtualinvoke r4.<com.opengamma.util.tuple.Pair: java.lang.Object getSecond()>();

        $r57 = staticinvoke <com.opengamma.util.tuple.Pairs: com.opengamma.util.tuple.Pair of(java.lang.Object,java.lang.Object)>(r9, $r56);

        $r58 = new com.opengamma.analytics.math.matrix.DoubleMatrix1D;

        specialinvoke $r58.<com.opengamma.analytics.math.matrix.DoubleMatrix1D: void <init>(double[])>(r10);

        virtualinvoke $r16.<java.util.LinkedHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r57, $r58);

        goto label2;

     label3:
        $r48 = new com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyParameterSensitivity;

        specialinvoke $r48.<com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyParameterSensitivity: void <init>(java.util.LinkedHashMap)>($r16);

        r60 = virtualinvoke r60.<com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyParameterSensitivity: com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyParameterSensitivity plus(com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyParameterSensitivity)>($r48);

     label4:
        goto label1;

     label5:
        return r60;
    }

    public com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyParameterSensitivity fromInstrument(com.opengamma.analytics.financial.interestrate.InstrumentDerivative, com.opengamma.analytics.financial.provider.description.interestrate.ParameterProviderInterface, com.opengamma.analytics.financial.provider.curve.CurveBuildingBlockBundle)
    {
        com.opengamma.analytics.financial.provider.calculator.generic.MarketQuoteSensitivityBlockCalculator r0;
        com.opengamma.analytics.financial.interestrate.InstrumentDerivative r1;
        com.opengamma.analytics.financial.provider.description.interestrate.ParameterProviderInterface r2;
        com.opengamma.analytics.financial.provider.curve.CurveBuildingBlockBundle r3;
        com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyParameterSensitivity r4, $r9;
        com.opengamma.analytics.financial.provider.sensitivity.parameter.ParameterSensitivityParameterAbstractCalculator $r8;

        r0 := @this: com.opengamma.analytics.financial.provider.calculator.generic.MarketQuoteSensitivityBlockCalculator;

        r1 := @parameter0: com.opengamma.analytics.financial.interestrate.InstrumentDerivative;

        r2 := @parameter1: com.opengamma.analytics.financial.provider.description.interestrate.ParameterProviderInterface;

        r3 := @parameter2: com.opengamma.analytics.financial.provider.curve.CurveBuildingBlockBundle;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "instrument");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, "provider");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r3, "units");

        $r8 = r0.<com.opengamma.analytics.financial.provider.calculator.generic.MarketQuoteSensitivityBlockCalculator: com.opengamma.analytics.financial.provider.sensitivity.parameter.ParameterSensitivityParameterAbstractCalculator _parameterSensitivityCalculator>;

        r4 = virtualinvoke $r8.<com.opengamma.analytics.financial.provider.sensitivity.parameter.ParameterSensitivityParameterAbstractCalculator: com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyParameterSensitivity calculateSensitivity(com.opengamma.analytics.financial.interestrate.InstrumentDerivative,com.opengamma.analytics.financial.provider.description.interestrate.ParameterProviderInterface)>(r1, r2);

        $r9 = virtualinvoke r0.<com.opengamma.analytics.financial.provider.calculator.generic.MarketQuoteSensitivityBlockCalculator: com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyParameterSensitivity fromParameterSensitivity(com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyParameterSensitivity,com.opengamma.analytics.financial.provider.curve.CurveBuildingBlockBundle)>(r4, r3);

        return $r9;
    }

    static void <clinit>()
    {
        com.opengamma.analytics.math.matrix.OGMatrixAlgebra $r0;

        $r0 = new com.opengamma.analytics.math.matrix.OGMatrixAlgebra;

        specialinvoke $r0.<com.opengamma.analytics.math.matrix.OGMatrixAlgebra: void <init>()>();

        <com.opengamma.analytics.financial.provider.calculator.generic.MarketQuoteSensitivityBlockCalculator: com.opengamma.analytics.math.matrix.MatrixAlgebra MATRIX_ALGEBRA> = $r0;

        return;
    }
}
