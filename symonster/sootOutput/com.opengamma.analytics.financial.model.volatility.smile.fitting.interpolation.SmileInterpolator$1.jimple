class com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolator$1 extends com.opengamma.analytics.math.function.Function1D
{
    final double val$expiry;
    final double val$forward;
    final double[] val$strikes;
    final java.util.List val$modelParams;
    final int val$n;
    final com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolator this$0;

    void <init>(com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolator, double, double, double[], java.util.List, int)
    {
        com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolator$1 r0;
        com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolator r1;
        double d0, d1;
        double[] r2;
        java.util.List r3;
        int i0;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolator$1;

        r1 := @parameter0: com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolator;

        d0 := @parameter1: double;

        d1 := @parameter2: double;

        r2 := @parameter3: double[];

        r3 := @parameter4: java.util.List;

        i0 := @parameter5: int;

        r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolator$1: com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolator this$0> = r1;

        r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolator$1: double val$expiry> = d0;

        r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolator$1: double val$forward> = d1;

        r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolator$1: double[] val$strikes> = r2;

        r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolator$1: java.util.List val$modelParams> = r3;

        r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolator$1: int val$n> = i0;

        specialinvoke r0.<com.opengamma.analytics.math.function.Function1D: void <init>()>();

        return;
    }

    public java.lang.Double evaluate(java.lang.Double)
    {
        com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolator$1 r0;
        java.lang.Double r1, $r14, $r18, $r19, $r23, $r27, $r31, $r35;
        com.opengamma.analytics.math.function.Function1D r3;
        int i0, $i1, $i2, $i5, $i6, $i7, $i8;
        double d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11;
        com.opengamma.analytics.financial.model.option.pricing.analytic.formula.EuropeanVanillaOption $r4;
        com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolator $r5, $r8;
        com.opengamma.analytics.financial.model.volatility.smile.function.VolatilityFunctionProvider $r6;
        double[] $r7, $r10;
        com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.WeightingFunction $r9;
        byte $b3, $b4;
        java.util.List $r11, $r15, $r20, $r24, $r28, $r32;
        java.lang.Object $r12, $r13, $r16, $r17, $r21, $r22, $r25, $r26, $r29, $r30, $r33, $r34;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolator$1;

        r1 := @parameter0: java.lang.Double;

        $r4 = new com.opengamma.analytics.financial.model.option.pricing.analytic.formula.EuropeanVanillaOption;

        $d1 = virtualinvoke r1.<java.lang.Double: double doubleValue()>();

        $d2 = r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolator$1: double val$expiry>;

        specialinvoke $r4.<com.opengamma.analytics.financial.model.option.pricing.analytic.formula.EuropeanVanillaOption: void <init>(double,double,boolean)>($d1, $d2, 1);

        $r5 = r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolator$1: com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolator this$0>;

        $r6 = staticinvoke <com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolator: com.opengamma.analytics.financial.model.volatility.smile.function.VolatilityFunctionProvider access$000(com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolator)>($r5);

        $d3 = r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolator$1: double val$forward>;

        r3 = virtualinvoke $r6.<com.opengamma.analytics.financial.model.volatility.smile.function.VolatilityFunctionProvider: com.opengamma.analytics.math.function.Function1D getVolatilityFunction(com.opengamma.analytics.financial.model.option.pricing.analytic.formula.EuropeanVanillaOption,double)>($r4, $d3);

        $r7 = r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolator$1: double[] val$strikes>;

        $d4 = virtualinvoke r1.<java.lang.Double: double doubleValue()>();

        i0 = staticinvoke <com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SurfaceArrayUtils: int getLowerBoundIndex(double[],double)>($r7, $d4);

        if i0 != 0 goto label1;

        $r32 = r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolator$1: java.util.List val$modelParams>;

        $r33 = interfaceinvoke $r32.<java.util.List: java.lang.Object get(int)>(0);

        $r34 = virtualinvoke r3.<com.opengamma.analytics.math.function.Function1D: java.lang.Object evaluate(java.lang.Object)>($r33);

        $r35 = (java.lang.Double) $r34;

        return $r35;

     label1:
        $i1 = r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolator$1: int val$n>;

        $i2 = $i1 - 2;

        if i0 < $i2 goto label2;

        $r28 = r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolator$1: java.util.List val$modelParams>;

        $i7 = r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolator$1: int val$n>;

        $i8 = $i7 - 3;

        $r29 = interfaceinvoke $r28.<java.util.List: java.lang.Object get(int)>($i8);

        $r30 = virtualinvoke r3.<com.opengamma.analytics.math.function.Function1D: java.lang.Object evaluate(java.lang.Object)>($r29);

        $r31 = (java.lang.Double) $r30;

        return $r31;

     label2:
        $r8 = r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolator$1: com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolator this$0>;

        $r9 = staticinvoke <com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolator: com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.WeightingFunction access$100(com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolator)>($r8);

        $r10 = r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolator$1: double[] val$strikes>;

        $d5 = virtualinvoke r1.<java.lang.Double: double doubleValue()>();

        d0 = virtualinvoke $r9.<com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.WeightingFunction: double getWeight(double[],int,double)>($r10, i0, $d5);

        $b3 = d0 cmpl 1.0;

        if $b3 != 0 goto label3;

        $r24 = r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolator$1: java.util.List val$modelParams>;

        $i6 = i0 - 1;

        $r25 = interfaceinvoke $r24.<java.util.List: java.lang.Object get(int)>($i6);

        $r26 = virtualinvoke r3.<com.opengamma.analytics.math.function.Function1D: java.lang.Object evaluate(java.lang.Object)>($r25);

        $r27 = (java.lang.Double) $r26;

        return $r27;

     label3:
        $b4 = d0 cmpl 0.0;

        if $b4 != 0 goto label4;

        $r20 = r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolator$1: java.util.List val$modelParams>;

        $r21 = interfaceinvoke $r20.<java.util.List: java.lang.Object get(int)>(i0);

        $r22 = virtualinvoke r3.<com.opengamma.analytics.math.function.Function1D: java.lang.Object evaluate(java.lang.Object)>($r21);

        $r23 = (java.lang.Double) $r22;

        return $r23;

     label4:
        $r11 = r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolator$1: java.util.List val$modelParams>;

        $i5 = i0 - 1;

        $r12 = interfaceinvoke $r11.<java.util.List: java.lang.Object get(int)>($i5);

        $r13 = virtualinvoke r3.<com.opengamma.analytics.math.function.Function1D: java.lang.Object evaluate(java.lang.Object)>($r12);

        $r14 = (java.lang.Double) $r13;

        $d6 = virtualinvoke $r14.<java.lang.Double: double doubleValue()>();

        $d7 = d0 * $d6;

        $d8 = 1.0 - d0;

        $r15 = r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolator$1: java.util.List val$modelParams>;

        $r16 = interfaceinvoke $r15.<java.util.List: java.lang.Object get(int)>(i0);

        $r17 = virtualinvoke r3.<com.opengamma.analytics.math.function.Function1D: java.lang.Object evaluate(java.lang.Object)>($r16);

        $r18 = (java.lang.Double) $r17;

        $d9 = virtualinvoke $r18.<java.lang.Double: double doubleValue()>();

        $d10 = $d8 * $d9;

        $d11 = $d7 + $d10;

        $r19 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d11);

        return $r19;
    }

    public volatile java.lang.Object evaluate(java.lang.Object)
    {
        com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolator$1 r0;
        java.lang.Object r1;
        java.lang.Double $r2, $r3;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolator$1;

        r1 := @parameter0: java.lang.Object;

        $r2 = (java.lang.Double) r1;

        $r3 = virtualinvoke r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolator$1: java.lang.Double evaluate(java.lang.Double)>($r2);

        return $r3;
    }
}
