public class org.apache.commons.math3.analysis.integration.RombergIntegrator extends org.apache.commons.math3.analysis.integration.BaseAbstractUnivariateIntegrator
{
    public static final int ROMBERG_MAX_ITERATIONS_COUNT;

    public void <init>(double, double, int, int) throws org.apache.commons.math3.exception.NotStrictlyPositiveException, org.apache.commons.math3.exception.NumberIsTooSmallException, org.apache.commons.math3.exception.NumberIsTooLargeException
    {
        org.apache.commons.math3.analysis.integration.RombergIntegrator r0;
        double d0, d1;
        int i0, i1;
        org.apache.commons.math3.exception.NumberIsTooLargeException $r1;
        java.lang.Integer $r2, $r3;

        r0 := @this: org.apache.commons.math3.analysis.integration.RombergIntegrator;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        specialinvoke r0.<org.apache.commons.math3.analysis.integration.BaseAbstractUnivariateIntegrator: void <init>(double,double,int,int)>(d0, d1, i0, i1);

        if i1 <= 32 goto label1;

        $r1 = new org.apache.commons.math3.exception.NumberIsTooLargeException;

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(32);

        specialinvoke $r1.<org.apache.commons.math3.exception.NumberIsTooLargeException: void <init>(java.lang.Number,java.lang.Number,boolean)>($r2, $r3, 0);

        throw $r1;

     label1:
        return;
    }

    public void <init>(int, int) throws org.apache.commons.math3.exception.NotStrictlyPositiveException, org.apache.commons.math3.exception.NumberIsTooSmallException, org.apache.commons.math3.exception.NumberIsTooLargeException
    {
        org.apache.commons.math3.analysis.integration.RombergIntegrator r0;
        int i0, i1;
        org.apache.commons.math3.exception.NumberIsTooLargeException $r1;
        java.lang.Integer $r2, $r3;

        r0 := @this: org.apache.commons.math3.analysis.integration.RombergIntegrator;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        specialinvoke r0.<org.apache.commons.math3.analysis.integration.BaseAbstractUnivariateIntegrator: void <init>(int,int)>(i0, i1);

        if i1 <= 32 goto label1;

        $r1 = new org.apache.commons.math3.exception.NumberIsTooLargeException;

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(32);

        specialinvoke $r1.<org.apache.commons.math3.exception.NumberIsTooLargeException: void <init>(java.lang.Number,java.lang.Number,boolean)>($r2, $r3, 0);

        throw $r1;

     label1:
        return;
    }

    public void <init>()
    {
        org.apache.commons.math3.analysis.integration.RombergIntegrator r0;

        r0 := @this: org.apache.commons.math3.analysis.integration.RombergIntegrator;

        specialinvoke r0.<org.apache.commons.math3.analysis.integration.BaseAbstractUnivariateIntegrator: void <init>(int,int)>(3, 32);

        return;
    }

    protected double doIntegrate() throws org.apache.commons.math3.exception.TooManyEvaluationsException, org.apache.commons.math3.exception.MaxCountExceededException
    {
        org.apache.commons.math3.analysis.integration.RombergIntegrator r0;
        int i0, i1, $i2, $i3, $i6, $i9, $i10, i11;
        double[] r2, r8, r9;
        double d0, d1, d2, d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, d17, d18;
        org.apache.commons.math3.util.Incrementor $r3, $r5, $r6, $r7;
        org.apache.commons.math3.analysis.integration.TrapezoidIntegrator $r4;
        byte $b4, $b5;
        long $l7, $l8;

        r0 := @this: org.apache.commons.math3.analysis.integration.RombergIntegrator;

        $r3 = r0.<org.apache.commons.math3.analysis.integration.RombergIntegrator: org.apache.commons.math3.util.Incrementor iterations>;

        $i2 = virtualinvoke $r3.<org.apache.commons.math3.util.Incrementor: int getMaximalCount()>();

        i0 = $i2 + 1;

        r8 = newarray (double)[i0];

        r9 = newarray (double)[i0];

        $r4 = new org.apache.commons.math3.analysis.integration.TrapezoidIntegrator;

        specialinvoke $r4.<org.apache.commons.math3.analysis.integration.TrapezoidIntegrator: void <init>()>();

        $d4 = virtualinvoke $r4.<org.apache.commons.math3.analysis.integration.TrapezoidIntegrator: double stage(org.apache.commons.math3.analysis.integration.BaseAbstractUnivariateIntegrator,int)>(r0, 0);

        r9[0] = $d4;

        $r5 = r0.<org.apache.commons.math3.analysis.integration.RombergIntegrator: org.apache.commons.math3.util.Incrementor iterations>;

        virtualinvoke $r5.<org.apache.commons.math3.util.Incrementor: void incrementCount()>();

        d17 = r9[0];

     label1:
        $r6 = r0.<org.apache.commons.math3.analysis.integration.RombergIntegrator: org.apache.commons.math3.util.Incrementor iterations>;

        i1 = virtualinvoke $r6.<org.apache.commons.math3.util.Incrementor: int getCount()>();

        r2 = r8;

        r8 = r9;

        r9 = r2;

        $d5 = virtualinvoke $r4.<org.apache.commons.math3.analysis.integration.TrapezoidIntegrator: double stage(org.apache.commons.math3.analysis.integration.BaseAbstractUnivariateIntegrator,int)>(r0, i1);

        r2[0] = $d5;

        $r7 = r0.<org.apache.commons.math3.analysis.integration.RombergIntegrator: org.apache.commons.math3.util.Incrementor iterations>;

        virtualinvoke $r7.<org.apache.commons.math3.util.Incrementor: void incrementCount()>();

        i11 = 1;

     label2:
        if i11 > i1 goto label3;

        $i6 = 2 * i11;

        $l7 = 1L << $i6;

        $l8 = $l7 - 1L;

        d0 = (double) $l8;

        $i9 = i11 - 1;

        d2 = r2[$i9];

        $i10 = i11 - 1;

        $d13 = r8[$i10];

        $d14 = d2 - $d13;

        $d15 = $d14 / d0;

        $d16 = d2 + $d15;

        r2[i11] = $d16;

        i11 = i11 + 1;

        goto label2;

     label3:
        d18 = r2[i1];

        $i3 = virtualinvoke r0.<org.apache.commons.math3.analysis.integration.RombergIntegrator: int getMinimalIterationCount()>();

        if i1 < $i3 goto label5;

        $d6 = d18 - d17;

        d1 = staticinvoke <org.apache.commons.math3.util.FastMath: double abs(double)>($d6);

        $d7 = virtualinvoke r0.<org.apache.commons.math3.analysis.integration.RombergIntegrator: double getRelativeAccuracy()>();

        $d8 = staticinvoke <org.apache.commons.math3.util.FastMath: double abs(double)>(d17);

        $d9 = staticinvoke <org.apache.commons.math3.util.FastMath: double abs(double)>(d18);

        $d10 = $d8 + $d9;

        $d11 = $d7 * $d10;

        d3 = $d11 * 0.5;

        $b4 = d1 cmpg d3;

        if $b4 <= 0 goto label4;

        $d12 = virtualinvoke r0.<org.apache.commons.math3.analysis.integration.RombergIntegrator: double getAbsoluteAccuracy()>();

        $b5 = d1 cmpg $d12;

        if $b5 > 0 goto label5;

     label4:
        return d18;

     label5:
        d17 = d18;

        goto label1;
    }

    public static void <clinit>()
    {
        <org.apache.commons.math3.analysis.integration.RombergIntegrator: int ROMBERG_MAX_ITERATIONS_COUNT> = 32;

        return;
    }
}
