public final enum class org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor$Order extends java.lang.Enum
{
    public static final enum org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor$Order PLUS_MINUS_SUB;
    public static final enum org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor$Order PLUS_SUB_MINUS;
    public static final enum org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor$Order MINUS_PLUS_SUB;
    public static final enum org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor$Order MINUS_SUB_PLUS;
    public static final enum org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor$Order SUB_PLUS_MINUS;
    public static final enum org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor$Order SUB_MINUS_PLUS;
    private static final org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor$Order[] $VALUES;

    public static org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor$Order[] values()
    {
        org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor$Order[] $r0, $r2;
        java.lang.Object $r1;

        $r0 = <org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor$Order: org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor$Order[] $VALUES>;

        $r1 = virtualinvoke $r0.<java.lang.Object: java.lang.Object clone()>();

        $r2 = (org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor$Order[]) $r1;

        return $r2;
    }

    public static org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor$Order valueOf(java.lang.String)
    {
        java.lang.String r0;
        java.lang.Enum $r1;
        org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor$Order $r2;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "org/apache/commons/math3/geometry/partitioning/BSPTreeVisitor$Order", r0);

        $r2 = (org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor$Order) $r1;

        return $r2;
    }

    private void <init>(java.lang.String, int)
    {
        org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor$Order r0;
        java.lang.String r1;
        int i0;

        r0 := @this: org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor$Order;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>(r1, i0);

        return;
    }

    static void <clinit>()
    {
        org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor$Order $r0, $r1, $r2, $r3, $r4, $r5, $r7, $r8, $r9, $r10, $r11, $r12;
        org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor$Order[] $r6;

        $r0 = new org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor$Order;

        specialinvoke $r0.<org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor$Order: void <init>(java.lang.String,int)>("PLUS_MINUS_SUB", 0);

        <org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor$Order: org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor$Order PLUS_MINUS_SUB> = $r0;

        $r1 = new org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor$Order;

        specialinvoke $r1.<org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor$Order: void <init>(java.lang.String,int)>("PLUS_SUB_MINUS", 1);

        <org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor$Order: org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor$Order PLUS_SUB_MINUS> = $r1;

        $r2 = new org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor$Order;

        specialinvoke $r2.<org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor$Order: void <init>(java.lang.String,int)>("MINUS_PLUS_SUB", 2);

        <org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor$Order: org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor$Order MINUS_PLUS_SUB> = $r2;

        $r3 = new org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor$Order;

        specialinvoke $r3.<org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor$Order: void <init>(java.lang.String,int)>("MINUS_SUB_PLUS", 3);

        <org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor$Order: org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor$Order MINUS_SUB_PLUS> = $r3;

        $r4 = new org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor$Order;

        specialinvoke $r4.<org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor$Order: void <init>(java.lang.String,int)>("SUB_PLUS_MINUS", 4);

        <org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor$Order: org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor$Order SUB_PLUS_MINUS> = $r4;

        $r5 = new org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor$Order;

        specialinvoke $r5.<org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor$Order: void <init>(java.lang.String,int)>("SUB_MINUS_PLUS", 5);

        <org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor$Order: org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor$Order SUB_MINUS_PLUS> = $r5;

        $r6 = newarray (org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor$Order)[6];

        $r7 = <org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor$Order: org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor$Order PLUS_MINUS_SUB>;

        $r6[0] = $r7;

        $r8 = <org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor$Order: org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor$Order PLUS_SUB_MINUS>;

        $r6[1] = $r8;

        $r9 = <org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor$Order: org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor$Order MINUS_PLUS_SUB>;

        $r6[2] = $r9;

        $r10 = <org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor$Order: org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor$Order MINUS_SUB_PLUS>;

        $r6[3] = $r10;

        $r11 = <org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor$Order: org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor$Order SUB_PLUS_MINUS>;

        $r6[4] = $r11;

        $r12 = <org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor$Order: org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor$Order SUB_MINUS_PLUS>;

        $r6[5] = $r12;

        <org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor$Order: org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor$Order[] $VALUES> = $r6;

        return;
    }
}
