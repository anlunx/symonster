public class com.opengamma.analytics.math.rootfinding.CubicRealRootFinder extends java.lang.Object implements com.opengamma.analytics.math.rootfinding.Polynomial1DRootFinder
{
    private static final java.lang.Double[] EMPTY_ARRAY;
    private static final com.opengamma.analytics.math.rootfinding.Polynomial1DRootFinder ROOT_FINDER;

    public void <init>()
    {
        com.opengamma.analytics.math.rootfinding.CubicRealRootFinder r0;

        r0 := @this: com.opengamma.analytics.math.rootfinding.CubicRealRootFinder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public java.lang.Double[] getRoots(com.opengamma.analytics.math.function.RealPolynomialFunction1D)
    {
        com.opengamma.analytics.math.rootfinding.CubicRealRootFinder r0;
        com.opengamma.analytics.math.function.RealPolynomialFunction1D r1;
        double[] r2;
        com.opengamma.analytics.math.number.ComplexNumber[] r3;
        int i0, $i1, $i2, i3;
        com.opengamma.analytics.math.number.ComplexNumber r6;
        com.opengamma.analytics.math.rootfinding.Polynomial1DRootFinder $r8;
        java.lang.Object[] $r9, $r12;
        java.util.ArrayList $r10;
        java.lang.Double[] $r11, $r13;
        double $d0, $d1;
        boolean $z0, $z2;
        java.lang.Double $r14;
        java.lang.IllegalArgumentException $r15;

        r0 := @this: com.opengamma.analytics.math.rootfinding.CubicRealRootFinder;

        r1 := @parameter0: com.opengamma.analytics.math.function.RealPolynomialFunction1D;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "function");

        r2 = virtualinvoke r1.<com.opengamma.analytics.math.function.RealPolynomialFunction1D: double[] getCoefficients()>();

        $i1 = lengthof r2;

        if $i1 == 4 goto label1;

        $r15 = new java.lang.IllegalArgumentException;

        specialinvoke $r15.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Function is not a cubic");

        throw $r15;

     label1:
        $r8 = <com.opengamma.analytics.math.rootfinding.CubicRealRootFinder: com.opengamma.analytics.math.rootfinding.Polynomial1DRootFinder ROOT_FINDER>;

        $r9 = interfaceinvoke $r8.<com.opengamma.analytics.math.rootfinding.Polynomial1DRootFinder: java.lang.Object[] getRoots(com.opengamma.analytics.math.function.RealPolynomialFunction1D)>(r1);

        r3 = (com.opengamma.analytics.math.number.ComplexNumber[]) $r9;

        $r10 = new java.util.ArrayList;

        specialinvoke $r10.<java.util.ArrayList: void <init>()>();

        i0 = lengthof r3;

        i3 = 0;

     label2:
        if i3 >= i0 goto label4;

        r6 = r3[i3];

        $d0 = virtualinvoke r6.<com.opengamma.analytics.math.number.ComplexNumber: double getImaginary()>();

        $z0 = staticinvoke <com.opengamma.util.CompareUtils: boolean closeEquals(double,double,double)>($d0, 0.0, 1.0E-16);

        if $z0 == 0 goto label3;

        $d1 = virtualinvoke r6.<com.opengamma.analytics.math.number.ComplexNumber: double getReal()>();

        $r14 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d1);

        interfaceinvoke $r10.<java.util.List: boolean add(java.lang.Object)>($r14);

     label3:
        i3 = i3 + 1;

        goto label2;

     label4:
        $i2 = interfaceinvoke $r10.<java.util.List: int size()>();

        if $i2 <= 0 goto label5;

        $z2 = 1;

        goto label6;

     label5:
        $z2 = 0;

     label6:
        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z2, "Could not find any real roots");

        $r11 = <com.opengamma.analytics.math.rootfinding.CubicRealRootFinder: java.lang.Double[] EMPTY_ARRAY>;

        $r12 = interfaceinvoke $r10.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r11);

        $r13 = (java.lang.Double[]) $r12;

        return $r13;
    }

    public volatile java.lang.Object[] getRoots(com.opengamma.analytics.math.function.RealPolynomialFunction1D)
    {
        com.opengamma.analytics.math.rootfinding.CubicRealRootFinder r0;
        com.opengamma.analytics.math.function.RealPolynomialFunction1D r1;
        java.lang.Double[] $r2;

        r0 := @this: com.opengamma.analytics.math.rootfinding.CubicRealRootFinder;

        r1 := @parameter0: com.opengamma.analytics.math.function.RealPolynomialFunction1D;

        $r2 = virtualinvoke r0.<com.opengamma.analytics.math.rootfinding.CubicRealRootFinder: java.lang.Double[] getRoots(com.opengamma.analytics.math.function.RealPolynomialFunction1D)>(r1);

        return $r2;
    }

    static void <clinit>()
    {
        java.lang.Double[] $r0;
        com.opengamma.analytics.math.rootfinding.CubicRootFinder $r1;

        $r0 = newarray (java.lang.Double)[0];

        <com.opengamma.analytics.math.rootfinding.CubicRealRootFinder: java.lang.Double[] EMPTY_ARRAY> = $r0;

        $r1 = new com.opengamma.analytics.math.rootfinding.CubicRootFinder;

        specialinvoke $r1.<com.opengamma.analytics.math.rootfinding.CubicRootFinder: void <init>()>();

        <com.opengamma.analytics.math.rootfinding.CubicRealRootFinder: com.opengamma.analytics.math.rootfinding.Polynomial1DRootFinder ROOT_FINDER> = $r1;

        return;
    }
}
