public class com.opengamma.analytics.math.linearalgebra.TridiagonalMatrix extends java.lang.Object implements com.opengamma.analytics.math.matrix.Matrix
{
    private final double[] _a;
    private final double[] _b;
    private final double[] _c;
    private com.opengamma.analytics.math.matrix.DoubleMatrix2D _matrix;

    public void <init>(double[], double[], double[])
    {
        com.opengamma.analytics.math.linearalgebra.TridiagonalMatrix r0;
        double[] r1, r2, r3;
        int i0, $i1, $i2, $i3, $i4;
        boolean $z0, $z1;

        r0 := @this: com.opengamma.analytics.math.linearalgebra.TridiagonalMatrix;

        r1 := @parameter0: double[];

        r2 := @parameter1: double[];

        r3 := @parameter2: double[];

        specialinvoke r0.<java.lang.Object: void <init>()>();

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object,java.lang.String)>(r1, "a");

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object,java.lang.String)>(r2, "b");

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object,java.lang.String)>(r3, "c");

        i0 = lengthof r1;

        $i2 = lengthof r2;

        $i1 = i0 - 1;

        if $i2 != $i1 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        staticinvoke <org.apache.commons.lang.Validate: void isTrue(boolean,java.lang.String)>($z0, "Length of subdiagonal b is incorrect");

        $i4 = lengthof r3;

        $i3 = i0 - 1;

        if $i4 != $i3 goto label3;

        $z1 = 1;

        goto label4;

     label3:
        $z1 = 0;

     label4:
        staticinvoke <org.apache.commons.lang.Validate: void isTrue(boolean,java.lang.String)>($z1, "Length of subdiagonal c is incorrect");

        r0.<com.opengamma.analytics.math.linearalgebra.TridiagonalMatrix: double[] _a> = r1;

        r0.<com.opengamma.analytics.math.linearalgebra.TridiagonalMatrix: double[] _b> = r2;

        r0.<com.opengamma.analytics.math.linearalgebra.TridiagonalMatrix: double[] _c> = r3;

        return;
    }

    public double[] getDiagonalData()
    {
        com.opengamma.analytics.math.linearalgebra.TridiagonalMatrix r0;
        double[] $r1;

        r0 := @this: com.opengamma.analytics.math.linearalgebra.TridiagonalMatrix;

        $r1 = r0.<com.opengamma.analytics.math.linearalgebra.TridiagonalMatrix: double[] _a>;

        return $r1;
    }

    public double[] getDiagonal()
    {
        com.opengamma.analytics.math.linearalgebra.TridiagonalMatrix r0;
        double[] $r1, $r2, $r3;
        int $i0;

        r0 := @this: com.opengamma.analytics.math.linearalgebra.TridiagonalMatrix;

        $r2 = r0.<com.opengamma.analytics.math.linearalgebra.TridiagonalMatrix: double[] _a>;

        $r1 = r0.<com.opengamma.analytics.math.linearalgebra.TridiagonalMatrix: double[] _a>;

        $i0 = lengthof $r1;

        $r3 = staticinvoke <java.util.Arrays: double[] copyOf(double[],int)>($r2, $i0);

        return $r3;
    }

    public double[] getUpperSubDiagonalData()
    {
        com.opengamma.analytics.math.linearalgebra.TridiagonalMatrix r0;
        double[] $r1;

        r0 := @this: com.opengamma.analytics.math.linearalgebra.TridiagonalMatrix;

        $r1 = r0.<com.opengamma.analytics.math.linearalgebra.TridiagonalMatrix: double[] _b>;

        return $r1;
    }

    public double[] getUpperSubDiagonal()
    {
        com.opengamma.analytics.math.linearalgebra.TridiagonalMatrix r0;
        double[] $r1, $r2, $r3;
        int $i0;

        r0 := @this: com.opengamma.analytics.math.linearalgebra.TridiagonalMatrix;

        $r2 = r0.<com.opengamma.analytics.math.linearalgebra.TridiagonalMatrix: double[] _b>;

        $r1 = r0.<com.opengamma.analytics.math.linearalgebra.TridiagonalMatrix: double[] _b>;

        $i0 = lengthof $r1;

        $r3 = staticinvoke <java.util.Arrays: double[] copyOf(double[],int)>($r2, $i0);

        return $r3;
    }

    public double[] getLowerSubDiagonalData()
    {
        com.opengamma.analytics.math.linearalgebra.TridiagonalMatrix r0;
        double[] $r1;

        r0 := @this: com.opengamma.analytics.math.linearalgebra.TridiagonalMatrix;

        $r1 = r0.<com.opengamma.analytics.math.linearalgebra.TridiagonalMatrix: double[] _c>;

        return $r1;
    }

    public double[] getLowerSubDiagonal()
    {
        com.opengamma.analytics.math.linearalgebra.TridiagonalMatrix r0;
        double[] $r1, $r2, $r3;
        int $i0;

        r0 := @this: com.opengamma.analytics.math.linearalgebra.TridiagonalMatrix;

        $r2 = r0.<com.opengamma.analytics.math.linearalgebra.TridiagonalMatrix: double[] _c>;

        $r1 = r0.<com.opengamma.analytics.math.linearalgebra.TridiagonalMatrix: double[] _c>;

        $i0 = lengthof $r1;

        $r3 = staticinvoke <java.util.Arrays: double[] copyOf(double[],int)>($r2, $i0);

        return $r3;
    }

    public com.opengamma.analytics.math.matrix.DoubleMatrix2D toDoubleMatrix2D()
    {
        com.opengamma.analytics.math.linearalgebra.TridiagonalMatrix r0;
        com.opengamma.analytics.math.matrix.DoubleMatrix2D $r1, $r2;

        r0 := @this: com.opengamma.analytics.math.linearalgebra.TridiagonalMatrix;

        $r1 = r0.<com.opengamma.analytics.math.linearalgebra.TridiagonalMatrix: com.opengamma.analytics.math.matrix.DoubleMatrix2D _matrix>;

        if $r1 != null goto label1;

        specialinvoke r0.<com.opengamma.analytics.math.linearalgebra.TridiagonalMatrix: void calMatrix()>();

     label1:
        $r2 = r0.<com.opengamma.analytics.math.linearalgebra.TridiagonalMatrix: com.opengamma.analytics.math.matrix.DoubleMatrix2D _matrix>;

        return $r2;
    }

    private void calMatrix()
    {
        com.opengamma.analytics.math.linearalgebra.TridiagonalMatrix r0;
        int i0, $i1, $i2, $i3, $i4, i5, i6, i7;
        double[][] r1;
        double[] $r2, $r4, $r5, $r6, $r7, $r8, $r9;
        com.opengamma.analytics.math.matrix.DoubleMatrix2D $r3;
        double $d0, $d1, $d2;

        r0 := @this: com.opengamma.analytics.math.linearalgebra.TridiagonalMatrix;

        $r2 = r0.<com.opengamma.analytics.math.linearalgebra.TridiagonalMatrix: double[] _a>;

        i0 = lengthof $r2;

        r1 = newmultiarray (double)[i0][i0];

        i5 = 0;

     label1:
        if i5 >= i0 goto label2;

        $r9 = r1[i5];

        $r8 = r0.<com.opengamma.analytics.math.linearalgebra.TridiagonalMatrix: double[] _a>;

        $d2 = $r8[i5];

        $r9[i5] = $d2;

        i5 = i5 + 1;

        goto label1;

     label2:
        i6 = 1;

     label3:
        if i6 >= i0 goto label4;

        $i3 = i6 - 1;

        $r7 = r1[$i3];

        $r6 = r0.<com.opengamma.analytics.math.linearalgebra.TridiagonalMatrix: double[] _b>;

        $i4 = i6 - 1;

        $d1 = $r6[$i4];

        $r7[i6] = $d1;

        i6 = i6 + 1;

        goto label3;

     label4:
        i7 = 1;

     label5:
        if i7 >= i0 goto label6;

        $r5 = r1[i7];

        $i2 = i7 - 1;

        $r4 = r0.<com.opengamma.analytics.math.linearalgebra.TridiagonalMatrix: double[] _c>;

        $i1 = i7 - 1;

        $d0 = $r4[$i1];

        $r5[$i2] = $d0;

        i7 = i7 + 1;

        goto label5;

     label6:
        $r3 = new com.opengamma.analytics.math.matrix.DoubleMatrix2D;

        specialinvoke $r3.<com.opengamma.analytics.math.matrix.DoubleMatrix2D: void <init>(double[][])>(r1);

        r0.<com.opengamma.analytics.math.linearalgebra.TridiagonalMatrix: com.opengamma.analytics.math.matrix.DoubleMatrix2D _matrix> = $r3;

        return;
    }

    public int hashCode()
    {
        com.opengamma.analytics.math.linearalgebra.TridiagonalMatrix r0;
        double[] $r1, $r2, $r3;
        int $i1, $i2, $i3, $i4, $i5, $i6, i8, i9, i10;

        r0 := @this: com.opengamma.analytics.math.linearalgebra.TridiagonalMatrix;

        $i1 = 31 * 1;

        $r1 = r0.<com.opengamma.analytics.math.linearalgebra.TridiagonalMatrix: double[] _a>;

        $i2 = staticinvoke <java.util.Arrays: int hashCode(double[])>($r1);

        i8 = $i1 + $i2;

        $i3 = 31 * i8;

        $r2 = r0.<com.opengamma.analytics.math.linearalgebra.TridiagonalMatrix: double[] _b>;

        $i4 = staticinvoke <java.util.Arrays: int hashCode(double[])>($r2);

        i9 = $i3 + $i4;

        $i5 = 31 * i9;

        $r3 = r0.<com.opengamma.analytics.math.linearalgebra.TridiagonalMatrix: double[] _c>;

        $i6 = staticinvoke <java.util.Arrays: int hashCode(double[])>($r3);

        i10 = $i5 + $i6;

        return i10;
    }

    public boolean equals(java.lang.Object)
    {
        com.opengamma.analytics.math.linearalgebra.TridiagonalMatrix r0, r2;
        java.lang.Object r1;
        java.lang.Class $r3, $r4;
        double[] $r5, $r6, $r7, $r8, $r9, $r10;
        boolean $z0, $z1, $z2;

        r0 := @this: com.opengamma.analytics.math.linearalgebra.TridiagonalMatrix;

        r1 := @parameter0: java.lang.Object;

        if r0 != r1 goto label1;

        return 1;

     label1:
        if r1 != null goto label2;

        return 0;

     label2:
        $r3 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r4 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        if $r3 == $r4 goto label3;

        return 0;

     label3:
        r2 = (com.opengamma.analytics.math.linearalgebra.TridiagonalMatrix) r1;

        $r6 = r0.<com.opengamma.analytics.math.linearalgebra.TridiagonalMatrix: double[] _a>;

        $r5 = r2.<com.opengamma.analytics.math.linearalgebra.TridiagonalMatrix: double[] _a>;

        $z0 = staticinvoke <java.util.Arrays: boolean equals(double[],double[])>($r6, $r5);

        if $z0 != 0 goto label4;

        return 0;

     label4:
        $r8 = r0.<com.opengamma.analytics.math.linearalgebra.TridiagonalMatrix: double[] _b>;

        $r7 = r2.<com.opengamma.analytics.math.linearalgebra.TridiagonalMatrix: double[] _b>;

        $z1 = staticinvoke <java.util.Arrays: boolean equals(double[],double[])>($r8, $r7);

        if $z1 != 0 goto label5;

        return 0;

     label5:
        $r10 = r0.<com.opengamma.analytics.math.linearalgebra.TridiagonalMatrix: double[] _c>;

        $r9 = r2.<com.opengamma.analytics.math.linearalgebra.TridiagonalMatrix: double[] _c>;

        $z2 = staticinvoke <java.util.Arrays: boolean equals(double[],double[])>($r10, $r9);

        if $z2 != 0 goto label6;

        return 0;

     label6:
        return 1;
    }

    public int getNumberOfElements()
    {
        com.opengamma.analytics.math.linearalgebra.TridiagonalMatrix r0;
        double[] $r1;
        int $i0;

        r0 := @this: com.opengamma.analytics.math.linearalgebra.TridiagonalMatrix;

        $r1 = r0.<com.opengamma.analytics.math.linearalgebra.TridiagonalMatrix: double[] _a>;

        $i0 = lengthof $r1;

        return $i0;
    }

    public transient java.lang.Double getEntry(int[])
    {
        com.opengamma.analytics.math.linearalgebra.TridiagonalMatrix r0;
        int[] r1;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7;
        double[] $r3, $r5, $r7, $r9;
        java.lang.Double $r4, $r6, $r8, $r10;
        double $d0, $d1, $d2;
        boolean $z0, $z1;
        java.lang.Object[] $r11, $r14;
        java.lang.Integer $r12, $r13, $r15, $r16;

        r0 := @this: com.opengamma.analytics.math.linearalgebra.TridiagonalMatrix;

        r1 := @parameter0: int[];

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "indices");

        $r3 = r0.<com.opengamma.analytics.math.linearalgebra.TridiagonalMatrix: double[] _a>;

        i0 = lengthof $r3;

        i1 = r1[0];

        i2 = r1[1];

        if i1 < 0 goto label1;

        if i1 >= i0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        $r11 = newarray (java.lang.Object)[2];

        $i6 = r1[0];

        $r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i6);

        $r11[0] = $r12;

        $r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r11[1] = $r13;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String,java.lang.Object[])>($z0, "x index {} out of range. Matrix has {} rows", $r11);

        if i2 < 0 goto label3;

        if i2 >= i0 goto label3;

        $z1 = 1;

        goto label4;

     label3:
        $z1 = 0;

     label4:
        $r14 = newarray (java.lang.Object)[2];

        $i7 = r1[1];

        $r15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i7);

        $r14[0] = $r15;

        $r16 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r14[1] = $r16;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String,java.lang.Object[])>($z1, "y index {} out of range. Matrix has {} columns", $r14);

        if i1 != i2 goto label5;

        $r9 = r0.<com.opengamma.analytics.math.linearalgebra.TridiagonalMatrix: double[] _a>;

        $d2 = $r9[i1];

        $r10 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d2);

        return $r10;

     label5:
        $i3 = i1 - 1;

        if $i3 != i2 goto label6;

        $r7 = r0.<com.opengamma.analytics.math.linearalgebra.TridiagonalMatrix: double[] _c>;

        $i5 = i1 - 1;

        $d1 = $r7[$i5];

        $r8 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d1);

        return $r8;

     label6:
        $i4 = i1 + 1;

        if $i4 != i2 goto label7;

        $r5 = r0.<com.opengamma.analytics.math.linearalgebra.TridiagonalMatrix: double[] _b>;

        $d0 = $r5[i1];

        $r6 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        return $r6;

     label7:
        $r4 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(0.0);

        return $r4;
    }

    public volatile java.lang.Object getEntry(int[])
    {
        com.opengamma.analytics.math.linearalgebra.TridiagonalMatrix r0;
        int[] r1;
        java.lang.Double $r2;

        r0 := @this: com.opengamma.analytics.math.linearalgebra.TridiagonalMatrix;

        r1 := @parameter0: int[];

        $r2 = virtualinvoke r0.<com.opengamma.analytics.math.linearalgebra.TridiagonalMatrix: java.lang.Double getEntry(int[])>(r1);

        return $r2;
    }
}
