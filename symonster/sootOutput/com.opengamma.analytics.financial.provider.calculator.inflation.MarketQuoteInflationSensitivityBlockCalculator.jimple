public class com.opengamma.analytics.financial.provider.calculator.inflation.MarketQuoteInflationSensitivityBlockCalculator extends java.lang.Object
{
    private static final com.opengamma.analytics.math.matrix.MatrixAlgebra MATRIX_ALGEBRA;
    private final com.opengamma.analytics.financial.provider.sensitivity.inflation.ParameterSensitivityInflationParameterAbstractCalculator _parameterInflationSensitivityCalculator;

    public void <init>(com.opengamma.analytics.financial.provider.sensitivity.inflation.ParameterSensitivityInflationParameterAbstractCalculator)
    {
        com.opengamma.analytics.financial.provider.calculator.inflation.MarketQuoteInflationSensitivityBlockCalculator r0;
        com.opengamma.analytics.financial.provider.sensitivity.inflation.ParameterSensitivityInflationParameterAbstractCalculator r1;

        r0 := @this: com.opengamma.analytics.financial.provider.calculator.inflation.MarketQuoteInflationSensitivityBlockCalculator;

        r1 := @parameter0: com.opengamma.analytics.financial.provider.sensitivity.inflation.ParameterSensitivityInflationParameterAbstractCalculator;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.opengamma.analytics.financial.provider.calculator.inflation.MarketQuoteInflationSensitivityBlockCalculator: com.opengamma.analytics.financial.provider.sensitivity.inflation.ParameterSensitivityInflationParameterAbstractCalculator _parameterInflationSensitivityCalculator> = r1;

        return;
    }

    public com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyParameterSensitivity fromParameterSensitivity(com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyParameterSensitivity, com.opengamma.analytics.financial.provider.curve.CurveBuildingBlockBundle)
    {
        com.opengamma.analytics.financial.provider.calculator.inflation.MarketQuoteInflationSensitivityBlockCalculator r0;
        com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyParameterSensitivity r1, $r12, $r27, r39;
        com.opengamma.analytics.financial.provider.curve.CurveBuildingBlockBundle r2;
        java.util.Iterator r3, r40;
        com.opengamma.util.tuple.Pair r4, r6, $r36;
        double[] r7, r9;
        java.lang.String r8, $r17;
        int i0, i1;
        java.util.Set $r13, $r26;
        boolean $z0, $z1;
        java.lang.Object $r14, $r16, $r20, $r24, $r28, $r29, $r32, $r35;
        java.util.LinkedHashMap $r15;
        com.opengamma.analytics.math.matrix.MatrixAlgebra $r18;
        com.opengamma.analytics.math.matrix.DoubleMatrix1D $r19, $r23, $r37;
        com.opengamma.analytics.math.matrix.Matrix $r21, $r22;
        com.opengamma.analytics.financial.provider.curve.CurveBuildingBlock $r25, $r30, $r33;
        java.lang.Integer $r31, $r34;

        r0 := @this: com.opengamma.analytics.financial.provider.calculator.inflation.MarketQuoteInflationSensitivityBlockCalculator;

        r1 := @parameter0: com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyParameterSensitivity;

        r2 := @parameter1: com.opengamma.analytics.financial.provider.curve.CurveBuildingBlockBundle;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "Sensitivity");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, "Units");

        $r12 = new com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyParameterSensitivity;

        specialinvoke $r12.<com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyParameterSensitivity: void <init>()>();

        r39 = $r12;

        $r13 = virtualinvoke r1.<com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyParameterSensitivity: java.util.Set getAllNamesCurrency()>();

        r3 = interfaceinvoke $r13.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r14 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (com.opengamma.util.tuple.Pair) $r14;

        $r15 = new java.util.LinkedHashMap;

        specialinvoke $r15.<java.util.LinkedHashMap: void <init>()>();

        $r16 = virtualinvoke r4.<com.opengamma.util.tuple.Pair: java.lang.Object getFirst()>();

        $r17 = (java.lang.String) $r16;

        r6 = virtualinvoke r2.<com.opengamma.analytics.financial.provider.curve.CurveBuildingBlockBundle: com.opengamma.util.tuple.Pair getBlock(java.lang.String)>($r17);

        $r18 = <com.opengamma.analytics.financial.provider.calculator.inflation.MarketQuoteInflationSensitivityBlockCalculator: com.opengamma.analytics.math.matrix.MatrixAlgebra MATRIX_ALGEBRA>;

        $r19 = virtualinvoke r1.<com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyParameterSensitivity: com.opengamma.analytics.math.matrix.DoubleMatrix1D getSensitivity(com.opengamma.util.tuple.Pair)>(r4);

        $r20 = virtualinvoke r6.<com.opengamma.util.tuple.Pair: java.lang.Object getSecond()>();

        $r21 = (com.opengamma.analytics.math.matrix.Matrix) $r20;

        $r22 = virtualinvoke $r18.<com.opengamma.analytics.math.matrix.MatrixAlgebra: com.opengamma.analytics.math.matrix.Matrix multiply(com.opengamma.analytics.math.matrix.Matrix,com.opengamma.analytics.math.matrix.Matrix)>($r19, $r21);

        $r23 = (com.opengamma.analytics.math.matrix.DoubleMatrix1D) $r22;

        r7 = virtualinvoke $r23.<com.opengamma.analytics.math.matrix.DoubleMatrix1D: double[] getData()>();

        $r24 = virtualinvoke r6.<com.opengamma.util.tuple.Pair: java.lang.Object getFirst()>();

        $r25 = (com.opengamma.analytics.financial.provider.curve.CurveBuildingBlock) $r24;

        $r26 = virtualinvoke $r25.<com.opengamma.analytics.financial.provider.curve.CurveBuildingBlock: java.util.Set getAllNames()>();

        r40 = interfaceinvoke $r26.<java.util.Set: java.util.Iterator iterator()>();

     label2:
        $z1 = interfaceinvoke r40.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label3;

        $r28 = interfaceinvoke r40.<java.util.Iterator: java.lang.Object next()>();

        r8 = (java.lang.String) $r28;

        $r29 = virtualinvoke r6.<com.opengamma.util.tuple.Pair: java.lang.Object getFirst()>();

        $r30 = (com.opengamma.analytics.financial.provider.curve.CurveBuildingBlock) $r29;

        $r31 = virtualinvoke $r30.<com.opengamma.analytics.financial.provider.curve.CurveBuildingBlock: java.lang.Integer getNbParameters(java.lang.String)>(r8);

        i0 = virtualinvoke $r31.<java.lang.Integer: int intValue()>();

        $r32 = virtualinvoke r6.<com.opengamma.util.tuple.Pair: java.lang.Object getFirst()>();

        $r33 = (com.opengamma.analytics.financial.provider.curve.CurveBuildingBlock) $r32;

        $r34 = virtualinvoke $r33.<com.opengamma.analytics.financial.provider.curve.CurveBuildingBlock: java.lang.Integer getStart(java.lang.String)>(r8);

        i1 = virtualinvoke $r34.<java.lang.Integer: int intValue()>();

        r9 = newarray (double)[i0];

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r7, i1, r9, 0, i0);

        $r35 = virtualinvoke r4.<com.opengamma.util.tuple.Pair: java.lang.Object getSecond()>();

        $r36 = staticinvoke <com.opengamma.util.tuple.Pairs: com.opengamma.util.tuple.Pair of(java.lang.Object,java.lang.Object)>(r8, $r35);

        $r37 = new com.opengamma.analytics.math.matrix.DoubleMatrix1D;

        specialinvoke $r37.<com.opengamma.analytics.math.matrix.DoubleMatrix1D: void <init>(double[])>(r9);

        virtualinvoke $r15.<java.util.LinkedHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r36, $r37);

        goto label2;

     label3:
        $r27 = new com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyParameterSensitivity;

        specialinvoke $r27.<com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyParameterSensitivity: void <init>(java.util.LinkedHashMap)>($r15);

        r39 = virtualinvoke r39.<com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyParameterSensitivity: com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyParameterSensitivity plus(com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyParameterSensitivity)>($r27);

        goto label1;

     label4:
        return r39;
    }

    public com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyParameterSensitivity fromInstrument(com.opengamma.analytics.financial.interestrate.InstrumentDerivative, com.opengamma.analytics.financial.provider.description.inflation.ParameterInflationProviderInterface, com.opengamma.analytics.financial.provider.curve.CurveBuildingBlockBundle)
    {
        com.opengamma.analytics.financial.provider.calculator.inflation.MarketQuoteInflationSensitivityBlockCalculator r0;
        com.opengamma.analytics.financial.interestrate.InstrumentDerivative r1;
        com.opengamma.analytics.financial.provider.description.inflation.ParameterInflationProviderInterface r2;
        com.opengamma.analytics.financial.provider.curve.CurveBuildingBlockBundle r3;
        com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyParameterSensitivity r4, $r6;
        com.opengamma.analytics.financial.provider.sensitivity.inflation.ParameterSensitivityInflationParameterAbstractCalculator $r5;

        r0 := @this: com.opengamma.analytics.financial.provider.calculator.inflation.MarketQuoteInflationSensitivityBlockCalculator;

        r1 := @parameter0: com.opengamma.analytics.financial.interestrate.InstrumentDerivative;

        r2 := @parameter1: com.opengamma.analytics.financial.provider.description.inflation.ParameterInflationProviderInterface;

        r3 := @parameter2: com.opengamma.analytics.financial.provider.curve.CurveBuildingBlockBundle;

        $r5 = r0.<com.opengamma.analytics.financial.provider.calculator.inflation.MarketQuoteInflationSensitivityBlockCalculator: com.opengamma.analytics.financial.provider.sensitivity.inflation.ParameterSensitivityInflationParameterAbstractCalculator _parameterInflationSensitivityCalculator>;

        r4 = virtualinvoke $r5.<com.opengamma.analytics.financial.provider.sensitivity.inflation.ParameterSensitivityInflationParameterAbstractCalculator: com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyParameterSensitivity calculateSensitivity(com.opengamma.analytics.financial.interestrate.InstrumentDerivative,com.opengamma.analytics.financial.provider.description.inflation.ParameterInflationProviderInterface)>(r1, r2);

        $r6 = virtualinvoke r0.<com.opengamma.analytics.financial.provider.calculator.inflation.MarketQuoteInflationSensitivityBlockCalculator: com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyParameterSensitivity fromParameterSensitivity(com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyParameterSensitivity,com.opengamma.analytics.financial.provider.curve.CurveBuildingBlockBundle)>(r4, r3);

        return $r6;
    }

    static void <clinit>()
    {
        com.opengamma.analytics.math.matrix.OGMatrixAlgebra $r0;

        $r0 = new com.opengamma.analytics.math.matrix.OGMatrixAlgebra;

        specialinvoke $r0.<com.opengamma.analytics.math.matrix.OGMatrixAlgebra: void <init>()>();

        <com.opengamma.analytics.financial.provider.calculator.inflation.MarketQuoteInflationSensitivityBlockCalculator: com.opengamma.analytics.math.matrix.MatrixAlgebra MATRIX_ALGEBRA> = $r0;

        return;
    }
}
