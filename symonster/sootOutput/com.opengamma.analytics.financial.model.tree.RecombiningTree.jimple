public abstract class com.opengamma.analytics.financial.model.tree.RecombiningTree extends java.lang.Object implements com.opengamma.analytics.financial.model.tree.Lattice
{
    private final java.lang.Object[][] _tree;

    public void <init>(java.lang.Object[][])
    {
        com.opengamma.analytics.financial.model.tree.RecombiningTree r0;
        java.lang.Object[][] r1;

        r0 := @this: com.opengamma.analytics.financial.model.tree.RecombiningTree;

        r1 := @parameter0: java.lang.Object[][];

        specialinvoke r0.<java.lang.Object: void <init>()>();

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object,java.lang.String)>(r1, "data");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object[] notEmpty(java.lang.Object[],java.lang.String)>(r1, "data");

        r0.<com.opengamma.analytics.financial.model.tree.RecombiningTree: java.lang.Object[][] _tree> = r1;

        return;
    }

    protected abstract int getMaxNodesForStep(int);

    public java.lang.Object getNode(int, int)
    {
        com.opengamma.analytics.financial.model.tree.RecombiningTree r0;
        int i0, i1, i2, $i3, $i4;
        java.lang.Object[][] $r1, $r2, $r18;
        java.lang.Object[] $r3;
        java.lang.Object $r4;
        java.lang.IllegalArgumentException $r5, $r13, $r22, $r23;
        java.lang.StringBuilder $r6, $r7, $r8, $r9, $r10, $r11, $r14, $r15, $r16, $r17, $r19, $r20;
        java.lang.String $r12, $r21;

        r0 := @this: com.opengamma.analytics.financial.model.tree.RecombiningTree;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        if i0 >= 0 goto label1;

        $r23 = new java.lang.IllegalArgumentException;

        specialinvoke $r23.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Step number cannot be negative");

        throw $r23;

     label1:
        if i1 >= 0 goto label2;

        $r22 = new java.lang.IllegalArgumentException;

        specialinvoke $r22.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Node number cannot be negative");

        throw $r22;

     label2:
        $r1 = r0.<com.opengamma.analytics.financial.model.tree.RecombiningTree: java.lang.Object[][] _tree>;

        $i3 = lengthof $r1;

        if i0 <= $i3 goto label3;

        $r13 = new java.lang.IllegalArgumentException;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Step number ");

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is greater than maximum in this tree (max =  ");

        $r18 = r0.<com.opengamma.analytics.financial.model.tree.RecombiningTree: java.lang.Object[][] _tree>;

        $i4 = lengthof $r18;

        $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r13.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r21);

        throw $r13;

     label3:
        i2 = virtualinvoke r0.<com.opengamma.analytics.financial.model.tree.RecombiningTree: int getMaxNodesForStep(int)>(i0);

        if i1 <= i2 goto label4;

        $r5 = new java.lang.IllegalArgumentException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Node number ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is greater than the number of nodes at this step number (max = ");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r12);

        throw $r5;

     label4:
        $r2 = r0.<com.opengamma.analytics.financial.model.tree.RecombiningTree: java.lang.Object[][] _tree>;

        $r3 = $r2[i0];

        $r4 = $r3[i1];

        return $r4;
    }

    public java.lang.Object[][] getNodes()
    {
        com.opengamma.analytics.financial.model.tree.RecombiningTree r0;
        java.lang.Object[][] $r1;

        r0 := @this: com.opengamma.analytics.financial.model.tree.RecombiningTree;

        $r1 = r0.<com.opengamma.analytics.financial.model.tree.RecombiningTree: java.lang.Object[][] _tree>;

        return $r1;
    }

    public int getDepth()
    {
        com.opengamma.analytics.financial.model.tree.RecombiningTree r0;
        java.lang.Object[][] $r1;
        int $i0;

        r0 := @this: com.opengamma.analytics.financial.model.tree.RecombiningTree;

        $r1 = r0.<com.opengamma.analytics.financial.model.tree.RecombiningTree: java.lang.Object[][] _tree>;

        $i0 = lengthof $r1;

        return $i0;
    }

    public int getNumberOfTerminatingNodes()
    {
        com.opengamma.analytics.financial.model.tree.RecombiningTree r0;
        java.lang.Object[][] $r1, $r2;
        int $i0, $i1, $i2;
        java.lang.Object[] $r3;

        r0 := @this: com.opengamma.analytics.financial.model.tree.RecombiningTree;

        $r2 = r0.<com.opengamma.analytics.financial.model.tree.RecombiningTree: java.lang.Object[][] _tree>;

        $r1 = r0.<com.opengamma.analytics.financial.model.tree.RecombiningTree: java.lang.Object[][] _tree>;

        $i0 = lengthof $r1;

        $i1 = $i0 - 1;

        $r3 = $r2[$i1];

        $i2 = lengthof $r3;

        return $i2;
    }

    public int hashCode()
    {
        com.opengamma.analytics.financial.model.tree.RecombiningTree r0;
        int i1, i2, $i3, $i4, $i5, $i6, i8, i9, i10, i11;
        java.lang.Object[][] $r1, $r2, $r4;
        java.lang.Object[] $r3, $r5;
        java.lang.Object $r6;

        r0 := @this: com.opengamma.analytics.financial.model.tree.RecombiningTree;

        $r1 = r0.<com.opengamma.analytics.financial.model.tree.RecombiningTree: java.lang.Object[][] _tree>;

        i1 = lengthof $r1;

        $i3 = 31 * 1;

        i8 = $i3 + i1;

        i9 = 0;

        i10 = 0;

     label1:
        if i10 >= i1 goto label6;

        $r2 = r0.<com.opengamma.analytics.financial.model.tree.RecombiningTree: java.lang.Object[][] _tree>;

        $r3 = $r2[i10];

        i2 = lengthof $r3;

        $i4 = 31 * i8;

        i8 = $i4 + i2;

        i11 = 0;

     label2:
        if i11 >= i2 goto label4;

        $i5 = 31 * i8;

        $r4 = r0.<com.opengamma.analytics.financial.model.tree.RecombiningTree: java.lang.Object[][] _tree>;

        $r5 = $r4[i10];

        $r6 = $r5[i11];

        $i6 = virtualinvoke $r6.<java.lang.Object: int hashCode()>();

        i8 = $i5 + $i6;

        if i9 != 10 goto label3;

        goto label4;

     label3:
        i9 = i9 + 1;

        i11 = i11 + 1;

        goto label2;

     label4:
        if i9 != 10 goto label5;

        goto label6;

     label5:
        i10 = i10 + 1;

        goto label1;

     label6:
        return i8;
    }

    public boolean equals(java.lang.Object)
    {
        com.opengamma.analytics.financial.model.tree.RecombiningTree r0, r2;
        java.lang.Object r1, $r17, $r18;
        int i0, i1, $i2, $i3, i4, i5;
        java.lang.Class $r3, $r4;
        java.lang.Object[][] $r5, $r6, $r7, $r8, $r9, $r11, $r13, $r15;
        boolean $z0, $z1;
        java.lang.Object[] $r10, $r12, $r14, $r16;

        r0 := @this: com.opengamma.analytics.financial.model.tree.RecombiningTree;

        r1 := @parameter0: java.lang.Object;

        if r0 != r1 goto label01;

        return 1;

     label01:
        if r1 != null goto label02;

        return 0;

     label02:
        $r3 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r4 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        if $r3 == $r4 goto label03;

        return 0;

     label03:
        r2 = (com.opengamma.analytics.financial.model.tree.RecombiningTree) r1;

        $r6 = r0.<com.opengamma.analytics.financial.model.tree.RecombiningTree: java.lang.Object[][] _tree>;

        $r5 = r2.<com.opengamma.analytics.financial.model.tree.RecombiningTree: java.lang.Object[][] _tree>;

        $z0 = staticinvoke <org.apache.commons.lang.ObjectUtils: boolean equals(java.lang.Object,java.lang.Object)>($r6, $r5);

        if $z0 == 0 goto label04;

        return 1;

     label04:
        $r7 = r0.<com.opengamma.analytics.financial.model.tree.RecombiningTree: java.lang.Object[][] _tree>;

        i0 = lengthof $r7;

        $r8 = r2.<com.opengamma.analytics.financial.model.tree.RecombiningTree: java.lang.Object[][] _tree>;

        $i2 = lengthof $r8;

        if i0 == $i2 goto label05;

        return 0;

     label05:
        i4 = 0;

     label06:
        if i4 >= i0 goto label11;

        $r9 = r0.<com.opengamma.analytics.financial.model.tree.RecombiningTree: java.lang.Object[][] _tree>;

        $r10 = $r9[i4];

        i1 = lengthof $r10;

        $r11 = r2.<com.opengamma.analytics.financial.model.tree.RecombiningTree: java.lang.Object[][] _tree>;

        $r12 = $r11[i4];

        $i3 = lengthof $r12;

        if i1 == $i3 goto label07;

        return 0;

     label07:
        i5 = 0;

     label08:
        if i5 >= i1 goto label10;

        $r13 = r0.<com.opengamma.analytics.financial.model.tree.RecombiningTree: java.lang.Object[][] _tree>;

        $r14 = $r13[i4];

        $r18 = $r14[i5];

        $r15 = r2.<com.opengamma.analytics.financial.model.tree.RecombiningTree: java.lang.Object[][] _tree>;

        $r16 = $r15[i4];

        $r17 = $r16[i5];

        $z1 = staticinvoke <org.apache.commons.lang.ObjectUtils: boolean equals(java.lang.Object,java.lang.Object)>($r18, $r17);

        if $z1 != 0 goto label09;

        return 0;

     label09:
        i5 = i5 + 1;

        goto label08;

     label10:
        i4 = i4 + 1;

        goto label06;

     label11:
        return 1;
    }
}
