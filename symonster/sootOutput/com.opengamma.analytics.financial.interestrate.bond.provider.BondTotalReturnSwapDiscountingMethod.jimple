public final class com.opengamma.analytics.financial.interestrate.bond.provider.BondTotalReturnSwapDiscountingMethod extends java.lang.Object
{
    private static final com.opengamma.analytics.financial.interestrate.bond.provider.BondTotalReturnSwapDiscountingMethod INSTANCE;
    private static final com.opengamma.analytics.financial.provider.calculator.issuer.PresentValueIssuerCalculator PVIC;
    private static final com.opengamma.analytics.financial.provider.calculator.issuer.PresentValueCurveSensitivityIssuerCalculator PVCSIC;

    public static com.opengamma.analytics.financial.interestrate.bond.provider.BondTotalReturnSwapDiscountingMethod getInstance()
    {
        com.opengamma.analytics.financial.interestrate.bond.provider.BondTotalReturnSwapDiscountingMethod $r0;

        $r0 = <com.opengamma.analytics.financial.interestrate.bond.provider.BondTotalReturnSwapDiscountingMethod: com.opengamma.analytics.financial.interestrate.bond.provider.BondTotalReturnSwapDiscountingMethod INSTANCE>;

        return $r0;
    }

    private void <init>()
    {
        com.opengamma.analytics.financial.interestrate.bond.provider.BondTotalReturnSwapDiscountingMethod r0;

        r0 := @this: com.opengamma.analytics.financial.interestrate.bond.provider.BondTotalReturnSwapDiscountingMethod;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public com.opengamma.util.money.MultipleCurrencyAmount presentValue(com.opengamma.analytics.financial.interestrate.bond.definition.BondTotalReturnSwap, com.opengamma.analytics.financial.provider.description.interestrate.IssuerProviderInterface)
    {
        com.opengamma.analytics.financial.interestrate.bond.provider.BondTotalReturnSwapDiscountingMethod r0;
        com.opengamma.analytics.financial.interestrate.bond.definition.BondTotalReturnSwap r1;
        com.opengamma.analytics.financial.provider.description.interestrate.IssuerProviderInterface r2;
        com.opengamma.util.money.MultipleCurrencyAmount r3, r4, $r13, $r14;
        com.opengamma.analytics.financial.interestrate.annuity.derivative.Annuity $r7;
        com.opengamma.analytics.financial.provider.calculator.issuer.PresentValueIssuerCalculator $r8, $r11;
        java.lang.Object $r9, $r12;
        com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity $r10;
        double $d0;

        r0 := @this: com.opengamma.analytics.financial.interestrate.bond.provider.BondTotalReturnSwapDiscountingMethod;

        r1 := @parameter0: com.opengamma.analytics.financial.interestrate.bond.definition.BondTotalReturnSwap;

        r2 := @parameter1: com.opengamma.analytics.financial.provider.description.interestrate.IssuerProviderInterface;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "bond TRS");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, "issuer and multi-curve provider");

        $r7 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.bond.definition.BondTotalReturnSwap: com.opengamma.analytics.financial.interestrate.annuity.derivative.Annuity getFundingLeg()>();

        $r8 = <com.opengamma.analytics.financial.interestrate.bond.provider.BondTotalReturnSwapDiscountingMethod: com.opengamma.analytics.financial.provider.calculator.issuer.PresentValueIssuerCalculator PVIC>;

        $r9 = virtualinvoke $r7.<com.opengamma.analytics.financial.interestrate.annuity.derivative.Annuity: java.lang.Object accept(com.opengamma.analytics.financial.interestrate.InstrumentDerivativeVisitor,java.lang.Object)>($r8, r2);

        r3 = (com.opengamma.util.money.MultipleCurrencyAmount) $r9;

        $r10 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.bond.definition.BondTotalReturnSwap: com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity getAsset()>();

        $r11 = <com.opengamma.analytics.financial.interestrate.bond.provider.BondTotalReturnSwapDiscountingMethod: com.opengamma.analytics.financial.provider.calculator.issuer.PresentValueIssuerCalculator PVIC>;

        $r12 = virtualinvoke $r10.<com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity: java.lang.Object accept(com.opengamma.analytics.financial.interestrate.InstrumentDerivativeVisitor,java.lang.Object)>($r11, r2);

        $r13 = (com.opengamma.util.money.MultipleCurrencyAmount) $r12;

        $d0 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.bond.definition.BondTotalReturnSwap: double getQuantity()>();

        r4 = virtualinvoke $r13.<com.opengamma.util.money.MultipleCurrencyAmount: com.opengamma.util.money.MultipleCurrencyAmount multipliedBy(double)>($d0);

        $r14 = virtualinvoke r4.<com.opengamma.util.money.MultipleCurrencyAmount: com.opengamma.util.money.MultipleCurrencyAmount plus(com.opengamma.util.money.MultipleCurrencyAmount)>(r3);

        return $r14;
    }

    public com.opengamma.util.money.MultipleCurrencyAmount presentValueAssetLeg(com.opengamma.analytics.financial.interestrate.bond.definition.BondTotalReturnSwap, com.opengamma.analytics.financial.provider.description.interestrate.IssuerProviderInterface)
    {
        com.opengamma.analytics.financial.interestrate.bond.provider.BondTotalReturnSwapDiscountingMethod r0;
        com.opengamma.analytics.financial.interestrate.bond.definition.BondTotalReturnSwap r1;
        com.opengamma.analytics.financial.provider.description.interestrate.IssuerProviderInterface r2;
        com.opengamma.util.money.MultipleCurrencyAmount r3, $r9;
        com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity $r6;
        com.opengamma.analytics.financial.provider.calculator.issuer.PresentValueIssuerCalculator $r7;
        java.lang.Object $r8;
        double $d0;

        r0 := @this: com.opengamma.analytics.financial.interestrate.bond.provider.BondTotalReturnSwapDiscountingMethod;

        r1 := @parameter0: com.opengamma.analytics.financial.interestrate.bond.definition.BondTotalReturnSwap;

        r2 := @parameter1: com.opengamma.analytics.financial.provider.description.interestrate.IssuerProviderInterface;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "bond TRS");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, "issuer and multi-curve provider");

        $r6 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.bond.definition.BondTotalReturnSwap: com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity getAsset()>();

        $r7 = <com.opengamma.analytics.financial.interestrate.bond.provider.BondTotalReturnSwapDiscountingMethod: com.opengamma.analytics.financial.provider.calculator.issuer.PresentValueIssuerCalculator PVIC>;

        $r8 = virtualinvoke $r6.<com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity: java.lang.Object accept(com.opengamma.analytics.financial.interestrate.InstrumentDerivativeVisitor,java.lang.Object)>($r7, r2);

        $r9 = (com.opengamma.util.money.MultipleCurrencyAmount) $r8;

        $d0 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.bond.definition.BondTotalReturnSwap: double getQuantity()>();

        r3 = virtualinvoke $r9.<com.opengamma.util.money.MultipleCurrencyAmount: com.opengamma.util.money.MultipleCurrencyAmount multipliedBy(double)>($d0);

        return r3;
    }

    public com.opengamma.util.money.MultipleCurrencyAmount presentValueAssetLeg(com.opengamma.analytics.financial.interestrate.bond.definition.BillTotalReturnSwap, com.opengamma.analytics.financial.provider.description.interestrate.IssuerProviderInterface)
    {
        com.opengamma.analytics.financial.interestrate.bond.provider.BondTotalReturnSwapDiscountingMethod r0;
        com.opengamma.analytics.financial.interestrate.bond.definition.BillTotalReturnSwap r1;
        com.opengamma.analytics.financial.provider.description.interestrate.IssuerProviderInterface r2;
        com.opengamma.util.money.MultipleCurrencyAmount r3, $r9;
        com.opengamma.analytics.financial.interestrate.bond.definition.BillSecurity $r6;
        com.opengamma.analytics.financial.provider.calculator.issuer.PresentValueIssuerCalculator $r7;
        java.lang.Object $r8;
        double $d0;

        r0 := @this: com.opengamma.analytics.financial.interestrate.bond.provider.BondTotalReturnSwapDiscountingMethod;

        r1 := @parameter0: com.opengamma.analytics.financial.interestrate.bond.definition.BillTotalReturnSwap;

        r2 := @parameter1: com.opengamma.analytics.financial.provider.description.interestrate.IssuerProviderInterface;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "bill TRS");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, "issuer and multi-curve provider");

        $r6 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.bond.definition.BillTotalReturnSwap: com.opengamma.analytics.financial.interestrate.bond.definition.BillSecurity getAsset()>();

        $r7 = <com.opengamma.analytics.financial.interestrate.bond.provider.BondTotalReturnSwapDiscountingMethod: com.opengamma.analytics.financial.provider.calculator.issuer.PresentValueIssuerCalculator PVIC>;

        $r8 = virtualinvoke $r6.<com.opengamma.analytics.financial.interestrate.bond.definition.BillSecurity: java.lang.Object accept(com.opengamma.analytics.financial.interestrate.InstrumentDerivativeVisitor,java.lang.Object)>($r7, r2);

        $r9 = (com.opengamma.util.money.MultipleCurrencyAmount) $r8;

        $d0 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.bond.definition.BillTotalReturnSwap: double getQuantity()>();

        r3 = virtualinvoke $r9.<com.opengamma.util.money.MultipleCurrencyAmount: com.opengamma.util.money.MultipleCurrencyAmount multipliedBy(double)>($d0);

        return r3;
    }

    public com.opengamma.util.money.MultipleCurrencyAmount presentValueFundingLeg(com.opengamma.analytics.financial.interestrate.bond.definition.BondTotalReturnSwap, com.opengamma.analytics.financial.provider.description.interestrate.IssuerProviderInterface)
    {
        com.opengamma.analytics.financial.interestrate.bond.provider.BondTotalReturnSwapDiscountingMethod r0;
        com.opengamma.analytics.financial.interestrate.bond.definition.BondTotalReturnSwap r1;
        com.opengamma.analytics.financial.provider.description.interestrate.IssuerProviderInterface r2;
        com.opengamma.util.money.MultipleCurrencyAmount r3;
        com.opengamma.analytics.financial.interestrate.annuity.derivative.Annuity $r6;
        com.opengamma.analytics.financial.provider.calculator.issuer.PresentValueIssuerCalculator $r7;
        java.lang.Object $r8;

        r0 := @this: com.opengamma.analytics.financial.interestrate.bond.provider.BondTotalReturnSwapDiscountingMethod;

        r1 := @parameter0: com.opengamma.analytics.financial.interestrate.bond.definition.BondTotalReturnSwap;

        r2 := @parameter1: com.opengamma.analytics.financial.provider.description.interestrate.IssuerProviderInterface;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "bond TRS");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, "issuer and multi-curve provider");

        $r6 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.bond.definition.BondTotalReturnSwap: com.opengamma.analytics.financial.interestrate.annuity.derivative.Annuity getFundingLeg()>();

        $r7 = staticinvoke <com.opengamma.analytics.financial.provider.calculator.issuer.PresentValueIssuerCalculator: com.opengamma.analytics.financial.provider.calculator.issuer.PresentValueIssuerCalculator getInstance()>();

        $r8 = virtualinvoke $r6.<com.opengamma.analytics.financial.interestrate.annuity.derivative.Annuity: java.lang.Object accept(com.opengamma.analytics.financial.interestrate.InstrumentDerivativeVisitor,java.lang.Object)>($r7, r2);

        r3 = (com.opengamma.util.money.MultipleCurrencyAmount) $r8;

        return r3;
    }

    public com.opengamma.util.money.MultipleCurrencyAmount presentValueFundingLeg(com.opengamma.analytics.financial.interestrate.bond.definition.BillTotalReturnSwap, com.opengamma.analytics.financial.provider.description.interestrate.IssuerProviderInterface)
    {
        com.opengamma.analytics.financial.interestrate.bond.provider.BondTotalReturnSwapDiscountingMethod r0;
        com.opengamma.analytics.financial.interestrate.bond.definition.BillTotalReturnSwap r1;
        com.opengamma.analytics.financial.provider.description.interestrate.IssuerProviderInterface r2;
        com.opengamma.util.money.MultipleCurrencyAmount r3;
        com.opengamma.analytics.financial.interestrate.annuity.derivative.Annuity $r6;
        com.opengamma.analytics.financial.provider.calculator.issuer.PresentValueIssuerCalculator $r7;
        java.lang.Object $r8;

        r0 := @this: com.opengamma.analytics.financial.interestrate.bond.provider.BondTotalReturnSwapDiscountingMethod;

        r1 := @parameter0: com.opengamma.analytics.financial.interestrate.bond.definition.BillTotalReturnSwap;

        r2 := @parameter1: com.opengamma.analytics.financial.provider.description.interestrate.IssuerProviderInterface;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "bill TRS");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, "issuer and multi-curve provider");

        $r6 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.bond.definition.BillTotalReturnSwap: com.opengamma.analytics.financial.interestrate.annuity.derivative.Annuity getFundingLeg()>();

        $r7 = staticinvoke <com.opengamma.analytics.financial.provider.calculator.issuer.PresentValueIssuerCalculator: com.opengamma.analytics.financial.provider.calculator.issuer.PresentValueIssuerCalculator getInstance()>();

        $r8 = virtualinvoke $r6.<com.opengamma.analytics.financial.interestrate.annuity.derivative.Annuity: java.lang.Object accept(com.opengamma.analytics.financial.interestrate.InstrumentDerivativeVisitor,java.lang.Object)>($r7, r2);

        r3 = (com.opengamma.util.money.MultipleCurrencyAmount) $r8;

        return r3;
    }

    public com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyMulticurveSensitivity presentValueCurveSensitivity(com.opengamma.analytics.financial.interestrate.bond.definition.BondTotalReturnSwap, com.opengamma.analytics.financial.provider.description.interestrate.IssuerProviderInterface)
    {
        com.opengamma.analytics.financial.interestrate.bond.provider.BondTotalReturnSwapDiscountingMethod r0;
        com.opengamma.analytics.financial.interestrate.bond.definition.BondTotalReturnSwap r1;
        com.opengamma.analytics.financial.provider.description.interestrate.IssuerProviderInterface r2;
        com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyMulticurveSensitivity r3, r4, $r13, $r14;
        com.opengamma.analytics.financial.interestrate.annuity.derivative.Annuity $r7;
        com.opengamma.analytics.financial.provider.calculator.issuer.PresentValueCurveSensitivityIssuerCalculator $r8, $r11;
        java.lang.Object $r9, $r12;
        com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity $r10;
        double $d0;

        r0 := @this: com.opengamma.analytics.financial.interestrate.bond.provider.BondTotalReturnSwapDiscountingMethod;

        r1 := @parameter0: com.opengamma.analytics.financial.interestrate.bond.definition.BondTotalReturnSwap;

        r2 := @parameter1: com.opengamma.analytics.financial.provider.description.interestrate.IssuerProviderInterface;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "bond TRS");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, "issuer and multi-curve provider");

        $r7 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.bond.definition.BondTotalReturnSwap: com.opengamma.analytics.financial.interestrate.annuity.derivative.Annuity getFundingLeg()>();

        $r8 = <com.opengamma.analytics.financial.interestrate.bond.provider.BondTotalReturnSwapDiscountingMethod: com.opengamma.analytics.financial.provider.calculator.issuer.PresentValueCurveSensitivityIssuerCalculator PVCSIC>;

        $r9 = virtualinvoke $r7.<com.opengamma.analytics.financial.interestrate.annuity.derivative.Annuity: java.lang.Object accept(com.opengamma.analytics.financial.interestrate.InstrumentDerivativeVisitor,java.lang.Object)>($r8, r2);

        r3 = (com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyMulticurveSensitivity) $r9;

        $r10 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.bond.definition.BondTotalReturnSwap: com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity getAsset()>();

        $r11 = <com.opengamma.analytics.financial.interestrate.bond.provider.BondTotalReturnSwapDiscountingMethod: com.opengamma.analytics.financial.provider.calculator.issuer.PresentValueCurveSensitivityIssuerCalculator PVCSIC>;

        $r12 = virtualinvoke $r10.<com.opengamma.analytics.financial.interestrate.bond.definition.BondFixedSecurity: java.lang.Object accept(com.opengamma.analytics.financial.interestrate.InstrumentDerivativeVisitor,java.lang.Object)>($r11, r2);

        $r13 = (com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyMulticurveSensitivity) $r12;

        $d0 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.bond.definition.BondTotalReturnSwap: double getQuantity()>();

        r4 = virtualinvoke $r13.<com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyMulticurveSensitivity: com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyMulticurveSensitivity multipliedBy(double)>($d0);

        $r14 = virtualinvoke r4.<com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyMulticurveSensitivity: com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyMulticurveSensitivity plus(com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyMulticurveSensitivity)>(r3);

        return $r14;
    }

    static void <clinit>()
    {
        com.opengamma.analytics.financial.interestrate.bond.provider.BondTotalReturnSwapDiscountingMethod $r0;
        com.opengamma.analytics.financial.provider.calculator.issuer.PresentValueIssuerCalculator $r1;
        com.opengamma.analytics.financial.provider.calculator.issuer.PresentValueCurveSensitivityIssuerCalculator $r2;

        $r0 = new com.opengamma.analytics.financial.interestrate.bond.provider.BondTotalReturnSwapDiscountingMethod;

        specialinvoke $r0.<com.opengamma.analytics.financial.interestrate.bond.provider.BondTotalReturnSwapDiscountingMethod: void <init>()>();

        <com.opengamma.analytics.financial.interestrate.bond.provider.BondTotalReturnSwapDiscountingMethod: com.opengamma.analytics.financial.interestrate.bond.provider.BondTotalReturnSwapDiscountingMethod INSTANCE> = $r0;

        $r1 = staticinvoke <com.opengamma.analytics.financial.provider.calculator.issuer.PresentValueIssuerCalculator: com.opengamma.analytics.financial.provider.calculator.issuer.PresentValueIssuerCalculator getInstance()>();

        <com.opengamma.analytics.financial.interestrate.bond.provider.BondTotalReturnSwapDiscountingMethod: com.opengamma.analytics.financial.provider.calculator.issuer.PresentValueIssuerCalculator PVIC> = $r1;

        $r2 = staticinvoke <com.opengamma.analytics.financial.provider.calculator.issuer.PresentValueCurveSensitivityIssuerCalculator: com.opengamma.analytics.financial.provider.calculator.issuer.PresentValueCurveSensitivityIssuerCalculator getInstance()>();

        <com.opengamma.analytics.financial.interestrate.bond.provider.BondTotalReturnSwapDiscountingMethod: com.opengamma.analytics.financial.provider.calculator.issuer.PresentValueCurveSensitivityIssuerCalculator PVCSIC> = $r2;

        return;
    }
}
