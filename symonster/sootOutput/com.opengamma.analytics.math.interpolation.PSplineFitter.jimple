public class com.opengamma.analytics.math.interpolation.PSplineFitter extends java.lang.Object
{
    private final com.opengamma.analytics.math.interpolation.BasisFunctionGenerator _generator;
    private final com.opengamma.analytics.math.statistics.leastsquare.GeneralizedLeastSquare _gls;

    public void <init>()
    {
        com.opengamma.analytics.math.interpolation.PSplineFitter r0;
        com.opengamma.analytics.math.interpolation.BasisFunctionGenerator $r1;
        com.opengamma.analytics.math.statistics.leastsquare.GeneralizedLeastSquare $r2;

        r0 := @this: com.opengamma.analytics.math.interpolation.PSplineFitter;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new com.opengamma.analytics.math.interpolation.BasisFunctionGenerator;

        specialinvoke $r1.<com.opengamma.analytics.math.interpolation.BasisFunctionGenerator: void <init>()>();

        r0.<com.opengamma.analytics.math.interpolation.PSplineFitter: com.opengamma.analytics.math.interpolation.BasisFunctionGenerator _generator> = $r1;

        $r2 = new com.opengamma.analytics.math.statistics.leastsquare.GeneralizedLeastSquare;

        specialinvoke $r2.<com.opengamma.analytics.math.statistics.leastsquare.GeneralizedLeastSquare: void <init>()>();

        r0.<com.opengamma.analytics.math.interpolation.PSplineFitter: com.opengamma.analytics.math.statistics.leastsquare.GeneralizedLeastSquare _gls> = $r2;

        return;
    }

    public com.opengamma.analytics.math.statistics.leastsquare.GeneralizedLeastSquareResults solve(java.util.List, java.util.List, java.util.List, double, double, int, int, double, int)
    {
        com.opengamma.analytics.math.interpolation.PSplineFitter r0;
        java.util.List r1, r2, r3, r4;
        double d0, d1, d2;
        int i0, i1, i2;
        com.opengamma.analytics.math.interpolation.BasisFunctionGenerator $r5;
        com.opengamma.analytics.math.statistics.leastsquare.GeneralizedLeastSquare $r6;
        com.opengamma.analytics.math.statistics.leastsquare.GeneralizedLeastSquareResults $r7;

        r0 := @this: com.opengamma.analytics.math.interpolation.PSplineFitter;

        r1 := @parameter0: java.util.List;

        r2 := @parameter1: java.util.List;

        r3 := @parameter2: java.util.List;

        d0 := @parameter3: double;

        d1 := @parameter4: double;

        i0 := @parameter5: int;

        i1 := @parameter6: int;

        d2 := @parameter7: double;

        i2 := @parameter8: int;

        $r5 = r0.<com.opengamma.analytics.math.interpolation.PSplineFitter: com.opengamma.analytics.math.interpolation.BasisFunctionGenerator _generator>;

        r4 = virtualinvoke $r5.<com.opengamma.analytics.math.interpolation.BasisFunctionGenerator: java.util.List generateSet(double,double,int,int)>(d0, d1, i0, i1);

        $r6 = r0.<com.opengamma.analytics.math.interpolation.PSplineFitter: com.opengamma.analytics.math.statistics.leastsquare.GeneralizedLeastSquare _gls>;

        $r7 = virtualinvoke $r6.<com.opengamma.analytics.math.statistics.leastsquare.GeneralizedLeastSquare: com.opengamma.analytics.math.statistics.leastsquare.GeneralizedLeastSquareResults solve(java.util.List,java.util.List,java.util.List,java.util.List,double,int)>(r1, r2, r3, r4, d2, i2);

        return $r7;
    }

    public com.opengamma.analytics.math.statistics.leastsquare.GeneralizedLeastSquareResults solve(java.util.List, java.util.List, java.util.List, double[], double[], int[], int[], double[], int[])
    {
        com.opengamma.analytics.math.interpolation.PSplineFitter r0;
        java.util.List r1, r2, r3, r10;
        double[] r4, r5, r8;
        int[] r6, r7, r9, r11;
        int i0, $i1, $i2, $i3, $i4, i5;
        com.opengamma.analytics.math.interpolation.BasisFunctionGenerator $r12;
        com.opengamma.analytics.math.statistics.leastsquare.GeneralizedLeastSquare $r13;
        com.opengamma.analytics.math.statistics.leastsquare.GeneralizedLeastSquareResults $r14;

        r0 := @this: com.opengamma.analytics.math.interpolation.PSplineFitter;

        r1 := @parameter0: java.util.List;

        r2 := @parameter1: java.util.List;

        r3 := @parameter2: java.util.List;

        r4 := @parameter3: double[];

        r5 := @parameter4: double[];

        r6 := @parameter5: int[];

        r7 := @parameter6: int[];

        r8 := @parameter7: double[];

        r9 := @parameter8: int[];

        $r12 = r0.<com.opengamma.analytics.math.interpolation.PSplineFitter: com.opengamma.analytics.math.interpolation.BasisFunctionGenerator _generator>;

        r10 = virtualinvoke $r12.<com.opengamma.analytics.math.interpolation.BasisFunctionGenerator: java.util.List generateSet(double[],double[],int[],int[])>(r4, r5, r6, r7);

        i0 = lengthof r4;

        r11 = newarray (int)[i0];

        i5 = 0;

     label1:
        if i5 >= i0 goto label2;

        $i2 = r6[i5];

        $i1 = r7[i5];

        $i3 = $i2 + $i1;

        $i4 = $i3 - 1;

        r11[i5] = $i4;

        i5 = i5 + 1;

        goto label1;

     label2:
        $r13 = r0.<com.opengamma.analytics.math.interpolation.PSplineFitter: com.opengamma.analytics.math.statistics.leastsquare.GeneralizedLeastSquare _gls>;

        $r14 = virtualinvoke $r13.<com.opengamma.analytics.math.statistics.leastsquare.GeneralizedLeastSquare: com.opengamma.analytics.math.statistics.leastsquare.GeneralizedLeastSquareResults solve(java.util.List,java.util.List,java.util.List,java.util.List,int[],double[],int[])>(r1, r2, r3, r10, r11, r8, r9);

        return $r14;
    }
}
