public class com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolatorMixedLogNormal extends com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolator
{
    private static final com.opengamma.analytics.financial.model.volatility.smile.function.VolatilityFunctionProvider MODEL;

    public void <init>()
    {
        com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolatorMixedLogNormal r0;
        com.opengamma.analytics.financial.model.volatility.smile.function.VolatilityFunctionProvider $r1;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolatorMixedLogNormal;

        $r1 = <com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolatorMixedLogNormal: com.opengamma.analytics.financial.model.volatility.smile.function.VolatilityFunctionProvider MODEL>;

        specialinvoke r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolator: void <init>(com.opengamma.analytics.financial.model.volatility.smile.function.VolatilityFunctionProvider)>($r1);

        return;
    }

    public void <init>(int)
    {
        com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolatorMixedLogNormal r0;
        int i0;
        com.opengamma.analytics.financial.model.volatility.smile.function.VolatilityFunctionProvider $r1;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolatorMixedLogNormal;

        i0 := @parameter0: int;

        $r1 = <com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolatorMixedLogNormal: com.opengamma.analytics.financial.model.volatility.smile.function.VolatilityFunctionProvider MODEL>;

        specialinvoke r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolator: void <init>(int,com.opengamma.analytics.financial.model.volatility.smile.function.VolatilityFunctionProvider)>(i0, $r1);

        return;
    }

    public void <init>(com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.WeightingFunction)
    {
        com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolatorMixedLogNormal r0;
        com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.WeightingFunction r1;
        com.opengamma.analytics.financial.model.volatility.smile.function.VolatilityFunctionProvider $r2;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolatorMixedLogNormal;

        r1 := @parameter0: com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.WeightingFunction;

        $r2 = <com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolatorMixedLogNormal: com.opengamma.analytics.financial.model.volatility.smile.function.VolatilityFunctionProvider MODEL>;

        specialinvoke r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolator: void <init>(com.opengamma.analytics.financial.model.volatility.smile.function.VolatilityFunctionProvider,com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.WeightingFunction)>($r2, r1);

        return;
    }

    public void <init>(int, com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.WeightingFunction)
    {
        com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolatorMixedLogNormal r0;
        int i0;
        com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.WeightingFunction r1;
        com.opengamma.analytics.financial.model.volatility.smile.function.VolatilityFunctionProvider $r2;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolatorMixedLogNormal;

        i0 := @parameter0: int;

        r1 := @parameter1: com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.WeightingFunction;

        $r2 = <com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolatorMixedLogNormal: com.opengamma.analytics.financial.model.volatility.smile.function.VolatilityFunctionProvider MODEL>;

        specialinvoke r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolator: void <init>(int,com.opengamma.analytics.financial.model.volatility.smile.function.VolatilityFunctionProvider,com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.WeightingFunction)>(i0, $r2, r1);

        return;
    }

    protected com.opengamma.analytics.math.matrix.DoubleMatrix1D getGlobalStart(double, double[], double, double[])
    {
        com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolatorMixedLogNormal r0;
        double d0, d1, d2, d3, d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, d16;
        double[] r1, r2, $r12, $r14;
        cern.jet.random.engine.RandomEngine r3;
        com.opengamma.analytics.math.matrix.DoubleMatrix1D r4, $r11, $r13;
        int[] $r5, $r7, $r9;
        java.lang.Double $r6, $r8, $r10;
        byte $b0, $b1;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolatorMixedLogNormal;

        d0 := @parameter0: double;

        r1 := @parameter1: double[];

        d1 := @parameter2: double;

        r2 := @parameter3: double[];

        r3 = virtualinvoke r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolatorMixedLogNormal: cern.jet.random.engine.RandomEngine getRandom()>();

        r4 = virtualinvoke r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolatorMixedLogNormal: com.opengamma.analytics.math.matrix.DoubleMatrix1D getPolynomialFit(double,double[],double[])>(d0, r1, r2);

        $r5 = newarray (int)[1];

        $r5[0] = 0;

        $r6 = virtualinvoke r4.<com.opengamma.analytics.math.matrix.DoubleMatrix1D: java.lang.Double getEntry(int[])>($r5);

        d2 = virtualinvoke $r6.<java.lang.Double: double doubleValue()>();

        $r7 = newarray (int)[1];

        $r7[0] = 1;

        $r8 = virtualinvoke r4.<com.opengamma.analytics.math.matrix.DoubleMatrix1D: java.lang.Double getEntry(int[])>($r7);

        d3 = virtualinvoke $r8.<java.lang.Double: double doubleValue()>();

        $r9 = newarray (int)[1];

        $r9[0] = 2;

        $r10 = virtualinvoke r4.<com.opengamma.analytics.math.matrix.DoubleMatrix1D: java.lang.Double getEntry(int[])>($r9);

        d4 = virtualinvoke $r10.<java.lang.Double: double doubleValue()>();

        $d5 = staticinvoke <java.lang.Math: double abs(double)>(d3);

        $b0 = $d5 cmpg 0.001;

        if $b0 >= 0 goto label1;

        $d14 = staticinvoke <java.lang.Math: double abs(double)>(d4);

        $b1 = $d14 cmpg 0.001;

        if $b1 >= 0 goto label1;

        $r13 = new com.opengamma.analytics.math.matrix.DoubleMatrix1D;

        $r14 = newarray (double)[4];

        $r14[0] = d2;

        $r14[1] = 0.01;

        $r14[2] = 1.5607963267948965;

        $r14[3] = 1.5607963267948965;

        specialinvoke $r13.<com.opengamma.analytics.math.matrix.DoubleMatrix1D: void <init>(double[])>($r14);

        return $r13;

     label1:
        $d6 = virtualinvoke r3.<cern.jet.random.engine.RandomEngine: double nextDouble()>();

        d16 = 1.5707963267948966 * $d6;

        $r11 = new com.opengamma.analytics.math.matrix.DoubleMatrix1D;

        $r12 = newarray (double)[4];

        $d7 = virtualinvoke r3.<cern.jet.random.engine.RandomEngine: double nextDouble()>();

        $d8 = 0.4 * $d7;

        $d9 = 0.8 + $d8;

        $d10 = d2 * $d9;

        $r12[0] = $d10;

        $d11 = d2 * 0.5;

        $d12 = virtualinvoke r3.<cern.jet.random.engine.RandomEngine: double nextDouble()>();

        $d13 = $d11 * $d12;

        $r12[1] = $d13;

        $r12[2] = d16;

        $r12[3] = d16;

        specialinvoke $r11.<com.opengamma.analytics.math.matrix.DoubleMatrix1D: void <init>(double[])>($r12);

        return $r11;
    }

    protected java.util.BitSet getLocalFixedValues()
    {
        com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolatorMixedLogNormal r0;
        java.util.BitSet $r2;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolatorMixedLogNormal;

        $r2 = new java.util.BitSet;

        specialinvoke $r2.<java.util.BitSet: void <init>()>();

        virtualinvoke $r2.<java.util.BitSet: void set(int)>(2);

        return $r2;
    }

    protected com.opengamma.analytics.financial.model.volatility.smile.function.MixedLogNormalModelData toSmileModelData(com.opengamma.analytics.math.matrix.DoubleMatrix1D)
    {
        com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolatorMixedLogNormal r0;
        com.opengamma.analytics.math.matrix.DoubleMatrix1D r1;
        com.opengamma.analytics.financial.model.volatility.smile.function.MixedLogNormalModelData $r3;
        double[] $r4;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolatorMixedLogNormal;

        r1 := @parameter0: com.opengamma.analytics.math.matrix.DoubleMatrix1D;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "model parameters");

        $r3 = new com.opengamma.analytics.financial.model.volatility.smile.function.MixedLogNormalModelData;

        $r4 = virtualinvoke r1.<com.opengamma.analytics.math.matrix.DoubleMatrix1D: double[] getData()>();

        specialinvoke $r3.<com.opengamma.analytics.financial.model.volatility.smile.function.MixedLogNormalModelData: void <init>(double[])>($r4);

        return $r3;
    }

    protected com.opengamma.analytics.financial.model.volatility.smile.fitting.SmileModelFitter getFitter(double, double[], double, double[], double[])
    {
        com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolatorMixedLogNormal r0;
        double d0, d1;
        double[] r1, r2, r3;
        com.opengamma.analytics.financial.model.volatility.smile.fitting.MixedLogNormalModelFitter $r4;
        com.opengamma.analytics.financial.model.volatility.smile.function.VolatilityFunctionProvider $r5;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolatorMixedLogNormal;

        d0 := @parameter0: double;

        r1 := @parameter1: double[];

        d1 := @parameter2: double;

        r2 := @parameter3: double[];

        r3 := @parameter4: double[];

        $r4 = new com.opengamma.analytics.financial.model.volatility.smile.fitting.MixedLogNormalModelFitter;

        $r5 = <com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolatorMixedLogNormal: com.opengamma.analytics.financial.model.volatility.smile.function.VolatilityFunctionProvider MODEL>;

        specialinvoke $r4.<com.opengamma.analytics.financial.model.volatility.smile.fitting.MixedLogNormalModelFitter: void <init>(double,double[],double,double[],double[],com.opengamma.analytics.financial.model.volatility.smile.function.VolatilityFunctionProvider,int,boolean)>(d0, r1, d1, r2, r3, $r5, 2, 1);

        return $r4;
    }

    protected volatile com.opengamma.analytics.financial.model.volatility.smile.function.SmileModelData toSmileModelData(com.opengamma.analytics.math.matrix.DoubleMatrix1D)
    {
        com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolatorMixedLogNormal r0;
        com.opengamma.analytics.math.matrix.DoubleMatrix1D r1;
        com.opengamma.analytics.financial.model.volatility.smile.function.MixedLogNormalModelData $r2;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolatorMixedLogNormal;

        r1 := @parameter0: com.opengamma.analytics.math.matrix.DoubleMatrix1D;

        $r2 = virtualinvoke r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolatorMixedLogNormal: com.opengamma.analytics.financial.model.volatility.smile.function.MixedLogNormalModelData toSmileModelData(com.opengamma.analytics.math.matrix.DoubleMatrix1D)>(r1);

        return $r2;
    }

    static void <clinit>()
    {
        com.opengamma.analytics.financial.model.volatility.smile.function.MixedLogNormalVolatilityFunction $r0;

        $r0 = staticinvoke <com.opengamma.analytics.financial.model.volatility.smile.function.MixedLogNormalVolatilityFunction: com.opengamma.analytics.financial.model.volatility.smile.function.MixedLogNormalVolatilityFunction getInstance()>();

        <com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolatorMixedLogNormal: com.opengamma.analytics.financial.model.volatility.smile.function.VolatilityFunctionProvider MODEL> = $r0;

        return;
    }
}
