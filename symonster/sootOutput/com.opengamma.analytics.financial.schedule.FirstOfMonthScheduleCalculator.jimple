public class com.opengamma.analytics.financial.schedule.FirstOfMonthScheduleCalculator extends com.opengamma.analytics.financial.schedule.Schedule
{

    public void <init>()
    {
        com.opengamma.analytics.financial.schedule.FirstOfMonthScheduleCalculator r0;

        r0 := @this: com.opengamma.analytics.financial.schedule.FirstOfMonthScheduleCalculator;

        specialinvoke r0.<com.opengamma.analytics.financial.schedule.Schedule: void <init>()>();

        return;
    }

    public org.threeten.bp.LocalDate[] getSchedule(org.threeten.bp.LocalDate, org.threeten.bp.LocalDate, boolean, boolean)
    {
        com.opengamma.analytics.financial.schedule.FirstOfMonthScheduleCalculator r0;
        org.threeten.bp.LocalDate r1, r2;
        boolean z0, z1;
        org.threeten.bp.LocalDate[] $r3;

        r0 := @this: com.opengamma.analytics.financial.schedule.FirstOfMonthScheduleCalculator;

        r1 := @parameter0: org.threeten.bp.LocalDate;

        r2 := @parameter1: org.threeten.bp.LocalDate;

        z0 := @parameter2: boolean;

        z1 := @parameter3: boolean;

        $r3 = virtualinvoke r0.<com.opengamma.analytics.financial.schedule.FirstOfMonthScheduleCalculator: org.threeten.bp.LocalDate[] getSchedule(org.threeten.bp.LocalDate,org.threeten.bp.LocalDate)>(r1, r2);

        return $r3;
    }

    public org.threeten.bp.LocalDate[] getSchedule(org.threeten.bp.LocalDate, org.threeten.bp.LocalDate)
    {
        com.opengamma.analytics.financial.schedule.FirstOfMonthScheduleCalculator r0;
        org.threeten.bp.LocalDate r1, r2, r13;
        boolean $z0, $z1, $z2, $z4;
        java.util.ArrayList $r6;
        org.threeten.bp.temporal.TemporalAdjuster $r7;
        org.threeten.bp.LocalDate[] $r8, $r10, $r12;
        java.lang.Object[] $r9;
        int $i0;
        java.lang.IllegalArgumentException $r11;

        r0 := @this: com.opengamma.analytics.financial.schedule.FirstOfMonthScheduleCalculator;

        r1 := @parameter0: org.threeten.bp.LocalDate;

        r2 := @parameter1: org.threeten.bp.LocalDate;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "start date");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, "end date");

        $z0 = virtualinvoke r1.<org.threeten.bp.LocalDate: boolean isAfter(org.threeten.bp.chrono.ChronoLocalDate)>(r2);

        staticinvoke <com.opengamma.util.ArgumentChecker: void isFalse(boolean,java.lang.String)>($z0, "start date must not be after end date");

        $z1 = virtualinvoke r1.<org.threeten.bp.LocalDate: boolean equals(java.lang.Object)>(r2);

        if $z1 == 0 goto label2;

        $i0 = virtualinvoke r1.<org.threeten.bp.LocalDate: int getDayOfMonth()>();

        if $i0 != 1 goto label1;

        $r12 = newarray (org.threeten.bp.LocalDate)[1];

        $r12[0] = r1;

        return $r12;

     label1:
        $r11 = new java.lang.IllegalArgumentException;

        specialinvoke $r11.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Start date and end date were the same but neither was the first day of the month");

        throw $r11;

     label2:
        $r6 = new java.util.ArrayList;

        specialinvoke $r6.<java.util.ArrayList: void <init>()>();

        $r7 = staticinvoke <org.threeten.bp.temporal.TemporalAdjusters: org.threeten.bp.temporal.TemporalAdjuster firstDayOfMonth()>();

        r13 = virtualinvoke r1.<org.threeten.bp.LocalDate: org.threeten.bp.LocalDate 'with'(org.threeten.bp.temporal.TemporalAdjuster)>($r7);

        $z2 = virtualinvoke r13.<org.threeten.bp.LocalDate: boolean isBefore(org.threeten.bp.chrono.ChronoLocalDate)>(r1);

        if $z2 == 0 goto label3;

        r13 = virtualinvoke r13.<org.threeten.bp.LocalDate: org.threeten.bp.LocalDate plusMonths(long)>(1L);

     label3:
        $z4 = virtualinvoke r13.<org.threeten.bp.LocalDate: boolean isAfter(org.threeten.bp.chrono.ChronoLocalDate)>(r2);

        if $z4 != 0 goto label4;

        interfaceinvoke $r6.<java.util.List: boolean add(java.lang.Object)>(r13);

        r13 = virtualinvoke r13.<org.threeten.bp.LocalDate: org.threeten.bp.LocalDate plusMonths(long)>(1L);

        goto label3;

     label4:
        $r8 = <com.opengamma.analytics.financial.schedule.FirstOfMonthScheduleCalculator: org.threeten.bp.LocalDate[] EMPTY_LOCAL_DATE_ARRAY>;

        $r9 = interfaceinvoke $r6.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r8);

        $r10 = (org.threeten.bp.LocalDate[]) $r9;

        return $r10;
    }

    public org.threeten.bp.ZonedDateTime[] getSchedule(org.threeten.bp.ZonedDateTime, org.threeten.bp.ZonedDateTime, boolean, boolean)
    {
        com.opengamma.analytics.financial.schedule.FirstOfMonthScheduleCalculator r0;
        org.threeten.bp.ZonedDateTime r1, r2;
        boolean z0, z1;
        org.threeten.bp.ZonedDateTime[] $r3;

        r0 := @this: com.opengamma.analytics.financial.schedule.FirstOfMonthScheduleCalculator;

        r1 := @parameter0: org.threeten.bp.ZonedDateTime;

        r2 := @parameter1: org.threeten.bp.ZonedDateTime;

        z0 := @parameter2: boolean;

        z1 := @parameter3: boolean;

        $r3 = virtualinvoke r0.<com.opengamma.analytics.financial.schedule.FirstOfMonthScheduleCalculator: org.threeten.bp.ZonedDateTime[] getSchedule(org.threeten.bp.ZonedDateTime,org.threeten.bp.ZonedDateTime)>(r1, r2);

        return $r3;
    }

    public org.threeten.bp.ZonedDateTime[] getSchedule(org.threeten.bp.ZonedDateTime, org.threeten.bp.ZonedDateTime)
    {
        com.opengamma.analytics.financial.schedule.FirstOfMonthScheduleCalculator r0;
        org.threeten.bp.ZonedDateTime r1, r2, r13;
        boolean $z0, $z1, $z2, $z4;
        java.util.ArrayList $r6;
        org.threeten.bp.temporal.TemporalAdjuster $r7;
        org.threeten.bp.ZonedDateTime[] $r8, $r10, $r12;
        java.lang.Object[] $r9;
        int $i0;
        java.lang.IllegalArgumentException $r11;

        r0 := @this: com.opengamma.analytics.financial.schedule.FirstOfMonthScheduleCalculator;

        r1 := @parameter0: org.threeten.bp.ZonedDateTime;

        r2 := @parameter1: org.threeten.bp.ZonedDateTime;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "start date");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, "end date");

        $z0 = virtualinvoke r1.<org.threeten.bp.ZonedDateTime: boolean isAfter(org.threeten.bp.chrono.ChronoZonedDateTime)>(r2);

        staticinvoke <com.opengamma.util.ArgumentChecker: void isFalse(boolean,java.lang.String)>($z0, "start date must not be after end date");

        $z1 = virtualinvoke r1.<org.threeten.bp.ZonedDateTime: boolean equals(java.lang.Object)>(r2);

        if $z1 == 0 goto label2;

        $i0 = virtualinvoke r1.<org.threeten.bp.ZonedDateTime: int getDayOfMonth()>();

        if $i0 != 1 goto label1;

        $r12 = newarray (org.threeten.bp.ZonedDateTime)[1];

        $r12[0] = r1;

        return $r12;

     label1:
        $r11 = new java.lang.IllegalArgumentException;

        specialinvoke $r11.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Start date and end date were the same but neither was the first day of the month");

        throw $r11;

     label2:
        $r6 = new java.util.ArrayList;

        specialinvoke $r6.<java.util.ArrayList: void <init>()>();

        $r7 = staticinvoke <org.threeten.bp.temporal.TemporalAdjusters: org.threeten.bp.temporal.TemporalAdjuster firstDayOfMonth()>();

        r13 = virtualinvoke r1.<org.threeten.bp.ZonedDateTime: org.threeten.bp.ZonedDateTime 'with'(org.threeten.bp.temporal.TemporalAdjuster)>($r7);

        $z2 = virtualinvoke r13.<org.threeten.bp.ZonedDateTime: boolean isBefore(org.threeten.bp.chrono.ChronoZonedDateTime)>(r1);

        if $z2 == 0 goto label3;

        r13 = virtualinvoke r13.<org.threeten.bp.ZonedDateTime: org.threeten.bp.ZonedDateTime plusMonths(long)>(1L);

     label3:
        $z4 = virtualinvoke r13.<org.threeten.bp.ZonedDateTime: boolean isAfter(org.threeten.bp.chrono.ChronoZonedDateTime)>(r2);

        if $z4 != 0 goto label4;

        interfaceinvoke $r6.<java.util.List: boolean add(java.lang.Object)>(r13);

        r13 = virtualinvoke r13.<org.threeten.bp.ZonedDateTime: org.threeten.bp.ZonedDateTime plusMonths(long)>(1L);

        goto label3;

     label4:
        $r8 = <com.opengamma.analytics.financial.schedule.FirstOfMonthScheduleCalculator: org.threeten.bp.ZonedDateTime[] EMPTY_ZONED_DATE_TIME_ARRAY>;

        $r9 = interfaceinvoke $r6.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r8);

        $r10 = (org.threeten.bp.ZonedDateTime[]) $r9;

        return $r10;
    }
}
