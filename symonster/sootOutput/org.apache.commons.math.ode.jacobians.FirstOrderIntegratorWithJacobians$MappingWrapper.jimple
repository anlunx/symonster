class org.apache.commons.math.ode.jacobians.FirstOrderIntegratorWithJacobians$MappingWrapper extends java.lang.Object implements org.apache.commons.math.ode.ExtendedFirstOrderDifferentialEquations
{
    private final double[] y;
    private final double[] yDot;
    private final double[][] dFdY;
    private final double[][] dFdP;
    final org.apache.commons.math.ode.jacobians.FirstOrderIntegratorWithJacobians this$0;

    public void <init>(org.apache.commons.math.ode.jacobians.FirstOrderIntegratorWithJacobians)
    {
        org.apache.commons.math.ode.jacobians.FirstOrderIntegratorWithJacobians$MappingWrapper r0;
        org.apache.commons.math.ode.jacobians.FirstOrderIntegratorWithJacobians r1;
        int i0, i1;
        org.apache.commons.math.ode.jacobians.ODEWithJacobians $r2, $r3;
        double[] $r4, $r5;
        double[][] $r6, $r7;

        r0 := @this: org.apache.commons.math.ode.jacobians.FirstOrderIntegratorWithJacobians$MappingWrapper;

        r1 := @parameter0: org.apache.commons.math.ode.jacobians.FirstOrderIntegratorWithJacobians;

        r0.<org.apache.commons.math.ode.jacobians.FirstOrderIntegratorWithJacobians$MappingWrapper: org.apache.commons.math.ode.jacobians.FirstOrderIntegratorWithJacobians this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = staticinvoke <org.apache.commons.math.ode.jacobians.FirstOrderIntegratorWithJacobians: org.apache.commons.math.ode.jacobians.ODEWithJacobians access$000(org.apache.commons.math.ode.jacobians.FirstOrderIntegratorWithJacobians)>(r1);

        i0 = interfaceinvoke $r2.<org.apache.commons.math.ode.jacobians.ODEWithJacobians: int getDimension()>();

        $r3 = staticinvoke <org.apache.commons.math.ode.jacobians.FirstOrderIntegratorWithJacobians: org.apache.commons.math.ode.jacobians.ODEWithJacobians access$000(org.apache.commons.math.ode.jacobians.FirstOrderIntegratorWithJacobians)>(r1);

        i1 = interfaceinvoke $r3.<org.apache.commons.math.ode.jacobians.ODEWithJacobians: int getParametersDimension()>();

        $r4 = newarray (double)[i0];

        r0.<org.apache.commons.math.ode.jacobians.FirstOrderIntegratorWithJacobians$MappingWrapper: double[] y> = $r4;

        $r5 = newarray (double)[i0];

        r0.<org.apache.commons.math.ode.jacobians.FirstOrderIntegratorWithJacobians$MappingWrapper: double[] yDot> = $r5;

        $r6 = newmultiarray (double)[i0][i0];

        r0.<org.apache.commons.math.ode.jacobians.FirstOrderIntegratorWithJacobians$MappingWrapper: double[][] dFdY> = $r6;

        $r7 = newmultiarray (double)[i0][i1];

        r0.<org.apache.commons.math.ode.jacobians.FirstOrderIntegratorWithJacobians$MappingWrapper: double[][] dFdP> = $r7;

        return;
    }

    public int getDimension()
    {
        org.apache.commons.math.ode.jacobians.FirstOrderIntegratorWithJacobians$MappingWrapper r0;
        int i0, i1, $i2, $i3, $i4;
        double[] $r1, $r3;
        double[][] $r2;

        r0 := @this: org.apache.commons.math.ode.jacobians.FirstOrderIntegratorWithJacobians$MappingWrapper;

        $r1 = r0.<org.apache.commons.math.ode.jacobians.FirstOrderIntegratorWithJacobians$MappingWrapper: double[] y>;

        i0 = lengthof $r1;

        $r2 = r0.<org.apache.commons.math.ode.jacobians.FirstOrderIntegratorWithJacobians$MappingWrapper: double[][] dFdP>;

        $r3 = $r2[0];

        i1 = lengthof $r3;

        $i2 = 1 + i0;

        $i3 = $i2 + i1;

        $i4 = i0 * $i3;

        return $i4;
    }

    public int getMainSetDimension()
    {
        org.apache.commons.math.ode.jacobians.FirstOrderIntegratorWithJacobians$MappingWrapper r0;
        org.apache.commons.math.ode.jacobians.FirstOrderIntegratorWithJacobians $r1;
        org.apache.commons.math.ode.jacobians.ODEWithJacobians $r2;
        int $i0;

        r0 := @this: org.apache.commons.math.ode.jacobians.FirstOrderIntegratorWithJacobians$MappingWrapper;

        $r1 = r0.<org.apache.commons.math.ode.jacobians.FirstOrderIntegratorWithJacobians$MappingWrapper: org.apache.commons.math.ode.jacobians.FirstOrderIntegratorWithJacobians this$0>;

        $r2 = staticinvoke <org.apache.commons.math.ode.jacobians.FirstOrderIntegratorWithJacobians: org.apache.commons.math.ode.jacobians.ODEWithJacobians access$000(org.apache.commons.math.ode.jacobians.FirstOrderIntegratorWithJacobians)>($r1);

        $i0 = interfaceinvoke $r2.<org.apache.commons.math.ode.jacobians.ODEWithJacobians: int getDimension()>();

        return $i0;
    }

    public void computeDerivatives(double, double[], double[]) throws org.apache.commons.math.ode.DerivativeException
    {
        org.apache.commons.math.ode.jacobians.FirstOrderIntegratorWithJacobians$MappingWrapper r0;
        double d0, $d1, $d2, $d3, $d4, $d5, $d6, d7, d8;
        double[] r1, r2, $r3, $r5, $r6, $r11, $r12, $r17, $r18, $r19, r26, r27, r28;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, i12, i13, i14, i15, i16, i17, i18, i19, i20;
        double[][] $r4, $r15, $r16, $r20, $r21, $r22;
        org.apache.commons.math.ode.jacobians.FirstOrderIntegratorWithJacobians $r7, $r8, $r9, $r13, $r25;
        org.apache.commons.math.ode.jacobians.ODEWithJacobians $r10, $r14;
        org.apache.commons.math.ode.DerivativeException $r23;
        org.apache.commons.math.MaxEvaluationsExceededException $r24;

        r0 := @this: org.apache.commons.math.ode.jacobians.FirstOrderIntegratorWithJacobians$MappingWrapper;

        d0 := @parameter0: double;

        r1 := @parameter1: double[];

        r2 := @parameter2: double[];

        $r3 = r0.<org.apache.commons.math.ode.jacobians.FirstOrderIntegratorWithJacobians$MappingWrapper: double[] y>;

        i0 = lengthof $r3;

        $r4 = r0.<org.apache.commons.math.ode.jacobians.FirstOrderIntegratorWithJacobians$MappingWrapper: double[][] dFdP>;

        $r5 = $r4[0];

        i1 = lengthof $r5;

        $r6 = r0.<org.apache.commons.math.ode.jacobians.FirstOrderIntegratorWithJacobians$MappingWrapper: double[] y>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, 0, $r6, 0, i0);

        $r7 = r0.<org.apache.commons.math.ode.jacobians.FirstOrderIntegratorWithJacobians$MappingWrapper: org.apache.commons.math.ode.jacobians.FirstOrderIntegratorWithJacobians this$0>;

        $i3 = staticinvoke <org.apache.commons.math.ode.jacobians.FirstOrderIntegratorWithJacobians: int access$104(org.apache.commons.math.ode.jacobians.FirstOrderIntegratorWithJacobians)>($r7);

        $r8 = r0.<org.apache.commons.math.ode.jacobians.FirstOrderIntegratorWithJacobians$MappingWrapper: org.apache.commons.math.ode.jacobians.FirstOrderIntegratorWithJacobians this$0>;

        $i4 = staticinvoke <org.apache.commons.math.ode.jacobians.FirstOrderIntegratorWithJacobians: int access$200(org.apache.commons.math.ode.jacobians.FirstOrderIntegratorWithJacobians)>($r8);

        if $i3 <= $i4 goto label01;

        $r23 = new org.apache.commons.math.ode.DerivativeException;

        $r24 = new org.apache.commons.math.MaxEvaluationsExceededException;

        $r25 = r0.<org.apache.commons.math.ode.jacobians.FirstOrderIntegratorWithJacobians$MappingWrapper: org.apache.commons.math.ode.jacobians.FirstOrderIntegratorWithJacobians this$0>;

        $i11 = staticinvoke <org.apache.commons.math.ode.jacobians.FirstOrderIntegratorWithJacobians: int access$200(org.apache.commons.math.ode.jacobians.FirstOrderIntegratorWithJacobians)>($r25);

        specialinvoke $r24.<org.apache.commons.math.MaxEvaluationsExceededException: void <init>(int)>($i11);

        specialinvoke $r23.<org.apache.commons.math.ode.DerivativeException: void <init>(java.lang.Throwable)>($r24);

        throw $r23;

     label01:
        $r9 = r0.<org.apache.commons.math.ode.jacobians.FirstOrderIntegratorWithJacobians$MappingWrapper: org.apache.commons.math.ode.jacobians.FirstOrderIntegratorWithJacobians this$0>;

        $r10 = staticinvoke <org.apache.commons.math.ode.jacobians.FirstOrderIntegratorWithJacobians: org.apache.commons.math.ode.jacobians.ODEWithJacobians access$000(org.apache.commons.math.ode.jacobians.FirstOrderIntegratorWithJacobians)>($r9);

        $r12 = r0.<org.apache.commons.math.ode.jacobians.FirstOrderIntegratorWithJacobians$MappingWrapper: double[] y>;

        $r11 = r0.<org.apache.commons.math.ode.jacobians.FirstOrderIntegratorWithJacobians$MappingWrapper: double[] yDot>;

        interfaceinvoke $r10.<org.apache.commons.math.ode.jacobians.ODEWithJacobians: void computeDerivatives(double,double[],double[])>(d0, $r12, $r11);

        $r13 = r0.<org.apache.commons.math.ode.jacobians.FirstOrderIntegratorWithJacobians$MappingWrapper: org.apache.commons.math.ode.jacobians.FirstOrderIntegratorWithJacobians this$0>;

        $r14 = staticinvoke <org.apache.commons.math.ode.jacobians.FirstOrderIntegratorWithJacobians: org.apache.commons.math.ode.jacobians.ODEWithJacobians access$000(org.apache.commons.math.ode.jacobians.FirstOrderIntegratorWithJacobians)>($r13);

        $r18 = r0.<org.apache.commons.math.ode.jacobians.FirstOrderIntegratorWithJacobians$MappingWrapper: double[] y>;

        $r17 = r0.<org.apache.commons.math.ode.jacobians.FirstOrderIntegratorWithJacobians$MappingWrapper: double[] yDot>;

        $r16 = r0.<org.apache.commons.math.ode.jacobians.FirstOrderIntegratorWithJacobians$MappingWrapper: double[][] dFdY>;

        $r15 = r0.<org.apache.commons.math.ode.jacobians.FirstOrderIntegratorWithJacobians$MappingWrapper: double[][] dFdP>;

        interfaceinvoke $r14.<org.apache.commons.math.ode.jacobians.ODEWithJacobians: void computeJacobians(double,double[],double[],double[][],double[][])>(d0, $r18, $r17, $r16, $r15);

        $r19 = r0.<org.apache.commons.math.ode.jacobians.FirstOrderIntegratorWithJacobians$MappingWrapper: double[] yDot>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r19, 0, r2, 0, i0);

        i12 = 0;

     label02:
        if i12 >= i0 goto label07;

        $r22 = r0.<org.apache.commons.math.ode.jacobians.FirstOrderIntegratorWithJacobians$MappingWrapper: double[][] dFdY>;

        r26 = $r22[i12];

        i13 = 0;

     label03:
        if i13 >= i0 goto label06;

        d7 = 0.0;

        i2 = i0 + i13;

        i14 = i2;

        i15 = 0;

     label04:
        if i15 >= i0 goto label05;

        $d5 = r26[i15];

        $d4 = r1[i14];

        $d6 = $d5 * $d4;

        d7 = d7 + $d6;

        i14 = i14 + i0;

        i15 = i15 + 1;

        goto label04;

     label05:
        $i9 = i12 * i0;

        $i10 = i2 + $i9;

        r2[$i10] = d7;

        i13 = i13 + 1;

        goto label03;

     label06:
        i12 = i12 + 1;

        goto label02;

     label07:
        i16 = 0;

     label08:
        if i16 >= i0 goto label13;

        $r20 = r0.<org.apache.commons.math.ode.jacobians.FirstOrderIntegratorWithJacobians$MappingWrapper: double[][] dFdY>;

        r27 = $r20[i16];

        $r21 = r0.<org.apache.commons.math.ode.jacobians.FirstOrderIntegratorWithJacobians$MappingWrapper: double[][] dFdP>;

        r28 = $r21[i16];

        i17 = 0;

     label09:
        if i17 >= i1 goto label12;

        d8 = r28[i17];

        $i5 = i0 + 1;

        $i6 = i0 * $i5;

        i18 = $i6 + i17;

        i19 = i18;

        i20 = 0;

     label10:
        if i20 >= i0 goto label11;

        $d2 = r27[i20];

        $d1 = r1[i19];

        $d3 = $d2 * $d1;

        d8 = d8 + $d3;

        i19 = i19 + i1;

        i20 = i20 + 1;

        goto label10;

     label11:
        $i7 = i16 * i1;

        $i8 = i18 + $i7;

        r2[$i8] = d8;

        i17 = i17 + 1;

        goto label09;

     label12:
        i16 = i16 + 1;

        goto label08;

     label13:
        return;
    }
}
