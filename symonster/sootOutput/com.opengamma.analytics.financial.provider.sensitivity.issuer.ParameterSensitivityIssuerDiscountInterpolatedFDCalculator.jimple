public class com.opengamma.analytics.financial.provider.sensitivity.issuer.ParameterSensitivityIssuerDiscountInterpolatedFDCalculator extends java.lang.Object
{
    private final com.opengamma.analytics.financial.interestrate.InstrumentDerivativeVisitor _valueCalculator;
    private final double _shift;

    public void <init>(com.opengamma.analytics.financial.interestrate.InstrumentDerivativeVisitor, double)
    {
        com.opengamma.analytics.financial.provider.sensitivity.issuer.ParameterSensitivityIssuerDiscountInterpolatedFDCalculator r0;
        com.opengamma.analytics.financial.interestrate.InstrumentDerivativeVisitor r1;
        double d0;

        r0 := @this: com.opengamma.analytics.financial.provider.sensitivity.issuer.ParameterSensitivityIssuerDiscountInterpolatedFDCalculator;

        r1 := @parameter0: com.opengamma.analytics.financial.interestrate.InstrumentDerivativeVisitor;

        d0 := @parameter1: double;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "Calculator");

        r0.<com.opengamma.analytics.financial.provider.sensitivity.issuer.ParameterSensitivityIssuerDiscountInterpolatedFDCalculator: com.opengamma.analytics.financial.interestrate.InstrumentDerivativeVisitor _valueCalculator> = r1;

        r0.<com.opengamma.analytics.financial.provider.sensitivity.issuer.ParameterSensitivityIssuerDiscountInterpolatedFDCalculator: double _shift> = d0;

        return;
    }

    public com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyParameterSensitivity calculateSensitivity(com.opengamma.analytics.financial.interestrate.InstrumentDerivative, com.opengamma.analytics.financial.provider.description.interestrate.IssuerProviderDiscount)
    {
        com.opengamma.analytics.financial.provider.sensitivity.issuer.ParameterSensitivityIssuerDiscountInterpolatedFDCalculator r0;
        com.opengamma.analytics.financial.interestrate.InstrumentDerivative r1;
        com.opengamma.analytics.financial.provider.description.interestrate.IssuerProviderDiscount r2, $r50, $r76, $r102, r163;
        com.opengamma.util.money.MultipleCurrencyAmount r3, r4, r125, r126, r138, r139, r151, r152, r164, r165;
        int i0, i1, i2, i3, i4, i5, i6, i7, i8, i9, i10, i11, i12, i13, i14, i15, i16, i17;
        com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyParameterSensitivity $r6, r114;
        com.opengamma.analytics.financial.interestrate.InstrumentDerivativeVisitor $r7, $r28, $r54, $r80, $r106;
        java.lang.Object $r8, $r13, $r17, $r22, $r29, $r31, $r33, $r39, $r44, $r55, $r57, $r59, $r65, $r70, $r81, $r83, $r85, $r91, $r96, $r107, $r109;
        java.util.ArrayList $r9;
        com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount $r10, $r11, $r12, $r34, $r38, $r51, $r52, $r60, $r64, $r77, $r78, $r86, $r90, $r103, $r104;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11;
        com.opengamma.analytics.math.curve.DoublesCurve $r14, $r15, $r35, $r36, $r61, $r62, $r87, $r88;
        double[] $r16, $r20, $r21, $r26, $r30, $r37, $r42, $r43, $r48, $r56, $r63, $r68, $r69, $r74, $r82, $r89, $r94, $r95, $r100, $r108, r122, r135, r148, r161;
        com.opengamma.util.tuple.Pair $r18, $r40, $r66, $r92, r156;
        com.opengamma.analytics.math.matrix.DoubleMatrix1D $r19, $r41, $r67, $r93;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21, $d22, $d23;
        com.opengamma.analytics.financial.model.interestrate.curve.YieldCurve $r23, $r45, $r71, $r97, r119, r132, r145, r158;
        java.lang.String $r24, $r46, $r72, $r98, r127, r140, r153, r166;
        com.opengamma.analytics.math.curve.InterpolatedDoublesCurve $r25, $r47, $r73, $r99, r120, r133, r146, r159;
        com.opengamma.analytics.math.interpolation.Interpolator1D $r27, $r49, $r75, $r101;
        com.opengamma.util.money.Currency $r32, $r58, $r84, $r110, $r113, r117;
        java.util.Map $r53, $r79, $r105;
        com.opengamma.util.money.CurrencyAmount[] $r111;
        com.opengamma.util.money.CurrencyAmount $r112;
        java.util.Set r115, r128, r141, r154;
        java.util.Iterator r116, r129, r142, r155;
        com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve r118, r131, r144, r157;
        double[][] r121, r134, r147, r160;
        com.opengamma.analytics.financial.instrument.index.IndexON r130;
        com.opengamma.analytics.financial.instrument.index.IborIndex r143;

        r0 := @this: com.opengamma.analytics.financial.provider.sensitivity.issuer.ParameterSensitivityIssuerDiscountInterpolatedFDCalculator;

        r1 := @parameter0: com.opengamma.analytics.financial.interestrate.InstrumentDerivative;

        r2 := @parameter1: com.opengamma.analytics.financial.provider.description.interestrate.IssuerProviderDiscount;

        $r6 = new com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyParameterSensitivity;

        specialinvoke $r6.<com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyParameterSensitivity: void <init>()>();

        r114 = $r6;

        $r7 = r0.<com.opengamma.analytics.financial.provider.sensitivity.issuer.ParameterSensitivityIssuerDiscountInterpolatedFDCalculator: com.opengamma.analytics.financial.interestrate.InstrumentDerivativeVisitor _valueCalculator>;

        $r8 = interfaceinvoke r1.<com.opengamma.analytics.financial.interestrate.InstrumentDerivative: java.lang.Object accept(com.opengamma.analytics.financial.interestrate.InstrumentDerivativeVisitor,java.lang.Object)>($r7, r2);

        r3 = (com.opengamma.util.money.MultipleCurrencyAmount) $r8;

        r4 = virtualinvoke r3.<com.opengamma.util.money.MultipleCurrencyAmount: com.opengamma.util.money.MultipleCurrencyAmount multipliedBy(double)>(-1.0);

        i0 = virtualinvoke r3.<com.opengamma.util.money.MultipleCurrencyAmount: int size()>();

        $r9 = new java.util.ArrayList;

        specialinvoke $r9.<java.util.ArrayList: void <init>()>();

        i1 = 0;

     label01:
        if i1 >= i0 goto label02;

        $r111 = virtualinvoke r3.<com.opengamma.util.money.MultipleCurrencyAmount: com.opengamma.util.money.CurrencyAmount[] getCurrencyAmounts()>();

        $r112 = $r111[i1];

        $r113 = virtualinvoke $r112.<com.opengamma.util.money.CurrencyAmount: com.opengamma.util.money.Currency getCurrency()>();

        interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>($r113);

        i1 = i1 + 1;

        goto label01;

     label02:
        $r10 = virtualinvoke r2.<com.opengamma.analytics.financial.provider.description.interestrate.IssuerProviderDiscount: com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount getMulticurveProvider()>();

        r115 = virtualinvoke $r10.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount: java.util.Set getCurrencies()>();

        r116 = interfaceinvoke r115.<java.util.Set: java.util.Iterator iterator()>();

     label03:
        $z0 = interfaceinvoke r116.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label10;

        $r85 = interfaceinvoke r116.<java.util.Iterator: java.lang.Object next()>();

        r117 = (com.opengamma.util.money.Currency) $r85;

        $r86 = virtualinvoke r2.<com.opengamma.analytics.financial.provider.description.interestrate.IssuerProviderDiscount: com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount getMulticurveProvider()>();

        r118 = virtualinvoke $r86.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount: com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve getCurve(com.opengamma.util.money.Currency)>(r117);

        $z10 = r118 instanceof com.opengamma.analytics.financial.model.interestrate.curve.YieldCurve;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z10, "Curve should be a YieldCurve");

        r119 = (com.opengamma.analytics.financial.model.interestrate.curve.YieldCurve) r118;

        $r87 = virtualinvoke r119.<com.opengamma.analytics.financial.model.interestrate.curve.YieldCurve: com.opengamma.analytics.math.curve.DoublesCurve getCurve()>();

        $z11 = $r87 instanceof com.opengamma.analytics.math.curve.InterpolatedDoublesCurve;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z11, "Yield curve should be based on InterpolatedDoublesCurve");

        $r88 = virtualinvoke r119.<com.opengamma.analytics.financial.model.interestrate.curve.YieldCurve: com.opengamma.analytics.math.curve.DoublesCurve getCurve()>();

        r120 = (com.opengamma.analytics.math.curve.InterpolatedDoublesCurve) $r88;

        $r89 = virtualinvoke r120.<com.opengamma.analytics.math.curve.InterpolatedDoublesCurve: double[] getXDataAsPrimitive()>();

        i2 = lengthof $r89;

        r121 = newmultiarray (double)[i0][i2];

        i3 = 0;

     label04:
        if i3 >= i2 goto label07;

        $r95 = virtualinvoke r120.<com.opengamma.analytics.math.curve.InterpolatedDoublesCurve: double[] getYDataAsPrimitive()>();

        $r96 = virtualinvoke $r95.<java.lang.Object: java.lang.Object clone()>();

        r122 = (double[]) $r96;

        $d19 = r122[i3];

        $d18 = r0.<com.opengamma.analytics.financial.provider.sensitivity.issuer.ParameterSensitivityIssuerDiscountInterpolatedFDCalculator: double _shift>;

        $d20 = $d19 + $d18;

        r122[i3] = $d20;

        $r97 = new com.opengamma.analytics.financial.model.interestrate.curve.YieldCurve;

        $r98 = virtualinvoke r120.<com.opengamma.analytics.math.curve.InterpolatedDoublesCurve: java.lang.String getName()>();

        $r99 = new com.opengamma.analytics.math.curve.InterpolatedDoublesCurve;

        $r100 = virtualinvoke r120.<com.opengamma.analytics.math.curve.InterpolatedDoublesCurve: double[] getXDataAsPrimitive()>();

        $r101 = virtualinvoke r120.<com.opengamma.analytics.math.curve.InterpolatedDoublesCurve: com.opengamma.analytics.math.interpolation.Interpolator1D getInterpolator()>();

        specialinvoke $r99.<com.opengamma.analytics.math.curve.InterpolatedDoublesCurve: void <init>(double[],double[],com.opengamma.analytics.math.interpolation.Interpolator1D,boolean)>($r100, r122, $r101, 1);

        specialinvoke $r97.<com.opengamma.analytics.financial.model.interestrate.curve.YieldCurve: void <init>(java.lang.String,com.opengamma.analytics.math.curve.DoublesCurve)>($r98, $r99);

        $r102 = new com.opengamma.analytics.financial.provider.description.interestrate.IssuerProviderDiscount;

        $r103 = virtualinvoke r2.<com.opengamma.analytics.financial.provider.description.interestrate.IssuerProviderDiscount: com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount getMulticurveProvider()>();

        $r104 = virtualinvoke $r103.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount: com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount withDiscountFactor(com.opengamma.util.money.Currency,com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve)>(r117, $r97);

        $r105 = virtualinvoke r2.<com.opengamma.analytics.financial.provider.description.interestrate.IssuerProviderDiscount: java.util.Map getIssuerCurves()>();

        specialinvoke $r102.<com.opengamma.analytics.financial.provider.description.interestrate.IssuerProviderDiscount: void <init>(com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount,java.util.Map)>($r104, $r105);

        $r106 = r0.<com.opengamma.analytics.financial.provider.sensitivity.issuer.ParameterSensitivityIssuerDiscountInterpolatedFDCalculator: com.opengamma.analytics.financial.interestrate.InstrumentDerivativeVisitor _valueCalculator>;

        $r107 = interfaceinvoke r1.<com.opengamma.analytics.financial.interestrate.InstrumentDerivative: java.lang.Object accept(com.opengamma.analytics.financial.interestrate.InstrumentDerivativeVisitor,java.lang.Object)>($r106, $r102);

        r125 = (com.opengamma.util.money.MultipleCurrencyAmount) $r107;

        r126 = virtualinvoke r125.<com.opengamma.util.money.MultipleCurrencyAmount: com.opengamma.util.money.MultipleCurrencyAmount plus(com.opengamma.util.money.MultipleCurrencyAmount)>(r4);

        i4 = 0;

     label05:
        if i4 >= i0 goto label06;

        $r108 = r121[i4];

        $r109 = interfaceinvoke $r9.<java.util.List: java.lang.Object get(int)>(i4);

        $r110 = (com.opengamma.util.money.Currency) $r109;

        $d21 = virtualinvoke r126.<com.opengamma.util.money.MultipleCurrencyAmount: double getAmount(com.opengamma.util.money.Currency)>($r110);

        $d22 = r0.<com.opengamma.analytics.financial.provider.sensitivity.issuer.ParameterSensitivityIssuerDiscountInterpolatedFDCalculator: double _shift>;

        $d23 = $d21 / $d22;

        $r108[i3] = $d23;

        i4 = i4 + 1;

        goto label05;

     label06:
        i3 = i3 + 1;

        goto label04;

     label07:
        $r90 = virtualinvoke r2.<com.opengamma.analytics.financial.provider.description.interestrate.IssuerProviderDiscount: com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount getMulticurveProvider()>();

        r127 = virtualinvoke $r90.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount: java.lang.String getName(com.opengamma.util.money.Currency)>(r117);

        i5 = 0;

     label08:
        if i5 >= i0 goto label09;

        $r91 = interfaceinvoke $r9.<java.util.List: java.lang.Object get(int)>(i5);

        $r92 = staticinvoke <com.opengamma.util.tuple.Pairs: com.opengamma.util.tuple.Pair of(java.lang.Object,java.lang.Object)>(r127, $r91);

        $r93 = new com.opengamma.analytics.math.matrix.DoubleMatrix1D;

        $r94 = r121[i5];

        specialinvoke $r93.<com.opengamma.analytics.math.matrix.DoubleMatrix1D: void <init>(double[])>($r94);

        r114 = virtualinvoke r114.<com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyParameterSensitivity: com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyParameterSensitivity plus(com.opengamma.util.tuple.Pair,com.opengamma.analytics.math.matrix.DoubleMatrix1D)>($r92, $r93);

        i5 = i5 + 1;

        goto label08;

     label09:
        goto label03;

     label10:
        $r11 = virtualinvoke r2.<com.opengamma.analytics.financial.provider.description.interestrate.IssuerProviderDiscount: com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount getMulticurveProvider()>();

        r128 = virtualinvoke $r11.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount: java.util.Set getIndexesON()>();

        r129 = interfaceinvoke r128.<java.util.Set: java.util.Iterator iterator()>();

     label11:
        $z1 = interfaceinvoke r129.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label18;

        $r59 = interfaceinvoke r129.<java.util.Iterator: java.lang.Object next()>();

        r130 = (com.opengamma.analytics.financial.instrument.index.IndexON) $r59;

        $r60 = virtualinvoke r2.<com.opengamma.analytics.financial.provider.description.interestrate.IssuerProviderDiscount: com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount getMulticurveProvider()>();

        r131 = virtualinvoke $r60.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount: com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve getCurve(com.opengamma.analytics.financial.instrument.index.IndexON)>(r130);

        $z8 = r131 instanceof com.opengamma.analytics.financial.model.interestrate.curve.YieldCurve;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z8, "Curve should be a YieldCurve");

        r132 = (com.opengamma.analytics.financial.model.interestrate.curve.YieldCurve) r131;

        $r61 = virtualinvoke r132.<com.opengamma.analytics.financial.model.interestrate.curve.YieldCurve: com.opengamma.analytics.math.curve.DoublesCurve getCurve()>();

        $z9 = $r61 instanceof com.opengamma.analytics.math.curve.InterpolatedDoublesCurve;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z9, "Yield curve should be based on InterpolatedDoublesCurve");

        $r62 = virtualinvoke r132.<com.opengamma.analytics.financial.model.interestrate.curve.YieldCurve: com.opengamma.analytics.math.curve.DoublesCurve getCurve()>();

        r133 = (com.opengamma.analytics.math.curve.InterpolatedDoublesCurve) $r62;

        $r63 = virtualinvoke r133.<com.opengamma.analytics.math.curve.InterpolatedDoublesCurve: double[] getXDataAsPrimitive()>();

        i6 = lengthof $r63;

        r134 = newmultiarray (double)[i0][i6];

        i7 = 0;

     label12:
        if i7 >= i6 goto label15;

        $r69 = virtualinvoke r133.<com.opengamma.analytics.math.curve.InterpolatedDoublesCurve: double[] getYDataAsPrimitive()>();

        $r70 = virtualinvoke $r69.<java.lang.Object: java.lang.Object clone()>();

        r135 = (double[]) $r70;

        $d13 = r135[i7];

        $d12 = r0.<com.opengamma.analytics.financial.provider.sensitivity.issuer.ParameterSensitivityIssuerDiscountInterpolatedFDCalculator: double _shift>;

        $d14 = $d13 + $d12;

        r135[i7] = $d14;

        $r71 = new com.opengamma.analytics.financial.model.interestrate.curve.YieldCurve;

        $r72 = virtualinvoke r133.<com.opengamma.analytics.math.curve.InterpolatedDoublesCurve: java.lang.String getName()>();

        $r73 = new com.opengamma.analytics.math.curve.InterpolatedDoublesCurve;

        $r74 = virtualinvoke r133.<com.opengamma.analytics.math.curve.InterpolatedDoublesCurve: double[] getXDataAsPrimitive()>();

        $r75 = virtualinvoke r133.<com.opengamma.analytics.math.curve.InterpolatedDoublesCurve: com.opengamma.analytics.math.interpolation.Interpolator1D getInterpolator()>();

        specialinvoke $r73.<com.opengamma.analytics.math.curve.InterpolatedDoublesCurve: void <init>(double[],double[],com.opengamma.analytics.math.interpolation.Interpolator1D,boolean)>($r74, r135, $r75, 1);

        specialinvoke $r71.<com.opengamma.analytics.financial.model.interestrate.curve.YieldCurve: void <init>(java.lang.String,com.opengamma.analytics.math.curve.DoublesCurve)>($r72, $r73);

        $r76 = new com.opengamma.analytics.financial.provider.description.interestrate.IssuerProviderDiscount;

        $r77 = virtualinvoke r2.<com.opengamma.analytics.financial.provider.description.interestrate.IssuerProviderDiscount: com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount getMulticurveProvider()>();

        $r78 = virtualinvoke $r77.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount: com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount withForward(com.opengamma.analytics.financial.instrument.index.IndexON,com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve)>(r130, $r71);

        $r79 = virtualinvoke r2.<com.opengamma.analytics.financial.provider.description.interestrate.IssuerProviderDiscount: java.util.Map getIssuerCurves()>();

        specialinvoke $r76.<com.opengamma.analytics.financial.provider.description.interestrate.IssuerProviderDiscount: void <init>(com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount,java.util.Map)>($r78, $r79);

        $r80 = r0.<com.opengamma.analytics.financial.provider.sensitivity.issuer.ParameterSensitivityIssuerDiscountInterpolatedFDCalculator: com.opengamma.analytics.financial.interestrate.InstrumentDerivativeVisitor _valueCalculator>;

        $r81 = interfaceinvoke r1.<com.opengamma.analytics.financial.interestrate.InstrumentDerivative: java.lang.Object accept(com.opengamma.analytics.financial.interestrate.InstrumentDerivativeVisitor,java.lang.Object)>($r80, $r76);

        r138 = (com.opengamma.util.money.MultipleCurrencyAmount) $r81;

        r139 = virtualinvoke r138.<com.opengamma.util.money.MultipleCurrencyAmount: com.opengamma.util.money.MultipleCurrencyAmount plus(com.opengamma.util.money.MultipleCurrencyAmount)>(r4);

        i8 = 0;

     label13:
        if i8 >= i0 goto label14;

        $r82 = r134[i8];

        $r83 = interfaceinvoke $r9.<java.util.List: java.lang.Object get(int)>(i8);

        $r84 = (com.opengamma.util.money.Currency) $r83;

        $d15 = virtualinvoke r139.<com.opengamma.util.money.MultipleCurrencyAmount: double getAmount(com.opengamma.util.money.Currency)>($r84);

        $d16 = r0.<com.opengamma.analytics.financial.provider.sensitivity.issuer.ParameterSensitivityIssuerDiscountInterpolatedFDCalculator: double _shift>;

        $d17 = $d15 / $d16;

        $r82[i7] = $d17;

        i8 = i8 + 1;

        goto label13;

     label14:
        i7 = i7 + 1;

        goto label12;

     label15:
        $r64 = virtualinvoke r2.<com.opengamma.analytics.financial.provider.description.interestrate.IssuerProviderDiscount: com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount getMulticurveProvider()>();

        r140 = virtualinvoke $r64.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount: java.lang.String getName(com.opengamma.analytics.financial.instrument.index.IndexON)>(r130);

        i9 = 0;

     label16:
        if i9 >= i0 goto label17;

        $r65 = interfaceinvoke $r9.<java.util.List: java.lang.Object get(int)>(i9);

        $r66 = staticinvoke <com.opengamma.util.tuple.Pairs: com.opengamma.util.tuple.Pair of(java.lang.Object,java.lang.Object)>(r140, $r65);

        $r67 = new com.opengamma.analytics.math.matrix.DoubleMatrix1D;

        $r68 = r134[i9];

        specialinvoke $r67.<com.opengamma.analytics.math.matrix.DoubleMatrix1D: void <init>(double[])>($r68);

        r114 = virtualinvoke r114.<com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyParameterSensitivity: com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyParameterSensitivity plus(com.opengamma.util.tuple.Pair,com.opengamma.analytics.math.matrix.DoubleMatrix1D)>($r66, $r67);

        i9 = i9 + 1;

        goto label16;

     label17:
        goto label11;

     label18:
        $r12 = virtualinvoke r2.<com.opengamma.analytics.financial.provider.description.interestrate.IssuerProviderDiscount: com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount getMulticurveProvider()>();

        r141 = virtualinvoke $r12.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount: java.util.Set getIndexesIbor()>();

        r142 = interfaceinvoke r141.<java.util.Set: java.util.Iterator iterator()>();

     label19:
        $z2 = interfaceinvoke r142.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label26;

        $r33 = interfaceinvoke r142.<java.util.Iterator: java.lang.Object next()>();

        r143 = (com.opengamma.analytics.financial.instrument.index.IborIndex) $r33;

        $r34 = virtualinvoke r2.<com.opengamma.analytics.financial.provider.description.interestrate.IssuerProviderDiscount: com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount getMulticurveProvider()>();

        r144 = virtualinvoke $r34.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount: com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve getCurve(com.opengamma.analytics.financial.instrument.index.IborIndex)>(r143);

        $z6 = r144 instanceof com.opengamma.analytics.financial.model.interestrate.curve.YieldCurve;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z6, "Curve should be a YieldCurve");

        r145 = (com.opengamma.analytics.financial.model.interestrate.curve.YieldCurve) r144;

        $r35 = virtualinvoke r145.<com.opengamma.analytics.financial.model.interestrate.curve.YieldCurve: com.opengamma.analytics.math.curve.DoublesCurve getCurve()>();

        $z7 = $r35 instanceof com.opengamma.analytics.math.curve.InterpolatedDoublesCurve;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z7, "Yield curve should be based on InterpolatedDoublesCurve");

        $r36 = virtualinvoke r145.<com.opengamma.analytics.financial.model.interestrate.curve.YieldCurve: com.opengamma.analytics.math.curve.DoublesCurve getCurve()>();

        r146 = (com.opengamma.analytics.math.curve.InterpolatedDoublesCurve) $r36;

        $r37 = virtualinvoke r146.<com.opengamma.analytics.math.curve.InterpolatedDoublesCurve: double[] getXDataAsPrimitive()>();

        i10 = lengthof $r37;

        r147 = newmultiarray (double)[i0][i10];

        i11 = 0;

     label20:
        if i11 >= i10 goto label23;

        $r43 = virtualinvoke r146.<com.opengamma.analytics.math.curve.InterpolatedDoublesCurve: double[] getYDataAsPrimitive()>();

        $r44 = virtualinvoke $r43.<java.lang.Object: java.lang.Object clone()>();

        r148 = (double[]) $r44;

        $d7 = r148[i11];

        $d6 = r0.<com.opengamma.analytics.financial.provider.sensitivity.issuer.ParameterSensitivityIssuerDiscountInterpolatedFDCalculator: double _shift>;

        $d8 = $d7 + $d6;

        r148[i11] = $d8;

        $r45 = new com.opengamma.analytics.financial.model.interestrate.curve.YieldCurve;

        $r46 = virtualinvoke r146.<com.opengamma.analytics.math.curve.InterpolatedDoublesCurve: java.lang.String getName()>();

        $r47 = new com.opengamma.analytics.math.curve.InterpolatedDoublesCurve;

        $r48 = virtualinvoke r146.<com.opengamma.analytics.math.curve.InterpolatedDoublesCurve: double[] getXDataAsPrimitive()>();

        $r49 = virtualinvoke r146.<com.opengamma.analytics.math.curve.InterpolatedDoublesCurve: com.opengamma.analytics.math.interpolation.Interpolator1D getInterpolator()>();

        specialinvoke $r47.<com.opengamma.analytics.math.curve.InterpolatedDoublesCurve: void <init>(double[],double[],com.opengamma.analytics.math.interpolation.Interpolator1D,boolean)>($r48, r148, $r49, 1);

        specialinvoke $r45.<com.opengamma.analytics.financial.model.interestrate.curve.YieldCurve: void <init>(java.lang.String,com.opengamma.analytics.math.curve.DoublesCurve)>($r46, $r47);

        $r50 = new com.opengamma.analytics.financial.provider.description.interestrate.IssuerProviderDiscount;

        $r51 = virtualinvoke r2.<com.opengamma.analytics.financial.provider.description.interestrate.IssuerProviderDiscount: com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount getMulticurveProvider()>();

        $r52 = virtualinvoke $r51.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount: com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount withForward(com.opengamma.analytics.financial.instrument.index.IborIndex,com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve)>(r143, $r45);

        $r53 = virtualinvoke r2.<com.opengamma.analytics.financial.provider.description.interestrate.IssuerProviderDiscount: java.util.Map getIssuerCurves()>();

        specialinvoke $r50.<com.opengamma.analytics.financial.provider.description.interestrate.IssuerProviderDiscount: void <init>(com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount,java.util.Map)>($r52, $r53);

        $r54 = r0.<com.opengamma.analytics.financial.provider.sensitivity.issuer.ParameterSensitivityIssuerDiscountInterpolatedFDCalculator: com.opengamma.analytics.financial.interestrate.InstrumentDerivativeVisitor _valueCalculator>;

        $r55 = interfaceinvoke r1.<com.opengamma.analytics.financial.interestrate.InstrumentDerivative: java.lang.Object accept(com.opengamma.analytics.financial.interestrate.InstrumentDerivativeVisitor,java.lang.Object)>($r54, $r50);

        r151 = (com.opengamma.util.money.MultipleCurrencyAmount) $r55;

        r152 = virtualinvoke r151.<com.opengamma.util.money.MultipleCurrencyAmount: com.opengamma.util.money.MultipleCurrencyAmount plus(com.opengamma.util.money.MultipleCurrencyAmount)>(r4);

        i12 = 0;

     label21:
        if i12 >= i0 goto label22;

        $r56 = r147[i12];

        $r57 = interfaceinvoke $r9.<java.util.List: java.lang.Object get(int)>(i12);

        $r58 = (com.opengamma.util.money.Currency) $r57;

        $d9 = virtualinvoke r152.<com.opengamma.util.money.MultipleCurrencyAmount: double getAmount(com.opengamma.util.money.Currency)>($r58);

        $d10 = r0.<com.opengamma.analytics.financial.provider.sensitivity.issuer.ParameterSensitivityIssuerDiscountInterpolatedFDCalculator: double _shift>;

        $d11 = $d9 / $d10;

        $r56[i11] = $d11;

        i12 = i12 + 1;

        goto label21;

     label22:
        i11 = i11 + 1;

        goto label20;

     label23:
        $r38 = virtualinvoke r2.<com.opengamma.analytics.financial.provider.description.interestrate.IssuerProviderDiscount: com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount getMulticurveProvider()>();

        r153 = virtualinvoke $r38.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount: java.lang.String getName(com.opengamma.analytics.financial.instrument.index.IborIndex)>(r143);

        i13 = 0;

     label24:
        if i13 >= i0 goto label25;

        $r39 = interfaceinvoke $r9.<java.util.List: java.lang.Object get(int)>(i13);

        $r40 = staticinvoke <com.opengamma.util.tuple.Pairs: com.opengamma.util.tuple.Pair of(java.lang.Object,java.lang.Object)>(r153, $r39);

        $r41 = new com.opengamma.analytics.math.matrix.DoubleMatrix1D;

        $r42 = r147[i13];

        specialinvoke $r41.<com.opengamma.analytics.math.matrix.DoubleMatrix1D: void <init>(double[])>($r42);

        r114 = virtualinvoke r114.<com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyParameterSensitivity: com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyParameterSensitivity plus(com.opengamma.util.tuple.Pair,com.opengamma.analytics.math.matrix.DoubleMatrix1D)>($r40, $r41);

        i13 = i13 + 1;

        goto label24;

     label25:
        goto label19;

     label26:
        r154 = virtualinvoke r2.<com.opengamma.analytics.financial.provider.description.interestrate.IssuerProviderDiscount: java.util.Set getIssuers()>();

        r155 = interfaceinvoke r154.<java.util.Set: java.util.Iterator iterator()>();

     label27:
        $z3 = interfaceinvoke r155.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label34;

        $r13 = interfaceinvoke r155.<java.util.Iterator: java.lang.Object next()>();

        r156 = (com.opengamma.util.tuple.Pair) $r13;

        r157 = virtualinvoke r2.<com.opengamma.analytics.financial.provider.description.interestrate.IssuerProviderDiscount: com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve getIssuerCurve(com.opengamma.util.tuple.Pair)>(r156);

        $z4 = r157 instanceof com.opengamma.analytics.financial.model.interestrate.curve.YieldCurve;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z4, "Curve should be a YieldCurve");

        r158 = (com.opengamma.analytics.financial.model.interestrate.curve.YieldCurve) r157;

        $r14 = virtualinvoke r158.<com.opengamma.analytics.financial.model.interestrate.curve.YieldCurve: com.opengamma.analytics.math.curve.DoublesCurve getCurve()>();

        $z5 = $r14 instanceof com.opengamma.analytics.math.curve.InterpolatedDoublesCurve;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z5, "Yield curve should be based on InterpolatedDoublesCurve");

        $r15 = virtualinvoke r158.<com.opengamma.analytics.financial.model.interestrate.curve.YieldCurve: com.opengamma.analytics.math.curve.DoublesCurve getCurve()>();

        r159 = (com.opengamma.analytics.math.curve.InterpolatedDoublesCurve) $r15;

        $r16 = virtualinvoke r159.<com.opengamma.analytics.math.curve.InterpolatedDoublesCurve: double[] getXDataAsPrimitive()>();

        i14 = lengthof $r16;

        r160 = newmultiarray (double)[i0][i14];

        i15 = 0;

     label28:
        if i15 >= i14 goto label31;

        $r21 = virtualinvoke r159.<com.opengamma.analytics.math.curve.InterpolatedDoublesCurve: double[] getYDataAsPrimitive()>();

        $r22 = virtualinvoke $r21.<java.lang.Object: java.lang.Object clone()>();

        r161 = (double[]) $r22;

        $d1 = r161[i15];

        $d0 = r0.<com.opengamma.analytics.financial.provider.sensitivity.issuer.ParameterSensitivityIssuerDiscountInterpolatedFDCalculator: double _shift>;

        $d2 = $d1 + $d0;

        r161[i15] = $d2;

        $r23 = new com.opengamma.analytics.financial.model.interestrate.curve.YieldCurve;

        $r24 = virtualinvoke r159.<com.opengamma.analytics.math.curve.InterpolatedDoublesCurve: java.lang.String getName()>();

        $r25 = new com.opengamma.analytics.math.curve.InterpolatedDoublesCurve;

        $r26 = virtualinvoke r159.<com.opengamma.analytics.math.curve.InterpolatedDoublesCurve: double[] getXDataAsPrimitive()>();

        $r27 = virtualinvoke r159.<com.opengamma.analytics.math.curve.InterpolatedDoublesCurve: com.opengamma.analytics.math.interpolation.Interpolator1D getInterpolator()>();

        specialinvoke $r25.<com.opengamma.analytics.math.curve.InterpolatedDoublesCurve: void <init>(double[],double[],com.opengamma.analytics.math.interpolation.Interpolator1D,boolean)>($r26, r161, $r27, 1);

        specialinvoke $r23.<com.opengamma.analytics.financial.model.interestrate.curve.YieldCurve: void <init>(java.lang.String,com.opengamma.analytics.math.curve.DoublesCurve)>($r24, $r25);

        r163 = virtualinvoke r2.<com.opengamma.analytics.financial.provider.description.interestrate.IssuerProviderDiscount: com.opengamma.analytics.financial.provider.description.interestrate.IssuerProviderDiscount withIssuerCurve(com.opengamma.util.tuple.Pair,com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve)>(r156, $r23);

        $r28 = r0.<com.opengamma.analytics.financial.provider.sensitivity.issuer.ParameterSensitivityIssuerDiscountInterpolatedFDCalculator: com.opengamma.analytics.financial.interestrate.InstrumentDerivativeVisitor _valueCalculator>;

        $r29 = interfaceinvoke r1.<com.opengamma.analytics.financial.interestrate.InstrumentDerivative: java.lang.Object accept(com.opengamma.analytics.financial.interestrate.InstrumentDerivativeVisitor,java.lang.Object)>($r28, r163);

        r164 = (com.opengamma.util.money.MultipleCurrencyAmount) $r29;

        r165 = virtualinvoke r164.<com.opengamma.util.money.MultipleCurrencyAmount: com.opengamma.util.money.MultipleCurrencyAmount plus(com.opengamma.util.money.MultipleCurrencyAmount)>(r4);

        i16 = 0;

     label29:
        if i16 >= i0 goto label30;

        $r30 = r160[i16];

        $r31 = interfaceinvoke $r9.<java.util.List: java.lang.Object get(int)>(i16);

        $r32 = (com.opengamma.util.money.Currency) $r31;

        $d3 = virtualinvoke r165.<com.opengamma.util.money.MultipleCurrencyAmount: double getAmount(com.opengamma.util.money.Currency)>($r32);

        $d4 = r0.<com.opengamma.analytics.financial.provider.sensitivity.issuer.ParameterSensitivityIssuerDiscountInterpolatedFDCalculator: double _shift>;

        $d5 = $d3 / $d4;

        $r30[i15] = $d5;

        i16 = i16 + 1;

        goto label29;

     label30:
        i15 = i15 + 1;

        goto label28;

     label31:
        r166 = virtualinvoke r2.<com.opengamma.analytics.financial.provider.description.interestrate.IssuerProviderDiscount: java.lang.String getName(com.opengamma.util.tuple.Pair)>(r156);

        i17 = 0;

     label32:
        if i17 >= i0 goto label33;

        $r17 = interfaceinvoke $r9.<java.util.List: java.lang.Object get(int)>(i17);

        $r18 = staticinvoke <com.opengamma.util.tuple.Pairs: com.opengamma.util.tuple.Pair of(java.lang.Object,java.lang.Object)>(r166, $r17);

        $r19 = new com.opengamma.analytics.math.matrix.DoubleMatrix1D;

        $r20 = r160[i17];

        specialinvoke $r19.<com.opengamma.analytics.math.matrix.DoubleMatrix1D: void <init>(double[])>($r20);

        r114 = virtualinvoke r114.<com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyParameterSensitivity: com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyParameterSensitivity plus(com.opengamma.util.tuple.Pair,com.opengamma.analytics.math.matrix.DoubleMatrix1D)>($r18, $r19);

        i17 = i17 + 1;

        goto label32;

     label33:
        goto label27;

     label34:
        return r114;
    }
}
