public class org.apache.commons.math3.special.BesselJ extends java.lang.Object implements org.apache.commons.math3.analysis.UnivariateFunction
{
    private static final double PI2;
    private static final double TOWPI1;
    private static final double TWOPI2;
    private static final double TWOPI;
    private static final double ENTEN;
    private static final double ENSIG;
    private static final double RTNSIG;
    private static final double ENMTEN;
    private static final double X_MIN;
    private static final double X_MAX;
    private static final double[] FACT;
    private final double order;

    public void <init>(double)
    {
        org.apache.commons.math3.special.BesselJ r0;
        double d0;

        r0 := @this: org.apache.commons.math3.special.BesselJ;

        d0 := @parameter0: double;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.commons.math3.special.BesselJ: double order> = d0;

        return;
    }

    public double value(double) throws org.apache.commons.math3.exception.MathIllegalArgumentException, org.apache.commons.math3.exception.ConvergenceException
    {
        org.apache.commons.math3.special.BesselJ r0;
        double d0, $d1, $d2;

        r0 := @this: org.apache.commons.math3.special.BesselJ;

        d0 := @parameter0: double;

        $d1 = r0.<org.apache.commons.math3.special.BesselJ: double order>;

        $d2 = staticinvoke <org.apache.commons.math3.special.BesselJ: double value(double,double)>($d1, d0);

        return $d2;
    }

    public static double value(double, double) throws org.apache.commons.math3.exception.MathIllegalArgumentException, org.apache.commons.math3.exception.ConvergenceException
    {
        double d0, d1, d2, $d3, $d4, $d5, $d6, $d7;
        int i0, i1, $i2, $i3, $i4, $i5;
        org.apache.commons.math3.special.BesselJ$BesselJResult r0;
        double[] $r1, $r7, $r13;
        byte $b6;
        org.apache.commons.math3.exception.ConvergenceException $r2;
        java.lang.Object[] $r3, $r9;
        org.apache.commons.math3.exception.util.LocalizedFormats $r4, $r10;
        java.lang.Double $r5, $r6, $r11, $r12;
        org.apache.commons.math3.exception.MathIllegalArgumentException $r8;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        i0 = (int) d0;

        $d3 = (double) i0;

        d2 = d0 - $d3;

        i1 = i0 + 1;

        r0 = staticinvoke <org.apache.commons.math3.special.BesselJ: org.apache.commons.math3.special.BesselJ$BesselJResult rjBesl(double,double,int)>(d1, d2, i1);

        $i2 = staticinvoke <org.apache.commons.math3.special.BesselJ$BesselJResult: int access$000(org.apache.commons.math3.special.BesselJ$BesselJResult)>(r0);

        if $i2 < i1 goto label1;

        $r13 = staticinvoke <org.apache.commons.math3.special.BesselJ$BesselJResult: double[] access$100(org.apache.commons.math3.special.BesselJ$BesselJResult)>(r0);

        $d7 = $r13[i0];

        return $d7;

     label1:
        $i3 = staticinvoke <org.apache.commons.math3.special.BesselJ$BesselJResult: int access$000(org.apache.commons.math3.special.BesselJ$BesselJResult)>(r0);

        if $i3 >= 0 goto label2;

        $r8 = new org.apache.commons.math3.exception.MathIllegalArgumentException;

        $r10 = <org.apache.commons.math3.exception.util.LocalizedFormats: org.apache.commons.math3.exception.util.LocalizedFormats BESSEL_FUNCTION_BAD_ARGUMENT>;

        $r9 = newarray (java.lang.Object)[2];

        $r11 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d0);

        $r9[0] = $r11;

        $r12 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d1);

        $r9[1] = $r12;

        specialinvoke $r8.<org.apache.commons.math3.exception.MathIllegalArgumentException: void <init>(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])>($r10, $r9);

        throw $r8;

     label2:
        $r1 = staticinvoke <org.apache.commons.math3.special.BesselJ$BesselJResult: double[] access$100(org.apache.commons.math3.special.BesselJ$BesselJResult)>(r0);

        $i4 = staticinvoke <org.apache.commons.math3.special.BesselJ$BesselJResult: int access$000(org.apache.commons.math3.special.BesselJ$BesselJResult)>(r0);

        $i5 = $i4 - 1;

        $d4 = $r1[$i5];

        $d5 = staticinvoke <org.apache.commons.math3.util.FastMath: double abs(double)>($d4);

        $b6 = $d5 cmpg 1.0E-100;

        if $b6 >= 0 goto label3;

        $r7 = staticinvoke <org.apache.commons.math3.special.BesselJ$BesselJResult: double[] access$100(org.apache.commons.math3.special.BesselJ$BesselJResult)>(r0);

        $d6 = $r7[i0];

        return $d6;

     label3:
        $r2 = new org.apache.commons.math3.exception.ConvergenceException;

        $r4 = <org.apache.commons.math3.exception.util.LocalizedFormats: org.apache.commons.math3.exception.util.LocalizedFormats BESSEL_FUNCTION_FAILED_CONVERGENCE>;

        $r3 = newarray (java.lang.Object)[2];

        $r5 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d0);

        $r3[0] = $r5;

        $r6 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d1);

        $r3[1] = $r6;

        specialinvoke $r2.<org.apache.commons.math3.exception.ConvergenceException: void <init>(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])>($r4, $r3);

        throw $r2;
    }

    public static org.apache.commons.math3.special.BesselJ$BesselJResult rjBesl(double, double, int)
    {
        double d0, d1, d2, d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21, $d22, $d23, $d24, $d25, $d26, $d27, $d28, $d29, $d30, $d31, $d32, $d33, $d34, $d35, $d36, $d37, $d38, $d39, $d40, $d41, $d42, $d43, $d44, $d45, $d46, $d47, $d48, $d49, $d50, $d51, $d52, $d53, $d54, $d55, $d56, $d57, $d58, $d59, $d60, $d61, $d62, $d63, $d64, $d65, $d66, $d67, $d68, $d69, $d70, $d71, $d72, $d73, $d74, $d75, $d76, $d77, $d78, $d79, $d80, $d81, $d82, $d83, $d84, $d85, $d86, $d87, $d88, $d89, $d90, $d91, $d92, $d93, $d94, $d95, $d96, $d97, $d98, $d99, $d100, $d101, $d102, $d103, $d104, $d105, $d106, $d107, $d108, $d109, $d110, $d111, $d112, $d113, $d114, $d115, $d116, $d117, $d118, $d119, $d120, $d121, $d122, $d123, $d124, $d125, $d126, $d127, $d128, $d129, $d130, $d131, $d132, $d133, $d134, $d135, $d136, $d137, $d138, $d139, $d140, $d141, $d142, $d143, $d144, $d145, $d146, d149, d150, d151, d152, d153, $d154, d155, d156, d157, d158, d159, $d160, $d161, $d162, d163, $d164, $d165, $d166, $d167, $d168, $d169, d170, d171, d172, d173, d174, d175, d176, d177, d178, d179, d180, d181, d182, d183, d184, d185, d186, d187, d188, d189, d191, d193, d194, d195, d196, d197, d198, d199, d200, d201, d202, d203, d204, d205, d206, d207, d208, d209, d210, d211, d212, d213, d214, d215, d216, d217, $d218, d219;
        int i0, i1, $i2, $i9, $i10, $i11, $i12, $i13, $i18, $i19, $i21, $i22, $i24, $i28, $i32, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43, i53, i54, i55, i56, $i58, i59, i60, i61, i62, i63, i64, i65, i66, i67, i68, i69, i71, i72, i73, i74, i75, i76, i78, $i79, $i80;
        double[] r0, $r2, $r3, $r5, $r6, $r7, $r9;
        byte $b3, $b4, $b5, $b6, $b7, $b8, $b14, $b15, $b17, $b20, $b23, $b25, $b26, $b27, $b29, $b30, $b31, $b33, $b34, $b44, $b45, $b46, $b47, $b48, $b49, $b50, $b51, $b52, b57, $b77;
        org.apache.commons.math3.special.BesselJ$BesselJResult $r4, $r8;
        boolean z4, z6, z7;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        i0 := @parameter2: int;

        r0 = newarray (double)[i0];

        i1 = (int) d0;

        if i0 <= 0 goto label61;

        $b3 = d0 cmpl 0.0;

        if $b3 < 0 goto label61;

        $b4 = d0 cmpg 10000.0;

        if $b4 > 0 goto label61;

        $b5 = d1 cmpl 0.0;

        if $b5 < 0 goto label61;

        $b6 = d1 cmpg 1.0;

        if $b6 >= 0 goto label61;

        i53 = i0;

        i54 = 0;

     label01:
        if i54 >= i0 goto label02;

        r0[i54] = 0.0;

        i54 = i54 + 1;

        goto label01;

     label02:
        $b7 = d0 cmpg 1.0E-4;

        if $b7 >= 0 goto label16;

        d149 = 1.0;

        d150 = 1.0 + d1;

        d151 = 0.0;

        $b44 = d0 cmpl 8.9E-308;

        if $b44 <= 0 goto label03;

        d151 = 0.5 * d0;

     label03:
        $b45 = d1 cmpl 0.0;

        if $b45 == 0 goto label04;

        $d144 = staticinvoke <org.apache.commons.math3.util.FastMath: double pow(double,double)>(d151, d1);

        $d145 = staticinvoke <org.apache.commons.math3.special.Gamma: double gamma(double)>(d1);

        $d146 = d1 * $d145;

        d149 = $d144 / $d146;

     label04:
        d152 = 0.0;

        $d133 = d0 + 1.0;

        $b46 = $d133 cmpl 1.0;

        if $b46 <= 0 goto label05;

        $d143 = neg d151;

        d152 = $d143 * d151;

     label05:
        $d134 = d149 * d152;

        $d135 = $d134 / d150;

        $d136 = d149 + $d135;

        r0[0] = $d136;

        $b47 = d0 cmpl 0.0;

        if $b47 == 0 goto label06;

        $d142 = r0[0];

        $b52 = $d142 cmpl 0.0;

        if $b52 != 0 goto label06;

        i53 = 0;

     label06:
        if i0 == 1 goto label15;

        $b48 = d0 cmpg 0.0;

        if $b48 > 0 goto label09;

        i55 = 1;

     label07:
        if i55 >= i0 goto label08;

        r0[i55] = 0.0;

        i55 = i55 + 1;

        goto label07;

     label08:
        goto label15;

     label09:
        d153 = d151;

        $b49 = d152 cmpl 0.0;

        if $b49 == 0 goto label10;

        $d154 = 8.9E-308 / d152;

        goto label11;

     label10:
        $d154 = 1.78E-307 / d0;

     label11:
        d155 = $d154;

        i56 = 1;

     label12:
        if i56 >= i0 goto label15;

        d156 = d149 / d150;

        d150 = d150 + 1.0;

        d149 = d156 * d153;

        $d137 = d155 * d150;

        $b50 = d149 cmpg $d137;

        if $b50 > 0 goto label13;

        d149 = 0.0;

     label13:
        $d138 = d149 * d152;

        $d139 = $d138 / d150;

        $d140 = d149 + $d139;

        r0[i56] = $d140;

        $d141 = r0[i56];

        $b51 = $d141 cmpl 0.0;

        if $b51 != 0 goto label14;

        if i53 <= i56 goto label14;

        i53 = i56;

     label14:
        i56 = i56 + 1;

        goto label12;

     label15:
        goto label60;

     label16:
        $b8 = d0 cmpl 25.0;

        if $b8 <= 0 goto label27;

        $i32 = i1 + 1;

        if i0 > $i32 goto label27;

        $d81 = 0.6366197723675814 / d0;

        d157 = staticinvoke <org.apache.commons.math3.util.FastMath: double sqrt(double)>($d81);

        d158 = 0.125 / d0;

        d159 = d158 * d158;

        $b33 = d0 cmpl 130.0;

        if $b33 < 0 goto label17;

        b57 = 4;

        goto label19;

     label17:
        $b34 = d0 cmpl 35.0;

        if $b34 < 0 goto label18;

        b57 = 8;

        goto label19;

     label18:
        b57 = 11;

     label19:
        $d160 = (double) b57;

        d2 = 4.0 * $d160;

        $d161 = d0 / 6.283185307179586;

        $d162 = $d161 + 0.5;

        $i58 = (int) $d162;

        d163 = (double) $i58;

        $d164 = d163 * 6.28125;

        $d165 = d0 - $d164;

        $d166 = d163 * 0.001935307179586477;

        $d167 = $d165 - $d166;

        $d168 = d1 + 0.5;

        $d169 = $d168 / 0.6366197723675814;

        d3 = $d167 - $d169;

        d170 = staticinvoke <org.apache.commons.math3.util.FastMath: double sin(double)>(d3);

        d171 = staticinvoke <org.apache.commons.math3.util.FastMath: double cos(double)>(d3);

        d172 = 2.0 * d1;

        i59 = 1;

     label20:
        if i59 > 2 goto label24;

        $d88 = d2 - 1.0;

        $d91 = $d88 - d172;

        $d89 = d2 - 1.0;

        $d90 = $d89 + d172;

        $d92 = $d91 * $d90;

        $d93 = $d92 * d159;

        d173 = $d93 * 0.5;

        $d94 = d2 - 3.0;

        $d97 = d172 - $d94;

        $d95 = d2 - 3.0;

        $d96 = d172 + $d95;

        d174 = $d97 * $d96;

        $d99 = d173 * d174;

        $r2 = <org.apache.commons.math3.special.BesselJ: double[] FACT>;

        $i37 = 2 * b57;

        $d98 = $r2[$i37];

        d175 = $d99 / $d98;

        $d100 = d2 + 1.0;

        $d103 = d172 - $d100;

        $d101 = d2 + 1.0;

        $d102 = d172 + $d101;

        d176 = $d103 * $d102;

        $d105 = d173 * d176;

        $r3 = <org.apache.commons.math3.special.BesselJ: double[] FACT>;

        $i38 = 2 * b57;

        $i39 = $i38 + 1;

        $d104 = $r3[$i39];

        d177 = $d105 / $d104;

        d178 = d2;

        i60 = 2 * b57;

        d179 = d174;

        i61 = 2;

     label21:
        if i61 > b57 goto label22;

        d178 = d178 - 4.0;

        $d115 = d178 - 1.0;

        $d118 = $d115 - d172;

        $d116 = d178 - 1.0;

        $d117 = $d116 + d172;

        d180 = $d118 * $d117;

        $d119 = d178 - 3.0;

        $d122 = d172 - $d119;

        $d120 = d178 - 3.0;

        $d121 = d172 + $d120;

        d181 = $d122 * $d121;

        $r6 = <org.apache.commons.math3.special.BesselJ: double[] FACT>;

        $i42 = i60 - 2;

        $d123 = $r6[$i42];

        $d124 = 1.0 / $d123;

        $d125 = d175 + $d124;

        $d126 = $d125 * d180;

        $d127 = $d126 * d181;

        d175 = $d127 * d159;

        $r7 = <org.apache.commons.math3.special.BesselJ: double[] FACT>;

        $i43 = i60 - 1;

        $d128 = $r7[$i43];

        $d129 = 1.0 / $d128;

        $d130 = d177 + $d129;

        $d131 = $d130 * d180;

        $d132 = $d131 * d179;

        d177 = $d132 * d159;

        i60 = i60 + -2;

        d179 = d181;

        i61 = i61 + 1;

        goto label21;

     label22:
        d182 = d175 + 1.0;

        $d108 = d177 + 1.0;

        $d106 = d172 * d172;

        $d107 = $d106 - 1.0;

        $d110 = $d108 * $d107;

        $d109 = 0.125 / d0;

        d183 = $d110 * $d109;

        $i40 = i59 - 1;

        $d112 = d182 * d171;

        $d111 = d183 * d170;

        $d113 = $d112 - $d111;

        $d114 = d157 * $d113;

        r0[$i40] = $d114;

        if i0 != 1 goto label23;

        $r4 = new org.apache.commons.math3.special.BesselJ$BesselJResult;

        $i41 = lengthof r0;

        $r5 = staticinvoke <org.apache.commons.math3.util.MathArrays: double[] copyOf(double[],int)>(r0, $i41);

        specialinvoke $r4.<org.apache.commons.math3.special.BesselJ$BesselJResult: void <init>(double[],int)>($r5, i0);

        return $r4;

     label23:
        d184 = d170;

        d170 = neg d171;

        d171 = d184;

        d172 = d172 + 2.0;

        i59 = i59 + 1;

        goto label20;

     label24:
        if i0 <= 2 goto label26;

        $d82 = 2.0 * d1;

        d185 = $d82 + 2.0;

        i62 = 2;

     label25:
        if i62 >= i0 goto label26;

        $i35 = i62 - 1;

        $d83 = r0[$i35];

        $d84 = d185 * $d83;

        $d86 = $d84 / d0;

        $i36 = i62 - 2;

        $d85 = r0[$i36];

        $d87 = $d86 - $d85;

        r0[i62] = $d87;

        d185 = d185 + 2.0;

        i62 = i62 + 1;

        goto label25;

     label26:
        goto label60;

     label27:
        i63 = i0 - i1;

        i64 = i1 + 1;

        $d4 = (double) i64;

        $d5 = $d4 + d1;

        d186 = 2.0 * $d5;

        d187 = 1.0;

        d188 = d186 / d0;

        d189 = 2.0E16;

        z4 = 0;

        if i63 < 3 goto label35;

        i65 = i1 + 2;

        i66 = i0 - 1;

        $i28 = i65 - 1;

        $d61 = (double) $i28;

        $d62 = $d61 + d1;

        d186 = 2.0 * $d62;

        i67 = i65;

     label28:
        if i67 > i66 goto label34;

        i64 = i67;

        d186 = d186 + 2.0;

        d191 = d187;

        d187 = d188;

        $d70 = d186 * d188;

        $d71 = $d70 / d0;

        d188 = $d71 - d191;

        $b29 = d188 cmpl 1.0E292;

        if $b29 <= 0 goto label33;

        d193 = d188 / 1.0E308;

        d187 = d187 / 1.0E308;

        d194 = d193;

        d195 = d187;

        i68 = i67 + 1;

     label29:
        i64 = i64 + 1;

        d186 = d186 + 2.0;

        d196 = d187;

        d187 = d193;

        $d72 = d186 * d193;

        $d73 = $d72 / d0;

        d193 = $d73 - d196;

        $b30 = d193 cmpg 1.0;

        if $b30 <= 0 goto label29;

        d197 = d186 / d0;

        $d77 = d196 * d187;

        $d74 = d197 * d197;

        $d75 = 0.5 / $d74;

        $d76 = 0.5 - $d75;

        d198 = $d77 * $d76;

        d189 = d198 / 1.0E16;

        d188 = d187 * 1.0E308;

        i64 = i64 + -1;

        d186 = d186 - 2.0;

        i66 = staticinvoke <org.apache.commons.math3.util.FastMath: int min(int,int)>(i0, i64);

        i69 = i68;

     label30:
        if i69 > i66 goto label32;

        d199 = d195;

        d195 = d194;

        $d78 = d186 * d194;

        $d79 = $d78 / d0;

        d194 = $d79 - d199;

        $d80 = d194 * d195;

        $b31 = $d80 cmpl d189;

        if $b31 <= 0 goto label31;

        goto label32;

     label31:
        i69 = i69 + 1;

        goto label30;

     label32:
        i53 = i66;

        z4 = 1;

        goto label34;

     label33:
        i67 = i67 + 1;

        goto label28;

     label34:
        if z4 != 0 goto label35;

        i64 = i66;

        $d63 = (double) i66;

        $d64 = $d63 + d1;

        d186 = 2.0 * $d64;

        $d65 = d187 * 1.0E16;

        $d66 = staticinvoke <org.apache.commons.math3.util.FastMath: double sqrt(double)>($d65);

        $d67 = 2.0 * d188;

        $d68 = staticinvoke <org.apache.commons.math3.util.FastMath: double sqrt(double)>($d67);

        $d69 = $d66 * $d68;

        d189 = staticinvoke <org.apache.commons.math3.util.FastMath: double max(double,double)>(d189, $d69);

     label35:
        if z4 != 0 goto label37;

     label36:
        i64 = i64 + 1;

        d186 = d186 + 2.0;

        d200 = d187;

        d187 = d188;

        $d59 = d186 * d188;

        $d60 = $d59 / d0;

        d188 = $d60 - d200;

        $b27 = d188 cmpg d189;

        if $b27 < 0 goto label36;

     label37:
        i71 = i64 + 1;

        d201 = d186 + 2.0;

        d202 = 0.0;

        d203 = 1.0 / d188;

        $i11 = 2 * i71;

        $i9 = i71 / 2;

        $i10 = 4 * $i9;

        i72 = $i11 - $i10;

        d204 = 0.0;

        $i12 = i71 / 2;

        d205 = (double) $i12;

        $d6 = d205 - 1.0;

        d206 = $d6 + d1;

        $d7 = 2.0 * d205;

        d207 = $d7 + d1;

        if i72 == 0 goto label38;

        $d57 = d203 * d206;

        $d58 = $d57 * d207;

        d204 = $d58 / d205;

     label38:
        i73 = i71 - i0;

        z6 = 0;

        z7 = 0;

        i74 = 1;

     label39:
        if i74 > i73 goto label43;

        i71 = i71 + -1;

        d201 = d201 - 2.0;

        d208 = d202;

        d202 = d203;

        $d50 = d201 * d203;

        $d51 = $d50 / d0;

        d203 = $d51 - d208;

        i72 = 2 - i72;

        if i72 == 0 goto label42;

        d205 = d205 - 1.0;

        $d52 = 2.0 * d205;

        d209 = $d52 + d1;

        if i71 != 1 goto label40;

        goto label43;

     label40:
        $d53 = d205 - 1.0;

        d210 = $d53 + d1;

        $b26 = d210 cmpl 0.0;

        if $b26 != 0 goto label41;

        d210 = 1.0;

     label41:
        $d54 = d203 * d209;

        $d55 = d204 + $d54;

        $d56 = $d55 * d210;

        d204 = $d56 / d205;

     label42:
        i74 = i74 + 1;

        goto label39;

     label43:
        $i13 = i71 - 1;

        r0[$i13] = d203;

        if i73 < 0 goto label48;

        if i0 > 1 goto label45;

        d211 = d1;

        $d47 = d1 + 1.0;

        $b25 = $d47 cmpl 1.0;

        if $b25 != 0 goto label44;

        d211 = 1.0;

     label44:
        $d48 = r0[0];

        $d49 = $d48 * d211;

        d204 = d204 + $d49;

        z6 = 1;

        goto label48;

     label45:
        i71 = i71 + -1;

        d201 = d201 - 2.0;

        $i22 = i71 - 1;

        $d38 = d201 * d203;

        $d39 = $d38 / d0;

        $d40 = $d39 - d202;

        r0[$i22] = $d40;

        if i71 != 1 goto label46;

        z7 = 1;

        goto label48;

     label46:
        i72 = 2 - i72;

        if i72 == 0 goto label48;

        d205 = d205 - 1.0;

        $d41 = 2.0 * d205;

        d212 = $d41 + d1;

        $d42 = d205 - 1.0;

        d213 = $d42 + d1;

        $b23 = d213 cmpl 0.0;

        if $b23 != 0 goto label47;

        d213 = 1.0;

     label47:
        $i24 = i71 - 1;

        $d43 = r0[$i24];

        $d44 = $d43 * d212;

        $d45 = d204 + $d44;

        $d46 = $d45 * d213;

        d204 = $d46 / d205;

     label48:
        if z6 != 0 goto label52;

        if z7 != 0 goto label52;

        i75 = i71 - 2;

        if i75 == 0 goto label52;

        i76 = 1;

     label49:
        if i76 > i75 goto label52;

        i71 = i71 + -1;

        d201 = d201 - 2.0;

        $i19 = i71 - 1;

        $d27 = r0[i71];

        $d28 = d201 * $d27;

        $d30 = $d28 / d0;

        $i18 = i71 + 1;

        $d29 = r0[$i18];

        $d31 = $d30 - $d29;

        r0[$i19] = $d31;

        i72 = 2 - i72;

        if i72 == 0 goto label51;

        d205 = d205 - 1.0;

        $d32 = 2.0 * d205;

        d214 = $d32 + d1;

        $d33 = d205 - 1.0;

        d215 = $d33 + d1;

        $b20 = d215 cmpl 0.0;

        if $b20 != 0 goto label50;

        d215 = 1.0;

     label50:
        $i21 = i71 - 1;

        $d34 = r0[$i21];

        $d35 = $d34 * d214;

        $d36 = d204 + $d35;

        $d37 = $d36 * d215;

        d204 = $d37 / d205;

     label51:
        i76 = i76 + 1;

        goto label49;

     label52:
        if z6 != 0 goto label55;

        if z7 != 0 goto label53;

        $d20 = d1 + 1.0;

        $d22 = 2.0 * $d20;

        $d21 = r0[1];

        $d23 = $d22 * $d21;

        $d25 = $d23 / d0;

        $d24 = r0[2];

        $d26 = $d25 - $d24;

        r0[0] = $d26;

     label53:
        d216 = d205 - 1.0;

        $d17 = 2.0 * d216;

        d217 = $d17 + d1;

        $b17 = d217 cmpl 0.0;

        if $b17 != 0 goto label54;

        d217 = 1.0;

     label54:
        $d18 = r0[0];

        $d19 = $d18 * d217;

        d204 = d204 + $d19;

     label55:
        $d218 = staticinvoke <org.apache.commons.math3.util.FastMath: double abs(double)>(d1);

        $b77 = $d218 cmpl 1.0E-16;

        if $b77 <= 0 goto label56;

        $d12 = staticinvoke <org.apache.commons.math3.special.Gamma: double gamma(double)>(d1);

        $d14 = d0 * 0.5;

        $d13 = neg d1;

        $d15 = staticinvoke <org.apache.commons.math3.util.FastMath: double pow(double,double)>($d14, $d13);

        $d16 = $d12 * $d15;

        d204 = d204 * $d16;

     label56:
        d219 = 8.9E-308;

        $b14 = d204 cmpl 1.0;

        if $b14 <= 0 goto label57;

        d219 = 8.9E-308 * d204;

     label57:
        i78 = 0;

     label58:
        if i78 >= i0 goto label60;

        $d8 = r0[i78];

        $d9 = staticinvoke <org.apache.commons.math3.util.FastMath: double abs(double)>($d8);

        $b15 = $d9 cmpg d219;

        if $b15 >= 0 goto label59;

        r0[i78] = 0.0;

     label59:
        $d10 = r0[i78];

        $d11 = $d10 / d204;

        r0[i78] = $d11;

        i78 = i78 + 1;

        goto label58;

     label60:
        goto label63;

     label61:
        $i79 = lengthof r0;

        if $i79 <= 0 goto label62;

        r0[0] = 0.0;

     label62:
        $i2 = staticinvoke <org.apache.commons.math3.util.FastMath: int min(int,int)>(i0, 0);

        i53 = $i2 - 1;

     label63:
        $r8 = new org.apache.commons.math3.special.BesselJ$BesselJResult;

        $i80 = lengthof r0;

        $r9 = staticinvoke <org.apache.commons.math3.util.MathArrays: double[] copyOf(double[],int)>(r0, $i80);

        specialinvoke $r8.<org.apache.commons.math3.special.BesselJ$BesselJResult: void <init>(double[],int)>($r9, i53);

        return $r8;
    }

    static void <clinit>()
    {
        double[] $r0;

        <org.apache.commons.math3.special.BesselJ: double X_MAX> = 10000.0;

        <org.apache.commons.math3.special.BesselJ: double X_MIN> = 0.0;

        <org.apache.commons.math3.special.BesselJ: double ENMTEN> = 8.9E-308;

        <org.apache.commons.math3.special.BesselJ: double RTNSIG> = 1.0E-4;

        <org.apache.commons.math3.special.BesselJ: double ENSIG> = 1.0E16;

        <org.apache.commons.math3.special.BesselJ: double ENTEN> = 1.0E308;

        <org.apache.commons.math3.special.BesselJ: double TWOPI> = 6.283185307179586;

        <org.apache.commons.math3.special.BesselJ: double TWOPI2> = 0.001935307179586477;

        <org.apache.commons.math3.special.BesselJ: double TOWPI1> = 6.28125;

        <org.apache.commons.math3.special.BesselJ: double PI2> = 0.6366197723675814;

        $r0 = newarray (double)[25];

        $r0[0] = 1.0;

        $r0[1] = 1.0;

        $r0[2] = 2.0;

        $r0[3] = 6.0;

        $r0[4] = 24.0;

        $r0[5] = 120.0;

        $r0[6] = 720.0;

        $r0[7] = 5040.0;

        $r0[8] = 40320.0;

        $r0[9] = 362880.0;

        $r0[10] = 3628800.0;

        $r0[11] = 3.99168E7;

        $r0[12] = 4.790016E8;

        $r0[13] = 6.2270208E9;

        $r0[14] = 8.71782912E10;

        $r0[15] = 1.307674368E12;

        $r0[16] = 2.0922789888E13;

        $r0[17] = 3.55687428096E14;

        $r0[18] = 6.402373705728E15;

        $r0[19] = 1.21645100408832E17;

        $r0[20] = 2.43290200817664E18;

        $r0[21] = 5.109094217170944E19;

        $r0[22] = 1.1240007277776077E21;

        $r0[23] = 2.585201673888498E22;

        $r0[24] = 6.204484017332394E23;

        <org.apache.commons.math3.special.BesselJ: double[] FACT> = $r0;

        return;
    }
}
