public class org.apache.commons.math3.geometry.partitioning.BoundaryProjection extends java.lang.Object
{
    private final org.apache.commons.math3.geometry.Point original;
    private final org.apache.commons.math3.geometry.Point projected;
    private final double offset;

    public void <init>(org.apache.commons.math3.geometry.Point, org.apache.commons.math3.geometry.Point, double)
    {
        org.apache.commons.math3.geometry.partitioning.BoundaryProjection r0;
        org.apache.commons.math3.geometry.Point r1, r2;
        double d0;

        r0 := @this: org.apache.commons.math3.geometry.partitioning.BoundaryProjection;

        r1 := @parameter0: org.apache.commons.math3.geometry.Point;

        r2 := @parameter1: org.apache.commons.math3.geometry.Point;

        d0 := @parameter2: double;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.commons.math3.geometry.partitioning.BoundaryProjection: org.apache.commons.math3.geometry.Point original> = r1;

        r0.<org.apache.commons.math3.geometry.partitioning.BoundaryProjection: org.apache.commons.math3.geometry.Point projected> = r2;

        r0.<org.apache.commons.math3.geometry.partitioning.BoundaryProjection: double offset> = d0;

        return;
    }

    public org.apache.commons.math3.geometry.Point getOriginal()
    {
        org.apache.commons.math3.geometry.partitioning.BoundaryProjection r0;
        org.apache.commons.math3.geometry.Point $r1;

        r0 := @this: org.apache.commons.math3.geometry.partitioning.BoundaryProjection;

        $r1 = r0.<org.apache.commons.math3.geometry.partitioning.BoundaryProjection: org.apache.commons.math3.geometry.Point original>;

        return $r1;
    }

    public org.apache.commons.math3.geometry.Point getProjected()
    {
        org.apache.commons.math3.geometry.partitioning.BoundaryProjection r0;
        org.apache.commons.math3.geometry.Point $r1;

        r0 := @this: org.apache.commons.math3.geometry.partitioning.BoundaryProjection;

        $r1 = r0.<org.apache.commons.math3.geometry.partitioning.BoundaryProjection: org.apache.commons.math3.geometry.Point projected>;

        return $r1;
    }

    public double getOffset()
    {
        org.apache.commons.math3.geometry.partitioning.BoundaryProjection r0;
        double $d0;

        r0 := @this: org.apache.commons.math3.geometry.partitioning.BoundaryProjection;

        $d0 = r0.<org.apache.commons.math3.geometry.partitioning.BoundaryProjection: double offset>;

        return $d0;
    }
}
