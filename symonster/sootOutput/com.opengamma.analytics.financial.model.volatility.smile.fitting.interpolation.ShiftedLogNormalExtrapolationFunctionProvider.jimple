public class com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.ShiftedLogNormalExtrapolationFunctionProvider extends com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileExtrapolationFunctionSABRProvider
{
    private static final com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.ShiftedLogNormalTailExtrapolationFitter TAIL_FITTER;
    private static final com.opengamma.analytics.math.differentiation.ScalarFirstOrderDifferentiator DIFFERENTIATOR;
    private static final java.lang.String s_exception;
    private static final java.lang.String s_flat;
    private static final java.lang.String s_quiet;
    private final java.lang.String _extrapolatorFailureBehaviour;

    public void <init>()
    {
        com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.ShiftedLogNormalExtrapolationFunctionProvider r0;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.ShiftedLogNormalExtrapolationFunctionProvider;

        specialinvoke r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileExtrapolationFunctionSABRProvider: void <init>()>();

        r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.ShiftedLogNormalExtrapolationFunctionProvider: java.lang.String _extrapolatorFailureBehaviour> = "Exception";

        return;
    }

    public void <init>(java.lang.String)
    {
        com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.ShiftedLogNormalExtrapolationFunctionProvider r0;
        java.lang.String r1;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.ShiftedLogNormalExtrapolationFunctionProvider;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileExtrapolationFunctionSABRProvider: void <init>()>();

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "extrapolatorFailureBehaviour");

        r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.ShiftedLogNormalExtrapolationFunctionProvider: java.lang.String _extrapolatorFailureBehaviour> = r1;

        return;
    }

    public com.opengamma.analytics.math.function.Function1D getExtrapolationFunction(com.opengamma.analytics.financial.model.volatility.smile.function.SABRFormulaData, com.opengamma.analytics.financial.model.volatility.smile.function.SABRFormulaData, com.opengamma.analytics.financial.model.volatility.smile.function.VolatilityFunctionProvider, double, double, double, double)
    {
        com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.ShiftedLogNormalExtrapolationFunctionProvider r0;
        com.opengamma.analytics.financial.model.volatility.smile.function.SABRFormulaData r1, r2;
        com.opengamma.analytics.financial.model.volatility.smile.function.VolatilityFunctionProvider r3;
        double d0, d1, d2, d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13;
        com.opengamma.analytics.math.function.Function1D r7, r8;
        byte $b0, $b1, $b2;
        com.opengamma.analytics.math.differentiation.ScalarFirstOrderDifferentiator $r15, $r16;
        java.lang.String $r17, $r24, $r25;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        java.lang.Object[] $r18, $r21;
        java.lang.Double $r19, $r20, $r22, $r23, $r28, $r30, $r31, $r33, $r35, $r37, $r38, $r40, $r42, $r44, $r45, $r47, $r49, $r51, $r52, $r54, $r56, $r58, $r60, $r62;
        com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.ShiftedLogNormalTailExtrapolationFitter $r27, $r34, $r41, $r48, $r55, $r59;
        java.lang.Object $r29, $r32, $r36, $r39, $r43, $r46, $r50, $r53, $r57, $r61;
        double[] r63, r64;
        com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.ShiftedLogNormalExtrapolationFunctionProvider$1 r66;
        com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.ShiftedLogNormalExtrapolationFunctionProvider$2 r67;
        com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.ShiftedLogNormalExtrapolationFunctionProvider$3 r68;
        com.opengamma.OpenGammaRuntimeException r69;
        com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.ShiftedLogNormalExtrapolationFunctionProvider$4 r70;
        java.lang.Throwable r71;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.ShiftedLogNormalExtrapolationFunctionProvider;

        r1 := @parameter0: com.opengamma.analytics.financial.model.volatility.smile.function.SABRFormulaData;

        r2 := @parameter1: com.opengamma.analytics.financial.model.volatility.smile.function.SABRFormulaData;

        r3 := @parameter2: com.opengamma.analytics.financial.model.volatility.smile.function.VolatilityFunctionProvider;

        d0 := @parameter3: double;

        d1 := @parameter4: double;

        d2 := @parameter5: double;

        d3 := @parameter6: double;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "sabrDataLow");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, "sabrDataHigh");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r3, "volatilityFunction");

        $b0 = 0.0 cmpg d2;

        if $b0 >= 0 goto label01;

        $z3 = 1;

        goto label02;

     label01:
        $z3 = 0;

     label02:
        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z3, "cutOffStrikeLow should be positive");

        r66 = new com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.ShiftedLogNormalExtrapolationFunctionProvider$1;

        specialinvoke r66.<com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.ShiftedLogNormalExtrapolationFunctionProvider$1: void <init>(com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.ShiftedLogNormalExtrapolationFunctionProvider,double,double)>(r0, d2, d3);

        r67 = new com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.ShiftedLogNormalExtrapolationFunctionProvider$2;

        specialinvoke r67.<com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.ShiftedLogNormalExtrapolationFunctionProvider$2: void <init>(com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.ShiftedLogNormalExtrapolationFunctionProvider,double,com.opengamma.analytics.financial.model.volatility.smile.function.VolatilityFunctionProvider,double,com.opengamma.analytics.financial.model.volatility.smile.function.SABRFormulaData)>(r0, d1, r3, d0, r1);

        r68 = new com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.ShiftedLogNormalExtrapolationFunctionProvider$3;

        specialinvoke r68.<com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.ShiftedLogNormalExtrapolationFunctionProvider$3: void <init>(com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.ShiftedLogNormalExtrapolationFunctionProvider,double,com.opengamma.analytics.financial.model.volatility.smile.function.VolatilityFunctionProvider,double,com.opengamma.analytics.financial.model.volatility.smile.function.SABRFormulaData)>(r0, d1, r3, d0, r2);

        $r15 = <com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.ShiftedLogNormalExtrapolationFunctionProvider: com.opengamma.analytics.math.differentiation.ScalarFirstOrderDifferentiator DIFFERENTIATOR>;

        r7 = virtualinvoke $r15.<com.opengamma.analytics.math.differentiation.ScalarFirstOrderDifferentiator: com.opengamma.analytics.math.function.Function1D differentiate(com.opengamma.analytics.math.function.Function1D,com.opengamma.analytics.math.function.Function1D)>(r67, r66);

        $r16 = <com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.ShiftedLogNormalExtrapolationFunctionProvider: com.opengamma.analytics.math.differentiation.ScalarFirstOrderDifferentiator DIFFERENTIATOR>;

        r8 = virtualinvoke $r16.<com.opengamma.analytics.math.differentiation.ScalarFirstOrderDifferentiator: com.opengamma.analytics.math.function.Function1D differentiate(com.opengamma.analytics.math.function.Function1D,com.opengamma.analytics.math.function.Function1D)>(r68, r66);

        $r17 = r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.ShiftedLogNormalExtrapolationFunctionProvider: java.lang.String _extrapolatorFailureBehaviour>;

        $z0 = virtualinvoke $r17.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("Flat");

        if $z0 == 0 goto label03;

        $r55 = <com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.ShiftedLogNormalExtrapolationFunctionProvider: com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.ShiftedLogNormalTailExtrapolationFitter TAIL_FITTER>;

        $r56 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d3);

        $r57 = virtualinvoke r68.<com.opengamma.analytics.math.function.Function1D: java.lang.Object evaluate(java.lang.Object)>($r56);

        $r58 = (java.lang.Double) $r57;

        $d12 = virtualinvoke $r58.<java.lang.Double: double doubleValue()>();

        r63 = virtualinvoke $r55.<com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.ShiftedLogNormalTailExtrapolationFitter: double[] fitVolatilityAndGrad(double,double,double,double,double)>(d0, d3, $d12, 0.0, d1);

        $r59 = <com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.ShiftedLogNormalExtrapolationFunctionProvider: com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.ShiftedLogNormalTailExtrapolationFitter TAIL_FITTER>;

        $r60 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d2);

        $r61 = virtualinvoke r67.<com.opengamma.analytics.math.function.Function1D: java.lang.Object evaluate(java.lang.Object)>($r60);

        $r62 = (java.lang.Double) $r61;

        $d13 = virtualinvoke $r62.<java.lang.Double: double doubleValue()>();

        r64 = virtualinvoke $r59.<com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.ShiftedLogNormalTailExtrapolationFitter: double[] fitVolatilityAndGrad(double,double,double,double,double)>(d0, d2, $d13, 0.0, d1);

        goto label10;

     label03:
        $b1 = d2 cmpg d0;

        if $b1 > 0 goto label04;

        $z4 = 1;

        goto label05;

     label04:
        $z4 = 0;

     label05:
        $r18 = newarray (java.lang.Object)[2];

        $r19 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d2);

        $r18[0] = $r19;

        $r20 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d0);

        $r18[1] = $r20;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String,java.lang.Object[])>($z4, "Cannot do left tail extrapolation when the lowest strike ({}) is greater than the forward ({})", $r18);

        $b2 = d3 cmpl d0;

        if $b2 < 0 goto label06;

        $z5 = 1;

        goto label07;

     label06:
        $z5 = 0;

     label07:
        $r21 = newarray (java.lang.Object)[2];

        $r22 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d3);

        $r21[0] = $r22;

        $r23 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d0);

        $r21[1] = $r23;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String,java.lang.Object[])>($z5, "Cannot do right tail extrapolation when the highest strike ({}) is less than the forward ({})", $r21);

        $r24 = r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.ShiftedLogNormalExtrapolationFunctionProvider: java.lang.String _extrapolatorFailureBehaviour>;

        $z1 = virtualinvoke $r24.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("Quiet");

        if $z1 == 0 goto label08;

        $r41 = <com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.ShiftedLogNormalExtrapolationFunctionProvider: com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.ShiftedLogNormalTailExtrapolationFitter TAIL_FITTER>;

        $r42 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d3);

        $r43 = virtualinvoke r68.<com.opengamma.analytics.math.function.Function1D: java.lang.Object evaluate(java.lang.Object)>($r42);

        $r44 = (java.lang.Double) $r43;

        $d8 = virtualinvoke $r44.<java.lang.Double: double doubleValue()>();

        $r45 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d3);

        $r46 = virtualinvoke r8.<com.opengamma.analytics.math.function.Function1D: java.lang.Object evaluate(java.lang.Object)>($r45);

        $r47 = (java.lang.Double) $r46;

        $d9 = virtualinvoke $r47.<java.lang.Double: double doubleValue()>();

        r63 = virtualinvoke $r41.<com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.ShiftedLogNormalTailExtrapolationFitter: double[] fitVolatilityAndGradRecursivelyByReducingSmile(double,double,double,double,double)>(d0, d3, $d8, $d9, d1);

        $r48 = <com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.ShiftedLogNormalExtrapolationFunctionProvider: com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.ShiftedLogNormalTailExtrapolationFitter TAIL_FITTER>;

        $r49 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d2);

        $r50 = virtualinvoke r67.<com.opengamma.analytics.math.function.Function1D: java.lang.Object evaluate(java.lang.Object)>($r49);

        $r51 = (java.lang.Double) $r50;

        $d10 = virtualinvoke $r51.<java.lang.Double: double doubleValue()>();

        $r52 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d2);

        $r53 = virtualinvoke r7.<com.opengamma.analytics.math.function.Function1D: java.lang.Object evaluate(java.lang.Object)>($r52);

        $r54 = (java.lang.Double) $r53;

        $d11 = virtualinvoke $r54.<java.lang.Double: double doubleValue()>();

        r64 = virtualinvoke $r48.<com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.ShiftedLogNormalTailExtrapolationFitter: double[] fitVolatilityAndGradRecursivelyByReducingSmile(double,double,double,double,double)>(d0, d2, $d10, $d11, d1);

        goto label10;

     label08:
        $r25 = r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.ShiftedLogNormalExtrapolationFunctionProvider: java.lang.String _extrapolatorFailureBehaviour>;

        $z2 = virtualinvoke $r25.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("Exception");

        if $z2 == 0 goto label09;

        $r27 = <com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.ShiftedLogNormalExtrapolationFunctionProvider: com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.ShiftedLogNormalTailExtrapolationFitter TAIL_FITTER>;

        $r28 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d3);

        $r29 = virtualinvoke r68.<com.opengamma.analytics.math.function.Function1D: java.lang.Object evaluate(java.lang.Object)>($r28);

        $r30 = (java.lang.Double) $r29;

        $d4 = virtualinvoke $r30.<java.lang.Double: double doubleValue()>();

        $r31 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d3);

        $r32 = virtualinvoke r8.<com.opengamma.analytics.math.function.Function1D: java.lang.Object evaluate(java.lang.Object)>($r31);

        $r33 = (java.lang.Double) $r32;

        $d5 = virtualinvoke $r33.<java.lang.Double: double doubleValue()>();

        r63 = virtualinvoke $r27.<com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.ShiftedLogNormalTailExtrapolationFitter: double[] fitVolatilityAndGrad(double,double,double,double,double)>(d0, d3, $d4, $d5, d1);

        $r34 = <com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.ShiftedLogNormalExtrapolationFunctionProvider: com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.ShiftedLogNormalTailExtrapolationFitter TAIL_FITTER>;

        $r35 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d2);

        $r36 = virtualinvoke r67.<com.opengamma.analytics.math.function.Function1D: java.lang.Object evaluate(java.lang.Object)>($r35);

        $r37 = (java.lang.Double) $r36;

        $d6 = virtualinvoke $r37.<java.lang.Double: double doubleValue()>();

        $r38 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d2);

        $r39 = virtualinvoke r7.<com.opengamma.analytics.math.function.Function1D: java.lang.Object evaluate(java.lang.Object)>($r38);

        $r40 = (java.lang.Double) $r39;

        $d7 = virtualinvoke $r40.<java.lang.Double: double doubleValue()>();

        r64 = virtualinvoke $r34.<com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.ShiftedLogNormalTailExtrapolationFitter: double[] fitVolatilityAndGrad(double,double,double,double,double)>(d0, d2, $d6, $d7, d1);

        goto label10;

     label09:
        r69 = new com.opengamma.OpenGammaRuntimeException;

        specialinvoke r69.<com.opengamma.OpenGammaRuntimeException: void <init>(java.lang.String)>("Unrecognized _extrapolatorFailureBehaviour. Looking for one of Exception, Quiet, or Flat");

        r71 = (java.lang.Throwable) r69;

        throw r71;

     label10:
        r70 = new com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.ShiftedLogNormalExtrapolationFunctionProvider$4;

        specialinvoke r70.<com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.ShiftedLogNormalExtrapolationFunctionProvider$4: void <init>(com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.ShiftedLogNormalExtrapolationFunctionProvider,double,double,double,double[],double,double[])>(r0, d2, d0, d1, r64, d3, r63);

        return r70;
    }

    public int hashCode()
    {
        com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.ShiftedLogNormalExtrapolationFunctionProvider r0;
        java.lang.String $r1, $r2;
        int $i1, $i3, i4;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.ShiftedLogNormalExtrapolationFunctionProvider;

        $i1 = 31 * 1;

        $r1 = r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.ShiftedLogNormalExtrapolationFunctionProvider: java.lang.String _extrapolatorFailureBehaviour>;

        if $r1 != null goto label1;

        $i3 = 0;

        goto label2;

     label1:
        $r2 = r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.ShiftedLogNormalExtrapolationFunctionProvider: java.lang.String _extrapolatorFailureBehaviour>;

        $i3 = virtualinvoke $r2.<java.lang.String: int hashCode()>();

     label2:
        i4 = $i1 + $i3;

        return i4;
    }

    public boolean equals(java.lang.Object)
    {
        com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.ShiftedLogNormalExtrapolationFunctionProvider r0, r2;
        java.lang.Object r1;
        boolean $z0, $z1;
        java.lang.String $r3, $r4, $r5, $r6;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.ShiftedLogNormalExtrapolationFunctionProvider;

        r1 := @parameter0: java.lang.Object;

        if r0 != r1 goto label1;

        return 1;

     label1:
        if r1 != null goto label2;

        return 0;

     label2:
        $z0 = r1 instanceof com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.ShiftedLogNormalExtrapolationFunctionProvider;

        if $z0 != 0 goto label3;

        return 0;

     label3:
        r2 = (com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.ShiftedLogNormalExtrapolationFunctionProvider) r1;

        $r3 = r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.ShiftedLogNormalExtrapolationFunctionProvider: java.lang.String _extrapolatorFailureBehaviour>;

        if $r3 != null goto label4;

        $r6 = r2.<com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.ShiftedLogNormalExtrapolationFunctionProvider: java.lang.String _extrapolatorFailureBehaviour>;

        if $r6 == null goto label5;

        return 0;

     label4:
        $r5 = r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.ShiftedLogNormalExtrapolationFunctionProvider: java.lang.String _extrapolatorFailureBehaviour>;

        $r4 = r2.<com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.ShiftedLogNormalExtrapolationFunctionProvider: java.lang.String _extrapolatorFailureBehaviour>;

        $z1 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        if $z1 != 0 goto label5;

        return 0;

     label5:
        return 1;
    }

    static void <clinit>()
    {
        com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.ShiftedLogNormalTailExtrapolationFitter $r0;
        com.opengamma.analytics.math.differentiation.ScalarFirstOrderDifferentiator $r1;

        <com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.ShiftedLogNormalExtrapolationFunctionProvider: java.lang.String s_quiet> = "Quiet";

        <com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.ShiftedLogNormalExtrapolationFunctionProvider: java.lang.String s_flat> = "Flat";

        <com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.ShiftedLogNormalExtrapolationFunctionProvider: java.lang.String s_exception> = "Exception";

        $r0 = new com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.ShiftedLogNormalTailExtrapolationFitter;

        specialinvoke $r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.ShiftedLogNormalTailExtrapolationFitter: void <init>()>();

        <com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.ShiftedLogNormalExtrapolationFunctionProvider: com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.ShiftedLogNormalTailExtrapolationFitter TAIL_FITTER> = $r0;

        $r1 = new com.opengamma.analytics.math.differentiation.ScalarFirstOrderDifferentiator;

        specialinvoke $r1.<com.opengamma.analytics.math.differentiation.ScalarFirstOrderDifferentiator: void <init>()>();

        <com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.ShiftedLogNormalExtrapolationFunctionProvider: com.opengamma.analytics.math.differentiation.ScalarFirstOrderDifferentiator DIFFERENTIATOR> = $r1;

        return;
    }
}
