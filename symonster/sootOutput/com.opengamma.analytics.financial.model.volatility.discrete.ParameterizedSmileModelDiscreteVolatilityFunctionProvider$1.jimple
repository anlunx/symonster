class com.opengamma.analytics.financial.model.volatility.discrete.ParameterizedSmileModelDiscreteVolatilityFunctionProvider$1 extends com.opengamma.analytics.financial.model.volatility.discrete.DiscreteVolatilityFunction
{
    final int val$nOptions;
    final int val$nExpiries;
    final int val$nSmileModelParms;
    final com.opengamma.analytics.math.function.VectorFunction val$modelToSmileModelParms;
    final java.util.List val$smiles;
    final java.util.List val$smilesAdjoints;
    final int[][] val$revMap;
    final com.opengamma.analytics.financial.model.volatility.discrete.ParameterizedSmileModelDiscreteVolatilityFunctionProvider this$0;

    void <init>(com.opengamma.analytics.financial.model.volatility.discrete.ParameterizedSmileModelDiscreteVolatilityFunctionProvider, int, int, int, com.opengamma.analytics.math.function.VectorFunction, java.util.List, java.util.List, int[][])
    {
        com.opengamma.analytics.financial.model.volatility.discrete.ParameterizedSmileModelDiscreteVolatilityFunctionProvider$1 r0;
        com.opengamma.analytics.financial.model.volatility.discrete.ParameterizedSmileModelDiscreteVolatilityFunctionProvider r1;
        int i0, i1, i2;
        com.opengamma.analytics.math.function.VectorFunction r2;
        java.util.List r3, r4;
        int[][] r5;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.discrete.ParameterizedSmileModelDiscreteVolatilityFunctionProvider$1;

        r1 := @parameter0: com.opengamma.analytics.financial.model.volatility.discrete.ParameterizedSmileModelDiscreteVolatilityFunctionProvider;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        r2 := @parameter4: com.opengamma.analytics.math.function.VectorFunction;

        r3 := @parameter5: java.util.List;

        r4 := @parameter6: java.util.List;

        r5 := @parameter7: int[][];

        r0.<com.opengamma.analytics.financial.model.volatility.discrete.ParameterizedSmileModelDiscreteVolatilityFunctionProvider$1: com.opengamma.analytics.financial.model.volatility.discrete.ParameterizedSmileModelDiscreteVolatilityFunctionProvider this$0> = r1;

        r0.<com.opengamma.analytics.financial.model.volatility.discrete.ParameterizedSmileModelDiscreteVolatilityFunctionProvider$1: int val$nOptions> = i0;

        r0.<com.opengamma.analytics.financial.model.volatility.discrete.ParameterizedSmileModelDiscreteVolatilityFunctionProvider$1: int val$nExpiries> = i1;

        r0.<com.opengamma.analytics.financial.model.volatility.discrete.ParameterizedSmileModelDiscreteVolatilityFunctionProvider$1: int val$nSmileModelParms> = i2;

        r0.<com.opengamma.analytics.financial.model.volatility.discrete.ParameterizedSmileModelDiscreteVolatilityFunctionProvider$1: com.opengamma.analytics.math.function.VectorFunction val$modelToSmileModelParms> = r2;

        r0.<com.opengamma.analytics.financial.model.volatility.discrete.ParameterizedSmileModelDiscreteVolatilityFunctionProvider$1: java.util.List val$smiles> = r3;

        r0.<com.opengamma.analytics.financial.model.volatility.discrete.ParameterizedSmileModelDiscreteVolatilityFunctionProvider$1: java.util.List val$smilesAdjoints> = r4;

        r0.<com.opengamma.analytics.financial.model.volatility.discrete.ParameterizedSmileModelDiscreteVolatilityFunctionProvider$1: int[][] val$revMap> = r5;

        specialinvoke r0.<com.opengamma.analytics.financial.model.volatility.discrete.DiscreteVolatilityFunction: void <init>()>();

        return;
    }

    public com.opengamma.analytics.math.matrix.DoubleMatrix2D calculateJacobian(com.opengamma.analytics.math.matrix.DoubleMatrix1D)
    {
        com.opengamma.analytics.financial.model.volatility.discrete.ParameterizedSmileModelDiscreteVolatilityFunctionProvider$1 r0;
        com.opengamma.analytics.math.matrix.DoubleMatrix1D r1, r3;
        com.opengamma.analytics.math.matrix.DoubleMatrix2D r4, $r9, $r15;
        double[] r5, r6, $r27, $r28;
        double[][] r7, $r26;
        int[] r8, $r29;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, i16, i17, i18, i19;
        com.opengamma.analytics.math.function.VectorFunction $r10, $r12;
        java.lang.Object $r11, $r18, $r20, $r22, $r24;
        com.opengamma.analytics.math.matrix.MatrixAlgebra $r13;
        com.opengamma.analytics.math.matrix.Matrix $r14;
        com.opengamma.analytics.financial.model.volatility.discrete.ParameterizedSmileModelDiscreteVolatilityFunctionProvider $r16;
        java.util.List $r17, $r21;
        com.opengamma.analytics.math.function.Function1D $r19, $r23;
        int[][] $r25;
        double $d0, $d1;
        java.lang.Double $r30;
        com.opengamma.analytics.financial.model.volatility.smile.function.SmileModelData r31;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.discrete.ParameterizedSmileModelDiscreteVolatilityFunctionProvider$1;

        r1 := @parameter0: com.opengamma.analytics.math.matrix.DoubleMatrix1D;

        $r9 = new com.opengamma.analytics.math.matrix.DoubleMatrix2D;

        $i6 = r0.<com.opengamma.analytics.financial.model.volatility.discrete.ParameterizedSmileModelDiscreteVolatilityFunctionProvider$1: int val$nOptions>;

        $i4 = r0.<com.opengamma.analytics.financial.model.volatility.discrete.ParameterizedSmileModelDiscreteVolatilityFunctionProvider$1: int val$nExpiries>;

        $i3 = r0.<com.opengamma.analytics.financial.model.volatility.discrete.ParameterizedSmileModelDiscreteVolatilityFunctionProvider$1: int val$nSmileModelParms>;

        $i5 = $i4 * $i3;

        specialinvoke $r9.<com.opengamma.analytics.math.matrix.DoubleMatrix2D: void <init>(int,int)>($i6, $i5);

        $r10 = r0.<com.opengamma.analytics.financial.model.volatility.discrete.ParameterizedSmileModelDiscreteVolatilityFunctionProvider$1: com.opengamma.analytics.math.function.VectorFunction val$modelToSmileModelParms>;

        $r11 = virtualinvoke $r10.<com.opengamma.analytics.math.function.VectorFunction: java.lang.Object evaluate(java.lang.Object)>(r1);

        r3 = (com.opengamma.analytics.math.matrix.DoubleMatrix1D) $r11;

        $r12 = r0.<com.opengamma.analytics.financial.model.volatility.discrete.ParameterizedSmileModelDiscreteVolatilityFunctionProvider$1: com.opengamma.analytics.math.function.VectorFunction val$modelToSmileModelParms>;

        r4 = virtualinvoke $r12.<com.opengamma.analytics.math.function.VectorFunction: com.opengamma.analytics.math.matrix.DoubleMatrix2D calculateJacobian(com.opengamma.analytics.math.matrix.DoubleMatrix1D)>(r1);

        $i7 = r0.<com.opengamma.analytics.financial.model.volatility.discrete.ParameterizedSmileModelDiscreteVolatilityFunctionProvider$1: int val$nSmileModelParms>;

        r5 = newarray (double)[$i7];

        i16 = 0;

     label1:
        $i8 = r0.<com.opengamma.analytics.financial.model.volatility.discrete.ParameterizedSmileModelDiscreteVolatilityFunctionProvider$1: int val$nExpiries>;

        if i16 >= $i8 goto label8;

        i17 = 0;

     label2:
        $i9 = r0.<com.opengamma.analytics.financial.model.volatility.discrete.ParameterizedSmileModelDiscreteVolatilityFunctionProvider$1: int val$nSmileModelParms>;

        if i17 >= $i9 goto label3;

        $r29 = newarray (int)[1];

        $i13 = r0.<com.opengamma.analytics.financial.model.volatility.discrete.ParameterizedSmileModelDiscreteVolatilityFunctionProvider$1: int val$nExpiries>;

        $i14 = i17 * $i13;

        $i15 = i16 + $i14;

        $r29[0] = $i15;

        $r30 = virtualinvoke r3.<com.opengamma.analytics.math.matrix.DoubleMatrix1D: java.lang.Double getEntry(int[])>($r29);

        $d1 = virtualinvoke $r30.<java.lang.Double: double doubleValue()>();

        r5[i17] = $d1;

        i17 = i17 + 1;

        goto label2;

     label3:
        $r16 = r0.<com.opengamma.analytics.financial.model.volatility.discrete.ParameterizedSmileModelDiscreteVolatilityFunctionProvider$1: com.opengamma.analytics.financial.model.volatility.discrete.ParameterizedSmileModelDiscreteVolatilityFunctionProvider this$0>;

        r31 = virtualinvoke $r16.<com.opengamma.analytics.financial.model.volatility.discrete.ParameterizedSmileModelDiscreteVolatilityFunctionProvider: com.opengamma.analytics.financial.model.volatility.smile.function.SmileModelData toSmileModelData(double[])>(r5);

        $r17 = r0.<com.opengamma.analytics.financial.model.volatility.discrete.ParameterizedSmileModelDiscreteVolatilityFunctionProvider$1: java.util.List val$smiles>;

        $r18 = interfaceinvoke $r17.<java.util.List: java.lang.Object get(int)>(i16);

        $r19 = (com.opengamma.analytics.math.function.Function1D) $r18;

        $r20 = virtualinvoke $r19.<com.opengamma.analytics.math.function.Function1D: java.lang.Object evaluate(java.lang.Object)>(r31);

        r6 = (double[]) $r20;

        $r21 = r0.<com.opengamma.analytics.financial.model.volatility.discrete.ParameterizedSmileModelDiscreteVolatilityFunctionProvider$1: java.util.List val$smilesAdjoints>;

        $r22 = interfaceinvoke $r21.<java.util.List: java.lang.Object get(int)>(i16);

        $r23 = (com.opengamma.analytics.math.function.Function1D) $r22;

        $r24 = virtualinvoke $r23.<com.opengamma.analytics.math.function.Function1D: java.lang.Object evaluate(java.lang.Object)>(r31);

        r7 = (double[][]) $r24;

        $r25 = r0.<com.opengamma.analytics.financial.model.volatility.discrete.ParameterizedSmileModelDiscreteVolatilityFunctionProvider$1: int[][] val$revMap>;

        r8 = $r25[i16];

        i0 = lengthof r6;

        i18 = 0;

     label4:
        if i18 >= i0 goto label7;

        i1 = r8[i18];

        i19 = 0;

     label5:
        $i10 = r0.<com.opengamma.analytics.financial.model.volatility.discrete.ParameterizedSmileModelDiscreteVolatilityFunctionProvider$1: int val$nSmileModelParms>;

        if i19 >= $i10 goto label6;

        $i11 = r0.<com.opengamma.analytics.financial.model.volatility.discrete.ParameterizedSmileModelDiscreteVolatilityFunctionProvider$1: int val$nExpiries>;

        $i12 = i19 * $i11;

        i2 = i16 + $i12;

        $r26 = virtualinvoke $r9.<com.opengamma.analytics.math.matrix.DoubleMatrix2D: double[][] getData()>();

        $r28 = $r26[i1];

        $r27 = r7[i18];

        $d0 = $r27[i19];

        $r28[i2] = $d0;

        i19 = i19 + 1;

        goto label5;

     label6:
        i18 = i18 + 1;

        goto label4;

     label7:
        i16 = i16 + 1;

        goto label1;

     label8:
        $r13 = staticinvoke <com.opengamma.analytics.financial.model.volatility.discrete.ParameterizedSmileModelDiscreteVolatilityFunctionProvider: com.opengamma.analytics.math.matrix.MatrixAlgebra access$000()>();

        $r14 = virtualinvoke $r13.<com.opengamma.analytics.math.matrix.MatrixAlgebra: com.opengamma.analytics.math.matrix.Matrix multiply(com.opengamma.analytics.math.matrix.Matrix,com.opengamma.analytics.math.matrix.Matrix)>($r9, r4);

        $r15 = (com.opengamma.analytics.math.matrix.DoubleMatrix2D) $r14;

        return $r15;
    }

    public com.opengamma.analytics.math.matrix.DoubleMatrix1D evaluate(com.opengamma.analytics.math.matrix.DoubleMatrix1D)
    {
        com.opengamma.analytics.financial.model.volatility.discrete.ParameterizedSmileModelDiscreteVolatilityFunctionProvider$1 r0;
        com.opengamma.analytics.math.matrix.DoubleMatrix1D r1, r2, $r8;
        double[] r4, $r9, $r17, r20;
        int[] r5, $r18;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, i9, i10, i11;
        com.opengamma.analytics.math.function.VectorFunction $r6;
        java.lang.Object $r7, $r11, $r15;
        java.util.List $r10;
        com.opengamma.analytics.financial.model.volatility.discrete.ParameterizedSmileModelDiscreteVolatilityFunctionProvider $r12;
        com.opengamma.analytics.math.function.Function1D $r13;
        com.opengamma.analytics.financial.model.volatility.smile.function.SmileModelData $r14;
        int[][] $r16;
        double $d0, $d1;
        java.lang.Double $r19;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.discrete.ParameterizedSmileModelDiscreteVolatilityFunctionProvider$1;

        r1 := @parameter0: com.opengamma.analytics.math.matrix.DoubleMatrix1D;

        $r6 = r0.<com.opengamma.analytics.financial.model.volatility.discrete.ParameterizedSmileModelDiscreteVolatilityFunctionProvider$1: com.opengamma.analytics.math.function.VectorFunction val$modelToSmileModelParms>;

        $r7 = virtualinvoke $r6.<com.opengamma.analytics.math.function.VectorFunction: java.lang.Object evaluate(java.lang.Object)>(r1);

        r2 = (com.opengamma.analytics.math.matrix.DoubleMatrix1D) $r7;

        $r8 = new com.opengamma.analytics.math.matrix.DoubleMatrix1D;

        $i1 = r0.<com.opengamma.analytics.financial.model.volatility.discrete.ParameterizedSmileModelDiscreteVolatilityFunctionProvider$1: int val$nOptions>;

        $r9 = newarray (double)[$i1];

        specialinvoke $r8.<com.opengamma.analytics.math.matrix.DoubleMatrix1D: void <init>(double[])>($r9);

        $i2 = r0.<com.opengamma.analytics.financial.model.volatility.discrete.ParameterizedSmileModelDiscreteVolatilityFunctionProvider$1: int val$nSmileModelParms>;

        r4 = newarray (double)[$i2];

        i9 = 0;

     label1:
        $i3 = r0.<com.opengamma.analytics.financial.model.volatility.discrete.ParameterizedSmileModelDiscreteVolatilityFunctionProvider$1: int val$nExpiries>;

        if i9 >= $i3 goto label6;

        i10 = 0;

     label2:
        $i4 = r0.<com.opengamma.analytics.financial.model.volatility.discrete.ParameterizedSmileModelDiscreteVolatilityFunctionProvider$1: int val$nSmileModelParms>;

        if i10 >= $i4 goto label3;

        $r18 = newarray (int)[1];

        $i6 = r0.<com.opengamma.analytics.financial.model.volatility.discrete.ParameterizedSmileModelDiscreteVolatilityFunctionProvider$1: int val$nExpiries>;

        $i7 = i10 * $i6;

        $i8 = i9 + $i7;

        $r18[0] = $i8;

        $r19 = virtualinvoke r2.<com.opengamma.analytics.math.matrix.DoubleMatrix1D: java.lang.Double getEntry(int[])>($r18);

        $d1 = virtualinvoke $r19.<java.lang.Double: double doubleValue()>();

        r4[i10] = $d1;

        i10 = i10 + 1;

        goto label2;

     label3:
        $r10 = r0.<com.opengamma.analytics.financial.model.volatility.discrete.ParameterizedSmileModelDiscreteVolatilityFunctionProvider$1: java.util.List val$smiles>;

        $r11 = interfaceinvoke $r10.<java.util.List: java.lang.Object get(int)>(i9);

        $r13 = (com.opengamma.analytics.math.function.Function1D) $r11;

        $r12 = r0.<com.opengamma.analytics.financial.model.volatility.discrete.ParameterizedSmileModelDiscreteVolatilityFunctionProvider$1: com.opengamma.analytics.financial.model.volatility.discrete.ParameterizedSmileModelDiscreteVolatilityFunctionProvider this$0>;

        $r14 = virtualinvoke $r12.<com.opengamma.analytics.financial.model.volatility.discrete.ParameterizedSmileModelDiscreteVolatilityFunctionProvider: com.opengamma.analytics.financial.model.volatility.smile.function.SmileModelData toSmileModelData(double[])>(r4);

        $r15 = virtualinvoke $r13.<com.opengamma.analytics.math.function.Function1D: java.lang.Object evaluate(java.lang.Object)>($r14);

        r20 = (double[]) $r15;

        $r16 = r0.<com.opengamma.analytics.financial.model.volatility.discrete.ParameterizedSmileModelDiscreteVolatilityFunctionProvider$1: int[][] val$revMap>;

        r5 = $r16[i9];

        i0 = lengthof r20;

        i11 = 0;

     label4:
        if i11 >= i0 goto label5;

        $r17 = virtualinvoke $r8.<com.opengamma.analytics.math.matrix.DoubleMatrix1D: double[] getData()>();

        $i5 = r5[i11];

        $d0 = r20[i11];

        $r17[$i5] = $d0;

        i11 = i11 + 1;

        goto label4;

     label5:
        i9 = i9 + 1;

        goto label1;

     label6:
        return $r8;
    }

    public int getLengthOfDomain()
    {
        com.opengamma.analytics.financial.model.volatility.discrete.ParameterizedSmileModelDiscreteVolatilityFunctionProvider$1 r0;
        com.opengamma.analytics.math.function.VectorFunction $r1;
        int $i0;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.discrete.ParameterizedSmileModelDiscreteVolatilityFunctionProvider$1;

        $r1 = r0.<com.opengamma.analytics.financial.model.volatility.discrete.ParameterizedSmileModelDiscreteVolatilityFunctionProvider$1: com.opengamma.analytics.math.function.VectorFunction val$modelToSmileModelParms>;

        $i0 = virtualinvoke $r1.<com.opengamma.analytics.math.function.VectorFunction: int getLengthOfDomain()>();

        return $i0;
    }

    public int getLengthOfRange()
    {
        com.opengamma.analytics.financial.model.volatility.discrete.ParameterizedSmileModelDiscreteVolatilityFunctionProvider$1 r0;
        int $i0;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.discrete.ParameterizedSmileModelDiscreteVolatilityFunctionProvider$1;

        $i0 = r0.<com.opengamma.analytics.financial.model.volatility.discrete.ParameterizedSmileModelDiscreteVolatilityFunctionProvider$1: int val$nOptions>;

        return $i0;
    }

    public volatile java.lang.Object evaluate(java.lang.Object)
    {
        com.opengamma.analytics.financial.model.volatility.discrete.ParameterizedSmileModelDiscreteVolatilityFunctionProvider$1 r0;
        java.lang.Object r1;
        com.opengamma.analytics.math.matrix.DoubleMatrix1D $r2, $r3;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.discrete.ParameterizedSmileModelDiscreteVolatilityFunctionProvider$1;

        r1 := @parameter0: java.lang.Object;

        $r2 = (com.opengamma.analytics.math.matrix.DoubleMatrix1D) r1;

        $r3 = virtualinvoke r0.<com.opengamma.analytics.financial.model.volatility.discrete.ParameterizedSmileModelDiscreteVolatilityFunctionProvider$1: com.opengamma.analytics.math.matrix.DoubleMatrix1D evaluate(com.opengamma.analytics.math.matrix.DoubleMatrix1D)>($r2);

        return $r3;
    }
}
