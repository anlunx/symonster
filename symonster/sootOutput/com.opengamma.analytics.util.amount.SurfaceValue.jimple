public class com.opengamma.analytics.util.amount.SurfaceValue extends java.lang.Object
{
    private final java.util.HashMap _data;

    public void <init>()
    {
        com.opengamma.analytics.util.amount.SurfaceValue r0;
        java.util.HashMap $r1;

        r0 := @this: com.opengamma.analytics.util.amount.SurfaceValue;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        r0.<com.opengamma.analytics.util.amount.SurfaceValue: java.util.HashMap _data> = $r1;

        return;
    }

    private void <init>(java.util.HashMap)
    {
        com.opengamma.analytics.util.amount.SurfaceValue r0;
        java.util.HashMap r1, $r3;

        r0 := @this: com.opengamma.analytics.util.amount.SurfaceValue;

        r1 := @parameter0: java.util.HashMap;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "Map");

        $r3 = new java.util.HashMap;

        specialinvoke $r3.<java.util.HashMap: void <init>(java.util.Map)>(r1);

        r0.<com.opengamma.analytics.util.amount.SurfaceValue: java.util.HashMap _data> = $r3;

        return;
    }

    public static com.opengamma.analytics.util.amount.SurfaceValue 'from'(com.opengamma.util.tuple.DoublesPair, java.lang.Double)
    {
        com.opengamma.util.tuple.DoublesPair r0;
        java.lang.Double r1;
        java.util.HashMap $r4;
        com.opengamma.analytics.util.amount.SurfaceValue $r6;

        r0 := @parameter0: com.opengamma.util.tuple.DoublesPair;

        r1 := @parameter1: java.lang.Double;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r0, "Point");

        $r4 = new java.util.HashMap;

        specialinvoke $r4.<java.util.HashMap: void <init>()>();

        virtualinvoke $r4.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r0, r1);

        $r6 = new com.opengamma.analytics.util.amount.SurfaceValue;

        specialinvoke $r6.<com.opengamma.analytics.util.amount.SurfaceValue: void <init>(java.util.HashMap)>($r4);

        return $r6;
    }

    public static com.opengamma.analytics.util.amount.SurfaceValue 'from'(java.util.Map)
    {
        java.util.Map r0;
        java.util.HashMap $r3;
        com.opengamma.analytics.util.amount.SurfaceValue $r4;

        r0 := @parameter0: java.util.Map;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r0, "Map");

        $r3 = new java.util.HashMap;

        specialinvoke $r3.<java.util.HashMap: void <init>()>();

        virtualinvoke $r3.<java.util.HashMap: void putAll(java.util.Map)>(r0);

        $r4 = new com.opengamma.analytics.util.amount.SurfaceValue;

        specialinvoke $r4.<com.opengamma.analytics.util.amount.SurfaceValue: void <init>(java.util.HashMap)>($r3);

        return $r4;
    }

    public static com.opengamma.analytics.util.amount.SurfaceValue 'from'(com.opengamma.analytics.util.amount.SurfaceValue)
    {
        com.opengamma.analytics.util.amount.SurfaceValue r0, $r5;
        java.util.HashMap $r3, $r4;

        r0 := @parameter0: com.opengamma.analytics.util.amount.SurfaceValue;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r0, "Surface value");

        $r3 = new java.util.HashMap;

        specialinvoke $r3.<java.util.HashMap: void <init>()>();

        $r4 = virtualinvoke r0.<com.opengamma.analytics.util.amount.SurfaceValue: java.util.HashMap getMap()>();

        virtualinvoke $r3.<java.util.HashMap: void putAll(java.util.Map)>($r4);

        $r5 = new com.opengamma.analytics.util.amount.SurfaceValue;

        specialinvoke $r5.<com.opengamma.analytics.util.amount.SurfaceValue: void <init>(java.util.HashMap)>($r3);

        return $r5;
    }

    public java.util.HashMap getMap()
    {
        com.opengamma.analytics.util.amount.SurfaceValue r0;
        java.util.HashMap $r1;

        r0 := @this: com.opengamma.analytics.util.amount.SurfaceValue;

        $r1 = r0.<com.opengamma.analytics.util.amount.SurfaceValue: java.util.HashMap _data>;

        return $r1;
    }

    public void add(com.opengamma.util.tuple.DoublesPair, java.lang.Double)
    {
        com.opengamma.analytics.util.amount.SurfaceValue r0;
        com.opengamma.util.tuple.DoublesPair r1;
        java.lang.Double r2, $r10, $r11;
        java.util.HashMap $r4, $r5, $r7, $r8;
        boolean $z0;
        double $d0, $d1, $d2;
        java.lang.Object $r9;

        r0 := @this: com.opengamma.analytics.util.amount.SurfaceValue;

        r1 := @parameter0: com.opengamma.util.tuple.DoublesPair;

        r2 := @parameter1: java.lang.Double;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "Point");

        $r4 = r0.<com.opengamma.analytics.util.amount.SurfaceValue: java.util.HashMap _data>;

        $z0 = virtualinvoke $r4.<java.util.HashMap: boolean containsKey(java.lang.Object)>(r1);

        if $z0 == 0 goto label1;

        $r7 = r0.<com.opengamma.analytics.util.amount.SurfaceValue: java.util.HashMap _data>;

        $d0 = virtualinvoke r2.<java.lang.Double: double doubleValue()>();

        $r8 = r0.<com.opengamma.analytics.util.amount.SurfaceValue: java.util.HashMap _data>;

        $r9 = virtualinvoke $r8.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);

        $r10 = (java.lang.Double) $r9;

        $d1 = virtualinvoke $r10.<java.lang.Double: double doubleValue()>();

        $d2 = $d0 + $d1;

        $r11 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d2);

        virtualinvoke $r7.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r11);

        goto label2;

     label1:
        $r5 = r0.<com.opengamma.analytics.util.amount.SurfaceValue: java.util.HashMap _data>;

        virtualinvoke $r5.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2);

     label2:
        return;
    }

    public int getNumberOfElements()
    {
        com.opengamma.analytics.util.amount.SurfaceValue r0;
        java.util.HashMap $r1;
        int $i0;

        r0 := @this: com.opengamma.analytics.util.amount.SurfaceValue;

        $r1 = r0.<com.opengamma.analytics.util.amount.SurfaceValue: java.util.HashMap _data>;

        $i0 = virtualinvoke $r1.<java.util.HashMap: int size()>();

        return $i0;
    }

    public static com.opengamma.analytics.util.amount.SurfaceValue plus(com.opengamma.analytics.util.amount.SurfaceValue, com.opengamma.analytics.util.amount.SurfaceValue)
    {
        com.opengamma.analytics.util.amount.SurfaceValue r0, r1, $r11;
        java.util.Iterator r3;
        com.opengamma.util.tuple.DoublesPair r4;
        java.util.HashMap $r7, $r8, $r9, $r13, $r14, $r17, $r20;
        java.util.Set $r10;
        boolean $z0, $z1;
        java.lang.Object $r12, $r15, $r18, $r21;
        java.lang.Double $r19, $r22, $r23;
        double $d0, $d1, $d2;

        r0 := @parameter0: com.opengamma.analytics.util.amount.SurfaceValue;

        r1 := @parameter1: com.opengamma.analytics.util.amount.SurfaceValue;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r0, "Surface value 1");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "Surface value 2");

        $r7 = new java.util.HashMap;

        $r8 = r0.<com.opengamma.analytics.util.amount.SurfaceValue: java.util.HashMap _data>;

        specialinvoke $r7.<java.util.HashMap: void <init>(java.util.Map)>($r8);

        $r9 = r1.<com.opengamma.analytics.util.amount.SurfaceValue: java.util.HashMap _data>;

        $r10 = virtualinvoke $r9.<java.util.HashMap: java.util.Set keySet()>();

        r3 = interfaceinvoke $r10.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r12 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (com.opengamma.util.tuple.DoublesPair) $r12;

        $r13 = r0.<com.opengamma.analytics.util.amount.SurfaceValue: java.util.HashMap _data>;

        $z1 = virtualinvoke $r13.<java.util.HashMap: boolean containsKey(java.lang.Object)>(r4);

        if $z1 == 0 goto label2;

        $r17 = r1.<com.opengamma.analytics.util.amount.SurfaceValue: java.util.HashMap _data>;

        $r18 = virtualinvoke $r17.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r4);

        $r19 = (java.lang.Double) $r18;

        $d0 = virtualinvoke $r19.<java.lang.Double: double doubleValue()>();

        $r20 = r0.<com.opengamma.analytics.util.amount.SurfaceValue: java.util.HashMap _data>;

        $r21 = virtualinvoke $r20.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r4);

        $r22 = (java.lang.Double) $r21;

        $d1 = virtualinvoke $r22.<java.lang.Double: double doubleValue()>();

        $d2 = $d0 + $d1;

        $r23 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d2);

        virtualinvoke $r7.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r4, $r23);

        goto label3;

     label2:
        $r14 = r1.<com.opengamma.analytics.util.amount.SurfaceValue: java.util.HashMap _data>;

        $r15 = virtualinvoke $r14.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r4);

        virtualinvoke $r7.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r4, $r15);

     label3:
        goto label1;

     label4:
        $r11 = new com.opengamma.analytics.util.amount.SurfaceValue;

        specialinvoke $r11.<com.opengamma.analytics.util.amount.SurfaceValue: void <init>(java.util.HashMap)>($r7);

        return $r11;
    }

    public static com.opengamma.analytics.util.amount.SurfaceValue plus(com.opengamma.analytics.util.amount.SurfaceValue, com.opengamma.util.tuple.DoublesPair, java.lang.Double)
    {
        com.opengamma.analytics.util.amount.SurfaceValue r0, $r10;
        com.opengamma.util.tuple.DoublesPair r1;
        java.lang.Double r2, $r13, $r14;
        java.util.HashMap $r6, $r7, $r8, $r11;
        boolean $z0;
        double $d0, $d1, $d2;
        java.lang.Object $r12;

        r0 := @parameter0: com.opengamma.analytics.util.amount.SurfaceValue;

        r1 := @parameter1: com.opengamma.util.tuple.DoublesPair;

        r2 := @parameter2: java.lang.Double;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r0, "Surface value");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "Point");

        $r6 = new java.util.HashMap;

        $r7 = r0.<com.opengamma.analytics.util.amount.SurfaceValue: java.util.HashMap _data>;

        specialinvoke $r6.<java.util.HashMap: void <init>(java.util.Map)>($r7);

        $r8 = r0.<com.opengamma.analytics.util.amount.SurfaceValue: java.util.HashMap _data>;

        $z0 = virtualinvoke $r8.<java.util.HashMap: boolean containsKey(java.lang.Object)>(r1);

        if $z0 == 0 goto label1;

        $d0 = virtualinvoke r2.<java.lang.Double: double doubleValue()>();

        $r11 = r0.<com.opengamma.analytics.util.amount.SurfaceValue: java.util.HashMap _data>;

        $r12 = virtualinvoke $r11.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);

        $r13 = (java.lang.Double) $r12;

        $d1 = virtualinvoke $r13.<java.lang.Double: double doubleValue()>();

        $d2 = $d0 + $d1;

        $r14 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d2);

        virtualinvoke $r6.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r14);

        goto label2;

     label1:
        virtualinvoke $r6.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2);

     label2:
        $r10 = new com.opengamma.analytics.util.amount.SurfaceValue;

        specialinvoke $r10.<com.opengamma.analytics.util.amount.SurfaceValue: void <init>(java.util.HashMap)>($r6);

        return $r10;
    }

    public static com.opengamma.analytics.util.amount.SurfaceValue multiplyBy(com.opengamma.analytics.util.amount.SurfaceValue, double)
    {
        com.opengamma.analytics.util.amount.SurfaceValue r0, $r8;
        double d0, $d1, $d2;
        java.util.Iterator r2;
        com.opengamma.util.tuple.DoublesPair r3;
        java.util.HashMap $r5, $r6, $r10;
        java.util.Set $r7;
        boolean $z0;
        java.lang.Object $r9, $r11;
        java.lang.Double $r12, $r13;

        r0 := @parameter0: com.opengamma.analytics.util.amount.SurfaceValue;

        d0 := @parameter1: double;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r0, "Surface value");

        $r5 = new java.util.HashMap;

        specialinvoke $r5.<java.util.HashMap: void <init>()>();

        $r6 = r0.<com.opengamma.analytics.util.amount.SurfaceValue: java.util.HashMap _data>;

        $r7 = virtualinvoke $r6.<java.util.HashMap: java.util.Set keySet()>();

        r2 = interfaceinvoke $r7.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r9 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (com.opengamma.util.tuple.DoublesPair) $r9;

        $r10 = r0.<com.opengamma.analytics.util.amount.SurfaceValue: java.util.HashMap _data>;

        $r11 = virtualinvoke $r10.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r3);

        $r12 = (java.lang.Double) $r11;

        $d1 = virtualinvoke $r12.<java.lang.Double: double doubleValue()>();

        $d2 = $d1 * d0;

        $r13 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d2);

        virtualinvoke $r5.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r3, $r13);

        goto label1;

     label2:
        $r8 = new com.opengamma.analytics.util.amount.SurfaceValue;

        specialinvoke $r8.<com.opengamma.analytics.util.amount.SurfaceValue: void <init>(java.util.HashMap)>($r5);

        return $r8;
    }

    public static boolean compare(com.opengamma.analytics.util.amount.SurfaceValue, com.opengamma.analytics.util.amount.SurfaceValue, double)
    {
        com.opengamma.analytics.util.amount.SurfaceValue r0, r1;
        double d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12;
        java.util.Set r2, r3;
        java.util.HashMap $r4, $r5, $r7, $r9, $r11, $r14, $r17, $r21, $r23, $r25, $r28, $r31;
        boolean $z0, $z1;
        java.lang.Object $r6, $r8, $r10, $r12, $r15, $r18, $r20, $r22, $r24, $r26, $r29, $r32;
        java.lang.Double $r13, $r16, $r19, $r27, $r30, $r33;
        byte $b0, $b1, $b2, $b3;
        java.util.Iterator r34, r36;
        com.opengamma.util.tuple.DoublesPair r35, r37;

        r0 := @parameter0: com.opengamma.analytics.util.amount.SurfaceValue;

        r1 := @parameter1: com.opengamma.analytics.util.amount.SurfaceValue;

        d0 := @parameter2: double;

        $r4 = r0.<com.opengamma.analytics.util.amount.SurfaceValue: java.util.HashMap _data>;

        r2 = virtualinvoke $r4.<java.util.HashMap: java.util.Set keySet()>();

        $r5 = r1.<com.opengamma.analytics.util.amount.SurfaceValue: java.util.HashMap _data>;

        r3 = virtualinvoke $r5.<java.util.HashMap: java.util.Set keySet()>();

        r34 = interfaceinvoke r2.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r34.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r20 = interfaceinvoke r34.<java.util.Iterator: java.lang.Object next()>();

        r35 = (com.opengamma.util.tuple.DoublesPair) $r20;

        $r21 = r1.<com.opengamma.analytics.util.amount.SurfaceValue: java.util.HashMap _data>;

        $r22 = virtualinvoke $r21.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r35);

        if $r22 != null goto label2;

        $r31 = r0.<com.opengamma.analytics.util.amount.SurfaceValue: java.util.HashMap _data>;

        $r32 = virtualinvoke $r31.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r35);

        $r33 = (java.lang.Double) $r32;

        $d11 = virtualinvoke $r33.<java.lang.Double: double doubleValue()>();

        $d12 = staticinvoke <java.lang.Math: double abs(double)>($d11);

        $b3 = $d12 cmpl d0;

        if $b3 <= 0 goto label2;

        return 0;

     label2:
        $r23 = r1.<com.opengamma.analytics.util.amount.SurfaceValue: java.util.HashMap _data>;

        $r24 = virtualinvoke $r23.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r35);

        if $r24 == null goto label3;

        $r25 = r0.<com.opengamma.analytics.util.amount.SurfaceValue: java.util.HashMap _data>;

        $r26 = virtualinvoke $r25.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r35);

        $r27 = (java.lang.Double) $r26;

        $d7 = virtualinvoke $r27.<java.lang.Double: double doubleValue()>();

        $r28 = r1.<com.opengamma.analytics.util.amount.SurfaceValue: java.util.HashMap _data>;

        $r29 = virtualinvoke $r28.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r35);

        $r30 = (java.lang.Double) $r29;

        $d8 = virtualinvoke $r30.<java.lang.Double: double doubleValue()>();

        $d9 = $d7 - $d8;

        $d10 = staticinvoke <java.lang.Math: double abs(double)>($d9);

        $b2 = $d10 cmpl d0;

        if $b2 <= 0 goto label3;

        return 0;

     label3:
        goto label1;

     label4:
        r36 = interfaceinvoke r3.<java.util.Set: java.util.Iterator iterator()>();

     label5:
        $z1 = interfaceinvoke r36.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label8;

        $r6 = interfaceinvoke r36.<java.util.Iterator: java.lang.Object next()>();

        r37 = (com.opengamma.util.tuple.DoublesPair) $r6;

        $r7 = r0.<com.opengamma.analytics.util.amount.SurfaceValue: java.util.HashMap _data>;

        $r8 = virtualinvoke $r7.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r37);

        if $r8 != null goto label6;

        $r17 = r1.<com.opengamma.analytics.util.amount.SurfaceValue: java.util.HashMap _data>;

        $r18 = virtualinvoke $r17.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r37);

        $r19 = (java.lang.Double) $r18;

        $d5 = virtualinvoke $r19.<java.lang.Double: double doubleValue()>();

        $d6 = staticinvoke <java.lang.Math: double abs(double)>($d5);

        $b1 = $d6 cmpl d0;

        if $b1 <= 0 goto label6;

        return 0;

     label6:
        $r9 = r0.<com.opengamma.analytics.util.amount.SurfaceValue: java.util.HashMap _data>;

        $r10 = virtualinvoke $r9.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r37);

        if $r10 == null goto label7;

        $r11 = r1.<com.opengamma.analytics.util.amount.SurfaceValue: java.util.HashMap _data>;

        $r12 = virtualinvoke $r11.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r37);

        $r13 = (java.lang.Double) $r12;

        $d1 = virtualinvoke $r13.<java.lang.Double: double doubleValue()>();

        $r14 = r0.<com.opengamma.analytics.util.amount.SurfaceValue: java.util.HashMap _data>;

        $r15 = virtualinvoke $r14.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r37);

        $r16 = (java.lang.Double) $r15;

        $d2 = virtualinvoke $r16.<java.lang.Double: double doubleValue()>();

        $d3 = $d1 - $d2;

        $d4 = staticinvoke <java.lang.Math: double abs(double)>($d3);

        $b0 = $d4 cmpl d0;

        if $b0 <= 0 goto label7;

        return 0;

     label7:
        goto label5;

     label8:
        return 1;
    }

    public double toSingleValue()
    {
        com.opengamma.analytics.util.amount.SurfaceValue r0;
        java.util.Iterator r1;
        com.opengamma.util.tuple.DoublesPair r2;
        java.util.HashMap $r3, $r6;
        java.util.Set $r4;
        boolean $z0;
        java.lang.Object $r5, $r7;
        java.lang.Double $r8;
        double $d0, d1;

        r0 := @this: com.opengamma.analytics.util.amount.SurfaceValue;

        d1 = 0.0;

        $r3 = r0.<com.opengamma.analytics.util.amount.SurfaceValue: java.util.HashMap _data>;

        $r4 = virtualinvoke $r3.<java.util.HashMap: java.util.Set keySet()>();

        r1 = interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r2 = (com.opengamma.util.tuple.DoublesPair) $r5;

        $r6 = r0.<com.opengamma.analytics.util.amount.SurfaceValue: java.util.HashMap _data>;

        $r7 = virtualinvoke $r6.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r2);

        $r8 = (java.lang.Double) $r7;

        $d0 = virtualinvoke $r8.<java.lang.Double: double doubleValue()>();

        d1 = d1 + $d0;

        goto label1;

     label2:
        return d1;
    }

    public java.lang.String toString()
    {
        com.opengamma.analytics.util.amount.SurfaceValue r0;
        java.util.HashMap $r1;
        java.lang.String $r2;

        r0 := @this: com.opengamma.analytics.util.amount.SurfaceValue;

        $r1 = r0.<com.opengamma.analytics.util.amount.SurfaceValue: java.util.HashMap _data>;

        $r2 = virtualinvoke $r1.<java.util.HashMap: java.lang.String toString()>();

        return $r2;
    }

    public int hashCode()
    {
        com.opengamma.analytics.util.amount.SurfaceValue r0;
        java.util.HashMap $r1;
        int $i1, $i2, i4;

        r0 := @this: com.opengamma.analytics.util.amount.SurfaceValue;

        $i1 = 31 * 1;

        $r1 = r0.<com.opengamma.analytics.util.amount.SurfaceValue: java.util.HashMap _data>;

        $i2 = virtualinvoke $r1.<java.util.HashMap: int hashCode()>();

        i4 = $i1 + $i2;

        return i4;
    }

    public boolean equals(java.lang.Object)
    {
        com.opengamma.analytics.util.amount.SurfaceValue r0, r2;
        java.lang.Object r1;
        java.lang.Class $r3, $r4;
        java.util.HashMap $r5, $r6;
        boolean $z0;

        r0 := @this: com.opengamma.analytics.util.amount.SurfaceValue;

        r1 := @parameter0: java.lang.Object;

        if r0 != r1 goto label1;

        return 1;

     label1:
        if r1 != null goto label2;

        return 0;

     label2:
        $r3 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r4 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        if $r3 == $r4 goto label3;

        return 0;

     label3:
        r2 = (com.opengamma.analytics.util.amount.SurfaceValue) r1;

        $r6 = r0.<com.opengamma.analytics.util.amount.SurfaceValue: java.util.HashMap _data>;

        $r5 = r2.<com.opengamma.analytics.util.amount.SurfaceValue: java.util.HashMap _data>;

        $z0 = staticinvoke <org.apache.commons.lang.ObjectUtils: boolean equals(java.lang.Object,java.lang.Object)>($r6, $r5);

        if $z0 != 0 goto label4;

        return 0;

     label4:
        return 1;
    }
}
