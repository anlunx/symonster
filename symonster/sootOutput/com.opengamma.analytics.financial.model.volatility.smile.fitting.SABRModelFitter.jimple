public class com.opengamma.analytics.financial.model.volatility.smile.fitting.SABRModelFitter extends com.opengamma.analytics.financial.model.volatility.smile.fitting.SmileModelFitter
{
    private static final com.opengamma.analytics.math.minimization.ParameterLimitsTransform[] DEFAULT_TRANSFORMS;

    public void <init>(double, double[], double, double[], double[], com.opengamma.analytics.financial.model.volatility.smile.function.VolatilityFunctionProvider)
    {
        com.opengamma.analytics.financial.model.volatility.smile.fitting.SABRModelFitter r0;
        double d0, d1;
        double[] r1, r2, r3;
        com.opengamma.analytics.financial.model.volatility.smile.function.VolatilityFunctionProvider r4;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.smile.fitting.SABRModelFitter;

        d0 := @parameter0: double;

        r1 := @parameter1: double[];

        d1 := @parameter2: double;

        r2 := @parameter3: double[];

        r3 := @parameter4: double[];

        r4 := @parameter5: com.opengamma.analytics.financial.model.volatility.smile.function.VolatilityFunctionProvider;

        specialinvoke r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.SmileModelFitter: void <init>(double,double[],double,double[],double[],com.opengamma.analytics.financial.model.volatility.smile.function.VolatilityFunctionProvider)>(d0, r1, d1, r2, r3, r4);

        return;
    }

    public com.opengamma.analytics.financial.model.volatility.smile.function.SABRFormulaData toSmileModelData(com.opengamma.analytics.math.matrix.DoubleMatrix1D)
    {
        com.opengamma.analytics.financial.model.volatility.smile.fitting.SABRModelFitter r0;
        com.opengamma.analytics.math.matrix.DoubleMatrix1D r1;
        com.opengamma.analytics.financial.model.volatility.smile.function.SABRFormulaData $r2;
        double[] $r3;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.smile.fitting.SABRModelFitter;

        r1 := @parameter0: com.opengamma.analytics.math.matrix.DoubleMatrix1D;

        $r2 = new com.opengamma.analytics.financial.model.volatility.smile.function.SABRFormulaData;

        $r3 = virtualinvoke r1.<com.opengamma.analytics.math.matrix.DoubleMatrix1D: double[] getData()>();

        specialinvoke $r2.<com.opengamma.analytics.financial.model.volatility.smile.function.SABRFormulaData: void <init>(double[])>($r3);

        return $r2;
    }

    protected com.opengamma.analytics.math.minimization.NonLinearParameterTransforms getTransform(com.opengamma.analytics.math.matrix.DoubleMatrix1D)
    {
        com.opengamma.analytics.financial.model.volatility.smile.fitting.SABRModelFitter r0;
        com.opengamma.analytics.math.matrix.DoubleMatrix1D r1;
        java.util.BitSet $r3;
        com.opengamma.analytics.math.minimization.UncoupledParameterTransforms $r4;
        com.opengamma.analytics.math.minimization.ParameterLimitsTransform[] $r5;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.smile.fitting.SABRModelFitter;

        r1 := @parameter0: com.opengamma.analytics.math.matrix.DoubleMatrix1D;

        $r3 = new java.util.BitSet;

        specialinvoke $r3.<java.util.BitSet: void <init>()>();

        $r4 = new com.opengamma.analytics.math.minimization.UncoupledParameterTransforms;

        $r5 = <com.opengamma.analytics.financial.model.volatility.smile.fitting.SABRModelFitter: com.opengamma.analytics.math.minimization.ParameterLimitsTransform[] DEFAULT_TRANSFORMS>;

        specialinvoke $r4.<com.opengamma.analytics.math.minimization.UncoupledParameterTransforms: void <init>(com.opengamma.analytics.math.matrix.DoubleMatrix1D,com.opengamma.analytics.math.minimization.ParameterLimitsTransform[],java.util.BitSet)>(r1, $r5, $r3);

        return $r4;
    }

    protected com.opengamma.analytics.math.minimization.NonLinearParameterTransforms getTransform(com.opengamma.analytics.math.matrix.DoubleMatrix1D, java.util.BitSet)
    {
        com.opengamma.analytics.financial.model.volatility.smile.fitting.SABRModelFitter r0;
        com.opengamma.analytics.math.matrix.DoubleMatrix1D r1;
        java.util.BitSet r2;
        com.opengamma.analytics.math.minimization.UncoupledParameterTransforms $r3;
        com.opengamma.analytics.math.minimization.ParameterLimitsTransform[] $r4;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.smile.fitting.SABRModelFitter;

        r1 := @parameter0: com.opengamma.analytics.math.matrix.DoubleMatrix1D;

        r2 := @parameter1: java.util.BitSet;

        $r3 = new com.opengamma.analytics.math.minimization.UncoupledParameterTransforms;

        $r4 = <com.opengamma.analytics.financial.model.volatility.smile.fitting.SABRModelFitter: com.opengamma.analytics.math.minimization.ParameterLimitsTransform[] DEFAULT_TRANSFORMS>;

        specialinvoke $r3.<com.opengamma.analytics.math.minimization.UncoupledParameterTransforms: void <init>(com.opengamma.analytics.math.matrix.DoubleMatrix1D,com.opengamma.analytics.math.minimization.ParameterLimitsTransform[],java.util.BitSet)>(r1, $r4, r2);

        return $r3;
    }

    protected com.opengamma.analytics.math.matrix.DoubleMatrix1D getMaximumStep()
    {
        com.opengamma.analytics.financial.model.volatility.smile.fitting.SABRModelFitter r0;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.smile.fitting.SABRModelFitter;

        return null;
    }

    public volatile com.opengamma.analytics.financial.model.volatility.smile.function.SmileModelData toSmileModelData(com.opengamma.analytics.math.matrix.DoubleMatrix1D)
    {
        com.opengamma.analytics.financial.model.volatility.smile.fitting.SABRModelFitter r0;
        com.opengamma.analytics.math.matrix.DoubleMatrix1D r1;
        com.opengamma.analytics.financial.model.volatility.smile.function.SABRFormulaData $r2;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.smile.fitting.SABRModelFitter;

        r1 := @parameter0: com.opengamma.analytics.math.matrix.DoubleMatrix1D;

        $r2 = virtualinvoke r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.SABRModelFitter: com.opengamma.analytics.financial.model.volatility.smile.function.SABRFormulaData toSmileModelData(com.opengamma.analytics.math.matrix.DoubleMatrix1D)>(r1);

        return $r2;
    }

    static void <clinit>()
    {
        com.opengamma.analytics.math.minimization.ParameterLimitsTransform[] $r0, $r3, $r5, $r7, $r10;
        com.opengamma.analytics.math.minimization.SingleRangeLimitTransform $r1, $r8;
        com.opengamma.analytics.math.minimization.ParameterLimitsTransform$LimitType $r2, $r9;
        com.opengamma.analytics.math.minimization.DoubleRangeLimitTransform $r4, $r6;

        $r0 = newarray (com.opengamma.analytics.math.minimization.ParameterLimitsTransform)[4];

        <com.opengamma.analytics.financial.model.volatility.smile.fitting.SABRModelFitter: com.opengamma.analytics.math.minimization.ParameterLimitsTransform[] DEFAULT_TRANSFORMS> = $r0;

        $r3 = <com.opengamma.analytics.financial.model.volatility.smile.fitting.SABRModelFitter: com.opengamma.analytics.math.minimization.ParameterLimitsTransform[] DEFAULT_TRANSFORMS>;

        $r1 = new com.opengamma.analytics.math.minimization.SingleRangeLimitTransform;

        $r2 = <com.opengamma.analytics.math.minimization.ParameterLimitsTransform$LimitType: com.opengamma.analytics.math.minimization.ParameterLimitsTransform$LimitType GREATER_THAN>;

        specialinvoke $r1.<com.opengamma.analytics.math.minimization.SingleRangeLimitTransform: void <init>(double,com.opengamma.analytics.math.minimization.ParameterLimitsTransform$LimitType)>(0.0, $r2);

        $r3[0] = $r1;

        $r5 = <com.opengamma.analytics.financial.model.volatility.smile.fitting.SABRModelFitter: com.opengamma.analytics.math.minimization.ParameterLimitsTransform[] DEFAULT_TRANSFORMS>;

        $r4 = new com.opengamma.analytics.math.minimization.DoubleRangeLimitTransform;

        specialinvoke $r4.<com.opengamma.analytics.math.minimization.DoubleRangeLimitTransform: void <init>(double,double)>(0.0, 1.0);

        $r5[1] = $r4;

        $r7 = <com.opengamma.analytics.financial.model.volatility.smile.fitting.SABRModelFitter: com.opengamma.analytics.math.minimization.ParameterLimitsTransform[] DEFAULT_TRANSFORMS>;

        $r6 = new com.opengamma.analytics.math.minimization.DoubleRangeLimitTransform;

        specialinvoke $r6.<com.opengamma.analytics.math.minimization.DoubleRangeLimitTransform: void <init>(double,double)>(-1.0, 1.0);

        $r7[2] = $r6;

        $r10 = <com.opengamma.analytics.financial.model.volatility.smile.fitting.SABRModelFitter: com.opengamma.analytics.math.minimization.ParameterLimitsTransform[] DEFAULT_TRANSFORMS>;

        $r8 = new com.opengamma.analytics.math.minimization.SingleRangeLimitTransform;

        $r9 = <com.opengamma.analytics.math.minimization.ParameterLimitsTransform$LimitType: com.opengamma.analytics.math.minimization.ParameterLimitsTransform$LimitType GREATER_THAN>;

        specialinvoke $r8.<com.opengamma.analytics.math.minimization.SingleRangeLimitTransform: void <init>(double,com.opengamma.analytics.math.minimization.ParameterLimitsTransform$LimitType)>(0.0, $r9);

        $r10[3] = $r8;

        return;
    }
}
