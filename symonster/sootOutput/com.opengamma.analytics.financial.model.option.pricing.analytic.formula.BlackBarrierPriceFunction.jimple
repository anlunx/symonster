public final class com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackBarrierPriceFunction extends java.lang.Object
{
    private static final com.opengamma.analytics.math.statistics.distribution.ProbabilityDistribution NORMAL;
    private static final com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackBarrierPriceFunction INSTANCE;

    public static com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackBarrierPriceFunction getInstance()
    {
        com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackBarrierPriceFunction $r0;

        $r0 = <com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackBarrierPriceFunction: com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackBarrierPriceFunction INSTANCE>;

        return $r0;
    }

    private void <init>()
    {
        com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackBarrierPriceFunction r0;

        r0 := @this: com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackBarrierPriceFunction;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public double getPrice(com.opengamma.analytics.financial.model.option.pricing.analytic.formula.EuropeanVanillaOption, com.opengamma.analytics.financial.model.option.definition.Barrier, double, double, double, double, double)
    {
        com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackBarrierPriceFunction r0;
        com.opengamma.analytics.financial.model.option.pricing.analytic.formula.EuropeanVanillaOption r1;
        com.opengamma.analytics.financial.model.option.definition.Barrier r2;
        double d0, d1, d2, d3, d4, d5, d6, d7, d9, d10, d11, d12, d13, d14, d15, d16, d17, d18, d19, d20, d21, d22, d23, d24, $d26, $d27, $d28, $d29, $d30, $d31, $d32, $d33, $d34, $d35, $d36, $d37, $d38, $d39, $d40, $d41, $d42, $d43, $d44, $d45, $d46, $d47, $d48, $d49, $d50, $d51, $d52, $d53, $d54, $d55, $d56, $d57, $d58, $d59, $d60, $d61, $d62, $d63, $d64, $d65, $d66, $d67, $d68, $d69, $d70, $d71, $d72, $d73, $d74, $d75, $d76, $d77, $d78, $d79, $d80, $d81, $d82, $d83, $d84, $d85, $d86, $d87, $d88, $d89, $d90;
        boolean z0, z1, z2, $z3, $z4, $z5, $z6, $z7;
        byte b0, $b1, $b2, $b3, $b4, $b5, $b6, $b7, $b8, $b9, $b10, $b11;
        com.opengamma.analytics.financial.model.option.definition.Barrier$KnockType $r5, $r6;
        com.opengamma.analytics.financial.model.option.definition.Barrier$BarrierType $r7, $r8, $r9, $r10, $r11, $r12;

        r0 := @this: com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackBarrierPriceFunction;

        r1 := @parameter0: com.opengamma.analytics.financial.model.option.pricing.analytic.formula.EuropeanVanillaOption;

        r2 := @parameter1: com.opengamma.analytics.financial.model.option.definition.Barrier;

        d0 := @parameter2: double;

        d1 := @parameter3: double;

        d2 := @parameter4: double;

        d3 := @parameter5: double;

        d4 := @parameter6: double;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "option");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, "barrier");

        $r5 = virtualinvoke r2.<com.opengamma.analytics.financial.model.option.definition.Barrier: com.opengamma.analytics.financial.model.option.definition.Barrier$KnockType getKnockType()>();

        $r6 = <com.opengamma.analytics.financial.model.option.definition.Barrier$KnockType: com.opengamma.analytics.financial.model.option.definition.Barrier$KnockType IN>;

        if $r5 != $r6 goto label01;

        $z4 = 1;

        goto label02;

     label01:
        $z4 = 0;

     label02:
        z0 = $z4;

        $r7 = virtualinvoke r2.<com.opengamma.analytics.financial.model.option.definition.Barrier: com.opengamma.analytics.financial.model.option.definition.Barrier$BarrierType getBarrierType()>();

        $r8 = <com.opengamma.analytics.financial.model.option.definition.Barrier$BarrierType: com.opengamma.analytics.financial.model.option.definition.Barrier$BarrierType DOWN>;

        if $r7 != $r8 goto label03;

        $z5 = 1;

        goto label04;

     label03:
        $z5 = 0;

     label04:
        z1 = $z5;

        d5 = virtualinvoke r2.<com.opengamma.analytics.financial.model.option.definition.Barrier: double getBarrierLevel()>();

        $r9 = virtualinvoke r2.<com.opengamma.analytics.financial.model.option.definition.Barrier: com.opengamma.analytics.financial.model.option.definition.Barrier$BarrierType getBarrierType()>();

        $r10 = <com.opengamma.analytics.financial.model.option.definition.Barrier$BarrierType: com.opengamma.analytics.financial.model.option.definition.Barrier$BarrierType DOWN>;

        if $r9 != $r10 goto label05;

        $d80 = virtualinvoke r2.<com.opengamma.analytics.financial.model.option.definition.Barrier: double getBarrierLevel()>();

        $b10 = d1 cmpg $d80;

        if $b10 < 0 goto label06;

     label05:
        $z6 = 1;

        goto label07;

     label06:
        $z6 = 0;

     label07:
        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z6, "The Data is not consistent with an alive barrier (DOWN and spot<barrier).");

        $r11 = virtualinvoke r2.<com.opengamma.analytics.financial.model.option.definition.Barrier: com.opengamma.analytics.financial.model.option.definition.Barrier$BarrierType getBarrierType()>();

        $r12 = <com.opengamma.analytics.financial.model.option.definition.Barrier$BarrierType: com.opengamma.analytics.financial.model.option.definition.Barrier$BarrierType UP>;

        if $r11 != $r12 goto label08;

        $d79 = virtualinvoke r2.<com.opengamma.analytics.financial.model.option.definition.Barrier: double getBarrierLevel()>();

        $b9 = d1 cmpl $d79;

        if $b9 > 0 goto label09;

     label08:
        $z7 = 1;

        goto label10;

     label09:
        $z7 = 0;

     label10:
        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z7, "The Data is not consistent with an alive barrier (UP and spot>barrier).");

        z2 = virtualinvoke r1.<com.opengamma.analytics.financial.model.option.pricing.analytic.formula.EuropeanVanillaOption: boolean isCall()>();

        d6 = virtualinvoke r1.<com.opengamma.analytics.financial.model.option.pricing.analytic.formula.EuropeanVanillaOption: double getTimeToExpiry()>();

        d7 = virtualinvoke r1.<com.opengamma.analytics.financial.model.option.pricing.analytic.formula.EuropeanVanillaOption: double getStrike()>();

        if z2 == 0 goto label11;

        $b11 = 1;

        goto label12;

     label11:
        $b11 = -1;

     label12:
        b0 = $b11;

        if z1 == 0 goto label13;

        $d81 = 1.0;

        goto label14;

     label13:
        $d81 = -1.0;

     label14:
        $d26 = d2 - d3;

        $d27 = d6 * $d26;

        d9 = staticinvoke <java.lang.Math: double exp(double)>($d27);

        $d28 = neg d3;

        $d29 = $d28 * d6;

        d10 = staticinvoke <java.lang.Math: double exp(double)>($d29);

        $z3 = staticinvoke <com.opengamma.util.CompareUtils: boolean closeEquals(double,double,double)>(d4, 0.0, 1.0E-16);

        if $z3 == 0 goto label15;

        $d78 = d9 * d0;

        return $d78;

     label15:
        d11 = d4 * d4;

        $d30 = staticinvoke <java.lang.Math: double sqrt(double)>(d6);

        d12 = d4 * $d30;

        $d31 = 0.5 * d11;

        $d32 = d2 - $d31;

        d13 = $d32 / d11;

        $d35 = d13 * d13;

        $d33 = 2.0 * d3;

        $d34 = $d33 / d11;

        $d36 = $d35 + $d34;

        d14 = staticinvoke <java.lang.Math: double sqrt(double)>($d36);

        $d37 = 1.0 + d13;

        d15 = d12 * $d37;

        $d38 = d1 / d7;

        $d39 = staticinvoke <java.lang.Math: double log(double)>($d38);

        $d40 = $d39 / d12;

        d16 = $d40 + d15;

        $d41 = d1 / d5;

        $d42 = staticinvoke <java.lang.Math: double log(double)>($d41);

        $d43 = $d42 / d12;

        d17 = $d43 + d15;

        $d44 = d5 * d5;

        $d45 = $d44 / d1;

        $d46 = $d45 / d7;

        $d47 = staticinvoke <java.lang.Math: double log(double)>($d46);

        $d48 = $d47 / d12;

        d18 = $d48 + d15;

        $d49 = d5 / d1;

        $d50 = staticinvoke <java.lang.Math: double log(double)>($d49);

        $d51 = $d50 / d12;

        d19 = $d51 + d15;

        $d52 = d5 / d1;

        $d53 = staticinvoke <java.lang.Math: double log(double)>($d52);

        $d55 = $d53 / d12;

        $d54 = d14 * d12;

        d20 = $d55 + $d54;

        $d56 = (double) b0;

        d21 = specialinvoke r0.<com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackBarrierPriceFunction: double getA(double,double,double,double,double,double,double)>(d1, d7, d9, d10, d16, d12, $d56);

        $d57 = (double) b0;

        d22 = specialinvoke r0.<com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackBarrierPriceFunction: double getA(double,double,double,double,double,double,double)>(d1, d7, d9, d10, d17, d12, $d57);

        $d58 = (double) b0;

        d23 = specialinvoke r0.<com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackBarrierPriceFunction: double getC(double,double,double,double,double,double,double,double,double,double)>(d1, d7, d9, d10, d18, d12, d5, d13, $d58, $d81);

        $d59 = (double) b0;

        d24 = specialinvoke r0.<com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackBarrierPriceFunction: double getC(double,double,double,double,double,double,double,double,double,double)>(d1, d7, d9, d10, d19, d12, d5, d13, $d59, $d81);

        if z0 == 0 goto label16;

        $d82 = specialinvoke r0.<com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackBarrierPriceFunction: double getE(double,double,double,double,double,double,double,double,double)>(d1, d0, d10, d17, d19, d12, d5, d13, $d81);

        goto label17;

     label16:
        $d82 = specialinvoke r0.<com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackBarrierPriceFunction: double getF(double,double,double,double,double,double,double,double)>(d1, d0, d20, d12, d5, d13, d14, $d81);

     label17:
        if z0 == 0 goto label29;

        if z1 == 0 goto label23;

        if z2 == 0 goto label20;

        $b8 = d7 cmpl d5;

        if $b8 <= 0 goto label18;

        $d83 = d23 + $d82;

        goto label19;

     label18:
        $d76 = d21 - d22;

        $d77 = $d76 + d24;

        $d83 = $d77 + $d82;

     label19:
        return $d83;

     label20:
        $b7 = d7 cmpl d5;

        if $b7 <= 0 goto label21;

        $d74 = d22 - d23;

        $d75 = $d74 + d24;

        $d84 = $d75 + $d82;

        goto label22;

     label21:
        $d84 = d21 + $d82;

     label22:
        return $d84;

     label23:
        if z2 == 0 goto label26;

        $b6 = d7 cmpl d5;

        if $b6 <= 0 goto label24;

        $d85 = d21 + $d82;

        goto label25;

     label24:
        $d72 = d22 - d23;

        $d73 = $d72 + d24;

        $d85 = $d73 + $d82;

     label25:
        return $d85;

     label26:
        $b5 = d7 cmpl d5;

        if $b5 <= 0 goto label27;

        $d70 = d21 - d22;

        $d71 = $d70 + d24;

        $d86 = $d71 + $d82;

        goto label28;

     label27:
        $d86 = d23 + $d82;

     label28:
        return $d86;

     label29:
        if z1 == 0 goto label35;

        if z2 == 0 goto label32;

        $b4 = d7 cmpl d5;

        if $b4 <= 0 goto label30;

        $d69 = d21 - d23;

        $d87 = $d69 + $d82;

        goto label31;

     label30:
        $d68 = d22 - d24;

        $d87 = $d68 + $d82;

     label31:
        return $d87;

     label32:
        $b3 = d7 cmpl d5;

        if $b3 <= 0 goto label33;

        $d65 = d21 - d22;

        $d66 = $d65 + d23;

        $d67 = $d66 - d24;

        $d88 = $d67 + $d82;

        goto label34;

     label33:
        $d88 = $d82;

     label34:
        return $d88;

     label35:
        if z2 == 0 goto label38;

        $b2 = d7 cmpl d5;

        if $b2 <= 0 goto label36;

        $d89 = $d82;

        goto label37;

     label36:
        $d62 = d21 - d22;

        $d63 = $d62 + d23;

        $d64 = $d63 - d24;

        $d89 = $d64 + $d82;

     label37:
        return $d89;

     label38:
        $b1 = d7 cmpl d5;

        if $b1 <= 0 goto label39;

        $d61 = d22 - d24;

        $d90 = $d61 + $d82;

        goto label40;

     label39:
        $d60 = d21 - d23;

        $d90 = $d60 + $d82;

     label40:
        return $d90;
    }

    public double getPriceAdjoint(com.opengamma.analytics.financial.model.option.pricing.analytic.formula.EuropeanVanillaOption, com.opengamma.analytics.financial.model.option.definition.Barrier, double, double, double, double, double, double[])
    {
        com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackBarrierPriceFunction r0;
        com.opengamma.analytics.financial.model.option.pricing.analytic.formula.EuropeanVanillaOption r1;
        com.opengamma.analytics.financial.model.option.definition.Barrier r2;
        double d0, d1, d2, d3, d4, d5, d6, d7, d9, d10, d11, d12, d13, d14, d15, d16, d17, d18, d19, d20, d21, d22, d24, d25, d26, d27, d28, $d29, $d30, $d31, $d32, $d33, $d34, $d35, $d36, $d37, $d38, $d39, $d40, $d41, $d42, $d43, $d44, $d45, $d46, $d47, $d48, $d49, $d50, $d51, $d52, $d53, $d54, $d55, $d56, $d57, $d58, $d59, $d60, $d61, $d62, $d63, $d64, $d65, $d66, $d67, $d68, $d69, $d70, $d71, $d72, $d73, $d74, $d75, $d76, $d77, $d78, $d79, $d80, $d81, $d82, $d83, $d84, $d85, $d86, $d87, $d88, $d89, $d90, $d91, $d92, $d93, $d94, $d95, $d96, $d97, $d98, $d99, $d100, $d101, $d102, $d103, $d104, $d105, $d106, $d107, $d108, $d109, $d110, $d111, $d112, $d113, $d114, $d115, $d116, $d117, $d118, $d119, $d120, $d121, $d122, $d123, $d124, $d125, $d126, $d127, $d128, $d129, $d130, $d131, $d132, $d133, $d134, $d135, $d136, $d137, $d138, $d139, $d140, $d141, $d142, $d143, $d144, $d145, $d146, $d147, $d148, $d149, $d150, $d151, $d152, $d153, $d154, $d155, $d156, $d157, $d158, $d159, $d160, $d161, $d162, $d163, $d164, $d165, $d166, $d167, $d168, $d169, $d170, $d171, $d172, $d173, $d174, $d175, $d176, $d177, $d178, $d179, $d180, $d181, $d182, $d183, $d184, $d185, $d186, $d187, $d188, $d189, $d190, $d191, $d192, $d193, $d194, $d195, $d196, $d197, $d198, $d199, $d200, $d201, $d202, $d203, $d204, $d205, $d206, $d207, $d208, $d209, $d210, $d211, $d212, $d213, $d214, $d215, $d216, $d217, $d218, $d219, $d220, $d221, $d222, $d223, $d224, $d225, $d226, $d227, $d228, $d229, $d230, $d231, $d232, $d233, $d234, $d235, $d236, $d237, $d238, $d239, $d240, $d241, $d242, $d243, $d244, $d245, $d246, $d247, $d248, $d249, $d250, $d251, $d252, $d253, $d254, $d255, $d256, $d257, $d258, $d259, $d260, $d261, $d262, $d263, $d264, $d265, $d266, $d267, $d268, d270, d271, d272, $d273, d275, d276, d277, d278, d279, d280, d281, d282, d283, d284, d287, d288, d289, d290, d291, d292, d293, d294;
        double[] r3, r4, r5, r6, r7, r8, r9;
        boolean z0, z1, $z2, $z3, z4, $z5, $z6, $z7;
        byte b0, $b1, $b3, $b4, $b5, $b6, $b7, $b8, $b9, $b10, $b11, $b13;
        com.opengamma.analytics.financial.model.option.definition.Barrier$KnockType $r12, $r13;
        com.opengamma.analytics.financial.model.option.definition.Barrier$BarrierType $r14, $r15, $r16, $r17, $r18, $r19;
        int i12;

        r0 := @this: com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackBarrierPriceFunction;

        r1 := @parameter0: com.opengamma.analytics.financial.model.option.pricing.analytic.formula.EuropeanVanillaOption;

        r2 := @parameter1: com.opengamma.analytics.financial.model.option.definition.Barrier;

        d0 := @parameter2: double;

        d1 := @parameter3: double;

        d2 := @parameter4: double;

        d3 := @parameter5: double;

        d4 := @parameter6: double;

        r3 := @parameter7: double[];

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "option");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, "barrier");

        i12 = 0;

     label01:
        if i12 >= 5 goto label02;

        r3[i12] = 0.0;

        i12 = i12 + 1;

        goto label01;

     label02:
        $r12 = virtualinvoke r2.<com.opengamma.analytics.financial.model.option.definition.Barrier: com.opengamma.analytics.financial.model.option.definition.Barrier$KnockType getKnockType()>();

        $r13 = <com.opengamma.analytics.financial.model.option.definition.Barrier$KnockType: com.opengamma.analytics.financial.model.option.definition.Barrier$KnockType IN>;

        if $r12 != $r13 goto label03;

        $z3 = 1;

        goto label04;

     label03:
        $z3 = 0;

     label04:
        z4 = $z3;

        $r14 = virtualinvoke r2.<com.opengamma.analytics.financial.model.option.definition.Barrier: com.opengamma.analytics.financial.model.option.definition.Barrier$BarrierType getBarrierType()>();

        $r15 = <com.opengamma.analytics.financial.model.option.definition.Barrier$BarrierType: com.opengamma.analytics.financial.model.option.definition.Barrier$BarrierType DOWN>;

        if $r14 != $r15 goto label05;

        $z5 = 1;

        goto label06;

     label05:
        $z5 = 0;

     label06:
        z0 = $z5;

        d5 = virtualinvoke r2.<com.opengamma.analytics.financial.model.option.definition.Barrier: double getBarrierLevel()>();

        $r16 = virtualinvoke r2.<com.opengamma.analytics.financial.model.option.definition.Barrier: com.opengamma.analytics.financial.model.option.definition.Barrier$BarrierType getBarrierType()>();

        $r17 = <com.opengamma.analytics.financial.model.option.definition.Barrier$BarrierType: com.opengamma.analytics.financial.model.option.definition.Barrier$BarrierType DOWN>;

        if $r16 != $r17 goto label07;

        $d267 = virtualinvoke r2.<com.opengamma.analytics.financial.model.option.definition.Barrier: double getBarrierLevel()>();

        $b11 = d1 cmpg $d267;

        if $b11 < 0 goto label08;

     label07:
        $z6 = 1;

        goto label09;

     label08:
        $z6 = 0;

     label09:
        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z6, "The Data is not consistent with an alive barrier (DOWN and spot<barrier).");

        $r18 = virtualinvoke r2.<com.opengamma.analytics.financial.model.option.definition.Barrier: com.opengamma.analytics.financial.model.option.definition.Barrier$BarrierType getBarrierType()>();

        $r19 = <com.opengamma.analytics.financial.model.option.definition.Barrier$BarrierType: com.opengamma.analytics.financial.model.option.definition.Barrier$BarrierType UP>;

        if $r18 != $r19 goto label10;

        $d266 = virtualinvoke r2.<com.opengamma.analytics.financial.model.option.definition.Barrier: double getBarrierLevel()>();

        $b10 = d1 cmpl $d266;

        if $b10 > 0 goto label11;

     label10:
        $z7 = 1;

        goto label12;

     label11:
        $z7 = 0;

     label12:
        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z7, "The Data is not consistent with an alive barrier (UP and spot>barrier).");

        z1 = virtualinvoke r1.<com.opengamma.analytics.financial.model.option.pricing.analytic.formula.EuropeanVanillaOption: boolean isCall()>();

        d6 = virtualinvoke r1.<com.opengamma.analytics.financial.model.option.pricing.analytic.formula.EuropeanVanillaOption: double getTimeToExpiry()>();

        d7 = virtualinvoke r1.<com.opengamma.analytics.financial.model.option.pricing.analytic.formula.EuropeanVanillaOption: double getStrike()>();

        if z1 == 0 goto label13;

        $b13 = 1;

        goto label14;

     label13:
        $b13 = -1;

     label14:
        b0 = $b13;

        if z0 == 0 goto label15;

        $d268 = 1.0;

        goto label16;

     label15:
        $d268 = -1.0;

     label16:
        $d29 = d2 - d3;

        $d30 = d6 * $d29;

        d9 = staticinvoke <java.lang.Math: double exp(double)>($d30);

        $d31 = neg d3;

        $d32 = $d31 * d6;

        d10 = staticinvoke <java.lang.Math: double exp(double)>($d32);

        $z2 = staticinvoke <com.opengamma.util.CompareUtils: boolean closeEquals(double,double,double)>(d4, 0.0, 1.0E-16);

        if $z2 == 0 goto label17;

        d270 = d0 * 1.0;

        $d260 = neg d6;

        $d261 = $d260 * d9;

        $d262 = $d261 * d270;

        r3[2] = $d262;

        $d263 = d6 * d9;

        $d264 = $d263 * d270;

        r3[3] = $d264;

        $d265 = d9 * d0;

        return $d265;

     label17:
        d271 = d4 * d4;

        $d33 = staticinvoke <java.lang.Math: double sqrt(double)>(d6);

        d272 = d4 * $d33;

        $d34 = 0.5 * d271;

        $d35 = d2 - $d34;

        d11 = $d35 / d271;

        $d38 = d11 * d11;

        $d36 = 2.0 * d3;

        $d37 = $d36 / d271;

        $d39 = $d38 + $d37;

        d12 = staticinvoke <java.lang.Math: double sqrt(double)>($d39);

        $d40 = 1.0 + d11;

        d13 = d272 * $d40;

        $d41 = d1 / d7;

        $d42 = staticinvoke <java.lang.Math: double log(double)>($d41);

        $d43 = $d42 / d272;

        d14 = $d43 + d13;

        $d44 = d1 / d5;

        $d45 = staticinvoke <java.lang.Math: double log(double)>($d44);

        $d46 = $d45 / d272;

        d15 = $d46 + d13;

        $d47 = d5 * d5;

        $d48 = $d47 / d1;

        $d49 = $d48 / d7;

        $d50 = staticinvoke <java.lang.Math: double log(double)>($d49);

        $d51 = $d50 / d272;

        d16 = $d51 + d13;

        $d52 = d5 / d1;

        $d53 = staticinvoke <java.lang.Math: double log(double)>($d52);

        $d54 = $d53 / d272;

        d17 = $d54 + d13;

        $d55 = d5 / d1;

        $d56 = staticinvoke <java.lang.Math: double log(double)>($d55);

        $d58 = $d56 / d272;

        $d57 = d12 * d272;

        d18 = $d58 + $d57;

        r4 = newarray (double)[6];

        $d59 = (double) b0;

        d19 = specialinvoke r0.<com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackBarrierPriceFunction: double getAAdjoint(double,double,double,double,double,double,double,double[])>(d1, d7, d9, d10, d14, d272, $d59, r4);

        r5 = newarray (double)[6];

        $d60 = (double) b0;

        d20 = specialinvoke r0.<com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackBarrierPriceFunction: double getAAdjoint(double,double,double,double,double,double,double,double[])>(d1, d7, d9, d10, d15, d272, $d60, r5);

        r6 = newarray (double)[7];

        $d61 = (double) b0;

        d21 = specialinvoke r0.<com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackBarrierPriceFunction: double getCAdjoint(double,double,double,double,double,double,double,double,double,double,double[])>(d1, d7, d9, d10, d16, d272, d5, d11, $d61, $d268, r6);

        r7 = newarray (double)[7];

        $d62 = (double) b0;

        d22 = specialinvoke r0.<com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackBarrierPriceFunction: double getCAdjoint(double,double,double,double,double,double,double,double,double,double,double[])>(d1, d7, d9, d10, d17, d272, d5, d11, $d62, $d268, r7);

        r8 = newarray (double)[5];

        r9 = newarray (double)[6];

        if z4 == 0 goto label18;

        $d273 = specialinvoke r0.<com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackBarrierPriceFunction: double getEAdjoint(double,double,double,double,double,double,double,double,double,double[])>(d1, d0, d10, d15, d17, d272, d5, d11, $d268, r9);

        goto label19;

     label18:
        $d273 = specialinvoke r0.<com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackBarrierPriceFunction: double getFAdjoint(double,double,double,double,double,double,double,double,double[])>(d1, d0, d18, d272, d5, d11, d12, $d268, r8);

     label19:
        d275 = 0.0;

        d276 = 0.0;

        d277 = 0.0;

        d278 = 0.0;

        if z4 == 0 goto label27;

        if z0 == 0 goto label23;

        if z1 == 0 goto label21;

        $b9 = d7 cmpl d5;

        if $b9 <= 0 goto label20;

        d276 = 1.0;

        d279 = 1.0;

        d280 = d21 + $d273;

        goto label35;

     label20:
        d278 = 1.0;

        d277 = -1.0;

        d275 = 1.0;

        d279 = 1.0;

        $d258 = d19 - d20;

        $d259 = $d258 + d22;

        d280 = $d259 + $d273;

        goto label35;

     label21:
        $b8 = d7 cmpl d5;

        if $b8 <= 0 goto label22;

        d277 = 1.0;

        d276 = -1.0;

        d275 = 1.0;

        d279 = 1.0;

        $d256 = d20 - d21;

        $d257 = $d256 + d22;

        d280 = $d257 + $d273;

        goto label35;

     label22:
        d278 = 1.0;

        d279 = -1.0;

        d280 = d19 + $d273;

        goto label35;

     label23:
        if z1 == 0 goto label25;

        $b7 = d7 cmpl d5;

        if $b7 <= 0 goto label24;

        d278 = 1.0;

        d279 = -1.0;

        d280 = d19 + $d273;

        goto label35;

     label24:
        d277 = 1.0;

        d276 = -1.0;

        d275 = 1.0;

        d279 = 1.0;

        $d254 = d20 - d21;

        $d255 = $d254 + d22;

        d280 = $d255 + $d273;

        goto label35;

     label25:
        $b6 = d7 cmpl d5;

        if $b6 <= 0 goto label26;

        d278 = 1.0;

        d277 = -1.0;

        d275 = 1.0;

        d279 = 1.0;

        $d252 = d19 - d20;

        $d253 = $d252 + d22;

        d280 = $d253 + $d273;

        goto label35;

     label26:
        d276 = 1.0;

        d279 = 1.0;

        d280 = d21 + $d273;

        goto label35;

     label27:
        if z0 == 0 goto label31;

        if z1 == 0 goto label29;

        $b5 = d7 cmpl d5;

        if $b5 <= 0 goto label28;

        d278 = 1.0;

        d276 = -1.0;

        d279 = 1.0;

        $d251 = d19 - d21;

        d280 = $d251 + $d273;

        goto label35;

     label28:
        d277 = 1.0;

        d275 = -1.0;

        d279 = 1.0;

        $d250 = d20 - d22;

        d280 = $d250 + $d273;

        goto label35;

     label29:
        $b4 = d7 cmpl d5;

        if $b4 <= 0 goto label30;

        d278 = 1.0;

        d277 = -1.0;

        d276 = 1.0;

        d275 = -1.0;

        d279 = 1.0;

        $d247 = d19 - d20;

        $d248 = $d247 + d21;

        $d249 = $d248 - d22;

        d280 = $d249 + $d273;

        goto label35;

     label30:
        d279 = 1.0;

        d280 = $d273;

        goto label35;

     label31:
        if z1 == 0 goto label33;

        $b3 = d7 cmpl d5;

        if $b3 <= 0 goto label32;

        d279 = 1.0;

        d280 = $d273;

        goto label35;

     label32:
        d278 = 1.0;

        d277 = -1.0;

        d276 = 1.0;

        d275 = -1.0;

        d279 = 1.0;

        $d244 = d19 - d20;

        $d245 = $d244 + d21;

        $d246 = $d245 - d22;

        d280 = $d246 + $d273;

        goto label35;

     label33:
        $b1 = d7 cmpl d5;

        if $b1 <= 0 goto label34;

        d277 = 1.0;

        d275 = -1.0;

        d279 = 1.0;

        $d243 = d20 - d22;

        d280 = $d243 + $d273;

        goto label35;

     label34:
        d278 = 1.0;

        d276 = -1.0;

        d279 = 1.0;

        $d63 = d19 - d21;

        d280 = $d63 + $d273;

     label35:
        d281 = 0.0;

        d282 = 0.0;

        d283 = 0.0;

        d284 = 0.0;

        d287 = 0.0;

        if z4 == 0 goto label36;

        $d236 = r9[3];

        d282 = $d236 * d279;

        $d237 = r9[2];

        d283 = $d237 * d279;

        $d238 = r9[5];

        d288 = $d238 * d279;

        $d239 = r9[4];

        d289 = $d239 * d279;

        $d240 = r9[1];

        d287 = $d240 * d279;

        $d241 = r9[0];

        $d242 = $d241 * d279;

        r3[0] = $d242;

        goto label37;

     label36:
        $d64 = r8[1];

        d281 = $d64 * d279;

        $d65 = r8[4];

        d284 = $d65 * d279;

        $d66 = r8[3];

        d288 = $d66 * d279;

        $d67 = r8[2];

        d289 = $d67 * d279;

        $d68 = r8[0];

        $d69 = $d68 * d279;

        r3[0] = $d69;

     label37:
        $d70 = r7[4];

        $d71 = $d70 * d275;

        d290 = d282 + $d71;

        $d72 = r6[4];

        d24 = $d72 * d276;

        $d73 = r5[4];

        $d74 = $d73 * d277;

        d291 = d283 + $d74;

        $d75 = r4[4];

        d25 = $d75 * d278;

        $d76 = d25 + d291;

        $d77 = $d76 + d24;

        d26 = $d77 + d290;

        $d78 = r6[6];

        $d81 = $d78 * d276;

        $d79 = r7[6];

        $d80 = $d79 * d275;

        $d83 = $d81 + $d80;

        $d82 = d272 * d26;

        $d86 = $d83 + $d82;

        $d84 = d11 / d12;

        $d85 = $d84 * d284;

        $d87 = $d86 + $d85;

        d292 = d288 + $d87;

        $d88 = r4[5];

        $d91 = $d88 * d278;

        $d89 = r5[5];

        $d90 = $d89 * d277;

        $d94 = $d91 + $d90;

        $d92 = r6[5];

        $d93 = $d92 * d276;

        $d97 = $d94 + $d93;

        $d95 = r7[5];

        $d96 = $d95 * d275;

        $d99 = $d97 + $d96;

        $d98 = d5 / d1;

        $d100 = staticinvoke <java.lang.Math: double log(double)>($d98);

        $d101 = d272 * d272;

        $d102 = $d100 / $d101;

        $d103 = d12 - $d102;

        $d104 = $d103 * d281;

        $d106 = $d99 + $d104;

        $d105 = d5 / d1;

        $d107 = staticinvoke <java.lang.Math: double log(double)>($d105);

        $d108 = d272 * d272;

        $d109 = $d107 / $d108;

        $d110 = $d109 * d290;

        $d114 = $d106 - $d110;

        $d111 = d5 * d5;

        $d112 = $d111 / d1;

        $d113 = $d112 / d7;

        $d115 = staticinvoke <java.lang.Math: double log(double)>($d113);

        $d116 = d272 * d272;

        $d117 = $d115 / $d116;

        $d118 = $d117 * d24;

        $d120 = $d114 - $d118;

        $d119 = d1 / d5;

        $d121 = staticinvoke <java.lang.Math: double log(double)>($d119);

        $d122 = d272 * d272;

        $d123 = $d121 / $d122;

        $d124 = $d123 * d291;

        $d126 = $d120 - $d124;

        $d125 = d1 / d7;

        $d127 = staticinvoke <java.lang.Math: double log(double)>($d125);

        $d128 = d272 * d272;

        $d129 = $d127 / $d128;

        $d130 = $d129 * d25;

        $d133 = $d126 - $d130;

        $d131 = 1.0 + d11;

        $d132 = $d131 * d26;

        $d134 = $d133 + $d132;

        d293 = d289 + $d134;

        $d136 = neg d2;

        $d135 = d271 * d271;

        $d137 = $d136 / $d135;

        $d142 = $d137 * d292;

        $d138 = d271 * d271;

        $d139 = d3 / $d138;

        $d140 = $d139 / d12;

        $d141 = $d140 * d284;

        d27 = $d142 - $d141;

        $d143 = r4[3];

        $d146 = $d143 * d278;

        $d144 = r5[3];

        $d145 = $d144 * d277;

        $d149 = $d146 + $d145;

        $d147 = r6[3];

        $d148 = $d147 * d276;

        $d152 = $d149 + $d148;

        $d150 = r7[3];

        $d151 = $d150 * d275;

        $d153 = $d152 + $d151;

        d294 = d287 + $d153;

        $d154 = r4[2];

        $d157 = $d154 * d278;

        $d155 = r5[2];

        $d156 = $d155 * d277;

        $d160 = $d157 + $d156;

        $d158 = r6[2];

        $d159 = $d158 * d276;

        $d163 = $d160 + $d159;

        $d161 = r7[2];

        $d162 = $d161 * d275;

        d28 = $d163 + $d162;

        $d195 = r3[0];

        $d164 = r4[0];

        $d167 = $d164 * d278;

        $d165 = r5[0];

        $d166 = $d165 * d277;

        $d170 = $d167 + $d166;

        $d168 = r6[0];

        $d169 = $d168 * d276;

        $d173 = $d170 + $d169;

        $d171 = r7[0];

        $d172 = $d171 * d275;

        $d177 = $d173 + $d172;

        $d174 = 1.0 / d1;

        $d175 = $d174 / d272;

        $d176 = $d175 * d25;

        $d181 = $d177 + $d176;

        $d178 = 1.0 / d1;

        $d179 = $d178 / d272;

        $d180 = $d179 * d291;

        $d185 = $d181 + $d180;

        $d182 = -1.0 / d1;

        $d183 = $d182 / d272;

        $d184 = $d183 * d24;

        $d189 = $d185 + $d184;

        $d186 = -1.0 / d1;

        $d187 = $d186 / d272;

        $d188 = $d187 * d290;

        $d193 = $d189 + $d188;

        $d190 = 1.0 / d1;

        $d191 = $d190 / d272;

        $d192 = $d191 * d281;

        $d194 = $d193 - $d192;

        $d196 = $d195 + $d194;

        r3[0] = $d196;

        $d197 = r4[1];

        $d200 = $d197 * d278;

        $d198 = r5[1];

        $d199 = $d198 * d277;

        $d203 = $d200 + $d199;

        $d201 = r6[1];

        $d202 = $d201 * d276;

        $d206 = $d203 + $d202;

        $d204 = r7[1];

        $d205 = $d204 * d275;

        $d210 = $d206 + $d205;

        $d207 = -1.0 / d7;

        $d208 = $d207 / d272;

        $d209 = $d208 * d25;

        $d214 = $d210 + $d209;

        $d211 = 1.0 / d7;

        $d212 = $d211 / d272;

        $d213 = $d212 * d24;

        $d215 = $d214 - $d213;

        r3[1] = $d215;

        $d216 = neg d6;

        $d217 = $d216 * d9;

        $d220 = $d217 * d28;

        $d218 = d6 * d10;

        $d219 = $d218 * d294;

        $d224 = $d220 - $d219;

        $d221 = 1.0 / d12;

        $d222 = $d221 / d271;

        $d223 = $d222 * d284;

        $d225 = $d224 + $d223;

        r3[2] = $d225;

        $d226 = d6 * d9;

        $d229 = $d226 * d28;

        $d227 = 1.0 / d271;

        $d228 = $d227 * d292;

        $d230 = $d229 + $d228;

        r3[3] = $d230;

        $d231 = 2.0 * d4;

        $d232 = $d231 * d27;

        $d233 = staticinvoke <java.lang.Math: double sqrt(double)>(d6);

        $d234 = $d233 * d293;

        $d235 = $d232 + $d234;

        r3[4] = $d235;

        return d280;
    }

    private double getA(double, double, double, double, double, double, double)
    {
        com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackBarrierPriceFunction r0;
        double d0, d1, d2, d3, d4, d5, d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17;
        com.opengamma.analytics.math.statistics.distribution.ProbabilityDistribution $r1, $r3;
        java.lang.Double $r2, $r4;

        r0 := @this: com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackBarrierPriceFunction;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        d2 := @parameter2: double;

        d3 := @parameter3: double;

        d4 := @parameter4: double;

        d5 := @parameter5: double;

        d6 := @parameter6: double;

        $d8 = d0 * d2;

        $r1 = <com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackBarrierPriceFunction: com.opengamma.analytics.math.statistics.distribution.ProbabilityDistribution NORMAL>;

        $d7 = d6 * d4;

        $r2 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d7);

        $d9 = interfaceinvoke $r1.<com.opengamma.analytics.math.statistics.distribution.ProbabilityDistribution: double getCDF(java.lang.Object)>($r2);

        $d12 = $d8 * $d9;

        $d13 = d1 * d3;

        $r3 = <com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackBarrierPriceFunction: com.opengamma.analytics.math.statistics.distribution.ProbabilityDistribution NORMAL>;

        $d10 = d4 - d5;

        $d11 = d6 * $d10;

        $r4 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d11);

        $d14 = interfaceinvoke $r3.<com.opengamma.analytics.math.statistics.distribution.ProbabilityDistribution: double getCDF(java.lang.Object)>($r4);

        $d15 = $d13 * $d14;

        $d16 = $d12 - $d15;

        $d17 = d6 * $d16;

        return $d17;
    }

    private double getAAdjoint(double, double, double, double, double, double, double, double[])
    {
        com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackBarrierPriceFunction r0;
        double d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, d11, d12, d13, d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21, $d22, $d23, $d24, $d25, $d26, $d27, $d28, $d29, $d30, $d31, $d32, $d33, $d34, $d35, $d36, $d37, $d38, $d39, $d40, $d41, $d42, $d43, $d44, $d45, $d46, $d47, $d48, $d49, $d50, $d51, $d52;
        double[] r1;
        com.opengamma.analytics.math.statistics.distribution.ProbabilityDistribution $r2, $r4, $r6, $r8;
        java.lang.Double $r3, $r5, $r7, $r9;

        r0 := @this: com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackBarrierPriceFunction;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        d2 := @parameter2: double;

        d3 := @parameter3: double;

        d4 := @parameter4: double;

        d5 := @parameter5: double;

        d6 := @parameter6: double;

        r1 := @parameter7: double[];

        $r2 = <com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackBarrierPriceFunction: com.opengamma.analytics.math.statistics.distribution.ProbabilityDistribution NORMAL>;

        $d15 = d6 * d4;

        $r3 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d15);

        d7 = interfaceinvoke $r2.<com.opengamma.analytics.math.statistics.distribution.ProbabilityDistribution: double getCDF(java.lang.Object)>($r3);

        $r4 = <com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackBarrierPriceFunction: com.opengamma.analytics.math.statistics.distribution.ProbabilityDistribution NORMAL>;

        $d16 = d4 - d5;

        $d17 = d6 * $d16;

        $r5 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d17);

        d8 = interfaceinvoke $r4.<com.opengamma.analytics.math.statistics.distribution.ProbabilityDistribution: double getCDF(java.lang.Object)>($r5);

        $d18 = d0 * d2;

        $d21 = $d18 * d7;

        $d19 = d1 * d3;

        $d20 = $d19 * d8;

        $d22 = $d21 - $d20;

        d9 = d6 * $d22;

        $d23 = neg d1;

        $d24 = d6 * $d23;

        $d25 = $d24 * d3;

        d11 = $d25 * 1.0;

        $d26 = d6 * d0;

        $d27 = $d26 * d2;

        d12 = $d27 * 1.0;

        $d28 = d6 * d2;

        $d29 = $d28 * d7;

        $d30 = $d29 * 1.0;

        r1[0] = $d30;

        $d31 = neg d3;

        $d32 = d6 * $d31;

        $d33 = $d32 * d8;

        $d34 = $d33 * 1.0;

        r1[1] = $d34;

        $d35 = d6 * d0;

        $d36 = $d35 * d7;

        $d37 = $d36 * 1.0;

        r1[2] = $d37;

        $d38 = neg d1;

        $d39 = d6 * $d38;

        $d40 = $d39 * d8;

        $d41 = $d40 * 1.0;

        r1[3] = $d41;

        $r6 = <com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackBarrierPriceFunction: com.opengamma.analytics.math.statistics.distribution.ProbabilityDistribution NORMAL>;

        $d42 = d6 * d4;

        $r7 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d42);

        d13 = interfaceinvoke $r6.<com.opengamma.analytics.math.statistics.distribution.ProbabilityDistribution: double getPDF(java.lang.Object)>($r7);

        $r8 = <com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackBarrierPriceFunction: com.opengamma.analytics.math.statistics.distribution.ProbabilityDistribution NORMAL>;

        $d43 = d4 - d5;

        $d44 = d6 * $d43;

        $r9 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d44);

        d14 = interfaceinvoke $r8.<com.opengamma.analytics.math.statistics.distribution.ProbabilityDistribution: double getPDF(java.lang.Object)>($r9);

        $d45 = d13 * d6;

        $d48 = $d45 * d12;

        $d46 = d14 * d6;

        $d47 = $d46 * d11;

        $d49 = $d48 + $d47;

        r1[4] = $d49;

        $d50 = neg d6;

        $d51 = d14 * $d50;

        $d52 = $d51 * d11;

        r1[5] = $d52;

        return d9;
    }

    private double getC(double, double, double, double, double, double, double, double, double, double)
    {
        com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackBarrierPriceFunction r0;
        double d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21, $d22, $d23, $d24, $d25, $d26, $d27, $d28, $d29;
        com.opengamma.analytics.math.statistics.distribution.ProbabilityDistribution $r1, $r3;
        java.lang.Double $r2, $r4;

        r0 := @this: com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackBarrierPriceFunction;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        d2 := @parameter2: double;

        d3 := @parameter3: double;

        d4 := @parameter4: double;

        d5 := @parameter5: double;

        d6 := @parameter6: double;

        d7 := @parameter7: double;

        d8 := @parameter8: double;

        d9 := @parameter9: double;

        $d13 = d0 * d2;

        $d12 = d6 / d0;

        $d10 = d7 + 1.0;

        $d11 = 2.0 * $d10;

        $d14 = staticinvoke <java.lang.Math: double pow(double,double)>($d12, $d11);

        $d16 = $d13 * $d14;

        $r1 = <com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackBarrierPriceFunction: com.opengamma.analytics.math.statistics.distribution.ProbabilityDistribution NORMAL>;

        $d15 = d9 * d4;

        $r2 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d15);

        $d17 = interfaceinvoke $r1.<com.opengamma.analytics.math.statistics.distribution.ProbabilityDistribution: double getCDF(java.lang.Object)>($r2);

        $d20 = $d16 * $d17;

        $d21 = d1 * d3;

        $d19 = d6 / d0;

        $d18 = 2.0 * d7;

        $d22 = staticinvoke <java.lang.Math: double pow(double,double)>($d19, $d18);

        $d25 = $d21 * $d22;

        $r3 = <com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackBarrierPriceFunction: com.opengamma.analytics.math.statistics.distribution.ProbabilityDistribution NORMAL>;

        $d23 = d4 - d5;

        $d24 = d9 * $d23;

        $r4 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d24);

        $d26 = interfaceinvoke $r3.<com.opengamma.analytics.math.statistics.distribution.ProbabilityDistribution: double getCDF(java.lang.Object)>($r4);

        $d27 = $d25 * $d26;

        $d28 = $d20 - $d27;

        $d29 = d8 * $d28;

        return $d29;
    }

    private double getCAdjoint(double, double, double, double, double, double, double, double, double, double, double[])
    {
        com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackBarrierPriceFunction r0;
        double d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, d10, d11, d12, d13, d14, d15, d16, d18, d19, d20, d21, $d22, $d23, $d24, $d25, $d26, $d27, $d28, $d29, $d30, $d31, $d32, $d33, $d34, $d35, $d36, $d37, $d38, $d39, $d40, $d41, $d42, $d43, $d44, $d45, $d46, $d47, $d48, $d49, $d50, $d51, $d52, $d53, $d54, $d55, $d56, $d57, $d58, $d59, $d60, $d61, $d62, $d63, $d64, $d65, $d66, $d67, $d68, $d69, $d70, $d71, $d72, $d73, $d74, $d75, $d76, $d77, $d78, $d79, $d80, $d81, $d82, $d83, $d84, $d85, $d86, $d87, $d88, $d89, $d90, $d91, $d92, $d93, $d94, $d95, $d96, $d97, $d98, $d99, $d100, $d101;
        double[] r1;
        com.opengamma.analytics.math.statistics.distribution.ProbabilityDistribution $r2, $r4, $r6, $r8;
        java.lang.Double $r3, $r5, $r7, $r9;

        r0 := @this: com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackBarrierPriceFunction;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        d2 := @parameter2: double;

        d3 := @parameter3: double;

        d4 := @parameter4: double;

        d5 := @parameter5: double;

        d6 := @parameter6: double;

        d7 := @parameter7: double;

        d8 := @parameter8: double;

        d9 := @parameter9: double;

        r1 := @parameter10: double[];

        $r2 = <com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackBarrierPriceFunction: com.opengamma.analytics.math.statistics.distribution.ProbabilityDistribution NORMAL>;

        $d22 = d9 * d4;

        $r3 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d22);

        d10 = interfaceinvoke $r2.<com.opengamma.analytics.math.statistics.distribution.ProbabilityDistribution: double getCDF(java.lang.Object)>($r3);

        $r4 = <com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackBarrierPriceFunction: com.opengamma.analytics.math.statistics.distribution.ProbabilityDistribution NORMAL>;

        $d23 = d4 - d5;

        $d24 = d9 * $d23;

        $r5 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d24);

        d11 = interfaceinvoke $r4.<com.opengamma.analytics.math.statistics.distribution.ProbabilityDistribution: double getCDF(java.lang.Object)>($r5);

        $d27 = d6 / d0;

        $d25 = d7 + 1.0;

        $d26 = 2.0 * $d25;

        d12 = staticinvoke <java.lang.Math: double pow(double,double)>($d27, $d26);

        $d29 = d6 / d0;

        $d28 = 2.0 * d7;

        d13 = staticinvoke <java.lang.Math: double pow(double,double)>($d29, $d28);

        $d30 = d0 * d2;

        $d31 = $d30 * d12;

        $d35 = $d31 * d10;

        $d32 = d1 * d3;

        $d33 = $d32 * d13;

        $d34 = $d33 * d11;

        $d36 = $d35 - $d34;

        d14 = d8 * $d36;

        $r6 = <com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackBarrierPriceFunction: com.opengamma.analytics.math.statistics.distribution.ProbabilityDistribution NORMAL>;

        $d37 = d9 * d4;

        $r7 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d37);

        d15 = interfaceinvoke $r6.<com.opengamma.analytics.math.statistics.distribution.ProbabilityDistribution: double getPDF(java.lang.Object)>($r7);

        $r8 = <com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackBarrierPriceFunction: com.opengamma.analytics.math.statistics.distribution.ProbabilityDistribution NORMAL>;

        $d38 = d4 - d5;

        $d39 = d9 * $d38;

        $r9 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d39);

        d16 = interfaceinvoke $r8.<com.opengamma.analytics.math.statistics.distribution.ProbabilityDistribution: double getPDF(java.lang.Object)>($r9);

        $d40 = neg d1;

        $d41 = d8 * $d40;

        $d42 = $d41 * d3;

        $d43 = $d42 * d11;

        d18 = $d43 * 1.0;

        $d44 = d8 * d0;

        $d45 = $d44 * d2;

        $d46 = $d45 * d10;

        d19 = $d46 * 1.0;

        $d47 = neg d1;

        $d48 = d8 * $d47;

        $d49 = $d48 * d3;

        $d50 = $d49 * d13;

        d20 = $d50 * 1.0;

        $d51 = d8 * d0;

        $d52 = $d51 * d2;

        $d53 = $d52 * d12;

        d21 = $d53 * 1.0;

        $d54 = d8 * d2;

        $d55 = $d54 * d12;

        $d56 = $d55 * d10;

        $d61 = $d56 * 1.0;

        $d57 = 2.0 * d7;

        $d58 = $d57 * d13;

        $d59 = $d58 / d0;

        $d60 = $d59 * d18;

        $d67 = $d61 - $d60;

        $d62 = d7 + 1.0;

        $d63 = 2.0 * $d62;

        $d64 = $d63 * d12;

        $d65 = $d64 / d0;

        $d66 = $d65 * d19;

        $d68 = $d67 - $d66;

        r1[0] = $d68;

        $d69 = neg d3;

        $d70 = d8 * $d69;

        $d71 = $d70 * d13;

        $d72 = $d71 * d11;

        $d73 = $d72 * 1.0;

        r1[1] = $d73;

        $d74 = d8 * d0;

        $d75 = $d74 * d12;

        $d76 = $d75 * d10;

        $d77 = $d76 * 1.0;

        r1[2] = $d77;

        $d78 = neg d1;

        $d79 = d8 * $d78;

        $d80 = $d79 * d13;

        $d81 = $d80 * d11;

        $d82 = $d81 * 1.0;

        r1[3] = $d82;

        $d83 = d15 * d9;

        $d86 = $d83 * d21;

        $d84 = d16 * d9;

        $d85 = $d84 * d20;

        $d87 = $d86 + $d85;

        r1[4] = $d87;

        $d88 = neg d16;

        $d89 = $d88 * d9;

        $d90 = $d89 * d20;

        r1[5] = $d90;

        $d91 = d6 / d0;

        $d92 = staticinvoke <java.lang.Math: double log(double)>($d91);

        $d93 = 2.0 * $d92;

        $d94 = $d93 * d13;

        $d96 = $d94 * d18;

        $d95 = d6 / d0;

        $d97 = staticinvoke <java.lang.Math: double log(double)>($d95);

        $d98 = 2.0 * $d97;

        $d99 = $d98 * d12;

        $d100 = $d99 * d19;

        $d101 = $d96 + $d100;

        r1[6] = $d101;

        return d14;
    }

    private double getE(double, double, double, double, double, double, double, double, double)
    {
        com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackBarrierPriceFunction r0;
        double d0, d1, d2, d3, d4, d5, d6, d7, d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21;
        com.opengamma.analytics.math.statistics.distribution.ProbabilityDistribution $r1, $r3;
        java.lang.Double $r2, $r4;

        r0 := @this: com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackBarrierPriceFunction;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        d2 := @parameter2: double;

        d3 := @parameter3: double;

        d4 := @parameter4: double;

        d5 := @parameter5: double;

        d6 := @parameter6: double;

        d7 := @parameter7: double;

        d8 := @parameter8: double;

        $d11 = d1 * d2;

        $r1 = <com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackBarrierPriceFunction: com.opengamma.analytics.math.statistics.distribution.ProbabilityDistribution NORMAL>;

        $d9 = d3 - d5;

        $d10 = d8 * $d9;

        $r2 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d10);

        $d12 = interfaceinvoke $r1.<com.opengamma.analytics.math.statistics.distribution.ProbabilityDistribution: double getCDF(java.lang.Object)>($r2);

        $d14 = d6 / d0;

        $d13 = 2.0 * d7;

        $d15 = staticinvoke <java.lang.Math: double pow(double,double)>($d14, $d13);

        $r3 = <com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackBarrierPriceFunction: com.opengamma.analytics.math.statistics.distribution.ProbabilityDistribution NORMAL>;

        $d16 = d4 - d5;

        $d17 = d8 * $d16;

        $r4 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d17);

        $d18 = interfaceinvoke $r3.<com.opengamma.analytics.math.statistics.distribution.ProbabilityDistribution: double getCDF(java.lang.Object)>($r4);

        $d19 = $d15 * $d18;

        $d20 = $d12 - $d19;

        $d21 = $d11 * $d20;

        return $d21;
    }

    private double getEAdjoint(double, double, double, double, double, double, double, double, double, double[])
    {
        com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackBarrierPriceFunction r0;
        double d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, d10, d11, d12, d14, d15, d16, d17, d18, $d19, $d20, $d21, $d22, $d23, $d24, $d25, $d26, $d27, $d28, $d29, $d30, $d31, $d32, $d33, $d34, $d35, $d36, $d37, $d38, $d39, $d40, $d41, $d42, $d43, $d44, $d45, $d46, $d47, $d48, $d49, $d50, $d51, $d52, $d53, $d54, $d55, $d56, $d57, $d58, $d59, $d60, $d61, $d62;
        double[] r1;
        com.opengamma.analytics.math.statistics.distribution.ProbabilityDistribution $r2, $r4, $r6, $r8;
        java.lang.Double $r3, $r5, $r7, $r9;

        r0 := @this: com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackBarrierPriceFunction;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        d2 := @parameter2: double;

        d3 := @parameter3: double;

        d4 := @parameter4: double;

        d5 := @parameter5: double;

        d6 := @parameter6: double;

        d7 := @parameter7: double;

        d8 := @parameter8: double;

        r1 := @parameter9: double[];

        $r2 = <com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackBarrierPriceFunction: com.opengamma.analytics.math.statistics.distribution.ProbabilityDistribution NORMAL>;

        $d19 = d3 - d5;

        $d20 = d8 * $d19;

        $r3 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d20);

        d9 = interfaceinvoke $r2.<com.opengamma.analytics.math.statistics.distribution.ProbabilityDistribution: double getCDF(java.lang.Object)>($r3);

        $r4 = <com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackBarrierPriceFunction: com.opengamma.analytics.math.statistics.distribution.ProbabilityDistribution NORMAL>;

        $d21 = d4 - d5;

        $d22 = d8 * $d21;

        $r5 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d22);

        d10 = interfaceinvoke $r4.<com.opengamma.analytics.math.statistics.distribution.ProbabilityDistribution: double getCDF(java.lang.Object)>($r5);

        $d24 = d6 / d0;

        $d23 = 2.0 * d7;

        d11 = staticinvoke <java.lang.Math: double pow(double,double)>($d24, $d23);

        $d27 = d1 * d2;

        $d25 = d11 * d10;

        $d26 = d9 - $d25;

        d12 = $d27 * $d26;

        $r6 = <com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackBarrierPriceFunction: com.opengamma.analytics.math.statistics.distribution.ProbabilityDistribution NORMAL>;

        $d28 = d3 - d5;

        $d29 = d8 * $d28;

        $r7 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d29);

        d14 = interfaceinvoke $r6.<com.opengamma.analytics.math.statistics.distribution.ProbabilityDistribution: double getPDF(java.lang.Object)>($r7);

        $r8 = <com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackBarrierPriceFunction: com.opengamma.analytics.math.statistics.distribution.ProbabilityDistribution NORMAL>;

        $d30 = d4 - d5;

        $d31 = d8 * $d30;

        $r9 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d31);

        d15 = interfaceinvoke $r8.<com.opengamma.analytics.math.statistics.distribution.ProbabilityDistribution: double getPDF(java.lang.Object)>($r9);

        $d33 = d1 * d2;

        $d32 = neg d10;

        $d34 = $d33 * $d32;

        d16 = $d34 * 1.0;

        $d36 = d1 * d2;

        $d35 = neg d11;

        $d37 = $d36 * $d35;

        d17 = $d37 * 1.0;

        $d38 = d1 * d2;

        d18 = $d38 * 1.0;

        $d39 = -2.0 * d7;

        $d40 = $d39 * d11;

        $d41 = $d40 / d0;

        $d42 = $d41 * d16;

        r1[0] = $d42;

        $d43 = d11 * d10;

        $d44 = d9 - $d43;

        $d45 = d1 * $d44;

        $d46 = $d45 * 1.0;

        r1[1] = $d46;

        $d47 = d14 * d8;

        $d48 = $d47 * d18;

        r1[2] = $d48;

        $d49 = d15 * d8;

        $d50 = $d49 * d17;

        r1[3] = $d50;

        $d51 = neg d8;

        $d52 = d15 * $d51;

        $d56 = $d52 * d17;

        $d53 = neg d8;

        $d54 = d14 * $d53;

        $d55 = $d54 * d18;

        $d57 = $d56 + $d55;

        r1[4] = $d57;

        $d58 = d6 / d0;

        $d59 = staticinvoke <java.lang.Math: double log(double)>($d58);

        $d60 = 2.0 * $d59;

        $d61 = $d60 * d11;

        $d62 = $d61 * d16;

        r1[5] = $d62;

        return d12;
    }

    private double getF(double, double, double, double, double, double, double, double)
    {
        com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackBarrierPriceFunction r0;
        double d0, d1, d2, d3, d4, d5, d6, d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21, $d22, $d23, $d24;
        com.opengamma.analytics.math.statistics.distribution.ProbabilityDistribution $r1, $r3;
        java.lang.Double $r2, $r4;

        r0 := @this: com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackBarrierPriceFunction;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        d2 := @parameter2: double;

        d3 := @parameter3: double;

        d4 := @parameter4: double;

        d5 := @parameter5: double;

        d6 := @parameter6: double;

        d7 := @parameter7: double;

        $d9 = d4 / d0;

        $d8 = d5 + d6;

        $d10 = staticinvoke <java.lang.Math: double pow(double,double)>($d9, $d8);

        $r1 = <com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackBarrierPriceFunction: com.opengamma.analytics.math.statistics.distribution.ProbabilityDistribution NORMAL>;

        $d11 = d7 * d2;

        $r2 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d11);

        $d12 = interfaceinvoke $r1.<com.opengamma.analytics.math.statistics.distribution.ProbabilityDistribution: double getCDF(java.lang.Object)>($r2);

        $d15 = $d10 * $d12;

        $d14 = d4 / d0;

        $d13 = d5 - d6;

        $d16 = staticinvoke <java.lang.Math: double pow(double,double)>($d14, $d13);

        $r3 = <com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackBarrierPriceFunction: com.opengamma.analytics.math.statistics.distribution.ProbabilityDistribution NORMAL>;

        $d17 = 2.0 * d6;

        $d18 = $d17 * d3;

        $d19 = d2 - $d18;

        $d20 = d7 * $d19;

        $r4 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d20);

        $d21 = interfaceinvoke $r3.<com.opengamma.analytics.math.statistics.distribution.ProbabilityDistribution: double getCDF(java.lang.Object)>($r4);

        $d22 = $d16 * $d21;

        $d23 = $d15 + $d22;

        $d24 = d1 * $d23;

        return $d24;
    }

    private double getFAdjoint(double, double, double, double, double, double, double, double, double[])
    {
        com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackBarrierPriceFunction r0;
        double d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, d10, d11, d12, d14, d15, d16, d17, d18, d19, $d20, $d21, $d22, $d23, $d24, $d25, $d26, $d27, $d28, $d29, $d30, $d31, $d32, $d33, $d34, $d35, $d36, $d37, $d38, $d39, $d40, $d41, $d42, $d43, $d44, $d45, $d46, $d47, $d48, $d49, $d50, $d51, $d52, $d53, $d54, $d55, $d56, $d57, $d58, $d59, $d60, $d61, $d62, $d63, $d64, $d65, $d66, $d67, $d68, $d69, $d70, $d71, $d72, $d73, $d74, $d75, $d76, $d77, $d78;
        double[] r1;
        com.opengamma.analytics.math.statistics.distribution.ProbabilityDistribution $r2, $r4, $r6, $r8;
        java.lang.Double $r3, $r5, $r7, $r9;

        r0 := @this: com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackBarrierPriceFunction;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        d2 := @parameter2: double;

        d3 := @parameter3: double;

        d4 := @parameter4: double;

        d5 := @parameter5: double;

        d6 := @parameter6: double;

        d7 := @parameter7: double;

        r1 := @parameter8: double[];

        $r2 = <com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackBarrierPriceFunction: com.opengamma.analytics.math.statistics.distribution.ProbabilityDistribution NORMAL>;

        $d20 = d7 * d2;

        $r3 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d20);

        d8 = interfaceinvoke $r2.<com.opengamma.analytics.math.statistics.distribution.ProbabilityDistribution: double getCDF(java.lang.Object)>($r3);

        $r4 = <com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackBarrierPriceFunction: com.opengamma.analytics.math.statistics.distribution.ProbabilityDistribution NORMAL>;

        $d21 = 2.0 * d6;

        $d22 = $d21 * d3;

        $d23 = d2 - $d22;

        $d24 = d7 * $d23;

        $r5 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d24);

        d9 = interfaceinvoke $r4.<com.opengamma.analytics.math.statistics.distribution.ProbabilityDistribution: double getCDF(java.lang.Object)>($r5);

        $d26 = d4 / d0;

        $d25 = d5 + d6;

        d10 = staticinvoke <java.lang.Math: double pow(double,double)>($d26, $d25);

        $d28 = d4 / d0;

        $d27 = d5 - d6;

        d11 = staticinvoke <java.lang.Math: double pow(double,double)>($d28, $d27);

        $d30 = d10 * d8;

        $d29 = d11 * d9;

        $d31 = $d30 + $d29;

        d12 = d1 * $d31;

        $r6 = <com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackBarrierPriceFunction: com.opengamma.analytics.math.statistics.distribution.ProbabilityDistribution NORMAL>;

        $d32 = d7 * d2;

        $r7 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d32);

        d14 = interfaceinvoke $r6.<com.opengamma.analytics.math.statistics.distribution.ProbabilityDistribution: double getPDF(java.lang.Object)>($r7);

        $r8 = <com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackBarrierPriceFunction: com.opengamma.analytics.math.statistics.distribution.ProbabilityDistribution NORMAL>;

        $d33 = 2.0 * d6;

        $d34 = $d33 * d3;

        $d35 = d2 - $d34;

        $d36 = d7 * $d35;

        $r9 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d36);

        d15 = interfaceinvoke $r8.<com.opengamma.analytics.math.statistics.distribution.ProbabilityDistribution: double getPDF(java.lang.Object)>($r9);

        $d37 = d1 * d8;

        d16 = $d37 * 1.0;

        $d38 = d1 * d9;

        d17 = $d38 * 1.0;

        $d39 = d1 * d11;

        d18 = $d39 * 1.0;

        $d40 = d1 * d10;

        d19 = $d40 * 1.0;

        $d41 = d5 + d6;

        $d42 = neg $d41;

        $d43 = $d42 * d10;

        $d44 = $d43 / d0;

        $d49 = $d44 * d16;

        $d45 = d5 - d6;

        $d46 = $d45 * d11;

        $d47 = $d46 / d0;

        $d48 = $d47 * d17;

        $d50 = $d49 - $d48;

        r1[0] = $d50;

        $d51 = d14 * d7;

        $d54 = $d51 * d19;

        $d52 = d15 * d7;

        $d53 = $d52 * d18;

        $d55 = $d54 + $d53;

        r1[1] = $d55;

        $d56 = neg d15;

        $d57 = $d56 * d7;

        $d58 = $d57 * 2.0;

        $d59 = $d58 * d6;

        $d60 = $d59 * d18;

        r1[2] = $d60;

        $d61 = d4 / d0;

        $d62 = staticinvoke <java.lang.Math: double log(double)>($d61);

        $d63 = d10 * $d62;

        $d65 = $d63 * d16;

        $d64 = d4 / d0;

        $d66 = staticinvoke <java.lang.Math: double log(double)>($d64);

        $d67 = d11 * $d66;

        $d68 = $d67 * d17;

        $d69 = $d65 + $d68;

        r1[3] = $d69;

        $d70 = d4 / d0;

        $d71 = staticinvoke <java.lang.Math: double log(double)>($d70);

        $d72 = d10 * $d71;

        $d74 = $d72 * d16;

        $d73 = d4 / d0;

        $d75 = staticinvoke <java.lang.Math: double log(double)>($d73);

        $d76 = d11 * $d75;

        $d77 = $d76 * d17;

        $d78 = $d74 - $d77;

        r1[4] = $d78;

        return d12;
    }

    static void <clinit>()
    {
        com.opengamma.analytics.math.statistics.distribution.NormalDistribution $r0;
        com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackBarrierPriceFunction $r1;

        $r0 = new com.opengamma.analytics.math.statistics.distribution.NormalDistribution;

        specialinvoke $r0.<com.opengamma.analytics.math.statistics.distribution.NormalDistribution: void <init>(double,double)>(0.0, 1.0);

        <com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackBarrierPriceFunction: com.opengamma.analytics.math.statistics.distribution.ProbabilityDistribution NORMAL> = $r0;

        $r1 = new com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackBarrierPriceFunction;

        specialinvoke $r1.<com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackBarrierPriceFunction: void <init>()>();

        <com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackBarrierPriceFunction: com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackBarrierPriceFunction INSTANCE> = $r1;

        return;
    }
}
