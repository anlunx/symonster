public class com.opengamma.analytics.financial.credit.isdastandardmodel.SimpleCreditCurveBuilder extends com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantCreditCurveBuilder
{
    private static final com.opengamma.analytics.math.rootfinding.BracketRoot BRACKER;
    private static final com.opengamma.analytics.math.rootfinding.RealSingleRootFinder ROOTFINDER;
    private final com.opengamma.analytics.financial.credit.isdastandardmodel.AnalyticCDSPricer _pricer;

    public void <init>()
    {
        com.opengamma.analytics.financial.credit.isdastandardmodel.SimpleCreditCurveBuilder r0;
        com.opengamma.analytics.financial.credit.isdastandardmodel.AnalyticCDSPricer $r1;

        r0 := @this: com.opengamma.analytics.financial.credit.isdastandardmodel.SimpleCreditCurveBuilder;

        specialinvoke r0.<com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantCreditCurveBuilder: void <init>()>();

        $r1 = new com.opengamma.analytics.financial.credit.isdastandardmodel.AnalyticCDSPricer;

        specialinvoke $r1.<com.opengamma.analytics.financial.credit.isdastandardmodel.AnalyticCDSPricer: void <init>()>();

        r0.<com.opengamma.analytics.financial.credit.isdastandardmodel.SimpleCreditCurveBuilder: com.opengamma.analytics.financial.credit.isdastandardmodel.AnalyticCDSPricer _pricer> = $r1;

        return;
    }

    public void <init>(com.opengamma.analytics.financial.credit.isdastandardmodel.AccrualOnDefaultFormulae)
    {
        com.opengamma.analytics.financial.credit.isdastandardmodel.SimpleCreditCurveBuilder r0;
        com.opengamma.analytics.financial.credit.isdastandardmodel.AccrualOnDefaultFormulae r1;
        com.opengamma.analytics.financial.credit.isdastandardmodel.AnalyticCDSPricer $r2;

        r0 := @this: com.opengamma.analytics.financial.credit.isdastandardmodel.SimpleCreditCurveBuilder;

        r1 := @parameter0: com.opengamma.analytics.financial.credit.isdastandardmodel.AccrualOnDefaultFormulae;

        specialinvoke r0.<com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantCreditCurveBuilder: void <init>(com.opengamma.analytics.financial.credit.isdastandardmodel.AccrualOnDefaultFormulae)>(r1);

        $r2 = new com.opengamma.analytics.financial.credit.isdastandardmodel.AnalyticCDSPricer;

        specialinvoke $r2.<com.opengamma.analytics.financial.credit.isdastandardmodel.AnalyticCDSPricer: void <init>(com.opengamma.analytics.financial.credit.isdastandardmodel.AccrualOnDefaultFormulae)>(r1);

        r0.<com.opengamma.analytics.financial.credit.isdastandardmodel.SimpleCreditCurveBuilder: com.opengamma.analytics.financial.credit.isdastandardmodel.AnalyticCDSPricer _pricer> = $r2;

        return;
    }

    public com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantCreditCurve calibrateCreditCurve(com.opengamma.analytics.financial.credit.isdastandardmodel.CDSAnalytic, double, com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantYieldCurve, double)
    {
        com.opengamma.analytics.financial.credit.isdastandardmodel.SimpleCreditCurveBuilder r0;
        com.opengamma.analytics.financial.credit.isdastandardmodel.CDSAnalytic r1;
        double d0, d1;
        com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantYieldCurve r2;
        com.opengamma.analytics.financial.credit.isdastandardmodel.CDSAnalytic[] $r3;
        double[] $r4, $r5;
        com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantCreditCurve $r6;

        r0 := @this: com.opengamma.analytics.financial.credit.isdastandardmodel.SimpleCreditCurveBuilder;

        r1 := @parameter0: com.opengamma.analytics.financial.credit.isdastandardmodel.CDSAnalytic;

        d0 := @parameter1: double;

        r2 := @parameter2: com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantYieldCurve;

        d1 := @parameter3: double;

        $r3 = newarray (com.opengamma.analytics.financial.credit.isdastandardmodel.CDSAnalytic)[1];

        $r3[0] = r1;

        $r4 = newarray (double)[1];

        $r4[0] = d0;

        $r5 = newarray (double)[1];

        $r5[0] = d1;

        $r6 = virtualinvoke r0.<com.opengamma.analytics.financial.credit.isdastandardmodel.SimpleCreditCurveBuilder: com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantCreditCurve calibrateCreditCurve(com.opengamma.analytics.financial.credit.isdastandardmodel.CDSAnalytic[],double[],com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantYieldCurve,double[])>($r3, $r4, r2, $r5);

        return $r6;
    }

    public com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantCreditCurve calibrateCreditCurve(com.opengamma.analytics.financial.credit.isdastandardmodel.CDSAnalytic, double, com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantYieldCurve)
    {
        com.opengamma.analytics.financial.credit.isdastandardmodel.SimpleCreditCurveBuilder r0;
        com.opengamma.analytics.financial.credit.isdastandardmodel.CDSAnalytic r1;
        double d0;
        com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantYieldCurve r2;
        com.opengamma.analytics.financial.credit.isdastandardmodel.CDSAnalytic[] $r3;
        double[] $r4, $r5;
        com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantCreditCurve $r6;

        r0 := @this: com.opengamma.analytics.financial.credit.isdastandardmodel.SimpleCreditCurveBuilder;

        r1 := @parameter0: com.opengamma.analytics.financial.credit.isdastandardmodel.CDSAnalytic;

        d0 := @parameter1: double;

        r2 := @parameter2: com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantYieldCurve;

        $r3 = newarray (com.opengamma.analytics.financial.credit.isdastandardmodel.CDSAnalytic)[1];

        $r3[0] = r1;

        $r4 = newarray (double)[1];

        $r4[0] = d0;

        $r5 = newarray (double)[1];

        $r6 = virtualinvoke r0.<com.opengamma.analytics.financial.credit.isdastandardmodel.SimpleCreditCurveBuilder: com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantCreditCurve calibrateCreditCurve(com.opengamma.analytics.financial.credit.isdastandardmodel.CDSAnalytic[],double[],com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantYieldCurve,double[])>($r3, $r4, r2, $r5);

        return $r6;
    }

    public com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantCreditCurve calibrateCreditCurve(com.opengamma.analytics.financial.credit.isdastandardmodel.CDSAnalytic[], double[], com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantYieldCurve)
    {
        com.opengamma.analytics.financial.credit.isdastandardmodel.SimpleCreditCurveBuilder r0;
        com.opengamma.analytics.financial.credit.isdastandardmodel.CDSAnalytic[] r1;
        double[] r2, $r5;
        com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantYieldCurve r3;
        int i0;
        com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantCreditCurve $r6;

        r0 := @this: com.opengamma.analytics.financial.credit.isdastandardmodel.SimpleCreditCurveBuilder;

        r1 := @parameter0: com.opengamma.analytics.financial.credit.isdastandardmodel.CDSAnalytic[];

        r2 := @parameter1: double[];

        r3 := @parameter2: com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantYieldCurve;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "cds");

        i0 = lengthof r1;

        $r5 = newarray (double)[i0];

        $r6 = virtualinvoke r0.<com.opengamma.analytics.financial.credit.isdastandardmodel.SimpleCreditCurveBuilder: com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantCreditCurve calibrateCreditCurve(com.opengamma.analytics.financial.credit.isdastandardmodel.CDSAnalytic[],double[],com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantYieldCurve,double[])>(r1, r2, r3, $r5);

        return $r6;
    }

    public com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantCreditCurve calibrateCreditCurve(com.opengamma.analytics.financial.credit.isdastandardmodel.CDSAnalytic[], double[], com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantYieldCurve, double[])
    {
        com.opengamma.analytics.financial.credit.isdastandardmodel.SimpleCreditCurveBuilder r0;
        com.opengamma.analytics.financial.credit.isdastandardmodel.CDSAnalytic[] r1;
        double[] r2, r4, r5, r7, r25;
        com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantYieldCurve r3;
        int i0, $i1, $i3, i5, i6, i7;
        double d0, d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16;
        com.opengamma.analytics.financial.credit.isdastandardmodel.CDSAnalytic $r11, $r14, $r20, $r21, $r22, $r23, $r24;
        com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantCreditCurve $r12, r26;
        com.opengamma.analytics.financial.credit.isdastandardmodel.SimpleCreditCurveBuilder$CDSPricer $r13;
        com.opengamma.analytics.math.rootfinding.BracketRoot $r15;
        com.opengamma.analytics.math.rootfinding.RealSingleRootFinder $r16;
        java.lang.Double $r17, $r18, $r19;
        byte $b2, $b4;
        boolean $z0, $z1, $z2;

        r0 := @this: com.opengamma.analytics.financial.credit.isdastandardmodel.SimpleCreditCurveBuilder;

        r1 := @parameter0: com.opengamma.analytics.financial.credit.isdastandardmodel.CDSAnalytic[];

        r2 := @parameter1: double[];

        r3 := @parameter2: com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantYieldCurve;

        r4 := @parameter3: double[];

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object[] noNulls(java.lang.Object[],java.lang.String)>(r1, "cds");

        staticinvoke <com.opengamma.util.ArgumentChecker: double[] notEmpty(double[],java.lang.String)>(r2, "empty fractionalSpreads");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r3, "null yieldCurve");

        i0 = lengthof r1;

        $i1 = lengthof r2;

        if i0 != $i1 goto label01;

        $z0 = 1;

        goto label02;

     label01:
        $z0 = 0;

     label02:
        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z0, "Number of CDSs does not match number of spreads");

        $r11 = r1[0];

        d0 = virtualinvoke $r11.<com.opengamma.analytics.financial.credit.isdastandardmodel.CDSAnalytic: double getEffectiveProtectionStart()>();

        i5 = 1;

     label03:
        if i5 >= i0 goto label08;

        $r22 = r1[i5];

        $d14 = virtualinvoke $r22.<com.opengamma.analytics.financial.credit.isdastandardmodel.CDSAnalytic: double getEffectiveProtectionStart()>();

        $b2 = d0 cmpl $d14;

        if $b2 != 0 goto label04;

        $z1 = 1;

        goto label05;

     label04:
        $z1 = 0;

     label05:
        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z1, "all CDSs must has same protection start");

        $r23 = r1[i5];

        $d15 = virtualinvoke $r23.<com.opengamma.analytics.financial.credit.isdastandardmodel.CDSAnalytic: double getProtectionEnd()>();

        $i3 = i5 - 1;

        $r24 = r1[$i3];

        $d16 = virtualinvoke $r24.<com.opengamma.analytics.financial.credit.isdastandardmodel.CDSAnalytic: double getProtectionEnd()>();

        $b4 = $d15 cmpl $d16;

        if $b4 <= 0 goto label06;

        $z2 = 1;

        goto label07;

     label06:
        $z2 = 0;

     label07:
        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z2, "protection end must be ascending");

        i5 = i5 + 1;

        goto label03;

     label08:
        r25 = newarray (double)[i0];

        r5 = newarray (double)[i0];

        i6 = 0;

     label09:
        if i6 >= i0 goto label10;

        $d10 = r2[i6];

        $r20 = r1[i6];

        $d11 = virtualinvoke $r20.<com.opengamma.analytics.financial.credit.isdastandardmodel.CDSAnalytic: double getLGD()>();

        $d12 = $d10 / $d11;

        r25[i6] = $d12;

        $r21 = r1[i6];

        $d13 = virtualinvoke $r21.<com.opengamma.analytics.financial.credit.isdastandardmodel.CDSAnalytic: double getProtectionEnd()>();

        r5[i6] = $d13;

        i6 = i6 + 1;

        goto label09;

     label10:
        $r12 = new com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantCreditCurve;

        specialinvoke $r12.<com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantCreditCurve: void <init>(double[],double[])>(r5, r25);

        r26 = $r12;

        i7 = 0;

     label11:
        if i7 >= i0 goto label12;

        $r13 = new com.opengamma.analytics.financial.credit.isdastandardmodel.SimpleCreditCurveBuilder$CDSPricer;

        $r14 = r1[i7];

        $d3 = r2[i7];

        $d2 = r4[i7];

        specialinvoke $r13.<com.opengamma.analytics.financial.credit.isdastandardmodel.SimpleCreditCurveBuilder$CDSPricer: void <init>(com.opengamma.analytics.financial.credit.isdastandardmodel.SimpleCreditCurveBuilder,int,com.opengamma.analytics.financial.credit.isdastandardmodel.CDSAnalytic,double,com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantCreditCurve,com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantYieldCurve,double)>(r0, i7, $r14, $d3, r26, r3, $d2);

        $r15 = <com.opengamma.analytics.financial.credit.isdastandardmodel.SimpleCreditCurveBuilder: com.opengamma.analytics.math.rootfinding.BracketRoot BRACKER>;

        $d4 = r25[i7];

        $d7 = 0.8 * $d4;

        $d5 = r25[i7];

        $d6 = 1.25 * $d5;

        r7 = virtualinvoke $r15.<com.opengamma.analytics.math.rootfinding.BracketRoot: double[] getBracketedPoints(com.opengamma.analytics.math.function.Function1D,double,double,double,double)>($r13, $d7, $d6, 0.0, #Infinity);

        $r16 = <com.opengamma.analytics.financial.credit.isdastandardmodel.SimpleCreditCurveBuilder: com.opengamma.analytics.math.rootfinding.RealSingleRootFinder ROOTFINDER>;

        $d8 = r7[0];

        $r17 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d8);

        $d9 = r7[1];

        $r18 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d9);

        $r19 = virtualinvoke $r16.<com.opengamma.analytics.math.rootfinding.RealSingleRootFinder: java.lang.Double getRoot(com.opengamma.analytics.math.function.Function1D,java.lang.Double,java.lang.Double)>($r13, $r17, $r18);

        d1 = virtualinvoke $r19.<java.lang.Double: double doubleValue()>();

        r26 = virtualinvoke r26.<com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantCreditCurve: com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantCreditCurve withRate(double,int)>(d1, i7);

        i7 = i7 + 1;

        goto label11;

     label12:
        return r26;
    }

    public com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantCreditCurve calibrateCreditCurve(org.threeten.bp.LocalDate, org.threeten.bp.LocalDate, org.threeten.bp.LocalDate, org.threeten.bp.LocalDate, org.threeten.bp.LocalDate, double, boolean, org.threeten.bp.Period, com.opengamma.analytics.financial.credit.isdastandardmodel.StubType, boolean, com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantYieldCurve, double)
    {
        com.opengamma.analytics.financial.credit.isdastandardmodel.SimpleCreditCurveBuilder r0;
        org.threeten.bp.LocalDate r1, r2, r3, r4, r5;
        double d0, d1;
        boolean z0, z1;
        org.threeten.bp.Period r6;
        com.opengamma.analytics.financial.credit.isdastandardmodel.StubType r7;
        com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantYieldCurve r8;
        org.threeten.bp.LocalDate[] $r9;
        double[] $r10;
        com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantCreditCurve $r11;

        r0 := @this: com.opengamma.analytics.financial.credit.isdastandardmodel.SimpleCreditCurveBuilder;

        r1 := @parameter0: org.threeten.bp.LocalDate;

        r2 := @parameter1: org.threeten.bp.LocalDate;

        r3 := @parameter2: org.threeten.bp.LocalDate;

        r4 := @parameter3: org.threeten.bp.LocalDate;

        r5 := @parameter4: org.threeten.bp.LocalDate;

        d0 := @parameter5: double;

        z0 := @parameter6: boolean;

        r6 := @parameter7: org.threeten.bp.Period;

        r7 := @parameter8: com.opengamma.analytics.financial.credit.isdastandardmodel.StubType;

        z1 := @parameter9: boolean;

        r8 := @parameter10: com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantYieldCurve;

        d1 := @parameter11: double;

        $r9 = newarray (org.threeten.bp.LocalDate)[1];

        $r9[0] = r5;

        $r10 = newarray (double)[1];

        $r10[0] = d0;

        $r11 = virtualinvoke r0.<com.opengamma.analytics.financial.credit.isdastandardmodel.SimpleCreditCurveBuilder: com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantCreditCurve calibrateCreditCurve(org.threeten.bp.LocalDate,org.threeten.bp.LocalDate,org.threeten.bp.LocalDate,org.threeten.bp.LocalDate,org.threeten.bp.LocalDate[],double[],boolean,org.threeten.bp.Period,com.opengamma.analytics.financial.credit.isdastandardmodel.StubType,boolean,com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantYieldCurve,double)>(r1, r2, r3, r4, $r9, $r10, z0, r6, r7, z1, r8, d1);

        return $r11;
    }

    public com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantCreditCurve calibrateCreditCurve(org.threeten.bp.LocalDate, org.threeten.bp.LocalDate, org.threeten.bp.LocalDate, org.threeten.bp.LocalDate, org.threeten.bp.LocalDate[], double[], boolean, org.threeten.bp.Period, com.opengamma.analytics.financial.credit.isdastandardmodel.StubType, boolean, com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantYieldCurve, double)
    {
        com.opengamma.analytics.financial.credit.isdastandardmodel.SimpleCreditCurveBuilder r0;
        org.threeten.bp.LocalDate r1, r2, r3, r4, $r22;
        org.threeten.bp.LocalDate[] r5;
        double[] r6;
        boolean z0, z1, $z3, $z4, $z5;
        org.threeten.bp.Period r7;
        com.opengamma.analytics.financial.credit.isdastandardmodel.StubType r8;
        com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantYieldCurve r9;
        double d0;
        int i0, $i1, i2;
        com.opengamma.analytics.financial.credit.isdastandardmodel.CDSAnalytic[] r10;
        com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantCreditCurve $r20;
        com.opengamma.analytics.financial.credit.isdastandardmodel.CDSAnalytic $r21;

        r0 := @this: com.opengamma.analytics.financial.credit.isdastandardmodel.SimpleCreditCurveBuilder;

        r1 := @parameter0: org.threeten.bp.LocalDate;

        r2 := @parameter1: org.threeten.bp.LocalDate;

        r3 := @parameter2: org.threeten.bp.LocalDate;

        r4 := @parameter3: org.threeten.bp.LocalDate;

        r5 := @parameter4: org.threeten.bp.LocalDate[];

        r6 := @parameter5: double[];

        z0 := @parameter6: boolean;

        r7 := @parameter7: org.threeten.bp.Period;

        r8 := @parameter8: com.opengamma.analytics.financial.credit.isdastandardmodel.StubType;

        z1 := @parameter9: boolean;

        r9 := @parameter10: com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantYieldCurve;

        d0 := @parameter11: double;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "null today");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, "null stepinDate");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r3, "null valueDate");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r4, "null startDate");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object[] noNulls(java.lang.Object[],java.lang.String)>(r5, "null endDates");

        staticinvoke <com.opengamma.util.ArgumentChecker: double[] notEmpty(double[],java.lang.String)>(r6, "no or null couponRates");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r7, "null tenor");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r8, "null stubType");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r9, "null yieldCurve");

        staticinvoke <com.opengamma.util.ArgumentChecker: boolean isInRangeExcludingHigh(double,double,double)>(0.0, 1.0, d0);

        $z3 = virtualinvoke r3.<org.threeten.bp.LocalDate: boolean isBefore(org.threeten.bp.chrono.ChronoLocalDate)>(r1);

        staticinvoke <com.opengamma.util.ArgumentChecker: void isFalse(boolean,java.lang.String)>($z3, "Require valueDate >= today");

        $z4 = virtualinvoke r2.<org.threeten.bp.LocalDate: boolean isBefore(org.threeten.bp.chrono.ChronoLocalDate)>(r1);

        staticinvoke <com.opengamma.util.ArgumentChecker: void isFalse(boolean,java.lang.String)>($z4, "Require stepin >= today");

        i0 = lengthof r5;

        $i1 = lengthof r6;

        if i0 != $i1 goto label1;

        $z5 = 1;

        goto label2;

     label1:
        $z5 = 0;

     label2:
        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z5, "length of couponRates does not match endDates");

        r10 = newarray (com.opengamma.analytics.financial.credit.isdastandardmodel.CDSAnalytic)[i0];

        i2 = 0;

     label3:
        if i2 >= i0 goto label4;

        $r21 = new com.opengamma.analytics.financial.credit.isdastandardmodel.CDSAnalytic;

        $r22 = r5[i2];

        specialinvoke $r21.<com.opengamma.analytics.financial.credit.isdastandardmodel.CDSAnalytic: void <init>(org.threeten.bp.LocalDate,org.threeten.bp.LocalDate,org.threeten.bp.LocalDate,org.threeten.bp.LocalDate,org.threeten.bp.LocalDate,boolean,org.threeten.bp.Period,com.opengamma.analytics.financial.credit.isdastandardmodel.StubType,boolean,double)>(r1, r2, r3, r4, $r22, z0, r7, r8, z1, d0);

        r10[i2] = $r21;

        i2 = i2 + 1;

        goto label3;

     label4:
        $r20 = virtualinvoke r0.<com.opengamma.analytics.financial.credit.isdastandardmodel.SimpleCreditCurveBuilder: com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantCreditCurve calibrateCreditCurve(com.opengamma.analytics.financial.credit.isdastandardmodel.CDSAnalytic[],double[],com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantYieldCurve)>(r10, r6, r9);

        return $r20;
    }

    public com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantCreditCurve calibrateCreditCurve(com.opengamma.analytics.financial.credit.isdastandardmodel.CDSAnalytic, com.opengamma.analytics.financial.credit.isdastandardmodel.CDSQuoteConvention, com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantYieldCurve)
    {
        com.opengamma.analytics.financial.credit.isdastandardmodel.SimpleCreditCurveBuilder r0;
        com.opengamma.analytics.financial.credit.isdastandardmodel.CDSAnalytic r1;
        com.opengamma.analytics.financial.credit.isdastandardmodel.CDSQuoteConvention r2;
        com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantYieldCurve r3;
        com.opengamma.analytics.financial.credit.isdastandardmodel.PointsUpFront r4;
        boolean $z0, $z1, $z2;
        java.lang.IllegalArgumentException $r5;
        java.lang.StringBuilder $r6, $r7, $r9;
        java.lang.Class $r8;
        java.lang.String $r10;
        com.opengamma.analytics.financial.credit.isdastandardmodel.QuotedSpread $r11;
        double d0, d1;
        com.opengamma.analytics.financial.credit.isdastandardmodel.CDSAnalytic[] $r12;
        double[] $r13, $r14;
        com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantCreditCurve $r15;

        r0 := @this: com.opengamma.analytics.financial.credit.isdastandardmodel.SimpleCreditCurveBuilder;

        r1 := @parameter0: com.opengamma.analytics.financial.credit.isdastandardmodel.CDSAnalytic;

        r2 := @parameter1: com.opengamma.analytics.financial.credit.isdastandardmodel.CDSQuoteConvention;

        r3 := @parameter2: com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantYieldCurve;

        $z0 = r2 instanceof com.opengamma.analytics.financial.credit.isdastandardmodel.ParSpread;

        if $z0 == 0 goto label1;

        d0 = 0.0;

        d1 = interfaceinvoke r2.<com.opengamma.analytics.financial.credit.isdastandardmodel.CDSQuoteConvention: double getCoupon()>();

        goto label4;

     label1:
        $z1 = r2 instanceof com.opengamma.analytics.financial.credit.isdastandardmodel.QuotedSpread;

        if $z1 == 0 goto label2;

        d0 = 0.0;

        $r11 = (com.opengamma.analytics.financial.credit.isdastandardmodel.QuotedSpread) r2;

        d1 = virtualinvoke $r11.<com.opengamma.analytics.financial.credit.isdastandardmodel.QuotedSpread: double getQuotedSpread()>();

        goto label4;

     label2:
        $z2 = r2 instanceof com.opengamma.analytics.financial.credit.isdastandardmodel.PointsUpFront;

        if $z2 == 0 goto label3;

        r4 = (com.opengamma.analytics.financial.credit.isdastandardmodel.PointsUpFront) r2;

        d0 = virtualinvoke r4.<com.opengamma.analytics.financial.credit.isdastandardmodel.PointsUpFront: double getPointsUpFront()>();

        d1 = virtualinvoke r4.<com.opengamma.analytics.financial.credit.isdastandardmodel.PointsUpFront: double getCoupon()>();

        goto label4;

     label3:
        $r5 = new java.lang.IllegalArgumentException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown CDSQuoteConvention type ");

        $r8 = virtualinvoke r2.<java.lang.Object: java.lang.Class getClass()>();

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r10);

        throw $r5;

     label4:
        $r12 = newarray (com.opengamma.analytics.financial.credit.isdastandardmodel.CDSAnalytic)[1];

        $r12[0] = r1;

        $r13 = newarray (double)[1];

        $r13[0] = d1;

        $r14 = newarray (double)[1];

        $r14[0] = d0;

        $r15 = virtualinvoke r0.<com.opengamma.analytics.financial.credit.isdastandardmodel.SimpleCreditCurveBuilder: com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantCreditCurve calibrateCreditCurve(com.opengamma.analytics.financial.credit.isdastandardmodel.CDSAnalytic[],double[],com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantYieldCurve,double[])>($r12, $r13, r3, $r14);

        return $r15;
    }

    public com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantCreditCurve calibrateCreditCurve(com.opengamma.analytics.financial.credit.isdastandardmodel.CDSAnalytic[], com.opengamma.analytics.financial.credit.isdastandardmodel.CDSQuoteConvention[], com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantYieldCurve)
    {
        com.opengamma.analytics.financial.credit.isdastandardmodel.SimpleCreditCurveBuilder r0;
        com.opengamma.analytics.financial.credit.isdastandardmodel.CDSAnalytic[] r1;
        com.opengamma.analytics.financial.credit.isdastandardmodel.CDSQuoteConvention[] r2;
        com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantYieldCurve r3;
        org.apache.commons.lang.NotImplementedException $r4;

        r0 := @this: com.opengamma.analytics.financial.credit.isdastandardmodel.SimpleCreditCurveBuilder;

        r1 := @parameter0: com.opengamma.analytics.financial.credit.isdastandardmodel.CDSAnalytic[];

        r2 := @parameter1: com.opengamma.analytics.financial.credit.isdastandardmodel.CDSQuoteConvention[];

        r3 := @parameter2: com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantYieldCurve;

        $r4 = new org.apache.commons.lang.NotImplementedException;

        specialinvoke $r4.<org.apache.commons.lang.NotImplementedException: void <init>()>();

        throw $r4;
    }

    static com.opengamma.analytics.financial.credit.isdastandardmodel.AnalyticCDSPricer access$000(com.opengamma.analytics.financial.credit.isdastandardmodel.SimpleCreditCurveBuilder)
    {
        com.opengamma.analytics.financial.credit.isdastandardmodel.SimpleCreditCurveBuilder r0;
        com.opengamma.analytics.financial.credit.isdastandardmodel.AnalyticCDSPricer $r1;

        r0 := @parameter0: com.opengamma.analytics.financial.credit.isdastandardmodel.SimpleCreditCurveBuilder;

        $r1 = r0.<com.opengamma.analytics.financial.credit.isdastandardmodel.SimpleCreditCurveBuilder: com.opengamma.analytics.financial.credit.isdastandardmodel.AnalyticCDSPricer _pricer>;

        return $r1;
    }

    static void <clinit>()
    {
        com.opengamma.analytics.math.rootfinding.BracketRoot $r0;
        com.opengamma.analytics.math.rootfinding.BrentSingleRootFinder $r1;

        $r0 = new com.opengamma.analytics.math.rootfinding.BracketRoot;

        specialinvoke $r0.<com.opengamma.analytics.math.rootfinding.BracketRoot: void <init>()>();

        <com.opengamma.analytics.financial.credit.isdastandardmodel.SimpleCreditCurveBuilder: com.opengamma.analytics.math.rootfinding.BracketRoot BRACKER> = $r0;

        $r1 = new com.opengamma.analytics.math.rootfinding.BrentSingleRootFinder;

        specialinvoke $r1.<com.opengamma.analytics.math.rootfinding.BrentSingleRootFinder: void <init>()>();

        <com.opengamma.analytics.financial.credit.isdastandardmodel.SimpleCreditCurveBuilder: com.opengamma.analytics.math.rootfinding.RealSingleRootFinder ROOTFINDER> = $r1;

        return;
    }
}
