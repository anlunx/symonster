class org.apache.commons.math3.analysis.FunctionUtils$14$1 extends java.lang.Object implements org.apache.commons.math3.analysis.UnivariateFunction
{
    final org.apache.commons.math3.analysis.FunctionUtils$14 this$0;

    void <init>(org.apache.commons.math3.analysis.FunctionUtils$14)
    {
        org.apache.commons.math3.analysis.FunctionUtils$14$1 r0;
        org.apache.commons.math3.analysis.FunctionUtils$14 r1;

        r0 := @this: org.apache.commons.math3.analysis.FunctionUtils$14$1;

        r1 := @parameter0: org.apache.commons.math3.analysis.FunctionUtils$14;

        r0.<org.apache.commons.math3.analysis.FunctionUtils$14$1: org.apache.commons.math3.analysis.FunctionUtils$14 this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public double value(double)
    {
        org.apache.commons.math3.analysis.FunctionUtils$14$1 r0;
        double d0, $d1;
        org.apache.commons.math3.analysis.FunctionUtils$14 $r1;
        org.apache.commons.math3.analysis.differentiation.DerivativeStructure $r2, $r4;
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiableFunction $r3;
        int[] $r5;

        r0 := @this: org.apache.commons.math3.analysis.FunctionUtils$14$1;

        d0 := @parameter0: double;

        $r1 = r0.<org.apache.commons.math3.analysis.FunctionUtils$14$1: org.apache.commons.math3.analysis.FunctionUtils$14 this$0>;

        $r3 = $r1.<org.apache.commons.math3.analysis.FunctionUtils$14: org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiableFunction val$f>;

        $r2 = new org.apache.commons.math3.analysis.differentiation.DerivativeStructure;

        specialinvoke $r2.<org.apache.commons.math3.analysis.differentiation.DerivativeStructure: void <init>(int,int,int,double)>(1, 1, 0, d0);

        $r4 = interfaceinvoke $r3.<org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiableFunction: org.apache.commons.math3.analysis.differentiation.DerivativeStructure value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure)>($r2);

        $r5 = newarray (int)[1];

        $r5[0] = 1;

        $d1 = virtualinvoke $r4.<org.apache.commons.math3.analysis.differentiation.DerivativeStructure: double getPartialDerivative(int[])>($r5);

        return $d1;
    }
}
