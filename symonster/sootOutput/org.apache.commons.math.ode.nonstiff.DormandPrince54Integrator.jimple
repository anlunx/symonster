public class org.apache.commons.math.ode.nonstiff.DormandPrince54Integrator extends org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator
{
    private static final java.lang.String METHOD_NAME;
    private static final double[] STATIC_C;
    private static final double[][] STATIC_A;
    private static final double[] STATIC_B;
    private static final double E1;
    private static final double E3;
    private static final double E4;
    private static final double E5;
    private static final double E6;
    private static final double E7;

    public void <init>(double, double, double, double)
    {
        org.apache.commons.math.ode.nonstiff.DormandPrince54Integrator r0;
        double d0, d1, d2, d3;
        org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolator $r1;
        double[] $r2, $r4;
        double[][] $r3;

        r0 := @this: org.apache.commons.math.ode.nonstiff.DormandPrince54Integrator;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        d2 := @parameter2: double;

        d3 := @parameter3: double;

        $r2 = <org.apache.commons.math.ode.nonstiff.DormandPrince54Integrator: double[] STATIC_C>;

        $r3 = <org.apache.commons.math.ode.nonstiff.DormandPrince54Integrator: double[][] STATIC_A>;

        $r4 = <org.apache.commons.math.ode.nonstiff.DormandPrince54Integrator: double[] STATIC_B>;

        $r1 = new org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolator;

        specialinvoke $r1.<org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolator: void <init>()>();

        specialinvoke r0.<org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator: void <init>(java.lang.String,boolean,double[],double[][],double[],org.apache.commons.math.ode.nonstiff.RungeKuttaStepInterpolator,double,double,double,double)>("Dormand-Prince 5(4)", 1, $r2, $r3, $r4, $r1, d0, d1, d2, d3);

        return;
    }

    public void <init>(double, double, double[], double[])
    {
        org.apache.commons.math.ode.nonstiff.DormandPrince54Integrator r0;
        double d0, d1;
        double[] r1, r2, $r4, $r6;
        org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolator $r3;
        double[][] $r5;

        r0 := @this: org.apache.commons.math.ode.nonstiff.DormandPrince54Integrator;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        r1 := @parameter2: double[];

        r2 := @parameter3: double[];

        $r4 = <org.apache.commons.math.ode.nonstiff.DormandPrince54Integrator: double[] STATIC_C>;

        $r5 = <org.apache.commons.math.ode.nonstiff.DormandPrince54Integrator: double[][] STATIC_A>;

        $r6 = <org.apache.commons.math.ode.nonstiff.DormandPrince54Integrator: double[] STATIC_B>;

        $r3 = new org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolator;

        specialinvoke $r3.<org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolator: void <init>()>();

        specialinvoke r0.<org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator: void <init>(java.lang.String,boolean,double[],double[][],double[],org.apache.commons.math.ode.nonstiff.RungeKuttaStepInterpolator,double,double,double[],double[])>("Dormand-Prince 5(4)", 1, $r4, $r5, $r6, $r3, d0, d1, r1, r2);

        return;
    }

    public int getOrder()
    {
        org.apache.commons.math.ode.nonstiff.DormandPrince54Integrator r0;

        r0 := @this: org.apache.commons.math.ode.nonstiff.DormandPrince54Integrator;

        return 5;
    }

    protected double estimateError(double[][], double[], double[], double)
    {
        org.apache.commons.math.ode.nonstiff.DormandPrince54Integrator r0;
        double[][] r1;
        double[] r2, r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12;
        double d0, d1, d2, d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21, $d22, $d23, $d24, $d25, $d26, $d27, $d28, $d29, $d30, $d31, $d32, $d33, $d34, $d35, d36, $d37;
        int $i0, $i1, i2;

        r0 := @this: org.apache.commons.math.ode.nonstiff.DormandPrince54Integrator;

        r1 := @parameter0: double[][];

        r2 := @parameter1: double[];

        r3 := @parameter2: double[];

        d0 := @parameter3: double;

        d36 = 0.0;

        i2 = 0;

     label1:
        $i0 = r0.<org.apache.commons.math.ode.nonstiff.DormandPrince54Integrator: int mainSetDimension>;

        if i2 >= $i0 goto label4;

        $r4 = r1[0];

        $d8 = $r4[i2];

        $d11 = 0.0012326388888888888 * $d8;

        $r5 = r1[2];

        $d9 = $r5[i2];

        $d10 = -0.0042527702905061394 * $d9;

        $d14 = $d11 + $d10;

        $r6 = r1[3];

        $d12 = $r6[i2];

        $d13 = 0.03697916666666667 * $d12;

        $d17 = $d14 + $d13;

        $r7 = r1[4];

        $d15 = $r7[i2];

        $d16 = -0.05086379716981132 * $d15;

        $d20 = $d17 + $d16;

        $r8 = r1[5];

        $d18 = $r8[i2];

        $d19 = 0.0419047619047619 * $d18;

        $d23 = $d20 + $d19;

        $r9 = r1[6];

        $d21 = $r9[i2];

        $d22 = -0.025 * $d21;

        d1 = $d23 + $d22;

        $d24 = r2[i2];

        $d25 = staticinvoke <org.apache.commons.math.util.FastMath: double abs(double)>($d24);

        $d26 = r3[i2];

        $d27 = staticinvoke <org.apache.commons.math.util.FastMath: double abs(double)>($d26);

        d2 = staticinvoke <org.apache.commons.math.util.FastMath: double max(double,double)>($d25, $d27);

        $r10 = r0.<org.apache.commons.math.ode.nonstiff.DormandPrince54Integrator: double[] vecAbsoluteTolerance>;

        if $r10 != null goto label2;

        $d35 = r0.<org.apache.commons.math.ode.nonstiff.DormandPrince54Integrator: double scalAbsoluteTolerance>;

        $d33 = r0.<org.apache.commons.math.ode.nonstiff.DormandPrince54Integrator: double scalRelativeTolerance>;

        $d34 = $d33 * d2;

        $d37 = $d35 + $d34;

        goto label3;

     label2:
        $r11 = r0.<org.apache.commons.math.ode.nonstiff.DormandPrince54Integrator: double[] vecAbsoluteTolerance>;

        $d30 = $r11[i2];

        $r12 = r0.<org.apache.commons.math.ode.nonstiff.DormandPrince54Integrator: double[] vecRelativeTolerance>;

        $d28 = $r12[i2];

        $d29 = $d28 * d2;

        $d37 = $d30 + $d29;

     label3:
        $d31 = d0 * d1;

        d4 = $d31 / $d37;

        $d32 = d4 * d4;

        d36 = d36 + $d32;

        i2 = i2 + 1;

        goto label1;

     label4:
        $i1 = r0.<org.apache.commons.math.ode.nonstiff.DormandPrince54Integrator: int mainSetDimension>;

        $d5 = (double) $i1;

        $d6 = d36 / $d5;

        $d7 = staticinvoke <org.apache.commons.math.util.FastMath: double sqrt(double)>($d6);

        return $d7;
    }

    static void <clinit>()
    {
        double[] $r0, $r2, $r3, $r4, $r5, $r6, $r7, $r8;
        double[][] $r1;

        <org.apache.commons.math.ode.nonstiff.DormandPrince54Integrator: double E7> = -0.025;

        <org.apache.commons.math.ode.nonstiff.DormandPrince54Integrator: double E6> = 0.0419047619047619;

        <org.apache.commons.math.ode.nonstiff.DormandPrince54Integrator: double E5> = -0.05086379716981132;

        <org.apache.commons.math.ode.nonstiff.DormandPrince54Integrator: double E4> = 0.03697916666666667;

        <org.apache.commons.math.ode.nonstiff.DormandPrince54Integrator: double E3> = -0.0042527702905061394;

        <org.apache.commons.math.ode.nonstiff.DormandPrince54Integrator: double E1> = 0.0012326388888888888;

        <org.apache.commons.math.ode.nonstiff.DormandPrince54Integrator: java.lang.String METHOD_NAME> = "Dormand-Prince 5(4)";

        $r0 = newarray (double)[6];

        $r0[0] = 0.2;

        $r0[1] = 0.3;

        $r0[2] = 0.8;

        $r0[3] = 0.8888888888888888;

        $r0[4] = 1.0;

        $r0[5] = 1.0;

        <org.apache.commons.math.ode.nonstiff.DormandPrince54Integrator: double[] STATIC_C> = $r0;

        $r1 = newarray (double[])[6];

        $r2 = newarray (double)[1];

        $r2[0] = 0.2;

        $r1[0] = $r2;

        $r3 = newarray (double)[2];

        $r3[0] = 0.075;

        $r3[1] = 0.225;

        $r1[1] = $r3;

        $r4 = newarray (double)[3];

        $r4[0] = 0.9777777777777777;

        $r4[1] = -3.7333333333333334;

        $r4[2] = 3.5555555555555554;

        $r1[2] = $r4;

        $r5 = newarray (double)[4];

        $r5[0] = 2.9525986892242035;

        $r5[1] = -11.595793324188385;

        $r5[2] = 9.822892851699436;

        $r5[3] = -0.2908093278463649;

        $r1[3] = $r5;

        $r6 = newarray (double)[5];

        $r6[0] = 2.8462752525252526;

        $r6[1] = -10.757575757575758;

        $r6[2] = 8.906422717743473;

        $r6[3] = 0.2784090909090909;

        $r6[4] = -0.2735313036020583;

        $r1[4] = $r6;

        $r7 = newarray (double)[6];

        $r7[0] = 0.09114583333333333;

        $r7[1] = 0.0;

        $r7[2] = 0.44923629829290207;

        $r7[3] = 0.6510416666666666;

        $r7[4] = -0.322376179245283;

        $r7[5] = 0.13095238095238096;

        $r1[5] = $r7;

        <org.apache.commons.math.ode.nonstiff.DormandPrince54Integrator: double[][] STATIC_A> = $r1;

        $r8 = newarray (double)[7];

        $r8[0] = 0.09114583333333333;

        $r8[1] = 0.0;

        $r8[2] = 0.44923629829290207;

        $r8[3] = 0.6510416666666666;

        $r8[4] = -0.322376179245283;

        $r8[5] = 0.13095238095238096;

        $r8[6] = 0.0;

        <org.apache.commons.math.ode.nonstiff.DormandPrince54Integrator: double[] STATIC_B> = $r8;

        return;
    }
}
