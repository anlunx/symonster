public class com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.BenaimDodgsonKainthExtrapolationFunctionProvider extends com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileExtrapolationFunctionSABRProvider
{
    private final double _muLow;
    private final double _muHigh;

    public void <init>(double, double)
    {
        com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.BenaimDodgsonKainthExtrapolationFunctionProvider r0;
        double d0, d1;
        byte $b0, $b1;
        boolean $z0, $z1;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.BenaimDodgsonKainthExtrapolationFunctionProvider;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        specialinvoke r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileExtrapolationFunctionSABRProvider: void <init>()>();

        $b0 = d0 cmpl 0.0;

        if $b0 <= 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z0, "muLow should be positive");

        $b1 = d1 cmpl 0.0;

        if $b1 <= 0 goto label3;

        $z1 = 1;

        goto label4;

     label3:
        $z1 = 0;

     label4:
        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z1, "muHigh should be positive");

        r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.BenaimDodgsonKainthExtrapolationFunctionProvider: double _muLow> = d0;

        r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.BenaimDodgsonKainthExtrapolationFunctionProvider: double _muHigh> = d1;

        return;
    }

    public com.opengamma.analytics.math.function.Function1D getExtrapolationFunction(com.opengamma.analytics.financial.model.volatility.smile.function.SABRFormulaData, com.opengamma.analytics.financial.model.volatility.smile.function.SABRFormulaData, com.opengamma.analytics.financial.model.volatility.smile.function.VolatilityFunctionProvider, double, double, double, double)
    {
        com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.BenaimDodgsonKainthExtrapolationFunctionProvider r0;
        com.opengamma.analytics.financial.model.volatility.smile.function.SABRFormulaData r1, r2;
        com.opengamma.analytics.financial.model.volatility.smile.function.VolatilityFunctionProvider r3;
        double d0, d1, d2, d3, $d4, $d5;
        byte $b0, $b1;
        com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SABRExtrapolationLeftFunction $r9;
        com.opengamma.analytics.financial.model.option.pricing.analytic.formula.SABRExtrapolationRightFunction $r10;
        com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.BenaimDodgsonKainthExtrapolationFunctionProvider$1 $r11;
        boolean $z0, $z1;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.BenaimDodgsonKainthExtrapolationFunctionProvider;

        r1 := @parameter0: com.opengamma.analytics.financial.model.volatility.smile.function.SABRFormulaData;

        r2 := @parameter1: com.opengamma.analytics.financial.model.volatility.smile.function.SABRFormulaData;

        r3 := @parameter2: com.opengamma.analytics.financial.model.volatility.smile.function.VolatilityFunctionProvider;

        d0 := @parameter3: double;

        d1 := @parameter4: double;

        d2 := @parameter5: double;

        d3 := @parameter6: double;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "sabrDataLow");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, "sabrDataHigh");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r3, "volatilityFunction");

        $b0 = 0.0 cmpg d2;

        if $b0 >= 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z0, "cutOffStrikeLow should be positive");

        $b1 = d2 cmpg d3;

        if $b1 >= 0 goto label3;

        $z1 = 1;

        goto label4;

     label3:
        $z1 = 0;

     label4:
        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z1, "cutOffStrikeLow < cutOffStrikeHigh should be satisfied");

        $r9 = new com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SABRExtrapolationLeftFunction;

        $d4 = r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.BenaimDodgsonKainthExtrapolationFunctionProvider: double _muLow>;

        specialinvoke $r9.<com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SABRExtrapolationLeftFunction: void <init>(double,com.opengamma.analytics.financial.model.volatility.smile.function.SABRFormulaData,double,double,double,com.opengamma.analytics.financial.model.volatility.smile.function.VolatilityFunctionProvider)>(d0, r1, d2, d1, $d4, r3);

        $r10 = new com.opengamma.analytics.financial.model.option.pricing.analytic.formula.SABRExtrapolationRightFunction;

        $d5 = r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.BenaimDodgsonKainthExtrapolationFunctionProvider: double _muHigh>;

        specialinvoke $r10.<com.opengamma.analytics.financial.model.option.pricing.analytic.formula.SABRExtrapolationRightFunction: void <init>(double,com.opengamma.analytics.financial.model.volatility.smile.function.SABRFormulaData,double,double,double,com.opengamma.analytics.financial.model.volatility.smile.function.VolatilityFunctionProvider)>(d0, r2, d3, d1, $d5, r3);

        $r11 = new com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.BenaimDodgsonKainthExtrapolationFunctionProvider$1;

        specialinvoke $r11.<com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.BenaimDodgsonKainthExtrapolationFunctionProvider$1: void <init>(com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.BenaimDodgsonKainthExtrapolationFunctionProvider,double,double,com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SABRExtrapolationLeftFunction,double,double,com.opengamma.analytics.financial.model.option.pricing.analytic.formula.SABRExtrapolationRightFunction)>(r0, d2, d1, $r9, d0, d3, $r10);

        return $r11;
    }

    public int hashCode()
    {
        com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.BenaimDodgsonKainthExtrapolationFunctionProvider r0;
        double $d0, $d1;
        long $l1, $l2, $l5, $l6, l10, l12;
        int $i3, $i4, $i7, $i8, i11, i13;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.BenaimDodgsonKainthExtrapolationFunctionProvider;

        $d0 = r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.BenaimDodgsonKainthExtrapolationFunctionProvider: double _muHigh>;

        l10 = staticinvoke <java.lang.Double: long doubleToLongBits(double)>($d0);

        $i4 = 31 * 1;

        $l1 = l10 >>> 32;

        $l2 = l10 ^ $l1;

        $i3 = (int) $l2;

        i11 = $i4 + $i3;

        $d1 = r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.BenaimDodgsonKainthExtrapolationFunctionProvider: double _muLow>;

        l12 = staticinvoke <java.lang.Double: long doubleToLongBits(double)>($d1);

        $i8 = 31 * i11;

        $l5 = l12 >>> 32;

        $l6 = l12 ^ $l5;

        $i7 = (int) $l6;

        i13 = $i8 + $i7;

        return i13;
    }

    public boolean equals(java.lang.Object)
    {
        com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.BenaimDodgsonKainthExtrapolationFunctionProvider r0, r2;
        java.lang.Object r1;
        boolean $z0;
        double $d0, $d1, $d2, $d3;
        long $l0, $l1, $l3, $l4;
        byte $b2, $b5;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.BenaimDodgsonKainthExtrapolationFunctionProvider;

        r1 := @parameter0: java.lang.Object;

        if r0 != r1 goto label1;

        return 1;

     label1:
        if r1 != null goto label2;

        return 0;

     label2:
        $z0 = r1 instanceof com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.BenaimDodgsonKainthExtrapolationFunctionProvider;

        if $z0 != 0 goto label3;

        return 0;

     label3:
        r2 = (com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.BenaimDodgsonKainthExtrapolationFunctionProvider) r1;

        $d0 = r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.BenaimDodgsonKainthExtrapolationFunctionProvider: double _muHigh>;

        $l0 = staticinvoke <java.lang.Double: long doubleToLongBits(double)>($d0);

        $d1 = r2.<com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.BenaimDodgsonKainthExtrapolationFunctionProvider: double _muHigh>;

        $l1 = staticinvoke <java.lang.Double: long doubleToLongBits(double)>($d1);

        $b2 = $l0 cmp $l1;

        if $b2 == 0 goto label4;

        return 0;

     label4:
        $d2 = r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.BenaimDodgsonKainthExtrapolationFunctionProvider: double _muLow>;

        $l3 = staticinvoke <java.lang.Double: long doubleToLongBits(double)>($d2);

        $d3 = r2.<com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.BenaimDodgsonKainthExtrapolationFunctionProvider: double _muLow>;

        $l4 = staticinvoke <java.lang.Double: long doubleToLongBits(double)>($d3);

        $b5 = $l3 cmp $l4;

        if $b5 == 0 goto label5;

        return 0;

     label5:
        return 1;
    }
}
