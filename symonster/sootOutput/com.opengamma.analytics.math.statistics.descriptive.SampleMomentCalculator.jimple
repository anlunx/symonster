public class com.opengamma.analytics.math.statistics.descriptive.SampleMomentCalculator extends com.opengamma.analytics.math.function.Function1D
{
    private final int _n;

    public void <init>(int)
    {
        com.opengamma.analytics.math.statistics.descriptive.SampleMomentCalculator r0;
        int i0;
        boolean $z0;

        r0 := @this: com.opengamma.analytics.math.statistics.descriptive.SampleMomentCalculator;

        i0 := @parameter0: int;

        specialinvoke r0.<com.opengamma.analytics.math.function.Function1D: void <init>()>();

        if i0 < 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        staticinvoke <org.apache.commons.lang.Validate: void isTrue(boolean,java.lang.String)>($z0, "n must be >= 0");

        r0.<com.opengamma.analytics.math.statistics.descriptive.SampleMomentCalculator: int _n> = i0;

        return;
    }

    public java.lang.Double evaluate(double[])
    {
        com.opengamma.analytics.math.statistics.descriptive.SampleMomentCalculator r0;
        double[] r1;
        int i0, $i1, $i2, $i3, $i4, $i5, i6;
        java.lang.Double r3, $r4, $r5;
        double $d0, $d1, $d2, $d3, $d4, $d5, d6;
        boolean $z0;

        r0 := @this: com.opengamma.analytics.math.statistics.descriptive.SampleMomentCalculator;

        r1 := @parameter0: double[];

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object,java.lang.String)>(r1, "x was null");

        $i1 = lengthof r1;

        if $i1 <= 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        staticinvoke <org.apache.commons.lang.Validate: void isTrue(boolean,java.lang.String)>($z0, "x was empty");

        $i2 = r0.<com.opengamma.analytics.math.statistics.descriptive.SampleMomentCalculator: int _n>;

        if $i2 != 0 goto label3;

        $r5 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(1.0);

        return $r5;

     label3:
        d6 = 0.0;

        i0 = lengthof r1;

        i6 = 0;

     label4:
        if i6 >= i0 goto label5;

        $d2 = r1[i6];

        r3 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d2);

        $d3 = virtualinvoke r3.<java.lang.Double: double doubleValue()>();

        $i5 = r0.<com.opengamma.analytics.math.statistics.descriptive.SampleMomentCalculator: int _n>;

        $d4 = (double) $i5;

        $d5 = staticinvoke <java.lang.Math: double pow(double,double)>($d3, $d4);

        d6 = d6 + $d5;

        i6 = i6 + 1;

        goto label4;

     label5:
        $i3 = lengthof r1;

        $i4 = $i3 - 1;

        $d0 = (double) $i4;

        $d1 = d6 / $d0;

        $r4 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d1);

        return $r4;
    }

    public volatile java.lang.Object evaluate(java.lang.Object)
    {
        com.opengamma.analytics.math.statistics.descriptive.SampleMomentCalculator r0;
        java.lang.Object r1;
        double[] $r2;
        java.lang.Double $r3;

        r0 := @this: com.opengamma.analytics.math.statistics.descriptive.SampleMomentCalculator;

        r1 := @parameter0: java.lang.Object;

        $r2 = (double[]) r1;

        $r3 = virtualinvoke r0.<com.opengamma.analytics.math.statistics.descriptive.SampleMomentCalculator: java.lang.Double evaluate(double[])>($r2);

        return $r3;
    }
}
