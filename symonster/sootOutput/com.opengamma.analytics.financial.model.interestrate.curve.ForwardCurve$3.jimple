final class com.opengamma.analytics.financial.model.interestrate.curve.ForwardCurve$3 extends com.opengamma.analytics.math.function.Function1D
{
    final java.lang.Double val$spot;
    final java.lang.Double val$drift;

    void <init>(java.lang.Double, java.lang.Double)
    {
        com.opengamma.analytics.financial.model.interestrate.curve.ForwardCurve$3 r0;
        java.lang.Double r1, r2;

        r0 := @this: com.opengamma.analytics.financial.model.interestrate.curve.ForwardCurve$3;

        r1 := @parameter0: java.lang.Double;

        r2 := @parameter1: java.lang.Double;

        r0.<com.opengamma.analytics.financial.model.interestrate.curve.ForwardCurve$3: java.lang.Double val$spot> = r1;

        r0.<com.opengamma.analytics.financial.model.interestrate.curve.ForwardCurve$3: java.lang.Double val$drift> = r2;

        specialinvoke r0.<com.opengamma.analytics.math.function.Function1D: void <init>()>();

        return;
    }

    public java.lang.Double evaluate(java.lang.Double)
    {
        com.opengamma.analytics.financial.model.interestrate.curve.ForwardCurve$3 r0;
        java.lang.Double r1, $r2, $r3, $r4;
        double $d0, $d1, $d2, $d3, $d4, $d5;

        r0 := @this: com.opengamma.analytics.financial.model.interestrate.curve.ForwardCurve$3;

        r1 := @parameter0: java.lang.Double;

        $r2 = r0.<com.opengamma.analytics.financial.model.interestrate.curve.ForwardCurve$3: java.lang.Double val$spot>;

        $d0 = virtualinvoke $r2.<java.lang.Double: double doubleValue()>();

        $r3 = r0.<com.opengamma.analytics.financial.model.interestrate.curve.ForwardCurve$3: java.lang.Double val$drift>;

        $d1 = virtualinvoke $r3.<java.lang.Double: double doubleValue()>();

        $d2 = virtualinvoke r1.<java.lang.Double: double doubleValue()>();

        $d3 = $d1 * $d2;

        $d4 = staticinvoke <java.lang.Math: double exp(double)>($d3);

        $d5 = $d0 * $d4;

        $r4 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d5);

        return $r4;
    }

    public volatile java.lang.Object evaluate(java.lang.Object)
    {
        com.opengamma.analytics.financial.model.interestrate.curve.ForwardCurve$3 r0;
        java.lang.Object r1;
        java.lang.Double $r2, $r3;

        r0 := @this: com.opengamma.analytics.financial.model.interestrate.curve.ForwardCurve$3;

        r1 := @parameter0: java.lang.Object;

        $r2 = (java.lang.Double) r1;

        $r3 = virtualinvoke r0.<com.opengamma.analytics.financial.model.interestrate.curve.ForwardCurve$3: java.lang.Double evaluate(java.lang.Double)>($r2);

        return $r3;
    }
}
