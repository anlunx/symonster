public abstract class org.apache.commons.math3.analysis.solvers.AbstractUnivariateDifferentiableSolver extends org.apache.commons.math3.analysis.solvers.BaseAbstractUnivariateSolver implements org.apache.commons.math3.analysis.solvers.UnivariateDifferentiableSolver
{
    private org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiableFunction function;

    protected void <init>(double)
    {
        org.apache.commons.math3.analysis.solvers.AbstractUnivariateDifferentiableSolver r0;
        double d0;

        r0 := @this: org.apache.commons.math3.analysis.solvers.AbstractUnivariateDifferentiableSolver;

        d0 := @parameter0: double;

        specialinvoke r0.<org.apache.commons.math3.analysis.solvers.BaseAbstractUnivariateSolver: void <init>(double)>(d0);

        return;
    }

    protected void <init>(double, double, double)
    {
        org.apache.commons.math3.analysis.solvers.AbstractUnivariateDifferentiableSolver r0;
        double d0, d1, d2;

        r0 := @this: org.apache.commons.math3.analysis.solvers.AbstractUnivariateDifferentiableSolver;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        d2 := @parameter2: double;

        specialinvoke r0.<org.apache.commons.math3.analysis.solvers.BaseAbstractUnivariateSolver: void <init>(double,double,double)>(d0, d1, d2);

        return;
    }

    protected org.apache.commons.math3.analysis.differentiation.DerivativeStructure computeObjectiveValueAndDerivative(double) throws org.apache.commons.math3.exception.TooManyEvaluationsException
    {
        org.apache.commons.math3.analysis.solvers.AbstractUnivariateDifferentiableSolver r0;
        double d0;
        org.apache.commons.math3.analysis.differentiation.DerivativeStructure $r1, $r3;
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiableFunction $r2;

        r0 := @this: org.apache.commons.math3.analysis.solvers.AbstractUnivariateDifferentiableSolver;

        d0 := @parameter0: double;

        virtualinvoke r0.<org.apache.commons.math3.analysis.solvers.AbstractUnivariateDifferentiableSolver: void incrementEvaluationCount()>();

        $r2 = r0.<org.apache.commons.math3.analysis.solvers.AbstractUnivariateDifferentiableSolver: org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiableFunction function>;

        $r1 = new org.apache.commons.math3.analysis.differentiation.DerivativeStructure;

        specialinvoke $r1.<org.apache.commons.math3.analysis.differentiation.DerivativeStructure: void <init>(int,int,int,double)>(1, 1, 0, d0);

        $r3 = interfaceinvoke $r2.<org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiableFunction: org.apache.commons.math3.analysis.differentiation.DerivativeStructure value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure)>($r1);

        return $r3;
    }

    protected void setup(int, org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiableFunction, double, double, double)
    {
        org.apache.commons.math3.analysis.solvers.AbstractUnivariateDifferentiableSolver r0;
        int i0;
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiableFunction r1;
        double d0, d1, d2;

        r0 := @this: org.apache.commons.math3.analysis.solvers.AbstractUnivariateDifferentiableSolver;

        i0 := @parameter0: int;

        r1 := @parameter1: org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiableFunction;

        d0 := @parameter2: double;

        d1 := @parameter3: double;

        d2 := @parameter4: double;

        specialinvoke r0.<org.apache.commons.math3.analysis.solvers.BaseAbstractUnivariateSolver: void setup(int,org.apache.commons.math3.analysis.UnivariateFunction,double,double,double)>(i0, r1, d0, d1, d2);

        r0.<org.apache.commons.math3.analysis.solvers.AbstractUnivariateDifferentiableSolver: org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiableFunction function> = r1;

        return;
    }

    protected volatile void setup(int, org.apache.commons.math3.analysis.UnivariateFunction, double, double, double) throws org.apache.commons.math3.exception.NullArgumentException
    {
        org.apache.commons.math3.analysis.solvers.AbstractUnivariateDifferentiableSolver r0;
        int i0;
        org.apache.commons.math3.analysis.UnivariateFunction r1;
        double d0, d1, d2;
        org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiableFunction $r2;

        r0 := @this: org.apache.commons.math3.analysis.solvers.AbstractUnivariateDifferentiableSolver;

        i0 := @parameter0: int;

        r1 := @parameter1: org.apache.commons.math3.analysis.UnivariateFunction;

        d0 := @parameter2: double;

        d1 := @parameter3: double;

        d2 := @parameter4: double;

        $r2 = (org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiableFunction) r1;

        virtualinvoke r0.<org.apache.commons.math3.analysis.solvers.AbstractUnivariateDifferentiableSolver: void setup(int,org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiableFunction,double,double,double)>(i0, $r2, d0, d1, d2);

        return;
    }
}
