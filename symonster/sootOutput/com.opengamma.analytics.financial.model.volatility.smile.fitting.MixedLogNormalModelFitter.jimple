public class com.opengamma.analytics.financial.model.volatility.smile.fitting.MixedLogNormalModelFitter extends com.opengamma.analytics.financial.model.volatility.smile.fitting.SmileModelFitter
{
    private final com.opengamma.analytics.math.minimization.ParameterLimitsTransform[] _transforms;
    private final boolean _useShiftedMean;
    private final int _nNormals;

    public void <init>(double, double[], double, double[], double[], com.opengamma.analytics.financial.model.volatility.smile.function.VolatilityFunctionProvider, int, boolean)
    {
        com.opengamma.analytics.financial.model.volatility.smile.fitting.MixedLogNormalModelFitter r0;
        double d0, d1;
        double[] r1, r2, r3;
        com.opengamma.analytics.financial.model.volatility.smile.function.VolatilityFunctionProvider r4;
        int i0, i1, $i2, $i3, $i4, i5;
        boolean z0;
        com.opengamma.analytics.math.minimization.ParameterLimitsTransform[] $r5, $r7;
        com.opengamma.analytics.math.minimization.NullTransform $r6;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.smile.fitting.MixedLogNormalModelFitter;

        d0 := @parameter0: double;

        r1 := @parameter1: double[];

        d1 := @parameter2: double;

        r2 := @parameter3: double[];

        r3 := @parameter4: double[];

        r4 := @parameter5: com.opengamma.analytics.financial.model.volatility.smile.function.VolatilityFunctionProvider;

        i0 := @parameter6: int;

        z0 := @parameter7: boolean;

        specialinvoke r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.SmileModelFitter: void <init>(double,double[],double,double[],double[],com.opengamma.analytics.financial.model.volatility.smile.function.VolatilityFunctionProvider)>(d0, r1, d1, r2, r3, r4);

        if z0 == 0 goto label1;

        $i3 = 3 * i0;

        $i4 = $i3 - 2;

        goto label2;

     label1:
        $i2 = 2 * i0;

        $i4 = $i2 - 1;

     label2:
        i1 = $i4;

        $r5 = newarray (com.opengamma.analytics.math.minimization.ParameterLimitsTransform)[$i4];

        r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.MixedLogNormalModelFitter: com.opengamma.analytics.math.minimization.ParameterLimitsTransform[] _transforms> = $r5;

        i5 = 0;

     label3:
        if i5 >= i1 goto label4;

        $r7 = r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.MixedLogNormalModelFitter: com.opengamma.analytics.math.minimization.ParameterLimitsTransform[] _transforms>;

        $r6 = new com.opengamma.analytics.math.minimization.NullTransform;

        specialinvoke $r6.<com.opengamma.analytics.math.minimization.NullTransform: void <init>()>();

        $r7[i5] = $r6;

        i5 = i5 + 1;

        goto label3;

     label4:
        r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.MixedLogNormalModelFitter: boolean _useShiftedMean> = z0;

        r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.MixedLogNormalModelFitter: int _nNormals> = i0;

        return;
    }

    protected com.opengamma.analytics.math.minimization.NonLinearParameterTransforms getTransform(com.opengamma.analytics.math.matrix.DoubleMatrix1D)
    {
        com.opengamma.analytics.financial.model.volatility.smile.fitting.MixedLogNormalModelFitter r0;
        com.opengamma.analytics.math.matrix.DoubleMatrix1D r1;
        java.util.BitSet $r3;
        com.opengamma.analytics.math.minimization.UncoupledParameterTransforms $r4;
        com.opengamma.analytics.math.minimization.ParameterLimitsTransform[] $r5;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.smile.fitting.MixedLogNormalModelFitter;

        r1 := @parameter0: com.opengamma.analytics.math.matrix.DoubleMatrix1D;

        $r3 = new java.util.BitSet;

        specialinvoke $r3.<java.util.BitSet: void <init>()>();

        $r4 = new com.opengamma.analytics.math.minimization.UncoupledParameterTransforms;

        $r5 = r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.MixedLogNormalModelFitter: com.opengamma.analytics.math.minimization.ParameterLimitsTransform[] _transforms>;

        specialinvoke $r4.<com.opengamma.analytics.math.minimization.UncoupledParameterTransforms: void <init>(com.opengamma.analytics.math.matrix.DoubleMatrix1D,com.opengamma.analytics.math.minimization.ParameterLimitsTransform[],java.util.BitSet)>(r1, $r5, $r3);

        return $r4;
    }

    protected com.opengamma.analytics.math.minimization.NonLinearParameterTransforms getTransform(com.opengamma.analytics.math.matrix.DoubleMatrix1D, java.util.BitSet)
    {
        com.opengamma.analytics.financial.model.volatility.smile.fitting.MixedLogNormalModelFitter r0;
        com.opengamma.analytics.math.matrix.DoubleMatrix1D r1;
        java.util.BitSet r2;
        com.opengamma.analytics.math.minimization.UncoupledParameterTransforms $r3;
        com.opengamma.analytics.math.minimization.ParameterLimitsTransform[] $r4;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.smile.fitting.MixedLogNormalModelFitter;

        r1 := @parameter0: com.opengamma.analytics.math.matrix.DoubleMatrix1D;

        r2 := @parameter1: java.util.BitSet;

        $r3 = new com.opengamma.analytics.math.minimization.UncoupledParameterTransforms;

        $r4 = r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.MixedLogNormalModelFitter: com.opengamma.analytics.math.minimization.ParameterLimitsTransform[] _transforms>;

        specialinvoke $r3.<com.opengamma.analytics.math.minimization.UncoupledParameterTransforms: void <init>(com.opengamma.analytics.math.matrix.DoubleMatrix1D,com.opengamma.analytics.math.minimization.ParameterLimitsTransform[],java.util.BitSet)>(r1, $r4, r2);

        return $r3;
    }

    public com.opengamma.analytics.financial.model.volatility.smile.function.MixedLogNormalModelData toSmileModelData(com.opengamma.analytics.math.matrix.DoubleMatrix1D)
    {
        com.opengamma.analytics.financial.model.volatility.smile.fitting.MixedLogNormalModelFitter r0;
        com.opengamma.analytics.math.matrix.DoubleMatrix1D r1;
        com.opengamma.analytics.financial.model.volatility.smile.function.MixedLogNormalModelData $r2;
        double[] $r3;
        boolean $z0;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.smile.fitting.MixedLogNormalModelFitter;

        r1 := @parameter0: com.opengamma.analytics.math.matrix.DoubleMatrix1D;

        $r2 = new com.opengamma.analytics.financial.model.volatility.smile.function.MixedLogNormalModelData;

        $r3 = virtualinvoke r1.<com.opengamma.analytics.math.matrix.DoubleMatrix1D: double[] getData()>();

        $z0 = r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.MixedLogNormalModelFitter: boolean _useShiftedMean>;

        specialinvoke $r2.<com.opengamma.analytics.financial.model.volatility.smile.function.MixedLogNormalModelData: void <init>(double[],boolean)>($r3, $z0);

        return $r2;
    }

    protected com.opengamma.analytics.math.function.Function1D getConstraintFunction(com.opengamma.analytics.math.minimization.NonLinearParameterTransforms)
    {
        com.opengamma.analytics.financial.model.volatility.smile.fitting.MixedLogNormalModelFitter r0;
        com.opengamma.analytics.math.minimization.NonLinearParameterTransforms r1;
        com.opengamma.analytics.financial.model.volatility.smile.fitting.MixedLogNormalModelFitter$1 $r2;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.smile.fitting.MixedLogNormalModelFitter;

        r1 := @parameter0: com.opengamma.analytics.math.minimization.NonLinearParameterTransforms;

        $r2 = new com.opengamma.analytics.financial.model.volatility.smile.fitting.MixedLogNormalModelFitter$1;

        specialinvoke $r2.<com.opengamma.analytics.financial.model.volatility.smile.fitting.MixedLogNormalModelFitter$1: void <init>(com.opengamma.analytics.financial.model.volatility.smile.fitting.MixedLogNormalModelFitter)>(r0);

        return $r2;
    }

    protected com.opengamma.analytics.math.matrix.DoubleMatrix1D getMaximumStep()
    {
        com.opengamma.analytics.financial.model.volatility.smile.fitting.MixedLogNormalModelFitter r0;
        boolean $z0;
        int $i1, $i2, $i3, $i4, $i5;
        com.opengamma.analytics.math.matrix.DoubleMatrix1D $r1;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.smile.fitting.MixedLogNormalModelFitter;

        $z0 = r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.MixedLogNormalModelFitter: boolean _useShiftedMean>;

        if $z0 == 0 goto label1;

        $i3 = r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.MixedLogNormalModelFitter: int _nNormals>;

        $i4 = 3 * $i3;

        $i5 = $i4 - 2;

        goto label2;

     label1:
        $i1 = r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.MixedLogNormalModelFitter: int _nNormals>;

        $i2 = 2 * $i1;

        $i5 = $i2 - 1;

     label2:
        $r1 = new com.opengamma.analytics.math.matrix.DoubleMatrix1D;

        specialinvoke $r1.<com.opengamma.analytics.math.matrix.DoubleMatrix1D: void <init>(int,double)>($i5, 0.1);

        return $r1;
    }

    public volatile com.opengamma.analytics.financial.model.volatility.smile.function.SmileModelData toSmileModelData(com.opengamma.analytics.math.matrix.DoubleMatrix1D)
    {
        com.opengamma.analytics.financial.model.volatility.smile.fitting.MixedLogNormalModelFitter r0;
        com.opengamma.analytics.math.matrix.DoubleMatrix1D r1;
        com.opengamma.analytics.financial.model.volatility.smile.function.MixedLogNormalModelData $r2;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.smile.fitting.MixedLogNormalModelFitter;

        r1 := @parameter0: com.opengamma.analytics.math.matrix.DoubleMatrix1D;

        $r2 = virtualinvoke r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.MixedLogNormalModelFitter: com.opengamma.analytics.financial.model.volatility.smile.function.MixedLogNormalModelData toSmileModelData(com.opengamma.analytics.math.matrix.DoubleMatrix1D)>(r1);

        return $r2;
    }

    static int access$000(com.opengamma.analytics.financial.model.volatility.smile.fitting.MixedLogNormalModelFitter)
    {
        com.opengamma.analytics.financial.model.volatility.smile.fitting.MixedLogNormalModelFitter r0;
        int $i0;

        r0 := @parameter0: com.opengamma.analytics.financial.model.volatility.smile.fitting.MixedLogNormalModelFitter;

        $i0 = r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.MixedLogNormalModelFitter: int _nNormals>;

        return $i0;
    }
}
