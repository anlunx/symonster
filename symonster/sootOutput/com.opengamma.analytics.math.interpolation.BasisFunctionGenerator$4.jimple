class com.opengamma.analytics.math.interpolation.BasisFunctionGenerator$4 extends com.opengamma.analytics.math.function.Function1D
{
    private final double _inv1;
    private final double _inv2;
    private final double _xa;
    private final double _xb;
    final double[] val$knots;
    final int val$index;
    final int val$degree;
    final com.opengamma.analytics.math.function.Function1D val$fa;
    final com.opengamma.analytics.math.function.Function1D val$fb;
    final com.opengamma.analytics.math.interpolation.BasisFunctionGenerator this$0;

    void <init>(com.opengamma.analytics.math.interpolation.BasisFunctionGenerator, double[], int, int, com.opengamma.analytics.math.function.Function1D, com.opengamma.analytics.math.function.Function1D)
    {
        com.opengamma.analytics.math.interpolation.BasisFunctionGenerator$4 r0;
        com.opengamma.analytics.math.interpolation.BasisFunctionGenerator r1;
        double[] r2, $r5, $r6, $r7, $r8, $r9, $r10;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16;
        com.opengamma.analytics.math.function.Function1D r3, r4;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9;

        r0 := @this: com.opengamma.analytics.math.interpolation.BasisFunctionGenerator$4;

        r1 := @parameter0: com.opengamma.analytics.math.interpolation.BasisFunctionGenerator;

        r2 := @parameter1: double[];

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        r3 := @parameter4: com.opengamma.analytics.math.function.Function1D;

        r4 := @parameter5: com.opengamma.analytics.math.function.Function1D;

        r0.<com.opengamma.analytics.math.interpolation.BasisFunctionGenerator$4: com.opengamma.analytics.math.interpolation.BasisFunctionGenerator this$0> = r1;

        r0.<com.opengamma.analytics.math.interpolation.BasisFunctionGenerator$4: double[] val$knots> = r2;

        r0.<com.opengamma.analytics.math.interpolation.BasisFunctionGenerator$4: int val$index> = i0;

        r0.<com.opengamma.analytics.math.interpolation.BasisFunctionGenerator$4: int val$degree> = i1;

        r0.<com.opengamma.analytics.math.interpolation.BasisFunctionGenerator$4: com.opengamma.analytics.math.function.Function1D val$fa> = r3;

        r0.<com.opengamma.analytics.math.interpolation.BasisFunctionGenerator$4: com.opengamma.analytics.math.function.Function1D val$fb> = r4;

        specialinvoke r0.<com.opengamma.analytics.math.function.Function1D: void <init>()>();

        $r5 = r0.<com.opengamma.analytics.math.interpolation.BasisFunctionGenerator$4: double[] val$knots>;

        $i3 = r0.<com.opengamma.analytics.math.interpolation.BasisFunctionGenerator$4: int val$index>;

        $i2 = r0.<com.opengamma.analytics.math.interpolation.BasisFunctionGenerator$4: int val$degree>;

        $i4 = $i3 + $i2;

        $d1 = $r5[$i4];

        $r6 = r0.<com.opengamma.analytics.math.interpolation.BasisFunctionGenerator$4: double[] val$knots>;

        $i5 = r0.<com.opengamma.analytics.math.interpolation.BasisFunctionGenerator$4: int val$index>;

        $d0 = $r6[$i5];

        $d2 = $d1 - $d0;

        $d3 = 1.0 / $d2;

        r0.<com.opengamma.analytics.math.interpolation.BasisFunctionGenerator$4: double _inv1> = $d3;

        $r7 = r0.<com.opengamma.analytics.math.interpolation.BasisFunctionGenerator$4: double[] val$knots>;

        $i7 = r0.<com.opengamma.analytics.math.interpolation.BasisFunctionGenerator$4: int val$index>;

        $i6 = r0.<com.opengamma.analytics.math.interpolation.BasisFunctionGenerator$4: int val$degree>;

        $i8 = $i7 + $i6;

        $i9 = $i8 + 1;

        $d5 = $r7[$i9];

        $r8 = r0.<com.opengamma.analytics.math.interpolation.BasisFunctionGenerator$4: double[] val$knots>;

        $i10 = r0.<com.opengamma.analytics.math.interpolation.BasisFunctionGenerator$4: int val$index>;

        $i11 = $i10 + 1;

        $d4 = $r8[$i11];

        $d6 = $d5 - $d4;

        $d7 = 1.0 / $d6;

        r0.<com.opengamma.analytics.math.interpolation.BasisFunctionGenerator$4: double _inv2> = $d7;

        $r9 = r0.<com.opengamma.analytics.math.interpolation.BasisFunctionGenerator$4: double[] val$knots>;

        $i12 = r0.<com.opengamma.analytics.math.interpolation.BasisFunctionGenerator$4: int val$index>;

        $d8 = $r9[$i12];

        r0.<com.opengamma.analytics.math.interpolation.BasisFunctionGenerator$4: double _xa> = $d8;

        $r10 = r0.<com.opengamma.analytics.math.interpolation.BasisFunctionGenerator$4: double[] val$knots>;

        $i14 = r0.<com.opengamma.analytics.math.interpolation.BasisFunctionGenerator$4: int val$index>;

        $i13 = r0.<com.opengamma.analytics.math.interpolation.BasisFunctionGenerator$4: int val$degree>;

        $i15 = $i14 + $i13;

        $i16 = $i15 + 1;

        $d9 = $r10[$i16];

        r0.<com.opengamma.analytics.math.interpolation.BasisFunctionGenerator$4: double _xb> = $d9;

        return;
    }

    public java.lang.Double evaluate(java.lang.Double)
    {
        com.opengamma.analytics.math.interpolation.BasisFunctionGenerator$4 r0;
        java.lang.Double r1, $r4, $r7, $r8;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14;
        com.opengamma.analytics.math.function.Function1D $r2, $r5;
        java.lang.Object $r3, $r6;

        r0 := @this: com.opengamma.analytics.math.interpolation.BasisFunctionGenerator$4;

        r1 := @parameter0: java.lang.Double;

        $d0 = virtualinvoke r1.<java.lang.Double: double doubleValue()>();

        $d1 = r0.<com.opengamma.analytics.math.interpolation.BasisFunctionGenerator$4: double _xa>;

        $d3 = $d0 - $d1;

        $d2 = r0.<com.opengamma.analytics.math.interpolation.BasisFunctionGenerator$4: double _inv1>;

        $d4 = $d3 * $d2;

        $r2 = r0.<com.opengamma.analytics.math.interpolation.BasisFunctionGenerator$4: com.opengamma.analytics.math.function.Function1D val$fa>;

        $r3 = virtualinvoke $r2.<com.opengamma.analytics.math.function.Function1D: java.lang.Object evaluate(java.lang.Object)>(r1);

        $r4 = (java.lang.Double) $r3;

        $d5 = virtualinvoke $r4.<java.lang.Double: double doubleValue()>();

        $d6 = $d4 * $d5;

        $d7 = r0.<com.opengamma.analytics.math.interpolation.BasisFunctionGenerator$4: double _xb>;

        $d8 = virtualinvoke r1.<java.lang.Double: double doubleValue()>();

        $d10 = $d7 - $d8;

        $d9 = r0.<com.opengamma.analytics.math.interpolation.BasisFunctionGenerator$4: double _inv2>;

        $d11 = $d10 * $d9;

        $r5 = r0.<com.opengamma.analytics.math.interpolation.BasisFunctionGenerator$4: com.opengamma.analytics.math.function.Function1D val$fb>;

        $r6 = virtualinvoke $r5.<com.opengamma.analytics.math.function.Function1D: java.lang.Object evaluate(java.lang.Object)>(r1);

        $r7 = (java.lang.Double) $r6;

        $d12 = virtualinvoke $r7.<java.lang.Double: double doubleValue()>();

        $d13 = $d11 * $d12;

        $d14 = $d6 + $d13;

        $r8 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d14);

        return $r8;
    }

    public volatile java.lang.Object evaluate(java.lang.Object)
    {
        com.opengamma.analytics.math.interpolation.BasisFunctionGenerator$4 r0;
        java.lang.Object r1;
        java.lang.Double $r2, $r3;

        r0 := @this: com.opengamma.analytics.math.interpolation.BasisFunctionGenerator$4;

        r1 := @parameter0: java.lang.Object;

        $r2 = (java.lang.Double) r1;

        $r3 = virtualinvoke r0.<com.opengamma.analytics.math.interpolation.BasisFunctionGenerator$4: java.lang.Double evaluate(java.lang.Double)>($r2);

        return $r3;
    }
}
