public final class com.opengamma.analytics.financial.interestrate.swaption.provider.SwaptionCashFixedIborBlackMethod extends java.lang.Object
{
    private static final com.opengamma.analytics.financial.interestrate.swaption.provider.SwaptionCashFixedIborBlackMethod INSTANCE;
    private static final com.opengamma.analytics.financial.provider.calculator.discounting.ParRateCurveSensitivityDiscountingCalculator PRCS;
    private static final com.opengamma.analytics.financial.provider.calculator.discounting.ParRateDiscountingCalculator PRDC;
    private static final com.opengamma.analytics.financial.interestrate.swap.provider.SwapFixedCouponDiscountingMethod METHOD_SWAP;

    public static com.opengamma.analytics.financial.interestrate.swaption.provider.SwaptionCashFixedIborBlackMethod getInstance()
    {
        com.opengamma.analytics.financial.interestrate.swaption.provider.SwaptionCashFixedIborBlackMethod $r0;

        $r0 = <com.opengamma.analytics.financial.interestrate.swaption.provider.SwaptionCashFixedIborBlackMethod: com.opengamma.analytics.financial.interestrate.swaption.provider.SwaptionCashFixedIborBlackMethod INSTANCE>;

        return $r0;
    }

    private void <init>()
    {
        com.opengamma.analytics.financial.interestrate.swaption.provider.SwaptionCashFixedIborBlackMethod r0;

        r0 := @this: com.opengamma.analytics.financial.interestrate.swaption.provider.SwaptionCashFixedIborBlackMethod;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public com.opengamma.util.money.MultipleCurrencyAmount presentValue(com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionCashFixedIbor, com.opengamma.analytics.financial.provider.description.interestrate.BlackSwaptionFlatProviderInterface)
    {
        com.opengamma.analytics.financial.interestrate.swaption.provider.SwaptionCashFixedIborBlackMethod r0;
        com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionCashFixedIbor r1;
        com.opengamma.analytics.financial.provider.description.interestrate.BlackSwaptionFlatProviderInterface r2;
        double d0, d1, d2, d3, d4, d5, $d6, $d7, $d8, $d9, $d10;
        com.opengamma.analytics.math.function.Function1D r5;
        com.opengamma.analytics.financial.interestrate.swap.derivative.SwapFixedCoupon $r8, $r14;
        com.opengamma.analytics.financial.provider.calculator.discounting.ParRateDiscountingCalculator $r9;
        com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface $r10, $r17;
        java.lang.Object $r11, $r21;
        java.lang.Double $r12, $r19, $r22;
        com.opengamma.analytics.financial.interestrate.swap.provider.SwapFixedCouponDiscountingMethod $r13;
        com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackPriceFunction $r15;
        com.opengamma.analytics.financial.model.option.parameters.BlackFlatSwaptionParameters $r16;
        com.opengamma.util.money.Currency $r18, $r23;
        com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackFunctionData $r20;
        boolean $z0;
        com.opengamma.util.money.MultipleCurrencyAmount $r24;

        r0 := @this: com.opengamma.analytics.financial.interestrate.swaption.provider.SwaptionCashFixedIborBlackMethod;

        r1 := @parameter0: com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionCashFixedIbor;

        r2 := @parameter1: com.opengamma.analytics.financial.provider.description.interestrate.BlackSwaptionFlatProviderInterface;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "Swaption");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, "Curves with Black volatility");

        d0 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionCashFixedIbor: double getMaturityTime()>();

        $r8 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionCashFixedIbor: com.opengamma.analytics.financial.interestrate.swap.derivative.SwapFixedCoupon getUnderlyingSwap()>();

        $r9 = <com.opengamma.analytics.financial.interestrate.swaption.provider.SwaptionCashFixedIborBlackMethod: com.opengamma.analytics.financial.provider.calculator.discounting.ParRateDiscountingCalculator PRDC>;

        $r10 = interfaceinvoke r2.<com.opengamma.analytics.financial.provider.description.interestrate.BlackSwaptionFlatProviderInterface: com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface getMulticurveProvider()>();

        $r11 = virtualinvoke $r8.<com.opengamma.analytics.financial.interestrate.swap.derivative.SwapFixedCoupon: java.lang.Object accept(com.opengamma.analytics.financial.interestrate.InstrumentDerivativeVisitor,java.lang.Object)>($r9, $r10);

        $r12 = (java.lang.Double) $r11;

        d1 = virtualinvoke $r12.<java.lang.Double: double doubleValue()>();

        $r13 = <com.opengamma.analytics.financial.interestrate.swaption.provider.SwaptionCashFixedIborBlackMethod: com.opengamma.analytics.financial.interestrate.swap.provider.SwapFixedCouponDiscountingMethod METHOD_SWAP>;

        $r14 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionCashFixedIbor: com.opengamma.analytics.financial.interestrate.swap.derivative.SwapFixedCoupon getUnderlyingSwap()>();

        d2 = virtualinvoke $r13.<com.opengamma.analytics.financial.interestrate.swap.provider.SwapFixedCouponDiscountingMethod: double getAnnuityCash(com.opengamma.analytics.financial.interestrate.swap.derivative.SwapFixedCoupon,double)>($r14, d1);

        $r15 = new com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackPriceFunction;

        specialinvoke $r15.<com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackPriceFunction: void <init>()>();

        $r16 = interfaceinvoke r2.<com.opengamma.analytics.financial.provider.description.interestrate.BlackSwaptionFlatProviderInterface: com.opengamma.analytics.financial.model.option.parameters.BlackFlatSwaptionParameters getBlackParameters()>();

        $d6 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionCashFixedIbor: double getTimeToExpiry()>();

        d3 = virtualinvoke $r16.<com.opengamma.analytics.financial.model.option.parameters.BlackFlatSwaptionParameters: double getVolatility(double,double)>($d6, d0);

        $r17 = interfaceinvoke r2.<com.opengamma.analytics.financial.provider.description.interestrate.BlackSwaptionFlatProviderInterface: com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface getMulticurveProvider()>();

        $r18 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionCashFixedIbor: com.opengamma.util.money.Currency getCurrency()>();

        $d7 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionCashFixedIbor: double getSettlementTime()>();

        $r19 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d7);

        d4 = interfaceinvoke $r17.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface: double getDiscountFactor(com.opengamma.util.money.Currency,java.lang.Double)>($r18, $r19);

        $r20 = new com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackFunctionData;

        $d8 = d4 * d2;

        specialinvoke $r20.<com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackFunctionData: void <init>(double,double,double)>(d1, $d8, d3);

        r5 = virtualinvoke $r15.<com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackPriceFunction: com.opengamma.analytics.math.function.Function1D getPriceFunction(com.opengamma.analytics.financial.model.option.pricing.analytic.formula.EuropeanVanillaOption)>(r1);

        $r21 = virtualinvoke r5.<com.opengamma.analytics.math.function.Function1D: java.lang.Object evaluate(java.lang.Object)>($r20);

        $r22 = (java.lang.Double) $r21;

        $d9 = virtualinvoke $r22.<java.lang.Double: double doubleValue()>();

        $z0 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionCashFixedIbor: boolean isLong()>();

        if $z0 == 0 goto label1;

        $d10 = 1.0;

        goto label2;

     label1:
        $d10 = -1.0;

     label2:
        d5 = $d9 * $d10;

        $r23 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionCashFixedIbor: com.opengamma.util.money.Currency getCurrency()>();

        $r24 = staticinvoke <com.opengamma.util.money.MultipleCurrencyAmount: com.opengamma.util.money.MultipleCurrencyAmount of(com.opengamma.util.money.Currency,double)>($r23, d5);

        return $r24;
    }

    public double impliedVolatility(com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionCashFixedIbor, com.opengamma.analytics.financial.provider.description.interestrate.BlackSwaptionFlatProviderInterface)
    {
        com.opengamma.analytics.financial.interestrate.swaption.provider.SwaptionCashFixedIborBlackMethod r0;
        com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionCashFixedIbor r1;
        com.opengamma.analytics.financial.provider.description.interestrate.BlackSwaptionFlatProviderInterface r2;
        double d0, d1, $d2;
        com.opengamma.analytics.financial.model.option.parameters.BlackFlatSwaptionParameters $r5;

        r0 := @this: com.opengamma.analytics.financial.interestrate.swaption.provider.SwaptionCashFixedIborBlackMethod;

        r1 := @parameter0: com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionCashFixedIbor;

        r2 := @parameter1: com.opengamma.analytics.financial.provider.description.interestrate.BlackSwaptionFlatProviderInterface;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "Swaption");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, "Black volatility for swaption and multicurve");

        d0 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionCashFixedIbor: double getMaturityTime()>();

        $r5 = interfaceinvoke r2.<com.opengamma.analytics.financial.provider.description.interestrate.BlackSwaptionFlatProviderInterface: com.opengamma.analytics.financial.model.option.parameters.BlackFlatSwaptionParameters getBlackParameters()>();

        $d2 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionCashFixedIbor: double getTimeToExpiry()>();

        d1 = virtualinvoke $r5.<com.opengamma.analytics.financial.model.option.parameters.BlackFlatSwaptionParameters: double getVolatility(double,double)>($d2, d0);

        return d1;
    }

    public com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyMulticurveSensitivity presentValueCurveSensitivity(com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionCashFixedIbor, com.opengamma.analytics.financial.provider.description.interestrate.BlackSwaptionFlatProviderInterface)
    {
        com.opengamma.analytics.financial.interestrate.swaption.provider.SwaptionCashFixedIborBlackMethod r0;
        com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionCashFixedIbor r1;
        com.opengamma.analytics.financial.provider.description.interestrate.BlackSwaptionFlatProviderInterface r2;
        double d0, d1, d2, d3, d4, d5, d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20;
        com.opengamma.analytics.financial.provider.sensitivity.multicurve.MulticurveSensitivity r3, r33;
        double[] r6;
        com.opengamma.analytics.financial.interestrate.swap.derivative.SwapFixedCoupon $r10, $r15, $r20, $r22;
        com.opengamma.analytics.financial.provider.calculator.discounting.ParRateDiscountingCalculator $r11;
        com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface $r12, $r17, $r25;
        java.lang.Object $r13, $r18;
        java.lang.Double $r14, $r27;
        com.opengamma.analytics.financial.provider.calculator.discounting.ParRateCurveSensitivityDiscountingCalculator $r16;
        com.opengamma.analytics.financial.interestrate.swap.provider.SwapFixedCouponDiscountingMethod $r19, $r21;
        com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackPriceFunction $r23;
        com.opengamma.analytics.financial.model.option.parameters.BlackFlatSwaptionParameters $r24;
        com.opengamma.util.money.Currency $r26, $r31;
        com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackFunctionData $r28;
        java.util.ArrayList $r29;
        com.opengamma.util.tuple.DoublesPair $r30;
        boolean $z1;
        com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyMulticurveSensitivity $r32;

        r0 := @this: com.opengamma.analytics.financial.interestrate.swaption.provider.SwaptionCashFixedIborBlackMethod;

        r1 := @parameter0: com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionCashFixedIbor;

        r2 := @parameter1: com.opengamma.analytics.financial.provider.description.interestrate.BlackSwaptionFlatProviderInterface;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "Swaption");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, "Curves with Black volatility");

        d0 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionCashFixedIbor: double getMaturityTime()>();

        $r10 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionCashFixedIbor: com.opengamma.analytics.financial.interestrate.swap.derivative.SwapFixedCoupon getUnderlyingSwap()>();

        $r11 = <com.opengamma.analytics.financial.interestrate.swaption.provider.SwaptionCashFixedIborBlackMethod: com.opengamma.analytics.financial.provider.calculator.discounting.ParRateDiscountingCalculator PRDC>;

        $r12 = interfaceinvoke r2.<com.opengamma.analytics.financial.provider.description.interestrate.BlackSwaptionFlatProviderInterface: com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface getMulticurveProvider()>();

        $r13 = virtualinvoke $r10.<com.opengamma.analytics.financial.interestrate.swap.derivative.SwapFixedCoupon: java.lang.Object accept(com.opengamma.analytics.financial.interestrate.InstrumentDerivativeVisitor,java.lang.Object)>($r11, $r12);

        $r14 = (java.lang.Double) $r13;

        d1 = virtualinvoke $r14.<java.lang.Double: double doubleValue()>();

        $r15 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionCashFixedIbor: com.opengamma.analytics.financial.interestrate.swap.derivative.SwapFixedCoupon getUnderlyingSwap()>();

        $r16 = <com.opengamma.analytics.financial.interestrate.swaption.provider.SwaptionCashFixedIborBlackMethod: com.opengamma.analytics.financial.provider.calculator.discounting.ParRateCurveSensitivityDiscountingCalculator PRCS>;

        $r17 = interfaceinvoke r2.<com.opengamma.analytics.financial.provider.description.interestrate.BlackSwaptionFlatProviderInterface: com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface getMulticurveProvider()>();

        $r18 = virtualinvoke $r15.<com.opengamma.analytics.financial.interestrate.swap.derivative.SwapFixedCoupon: java.lang.Object accept(com.opengamma.analytics.financial.interestrate.InstrumentDerivativeVisitor,java.lang.Object)>($r16, $r17);

        r3 = (com.opengamma.analytics.financial.provider.sensitivity.multicurve.MulticurveSensitivity) $r18;

        $r19 = <com.opengamma.analytics.financial.interestrate.swaption.provider.SwaptionCashFixedIborBlackMethod: com.opengamma.analytics.financial.interestrate.swap.provider.SwapFixedCouponDiscountingMethod METHOD_SWAP>;

        $r20 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionCashFixedIbor: com.opengamma.analytics.financial.interestrate.swap.derivative.SwapFixedCoupon getUnderlyingSwap()>();

        d2 = virtualinvoke $r19.<com.opengamma.analytics.financial.interestrate.swap.provider.SwapFixedCouponDiscountingMethod: double getAnnuityCash(com.opengamma.analytics.financial.interestrate.swap.derivative.SwapFixedCoupon,double)>($r20, d1);

        $r21 = <com.opengamma.analytics.financial.interestrate.swaption.provider.SwaptionCashFixedIborBlackMethod: com.opengamma.analytics.financial.interestrate.swap.provider.SwapFixedCouponDiscountingMethod METHOD_SWAP>;

        $r22 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionCashFixedIbor: com.opengamma.analytics.financial.interestrate.swap.derivative.SwapFixedCoupon getUnderlyingSwap()>();

        d3 = virtualinvoke $r21.<com.opengamma.analytics.financial.interestrate.swap.provider.SwapFixedCouponDiscountingMethod: double getAnnuityCashDerivative(com.opengamma.analytics.financial.interestrate.swap.derivative.SwapFixedCoupon,double)>($r22, d1);

        $r23 = new com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackPriceFunction;

        specialinvoke $r23.<com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackPriceFunction: void <init>()>();

        $r24 = interfaceinvoke r2.<com.opengamma.analytics.financial.provider.description.interestrate.BlackSwaptionFlatProviderInterface: com.opengamma.analytics.financial.model.option.parameters.BlackFlatSwaptionParameters getBlackParameters()>();

        $d7 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionCashFixedIbor: double getTimeToExpiry()>();

        d4 = virtualinvoke $r24.<com.opengamma.analytics.financial.model.option.parameters.BlackFlatSwaptionParameters: double getVolatility(double,double)>($d7, d0);

        $r25 = interfaceinvoke r2.<com.opengamma.analytics.financial.provider.description.interestrate.BlackSwaptionFlatProviderInterface: com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface getMulticurveProvider()>();

        $r26 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionCashFixedIbor: com.opengamma.util.money.Currency getCurrency()>();

        $d8 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionCashFixedIbor: double getSettlementTime()>();

        $r27 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d8);

        d5 = interfaceinvoke $r25.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface: double getDiscountFactor(com.opengamma.util.money.Currency,java.lang.Double)>($r26, $r27);

        $r28 = new com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackFunctionData;

        specialinvoke $r28.<com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackFunctionData: void <init>(double,double,double)>(d1, 1.0, d4);

        r6 = virtualinvoke $r23.<com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackPriceFunction: double[] getPriceAdjoint(com.opengamma.analytics.financial.model.option.pricing.analytic.formula.EuropeanVanillaOption,com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackFunctionData)>(r1, $r28);

        $d9 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionCashFixedIbor: double getSettlementTime()>();

        $d10 = neg $d9;

        $d11 = $d10 * d5;

        $d13 = $d11 * d2;

        $d12 = r6[0];

        d6 = $d13 * $d12;

        $r29 = new java.util.ArrayList;

        specialinvoke $r29.<java.util.ArrayList: void <init>()>();

        $d14 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionCashFixedIbor: double getSettlementTime()>();

        $r30 = staticinvoke <com.opengamma.util.tuple.DoublesPair: com.opengamma.util.tuple.DoublesPair of(double,double)>($d14, d6);

        interfaceinvoke $r29.<java.util.List: boolean add(java.lang.Object)>($r30);

        $d15 = r6[0];

        $d18 = d3 * $d15;

        $d16 = r6[1];

        $d17 = d2 * $d16;

        $d19 = $d18 + $d17;

        $d20 = d5 * $d19;

        r33 = virtualinvoke r3.<com.opengamma.analytics.financial.provider.sensitivity.multicurve.MulticurveSensitivity: com.opengamma.analytics.financial.provider.sensitivity.multicurve.MulticurveSensitivity multipliedBy(double)>($d20);

        $z1 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionCashFixedIbor: boolean isLong()>();

        if $z1 != 0 goto label1;

        r33 = virtualinvoke r33.<com.opengamma.analytics.financial.provider.sensitivity.multicurve.MulticurveSensitivity: com.opengamma.analytics.financial.provider.sensitivity.multicurve.MulticurveSensitivity multipliedBy(double)>(-1.0);

     label1:
        $r31 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionCashFixedIbor: com.opengamma.util.money.Currency getCurrency()>();

        $r32 = staticinvoke <com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyMulticurveSensitivity: com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyMulticurveSensitivity of(com.opengamma.util.money.Currency,com.opengamma.analytics.financial.provider.sensitivity.multicurve.MulticurveSensitivity)>($r31, r33);

        return $r32;
    }

    public com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyMulticurveSensitivity presentValueSecondOrderCurveSensitivity(com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionCashFixedIbor, com.opengamma.analytics.financial.provider.description.interestrate.BlackSwaptionFlatProviderInterface)
    {
        com.opengamma.analytics.financial.interestrate.swaption.provider.SwaptionCashFixedIborBlackMethod r0;
        com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionCashFixedIbor r1;
        com.opengamma.analytics.financial.provider.description.interestrate.BlackSwaptionFlatProviderInterface r2;
        double d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21, $d22, $d23, $d24;
        com.opengamma.analytics.financial.provider.sensitivity.multicurve.MulticurveSensitivity r3, r27;
        com.opengamma.analytics.financial.interestrate.swap.derivative.SwapFixedCoupon $r6, $r11, $r16, $r18, $r20;
        com.opengamma.analytics.financial.provider.calculator.discounting.ParRateDiscountingCalculator $r7;
        com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface $r8, $r13, $r22;
        java.lang.Object $r9, $r14;
        java.lang.Double $r10, $r24;
        com.opengamma.analytics.financial.provider.calculator.discounting.ParRateCurveSensitivityDiscountingCalculator $r12;
        com.opengamma.analytics.financial.interestrate.swap.provider.SwapFixedCouponDiscountingMethod $r15, $r17, $r19;
        com.opengamma.analytics.financial.model.option.parameters.BlackFlatSwaptionParameters $r21;
        com.opengamma.util.money.Currency $r23, $r25;
        boolean $z0, $z1, $z2;
        com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyMulticurveSensitivity $r26;

        r0 := @this: com.opengamma.analytics.financial.interestrate.swaption.provider.SwaptionCashFixedIborBlackMethod;

        r1 := @parameter0: com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionCashFixedIbor;

        r2 := @parameter1: com.opengamma.analytics.financial.provider.description.interestrate.BlackSwaptionFlatProviderInterface;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "Swaption");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, "Curves with Black volatility");

        d0 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionCashFixedIbor: double getMaturityTime()>();

        $r6 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionCashFixedIbor: com.opengamma.analytics.financial.interestrate.swap.derivative.SwapFixedCoupon getUnderlyingSwap()>();

        $r7 = <com.opengamma.analytics.financial.interestrate.swaption.provider.SwaptionCashFixedIborBlackMethod: com.opengamma.analytics.financial.provider.calculator.discounting.ParRateDiscountingCalculator PRDC>;

        $r8 = interfaceinvoke r2.<com.opengamma.analytics.financial.provider.description.interestrate.BlackSwaptionFlatProviderInterface: com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface getMulticurveProvider()>();

        $r9 = virtualinvoke $r6.<com.opengamma.analytics.financial.interestrate.swap.derivative.SwapFixedCoupon: java.lang.Object accept(com.opengamma.analytics.financial.interestrate.InstrumentDerivativeVisitor,java.lang.Object)>($r7, $r8);

        $r10 = (java.lang.Double) $r9;

        d1 = virtualinvoke $r10.<java.lang.Double: double doubleValue()>();

        $r11 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionCashFixedIbor: com.opengamma.analytics.financial.interestrate.swap.derivative.SwapFixedCoupon getUnderlyingSwap()>();

        $r12 = <com.opengamma.analytics.financial.interestrate.swaption.provider.SwaptionCashFixedIborBlackMethod: com.opengamma.analytics.financial.provider.calculator.discounting.ParRateCurveSensitivityDiscountingCalculator PRCS>;

        $r13 = interfaceinvoke r2.<com.opengamma.analytics.financial.provider.description.interestrate.BlackSwaptionFlatProviderInterface: com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface getMulticurveProvider()>();

        $r14 = virtualinvoke $r11.<com.opengamma.analytics.financial.interestrate.swap.derivative.SwapFixedCoupon: java.lang.Object accept(com.opengamma.analytics.financial.interestrate.InstrumentDerivativeVisitor,java.lang.Object)>($r12, $r13);

        r3 = (com.opengamma.analytics.financial.provider.sensitivity.multicurve.MulticurveSensitivity) $r14;

        $r15 = <com.opengamma.analytics.financial.interestrate.swaption.provider.SwaptionCashFixedIborBlackMethod: com.opengamma.analytics.financial.interestrate.swap.provider.SwapFixedCouponDiscountingMethod METHOD_SWAP>;

        $r16 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionCashFixedIbor: com.opengamma.analytics.financial.interestrate.swap.derivative.SwapFixedCoupon getUnderlyingSwap()>();

        d2 = virtualinvoke $r15.<com.opengamma.analytics.financial.interestrate.swap.provider.SwapFixedCouponDiscountingMethod: double getAnnuityCash(com.opengamma.analytics.financial.interestrate.swap.derivative.SwapFixedCoupon,double)>($r16, d1);

        $r17 = <com.opengamma.analytics.financial.interestrate.swaption.provider.SwaptionCashFixedIborBlackMethod: com.opengamma.analytics.financial.interestrate.swap.provider.SwapFixedCouponDiscountingMethod METHOD_SWAP>;

        $r18 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionCashFixedIbor: com.opengamma.analytics.financial.interestrate.swap.derivative.SwapFixedCoupon getUnderlyingSwap()>();

        d3 = virtualinvoke $r17.<com.opengamma.analytics.financial.interestrate.swap.provider.SwapFixedCouponDiscountingMethod: double getAnnuityCashDerivative(com.opengamma.analytics.financial.interestrate.swap.derivative.SwapFixedCoupon,double)>($r18, d1);

        $r19 = <com.opengamma.analytics.financial.interestrate.swaption.provider.SwaptionCashFixedIborBlackMethod: com.opengamma.analytics.financial.interestrate.swap.provider.SwapFixedCouponDiscountingMethod METHOD_SWAP>;

        $r20 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionCashFixedIbor: com.opengamma.analytics.financial.interestrate.swap.derivative.SwapFixedCoupon getUnderlyingSwap()>();

        d4 = virtualinvoke $r19.<com.opengamma.analytics.financial.interestrate.swap.provider.SwapFixedCouponDiscountingMethod: double getAnnuityCashSecondDerivative(com.opengamma.analytics.financial.interestrate.swap.derivative.SwapFixedCoupon,double)>($r20, d1);

        $r21 = interfaceinvoke r2.<com.opengamma.analytics.financial.provider.description.interestrate.BlackSwaptionFlatProviderInterface: com.opengamma.analytics.financial.model.option.parameters.BlackFlatSwaptionParameters getBlackParameters()>();

        $d10 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionCashFixedIbor: double getTimeToExpiry()>();

        d5 = virtualinvoke $r21.<com.opengamma.analytics.financial.model.option.parameters.BlackFlatSwaptionParameters: double getVolatility(double,double)>($d10, d0);

        $r22 = interfaceinvoke r2.<com.opengamma.analytics.financial.provider.description.interestrate.BlackSwaptionFlatProviderInterface: com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface getMulticurveProvider()>();

        $r23 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionCashFixedIbor: com.opengamma.util.money.Currency getCurrency()>();

        $d11 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionCashFixedIbor: double getSettlementTime()>();

        $r24 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d11);

        d6 = interfaceinvoke $r22.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface: double getDiscountFactor(com.opengamma.util.money.Currency,java.lang.Double)>($r23, $r24);

        $d12 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionCashFixedIbor: double getStrike()>();

        $d13 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionCashFixedIbor: double getTimeToExpiry()>();

        $z0 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionCashFixedIbor: boolean isCall()>();

        d7 = staticinvoke <com.opengamma.analytics.financial.model.volatility.BlackFormulaRepository: double price(double,double,double,double,boolean)>(d1, $d12, d5, $d13, $z0);

        $d14 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionCashFixedIbor: double getStrike()>();

        $d15 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionCashFixedIbor: double getTimeToExpiry()>();

        $z1 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionCashFixedIbor: boolean isCall()>();

        d8 = staticinvoke <com.opengamma.analytics.financial.model.volatility.BlackFormulaRepository: double delta(double,double,double,double,boolean)>(d1, $d14, d5, $d15, $z1);

        $d16 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionCashFixedIbor: double getStrike()>();

        $d17 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionCashFixedIbor: double getTimeToExpiry()>();

        d9 = staticinvoke <com.opengamma.analytics.financial.model.volatility.BlackFormulaRepository: double gamma(double,double,double,double)>(d1, $d16, d5, $d17);

        $d20 = d4 * d7;

        $d18 = 2.0 * d3;

        $d19 = $d18 * d8;

        $d22 = $d20 + $d19;

        $d21 = d2 * d9;

        $d23 = $d22 + $d21;

        $d24 = d6 * $d23;

        r27 = virtualinvoke r3.<com.opengamma.analytics.financial.provider.sensitivity.multicurve.MulticurveSensitivity: com.opengamma.analytics.financial.provider.sensitivity.multicurve.MulticurveSensitivity multipliedBy(double)>($d24);

        $z2 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionCashFixedIbor: boolean isLong()>();

        if $z2 != 0 goto label1;

        r27 = virtualinvoke r27.<com.opengamma.analytics.financial.provider.sensitivity.multicurve.MulticurveSensitivity: com.opengamma.analytics.financial.provider.sensitivity.multicurve.MulticurveSensitivity multipliedBy(double)>(-1.0);

     label1:
        $r25 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionCashFixedIbor: com.opengamma.util.money.Currency getCurrency()>();

        $r26 = staticinvoke <com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyMulticurveSensitivity: com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyMulticurveSensitivity of(com.opengamma.util.money.Currency,com.opengamma.analytics.financial.provider.sensitivity.multicurve.MulticurveSensitivity)>($r25, r27);

        return $r26;
    }

    public com.opengamma.analytics.financial.interestrate.sensitivity.PresentValueSwaptionSurfaceSensitivity presentValueBlackSensitivity(com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionCashFixedIbor, com.opengamma.analytics.financial.provider.description.interestrate.BlackSwaptionFlatProviderInterface)
    {
        com.opengamma.analytics.financial.interestrate.swaption.provider.SwaptionCashFixedIborBlackMethod r0;
        com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionCashFixedIbor r1;
        com.opengamma.analytics.financial.provider.description.interestrate.BlackSwaptionFlatProviderInterface r2;
        double d0, d1, d2, d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11;
        com.opengamma.util.tuple.DoublesPair r3;
        double[] r6;
        com.opengamma.analytics.financial.interestrate.swap.derivative.SwapFixedCoupon $r10, $r16;
        com.opengamma.analytics.financial.provider.calculator.discounting.ParRateDiscountingCalculator $r11;
        com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface $r12, $r17;
        java.lang.Object $r13;
        java.lang.Double $r14, $r19, $r24;
        com.opengamma.analytics.financial.interestrate.swap.provider.SwapFixedCouponDiscountingMethod $r15;
        com.opengamma.util.money.Currency $r18;
        com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackPriceFunction $r20;
        com.opengamma.analytics.financial.model.option.parameters.BlackFlatSwaptionParameters $r21, $r27;
        com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackFunctionData $r22;
        java.util.HashMap $r23;
        boolean $z0;
        com.opengamma.analytics.financial.interestrate.sensitivity.PresentValueSwaptionSurfaceSensitivity $r26;
        com.opengamma.analytics.financial.instrument.index.GeneratorInstrument $r28;

        r0 := @this: com.opengamma.analytics.financial.interestrate.swaption.provider.SwaptionCashFixedIborBlackMethod;

        r1 := @parameter0: com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionCashFixedIbor;

        r2 := @parameter1: com.opengamma.analytics.financial.provider.description.interestrate.BlackSwaptionFlatProviderInterface;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "Swaption");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, "Curves with Black volatility");

        $r10 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionCashFixedIbor: com.opengamma.analytics.financial.interestrate.swap.derivative.SwapFixedCoupon getUnderlyingSwap()>();

        $r11 = <com.opengamma.analytics.financial.interestrate.swaption.provider.SwaptionCashFixedIborBlackMethod: com.opengamma.analytics.financial.provider.calculator.discounting.ParRateDiscountingCalculator PRDC>;

        $r12 = interfaceinvoke r2.<com.opengamma.analytics.financial.provider.description.interestrate.BlackSwaptionFlatProviderInterface: com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface getMulticurveProvider()>();

        $r13 = virtualinvoke $r10.<com.opengamma.analytics.financial.interestrate.swap.derivative.SwapFixedCoupon: java.lang.Object accept(com.opengamma.analytics.financial.interestrate.InstrumentDerivativeVisitor,java.lang.Object)>($r11, $r12);

        $r14 = (java.lang.Double) $r13;

        d0 = virtualinvoke $r14.<java.lang.Double: double doubleValue()>();

        $r15 = <com.opengamma.analytics.financial.interestrate.swaption.provider.SwaptionCashFixedIborBlackMethod: com.opengamma.analytics.financial.interestrate.swap.provider.SwapFixedCouponDiscountingMethod METHOD_SWAP>;

        $r16 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionCashFixedIbor: com.opengamma.analytics.financial.interestrate.swap.derivative.SwapFixedCoupon getUnderlyingSwap()>();

        d1 = virtualinvoke $r15.<com.opengamma.analytics.financial.interestrate.swap.provider.SwapFixedCouponDiscountingMethod: double getAnnuityCash(com.opengamma.analytics.financial.interestrate.swap.derivative.SwapFixedCoupon,double)>($r16, d0);

        $r17 = interfaceinvoke r2.<com.opengamma.analytics.financial.provider.description.interestrate.BlackSwaptionFlatProviderInterface: com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface getMulticurveProvider()>();

        $r18 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionCashFixedIbor: com.opengamma.util.money.Currency getCurrency()>();

        $d4 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionCashFixedIbor: double getSettlementTime()>();

        $r19 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d4);

        d2 = interfaceinvoke $r17.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface: double getDiscountFactor(com.opengamma.util.money.Currency,java.lang.Double)>($r18, $r19);

        $d5 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionCashFixedIbor: double getTimeToExpiry()>();

        $d6 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionCashFixedIbor: double getMaturityTime()>();

        r3 = staticinvoke <com.opengamma.util.tuple.DoublesPair: com.opengamma.util.tuple.DoublesPair of(double,double)>($d5, $d6);

        $r20 = new com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackPriceFunction;

        specialinvoke $r20.<com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackPriceFunction: void <init>()>();

        $r21 = interfaceinvoke r2.<com.opengamma.analytics.financial.provider.description.interestrate.BlackSwaptionFlatProviderInterface: com.opengamma.analytics.financial.model.option.parameters.BlackFlatSwaptionParameters getBlackParameters()>();

        d3 = virtualinvoke $r21.<com.opengamma.analytics.financial.model.option.parameters.BlackFlatSwaptionParameters: double getVolatility(com.opengamma.util.tuple.DoublesPair)>(r3);

        $r22 = new com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackFunctionData;

        specialinvoke $r22.<com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackFunctionData: void <init>(double,double,double)>(d0, 1.0, d3);

        r6 = virtualinvoke $r20.<com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackPriceFunction: double[] getPriceAdjoint(com.opengamma.analytics.financial.model.option.pricing.analytic.formula.EuropeanVanillaOption,com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackFunctionData)>(r1, $r22);

        $r23 = new java.util.HashMap;

        specialinvoke $r23.<java.util.HashMap: void <init>()>();

        $d7 = r6[2];

        $d8 = $d7 * d1;

        $d9 = $d8 * d2;

        $z0 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionCashFixedIbor: boolean isLong()>();

        if $z0 == 0 goto label1;

        $d11 = 1.0;

        goto label2;

     label1:
        $d11 = -1.0;

     label2:
        $d10 = $d9 * $d11;

        $r24 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d10);

        interfaceinvoke $r23.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r3, $r24);

        $r26 = new com.opengamma.analytics.financial.interestrate.sensitivity.PresentValueSwaptionSurfaceSensitivity;

        $r27 = interfaceinvoke r2.<com.opengamma.analytics.financial.provider.description.interestrate.BlackSwaptionFlatProviderInterface: com.opengamma.analytics.financial.model.option.parameters.BlackFlatSwaptionParameters getBlackParameters()>();

        $r28 = virtualinvoke $r27.<com.opengamma.analytics.financial.model.option.parameters.BlackFlatSwaptionParameters: com.opengamma.analytics.financial.instrument.index.GeneratorInstrument getGeneratorSwap()>();

        specialinvoke $r26.<com.opengamma.analytics.financial.interestrate.sensitivity.PresentValueSwaptionSurfaceSensitivity: void <init>(java.util.Map,com.opengamma.analytics.financial.instrument.index.GeneratorInstrument)>($r23, $r28);

        return $r26;
    }

    static void <clinit>()
    {
        com.opengamma.analytics.financial.interestrate.swaption.provider.SwaptionCashFixedIborBlackMethod $r0;
        com.opengamma.analytics.financial.provider.calculator.discounting.ParRateCurveSensitivityDiscountingCalculator $r1;
        com.opengamma.analytics.financial.provider.calculator.discounting.ParRateDiscountingCalculator $r2;
        com.opengamma.analytics.financial.interestrate.swap.provider.SwapFixedCouponDiscountingMethod $r3;

        $r0 = new com.opengamma.analytics.financial.interestrate.swaption.provider.SwaptionCashFixedIborBlackMethod;

        specialinvoke $r0.<com.opengamma.analytics.financial.interestrate.swaption.provider.SwaptionCashFixedIborBlackMethod: void <init>()>();

        <com.opengamma.analytics.financial.interestrate.swaption.provider.SwaptionCashFixedIborBlackMethod: com.opengamma.analytics.financial.interestrate.swaption.provider.SwaptionCashFixedIborBlackMethod INSTANCE> = $r0;

        $r1 = staticinvoke <com.opengamma.analytics.financial.provider.calculator.discounting.ParRateCurveSensitivityDiscountingCalculator: com.opengamma.analytics.financial.provider.calculator.discounting.ParRateCurveSensitivityDiscountingCalculator getInstance()>();

        <com.opengamma.analytics.financial.interestrate.swaption.provider.SwaptionCashFixedIborBlackMethod: com.opengamma.analytics.financial.provider.calculator.discounting.ParRateCurveSensitivityDiscountingCalculator PRCS> = $r1;

        $r2 = staticinvoke <com.opengamma.analytics.financial.provider.calculator.discounting.ParRateDiscountingCalculator: com.opengamma.analytics.financial.provider.calculator.discounting.ParRateDiscountingCalculator getInstance()>();

        <com.opengamma.analytics.financial.interestrate.swaption.provider.SwaptionCashFixedIborBlackMethod: com.opengamma.analytics.financial.provider.calculator.discounting.ParRateDiscountingCalculator PRDC> = $r2;

        $r3 = staticinvoke <com.opengamma.analytics.financial.interestrate.swap.provider.SwapFixedCouponDiscountingMethod: com.opengamma.analytics.financial.interestrate.swap.provider.SwapFixedCouponDiscountingMethod getInstance()>();

        <com.opengamma.analytics.financial.interestrate.swaption.provider.SwaptionCashFixedIborBlackMethod: com.opengamma.analytics.financial.interestrate.swap.provider.SwapFixedCouponDiscountingMethod METHOD_SWAP> = $r3;

        return;
    }
}
