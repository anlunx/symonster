public class org.omg.PortableServer.ThreadPolicyValue extends java.lang.Object implements org.omg.CORBA.portable.IDLEntity
{
    private int __value;
    private static int __size;
    private static org.omg.PortableServer.ThreadPolicyValue[] __array;
    public static final int _ORB_CTRL_MODEL;
    public static final org.omg.PortableServer.ThreadPolicyValue ORB_CTRL_MODEL;
    public static final int _SINGLE_THREAD_MODEL;
    public static final org.omg.PortableServer.ThreadPolicyValue SINGLE_THREAD_MODEL;

    public int value()
    {
        org.omg.PortableServer.ThreadPolicyValue r0;
        int $i0;

        r0 := @this: org.omg.PortableServer.ThreadPolicyValue;

        $i0 = r0.<org.omg.PortableServer.ThreadPolicyValue: int __value>;

        return $i0;
    }

    public static org.omg.PortableServer.ThreadPolicyValue from_int(int)
    {
        int i0, $i1;
        org.omg.CORBA.BAD_PARAM $r0;
        org.omg.PortableServer.ThreadPolicyValue[] $r1;
        org.omg.PortableServer.ThreadPolicyValue $r2;

        i0 := @parameter0: int;

        if i0 < 0 goto label1;

        $i1 = <org.omg.PortableServer.ThreadPolicyValue: int __size>;

        if i0 >= $i1 goto label1;

        $r1 = <org.omg.PortableServer.ThreadPolicyValue: org.omg.PortableServer.ThreadPolicyValue[] __array>;

        $r2 = $r1[i0];

        return $r2;

     label1:
        $r0 = new org.omg.CORBA.BAD_PARAM;

        specialinvoke $r0.<org.omg.CORBA.BAD_PARAM: void <init>()>();

        throw $r0;
    }

    protected void <init>(int)
    {
        org.omg.PortableServer.ThreadPolicyValue r0;
        int i0, $i1;
        org.omg.PortableServer.ThreadPolicyValue[] $r1;

        r0 := @this: org.omg.PortableServer.ThreadPolicyValue;

        i0 := @parameter0: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.omg.PortableServer.ThreadPolicyValue: int __value> = i0;

        $r1 = <org.omg.PortableServer.ThreadPolicyValue: org.omg.PortableServer.ThreadPolicyValue[] __array>;

        $i1 = r0.<org.omg.PortableServer.ThreadPolicyValue: int __value>;

        $r1[$i1] = r0;

        return;
    }

    static void <clinit>()
    {
        int $i0;
        org.omg.PortableServer.ThreadPolicyValue[] $r0;
        org.omg.PortableServer.ThreadPolicyValue $r1, $r2;

        <org.omg.PortableServer.ThreadPolicyValue: int _SINGLE_THREAD_MODEL> = 1;

        <org.omg.PortableServer.ThreadPolicyValue: int _ORB_CTRL_MODEL> = 0;

        <org.omg.PortableServer.ThreadPolicyValue: int __size> = 2;

        $i0 = <org.omg.PortableServer.ThreadPolicyValue: int __size>;

        $r0 = newarray (org.omg.PortableServer.ThreadPolicyValue)[$i0];

        <org.omg.PortableServer.ThreadPolicyValue: org.omg.PortableServer.ThreadPolicyValue[] __array> = $r0;

        $r1 = new org.omg.PortableServer.ThreadPolicyValue;

        specialinvoke $r1.<org.omg.PortableServer.ThreadPolicyValue: void <init>(int)>(0);

        <org.omg.PortableServer.ThreadPolicyValue: org.omg.PortableServer.ThreadPolicyValue ORB_CTRL_MODEL> = $r1;

        $r2 = new org.omg.PortableServer.ThreadPolicyValue;

        specialinvoke $r2.<org.omg.PortableServer.ThreadPolicyValue: void <init>(int)>(1);

        <org.omg.PortableServer.ThreadPolicyValue: org.omg.PortableServer.ThreadPolicyValue SINGLE_THREAD_MODEL> = $r2;

        return;
    }
}
