public class com.opengamma.analytics.financial.model.volatility.smile.fitting.SVINonLinearLeastSquareFitter extends com.opengamma.analytics.financial.model.volatility.smile.fitting.LeastSquareSmileFitter
{
    private static final int N_PARAMETERS;
    private static final com.opengamma.analytics.math.minimization.ParameterLimitsTransform[] TRANSFORMS;
    private static final com.opengamma.analytics.financial.model.volatility.smile.function.SVIVolatilityFunction FORMULA;
    private final com.opengamma.analytics.math.statistics.leastsquare.NonLinearLeastSquare _solver;

    public void <init>()
    {
        com.opengamma.analytics.financial.model.volatility.smile.fitting.SVINonLinearLeastSquareFitter r0;
        com.opengamma.analytics.math.statistics.leastsquare.NonLinearLeastSquare $r1;
        com.opengamma.analytics.math.matrix.OGMatrixAlgebra $r2;
        com.opengamma.analytics.math.linearalgebra.Decomposition $r3;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.smile.fitting.SVINonLinearLeastSquareFitter;

        $r1 = new com.opengamma.analytics.math.statistics.leastsquare.NonLinearLeastSquare;

        $r3 = <com.opengamma.analytics.math.linearalgebra.DecompositionFactory: com.opengamma.analytics.math.linearalgebra.Decomposition SV_COLT>;

        $r2 = <com.opengamma.analytics.math.matrix.MatrixAlgebraFactory: com.opengamma.analytics.math.matrix.OGMatrixAlgebra OG_ALGEBRA>;

        specialinvoke $r1.<com.opengamma.analytics.math.statistics.leastsquare.NonLinearLeastSquare: void <init>(com.opengamma.analytics.math.linearalgebra.Decomposition,com.opengamma.analytics.math.matrix.MatrixAlgebra,double)>($r3, $r2, 1.0E-4);

        specialinvoke r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.SVINonLinearLeastSquareFitter: void <init>(com.opengamma.analytics.math.statistics.leastsquare.NonLinearLeastSquare)>($r1);

        return;
    }

    public void <init>(com.opengamma.analytics.math.statistics.leastsquare.NonLinearLeastSquare)
    {
        com.opengamma.analytics.financial.model.volatility.smile.fitting.SVINonLinearLeastSquareFitter r0;
        com.opengamma.analytics.math.statistics.leastsquare.NonLinearLeastSquare r1;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.smile.fitting.SVINonLinearLeastSquareFitter;

        r1 := @parameter0: com.opengamma.analytics.math.statistics.leastsquare.NonLinearLeastSquare;

        specialinvoke r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.LeastSquareSmileFitter: void <init>()>();

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object,java.lang.String)>(r1, "solver");

        r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.SVINonLinearLeastSquareFitter: com.opengamma.analytics.math.statistics.leastsquare.NonLinearLeastSquare _solver> = r1;

        return;
    }

    public com.opengamma.analytics.math.statistics.leastsquare.LeastSquareResultsWithTransform getFitResult(com.opengamma.analytics.financial.model.option.pricing.analytic.formula.EuropeanVanillaOption[], com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackFunctionData[], double[], java.util.BitSet)
    {
        com.opengamma.analytics.financial.model.volatility.smile.fitting.SVINonLinearLeastSquareFitter r0;
        com.opengamma.analytics.financial.model.option.pricing.analytic.formula.EuropeanVanillaOption[] r1;
        com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackFunctionData[] r2;
        double[] r3;
        java.util.BitSet r4;
        com.opengamma.analytics.math.statistics.leastsquare.LeastSquareResultsWithTransform $r5;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.smile.fitting.SVINonLinearLeastSquareFitter;

        r1 := @parameter0: com.opengamma.analytics.financial.model.option.pricing.analytic.formula.EuropeanVanillaOption[];

        r2 := @parameter1: com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackFunctionData[];

        r3 := @parameter2: double[];

        r4 := @parameter3: java.util.BitSet;

        $r5 = virtualinvoke r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.SVINonLinearLeastSquareFitter: com.opengamma.analytics.math.statistics.leastsquare.LeastSquareResultsWithTransform getFitResult(com.opengamma.analytics.financial.model.option.pricing.analytic.formula.EuropeanVanillaOption[],com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackFunctionData[],double[],double[],java.util.BitSet)>(r1, r2, null, r3, r4);

        return $r5;
    }

    public com.opengamma.analytics.math.statistics.leastsquare.LeastSquareResultsWithTransform getFitResult(com.opengamma.analytics.financial.model.option.pricing.analytic.formula.EuropeanVanillaOption[], com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackFunctionData[], double[], double[], java.util.BitSet)
    {
        com.opengamma.analytics.financial.model.volatility.smile.fitting.SVINonLinearLeastSquareFitter r0;
        com.opengamma.analytics.financial.model.option.pricing.analytic.formula.EuropeanVanillaOption[] r1;
        com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackFunctionData[] r2;
        double[] r3, r4, r6, r7, r8;
        java.util.BitSet r5;
        int i0, i1;
        double d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, d9;
        com.opengamma.analytics.math.matrix.DoubleMatrix1D r11, $r19, $r22, $r23, $r25, $r26, $r28, $r30;
        com.opengamma.analytics.financial.model.option.pricing.analytic.formula.EuropeanVanillaOption $r13, $r14, $r31, $r36, $r39;
        com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackFunctionData $r15, $r16, $r17, $r40, $r41;
        com.opengamma.analytics.math.minimization.UncoupledParameterTransforms $r18;
        com.opengamma.analytics.math.minimization.ParameterLimitsTransform[] $r20;
        com.opengamma.analytics.financial.model.volatility.smile.fitting.SVINonLinearLeastSquareFitter$1 $r21;
        com.opengamma.analytics.math.statistics.leastsquare.NonLinearLeastSquare $r24, $r29;
        com.opengamma.analytics.math.statistics.leastsquare.LeastSquareResultsWithTransform $r27;
        boolean $z0;
        java.lang.StringBuilder $r32, $r33, $r34, $r35, $r37;
        java.lang.String $r38;
        com.opengamma.analytics.math.statistics.leastsquare.LeastSquareResults $r42;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.smile.fitting.SVINonLinearLeastSquareFitter;

        r1 := @parameter0: com.opengamma.analytics.financial.model.option.pricing.analytic.formula.EuropeanVanillaOption[];

        r2 := @parameter1: com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackFunctionData[];

        r3 := @parameter2: double[];

        r4 := @parameter3: double[];

        r5 := @parameter4: java.util.BitSet;

        virtualinvoke r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.SVINonLinearLeastSquareFitter: void testData(com.opengamma.analytics.financial.model.option.pricing.analytic.formula.EuropeanVanillaOption[],com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackFunctionData[],double[],double[],java.util.BitSet,int)>(r1, r2, r3, r4, r5, 5);

        i0 = lengthof r1;

        r6 = newarray (double)[i0];

        r7 = newarray (double)[i0];

        r8 = newarray (double)[i0];

        $r13 = r1[0];

        d0 = virtualinvoke $r13.<com.opengamma.analytics.financial.model.option.pricing.analytic.formula.EuropeanVanillaOption: double getTimeToExpiry()>();

        $r14 = r1[0];

        $d1 = virtualinvoke $r14.<com.opengamma.analytics.financial.model.option.pricing.analytic.formula.EuropeanVanillaOption: double getStrike()>();

        r6[0] = $d1;

        $r15 = r2[0];

        $d2 = virtualinvoke $r15.<com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackFunctionData: double getBlackVolatility()>();

        r8[0] = $d2;

        $r16 = r2[0];

        $d3 = virtualinvoke $r16.<com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackFunctionData: double getForward()>();

        r7[0] = $d3;

        i1 = 1;

     label1:
        if i1 >= i0 goto label2;

        $r31 = r1[i1];

        $d4 = virtualinvoke $r31.<com.opengamma.analytics.financial.model.option.pricing.analytic.formula.EuropeanVanillaOption: double getTimeToExpiry()>();

        $z0 = staticinvoke <com.opengamma.util.CompareUtils: boolean closeEquals(double,double)>($d4, d0);

        $r32 = new java.lang.StringBuilder;

        specialinvoke $r32.<java.lang.StringBuilder: void <init>()>();

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("All options must have the same maturity ");

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>(d0);

        $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; have one with maturity ");

        $r36 = r1[i1];

        $d5 = virtualinvoke $r36.<com.opengamma.analytics.financial.model.option.pricing.analytic.formula.EuropeanVanillaOption: double getTimeToExpiry()>();

        $r37 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d5);

        $r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <org.apache.commons.lang.Validate: void isTrue(boolean,java.lang.String)>($z0, $r38);

        $r39 = r1[i1];

        $d6 = virtualinvoke $r39.<com.opengamma.analytics.financial.model.option.pricing.analytic.formula.EuropeanVanillaOption: double getStrike()>();

        r6[i1] = $d6;

        $r40 = r2[i1];

        $d7 = virtualinvoke $r40.<com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackFunctionData: double getBlackVolatility()>();

        r8[i1] = $d7;

        $r41 = r2[i1];

        $d8 = virtualinvoke $r41.<com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackFunctionData: double getForward()>();

        r7[i1] = $d8;

        i1 = i1 + 1;

        goto label1;

     label2:
        $r17 = r2[0];

        d9 = virtualinvoke $r17.<com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackFunctionData: double getForward()>();

        $r18 = new com.opengamma.analytics.math.minimization.UncoupledParameterTransforms;

        $r19 = new com.opengamma.analytics.math.matrix.DoubleMatrix1D;

        specialinvoke $r19.<com.opengamma.analytics.math.matrix.DoubleMatrix1D: void <init>(double[])>(r4);

        $r20 = <com.opengamma.analytics.financial.model.volatility.smile.fitting.SVINonLinearLeastSquareFitter: com.opengamma.analytics.math.minimization.ParameterLimitsTransform[] TRANSFORMS>;

        specialinvoke $r18.<com.opengamma.analytics.math.minimization.UncoupledParameterTransforms: void <init>(com.opengamma.analytics.math.matrix.DoubleMatrix1D,com.opengamma.analytics.math.minimization.ParameterLimitsTransform[],java.util.BitSet)>($r19, $r20, r5);

        $r21 = new com.opengamma.analytics.financial.model.volatility.smile.fitting.SVINonLinearLeastSquareFitter$1;

        specialinvoke $r21.<com.opengamma.analytics.financial.model.volatility.smile.fitting.SVINonLinearLeastSquareFitter$1: void <init>(com.opengamma.analytics.financial.model.volatility.smile.fitting.SVINonLinearLeastSquareFitter,com.opengamma.analytics.math.minimization.UncoupledParameterTransforms,double,double)>(r0, $r18, d0, d9);

        $r22 = new com.opengamma.analytics.math.matrix.DoubleMatrix1D;

        specialinvoke $r22.<com.opengamma.analytics.math.matrix.DoubleMatrix1D: void <init>(double[])>(r4);

        r11 = virtualinvoke $r18.<com.opengamma.analytics.math.minimization.UncoupledParameterTransforms: com.opengamma.analytics.math.matrix.DoubleMatrix1D transform(com.opengamma.analytics.math.matrix.DoubleMatrix1D)>($r22);

        if r3 != null goto label3;

        $r29 = r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.SVINonLinearLeastSquareFitter: com.opengamma.analytics.math.statistics.leastsquare.NonLinearLeastSquare _solver>;

        $r28 = new com.opengamma.analytics.math.matrix.DoubleMatrix1D;

        specialinvoke $r28.<com.opengamma.analytics.math.matrix.DoubleMatrix1D: void <init>(double[])>(r6);

        $r30 = new com.opengamma.analytics.math.matrix.DoubleMatrix1D;

        specialinvoke $r30.<com.opengamma.analytics.math.matrix.DoubleMatrix1D: void <init>(double[])>(r8);

        $r42 = virtualinvoke $r29.<com.opengamma.analytics.math.statistics.leastsquare.NonLinearLeastSquare: com.opengamma.analytics.math.statistics.leastsquare.LeastSquareResults solve(com.opengamma.analytics.math.matrix.DoubleMatrix1D,com.opengamma.analytics.math.matrix.DoubleMatrix1D,com.opengamma.analytics.math.function.ParameterizedFunction,com.opengamma.analytics.math.matrix.DoubleMatrix1D)>($r28, $r30, $r21, r11);

        goto label4;

     label3:
        $r24 = r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.SVINonLinearLeastSquareFitter: com.opengamma.analytics.math.statistics.leastsquare.NonLinearLeastSquare _solver>;

        $r23 = new com.opengamma.analytics.math.matrix.DoubleMatrix1D;

        specialinvoke $r23.<com.opengamma.analytics.math.matrix.DoubleMatrix1D: void <init>(double[])>(r6);

        $r25 = new com.opengamma.analytics.math.matrix.DoubleMatrix1D;

        specialinvoke $r25.<com.opengamma.analytics.math.matrix.DoubleMatrix1D: void <init>(double[])>(r8);

        $r26 = new com.opengamma.analytics.math.matrix.DoubleMatrix1D;

        specialinvoke $r26.<com.opengamma.analytics.math.matrix.DoubleMatrix1D: void <init>(double[])>(r3);

        $r42 = virtualinvoke $r24.<com.opengamma.analytics.math.statistics.leastsquare.NonLinearLeastSquare: com.opengamma.analytics.math.statistics.leastsquare.LeastSquareResults solve(com.opengamma.analytics.math.matrix.DoubleMatrix1D,com.opengamma.analytics.math.matrix.DoubleMatrix1D,com.opengamma.analytics.math.matrix.DoubleMatrix1D,com.opengamma.analytics.math.function.ParameterizedFunction,com.opengamma.analytics.math.matrix.DoubleMatrix1D)>($r23, $r25, $r26, $r21, r11);

     label4:
        $r27 = new com.opengamma.analytics.math.statistics.leastsquare.LeastSquareResultsWithTransform;

        specialinvoke $r27.<com.opengamma.analytics.math.statistics.leastsquare.LeastSquareResultsWithTransform: void <init>(com.opengamma.analytics.math.statistics.leastsquare.LeastSquareResults,com.opengamma.analytics.math.minimization.NonLinearParameterTransforms)>($r42, $r18);

        return $r27;
    }

    static com.opengamma.analytics.financial.model.volatility.smile.function.SVIVolatilityFunction access$000()
    {
        com.opengamma.analytics.financial.model.volatility.smile.function.SVIVolatilityFunction $r0;

        $r0 = <com.opengamma.analytics.financial.model.volatility.smile.fitting.SVINonLinearLeastSquareFitter: com.opengamma.analytics.financial.model.volatility.smile.function.SVIVolatilityFunction FORMULA>;

        return $r0;
    }

    static void <clinit>()
    {
        com.opengamma.analytics.financial.model.volatility.smile.function.SVIVolatilityFunction $r0;
        com.opengamma.analytics.math.minimization.ParameterLimitsTransform[] $r1, $r4, $r7, $r9, $r12, $r14;
        com.opengamma.analytics.math.minimization.SingleRangeLimitTransform $r2, $r5, $r10;
        com.opengamma.analytics.math.minimization.ParameterLimitsTransform$LimitType $r3, $r6, $r11;
        com.opengamma.analytics.math.minimization.DoubleRangeLimitTransform $r8;
        com.opengamma.analytics.math.minimization.NullTransform $r13;

        <com.opengamma.analytics.financial.model.volatility.smile.fitting.SVINonLinearLeastSquareFitter: int N_PARAMETERS> = 5;

        $r0 = new com.opengamma.analytics.financial.model.volatility.smile.function.SVIVolatilityFunction;

        specialinvoke $r0.<com.opengamma.analytics.financial.model.volatility.smile.function.SVIVolatilityFunction: void <init>()>();

        <com.opengamma.analytics.financial.model.volatility.smile.fitting.SVINonLinearLeastSquareFitter: com.opengamma.analytics.financial.model.volatility.smile.function.SVIVolatilityFunction FORMULA> = $r0;

        $r1 = newarray (com.opengamma.analytics.math.minimization.ParameterLimitsTransform)[5];

        <com.opengamma.analytics.financial.model.volatility.smile.fitting.SVINonLinearLeastSquareFitter: com.opengamma.analytics.math.minimization.ParameterLimitsTransform[] TRANSFORMS> = $r1;

        $r4 = <com.opengamma.analytics.financial.model.volatility.smile.fitting.SVINonLinearLeastSquareFitter: com.opengamma.analytics.math.minimization.ParameterLimitsTransform[] TRANSFORMS>;

        $r2 = new com.opengamma.analytics.math.minimization.SingleRangeLimitTransform;

        $r3 = <com.opengamma.analytics.math.minimization.ParameterLimitsTransform$LimitType: com.opengamma.analytics.math.minimization.ParameterLimitsTransform$LimitType GREATER_THAN>;

        specialinvoke $r2.<com.opengamma.analytics.math.minimization.SingleRangeLimitTransform: void <init>(double,com.opengamma.analytics.math.minimization.ParameterLimitsTransform$LimitType)>(0.0, $r3);

        $r4[0] = $r2;

        $r7 = <com.opengamma.analytics.financial.model.volatility.smile.fitting.SVINonLinearLeastSquareFitter: com.opengamma.analytics.math.minimization.ParameterLimitsTransform[] TRANSFORMS>;

        $r5 = new com.opengamma.analytics.math.minimization.SingleRangeLimitTransform;

        $r6 = <com.opengamma.analytics.math.minimization.ParameterLimitsTransform$LimitType: com.opengamma.analytics.math.minimization.ParameterLimitsTransform$LimitType GREATER_THAN>;

        specialinvoke $r5.<com.opengamma.analytics.math.minimization.SingleRangeLimitTransform: void <init>(double,com.opengamma.analytics.math.minimization.ParameterLimitsTransform$LimitType)>(0.0, $r6);

        $r7[1] = $r5;

        $r9 = <com.opengamma.analytics.financial.model.volatility.smile.fitting.SVINonLinearLeastSquareFitter: com.opengamma.analytics.math.minimization.ParameterLimitsTransform[] TRANSFORMS>;

        $r8 = new com.opengamma.analytics.math.minimization.DoubleRangeLimitTransform;

        specialinvoke $r8.<com.opengamma.analytics.math.minimization.DoubleRangeLimitTransform: void <init>(double,double)>(-1.0, 1.0);

        $r9[2] = $r8;

        $r12 = <com.opengamma.analytics.financial.model.volatility.smile.fitting.SVINonLinearLeastSquareFitter: com.opengamma.analytics.math.minimization.ParameterLimitsTransform[] TRANSFORMS>;

        $r10 = new com.opengamma.analytics.math.minimization.SingleRangeLimitTransform;

        $r11 = <com.opengamma.analytics.math.minimization.ParameterLimitsTransform$LimitType: com.opengamma.analytics.math.minimization.ParameterLimitsTransform$LimitType GREATER_THAN>;

        specialinvoke $r10.<com.opengamma.analytics.math.minimization.SingleRangeLimitTransform: void <init>(double,com.opengamma.analytics.math.minimization.ParameterLimitsTransform$LimitType)>(0.0, $r11);

        $r12[3] = $r10;

        $r14 = <com.opengamma.analytics.financial.model.volatility.smile.fitting.SVINonLinearLeastSquareFitter: com.opengamma.analytics.math.minimization.ParameterLimitsTransform[] TRANSFORMS>;

        $r13 = new com.opengamma.analytics.math.minimization.NullTransform;

        specialinvoke $r13.<com.opengamma.analytics.math.minimization.NullTransform: void <init>()>();

        $r14[4] = $r13;

        return;
    }
}
