public class com.opengamma.analytics.financial.model.volatility.local.DermanKaniImpliedBinomialTreeModel extends java.lang.Object implements com.opengamma.analytics.financial.model.volatility.local.ImpliedTreeModel
{
    private static final com.opengamma.analytics.financial.model.option.definition.BinomialOptionModelDefinition CRR;
    private final int _n;

    public void <init>(int)
    {
        com.opengamma.analytics.financial.model.volatility.local.DermanKaniImpliedBinomialTreeModel r0;
        int i0;
        boolean $z0;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.local.DermanKaniImpliedBinomialTreeModel;

        i0 := @parameter0: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        if i0 <= 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        staticinvoke <org.apache.commons.lang.Validate: void isTrue(boolean)>($z0);

        r0.<com.opengamma.analytics.financial.model.volatility.local.DermanKaniImpliedBinomialTreeModel: int _n> = i0;

        return;
    }

    public com.opengamma.analytics.financial.model.volatility.local.ImpliedTreeResult getImpliedTrees(com.opengamma.analytics.financial.model.option.definition.OptionDefinition, com.opengamma.analytics.financial.model.option.definition.StandardOptionDataBundle)
    {
        com.opengamma.analytics.financial.model.volatility.local.DermanKaniImpliedBinomialTreeModel r0;
        com.opengamma.analytics.financial.model.option.definition.OptionDefinition r1;
        com.opengamma.analytics.financial.model.option.definition.StandardOptionDataBundle r2;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, i38, i39, i40, i41, i42, i43, i44;
        double[][] r3, r5;
        double[] r4, $r17, $r21, $r22, $r25, $r42, $r43, $r44, $r45, $r46, $r47, $r48, $r49, $r50, $r51, $r52, $r53, r54, r56;
        double d0, d1, d2, d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21, $d22, $d23, $d24, $d25, $d26, $d27, $d28, $d29, $d30, $d31, $d32, $d33, $d34, $d35, $d36, $d37, $d38, $d39, $d40, $d41, $d42, $d43, $d44, $d45, $d46, $d47, $d48, $d49, $d50, $d51, $d52, $d53, $d54, $d55, $d56, $d57, $d58, $d59, $d60, $d61, $d62, $d63, d64, d65, d66, d67;
        org.threeten.bp.ZonedDateTime r6, $r16, $r35;
        com.opengamma.analytics.math.function.Function1D $r8, $r12, $r28, $r37;
        java.lang.Integer $r9, $r11, $r13, $r15, $r29, $r31;
        java.lang.Object $r10, $r14, $r30, $r38, $r40;
        com.opengamma.analytics.financial.model.volatility.local.ImpliedTreeResult $r18;
        com.opengamma.analytics.financial.model.tree.RecombiningBinomialTree $r19, $r20, $r39;
        java.lang.Double[] $r23, $r26;
        java.lang.Double $r24, $r27;
        com.opengamma.analytics.financial.model.option.pricing.tree.BinomialOptionModel $r32;
        com.opengamma.analytics.financial.model.option.definition.BinomialOptionModelDefinition $r33;
        com.opengamma.util.time.Expiry $r34;
        com.opengamma.analytics.financial.model.option.definition.EuropeanVanillaOptionDefinition $r36;
        com.opengamma.util.tuple.DoublesPair $r41;
        java.lang.Double[][] r57, r58;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.local.DermanKaniImpliedBinomialTreeModel;

        r1 := @parameter0: com.opengamma.analytics.financial.model.option.definition.OptionDefinition;

        r2 := @parameter1: com.opengamma.analytics.financial.model.option.definition.StandardOptionDataBundle;

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object,java.lang.String)>(r1, "definition");

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object,java.lang.String)>(r2, "data");

        $r8 = <com.opengamma.analytics.financial.model.tree.RecombiningBinomialTree: com.opengamma.analytics.math.function.Function1D NODES>;

        $i3 = r0.<com.opengamma.analytics.financial.model.volatility.local.DermanKaniImpliedBinomialTreeModel: int _n>;

        $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3);

        $r10 = virtualinvoke $r8.<com.opengamma.analytics.math.function.Function1D: java.lang.Object evaluate(java.lang.Object)>($r9);

        $r11 = (java.lang.Integer) $r10;

        i0 = virtualinvoke $r11.<java.lang.Integer: int intValue()>();

        $r12 = <com.opengamma.analytics.financial.model.tree.RecombiningBinomialTree: com.opengamma.analytics.math.function.Function1D NODES>;

        $i4 = r0.<com.opengamma.analytics.financial.model.volatility.local.DermanKaniImpliedBinomialTreeModel: int _n>;

        $i5 = $i4 - 1;

        $r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i5);

        $r14 = virtualinvoke $r12.<com.opengamma.analytics.math.function.Function1D: java.lang.Object evaluate(java.lang.Object)>($r13);

        $r15 = (java.lang.Integer) $r14;

        i1 = virtualinvoke $r15.<java.lang.Integer: int intValue()>();

        $i6 = r0.<com.opengamma.analytics.financial.model.volatility.local.DermanKaniImpliedBinomialTreeModel: int _n>;

        $i7 = $i6 + 1;

        r3 = newmultiarray (double)[$i7][i0];

        r4 = newarray (double)[i1];

        r54 = newarray (double)[i0];

        $i8 = r0.<com.opengamma.analytics.financial.model.volatility.local.DermanKaniImpliedBinomialTreeModel: int _n>;

        r5 = newmultiarray (double)[$i8][i1];

        $r16 = virtualinvoke r2.<com.opengamma.analytics.financial.model.option.definition.StandardOptionDataBundle: org.threeten.bp.ZonedDateTime getDate()>();

        $d4 = virtualinvoke r1.<com.opengamma.analytics.financial.model.option.definition.OptionDefinition: double getTimeToExpiry(org.threeten.bp.ZonedDateTime)>($r16);

        $i9 = r0.<com.opengamma.analytics.financial.model.volatility.local.DermanKaniImpliedBinomialTreeModel: int _n>;

        $d5 = (double) $i9;

        d0 = $d4 / $d5;

        d64 = 0.0;

        d1 = virtualinvoke r2.<com.opengamma.analytics.financial.model.option.definition.StandardOptionDataBundle: double getSpot()>();

        $r17 = r3[0];

        $r17[0] = d1;

        r54[0] = 1.0;

        i38 = 1;

        r6 = virtualinvoke r2.<com.opengamma.analytics.financial.model.option.definition.StandardOptionDataBundle: org.threeten.bp.ZonedDateTime getDate()>();

        i39 = 1;

     label01:
        $i10 = r0.<com.opengamma.analytics.financial.model.volatility.local.DermanKaniImpliedBinomialTreeModel: int _n>;

        $i11 = $i10 + 1;

        if i39 >= $i11 goto label08;

        $r28 = <com.opengamma.analytics.financial.model.tree.RecombiningBinomialTree: com.opengamma.analytics.math.function.Function1D NODES>;

        $r29 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i39);

        $r30 = virtualinvoke $r28.<com.opengamma.analytics.math.function.Function1D: java.lang.Object evaluate(java.lang.Object)>($r29);

        $r31 = (java.lang.Integer) $r30;

        i40 = virtualinvoke $r31.<java.lang.Integer: int intValue()>();

        $r32 = new com.opengamma.analytics.financial.model.option.pricing.tree.BinomialOptionModel;

        $r33 = <com.opengamma.analytics.financial.model.volatility.local.DermanKaniImpliedBinomialTreeModel: com.opengamma.analytics.financial.model.option.definition.BinomialOptionModelDefinition CRR>;

        specialinvoke $r32.<com.opengamma.analytics.financial.model.option.pricing.tree.BinomialOptionModel: void <init>(com.opengamma.analytics.financial.model.option.definition.BinomialOptionModelDefinition,int)>($r33, i39);

        d64 = d64 + d0;

        $d8 = virtualinvoke r2.<com.opengamma.analytics.financial.model.option.definition.StandardOptionDataBundle: double getInterestRate(double)>(d64);

        $d9 = d0 * $d8;

        d65 = staticinvoke <java.lang.Math: double exp(double)>($d9);

        $d10 = virtualinvoke r2.<com.opengamma.analytics.financial.model.option.definition.StandardOptionDataBundle: double getCostOfCarry()>();

        $d11 = d0 * $d10;

        d2 = staticinvoke <java.lang.Math: double exp(double)>($d11);

        $r34 = new com.opengamma.util.time.Expiry;

        $r35 = staticinvoke <com.opengamma.util.time.DateUtils: org.threeten.bp.ZonedDateTime getDateOffsetWithYearFraction(org.threeten.bp.ZonedDateTime,double)>(r6, d64);

        specialinvoke $r34.<com.opengamma.util.time.Expiry: void <init>(org.threeten.bp.ZonedDateTime)>($r35);

        i2 = i39 / 2;

        $i18 = i39 % 2;

        if $i18 != 0 goto label02;

        $r53 = r3[i39];

        $r53[i2] = d1;

        $i36 = i2 + 1;

        specialinvoke r0.<com.opengamma.analytics.financial.model.volatility.local.DermanKaniImpliedBinomialTreeModel: void addUpperNodes(com.opengamma.analytics.financial.model.option.definition.StandardOptionDataBundle,double[][],double[],int,com.opengamma.analytics.financial.model.option.pricing.tree.BinomialOptionModel,double,double,com.opengamma.util.time.Expiry,int)>(r2, r3, r54, i39, $r32, d65, d2, $r34, $i36);

        $i37 = i2 - 1;

        specialinvoke r0.<com.opengamma.analytics.financial.model.volatility.local.DermanKaniImpliedBinomialTreeModel: void addLowerNodes(com.opengamma.analytics.financial.model.option.definition.StandardOptionDataBundle,double[][],double[],int,com.opengamma.analytics.financial.model.option.pricing.tree.BinomialOptionModel,double,double,com.opengamma.util.time.Expiry,int)>(r2, r3, r54, i39, $r32, d65, d2, $r34, $i37);

        goto label03;

     label02:
        $r36 = new com.opengamma.analytics.financial.model.option.definition.EuropeanVanillaOptionDefinition;

        specialinvoke $r36.<com.opengamma.analytics.financial.model.option.definition.EuropeanVanillaOptionDefinition: void <init>(double,com.opengamma.util.time.Expiry,boolean)>(d1, $r34, 1);

        $r37 = virtualinvoke $r32.<com.opengamma.analytics.financial.model.option.pricing.tree.BinomialOptionModel: com.opengamma.analytics.math.function.Function1D getTreeGeneratingFunction(com.opengamma.analytics.financial.model.option.definition.OptionDefinition)>($r36);

        $r38 = virtualinvoke $r37.<com.opengamma.analytics.math.function.Function1D: java.lang.Object evaluate(java.lang.Object)>(r2);

        $r39 = (com.opengamma.analytics.financial.model.tree.RecombiningBinomialTree) $r38;

        $r40 = virtualinvoke $r39.<com.opengamma.analytics.financial.model.tree.RecombiningBinomialTree: java.lang.Object getNode(int,int)>(0, 0);

        $r41 = (com.opengamma.util.tuple.DoublesPair) $r40;

        d66 = $r41.<com.opengamma.util.tuple.DoublesPair: double second>;

        $i20 = i39 - 1;

        $i19 = i2 + 1;

        d3 = specialinvoke r0.<com.opengamma.analytics.financial.model.volatility.local.DermanKaniImpliedBinomialTreeModel: double getUpperSigma(double[][],double[],int,double,int)>(r3, r54, $i20, d2, $i19);

        $r43 = r3[i39];

        $i22 = i2 + 1;

        $d14 = d65 * d66;

        $d12 = r54[i2];

        $d13 = $d12 * d1;

        $d15 = $d14 + $d13;

        $d16 = $d15 - d3;

        $d24 = d1 * $d16;

        $d18 = r54[i2];

        $i21 = i39 - 1;

        $r42 = r3[$i21];

        $d17 = $r42[i2];

        $d19 = $d18 * $d17;

        $d21 = $d19 * d2;

        $d20 = d65 * d66;

        $d22 = $d21 - $d20;

        $d23 = $d22 + d3;

        $d25 = $d24 / $d23;

        $r43[$i22] = $d25;

        $r45 = r3[i39];

        $d27 = d1 * d1;

        $r44 = r3[i39];

        $i23 = i2 + 1;

        $d26 = $r44[$i23];

        $d28 = $d27 / $d26;

        $r45[i2] = $d28;

        $i24 = i2 + 2;

        specialinvoke r0.<com.opengamma.analytics.financial.model.volatility.local.DermanKaniImpliedBinomialTreeModel: void addUpperNodes(com.opengamma.analytics.financial.model.option.definition.StandardOptionDataBundle,double[][],double[],int,com.opengamma.analytics.financial.model.option.pricing.tree.BinomialOptionModel,double,double,com.opengamma.util.time.Expiry,int)>(r2, r3, r54, i39, $r32, d65, d2, $r34, $i24);

        $i25 = i2 - 1;

        specialinvoke r0.<com.opengamma.analytics.financial.model.volatility.local.DermanKaniImpliedBinomialTreeModel: void addLowerNodes(com.opengamma.analytics.financial.model.option.definition.StandardOptionDataBundle,double[][],double[],int,com.opengamma.analytics.financial.model.option.pricing.tree.BinomialOptionModel,double,double,com.opengamma.util.time.Expiry,int)>(r2, r3, r54, i39, $r32, d65, d2, $r34, $i25);

     label03:
        i41 = 0;

     label04:
        if i41 >= i38 goto label05;

        $i32 = i39 - 1;

        $r46 = r3[$i32];

        $d47 = $r46[i41];

        d67 = $d47 * d2;

        $r47 = r3[i39];

        $d48 = $r47[i41];

        $d52 = d67 - $d48;

        $r48 = r3[i39];

        $i33 = i41 + 1;

        $d50 = $r48[$i33];

        $r49 = r3[i39];

        $d49 = $r49[i41];

        $d51 = $d50 - $d49;

        $d53 = $d52 / $d51;

        r4[i41] = $d53;

        $i34 = i39 - 1;

        $r50 = r5[$i34];

        $d56 = r4[i41];

        $d54 = r4[i41];

        $d55 = 1.0 - $d54;

        $d57 = $d56 * $d55;

        $d58 = staticinvoke <java.lang.Math: double sqrt(double)>($d57);

        $r51 = r3[i39];

        $i35 = i41 + 1;

        $d60 = $r51[$i35];

        $r52 = r3[i39];

        $d59 = $r52[i41];

        $d61 = $d60 / $d59;

        $d62 = staticinvoke <java.lang.Math: double log(double)>($d61);

        $d63 = $d58 * $d62;

        $r50[i41] = $d63;

        i41 = i41 + 1;

        goto label04;

     label05:
        r56 = newarray (double)[i0];

        $d29 = r4[0];

        $d31 = 1.0 - $d29;

        $d30 = r54[0];

        $d32 = $d31 * $d30;

        $d33 = $d32 / d65;

        r56[0] = $d33;

        $i28 = i40 - 1;

        $i26 = i38 - 1;

        $d35 = r4[$i26];

        $i27 = i38 - 1;

        $d34 = r54[$i27];

        $d36 = $d35 * $d34;

        $d37 = $d36 / d65;

        r56[$i28] = $d37;

        i42 = 1;

     label06:
        $i29 = i40 - 1;

        if i42 >= $i29 goto label07;

        $i30 = i42 - 1;

        $d39 = r4[$i30];

        $i31 = i42 - 1;

        $d38 = r54[$i31];

        $d44 = $d39 * $d38;

        $d40 = r4[i42];

        $d42 = 1.0 - $d40;

        $d41 = r54[i42];

        $d43 = $d42 * $d41;

        $d45 = $d44 + $d43;

        $d46 = $d45 / d65;

        r56[i42] = $d46;

        i42 = i42 + 1;

        goto label06;

     label07:
        r54 = r56;

        i38 = i40;

        i39 = i39 + 1;

        goto label01;

     label08:
        $i12 = r0.<com.opengamma.analytics.financial.model.volatility.local.DermanKaniImpliedBinomialTreeModel: int _n>;

        $i13 = $i12 + 1;

        r57 = newmultiarray (java.lang.Double)[$i13][i0];

        $i14 = r0.<com.opengamma.analytics.financial.model.volatility.local.DermanKaniImpliedBinomialTreeModel: int _n>;

        r58 = newmultiarray (java.lang.Double)[$i14][i1];

        i43 = 0;

     label09:
        $i15 = lengthof r3;

        if i43 >= $i15 goto label13;

        i44 = 0;

     label10:
        $r21 = r3[i43];

        $i16 = lengthof $r21;

        if i44 >= $i16 goto label12;

        $r23 = r57[i43];

        $r22 = r3[i43];

        $d6 = $r22[i44];

        $r24 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d6);

        $r23[i44] = $r24;

        $i17 = r0.<com.opengamma.analytics.financial.model.volatility.local.DermanKaniImpliedBinomialTreeModel: int _n>;

        if i43 >= $i17 goto label11;

        if i44 >= i1 goto label11;

        $r26 = r58[i43];

        $r25 = r5[i43];

        $d7 = $r25[i44];

        $r27 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d7);

        $r26[i44] = $r27;

     label11:
        i44 = i44 + 1;

        goto label10;

     label12:
        i43 = i43 + 1;

        goto label09;

     label13:
        $r18 = new com.opengamma.analytics.financial.model.volatility.local.ImpliedTreeResult;

        $r19 = new com.opengamma.analytics.financial.model.tree.RecombiningBinomialTree;

        specialinvoke $r19.<com.opengamma.analytics.financial.model.tree.RecombiningBinomialTree: void <init>(java.lang.Object[][])>(r57);

        $r20 = new com.opengamma.analytics.financial.model.tree.RecombiningBinomialTree;

        specialinvoke $r20.<com.opengamma.analytics.financial.model.tree.RecombiningBinomialTree: void <init>(java.lang.Object[][])>(r58);

        specialinvoke $r18.<com.opengamma.analytics.financial.model.volatility.local.ImpliedTreeResult: void <init>(com.opengamma.analytics.financial.model.tree.RecombiningTree,com.opengamma.analytics.financial.model.tree.RecombiningTree)>($r19, $r20);

        return $r18;
    }

    private void addLowerNodes(com.opengamma.analytics.financial.model.option.definition.StandardOptionDataBundle, double[][], double[], int, com.opengamma.analytics.financial.model.option.pricing.tree.BinomialOptionModel, double, double, com.opengamma.util.time.Expiry, int)
    {
        com.opengamma.analytics.financial.model.volatility.local.DermanKaniImpliedBinomialTreeModel r0;
        com.opengamma.analytics.financial.model.option.definition.StandardOptionDataBundle r1;
        double[][] r2;
        double[] r3, $r7, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, i13;
        com.opengamma.analytics.financial.model.option.pricing.tree.BinomialOptionModel r4;
        double d0, d1, d2, d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21, $d22, $d23, $d24, $d25, $d26, $d27, $d28, $d29, $d30, d31;
        com.opengamma.util.time.Expiry r5;
        com.opengamma.analytics.financial.model.option.definition.EuropeanVanillaOptionDefinition $r6;
        com.opengamma.analytics.math.function.Function1D $r8;
        java.lang.Object $r9, $r11;
        com.opengamma.analytics.financial.model.tree.RecombiningBinomialTree $r10;
        com.opengamma.util.tuple.DoublesPair $r12;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.local.DermanKaniImpliedBinomialTreeModel;

        r1 := @parameter0: com.opengamma.analytics.financial.model.option.definition.StandardOptionDataBundle;

        r2 := @parameter1: double[][];

        r3 := @parameter2: double[];

        i0 := @parameter3: int;

        r4 := @parameter4: com.opengamma.analytics.financial.model.option.pricing.tree.BinomialOptionModel;

        d0 := @parameter5: double;

        d1 := @parameter6: double;

        r5 := @parameter7: com.opengamma.util.time.Expiry;

        i1 := @parameter8: int;

        $i2 = i0 - 1;

        d31 = specialinvoke r0.<com.opengamma.analytics.financial.model.volatility.local.DermanKaniImpliedBinomialTreeModel: double getLowerSigma(double[][],double[],int,double,int)>(r2, r3, $i2, d1, i1);

        i13 = i1;

     label1:
        if i13 < 0 goto label3;

        $r6 = new com.opengamma.analytics.financial.model.option.definition.EuropeanVanillaOptionDefinition;

        $i3 = i0 - 1;

        $r7 = r2[$i3];

        $d4 = $r7[i13];

        specialinvoke $r6.<com.opengamma.analytics.financial.model.option.definition.EuropeanVanillaOptionDefinition: void <init>(double,com.opengamma.util.time.Expiry,boolean)>($d4, r5, 0);

        $r8 = virtualinvoke r4.<com.opengamma.analytics.financial.model.option.pricing.tree.BinomialOptionModel: com.opengamma.analytics.math.function.Function1D getTreeGeneratingFunction(com.opengamma.analytics.financial.model.option.definition.OptionDefinition)>($r6);

        $r9 = virtualinvoke $r8.<com.opengamma.analytics.math.function.Function1D: java.lang.Object evaluate(java.lang.Object)>(r1);

        $r10 = (com.opengamma.analytics.financial.model.tree.RecombiningBinomialTree) $r9;

        $r11 = virtualinvoke $r10.<com.opengamma.analytics.financial.model.tree.RecombiningBinomialTree: java.lang.Object getNode(int,int)>(0, 0);

        $r12 = (com.opengamma.util.tuple.DoublesPair) $r11;

        d2 = $r12.<com.opengamma.util.tuple.DoublesPair: double second>;

        $i4 = i0 - 1;

        $r13 = r2[$i4];

        $d5 = $r13[i13];

        d3 = $d5 * d1;

        $r18 = r2[i0];

        $r14 = r2[i0];

        $i5 = i13 + 1;

        $d8 = $r14[$i5];

        $d6 = d0 * d2;

        $d7 = $d6 - d31;

        $d15 = $d8 * $d7;

        $d10 = r3[i13];

        $i6 = i0 - 1;

        $r15 = r2[$i6];

        $d9 = $r15[i13];

        $d13 = $d10 * $d9;

        $r16 = r2[i0];

        $i7 = i13 + 1;

        $d11 = $r16[$i7];

        $d12 = d3 - $d11;

        $d14 = $d13 * $d12;

        $d23 = $d15 + $d14;

        $d16 = d0 * d2;

        $d21 = $d16 - d31;

        $d19 = r3[i13];

        $r17 = r2[i0];

        $i8 = i13 + 1;

        $d17 = $r17[$i8];

        $d18 = d3 - $d17;

        $d20 = $d19 * $d18;

        $d22 = $d21 + $d20;

        $d24 = $d23 / $d22;

        $r18[i13] = $d24;

        if i13 <= 0 goto label2;

        $i9 = i13 - 1;

        $d29 = r3[$i9];

        $i10 = i0 - 1;

        $r19 = r2[$i10];

        $d27 = $r19[i13];

        $i11 = i0 - 1;

        $r20 = r2[$i11];

        $i12 = i13 - 1;

        $d25 = $r20[$i12];

        $d26 = $d25 * d1;

        $d28 = $d27 - $d26;

        $d30 = $d29 * $d28;

        d31 = d31 - $d30;

     label2:
        i13 = i13 + -1;

        goto label1;

     label3:
        return;
    }

    private void addUpperNodes(com.opengamma.analytics.financial.model.option.definition.StandardOptionDataBundle, double[][], double[], int, com.opengamma.analytics.financial.model.option.pricing.tree.BinomialOptionModel, double, double, com.opengamma.util.time.Expiry, int)
    {
        com.opengamma.analytics.financial.model.volatility.local.DermanKaniImpliedBinomialTreeModel r0;
        com.opengamma.analytics.financial.model.option.definition.StandardOptionDataBundle r1;
        double[][] r2;
        double[] r3, $r11, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, i18;
        com.opengamma.analytics.financial.model.option.pricing.tree.BinomialOptionModel r4;
        double d0, d1, d2, d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21, $d22, $d23, $d24, $d25, $d26, $d27, $d28, $d29, $d30, d31;
        com.opengamma.util.time.Expiry r5;
        com.opengamma.analytics.math.function.Function1D $r6, $r12;
        java.lang.Integer $r7, $r9;
        java.lang.Object $r8, $r13, $r15;
        com.opengamma.analytics.financial.model.option.definition.EuropeanVanillaOptionDefinition $r10;
        com.opengamma.analytics.financial.model.tree.RecombiningBinomialTree $r14;
        com.opengamma.util.tuple.DoublesPair $r16;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.local.DermanKaniImpliedBinomialTreeModel;

        r1 := @parameter0: com.opengamma.analytics.financial.model.option.definition.StandardOptionDataBundle;

        r2 := @parameter1: double[][];

        r3 := @parameter2: double[];

        i0 := @parameter3: int;

        r4 := @parameter4: com.opengamma.analytics.financial.model.option.pricing.tree.BinomialOptionModel;

        d0 := @parameter5: double;

        d1 := @parameter6: double;

        r5 := @parameter7: com.opengamma.util.time.Expiry;

        i1 := @parameter8: int;

        $i2 = i0 - 1;

        d31 = specialinvoke r0.<com.opengamma.analytics.financial.model.volatility.local.DermanKaniImpliedBinomialTreeModel: double getUpperSigma(double[][],double[],int,double,int)>(r2, r3, $i2, d1, i1);

        i18 = i1;

     label1:
        $r6 = <com.opengamma.analytics.financial.model.tree.RecombiningBinomialTree: com.opengamma.analytics.math.function.Function1D NODES>;

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r8 = virtualinvoke $r6.<com.opengamma.analytics.math.function.Function1D: java.lang.Object evaluate(java.lang.Object)>($r7);

        $r9 = (java.lang.Integer) $r8;

        $i3 = virtualinvoke $r9.<java.lang.Integer: int intValue()>();

        if i18 >= $i3 goto label2;

        $r10 = new com.opengamma.analytics.financial.model.option.definition.EuropeanVanillaOptionDefinition;

        $i4 = i0 - 1;

        $r11 = r2[$i4];

        $i5 = i18 - 1;

        $d4 = $r11[$i5];

        specialinvoke $r10.<com.opengamma.analytics.financial.model.option.definition.EuropeanVanillaOptionDefinition: void <init>(double,com.opengamma.util.time.Expiry,boolean)>($d4, r5, 1);

        $r12 = virtualinvoke r4.<com.opengamma.analytics.financial.model.option.pricing.tree.BinomialOptionModel: com.opengamma.analytics.math.function.Function1D getTreeGeneratingFunction(com.opengamma.analytics.financial.model.option.definition.OptionDefinition)>($r10);

        $r13 = virtualinvoke $r12.<com.opengamma.analytics.math.function.Function1D: java.lang.Object evaluate(java.lang.Object)>(r1);

        $r14 = (com.opengamma.analytics.financial.model.tree.RecombiningBinomialTree) $r13;

        $r15 = virtualinvoke $r14.<com.opengamma.analytics.financial.model.tree.RecombiningBinomialTree: java.lang.Object getNode(int,int)>(0, 0);

        $r16 = (com.opengamma.util.tuple.DoublesPair) $r15;

        d2 = $r16.<com.opengamma.util.tuple.DoublesPair: double second>;

        $i6 = i0 - 1;

        $r17 = r2[$i6];

        $i7 = i18 - 1;

        $d5 = $r17[$i7];

        d3 = $d5 * d1;

        $r22 = r2[i0];

        $r18 = r2[i0];

        $i8 = i18 - 1;

        $d8 = $r18[$i8];

        $d6 = d0 * d2;

        $d7 = $d6 - d31;

        $d15 = $d8 * $d7;

        $i9 = i18 - 1;

        $d10 = r3[$i9];

        $i10 = i0 - 1;

        $r19 = r2[$i10];

        $i11 = i18 - 1;

        $d9 = $r19[$i11];

        $d13 = $d10 * $d9;

        $r20 = r2[i0];

        $i12 = i18 - 1;

        $d11 = $r20[$i12];

        $d12 = d3 - $d11;

        $d14 = $d13 * $d12;

        $d23 = $d15 - $d14;

        $d16 = d0 * d2;

        $d21 = $d16 - d31;

        $i13 = i18 - 1;

        $d19 = r3[$i13];

        $r21 = r2[i0];

        $i14 = i18 - 1;

        $d17 = $r21[$i14];

        $d18 = d3 - $d17;

        $d20 = $d19 * $d18;

        $d22 = $d21 - $d20;

        $d24 = $d23 / $d22;

        $r22[i18] = $d24;

        $d29 = r3[i18];

        $i15 = i0 - 1;

        $r23 = r2[$i15];

        $d25 = $r23[i18];

        $d27 = $d25 * d1;

        $i16 = i0 - 1;

        $r24 = r2[$i16];

        $i17 = i18 - 1;

        $d26 = $r24[$i17];

        $d28 = $d27 - $d26;

        $d30 = $d29 * $d28;

        d31 = d31 - $d30;

        i18 = i18 + 1;

        goto label1;

     label2:
        return;
    }

    private double getLowerSigma(double[][], double[], int, double, int)
    {
        com.opengamma.analytics.financial.model.volatility.local.DermanKaniImpliedBinomialTreeModel r0;
        double[][] r1;
        double[] r2, $r3, $r4;
        int i0, i1, i2;
        double d0, $d1, $d2, $d3, $d4, $d5, $d6, d7;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.local.DermanKaniImpliedBinomialTreeModel;

        r1 := @parameter0: double[][];

        r2 := @parameter1: double[];

        i0 := @parameter2: int;

        d0 := @parameter3: double;

        i1 := @parameter4: int;

        d7 = 0.0;

        i2 = i1 - 1;

     label1:
        if i2 < 0 goto label2;

        $d5 = r2[i2];

        $r3 = r1[i0];

        $d3 = $r3[i1];

        $r4 = r1[i0];

        $d1 = $r4[i2];

        $d2 = $d1 * d0;

        $d4 = $d3 - $d2;

        $d6 = $d5 * $d4;

        d7 = d7 + $d6;

        i2 = i2 + -1;

        goto label1;

     label2:
        return d7;
    }

    private double getUpperSigma(double[][], double[], int, double, int)
    {
        com.opengamma.analytics.financial.model.volatility.local.DermanKaniImpliedBinomialTreeModel r0;
        double[][] r1;
        double[] r2, $r7, $r8;
        int i0, i1, $i2, $i3, $i4, i5;
        double d0, $d1, $d2, $d3, $d4, $d5, $d6, d7;
        com.opengamma.analytics.math.function.Function1D $r3;
        java.lang.Integer $r4, $r6;
        java.lang.Object $r5;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.local.DermanKaniImpliedBinomialTreeModel;

        r1 := @parameter0: double[][];

        r2 := @parameter1: double[];

        i0 := @parameter2: int;

        d0 := @parameter3: double;

        i1 := @parameter4: int;

        d7 = 0.0;

        i5 = i1;

     label1:
        $r3 = <com.opengamma.analytics.financial.model.tree.RecombiningBinomialTree: com.opengamma.analytics.math.function.Function1D NODES>;

        $i2 = i0 + 1;

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        $r5 = virtualinvoke $r3.<com.opengamma.analytics.math.function.Function1D: java.lang.Object evaluate(java.lang.Object)>($r4);

        $r6 = (java.lang.Integer) $r5;

        $i3 = virtualinvoke $r6.<java.lang.Integer: int intValue()>();

        if i5 >= $i3 goto label2;

        $d5 = r2[i5];

        $r7 = r1[i0];

        $d1 = $r7[i5];

        $d3 = $d1 * d0;

        $r8 = r1[i0];

        $i4 = i1 - 1;

        $d2 = $r8[$i4];

        $d4 = $d3 - $d2;

        $d6 = $d5 * $d4;

        d7 = d7 + $d6;

        i5 = i5 + 1;

        goto label1;

     label2:
        return d7;
    }

    static void <clinit>()
    {
        com.opengamma.analytics.financial.model.option.definition.CoxRossRubinsteinBinomialOptionModelDefinition $r0;

        $r0 = new com.opengamma.analytics.financial.model.option.definition.CoxRossRubinsteinBinomialOptionModelDefinition;

        specialinvoke $r0.<com.opengamma.analytics.financial.model.option.definition.CoxRossRubinsteinBinomialOptionModelDefinition: void <init>()>();

        <com.opengamma.analytics.financial.model.volatility.local.DermanKaniImpliedBinomialTreeModel: com.opengamma.analytics.financial.model.option.definition.BinomialOptionModelDefinition CRR> = $r0;

        return;
    }
}
