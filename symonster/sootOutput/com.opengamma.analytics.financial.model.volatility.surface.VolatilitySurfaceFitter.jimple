public abstract class com.opengamma.analytics.financial.model.volatility.surface.VolatilitySurfaceFitter extends java.lang.Object
{
    private static final com.opengamma.analytics.math.matrix.MatrixAlgebra MA;
    private static final com.opengamma.analytics.math.statistics.leastsquare.NonLinearLeastSquare SOLVER;
    private final com.opengamma.analytics.math.curve.InterpolatedCurveBuildingFunction _curveBuilder;
    private final double[] _expiries;
    private final double[][] _strikes;
    private final com.opengamma.analytics.math.matrix.DoubleMatrix1D _vols;
    private final com.opengamma.analytics.math.matrix.DoubleMatrix1D _errors;
    private final int _nSmileModelParameters;
    private final int _nKnotPoints;
    private final int _nOptions;
    private final int _nExpiries;
    private final int[] _struture;
    private final java.util.Set _parameterNames;
    private final java.util.List _volFuncs;
    private final java.util.List _volAdjointFuncs;

    public void <init>(double[], double[][], double[], double[][], double[][], com.opengamma.analytics.financial.model.volatility.smile.function.VolatilityFunctionProvider, java.util.LinkedHashMap, java.util.LinkedHashMap)
    {
        com.opengamma.analytics.financial.model.volatility.surface.VolatilitySurfaceFitter r0;
        double[] r1, r3, $r30, $r37, $r38, $r39, $r40, $r46, $r52, $r54, r59, r60;
        double[][] r2, r4, r5;
        com.opengamma.analytics.financial.model.volatility.smile.function.VolatilityFunctionProvider r6;
        java.util.LinkedHashMap r7, r8, $r25;
        java.util.Iterator r9;
        java.lang.String r10, $r45, $r51;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, i22, i23, $i24, i25, i26, i27, i28, i29, i30;
        java.util.ArrayList $r18, $r19;
        int[] $r20, $r36, $r56;
        com.opengamma.analytics.math.matrix.DoubleMatrix1D $r21, $r22;
        java.util.Set $r23, $r24, $r26;
        boolean $z0, $z3, $z4, $z5, $z6, $z7, $z8;
        com.opengamma.analytics.math.curve.InterpolatedCurveBuildingFunction $r27;
        java.lang.Object $r28, $r29, $r32;
        com.opengamma.analytics.math.interpolation.TransformedInterpolator1D $r31;
        com.opengamma.analytics.math.minimization.ParameterLimitsTransform $r33;
        com.opengamma.analytics.math.interpolation.Interpolator1D $r34;
        double $d0, $d1, $d2, $d3, $d4, $d5;
        java.lang.StringBuilder $r41, $r42, $r43, $r44, $r47, $r48, $r49, $r50;
        java.util.List $r53, $r55;
        com.opengamma.analytics.math.function.Function1D r57, r58;
        com.opengamma.analytics.math.minimization.ParameterLimitsTransform[] r61;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.surface.VolatilitySurfaceFitter;

        r1 := @parameter0: double[];

        r2 := @parameter1: double[][];

        r3 := @parameter2: double[];

        r4 := @parameter3: double[][];

        r5 := @parameter4: double[][];

        r6 := @parameter5: com.opengamma.analytics.financial.model.volatility.smile.function.VolatilityFunctionProvider;

        r7 := @parameter6: java.util.LinkedHashMap;

        r8 := @parameter7: java.util.LinkedHashMap;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "null forwards");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, "null strikes");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r3, "null expiries");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r4, "null implied vols");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r5, "null error");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r6, "null model");

        $i0 = lengthof r3;

        r0.<com.opengamma.analytics.financial.model.volatility.surface.VolatilitySurfaceFitter: int _nExpiries> = $i0;

        $i2 = lengthof r1;

        $i1 = r0.<com.opengamma.analytics.financial.model.volatility.surface.VolatilitySurfaceFitter: int _nExpiries>;

        if $i2 != $i1 goto label01;

        $z3 = 1;

        goto label02;

     label01:
        $z3 = 0;

     label02:
        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z3, "#forwards != #expiries");

        $i4 = lengthof r2;

        $i3 = r0.<com.opengamma.analytics.financial.model.volatility.surface.VolatilitySurfaceFitter: int _nExpiries>;

        if $i4 != $i3 goto label03;

        $z4 = 1;

        goto label04;

     label03:
        $z4 = 0;

     label04:
        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z4, "#strike sets != #expiries");

        $i6 = lengthof r4;

        $i5 = r0.<com.opengamma.analytics.financial.model.volatility.surface.VolatilitySurfaceFitter: int _nExpiries>;

        if $i6 != $i5 goto label05;

        $z5 = 1;

        goto label06;

     label05:
        $z5 = 0;

     label06:
        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z5, "#vol sets != #expiries");

        $i8 = lengthof r5;

        $i7 = r0.<com.opengamma.analytics.financial.model.volatility.surface.VolatilitySurfaceFitter: int _nExpiries>;

        if $i8 != $i7 goto label07;

        $z6 = 1;

        goto label08;

     label07:
        $z6 = 0;

     label08:
        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z6, "#error sets != #expiries");

        $r18 = new java.util.ArrayList;

        $i9 = r0.<com.opengamma.analytics.financial.model.volatility.surface.VolatilitySurfaceFitter: int _nExpiries>;

        specialinvoke $r18.<java.util.ArrayList: void <init>(int)>($i9);

        r0.<com.opengamma.analytics.financial.model.volatility.surface.VolatilitySurfaceFitter: java.util.List _volFuncs> = $r18;

        $r19 = new java.util.ArrayList;

        $i10 = r0.<com.opengamma.analytics.financial.model.volatility.surface.VolatilitySurfaceFitter: int _nExpiries>;

        specialinvoke $r19.<java.util.ArrayList: void <init>(int)>($i10);

        r0.<com.opengamma.analytics.financial.model.volatility.surface.VolatilitySurfaceFitter: java.util.List _volAdjointFuncs> = $r19;

        $i11 = r0.<com.opengamma.analytics.financial.model.volatility.surface.VolatilitySurfaceFitter: int _nExpiries>;

        $r20 = newarray (int)[$i11];

        r0.<com.opengamma.analytics.financial.model.volatility.surface.VolatilitySurfaceFitter: int[] _struture> = $r20;

        i22 = 0;

        i23 = 0;

     label09:
        $i24 = r0.<com.opengamma.analytics.financial.model.volatility.surface.VolatilitySurfaceFitter: int _nExpiries>;

        if i23 >= $i24 goto label14;

        $r39 = r2[i23];

        i25 = lengthof $r39;

        $r40 = r4[i23];

        $i20 = lengthof $r40;

        if $i20 != i25 goto label10;

        $z7 = 1;

        goto label11;

     label10:
        $z7 = 0;

     label11:
        $r41 = new java.lang.StringBuilder;

        specialinvoke $r41.<java.lang.StringBuilder: void <init>()>();

        $r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("#vols in strip ");

        $r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i23);

        $r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is wrong");

        $r45 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z7, $r45);

        $r46 = r5[i23];

        $i21 = lengthof $r46;

        if $i21 != i25 goto label12;

        $z8 = 1;

        goto label13;

     label12:
        $z8 = 0;

     label13:
        $r47 = new java.lang.StringBuilder;

        specialinvoke $r47.<java.lang.StringBuilder: void <init>()>();

        $r48 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("#vols in strip ");

        $r49 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i23);

        $r50 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is wrong");

        $r51 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z8, $r51);

        $d3 = r1[i23];

        $r52 = r2[i23];

        $d2 = r3[i23];

        r57 = virtualinvoke r6.<com.opengamma.analytics.financial.model.volatility.smile.function.VolatilityFunctionProvider: com.opengamma.analytics.math.function.Function1D getVolatilityFunction(double,double[],double)>($d3, $r52, $d2);

        $r53 = r0.<com.opengamma.analytics.financial.model.volatility.surface.VolatilitySurfaceFitter: java.util.List _volFuncs>;

        interfaceinvoke $r53.<java.util.List: boolean add(java.lang.Object)>(r57);

        $d5 = r1[i23];

        $r54 = r2[i23];

        $d4 = r3[i23];

        r58 = virtualinvoke r6.<com.opengamma.analytics.financial.model.volatility.smile.function.VolatilityFunctionProvider: com.opengamma.analytics.math.function.Function1D getModelAdjointFunction(double,double[],double)>($d5, $r54, $d4);

        $r55 = r0.<com.opengamma.analytics.financial.model.volatility.surface.VolatilitySurfaceFitter: java.util.List _volAdjointFuncs>;

        interfaceinvoke $r55.<java.util.List: boolean add(java.lang.Object)>(r58);

        $r56 = r0.<com.opengamma.analytics.financial.model.volatility.surface.VolatilitySurfaceFitter: int[] _struture>;

        $r56[i23] = i25;

        i22 = i22 + i25;

        i23 = i23 + 1;

        goto label09;

     label14:
        r0.<com.opengamma.analytics.financial.model.volatility.surface.VolatilitySurfaceFitter: int _nOptions> = i22;

        r0.<com.opengamma.analytics.financial.model.volatility.surface.VolatilitySurfaceFitter: double[] _expiries> = r3;

        r0.<com.opengamma.analytics.financial.model.volatility.surface.VolatilitySurfaceFitter: double[][] _strikes> = r2;

        $i12 = r0.<com.opengamma.analytics.financial.model.volatility.surface.VolatilitySurfaceFitter: int _nOptions>;

        r59 = newarray (double)[$i12];

        $i13 = r0.<com.opengamma.analytics.financial.model.volatility.surface.VolatilitySurfaceFitter: int _nOptions>;

        r60 = newarray (double)[$i13];

        i26 = 0;

        i27 = 0;

     label15:
        $i14 = r0.<com.opengamma.analytics.financial.model.volatility.surface.VolatilitySurfaceFitter: int _nExpiries>;

        if i27 >= $i14 goto label18;

        i28 = 0;

     label16:
        $r36 = r0.<com.opengamma.analytics.financial.model.volatility.surface.VolatilitySurfaceFitter: int[] _struture>;

        $i19 = $r36[i27];

        if i28 >= $i19 goto label17;

        $r37 = r4[i27];

        $d0 = $r37[i28];

        r59[i26] = $d0;

        $r38 = r5[i27];

        $d1 = $r38[i28];

        r60[i26] = $d1;

        i26 = i26 + 1;

        i28 = i28 + 1;

        goto label16;

     label17:
        i27 = i27 + 1;

        goto label15;

     label18:
        $r21 = new com.opengamma.analytics.math.matrix.DoubleMatrix1D;

        specialinvoke $r21.<com.opengamma.analytics.math.matrix.DoubleMatrix1D: void <init>(double[])>(r59);

        r0.<com.opengamma.analytics.financial.model.volatility.surface.VolatilitySurfaceFitter: com.opengamma.analytics.math.matrix.DoubleMatrix1D _vols> = $r21;

        $r22 = new com.opengamma.analytics.math.matrix.DoubleMatrix1D;

        specialinvoke $r22.<com.opengamma.analytics.math.matrix.DoubleMatrix1D: void <init>(double[])>(r60);

        r0.<com.opengamma.analytics.financial.model.volatility.surface.VolatilitySurfaceFitter: com.opengamma.analytics.math.matrix.DoubleMatrix1D _errors> = $r22;

        r61 = virtualinvoke r0.<com.opengamma.analytics.financial.model.volatility.surface.VolatilitySurfaceFitter: com.opengamma.analytics.math.minimization.ParameterLimitsTransform[] getTransforms()>();

        $r23 = virtualinvoke r7.<java.util.LinkedHashMap: java.util.Set keySet()>();

        r0.<com.opengamma.analytics.financial.model.volatility.surface.VolatilitySurfaceFitter: java.util.Set _parameterNames> = $r23;

        $r24 = r0.<com.opengamma.analytics.financial.model.volatility.surface.VolatilitySurfaceFitter: java.util.Set _parameterNames>;

        $i15 = interfaceinvoke $r24.<java.util.Set: int size()>();

        r0.<com.opengamma.analytics.financial.model.volatility.surface.VolatilitySurfaceFitter: int _nSmileModelParameters> = $i15;

        $r25 = new java.util.LinkedHashMap;

        $i16 = r0.<com.opengamma.analytics.financial.model.volatility.surface.VolatilitySurfaceFitter: int _nSmileModelParameters>;

        specialinvoke $r25.<java.util.LinkedHashMap: void <init>(int)>($i16);

        i29 = 0;

        i30 = 0;

        $r26 = r0.<com.opengamma.analytics.financial.model.volatility.surface.VolatilitySurfaceFitter: java.util.Set _parameterNames>;

        r9 = interfaceinvoke $r26.<java.util.Set: java.util.Iterator iterator()>();

     label19:
        $z0 = interfaceinvoke r9.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label20;

        $r28 = interfaceinvoke r9.<java.util.Iterator: java.lang.Object next()>();

        r10 = (java.lang.String) $r28;

        $r29 = virtualinvoke r7.<java.util.LinkedHashMap: java.lang.Object get(java.lang.Object)>(r10);

        $r30 = (double[]) $r29;

        $i17 = lengthof $r30;

        i29 = i29 + $i17;

        $r31 = new com.opengamma.analytics.math.interpolation.TransformedInterpolator1D;

        $r32 = virtualinvoke r8.<java.util.LinkedHashMap: java.lang.Object get(java.lang.Object)>(r10);

        $r34 = (com.opengamma.analytics.math.interpolation.Interpolator1D) $r32;

        $i18 = i30;

        i30 = i30 + 1;

        $r33 = r61[$i18];

        specialinvoke $r31.<com.opengamma.analytics.math.interpolation.TransformedInterpolator1D: void <init>(com.opengamma.analytics.math.interpolation.Interpolator1D,com.opengamma.analytics.math.minimization.ParameterLimitsTransform)>($r34, $r33);

        virtualinvoke $r25.<java.util.LinkedHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r10, $r31);

        goto label19;

     label20:
        $r27 = new com.opengamma.analytics.math.curve.InterpolatedCurveBuildingFunction;

        specialinvoke $r27.<com.opengamma.analytics.math.curve.InterpolatedCurveBuildingFunction: void <init>(java.util.LinkedHashMap,java.util.LinkedHashMap)>(r7, $r25);

        r0.<com.opengamma.analytics.financial.model.volatility.surface.VolatilitySurfaceFitter: com.opengamma.analytics.math.curve.InterpolatedCurveBuildingFunction _curveBuilder> = $r27;

        r0.<com.opengamma.analytics.financial.model.volatility.surface.VolatilitySurfaceFitter: int _nKnotPoints> = i29;

        return;
    }

    public com.opengamma.analytics.math.statistics.leastsquare.LeastSquareResultsWithTransform solve(com.opengamma.analytics.math.matrix.DoubleMatrix1D)
    {
        com.opengamma.analytics.financial.model.volatility.surface.VolatilitySurfaceFitter r0;
        com.opengamma.analytics.math.matrix.DoubleMatrix1D r1, $r4, $r5;
        com.opengamma.analytics.math.statistics.leastsquare.LeastSquareResults r2;
        com.opengamma.analytics.math.statistics.leastsquare.NonLinearLeastSquare $r3;
        com.opengamma.analytics.math.function.Function1D $r6, $r7;
        com.opengamma.analytics.math.statistics.leastsquare.LeastSquareResultsWithTransform $r8;
        com.opengamma.analytics.math.minimization.UncoupledParameterTransforms $r9;
        com.opengamma.analytics.math.minimization.ParameterLimitsTransform[] $r10;
        java.util.BitSet $r11;
        int $i0;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.surface.VolatilitySurfaceFitter;

        r1 := @parameter0: com.opengamma.analytics.math.matrix.DoubleMatrix1D;

        $r3 = <com.opengamma.analytics.financial.model.volatility.surface.VolatilitySurfaceFitter: com.opengamma.analytics.math.statistics.leastsquare.NonLinearLeastSquare SOLVER>;

        $r4 = r0.<com.opengamma.analytics.financial.model.volatility.surface.VolatilitySurfaceFitter: com.opengamma.analytics.math.matrix.DoubleMatrix1D _vols>;

        $r5 = r0.<com.opengamma.analytics.financial.model.volatility.surface.VolatilitySurfaceFitter: com.opengamma.analytics.math.matrix.DoubleMatrix1D _errors>;

        $r6 = virtualinvoke r0.<com.opengamma.analytics.financial.model.volatility.surface.VolatilitySurfaceFitter: com.opengamma.analytics.math.function.Function1D getModelValueFunction()>();

        $r7 = virtualinvoke r0.<com.opengamma.analytics.financial.model.volatility.surface.VolatilitySurfaceFitter: com.opengamma.analytics.math.function.Function1D getModelJacobianFunction()>();

        r2 = virtualinvoke $r3.<com.opengamma.analytics.math.statistics.leastsquare.NonLinearLeastSquare: com.opengamma.analytics.math.statistics.leastsquare.LeastSquareResults solve(com.opengamma.analytics.math.matrix.DoubleMatrix1D,com.opengamma.analytics.math.matrix.DoubleMatrix1D,com.opengamma.analytics.math.function.Function1D,com.opengamma.analytics.math.function.Function1D,com.opengamma.analytics.math.matrix.DoubleMatrix1D)>($r4, $r5, $r6, $r7, r1);

        $r8 = new com.opengamma.analytics.math.statistics.leastsquare.LeastSquareResultsWithTransform;

        $r9 = new com.opengamma.analytics.math.minimization.UncoupledParameterTransforms;

        $r10 = virtualinvoke r0.<com.opengamma.analytics.financial.model.volatility.surface.VolatilitySurfaceFitter: com.opengamma.analytics.math.minimization.ParameterLimitsTransform[] getTransforms()>();

        $r11 = new java.util.BitSet;

        $i0 = virtualinvoke r1.<com.opengamma.analytics.math.matrix.DoubleMatrix1D: int getNumberOfElements()>();

        specialinvoke $r11.<java.util.BitSet: void <init>(int)>($i0);

        specialinvoke $r9.<com.opengamma.analytics.math.minimization.UncoupledParameterTransforms: void <init>(com.opengamma.analytics.math.matrix.DoubleMatrix1D,com.opengamma.analytics.math.minimization.ParameterLimitsTransform[],java.util.BitSet)>(r1, $r10, $r11);

        specialinvoke $r8.<com.opengamma.analytics.math.statistics.leastsquare.LeastSquareResultsWithTransform: void <init>(com.opengamma.analytics.math.statistics.leastsquare.LeastSquareResults,com.opengamma.analytics.math.minimization.NonLinearParameterTransforms)>(r2, $r9);

        return $r8;
    }

    protected com.opengamma.analytics.math.function.Function1D getModelValueFunction()
    {
        com.opengamma.analytics.financial.model.volatility.surface.VolatilitySurfaceFitter r0;
        com.opengamma.analytics.financial.model.volatility.surface.VolatilitySurfaceFitter$1 $r1;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.surface.VolatilitySurfaceFitter;

        $r1 = new com.opengamma.analytics.financial.model.volatility.surface.VolatilitySurfaceFitter$1;

        specialinvoke $r1.<com.opengamma.analytics.financial.model.volatility.surface.VolatilitySurfaceFitter$1: void <init>(com.opengamma.analytics.financial.model.volatility.surface.VolatilitySurfaceFitter)>(r0);

        return $r1;
    }

    protected com.opengamma.analytics.math.function.Function1D getModelJacobianFunction()
    {
        com.opengamma.analytics.financial.model.volatility.surface.VolatilitySurfaceFitter r0;
        com.opengamma.analytics.math.minimization.ParameterLimitsTransform[] r1;
        com.opengamma.analytics.financial.model.volatility.surface.VolatilitySurfaceFitter$2 $r2;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.surface.VolatilitySurfaceFitter;

        r1 = virtualinvoke r0.<com.opengamma.analytics.financial.model.volatility.surface.VolatilitySurfaceFitter: com.opengamma.analytics.math.minimization.ParameterLimitsTransform[] getTransforms()>();

        $r2 = new com.opengamma.analytics.financial.model.volatility.surface.VolatilitySurfaceFitter$2;

        specialinvoke $r2.<com.opengamma.analytics.financial.model.volatility.surface.VolatilitySurfaceFitter$2: void <init>(com.opengamma.analytics.financial.model.volatility.surface.VolatilitySurfaceFitter,com.opengamma.analytics.math.minimization.ParameterLimitsTransform[])>(r0, r1);

        return $r2;
    }

    protected abstract com.opengamma.analytics.financial.model.volatility.smile.function.SmileModelData toSmileModelData(double[]);

    protected abstract com.opengamma.analytics.math.minimization.ParameterLimitsTransform[] getTransforms();

    static com.opengamma.analytics.math.curve.InterpolatedCurveBuildingFunction access$000(com.opengamma.analytics.financial.model.volatility.surface.VolatilitySurfaceFitter)
    {
        com.opengamma.analytics.financial.model.volatility.surface.VolatilitySurfaceFitter r0;
        com.opengamma.analytics.math.curve.InterpolatedCurveBuildingFunction $r1;

        r0 := @parameter0: com.opengamma.analytics.financial.model.volatility.surface.VolatilitySurfaceFitter;

        $r1 = r0.<com.opengamma.analytics.financial.model.volatility.surface.VolatilitySurfaceFitter: com.opengamma.analytics.math.curve.InterpolatedCurveBuildingFunction _curveBuilder>;

        return $r1;
    }

    static int access$100(com.opengamma.analytics.financial.model.volatility.surface.VolatilitySurfaceFitter)
    {
        com.opengamma.analytics.financial.model.volatility.surface.VolatilitySurfaceFitter r0;
        int $i0;

        r0 := @parameter0: com.opengamma.analytics.financial.model.volatility.surface.VolatilitySurfaceFitter;

        $i0 = r0.<com.opengamma.analytics.financial.model.volatility.surface.VolatilitySurfaceFitter: int _nKnotPoints>;

        return $i0;
    }

    static int access$200(com.opengamma.analytics.financial.model.volatility.surface.VolatilitySurfaceFitter)
    {
        com.opengamma.analytics.financial.model.volatility.surface.VolatilitySurfaceFitter r0;
        int $i0;

        r0 := @parameter0: com.opengamma.analytics.financial.model.volatility.surface.VolatilitySurfaceFitter;

        $i0 = r0.<com.opengamma.analytics.financial.model.volatility.surface.VolatilitySurfaceFitter: int _nOptions>;

        return $i0;
    }

    static int access$300(com.opengamma.analytics.financial.model.volatility.surface.VolatilitySurfaceFitter)
    {
        com.opengamma.analytics.financial.model.volatility.surface.VolatilitySurfaceFitter r0;
        int $i0;

        r0 := @parameter0: com.opengamma.analytics.financial.model.volatility.surface.VolatilitySurfaceFitter;

        $i0 = r0.<com.opengamma.analytics.financial.model.volatility.surface.VolatilitySurfaceFitter: int _nExpiries>;

        return $i0;
    }

    static double[] access$400(com.opengamma.analytics.financial.model.volatility.surface.VolatilitySurfaceFitter)
    {
        com.opengamma.analytics.financial.model.volatility.surface.VolatilitySurfaceFitter r0;
        double[] $r1;

        r0 := @parameter0: com.opengamma.analytics.financial.model.volatility.surface.VolatilitySurfaceFitter;

        $r1 = r0.<com.opengamma.analytics.financial.model.volatility.surface.VolatilitySurfaceFitter: double[] _expiries>;

        return $r1;
    }

    static int access$500(com.opengamma.analytics.financial.model.volatility.surface.VolatilitySurfaceFitter)
    {
        com.opengamma.analytics.financial.model.volatility.surface.VolatilitySurfaceFitter r0;
        int $i0;

        r0 := @parameter0: com.opengamma.analytics.financial.model.volatility.surface.VolatilitySurfaceFitter;

        $i0 = r0.<com.opengamma.analytics.financial.model.volatility.surface.VolatilitySurfaceFitter: int _nSmileModelParameters>;

        return $i0;
    }

    static java.util.Set access$600(com.opengamma.analytics.financial.model.volatility.surface.VolatilitySurfaceFitter)
    {
        com.opengamma.analytics.financial.model.volatility.surface.VolatilitySurfaceFitter r0;
        java.util.Set $r1;

        r0 := @parameter0: com.opengamma.analytics.financial.model.volatility.surface.VolatilitySurfaceFitter;

        $r1 = r0.<com.opengamma.analytics.financial.model.volatility.surface.VolatilitySurfaceFitter: java.util.Set _parameterNames>;

        return $r1;
    }

    static java.util.List access$700(com.opengamma.analytics.financial.model.volatility.surface.VolatilitySurfaceFitter)
    {
        com.opengamma.analytics.financial.model.volatility.surface.VolatilitySurfaceFitter r0;
        java.util.List $r1;

        r0 := @parameter0: com.opengamma.analytics.financial.model.volatility.surface.VolatilitySurfaceFitter;

        $r1 = r0.<com.opengamma.analytics.financial.model.volatility.surface.VolatilitySurfaceFitter: java.util.List _volFuncs>;

        return $r1;
    }

    static java.util.List access$800(com.opengamma.analytics.financial.model.volatility.surface.VolatilitySurfaceFitter)
    {
        com.opengamma.analytics.financial.model.volatility.surface.VolatilitySurfaceFitter r0;
        java.util.List $r1;

        r0 := @parameter0: com.opengamma.analytics.financial.model.volatility.surface.VolatilitySurfaceFitter;

        $r1 = r0.<com.opengamma.analytics.financial.model.volatility.surface.VolatilitySurfaceFitter: java.util.List _volAdjointFuncs>;

        return $r1;
    }

    static double[][] access$900(com.opengamma.analytics.financial.model.volatility.surface.VolatilitySurfaceFitter)
    {
        com.opengamma.analytics.financial.model.volatility.surface.VolatilitySurfaceFitter r0;
        double[][] $r1;

        r0 := @parameter0: com.opengamma.analytics.financial.model.volatility.surface.VolatilitySurfaceFitter;

        $r1 = r0.<com.opengamma.analytics.financial.model.volatility.surface.VolatilitySurfaceFitter: double[][] _strikes>;

        return $r1;
    }

    static void <clinit>()
    {
        com.opengamma.analytics.math.matrix.OGMatrixAlgebra $r0;
        com.opengamma.analytics.math.statistics.leastsquare.NonLinearLeastSquare $r1;
        com.opengamma.analytics.math.matrix.MatrixAlgebra $r2;
        com.opengamma.analytics.math.linearalgebra.Decomposition $r3;

        $r0 = new com.opengamma.analytics.math.matrix.OGMatrixAlgebra;

        specialinvoke $r0.<com.opengamma.analytics.math.matrix.OGMatrixAlgebra: void <init>()>();

        <com.opengamma.analytics.financial.model.volatility.surface.VolatilitySurfaceFitter: com.opengamma.analytics.math.matrix.MatrixAlgebra MA> = $r0;

        $r1 = new com.opengamma.analytics.math.statistics.leastsquare.NonLinearLeastSquare;

        $r3 = <com.opengamma.analytics.math.linearalgebra.DecompositionFactory: com.opengamma.analytics.math.linearalgebra.Decomposition SV_COLT>;

        $r2 = <com.opengamma.analytics.financial.model.volatility.surface.VolatilitySurfaceFitter: com.opengamma.analytics.math.matrix.MatrixAlgebra MA>;

        specialinvoke $r1.<com.opengamma.analytics.math.statistics.leastsquare.NonLinearLeastSquare: void <init>(com.opengamma.analytics.math.linearalgebra.Decomposition,com.opengamma.analytics.math.matrix.MatrixAlgebra,double)>($r3, $r2, 1.0E-6);

        <com.opengamma.analytics.financial.model.volatility.surface.VolatilitySurfaceFitter: com.opengamma.analytics.math.statistics.leastsquare.NonLinearLeastSquare SOLVER> = $r1;

        return;
    }
}
