public class com.opengamma.analytics.math.curve.DoublesCurveNelsonSiegel extends com.opengamma.analytics.math.curve.DoublesCurve
{
    private static final int NB_PARAMETERS;
    private double[] _parameters;

    protected void <init>()
    {
        com.opengamma.analytics.math.curve.DoublesCurveNelsonSiegel r0;

        r0 := @this: com.opengamma.analytics.math.curve.DoublesCurveNelsonSiegel;

        specialinvoke r0.<com.opengamma.analytics.math.curve.DoublesCurve: void <init>()>();

        return;
    }

    public void <init>(java.lang.String, double, double, double, double)
    {
        com.opengamma.analytics.math.curve.DoublesCurveNelsonSiegel r0;
        java.lang.String r1;
        double d0, d1, d2, d3;
        double[] $r2;

        r0 := @this: com.opengamma.analytics.math.curve.DoublesCurveNelsonSiegel;

        r1 := @parameter0: java.lang.String;

        d0 := @parameter1: double;

        d1 := @parameter2: double;

        d2 := @parameter3: double;

        d3 := @parameter4: double;

        specialinvoke r0.<com.opengamma.analytics.math.curve.DoublesCurve: void <init>(java.lang.String)>(r1);

        $r2 = newarray (double)[4];

        $r2[0] = d0;

        $r2[1] = d1;

        $r2[2] = d2;

        $r2[3] = d3;

        r0.<com.opengamma.analytics.math.curve.DoublesCurveNelsonSiegel: double[] _parameters> = $r2;

        return;
    }

    public void <init>(java.lang.String, double[])
    {
        com.opengamma.analytics.math.curve.DoublesCurveNelsonSiegel r0;
        java.lang.String r1;
        double[] r2;
        int $i0;
        boolean $z0;

        r0 := @this: com.opengamma.analytics.math.curve.DoublesCurveNelsonSiegel;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: double[];

        specialinvoke r0.<com.opengamma.analytics.math.curve.DoublesCurve: void <init>(java.lang.String)>(r1);

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, "parameters");

        $i0 = lengthof r2;

        if $i0 != 4 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z0, "Incorrect number of parameters");

        r0.<com.opengamma.analytics.math.curve.DoublesCurveNelsonSiegel: double[] _parameters> = r2;

        return;
    }

    public java.lang.Double[] getXData()
    {
        com.opengamma.analytics.math.curve.DoublesCurveNelsonSiegel r0;
        java.lang.UnsupportedOperationException $r1;

        r0 := @this: com.opengamma.analytics.math.curve.DoublesCurveNelsonSiegel;

        $r1 = new java.lang.UnsupportedOperationException;

        specialinvoke $r1.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Cannot get x data for Nelson-Siegle curve");

        throw $r1;
    }

    public java.lang.Double[] getYData()
    {
        com.opengamma.analytics.math.curve.DoublesCurveNelsonSiegel r0;
        java.lang.UnsupportedOperationException $r1;

        r0 := @this: com.opengamma.analytics.math.curve.DoublesCurveNelsonSiegel;

        $r1 = new java.lang.UnsupportedOperationException;

        specialinvoke $r1.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Cannot get x data for Nelson-Siegle curve");

        throw $r1;
    }

    public int size()
    {
        com.opengamma.analytics.math.curve.DoublesCurveNelsonSiegel r0;

        r0 := @this: com.opengamma.analytics.math.curve.DoublesCurveNelsonSiegel;

        return 4;
    }

    public java.lang.Double getYValue(java.lang.Double)
    {
        com.opengamma.analytics.math.curve.DoublesCurveNelsonSiegel r0;
        java.lang.Double r1, $r6;
        double d0, d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14;
        double[] $r2, $r3, $r4, $r5;

        r0 := @this: com.opengamma.analytics.math.curve.DoublesCurveNelsonSiegel;

        r1 := @parameter0: java.lang.Double;

        $d2 = virtualinvoke r1.<java.lang.Double: double doubleValue()>();

        $r2 = r0.<com.opengamma.analytics.math.curve.DoublesCurveNelsonSiegel: double[] _parameters>;

        $d3 = $r2[3];

        d0 = $d2 / $d3;

        $d4 = neg d0;

        d1 = staticinvoke <com.opengamma.analytics.math.utilities.Epsilon: double epsilon(double)>($d4);

        $r3 = r0.<com.opengamma.analytics.math.curve.DoublesCurveNelsonSiegel: double[] _parameters>;

        $d7 = $r3[0];

        $r4 = r0.<com.opengamma.analytics.math.curve.DoublesCurveNelsonSiegel: double[] _parameters>;

        $d5 = $r4[1];

        $d6 = $d5 * d1;

        $d9 = $d7 + $d6;

        $r5 = r0.<com.opengamma.analytics.math.curve.DoublesCurveNelsonSiegel: double[] _parameters>;

        $d10 = $r5[2];

        $d8 = neg d0;

        $d11 = staticinvoke <java.lang.Math: double exp(double)>($d8);

        $d12 = d1 - $d11;

        $d13 = $d10 * $d12;

        $d14 = $d9 + $d13;

        $r6 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d14);

        return $r6;
    }

    public double getDyDx(double)
    {
        com.opengamma.analytics.math.curve.DoublesCurveNelsonSiegel r0;
        double d0, d1, d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15;
        double[] $r1, $r2, $r3, $r4;

        r0 := @this: com.opengamma.analytics.math.curve.DoublesCurveNelsonSiegel;

        d0 := @parameter0: double;

        $r1 = r0.<com.opengamma.analytics.math.curve.DoublesCurveNelsonSiegel: double[] _parameters>;

        $d3 = $r1[3];

        d1 = d0 / $d3;

        $d4 = neg d1;

        d2 = staticinvoke <com.opengamma.analytics.math.utilities.Epsilon: double epsilonP(double)>($d4);

        $r2 = r0.<com.opengamma.analytics.math.curve.DoublesCurveNelsonSiegel: double[] _parameters>;

        $d5 = $r2[1];

        $d7 = $d5 * d2;

        $r3 = r0.<com.opengamma.analytics.math.curve.DoublesCurveNelsonSiegel: double[] _parameters>;

        $d8 = $r3[2];

        $d6 = neg d1;

        $d9 = staticinvoke <java.lang.Math: double exp(double)>($d6);

        $d10 = d2 - $d9;

        $d11 = $d8 * $d10;

        $d12 = $d7 + $d11;

        $d14 = neg $d12;

        $r4 = r0.<com.opengamma.analytics.math.curve.DoublesCurveNelsonSiegel: double[] _parameters>;

        $d13 = $r4[3];

        $d15 = $d14 / $d13;

        return $d15;
    }

    public java.lang.Double[] getYValueParameterSensitivity(java.lang.Double)
    {
        com.opengamma.analytics.math.curve.DoublesCurveNelsonSiegel r0;
        java.lang.Double r1, $r7, $r8, $r9, $r12;
        double d0, d1, d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21, $d22, $d23, $d24, $d25, $d26, $d27, $d28, $d29, $d30, $d31, $d32, $d33, $d34, $d35, $d36, $d37, $d38, d39, d40, d41, d42;
        java.lang.Double[] r2;
        double[] $r3, $r4, $r5, $r6, $r10, $r11, $r13;
        byte $b0, $b1;

        r0 := @this: com.opengamma.analytics.math.curve.DoublesCurveNelsonSiegel;

        r1 := @parameter0: java.lang.Double;

        $d4 = virtualinvoke r1.<java.lang.Double: double doubleValue()>();

        $r3 = r0.<com.opengamma.analytics.math.curve.DoublesCurveNelsonSiegel: double[] _parameters>;

        $d5 = $r3[3];

        d0 = $d4 / $d5;

        $d6 = neg d0;

        d1 = staticinvoke <java.lang.Math: double exp(double)>($d6);

        $b0 = d0 cmpg 1.0E-6;

        if $b0 >= 0 goto label1;

        $d38 = 0.5 * d0;

        d39 = 1.0 - $d38;

        goto label2;

     label1:
        $d7 = 1.0 - d1;

        d39 = $d7 / d0;

     label2:
        $r4 = r0.<com.opengamma.analytics.math.curve.DoublesCurveNelsonSiegel: double[] _parameters>;

        $d9 = $r4[1];

        $r5 = r0.<com.opengamma.analytics.math.curve.DoublesCurveNelsonSiegel: double[] _parameters>;

        $d8 = $r5[2];

        $d10 = $d9 + $d8;

        d3 = $d10 * 1.0;

        $b1 = d0 cmpg 1.0E-6;

        if $b1 >= 0 goto label3;

        $r13 = r0.<com.opengamma.analytics.math.curve.DoublesCurveNelsonSiegel: double[] _parameters>;

        $d33 = $r13[2];

        $d34 = neg $d33;

        d40 = $d34 * 1.0;

        $d37 = -0.5 * d3;

        $d35 = neg d1;

        $d36 = $d35 * d40;

        d41 = $d37 + $d36;

        goto label4;

     label3:
        $r6 = r0.<com.opengamma.analytics.math.curve.DoublesCurveNelsonSiegel: double[] _parameters>;

        $d11 = $r6[2];

        $d12 = neg $d11;

        $d15 = $d12 * 1.0;

        $d13 = -1.0 / d0;

        $d14 = $d13 * d3;

        d42 = $d15 + $d14;

        $d16 = 1.0 - d1;

        $d18 = neg $d16;

        $d17 = d0 * d0;

        $d19 = $d18 / $d17;

        $d22 = $d19 * d3;

        $d20 = neg d1;

        $d21 = $d20 * d42;

        d41 = $d22 + $d21;

     label4:
        r2 = newarray (java.lang.Double)[4];

        $r7 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(1.0);

        r2[0] = $r7;

        $d23 = d39 * 1.0;

        $r8 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d23);

        r2[1] = $r8;

        $d24 = d39 - d1;

        $d25 = $d24 * 1.0;

        $r9 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d25);

        r2[2] = $r9;

        $d26 = virtualinvoke r1.<java.lang.Double: double doubleValue()>();

        $d30 = neg $d26;

        $r10 = r0.<com.opengamma.analytics.math.curve.DoublesCurveNelsonSiegel: double[] _parameters>;

        $d28 = $r10[3];

        $r11 = r0.<com.opengamma.analytics.math.curve.DoublesCurveNelsonSiegel: double[] _parameters>;

        $d27 = $r11[3];

        $d29 = $d28 * $d27;

        $d31 = $d30 / $d29;

        $d32 = $d31 * d41;

        $r12 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d32);

        r2[3] = $r12;

        return r2;
    }

    public boolean equals(java.lang.Object)
    {
        com.opengamma.analytics.math.curve.DoublesCurveNelsonSiegel r0, r2;
        java.lang.Object r1;
        boolean $z0, $z1;
        java.lang.Class $r3, $r4;
        double[] $r5, $r6;

        r0 := @this: com.opengamma.analytics.math.curve.DoublesCurveNelsonSiegel;

        r1 := @parameter0: java.lang.Object;

        if r0 != r1 goto label1;

        return 1;

     label1:
        $z0 = specialinvoke r0.<com.opengamma.analytics.math.curve.DoublesCurve: boolean equals(java.lang.Object)>(r1);

        if $z0 != 0 goto label2;

        return 0;

     label2:
        $r3 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r4 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        if $r3 == $r4 goto label3;

        return 0;

     label3:
        r2 = (com.opengamma.analytics.math.curve.DoublesCurveNelsonSiegel) r1;

        $r6 = r0.<com.opengamma.analytics.math.curve.DoublesCurveNelsonSiegel: double[] _parameters>;

        $r5 = r2.<com.opengamma.analytics.math.curve.DoublesCurveNelsonSiegel: double[] _parameters>;

        $z1 = staticinvoke <java.util.Arrays: boolean equals(double[],double[])>($r6, $r5);

        if $z1 != 0 goto label4;

        return 0;

     label4:
        return 1;
    }

    public int hashCode()
    {
        com.opengamma.analytics.math.curve.DoublesCurveNelsonSiegel r0;
        double[] $r1;
        int $i1, $i2, i3, i4;

        r0 := @this: com.opengamma.analytics.math.curve.DoublesCurveNelsonSiegel;

        i3 = specialinvoke r0.<com.opengamma.analytics.math.curve.DoublesCurve: int hashCode()>();

        $i1 = 31 * i3;

        $r1 = r0.<com.opengamma.analytics.math.curve.DoublesCurveNelsonSiegel: double[] _parameters>;

        $i2 = staticinvoke <java.util.Arrays: int hashCode(double[])>($r1);

        i4 = $i1 + $i2;

        return i4;
    }

    public static com.opengamma.analytics.math.curve.DoublesCurveNelsonSiegel$Meta meta()
    {
        com.opengamma.analytics.math.curve.DoublesCurveNelsonSiegel$Meta $r0;

        $r0 = <com.opengamma.analytics.math.curve.DoublesCurveNelsonSiegel$Meta: com.opengamma.analytics.math.curve.DoublesCurveNelsonSiegel$Meta INSTANCE>;

        return $r0;
    }

    public com.opengamma.analytics.math.curve.DoublesCurveNelsonSiegel$Meta metaBean()
    {
        com.opengamma.analytics.math.curve.DoublesCurveNelsonSiegel r0;
        com.opengamma.analytics.math.curve.DoublesCurveNelsonSiegel$Meta $r1;

        r0 := @this: com.opengamma.analytics.math.curve.DoublesCurveNelsonSiegel;

        $r1 = <com.opengamma.analytics.math.curve.DoublesCurveNelsonSiegel$Meta: com.opengamma.analytics.math.curve.DoublesCurveNelsonSiegel$Meta INSTANCE>;

        return $r1;
    }

    private double[] getParameters()
    {
        com.opengamma.analytics.math.curve.DoublesCurveNelsonSiegel r0;
        double[] $r1;

        r0 := @this: com.opengamma.analytics.math.curve.DoublesCurveNelsonSiegel;

        $r1 = r0.<com.opengamma.analytics.math.curve.DoublesCurveNelsonSiegel: double[] _parameters>;

        return $r1;
    }

    private void setParameters(double[])
    {
        com.opengamma.analytics.math.curve.DoublesCurveNelsonSiegel r0;
        double[] r1;

        r0 := @this: com.opengamma.analytics.math.curve.DoublesCurveNelsonSiegel;

        r1 := @parameter0: double[];

        staticinvoke <org.joda.beans.JodaBeanUtils: void notNull(java.lang.Object,java.lang.String)>(r1, "parameters");

        r0.<com.opengamma.analytics.math.curve.DoublesCurveNelsonSiegel: double[] _parameters> = r1;

        return;
    }

    public final org.joda.beans.Property parameters()
    {
        com.opengamma.analytics.math.curve.DoublesCurveNelsonSiegel r0;
        com.opengamma.analytics.math.curve.DoublesCurveNelsonSiegel$Meta $r1;
        org.joda.beans.MetaProperty $r2;
        org.joda.beans.Property $r3;

        r0 := @this: com.opengamma.analytics.math.curve.DoublesCurveNelsonSiegel;

        $r1 = virtualinvoke r0.<com.opengamma.analytics.math.curve.DoublesCurveNelsonSiegel: com.opengamma.analytics.math.curve.DoublesCurveNelsonSiegel$Meta metaBean()>();

        $r2 = virtualinvoke $r1.<com.opengamma.analytics.math.curve.DoublesCurveNelsonSiegel$Meta: org.joda.beans.MetaProperty parameters()>();

        $r3 = interfaceinvoke $r2.<org.joda.beans.MetaProperty: org.joda.beans.Property createProperty(org.joda.beans.Bean)>(r0);

        return $r3;
    }

    public com.opengamma.analytics.math.curve.DoublesCurveNelsonSiegel clone()
    {
        com.opengamma.analytics.math.curve.DoublesCurveNelsonSiegel r0, $r2;
        org.joda.beans.Bean $r1;

        r0 := @this: com.opengamma.analytics.math.curve.DoublesCurveNelsonSiegel;

        $r1 = staticinvoke <org.joda.beans.JodaBeanUtils: org.joda.beans.Bean cloneAlways(org.joda.beans.Bean)>(r0);

        $r2 = (com.opengamma.analytics.math.curve.DoublesCurveNelsonSiegel) $r1;

        return $r2;
    }

    public java.lang.String toString()
    {
        com.opengamma.analytics.math.curve.DoublesCurveNelsonSiegel r0;
        int i0, $i1, $i2, $i3;
        java.lang.StringBuilder $r2;
        java.lang.String $r5;

        r0 := @this: com.opengamma.analytics.math.curve.DoublesCurveNelsonSiegel;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(int)>(64);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("DoublesCurveNelsonSiegel{");

        i0 = virtualinvoke $r2.<java.lang.StringBuilder: int length()>();

        virtualinvoke r0.<com.opengamma.analytics.math.curve.DoublesCurveNelsonSiegel: void toString(java.lang.StringBuilder)>($r2);

        $i1 = virtualinvoke $r2.<java.lang.StringBuilder: int length()>();

        if $i1 <= i0 goto label1;

        $i2 = virtualinvoke $r2.<java.lang.StringBuilder: int length()>();

        $i3 = $i2 - 2;

        virtualinvoke $r2.<java.lang.StringBuilder: void setLength(int)>($i3);

     label1:
        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(125);

        $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r5;
    }

    protected void toString(java.lang.StringBuilder)
    {
        com.opengamma.analytics.math.curve.DoublesCurveNelsonSiegel r0;
        java.lang.StringBuilder r1, $r2, $r3, $r6, $r7;
        double[] $r4;
        java.lang.String $r5;

        r0 := @this: com.opengamma.analytics.math.curve.DoublesCurveNelsonSiegel;

        r1 := @parameter0: java.lang.StringBuilder;

        specialinvoke r0.<com.opengamma.analytics.math.curve.DoublesCurve: void toString(java.lang.StringBuilder)>(r1);

        $r2 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("parameters");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(61);

        $r4 = specialinvoke r0.<com.opengamma.analytics.math.curve.DoublesCurveNelsonSiegel: double[] getParameters()>();

        $r5 = staticinvoke <org.joda.beans.JodaBeanUtils: java.lang.String toString(java.lang.Object)>($r4);

        $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(44);

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

        return;
    }

    public volatile com.opengamma.analytics.math.curve.DoublesCurve$Meta metaBean()
    {
        com.opengamma.analytics.math.curve.DoublesCurveNelsonSiegel r0;
        com.opengamma.analytics.math.curve.DoublesCurveNelsonSiegel$Meta $r1;

        r0 := @this: com.opengamma.analytics.math.curve.DoublesCurveNelsonSiegel;

        $r1 = virtualinvoke r0.<com.opengamma.analytics.math.curve.DoublesCurveNelsonSiegel: com.opengamma.analytics.math.curve.DoublesCurveNelsonSiegel$Meta metaBean()>();

        return $r1;
    }

    public volatile com.opengamma.analytics.math.curve.Curve clone()
    {
        com.opengamma.analytics.math.curve.DoublesCurveNelsonSiegel r0, $r1;

        r0 := @this: com.opengamma.analytics.math.curve.DoublesCurveNelsonSiegel;

        $r1 = virtualinvoke r0.<com.opengamma.analytics.math.curve.DoublesCurveNelsonSiegel: com.opengamma.analytics.math.curve.DoublesCurveNelsonSiegel clone()>();

        return $r1;
    }

    public volatile com.opengamma.analytics.math.curve.Curve$Meta metaBean()
    {
        com.opengamma.analytics.math.curve.DoublesCurveNelsonSiegel r0;
        com.opengamma.analytics.math.curve.DoublesCurveNelsonSiegel$Meta $r1;

        r0 := @this: com.opengamma.analytics.math.curve.DoublesCurveNelsonSiegel;

        $r1 = virtualinvoke r0.<com.opengamma.analytics.math.curve.DoublesCurveNelsonSiegel: com.opengamma.analytics.math.curve.DoublesCurveNelsonSiegel$Meta metaBean()>();

        return $r1;
    }

    public volatile java.lang.Object getYValue(java.lang.Comparable)
    {
        com.opengamma.analytics.math.curve.DoublesCurveNelsonSiegel r0;
        java.lang.Comparable r1;
        java.lang.Double $r2, $r3;

        r0 := @this: com.opengamma.analytics.math.curve.DoublesCurveNelsonSiegel;

        r1 := @parameter0: java.lang.Comparable;

        $r2 = (java.lang.Double) r1;

        $r3 = virtualinvoke r0.<com.opengamma.analytics.math.curve.DoublesCurveNelsonSiegel: java.lang.Double getYValue(java.lang.Double)>($r2);

        return $r3;
    }

    public volatile java.lang.Object[] getYData()
    {
        com.opengamma.analytics.math.curve.DoublesCurveNelsonSiegel r0;
        java.lang.Double[] $r1;

        r0 := @this: com.opengamma.analytics.math.curve.DoublesCurveNelsonSiegel;

        $r1 = virtualinvoke r0.<com.opengamma.analytics.math.curve.DoublesCurveNelsonSiegel: java.lang.Double[] getYData()>();

        return $r1;
    }

    public volatile java.lang.Comparable[] getXData()
    {
        com.opengamma.analytics.math.curve.DoublesCurveNelsonSiegel r0;
        java.lang.Double[] $r1;

        r0 := @this: com.opengamma.analytics.math.curve.DoublesCurveNelsonSiegel;

        $r1 = virtualinvoke r0.<com.opengamma.analytics.math.curve.DoublesCurveNelsonSiegel: java.lang.Double[] getXData()>();

        return $r1;
    }

    public volatile org.joda.beans.MetaBean metaBean()
    {
        com.opengamma.analytics.math.curve.DoublesCurveNelsonSiegel r0;
        com.opengamma.analytics.math.curve.DoublesCurveNelsonSiegel$Meta $r1;
        org.joda.beans.MetaBean r2;

        r0 := @this: com.opengamma.analytics.math.curve.DoublesCurveNelsonSiegel;

        $r1 = virtualinvoke r0.<com.opengamma.analytics.math.curve.DoublesCurveNelsonSiegel: com.opengamma.analytics.math.curve.DoublesCurveNelsonSiegel$Meta metaBean()>();

        r2 = (org.joda.beans.MetaBean) $r1;

        return r2;
    }

    public volatile java.lang.Object clone() throws java.lang.CloneNotSupportedException
    {
        com.opengamma.analytics.math.curve.DoublesCurveNelsonSiegel r0, $r1;

        r0 := @this: com.opengamma.analytics.math.curve.DoublesCurveNelsonSiegel;

        $r1 = virtualinvoke r0.<com.opengamma.analytics.math.curve.DoublesCurveNelsonSiegel: com.opengamma.analytics.math.curve.DoublesCurveNelsonSiegel clone()>();

        return $r1;
    }

    static double[] access$000(com.opengamma.analytics.math.curve.DoublesCurveNelsonSiegel)
    {
        com.opengamma.analytics.math.curve.DoublesCurveNelsonSiegel r0;
        double[] $r1;

        r0 := @parameter0: com.opengamma.analytics.math.curve.DoublesCurveNelsonSiegel;

        $r1 = specialinvoke r0.<com.opengamma.analytics.math.curve.DoublesCurveNelsonSiegel: double[] getParameters()>();

        return $r1;
    }

    static void access$100(com.opengamma.analytics.math.curve.DoublesCurveNelsonSiegel, double[])
    {
        com.opengamma.analytics.math.curve.DoublesCurveNelsonSiegel r0;
        double[] r1;

        r0 := @parameter0: com.opengamma.analytics.math.curve.DoublesCurveNelsonSiegel;

        r1 := @parameter1: double[];

        specialinvoke r0.<com.opengamma.analytics.math.curve.DoublesCurveNelsonSiegel: void setParameters(double[])>(r1);

        return;
    }

    static double[] access$200(com.opengamma.analytics.math.curve.DoublesCurveNelsonSiegel)
    {
        com.opengamma.analytics.math.curve.DoublesCurveNelsonSiegel r0;
        double[] $r1;

        r0 := @parameter0: com.opengamma.analytics.math.curve.DoublesCurveNelsonSiegel;

        $r1 = r0.<com.opengamma.analytics.math.curve.DoublesCurveNelsonSiegel: double[] _parameters>;

        return $r1;
    }

    static void <clinit>()
    {
        com.opengamma.analytics.math.curve.DoublesCurveNelsonSiegel$Meta $r0;
        org.joda.beans.MetaBean r1;

        <com.opengamma.analytics.math.curve.DoublesCurveNelsonSiegel: int NB_PARAMETERS> = 4;

        $r0 = <com.opengamma.analytics.math.curve.DoublesCurveNelsonSiegel$Meta: com.opengamma.analytics.math.curve.DoublesCurveNelsonSiegel$Meta INSTANCE>;

        r1 = (org.joda.beans.MetaBean) $r0;

        staticinvoke <org.joda.beans.JodaBeanUtils: void registerMetaBean(org.joda.beans.MetaBean)>(r1);

        return;
    }
}
